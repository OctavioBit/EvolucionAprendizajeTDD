

----STARTUP---- (5 November 2020 14:17:58) as /Users/ilanolkies/uba/ingsoft1/macos64 6/CuisUniversity-4384.image!


----End fileIn of /Users/ilanolkies/uba/ingsoft1/ingeSoft-2020-2c/18-Portfolio/Portfolio-Ejercicio.st----!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'IO 11/5/2020 14:21:40'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'IO 11/5/2020 14:21:40'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'IO 11/5/2020 14:21:40'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'IO 11/5/2020 14:21:40'!
FAILURE!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'IO 11/5/2020 14:21:40'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'IO 11/5/2020 14:21:40'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'IO 11/5/2020 14:21:40'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'IO 11/5/2020 14:21:40'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'IO 11/5/2020 14:21:40'!
FAILURE!

!classRemoval: #ReceptiveAccount stamp: 'IO 11/5/2020 14:22:12'!
Object subclass: #ReceptiveAccount
	instanceVariableNames: 'transactions'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classRemoval: #Withdraw stamp: 'IO 11/5/2020 14:22:13'!
AccountTransaction subclass: #Withdraw
	instanceVariableNames: 'value'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classRemoval: #Deposit stamp: 'IO 11/5/2020 14:22:13'!
AccountTransaction subclass: #Deposit
	instanceVariableNames: 'value'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classRemoval: #AccountTransaction stamp: 'IO 11/5/2020 14:22:14'!
Object subclass: #AccountTransaction
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classRemoval: #ReceptiveAccountTest stamp: 'IO 11/5/2020 14:22:15'!
TestCase subclass: #ReceptiveAccountTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

----End fileIn of /Users/ilanolkies/uba/ingsoft1/ingeSoft-2020-2c/18-Portfolio/Portfolio-Ejercicio.st----!

!testRun: #PortfolioTest #test01AnAccountCanBeAddedToAPortfolio stamp: 'IO 11/5/2020 14:23:28'!
PASSED!

!testRun: #PortfolioTest #test02APortfolioDoesNotHaveMoreAccountsThanAdded stamp: 'IO 11/5/2020 14:23:28'!
PASSED!

!testRun: #PortfolioTest #test03MoreThanOneAccountCanBeAddedToAPortfolio stamp: 'IO 11/5/2020 14:23:28'!
PASSED!

!testRun: #PortfolioTest #test04AnEmptyPortfolioHasABalanceOf0 stamp: 'IO 11/5/2020 14:23:28'!
PASSED!

!testRun: #PortfolioTest #test05APortfolioWithOneAccountShouldHaveABalanceEqualToThatOfTheAccount stamp: 'IO 11/5/2020 14:23:28'!
PASSED!

!testRun: #PortfolioTest #test06APortfolioWithManyAccountsShouldHaveABalanceEqualToTheSumOfItsAccounts stamp: 'IO 11/5/2020 14:23:28'!
PASSED!
!PortfolioTest methodsFor: 'tests' stamp: 'IO 11/5/2020 14:27:28' prior: 50868084!
test02APortfolioDoesNotHaveMoreAccountsThanAdded
	|anAccount1 anAccount2 aPortfolio|
	
	anAccount1 :=  ReceptiveAccount new.
	Deposit register: 100 on: anAccount1.
	anAccount2 :=  ReceptiveAccount new.
	Deposit register: 200 on: anAccount2.
	
	aPortfolio := Portfolio new.
	aPortfolio addAccount: anAccount1.

	self deny: (aPortfolio includesAccount: anAccount2).
! !
!PortfolioTest methodsFor: 'tests' stamp: 'IO 11/5/2020 14:28:26'!
test03APortfolioDoesNotHaveMoreAccountsThanAdded
	|anAccount1 anAccount2 aPortfolio|
	
	anAccount1 :=  ReceptiveAccount new.
	Deposit register: 100 on: anAccount1.
	anAccount2 :=  ReceptiveAccount new.
	Deposit register: 200 on: anAccount2.
	
	aPortfolio := Portfolio new.
	aPortfolio addAccount: anAccount1.

	self deny: (aPortfolio includesAccount: anAccount2).
! !
!PortfolioTest methodsFor: 'tests' stamp: 'IO 11/5/2020 14:29:36'!
test02APortfolioHasNoAccountsInitially
	|anAccount1 anAccount2 aPortfolio|
	
	anAccount1 :=  ReceptiveAccount new.
	Deposit register: 100 on: anAccount1.
	anAccount2 :=  ReceptiveAccount new.
	Deposit register: 200 on: anAccount2.
	
	aPortfolio := Portfolio new.
	aPortfolio addAccount: anAccount1.

	self deny: (aPortfolio includesAccount: anAccount2).
! !

!methodRemoval: PortfolioTest #test02APortfolioDoesNotHaveMoreAccountsThanAdded stamp: 'IO 11/5/2020 14:29:36'!
test02APortfolioDoesNotHaveMoreAccountsThanAdded
	|anAccount1 anAccount2 aPortfolio|
	
	anAccount1 :=  ReceptiveAccount new.
	Deposit register: 100 on: anAccount1.
	anAccount2 :=  ReceptiveAccount new.
	Deposit register: 200 on: anAccount2.
	
	aPortfolio := Portfolio new.
	aPortfolio addAccount: anAccount1.

	self deny: (aPortfolio includesAccount: anAccount2).
!
!PortfolioTest methodsFor: 'tests' stamp: 'IO 11/5/2020 14:29:47' prior: 50868495!
test02APortfolioHasNoAccountsInitially
	|anAccount1 anAccount2 aPortfolio|
	
	anAccount1 :=  ReceptiveAccount new.
	Deposit register: 100 on: anAccount1.

	self deny: (aPortfolio includesAccount: anAccount1).
! !
!PortfolioTest methodsFor: 'tests' stamp: 'IO 11/5/2020 14:29:58' prior: 50868524!
test02APortfolioHasNoAccountsInitially
	|anAccount1 aPortfolio|
	
	anAccount1 :=  ReceptiveAccount new.
	Deposit register: 100 on: anAccount1.
	
	aPortfolio := Portfolio new.

	self deny: (aPortfolio includesAccount: anAccount1).
! !

!testRun: #PortfolioTest #test02APortfolioHasNoAccountsInitially stamp: 'IO 11/5/2020 14:30:04'!
PASSED!

!testRun: #PortfolioTest #test01AnAccountCanBeAddedToAPortfolio stamp: 'IO 11/5/2020 14:30:04'!
PASSED!

!testRun: #PortfolioTest #test02APortfolioHasNoAccountsInitially stamp: 'IO 11/5/2020 14:30:04'!
PASSED!

!testRun: #PortfolioTest #test03APortfolioDoesNotHaveMoreAccountsThanAdded stamp: 'IO 11/5/2020 14:30:04'!
PASSED!

!testRun: #PortfolioTest #test03MoreThanOneAccountCanBeAddedToAPortfolio stamp: 'IO 11/5/2020 14:30:04'!
PASSED!

!testRun: #PortfolioTest #test04AnEmptyPortfolioHasABalanceOf0 stamp: 'IO 11/5/2020 14:30:04'!
PASSED!

!testRun: #PortfolioTest #test05APortfolioWithOneAccountShouldHaveABalanceEqualToThatOfTheAccount stamp: 'IO 11/5/2020 14:30:04'!
PASSED!

!testRun: #PortfolioTest #test06APortfolioWithManyAccountsShouldHaveABalanceEqualToTheSumOfItsAccounts stamp: 'IO 11/5/2020 14:30:04'!
PASSED!
!PortfolioTest methodsFor: 'tests' stamp: 'IO 11/5/2020 14:30:12'!
test04MoreThanOneAccountCanBeAddedToAPortfolio
	|anAccount1 anAccount2 aPortfolio|
	
	anAccount1 :=  ReceptiveAccount new.
	Deposit register: 100 on: anAccount1.
	anAccount2 :=  ReceptiveAccount new.
	Deposit register: 200 on: anAccount2.
	
	aPortfolio := Portfolio new.
	aPortfolio addAccount: anAccount1.
	aPortfolio addAccount: anAccount2.
	
	self assert: (aPortfolio includesAccount: anAccount1).
	self assert: (aPortfolio includesAccount: anAccount2).
! !

!methodRemoval: PortfolioTest #test03MoreThanOneAccountCanBeAddedToAPortfolio stamp: 'IO 11/5/2020 14:30:12'!
test03MoreThanOneAccountCanBeAddedToAPortfolio
	|anAccount1 anAccount2 aPortfolio|
	
	anAccount1 :=  ReceptiveAccount new.
	Deposit register: 100 on: anAccount1.
	anAccount2 :=  ReceptiveAccount new.
	Deposit register: 200 on: anAccount2.
	
	aPortfolio := Portfolio new.
	aPortfolio addAccount: anAccount1.
	aPortfolio addAccount: anAccount2.
	
	self assert: (aPortfolio includesAccount: anAccount1).
	self assert: (aPortfolio includesAccount: anAccount2).
!

!methodRemoval: PortfolioTest #test04AnEmptyPortfolioHasABalanceOf0 stamp: 'IO 11/5/2020 14:31:37'!
test04AnEmptyPortfolioHasABalanceOf0
	|aPortfolio|
	
	aPortfolio := Portfolio new.
	
	self assert: 0 equals: aPortfolio balance.
!

!methodRemoval: PortfolioTest #test05APortfolioWithOneAccountShouldHaveABalanceEqualToThatOfTheAccount stamp: 'IO 11/5/2020 14:31:39'!
test05APortfolioWithOneAccountShouldHaveABalanceEqualToThatOfTheAccount
	|aPortfolio anAccount|
	
	anAccount :=  ReceptiveAccount new.
	Deposit register: 100 on: anAccount.
	aPortfolio := Portfolio new.
	
	aPortfolio addAccount: anAccount.
	
	self assert: anAccount balance equals: aPortfolio balance.
!

!methodRemoval: PortfolioTest #test06APortfolioWithManyAccountsShouldHaveABalanceEqualToTheSumOfItsAccounts stamp: 'IO 11/5/2020 14:31:39'!
test06APortfolioWithManyAccountsShouldHaveABalanceEqualToTheSumOfItsAccounts
	|aPortfolio anAccount1 anAccount2|
	
	anAccount1 :=  ReceptiveAccount new.
	Deposit register: 100 on: anAccount1.
	anAccount2 :=  ReceptiveAccount new.
	Deposit register: 200 on: anAccount2.
	aPortfolio := Portfolio new.
	
	aPortfolio addAccount: anAccount1.
	aPortfolio addAccount: anAccount2.
	
	self 
		assert: (anAccount1 balance + anAccount2 balance)
		equals: aPortfolio balance.
!

!methodRemoval: Portfolio #balance stamp: 'IO 11/5/2020 14:31:45'!
balance
	|aBalance|
	aBalance := 0.
	accounts do: [:anAccount | aBalance:= aBalance + anAccount balance].
	^aBalance.!

!testRun: #PortfolioTest #test01AnAccountCanBeAddedToAPortfolio stamp: 'IO 11/5/2020 14:31:51'!
PASSED!

!testRun: #PortfolioTest #test02APortfolioHasNoAccountsInitially stamp: 'IO 11/5/2020 14:31:51'!
PASSED!

!testRun: #PortfolioTest #test03APortfolioDoesNotHaveMoreAccountsThanAdded stamp: 'IO 11/5/2020 14:31:51'!
PASSED!

!testRun: #PortfolioTest #test04MoreThanOneAccountCanBeAddedToAPortfolio stamp: 'IO 11/5/2020 14:31:51'!
PASSED!
!ReceptiveAccount methodsFor: 'balance' stamp: 'IO 11/5/2020 14:33:02' prior: 50868426!
balance
	|aBalance|
	aBalance := 0.
	transactions do: [ :aTransaction |aBalance:= aTransaction addToBalance: aBalance].
	^aBalance
! !

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'IO 11/5/2020 14:33:03'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'IO 11/5/2020 14:33:03'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'IO 11/5/2020 14:33:03'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'IO 11/5/2020 14:33:03'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'IO 11/5/2020 14:33:03'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'IO 11/5/2020 14:33:03'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'IO 11/5/2020 14:33:03'!
PASSED!
!PortfolioTest methodsFor: 'tests' stamp: 'IO 11/5/2020 14:37:14' prior: 50868073!
test01AnAccountCanBeAddedToAPortfolio

	"una cuenta puede ser agregada a un prtfolio"

	|anAccount aPortfolio|
	
	anAccount :=  ReceptiveAccount new.
	Deposit register: 100 on: anAccount.
	
	aPortfolio := Portfolio new.
	aPortfolio addAccount: anAccount.
	
	self assert: (aPortfolio includesAccount: anAccount).
! !
!PortfolioTest methodsFor: 'tests' stamp: 'IO 11/5/2020 14:37:27' prior: 50868534!
test02APortfolioHasNoAccountsInitially

	"un portfolio no tiene cuentas inicialmente"

	|anAccount1 aPortfolio|
	
	anAccount1 :=  ReceptiveAccount new.
	Deposit register: 100 on: anAccount1.
	
	aPortfolio := Portfolio new.

	self deny: (aPortfolio includesAccount: anAccount1).
! !
!PortfolioTest methodsFor: 'tests' stamp: 'IO 11/5/2020 14:39:23' prior: 50868481!
test03APortfolioDoesNotHaveMoreAccountsThanAdded

	"se puede agregar mas de una cuenta a un portfolio"

	|anAccount1 anAccount2 aPortfolio|
	
	anAccount1 :=  ReceptiveAccount new.
	Deposit register: 100 on: anAccount1.
	anAccount2 :=  ReceptiveAccount new.
	Deposit register: 200 on: anAccount2.
	
	aPortfolio := Portfolio new.
	aPortfolio addAccount: anAccount1.

	self deny: (aPortfolio includesAccount: anAccount2).
! !
!PortfolioTest methodsFor: 'tests' stamp: 'IO 11/5/2020 14:40:07' prior: 50868727!
test03APortfolioDoesNotHaveMoreAccountsThanAdded

	"una cuenta que no fue agregada a un portfolio no esta en un portfolio"

	|anAccount1 anAccount2 aPortfolio|
	
	anAccount1 :=  ReceptiveAccount new.
	Deposit register: 100 on: anAccount1.
	anAccount2 :=  ReceptiveAccount new.
	Deposit register: 200 on: anAccount2.
	
	aPortfolio := Portfolio new.
	aPortfolio addAccount: anAccount1.

	self deny: (aPortfolio includesAccount: anAccount2).
! !
!PortfolioTest methodsFor: 'tests' stamp: 'IO 11/5/2020 14:40:16' prior: 50868573!
test04MoreThanOneAccountCanBeAddedToAPortfolio

	"se puede agregar mas de una cuenta a un portfolio"

	|anAccount1 anAccount2 aPortfolio|
	
	anAccount1 :=  ReceptiveAccount new.
	Deposit register: 100 on: anAccount1.
	anAccount2 :=  ReceptiveAccount new.
	Deposit register: 200 on: anAccount2.
	
	aPortfolio := Portfolio new.
	aPortfolio addAccount: anAccount1.
	aPortfolio addAccount: anAccount2.
	
	self assert: (aPortfolio includesAccount: anAccount1).
	self assert: (aPortfolio includesAccount: anAccount2).
! !
!PortfolioTest methodsFor: 'tests' stamp: 'IO 11/5/2020 14:41:39'!
test05
	
	"un portfolio no tiene portfolios inicialmente"
	
	| portfolio1 portfolio2 |
	
	portfolio1 := Portfolio new.
	portfolio2 := Portfolio new.
	
	self deny: (portfolio1 hasPortfolio: portfolio2).
! !

!testRun: #PortfolioTest #test05 stamp: 'IO 11/5/2020 14:42:50'!
ERROR!
!Portfolio methodsFor: 'portfolios' stamp: 'IO 11/5/2020 14:43:01'!
hasPortfolio: aPortfolio 
	self shouldBeImplemented.! !
!Portfolio methodsFor: 'portfolios' stamp: 'IO 11/5/2020 14:43:08' prior: 50868790!
hasPortfolio: aPortfolio 
	^false.
! !

!testRun: #PortfolioTest #test05 stamp: 'IO 11/5/2020 14:43:12'!
PASSED!

!testRun: #PortfolioTest #test01AnAccountCanBeAddedToAPortfolio stamp: 'IO 11/5/2020 14:43:12'!
PASSED!

!testRun: #PortfolioTest #test02APortfolioHasNoAccountsInitially stamp: 'IO 11/5/2020 14:43:12'!
PASSED!

!testRun: #PortfolioTest #test03APortfolioDoesNotHaveMoreAccountsThanAdded stamp: 'IO 11/5/2020 14:43:12'!
PASSED!

!testRun: #PortfolioTest #test04MoreThanOneAccountCanBeAddedToAPortfolio stamp: 'IO 11/5/2020 14:43:12'!
PASSED!

!testRun: #PortfolioTest #test05 stamp: 'IO 11/5/2020 14:43:12'!
PASSED!
!PortfolioTest methodsFor: 'tests' stamp: 'IO 11/5/2020 14:43:56'!
test06
	
	"a un portfolio se le puede agregar un portfolio sin cuentas"
	
	| portfolio1 portfolio2 |
	
	portfolio1 := Portfolio new.
	portfolio2 := Portfolio new.
	
	portfolio1 addPortfolio: portfolio2.
	
	self assert: (portfolio1 hasPortfolio: portfolio2).
! !

!testRun: #PortfolioTest #test06 stamp: 'IO 11/5/2020 14:44:01'!
ERROR!
!Portfolio methodsFor: 'portfolio' stamp: 'IO 11/5/2020 14:44:13'!
addPortfolio: aPortfolio 
	self shouldBeImplemented.! !

!classDefinition: #Portfolio category: 'Portfolio-Ejercicio' stamp: 'IO 11/5/2020 14:44:38'!
Object subclass: #Portfolio
	instanceVariableNames: 'accounts childPortfolio'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!
!Portfolio methodsFor: 'portfolio' stamp: 'IO 11/5/2020 14:44:34' prior: 50868830!
addPortfolio: aPortfolio 
	childPortfolio := aPortfolio ! !

!testRun: #PortfolioTest #test01AnAccountCanBeAddedToAPortfolio stamp: 'IO 11/5/2020 14:44:45'!
PASSED!

!testRun: #PortfolioTest #test02APortfolioHasNoAccountsInitially stamp: 'IO 11/5/2020 14:44:45'!
PASSED!

!testRun: #PortfolioTest #test03APortfolioDoesNotHaveMoreAccountsThanAdded stamp: 'IO 11/5/2020 14:44:45'!
PASSED!

!testRun: #PortfolioTest #test04MoreThanOneAccountCanBeAddedToAPortfolio stamp: 'IO 11/5/2020 14:44:45'!
PASSED!

!testRun: #PortfolioTest #test05 stamp: 'IO 11/5/2020 14:44:45'!
PASSED!

!testRun: #PortfolioTest #test06 stamp: 'IO 11/5/2020 14:44:45'!
FAILURE!

!testRun: #PortfolioTest #test06 stamp: 'IO 11/5/2020 14:44:45'!
FAILURE!

!testRun: #PortfolioTest #test06 stamp: 'IO 11/5/2020 14:44:47'!
FAILURE!

!testRun: #PortfolioTest #test06 stamp: 'IO 11/5/2020 14:44:49'!
PASSED!

!testRun: #PortfolioTest #test06 stamp: 'IO 11/5/2020 14:44:51'!
FAILURE!
!Portfolio methodsFor: 'portfolios' stamp: 'IO 11/5/2020 14:45:10' prior: 50868795!
hasPortfolio: aPortfolio 
	^childPortfolio = aPortfolio .
! !

!testRun: #PortfolioTest #test01AnAccountCanBeAddedToAPortfolio stamp: 'IO 11/5/2020 14:45:11'!
PASSED!

!testRun: #PortfolioTest #test02APortfolioHasNoAccountsInitially stamp: 'IO 11/5/2020 14:45:11'!
PASSED!

!testRun: #PortfolioTest #test03APortfolioDoesNotHaveMoreAccountsThanAdded stamp: 'IO 11/5/2020 14:45:11'!
PASSED!

!testRun: #PortfolioTest #test04MoreThanOneAccountCanBeAddedToAPortfolio stamp: 'IO 11/5/2020 14:45:11'!
PASSED!

!testRun: #PortfolioTest #test05 stamp: 'IO 11/5/2020 14:45:11'!
PASSED!

!testRun: #PortfolioTest #test06 stamp: 'IO 11/5/2020 14:45:11'!
PASSED!
!PortfolioTest methodsFor: 'tests' stamp: 'IO 11/5/2020 14:46:54'!
test08
	
	"a un portfolio se le puede agregar mas de un portfolio sin cuentas"
	
	| portfolio1 portfolio2 portfolio3 |
	
	portfolio1 := Portfolio new.
	portfolio2 := Portfolio new.
	portfolio3 := Portfolio new.
	
	portfolio1 addPortfolio: portfolio2.
	portfolio1 addPortfolio: portfolio3.
	
	self assert: (portfolio1 hasPortfolio: portfolio2).
	self assert: (portfolio1 hasPortfolio: portfolio3).
! !

!testRun: #PortfolioTest #test08 stamp: 'IO 11/5/2020 14:46:55'!
FAILURE!

Object subclass: #Portfolio
	instanceVariableNames: 'accounts childrenPortfolios'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classDefinition: #Portfolio category: 'Portfolio-Ejercicio' stamp: 'IO 11/5/2020 14:47:12'!
Object subclass: #Portfolio
	instanceVariableNames: 'accounts childrenPortfolios'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

Object subclass: #Portfolio
	instanceVariableNames: 'accounts portfolios'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classDefinition: #Portfolio category: 'Portfolio-Ejercicio' stamp: 'IO 11/5/2020 14:47:24'!
Object subclass: #Portfolio
	instanceVariableNames: 'accounts portfolios'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!
!Portfolio methodsFor: 'portfolio' stamp: 'IO 11/5/2020 14:47:31' prior: 50868843!
addPortfolio: aPortfolio 
! !
!Portfolio methodsFor: 'initialization' stamp: 'IO 11/5/2020 14:48:39' prior: 50868388 overrides: 16896425!
initialize

	accounts := OrderedCollection new.
	portfolios := OrderedCollection new.! !
!Portfolio methodsFor: 'portfolios' stamp: 'IO 11/5/2020 14:48:55' prior: 50868876!
hasPortfolio: aPortfolio 
	portfolios add: aPortfolio.

! !
!Portfolio methodsFor: 'portfolios' stamp: 'IO 11/5/2020 14:49:25' prior: 50868943!
addPortfolio: aPortfolio 
	portfolios add: aPortfolio.

! !
!Portfolio methodsFor: 'portfolios' stamp: 'IO 11/5/2020 14:49:38' prior: 50868954!
hasPortfolio: aPortfolio 
	^portfolios includes: aPortfolio.

! !

!testRun: #PortfolioTest #test01AnAccountCanBeAddedToAPortfolio stamp: 'IO 11/5/2020 14:49:39'!
PASSED!

!testRun: #PortfolioTest #test02APortfolioHasNoAccountsInitially stamp: 'IO 11/5/2020 14:49:39'!
PASSED!

!testRun: #PortfolioTest #test03APortfolioDoesNotHaveMoreAccountsThanAdded stamp: 'IO 11/5/2020 14:49:39'!
PASSED!

!testRun: #PortfolioTest #test04MoreThanOneAccountCanBeAddedToAPortfolio stamp: 'IO 11/5/2020 14:49:39'!
PASSED!

!testRun: #PortfolioTest #test05 stamp: 'IO 11/5/2020 14:49:39'!
PASSED!

!testRun: #PortfolioTest #test06 stamp: 'IO 11/5/2020 14:49:39'!
PASSED!

!testRun: #PortfolioTest #test08 stamp: 'IO 11/5/2020 14:49:39'!
PASSED!
!Portfolio methodsFor: 'portfolios' stamp: 'IO 11/5/2020 14:51:29'!
includesPortfolio: aPortfolio 
	^portfolios includes: aPortfolio.

! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'IO 11/5/2020 14:51:29' prior: 50868817!
test06
	
	"a un portfolio se le puede agregar un portfolio sin cuentas"
	
	| portfolio1 portfolio2 |
	
	portfolio1 := Portfolio new.
	portfolio2 := Portfolio new.
	
	portfolio1 addPortfolio: portfolio2.
	
	self assert: (portfolio1 includesPortfolio: portfolio2).
! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'IO 11/5/2020 14:51:29' prior: 50868779!
test05
	
	"un portfolio no tiene portfolios inicialmente"
	
	| portfolio1 portfolio2 |
	
	portfolio1 := Portfolio new.
	portfolio2 := Portfolio new.
	
	self deny: (portfolio1 includesPortfolio: portfolio2).
! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'IO 11/5/2020 14:51:29' prior: 50868899!
test08
	
	"a un portfolio se le puede agregar mas de un portfolio sin cuentas"
	
	| portfolio1 portfolio2 portfolio3 |
	
	portfolio1 := Portfolio new.
	portfolio2 := Portfolio new.
	portfolio3 := Portfolio new.
	
	portfolio1 addPortfolio: portfolio2.
	portfolio1 addPortfolio: portfolio3.
	
	self assert: (portfolio1 includesPortfolio: portfolio2).
	self assert: (portfolio1 includesPortfolio: portfolio3).
! !

!methodRemoval: Portfolio #hasPortfolio: stamp: 'IO 11/5/2020 14:51:29'!
hasPortfolio: aPortfolio 
	^portfolios includes: aPortfolio.

!

!testRun: #PortfolioTest #test01AnAccountCanBeAddedToAPortfolio stamp: 'IO 11/5/2020 14:51:34'!
PASSED!

!testRun: #PortfolioTest #test02APortfolioHasNoAccountsInitially stamp: 'IO 11/5/2020 14:51:34'!
PASSED!

!testRun: #PortfolioTest #test03APortfolioDoesNotHaveMoreAccountsThanAdded stamp: 'IO 11/5/2020 14:51:34'!
PASSED!

!testRun: #PortfolioTest #test04MoreThanOneAccountCanBeAddedToAPortfolio stamp: 'IO 11/5/2020 14:51:34'!
PASSED!

!testRun: #PortfolioTest #test05 stamp: 'IO 11/5/2020 14:51:34'!
PASSED!

!testRun: #PortfolioTest #test06 stamp: 'IO 11/5/2020 14:51:34'!
PASSED!

!testRun: #PortfolioTest #test08 stamp: 'IO 11/5/2020 14:51:34'!
PASSED!
!PortfolioTest methodsFor: 'tests' stamp: 'IO 11/5/2020 14:54:46'!
test09
	
	"a un portfolio se le puede agregar mas de un portfolio con cuentas"
	
	| portfolio1 portfolio2 portfolio3 account1 account2 account3 |
	
	portfolio1 := Portfolio new.
	portfolio2 := Portfolio new.
	portfolio3 := Portfolio new.
	
	account1 := ReceptiveAccount new.
	account2 := ReceptiveAccount new.
	account3 := ReceptiveAccount new.
	
	portfolio1 addPortfolio: portfolio2.
	portfolio1 addPortfolio: portfolio3.
	
	portfolio2 addAccount: account1.
	portfolio2 addAccount: account2.
	portfolio3 addAccount: account3.
	
	self assert: (portfolio1 includesAccount: account1).
	self assert: (portfolio1 includesAccount: account2).
	self assert: (portfolio1 includesAccount: account3).

! !

!testRun: #PortfolioTest #test09 stamp: 'IO 11/5/2020 14:54:47'!
FAILURE!
!Portfolio methodsFor: 'accounts' stamp: 'IO 11/5/2020 14:56:54' prior: 50868383!
includesAccount: anAccount 

	portfolios do: [ :portfolio | (portfolio includesAccount: anAccount) ifTrue: [^true]].
	^accounts includes: anAccount.! !

!testRun: #PortfolioTest #test01AnAccountCanBeAddedToAPortfolio stamp: 'IO 11/5/2020 14:56:55'!
PASSED!

!testRun: #PortfolioTest #test02APortfolioHasNoAccountsInitially stamp: 'IO 11/5/2020 14:56:55'!
PASSED!

!testRun: #PortfolioTest #test03APortfolioDoesNotHaveMoreAccountsThanAdded stamp: 'IO 11/5/2020 14:56:55'!
PASSED!

!testRun: #PortfolioTest #test04MoreThanOneAccountCanBeAddedToAPortfolio stamp: 'IO 11/5/2020 14:56:55'!
PASSED!

!testRun: #PortfolioTest #test05 stamp: 'IO 11/5/2020 14:56:55'!
PASSED!

!testRun: #PortfolioTest #test06 stamp: 'IO 11/5/2020 14:56:55'!
PASSED!

!testRun: #PortfolioTest #test08 stamp: 'IO 11/5/2020 14:56:55'!
PASSED!

!testRun: #PortfolioTest #test09 stamp: 'IO 11/5/2020 14:56:55'!
PASSED!
!PortfolioTest methodsFor: 'tests' stamp: 'IO 11/5/2020 14:59:07' prior: 50869057!
test09
	
	"a un portfolio se le puede agregar mas de un portfolio con cuentas"
	
	| portfolio1 portfolio2 portfolio3 portfolio4 account1 account2 account3 account4 |
	
	portfolio1 := Portfolio new.
	portfolio2 := Portfolio new.
	portfolio3 := Portfolio new.
	portfolio4 := Portfolio new.
	
	account1 := ReceptiveAccount new.
	account2 := ReceptiveAccount new.
	account3 := ReceptiveAccount new.
	account4 := ReceptiveAccount new.
	
	portfolio1 addPortfolio: portfolio2.
	portfolio1 addPortfolio: portfolio3.
	portfolio2 addPortfolio: account4.
	
	portfolio2 addAccount: account1.
	portfolio2 addAccount: account2.
	portfolio3 addAccount: account3.
	portfolio4 addAccount: account4.
	
	self assert: (portfolio1 includesAccount: account1).
	self assert: (portfolio1 includesAccount: account2).
	self assert: (portfolio1 includesAccount: account3).
	self assert: (portfolio1 includesAccount: account4).
! !

!testRun: #PortfolioTest #test09 stamp: 'IO 11/5/2020 14:59:09'!
ERROR!
!PortfolioTest methodsFor: 'tests' stamp: 'IO 11/5/2020 14:59:32' prior: 50869115!
test09
	
	"a un portfolio se le puede agregar mas de un portfolio con cuentas"
	
	| portfolio1 portfolio2 portfolio3 portfolio4 account1 account2 account3 account4 |
	
	portfolio1 := Portfolio new.
	portfolio2 := Portfolio new.
	portfolio3 := Portfolio new.
	portfolio4 := Portfolio new.
	
	account1 := ReceptiveAccount new.
	account2 := ReceptiveAccount new.
	account3 := ReceptiveAccount new.
	account4 := ReceptiveAccount new.
	
	portfolio1 addPortfolio: portfolio2.
	portfolio1 addPortfolio: portfolio3.
	portfolio2 addPortfolio: portfolio4.
	
	portfolio2 addAccount: account1.
	portfolio2 addAccount: account2.
	portfolio3 addAccount: account3.
	portfolio4 addAccount: account4.
	
	self assert: (portfolio1 includesAccount: account1).
	self assert: (portfolio1 includesAccount: account2).
	self assert: (portfolio1 includesAccount: account3).
	self assert: (portfolio1 includesAccount: account4).
! !

!testRun: #PortfolioTest #test09 stamp: 'IO 11/5/2020 14:59:33'!
PASSED!

!testRun: #PortfolioTest #test01AnAccountCanBeAddedToAPortfolio stamp: 'IO 11/5/2020 14:59:33'!
PASSED!

!testRun: #PortfolioTest #test02APortfolioHasNoAccountsInitially stamp: 'IO 11/5/2020 14:59:33'!
PASSED!

!testRun: #PortfolioTest #test03APortfolioDoesNotHaveMoreAccountsThanAdded stamp: 'IO 11/5/2020 14:59:33'!
PASSED!

!testRun: #PortfolioTest #test04MoreThanOneAccountCanBeAddedToAPortfolio stamp: 'IO 11/5/2020 14:59:33'!
PASSED!

!testRun: #PortfolioTest #test05 stamp: 'IO 11/5/2020 14:59:33'!
PASSED!

!testRun: #PortfolioTest #test06 stamp: 'IO 11/5/2020 14:59:33'!
PASSED!

!testRun: #PortfolioTest #test08 stamp: 'IO 11/5/2020 14:59:33'!
PASSED!

!testRun: #PortfolioTest #test09 stamp: 'IO 11/5/2020 14:59:33'!
PASSED!
!PortfolioTest methodsFor: 'tests' stamp: 'IO 11/5/2020 14:59:51' prior: 50869149!
test09
	
	"a un portfolio se le pueden agregar portfolios"
	
	| portfolio1 portfolio2 portfolio3 portfolio4 account1 account2 account3 account4 |
	
	portfolio1 := Portfolio new.
	portfolio2 := Portfolio new.
	portfolio3 := Portfolio new.
	portfolio4 := Portfolio new.
	
	account1 := ReceptiveAccount new.
	account2 := ReceptiveAccount new.
	account3 := ReceptiveAccount new.
	account4 := ReceptiveAccount new.
	
	portfolio1 addPortfolio: portfolio2.
	portfolio1 addPortfolio: portfolio3.
	portfolio2 addPortfolio: portfolio4.
	
	portfolio2 addAccount: account1.
	portfolio2 addAccount: account2.
	portfolio3 addAccount: account3.
	portfolio4 addAccount: account4.
	
	self assert: (portfolio1 includesAccount: account1).
	self assert: (portfolio1 includesAccount: account2).
	self assert: (portfolio1 includesAccount: account3).
	self assert: (portfolio1 includesAccount: account4).
! !
!PortfolioTest methodsFor: 'tests' stamp: 'IO 11/5/2020 15:00:18' prior: 50869206!
test09
	
	"a un portfolio se le pueden agregar portfolios"
	
	| portfolio1 portfolio2 portfolio3 portfolio4 account1 account2 account3 account4 |
	
	portfolio1 := Portfolio new.
	portfolio2 := Portfolio new.
	portfolio3 := Portfolio new.
	portfolio4 := Portfolio new.
	
	account1 := ReceptiveAccount new.
	account2 := ReceptiveAccount new.
	account3 := ReceptiveAccount new.
	account4 := ReceptiveAccount new.
	
	portfolio1 addPortfolio: portfolio2.
	portfolio1 addPortfolio: portfolio3.
	portfolio2 addPortfolio: portfolio4. "portfolio anidado"
	
	portfolio2 addAccount: account1.
	portfolio2 addAccount: account2.
	portfolio3 addAccount: account3.
	portfolio4 addAccount: account4.
	
	self assert: (portfolio1 includesAccount: account1).
	self assert: (portfolio1 includesAccount: account2).
	self assert: (portfolio1 includesAccount: account3).
	self assert: (portfolio1 includesAccount: account4).
! !

!testRun: #PortfolioTest #test09 stamp: 'IO 11/5/2020 15:00:19'!
PASSED!

!testRun: #PortfolioTest #test01AnAccountCanBeAddedToAPortfolio stamp: 'IO 11/5/2020 15:00:19'!
PASSED!

!testRun: #PortfolioTest #test02APortfolioHasNoAccountsInitially stamp: 'IO 11/5/2020 15:00:19'!
PASSED!

!testRun: #PortfolioTest #test03APortfolioDoesNotHaveMoreAccountsThanAdded stamp: 'IO 11/5/2020 15:00:19'!
PASSED!

!testRun: #PortfolioTest #test04MoreThanOneAccountCanBeAddedToAPortfolio stamp: 'IO 11/5/2020 15:00:19'!
PASSED!

!testRun: #PortfolioTest #test05 stamp: 'IO 11/5/2020 15:00:19'!
PASSED!

!testRun: #PortfolioTest #test06 stamp: 'IO 11/5/2020 15:00:19'!
PASSED!

!testRun: #PortfolioTest #test08 stamp: 'IO 11/5/2020 15:00:19'!
PASSED!

!testRun: #PortfolioTest #test09 stamp: 'IO 11/5/2020 15:00:19'!
PASSED!
!PortfolioTest methodsFor: 'tests' stamp: 'IO 11/5/2020 15:06:06'!
test10
	
	"no pueden haber cuentas repetidas en un portfolio"
	
	| portfolio1 portfolio2 account1 |
	
	portfolio1 := Portfolio new.
	portfolio2 := Portfolio new.
	
	account1 := ReceptiveAccount new.
	
	portfolio1 addPortfolio: portfolio2.
	portfolio2 addAccount: account1.

	
	self should: [portfolio1 addAccount: account1] raise: Error withMessageText: Portfolio errorMessageAccountAlreadyAdded.

! !

!testRun: #PortfolioTest #test10 stamp: 'IO 11/5/2020 15:06:09'!
ERROR!
!Portfolio class methodsFor: 'error messages' stamp: 'IO 11/5/2020 15:06:30'!
errorMessageAccountAlreadyAdded
	self shouldBeImplemented.! !
!Portfolio class methodsFor: 'error messages' stamp: 'IO 11/5/2020 15:06:47' prior: 50869311!
errorMessageAccountAlreadyAdded
	^'This protfolio already includes this account.'! !

!testRun: #PortfolioTest #test10 stamp: 'IO 11/5/2020 15:06:52'!
FAILURE!
!Portfolio methodsFor: 'accounts' stamp: 'IO 11/5/2020 15:07:22' prior: 50869084!
includesAccount: anAccount 

	portfolios do: [ :portfolio | (portfolio includesAccount: anAccount) ifTrue: [^true]].
	^accounts includes: anAccount.! !
!Portfolio methodsFor: 'accounts' stamp: 'IO 11/5/2020 15:07:59' prior: 50868379!
addAccount: anAccount

	(self includesAccount: anAccount) ifTrue: [^self error: Portfolio errorMessageAccountAlreadyAdded].
	accounts add: anAccount.! !

!testRun: #PortfolioTest #test01AnAccountCanBeAddedToAPortfolio stamp: 'IO 11/5/2020 15:08:00'!
PASSED!

!testRun: #PortfolioTest #test02APortfolioHasNoAccountsInitially stamp: 'IO 11/5/2020 15:08:00'!
PASSED!

!testRun: #PortfolioTest #test03APortfolioDoesNotHaveMoreAccountsThanAdded stamp: 'IO 11/5/2020 15:08:00'!
PASSED!

!testRun: #PortfolioTest #test04MoreThanOneAccountCanBeAddedToAPortfolio stamp: 'IO 11/5/2020 15:08:00'!
PASSED!

!testRun: #PortfolioTest #test05 stamp: 'IO 11/5/2020 15:08:00'!
PASSED!

!testRun: #PortfolioTest #test06 stamp: 'IO 11/5/2020 15:08:00'!
PASSED!

!testRun: #PortfolioTest #test08 stamp: 'IO 11/5/2020 15:08:00'!
PASSED!

!testRun: #PortfolioTest #test09 stamp: 'IO 11/5/2020 15:08:00'!
PASSED!

!testRun: #PortfolioTest #test10 stamp: 'IO 11/5/2020 15:08:00'!
PASSED!
!PortfolioTest methodsFor: 'tests' stamp: 'IO 11/5/2020 15:09:05'!
test11
	
	"no pueden haber prtfolios repetidos en un portfolio"
	
	| portfolio1 portfolio2 portfolio3 |
	
	portfolio1 := Portfolio new.
	portfolio2 := Portfolio new.
	portfolio3 := Portfolio new.
	
	portfolio1 addPortfolio: portfolio2.
	portfolio2 addAccount: portfolio3.

	self should: [portfolio1 addAccount: portfolio3] raise: Error withMessageText: Portfolio errorMessagePortfolioAlreadyAdded.

! !

!testRun: #PortfolioTest #test11 stamp: 'IO 11/5/2020 15:09:09'!
ERROR!
!Portfolio class methodsFor: 'error messages' stamp: 'IO 11/5/2020 15:09:16'!
errorMessagePortfolioAlreadyAdded
	self shouldBeImplemented.! !

!testRun: #PortfolioTest #test11 stamp: 'IO 11/5/2020 15:09:19'!
ERROR!
!Portfolio methodsFor: 'portfolios' stamp: 'IO 11/5/2020 15:10:01' prior: 50868959!
addPortfolio: aPortfolio
	(self includesPortfolio: aPortfolio) ifTrue: [self error: Portfolio errorMessagePortfolioAlreadyAdded].
	portfolios add: aPortfolio.

! !

!testRun: #PortfolioTest #test01AnAccountCanBeAddedToAPortfolio stamp: 'IO 11/5/2020 15:10:02'!
PASSED!

!testRun: #PortfolioTest #test02APortfolioHasNoAccountsInitially stamp: 'IO 11/5/2020 15:10:02'!
PASSED!

!testRun: #PortfolioTest #test03APortfolioDoesNotHaveMoreAccountsThanAdded stamp: 'IO 11/5/2020 15:10:02'!
PASSED!

!testRun: #PortfolioTest #test04MoreThanOneAccountCanBeAddedToAPortfolio stamp: 'IO 11/5/2020 15:10:02'!
PASSED!

!testRun: #PortfolioTest #test05 stamp: 'IO 11/5/2020 15:10:02'!
PASSED!

!testRun: #PortfolioTest #test06 stamp: 'IO 11/5/2020 15:10:02'!
PASSED!

!testRun: #PortfolioTest #test08 stamp: 'IO 11/5/2020 15:10:02'!
PASSED!

!testRun: #PortfolioTest #test09 stamp: 'IO 11/5/2020 15:10:02'!
PASSED!

!testRun: #PortfolioTest #test10 stamp: 'IO 11/5/2020 15:10:02'!
PASSED!

!testRun: #PortfolioTest #test11 stamp: 'IO 11/5/2020 15:10:02'!
ERROR!

!testRun: #PortfolioTest #test11 stamp: 'IO 11/5/2020 15:10:02'!
ERROR!
!Portfolio class methodsFor: 'error messages' stamp: 'IO 11/5/2020 15:10:35' prior: 50869383!
errorMessagePortfolioAlreadyAdded
	^'This protfolio already includes the given portfolio.'! !

!testRun: #PortfolioTest #test01AnAccountCanBeAddedToAPortfolio stamp: 'IO 11/5/2020 15:10:35'!
PASSED!

!testRun: #PortfolioTest #test02APortfolioHasNoAccountsInitially stamp: 'IO 11/5/2020 15:10:35'!
PASSED!

!testRun: #PortfolioTest #test03APortfolioDoesNotHaveMoreAccountsThanAdded stamp: 'IO 11/5/2020 15:10:35'!
PASSED!

!testRun: #PortfolioTest #test04MoreThanOneAccountCanBeAddedToAPortfolio stamp: 'IO 11/5/2020 15:10:35'!
PASSED!

!testRun: #PortfolioTest #test05 stamp: 'IO 11/5/2020 15:10:35'!
PASSED!

!testRun: #PortfolioTest #test06 stamp: 'IO 11/5/2020 15:10:35'!
PASSED!

!testRun: #PortfolioTest #test08 stamp: 'IO 11/5/2020 15:10:35'!
PASSED!

!testRun: #PortfolioTest #test09 stamp: 'IO 11/5/2020 15:10:35'!
PASSED!

!testRun: #PortfolioTest #test10 stamp: 'IO 11/5/2020 15:10:35'!
PASSED!

!testRun: #PortfolioTest #test11 stamp: 'IO 11/5/2020 15:10:35'!
FAILURE!

!testRun: #PortfolioTest #test11 stamp: 'IO 11/5/2020 15:10:35'!
FAILURE!

!testRun: #PortfolioTest #test11 stamp: 'IO 11/5/2020 15:10:59'!
FAILURE!
!PortfolioTest methodsFor: 'tests' stamp: 'IO 11/5/2020 15:11:15' prior: 50869365!
test11
	
	"no pueden haber prtfolios repetidos en un portfolio"
	
	| portfolio1 portfolio2 portfolio3 |
	
	portfolio1 := Portfolio new.
	portfolio2 := Portfolio new.
	portfolio3 := Portfolio new.
	
	portfolio1 addPortfolio: portfolio2.
	portfolio2 addAccount: portfolio3.

	self should: [portfolio1 addPortfolio: portfolio3] raise: Error withMessageText: Portfolio errorMessagePortfolioAlreadyAdded.

! !
!PortfolioTest methodsFor: 'tests' stamp: 'IO 11/5/2020 15:11:18' prior: 50869466!
test11
	
	"no pueden haber prtfolios repetidos en un portfolio"
	
	| portfolio1 portfolio2 portfolio3 |
	
	portfolio1 := Portfolio new.
	portfolio2 := Portfolio new.
	portfolio3 := Portfolio new.
	
	portfolio1 addPortfolio: portfolio2.
	portfolio2 addPortfolio: portfolio3.

	self should: [portfolio1 addPortfolio: portfolio3] raise: Error withMessageText: Portfolio errorMessagePortfolioAlreadyAdded.

! !

!testRun: #PortfolioTest #test11 stamp: 'IO 11/5/2020 15:11:19'!
FAILURE!
!PortfolioTest methodsFor: 'tests' stamp: 'IO 11/5/2020 15:12:04'!
test12
	
	"no pueden haber prtfolios repetidos en un portfolio"
	
	| portfolio1 portfolio2 portfolio3 |
	
	portfolio1 := Portfolio new.
	portfolio2 := Portfolio new.
	portfolio3 := Portfolio new.
	
	portfolio1 addPortfolio: portfolio2.
	portfolio2 addPortfolio: portfolio3.

	self should: [portfolio1 addPortfolio: portfolio3] raise: Error withMessageText: Portfolio errorMessagePortfolioAlreadyAdded.

! !

!methodRemoval: PortfolioTest #test11 stamp: 'IO 11/5/2020 15:12:04'!
test11
	
	"no pueden haber prtfolios repetidos en un portfolio"
	
	| portfolio1 portfolio2 portfolio3 |
	
	portfolio1 := Portfolio new.
	portfolio2 := Portfolio new.
	portfolio3 := Portfolio new.
	
	portfolio1 addPortfolio: portfolio2.
	portfolio2 addPortfolio: portfolio3.

	self should: [portfolio1 addPortfolio: portfolio3] raise: Error withMessageText: Portfolio errorMessagePortfolioAlreadyAdded.

!
!PortfolioTest methodsFor: 'tests' stamp: 'IO 11/5/2020 15:12:06'!
test11
	
	"no pueden haber cuentas repetidas en un portfolio"
	
	| portfolio1 portfolio2 account1 |
	
	portfolio1 := Portfolio new.
	portfolio2 := Portfolio new.
	
	account1 := ReceptiveAccount new.
	
	portfolio1 addPortfolio: portfolio2.
	portfolio2 addAccount: account1.

	
	self should: [portfolio1 addAccount: account1] raise: Error withMessageText: Portfolio errorMessageAccountAlreadyAdded.

! !

!methodRemoval: PortfolioTest #test10 stamp: 'IO 11/5/2020 15:12:06'!
test10
	
	"no pueden haber cuentas repetidas en un portfolio"
	
	| portfolio1 portfolio2 account1 |
	
	portfolio1 := Portfolio new.
	portfolio2 := Portfolio new.
	
	account1 := ReceptiveAccount new.
	
	portfolio1 addPortfolio: portfolio2.
	portfolio2 addAccount: account1.

	
	self should: [portfolio1 addAccount: account1] raise: Error withMessageText: Portfolio errorMessageAccountAlreadyAdded.

!
!PortfolioTest methodsFor: 'tests' stamp: 'IO 11/5/2020 15:12:58'!
test10
	
	"a un portfolio se le pueden agregar portfolios con portfolios"
	
	| portfolio1 portfolio2 portfolio3 |
	
	portfolio1 := Portfolio new.
	portfolio2 := Portfolio new.
	portfolio3 := Portfolio new.

	portfolio1 addPortfolio: portfolio2.
	portfolio2 addPortfolio: portfolio3.

	self assert: (portfolio1 includesPortfolio: portfolio3).

! !

!testRun: #PortfolioTest #test10 stamp: 'IO 11/5/2020 15:13:05'!
FAILURE!

!testRun: #PortfolioTest #test10 stamp: 'IO 11/5/2020 15:13:11'!
FAILURE!
!Portfolio methodsFor: 'portfolios' stamp: 'IO 11/5/2020 15:13:35' prior: 50868989!
includesPortfolio: aPortfolio 

	portfolios do: [ :portfolio | (portfolio includesPortfolio: aPortfolio) ifTrue: [^true]].
	^portfolios includes: aPortfolio.

! !

!testRun: #PortfolioTest #test01AnAccountCanBeAddedToAPortfolio stamp: 'IO 11/5/2020 15:13:37'!
PASSED!

!testRun: #PortfolioTest #test02APortfolioHasNoAccountsInitially stamp: 'IO 11/5/2020 15:13:37'!
PASSED!

!testRun: #PortfolioTest #test03APortfolioDoesNotHaveMoreAccountsThanAdded stamp: 'IO 11/5/2020 15:13:37'!
PASSED!

!testRun: #PortfolioTest #test04MoreThanOneAccountCanBeAddedToAPortfolio stamp: 'IO 11/5/2020 15:13:37'!
PASSED!

!testRun: #PortfolioTest #test05 stamp: 'IO 11/5/2020 15:13:37'!
PASSED!

!testRun: #PortfolioTest #test06 stamp: 'IO 11/5/2020 15:13:37'!
PASSED!

!testRun: #PortfolioTest #test08 stamp: 'IO 11/5/2020 15:13:37'!
PASSED!

!testRun: #PortfolioTest #test09 stamp: 'IO 11/5/2020 15:13:37'!
PASSED!

!testRun: #PortfolioTest #test10 stamp: 'IO 11/5/2020 15:13:37'!
PASSED!

!testRun: #PortfolioTest #test11 stamp: 'IO 11/5/2020 15:13:37'!
PASSED!

!testRun: #PortfolioTest #test12 stamp: 'IO 11/5/2020 15:13:37'!
PASSED!
!Portfolio methodsFor: 'portfolios' stamp: 'IO 11/5/2020 15:13:51' prior: 50869390!
addPortfolio: aPortfolio

	portfolios add: aPortfolio.

! !

!testRun: #PortfolioTest #test01AnAccountCanBeAddedToAPortfolio stamp: 'IO 11/5/2020 15:13:52'!
PASSED!

!testRun: #PortfolioTest #test02APortfolioHasNoAccountsInitially stamp: 'IO 11/5/2020 15:13:52'!
PASSED!

!testRun: #PortfolioTest #test03APortfolioDoesNotHaveMoreAccountsThanAdded stamp: 'IO 11/5/2020 15:13:52'!
PASSED!

!testRun: #PortfolioTest #test04MoreThanOneAccountCanBeAddedToAPortfolio stamp: 'IO 11/5/2020 15:13:52'!
PASSED!

!testRun: #PortfolioTest #test05 stamp: 'IO 11/5/2020 15:13:52'!
PASSED!

!testRun: #PortfolioTest #test06 stamp: 'IO 11/5/2020 15:13:52'!
PASSED!

!testRun: #PortfolioTest #test08 stamp: 'IO 11/5/2020 15:13:52'!
PASSED!

!testRun: #PortfolioTest #test09 stamp: 'IO 11/5/2020 15:13:52'!
PASSED!

!testRun: #PortfolioTest #test10 stamp: 'IO 11/5/2020 15:13:52'!
PASSED!

!testRun: #PortfolioTest #test11 stamp: 'IO 11/5/2020 15:13:52'!
PASSED!

!testRun: #PortfolioTest #test12 stamp: 'IO 11/5/2020 15:13:52'!
FAILURE!

!testRun: #PortfolioTest #test12 stamp: 'IO 11/5/2020 15:13:52'!
FAILURE!
!Portfolio methodsFor: 'portfolios' stamp: 'IO 11/5/2020 15:13:55' prior: 50869617!
addPortfolio: aPortfolio
	(self includesPortfolio: aPortfolio) ifTrue: [self error: Portfolio errorMessagePortfolioAlreadyAdded].
	portfolios add: aPortfolio.

! !

!testRun: #PortfolioTest #test01AnAccountCanBeAddedToAPortfolio stamp: 'IO 11/5/2020 15:13:56'!
PASSED!

!testRun: #PortfolioTest #test02APortfolioHasNoAccountsInitially stamp: 'IO 11/5/2020 15:13:56'!
PASSED!

!testRun: #PortfolioTest #test03APortfolioDoesNotHaveMoreAccountsThanAdded stamp: 'IO 11/5/2020 15:13:56'!
PASSED!

!testRun: #PortfolioTest #test04MoreThanOneAccountCanBeAddedToAPortfolio stamp: 'IO 11/5/2020 15:13:56'!
PASSED!

!testRun: #PortfolioTest #test05 stamp: 'IO 11/5/2020 15:13:56'!
PASSED!

!testRun: #PortfolioTest #test06 stamp: 'IO 11/5/2020 15:13:56'!
PASSED!

!testRun: #PortfolioTest #test08 stamp: 'IO 11/5/2020 15:13:56'!
PASSED!

!testRun: #PortfolioTest #test09 stamp: 'IO 11/5/2020 15:13:56'!
PASSED!

!testRun: #PortfolioTest #test10 stamp: 'IO 11/5/2020 15:13:56'!
PASSED!

!testRun: #PortfolioTest #test11 stamp: 'IO 11/5/2020 15:13:56'!
PASSED!

!testRun: #PortfolioTest #test12 stamp: 'IO 11/5/2020 15:13:56'!
PASSED!
!PortfolioTest methodsFor: 'tests' stamp: 'IO 11/5/2020 15:19:35'!
test13
	
	"no se pueden agregar portfolios que tienen cuentas que ya estan en el portfolio"
	
	| portfolio1 portfolio2 account1 |
	
	portfolio1 := Portfolio new.
	portfolio2 := Portfolio new.
	
	account1 := ReceptiveAccount new.
	
	portfolio1 addAccount: account1.
	portfolio1 addPortfolio: portfolio2.

	self should: [	portfolio2 addAccount: account1.] raise: Error withMessageText: Portfolio errorMessageAccountAlreadyAdded.

! !
!PortfolioTest methodsFor: 'tests' stamp: 'IO 11/5/2020 15:19:56' prior: 50869692!
test13
	
	"no se pueden agregar portfolios que tienen cuentas que ya estan en el portfolio"
	
	| portfolio1 portfolio2 account1 |
	
	portfolio1 := Portfolio new.
	portfolio2 := Portfolio new.
	
	account1 := ReceptiveAccount new.
	
	portfolio1 addAccount: account1.
	portfolio1 addPortfolio: portfolio2.

	self should: [	portfolio2 addAccount: account1.] raise: Error withMessageText: Portfolio errorMessageAccountAlreadyAdded.

! !

!testRun: #PortfolioTest #test13 stamp: 'IO 11/5/2020 15:19:56'!
FAILURE!
!PortfolioTest methodsFor: 'tests' stamp: 'IO 11/5/2020 15:22:09' prior: 50869709!
test13
	
	"no se pueden agregar una cueanta a un portfolio (hijo) de un portfolio (padre), cuando la cuenta ya estaba en el portfolio (padre)"
	
	| portfolio1 portfolio2 account1 |
	
	portfolio1 := Portfolio new.
	portfolio2 := Portfolio new.
	
	account1 := ReceptiveAccount new.
	
	portfolio1 addAccount: account1.
	portfolio1 addPortfolio: portfolio2.

	self should: [	portfolio2 addAccount: account1.] raise: Error withMessageText: Portfolio errorMessageAccountAlreadyAdded.

! !

----SNAPSHOT----(5 November 2020 15:42:58) CuisUniversity-4384.image priorSource: 17155564!

----QUIT----(5 November 2020 15:43:22) CuisUniversity-4384.image priorSource: 17219042!

----STARTUP---- (7 November 2020 10:35:57) as /Users/ilanolkies/uba/ingsoft1/macos64 6/CuisUniversity-4384.image!


!testRun: #PortfolioTest #test01AnAccountCanBeAddedToAPortfolio stamp: 'IO 11/7/2020 10:36:03'!
PASSED!

!testRun: #PortfolioTest #test02APortfolioHasNoAccountsInitially stamp: 'IO 11/7/2020 10:36:03'!
PASSED!

!testRun: #PortfolioTest #test03APortfolioDoesNotHaveMoreAccountsThanAdded stamp: 'IO 11/7/2020 10:36:03'!
PASSED!

!testRun: #PortfolioTest #test04MoreThanOneAccountCanBeAddedToAPortfolio stamp: 'IO 11/7/2020 10:36:03'!
PASSED!

!testRun: #PortfolioTest #test05 stamp: 'IO 11/7/2020 10:36:03'!
PASSED!

!testRun: #PortfolioTest #test06 stamp: 'IO 11/7/2020 10:36:03'!
PASSED!

!testRun: #PortfolioTest #test08 stamp: 'IO 11/7/2020 10:36:03'!
PASSED!

!testRun: #PortfolioTest #test09 stamp: 'IO 11/7/2020 10:36:03'!
PASSED!

!testRun: #PortfolioTest #test10 stamp: 'IO 11/7/2020 10:36:03'!
PASSED!

!testRun: #PortfolioTest #test11 stamp: 'IO 11/7/2020 10:36:03'!
PASSED!

!testRun: #PortfolioTest #test12 stamp: 'IO 11/7/2020 10:36:03'!
PASSED!

!testRun: #PortfolioTest #test13 stamp: 'IO 11/7/2020 10:36:03'!
FAILURE!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'IO 11/7/2020 10:36:03'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'IO 11/7/2020 10:36:03'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'IO 11/7/2020 10:36:03'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'IO 11/7/2020 10:36:03'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'IO 11/7/2020 10:36:03'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'IO 11/7/2020 10:36:03'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'IO 11/7/2020 10:36:03'!
PASSED!

!testRun: #PortfolioTest #test13 stamp: 'IO 11/7/2020 10:36:03'!
FAILURE!
!PortfolioTest methodsFor: 'invalid topolgies adding accounts in child portfolios' stamp: 'IO 11/7/2020 10:38:12' prior: 50869728!
test13
	
	"no se pueden agregar una cueanta a un portfolio (hijo) de un portfolio (padre), cuando la cuenta ya estaba en el portfolio (padre)"
	"
	| portfolio1 portfolio2 account1 |
	
	portfolio1 := Portfolio new.
	portfolio2 := Portfolio new.
	
	account1 := ReceptiveAccount new.
	
	portfolio1 addAccount: account1.
	portfolio1 addPortfolio: portfolio2.

	self should: [	portfolio2 addAccount: account1.] raise: Error withMessageText: Portfolio errorMessageAccountAlreadyAdded.
	"
! !

!testRun: #PortfolioTest #test13 stamp: 'IO 11/7/2020 10:38:13'!
PASSED!

!testRun: #PortfolioTest #test01AnAccountCanBeAddedToAPortfolio stamp: 'IO 11/7/2020 10:38:13'!
PASSED!

!testRun: #PortfolioTest #test02APortfolioHasNoAccountsInitially stamp: 'IO 11/7/2020 10:38:13'!
PASSED!

!testRun: #PortfolioTest #test03APortfolioDoesNotHaveMoreAccountsThanAdded stamp: 'IO 11/7/2020 10:38:13'!
PASSED!

!testRun: #PortfolioTest #test04MoreThanOneAccountCanBeAddedToAPortfolio stamp: 'IO 11/7/2020 10:38:13'!
PASSED!

!testRun: #PortfolioTest #test05 stamp: 'IO 11/7/2020 10:38:13'!
PASSED!

!testRun: #PortfolioTest #test06 stamp: 'IO 11/7/2020 10:38:13'!
PASSED!

!testRun: #PortfolioTest #test08 stamp: 'IO 11/7/2020 10:38:13'!
PASSED!

!testRun: #PortfolioTest #test09 stamp: 'IO 11/7/2020 10:38:13'!
PASSED!

!testRun: #PortfolioTest #test10 stamp: 'IO 11/7/2020 10:38:13'!
PASSED!

!testRun: #PortfolioTest #test11 stamp: 'IO 11/7/2020 10:38:13'!
PASSED!

!testRun: #PortfolioTest #test12 stamp: 'IO 11/7/2020 10:38:13'!
PASSED!

!testRun: #PortfolioTest #test13 stamp: 'IO 11/7/2020 10:38:13'!
PASSED!

----QUIT----(7 November 2020 11:17:39) CuisUniversity-4384.image priorSource: 17219135!

----STARTUP---- (7 November 2020 16:35:57) as /Users/ilanolkies/uba/ingsoft1/macos64 6/CuisUniversity-4384.image!


!classRemoval: #ReceptiveAccount stamp: 'IO 11/7/2020 16:36:04'!
Object subclass: #ReceptiveAccount
	instanceVariableNames: 'transactions'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classRemoval: #Portfolio stamp: 'IO 11/7/2020 16:36:05'!
Object subclass: #Portfolio
	instanceVariableNames: 'accounts portfolios'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classRemoval: #Withdraw stamp: 'IO 11/7/2020 16:36:05'!
AccountTransaction subclass: #Withdraw
	instanceVariableNames: 'value'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classRemoval: #Deposit stamp: 'IO 11/7/2020 16:36:05'!
AccountTransaction subclass: #Deposit
	instanceVariableNames: 'value'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classRemoval: #AccountTransaction stamp: 'IO 11/7/2020 16:36:05'!
Object subclass: #AccountTransaction
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classRemoval: #ReceptiveAccountTest stamp: 'IO 11/7/2020 16:36:06'!
TestCase subclass: #ReceptiveAccountTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classRemoval: #PortfolioTest stamp: 'IO 11/7/2020 16:36:06'!
TestCase subclass: #PortfolioTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

----End fileIn of /Users/ilanolkies/uba/ingsoft1/ingeSoft-2020-2c/18-Portfolio/Portfolio-Ejercicio.st----!

	| portfolio1 portfolio2 portfolio3 account1 |
	
	portfolio1 := Portfolio new.
	portfolio2 := Portfolio new.
	portfolio3 := Portfolio new.
	
	account1 := ReceptiveAccount new.
	
	portfolio2 addAccount: account1.
	portfolio2 addPortfolio: portfolio3.
	portfolio1 addPortfolio: portfolio3.!

	| portfolio1 portfolio2 portfolio3 account1 |
	
	portfolio1 := Portfolio new.
	portfolio2 := Portfolio new.
	portfolio3 := Portfolio new.
	
	account1 := ReceptiveAccount new.
	
	portfolio2 addAccount: account1.
	portfolio2 addPortfolio: portfolio3.
	portfolio1 addPortfolio: portfolio3.
	
	portfolio3.!

portfolio3!

portfolio3!
!PortfolioTest methodsFor: 'errors adding accounts by parents' stamp: 'IO 11/7/2020 16:57:37'!
test15
	
	"no se pueden agregar una cueanta a un portfolio (hijo) de un portfolio (padre), cuando la cuenta ya estaba en el portfolio (padre)"
	
	| portfolio1 portfolio2 account1 |
	
	portfolio1 := Portfolio new.
	portfolio2 := Portfolio new.
	
	account1 := ReceptiveAccount new.
	
	portfolio2 addAccount: account1.
	portfolio1 addPortfolio: portfolio2.

	self should: [	portfolio1 addAccount: account1.] raise: Error withMessageText: Portfolio errorMessageAccountAlreadyAdded.
! !

!testRun: #PortfolioTest #test15 stamp: 'IO 11/7/2020 16:57:38'!
PASSED!

!testRun: #PortfolioTest #test01AnAccountCanBeAddedToAPortfolio stamp: 'IO 11/7/2020 16:57:38'!
PASSED!

!testRun: #PortfolioTest #test02APortfolioHasNoAccountsInitially stamp: 'IO 11/7/2020 16:57:38'!
PASSED!

!testRun: #PortfolioTest #test03APortfolioDoesNotHaveMoreAccountsThanAdded stamp: 'IO 11/7/2020 16:57:38'!
PASSED!

!testRun: #PortfolioTest #test04MoreThanOneAccountCanBeAddedToAPortfolio stamp: 'IO 11/7/2020 16:57:38'!
PASSED!

!testRun: #PortfolioTest #test05 stamp: 'IO 11/7/2020 16:57:38'!
PASSED!

!testRun: #PortfolioTest #test06 stamp: 'IO 11/7/2020 16:57:38'!
PASSED!

!testRun: #PortfolioTest #test07 stamp: 'IO 11/7/2020 16:57:38'!
PASSED!

!testRun: #PortfolioTest #test08 stamp: 'IO 11/7/2020 16:57:38'!
PASSED!

!testRun: #PortfolioTest #test09 stamp: 'IO 11/7/2020 16:57:38'!
PASSED!

!testRun: #PortfolioTest #test10 stamp: 'IO 11/7/2020 16:57:38'!
PASSED!

!testRun: #PortfolioTest #test11 stamp: 'IO 11/7/2020 16:57:38'!
PASSED!

!testRun: #PortfolioTest #test12 stamp: 'IO 11/7/2020 16:57:38'!
PASSED!

!testRun: #PortfolioTest #test13 stamp: 'IO 11/7/2020 16:57:38'!
PASSED!

!testRun: #PortfolioTest #test14 stamp: 'IO 11/7/2020 16:57:38'!
PASSED!

!testRun: #PortfolioTest #test15 stamp: 'IO 11/7/2020 16:57:38'!
PASSED!
!PortfolioTest methodsFor: 'errors adding accounts by parents' stamp: 'IO 11/7/2020 16:58:17'!
test15nuevo
	
	"no se pueden agregar una cueanta a un portfolio (hijo) de un portfolio (padre), cuando la cuenta ya estaba en el portfolio (padre)"
	
	| portfolio1 portfolio2 account1 |
	
	portfolio1 := Portfolio new.
	portfolio2 := Portfolio new.
	
	account1 := ReceptiveAccount new.
	
	portfolio2 addAccount: account1.
	portfolio1 addPortfolio: portfolio2.

	self should: [	portfolio1 addAccount: account1.] raise: Error withMessageText: Portfolio errorMessageAccountAlreadyAdded.
! !

!methodRemoval: PortfolioTest #test15 stamp: 'IO 11/7/2020 16:58:17'!
test15
	
	"no se pueden agregar una cueanta a un portfolio (hijo) de un portfolio (padre), cuando la cuenta ya estaba en el portfolio (padre)"
	
	| portfolio1 portfolio2 account1 |
	
	portfolio1 := Portfolio new.
	portfolio2 := Portfolio new.
	
	account1 := ReceptiveAccount new.
	
	portfolio2 addAccount: account1.
	portfolio1 addPortfolio: portfolio2.

	self should: [	portfolio1 addAccount: account1.] raise: Error withMessageText: Portfolio errorMessageAccountAlreadyAdded.
!
!PortfolioTest methodsFor: 'errors adding accounts by parents' stamp: 'IO 11/7/2020 16:58:20'!
test15
	
	"no se pueden agregar una cueanta a un hijo si esa cuenta est� en el padre de su padre"
	
	| portfolio1 portfolio2 portfolio3 account1 |
	
	portfolio1 := Portfolio new.
	portfolio2 := Portfolio new.
	portfolio3 := Portfolio new.
	
	account1 := ReceptiveAccount new.
	
	portfolio1 addAccount: account1.
	portfolio1 addPortfolio: portfolio2.
	portfolio2 addPortfolio: portfolio3.

	self should: [	portfolio3 addAccount: account1.] raise: Error withMessageText: Portfolio errorMessageAccountAlreadyAdded.
! !

!methodRemoval: PortfolioTest #test14 stamp: 'IO 11/7/2020 16:58:20'!
test14
	
	"no se pueden agregar una cueanta a un hijo si esa cuenta est� en el padre de su padre"
	
	| portfolio1 portfolio2 portfolio3 account1 |
	
	portfolio1 := Portfolio new.
	portfolio2 := Portfolio new.
	portfolio3 := Portfolio new.
	
	account1 := ReceptiveAccount new.
	
	portfolio1 addAccount: account1.
	portfolio1 addPortfolio: portfolio2.
	portfolio2 addPortfolio: portfolio3.

	self should: [	portfolio3 addAccount: account1.] raise: Error withMessageText: Portfolio errorMessageAccountAlreadyAdded.
!
!PortfolioTest methodsFor: 'errors adding accounts by parents' stamp: 'IO 11/7/2020 16:58:24'!
test14
	
	"no se pueden agregar una cueanta a un portfolio (hijo) de un portfolio (padre), cuando la cuenta ya estaba en el portfolio (padre), con varios padres"
	
	| portfolio1 portfolio2 portfolio3 account1 |
	
	portfolio1 := Portfolio new.
	portfolio2 := Portfolio new.
	portfolio3 := Portfolio new.
	
	account1 := ReceptiveAccount new.
	
	portfolio2 addAccount: account1.
	portfolio2 addPortfolio: portfolio3.
	portfolio1 addPortfolio: portfolio3.

	self should: [	portfolio3 addAccount: account1.] raise: Error withMessageText: Portfolio errorMessageAccountAlreadyAdded.
! !

!methodRemoval: PortfolioTest #test13 stamp: 'IO 11/7/2020 16:58:24'!
test13
	
	"no se pueden agregar una cueanta a un portfolio (hijo) de un portfolio (padre), cuando la cuenta ya estaba en el portfolio (padre), con varios padres"
	
	| portfolio1 portfolio2 portfolio3 account1 |
	
	portfolio1 := Portfolio new.
	portfolio2 := Portfolio new.
	portfolio3 := Portfolio new.
	
	account1 := ReceptiveAccount new.
	
	portfolio2 addAccount: account1.
	portfolio2 addPortfolio: portfolio3.
	portfolio1 addPortfolio: portfolio3.

	self should: [	portfolio3 addAccount: account1.] raise: Error withMessageText: Portfolio errorMessageAccountAlreadyAdded.
!
!PortfolioTest methodsFor: 'errors adding accounts by parents' stamp: 'IO 11/7/2020 17:00:57'!
test15nuevo2
	
	"no se pueden agregar una cueanta a un portfolio (hijo) de un portfolio (padre), cuando la cuenta ya estaba en el portfolio (padre)"
	
	| portfolio1 portfolio2 portfolio3 account1 |
	
	portfolio1 := Portfolio new.
	portfolio2 := Portfolio new.
	portfolio3 := Portfolio new.	

	account1 := ReceptiveAccount new.
	
	portfolio3 addAccount: account1.
	portfolio1 addPortfolio: portfolio2.
	portfolio2 addPortfolio: portfolio3.

	self should: [	portfolio1 addAccount: account1.] raise: Error withMessageText: Portfolio errorMessageAccountAlreadyAdded.
! !

!testRun: #PortfolioTest #test15nuevo2 stamp: 'IO 11/7/2020 17:00:58'!
PASSED!

!testRun: #PortfolioTest #test01AnAccountCanBeAddedToAPortfolio stamp: 'IO 11/7/2020 17:00:58'!
PASSED!

!testRun: #PortfolioTest #test02APortfolioHasNoAccountsInitially stamp: 'IO 11/7/2020 17:00:58'!
PASSED!

!testRun: #PortfolioTest #test03APortfolioDoesNotHaveMoreAccountsThanAdded stamp: 'IO 11/7/2020 17:00:58'!
PASSED!

!testRun: #PortfolioTest #test04MoreThanOneAccountCanBeAddedToAPortfolio stamp: 'IO 11/7/2020 17:00:58'!
PASSED!

!testRun: #PortfolioTest #test05 stamp: 'IO 11/7/2020 17:00:58'!
PASSED!

!testRun: #PortfolioTest #test06 stamp: 'IO 11/7/2020 17:00:58'!
PASSED!

!testRun: #PortfolioTest #test07 stamp: 'IO 11/7/2020 17:00:58'!
PASSED!

!testRun: #PortfolioTest #test08 stamp: 'IO 11/7/2020 17:00:58'!
PASSED!

!testRun: #PortfolioTest #test09 stamp: 'IO 11/7/2020 17:00:58'!
PASSED!

!testRun: #PortfolioTest #test10 stamp: 'IO 11/7/2020 17:00:58'!
PASSED!

!testRun: #PortfolioTest #test11 stamp: 'IO 11/7/2020 17:00:58'!
PASSED!

!testRun: #PortfolioTest #test12 stamp: 'IO 11/7/2020 17:00:58'!
PASSED!

!testRun: #PortfolioTest #test14 stamp: 'IO 11/7/2020 17:00:58'!
PASSED!

!testRun: #PortfolioTest #test15 stamp: 'IO 11/7/2020 17:00:58'!
PASSED!

!testRun: #PortfolioTest #test15nuevo stamp: 'IO 11/7/2020 17:00:58'!
PASSED!

!testRun: #PortfolioTest #test15nuevo2 stamp: 'IO 11/7/2020 17:00:58'!
PASSED!
!PortfolioTest methodsFor: 'errors adding accounts by parents' stamp: 'IO 11/7/2020 17:03:27'!
test16
	
	"no se pueden agregar una cueanta a un hijo si esa cuenta est� en el padre de su padre"
	
	| portfolio1 portfolio2 portfolio3 account1 |
	
	portfolio1 := Portfolio new.
	portfolio2 := Portfolio new.
	portfolio3 := Portfolio new.
	
	account1 := ReceptiveAccount new.
	
	portfolio1 addAccount: account1.
	portfolio1 addPortfolio: portfolio2.
	portfolio2 addPortfolio: portfolio3.

	self should: [	portfolio3 addAccount: account1.] raise: Error withMessageText: Portfolio errorMessageAccountAlreadyAdded.
! !

!methodRemoval: PortfolioTest #test15 stamp: 'IO 11/7/2020 17:03:27'!
test15
	
	"no se pueden agregar una cueanta a un hijo si esa cuenta est� en el padre de su padre"
	
	| portfolio1 portfolio2 portfolio3 account1 |
	
	portfolio1 := Portfolio new.
	portfolio2 := Portfolio new.
	portfolio3 := Portfolio new.
	
	account1 := ReceptiveAccount new.
	
	portfolio1 addAccount: account1.
	portfolio1 addPortfolio: portfolio2.
	portfolio2 addPortfolio: portfolio3.

	self should: [	portfolio3 addAccount: account1.] raise: Error withMessageText: Portfolio errorMessageAccountAlreadyAdded.
!
!PortfolioTest methodsFor: 'errors adding accounts by parents' stamp: 'IO 11/7/2020 17:03:31'!
test15
	
	"no se pueden agregar una cueanta a un portfolio (hijo) de un portfolio (padre), cuando la cuenta ya estaba en el portfolio (padre), con varios padres"
	
	| portfolio1 portfolio2 portfolio3 account1 |
	
	portfolio1 := Portfolio new.
	portfolio2 := Portfolio new.
	portfolio3 := Portfolio new.
	
	account1 := ReceptiveAccount new.
	
	portfolio2 addAccount: account1.
	portfolio2 addPortfolio: portfolio3.
	portfolio1 addPortfolio: portfolio3.

	self should: [	portfolio3 addAccount: account1.] raise: Error withMessageText: Portfolio errorMessageAccountAlreadyAdded.
! !

!methodRemoval: PortfolioTest #test14 stamp: 'IO 11/7/2020 17:03:31'!
test14
	
	"no se pueden agregar una cueanta a un portfolio (hijo) de un portfolio (padre), cuando la cuenta ya estaba en el portfolio (padre), con varios padres"
	
	| portfolio1 portfolio2 portfolio3 account1 |
	
	portfolio1 := Portfolio new.
	portfolio2 := Portfolio new.
	portfolio3 := Portfolio new.
	
	account1 := ReceptiveAccount new.
	
	portfolio2 addAccount: account1.
	portfolio2 addPortfolio: portfolio3.
	portfolio1 addPortfolio: portfolio3.

	self should: [	portfolio3 addAccount: account1.] raise: Error withMessageText: Portfolio errorMessageAccountAlreadyAdded.
!
!PortfolioTest methodsFor: 'errors adding accounts by parents' stamp: 'IO 11/7/2020 17:04:14'!
test14
	
	"no se pueden agregar una cueanta a un portfolio (hijo) de un portfolio (padre), cuando la cuenta ya estaba en el portfolio (padre)"
	
	| portfolio1 portfolio2 account1 |
	
	portfolio1 := Portfolio new.
	portfolio2 := Portfolio new.
	
	account1 := ReceptiveAccount new.
	
	portfolio1 addAccount: account1.
	portfolio1 addPortfolio: portfolio2.

	self should: [	portfolio2 addAccount: account1.] raise: Error withMessageText: Portfolio errorMessageAccountAlreadyAdded.
! !

!methodRemoval: PortfolioTest #test12 stamp: 'IO 11/7/2020 17:04:14'!
test12
	
	"no se pueden agregar una cueanta a un portfolio (hijo) de un portfolio (padre), cuando la cuenta ya estaba en el portfolio (padre)"
	
	| portfolio1 portfolio2 account1 |
	
	portfolio1 := Portfolio new.
	portfolio2 := Portfolio new.
	
	account1 := ReceptiveAccount new.
	
	portfolio1 addAccount: account1.
	portfolio1 addPortfolio: portfolio2.

	self should: [	portfolio2 addAccount: account1.] raise: Error withMessageText: Portfolio errorMessageAccountAlreadyAdded.
!

!testRun: #PortfolioTest #test14 stamp: 'IO 11/7/2020 17:04:21'!
PASSED!

!testRun: #PortfolioTest #test01AnAccountCanBeAddedToAPortfolio stamp: 'IO 11/7/2020 17:04:21'!
PASSED!

!testRun: #PortfolioTest #test02APortfolioHasNoAccountsInitially stamp: 'IO 11/7/2020 17:04:21'!
PASSED!

!testRun: #PortfolioTest #test03APortfolioDoesNotHaveMoreAccountsThanAdded stamp: 'IO 11/7/2020 17:04:21'!
PASSED!

!testRun: #PortfolioTest #test04MoreThanOneAccountCanBeAddedToAPortfolio stamp: 'IO 11/7/2020 17:04:21'!
PASSED!

!testRun: #PortfolioTest #test05 stamp: 'IO 11/7/2020 17:04:21'!
PASSED!

!testRun: #PortfolioTest #test06 stamp: 'IO 11/7/2020 17:04:21'!
PASSED!

!testRun: #PortfolioTest #test07 stamp: 'IO 11/7/2020 17:04:21'!
PASSED!

!testRun: #PortfolioTest #test08 stamp: 'IO 11/7/2020 17:04:21'!
PASSED!

!testRun: #PortfolioTest #test09 stamp: 'IO 11/7/2020 17:04:21'!
PASSED!

!testRun: #PortfolioTest #test10 stamp: 'IO 11/7/2020 17:04:21'!
PASSED!

!testRun: #PortfolioTest #test11 stamp: 'IO 11/7/2020 17:04:21'!
PASSED!

!testRun: #PortfolioTest #test14 stamp: 'IO 11/7/2020 17:04:21'!
PASSED!

!testRun: #PortfolioTest #test15 stamp: 'IO 11/7/2020 17:04:21'!
PASSED!

!testRun: #PortfolioTest #test15nuevo stamp: 'IO 11/7/2020 17:04:21'!
PASSED!

!testRun: #PortfolioTest #test15nuevo2 stamp: 'IO 11/7/2020 17:04:21'!
PASSED!

!testRun: #PortfolioTest #test16 stamp: 'IO 11/7/2020 17:04:21'!
PASSED!
!PortfolioTest methodsFor: 'errors adding portfolios by childern' stamp: 'IO 11/7/2020 17:04:30'!
test12
	
	"no pueden haber cuentas repetidas en un portfolio"
	
	| portfolio1 portfolio2 account1 |
	
	portfolio1 := Portfolio new.
	portfolio2 := Portfolio new.
	
	account1 := ReceptiveAccount new.
	
	portfolio1 addPortfolio: portfolio2.
	portfolio2 addAccount: account1.

	
	self should: [portfolio1 addAccount: account1] raise: Error withMessageText: Portfolio errorMessageAccountAlreadyAdded.

! !

!methodRemoval: PortfolioTest #test10 stamp: 'IO 11/7/2020 17:04:30'!
test10
	
	"no pueden haber cuentas repetidas en un portfolio"
	
	| portfolio1 portfolio2 account1 |
	
	portfolio1 := Portfolio new.
	portfolio2 := Portfolio new.
	
	account1 := ReceptiveAccount new.
	
	portfolio1 addPortfolio: portfolio2.
	portfolio2 addAccount: account1.

	
	self should: [portfolio1 addAccount: account1] raise: Error withMessageText: Portfolio errorMessageAccountAlreadyAdded.

!
!PortfolioTest methodsFor: 'errors adding portfolios by childern' stamp: 'IO 11/7/2020 17:04:34'!
test13
	
	"no pueden haber prtfolios repetidos en un portfolio"
	
	| portfolio1 portfolio2 portfolio3 |
	
	portfolio1 := Portfolio new.
	portfolio2 := Portfolio new.
	portfolio3 := Portfolio new.
	
	portfolio1 addPortfolio: portfolio2.
	portfolio2 addPortfolio: portfolio3.

	self should: [portfolio1 addPortfolio: portfolio3] raise: Error withMessageText: Portfolio errorMessagePortfolioAlreadyAdded.

! !

!methodRemoval: PortfolioTest #test11 stamp: 'IO 11/7/2020 17:04:34'!
test11
	
	"no pueden haber prtfolios repetidos en un portfolio"
	
	| portfolio1 portfolio2 portfolio3 |
	
	portfolio1 := Portfolio new.
	portfolio2 := Portfolio new.
	portfolio3 := Portfolio new.
	
	portfolio1 addPortfolio: portfolio2.
	portfolio2 addPortfolio: portfolio3.

	self should: [portfolio1 addPortfolio: portfolio3] raise: Error withMessageText: Portfolio errorMessagePortfolioAlreadyAdded.

!
!PortfolioTest methodsFor: 'errors adding accounts by children' stamp: 'IO 11/7/2020 17:04:41'!
test10
	
	"no se pueden agregar una cueanta a un portfolio (hijo) de un portfolio (padre), cuando la cuenta ya estaba en el portfolio (padre)"
	
	| portfolio1 portfolio2 account1 |
	
	portfolio1 := Portfolio new.
	portfolio2 := Portfolio new.
	
	account1 := ReceptiveAccount new.
	
	portfolio2 addAccount: account1.
	portfolio1 addPortfolio: portfolio2.

	self should: [	portfolio1 addAccount: account1.] raise: Error withMessageText: Portfolio errorMessageAccountAlreadyAdded.
! !

!methodRemoval: PortfolioTest #test15nuevo stamp: 'IO 11/7/2020 17:04:41'!
test15nuevo
	
	"no se pueden agregar una cueanta a un portfolio (hijo) de un portfolio (padre), cuando la cuenta ya estaba en el portfolio (padre)"
	
	| portfolio1 portfolio2 account1 |
	
	portfolio1 := Portfolio new.
	portfolio2 := Portfolio new.
	
	account1 := ReceptiveAccount new.
	
	portfolio2 addAccount: account1.
	portfolio1 addPortfolio: portfolio2.

	self should: [	portfolio1 addAccount: account1.] raise: Error withMessageText: Portfolio errorMessageAccountAlreadyAdded.
!
!PortfolioTest methodsFor: 'errors adding accounts by children' stamp: 'IO 11/7/2020 17:04:44'!
test11
	
	"no se pueden agregar una cueanta a un portfolio (hijo) de un portfolio (padre), cuando la cuenta ya estaba en el portfolio (padre)"
	
	| portfolio1 portfolio2 portfolio3 account1 |
	
	portfolio1 := Portfolio new.
	portfolio2 := Portfolio new.
	portfolio3 := Portfolio new.	

	account1 := ReceptiveAccount new.
	
	portfolio3 addAccount: account1.
	portfolio1 addPortfolio: portfolio2.
	portfolio2 addPortfolio: portfolio3.

	self should: [	portfolio1 addAccount: account1.] raise: Error withMessageText: Portfolio errorMessageAccountAlreadyAdded.
! !

!methodRemoval: PortfolioTest #test15nuevo2 stamp: 'IO 11/7/2020 17:04:44'!
test15nuevo2
	
	"no se pueden agregar una cueanta a un portfolio (hijo) de un portfolio (padre), cuando la cuenta ya estaba en el portfolio (padre)"
	
	| portfolio1 portfolio2 portfolio3 account1 |
	
	portfolio1 := Portfolio new.
	portfolio2 := Portfolio new.
	portfolio3 := Portfolio new.	

	account1 := ReceptiveAccount new.
	
	portfolio3 addAccount: account1.
	portfolio1 addPortfolio: portfolio2.
	portfolio2 addPortfolio: portfolio3.

	self should: [	portfolio1 addAccount: account1.] raise: Error withMessageText: Portfolio errorMessageAccountAlreadyAdded.
!
!Portfolio methodsFor: 'validations' stamp: 'IO 11/7/2020 17:06:30'!
validateAccountBeforeAdding: anAccount
	
	self validateAccountNotAlredyAdded: anAccount.
	fatherPortfolios do: [:aPortfolio | aPortfolio validateAccountNotInParents: anAccount].! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'IO 11/7/2020 17:06:30' prior: 50870430!
addAccount: anAccount

	self validateAccountBeforeAdding: anAccount.
	
	accounts add: anAccount.! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'IO 11/7/2020 17:06:30' prior: 50870450!
validateAccountNotInParents: anAccount
	
	self validateAccountNotAlredyAdded: anAccount.
	fatherPortfolios do: [:aPortfolio | aPortfolio validateAccountBeforeAdding: anAccount].! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'IO 11/7/2020 17:06:30' prior: 50871081!
validateAccountBeforeAdding: anAccount
	
	self validateAccountNotAlredyAdded: anAccount.
	fatherPortfolios do: [:aPortfolio | aPortfolio validateAccountBeforeAdding: anAccount].! !

!methodRemoval: Portfolio #validateAccountNotInParents: stamp: 'IO 11/7/2020 17:06:30'!
validateAccountNotInParents: anAccount
	
	self validateAccountNotAlredyAdded: anAccount.
	fatherPortfolios do: [:aPortfolio | aPortfolio validateAccountBeforeAdding: anAccount].!

!testRun: #PortfolioTest #test01AnAccountCanBeAddedToAPortfolio stamp: 'IO 11/7/2020 17:06:35'!
PASSED!

!testRun: #PortfolioTest #test02APortfolioHasNoAccountsInitially stamp: 'IO 11/7/2020 17:06:35'!
PASSED!

!testRun: #PortfolioTest #test03APortfolioDoesNotHaveMoreAccountsThanAdded stamp: 'IO 11/7/2020 17:06:35'!
PASSED!

!testRun: #PortfolioTest #test04MoreThanOneAccountCanBeAddedToAPortfolio stamp: 'IO 11/7/2020 17:06:35'!
PASSED!

!testRun: #PortfolioTest #test05 stamp: 'IO 11/7/2020 17:06:35'!
PASSED!

!testRun: #PortfolioTest #test06 stamp: 'IO 11/7/2020 17:06:35'!
PASSED!

!testRun: #PortfolioTest #test07 stamp: 'IO 11/7/2020 17:06:35'!
PASSED!

!testRun: #PortfolioTest #test08 stamp: 'IO 11/7/2020 17:06:35'!
PASSED!

!testRun: #PortfolioTest #test09 stamp: 'IO 11/7/2020 17:06:35'!
PASSED!

!testRun: #PortfolioTest #test10 stamp: 'IO 11/7/2020 17:06:35'!
PASSED!

!testRun: #PortfolioTest #test11 stamp: 'IO 11/7/2020 17:06:35'!
PASSED!

!testRun: #PortfolioTest #test12 stamp: 'IO 11/7/2020 17:06:35'!
PASSED!

!testRun: #PortfolioTest #test13 stamp: 'IO 11/7/2020 17:06:35'!
PASSED!

!testRun: #PortfolioTest #test14 stamp: 'IO 11/7/2020 17:06:35'!
PASSED!

!testRun: #PortfolioTest #test15 stamp: 'IO 11/7/2020 17:06:35'!
PASSED!

!testRun: #PortfolioTest #test16 stamp: 'IO 11/7/2020 17:06:35'!
PASSED!
!Portfolio methodsFor: 'portfolios' stamp: 'IO 11/7/2020 17:08:54' prior: 50870413!
addPortfolio: aPortfolio
	(self includesPortfolio: aPortfolio) ifTrue: [self error: Portfolio errorMessagePortfolioAlreadyAdded].
	
	portfolios add: aPortfolio.
	fatherPortfolios add: aPortfolio.
! !

!testRun: #PortfolioTest #test01AnAccountCanBeAddedToAPortfolio stamp: 'IO 11/7/2020 17:08:55'!
PASSED!

!testRun: #PortfolioTest #test02APortfolioHasNoAccountsInitially stamp: 'IO 11/7/2020 17:08:55'!
PASSED!

!testRun: #PortfolioTest #test03APortfolioDoesNotHaveMoreAccountsThanAdded stamp: 'IO 11/7/2020 17:08:55'!
PASSED!

!testRun: #PortfolioTest #test04MoreThanOneAccountCanBeAddedToAPortfolio stamp: 'IO 11/7/2020 17:08:55'!
PASSED!

!testRun: #PortfolioTest #test05 stamp: 'IO 11/7/2020 17:08:55'!
PASSED!

!testRun: #PortfolioTest #test06 stamp: 'IO 11/7/2020 17:08:55'!
PASSED!

!testRun: #PortfolioTest #test07 stamp: 'IO 11/7/2020 17:08:55'!
PASSED!

!testRun: #PortfolioTest #test08 stamp: 'IO 11/7/2020 17:08:55'!
PASSED!

!testRun: #PortfolioTest #test09 stamp: 'IO 11/7/2020 17:08:55'!
PASSED!

!testRun: #PortfolioTest #test10 stamp: 'IO 11/7/2020 17:08:55'!
PASSED!

!testRun: #PortfolioTest #test11 stamp: 'IO 11/7/2020 17:08:55'!
PASSED!

!testRun: #PortfolioTest #test12 stamp: 'IO 11/7/2020 17:08:55'!
PASSED!

!testRun: #PortfolioTest #test13 stamp: 'IO 11/7/2020 17:08:55'!
PASSED!

!testRun: #PortfolioTest #test14 stamp: 'IO 11/7/2020 17:08:55'!
FAILURE!

!testRun: #PortfolioTest #test15 stamp: 'IO 11/7/2020 17:08:55'!
FAILURE!

!testRun: #PortfolioTest #test16 stamp: 'IO 11/7/2020 17:08:55'!
FAILURE!
!Portfolio methodsFor: 'portfolios' stamp: 'IO 11/7/2020 17:09:01' prior: 50871165!
addPortfolio: aPortfolio
	(self includesPortfolio: aPortfolio) ifTrue: [self error: Portfolio errorMessagePortfolioAlreadyAdded].
	
	portfolios add: aPortfolio.
	aPortfolio addAsFather: self. 
! !

!testRun: #PortfolioTest #test01AnAccountCanBeAddedToAPortfolio stamp: 'IO 11/7/2020 17:09:02'!
PASSED!

!testRun: #PortfolioTest #test02APortfolioHasNoAccountsInitially stamp: 'IO 11/7/2020 17:09:02'!
PASSED!

!testRun: #PortfolioTest #test03APortfolioDoesNotHaveMoreAccountsThanAdded stamp: 'IO 11/7/2020 17:09:02'!
PASSED!

!testRun: #PortfolioTest #test04MoreThanOneAccountCanBeAddedToAPortfolio stamp: 'IO 11/7/2020 17:09:02'!
PASSED!

!testRun: #PortfolioTest #test05 stamp: 'IO 11/7/2020 17:09:02'!
PASSED!

!testRun: #PortfolioTest #test06 stamp: 'IO 11/7/2020 17:09:02'!
PASSED!

!testRun: #PortfolioTest #test07 stamp: 'IO 11/7/2020 17:09:02'!
PASSED!

!testRun: #PortfolioTest #test08 stamp: 'IO 11/7/2020 17:09:02'!
PASSED!

!testRun: #PortfolioTest #test09 stamp: 'IO 11/7/2020 17:09:02'!
PASSED!

!testRun: #PortfolioTest #test10 stamp: 'IO 11/7/2020 17:09:02'!
PASSED!

!testRun: #PortfolioTest #test11 stamp: 'IO 11/7/2020 17:09:02'!
PASSED!

!testRun: #PortfolioTest #test12 stamp: 'IO 11/7/2020 17:09:02'!
PASSED!

!testRun: #PortfolioTest #test13 stamp: 'IO 11/7/2020 17:09:02'!
PASSED!

!testRun: #PortfolioTest #test14 stamp: 'IO 11/7/2020 17:09:02'!
PASSED!

!testRun: #PortfolioTest #test15 stamp: 'IO 11/7/2020 17:09:02'!
PASSED!

!testRun: #PortfolioTest #test16 stamp: 'IO 11/7/2020 17:09:02'!
PASSED!
!PortfolioTest methodsFor: 'errors adding accounts by parents' stamp: 'IO 11/7/2020 17:13:56'!
test17
	
	"no se pueden agregar un portfolio cuando el padre ya tiene ese portfolio"
	
	| portfolio1 portfolio2 portfolio3 |
	
	portfolio1 := Portfolio new.
	portfolio2 := Portfolio new.
	portfolio3 := Portfolio new.

	portfolio1 addPortfolio: portfolio2.
	portfolio2 addPortfolio: portfolio3.

	self should: [	portfolio1 addPortfolio: portfolio3.] raise: Error withMessageText: Portfolio errorMessagePortfolioAlreadyAdded.
! !

!testRun: #PortfolioTest #test17 stamp: 'IO 11/7/2020 17:14:25'!
PASSED!

!testRun: #PortfolioTest #test01AnAccountCanBeAddedToAPortfolio stamp: 'IO 11/7/2020 17:14:25'!
PASSED!

!testRun: #PortfolioTest #test02APortfolioHasNoAccountsInitially stamp: 'IO 11/7/2020 17:14:25'!
PASSED!

!testRun: #PortfolioTest #test03APortfolioDoesNotHaveMoreAccountsThanAdded stamp: 'IO 11/7/2020 17:14:25'!
PASSED!

!testRun: #PortfolioTest #test04MoreThanOneAccountCanBeAddedToAPortfolio stamp: 'IO 11/7/2020 17:14:25'!
PASSED!

!testRun: #PortfolioTest #test05 stamp: 'IO 11/7/2020 17:14:25'!
PASSED!

!testRun: #PortfolioTest #test06 stamp: 'IO 11/7/2020 17:14:25'!
PASSED!

!testRun: #PortfolioTest #test07 stamp: 'IO 11/7/2020 17:14:25'!
PASSED!

!testRun: #PortfolioTest #test08 stamp: 'IO 11/7/2020 17:14:25'!
PASSED!

!testRun: #PortfolioTest #test09 stamp: 'IO 11/7/2020 17:14:25'!
PASSED!

!testRun: #PortfolioTest #test10 stamp: 'IO 11/7/2020 17:14:25'!
PASSED!

!testRun: #PortfolioTest #test11 stamp: 'IO 11/7/2020 17:14:25'!
PASSED!

!testRun: #PortfolioTest #test12 stamp: 'IO 11/7/2020 17:14:25'!
PASSED!

!testRun: #PortfolioTest #test13 stamp: 'IO 11/7/2020 17:14:25'!
PASSED!

!testRun: #PortfolioTest #test14 stamp: 'IO 11/7/2020 17:14:25'!
PASSED!

!testRun: #PortfolioTest #test15 stamp: 'IO 11/7/2020 17:14:25'!
PASSED!

!testRun: #PortfolioTest #test16 stamp: 'IO 11/7/2020 17:14:25'!
PASSED!

!testRun: #PortfolioTest #test17 stamp: 'IO 11/7/2020 17:14:25'!
PASSED!
!PortfolioTest methodsFor: 'errors adding portfolios by parents' stamp: 'IO 11/7/2020 17:14:38' prior: 50871267!
test17
	
	"no se pueden agregar un portfolio cuando el padre ya tiene ese portfolio"
	
	| portfolio1 portfolio2 portfolio3 |
	
	portfolio1 := Portfolio new.
	portfolio2 := Portfolio new.
	portfolio3 := Portfolio new.

	portfolio1 addPortfolio: portfolio2.
	portfolio2 addPortfolio: portfolio3.

	self should: [	portfolio3 addPortfolio: portfolio1.] raise: Error withMessageText: Portfolio errorMessagePortfolioAlreadyAdded.
! !

!testRun: #PortfolioTest #test17 stamp: 'IO 11/7/2020 17:14:39'!
FAILURE!
!PortfolioTest methodsFor: 'errors adding portfolios by parents' stamp: 'IO 11/7/2020 17:15:50' prior: 50871331!
test17
	
	"no se pueden agregar un portfolio cuando el padre ya tiene ese portfolio"
	
	| portfolio1 portfolio2 portfolio3 |
	
	
	"
	p1 -> [p2, p3] -> p3
	"
	
	portfolio1 := Portfolio new.
	portfolio2 := Portfolio new.
	portfolio3 := Portfolio new.

	portfolio1 addPortfolio: portfolio2.
	portfolio2 addPortfolio: portfolio3.

	self should: [	portfolio2 addPortfolio: portfolio3.] raise: Error withMessageText: Portfolio errorMessagePortfolioAlreadyAdded.
! !

!testRun: #PortfolioTest #test17 stamp: 'IO 11/7/2020 17:15:51'!
PASSED!

!testRun: #PortfolioTest #test01AnAccountCanBeAddedToAPortfolio stamp: 'IO 11/7/2020 17:15:51'!
PASSED!

!testRun: #PortfolioTest #test02APortfolioHasNoAccountsInitially stamp: 'IO 11/7/2020 17:15:51'!
PASSED!

!testRun: #PortfolioTest #test03APortfolioDoesNotHaveMoreAccountsThanAdded stamp: 'IO 11/7/2020 17:15:51'!
PASSED!

!testRun: #PortfolioTest #test04MoreThanOneAccountCanBeAddedToAPortfolio stamp: 'IO 11/7/2020 17:15:51'!
PASSED!

!testRun: #PortfolioTest #test05 stamp: 'IO 11/7/2020 17:15:51'!
PASSED!

!testRun: #PortfolioTest #test06 stamp: 'IO 11/7/2020 17:15:51'!
PASSED!

!testRun: #PortfolioTest #test07 stamp: 'IO 11/7/2020 17:15:51'!
PASSED!

!testRun: #PortfolioTest #test08 stamp: 'IO 11/7/2020 17:15:51'!
PASSED!

!testRun: #PortfolioTest #test09 stamp: 'IO 11/7/2020 17:15:51'!
PASSED!

!testRun: #PortfolioTest #test10 stamp: 'IO 11/7/2020 17:15:51'!
PASSED!

!testRun: #PortfolioTest #test11 stamp: 'IO 11/7/2020 17:15:51'!
PASSED!

!testRun: #PortfolioTest #test12 stamp: 'IO 11/7/2020 17:15:51'!
PASSED!

!testRun: #PortfolioTest #test13 stamp: 'IO 11/7/2020 17:15:51'!
PASSED!

!testRun: #PortfolioTest #test14 stamp: 'IO 11/7/2020 17:15:51'!
PASSED!

!testRun: #PortfolioTest #test15 stamp: 'IO 11/7/2020 17:15:51'!
PASSED!

!testRun: #PortfolioTest #test16 stamp: 'IO 11/7/2020 17:15:51'!
PASSED!

!testRun: #PortfolioTest #test17 stamp: 'IO 11/7/2020 17:15:51'!
PASSED!
!PortfolioTest methodsFor: 'errors adding portfolios by parents' stamp: 'IO 11/7/2020 17:16:26' prior: 50871351!
test17
	
	"no se pueden agregar un portfolio cuando el padre ya tiene ese portfolio"
	
	| portfolio1 portfolio2 portfolio3 |
	
	
	"
	p1    ->  p2 -> p3
		-> p3
	"
	
	portfolio1 := Portfolio new.
	portfolio2 := Portfolio new.
	portfolio3 := Portfolio new.

	portfolio1 addPortfolio: portfolio2.
	portfolio2 addPortfolio: portfolio3.

	self should: [	portfolio1 addPortfolio: portfolio3.] raise: Error withMessageText: Portfolio errorMessagePortfolioAlreadyAdded.
! !

!testRun: #PortfolioTest #test17 stamp: 'IO 11/7/2020 17:16:27'!
PASSED!

!testRun: #PortfolioTest #test01AnAccountCanBeAddedToAPortfolio stamp: 'IO 11/7/2020 17:16:27'!
PASSED!

!testRun: #PortfolioTest #test02APortfolioHasNoAccountsInitially stamp: 'IO 11/7/2020 17:16:27'!
PASSED!

!testRun: #PortfolioTest #test03APortfolioDoesNotHaveMoreAccountsThanAdded stamp: 'IO 11/7/2020 17:16:27'!
PASSED!

!testRun: #PortfolioTest #test04MoreThanOneAccountCanBeAddedToAPortfolio stamp: 'IO 11/7/2020 17:16:27'!
PASSED!

!testRun: #PortfolioTest #test05 stamp: 'IO 11/7/2020 17:16:27'!
PASSED!

!testRun: #PortfolioTest #test06 stamp: 'IO 11/7/2020 17:16:27'!
PASSED!

!testRun: #PortfolioTest #test07 stamp: 'IO 11/7/2020 17:16:27'!
PASSED!

!testRun: #PortfolioTest #test08 stamp: 'IO 11/7/2020 17:16:27'!
PASSED!

!testRun: #PortfolioTest #test09 stamp: 'IO 11/7/2020 17:16:27'!
PASSED!

!testRun: #PortfolioTest #test10 stamp: 'IO 11/7/2020 17:16:27'!
PASSED!

!testRun: #PortfolioTest #test11 stamp: 'IO 11/7/2020 17:16:27'!
PASSED!

!testRun: #PortfolioTest #test12 stamp: 'IO 11/7/2020 17:16:27'!
PASSED!

!testRun: #PortfolioTest #test13 stamp: 'IO 11/7/2020 17:16:27'!
PASSED!

!testRun: #PortfolioTest #test14 stamp: 'IO 11/7/2020 17:16:27'!
PASSED!

!testRun: #PortfolioTest #test15 stamp: 'IO 11/7/2020 17:16:27'!
PASSED!

!testRun: #PortfolioTest #test16 stamp: 'IO 11/7/2020 17:16:27'!
PASSED!

!testRun: #PortfolioTest #test17 stamp: 'IO 11/7/2020 17:16:27'!
PASSED!
!PortfolioTest methodsFor: 'errors adding portfolios by parents' stamp: 'IO 11/7/2020 17:16:57' prior: 50871416!
test17
	
	"no se pueden agregar un portfolio cuando el padre ya tiene ese portfolio"
	
	| portfolio1 portfolio2 |
	
	
	"
	p1    ->  p2 -> p1
	"
	
	portfolio1 := Portfolio new.
	portfolio2 := Portfolio new.

	portfolio1 addPortfolio: portfolio2.

	self should: [	portfolio2 addPortfolio: portfolio1.] raise: Error withMessageText: Portfolio errorMessagePortfolioAlreadyAdded.
! !

!testRun: #PortfolioTest #test17 stamp: 'IO 11/7/2020 17:16:58'!
FAILURE!
!PortfolioTest methodsFor: 'errors adding portfolios by parents' stamp: 'IO 11/7/2020 17:17:17' prior: 50871481!
test17
	
	"
		no se pueden agregar un portfolio cuando el padre ya tiene ese portfolio
		p1 ->  p2 -> p1
	"
	
	| portfolio1 portfolio2 |
	
	portfolio1 := Portfolio new.
	portfolio2 := Portfolio new.

	portfolio1 addPortfolio: portfolio2.

	self should: [	portfolio2 addPortfolio: portfolio1.] raise: Error withMessageText: Portfolio errorMessagePortfolioAlreadyAdded.
! !

!testRun: #PortfolioTest #test17 stamp: 'IO 11/7/2020 17:17:17'!
FAILURE!
!Portfolio methodsFor: 'portfolios' stamp: 'IO 11/7/2020 17:18:01' prior: 50871216!
addPortfolio: aPortfolio
	(self includesPortfolio: aPortfolio) ifTrue: [self error: Portfolio errorMessagePortfolioAlreadyAdded].
	(fatherPortfolios includes: aPortfolio) ifTrue: [self error: Portfolio errorMessagePortfolioAlreadyAdded].
	
	portfolios add: aPortfolio.
	aPortfolio addAsFather: self. 
! !

!testRun: #PortfolioTest #test01AnAccountCanBeAddedToAPortfolio stamp: 'IO 11/7/2020 17:18:02'!
PASSED!

!testRun: #PortfolioTest #test02APortfolioHasNoAccountsInitially stamp: 'IO 11/7/2020 17:18:02'!
PASSED!

!testRun: #PortfolioTest #test03APortfolioDoesNotHaveMoreAccountsThanAdded stamp: 'IO 11/7/2020 17:18:02'!
PASSED!

!testRun: #PortfolioTest #test04MoreThanOneAccountCanBeAddedToAPortfolio stamp: 'IO 11/7/2020 17:18:02'!
PASSED!

!testRun: #PortfolioTest #test05 stamp: 'IO 11/7/2020 17:18:02'!
PASSED!

!testRun: #PortfolioTest #test06 stamp: 'IO 11/7/2020 17:18:02'!
PASSED!

!testRun: #PortfolioTest #test07 stamp: 'IO 11/7/2020 17:18:02'!
PASSED!

!testRun: #PortfolioTest #test08 stamp: 'IO 11/7/2020 17:18:02'!
PASSED!

!testRun: #PortfolioTest #test09 stamp: 'IO 11/7/2020 17:18:02'!
PASSED!

!testRun: #PortfolioTest #test10 stamp: 'IO 11/7/2020 17:18:02'!
PASSED!

!testRun: #PortfolioTest #test11 stamp: 'IO 11/7/2020 17:18:02'!
PASSED!

!testRun: #PortfolioTest #test12 stamp: 'IO 11/7/2020 17:18:02'!
PASSED!

!testRun: #PortfolioTest #test13 stamp: 'IO 11/7/2020 17:18:02'!
PASSED!

!testRun: #PortfolioTest #test14 stamp: 'IO 11/7/2020 17:18:02'!
PASSED!

!testRun: #PortfolioTest #test15 stamp: 'IO 11/7/2020 17:18:02'!
PASSED!

!testRun: #PortfolioTest #test16 stamp: 'IO 11/7/2020 17:18:02'!
PASSED!

!testRun: #PortfolioTest #test17 stamp: 'IO 11/7/2020 17:18:02'!
PASSED!
!PortfolioTest methodsFor: 'errors adding portfolios by parents' stamp: 'IO 11/7/2020 17:18:47' prior: 50871499!
test17
	
	"
		no se pueden agregar un portfolio cuando el padre del padre ya tiene ese portfolio
		p1 ->  p2 -> p3 -> p1
	"
	
	| portfolio1 portfolio2 portfolio3 |
	
	portfolio1 := Portfolio new.
	portfolio2 := Portfolio new.
	portfolio3 := Portfolio new.

	portfolio1 addPortfolio: portfolio2.
	portfolio2 addPortfolio: portfolio3.

	self should: [	portfolio3 addPortfolio: portfolio1.] raise: Error withMessageText: Portfolio errorMessagePortfolioAlreadyAdded.
! !

!testRun: #PortfolioTest #test17 stamp: 'IO 11/7/2020 17:18:47'!
FAILURE!
!Portfolio methodsFor: 'portfolios' stamp: 'IO 11/7/2020 17:20:08' prior: 50870422!
includesPortfolio: aPortfolio 

	portfolios do: [ :portfolio | (portfolio includesPortfolio: aPortfolio) ifTrue: [^true]].
	fatherPortfolios do: [ :portfolio | (portfolio includesPortfolio: aPortfolio) ifTrue: [^true]].

	^portfolios includes: aPortfolio.

! !

!testRun: #PortfolioTest #test01AnAccountCanBeAddedToAPortfolio stamp: 'IO 11/7/2020 17:20:12'!
PASSED!

!testRun: #PortfolioTest #test02APortfolioHasNoAccountsInitially stamp: 'IO 11/7/2020 17:20:12'!
PASSED!

!testRun: #PortfolioTest #test03APortfolioDoesNotHaveMoreAccountsThanAdded stamp: 'IO 11/7/2020 17:20:12'!
PASSED!

!testRun: #PortfolioTest #test04MoreThanOneAccountCanBeAddedToAPortfolio stamp: 'IO 11/7/2020 17:20:12'!
PASSED!

!testRun: #PortfolioTest #test05 stamp: 'IO 11/7/2020 17:20:12'!
PASSED!
!Portfolio methodsFor: 'portfolios' stamp: 'IO 11/7/2020 17:20:31' prior: 50871593!
includesPortfolio: aPortfolio 

	portfolios do: [ :portfolio | (portfolio includesPortfolio: aPortfolio) ifTrue: [^true]].

	^portfolios includes: aPortfolio.

! !
!Portfolio methodsFor: 'portfolios' stamp: 'IO 11/7/2020 17:20:50' prior: 50871516!
addPortfolio: aPortfolio
	(self includesPortfolio: aPortfolio) ifTrue: [self error: Portfolio errorMessagePortfolioAlreadyAdded].
	(fatherPortfolios includesPortfolio: aPortfolio) ifTrue: [self error: Portfolio errorMessagePortfolioAlreadyAdded].
	
	portfolios add: aPortfolio.
	aPortfolio addAsFather: self. 
! !

!testRun: #PortfolioTest #test01AnAccountCanBeAddedToAPortfolio stamp: 'IO 11/7/2020 17:20:51'!
PASSED!

!testRun: #PortfolioTest #test02APortfolioHasNoAccountsInitially stamp: 'IO 11/7/2020 17:20:51'!
PASSED!

!testRun: #PortfolioTest #test03APortfolioDoesNotHaveMoreAccountsThanAdded stamp: 'IO 11/7/2020 17:20:51'!
PASSED!

!testRun: #PortfolioTest #test04MoreThanOneAccountCanBeAddedToAPortfolio stamp: 'IO 11/7/2020 17:20:51'!
PASSED!

!testRun: #PortfolioTest #test05 stamp: 'IO 11/7/2020 17:20:51'!
PASSED!

!testRun: #PortfolioTest #test06 stamp: 'IO 11/7/2020 17:20:51'!
ERROR!

!testRun: #PortfolioTest #test07 stamp: 'IO 11/7/2020 17:20:51'!
ERROR!

!testRun: #PortfolioTest #test08 stamp: 'IO 11/7/2020 17:20:51'!
ERROR!

!testRun: #PortfolioTest #test09 stamp: 'IO 11/7/2020 17:20:51'!
ERROR!

!testRun: #PortfolioTest #test10 stamp: 'IO 11/7/2020 17:20:51'!
ERROR!

!testRun: #PortfolioTest #test11 stamp: 'IO 11/7/2020 17:20:51'!
ERROR!

!testRun: #PortfolioTest #test12 stamp: 'IO 11/7/2020 17:20:51'!
ERROR!

!testRun: #PortfolioTest #test13 stamp: 'IO 11/7/2020 17:20:51'!
ERROR!

!testRun: #PortfolioTest #test14 stamp: 'IO 11/7/2020 17:20:51'!
ERROR!

!testRun: #PortfolioTest #test15 stamp: 'IO 11/7/2020 17:20:51'!
ERROR!

!testRun: #PortfolioTest #test16 stamp: 'IO 11/7/2020 17:20:51'!
ERROR!

!testRun: #PortfolioTest #test17 stamp: 'IO 11/7/2020 17:20:51'!
ERROR!
!Portfolio methodsFor: 'portfolios' stamp: 'IO 11/7/2020 17:20:56' prior: 50871628!
addPortfolio: aPortfolio
	(self includesPortfolio: aPortfolio) ifTrue: [self error: Portfolio errorMessagePortfolioAlreadyAdded].
	(fatherPortfolios includes: aPortfolio) ifTrue: [self error: Portfolio errorMessagePortfolioAlreadyAdded].
	
	portfolios add: aPortfolio.
	aPortfolio addAsFather: self. 
! !

!testRun: #PortfolioTest #test01AnAccountCanBeAddedToAPortfolio stamp: 'IO 11/7/2020 17:20:57'!
PASSED!

!testRun: #PortfolioTest #test02APortfolioHasNoAccountsInitially stamp: 'IO 11/7/2020 17:20:57'!
PASSED!

!testRun: #PortfolioTest #test03APortfolioDoesNotHaveMoreAccountsThanAdded stamp: 'IO 11/7/2020 17:20:57'!
PASSED!

!testRun: #PortfolioTest #test04MoreThanOneAccountCanBeAddedToAPortfolio stamp: 'IO 11/7/2020 17:20:57'!
PASSED!

!testRun: #PortfolioTest #test05 stamp: 'IO 11/7/2020 17:20:57'!
PASSED!

!testRun: #PortfolioTest #test06 stamp: 'IO 11/7/2020 17:20:57'!
PASSED!

!testRun: #PortfolioTest #test07 stamp: 'IO 11/7/2020 17:20:57'!
PASSED!

!testRun: #PortfolioTest #test08 stamp: 'IO 11/7/2020 17:20:57'!
PASSED!

!testRun: #PortfolioTest #test09 stamp: 'IO 11/7/2020 17:20:57'!
PASSED!

!testRun: #PortfolioTest #test10 stamp: 'IO 11/7/2020 17:20:57'!
PASSED!

!testRun: #PortfolioTest #test11 stamp: 'IO 11/7/2020 17:20:57'!
PASSED!

!testRun: #PortfolioTest #test12 stamp: 'IO 11/7/2020 17:20:57'!
PASSED!

!testRun: #PortfolioTest #test13 stamp: 'IO 11/7/2020 17:20:57'!
PASSED!

!testRun: #PortfolioTest #test14 stamp: 'IO 11/7/2020 17:20:57'!
PASSED!

!testRun: #PortfolioTest #test15 stamp: 'IO 11/7/2020 17:20:57'!
PASSED!

!testRun: #PortfolioTest #test16 stamp: 'IO 11/7/2020 17:20:57'!
PASSED!

!testRun: #PortfolioTest #test17 stamp: 'IO 11/7/2020 17:20:57'!
FAILURE!

!testRun: #PortfolioTest #test17 stamp: 'IO 11/7/2020 17:20:57'!
FAILURE!
!Portfolio methodsFor: 'portfolios' stamp: 'IO 11/7/2020 17:23:45' prior: 50871684!
addPortfolio: aPortfolio
	(self includesPortfolio: aPortfolio) ifTrue: [self error: Portfolio errorMessagePortfolioAlreadyAdded].
	(fatherPortfolios includes: aPortfolio) ifTrue: [self error: Portfolio errorMessagePortfolioAlreadyAdded].

	fatherPortfolios do: [ :fatherPortfolio | (fatherPortfolio includes: aPortfolio) ifTrue: [self error: Portfolio errorMessagePortfolioAlreadyAdded].]
	
	portfolios add: aPortfolio.
	aPortfolio addAsFather: self. 
! !

!testRun: #PortfolioTest #test01AnAccountCanBeAddedToAPortfolio stamp: 'IO 11/7/2020 17:23:47'!
PASSED!

!testRun: #PortfolioTest #test02APortfolioHasNoAccountsInitially stamp: 'IO 11/7/2020 17:23:47'!
PASSED!

!testRun: #PortfolioTest #test03APortfolioDoesNotHaveMoreAccountsThanAdded stamp: 'IO 11/7/2020 17:23:47'!
PASSED!

!testRun: #PortfolioTest #test04MoreThanOneAccountCanBeAddedToAPortfolio stamp: 'IO 11/7/2020 17:23:47'!
PASSED!

!testRun: #PortfolioTest #test05 stamp: 'IO 11/7/2020 17:23:47'!
PASSED!

!testRun: #PortfolioTest #test06 stamp: 'IO 11/7/2020 17:23:47'!
ERROR!

!testRun: #PortfolioTest #test07 stamp: 'IO 11/7/2020 17:23:47'!
ERROR!

!testRun: #PortfolioTest #test08 stamp: 'IO 11/7/2020 17:23:47'!
ERROR!

!testRun: #PortfolioTest #test09 stamp: 'IO 11/7/2020 17:23:47'!
ERROR!

!testRun: #PortfolioTest #test10 stamp: 'IO 11/7/2020 17:23:47'!
ERROR!

!testRun: #PortfolioTest #test11 stamp: 'IO 11/7/2020 17:23:47'!
ERROR!

!testRun: #PortfolioTest #test12 stamp: 'IO 11/7/2020 17:23:47'!
ERROR!

!testRun: #PortfolioTest #test13 stamp: 'IO 11/7/2020 17:23:47'!
ERROR!

!testRun: #PortfolioTest #test14 stamp: 'IO 11/7/2020 17:23:47'!
ERROR!

!testRun: #PortfolioTest #test15 stamp: 'IO 11/7/2020 17:23:47'!
ERROR!

!testRun: #PortfolioTest #test16 stamp: 'IO 11/7/2020 17:23:47'!
ERROR!

!testRun: #PortfolioTest #test17 stamp: 'IO 11/7/2020 17:23:47'!
ERROR!
!Portfolio methodsFor: 'portfolios' stamp: 'IO 11/7/2020 17:24:00' prior: 50871743!
addPortfolio: aPortfolio
	(self includesPortfolio: aPortfolio) ifTrue: [self error: Portfolio errorMessagePortfolioAlreadyAdded].
	(fatherPortfolios includes: aPortfolio) ifTrue: [self error: Portfolio errorMessagePortfolioAlreadyAdded].

	fatherPortfolios do: [ :fatherPortfolio | (fatherPortfolio includesFatherPortfolio: aPortfolio) ifTrue: [self error: Portfolio errorMessagePortfolioAlreadyAdded].]
	
	portfolios add: aPortfolio.
	aPortfolio addAsFather: self. 
! !

!testRun: #PortfolioTest #test01AnAccountCanBeAddedToAPortfolio stamp: 'IO 11/7/2020 17:24:03'!
PASSED!

!testRun: #PortfolioTest #test02APortfolioHasNoAccountsInitially stamp: 'IO 11/7/2020 17:24:03'!
PASSED!

!testRun: #PortfolioTest #test03APortfolioDoesNotHaveMoreAccountsThanAdded stamp: 'IO 11/7/2020 17:24:03'!
PASSED!

!testRun: #PortfolioTest #test04MoreThanOneAccountCanBeAddedToAPortfolio stamp: 'IO 11/7/2020 17:24:03'!
PASSED!

!testRun: #PortfolioTest #test05 stamp: 'IO 11/7/2020 17:24:03'!
PASSED!

!testRun: #PortfolioTest #test06 stamp: 'IO 11/7/2020 17:24:03'!
ERROR!

!testRun: #PortfolioTest #test07 stamp: 'IO 11/7/2020 17:24:03'!
ERROR!

!testRun: #PortfolioTest #test08 stamp: 'IO 11/7/2020 17:24:03'!
ERROR!

!testRun: #PortfolioTest #test09 stamp: 'IO 11/7/2020 17:24:03'!
ERROR!

!testRun: #PortfolioTest #test10 stamp: 'IO 11/7/2020 17:24:03'!
ERROR!

!testRun: #PortfolioTest #test11 stamp: 'IO 11/7/2020 17:24:03'!
ERROR!

!testRun: #PortfolioTest #test12 stamp: 'IO 11/7/2020 17:24:03'!
ERROR!

!testRun: #PortfolioTest #test13 stamp: 'IO 11/7/2020 17:24:03'!
ERROR!

!testRun: #PortfolioTest #test14 stamp: 'IO 11/7/2020 17:24:03'!
ERROR!

!testRun: #PortfolioTest #test15 stamp: 'IO 11/7/2020 17:24:03'!
ERROR!

!testRun: #PortfolioTest #test16 stamp: 'IO 11/7/2020 17:24:03'!
ERROR!

!testRun: #PortfolioTest #test17 stamp: 'IO 11/7/2020 17:24:03'!
ERROR!
!Portfolio methodsFor: 'portfolios' stamp: 'IO 11/7/2020 17:24:23'!
includesFatherPortfolio:: aPortfolio! !
!Portfolio methodsFor: 'portfolios' stamp: 'IO 11/7/2020 17:24:27'!
includesFatherPortfolio: aPortfolio! !

!methodRemoval: Portfolio #includesFatherPortfolio:: stamp: 'IO 11/7/2020 17:24:29'!
includesFatherPortfolio:: aPortfolio!

!testRun: #PortfolioTest #test01AnAccountCanBeAddedToAPortfolio stamp: 'IO 11/7/2020 17:24:33'!
PASSED!

!testRun: #PortfolioTest #test02APortfolioHasNoAccountsInitially stamp: 'IO 11/7/2020 17:24:33'!
PASSED!

!testRun: #PortfolioTest #test03APortfolioDoesNotHaveMoreAccountsThanAdded stamp: 'IO 11/7/2020 17:24:33'!
PASSED!

!testRun: #PortfolioTest #test04MoreThanOneAccountCanBeAddedToAPortfolio stamp: 'IO 11/7/2020 17:24:33'!
PASSED!

!testRun: #PortfolioTest #test05 stamp: 'IO 11/7/2020 17:24:33'!
PASSED!

!testRun: #PortfolioTest #test06 stamp: 'IO 11/7/2020 17:24:33'!
ERROR!

!testRun: #PortfolioTest #test07 stamp: 'IO 11/7/2020 17:24:33'!
ERROR!

!testRun: #PortfolioTest #test08 stamp: 'IO 11/7/2020 17:24:33'!
ERROR!

!testRun: #PortfolioTest #test09 stamp: 'IO 11/7/2020 17:24:33'!
ERROR!

!testRun: #PortfolioTest #test10 stamp: 'IO 11/7/2020 17:24:33'!
ERROR!

!testRun: #PortfolioTest #test11 stamp: 'IO 11/7/2020 17:24:33'!
ERROR!

!testRun: #PortfolioTest #test12 stamp: 'IO 11/7/2020 17:24:33'!
ERROR!

!testRun: #PortfolioTest #test13 stamp: 'IO 11/7/2020 17:24:33'!
ERROR!

!testRun: #PortfolioTest #test14 stamp: 'IO 11/7/2020 17:24:33'!
ERROR!

!testRun: #PortfolioTest #test15 stamp: 'IO 11/7/2020 17:24:33'!
ERROR!

!testRun: #PortfolioTest #test16 stamp: 'IO 11/7/2020 17:24:33'!
ERROR!

!testRun: #PortfolioTest #test17 stamp: 'IO 11/7/2020 17:24:33'!
ERROR!

!testRun: #PortfolioTest #test01AnAccountCanBeAddedToAPortfolio stamp: 'IO 11/7/2020 17:24:41'!
PASSED!

!testRun: #PortfolioTest #test02APortfolioHasNoAccountsInitially stamp: 'IO 11/7/2020 17:24:41'!
PASSED!

!testRun: #PortfolioTest #test03APortfolioDoesNotHaveMoreAccountsThanAdded stamp: 'IO 11/7/2020 17:24:41'!
PASSED!

!testRun: #PortfolioTest #test04MoreThanOneAccountCanBeAddedToAPortfolio stamp: 'IO 11/7/2020 17:24:41'!
PASSED!

!testRun: #PortfolioTest #test05 stamp: 'IO 11/7/2020 17:24:41'!
PASSED!

!testRun: #PortfolioTest #test06 stamp: 'IO 11/7/2020 17:24:41'!
ERROR!

!testRun: #PortfolioTest #test07 stamp: 'IO 11/7/2020 17:24:41'!
ERROR!

!testRun: #PortfolioTest #test08 stamp: 'IO 11/7/2020 17:24:41'!
ERROR!

!testRun: #PortfolioTest #test09 stamp: 'IO 11/7/2020 17:24:41'!
ERROR!

!testRun: #PortfolioTest #test10 stamp: 'IO 11/7/2020 17:24:41'!
ERROR!

!testRun: #PortfolioTest #test11 stamp: 'IO 11/7/2020 17:24:41'!
ERROR!

!testRun: #PortfolioTest #test12 stamp: 'IO 11/7/2020 17:24:41'!
ERROR!

!testRun: #PortfolioTest #test13 stamp: 'IO 11/7/2020 17:24:41'!
ERROR!

!testRun: #PortfolioTest #test14 stamp: 'IO 11/7/2020 17:24:41'!
ERROR!

!testRun: #PortfolioTest #test15 stamp: 'IO 11/7/2020 17:24:41'!
ERROR!

!testRun: #PortfolioTest #test16 stamp: 'IO 11/7/2020 17:24:41'!
ERROR!

!testRun: #PortfolioTest #test17 stamp: 'IO 11/7/2020 17:24:41'!
ERROR!
!Portfolio methodsFor: 'portfolios' stamp: 'IO 11/7/2020 17:25:00' prior: 50871869!
includesFatherPortfolio: aPortfolio
	^false.! !

!testRun: #PortfolioTest #test01AnAccountCanBeAddedToAPortfolio stamp: 'IO 11/7/2020 17:25:00'!
PASSED!

!testRun: #PortfolioTest #test02APortfolioHasNoAccountsInitially stamp: 'IO 11/7/2020 17:25:00'!
PASSED!

!testRun: #PortfolioTest #test03APortfolioDoesNotHaveMoreAccountsThanAdded stamp: 'IO 11/7/2020 17:25:00'!
PASSED!

!testRun: #PortfolioTest #test04MoreThanOneAccountCanBeAddedToAPortfolio stamp: 'IO 11/7/2020 17:25:00'!
PASSED!

!testRun: #PortfolioTest #test05 stamp: 'IO 11/7/2020 17:25:00'!
PASSED!

!testRun: #PortfolioTest #test06 stamp: 'IO 11/7/2020 17:25:00'!
ERROR!

!testRun: #PortfolioTest #test07 stamp: 'IO 11/7/2020 17:25:00'!
ERROR!

!testRun: #PortfolioTest #test08 stamp: 'IO 11/7/2020 17:25:00'!
ERROR!

!testRun: #PortfolioTest #test09 stamp: 'IO 11/7/2020 17:25:00'!
ERROR!

!testRun: #PortfolioTest #test10 stamp: 'IO 11/7/2020 17:25:00'!
ERROR!

!testRun: #PortfolioTest #test11 stamp: 'IO 11/7/2020 17:25:00'!
ERROR!

!testRun: #PortfolioTest #test12 stamp: 'IO 11/7/2020 17:25:00'!
ERROR!

!testRun: #PortfolioTest #test13 stamp: 'IO 11/7/2020 17:25:01'!
ERROR!

!testRun: #PortfolioTest #test14 stamp: 'IO 11/7/2020 17:25:01'!
ERROR!

!testRun: #PortfolioTest #test15 stamp: 'IO 11/7/2020 17:25:01'!
ERROR!

!testRun: #PortfolioTest #test16 stamp: 'IO 11/7/2020 17:25:01'!
ERROR!

!testRun: #PortfolioTest #test17 stamp: 'IO 11/7/2020 17:25:01'!
ERROR!

portfolios!

!testRun: #PortfolioTest #test06 stamp: 'IO 11/7/2020 17:25:23'!
ERROR!
!Portfolio methodsFor: 'portfolios' stamp: 'IO 11/7/2020 17:25:32' prior: 50871804!
addPortfolio: aPortfolio
	(self includesPortfolio: aPortfolio) ifTrue: [self error: Portfolio errorMessagePortfolioAlreadyAdded].
	(fatherPortfolios includes: aPortfolio) ifTrue: [self error: Portfolio errorMessagePortfolioAlreadyAdded].

	fatherPortfolios do: [ :fatherPortfolio | (fatherPortfolio includesFatherPortfolio: aPortfolio) ifTrue: [self error: Portfolio errorMessagePortfolioAlreadyAdded].].
	
	portfolios add: aPortfolio.
	aPortfolio addAsFather: self. 
! !

!testRun: #PortfolioTest #test01AnAccountCanBeAddedToAPortfolio stamp: 'IO 11/7/2020 17:25:33'!
PASSED!

!testRun: #PortfolioTest #test02APortfolioHasNoAccountsInitially stamp: 'IO 11/7/2020 17:25:33'!
PASSED!

!testRun: #PortfolioTest #test03APortfolioDoesNotHaveMoreAccountsThanAdded stamp: 'IO 11/7/2020 17:25:33'!
PASSED!

!testRun: #PortfolioTest #test04MoreThanOneAccountCanBeAddedToAPortfolio stamp: 'IO 11/7/2020 17:25:33'!
PASSED!

!testRun: #PortfolioTest #test05 stamp: 'IO 11/7/2020 17:25:33'!
PASSED!

!testRun: #PortfolioTest #test06 stamp: 'IO 11/7/2020 17:25:33'!
PASSED!

!testRun: #PortfolioTest #test07 stamp: 'IO 11/7/2020 17:25:33'!
PASSED!

!testRun: #PortfolioTest #test08 stamp: 'IO 11/7/2020 17:25:33'!
PASSED!

!testRun: #PortfolioTest #test09 stamp: 'IO 11/7/2020 17:25:33'!
PASSED!

!testRun: #PortfolioTest #test10 stamp: 'IO 11/7/2020 17:25:33'!
PASSED!

!testRun: #PortfolioTest #test11 stamp: 'IO 11/7/2020 17:25:33'!
PASSED!

!testRun: #PortfolioTest #test12 stamp: 'IO 11/7/2020 17:25:33'!
PASSED!

!testRun: #PortfolioTest #test13 stamp: 'IO 11/7/2020 17:25:33'!
PASSED!

!testRun: #PortfolioTest #test14 stamp: 'IO 11/7/2020 17:25:33'!
PASSED!

!testRun: #PortfolioTest #test15 stamp: 'IO 11/7/2020 17:25:33'!
PASSED!

!testRun: #PortfolioTest #test16 stamp: 'IO 11/7/2020 17:25:33'!
PASSED!

!testRun: #PortfolioTest #test17 stamp: 'IO 11/7/2020 17:25:33'!
FAILURE!

!testRun: #PortfolioTest #test17 stamp: 'IO 11/7/2020 17:25:33'!
FAILURE!
!Portfolio methodsFor: 'portfolios' stamp: 'IO 11/7/2020 17:25:48' prior: 50871964!
includesFatherPortfolio: aPortfolio
	^fatherPortfolios includes: aPortfolio.
! !

!testRun: #PortfolioTest #test01AnAccountCanBeAddedToAPortfolio stamp: 'IO 11/7/2020 17:25:49'!
PASSED!

!testRun: #PortfolioTest #test02APortfolioHasNoAccountsInitially stamp: 'IO 11/7/2020 17:25:49'!
PASSED!

!testRun: #PortfolioTest #test03APortfolioDoesNotHaveMoreAccountsThanAdded stamp: 'IO 11/7/2020 17:25:49'!
PASSED!

!testRun: #PortfolioTest #test04MoreThanOneAccountCanBeAddedToAPortfolio stamp: 'IO 11/7/2020 17:25:49'!
PASSED!

!testRun: #PortfolioTest #test05 stamp: 'IO 11/7/2020 17:25:49'!
PASSED!

!testRun: #PortfolioTest #test06 stamp: 'IO 11/7/2020 17:25:49'!
PASSED!

!testRun: #PortfolioTest #test07 stamp: 'IO 11/7/2020 17:25:49'!
PASSED!

!testRun: #PortfolioTest #test08 stamp: 'IO 11/7/2020 17:25:49'!
PASSED!

!testRun: #PortfolioTest #test09 stamp: 'IO 11/7/2020 17:25:49'!
PASSED!

!testRun: #PortfolioTest #test10 stamp: 'IO 11/7/2020 17:25:49'!
PASSED!

!testRun: #PortfolioTest #test11 stamp: 'IO 11/7/2020 17:25:49'!
PASSED!

!testRun: #PortfolioTest #test12 stamp: 'IO 11/7/2020 17:25:49'!
PASSED!

!testRun: #PortfolioTest #test13 stamp: 'IO 11/7/2020 17:25:49'!
PASSED!

!testRun: #PortfolioTest #test14 stamp: 'IO 11/7/2020 17:25:49'!
PASSED!

!testRun: #PortfolioTest #test15 stamp: 'IO 11/7/2020 17:25:49'!
PASSED!

!testRun: #PortfolioTest #test16 stamp: 'IO 11/7/2020 17:25:49'!
PASSED!

!testRun: #PortfolioTest #test17 stamp: 'IO 11/7/2020 17:25:49'!
PASSED!
!Portfolio methodsFor: 'portfolios' stamp: 'IO 11/7/2020 17:26:23' prior: 50872015!
addPortfolio: aPortfolio
	(self includesPortfolio: aPortfolio) ifTrue: [self error: Portfolio errorMessagePortfolioAlreadyAdded].
	(fatherPortfolios includesFatherPortfolio: aPortfolio) ifTrue: [self error: Portfolio errorMessagePortfolioAlreadyAdded].

	fatherPortfolios do: [ :fatherPortfolio | (fatherPortfolio includesFatherPortfolio: aPortfolio) ifTrue: [self error: Portfolio errorMessagePortfolioAlreadyAdded].].
	
	portfolios add: aPortfolio.
	aPortfolio addAsFather: self. 
! !

!testRun: #PortfolioTest #test01AnAccountCanBeAddedToAPortfolio stamp: 'IO 11/7/2020 17:26:25'!
PASSED!

!testRun: #PortfolioTest #test02APortfolioHasNoAccountsInitially stamp: 'IO 11/7/2020 17:26:25'!
PASSED!

!testRun: #PortfolioTest #test03APortfolioDoesNotHaveMoreAccountsThanAdded stamp: 'IO 11/7/2020 17:26:25'!
PASSED!

!testRun: #PortfolioTest #test04MoreThanOneAccountCanBeAddedToAPortfolio stamp: 'IO 11/7/2020 17:26:25'!
PASSED!

!testRun: #PortfolioTest #test05 stamp: 'IO 11/7/2020 17:26:25'!
PASSED!

!testRun: #PortfolioTest #test06 stamp: 'IO 11/7/2020 17:26:25'!
ERROR!

!testRun: #PortfolioTest #test07 stamp: 'IO 11/7/2020 17:26:25'!
ERROR!

!testRun: #PortfolioTest #test08 stamp: 'IO 11/7/2020 17:26:25'!
ERROR!

!testRun: #PortfolioTest #test09 stamp: 'IO 11/7/2020 17:26:25'!
ERROR!

!testRun: #PortfolioTest #test10 stamp: 'IO 11/7/2020 17:26:25'!
ERROR!

!testRun: #PortfolioTest #test11 stamp: 'IO 11/7/2020 17:26:25'!
ERROR!

!testRun: #PortfolioTest #test12 stamp: 'IO 11/7/2020 17:26:25'!
ERROR!

!testRun: #PortfolioTest #test13 stamp: 'IO 11/7/2020 17:26:25'!
ERROR!

!testRun: #PortfolioTest #test14 stamp: 'IO 11/7/2020 17:26:25'!
ERROR!

!testRun: #PortfolioTest #test15 stamp: 'IO 11/7/2020 17:26:25'!
ERROR!

!testRun: #PortfolioTest #test16 stamp: 'IO 11/7/2020 17:26:25'!
ERROR!

!testRun: #PortfolioTest #test17 stamp: 'IO 11/7/2020 17:26:25'!
ERROR!
!Portfolio methodsFor: 'portfolios' stamp: 'IO 11/7/2020 17:26:29' prior: 50872128!
addPortfolio: aPortfolio
	(self includesPortfolio: aPortfolio) ifTrue: [self error: Portfolio errorMessagePortfolioAlreadyAdded].
	(self includesFatherPortfolio: aPortfolio) ifTrue: [self error: Portfolio errorMessagePortfolioAlreadyAdded].

	fatherPortfolios do: [ :fatherPortfolio | (fatherPortfolio includesFatherPortfolio: aPortfolio) ifTrue: [self error: Portfolio errorMessagePortfolioAlreadyAdded].].
	
	portfolios add: aPortfolio.
	aPortfolio addAsFather: self. 
! !

!testRun: #PortfolioTest #test01AnAccountCanBeAddedToAPortfolio stamp: 'IO 11/7/2020 17:26:30'!
PASSED!

!testRun: #PortfolioTest #test02APortfolioHasNoAccountsInitially stamp: 'IO 11/7/2020 17:26:30'!
PASSED!

!testRun: #PortfolioTest #test03APortfolioDoesNotHaveMoreAccountsThanAdded stamp: 'IO 11/7/2020 17:26:30'!
PASSED!

!testRun: #PortfolioTest #test04MoreThanOneAccountCanBeAddedToAPortfolio stamp: 'IO 11/7/2020 17:26:30'!
PASSED!

!testRun: #PortfolioTest #test05 stamp: 'IO 11/7/2020 17:26:30'!
PASSED!

!testRun: #PortfolioTest #test06 stamp: 'IO 11/7/2020 17:26:30'!
PASSED!

!testRun: #PortfolioTest #test07 stamp: 'IO 11/7/2020 17:26:30'!
PASSED!

!testRun: #PortfolioTest #test08 stamp: 'IO 11/7/2020 17:26:30'!
PASSED!

!testRun: #PortfolioTest #test09 stamp: 'IO 11/7/2020 17:26:30'!
PASSED!

!testRun: #PortfolioTest #test10 stamp: 'IO 11/7/2020 17:26:30'!
PASSED!

!testRun: #PortfolioTest #test11 stamp: 'IO 11/7/2020 17:26:30'!
PASSED!

!testRun: #PortfolioTest #test12 stamp: 'IO 11/7/2020 17:26:30'!
PASSED!

!testRun: #PortfolioTest #test13 stamp: 'IO 11/7/2020 17:26:30'!
PASSED!

!testRun: #PortfolioTest #test14 stamp: 'IO 11/7/2020 17:26:30'!
PASSED!

!testRun: #PortfolioTest #test15 stamp: 'IO 11/7/2020 17:26:30'!
PASSED!

!testRun: #PortfolioTest #test16 stamp: 'IO 11/7/2020 17:26:30'!
PASSED!

!testRun: #PortfolioTest #test17 stamp: 'IO 11/7/2020 17:26:30'!
PASSED!
!Portfolio methodsFor: 'portfolios' stamp: 'IO 11/7/2020 17:26:37' prior: 50872190!
addPortfolio: aPortfolio
	(self includesPortfolio: aPortfolio) ifTrue: [self error: Portfolio errorMessagePortfolioAlreadyAdded].

	(self includesFatherPortfolio: aPortfolio) ifTrue: [self error: Portfolio errorMessagePortfolioAlreadyAdded].
	fatherPortfolios do: [ :fatherPortfolio | (fatherPortfolio includesFatherPortfolio: aPortfolio) ifTrue: [self error: Portfolio errorMessagePortfolioAlreadyAdded].].
	
	portfolios add: aPortfolio.
	aPortfolio addAsFather: self. 
! !

!testRun: #PortfolioTest #test01AnAccountCanBeAddedToAPortfolio stamp: 'IO 11/7/2020 17:26:38'!
PASSED!

!testRun: #PortfolioTest #test02APortfolioHasNoAccountsInitially stamp: 'IO 11/7/2020 17:26:38'!
PASSED!

!testRun: #PortfolioTest #test03APortfolioDoesNotHaveMoreAccountsThanAdded stamp: 'IO 11/7/2020 17:26:38'!
PASSED!

!testRun: #PortfolioTest #test04MoreThanOneAccountCanBeAddedToAPortfolio stamp: 'IO 11/7/2020 17:26:38'!
PASSED!

!testRun: #PortfolioTest #test05 stamp: 'IO 11/7/2020 17:26:38'!
PASSED!

!testRun: #PortfolioTest #test06 stamp: 'IO 11/7/2020 17:26:38'!
PASSED!

!testRun: #PortfolioTest #test07 stamp: 'IO 11/7/2020 17:26:38'!
PASSED!

!testRun: #PortfolioTest #test08 stamp: 'IO 11/7/2020 17:26:38'!
PASSED!

!testRun: #PortfolioTest #test09 stamp: 'IO 11/7/2020 17:26:38'!
PASSED!

!testRun: #PortfolioTest #test10 stamp: 'IO 11/7/2020 17:26:38'!
PASSED!

!testRun: #PortfolioTest #test11 stamp: 'IO 11/7/2020 17:26:38'!
PASSED!

!testRun: #PortfolioTest #test12 stamp: 'IO 11/7/2020 17:26:38'!
PASSED!

!testRun: #PortfolioTest #test13 stamp: 'IO 11/7/2020 17:26:38'!
PASSED!

!testRun: #PortfolioTest #test14 stamp: 'IO 11/7/2020 17:26:38'!
PASSED!

!testRun: #PortfolioTest #test15 stamp: 'IO 11/7/2020 17:26:38'!
PASSED!

!testRun: #PortfolioTest #test16 stamp: 'IO 11/7/2020 17:26:38'!
PASSED!

!testRun: #PortfolioTest #test17 stamp: 'IO 11/7/2020 17:26:38'!
PASSED!
!Portfolio methodsFor: 'validations' stamp: 'IO 11/7/2020 17:28:01'!
validatePortfolioBeforeAdding: aPortfolio
	
	(self includesFatherPortfolio: aPortfolio) ifTrue: [self error: Portfolio errorMessagePortfolioAlreadyAdded].
	
! !
!Portfolio methodsFor: 'validations' stamp: 'IO 11/7/2020 17:28:29' prior: 50872313!
validatePortfolioBeforeAdding: aPortfolio
	
	(self includesFatherPortfolio: aPortfolio) ifTrue: [self error: Portfolio errorMessagePortfolioAlreadyAdded].
	fatherPortfolios do: [ :fatherPortfolio | (fatherPortfolio includesFatherPortfolio: aPortfolio) ifTrue: [self error: Portfolio errorMessagePortfolioAlreadyAdded].].
	
! !
!Portfolio methodsFor: 'validations' stamp: 'IO 11/7/2020 17:28:53' prior: 50872321!
validatePortfolioBeforeAdding: aPortfolio
	
	(self includesFatherPortfolio: aPortfolio) ifTrue: [self error: Portfolio errorMessagePortfolioAlreadyAdded].
	fatherPortfolios do: [ :fatherPortfolio | (fatherPortfolio includesFatherPortfolio: aPortfolio) ifTrue: [self error: Portfolio errorMessagePortfolioAlreadyAdded].].
	
! !
!Portfolio methodsFor: 'portfolios' stamp: 'IO 11/7/2020 17:29:26' prior: 50872252!
addPortfolio: aPortfolio
	(self includesPortfolio: aPortfolio) ifTrue: [self error: Portfolio errorMessagePortfolioAlreadyAdded].

	self validatePortfolioBeforeAdding: aPortfolio.
	
	portfolios add: aPortfolio.
	aPortfolio addAsFather: self. 
! !

!testRun: #PortfolioTest #test01AnAccountCanBeAddedToAPortfolio stamp: 'IO 11/7/2020 17:29:27'!
PASSED!

!testRun: #PortfolioTest #test02APortfolioHasNoAccountsInitially stamp: 'IO 11/7/2020 17:29:27'!
PASSED!

!testRun: #PortfolioTest #test03APortfolioDoesNotHaveMoreAccountsThanAdded stamp: 'IO 11/7/2020 17:29:27'!
PASSED!

!testRun: #PortfolioTest #test04MoreThanOneAccountCanBeAddedToAPortfolio stamp: 'IO 11/7/2020 17:29:27'!
PASSED!

!testRun: #PortfolioTest #test05 stamp: 'IO 11/7/2020 17:29:27'!
PASSED!

!testRun: #PortfolioTest #test06 stamp: 'IO 11/7/2020 17:29:27'!
PASSED!

!testRun: #PortfolioTest #test07 stamp: 'IO 11/7/2020 17:29:27'!
PASSED!

!testRun: #PortfolioTest #test08 stamp: 'IO 11/7/2020 17:29:27'!
PASSED!

!testRun: #PortfolioTest #test09 stamp: 'IO 11/7/2020 17:29:27'!
PASSED!

!testRun: #PortfolioTest #test10 stamp: 'IO 11/7/2020 17:29:27'!
PASSED!

!testRun: #PortfolioTest #test11 stamp: 'IO 11/7/2020 17:29:27'!
PASSED!

!testRun: #PortfolioTest #test12 stamp: 'IO 11/7/2020 17:29:27'!
PASSED!

!testRun: #PortfolioTest #test13 stamp: 'IO 11/7/2020 17:29:27'!
PASSED!

!testRun: #PortfolioTest #test14 stamp: 'IO 11/7/2020 17:29:27'!
PASSED!

!testRun: #PortfolioTest #test15 stamp: 'IO 11/7/2020 17:29:27'!
PASSED!

!testRun: #PortfolioTest #test16 stamp: 'IO 11/7/2020 17:29:27'!
PASSED!

!testRun: #PortfolioTest #test17 stamp: 'IO 11/7/2020 17:29:27'!
PASSED!
!Portfolio methodsFor: 'validations' stamp: 'IO 11/7/2020 17:29:54' prior: 50872334!
validatePortfolioBeforeAdding: aPortfolio
	(self includesPortfolio: aPortfolio) ifTrue: [self error: Portfolio errorMessagePortfolioAlreadyAdded].
	(self includesFatherPortfolio: aPortfolio) ifTrue: [self error: Portfolio errorMessagePortfolioAlreadyAdded].
	fatherPortfolios do: [ :fatherPortfolio | (fatherPortfolio includesFatherPortfolio: aPortfolio) ifTrue: [self error: Portfolio errorMessagePortfolioAlreadyAdded].].
	
! !

!testRun: #PortfolioTest #test01AnAccountCanBeAddedToAPortfolio stamp: 'IO 11/7/2020 17:29:55'!
PASSED!

!testRun: #PortfolioTest #test02APortfolioHasNoAccountsInitially stamp: 'IO 11/7/2020 17:29:55'!
PASSED!

!testRun: #PortfolioTest #test03APortfolioDoesNotHaveMoreAccountsThanAdded stamp: 'IO 11/7/2020 17:29:55'!
PASSED!

!testRun: #PortfolioTest #test04MoreThanOneAccountCanBeAddedToAPortfolio stamp: 'IO 11/7/2020 17:29:55'!
PASSED!

!testRun: #PortfolioTest #test05 stamp: 'IO 11/7/2020 17:29:55'!
PASSED!

!testRun: #PortfolioTest #test06 stamp: 'IO 11/7/2020 17:29:55'!
PASSED!

!testRun: #PortfolioTest #test07 stamp: 'IO 11/7/2020 17:29:55'!
PASSED!

!testRun: #PortfolioTest #test08 stamp: 'IO 11/7/2020 17:29:55'!
PASSED!

!testRun: #PortfolioTest #test09 stamp: 'IO 11/7/2020 17:29:55'!
PASSED!

!testRun: #PortfolioTest #test10 stamp: 'IO 11/7/2020 17:29:55'!
PASSED!

!testRun: #PortfolioTest #test11 stamp: 'IO 11/7/2020 17:29:55'!
PASSED!

!testRun: #PortfolioTest #test12 stamp: 'IO 11/7/2020 17:29:55'!
PASSED!

!testRun: #PortfolioTest #test13 stamp: 'IO 11/7/2020 17:29:55'!
PASSED!

!testRun: #PortfolioTest #test14 stamp: 'IO 11/7/2020 17:29:55'!
PASSED!

!testRun: #PortfolioTest #test15 stamp: 'IO 11/7/2020 17:29:55'!
PASSED!

!testRun: #PortfolioTest #test16 stamp: 'IO 11/7/2020 17:29:55'!
PASSED!

!testRun: #PortfolioTest #test17 stamp: 'IO 11/7/2020 17:29:55'!
PASSED!
!Portfolio methodsFor: 'portfolios' stamp: 'IO 11/7/2020 17:30:02' prior: 50872347!
addPortfolio: aPortfolio
	self validatePortfolioBeforeAdding: aPortfolio.
	
	portfolios add: aPortfolio.
	aPortfolio addAsFather: self. 
! !

!testRun: #PortfolioTest #test01AnAccountCanBeAddedToAPortfolio stamp: 'IO 11/7/2020 17:30:03'!
PASSED!

!testRun: #PortfolioTest #test02APortfolioHasNoAccountsInitially stamp: 'IO 11/7/2020 17:30:03'!
PASSED!

!testRun: #PortfolioTest #test03APortfolioDoesNotHaveMoreAccountsThanAdded stamp: 'IO 11/7/2020 17:30:03'!
PASSED!

!testRun: #PortfolioTest #test04MoreThanOneAccountCanBeAddedToAPortfolio stamp: 'IO 11/7/2020 17:30:03'!
PASSED!

!testRun: #PortfolioTest #test05 stamp: 'IO 11/7/2020 17:30:03'!
PASSED!

!testRun: #PortfolioTest #test06 stamp: 'IO 11/7/2020 17:30:03'!
PASSED!

!testRun: #PortfolioTest #test07 stamp: 'IO 11/7/2020 17:30:03'!
PASSED!

!testRun: #PortfolioTest #test08 stamp: 'IO 11/7/2020 17:30:03'!
PASSED!

!testRun: #PortfolioTest #test09 stamp: 'IO 11/7/2020 17:30:03'!
PASSED!

!testRun: #PortfolioTest #test10 stamp: 'IO 11/7/2020 17:30:03'!
PASSED!

!testRun: #PortfolioTest #test11 stamp: 'IO 11/7/2020 17:30:03'!
PASSED!

!testRun: #PortfolioTest #test12 stamp: 'IO 11/7/2020 17:30:03'!
PASSED!

!testRun: #PortfolioTest #test13 stamp: 'IO 11/7/2020 17:30:03'!
PASSED!

!testRun: #PortfolioTest #test14 stamp: 'IO 11/7/2020 17:30:03'!
PASSED!

!testRun: #PortfolioTest #test15 stamp: 'IO 11/7/2020 17:30:03'!
PASSED!

!testRun: #PortfolioTest #test16 stamp: 'IO 11/7/2020 17:30:03'!
PASSED!

!testRun: #PortfolioTest #test17 stamp: 'IO 11/7/2020 17:30:03'!
PASSED!
!Portfolio methodsFor: 'validations' stamp: 'IO 11/7/2020 17:30:11' prior: 50872402!
validatePortfolioBeforeAdding: aPortfolio
	(self includesPortfolio: aPortfolio) ifTrue: [self error: Portfolio errorMessagePortfolioAlreadyAdded].
	(self includesFatherPortfolio: aPortfolio) ifTrue: [self error: Portfolio errorMessagePortfolioAlreadyAdded].
	fatherPortfolios do: [ :fatherPortfolio | (fatherPortfolio includesFatherPortfolio: aPortfolio) ifTrue: [self error: Portfolio errorMessagePortfolioAlreadyAdded].].

! !
!Portfolio methodsFor: 'validations' stamp: 'IO 11/7/2020 17:30:45'!
validateNotAlreadyAddedPortfolio: aPortfolio
	(self includesPortfolio: aPortfolio) ifTrue: [self error: Portfolio errorMessagePortfolioAlreadyAdded].
! !
!Portfolio methodsFor: 'validations' stamp: 'IO 11/7/2020 17:31:01' prior: 50872513!
validatePortfolioBeforeAdding: aPortfolio
	self validateNotAlreadyAddedPortfolio: aPortfolio.
	(self includesFatherPortfolio: aPortfolio) ifTrue: [self error: Portfolio errorMessagePortfolioAlreadyAdded].
	fatherPortfolios do: [ :fatherPortfolio | (fatherPortfolio includesFatherPortfolio: aPortfolio) ifTrue: [self error: Portfolio errorMessagePortfolioAlreadyAdded].].

! !

!testRun: #PortfolioTest #test01AnAccountCanBeAddedToAPortfolio stamp: 'IO 11/7/2020 17:31:01'!
PASSED!

!testRun: #PortfolioTest #test02APortfolioHasNoAccountsInitially stamp: 'IO 11/7/2020 17:31:01'!
PASSED!

!testRun: #PortfolioTest #test03APortfolioDoesNotHaveMoreAccountsThanAdded stamp: 'IO 11/7/2020 17:31:01'!
PASSED!

!testRun: #PortfolioTest #test04MoreThanOneAccountCanBeAddedToAPortfolio stamp: 'IO 11/7/2020 17:31:01'!
PASSED!

!testRun: #PortfolioTest #test05 stamp: 'IO 11/7/2020 17:31:01'!
PASSED!

!testRun: #PortfolioTest #test06 stamp: 'IO 11/7/2020 17:31:01'!
PASSED!

!testRun: #PortfolioTest #test07 stamp: 'IO 11/7/2020 17:31:01'!
PASSED!

!testRun: #PortfolioTest #test08 stamp: 'IO 11/7/2020 17:31:01'!
PASSED!

!testRun: #PortfolioTest #test09 stamp: 'IO 11/7/2020 17:31:01'!
PASSED!

!testRun: #PortfolioTest #test10 stamp: 'IO 11/7/2020 17:31:01'!
PASSED!

!testRun: #PortfolioTest #test11 stamp: 'IO 11/7/2020 17:31:01'!
PASSED!

!testRun: #PortfolioTest #test12 stamp: 'IO 11/7/2020 17:31:01'!
PASSED!

!testRun: #PortfolioTest #test13 stamp: 'IO 11/7/2020 17:31:01'!
PASSED!

!testRun: #PortfolioTest #test14 stamp: 'IO 11/7/2020 17:31:01'!
PASSED!

!testRun: #PortfolioTest #test15 stamp: 'IO 11/7/2020 17:31:01'!
PASSED!

!testRun: #PortfolioTest #test16 stamp: 'IO 11/7/2020 17:31:01'!
PASSED!

!testRun: #PortfolioTest #test17 stamp: 'IO 11/7/2020 17:31:01'!
PASSED!
!Portfolio methodsFor: 'validations' stamp: 'IO 11/7/2020 17:31:05' prior: 50872537!
validatePortfolioBeforeAdding: aPortfolio
	self validateNotAlreadyAddedPortfolio: aPortfolio.

	(self includesFatherPortfolio: aPortfolio) ifTrue: [self error: Portfolio errorMessagePortfolioAlreadyAdded].
	fatherPortfolios do: [ :fatherPortfolio | (fatherPortfolio includesFatherPortfolio: aPortfolio) ifTrue: [self error: Portfolio errorMessagePortfolioAlreadyAdded].].

! !
!Portfolio methodsFor: 'validations' stamp: 'IO 11/7/2020 17:31:26' prior: 50872596!
validatePortfolioBeforeAdding: aPortfolio
	self validateNotAlreadyAddedPortfolio: aPortfolio.
	
	(self includesFatherPortfolio: aPortfolio) ifTrue: [self error: Portfolio errorMessagePortfolioAlreadyAdded].
	fatherPortfolios do: [ :fatherPortfolio | (fatherPortfolio validatePortfolioBeforeAdding: aPortfolio)].

! !

!testRun: #PortfolioTest #test01AnAccountCanBeAddedToAPortfolio stamp: 'IO 11/7/2020 17:31:26'!
PASSED!

!testRun: #PortfolioTest #test02APortfolioHasNoAccountsInitially stamp: 'IO 11/7/2020 17:31:26'!
PASSED!

!testRun: #PortfolioTest #test03APortfolioDoesNotHaveMoreAccountsThanAdded stamp: 'IO 11/7/2020 17:31:26'!
PASSED!

!testRun: #PortfolioTest #test04MoreThanOneAccountCanBeAddedToAPortfolio stamp: 'IO 11/7/2020 17:31:26'!
PASSED!

!testRun: #PortfolioTest #test05 stamp: 'IO 11/7/2020 17:31:26'!
PASSED!

!testRun: #PortfolioTest #test06 stamp: 'IO 11/7/2020 17:31:26'!
PASSED!

!testRun: #PortfolioTest #test07 stamp: 'IO 11/7/2020 17:31:26'!
PASSED!

!testRun: #PortfolioTest #test08 stamp: 'IO 11/7/2020 17:31:26'!
PASSED!

!testRun: #PortfolioTest #test09 stamp: 'IO 11/7/2020 17:31:26'!
PASSED!

!testRun: #PortfolioTest #test10 stamp: 'IO 11/7/2020 17:31:26'!
PASSED!

!testRun: #PortfolioTest #test11 stamp: 'IO 11/7/2020 17:31:26'!
PASSED!

!testRun: #PortfolioTest #test12 stamp: 'IO 11/7/2020 17:31:26'!
PASSED!

!testRun: #PortfolioTest #test13 stamp: 'IO 11/7/2020 17:31:26'!
PASSED!

!testRun: #PortfolioTest #test14 stamp: 'IO 11/7/2020 17:31:26'!
PASSED!

!testRun: #PortfolioTest #test15 stamp: 'IO 11/7/2020 17:31:26'!
PASSED!

!testRun: #PortfolioTest #test16 stamp: 'IO 11/7/2020 17:31:26'!
PASSED!

!testRun: #PortfolioTest #test17 stamp: 'IO 11/7/2020 17:31:26'!
PASSED!
!Portfolio methodsFor: 'validations' stamp: 'IO 11/7/2020 17:31:30' prior: 50872611!
validatePortfolioBeforeAdding: aPortfolio
	self validateNotAlreadyAddedPortfolio: aPortfolio.
	

	fatherPortfolios do: [ :fatherPortfolio | (fatherPortfolio validatePortfolioBeforeAdding: aPortfolio)].

! !

!testRun: #PortfolioTest #test01AnAccountCanBeAddedToAPortfolio stamp: 'IO 11/7/2020 17:31:30'!
PASSED!

!testRun: #PortfolioTest #test02APortfolioHasNoAccountsInitially stamp: 'IO 11/7/2020 17:31:30'!
PASSED!

!testRun: #PortfolioTest #test03APortfolioDoesNotHaveMoreAccountsThanAdded stamp: 'IO 11/7/2020 17:31:30'!
PASSED!

!testRun: #PortfolioTest #test04MoreThanOneAccountCanBeAddedToAPortfolio stamp: 'IO 11/7/2020 17:31:30'!
PASSED!

!testRun: #PortfolioTest #test05 stamp: 'IO 11/7/2020 17:31:30'!
PASSED!

!testRun: #PortfolioTest #test06 stamp: 'IO 11/7/2020 17:31:30'!
PASSED!

!testRun: #PortfolioTest #test07 stamp: 'IO 11/7/2020 17:31:30'!
PASSED!

!testRun: #PortfolioTest #test08 stamp: 'IO 11/7/2020 17:31:30'!
PASSED!

!testRun: #PortfolioTest #test09 stamp: 'IO 11/7/2020 17:31:30'!
PASSED!

!testRun: #PortfolioTest #test10 stamp: 'IO 11/7/2020 17:31:30'!
PASSED!

!testRun: #PortfolioTest #test11 stamp: 'IO 11/7/2020 17:31:30'!
PASSED!

!testRun: #PortfolioTest #test12 stamp: 'IO 11/7/2020 17:31:30'!
PASSED!

!testRun: #PortfolioTest #test13 stamp: 'IO 11/7/2020 17:31:30'!
PASSED!

!testRun: #PortfolioTest #test14 stamp: 'IO 11/7/2020 17:31:30'!
PASSED!

!testRun: #PortfolioTest #test15 stamp: 'IO 11/7/2020 17:31:30'!
PASSED!

!testRun: #PortfolioTest #test16 stamp: 'IO 11/7/2020 17:31:30'!
PASSED!

!testRun: #PortfolioTest #test17 stamp: 'IO 11/7/2020 17:31:30'!
FAILURE!

!testRun: #PortfolioTest #test17 stamp: 'IO 11/7/2020 17:31:30'!
FAILURE!
!Portfolio methodsFor: 'validations' stamp: 'IO 11/7/2020 17:31:33' prior: 50872668!
validatePortfolioBeforeAdding: aPortfolio
	self validateNotAlreadyAddedPortfolio: aPortfolio.
	
	(self includesFatherPortfolio: aPortfolio) ifTrue: [self error: Portfolio errorMessagePortfolioAlreadyAdded].
	fatherPortfolios do: [ :fatherPortfolio | (fatherPortfolio validatePortfolioBeforeAdding: aPortfolio)].

! !
!Portfolio methodsFor: 'validations' stamp: 'IO 11/7/2020 17:31:54' prior: 50872724!
validatePortfolioBeforeAdding: aPortfolio
	self validateNotAlreadyAddedPortfolio: aPortfolio.
	

	fatherPortfolios do: [ :fatherPortfolio | (fatherPortfolio validatePortfolioBeforeAdding: aPortfolio)].

! !
!Portfolio methodsFor: 'validations' stamp: 'IO 11/7/2020 17:32:01' prior: 50872529!
validateNotAlreadyAddedPortfolio: aPortfolio
	(self includesPortfolio: aPortfolio) ifTrue: [self error: Portfolio errorMessagePortfolioAlreadyAdded].
	(self includesFatherPortfolio: aPortfolio) ifTrue: [self error: Portfolio errorMessagePortfolioAlreadyAdded].
! !

!testRun: #PortfolioTest #test01AnAccountCanBeAddedToAPortfolio stamp: 'IO 11/7/2020 17:32:02'!
PASSED!

!testRun: #PortfolioTest #test02APortfolioHasNoAccountsInitially stamp: 'IO 11/7/2020 17:32:02'!
PASSED!

!testRun: #PortfolioTest #test03APortfolioDoesNotHaveMoreAccountsThanAdded stamp: 'IO 11/7/2020 17:32:02'!
PASSED!

!testRun: #PortfolioTest #test04MoreThanOneAccountCanBeAddedToAPortfolio stamp: 'IO 11/7/2020 17:32:02'!
PASSED!

!testRun: #PortfolioTest #test05 stamp: 'IO 11/7/2020 17:32:02'!
PASSED!

!testRun: #PortfolioTest #test06 stamp: 'IO 11/7/2020 17:32:02'!
PASSED!

!testRun: #PortfolioTest #test07 stamp: 'IO 11/7/2020 17:32:02'!
PASSED!

!testRun: #PortfolioTest #test08 stamp: 'IO 11/7/2020 17:32:02'!
PASSED!

!testRun: #PortfolioTest #test09 stamp: 'IO 11/7/2020 17:32:02'!
PASSED!

!testRun: #PortfolioTest #test10 stamp: 'IO 11/7/2020 17:32:02'!
PASSED!

!testRun: #PortfolioTest #test11 stamp: 'IO 11/7/2020 17:32:02'!
PASSED!

!testRun: #PortfolioTest #test12 stamp: 'IO 11/7/2020 17:32:02'!
PASSED!

!testRun: #PortfolioTest #test13 stamp: 'IO 11/7/2020 17:32:02'!
PASSED!

!testRun: #PortfolioTest #test14 stamp: 'IO 11/7/2020 17:32:02'!
PASSED!

!testRun: #PortfolioTest #test15 stamp: 'IO 11/7/2020 17:32:02'!
PASSED!

!testRun: #PortfolioTest #test16 stamp: 'IO 11/7/2020 17:32:02'!
PASSED!

!testRun: #PortfolioTest #test17 stamp: 'IO 11/7/2020 17:32:02'!
PASSED!
!Portfolio methodsFor: 'validations' stamp: 'IO 11/7/2020 17:32:07' prior: 50872737!
validatePortfolioBeforeAdding: aPortfolio
	self validateNotAlreadyAddedPortfolio: aPortfolio.
	fatherPortfolios do: [ :fatherPortfolio | (fatherPortfolio validatePortfolioBeforeAdding: aPortfolio)].

! !
!PortfolioTest methodsFor: 'errors adding portfolios by parents' stamp: 'IO 11/7/2020 17:33:38'!
test18
	
	"
		no se pueden agregar un portfolio cuando el padre del padre ya tiene ese portfolio
		p1 ->  p2 -> p3 -> p1
	"
	
	| portfolio1 portfolio2 portfolio3 |
	
	portfolio1 := Portfolio new.
	portfolio2 := Portfolio new.
	portfolio3 := Portfolio new.

	portfolio1 addPortfolio: portfolio2.
	portfolio2 addPortfolio: portfolio3.

	self should: [	portfolio3 addPortfolio: portfolio1.] raise: Error withMessageText: Portfolio errorMessagePortfolioAlreadyAdded.
! !
!PortfolioTest methodsFor: 'errors adding portfolios by parents' stamp: 'IO 11/7/2020 17:33:47' prior: 50871573!
test17
	
	"
		no se pueden agregar un portfolio cuando el padre ya tiene ese portfolio
		p1 ->  p2 -> p1
	"
	
	| portfolio1 portfolio2 portfolio3 |
	
	portfolio1 := Portfolio new.
	portfolio2 := Portfolio new.
	portfolio3 := Portfolio new.

	portfolio1 addPortfolio: portfolio2.
	portfolio2 addPortfolio: portfolio3.

	self should: [	portfolio3 addPortfolio: portfolio1.] raise: Error withMessageText: Portfolio errorMessagePortfolioAlreadyAdded.
! !
!PortfolioTest methodsFor: 'errors adding portfolios by parents' stamp: 'IO 11/7/2020 17:33:55' prior: 50872831!
test17
	
	"
		no se pueden agregar un portfolio cuando el padre ya tiene ese portfolio
		p1 ->  p2 -> p1
	"
	
	| portfolio1 portfolio2 |
	
	portfolio1 := Portfolio new.
	portfolio2 := Portfolio new.

	portfolio1 addPortfolio: portfolio2.

	self should: [	portfolio2 addPortfolio: portfolio1.] raise: Error withMessageText: Portfolio errorMessagePortfolioAlreadyAdded.
! !

!testRun: #PortfolioTest #test17 stamp: 'IO 11/7/2020 17:33:57'!
PASSED!

!testRun: #PortfolioTest #test01AnAccountCanBeAddedToAPortfolio stamp: 'IO 11/7/2020 17:33:57'!
PASSED!

!testRun: #PortfolioTest #test02APortfolioHasNoAccountsInitially stamp: 'IO 11/7/2020 17:33:57'!
PASSED!

!testRun: #PortfolioTest #test03APortfolioDoesNotHaveMoreAccountsThanAdded stamp: 'IO 11/7/2020 17:33:57'!
PASSED!

!testRun: #PortfolioTest #test04MoreThanOneAccountCanBeAddedToAPortfolio stamp: 'IO 11/7/2020 17:33:57'!
PASSED!

!testRun: #PortfolioTest #test05 stamp: 'IO 11/7/2020 17:33:57'!
PASSED!

!testRun: #PortfolioTest #test06 stamp: 'IO 11/7/2020 17:33:57'!
PASSED!

!testRun: #PortfolioTest #test07 stamp: 'IO 11/7/2020 17:33:57'!
PASSED!

!testRun: #PortfolioTest #test08 stamp: 'IO 11/7/2020 17:33:57'!
PASSED!

!testRun: #PortfolioTest #test09 stamp: 'IO 11/7/2020 17:33:57'!
PASSED!

!testRun: #PortfolioTest #test10 stamp: 'IO 11/7/2020 17:33:57'!
PASSED!

!testRun: #PortfolioTest #test11 stamp: 'IO 11/7/2020 17:33:57'!
PASSED!

!testRun: #PortfolioTest #test12 stamp: 'IO 11/7/2020 17:33:57'!
PASSED!

!testRun: #PortfolioTest #test13 stamp: 'IO 11/7/2020 17:33:57'!
PASSED!

!testRun: #PortfolioTest #test14 stamp: 'IO 11/7/2020 17:33:57'!
PASSED!

!testRun: #PortfolioTest #test15 stamp: 'IO 11/7/2020 17:33:57'!
PASSED!

!testRun: #PortfolioTest #test16 stamp: 'IO 11/7/2020 17:33:57'!
PASSED!

!testRun: #PortfolioTest #test17 stamp: 'IO 11/7/2020 17:33:57'!
PASSED!

!testRun: #PortfolioTest #test18 stamp: 'IO 11/7/2020 17:33:57'!
PASSED!
!PortfolioTest methodsFor: 'errors adding portfolios by parents' stamp: 'IO 11/7/2020 17:34:22'!
test19
	
	"
		no se pueden agregar un portfolio cuando el padre del padre ya tiene ese portfolio
		p1 ->  p2 -> p3 -> p1
	"
	
	| portfolio1 portfolio2 portfolio3 |
	
	portfolio1 := Portfolio new.
	portfolio2 := Portfolio new.
	portfolio3 := Portfolio new.

	portfolio1 addPortfolio: portfolio2.
	portfolio1 addPortfolio: portfolio3.

	self should: [	portfolio3 addPortfolio: portfolio2.] raise: Error withMessageText: Portfolio errorMessagePortfolioAlreadyAdded.
! !

!testRun: #PortfolioTest #test19 stamp: 'IO 11/7/2020 17:34:22'!
PASSED!

!testRun: #PortfolioTest #test01AnAccountCanBeAddedToAPortfolio stamp: 'IO 11/7/2020 17:34:22'!
PASSED!

!testRun: #PortfolioTest #test02APortfolioHasNoAccountsInitially stamp: 'IO 11/7/2020 17:34:22'!
PASSED!

!testRun: #PortfolioTest #test03APortfolioDoesNotHaveMoreAccountsThanAdded stamp: 'IO 11/7/2020 17:34:22'!
PASSED!

!testRun: #PortfolioTest #test04MoreThanOneAccountCanBeAddedToAPortfolio stamp: 'IO 11/7/2020 17:34:22'!
PASSED!

!testRun: #PortfolioTest #test05 stamp: 'IO 11/7/2020 17:34:22'!
PASSED!

!testRun: #PortfolioTest #test06 stamp: 'IO 11/7/2020 17:34:22'!
PASSED!

!testRun: #PortfolioTest #test07 stamp: 'IO 11/7/2020 17:34:22'!
PASSED!

!testRun: #PortfolioTest #test08 stamp: 'IO 11/7/2020 17:34:22'!
PASSED!

!testRun: #PortfolioTest #test09 stamp: 'IO 11/7/2020 17:34:22'!
PASSED!

!testRun: #PortfolioTest #test10 stamp: 'IO 11/7/2020 17:34:22'!
PASSED!

!testRun: #PortfolioTest #test11 stamp: 'IO 11/7/2020 17:34:22'!
PASSED!

!testRun: #PortfolioTest #test12 stamp: 'IO 11/7/2020 17:34:22'!
PASSED!

!testRun: #PortfolioTest #test13 stamp: 'IO 11/7/2020 17:34:22'!
PASSED!

!testRun: #PortfolioTest #test14 stamp: 'IO 11/7/2020 17:34:22'!
PASSED!

!testRun: #PortfolioTest #test15 stamp: 'IO 11/7/2020 17:34:22'!
PASSED!

!testRun: #PortfolioTest #test16 stamp: 'IO 11/7/2020 17:34:22'!
PASSED!

!testRun: #PortfolioTest #test17 stamp: 'IO 11/7/2020 17:34:22'!
PASSED!

!testRun: #PortfolioTest #test18 stamp: 'IO 11/7/2020 17:34:22'!
PASSED!

!testRun: #PortfolioTest #test19 stamp: 'IO 11/7/2020 17:34:22'!
PASSED!
!Portfolio methodsFor: 'validations' stamp: 'IO 11/7/2020 17:35:06' prior: 50872747!
validateNotAlreadyAddedPortfolio: aPortfolio

	(self includesFatherPortfolio: aPortfolio) ifTrue: [self error: Portfolio errorMessagePortfolioAlreadyAdded].
! !
!Portfolio methodsFor: 'validations' stamp: 'IO 11/7/2020 17:35:09' prior: 50872982!
validateNotAlreadyAddedPortfolio: aPortfolio
	(self includesPortfolio: aPortfolio) ifTrue: [self error: Portfolio errorMessagePortfolioAlreadyAdded].
	(self includesFatherPortfolio: aPortfolio) ifTrue: [self error: Portfolio errorMessagePortfolioAlreadyAdded].
! !

!testRun: #PortfolioTest #test01AnAccountCanBeAddedToAPortfolio stamp: 'IO 11/7/2020 17:35:09'!
PASSED!

!testRun: #PortfolioTest #test02APortfolioHasNoAccountsInitially stamp: 'IO 11/7/2020 17:35:09'!
PASSED!

!testRun: #PortfolioTest #test03APortfolioDoesNotHaveMoreAccountsThanAdded stamp: 'IO 11/7/2020 17:35:09'!
PASSED!

!testRun: #PortfolioTest #test04MoreThanOneAccountCanBeAddedToAPortfolio stamp: 'IO 11/7/2020 17:35:09'!
PASSED!

!testRun: #PortfolioTest #test05 stamp: 'IO 11/7/2020 17:35:09'!
PASSED!

!testRun: #PortfolioTest #test06 stamp: 'IO 11/7/2020 17:35:09'!
PASSED!

!testRun: #PortfolioTest #test07 stamp: 'IO 11/7/2020 17:35:09'!
PASSED!

!testRun: #PortfolioTest #test08 stamp: 'IO 11/7/2020 17:35:09'!
PASSED!

!testRun: #PortfolioTest #test09 stamp: 'IO 11/7/2020 17:35:09'!
PASSED!

!testRun: #PortfolioTest #test10 stamp: 'IO 11/7/2020 17:35:09'!
PASSED!

!testRun: #PortfolioTest #test11 stamp: 'IO 11/7/2020 17:35:09'!
PASSED!

!testRun: #PortfolioTest #test12 stamp: 'IO 11/7/2020 17:35:09'!
PASSED!

!testRun: #PortfolioTest #test13 stamp: 'IO 11/7/2020 17:35:09'!
PASSED!

!testRun: #PortfolioTest #test14 stamp: 'IO 11/7/2020 17:35:09'!
PASSED!

!testRun: #PortfolioTest #test15 stamp: 'IO 11/7/2020 17:35:09'!
PASSED!

!testRun: #PortfolioTest #test16 stamp: 'IO 11/7/2020 17:35:09'!
PASSED!

!testRun: #PortfolioTest #test17 stamp: 'IO 11/7/2020 17:35:09'!
PASSED!

!testRun: #PortfolioTest #test18 stamp: 'IO 11/7/2020 17:35:09'!
PASSED!

!testRun: #PortfolioTest #test19 stamp: 'IO 11/7/2020 17:35:09'!
PASSED!
!Portfolio methodsFor: 'validations' stamp: 'IO 11/7/2020 17:35:17' prior: 50872990!
validateNotAlreadyAddedPortfolio: aPortfolio

	(self includesFatherPortfolio: aPortfolio) ifTrue: [self error: Portfolio errorMessagePortfolioAlreadyAdded].
! !

!testRun: #PortfolioTest #test01AnAccountCanBeAddedToAPortfolio stamp: 'IO 11/7/2020 17:35:24'!
PASSED!

!testRun: #PortfolioTest #test02APortfolioHasNoAccountsInitially stamp: 'IO 11/7/2020 17:35:24'!
PASSED!

!testRun: #PortfolioTest #test03APortfolioDoesNotHaveMoreAccountsThanAdded stamp: 'IO 11/7/2020 17:35:24'!
PASSED!

!testRun: #PortfolioTest #test04MoreThanOneAccountCanBeAddedToAPortfolio stamp: 'IO 11/7/2020 17:35:24'!
PASSED!

!testRun: #PortfolioTest #test05 stamp: 'IO 11/7/2020 17:35:24'!
PASSED!

!testRun: #PortfolioTest #test06 stamp: 'IO 11/7/2020 17:35:24'!
PASSED!

!testRun: #PortfolioTest #test07 stamp: 'IO 11/7/2020 17:35:24'!
PASSED!

!testRun: #PortfolioTest #test08 stamp: 'IO 11/7/2020 17:35:24'!
PASSED!

!testRun: #PortfolioTest #test09 stamp: 'IO 11/7/2020 17:35:24'!
PASSED!

!testRun: #PortfolioTest #test10 stamp: 'IO 11/7/2020 17:35:24'!
PASSED!

!testRun: #PortfolioTest #test11 stamp: 'IO 11/7/2020 17:35:24'!
PASSED!

!testRun: #PortfolioTest #test12 stamp: 'IO 11/7/2020 17:35:24'!
PASSED!

!testRun: #PortfolioTest #test13 stamp: 'IO 11/7/2020 17:35:24'!
FAILURE!

!testRun: #PortfolioTest #test14 stamp: 'IO 11/7/2020 17:35:24'!
PASSED!

!testRun: #PortfolioTest #test15 stamp: 'IO 11/7/2020 17:35:24'!
PASSED!

!testRun: #PortfolioTest #test16 stamp: 'IO 11/7/2020 17:35:24'!
PASSED!

!testRun: #PortfolioTest #test17 stamp: 'IO 11/7/2020 17:35:24'!
PASSED!

!testRun: #PortfolioTest #test18 stamp: 'IO 11/7/2020 17:35:24'!
PASSED!

!testRun: #PortfolioTest #test19 stamp: 'IO 11/7/2020 17:35:24'!
FAILURE!
!Portfolio methodsFor: 'validations' stamp: 'IO 11/7/2020 17:36:33' prior: 50872802!
validatePortfolioBeforeAdding: aPortfolio
	self validateNotAlreadyAddedPortfolio: aPortfolio.
	(self includesFatherPortfolio: aPortfolio) ifTrue: [self error: Portfolio errorMessagePortfolioAlreadyAdded].
	fatherPortfolios do: [ :fatherPortfolio | (fatherPortfolio validatePortfolioBeforeAdding: aPortfolio)].

! !

!testRun: #PortfolioTest #test01AnAccountCanBeAddedToAPortfolio stamp: 'IO 11/7/2020 17:36:34'!
PASSED!

!testRun: #PortfolioTest #test02APortfolioHasNoAccountsInitially stamp: 'IO 11/7/2020 17:36:34'!
PASSED!

!testRun: #PortfolioTest #test03APortfolioDoesNotHaveMoreAccountsThanAdded stamp: 'IO 11/7/2020 17:36:34'!
PASSED!

!testRun: #PortfolioTest #test04MoreThanOneAccountCanBeAddedToAPortfolio stamp: 'IO 11/7/2020 17:36:34'!
PASSED!

!testRun: #PortfolioTest #test05 stamp: 'IO 11/7/2020 17:36:34'!
PASSED!

!testRun: #PortfolioTest #test06 stamp: 'IO 11/7/2020 17:36:34'!
PASSED!

!testRun: #PortfolioTest #test07 stamp: 'IO 11/7/2020 17:36:34'!
PASSED!

!testRun: #PortfolioTest #test08 stamp: 'IO 11/7/2020 17:36:34'!
PASSED!

!testRun: #PortfolioTest #test09 stamp: 'IO 11/7/2020 17:36:34'!
PASSED!

!testRun: #PortfolioTest #test10 stamp: 'IO 11/7/2020 17:36:34'!
PASSED!

!testRun: #PortfolioTest #test11 stamp: 'IO 11/7/2020 17:36:34'!
PASSED!

!testRun: #PortfolioTest #test12 stamp: 'IO 11/7/2020 17:36:34'!
PASSED!

!testRun: #PortfolioTest #test13 stamp: 'IO 11/7/2020 17:36:34'!
FAILURE!

!testRun: #PortfolioTest #test14 stamp: 'IO 11/7/2020 17:36:34'!
PASSED!

!testRun: #PortfolioTest #test15 stamp: 'IO 11/7/2020 17:36:34'!
PASSED!

!testRun: #PortfolioTest #test16 stamp: 'IO 11/7/2020 17:36:34'!
PASSED!

!testRun: #PortfolioTest #test17 stamp: 'IO 11/7/2020 17:36:34'!
PASSED!

!testRun: #PortfolioTest #test18 stamp: 'IO 11/7/2020 17:36:34'!
PASSED!

!testRun: #PortfolioTest #test19 stamp: 'IO 11/7/2020 17:36:34'!
FAILURE!
!Portfolio methodsFor: 'validations' stamp: 'IO 11/7/2020 17:36:38' prior: 50873107!
validatePortfolioBeforeAdding: aPortfolio
	self validateNotAlreadyAddedPortfolio: aPortfolio.
	fatherPortfolios do: [ :fatherPortfolio | (fatherPortfolio validatePortfolioBeforeAdding: aPortfolio)].

! !

!testRun: #PortfolioTest #test01AnAccountCanBeAddedToAPortfolio stamp: 'IO 11/7/2020 17:36:40'!
PASSED!

!testRun: #PortfolioTest #test02APortfolioHasNoAccountsInitially stamp: 'IO 11/7/2020 17:36:40'!
PASSED!

!testRun: #PortfolioTest #test03APortfolioDoesNotHaveMoreAccountsThanAdded stamp: 'IO 11/7/2020 17:36:40'!
PASSED!

!testRun: #PortfolioTest #test04MoreThanOneAccountCanBeAddedToAPortfolio stamp: 'IO 11/7/2020 17:36:40'!
PASSED!

!testRun: #PortfolioTest #test05 stamp: 'IO 11/7/2020 17:36:40'!
PASSED!

!testRun: #PortfolioTest #test06 stamp: 'IO 11/7/2020 17:36:40'!
PASSED!

!testRun: #PortfolioTest #test07 stamp: 'IO 11/7/2020 17:36:40'!
PASSED!

!testRun: #PortfolioTest #test08 stamp: 'IO 11/7/2020 17:36:40'!
PASSED!

!testRun: #PortfolioTest #test09 stamp: 'IO 11/7/2020 17:36:40'!
PASSED!

!testRun: #PortfolioTest #test10 stamp: 'IO 11/7/2020 17:36:40'!
PASSED!

!testRun: #PortfolioTest #test11 stamp: 'IO 11/7/2020 17:36:40'!
PASSED!

!testRun: #PortfolioTest #test12 stamp: 'IO 11/7/2020 17:36:40'!
PASSED!

!testRun: #PortfolioTest #test13 stamp: 'IO 11/7/2020 17:36:40'!
FAILURE!

!testRun: #PortfolioTest #test14 stamp: 'IO 11/7/2020 17:36:40'!
PASSED!

!testRun: #PortfolioTest #test15 stamp: 'IO 11/7/2020 17:36:40'!
PASSED!

!testRun: #PortfolioTest #test16 stamp: 'IO 11/7/2020 17:36:40'!
PASSED!

!testRun: #PortfolioTest #test17 stamp: 'IO 11/7/2020 17:36:40'!
PASSED!

!testRun: #PortfolioTest #test18 stamp: 'IO 11/7/2020 17:36:40'!
PASSED!

!testRun: #PortfolioTest #test19 stamp: 'IO 11/7/2020 17:36:40'!
FAILURE!
!Portfolio methodsFor: 'validations' stamp: 'IO 11/7/2020 17:38:14' prior: 50873050!
validateNotAlreadyAddedPortfolio: aPortfolio
	(self includesPortfolio: aPortfolio) ifTrue: [self error: Portfolio errorMessagePortfolioAlreadyAdded].
	(self includesFatherPortfolio: aPortfolio) ifTrue: [self error: Portfolio errorMessagePortfolioAlreadyAdded].
! !

!testRun: #PortfolioTest #test01AnAccountCanBeAddedToAPortfolio stamp: 'IO 11/7/2020 17:38:14'!
PASSED!

!testRun: #PortfolioTest #test02APortfolioHasNoAccountsInitially stamp: 'IO 11/7/2020 17:38:14'!
PASSED!

!testRun: #PortfolioTest #test03APortfolioDoesNotHaveMoreAccountsThanAdded stamp: 'IO 11/7/2020 17:38:14'!
PASSED!

!testRun: #PortfolioTest #test04MoreThanOneAccountCanBeAddedToAPortfolio stamp: 'IO 11/7/2020 17:38:14'!
PASSED!

!testRun: #PortfolioTest #test05 stamp: 'IO 11/7/2020 17:38:14'!
PASSED!

!testRun: #PortfolioTest #test06 stamp: 'IO 11/7/2020 17:38:14'!
PASSED!

!testRun: #PortfolioTest #test07 stamp: 'IO 11/7/2020 17:38:14'!
PASSED!

!testRun: #PortfolioTest #test08 stamp: 'IO 11/7/2020 17:38:14'!
PASSED!

!testRun: #PortfolioTest #test09 stamp: 'IO 11/7/2020 17:38:14'!
PASSED!

!testRun: #PortfolioTest #test10 stamp: 'IO 11/7/2020 17:38:14'!
PASSED!

!testRun: #PortfolioTest #test11 stamp: 'IO 11/7/2020 17:38:14'!
PASSED!

!testRun: #PortfolioTest #test12 stamp: 'IO 11/7/2020 17:38:14'!
PASSED!

!testRun: #PortfolioTest #test13 stamp: 'IO 11/7/2020 17:38:14'!
PASSED!

!testRun: #PortfolioTest #test14 stamp: 'IO 11/7/2020 17:38:14'!
PASSED!

!testRun: #PortfolioTest #test15 stamp: 'IO 11/7/2020 17:38:14'!
PASSED!

!testRun: #PortfolioTest #test16 stamp: 'IO 11/7/2020 17:38:14'!
PASSED!

!testRun: #PortfolioTest #test17 stamp: 'IO 11/7/2020 17:38:14'!
PASSED!

!testRun: #PortfolioTest #test18 stamp: 'IO 11/7/2020 17:38:14'!
PASSED!

!testRun: #PortfolioTest #test19 stamp: 'IO 11/7/2020 17:38:14'!
PASSED!

!testRun: #PortfolioTest #test01AnAccountCanBeAddedToAPortfolio stamp: 'IO 11/7/2020 17:38:18'!
PASSED!

!testRun: #PortfolioTest #test02APortfolioHasNoAccountsInitially stamp: 'IO 11/7/2020 17:38:18'!
PASSED!

!testRun: #PortfolioTest #test03APortfolioDoesNotHaveMoreAccountsThanAdded stamp: 'IO 11/7/2020 17:38:18'!
PASSED!

!testRun: #PortfolioTest #test04MoreThanOneAccountCanBeAddedToAPortfolio stamp: 'IO 11/7/2020 17:38:18'!
PASSED!

!testRun: #PortfolioTest #test05 stamp: 'IO 11/7/2020 17:38:18'!
PASSED!

!testRun: #PortfolioTest #test06 stamp: 'IO 11/7/2020 17:38:18'!
PASSED!

!testRun: #PortfolioTest #test07 stamp: 'IO 11/7/2020 17:38:18'!
PASSED!

!testRun: #PortfolioTest #test08 stamp: 'IO 11/7/2020 17:38:18'!
PASSED!

!testRun: #PortfolioTest #test09 stamp: 'IO 11/7/2020 17:38:18'!
PASSED!

!testRun: #PortfolioTest #test10 stamp: 'IO 11/7/2020 17:38:18'!
PASSED!

!testRun: #PortfolioTest #test11 stamp: 'IO 11/7/2020 17:38:18'!
PASSED!

!testRun: #PortfolioTest #test12 stamp: 'IO 11/7/2020 17:38:18'!
PASSED!

!testRun: #PortfolioTest #test13 stamp: 'IO 11/7/2020 17:38:18'!
PASSED!

!testRun: #PortfolioTest #test14 stamp: 'IO 11/7/2020 17:38:18'!
PASSED!

!testRun: #PortfolioTest #test15 stamp: 'IO 11/7/2020 17:38:18'!
PASSED!

!testRun: #PortfolioTest #test16 stamp: 'IO 11/7/2020 17:38:18'!
PASSED!

!testRun: #PortfolioTest #test17 stamp: 'IO 11/7/2020 17:38:18'!
PASSED!

!testRun: #PortfolioTest #test18 stamp: 'IO 11/7/2020 17:38:18'!
PASSED!

!testRun: #PortfolioTest #test19 stamp: 'IO 11/7/2020 17:38:18'!
PASSED!
!PortfolioTest methodsFor: 'errors adding portfolios by parents' stamp: 'IO 11/7/2020 17:41:41' prior: 50872913!
test19
	
	"
		no se pueden agregar un portfolio cuando el padre del padre ya tiene ese portfolio
		p1 ->  p2
		p1 ->  p3 -> p2
	"
	
	| portfolio1 portfolio2 portfolio3 |
	
	portfolio1 := Portfolio new.
	portfolio2 := Portfolio new.
	portfolio3 := Portfolio new.

	portfolio1 addPortfolio: portfolio2.
	portfolio1 addPortfolio: portfolio3.

	self should: [	portfolio3 addPortfolio: portfolio2.] raise: Error withMessageText: Portfolio errorMessagePortfolioAlreadyAdded.
! !
!Portfolio methodsFor: 'validations' stamp: 'IO 11/7/2020 17:42:03' prior: 50873227!
validateNotAlreadyAddedPortfolio: aPortfolio

	(self includesFatherPortfolio: aPortfolio) ifTrue: [self error: Portfolio errorMessagePortfolioAlreadyAdded].
! !
!Portfolio methodsFor: 'portfolios' stamp: 'IO 11/7/2020 17:42:11' prior: 50872462!
addPortfolio: aPortfolio
	self validatePortfolioBeforeAdding: aPortfolio.
	(self includesPortfolio: aPortfolio) ifTrue: [self error: Portfolio errorMessagePortfolioAlreadyAdded].
	portfolios add: aPortfolio.
	aPortfolio addAsFather: self. 
! !

!testRun: #PortfolioTest #test01AnAccountCanBeAddedToAPortfolio stamp: 'IO 11/7/2020 17:42:11'!
PASSED!

!testRun: #PortfolioTest #test02APortfolioHasNoAccountsInitially stamp: 'IO 11/7/2020 17:42:11'!
PASSED!

!testRun: #PortfolioTest #test03APortfolioDoesNotHaveMoreAccountsThanAdded stamp: 'IO 11/7/2020 17:42:11'!
PASSED!

!testRun: #PortfolioTest #test04MoreThanOneAccountCanBeAddedToAPortfolio stamp: 'IO 11/7/2020 17:42:11'!
PASSED!

!testRun: #PortfolioTest #test05 stamp: 'IO 11/7/2020 17:42:11'!
PASSED!

!testRun: #PortfolioTest #test06 stamp: 'IO 11/7/2020 17:42:11'!
PASSED!

!testRun: #PortfolioTest #test07 stamp: 'IO 11/7/2020 17:42:11'!
PASSED!

!testRun: #PortfolioTest #test08 stamp: 'IO 11/7/2020 17:42:11'!
PASSED!

!testRun: #PortfolioTest #test09 stamp: 'IO 11/7/2020 17:42:11'!
PASSED!

!testRun: #PortfolioTest #test10 stamp: 'IO 11/7/2020 17:42:11'!
PASSED!

!testRun: #PortfolioTest #test11 stamp: 'IO 11/7/2020 17:42:11'!
PASSED!

!testRun: #PortfolioTest #test12 stamp: 'IO 11/7/2020 17:42:11'!
PASSED!

!testRun: #PortfolioTest #test13 stamp: 'IO 11/7/2020 17:42:11'!
PASSED!

!testRun: #PortfolioTest #test14 stamp: 'IO 11/7/2020 17:42:11'!
PASSED!

!testRun: #PortfolioTest #test15 stamp: 'IO 11/7/2020 17:42:11'!
PASSED!

!testRun: #PortfolioTest #test16 stamp: 'IO 11/7/2020 17:42:11'!
PASSED!

!testRun: #PortfolioTest #test17 stamp: 'IO 11/7/2020 17:42:12'!
PASSED!

!testRun: #PortfolioTest #test18 stamp: 'IO 11/7/2020 17:42:12'!
PASSED!

!testRun: #PortfolioTest #test19 stamp: 'IO 11/7/2020 17:42:12'!
FAILURE!

!testRun: #PortfolioTest #test19 stamp: 'IO 11/7/2020 17:42:12'!
FAILURE!

!testRun: #PortfolioTest #test01AnAccountCanBeAddedToAPortfolio stamp: 'IO 11/7/2020 17:42:32'!
PASSED!

!testRun: #PortfolioTest #test02APortfolioHasNoAccountsInitially stamp: 'IO 11/7/2020 17:42:32'!
PASSED!

!testRun: #PortfolioTest #test03APortfolioDoesNotHaveMoreAccountsThanAdded stamp: 'IO 11/7/2020 17:42:32'!
PASSED!

!testRun: #PortfolioTest #test04MoreThanOneAccountCanBeAddedToAPortfolio stamp: 'IO 11/7/2020 17:42:32'!
PASSED!

!testRun: #PortfolioTest #test05 stamp: 'IO 11/7/2020 17:42:32'!
PASSED!

!testRun: #PortfolioTest #test06 stamp: 'IO 11/7/2020 17:42:32'!
PASSED!

!testRun: #PortfolioTest #test07 stamp: 'IO 11/7/2020 17:42:32'!
PASSED!

!testRun: #PortfolioTest #test08 stamp: 'IO 11/7/2020 17:42:32'!
PASSED!

!testRun: #PortfolioTest #test09 stamp: 'IO 11/7/2020 17:42:32'!
PASSED!

!testRun: #PortfolioTest #test10 stamp: 'IO 11/7/2020 17:42:32'!
PASSED!

!testRun: #PortfolioTest #test11 stamp: 'IO 11/7/2020 17:42:32'!
PASSED!

!testRun: #PortfolioTest #test12 stamp: 'IO 11/7/2020 17:42:32'!
PASSED!

!testRun: #PortfolioTest #test13 stamp: 'IO 11/7/2020 17:42:32'!
PASSED!

!testRun: #PortfolioTest #test14 stamp: 'IO 11/7/2020 17:42:32'!
PASSED!

!testRun: #PortfolioTest #test15 stamp: 'IO 11/7/2020 17:42:32'!
PASSED!

!testRun: #PortfolioTest #test16 stamp: 'IO 11/7/2020 17:42:32'!
PASSED!

!testRun: #PortfolioTest #test17 stamp: 'IO 11/7/2020 17:42:32'!
PASSED!

!testRun: #PortfolioTest #test18 stamp: 'IO 11/7/2020 17:42:32'!
PASSED!

!testRun: #PortfolioTest #test19 stamp: 'IO 11/7/2020 17:42:32'!
FAILURE!

!testRun: #PortfolioTest #test19 stamp: 'IO 11/7/2020 17:42:32'!
FAILURE!
!Portfolio methodsFor: 'portfolios' stamp: 'IO 11/7/2020 17:42:36' prior: 50873362!
addPortfolio: aPortfolio
	self validatePortfolioBeforeAdding: aPortfolio.

	portfolios add: aPortfolio.
	aPortfolio addAsFather: self. 
! !
!Portfolio methodsFor: 'validations' stamp: 'IO 11/7/2020 17:42:42' prior: 50873354!
validateNotAlreadyAddedPortfolio: aPortfolio
	(self includesPortfolio: aPortfolio) ifTrue: [self error: Portfolio errorMessagePortfolioAlreadyAdded].
	(self includesFatherPortfolio: aPortfolio) ifTrue: [self error: Portfolio errorMessagePortfolioAlreadyAdded].
! !

!testRun: #PortfolioTest #test01AnAccountCanBeAddedToAPortfolio stamp: 'IO 11/7/2020 17:42:43'!
PASSED!

!testRun: #PortfolioTest #test02APortfolioHasNoAccountsInitially stamp: 'IO 11/7/2020 17:42:43'!
PASSED!

!testRun: #PortfolioTest #test03APortfolioDoesNotHaveMoreAccountsThanAdded stamp: 'IO 11/7/2020 17:42:43'!
PASSED!

!testRun: #PortfolioTest #test04MoreThanOneAccountCanBeAddedToAPortfolio stamp: 'IO 11/7/2020 17:42:43'!
PASSED!

!testRun: #PortfolioTest #test05 stamp: 'IO 11/7/2020 17:42:43'!
PASSED!

!testRun: #PortfolioTest #test06 stamp: 'IO 11/7/2020 17:42:43'!
PASSED!

!testRun: #PortfolioTest #test07 stamp: 'IO 11/7/2020 17:42:43'!
PASSED!

!testRun: #PortfolioTest #test08 stamp: 'IO 11/7/2020 17:42:43'!
PASSED!

!testRun: #PortfolioTest #test09 stamp: 'IO 11/7/2020 17:42:43'!
PASSED!

!testRun: #PortfolioTest #test10 stamp: 'IO 11/7/2020 17:42:43'!
PASSED!

!testRun: #PortfolioTest #test11 stamp: 'IO 11/7/2020 17:42:43'!
PASSED!

!testRun: #PortfolioTest #test12 stamp: 'IO 11/7/2020 17:42:43'!
PASSED!

!testRun: #PortfolioTest #test13 stamp: 'IO 11/7/2020 17:42:43'!
PASSED!

!testRun: #PortfolioTest #test14 stamp: 'IO 11/7/2020 17:42:43'!
PASSED!

!testRun: #PortfolioTest #test15 stamp: 'IO 11/7/2020 17:42:43'!
PASSED!

!testRun: #PortfolioTest #test16 stamp: 'IO 11/7/2020 17:42:43'!
PASSED!

!testRun: #PortfolioTest #test17 stamp: 'IO 11/7/2020 17:42:43'!
PASSED!

!testRun: #PortfolioTest #test18 stamp: 'IO 11/7/2020 17:42:43'!
PASSED!

!testRun: #PortfolioTest #test19 stamp: 'IO 11/7/2020 17:42:43'!
PASSED!
!PortfolioTest methodsFor: 'errors adding portfolios by parents' stamp: 'IO 11/7/2020 17:45:20'!
test20
	
	"
		no se pueden agregar un portfolio con una cuenta cuando el padre ya tiene esa cuenta
		p1 ->  a1
		     ->  p2 -> a1
	"
	
	| portfolio1 portfolio2 account1 |
	
	portfolio1 := Portfolio new.
	portfolio2 := Portfolio new.
	account1 := ReceptiveAccount new.

	portfolio1 addPortfolio: portfolio2.
	portfolio1 addAccount: account1.
	portfolio2 addAccount: account1.

	self should: [	portfolio1 addPortfolio: portfolio2.] raise: Error withMessageText: Portfolio errorMessageAccountInPortfolioAlreadyAdded.
! !

!testRun: #PortfolioTest #test20 stamp: 'IO 11/7/2020 17:45:22'!
ERROR!
!Portfolio class methodsFor: 'error messages' stamp: 'IO 11/7/2020 17:46:04'!
errorMessageAccountInPortfolioAlreadyAdded
	^'An account in the protfolio to be added is already included in this portfolio.'! !

!testRun: #PortfolioTest #test20 stamp: 'IO 11/7/2020 17:46:12'!
ERROR!

!testRun: #PortfolioTest #test20 stamp: 'IO 11/7/2020 17:46:18'!
ERROR!

!testRun: #PortfolioTest #test20 stamp: 'IO 11/7/2020 17:46:49'!
ERROR!
!PortfolioTest methodsFor: 'errors adding portfolios by parents' stamp: 'IO 11/7/2020 17:47:50' prior: 50873542!
test20
	
	"
		no se pueden agregar un portfolio con una cuenta cuando el padre ya tiene esa cuenta
		p1 ->  a1
		     ->  p2 x> p3 -> a1
	"
	
	| portfolio1 portfolio2 portfolio3 account1 |
	
	portfolio1 := Portfolio new.
	portfolio2 := Portfolio new.
	portfolio3 := Portfolio new.
	account1 := ReceptiveAccount new.

	portfolio1 addPortfolio: portfolio2.
	portfolio1 addAccount: account1.
	portfolio3 addAccount: account1.

	self should: [	portfolio2 addPortfolio: portfolio3.] raise: Error withMessageText: Portfolio errorMessageAccountInPortfolioAlreadyAdded.
! !

!testRun: #PortfolioTest #test20 stamp: 'IO 11/7/2020 17:47:51'!
FAILURE!

!testRun: #PortfolioTest #test20 stamp: 'IO 11/7/2020 17:47:57'!
FAILURE!
!Portfolio methodsFor: 'portfolios' stamp: 'IO 11/7/2020 17:51:39' prior: 50873474!
addPortfolio: aPortfolio
	self validatePortfolioBeforeAdding: aPortfolio.

	portfolios add: aPortfolio.
	aPortfolio addAsFather: self. 
! !

!testRun: #PortfolioTest #test20 stamp: 'IO 11/7/2020 17:53:33'!
FAILURE!
!Portfolio methodsFor: 'portfolios' stamp: 'IO 11/7/2020 17:54:43' prior: 50873603!
addPortfolio: aPortfolio
	self validatePortfolioBeforeAdding: aPortfolio.
	
	aPortfolio accounts do: [ :account |
		fatherPortfolios do: [
			:fatherPortfolio | fatherPortfolio ]]

	portfolios add: aPortfolio.
	aPortfolio addAsFather: self. 
! !
!Portfolio methodsFor: 'portfolios' stamp: 'IO 11/7/2020 17:56:07' prior: 50873613!
addPortfolio: aPortfolio
	self validatePortfolioBeforeAdding: aPortfolio.

	portfolios add: aPortfolio.
	aPortfolio addAsFather: self. 
! !

!methodRemoval: PortfolioTest #test20 stamp: 'IO 11/7/2020 17:56:10'!
test20
	
	"
		no se pueden agregar un portfolio con una cuenta cuando el padre ya tiene esa cuenta
		p1 ->  a1
		     ->  p2 x> p3 -> a1
	"
	
	| portfolio1 portfolio2 portfolio3 account1 |
	
	portfolio1 := Portfolio new.
	portfolio2 := Portfolio new.
	portfolio3 := Portfolio new.
	account1 := ReceptiveAccount new.

	portfolio1 addPortfolio: portfolio2.
	portfolio1 addAccount: account1.
	portfolio3 addAccount: account1.

	self should: [	portfolio2 addPortfolio: portfolio3.] raise: Error withMessageText: Portfolio errorMessageAccountInPortfolioAlreadyAdded.
!
!PortfolioTest methodsFor: 'errors adding portfolios by parents' stamp: 'IO 11/7/2020 17:59:33'!
test20
	
	"un portfolio expone sus cuenta"
	
	| portfolio1 account1 account2 |
	
	portfolio1 := Portfolio new.
	account1 := ReceptiveAccount new.
	account2 := ReceptiveAccount new.

	portfolio1 addAccount: account1.
	portfolio1 addAccount: account1.	

	self assert: (portfolio1 accounts) equals: #(account1 account2)	.

	
! !

!testRun: #PortfolioTest #test20 stamp: 'IO 11/7/2020 17:59:38'!
ERROR!
!Portfolio methodsFor: 'error handling' stamp: 'IO 11/7/2020 17:59:40' overrides: 16881409!
error: aString 
	self shouldBeImplemented.! !
!Portfolio methodsFor: 'error handling' stamp: 'IO 11/7/2020 17:59:53' prior: 50873668 overrides: 16881409!
error: aString 
	^accounts copy.
! !

!testRun: #PortfolioTest #test20 stamp: 'IO 11/7/2020 17:59:57'!
ERROR!

!testRun: #PortfolioTest #test20 stamp: 'IO 11/7/2020 18:00:11'!
ERROR!
!Portfolio methodsFor: 'accessing' stamp: 'IO 11/7/2020 18:00:19'!
accounts
	self shouldBeImplemented.
	^accounts! !
!Portfolio methodsFor: 'accessing' stamp: 'IO 11/7/2020 18:00:26' prior: 50873681!
accounts
	^accounts copy.! !

!testRun: #PortfolioTest #test01AnAccountCanBeAddedToAPortfolio stamp: 'IO 11/7/2020 18:00:27'!
PASSED!

!testRun: #PortfolioTest #test02APortfolioHasNoAccountsInitially stamp: 'IO 11/7/2020 18:00:27'!
PASSED!

!testRun: #PortfolioTest #test03APortfolioDoesNotHaveMoreAccountsThanAdded stamp: 'IO 11/7/2020 18:00:27'!
PASSED!

!testRun: #PortfolioTest #test04MoreThanOneAccountCanBeAddedToAPortfolio stamp: 'IO 11/7/2020 18:00:27'!
PASSED!

!testRun: #PortfolioTest #test05 stamp: 'IO 11/7/2020 18:00:27'!
PASSED!

!testRun: #PortfolioTest #test06 stamp: 'IO 11/7/2020 18:00:27'!
PASSED!

!testRun: #PortfolioTest #test07 stamp: 'IO 11/7/2020 18:00:27'!
PASSED!

!testRun: #PortfolioTest #test08 stamp: 'IO 11/7/2020 18:00:27'!
PASSED!

!testRun: #PortfolioTest #test09 stamp: 'IO 11/7/2020 18:00:27'!
PASSED!

!testRun: #PortfolioTest #test10 stamp: 'IO 11/7/2020 18:00:27'!
FAILURE!

!testRun: #PortfolioTest #test11 stamp: 'IO 11/7/2020 18:00:27'!
FAILURE!

!testRun: #PortfolioTest #test12 stamp: 'IO 11/7/2020 18:00:27'!
FAILURE!

!testRun: #PortfolioTest #test13 stamp: 'IO 11/7/2020 18:00:27'!
FAILURE!

!testRun: #PortfolioTest #test14 stamp: 'IO 11/7/2020 18:00:27'!
FAILURE!

!testRun: #PortfolioTest #test15 stamp: 'IO 11/7/2020 18:00:27'!
FAILURE!

!testRun: #PortfolioTest #test16 stamp: 'IO 11/7/2020 18:00:27'!
FAILURE!

!testRun: #PortfolioTest #test17 stamp: 'IO 11/7/2020 18:00:27'!
FAILURE!

!testRun: #PortfolioTest #test18 stamp: 'IO 11/7/2020 18:00:27'!
FAILURE!

!testRun: #PortfolioTest #test19 stamp: 'IO 11/7/2020 18:00:27'!
FAILURE!

!testRun: #PortfolioTest #test20 stamp: 'IO 11/7/2020 18:00:27'!
FAILURE!

!testRun: #PortfolioTest #test20 stamp: 'IO 11/7/2020 18:00:31'!
FAILURE!

!testRun: #PortfolioTest #test20 stamp: 'IO 11/7/2020 18:01:22'!
FAILURE!
!PortfolioTest methodsFor: 'errors adding portfolios by parents' stamp: 'IO 11/7/2020 18:01:41' prior: 50873652!
test20
	
	"un portfolio expone sus cuenta"
	
	| portfolio1 account1 account2 |
	
	portfolio1 := Portfolio new.
	account1 := ReceptiveAccount new.
	account2 := ReceptiveAccount new.

	portfolio1 addAccount: account1.
	portfolio1 addAccount: account1.	

	self assert: (portfolio1 accounts) equals: (OrderedCollection newFrom: #(account1 account2)	).

	
! !

!testRun: #PortfolioTest #test20 stamp: 'IO 11/7/2020 18:01:50'!
FAILURE!
!PortfolioTest methodsFor: 'errors adding portfolios by parents' stamp: 'IO 11/7/2020 18:02:32' prior: 50873747!
test20
	
	"un portfolio expone sus cuenta"
	
	| portfolio1 account1 account2 |
	
	portfolio1 := Portfolio new.
	account1 := ReceptiveAccount new.
	account2 := ReceptiveAccount new.

	portfolio1 addAccount: account1.
	portfolio1 addAccount: account1.	

	self assert: (portfolio1 accounts) equals: (OrderedCollection with: account1 with: account2).

	
! !

!testRun: #PortfolioTest #test20 stamp: 'IO 11/7/2020 18:02:33'!
FAILURE!
!PortfolioTest methodsFor: 'errors adding portfolios by parents' stamp: 'IO 11/7/2020 18:02:43' prior: 50873764!
test20
	
	"un portfolio expone sus cuenta"
	
	| portfolio1 account1 account2 |
	
	portfolio1 := Portfolio new.
	account1 := ReceptiveAccount new.
	account2 := ReceptiveAccount new.

	portfolio1 addAccount: account1.
	portfolio1 addAccount: account2.	

	self assert: (portfolio1 accounts) equals: (OrderedCollection with: account1 with: account2).

	
! !

!testRun: #PortfolioTest #test20 stamp: 'IO 11/7/2020 18:02:52'!
PASSED!

!testRun: #PortfolioTest #test01AnAccountCanBeAddedToAPortfolio stamp: 'IO 11/7/2020 18:02:52'!
PASSED!

!testRun: #PortfolioTest #test02APortfolioHasNoAccountsInitially stamp: 'IO 11/7/2020 18:02:52'!
PASSED!

!testRun: #PortfolioTest #test03APortfolioDoesNotHaveMoreAccountsThanAdded stamp: 'IO 11/7/2020 18:02:52'!
PASSED!

!testRun: #PortfolioTest #test04MoreThanOneAccountCanBeAddedToAPortfolio stamp: 'IO 11/7/2020 18:02:52'!
PASSED!

!testRun: #PortfolioTest #test05 stamp: 'IO 11/7/2020 18:02:52'!
PASSED!

!testRun: #PortfolioTest #test06 stamp: 'IO 11/7/2020 18:02:52'!
PASSED!

!testRun: #PortfolioTest #test07 stamp: 'IO 11/7/2020 18:02:52'!
PASSED!

!testRun: #PortfolioTest #test08 stamp: 'IO 11/7/2020 18:02:52'!
PASSED!

!testRun: #PortfolioTest #test09 stamp: 'IO 11/7/2020 18:02:52'!
PASSED!

!testRun: #PortfolioTest #test10 stamp: 'IO 11/7/2020 18:02:52'!
FAILURE!

!testRun: #PortfolioTest #test11 stamp: 'IO 11/7/2020 18:02:52'!
FAILURE!

!testRun: #PortfolioTest #test12 stamp: 'IO 11/7/2020 18:02:52'!
FAILURE!

!testRun: #PortfolioTest #test13 stamp: 'IO 11/7/2020 18:02:52'!
FAILURE!

!testRun: #PortfolioTest #test14 stamp: 'IO 11/7/2020 18:02:52'!
FAILURE!

!testRun: #PortfolioTest #test15 stamp: 'IO 11/7/2020 18:02:52'!
FAILURE!

!testRun: #PortfolioTest #test16 stamp: 'IO 11/7/2020 18:02:52'!
FAILURE!

!testRun: #PortfolioTest #test17 stamp: 'IO 11/7/2020 18:02:52'!
FAILURE!

!testRun: #PortfolioTest #test18 stamp: 'IO 11/7/2020 18:02:52'!
FAILURE!

!testRun: #PortfolioTest #test19 stamp: 'IO 11/7/2020 18:02:52'!
FAILURE!

!testRun: #PortfolioTest #test20 stamp: 'IO 11/7/2020 18:02:52'!
PASSED!

!testRun: #PortfolioTest #test20 stamp: 'IO 11/7/2020 18:02:58'!
PASSED!

!testRun: #PortfolioTest #test01AnAccountCanBeAddedToAPortfolio stamp: 'IO 11/7/2020 18:02:58'!
PASSED!

!testRun: #PortfolioTest #test02APortfolioHasNoAccountsInitially stamp: 'IO 11/7/2020 18:02:58'!
PASSED!

!testRun: #PortfolioTest #test03APortfolioDoesNotHaveMoreAccountsThanAdded stamp: 'IO 11/7/2020 18:02:58'!
PASSED!

!testRun: #PortfolioTest #test04MoreThanOneAccountCanBeAddedToAPortfolio stamp: 'IO 11/7/2020 18:02:58'!
PASSED!

!testRun: #PortfolioTest #test05 stamp: 'IO 11/7/2020 18:02:58'!
PASSED!

!testRun: #PortfolioTest #test06 stamp: 'IO 11/7/2020 18:02:58'!
PASSED!

!testRun: #PortfolioTest #test07 stamp: 'IO 11/7/2020 18:02:58'!
PASSED!

!testRun: #PortfolioTest #test08 stamp: 'IO 11/7/2020 18:02:58'!
PASSED!

!testRun: #PortfolioTest #test09 stamp: 'IO 11/7/2020 18:02:58'!
PASSED!

!testRun: #PortfolioTest #test10 stamp: 'IO 11/7/2020 18:02:58'!
FAILURE!

!testRun: #PortfolioTest #test11 stamp: 'IO 11/7/2020 18:02:58'!
FAILURE!

!testRun: #PortfolioTest #test12 stamp: 'IO 11/7/2020 18:02:58'!
FAILURE!

!testRun: #PortfolioTest #test13 stamp: 'IO 11/7/2020 18:02:58'!
FAILURE!

!testRun: #PortfolioTest #test14 stamp: 'IO 11/7/2020 18:02:58'!
FAILURE!

!testRun: #PortfolioTest #test15 stamp: 'IO 11/7/2020 18:02:58'!
FAILURE!

!testRun: #PortfolioTest #test16 stamp: 'IO 11/7/2020 18:02:58'!
FAILURE!

!testRun: #PortfolioTest #test17 stamp: 'IO 11/7/2020 18:02:58'!
FAILURE!

!testRun: #PortfolioTest #test18 stamp: 'IO 11/7/2020 18:02:58'!
FAILURE!

!testRun: #PortfolioTest #test19 stamp: 'IO 11/7/2020 18:02:58'!
FAILURE!

!testRun: #PortfolioTest #test20 stamp: 'IO 11/7/2020 18:02:58'!
PASSED!

!testRun: #PortfolioTest #test20 stamp: 'IO 11/7/2020 18:04:08'!
PASSED!

!testRun: #PortfolioTest #test01AnAccountCanBeAddedToAPortfolio stamp: 'IO 11/7/2020 18:04:08'!
PASSED!

!testRun: #PortfolioTest #test02APortfolioHasNoAccountsInitially stamp: 'IO 11/7/2020 18:04:08'!
PASSED!

!testRun: #PortfolioTest #test03APortfolioDoesNotHaveMoreAccountsThanAdded stamp: 'IO 11/7/2020 18:04:08'!
PASSED!

!testRun: #PortfolioTest #test04MoreThanOneAccountCanBeAddedToAPortfolio stamp: 'IO 11/7/2020 18:04:08'!
PASSED!

!testRun: #PortfolioTest #test05 stamp: 'IO 11/7/2020 18:04:08'!
PASSED!

!testRun: #PortfolioTest #test06 stamp: 'IO 11/7/2020 18:04:08'!
PASSED!

!testRun: #PortfolioTest #test07 stamp: 'IO 11/7/2020 18:04:08'!
PASSED!

!testRun: #PortfolioTest #test08 stamp: 'IO 11/7/2020 18:04:08'!
PASSED!

!testRun: #PortfolioTest #test09 stamp: 'IO 11/7/2020 18:04:08'!
PASSED!

!testRun: #PortfolioTest #test10 stamp: 'IO 11/7/2020 18:04:08'!
FAILURE!

!testRun: #PortfolioTest #test11 stamp: 'IO 11/7/2020 18:04:08'!
FAILURE!

!testRun: #PortfolioTest #test12 stamp: 'IO 11/7/2020 18:04:08'!
FAILURE!

!testRun: #PortfolioTest #test13 stamp: 'IO 11/7/2020 18:04:08'!
FAILURE!

!testRun: #PortfolioTest #test14 stamp: 'IO 11/7/2020 18:04:08'!
FAILURE!

!testRun: #PortfolioTest #test15 stamp: 'IO 11/7/2020 18:04:08'!
FAILURE!

!testRun: #PortfolioTest #test16 stamp: 'IO 11/7/2020 18:04:08'!
FAILURE!

!testRun: #PortfolioTest #test17 stamp: 'IO 11/7/2020 18:04:08'!
FAILURE!

!testRun: #PortfolioTest #test18 stamp: 'IO 11/7/2020 18:04:08'!
FAILURE!

!testRun: #PortfolioTest #test19 stamp: 'IO 11/7/2020 18:04:08'!
FAILURE!

!testRun: #PortfolioTest #test20 stamp: 'IO 11/7/2020 18:04:08'!
PASSED!

!testRun: #PortfolioTest #test10 stamp: 'IO 11/7/2020 18:04:25'!
FAILURE!

!testRun: #PortfolioTest #test01AnAccountCanBeAddedToAPortfolio stamp: 'IO 11/7/2020 18:05:22'!
PASSED!

!testRun: #PortfolioTest #test02APortfolioHasNoAccountsInitially stamp: 'IO 11/7/2020 18:05:22'!
PASSED!

!testRun: #PortfolioTest #test03APortfolioDoesNotHaveMoreAccountsThanAdded stamp: 'IO 11/7/2020 18:05:22'!
PASSED!

!testRun: #PortfolioTest #test04MoreThanOneAccountCanBeAddedToAPortfolio stamp: 'IO 11/7/2020 18:05:22'!
PASSED!

!testRun: #PortfolioTest #test05 stamp: 'IO 11/7/2020 18:05:22'!
PASSED!

!testRun: #PortfolioTest #test06 stamp: 'IO 11/7/2020 18:05:22'!
PASSED!

!testRun: #PortfolioTest #test07 stamp: 'IO 11/7/2020 18:05:22'!
PASSED!

!testRun: #PortfolioTest #test08 stamp: 'IO 11/7/2020 18:05:22'!
PASSED!

!testRun: #PortfolioTest #test09 stamp: 'IO 11/7/2020 18:05:22'!
PASSED!

!testRun: #PortfolioTest #test10 stamp: 'IO 11/7/2020 18:05:22'!
FAILURE!

!testRun: #PortfolioTest #test11 stamp: 'IO 11/7/2020 18:05:22'!
FAILURE!

!testRun: #PortfolioTest #test12 stamp: 'IO 11/7/2020 18:05:22'!
FAILURE!

!testRun: #PortfolioTest #test13 stamp: 'IO 11/7/2020 18:05:22'!
FAILURE!

!testRun: #PortfolioTest #test14 stamp: 'IO 11/7/2020 18:05:22'!
FAILURE!

!testRun: #PortfolioTest #test15 stamp: 'IO 11/7/2020 18:05:22'!
FAILURE!

!testRun: #PortfolioTest #test16 stamp: 'IO 11/7/2020 18:05:22'!
FAILURE!

!testRun: #PortfolioTest #test17 stamp: 'IO 11/7/2020 18:05:22'!
FAILURE!

!testRun: #PortfolioTest #test18 stamp: 'IO 11/7/2020 18:05:22'!
FAILURE!

!testRun: #PortfolioTest #test19 stamp: 'IO 11/7/2020 18:05:22'!
FAILURE!

!testRun: #PortfolioTest #test20 stamp: 'IO 11/7/2020 18:05:22'!
PASSED!

!methodRemoval: Portfolio #accounts stamp: 'IO 11/7/2020 18:07:31'!
accounts
	^accounts copy.!
!PortfolioTest methodsFor: 'errors adding portfolios by parents' stamp: 'IO 11/7/2020 18:07:39' prior: 50873781!
test20
	
	"un portfolio expone sus cuenta"
	
	| portfolio1 account1 account2 |
	
	portfolio1 := Portfolio new.
	account1 := ReceptiveAccount new.
	account2 := ReceptiveAccount new.

	portfolio1 addAccount: account1.
	portfolio1 addAccount: account2.	

	"self assert: (portfolio1 accounts) equals: (OrderedCollection with: account1 with: account2)."

	
! !

!testRun: #PortfolioTest #test20 stamp: 'IO 11/7/2020 18:07:39'!
PASSED!

!testRun: #PortfolioTest #test01AnAccountCanBeAddedToAPortfolio stamp: 'IO 11/7/2020 18:07:39'!
PASSED!

!testRun: #PortfolioTest #test02APortfolioHasNoAccountsInitially stamp: 'IO 11/7/2020 18:07:39'!
PASSED!

!testRun: #PortfolioTest #test03APortfolioDoesNotHaveMoreAccountsThanAdded stamp: 'IO 11/7/2020 18:07:39'!
PASSED!

!testRun: #PortfolioTest #test04MoreThanOneAccountCanBeAddedToAPortfolio stamp: 'IO 11/7/2020 18:07:39'!
PASSED!

!testRun: #PortfolioTest #test05 stamp: 'IO 11/7/2020 18:07:39'!
PASSED!

!testRun: #PortfolioTest #test06 stamp: 'IO 11/7/2020 18:07:39'!
PASSED!

!testRun: #PortfolioTest #test07 stamp: 'IO 11/7/2020 18:07:39'!
PASSED!

!testRun: #PortfolioTest #test08 stamp: 'IO 11/7/2020 18:07:39'!
PASSED!

!testRun: #PortfolioTest #test09 stamp: 'IO 11/7/2020 18:07:39'!
PASSED!

!testRun: #PortfolioTest #test10 stamp: 'IO 11/7/2020 18:07:39'!
FAILURE!

!testRun: #PortfolioTest #test11 stamp: 'IO 11/7/2020 18:07:39'!
FAILURE!

!testRun: #PortfolioTest #test12 stamp: 'IO 11/7/2020 18:07:39'!
FAILURE!

!testRun: #PortfolioTest #test13 stamp: 'IO 11/7/2020 18:07:39'!
FAILURE!

!testRun: #PortfolioTest #test14 stamp: 'IO 11/7/2020 18:07:39'!
FAILURE!

!testRun: #PortfolioTest #test15 stamp: 'IO 11/7/2020 18:07:39'!
FAILURE!

!testRun: #PortfolioTest #test16 stamp: 'IO 11/7/2020 18:07:39'!
FAILURE!

!testRun: #PortfolioTest #test17 stamp: 'IO 11/7/2020 18:07:39'!
FAILURE!

!testRun: #PortfolioTest #test18 stamp: 'IO 11/7/2020 18:07:39'!
FAILURE!

!testRun: #PortfolioTest #test19 stamp: 'IO 11/7/2020 18:07:39'!
FAILURE!

!testRun: #PortfolioTest #test20 stamp: 'IO 11/7/2020 18:07:39'!
PASSED!

!methodRemoval: Portfolio #error: stamp: 'IO 11/7/2020 18:07:58'!
error: aString 
	^accounts copy.
!

!testRun: #PortfolioTest #test01AnAccountCanBeAddedToAPortfolio stamp: 'IO 11/7/2020 18:08:00'!
PASSED!

!testRun: #PortfolioTest #test02APortfolioHasNoAccountsInitially stamp: 'IO 11/7/2020 18:08:00'!
PASSED!

!testRun: #PortfolioTest #test03APortfolioDoesNotHaveMoreAccountsThanAdded stamp: 'IO 11/7/2020 18:08:00'!
PASSED!

!testRun: #PortfolioTest #test04MoreThanOneAccountCanBeAddedToAPortfolio stamp: 'IO 11/7/2020 18:08:00'!
PASSED!

!testRun: #PortfolioTest #test05 stamp: 'IO 11/7/2020 18:08:00'!
PASSED!

!testRun: #PortfolioTest #test06 stamp: 'IO 11/7/2020 18:08:00'!
PASSED!

!testRun: #PortfolioTest #test07 stamp: 'IO 11/7/2020 18:08:00'!
PASSED!

!testRun: #PortfolioTest #test08 stamp: 'IO 11/7/2020 18:08:00'!
PASSED!

!testRun: #PortfolioTest #test09 stamp: 'IO 11/7/2020 18:08:00'!
PASSED!

!testRun: #PortfolioTest #test10 stamp: 'IO 11/7/2020 18:08:00'!
PASSED!

!testRun: #PortfolioTest #test11 stamp: 'IO 11/7/2020 18:08:00'!
PASSED!

!testRun: #PortfolioTest #test12 stamp: 'IO 11/7/2020 18:08:00'!
PASSED!

!testRun: #PortfolioTest #test13 stamp: 'IO 11/7/2020 18:08:00'!
PASSED!

!testRun: #PortfolioTest #test14 stamp: 'IO 11/7/2020 18:08:00'!
PASSED!

!testRun: #PortfolioTest #test15 stamp: 'IO 11/7/2020 18:08:00'!
PASSED!

!testRun: #PortfolioTest #test16 stamp: 'IO 11/7/2020 18:08:00'!
PASSED!

!testRun: #PortfolioTest #test17 stamp: 'IO 11/7/2020 18:08:00'!
PASSED!

!testRun: #PortfolioTest #test18 stamp: 'IO 11/7/2020 18:08:00'!
PASSED!

!testRun: #PortfolioTest #test19 stamp: 'IO 11/7/2020 18:08:00'!
PASSED!

!testRun: #PortfolioTest #test20 stamp: 'IO 11/7/2020 18:08:00'!
PASSED!
!PortfolioTest methodsFor: 'errors adding portfolios by parents' stamp: 'IO 11/7/2020 18:08:08' prior: 50874013!
test20
	
	"un portfolio expone sus cuenta"
	
	| portfolio1 account1 account2 |
	
	portfolio1 := Portfolio new.
	account1 := ReceptiveAccount new.
	account2 := ReceptiveAccount new.

	portfolio1 addAccount: account1.
	portfolio1 addAccount: account2.	

	self assert: (portfolio1 accounts) equals: (OrderedCollection with: account1 with: account2).

	
! !

!testRun: #PortfolioTest #test20 stamp: 'IO 11/7/2020 18:08:09'!
ERROR!
!Portfolio methodsFor: 'accessing' stamp: 'IO 11/7/2020 18:08:28'!
accounts
	self shouldBeImplemented.
	^accounts! !
!Portfolio methodsFor: 'accessing' stamp: 'IO 11/7/2020 18:08:33' prior: 50874152!
accounts
	^accounts copy.! !

!testRun: #PortfolioTest #test20 stamp: 'IO 11/7/2020 18:08:37'!
PASSED!

!testRun: #PortfolioTest #test01AnAccountCanBeAddedToAPortfolio stamp: 'IO 11/7/2020 18:08:37'!
PASSED!

!testRun: #PortfolioTest #test02APortfolioHasNoAccountsInitially stamp: 'IO 11/7/2020 18:08:37'!
PASSED!

!testRun: #PortfolioTest #test03APortfolioDoesNotHaveMoreAccountsThanAdded stamp: 'IO 11/7/2020 18:08:37'!
PASSED!

!testRun: #PortfolioTest #test04MoreThanOneAccountCanBeAddedToAPortfolio stamp: 'IO 11/7/2020 18:08:37'!
PASSED!

!testRun: #PortfolioTest #test05 stamp: 'IO 11/7/2020 18:08:37'!
PASSED!

!testRun: #PortfolioTest #test06 stamp: 'IO 11/7/2020 18:08:37'!
PASSED!

!testRun: #PortfolioTest #test07 stamp: 'IO 11/7/2020 18:08:37'!
PASSED!

!testRun: #PortfolioTest #test08 stamp: 'IO 11/7/2020 18:08:37'!
PASSED!

!testRun: #PortfolioTest #test09 stamp: 'IO 11/7/2020 18:08:37'!
PASSED!

!testRun: #PortfolioTest #test10 stamp: 'IO 11/7/2020 18:08:37'!
PASSED!

!testRun: #PortfolioTest #test11 stamp: 'IO 11/7/2020 18:08:37'!
PASSED!

!testRun: #PortfolioTest #test12 stamp: 'IO 11/7/2020 18:08:37'!
PASSED!

!testRun: #PortfolioTest #test13 stamp: 'IO 11/7/2020 18:08:37'!
PASSED!

!testRun: #PortfolioTest #test14 stamp: 'IO 11/7/2020 18:08:37'!
PASSED!

!testRun: #PortfolioTest #test15 stamp: 'IO 11/7/2020 18:08:37'!
PASSED!

!testRun: #PortfolioTest #test16 stamp: 'IO 11/7/2020 18:08:37'!
PASSED!

!testRun: #PortfolioTest #test17 stamp: 'IO 11/7/2020 18:08:37'!
PASSED!

!testRun: #PortfolioTest #test18 stamp: 'IO 11/7/2020 18:08:37'!
PASSED!

!testRun: #PortfolioTest #test19 stamp: 'IO 11/7/2020 18:08:37'!
PASSED!

!testRun: #PortfolioTest #test20 stamp: 'IO 11/7/2020 18:08:37'!
PASSED!

!testRun: #PortfolioTest #test20 stamp: 'IO 11/7/2020 18:08:40'!
PASSED!

!testRun: #PortfolioTest #test01AnAccountCanBeAddedToAPortfolio stamp: 'IO 11/7/2020 18:08:40'!
PASSED!

!testRun: #PortfolioTest #test02APortfolioHasNoAccountsInitially stamp: 'IO 11/7/2020 18:08:40'!
PASSED!

!testRun: #PortfolioTest #test03APortfolioDoesNotHaveMoreAccountsThanAdded stamp: 'IO 11/7/2020 18:08:40'!
PASSED!

!testRun: #PortfolioTest #test04MoreThanOneAccountCanBeAddedToAPortfolio stamp: 'IO 11/7/2020 18:08:40'!
PASSED!

!testRun: #PortfolioTest #test05 stamp: 'IO 11/7/2020 18:08:40'!
PASSED!

!testRun: #PortfolioTest #test06 stamp: 'IO 11/7/2020 18:08:40'!
PASSED!

!testRun: #PortfolioTest #test07 stamp: 'IO 11/7/2020 18:08:40'!
PASSED!

!testRun: #PortfolioTest #test08 stamp: 'IO 11/7/2020 18:08:40'!
PASSED!

!testRun: #PortfolioTest #test09 stamp: 'IO 11/7/2020 18:08:40'!
PASSED!

!testRun: #PortfolioTest #test10 stamp: 'IO 11/7/2020 18:08:40'!
PASSED!

!testRun: #PortfolioTest #test11 stamp: 'IO 11/7/2020 18:08:40'!
PASSED!

!testRun: #PortfolioTest #test12 stamp: 'IO 11/7/2020 18:08:40'!
PASSED!

!testRun: #PortfolioTest #test13 stamp: 'IO 11/7/2020 18:08:40'!
PASSED!

!testRun: #PortfolioTest #test14 stamp: 'IO 11/7/2020 18:08:40'!
PASSED!

!testRun: #PortfolioTest #test15 stamp: 'IO 11/7/2020 18:08:40'!
PASSED!

!testRun: #PortfolioTest #test16 stamp: 'IO 11/7/2020 18:08:40'!
PASSED!

!testRun: #PortfolioTest #test17 stamp: 'IO 11/7/2020 18:08:40'!
PASSED!

!testRun: #PortfolioTest #test18 stamp: 'IO 11/7/2020 18:08:40'!
PASSED!

!testRun: #PortfolioTest #test19 stamp: 'IO 11/7/2020 18:08:40'!
PASSED!

!testRun: #PortfolioTest #test20 stamp: 'IO 11/7/2020 18:08:40'!
PASSED!
!PortfolioTest methodsFor: 'errors adding portfolios by parents' stamp: 'IO 11/7/2020 18:08:47' prior: 50874136!
test20
	
	"un portfolio expone sus cuentas"
	
	| portfolio1 account1 account2 |
	
	portfolio1 := Portfolio new.
	account1 := ReceptiveAccount new.
	account2 := ReceptiveAccount new.

	portfolio1 addAccount: account1.
	portfolio1 addAccount: account2.	

	self assert: (portfolio1 accounts) equals: (OrderedCollection with: account1 with: account2).

	
! !

!testRun: #PortfolioTest #test20 stamp: 'IO 11/7/2020 18:08:48'!
PASSED!

!testRun: #PortfolioTest #test01AnAccountCanBeAddedToAPortfolio stamp: 'IO 11/7/2020 18:08:48'!
PASSED!

!testRun: #PortfolioTest #test02APortfolioHasNoAccountsInitially stamp: 'IO 11/7/2020 18:08:48'!
PASSED!

!testRun: #PortfolioTest #test03APortfolioDoesNotHaveMoreAccountsThanAdded stamp: 'IO 11/7/2020 18:08:48'!
PASSED!

!testRun: #PortfolioTest #test04MoreThanOneAccountCanBeAddedToAPortfolio stamp: 'IO 11/7/2020 18:08:48'!
PASSED!

!testRun: #PortfolioTest #test05 stamp: 'IO 11/7/2020 18:08:48'!
PASSED!

!testRun: #PortfolioTest #test06 stamp: 'IO 11/7/2020 18:08:48'!
PASSED!

!testRun: #PortfolioTest #test07 stamp: 'IO 11/7/2020 18:08:48'!
PASSED!

!testRun: #PortfolioTest #test08 stamp: 'IO 11/7/2020 18:08:48'!
PASSED!

!testRun: #PortfolioTest #test09 stamp: 'IO 11/7/2020 18:08:48'!
PASSED!

!testRun: #PortfolioTest #test10 stamp: 'IO 11/7/2020 18:08:48'!
PASSED!

!testRun: #PortfolioTest #test11 stamp: 'IO 11/7/2020 18:08:48'!
PASSED!

!testRun: #PortfolioTest #test12 stamp: 'IO 11/7/2020 18:08:48'!
PASSED!

!testRun: #PortfolioTest #test13 stamp: 'IO 11/7/2020 18:08:48'!
PASSED!

!testRun: #PortfolioTest #test14 stamp: 'IO 11/7/2020 18:08:48'!
PASSED!

!testRun: #PortfolioTest #test15 stamp: 'IO 11/7/2020 18:08:48'!
PASSED!

!testRun: #PortfolioTest #test16 stamp: 'IO 11/7/2020 18:08:48'!
PASSED!

!testRun: #PortfolioTest #test17 stamp: 'IO 11/7/2020 18:08:48'!
PASSED!

!testRun: #PortfolioTest #test18 stamp: 'IO 11/7/2020 18:08:48'!
PASSED!

!testRun: #PortfolioTest #test19 stamp: 'IO 11/7/2020 18:08:48'!
PASSED!

!testRun: #PortfolioTest #test20 stamp: 'IO 11/7/2020 18:08:48'!
PASSED!
!PortfolioTest methodsFor: 'accounts' stamp: 'IO 11/7/2020 18:09:57'!
test21
	
	"un portfolio expone las cuentas de sus hijos"
	
	| portfolio1 portfolio2 account1 account2 |
	
	portfolio1 := Portfolio new.
	portfolio2 := Portfolio new.
	account1 := ReceptiveAccount new.
	account2 := ReceptiveAccount new.
	
	portfolio1 addPortfolio: portfolio2.

	portfolio2 addAccount: account1.
	portfolio2 addAccount: account2.	

	self assert: (portfolio2 accounts) equals: (OrderedCollection with: account1 with: account2).

	
! !

!testRun: #PortfolioTest #test21 stamp: 'IO 11/7/2020 18:10:02'!
PASSED!

!testRun: #PortfolioTest #test01AnAccountCanBeAddedToAPortfolio stamp: 'IO 11/7/2020 18:10:02'!
PASSED!

!testRun: #PortfolioTest #test02APortfolioHasNoAccountsInitially stamp: 'IO 11/7/2020 18:10:02'!
PASSED!

!testRun: #PortfolioTest #test03APortfolioDoesNotHaveMoreAccountsThanAdded stamp: 'IO 11/7/2020 18:10:02'!
PASSED!

!testRun: #PortfolioTest #test04MoreThanOneAccountCanBeAddedToAPortfolio stamp: 'IO 11/7/2020 18:10:02'!
PASSED!

!testRun: #PortfolioTest #test05 stamp: 'IO 11/7/2020 18:10:02'!
PASSED!

!testRun: #PortfolioTest #test06 stamp: 'IO 11/7/2020 18:10:02'!
PASSED!

!testRun: #PortfolioTest #test07 stamp: 'IO 11/7/2020 18:10:02'!
PASSED!

!testRun: #PortfolioTest #test08 stamp: 'IO 11/7/2020 18:10:02'!
PASSED!

!testRun: #PortfolioTest #test09 stamp: 'IO 11/7/2020 18:10:02'!
PASSED!

!testRun: #PortfolioTest #test10 stamp: 'IO 11/7/2020 18:10:02'!
PASSED!

!testRun: #PortfolioTest #test11 stamp: 'IO 11/7/2020 18:10:02'!
PASSED!

!testRun: #PortfolioTest #test12 stamp: 'IO 11/7/2020 18:10:02'!
PASSED!

!testRun: #PortfolioTest #test13 stamp: 'IO 11/7/2020 18:10:02'!
PASSED!

!testRun: #PortfolioTest #test14 stamp: 'IO 11/7/2020 18:10:02'!
PASSED!

!testRun: #PortfolioTest #test15 stamp: 'IO 11/7/2020 18:10:02'!
PASSED!

!testRun: #PortfolioTest #test16 stamp: 'IO 11/7/2020 18:10:02'!
PASSED!

!testRun: #PortfolioTest #test17 stamp: 'IO 11/7/2020 18:10:02'!
PASSED!

!testRun: #PortfolioTest #test18 stamp: 'IO 11/7/2020 18:10:02'!
PASSED!

!testRun: #PortfolioTest #test19 stamp: 'IO 11/7/2020 18:10:02'!
PASSED!

!testRun: #PortfolioTest #test20 stamp: 'IO 11/7/2020 18:10:02'!
PASSED!

!testRun: #PortfolioTest #test21 stamp: 'IO 11/7/2020 18:10:02'!
PASSED!
!PortfolioTest methodsFor: 'accounts' stamp: 'IO 11/7/2020 18:10:15' prior: 50874335!
test21
	
	"un portfolio expone las cuentas de sus hijos"
	
	| portfolio1 portfolio2 account1 account2 |
	
	portfolio1 := Portfolio new.
	portfolio2 := Portfolio new.
	account1 := ReceptiveAccount new.
	account2 := ReceptiveAccount new.
	
	portfolio1 addPortfolio: portfolio2.

	portfolio1 addAccount: account1.
	portfolio1 addAccount: account2.	

	self assert: (portfolio2 accounts) equals: (OrderedCollection with: account1 with: account2).

	
! !
!PortfolioTest methodsFor: 'accounts' stamp: 'IO 11/7/2020 18:10:24' prior: 50874408!
test21
	
	"un portfolio expone las cuentas de sus hijos"
	
	| portfolio1 portfolio2 account1 account2 |
	
	portfolio1 := Portfolio new.
	portfolio2 := Portfolio new.
	account1 := ReceptiveAccount new.
	account2 := ReceptiveAccount new.
	
	portfolio1 addPortfolio: portfolio2.

	portfolio2 addAccount: account1.
	portfolio2 addAccount: account2.	

	self assert: (portfolio1 accounts) equals: (OrderedCollection with: account1 with: account2).

	
! !
!PortfolioTest methodsFor: 'accounts' stamp: 'IO 11/7/2020 18:10:30' prior: 50874425!
test21
	
	"un portfolio expone las cuentas de sus hijos"
	
	| portfolio1 portfolio2 account1 account2 |
	
	portfolio1 := Portfolio new.
	portfolio2 := Portfolio new.
	account1 := ReceptiveAccount new.
	account2 := ReceptiveAccount new.
	
	portfolio2 addAccount: account1.
	portfolio2 addAccount: account2.	
	portfolio1 addPortfolio: portfolio2.


	self assert: (portfolio1 accounts) equals: (OrderedCollection with: account1 with: account2).

	
! !
!PortfolioTest methodsFor: 'accounts' stamp: 'IO 11/7/2020 18:10:31' prior: 50874442!
test21
	
	"un portfolio expone las cuentas de sus hijos"
	
	| portfolio1 portfolio2 account1 account2 |
	
	portfolio1 := Portfolio new.
	portfolio2 := Portfolio new.
	account1 := ReceptiveAccount new.
	account2 := ReceptiveAccount new.
	
	portfolio2 addAccount: account1.
	portfolio2 addAccount: account2.	
	portfolio1 addPortfolio: portfolio2.

	self assert: (portfolio1 accounts) equals: (OrderedCollection with: account1 with: account2).

	
! !

!testRun: #PortfolioTest #test21 stamp: 'IO 11/7/2020 18:10:33'!
FAILURE!
!Portfolio methodsFor: 'accessing' stamp: 'IO 11/7/2020 18:12:12' prior: 50874157!
accounts
	| allAccounts |
	allAccounts := accounts copy.
	fatherPortfolios do: [ :fatherPortfolio | allAccounts ].! !

!testRun: #PortfolioTest #test01AnAccountCanBeAddedToAPortfolio stamp: 'IO 11/7/2020 18:12:17'!
PASSED!

!testRun: #PortfolioTest #test02APortfolioHasNoAccountsInitially stamp: 'IO 11/7/2020 18:12:17'!
PASSED!

!testRun: #PortfolioTest #test03APortfolioDoesNotHaveMoreAccountsThanAdded stamp: 'IO 11/7/2020 18:12:17'!
PASSED!

!testRun: #PortfolioTest #test04MoreThanOneAccountCanBeAddedToAPortfolio stamp: 'IO 11/7/2020 18:12:17'!
PASSED!

!testRun: #PortfolioTest #test05 stamp: 'IO 11/7/2020 18:12:17'!
PASSED!

!testRun: #PortfolioTest #test06 stamp: 'IO 11/7/2020 18:12:17'!
PASSED!

!testRun: #PortfolioTest #test07 stamp: 'IO 11/7/2020 18:12:17'!
PASSED!

!testRun: #PortfolioTest #test08 stamp: 'IO 11/7/2020 18:12:17'!
PASSED!

!testRun: #PortfolioTest #test09 stamp: 'IO 11/7/2020 18:12:17'!
PASSED!

!testRun: #PortfolioTest #test10 stamp: 'IO 11/7/2020 18:12:17'!
PASSED!

!testRun: #PortfolioTest #test11 stamp: 'IO 11/7/2020 18:12:17'!
PASSED!

!testRun: #PortfolioTest #test12 stamp: 'IO 11/7/2020 18:12:17'!
PASSED!

!testRun: #PortfolioTest #test13 stamp: 'IO 11/7/2020 18:12:17'!
PASSED!

!testRun: #PortfolioTest #test14 stamp: 'IO 11/7/2020 18:12:17'!
PASSED!

!testRun: #PortfolioTest #test15 stamp: 'IO 11/7/2020 18:12:17'!
PASSED!

!testRun: #PortfolioTest #test16 stamp: 'IO 11/7/2020 18:12:17'!
PASSED!

!testRun: #PortfolioTest #test17 stamp: 'IO 11/7/2020 18:12:17'!
PASSED!

!testRun: #PortfolioTest #test18 stamp: 'IO 11/7/2020 18:12:17'!
PASSED!

!testRun: #PortfolioTest #test19 stamp: 'IO 11/7/2020 18:12:17'!
PASSED!

!testRun: #PortfolioTest #test20 stamp: 'IO 11/7/2020 18:12:17'!
FAILURE!

!testRun: #PortfolioTest #test21 stamp: 'IO 11/7/2020 18:12:17'!
FAILURE!

!testRun: #PortfolioTest #test20 stamp: 'IO 11/7/2020 18:12:23'!
FAILURE!

accounts!

accounts!

self addAllLast:(OrderedCollection with: 4).!
!Portfolio methodsFor: 'accessing' stamp: 'IO 11/7/2020 18:15:01' prior: 50874478!
accounts
	| allAccounts |
	allAccounts := accounts copy.
	fatherPortfolios do: [ :fatherPortfolio | allAccounts addAll: fatherPortfolio accounts ].! !

!testRun: #PortfolioTest #test01AnAccountCanBeAddedToAPortfolio stamp: 'IO 11/7/2020 18:15:01'!
PASSED!

!testRun: #PortfolioTest #test02APortfolioHasNoAccountsInitially stamp: 'IO 11/7/2020 18:15:01'!
PASSED!

!testRun: #PortfolioTest #test03APortfolioDoesNotHaveMoreAccountsThanAdded stamp: 'IO 11/7/2020 18:15:01'!
PASSED!

!testRun: #PortfolioTest #test04MoreThanOneAccountCanBeAddedToAPortfolio stamp: 'IO 11/7/2020 18:15:01'!
PASSED!

!testRun: #PortfolioTest #test05 stamp: 'IO 11/7/2020 18:15:01'!
PASSED!

!testRun: #PortfolioTest #test06 stamp: 'IO 11/7/2020 18:15:01'!
PASSED!

!testRun: #PortfolioTest #test07 stamp: 'IO 11/7/2020 18:15:01'!
PASSED!

!testRun: #PortfolioTest #test08 stamp: 'IO 11/7/2020 18:15:01'!
PASSED!

!testRun: #PortfolioTest #test09 stamp: 'IO 11/7/2020 18:15:01'!
PASSED!

!testRun: #PortfolioTest #test10 stamp: 'IO 11/7/2020 18:15:01'!
PASSED!

!testRun: #PortfolioTest #test11 stamp: 'IO 11/7/2020 18:15:01'!
PASSED!

!testRun: #PortfolioTest #test12 stamp: 'IO 11/7/2020 18:15:01'!
PASSED!

!testRun: #PortfolioTest #test13 stamp: 'IO 11/7/2020 18:15:01'!
PASSED!

!testRun: #PortfolioTest #test14 stamp: 'IO 11/7/2020 18:15:01'!
PASSED!

!testRun: #PortfolioTest #test15 stamp: 'IO 11/7/2020 18:15:01'!
PASSED!

!testRun: #PortfolioTest #test16 stamp: 'IO 11/7/2020 18:15:01'!
PASSED!

!testRun: #PortfolioTest #test17 stamp: 'IO 11/7/2020 18:15:01'!
PASSED!

!testRun: #PortfolioTest #test18 stamp: 'IO 11/7/2020 18:15:01'!
PASSED!

!testRun: #PortfolioTest #test19 stamp: 'IO 11/7/2020 18:15:01'!
PASSED!

!testRun: #PortfolioTest #test20 stamp: 'IO 11/7/2020 18:15:01'!
FAILURE!

!testRun: #PortfolioTest #test21 stamp: 'IO 11/7/2020 18:15:01'!
FAILURE!
!Portfolio methodsFor: 'accessing' stamp: 'IO 11/7/2020 18:15:10' prior: 50874542!
accounts
	| allAccounts |
	allAccounts := accounts copy.
	fatherPortfolios do: [ :fatherPortfolio | allAccounts addAll: fatherPortfolio accounts ].
	^allAccounts.
! !

!testRun: #PortfolioTest #test01AnAccountCanBeAddedToAPortfolio stamp: 'IO 11/7/2020 18:15:10'!
PASSED!

!testRun: #PortfolioTest #test02APortfolioHasNoAccountsInitially stamp: 'IO 11/7/2020 18:15:10'!
PASSED!

!testRun: #PortfolioTest #test03APortfolioDoesNotHaveMoreAccountsThanAdded stamp: 'IO 11/7/2020 18:15:11'!
PASSED!

!testRun: #PortfolioTest #test04MoreThanOneAccountCanBeAddedToAPortfolio stamp: 'IO 11/7/2020 18:15:11'!
PASSED!

!testRun: #PortfolioTest #test05 stamp: 'IO 11/7/2020 18:15:11'!
PASSED!

!testRun: #PortfolioTest #test06 stamp: 'IO 11/7/2020 18:15:11'!
PASSED!

!testRun: #PortfolioTest #test07 stamp: 'IO 11/7/2020 18:15:11'!
PASSED!

!testRun: #PortfolioTest #test08 stamp: 'IO 11/7/2020 18:15:11'!
PASSED!

!testRun: #PortfolioTest #test09 stamp: 'IO 11/7/2020 18:15:11'!
PASSED!

!testRun: #PortfolioTest #test10 stamp: 'IO 11/7/2020 18:15:11'!
PASSED!

!testRun: #PortfolioTest #test11 stamp: 'IO 11/7/2020 18:15:11'!
PASSED!

!testRun: #PortfolioTest #test12 stamp: 'IO 11/7/2020 18:15:11'!
PASSED!

!testRun: #PortfolioTest #test13 stamp: 'IO 11/7/2020 18:15:11'!
PASSED!

!testRun: #PortfolioTest #test14 stamp: 'IO 11/7/2020 18:15:11'!
PASSED!

!testRun: #PortfolioTest #test15 stamp: 'IO 11/7/2020 18:15:11'!
PASSED!

!testRun: #PortfolioTest #test16 stamp: 'IO 11/7/2020 18:15:11'!
PASSED!

!testRun: #PortfolioTest #test17 stamp: 'IO 11/7/2020 18:15:11'!
PASSED!

!testRun: #PortfolioTest #test18 stamp: 'IO 11/7/2020 18:15:11'!
PASSED!

!testRun: #PortfolioTest #test19 stamp: 'IO 11/7/2020 18:15:11'!
PASSED!

!testRun: #PortfolioTest #test20 stamp: 'IO 11/7/2020 18:15:11'!
PASSED!

!testRun: #PortfolioTest #test21 stamp: 'IO 11/7/2020 18:15:11'!
FAILURE!

!testRun: #PortfolioTest #test21 stamp: 'IO 11/7/2020 18:15:11'!
FAILURE!

!testRun: #PortfolioTest #test01AnAccountCanBeAddedToAPortfolio stamp: 'IO 11/7/2020 18:15:20'!
PASSED!

!testRun: #PortfolioTest #test02APortfolioHasNoAccountsInitially stamp: 'IO 11/7/2020 18:15:20'!
PASSED!

!testRun: #PortfolioTest #test03APortfolioDoesNotHaveMoreAccountsThanAdded stamp: 'IO 11/7/2020 18:15:20'!
PASSED!

!testRun: #PortfolioTest #test04MoreThanOneAccountCanBeAddedToAPortfolio stamp: 'IO 11/7/2020 18:15:20'!
PASSED!

!testRun: #PortfolioTest #test05 stamp: 'IO 11/7/2020 18:15:20'!
PASSED!

!testRun: #PortfolioTest #test06 stamp: 'IO 11/7/2020 18:15:20'!
PASSED!

!testRun: #PortfolioTest #test07 stamp: 'IO 11/7/2020 18:15:20'!
PASSED!

!testRun: #PortfolioTest #test08 stamp: 'IO 11/7/2020 18:15:20'!
PASSED!

!testRun: #PortfolioTest #test09 stamp: 'IO 11/7/2020 18:15:20'!
PASSED!

!testRun: #PortfolioTest #test10 stamp: 'IO 11/7/2020 18:15:20'!
PASSED!

!testRun: #PortfolioTest #test11 stamp: 'IO 11/7/2020 18:15:20'!
PASSED!

!testRun: #PortfolioTest #test12 stamp: 'IO 11/7/2020 18:15:20'!
PASSED!

!testRun: #PortfolioTest #test13 stamp: 'IO 11/7/2020 18:15:20'!
PASSED!

!testRun: #PortfolioTest #test14 stamp: 'IO 11/7/2020 18:15:20'!
PASSED!

!testRun: #PortfolioTest #test15 stamp: 'IO 11/7/2020 18:15:20'!
PASSED!

!testRun: #PortfolioTest #test16 stamp: 'IO 11/7/2020 18:15:20'!
PASSED!

!testRun: #PortfolioTest #test17 stamp: 'IO 11/7/2020 18:15:20'!
PASSED!

!testRun: #PortfolioTest #test18 stamp: 'IO 11/7/2020 18:15:20'!
PASSED!

!testRun: #PortfolioTest #test19 stamp: 'IO 11/7/2020 18:15:20'!
PASSED!

!testRun: #PortfolioTest #test20 stamp: 'IO 11/7/2020 18:15:20'!
PASSED!

!testRun: #PortfolioTest #test21 stamp: 'IO 11/7/2020 18:15:20'!
FAILURE!

!testRun: #PortfolioTest #test21 stamp: 'IO 11/7/2020 18:15:20'!
FAILURE!

!testRun: #PortfolioTest #test01AnAccountCanBeAddedToAPortfolio stamp: 'IO 11/7/2020 18:15:32'!
PASSED!

!testRun: #PortfolioTest #test02APortfolioHasNoAccountsInitially stamp: 'IO 11/7/2020 18:15:32'!
PASSED!

!testRun: #PortfolioTest #test03APortfolioDoesNotHaveMoreAccountsThanAdded stamp: 'IO 11/7/2020 18:15:32'!
PASSED!

!testRun: #PortfolioTest #test04MoreThanOneAccountCanBeAddedToAPortfolio stamp: 'IO 11/7/2020 18:15:32'!
PASSED!

!testRun: #PortfolioTest #test05 stamp: 'IO 11/7/2020 18:15:32'!
PASSED!

!testRun: #PortfolioTest #test06 stamp: 'IO 11/7/2020 18:15:32'!
PASSED!

!testRun: #PortfolioTest #test07 stamp: 'IO 11/7/2020 18:15:32'!
PASSED!

!testRun: #PortfolioTest #test08 stamp: 'IO 11/7/2020 18:15:32'!
PASSED!

!testRun: #PortfolioTest #test09 stamp: 'IO 11/7/2020 18:15:32'!
PASSED!

!testRun: #PortfolioTest #test10 stamp: 'IO 11/7/2020 18:15:32'!
PASSED!

!testRun: #PortfolioTest #test11 stamp: 'IO 11/7/2020 18:15:32'!
PASSED!

!testRun: #PortfolioTest #test12 stamp: 'IO 11/7/2020 18:15:32'!
PASSED!

!testRun: #PortfolioTest #test13 stamp: 'IO 11/7/2020 18:15:32'!
PASSED!

!testRun: #PortfolioTest #test14 stamp: 'IO 11/7/2020 18:15:32'!
PASSED!

!testRun: #PortfolioTest #test15 stamp: 'IO 11/7/2020 18:15:32'!
PASSED!

!testRun: #PortfolioTest #test16 stamp: 'IO 11/7/2020 18:15:32'!
PASSED!

!testRun: #PortfolioTest #test17 stamp: 'IO 11/7/2020 18:15:32'!
PASSED!

!testRun: #PortfolioTest #test18 stamp: 'IO 11/7/2020 18:15:32'!
PASSED!

!testRun: #PortfolioTest #test19 stamp: 'IO 11/7/2020 18:15:32'!
PASSED!

!testRun: #PortfolioTest #test20 stamp: 'IO 11/7/2020 18:15:32'!
PASSED!

!testRun: #PortfolioTest #test21 stamp: 'IO 11/7/2020 18:15:32'!
FAILURE!

!testRun: #PortfolioTest #test21 stamp: 'IO 11/7/2020 18:15:32'!
FAILURE!
!Portfolio methodsFor: 'accessing' stamp: 'IO 11/7/2020 18:16:33' prior: 50874603!
accounts
	| allAccounts |
	allAccounts := accounts copy.
	portfolios do: [ :portfolio | allAccounts addAll: portfolio accounts ].
	^allAccounts.
! !

!testRun: #PortfolioTest #test01AnAccountCanBeAddedToAPortfolio stamp: 'IO 11/7/2020 18:16:34'!
PASSED!

!testRun: #PortfolioTest #test02APortfolioHasNoAccountsInitially stamp: 'IO 11/7/2020 18:16:34'!
PASSED!

!testRun: #PortfolioTest #test03APortfolioDoesNotHaveMoreAccountsThanAdded stamp: 'IO 11/7/2020 18:16:34'!
PASSED!

!testRun: #PortfolioTest #test04MoreThanOneAccountCanBeAddedToAPortfolio stamp: 'IO 11/7/2020 18:16:34'!
PASSED!

!testRun: #PortfolioTest #test05 stamp: 'IO 11/7/2020 18:16:34'!
PASSED!

!testRun: #PortfolioTest #test06 stamp: 'IO 11/7/2020 18:16:34'!
PASSED!

!testRun: #PortfolioTest #test07 stamp: 'IO 11/7/2020 18:16:34'!
PASSED!

!testRun: #PortfolioTest #test08 stamp: 'IO 11/7/2020 18:16:34'!
PASSED!

!testRun: #PortfolioTest #test09 stamp: 'IO 11/7/2020 18:16:34'!
PASSED!

!testRun: #PortfolioTest #test10 stamp: 'IO 11/7/2020 18:16:34'!
PASSED!

!testRun: #PortfolioTest #test11 stamp: 'IO 11/7/2020 18:16:34'!
PASSED!

!testRun: #PortfolioTest #test12 stamp: 'IO 11/7/2020 18:16:34'!
PASSED!

!testRun: #PortfolioTest #test13 stamp: 'IO 11/7/2020 18:16:34'!
PASSED!

!testRun: #PortfolioTest #test14 stamp: 'IO 11/7/2020 18:16:34'!
PASSED!

!testRun: #PortfolioTest #test15 stamp: 'IO 11/7/2020 18:16:34'!
PASSED!

!testRun: #PortfolioTest #test16 stamp: 'IO 11/7/2020 18:16:34'!
PASSED!

!testRun: #PortfolioTest #test17 stamp: 'IO 11/7/2020 18:16:34'!
PASSED!

!testRun: #PortfolioTest #test18 stamp: 'IO 11/7/2020 18:16:34'!
PASSED!

!testRun: #PortfolioTest #test19 stamp: 'IO 11/7/2020 18:16:34'!
PASSED!

!testRun: #PortfolioTest #test20 stamp: 'IO 11/7/2020 18:16:34'!
PASSED!

!testRun: #PortfolioTest #test21 stamp: 'IO 11/7/2020 18:16:34'!
PASSED!
!PortfolioTest methodsFor: 'accounts' stamp: 'IO 11/7/2020 18:18:56' prior: 50874459!
test21
	
	"un portfolio expone las cuentas de sus hijos"
	
	| portfolio1 portfolio2 portfolio3 account1 account2 account3 |
	
	portfolio1 := Portfolio new.
	portfolio2 := Portfolio new.
	portfolio3 := Portfolio new.
	account1 := ReceptiveAccount new.
	account2 := ReceptiveAccount new.
	account3 := ReceptiveAccount new.	

	portfolio2 addAccount: account1.
	portfolio2 addAccount: account2.	
	portfolio3 addAccount: account3.
	portfolio1 addPortfolio: portfolio2.
	portfolio1 addPortfolio: portfolio3.

	self assert: (portfolio1 accounts) equals: (OrderedCollection with: account1 with: account2 with: account3).

	
! !

!testRun: #PortfolioTest #test21 stamp: 'IO 11/7/2020 18:19:05'!
PASSED!

!testRun: #PortfolioTest #test01AnAccountCanBeAddedToAPortfolio stamp: 'IO 11/7/2020 18:19:05'!
PASSED!

!testRun: #PortfolioTest #test02APortfolioHasNoAccountsInitially stamp: 'IO 11/7/2020 18:19:05'!
PASSED!

!testRun: #PortfolioTest #test03APortfolioDoesNotHaveMoreAccountsThanAdded stamp: 'IO 11/7/2020 18:19:05'!
PASSED!

!testRun: #PortfolioTest #test04MoreThanOneAccountCanBeAddedToAPortfolio stamp: 'IO 11/7/2020 18:19:05'!
PASSED!

!testRun: #PortfolioTest #test05 stamp: 'IO 11/7/2020 18:19:05'!
PASSED!

!testRun: #PortfolioTest #test06 stamp: 'IO 11/7/2020 18:19:05'!
PASSED!

!testRun: #PortfolioTest #test07 stamp: 'IO 11/7/2020 18:19:05'!
PASSED!

!testRun: #PortfolioTest #test08 stamp: 'IO 11/7/2020 18:19:05'!
PASSED!

!testRun: #PortfolioTest #test09 stamp: 'IO 11/7/2020 18:19:05'!
PASSED!

!testRun: #PortfolioTest #test10 stamp: 'IO 11/7/2020 18:19:05'!
PASSED!

!testRun: #PortfolioTest #test11 stamp: 'IO 11/7/2020 18:19:05'!
PASSED!

!testRun: #PortfolioTest #test12 stamp: 'IO 11/7/2020 18:19:05'!
PASSED!

!testRun: #PortfolioTest #test13 stamp: 'IO 11/7/2020 18:19:05'!
PASSED!

!testRun: #PortfolioTest #test14 stamp: 'IO 11/7/2020 18:19:05'!
PASSED!

!testRun: #PortfolioTest #test15 stamp: 'IO 11/7/2020 18:19:05'!
PASSED!

!testRun: #PortfolioTest #test16 stamp: 'IO 11/7/2020 18:19:05'!
PASSED!

!testRun: #PortfolioTest #test17 stamp: 'IO 11/7/2020 18:19:05'!
PASSED!

!testRun: #PortfolioTest #test18 stamp: 'IO 11/7/2020 18:19:05'!
PASSED!

!testRun: #PortfolioTest #test19 stamp: 'IO 11/7/2020 18:19:05'!
PASSED!

!testRun: #PortfolioTest #test20 stamp: 'IO 11/7/2020 18:19:05'!
PASSED!

!testRun: #PortfolioTest #test21 stamp: 'IO 11/7/2020 18:19:05'!
PASSED!

OrderedCollection!
!PortfolioTest methodsFor: 'accounts' stamp: 'IO 11/7/2020 18:21:05' prior: 50874268!
test20
	
	"un portfolio expone sus cuentas"
	
	| portfolio1 account1 account2 |
	
	portfolio1 := Portfolio new.
	account1 := ReceptiveAccount new.
	account2 := ReceptiveAccount new.

	portfolio1 addAccount: account1.
	portfolio1 addAccount: account2.	

	self assert: (portfolio1 accounts includesAllOf: (OrderedCollection with: account1 with: account2)).

	
! !

!testRun: #PortfolioTest #test20 stamp: 'IO 11/7/2020 18:21:05'!
PASSED!

!testRun: #PortfolioTest #test01AnAccountCanBeAddedToAPortfolio stamp: 'IO 11/7/2020 18:21:05'!
PASSED!

!testRun: #PortfolioTest #test02APortfolioHasNoAccountsInitially stamp: 'IO 11/7/2020 18:21:05'!
PASSED!

!testRun: #PortfolioTest #test03APortfolioDoesNotHaveMoreAccountsThanAdded stamp: 'IO 11/7/2020 18:21:05'!
PASSED!

!testRun: #PortfolioTest #test04MoreThanOneAccountCanBeAddedToAPortfolio stamp: 'IO 11/7/2020 18:21:05'!
PASSED!

!testRun: #PortfolioTest #test05 stamp: 'IO 11/7/2020 18:21:05'!
PASSED!

!testRun: #PortfolioTest #test06 stamp: 'IO 11/7/2020 18:21:05'!
PASSED!

!testRun: #PortfolioTest #test07 stamp: 'IO 11/7/2020 18:21:05'!
PASSED!

!testRun: #PortfolioTest #test08 stamp: 'IO 11/7/2020 18:21:05'!
PASSED!

!testRun: #PortfolioTest #test09 stamp: 'IO 11/7/2020 18:21:05'!
PASSED!

!testRun: #PortfolioTest #test10 stamp: 'IO 11/7/2020 18:21:05'!
PASSED!

!testRun: #PortfolioTest #test11 stamp: 'IO 11/7/2020 18:21:05'!
PASSED!

!testRun: #PortfolioTest #test12 stamp: 'IO 11/7/2020 18:21:05'!
PASSED!

!testRun: #PortfolioTest #test13 stamp: 'IO 11/7/2020 18:21:05'!
PASSED!

!testRun: #PortfolioTest #test14 stamp: 'IO 11/7/2020 18:21:05'!
PASSED!

!testRun: #PortfolioTest #test15 stamp: 'IO 11/7/2020 18:21:05'!
PASSED!

!testRun: #PortfolioTest #test16 stamp: 'IO 11/7/2020 18:21:05'!
PASSED!

!testRun: #PortfolioTest #test17 stamp: 'IO 11/7/2020 18:21:05'!
PASSED!

!testRun: #PortfolioTest #test18 stamp: 'IO 11/7/2020 18:21:05'!
PASSED!

!testRun: #PortfolioTest #test19 stamp: 'IO 11/7/2020 18:21:05'!
PASSED!

!testRun: #PortfolioTest #test20 stamp: 'IO 11/7/2020 18:21:05'!
PASSED!

!testRun: #PortfolioTest #test21 stamp: 'IO 11/7/2020 18:21:05'!
PASSED!
!PortfolioTest methodsFor: 'accounts' stamp: 'IO 11/7/2020 18:21:20' prior: 50874839!
test21
	
	"un portfolio expone las cuentas de sus hijos"
	
	| portfolio1 portfolio2 portfolio3 account1 account2 account3 |
	
	portfolio1 := Portfolio new.
	portfolio2 := Portfolio new.
	portfolio3 := Portfolio new.
	account1 := ReceptiveAccount new.
	account2 := ReceptiveAccount new.
	account3 := ReceptiveAccount new.	

	portfolio2 addAccount: account1.
	portfolio2 addAccount: account2.	
	portfolio3 addAccount: account3.
	portfolio1 addPortfolio: portfolio2.
	portfolio1 addPortfolio: portfolio3.

	self assert: (portfolio1 accounts includesAllOf: (OrderedCollection with: account1 with: account2 with: account3)).

	
! !

!testRun: #PortfolioTest #test21 stamp: 'IO 11/7/2020 18:21:21'!
PASSED!

!testRun: #PortfolioTest #test01AnAccountCanBeAddedToAPortfolio stamp: 'IO 11/7/2020 18:21:21'!
PASSED!

!testRun: #PortfolioTest #test02APortfolioHasNoAccountsInitially stamp: 'IO 11/7/2020 18:21:21'!
PASSED!

!testRun: #PortfolioTest #test03APortfolioDoesNotHaveMoreAccountsThanAdded stamp: 'IO 11/7/2020 18:21:21'!
PASSED!

!testRun: #PortfolioTest #test04MoreThanOneAccountCanBeAddedToAPortfolio stamp: 'IO 11/7/2020 18:21:21'!
PASSED!

!testRun: #PortfolioTest #test05 stamp: 'IO 11/7/2020 18:21:21'!
PASSED!

!testRun: #PortfolioTest #test06 stamp: 'IO 11/7/2020 18:21:21'!
PASSED!

!testRun: #PortfolioTest #test07 stamp: 'IO 11/7/2020 18:21:21'!
PASSED!

!testRun: #PortfolioTest #test08 stamp: 'IO 11/7/2020 18:21:21'!
PASSED!

!testRun: #PortfolioTest #test09 stamp: 'IO 11/7/2020 18:21:21'!
PASSED!

!testRun: #PortfolioTest #test10 stamp: 'IO 11/7/2020 18:21:21'!
PASSED!

!testRun: #PortfolioTest #test11 stamp: 'IO 11/7/2020 18:21:21'!
PASSED!

!testRun: #PortfolioTest #test12 stamp: 'IO 11/7/2020 18:21:21'!
PASSED!

!testRun: #PortfolioTest #test13 stamp: 'IO 11/7/2020 18:21:21'!
PASSED!

!testRun: #PortfolioTest #test14 stamp: 'IO 11/7/2020 18:21:21'!
PASSED!

!testRun: #PortfolioTest #test15 stamp: 'IO 11/7/2020 18:21:21'!
PASSED!

!testRun: #PortfolioTest #test16 stamp: 'IO 11/7/2020 18:21:21'!
PASSED!

!testRun: #PortfolioTest #test17 stamp: 'IO 11/7/2020 18:21:21'!
PASSED!

!testRun: #PortfolioTest #test18 stamp: 'IO 11/7/2020 18:21:21'!
PASSED!

!testRun: #PortfolioTest #test19 stamp: 'IO 11/7/2020 18:21:21'!
PASSED!

!testRun: #PortfolioTest #test20 stamp: 'IO 11/7/2020 18:21:21'!
PASSED!

!testRun: #PortfolioTest #test21 stamp: 'IO 11/7/2020 18:21:21'!
PASSED!
!PortfolioTest methodsFor: 'accounts' stamp: 'IO 11/7/2020 18:23:25' prior: 50874988!
test21
	
	"un portfolio expone las cuentas de sus portfolios hijos"
	
	| portfolio1 portfolio2 portfolio3 account1 account2 account3 |
	
	portfolio1 := Portfolio new.
	portfolio2 := Portfolio new.
	portfolio3 := Portfolio new.
	account1 := ReceptiveAccount new.
	account2 := ReceptiveAccount new.
	account3 := ReceptiveAccount new.	

	portfolio2 addAccount: account1.
	portfolio2 addAccount: account2.	
	portfolio3 addAccount: account3.
	portfolio1 addPortfolio: portfolio2.
	portfolio1 addPortfolio: portfolio3.

	self assert: (portfolio1 accounts includesAllOf: (OrderedCollection with: account1 with: account2 with: account3)).

	
! !
!PortfolioTest methodsFor: 'accounts' stamp: 'IO 11/7/2020 18:27:41' prior: 50875066!
test21
	
	"un portfolio expone las cuentas de los hijos de sus portfolios hijos"
	
	| portfolio1 portfolio2 portfolio3 account1 account2 account3 |
	
	portfolio1 := Portfolio new.
	portfolio2 := Portfolio new.
	portfolio3 := Portfolio new.
	account1 := ReceptiveAccount new.
	account2 := ReceptiveAccount new.
	account3 := ReceptiveAccount new.	

	portfolio2 addAccount: account1.
	portfolio2 addAccount: account2.	
	portfolio3 addAccount: account3.
	portfolio1 addPortfolio: portfolio2.
	portfolio2 addPortfolio: portfolio3.

	self assert: (portfolio1 accounts includesAllOf: (OrderedCollection with: account1 with: account2 with: account3)).

	
! !

!testRun: #PortfolioTest #test21 stamp: 'IO 11/7/2020 18:27:42'!
PASSED!

!testRun: #PortfolioTest #test01AnAccountCanBeAddedToAPortfolio stamp: 'IO 11/7/2020 18:27:42'!
PASSED!

!testRun: #PortfolioTest #test02APortfolioHasNoAccountsInitially stamp: 'IO 11/7/2020 18:27:42'!
PASSED!

!testRun: #PortfolioTest #test03APortfolioDoesNotHaveMoreAccountsThanAdded stamp: 'IO 11/7/2020 18:27:42'!
PASSED!

!testRun: #PortfolioTest #test04MoreThanOneAccountCanBeAddedToAPortfolio stamp: 'IO 11/7/2020 18:27:42'!
PASSED!

!testRun: #PortfolioTest #test05 stamp: 'IO 11/7/2020 18:27:42'!
PASSED!

!testRun: #PortfolioTest #test06 stamp: 'IO 11/7/2020 18:27:42'!
PASSED!

!testRun: #PortfolioTest #test07 stamp: 'IO 11/7/2020 18:27:42'!
PASSED!

!testRun: #PortfolioTest #test08 stamp: 'IO 11/7/2020 18:27:42'!
PASSED!

!testRun: #PortfolioTest #test09 stamp: 'IO 11/7/2020 18:27:42'!
PASSED!

!testRun: #PortfolioTest #test10 stamp: 'IO 11/7/2020 18:27:42'!
PASSED!

!testRun: #PortfolioTest #test11 stamp: 'IO 11/7/2020 18:27:42'!
PASSED!

!testRun: #PortfolioTest #test12 stamp: 'IO 11/7/2020 18:27:42'!
PASSED!

!testRun: #PortfolioTest #test13 stamp: 'IO 11/7/2020 18:27:42'!
PASSED!

!testRun: #PortfolioTest #test14 stamp: 'IO 11/7/2020 18:27:42'!
PASSED!

!testRun: #PortfolioTest #test15 stamp: 'IO 11/7/2020 18:27:42'!
PASSED!

!testRun: #PortfolioTest #test16 stamp: 'IO 11/7/2020 18:27:42'!
PASSED!

!testRun: #PortfolioTest #test17 stamp: 'IO 11/7/2020 18:27:42'!
PASSED!

!testRun: #PortfolioTest #test18 stamp: 'IO 11/7/2020 18:27:42'!
PASSED!

!testRun: #PortfolioTest #test19 stamp: 'IO 11/7/2020 18:27:42'!
PASSED!

!testRun: #PortfolioTest #test20 stamp: 'IO 11/7/2020 18:27:42'!
PASSED!

!testRun: #PortfolioTest #test21 stamp: 'IO 11/7/2020 18:27:42'!
PASSED!
!PortfolioTest methodsFor: 'accounts' stamp: 'IO 11/7/2020 18:27:45' prior: 50875089!
test21
	
	"un portfolio expone las cuentas de los hijos de sus portfolios hijos"
	
	| portfolio1 portfolio2 portfolio3 account1 account2 account3 |
	
	portfolio1 := Portfolio new.
	portfolio2 := Portfolio new.
	portfolio3 := Portfolio new.
	account1 := ReceptiveAccount new.
	account2 := ReceptiveAccount new.
	account3 := ReceptiveAccount new.	

	portfolio2 addAccount: account1.
	portfolio2 addAccount: account2.	
	portfolio3 addAccount: account3.
	portfolio1 addPortfolio: portfolio2.
	portfolio1 addPortfolio: portfolio3.

	self assert: (portfolio1 accounts includesAllOf: (OrderedCollection with: account1 with: account2 with: account3)).

	
! !

!testRun: #PortfolioTest #test21 stamp: 'IO 11/7/2020 18:27:46'!
PASSED!

!testRun: #PortfolioTest #test01AnAccountCanBeAddedToAPortfolio stamp: 'IO 11/7/2020 18:27:46'!
PASSED!

!testRun: #PortfolioTest #test02APortfolioHasNoAccountsInitially stamp: 'IO 11/7/2020 18:27:46'!
PASSED!

!testRun: #PortfolioTest #test03APortfolioDoesNotHaveMoreAccountsThanAdded stamp: 'IO 11/7/2020 18:27:46'!
PASSED!

!testRun: #PortfolioTest #test04MoreThanOneAccountCanBeAddedToAPortfolio stamp: 'IO 11/7/2020 18:27:46'!
PASSED!

!testRun: #PortfolioTest #test05 stamp: 'IO 11/7/2020 18:27:46'!
PASSED!

!testRun: #PortfolioTest #test06 stamp: 'IO 11/7/2020 18:27:46'!
PASSED!

!testRun: #PortfolioTest #test07 stamp: 'IO 11/7/2020 18:27:46'!
PASSED!

!testRun: #PortfolioTest #test08 stamp: 'IO 11/7/2020 18:27:46'!
PASSED!

!testRun: #PortfolioTest #test09 stamp: 'IO 11/7/2020 18:27:46'!
PASSED!

!testRun: #PortfolioTest #test10 stamp: 'IO 11/7/2020 18:27:46'!
PASSED!

!testRun: #PortfolioTest #test11 stamp: 'IO 11/7/2020 18:27:46'!
PASSED!

!testRun: #PortfolioTest #test12 stamp: 'IO 11/7/2020 18:27:46'!
PASSED!

!testRun: #PortfolioTest #test13 stamp: 'IO 11/7/2020 18:27:46'!
PASSED!

!testRun: #PortfolioTest #test14 stamp: 'IO 11/7/2020 18:27:46'!
PASSED!

!testRun: #PortfolioTest #test15 stamp: 'IO 11/7/2020 18:27:46'!
PASSED!

!testRun: #PortfolioTest #test16 stamp: 'IO 11/7/2020 18:27:46'!
PASSED!

!testRun: #PortfolioTest #test17 stamp: 'IO 11/7/2020 18:27:46'!
PASSED!

!testRun: #PortfolioTest #test18 stamp: 'IO 11/7/2020 18:27:46'!
PASSED!

!testRun: #PortfolioTest #test19 stamp: 'IO 11/7/2020 18:27:46'!
PASSED!

!testRun: #PortfolioTest #test20 stamp: 'IO 11/7/2020 18:27:46'!
PASSED!

!testRun: #PortfolioTest #test21 stamp: 'IO 11/7/2020 18:27:46'!
PASSED!
!PortfolioTest methodsFor: 'accounts' stamp: 'IO 11/7/2020 18:28:01' prior: 50875168!
test21
	
	"un portfolio expone las cuentas de sus portfolios hijos"
	
	| portfolio1 portfolio2 portfolio3 account1 account2 account3 |
	
	portfolio1 := Portfolio new.
	portfolio2 := Portfolio new.
	portfolio3 := Portfolio new.
	account1 := ReceptiveAccount new.
	account2 := ReceptiveAccount new.
	account3 := ReceptiveAccount new.	

	portfolio2 addAccount: account1.
	portfolio2 addAccount: account2.	
	portfolio3 addAccount: account3.
	portfolio1 addPortfolio: portfolio2.
	portfolio1 addPortfolio: portfolio3.

	self assert: (portfolio1 accounts includesAllOf: (OrderedCollection with: account1 with: account2 with: account3)).

	
! !
!PortfolioTest methodsFor: 'accounts' stamp: 'IO 11/7/2020 18:28:11'!
test22
	
	"un portfolio expone las cuentas de los hijos de sus portfolios hijos"
	
	| portfolio1 portfolio2 portfolio3 account1 account2 account3 |
	
	portfolio1 := Portfolio new.
	portfolio2 := Portfolio new.
	portfolio3 := Portfolio new.
	account1 := ReceptiveAccount new.
	account2 := ReceptiveAccount new.
	account3 := ReceptiveAccount new.	

	portfolio2 addAccount: account1.
	portfolio2 addAccount: account2.	
	portfolio3 addAccount: account3.
	portfolio1 addPortfolio: portfolio2.
	portfolio2 addPortfolio: portfolio3.

	self assert: (portfolio1 accounts includesAllOf: (OrderedCollection with: account1 with: account2 with: account3)).

	
! !

!testRun: #PortfolioTest #test22 stamp: 'IO 11/7/2020 18:28:13'!
PASSED!

!testRun: #PortfolioTest #test01AnAccountCanBeAddedToAPortfolio stamp: 'IO 11/7/2020 18:28:13'!
PASSED!

!testRun: #PortfolioTest #test02APortfolioHasNoAccountsInitially stamp: 'IO 11/7/2020 18:28:13'!
PASSED!

!testRun: #PortfolioTest #test03APortfolioDoesNotHaveMoreAccountsThanAdded stamp: 'IO 11/7/2020 18:28:13'!
PASSED!

!testRun: #PortfolioTest #test04MoreThanOneAccountCanBeAddedToAPortfolio stamp: 'IO 11/7/2020 18:28:13'!
PASSED!

!testRun: #PortfolioTest #test05 stamp: 'IO 11/7/2020 18:28:13'!
PASSED!

!testRun: #PortfolioTest #test06 stamp: 'IO 11/7/2020 18:28:13'!
PASSED!

!testRun: #PortfolioTest #test07 stamp: 'IO 11/7/2020 18:28:13'!
PASSED!

!testRun: #PortfolioTest #test08 stamp: 'IO 11/7/2020 18:28:13'!
PASSED!

!testRun: #PortfolioTest #test09 stamp: 'IO 11/7/2020 18:28:13'!
PASSED!

!testRun: #PortfolioTest #test10 stamp: 'IO 11/7/2020 18:28:13'!
PASSED!

!testRun: #PortfolioTest #test11 stamp: 'IO 11/7/2020 18:28:13'!
PASSED!

!testRun: #PortfolioTest #test12 stamp: 'IO 11/7/2020 18:28:13'!
PASSED!

!testRun: #PortfolioTest #test13 stamp: 'IO 11/7/2020 18:28:13'!
PASSED!

!testRun: #PortfolioTest #test14 stamp: 'IO 11/7/2020 18:28:13'!
PASSED!

!testRun: #PortfolioTest #test15 stamp: 'IO 11/7/2020 18:28:13'!
PASSED!

!testRun: #PortfolioTest #test16 stamp: 'IO 11/7/2020 18:28:13'!
PASSED!

!testRun: #PortfolioTest #test17 stamp: 'IO 11/7/2020 18:28:13'!
PASSED!

!testRun: #PortfolioTest #test18 stamp: 'IO 11/7/2020 18:28:13'!
PASSED!

!testRun: #PortfolioTest #test19 stamp: 'IO 11/7/2020 18:28:13'!
PASSED!

!testRun: #PortfolioTest #test20 stamp: 'IO 11/7/2020 18:28:13'!
PASSED!

!testRun: #PortfolioTest #test21 stamp: 'IO 11/7/2020 18:28:13'!
PASSED!

!testRun: #PortfolioTest #test22 stamp: 'IO 11/7/2020 18:28:13'!
PASSED!

!methodRemoval: PortfolioTest #test22 stamp: 'IO 11/7/2020 18:29:36'!
test22
	
	"un portfolio expone las cuentas de los hijos de sus portfolios hijos"
	
	| portfolio1 portfolio2 portfolio3 account1 account2 account3 |
	
	portfolio1 := Portfolio new.
	portfolio2 := Portfolio new.
	portfolio3 := Portfolio new.
	account1 := ReceptiveAccount new.
	account2 := ReceptiveAccount new.
	account3 := ReceptiveAccount new.	

	portfolio2 addAccount: account1.
	portfolio2 addAccount: account2.	
	portfolio3 addAccount: account3.
	portfolio1 addPortfolio: portfolio2.
	portfolio2 addPortfolio: portfolio3.

	self assert: (portfolio1 accounts includesAllOf: (OrderedCollection with: account1 with: account2 with: account3)).

	
!
!PortfolioTest methodsFor: 'accounts' stamp: 'IO 11/7/2020 18:30:42' prior: 50875247!
test21
	
	"un portfolio expone las cuentas de sus portfolios hijos"
	
	| portfolio1 portfolio2 portfolio3 portfolio4 account1 account2 account3 account4 |
	
	portfolio1 := Portfolio new.
	portfolio2 := Portfolio new.
	portfolio3 := Portfolio new.
	portfolio4 := Portfolio new.

	account1 := ReceptiveAccount new.
	account2 := ReceptiveAccount new.
	account3 := ReceptiveAccount new.	
	account4 := ReceptiveAccount new.	

	portfolio2 addAccount: account1.
	portfolio2 addAccount: account2.	
	portfolio3 addAccount: account3.
	portfolio4 addAccount: account4.

	portfolio1 addPortfolio: portfolio2.
	portfolio1 addPortfolio: portfolio3.
	portfolio2 addPortfolio: portfolio4.

	self assert: (portfolio1 accounts includesAllOf: (OrderedCollection with: account1 with: account2 with: account3 with: account4)).

	
! !

!testRun: #PortfolioTest #test21 stamp: 'IO 11/7/2020 18:30:43'!
PASSED!

!testRun: #PortfolioTest #test01AnAccountCanBeAddedToAPortfolio stamp: 'IO 11/7/2020 18:30:43'!
PASSED!

!testRun: #PortfolioTest #test02APortfolioHasNoAccountsInitially stamp: 'IO 11/7/2020 18:30:43'!
PASSED!

!testRun: #PortfolioTest #test03APortfolioDoesNotHaveMoreAccountsThanAdded stamp: 'IO 11/7/2020 18:30:43'!
PASSED!

!testRun: #PortfolioTest #test04MoreThanOneAccountCanBeAddedToAPortfolio stamp: 'IO 11/7/2020 18:30:43'!
PASSED!

!testRun: #PortfolioTest #test05 stamp: 'IO 11/7/2020 18:30:43'!
PASSED!

!testRun: #PortfolioTest #test06 stamp: 'IO 11/7/2020 18:30:43'!
PASSED!

!testRun: #PortfolioTest #test07 stamp: 'IO 11/7/2020 18:30:43'!
PASSED!

!testRun: #PortfolioTest #test08 stamp: 'IO 11/7/2020 18:30:43'!
PASSED!

!testRun: #PortfolioTest #test09 stamp: 'IO 11/7/2020 18:30:43'!
PASSED!

!testRun: #PortfolioTest #test10 stamp: 'IO 11/7/2020 18:30:43'!
PASSED!

!testRun: #PortfolioTest #test11 stamp: 'IO 11/7/2020 18:30:43'!
PASSED!

!testRun: #PortfolioTest #test12 stamp: 'IO 11/7/2020 18:30:43'!
PASSED!

!testRun: #PortfolioTest #test13 stamp: 'IO 11/7/2020 18:30:43'!
PASSED!

!testRun: #PortfolioTest #test14 stamp: 'IO 11/7/2020 18:30:43'!
PASSED!

!testRun: #PortfolioTest #test15 stamp: 'IO 11/7/2020 18:30:43'!
PASSED!

!testRun: #PortfolioTest #test16 stamp: 'IO 11/7/2020 18:30:43'!
PASSED!

!testRun: #PortfolioTest #test17 stamp: 'IO 11/7/2020 18:30:43'!
PASSED!

!testRun: #PortfolioTest #test18 stamp: 'IO 11/7/2020 18:30:43'!
PASSED!

!testRun: #PortfolioTest #test19 stamp: 'IO 11/7/2020 18:30:43'!
PASSED!

!testRun: #PortfolioTest #test20 stamp: 'IO 11/7/2020 18:30:43'!
PASSED!

!testRun: #PortfolioTest #test21 stamp: 'IO 11/7/2020 18:30:43'!
PASSED!
!PortfolioTest methodsFor: 'accounts' stamp: 'IO 11/7/2020 18:45:39' prior: 50875374!
test21
	
	"un portfolio expone las cuentas de sus portfolios hijos"
	
	| portfolio1 portfolio2 portfolio3 portfolio4 account1 account2 account3 account4 |

	portfolio1 := Portfolio new.
	portfolio2 := Portfolio new.
	portfolio3 := Portfolio new.
	portfolio4 := Portfolio new.

	account1 := ReceptiveAccount new.
	account2 := ReceptiveAccount new.
	account3 := ReceptiveAccount new.	
	account4 := ReceptiveAccount new.	

	portfolio2 addAccount: account1.
	portfolio2 addAccount: account2.	
	portfolio3 addAccount: account3.
	portfolio4 addAccount: account4.

	portfolio1 addPortfolio: portfolio2.
	portfolio1 addPortfolio: portfolio3.
	portfolio2 addPortfolio: portfolio4.

	self assert: (portfolio1 accounts includesAllOf: (OrderedCollection with: account1 with: account2 with: account3 with: account4)).

	
! !
!PortfolioTest methodsFor: 'accounts' stamp: 'IO 11/7/2020 18:46:01' prior: 50875458!
test21
	
	"un portfolio expone las cuentas de sus portfolios"
	
	| portfolio1 portfolio2 portfolio3 portfolio4 account1 account2 account3 account4 |

	portfolio1 := Portfolio new.
	portfolio2 := Portfolio new.
	portfolio3 := Portfolio new.
	portfolio4 := Portfolio new.

	account1 := ReceptiveAccount new.
	account2 := ReceptiveAccount new.
	account3 := ReceptiveAccount new.	
	account4 := ReceptiveAccount new.	

	portfolio2 addAccount: account1.
	portfolio2 addAccount: account2.	
	portfolio3 addAccount: account3.
	portfolio4 addAccount: account4.

	portfolio1 addPortfolio: portfolio2.
	portfolio1 addPortfolio: portfolio3.
	portfolio2 addPortfolio: portfolio4.

	self assert: (portfolio1 accounts includesAllOf: (OrderedCollection with: account1 with: account2 with: account3 with: account4)).

	
! !

!testRun: #PortfolioTest #test21 stamp: 'IO 11/7/2020 18:46:14'!
PASSED!

!testRun: #PortfolioTest #test01AnAccountCanBeAddedToAPortfolio stamp: 'IO 11/7/2020 18:46:14'!
PASSED!

!testRun: #PortfolioTest #test02APortfolioHasNoAccountsInitially stamp: 'IO 11/7/2020 18:46:14'!
PASSED!

!testRun: #PortfolioTest #test03APortfolioDoesNotHaveMoreAccountsThanAdded stamp: 'IO 11/7/2020 18:46:14'!
PASSED!

!testRun: #PortfolioTest #test04MoreThanOneAccountCanBeAddedToAPortfolio stamp: 'IO 11/7/2020 18:46:14'!
PASSED!

!testRun: #PortfolioTest #test05 stamp: 'IO 11/7/2020 18:46:14'!
PASSED!

!testRun: #PortfolioTest #test06 stamp: 'IO 11/7/2020 18:46:14'!
PASSED!

!testRun: #PortfolioTest #test07 stamp: 'IO 11/7/2020 18:46:14'!
PASSED!

!testRun: #PortfolioTest #test08 stamp: 'IO 11/7/2020 18:46:14'!
PASSED!

!testRun: #PortfolioTest #test09 stamp: 'IO 11/7/2020 18:46:14'!
PASSED!

!testRun: #PortfolioTest #test10 stamp: 'IO 11/7/2020 18:46:14'!
PASSED!

!testRun: #PortfolioTest #test11 stamp: 'IO 11/7/2020 18:46:14'!
PASSED!

!testRun: #PortfolioTest #test12 stamp: 'IO 11/7/2020 18:46:14'!
PASSED!

!testRun: #PortfolioTest #test13 stamp: 'IO 11/7/2020 18:46:14'!
PASSED!

!testRun: #PortfolioTest #test14 stamp: 'IO 11/7/2020 18:46:14'!
PASSED!

!testRun: #PortfolioTest #test15 stamp: 'IO 11/7/2020 18:46:14'!
PASSED!

!testRun: #PortfolioTest #test16 stamp: 'IO 11/7/2020 18:46:14'!
PASSED!

!testRun: #PortfolioTest #test17 stamp: 'IO 11/7/2020 18:46:14'!
PASSED!

!testRun: #PortfolioTest #test18 stamp: 'IO 11/7/2020 18:46:14'!
PASSED!

!testRun: #PortfolioTest #test19 stamp: 'IO 11/7/2020 18:46:14'!
PASSED!

!testRun: #PortfolioTest #test20 stamp: 'IO 11/7/2020 18:46:14'!
PASSED!

!testRun: #PortfolioTest #test21 stamp: 'IO 11/7/2020 18:46:14'!
PASSED!
!PortfolioTest methodsFor: 'accounts' stamp: 'IO 11/7/2020 18:50:38'!
test22

	"un portfolio reponde port el balance de su unico hijo"

	| deposit withdraw portfolio1 account1 |
	
	account1 := ReceptiveAccount new.
	
	deposit := Deposit register: 100 on: account1.
	withdraw := Withdraw register: 50 on: account1.

	portfolio1 := Portfolio new.

	account1 := ReceptiveAccount new.

	portfolio1 addAccount: account1.

	self assert: (portfolio1 balance) equals: 50.
! !
!PortfolioTest methodsFor: 'accounts' stamp: 'IO 11/7/2020 18:50:54' prior: 50875570!
test22

	"un portfolio reponde port el balance de su unico hijo"

	| portfolio1 account1 |
	
	account1 := ReceptiveAccount new.
	
	Deposit register: 100 on: account1.
	Withdraw register: 50 on: account1.

	portfolio1 := Portfolio new.

	account1 := ReceptiveAccount new.

	portfolio1 addAccount: account1.

	self assert: (portfolio1 balance) equals: 50.
! !

!testRun: #PortfolioTest #test22 stamp: 'IO 11/7/2020 18:50:59'!
ERROR!

!testRun: #PortfolioTest #test22 stamp: 'IO 11/7/2020 18:51:03'!
ERROR!

!testRun: #PortfolioTest #test22 stamp: 'IO 11/7/2020 18:51:10'!
ERROR!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'IO 11/7/2020 18:51:17'!
balance
	self shouldBeImplemented.! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'IO 11/7/2020 18:51:36' prior: 50875607!
balance
	^accounts first balance.
! !

!testRun: #PortfolioTest #test01AnAccountCanBeAddedToAPortfolio stamp: 'IO 11/7/2020 18:51:37'!
PASSED!

!testRun: #PortfolioTest #test02APortfolioHasNoAccountsInitially stamp: 'IO 11/7/2020 18:51:37'!
PASSED!

!testRun: #PortfolioTest #test03APortfolioDoesNotHaveMoreAccountsThanAdded stamp: 'IO 11/7/2020 18:51:37'!
PASSED!

!testRun: #PortfolioTest #test04MoreThanOneAccountCanBeAddedToAPortfolio stamp: 'IO 11/7/2020 18:51:37'!
PASSED!

!testRun: #PortfolioTest #test05 stamp: 'IO 11/7/2020 18:51:37'!
PASSED!

!testRun: #PortfolioTest #test06 stamp: 'IO 11/7/2020 18:51:37'!
PASSED!

!testRun: #PortfolioTest #test07 stamp: 'IO 11/7/2020 18:51:37'!
PASSED!

!testRun: #PortfolioTest #test08 stamp: 'IO 11/7/2020 18:51:37'!
PASSED!

!testRun: #PortfolioTest #test09 stamp: 'IO 11/7/2020 18:51:37'!
PASSED!

!testRun: #PortfolioTest #test10 stamp: 'IO 11/7/2020 18:51:37'!
PASSED!

!testRun: #PortfolioTest #test11 stamp: 'IO 11/7/2020 18:51:37'!
PASSED!

!testRun: #PortfolioTest #test12 stamp: 'IO 11/7/2020 18:51:37'!
PASSED!

!testRun: #PortfolioTest #test13 stamp: 'IO 11/7/2020 18:51:37'!
PASSED!

!testRun: #PortfolioTest #test14 stamp: 'IO 11/7/2020 18:51:37'!
PASSED!

!testRun: #PortfolioTest #test15 stamp: 'IO 11/7/2020 18:51:37'!
PASSED!

!testRun: #PortfolioTest #test16 stamp: 'IO 11/7/2020 18:51:37'!
PASSED!

!testRun: #PortfolioTest #test17 stamp: 'IO 11/7/2020 18:51:37'!
PASSED!

!testRun: #PortfolioTest #test18 stamp: 'IO 11/7/2020 18:51:37'!
PASSED!

!testRun: #PortfolioTest #test19 stamp: 'IO 11/7/2020 18:51:37'!
PASSED!

!testRun: #PortfolioTest #test20 stamp: 'IO 11/7/2020 18:51:37'!
PASSED!

!testRun: #PortfolioTest #test21 stamp: 'IO 11/7/2020 18:51:37'!
PASSED!

!testRun: #PortfolioTest #test22 stamp: 'IO 11/7/2020 18:51:37'!
FAILURE!

!testRun: #PortfolioTest #test22 stamp: 'IO 11/7/2020 18:51:37'!
FAILURE!

!testRun: #PortfolioTest #test22 stamp: 'IO 11/7/2020 18:51:42'!
FAILURE!
!PortfolioTest methodsFor: 'accounts' stamp: 'IO 11/7/2020 18:52:18' prior: 50875586!
test22

	"un portfolio reponde port el balance de su unico hijo"

	| portfolio1 account1 |
	
	account1 := ReceptiveAccount new.
	
	Deposit register: 100 on: account1.
	Withdraw register: 50 on: account1.

	portfolio1 := Portfolio new.

	portfolio1 addAccount: account1.

	self assert: (portfolio1 balance) equals: 50.
! !

!testRun: #PortfolioTest #test22 stamp: 'IO 11/7/2020 18:52:19'!
PASSED!

!testRun: #PortfolioTest #test01AnAccountCanBeAddedToAPortfolio stamp: 'IO 11/7/2020 18:52:19'!
PASSED!

!testRun: #PortfolioTest #test02APortfolioHasNoAccountsInitially stamp: 'IO 11/7/2020 18:52:19'!
PASSED!

!testRun: #PortfolioTest #test03APortfolioDoesNotHaveMoreAccountsThanAdded stamp: 'IO 11/7/2020 18:52:19'!
PASSED!

!testRun: #PortfolioTest #test04MoreThanOneAccountCanBeAddedToAPortfolio stamp: 'IO 11/7/2020 18:52:19'!
PASSED!

!testRun: #PortfolioTest #test05 stamp: 'IO 11/7/2020 18:52:19'!
PASSED!

!testRun: #PortfolioTest #test06 stamp: 'IO 11/7/2020 18:52:19'!
PASSED!

!testRun: #PortfolioTest #test07 stamp: 'IO 11/7/2020 18:52:19'!
PASSED!

!testRun: #PortfolioTest #test08 stamp: 'IO 11/7/2020 18:52:19'!
PASSED!

!testRun: #PortfolioTest #test09 stamp: 'IO 11/7/2020 18:52:19'!
PASSED!

!testRun: #PortfolioTest #test10 stamp: 'IO 11/7/2020 18:52:19'!
PASSED!

!testRun: #PortfolioTest #test11 stamp: 'IO 11/7/2020 18:52:19'!
PASSED!

!testRun: #PortfolioTest #test12 stamp: 'IO 11/7/2020 18:52:19'!
PASSED!

!testRun: #PortfolioTest #test13 stamp: 'IO 11/7/2020 18:52:19'!
PASSED!

!testRun: #PortfolioTest #test14 stamp: 'IO 11/7/2020 18:52:19'!
PASSED!

!testRun: #PortfolioTest #test15 stamp: 'IO 11/7/2020 18:52:19'!
PASSED!

!testRun: #PortfolioTest #test16 stamp: 'IO 11/7/2020 18:52:19'!
PASSED!

!testRun: #PortfolioTest #test17 stamp: 'IO 11/7/2020 18:52:19'!
PASSED!

!testRun: #PortfolioTest #test18 stamp: 'IO 11/7/2020 18:52:19'!
PASSED!

!testRun: #PortfolioTest #test19 stamp: 'IO 11/7/2020 18:52:19'!
PASSED!

!testRun: #PortfolioTest #test20 stamp: 'IO 11/7/2020 18:52:19'!
PASSED!

!testRun: #PortfolioTest #test21 stamp: 'IO 11/7/2020 18:52:19'!
PASSED!

!testRun: #PortfolioTest #test22 stamp: 'IO 11/7/2020 18:52:19'!
PASSED!
!PortfolioTest methodsFor: 'balance' stamp: 'IO 11/7/2020 18:52:35' prior: 50875676!
test22

	"un portfolio reponde por el balance de su unico hijo"

	| portfolio1 account1 |
	
	account1 := ReceptiveAccount new.
	
	Deposit register: 100 on: account1.
	Withdraw register: 50 on: account1.

	portfolio1 := Portfolio new.

	portfolio1 addAccount: account1.

	self assert: (portfolio1 balance) equals: 50.
! !
!PortfolioTest methodsFor: 'balance' stamp: 'IO 11/7/2020 18:52:44'!
test23

	"un portfolio reponde por el balance de su unico hijo"

	| portfolio1 account1 |
	
	account1 := ReceptiveAccount new.
	
	Deposit register: 100 on: account1.
	Withdraw register: 50 on: account1.

	portfolio1 := Portfolio new.

	portfolio1 addAccount: account1.

	self assert: (portfolio1 balance) equals: 50.
! !
!PortfolioTest methodsFor: 'balance' stamp: 'IO 11/7/2020 18:53:12' prior: 50875747!
test22

	"un portfolio vacio responde balance 0"

	| portfolio1 |

	portfolio1 := Portfolio new.

	self assert: (portfolio1 balance) equals: 0.
! !

!testRun: #PortfolioTest #test22 stamp: 'IO 11/7/2020 18:53:13'!
ERROR!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'IO 11/7/2020 18:53:37' prior: 50875612!
balance
	^accounts size > 0 ifTrue: accounts first balance.
! !

!testRun: #PortfolioTest #test01AnAccountCanBeAddedToAPortfolio stamp: 'IO 11/7/2020 18:53:38'!
PASSED!

!testRun: #PortfolioTest #test02APortfolioHasNoAccountsInitially stamp: 'IO 11/7/2020 18:53:38'!
PASSED!

!testRun: #PortfolioTest #test03APortfolioDoesNotHaveMoreAccountsThanAdded stamp: 'IO 11/7/2020 18:53:38'!
PASSED!

!testRun: #PortfolioTest #test04MoreThanOneAccountCanBeAddedToAPortfolio stamp: 'IO 11/7/2020 18:53:38'!
PASSED!

!testRun: #PortfolioTest #test05 stamp: 'IO 11/7/2020 18:53:38'!
PASSED!

!testRun: #PortfolioTest #test06 stamp: 'IO 11/7/2020 18:53:38'!
PASSED!

!testRun: #PortfolioTest #test07 stamp: 'IO 11/7/2020 18:53:38'!
PASSED!

!testRun: #PortfolioTest #test08 stamp: 'IO 11/7/2020 18:53:38'!
PASSED!

!testRun: #PortfolioTest #test09 stamp: 'IO 11/7/2020 18:53:38'!
PASSED!

!testRun: #PortfolioTest #test10 stamp: 'IO 11/7/2020 18:53:38'!
PASSED!

!testRun: #PortfolioTest #test11 stamp: 'IO 11/7/2020 18:53:38'!
PASSED!

!testRun: #PortfolioTest #test12 stamp: 'IO 11/7/2020 18:53:38'!
PASSED!

!testRun: #PortfolioTest #test13 stamp: 'IO 11/7/2020 18:53:38'!
PASSED!

!testRun: #PortfolioTest #test14 stamp: 'IO 11/7/2020 18:53:38'!
PASSED!

!testRun: #PortfolioTest #test15 stamp: 'IO 11/7/2020 18:53:38'!
PASSED!

!testRun: #PortfolioTest #test16 stamp: 'IO 11/7/2020 18:53:38'!
PASSED!

!testRun: #PortfolioTest #test17 stamp: 'IO 11/7/2020 18:53:38'!
PASSED!

!testRun: #PortfolioTest #test18 stamp: 'IO 11/7/2020 18:53:38'!
PASSED!

!testRun: #PortfolioTest #test19 stamp: 'IO 11/7/2020 18:53:38'!
PASSED!

!testRun: #PortfolioTest #test20 stamp: 'IO 11/7/2020 18:53:38'!
PASSED!

!testRun: #PortfolioTest #test21 stamp: 'IO 11/7/2020 18:53:38'!
PASSED!

!testRun: #PortfolioTest #test22 stamp: 'IO 11/7/2020 18:53:38'!
ERROR!

!testRun: #PortfolioTest #test23 stamp: 'IO 11/7/2020 18:53:38'!
PASSED!

!testRun: #PortfolioTest #test22 stamp: 'IO 11/7/2020 18:53:38'!
ERROR!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'IO 11/7/2020 18:53:45' prior: 50875783!
balance
	^(accounts size > 0) ifTrue: accounts first balance.
! !

!testRun: #PortfolioTest #test01AnAccountCanBeAddedToAPortfolio stamp: 'IO 11/7/2020 18:53:46'!
PASSED!

!testRun: #PortfolioTest #test02APortfolioHasNoAccountsInitially stamp: 'IO 11/7/2020 18:53:46'!
PASSED!

!testRun: #PortfolioTest #test03APortfolioDoesNotHaveMoreAccountsThanAdded stamp: 'IO 11/7/2020 18:53:46'!
PASSED!

!testRun: #PortfolioTest #test04MoreThanOneAccountCanBeAddedToAPortfolio stamp: 'IO 11/7/2020 18:53:46'!
PASSED!

!testRun: #PortfolioTest #test05 stamp: 'IO 11/7/2020 18:53:46'!
PASSED!

!testRun: #PortfolioTest #test06 stamp: 'IO 11/7/2020 18:53:46'!
PASSED!

!testRun: #PortfolioTest #test07 stamp: 'IO 11/7/2020 18:53:46'!
PASSED!

!testRun: #PortfolioTest #test08 stamp: 'IO 11/7/2020 18:53:46'!
PASSED!

!testRun: #PortfolioTest #test09 stamp: 'IO 11/7/2020 18:53:46'!
PASSED!

!testRun: #PortfolioTest #test10 stamp: 'IO 11/7/2020 18:53:46'!
PASSED!

!testRun: #PortfolioTest #test11 stamp: 'IO 11/7/2020 18:53:46'!
PASSED!

!testRun: #PortfolioTest #test12 stamp: 'IO 11/7/2020 18:53:46'!
PASSED!

!testRun: #PortfolioTest #test13 stamp: 'IO 11/7/2020 18:53:46'!
PASSED!

!testRun: #PortfolioTest #test14 stamp: 'IO 11/7/2020 18:53:46'!
PASSED!

!testRun: #PortfolioTest #test15 stamp: 'IO 11/7/2020 18:53:46'!
PASSED!

!testRun: #PortfolioTest #test16 stamp: 'IO 11/7/2020 18:53:46'!
PASSED!

!testRun: #PortfolioTest #test17 stamp: 'IO 11/7/2020 18:53:46'!
PASSED!

!testRun: #PortfolioTest #test18 stamp: 'IO 11/7/2020 18:53:46'!
PASSED!

!testRun: #PortfolioTest #test19 stamp: 'IO 11/7/2020 18:53:46'!
PASSED!

!testRun: #PortfolioTest #test20 stamp: 'IO 11/7/2020 18:53:46'!
PASSED!

!testRun: #PortfolioTest #test21 stamp: 'IO 11/7/2020 18:53:46'!
PASSED!

!testRun: #PortfolioTest #test22 stamp: 'IO 11/7/2020 18:53:46'!
ERROR!

!testRun: #PortfolioTest #test23 stamp: 'IO 11/7/2020 18:53:46'!
PASSED!

!testRun: #PortfolioTest #test22 stamp: 'IO 11/7/2020 18:53:46'!
ERROR!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'IO 11/7/2020 18:54:18' prior: 50875848!
balance
	(accounts size > 0) ifTrue: [^accounts first balance] ifFalse: [^0].
! !

!testRun: #PortfolioTest #test01AnAccountCanBeAddedToAPortfolio stamp: 'IO 11/7/2020 18:54:19'!
PASSED!

!testRun: #PortfolioTest #test02APortfolioHasNoAccountsInitially stamp: 'IO 11/7/2020 18:54:19'!
PASSED!

!testRun: #PortfolioTest #test03APortfolioDoesNotHaveMoreAccountsThanAdded stamp: 'IO 11/7/2020 18:54:19'!
PASSED!

!testRun: #PortfolioTest #test04MoreThanOneAccountCanBeAddedToAPortfolio stamp: 'IO 11/7/2020 18:54:19'!
PASSED!

!testRun: #PortfolioTest #test05 stamp: 'IO 11/7/2020 18:54:19'!
PASSED!

!testRun: #PortfolioTest #test06 stamp: 'IO 11/7/2020 18:54:19'!
PASSED!

!testRun: #PortfolioTest #test07 stamp: 'IO 11/7/2020 18:54:19'!
PASSED!

!testRun: #PortfolioTest #test08 stamp: 'IO 11/7/2020 18:54:19'!
PASSED!

!testRun: #PortfolioTest #test09 stamp: 'IO 11/7/2020 18:54:19'!
PASSED!

!testRun: #PortfolioTest #test10 stamp: 'IO 11/7/2020 18:54:19'!
PASSED!

!testRun: #PortfolioTest #test11 stamp: 'IO 11/7/2020 18:54:19'!
PASSED!

!testRun: #PortfolioTest #test12 stamp: 'IO 11/7/2020 18:54:19'!
PASSED!

!testRun: #PortfolioTest #test13 stamp: 'IO 11/7/2020 18:54:19'!
PASSED!

!testRun: #PortfolioTest #test14 stamp: 'IO 11/7/2020 18:54:19'!
PASSED!

!testRun: #PortfolioTest #test15 stamp: 'IO 11/7/2020 18:54:19'!
PASSED!

!testRun: #PortfolioTest #test16 stamp: 'IO 11/7/2020 18:54:19'!
PASSED!

!testRun: #PortfolioTest #test17 stamp: 'IO 11/7/2020 18:54:19'!
PASSED!

!testRun: #PortfolioTest #test18 stamp: 'IO 11/7/2020 18:54:19'!
PASSED!

!testRun: #PortfolioTest #test19 stamp: 'IO 11/7/2020 18:54:19'!
PASSED!

!testRun: #PortfolioTest #test20 stamp: 'IO 11/7/2020 18:54:19'!
PASSED!

!testRun: #PortfolioTest #test21 stamp: 'IO 11/7/2020 18:54:19'!
PASSED!

!testRun: #PortfolioTest #test22 stamp: 'IO 11/7/2020 18:54:19'!
PASSED!

!testRun: #PortfolioTest #test23 stamp: 'IO 11/7/2020 18:54:19'!
PASSED!
!PortfolioTest methodsFor: 'balance' stamp: 'IO 11/7/2020 18:55:13' prior: 50875760!
test23

	"un portfolio reponde por el balance de sus hijos"

	| portfolio1 account1 account2 |
	
	account1 := ReceptiveAccount new.
	account2 := ReceptiveAccount new.

	Deposit register: 100 on: account1.
	Withdraw register: 50 on: account1.
	Deposit register: 100 on: account2.

	portfolio1 := Portfolio new.

	portfolio1 addAccount: account1.
	portfolio1 addAccount: account2.

	self assert: (portfolio1 balance) equals: 150.
! !

!testRun: #PortfolioTest #test23 stamp: 'IO 11/7/2020 18:55:14'!
FAILURE!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'IO 11/7/2020 18:56:11' prior: 50875913!
balance
	| balance |
	balance := 0.
	accounts do: [ :account | balance := balance + account balance].
	^balance.
! !

!testRun: #PortfolioTest #test01AnAccountCanBeAddedToAPortfolio stamp: 'IO 11/7/2020 18:56:12'!
PASSED!

!testRun: #PortfolioTest #test02APortfolioHasNoAccountsInitially stamp: 'IO 11/7/2020 18:56:12'!
PASSED!

!testRun: #PortfolioTest #test03APortfolioDoesNotHaveMoreAccountsThanAdded stamp: 'IO 11/7/2020 18:56:12'!
PASSED!

!testRun: #PortfolioTest #test04MoreThanOneAccountCanBeAddedToAPortfolio stamp: 'IO 11/7/2020 18:56:12'!
PASSED!

!testRun: #PortfolioTest #test05 stamp: 'IO 11/7/2020 18:56:12'!
PASSED!

!testRun: #PortfolioTest #test06 stamp: 'IO 11/7/2020 18:56:12'!
PASSED!

!testRun: #PortfolioTest #test07 stamp: 'IO 11/7/2020 18:56:12'!
PASSED!

!testRun: #PortfolioTest #test08 stamp: 'IO 11/7/2020 18:56:12'!
PASSED!

!testRun: #PortfolioTest #test09 stamp: 'IO 11/7/2020 18:56:12'!
PASSED!

!testRun: #PortfolioTest #test10 stamp: 'IO 11/7/2020 18:56:12'!
PASSED!

!testRun: #PortfolioTest #test11 stamp: 'IO 11/7/2020 18:56:12'!
PASSED!

!testRun: #PortfolioTest #test12 stamp: 'IO 11/7/2020 18:56:12'!
PASSED!

!testRun: #PortfolioTest #test13 stamp: 'IO 11/7/2020 18:56:12'!
PASSED!

!testRun: #PortfolioTest #test14 stamp: 'IO 11/7/2020 18:56:12'!
PASSED!

!testRun: #PortfolioTest #test15 stamp: 'IO 11/7/2020 18:56:12'!
PASSED!

!testRun: #PortfolioTest #test16 stamp: 'IO 11/7/2020 18:56:12'!
PASSED!

!testRun: #PortfolioTest #test17 stamp: 'IO 11/7/2020 18:56:12'!
PASSED!

!testRun: #PortfolioTest #test18 stamp: 'IO 11/7/2020 18:56:12'!
PASSED!

!testRun: #PortfolioTest #test19 stamp: 'IO 11/7/2020 18:56:12'!
PASSED!

!testRun: #PortfolioTest #test20 stamp: 'IO 11/7/2020 18:56:12'!
PASSED!

!testRun: #PortfolioTest #test21 stamp: 'IO 11/7/2020 18:56:12'!
PASSED!

!testRun: #PortfolioTest #test22 stamp: 'IO 11/7/2020 18:56:12'!
PASSED!

!testRun: #PortfolioTest #test23 stamp: 'IO 11/7/2020 18:56:12'!
PASSED!

!testRun: #PortfolioTest #test01AnAccountCanBeAddedToAPortfolio stamp: 'IO 11/7/2020 18:57:06'!
PASSED!

!testRun: #PortfolioTest #test02APortfolioHasNoAccountsInitially stamp: 'IO 11/7/2020 18:57:06'!
PASSED!

!testRun: #PortfolioTest #test03APortfolioDoesNotHaveMoreAccountsThanAdded stamp: 'IO 11/7/2020 18:57:07'!
PASSED!

!testRun: #PortfolioTest #test04MoreThanOneAccountCanBeAddedToAPortfolio stamp: 'IO 11/7/2020 18:57:07'!
PASSED!

!testRun: #PortfolioTest #test05 stamp: 'IO 11/7/2020 18:57:07'!
PASSED!

!testRun: #PortfolioTest #test06 stamp: 'IO 11/7/2020 18:57:07'!
PASSED!

!testRun: #PortfolioTest #test07 stamp: 'IO 11/7/2020 18:57:07'!
PASSED!

!testRun: #PortfolioTest #test08 stamp: 'IO 11/7/2020 18:57:07'!
PASSED!

!testRun: #PortfolioTest #test09 stamp: 'IO 11/7/2020 18:57:07'!
PASSED!

!testRun: #PortfolioTest #test10 stamp: 'IO 11/7/2020 18:57:07'!
PASSED!

!testRun: #PortfolioTest #test11 stamp: 'IO 11/7/2020 18:57:07'!
PASSED!

!testRun: #PortfolioTest #test12 stamp: 'IO 11/7/2020 18:57:07'!
PASSED!

!testRun: #PortfolioTest #test13 stamp: 'IO 11/7/2020 18:57:07'!
PASSED!

!testRun: #PortfolioTest #test14 stamp: 'IO 11/7/2020 18:57:07'!
PASSED!

!testRun: #PortfolioTest #test15 stamp: 'IO 11/7/2020 18:57:07'!
PASSED!

!testRun: #PortfolioTest #test16 stamp: 'IO 11/7/2020 18:57:07'!
PASSED!

!testRun: #PortfolioTest #test17 stamp: 'IO 11/7/2020 18:57:07'!
PASSED!

!testRun: #PortfolioTest #test18 stamp: 'IO 11/7/2020 18:57:07'!
PASSED!

!testRun: #PortfolioTest #test19 stamp: 'IO 11/7/2020 18:57:07'!
PASSED!

!testRun: #PortfolioTest #test20 stamp: 'IO 11/7/2020 18:57:07'!
PASSED!

!testRun: #PortfolioTest #test21 stamp: 'IO 11/7/2020 18:57:07'!
PASSED!

!testRun: #PortfolioTest #test22 stamp: 'IO 11/7/2020 18:57:07'!
PASSED!

!testRun: #PortfolioTest #test23 stamp: 'IO 11/7/2020 18:57:07'!
PASSED!
!PortfolioTest methodsFor: 'balance' stamp: 'IO 11/7/2020 18:57:42'!
test24

	"un portfolio reponde por el balance de sus hijos"

	| portfolio1 account1 account2 |
	
	account1 := ReceptiveAccount new.
	account2 := ReceptiveAccount new.

	Deposit register: 100 on: account1.
	Withdraw register: 50 on: account1.
	Deposit register: 100 on: account2.

	portfolio1 := Portfolio new.

	portfolio1 addAccount: account1.
	portfolio1 addAccount: account2.

	self assert: (portfolio1 balance) equals: 150.
! !
!PortfolioTest methodsFor: 'balance' stamp: 'IO 11/7/2020 18:57:58' prior: 50875976!
test23

	"un portfolio reponde por el balance de su unico hijo"

	| portfolio1 account1 |
	
	account1 := ReceptiveAccount new.
	
	Deposit register: 100 on: account1.
	Withdraw register: 50 on: account1.

	portfolio1 := Portfolio new.

	portfolio1 addAccount: account1.

	self assert: (portfolio1 balance) equals: 50.
! !

!testRun: #PortfolioTest #test23 stamp: 'IO 11/7/2020 18:57:59'!
PASSED!

!testRun: #PortfolioTest #test01AnAccountCanBeAddedToAPortfolio stamp: 'IO 11/7/2020 18:57:59'!
PASSED!

!testRun: #PortfolioTest #test02APortfolioHasNoAccountsInitially stamp: 'IO 11/7/2020 18:57:59'!
PASSED!

!testRun: #PortfolioTest #test03APortfolioDoesNotHaveMoreAccountsThanAdded stamp: 'IO 11/7/2020 18:57:59'!
PASSED!

!testRun: #PortfolioTest #test04MoreThanOneAccountCanBeAddedToAPortfolio stamp: 'IO 11/7/2020 18:57:59'!
PASSED!

!testRun: #PortfolioTest #test05 stamp: 'IO 11/7/2020 18:57:59'!
PASSED!

!testRun: #PortfolioTest #test06 stamp: 'IO 11/7/2020 18:57:59'!
PASSED!

!testRun: #PortfolioTest #test07 stamp: 'IO 11/7/2020 18:57:59'!
PASSED!

!testRun: #PortfolioTest #test08 stamp: 'IO 11/7/2020 18:57:59'!
PASSED!

!testRun: #PortfolioTest #test09 stamp: 'IO 11/7/2020 18:57:59'!
PASSED!

!testRun: #PortfolioTest #test10 stamp: 'IO 11/7/2020 18:57:59'!
PASSED!

!testRun: #PortfolioTest #test11 stamp: 'IO 11/7/2020 18:57:59'!
PASSED!

!testRun: #PortfolioTest #test12 stamp: 'IO 11/7/2020 18:57:59'!
PASSED!

!testRun: #PortfolioTest #test13 stamp: 'IO 11/7/2020 18:57:59'!
PASSED!

!testRun: #PortfolioTest #test14 stamp: 'IO 11/7/2020 18:57:59'!
PASSED!

!testRun: #PortfolioTest #test15 stamp: 'IO 11/7/2020 18:57:59'!
PASSED!

!testRun: #PortfolioTest #test16 stamp: 'IO 11/7/2020 18:57:59'!
PASSED!

!testRun: #PortfolioTest #test17 stamp: 'IO 11/7/2020 18:57:59'!
PASSED!

!testRun: #PortfolioTest #test18 stamp: 'IO 11/7/2020 18:57:59'!
PASSED!

!testRun: #PortfolioTest #test19 stamp: 'IO 11/7/2020 18:57:59'!
PASSED!

!testRun: #PortfolioTest #test20 stamp: 'IO 11/7/2020 18:57:59'!
PASSED!

!testRun: #PortfolioTest #test21 stamp: 'IO 11/7/2020 18:57:59'!
PASSED!

!testRun: #PortfolioTest #test22 stamp: 'IO 11/7/2020 18:57:59'!
PASSED!

!testRun: #PortfolioTest #test23 stamp: 'IO 11/7/2020 18:57:59'!
PASSED!

!testRun: #PortfolioTest #test24 stamp: 'IO 11/7/2020 18:57:59'!
PASSED!
!PortfolioTest methodsFor: 'balance' stamp: 'IO 11/7/2020 18:58:47'!
test25

	"un portfolio reponde por el balance de los hijos de sus portfolios"

	| portfolio1 portfolio2 account1 account2 |
	
	account1 := ReceptiveAccount new.
	account2 := ReceptiveAccount new.

	Deposit register: 100 on: account1.
	Withdraw register: 50 on: account1.
	Deposit register: 100 on: account2.

	portfolio1 := Portfolio new.
	portfolio2 := Portfolio new.

	portfolio1 addPortfolio: portfolio2.

	portfolio2 addAccount: account1.
	portfolio2 addAccount: account2.

	self assert: (portfolio1 balance) equals: 150.
! !

!testRun: #PortfolioTest #test25 stamp: 'IO 11/7/2020 18:58:49'!
FAILURE!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'IO 11/7/2020 18:59:37' prior: 50875995!
balance
	| balance |
	balance := 0.
	accounts do: [ :account | balance := balance + account balance].
	portfolios do: [ :portfolio | balance := balance + portfolio balance].
	^balance.
! !

!testRun: #PortfolioTest #test01AnAccountCanBeAddedToAPortfolio stamp: 'IO 11/7/2020 18:59:38'!
PASSED!

!testRun: #PortfolioTest #test02APortfolioHasNoAccountsInitially stamp: 'IO 11/7/2020 18:59:38'!
PASSED!

!testRun: #PortfolioTest #test03APortfolioDoesNotHaveMoreAccountsThanAdded stamp: 'IO 11/7/2020 18:59:38'!
PASSED!

!testRun: #PortfolioTest #test04MoreThanOneAccountCanBeAddedToAPortfolio stamp: 'IO 11/7/2020 18:59:38'!
PASSED!

!testRun: #PortfolioTest #test05 stamp: 'IO 11/7/2020 18:59:38'!
PASSED!

!testRun: #PortfolioTest #test06 stamp: 'IO 11/7/2020 18:59:38'!
PASSED!

!testRun: #PortfolioTest #test07 stamp: 'IO 11/7/2020 18:59:38'!
PASSED!

!testRun: #PortfolioTest #test08 stamp: 'IO 11/7/2020 18:59:38'!
PASSED!

!testRun: #PortfolioTest #test09 stamp: 'IO 11/7/2020 18:59:38'!
PASSED!

!testRun: #PortfolioTest #test10 stamp: 'IO 11/7/2020 18:59:38'!
PASSED!

!testRun: #PortfolioTest #test11 stamp: 'IO 11/7/2020 18:59:38'!
PASSED!

!testRun: #PortfolioTest #test12 stamp: 'IO 11/7/2020 18:59:38'!
PASSED!

!testRun: #PortfolioTest #test13 stamp: 'IO 11/7/2020 18:59:38'!
PASSED!

!testRun: #PortfolioTest #test14 stamp: 'IO 11/7/2020 18:59:38'!
PASSED!

!testRun: #PortfolioTest #test15 stamp: 'IO 11/7/2020 18:59:38'!
PASSED!

!testRun: #PortfolioTest #test16 stamp: 'IO 11/7/2020 18:59:38'!
PASSED!

!testRun: #PortfolioTest #test17 stamp: 'IO 11/7/2020 18:59:38'!
PASSED!

!testRun: #PortfolioTest #test18 stamp: 'IO 11/7/2020 18:59:38'!
PASSED!

!testRun: #PortfolioTest #test19 stamp: 'IO 11/7/2020 18:59:38'!
PASSED!

!testRun: #PortfolioTest #test20 stamp: 'IO 11/7/2020 18:59:38'!
PASSED!

!testRun: #PortfolioTest #test21 stamp: 'IO 11/7/2020 18:59:38'!
PASSED!

!testRun: #PortfolioTest #test22 stamp: 'IO 11/7/2020 18:59:38'!
PASSED!

!testRun: #PortfolioTest #test23 stamp: 'IO 11/7/2020 18:59:38'!
PASSED!

!testRun: #PortfolioTest #test24 stamp: 'IO 11/7/2020 18:59:38'!
PASSED!

!testRun: #PortfolioTest #test25 stamp: 'IO 11/7/2020 18:59:38'!
PASSED!
!PortfolioTest methodsFor: 'balance' stamp: 'IO 11/7/2020 19:08:36'!
test26

	"un portfolio vacio no registro ninguna transaccion"

	| portfolio1 |

	portfolio1 := Portfolio new.
	

	self assert: (portfolio1 balance) equals: 0.
! !
!PortfolioTest methodsFor: 'has registered' stamp: 'IO 11/7/2020 19:10:19' prior: 50876302!
test26

	"un portfolio vacio no registro ninguna transaccion"
	
	| deposit withdraw portfolio1 |
	
	portfolio1 := Portfolio new.
	deposit :=  Deposit for: 100.
	withdraw := Withdraw for: 50.
		
	self deny: (portfolio1 hasRegistered: deposit).
	self deny: (portfolio1 hasRegistered:withdraw).
! !

!testRun: #PortfolioTest #test26 stamp: 'IO 11/7/2020 19:10:20'!
ERROR!

!testRun: #PortfolioTest #test26 stamp: 'IO 11/7/2020 19:10:28'!
ERROR!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'IO 11/7/2020 19:10:39'!
hasRegistered: aDeposit 
	self shouldBeImplemented.! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'IO 11/7/2020 19:10:44' prior: 50876327!
hasRegistered: aDeposit 
	^false.
! !

!testRun: #PortfolioTest #test26 stamp: 'IO 11/7/2020 19:10:46'!
PASSED!

!testRun: #PortfolioTest #test01AnAccountCanBeAddedToAPortfolio stamp: 'IO 11/7/2020 19:10:46'!
PASSED!

!testRun: #PortfolioTest #test02APortfolioHasNoAccountsInitially stamp: 'IO 11/7/2020 19:10:46'!
PASSED!

!testRun: #PortfolioTest #test03APortfolioDoesNotHaveMoreAccountsThanAdded stamp: 'IO 11/7/2020 19:10:46'!
PASSED!

!testRun: #PortfolioTest #test04MoreThanOneAccountCanBeAddedToAPortfolio stamp: 'IO 11/7/2020 19:10:46'!
PASSED!

!testRun: #PortfolioTest #test05 stamp: 'IO 11/7/2020 19:10:46'!
PASSED!

!testRun: #PortfolioTest #test06 stamp: 'IO 11/7/2020 19:10:46'!
PASSED!

!testRun: #PortfolioTest #test07 stamp: 'IO 11/7/2020 19:10:46'!
PASSED!

!testRun: #PortfolioTest #test08 stamp: 'IO 11/7/2020 19:10:46'!
PASSED!

!testRun: #PortfolioTest #test09 stamp: 'IO 11/7/2020 19:10:46'!
PASSED!

!testRun: #PortfolioTest #test10 stamp: 'IO 11/7/2020 19:10:46'!
PASSED!

!testRun: #PortfolioTest #test11 stamp: 'IO 11/7/2020 19:10:46'!
PASSED!

!testRun: #PortfolioTest #test12 stamp: 'IO 11/7/2020 19:10:46'!
PASSED!

!testRun: #PortfolioTest #test13 stamp: 'IO 11/7/2020 19:10:46'!
PASSED!

!testRun: #PortfolioTest #test14 stamp: 'IO 11/7/2020 19:10:46'!
PASSED!

!testRun: #PortfolioTest #test15 stamp: 'IO 11/7/2020 19:10:46'!
PASSED!

!testRun: #PortfolioTest #test16 stamp: 'IO 11/7/2020 19:10:46'!
PASSED!

!testRun: #PortfolioTest #test17 stamp: 'IO 11/7/2020 19:10:46'!
PASSED!

!testRun: #PortfolioTest #test18 stamp: 'IO 11/7/2020 19:10:46'!
PASSED!

!testRun: #PortfolioTest #test19 stamp: 'IO 11/7/2020 19:10:46'!
PASSED!

!testRun: #PortfolioTest #test20 stamp: 'IO 11/7/2020 19:10:46'!
PASSED!

!testRun: #PortfolioTest #test21 stamp: 'IO 11/7/2020 19:10:46'!
PASSED!

!testRun: #PortfolioTest #test22 stamp: 'IO 11/7/2020 19:10:46'!
PASSED!

!testRun: #PortfolioTest #test23 stamp: 'IO 11/7/2020 19:10:46'!
PASSED!

!testRun: #PortfolioTest #test24 stamp: 'IO 11/7/2020 19:10:46'!
PASSED!

!testRun: #PortfolioTest #test25 stamp: 'IO 11/7/2020 19:10:46'!
PASSED!

!testRun: #PortfolioTest #test26 stamp: 'IO 11/7/2020 19:10:46'!
PASSED!
!PortfolioTest methodsFor: 'has registered' stamp: 'IO 11/7/2020 19:13:25'!
test27

	"un portfolio con una cuenta registro sus transacciones"
	
	| deposit withdraw account1 portfolio1 |
	
	account1 := ReceptiveAccount new.
	deposit :=  Deposit register: 100 on: account1.
	withdraw := Withdraw register: 50 on: account1.
	
	portfolio1 := Portfolio new.
	portfolio1 addAccount: account1.

	self assert: (portfolio1 hasRegistered: deposit).
	self assert: (portfolio1 hasRegistered:withdraw).
! !

!testRun: #PortfolioTest #test27 stamp: 'IO 11/7/2020 19:13:27'!
FAILURE!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'IO 11/7/2020 19:13:46' prior: 50876332!
hasRegistered: aDeposit 
	^accounts first hasRegistered: aDeposit.
! !

!testRun: #PortfolioTest #test01AnAccountCanBeAddedToAPortfolio stamp: 'IO 11/7/2020 19:13:46'!
PASSED!

!testRun: #PortfolioTest #test02APortfolioHasNoAccountsInitially stamp: 'IO 11/7/2020 19:13:46'!
PASSED!

!testRun: #PortfolioTest #test03APortfolioDoesNotHaveMoreAccountsThanAdded stamp: 'IO 11/7/2020 19:13:46'!
PASSED!

!testRun: #PortfolioTest #test04MoreThanOneAccountCanBeAddedToAPortfolio stamp: 'IO 11/7/2020 19:13:46'!
PASSED!

!testRun: #PortfolioTest #test05 stamp: 'IO 11/7/2020 19:13:46'!
PASSED!

!testRun: #PortfolioTest #test06 stamp: 'IO 11/7/2020 19:13:46'!
PASSED!

!testRun: #PortfolioTest #test07 stamp: 'IO 11/7/2020 19:13:46'!
PASSED!

!testRun: #PortfolioTest #test08 stamp: 'IO 11/7/2020 19:13:46'!
PASSED!

!testRun: #PortfolioTest #test09 stamp: 'IO 11/7/2020 19:13:46'!
PASSED!

!testRun: #PortfolioTest #test10 stamp: 'IO 11/7/2020 19:13:46'!
PASSED!

!testRun: #PortfolioTest #test11 stamp: 'IO 11/7/2020 19:13:46'!
PASSED!

!testRun: #PortfolioTest #test12 stamp: 'IO 11/7/2020 19:13:46'!
PASSED!

!testRun: #PortfolioTest #test13 stamp: 'IO 11/7/2020 19:13:46'!
PASSED!

!testRun: #PortfolioTest #test14 stamp: 'IO 11/7/2020 19:13:46'!
PASSED!

!testRun: #PortfolioTest #test15 stamp: 'IO 11/7/2020 19:13:46'!
PASSED!

!testRun: #PortfolioTest #test16 stamp: 'IO 11/7/2020 19:13:46'!
PASSED!

!testRun: #PortfolioTest #test17 stamp: 'IO 11/7/2020 19:13:46'!
PASSED!

!testRun: #PortfolioTest #test18 stamp: 'IO 11/7/2020 19:13:46'!
PASSED!

!testRun: #PortfolioTest #test19 stamp: 'IO 11/7/2020 19:13:46'!
PASSED!

!testRun: #PortfolioTest #test20 stamp: 'IO 11/7/2020 19:13:46'!
PASSED!

!testRun: #PortfolioTest #test21 stamp: 'IO 11/7/2020 19:13:46'!
PASSED!

!testRun: #PortfolioTest #test22 stamp: 'IO 11/7/2020 19:13:46'!
PASSED!

!testRun: #PortfolioTest #test23 stamp: 'IO 11/7/2020 19:13:46'!
PASSED!

!testRun: #PortfolioTest #test24 stamp: 'IO 11/7/2020 19:13:46'!
PASSED!

!testRun: #PortfolioTest #test25 stamp: 'IO 11/7/2020 19:13:46'!
PASSED!

!testRun: #PortfolioTest #test26 stamp: 'IO 11/7/2020 19:13:46'!
ERROR!

!testRun: #PortfolioTest #test27 stamp: 'IO 11/7/2020 19:13:46'!
PASSED!

!testRun: #PortfolioTest #test26 stamp: 'IO 11/7/2020 19:13:46'!
ERROR!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'IO 11/7/2020 19:14:25' prior: 50876422!
hasRegistered: aDeposit 
	(accounts size > 0) ifTrue: [^accounts first hasRegistered: aDeposit] ifFalse: [^false].
! !

!testRun: #PortfolioTest #test01AnAccountCanBeAddedToAPortfolio stamp: 'IO 11/7/2020 19:14:26'!
PASSED!

!testRun: #PortfolioTest #test02APortfolioHasNoAccountsInitially stamp: 'IO 11/7/2020 19:14:26'!
PASSED!

!testRun: #PortfolioTest #test03APortfolioDoesNotHaveMoreAccountsThanAdded stamp: 'IO 11/7/2020 19:14:26'!
PASSED!

!testRun: #PortfolioTest #test04MoreThanOneAccountCanBeAddedToAPortfolio stamp: 'IO 11/7/2020 19:14:26'!
PASSED!

!testRun: #PortfolioTest #test05 stamp: 'IO 11/7/2020 19:14:26'!
PASSED!

!testRun: #PortfolioTest #test06 stamp: 'IO 11/7/2020 19:14:26'!
PASSED!

!testRun: #PortfolioTest #test07 stamp: 'IO 11/7/2020 19:14:26'!
PASSED!

!testRun: #PortfolioTest #test08 stamp: 'IO 11/7/2020 19:14:26'!
PASSED!

!testRun: #PortfolioTest #test09 stamp: 'IO 11/7/2020 19:14:26'!
PASSED!

!testRun: #PortfolioTest #test10 stamp: 'IO 11/7/2020 19:14:26'!
PASSED!

!testRun: #PortfolioTest #test11 stamp: 'IO 11/7/2020 19:14:26'!
PASSED!

!testRun: #PortfolioTest #test12 stamp: 'IO 11/7/2020 19:14:26'!
PASSED!

!testRun: #PortfolioTest #test13 stamp: 'IO 11/7/2020 19:14:26'!
PASSED!

!testRun: #PortfolioTest #test14 stamp: 'IO 11/7/2020 19:14:26'!
PASSED!

!testRun: #PortfolioTest #test15 stamp: 'IO 11/7/2020 19:14:26'!
PASSED!

!testRun: #PortfolioTest #test16 stamp: 'IO 11/7/2020 19:14:26'!
PASSED!

!testRun: #PortfolioTest #test17 stamp: 'IO 11/7/2020 19:14:26'!
PASSED!

!testRun: #PortfolioTest #test18 stamp: 'IO 11/7/2020 19:14:26'!
PASSED!

!testRun: #PortfolioTest #test19 stamp: 'IO 11/7/2020 19:14:26'!
PASSED!

!testRun: #PortfolioTest #test20 stamp: 'IO 11/7/2020 19:14:26'!
PASSED!

!testRun: #PortfolioTest #test21 stamp: 'IO 11/7/2020 19:14:26'!
PASSED!

!testRun: #PortfolioTest #test22 stamp: 'IO 11/7/2020 19:14:26'!
PASSED!

!testRun: #PortfolioTest #test23 stamp: 'IO 11/7/2020 19:14:26'!
PASSED!

!testRun: #PortfolioTest #test24 stamp: 'IO 11/7/2020 19:14:26'!
PASSED!

!testRun: #PortfolioTest #test25 stamp: 'IO 11/7/2020 19:14:26'!
PASSED!

!testRun: #PortfolioTest #test26 stamp: 'IO 11/7/2020 19:14:26'!
PASSED!

!testRun: #PortfolioTest #test27 stamp: 'IO 11/7/2020 19:14:26'!
PASSED!
!PortfolioTest methodsFor: 'has registered' stamp: 'IO 11/7/2020 19:15:41'!
test28

	"un portfolio con varias cuentas registro todas sus transacciones"
	
	| deposit1 deposit2 withdraw1 withdraw2 account1 account2 portfolio1 |
	
	account1 := ReceptiveAccount new.
	account2 := ReceptiveAccount new.

	deposit1 :=  Deposit register: 100 on: account1.
	withdraw1 := Withdraw register: 50 on: account1.
	deposit2 :=  Deposit register: 30 on: account2.
	withdraw2 := Withdraw register: 20 on: account2.

	portfolio1 := Portfolio new.
	portfolio1 addAccount: account1.
	portfolio1 addAccount: account2.

	self assert: (portfolio1 hasRegistered: deposit1).
	self assert: (portfolio1 hasRegistered:withdraw1).
	self assert: (portfolio1 hasRegistered: deposit2).
	self assert: (portfolio1 hasRegistered:withdraw2).
! !

!testRun: #PortfolioTest #test28 stamp: 'IO 11/7/2020 19:15:42'!
FAILURE!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'IO 11/7/2020 19:16:56' prior: 50876497!
hasRegistered: aDeposit
	accounts do: [(accounts first hasRegistered: aDeposit) ifTrue: [^true]].
	^true.
! !

!testRun: #PortfolioTest #test01AnAccountCanBeAddedToAPortfolio stamp: 'IO 11/7/2020 19:16:57'!
PASSED!

!testRun: #PortfolioTest #test02APortfolioHasNoAccountsInitially stamp: 'IO 11/7/2020 19:16:57'!
PASSED!

!testRun: #PortfolioTest #test03APortfolioDoesNotHaveMoreAccountsThanAdded stamp: 'IO 11/7/2020 19:16:57'!
PASSED!

!testRun: #PortfolioTest #test04MoreThanOneAccountCanBeAddedToAPortfolio stamp: 'IO 11/7/2020 19:16:57'!
PASSED!

!testRun: #PortfolioTest #test05 stamp: 'IO 11/7/2020 19:16:57'!
PASSED!

!testRun: #PortfolioTest #test06 stamp: 'IO 11/7/2020 19:16:57'!
PASSED!

!testRun: #PortfolioTest #test07 stamp: 'IO 11/7/2020 19:16:57'!
PASSED!

!testRun: #PortfolioTest #test08 stamp: 'IO 11/7/2020 19:16:57'!
PASSED!

!testRun: #PortfolioTest #test09 stamp: 'IO 11/7/2020 19:16:57'!
PASSED!

!testRun: #PortfolioTest #test10 stamp: 'IO 11/7/2020 19:16:57'!
PASSED!

!testRun: #PortfolioTest #test11 stamp: 'IO 11/7/2020 19:16:57'!
PASSED!

!testRun: #PortfolioTest #test12 stamp: 'IO 11/7/2020 19:16:57'!
PASSED!

!testRun: #PortfolioTest #test13 stamp: 'IO 11/7/2020 19:16:57'!
PASSED!

!testRun: #PortfolioTest #test14 stamp: 'IO 11/7/2020 19:16:57'!
PASSED!

!testRun: #PortfolioTest #test15 stamp: 'IO 11/7/2020 19:16:57'!
PASSED!

!testRun: #PortfolioTest #test16 stamp: 'IO 11/7/2020 19:16:57'!
PASSED!

!testRun: #PortfolioTest #test17 stamp: 'IO 11/7/2020 19:16:57'!
PASSED!

!testRun: #PortfolioTest #test18 stamp: 'IO 11/7/2020 19:16:57'!
PASSED!

!testRun: #PortfolioTest #test19 stamp: 'IO 11/7/2020 19:16:57'!
PASSED!

!testRun: #PortfolioTest #test20 stamp: 'IO 11/7/2020 19:16:57'!
PASSED!

!testRun: #PortfolioTest #test21 stamp: 'IO 11/7/2020 19:16:57'!
PASSED!

!testRun: #PortfolioTest #test22 stamp: 'IO 11/7/2020 19:16:57'!
PASSED!

!testRun: #PortfolioTest #test23 stamp: 'IO 11/7/2020 19:16:57'!
PASSED!

!testRun: #PortfolioTest #test24 stamp: 'IO 11/7/2020 19:16:57'!
PASSED!

!testRun: #PortfolioTest #test25 stamp: 'IO 11/7/2020 19:16:57'!
PASSED!

!testRun: #PortfolioTest #test26 stamp: 'IO 11/7/2020 19:16:57'!
FAILURE!

!testRun: #PortfolioTest #test27 stamp: 'IO 11/7/2020 19:16:57'!
ERROR!

!testRun: #PortfolioTest #test28 stamp: 'IO 11/7/2020 19:16:57'!
ERROR!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'IO 11/7/2020 19:17:01' prior: 50876600!
hasRegistered: aDeposit
	accounts do: [(accounts first hasRegistered: aDeposit) ifTrue: [^true]].
	^false.
! !

!testRun: #PortfolioTest #test01AnAccountCanBeAddedToAPortfolio stamp: 'IO 11/7/2020 19:17:02'!
PASSED!

!testRun: #PortfolioTest #test02APortfolioHasNoAccountsInitially stamp: 'IO 11/7/2020 19:17:02'!
PASSED!

!testRun: #PortfolioTest #test03APortfolioDoesNotHaveMoreAccountsThanAdded stamp: 'IO 11/7/2020 19:17:02'!
PASSED!

!testRun: #PortfolioTest #test04MoreThanOneAccountCanBeAddedToAPortfolio stamp: 'IO 11/7/2020 19:17:02'!
PASSED!

!testRun: #PortfolioTest #test05 stamp: 'IO 11/7/2020 19:17:02'!
PASSED!

!testRun: #PortfolioTest #test06 stamp: 'IO 11/7/2020 19:17:02'!
PASSED!

!testRun: #PortfolioTest #test07 stamp: 'IO 11/7/2020 19:17:02'!
PASSED!

!testRun: #PortfolioTest #test08 stamp: 'IO 11/7/2020 19:17:02'!
PASSED!

!testRun: #PortfolioTest #test09 stamp: 'IO 11/7/2020 19:17:02'!
PASSED!

!testRun: #PortfolioTest #test10 stamp: 'IO 11/7/2020 19:17:02'!
PASSED!

!testRun: #PortfolioTest #test11 stamp: 'IO 11/7/2020 19:17:02'!
PASSED!

!testRun: #PortfolioTest #test12 stamp: 'IO 11/7/2020 19:17:02'!
PASSED!

!testRun: #PortfolioTest #test13 stamp: 'IO 11/7/2020 19:17:02'!
PASSED!

!testRun: #PortfolioTest #test14 stamp: 'IO 11/7/2020 19:17:02'!
PASSED!

!testRun: #PortfolioTest #test15 stamp: 'IO 11/7/2020 19:17:02'!
PASSED!

!testRun: #PortfolioTest #test16 stamp: 'IO 11/7/2020 19:17:02'!
PASSED!

!testRun: #PortfolioTest #test17 stamp: 'IO 11/7/2020 19:17:02'!
PASSED!

!testRun: #PortfolioTest #test18 stamp: 'IO 11/7/2020 19:17:02'!
PASSED!

!testRun: #PortfolioTest #test19 stamp: 'IO 11/7/2020 19:17:02'!
PASSED!

!testRun: #PortfolioTest #test20 stamp: 'IO 11/7/2020 19:17:02'!
PASSED!

!testRun: #PortfolioTest #test21 stamp: 'IO 11/7/2020 19:17:02'!
PASSED!

!testRun: #PortfolioTest #test22 stamp: 'IO 11/7/2020 19:17:02'!
PASSED!

!testRun: #PortfolioTest #test23 stamp: 'IO 11/7/2020 19:17:02'!
PASSED!

!testRun: #PortfolioTest #test24 stamp: 'IO 11/7/2020 19:17:02'!
PASSED!

!testRun: #PortfolioTest #test25 stamp: 'IO 11/7/2020 19:17:02'!
PASSED!

!testRun: #PortfolioTest #test26 stamp: 'IO 11/7/2020 19:17:02'!
PASSED!

!testRun: #PortfolioTest #test27 stamp: 'IO 11/7/2020 19:17:02'!
ERROR!

!testRun: #PortfolioTest #test28 stamp: 'IO 11/7/2020 19:17:02'!
ERROR!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'IO 11/7/2020 19:17:17' prior: 50876676!
hasRegistered: aDeposit
	accounts do: [ :account | (account hasRegistered: aDeposit) ifTrue: [^true]].
	^false.
! !

!testRun: #PortfolioTest #test01AnAccountCanBeAddedToAPortfolio stamp: 'IO 11/7/2020 19:17:18'!
PASSED!

!testRun: #PortfolioTest #test02APortfolioHasNoAccountsInitially stamp: 'IO 11/7/2020 19:17:18'!
PASSED!

!testRun: #PortfolioTest #test03APortfolioDoesNotHaveMoreAccountsThanAdded stamp: 'IO 11/7/2020 19:17:18'!
PASSED!

!testRun: #PortfolioTest #test04MoreThanOneAccountCanBeAddedToAPortfolio stamp: 'IO 11/7/2020 19:17:18'!
PASSED!

!testRun: #PortfolioTest #test05 stamp: 'IO 11/7/2020 19:17:18'!
PASSED!

!testRun: #PortfolioTest #test06 stamp: 'IO 11/7/2020 19:17:18'!
PASSED!

!testRun: #PortfolioTest #test07 stamp: 'IO 11/7/2020 19:17:18'!
PASSED!

!testRun: #PortfolioTest #test08 stamp: 'IO 11/7/2020 19:17:18'!
PASSED!

!testRun: #PortfolioTest #test09 stamp: 'IO 11/7/2020 19:17:18'!
PASSED!

!testRun: #PortfolioTest #test10 stamp: 'IO 11/7/2020 19:17:18'!
PASSED!

!testRun: #PortfolioTest #test11 stamp: 'IO 11/7/2020 19:17:18'!
PASSED!

!testRun: #PortfolioTest #test12 stamp: 'IO 11/7/2020 19:17:18'!
PASSED!

!testRun: #PortfolioTest #test13 stamp: 'IO 11/7/2020 19:17:18'!
PASSED!

!testRun: #PortfolioTest #test14 stamp: 'IO 11/7/2020 19:17:18'!
PASSED!

!testRun: #PortfolioTest #test15 stamp: 'IO 11/7/2020 19:17:18'!
PASSED!

!testRun: #PortfolioTest #test16 stamp: 'IO 11/7/2020 19:17:18'!
PASSED!

!testRun: #PortfolioTest #test17 stamp: 'IO 11/7/2020 19:17:18'!
PASSED!

!testRun: #PortfolioTest #test18 stamp: 'IO 11/7/2020 19:17:18'!
PASSED!

!testRun: #PortfolioTest #test19 stamp: 'IO 11/7/2020 19:17:18'!
PASSED!

!testRun: #PortfolioTest #test20 stamp: 'IO 11/7/2020 19:17:18'!
PASSED!

!testRun: #PortfolioTest #test21 stamp: 'IO 11/7/2020 19:17:18'!
PASSED!

!testRun: #PortfolioTest #test22 stamp: 'IO 11/7/2020 19:17:18'!
PASSED!

!testRun: #PortfolioTest #test23 stamp: 'IO 11/7/2020 19:17:18'!
PASSED!

!testRun: #PortfolioTest #test24 stamp: 'IO 11/7/2020 19:17:18'!
PASSED!

!testRun: #PortfolioTest #test25 stamp: 'IO 11/7/2020 19:17:18'!
PASSED!

!testRun: #PortfolioTest #test26 stamp: 'IO 11/7/2020 19:17:18'!
PASSED!

!testRun: #PortfolioTest #test27 stamp: 'IO 11/7/2020 19:17:18'!
PASSED!

!testRun: #PortfolioTest #test28 stamp: 'IO 11/7/2020 19:17:18'!
PASSED!
!PortfolioTest methodsFor: 'has registered' stamp: 'IO 11/7/2020 19:18:08'!
test29

	"un portfolio con varias cuentas en sus portfolios registro todas sus transacciones"
	
	| deposit1 deposit2 withdraw1 withdraw2 account1 account2 portfolio1 portfolio2 |
	
	account1 := ReceptiveAccount new.
	account2 := ReceptiveAccount new.

	deposit1 :=  Deposit register: 100 on: account1.
	withdraw1 := Withdraw register: 50 on: account1.
	deposit2 :=  Deposit register: 30 on: account2.
	withdraw2 := Withdraw register: 20 on: account2.

	portfolio1 := Portfolio new.
	portfolio2 := Portfolio new.
	portfolio1 addPortfolio: portfolio2.
	portfolio1 addAccount: account1.
	portfolio1 addAccount: account2.

	self assert: (portfolio2 hasRegistered: deposit1).
	self assert: (portfolio2 hasRegistered:withdraw1).
	self assert: (portfolio2 hasRegistered: deposit2).
	self assert: (portfolio2 hasRegistered:withdraw2).
! !

!testRun: #PortfolioTest #test29 stamp: 'IO 11/7/2020 19:18:12'!
FAILURE!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'IO 11/7/2020 19:18:44' prior: 50876752!
hasRegistered: aDeposit
	accounts do: [ :account | (account hasRegistered: aDeposit) ifTrue: [^true]].
	portfolios do: [ :portfolio | (portfolio hasRegistered: aDeposit) ifTrue: [^true]].
	^false.
! !

!testRun: #PortfolioTest #test01AnAccountCanBeAddedToAPortfolio stamp: 'IO 11/7/2020 19:18:45'!
PASSED!

!testRun: #PortfolioTest #test02APortfolioHasNoAccountsInitially stamp: 'IO 11/7/2020 19:18:45'!
PASSED!

!testRun: #PortfolioTest #test03APortfolioDoesNotHaveMoreAccountsThanAdded stamp: 'IO 11/7/2020 19:18:45'!
PASSED!

!testRun: #PortfolioTest #test04MoreThanOneAccountCanBeAddedToAPortfolio stamp: 'IO 11/7/2020 19:18:45'!
PASSED!

!testRun: #PortfolioTest #test05 stamp: 'IO 11/7/2020 19:18:45'!
PASSED!

!testRun: #PortfolioTest #test06 stamp: 'IO 11/7/2020 19:18:45'!
PASSED!

!testRun: #PortfolioTest #test07 stamp: 'IO 11/7/2020 19:18:45'!
PASSED!

!testRun: #PortfolioTest #test08 stamp: 'IO 11/7/2020 19:18:45'!
PASSED!

!testRun: #PortfolioTest #test09 stamp: 'IO 11/7/2020 19:18:45'!
PASSED!

!testRun: #PortfolioTest #test10 stamp: 'IO 11/7/2020 19:18:45'!
PASSED!

!testRun: #PortfolioTest #test11 stamp: 'IO 11/7/2020 19:18:45'!
PASSED!

!testRun: #PortfolioTest #test12 stamp: 'IO 11/7/2020 19:18:45'!
PASSED!

!testRun: #PortfolioTest #test13 stamp: 'IO 11/7/2020 19:18:45'!
PASSED!

!testRun: #PortfolioTest #test14 stamp: 'IO 11/7/2020 19:18:45'!
PASSED!

!testRun: #PortfolioTest #test15 stamp: 'IO 11/7/2020 19:18:45'!
PASSED!

!testRun: #PortfolioTest #test16 stamp: 'IO 11/7/2020 19:18:45'!
PASSED!

!testRun: #PortfolioTest #test17 stamp: 'IO 11/7/2020 19:18:45'!
PASSED!

!testRun: #PortfolioTest #test18 stamp: 'IO 11/7/2020 19:18:45'!
PASSED!

!testRun: #PortfolioTest #test19 stamp: 'IO 11/7/2020 19:18:45'!
PASSED!

!testRun: #PortfolioTest #test20 stamp: 'IO 11/7/2020 19:18:45'!
PASSED!

!testRun: #PortfolioTest #test21 stamp: 'IO 11/7/2020 19:18:45'!
PASSED!

!testRun: #PortfolioTest #test22 stamp: 'IO 11/7/2020 19:18:45'!
PASSED!

!testRun: #PortfolioTest #test23 stamp: 'IO 11/7/2020 19:18:45'!
PASSED!

!testRun: #PortfolioTest #test24 stamp: 'IO 11/7/2020 19:18:45'!
PASSED!

!testRun: #PortfolioTest #test25 stamp: 'IO 11/7/2020 19:18:45'!
PASSED!

!testRun: #PortfolioTest #test26 stamp: 'IO 11/7/2020 19:18:45'!
PASSED!

!testRun: #PortfolioTest #test27 stamp: 'IO 11/7/2020 19:18:45'!
PASSED!

!testRun: #PortfolioTest #test28 stamp: 'IO 11/7/2020 19:18:45'!
PASSED!

!testRun: #PortfolioTest #test29 stamp: 'IO 11/7/2020 19:18:45'!
FAILURE!

!testRun: #PortfolioTest #test29 stamp: 'IO 11/7/2020 19:18:45'!
FAILURE!
!PortfolioTest methodsFor: 'has registered' stamp: 'IO 11/7/2020 19:19:19' prior: 50876828!
test29

	"un portfolio con varias cuentas en sus portfolios registro todas sus transacciones"
	
	| deposit1 deposit2 withdraw1 withdraw2 account1 account2 portfolio1 portfolio2 |
	
	account1 := ReceptiveAccount new.
	account2 := ReceptiveAccount new.

	deposit1 :=  Deposit register: 100 on: account1.
	withdraw1 := Withdraw register: 50 on: account1.
	deposit2 :=  Deposit register: 30 on: account2.
	withdraw2 := Withdraw register: 20 on: account2.

	portfolio1 := Portfolio new.
	portfolio2 := Portfolio new.
	portfolio2 addPortfolio: portfolio1.
	portfolio1 addAccount: account1.
	portfolio1 addAccount: account2.

	self assert: (portfolio2 hasRegistered: deposit1).
	self assert: (portfolio2 hasRegistered:withdraw1).
	self assert: (portfolio2 hasRegistered: deposit2).
	self assert: (portfolio2 hasRegistered:withdraw2).
! !

!testRun: #PortfolioTest #test29 stamp: 'IO 11/7/2020 19:19:20'!
PASSED!

!testRun: #PortfolioTest #test01AnAccountCanBeAddedToAPortfolio stamp: 'IO 11/7/2020 19:19:20'!
PASSED!

!testRun: #PortfolioTest #test02APortfolioHasNoAccountsInitially stamp: 'IO 11/7/2020 19:19:20'!
PASSED!

!testRun: #PortfolioTest #test03APortfolioDoesNotHaveMoreAccountsThanAdded stamp: 'IO 11/7/2020 19:19:20'!
PASSED!

!testRun: #PortfolioTest #test04MoreThanOneAccountCanBeAddedToAPortfolio stamp: 'IO 11/7/2020 19:19:20'!
PASSED!

!testRun: #PortfolioTest #test05 stamp: 'IO 11/7/2020 19:19:20'!
PASSED!

!testRun: #PortfolioTest #test06 stamp: 'IO 11/7/2020 19:19:20'!
PASSED!

!testRun: #PortfolioTest #test07 stamp: 'IO 11/7/2020 19:19:20'!
PASSED!

!testRun: #PortfolioTest #test08 stamp: 'IO 11/7/2020 19:19:20'!
PASSED!

!testRun: #PortfolioTest #test09 stamp: 'IO 11/7/2020 19:19:20'!
PASSED!

!testRun: #PortfolioTest #test10 stamp: 'IO 11/7/2020 19:19:20'!
PASSED!

!testRun: #PortfolioTest #test11 stamp: 'IO 11/7/2020 19:19:20'!
PASSED!

!testRun: #PortfolioTest #test12 stamp: 'IO 11/7/2020 19:19:20'!
PASSED!

!testRun: #PortfolioTest #test13 stamp: 'IO 11/7/2020 19:19:20'!
PASSED!

!testRun: #PortfolioTest #test14 stamp: 'IO 11/7/2020 19:19:20'!
PASSED!

!testRun: #PortfolioTest #test15 stamp: 'IO 11/7/2020 19:19:20'!
PASSED!

!testRun: #PortfolioTest #test16 stamp: 'IO 11/7/2020 19:19:20'!
PASSED!

!testRun: #PortfolioTest #test17 stamp: 'IO 11/7/2020 19:19:20'!
PASSED!

!testRun: #PortfolioTest #test18 stamp: 'IO 11/7/2020 19:19:20'!
PASSED!

!testRun: #PortfolioTest #test19 stamp: 'IO 11/7/2020 19:19:20'!
PASSED!

!testRun: #PortfolioTest #test20 stamp: 'IO 11/7/2020 19:19:20'!
PASSED!

!testRun: #PortfolioTest #test21 stamp: 'IO 11/7/2020 19:19:20'!
PASSED!

!testRun: #PortfolioTest #test22 stamp: 'IO 11/7/2020 19:19:20'!
PASSED!

!testRun: #PortfolioTest #test23 stamp: 'IO 11/7/2020 19:19:20'!
PASSED!

!testRun: #PortfolioTest #test24 stamp: 'IO 11/7/2020 19:19:20'!
PASSED!

!testRun: #PortfolioTest #test25 stamp: 'IO 11/7/2020 19:19:20'!
PASSED!

!testRun: #PortfolioTest #test26 stamp: 'IO 11/7/2020 19:19:20'!
PASSED!

!testRun: #PortfolioTest #test27 stamp: 'IO 11/7/2020 19:19:20'!
PASSED!

!testRun: #PortfolioTest #test28 stamp: 'IO 11/7/2020 19:19:20'!
PASSED!

!testRun: #PortfolioTest #test29 stamp: 'IO 11/7/2020 19:19:20'!
PASSED!
!PortfolioTest methodsFor: 'has registered' stamp: 'IO 11/7/2020 19:19:27' prior: 50876944!
test29

	"un portfolio con varias cuentas en sus portfolios registro todas sus transacciones"
	
	| deposit1 deposit2 withdraw1 withdraw2 account1 account2 portfolio1 portfolio2 |
	
	account1 := ReceptiveAccount new.
	account2 := ReceptiveAccount new.

	deposit1 :=  Deposit register: 100 on: account1.
	withdraw1 := Withdraw register: 50 on: account1.
	deposit2 :=  Deposit register: 30 on: account2.
	withdraw2 := Withdraw register: 20 on: account2.

	portfolio1 := Portfolio new.
	portfolio2 := Portfolio new.

	portfolio1 addAccount: account1.
	portfolio1 addAccount: account2.
	
	portfolio2 addPortfolio: portfolio1.

	self assert: (portfolio2 hasRegistered: deposit1).
	self assert: (portfolio2 hasRegistered:withdraw1).
	self assert: (portfolio2 hasRegistered: deposit2).
	self assert: (portfolio2 hasRegistered:withdraw2).
! !

!testRun: #PortfolioTest #test29 stamp: 'IO 11/7/2020 19:19:28'!
PASSED!

!testRun: #PortfolioTest #test01AnAccountCanBeAddedToAPortfolio stamp: 'IO 11/7/2020 19:19:28'!
PASSED!

!testRun: #PortfolioTest #test02APortfolioHasNoAccountsInitially stamp: 'IO 11/7/2020 19:19:28'!
PASSED!

!testRun: #PortfolioTest #test03APortfolioDoesNotHaveMoreAccountsThanAdded stamp: 'IO 11/7/2020 19:19:28'!
PASSED!

!testRun: #PortfolioTest #test04MoreThanOneAccountCanBeAddedToAPortfolio stamp: 'IO 11/7/2020 19:19:28'!
PASSED!

!testRun: #PortfolioTest #test05 stamp: 'IO 11/7/2020 19:19:28'!
PASSED!

!testRun: #PortfolioTest #test06 stamp: 'IO 11/7/2020 19:19:28'!
PASSED!

!testRun: #PortfolioTest #test07 stamp: 'IO 11/7/2020 19:19:28'!
PASSED!

!testRun: #PortfolioTest #test08 stamp: 'IO 11/7/2020 19:19:28'!
PASSED!

!testRun: #PortfolioTest #test09 stamp: 'IO 11/7/2020 19:19:28'!
PASSED!

!testRun: #PortfolioTest #test10 stamp: 'IO 11/7/2020 19:19:28'!
PASSED!

!testRun: #PortfolioTest #test11 stamp: 'IO 11/7/2020 19:19:28'!
PASSED!

!testRun: #PortfolioTest #test12 stamp: 'IO 11/7/2020 19:19:28'!
PASSED!

!testRun: #PortfolioTest #test13 stamp: 'IO 11/7/2020 19:19:28'!
PASSED!

!testRun: #PortfolioTest #test14 stamp: 'IO 11/7/2020 19:19:28'!
PASSED!

!testRun: #PortfolioTest #test15 stamp: 'IO 11/7/2020 19:19:28'!
PASSED!

!testRun: #PortfolioTest #test16 stamp: 'IO 11/7/2020 19:19:28'!
PASSED!

!testRun: #PortfolioTest #test17 stamp: 'IO 11/7/2020 19:19:28'!
PASSED!

!testRun: #PortfolioTest #test18 stamp: 'IO 11/7/2020 19:19:28'!
PASSED!

!testRun: #PortfolioTest #test19 stamp: 'IO 11/7/2020 19:19:28'!
PASSED!

!testRun: #PortfolioTest #test20 stamp: 'IO 11/7/2020 19:19:28'!
PASSED!

!testRun: #PortfolioTest #test21 stamp: 'IO 11/7/2020 19:19:28'!
PASSED!

!testRun: #PortfolioTest #test22 stamp: 'IO 11/7/2020 19:19:28'!
PASSED!

!testRun: #PortfolioTest #test23 stamp: 'IO 11/7/2020 19:19:28'!
PASSED!

!testRun: #PortfolioTest #test24 stamp: 'IO 11/7/2020 19:19:28'!
PASSED!

!testRun: #PortfolioTest #test25 stamp: 'IO 11/7/2020 19:19:28'!
PASSED!

!testRun: #PortfolioTest #test26 stamp: 'IO 11/7/2020 19:19:28'!
PASSED!

!testRun: #PortfolioTest #test27 stamp: 'IO 11/7/2020 19:19:28'!
PASSED!

!testRun: #PortfolioTest #test28 stamp: 'IO 11/7/2020 19:19:28'!
PASSED!

!testRun: #PortfolioTest #test29 stamp: 'IO 11/7/2020 19:19:28'!
PASSED!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'IO 11/7/2020 19:21:07'!
accountsAndPortfoliosDo: anAction
	accounts do: [ :account | anAction value.].
	portfolios do: [ :portfolio | anAction value.].
! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'IO 11/7/2020 19:21:44' prior: 50877150!
accountsAndPortfoliosDo: anAction
	accounts do: [ anAction value.].
	portfolios do: [ anAction value.].
! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'IO 11/7/2020 19:22:33' prior: 50877158!
accountsAndPortfoliosDo: anAction
	accounts do: [ :account | anAction value: account.].
	portfolios do: [ :portfolio | anAction value: portfolio.].
! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'IO 11/7/2020 19:23:14' prior: 50876231!
balance
	| balance |
	balance := 0.
	self accountsAndPortfoliosDo: [ :aThing | balance := balance + aThing balance]
	^balance.
! !

!testRun: #PortfolioTest #test01AnAccountCanBeAddedToAPortfolio stamp: 'IO 11/7/2020 19:23:15'!
PASSED!

!testRun: #PortfolioTest #test02APortfolioHasNoAccountsInitially stamp: 'IO 11/7/2020 19:23:15'!
PASSED!

!testRun: #PortfolioTest #test03APortfolioDoesNotHaveMoreAccountsThanAdded stamp: 'IO 11/7/2020 19:23:15'!
PASSED!

!testRun: #PortfolioTest #test04MoreThanOneAccountCanBeAddedToAPortfolio stamp: 'IO 11/7/2020 19:23:15'!
PASSED!

!testRun: #PortfolioTest #test05 stamp: 'IO 11/7/2020 19:23:15'!
PASSED!

!testRun: #PortfolioTest #test06 stamp: 'IO 11/7/2020 19:23:15'!
PASSED!

!testRun: #PortfolioTest #test07 stamp: 'IO 11/7/2020 19:23:15'!
PASSED!

!testRun: #PortfolioTest #test08 stamp: 'IO 11/7/2020 19:23:15'!
PASSED!

!testRun: #PortfolioTest #test09 stamp: 'IO 11/7/2020 19:23:15'!
PASSED!

!testRun: #PortfolioTest #test10 stamp: 'IO 11/7/2020 19:23:15'!
PASSED!

!testRun: #PortfolioTest #test11 stamp: 'IO 11/7/2020 19:23:15'!
PASSED!

!testRun: #PortfolioTest #test12 stamp: 'IO 11/7/2020 19:23:15'!
PASSED!

!testRun: #PortfolioTest #test13 stamp: 'IO 11/7/2020 19:23:15'!
PASSED!

!testRun: #PortfolioTest #test14 stamp: 'IO 11/7/2020 19:23:15'!
PASSED!

!testRun: #PortfolioTest #test15 stamp: 'IO 11/7/2020 19:23:15'!
PASSED!

!testRun: #PortfolioTest #test16 stamp: 'IO 11/7/2020 19:23:15'!
PASSED!

!testRun: #PortfolioTest #test17 stamp: 'IO 11/7/2020 19:23:15'!
PASSED!

!testRun: #PortfolioTest #test18 stamp: 'IO 11/7/2020 19:23:15'!
PASSED!

!testRun: #PortfolioTest #test19 stamp: 'IO 11/7/2020 19:23:15'!
PASSED!

!testRun: #PortfolioTest #test20 stamp: 'IO 11/7/2020 19:23:15'!
PASSED!

!testRun: #PortfolioTest #test21 stamp: 'IO 11/7/2020 19:23:15'!
PASSED!

!testRun: #PortfolioTest #test22 stamp: 'IO 11/7/2020 19:23:15'!
ERROR!

!testRun: #PortfolioTest #test23 stamp: 'IO 11/7/2020 19:23:15'!
ERROR!

!testRun: #PortfolioTest #test24 stamp: 'IO 11/7/2020 19:23:15'!
ERROR!

!testRun: #PortfolioTest #test25 stamp: 'IO 11/7/2020 19:23:15'!
ERROR!

!testRun: #PortfolioTest #test26 stamp: 'IO 11/7/2020 19:23:15'!
PASSED!

!testRun: #PortfolioTest #test27 stamp: 'IO 11/7/2020 19:23:15'!
PASSED!

!testRun: #PortfolioTest #test28 stamp: 'IO 11/7/2020 19:23:15'!
PASSED!

!testRun: #PortfolioTest #test29 stamp: 'IO 11/7/2020 19:23:15'!
PASSED!

!testRun: #PortfolioTest #test22 stamp: 'IO 11/7/2020 19:23:33'!
ERROR!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'IO 11/7/2020 19:23:48' prior: 50877165!
accountsAndPortfoliosDo: anAction
	accounts do: [ :account | anAction value: account.].
	portfolios do: [ :portfolio | anAction value: portfolio.].
! !

!testRun: #PortfolioTest #test01AnAccountCanBeAddedToAPortfolio stamp: 'IO 11/7/2020 19:23:50'!
PASSED!

!testRun: #PortfolioTest #test02APortfolioHasNoAccountsInitially stamp: 'IO 11/7/2020 19:23:50'!
PASSED!

!testRun: #PortfolioTest #test03APortfolioDoesNotHaveMoreAccountsThanAdded stamp: 'IO 11/7/2020 19:23:50'!
PASSED!

!testRun: #PortfolioTest #test04MoreThanOneAccountCanBeAddedToAPortfolio stamp: 'IO 11/7/2020 19:23:50'!
PASSED!

!testRun: #PortfolioTest #test05 stamp: 'IO 11/7/2020 19:23:50'!
PASSED!

!testRun: #PortfolioTest #test06 stamp: 'IO 11/7/2020 19:23:50'!
PASSED!

!testRun: #PortfolioTest #test07 stamp: 'IO 11/7/2020 19:23:50'!
PASSED!

!testRun: #PortfolioTest #test08 stamp: 'IO 11/7/2020 19:23:50'!
PASSED!

!testRun: #PortfolioTest #test09 stamp: 'IO 11/7/2020 19:23:50'!
PASSED!

!testRun: #PortfolioTest #test10 stamp: 'IO 11/7/2020 19:23:50'!
PASSED!

!testRun: #PortfolioTest #test11 stamp: 'IO 11/7/2020 19:23:50'!
PASSED!

!testRun: #PortfolioTest #test12 stamp: 'IO 11/7/2020 19:23:50'!
PASSED!

!testRun: #PortfolioTest #test13 stamp: 'IO 11/7/2020 19:23:50'!
PASSED!

!testRun: #PortfolioTest #test14 stamp: 'IO 11/7/2020 19:23:50'!
PASSED!

!testRun: #PortfolioTest #test15 stamp: 'IO 11/7/2020 19:23:50'!
PASSED!

!testRun: #PortfolioTest #test16 stamp: 'IO 11/7/2020 19:23:50'!
PASSED!

!testRun: #PortfolioTest #test17 stamp: 'IO 11/7/2020 19:23:50'!
PASSED!

!testRun: #PortfolioTest #test18 stamp: 'IO 11/7/2020 19:23:50'!
PASSED!

!testRun: #PortfolioTest #test19 stamp: 'IO 11/7/2020 19:23:50'!
PASSED!

!testRun: #PortfolioTest #test20 stamp: 'IO 11/7/2020 19:23:50'!
PASSED!

!testRun: #PortfolioTest #test21 stamp: 'IO 11/7/2020 19:23:50'!
PASSED!

!testRun: #PortfolioTest #test22 stamp: 'IO 11/7/2020 19:23:50'!
ERROR!

!testRun: #PortfolioTest #test23 stamp: 'IO 11/7/2020 19:23:50'!
ERROR!

!testRun: #PortfolioTest #test24 stamp: 'IO 11/7/2020 19:23:50'!
ERROR!

!testRun: #PortfolioTest #test25 stamp: 'IO 11/7/2020 19:23:50'!
ERROR!

!testRun: #PortfolioTest #test26 stamp: 'IO 11/7/2020 19:23:50'!
PASSED!

!testRun: #PortfolioTest #test27 stamp: 'IO 11/7/2020 19:23:50'!
PASSED!

!testRun: #PortfolioTest #test28 stamp: 'IO 11/7/2020 19:23:50'!
PASSED!

!testRun: #PortfolioTest #test29 stamp: 'IO 11/7/2020 19:23:50'!
PASSED!

!testRun: #PortfolioTest #test23 stamp: 'IO 11/7/2020 19:24:20'!
ERROR!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'IO 11/7/2020 19:24:46' prior: 50877173!
balance
	| balance |
	balance := 0.
	self accountsAndPortfoliosDo: [ :aThing | balance := balance + aThing balance].
	^balance.
! !

!testRun: #PortfolioTest #test01AnAccountCanBeAddedToAPortfolio stamp: 'IO 11/7/2020 19:24:57'!
PASSED!

!testRun: #PortfolioTest #test02APortfolioHasNoAccountsInitially stamp: 'IO 11/7/2020 19:24:57'!
PASSED!

!testRun: #PortfolioTest #test03APortfolioDoesNotHaveMoreAccountsThanAdded stamp: 'IO 11/7/2020 19:24:57'!
PASSED!

!testRun: #PortfolioTest #test04MoreThanOneAccountCanBeAddedToAPortfolio stamp: 'IO 11/7/2020 19:24:57'!
PASSED!

!testRun: #PortfolioTest #test05 stamp: 'IO 11/7/2020 19:24:57'!
PASSED!

!testRun: #PortfolioTest #test06 stamp: 'IO 11/7/2020 19:24:57'!
PASSED!

!testRun: #PortfolioTest #test07 stamp: 'IO 11/7/2020 19:24:57'!
PASSED!

!testRun: #PortfolioTest #test08 stamp: 'IO 11/7/2020 19:24:57'!
PASSED!

!testRun: #PortfolioTest #test09 stamp: 'IO 11/7/2020 19:24:57'!
PASSED!

!testRun: #PortfolioTest #test10 stamp: 'IO 11/7/2020 19:24:57'!
PASSED!

!testRun: #PortfolioTest #test11 stamp: 'IO 11/7/2020 19:24:57'!
PASSED!

!testRun: #PortfolioTest #test12 stamp: 'IO 11/7/2020 19:24:57'!
PASSED!

!testRun: #PortfolioTest #test13 stamp: 'IO 11/7/2020 19:24:57'!
PASSED!

!testRun: #PortfolioTest #test14 stamp: 'IO 11/7/2020 19:24:57'!
PASSED!

!testRun: #PortfolioTest #test15 stamp: 'IO 11/7/2020 19:24:57'!
PASSED!

!testRun: #PortfolioTest #test16 stamp: 'IO 11/7/2020 19:24:57'!
PASSED!

!testRun: #PortfolioTest #test17 stamp: 'IO 11/7/2020 19:24:57'!
PASSED!

!testRun: #PortfolioTest #test18 stamp: 'IO 11/7/2020 19:24:57'!
PASSED!

!testRun: #PortfolioTest #test19 stamp: 'IO 11/7/2020 19:24:57'!
PASSED!

!testRun: #PortfolioTest #test20 stamp: 'IO 11/7/2020 19:24:57'!
PASSED!

!testRun: #PortfolioTest #test21 stamp: 'IO 11/7/2020 19:24:57'!
PASSED!

!testRun: #PortfolioTest #test22 stamp: 'IO 11/7/2020 19:24:57'!
PASSED!

!testRun: #PortfolioTest #test23 stamp: 'IO 11/7/2020 19:24:57'!
PASSED!

!testRun: #PortfolioTest #test24 stamp: 'IO 11/7/2020 19:24:57'!
PASSED!

!testRun: #PortfolioTest #test25 stamp: 'IO 11/7/2020 19:24:57'!
PASSED!

!testRun: #PortfolioTest #test26 stamp: 'IO 11/7/2020 19:24:57'!
PASSED!

!testRun: #PortfolioTest #test27 stamp: 'IO 11/7/2020 19:24:57'!
PASSED!

!testRun: #PortfolioTest #test28 stamp: 'IO 11/7/2020 19:24:57'!
PASSED!

!testRun: #PortfolioTest #test29 stamp: 'IO 11/7/2020 19:24:57'!
PASSED!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'IO 11/7/2020 19:25:20' prior: 50876860!
hasRegistered: aDeposit
	self accountsAndPortfoliosDo: [ :account | (account hasRegistered: aDeposit) ifTrue: [^true]].
	^false.
! !

!testRun: #PortfolioTest #test01AnAccountCanBeAddedToAPortfolio stamp: 'IO 11/7/2020 19:25:21'!
PASSED!

!testRun: #PortfolioTest #test02APortfolioHasNoAccountsInitially stamp: 'IO 11/7/2020 19:25:21'!
PASSED!

!testRun: #PortfolioTest #test03APortfolioDoesNotHaveMoreAccountsThanAdded stamp: 'IO 11/7/2020 19:25:21'!
PASSED!

!testRun: #PortfolioTest #test04MoreThanOneAccountCanBeAddedToAPortfolio stamp: 'IO 11/7/2020 19:25:21'!
PASSED!

!testRun: #PortfolioTest #test05 stamp: 'IO 11/7/2020 19:25:21'!
PASSED!

!testRun: #PortfolioTest #test06 stamp: 'IO 11/7/2020 19:25:21'!
PASSED!

!testRun: #PortfolioTest #test07 stamp: 'IO 11/7/2020 19:25:21'!
PASSED!

!testRun: #PortfolioTest #test08 stamp: 'IO 11/7/2020 19:25:21'!
PASSED!

!testRun: #PortfolioTest #test09 stamp: 'IO 11/7/2020 19:25:21'!
PASSED!

!testRun: #PortfolioTest #test10 stamp: 'IO 11/7/2020 19:25:21'!
PASSED!

!testRun: #PortfolioTest #test11 stamp: 'IO 11/7/2020 19:25:21'!
PASSED!

!testRun: #PortfolioTest #test12 stamp: 'IO 11/7/2020 19:25:21'!
PASSED!

!testRun: #PortfolioTest #test13 stamp: 'IO 11/7/2020 19:25:21'!
PASSED!

!testRun: #PortfolioTest #test14 stamp: 'IO 11/7/2020 19:25:21'!
PASSED!

!testRun: #PortfolioTest #test15 stamp: 'IO 11/7/2020 19:25:21'!
PASSED!

!testRun: #PortfolioTest #test16 stamp: 'IO 11/7/2020 19:25:21'!
PASSED!

!testRun: #PortfolioTest #test17 stamp: 'IO 11/7/2020 19:25:21'!
PASSED!

!testRun: #PortfolioTest #test18 stamp: 'IO 11/7/2020 19:25:21'!
PASSED!

!testRun: #PortfolioTest #test19 stamp: 'IO 11/7/2020 19:25:21'!
PASSED!

!testRun: #PortfolioTest #test20 stamp: 'IO 11/7/2020 19:25:21'!
PASSED!

!testRun: #PortfolioTest #test21 stamp: 'IO 11/7/2020 19:25:21'!
PASSED!

!testRun: #PortfolioTest #test22 stamp: 'IO 11/7/2020 19:25:21'!
PASSED!

!testRun: #PortfolioTest #test23 stamp: 'IO 11/7/2020 19:25:21'!
PASSED!

!testRun: #PortfolioTest #test24 stamp: 'IO 11/7/2020 19:25:21'!
PASSED!

!testRun: #PortfolioTest #test25 stamp: 'IO 11/7/2020 19:25:21'!
PASSED!

!testRun: #PortfolioTest #test26 stamp: 'IO 11/7/2020 19:25:21'!
PASSED!

!testRun: #PortfolioTest #test27 stamp: 'IO 11/7/2020 19:25:21'!
PASSED!

!testRun: #PortfolioTest #test28 stamp: 'IO 11/7/2020 19:25:21'!
PASSED!

!testRun: #PortfolioTest #test29 stamp: 'IO 11/7/2020 19:25:21'!
PASSED!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'IO 11/7/2020 19:25:39' prior: 50877415!
hasRegistered: aDeposit
	self accountsAndPortfoliosDo: [ :aThing | (aThing hasRegistered: aDeposit) ifTrue: [^true]].
	^false.
! !

!testRun: #PortfolioTest #test01AnAccountCanBeAddedToAPortfolio stamp: 'IO 11/7/2020 19:25:40'!
PASSED!

!testRun: #PortfolioTest #test02APortfolioHasNoAccountsInitially stamp: 'IO 11/7/2020 19:25:40'!
PASSED!

!testRun: #PortfolioTest #test03APortfolioDoesNotHaveMoreAccountsThanAdded stamp: 'IO 11/7/2020 19:25:40'!
PASSED!

!testRun: #PortfolioTest #test04MoreThanOneAccountCanBeAddedToAPortfolio stamp: 'IO 11/7/2020 19:25:40'!
PASSED!

!testRun: #PortfolioTest #test05 stamp: 'IO 11/7/2020 19:25:40'!
PASSED!

!testRun: #PortfolioTest #test06 stamp: 'IO 11/7/2020 19:25:40'!
PASSED!

!testRun: #PortfolioTest #test07 stamp: 'IO 11/7/2020 19:25:40'!
PASSED!

!testRun: #PortfolioTest #test08 stamp: 'IO 11/7/2020 19:25:40'!
PASSED!

!testRun: #PortfolioTest #test09 stamp: 'IO 11/7/2020 19:25:40'!
PASSED!

!testRun: #PortfolioTest #test10 stamp: 'IO 11/7/2020 19:25:40'!
PASSED!

!testRun: #PortfolioTest #test11 stamp: 'IO 11/7/2020 19:25:40'!
PASSED!

!testRun: #PortfolioTest #test12 stamp: 'IO 11/7/2020 19:25:40'!
PASSED!

!testRun: #PortfolioTest #test13 stamp: 'IO 11/7/2020 19:25:40'!
PASSED!

!testRun: #PortfolioTest #test14 stamp: 'IO 11/7/2020 19:25:40'!
PASSED!

!testRun: #PortfolioTest #test15 stamp: 'IO 11/7/2020 19:25:40'!
PASSED!

!testRun: #PortfolioTest #test16 stamp: 'IO 11/7/2020 19:25:40'!
PASSED!

!testRun: #PortfolioTest #test17 stamp: 'IO 11/7/2020 19:25:40'!
PASSED!

!testRun: #PortfolioTest #test18 stamp: 'IO 11/7/2020 19:25:40'!
PASSED!

!testRun: #PortfolioTest #test19 stamp: 'IO 11/7/2020 19:25:40'!
PASSED!

!testRun: #PortfolioTest #test20 stamp: 'IO 11/7/2020 19:25:40'!
PASSED!

!testRun: #PortfolioTest #test21 stamp: 'IO 11/7/2020 19:25:40'!
PASSED!

!testRun: #PortfolioTest #test22 stamp: 'IO 11/7/2020 19:25:40'!
PASSED!

!testRun: #PortfolioTest #test23 stamp: 'IO 11/7/2020 19:25:40'!
PASSED!

!testRun: #PortfolioTest #test24 stamp: 'IO 11/7/2020 19:25:40'!
PASSED!

!testRun: #PortfolioTest #test25 stamp: 'IO 11/7/2020 19:25:40'!
PASSED!

!testRun: #PortfolioTest #test26 stamp: 'IO 11/7/2020 19:25:40'!
PASSED!

!testRun: #PortfolioTest #test27 stamp: 'IO 11/7/2020 19:25:40'!
PASSED!

!testRun: #PortfolioTest #test28 stamp: 'IO 11/7/2020 19:25:40'!
PASSED!

!testRun: #PortfolioTest #test29 stamp: 'IO 11/7/2020 19:25:40'!
PASSED!
!PortfolioTest methodsFor: 'has registered' stamp: 'IO 11/7/2020 19:27:08'!
test30

	"un portfolio vacio no tiene transacciones"
	
	| deposit portfolio1 |
	
	portfolio1 := Portfolio new.
		
	self assert: (portfolio1 transactions size) equals: 0.

! !

!testRun: #PortfolioTest #test30 stamp: 'IO 11/7/2020 19:27:14'!
ERROR!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'IO 11/7/2020 19:27:23'!
transactions
	self shouldBeImplemented.! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'IO 11/7/2020 19:27:34' prior: 50877584!
transactions
	^OrderedCollection new.! !

!testRun: #PortfolioTest #test30 stamp: 'IO 11/7/2020 19:27:39'!
PASSED!

!testRun: #PortfolioTest #test01AnAccountCanBeAddedToAPortfolio stamp: 'IO 11/7/2020 19:27:39'!
PASSED!

!testRun: #PortfolioTest #test02APortfolioHasNoAccountsInitially stamp: 'IO 11/7/2020 19:27:39'!
PASSED!

!testRun: #PortfolioTest #test03APortfolioDoesNotHaveMoreAccountsThanAdded stamp: 'IO 11/7/2020 19:27:39'!
PASSED!

!testRun: #PortfolioTest #test04MoreThanOneAccountCanBeAddedToAPortfolio stamp: 'IO 11/7/2020 19:27:39'!
PASSED!

!testRun: #PortfolioTest #test05 stamp: 'IO 11/7/2020 19:27:39'!
PASSED!

!testRun: #PortfolioTest #test06 stamp: 'IO 11/7/2020 19:27:39'!
PASSED!

!testRun: #PortfolioTest #test07 stamp: 'IO 11/7/2020 19:27:39'!
PASSED!

!testRun: #PortfolioTest #test08 stamp: 'IO 11/7/2020 19:27:39'!
PASSED!

!testRun: #PortfolioTest #test09 stamp: 'IO 11/7/2020 19:27:39'!
PASSED!

!testRun: #PortfolioTest #test10 stamp: 'IO 11/7/2020 19:27:39'!
PASSED!

!testRun: #PortfolioTest #test11 stamp: 'IO 11/7/2020 19:27:39'!
PASSED!

!testRun: #PortfolioTest #test12 stamp: 'IO 11/7/2020 19:27:39'!
PASSED!

!testRun: #PortfolioTest #test13 stamp: 'IO 11/7/2020 19:27:39'!
PASSED!

!testRun: #PortfolioTest #test14 stamp: 'IO 11/7/2020 19:27:39'!
PASSED!

!testRun: #PortfolioTest #test15 stamp: 'IO 11/7/2020 19:27:39'!
PASSED!

!testRun: #PortfolioTest #test16 stamp: 'IO 11/7/2020 19:27:39'!
PASSED!

!testRun: #PortfolioTest #test17 stamp: 'IO 11/7/2020 19:27:39'!
PASSED!

!testRun: #PortfolioTest #test18 stamp: 'IO 11/7/2020 19:27:39'!
PASSED!

!testRun: #PortfolioTest #test19 stamp: 'IO 11/7/2020 19:27:39'!
PASSED!

!testRun: #PortfolioTest #test20 stamp: 'IO 11/7/2020 19:27:39'!
PASSED!

!testRun: #PortfolioTest #test21 stamp: 'IO 11/7/2020 19:27:39'!
PASSED!

!testRun: #PortfolioTest #test22 stamp: 'IO 11/7/2020 19:27:39'!
PASSED!

!testRun: #PortfolioTest #test23 stamp: 'IO 11/7/2020 19:27:39'!
PASSED!

!testRun: #PortfolioTest #test24 stamp: 'IO 11/7/2020 19:27:39'!
PASSED!

!testRun: #PortfolioTest #test25 stamp: 'IO 11/7/2020 19:27:39'!
PASSED!

!testRun: #PortfolioTest #test26 stamp: 'IO 11/7/2020 19:27:39'!
PASSED!

!testRun: #PortfolioTest #test27 stamp: 'IO 11/7/2020 19:27:39'!
PASSED!

!testRun: #PortfolioTest #test28 stamp: 'IO 11/7/2020 19:27:39'!
PASSED!

!testRun: #PortfolioTest #test29 stamp: 'IO 11/7/2020 19:27:39'!
PASSED!

!testRun: #PortfolioTest #test30 stamp: 'IO 11/7/2020 19:27:39'!
PASSED!
!PortfolioTest methodsFor: 'transactions' stamp: 'IO 11/7/2020 19:28:17' prior: 50877573!
test30

	"un portfolio con una cuenta retorna sus transacciones"
	
	| portfolio1 |
	
	portfolio1 := Portfolio new.
		
	self assert: (portfolio1 transactions size) equals: 0.

! !
!PortfolioTest methodsFor: 'transactions' stamp: 'IO 11/7/2020 19:28:28'!
test31

	"un portfolio con una cuenta retorna sus transacciones"
	
	| portfolio1 |
	
	portfolio1 := Portfolio new.
		
	self assert: (portfolio1 transactions size) equals: 0.

! !
!PortfolioTest methodsFor: 'transactions' stamp: 'IO 11/7/2020 19:28:41' prior: 50877670!
test30

	"un portfolio vacio no tiene transacciones"
	
	| portfolio1 |
	
	portfolio1 := Portfolio new.
		
	self assert: (portfolio1 transactions size) equals: 0.

! !

!testRun: #PortfolioTest #test30 stamp: 'IO 11/7/2020 19:28:43'!
PASSED!

!testRun: #PortfolioTest #test01AnAccountCanBeAddedToAPortfolio stamp: 'IO 11/7/2020 19:28:43'!
PASSED!

!testRun: #PortfolioTest #test02APortfolioHasNoAccountsInitially stamp: 'IO 11/7/2020 19:28:43'!
PASSED!

!testRun: #PortfolioTest #test03APortfolioDoesNotHaveMoreAccountsThanAdded stamp: 'IO 11/7/2020 19:28:43'!
PASSED!

!testRun: #PortfolioTest #test04MoreThanOneAccountCanBeAddedToAPortfolio stamp: 'IO 11/7/2020 19:28:43'!
PASSED!

!testRun: #PortfolioTest #test05 stamp: 'IO 11/7/2020 19:28:43'!
PASSED!

!testRun: #PortfolioTest #test06 stamp: 'IO 11/7/2020 19:28:43'!
PASSED!

!testRun: #PortfolioTest #test07 stamp: 'IO 11/7/2020 19:28:43'!
PASSED!

!testRun: #PortfolioTest #test08 stamp: 'IO 11/7/2020 19:28:43'!
PASSED!

!testRun: #PortfolioTest #test09 stamp: 'IO 11/7/2020 19:28:43'!
PASSED!

!testRun: #PortfolioTest #test10 stamp: 'IO 11/7/2020 19:28:43'!
PASSED!

!testRun: #PortfolioTest #test11 stamp: 'IO 11/7/2020 19:28:43'!
PASSED!

!testRun: #PortfolioTest #test12 stamp: 'IO 11/7/2020 19:28:43'!
PASSED!

!testRun: #PortfolioTest #test13 stamp: 'IO 11/7/2020 19:28:43'!
PASSED!

!testRun: #PortfolioTest #test14 stamp: 'IO 11/7/2020 19:28:43'!
PASSED!

!testRun: #PortfolioTest #test15 stamp: 'IO 11/7/2020 19:28:43'!
PASSED!

!testRun: #PortfolioTest #test16 stamp: 'IO 11/7/2020 19:28:43'!
PASSED!

!testRun: #PortfolioTest #test17 stamp: 'IO 11/7/2020 19:28:43'!
PASSED!

!testRun: #PortfolioTest #test18 stamp: 'IO 11/7/2020 19:28:43'!
PASSED!

!testRun: #PortfolioTest #test19 stamp: 'IO 11/7/2020 19:28:43'!
PASSED!

!testRun: #PortfolioTest #test20 stamp: 'IO 11/7/2020 19:28:43'!
PASSED!

!testRun: #PortfolioTest #test21 stamp: 'IO 11/7/2020 19:28:43'!
PASSED!

!testRun: #PortfolioTest #test22 stamp: 'IO 11/7/2020 19:28:43'!
PASSED!

!testRun: #PortfolioTest #test23 stamp: 'IO 11/7/2020 19:28:43'!
PASSED!

!testRun: #PortfolioTest #test24 stamp: 'IO 11/7/2020 19:28:43'!
PASSED!

!testRun: #PortfolioTest #test25 stamp: 'IO 11/7/2020 19:28:43'!
PASSED!

!testRun: #PortfolioTest #test26 stamp: 'IO 11/7/2020 19:28:43'!
PASSED!

!testRun: #PortfolioTest #test27 stamp: 'IO 11/7/2020 19:28:43'!
PASSED!

!testRun: #PortfolioTest #test28 stamp: 'IO 11/7/2020 19:28:43'!
PASSED!

!testRun: #PortfolioTest #test29 stamp: 'IO 11/7/2020 19:28:43'!
PASSED!

!testRun: #PortfolioTest #test30 stamp: 'IO 11/7/2020 19:28:43'!
PASSED!

!testRun: #PortfolioTest #test31 stamp: 'IO 11/7/2020 19:28:43'!
PASSED!
!PortfolioTest methodsFor: 'has registered' stamp: 'IO 11/7/2020 19:30:04' prior: 50877678!
test31

	"un portfolio con una cuenta retorna sus transacciones"
	
	| deposit withdraw account1 portfolio1 |
	
	account1 := ReceptiveAccount new.
	deposit :=  Deposit register: 100 on: account1.
	withdraw := Withdraw register: 50 on: account1.
	
	portfolio1 := Portfolio new.
	portfolio1 addAccount: account1.

	self assert: (portfolio1 transactions includesAllOf: (OrderedCollection with: deposit with: withdraw)).

! !

!testRun: #PortfolioTest #test31 stamp: 'IO 11/7/2020 19:30:19'!
FAILURE!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'IO 11/7/2020 19:31:26' prior: 50877589!
transactions
	(accounts size = 0) ifTrue: [^OrderedCollection new].
	^OrderedCollection withAll: accounts first transactions.
! !

!testRun: #PortfolioTest #test01AnAccountCanBeAddedToAPortfolio stamp: 'IO 11/7/2020 19:31:27'!
PASSED!

!testRun: #PortfolioTest #test02APortfolioHasNoAccountsInitially stamp: 'IO 11/7/2020 19:31:27'!
PASSED!

!testRun: #PortfolioTest #test03APortfolioDoesNotHaveMoreAccountsThanAdded stamp: 'IO 11/7/2020 19:31:27'!
PASSED!

!testRun: #PortfolioTest #test04MoreThanOneAccountCanBeAddedToAPortfolio stamp: 'IO 11/7/2020 19:31:27'!
PASSED!

!testRun: #PortfolioTest #test05 stamp: 'IO 11/7/2020 19:31:27'!
PASSED!

!testRun: #PortfolioTest #test06 stamp: 'IO 11/7/2020 19:31:27'!
PASSED!

!testRun: #PortfolioTest #test07 stamp: 'IO 11/7/2020 19:31:27'!
PASSED!

!testRun: #PortfolioTest #test08 stamp: 'IO 11/7/2020 19:31:27'!
PASSED!

!testRun: #PortfolioTest #test09 stamp: 'IO 11/7/2020 19:31:27'!
PASSED!

!testRun: #PortfolioTest #test10 stamp: 'IO 11/7/2020 19:31:27'!
PASSED!

!testRun: #PortfolioTest #test11 stamp: 'IO 11/7/2020 19:31:27'!
PASSED!

!testRun: #PortfolioTest #test12 stamp: 'IO 11/7/2020 19:31:27'!
PASSED!

!testRun: #PortfolioTest #test13 stamp: 'IO 11/7/2020 19:31:27'!
PASSED!

!testRun: #PortfolioTest #test14 stamp: 'IO 11/7/2020 19:31:27'!
PASSED!

!testRun: #PortfolioTest #test15 stamp: 'IO 11/7/2020 19:31:27'!
PASSED!

!testRun: #PortfolioTest #test16 stamp: 'IO 11/7/2020 19:31:27'!
PASSED!

!testRun: #PortfolioTest #test17 stamp: 'IO 11/7/2020 19:31:27'!
PASSED!

!testRun: #PortfolioTest #test18 stamp: 'IO 11/7/2020 19:31:27'!
PASSED!

!testRun: #PortfolioTest #test19 stamp: 'IO 11/7/2020 19:31:27'!
PASSED!

!testRun: #PortfolioTest #test20 stamp: 'IO 11/7/2020 19:31:27'!
PASSED!

!testRun: #PortfolioTest #test21 stamp: 'IO 11/7/2020 19:31:27'!
PASSED!

!testRun: #PortfolioTest #test22 stamp: 'IO 11/7/2020 19:31:27'!
PASSED!

!testRun: #PortfolioTest #test23 stamp: 'IO 11/7/2020 19:31:27'!
PASSED!

!testRun: #PortfolioTest #test24 stamp: 'IO 11/7/2020 19:31:27'!
PASSED!

!testRun: #PortfolioTest #test25 stamp: 'IO 11/7/2020 19:31:27'!
PASSED!

!testRun: #PortfolioTest #test26 stamp: 'IO 11/7/2020 19:31:27'!
PASSED!

!testRun: #PortfolioTest #test27 stamp: 'IO 11/7/2020 19:31:27'!
PASSED!

!testRun: #PortfolioTest #test28 stamp: 'IO 11/7/2020 19:31:27'!
PASSED!

!testRun: #PortfolioTest #test29 stamp: 'IO 11/7/2020 19:31:27'!
PASSED!

!testRun: #PortfolioTest #test30 stamp: 'IO 11/7/2020 19:31:27'!
PASSED!

!testRun: #PortfolioTest #test31 stamp: 'IO 11/7/2020 19:31:27'!
PASSED!
!PortfolioTest methodsFor: 'has registered' stamp: 'IO 11/7/2020 19:32:25'!
test32

	"un portfolio con varias cuentas retorna todas sus transacciones"
	
	| deposit1 deposit2 withdraw1 withdraw2 account1 account2 portfolio1 |
	
	account1 := ReceptiveAccount new.
	account2 := ReceptiveAccount new.

	deposit1 :=  Deposit register: 100 on: account1.
	withdraw1 := Withdraw register: 50 on: account1.
	deposit2 :=  Deposit register: 30 on: account2.
	withdraw2 := Withdraw register: 20 on: account2.

	portfolio1 := Portfolio new.
	portfolio1 addAccount: account1.
	portfolio1 addAccount: account2.

	self assert: (portfolio1 transactions includesAllOf: (OrderedCollection with: deposit1 with: withdraw1 with: deposit2 with: withdraw2)).

! !

!testRun: #PortfolioTest #test32 stamp: 'IO 11/7/2020 19:32:34'!
FAILURE!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'IO 11/7/2020 19:33:56' prior: 50877793!
transactions
	| transactions |
	transactions := OrderedCollection new.
	accounts do: [ :account | transactions addAll: account transactions].
	^transactions."
	(accounts size = 0) ifTrue: [^OrderedCollection new].
	^OrderedCollection withAll: accounts first transactions."
! !

!testRun: #PortfolioTest #test01AnAccountCanBeAddedToAPortfolio stamp: 'IO 11/7/2020 19:33:57'!
PASSED!

!testRun: #PortfolioTest #test02APortfolioHasNoAccountsInitially stamp: 'IO 11/7/2020 19:33:57'!
PASSED!

!testRun: #PortfolioTest #test03APortfolioDoesNotHaveMoreAccountsThanAdded stamp: 'IO 11/7/2020 19:33:57'!
PASSED!

!testRun: #PortfolioTest #test04MoreThanOneAccountCanBeAddedToAPortfolio stamp: 'IO 11/7/2020 19:33:57'!
PASSED!

!testRun: #PortfolioTest #test05 stamp: 'IO 11/7/2020 19:33:57'!
PASSED!

!testRun: #PortfolioTest #test06 stamp: 'IO 11/7/2020 19:33:57'!
PASSED!

!testRun: #PortfolioTest #test07 stamp: 'IO 11/7/2020 19:33:57'!
PASSED!

!testRun: #PortfolioTest #test08 stamp: 'IO 11/7/2020 19:33:57'!
PASSED!

!testRun: #PortfolioTest #test09 stamp: 'IO 11/7/2020 19:33:57'!
PASSED!

!testRun: #PortfolioTest #test10 stamp: 'IO 11/7/2020 19:33:57'!
PASSED!

!testRun: #PortfolioTest #test11 stamp: 'IO 11/7/2020 19:33:57'!
PASSED!

!testRun: #PortfolioTest #test12 stamp: 'IO 11/7/2020 19:33:57'!
PASSED!

!testRun: #PortfolioTest #test13 stamp: 'IO 11/7/2020 19:33:57'!
PASSED!

!testRun: #PortfolioTest #test14 stamp: 'IO 11/7/2020 19:33:57'!
PASSED!

!testRun: #PortfolioTest #test15 stamp: 'IO 11/7/2020 19:33:57'!
PASSED!

!testRun: #PortfolioTest #test16 stamp: 'IO 11/7/2020 19:33:57'!
PASSED!

!testRun: #PortfolioTest #test17 stamp: 'IO 11/7/2020 19:33:57'!
PASSED!

!testRun: #PortfolioTest #test18 stamp: 'IO 11/7/2020 19:33:57'!
PASSED!

!testRun: #PortfolioTest #test19 stamp: 'IO 11/7/2020 19:33:57'!
PASSED!

!testRun: #PortfolioTest #test20 stamp: 'IO 11/7/2020 19:33:57'!
PASSED!

!testRun: #PortfolioTest #test21 stamp: 'IO 11/7/2020 19:33:57'!
PASSED!

!testRun: #PortfolioTest #test22 stamp: 'IO 11/7/2020 19:33:57'!
PASSED!

!testRun: #PortfolioTest #test23 stamp: 'IO 11/7/2020 19:33:57'!
PASSED!

!testRun: #PortfolioTest #test24 stamp: 'IO 11/7/2020 19:33:57'!
PASSED!

!testRun: #PortfolioTest #test25 stamp: 'IO 11/7/2020 19:33:57'!
PASSED!

!testRun: #PortfolioTest #test26 stamp: 'IO 11/7/2020 19:33:57'!
PASSED!

!testRun: #PortfolioTest #test27 stamp: 'IO 11/7/2020 19:33:57'!
PASSED!

!testRun: #PortfolioTest #test28 stamp: 'IO 11/7/2020 19:33:57'!
PASSED!

!testRun: #PortfolioTest #test29 stamp: 'IO 11/7/2020 19:33:57'!
PASSED!

!testRun: #PortfolioTest #test30 stamp: 'IO 11/7/2020 19:33:57'!
PASSED!

!testRun: #PortfolioTest #test31 stamp: 'IO 11/7/2020 19:33:57'!
PASSED!

!testRun: #PortfolioTest #test32 stamp: 'IO 11/7/2020 19:33:57'!
PASSED!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'IO 11/7/2020 19:34:00' prior: 50877902!
transactions
	| transactions |
	transactions := OrderedCollection new.
	accounts do: [ :account | transactions addAll: account transactions].
	^transactions.
! !

!testRun: #PortfolioTest #test01AnAccountCanBeAddedToAPortfolio stamp: 'IO 11/7/2020 19:34:01'!
PASSED!

!testRun: #PortfolioTest #test02APortfolioHasNoAccountsInitially stamp: 'IO 11/7/2020 19:34:01'!
PASSED!

!testRun: #PortfolioTest #test03APortfolioDoesNotHaveMoreAccountsThanAdded stamp: 'IO 11/7/2020 19:34:01'!
PASSED!

!testRun: #PortfolioTest #test04MoreThanOneAccountCanBeAddedToAPortfolio stamp: 'IO 11/7/2020 19:34:01'!
PASSED!

!testRun: #PortfolioTest #test05 stamp: 'IO 11/7/2020 19:34:01'!
PASSED!

!testRun: #PortfolioTest #test06 stamp: 'IO 11/7/2020 19:34:01'!
PASSED!

!testRun: #PortfolioTest #test07 stamp: 'IO 11/7/2020 19:34:01'!
PASSED!

!testRun: #PortfolioTest #test08 stamp: 'IO 11/7/2020 19:34:01'!
PASSED!

!testRun: #PortfolioTest #test09 stamp: 'IO 11/7/2020 19:34:01'!
PASSED!

!testRun: #PortfolioTest #test10 stamp: 'IO 11/7/2020 19:34:01'!
PASSED!

!testRun: #PortfolioTest #test11 stamp: 'IO 11/7/2020 19:34:01'!
PASSED!

!testRun: #PortfolioTest #test12 stamp: 'IO 11/7/2020 19:34:01'!
PASSED!

!testRun: #PortfolioTest #test13 stamp: 'IO 11/7/2020 19:34:01'!
PASSED!

!testRun: #PortfolioTest #test14 stamp: 'IO 11/7/2020 19:34:01'!
PASSED!

!testRun: #PortfolioTest #test15 stamp: 'IO 11/7/2020 19:34:01'!
PASSED!

!testRun: #PortfolioTest #test16 stamp: 'IO 11/7/2020 19:34:01'!
PASSED!

!testRun: #PortfolioTest #test17 stamp: 'IO 11/7/2020 19:34:01'!
PASSED!

!testRun: #PortfolioTest #test18 stamp: 'IO 11/7/2020 19:34:01'!
PASSED!

!testRun: #PortfolioTest #test19 stamp: 'IO 11/7/2020 19:34:01'!
PASSED!

!testRun: #PortfolioTest #test20 stamp: 'IO 11/7/2020 19:34:01'!
PASSED!

!testRun: #PortfolioTest #test21 stamp: 'IO 11/7/2020 19:34:01'!
PASSED!

!testRun: #PortfolioTest #test22 stamp: 'IO 11/7/2020 19:34:01'!
PASSED!

!testRun: #PortfolioTest #test23 stamp: 'IO 11/7/2020 19:34:01'!
PASSED!

!testRun: #PortfolioTest #test24 stamp: 'IO 11/7/2020 19:34:01'!
PASSED!

!testRun: #PortfolioTest #test25 stamp: 'IO 11/7/2020 19:34:01'!
PASSED!

!testRun: #PortfolioTest #test26 stamp: 'IO 11/7/2020 19:34:01'!
PASSED!

!testRun: #PortfolioTest #test27 stamp: 'IO 11/7/2020 19:34:01'!
PASSED!

!testRun: #PortfolioTest #test28 stamp: 'IO 11/7/2020 19:34:01'!
PASSED!

!testRun: #PortfolioTest #test29 stamp: 'IO 11/7/2020 19:34:01'!
PASSED!

!testRun: #PortfolioTest #test30 stamp: 'IO 11/7/2020 19:34:01'!
PASSED!

!testRun: #PortfolioTest #test31 stamp: 'IO 11/7/2020 19:34:01'!
PASSED!

!testRun: #PortfolioTest #test32 stamp: 'IO 11/7/2020 19:34:01'!
PASSED!
!PortfolioTest methodsFor: 'has registered' stamp: 'IO 11/7/2020 19:34:31'!
test33

	"un portfolio con varias cuentas en sus portfolios retorna todas sus transacciones"
	
	| deposit1 deposit2 withdraw1 withdraw2 account1 account2 portfolio1 portfolio2 |
	
	account1 := ReceptiveAccount new.
	account2 := ReceptiveAccount new.

	deposit1 :=  Deposit register: 100 on: account1.
	withdraw1 := Withdraw register: 50 on: account1.
	deposit2 :=  Deposit register: 30 on: account2.
	withdraw2 := Withdraw register: 20 on: account2.

	portfolio1 := Portfolio new.
	portfolio2 := Portfolio new.

	portfolio1 addAccount: account1.
	portfolio1 addAccount: account2.
	
	portfolio2 addPortfolio: portfolio1.

	self assert: (portfolio2 transactions includesAllOf: (OrderedCollection with: deposit1 with: withdraw1 with: deposit2 with: withdraw2)).

! !

!testRun: #PortfolioTest #test33 stamp: 'IO 11/7/2020 19:34:32'!
FAILURE!

!testRun: #PortfolioTest #test33 stamp: 'IO 11/7/2020 19:34:48'!
FAILURE!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'IO 11/7/2020 19:35:17' prior: 50877993!
transactions
	| transactions |
	transactions := OrderedCollection new.
	self accountsAndPortfoliosDo: [ :account | transactions addAll: account transactions].
	^transactions.
! !

!testRun: #PortfolioTest #test01AnAccountCanBeAddedToAPortfolio stamp: 'IO 11/7/2020 19:35:17'!
PASSED!

!testRun: #PortfolioTest #test02APortfolioHasNoAccountsInitially stamp: 'IO 11/7/2020 19:35:17'!
PASSED!

!testRun: #PortfolioTest #test03APortfolioDoesNotHaveMoreAccountsThanAdded stamp: 'IO 11/7/2020 19:35:17'!
PASSED!

!testRun: #PortfolioTest #test04MoreThanOneAccountCanBeAddedToAPortfolio stamp: 'IO 11/7/2020 19:35:17'!
PASSED!

!testRun: #PortfolioTest #test05 stamp: 'IO 11/7/2020 19:35:17'!
PASSED!

!testRun: #PortfolioTest #test06 stamp: 'IO 11/7/2020 19:35:17'!
PASSED!

!testRun: #PortfolioTest #test07 stamp: 'IO 11/7/2020 19:35:17'!
PASSED!

!testRun: #PortfolioTest #test08 stamp: 'IO 11/7/2020 19:35:17'!
PASSED!

!testRun: #PortfolioTest #test09 stamp: 'IO 11/7/2020 19:35:17'!
PASSED!

!testRun: #PortfolioTest #test10 stamp: 'IO 11/7/2020 19:35:17'!
PASSED!

!testRun: #PortfolioTest #test11 stamp: 'IO 11/7/2020 19:35:17'!
PASSED!

!testRun: #PortfolioTest #test12 stamp: 'IO 11/7/2020 19:35:17'!
PASSED!

!testRun: #PortfolioTest #test13 stamp: 'IO 11/7/2020 19:35:17'!
PASSED!

!testRun: #PortfolioTest #test14 stamp: 'IO 11/7/2020 19:35:17'!
PASSED!

!testRun: #PortfolioTest #test15 stamp: 'IO 11/7/2020 19:35:17'!
PASSED!

!testRun: #PortfolioTest #test16 stamp: 'IO 11/7/2020 19:35:17'!
PASSED!

!testRun: #PortfolioTest #test17 stamp: 'IO 11/7/2020 19:35:17'!
PASSED!

!testRun: #PortfolioTest #test18 stamp: 'IO 11/7/2020 19:35:17'!
PASSED!

!testRun: #PortfolioTest #test19 stamp: 'IO 11/7/2020 19:35:17'!
PASSED!

!testRun: #PortfolioTest #test20 stamp: 'IO 11/7/2020 19:35:17'!
PASSED!

!testRun: #PortfolioTest #test21 stamp: 'IO 11/7/2020 19:35:17'!
PASSED!

!testRun: #PortfolioTest #test22 stamp: 'IO 11/7/2020 19:35:17'!
PASSED!

!testRun: #PortfolioTest #test23 stamp: 'IO 11/7/2020 19:35:17'!
PASSED!

!testRun: #PortfolioTest #test24 stamp: 'IO 11/7/2020 19:35:17'!
PASSED!

!testRun: #PortfolioTest #test25 stamp: 'IO 11/7/2020 19:35:17'!
PASSED!

!testRun: #PortfolioTest #test26 stamp: 'IO 11/7/2020 19:35:17'!
PASSED!

!testRun: #PortfolioTest #test27 stamp: 'IO 11/7/2020 19:35:17'!
PASSED!

!testRun: #PortfolioTest #test28 stamp: 'IO 11/7/2020 19:35:17'!
PASSED!

!testRun: #PortfolioTest #test29 stamp: 'IO 11/7/2020 19:35:17'!
PASSED!

!testRun: #PortfolioTest #test30 stamp: 'IO 11/7/2020 19:35:17'!
PASSED!

!testRun: #PortfolioTest #test31 stamp: 'IO 11/7/2020 19:35:17'!
PASSED!

!testRun: #PortfolioTest #test32 stamp: 'IO 11/7/2020 19:35:17'!
PASSED!

!testRun: #PortfolioTest #test33 stamp: 'IO 11/7/2020 19:35:17'!
PASSED!

Object subclass: #ReceptiveEntity
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classDefinition: #ReceptiveEntity category: 'Portfolio-Ejercicio' stamp: 'IO 11/7/2020 19:59:52'!
Object subclass: #ReceptiveEntity
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!
!ReceptiveEntity methodsFor: 'no messages' stamp: 'IO 11/7/2020 20:00:00'!
transactions
	self subclassResponsibility.
! !
!ReceptiveEntity methodsFor: 'as yet unclassified' stamp: 'IO 11/7/2020 20:00:03' prior: 50878212!
transactions
	^self subclassResponsibility.
! !
!ReceptiveEntity methodsFor: 'as yet unclassified' stamp: 'IO 11/7/2020 20:00:05'!
balance
	^self subclassResponsibility.
! !
!ReceptiveEntity methodsFor: 'as yet unclassified' stamp: 'IO 11/7/2020 20:00:15'!
hasRegistered: aTransaction
	^self subclassResponsibility.
! !

ReceptiveEntity subclass: #Portfolio
	instanceVariableNames: 'accounts portfolios fatherPortfolios'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classDefinition: #Portfolio category: 'Portfolio-Ejercicio' stamp: 'IO 11/7/2020 20:00:26'!
ReceptiveEntity subclass: #Portfolio
	instanceVariableNames: 'accounts portfolios fatherPortfolios'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

ReceptiveEntity subclass: #ReceptiveAccount
	instanceVariableNames: 'transactions'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classDefinition: #ReceptiveAccount category: 'Portfolio-Ejercicio' stamp: 'IO 11/7/2020 20:00:34'!
ReceptiveEntity subclass: #ReceptiveAccount
	instanceVariableNames: 'transactions'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!testRun: #PortfolioTest #test01AnAccountCanBeAddedToAPortfolio stamp: 'IO 11/7/2020 20:00:58'!
PASSED!

!testRun: #PortfolioTest #test02APortfolioHasNoAccountsInitially stamp: 'IO 11/7/2020 20:00:58'!
PASSED!

!testRun: #PortfolioTest #test03APortfolioDoesNotHaveMoreAccountsThanAdded stamp: 'IO 11/7/2020 20:00:58'!
PASSED!

!testRun: #PortfolioTest #test04MoreThanOneAccountCanBeAddedToAPortfolio stamp: 'IO 11/7/2020 20:00:58'!
PASSED!

!testRun: #PortfolioTest #test05 stamp: 'IO 11/7/2020 20:00:58'!
PASSED!

!testRun: #PortfolioTest #test06 stamp: 'IO 11/7/2020 20:00:58'!
PASSED!

!testRun: #PortfolioTest #test07 stamp: 'IO 11/7/2020 20:00:58'!
PASSED!

!testRun: #PortfolioTest #test08 stamp: 'IO 11/7/2020 20:00:58'!
PASSED!

!testRun: #PortfolioTest #test09 stamp: 'IO 11/7/2020 20:00:58'!
PASSED!

!testRun: #PortfolioTest #test10 stamp: 'IO 11/7/2020 20:00:58'!
PASSED!

!testRun: #PortfolioTest #test11 stamp: 'IO 11/7/2020 20:00:58'!
PASSED!

!testRun: #PortfolioTest #test12 stamp: 'IO 11/7/2020 20:00:58'!
PASSED!

!testRun: #PortfolioTest #test13 stamp: 'IO 11/7/2020 20:00:58'!
PASSED!

!testRun: #PortfolioTest #test14 stamp: 'IO 11/7/2020 20:00:58'!
PASSED!

!testRun: #PortfolioTest #test15 stamp: 'IO 11/7/2020 20:00:58'!
PASSED!

!testRun: #PortfolioTest #test16 stamp: 'IO 11/7/2020 20:00:58'!
PASSED!

!testRun: #PortfolioTest #test17 stamp: 'IO 11/7/2020 20:00:58'!
PASSED!

!testRun: #PortfolioTest #test18 stamp: 'IO 11/7/2020 20:00:58'!
PASSED!

!testRun: #PortfolioTest #test19 stamp: 'IO 11/7/2020 20:00:58'!
PASSED!

!testRun: #PortfolioTest #test20 stamp: 'IO 11/7/2020 20:00:58'!
PASSED!

!testRun: #PortfolioTest #test21 stamp: 'IO 11/7/2020 20:00:58'!
PASSED!

!testRun: #PortfolioTest #test22 stamp: 'IO 11/7/2020 20:00:58'!
PASSED!

!testRun: #PortfolioTest #test23 stamp: 'IO 11/7/2020 20:00:58'!
PASSED!

!testRun: #PortfolioTest #test24 stamp: 'IO 11/7/2020 20:00:58'!
PASSED!

!testRun: #PortfolioTest #test25 stamp: 'IO 11/7/2020 20:00:58'!
PASSED!

!testRun: #PortfolioTest #test26 stamp: 'IO 11/7/2020 20:00:58'!
PASSED!

!testRun: #PortfolioTest #test27 stamp: 'IO 11/7/2020 20:00:58'!
PASSED!

!testRun: #PortfolioTest #test28 stamp: 'IO 11/7/2020 20:00:58'!
PASSED!

!testRun: #PortfolioTest #test29 stamp: 'IO 11/7/2020 20:00:58'!
PASSED!

!testRun: #PortfolioTest #test30 stamp: 'IO 11/7/2020 20:00:58'!
PASSED!

!testRun: #PortfolioTest #test31 stamp: 'IO 11/7/2020 20:00:58'!
PASSED!

!testRun: #PortfolioTest #test32 stamp: 'IO 11/7/2020 20:00:58'!
PASSED!

!testRun: #PortfolioTest #test33 stamp: 'IO 11/7/2020 20:00:58'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'IO 11/7/2020 20:01:02'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'IO 11/7/2020 20:01:02'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'IO 11/7/2020 20:01:02'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'IO 11/7/2020 20:01:02'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'IO 11/7/2020 20:01:02'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'IO 11/7/2020 20:01:02'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'IO 11/7/2020 20:01:02'!
PASSED!

----SNAPSHOT----(7 November 2020 20:01:21) CuisUniversity-4384.image priorSource: 17223032!

----SNAPSHOT----(7 November 2020 20:05:14) CuisUniversity-4384.image priorSource: 17494869!

----QUIT----(7 November 2020 20:09:42) CuisUniversity-4384.image priorSource: 17494962!

----STARTUP---- (8 November 2020 18:03:53) as /Users/ilanolkies/uba/ingsoft1/macos64 6/CuisUniversity-4384.image!


!classRemoval: #ReceptiveAccount stamp: 'IO 11/8/2020 18:03:58'!
ReceptiveEntity subclass: #ReceptiveAccount
	instanceVariableNames: 'transactions'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classRemoval: #Portfolio stamp: 'IO 11/8/2020 18:03:59'!
ReceptiveEntity subclass: #Portfolio
	instanceVariableNames: 'accounts portfolios fatherPortfolios'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classRemoval: #ReceptiveEntity stamp: 'IO 11/8/2020 18:03:59'!
Object subclass: #ReceptiveEntity
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classRemoval: #Withdraw stamp: 'IO 11/8/2020 18:04:00'!
AccountTransaction subclass: #Withdraw
	instanceVariableNames: 'value'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classRemoval: #Deposit stamp: 'IO 11/8/2020 18:04:00'!
AccountTransaction subclass: #Deposit
	instanceVariableNames: 'value'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classRemoval: #AccountTransaction stamp: 'IO 11/8/2020 18:04:01'!
Object subclass: #AccountTransaction
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classRemoval: #ReceptiveAccountTest stamp: 'IO 11/8/2020 18:04:01'!
TestCase subclass: #ReceptiveAccountTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classRemoval: #PortfolioTest stamp: 'IO 11/8/2020 18:04:02'!
TestCase subclass: #PortfolioTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

----End fileIn of /Users/ilanolkies/uba/ingsoft1/ingeSoft-2020-2c/18-Portfolio/Portfolio-Ejercicio.st----!

!testRun: #PortfolioTest #test01AnAccountCanBeAddedToAPortfolio stamp: 'IO 11/8/2020 18:04:44'!
PASSED!

!testRun: #PortfolioTest #test02APortfolioHasNoAccountsInitially stamp: 'IO 11/8/2020 18:04:44'!
PASSED!

!testRun: #PortfolioTest #test03APortfolioDoesNotHaveMoreAccountsThanAdded stamp: 'IO 11/8/2020 18:04:44'!
PASSED!

!testRun: #PortfolioTest #test04MoreThanOneAccountCanBeAddedToAPortfolio stamp: 'IO 11/8/2020 18:04:44'!
PASSED!

!testRun: #PortfolioTest #test05APortfolioDoesNotHavePortfoliosInitialy stamp: 'IO 11/8/2020 18:04:44'!
PASSED!

!testRun: #PortfolioTest #test06AnEmptyPortfolioCanBeAddedToAPortfolio stamp: 'IO 11/8/2020 18:04:44'!
PASSED!

!testRun: #PortfolioTest #test07VariousEmptyPortfoliosCanBeAddedToAPortfolio stamp: 'IO 11/8/2020 18:04:44'!
PASSED!

!testRun: #PortfolioTest #test08PortfoliosCanBeAddedToAPortfolio stamp: 'IO 11/8/2020 18:04:44'!
PASSED!

!testRun: #PortfolioTest #test09APortfolioWithPortfoliosCanBeAddedToAportfolio stamp: 'IO 11/8/2020 18:04:44'!
PASSED!

!testRun: #PortfolioTest #test10CanNotAddAnAccountToAPortfolioWhosePortfolioHasTheAccount stamp: 'IO 11/8/2020 18:04:44'!
PASSED!

!testRun: #PortfolioTest #test11CanNotAddAnAccountToAPortfolioWhoHasAPortfolioWithTheAccount stamp: 'IO 11/8/2020 18:04:44'!
PASSED!

!testRun: #PortfolioTest #test12APortfolioCantHaveRepeatedAccounts stamp: 'IO 11/8/2020 18:04:44'!
PASSED!

!testRun: #PortfolioTest #test13APortfolioCanNotHaveRepeatedPortfolios stamp: 'IO 11/8/2020 18:04:44'!
PASSED!

!testRun: #PortfolioTest #test14APortffolioCantHaveItself stamp: 'IO 11/8/2020 18:04:44'!
PASSED!

!testRun: #PortfolioTest #test15CanNotAddAnAccountToAPortfolioWithAParentThatHasTheAccount stamp: 'IO 11/8/2020 18:04:44'!
PASSED!

!testRun: #PortfolioTest #test16CanNotAddAnAccountToAPortfolioWhoseParentHasTheAccount stamp: 'IO 11/8/2020 18:04:44'!
PASSED!

!testRun: #PortfolioTest #test17CanNotAddAnAccountToAPortfolioWithAPredecesorsThatHasTheAccount stamp: 'IO 11/8/2020 18:04:44'!
PASSED!

!testRun: #PortfolioTest #test18CantAddAPortfolioWhenItIsAParent stamp: 'IO 11/8/2020 18:04:44'!
PASSED!

!testRun: #PortfolioTest #test19CantAddAPortfolioWhenItIsAPredecesor stamp: 'IO 11/8/2020 18:04:44'!
PASSED!

!testRun: #PortfolioTest #test20CantAddAPortfolioWhenAPredecesorAlredyHasIt stamp: 'IO 11/8/2020 18:04:44'!
PASSED!

!testRun: #PortfolioTest #test22APortfolioKnowsItsDirectAccounts stamp: 'IO 11/8/2020 18:04:44'!
PASSED!

!testRun: #PortfolioTest #test22APortfolioKnowsTheAccountsOfHisPortfolios stamp: 'IO 11/8/2020 18:04:44'!
PASSED!

!testRun: #PortfolioTest #test23AnEmptyPortfolioHasABalanceOf0 stamp: 'IO 11/8/2020 18:04:44'!
PASSED!

!testRun: #PortfolioTest #test24APortfolioWithOneAccountHasTheBalanceOfThatAccount stamp: 'IO 11/8/2020 18:04:44'!
PASSED!

!testRun: #PortfolioTest #test25TheBalanceOfAPortfolioWithNoPortfoliosIsTheSumOfHisAccounts stamp: 'IO 11/8/2020 18:04:44'!
PASSED!

!testRun: #PortfolioTest #test26TheBalanceOfAPortfolioIsTheSumOfHisAccountsAndPortfolios stamp: 'IO 11/8/2020 18:04:44'!
PASSED!

!testRun: #PortfolioTest #test27AnEmptyPortfolioHasNoRegisteredTransactions stamp: 'IO 11/8/2020 18:04:44'!
PASSED!

!testRun: #PortfolioTest #test28APortfolioWithOneAccountHasItsRegisteredTransactions stamp: 'IO 11/8/2020 18:04:44'!
PASSED!

!testRun: #PortfolioTest #test29APortfolioWithManyAccountsHasItsAccountsRegisteredTransactions stamp: 'IO 11/8/2020 18:04:44'!
PASSED!

!testRun: #PortfolioTest #test30APortfolioHasItsPortfoliosAndAccountsRegisteredTransactions stamp: 'IO 11/8/2020 18:04:44'!
PASSED!

!testRun: #PortfolioTest #test31AnEmptyPortfolioHasNoTransactions stamp: 'IO 11/8/2020 18:04:44'!
PASSED!

!testRun: #PortfolioTest #test32APortfolioWithOneAccountHasItsTransactions stamp: 'IO 11/8/2020 18:04:44'!
PASSED!

!testRun: #PortfolioTest #test33APortfolioWithManyAccountsHasItsAccountsTransactions stamp: 'IO 11/8/2020 18:04:44'!
PASSED!

!testRun: #PortfolioTest #test34APortfolioHasItsPortfoliosAndAccountsTransaction stamp: 'IO 11/8/2020 18:04:44'!
PASSED!

!testRun: #PortfolioTest #test35CanNotAddAPortfolioWithAccountsAlredyInTheParentsOfTheRevceiver stamp: 'IO 11/8/2020 18:04:44'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'IO 11/8/2020 18:04:44'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'IO 11/8/2020 18:04:44'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'IO 11/8/2020 18:04:44'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'IO 11/8/2020 18:04:44'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'IO 11/8/2020 18:04:44'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'IO 11/8/2020 18:04:44'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'IO 11/8/2020 18:04:44'!
PASSED!
!AccountTransaction methodsFor: 'balance operations' stamp: 'IO 11/8/2020 18:04:55' prior: 50879235!
addToBalance: aBalance

	"returns the resulting balance after aplying the net value of this transaction"	

	self subclassResponsibility ! !
!AccountTransaction methodsFor: 'balance operations' stamp: 'IO 11/8/2020 18:04:58' prior: 50880166!
addToBalance: aBalance

	"returns the resulting balance after aplying the net value of this transaction"	

	self subclassResponsibility.
! !
!AccountTransaction methodsFor: 'accessing' stamp: 'IO 11/8/2020 18:05:31' prior: 50879231 overrides: 16881508!
value

	"returns the value of a transaction"

	self subclassResponsibility.
! !
!AccountTransaction methodsFor: 'accessing' stamp: 'IO 11/8/2020 18:05:42' prior: 50880182 overrides: 16881508!
value

	"returns the value of a transaction. it is always postitive, it is not the net value"

	self subclassResponsibility.
! !
!Deposit methodsFor: 'initialization' stamp: 'IO 11/8/2020 18:06:06' prior: 50879271!
initializeFor: aValue

	value := aValue.
! !
!Deposit methodsFor: 'accessing' stamp: 'IO 11/8/2020 18:06:25' prior: 50879276 overrides: 50880188!
value
	
	"see superclass"

	^value.
! !
!Deposit methodsFor: 'initialization' stamp: 'IO 11/8/2020 18:06:45' prior: 50880195!
initializeFor: aValue

	"create a transaction with a given value"

	value := aValue.
! !

AccountTransaction subclass: #Deposit
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classDefinition: #Deposit category: 'Portfolio-Ejercicio' stamp: 'IO 11/8/2020 18:07:09'!
AccountTransaction subclass: #Deposit
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

AccountTransaction subclass: #Withdraw
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classDefinition: #Withdraw category: 'Portfolio-Ejercicio' stamp: 'IO 11/8/2020 18:07:12'!
AccountTransaction subclass: #Withdraw
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

Object subclass: #AccountTransaction
	instanceVariableNames: 'value'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classDefinition: #AccountTransaction category: 'Portfolio-Ejercicio' stamp: 'IO 11/8/2020 18:07:15'!
Object subclass: #AccountTransaction
	instanceVariableNames: 'value'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!
!AccountTransaction methodsFor: 'nil' stamp: 'IO 11/8/2020 18:07:39'!
initializeFor: aValue

	"initialize a transaction with a given value"

	value := aValue.
! !

!methodRemoval: Deposit #initializeFor: stamp: 'IO 11/8/2020 18:07:43'!
initializeFor: aValue

	"create a transaction with a given value"

	value := aValue.
!

!methodRemoval: Withdraw #initializeFor: stamp: 'IO 11/8/2020 18:07:46'!
initializeFor: aValue

	value := aValue !

!testRun: #PortfolioTest #test01AnAccountCanBeAddedToAPortfolio stamp: 'IO 11/8/2020 18:07:50'!
PASSED!

!testRun: #PortfolioTest #test02APortfolioHasNoAccountsInitially stamp: 'IO 11/8/2020 18:07:50'!
PASSED!

!testRun: #PortfolioTest #test03APortfolioDoesNotHaveMoreAccountsThanAdded stamp: 'IO 11/8/2020 18:07:50'!
PASSED!

!testRun: #PortfolioTest #test04MoreThanOneAccountCanBeAddedToAPortfolio stamp: 'IO 11/8/2020 18:07:50'!
PASSED!

!testRun: #PortfolioTest #test05APortfolioDoesNotHavePortfoliosInitialy stamp: 'IO 11/8/2020 18:07:50'!
PASSED!

!testRun: #PortfolioTest #test06AnEmptyPortfolioCanBeAddedToAPortfolio stamp: 'IO 11/8/2020 18:07:50'!
PASSED!

!testRun: #PortfolioTest #test07VariousEmptyPortfoliosCanBeAddedToAPortfolio stamp: 'IO 11/8/2020 18:07:50'!
PASSED!

!testRun: #PortfolioTest #test08PortfoliosCanBeAddedToAPortfolio stamp: 'IO 11/8/2020 18:07:50'!
PASSED!

!testRun: #PortfolioTest #test09APortfolioWithPortfoliosCanBeAddedToAportfolio stamp: 'IO 11/8/2020 18:07:50'!
PASSED!

!testRun: #PortfolioTest #test10CanNotAddAnAccountToAPortfolioWhosePortfolioHasTheAccount stamp: 'IO 11/8/2020 18:07:50'!
PASSED!

!testRun: #PortfolioTest #test11CanNotAddAnAccountToAPortfolioWhoHasAPortfolioWithTheAccount stamp: 'IO 11/8/2020 18:07:50'!
PASSED!

!testRun: #PortfolioTest #test12APortfolioCantHaveRepeatedAccounts stamp: 'IO 11/8/2020 18:07:50'!
PASSED!

!testRun: #PortfolioTest #test13APortfolioCanNotHaveRepeatedPortfolios stamp: 'IO 11/8/2020 18:07:50'!
PASSED!

!testRun: #PortfolioTest #test14APortffolioCantHaveItself stamp: 'IO 11/8/2020 18:07:50'!
PASSED!

!testRun: #PortfolioTest #test15CanNotAddAnAccountToAPortfolioWithAParentThatHasTheAccount stamp: 'IO 11/8/2020 18:07:50'!
PASSED!

!testRun: #PortfolioTest #test16CanNotAddAnAccountToAPortfolioWhoseParentHasTheAccount stamp: 'IO 11/8/2020 18:07:50'!
PASSED!

!testRun: #PortfolioTest #test17CanNotAddAnAccountToAPortfolioWithAPredecesorsThatHasTheAccount stamp: 'IO 11/8/2020 18:07:50'!
PASSED!

!testRun: #PortfolioTest #test18CantAddAPortfolioWhenItIsAParent stamp: 'IO 11/8/2020 18:07:50'!
PASSED!

!testRun: #PortfolioTest #test19CantAddAPortfolioWhenItIsAPredecesor stamp: 'IO 11/8/2020 18:07:50'!
PASSED!

!testRun: #PortfolioTest #test20CantAddAPortfolioWhenAPredecesorAlredyHasIt stamp: 'IO 11/8/2020 18:07:50'!
PASSED!

!testRun: #PortfolioTest #test22APortfolioKnowsItsDirectAccounts stamp: 'IO 11/8/2020 18:07:50'!
PASSED!

!testRun: #PortfolioTest #test22APortfolioKnowsTheAccountsOfHisPortfolios stamp: 'IO 11/8/2020 18:07:50'!
PASSED!

!testRun: #PortfolioTest #test23AnEmptyPortfolioHasABalanceOf0 stamp: 'IO 11/8/2020 18:07:50'!
PASSED!

!testRun: #PortfolioTest #test24APortfolioWithOneAccountHasTheBalanceOfThatAccount stamp: 'IO 11/8/2020 18:07:50'!
PASSED!

!testRun: #PortfolioTest #test25TheBalanceOfAPortfolioWithNoPortfoliosIsTheSumOfHisAccounts stamp: 'IO 11/8/2020 18:07:50'!
PASSED!

!testRun: #PortfolioTest #test26TheBalanceOfAPortfolioIsTheSumOfHisAccountsAndPortfolios stamp: 'IO 11/8/2020 18:07:50'!
PASSED!

!testRun: #PortfolioTest #test27AnEmptyPortfolioHasNoRegisteredTransactions stamp: 'IO 11/8/2020 18:07:50'!
PASSED!

!testRun: #PortfolioTest #test28APortfolioWithOneAccountHasItsRegisteredTransactions stamp: 'IO 11/8/2020 18:07:50'!
PASSED!

!testRun: #PortfolioTest #test29APortfolioWithManyAccountsHasItsAccountsRegisteredTransactions stamp: 'IO 11/8/2020 18:07:50'!
PASSED!

!testRun: #PortfolioTest #test30APortfolioHasItsPortfoliosAndAccountsRegisteredTransactions stamp: 'IO 11/8/2020 18:07:50'!
PASSED!

!testRun: #PortfolioTest #test31AnEmptyPortfolioHasNoTransactions stamp: 'IO 11/8/2020 18:07:50'!
PASSED!

!testRun: #PortfolioTest #test32APortfolioWithOneAccountHasItsTransactions stamp: 'IO 11/8/2020 18:07:50'!
PASSED!

!testRun: #PortfolioTest #test33APortfolioWithManyAccountsHasItsAccountsTransactions stamp: 'IO 11/8/2020 18:07:50'!
PASSED!

!testRun: #PortfolioTest #test34APortfolioHasItsPortfoliosAndAccountsTransaction stamp: 'IO 11/8/2020 18:07:50'!
PASSED!

!testRun: #PortfolioTest #test35CanNotAddAPortfolioWithAccountsAlredyInTheParentsOfTheRevceiver stamp: 'IO 11/8/2020 18:07:50'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'IO 11/8/2020 18:07:50'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'IO 11/8/2020 18:07:50'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'IO 11/8/2020 18:07:50'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'IO 11/8/2020 18:07:50'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'IO 11/8/2020 18:07:50'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'IO 11/8/2020 18:07:50'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'IO 11/8/2020 18:07:50'!
PASSED!
!AccountTransaction methodsFor: 'accessing' stamp: 'IO 11/8/2020 18:08:05' prior: 50880188 overrides: 16881508!
value

	"returns the value of a transaction. it is always postitive, it is not the net value"

	^value.

! !

!methodRemoval: Deposit #value stamp: 'IO 11/8/2020 18:08:11'!
value
	
	"see superclass"

	^value.
!

!methodRemoval: Withdraw #value stamp: 'IO 11/8/2020 18:08:14'!
value

	^ value!

!testRun: #PortfolioTest #test01AnAccountCanBeAddedToAPortfolio stamp: 'IO 11/8/2020 18:08:18'!
PASSED!

!testRun: #PortfolioTest #test02APortfolioHasNoAccountsInitially stamp: 'IO 11/8/2020 18:08:18'!
PASSED!

!testRun: #PortfolioTest #test03APortfolioDoesNotHaveMoreAccountsThanAdded stamp: 'IO 11/8/2020 18:08:18'!
PASSED!

!testRun: #PortfolioTest #test04MoreThanOneAccountCanBeAddedToAPortfolio stamp: 'IO 11/8/2020 18:08:18'!
PASSED!

!testRun: #PortfolioTest #test05APortfolioDoesNotHavePortfoliosInitialy stamp: 'IO 11/8/2020 18:08:18'!
PASSED!

!testRun: #PortfolioTest #test06AnEmptyPortfolioCanBeAddedToAPortfolio stamp: 'IO 11/8/2020 18:08:18'!
PASSED!

!testRun: #PortfolioTest #test07VariousEmptyPortfoliosCanBeAddedToAPortfolio stamp: 'IO 11/8/2020 18:08:18'!
PASSED!

!testRun: #PortfolioTest #test08PortfoliosCanBeAddedToAPortfolio stamp: 'IO 11/8/2020 18:08:18'!
PASSED!

!testRun: #PortfolioTest #test09APortfolioWithPortfoliosCanBeAddedToAportfolio stamp: 'IO 11/8/2020 18:08:18'!
PASSED!

!testRun: #PortfolioTest #test10CanNotAddAnAccountToAPortfolioWhosePortfolioHasTheAccount stamp: 'IO 11/8/2020 18:08:18'!
PASSED!

!testRun: #PortfolioTest #test11CanNotAddAnAccountToAPortfolioWhoHasAPortfolioWithTheAccount stamp: 'IO 11/8/2020 18:08:18'!
PASSED!

!testRun: #PortfolioTest #test12APortfolioCantHaveRepeatedAccounts stamp: 'IO 11/8/2020 18:08:18'!
PASSED!

!testRun: #PortfolioTest #test13APortfolioCanNotHaveRepeatedPortfolios stamp: 'IO 11/8/2020 18:08:18'!
PASSED!

!testRun: #PortfolioTest #test14APortffolioCantHaveItself stamp: 'IO 11/8/2020 18:08:18'!
PASSED!

!testRun: #PortfolioTest #test15CanNotAddAnAccountToAPortfolioWithAParentThatHasTheAccount stamp: 'IO 11/8/2020 18:08:18'!
PASSED!

!testRun: #PortfolioTest #test16CanNotAddAnAccountToAPortfolioWhoseParentHasTheAccount stamp: 'IO 11/8/2020 18:08:18'!
PASSED!

!testRun: #PortfolioTest #test17CanNotAddAnAccountToAPortfolioWithAPredecesorsThatHasTheAccount stamp: 'IO 11/8/2020 18:08:18'!
PASSED!

!testRun: #PortfolioTest #test18CantAddAPortfolioWhenItIsAParent stamp: 'IO 11/8/2020 18:08:18'!
PASSED!

!testRun: #PortfolioTest #test19CantAddAPortfolioWhenItIsAPredecesor stamp: 'IO 11/8/2020 18:08:18'!
PASSED!

!testRun: #PortfolioTest #test20CantAddAPortfolioWhenAPredecesorAlredyHasIt stamp: 'IO 11/8/2020 18:08:18'!
PASSED!

!testRun: #PortfolioTest #test22APortfolioKnowsItsDirectAccounts stamp: 'IO 11/8/2020 18:08:18'!
PASSED!

!testRun: #PortfolioTest #test22APortfolioKnowsTheAccountsOfHisPortfolios stamp: 'IO 11/8/2020 18:08:18'!
PASSED!

!testRun: #PortfolioTest #test23AnEmptyPortfolioHasABalanceOf0 stamp: 'IO 11/8/2020 18:08:18'!
PASSED!

!testRun: #PortfolioTest #test24APortfolioWithOneAccountHasTheBalanceOfThatAccount stamp: 'IO 11/8/2020 18:08:18'!
PASSED!

!testRun: #PortfolioTest #test25TheBalanceOfAPortfolioWithNoPortfoliosIsTheSumOfHisAccounts stamp: 'IO 11/8/2020 18:08:18'!
PASSED!

!testRun: #PortfolioTest #test26TheBalanceOfAPortfolioIsTheSumOfHisAccountsAndPortfolios stamp: 'IO 11/8/2020 18:08:18'!
PASSED!

!testRun: #PortfolioTest #test27AnEmptyPortfolioHasNoRegisteredTransactions stamp: 'IO 11/8/2020 18:08:18'!
PASSED!

!testRun: #PortfolioTest #test28APortfolioWithOneAccountHasItsRegisteredTransactions stamp: 'IO 11/8/2020 18:08:18'!
PASSED!

!testRun: #PortfolioTest #test29APortfolioWithManyAccountsHasItsAccountsRegisteredTransactions stamp: 'IO 11/8/2020 18:08:18'!
PASSED!

!testRun: #PortfolioTest #test30APortfolioHasItsPortfoliosAndAccountsRegisteredTransactions stamp: 'IO 11/8/2020 18:08:18'!
PASSED!

!testRun: #PortfolioTest #test31AnEmptyPortfolioHasNoTransactions stamp: 'IO 11/8/2020 18:08:18'!
PASSED!

!testRun: #PortfolioTest #test32APortfolioWithOneAccountHasItsTransactions stamp: 'IO 11/8/2020 18:08:18'!
PASSED!

!testRun: #PortfolioTest #test33APortfolioWithManyAccountsHasItsAccountsTransactions stamp: 'IO 11/8/2020 18:08:18'!
PASSED!

!testRun: #PortfolioTest #test34APortfolioHasItsPortfoliosAndAccountsTransaction stamp: 'IO 11/8/2020 18:08:18'!
PASSED!

!testRun: #PortfolioTest #test35CanNotAddAPortfolioWithAccountsAlredyInTheParentsOfTheRevceiver stamp: 'IO 11/8/2020 18:08:18'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'IO 11/8/2020 18:08:18'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'IO 11/8/2020 18:08:18'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'IO 11/8/2020 18:08:18'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'IO 11/8/2020 18:08:18'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'IO 11/8/2020 18:08:18'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'IO 11/8/2020 18:08:18'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'IO 11/8/2020 18:08:18'!
PASSED!
!Deposit methodsFor: 'balance operations' stamp: 'IO 11/8/2020 18:09:12' prior: 50879280 overrides: 50880174!
addToBalance: aBalance

	"see superclass"

	^aBalance + value.
! !
!Withdraw methodsFor: 'balance operations' stamp: 'IO 11/8/2020 18:09:19' prior: 50879319 overrides: 50880174!
addToBalance: aBalance

	"see superclass"

	^aBalance - value.
! !

!classRemoval: #TransactionPortfolio stamp: 'IO 11/8/2020 18:09:29'!
TransactionContainer subclass: #TransactionPortfolio
	instanceVariableNames: 'accounts portfolios fatherPortfolios'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!testRun: #PortfolioTest #test01AnAccountCanBeAddedToAPortfolio stamp: 'IO 11/8/2020 18:09:32'!
PASSED!

!testRun: #PortfolioTest #test02APortfolioHasNoAccountsInitially stamp: 'IO 11/8/2020 18:09:32'!
PASSED!

!testRun: #PortfolioTest #test03APortfolioDoesNotHaveMoreAccountsThanAdded stamp: 'IO 11/8/2020 18:09:32'!
PASSED!

!testRun: #PortfolioTest #test04MoreThanOneAccountCanBeAddedToAPortfolio stamp: 'IO 11/8/2020 18:09:32'!
PASSED!

!testRun: #PortfolioTest #test05APortfolioDoesNotHavePortfoliosInitialy stamp: 'IO 11/8/2020 18:09:32'!
PASSED!

!testRun: #PortfolioTest #test06AnEmptyPortfolioCanBeAddedToAPortfolio stamp: 'IO 11/8/2020 18:09:32'!
PASSED!

!testRun: #PortfolioTest #test07VariousEmptyPortfoliosCanBeAddedToAPortfolio stamp: 'IO 11/8/2020 18:09:32'!
PASSED!

!testRun: #PortfolioTest #test08PortfoliosCanBeAddedToAPortfolio stamp: 'IO 11/8/2020 18:09:32'!
PASSED!

!testRun: #PortfolioTest #test09APortfolioWithPortfoliosCanBeAddedToAportfolio stamp: 'IO 11/8/2020 18:09:32'!
PASSED!

!testRun: #PortfolioTest #test10CanNotAddAnAccountToAPortfolioWhosePortfolioHasTheAccount stamp: 'IO 11/8/2020 18:09:32'!
PASSED!

!testRun: #PortfolioTest #test11CanNotAddAnAccountToAPortfolioWhoHasAPortfolioWithTheAccount stamp: 'IO 11/8/2020 18:09:32'!
PASSED!

!testRun: #PortfolioTest #test12APortfolioCantHaveRepeatedAccounts stamp: 'IO 11/8/2020 18:09:32'!
PASSED!

!testRun: #PortfolioTest #test13APortfolioCanNotHaveRepeatedPortfolios stamp: 'IO 11/8/2020 18:09:32'!
PASSED!

!testRun: #PortfolioTest #test14APortffolioCantHaveItself stamp: 'IO 11/8/2020 18:09:32'!
PASSED!

!testRun: #PortfolioTest #test15CanNotAddAnAccountToAPortfolioWithAParentThatHasTheAccount stamp: 'IO 11/8/2020 18:09:32'!
PASSED!

!testRun: #PortfolioTest #test16CanNotAddAnAccountToAPortfolioWhoseParentHasTheAccount stamp: 'IO 11/8/2020 18:09:32'!
PASSED!

!testRun: #PortfolioTest #test17CanNotAddAnAccountToAPortfolioWithAPredecesorsThatHasTheAccount stamp: 'IO 11/8/2020 18:09:32'!
PASSED!

!testRun: #PortfolioTest #test18CantAddAPortfolioWhenItIsAParent stamp: 'IO 11/8/2020 18:09:32'!
PASSED!

!testRun: #PortfolioTest #test19CantAddAPortfolioWhenItIsAPredecesor stamp: 'IO 11/8/2020 18:09:32'!
PASSED!

!testRun: #PortfolioTest #test20CantAddAPortfolioWhenAPredecesorAlredyHasIt stamp: 'IO 11/8/2020 18:09:32'!
PASSED!

!testRun: #PortfolioTest #test22APortfolioKnowsItsDirectAccounts stamp: 'IO 11/8/2020 18:09:32'!
PASSED!

!testRun: #PortfolioTest #test22APortfolioKnowsTheAccountsOfHisPortfolios stamp: 'IO 11/8/2020 18:09:32'!
PASSED!

!testRun: #PortfolioTest #test23AnEmptyPortfolioHasABalanceOf0 stamp: 'IO 11/8/2020 18:09:32'!
PASSED!

!testRun: #PortfolioTest #test24APortfolioWithOneAccountHasTheBalanceOfThatAccount stamp: 'IO 11/8/2020 18:09:32'!
PASSED!

!testRun: #PortfolioTest #test25TheBalanceOfAPortfolioWithNoPortfoliosIsTheSumOfHisAccounts stamp: 'IO 11/8/2020 18:09:32'!
PASSED!

!testRun: #PortfolioTest #test26TheBalanceOfAPortfolioIsTheSumOfHisAccountsAndPortfolios stamp: 'IO 11/8/2020 18:09:32'!
PASSED!

!testRun: #PortfolioTest #test27AnEmptyPortfolioHasNoRegisteredTransactions stamp: 'IO 11/8/2020 18:09:32'!
PASSED!

!testRun: #PortfolioTest #test28APortfolioWithOneAccountHasItsRegisteredTransactions stamp: 'IO 11/8/2020 18:09:32'!
PASSED!

!testRun: #PortfolioTest #test29APortfolioWithManyAccountsHasItsAccountsRegisteredTransactions stamp: 'IO 11/8/2020 18:09:32'!
PASSED!

!testRun: #PortfolioTest #test30APortfolioHasItsPortfoliosAndAccountsRegisteredTransactions stamp: 'IO 11/8/2020 18:09:32'!
PASSED!

!testRun: #PortfolioTest #test31AnEmptyPortfolioHasNoTransactions stamp: 'IO 11/8/2020 18:09:32'!
PASSED!

!testRun: #PortfolioTest #test32APortfolioWithOneAccountHasItsTransactions stamp: 'IO 11/8/2020 18:09:32'!
PASSED!

!testRun: #PortfolioTest #test33APortfolioWithManyAccountsHasItsAccountsTransactions stamp: 'IO 11/8/2020 18:09:32'!
PASSED!

!testRun: #PortfolioTest #test34APortfolioHasItsPortfoliosAndAccountsTransaction stamp: 'IO 11/8/2020 18:09:32'!
PASSED!

!testRun: #PortfolioTest #test35CanNotAddAPortfolioWithAccountsAlredyInTheParentsOfTheRevceiver stamp: 'IO 11/8/2020 18:09:32'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'IO 11/8/2020 18:09:32'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'IO 11/8/2020 18:09:32'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'IO 11/8/2020 18:09:32'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'IO 11/8/2020 18:09:32'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'IO 11/8/2020 18:09:32'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'IO 11/8/2020 18:09:32'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'IO 11/8/2020 18:09:32'!
PASSED!
!TransactionContainer methodsFor: 'testing' stamp: 'IO 11/8/2020 18:10:44' prior: 50879499!
hasRegistered: aTransaction
	"returns true if a Transaction is registered in this entity"

	^self subclassResponsibility.
! !
!TransactionContainer methodsFor: 'accesing' stamp: 'IO 11/8/2020 18:10:55' prior: 50879493!
transactions
	"returns all transactions registered in this entity"

	^self subclassResponsibility.
! !
!ReceptiveAccount methodsFor: 'balance' stamp: 'IO 11/8/2020 18:11:05' prior: 50879765 overrides: 50879487!
balance

	"see superclass"

	|aBalance|
	aBalance := 0.
	transactions do: [ :aTransaction |aBalance:= aTransaction addToBalance: aBalance].
	^aBalance
! !
!ReceptiveAccount methodsFor: 'balance' stamp: 'IO 11/8/2020 18:11:18' prior: 50880777 overrides: 50879487!
balance

	"see superclass"

	| aBalance |

	aBalance := 0.
	transactions do: [ :aTransaction |aBalance:= aTransaction addToBalance: aBalance].

	^aBalance.
! !
!ReceptiveAccount methodsFor: 'balance' stamp: 'IO 11/8/2020 18:11:23' prior: 50880786 overrides: 50879487!
balance

	"see superclass"

	| aBalance |

	aBalance := 0.
	transactions do: [ :aTransaction | aBalance:= aTransaction addToBalance: aBalance].

	^aBalance.
! !
!ReceptiveAccount methodsFor: 'testing' stamp: 'IO 11/8/2020 18:11:47' prior: 50879773 overrides: 50880763!
hasRegistered: aTransaction

	"see superclass"

	^transactions includes: aTransaction.

! !
!ReceptiveAccount methodsFor: 'initialization' stamp: 'IO 11/8/2020 18:12:11' prior: 50879749 overrides: 16896425!
initialize

	"create an account, initially with no transactions regitered"

	transactions := OrderedCollection new.
! !
!ReceptiveAccount methodsFor: 'initialization' stamp: 'IO 11/8/2020 18:12:17' prior: 50880811 overrides: 16896425!
initialize

	"create an account with no transactions regitered"

	transactions := OrderedCollection new.
! !
!ReceptiveAccount methodsFor: 'transactions' stamp: 'IO 11/8/2020 18:12:38' prior: 50879754!
register: aTransaction

	"register a transaction in this account"

	transactions add: aTransaction.
! !
!ReceptiveAccount methodsFor: 'transactions' stamp: 'IO 11/8/2020 18:12:54' prior: 50879760 overrides: 50880770!
transactions

	"see superclass"

	^transactions copy.
! !

OrderedCollection!
!Portfolio methodsFor: 'initialization' stamp: 'IO 11/8/2020 18:16:51' prior: 50879521 overrides: 16896425!
initialize

	"create a portfolio with no accounts and no sub-portfolios"

	accounts := OrderedCollection new.
	portfolios := OrderedCollection new.
	
	parentPortfolios := ParentPortfolios forPortfolio: self.
! !
!AccountTransaction class methodsFor: 'instance creation' stamp: 'IO 11/8/2020 18:17:29' prior: 50879251!
register: aValue on: account

	"create a transaction and register it in an account"

	| transaction |

	transaction := self for: aValue.
	account register: transaction.

	^transaction.
! !
!Deposit class methodsFor: 'instance creation' stamp: 'IO 11/8/2020 18:17:40' prior: 50879293!
for: aValue

	^self new initializeFor: aValue.
! !
!AccountTransaction class methodsFor: 'instance creation' stamp: 'IO 11/8/2020 18:18:13'!
for: aValue

	^self new initializeFor: aValue.
! !

!methodRemoval: Deposit class #for: stamp: 'IO 11/8/2020 18:18:17'!
for: aValue

	^self new initializeFor: aValue.
!

!testRun: #PortfolioTest #test01AnAccountCanBeAddedToAPortfolio stamp: 'IO 11/8/2020 18:18:18'!
PASSED!

!testRun: #PortfolioTest #test02APortfolioHasNoAccountsInitially stamp: 'IO 11/8/2020 18:18:18'!
PASSED!

!testRun: #PortfolioTest #test03APortfolioDoesNotHaveMoreAccountsThanAdded stamp: 'IO 11/8/2020 18:18:18'!
PASSED!

!testRun: #PortfolioTest #test04MoreThanOneAccountCanBeAddedToAPortfolio stamp: 'IO 11/8/2020 18:18:18'!
PASSED!

!testRun: #PortfolioTest #test05APortfolioDoesNotHavePortfoliosInitialy stamp: 'IO 11/8/2020 18:18:18'!
PASSED!

!testRun: #PortfolioTest #test06AnEmptyPortfolioCanBeAddedToAPortfolio stamp: 'IO 11/8/2020 18:18:18'!
PASSED!

!testRun: #PortfolioTest #test07VariousEmptyPortfoliosCanBeAddedToAPortfolio stamp: 'IO 11/8/2020 18:18:18'!
PASSED!

!testRun: #PortfolioTest #test08PortfoliosCanBeAddedToAPortfolio stamp: 'IO 11/8/2020 18:18:18'!
PASSED!

!testRun: #PortfolioTest #test09APortfolioWithPortfoliosCanBeAddedToAportfolio stamp: 'IO 11/8/2020 18:18:18'!
PASSED!

!testRun: #PortfolioTest #test10CanNotAddAnAccountToAPortfolioWhosePortfolioHasTheAccount stamp: 'IO 11/8/2020 18:18:18'!
PASSED!

!testRun: #PortfolioTest #test11CanNotAddAnAccountToAPortfolioWhoHasAPortfolioWithTheAccount stamp: 'IO 11/8/2020 18:18:18'!
PASSED!

!testRun: #PortfolioTest #test12APortfolioCantHaveRepeatedAccounts stamp: 'IO 11/8/2020 18:18:18'!
PASSED!

!testRun: #PortfolioTest #test13APortfolioCanNotHaveRepeatedPortfolios stamp: 'IO 11/8/2020 18:18:18'!
PASSED!

!testRun: #PortfolioTest #test14APortffolioCantHaveItself stamp: 'IO 11/8/2020 18:18:18'!
PASSED!

!testRun: #PortfolioTest #test15CanNotAddAnAccountToAPortfolioWithAParentThatHasTheAccount stamp: 'IO 11/8/2020 18:18:18'!
PASSED!

!testRun: #PortfolioTest #test16CanNotAddAnAccountToAPortfolioWhoseParentHasTheAccount stamp: 'IO 11/8/2020 18:18:18'!
PASSED!

!testRun: #PortfolioTest #test17CanNotAddAnAccountToAPortfolioWithAPredecesorsThatHasTheAccount stamp: 'IO 11/8/2020 18:18:18'!
PASSED!

!testRun: #PortfolioTest #test18CantAddAPortfolioWhenItIsAParent stamp: 'IO 11/8/2020 18:18:18'!
PASSED!

!testRun: #PortfolioTest #test19CantAddAPortfolioWhenItIsAPredecesor stamp: 'IO 11/8/2020 18:18:18'!
PASSED!

!testRun: #PortfolioTest #test20CantAddAPortfolioWhenAPredecesorAlredyHasIt stamp: 'IO 11/8/2020 18:18:18'!
PASSED!

!testRun: #PortfolioTest #test22APortfolioKnowsItsDirectAccounts stamp: 'IO 11/8/2020 18:18:18'!
PASSED!

!testRun: #PortfolioTest #test22APortfolioKnowsTheAccountsOfHisPortfolios stamp: 'IO 11/8/2020 18:18:18'!
PASSED!

!testRun: #PortfolioTest #test23AnEmptyPortfolioHasABalanceOf0 stamp: 'IO 11/8/2020 18:18:18'!
PASSED!

!testRun: #PortfolioTest #test24APortfolioWithOneAccountHasTheBalanceOfThatAccount stamp: 'IO 11/8/2020 18:18:18'!
PASSED!

!testRun: #PortfolioTest #test25TheBalanceOfAPortfolioWithNoPortfoliosIsTheSumOfHisAccounts stamp: 'IO 11/8/2020 18:18:18'!
PASSED!

!testRun: #PortfolioTest #test26TheBalanceOfAPortfolioIsTheSumOfHisAccountsAndPortfolios stamp: 'IO 11/8/2020 18:18:18'!
PASSED!

!testRun: #PortfolioTest #test27AnEmptyPortfolioHasNoRegisteredTransactions stamp: 'IO 11/8/2020 18:18:18'!
PASSED!

!testRun: #PortfolioTest #test28APortfolioWithOneAccountHasItsRegisteredTransactions stamp: 'IO 11/8/2020 18:18:18'!
PASSED!

!testRun: #PortfolioTest #test29APortfolioWithManyAccountsHasItsAccountsRegisteredTransactions stamp: 'IO 11/8/2020 18:18:18'!
PASSED!

!testRun: #PortfolioTest #test30APortfolioHasItsPortfoliosAndAccountsRegisteredTransactions stamp: 'IO 11/8/2020 18:18:18'!
PASSED!

!testRun: #PortfolioTest #test31AnEmptyPortfolioHasNoTransactions stamp: 'IO 11/8/2020 18:18:18'!
PASSED!

!testRun: #PortfolioTest #test32APortfolioWithOneAccountHasItsTransactions stamp: 'IO 11/8/2020 18:18:18'!
PASSED!

!testRun: #PortfolioTest #test33APortfolioWithManyAccountsHasItsAccountsTransactions stamp: 'IO 11/8/2020 18:18:18'!
PASSED!

!testRun: #PortfolioTest #test34APortfolioHasItsPortfoliosAndAccountsTransaction stamp: 'IO 11/8/2020 18:18:18'!
PASSED!

!testRun: #PortfolioTest #test35CanNotAddAPortfolioWithAccountsAlredyInTheParentsOfTheRevceiver stamp: 'IO 11/8/2020 18:18:18'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'IO 11/8/2020 18:18:18'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'IO 11/8/2020 18:18:18'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'IO 11/8/2020 18:18:18'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'IO 11/8/2020 18:18:18'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'IO 11/8/2020 18:18:18'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'IO 11/8/2020 18:18:18'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'IO 11/8/2020 18:18:18'!
PASSED!

!methodRemoval: Withdraw class #for: stamp: 'IO 11/8/2020 18:18:25'!
for: aValue

	^ self new initializeFor: aValue !
!AccountTransaction class methodsFor: 'instance creation' stamp: 'IO 11/8/2020 18:18:49' prior: 50880863!
for: aValue

	"create a transaction. use register:on: to create it for an account"

	^self new initializeFor: aValue.
! !

!methodRemoval: Portfolio #ifItsARootPortfolioDo:elseDo: stamp: 'IO 11/8/2020 18:20:44'!
ifItsARootPortfolioDo: rootClosure elseDo: normalPortfolioClosure
	"if this portfolio has no parents, do rootCLosure. else do normalPortfolioClosure"

	"fatherPortfolios size = 0
		ifTrue: [rootClosure value] 
			
		ifFalse:[normalPortfolioClosure value]."

	
	
	
!

!testRun: #PortfolioTest #test01AnAccountCanBeAddedToAPortfolio stamp: 'IO 11/8/2020 18:21:07'!
PASSED!

!testRun: #PortfolioTest #test02APortfolioHasNoAccountsInitially stamp: 'IO 11/8/2020 18:21:07'!
PASSED!

!testRun: #PortfolioTest #test03APortfolioDoesNotHaveMoreAccountsThanAdded stamp: 'IO 11/8/2020 18:21:07'!
PASSED!

!testRun: #PortfolioTest #test04MoreThanOneAccountCanBeAddedToAPortfolio stamp: 'IO 11/8/2020 18:21:07'!
PASSED!

!testRun: #PortfolioTest #test05APortfolioDoesNotHavePortfoliosInitialy stamp: 'IO 11/8/2020 18:21:07'!
PASSED!

!testRun: #PortfolioTest #test06AnEmptyPortfolioCanBeAddedToAPortfolio stamp: 'IO 11/8/2020 18:21:07'!
PASSED!

!testRun: #PortfolioTest #test07VariousEmptyPortfoliosCanBeAddedToAPortfolio stamp: 'IO 11/8/2020 18:21:07'!
PASSED!

!testRun: #PortfolioTest #test08PortfoliosCanBeAddedToAPortfolio stamp: 'IO 11/8/2020 18:21:07'!
PASSED!

!testRun: #PortfolioTest #test09APortfolioWithPortfoliosCanBeAddedToAportfolio stamp: 'IO 11/8/2020 18:21:07'!
PASSED!

!testRun: #PortfolioTest #test10CanNotAddAnAccountToAPortfolioWhosePortfolioHasTheAccount stamp: 'IO 11/8/2020 18:21:07'!
PASSED!

!testRun: #PortfolioTest #test11CanNotAddAnAccountToAPortfolioWhoHasAPortfolioWithTheAccount stamp: 'IO 11/8/2020 18:21:07'!
PASSED!

!testRun: #PortfolioTest #test12APortfolioCantHaveRepeatedAccounts stamp: 'IO 11/8/2020 18:21:07'!
PASSED!

!testRun: #PortfolioTest #test13APortfolioCanNotHaveRepeatedPortfolios stamp: 'IO 11/8/2020 18:21:07'!
PASSED!

!testRun: #PortfolioTest #test14APortffolioCantHaveItself stamp: 'IO 11/8/2020 18:21:07'!
PASSED!

!testRun: #PortfolioTest #test15CanNotAddAnAccountToAPortfolioWithAParentThatHasTheAccount stamp: 'IO 11/8/2020 18:21:07'!
PASSED!

!testRun: #PortfolioTest #test16CanNotAddAnAccountToAPortfolioWhoseParentHasTheAccount stamp: 'IO 11/8/2020 18:21:07'!
PASSED!

!testRun: #PortfolioTest #test17CanNotAddAnAccountToAPortfolioWithAPredecesorsThatHasTheAccount stamp: 'IO 11/8/2020 18:21:07'!
PASSED!

!testRun: #PortfolioTest #test18CantAddAPortfolioWhenItIsAParent stamp: 'IO 11/8/2020 18:21:07'!
PASSED!

!testRun: #PortfolioTest #test19CantAddAPortfolioWhenItIsAPredecesor stamp: 'IO 11/8/2020 18:21:07'!
PASSED!

!testRun: #PortfolioTest #test20CantAddAPortfolioWhenAPredecesorAlredyHasIt stamp: 'IO 11/8/2020 18:21:07'!
PASSED!

!testRun: #PortfolioTest #test22APortfolioKnowsItsDirectAccounts stamp: 'IO 11/8/2020 18:21:07'!
PASSED!

!testRun: #PortfolioTest #test22APortfolioKnowsTheAccountsOfHisPortfolios stamp: 'IO 11/8/2020 18:21:07'!
PASSED!

!testRun: #PortfolioTest #test23AnEmptyPortfolioHasABalanceOf0 stamp: 'IO 11/8/2020 18:21:07'!
PASSED!

!testRun: #PortfolioTest #test24APortfolioWithOneAccountHasTheBalanceOfThatAccount stamp: 'IO 11/8/2020 18:21:07'!
PASSED!

!testRun: #PortfolioTest #test25TheBalanceOfAPortfolioWithNoPortfoliosIsTheSumOfHisAccounts stamp: 'IO 11/8/2020 18:21:08'!
PASSED!

!testRun: #PortfolioTest #test26TheBalanceOfAPortfolioIsTheSumOfHisAccountsAndPortfolios stamp: 'IO 11/8/2020 18:21:08'!
PASSED!

!testRun: #PortfolioTest #test27AnEmptyPortfolioHasNoRegisteredTransactions stamp: 'IO 11/8/2020 18:21:08'!
PASSED!

!testRun: #PortfolioTest #test28APortfolioWithOneAccountHasItsRegisteredTransactions stamp: 'IO 11/8/2020 18:21:08'!
PASSED!

!testRun: #PortfolioTest #test29APortfolioWithManyAccountsHasItsAccountsRegisteredTransactions stamp: 'IO 11/8/2020 18:21:08'!
PASSED!

!testRun: #PortfolioTest #test30APortfolioHasItsPortfoliosAndAccountsRegisteredTransactions stamp: 'IO 11/8/2020 18:21:08'!
PASSED!

!testRun: #PortfolioTest #test31AnEmptyPortfolioHasNoTransactions stamp: 'IO 11/8/2020 18:21:08'!
PASSED!

!testRun: #PortfolioTest #test32APortfolioWithOneAccountHasItsTransactions stamp: 'IO 11/8/2020 18:21:08'!
PASSED!

!testRun: #PortfolioTest #test33APortfolioWithManyAccountsHasItsAccountsTransactions stamp: 'IO 11/8/2020 18:21:08'!
PASSED!

!testRun: #PortfolioTest #test34APortfolioHasItsPortfoliosAndAccountsTransaction stamp: 'IO 11/8/2020 18:21:08'!
PASSED!

!testRun: #PortfolioTest #test35CanNotAddAPortfolioWithAccountsAlredyInTheParentsOfTheRevceiver stamp: 'IO 11/8/2020 18:21:08'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'IO 11/8/2020 18:21:08'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'IO 11/8/2020 18:21:08'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'IO 11/8/2020 18:21:08'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'IO 11/8/2020 18:21:08'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'IO 11/8/2020 18:21:08'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'IO 11/8/2020 18:21:08'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'IO 11/8/2020 18:21:08'!
PASSED!
!Portfolio methodsFor: 'adding' stamp: 'IO 11/8/2020 18:22:41' prior: 50879538!
addAccount: anAccount

	"add anAccount to this Portfolio"

	self validateAccountBeforeAdding: anAccount.
	accounts add: anAccount.
! !
!Portfolio methodsFor: 'adding' stamp: 'IO 11/8/2020 18:23:59' prior: 50879530!
addPortfolio: aPortfolio

	"add aPortfolio to this Portfolio"

	self validatePortfolioBeforeAdding: aPortfolio.
	portfolios add: aPortfolio.
	aPortfolio addAsFather: self.
! !
!Portfolio methodsFor: 'validations' stamp: 'IO 11/8/2020 18:24:44' prior: 50879556!
validateAccountBeforeAdding: anAccount
	"validate that anAccount is not alredy in this portfolio or it's parents"
	
	(self includesAccount: anAccount) ifTrue: [^self error: Portfolio errorMessageAccountAlreadyAdded].
	"parentPortfolios validateAccountBeforeAdding: anAccount."
	
	"self ifItsARootPortfolioDo: [self validateAccountNotAlredyAdded: anAccount.] 
		elseDo: [fatherPortfolios do: [:aPortfolio | aPortfolio validateAccountBeforeAdding: anAccount]  ]."
	
	"fatherPortfolios size = 0
		ifTrue: [self validateAccountNotAlredyAdded: anAccount.] 
		ifFalse:[fatherPortfolios do: [:aPortfolio | aPortfolio validateAccountBeforeAdding: anAccount]  ]."

	! !

!testRun: #PortfolioTest #test01AnAccountCanBeAddedToAPortfolio stamp: 'IO 11/8/2020 18:24:45'!
PASSED!

!testRun: #PortfolioTest #test02APortfolioHasNoAccountsInitially stamp: 'IO 11/8/2020 18:24:45'!
PASSED!

!testRun: #PortfolioTest #test03APortfolioDoesNotHaveMoreAccountsThanAdded stamp: 'IO 11/8/2020 18:24:45'!
PASSED!

!testRun: #PortfolioTest #test04MoreThanOneAccountCanBeAddedToAPortfolio stamp: 'IO 11/8/2020 18:24:45'!
PASSED!

!testRun: #PortfolioTest #test05APortfolioDoesNotHavePortfoliosInitialy stamp: 'IO 11/8/2020 18:24:45'!
PASSED!

!testRun: #PortfolioTest #test06AnEmptyPortfolioCanBeAddedToAPortfolio stamp: 'IO 11/8/2020 18:24:45'!
PASSED!

!testRun: #PortfolioTest #test07VariousEmptyPortfoliosCanBeAddedToAPortfolio stamp: 'IO 11/8/2020 18:24:45'!
PASSED!

!testRun: #PortfolioTest #test08PortfoliosCanBeAddedToAPortfolio stamp: 'IO 11/8/2020 18:24:45'!
PASSED!

!testRun: #PortfolioTest #test09APortfolioWithPortfoliosCanBeAddedToAportfolio stamp: 'IO 11/8/2020 18:24:45'!
PASSED!

!testRun: #PortfolioTest #test10CanNotAddAnAccountToAPortfolioWhosePortfolioHasTheAccount stamp: 'IO 11/8/2020 18:24:45'!
PASSED!

!testRun: #PortfolioTest #test11CanNotAddAnAccountToAPortfolioWhoHasAPortfolioWithTheAccount stamp: 'IO 11/8/2020 18:24:45'!
PASSED!

!testRun: #PortfolioTest #test12APortfolioCantHaveRepeatedAccounts stamp: 'IO 11/8/2020 18:24:45'!
PASSED!

!testRun: #PortfolioTest #test13APortfolioCanNotHaveRepeatedPortfolios stamp: 'IO 11/8/2020 18:24:45'!
PASSED!

!testRun: #PortfolioTest #test14APortffolioCantHaveItself stamp: 'IO 11/8/2020 18:24:45'!
PASSED!

!testRun: #PortfolioTest #test15CanNotAddAnAccountToAPortfolioWithAParentThatHasTheAccount stamp: 'IO 11/8/2020 18:24:45'!
FAILURE!

!testRun: #PortfolioTest #test16CanNotAddAnAccountToAPortfolioWhoseParentHasTheAccount stamp: 'IO 11/8/2020 18:24:45'!
FAILURE!

!testRun: #PortfolioTest #test17CanNotAddAnAccountToAPortfolioWithAPredecesorsThatHasTheAccount stamp: 'IO 11/8/2020 18:24:45'!
FAILURE!

!testRun: #PortfolioTest #test18CantAddAPortfolioWhenItIsAParent stamp: 'IO 11/8/2020 18:24:45'!
PASSED!

!testRun: #PortfolioTest #test19CantAddAPortfolioWhenItIsAPredecesor stamp: 'IO 11/8/2020 18:24:45'!
PASSED!

!testRun: #PortfolioTest #test20CantAddAPortfolioWhenAPredecesorAlredyHasIt stamp: 'IO 11/8/2020 18:24:45'!
PASSED!

!testRun: #PortfolioTest #test22APortfolioKnowsItsDirectAccounts stamp: 'IO 11/8/2020 18:24:45'!
PASSED!

!testRun: #PortfolioTest #test22APortfolioKnowsTheAccountsOfHisPortfolios stamp: 'IO 11/8/2020 18:24:45'!
PASSED!

!testRun: #PortfolioTest #test23AnEmptyPortfolioHasABalanceOf0 stamp: 'IO 11/8/2020 18:24:45'!
PASSED!

!testRun: #PortfolioTest #test24APortfolioWithOneAccountHasTheBalanceOfThatAccount stamp: 'IO 11/8/2020 18:24:45'!
PASSED!

!testRun: #PortfolioTest #test25TheBalanceOfAPortfolioWithNoPortfoliosIsTheSumOfHisAccounts stamp: 'IO 11/8/2020 18:24:45'!
PASSED!

!testRun: #PortfolioTest #test26TheBalanceOfAPortfolioIsTheSumOfHisAccountsAndPortfolios stamp: 'IO 11/8/2020 18:24:45'!
PASSED!

!testRun: #PortfolioTest #test27AnEmptyPortfolioHasNoRegisteredTransactions stamp: 'IO 11/8/2020 18:24:45'!
PASSED!

!testRun: #PortfolioTest #test28APortfolioWithOneAccountHasItsRegisteredTransactions stamp: 'IO 11/8/2020 18:24:45'!
PASSED!

!testRun: #PortfolioTest #test29APortfolioWithManyAccountsHasItsAccountsRegisteredTransactions stamp: 'IO 11/8/2020 18:24:45'!
PASSED!

!testRun: #PortfolioTest #test30APortfolioHasItsPortfoliosAndAccountsRegisteredTransactions stamp: 'IO 11/8/2020 18:24:45'!
PASSED!

!testRun: #PortfolioTest #test31AnEmptyPortfolioHasNoTransactions stamp: 'IO 11/8/2020 18:24:45'!
PASSED!

!testRun: #PortfolioTest #test32APortfolioWithOneAccountHasItsTransactions stamp: 'IO 11/8/2020 18:24:45'!
PASSED!

!testRun: #PortfolioTest #test33APortfolioWithManyAccountsHasItsAccountsTransactions stamp: 'IO 11/8/2020 18:24:45'!
PASSED!

!testRun: #PortfolioTest #test34APortfolioHasItsPortfoliosAndAccountsTransaction stamp: 'IO 11/8/2020 18:24:45'!
PASSED!

!testRun: #PortfolioTest #test35CanNotAddAPortfolioWithAccountsAlredyInTheParentsOfTheRevceiver stamp: 'IO 11/8/2020 18:24:45'!
PASSED!
!Portfolio methodsFor: 'validations' stamp: 'IO 11/8/2020 18:24:54' prior: 50881222!
validateAccountBeforeAdding: anAccount
	"validate that anAccount is not alredy in this portfolio or it's parents"
	
	
	parentPortfolios validateAccountBeforeAdding: anAccount.
	
	"self ifItsARootPortfolioDo: [self validateAccountNotAlredyAdded: anAccount.] 
		elseDo: [fatherPortfolios do: [:aPortfolio | aPortfolio validateAccountBeforeAdding: anAccount]  ]."
	
	"fatherPortfolios size = 0
		ifTrue: [self validateAccountNotAlredyAdded: anAccount.] 
		ifFalse:[fatherPortfolios do: [:aPortfolio | aPortfolio validateAccountBeforeAdding: anAccount]  ]."

	! !

!testRun: #PortfolioTest #test01AnAccountCanBeAddedToAPortfolio stamp: 'IO 11/8/2020 18:24:56'!
PASSED!

!testRun: #PortfolioTest #test02APortfolioHasNoAccountsInitially stamp: 'IO 11/8/2020 18:24:56'!
PASSED!

!testRun: #PortfolioTest #test03APortfolioDoesNotHaveMoreAccountsThanAdded stamp: 'IO 11/8/2020 18:24:56'!
PASSED!

!testRun: #PortfolioTest #test04MoreThanOneAccountCanBeAddedToAPortfolio stamp: 'IO 11/8/2020 18:24:56'!
PASSED!

!testRun: #PortfolioTest #test05APortfolioDoesNotHavePortfoliosInitialy stamp: 'IO 11/8/2020 18:24:56'!
PASSED!

!testRun: #PortfolioTest #test06AnEmptyPortfolioCanBeAddedToAPortfolio stamp: 'IO 11/8/2020 18:24:56'!
PASSED!

!testRun: #PortfolioTest #test07VariousEmptyPortfoliosCanBeAddedToAPortfolio stamp: 'IO 11/8/2020 18:24:56'!
PASSED!

!testRun: #PortfolioTest #test08PortfoliosCanBeAddedToAPortfolio stamp: 'IO 11/8/2020 18:24:56'!
PASSED!

!testRun: #PortfolioTest #test09APortfolioWithPortfoliosCanBeAddedToAportfolio stamp: 'IO 11/8/2020 18:24:56'!
PASSED!

!testRun: #PortfolioTest #test10CanNotAddAnAccountToAPortfolioWhosePortfolioHasTheAccount stamp: 'IO 11/8/2020 18:24:56'!
PASSED!

!testRun: #PortfolioTest #test11CanNotAddAnAccountToAPortfolioWhoHasAPortfolioWithTheAccount stamp: 'IO 11/8/2020 18:24:56'!
PASSED!

!testRun: #PortfolioTest #test12APortfolioCantHaveRepeatedAccounts stamp: 'IO 11/8/2020 18:24:56'!
PASSED!

!testRun: #PortfolioTest #test13APortfolioCanNotHaveRepeatedPortfolios stamp: 'IO 11/8/2020 18:24:56'!
PASSED!

!testRun: #PortfolioTest #test14APortffolioCantHaveItself stamp: 'IO 11/8/2020 18:24:56'!
PASSED!

!testRun: #PortfolioTest #test15CanNotAddAnAccountToAPortfolioWithAParentThatHasTheAccount stamp: 'IO 11/8/2020 18:24:56'!
PASSED!

!testRun: #PortfolioTest #test16CanNotAddAnAccountToAPortfolioWhoseParentHasTheAccount stamp: 'IO 11/8/2020 18:24:56'!
PASSED!

!testRun: #PortfolioTest #test17CanNotAddAnAccountToAPortfolioWithAPredecesorsThatHasTheAccount stamp: 'IO 11/8/2020 18:24:56'!
PASSED!

!testRun: #PortfolioTest #test18CantAddAPortfolioWhenItIsAParent stamp: 'IO 11/8/2020 18:24:56'!
PASSED!

!testRun: #PortfolioTest #test19CantAddAPortfolioWhenItIsAPredecesor stamp: 'IO 11/8/2020 18:24:56'!
PASSED!

!testRun: #PortfolioTest #test20CantAddAPortfolioWhenAPredecesorAlredyHasIt stamp: 'IO 11/8/2020 18:24:56'!
PASSED!

!testRun: #PortfolioTest #test22APortfolioKnowsItsDirectAccounts stamp: 'IO 11/8/2020 18:24:56'!
PASSED!

!testRun: #PortfolioTest #test22APortfolioKnowsTheAccountsOfHisPortfolios stamp: 'IO 11/8/2020 18:24:56'!
PASSED!

!testRun: #PortfolioTest #test23AnEmptyPortfolioHasABalanceOf0 stamp: 'IO 11/8/2020 18:24:56'!
PASSED!

!testRun: #PortfolioTest #test24APortfolioWithOneAccountHasTheBalanceOfThatAccount stamp: 'IO 11/8/2020 18:24:56'!
PASSED!

!testRun: #PortfolioTest #test25TheBalanceOfAPortfolioWithNoPortfoliosIsTheSumOfHisAccounts stamp: 'IO 11/8/2020 18:24:56'!
PASSED!

!testRun: #PortfolioTest #test26TheBalanceOfAPortfolioIsTheSumOfHisAccountsAndPortfolios stamp: 'IO 11/8/2020 18:24:56'!
PASSED!

!testRun: #PortfolioTest #test27AnEmptyPortfolioHasNoRegisteredTransactions stamp: 'IO 11/8/2020 18:24:56'!
PASSED!

!testRun: #PortfolioTest #test28APortfolioWithOneAccountHasItsRegisteredTransactions stamp: 'IO 11/8/2020 18:24:56'!
PASSED!

!testRun: #PortfolioTest #test29APortfolioWithManyAccountsHasItsAccountsRegisteredTransactions stamp: 'IO 11/8/2020 18:24:56'!
PASSED!

!testRun: #PortfolioTest #test30APortfolioHasItsPortfoliosAndAccountsRegisteredTransactions stamp: 'IO 11/8/2020 18:24:56'!
PASSED!

!testRun: #PortfolioTest #test31AnEmptyPortfolioHasNoTransactions stamp: 'IO 11/8/2020 18:24:56'!
PASSED!

!testRun: #PortfolioTest #test32APortfolioWithOneAccountHasItsTransactions stamp: 'IO 11/8/2020 18:24:56'!
PASSED!

!testRun: #PortfolioTest #test33APortfolioWithManyAccountsHasItsAccountsTransactions stamp: 'IO 11/8/2020 18:24:56'!
PASSED!

!testRun: #PortfolioTest #test34APortfolioHasItsPortfoliosAndAccountsTransaction stamp: 'IO 11/8/2020 18:24:56'!
PASSED!

!testRun: #PortfolioTest #test35CanNotAddAPortfolioWithAccountsAlredyInTheParentsOfTheRevceiver stamp: 'IO 11/8/2020 18:24:56'!
PASSED!
!Portfolio methodsFor: 'validations' stamp: 'IO 11/8/2020 18:26:40' prior: 50879576!
validateAccountNotAlredyAdded: anAccount
	"validate if an Account is in this portfolio"

	(self includesAccount: anAccount) ifTrue: [^self error: Portfolio errorMessageAccountAlreadyAdded].
! !
!Portfolio methodsFor: 'validations' stamp: 'IO 11/8/2020 18:26:45' prior: 50881527!
validateAccountNotAlredyAdded: anAccount

	"validate if an Account is in this portfolio"

	(self includesAccount: anAccount) ifTrue: [^self error: Portfolio errorMessageAccountAlreadyAdded].
! !
!Portfolio methodsFor: 'validations' stamp: 'IO 11/8/2020 18:29:12' prior: 50881376!
validateAccountBeforeAdding: anAccount

	"validate that anAccount is not alredy in this portfolio or it's parents"

	parentPortfolios validateAccountBeforeAdding: anAccount.

	! !
!Portfolio methodsFor: 'validations' stamp: 'IO 11/8/2020 18:29:27' prior: 50881545!
validateAccountBeforeAdding: anAccount

	"validate that anAccount is not alredy in this portfolio or it's parents"

	parentPortfolios validateAccountBeforeAdding: anAccount.
! !
!Root methodsFor: 'validations' stamp: 'IO 11/8/2020 18:30:33' prior: 50879453 overrides: 50879349!
validateAccountBeforeAdding: anAccount

	"childPortfolio validateAccountNotAlredyAdded: anAccount."
	(childPortfolio includesAccount: anAccount) ifTrue: [^self error: Portfolio errorMessageAccountAlreadyAdded].! !

!testRun: #PortfolioTest #test01AnAccountCanBeAddedToAPortfolio stamp: 'IO 11/8/2020 18:30:38'!
PASSED!

!testRun: #PortfolioTest #test02APortfolioHasNoAccountsInitially stamp: 'IO 11/8/2020 18:30:38'!
PASSED!

!testRun: #PortfolioTest #test03APortfolioDoesNotHaveMoreAccountsThanAdded stamp: 'IO 11/8/2020 18:30:38'!
PASSED!

!testRun: #PortfolioTest #test04MoreThanOneAccountCanBeAddedToAPortfolio stamp: 'IO 11/8/2020 18:30:38'!
PASSED!

!testRun: #PortfolioTest #test05APortfolioDoesNotHavePortfoliosInitialy stamp: 'IO 11/8/2020 18:30:38'!
PASSED!

!testRun: #PortfolioTest #test06AnEmptyPortfolioCanBeAddedToAPortfolio stamp: 'IO 11/8/2020 18:30:38'!
PASSED!

!testRun: #PortfolioTest #test07VariousEmptyPortfoliosCanBeAddedToAPortfolio stamp: 'IO 11/8/2020 18:30:38'!
PASSED!

!testRun: #PortfolioTest #test08PortfoliosCanBeAddedToAPortfolio stamp: 'IO 11/8/2020 18:30:38'!
PASSED!

!testRun: #PortfolioTest #test09APortfolioWithPortfoliosCanBeAddedToAportfolio stamp: 'IO 11/8/2020 18:30:38'!
PASSED!

!testRun: #PortfolioTest #test10CanNotAddAnAccountToAPortfolioWhosePortfolioHasTheAccount stamp: 'IO 11/8/2020 18:30:38'!
PASSED!

!testRun: #PortfolioTest #test11CanNotAddAnAccountToAPortfolioWhoHasAPortfolioWithTheAccount stamp: 'IO 11/8/2020 18:30:38'!
PASSED!

!testRun: #PortfolioTest #test12APortfolioCantHaveRepeatedAccounts stamp: 'IO 11/8/2020 18:30:38'!
PASSED!

!testRun: #PortfolioTest #test13APortfolioCanNotHaveRepeatedPortfolios stamp: 'IO 11/8/2020 18:30:38'!
PASSED!

!testRun: #PortfolioTest #test14APortffolioCantHaveItself stamp: 'IO 11/8/2020 18:30:38'!
PASSED!

!testRun: #PortfolioTest #test15CanNotAddAnAccountToAPortfolioWithAParentThatHasTheAccount stamp: 'IO 11/8/2020 18:30:38'!
PASSED!

!testRun: #PortfolioTest #test16CanNotAddAnAccountToAPortfolioWhoseParentHasTheAccount stamp: 'IO 11/8/2020 18:30:38'!
PASSED!

!testRun: #PortfolioTest #test17CanNotAddAnAccountToAPortfolioWithAPredecesorsThatHasTheAccount stamp: 'IO 11/8/2020 18:30:38'!
PASSED!

!testRun: #PortfolioTest #test18CantAddAPortfolioWhenItIsAParent stamp: 'IO 11/8/2020 18:30:38'!
PASSED!

!testRun: #PortfolioTest #test19CantAddAPortfolioWhenItIsAPredecesor stamp: 'IO 11/8/2020 18:30:38'!
PASSED!

!testRun: #PortfolioTest #test20CantAddAPortfolioWhenAPredecesorAlredyHasIt stamp: 'IO 11/8/2020 18:30:38'!
PASSED!

!testRun: #PortfolioTest #test22APortfolioKnowsItsDirectAccounts stamp: 'IO 11/8/2020 18:30:38'!
PASSED!

!testRun: #PortfolioTest #test22APortfolioKnowsTheAccountsOfHisPortfolios stamp: 'IO 11/8/2020 18:30:38'!
PASSED!

!testRun: #PortfolioTest #test23AnEmptyPortfolioHasABalanceOf0 stamp: 'IO 11/8/2020 18:30:38'!
PASSED!

!testRun: #PortfolioTest #test24APortfolioWithOneAccountHasTheBalanceOfThatAccount stamp: 'IO 11/8/2020 18:30:38'!
PASSED!

!testRun: #PortfolioTest #test25TheBalanceOfAPortfolioWithNoPortfoliosIsTheSumOfHisAccounts stamp: 'IO 11/8/2020 18:30:38'!
PASSED!

!testRun: #PortfolioTest #test26TheBalanceOfAPortfolioIsTheSumOfHisAccountsAndPortfolios stamp: 'IO 11/8/2020 18:30:38'!
PASSED!

!testRun: #PortfolioTest #test27AnEmptyPortfolioHasNoRegisteredTransactions stamp: 'IO 11/8/2020 18:30:38'!
PASSED!

!testRun: #PortfolioTest #test28APortfolioWithOneAccountHasItsRegisteredTransactions stamp: 'IO 11/8/2020 18:30:38'!
PASSED!

!testRun: #PortfolioTest #test29APortfolioWithManyAccountsHasItsAccountsRegisteredTransactions stamp: 'IO 11/8/2020 18:30:38'!
PASSED!

!testRun: #PortfolioTest #test30APortfolioHasItsPortfoliosAndAccountsRegisteredTransactions stamp: 'IO 11/8/2020 18:30:38'!
PASSED!

!testRun: #PortfolioTest #test31AnEmptyPortfolioHasNoTransactions stamp: 'IO 11/8/2020 18:30:38'!
PASSED!

!testRun: #PortfolioTest #test32APortfolioWithOneAccountHasItsTransactions stamp: 'IO 11/8/2020 18:30:38'!
PASSED!

!testRun: #PortfolioTest #test33APortfolioWithManyAccountsHasItsAccountsTransactions stamp: 'IO 11/8/2020 18:30:38'!
PASSED!

!testRun: #PortfolioTest #test34APortfolioHasItsPortfoliosAndAccountsTransaction stamp: 'IO 11/8/2020 18:30:38'!
PASSED!

!testRun: #PortfolioTest #test35CanNotAddAPortfolioWithAccountsAlredyInTheParentsOfTheRevceiver stamp: 'IO 11/8/2020 18:30:38'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'IO 11/8/2020 18:30:38'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'IO 11/8/2020 18:30:38'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'IO 11/8/2020 18:30:38'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'IO 11/8/2020 18:30:38'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'IO 11/8/2020 18:30:38'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'IO 11/8/2020 18:30:38'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'IO 11/8/2020 18:30:38'!
PASSED!
!Portfolio methodsFor: 'validations' stamp: 'IO 11/8/2020 18:32:03' prior: 50881536!
validateAccountNotAlredyAdded: anAccount

	"validate if an Account is in this portfolio"

	"(self includesAccount: anAccount) ifTrue: [^self error: Portfolio errorMessageAccountAlreadyAdded]."
! !

!testRun: #PortfolioTest #test01AnAccountCanBeAddedToAPortfolio stamp: 'IO 11/8/2020 18:32:03'!
PASSED!

!testRun: #PortfolioTest #test02APortfolioHasNoAccountsInitially stamp: 'IO 11/8/2020 18:32:03'!
PASSED!

!testRun: #PortfolioTest #test03APortfolioDoesNotHaveMoreAccountsThanAdded stamp: 'IO 11/8/2020 18:32:03'!
PASSED!

!testRun: #PortfolioTest #test04MoreThanOneAccountCanBeAddedToAPortfolio stamp: 'IO 11/8/2020 18:32:03'!
PASSED!

!testRun: #PortfolioTest #test05APortfolioDoesNotHavePortfoliosInitialy stamp: 'IO 11/8/2020 18:32:03'!
PASSED!

!testRun: #PortfolioTest #test06AnEmptyPortfolioCanBeAddedToAPortfolio stamp: 'IO 11/8/2020 18:32:03'!
PASSED!

!testRun: #PortfolioTest #test07VariousEmptyPortfoliosCanBeAddedToAPortfolio stamp: 'IO 11/8/2020 18:32:03'!
PASSED!

!testRun: #PortfolioTest #test08PortfoliosCanBeAddedToAPortfolio stamp: 'IO 11/8/2020 18:32:03'!
PASSED!

!testRun: #PortfolioTest #test09APortfolioWithPortfoliosCanBeAddedToAportfolio stamp: 'IO 11/8/2020 18:32:03'!
PASSED!

!testRun: #PortfolioTest #test10CanNotAddAnAccountToAPortfolioWhosePortfolioHasTheAccount stamp: 'IO 11/8/2020 18:32:03'!
PASSED!

!testRun: #PortfolioTest #test11CanNotAddAnAccountToAPortfolioWhoHasAPortfolioWithTheAccount stamp: 'IO 11/8/2020 18:32:03'!
PASSED!

!testRun: #PortfolioTest #test12APortfolioCantHaveRepeatedAccounts stamp: 'IO 11/8/2020 18:32:03'!
PASSED!

!testRun: #PortfolioTest #test13APortfolioCanNotHaveRepeatedPortfolios stamp: 'IO 11/8/2020 18:32:03'!
PASSED!

!testRun: #PortfolioTest #test14APortffolioCantHaveItself stamp: 'IO 11/8/2020 18:32:03'!
PASSED!

!testRun: #PortfolioTest #test15CanNotAddAnAccountToAPortfolioWithAParentThatHasTheAccount stamp: 'IO 11/8/2020 18:32:03'!
PASSED!

!testRun: #PortfolioTest #test16CanNotAddAnAccountToAPortfolioWhoseParentHasTheAccount stamp: 'IO 11/8/2020 18:32:03'!
PASSED!

!testRun: #PortfolioTest #test17CanNotAddAnAccountToAPortfolioWithAPredecesorsThatHasTheAccount stamp: 'IO 11/8/2020 18:32:03'!
PASSED!

!testRun: #PortfolioTest #test18CantAddAPortfolioWhenItIsAParent stamp: 'IO 11/8/2020 18:32:03'!
PASSED!

!testRun: #PortfolioTest #test19CantAddAPortfolioWhenItIsAPredecesor stamp: 'IO 11/8/2020 18:32:03'!
PASSED!

!testRun: #PortfolioTest #test20CantAddAPortfolioWhenAPredecesorAlredyHasIt stamp: 'IO 11/8/2020 18:32:03'!
PASSED!

!testRun: #PortfolioTest #test22APortfolioKnowsItsDirectAccounts stamp: 'IO 11/8/2020 18:32:03'!
PASSED!

!testRun: #PortfolioTest #test22APortfolioKnowsTheAccountsOfHisPortfolios stamp: 'IO 11/8/2020 18:32:03'!
PASSED!

!testRun: #PortfolioTest #test23AnEmptyPortfolioHasABalanceOf0 stamp: 'IO 11/8/2020 18:32:03'!
PASSED!

!testRun: #PortfolioTest #test24APortfolioWithOneAccountHasTheBalanceOfThatAccount stamp: 'IO 11/8/2020 18:32:03'!
PASSED!

!testRun: #PortfolioTest #test25TheBalanceOfAPortfolioWithNoPortfoliosIsTheSumOfHisAccounts stamp: 'IO 11/8/2020 18:32:03'!
PASSED!

!testRun: #PortfolioTest #test26TheBalanceOfAPortfolioIsTheSumOfHisAccountsAndPortfolios stamp: 'IO 11/8/2020 18:32:03'!
PASSED!

!testRun: #PortfolioTest #test27AnEmptyPortfolioHasNoRegisteredTransactions stamp: 'IO 11/8/2020 18:32:03'!
PASSED!

!testRun: #PortfolioTest #test28APortfolioWithOneAccountHasItsRegisteredTransactions stamp: 'IO 11/8/2020 18:32:03'!
PASSED!

!testRun: #PortfolioTest #test29APortfolioWithManyAccountsHasItsAccountsRegisteredTransactions stamp: 'IO 11/8/2020 18:32:03'!
PASSED!

!testRun: #PortfolioTest #test30APortfolioHasItsPortfoliosAndAccountsRegisteredTransactions stamp: 'IO 11/8/2020 18:32:03'!
PASSED!

!testRun: #PortfolioTest #test31AnEmptyPortfolioHasNoTransactions stamp: 'IO 11/8/2020 18:32:03'!
PASSED!

!testRun: #PortfolioTest #test32APortfolioWithOneAccountHasItsTransactions stamp: 'IO 11/8/2020 18:32:03'!
PASSED!

!testRun: #PortfolioTest #test33APortfolioWithManyAccountsHasItsAccountsTransactions stamp: 'IO 11/8/2020 18:32:03'!
PASSED!

!testRun: #PortfolioTest #test34APortfolioHasItsPortfoliosAndAccountsTransaction stamp: 'IO 11/8/2020 18:32:03'!
PASSED!

!testRun: #PortfolioTest #test35CanNotAddAPortfolioWithAccountsAlredyInTheParentsOfTheRevceiver stamp: 'IO 11/8/2020 18:32:03'!
PASSED!

!methodRemoval: Portfolio #validateAccountNotAlredyAdded: stamp: 'IO 11/8/2020 18:32:09'!
validateAccountNotAlredyAdded: anAccount

	"validate if an Account is in this portfolio"

	"(self includesAccount: anAccount) ifTrue: [^self error: Portfolio errorMessageAccountAlreadyAdded]."
!

!testRun: #PortfolioTest #test01AnAccountCanBeAddedToAPortfolio stamp: 'IO 11/8/2020 18:32:12'!
PASSED!

!testRun: #PortfolioTest #test02APortfolioHasNoAccountsInitially stamp: 'IO 11/8/2020 18:32:12'!
PASSED!

!testRun: #PortfolioTest #test03APortfolioDoesNotHaveMoreAccountsThanAdded stamp: 'IO 11/8/2020 18:32:12'!
PASSED!

!testRun: #PortfolioTest #test04MoreThanOneAccountCanBeAddedToAPortfolio stamp: 'IO 11/8/2020 18:32:12'!
PASSED!

!testRun: #PortfolioTest #test05APortfolioDoesNotHavePortfoliosInitialy stamp: 'IO 11/8/2020 18:32:12'!
PASSED!

!testRun: #PortfolioTest #test06AnEmptyPortfolioCanBeAddedToAPortfolio stamp: 'IO 11/8/2020 18:32:12'!
PASSED!

!testRun: #PortfolioTest #test07VariousEmptyPortfoliosCanBeAddedToAPortfolio stamp: 'IO 11/8/2020 18:32:12'!
PASSED!

!testRun: #PortfolioTest #test08PortfoliosCanBeAddedToAPortfolio stamp: 'IO 11/8/2020 18:32:12'!
PASSED!

!testRun: #PortfolioTest #test09APortfolioWithPortfoliosCanBeAddedToAportfolio stamp: 'IO 11/8/2020 18:32:12'!
PASSED!

!testRun: #PortfolioTest #test10CanNotAddAnAccountToAPortfolioWhosePortfolioHasTheAccount stamp: 'IO 11/8/2020 18:32:12'!
PASSED!

!testRun: #PortfolioTest #test11CanNotAddAnAccountToAPortfolioWhoHasAPortfolioWithTheAccount stamp: 'IO 11/8/2020 18:32:12'!
PASSED!

!testRun: #PortfolioTest #test12APortfolioCantHaveRepeatedAccounts stamp: 'IO 11/8/2020 18:32:12'!
PASSED!

!testRun: #PortfolioTest #test13APortfolioCanNotHaveRepeatedPortfolios stamp: 'IO 11/8/2020 18:32:12'!
PASSED!

!testRun: #PortfolioTest #test14APortffolioCantHaveItself stamp: 'IO 11/8/2020 18:32:12'!
PASSED!

!testRun: #PortfolioTest #test15CanNotAddAnAccountToAPortfolioWithAParentThatHasTheAccount stamp: 'IO 11/8/2020 18:32:12'!
PASSED!

!testRun: #PortfolioTest #test16CanNotAddAnAccountToAPortfolioWhoseParentHasTheAccount stamp: 'IO 11/8/2020 18:32:12'!
PASSED!

!testRun: #PortfolioTest #test17CanNotAddAnAccountToAPortfolioWithAPredecesorsThatHasTheAccount stamp: 'IO 11/8/2020 18:32:12'!
PASSED!

!testRun: #PortfolioTest #test18CantAddAPortfolioWhenItIsAParent stamp: 'IO 11/8/2020 18:32:12'!
PASSED!

!testRun: #PortfolioTest #test19CantAddAPortfolioWhenItIsAPredecesor stamp: 'IO 11/8/2020 18:32:13'!
PASSED!

!testRun: #PortfolioTest #test20CantAddAPortfolioWhenAPredecesorAlredyHasIt stamp: 'IO 11/8/2020 18:32:13'!
PASSED!

!testRun: #PortfolioTest #test22APortfolioKnowsItsDirectAccounts stamp: 'IO 11/8/2020 18:32:13'!
PASSED!

!testRun: #PortfolioTest #test22APortfolioKnowsTheAccountsOfHisPortfolios stamp: 'IO 11/8/2020 18:32:13'!
PASSED!

!testRun: #PortfolioTest #test23AnEmptyPortfolioHasABalanceOf0 stamp: 'IO 11/8/2020 18:32:13'!
PASSED!

!testRun: #PortfolioTest #test24APortfolioWithOneAccountHasTheBalanceOfThatAccount stamp: 'IO 11/8/2020 18:32:13'!
PASSED!

!testRun: #PortfolioTest #test25TheBalanceOfAPortfolioWithNoPortfoliosIsTheSumOfHisAccounts stamp: 'IO 11/8/2020 18:32:13'!
PASSED!

!testRun: #PortfolioTest #test26TheBalanceOfAPortfolioIsTheSumOfHisAccountsAndPortfolios stamp: 'IO 11/8/2020 18:32:13'!
PASSED!

!testRun: #PortfolioTest #test27AnEmptyPortfolioHasNoRegisteredTransactions stamp: 'IO 11/8/2020 18:32:13'!
PASSED!

!testRun: #PortfolioTest #test28APortfolioWithOneAccountHasItsRegisteredTransactions stamp: 'IO 11/8/2020 18:32:13'!
PASSED!

!testRun: #PortfolioTest #test29APortfolioWithManyAccountsHasItsAccountsRegisteredTransactions stamp: 'IO 11/8/2020 18:32:13'!
PASSED!

!testRun: #PortfolioTest #test30APortfolioHasItsPortfoliosAndAccountsRegisteredTransactions stamp: 'IO 11/8/2020 18:32:13'!
PASSED!

!testRun: #PortfolioTest #test31AnEmptyPortfolioHasNoTransactions stamp: 'IO 11/8/2020 18:32:13'!
PASSED!

!testRun: #PortfolioTest #test32APortfolioWithOneAccountHasItsTransactions stamp: 'IO 11/8/2020 18:32:13'!
PASSED!

!testRun: #PortfolioTest #test33APortfolioWithManyAccountsHasItsAccountsTransactions stamp: 'IO 11/8/2020 18:32:13'!
PASSED!

!testRun: #PortfolioTest #test34APortfolioHasItsPortfoliosAndAccountsTransaction stamp: 'IO 11/8/2020 18:32:13'!
PASSED!

!testRun: #PortfolioTest #test35CanNotAddAPortfolioWithAccountsAlredyInTheParentsOfTheRevceiver stamp: 'IO 11/8/2020 18:32:13'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'IO 11/8/2020 18:32:13'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'IO 11/8/2020 18:32:13'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'IO 11/8/2020 18:32:13'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'IO 11/8/2020 18:32:13'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'IO 11/8/2020 18:32:13'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'IO 11/8/2020 18:32:13'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'IO 11/8/2020 18:32:13'!
PASSED!

----STARTUP---- (8 November 2020 18:34:50) as /Users/ilanolkies/uba/ingsoft1/macos64 6/CuisUniversity-4384.image!


!classRemoval: #ReceptiveAccount stamp: 'IO 11/8/2020 18:34:57'!
ReceptiveEntity subclass: #ReceptiveAccount
	instanceVariableNames: 'transactions'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classRemoval: #Portfolio stamp: 'IO 11/8/2020 18:34:58'!
ReceptiveEntity subclass: #Portfolio
	instanceVariableNames: 'accounts portfolios fatherPortfolios'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classRemoval: #ReceptiveEntity stamp: 'IO 11/8/2020 18:34:58'!
Object subclass: #ReceptiveEntity
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classRemoval: #Withdraw stamp: 'IO 11/8/2020 18:34:58'!
AccountTransaction subclass: #Withdraw
	instanceVariableNames: 'value'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classRemoval: #Deposit stamp: 'IO 11/8/2020 18:34:59'!
AccountTransaction subclass: #Deposit
	instanceVariableNames: 'value'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classRemoval: #AccountTransaction stamp: 'IO 11/8/2020 18:34:59'!
Object subclass: #AccountTransaction
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classRemoval: #ReceptiveAccountTest stamp: 'IO 11/8/2020 18:34:59'!
TestCase subclass: #ReceptiveAccountTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classRemoval: #PortfolioTest stamp: 'IO 11/8/2020 18:35:00'!
TestCase subclass: #PortfolioTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classDefinition: #PortfolioTest category: 'Portfolio-Ejercicio' stamp: 'IO 11/8/2020 18:35:00'!
TestCase subclass: #PortfolioTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classDefinition: #PortfolioTest category: 'Portfolio-Ejercicio' stamp: 'IO 11/8/2020 18:35:00'!
TestCase subclass: #PortfolioTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!
!PortfolioTest methodsFor: 'adding accounts' stamp: 'IO 11/5/2020 14:37:14'!
test01AnAccountCanBeAddedToAPortfolio

	"una cuenta puede ser agregada a un prtfolio"

	|anAccount aPortfolio|
	
	anAccount :=  ReceptiveAccount new.
	Deposit register: 100 on: anAccount.
	
	aPortfolio := Portfolio new.
	aPortfolio addAccount: anAccount.
	
	self assert: (aPortfolio includesAccount: anAccount).
! !
!PortfolioTest methodsFor: 'adding accounts' stamp: 'IO 11/5/2020 14:37:27'!
test02APortfolioHasNoAccountsInitially

	"un portfolio no tiene cuentas inicialmente"

	|anAccount1 aPortfolio|
	
	anAccount1 :=  ReceptiveAccount new.
	Deposit register: 100 on: anAccount1.
	
	aPortfolio := Portfolio new.

	self deny: (aPortfolio includesAccount: anAccount1).
! !
!PortfolioTest methodsFor: 'adding accounts' stamp: 'IO 11/5/2020 14:40:07'!
test03APortfolioDoesNotHaveMoreAccountsThanAdded

	"una cuenta que no fue agregada a un portfolio no esta en un portfolio"

	|anAccount1 anAccount2 aPortfolio|
	
	anAccount1 :=  ReceptiveAccount new.
	Deposit register: 100 on: anAccount1.
	anAccount2 :=  ReceptiveAccount new.
	Deposit register: 200 on: anAccount2.
	
	aPortfolio := Portfolio new.
	aPortfolio addAccount: anAccount1.

	self deny: (aPortfolio includesAccount: anAccount2).
! !
!PortfolioTest methodsFor: 'adding accounts' stamp: 'IO 11/5/2020 14:40:16'!
test04MoreThanOneAccountCanBeAddedToAPortfolio

	"se puede agregar mas de una cuenta a un portfolio"

	|anAccount1 anAccount2 aPortfolio|
	
	anAccount1 :=  ReceptiveAccount new.
	Deposit register: 100 on: anAccount1.
	anAccount2 :=  ReceptiveAccount new.
	Deposit register: 200 on: anAccount2.
	
	aPortfolio := Portfolio new.
	aPortfolio addAccount: anAccount1.
	aPortfolio addAccount: anAccount2.
	
	self assert: (aPortfolio includesAccount: anAccount1).
	self assert: (aPortfolio includesAccount: anAccount2).
! !
!PortfolioTest methodsFor: 'adding portfolios' stamp: 'LH 11/7/2020 21:11:48'!
test05APortfolioDoesNotHavePortfoliosInitialy
	
	"un portfolio no tiene portfolios inicialmente"
	
	| portfolio1 portfolio2 |
	
	portfolio1 := Portfolio new.
	portfolio2 := Portfolio new.
	
	self deny: (portfolio1 includesPortfolio: portfolio2).
! !
!PortfolioTest methodsFor: 'adding portfolios' stamp: 'LH 11/7/2020 21:12:18'!
test06AnEmptyPortfolioCanBeAddedToAPortfolio
	
	"a un portfolio se le puede agregar un portfolio sin cuentas"
	
	| portfolio1 portfolio2 |
	
	portfolio1 := Portfolio new.
	portfolio2 := Portfolio new.
	
	portfolio1 addPortfolio: portfolio2.
	
	self assert: (portfolio1 includesPortfolio: portfolio2).
! !
!PortfolioTest methodsFor: 'adding portfolios' stamp: 'LH 11/7/2020 21:12:42'!
test07VariousEmptyPortfoliosCanBeAddedToAPortfolio
	
	"a un portfolio se le puede agregar mas de un portfolio sin cuentas"
	
	| portfolio1 portfolio2 portfolio3 |
	
	portfolio1 := Portfolio new.
	portfolio2 := Portfolio new.
	portfolio3 := Portfolio new.
	
	portfolio1 addPortfolio: portfolio2.
	portfolio1 addPortfolio: portfolio3.
	
	self assert: (portfolio1 includesPortfolio: portfolio2).
	self assert: (portfolio1 includesPortfolio: portfolio3).
! !
!PortfolioTest methodsFor: 'adding portfolios' stamp: 'LH 11/7/2020 21:13:24'!
test08PortfoliosCanBeAddedToAPortfolio
	
	"a un portfolio se le pueden agregar portfolios"
	
	| portfolio1 portfolio2 portfolio3 portfolio4 account1 account2 account3 account4 |
	
	portfolio1 := Portfolio new.
	portfolio2 := Portfolio new.
	portfolio3 := Portfolio new.
	portfolio4 := Portfolio new.
	
	account1 := ReceptiveAccount new.
	account2 := ReceptiveAccount new.
	account3 := ReceptiveAccount new.
	account4 := ReceptiveAccount new.
	
	portfolio1 addPortfolio: portfolio2.
	portfolio1 addPortfolio: portfolio3.
	portfolio2 addPortfolio: portfolio4. "portfolio anidado"
	
	portfolio2 addAccount: account1.
	portfolio2 addAccount: account2.
	portfolio3 addAccount: account3.
	portfolio4 addAccount: account4.
	
	self assert: (portfolio1 includesAccount: account1).
	self assert: (portfolio1 includesAccount: account2).
	self assert: (portfolio1 includesAccount: account3).
	self assert: (portfolio1 includesAccount: account4).
! !
!PortfolioTest methodsFor: 'adding portfolios' stamp: 'LH 11/7/2020 21:16:23'!
test09APortfolioWithPortfoliosCanBeAddedToAportfolio
	
	"a un portfolio se le pueden agregar portfolios con portfolios"
	
	| portfolio1 portfolio2 portfolio3 |
	
	portfolio1 := Portfolio new.
	portfolio2 := Portfolio new.
	portfolio3 := Portfolio new.

	portfolio1 addPortfolio: portfolio2.
	portfolio2 addPortfolio: portfolio3.

	self assert: (portfolio1 includesPortfolio: portfolio3).

! !
!PortfolioTest methodsFor: 'errors adding accounts by children' stamp: 'LH 11/7/2020 21:22:42'!
test10CanNotAddAnAccountToAPortfolioWhosePortfolioHasTheAccount
	
	"no se pueden agregar una cueanta a un portfolio (padre) con un portfolio (hijo), cuando la cuenta ya estaba en el portfolio (hijo)"
	
	| portfolio1 portfolio2 account1 |
	
	portfolio1 := Portfolio new.
	portfolio2 := Portfolio new.
	
	account1 := ReceptiveAccount new.
	
	portfolio2 addAccount: account1.
	portfolio1 addPortfolio: portfolio2.

	self should: [	portfolio1 addAccount: account1.] raise: Error withMessageText: Portfolio errorMessageAccountAlreadyAdded.
! !
!PortfolioTest methodsFor: 'errors adding accounts by children' stamp: 'LH 11/7/2020 21:23:19'!
test11CanNotAddAnAccountToAPortfolioWhoHasAPortfolioWithTheAccount
	
	"no se pueden agregar una cueanta a un portfolio (padre) con un portfolio (hijo) con un portfolio (nieto), cuando la cuenta ya estaba en el portfolio (nieto)"
	
	| portfolio1 portfolio2 portfolio3 account1 |
	
	portfolio1 := Portfolio new.
	portfolio2 := Portfolio new.
	portfolio3 := Portfolio new.	

	account1 := ReceptiveAccount new.
	
	portfolio3 addAccount: account1.
	portfolio1 addPortfolio: portfolio2.
	portfolio2 addPortfolio: portfolio3.

	self should: [	portfolio1 addAccount: account1.] raise: Error withMessageText: Portfolio errorMessageAccountAlreadyAdded.
! !
!PortfolioTest methodsFor: 'errors adding portfolios by childern' stamp: 'LH 11/7/2020 21:20:31'!
test12APortfolioCantHaveRepeatedAccounts
	
	"no pueden haber cuentas repetidas en un portfolio"
	
	| portfolio1 portfolio2 account1 |
	
	portfolio1 := Portfolio new.
	portfolio2 := Portfolio new.
	
	account1 := ReceptiveAccount new.
	
	portfolio1 addPortfolio: portfolio2.
	portfolio2 addAccount: account1.

	
	self should: [portfolio1 addAccount: account1] raise: Error withMessageText: Portfolio errorMessageAccountAlreadyAdded.

! !
!PortfolioTest methodsFor: 'errors adding portfolios by childern' stamp: 'LH 11/7/2020 21:20:56'!
test13APortfolioCanNotHaveRepeatedPortfolios
	
	"no pueden haber prtfolios repetidos en un portfolio"
	
	| portfolio1 portfolio2 portfolio3 |
	
	portfolio1 := Portfolio new.
	portfolio2 := Portfolio new.
	portfolio3 := Portfolio new.
	
	portfolio1 addPortfolio: portfolio2.
	portfolio2 addPortfolio: portfolio3.

	self should: [portfolio1 addPortfolio: portfolio3] raise: Error withMessageText: Portfolio errorMessagePortfolioAlreadyAdded.

! !
!PortfolioTest methodsFor: 'errors adding portfolios by childern' stamp: 'LH 11/7/2020 22:13:32'!
test14APortffolioCantHaveItself
	"un portfolio no se puede tener a si mismo"
	
	| portfolio1 |
	
	portfolio1 := Portfolio new.
	
	self should: [portfolio1 addPortfolio: portfolio1] raise: Error withMessageText: Portfolio errorMessagePortfolioAlreadyAdded.
! !
!PortfolioTest methodsFor: 'errors adding accounts by parents' stamp: 'LH 11/7/2020 21:24:41'!
test15CanNotAddAnAccountToAPortfolioWithAParentThatHasTheAccount
	
	"no se pueden agregar una cueanta a un portfolio (hijo) de un portfolio (padre), cuando la cuenta ya estaba en el portfolio (padre), con varios padres"
	
	| portfolio1 portfolio2 portfolio3 account1 |
	
	portfolio1 := Portfolio new.
	portfolio2 := Portfolio new.
	portfolio3 := Portfolio new.
	
	account1 := ReceptiveAccount new.
	
	portfolio2 addAccount: account1.
	portfolio2 addPortfolio: portfolio3.
	portfolio1 addPortfolio: portfolio3.

	self should: [	portfolio3 addAccount: account1.] raise: Error withMessageText: Portfolio errorMessageAccountAlreadyAdded.
! !
!PortfolioTest methodsFor: 'errors adding accounts by parents' stamp: 'LH 11/7/2020 22:16:09'!
test16CanNotAddAnAccountToAPortfolioWhoseParentHasTheAccount
	
	"no se pueden agregar una cueanta a un portfolio (hijo) de un portfolio (padre), cuando la cuenta ya estaba en el portfolio (padre)"
	
	| portfolio1 portfolio2 account1 |
	
	portfolio1 := Portfolio new.
	portfolio2 := Portfolio new.
	
	account1 := ReceptiveAccount new.
	
	portfolio1 addAccount: account1.
	portfolio1 addPortfolio: portfolio2.

	self should: [	portfolio2 addAccount: account1.] raise: Error withMessageText: Portfolio errorMessageAccountAlreadyAdded.
! !
!PortfolioTest methodsFor: 'errors adding accounts by parents' stamp: 'LH 11/7/2020 22:16:14'!
test17CanNotAddAnAccountToAPortfolioWithAPredecesorsThatHasTheAccount
	
	"no se pueden agregar una cueanta a un hijo si esa cuenta est� en el padre de su padre"
	
	| portfolio1 portfolio2 portfolio3 account1 |
	
	portfolio1 := Portfolio new.
	portfolio2 := Portfolio new.
	portfolio3 := Portfolio new.
	
	account1 := ReceptiveAccount new.
	
	portfolio1 addAccount: account1.
	portfolio1 addPortfolio: portfolio2.
	portfolio2 addPortfolio: portfolio3.

	self should: [	portfolio3 addAccount: account1.] raise: Error withMessageText: Portfolio errorMessageAccountAlreadyAdded.
! !
!PortfolioTest methodsFor: 'errors adding portfolios by parents' stamp: 'LH 11/7/2020 22:16:21'!
test18CantAddAPortfolioWhenItIsAParent
	
	"
		no se pueden agregar un portfolio cuando el padre ya tiene ese portfolio
		p1 ->  p2 -> p1
	"
	
	| portfolio1 portfolio2 |
	
	portfolio1 := Portfolio new.
	portfolio2 := Portfolio new.

	portfolio1 addPortfolio: portfolio2.

	self should: [	portfolio2 addPortfolio: portfolio1.] raise: Error withMessageText: Portfolio errorMessagePortfolioAlreadyAdded.
! !
!PortfolioTest methodsFor: 'errors adding portfolios by parents' stamp: 'LH 11/7/2020 22:18:37'!
test19CantAddAPortfolioWhenItIsAPredecesor
	
	"
		no se pueden agregar un portfolio cuando el padre del padre ya tiene ese portfolio
		p1 ->  p2 -> p3 -> p1
	"
	
	| portfolio1 portfolio2 portfolio3 |
	
	portfolio1 := Portfolio new.
	portfolio2 := Portfolio new.
	portfolio3 := Portfolio new.

	portfolio1 addPortfolio: portfolio2.
	portfolio2 addPortfolio: portfolio3.

	self should: [	portfolio3 addPortfolio: portfolio1.] raise: Error withMessageText: Portfolio errorMessagePortfolioAlreadyAdded.
! !
!PortfolioTest methodsFor: 'errors adding portfolios by parents' stamp: 'LH 11/7/2020 22:18:32'!
test20CantAddAPortfolioWhenAPredecesorAlredyHasIt
	
	"
		no se pueden agregar un portfolio cuando el padre del padre ya tiene ese portfolio
		p1 ->  p2
		p1 ->  p3 -> p2
	"
	
	| portfolio1 portfolio2 portfolio3 |
	
	portfolio1 := Portfolio new.
	portfolio2 := Portfolio new.
	portfolio3 := Portfolio new.

	portfolio1 addPortfolio: portfolio2.
	portfolio1 addPortfolio: portfolio3.

	self should: [	portfolio3 addPortfolio: portfolio2.] raise: Error withMessageText: Portfolio errorMessagePortfolioAlreadyAdded.
! !
!PortfolioTest methodsFor: 'errors adding portfolios by parents' stamp: 'LH 11/7/2020 22:16:32'!
test35CanNotAddAPortfolioWithAccountsAlredyInTheParentsOfTheRevceiver
	
	"
		no se pueden agregar un portfolio cuando tiene cuentas repetidas en los padres del receptor 
		p1 ->	p2 -> p4 -x p5 -> a3,a2,a1|
		     -> a1| -> a2|
			 p3 -> p3|
			      -> a3|
	"
	
	| portfolio1 portfolio2 portfolio3 portfolio4 portfolio5 account1 account2 account3 |
	
	portfolio1 := Portfolio new.
	portfolio2 := Portfolio new.
	portfolio3 := Portfolio new.
	portfolio4 := Portfolio new.
	portfolio5 := Portfolio new.
	
	account1 := ReceptiveAccount new.
	account2 := ReceptiveAccount new.
	account3 := ReceptiveAccount new.	
	
	portfolio1 addPortfolio: portfolio2.
	portfolio2 addPortfolio: portfolio4.
	portfolio3 addPortfolio: portfolio4.
	portfolio1 addAccount: account1.
	portfolio2 addAccount: account2.
	portfolio3 addAccount: account3.
	portfolio5 addAccount: account1.
	portfolio5 addAccount: account2.
	portfolio5 addAccount: account3.

	self should: [	portfolio4 addPortfolio: portfolio5.] raise: Error withMessageText: Portfolio errorMessageAccountAlreadyAdded.
! !
!PortfolioTest methodsFor: 'accounts' stamp: 'LH 11/7/2020 22:18:22'!
test22APortfolioKnowsItsDirectAccounts
	
	"un portfolio expone sus cuentas"
	
	| portfolio1 account1 account2 |
	
	portfolio1 := Portfolio new.
	account1 := ReceptiveAccount new.
	account2 := ReceptiveAccount new.

	portfolio1 addAccount: account1.
	portfolio1 addAccount: account2.	

	self assert: (portfolio1 accounts includesAllOf: (OrderedCollection with: account1 with: account2)).

	
! !
!PortfolioTest methodsFor: 'accounts' stamp: 'LH 11/7/2020 22:18:17'!
test22APortfolioKnowsTheAccountsOfHisPortfolios
	
	"un portfolio expone las cuentas de sus portfolios"
	
	| portfolio1 portfolio2 portfolio3 portfolio4 account1 account2 account3 account4 |

	portfolio1 := Portfolio new.
	portfolio2 := Portfolio new.
	portfolio3 := Portfolio new.
	portfolio4 := Portfolio new.

	account1 := ReceptiveAccount new.
	account2 := ReceptiveAccount new.
	account3 := ReceptiveAccount new.	
	account4 := ReceptiveAccount new.	

	portfolio2 addAccount: account1.
	portfolio2 addAccount: account2.	
	portfolio3 addAccount: account3.
	portfolio4 addAccount: account4.

	portfolio1 addPortfolio: portfolio2.
	portfolio1 addPortfolio: portfolio3.
	portfolio2 addPortfolio: portfolio4.

	self assert: (portfolio1 accounts includesAllOf: (OrderedCollection with: account1 with: account2 with: account3 with: account4)).

	
! !
!PortfolioTest methodsFor: 'balance' stamp: 'LH 11/7/2020 22:18:10'!
test23AnEmptyPortfolioHasABalanceOf0

	"un portfolio vacio responde balance 0"

	| portfolio1 |

	portfolio1 := Portfolio new.

	self assert: (portfolio1 balance) equals: 0.
! !
!PortfolioTest methodsFor: 'balance' stamp: 'LH 11/7/2020 22:18:06'!
test24APortfolioWithOneAccountHasTheBalanceOfThatAccount

	"un portfolio reponde por el balance de su unico hijo"

	| portfolio1 account1 |
	
	account1 := ReceptiveAccount new.
	
	Deposit register: 100 on: account1.
	Withdraw register: 50 on: account1.

	portfolio1 := Portfolio new.

	portfolio1 addAccount: account1.

	self assert: (portfolio1 balance) equals: 50.
! !
!PortfolioTest methodsFor: 'balance' stamp: 'LH 11/7/2020 22:18:02'!
test25TheBalanceOfAPortfolioWithNoPortfoliosIsTheSumOfHisAccounts

	"un portfolio reponde por el balance de sus hijos"

	| portfolio1 account1 account2 |
	
	account1 := ReceptiveAccount new.
	account2 := ReceptiveAccount new.

	Deposit register: 100 on: account1.
	Withdraw register: 50 on: account1.
	Deposit register: 100 on: account2.

	portfolio1 := Portfolio new.

	portfolio1 addAccount: account1.
	portfolio1 addAccount: account2.

	self assert: (portfolio1 balance) equals: 150.
! !
!PortfolioTest methodsFor: 'balance' stamp: 'LH 11/7/2020 22:17:55'!
test26TheBalanceOfAPortfolioIsTheSumOfHisAccountsAndPortfolios

	"un portfolio reponde por el balance de los hijos de sus portfolios"

	| portfolio1 portfolio2 account1 account2 |
	
	account1 := ReceptiveAccount new.
	account2 := ReceptiveAccount new.

	Deposit register: 100 on: account1.
	Withdraw register: 50 on: account1.
	Deposit register: 100 on: account2.

	portfolio1 := Portfolio new.
	portfolio2 := Portfolio new.

	portfolio1 addPortfolio: portfolio2.

	portfolio2 addAccount: account1.
	portfolio2 addAccount: account2.

	self assert: (portfolio1 balance) equals: 150.
! !
!PortfolioTest methodsFor: 'has registered' stamp: 'LH 11/7/2020 22:17:47'!
test27AnEmptyPortfolioHasNoRegisteredTransactions

	"un portfolio vacio no registro ninguna transaccion"
	
	| deposit withdraw portfolio1 |
	
	portfolio1 := Portfolio new.
	deposit :=  Deposit for: 100.
	withdraw := Withdraw for: 50.
		
	self deny: (portfolio1 hasRegistered: deposit).
	self deny: (portfolio1 hasRegistered:withdraw).
! !
!PortfolioTest methodsFor: 'has registered' stamp: 'LH 11/7/2020 22:17:37'!
test28APortfolioWithOneAccountHasItsRegisteredTransactions

	"un portfolio con una cuenta registro sus transacciones"
	
	| deposit withdraw account1 portfolio1 |
	
	account1 := ReceptiveAccount new.
	deposit :=  Deposit register: 100 on: account1.
	withdraw := Withdraw register: 50 on: account1.
	
	portfolio1 := Portfolio new.
	portfolio1 addAccount: account1.

	self assert: (portfolio1 hasRegistered: deposit).
	self assert: (portfolio1 hasRegistered:withdraw).
! !
!PortfolioTest methodsFor: 'has registered' stamp: 'LH 11/7/2020 22:17:29'!
test29APortfolioWithManyAccountsHasItsAccountsRegisteredTransactions

	"un portfolio con varias cuentas registro todas sus transacciones"
	
	| deposit1 deposit2 withdraw1 withdraw2 account1 account2 portfolio1 |
	
	account1 := ReceptiveAccount new.
	account2 := ReceptiveAccount new.

	deposit1 :=  Deposit register: 100 on: account1.
	withdraw1 := Withdraw register: 50 on: account1.
	deposit2 :=  Deposit register: 30 on: account2.
	withdraw2 := Withdraw register: 20 on: account2.

	portfolio1 := Portfolio new.
	portfolio1 addAccount: account1.
	portfolio1 addAccount: account2.

	self assert: (portfolio1 hasRegistered: deposit1).
	self assert: (portfolio1 hasRegistered:withdraw1).
	self assert: (portfolio1 hasRegistered: deposit2).
	self assert: (portfolio1 hasRegistered:withdraw2).
! !
!PortfolioTest methodsFor: 'has registered' stamp: 'LH 11/7/2020 22:17:22'!
test30APortfolioHasItsPortfoliosAndAccountsRegisteredTransactions

	"un portfolio con varias cuentas en sus portfolios registro todas sus transacciones"
	
	| deposit1 deposit2 withdraw1 withdraw2 account1 account2 portfolio1 portfolio2 |
	
	account1 := ReceptiveAccount new.
	account2 := ReceptiveAccount new.

	deposit1 :=  Deposit register: 100 on: account1.
	withdraw1 := Withdraw register: 50 on: account1.
	deposit2 :=  Deposit register: 30 on: account2.
	withdraw2 := Withdraw register: 20 on: account2.

	portfolio1 := Portfolio new.
	portfolio2 := Portfolio new.

	portfolio1 addAccount: account1.
	portfolio1 addAccount: account2.
	
	portfolio2 addPortfolio: portfolio1.

	self assert: (portfolio2 hasRegistered: deposit1).
	self assert: (portfolio2 hasRegistered:withdraw1).
	self assert: (portfolio2 hasRegistered: deposit2).
	self assert: (portfolio2 hasRegistered:withdraw2).
! !
!PortfolioTest methodsFor: 'transactions' stamp: 'LH 11/7/2020 22:17:11'!
test31AnEmptyPortfolioHasNoTransactions

	"un portfolio vacio no tiene transacciones"
	
	| portfolio1 |
	
	portfolio1 := Portfolio new.
		
	self assert: (portfolio1 transactions size) equals: 0.

! !
!PortfolioTest methodsFor: 'transactions' stamp: 'LH 11/7/2020 22:17:01'!
test32APortfolioWithOneAccountHasItsTransactions

	"un portfolio con una cuenta retorna sus transacciones"
	
	| deposit withdraw account1 portfolio1 |
	
	account1 := ReceptiveAccount new.
	deposit :=  Deposit register: 100 on: account1.
	withdraw := Withdraw register: 50 on: account1.
	
	portfolio1 := Portfolio new.
	portfolio1 addAccount: account1.

	self assert: (portfolio1 transactions includesAllOf: (OrderedCollection with: deposit with: withdraw)).

! !
!PortfolioTest methodsFor: 'transactions' stamp: 'LH 11/7/2020 22:16:55'!
test33APortfolioWithManyAccountsHasItsAccountsTransactions

	"un portfolio con varias cuentas retorna todas sus transacciones"
	
	| deposit1 deposit2 withdraw1 withdraw2 account1 account2 portfolio1 |
	
	account1 := ReceptiveAccount new.
	account2 := ReceptiveAccount new.

	deposit1 :=  Deposit register: 100 on: account1.
	withdraw1 := Withdraw register: 50 on: account1.
	deposit2 :=  Deposit register: 30 on: account2.
	withdraw2 := Withdraw register: 20 on: account2.

	portfolio1 := Portfolio new.
	portfolio1 addAccount: account1.
	portfolio1 addAccount: account2.

	self assert: (portfolio1 transactions includesAllOf: (OrderedCollection with: deposit1 with: withdraw1 with: deposit2 with: withdraw2)).

! !
!PortfolioTest methodsFor: 'transactions' stamp: 'LH 11/7/2020 22:16:38'!
test34APortfolioHasItsPortfoliosAndAccountsTransaction

	"un portfolio con varias cuentas en sus portfolios retorna todas sus transacciones"
	
	| deposit1 deposit2 withdraw1 withdraw2 account1 account2 portfolio1 portfolio2 |
	
	account1 := ReceptiveAccount new.
	account2 := ReceptiveAccount new.

	deposit1 :=  Deposit register: 100 on: account1.
	withdraw1 := Withdraw register: 50 on: account1.
	deposit2 :=  Deposit register: 30 on: account2.
	withdraw2 := Withdraw register: 20 on: account2.

	portfolio1 := Portfolio new.
	portfolio2 := Portfolio new.

	portfolio1 addAccount: account1.
	portfolio1 addAccount: account2.
	
	portfolio2 addPortfolio: portfolio1.

	self assert: (portfolio2 transactions includesAllOf: (OrderedCollection with: deposit1 with: withdraw1 with: deposit2 with: withdraw2)).

! !

!classDefinition: #ReceptiveAccountTest category: 'Portfolio-Ejercicio' stamp: 'IO 11/8/2020 18:35:01'!
TestCase subclass: #ReceptiveAccountTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classDefinition: #ReceptiveAccountTest category: 'Portfolio-Ejercicio' stamp: 'IO 11/8/2020 18:35:01'!
TestCase subclass: #ReceptiveAccountTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'NR 11/2/2020 17:13:44'!
test01ReceptiveAccountHaveZeroAsBalanceWhenCreated 

	| account |
	
	account := ReceptiveAccount new.

	self assert: 0 equals: account balance.
! !
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'NR 11/2/2020 17:13:48'!
test02DepositIncreasesBalanceOnTransactionValue 

	| account |
	
	account := ReceptiveAccount  new.
	Deposit register: 100 on: account.
		
	self assert: 100 equals: account balance.
! !
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'NR 11/2/2020 17:13:52'!
test03WithdrawDecreasesBalanceOnTransactionValue 

	| account |
	
	account := ReceptiveAccount new.
	Deposit register: 100 on: account.
	Withdraw register: 50 on: account.
		
	self assert: 50 equals: account balance.
! !
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'HAW 5/23/2019 15:20:32'!
test04WithdrawValueMustBePositive 

	| account withdrawValue |
	
	account := ReceptiveAccount new.
	withdrawValue := 50.
	
	self assert: withdrawValue equals: (Withdraw register: withdrawValue on: account) value
! !
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'HAW 5/23/2019 15:20:46'!
test05ReceptiveAccountKnowsRegisteredTransactions 

	| account deposit withdraw |
	
	account := ReceptiveAccount new.
	deposit := Deposit register: 100 on: account.
	withdraw := Withdraw register: 50 on: account.
		
	self assert: (account hasRegistered: deposit).
	self assert: (account hasRegistered: withdraw).
! !
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'NR 11/2/2020 17:14:15'!
test06ReceptiveAccountDoNotKnowNotRegisteredTransactions

	| deposit withdraw account |
	
	account := ReceptiveAccount new.
	deposit :=  Deposit for: 100.
	withdraw := Withdraw for: 50.
		
	self deny: (account hasRegistered: deposit).
	self deny: (account hasRegistered:withdraw).
! !
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'NR 11/2/2020 17:14:01'!
test07AccountKnowsItsTransactions 

	| account1 deposit1 |
	
	account1 := ReceptiveAccount new.
	
	deposit1 := Deposit register: 50 on: account1.
		
	self assert: 1 equals: account1 transactions size.
	self assert: (account1 transactions includes: deposit1).
! !

!classDefinition: #AccountTransaction category: 'Portfolio-Ejercicio' stamp: 'IO 11/8/2020 18:35:01'!
Object subclass: #AccountTransaction
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classDefinition: #AccountTransaction category: 'Portfolio-Ejercicio' stamp: 'IO 11/8/2020 18:35:01'!
Object subclass: #AccountTransaction
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!
!AccountTransaction methodsFor: 'value' stamp: 'HernanWilkinson 9/12/2011 12:25' overrides: 16881508!
value 

	self subclassResponsibility ! !
!AccountTransaction methodsFor: 'balance operations' stamp: 'LH 11/8/2020 15:48:59'!
addToBalance: aBalance 
	"returns the resulting balance after aplying the net value of this transaction"	

	self subclassResponsibility ! !

!classDefinition: 'AccountTransaction class' category: 'Portfolio-Ejercicio' stamp: 'IO 11/8/2020 18:35:01'!
AccountTransaction class
	instanceVariableNames: ''!

!classDefinition: 'AccountTransaction class' category: 'Portfolio-Ejercicio' stamp: 'IO 11/8/2020 18:35:01'!
AccountTransaction class
	instanceVariableNames: ''!
!AccountTransaction class methodsFor: 'instance creation' stamp: 'NR 10/17/2019 03:22:00'!
register: aValue on: account

	| transaction |
	
	transaction := self for: aValue.
	account register: transaction.
		
	^ transaction! !

!classDefinition: #Deposit category: 'Portfolio-Ejercicio' stamp: 'IO 11/8/2020 18:35:01'!
AccountTransaction subclass: #Deposit
	instanceVariableNames: 'value'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classDefinition: #Deposit category: 'Portfolio-Ejercicio' stamp: 'IO 11/8/2020 18:35:01'!
AccountTransaction subclass: #Deposit
	instanceVariableNames: 'value'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!
!Deposit methodsFor: 'initialization' stamp: 'HernanWilkinson 7/13/2011 18:45'!
initializeFor: aValue

	value := aValue ! !
!Deposit methodsFor: 'value' stamp: 'HernanWilkinson 7/13/2011 18:38' overrides: 50882900!
value

	^ value! !
!Deposit methodsFor: 'balance operations' stamp: 'LH 11/2/2020 20:39:54' overrides: 50882904!
addToBalance: aBalance
	"see superclass"

	^aBalance + value.! !

!classDefinition: 'Deposit class' category: 'Portfolio-Ejercicio' stamp: 'IO 11/8/2020 18:35:01'!
Deposit class
	instanceVariableNames: ''!

!classDefinition: 'Deposit class' category: 'Portfolio-Ejercicio' stamp: 'IO 11/8/2020 18:35:01'!
Deposit class
	instanceVariableNames: ''!
!Deposit class methodsFor: 'instance creation' stamp: 'HernanWilkinson 7/13/2011 18:38'!
for: aValue

	^ self new initializeFor: aValue ! !

!classDefinition: #Withdraw category: 'Portfolio-Ejercicio' stamp: 'IO 11/8/2020 18:35:01'!
AccountTransaction subclass: #Withdraw
	instanceVariableNames: 'value'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classDefinition: #Withdraw category: 'Portfolio-Ejercicio' stamp: 'IO 11/8/2020 18:35:01'!
AccountTransaction subclass: #Withdraw
	instanceVariableNames: 'value'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!
!Withdraw methodsFor: 'initialization' stamp: 'HernanWilkinson 7/13/2011 18:46'!
initializeFor: aValue

	value := aValue ! !
!Withdraw methodsFor: 'value' stamp: 'HernanWilkinson 7/13/2011 18:33' overrides: 50882900!
value

	^ value! !
!Withdraw methodsFor: 'balance operations' stamp: 'LH 11/8/2020 15:49:50' overrides: 50882904!
addToBalance: aBalance
	"see superclass"

	^aBalance - value.! !

!classDefinition: 'Withdraw class' category: 'Portfolio-Ejercicio' stamp: 'IO 11/8/2020 18:35:01'!
Withdraw class
	instanceVariableNames: ''!

!classDefinition: 'Withdraw class' category: 'Portfolio-Ejercicio' stamp: 'IO 11/8/2020 18:35:01'!
Withdraw class
	instanceVariableNames: ''!
!Withdraw class methodsFor: 'instance creation' stamp: 'HernanWilkinson 7/13/2011 18:33'!
for: aValue

	^ self new initializeFor: aValue ! !

!classDefinition: #ParentPortfolios category: 'Portfolio-Ejercicio' stamp: 'IO 11/8/2020 18:35:01'!
Object subclass: #ParentPortfolios
	instanceVariableNames: 'childPortfolio'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classDefinition: #ParentPortfolios category: 'Portfolio-Ejercicio' stamp: 'IO 11/8/2020 18:35:01'!
Object subclass: #ParentPortfolios
	instanceVariableNames: 'childPortfolio'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!
!ParentPortfolios methodsFor: 'validate' stamp: 'LH 11/8/2020 17:53:15'!
validateAccountBeforeAdding: anAccount

	^self subclassResponsibility ! !
!ParentPortfolios methodsFor: 'validate' stamp: 'LH 11/8/2020 17:53:25'!
validatePortfoliosBeforeAdding: anAccount

	^self subclassResponsibility ! !
!ParentPortfolios methodsFor: 'adding' stamp: 'LH 11/8/2020 17:52:41'!
addAsFather: aPortfolio

	self subclassResponsibility ! !

!classDefinition: 'ParentPortfolios class' category: 'Portfolio-Ejercicio' stamp: 'IO 11/8/2020 18:35:01'!
ParentPortfolios class
	instanceVariableNames: ''!

!classDefinition: 'ParentPortfolios class' category: 'Portfolio-Ejercicio' stamp: 'IO 11/8/2020 18:35:01'!
ParentPortfolios class
	instanceVariableNames: ''!
!ParentPortfolios class methodsFor: 'instance creation' stamp: 'LH 11/8/2020 17:42:25'!
forPortfolio: aPortfolio

	^Root new initialize: aPortfolio! !
!ParentPortfolios class methodsFor: 'instance creation' stamp: 'LH 11/8/2020 17:40:12'!
newRoot

	^Root new! !

!classDefinition: #Body category: 'Portfolio-Ejercicio' stamp: 'IO 11/8/2020 18:35:02'!
ParentPortfolios subclass: #Body
	instanceVariableNames: 'parentPortfolios'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classDefinition: #Body category: 'Portfolio-Ejercicio' stamp: 'IO 11/8/2020 18:35:02'!
ParentPortfolios subclass: #Body
	instanceVariableNames: 'parentPortfolios'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!
!Body methodsFor: 'validations' stamp: 'LH 11/8/2020 17:50:14' overrides: 50883031!
validateAccountBeforeAdding: anAccount
	
	parentPortfolios do: [:aParentPortfolio | aParentPortfolio validateAccountBeforeAdding: anAccount].  ! !
!Body methodsFor: 'validations' stamp: 'LH 11/8/2020 17:50:35' overrides: 50883036!
validatePortfoliosBeforeAdding: aPortfolioToAdd
	
	parentPortfolios do: [ :aParentPortfolio | (aParentPortfolio validatePortfolioBeforeAdding: aPortfolioToAdd)].  ! !
!Body methodsFor: 'intiliazing' stamp: 'LH 11/8/2020 17:48:49'!
initializeWith: aParentPortfolio for: aPortfolio

	parentPortfolios := OrderedCollection with: aParentPortfolio.
	
	childPortfolio := aPortfolio.! !
!Body methodsFor: 'adding' stamp: 'LH 11/8/2020 17:06:37' overrides: 50883041!
addAsFather: aPortfolio
	
	parentPortfolios add: aPortfolio.
	^ self.  ! !

!classDefinition: 'Body class' category: 'Portfolio-Ejercicio' stamp: 'IO 11/8/2020 18:35:02'!
Body class
	instanceVariableNames: ''!

!classDefinition: 'Body class' category: 'Portfolio-Ejercicio' stamp: 'IO 11/8/2020 18:35:02'!
Body class
	instanceVariableNames: ''!
!Body class methodsFor: 'instance creation' stamp: 'LH 11/8/2020 17:45:48'!
newWith: aParentPortfolio for: aPortfolio

	^self basicNew initializeWith: aParentPortfolio for: aPortfolio.! !

!classDefinition: #Root category: 'Portfolio-Ejercicio' stamp: 'IO 11/8/2020 18:35:02'!
ParentPortfolios subclass: #Root
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classDefinition: #Root category: 'Portfolio-Ejercicio' stamp: 'IO 11/8/2020 18:35:02'!
ParentPortfolios subclass: #Root
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!
!Root methodsFor: 'initialization' stamp: 'LH 11/8/2020 17:48:16'!
initialize: aPortfolio

	childPortfolio := aPortfolio.! !
!Root methodsFor: 'validations' stamp: 'LH 11/8/2020 17:50:53' overrides: 50883031!
validateAccountBeforeAdding: anAccount

	childPortfolio validateAccountNotAlredyAdded: anAccount.! !
!Root methodsFor: 'validations' stamp: 'LH 11/8/2020 17:51:08' overrides: 50883036!
validatePortfoliosBeforeAdding: aPortfolioToAdd

	childPortfolio validatePortfolioNotAlreadyAdded: aPortfolioToAdd.
	aPortfolioToAdd accounts do:[:anAccount | childPortfolio validateAccountBeforeAdding: anAccount] .! !
!Root methodsFor: 'adding' stamp: 'LH 11/8/2020 17:48:03' overrides: 50883041!
addAsFather: aPortfolio
	
	^ Body newWith: aPortfolio for: childPortfolio.! !

!classDefinition: #TransactionContainer category: 'Portfolio-Ejercicio' stamp: 'IO 11/8/2020 18:35:02'!
Object subclass: #TransactionContainer
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classDefinition: #TransactionContainer category: 'Portfolio-Ejercicio' stamp: 'IO 11/8/2020 18:35:02'!
Object subclass: #TransactionContainer
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!
!TransactionContainer methodsFor: 'accesing' stamp: 'LH 11/8/2020 15:53:50'!
balance
	"returns the balance of all transactions included in this entity"
	
	^self subclassResponsibility.
! !
!TransactionContainer methodsFor: 'accesing' stamp: 'LH 11/8/2020 15:54:12'!
transactions
	"returns all transactions included in this entity"

	^self subclassResponsibility.
! !
!TransactionContainer methodsFor: 'testing' stamp: 'LH 11/8/2020 15:59:05'!
hasRegistered: aTransaction
	"returns true if a Transaction is included in this entity"

	^self subclassResponsibility.
! !

!classDefinition: #Portfolio category: 'Portfolio-Ejercicio' stamp: 'IO 11/8/2020 18:35:02'!
TransactionContainer subclass: #Portfolio
	instanceVariableNames: 'accounts portfolios parentPortfolios'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classDefinition: #Portfolio category: 'Portfolio-Ejercicio' stamp: 'IO 11/8/2020 18:35:02'!
TransactionContainer subclass: #Portfolio
	instanceVariableNames: 'accounts portfolios parentPortfolios'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!
!Portfolio methodsFor: 'initialization' stamp: 'LH 11/8/2020 17:41:29' overrides: 16896425!
initialize

	accounts := OrderedCollection new.
	portfolios := OrderedCollection new.
	
	parentPortfolios := ParentPortfolios forPortfolio: self.
	
	"fatherPortfolios := OrderedCollection new."! !
!Portfolio methodsFor: 'portfolios' stamp: 'LH 11/8/2020 16:02:44'!
addPortfolio: aPortfolio
	"Add aPortfolio to this Portfolio"

	self validatePortfolioBeforeAdding: aPortfolio.

	portfolios add: aPortfolio.
	aPortfolio addAsFather: self. 
! !
!Portfolio methodsFor: 'accounts' stamp: 'LH 11/8/2020 16:02:59'!
addAccount: anAccount
	"add anAccount to this Portfolio"

	self validateAccountBeforeAdding: anAccount.
	
	accounts add: anAccount.! !
!Portfolio methodsFor: 'validations' stamp: 'LH 11/8/2020 17:37:04'!
ifItsARootPortfolioDo: rootClosure elseDo: normalPortfolioClosure
	"if this portfolio has no parents, do rootCLosure. else do normalPortfolioClosure"

	"fatherPortfolios size = 0
		ifTrue: [rootClosure value] 
			
		ifFalse:[normalPortfolioClosure value]."

	
	
	
! !
!Portfolio methodsFor: 'validations' stamp: 'LH 11/8/2020 17:51:26'!
validateAccountBeforeAdding: anAccount
	"validate that anAccount is not alredy in this portfolio or it's parents"
	
	
	parentPortfolios validateAccountBeforeAdding: anAccount.
	
	"self ifItsARootPortfolioDo: [self validateAccountNotAlredyAdded: anAccount.] 
		elseDo: [fatherPortfolios do: [:aPortfolio | aPortfolio validateAccountBeforeAdding: anAccount]  ]."
	
	"fatherPortfolios size = 0
		ifTrue: [self validateAccountNotAlredyAdded: anAccount.] 
		ifFalse:[fatherPortfolios do: [:aPortfolio | aPortfolio validateAccountBeforeAdding: anAccount]  ]."

	! !
!Portfolio methodsFor: 'validations' stamp: 'LH 11/8/2020 16:07:36'!
validateAccountNotAlredyAdded: anAccount
	"validate if an Account is this portfolio"

	(self includesAccount: anAccount) ifTrue: [^self error: Portfolio errorMessageAccountAlreadyAdded].
! !
!Portfolio methodsFor: 'validations' stamp: 'LH 11/8/2020 17:51:38'!
validatePortfolioBeforeAdding: aPortfolio
	"validate that aPortfolio is not in this portfolio nor it's parents; and that the portfolio's accounts aren't in this portfolio not it's parents"

	parentPortfolios validatePortfoliosBeforeAdding: aPortfolio .
	
	
	"self ifItsARootPortfolioDo: [self validatePortfolioNotAlreadyAdded: aPortfolio.
							aPortfolio accounts do:[:anAccount | self validateAccountBeforeAdding: anAccount] .] 
						
			 elseDo: [fatherPortfolios do: [ :fatherPortfolio | (fatherPortfolio validatePortfolioBeforeAdding: aPortfolio)].  ]."




	"fatherPortfolios size = 0
		ifTrue: [self validatePortfolioNotAlreadyAdded: aPortfolio.
				aPortfolio accounts do:[:anAccount | self validateAccountBeforeAdding: anAccount] .] 
			
		ifFalse:[fatherPortfolios do: [ :fatherPortfolio | (fatherPortfolio validatePortfolioBeforeAdding: aPortfolio)].  ]."

	
	
	
! !
!Portfolio methodsFor: 'validations' stamp: 'LH 11/8/2020 17:37:28'!
validatePortfolioNotAlreadyAdded: aPortfolio
	"validate if a Portfolio is this portfolio"
	
	(self includesPortfolio: aPortfolio) ifTrue: [self error: Portfolio errorMessagePortfolioAlreadyAdded].
	(self = aPortfolio) ifTrue:[self error: Portfolio errorMessagePortfolioAlreadyAdded].

	"(self includesFatherPortfolio: aPortfolio) ifTrue: [self error: Portfolio errorMessagePortfolioAlreadyAdded]."
! !
!Portfolio methodsFor: 'accessing' stamp: 'LH 11/8/2020 16:01:57'!
accounts
	"Returns all the accounts of this Portfolio and it's portfolios"
	
	| allAccounts |
	allAccounts := accounts copy.
	portfolios do: [ :portfolio | allAccounts addAll: portfolio accounts ].
	^allAccounts.
! !
!Portfolio methodsFor: 'accessing' stamp: 'LH 11/8/2020 16:11:40' overrides: 50883180!
balance
	"return the balance of this portfolio's accounts's + portfolios's "
	
	| balance |
	balance := 0.
	self accountsAndPortfoliosDo: [ :aThing | balance := balance + aThing balance].
	^balance.
! !
!Portfolio methodsFor: 'accessing' stamp: 'LH 11/8/2020 16:11:46' overrides: 50883186!
transactions
	"return the transactions of this portfolio's accounts and portfolios"

	| transactions |
	transactions := OrderedCollection new.
	self accountsAndPortfoliosDo: [ :account | transactions addAll: account transactions].
	^transactions.
! !
!Portfolio methodsFor: 'testing' stamp: 'LH 11/8/2020 16:12:25' overrides: 50883192!
hasRegistered: aTransaction
	"return if this portfolio has aTransaction as a transaction"
	
	"self accountsAndPortfoliosDo: [ :aThing | (aThing hasRegistered: aDeposit) ifTrue: [^true]]
	^false.."
	
	^self transactions includes: aTransaction.
	
! !
!Portfolio methodsFor: 'testing' stamp: 'LH 11/8/2020 16:13:09'!
includesAccount: anAccount 
	"return if this portfolio has anAccount or not"

	^ self accounts includes: anAccount.

	"portfolios do: [ :portfolio | (portfolio includesAccount: anAccount) ifTrue: [^true]].
	^accounts includes: anAccount."! !
!Portfolio methodsFor: 'testing' stamp: 'LH 11/8/2020 16:13:14'!
includesPortfolio: aPortfolio 
	"return if this portfolio has aPortfolio or not"

	portfolios do: [ :portfolio | (portfolio includesPortfolio: aPortfolio) ifTrue: [^true]].
	
	^portfolios includes: aPortfolio.
! !
!Portfolio methodsFor: 'private' stamp: 'LH 11/7/2020 21:48:56'!
accountsAndPortfoliosDo: anAction
	"A method for doing anAction to a Portfolio's accounts and portfolios"

	accounts do: [ :account | anAction value: account.].
	portfolios do: [ :portfolio | anAction value: portfolio.].
! !
!Portfolio methodsFor: 'private' stamp: 'LH 11/8/2020 17:38:27'!
addAsFather: aPortfolio 
	"Set aPortfolio as a father"

	"fatherPortfolios add: aPortfolio."
	
	parentPortfolios := parentPortfolios addAsFather: aPortfolio.! !

!classDefinition: 'Portfolio class' category: 'Portfolio-Ejercicio' stamp: 'IO 11/8/2020 18:35:02'!
Portfolio class
	instanceVariableNames: ''!

!classDefinition: 'Portfolio class' category: 'Portfolio-Ejercicio' stamp: 'IO 11/8/2020 18:35:02'!
Portfolio class
	instanceVariableNames: ''!
!Portfolio class methodsFor: 'error messages' stamp: 'IO 11/5/2020 15:06:47'!
errorMessageAccountAlreadyAdded
	^'This protfolio already includes this account.'! !
!Portfolio class methodsFor: 'error messages' stamp: 'IO 11/7/2020 17:46:04'!
errorMessageAccountInPortfolioAlreadyAdded
	^'An account in the protfolio to be added is already included in this portfolio.'! !
!Portfolio class methodsFor: 'error messages' stamp: 'IO 11/5/2020 15:10:35'!
errorMessagePortfolioAlreadyAdded
	^'This protfolio already includes the given portfolio.'! !

!classDefinition: #ReceptiveAccount category: 'Portfolio-Ejercicio' stamp: 'IO 11/8/2020 18:35:02'!
TransactionContainer subclass: #ReceptiveAccount
	instanceVariableNames: 'transactions'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classDefinition: #ReceptiveAccount category: 'Portfolio-Ejercicio' stamp: 'IO 11/8/2020 18:35:02'!
TransactionContainer subclass: #ReceptiveAccount
	instanceVariableNames: 'transactions'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!
!ReceptiveAccount methodsFor: 'initialization' stamp: 'NR 10/17/2019 15:06:56' overrides: 16896425!
initialize

	transactions := OrderedCollection new.! !
!ReceptiveAccount methodsFor: 'transactions' stamp: 'HernanWilkinson 7/13/2011 18:37'!
register: aTransaction

	transactions add: aTransaction 
! !
!ReceptiveAccount methodsFor: 'transactions' stamp: 'HernanWilkinson 7/13/2011 18:37' overrides: 50883186!
transactions 

	^ transactions copy! !
!ReceptiveAccount methodsFor: 'balance' stamp: 'IO 11/5/2020 14:33:02' overrides: 50883180!
balance
	|aBalance|
	aBalance := 0.
	transactions do: [ :aTransaction |aBalance:= aTransaction addToBalance: aBalance].
	^aBalance
! !
!ReceptiveAccount methodsFor: 'testing' stamp: 'NR 10/17/2019 03:28:43' overrides: 50883192!
hasRegistered: aTransaction

	^ transactions includes: aTransaction 
! !

!classDefinition: #TransactionPortfolio category: 'Portfolio-Ejercicio' stamp: 'IO 11/8/2020 18:35:02'!
TransactionContainer subclass: #TransactionPortfolio
	instanceVariableNames: 'accounts portfolios fatherPortfolios'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classDefinition: #TransactionPortfolio category: 'Portfolio-Ejercicio' stamp: 'IO 11/8/2020 18:35:02'!
TransactionContainer subclass: #TransactionPortfolio
	instanceVariableNames: 'accounts portfolios fatherPortfolios'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!
!TransactionPortfolio methodsFor: 'initialization' stamp: 'LH 11/8/2020 16:40:46' overrides: 16896425!
initialize

	accounts := OrderedCollection new.
	portfolios := OrderedCollection new.
	
	fatherPortfolios := OrderedCollection new.
	! !
!TransactionPortfolio methodsFor: 'portfolios' stamp: 'LH 11/8/2020 16:40:47'!
addPortfolio: aPortfolio
	"Add aPortfolio to this Portfolio"

	self validatePortfolioBeforeAdding: aPortfolio.

	portfolios add: aPortfolio.
	aPortfolio addAsFather: self. 
! !
!TransactionPortfolio methodsFor: 'accounts' stamp: 'LH 11/8/2020 16:40:47'!
addAccount: anAccount
	"add anAccount to this Portfolio"

	self validateAccountBeforeAdding: anAccount.
	
	accounts add: anAccount.! !
!TransactionPortfolio methodsFor: 'validations' stamp: 'LH 11/8/2020 16:40:47'!
ifItsARootPortfolioDo: rootClosure elseDo: normalPortfolioClosure
	"if this portfolio has no parents, do rootCLosure. else do normalPortfolioClosure"

	fatherPortfolios size = 0
		ifTrue: [rootClosure value] 
			
		ifFalse:[normalPortfolioClosure value].

	
	
	
! !
!TransactionPortfolio methodsFor: 'validations' stamp: 'LH 11/8/2020 16:40:47'!
validateAccountBeforeAdding: anAccount
	"validate that anAccount is not alredy in this portfolio or it's parents"
	
	
	self ifItsARootPortfolioDo: [self validateAccountNotAlredyAdded: anAccount.] 
		elseDo: [fatherPortfolios do: [:aPortfolio | aPortfolio validateAccountBeforeAdding: anAccount]  ].
	
	"fatherPortfolios size = 0
		ifTrue: [self validateAccountNotAlredyAdded: anAccount.] 
		ifFalse:[fatherPortfolios do: [:aPortfolio | aPortfolio validateAccountBeforeAdding: anAccount]  ]."

	! !
!TransactionPortfolio methodsFor: 'validations' stamp: 'LH 11/8/2020 16:40:47'!
validateAccountNotAlredyAdded: anAccount
	"validate if an Account is this portfolio"

	(self includesAccount: anAccount) ifTrue: [^self error: Portfolio errorMessageAccountAlreadyAdded].
! !
!TransactionPortfolio methodsFor: 'validations' stamp: 'LH 11/8/2020 16:40:47'!
validatePortfolioBeforeAdding: aPortfolio
	"validate that aPortfolio is not in this portfolio nor it's parents; and that the portfolio's accounts aren't in this portfolio not it's parents"


	self ifItsARootPortfolioDo: [self validatePortfolioNotAlreadyAdded: aPortfolio.
							aPortfolio accounts do:[:anAccount | self validateAccountBeforeAdding: anAccount] .] 
						
			 elseDo: [fatherPortfolios do: [ :fatherPortfolio | (fatherPortfolio validatePortfolioBeforeAdding: aPortfolio)].  ].




	"fatherPortfolios size = 0
		ifTrue: [self validatePortfolioNotAlreadyAdded: aPortfolio.
				aPortfolio accounts do:[:anAccount | self validateAccountBeforeAdding: anAccount] .] 
			
		ifFalse:[fatherPortfolios do: [ :fatherPortfolio | (fatherPortfolio validatePortfolioBeforeAdding: aPortfolio)].  ]."

	
	
	
! !
!TransactionPortfolio methodsFor: 'validations' stamp: 'LH 11/8/2020 16:40:47'!
validatePortfolioNotAlreadyAdded: aPortfolio
	"validate if a Portfolio is this portfolio"

	(self includesPortfolio: aPortfolio) ifTrue: [self error: Portfolio errorMessagePortfolioAlreadyAdded].
	(self = aPortfolio) ifTrue:[self error: Portfolio errorMessagePortfolioAlreadyAdded].

	"(self includesFatherPortfolio: aPortfolio) ifTrue: [self error: Portfolio errorMessagePortfolioAlreadyAdded]."
! !
!TransactionPortfolio methodsFor: 'accessing' stamp: 'LH 11/8/2020 16:40:47'!
accounts
	"Returns all the accounts of this Portfolio and it's portfolios"
	
	| allAccounts |
	allAccounts := accounts copy.
	portfolios do: [ :portfolio | allAccounts addAll: portfolio accounts ].
	^allAccounts.
! !
!TransactionPortfolio methodsFor: 'accessing' stamp: 'LH 11/8/2020 16:40:47' overrides: 50883180!
balance
	"return the balance of this portfolio's accounts's + portfolios's "
	
	| balance |
	balance := 0.
	self accountsAndPortfoliosDo: [ :aThing | balance := balance + aThing balance].
	^balance.
! !
!TransactionPortfolio methodsFor: 'accessing' stamp: 'LH 11/8/2020 16:40:47' overrides: 50883186!
transactions
	"return the transactions of this portfolio's accounts and portfolios"

	| transactions |
	transactions := OrderedCollection new.
	self accountsAndPortfoliosDo: [ :account | transactions addAll: account transactions].
	^transactions.
! !
!TransactionPortfolio methodsFor: 'testing' stamp: 'LH 11/8/2020 16:40:47' overrides: 50883192!
hasRegistered: aTransaction
	"return if this portfolio has aTransaction as a transaction"
	
	"self accountsAndPortfoliosDo: [ :aThing | (aThing hasRegistered: aDeposit) ifTrue: [^true]]
	^false.."
	
	^self transactions includes: aTransaction.
	
! !
!TransactionPortfolio methodsFor: 'testing' stamp: 'LH 11/8/2020 16:40:47'!
includesAccount: anAccount 
	"return if this portfolio has anAccount or not"

	^ self accounts includes: anAccount.

	"portfolios do: [ :portfolio | (portfolio includesAccount: anAccount) ifTrue: [^true]].
	^accounts includes: anAccount."! !
!TransactionPortfolio methodsFor: 'testing' stamp: 'LH 11/8/2020 16:40:47'!
includesPortfolio: aPortfolio 
	"return if this portfolio has aPortfolio or not"

	portfolios do: [ :portfolio | (portfolio includesPortfolio: aPortfolio) ifTrue: [^true]].
	
	^portfolios includes: aPortfolio.
! !
!TransactionPortfolio methodsFor: 'private' stamp: 'LH 11/8/2020 16:40:47'!
accountsAndPortfoliosDo: anAction
	"A method for doing anAction to a Portfolio's accounts and portfolios"

	accounts do: [ :account | anAction value: account.].
	portfolios do: [ :portfolio | anAction value: portfolio.].
! !
!TransactionPortfolio methodsFor: 'private' stamp: 'LH 11/8/2020 16:40:47'!
addAsFather: aPortfolio 
	"Set aPortfolio as a father"

	fatherPortfolios add: aPortfolio.! !

!classDefinition: 'TransactionPortfolio class' category: 'Portfolio-Ejercicio' stamp: 'IO 11/8/2020 18:35:02'!
TransactionPortfolio class
	instanceVariableNames: ''!

!classDefinition: 'TransactionPortfolio class' category: 'Portfolio-Ejercicio' stamp: 'IO 11/8/2020 18:35:02'!
TransactionPortfolio class
	instanceVariableNames: ''!
!TransactionPortfolio class methodsFor: 'error messages' stamp: 'LH 11/8/2020 16:40:48'!
errorMessageAccountAlreadyAdded
	^'This protfolio already includes this account.'! !
!TransactionPortfolio class methodsFor: 'error messages' stamp: 'LH 11/8/2020 16:40:48'!
errorMessageAccountInPortfolioAlreadyAdded
	^'An account in the protfolio to be added is already included in this portfolio.'! !
!TransactionPortfolio class methodsFor: 'error messages' stamp: 'LH 11/8/2020 16:40:48'!
errorMessagePortfolioAlreadyAdded
	^'This protfolio already includes the given portfolio.'! !
!AccountTransaction methodsFor: 'balance operations' stamp: 'IO 11/8/2020 18:04:55' prior: 50882904!
addToBalance: aBalance

	"returns the resulting balance after aplying the net value of this transaction"	

	self subclassResponsibility ! !
!AccountTransaction methodsFor: 'balance operations' stamp: 'IO 11/8/2020 18:04:58' prior: 50883712!
addToBalance: aBalance

	"returns the resulting balance after aplying the net value of this transaction"	

	self subclassResponsibility.
! !
!AccountTransaction methodsFor: 'accessing' stamp: 'IO 11/8/2020 18:05:31' prior: 50882900 overrides: 16881508!
value

	"returns the value of a transaction"

	self subclassResponsibility.
! !
!AccountTransaction methodsFor: 'accessing' stamp: 'IO 11/8/2020 18:05:42' prior: 50883728 overrides: 16881508!
value

	"returns the value of a transaction. it is always postitive, it is not the net value"

	self subclassResponsibility.
! !
!Deposit methodsFor: 'initialization' stamp: 'IO 11/8/2020 18:06:06' prior: 50882945!
initializeFor: aValue

	value := aValue.
! !
!Deposit methodsFor: 'accessing' stamp: 'IO 11/8/2020 18:06:25' prior: 50882950 overrides: 50883734!
value
	
	"see superclass"

	^value.
! !
!Deposit methodsFor: 'initialization' stamp: 'IO 11/8/2020 18:06:45' prior: 50883741!
initializeFor: aValue

	"create a transaction with a given value"

	value := aValue.
! !

!classDefinition: #Deposit category: 'Portfolio-Ejercicio' stamp: 'IO 11/8/2020 18:35:03'!
AccountTransaction subclass: #Deposit
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classDefinition: #Deposit category: 'Portfolio-Ejercicio' stamp: 'IO 11/8/2020 18:35:03'!
AccountTransaction subclass: #Deposit
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classDefinition: #Withdraw category: 'Portfolio-Ejercicio' stamp: 'IO 11/8/2020 18:35:03'!
AccountTransaction subclass: #Withdraw
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classDefinition: #Withdraw category: 'Portfolio-Ejercicio' stamp: 'IO 11/8/2020 18:35:03'!
AccountTransaction subclass: #Withdraw
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classDefinition: #AccountTransaction category: 'Portfolio-Ejercicio' stamp: 'IO 11/8/2020 18:35:03'!
Object subclass: #AccountTransaction
	instanceVariableNames: 'value'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classDefinition: #AccountTransaction category: 'Portfolio-Ejercicio' stamp: 'IO 11/8/2020 18:35:03'!
Object subclass: #AccountTransaction
	instanceVariableNames: 'value'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!
!AccountTransaction methodsFor: 'nil' stamp: 'IO 11/8/2020 18:07:39'!
initializeFor: aValue

	"initialize a transaction with a given value"

	value := aValue.
! !

!methodRemoval: Deposit #initializeFor: stamp: 'IO 11/8/2020 18:35:03'!
initializeFor: aValue

	"create a transaction with a given value"

	value := aValue.
!

!methodRemoval: Withdraw #initializeFor: stamp: 'IO 11/8/2020 18:35:03'!
initializeFor: aValue

	value := aValue !
!AccountTransaction methodsFor: 'accessing' stamp: 'IO 11/8/2020 18:08:05' prior: 50883734 overrides: 16881508!
value

	"returns the value of a transaction. it is always postitive, it is not the net value"

	^value.

! !

!methodRemoval: Deposit #value stamp: 'IO 11/8/2020 18:35:03'!
value
	
	"see superclass"

	^value.
!

!methodRemoval: Withdraw #value stamp: 'IO 11/8/2020 18:35:03'!
value

	^ value!
!Deposit methodsFor: 'balance operations' stamp: 'IO 11/8/2020 18:09:12' prior: 50882954 overrides: 50883720!
addToBalance: aBalance

	"see superclass"

	^aBalance + value.
! !
!Withdraw methodsFor: 'balance operations' stamp: 'IO 11/8/2020 18:09:19' prior: 50882997 overrides: 50883720!
addToBalance: aBalance

	"see superclass"

	^aBalance - value.
! !

!classRemoval: #TransactionPortfolio stamp: 'IO 11/8/2020 18:35:04'!
TransactionContainer subclass: #TransactionPortfolio
	instanceVariableNames: 'accounts portfolios fatherPortfolios'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!
!TransactionContainer methodsFor: 'testing' stamp: 'IO 11/8/2020 18:10:44' prior: 50883192!
hasRegistered: aTransaction
	"returns true if a Transaction is registered in this entity"

	^self subclassResponsibility.
! !
!TransactionContainer methodsFor: 'accesing' stamp: 'IO 11/8/2020 18:10:55' prior: 50883186!
transactions
	"returns all transactions registered in this entity"

	^self subclassResponsibility.
! !
!ReceptiveAccount methodsFor: 'balance' stamp: 'IO 11/8/2020 18:11:05' prior: 50883465 overrides: 50883180!
balance

	"see superclass"

	|aBalance|
	aBalance := 0.
	transactions do: [ :aTransaction |aBalance:= aTransaction addToBalance: aBalance].
	^aBalance
! !
!ReceptiveAccount methodsFor: 'balance' stamp: 'IO 11/8/2020 18:11:18' prior: 50883864 overrides: 50883180!
balance

	"see superclass"

	| aBalance |

	aBalance := 0.
	transactions do: [ :aTransaction |aBalance:= aTransaction addToBalance: aBalance].

	^aBalance.
! !
!ReceptiveAccount methodsFor: 'balance' stamp: 'IO 11/8/2020 18:11:23' prior: 50883873 overrides: 50883180!
balance

	"see superclass"

	| aBalance |

	aBalance := 0.
	transactions do: [ :aTransaction | aBalance:= aTransaction addToBalance: aBalance].

	^aBalance.
! !
!ReceptiveAccount methodsFor: 'testing' stamp: 'IO 11/8/2020 18:11:47' prior: 50883473 overrides: 50883850!
hasRegistered: aTransaction

	"see superclass"

	^transactions includes: aTransaction.

! !
!ReceptiveAccount methodsFor: 'initialization' stamp: 'IO 11/8/2020 18:12:11' prior: 50883449 overrides: 16896425!
initialize

	"create an account, initially with no transactions regitered"

	transactions := OrderedCollection new.
! !
!ReceptiveAccount methodsFor: 'initialization' stamp: 'IO 11/8/2020 18:12:17' prior: 50883898 overrides: 16896425!
initialize

	"create an account with no transactions regitered"

	transactions := OrderedCollection new.
! !
!ReceptiveAccount methodsFor: 'transactions' stamp: 'IO 11/8/2020 18:12:38' prior: 50883454!
register: aTransaction

	"register a transaction in this account"

	transactions add: aTransaction.
! !
!ReceptiveAccount methodsFor: 'transactions' stamp: 'IO 11/8/2020 18:12:54' prior: 50883460 overrides: 50883857!
transactions

	"see superclass"

	^transactions copy.
! !
!Portfolio methodsFor: 'initialization' stamp: 'IO 11/8/2020 18:16:51' prior: 50883217 overrides: 16896425!
initialize

	"create a portfolio with no accounts and no sub-portfolios"

	accounts := OrderedCollection new.
	portfolios := OrderedCollection new.
	
	parentPortfolios := ParentPortfolios forPortfolio: self.
! !
!AccountTransaction class methodsFor: 'instance creation' stamp: 'IO 11/8/2020 18:17:29' prior: 50882922!
register: aValue on: account

	"create a transaction and register it in an account"

	| transaction |

	transaction := self for: aValue.
	account register: transaction.

	^transaction.
! !
!Deposit class methodsFor: 'instance creation' stamp: 'IO 11/8/2020 18:17:40' prior: 50882968!
for: aValue

	^self new initializeFor: aValue.
! !
!AccountTransaction class methodsFor: 'instance creation' stamp: 'IO 11/8/2020 18:18:13'!
for: aValue

	^self new initializeFor: aValue.
! !

!methodRemoval: Deposit class #for: stamp: 'IO 11/8/2020 18:35:04'!
for: aValue

	^self new initializeFor: aValue.
!

!methodRemoval: Withdraw class #for: stamp: 'IO 11/8/2020 18:35:04'!
for: aValue

	^ self new initializeFor: aValue !
!AccountTransaction class methodsFor: 'instance creation' stamp: 'IO 11/8/2020 18:18:49' prior: 50883950!
for: aValue

	"create a transaction. use register:on: to create it for an account"

	^self new initializeFor: aValue.
! !

!methodRemoval: Portfolio #ifItsARootPortfolioDo:elseDo: stamp: 'IO 11/8/2020 18:35:04'!
ifItsARootPortfolioDo: rootClosure elseDo: normalPortfolioClosure
	"if this portfolio has no parents, do rootCLosure. else do normalPortfolioClosure"

	"fatherPortfolios size = 0
		ifTrue: [rootClosure value] 
			
		ifFalse:[normalPortfolioClosure value]."

	
	
	
!
!Portfolio methodsFor: 'adding' stamp: 'IO 11/8/2020 18:22:41' prior: 50883234!
addAccount: anAccount

	"add anAccount to this Portfolio"

	self validateAccountBeforeAdding: anAccount.
	accounts add: anAccount.
! !
!Portfolio methodsFor: 'adding' stamp: 'IO 11/8/2020 18:23:59' prior: 50883226!
addPortfolio: aPortfolio

	"add aPortfolio to this Portfolio"

	self validatePortfolioBeforeAdding: aPortfolio.
	portfolios add: aPortfolio.
	aPortfolio addAsFather: self.
! !
!Portfolio methodsFor: 'validations' stamp: 'IO 11/8/2020 18:24:44' prior: 50883252!
validateAccountBeforeAdding: anAccount
	"validate that anAccount is not alredy in this portfolio or it's parents"
	
	(self includesAccount: anAccount) ifTrue: [^self error: Portfolio errorMessageAccountAlreadyAdded].
	"parentPortfolios validateAccountBeforeAdding: anAccount."
	
	"self ifItsARootPortfolioDo: [self validateAccountNotAlredyAdded: anAccount.] 
		elseDo: [fatherPortfolios do: [:aPortfolio | aPortfolio validateAccountBeforeAdding: anAccount]  ]."
	
	"fatherPortfolios size = 0
		ifTrue: [self validateAccountNotAlredyAdded: anAccount.] 
		ifFalse:[fatherPortfolios do: [:aPortfolio | aPortfolio validateAccountBeforeAdding: anAccount]  ]."

	! !
!Portfolio methodsFor: 'validations' stamp: 'IO 11/8/2020 18:24:54' prior: 50883997!
validateAccountBeforeAdding: anAccount
	"validate that anAccount is not alredy in this portfolio or it's parents"
	
	
	parentPortfolios validateAccountBeforeAdding: anAccount.
	
	"self ifItsARootPortfolioDo: [self validateAccountNotAlredyAdded: anAccount.] 
		elseDo: [fatherPortfolios do: [:aPortfolio | aPortfolio validateAccountBeforeAdding: anAccount]  ]."
	
	"fatherPortfolios size = 0
		ifTrue: [self validateAccountNotAlredyAdded: anAccount.] 
		ifFalse:[fatherPortfolios do: [:aPortfolio | aPortfolio validateAccountBeforeAdding: anAccount]  ]."

	! !
!Portfolio methodsFor: 'validations' stamp: 'IO 11/8/2020 18:26:40' prior: 50883272!
validateAccountNotAlredyAdded: anAccount
	"validate if an Account is in this portfolio"

	(self includesAccount: anAccount) ifTrue: [^self error: Portfolio errorMessageAccountAlreadyAdded].
! !
!Portfolio methodsFor: 'validations' stamp: 'IO 11/8/2020 18:26:45' prior: 50884042!
validateAccountNotAlredyAdded: anAccount

	"validate if an Account is in this portfolio"

	(self includesAccount: anAccount) ifTrue: [^self error: Portfolio errorMessageAccountAlreadyAdded].
! !
!Portfolio methodsFor: 'validations' stamp: 'IO 11/8/2020 18:29:12' prior: 50884021!
validateAccountBeforeAdding: anAccount

	"validate that anAccount is not alredy in this portfolio or it's parents"

	parentPortfolios validateAccountBeforeAdding: anAccount.

	! !
!Portfolio methodsFor: 'validations' stamp: 'IO 11/8/2020 18:29:27' prior: 50884060!
validateAccountBeforeAdding: anAccount

	"validate that anAccount is not alredy in this portfolio or it's parents"

	parentPortfolios validateAccountBeforeAdding: anAccount.
! !
!Root methodsFor: 'validations' stamp: 'IO 11/8/2020 18:30:33' prior: 50883143 overrides: 50883031!
validateAccountBeforeAdding: anAccount

	"childPortfolio validateAccountNotAlredyAdded: anAccount."
	(childPortfolio includesAccount: anAccount) ifTrue: [^self error: Portfolio errorMessageAccountAlreadyAdded].! !
!Portfolio methodsFor: 'validations' stamp: 'IO 11/8/2020 18:32:03' prior: 50884051!
validateAccountNotAlredyAdded: anAccount

	"validate if an Account is in this portfolio"

	"(self includesAccount: anAccount) ifTrue: [^self error: Portfolio errorMessageAccountAlreadyAdded]."
! !

!methodRemoval: Portfolio #validateAccountNotAlredyAdded: stamp: 'IO 11/8/2020 18:35:04'!
validateAccountNotAlredyAdded: anAccount

	"validate if an Account is in this portfolio"

	"(self includesAccount: anAccount) ifTrue: [^self error: Portfolio errorMessageAccountAlreadyAdded]."
!

!testRun: #PortfolioTest #test01AnAccountCanBeAddedToAPortfolio stamp: 'IO 11/8/2020 18:35:11'!
PASSED!

!testRun: #PortfolioTest #test02APortfolioHasNoAccountsInitially stamp: 'IO 11/8/2020 18:35:11'!
PASSED!

!testRun: #PortfolioTest #test03APortfolioDoesNotHaveMoreAccountsThanAdded stamp: 'IO 11/8/2020 18:35:11'!
PASSED!

!testRun: #PortfolioTest #test04MoreThanOneAccountCanBeAddedToAPortfolio stamp: 'IO 11/8/2020 18:35:11'!
PASSED!

!testRun: #PortfolioTest #test05APortfolioDoesNotHavePortfoliosInitialy stamp: 'IO 11/8/2020 18:35:11'!
PASSED!

!testRun: #PortfolioTest #test06AnEmptyPortfolioCanBeAddedToAPortfolio stamp: 'IO 11/8/2020 18:35:11'!
PASSED!

!testRun: #PortfolioTest #test07VariousEmptyPortfoliosCanBeAddedToAPortfolio stamp: 'IO 11/8/2020 18:35:11'!
PASSED!

!testRun: #PortfolioTest #test08PortfoliosCanBeAddedToAPortfolio stamp: 'IO 11/8/2020 18:35:11'!
PASSED!

!testRun: #PortfolioTest #test09APortfolioWithPortfoliosCanBeAddedToAportfolio stamp: 'IO 11/8/2020 18:35:11'!
PASSED!

!testRun: #PortfolioTest #test10CanNotAddAnAccountToAPortfolioWhosePortfolioHasTheAccount stamp: 'IO 11/8/2020 18:35:11'!
PASSED!

!testRun: #PortfolioTest #test11CanNotAddAnAccountToAPortfolioWhoHasAPortfolioWithTheAccount stamp: 'IO 11/8/2020 18:35:11'!
PASSED!

!testRun: #PortfolioTest #test12APortfolioCantHaveRepeatedAccounts stamp: 'IO 11/8/2020 18:35:11'!
PASSED!

!testRun: #PortfolioTest #test13APortfolioCanNotHaveRepeatedPortfolios stamp: 'IO 11/8/2020 18:35:11'!
PASSED!

!testRun: #PortfolioTest #test14APortffolioCantHaveItself stamp: 'IO 11/8/2020 18:35:11'!
PASSED!

!testRun: #PortfolioTest #test15CanNotAddAnAccountToAPortfolioWithAParentThatHasTheAccount stamp: 'IO 11/8/2020 18:35:11'!
PASSED!

!testRun: #PortfolioTest #test16CanNotAddAnAccountToAPortfolioWhoseParentHasTheAccount stamp: 'IO 11/8/2020 18:35:11'!
PASSED!

!testRun: #PortfolioTest #test17CanNotAddAnAccountToAPortfolioWithAPredecesorsThatHasTheAccount stamp: 'IO 11/8/2020 18:35:11'!
PASSED!

!testRun: #PortfolioTest #test18CantAddAPortfolioWhenItIsAParent stamp: 'IO 11/8/2020 18:35:11'!
PASSED!

!testRun: #PortfolioTest #test19CantAddAPortfolioWhenItIsAPredecesor stamp: 'IO 11/8/2020 18:35:11'!
PASSED!

!testRun: #PortfolioTest #test20CantAddAPortfolioWhenAPredecesorAlredyHasIt stamp: 'IO 11/8/2020 18:35:11'!
PASSED!

!testRun: #PortfolioTest #test22APortfolioKnowsItsDirectAccounts stamp: 'IO 11/8/2020 18:35:11'!
PASSED!

!testRun: #PortfolioTest #test22APortfolioKnowsTheAccountsOfHisPortfolios stamp: 'IO 11/8/2020 18:35:11'!
PASSED!

!testRun: #PortfolioTest #test23AnEmptyPortfolioHasABalanceOf0 stamp: 'IO 11/8/2020 18:35:11'!
PASSED!

!testRun: #PortfolioTest #test24APortfolioWithOneAccountHasTheBalanceOfThatAccount stamp: 'IO 11/8/2020 18:35:11'!
PASSED!

!testRun: #PortfolioTest #test25TheBalanceOfAPortfolioWithNoPortfoliosIsTheSumOfHisAccounts stamp: 'IO 11/8/2020 18:35:11'!
PASSED!

!testRun: #PortfolioTest #test26TheBalanceOfAPortfolioIsTheSumOfHisAccountsAndPortfolios stamp: 'IO 11/8/2020 18:35:11'!
PASSED!

!testRun: #PortfolioTest #test27AnEmptyPortfolioHasNoRegisteredTransactions stamp: 'IO 11/8/2020 18:35:11'!
PASSED!

!testRun: #PortfolioTest #test28APortfolioWithOneAccountHasItsRegisteredTransactions stamp: 'IO 11/8/2020 18:35:11'!
PASSED!

!testRun: #PortfolioTest #test29APortfolioWithManyAccountsHasItsAccountsRegisteredTransactions stamp: 'IO 11/8/2020 18:35:11'!
PASSED!

!testRun: #PortfolioTest #test30APortfolioHasItsPortfoliosAndAccountsRegisteredTransactions stamp: 'IO 11/8/2020 18:35:11'!
PASSED!

!testRun: #PortfolioTest #test31AnEmptyPortfolioHasNoTransactions stamp: 'IO 11/8/2020 18:35:11'!
PASSED!

!testRun: #PortfolioTest #test32APortfolioWithOneAccountHasItsTransactions stamp: 'IO 11/8/2020 18:35:11'!
PASSED!

!testRun: #PortfolioTest #test33APortfolioWithManyAccountsHasItsAccountsTransactions stamp: 'IO 11/8/2020 18:35:11'!
PASSED!

!testRun: #PortfolioTest #test34APortfolioHasItsPortfoliosAndAccountsTransaction stamp: 'IO 11/8/2020 18:35:11'!
PASSED!

!testRun: #PortfolioTest #test35CanNotAddAPortfolioWithAccountsAlredyInTheParentsOfTheRevceiver stamp: 'IO 11/8/2020 18:35:11'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'IO 11/8/2020 18:35:11'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'IO 11/8/2020 18:35:11'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'IO 11/8/2020 18:35:11'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'IO 11/8/2020 18:35:11'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'IO 11/8/2020 18:35:11'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'IO 11/8/2020 18:35:11'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'IO 11/8/2020 18:35:11'!
PASSED!

!testRun: #PortfolioTest #test01AnAccountCanBeAddedToAPortfolio stamp: 'IO 11/8/2020 18:35:56'!
PASSED!

!testRun: #PortfolioTest #test02APortfolioHasNoAccountsInitially stamp: 'IO 11/8/2020 18:35:56'!
PASSED!

!testRun: #PortfolioTest #test03APortfolioDoesNotHaveMoreAccountsThanAdded stamp: 'IO 11/8/2020 18:35:56'!
PASSED!

!testRun: #PortfolioTest #test04MoreThanOneAccountCanBeAddedToAPortfolio stamp: 'IO 11/8/2020 18:35:56'!
PASSED!

!testRun: #PortfolioTest #test05APortfolioDoesNotHavePortfoliosInitialy stamp: 'IO 11/8/2020 18:35:56'!
PASSED!

!testRun: #PortfolioTest #test06AnEmptyPortfolioCanBeAddedToAPortfolio stamp: 'IO 11/8/2020 18:35:56'!
PASSED!

!testRun: #PortfolioTest #test07VariousEmptyPortfoliosCanBeAddedToAPortfolio stamp: 'IO 11/8/2020 18:35:56'!
PASSED!

!testRun: #PortfolioTest #test08PortfoliosCanBeAddedToAPortfolio stamp: 'IO 11/8/2020 18:35:56'!
PASSED!

!testRun: #PortfolioTest #test09APortfolioWithPortfoliosCanBeAddedToAportfolio stamp: 'IO 11/8/2020 18:35:56'!
PASSED!

!testRun: #PortfolioTest #test10CanNotAddAnAccountToAPortfolioWhosePortfolioHasTheAccount stamp: 'IO 11/8/2020 18:35:56'!
PASSED!

!testRun: #PortfolioTest #test11CanNotAddAnAccountToAPortfolioWhoHasAPortfolioWithTheAccount stamp: 'IO 11/8/2020 18:35:56'!
PASSED!

!testRun: #PortfolioTest #test12APortfolioCantHaveRepeatedAccounts stamp: 'IO 11/8/2020 18:35:56'!
PASSED!

!testRun: #PortfolioTest #test13APortfolioCanNotHaveRepeatedPortfolios stamp: 'IO 11/8/2020 18:35:56'!
PASSED!

!testRun: #PortfolioTest #test14APortffolioCantHaveItself stamp: 'IO 11/8/2020 18:35:56'!
PASSED!

!testRun: #PortfolioTest #test15CanNotAddAnAccountToAPortfolioWithAParentThatHasTheAccount stamp: 'IO 11/8/2020 18:35:56'!
PASSED!

!testRun: #PortfolioTest #test16CanNotAddAnAccountToAPortfolioWhoseParentHasTheAccount stamp: 'IO 11/8/2020 18:35:56'!
PASSED!

!testRun: #PortfolioTest #test17CanNotAddAnAccountToAPortfolioWithAPredecesorsThatHasTheAccount stamp: 'IO 11/8/2020 18:35:56'!
PASSED!

!testRun: #PortfolioTest #test18CantAddAPortfolioWhenItIsAParent stamp: 'IO 11/8/2020 18:35:56'!
PASSED!

!testRun: #PortfolioTest #test19CantAddAPortfolioWhenItIsAPredecesor stamp: 'IO 11/8/2020 18:35:56'!
PASSED!

!testRun: #PortfolioTest #test20CantAddAPortfolioWhenAPredecesorAlredyHasIt stamp: 'IO 11/8/2020 18:35:56'!
PASSED!

!testRun: #PortfolioTest #test22APortfolioKnowsItsDirectAccounts stamp: 'IO 11/8/2020 18:35:56'!
PASSED!

!testRun: #PortfolioTest #test22APortfolioKnowsTheAccountsOfHisPortfolios stamp: 'IO 11/8/2020 18:35:56'!
PASSED!

!testRun: #PortfolioTest #test23AnEmptyPortfolioHasABalanceOf0 stamp: 'IO 11/8/2020 18:35:56'!
PASSED!

!testRun: #PortfolioTest #test24APortfolioWithOneAccountHasTheBalanceOfThatAccount stamp: 'IO 11/8/2020 18:35:56'!
PASSED!

!testRun: #PortfolioTest #test25TheBalanceOfAPortfolioWithNoPortfoliosIsTheSumOfHisAccounts stamp: 'IO 11/8/2020 18:35:56'!
PASSED!

!testRun: #PortfolioTest #test26TheBalanceOfAPortfolioIsTheSumOfHisAccountsAndPortfolios stamp: 'IO 11/8/2020 18:35:56'!
PASSED!

!testRun: #PortfolioTest #test27AnEmptyPortfolioHasNoRegisteredTransactions stamp: 'IO 11/8/2020 18:35:56'!
PASSED!

!testRun: #PortfolioTest #test28APortfolioWithOneAccountHasItsRegisteredTransactions stamp: 'IO 11/8/2020 18:35:56'!
PASSED!

!testRun: #PortfolioTest #test29APortfolioWithManyAccountsHasItsAccountsRegisteredTransactions stamp: 'IO 11/8/2020 18:35:56'!
PASSED!

!testRun: #PortfolioTest #test30APortfolioHasItsPortfoliosAndAccountsRegisteredTransactions stamp: 'IO 11/8/2020 18:35:56'!
PASSED!

!testRun: #PortfolioTest #test31AnEmptyPortfolioHasNoTransactions stamp: 'IO 11/8/2020 18:35:56'!
PASSED!

!testRun: #PortfolioTest #test32APortfolioWithOneAccountHasItsTransactions stamp: 'IO 11/8/2020 18:35:56'!
PASSED!

!testRun: #PortfolioTest #test33APortfolioWithManyAccountsHasItsAccountsTransactions stamp: 'IO 11/8/2020 18:35:56'!
PASSED!

!testRun: #PortfolioTest #test34APortfolioHasItsPortfoliosAndAccountsTransaction stamp: 'IO 11/8/2020 18:35:56'!
PASSED!

!testRun: #PortfolioTest #test35CanNotAddAPortfolioWithAccountsAlredyInTheParentsOfTheRevceiver stamp: 'IO 11/8/2020 18:35:56'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'IO 11/8/2020 18:35:56'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'IO 11/8/2020 18:35:56'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'IO 11/8/2020 18:35:56'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'IO 11/8/2020 18:35:56'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'IO 11/8/2020 18:35:56'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'IO 11/8/2020 18:35:56'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'IO 11/8/2020 18:35:56'!
PASSED!
!TransactionContainer methodsFor: 'accesing' stamp: 'IO 11/8/2020 18:36:35' prior: 50883180!
balance

	"returns the balance of all transactions included in this entity"
	
	^self subclassResponsibility.
! !
!TransactionContainer methodsFor: 'testing' stamp: 'IO 11/8/2020 18:36:40' prior: 50883850!
hasRegistered: aTransaction

	"returns true if a Transaction is registered in this entity"

	^self subclassResponsibility.
! !
!TransactionContainer methodsFor: 'accesing' stamp: 'IO 11/8/2020 18:36:46' prior: 50883857!
transactions

	"returns all transactions registered in this entity"

	^self subclassResponsibility.
! !

!testRun: #PortfolioTest #test01AnAccountCanBeAddedToAPortfolio stamp: 'IO 11/8/2020 18:36:49'!
PASSED!

!testRun: #PortfolioTest #test02APortfolioHasNoAccountsInitially stamp: 'IO 11/8/2020 18:36:49'!
PASSED!

!testRun: #PortfolioTest #test03APortfolioDoesNotHaveMoreAccountsThanAdded stamp: 'IO 11/8/2020 18:36:49'!
PASSED!

!testRun: #PortfolioTest #test04MoreThanOneAccountCanBeAddedToAPortfolio stamp: 'IO 11/8/2020 18:36:49'!
PASSED!

!testRun: #PortfolioTest #test05APortfolioDoesNotHavePortfoliosInitialy stamp: 'IO 11/8/2020 18:36:49'!
PASSED!

!testRun: #PortfolioTest #test06AnEmptyPortfolioCanBeAddedToAPortfolio stamp: 'IO 11/8/2020 18:36:49'!
PASSED!

!testRun: #PortfolioTest #test07VariousEmptyPortfoliosCanBeAddedToAPortfolio stamp: 'IO 11/8/2020 18:36:49'!
PASSED!

!testRun: #PortfolioTest #test08PortfoliosCanBeAddedToAPortfolio stamp: 'IO 11/8/2020 18:36:50'!
PASSED!

!testRun: #PortfolioTest #test09APortfolioWithPortfoliosCanBeAddedToAportfolio stamp: 'IO 11/8/2020 18:36:50'!
PASSED!

!testRun: #PortfolioTest #test10CanNotAddAnAccountToAPortfolioWhosePortfolioHasTheAccount stamp: 'IO 11/8/2020 18:36:50'!
PASSED!

!testRun: #PortfolioTest #test11CanNotAddAnAccountToAPortfolioWhoHasAPortfolioWithTheAccount stamp: 'IO 11/8/2020 18:36:50'!
PASSED!

!testRun: #PortfolioTest #test12APortfolioCantHaveRepeatedAccounts stamp: 'IO 11/8/2020 18:36:50'!
PASSED!

!testRun: #PortfolioTest #test13APortfolioCanNotHaveRepeatedPortfolios stamp: 'IO 11/8/2020 18:36:50'!
PASSED!

!testRun: #PortfolioTest #test14APortffolioCantHaveItself stamp: 'IO 11/8/2020 18:36:50'!
PASSED!

!testRun: #PortfolioTest #test15CanNotAddAnAccountToAPortfolioWithAParentThatHasTheAccount stamp: 'IO 11/8/2020 18:36:50'!
PASSED!

!testRun: #PortfolioTest #test16CanNotAddAnAccountToAPortfolioWhoseParentHasTheAccount stamp: 'IO 11/8/2020 18:36:50'!
PASSED!

!testRun: #PortfolioTest #test17CanNotAddAnAccountToAPortfolioWithAPredecesorsThatHasTheAccount stamp: 'IO 11/8/2020 18:36:50'!
PASSED!

!testRun: #PortfolioTest #test18CantAddAPortfolioWhenItIsAParent stamp: 'IO 11/8/2020 18:36:50'!
PASSED!

!testRun: #PortfolioTest #test19CantAddAPortfolioWhenItIsAPredecesor stamp: 'IO 11/8/2020 18:36:50'!
PASSED!

!testRun: #PortfolioTest #test20CantAddAPortfolioWhenAPredecesorAlredyHasIt stamp: 'IO 11/8/2020 18:36:50'!
PASSED!

!testRun: #PortfolioTest #test22APortfolioKnowsItsDirectAccounts stamp: 'IO 11/8/2020 18:36:50'!
PASSED!

!testRun: #PortfolioTest #test22APortfolioKnowsTheAccountsOfHisPortfolios stamp: 'IO 11/8/2020 18:36:50'!
PASSED!

!testRun: #PortfolioTest #test23AnEmptyPortfolioHasABalanceOf0 stamp: 'IO 11/8/2020 18:36:50'!
PASSED!

!testRun: #PortfolioTest #test24APortfolioWithOneAccountHasTheBalanceOfThatAccount stamp: 'IO 11/8/2020 18:36:50'!
PASSED!

!testRun: #PortfolioTest #test25TheBalanceOfAPortfolioWithNoPortfoliosIsTheSumOfHisAccounts stamp: 'IO 11/8/2020 18:36:50'!
PASSED!

!testRun: #PortfolioTest #test26TheBalanceOfAPortfolioIsTheSumOfHisAccountsAndPortfolios stamp: 'IO 11/8/2020 18:36:50'!
PASSED!

!testRun: #PortfolioTest #test27AnEmptyPortfolioHasNoRegisteredTransactions stamp: 'IO 11/8/2020 18:36:50'!
PASSED!

!testRun: #PortfolioTest #test28APortfolioWithOneAccountHasItsRegisteredTransactions stamp: 'IO 11/8/2020 18:36:50'!
PASSED!

!testRun: #PortfolioTest #test29APortfolioWithManyAccountsHasItsAccountsRegisteredTransactions stamp: 'IO 11/8/2020 18:36:50'!
PASSED!

!testRun: #PortfolioTest #test30APortfolioHasItsPortfoliosAndAccountsRegisteredTransactions stamp: 'IO 11/8/2020 18:36:50'!
PASSED!

!testRun: #PortfolioTest #test31AnEmptyPortfolioHasNoTransactions stamp: 'IO 11/8/2020 18:36:50'!
PASSED!

!testRun: #PortfolioTest #test32APortfolioWithOneAccountHasItsTransactions stamp: 'IO 11/8/2020 18:36:50'!
PASSED!

!testRun: #PortfolioTest #test33APortfolioWithManyAccountsHasItsAccountsTransactions stamp: 'IO 11/8/2020 18:36:50'!
PASSED!

!testRun: #PortfolioTest #test34APortfolioHasItsPortfoliosAndAccountsTransaction stamp: 'IO 11/8/2020 18:36:50'!
PASSED!

!testRun: #PortfolioTest #test35CanNotAddAPortfolioWithAccountsAlredyInTheParentsOfTheRevceiver stamp: 'IO 11/8/2020 18:36:50'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'IO 11/8/2020 18:36:50'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'IO 11/8/2020 18:36:50'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'IO 11/8/2020 18:36:50'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'IO 11/8/2020 18:36:50'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'IO 11/8/2020 18:36:50'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'IO 11/8/2020 18:36:50'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'IO 11/8/2020 18:36:50'!
PASSED!

----SNAPSHOT----(8 November 2020 18:37:04) CuisUniversity-4384.image priorSource: 17495055!
!Portfolio methodsFor: 'validations' stamp: 'IO 11/8/2020 18:37:35' prior: 50883281!
validatePortfolioBeforeAdding: aPortfolio

	"validate that aPortfolio is not in this portfolio nor it's parents; and that the portfolio's accounts aren't in this portfolio not it's parents"

	parentPortfolios validatePortfoliosBeforeAdding: aPortfolio .
! !

!testRun: #PortfolioTest #test01AnAccountCanBeAddedToAPortfolio stamp: 'IO 11/8/2020 18:37:38'!
PASSED!

!testRun: #PortfolioTest #test02APortfolioHasNoAccountsInitially stamp: 'IO 11/8/2020 18:37:38'!
PASSED!

!testRun: #PortfolioTest #test03APortfolioDoesNotHaveMoreAccountsThanAdded stamp: 'IO 11/8/2020 18:37:38'!
PASSED!

!testRun: #PortfolioTest #test04MoreThanOneAccountCanBeAddedToAPortfolio stamp: 'IO 11/8/2020 18:37:38'!
PASSED!

!testRun: #PortfolioTest #test05APortfolioDoesNotHavePortfoliosInitialy stamp: 'IO 11/8/2020 18:37:38'!
PASSED!

!testRun: #PortfolioTest #test06AnEmptyPortfolioCanBeAddedToAPortfolio stamp: 'IO 11/8/2020 18:37:38'!
PASSED!

!testRun: #PortfolioTest #test07VariousEmptyPortfoliosCanBeAddedToAPortfolio stamp: 'IO 11/8/2020 18:37:38'!
PASSED!

!testRun: #PortfolioTest #test08PortfoliosCanBeAddedToAPortfolio stamp: 'IO 11/8/2020 18:37:38'!
PASSED!

!testRun: #PortfolioTest #test09APortfolioWithPortfoliosCanBeAddedToAportfolio stamp: 'IO 11/8/2020 18:37:38'!
PASSED!

!testRun: #PortfolioTest #test10CanNotAddAnAccountToAPortfolioWhosePortfolioHasTheAccount stamp: 'IO 11/8/2020 18:37:38'!
PASSED!

!testRun: #PortfolioTest #test11CanNotAddAnAccountToAPortfolioWhoHasAPortfolioWithTheAccount stamp: 'IO 11/8/2020 18:37:38'!
PASSED!

!testRun: #PortfolioTest #test12APortfolioCantHaveRepeatedAccounts stamp: 'IO 11/8/2020 18:37:38'!
PASSED!

!testRun: #PortfolioTest #test13APortfolioCanNotHaveRepeatedPortfolios stamp: 'IO 11/8/2020 18:37:38'!
PASSED!

!testRun: #PortfolioTest #test14APortffolioCantHaveItself stamp: 'IO 11/8/2020 18:37:38'!
PASSED!

!testRun: #PortfolioTest #test15CanNotAddAnAccountToAPortfolioWithAParentThatHasTheAccount stamp: 'IO 11/8/2020 18:37:38'!
PASSED!

!testRun: #PortfolioTest #test16CanNotAddAnAccountToAPortfolioWhoseParentHasTheAccount stamp: 'IO 11/8/2020 18:37:38'!
PASSED!

!testRun: #PortfolioTest #test17CanNotAddAnAccountToAPortfolioWithAPredecesorsThatHasTheAccount stamp: 'IO 11/8/2020 18:37:38'!
PASSED!

!testRun: #PortfolioTest #test18CantAddAPortfolioWhenItIsAParent stamp: 'IO 11/8/2020 18:37:38'!
PASSED!

!testRun: #PortfolioTest #test19CantAddAPortfolioWhenItIsAPredecesor stamp: 'IO 11/8/2020 18:37:38'!
PASSED!

!testRun: #PortfolioTest #test20CantAddAPortfolioWhenAPredecesorAlredyHasIt stamp: 'IO 11/8/2020 18:37:38'!
PASSED!

!testRun: #PortfolioTest #test22APortfolioKnowsItsDirectAccounts stamp: 'IO 11/8/2020 18:37:38'!
PASSED!

!testRun: #PortfolioTest #test22APortfolioKnowsTheAccountsOfHisPortfolios stamp: 'IO 11/8/2020 18:37:38'!
PASSED!

!testRun: #PortfolioTest #test23AnEmptyPortfolioHasABalanceOf0 stamp: 'IO 11/8/2020 18:37:38'!
PASSED!

!testRun: #PortfolioTest #test24APortfolioWithOneAccountHasTheBalanceOfThatAccount stamp: 'IO 11/8/2020 18:37:38'!
PASSED!

!testRun: #PortfolioTest #test25TheBalanceOfAPortfolioWithNoPortfoliosIsTheSumOfHisAccounts stamp: 'IO 11/8/2020 18:37:38'!
PASSED!

!testRun: #PortfolioTest #test26TheBalanceOfAPortfolioIsTheSumOfHisAccountsAndPortfolios stamp: 'IO 11/8/2020 18:37:38'!
PASSED!

!testRun: #PortfolioTest #test27AnEmptyPortfolioHasNoRegisteredTransactions stamp: 'IO 11/8/2020 18:37:38'!
PASSED!

!testRun: #PortfolioTest #test28APortfolioWithOneAccountHasItsRegisteredTransactions stamp: 'IO 11/8/2020 18:37:38'!
PASSED!

!testRun: #PortfolioTest #test29APortfolioWithManyAccountsHasItsAccountsRegisteredTransactions stamp: 'IO 11/8/2020 18:37:38'!
PASSED!

!testRun: #PortfolioTest #test30APortfolioHasItsPortfoliosAndAccountsRegisteredTransactions stamp: 'IO 11/8/2020 18:37:38'!
PASSED!

!testRun: #PortfolioTest #test31AnEmptyPortfolioHasNoTransactions stamp: 'IO 11/8/2020 18:37:38'!
PASSED!

!testRun: #PortfolioTest #test32APortfolioWithOneAccountHasItsTransactions stamp: 'IO 11/8/2020 18:37:38'!
PASSED!

!testRun: #PortfolioTest #test33APortfolioWithManyAccountsHasItsAccountsTransactions stamp: 'IO 11/8/2020 18:37:38'!
PASSED!

!testRun: #PortfolioTest #test34APortfolioHasItsPortfoliosAndAccountsTransaction stamp: 'IO 11/8/2020 18:37:38'!
PASSED!

!testRun: #PortfolioTest #test35CanNotAddAPortfolioWithAccountsAlredyInTheParentsOfTheRevceiver stamp: 'IO 11/8/2020 18:37:38'!
PASSED!
!Root methodsFor: 'validations' stamp: 'IO 11/8/2020 18:38:47' prior: 50883149 overrides: 50883036!
validatePortfoliosBeforeAdding: aPortfolioToAdd

	(childPortfolio includesPortfolio: aPortfolioToAdd) ifTrue: [self error: Portfolio errorMessagePortfolioAlreadyAdded].
	(childPortfolio = aPortfolioToAdd) ifTrue:[self error: Portfolio errorMessagePortfolioAlreadyAdded].
	aPortfolioToAdd accounts do:[:anAccount | childPortfolio validateAccountBeforeAdding: anAccount] .! !

!testRun: #PortfolioTest #test01AnAccountCanBeAddedToAPortfolio stamp: 'IO 11/8/2020 18:38:51'!
PASSED!

!testRun: #PortfolioTest #test02APortfolioHasNoAccountsInitially stamp: 'IO 11/8/2020 18:38:51'!
PASSED!

!testRun: #PortfolioTest #test03APortfolioDoesNotHaveMoreAccountsThanAdded stamp: 'IO 11/8/2020 18:38:51'!
PASSED!

!testRun: #PortfolioTest #test04MoreThanOneAccountCanBeAddedToAPortfolio stamp: 'IO 11/8/2020 18:38:51'!
PASSED!

!testRun: #PortfolioTest #test05APortfolioDoesNotHavePortfoliosInitialy stamp: 'IO 11/8/2020 18:38:51'!
PASSED!

!testRun: #PortfolioTest #test06AnEmptyPortfolioCanBeAddedToAPortfolio stamp: 'IO 11/8/2020 18:38:51'!
PASSED!

!testRun: #PortfolioTest #test07VariousEmptyPortfoliosCanBeAddedToAPortfolio stamp: 'IO 11/8/2020 18:38:51'!
PASSED!

!testRun: #PortfolioTest #test08PortfoliosCanBeAddedToAPortfolio stamp: 'IO 11/8/2020 18:38:51'!
PASSED!

!testRun: #PortfolioTest #test09APortfolioWithPortfoliosCanBeAddedToAportfolio stamp: 'IO 11/8/2020 18:38:51'!
PASSED!

!testRun: #PortfolioTest #test10CanNotAddAnAccountToAPortfolioWhosePortfolioHasTheAccount stamp: 'IO 11/8/2020 18:38:51'!
PASSED!

!testRun: #PortfolioTest #test11CanNotAddAnAccountToAPortfolioWhoHasAPortfolioWithTheAccount stamp: 'IO 11/8/2020 18:38:51'!
PASSED!

!testRun: #PortfolioTest #test12APortfolioCantHaveRepeatedAccounts stamp: 'IO 11/8/2020 18:38:51'!
PASSED!

!testRun: #PortfolioTest #test13APortfolioCanNotHaveRepeatedPortfolios stamp: 'IO 11/8/2020 18:38:51'!
PASSED!

!testRun: #PortfolioTest #test14APortffolioCantHaveItself stamp: 'IO 11/8/2020 18:38:51'!
PASSED!

!testRun: #PortfolioTest #test15CanNotAddAnAccountToAPortfolioWithAParentThatHasTheAccount stamp: 'IO 11/8/2020 18:38:51'!
PASSED!

!testRun: #PortfolioTest #test16CanNotAddAnAccountToAPortfolioWhoseParentHasTheAccount stamp: 'IO 11/8/2020 18:38:51'!
PASSED!

!testRun: #PortfolioTest #test17CanNotAddAnAccountToAPortfolioWithAPredecesorsThatHasTheAccount stamp: 'IO 11/8/2020 18:38:51'!
PASSED!

!testRun: #PortfolioTest #test18CantAddAPortfolioWhenItIsAParent stamp: 'IO 11/8/2020 18:38:51'!
PASSED!

!testRun: #PortfolioTest #test19CantAddAPortfolioWhenItIsAPredecesor stamp: 'IO 11/8/2020 18:38:51'!
PASSED!

!testRun: #PortfolioTest #test20CantAddAPortfolioWhenAPredecesorAlredyHasIt stamp: 'IO 11/8/2020 18:38:51'!
PASSED!

!testRun: #PortfolioTest #test22APortfolioKnowsItsDirectAccounts stamp: 'IO 11/8/2020 18:38:51'!
PASSED!

!testRun: #PortfolioTest #test22APortfolioKnowsTheAccountsOfHisPortfolios stamp: 'IO 11/8/2020 18:38:51'!
PASSED!

!testRun: #PortfolioTest #test23AnEmptyPortfolioHasABalanceOf0 stamp: 'IO 11/8/2020 18:38:51'!
PASSED!

!testRun: #PortfolioTest #test24APortfolioWithOneAccountHasTheBalanceOfThatAccount stamp: 'IO 11/8/2020 18:38:51'!
PASSED!

!testRun: #PortfolioTest #test25TheBalanceOfAPortfolioWithNoPortfoliosIsTheSumOfHisAccounts stamp: 'IO 11/8/2020 18:38:51'!
PASSED!

!testRun: #PortfolioTest #test26TheBalanceOfAPortfolioIsTheSumOfHisAccountsAndPortfolios stamp: 'IO 11/8/2020 18:38:51'!
PASSED!

!testRun: #PortfolioTest #test27AnEmptyPortfolioHasNoRegisteredTransactions stamp: 'IO 11/8/2020 18:38:51'!
PASSED!

!testRun: #PortfolioTest #test28APortfolioWithOneAccountHasItsRegisteredTransactions stamp: 'IO 11/8/2020 18:38:51'!
PASSED!

!testRun: #PortfolioTest #test29APortfolioWithManyAccountsHasItsAccountsRegisteredTransactions stamp: 'IO 11/8/2020 18:38:51'!
PASSED!

!testRun: #PortfolioTest #test30APortfolioHasItsPortfoliosAndAccountsRegisteredTransactions stamp: 'IO 11/8/2020 18:38:51'!
PASSED!

!testRun: #PortfolioTest #test31AnEmptyPortfolioHasNoTransactions stamp: 'IO 11/8/2020 18:38:51'!
PASSED!

!testRun: #PortfolioTest #test32APortfolioWithOneAccountHasItsTransactions stamp: 'IO 11/8/2020 18:38:51'!
PASSED!

!testRun: #PortfolioTest #test33APortfolioWithManyAccountsHasItsAccountsTransactions stamp: 'IO 11/8/2020 18:38:51'!
PASSED!

!testRun: #PortfolioTest #test34APortfolioHasItsPortfoliosAndAccountsTransaction stamp: 'IO 11/8/2020 18:38:51'!
PASSED!

!testRun: #PortfolioTest #test35CanNotAddAPortfolioWithAccountsAlredyInTheParentsOfTheRevceiver stamp: 'IO 11/8/2020 18:38:51'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'IO 11/8/2020 18:38:51'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'IO 11/8/2020 18:38:51'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'IO 11/8/2020 18:38:51'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'IO 11/8/2020 18:38:51'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'IO 11/8/2020 18:38:51'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'IO 11/8/2020 18:38:51'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'IO 11/8/2020 18:38:51'!
PASSED!
!Portfolio methodsFor: 'validations' stamp: 'IO 11/8/2020 18:39:02' prior: 50883311!
validatePortfolioNotAlreadyAdded: aPortfolio
	"validate if a Portfolio is this portfolio"
	
	"
	(self includesPortfolio: aPortfolio) ifTrue: [self error: Portfolio errorMessagePortfolioAlreadyAdded].
	(self = aPortfolio) ifTrue:[self error: Portfolio errorMessagePortfolioAlreadyAdded].
"
	"(self includesFatherPortfolio: aPortfolio) ifTrue: [self error: Portfolio errorMessagePortfolioAlreadyAdded]."
! !

!testRun: #PortfolioTest #test01AnAccountCanBeAddedToAPortfolio stamp: 'IO 11/8/2020 18:39:03'!
PASSED!

!testRun: #PortfolioTest #test02APortfolioHasNoAccountsInitially stamp: 'IO 11/8/2020 18:39:03'!
PASSED!

!testRun: #PortfolioTest #test03APortfolioDoesNotHaveMoreAccountsThanAdded stamp: 'IO 11/8/2020 18:39:03'!
PASSED!

!testRun: #PortfolioTest #test04MoreThanOneAccountCanBeAddedToAPortfolio stamp: 'IO 11/8/2020 18:39:03'!
PASSED!

!testRun: #PortfolioTest #test05APortfolioDoesNotHavePortfoliosInitialy stamp: 'IO 11/8/2020 18:39:03'!
PASSED!

!testRun: #PortfolioTest #test06AnEmptyPortfolioCanBeAddedToAPortfolio stamp: 'IO 11/8/2020 18:39:03'!
PASSED!

!testRun: #PortfolioTest #test07VariousEmptyPortfoliosCanBeAddedToAPortfolio stamp: 'IO 11/8/2020 18:39:03'!
PASSED!

!testRun: #PortfolioTest #test08PortfoliosCanBeAddedToAPortfolio stamp: 'IO 11/8/2020 18:39:03'!
PASSED!

!testRun: #PortfolioTest #test09APortfolioWithPortfoliosCanBeAddedToAportfolio stamp: 'IO 11/8/2020 18:39:03'!
PASSED!

!testRun: #PortfolioTest #test10CanNotAddAnAccountToAPortfolioWhosePortfolioHasTheAccount stamp: 'IO 11/8/2020 18:39:03'!
PASSED!

!testRun: #PortfolioTest #test11CanNotAddAnAccountToAPortfolioWhoHasAPortfolioWithTheAccount stamp: 'IO 11/8/2020 18:39:03'!
PASSED!

!testRun: #PortfolioTest #test12APortfolioCantHaveRepeatedAccounts stamp: 'IO 11/8/2020 18:39:03'!
PASSED!

!testRun: #PortfolioTest #test13APortfolioCanNotHaveRepeatedPortfolios stamp: 'IO 11/8/2020 18:39:03'!
PASSED!

!testRun: #PortfolioTest #test14APortffolioCantHaveItself stamp: 'IO 11/8/2020 18:39:03'!
PASSED!

!testRun: #PortfolioTest #test15CanNotAddAnAccountToAPortfolioWithAParentThatHasTheAccount stamp: 'IO 11/8/2020 18:39:03'!
PASSED!

!testRun: #PortfolioTest #test16CanNotAddAnAccountToAPortfolioWhoseParentHasTheAccount stamp: 'IO 11/8/2020 18:39:03'!
PASSED!

!testRun: #PortfolioTest #test17CanNotAddAnAccountToAPortfolioWithAPredecesorsThatHasTheAccount stamp: 'IO 11/8/2020 18:39:03'!
PASSED!

!testRun: #PortfolioTest #test18CantAddAPortfolioWhenItIsAParent stamp: 'IO 11/8/2020 18:39:03'!
PASSED!

!testRun: #PortfolioTest #test19CantAddAPortfolioWhenItIsAPredecesor stamp: 'IO 11/8/2020 18:39:03'!
PASSED!

!testRun: #PortfolioTest #test20CantAddAPortfolioWhenAPredecesorAlredyHasIt stamp: 'IO 11/8/2020 18:39:03'!
PASSED!

!testRun: #PortfolioTest #test22APortfolioKnowsItsDirectAccounts stamp: 'IO 11/8/2020 18:39:03'!
PASSED!

!testRun: #PortfolioTest #test22APortfolioKnowsTheAccountsOfHisPortfolios stamp: 'IO 11/8/2020 18:39:03'!
PASSED!

!testRun: #PortfolioTest #test23AnEmptyPortfolioHasABalanceOf0 stamp: 'IO 11/8/2020 18:39:03'!
PASSED!

!testRun: #PortfolioTest #test24APortfolioWithOneAccountHasTheBalanceOfThatAccount stamp: 'IO 11/8/2020 18:39:03'!
PASSED!

!testRun: #PortfolioTest #test25TheBalanceOfAPortfolioWithNoPortfoliosIsTheSumOfHisAccounts stamp: 'IO 11/8/2020 18:39:03'!
PASSED!

!testRun: #PortfolioTest #test26TheBalanceOfAPortfolioIsTheSumOfHisAccountsAndPortfolios stamp: 'IO 11/8/2020 18:39:03'!
PASSED!

!testRun: #PortfolioTest #test27AnEmptyPortfolioHasNoRegisteredTransactions stamp: 'IO 11/8/2020 18:39:03'!
PASSED!

!testRun: #PortfolioTest #test28APortfolioWithOneAccountHasItsRegisteredTransactions stamp: 'IO 11/8/2020 18:39:03'!
PASSED!

!testRun: #PortfolioTest #test29APortfolioWithManyAccountsHasItsAccountsRegisteredTransactions stamp: 'IO 11/8/2020 18:39:03'!
PASSED!

!testRun: #PortfolioTest #test30APortfolioHasItsPortfoliosAndAccountsRegisteredTransactions stamp: 'IO 11/8/2020 18:39:03'!
PASSED!

!testRun: #PortfolioTest #test31AnEmptyPortfolioHasNoTransactions stamp: 'IO 11/8/2020 18:39:03'!
PASSED!

!testRun: #PortfolioTest #test32APortfolioWithOneAccountHasItsTransactions stamp: 'IO 11/8/2020 18:39:03'!
PASSED!

!testRun: #PortfolioTest #test33APortfolioWithManyAccountsHasItsAccountsTransactions stamp: 'IO 11/8/2020 18:39:03'!
PASSED!

!testRun: #PortfolioTest #test34APortfolioHasItsPortfoliosAndAccountsTransaction stamp: 'IO 11/8/2020 18:39:03'!
PASSED!

!testRun: #PortfolioTest #test35CanNotAddAPortfolioWithAccountsAlredyInTheParentsOfTheRevceiver stamp: 'IO 11/8/2020 18:39:03'!
PASSED!

!methodRemoval: Portfolio #validatePortfolioNotAlreadyAdded: stamp: 'IO 11/8/2020 18:39:06'!
validatePortfolioNotAlreadyAdded: aPortfolio
	"validate if a Portfolio is this portfolio"
	
	"
	(self includesPortfolio: aPortfolio) ifTrue: [self error: Portfolio errorMessagePortfolioAlreadyAdded].
	(self = aPortfolio) ifTrue:[self error: Portfolio errorMessagePortfolioAlreadyAdded].
"
	"(self includesFatherPortfolio: aPortfolio) ifTrue: [self error: Portfolio errorMessagePortfolioAlreadyAdded]."
!
!Portfolio methodsFor: 'validations' stamp: 'IO 11/8/2020 18:39:28' prior: 50884069!
validateAccountBeforeAdding: anAccount

	"validate an account before adding it to this portfolio"

	parentPortfolios validateAccountBeforeAdding: anAccount.
! !
!Portfolio methodsFor: 'validations' stamp: 'IO 11/8/2020 18:39:39' prior: 50884598!
validatePortfolioBeforeAdding: aPortfolio

	"validate a portfolio before adding it to this portfolio"

	parentPortfolios validatePortfoliosBeforeAdding: aPortfolio .
! !
!Portfolio methodsFor: 'accessing' stamp: 'IO 11/8/2020 18:40:04' prior: 50883326!
accounts

	"return all the accounts of this Portfolio and it's portfolios"

	| allAccounts |

	allAccounts := accounts copy.
	portfolios do: [ :portfolio | allAccounts addAll: portfolio accounts ].

	^allAccounts.
! !
!Portfolio methodsFor: 'accessing' stamp: 'IO 11/8/2020 18:40:51' prior: 50883336 overrides: 50884419!
balance

	"return the balance of this portfolio. it will sum this portfolio accounts and the children portfolio's accounts balances"
	
	| balance |

	balance := 0.
	self accountsAndPortfoliosDo: [ :aThing | balance := balance + aThing balance].

	^balance.
! !

!testRun: #PortfolioTest #test01AnAccountCanBeAddedToAPortfolio stamp: 'IO 11/8/2020 18:40:52'!
PASSED!

!testRun: #PortfolioTest #test02APortfolioHasNoAccountsInitially stamp: 'IO 11/8/2020 18:40:52'!
PASSED!

!testRun: #PortfolioTest #test03APortfolioDoesNotHaveMoreAccountsThanAdded stamp: 'IO 11/8/2020 18:40:52'!
PASSED!

!testRun: #PortfolioTest #test04MoreThanOneAccountCanBeAddedToAPortfolio stamp: 'IO 11/8/2020 18:40:52'!
PASSED!

!testRun: #PortfolioTest #test05APortfolioDoesNotHavePortfoliosInitialy stamp: 'IO 11/8/2020 18:40:52'!
PASSED!

!testRun: #PortfolioTest #test06AnEmptyPortfolioCanBeAddedToAPortfolio stamp: 'IO 11/8/2020 18:40:52'!
PASSED!

!testRun: #PortfolioTest #test07VariousEmptyPortfoliosCanBeAddedToAPortfolio stamp: 'IO 11/8/2020 18:40:52'!
PASSED!

!testRun: #PortfolioTest #test08PortfoliosCanBeAddedToAPortfolio stamp: 'IO 11/8/2020 18:40:52'!
PASSED!

!testRun: #PortfolioTest #test09APortfolioWithPortfoliosCanBeAddedToAportfolio stamp: 'IO 11/8/2020 18:40:52'!
PASSED!

!testRun: #PortfolioTest #test10CanNotAddAnAccountToAPortfolioWhosePortfolioHasTheAccount stamp: 'IO 11/8/2020 18:40:52'!
PASSED!

!testRun: #PortfolioTest #test11CanNotAddAnAccountToAPortfolioWhoHasAPortfolioWithTheAccount stamp: 'IO 11/8/2020 18:40:52'!
PASSED!

!testRun: #PortfolioTest #test12APortfolioCantHaveRepeatedAccounts stamp: 'IO 11/8/2020 18:40:52'!
PASSED!

!testRun: #PortfolioTest #test13APortfolioCanNotHaveRepeatedPortfolios stamp: 'IO 11/8/2020 18:40:52'!
PASSED!

!testRun: #PortfolioTest #test14APortffolioCantHaveItself stamp: 'IO 11/8/2020 18:40:52'!
PASSED!

!testRun: #PortfolioTest #test15CanNotAddAnAccountToAPortfolioWithAParentThatHasTheAccount stamp: 'IO 11/8/2020 18:40:52'!
PASSED!

!testRun: #PortfolioTest #test16CanNotAddAnAccountToAPortfolioWhoseParentHasTheAccount stamp: 'IO 11/8/2020 18:40:52'!
PASSED!

!testRun: #PortfolioTest #test17CanNotAddAnAccountToAPortfolioWithAPredecesorsThatHasTheAccount stamp: 'IO 11/8/2020 18:40:52'!
PASSED!

!testRun: #PortfolioTest #test18CantAddAPortfolioWhenItIsAParent stamp: 'IO 11/8/2020 18:40:52'!
PASSED!

!testRun: #PortfolioTest #test19CantAddAPortfolioWhenItIsAPredecesor stamp: 'IO 11/8/2020 18:40:52'!
PASSED!

!testRun: #PortfolioTest #test20CantAddAPortfolioWhenAPredecesorAlredyHasIt stamp: 'IO 11/8/2020 18:40:52'!
PASSED!

!testRun: #PortfolioTest #test22APortfolioKnowsItsDirectAccounts stamp: 'IO 11/8/2020 18:40:52'!
PASSED!

!testRun: #PortfolioTest #test22APortfolioKnowsTheAccountsOfHisPortfolios stamp: 'IO 11/8/2020 18:40:52'!
PASSED!

!testRun: #PortfolioTest #test23AnEmptyPortfolioHasABalanceOf0 stamp: 'IO 11/8/2020 18:40:52'!
PASSED!

!testRun: #PortfolioTest #test24APortfolioWithOneAccountHasTheBalanceOfThatAccount stamp: 'IO 11/8/2020 18:40:52'!
PASSED!

!testRun: #PortfolioTest #test25TheBalanceOfAPortfolioWithNoPortfoliosIsTheSumOfHisAccounts stamp: 'IO 11/8/2020 18:40:52'!
PASSED!

!testRun: #PortfolioTest #test26TheBalanceOfAPortfolioIsTheSumOfHisAccountsAndPortfolios stamp: 'IO 11/8/2020 18:40:52'!
PASSED!

!testRun: #PortfolioTest #test27AnEmptyPortfolioHasNoRegisteredTransactions stamp: 'IO 11/8/2020 18:40:52'!
PASSED!

!testRun: #PortfolioTest #test28APortfolioWithOneAccountHasItsRegisteredTransactions stamp: 'IO 11/8/2020 18:40:52'!
PASSED!

!testRun: #PortfolioTest #test29APortfolioWithManyAccountsHasItsAccountsRegisteredTransactions stamp: 'IO 11/8/2020 18:40:52'!
PASSED!

!testRun: #PortfolioTest #test30APortfolioHasItsPortfoliosAndAccountsRegisteredTransactions stamp: 'IO 11/8/2020 18:40:52'!
PASSED!

!testRun: #PortfolioTest #test31AnEmptyPortfolioHasNoTransactions stamp: 'IO 11/8/2020 18:40:52'!
PASSED!

!testRun: #PortfolioTest #test32APortfolioWithOneAccountHasItsTransactions stamp: 'IO 11/8/2020 18:40:52'!
PASSED!

!testRun: #PortfolioTest #test33APortfolioWithManyAccountsHasItsAccountsTransactions stamp: 'IO 11/8/2020 18:40:52'!
PASSED!

!testRun: #PortfolioTest #test34APortfolioHasItsPortfoliosAndAccountsTransaction stamp: 'IO 11/8/2020 18:40:52'!
PASSED!

!testRun: #PortfolioTest #test35CanNotAddAPortfolioWithAccountsAlredyInTheParentsOfTheRevceiver stamp: 'IO 11/8/2020 18:40:52'!
PASSED!
!Portfolio methodsFor: 'accessing' stamp: 'IO 11/8/2020 18:41:13' prior: 50883346 overrides: 50884433!
transactions

	"return the transactions of this portfolio's accounts and portfolios"

	| transactions |

	transactions := OrderedCollection new.
	self accountsAndPortfoliosDo: [ :account | transactions addAll: account transactions].

	^transactions.
! !

!testRun: #PortfolioTest #test01AnAccountCanBeAddedToAPortfolio stamp: 'IO 11/8/2020 18:41:15'!
PASSED!

!testRun: #PortfolioTest #test02APortfolioHasNoAccountsInitially stamp: 'IO 11/8/2020 18:41:15'!
PASSED!

!testRun: #PortfolioTest #test03APortfolioDoesNotHaveMoreAccountsThanAdded stamp: 'IO 11/8/2020 18:41:15'!
PASSED!

!testRun: #PortfolioTest #test04MoreThanOneAccountCanBeAddedToAPortfolio stamp: 'IO 11/8/2020 18:41:15'!
PASSED!

!testRun: #PortfolioTest #test05APortfolioDoesNotHavePortfoliosInitialy stamp: 'IO 11/8/2020 18:41:15'!
PASSED!

!testRun: #PortfolioTest #test06AnEmptyPortfolioCanBeAddedToAPortfolio stamp: 'IO 11/8/2020 18:41:15'!
PASSED!

!testRun: #PortfolioTest #test07VariousEmptyPortfoliosCanBeAddedToAPortfolio stamp: 'IO 11/8/2020 18:41:15'!
PASSED!

!testRun: #PortfolioTest #test08PortfoliosCanBeAddedToAPortfolio stamp: 'IO 11/8/2020 18:41:15'!
PASSED!

!testRun: #PortfolioTest #test09APortfolioWithPortfoliosCanBeAddedToAportfolio stamp: 'IO 11/8/2020 18:41:15'!
PASSED!

!testRun: #PortfolioTest #test10CanNotAddAnAccountToAPortfolioWhosePortfolioHasTheAccount stamp: 'IO 11/8/2020 18:41:15'!
PASSED!

!testRun: #PortfolioTest #test11CanNotAddAnAccountToAPortfolioWhoHasAPortfolioWithTheAccount stamp: 'IO 11/8/2020 18:41:15'!
PASSED!

!testRun: #PortfolioTest #test12APortfolioCantHaveRepeatedAccounts stamp: 'IO 11/8/2020 18:41:15'!
PASSED!

!testRun: #PortfolioTest #test13APortfolioCanNotHaveRepeatedPortfolios stamp: 'IO 11/8/2020 18:41:15'!
PASSED!

!testRun: #PortfolioTest #test14APortffolioCantHaveItself stamp: 'IO 11/8/2020 18:41:15'!
PASSED!

!testRun: #PortfolioTest #test15CanNotAddAnAccountToAPortfolioWithAParentThatHasTheAccount stamp: 'IO 11/8/2020 18:41:15'!
PASSED!

!testRun: #PortfolioTest #test16CanNotAddAnAccountToAPortfolioWhoseParentHasTheAccount stamp: 'IO 11/8/2020 18:41:15'!
PASSED!

!testRun: #PortfolioTest #test17CanNotAddAnAccountToAPortfolioWithAPredecesorsThatHasTheAccount stamp: 'IO 11/8/2020 18:41:15'!
PASSED!

!testRun: #PortfolioTest #test18CantAddAPortfolioWhenItIsAParent stamp: 'IO 11/8/2020 18:41:15'!
PASSED!

!testRun: #PortfolioTest #test19CantAddAPortfolioWhenItIsAPredecesor stamp: 'IO 11/8/2020 18:41:15'!
PASSED!

!testRun: #PortfolioTest #test20CantAddAPortfolioWhenAPredecesorAlredyHasIt stamp: 'IO 11/8/2020 18:41:15'!
PASSED!

!testRun: #PortfolioTest #test22APortfolioKnowsItsDirectAccounts stamp: 'IO 11/8/2020 18:41:15'!
PASSED!

!testRun: #PortfolioTest #test22APortfolioKnowsTheAccountsOfHisPortfolios stamp: 'IO 11/8/2020 18:41:15'!
PASSED!

!testRun: #PortfolioTest #test23AnEmptyPortfolioHasABalanceOf0 stamp: 'IO 11/8/2020 18:41:15'!
PASSED!

!testRun: #PortfolioTest #test24APortfolioWithOneAccountHasTheBalanceOfThatAccount stamp: 'IO 11/8/2020 18:41:15'!
PASSED!

!testRun: #PortfolioTest #test25TheBalanceOfAPortfolioWithNoPortfoliosIsTheSumOfHisAccounts stamp: 'IO 11/8/2020 18:41:15'!
PASSED!

!testRun: #PortfolioTest #test26TheBalanceOfAPortfolioIsTheSumOfHisAccountsAndPortfolios stamp: 'IO 11/8/2020 18:41:15'!
PASSED!

!testRun: #PortfolioTest #test27AnEmptyPortfolioHasNoRegisteredTransactions stamp: 'IO 11/8/2020 18:41:15'!
PASSED!

!testRun: #PortfolioTest #test28APortfolioWithOneAccountHasItsRegisteredTransactions stamp: 'IO 11/8/2020 18:41:15'!
PASSED!

!testRun: #PortfolioTest #test29APortfolioWithManyAccountsHasItsAccountsRegisteredTransactions stamp: 'IO 11/8/2020 18:41:15'!
PASSED!

!testRun: #PortfolioTest #test30APortfolioHasItsPortfoliosAndAccountsRegisteredTransactions stamp: 'IO 11/8/2020 18:41:15'!
PASSED!

!testRun: #PortfolioTest #test31AnEmptyPortfolioHasNoTransactions stamp: 'IO 11/8/2020 18:41:15'!
PASSED!

!testRun: #PortfolioTest #test32APortfolioWithOneAccountHasItsTransactions stamp: 'IO 11/8/2020 18:41:15'!
PASSED!

!testRun: #PortfolioTest #test33APortfolioWithManyAccountsHasItsAccountsTransactions stamp: 'IO 11/8/2020 18:41:15'!
PASSED!

!testRun: #PortfolioTest #test34APortfolioHasItsPortfoliosAndAccountsTransaction stamp: 'IO 11/8/2020 18:41:15'!
PASSED!

!testRun: #PortfolioTest #test35CanNotAddAPortfolioWithAccountsAlredyInTheParentsOfTheRevceiver stamp: 'IO 11/8/2020 18:41:15'!
PASSED!
!Portfolio methodsFor: 'testing' stamp: 'IO 11/8/2020 18:46:54' prior: 50883357 overrides: 50884426!
hasRegistered: aTransaction
	"return if this portfolio has registered a transaction"
	
	"self accountsAndPortfoliosDo: [ :aThing | (aThing hasRegistered: aDeposit) ifTrue: [^true]]
	^false.."
	
	^self transactions includes: aTransaction.
	
! !
!Portfolio methodsFor: 'testing' stamp: 'IO 11/8/2020 18:55:54' prior: 50883377!
includesPortfolio: aPortfolio

	"return if this portfolio includes the given portfolio or not"

	portfolios do: [ :portfolio | (portfolio includesPortfolio: aPortfolio) ifTrue: [^true]].
	
	^portfolios includes: aPortfolio.
! !
!Portfolio methodsFor: 'accessing' stamp: 'IO 11/8/2020 18:56:19' prior: 50885088!
accounts

	"return all the accounts in this Portfolio and it's portfolios"

	| allAccounts |

	allAccounts := accounts copy.
	portfolios do: [ :portfolio | allAccounts addAll: portfolio accounts ].

	^allAccounts.
! !
!Portfolio methodsFor: 'accessing' stamp: 'IO 11/8/2020 18:56:46' prior: 50885241 overrides: 50884433!
transactions

	"return all the transactions in this portfolio's accounts and it's portfolios"

	| transactions |

	transactions := OrderedCollection new.
	self accountsAndPortfoliosDo: [ :account | transactions addAll: account transactions].

	^transactions.
! !
!Portfolio methodsFor: 'private' stamp: 'IO 11/8/2020 18:57:42' prior: 50883386!
accountsAndPortfoliosDo: aBlock

	"perform a block..."

	accounts do: [ :account | aBlock value: account.].
	portfolios do: [ :portfolio | aBlock value: portfolio.].
! !
!Portfolio methodsFor: 'private' stamp: 'IO 11/8/2020 18:58:31' prior: 50883396!
addAsFather: aPortfolio

	"add a portfolio as this prtfolio's parent"
	
	parentPortfolios := parentPortfolios addAsFather: aPortfolio.! !
!Portfolio methodsFor: 'private' stamp: 'IO 11/8/2020 18:58:33' prior: 50885433!
addAsFather: aPortfolio

	"add a portfolio as this prtfolio's parent"
	
	parentPortfolios := parentPortfolios addAsFather: aPortfolio.
! !
!Root methodsFor: 'adding' stamp: 'IO 11/8/2020 18:58:58'!
addAsParent: aPortfolio
	
	^ Body newWith: aPortfolio for: childPortfolio.! !
!Body methodsFor: 'adding' stamp: 'IO 11/8/2020 18:58:58'!
addAsParent: aPortfolio
	
	parentPortfolios add: aPortfolio.
	^ self.  ! !
!ParentPortfolios methodsFor: 'adding' stamp: 'IO 11/8/2020 18:58:58'!
addAsParent: aPortfolio

	self subclassResponsibility ! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'IO 11/8/2020 18:58:58' prior: 50885440!
addAsFather: aPortfolio

	"add a portfolio as this prtfolio's parent"
	
	parentPortfolios := parentPortfolios addAsParent: aPortfolio.
! !

!methodRemoval: Root #addAsFather: stamp: 'IO 11/8/2020 18:58:58'!
addAsFather: aPortfolio
	
	^ Body newWith: aPortfolio for: childPortfolio.!

!methodRemoval: Body #addAsFather: stamp: 'IO 11/8/2020 18:58:58'!
addAsFather: aPortfolio
	
	parentPortfolios add: aPortfolio.
	^ self.  !

!methodRemoval: ParentPortfolios #addAsFather: stamp: 'IO 11/8/2020 18:58:58'!
addAsFather: aPortfolio

	self subclassResponsibility !

!testRun: #PortfolioTest #test01AnAccountCanBeAddedToAPortfolio stamp: 'IO 11/8/2020 18:59:02'!
PASSED!

!testRun: #PortfolioTest #test02APortfolioHasNoAccountsInitially stamp: 'IO 11/8/2020 18:59:02'!
PASSED!

!testRun: #PortfolioTest #test03APortfolioDoesNotHaveMoreAccountsThanAdded stamp: 'IO 11/8/2020 18:59:02'!
PASSED!

!testRun: #PortfolioTest #test04MoreThanOneAccountCanBeAddedToAPortfolio stamp: 'IO 11/8/2020 18:59:02'!
PASSED!

!testRun: #PortfolioTest #test05APortfolioDoesNotHavePortfoliosInitialy stamp: 'IO 11/8/2020 18:59:02'!
PASSED!

!testRun: #PortfolioTest #test06AnEmptyPortfolioCanBeAddedToAPortfolio stamp: 'IO 11/8/2020 18:59:02'!
PASSED!

!testRun: #PortfolioTest #test07VariousEmptyPortfoliosCanBeAddedToAPortfolio stamp: 'IO 11/8/2020 18:59:02'!
PASSED!

!testRun: #PortfolioTest #test08PortfoliosCanBeAddedToAPortfolio stamp: 'IO 11/8/2020 18:59:02'!
PASSED!

!testRun: #PortfolioTest #test09APortfolioWithPortfoliosCanBeAddedToAportfolio stamp: 'IO 11/8/2020 18:59:02'!
PASSED!

!testRun: #PortfolioTest #test10CanNotAddAnAccountToAPortfolioWhosePortfolioHasTheAccount stamp: 'IO 11/8/2020 18:59:02'!
PASSED!

!testRun: #PortfolioTest #test11CanNotAddAnAccountToAPortfolioWhoHasAPortfolioWithTheAccount stamp: 'IO 11/8/2020 18:59:02'!
PASSED!

!testRun: #PortfolioTest #test12APortfolioCantHaveRepeatedAccounts stamp: 'IO 11/8/2020 18:59:02'!
PASSED!

!testRun: #PortfolioTest #test13APortfolioCanNotHaveRepeatedPortfolios stamp: 'IO 11/8/2020 18:59:02'!
PASSED!

!testRun: #PortfolioTest #test14APortffolioCantHaveItself stamp: 'IO 11/8/2020 18:59:02'!
PASSED!

!testRun: #PortfolioTest #test15CanNotAddAnAccountToAPortfolioWithAParentThatHasTheAccount stamp: 'IO 11/8/2020 18:59:02'!
PASSED!

!testRun: #PortfolioTest #test16CanNotAddAnAccountToAPortfolioWhoseParentHasTheAccount stamp: 'IO 11/8/2020 18:59:02'!
PASSED!

!testRun: #PortfolioTest #test17CanNotAddAnAccountToAPortfolioWithAPredecesorsThatHasTheAccount stamp: 'IO 11/8/2020 18:59:02'!
PASSED!

!testRun: #PortfolioTest #test18CantAddAPortfolioWhenItIsAParent stamp: 'IO 11/8/2020 18:59:02'!
PASSED!

!testRun: #PortfolioTest #test19CantAddAPortfolioWhenItIsAPredecesor stamp: 'IO 11/8/2020 18:59:02'!
PASSED!

!testRun: #PortfolioTest #test20CantAddAPortfolioWhenAPredecesorAlredyHasIt stamp: 'IO 11/8/2020 18:59:02'!
PASSED!

!testRun: #PortfolioTest #test22APortfolioKnowsItsDirectAccounts stamp: 'IO 11/8/2020 18:59:02'!
PASSED!

!testRun: #PortfolioTest #test22APortfolioKnowsTheAccountsOfHisPortfolios stamp: 'IO 11/8/2020 18:59:02'!
PASSED!

!testRun: #PortfolioTest #test23AnEmptyPortfolioHasABalanceOf0 stamp: 'IO 11/8/2020 18:59:02'!
PASSED!

!testRun: #PortfolioTest #test24APortfolioWithOneAccountHasTheBalanceOfThatAccount stamp: 'IO 11/8/2020 18:59:02'!
PASSED!

!testRun: #PortfolioTest #test25TheBalanceOfAPortfolioWithNoPortfoliosIsTheSumOfHisAccounts stamp: 'IO 11/8/2020 18:59:02'!
PASSED!

!testRun: #PortfolioTest #test26TheBalanceOfAPortfolioIsTheSumOfHisAccountsAndPortfolios stamp: 'IO 11/8/2020 18:59:02'!
PASSED!

!testRun: #PortfolioTest #test27AnEmptyPortfolioHasNoRegisteredTransactions stamp: 'IO 11/8/2020 18:59:02'!
PASSED!

!testRun: #PortfolioTest #test28APortfolioWithOneAccountHasItsRegisteredTransactions stamp: 'IO 11/8/2020 18:59:02'!
PASSED!

!testRun: #PortfolioTest #test29APortfolioWithManyAccountsHasItsAccountsRegisteredTransactions stamp: 'IO 11/8/2020 18:59:02'!
PASSED!

!testRun: #PortfolioTest #test30APortfolioHasItsPortfoliosAndAccountsRegisteredTransactions stamp: 'IO 11/8/2020 18:59:02'!
PASSED!

!testRun: #PortfolioTest #test31AnEmptyPortfolioHasNoTransactions stamp: 'IO 11/8/2020 18:59:02'!
PASSED!

!testRun: #PortfolioTest #test32APortfolioWithOneAccountHasItsTransactions stamp: 'IO 11/8/2020 18:59:02'!
PASSED!

!testRun: #PortfolioTest #test33APortfolioWithManyAccountsHasItsAccountsTransactions stamp: 'IO 11/8/2020 18:59:02'!
PASSED!

!testRun: #PortfolioTest #test34APortfolioHasItsPortfoliosAndAccountsTransaction stamp: 'IO 11/8/2020 18:59:02'!
PASSED!

!testRun: #PortfolioTest #test35CanNotAddAPortfolioWithAccountsAlredyInTheParentsOfTheRevceiver stamp: 'IO 11/8/2020 18:59:02'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'IO 11/8/2020 18:59:02'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'IO 11/8/2020 18:59:02'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'IO 11/8/2020 18:59:02'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'IO 11/8/2020 18:59:02'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'IO 11/8/2020 18:59:02'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'IO 11/8/2020 18:59:02'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'IO 11/8/2020 18:59:02'!
PASSED!
!Portfolio methodsFor: 'private' stamp: 'IO 11/8/2020 18:59:25'!
addAsParent: aPortfolio

	"add a portfolio as this prtfolio's parent"
	
	parentPortfolios := parentPortfolios addAsParent: aPortfolio.
! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'IO 11/8/2020 18:59:25' prior: 50883988!
addPortfolio: aPortfolio

	"add aPortfolio to this Portfolio"

	self validatePortfolioBeforeAdding: aPortfolio.
	portfolios add: aPortfolio.
	aPortfolio addAsParent: self.
! !

!methodRemoval: Portfolio #addAsFather: stamp: 'IO 11/8/2020 18:59:25'!
addAsFather: aPortfolio

	"add a portfolio as this prtfolio's parent"
	
	parentPortfolios := parentPortfolios addAsParent: aPortfolio.
!

!testRun: #PortfolioTest #test01AnAccountCanBeAddedToAPortfolio stamp: 'IO 11/8/2020 18:59:29'!
PASSED!

!testRun: #PortfolioTest #test02APortfolioHasNoAccountsInitially stamp: 'IO 11/8/2020 18:59:29'!
PASSED!

!testRun: #PortfolioTest #test03APortfolioDoesNotHaveMoreAccountsThanAdded stamp: 'IO 11/8/2020 18:59:29'!
PASSED!

!testRun: #PortfolioTest #test04MoreThanOneAccountCanBeAddedToAPortfolio stamp: 'IO 11/8/2020 18:59:29'!
PASSED!

!testRun: #PortfolioTest #test05APortfolioDoesNotHavePortfoliosInitialy stamp: 'IO 11/8/2020 18:59:29'!
PASSED!

!testRun: #PortfolioTest #test06AnEmptyPortfolioCanBeAddedToAPortfolio stamp: 'IO 11/8/2020 18:59:29'!
PASSED!

!testRun: #PortfolioTest #test07VariousEmptyPortfoliosCanBeAddedToAPortfolio stamp: 'IO 11/8/2020 18:59:29'!
PASSED!

!testRun: #PortfolioTest #test08PortfoliosCanBeAddedToAPortfolio stamp: 'IO 11/8/2020 18:59:29'!
PASSED!

!testRun: #PortfolioTest #test09APortfolioWithPortfoliosCanBeAddedToAportfolio stamp: 'IO 11/8/2020 18:59:29'!
PASSED!

!testRun: #PortfolioTest #test10CanNotAddAnAccountToAPortfolioWhosePortfolioHasTheAccount stamp: 'IO 11/8/2020 18:59:29'!
PASSED!

!testRun: #PortfolioTest #test11CanNotAddAnAccountToAPortfolioWhoHasAPortfolioWithTheAccount stamp: 'IO 11/8/2020 18:59:29'!
PASSED!

!testRun: #PortfolioTest #test12APortfolioCantHaveRepeatedAccounts stamp: 'IO 11/8/2020 18:59:29'!
PASSED!

!testRun: #PortfolioTest #test13APortfolioCanNotHaveRepeatedPortfolios stamp: 'IO 11/8/2020 18:59:29'!
PASSED!

!testRun: #PortfolioTest #test14APortffolioCantHaveItself stamp: 'IO 11/8/2020 18:59:29'!
PASSED!

!testRun: #PortfolioTest #test15CanNotAddAnAccountToAPortfolioWithAParentThatHasTheAccount stamp: 'IO 11/8/2020 18:59:29'!
PASSED!

!testRun: #PortfolioTest #test16CanNotAddAnAccountToAPortfolioWhoseParentHasTheAccount stamp: 'IO 11/8/2020 18:59:29'!
PASSED!

!testRun: #PortfolioTest #test17CanNotAddAnAccountToAPortfolioWithAPredecesorsThatHasTheAccount stamp: 'IO 11/8/2020 18:59:29'!
PASSED!

!testRun: #PortfolioTest #test18CantAddAPortfolioWhenItIsAParent stamp: 'IO 11/8/2020 18:59:29'!
PASSED!

!testRun: #PortfolioTest #test19CantAddAPortfolioWhenItIsAPredecesor stamp: 'IO 11/8/2020 18:59:29'!
PASSED!

!testRun: #PortfolioTest #test20CantAddAPortfolioWhenAPredecesorAlredyHasIt stamp: 'IO 11/8/2020 18:59:29'!
PASSED!

!testRun: #PortfolioTest #test22APortfolioKnowsItsDirectAccounts stamp: 'IO 11/8/2020 18:59:29'!
PASSED!

!testRun: #PortfolioTest #test22APortfolioKnowsTheAccountsOfHisPortfolios stamp: 'IO 11/8/2020 18:59:29'!
PASSED!

!testRun: #PortfolioTest #test23AnEmptyPortfolioHasABalanceOf0 stamp: 'IO 11/8/2020 18:59:29'!
PASSED!

!testRun: #PortfolioTest #test24APortfolioWithOneAccountHasTheBalanceOfThatAccount stamp: 'IO 11/8/2020 18:59:29'!
PASSED!

!testRun: #PortfolioTest #test25TheBalanceOfAPortfolioWithNoPortfoliosIsTheSumOfHisAccounts stamp: 'IO 11/8/2020 18:59:29'!
PASSED!

!testRun: #PortfolioTest #test26TheBalanceOfAPortfolioIsTheSumOfHisAccountsAndPortfolios stamp: 'IO 11/8/2020 18:59:29'!
PASSED!

!testRun: #PortfolioTest #test27AnEmptyPortfolioHasNoRegisteredTransactions stamp: 'IO 11/8/2020 18:59:29'!
PASSED!

!testRun: #PortfolioTest #test28APortfolioWithOneAccountHasItsRegisteredTransactions stamp: 'IO 11/8/2020 18:59:29'!
PASSED!

!testRun: #PortfolioTest #test29APortfolioWithManyAccountsHasItsAccountsRegisteredTransactions stamp: 'IO 11/8/2020 18:59:29'!
PASSED!

!testRun: #PortfolioTest #test30APortfolioHasItsPortfoliosAndAccountsRegisteredTransactions stamp: 'IO 11/8/2020 18:59:29'!
PASSED!

!testRun: #PortfolioTest #test31AnEmptyPortfolioHasNoTransactions stamp: 'IO 11/8/2020 18:59:29'!
PASSED!

!testRun: #PortfolioTest #test32APortfolioWithOneAccountHasItsTransactions stamp: 'IO 11/8/2020 18:59:29'!
PASSED!

!testRun: #PortfolioTest #test33APortfolioWithManyAccountsHasItsAccountsTransactions stamp: 'IO 11/8/2020 18:59:29'!
PASSED!

!testRun: #PortfolioTest #test34APortfolioHasItsPortfoliosAndAccountsTransaction stamp: 'IO 11/8/2020 18:59:29'!
PASSED!

!testRun: #PortfolioTest #test35CanNotAddAPortfolioWithAccountsAlredyInTheParentsOfTheRevceiver stamp: 'IO 11/8/2020 18:59:29'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'IO 11/8/2020 18:59:29'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'IO 11/8/2020 18:59:29'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'IO 11/8/2020 18:59:29'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'IO 11/8/2020 18:59:29'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'IO 11/8/2020 18:59:29'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'IO 11/8/2020 18:59:29'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'IO 11/8/2020 18:59:29'!
PASSED!
!Portfolio methodsFor: 'testing' stamp: 'IO 11/8/2020 19:00:38' prior: 50883367!
includesAccount: anAccount 
	"return if this portfolio has anAccount or not"

	^self accounts includes: anAccount.

	"portfolios do: [ :portfolio | (portfolio includesAccount: anAccount) ifTrue: [^true]].
	^accounts includes: anAccount."! !
!Portfolio methodsFor: 'validations' stamp: 'IO 11/8/2020 19:00:51' prior: 50885080!
validatePortfolioBeforeAdding: aPortfolio

	"validate a portfolio before adding it to this portfolio"

	parentPortfolios validatePortfoliosBeforeAdding: aPortfolio.
! !
!Portfolio methodsFor: 'accessing' stamp: 'IO 11/8/2020 19:00:57' prior: 50885403!
accounts

	"return all the accounts in this Portfolio and it's portfolios"

	| allAccounts |

	allAccounts := accounts copy.
	portfolios do: [ :portfolio | allAccounts addAll: portfolio accounts].

	^allAccounts.
! !
!Portfolio methodsFor: 'accessing' stamp: 'IO 11/8/2020 19:02:22'!
portfoliosDo: aBlock

	portfolios do: [ :portfolio | aBlock value: portfolio ].
! !
!Portfolio methodsFor: 'accessing' stamp: 'IO 11/8/2020 19:02:35' prior: 50885836!
accounts

	"return all the accounts in this Portfolio and it's portfolios"

	| allAccounts |

	allAccounts := accounts copy.
	self portfoliosDo: [ :portfolio | allAccounts addAll: portfolio accounts].

	^allAccounts.
! !

!testRun: #PortfolioTest #test01AnAccountCanBeAddedToAPortfolio stamp: 'IO 11/8/2020 19:02:36'!
PASSED!

!testRun: #PortfolioTest #test02APortfolioHasNoAccountsInitially stamp: 'IO 11/8/2020 19:02:36'!
PASSED!

!testRun: #PortfolioTest #test03APortfolioDoesNotHaveMoreAccountsThanAdded stamp: 'IO 11/8/2020 19:02:36'!
PASSED!

!testRun: #PortfolioTest #test04MoreThanOneAccountCanBeAddedToAPortfolio stamp: 'IO 11/8/2020 19:02:36'!
PASSED!

!testRun: #PortfolioTest #test05APortfolioDoesNotHavePortfoliosInitialy stamp: 'IO 11/8/2020 19:02:36'!
PASSED!

!testRun: #PortfolioTest #test06AnEmptyPortfolioCanBeAddedToAPortfolio stamp: 'IO 11/8/2020 19:02:36'!
PASSED!

!testRun: #PortfolioTest #test07VariousEmptyPortfoliosCanBeAddedToAPortfolio stamp: 'IO 11/8/2020 19:02:37'!
PASSED!

!testRun: #PortfolioTest #test08PortfoliosCanBeAddedToAPortfolio stamp: 'IO 11/8/2020 19:02:37'!
PASSED!

!testRun: #PortfolioTest #test09APortfolioWithPortfoliosCanBeAddedToAportfolio stamp: 'IO 11/8/2020 19:02:37'!
PASSED!

!testRun: #PortfolioTest #test10CanNotAddAnAccountToAPortfolioWhosePortfolioHasTheAccount stamp: 'IO 11/8/2020 19:02:37'!
PASSED!

!testRun: #PortfolioTest #test11CanNotAddAnAccountToAPortfolioWhoHasAPortfolioWithTheAccount stamp: 'IO 11/8/2020 19:02:37'!
PASSED!

!testRun: #PortfolioTest #test12APortfolioCantHaveRepeatedAccounts stamp: 'IO 11/8/2020 19:02:37'!
PASSED!

!testRun: #PortfolioTest #test13APortfolioCanNotHaveRepeatedPortfolios stamp: 'IO 11/8/2020 19:02:37'!
PASSED!

!testRun: #PortfolioTest #test14APortffolioCantHaveItself stamp: 'IO 11/8/2020 19:02:37'!
PASSED!

!testRun: #PortfolioTest #test15CanNotAddAnAccountToAPortfolioWithAParentThatHasTheAccount stamp: 'IO 11/8/2020 19:02:37'!
PASSED!

!testRun: #PortfolioTest #test16CanNotAddAnAccountToAPortfolioWhoseParentHasTheAccount stamp: 'IO 11/8/2020 19:02:37'!
PASSED!

!testRun: #PortfolioTest #test17CanNotAddAnAccountToAPortfolioWithAPredecesorsThatHasTheAccount stamp: 'IO 11/8/2020 19:02:37'!
PASSED!

!testRun: #PortfolioTest #test18CantAddAPortfolioWhenItIsAParent stamp: 'IO 11/8/2020 19:02:37'!
PASSED!

!testRun: #PortfolioTest #test19CantAddAPortfolioWhenItIsAPredecesor stamp: 'IO 11/8/2020 19:02:37'!
PASSED!

!testRun: #PortfolioTest #test20CantAddAPortfolioWhenAPredecesorAlredyHasIt stamp: 'IO 11/8/2020 19:02:37'!
PASSED!

!testRun: #PortfolioTest #test22APortfolioKnowsItsDirectAccounts stamp: 'IO 11/8/2020 19:02:37'!
PASSED!

!testRun: #PortfolioTest #test22APortfolioKnowsTheAccountsOfHisPortfolios stamp: 'IO 11/8/2020 19:02:37'!
PASSED!

!testRun: #PortfolioTest #test23AnEmptyPortfolioHasABalanceOf0 stamp: 'IO 11/8/2020 19:02:37'!
PASSED!

!testRun: #PortfolioTest #test24APortfolioWithOneAccountHasTheBalanceOfThatAccount stamp: 'IO 11/8/2020 19:02:37'!
PASSED!

!testRun: #PortfolioTest #test25TheBalanceOfAPortfolioWithNoPortfoliosIsTheSumOfHisAccounts stamp: 'IO 11/8/2020 19:02:37'!
PASSED!

!testRun: #PortfolioTest #test26TheBalanceOfAPortfolioIsTheSumOfHisAccountsAndPortfolios stamp: 'IO 11/8/2020 19:02:37'!
PASSED!

!testRun: #PortfolioTest #test27AnEmptyPortfolioHasNoRegisteredTransactions stamp: 'IO 11/8/2020 19:02:37'!
PASSED!

!testRun: #PortfolioTest #test28APortfolioWithOneAccountHasItsRegisteredTransactions stamp: 'IO 11/8/2020 19:02:37'!
PASSED!

!testRun: #PortfolioTest #test29APortfolioWithManyAccountsHasItsAccountsRegisteredTransactions stamp: 'IO 11/8/2020 19:02:37'!
PASSED!

!testRun: #PortfolioTest #test30APortfolioHasItsPortfoliosAndAccountsRegisteredTransactions stamp: 'IO 11/8/2020 19:02:37'!
PASSED!

!testRun: #PortfolioTest #test31AnEmptyPortfolioHasNoTransactions stamp: 'IO 11/8/2020 19:02:37'!
PASSED!

!testRun: #PortfolioTest #test32APortfolioWithOneAccountHasItsTransactions stamp: 'IO 11/8/2020 19:02:37'!
PASSED!

!testRun: #PortfolioTest #test33APortfolioWithManyAccountsHasItsAccountsTransactions stamp: 'IO 11/8/2020 19:02:37'!
PASSED!

!testRun: #PortfolioTest #test34APortfolioHasItsPortfoliosAndAccountsTransaction stamp: 'IO 11/8/2020 19:02:37'!
PASSED!

!testRun: #PortfolioTest #test35CanNotAddAPortfolioWithAccountsAlredyInTheParentsOfTheRevceiver stamp: 'IO 11/8/2020 19:02:37'!
PASSED!
!Portfolio methodsFor: 'private' stamp: 'IO 11/8/2020 19:02:50' prior: 50885425!
accountsAndPortfoliosDo: aBlock

	"perform a block..."

	accounts do: [ :account | aBlock value: account.].
	self portfoliosDo: [ :portfolio | aBlock value: portfolio.].
! !

!testRun: #PortfolioTest #test01AnAccountCanBeAddedToAPortfolio stamp: 'IO 11/8/2020 19:02:50'!
PASSED!

!testRun: #PortfolioTest #test02APortfolioHasNoAccountsInitially stamp: 'IO 11/8/2020 19:02:51'!
PASSED!

!testRun: #PortfolioTest #test03APortfolioDoesNotHaveMoreAccountsThanAdded stamp: 'IO 11/8/2020 19:02:51'!
PASSED!

!testRun: #PortfolioTest #test04MoreThanOneAccountCanBeAddedToAPortfolio stamp: 'IO 11/8/2020 19:02:51'!
PASSED!

!testRun: #PortfolioTest #test05APortfolioDoesNotHavePortfoliosInitialy stamp: 'IO 11/8/2020 19:02:51'!
PASSED!

!testRun: #PortfolioTest #test06AnEmptyPortfolioCanBeAddedToAPortfolio stamp: 'IO 11/8/2020 19:02:51'!
PASSED!

!testRun: #PortfolioTest #test07VariousEmptyPortfoliosCanBeAddedToAPortfolio stamp: 'IO 11/8/2020 19:02:51'!
PASSED!

!testRun: #PortfolioTest #test08PortfoliosCanBeAddedToAPortfolio stamp: 'IO 11/8/2020 19:02:51'!
PASSED!

!testRun: #PortfolioTest #test09APortfolioWithPortfoliosCanBeAddedToAportfolio stamp: 'IO 11/8/2020 19:02:51'!
PASSED!

!testRun: #PortfolioTest #test10CanNotAddAnAccountToAPortfolioWhosePortfolioHasTheAccount stamp: 'IO 11/8/2020 19:02:51'!
PASSED!

!testRun: #PortfolioTest #test11CanNotAddAnAccountToAPortfolioWhoHasAPortfolioWithTheAccount stamp: 'IO 11/8/2020 19:02:51'!
PASSED!

!testRun: #PortfolioTest #test12APortfolioCantHaveRepeatedAccounts stamp: 'IO 11/8/2020 19:02:51'!
PASSED!

!testRun: #PortfolioTest #test13APortfolioCanNotHaveRepeatedPortfolios stamp: 'IO 11/8/2020 19:02:51'!
PASSED!

!testRun: #PortfolioTest #test14APortffolioCantHaveItself stamp: 'IO 11/8/2020 19:02:51'!
PASSED!

!testRun: #PortfolioTest #test15CanNotAddAnAccountToAPortfolioWithAParentThatHasTheAccount stamp: 'IO 11/8/2020 19:02:51'!
PASSED!

!testRun: #PortfolioTest #test16CanNotAddAnAccountToAPortfolioWhoseParentHasTheAccount stamp: 'IO 11/8/2020 19:02:51'!
PASSED!

!testRun: #PortfolioTest #test17CanNotAddAnAccountToAPortfolioWithAPredecesorsThatHasTheAccount stamp: 'IO 11/8/2020 19:02:51'!
PASSED!

!testRun: #PortfolioTest #test18CantAddAPortfolioWhenItIsAParent stamp: 'IO 11/8/2020 19:02:51'!
PASSED!

!testRun: #PortfolioTest #test19CantAddAPortfolioWhenItIsAPredecesor stamp: 'IO 11/8/2020 19:02:51'!
PASSED!

!testRun: #PortfolioTest #test20CantAddAPortfolioWhenAPredecesorAlredyHasIt stamp: 'IO 11/8/2020 19:02:51'!
PASSED!

!testRun: #PortfolioTest #test22APortfolioKnowsItsDirectAccounts stamp: 'IO 11/8/2020 19:02:51'!
PASSED!

!testRun: #PortfolioTest #test22APortfolioKnowsTheAccountsOfHisPortfolios stamp: 'IO 11/8/2020 19:02:51'!
PASSED!

!testRun: #PortfolioTest #test23AnEmptyPortfolioHasABalanceOf0 stamp: 'IO 11/8/2020 19:02:51'!
PASSED!

!testRun: #PortfolioTest #test24APortfolioWithOneAccountHasTheBalanceOfThatAccount stamp: 'IO 11/8/2020 19:02:51'!
PASSED!

!testRun: #PortfolioTest #test25TheBalanceOfAPortfolioWithNoPortfoliosIsTheSumOfHisAccounts stamp: 'IO 11/8/2020 19:02:51'!
PASSED!

!testRun: #PortfolioTest #test26TheBalanceOfAPortfolioIsTheSumOfHisAccountsAndPortfolios stamp: 'IO 11/8/2020 19:02:51'!
PASSED!

!testRun: #PortfolioTest #test27AnEmptyPortfolioHasNoRegisteredTransactions stamp: 'IO 11/8/2020 19:02:51'!
PASSED!

!testRun: #PortfolioTest #test28APortfolioWithOneAccountHasItsRegisteredTransactions stamp: 'IO 11/8/2020 19:02:51'!
PASSED!

!testRun: #PortfolioTest #test29APortfolioWithManyAccountsHasItsAccountsRegisteredTransactions stamp: 'IO 11/8/2020 19:02:51'!
PASSED!

!testRun: #PortfolioTest #test30APortfolioHasItsPortfoliosAndAccountsRegisteredTransactions stamp: 'IO 11/8/2020 19:02:51'!
PASSED!

!testRun: #PortfolioTest #test31AnEmptyPortfolioHasNoTransactions stamp: 'IO 11/8/2020 19:02:51'!
PASSED!

!testRun: #PortfolioTest #test32APortfolioWithOneAccountHasItsTransactions stamp: 'IO 11/8/2020 19:02:51'!
PASSED!

!testRun: #PortfolioTest #test33APortfolioWithManyAccountsHasItsAccountsTransactions stamp: 'IO 11/8/2020 19:02:51'!
PASSED!

!testRun: #PortfolioTest #test34APortfolioHasItsPortfoliosAndAccountsTransaction stamp: 'IO 11/8/2020 19:02:51'!
PASSED!

!testRun: #PortfolioTest #test35CanNotAddAPortfolioWithAccountsAlredyInTheParentsOfTheRevceiver stamp: 'IO 11/8/2020 19:02:51'!
PASSED!
!Portfolio methodsFor: 'testing' stamp: 'IO 11/8/2020 19:03:12' prior: 50885393!
includesPortfolio: aPortfolio

	"return if this portfolio includes the given portfolio or not"

	self portfoliosDo: [ :portfolio | (portfolio includesPortfolio: aPortfolio) ifTrue: [^true]].
	
	^portfolios includes: aPortfolio.
! !

!testRun: #PortfolioTest #test01AnAccountCanBeAddedToAPortfolio stamp: 'IO 11/8/2020 19:03:13'!
PASSED!

!testRun: #PortfolioTest #test02APortfolioHasNoAccountsInitially stamp: 'IO 11/8/2020 19:03:13'!
PASSED!

!testRun: #PortfolioTest #test03APortfolioDoesNotHaveMoreAccountsThanAdded stamp: 'IO 11/8/2020 19:03:13'!
PASSED!

!testRun: #PortfolioTest #test04MoreThanOneAccountCanBeAddedToAPortfolio stamp: 'IO 11/8/2020 19:03:13'!
PASSED!

!testRun: #PortfolioTest #test05APortfolioDoesNotHavePortfoliosInitialy stamp: 'IO 11/8/2020 19:03:13'!
PASSED!

!testRun: #PortfolioTest #test06AnEmptyPortfolioCanBeAddedToAPortfolio stamp: 'IO 11/8/2020 19:03:13'!
PASSED!

!testRun: #PortfolioTest #test07VariousEmptyPortfoliosCanBeAddedToAPortfolio stamp: 'IO 11/8/2020 19:03:13'!
PASSED!

!testRun: #PortfolioTest #test08PortfoliosCanBeAddedToAPortfolio stamp: 'IO 11/8/2020 19:03:13'!
PASSED!

!testRun: #PortfolioTest #test09APortfolioWithPortfoliosCanBeAddedToAportfolio stamp: 'IO 11/8/2020 19:03:13'!
PASSED!

!testRun: #PortfolioTest #test10CanNotAddAnAccountToAPortfolioWhosePortfolioHasTheAccount stamp: 'IO 11/8/2020 19:03:13'!
PASSED!

!testRun: #PortfolioTest #test11CanNotAddAnAccountToAPortfolioWhoHasAPortfolioWithTheAccount stamp: 'IO 11/8/2020 19:03:13'!
PASSED!

!testRun: #PortfolioTest #test12APortfolioCantHaveRepeatedAccounts stamp: 'IO 11/8/2020 19:03:13'!
PASSED!

!testRun: #PortfolioTest #test13APortfolioCanNotHaveRepeatedPortfolios stamp: 'IO 11/8/2020 19:03:13'!
PASSED!

!testRun: #PortfolioTest #test14APortffolioCantHaveItself stamp: 'IO 11/8/2020 19:03:13'!
PASSED!

!testRun: #PortfolioTest #test15CanNotAddAnAccountToAPortfolioWithAParentThatHasTheAccount stamp: 'IO 11/8/2020 19:03:13'!
PASSED!

!testRun: #PortfolioTest #test16CanNotAddAnAccountToAPortfolioWhoseParentHasTheAccount stamp: 'IO 11/8/2020 19:03:13'!
PASSED!

!testRun: #PortfolioTest #test17CanNotAddAnAccountToAPortfolioWithAPredecesorsThatHasTheAccount stamp: 'IO 11/8/2020 19:03:13'!
PASSED!

!testRun: #PortfolioTest #test18CantAddAPortfolioWhenItIsAParent stamp: 'IO 11/8/2020 19:03:13'!
PASSED!

!testRun: #PortfolioTest #test19CantAddAPortfolioWhenItIsAPredecesor stamp: 'IO 11/8/2020 19:03:13'!
PASSED!

!testRun: #PortfolioTest #test20CantAddAPortfolioWhenAPredecesorAlredyHasIt stamp: 'IO 11/8/2020 19:03:13'!
PASSED!

!testRun: #PortfolioTest #test22APortfolioKnowsItsDirectAccounts stamp: 'IO 11/8/2020 19:03:13'!
PASSED!

!testRun: #PortfolioTest #test22APortfolioKnowsTheAccountsOfHisPortfolios stamp: 'IO 11/8/2020 19:03:13'!
PASSED!

!testRun: #PortfolioTest #test23AnEmptyPortfolioHasABalanceOf0 stamp: 'IO 11/8/2020 19:03:13'!
PASSED!

!testRun: #PortfolioTest #test24APortfolioWithOneAccountHasTheBalanceOfThatAccount stamp: 'IO 11/8/2020 19:03:13'!
PASSED!

!testRun: #PortfolioTest #test25TheBalanceOfAPortfolioWithNoPortfoliosIsTheSumOfHisAccounts stamp: 'IO 11/8/2020 19:03:13'!
PASSED!

!testRun: #PortfolioTest #test26TheBalanceOfAPortfolioIsTheSumOfHisAccountsAndPortfolios stamp: 'IO 11/8/2020 19:03:13'!
PASSED!

!testRun: #PortfolioTest #test27AnEmptyPortfolioHasNoRegisteredTransactions stamp: 'IO 11/8/2020 19:03:13'!
PASSED!

!testRun: #PortfolioTest #test28APortfolioWithOneAccountHasItsRegisteredTransactions stamp: 'IO 11/8/2020 19:03:13'!
PASSED!

!testRun: #PortfolioTest #test29APortfolioWithManyAccountsHasItsAccountsRegisteredTransactions stamp: 'IO 11/8/2020 19:03:13'!
PASSED!

!testRun: #PortfolioTest #test30APortfolioHasItsPortfoliosAndAccountsRegisteredTransactions stamp: 'IO 11/8/2020 19:03:13'!
PASSED!

!testRun: #PortfolioTest #test31AnEmptyPortfolioHasNoTransactions stamp: 'IO 11/8/2020 19:03:13'!
PASSED!

!testRun: #PortfolioTest #test32APortfolioWithOneAccountHasItsTransactions stamp: 'IO 11/8/2020 19:03:13'!
PASSED!

!testRun: #PortfolioTest #test33APortfolioWithManyAccountsHasItsAccountsTransactions stamp: 'IO 11/8/2020 19:03:13'!
PASSED!

!testRun: #PortfolioTest #test34APortfolioHasItsPortfoliosAndAccountsTransaction stamp: 'IO 11/8/2020 19:03:13'!
PASSED!

!testRun: #PortfolioTest #test35CanNotAddAPortfolioWithAccountsAlredyInTheParentsOfTheRevceiver stamp: 'IO 11/8/2020 19:03:13'!
PASSED!
!Portfolio methodsFor: 'accessing' stamp: 'IO 11/8/2020 19:03:32' prior: 50885845!
portfoliosDo: aBlock

	portfolios do: [ :portfolio | aBlock value: portfolio ].
! !

!testRun: #PortfolioTest #test01AnAccountCanBeAddedToAPortfolio stamp: 'IO 11/8/2020 19:03:32'!
PASSED!

!testRun: #PortfolioTest #test02APortfolioHasNoAccountsInitially stamp: 'IO 11/8/2020 19:03:32'!
PASSED!

!testRun: #PortfolioTest #test03APortfolioDoesNotHaveMoreAccountsThanAdded stamp: 'IO 11/8/2020 19:03:32'!
PASSED!

!testRun: #PortfolioTest #test04MoreThanOneAccountCanBeAddedToAPortfolio stamp: 'IO 11/8/2020 19:03:32'!
PASSED!

!testRun: #PortfolioTest #test05APortfolioDoesNotHavePortfoliosInitialy stamp: 'IO 11/8/2020 19:03:32'!
PASSED!

!testRun: #PortfolioTest #test06AnEmptyPortfolioCanBeAddedToAPortfolio stamp: 'IO 11/8/2020 19:03:32'!
PASSED!

!testRun: #PortfolioTest #test07VariousEmptyPortfoliosCanBeAddedToAPortfolio stamp: 'IO 11/8/2020 19:03:32'!
PASSED!

!testRun: #PortfolioTest #test08PortfoliosCanBeAddedToAPortfolio stamp: 'IO 11/8/2020 19:03:32'!
PASSED!

!testRun: #PortfolioTest #test09APortfolioWithPortfoliosCanBeAddedToAportfolio stamp: 'IO 11/8/2020 19:03:32'!
PASSED!

!testRun: #PortfolioTest #test10CanNotAddAnAccountToAPortfolioWhosePortfolioHasTheAccount stamp: 'IO 11/8/2020 19:03:32'!
PASSED!

!testRun: #PortfolioTest #test11CanNotAddAnAccountToAPortfolioWhoHasAPortfolioWithTheAccount stamp: 'IO 11/8/2020 19:03:32'!
PASSED!

!testRun: #PortfolioTest #test12APortfolioCantHaveRepeatedAccounts stamp: 'IO 11/8/2020 19:03:32'!
PASSED!

!testRun: #PortfolioTest #test13APortfolioCanNotHaveRepeatedPortfolios stamp: 'IO 11/8/2020 19:03:32'!
PASSED!

!testRun: #PortfolioTest #test14APortffolioCantHaveItself stamp: 'IO 11/8/2020 19:03:32'!
PASSED!

!testRun: #PortfolioTest #test15CanNotAddAnAccountToAPortfolioWithAParentThatHasTheAccount stamp: 'IO 11/8/2020 19:03:32'!
PASSED!

!testRun: #PortfolioTest #test16CanNotAddAnAccountToAPortfolioWhoseParentHasTheAccount stamp: 'IO 11/8/2020 19:03:32'!
PASSED!

!testRun: #PortfolioTest #test17CanNotAddAnAccountToAPortfolioWithAPredecesorsThatHasTheAccount stamp: 'IO 11/8/2020 19:03:32'!
PASSED!

!testRun: #PortfolioTest #test18CantAddAPortfolioWhenItIsAParent stamp: 'IO 11/8/2020 19:03:32'!
PASSED!

!testRun: #PortfolioTest #test19CantAddAPortfolioWhenItIsAPredecesor stamp: 'IO 11/8/2020 19:03:32'!
PASSED!

!testRun: #PortfolioTest #test20CantAddAPortfolioWhenAPredecesorAlredyHasIt stamp: 'IO 11/8/2020 19:03:32'!
PASSED!

!testRun: #PortfolioTest #test22APortfolioKnowsItsDirectAccounts stamp: 'IO 11/8/2020 19:03:32'!
PASSED!

!testRun: #PortfolioTest #test22APortfolioKnowsTheAccountsOfHisPortfolios stamp: 'IO 11/8/2020 19:03:32'!
PASSED!

!testRun: #PortfolioTest #test23AnEmptyPortfolioHasABalanceOf0 stamp: 'IO 11/8/2020 19:03:32'!
PASSED!

!testRun: #PortfolioTest #test24APortfolioWithOneAccountHasTheBalanceOfThatAccount stamp: 'IO 11/8/2020 19:03:32'!
PASSED!

!testRun: #PortfolioTest #test25TheBalanceOfAPortfolioWithNoPortfoliosIsTheSumOfHisAccounts stamp: 'IO 11/8/2020 19:03:32'!
PASSED!

!testRun: #PortfolioTest #test26TheBalanceOfAPortfolioIsTheSumOfHisAccountsAndPortfolios stamp: 'IO 11/8/2020 19:03:32'!
PASSED!

!testRun: #PortfolioTest #test27AnEmptyPortfolioHasNoRegisteredTransactions stamp: 'IO 11/8/2020 19:03:32'!
PASSED!

!testRun: #PortfolioTest #test28APortfolioWithOneAccountHasItsRegisteredTransactions stamp: 'IO 11/8/2020 19:03:32'!
PASSED!

!testRun: #PortfolioTest #test29APortfolioWithManyAccountsHasItsAccountsRegisteredTransactions stamp: 'IO 11/8/2020 19:03:32'!
PASSED!

!testRun: #PortfolioTest #test30APortfolioHasItsPortfoliosAndAccountsRegisteredTransactions stamp: 'IO 11/8/2020 19:03:32'!
PASSED!

!testRun: #PortfolioTest #test31AnEmptyPortfolioHasNoTransactions stamp: 'IO 11/8/2020 19:03:32'!
PASSED!

!testRun: #PortfolioTest #test32APortfolioWithOneAccountHasItsTransactions stamp: 'IO 11/8/2020 19:03:32'!
PASSED!

!testRun: #PortfolioTest #test33APortfolioWithManyAccountsHasItsAccountsTransactions stamp: 'IO 11/8/2020 19:03:32'!
PASSED!

!testRun: #PortfolioTest #test34APortfolioHasItsPortfoliosAndAccountsTransaction stamp: 'IO 11/8/2020 19:03:32'!
PASSED!

!testRun: #PortfolioTest #test35CanNotAddAPortfolioWithAccountsAlredyInTheParentsOfTheRevceiver stamp: 'IO 11/8/2020 19:03:32'!
PASSED!
!ParentPortfolios methodsFor: 'adding' stamp: 'IO 11/8/2020 19:05:01' prior: 50885457!
addAsParent: aPortfolio

	"add a portfolio as parent of this parent portfolio"

	self subclassResponsibility ! !
!ParentPortfolios methodsFor: 'validate' stamp: 'IO 11/8/2020 19:05:27' prior: 50883031!
validateAccountBeforeAdding: anAccount

	"validate that an account is not in this portfolio's children"

	^self subclassResponsibility ! !
!ParentPortfolios methodsFor: 'validate' stamp: 'IO 11/8/2020 19:05:31' prior: 50886412!
validateAccountBeforeAdding: anAccount

	"validate that an account is not in this portfolio"

	^self subclassResponsibility ! !
!ParentPortfolios methodsFor: 'validate' stamp: 'IO 11/8/2020 19:06:04' prior: 50886420!
validateAccountBeforeAdding: anAccount

	"validate that an account is not in this portfolio either its children portfolios, and either its parent's portfolios"

	^self subclassResponsibility ! !
!ParentPortfolios methodsFor: 'validate' stamp: 'IO 11/8/2020 19:06:47' prior: 50886427!
validateAccountBeforeAdding: anAccount

	"validate that an account is not in this portfolio neither its children's portfolios, and neither this parent's portfolios"

	^self subclassResponsibility ! !
!ParentPortfolios methodsFor: 'validate' stamp: 'IO 11/8/2020 19:07:58' prior: 50886436!
validateAccountBeforeAdding: anAccount

	"validate that the given account is not in this portfolio, neither in children's portfolios, nor in parents' portfolios"

	^self subclassResponsibility ! !
!ParentPortfolios methodsFor: 'validate' stamp: 'IO 11/8/2020 19:08:29' prior: 50883036!
validatePortfoliosBeforeAdding: anAccount

	"validate that the given portfolio is not in this portfolio, neither in children's portfolios, nor in parents' portfolios"

	^self subclassResponsibility ! !
!ParentPortfolios class methodsFor: 'instance creation' stamp: 'IO 11/8/2020 19:08:48' prior: 50883056!
forPortfolio: aPortfolio

	"create a parent portfolio of a given portfolio"

	^Root new initialize: aPortfolio! !

!methodRemoval: ParentPortfolios class #newRoot stamp: 'IO 11/8/2020 19:09:03'!
newRoot

	^Root new!

!testRun: #PortfolioTest #test01AnAccountCanBeAddedToAPortfolio stamp: 'IO 11/8/2020 19:09:06'!
PASSED!

!testRun: #PortfolioTest #test02APortfolioHasNoAccountsInitially stamp: 'IO 11/8/2020 19:09:06'!
PASSED!

!testRun: #PortfolioTest #test03APortfolioDoesNotHaveMoreAccountsThanAdded stamp: 'IO 11/8/2020 19:09:06'!
PASSED!

!testRun: #PortfolioTest #test04MoreThanOneAccountCanBeAddedToAPortfolio stamp: 'IO 11/8/2020 19:09:06'!
PASSED!

!testRun: #PortfolioTest #test05APortfolioDoesNotHavePortfoliosInitialy stamp: 'IO 11/8/2020 19:09:06'!
PASSED!

!testRun: #PortfolioTest #test06AnEmptyPortfolioCanBeAddedToAPortfolio stamp: 'IO 11/8/2020 19:09:06'!
PASSED!

!testRun: #PortfolioTest #test07VariousEmptyPortfoliosCanBeAddedToAPortfolio stamp: 'IO 11/8/2020 19:09:06'!
PASSED!

!testRun: #PortfolioTest #test08PortfoliosCanBeAddedToAPortfolio stamp: 'IO 11/8/2020 19:09:06'!
PASSED!

!testRun: #PortfolioTest #test09APortfolioWithPortfoliosCanBeAddedToAportfolio stamp: 'IO 11/8/2020 19:09:06'!
PASSED!

!testRun: #PortfolioTest #test10CanNotAddAnAccountToAPortfolioWhosePortfolioHasTheAccount stamp: 'IO 11/8/2020 19:09:06'!
PASSED!

!testRun: #PortfolioTest #test11CanNotAddAnAccountToAPortfolioWhoHasAPortfolioWithTheAccount stamp: 'IO 11/8/2020 19:09:06'!
PASSED!

!testRun: #PortfolioTest #test12APortfolioCantHaveRepeatedAccounts stamp: 'IO 11/8/2020 19:09:06'!
PASSED!

!testRun: #PortfolioTest #test13APortfolioCanNotHaveRepeatedPortfolios stamp: 'IO 11/8/2020 19:09:06'!
PASSED!

!testRun: #PortfolioTest #test14APortffolioCantHaveItself stamp: 'IO 11/8/2020 19:09:06'!
PASSED!

!testRun: #PortfolioTest #test15CanNotAddAnAccountToAPortfolioWithAParentThatHasTheAccount stamp: 'IO 11/8/2020 19:09:06'!
PASSED!

!testRun: #PortfolioTest #test16CanNotAddAnAccountToAPortfolioWhoseParentHasTheAccount stamp: 'IO 11/8/2020 19:09:06'!
PASSED!

!testRun: #PortfolioTest #test17CanNotAddAnAccountToAPortfolioWithAPredecesorsThatHasTheAccount stamp: 'IO 11/8/2020 19:09:06'!
PASSED!

!testRun: #PortfolioTest #test18CantAddAPortfolioWhenItIsAParent stamp: 'IO 11/8/2020 19:09:06'!
PASSED!

!testRun: #PortfolioTest #test19CantAddAPortfolioWhenItIsAPredecesor stamp: 'IO 11/8/2020 19:09:06'!
PASSED!

!testRun: #PortfolioTest #test20CantAddAPortfolioWhenAPredecesorAlredyHasIt stamp: 'IO 11/8/2020 19:09:06'!
PASSED!

!testRun: #PortfolioTest #test22APortfolioKnowsItsDirectAccounts stamp: 'IO 11/8/2020 19:09:06'!
PASSED!

!testRun: #PortfolioTest #test22APortfolioKnowsTheAccountsOfHisPortfolios stamp: 'IO 11/8/2020 19:09:06'!
PASSED!

!testRun: #PortfolioTest #test23AnEmptyPortfolioHasABalanceOf0 stamp: 'IO 11/8/2020 19:09:06'!
PASSED!

!testRun: #PortfolioTest #test24APortfolioWithOneAccountHasTheBalanceOfThatAccount stamp: 'IO 11/8/2020 19:09:06'!
PASSED!

!testRun: #PortfolioTest #test25TheBalanceOfAPortfolioWithNoPortfoliosIsTheSumOfHisAccounts stamp: 'IO 11/8/2020 19:09:06'!
PASSED!

!testRun: #PortfolioTest #test26TheBalanceOfAPortfolioIsTheSumOfHisAccountsAndPortfolios stamp: 'IO 11/8/2020 19:09:06'!
PASSED!

!testRun: #PortfolioTest #test27AnEmptyPortfolioHasNoRegisteredTransactions stamp: 'IO 11/8/2020 19:09:06'!
PASSED!

!testRun: #PortfolioTest #test28APortfolioWithOneAccountHasItsRegisteredTransactions stamp: 'IO 11/8/2020 19:09:06'!
PASSED!

!testRun: #PortfolioTest #test29APortfolioWithManyAccountsHasItsAccountsRegisteredTransactions stamp: 'IO 11/8/2020 19:09:06'!
PASSED!

!testRun: #PortfolioTest #test30APortfolioHasItsPortfoliosAndAccountsRegisteredTransactions stamp: 'IO 11/8/2020 19:09:06'!
PASSED!

!testRun: #PortfolioTest #test31AnEmptyPortfolioHasNoTransactions stamp: 'IO 11/8/2020 19:09:06'!
PASSED!

!testRun: #PortfolioTest #test32APortfolioWithOneAccountHasItsTransactions stamp: 'IO 11/8/2020 19:09:06'!
PASSED!

!testRun: #PortfolioTest #test33APortfolioWithManyAccountsHasItsAccountsTransactions stamp: 'IO 11/8/2020 19:09:06'!
PASSED!

!testRun: #PortfolioTest #test34APortfolioHasItsPortfoliosAndAccountsTransaction stamp: 'IO 11/8/2020 19:09:06'!
PASSED!

!testRun: #PortfolioTest #test35CanNotAddAPortfolioWithAccountsAlredyInTheParentsOfTheRevceiver stamp: 'IO 11/8/2020 19:09:06'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'IO 11/8/2020 19:09:06'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'IO 11/8/2020 19:09:06'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'IO 11/8/2020 19:09:06'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'IO 11/8/2020 19:09:06'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'IO 11/8/2020 19:09:06'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'IO 11/8/2020 19:09:06'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'IO 11/8/2020 19:09:06'!
PASSED!
!Body methodsFor: 'validations' stamp: 'IO 11/8/2020 19:10:34'!
parentPortfoliosDo: aBlock
	
	parentPortfolios do: [ :aParentPortfolio | aBlock  value: aParentPortfolio ].
! !
!Body methodsFor: 'validations' stamp: 'IO 11/8/2020 19:10:46' prior: 50883080 overrides: 50886446!
validateAccountBeforeAdding: anAccount
	
	self parentPortfoliosDo: [:aParentPortfolio | aParentPortfolio validateAccountBeforeAdding: anAccount].
! !

!testRun: #PortfolioTest #test01AnAccountCanBeAddedToAPortfolio stamp: 'IO 11/8/2020 19:10:49'!
PASSED!

!testRun: #PortfolioTest #test02APortfolioHasNoAccountsInitially stamp: 'IO 11/8/2020 19:10:49'!
PASSED!

!testRun: #PortfolioTest #test03APortfolioDoesNotHaveMoreAccountsThanAdded stamp: 'IO 11/8/2020 19:10:49'!
PASSED!

!testRun: #PortfolioTest #test04MoreThanOneAccountCanBeAddedToAPortfolio stamp: 'IO 11/8/2020 19:10:49'!
PASSED!

!testRun: #PortfolioTest #test05APortfolioDoesNotHavePortfoliosInitialy stamp: 'IO 11/8/2020 19:10:49'!
PASSED!

!testRun: #PortfolioTest #test06AnEmptyPortfolioCanBeAddedToAPortfolio stamp: 'IO 11/8/2020 19:10:49'!
PASSED!

!testRun: #PortfolioTest #test07VariousEmptyPortfoliosCanBeAddedToAPortfolio stamp: 'IO 11/8/2020 19:10:49'!
PASSED!

!testRun: #PortfolioTest #test08PortfoliosCanBeAddedToAPortfolio stamp: 'IO 11/8/2020 19:10:49'!
PASSED!

!testRun: #PortfolioTest #test09APortfolioWithPortfoliosCanBeAddedToAportfolio stamp: 'IO 11/8/2020 19:10:49'!
PASSED!

!testRun: #PortfolioTest #test10CanNotAddAnAccountToAPortfolioWhosePortfolioHasTheAccount stamp: 'IO 11/8/2020 19:10:49'!
PASSED!

!testRun: #PortfolioTest #test11CanNotAddAnAccountToAPortfolioWhoHasAPortfolioWithTheAccount stamp: 'IO 11/8/2020 19:10:49'!
PASSED!

!testRun: #PortfolioTest #test12APortfolioCantHaveRepeatedAccounts stamp: 'IO 11/8/2020 19:10:49'!
PASSED!

!testRun: #PortfolioTest #test13APortfolioCanNotHaveRepeatedPortfolios stamp: 'IO 11/8/2020 19:10:49'!
PASSED!

!testRun: #PortfolioTest #test14APortffolioCantHaveItself stamp: 'IO 11/8/2020 19:10:49'!
PASSED!

!testRun: #PortfolioTest #test15CanNotAddAnAccountToAPortfolioWithAParentThatHasTheAccount stamp: 'IO 11/8/2020 19:10:49'!
PASSED!

!testRun: #PortfolioTest #test16CanNotAddAnAccountToAPortfolioWhoseParentHasTheAccount stamp: 'IO 11/8/2020 19:10:49'!
PASSED!

!testRun: #PortfolioTest #test17CanNotAddAnAccountToAPortfolioWithAPredecesorsThatHasTheAccount stamp: 'IO 11/8/2020 19:10:49'!
PASSED!

!testRun: #PortfolioTest #test18CantAddAPortfolioWhenItIsAParent stamp: 'IO 11/8/2020 19:10:49'!
PASSED!

!testRun: #PortfolioTest #test19CantAddAPortfolioWhenItIsAPredecesor stamp: 'IO 11/8/2020 19:10:49'!
PASSED!

!testRun: #PortfolioTest #test20CantAddAPortfolioWhenAPredecesorAlredyHasIt stamp: 'IO 11/8/2020 19:10:49'!
PASSED!

!testRun: #PortfolioTest #test22APortfolioKnowsItsDirectAccounts stamp: 'IO 11/8/2020 19:10:49'!
PASSED!

!testRun: #PortfolioTest #test22APortfolioKnowsTheAccountsOfHisPortfolios stamp: 'IO 11/8/2020 19:10:49'!
PASSED!

!testRun: #PortfolioTest #test23AnEmptyPortfolioHasABalanceOf0 stamp: 'IO 11/8/2020 19:10:49'!
PASSED!

!testRun: #PortfolioTest #test24APortfolioWithOneAccountHasTheBalanceOfThatAccount stamp: 'IO 11/8/2020 19:10:49'!
PASSED!

!testRun: #PortfolioTest #test25TheBalanceOfAPortfolioWithNoPortfoliosIsTheSumOfHisAccounts stamp: 'IO 11/8/2020 19:10:49'!
PASSED!

!testRun: #PortfolioTest #test26TheBalanceOfAPortfolioIsTheSumOfHisAccountsAndPortfolios stamp: 'IO 11/8/2020 19:10:49'!
PASSED!

!testRun: #PortfolioTest #test27AnEmptyPortfolioHasNoRegisteredTransactions stamp: 'IO 11/8/2020 19:10:49'!
PASSED!

!testRun: #PortfolioTest #test28APortfolioWithOneAccountHasItsRegisteredTransactions stamp: 'IO 11/8/2020 19:10:49'!
PASSED!

!testRun: #PortfolioTest #test29APortfolioWithManyAccountsHasItsAccountsRegisteredTransactions stamp: 'IO 11/8/2020 19:10:49'!
PASSED!

!testRun: #PortfolioTest #test30APortfolioHasItsPortfoliosAndAccountsRegisteredTransactions stamp: 'IO 11/8/2020 19:10:49'!
PASSED!

!testRun: #PortfolioTest #test31AnEmptyPortfolioHasNoTransactions stamp: 'IO 11/8/2020 19:10:49'!
PASSED!

!testRun: #PortfolioTest #test32APortfolioWithOneAccountHasItsTransactions stamp: 'IO 11/8/2020 19:10:49'!
PASSED!

!testRun: #PortfolioTest #test33APortfolioWithManyAccountsHasItsAccountsTransactions stamp: 'IO 11/8/2020 19:10:49'!
PASSED!

!testRun: #PortfolioTest #test34APortfolioHasItsPortfoliosAndAccountsTransaction stamp: 'IO 11/8/2020 19:10:49'!
PASSED!

!testRun: #PortfolioTest #test35CanNotAddAPortfolioWithAccountsAlredyInTheParentsOfTheRevceiver stamp: 'IO 11/8/2020 19:10:49'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'IO 11/8/2020 19:10:49'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'IO 11/8/2020 19:10:49'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'IO 11/8/2020 19:10:49'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'IO 11/8/2020 19:10:49'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'IO 11/8/2020 19:10:49'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'IO 11/8/2020 19:10:49'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'IO 11/8/2020 19:10:49'!
PASSED!
!Body methodsFor: 'validations' stamp: 'IO 11/8/2020 19:11:25' prior: 50883088 overrides: 50886455!
validatePortfoliosBeforeAdding: aPortfolioToAdd
	
	self parentPortfoliosDo: [ :aParentPortfolio | (aParentPortfolio validatePortfolioBeforeAdding: aPortfolioToAdd)].  ! !

!testRun: #PortfolioTest #test01AnAccountCanBeAddedToAPortfolio stamp: 'IO 11/8/2020 19:11:30'!
PASSED!

!testRun: #PortfolioTest #test02APortfolioHasNoAccountsInitially stamp: 'IO 11/8/2020 19:11:30'!
PASSED!

!testRun: #PortfolioTest #test03APortfolioDoesNotHaveMoreAccountsThanAdded stamp: 'IO 11/8/2020 19:11:30'!
PASSED!

!testRun: #PortfolioTest #test04MoreThanOneAccountCanBeAddedToAPortfolio stamp: 'IO 11/8/2020 19:11:30'!
PASSED!

!testRun: #PortfolioTest #test05APortfolioDoesNotHavePortfoliosInitialy stamp: 'IO 11/8/2020 19:11:30'!
PASSED!

!testRun: #PortfolioTest #test06AnEmptyPortfolioCanBeAddedToAPortfolio stamp: 'IO 11/8/2020 19:11:30'!
PASSED!

!testRun: #PortfolioTest #test07VariousEmptyPortfoliosCanBeAddedToAPortfolio stamp: 'IO 11/8/2020 19:11:30'!
PASSED!

!testRun: #PortfolioTest #test08PortfoliosCanBeAddedToAPortfolio stamp: 'IO 11/8/2020 19:11:30'!
PASSED!

!testRun: #PortfolioTest #test09APortfolioWithPortfoliosCanBeAddedToAportfolio stamp: 'IO 11/8/2020 19:11:30'!
PASSED!

!testRun: #PortfolioTest #test10CanNotAddAnAccountToAPortfolioWhosePortfolioHasTheAccount stamp: 'IO 11/8/2020 19:11:30'!
PASSED!

!testRun: #PortfolioTest #test11CanNotAddAnAccountToAPortfolioWhoHasAPortfolioWithTheAccount stamp: 'IO 11/8/2020 19:11:30'!
PASSED!

!testRun: #PortfolioTest #test12APortfolioCantHaveRepeatedAccounts stamp: 'IO 11/8/2020 19:11:30'!
PASSED!

!testRun: #PortfolioTest #test13APortfolioCanNotHaveRepeatedPortfolios stamp: 'IO 11/8/2020 19:11:30'!
PASSED!

!testRun: #PortfolioTest #test14APortffolioCantHaveItself stamp: 'IO 11/8/2020 19:11:30'!
PASSED!

!testRun: #PortfolioTest #test15CanNotAddAnAccountToAPortfolioWithAParentThatHasTheAccount stamp: 'IO 11/8/2020 19:11:30'!
PASSED!

!testRun: #PortfolioTest #test16CanNotAddAnAccountToAPortfolioWhoseParentHasTheAccount stamp: 'IO 11/8/2020 19:11:30'!
PASSED!

!testRun: #PortfolioTest #test17CanNotAddAnAccountToAPortfolioWithAPredecesorsThatHasTheAccount stamp: 'IO 11/8/2020 19:11:30'!
PASSED!

!testRun: #PortfolioTest #test18CantAddAPortfolioWhenItIsAParent stamp: 'IO 11/8/2020 19:11:30'!
PASSED!

!testRun: #PortfolioTest #test19CantAddAPortfolioWhenItIsAPredecesor stamp: 'IO 11/8/2020 19:11:30'!
PASSED!

!testRun: #PortfolioTest #test20CantAddAPortfolioWhenAPredecesorAlredyHasIt stamp: 'IO 11/8/2020 19:11:30'!
PASSED!

!testRun: #PortfolioTest #test22APortfolioKnowsItsDirectAccounts stamp: 'IO 11/8/2020 19:11:30'!
PASSED!

!testRun: #PortfolioTest #test22APortfolioKnowsTheAccountsOfHisPortfolios stamp: 'IO 11/8/2020 19:11:30'!
PASSED!

!testRun: #PortfolioTest #test23AnEmptyPortfolioHasABalanceOf0 stamp: 'IO 11/8/2020 19:11:30'!
PASSED!

!testRun: #PortfolioTest #test24APortfolioWithOneAccountHasTheBalanceOfThatAccount stamp: 'IO 11/8/2020 19:11:30'!
PASSED!

!testRun: #PortfolioTest #test25TheBalanceOfAPortfolioWithNoPortfoliosIsTheSumOfHisAccounts stamp: 'IO 11/8/2020 19:11:30'!
PASSED!

!testRun: #PortfolioTest #test26TheBalanceOfAPortfolioIsTheSumOfHisAccountsAndPortfolios stamp: 'IO 11/8/2020 19:11:30'!
PASSED!

!testRun: #PortfolioTest #test27AnEmptyPortfolioHasNoRegisteredTransactions stamp: 'IO 11/8/2020 19:11:30'!
PASSED!

!testRun: #PortfolioTest #test28APortfolioWithOneAccountHasItsRegisteredTransactions stamp: 'IO 11/8/2020 19:11:30'!
PASSED!

!testRun: #PortfolioTest #test29APortfolioWithManyAccountsHasItsAccountsRegisteredTransactions stamp: 'IO 11/8/2020 19:11:30'!
PASSED!

!testRun: #PortfolioTest #test30APortfolioHasItsPortfoliosAndAccountsRegisteredTransactions stamp: 'IO 11/8/2020 19:11:30'!
PASSED!

!testRun: #PortfolioTest #test31AnEmptyPortfolioHasNoTransactions stamp: 'IO 11/8/2020 19:11:30'!
PASSED!

!testRun: #PortfolioTest #test32APortfolioWithOneAccountHasItsTransactions stamp: 'IO 11/8/2020 19:11:30'!
PASSED!

!testRun: #PortfolioTest #test33APortfolioWithManyAccountsHasItsAccountsTransactions stamp: 'IO 11/8/2020 19:11:30'!
PASSED!

!testRun: #PortfolioTest #test34APortfolioHasItsPortfoliosAndAccountsTransaction stamp: 'IO 11/8/2020 19:11:30'!
PASSED!

!testRun: #PortfolioTest #test35CanNotAddAPortfolioWithAccountsAlredyInTheParentsOfTheRevceiver stamp: 'IO 11/8/2020 19:11:30'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'IO 11/8/2020 19:11:30'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'IO 11/8/2020 19:11:30'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'IO 11/8/2020 19:11:30'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'IO 11/8/2020 19:11:30'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'IO 11/8/2020 19:11:30'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'IO 11/8/2020 19:11:30'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'IO 11/8/2020 19:11:30'!
PASSED!
!Body methodsFor: 'validations' stamp: 'IO 11/8/2020 19:11:41' prior: 50886637 overrides: 50886446!
validateAccountBeforeAdding: anAccount
	
	self parentPortfoliosDo: [ :aParentPortfolio | aParentPortfolio validateAccountBeforeAdding: anAccount].
! !
!Body methodsFor: 'validations' stamp: 'IO 11/8/2020 19:12:04' prior: 50886801 overrides: 50886455!
validatePortfoliosBeforeAdding: aPortfolioToAdd
	
	self parentPortfoliosDo: [ :aParentPortfolio | aParentPortfolio validatePortfolioBeforeAdding: aPortfolioToAdd].
! !

!testRun: #PortfolioTest #test01AnAccountCanBeAddedToAPortfolio stamp: 'IO 11/8/2020 19:12:07'!
PASSED!

!testRun: #PortfolioTest #test02APortfolioHasNoAccountsInitially stamp: 'IO 11/8/2020 19:12:07'!
PASSED!

!testRun: #PortfolioTest #test03APortfolioDoesNotHaveMoreAccountsThanAdded stamp: 'IO 11/8/2020 19:12:07'!
PASSED!

!testRun: #PortfolioTest #test04MoreThanOneAccountCanBeAddedToAPortfolio stamp: 'IO 11/8/2020 19:12:07'!
PASSED!

!testRun: #PortfolioTest #test05APortfolioDoesNotHavePortfoliosInitialy stamp: 'IO 11/8/2020 19:12:07'!
PASSED!

!testRun: #PortfolioTest #test06AnEmptyPortfolioCanBeAddedToAPortfolio stamp: 'IO 11/8/2020 19:12:07'!
PASSED!

!testRun: #PortfolioTest #test07VariousEmptyPortfoliosCanBeAddedToAPortfolio stamp: 'IO 11/8/2020 19:12:07'!
PASSED!

!testRun: #PortfolioTest #test08PortfoliosCanBeAddedToAPortfolio stamp: 'IO 11/8/2020 19:12:07'!
PASSED!

!testRun: #PortfolioTest #test09APortfolioWithPortfoliosCanBeAddedToAportfolio stamp: 'IO 11/8/2020 19:12:07'!
PASSED!

!testRun: #PortfolioTest #test10CanNotAddAnAccountToAPortfolioWhosePortfolioHasTheAccount stamp: 'IO 11/8/2020 19:12:07'!
PASSED!

!testRun: #PortfolioTest #test11CanNotAddAnAccountToAPortfolioWhoHasAPortfolioWithTheAccount stamp: 'IO 11/8/2020 19:12:07'!
PASSED!

!testRun: #PortfolioTest #test12APortfolioCantHaveRepeatedAccounts stamp: 'IO 11/8/2020 19:12:07'!
PASSED!

!testRun: #PortfolioTest #test13APortfolioCanNotHaveRepeatedPortfolios stamp: 'IO 11/8/2020 19:12:07'!
PASSED!

!testRun: #PortfolioTest #test14APortffolioCantHaveItself stamp: 'IO 11/8/2020 19:12:07'!
PASSED!

!testRun: #PortfolioTest #test15CanNotAddAnAccountToAPortfolioWithAParentThatHasTheAccount stamp: 'IO 11/8/2020 19:12:07'!
PASSED!

!testRun: #PortfolioTest #test16CanNotAddAnAccountToAPortfolioWhoseParentHasTheAccount stamp: 'IO 11/8/2020 19:12:07'!
PASSED!

!testRun: #PortfolioTest #test17CanNotAddAnAccountToAPortfolioWithAPredecesorsThatHasTheAccount stamp: 'IO 11/8/2020 19:12:07'!
PASSED!

!testRun: #PortfolioTest #test18CantAddAPortfolioWhenItIsAParent stamp: 'IO 11/8/2020 19:12:07'!
PASSED!

!testRun: #PortfolioTest #test19CantAddAPortfolioWhenItIsAPredecesor stamp: 'IO 11/8/2020 19:12:07'!
PASSED!

!testRun: #PortfolioTest #test20CantAddAPortfolioWhenAPredecesorAlredyHasIt stamp: 'IO 11/8/2020 19:12:07'!
PASSED!

!testRun: #PortfolioTest #test22APortfolioKnowsItsDirectAccounts stamp: 'IO 11/8/2020 19:12:07'!
PASSED!

!testRun: #PortfolioTest #test22APortfolioKnowsTheAccountsOfHisPortfolios stamp: 'IO 11/8/2020 19:12:07'!
PASSED!

!testRun: #PortfolioTest #test23AnEmptyPortfolioHasABalanceOf0 stamp: 'IO 11/8/2020 19:12:07'!
PASSED!

!testRun: #PortfolioTest #test24APortfolioWithOneAccountHasTheBalanceOfThatAccount stamp: 'IO 11/8/2020 19:12:07'!
PASSED!

!testRun: #PortfolioTest #test25TheBalanceOfAPortfolioWithNoPortfoliosIsTheSumOfHisAccounts stamp: 'IO 11/8/2020 19:12:07'!
PASSED!

!testRun: #PortfolioTest #test26TheBalanceOfAPortfolioIsTheSumOfHisAccountsAndPortfolios stamp: 'IO 11/8/2020 19:12:07'!
PASSED!

!testRun: #PortfolioTest #test27AnEmptyPortfolioHasNoRegisteredTransactions stamp: 'IO 11/8/2020 19:12:07'!
PASSED!

!testRun: #PortfolioTest #test28APortfolioWithOneAccountHasItsRegisteredTransactions stamp: 'IO 11/8/2020 19:12:07'!
PASSED!

!testRun: #PortfolioTest #test29APortfolioWithManyAccountsHasItsAccountsRegisteredTransactions stamp: 'IO 11/8/2020 19:12:07'!
PASSED!

!testRun: #PortfolioTest #test30APortfolioHasItsPortfoliosAndAccountsRegisteredTransactions stamp: 'IO 11/8/2020 19:12:07'!
PASSED!

!testRun: #PortfolioTest #test31AnEmptyPortfolioHasNoTransactions stamp: 'IO 11/8/2020 19:12:07'!
PASSED!

!testRun: #PortfolioTest #test32APortfolioWithOneAccountHasItsTransactions stamp: 'IO 11/8/2020 19:12:07'!
PASSED!

!testRun: #PortfolioTest #test33APortfolioWithManyAccountsHasItsAccountsTransactions stamp: 'IO 11/8/2020 19:12:07'!
PASSED!

!testRun: #PortfolioTest #test34APortfolioHasItsPortfoliosAndAccountsTransaction stamp: 'IO 11/8/2020 19:12:07'!
PASSED!

!testRun: #PortfolioTest #test35CanNotAddAPortfolioWithAccountsAlredyInTheParentsOfTheRevceiver stamp: 'IO 11/8/2020 19:12:07'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'IO 11/8/2020 19:12:07'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'IO 11/8/2020 19:12:07'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'IO 11/8/2020 19:12:07'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'IO 11/8/2020 19:12:07'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'IO 11/8/2020 19:12:07'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'IO 11/8/2020 19:12:07'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'IO 11/8/2020 19:12:07'!
PASSED!
!Body methodsFor: 'intiliazing' stamp: 'IO 11/8/2020 19:13:14' prior: 50883096!
initializeWith: aParentPortfolio for: aPortfolio

	"initialize the parents of a portfolio with a given parent portfolio"

	parentPortfolios := OrderedCollection with: aParentPortfolio.
	
	childPortfolio := aPortfolio.! !
!Body methodsFor: 'intiliazing' stamp: 'IO 11/8/2020 19:13:18' prior: 50887138!
initializeWith: aParentPortfolio for: aPortfolio

	"initialize the parents of a portfolio with a given parent portfolio"

	parentPortfolios := OrderedCollection with: aParentPortfolio.
	childPortfolio := aPortfolio.
! !
!Body methodsFor: 'adding' stamp: 'IO 11/8/2020 19:13:38' prior: 50885452 overrides: 50886405!
addAsParent: aPortfolio

	"add a parent portfolio to this parent portfolio"
	
	parentPortfolios add: aPortfolio.
	^self.  ! !
!Body methodsFor: 'validations' stamp: 'IO 11/8/2020 19:14:25' prior: 50886630!
parentPortfoliosDo: aBlock

	"perform an action over all the parent portfolios of this parent portfolio"
	
	parentPortfolios do: [ :aParentPortfolio | aBlock  value: aParentPortfolio ].
! !
!Body methodsFor: 'validations' stamp: 'IO 11/8/2020 19:14:34' prior: 50886966 overrides: 50886446!
validateAccountBeforeAdding: anAccount

	"see superclass"
	
	self parentPortfoliosDo: [ :aParentPortfolio | aParentPortfolio validateAccountBeforeAdding: anAccount].
! !
!Body methodsFor: 'validations' stamp: 'IO 11/8/2020 19:14:37' prior: 50886974 overrides: 50886455!
validatePortfoliosBeforeAdding: aPortfolioToAdd

	"see superclass"
	
	self parentPortfoliosDo: [ :aParentPortfolio | aParentPortfolio validatePortfolioBeforeAdding: aPortfolioToAdd].
! !
!Body methodsFor: 'adding' stamp: 'IO 11/8/2020 19:14:51' prior: 50887158 overrides: 50886405!
addAsParent: aPortfolio

	"see superclass"
	
	parentPortfolios add: aPortfolio.
	^self.  ! !
!Root methodsFor: 'adding' stamp: 'IO 11/8/2020 19:17:39' prior: 50885447 overrides: 50886405!
addAsParent: aPortfolio

	"
		see superclass
		implementation details: this parent portfolio has no parent portfolios. when the portfolio of this parent portfolios is
			added as a child of another portfolio, it will have parent portfolios. it is not a root anymore.
	"
	
	^Body newWith: aPortfolio for: childPortfolio.! !
!Root methodsFor: 'adding' stamp: 'IO 11/8/2020 19:17:41' prior: 50887199 overrides: 50886405!
addAsParent: aPortfolio

	"
		see superclass
		implementation details: this parent portfolio has no parent portfolios. when the portfolio of this parent portfolios is
			added as a child of another portfolio, it will have parent portfolios. it is not a root anymore.
	"

	^Body newWith: aPortfolio for: childPortfolio.! !
!Root methodsFor: 'adding' stamp: 'IO 11/8/2020 19:17:43' prior: 50887213 overrides: 50886405!
addAsParent: aPortfolio

	"
		see superclass
		implementation details: this parent portfolio has no parent portfolios. when the portfolio of this parent portfolios is
			added as a child of another portfolio, it will have parent portfolios. it is not a root anymore.
	"

	^Body newWith: aPortfolio for: childPortfolio.
! !
!Root methodsFor: 'initialization' stamp: 'IO 11/8/2020 19:18:41' prior: 50883138!
initialize: aPortfolio

	"initialize the parent portfolios of a given portfolio"

	childPortfolio := aPortfolio.! !
!Root methodsFor: 'initialization' stamp: 'IO 11/8/2020 19:18:42' prior: 50887240!
initialize: aPortfolio

	"initialize the parent portfolios of a given portfolio"

	childPortfolio := aPortfolio.
! !
!Root methodsFor: 'validations' stamp: 'IO 11/8/2020 19:18:55' prior: 50884078 overrides: 50886446!
validateAccountBeforeAdding: anAccount

	"see superclass"

	(childPortfolio includesAccount: anAccount) ifTrue: [^self error: Portfolio errorMessageAccountAlreadyAdded].! !
!Root methodsFor: 'validations' stamp: 'IO 11/8/2020 19:20:23' prior: 50887254 overrides: 50886446!
validateAccountBeforeAdding: anAccount

	"
		see superclass
		implementation details: this method will lookup the account in all the children portfolio's account. if the account
			is found in one of the chidlren, the given account cannot be added to the portfolio
	"

	(childPortfolio includesAccount: anAccount) ifTrue: [^self error: Portfolio errorMessageAccountAlreadyAdded].! !
!Root methodsFor: 'validations' stamp: 'IO 11/8/2020 19:20:29' prior: 50887263 overrides: 50886446!
validateAccountBeforeAdding: anAccount

	"
		see superclass
		implementation details: this method will lookup the account in all the children portfolio's account. if the account
			is found in one of the chidlren, the given account cannot be added to the portfolio
	"

	(childPortfolio includesAccount: anAccount) ifTrue: [^self error: Portfolio errorMessageAccountAlreadyAdded].
! !
!Root methodsFor: 'validations' stamp: 'IO 11/8/2020 19:21:58' prior: 50884740 overrides: 50886455!
validatePortfoliosBeforeAdding: aPortfolioToAdd

	"
		see superclass
		implementation details: this method will search that the portfolio to be added is not in the portfolio's children,
			and will also validate that none of its children portfolios has one of the accounts of the portfolio to be added.
	"

	(childPortfolio = aPortfolioToAdd) ifTrue:[ self error: Portfolio errorMessagePortfolioAlreadyAdded].
	(childPortfolio includesPortfolio: aPortfolioToAdd) ifTrue: [self error: Portfolio errorMessagePortfolioAlreadyAdded].
	aPortfolioToAdd accounts do:[:anAccount | childPortfolio validateAccountBeforeAdding: anAccount] .! !

!testRun: #PortfolioTest #test01AnAccountCanBeAddedToAPortfolio stamp: 'IO 11/8/2020 19:22:02'!
PASSED!

!testRun: #PortfolioTest #test02APortfolioHasNoAccountsInitially stamp: 'IO 11/8/2020 19:22:02'!
PASSED!

!testRun: #PortfolioTest #test03APortfolioDoesNotHaveMoreAccountsThanAdded stamp: 'IO 11/8/2020 19:22:02'!
PASSED!

!testRun: #PortfolioTest #test04MoreThanOneAccountCanBeAddedToAPortfolio stamp: 'IO 11/8/2020 19:22:02'!
PASSED!

!testRun: #PortfolioTest #test05APortfolioDoesNotHavePortfoliosInitialy stamp: 'IO 11/8/2020 19:22:02'!
PASSED!

!testRun: #PortfolioTest #test06AnEmptyPortfolioCanBeAddedToAPortfolio stamp: 'IO 11/8/2020 19:22:02'!
PASSED!

!testRun: #PortfolioTest #test07VariousEmptyPortfoliosCanBeAddedToAPortfolio stamp: 'IO 11/8/2020 19:22:02'!
PASSED!

!testRun: #PortfolioTest #test08PortfoliosCanBeAddedToAPortfolio stamp: 'IO 11/8/2020 19:22:02'!
PASSED!

!testRun: #PortfolioTest #test09APortfolioWithPortfoliosCanBeAddedToAportfolio stamp: 'IO 11/8/2020 19:22:02'!
PASSED!

!testRun: #PortfolioTest #test10CanNotAddAnAccountToAPortfolioWhosePortfolioHasTheAccount stamp: 'IO 11/8/2020 19:22:02'!
PASSED!

!testRun: #PortfolioTest #test11CanNotAddAnAccountToAPortfolioWhoHasAPortfolioWithTheAccount stamp: 'IO 11/8/2020 19:22:02'!
PASSED!

!testRun: #PortfolioTest #test12APortfolioCantHaveRepeatedAccounts stamp: 'IO 11/8/2020 19:22:02'!
PASSED!

!testRun: #PortfolioTest #test13APortfolioCanNotHaveRepeatedPortfolios stamp: 'IO 11/8/2020 19:22:02'!
PASSED!

!testRun: #PortfolioTest #test14APortffolioCantHaveItself stamp: 'IO 11/8/2020 19:22:02'!
PASSED!

!testRun: #PortfolioTest #test15CanNotAddAnAccountToAPortfolioWithAParentThatHasTheAccount stamp: 'IO 11/8/2020 19:22:02'!
PASSED!

!testRun: #PortfolioTest #test16CanNotAddAnAccountToAPortfolioWhoseParentHasTheAccount stamp: 'IO 11/8/2020 19:22:02'!
PASSED!

!testRun: #PortfolioTest #test17CanNotAddAnAccountToAPortfolioWithAPredecesorsThatHasTheAccount stamp: 'IO 11/8/2020 19:22:02'!
PASSED!

!testRun: #PortfolioTest #test18CantAddAPortfolioWhenItIsAParent stamp: 'IO 11/8/2020 19:22:02'!
PASSED!

!testRun: #PortfolioTest #test19CantAddAPortfolioWhenItIsAPredecesor stamp: 'IO 11/8/2020 19:22:02'!
PASSED!

!testRun: #PortfolioTest #test20CantAddAPortfolioWhenAPredecesorAlredyHasIt stamp: 'IO 11/8/2020 19:22:02'!
PASSED!

!testRun: #PortfolioTest #test22APortfolioKnowsItsDirectAccounts stamp: 'IO 11/8/2020 19:22:02'!
PASSED!

!testRun: #PortfolioTest #test22APortfolioKnowsTheAccountsOfHisPortfolios stamp: 'IO 11/8/2020 19:22:02'!
PASSED!

!testRun: #PortfolioTest #test23AnEmptyPortfolioHasABalanceOf0 stamp: 'IO 11/8/2020 19:22:02'!
PASSED!

!testRun: #PortfolioTest #test24APortfolioWithOneAccountHasTheBalanceOfThatAccount stamp: 'IO 11/8/2020 19:22:02'!
PASSED!

!testRun: #PortfolioTest #test25TheBalanceOfAPortfolioWithNoPortfoliosIsTheSumOfHisAccounts stamp: 'IO 11/8/2020 19:22:02'!
PASSED!

!testRun: #PortfolioTest #test26TheBalanceOfAPortfolioIsTheSumOfHisAccountsAndPortfolios stamp: 'IO 11/8/2020 19:22:02'!
PASSED!

!testRun: #PortfolioTest #test27AnEmptyPortfolioHasNoRegisteredTransactions stamp: 'IO 11/8/2020 19:22:02'!
PASSED!

!testRun: #PortfolioTest #test28APortfolioWithOneAccountHasItsRegisteredTransactions stamp: 'IO 11/8/2020 19:22:02'!
PASSED!

!testRun: #PortfolioTest #test29APortfolioWithManyAccountsHasItsAccountsRegisteredTransactions stamp: 'IO 11/8/2020 19:22:02'!
PASSED!

!testRun: #PortfolioTest #test30APortfolioHasItsPortfoliosAndAccountsRegisteredTransactions stamp: 'IO 11/8/2020 19:22:02'!
PASSED!

!testRun: #PortfolioTest #test31AnEmptyPortfolioHasNoTransactions stamp: 'IO 11/8/2020 19:22:02'!
PASSED!

!testRun: #PortfolioTest #test32APortfolioWithOneAccountHasItsTransactions stamp: 'IO 11/8/2020 19:22:02'!
PASSED!

!testRun: #PortfolioTest #test33APortfolioWithManyAccountsHasItsAccountsTransactions stamp: 'IO 11/8/2020 19:22:02'!
PASSED!

!testRun: #PortfolioTest #test34APortfolioHasItsPortfoliosAndAccountsTransaction stamp: 'IO 11/8/2020 19:22:02'!
PASSED!

!testRun: #PortfolioTest #test35CanNotAddAPortfolioWithAccountsAlredyInTheParentsOfTheRevceiver stamp: 'IO 11/8/2020 19:22:02'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'IO 11/8/2020 19:22:02'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'IO 11/8/2020 19:22:02'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'IO 11/8/2020 19:22:02'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'IO 11/8/2020 19:22:02'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'IO 11/8/2020 19:22:02'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'IO 11/8/2020 19:22:02'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'IO 11/8/2020 19:22:02'!
PASSED!
!Root methodsFor: 'validations' stamp: 'IO 11/8/2020 19:22:13' prior: 50887295 overrides: 50886455!
validatePortfoliosBeforeAdding: aPortfolioToAdd

	"
		see superclass
		implementation details: this method will search that the portfolio to be added is not in the portfolio's children,
			and will also validate that none of its children portfolios has one of the accounts of the portfolio to be added.
	"

	(childPortfolio = aPortfolioToAdd) ifTrue:[ self error: Portfolio errorMessagePortfolioAlreadyAdded].
	(childPortfolio includesPortfolio: aPortfolioToAdd) ifTrue: [self error: Portfolio errorMessagePortfolioAlreadyAdded].
	aPortfolioToAdd accounts do:[:anAccount | childPortfolio validateAccountBeforeAdding: anAccount].
! !
!Root methodsFor: 'validations' stamp: 'IO 11/8/2020 19:22:16' prior: 50887475 overrides: 50886455!
validatePortfoliosBeforeAdding: aPortfolioToAdd

	"
		see superclass
		implementation details: this method will search that the portfolio to be added is not in the portfolio's children,
			and will also validate that none of its children portfolios has one of the accounts of the portfolio to be added.
	"

	(childPortfolio = aPortfolioToAdd) ifTrue: [self error: Portfolio errorMessagePortfolioAlreadyAdded].
	(childPortfolio includesPortfolio: aPortfolioToAdd) ifTrue: [self error: Portfolio errorMessagePortfolioAlreadyAdded].
	aPortfolioToAdd accounts do:[:anAccount | childPortfolio validateAccountBeforeAdding: anAccount].
! !
!Root methodsFor: 'validations' stamp: 'IO 11/8/2020 19:22:23' prior: 50887498 overrides: 50886455!
validatePortfoliosBeforeAdding: aPortfolioToAdd

	"
		see superclass
		implementation details: this method will search that the portfolio to be added is not in the portfolio's children,
			and will also validate that none of its children portfolios has one of the accounts of the portfolio to be added.
	"

	(childPortfolio = aPortfolioToAdd) ifTrue: [self error: Portfolio errorMessagePortfolioAlreadyAdded].
	(childPortfolio includesPortfolio: aPortfolioToAdd) ifTrue: [self error: Portfolio errorMessagePortfolioAlreadyAdded].
	aPortfolioToAdd accounts do: [:anAccount | childPortfolio validateAccountBeforeAdding: anAccount].
! !
!Root methodsFor: 'validations' stamp: 'IO 11/8/2020 19:22:39' prior: 50887521 overrides: 50886455!
validatePortfoliosBeforeAdding: aPortfolioToAdd

	"
		see superclass
		implementation details: this method will search that the portfolio to be added is not in the portfolio's children,
			and will also validate that none of its children portfolios has one of the accounts of the portfolio to be added.
	"

	(childPortfolio = aPortfolioToAdd) ifTrue: [self error: Portfolio errorMessagePortfolioAlreadyAdded].
	(childPortfolio includesPortfolio: aPortfolioToAdd) ifTrue: [self error: Portfolio errorMessagePortfolioAlreadyAdded].
	aPortfolioToAdd accounts do: [ :anAccount | childPortfolio validateAccountBeforeAdding: anAccount].
! !
!Portfolio methodsFor: 'private' stamp: 'IO 11/8/2020 19:23:10'!
accountsDo: aBlock

	accounts do: [ :account | aBlock value: account.].
! !
!Portfolio methodsFor: 'iterating' stamp: 'IO 11/8/2020 19:24:20' prior: 50887566!
accountsDo: aBlock

	"perform a block over all the accounts"

	accounts do: [ :account | aBlock value: account.].
! !
!Portfolio methodsFor: 'iterating' stamp: 'IO 11/8/2020 19:24:30' prior: 50886269!
portfoliosDo: aBlock

	"perform a block over all the portfolios of this portfolio"

	portfolios do: [ :portfolio | aBlock value: portfolio ].
! !
!Portfolio methodsFor: 'iterating' stamp: 'IO 11/8/2020 19:25:12' prior: 50887578!
portfoliosDo: aBlock

	"perform a block over the child portfolios of this portfolio (not all the subportfolios)"

	portfolios do: [ :portfolio | aBlock value: portfolio ].
! !
!Portfolio methodsFor: 'iterating' stamp: 'IO 11/8/2020 19:25:34' prior: 50887571!
accountsDo: aBlock

	"perform a block over the accounts of this portfolio (not all the subportfolios)"

	accounts do: [ :account | aBlock value: account.].
! !
!Portfolio methodsFor: 'iterating' stamp: 'IO 11/8/2020 19:25:44' prior: 50885991!
accountsAndPortfoliosDo: aBlock

	"perform a block over the child portfolios and accounts of this portfolio (not all the subportfolios)"

	accounts do: [ :account | aBlock value: account.].
	self portfoliosDo: [ :portfolio | aBlock value: portfolio.].
! !
!Root methodsFor: 'validations' stamp: 'IO 11/8/2020 19:25:59' prior: 50887544 overrides: 50886455!
validatePortfoliosBeforeAdding: aPortfolioToAdd

	"
		see superclass
		implementation details: this method will search that the portfolio to be added is not in the portfolio's children,
			and will also validate that none of its children portfolios has one of the accounts of the portfolio to be added.
	"

	(childPortfolio = aPortfolioToAdd) ifTrue: [self error: Portfolio errorMessagePortfolioAlreadyAdded].
	(childPortfolio includesPortfolio: aPortfolioToAdd) ifTrue: [self error: Portfolio errorMessagePortfolioAlreadyAdded].
	aPortfolioToAdd accountsDo: [ :anAccount | childPortfolio validateAccountBeforeAdding: anAccount].
! !

!testRun: #PortfolioTest #test01AnAccountCanBeAddedToAPortfolio stamp: 'IO 11/8/2020 19:26:03'!
PASSED!

!testRun: #PortfolioTest #test02APortfolioHasNoAccountsInitially stamp: 'IO 11/8/2020 19:26:03'!
PASSED!

!testRun: #PortfolioTest #test03APortfolioDoesNotHaveMoreAccountsThanAdded stamp: 'IO 11/8/2020 19:26:03'!
PASSED!

!testRun: #PortfolioTest #test04MoreThanOneAccountCanBeAddedToAPortfolio stamp: 'IO 11/8/2020 19:26:03'!
PASSED!

!testRun: #PortfolioTest #test05APortfolioDoesNotHavePortfoliosInitialy stamp: 'IO 11/8/2020 19:26:03'!
PASSED!

!testRun: #PortfolioTest #test06AnEmptyPortfolioCanBeAddedToAPortfolio stamp: 'IO 11/8/2020 19:26:03'!
PASSED!

!testRun: #PortfolioTest #test07VariousEmptyPortfoliosCanBeAddedToAPortfolio stamp: 'IO 11/8/2020 19:26:03'!
PASSED!

!testRun: #PortfolioTest #test08PortfoliosCanBeAddedToAPortfolio stamp: 'IO 11/8/2020 19:26:03'!
PASSED!

!testRun: #PortfolioTest #test09APortfolioWithPortfoliosCanBeAddedToAportfolio stamp: 'IO 11/8/2020 19:26:03'!
PASSED!

!testRun: #PortfolioTest #test10CanNotAddAnAccountToAPortfolioWhosePortfolioHasTheAccount stamp: 'IO 11/8/2020 19:26:03'!
PASSED!

!testRun: #PortfolioTest #test11CanNotAddAnAccountToAPortfolioWhoHasAPortfolioWithTheAccount stamp: 'IO 11/8/2020 19:26:03'!
PASSED!

!testRun: #PortfolioTest #test12APortfolioCantHaveRepeatedAccounts stamp: 'IO 11/8/2020 19:26:03'!
PASSED!

!testRun: #PortfolioTest #test13APortfolioCanNotHaveRepeatedPortfolios stamp: 'IO 11/8/2020 19:26:03'!
PASSED!

!testRun: #PortfolioTest #test14APortffolioCantHaveItself stamp: 'IO 11/8/2020 19:26:03'!
PASSED!

!testRun: #PortfolioTest #test15CanNotAddAnAccountToAPortfolioWithAParentThatHasTheAccount stamp: 'IO 11/8/2020 19:26:03'!
PASSED!

!testRun: #PortfolioTest #test16CanNotAddAnAccountToAPortfolioWhoseParentHasTheAccount stamp: 'IO 11/8/2020 19:26:03'!
PASSED!

!testRun: #PortfolioTest #test17CanNotAddAnAccountToAPortfolioWithAPredecesorsThatHasTheAccount stamp: 'IO 11/8/2020 19:26:03'!
PASSED!

!testRun: #PortfolioTest #test18CantAddAPortfolioWhenItIsAParent stamp: 'IO 11/8/2020 19:26:03'!
PASSED!

!testRun: #PortfolioTest #test19CantAddAPortfolioWhenItIsAPredecesor stamp: 'IO 11/8/2020 19:26:03'!
PASSED!

!testRun: #PortfolioTest #test20CantAddAPortfolioWhenAPredecesorAlredyHasIt stamp: 'IO 11/8/2020 19:26:03'!
PASSED!

!testRun: #PortfolioTest #test22APortfolioKnowsItsDirectAccounts stamp: 'IO 11/8/2020 19:26:03'!
PASSED!

!testRun: #PortfolioTest #test22APortfolioKnowsTheAccountsOfHisPortfolios stamp: 'IO 11/8/2020 19:26:03'!
PASSED!

!testRun: #PortfolioTest #test23AnEmptyPortfolioHasABalanceOf0 stamp: 'IO 11/8/2020 19:26:03'!
PASSED!

!testRun: #PortfolioTest #test24APortfolioWithOneAccountHasTheBalanceOfThatAccount stamp: 'IO 11/8/2020 19:26:03'!
PASSED!

!testRun: #PortfolioTest #test25TheBalanceOfAPortfolioWithNoPortfoliosIsTheSumOfHisAccounts stamp: 'IO 11/8/2020 19:26:03'!
PASSED!

!testRun: #PortfolioTest #test26TheBalanceOfAPortfolioIsTheSumOfHisAccountsAndPortfolios stamp: 'IO 11/8/2020 19:26:03'!
PASSED!

!testRun: #PortfolioTest #test27AnEmptyPortfolioHasNoRegisteredTransactions stamp: 'IO 11/8/2020 19:26:03'!
PASSED!

!testRun: #PortfolioTest #test28APortfolioWithOneAccountHasItsRegisteredTransactions stamp: 'IO 11/8/2020 19:26:03'!
PASSED!

!testRun: #PortfolioTest #test29APortfolioWithManyAccountsHasItsAccountsRegisteredTransactions stamp: 'IO 11/8/2020 19:26:03'!
PASSED!

!testRun: #PortfolioTest #test30APortfolioHasItsPortfoliosAndAccountsRegisteredTransactions stamp: 'IO 11/8/2020 19:26:03'!
PASSED!

!testRun: #PortfolioTest #test31AnEmptyPortfolioHasNoTransactions stamp: 'IO 11/8/2020 19:26:03'!
PASSED!

!testRun: #PortfolioTest #test32APortfolioWithOneAccountHasItsTransactions stamp: 'IO 11/8/2020 19:26:03'!
PASSED!

!testRun: #PortfolioTest #test33APortfolioWithManyAccountsHasItsAccountsTransactions stamp: 'IO 11/8/2020 19:26:03'!
PASSED!

!testRun: #PortfolioTest #test34APortfolioHasItsPortfoliosAndAccountsTransaction stamp: 'IO 11/8/2020 19:26:03'!
PASSED!

!testRun: #PortfolioTest #test35CanNotAddAPortfolioWithAccountsAlredyInTheParentsOfTheRevceiver stamp: 'IO 11/8/2020 19:26:03'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'IO 11/8/2020 19:26:03'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'IO 11/8/2020 19:26:03'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'IO 11/8/2020 19:26:03'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'IO 11/8/2020 19:26:03'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'IO 11/8/2020 19:26:03'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'IO 11/8/2020 19:26:03'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'IO 11/8/2020 19:26:03'!
PASSED!
!Root methodsFor: 'validations' stamp: 'IO 11/8/2020 19:26:31' prior: 50887615 overrides: 50886455!
validatePortfoliosBeforeAdding: aPortfolioToAdd

	"
		see superclass
		implementation details: this method will search that the portfolio to be added is not in the portfolio's children,
			and will also validate that none of its children portfolios has one of the accounts of the portfolio to be added.
	"

	(childPortfolio = aPortfolioToAdd) ifTrue: [self error: Portfolio errorMessagePortfolioAlreadyAdded].
	(childPortfolio includesPortfolio: aPortfolioToAdd) ifTrue: [self error: Portfolio errorMessagePortfolioAlreadyAdded].
	aPortfolioToAdd accounts do: [ :anAccount | childPortfolio validateAccountBeforeAdding: anAccount].
! !

!testRun: #PortfolioTest #test01AnAccountCanBeAddedToAPortfolio stamp: 'IO 11/8/2020 19:26:34'!
PASSED!

!testRun: #PortfolioTest #test02APortfolioHasNoAccountsInitially stamp: 'IO 11/8/2020 19:26:34'!
PASSED!

!testRun: #PortfolioTest #test03APortfolioDoesNotHaveMoreAccountsThanAdded stamp: 'IO 11/8/2020 19:26:34'!
PASSED!

!testRun: #PortfolioTest #test04MoreThanOneAccountCanBeAddedToAPortfolio stamp: 'IO 11/8/2020 19:26:34'!
PASSED!

!testRun: #PortfolioTest #test05APortfolioDoesNotHavePortfoliosInitialy stamp: 'IO 11/8/2020 19:26:34'!
PASSED!

!testRun: #PortfolioTest #test06AnEmptyPortfolioCanBeAddedToAPortfolio stamp: 'IO 11/8/2020 19:26:34'!
PASSED!

!testRun: #PortfolioTest #test07VariousEmptyPortfoliosCanBeAddedToAPortfolio stamp: 'IO 11/8/2020 19:26:34'!
PASSED!

!testRun: #PortfolioTest #test08PortfoliosCanBeAddedToAPortfolio stamp: 'IO 11/8/2020 19:26:34'!
PASSED!

!testRun: #PortfolioTest #test09APortfolioWithPortfoliosCanBeAddedToAportfolio stamp: 'IO 11/8/2020 19:26:34'!
PASSED!

!testRun: #PortfolioTest #test10CanNotAddAnAccountToAPortfolioWhosePortfolioHasTheAccount stamp: 'IO 11/8/2020 19:26:34'!
PASSED!

!testRun: #PortfolioTest #test11CanNotAddAnAccountToAPortfolioWhoHasAPortfolioWithTheAccount stamp: 'IO 11/8/2020 19:26:34'!
PASSED!

!testRun: #PortfolioTest #test12APortfolioCantHaveRepeatedAccounts stamp: 'IO 11/8/2020 19:26:34'!
PASSED!

!testRun: #PortfolioTest #test13APortfolioCanNotHaveRepeatedPortfolios stamp: 'IO 11/8/2020 19:26:34'!
PASSED!

!testRun: #PortfolioTest #test14APortffolioCantHaveItself stamp: 'IO 11/8/2020 19:26:34'!
PASSED!

!testRun: #PortfolioTest #test15CanNotAddAnAccountToAPortfolioWithAParentThatHasTheAccount stamp: 'IO 11/8/2020 19:26:34'!
PASSED!

!testRun: #PortfolioTest #test16CanNotAddAnAccountToAPortfolioWhoseParentHasTheAccount stamp: 'IO 11/8/2020 19:26:34'!
PASSED!

!testRun: #PortfolioTest #test17CanNotAddAnAccountToAPortfolioWithAPredecesorsThatHasTheAccount stamp: 'IO 11/8/2020 19:26:34'!
PASSED!

!testRun: #PortfolioTest #test18CantAddAPortfolioWhenItIsAParent stamp: 'IO 11/8/2020 19:26:34'!
PASSED!

!testRun: #PortfolioTest #test19CantAddAPortfolioWhenItIsAPredecesor stamp: 'IO 11/8/2020 19:26:34'!
PASSED!

!testRun: #PortfolioTest #test20CantAddAPortfolioWhenAPredecesorAlredyHasIt stamp: 'IO 11/8/2020 19:26:34'!
PASSED!

!testRun: #PortfolioTest #test22APortfolioKnowsItsDirectAccounts stamp: 'IO 11/8/2020 19:26:34'!
PASSED!

!testRun: #PortfolioTest #test22APortfolioKnowsTheAccountsOfHisPortfolios stamp: 'IO 11/8/2020 19:26:35'!
PASSED!

!testRun: #PortfolioTest #test23AnEmptyPortfolioHasABalanceOf0 stamp: 'IO 11/8/2020 19:26:35'!
PASSED!

!testRun: #PortfolioTest #test24APortfolioWithOneAccountHasTheBalanceOfThatAccount stamp: 'IO 11/8/2020 19:26:35'!
PASSED!

!testRun: #PortfolioTest #test25TheBalanceOfAPortfolioWithNoPortfoliosIsTheSumOfHisAccounts stamp: 'IO 11/8/2020 19:26:35'!
PASSED!

!testRun: #PortfolioTest #test26TheBalanceOfAPortfolioIsTheSumOfHisAccountsAndPortfolios stamp: 'IO 11/8/2020 19:26:35'!
PASSED!

!testRun: #PortfolioTest #test27AnEmptyPortfolioHasNoRegisteredTransactions stamp: 'IO 11/8/2020 19:26:35'!
PASSED!

!testRun: #PortfolioTest #test28APortfolioWithOneAccountHasItsRegisteredTransactions stamp: 'IO 11/8/2020 19:26:35'!
PASSED!

!testRun: #PortfolioTest #test29APortfolioWithManyAccountsHasItsAccountsRegisteredTransactions stamp: 'IO 11/8/2020 19:26:35'!
PASSED!

!testRun: #PortfolioTest #test30APortfolioHasItsPortfoliosAndAccountsRegisteredTransactions stamp: 'IO 11/8/2020 19:26:35'!
PASSED!

!testRun: #PortfolioTest #test31AnEmptyPortfolioHasNoTransactions stamp: 'IO 11/8/2020 19:26:35'!
PASSED!

!testRun: #PortfolioTest #test32APortfolioWithOneAccountHasItsTransactions stamp: 'IO 11/8/2020 19:26:35'!
PASSED!

!testRun: #PortfolioTest #test33APortfolioWithManyAccountsHasItsAccountsTransactions stamp: 'IO 11/8/2020 19:26:35'!
PASSED!

!testRun: #PortfolioTest #test34APortfolioHasItsPortfoliosAndAccountsTransaction stamp: 'IO 11/8/2020 19:26:35'!
PASSED!

!testRun: #PortfolioTest #test35CanNotAddAPortfolioWithAccountsAlredyInTheParentsOfTheRevceiver stamp: 'IO 11/8/2020 19:26:35'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'IO 11/8/2020 19:26:35'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'IO 11/8/2020 19:26:35'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'IO 11/8/2020 19:26:35'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'IO 11/8/2020 19:26:35'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'IO 11/8/2020 19:26:35'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'IO 11/8/2020 19:26:35'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'IO 11/8/2020 19:26:35'!
PASSED!
!Root methodsFor: 'validations' stamp: 'IO 11/8/2020 19:26:47' prior: 50887795 overrides: 50886455!
validatePortfoliosBeforeAdding: aPortfolioToAdd

	"
		see superclass
		implementation details: this method will search that the portfolio to be added is not in the portfolio's children,
			and will also validate that none of its children portfolios has one of the accounts of the portfolio to be added.
	"

	(childPortfolio = aPortfolioToAdd) ifTrue: [self error: Portfolio errorMessagePortfolioAlreadyAdded].
	(childPortfolio includesPortfolio: aPortfolioToAdd) ifTrue: [self error: Portfolio errorMessagePortfolioAlreadyAdded].
	aPortfolioToAdd accountsDo: [ :anAccount | childPortfolio validateAccountBeforeAdding: anAccount].
! !

!testRun: #PortfolioTest #test01AnAccountCanBeAddedToAPortfolio stamp: 'IO 11/8/2020 19:26:50'!
PASSED!

!testRun: #PortfolioTest #test02APortfolioHasNoAccountsInitially stamp: 'IO 11/8/2020 19:26:50'!
PASSED!

!testRun: #PortfolioTest #test03APortfolioDoesNotHaveMoreAccountsThanAdded stamp: 'IO 11/8/2020 19:26:50'!
PASSED!

!testRun: #PortfolioTest #test04MoreThanOneAccountCanBeAddedToAPortfolio stamp: 'IO 11/8/2020 19:26:50'!
PASSED!

!testRun: #PortfolioTest #test05APortfolioDoesNotHavePortfoliosInitialy stamp: 'IO 11/8/2020 19:26:50'!
PASSED!

!testRun: #PortfolioTest #test06AnEmptyPortfolioCanBeAddedToAPortfolio stamp: 'IO 11/8/2020 19:26:50'!
PASSED!

!testRun: #PortfolioTest #test07VariousEmptyPortfoliosCanBeAddedToAPortfolio stamp: 'IO 11/8/2020 19:26:50'!
PASSED!

!testRun: #PortfolioTest #test08PortfoliosCanBeAddedToAPortfolio stamp: 'IO 11/8/2020 19:26:50'!
PASSED!

!testRun: #PortfolioTest #test09APortfolioWithPortfoliosCanBeAddedToAportfolio stamp: 'IO 11/8/2020 19:26:50'!
PASSED!

!testRun: #PortfolioTest #test10CanNotAddAnAccountToAPortfolioWhosePortfolioHasTheAccount stamp: 'IO 11/8/2020 19:26:50'!
PASSED!

!testRun: #PortfolioTest #test11CanNotAddAnAccountToAPortfolioWhoHasAPortfolioWithTheAccount stamp: 'IO 11/8/2020 19:26:50'!
PASSED!

!testRun: #PortfolioTest #test12APortfolioCantHaveRepeatedAccounts stamp: 'IO 11/8/2020 19:26:50'!
PASSED!

!testRun: #PortfolioTest #test13APortfolioCanNotHaveRepeatedPortfolios stamp: 'IO 11/8/2020 19:26:50'!
PASSED!

!testRun: #PortfolioTest #test14APortffolioCantHaveItself stamp: 'IO 11/8/2020 19:26:50'!
PASSED!

!testRun: #PortfolioTest #test15CanNotAddAnAccountToAPortfolioWithAParentThatHasTheAccount stamp: 'IO 11/8/2020 19:26:50'!
PASSED!

!testRun: #PortfolioTest #test16CanNotAddAnAccountToAPortfolioWhoseParentHasTheAccount stamp: 'IO 11/8/2020 19:26:50'!
PASSED!

!testRun: #PortfolioTest #test17CanNotAddAnAccountToAPortfolioWithAPredecesorsThatHasTheAccount stamp: 'IO 11/8/2020 19:26:50'!
PASSED!

!testRun: #PortfolioTest #test18CantAddAPortfolioWhenItIsAParent stamp: 'IO 11/8/2020 19:26:50'!
PASSED!

!testRun: #PortfolioTest #test19CantAddAPortfolioWhenItIsAPredecesor stamp: 'IO 11/8/2020 19:26:50'!
PASSED!

!testRun: #PortfolioTest #test20CantAddAPortfolioWhenAPredecesorAlredyHasIt stamp: 'IO 11/8/2020 19:26:50'!
PASSED!

!testRun: #PortfolioTest #test22APortfolioKnowsItsDirectAccounts stamp: 'IO 11/8/2020 19:26:50'!
PASSED!

!testRun: #PortfolioTest #test22APortfolioKnowsTheAccountsOfHisPortfolios stamp: 'IO 11/8/2020 19:26:50'!
PASSED!

!testRun: #PortfolioTest #test23AnEmptyPortfolioHasABalanceOf0 stamp: 'IO 11/8/2020 19:26:50'!
PASSED!

!testRun: #PortfolioTest #test24APortfolioWithOneAccountHasTheBalanceOfThatAccount stamp: 'IO 11/8/2020 19:26:50'!
PASSED!

!testRun: #PortfolioTest #test25TheBalanceOfAPortfolioWithNoPortfoliosIsTheSumOfHisAccounts stamp: 'IO 11/8/2020 19:26:50'!
PASSED!

!testRun: #PortfolioTest #test26TheBalanceOfAPortfolioIsTheSumOfHisAccountsAndPortfolios stamp: 'IO 11/8/2020 19:26:50'!
PASSED!

!testRun: #PortfolioTest #test27AnEmptyPortfolioHasNoRegisteredTransactions stamp: 'IO 11/8/2020 19:26:50'!
PASSED!

!testRun: #PortfolioTest #test28APortfolioWithOneAccountHasItsRegisteredTransactions stamp: 'IO 11/8/2020 19:26:50'!
PASSED!

!testRun: #PortfolioTest #test29APortfolioWithManyAccountsHasItsAccountsRegisteredTransactions stamp: 'IO 11/8/2020 19:26:50'!
PASSED!

!testRun: #PortfolioTest #test30APortfolioHasItsPortfoliosAndAccountsRegisteredTransactions stamp: 'IO 11/8/2020 19:26:50'!
PASSED!

!testRun: #PortfolioTest #test31AnEmptyPortfolioHasNoTransactions stamp: 'IO 11/8/2020 19:26:50'!
PASSED!

!testRun: #PortfolioTest #test32APortfolioWithOneAccountHasItsTransactions stamp: 'IO 11/8/2020 19:26:50'!
PASSED!

!testRun: #PortfolioTest #test33APortfolioWithManyAccountsHasItsAccountsTransactions stamp: 'IO 11/8/2020 19:26:50'!
PASSED!

!testRun: #PortfolioTest #test34APortfolioHasItsPortfoliosAndAccountsTransaction stamp: 'IO 11/8/2020 19:26:50'!
PASSED!

!testRun: #PortfolioTest #test35CanNotAddAPortfolioWithAccountsAlredyInTheParentsOfTheRevceiver stamp: 'IO 11/8/2020 19:26:50'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'IO 11/8/2020 19:26:50'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'IO 11/8/2020 19:26:50'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'IO 11/8/2020 19:26:50'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'IO 11/8/2020 19:26:50'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'IO 11/8/2020 19:26:50'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'IO 11/8/2020 19:26:50'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'IO 11/8/2020 19:26:50'!
PASSED!
!PortfolioTest methodsFor: 'errors adding portfolios by parents' stamp: 'IO 11/8/2020 19:35:05' prior: 50882475!
test35CanNotAddAPortfolioWithAccountsAlredyInTheParentsOfTheRevceiver
	
	"
		no se pueden agregar un portfolio cuando tiene cuentas repetidas en los padres del receptor 
		p1 ->	p2 -> p4 -x p5 -> a3,a2,a1|
		     -> a1| -> a2|
			 p3 -> p3|
			      -> a3|
	"
	
	| portfolio1 portfolio2 portfolio3 portfolio4 portfolio5 account1 account2 account3 |
	
	portfolio1 := Portfolio new.
	portfolio2 := Portfolio new.
	portfolio3 := Portfolio new.
	portfolio4 := Portfolio new.
	portfolio5 := Portfolio new.
	
	account1 := ReceptiveAccount new.
	account2 := ReceptiveAccount new.
	account3 := ReceptiveAccount new.	
	
	"
		p1 [a1] -> p2 [a1] -> p4
		p5 -> [a1]
	"

	portfolio1 addPortfolio: portfolio2.
	portfolio2 addPortfolio: portfolio4.
	portfolio3 addPortfolio: portfolio4.
	portfolio1 addAccount: account1.
	portfolio2 addAccount: account2.
	portfolio3 addAccount: account3.
	portfolio5 addAccount: account1.
	portfolio5 addAccount: account2.
	portfolio5 addAccount: account3.

	self should: [	portfolio4 addPortfolio: portfolio5.] raise: Error withMessageText: Portfolio errorMessageAccountAlreadyAdded.
! !

!testRun: #PortfolioTest #test35CanNotAddAPortfolioWithAccountsAlredyInTheParentsOfTheRevceiver stamp: 'IO 11/8/2020 19:35:06'!
PASSED!

!testRun: #PortfolioTest #test01AnAccountCanBeAddedToAPortfolio stamp: 'IO 11/8/2020 19:35:06'!
PASSED!

!testRun: #PortfolioTest #test02APortfolioHasNoAccountsInitially stamp: 'IO 11/8/2020 19:35:06'!
PASSED!

!testRun: #PortfolioTest #test03APortfolioDoesNotHaveMoreAccountsThanAdded stamp: 'IO 11/8/2020 19:35:06'!
PASSED!

!testRun: #PortfolioTest #test04MoreThanOneAccountCanBeAddedToAPortfolio stamp: 'IO 11/8/2020 19:35:06'!
PASSED!

!testRun: #PortfolioTest #test05APortfolioDoesNotHavePortfoliosInitialy stamp: 'IO 11/8/2020 19:35:06'!
PASSED!

!testRun: #PortfolioTest #test06AnEmptyPortfolioCanBeAddedToAPortfolio stamp: 'IO 11/8/2020 19:35:06'!
PASSED!

!testRun: #PortfolioTest #test07VariousEmptyPortfoliosCanBeAddedToAPortfolio stamp: 'IO 11/8/2020 19:35:06'!
PASSED!

!testRun: #PortfolioTest #test08PortfoliosCanBeAddedToAPortfolio stamp: 'IO 11/8/2020 19:35:06'!
PASSED!

!testRun: #PortfolioTest #test09APortfolioWithPortfoliosCanBeAddedToAportfolio stamp: 'IO 11/8/2020 19:35:06'!
PASSED!

!testRun: #PortfolioTest #test10CanNotAddAnAccountToAPortfolioWhosePortfolioHasTheAccount stamp: 'IO 11/8/2020 19:35:06'!
PASSED!

!testRun: #PortfolioTest #test11CanNotAddAnAccountToAPortfolioWhoHasAPortfolioWithTheAccount stamp: 'IO 11/8/2020 19:35:06'!
PASSED!

!testRun: #PortfolioTest #test12APortfolioCantHaveRepeatedAccounts stamp: 'IO 11/8/2020 19:35:06'!
PASSED!

!testRun: #PortfolioTest #test13APortfolioCanNotHaveRepeatedPortfolios stamp: 'IO 11/8/2020 19:35:06'!
PASSED!

!testRun: #PortfolioTest #test14APortffolioCantHaveItself stamp: 'IO 11/8/2020 19:35:06'!
PASSED!

!testRun: #PortfolioTest #test15CanNotAddAnAccountToAPortfolioWithAParentThatHasTheAccount stamp: 'IO 11/8/2020 19:35:06'!
PASSED!

!testRun: #PortfolioTest #test16CanNotAddAnAccountToAPortfolioWhoseParentHasTheAccount stamp: 'IO 11/8/2020 19:35:06'!
PASSED!

!testRun: #PortfolioTest #test17CanNotAddAnAccountToAPortfolioWithAPredecesorsThatHasTheAccount stamp: 'IO 11/8/2020 19:35:06'!
PASSED!

!testRun: #PortfolioTest #test18CantAddAPortfolioWhenItIsAParent stamp: 'IO 11/8/2020 19:35:06'!
PASSED!

!testRun: #PortfolioTest #test19CantAddAPortfolioWhenItIsAPredecesor stamp: 'IO 11/8/2020 19:35:06'!
PASSED!

!testRun: #PortfolioTest #test20CantAddAPortfolioWhenAPredecesorAlredyHasIt stamp: 'IO 11/8/2020 19:35:06'!
PASSED!

!testRun: #PortfolioTest #test22APortfolioKnowsItsDirectAccounts stamp: 'IO 11/8/2020 19:35:06'!
PASSED!

!testRun: #PortfolioTest #test22APortfolioKnowsTheAccountsOfHisPortfolios stamp: 'IO 11/8/2020 19:35:06'!
PASSED!

!testRun: #PortfolioTest #test23AnEmptyPortfolioHasABalanceOf0 stamp: 'IO 11/8/2020 19:35:06'!
PASSED!

!testRun: #PortfolioTest #test24APortfolioWithOneAccountHasTheBalanceOfThatAccount stamp: 'IO 11/8/2020 19:35:06'!
PASSED!

!testRun: #PortfolioTest #test25TheBalanceOfAPortfolioWithNoPortfoliosIsTheSumOfHisAccounts stamp: 'IO 11/8/2020 19:35:06'!
PASSED!

!testRun: #PortfolioTest #test26TheBalanceOfAPortfolioIsTheSumOfHisAccountsAndPortfolios stamp: 'IO 11/8/2020 19:35:06'!
PASSED!

!testRun: #PortfolioTest #test27AnEmptyPortfolioHasNoRegisteredTransactions stamp: 'IO 11/8/2020 19:35:06'!
PASSED!

!testRun: #PortfolioTest #test28APortfolioWithOneAccountHasItsRegisteredTransactions stamp: 'IO 11/8/2020 19:35:06'!
PASSED!

!testRun: #PortfolioTest #test29APortfolioWithManyAccountsHasItsAccountsRegisteredTransactions stamp: 'IO 11/8/2020 19:35:06'!
PASSED!

!testRun: #PortfolioTest #test30APortfolioHasItsPortfoliosAndAccountsRegisteredTransactions stamp: 'IO 11/8/2020 19:35:06'!
PASSED!

!testRun: #PortfolioTest #test31AnEmptyPortfolioHasNoTransactions stamp: 'IO 11/8/2020 19:35:06'!
PASSED!

!testRun: #PortfolioTest #test32APortfolioWithOneAccountHasItsTransactions stamp: 'IO 11/8/2020 19:35:06'!
PASSED!

!testRun: #PortfolioTest #test33APortfolioWithManyAccountsHasItsAccountsTransactions stamp: 'IO 11/8/2020 19:35:06'!
PASSED!

!testRun: #PortfolioTest #test34APortfolioHasItsPortfoliosAndAccountsTransaction stamp: 'IO 11/8/2020 19:35:06'!
PASSED!

!testRun: #PortfolioTest #test35CanNotAddAPortfolioWithAccountsAlredyInTheParentsOfTheRevceiver stamp: 'IO 11/8/2020 19:35:06'!
PASSED!
!PortfolioTest methodsFor: 'errors adding portfolios by parents' stamp: 'IO 11/8/2020 19:40:49' prior: 50888155!
test35CanNotAddAPortfolioWithAccountsAlredyInTheParentsOfTheRevceiver
	
	"
		no se pueden agregar un portfolio cuando tiene cuentas repetidas en los padres del receptor 
		p1 ->	p2 -> p4 -x p5 -> a3,a2,a1|
		     -> a1| -> a2|
			 p3 -> p3|
			      -> a3|
	"
	
	| portfolio1 portfolio2 portfolio3 portfolio4 portfolio5 portfolio6 account1 account2 account3 |
	
	portfolio1 := Portfolio new.
	portfolio2 := Portfolio new.
	portfolio3 := Portfolio new.
	portfolio4 := Portfolio new.
	portfolio5 := Portfolio new.
	portfolio6 := Portfolio new.
	
	account1 := ReceptiveAccount new.
	account2 := ReceptiveAccount new.
	account3 := ReceptiveAccount new.	
	
	"
		p1 [a1] -> p2 [a1] -> p4
		p5 -> [a1]
	"

	portfolio1 addPortfolio: portfolio2.
	portfolio2 addPortfolio: portfolio4.
	portfolio3 addPortfolio: portfolio4.
	portfolio6 addPortfolio: portfolio5.
	portfolio1 addAccount: account1.
	portfolio2 addAccount: account2.
	portfolio3 addAccount: account3.
	portfolio5 addAccount: account1.
	portfolio5 addAccount: account2.
	portfolio5 addAccount: account3.

	self should: [	portfolio4 addPortfolio: portfolio6.] raise: Error withMessageText: Portfolio errorMessageAccountAlreadyAdded.
! !

!testRun: #PortfolioTest #test35CanNotAddAPortfolioWithAccountsAlredyInTheParentsOfTheRevceiver stamp: 'IO 11/8/2020 19:40:50'!
FAILURE!
!Root methodsFor: 'validations' stamp: 'IO 11/8/2020 19:41:00' prior: 50887975 overrides: 50886455!
validatePortfoliosBeforeAdding: aPortfolioToAdd

	"
		see superclass
		implementation details: this method will search that the portfolio to be added is not in the portfolio's children,
			and will also validate that none of its children portfolios has one of the accounts of the portfolio to be added.
	"

	(childPortfolio = aPortfolioToAdd) ifTrue: [self error: Portfolio errorMessagePortfolioAlreadyAdded].
	(childPortfolio includesPortfolio: aPortfolioToAdd) ifTrue: [self error: Portfolio errorMessagePortfolioAlreadyAdded].
	aPortfolioToAdd accounts do: [ :anAccount | childPortfolio validateAccountBeforeAdding: anAccount].
! !

!testRun: #PortfolioTest #test01AnAccountCanBeAddedToAPortfolio stamp: 'IO 11/8/2020 19:41:06'!
PASSED!

!testRun: #PortfolioTest #test02APortfolioHasNoAccountsInitially stamp: 'IO 11/8/2020 19:41:06'!
PASSED!

!testRun: #PortfolioTest #test03APortfolioDoesNotHaveMoreAccountsThanAdded stamp: 'IO 11/8/2020 19:41:06'!
PASSED!

!testRun: #PortfolioTest #test04MoreThanOneAccountCanBeAddedToAPortfolio stamp: 'IO 11/8/2020 19:41:06'!
PASSED!

!testRun: #PortfolioTest #test05APortfolioDoesNotHavePortfoliosInitialy stamp: 'IO 11/8/2020 19:41:06'!
PASSED!

!testRun: #PortfolioTest #test06AnEmptyPortfolioCanBeAddedToAPortfolio stamp: 'IO 11/8/2020 19:41:06'!
PASSED!

!testRun: #PortfolioTest #test07VariousEmptyPortfoliosCanBeAddedToAPortfolio stamp: 'IO 11/8/2020 19:41:06'!
PASSED!

!testRun: #PortfolioTest #test08PortfoliosCanBeAddedToAPortfolio stamp: 'IO 11/8/2020 19:41:06'!
PASSED!

!testRun: #PortfolioTest #test09APortfolioWithPortfoliosCanBeAddedToAportfolio stamp: 'IO 11/8/2020 19:41:06'!
PASSED!

!testRun: #PortfolioTest #test10CanNotAddAnAccountToAPortfolioWhosePortfolioHasTheAccount stamp: 'IO 11/8/2020 19:41:06'!
PASSED!

!testRun: #PortfolioTest #test11CanNotAddAnAccountToAPortfolioWhoHasAPortfolioWithTheAccount stamp: 'IO 11/8/2020 19:41:06'!
PASSED!

!testRun: #PortfolioTest #test12APortfolioCantHaveRepeatedAccounts stamp: 'IO 11/8/2020 19:41:06'!
PASSED!

!testRun: #PortfolioTest #test13APortfolioCanNotHaveRepeatedPortfolios stamp: 'IO 11/8/2020 19:41:06'!
PASSED!

!testRun: #PortfolioTest #test14APortffolioCantHaveItself stamp: 'IO 11/8/2020 19:41:06'!
PASSED!

!testRun: #PortfolioTest #test15CanNotAddAnAccountToAPortfolioWithAParentThatHasTheAccount stamp: 'IO 11/8/2020 19:41:06'!
PASSED!

!testRun: #PortfolioTest #test16CanNotAddAnAccountToAPortfolioWhoseParentHasTheAccount stamp: 'IO 11/8/2020 19:41:06'!
PASSED!

!testRun: #PortfolioTest #test17CanNotAddAnAccountToAPortfolioWithAPredecesorsThatHasTheAccount stamp: 'IO 11/8/2020 19:41:06'!
PASSED!

!testRun: #PortfolioTest #test18CantAddAPortfolioWhenItIsAParent stamp: 'IO 11/8/2020 19:41:06'!
PASSED!

!testRun: #PortfolioTest #test19CantAddAPortfolioWhenItIsAPredecesor stamp: 'IO 11/8/2020 19:41:06'!
PASSED!

!testRun: #PortfolioTest #test20CantAddAPortfolioWhenAPredecesorAlredyHasIt stamp: 'IO 11/8/2020 19:41:06'!
PASSED!

!testRun: #PortfolioTest #test22APortfolioKnowsItsDirectAccounts stamp: 'IO 11/8/2020 19:41:06'!
PASSED!

!testRun: #PortfolioTest #test22APortfolioKnowsTheAccountsOfHisPortfolios stamp: 'IO 11/8/2020 19:41:06'!
PASSED!

!testRun: #PortfolioTest #test23AnEmptyPortfolioHasABalanceOf0 stamp: 'IO 11/8/2020 19:41:06'!
PASSED!

!testRun: #PortfolioTest #test24APortfolioWithOneAccountHasTheBalanceOfThatAccount stamp: 'IO 11/8/2020 19:41:06'!
PASSED!

!testRun: #PortfolioTest #test25TheBalanceOfAPortfolioWithNoPortfoliosIsTheSumOfHisAccounts stamp: 'IO 11/8/2020 19:41:06'!
PASSED!

!testRun: #PortfolioTest #test26TheBalanceOfAPortfolioIsTheSumOfHisAccountsAndPortfolios stamp: 'IO 11/8/2020 19:41:06'!
PASSED!

!testRun: #PortfolioTest #test27AnEmptyPortfolioHasNoRegisteredTransactions stamp: 'IO 11/8/2020 19:41:06'!
PASSED!

!testRun: #PortfolioTest #test28APortfolioWithOneAccountHasItsRegisteredTransactions stamp: 'IO 11/8/2020 19:41:06'!
PASSED!

!testRun: #PortfolioTest #test29APortfolioWithManyAccountsHasItsAccountsRegisteredTransactions stamp: 'IO 11/8/2020 19:41:06'!
PASSED!

!testRun: #PortfolioTest #test30APortfolioHasItsPortfoliosAndAccountsRegisteredTransactions stamp: 'IO 11/8/2020 19:41:06'!
PASSED!

!testRun: #PortfolioTest #test31AnEmptyPortfolioHasNoTransactions stamp: 'IO 11/8/2020 19:41:06'!
PASSED!

!testRun: #PortfolioTest #test32APortfolioWithOneAccountHasItsTransactions stamp: 'IO 11/8/2020 19:41:06'!
PASSED!

!testRun: #PortfolioTest #test33APortfolioWithManyAccountsHasItsAccountsTransactions stamp: 'IO 11/8/2020 19:41:06'!
PASSED!

!testRun: #PortfolioTest #test34APortfolioHasItsPortfoliosAndAccountsTransaction stamp: 'IO 11/8/2020 19:41:06'!
PASSED!

!testRun: #PortfolioTest #test35CanNotAddAPortfolioWithAccountsAlredyInTheParentsOfTheRevceiver stamp: 'IO 11/8/2020 19:41:06'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'IO 11/8/2020 19:41:06'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'IO 11/8/2020 19:41:07'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'IO 11/8/2020 19:41:07'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'IO 11/8/2020 19:41:07'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'IO 11/8/2020 19:41:07'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'IO 11/8/2020 19:41:07'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'IO 11/8/2020 19:41:07'!
PASSED!
!PortfolioTest methodsFor: 'errors adding portfolios by parents' stamp: 'IO 11/8/2020 19:45:12' prior: 50888328!
test35CanNotAddAPortfolioWithAccountsAlredyInTheParentsOfTheRevceiver
	
	"
		no se pueden agregar un portfolio cuando tiene cuentas repetidas en los padres del receptor 
		p1 ->	p2 -> p4 -x p5 -> a3,a2,a1|
		     -> a1| -> a2|
			 p3 -> p3|
			      -> a3|
	"
	
	| portfolio1 portfolio2 portfolio3 portfolio4 portfolio5 portfolio6 account1 account2 account3 |
	
	portfolio1 := Portfolio new.
	portfolio2 := Portfolio new.
	portfolio3 := Portfolio new.
	portfolio4 := Portfolio new.
	portfolio5 := Portfolio new.
	portfolio6 := Portfolio new.
	
	account1 := ReceptiveAccount new.
	account2 := ReceptiveAccount new.
	account3 := ReceptiveAccount new.	
	
	"
		p1 [a1] -> p2 x> p3 [a1]
		p1 -> p2 [a1] -> p3 x> p4 [a1]
		p1 [a1] -> p2 x> p3 -> p4 [a1]
	"

	portfolio1 addPortfolio: portfolio2.
	portfolio2 addPortfolio: portfolio4.
	portfolio3 addPortfolio: portfolio4.
	portfolio6 addPortfolio: portfolio5.
	portfolio1 addAccount: account1.
	portfolio2 addAccount: account2.
	portfolio3 addAccount: account3.
	portfolio5 addAccount: account1.
	portfolio5 addAccount: account2.
	portfolio5 addAccount: account3.

	self should: [	portfolio4 addPortfolio: portfolio6.] raise: Error withMessageText: Portfolio errorMessageAccountAlreadyAdded.
! !
!PortfolioTest methodsFor: 'errors adding portfolios by parents' stamp: 'IO 11/8/2020 19:46:00' prior: 50888553!
test35CanNotAddAPortfolioWithAccountsAlredyInTheParentsOfTheRevceiver
	
	"
		no se pueden agregar un portfolio cuando tiene cuentas repetidas en los padres del receptor 
		p1 ->	p2 -> p4 -x p5 -> a3,a2,a1|
		     -> a1| -> a2|
			 p3 -> p3|
			      -> a3|
	"
	
	| portfolio1 portfolio2 portfolio3 portfolio4 portfolio5 portfolio6 account1 account2 account3 |
	
	portfolio1 := Portfolio new.
	portfolio2 := Portfolio new.
	portfolio3 := Portfolio new.
	portfolio4 := Portfolio new.
	portfolio5 := Portfolio new.
	portfolio6 := Portfolio new.
	
	account1 := ReceptiveAccount new.
	account2 := ReceptiveAccount new.
	account3 := ReceptiveAccount new.	
	
	"
		p1 [a1] -> p2 x> p3 [a1]
		p1 -> p2 [a1] -> p3 x> p4 [a1]

	"

	portfolio1 addPortfolio: portfolio2.
	portfolio2 addPortfolio: portfolio4.
	portfolio3 addPortfolio: portfolio4.
	portfolio6 addPortfolio: portfolio5.
	portfolio1 addAccount: account1.
	portfolio2 addAccount: account2.
	portfolio3 addAccount: account3.
	portfolio5 addAccount: account1.
	portfolio5 addAccount: account2.
	portfolio5 addAccount: account3.

	self should: [	portfolio4 addPortfolio: portfolio6.] raise: Error withMessageText: Portfolio errorMessageAccountAlreadyAdded.
! !
!PortfolioTest methodsFor: 'errors adding portfolios by parents' stamp: 'IO 11/8/2020 19:49:41' prior: 50888596!
test35CanNotAddAPortfolioWithAccountsAlredyInTheParentsOfTheRevceiver
	
	"
		no se pueden agregar un portfolio cuando tiene cuentas repetidas en los padres del receptor 
		p1 ->	p2 -> p4 -x p5 -> a3,a2,a1|
		     -> a1| -> a2|
			 p3 -> p3|
			      -> a3|
	"
	
	| portfolio1 portfolio2 portfolio3 portfolio4 portfolio5 portfolio6 account1 account2 account3 |
	
	portfolio1 := Portfolio new.
	portfolio2 := Portfolio new.
	portfolio3 := Portfolio new.
	portfolio4 := Portfolio new.
	portfolio5 := Portfolio new.
	portfolio6 := Portfolio new.
	
	account1 := ReceptiveAccount new.
	account2 := ReceptiveAccount new.
	account3 := ReceptiveAccount new.	
	
	"
		p1 [a1] x> p4 [a1]
		p1 [a1] x> p3 -> p4 [a1]
		
	"

	portfolio1 addPortfolio: portfolio2.
	portfolio2 addPortfolio: portfolio4.
	portfolio3 addPortfolio: portfolio4.
	portfolio6 addPortfolio: portfolio5.
	portfolio1 addAccount: account1.
	portfolio2 addAccount: account2.
	portfolio3 addAccount: account3.
	portfolio5 addAccount: account1.
	portfolio5 addAccount: account2.
	portfolio5 addAccount: account3.

	self should: [	portfolio4 addPortfolio: portfolio6.] raise: Error withMessageText: Portfolio errorMessageAccountAlreadyAdded.
! !
!PortfolioTest methodsFor: 'errors adding portfolios by parents' stamp: 'IO 11/8/2020 19:51:26'!
test35CanNotAddAPortfolioWithAccountsAlredyInTheParentsOfTheReceiver
	
	"
		no se pueden agregar un portfolio cuando tiene cuentas repetidas en los padres del receptor 
		p1 ->	p2 -> p4 -x p5 -> a3,a2,a1|
		     -> a1| -> a2|
			 p3 -> p3|
			      -> a3|
	"
	
	| portfolio1 portfolio2 portfolio3 portfolio4 portfolio5 portfolio6 account1 account2 account3 |
	
	portfolio1 := Portfolio new.
	portfolio2 := Portfolio new.
	portfolio3 := Portfolio new.
	portfolio4 := Portfolio new.
	portfolio5 := Portfolio new.
	portfolio6 := Portfolio new.
	
	account1 := ReceptiveAccount new.
	account2 := ReceptiveAccount new.
	account3 := ReceptiveAccount new.	
	
	"
		p1 [a1] x> p4 [a1]
		p1 [a1] x> p3 -> p4 [a1]
		
	"

	portfolio1 addPortfolio: portfolio2.
	portfolio2 addPortfolio: portfolio4.
	portfolio3 addPortfolio: portfolio4.
	portfolio6 addPortfolio: portfolio5.
	portfolio1 addAccount: account1.
	portfolio2 addAccount: account2.
	portfolio3 addAccount: account3.
	portfolio5 addAccount: account1.
	portfolio5 addAccount: account2.
	portfolio5 addAccount: account3.

	self should: [	portfolio4 addPortfolio: portfolio6.] raise: Error withMessageText: Portfolio errorMessageAccountAlreadyAdded.
! !

!methodRemoval: PortfolioTest #test35CanNotAddAPortfolioWithAccountsAlredyInTheParentsOfTheRevceiver stamp: 'IO 11/8/2020 19:51:26'!
test35CanNotAddAPortfolioWithAccountsAlredyInTheParentsOfTheRevceiver
	
	"
		no se pueden agregar un portfolio cuando tiene cuentas repetidas en los padres del receptor 
		p1 ->	p2 -> p4 -x p5 -> a3,a2,a1|
		     -> a1| -> a2|
			 p3 -> p3|
			      -> a3|
	"
	
	| portfolio1 portfolio2 portfolio3 portfolio4 portfolio5 portfolio6 account1 account2 account3 |
	
	portfolio1 := Portfolio new.
	portfolio2 := Portfolio new.
	portfolio3 := Portfolio new.
	portfolio4 := Portfolio new.
	portfolio5 := Portfolio new.
	portfolio6 := Portfolio new.
	
	account1 := ReceptiveAccount new.
	account2 := ReceptiveAccount new.
	account3 := ReceptiveAccount new.	
	
	"
		p1 [a1] x> p4 [a1]
		p1 [a1] x> p3 -> p4 [a1]
		
	"

	portfolio1 addPortfolio: portfolio2.
	portfolio2 addPortfolio: portfolio4.
	portfolio3 addPortfolio: portfolio4.
	portfolio6 addPortfolio: portfolio5.
	portfolio1 addAccount: account1.
	portfolio2 addAccount: account2.
	portfolio3 addAccount: account3.
	portfolio5 addAccount: account1.
	portfolio5 addAccount: account2.
	portfolio5 addAccount: account3.

	self should: [	portfolio4 addPortfolio: portfolio6.] raise: Error withMessageText: Portfolio errorMessageAccountAlreadyAdded.
!
!PortfolioTest methodsFor: 'errors adding portfolios by parents' stamp: 'IO 11/8/2020 19:54:55'!
test35CanNotAddAPortfolioWithAccountsInFirstLevelAlredyInTheParentsOfTheReceiver
	
	"
		no se pueden agregar un portfolio que tiene cuentas en si mismo repetidas en los padres del receptor 
		p1 [a1] x> p4 [a1]
		p1 [a1] x> p3 -> p4 [a1]
	"
	
	| portfolio1 portfolio2 account1 |
	portfolio1 := Portfolio new.
	portfolio2 := Portfolio new.
	account1 := ReceptiveAccount new.
	
	portfolio1 addAccount: account1.
	portfolio2 addAccount: account1.

	self should: [	portfolio1 addPortfolio: portfolio2.] raise: Error withMessageText: Portfolio errorMessageAccountAlreadyAdded.
! !

!testRun: #PortfolioTest #test35CanNotAddAPortfolioWithAccountsInFirstLevelAlredyInTheParentsOfTheReceiver stamp: 'IO 11/8/2020 19:54:56'!
PASSED!

!testRun: #PortfolioTest #test01AnAccountCanBeAddedToAPortfolio stamp: 'IO 11/8/2020 19:54:56'!
PASSED!

!testRun: #PortfolioTest #test02APortfolioHasNoAccountsInitially stamp: 'IO 11/8/2020 19:54:56'!
PASSED!

!testRun: #PortfolioTest #test03APortfolioDoesNotHaveMoreAccountsThanAdded stamp: 'IO 11/8/2020 19:54:56'!
PASSED!

!testRun: #PortfolioTest #test04MoreThanOneAccountCanBeAddedToAPortfolio stamp: 'IO 11/8/2020 19:54:56'!
PASSED!

!testRun: #PortfolioTest #test05APortfolioDoesNotHavePortfoliosInitialy stamp: 'IO 11/8/2020 19:54:56'!
PASSED!

!testRun: #PortfolioTest #test06AnEmptyPortfolioCanBeAddedToAPortfolio stamp: 'IO 11/8/2020 19:54:56'!
PASSED!

!testRun: #PortfolioTest #test07VariousEmptyPortfoliosCanBeAddedToAPortfolio stamp: 'IO 11/8/2020 19:54:56'!
PASSED!

!testRun: #PortfolioTest #test08PortfoliosCanBeAddedToAPortfolio stamp: 'IO 11/8/2020 19:54:56'!
PASSED!

!testRun: #PortfolioTest #test09APortfolioWithPortfoliosCanBeAddedToAportfolio stamp: 'IO 11/8/2020 19:54:56'!
PASSED!

!testRun: #PortfolioTest #test10CanNotAddAnAccountToAPortfolioWhosePortfolioHasTheAccount stamp: 'IO 11/8/2020 19:54:56'!
PASSED!

!testRun: #PortfolioTest #test11CanNotAddAnAccountToAPortfolioWhoHasAPortfolioWithTheAccount stamp: 'IO 11/8/2020 19:54:56'!
PASSED!

!testRun: #PortfolioTest #test12APortfolioCantHaveRepeatedAccounts stamp: 'IO 11/8/2020 19:54:56'!
PASSED!

!testRun: #PortfolioTest #test13APortfolioCanNotHaveRepeatedPortfolios stamp: 'IO 11/8/2020 19:54:56'!
PASSED!

!testRun: #PortfolioTest #test14APortffolioCantHaveItself stamp: 'IO 11/8/2020 19:54:56'!
PASSED!

!testRun: #PortfolioTest #test15CanNotAddAnAccountToAPortfolioWithAParentThatHasTheAccount stamp: 'IO 11/8/2020 19:54:56'!
PASSED!

!testRun: #PortfolioTest #test16CanNotAddAnAccountToAPortfolioWhoseParentHasTheAccount stamp: 'IO 11/8/2020 19:54:56'!
PASSED!

!testRun: #PortfolioTest #test17CanNotAddAnAccountToAPortfolioWithAPredecesorsThatHasTheAccount stamp: 'IO 11/8/2020 19:54:56'!
PASSED!

!testRun: #PortfolioTest #test18CantAddAPortfolioWhenItIsAParent stamp: 'IO 11/8/2020 19:54:56'!
PASSED!

!testRun: #PortfolioTest #test19CantAddAPortfolioWhenItIsAPredecesor stamp: 'IO 11/8/2020 19:54:56'!
PASSED!

!testRun: #PortfolioTest #test20CantAddAPortfolioWhenAPredecesorAlredyHasIt stamp: 'IO 11/8/2020 19:54:56'!
PASSED!

!testRun: #PortfolioTest #test22APortfolioKnowsItsDirectAccounts stamp: 'IO 11/8/2020 19:54:56'!
PASSED!

!testRun: #PortfolioTest #test22APortfolioKnowsTheAccountsOfHisPortfolios stamp: 'IO 11/8/2020 19:54:56'!
PASSED!

!testRun: #PortfolioTest #test23AnEmptyPortfolioHasABalanceOf0 stamp: 'IO 11/8/2020 19:54:56'!
PASSED!

!testRun: #PortfolioTest #test24APortfolioWithOneAccountHasTheBalanceOfThatAccount stamp: 'IO 11/8/2020 19:54:56'!
PASSED!

!testRun: #PortfolioTest #test25TheBalanceOfAPortfolioWithNoPortfoliosIsTheSumOfHisAccounts stamp: 'IO 11/8/2020 19:54:56'!
PASSED!

!testRun: #PortfolioTest #test26TheBalanceOfAPortfolioIsTheSumOfHisAccountsAndPortfolios stamp: 'IO 11/8/2020 19:54:56'!
PASSED!

!testRun: #PortfolioTest #test27AnEmptyPortfolioHasNoRegisteredTransactions stamp: 'IO 11/8/2020 19:54:56'!
PASSED!

!testRun: #PortfolioTest #test28APortfolioWithOneAccountHasItsRegisteredTransactions stamp: 'IO 11/8/2020 19:54:56'!
PASSED!

!testRun: #PortfolioTest #test29APortfolioWithManyAccountsHasItsAccountsRegisteredTransactions stamp: 'IO 11/8/2020 19:54:56'!
PASSED!

!testRun: #PortfolioTest #test30APortfolioHasItsPortfoliosAndAccountsRegisteredTransactions stamp: 'IO 11/8/2020 19:54:56'!
PASSED!

!testRun: #PortfolioTest #test31AnEmptyPortfolioHasNoTransactions stamp: 'IO 11/8/2020 19:54:56'!
PASSED!

!testRun: #PortfolioTest #test32APortfolioWithOneAccountHasItsTransactions stamp: 'IO 11/8/2020 19:54:56'!
PASSED!

!testRun: #PortfolioTest #test33APortfolioWithManyAccountsHasItsAccountsTransactions stamp: 'IO 11/8/2020 19:54:56'!
PASSED!

!testRun: #PortfolioTest #test34APortfolioHasItsPortfoliosAndAccountsTransaction stamp: 'IO 11/8/2020 19:54:56'!
PASSED!

!testRun: #PortfolioTest #test35CanNotAddAPortfolioWithAccountsAlredyInTheParentsOfTheReceiver stamp: 'IO 11/8/2020 19:54:56'!
PASSED!

!testRun: #PortfolioTest #test35CanNotAddAPortfolioWithAccountsInFirstLevelAlredyInTheParentsOfTheReceiver stamp: 'IO 11/8/2020 19:54:56'!
PASSED!
!PortfolioTest methodsFor: 'errors adding portfolios by parents' stamp: 'IO 11/8/2020 19:55:02' prior: 50888761!
test35CanNotAddAPortfolioWithAccountsInFirstLevelAlredyInTheParentsOfTheReceiver
	
	"
		no se pueden agregar un portfolio que tiene cuentas en si mismo repetidas en los padres del receptor 
		p1 [a1] x> p4 [a1]
	"
	
	| portfolio1 portfolio2 account1 |
	portfolio1 := Portfolio new.
	portfolio2 := Portfolio new.
	account1 := ReceptiveAccount new.
	
	portfolio1 addAccount: account1.
	portfolio2 addAccount: account1.

	self should: [	portfolio1 addPortfolio: portfolio2.] raise: Error withMessageText: Portfolio errorMessageAccountAlreadyAdded.
! !
!PortfolioTest methodsFor: 'errors adding portfolios by parents' stamp: 'IO 11/8/2020 19:56:30'!
test36CanNotAddAPortfolioWithAccountsInDeeperLevelAlredyInTheParentsOfTheReceiver
	
	"
		no se pueden agregar un portfolio que tiene cuentas en sus portfolios repetidas en los padres del receptor 
		p1 [a1] x> p3 -> p4 [a1]
	"
	
	| portfolio1 portfolio2 portfolio3 account1 |
	portfolio1 := Portfolio new.
	portfolio2 := Portfolio new.
	portfolio3 := Portfolio new.
	account1 := ReceptiveAccount new.
	
	portfolio1 addAccount: account1.
	portfolio2 addPortfolio: portfolio3.
	portfolio3 addAccount: account1.

	self should: [	portfolio1 addPortfolio: portfolio2.] raise: Error withMessageText: Portfolio errorMessageAccountAlreadyAdded.
! !

!testRun: #PortfolioTest #test36CanNotAddAPortfolioWithAccountsInDeeperLevelAlredyInTheParentsOfTheReceiver stamp: 'IO 11/8/2020 19:56:31'!
PASSED!

!testRun: #PortfolioTest #test01AnAccountCanBeAddedToAPortfolio stamp: 'IO 11/8/2020 19:56:31'!
PASSED!

!testRun: #PortfolioTest #test02APortfolioHasNoAccountsInitially stamp: 'IO 11/8/2020 19:56:31'!
PASSED!

!testRun: #PortfolioTest #test03APortfolioDoesNotHaveMoreAccountsThanAdded stamp: 'IO 11/8/2020 19:56:31'!
PASSED!

!testRun: #PortfolioTest #test04MoreThanOneAccountCanBeAddedToAPortfolio stamp: 'IO 11/8/2020 19:56:31'!
PASSED!

!testRun: #PortfolioTest #test05APortfolioDoesNotHavePortfoliosInitialy stamp: 'IO 11/8/2020 19:56:31'!
PASSED!

!testRun: #PortfolioTest #test06AnEmptyPortfolioCanBeAddedToAPortfolio stamp: 'IO 11/8/2020 19:56:31'!
PASSED!

!testRun: #PortfolioTest #test07VariousEmptyPortfoliosCanBeAddedToAPortfolio stamp: 'IO 11/8/2020 19:56:31'!
PASSED!

!testRun: #PortfolioTest #test08PortfoliosCanBeAddedToAPortfolio stamp: 'IO 11/8/2020 19:56:31'!
PASSED!

!testRun: #PortfolioTest #test09APortfolioWithPortfoliosCanBeAddedToAportfolio stamp: 'IO 11/8/2020 19:56:31'!
PASSED!

!testRun: #PortfolioTest #test10CanNotAddAnAccountToAPortfolioWhosePortfolioHasTheAccount stamp: 'IO 11/8/2020 19:56:31'!
PASSED!

!testRun: #PortfolioTest #test11CanNotAddAnAccountToAPortfolioWhoHasAPortfolioWithTheAccount stamp: 'IO 11/8/2020 19:56:31'!
PASSED!

!testRun: #PortfolioTest #test12APortfolioCantHaveRepeatedAccounts stamp: 'IO 11/8/2020 19:56:31'!
PASSED!

!testRun: #PortfolioTest #test13APortfolioCanNotHaveRepeatedPortfolios stamp: 'IO 11/8/2020 19:56:31'!
PASSED!

!testRun: #PortfolioTest #test14APortffolioCantHaveItself stamp: 'IO 11/8/2020 19:56:31'!
PASSED!

!testRun: #PortfolioTest #test15CanNotAddAnAccountToAPortfolioWithAParentThatHasTheAccount stamp: 'IO 11/8/2020 19:56:31'!
PASSED!

!testRun: #PortfolioTest #test16CanNotAddAnAccountToAPortfolioWhoseParentHasTheAccount stamp: 'IO 11/8/2020 19:56:31'!
PASSED!

!testRun: #PortfolioTest #test17CanNotAddAnAccountToAPortfolioWithAPredecesorsThatHasTheAccount stamp: 'IO 11/8/2020 19:56:31'!
PASSED!

!testRun: #PortfolioTest #test18CantAddAPortfolioWhenItIsAParent stamp: 'IO 11/8/2020 19:56:31'!
PASSED!

!testRun: #PortfolioTest #test19CantAddAPortfolioWhenItIsAPredecesor stamp: 'IO 11/8/2020 19:56:31'!
PASSED!

!testRun: #PortfolioTest #test20CantAddAPortfolioWhenAPredecesorAlredyHasIt stamp: 'IO 11/8/2020 19:56:31'!
PASSED!

!testRun: #PortfolioTest #test22APortfolioKnowsItsDirectAccounts stamp: 'IO 11/8/2020 19:56:31'!
PASSED!

!testRun: #PortfolioTest #test22APortfolioKnowsTheAccountsOfHisPortfolios stamp: 'IO 11/8/2020 19:56:31'!
PASSED!

!testRun: #PortfolioTest #test23AnEmptyPortfolioHasABalanceOf0 stamp: 'IO 11/8/2020 19:56:31'!
PASSED!

!testRun: #PortfolioTest #test24APortfolioWithOneAccountHasTheBalanceOfThatAccount stamp: 'IO 11/8/2020 19:56:31'!
PASSED!

!testRun: #PortfolioTest #test25TheBalanceOfAPortfolioWithNoPortfoliosIsTheSumOfHisAccounts stamp: 'IO 11/8/2020 19:56:31'!
PASSED!

!testRun: #PortfolioTest #test26TheBalanceOfAPortfolioIsTheSumOfHisAccountsAndPortfolios stamp: 'IO 11/8/2020 19:56:31'!
PASSED!

!testRun: #PortfolioTest #test27AnEmptyPortfolioHasNoRegisteredTransactions stamp: 'IO 11/8/2020 19:56:31'!
PASSED!

!testRun: #PortfolioTest #test28APortfolioWithOneAccountHasItsRegisteredTransactions stamp: 'IO 11/8/2020 19:56:31'!
PASSED!

!testRun: #PortfolioTest #test29APortfolioWithManyAccountsHasItsAccountsRegisteredTransactions stamp: 'IO 11/8/2020 19:56:31'!
PASSED!

!testRun: #PortfolioTest #test30APortfolioHasItsPortfoliosAndAccountsRegisteredTransactions stamp: 'IO 11/8/2020 19:56:31'!
PASSED!

!testRun: #PortfolioTest #test31AnEmptyPortfolioHasNoTransactions stamp: 'IO 11/8/2020 19:56:31'!
PASSED!

!testRun: #PortfolioTest #test32APortfolioWithOneAccountHasItsTransactions stamp: 'IO 11/8/2020 19:56:31'!
PASSED!

!testRun: #PortfolioTest #test33APortfolioWithManyAccountsHasItsAccountsTransactions stamp: 'IO 11/8/2020 19:56:31'!
PASSED!

!testRun: #PortfolioTest #test34APortfolioHasItsPortfoliosAndAccountsTransaction stamp: 'IO 11/8/2020 19:56:31'!
PASSED!

!testRun: #PortfolioTest #test35CanNotAddAPortfolioWithAccountsAlredyInTheParentsOfTheReceiver stamp: 'IO 11/8/2020 19:56:31'!
PASSED!

!testRun: #PortfolioTest #test35CanNotAddAPortfolioWithAccountsInFirstLevelAlredyInTheParentsOfTheReceiver stamp: 'IO 11/8/2020 19:56:31'!
PASSED!

!testRun: #PortfolioTest #test36CanNotAddAPortfolioWithAccountsInDeeperLevelAlredyInTheParentsOfTheReceiver stamp: 'IO 11/8/2020 19:56:31'!
PASSED!
!Root methodsFor: 'validations' stamp: 'IO 11/8/2020 19:56:39' prior: 50888373 overrides: 50886455!
validatePortfoliosBeforeAdding: aPortfolioToAdd

	"
		see superclass
		implementation details: this method will search that the portfolio to be added is not in the portfolio's children,
			and will also validate that none of its children portfolios has one of the accounts of the portfolio to be added.
	"

	(childPortfolio = aPortfolioToAdd) ifTrue: [self error: Portfolio errorMessagePortfolioAlreadyAdded].
	(childPortfolio includesPortfolio: aPortfolioToAdd) ifTrue: [self error: Portfolio errorMessagePortfolioAlreadyAdded].
	aPortfolioToAdd accountsDo: [ :anAccount | childPortfolio validateAccountBeforeAdding: anAccount].
! !

!testRun: #PortfolioTest #test36CanNotAddAPortfolioWithAccountsInDeeperLevelAlredyInTheParentsOfTheReceiver stamp: 'IO 11/8/2020 19:56:50'!
FAILURE!
!Root methodsFor: 'validations' stamp: 'IO 11/8/2020 19:57:00' prior: 50889110 overrides: 50886455!
validatePortfoliosBeforeAdding: aPortfolioToAdd

	"
		see superclass
		implementation details: this method will search that the portfolio to be added is not in the portfolio's children,
			and will also validate that none of its children portfolios has one of the accounts of the portfolio to be added.
	"

	(childPortfolio = aPortfolioToAdd) ifTrue: [self error: Portfolio errorMessagePortfolioAlreadyAdded].
	(childPortfolio includesPortfolio: aPortfolioToAdd) ifTrue: [self error: Portfolio errorMessagePortfolioAlreadyAdded].
	aPortfolioToAdd accounts do: [ :anAccount | childPortfolio validateAccountBeforeAdding: anAccount].
! !

!testRun: #PortfolioTest #test01AnAccountCanBeAddedToAPortfolio stamp: 'IO 11/8/2020 19:58:32'!
PASSED!

!testRun: #PortfolioTest #test02APortfolioHasNoAccountsInitially stamp: 'IO 11/8/2020 19:58:32'!
PASSED!

!testRun: #PortfolioTest #test03APortfolioDoesNotHaveMoreAccountsThanAdded stamp: 'IO 11/8/2020 19:58:32'!
PASSED!

!testRun: #PortfolioTest #test04MoreThanOneAccountCanBeAddedToAPortfolio stamp: 'IO 11/8/2020 19:58:32'!
PASSED!

!testRun: #PortfolioTest #test05APortfolioDoesNotHavePortfoliosInitialy stamp: 'IO 11/8/2020 19:58:32'!
PASSED!

!testRun: #PortfolioTest #test06AnEmptyPortfolioCanBeAddedToAPortfolio stamp: 'IO 11/8/2020 19:58:33'!
PASSED!

!testRun: #PortfolioTest #test07VariousEmptyPortfoliosCanBeAddedToAPortfolio stamp: 'IO 11/8/2020 19:58:33'!
PASSED!

!testRun: #PortfolioTest #test08PortfoliosCanBeAddedToAPortfolio stamp: 'IO 11/8/2020 19:58:33'!
PASSED!

!testRun: #PortfolioTest #test09APortfolioWithPortfoliosCanBeAddedToAportfolio stamp: 'IO 11/8/2020 19:58:33'!
PASSED!

!testRun: #PortfolioTest #test10CanNotAddAnAccountToAPortfolioWhosePortfolioHasTheAccount stamp: 'IO 11/8/2020 19:58:33'!
PASSED!

!testRun: #PortfolioTest #test11CanNotAddAnAccountToAPortfolioWhoHasAPortfolioWithTheAccount stamp: 'IO 11/8/2020 19:58:33'!
PASSED!

!testRun: #PortfolioTest #test12APortfolioCantHaveRepeatedAccounts stamp: 'IO 11/8/2020 19:58:33'!
PASSED!

!testRun: #PortfolioTest #test13APortfolioCanNotHaveRepeatedPortfolios stamp: 'IO 11/8/2020 19:58:33'!
PASSED!

!testRun: #PortfolioTest #test14APortffolioCantHaveItself stamp: 'IO 11/8/2020 19:58:33'!
PASSED!

!testRun: #PortfolioTest #test15CanNotAddAnAccountToAPortfolioWithAParentThatHasTheAccount stamp: 'IO 11/8/2020 19:58:33'!
PASSED!

!testRun: #PortfolioTest #test16CanNotAddAnAccountToAPortfolioWhoseParentHasTheAccount stamp: 'IO 11/8/2020 19:58:33'!
PASSED!

!testRun: #PortfolioTest #test17CanNotAddAnAccountToAPortfolioWithAPredecesorsThatHasTheAccount stamp: 'IO 11/8/2020 19:58:33'!
PASSED!

!testRun: #PortfolioTest #test18CantAddAPortfolioWhenItIsAParent stamp: 'IO 11/8/2020 19:58:33'!
PASSED!

!testRun: #PortfolioTest #test19CantAddAPortfolioWhenItIsAPredecesor stamp: 'IO 11/8/2020 19:58:33'!
PASSED!

!testRun: #PortfolioTest #test20CantAddAPortfolioWhenAPredecesorAlredyHasIt stamp: 'IO 11/8/2020 19:58:33'!
PASSED!

!testRun: #PortfolioTest #test22APortfolioKnowsItsDirectAccounts stamp: 'IO 11/8/2020 19:58:33'!
PASSED!

!testRun: #PortfolioTest #test22APortfolioKnowsTheAccountsOfHisPortfolios stamp: 'IO 11/8/2020 19:58:33'!
PASSED!

!testRun: #PortfolioTest #test23AnEmptyPortfolioHasABalanceOf0 stamp: 'IO 11/8/2020 19:58:33'!
PASSED!

!testRun: #PortfolioTest #test24APortfolioWithOneAccountHasTheBalanceOfThatAccount stamp: 'IO 11/8/2020 19:58:33'!
PASSED!

!testRun: #PortfolioTest #test25TheBalanceOfAPortfolioWithNoPortfoliosIsTheSumOfHisAccounts stamp: 'IO 11/8/2020 19:58:33'!
PASSED!

!testRun: #PortfolioTest #test26TheBalanceOfAPortfolioIsTheSumOfHisAccountsAndPortfolios stamp: 'IO 11/8/2020 19:58:33'!
PASSED!

!testRun: #PortfolioTest #test27AnEmptyPortfolioHasNoRegisteredTransactions stamp: 'IO 11/8/2020 19:58:33'!
PASSED!

!testRun: #PortfolioTest #test28APortfolioWithOneAccountHasItsRegisteredTransactions stamp: 'IO 11/8/2020 19:58:33'!
PASSED!

!testRun: #PortfolioTest #test29APortfolioWithManyAccountsHasItsAccountsRegisteredTransactions stamp: 'IO 11/8/2020 19:58:33'!
PASSED!

!testRun: #PortfolioTest #test30APortfolioHasItsPortfoliosAndAccountsRegisteredTransactions stamp: 'IO 11/8/2020 19:58:33'!
PASSED!

!testRun: #PortfolioTest #test31AnEmptyPortfolioHasNoTransactions stamp: 'IO 11/8/2020 19:58:33'!
PASSED!

!testRun: #PortfolioTest #test32APortfolioWithOneAccountHasItsTransactions stamp: 'IO 11/8/2020 19:58:33'!
PASSED!

!testRun: #PortfolioTest #test33APortfolioWithManyAccountsHasItsAccountsTransactions stamp: 'IO 11/8/2020 19:58:33'!
PASSED!

!testRun: #PortfolioTest #test34APortfolioHasItsPortfoliosAndAccountsTransaction stamp: 'IO 11/8/2020 19:58:33'!
PASSED!

!testRun: #PortfolioTest #test35CanNotAddAPortfolioWithAccountsAlredyInTheParentsOfTheReceiver stamp: 'IO 11/8/2020 19:58:33'!
PASSED!

!testRun: #PortfolioTest #test35CanNotAddAPortfolioWithAccountsInFirstLevelAlredyInTheParentsOfTheReceiver stamp: 'IO 11/8/2020 19:58:33'!
PASSED!

!testRun: #PortfolioTest #test36CanNotAddAPortfolioWithAccountsInDeeperLevelAlredyInTheParentsOfTheReceiver stamp: 'IO 11/8/2020 19:58:33'!
PASSED!
!Portfolio methodsFor: 'testing' stamp: 'IO 11/8/2020 19:58:44' prior: 50885382 overrides: 50884426!
hasRegistered: aTransaction

	"return if this portfolio has registered a transaction"

	^self transactions includes: aTransaction.
	
! !
!Portfolio methodsFor: 'testing' stamp: 'IO 11/8/2020 19:58:51' prior: 50889301 overrides: 50884426!
hasRegistered: aTransaction

	"see superclass"

	^self transactions includes: aTransaction.
	
! !
!Portfolio methodsFor: 'testing' stamp: 'IO 11/8/2020 19:59:03' prior: 50885817!
includesAccount: anAccount 

	"return if this portfolio has anAccount or not"

	^self accounts includes: anAccount.
! !
!Portfolio methodsFor: 'testing' stamp: 'IO 11/8/2020 19:59:13' prior: 50889315!
includesAccount: anAccount 

	"return true if this portfolio has anAccount or not"

	^self accounts includes: anAccount.
! !
!Portfolio methodsFor: 'testing' stamp: 'IO 11/8/2020 19:59:18' prior: 50889322!
includesAccount: anAccount 

	"return true if this portfolio has anAccount"

	^self accounts includes: anAccount.
! !
!Portfolio methodsFor: 'testing' stamp: 'IO 11/8/2020 19:59:28' prior: 50886129!
includesPortfolio: aPortfolio

	"return true if this portfolio includes aPortfolio"

	self portfoliosDo: [ :portfolio | (portfolio includesPortfolio: aPortfolio) ifTrue: [^true]].
	
	^portfolios includes: aPortfolio.
! !
!Portfolio methodsFor: 'testing' stamp: 'IO 11/8/2020 19:59:34' prior: 50889329!
includesAccount: anAccount 

	"return true if this portfolio includes anAccount"

	^self accounts includes: anAccount.
! !
!Portfolio methodsFor: 'testing' stamp: 'IO 11/8/2020 19:59:50' prior: 50889336!
includesPortfolio: aPortfolio

	"return true if this portfolio includes aPortfolio"

	self portfoliosDo: [ :portfolio | (portfolio includesPortfolio: aPortfolio) ifTrue: [^true]].
	^portfolios includes: aPortfolio.
! !

!testRun: #PortfolioTest #test01AnAccountCanBeAddedToAPortfolio stamp: 'IO 11/8/2020 19:59:52'!
PASSED!

!testRun: #PortfolioTest #test02APortfolioHasNoAccountsInitially stamp: 'IO 11/8/2020 19:59:52'!
PASSED!

!testRun: #PortfolioTest #test03APortfolioDoesNotHaveMoreAccountsThanAdded stamp: 'IO 11/8/2020 19:59:52'!
PASSED!

!testRun: #PortfolioTest #test04MoreThanOneAccountCanBeAddedToAPortfolio stamp: 'IO 11/8/2020 19:59:52'!
PASSED!

!testRun: #PortfolioTest #test05APortfolioDoesNotHavePortfoliosInitialy stamp: 'IO 11/8/2020 19:59:52'!
PASSED!

!testRun: #PortfolioTest #test06AnEmptyPortfolioCanBeAddedToAPortfolio stamp: 'IO 11/8/2020 19:59:52'!
PASSED!

!testRun: #PortfolioTest #test07VariousEmptyPortfoliosCanBeAddedToAPortfolio stamp: 'IO 11/8/2020 19:59:52'!
PASSED!

!testRun: #PortfolioTest #test08PortfoliosCanBeAddedToAPortfolio stamp: 'IO 11/8/2020 19:59:52'!
PASSED!

!testRun: #PortfolioTest #test09APortfolioWithPortfoliosCanBeAddedToAportfolio stamp: 'IO 11/8/2020 19:59:52'!
PASSED!

!testRun: #PortfolioTest #test10CanNotAddAnAccountToAPortfolioWhosePortfolioHasTheAccount stamp: 'IO 11/8/2020 19:59:52'!
PASSED!

!testRun: #PortfolioTest #test11CanNotAddAnAccountToAPortfolioWhoHasAPortfolioWithTheAccount stamp: 'IO 11/8/2020 19:59:52'!
PASSED!

!testRun: #PortfolioTest #test12APortfolioCantHaveRepeatedAccounts stamp: 'IO 11/8/2020 19:59:52'!
PASSED!

!testRun: #PortfolioTest #test13APortfolioCanNotHaveRepeatedPortfolios stamp: 'IO 11/8/2020 19:59:52'!
PASSED!

!testRun: #PortfolioTest #test14APortffolioCantHaveItself stamp: 'IO 11/8/2020 19:59:52'!
PASSED!

!testRun: #PortfolioTest #test15CanNotAddAnAccountToAPortfolioWithAParentThatHasTheAccount stamp: 'IO 11/8/2020 19:59:52'!
PASSED!

!testRun: #PortfolioTest #test16CanNotAddAnAccountToAPortfolioWhoseParentHasTheAccount stamp: 'IO 11/8/2020 19:59:52'!
PASSED!

!testRun: #PortfolioTest #test17CanNotAddAnAccountToAPortfolioWithAPredecesorsThatHasTheAccount stamp: 'IO 11/8/2020 19:59:52'!
PASSED!

!testRun: #PortfolioTest #test18CantAddAPortfolioWhenItIsAParent stamp: 'IO 11/8/2020 19:59:52'!
PASSED!

!testRun: #PortfolioTest #test19CantAddAPortfolioWhenItIsAPredecesor stamp: 'IO 11/8/2020 19:59:52'!
PASSED!

!testRun: #PortfolioTest #test20CantAddAPortfolioWhenAPredecesorAlredyHasIt stamp: 'IO 11/8/2020 19:59:52'!
PASSED!

!testRun: #PortfolioTest #test22APortfolioKnowsItsDirectAccounts stamp: 'IO 11/8/2020 19:59:52'!
PASSED!

!testRun: #PortfolioTest #test22APortfolioKnowsTheAccountsOfHisPortfolios stamp: 'IO 11/8/2020 19:59:52'!
PASSED!

!testRun: #PortfolioTest #test23AnEmptyPortfolioHasABalanceOf0 stamp: 'IO 11/8/2020 19:59:52'!
PASSED!

!testRun: #PortfolioTest #test24APortfolioWithOneAccountHasTheBalanceOfThatAccount stamp: 'IO 11/8/2020 19:59:52'!
PASSED!

!testRun: #PortfolioTest #test25TheBalanceOfAPortfolioWithNoPortfoliosIsTheSumOfHisAccounts stamp: 'IO 11/8/2020 19:59:52'!
PASSED!

!testRun: #PortfolioTest #test26TheBalanceOfAPortfolioIsTheSumOfHisAccountsAndPortfolios stamp: 'IO 11/8/2020 19:59:52'!
PASSED!

!testRun: #PortfolioTest #test27AnEmptyPortfolioHasNoRegisteredTransactions stamp: 'IO 11/8/2020 19:59:52'!
PASSED!

!testRun: #PortfolioTest #test28APortfolioWithOneAccountHasItsRegisteredTransactions stamp: 'IO 11/8/2020 19:59:52'!
PASSED!

!testRun: #PortfolioTest #test29APortfolioWithManyAccountsHasItsAccountsRegisteredTransactions stamp: 'IO 11/8/2020 19:59:52'!
PASSED!

!testRun: #PortfolioTest #test30APortfolioHasItsPortfoliosAndAccountsRegisteredTransactions stamp: 'IO 11/8/2020 19:59:52'!
PASSED!

!testRun: #PortfolioTest #test31AnEmptyPortfolioHasNoTransactions stamp: 'IO 11/8/2020 19:59:52'!
PASSED!

!testRun: #PortfolioTest #test32APortfolioWithOneAccountHasItsTransactions stamp: 'IO 11/8/2020 19:59:52'!
PASSED!

!testRun: #PortfolioTest #test33APortfolioWithManyAccountsHasItsAccountsTransactions stamp: 'IO 11/8/2020 19:59:52'!
PASSED!

!testRun: #PortfolioTest #test34APortfolioHasItsPortfoliosAndAccountsTransaction stamp: 'IO 11/8/2020 19:59:52'!
PASSED!

!testRun: #PortfolioTest #test35CanNotAddAPortfolioWithAccountsAlredyInTheParentsOfTheReceiver stamp: 'IO 11/8/2020 19:59:52'!
PASSED!

!testRun: #PortfolioTest #test35CanNotAddAPortfolioWithAccountsInFirstLevelAlredyInTheParentsOfTheReceiver stamp: 'IO 11/8/2020 19:59:52'!
PASSED!

!testRun: #PortfolioTest #test36CanNotAddAPortfolioWithAccountsInDeeperLevelAlredyInTheParentsOfTheReceiver stamp: 'IO 11/8/2020 19:59:52'!
PASSED!
!Portfolio methodsFor: 'iterating' stamp: 'IO 11/8/2020 20:00:07' prior: 50887603!
accountsAndPortfoliosDo: aBlock

	"perform a block over the child portfolios and accounts of this portfolio (not all the subportfolios)"

	self accountsDo: [ :account | aBlock value: account.].
	self portfoliosDo: [ :portfolio | aBlock value: portfolio.].
! !
!Portfolio methodsFor: 'accessing' stamp: 'IO 11/8/2020 20:03:34' prior: 50885099 overrides: 50884419!
balance

	"
		see superclass
		implementation detials: return the balance of this portfolio. it will sum this portfolio accounts and the children
		portfolio's accounts balances
	"
	
	| balance |

	balance := 0.
	self accountsAndPortfoliosDo: [ :aThing | balance := balance + aThing balance].

	^balance.
! !
!Portfolio methodsFor: 'accessing' stamp: 'IO 11/8/2020 20:03:50' prior: 50885414 overrides: 50884433!
transactions

	"see superclass"

	| transactions |

	transactions := OrderedCollection new.
	self accountsAndPortfoliosDo: [ :account | transactions addAll: account transactions].

	^transactions.
! !

----SNAPSHOT----(8 November 2020 20:04:16) CuisUniversity-4384.image priorSource: 17694220!
!Portfolio methodsFor: 'accessing' stamp: 'IO 11/8/2020 20:08:53' prior: 50889514 overrides: 50884419!
balance

	"
		see superclass
		implementation detials: return the balance of this portfolio. it will sum this portfolio accounts and the children
		portfolio's accounts balances
	"
	
	| balance |

	balance := 0.
	self accountsAndPortfoliosDo: [ :aTransactionContainer | balance := balance + aTransactionContainer balance].

	^balance.
! !