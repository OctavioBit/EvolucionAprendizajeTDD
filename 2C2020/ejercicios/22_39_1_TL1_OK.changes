----STARTUP---- (18 November 2020 17:48:46) as /home/fede/Documentos/Facultad/Inge1/Cuises/linux64 (2)/CuisUniversity-4384.image!


----SNAPSHOT----(18 November 2020 17:48:55) CuisUniversity-4384.image priorSource: 17155564!

TestCase subclass: #CartTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros - Exercise - I'!

!classDefinition: #CartTest category: 'TusLibros - Exercise - I' stamp: 'fr 11/18/2020 17:49:46'!
TestCase subclass: #CartTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros - Exercise - I'!

!classDefinition: #Cart category: 'TusLibros - Exercise - I' stamp: 'fr 11/18/2020 17:50:29'!
Object subclass: #Cart
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros - Exercise - I'!
!CartTest methodsFor: 'no messages' stamp: 'fr 11/18/2020 17:50:27'!
test01

	self assert: Cart new isEmpty! !

!testRun: #CartTest #test01 stamp: 'fr 11/18/2020 17:50:30'!
ERROR!
!Cart methodsFor: 'testing' stamp: 'fr 11/18/2020 17:50:36'!
isEmpty
	self shouldBeImplemented.! !
!Cart methodsFor: 'testing' stamp: 'fr 11/18/2020 17:50:39' prior: 50867797!
isEmpty
	
	^true! !

!testRun: #CartTest #test01 stamp: 'fr 11/18/2020 17:50:40'!
PASSED!

!testRun: #CartTest #test01 stamp: 'fr 11/18/2020 17:50:40'!
PASSED!
!CartTest methodsFor: 'as yet unclassified' stamp: 'fr 11/18/2020 17:50:42'!
test02

	self assert: Cart new isEmpty! !
!CartTest methodsFor: 'as yet unclassified' stamp: 'fr 11/18/2020 17:50:59' prior: 50867809!
test02
	
	| cart |
	cart _ Cart new.
	self deny: cart isEmpty! !

!testRun: #CartTest #test02 stamp: 'fr 11/18/2020 17:51:01'!
FAILURE!
!CartTest methodsFor: 'as yet unclassified' stamp: 'fr 11/18/2020 17:51:39' prior: 50867814!
test02
	
	| cart |
	cart _ Cart new.
	cart add: 1 of: '978-92-8001-4214-3'.
	self deny: cart isEmpty! !

!testRun: #CartTest #test02 stamp: 'fr 11/18/2020 17:51:40'!
ERROR!

!testRun: #CartTest #test02 stamp: 'fr 11/18/2020 17:51:52'!
ERROR!
!Cart methodsFor: 'adding' stamp: 'fr 11/18/2020 17:51:58'!
add: aSmallInteger of: aString 
	self shouldBeImplemented.! !

!classDefinition: #Cart category: 'TusLibros - Exercise - I' stamp: 'fr 11/18/2020 17:52:32'!
Object subclass: #Cart
	instanceVariableNames: 'products'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros - Exercise - I'!
!Cart methodsFor: 'adding' stamp: 'fr 11/18/2020 17:52:31' prior: 50867832!
add: aQuantity of: anItem

	products _ {'978-92-8001-4214-3'} 
	
	! !

!testRun: #CartTest #test02 stamp: 'fr 11/18/2020 17:52:35'!
FAILURE!
!Cart methodsFor: 'testing' stamp: 'fr 11/18/2020 17:52:57' prior: 50867801!
isEmpty
	
	^products isEmpty! !

!testRun: #CartTest #test02 stamp: 'fr 11/18/2020 17:52:59'!
PASSED!

!testRun: #CartTest #test01 stamp: 'fr 11/18/2020 17:52:59'!
ERROR!

!testRun: #CartTest #test02 stamp: 'fr 11/18/2020 17:52:59'!
PASSED!

!testRun: #CartTest #test01 stamp: 'fr 11/18/2020 17:52:59'!
ERROR!
!CartTest methodsFor: 'as yet unclassified' stamp: 'fr 11/18/2020 17:53:14' prior: 50867791!
test01

	self assert: Cart newCart isEmpty! !

!testRun: #CartTest #test01 stamp: 'fr 11/18/2020 17:53:20'!
ERROR!
!Cart class methodsFor: 'instance creation' stamp: 'fr 11/18/2020 17:53:24'!
newCart
	"DO NOT FORGET TO RENAME COLLABORATORS AND REMOVE THIS COMMENT!!!!"
	self shouldBeImplemented.
	^self new initializeNewCart! !
!Cart class methodsFor: 'instance creation' stamp: 'fr 11/18/2020 17:53:28' prior: 50867870!
newCart
	
	^self new initializeNewCart! !

!testRun: #CartTest #test01 stamp: 'fr 11/18/2020 17:53:29'!
ERROR!
!Cart methodsFor: 'initialization' stamp: 'fr 11/18/2020 17:53:36'!
initializeNewCart
	self shouldBeImplemented.! !
!Cart methodsFor: 'initialization' stamp: 'fr 11/18/2020 17:53:40' prior: 50867884!
initializeNewCart
	
	products _ {}! !

!testRun: #CartTest #test01 stamp: 'fr 11/18/2020 17:53:41'!
PASSED!

!testRun: #CartTest #test02 stamp: 'fr 11/18/2020 17:53:43'!
PASSED!

!testRun: #CartTest #test01 stamp: 'fr 11/18/2020 17:53:43'!
PASSED!

!testRun: #CartTest #test02 stamp: 'fr 11/18/2020 17:53:43'!
PASSED!
!CartTest methodsFor: 'as yet unclassified' stamp: 'fr 11/18/2020 17:53:47' prior: 50867822!
test02
	
	| cart |
	cart _ Cart newCart.
	cart add: 1 of: '978-92-8001-4214-3'.
	self deny: cart isEmpty! !

!testRun: #CartTest #test02 stamp: 'fr 11/18/2020 17:53:48'!
PASSED!

!testRun: #CartTest #test01 stamp: 'fr 11/18/2020 17:53:48'!
PASSED!

!testRun: #CartTest #test02 stamp: 'fr 11/18/2020 17:53:48'!
PASSED!
!CartTest methodsFor: 'as yet unclassified' stamp: 'fr 11/18/2020 17:53:52'!
test03
	
	| cart |
	cart _ Cart newCart.
	cart add: 1 of: '978-92-8001-4214-3'.
	self deny: cart isEmpty! !
!CartTest methodsFor: 'as yet unclassified' stamp: 'fr 11/18/2020 17:54:42' prior: 50867915!
test03
	
	| cart |
	cart _ Cart newCart.
	cart add: 1 of: '978-92-8001-4214-3'.
	self assert: (cart includes: '978-92-8001-4214-3')! !

!testRun: #CartTest #test03 stamp: 'fr 11/18/2020 17:54:43'!
ERROR!
!Cart methodsFor: 'testing' stamp: 'fr 11/18/2020 17:54:55'!
includes: aString 
	self shouldBeImplemented.! !
!Cart methodsFor: 'testing' stamp: 'fr 11/18/2020 17:54:57' prior: 50867931!
includes: aString 
	
	! !
!Cart methodsFor: 'testing' stamp: 'fr 11/18/2020 17:55:01' prior: 50867935!
includes: anItem

	^true 
	
	! !

!testRun: #CartTest #test03 stamp: 'fr 11/18/2020 17:55:02'!
PASSED!

!testRun: #CartTest #test01 stamp: 'fr 11/18/2020 17:55:02'!
PASSED!

!testRun: #CartTest #test02 stamp: 'fr 11/18/2020 17:55:02'!
PASSED!

!testRun: #CartTest #test03 stamp: 'fr 11/18/2020 17:55:02'!
PASSED!
!CartTest methodsFor: 'as yet unclassified' stamp: 'fr 11/18/2020 17:55:04'!
test04
	
	| cart |
	cart _ Cart newCart.
	cart add: 1 of: '978-92-8001-4214-3'.
	self assert: (cart includes: '978-92-8001-4214-3')! !
!CartTest methodsFor: 'as yet unclassified' stamp: 'fr 11/18/2020 17:55:22' prior: 50867952!
test04

	self deny: (Cart newCart includes: '978-92-8001-4214-3')! !

!testRun: #CartTest #test04 stamp: 'fr 11/18/2020 17:55:23'!
FAILURE!
!Cart methodsFor: 'testing' stamp: 'fr 11/18/2020 17:55:36' prior: 50867939!
includes: anItem

	^products includes: anItem
	
	! !

!testRun: #CartTest #test04 stamp: 'fr 11/18/2020 17:55:37'!
PASSED!

!testRun: #CartTest #test01 stamp: 'fr 11/18/2020 17:55:37'!
PASSED!

!testRun: #CartTest #test02 stamp: 'fr 11/18/2020 17:55:37'!
PASSED!

!testRun: #CartTest #test03 stamp: 'fr 11/18/2020 17:55:37'!
PASSED!

!testRun: #CartTest #test04 stamp: 'fr 11/18/2020 17:55:37'!
PASSED!
!CartTest methodsFor: 'as yet unclassified' stamp: 'fr 11/18/2020 17:55:39'!
test05

	self deny: (Cart newCart includes: '978-92-8001-4214-3')! !
!CartTest methodsFor: 'as yet unclassified' stamp: 'fr 11/18/2020 17:58:05' prior: 50867982!
test05
	
	| cart |
	cart _ Cart newCart.
	cart add: 2 of: '978-92-8001-4214-3'.
	self deny: (cart occurrencesOf: '978-92-8001-4214-3') equals: 2! !
!CartTest methodsFor: 'as yet unclassified' stamp: 'fr 11/18/2020 17:58:13' prior: 50867988!
test05
	
	| cart |
	cart _ Cart newCart.
	cart add: 2 of: '978-92-8001-4214-3'.
	self assert: (cart occurrencesOf: '978-92-8001-4214-3') equals: 2! !

!testRun: #CartTest #test05 stamp: 'fr 11/18/2020 17:58:14'!
ERROR!

!testRun: #CartTest #test05 stamp: 'fr 11/18/2020 17:58:19'!
ERROR!

!testRun: #CartTest #test05 stamp: 'fr 11/18/2020 17:58:33'!
ERROR!
!Cart methodsFor: 'testing' stamp: 'fr 11/18/2020 17:58:41'!
occurrencesOf: aString 
	self shouldBeImplemented.! !
!Cart methodsFor: 'testing' stamp: 'fr 11/18/2020 17:58:43' prior: 50868010!
occurrencesOf: aString 
	
	! !
!Cart methodsFor: 'testing' stamp: 'fr 11/18/2020 17:58:46' prior: 50868015!
occurrencesOf: anItem

	 
	
	! !
!Cart methodsFor: 'testing' stamp: 'fr 11/18/2020 17:58:49' prior: 50868019!
occurrencesOf: anItem

	^2 
	
	! !

!testRun: #CartTest #test05 stamp: 'fr 11/18/2020 17:58:50'!
PASSED!

!testRun: #CartTest #test01 stamp: 'fr 11/18/2020 17:58:50'!
PASSED!

!testRun: #CartTest #test02 stamp: 'fr 11/18/2020 17:58:50'!
PASSED!

!testRun: #CartTest #test03 stamp: 'fr 11/18/2020 17:58:50'!
PASSED!

!testRun: #CartTest #test04 stamp: 'fr 11/18/2020 17:58:50'!
PASSED!

!testRun: #CartTest #test05 stamp: 'fr 11/18/2020 17:58:50'!
PASSED!
!CartTest methodsFor: 'as yet unclassified' stamp: 'fr 11/18/2020 17:58:53'!
test06
	
	| cart |
	cart _ Cart newCart.
	cart add: 2 of: '978-92-8001-4214-3'.
	self assert: (cart occurrencesOf: '978-92-8001-4214-3') equals: 2! !
!CartTest methodsFor: 'as yet unclassified' stamp: 'fr 11/18/2020 17:58:55' prior: 50868040!
test06
	
	| cart |
	cart _ Cart newCart.
	self assert: (cart occurrencesOf: '978-92-8001-4214-3') equals: 2! !
!CartTest methodsFor: 'as yet unclassified' stamp: 'fr 11/18/2020 17:59:04' prior: 50868048!
test06

	self assert: (Cart newCart occurrencesOf: '978-92-8001-4214-3') equals: 2! !
!CartTest methodsFor: 'as yet unclassified' stamp: 'fr 11/18/2020 17:59:06' prior: 50868055!
test06

	self assert: (Cart newCart occurrencesOf: '978-92-8001-4214-3') equals: 0! !

!testRun: #CartTest #test06 stamp: 'fr 11/18/2020 17:59:07'!
FAILURE!
!Cart methodsFor: 'testing' stamp: 'fr 11/18/2020 17:59:27' prior: 50868023!
occurrencesOf: anItem

	^products occurrences: anItem	
	! !
!Cart methodsFor: 'testing' stamp: 'fr 11/18/2020 17:59:43' prior: 50868069!
occurrencesOf: anItem

	^products occurrencesOf: anItem	
	! !

!testRun: #CartTest #test06 stamp: 'fr 11/18/2020 17:59:44'!
PASSED!

!testRun: #CartTest #test01 stamp: 'fr 11/18/2020 17:59:44'!
PASSED!

!testRun: #CartTest #test02 stamp: 'fr 11/18/2020 17:59:44'!
PASSED!

!testRun: #CartTest #test03 stamp: 'fr 11/18/2020 17:59:44'!
PASSED!

!testRun: #CartTest #test04 stamp: 'fr 11/18/2020 17:59:44'!
PASSED!

!testRun: #CartTest #test05 stamp: 'fr 11/18/2020 17:59:44'!
FAILURE!

!testRun: #CartTest #test06 stamp: 'fr 11/18/2020 17:59:44'!
PASSED!

!testRun: #CartTest #test05 stamp: 'fr 11/18/2020 17:59:44'!
FAILURE!

!testRun: #CartTest #test06 stamp: 'fr 11/18/2020 17:59:53'!
PASSED!

!testRun: #CartTest #test01 stamp: 'fr 11/18/2020 17:59:53'!
PASSED!

!testRun: #CartTest #test02 stamp: 'fr 11/18/2020 17:59:53'!
PASSED!

!testRun: #CartTest #test03 stamp: 'fr 11/18/2020 17:59:53'!
PASSED!

!testRun: #CartTest #test04 stamp: 'fr 11/18/2020 17:59:53'!
PASSED!

!testRun: #CartTest #test05 stamp: 'fr 11/18/2020 17:59:53'!
FAILURE!

!testRun: #CartTest #test06 stamp: 'fr 11/18/2020 17:59:53'!
PASSED!

!testRun: #CartTest #test05 stamp: 'fr 11/18/2020 17:59:53'!
FAILURE!
!Cart methodsFor: 'initialization' stamp: 'fr 11/18/2020 18:00:16' prior: 50867889!
initializeNewCart
	
	products _ Bag new.! !
!Cart methodsFor: 'adding' stamp: 'fr 11/18/2020 18:00:40' prior: 50867844!
add: aQuantity of: anItem

	products add: anItem withOccurrences: aQuantity 
	
	! !

!testRun: #CartTest #test05 stamp: 'fr 11/18/2020 18:00:42'!
PASSED!

!testRun: #CartTest #test06 stamp: 'fr 11/18/2020 18:00:43'!
PASSED!

!testRun: #CartTest #test01 stamp: 'fr 11/18/2020 18:00:43'!
PASSED!

!testRun: #CartTest #test02 stamp: 'fr 11/18/2020 18:00:43'!
PASSED!

!testRun: #CartTest #test03 stamp: 'fr 11/18/2020 18:00:43'!
PASSED!

!testRun: #CartTest #test04 stamp: 'fr 11/18/2020 18:00:43'!
PASSED!

!testRun: #CartTest #test05 stamp: 'fr 11/18/2020 18:00:43'!
PASSED!

!testRun: #CartTest #test06 stamp: 'fr 11/18/2020 18:00:43'!
PASSED!
!CartTest methodsFor: 'as yet unclassified' stamp: 'fr 11/18/2020 18:00:48'!
test07

	self assert: (Cart newCart occurrencesOf: '978-92-8001-4214-3') equals: 0! !
!CartTest methodsFor: 'as yet unclassified' stamp: 'fr 11/18/2020 18:02:49' prior: 50868141!
test07
	
	| cart |
	cart _ Cart newCart.
	self should: [cart add: 0 of: '']
	      raise:  Error - MessageNotUnderstood 
	      withMessageText: Cart invalidQuantityErrorDescription
! !
!CartTest methodsFor: 'as yet unclassified' stamp: 'fr 11/18/2020 18:03:15' prior: 50868147!
test07
	
	| cart |
	cart _ Cart newCart.
	self should: [cart add: 0 of: '978-92-8001-4214-3']
	      raise:  Error - MessageNotUnderstood 
	      withMessageText: Cart invalidQuantityErrorDescription
! !

!testRun: #CartTest #test07 stamp: 'fr 11/18/2020 18:04:41'!
ERROR!
!Cart class methodsFor: 'error description' stamp: 'fr 11/18/2020 18:04:55'!
invalidQuantityErrorDescription
	self shouldBeImplemented.! !
!Cart class methodsFor: 'error description' stamp: 'fr 11/18/2020 18:05:17' prior: 50868167!
invalidQuantityErrorDescription
	
	^'Quantity must be strictly positive'! !

!testRun: #CartTest #test07 stamp: 'fr 11/18/2020 18:05:21'!
FAILURE!
!Cart methodsFor: 'adding' stamp: 'fr 11/18/2020 18:05:51' prior: 50868118!
add: aQuantity of: anItem

	aQuantity <= 0 ifTrue: [self error: self class invalidQuantityErrorDescription].

	products add: anItem withOccurrences: aQuantity 
	
	! !

!testRun: #CartTest #test07 stamp: 'fr 11/18/2020 18:05:52'!
PASSED!

!testRun: #CartTest #test01 stamp: 'fr 11/18/2020 18:05:52'!
PASSED!

!testRun: #CartTest #test02 stamp: 'fr 11/18/2020 18:05:52'!
PASSED!

!testRun: #CartTest #test03 stamp: 'fr 11/18/2020 18:05:52'!
PASSED!

!testRun: #CartTest #test04 stamp: 'fr 11/18/2020 18:05:52'!
PASSED!

!testRun: #CartTest #test05 stamp: 'fr 11/18/2020 18:05:52'!
PASSED!

!testRun: #CartTest #test06 stamp: 'fr 11/18/2020 18:05:52'!
PASSED!

!testRun: #CartTest #test07 stamp: 'fr 11/18/2020 18:05:52'!
PASSED!
!Cart methodsFor: 'adding' stamp: 'fr 11/18/2020 18:06:58' prior: 50868179!
add: aQuantity of: anItem

	aQuantity = 0 ifTrue: [self error: self class invalidQuantityErrorDescription].

	products add: anItem withOccurrences: aQuantity 
	
	! !

!testRun: #CartTest #test07 stamp: 'fr 11/18/2020 18:06:59'!
PASSED!

!testRun: #CartTest #test07 stamp: 'fr 11/18/2020 18:07:00'!
PASSED!

!testRun: #CartTest #test01 stamp: 'fr 11/18/2020 18:07:00'!
PASSED!

!testRun: #CartTest #test02 stamp: 'fr 11/18/2020 18:07:00'!
PASSED!

!testRun: #CartTest #test03 stamp: 'fr 11/18/2020 18:07:00'!
PASSED!

!testRun: #CartTest #test04 stamp: 'fr 11/18/2020 18:07:00'!
PASSED!

!testRun: #CartTest #test05 stamp: 'fr 11/18/2020 18:07:00'!
PASSED!

!testRun: #CartTest #test06 stamp: 'fr 11/18/2020 18:07:00'!
PASSED!

!testRun: #CartTest #test07 stamp: 'fr 11/18/2020 18:07:00'!
PASSED!
!CartTest methodsFor: 'as yet unclassified' stamp: 'fr 11/18/2020 18:07:03'!
test08
	
	| cart |
	cart _ Cart newCart.
	self should: [cart add: 0 of: '978-92-8001-4214-3']
	      raise:  Error - MessageNotUnderstood 
	      withMessageText: Cart invalidQuantityErrorDescription
! !
!CartTest methodsFor: 'as yet unclassified' stamp: 'fr 11/18/2020 18:07:05' prior: 50868233!
test08
	
	| cart |
	cart _ Cart newCart.
	self should: [cart add: -1 of: '978-92-8001-4214-3']
	      raise:  Error - MessageNotUnderstood 
	      withMessageText: Cart invalidQuantityErrorDescription
! !

!testRun: #CartTest #test08 stamp: 'fr 11/18/2020 18:07:07'!
FAILURE!
!Cart methodsFor: 'adding' stamp: 'fr 11/18/2020 18:07:18' prior: 50868205!
add: aQuantity of: anItem

	aQuantity <= 0 ifTrue: [self error: self class invalidQuantityErrorDescription].

	products add: anItem withOccurrences: aQuantity 
	
	! !

!testRun: #CartTest #test08 stamp: 'fr 11/18/2020 18:07:19'!
PASSED!

!testRun: #CartTest #test01 stamp: 'fr 11/18/2020 18:07:19'!
PASSED!

!testRun: #CartTest #test02 stamp: 'fr 11/18/2020 18:07:19'!
PASSED!

!testRun: #CartTest #test03 stamp: 'fr 11/18/2020 18:07:19'!
PASSED!

!testRun: #CartTest #test04 stamp: 'fr 11/18/2020 18:07:19'!
PASSED!

!testRun: #CartTest #test05 stamp: 'fr 11/18/2020 18:07:19'!
PASSED!

!testRun: #CartTest #test06 stamp: 'fr 11/18/2020 18:07:19'!
PASSED!

!testRun: #CartTest #test07 stamp: 'fr 11/18/2020 18:07:19'!
PASSED!

!testRun: #CartTest #test08 stamp: 'fr 11/18/2020 18:07:19'!
PASSED!
!CartTest methodsFor: 'as yet unclassified' stamp: 'fr 11/18/2020 18:07:23'!
test09
	
	| cart |
	cart _ Cart newCart.
	self should: [cart add: -1 of: '978-92-8001-4214-3']
	      raise:  Error - MessageNotUnderstood 
	      withMessageText: Cart invalidQuantityErrorDescription
! !
!CartTest methodsFor: 'as yet unclassified' stamp: 'fr 11/18/2020 18:07:30' prior: 50868282!
test09
	
	| cart |
	cart _ Cart newCart.
	self should: [cart add: 2 of: '978-92-8001-4214-3']
	      raise:  Error - MessageNotUnderstood 
	      withMessageText: Cart invalidQuantityErrorDescription
! !
!CartTest methodsFor: 'as yet unclassified' stamp: 'fr 11/18/2020 18:07:47' prior: 50868292!
test09
	
	| cart |
	cart _ Cart newCart.
	self should: [cart add: 2 of: '975-95-8351-4584-1']
	      raise:  Error - MessageNotUnderstood 
	      withMessageText: Cart invalidQuantityErrorDescription
! !
!CartTest methodsFor: 'as yet unclassified' stamp: 'fr 11/18/2020 18:08:01' prior: 50868302!
test09
	
	| cart |
	cart _ Cart newCart.
	self should: [cart add: 2 of: '975-95-8351-4584-1']
	      raise:  Error - MessageNotUnderstood 
	      withMessageText: Cart invalidItemErrorDescription
! !

!testRun: #CartTest #test09 stamp: 'fr 11/18/2020 18:08:07'!
ERROR!
!Cart class methodsFor: 'error description' stamp: 'fr 11/18/2020 18:08:17'!
invalidItemErrorDescription
	self shouldBeImplemented.! !
!Cart class methodsFor: 'error description' stamp: 'fr 11/18/2020 18:09:20' prior: 50868323!
invalidItemErrorDescription
	
	^'Item is not in catalogue'! !

!testRun: #CartTest #test09 stamp: 'fr 11/18/2020 18:09:21'!
FAILURE!

!classDefinition: #Cart category: 'TusLibros - Exercise - I' stamp: 'fr 11/18/2020 18:10:02'!
Object subclass: #Cart
	instanceVariableNames: 'products catalog'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros - Exercise - I'!
!Cart methodsFor: 'adding' stamp: 'fr 11/18/2020 18:10:09' prior: 50868254!
add: aQuantity of: anItem

	aQuantity <= 0 ifTrue: [self error: self class invalidQuantityErrorDescription].
	(catalog includes: anItem) ifFalse: [self error: self class invalidItemErrorDescription].
	products add: anItem withOccurrences: aQuantity 
	
	! !
!Cart methodsFor: 'adding' stamp: 'fr 11/18/2020 18:10:12' prior: 50868343!
add: aQuantity of: anItem

	aQuantity <= 0 ifTrue: [self error: self class invalidQuantityErrorDescription].
	(catalog includes: anItem) ifFalse: [self error: self class invalidItemErrorDescription].
	
	products add: anItem withOccurrences: aQuantity 
	
	! !

!testRun: #CartTest #test09 stamp: 'fr 11/18/2020 18:10:40'!
ERROR!
!CartTest methodsFor: 'as yet unclassified' stamp: 'fr 11/18/2020 18:11:20' prior: 50868312!
test09
	
	| cart |
	cart _ Cart withCatalogue: (Array with: '').
	self should: [cart add: 2 of: '975-95-8351-4584-1']
	      raise:  Error - MessageNotUnderstood 
	      withMessageText: Cart invalidItemErrorDescription
! !
!CartTest methodsFor: 'as yet unclassified' stamp: 'fr 11/18/2020 18:12:39' prior: 50868368!
test09
	
	| cart |
	cart _ Cart withCatalogue: (Array with: '978-92-8001-4214-3').
	self should: [cart add: 2 of: '975-95-8351-4584-1']
	      raise:  Error - MessageNotUnderstood 
	      withMessageText: Cart invalidItemErrorDescription
! !

!testRun: #CartTest #test09 stamp: 'fr 11/18/2020 18:12:41'!
ERROR!
!Cart class methodsFor: 'instance creation' stamp: 'fr 11/18/2020 18:12:56'!
withCatalogue: anArray 
	"DO NOT FORGET TO RENAME COLLABORATORS AND REMOVE THIS COMMENT!!!!"
	self shouldBeImplemented.
	^self new initializeWithCatalogue: anArray ! !
!Cart class methodsFor: 'instance creation' stamp: 'fr 11/18/2020 18:13:00' prior: 50868391!
withCatalogue: anArray 
	
	^self new initializeWithCatalogue: anArray ! !
!Cart class methodsFor: 'instance creation' stamp: 'fr 11/18/2020 18:13:08' prior: 50868400!
withCatalogue: aCatalogue 
	
	^self new initializeWithCatalogue: aCatalogue ! !

!testRun: #CartTest #test09 stamp: 'fr 11/18/2020 18:13:09'!
ERROR!

!classDefinition: #Cart category: 'TusLibros - Exercise - I' stamp: 'fr 11/18/2020 18:13:16'!
Object subclass: #Cart
	instanceVariableNames: 'products catalog catalogue'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros - Exercise - I'!
!Cart methodsFor: 'initialization' stamp: 'fr 11/18/2020 18:13:16'!
initializeWithCatalogue: aCatalogue 
	self shouldBeImplemented.
	catalogue := aCatalogue.! !
!Cart methodsFor: 'initialization' stamp: 'fr 11/18/2020 18:13:25' prior: 50868421!
initializeWithCatalogue: aCatalogue 

	catalogue _ aCatalogue.! !
!Cart methodsFor: 'initialization' stamp: 'fr 11/18/2020 18:13:48' prior: 50868427!
initializeWithCatalogue: aCatalogue 

	products _ Bag new.
	catalogue _ aCatalogue.! !

!testRun: #CartTest #test09 stamp: 'fr 11/18/2020 18:13:49'!
ERROR!

!testRun: #CartTest #test09 stamp: 'fr 11/18/2020 18:14:01'!
ERROR!

!testRun: #CartTest #test01 stamp: 'fr 11/18/2020 18:14:07'!
PASSED!

!testRun: #CartTest #test02 stamp: 'fr 11/18/2020 18:14:07'!
ERROR!

!testRun: #CartTest #test03 stamp: 'fr 11/18/2020 18:14:07'!
ERROR!

!testRun: #CartTest #test04 stamp: 'fr 11/18/2020 18:14:07'!
PASSED!

!testRun: #CartTest #test05 stamp: 'fr 11/18/2020 18:14:07'!
ERROR!

!testRun: #CartTest #test06 stamp: 'fr 11/18/2020 18:14:07'!
PASSED!

!testRun: #CartTest #test07 stamp: 'fr 11/18/2020 18:14:07'!
PASSED!

!testRun: #CartTest #test08 stamp: 'fr 11/18/2020 18:14:07'!
PASSED!

!testRun: #CartTest #test09 stamp: 'fr 11/18/2020 18:14:07'!
ERROR!

!testRun: #CartTest #test09 stamp: 'fr 11/18/2020 18:14:14'!
ERROR!

!testRun: #CartTest #test09 stamp: 'fr 11/18/2020 18:14:20'!
ERROR!
!Cart methodsFor: 'adding' stamp: 'fr 11/18/2020 18:14:34' prior: 50868354!
add: aQuantity of: anItem

	aQuantity <= 0 ifTrue: [self error: self class invalidQuantityErrorDescription].
	(catalogue includes: anItem) ifFalse: [self error: self class invalidItemErrorDescription].
	
	products add: anItem withOccurrences: aQuantity 
	
	! !

!testRun: #CartTest #test09 stamp: 'fr 11/18/2020 18:14:35'!
PASSED!

!testRun: #CartTest #test01 stamp: 'fr 11/18/2020 18:14:35'!
PASSED!

!testRun: #CartTest #test02 stamp: 'fr 11/18/2020 18:14:35'!
ERROR!

!testRun: #CartTest #test03 stamp: 'fr 11/18/2020 18:14:35'!
ERROR!

!testRun: #CartTest #test04 stamp: 'fr 11/18/2020 18:14:35'!
PASSED!

!testRun: #CartTest #test05 stamp: 'fr 11/18/2020 18:14:35'!
ERROR!

!testRun: #CartTest #test06 stamp: 'fr 11/18/2020 18:14:35'!
PASSED!

!testRun: #CartTest #test07 stamp: 'fr 11/18/2020 18:14:35'!
PASSED!

!testRun: #CartTest #test08 stamp: 'fr 11/18/2020 18:14:35'!
PASSED!

!testRun: #CartTest #test09 stamp: 'fr 11/18/2020 18:14:35'!
PASSED!
!CartTest methodsFor: 'as yet unclassified' stamp: 'fr 11/18/2020 18:14:52'!
newCart

	^ Cart withCatalogue: (Array with: '978-92-8001-4214-3')! !
!CartTest methodsFor: 'as yet unclassified' stamp: 'fr 11/18/2020 18:14:52' prior: 50868378!
test09
	
	| cart |
	cart _ self newCart.
	self should: [cart add: 2 of: '975-95-8351-4584-1']
	      raise:  Error - MessageNotUnderstood 
	      withMessageText: Cart invalidItemErrorDescription
! !
!CartTest methodsFor: 'as yet unclassified' stamp: 'fr 11/18/2020 18:14:58' prior: 50868243!
test08
	
	| cart |
	cart _ self newCart.
	self should: [cart add: -1 of: '978-92-8001-4214-3']
	      raise:  Error - MessageNotUnderstood 
	      withMessageText: Cart invalidQuantityErrorDescription
! !
!CartTest methodsFor: 'as yet unclassified' stamp: 'fr 11/18/2020 18:15:01' prior: 50868156!
test07
	
	| cart |
	cart _ self newCart.
	self should: [cart add: 0 of: '978-92-8001-4214-3']
	      raise:  Error - MessageNotUnderstood 
	      withMessageText: Cart invalidQuantityErrorDescription
! !
!CartTest methodsFor: 'as yet unclassified' stamp: 'fr 11/18/2020 18:15:04' prior: 50868061!
test06

	self assert: (self newCart occurrencesOf: '978-92-8001-4214-3') equals: 0! !
!CartTest methodsFor: 'as yet unclassified' stamp: 'fr 11/18/2020 18:15:09' prior: 50867996!
test05
	
	| cart |
	cart _ self newCart.
	cart add: 2 of: '978-92-8001-4214-3'.
	self assert: (cart occurrencesOf: '978-92-8001-4214-3') equals: 2! !
!CartTest methodsFor: 'as yet unclassified' stamp: 'fr 11/18/2020 18:15:12' prior: 50867960!
test04

	self deny: (self newCart includes: '978-92-8001-4214-3')! !
!CartTest methodsFor: 'as yet unclassified' stamp: 'fr 11/18/2020 18:15:16' prior: 50867922!
test03
	
	| cart |
	cart _ self newCart.
	cart add: 1 of: '978-92-8001-4214-3'.
	self assert: (cart includes: '978-92-8001-4214-3')! !
!CartTest methodsFor: 'as yet unclassified' stamp: 'fr 11/18/2020 18:15:19' prior: 50867902!
test02
	
	| cart |
	cart _ self newCart.
	cart add: 1 of: '978-92-8001-4214-3'.
	self deny: cart isEmpty! !
!CartTest methodsFor: 'as yet unclassified' stamp: 'fr 11/18/2020 18:15:24' prior: 50867864!
test01

	self assert: self newCart isEmpty! !

!testRun: #CartTest #test01 stamp: 'fr 11/18/2020 18:15:25'!
PASSED!

!testRun: #CartTest #test01 stamp: 'fr 11/18/2020 18:15:25'!
PASSED!

!testRun: #CartTest #test02 stamp: 'fr 11/18/2020 18:15:25'!
PASSED!

!testRun: #CartTest #test03 stamp: 'fr 11/18/2020 18:15:25'!
PASSED!

!testRun: #CartTest #test04 stamp: 'fr 11/18/2020 18:15:25'!
PASSED!

!testRun: #CartTest #test05 stamp: 'fr 11/18/2020 18:15:25'!
PASSED!

!testRun: #CartTest #test06 stamp: 'fr 11/18/2020 18:15:25'!
PASSED!

!testRun: #CartTest #test07 stamp: 'fr 11/18/2020 18:15:25'!
PASSED!

!testRun: #CartTest #test08 stamp: 'fr 11/18/2020 18:15:25'!
PASSED!

!testRun: #CartTest #test09 stamp: 'fr 11/18/2020 18:15:25'!
PASSED!
!CartTest methodsFor: 'as yet unclassified' stamp: 'fr 11/18/2020 18:15:39'!
catalogue

	^ Array with: '978-92-8001-4214-3'! !
!CartTest methodsFor: 'as yet unclassified' stamp: 'fr 11/18/2020 18:15:39' prior: 50868499!
newCart

	^ Cart withCatalogue: (self catalogue)! !
!CartTest methodsFor: 'as yet unclassified' stamp: 'fr 11/18/2020 18:15:44' prior: 50868601!
newCart

	^ Cart withCatalogue: self catalogue! !
!CartTest methodsFor: 'as yet unclassified' stamp: 'fr 11/18/2020 18:16:17'!
bookInCatalogue

	^ '978-92-8001-4214-3'! !
!CartTest methodsFor: 'as yet unclassified' stamp: 'fr 11/18/2020 18:16:17' prior: 50868596!
catalogue

	^ Array with: self bookInCatalogue! !
!CartTest methodsFor: 'as yet unclassified' stamp: 'fr 11/18/2020 18:16:26' prior: 50868563!
test02
	
	| cart |
	cart _ self newCart.
	cart add: 1 of: self bookInCatalogue.
	self deny: cart isEmpty! !
!CartTest methodsFor: 'as yet unclassified' stamp: 'fr 11/18/2020 18:16:38' prior: 50868555!
test03
	
	| cart |
	cart _ self newCart.
	cart add: 1 of: self bookInCatalogue.
	self assert: (cart includes: self bookInCatalogue)! !
!CartTest methodsFor: 'as yet unclassified' stamp: 'fr 11/18/2020 18:16:45' prior: 50868549!
test04

	self deny: (self newCart includes: self bookInCatalogue)! !
!CartTest methodsFor: 'as yet unclassified' stamp: 'fr 11/18/2020 18:16:51' prior: 50868541!
test05
	
	| cart |
	cart _ self newCart.
	cart add: 2 of: self bookInCatalogue.
	self assert: (cart occurrencesOf: '978-92-8001-4214-3') equals: 2! !
!CartTest methodsFor: 'as yet unclassified' stamp: 'fr 11/18/2020 18:16:57' prior: 50868641!
test05
	
	| cart |
	cart _ self newCart.
	cart add: 2 of: self bookInCatalogue.
	self assert: (cart occurrencesOf: self bookInCatalogue) equals: 2! !
!CartTest methodsFor: 'as yet unclassified' stamp: 'fr 11/18/2020 18:17:02' prior: 50868535!
test06

	self assert: (self newCart occurrencesOf: self bookInCatalogue) equals: 0! !
!CartTest methodsFor: 'as yet unclassified' stamp: 'fr 11/18/2020 18:17:08' prior: 50868525!
test07
	
	| cart |
	cart _ self newCart.
	self should: [cart add: 0 of: self bookInCatalogue]
	      raise:  Error - MessageNotUnderstood 
	      withMessageText: Cart invalidQuantityErrorDescription
! !
!CartTest methodsFor: 'as yet unclassified' stamp: 'fr 11/18/2020 18:17:13' prior: 50868515!
test08
	
	| cart |
	cart _ self newCart.
	self should: [cart add: -1 of: self bookInCatalogue]
	      raise:  Error - MessageNotUnderstood 
	      withMessageText: Cart invalidQuantityErrorDescription
! !

!testRun: #CartTest #test08 stamp: 'fr 11/18/2020 18:17:14'!
PASSED!

!testRun: #CartTest #test01 stamp: 'fr 11/18/2020 18:17:14'!
PASSED!

!testRun: #CartTest #test02 stamp: 'fr 11/18/2020 18:17:14'!
PASSED!

!testRun: #CartTest #test03 stamp: 'fr 11/18/2020 18:17:14'!
PASSED!

!testRun: #CartTest #test04 stamp: 'fr 11/18/2020 18:17:14'!
PASSED!

!testRun: #CartTest #test05 stamp: 'fr 11/18/2020 18:17:14'!
PASSED!

!testRun: #CartTest #test06 stamp: 'fr 11/18/2020 18:17:14'!
PASSED!

!testRun: #CartTest #test07 stamp: 'fr 11/18/2020 18:17:14'!
PASSED!

!testRun: #CartTest #test08 stamp: 'fr 11/18/2020 18:17:14'!
PASSED!

!testRun: #CartTest #test09 stamp: 'fr 11/18/2020 18:17:14'!
PASSED!
!CartTest methodsFor: 'as yet unclassified' stamp: 'fr 11/18/2020 18:17:29'!
bookNotInCatalogue

	^ '975-95-8351-4584-1'! !
!CartTest methodsFor: 'as yet unclassified' stamp: 'fr 11/18/2020 18:17:29' prior: 50868505!
test09
	
	| cart |
	cart _ self newCart.
	self should: [cart add: 2 of: self bookNotInCatalogue]
	      raise:  Error - MessageNotUnderstood 
	      withMessageText: Cart invalidItemErrorDescription
! !

!methodRemoval: Cart class #newCart stamp: 'fr 11/18/2020 18:17:39'!
newCart
	
	^self new initializeNewCart!

!methodRemoval: Cart #initializeNewCart stamp: 'fr 11/18/2020 18:17:43'!
initializeNewCart
	
	products _ Bag new.!
!Cart methodsFor: 'adding' stamp: 'fr 11/18/2020 18:18:40'!
signalInvalidQuantityError

	^ self error: self class invalidQuantityErrorDescription! !
!Cart methodsFor: 'adding' stamp: 'fr 11/18/2020 18:18:40' prior: 50868466!
add: aQuantity of: anItem

	aQuantity <= 0 ifTrue: [self signalInvalidQuantityError].
	(catalogue includes: anItem) ifFalse: [self error: self class invalidItemErrorDescription].
	
	products add: anItem withOccurrences: aQuantity 
	
	! !
!Cart methodsFor: 'adding' stamp: 'fr 11/18/2020 18:18:55'!
signalInvalidItemError

	^ self error: self class invalidItemErrorDescription! !
!Cart methodsFor: 'adding' stamp: 'fr 11/18/2020 18:18:55' prior: 50868731!
add: aQuantity of: anItem

	aQuantity <= 0 ifTrue: [self signalInvalidQuantityError].
	(catalogue includes: anItem) ifFalse: [self signalInvalidItemError].
	
	products add: anItem withOccurrences: aQuantity 
	
	! !
!Cart methodsFor: 'adding' stamp: 'fr 11/18/2020 18:19:06'!
validateQuantity: aQuantity

	^ aQuantity <= 0 ifTrue: [self signalInvalidQuantityError]! !
!Cart methodsFor: 'adding' stamp: 'fr 11/18/2020 18:19:06' prior: 50868746!
add: aQuantity of: anItem

	self validateQuantity: aQuantity.
	(catalogue includes: anItem) ifFalse: [self signalInvalidItemError].
	
	products add: anItem withOccurrences: aQuantity 
	
	! !
!Cart methodsFor: 'adding' stamp: 'fr 11/18/2020 18:19:13'!
validateItem: anItem

	^ (catalogue includes: anItem) ifFalse: [self signalInvalidItemError]! !
!Cart methodsFor: 'adding' stamp: 'fr 11/18/2020 18:19:13' prior: 50868761!
add: aQuantity of: anItem

	self validateQuantity: aQuantity.
	self validateItem: anItem.
	
	products add: anItem withOccurrences: aQuantity 
	
	! !

!methodRemoval: CartTest #test08 stamp: 'fr 11/18/2020 18:20:29'!
test08
	
	| cart |
	cart _ self newCart.
	self should: [cart add: -1 of: self bookInCatalogue]
	      raise:  Error - MessageNotUnderstood 
	      withMessageText: Cart invalidQuantityErrorDescription
!
!CartTest methodsFor: 'tests' stamp: 'fr 11/18/2020 18:20:40'!
test08
	
	| cart |
	cart _ self newCart.
	self should: [cart add: 2 of: self bookNotInCatalogue]
	      raise:  Error - MessageNotUnderstood 
	      withMessageText: Cart invalidItemErrorDescription
! !

!methodRemoval: CartTest #test09 stamp: 'fr 11/18/2020 18:20:40'!
test09
	
	| cart |
	cart _ self newCart.
	self should: [cart add: 2 of: self bookNotInCatalogue]
	      raise:  Error - MessageNotUnderstood 
	      withMessageText: Cart invalidItemErrorDescription
!
!CartTest methodsFor: 'tests' stamp: 'fr 11/18/2020 18:20:42'!
test09
	
	| cart |
	cart _ self newCart.
	self should: [cart add: 2 of: self bookNotInCatalogue]
	      raise:  Error - MessageNotUnderstood 
	      withMessageText: Cart invalidItemErrorDescription
! !
!CartTest methodsFor: 'tests' stamp: 'fr 11/18/2020 18:21:09' prior: 50868808!
test09
	
	| cart |
	cart _ self newCart.
	
! !

cart _ Cart withCatalogue: {'Fede'}!

cart add: 2 of: 'Fede' !
!CartTest methodsFor: 'tests' stamp: 'fr 11/18/2020 18:22:47' prior: 50868817!
test09
	
	| cart |
	cart _ self newCart.
	cart add: 2 of: self bookInCatalogue.
! !
!CartTest methodsFor: 'tests' stamp: 'fr 11/18/2020 18:23:01' prior: 50868823!
test09
	
	| cart |
	cart _ self newCart.
	cart add: 2 of: self bookInCatalogue.
	
! !
!CartTest methodsFor: 'tests' stamp: 'fr 11/18/2020 18:23:03' prior: 50868829!
test09
	
	| cart |
	cart _ self newCart.
	cart add: 2 of: self bookInCatalogue.
	
	
! !
!CartTest methodsFor: 'tests' stamp: 'fr 11/18/2020 18:23:30' prior: 50868835!
test09
	
	| cart |
	cart _ self newCart.
		
	
! !
!CartTest methodsFor: 'tests' stamp: 'fr 11/18/2020 18:24:51' prior: 50868841!
test09
	
	self assert: self newCart listCart isEmpty
	
! !

!testRun: #CartTest #test09 stamp: 'fr 11/18/2020 18:24:54'!
ERROR!
!Cart methodsFor: 'listing' stamp: 'fr 11/18/2020 18:25:03'!
listCart
	self shouldBeImplemented.! !
!Cart methodsFor: 'listing' stamp: 'fr 11/18/2020 18:25:08' prior: 50868852!
listCart
	
	^{}! !

!testRun: #CartTest #test09 stamp: 'fr 11/18/2020 18:25:09'!
PASSED!

!testRun: #CartTest #test01 stamp: 'fr 11/18/2020 18:25:09'!
PASSED!

!testRun: #CartTest #test02 stamp: 'fr 11/18/2020 18:25:09'!
PASSED!

!testRun: #CartTest #test03 stamp: 'fr 11/18/2020 18:25:09'!
PASSED!

!testRun: #CartTest #test04 stamp: 'fr 11/18/2020 18:25:09'!
PASSED!

!testRun: #CartTest #test05 stamp: 'fr 11/18/2020 18:25:09'!
PASSED!

!testRun: #CartTest #test06 stamp: 'fr 11/18/2020 18:25:09'!
PASSED!

!testRun: #CartTest #test07 stamp: 'fr 11/18/2020 18:25:09'!
PASSED!

!testRun: #CartTest #test08 stamp: 'fr 11/18/2020 18:25:09'!
PASSED!

!testRun: #CartTest #test09 stamp: 'fr 11/18/2020 18:25:09'!
PASSED!
!CartTest methodsFor: 'tests' stamp: 'fr 11/18/2020 18:25:14'!
test10
	
	self assert: self newCart listCart isEmpty
	
! !

bag _ Bag new. !

bag add: 'Fede' withOccurrences: 5; add: 'Hola' withOccurrences: 3.  !

bag !

bag sortedElements !

bag sortedElements includes: 'Fede' !

bag includes: 'Fede' !

bag includes: 'Fede' !

bag isEmpty !

!testRun: #CartTest #test10 stamp: 'fr 11/18/2020 18:29:04'!
PASSED!

!testRun: #CartTest #test01 stamp: 'fr 11/18/2020 18:29:04'!
PASSED!

!testRun: #CartTest #test02 stamp: 'fr 11/18/2020 18:29:04'!
PASSED!

!testRun: #CartTest #test03 stamp: 'fr 11/18/2020 18:29:04'!
PASSED!

!testRun: #CartTest #test04 stamp: 'fr 11/18/2020 18:29:04'!
PASSED!

!testRun: #CartTest #test05 stamp: 'fr 11/18/2020 18:29:04'!
PASSED!

!testRun: #CartTest #test06 stamp: 'fr 11/18/2020 18:29:04'!
PASSED!

!testRun: #CartTest #test07 stamp: 'fr 11/18/2020 18:29:04'!
PASSED!

!testRun: #CartTest #test08 stamp: 'fr 11/18/2020 18:29:04'!
PASSED!

!testRun: #CartTest #test09 stamp: 'fr 11/18/2020 18:29:04'!
PASSED!

!testRun: #CartTest #test10 stamp: 'fr 11/18/2020 18:29:04'!
PASSED!
!CartTest methodsFor: 'tests' stamp: 'fr 11/18/2020 18:29:11'!
test11
	
	self assert: self newCart listCart isEmpty
	
! !
!CartTest methodsFor: 'tests' stamp: 'fr 11/18/2020 18:31:40' prior: 50868916!
test11
	
	| cart list |
	cart _ self newCart.
	cart add: 2 of: self bookInCatalogue.
	list _ cart listCart.
	
	self assert:  (list occurrencesOf: self bookInCatalogue) equals: 2
	
! !

!testRun: #CartTest #test11 stamp: 'fr 11/18/2020 18:31:45'!
FAILURE!

!methodRemoval: CartTest #test09 stamp: 'fr 11/18/2020 18:32:29'!
test09
	
	self assert: self newCart listCart isEmpty
	
!

!testRun: #CartTest #test11 stamp: 'fr 11/18/2020 18:34:59'!
FAILURE!
!Cart methodsFor: 'listing' stamp: 'fr 11/18/2020 18:35:12' prior: 50868856!
listCart
	
	^products copy! !

!testRun: #CartTest #test11 stamp: 'fr 11/18/2020 18:35:13'!
PASSED!

!testRun: #CartTest #test01 stamp: 'fr 11/18/2020 18:35:13'!
PASSED!

!testRun: #CartTest #test02 stamp: 'fr 11/18/2020 18:35:13'!
PASSED!

!testRun: #CartTest #test03 stamp: 'fr 11/18/2020 18:35:13'!
PASSED!

!testRun: #CartTest #test04 stamp: 'fr 11/18/2020 18:35:13'!
PASSED!

!testRun: #CartTest #test05 stamp: 'fr 11/18/2020 18:35:13'!
PASSED!

!testRun: #CartTest #test06 stamp: 'fr 11/18/2020 18:35:13'!
PASSED!

!testRun: #CartTest #test07 stamp: 'fr 11/18/2020 18:35:13'!
PASSED!

!testRun: #CartTest #test08 stamp: 'fr 11/18/2020 18:35:13'!
PASSED!

!testRun: #CartTest #test10 stamp: 'fr 11/18/2020 18:35:13'!
PASSED!

!testRun: #CartTest #test11 stamp: 'fr 11/18/2020 18:35:13'!
PASSED!
!CartTest methodsFor: 'tests' stamp: 'fr 11/18/2020 18:37:53' prior: 50868921!
test11
	
	| cart list |
	cart _ self newCart.
	cart add: 2 of: self bookInCatalogue.
	list _ cart listCart.
	
	self assert:  (list occurrencesOf: self bookInCatalogue) equals: 2.
	self assert: list size equals: 2
	
! !
!CartTest methodsFor: 'tests' stamp: 'fr 11/18/2020 18:39:39' prior: 50868791!
test08
	
	| cart |
	cart _ self newCart.
	self should: [cart add: 2 of: self bookNotInCatalogue]
	      raise:  Error - MessageNotUnderstood 
	      withMessageText: Cart invalidItemErrorDescription.

	self should: [cart add: 2 of: self bookNotInCatalogue]
	      raise: Error - MessageNotUnderstood 
	      withExceptionDo: [:anError | 
								self assert: anError messageText equals: Cart invalidItemErrorDescription.
								self assert: cart isEmpty.
					  ] 
! !
!CartTest methodsFor: 'tests' stamp: 'fr 11/18/2020 18:39:46' prior: 50868976!
test08
	
	| cart |
	cart _ self newCart.

	self should: [cart add: 2 of: self bookNotInCatalogue]
	      raise: Error - MessageNotUnderstood 
	      withExceptionDo: [:anError | 
								self assert: anError messageText equals: Cart invalidItemErrorDescription.
								self assert: cart isEmpty.
					  ] 
! !

!testRun: #CartTest #test08 stamp: 'fr 11/18/2020 18:39:47'!
PASSED!

!testRun: #CartTest #test01 stamp: 'fr 11/18/2020 18:39:47'!
PASSED!

!testRun: #CartTest #test02 stamp: 'fr 11/18/2020 18:39:47'!
PASSED!

!testRun: #CartTest #test03 stamp: 'fr 11/18/2020 18:39:47'!
PASSED!

!testRun: #CartTest #test04 stamp: 'fr 11/18/2020 18:39:47'!
PASSED!

!testRun: #CartTest #test05 stamp: 'fr 11/18/2020 18:39:47'!
PASSED!

!testRun: #CartTest #test06 stamp: 'fr 11/18/2020 18:39:47'!
PASSED!

!testRun: #CartTest #test07 stamp: 'fr 11/18/2020 18:39:47'!
PASSED!

!testRun: #CartTest #test08 stamp: 'fr 11/18/2020 18:39:47'!
PASSED!

!testRun: #CartTest #test10 stamp: 'fr 11/18/2020 18:39:47'!
PASSED!

!testRun: #CartTest #test11 stamp: 'fr 11/18/2020 18:39:47'!
PASSED!
!CartTest methodsFor: 'tests' stamp: 'fr 11/18/2020 18:40:20' prior: 50868663!
test07
	
	| cart |
	cart _ self newCart.
	self should: [cart add: 0 of: self bookInCatalogue]
	      raise:  Error - MessageNotUnderstood 
	      withExceptionDo: [:anError |
								self assert: anError messageText equals: Cart invalidItemErrorDescription.
								self assert: cart isEmpty.
		]
! !
!CartTest methodsFor: 'tests' stamp: 'fr 11/18/2020 18:40:25' prior: 50869031!
test07
	
	| cart |
	cart _ self newCart.
	self should: [cart add: 0 of: self bookInCatalogue]
	      raise:  Error - MessageNotUnderstood 
	      withExceptionDo: [:anError |
								self assert: anError messageText equals: Cart invalidQuantityErrorDescription .
								self assert: cart isEmpty.
		]
! !
!CartTest methodsFor: 'tests' stamp: 'fr 11/18/2020 18:40:25' prior: 50869043!
test07
	
	| cart |
	cart _ self newCart.
	self should: [cart add: 0 of: self bookInCatalogue]
	      raise:  Error - MessageNotUnderstood 
	      withExceptionDo: [:anError |
								self assert: anError messageText equals: Cart invalidQuantityErrorDescription.
								self assert: cart isEmpty.
		]
! !

!testRun: #CartTest #test07 stamp: 'fr 11/18/2020 18:40:26'!
PASSED!

!testRun: #CartTest #test01 stamp: 'fr 11/18/2020 18:40:26'!
PASSED!

!testRun: #CartTest #test02 stamp: 'fr 11/18/2020 18:40:26'!
PASSED!

!testRun: #CartTest #test03 stamp: 'fr 11/18/2020 18:40:26'!
PASSED!

!testRun: #CartTest #test04 stamp: 'fr 11/18/2020 18:40:26'!
PASSED!

!testRun: #CartTest #test05 stamp: 'fr 11/18/2020 18:40:26'!
PASSED!

!testRun: #CartTest #test06 stamp: 'fr 11/18/2020 18:40:26'!
PASSED!

!testRun: #CartTest #test07 stamp: 'fr 11/18/2020 18:40:26'!
PASSED!

!testRun: #CartTest #test08 stamp: 'fr 11/18/2020 18:40:26'!
PASSED!

!testRun: #CartTest #test10 stamp: 'fr 11/18/2020 18:40:26'!
PASSED!

!testRun: #CartTest #test11 stamp: 'fr 11/18/2020 18:40:26'!
PASSED!
!CartTest methodsFor: 'tests' stamp: 'fr 11/18/2020 18:41:15' prior: 50869056!
test07
	
	| cart |
	cart _ self newCart.
	self should: [cart add: 0 of: self bookInCatalogue]
	      raise:  Error - MessageNotUnderstood 
	      withExceptionDo: [:anError |
								self assert: anError messageText equals: Cart invalidQuantityErrorDescription.
								self assert: cart isEmpty.
					  ]
! !
!CartTest methodsFor: 'tests' stamp: 'fr 11/18/2020 18:41:43'!
test01NewCartIsEmpty

	self assert: self newCart isEmpty! !

!methodRemoval: CartTest #test01 stamp: 'fr 11/18/2020 18:41:43'!
test01

	self assert: self newCart isEmpty!
!CartTest methodsFor: 'tests' stamp: 'fr 11/18/2020 18:42:04'!
test02CartIsNotEmptyAfterAddingAnItem
	
	| cart |
	cart _ self newCart.
	cart add: 1 of: self bookInCatalogue.
	self deny: cart isEmpty! !

!methodRemoval: CartTest #test02 stamp: 'fr 11/18/2020 18:42:04'!
test02
	
	| cart |
	cart _ self newCart.
	cart add: 1 of: self bookInCatalogue.
	self deny: cart isEmpty!
!CartTest methodsFor: 'tests' stamp: 'fr 11/18/2020 18:42:25'!
test03CartIncludesAddedItems
	
	| cart |
	cart _ self newCart.
	cart add: 1 of: self bookInCatalogue.
	self assert: (cart includes: self bookInCatalogue)! !

!methodRemoval: CartTest #test03 stamp: 'fr 11/18/2020 18:42:25'!
test03
	
	| cart |
	cart _ self newCart.
	cart add: 1 of: self bookInCatalogue.
	self assert: (cart includes: self bookInCatalogue)!
!CartTest methodsFor: 'tests' stamp: 'fr 11/18/2020 18:42:37'!
test04CartDoesNotIncludeNotAddedItems

	self deny: (self newCart includes: self bookInCatalogue)! !

!methodRemoval: CartTest #test04 stamp: 'fr 11/18/2020 18:42:37'!
test04

	self deny: (self newCart includes: self bookInCatalogue)!
!CartTest methodsFor: 'tests' stamp: 'fr 11/18/2020 18:44:21'!
test05CartRegistersItemsQuantitiesProperly
	
	| cart |
	cart _ self newCart.
	cart add: 2 of: self bookInCatalogue.
	self assert: (cart occurrencesOf: self bookInCatalogue) equals: 2! !

!methodRemoval: CartTest #test05 stamp: 'fr 11/18/2020 18:44:21'!
test05
	
	| cart |
	cart _ self newCart.
	cart add: 2 of: self bookInCatalogue.
	self assert: (cart occurrencesOf: self bookInCatalogue) equals: 2!
!CartTest methodsFor: 'tests' stamp: 'fr 11/18/2020 18:44:41'!
test05CartRegistersQuantitiesOfAddedItemsProperly
	
	| cart |
	cart _ self newCart.
	cart add: 2 of: self bookInCatalogue.
	self assert: (cart occurrencesOf: self bookInCatalogue) equals: 2! !

!methodRemoval: CartTest #test05CartRegistersItemsQuantitiesProperly stamp: 'fr 11/18/2020 18:44:41'!
test05CartRegistersItemsQuantitiesProperly
	
	| cart |
	cart _ self newCart.
	cart add: 2 of: self bookInCatalogue.
	self assert: (cart occurrencesOf: self bookInCatalogue) equals: 2!
!CartTest methodsFor: 'tests' stamp: 'fr 11/18/2020 18:45:04'!
test06CarDoesNotRegisterQuantitiesOfNonAddedItems

	self assert: (self newCart occurrencesOf: self bookInCatalogue) equals: 0! !

!methodRemoval: CartTest #test06 stamp: 'fr 11/18/2020 18:45:04'!
test06

	self assert: (self newCart occurrencesOf: self bookInCatalogue) equals: 0!
!CartTest methodsFor: 'tests' stamp: 'fr 11/18/2020 18:45:31'!
test06CarDoesNotRegisterQuantitiesOfNotAddedItems

	self assert: (self newCart occurrencesOf: self bookInCatalogue) equals: 0! !

!methodRemoval: CartTest #test06CarDoesNotRegisterQuantitiesOfNonAddedItems stamp: 'fr 11/18/2020 18:45:31'!
test06CarDoesNotRegisterQuantitiesOfNonAddedItems

	self assert: (self newCart occurrencesOf: self bookInCatalogue) equals: 0!
!CartTest methodsFor: 'tests' stamp: 'fr 11/18/2020 18:45:57'!
test07AddingQuantityMustBeStrictlyPositive
	
	| cart |
	cart _ self newCart.
	self should: [cart add: 0 of: self bookInCatalogue]
	      raise:  Error - MessageNotUnderstood 
	      withExceptionDo: [:anError |
								self assert: anError messageText equals: Cart invalidQuantityErrorDescription.
								self assert: cart isEmpty.
					  ]
! !

!methodRemoval: CartTest #test07 stamp: 'fr 11/18/2020 18:45:57'!
test07
	
	| cart |
	cart _ self newCart.
	self should: [cart add: 0 of: self bookInCatalogue]
	      raise:  Error - MessageNotUnderstood 
	      withExceptionDo: [:anError |
								self assert: anError messageText equals: Cart invalidQuantityErrorDescription.
								self assert: cart isEmpty.
					  ]
!
!CartTest methodsFor: 'tests' stamp: 'fr 11/18/2020 18:46:23'!
test08CanNotAddItemsThatAreNotInCatalogue
	
	| cart |
	cart _ self newCart.

	self should: [cart add: 2 of: self bookNotInCatalogue]
	      raise: Error - MessageNotUnderstood 
	      withExceptionDo: [:anError | 
								self assert: anError messageText equals: Cart invalidItemErrorDescription.
								self assert: cart isEmpty.
					  ] 
! !

!methodRemoval: CartTest #test08 stamp: 'fr 11/18/2020 18:46:23'!
test08
	
	| cart |
	cart _ self newCart.

	self should: [cart add: 2 of: self bookNotInCatalogue]
	      raise: Error - MessageNotUnderstood 
	      withExceptionDo: [:anError | 
								self assert: anError messageText equals: Cart invalidItemErrorDescription.
								self assert: cart isEmpty.
					  ] 
!
!CartTest methodsFor: 'tests' stamp: 'fr 11/18/2020 18:46:28'!
test09
	
	self assert: self newCart listCart isEmpty
	
! !

!methodRemoval: CartTest #test10 stamp: 'fr 11/18/2020 18:46:28'!
test10
	
	self assert: self newCart listCart isEmpty
	
!
!CartTest methodsFor: 'tests' stamp: 'fr 11/18/2020 18:46:52'!
test09ListForANewCartIsEmpty
	
	self assert: self newCart listCart isEmpty
	
! !

!methodRemoval: CartTest #test09 stamp: 'fr 11/18/2020 18:46:52'!
test09
	
	self assert: self newCart listCart isEmpty
	
!
!CartTest methodsFor: 'tests' stamp: 'fr 11/18/2020 18:47:22'!
test10ListHoldsAddedItemsWithCorrectQuantities
	
	| cart list |
	cart _ self newCart.
	cart add: 2 of: self bookInCatalogue.
	list _ cart listCart.
	
	self assert:  (list occurrencesOf: self bookInCatalogue) equals: 2.
	self assert: list size equals: 2
	
! !

!methodRemoval: CartTest #test11 stamp: 'fr 11/18/2020 18:47:22'!
test11
	
	| cart list |
	cart _ self newCart.
	cart add: 2 of: self bookInCatalogue.
	list _ cart listCart.
	
	self assert:  (list occurrencesOf: self bookInCatalogue) equals: 2.
	self assert: list size equals: 2
	
!

!classDefinition: #Cart category: 'TusLibros - Exercise - I' stamp: 'fr 11/18/2020 18:47:46'!
Object subclass: #Cart
	instanceVariableNames: 'items catalog catalogue'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros - Exercise - I'!
!Cart methodsFor: 'as yet unclassified' stamp: 'fr 11/18/2020 18:47:46' prior: 50868074!
occurrencesOf: anItem

	^items occurrencesOf: anItem	
	! !
!Cart methodsFor: 'as yet unclassified' stamp: 'fr 11/18/2020 18:47:46' prior: 50867851!
isEmpty
	
	^items isEmpty! !
!Cart methodsFor: 'as yet unclassified' stamp: 'fr 11/18/2020 18:47:46' prior: 50868432!
initializeWithCatalogue: aCatalogue 

	items _ Bag new.
	catalogue _ aCatalogue.! !
!Cart methodsFor: 'as yet unclassified' stamp: 'fr 11/18/2020 18:47:46' prior: 50868775!
add: aQuantity of: anItem

	self validateQuantity: aQuantity.
	self validateItem: anItem.
	
	items add: anItem withOccurrences: aQuantity 
	
	! !
!Cart methodsFor: 'as yet unclassified' stamp: 'fr 11/18/2020 18:47:46' prior: 50867967!
includes: anItem

	^items includes: anItem
	
	! !
!Cart methodsFor: 'as yet unclassified' stamp: 'fr 11/18/2020 18:47:46' prior: 50868938!
listCart
	
	^items copy! !

----SNAPSHOT----(18 November 2020 18:54:59) CuisUniversity-4384.image priorSource: 17155784!

----SNAPSHOT----(18 November 2020 18:55:08) CuisUniversity-4384.image priorSource: 17205818!

----SNAPSHOT----(18 November 2020 18:56:00) CuisUniversity-4384.image priorSource: 17205912!
!CartTest methodsFor: 'utils' stamp: 'fr 11/18/2020 18:56:16' prior: 50868615!
catalogue

	^ {self bookInCatalogue}! !

!testRun: #CartTest #test01NewCartIsEmpty stamp: 'fr 11/18/2020 18:56:18'!
PASSED!

!testRun: #CartTest #test02CartIsNotEmptyAfterAddingAnItem stamp: 'fr 11/18/2020 18:56:18'!
PASSED!

!testRun: #CartTest #test03CartIncludesAddedItems stamp: 'fr 11/18/2020 18:56:18'!
PASSED!

!testRun: #CartTest #test04CartDoesNotIncludeNotAddedItems stamp: 'fr 11/18/2020 18:56:18'!
PASSED!

!testRun: #CartTest #test05CartRegistersQuantitiesOfAddedItemsProperly stamp: 'fr 11/18/2020 18:56:18'!
PASSED!

!testRun: #CartTest #test06CarDoesNotRegisterQuantitiesOfNotAddedItems stamp: 'fr 11/18/2020 18:56:18'!
PASSED!

!testRun: #CartTest #test07AddingQuantityMustBeStrictlyPositive stamp: 'fr 11/18/2020 18:56:18'!
PASSED!

!testRun: #CartTest #test08CanNotAddItemsThatAreNotInCatalogue stamp: 'fr 11/18/2020 18:56:18'!
PASSED!

!testRun: #CartTest #test09ListForANewCartIsEmpty stamp: 'fr 11/18/2020 18:56:18'!
PASSED!

!testRun: #CartTest #test10ListHoldsAddedItemsWithCorrectQuantities stamp: 'fr 11/18/2020 18:56:18'!
PASSED!

----SNAPSHOT----(18 November 2020 18:56:32) CuisUniversity-4384.image priorSource: 17206006!
!Cart methodsFor: 'validation' stamp: 'fr 11/18/2020 18:57:32'!
canAdd: anItem

	^ catalogue includes: anItem! !
!Cart methodsFor: 'validation' stamp: 'fr 11/18/2020 18:57:32' prior: 50868769!
validateItem: anItem

	^ (self canAdd: anItem) ifFalse: [self signalInvalidItemError]! !
!Cart methodsFor: 'validation' stamp: 'fr 11/18/2020 18:58:00' prior: 50869385!
validateItem: anItem

	^ (catalogue includes: anItem) ifFalse: [self signalInvalidItemError]! !

!methodRemoval: Cart #canAdd: stamp: 'fr 11/18/2020 18:58:15'!
canAdd: anItem

	^ catalogue includes: anItem!

!testRun: #CartTest #test01NewCartIsEmpty stamp: 'fr 11/18/2020 18:58:17'!
PASSED!

!testRun: #CartTest #test02CartIsNotEmptyAfterAddingAnItem stamp: 'fr 11/18/2020 18:58:17'!
PASSED!

!testRun: #CartTest #test03CartIncludesAddedItems stamp: 'fr 11/18/2020 18:58:17'!
PASSED!

!testRun: #CartTest #test04CartDoesNotIncludeNotAddedItems stamp: 'fr 11/18/2020 18:58:17'!
PASSED!

!testRun: #CartTest #test05CartRegistersQuantitiesOfAddedItemsProperly stamp: 'fr 11/18/2020 18:58:17'!
PASSED!

!testRun: #CartTest #test06CarDoesNotRegisterQuantitiesOfNotAddedItems stamp: 'fr 11/18/2020 18:58:17'!
PASSED!

!testRun: #CartTest #test07AddingQuantityMustBeStrictlyPositive stamp: 'fr 11/18/2020 18:58:17'!
PASSED!

!testRun: #CartTest #test08CanNotAddItemsThatAreNotInCatalogue stamp: 'fr 11/18/2020 18:58:17'!
PASSED!

!testRun: #CartTest #test09ListForANewCartIsEmpty stamp: 'fr 11/18/2020 18:58:17'!
PASSED!

!testRun: #CartTest #test10ListHoldsAddedItemsWithCorrectQuantities stamp: 'fr 11/18/2020 18:58:17'!
PASSED!

----SNAPSHOT----(18 November 2020 19:02:38) CuisUniversity-4384.image priorSource: 17207264!