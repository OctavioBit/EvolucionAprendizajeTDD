----End fileIn of /home/jadmin/Documents/GIT/IS1 Ejercicios de la CÃ¡tedra/20-TusLibros/Iteracion2/TusLibros-33.st----!
!Cashier methodsFor: 'checkout - private' stamp: 'JEA 11/26/2020 20:49:55' prior: 50870913!
createSale

	^total
! !

!classRemoval: #Sale stamp: 'JEA 11/26/2020 20:49:57'!
Object subclass: #Sale
	instanceVariableNames: 'total'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

!testRun: #CartTest #test01NewCartsAreCreatedEmpty stamp: 'JEA 11/26/2020 20:50:02'!
PASSED!

!testRun: #CartTest #test02CanNotAddItemsThatDoNotBelongToStore stamp: 'JEA 11/26/2020 20:50:02'!
PASSED!

!testRun: #CartTest #test03AfterAddingAnItemTheCartIsNotEmptyAnymore stamp: 'JEA 11/26/2020 20:50:02'!
PASSED!

!testRun: #CartTest #test04CanNotAddNonPositiveNumberOfItems stamp: 'JEA 11/26/2020 20:50:02'!
PASSED!

!testRun: #CartTest #test05CanNotAddMoreThanOneItemNotSellByTheStore stamp: 'JEA 11/26/2020 20:50:02'!
PASSED!

!testRun: #CartTest #test06CartRemembersAddedItems stamp: 'JEA 11/26/2020 20:50:02'!
PASSED!

!testRun: #CartTest #test07CartDoesNotHoldNotAddedItems stamp: 'JEA 11/26/2020 20:50:02'!
PASSED!

!testRun: #CartTest #test08CartRemembersTheNumberOfAddedItems stamp: 'JEA 11/26/2020 20:50:02'!
PASSED!

!testRun: #CashierTest #test01CanNotCheckoutAnEmptyCart stamp: 'JEA 11/26/2020 20:50:02'!
PASSED!

!testRun: #CashierTest #test02CalculatedTotalIsCorrect stamp: 'JEA 11/26/2020 20:50:02'!
PASSED!

!testRun: #CashierTest #test03CanNotCheckoutWithAnExpiredCreditCart stamp: 'JEA 11/26/2020 20:50:02'!
PASSED!

!testRun: #CashierTest #test04CheckoutRegistersASale stamp: 'JEA 11/26/2020 20:50:02'!
ERROR!

!testRun: #CashierTest #test05CashierChargesCreditCardUsingMerchantProcessor stamp: 'JEA 11/26/2020 20:50:02'!
PASSED!

!testRun: #CashierTest #test06CashierDoesNotSaleWhenTheCreditCardHasNoCredit stamp: 'JEA 11/26/2020 20:50:02'!
PASSED!

!testRun: #CashierTest #test04CheckoutRegistersASale stamp: 'JEA 11/26/2020 20:50:02'!
ERROR!
!CashierTest methodsFor: 'tests' stamp: 'JEA 11/26/2020 20:50:34' prior: 50871026!
test04CheckoutRegistersASale

	| cart cashier salesBook total |

	cart := testObjectsFactory createCart.
	cart add: testObjectsFactory itemSellByTheStore.
	salesBook := OrderedCollection new.
 
	cashier:= Cashier 
		toCheckout: cart 
		charging: testObjectsFactory notExpiredCreditCard
		throught: self
		on: testObjectsFactory today
		registeringOn: salesBook.
		
	total := cashier checkOut.
					
	self assert: salesBook size = 1.
	self assert: salesBook first = total.! !

!testRun: #CashierTest #test06CashierDoesNotSaleWhenTheCreditCardHasNoCredit stamp: 'JEA 11/26/2020 20:50:41'!
PASSED!

!testRun: #CartTest #test01NewCartsAreCreatedEmpty stamp: 'JEA 11/26/2020 20:50:41'!
PASSED!

!testRun: #CartTest #test02CanNotAddItemsThatDoNotBelongToStore stamp: 'JEA 11/26/2020 20:50:41'!
PASSED!

!testRun: #CartTest #test03AfterAddingAnItemTheCartIsNotEmptyAnymore stamp: 'JEA 11/26/2020 20:50:41'!
PASSED!

!testRun: #CartTest #test04CanNotAddNonPositiveNumberOfItems stamp: 'JEA 11/26/2020 20:50:41'!
PASSED!

!testRun: #CartTest #test05CanNotAddMoreThanOneItemNotSellByTheStore stamp: 'JEA 11/26/2020 20:50:41'!
PASSED!

!testRun: #CartTest #test06CartRemembersAddedItems stamp: 'JEA 11/26/2020 20:50:41'!
PASSED!

!testRun: #CartTest #test07CartDoesNotHoldNotAddedItems stamp: 'JEA 11/26/2020 20:50:41'!
PASSED!

!testRun: #CartTest #test08CartRemembersTheNumberOfAddedItems stamp: 'JEA 11/26/2020 20:50:41'!
PASSED!

!testRun: #CashierTest #test01CanNotCheckoutAnEmptyCart stamp: 'JEA 11/26/2020 20:50:41'!
PASSED!

!testRun: #CashierTest #test02CalculatedTotalIsCorrect stamp: 'JEA 11/26/2020 20:50:41'!
PASSED!

!testRun: #CashierTest #test03CanNotCheckoutWithAnExpiredCreditCart stamp: 'JEA 11/26/2020 20:50:41'!
PASSED!

!testRun: #CashierTest #test04CheckoutRegistersASale stamp: 'JEA 11/26/2020 20:50:41'!
PASSED!

!testRun: #CashierTest #test05CashierChargesCreditCardUsingMerchantProcessor stamp: 'JEA 11/26/2020 20:50:41'!
PASSED!

!testRun: #CashierTest #test06CashierDoesNotSaleWhenTheCreditCardHasNoCredit stamp: 'JEA 11/26/2020 20:50:41'!
PASSED!

TestCase subclass: #InterfazRestTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

!classDefinition: #InterfazRestTest category: 'TusLibros' stamp: 'JEA 11/26/2020 20:53:42'!
TestCase subclass: #InterfazRestTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!
!InterfazRestTest methodsFor: 'tests' stamp: 'JEA 11/26/2020 20:54:10'!
test01! !
!InterfazRestTest methodsFor: 'tests' stamp: 'JEA 11/26/2020 20:55:04'!
test01cannotCreateCartWithInvalidClientAutentication

	! !

!methodRemoval: InterfazRestTest #test01 stamp: 'JEA 11/26/2020 20:55:08'!
test01!

TestCase subclass: #InterfazRestTest
	instanceVariableNames: 'testObjectsFactory'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

!classDefinition: #InterfazRestTest category: 'TusLibros' stamp: 'JEA 11/26/2020 20:56:40'!
TestCase subclass: #InterfazRestTest
	instanceVariableNames: 'testObjectsFactory'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!
!InterfazRestTest methodsFor: 'setup' stamp: 'JEA 11/26/2020 20:57:00' overrides: 16927572!
setUp 

	testObjectsFactory := StoreTestObjectsFactory new.! !

!classDefinition: #AuthenticatorSimulator category: 'TusLibros' stamp: 'JEA 11/26/2020 21:05:55'!
Object subclass: #AuthenticatorSimulator
	instanceVariableNames: 'authenticateBehavior'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

!classDefinition: #InterfazRest category: 'TusLibros' stamp: 'JEA 11/26/2020 21:06:17'!
Object subclass: #InterfazRest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!
!InterfazRestTest methodsFor: 'tests' stamp: 'JEA 11/26/2020 21:05:24'!
test01cannotCreateCartForInvalidClientID
	| interfazRest authenticatorSimulator |
	
	authenticatorSimulator := AuthenticatorSimulator new.
	authenticatorSimulator := 'simular cliente invalido'.
	
	interfazRest := InterfazRest newWithAuthenticator: authenticatorSimulator.
	
	self should: [ interfazRest 
				createCartFor: testObjectsFactory createClientID 
				password: testObjectsFactory createPassword. ]
		raise: Error
		withMessageText: InterfazRest cannotCreateCartForInvalidClientIDMessage.! !

!methodRemoval: InterfazRestTest #test01cannotCreateCartWithInvalidClientAutentication stamp: 'JEA 11/26/2020 21:06:34'!
test01cannotCreateCartWithInvalidClientAutentication

	!

!testRun: #InterfazRestTest #test01cannotCreateCartForInvalidClientID stamp: 'JEA 11/26/2020 21:06:36'!
ERROR!

!testRun: #InterfazRestTest #test01cannotCreateCartForInvalidClientID stamp: 'JEA 11/26/2020 21:06:36'!
ERROR!

!testRun: #InterfazRestTest #test01cannotCreateCartForInvalidClientID stamp: 'JEA 11/26/2020 21:06:52'!
ERROR!
!InterfazRest class methodsFor: 'instance creation' stamp: 'JEA 11/26/2020 21:07:37'!
newWithAuthenticator: anAuthenticator! !

!testRun: #CartTest #test01NewCartsAreCreatedEmpty stamp: 'JEA 11/26/2020 21:07:40'!
PASSED!

!testRun: #CartTest #test02CanNotAddItemsThatDoNotBelongToStore stamp: 'JEA 11/26/2020 21:07:40'!
PASSED!

!testRun: #CartTest #test03AfterAddingAnItemTheCartIsNotEmptyAnymore stamp: 'JEA 11/26/2020 21:07:40'!
PASSED!

!testRun: #CartTest #test04CanNotAddNonPositiveNumberOfItems stamp: 'JEA 11/26/2020 21:07:40'!
PASSED!

!testRun: #CartTest #test05CanNotAddMoreThanOneItemNotSellByTheStore stamp: 'JEA 11/26/2020 21:07:40'!
PASSED!

!testRun: #CartTest #test06CartRemembersAddedItems stamp: 'JEA 11/26/2020 21:07:40'!
PASSED!

!testRun: #CartTest #test07CartDoesNotHoldNotAddedItems stamp: 'JEA 11/26/2020 21:07:40'!
PASSED!

!testRun: #CartTest #test08CartRemembersTheNumberOfAddedItems stamp: 'JEA 11/26/2020 21:07:40'!
PASSED!

!testRun: #CashierTest #test01CanNotCheckoutAnEmptyCart stamp: 'JEA 11/26/2020 21:07:40'!
PASSED!

!testRun: #CashierTest #test02CalculatedTotalIsCorrect stamp: 'JEA 11/26/2020 21:07:40'!
PASSED!

!testRun: #CashierTest #test03CanNotCheckoutWithAnExpiredCreditCart stamp: 'JEA 11/26/2020 21:07:40'!
PASSED!

!testRun: #CashierTest #test04CheckoutRegistersASale stamp: 'JEA 11/26/2020 21:07:40'!
PASSED!

!testRun: #CashierTest #test05CashierChargesCreditCardUsingMerchantProcessor stamp: 'JEA 11/26/2020 21:07:40'!
PASSED!

!testRun: #CashierTest #test06CashierDoesNotSaleWhenTheCreditCardHasNoCredit stamp: 'JEA 11/26/2020 21:07:40'!
PASSED!

!testRun: #InterfazRestTest #test01cannotCreateCartForInvalidClientID stamp: 'JEA 11/26/2020 21:07:40'!
ERROR!

!testRun: #InterfazRestTest #test01cannotCreateCartForInvalidClientID stamp: 'JEA 11/26/2020 21:07:40'!
ERROR!

!testRun: #InterfazRestTest #test01cannotCreateCartForInvalidClientID stamp: 'JEA 11/26/2020 21:07:53'!
ERROR!

!testRun: #InterfazRestTest #test01cannotCreateCartForInvalidClientID stamp: 'JEA 11/26/2020 21:07:53'!
ERROR!
!InterfazRest class methodsFor: 'error messages' stamp: 'JEA 11/26/2020 21:09:20'!
cannotCreateCartForInvalidClientIDMessage

	^'Cannot create a cart for an invalid client ID.'! !

!testRun: #InterfazRestTest #test01cannotCreateCartForInvalidClientID stamp: 'JEA 11/26/2020 21:09:28'!
FAILURE!

!testRun: #InterfazRestTest #test01cannotCreateCartForInvalidClientID stamp: 'JEA 11/26/2020 21:09:28'!
FAILURE!

!classRenamed: #InterfazRest as: #RestInterface stamp: 'JEA 11/26/2020 21:11:18'!
Smalltalk renameClassNamed: #InterfazRest as: #RestInterface!
!InterfazRestTest methodsFor: 'as yet unclassified' stamp: 'JEA 11/26/2020 21:11:18' prior: 50871452!
test01cannotCreateCartForInvalidClientID
	| interfazRest authenticatorSimulator |
	
	authenticatorSimulator := AuthenticatorSimulator new.
	authenticatorSimulator := 'simular cliente invalido'.
	
	interfazRest := RestInterface newWithAuthenticator: authenticatorSimulator.
	
	self should: [ interfazRest 
				createCartFor: testObjectsFactory createClientID 
				password: testObjectsFactory createPassword. ]
		raise: Error
		withMessageText: RestInterface cannotCreateCartForInvalidClientIDMessage.! !

!classRenamed: #InterfazRestTest as: #RestInterfaceTest stamp: 'JEA 11/26/2020 21:11:38'!
Smalltalk renameClassNamed: #InterfazRestTest as: #RestInterfaceTest!
!StoreTestObjectsFactory methodsFor: 'rest interface' stamp: 'JEA 11/26/2020 21:12:43'!
createClientID

	^'1'.! !
!StoreTestObjectsFactory methodsFor: 'rest interface' stamp: 'JEA 11/26/2020 21:13:14'!
createPassword

	^'qzwxecrvtbynumi'.! !

!testRun: #RestInterfaceTest #test01cannotCreateCartForInvalidClientID stamp: 'JEA 11/26/2020 21:13:27'!
FAILURE!

!testRun: #RestInterfaceTest #test01cannotCreateCartForInvalidClientID stamp: 'JEA 11/26/2020 21:13:27'!
FAILURE!
!RestInterface methodsFor: 'no messages' stamp: 'JEA 11/26/2020 21:14:08'!
createCartFor: aClientID password: aPassword

	! !

!testRun: #RestInterfaceTest #test01cannotCreateCartForInvalidClientID stamp: 'JEA 11/26/2020 21:14:10'!
FAILURE!

!testRun: #RestInterfaceTest #test01cannotCreateCartForInvalidClientID stamp: 'JEA 11/26/2020 21:14:10'!
FAILURE!
!RestInterfaceTest methodsFor: 'tests - creating cart' stamp: 'JEA 11/26/2020 21:14:54' prior: 50871569!
test01cannotCreateCartForInvalidClientID
	| interfazRest authenticatorSimulator |
	
	authenticatorSimulator := AuthenticatorSimulator new.
	authenticatorSimulator := 'simular cliente invalido'.
	
	interfazRest := RestInterface newWithAuthenticator: authenticatorSimulator.
	
	self should: [ interfazRest 
				createCartFor: testObjectsFactory createClientID 
				password: testObjectsFactory createPassword. ]
		raise: Error
		withMessageText: RestInterface cannotCreateCartForInvalidClientIDMessage.! !
!RestInterface class methodsFor: 'instance creation' stamp: 'JEA 11/26/2020 21:16:33' prior: 50871487!
newWithAuthenticator: anAuthenticator

	^self new initializeWithAuthenticator: anAuthenticator.! !

----QUIT----(26 November 2020 21:24:59) CuisUniversity-4384.image priorSource: 17249806!

----STARTUP---- (27 November 2020 14:37:49) as /home/jadmin/Documents/IngenierÃ­a de Software 1/Cuis University/Cuis University/CuisUniversity-4384.image!


----End fileIn of /home/jadmin/Documents/GIT/IS1 Ejercicios de la CÃ¡tedra/19-Portfolio2/Portfolio2-Solucion.st----!

----STARTUP---- (29 November 2020 19:35:49) as /home/jadmin/Documents/IngenierÃ­a de Software 1/Cuis University/Cuis University/CuisUniversity-4384.image!


!testRun: #RestInterfaceTest #test01cannotCreateCartForInvalidClientID stamp: 'JEA 11/29/2020 19:38:15'!
ERROR!

!testRun: #RestInterfaceTest #test01cannotCreateCartForInvalidClientID stamp: 'JEA 11/29/2020 19:38:15'!
ERROR!
!RestInterface methodsFor: 'as yet unclassified' stamp: 'JEA 11/29/2020 19:47:39' prior: 50871608!
createCartFor: aClientID password: aPassword

	^self error: self class cannotCreateCartForInvalidClientIDMessage.! !

!testRun: #RestInterfaceTest #test01cannotCreateCartForInvalidClientID stamp: 'JEA 11/29/2020 19:47:54'!
ERROR!

!testRun: #RestInterfaceTest #test01cannotCreateCartForInvalidClientID stamp: 'JEA 11/29/2020 19:47:54'!
ERROR!
!RestInterface methodsFor: 'initialization' stamp: 'JEA 11/29/2020 19:49:36'!
initializeWithAuthenticator: anAuthenticator

	anAuthenticator.! !

Object subclass: #RestInterface
	instanceVariableNames: 'authenticator'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

!classDefinition: #RestInterface category: 'TusLibros' stamp: 'JEA 11/29/2020 19:49:43'!
Object subclass: #RestInterface
	instanceVariableNames: 'authenticator'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!
!RestInterface methodsFor: 'initialization' stamp: 'JEA 11/29/2020 19:49:51' prior: 50871675!
initializeWithAuthenticator: anAuthenticator

	authenticator := anAuthenticator.! !

!testRun: #RestInterfaceTest #test01cannotCreateCartForInvalidClientID stamp: 'JEA 11/29/2020 19:53:04'!
PASSED!
!RestInterfaceTest methodsFor: 'tests - creating cart' stamp: 'JEA 11/29/2020 20:05:31'!
test02cannotCreateCartForClientWithWrongPassword
	| interfazRest authenticatorSimulator |
	
	authenticatorSimulator := AuthenticatorSimulator new.
	authenticatorSimulator simulateWrongPassword.
	
	interfazRest := RestInterface newWithAuthenticator: authenticatorSimulator.
	
	self should: [ interfazRest 
				createCartFor: testObjectsFactory createClientID 
				password: testObjectsFactory createPassword. ]
		raise: Error
		withMessageText: RestInterface cannotCreateCartForWrongPasswordMessage.! !
!RestInterfaceTest methodsFor: 'tests - creating cart' stamp: 'JEA 11/29/2020 20:05:55' prior: 50871621!
test01cannotCreateCartForInvalidClientID
	| interfazRest authenticatorSimulator |
	
	authenticatorSimulator := AuthenticatorSimulator new.
	authenticatorSimulator simulateInvalidClientID.
	
	interfazRest := RestInterface newWithAuthenticator: authenticatorSimulator.
	
	self should: [ interfazRest 
				createCartFor: testObjectsFactory createClientID 
				password: testObjectsFactory createPassword. ]
		raise: Error
		withMessageText: RestInterface cannotCreateCartForInvalidClientIDMessage.! !

!testRun: #RestInterfaceTest #test01cannotCreateCartForInvalidClientID stamp: 'JEA 11/29/2020 20:05:59'!
ERROR!

!testRun: #RestInterfaceTest #test01cannotCreateCartForInvalidClientID stamp: 'JEA 11/29/2020 20:05:59'!
ERROR!
!AuthenticatorSimulator methodsFor: 'authentication' stamp: 'JEA 11/29/2020 20:07:43'!
authenticateBehavior! !
!AuthenticatorSimulator methodsFor: 'authentication' stamp: 'JEA 11/29/2020 20:07:50'!
authenticate! !

!methodRemoval: AuthenticatorSimulator #authenticateBehavior stamp: 'JEA 11/29/2020 20:07:50'!
authenticateBehavior!
!AuthenticatorSimulator methodsFor: 'authentication' stamp: 'JEA 11/29/2020 20:10:13'!
authenticate: aClientID password: aPassword! !

!methodRemoval: AuthenticatorSimulator #authenticate stamp: 'JEA 11/29/2020 20:10:14'!
authenticate!
!AuthenticatorSimulator methodsFor: 'authentication' stamp: 'JEA 11/29/2020 20:10:21' prior: 50871757!
authenticate: aClientID password: aPassword

	! !
!AuthenticatorSimulator methodsFor: 'authentication' stamp: 'JEA 11/29/2020 20:10:43' prior: 50871765!
authenticate: aClientID password: aPassword

	authenticateBehavior value.! !
!AuthenticatorSimulator methodsFor: 'simulations' stamp: 'JEA 11/29/2020 20:12:52'!
simulateValidClientAndPassword

	authenticateBehavior := [ ]! !
!AuthenticatorSimulator methodsFor: 'simulations' stamp: 'JEA 11/29/2020 20:13:03' prior: 50871776!
simulateValidClientAndPassword

	authenticateBehavior := [ ].! !
!AuthenticatorSimulator methodsFor: 'simulations' stamp: 'JEA 11/29/2020 20:13:24'!
simulateInvalidClientID

	authenticateBehavior := [ self error: self class invalidClientIDMessage ].! !
!AuthenticatorSimulator class methodsFor: 'error messages' stamp: 'JEA 11/29/2020 20:15:39'!
invalidClientIDMessage

	^'Client ID is invalid.'.! !
!AuthenticatorSimulator class methodsFor: 'error messages' stamp: 'JEA 11/29/2020 20:15:58'!
invalidPasswordMessage

	^'Password is invalid for the given client ID.'.! !
!AuthenticatorSimulator methodsFor: 'simulations' stamp: 'JEA 11/29/2020 20:16:25'!
simulateWrongPassword

	authenticateBehavior := [ self error: self class invalidPasswordMessage. ].! !
!AuthenticatorSimulator methodsFor: 'simulations' stamp: 'JEA 11/29/2020 20:16:30' prior: 50871787!
simulateInvalidClientID

	authenticateBehavior := [ self error: self class invalidClientIDMessage. ].! !
!RestInterface class methodsFor: 'error messages' stamp: 'JEA 11/29/2020 20:17:48'!
cannotCreateCartForWrongPasswordMessage

	^'Cannot create a cart, client authentication faild. Wrong password.'! !
!RestInterface class methodsFor: 'error messages' stamp: 'JEA 11/29/2020 20:17:53' prior: 50871818!
cannotCreateCartForWrongPasswordMessage

	^'Cannot create a cart, client authentication faild. Wrong password.'.! !

!testRun: #RestInterfaceTest #test01cannotCreateCartForInvalidClientID stamp: 'JEA 11/29/2020 20:17:56'!
PASSED!

!testRun: #RestInterfaceTest #test02cannotCreateCartForClientWithWrongPassword stamp: 'JEA 11/29/2020 20:17:56'!
FAILURE!

!testRun: #RestInterfaceTest #test02cannotCreateCartForClientWithWrongPassword stamp: 'JEA 11/29/2020 20:17:56'!
FAILURE!
!RestInterface methodsFor: 'cart' stamp: 'JEA 11/29/2020 20:18:07' prior: 50871661!
createCartFor: aClientID password: aPassword

	! !
!AuthenticatorSimulator methodsFor: 'initialization' stamp: 'JEA 11/29/2020 20:18:42' overrides: 16896425!
initialize

	self simulateValidClientAndPassword.! !
!RestInterface methodsFor: 'cart' stamp: 'JEA 11/29/2020 20:19:44' prior: 50871843!
createCartFor: aClientID password: aPassword

	authenticator authenticate: aClientID password: aPassword.! !
!RestInterface methodsFor: 'cart' stamp: 'JEA 11/29/2020 20:21:00' prior: 50871853!
createCartFor: aClientID password: aPassword

	[ authenticator authenticate: aClientID password: aPassword. ]
		on: Error
		do: [ self error: self authenticationFailedMessage. ].! !

!methodRemoval: RestInterface class #cannotCreateCartForInvalidClientIDMessage stamp: 'JEA 11/29/2020 20:21:06'!
cannotCreateCartForInvalidClientIDMessage

	^'Cannot create a cart for an invalid client ID.'!

!methodRemoval: RestInterface class #cannotCreateCartForWrongPasswordMessage stamp: 'JEA 11/29/2020 20:21:09'!
cannotCreateCartForWrongPasswordMessage

	^'Cannot create a cart, client authentication faild. Wrong password.'.!
!RestInterface class methodsFor: 'error messages' stamp: 'JEA 11/29/2020 20:21:26'!
authenticationFailedMessage

	^'Authentication failed. Client ID or password incorrect.'.! !
!RestInterfaceTest methodsFor: 'tests - creating cart' stamp: 'JEA 11/29/2020 20:21:43' prior: 50871720!
test01cannotCreateCartForInvalidClientID
	| interfazRest authenticatorSimulator |
	
	authenticatorSimulator := AuthenticatorSimulator new.
	authenticatorSimulator simulateInvalidClientID.
	
	interfazRest := RestInterface newWithAuthenticator: authenticatorSimulator.
	
	self should: [ interfazRest 
				createCartFor: testObjectsFactory createClientID 
				password: testObjectsFactory createPassword. ]
		raise: Error
		withMessageText: RestInterface authenticationFailedMessage.! !
!RestInterfaceTest methodsFor: 'tests - creating cart' stamp: 'JEA 11/29/2020 20:21:47' prior: 50871701!
test02cannotCreateCartForClientWithWrongPassword
	| interfazRest authenticatorSimulator |
	
	authenticatorSimulator := AuthenticatorSimulator new.
	authenticatorSimulator simulateWrongPassword.
	
	interfazRest := RestInterface newWithAuthenticator: authenticatorSimulator.
	
	self should: [ interfazRest 
				createCartFor: testObjectsFactory createClientID 
				password: testObjectsFactory createPassword. ]
		raise: Error
		withMessageText: RestInterface authenticationFailedMessage.! !

!testRun: #RestInterfaceTest #test01cannotCreateCartForInvalidClientID stamp: 'JEA 11/29/2020 20:21:49'!
FAILURE!

!testRun: #RestInterfaceTest #test02cannotCreateCartForClientWithWrongPassword stamp: 'JEA 11/29/2020 20:21:49'!
FAILURE!

!testRun: #RestInterfaceTest #test01cannotCreateCartForInvalidClientID stamp: 'JEA 11/29/2020 20:21:51'!
FAILURE!

!testRun: #RestInterfaceTest #test01cannotCreateCartForInvalidClientID stamp: 'JEA 11/29/2020 20:22:15'!
FAILURE!

!testRun: #RestInterfaceTest #test02cannotCreateCartForClientWithWrongPassword stamp: 'JEA 11/29/2020 20:22:15'!
FAILURE!

!testRun: #RestInterfaceTest #test01cannotCreateCartForInvalidClientID stamp: 'JEA 11/29/2020 20:22:16'!
FAILURE!

expected!

actual!
!RestInterface methodsFor: 'cart' stamp: 'JEA 11/29/2020 20:23:15' prior: 50871860!
createCartFor: aClientID password: aPassword

	[ authenticator authenticate: aClientID password: aPassword. ]
		on: Error
		do: [ self error: self class authenticationFailedMessage. ].! !

!testRun: #RestInterfaceTest #test01cannotCreateCartForInvalidClientID stamp: 'JEA 11/29/2020 20:23:16'!
PASSED!

!testRun: #RestInterfaceTest #test02cannotCreateCartForClientWithWrongPassword stamp: 'JEA 11/29/2020 20:23:16'!
PASSED!
!RestInterfaceTest methodsFor: 'tests - creating cart' stamp: 'JEA 11/29/2020 20:29:04'!
test03canCreateCartForWellAuthenticatedClient
	| interfazRest authenticatorSimulator cartID |
	
	authenticatorSimulator := AuthenticatorSimulator new.
	authenticatorSimulator simulateInvalidClientID.
	
	interfazRest := RestInterface newWithAuthenticator: authenticatorSimulator.
	
	cartID := interfazRest 
				createCartFor: testObjectsFactory createClientID 
				password: testObjectsFactory createPassword.
	
	self assert: (self isValidCartID: cartID).! !

!testRun: #RestInterfaceTest #test03canCreateCartForWellAuthenticatedClient stamp: 'JEA 11/29/2020 20:29:08'!
ERROR!
!RestInterfaceTest methodsFor: 'tests - creating cart' stamp: 'JEA 11/29/2020 20:29:21' prior: 50871966!
test03canCreateCartForWellAuthenticatedClient
	| interfazRest authenticatorSimulator cartID |
	
	authenticatorSimulator := AuthenticatorSimulator new.
	authenticatorSimulator simulateValidClientID.
	
	interfazRest := RestInterface newWithAuthenticator: authenticatorSimulator.
	
	cartID := interfazRest 
				createCartFor: testObjectsFactory createClientID 
				password: testObjectsFactory createPassword.
	
	self assert: (self isValidCartID: cartID).! !

!testRun: #RestInterfaceTest #test03canCreateCartForWellAuthenticatedClient stamp: 'JEA 11/29/2020 20:29:23'!
ERROR!

!testRun: #RestInterfaceTest #test03canCreateCartForWellAuthenticatedClient stamp: 'JEA 11/29/2020 20:29:23'!
ERROR!
!RestInterfaceTest methodsFor: 'tests - creating cart' stamp: 'JEA 11/29/2020 20:29:39' prior: 50871988!
test03canCreateCartForWellAuthenticatedClient
	| interfazRest authenticatorSimulator cartID |
	
	authenticatorSimulator := AuthenticatorSimulator new.
	authenticatorSimulator simulateValidClientAndPassword.
	
	interfazRest := RestInterface newWithAuthenticator: authenticatorSimulator.
	
	cartID := interfazRest 
				createCartFor: testObjectsFactory createClientID 
				password: testObjectsFactory createPassword.
	
	self assert: (self isValidCartID: cartID).! !

!testRun: #RestInterfaceTest #test03canCreateCartForWellAuthenticatedClient stamp: 'JEA 11/29/2020 20:29:46'!
ERROR!
!RestInterfaceTest methodsFor: 'auxiliary collaborations' stamp: 'JEA 11/29/2020 20:30:24'!
isValidCartID: aCartID

	^aCartID isNumber.! !

!testRun: #RestInterfaceTest #test03canCreateCartForWellAuthenticatedClient stamp: 'JEA 11/29/2020 20:30:38'!
FAILURE!
!RestInterface methodsFor: 'cart' stamp: 'JEA 11/29/2020 20:30:52' prior: 50871949!
createCartFor: aClientID password: aPassword

	[ authenticator authenticate: aClientID password: aPassword. ]
		on: Error
		do: [ self error: self class authenticationFailedMessage. ].
	
	^0.! !

!testRun: #RestInterfaceTest #test01cannotCreateCartForInvalidClientID stamp: 'JEA 11/29/2020 20:30:53'!
PASSED!

!testRun: #RestInterfaceTest #test02cannotCreateCartForClientWithWrongPassword stamp: 'JEA 11/29/2020 20:30:53'!
PASSED!

!testRun: #RestInterfaceTest #test03canCreateCartForWellAuthenticatedClient stamp: 'JEA 11/29/2020 20:30:53'!
PASSED!
!RestInterfaceTest methodsFor: 'tests - creating cart' stamp: 'JEA 11/29/2020 20:34:05'!
test03canCreateMoreThanOneCartWithDifferentIDs
	| interfazRest authenticatorSimulator cartID1 cartID2 |
	
	authenticatorSimulator := AuthenticatorSimulator new.
	authenticatorSimulator simulateValidClientAndPassword.
	
	interfazRest := RestInterface newWithAuthenticator: authenticatorSimulator.
	
	cartID1 := interfazRest 
				createCartFor: testObjectsFactory createClientID 
				password: testObjectsFactory createPassword.

	cartID2 := interfazRest 
				createCartFor: testObjectsFactory createClientID 
				password: testObjectsFactory createPassword.
	
	self assert: cartID1 ~= cartID2.! !
!RestInterfaceTest methodsFor: 'tests - creating cart' stamp: 'JEA 11/29/2020 20:34:10'!
test04canCreateMoreThanOneCartWithDifferentIDs
	| interfazRest authenticatorSimulator cartID1 cartID2 |
	
	authenticatorSimulator := AuthenticatorSimulator new.
	authenticatorSimulator simulateValidClientAndPassword.
	
	interfazRest := RestInterface newWithAuthenticator: authenticatorSimulator.
	
	cartID1 := interfazRest 
				createCartFor: testObjectsFactory createClientID 
				password: testObjectsFactory createPassword.

	cartID2 := interfazRest 
				createCartFor: testObjectsFactory createClientID 
				password: testObjectsFactory createPassword.
	
	self assert: cartID1 ~= cartID2.! !

!methodRemoval: RestInterfaceTest #test03canCreateMoreThanOneCartWithDifferentIDs stamp: 'JEA 11/29/2020 20:34:10'!
test03canCreateMoreThanOneCartWithDifferentIDs
	| interfazRest authenticatorSimulator cartID1 cartID2 |
	
	authenticatorSimulator := AuthenticatorSimulator new.
	authenticatorSimulator simulateValidClientAndPassword.
	
	interfazRest := RestInterface newWithAuthenticator: authenticatorSimulator.
	
	cartID1 := interfazRest 
				createCartFor: testObjectsFactory createClientID 
				password: testObjectsFactory createPassword.

	cartID2 := interfazRest 
				createCartFor: testObjectsFactory createClientID 
				password: testObjectsFactory createPassword.
	
	self assert: cartID1 ~= cartID2.!

!testRun: #RestInterfaceTest #test01cannotCreateCartForInvalidClientID stamp: 'JEA 11/29/2020 20:34:11'!
PASSED!

!testRun: #RestInterfaceTest #test02cannotCreateCartForClientWithWrongPassword stamp: 'JEA 11/29/2020 20:34:11'!
PASSED!

!testRun: #RestInterfaceTest #test03canCreateCartForWellAuthenticatedClient stamp: 'JEA 11/29/2020 20:34:11'!
PASSED!

!testRun: #RestInterfaceTest #test04canCreateMoreThanOneCartWithDifferentIDs stamp: 'JEA 11/29/2020 20:34:11'!
FAILURE!

!testRun: #RestInterfaceTest #test04canCreateMoreThanOneCartWithDifferentIDs stamp: 'JEA 11/29/2020 20:34:11'!
FAILURE!
!RestInterfaceTest methodsFor: 'tests - creating cart' stamp: 'JEA 11/29/2020 20:34:35' prior: 50872085!
test04canCreateMoreThanOneCartWithDifferentIDs
	| interfazRest authenticatorSimulator cartID1 cartID2 |
	
	authenticatorSimulator := AuthenticatorSimulator new.
	authenticatorSimulator simulateValidClientAndPassword.
	
	interfazRest := RestInterface newWithAuthenticator: authenticatorSimulator.
	
	cartID1 := interfazRest 
				createCartFor: testObjectsFactory createClientID 
				password: testObjectsFactory createPassword.

	cartID2 := interfazRest 
				createCartFor: testObjectsFactory createClientID 
				password: testObjectsFactory createPassword.
	
	self assert: 0 changes: 1.! !

!testRun: #RestInterfaceTest #test04canCreateMoreThanOneCartWithDifferentIDs stamp: 'JEA 11/29/2020 20:34:39'!
FAILURE!
!RestInterfaceTest methodsFor: 'tests - creating cart' stamp: 'JEA 11/29/2020 20:35:03' prior: 50872148!
test04canCreateMoreThanOneCartWithDifferentIDs
	| interfazRest authenticatorSimulator cartID1 cartID2 |
	
	authenticatorSimulator := AuthenticatorSimulator new.
	authenticatorSimulator simulateValidClientAndPassword.
	
	interfazRest := RestInterface newWithAuthenticator: authenticatorSimulator.
	
	cartID1 := interfazRest 
				createCartFor: testObjectsFactory createClientID 
				password: testObjectsFactory createPassword.

	cartID2 := interfazRest 
				createCartFor: testObjectsFactory createClientID 
				password: testObjectsFactory createPassword.
	
	self assert: cartID1 ~= cartID2.! !

!testRun: #RestInterfaceTest #test04canCreateMoreThanOneCartWithDifferentIDs stamp: 'JEA 11/29/2020 20:35:05'!
FAILURE!

!classDefinition: #RestInterface category: 'TusLibros' stamp: 'JEA 11/29/2020 20:35:54'!
Object subclass: #RestInterface
	instanceVariableNames: 'authenticator lastCartID'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!
!RestInterface methodsFor: 'cart' stamp: 'JEA 11/29/2020 20:35:53'!
nextCartID

	lastCartID := lastCartID next.
	^lastCartID.! !
!RestInterface methodsFor: 'initialization' stamp: 'JEA 11/29/2020 20:36:04' prior: 50871692!
initializeWithAuthenticator: anAuthenticator

	lastCartID := 0.
	authenticator := anAuthenticator.! !

!testRun: #RestInterfaceTest #test01cannotCreateCartForInvalidClientID stamp: 'JEA 11/29/2020 20:36:05'!
PASSED!

!testRun: #RestInterfaceTest #test02cannotCreateCartForClientWithWrongPassword stamp: 'JEA 11/29/2020 20:36:05'!
PASSED!

!testRun: #RestInterfaceTest #test03canCreateCartForWellAuthenticatedClient stamp: 'JEA 11/29/2020 20:36:05'!
PASSED!

!testRun: #RestInterfaceTest #test04canCreateMoreThanOneCartWithDifferentIDs stamp: 'JEA 11/29/2020 20:36:05'!
FAILURE!

!testRun: #RestInterfaceTest #test04canCreateMoreThanOneCartWithDifferentIDs stamp: 'JEA 11/29/2020 20:36:05'!
FAILURE!
!RestInterface methodsFor: 'cart' stamp: 'JEA 11/29/2020 20:36:12' prior: 50872207!
nextCartID

	lastCartID := lastCartID + 1.
	^lastCartID.! !

!testRun: #RestInterfaceTest #test01cannotCreateCartForInvalidClientID stamp: 'JEA 11/29/2020 20:36:13'!
PASSED!

!testRun: #RestInterfaceTest #test02cannotCreateCartForClientWithWrongPassword stamp: 'JEA 11/29/2020 20:36:13'!
PASSED!

!testRun: #RestInterfaceTest #test03canCreateCartForWellAuthenticatedClient stamp: 'JEA 11/29/2020 20:36:13'!
PASSED!

!testRun: #RestInterfaceTest #test04canCreateMoreThanOneCartWithDifferentIDs stamp: 'JEA 11/29/2020 20:36:13'!
FAILURE!

!testRun: #RestInterfaceTest #test04canCreateMoreThanOneCartWithDifferentIDs stamp: 'JEA 11/29/2020 20:36:13'!
FAILURE!
!RestInterface methodsFor: 'cart' stamp: 'JEA 11/29/2020 20:36:25' prior: 50872237!
nextCartID

	lastCartID := lastCartID next.
	^lastCartID.! !

0 next!
!RestInterface methodsFor: 'cart' stamp: 'JEA 11/29/2020 20:36:45' prior: 50872261!
nextCartID

	lastCartID := lastCartID + 1.
	^lastCartID.! !
!RestInterface methodsFor: 'cart' stamp: 'JEA 11/29/2020 20:36:59' prior: 50872043!
createCartFor: aClientID password: aPassword

	[ authenticator authenticate: aClientID password: aPassword. ]
		on: Error
		do: [ self error: self class authenticationFailedMessage. ].
	
	^self nextCartID.! !

!testRun: #RestInterfaceTest #test01cannotCreateCartForInvalidClientID stamp: 'JEA 11/29/2020 20:37:19'!
PASSED!

!testRun: #RestInterfaceTest #test02cannotCreateCartForClientWithWrongPassword stamp: 'JEA 11/29/2020 20:37:19'!
PASSED!

!testRun: #RestInterfaceTest #test03canCreateCartForWellAuthenticatedClient stamp: 'JEA 11/29/2020 20:37:19'!
PASSED!

!testRun: #RestInterfaceTest #test04canCreateMoreThanOneCartWithDifferentIDs stamp: 'JEA 11/29/2020 20:37:19'!
PASSED!
!RestInterfaceTest methodsFor: 'tests - listing cart' stamp: 'JEA 11/29/2020 23:12:48'!
test05canListCartsContents

	! !
!RestInterfaceTest methodsFor: 'tests - listing cart' stamp: 'JEA 11/29/2020 23:21:56' prior: 50872296!
test05canListCartsContents
	| interfazRest authenticatorSimulator |
	
	authenticatorSimulator := AuthenticatorSimulator new.
	authenticatorSimulator simulateValidClientAndPassword.
	
	interfazRest := RestInterface newWithAuthenticator: authenticatorSimulator.
	
	interfazRest 
		createCartFor: testObjectsFactory createClientID 
		password: testObjectsFactory createPassword.! !
!RestInterfaceTest methodsFor: 'tests - listing cart' stamp: 'JEA 11/29/2020 23:22:55' prior: 50872301!
test05canListCartsContents
	| interfazRest |
	
	interfazRest := RestInterface newWithAuthenticator: AuthenticatorSimulator new.
	
	interfazRest 
		createCartFor: testObjectsFactory createClientID 
		password: testObjectsFactory createPassword.! !
!RestInterfaceTest methodsFor: 'tests - listing cart' stamp: 'JEA 11/29/2020 23:26:07' prior: 50872317!
test05canListCartsContents
	| interfazRest |
	
	interfazRest := RestInterface newWithAuthenticator: AuthenticatorSimulator new.
	
	interfazRest 
		createCartFor: testObjectsFactory createClientID 
		password: testObjectsFactory createPassword.
	
	! !
!RestInterfaceTest methodsFor: 'tests - creating cart' stamp: 'JEA 11/29/2020 23:26:35' prior: 50871889!
test01cannotCreateCartForInvalidClientID
	| restInterface authenticatorSimulator |
	
	authenticatorSimulator := AuthenticatorSimulator new.
	authenticatorSimulator simulateInvalidClientID.
	
	restInterface := RestInterface newWithAuthenticator: authenticatorSimulator.
	
	self should: [ restInterface 
				createCartFor: testObjectsFactory createClientID 
				password: testObjectsFactory createPassword. ]
		raise: Error
		withMessageText: RestInterface authenticationFailedMessage.! !
!RestInterfaceTest methodsFor: 'tests - creating cart' stamp: 'JEA 11/29/2020 23:26:40' prior: 50871908!
test02cannotCreateCartForClientWithWrongPassword
	| restInterface authenticatorSimulator |
	
	authenticatorSimulator := AuthenticatorSimulator new.
	authenticatorSimulator simulateWrongPassword.
	
	restInterface := RestInterface newWithAuthenticator: authenticatorSimulator.
	
	self should: [ restInterface 
				createCartFor: testObjectsFactory createClientID 
				password: testObjectsFactory createPassword. ]
		raise: Error
		withMessageText: RestInterface authenticationFailedMessage.! !
!RestInterfaceTest methodsFor: 'tests - creating cart' stamp: 'JEA 11/29/2020 23:26:45' prior: 50872013!
test03canCreateCartForWellAuthenticatedClient
	| restInterface authenticatorSimulator cartID |
	
	authenticatorSimulator := AuthenticatorSimulator new.
	authenticatorSimulator simulateValidClientAndPassword.
	
	restInterface := RestInterface newWithAuthenticator: authenticatorSimulator.
	
	cartID := restInterface 
				createCartFor: testObjectsFactory createClientID 
				password: testObjectsFactory createPassword.
	
	self assert: (self isValidCartID: cartID).! !
!RestInterfaceTest methodsFor: 'tests - creating cart' stamp: 'JEA 11/29/2020 23:26:49' prior: 50872174!
test04canCreateMoreThanOneCartWithDifferentIDs
	| restInterface authenticatorSimulator cartID1 cartID2 |
	
	authenticatorSimulator := AuthenticatorSimulator new.
	authenticatorSimulator simulateValidClientAndPassword.
	
	restInterface := RestInterface newWithAuthenticator: authenticatorSimulator.
	
	cartID1 := restInterface 
				createCartFor: testObjectsFactory createClientID 
				password: testObjectsFactory createPassword.

	cartID2 := restInterface 
				createCartFor: testObjectsFactory createClientID 
				password: testObjectsFactory createPassword.
	
	self assert: cartID1 ~= cartID2.! !
!RestInterfaceTest methodsFor: 'tests - adding to cart' stamp: 'JEA 11/29/2020 23:30:33'!
test05
	| interfazRest |
	
	interfazRest := RestInterface newWithAuthenticator: AuthenticatorSimulator new.
	
	interfazRest 
		createCartFor: testObjectsFactory createClientID 
		password: testObjectsFactory createPassword.
	
	! !

!methodRemoval: RestInterfaceTest #test05canListCartsContents stamp: 'JEA 11/29/2020 23:30:33'!
test05canListCartsContents
	| interfazRest |
	
	interfazRest := RestInterface newWithAuthenticator: AuthenticatorSimulator new.
	
	interfazRest 
		createCartFor: testObjectsFactory createClientID 
		password: testObjectsFactory createPassword.
	
	!
!RestInterfaceTest methodsFor: 'tests - adding to cart' stamp: 'JEA 11/29/2020 23:30:37' prior: 50872418!
test05! !

!methodRemoval: RestInterfaceTest #test05 stamp: 'JEA 11/29/2020 23:30:39'!
test05!

----QUIT----(29 November 2020 23:30:42) CuisUniversity-4384.image priorSource: 17279842!

----STARTUP---- (30 November 2020 12:37:49) as /home/jadmin/Documents/IngenierÃ­a de Software 1/Cuis University/Cuis University/CuisUniversity-4384.image!


!methodRemoval: RestInterfaceTest #isValidCartID: stamp: 'JEA 11/30/2020 13:50:54'!
isValidCartID: aCartID

	^aCartID isNumber.!
!RestInterfaceTest methodsFor: 'tests - creating cart' stamp: 'JEA 11/30/2020 13:54:28' prior: 50872378!
test03canCreateCartForWellAuthenticatedClient
	| restInterface authenticatorSimulator cartID cartList |
	
	authenticatorSimulator := AuthenticatorSimulator new.
	authenticatorSimulator simulateValidClientAndPassword.
	
	restInterface := RestInterface newWithAuthenticator: authenticatorSimulator.
	
	cartID := restInterface 
				createCartFor: testObjectsFactory createClientID 
				password: testObjectsFactory createPassword.
	
	cartList := restInterface listCart: cartID.
	
	self assert: cartList isEmpty.! !
!RestInterfaceTest methodsFor: 'tests - creating cart' stamp: 'JEA 11/30/2020 13:54:48' prior: 50872396!
test04canCreateMoreThanOneCartWithDifferentIDs
	| restInterface authenticatorSimulator cartID1 cartID2 |
	
	authenticatorSimulator := AuthenticatorSimulator new.
	authenticatorSimulator simulateValidClientAndPassword.
	
	restInterface := RestInterface newWithAuthenticator: authenticatorSimulator.
	
	cartID1 := restInterface 
				createCartFor: testObjectsFactory createClientID 
				password: testObjectsFactory createPassword.

	cartID2 := restInterface 
				createCartFor: testObjectsFactory createClientID 
				password: testObjectsFactory createPassword.
	
	self assert: cartID1 ~= cartID2.! !

!testRun: #RestInterfaceTest #test01cannotCreateCartForInvalidClientID stamp: 'JEA 11/30/2020 13:58:05'!
PASSED!

!testRun: #RestInterfaceTest #test02cannotCreateCartForClientWithWrongPassword stamp: 'JEA 11/30/2020 13:58:05'!
PASSED!

!testRun: #RestInterfaceTest #test03canCreateCartForWellAuthenticatedClient stamp: 'JEA 11/30/2020 13:58:05'!
ERROR!

!testRun: #RestInterfaceTest #test04canCreateMoreThanOneCartWithDifferentIDs stamp: 'JEA 11/30/2020 13:58:05'!
PASSED!

!testRun: #RestInterfaceTest #test03canCreateCartForWellAuthenticatedClient stamp: 'JEA 11/30/2020 13:58:05'!
ERROR!
!RestInterface methodsFor: 'cart' stamp: 'JEA 11/30/2020 13:59:42'!
listCart: aCartID

	! !

Object subclass: #RestInterface
	instanceVariableNames: 'authenticator lastCartID carts'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

!classDefinition: #RestInterface category: 'TusLibros' stamp: 'JEA 11/30/2020 14:15:08'!
Object subclass: #RestInterface
	instanceVariableNames: 'authenticator lastCartID carts'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!
!RestInterface methodsFor: 'cart' stamp: 'JEA 11/30/2020 14:15:44' prior: 50872271!
createCartFor: aClientID password: aPassword

	[ authenticator authenticate: aClientID password: aPassword. ]
		on: Error
		do: [ self error: self class authenticationFailedMessage. ].
	
	^self nextCartID.! !
!RestInterface methodsFor: 'initialization' stamp: 'JEA 11/30/2020 14:16:01' prior: 50872212!
initializeWithAuthenticator: anAuthenticator

	lastCartID := 0.
	authenticator := anAuthenticator.
	carts := Dictionary new.! !
!RestInterface methodsFor: 'cart' stamp: 'JEA 11/30/2020 14:16:12' prior: 50872536!
createCartFor: aClientID password: aPassword

	[ authenticator authenticate: aClientID password: aPassword. ]
		on: Error
		do: [ self error: self class authenticationFailedMessage. ].
	
	carts.
	
	^self nextCartID.! !
!RestInterface methodsFor: 'cart' stamp: 'JEA 11/30/2020 14:17:50' prior: 50872553!
createCartFor: aClientID password: aPassword
	| newCartID |
	
	newCartID := self nextCartID.
	
	[ authenticator authenticate: aClientID password: aPassword. ]
		on: Error
		do: [ self error: self class authenticationFailedMessage. ].
	
	carts add: newCartID->Cart new.! !
!RestInterface methodsFor: 'cart' stamp: 'JEA 11/30/2020 14:18:03' prior: 50872563!
createCartFor: aClientID password: aPassword
	| newCartID |
	
	newCartID := self nextCartID.
	
	[ authenticator authenticate: aClientID password: aPassword. ]
		on: Error
		do: [ self error: self class authenticationFailedMessage. ].
	
	carts add: newCartID->Cart new.
	
	^newCartID.! !
!RestInterface methodsFor: 'cart' stamp: 'JEA 11/30/2020 14:18:08' prior: 50872575!
createCartFor: aClientID password: aPassword
	| cartID |
	
	cartID := self nextCartID.
	
	[ authenticator authenticate: aClientID password: aPassword. ]
		on: Error
		do: [ self error: self class authenticationFailedMessage. ].
	
	carts add: cartID->Cart new.
	
	^cartID.! !
!RestInterface methodsFor: 'cart' stamp: 'JEA 11/30/2020 14:20:45' prior: 50872587!
createCartFor: aClientID password: aPassword
	| cartID |
	
	cartID := self nextCartID.
	
	[ authenticator authenticate: aClientID password: aPassword. ]
		on: Error
		do: [ self error: self class authenticationFailedMessage. ].
	
	carts add: cartID -> Cart new.
	
	^cartID.! !
!RestInterface class methodsFor: 'instance creation' stamp: 'JEA 11/30/2020 14:33:01'!
newWithAuthenticator: anAuthenticator withCatalog: aCatalog

	^self new initializeWithAuthenticator: anAuthenticator withCatalog: aCatalog.! !

!methodRemoval: RestInterface class #newWithAuthenticator:withCatalog: stamp: 'JEA 11/30/2020 14:33:08'!
newWithAuthenticator: anAuthenticator withCatalog: aCatalog

	^self new initializeWithAuthenticator: anAuthenticator withCatalog: aCatalog.!
!RestInterface class methodsFor: 'instance creation' stamp: 'JEA 11/30/2020 14:37:32'!
newWithAuthenticator: anAuthenticator withCatalog: aCatalog 

	^self new initializeWithAuthenticator: anAuthenticator.! !
!RestInterfaceTest methodsFor: 'as yet unclassified' stamp: 'JEA 11/30/2020 14:37:32' prior: 50872340!
test01cannotCreateCartForInvalidClientID
	| restInterface authenticatorSimulator |
	
	authenticatorSimulator := AuthenticatorSimulator new.
	authenticatorSimulator simulateInvalidClientID.
	
	restInterface := RestInterface newWithAuthenticator: authenticatorSimulator withCatalog: Dictionary new.
	
	self should: [ restInterface 
				createCartFor: testObjectsFactory createClientID 
				password: testObjectsFactory createPassword. ]
		raise: Error
		withMessageText: RestInterface authenticationFailedMessage.! !
!RestInterfaceTest methodsFor: 'as yet unclassified' stamp: 'JEA 11/30/2020 14:37:32' prior: 50872459!
test03canCreateCartForWellAuthenticatedClient
	| restInterface authenticatorSimulator cartID cartList |
	
	authenticatorSimulator := AuthenticatorSimulator new.
	authenticatorSimulator simulateValidClientAndPassword.
	
	restInterface := RestInterface newWithAuthenticator: authenticatorSimulator withCatalog: Dictionary new.
	
	cartID := restInterface 
				createCartFor: testObjectsFactory createClientID 
				password: testObjectsFactory createPassword.
	
	cartList := restInterface listCart: cartID.
	
	self assert: cartList isEmpty.! !
!RestInterfaceTest methodsFor: 'as yet unclassified' stamp: 'JEA 11/30/2020 14:37:32' prior: 50872479!
test04canCreateMoreThanOneCartWithDifferentIDs
	| restInterface authenticatorSimulator cartID1 cartID2 |
	
	authenticatorSimulator := AuthenticatorSimulator new.
	authenticatorSimulator simulateValidClientAndPassword.
	
	restInterface := RestInterface newWithAuthenticator: authenticatorSimulator withCatalog: Dictionary new.
	
	cartID1 := restInterface 
				createCartFor: testObjectsFactory createClientID 
				password: testObjectsFactory createPassword.

	cartID2 := restInterface 
				createCartFor: testObjectsFactory createClientID 
				password: testObjectsFactory createPassword.
	
	self assert: cartID1 ~= cartID2.! !
!RestInterfaceTest methodsFor: 'as yet unclassified' stamp: 'JEA 11/30/2020 14:37:32' prior: 50872359!
test02cannotCreateCartForClientWithWrongPassword
	| restInterface authenticatorSimulator |
	
	authenticatorSimulator := AuthenticatorSimulator new.
	authenticatorSimulator simulateWrongPassword.
	
	restInterface := RestInterface newWithAuthenticator: authenticatorSimulator withCatalog: Dictionary new.
	
	self should: [ restInterface 
				createCartFor: testObjectsFactory createClientID 
				password: testObjectsFactory createPassword. ]
		raise: Error
		withMessageText: RestInterface authenticationFailedMessage.! !

!methodRemoval: RestInterface class #newWithAuthenticator: stamp: 'JEA 11/30/2020 14:37:32'!
newWithAuthenticator: anAuthenticator

	^self new initializeWithAuthenticator: anAuthenticator.!
!RestInterface methodsFor: 'initialization' stamp: 'JEA 11/30/2020 15:06:49'!
initializeWithAuthenticator: anAuthenticator withCatalog: aCatalog 

	lastCartID := 0.
	authenticator := anAuthenticator.
	carts := Dictionary new.! !
!RestInterface class methodsFor: 'as yet unclassified' stamp: 'JEA 11/30/2020 15:06:49' prior: 50872626!
newWithAuthenticator: anAuthenticator withCatalog: aCatalog 

	^self new initializeWithAuthenticator: anAuthenticator withCatalog: Dictionary new.! !

!methodRemoval: RestInterface #initializeWithAuthenticator: stamp: 'JEA 11/30/2020 15:06:49'!
initializeWithAuthenticator: anAuthenticator

	lastCartID := 0.
	authenticator := anAuthenticator.
	carts := Dictionary new.!
!RestInterface class methodsFor: 'instance creation' stamp: 'JEA 11/30/2020 15:07:03' prior: 50872731!
newWithAuthenticator: anAuthenticator withCatalog: aCatalog 

	^self new initializeWithAuthenticator: anAuthenticator withCatalog: aCatalog.! !

!classDefinition: #RestInterface category: 'TusLibros' stamp: 'JEA 11/30/2020 15:07:41'!
Object subclass: #RestInterface
	instanceVariableNames: 'authenticator lastCartID carts catalog'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!
!RestInterface methodsFor: 'initialization' stamp: 'JEA 11/30/2020 15:07:39' prior: 50872723!
initializeWithAuthenticator: anAuthenticator withCatalog: aCatalog 

	authenticator := anAuthenticator.
	lastCartID := 0.
	catalog := aCatalog.
	carts := Dictionary new.! !
!RestInterface methodsFor: 'cart' stamp: 'JEA 11/30/2020 15:08:55' prior: 50872599!
createCartFor: aClientID password: aPassword
	| cartID |
	
	cartID := self nextCartID.
	
	[ authenticator authenticate: aClientID password: aPassword. ]
		on: Error
		do: [ self error: self class authenticationFailedMessage. ].
	
	carts add: cartID -> (Cart acceptingItemsOf: catalog).
	
	^cartID.! !

!testRun: #RestInterfaceTest #test01cannotCreateCartForInvalidClientID stamp: 'JEA 11/30/2020 15:10:59'!
PASSED!

!testRun: #RestInterfaceTest #test02cannotCreateCartForClientWithWrongPassword stamp: 'JEA 11/30/2020 15:10:59'!
PASSED!

!testRun: #RestInterfaceTest #test03canCreateCartForWellAuthenticatedClient stamp: 'JEA 11/30/2020 15:10:59'!
ERROR!

!testRun: #RestInterfaceTest #test04canCreateMoreThanOneCartWithDifferentIDs stamp: 'JEA 11/30/2020 15:10:59'!
PASSED!

!testRun: #RestInterfaceTest #test03canCreateCartForWellAuthenticatedClient stamp: 'JEA 11/30/2020 15:10:59'!
ERROR!
!RestInterface methodsFor: 'cart' stamp: 'JEA 11/30/2020 15:11:17' prior: 50872519!
listCart: aCartID

	^carts at: aCartID.! !
!Cart methodsFor: 'accessing' stamp: 'JEA 11/30/2020 15:12:59'!
items

	^items copy.! !
!RestInterface methodsFor: 'cart' stamp: 'JEA 11/30/2020 15:19:59' prior: 50872802!
listCart: aCartID

	^(carts at: aCartID) listItems.! !
!Cart methodsFor: 'accessing' stamp: 'JEA 11/30/2020 15:20:24'!
listItems

	^items copy.! !

!methodRemoval: Cart #items stamp: 'JEA 11/30/2020 15:20:24'!
items

	^items copy.!

!testRun: #RestInterfaceTest #test01cannotCreateCartForInvalidClientID stamp: 'JEA 11/30/2020 15:20:33'!
PASSED!

!testRun: #RestInterfaceTest #test02cannotCreateCartForClientWithWrongPassword stamp: 'JEA 11/30/2020 15:20:33'!
PASSED!

!testRun: #RestInterfaceTest #test03canCreateCartForWellAuthenticatedClient stamp: 'JEA 11/30/2020 15:20:33'!
PASSED!

!testRun: #RestInterfaceTest #test04canCreateMoreThanOneCartWithDifferentIDs stamp: 'JEA 11/30/2020 15:20:33'!
PASSED!
!RestInterfaceTest methodsFor: 'tests - creating cart' stamp: 'JEA 11/30/2020 15:21:45' prior: 50872654!
test03canCreateCartForWellAuthenticatedClient
	| restInterface authenticatorSimulator cartID cartList |
	
	authenticatorSimulator := AuthenticatorSimulator new.
	authenticatorSimulator simulateValidClientAndPassword.
	restInterface := RestInterface newWithAuthenticator: authenticatorSimulator withCatalog: Dictionary new.
	
	cartID := restInterface 
				createCartFor: testObjectsFactory createClientID 
				password: testObjectsFactory createPassword.
	
	cartList := restInterface listCart: cartID.
	
	self assert: cartList isEmpty.! !
!RestInterfaceTest methodsFor: 'tests - creating cart' stamp: 'JEA 11/30/2020 15:24:19' prior: 50872675!
test04canCreateMoreThanOneCartWithDifferentIDs
	| restInterface authenticatorSimulator cartID1 cartID2 |
	
	authenticatorSimulator := AuthenticatorSimulator new.
	authenticatorSimulator simulateValidClientAndPassword.
	restInterface := RestInterface newWithAuthenticator: authenticatorSimulator withCatalog: Dictionary new.
	
	cartID1 := restInterface 
				createCartFor: testObjectsFactory createClientID 
				password: testObjectsFactory createPassword.

	cartID2 := restInterface 
				createCartFor: testObjectsFactory createClientID 
				password: testObjectsFactory createPassword.
	
	self assert: cartID1 ~= cartID2.! !
!RestInterfaceTest methodsFor: 'tests - creating cart' stamp: 'JEA 11/30/2020 15:24:22' prior: 50872698!
test02cannotCreateCartForClientWithWrongPassword
	| restInterface authenticatorSimulator |
	
	authenticatorSimulator := AuthenticatorSimulator new.
	authenticatorSimulator simulateWrongPassword.
	restInterface := RestInterface newWithAuthenticator: authenticatorSimulator withCatalog: Dictionary new.
	
	self should: [ restInterface 
				createCartFor: testObjectsFactory createClientID 
				password: testObjectsFactory createPassword. ]
		raise: Error
		withMessageText: RestInterface authenticationFailedMessage.! !
!RestInterfaceTest methodsFor: 'tests - creating cart' stamp: 'JEA 11/30/2020 15:24:25' prior: 50872634!
test01cannotCreateCartForInvalidClientID
	| restInterface authenticatorSimulator |
	
	authenticatorSimulator := AuthenticatorSimulator new.
	authenticatorSimulator simulateInvalidClientID.
	restInterface := RestInterface newWithAuthenticator: authenticatorSimulator withCatalog: Dictionary new.
	
	self should: [ restInterface 
				createCartFor: testObjectsFactory createClientID 
				password: testObjectsFactory createPassword. ]
		raise: Error
		withMessageText: RestInterface authenticationFailedMessage.! !

!testRun: #CartTest #test01NewCartsAreCreatedEmpty stamp: 'JEA 11/30/2020 15:34:12'!
PASSED!

!testRun: #CartTest #test02CanNotAddItemsThatDoNotBelongToStore stamp: 'JEA 11/30/2020 15:34:12'!
PASSED!

!testRun: #CartTest #test03AfterAddingAnItemTheCartIsNotEmptyAnymore stamp: 'JEA 11/30/2020 15:34:12'!
PASSED!

!testRun: #CartTest #test04CanNotAddNonPositiveNumberOfItems stamp: 'JEA 11/30/2020 15:34:12'!
PASSED!

!testRun: #CartTest #test05CanNotAddMoreThanOneItemNotSellByTheStore stamp: 'JEA 11/30/2020 15:34:12'!
PASSED!

!testRun: #CartTest #test06CartRemembersAddedItems stamp: 'JEA 11/30/2020 15:34:12'!
PASSED!

!testRun: #CartTest #test07CartDoesNotHoldNotAddedItems stamp: 'JEA 11/30/2020 15:34:12'!
PASSED!

!testRun: #CartTest #test08CartRemembersTheNumberOfAddedItems stamp: 'JEA 11/30/2020 15:34:12'!
PASSED!

!testRun: #CashierTest #test01CanNotCheckoutAnEmptyCart stamp: 'JEA 11/30/2020 15:34:12'!
PASSED!

!testRun: #CashierTest #test02CalculatedTotalIsCorrect stamp: 'JEA 11/30/2020 15:34:12'!
PASSED!

!testRun: #CashierTest #test03CanNotCheckoutWithAnExpiredCreditCart stamp: 'JEA 11/30/2020 15:34:12'!
PASSED!

!testRun: #CashierTest #test04CheckoutRegistersASale stamp: 'JEA 11/30/2020 15:34:12'!
PASSED!

!testRun: #CashierTest #test05CashierChargesCreditCardUsingMerchantProcessor stamp: 'JEA 11/30/2020 15:34:12'!
PASSED!

!testRun: #CashierTest #test06CashierDoesNotSaleWhenTheCreditCardHasNoCredit stamp: 'JEA 11/30/2020 15:34:12'!
PASSED!

!testRun: #RestInterfaceTest #test01cannotCreateCartForInvalidClientID stamp: 'JEA 11/30/2020 15:34:12'!
PASSED!

!testRun: #RestInterfaceTest #test02cannotCreateCartForClientWithWrongPassword stamp: 'JEA 11/30/2020 15:34:12'!
PASSED!

!testRun: #RestInterfaceTest #test03canCreateCartForWellAuthenticatedClient stamp: 'JEA 11/30/2020 15:34:12'!
PASSED!

!testRun: #RestInterfaceTest #test04canCreateMoreThanOneCartWithDifferentIDs stamp: 'JEA 11/30/2020 15:34:12'!
PASSED!
!Cart methodsFor: 'initialization' stamp: 'JEA 11/30/2020 15:34:24' prior: 50870749!
initializeAcceptingItemsOf: aCatalog

	catalog := aCatalog.
	items := Bag new.! !
!Cart methodsFor: 'adding' stamp: 'JEA 11/30/2020 15:35:25' prior: 50870771!
add: aQuantity of: anItem

	self assertIsValidQuantity: aQuantity.
	self assertIsValidItem: anItem.

	items add: anItem withOcurrences: aQuantity.
	1 to: aQuantity do: [ :aNumber | items add: anItem ]! !
!Cart methodsFor: 'adding' stamp: 'JEA 11/30/2020 15:35:40' prior: 50872985!
add: aQuantity of: anItem

	self assertIsValidQuantity: aQuantity.
	self assertIsValidItem: anItem.

	items add: anItem withOccurrences: aQuantity.
	1 to: aQuantity do: [ :aNumber | items add: anItem ]! !
!Cart methodsFor: 'adding' stamp: 'JEA 11/30/2020 15:35:47' prior: 50872994!
add: aQuantity of: anItem

	self assertIsValidQuantity: aQuantity.
	self assertIsValidItem: anItem.

	items add: anItem withOccurrences: aQuantity.! !
!Cart methodsFor: 'adding' stamp: 'JEA 11/30/2020 15:35:51' prior: 50873003!
add: aQuantity of: anItem

	self assertIsValidQuantity: aQuantity.
	self assertIsValidItem: anItem.

	items add: anItem withOccurrences: aQuantity.! !

!testRun: #CartTest #test01NewCartsAreCreatedEmpty stamp: 'JEA 11/30/2020 15:35:52'!
PASSED!

!testRun: #CartTest #test02CanNotAddItemsThatDoNotBelongToStore stamp: 'JEA 11/30/2020 15:35:52'!
PASSED!

!testRun: #CartTest #test03AfterAddingAnItemTheCartIsNotEmptyAnymore stamp: 'JEA 11/30/2020 15:35:52'!
PASSED!

!testRun: #CartTest #test04CanNotAddNonPositiveNumberOfItems stamp: 'JEA 11/30/2020 15:35:52'!
PASSED!

!testRun: #CartTest #test05CanNotAddMoreThanOneItemNotSellByTheStore stamp: 'JEA 11/30/2020 15:35:52'!
PASSED!

!testRun: #CartTest #test06CartRemembersAddedItems stamp: 'JEA 11/30/2020 15:35:52'!
PASSED!

!testRun: #CartTest #test07CartDoesNotHoldNotAddedItems stamp: 'JEA 11/30/2020 15:35:52'!
PASSED!

!testRun: #CartTest #test08CartRemembersTheNumberOfAddedItems stamp: 'JEA 11/30/2020 15:35:52'!
PASSED!

!testRun: #CartTest #test01NewCartsAreCreatedEmpty stamp: 'JEA 11/30/2020 15:35:55'!
PASSED!

!testRun: #CartTest #test02CanNotAddItemsThatDoNotBelongToStore stamp: 'JEA 11/30/2020 15:35:55'!
PASSED!

!testRun: #CartTest #test03AfterAddingAnItemTheCartIsNotEmptyAnymore stamp: 'JEA 11/30/2020 15:35:55'!
PASSED!

!testRun: #CartTest #test04CanNotAddNonPositiveNumberOfItems stamp: 'JEA 11/30/2020 15:35:55'!
PASSED!

!testRun: #CartTest #test05CanNotAddMoreThanOneItemNotSellByTheStore stamp: 'JEA 11/30/2020 15:35:55'!
PASSED!

!testRun: #CartTest #test06CartRemembersAddedItems stamp: 'JEA 11/30/2020 15:35:55'!
PASSED!

!testRun: #CartTest #test07CartDoesNotHoldNotAddedItems stamp: 'JEA 11/30/2020 15:35:55'!
PASSED!

!testRun: #CartTest #test08CartRemembersTheNumberOfAddedItems stamp: 'JEA 11/30/2020 15:35:55'!
PASSED!

!testRun: #CashierTest #test01CanNotCheckoutAnEmptyCart stamp: 'JEA 11/30/2020 15:35:55'!
PASSED!

!testRun: #CashierTest #test02CalculatedTotalIsCorrect stamp: 'JEA 11/30/2020 15:35:55'!
PASSED!

!testRun: #CashierTest #test03CanNotCheckoutWithAnExpiredCreditCart stamp: 'JEA 11/30/2020 15:35:55'!
PASSED!

!testRun: #CashierTest #test04CheckoutRegistersASale stamp: 'JEA 11/30/2020 15:35:55'!
PASSED!

!testRun: #CashierTest #test05CashierChargesCreditCardUsingMerchantProcessor stamp: 'JEA 11/30/2020 15:35:55'!
PASSED!

!testRun: #CashierTest #test06CashierDoesNotSaleWhenTheCreditCardHasNoCredit stamp: 'JEA 11/30/2020 15:35:55'!
PASSED!

!testRun: #RestInterfaceTest #test01cannotCreateCartForInvalidClientID stamp: 'JEA 11/30/2020 15:35:55'!
PASSED!

!testRun: #RestInterfaceTest #test02cannotCreateCartForClientWithWrongPassword stamp: 'JEA 11/30/2020 15:35:55'!
PASSED!

!testRun: #RestInterfaceTest #test03canCreateCartForWellAuthenticatedClient stamp: 'JEA 11/30/2020 15:35:55'!
PASSED!

!testRun: #RestInterfaceTest #test04canCreateMoreThanOneCartWithDifferentIDs stamp: 'JEA 11/30/2020 15:35:55'!
PASSED!

----SNAPSHOT----(30 November 2020 15:36:08) CuisUniversity-4384.image priorSource: 17305438!
!RestInterfaceTest methodsFor: 'tests - adding to cart' stamp: 'JEA 11/30/2020 15:44:22'!
test05cannotAddWhenCartIDIsInvalid! !
!RestInterfaceTest methodsFor: 'tests - adding to cart' stamp: 'JEA 11/30/2020 15:46:26' prior: 50873109!
test05cannotAddWhenCartIDIsInvalid

	! !
!RestInterfaceTest methodsFor: 'tests - adding to cart' stamp: 'JEA 11/30/2020 15:46:53' prior: 50873114!
test05cannotAddWhenCartIDIsInvalid

	'Invalid Cart ID.'! !
!RestInterfaceTest methodsFor: 'tests - adding to cart' stamp: 'JEA 11/30/2020 15:48:39' prior: 50873119!
test05cannotAddWhenCartIDIsInvalid
	| restInterface |

	restInterface := RestInterface 
		newWithAuthenticator: AuthenticatorSimulator new 
		withCatalog: 'default catalog'.
	
	restInterface add: 1 of: 'valid ISBN' to: 'Invalid Cart ID.'.! !
!RestInterfaceTest methodsFor: 'tests - adding to cart' stamp: 'JEA 11/30/2020 15:50:44' prior: 50873125!
test05cannotAddWhenCartIDIsInvalid
	| restInterface |

	restInterface := RestInterface 
		newWithAuthenticator: AuthenticatorSimulator new 
		withCatalog: 'default catalog'.
	
	self should: [ restInterface add: 1 of: 'valid ISBN' to: 'Invalid Cart ID.'. ]
		raise: Error
		withMessageText: RestInterface invalidCartIDMessage.! !

!testRun: #RestInterfaceTest #test01cannotCreateCartForInvalidClientID stamp: 'JEA 11/30/2020 15:50:53'!
PASSED!

!testRun: #RestInterfaceTest #test02cannotCreateCartForClientWithWrongPassword stamp: 'JEA 11/30/2020 15:50:53'!
PASSED!

!testRun: #RestInterfaceTest #test03canCreateCartForWellAuthenticatedClient stamp: 'JEA 11/30/2020 15:50:53'!
PASSED!

!testRun: #RestInterfaceTest #test04canCreateMoreThanOneCartWithDifferentIDs stamp: 'JEA 11/30/2020 15:50:53'!
PASSED!

!testRun: #RestInterfaceTest #test05cannotAddWhenCartIDIsInvalid stamp: 'JEA 11/30/2020 15:50:53'!
ERROR!

!testRun: #RestInterfaceTest #test05cannotAddWhenCartIDIsInvalid stamp: 'JEA 11/30/2020 15:50:53'!
ERROR!
!RestInterface class methodsFor: 'error messages' stamp: 'JEA 11/30/2020 15:51:52'!
invalidCartIDMessage

	^'The cart ID provided does not correspond to an already created cart.'! !

!testRun: #RestInterfaceTest #test01cannotCreateCartForInvalidClientID stamp: 'JEA 11/30/2020 15:51:57'!
PASSED!

!testRun: #RestInterfaceTest #test02cannotCreateCartForClientWithWrongPassword stamp: 'JEA 11/30/2020 15:51:57'!
PASSED!

!testRun: #RestInterfaceTest #test03canCreateCartForWellAuthenticatedClient stamp: 'JEA 11/30/2020 15:51:57'!
PASSED!

!testRun: #RestInterfaceTest #test04canCreateMoreThanOneCartWithDifferentIDs stamp: 'JEA 11/30/2020 15:51:57'!
PASSED!

!testRun: #RestInterfaceTest #test05cannotAddWhenCartIDIsInvalid stamp: 'JEA 11/30/2020 15:51:57'!
FAILURE!

!testRun: #RestInterfaceTest #test05cannotAddWhenCartIDIsInvalid stamp: 'JEA 11/30/2020 15:51:57'!
FAILURE!
!RestInterface methodsFor: 'cart' stamp: 'JEA 11/30/2020 15:52:31'!
add: aQuantity of: anISBN to: aCartID

	! !
!RestInterface methodsFor: 'cart' stamp: 'JEA 11/30/2020 15:54:04' prior: 50873198!
add: aQuantity of: anISBN to: aCartID

	(carts at: aCartID)! !
!RestInterface methodsFor: 'cart' stamp: 'JEA 11/30/2020 15:54:25' prior: 50873202!
add: aQuantity of: anISBN to: aCartID

	(carts at: aCartID) add: aQuantity of: anISBN.! !

!testRun: #RestInterfaceTest #test01cannotCreateCartForInvalidClientID stamp: 'JEA 11/30/2020 15:54:25'!
PASSED!

!testRun: #RestInterfaceTest #test02cannotCreateCartForClientWithWrongPassword stamp: 'JEA 11/30/2020 15:54:25'!
PASSED!

!testRun: #RestInterfaceTest #test03canCreateCartForWellAuthenticatedClient stamp: 'JEA 11/30/2020 15:54:25'!
PASSED!

!testRun: #RestInterfaceTest #test04canCreateMoreThanOneCartWithDifferentIDs stamp: 'JEA 11/30/2020 15:54:25'!
PASSED!

!testRun: #RestInterfaceTest #test05cannotAddWhenCartIDIsInvalid stamp: 'JEA 11/30/2020 15:54:25'!
FAILURE!

!testRun: #RestInterfaceTest #test05cannotAddWhenCartIDIsInvalid stamp: 'JEA 11/30/2020 15:54:25'!
FAILURE!
!RestInterface methodsFor: 'cart' stamp: 'JEA 11/30/2020 15:55:01' prior: 50873207!
add: aQuantity of: anISBN to: aCartID

	(carts at: aCartID ifAbsent: [ self error: self class invalidCartIDMessage. ])
		add: aQuantity of: anISBN.! !

!testRun: #RestInterfaceTest #test01cannotCreateCartForInvalidClientID stamp: 'JEA 11/30/2020 15:55:04'!
PASSED!

!testRun: #RestInterfaceTest #test02cannotCreateCartForClientWithWrongPassword stamp: 'JEA 11/30/2020 15:55:04'!
PASSED!

!testRun: #RestInterfaceTest #test03canCreateCartForWellAuthenticatedClient stamp: 'JEA 11/30/2020 15:55:04'!
PASSED!

!testRun: #RestInterfaceTest #test04canCreateMoreThanOneCartWithDifferentIDs stamp: 'JEA 11/30/2020 15:55:04'!
PASSED!

!testRun: #RestInterfaceTest #test05cannotAddWhenCartIDIsInvalid stamp: 'JEA 11/30/2020 15:55:04'!
PASSED!
!RestInterface methodsFor: 'cart' stamp: 'JEA 11/30/2020 15:55:43' prior: 50873235!
add: aQuantity of: anISBN to: aCartID

	(carts at: aCartID ifAbsent: [ self error: self class invalidCartIDMessage. ])! !
!RestInterface methodsFor: 'cart' stamp: 'JEA 11/30/2020 15:55:45' prior: 50873261!
add: aQuantity of: anISBN to: aCartID

	(carts at: aCartID ifAbsent: [ self error: self class invalidCartIDMessage. ]).! !

!testRun: #RestInterfaceTest #test01cannotCreateCartForInvalidClientID stamp: 'JEA 11/30/2020 15:55:47'!
PASSED!

!testRun: #RestInterfaceTest #test02cannotCreateCartForClientWithWrongPassword stamp: 'JEA 11/30/2020 15:55:47'!
PASSED!

!testRun: #RestInterfaceTest #test03canCreateCartForWellAuthenticatedClient stamp: 'JEA 11/30/2020 15:55:47'!
PASSED!

!testRun: #RestInterfaceTest #test04canCreateMoreThanOneCartWithDifferentIDs stamp: 'JEA 11/30/2020 15:55:47'!
PASSED!

!testRun: #RestInterfaceTest #test05cannotAddWhenCartIDIsInvalid stamp: 'JEA 11/30/2020 15:55:47'!
PASSED!
!StoreTestObjectsFactory methodsFor: 'items' stamp: 'JEA 11/30/2020 15:56:27'!
itemNotSoldByTheStore
	
	^'invalidBook'! !
!CartTest methodsFor: 'as yet unclassified' stamp: 'JEA 11/30/2020 15:56:27' prior: 50870866!
test05CanNotAddMoreThanOneItemNotSellByTheStore

	| cart |
	
	cart := testObjectsFactory createCart.
	
	self 
		should: [cart add: 2 of: testObjectsFactory itemNotSoldByTheStore  ]
		raise: Error - MessageNotUnderstood
		withExceptionDo: [ :anError |
			self assert: anError messageText = cart invalidItemErrorMessage.
			self assert: cart isEmpty ]! !
!CartTest methodsFor: 'as yet unclassified' stamp: 'JEA 11/30/2020 15:56:27' prior: 50870822!
test02CanNotAddItemsThatDoNotBelongToStore

	| cart |
	
	cart := testObjectsFactory createCart.
	
	self 
		should: [ cart add: testObjectsFactory itemNotSoldByTheStore ]
		raise: Error - MessageNotUnderstood
		withExceptionDo: [ :anError |
			self assert: anError messageText = cart invalidItemErrorMessage.
			self assert: cart isEmpty ]! !

!methodRemoval: StoreTestObjectsFactory #itemNotSellByTheStore stamp: 'JEA 11/30/2020 15:56:27'!
itemNotSellByTheStore
	
	^'invalidBook'!
!StoreTestObjectsFactory methodsFor: 'items' stamp: 'JEA 11/30/2020 15:56:40'!
itemSoldByTheStore
	
	^ 'validBook'! !
!CashierTest methodsFor: 'as yet unclassified' stamp: 'JEA 11/30/2020 15:56:40' prior: 50871112!
test02CalculatedTotalIsCorrect

	| cart cashier |
	
	cart := testObjectsFactory createCart.
	cart add: 2 of: testObjectsFactory itemSoldByTheStore.
	
	cashier :=  Cashier
		toCheckout: cart 
		charging: testObjectsFactory notExpiredCreditCard 
		throught: self
		on: testObjectsFactory today 
		registeringOn: OrderedCollection new.
		
	self assert: cashier checkOut = (testObjectsFactory itemSellByTheStorePrice * 2)! !
!CashierTest methodsFor: 'as yet unclassified' stamp: 'JEA 11/30/2020 15:56:40' prior: 50871005!
test03CanNotCheckoutWithAnExpiredCreditCart

	| cart salesBook |

	cart := testObjectsFactory createCart.
	cart add: testObjectsFactory itemSoldByTheStore.
	salesBook := OrderedCollection new.
	
	self
		should: [ Cashier 
				toCheckout: cart 
				charging: testObjectsFactory expiredCreditCard 
				throught: self
				on: testObjectsFactory today
				registeringOn: salesBook ]
		raise: Error - MessageNotUnderstood
		withExceptionDo: [ :anError | 
			self assert: anError messageText = Cashier canNotChargeAnExpiredCreditCardErrorMessage.
			self assert: salesBook isEmpty ]! !
!CashierTest methodsFor: 'as yet unclassified' stamp: 'JEA 11/30/2020 15:56:40' prior: 50871070!
test05CashierChargesCreditCardUsingMerchantProcessor

	| cart cashier salesBook total creditCard debitedAmout debitedCreditCard  |

	cart := testObjectsFactory createCart.
	cart add: testObjectsFactory itemSoldByTheStore.
	creditCard := testObjectsFactory notExpiredCreditCard.
	salesBook := OrderedCollection new.
 
	cashier:= Cashier 
		toCheckout: cart 
		charging: creditCard
		throught: self
		on: testObjectsFactory today
		registeringOn: salesBook.
		
	debitBehavior := [ :anAmount :aCreditCard | 
		debitedAmout := anAmount.
		debitedCreditCard := aCreditCard ].
	total := cashier checkOut.
					
	self assert: debitedCreditCard = creditCard.
	self assert: debitedAmout = total.! !
!CartTest methodsFor: 'as yet unclassified' stamp: 'JEA 11/30/2020 15:56:40' prior: 50870808!
test04CanNotAddNonPositiveNumberOfItems

	| cart |
	
	cart := testObjectsFactory createCart.
	
	self 
		should: [cart add: 0 of: testObjectsFactory itemSoldByTheStore ]
		raise: Error - MessageNotUnderstood
		withExceptionDo: [ :anError |
			self assert: anError messageText = cart invalidQuantityErrorMessage.
			self assert: cart isEmpty ]! !
!CartTest methodsFor: 'as yet unclassified' stamp: 'JEA 11/30/2020 15:56:40' prior: 50870858!
test07CartDoesNotHoldNotAddedItems

	| cart |
	
	cart := testObjectsFactory createCart.
	
	self deny: (cart includes: testObjectsFactory itemSoldByTheStore)! !
!CartTest methodsFor: 'as yet unclassified' stamp: 'JEA 11/30/2020 15:56:40' prior: 50870850!
test03AfterAddingAnItemTheCartIsNotEmptyAnymore

	| cart |
	
	cart := testObjectsFactory createCart.
	
	cart add: testObjectsFactory itemSoldByTheStore.
	self deny: cart isEmpty ! !
!CartTest methodsFor: 'as yet unclassified' stamp: 'JEA 11/30/2020 15:56:40' prior: 50870880!
test06CartRemembersAddedItems

	| cart |
	
	cart := testObjectsFactory createCart.
	
	cart add: testObjectsFactory itemSoldByTheStore.
	self assert: (cart includes: testObjectsFactory itemSoldByTheStore)! !
!CashierTest methodsFor: 'as yet unclassified' stamp: 'JEA 11/30/2020 15:56:40' prior: 50871044!
test06CashierDoesNotSaleWhenTheCreditCardHasNoCredit

	| cart cashier salesBook creditCard |

	cart := testObjectsFactory createCart.
	cart add: testObjectsFactory itemSoldByTheStore.
	creditCard := testObjectsFactory notExpiredCreditCard.
	salesBook := OrderedCollection new.
 	debitBehavior := [ :anAmount :aCreditCard | self error: Cashier creditCardHasNoCreditErrorMessage].
	
	cashier:= Cashier 
		toCheckout: cart 
		charging: creditCard
		throught: self
		on: testObjectsFactory today
		registeringOn: salesBook.
		
	self 
		should: [cashier checkOut ]
		raise: Error - MessageNotUnderstood
		withExceptionDo: [ :anError |
			self assert: anError messageText = Cashier creditCardHasNoCreditErrorMessage.
			self assert: salesBook isEmpty ]! !
!StoreTestObjectsFactory methodsFor: 'as yet unclassified' stamp: 'JEA 11/30/2020 15:56:40' prior: 50871239!
defaultCatalog
	
	^ Dictionary new
		at: self itemSoldByTheStore put: self itemSellByTheStorePrice;
		yourself ! !
!CartTest methodsFor: 'as yet unclassified' stamp: 'JEA 11/30/2020 15:56:40' prior: 50870835!
test08CartRemembersTheNumberOfAddedItems

	| cart |
	
	cart := testObjectsFactory createCart.
	
	cart add: 2 of: testObjectsFactory itemSoldByTheStore.
	self assert: (cart occurrencesOf: testObjectsFactory itemSoldByTheStore) = 2! !
!CashierTest methodsFor: 'as yet unclassified' stamp: 'JEA 11/30/2020 15:56:40' prior: 50871330!
test04CheckoutRegistersASale

	| cart cashier salesBook total |

	cart := testObjectsFactory createCart.
	cart add: testObjectsFactory itemSoldByTheStore.
	salesBook := OrderedCollection new.
 
	cashier:= Cashier 
		toCheckout: cart 
		charging: testObjectsFactory notExpiredCreditCard
		throught: self
		on: testObjectsFactory today
		registeringOn: salesBook.
		
	total := cashier checkOut.
					
	self assert: salesBook size = 1.
	self assert: salesBook first = total.! !

!methodRemoval: StoreTestObjectsFactory #itemSellByTheStore stamp: 'JEA 11/30/2020 15:56:40'!
itemSellByTheStore
	
	^ 'validBook'!
!StoreTestObjectsFactory methodsFor: 'items' stamp: 'JEA 11/30/2020 15:56:51'!
itemSoldByTheStorePrice
	
	^10! !
!CashierTest methodsFor: 'as yet unclassified' stamp: 'JEA 11/30/2020 15:56:51' prior: 50873335!
test02CalculatedTotalIsCorrect

	| cart cashier |
	
	cart := testObjectsFactory createCart.
	cart add: 2 of: testObjectsFactory itemSoldByTheStore.
	
	cashier :=  Cashier
		toCheckout: cart 
		charging: testObjectsFactory notExpiredCreditCard 
		throught: self
		on: testObjectsFactory today 
		registeringOn: OrderedCollection new.
		
	self assert: cashier checkOut = (testObjectsFactory itemSoldByTheStorePrice * 2)! !
!StoreTestObjectsFactory methodsFor: 'as yet unclassified' stamp: 'JEA 11/30/2020 15:56:51' prior: 50873467!
defaultCatalog
	
	^ Dictionary new
		at: self itemSoldByTheStore put: self itemSoldByTheStorePrice;
		yourself ! !

!methodRemoval: StoreTestObjectsFactory #itemSellByTheStorePrice stamp: 'JEA 11/30/2020 15:56:51'!
itemSellByTheStorePrice
	
	^10!

!testRun: #CartTest #test01NewCartsAreCreatedEmpty stamp: 'JEA 11/30/2020 15:56:54'!
PASSED!

!testRun: #CartTest #test02CanNotAddItemsThatDoNotBelongToStore stamp: 'JEA 11/30/2020 15:56:54'!
PASSED!

!testRun: #CartTest #test03AfterAddingAnItemTheCartIsNotEmptyAnymore stamp: 'JEA 11/30/2020 15:56:54'!
PASSED!

!testRun: #CartTest #test04CanNotAddNonPositiveNumberOfItems stamp: 'JEA 11/30/2020 15:56:54'!
PASSED!

!testRun: #CartTest #test05CanNotAddMoreThanOneItemNotSellByTheStore stamp: 'JEA 11/30/2020 15:56:54'!
PASSED!

!testRun: #CartTest #test06CartRemembersAddedItems stamp: 'JEA 11/30/2020 15:56:54'!
PASSED!

!testRun: #CartTest #test07CartDoesNotHoldNotAddedItems stamp: 'JEA 11/30/2020 15:56:54'!
PASSED!

!testRun: #CartTest #test08CartRemembersTheNumberOfAddedItems stamp: 'JEA 11/30/2020 15:56:54'!
PASSED!

!testRun: #CashierTest #test01CanNotCheckoutAnEmptyCart stamp: 'JEA 11/30/2020 15:56:54'!
PASSED!

!testRun: #CashierTest #test02CalculatedTotalIsCorrect stamp: 'JEA 11/30/2020 15:56:54'!
PASSED!

!testRun: #CashierTest #test03CanNotCheckoutWithAnExpiredCreditCart stamp: 'JEA 11/30/2020 15:56:54'!
PASSED!

!testRun: #CashierTest #test04CheckoutRegistersASale stamp: 'JEA 11/30/2020 15:56:54'!
PASSED!

!testRun: #CashierTest #test05CashierChargesCreditCardUsingMerchantProcessor stamp: 'JEA 11/30/2020 15:56:54'!
PASSED!

!testRun: #CashierTest #test06CashierDoesNotSaleWhenTheCreditCardHasNoCredit stamp: 'JEA 11/30/2020 15:56:54'!
PASSED!

!testRun: #RestInterfaceTest #test01cannotCreateCartForInvalidClientID stamp: 'JEA 11/30/2020 15:56:54'!
PASSED!

!testRun: #RestInterfaceTest #test02cannotCreateCartForClientWithWrongPassword stamp: 'JEA 11/30/2020 15:56:54'!
PASSED!

!testRun: #RestInterfaceTest #test03canCreateCartForWellAuthenticatedClient stamp: 'JEA 11/30/2020 15:56:54'!
PASSED!

!testRun: #RestInterfaceTest #test04canCreateMoreThanOneCartWithDifferentIDs stamp: 'JEA 11/30/2020 15:56:54'!
PASSED!

!testRun: #RestInterfaceTest #test05cannotAddWhenCartIDIsInvalid stamp: 'JEA 11/30/2020 15:56:54'!
PASSED!
!StoreTestObjectsFactory methodsFor: 'items' stamp: 'JEA 11/30/2020 15:57:25' prior: 50873330!
itemSoldByTheStore
	
	^'validBook'! !
!RestInterfaceTest methodsFor: 'tests - adding to cart' stamp: 'JEA 11/30/2020 15:58:08' prior: 50873136!
test05cannotAddWhenCartIDIsInvalid
	| restInterface |

	restInterface := RestInterface 
		newWithAuthenticator: AuthenticatorSimulator new 
		withCatalog: 'default catalog'.
	
	self should: [ 
		restInterface 
			add: 1 
			of: testObjectsFactory itemSoldByTheStore 
			to: 'Invalid Cart ID.'. 
		]
		raise: Error
		withMessageText: RestInterface invalidCartIDMessage.! !
!StoreTestObjectsFactory methodsFor: 'rest interface' stamp: 'JEA 11/30/2020 16:06:16'!
validClientID

	^'1'.! !
!RestInterfaceTest methodsFor: 'as yet unclassified' stamp: 'JEA 11/30/2020 16:06:16' prior: 50872857!
test04canCreateMoreThanOneCartWithDifferentIDs
	| restInterface authenticatorSimulator cartID1 cartID2 |
	
	authenticatorSimulator := AuthenticatorSimulator new.
	authenticatorSimulator simulateValidClientAndPassword.
	restInterface := RestInterface newWithAuthenticator: authenticatorSimulator withCatalog: Dictionary new.
	
	cartID1 := restInterface 
				createCartFor: testObjectsFactory validClientID 
				password: testObjectsFactory createPassword.

	cartID2 := restInterface 
				createCartFor: testObjectsFactory validClientID 
				password: testObjectsFactory createPassword.
	
	self assert: cartID1 ~= cartID2.! !
!RestInterfaceTest methodsFor: 'as yet unclassified' stamp: 'JEA 11/30/2020 16:06:16' prior: 50872900!
test01cannotCreateCartForInvalidClientID
	| restInterface authenticatorSimulator |
	
	authenticatorSimulator := AuthenticatorSimulator new.
	authenticatorSimulator simulateInvalidClientID.
	restInterface := RestInterface newWithAuthenticator: authenticatorSimulator withCatalog: Dictionary new.
	
	self should: [ restInterface 
				createCartFor: testObjectsFactory validClientID 
				password: testObjectsFactory createPassword. ]
		raise: Error
		withMessageText: RestInterface authenticationFailedMessage.! !
!RestInterfaceTest methodsFor: 'as yet unclassified' stamp: 'JEA 11/30/2020 16:06:16' prior: 50872880!
test02cannotCreateCartForClientWithWrongPassword
	| restInterface authenticatorSimulator |
	
	authenticatorSimulator := AuthenticatorSimulator new.
	authenticatorSimulator simulateWrongPassword.
	restInterface := RestInterface newWithAuthenticator: authenticatorSimulator withCatalog: Dictionary new.
	
	self should: [ restInterface 
				createCartFor: testObjectsFactory validClientID 
				password: testObjectsFactory createPassword. ]
		raise: Error
		withMessageText: RestInterface authenticationFailedMessage.! !
!RestInterfaceTest methodsFor: 'as yet unclassified' stamp: 'JEA 11/30/2020 16:06:16' prior: 50872836!
test03canCreateCartForWellAuthenticatedClient
	| restInterface authenticatorSimulator cartID cartList |
	
	authenticatorSimulator := AuthenticatorSimulator new.
	authenticatorSimulator simulateValidClientAndPassword.
	restInterface := RestInterface newWithAuthenticator: authenticatorSimulator withCatalog: Dictionary new.
	
	cartID := restInterface 
				createCartFor: testObjectsFactory validClientID 
				password: testObjectsFactory createPassword.
	
	cartList := restInterface listCart: cartID.
	
	self assert: cartList isEmpty.! !

!methodRemoval: StoreTestObjectsFactory #createClientID stamp: 'JEA 11/30/2020 16:06:16'!
createClientID

	^'1'.!
!StoreTestObjectsFactory methodsFor: 'rest interface' stamp: 'JEA 11/30/2020 16:06:33'!
correctPassword

	^'qzwxecrvtbynumi'.! !
!RestInterfaceTest methodsFor: 'as yet unclassified' stamp: 'JEA 11/30/2020 16:06:33' prior: 50873671!
test02cannotCreateCartForClientWithWrongPassword
	| restInterface authenticatorSimulator |
	
	authenticatorSimulator := AuthenticatorSimulator new.
	authenticatorSimulator simulateWrongPassword.
	restInterface := RestInterface newWithAuthenticator: authenticatorSimulator withCatalog: Dictionary new.
	
	self should: [ restInterface 
				createCartFor: testObjectsFactory validClientID 
				password: testObjectsFactory correctPassword. ]
		raise: Error
		withMessageText: RestInterface authenticationFailedMessage.! !
!RestInterfaceTest methodsFor: 'as yet unclassified' stamp: 'JEA 11/30/2020 16:06:33' prior: 50873628!
test04canCreateMoreThanOneCartWithDifferentIDs
	| restInterface authenticatorSimulator cartID1 cartID2 |
	
	authenticatorSimulator := AuthenticatorSimulator new.
	authenticatorSimulator simulateValidClientAndPassword.
	restInterface := RestInterface newWithAuthenticator: authenticatorSimulator withCatalog: Dictionary new.
	
	cartID1 := restInterface 
				createCartFor: testObjectsFactory validClientID 
				password: testObjectsFactory correctPassword.

	cartID2 := restInterface 
				createCartFor: testObjectsFactory validClientID 
				password: testObjectsFactory correctPassword.
	
	self assert: cartID1 ~= cartID2.! !
!RestInterfaceTest methodsFor: 'as yet unclassified' stamp: 'JEA 11/30/2020 16:06:33' prior: 50873691!
test03canCreateCartForWellAuthenticatedClient
	| restInterface authenticatorSimulator cartID cartList |
	
	authenticatorSimulator := AuthenticatorSimulator new.
	authenticatorSimulator simulateValidClientAndPassword.
	restInterface := RestInterface newWithAuthenticator: authenticatorSimulator withCatalog: Dictionary new.
	
	cartID := restInterface 
				createCartFor: testObjectsFactory validClientID 
				password: testObjectsFactory correctPassword.
	
	cartList := restInterface listCart: cartID.
	
	self assert: cartList isEmpty.! !
!RestInterfaceTest methodsFor: 'as yet unclassified' stamp: 'JEA 11/30/2020 16:06:33' prior: 50873651!
test01cannotCreateCartForInvalidClientID
	| restInterface authenticatorSimulator |
	
	authenticatorSimulator := AuthenticatorSimulator new.
	authenticatorSimulator simulateInvalidClientID.
	restInterface := RestInterface newWithAuthenticator: authenticatorSimulator withCatalog: Dictionary new.
	
	self should: [ restInterface 
				createCartFor: testObjectsFactory validClientID 
				password: testObjectsFactory correctPassword. ]
		raise: Error
		withMessageText: RestInterface authenticationFailedMessage.! !

!methodRemoval: StoreTestObjectsFactory #createPassword stamp: 'JEA 11/30/2020 16:06:33'!
createPassword

	^'qzwxecrvtbynumi'.!
!StoreTestObjectsFactory methodsFor: 'rest interface' stamp: 'JEA 11/30/2020 16:06:48'!
invalidCartID

	^'Invalid Cart ID.'.! !
!RestInterfaceTest methodsFor: 'tests - adding to cart' stamp: 'JEA 11/30/2020 16:08:06' prior: 50873609!
test05cannotAddWhenCartIDIsInvalid
	| restInterface |

	restInterface := RestInterface 
		newWithAuthenticator: AuthenticatorSimulator new 
		withCatalog: 'default catalog'.
	
	self should: [ 
		restInterface 
			add: 1 
			of: testObjectsFactory itemSoldByTheStore 
			to: testObjectsFactory invalidCartID. 
		]
		raise: Error
		withMessageText: RestInterface invalidCartIDMessage.! !
!RestInterfaceTest methodsFor: 'tests - adding to cart' stamp: 'JEA 11/30/2020 16:09:11' prior: 50873812!
test05cannotAddWhenCartIDIsInvalid
	| restInterface |

	restInterface := RestInterface 
		newWithAuthenticator: AuthenticatorSimulator new 
		withCatalog: testObjectsFactory defaultCatalog.
	
	self should: [ 
		restInterface 
			add: 1 
			of: testObjectsFactory itemSoldByTheStore 
			to: testObjectsFactory invalidCartID. 
		]
		raise: Error
		withMessageText: RestInterface invalidCartIDMessage.! !
!AuthenticatorSimulator class methodsFor: 'instance creation' stamp: 'JEA 11/30/2020 16:11:35'!
newSimulatingValidAuthentication! !
!AuthenticatorSimulator methodsFor: 'initialization' stamp: 'JEA 11/30/2020 16:12:18'!
initializeSimulatingValidAuthentication

	self simulateValidClientAndPassword.! !

!methodRemoval: AuthenticatorSimulator #initialize stamp: 'JEA 11/30/2020 16:12:24'!
initialize

	self simulateValidClientAndPassword.!
!AuthenticatorSimulator class methodsFor: 'instance creation' stamp: 'JEA 11/30/2020 16:12:42' prior: 50873844!
newSimulatingValidAuthentication

	^self new initializeSimulatingValidAuthentication.! !
!RestInterfaceTest methodsFor: 'tests - creating cart' stamp: 'JEA 11/30/2020 16:13:06' prior: 50873784!
test01cannotCreateCartForInvalidClientID
	| restInterface authenticatorSimulator |
	
	authenticatorSimulator := AuthenticatorSimulator newSimulatingValidAuthentication.
	authenticatorSimulator simulateInvalidClientID.
	restInterface := RestInterface newWithAuthenticator: authenticatorSimulator withCatalog: Dictionary new.
	
	self should: [ restInterface 
				createCartFor: testObjectsFactory validClientID 
				password: testObjectsFactory correctPassword. ]
		raise: Error
		withMessageText: RestInterface authenticationFailedMessage.! !
!RestInterfaceTest methodsFor: 'tests - creating cart' stamp: 'JEA 11/30/2020 16:13:16' prior: 50873720!
test02cannotCreateCartForClientWithWrongPassword
	| restInterface authenticatorSimulator |
	
	authenticatorSimulator := AuthenticatorSimulator newSimulatingValidAuthentication.
	authenticatorSimulator simulateWrongPassword.
	restInterface := RestInterface newWithAuthenticator: authenticatorSimulator withCatalog: Dictionary new.
	
	self should: [ restInterface 
				createCartFor: testObjectsFactory validClientID 
				password: testObjectsFactory correctPassword. ]
		raise: Error
		withMessageText: RestInterface authenticationFailedMessage.! !
!RestInterfaceTest methodsFor: 'tests - creating cart' stamp: 'JEA 11/30/2020 16:13:19' prior: 50873763!
test03canCreateCartForWellAuthenticatedClient
	| restInterface authenticatorSimulator cartID cartList |
	
	authenticatorSimulator := AuthenticatorSimulator newSimulatingValidAuthentication.
	authenticatorSimulator simulateValidClientAndPassword.
	restInterface := RestInterface newWithAuthenticator: authenticatorSimulator withCatalog: Dictionary new.
	
	cartID := restInterface 
				createCartFor: testObjectsFactory validClientID 
				password: testObjectsFactory correctPassword.
	
	cartList := restInterface listCart: cartID.
	
	self assert: cartList isEmpty.! !
!RestInterfaceTest methodsFor: 'tests - creating cart' stamp: 'JEA 11/30/2020 16:13:21' prior: 50873740!
test04canCreateMoreThanOneCartWithDifferentIDs
	| restInterface authenticatorSimulator cartID1 cartID2 |
	
	authenticatorSimulator := AuthenticatorSimulator newSimulatingValidAuthentication.
	authenticatorSimulator simulateValidClientAndPassword.
	restInterface := RestInterface newWithAuthenticator: authenticatorSimulator withCatalog: Dictionary new.
	
	cartID1 := restInterface 
				createCartFor: testObjectsFactory validClientID 
				password: testObjectsFactory correctPassword.

	cartID2 := restInterface 
				createCartFor: testObjectsFactory validClientID 
				password: testObjectsFactory correctPassword.
	
	self assert: cartID1 ~= cartID2.! !
!RestInterfaceTest methodsFor: 'tests - creating cart' stamp: 'JEA 11/30/2020 16:13:27' prior: 50873929!
test04canCreateMoreThanOneCartWithDifferentIDs
	| restInterface authenticatorSimulator cartID1 cartID2 |
	
	authenticatorSimulator := AuthenticatorSimulator newSimulatingValidAuthentication.
	restInterface := RestInterface newWithAuthenticator: authenticatorSimulator withCatalog: Dictionary new.
	
	cartID1 := restInterface 
				createCartFor: testObjectsFactory validClientID 
				password: testObjectsFactory correctPassword.

	cartID2 := restInterface 
				createCartFor: testObjectsFactory validClientID 
				password: testObjectsFactory correctPassword.
	
	self assert: cartID1 ~= cartID2.! !
!RestInterfaceTest methodsFor: 'tests - creating cart' stamp: 'JEA 11/30/2020 16:13:31' prior: 50873908!
test03canCreateCartForWellAuthenticatedClient
	| restInterface authenticatorSimulator cartID cartList |
	
	authenticatorSimulator := AuthenticatorSimulator newSimulatingValidAuthentication.
	restInterface := RestInterface newWithAuthenticator: authenticatorSimulator withCatalog: Dictionary new.
	
	cartID := restInterface 
				createCartFor: testObjectsFactory validClientID 
				password: testObjectsFactory correctPassword.
	
	cartList := restInterface listCart: cartID.
	
	self assert: cartList isEmpty.! !

!testRun: #RestInterfaceTest #test03canCreateCartForWellAuthenticatedClient stamp: 'JEA 11/30/2020 16:13:33'!
PASSED!

!testRun: #CartTest #test01NewCartsAreCreatedEmpty stamp: 'JEA 11/30/2020 16:13:33'!
PASSED!

!testRun: #CartTest #test02CanNotAddItemsThatDoNotBelongToStore stamp: 'JEA 11/30/2020 16:13:33'!
PASSED!

!testRun: #CartTest #test03AfterAddingAnItemTheCartIsNotEmptyAnymore stamp: 'JEA 11/30/2020 16:13:33'!
PASSED!

!testRun: #CartTest #test04CanNotAddNonPositiveNumberOfItems stamp: 'JEA 11/30/2020 16:13:33'!
PASSED!

!testRun: #CartTest #test05CanNotAddMoreThanOneItemNotSellByTheStore stamp: 'JEA 11/30/2020 16:13:33'!
PASSED!

!testRun: #CartTest #test06CartRemembersAddedItems stamp: 'JEA 11/30/2020 16:13:33'!
PASSED!

!testRun: #CartTest #test07CartDoesNotHoldNotAddedItems stamp: 'JEA 11/30/2020 16:13:33'!
PASSED!

!testRun: #CartTest #test08CartRemembersTheNumberOfAddedItems stamp: 'JEA 11/30/2020 16:13:33'!
PASSED!

!testRun: #CashierTest #test01CanNotCheckoutAnEmptyCart stamp: 'JEA 11/30/2020 16:13:33'!
PASSED!

!testRun: #CashierTest #test02CalculatedTotalIsCorrect stamp: 'JEA 11/30/2020 16:13:33'!
PASSED!

!testRun: #CashierTest #test03CanNotCheckoutWithAnExpiredCreditCart stamp: 'JEA 11/30/2020 16:13:33'!
PASSED!

!testRun: #CashierTest #test04CheckoutRegistersASale stamp: 'JEA 11/30/2020 16:13:33'!
PASSED!

!testRun: #CashierTest #test05CashierChargesCreditCardUsingMerchantProcessor stamp: 'JEA 11/30/2020 16:13:33'!
PASSED!

!testRun: #CashierTest #test06CashierDoesNotSaleWhenTheCreditCardHasNoCredit stamp: 'JEA 11/30/2020 16:13:33'!
PASSED!

!testRun: #RestInterfaceTest #test01cannotCreateCartForInvalidClientID stamp: 'JEA 11/30/2020 16:13:33'!
PASSED!

!testRun: #RestInterfaceTest #test02cannotCreateCartForClientWithWrongPassword stamp: 'JEA 11/30/2020 16:13:33'!
PASSED!

!testRun: #RestInterfaceTest #test03canCreateCartForWellAuthenticatedClient stamp: 'JEA 11/30/2020 16:13:33'!
PASSED!

!testRun: #RestInterfaceTest #test04canCreateMoreThanOneCartWithDifferentIDs stamp: 'JEA 11/30/2020 16:13:33'!
PASSED!

!testRun: #RestInterfaceTest #test05cannotAddWhenCartIDIsInvalid stamp: 'JEA 11/30/2020 16:13:33'!
PASSED!
!RestInterfaceTest methodsFor: 'tests - adding to cart' stamp: 'JEA 11/30/2020 16:13:39' prior: 50873828!
test05cannotAddWhenCartIDIsInvalid
	| restInterface |

	restInterface := RestInterface 
		newWithAuthenticator: AuthenticatorSimulator newSimulatingValidAuthentication 
		withCatalog: testObjectsFactory defaultCatalog.
	
	self should: [ 
		restInterface 
			add: 1 
			of: testObjectsFactory itemSoldByTheStore 
			to: testObjectsFactory invalidCartID. 
		]
		raise: Error
		withMessageText: RestInterface invalidCartIDMessage.! !

----SNAPSHOT----(30 November 2020 17:08:36) CuisUniversity-4384.image priorSource: 17326539!

!testRun: #RestInterfaceTest #test01cannotCreateCartForInvalidClientID stamp: 'JEA 11/30/2020 18:05:39'!
PASSED!

!testRun: #RestInterfaceTest #test02cannotCreateCartForClientWithWrongPassword stamp: 'JEA 11/30/2020 18:05:39'!
PASSED!

!testRun: #RestInterfaceTest #test03canCreateCartForWellAuthenticatedClient stamp: 'JEA 11/30/2020 18:05:39'!
PASSED!

!testRun: #RestInterfaceTest #test04canCreateMoreThanOneCartWithDifferentIDs stamp: 'JEA 11/30/2020 18:05:39'!
PASSED!

!testRun: #RestInterfaceTest #test05cannotAddWhenCartIDIsInvalid stamp: 'JEA 11/30/2020 18:05:39'!
PASSED!
!RestInterfaceTest methodsFor: 'tests - adding to cart' stamp: 'JEA 11/30/2020 18:06:11'!
test06cannotAddLessThanOneBookToCart
	| restInterface |

	restInterface := RestInterface 
		newWithAuthenticator: AuthenticatorSimulator newSimulatingValidAuthentication 
		withCatalog: testObjectsFactory defaultCatalog.
	
	self should: [ 
		restInterface 
			add: 0 
			of: testObjectsFactory itemSoldByTheStore 
			to: testObjectsFactory invalidCartID. 
		]
		raise: Error
		withMessageText: RestInterface addAtLeastOneItemMessage.! !

!methodRemoval: RestInterfaceTest #test06cannotAddLessThanOneBookToCart stamp: 'JEA 11/30/2020 18:06:32'!
test06cannotAddLessThanOneBookToCart
	| restInterface |

	restInterface := RestInterface 
		newWithAuthenticator: AuthenticatorSimulator newSimulatingValidAuthentication 
		withCatalog: testObjectsFactory defaultCatalog.
	
	self should: [ 
		restInterface 
			add: 0 
			of: testObjectsFactory itemSoldByTheStore 
			to: testObjectsFactory invalidCartID. 
		]
		raise: Error
		withMessageText: RestInterface addAtLeastOneItemMessage.!
!RestInterfaceTest methodsFor: 'tests - adding to cart' stamp: 'JEA 11/30/2020 18:07:14'!
test06canAddItemToCartWithValidID
	| restInterface |

	restInterface := RestInterface 
		newWithAuthenticator: AuthenticatorSimulator newSimulatingValidAuthentication 
		withCatalog: testObjectsFactory defaultCatalog.
	
	self should: [ 
		restInterface 
			add: 1 
			of: testObjectsFactory itemSoldByTheStore 
			to: testObjectsFactory validCartID. 
		]
		raise: Error
		withMessageText: RestInterface invalidCartIDMessage.! !
!RestInterfaceTest methodsFor: 'tests - adding to cart' stamp: 'JEA 11/30/2020 18:10:28' prior: 50874135!
test06canAddItemToCartWithValidID
	| restInterface cartID |

	restInterface := RestInterface 
		newWithAuthenticator: AuthenticatorSimulator newSimulatingValidAuthentication 
		withCatalog: testObjectsFactory defaultCatalog.
	
	cartID := restInterface 
		createCartFor: testObjectsFactory validClientID
		withPassword: testObjectsFactory correctPassword.
	
	restInterface 
		add: 1 
		of: testObjectsFactory itemSoldByTheStore 
		to: cartID. ! !
!RestInterfaceTest methodsFor: 'tests - adding to cart' stamp: 'JEA 11/30/2020 18:10:38' prior: 50874152!
test06canAddItemToCartWithValidID
	| restInterface cartID |

	restInterface := RestInterface 
		newWithAuthenticator: AuthenticatorSimulator newSimulatingValidAuthentication 
		withCatalog: testObjectsFactory defaultCatalog.
	
	cartID := restInterface 
		createCartFor: testObjectsFactory validClientID
		password: testObjectsFactory correctPassword.
	
	restInterface 
		add: 1 
		of: testObjectsFactory itemSoldByTheStore 
		to: cartID. ! !
!RestInterfaceTest methodsFor: 'tests - adding to cart' stamp: 'JEA 11/30/2020 18:11:33' prior: 50874170!
test06canAddItemToCartWithValidID
	| restInterface cartID |

	restInterface := RestInterface 
		newWithAuthenticator: AuthenticatorSimulator newSimulatingValidAuthentication 
		withCatalog: testObjectsFactory defaultCatalog.
	
	cartID := restInterface 
		createCartFor: testObjectsFactory validClientID
		password: testObjectsFactory correctPassword.
	
	restInterface 
		add: 2 
		of: testObjectsFactory itemSoldByTheStore 
		to: cartID.
	
	self assert: ((restInterface listCart: cartID) includes: testObjectsFactory itemSoldByTheStore withOccurrences: 2).! !
!RestInterfaceTest methodsFor: 'tests - adding to cart' stamp: 'JEA 11/30/2020 18:12:12' prior: 50874188!
test06canAddItemToCartWithValidID
	| restInterface cartID |

	restInterface := RestInterface 
		newWithAuthenticator: AuthenticatorSimulator newSimulatingValidAuthentication 
		withCatalog: testObjectsFactory defaultCatalog.
	
	cartID := restInterface 
		createCartFor: testObjectsFactory validClientID
		password: testObjectsFactory correctPassword.
	
	restInterface 
		add: 2 
		of: testObjectsFactory itemSoldByTheStore 
		to: cartID.
	
	self assert: 2 equals: ((restInterface listCart: cartID) occurrencesOf: testObjectsFactory itemSoldByTheStore).! !
!RestInterfaceTest methodsFor: 'tests - adding to cart' stamp: 'JEA 11/30/2020 18:12:34' prior: 50874209!
test06canAddItemToCartWithValidID
	| restInterface cartID |

	restInterface := RestInterface 
		newWithAuthenticator: AuthenticatorSimulator newSimulatingValidAuthentication 
		withCatalog: testObjectsFactory defaultCatalog.
	
	cartID := restInterface 
		createCartFor: testObjectsFactory validClientID
		password: testObjectsFactory correctPassword.
	
	restInterface 
		add: 2 
		of: testObjectsFactory itemSoldByTheStore 
		to: cartID.
	
	self assert: 2 
		equals: ((restInterface listCart: cartID) occurrencesOf: testObjectsFactory itemSoldByTheStore).! !

!testRun: #RestInterfaceTest #test01cannotCreateCartForInvalidClientID stamp: 'JEA 11/30/2020 18:12:35'!
PASSED!

!testRun: #RestInterfaceTest #test02cannotCreateCartForClientWithWrongPassword stamp: 'JEA 11/30/2020 18:12:35'!
PASSED!

!testRun: #RestInterfaceTest #test03canCreateCartForWellAuthenticatedClient stamp: 'JEA 11/30/2020 18:12:35'!
PASSED!

!testRun: #RestInterfaceTest #test04canCreateMoreThanOneCartWithDifferentIDs stamp: 'JEA 11/30/2020 18:12:35'!
PASSED!

!testRun: #RestInterfaceTest #test05cannotAddWhenCartIDIsInvalid stamp: 'JEA 11/30/2020 18:12:35'!
PASSED!

!testRun: #RestInterfaceTest #test06canAddItemToCartWithValidID stamp: 'JEA 11/30/2020 18:12:35'!
FAILURE!

!testRun: #RestInterfaceTest #test06canAddItemToCartWithValidID stamp: 'JEA 11/30/2020 18:12:35'!
FAILURE!
!RestInterface methodsFor: 'cart' stamp: 'JEA 11/30/2020 18:12:58' prior: 50873268!
add: aQuantity of: anISBN to: aCartID

	carts at: aCartID ifAbsent: [ self error: self class invalidCartIDMessage. ].! !

!testRun: #RestInterfaceTest #test01cannotCreateCartForInvalidClientID stamp: 'JEA 11/30/2020 18:12:59'!
PASSED!

!testRun: #RestInterfaceTest #test02cannotCreateCartForClientWithWrongPassword stamp: 'JEA 11/30/2020 18:12:59'!
PASSED!

!testRun: #RestInterfaceTest #test03canCreateCartForWellAuthenticatedClient stamp: 'JEA 11/30/2020 18:12:59'!
PASSED!

!testRun: #RestInterfaceTest #test04canCreateMoreThanOneCartWithDifferentIDs stamp: 'JEA 11/30/2020 18:12:59'!
PASSED!

!testRun: #RestInterfaceTest #test05cannotAddWhenCartIDIsInvalid stamp: 'JEA 11/30/2020 18:12:59'!
PASSED!

!testRun: #RestInterfaceTest #test06canAddItemToCartWithValidID stamp: 'JEA 11/30/2020 18:12:59'!
FAILURE!

!testRun: #RestInterfaceTest #test06canAddItemToCartWithValidID stamp: 'JEA 11/30/2020 18:12:59'!
FAILURE!
!RestInterface methodsFor: 'cart' stamp: 'JEA 11/30/2020 18:13:44' prior: 50874276!
add: aQuantity of: anISBN to: aCartID

	(carts at: aCartID ifAbsent: [ self error: self class invalidCartIDMessage. ])
		add: aQuantity
		of: anISBN.! !

!testRun: #RestInterfaceTest #test01cannotCreateCartForInvalidClientID stamp: 'JEA 11/30/2020 18:13:45'!
PASSED!

!testRun: #RestInterfaceTest #test02cannotCreateCartForClientWithWrongPassword stamp: 'JEA 11/30/2020 18:13:45'!
PASSED!

!testRun: #RestInterfaceTest #test03canCreateCartForWellAuthenticatedClient stamp: 'JEA 11/30/2020 18:13:45'!
PASSED!

!testRun: #RestInterfaceTest #test04canCreateMoreThanOneCartWithDifferentIDs stamp: 'JEA 11/30/2020 18:13:45'!
PASSED!

!testRun: #RestInterfaceTest #test05cannotAddWhenCartIDIsInvalid stamp: 'JEA 11/30/2020 18:13:45'!
PASSED!

!testRun: #RestInterfaceTest #test06canAddItemToCartWithValidID stamp: 'JEA 11/30/2020 18:13:45'!
PASSED!
!RestInterfaceTest methodsFor: 'tests - cart timeout' stamp: 'JEA 11/30/2020 18:15:31'!
test99cantAddToCartAfterTimeout

	! !
!RestInterfaceTest methodsFor: 'tests - cart timeout' stamp: 'JEA 11/30/2020 18:18:32' prior: 50874338!
test99cantAddToCartAfterTimeout
	| restInterface cartID |

	restInterface := RestInterface 
		newWithAuthenticator: AuthenticatorSimulator newSimulatingValidAuthentication 
		withCatalog: testObjectsFactory defaultCatalog.
	
	cartID := restInterface 
		createCartFor: testObjectsFactory validClientID
		password: testObjectsFactory correctPassword.
	
	restInterface 
		add: 2 
		of: testObjectsFactory itemSoldByTheStore 
		to: cartID.! !
!RestInterfaceTest methodsFor: 'tests - cart timeout' stamp: 'JEA 11/30/2020 18:19:07' prior: 50874343!
test99cantAddToCartAfterTimeout
	| restInterface cartID |

	restInterface := RestInterface 
		newWithAuthenticator: AuthenticatorSimulator newSimulatingValidAuthentication 
		withCatalog: testObjectsFactory defaultCatalog.
	
	cartID := restInterface 
		createCartFor: testObjectsFactory validClientID
		password: testObjectsFactory correctPassword.
	
	'Timeout.'.
	
	restInterface 
		add: 2 
		of: testObjectsFactory itemSoldByTheStore 
		to: cartID.! !
!RestInterfaceTest methodsFor: 'tests - cart timeout' stamp: 'JEA 11/30/2020 18:20:08' prior: 50874360!
test99cantAddToCartAfterTimeout
	| restInterface cartID |

	restInterface := RestInterface 
		newWithAuthenticator: AuthenticatorSimulator newSimulatingValidAuthentication 
		withCatalog: testObjectsFactory defaultCatalog.
	
	cartID := restInterface 
		createCartFor: testObjectsFactory validClientID
		password: testObjectsFactory correctPassword.
	
	'Timeout.'.
	
	self should: [ 
		restInterface 
			add: 2 
			of: testObjectsFactory itemSoldByTheStore 
			to: cartID. 
		]
		raise: Error
		withMessageText: RestInterface cartTimedOutMessage.! !

!testRun: #RestInterfaceTest #test01cannotCreateCartForInvalidClientID stamp: 'JEA 11/30/2020 18:20:12'!
PASSED!

!testRun: #RestInterfaceTest #test02cannotCreateCartForClientWithWrongPassword stamp: 'JEA 11/30/2020 18:20:12'!
PASSED!

!testRun: #RestInterfaceTest #test03canCreateCartForWellAuthenticatedClient stamp: 'JEA 11/30/2020 18:20:12'!
PASSED!

!testRun: #RestInterfaceTest #test04canCreateMoreThanOneCartWithDifferentIDs stamp: 'JEA 11/30/2020 18:20:12'!
PASSED!

!testRun: #RestInterfaceTest #test05cannotAddWhenCartIDIsInvalid stamp: 'JEA 11/30/2020 18:20:12'!
PASSED!

!testRun: #RestInterfaceTest #test06canAddItemToCartWithValidID stamp: 'JEA 11/30/2020 18:20:12'!
PASSED!

!testRun: #RestInterfaceTest #test99cantAddToCartAfterTimeout stamp: 'JEA 11/30/2020 18:20:12'!
ERROR!

!testRun: #RestInterfaceTest #test99cantAddToCartAfterTimeout stamp: 'JEA 11/30/2020 18:20:12'!
ERROR!
!RestInterface class methodsFor: 'error messages' stamp: 'JEA 11/30/2020 18:20:59'!
cartTimedOutMessage

	^'The cart with the given ID has timed out.'! !
!RestInterface class methodsFor: 'error messages' stamp: 'JEA 11/30/2020 18:21:01' prior: 50874426!
cartTimedOutMessage

	^'The cart with the given ID has timed out.'.! !

!testRun: #RestInterfaceTest #test01cannotCreateCartForInvalidClientID stamp: 'JEA 11/30/2020 18:21:05'!
PASSED!

!testRun: #RestInterfaceTest #test02cannotCreateCartForClientWithWrongPassword stamp: 'JEA 11/30/2020 18:21:05'!
PASSED!

!testRun: #RestInterfaceTest #test03canCreateCartForWellAuthenticatedClient stamp: 'JEA 11/30/2020 18:21:05'!
PASSED!

!testRun: #RestInterfaceTest #test04canCreateMoreThanOneCartWithDifferentIDs stamp: 'JEA 11/30/2020 18:21:05'!
PASSED!

!testRun: #RestInterfaceTest #test05cannotAddWhenCartIDIsInvalid stamp: 'JEA 11/30/2020 18:21:05'!
PASSED!

!testRun: #RestInterfaceTest #test06canAddItemToCartWithValidID stamp: 'JEA 11/30/2020 18:21:05'!
PASSED!

!testRun: #RestInterfaceTest #test99cantAddToCartAfterTimeout stamp: 'JEA 11/30/2020 18:21:05'!
FAILURE!

!testRun: #RestInterfaceTest #test99cantAddToCartAfterTimeout stamp: 'JEA 11/30/2020 18:21:05'!
FAILURE!

----SNAPSHOT----(30 November 2020 18:24:35) CuisUniversity-4384.image priorSource: 17357710!
!RestInterfaceTest methodsFor: 'tests - checking out cart' stamp: 'JEA 11/30/2020 18:27:05'!
test07cantCheckOutCartWithInvalidID

	! !
!RestInterfaceTest methodsFor: 'tests - checking out cart' stamp: 'JEA 11/30/2020 18:29:09' prior: 50874469!
test07cantCheckOutCartWithInvalidID
	| restInterface |

	restInterface := RestInterface 
		newWithAuthenticator: AuthenticatorSimulator newSimulatingValidAuthentication 
		withCatalog: testObjectsFactory defaultCatalog.
	
	self should: [ 
		restInterface 
			checkOut: testObjectsFactory invalidCartID 
			withCardNumber: '' 
			expirationDate: ''
			owner: ''. 
		]
		raise: Error
		withMessageText: RestInterface invalidCartIDMessage.! !
!StoreTestObjectsFactory methodsFor: 'rest interface' stamp: 'JEA 11/30/2020 18:30:15'!
validCreditCardNumber

	! !
!Cashier methodsFor: 'initialization' stamp: 'JEA 11/30/2020 18:31:17'!
initializeToCheckout: aCart charging: aCreditCard through: aMerchantProcessor registeringOn: aSalesBook
	
	cart := aCart.
	creditCard := aCreditCard.
	merchantProcessor := aMerchantProcessor.
	salesBook := aSalesBook! !
!Cashier class methodsFor: 'as yet unclassified' stamp: 'JEA 11/30/2020 18:31:17' prior: 50870963!
toCheckout: aCart charging: aCreditCard throught: aMerchantProcessor on: aDate registeringOn: aSalesBook
	
	self assertIsNotEmpty: aCart.
	self assertIsNotExpired: aCreditCard on: aDate.
	
	^self new initializeToCheckout: aCart charging: aCreditCard through: aMerchantProcessor registeringOn: aSalesBook! !

!methodRemoval: Cashier #initializeToCheckout:charging:throught:registeringOn: stamp: 'JEA 11/30/2020 18:31:17'!
initializeToCheckout: aCart charging: aCreditCard throught: aMerchantProcessor registeringOn: aSalesBook
	
	cart := aCart.
	creditCard := aCreditCard.
	merchantProcessor := aMerchantProcessor.
	salesBook := aSalesBook!

!testRun: #CartTest #test01NewCartsAreCreatedEmpty stamp: 'JEA 11/30/2020 18:31:20'!
PASSED!

!testRun: #CartTest #test02CanNotAddItemsThatDoNotBelongToStore stamp: 'JEA 11/30/2020 18:31:20'!
PASSED!

!testRun: #CartTest #test03AfterAddingAnItemTheCartIsNotEmptyAnymore stamp: 'JEA 11/30/2020 18:31:20'!
PASSED!

!testRun: #CartTest #test04CanNotAddNonPositiveNumberOfItems stamp: 'JEA 11/30/2020 18:31:20'!
PASSED!

!testRun: #CartTest #test05CanNotAddMoreThanOneItemNotSellByTheStore stamp: 'JEA 11/30/2020 18:31:20'!
PASSED!

!testRun: #CartTest #test06CartRemembersAddedItems stamp: 'JEA 11/30/2020 18:31:20'!
PASSED!

!testRun: #CartTest #test07CartDoesNotHoldNotAddedItems stamp: 'JEA 11/30/2020 18:31:20'!
PASSED!

!testRun: #CartTest #test08CartRemembersTheNumberOfAddedItems stamp: 'JEA 11/30/2020 18:31:20'!
PASSED!

!testRun: #CashierTest #test01CanNotCheckoutAnEmptyCart stamp: 'JEA 11/30/2020 18:31:20'!
PASSED!

!testRun: #CashierTest #test02CalculatedTotalIsCorrect stamp: 'JEA 11/30/2020 18:31:20'!
PASSED!

!testRun: #CashierTest #test03CanNotCheckoutWithAnExpiredCreditCart stamp: 'JEA 11/30/2020 18:31:20'!
PASSED!

!testRun: #CashierTest #test04CheckoutRegistersASale stamp: 'JEA 11/30/2020 18:31:20'!
PASSED!

!testRun: #CashierTest #test05CashierChargesCreditCardUsingMerchantProcessor stamp: 'JEA 11/30/2020 18:31:20'!
PASSED!

!testRun: #CashierTest #test06CashierDoesNotSaleWhenTheCreditCardHasNoCredit stamp: 'JEA 11/30/2020 18:31:20'!
PASSED!

!testRun: #RestInterfaceTest #test01cannotCreateCartForInvalidClientID stamp: 'JEA 11/30/2020 18:31:20'!
PASSED!

!testRun: #RestInterfaceTest #test02cannotCreateCartForClientWithWrongPassword stamp: 'JEA 11/30/2020 18:31:20'!
PASSED!

!testRun: #RestInterfaceTest #test03canCreateCartForWellAuthenticatedClient stamp: 'JEA 11/30/2020 18:31:20'!
PASSED!

!testRun: #RestInterfaceTest #test04canCreateMoreThanOneCartWithDifferentIDs stamp: 'JEA 11/30/2020 18:31:20'!
PASSED!

!testRun: #RestInterfaceTest #test05cannotAddWhenCartIDIsInvalid stamp: 'JEA 11/30/2020 18:31:20'!
PASSED!

!testRun: #RestInterfaceTest #test06canAddItemToCartWithValidID stamp: 'JEA 11/30/2020 18:31:20'!
PASSED!

!testRun: #RestInterfaceTest #test07cantCheckOutCartWithInvalidID stamp: 'JEA 11/30/2020 18:31:20'!
FAILURE!

!testRun: #RestInterfaceTest #test99cantAddToCartAfterTimeout stamp: 'JEA 11/30/2020 18:31:20'!
FAILURE!

----SNAPSHOT----(30 November 2020 18:31:44) CuisUniversity-4384.image priorSource: 17370060!
!RestInterfaceTest methodsFor: 'tests - checking out cart' stamp: 'JEA 11/30/2020 18:41:07' prior: 50874474!
test07cantCheckOutCartWithInvalidID
	| restInterface |

	restInterface := RestInterface 
		newWithAuthenticator: AuthenticatorSimulator newSimulatingValidAuthentication 
		withCatalog: testObjectsFactory defaultCatalog.
	
	self should: [ 
		restInterface 
			checkOut: testObjectsFactory invalidCartID 
			withCardNumber: '' 
			expirationDate: '' 
			owner: ''. 
		]
		raise: Error
		withMessageText: RestInterface invalidCartIDMessage.! !
!RestInterfaceTest methodsFor: 'tests - cart timeout' stamp: 'JEA 11/30/2020 18:42:53' prior: 50874378!
test99cantAddToCartAfterTimeout
	| restInterface cartID |

	restInterface := RestInterface 
		newWithAuthenticator: AuthenticatorSimulator newSimulatingValidAuthentication 
		withCatalog: testObjectsFactory defaultCatalog.
	
	cartID := restInterface 
			createCartFor: testObjectsFactory validClientID
			password: testObjectsFactory correctPassword.
	
	'Timeout.'.
	
	self should: [ 
		restInterface 
			add: 2 
			of: testObjectsFactory itemSoldByTheStore 
			to: cartID. 
		]
		raise: Error
		withMessageText: RestInterface cartTimedOutMessage.! !
!RestInterfaceTest methodsFor: 'tests - adding to cart' stamp: 'JEA 11/30/2020 18:43:01' prior: 50874230!
test06canAddItemToCartWithValidID
	| restInterface cartID |

	restInterface := RestInterface 
		newWithAuthenticator: AuthenticatorSimulator newSimulatingValidAuthentication 
		withCatalog: testObjectsFactory defaultCatalog.
	
	cartID := restInterface 
			createCartFor: testObjectsFactory validClientID
			password: testObjectsFactory correctPassword.
	
	restInterface 
		add: 2 
		of: testObjectsFactory itemSoldByTheStore 
		to: cartID.
	
	self assert: 2 
		equals: ((restInterface listCart: cartID) occurrencesOf: testObjectsFactory itemSoldByTheStore).! !
!RestInterfaceTest methodsFor: 'tests - adding to cart' stamp: 'JEA 11/30/2020 18:43:02' prior: 50874645!
test06canAddItemToCartWithValidID
	| restInterface cartID |

	restInterface := RestInterface 
		newWithAuthenticator: AuthenticatorSimulator newSimulatingValidAuthentication 
		withCatalog: testObjectsFactory defaultCatalog.
	
	cartID := restInterface 
				createCartFor: testObjectsFactory validClientID
				password: testObjectsFactory correctPassword.
	
	restInterface 
		add: 2 
		of: testObjectsFactory itemSoldByTheStore 
		to: cartID.
	
	self assert: 2 
		equals: ((restInterface listCart: cartID) occurrencesOf: testObjectsFactory itemSoldByTheStore).! !
!RestInterfaceTest methodsFor: 'tests - adding to cart' stamp: 'JEA 11/30/2020 18:43:06' prior: 50874666!
test06canAddItemToCartWithValidID
	| restInterface cartID |

	restInterface := RestInterface 
		newWithAuthenticator: AuthenticatorSimulator newSimulatingValidAuthentication 
		withCatalog: testObjectsFactory defaultCatalog.
	
	cartID := restInterface 
		createCartFor: testObjectsFactory validClientID
		password: testObjectsFactory correctPassword.
	
	restInterface 
		add: 2 
		of: testObjectsFactory itemSoldByTheStore 
		to: cartID.
	
	self assert: 2 
		equals: ((restInterface listCart: cartID) occurrencesOf: testObjectsFactory itemSoldByTheStore).! !
!RestInterfaceTest methodsFor: 'tests - cart timeout' stamp: 'JEA 11/30/2020 18:43:14' prior: 50874624!
test99cantAddToCartAfterTimeout
	| restInterface cartID |

	restInterface := RestInterface 
		newWithAuthenticator: AuthenticatorSimulator newSimulatingValidAuthentication 
		withCatalog: testObjectsFactory defaultCatalog.
	
	cartID := restInterface 
		createCartFor: testObjectsFactory validClientID
		password: testObjectsFactory correctPassword.
	
	'Timeout.'.
	
	self should: [ 
		restInterface 
			add: 2 
			of: testObjectsFactory itemSoldByTheStore 
			to: cartID. 
		]
		raise: Error
		withMessageText: RestInterface cartTimedOutMessage.! !
!RestInterfaceTest methodsFor: 'tests - checking out cart' stamp: 'JEA 11/30/2020 18:44:28' prior: 50874606!
test07cantCheckOutCartWithInvalidID
	| restInterface |

	restInterface := RestInterface 
		newWithAuthenticator: AuthenticatorSimulator newSimulatingValidAuthentication 
		withCatalog: testObjectsFactory defaultCatalog.
	
	self should: [ 
		restInterface 
			checkOut: testObjectsFactory invalidCartID 
			withCardNumber: testObjectsFactory validCardNumber 
			expiring: testObjectsFactory expirationDateNotReached 
			owner: testObjectsFactory validOwnerName. 
		]
		raise: Error
		withMessageText: RestInterface invalidCartIDMessage.! !

!testRun: #RestInterfaceTest #test07cantCheckOutCartWithInvalidID stamp: 'JEA 11/30/2020 18:44:33'!
FAILURE!

!testRun: #RestInterfaceTest #test01cannotCreateCartForInvalidClientID stamp: 'JEA 11/30/2020 18:44:41'!
PASSED!

!testRun: #RestInterfaceTest #test02cannotCreateCartForClientWithWrongPassword stamp: 'JEA 11/30/2020 18:44:41'!
PASSED!

!testRun: #RestInterfaceTest #test03canCreateCartForWellAuthenticatedClient stamp: 'JEA 11/30/2020 18:44:41'!
PASSED!

!testRun: #RestInterfaceTest #test04canCreateMoreThanOneCartWithDifferentIDs stamp: 'JEA 11/30/2020 18:44:41'!
PASSED!

!testRun: #RestInterfaceTest #test05cannotAddWhenCartIDIsInvalid stamp: 'JEA 11/30/2020 18:44:41'!
PASSED!

!testRun: #RestInterfaceTest #test06canAddItemToCartWithValidID stamp: 'JEA 11/30/2020 18:44:41'!
PASSED!

!testRun: #RestInterfaceTest #test07cantCheckOutCartWithInvalidID stamp: 'JEA 11/30/2020 18:44:41'!
FAILURE!

!testRun: #RestInterfaceTest #test99cantAddToCartAfterTimeout stamp: 'JEA 11/30/2020 18:44:41'!
FAILURE!
!StoreTestObjectsFactory methodsFor: 'credit card' stamp: 'JEA 11/30/2020 18:45:09'!
validCardNumber

	^'0000000000000000'.! !
!StoreTestObjectsFactory methodsFor: 'credit card' stamp: 'JEA 11/30/2020 18:45:23'!
validOwnersName

	^'Aquiles Vaesa'.! !
!RestInterfaceTest methodsFor: 'tests - checking out cart' stamp: 'JEA 11/30/2020 18:45:41' prior: 50874729!
test07cantCheckOutCartWithInvalidID
	| restInterface |

	restInterface := RestInterface 
		newWithAuthenticator: AuthenticatorSimulator newSimulatingValidAuthentication 
		withCatalog: testObjectsFactory defaultCatalog.
	
	self should: [ 
		restInterface 
			checkOut: testObjectsFactory invalidCartID 
			withCardNumber: testObjectsFactory validCardNumber 
			expiring: testObjectsFactory expirationDateNotReached 
			owner: testObjectsFactory validOwnersName. 
		]
		raise: Error
		withMessageText: RestInterface invalidCartIDMessage.! !

!testRun: #RestInterfaceTest #test07cantCheckOutCartWithInvalidID stamp: 'JEA 11/30/2020 18:45:42'!
FAILURE!
!StoreTestObjectsFactory methodsFor: 'rest interface' stamp: 'JEA 11/30/2020 18:49:52'!
validCreditCardOwnersName

	^'Aquiles Vaesa'.! !
!RestInterfaceTest methodsFor: 'as yet unclassified' stamp: 'JEA 11/30/2020 18:49:52' prior: 50874790!
test07cantCheckOutCartWithInvalidID
	| restInterface |

	restInterface := RestInterface 
		newWithAuthenticator: AuthenticatorSimulator newSimulatingValidAuthentication 
		withCatalog: testObjectsFactory defaultCatalog.
	
	self should: [ 
		restInterface 
			checkOut: testObjectsFactory invalidCartID 
			withCardNumber: testObjectsFactory validCardNumber 
			expiring: testObjectsFactory expirationDateNotReached 
			owner: testObjectsFactory validCreditCardOwnersName. 
		]
		raise: Error
		withMessageText: RestInterface invalidCartIDMessage.! !

!methodRemoval: StoreTestObjectsFactory #validOwnersName stamp: 'JEA 11/30/2020 18:49:52'!
validOwnersName

	^'Aquiles Vaesa'.!

FixedGregorianDate today monthOfYear next.!

FixedGregorianDate today monthOfYear next monthNumber.!

FixedGregorianDate today monthOfYear next monthNumber.
FixedGregorianDate today monthOfYear next year.!

FixedGregorianDate today monthOfYear next year.!

FixedGregorianDate today monthOfYear next yearNumber!

FixedGregorianDate today monthOfYear next year asNumber!

FixedGregorianDate today monthOfYear next year number!

FixedGregorianDate today monthOfYear next month number.
FixedGregorianDate today monthOfYear next year number.!

FixedGregorianDate today monthOfYear next month number.!

| thisMonthOfYear |
thisMonthOfYear := FixedGregorianDate today monthOfYear.
thisMonthOfYear next month number.
thisMonthOfYear next year number.!

| thisMonthOfYear |
thisMonthOfYear := FixedGregorianDate today monthOfYear.
thisMonthOfYear next month number.!
!StoreTestObjectsFactory methodsFor: 'rest interface' stamp: 'JEA 11/30/2020 18:55:26'!
expirationDateNotReached
	| thisMonthOfYear |
	
	thisMonthOfYear := FixedGregorianDate today monthOfYear.
	thisMonthOfYear next month number.
	thisMonthOfYear next year number.! !
!StoreTestObjectsFactory methodsFor: 'rest interface' stamp: 'JEA 11/30/2020 18:56:16' prior: 50874870!
expirationDateNotReached
	| nextMonthOfYear yearNumber monthNumber |
	
	nextMonthOfYear := FixedGregorianDate today monthOfYear.
	monthNumber := nextMonthOfYear next month number.
	yearNumber := nextMonthOfYear next year number.! !

| nextMonthOfYear yearNumber monthNumber |
	
	nextMonthOfYear := FixedGregorianDate today monthOfYear.
	monthNumber := nextMonthOfYear next next month number.!
!StoreTestObjectsFactory methodsFor: 'rest interface' stamp: 'JEA 11/30/2020 18:58:10' prior: 50874879!
expirationDateNotReached
	| nextMonthOfYear yearNumber monthNumber |
	
	nextMonthOfYear := FixedGregorianDate today monthOfYear.
	monthNumber := nextMonthOfYear next next month number.
	yearNumber := nextMonthOfYear next year number.
	
	^999999! !
!StoreTestObjectsFactory methodsFor: 'rest interface' stamp: 'JEA 11/30/2020 18:58:16' prior: 50874895!
expirationDateNotReached
	"| nextMonthOfYear yearNumber monthNumber |
	
	nextMonthOfYear := FixedGregorianDate today monthOfYear.
	monthNumber := nextMonthOfYear next next month number.
	yearNumber := nextMonthOfYear next year number."
	
	^999999! !
!StoreTestObjectsFactory methodsFor: 'rest interface' stamp: 'JEA 11/30/2020 18:58:26' prior: 50874906!
expirationDateNotReached
	"| nextMonthOfYear yearNumber monthNumber |
	
	nextMonthOfYear := FixedGregorianDate today monthOfYear.
	monthNumber := nextMonthOfYear next next month number.
	yearNumber := nextMonthOfYear next year number."
	
	^'999999'! !
!RestInterface methodsFor: 'api' stamp: 'JEA 11/30/2020 18:59:59'!
checkOut: aCartID withCardNumber: aString expiring: aString2 owner: aName

	! !
!RestInterface methodsFor: 'api' stamp: 'JEA 11/30/2020 19:01:06' prior: 50874928!
checkOut: aCartID withCardNumber: aString expiring: aString2 owner: aName

	! !
!RestInterface methodsFor: 'api' stamp: 'JEA 11/30/2020 19:01:41'!
add: aQuantity of: anISBN toCartWithID: aCartID

	(carts at: aCartID ifAbsent: [ self error: self class invalidCartIDMessage. ])
		add: aQuantity
		of: anISBN.! !
!RestInterfaceTest methodsFor: 'as yet unclassified' stamp: 'JEA 11/30/2020 19:01:41' prior: 50874708!
test99cantAddToCartAfterTimeout
	| restInterface cartID |

	restInterface := RestInterface 
		newWithAuthenticator: AuthenticatorSimulator newSimulatingValidAuthentication 
		withCatalog: testObjectsFactory defaultCatalog.
	
	cartID := restInterface 
		createCartFor: testObjectsFactory validClientID
		password: testObjectsFactory correctPassword.
	
	'Timeout.'.
	
	self should: [ 
		restInterface 
			add: 2 
			of: testObjectsFactory itemSoldByTheStore 
			toCartWithID: cartID. 
		]
		raise: Error
		withMessageText: RestInterface cartTimedOutMessage.! !
!RestInterfaceTest methodsFor: 'as yet unclassified' stamp: 'JEA 11/30/2020 19:01:41' prior: 50874687!
test06canAddItemToCartWithValidID
	| restInterface cartID |

	restInterface := RestInterface 
		newWithAuthenticator: AuthenticatorSimulator newSimulatingValidAuthentication 
		withCatalog: testObjectsFactory defaultCatalog.
	
	cartID := restInterface 
		createCartFor: testObjectsFactory validClientID
		password: testObjectsFactory correctPassword.
	
	restInterface 
		add: 2 
		of: testObjectsFactory itemSoldByTheStore 
		toCartWithID: cartID.
	
	self assert: 2 
		equals: ((restInterface listCart: cartID) occurrencesOf: testObjectsFactory itemSoldByTheStore).! !
!RestInterfaceTest methodsFor: 'as yet unclassified' stamp: 'JEA 11/30/2020 19:01:41' prior: 50874063!
test05cannotAddWhenCartIDIsInvalid
	| restInterface |

	restInterface := RestInterface 
		newWithAuthenticator: AuthenticatorSimulator newSimulatingValidAuthentication 
		withCatalog: testObjectsFactory defaultCatalog.
	
	self should: [ 
		restInterface 
			add: 1 
			of: testObjectsFactory itemSoldByTheStore 
			toCartWithID: testObjectsFactory invalidCartID. 
		]
		raise: Error
		withMessageText: RestInterface invalidCartIDMessage.! !

!methodRemoval: RestInterface #add:of:to: stamp: 'JEA 11/30/2020 19:01:41'!
add: aQuantity of: anISBN to: aCartID

	(carts at: aCartID ifAbsent: [ self error: self class invalidCartIDMessage. ])
		add: aQuantity
		of: anISBN.!
!RestInterface methodsFor: 'api' stamp: 'JEA 11/30/2020 19:02:03'!
checkOutCartWithID: aCartID withCardNumber: aString expiring: aString2 owner: aName

	! !
!RestInterfaceTest methodsFor: 'as yet unclassified' stamp: 'JEA 11/30/2020 19:02:03' prior: 50874819!
test07cantCheckOutCartWithInvalidID
	| restInterface |

	restInterface := RestInterface 
		newWithAuthenticator: AuthenticatorSimulator newSimulatingValidAuthentication 
		withCatalog: testObjectsFactory defaultCatalog.
	
	self should: [ 
		restInterface 
			checkOutCartWithID: testObjectsFactory invalidCartID 
			withCardNumber: testObjectsFactory validCardNumber 
			expiring: testObjectsFactory expirationDateNotReached 
			owner: testObjectsFactory validCreditCardOwnersName. 
		]
		raise: Error
		withMessageText: RestInterface invalidCartIDMessage.! !

!methodRemoval: RestInterface #checkOut:withCardNumber:expiring:owner: stamp: 'JEA 11/30/2020 19:02:03'!
checkOut: aCartID withCardNumber: aString expiring: aString2 owner: aName

	!
!RestInterface methodsFor: 'api' stamp: 'JEA 11/30/2020 19:02:21'!
listItemsInCartWithID: aCartID

	^(carts at: aCartID) listItems.! !
!RestInterfaceTest methodsFor: 'as yet unclassified' stamp: 'JEA 11/30/2020 19:02:21' prior: 50873975!
test03canCreateCartForWellAuthenticatedClient
	| restInterface authenticatorSimulator cartID cartList |
	
	authenticatorSimulator := AuthenticatorSimulator newSimulatingValidAuthentication.
	restInterface := RestInterface newWithAuthenticator: authenticatorSimulator withCatalog: Dictionary new.
	
	cartID := restInterface 
				createCartFor: testObjectsFactory validClientID 
				password: testObjectsFactory correctPassword.
	
	cartList := restInterface listItemsInCartWithID: cartID.
	
	self assert: cartList isEmpty.! !
!RestInterfaceTest methodsFor: 'as yet unclassified' stamp: 'JEA 11/30/2020 19:02:21' prior: 50874969!
test06canAddItemToCartWithValidID
	| restInterface cartID |

	restInterface := RestInterface 
		newWithAuthenticator: AuthenticatorSimulator newSimulatingValidAuthentication 
		withCatalog: testObjectsFactory defaultCatalog.
	
	cartID := restInterface 
		createCartFor: testObjectsFactory validClientID
		password: testObjectsFactory correctPassword.
	
	restInterface 
		add: 2 
		of: testObjectsFactory itemSoldByTheStore 
		toCartWithID: cartID.
	
	self assert: 2 
		equals: ((restInterface listItemsInCartWithID: cartID) occurrencesOf: testObjectsFactory itemSoldByTheStore).! !

!methodRemoval: RestInterface #listCart: stamp: 'JEA 11/30/2020 19:02:21'!
listCart: aCartID

	^(carts at: aCartID) listItems.!
!RestInterface methodsFor: 'api' stamp: 'JEA 11/30/2020 19:02:51' prior: 50874939!
add: aQuantity of: anISBN toCartWithID: aCartID

	(carts at: aCartID ifAbsent: [ self error: self class invalidCartIDMessage. ])
		add: aQuantity of: anISBN.! !
!RestInterface methodsFor: 'api' stamp: 'JEA 11/30/2020 19:04:06' prior: 50875013!
checkOutCartWithID: aCartID withCardNumber: aString expiring: aString2 owner: aName

	self error: self class invalidCartIDMessage.! !

!testRun: #RestInterfaceTest #test01cannotCreateCartForInvalidClientID stamp: 'JEA 11/30/2020 19:04:07'!
PASSED!

!testRun: #RestInterfaceTest #test02cannotCreateCartForClientWithWrongPassword stamp: 'JEA 11/30/2020 19:04:07'!
PASSED!

!testRun: #RestInterfaceTest #test03canCreateCartForWellAuthenticatedClient stamp: 'JEA 11/30/2020 19:04:07'!
PASSED!

!testRun: #RestInterfaceTest #test04canCreateMoreThanOneCartWithDifferentIDs stamp: 'JEA 11/30/2020 19:04:07'!
PASSED!

!testRun: #RestInterfaceTest #test05cannotAddWhenCartIDIsInvalid stamp: 'JEA 11/30/2020 19:04:07'!
PASSED!

!testRun: #RestInterfaceTest #test06canAddItemToCartWithValidID stamp: 'JEA 11/30/2020 19:04:07'!
PASSED!

!testRun: #RestInterfaceTest #test07cantCheckOutCartWithInvalidID stamp: 'JEA 11/30/2020 19:04:07'!
PASSED!

!testRun: #RestInterfaceTest #test99cantAddToCartAfterTimeout stamp: 'JEA 11/30/2020 19:04:07'!
FAILURE!

!testRun: #RestInterfaceTest #test99cantAddToCartAfterTimeout stamp: 'JEA 11/30/2020 19:04:07'!
FAILURE!

!testRun: #RestInterfaceTest #test07cantCheckOutCartWithInvalidID stamp: 'JEA 11/30/2020 19:04:25'!
PASSED!

!testRun: #RestInterfaceTest #test01cannotCreateCartForInvalidClientID stamp: 'JEA 11/30/2020 19:04:25'!
PASSED!

!testRun: #RestInterfaceTest #test02cannotCreateCartForClientWithWrongPassword stamp: 'JEA 11/30/2020 19:04:25'!
PASSED!

!testRun: #RestInterfaceTest #test03canCreateCartForWellAuthenticatedClient stamp: 'JEA 11/30/2020 19:04:25'!
PASSED!

!testRun: #RestInterfaceTest #test04canCreateMoreThanOneCartWithDifferentIDs stamp: 'JEA 11/30/2020 19:04:25'!
PASSED!

!testRun: #RestInterfaceTest #test05cannotAddWhenCartIDIsInvalid stamp: 'JEA 11/30/2020 19:04:25'!
PASSED!

!testRun: #RestInterfaceTest #test06canAddItemToCartWithValidID stamp: 'JEA 11/30/2020 19:04:25'!
PASSED!

!testRun: #RestInterfaceTest #test07cantCheckOutCartWithInvalidID stamp: 'JEA 11/30/2020 19:04:25'!
PASSED!

!testRun: #RestInterfaceTest #test99cantAddToCartAfterTimeout stamp: 'JEA 11/30/2020 19:04:25'!
FAILURE!

!testRun: #RestInterfaceTest #test99cantAddToCartAfterTimeout stamp: 'JEA 11/30/2020 19:04:25'!
FAILURE!
!RestInterfaceTest methodsFor: 'tests - cart timeout' stamp: 'JEA 11/30/2020 19:04:39' prior: 50874948!
test99cantAddToCartAfterTimeout
	| restInterface cartID |

	restInterface := RestInterface 
		newWithAuthenticator: AuthenticatorSimulator newSimulatingValidAuthentication 
		withCatalog: testObjectsFactory defaultCatalog.
	
	cartID := restInterface 
		createCartFor: testObjectsFactory validClientID
		password: testObjectsFactory correctPassword.
	
	'Timeout.'.
	
	"self should: [ 
		restInterface 
			add: 2 
			of: testObjectsFactory itemSoldByTheStore 
			toCartWithID: cartID. 
		]
		raise: Error
		withMessageText: RestInterface cartTimedOutMessage."! !

!testRun: #RestInterfaceTest #test01cannotCreateCartForInvalidClientID stamp: 'JEA 11/30/2020 19:04:43'!
PASSED!

!testRun: #RestInterfaceTest #test02cannotCreateCartForClientWithWrongPassword stamp: 'JEA 11/30/2020 19:04:43'!
PASSED!

!testRun: #RestInterfaceTest #test03canCreateCartForWellAuthenticatedClient stamp: 'JEA 11/30/2020 19:04:43'!
PASSED!

!testRun: #RestInterfaceTest #test04canCreateMoreThanOneCartWithDifferentIDs stamp: 'JEA 11/30/2020 19:04:43'!
PASSED!

!testRun: #RestInterfaceTest #test05cannotAddWhenCartIDIsInvalid stamp: 'JEA 11/30/2020 19:04:43'!
PASSED!

!testRun: #RestInterfaceTest #test06canAddItemToCartWithValidID stamp: 'JEA 11/30/2020 19:04:43'!
PASSED!

!testRun: #RestInterfaceTest #test07cantCheckOutCartWithInvalidID stamp: 'JEA 11/30/2020 19:04:43'!
PASSED!

!testRun: #RestInterfaceTest #test99cantAddToCartAfterTimeout stamp: 'JEA 11/30/2020 19:04:43'!
PASSED!
!RestInterfaceTest methodsFor: 'tests - checking out cart' stamp: 'JEA 11/30/2020 19:09:22'!
test08cantCheckOutCartWithInvalidCreditCardNumber
	| restInterface cartID |

	restInterface := RestInterface 
		newWithAuthenticator: AuthenticatorSimulator newSimulatingValidAuthentication 
		withCatalog: testObjectsFactory defaultCatalog.
		
	restInterface 
	
	self should: [ 
		restInterface 
			checkOutCartWithID: cartID 
			withCardNumber: testObjectsFactory invalidCardNumber 
			expiring: testObjectsFactory expirationDateNotReached 
			owner: testObjectsFactory validCreditCardOwnersName. 
		]
		raise: Error
		withMessageText: RestInterface invalidCreditCardNumberMessage.! !
!RestInterfaceTest methodsFor: 'tests - checking out cart' stamp: 'JEA 11/30/2020 19:09:49' prior: 50875229!
test08cantCheckOutCartWithInvalidCreditCardNumber
	| restInterface cartID |

	restInterface := RestInterface 
		newWithAuthenticator: AuthenticatorSimulator newSimulatingValidAuthentication 
		withCatalog: testObjectsFactory defaultCatalog.
		
	cartID := restInterface
		createCartFor: testObjectsFactory validClientID
		password: testObjectsFactory correctPassword.
	
	self should: [ 
		restInterface 
			checkOutCartWithID: cartID 
			withCardNumber: testObjectsFactory invalidCardNumber 
			expiring: testObjectsFactory expirationDateNotReached 
			owner: testObjectsFactory validCreditCardOwnersName. 
		]
		raise: Error
		withMessageText: RestInterface invalidCreditCardNumberMessage.! !
!StoreTestObjectsFactory methodsFor: 'rest interface' stamp: 'JEA 11/30/2020 19:10:13'!
invalidCardNumber

	^'A'.! !
!RestInterfaceTest methodsFor: 'tests - cart timeout' stamp: 'JEA 11/30/2020 19:12:14' prior: 50875180!
test99cantAddToCartAfterTimeout
	| restInterface cartID |

	restInterface := RestInterface 
		newWithAuthenticator: AuthenticatorSimulator newSimulatingValidAuthentication 
		withCatalog: testObjectsFactory defaultCatalog.
	
	cartID := restInterface 
		createCartFor: testObjectsFactory validClientID
		password: testObjectsFactory correctPassword.
	
	'Timeout.'.
	
	self should: [ 
		restInterface 
			add: 2 
			of: testObjectsFactory itemSoldByTheStore 
			toCartWithID: cartID. 
		]
		raise: Error
		withMessageText: RestInterface cartTimedOutMessage.! !

!methodRemoval: StoreTestObjectsFactory #validCreditCardNumber stamp: 'JEA 11/30/2020 19:16:26'!
validCreditCardNumber

	!
!StoreTestObjectsFactory methodsFor: 'rest interface' stamp: 'JEA 11/30/2020 19:16:58' prior: 50874918!
expirationDateNotReached
	| nextMonthOfYear yearNumber monthNumber |
	
	nextMonthOfYear := FixedGregorianDate today monthOfYear.
	monthNumber := nextMonthOfYear next next month number.
	yearNumber := nextMonthOfYear next year number.! !
!StoreTestObjectsFactory methodsFor: 'rest interface' stamp: 'JEA 11/30/2020 19:19:08' prior: 50875306!
expirationDateNotReached
	
	^FixedGregorianDate today monthOfYear next.! !

!testRun: #RestInterfaceTest #test01cannotCreateCartForInvalidClientID stamp: 'JEA 11/30/2020 19:19:16'!
PASSED!

!testRun: #RestInterfaceTest #test02cannotCreateCartForClientWithWrongPassword stamp: 'JEA 11/30/2020 19:19:16'!
PASSED!

!testRun: #RestInterfaceTest #test03canCreateCartForWellAuthenticatedClient stamp: 'JEA 11/30/2020 19:19:16'!
PASSED!

!testRun: #RestInterfaceTest #test04canCreateMoreThanOneCartWithDifferentIDs stamp: 'JEA 11/30/2020 19:19:16'!
PASSED!

!testRun: #RestInterfaceTest #test05cannotAddWhenCartIDIsInvalid stamp: 'JEA 11/30/2020 19:19:16'!
PASSED!

!testRun: #RestInterfaceTest #test06canAddItemToCartWithValidID stamp: 'JEA 11/30/2020 19:19:16'!
PASSED!

!testRun: #RestInterfaceTest #test07cantCheckOutCartWithInvalidID stamp: 'JEA 11/30/2020 19:19:16'!
PASSED!

!testRun: #RestInterfaceTest #test08cantCheckOutCartWithInvalidCreditCardNumber stamp: 'JEA 11/30/2020 19:19:16'!
ERROR!

!testRun: #RestInterfaceTest #test99cantAddToCartAfterTimeout stamp: 'JEA 11/30/2020 19:19:16'!
FAILURE!
!RestInterface class methodsFor: 'error messages' stamp: 'JEA 11/30/2020 19:20:06'!
invalidCreditCardNumberMessage

	^'The credit card number provided does not have a valid format.'.! !

!testRun: #RestInterfaceTest #test01cannotCreateCartForInvalidClientID stamp: 'JEA 11/30/2020 19:20:10'!
PASSED!

!testRun: #RestInterfaceTest #test02cannotCreateCartForClientWithWrongPassword stamp: 'JEA 11/30/2020 19:20:10'!
PASSED!

!testRun: #RestInterfaceTest #test03canCreateCartForWellAuthenticatedClient stamp: 'JEA 11/30/2020 19:20:10'!
PASSED!

!testRun: #RestInterfaceTest #test04canCreateMoreThanOneCartWithDifferentIDs stamp: 'JEA 11/30/2020 19:20:10'!
PASSED!

!testRun: #RestInterfaceTest #test05cannotAddWhenCartIDIsInvalid stamp: 'JEA 11/30/2020 19:20:10'!
PASSED!

!testRun: #RestInterfaceTest #test06canAddItemToCartWithValidID stamp: 'JEA 11/30/2020 19:20:10'!
PASSED!

!testRun: #RestInterfaceTest #test07cantCheckOutCartWithInvalidID stamp: 'JEA 11/30/2020 19:20:10'!
PASSED!

!testRun: #RestInterfaceTest #test08cantCheckOutCartWithInvalidCreditCardNumber stamp: 'JEA 11/30/2020 19:20:10'!
FAILURE!

!testRun: #RestInterfaceTest #test99cantAddToCartAfterTimeout stamp: 'JEA 11/30/2020 19:20:10'!
FAILURE!

!testRun: #RestInterfaceTest #test08cantCheckOutCartWithInvalidCreditCardNumber stamp: 'JEA 11/30/2020 19:20:16'!
FAILURE!

!testRun: #RestInterfaceTest #test08cantCheckOutCartWithInvalidCreditCardNumber stamp: 'JEA 11/30/2020 19:21:09'!
FAILURE!
!RestInterface methodsFor: 'api' stamp: 'JEA 11/30/2020 19:22:03' prior: 50875105!
checkOutCartWithID: aCartID withCardNumber: aCardNumber expiring: aGregorianMonthOfYear owner: aName

	self error: self class invalidCartIDMessage.! !
!RestInterface methodsFor: 'api' stamp: 'JEA 11/30/2020 19:22:35' prior: 50875401!
checkOutCartWithID: aCartID withCardNumber: aCardNumber expiring: aGregorianMonthOfYear owner: aName

	self ensureCartIDIsValid.
	self error: self class invalidCartIDMessage.! !
!RestInterface methodsFor: 'api - private' stamp: 'JEA 11/30/2020 19:22:49'!
ensureCartIDIsValid! !
!RestInterface methodsFor: 'api' stamp: 'JEA 11/30/2020 19:23:08' prior: 50875409!
checkOutCartWithID: aCartID withCardNumber: aCardNumber expiring: aGregorianMonthOfYear owner: aName

	self ensureCartIDIsValid.! !
!RestInterface methodsFor: 'api - private' stamp: 'JEA 11/30/2020 19:23:17' prior: 50875417!
ensureCartIDIsValid

	self error: self class invalidCartIDMessage.! !
!RestInterface methodsFor: 'api - private' stamp: 'JEA 11/30/2020 19:23:20'!
ensureCartIDIsValid: aCartID

	self error: self class invalidCartIDMessage.! !

!methodRemoval: RestInterface #ensureCartIDIsValid stamp: 'JEA 11/30/2020 19:23:22'!
ensureCartIDIsValid

	self error: self class invalidCartIDMessage.!
!RestInterface methodsFor: 'api' stamp: 'JEA 11/30/2020 19:23:27' prior: 50875421!
checkOutCartWithID: aCartID withCardNumber: aCardNumber expiring: aGregorianMonthOfYear owner: aName

	self ensureCartIDIsValid: aCartID.! !
!RestInterface methodsFor: 'api' stamp: 'JEA 11/30/2020 19:24:51' prior: 50875097!
add: aQuantity of: anISBN toCartWithID: aCartID

	self ensureCartIDIsValid: aCartID.
	(carts at: aCartID)
		add: aQuantity of: anISBN.! !
!RestInterface methodsFor: 'api' stamp: 'JEA 11/30/2020 19:24:53' prior: 50875451!
add: aQuantity of: anISBN toCartWithID: aCartID

	self ensureCartIDIsValid: aCartID.

	(carts at: aCartID)
		add: aQuantity of: anISBN.! !
!RestInterface methodsFor: 'api - private' stamp: 'JEA 11/30/2020 19:25:26' prior: 50875434!
ensureCartIDIsValid: aCartID

	carts at: aCartID 
		ifAbsent: [ self error: self class invalidCartIDMessage. ].! !

!testRun: #RestInterfaceTest #test01cannotCreateCartForInvalidClientID stamp: 'JEA 11/30/2020 19:25:31'!
PASSED!

!testRun: #RestInterfaceTest #test02cannotCreateCartForClientWithWrongPassword stamp: 'JEA 11/30/2020 19:25:31'!
PASSED!

!testRun: #RestInterfaceTest #test03canCreateCartForWellAuthenticatedClient stamp: 'JEA 11/30/2020 19:25:31'!
PASSED!

!testRun: #RestInterfaceTest #test04canCreateMoreThanOneCartWithDifferentIDs stamp: 'JEA 11/30/2020 19:25:31'!
PASSED!

!testRun: #RestInterfaceTest #test05cannotAddWhenCartIDIsInvalid stamp: 'JEA 11/30/2020 19:25:31'!
PASSED!

!testRun: #RestInterfaceTest #test06canAddItemToCartWithValidID stamp: 'JEA 11/30/2020 19:25:31'!
PASSED!

!testRun: #RestInterfaceTest #test07cantCheckOutCartWithInvalidID stamp: 'JEA 11/30/2020 19:25:31'!
PASSED!

!testRun: #RestInterfaceTest #test08cantCheckOutCartWithInvalidCreditCardNumber stamp: 'JEA 11/30/2020 19:25:31'!
FAILURE!

!testRun: #RestInterfaceTest #test99cantAddToCartAfterTimeout stamp: 'JEA 11/30/2020 19:25:31'!
FAILURE!
!RestInterface methodsFor: 'api' stamp: 'JEA 11/30/2020 19:25:51' prior: 50875444!
checkOutCartWithID: aCartID withCardNumber: aCardNumber expiring: aGregorianMonthOfYear owner: aName

	self ensureCartIDIsValid: aCartID.
	self ensureCardNumberIsValid: aCardNumber.! !
!RestInterface methodsFor: 'api - private' stamp: 'JEA 11/30/2020 19:26:12'!
ensureCardNumberIsValid: aCardNumber

	! !
!RestInterface methodsFor: 'api - private' stamp: 'JEA 11/30/2020 19:27:20' prior: 50875514!
ensureCardNumberIsValid: aCardNumber

	(aCardNumber size = 16 and: [ aCardNumber isAlphaNumeric. ])
	 ifFalse: [ self error: self class invalidCreditCardNumberMessage ].! !
!RestInterface methodsFor: 'api - private' stamp: 'JEA 11/30/2020 19:27:25' prior: 50875519!
ensureCardNumberIsValid: aCardNumber

	(aCardNumber size = 16 and: [ aCardNumber isAlphaNumeric. ]) 
		ifFalse: [ self error: self class invalidCreditCardNumberMessage ].! !

!testRun: #RestInterfaceTest #test01cannotCreateCartForInvalidClientID stamp: 'JEA 11/30/2020 19:27:27'!
PASSED!

!testRun: #RestInterfaceTest #test02cannotCreateCartForClientWithWrongPassword stamp: 'JEA 11/30/2020 19:27:27'!
PASSED!

!testRun: #RestInterfaceTest #test03canCreateCartForWellAuthenticatedClient stamp: 'JEA 11/30/2020 19:27:27'!
PASSED!

!testRun: #RestInterfaceTest #test04canCreateMoreThanOneCartWithDifferentIDs stamp: 'JEA 11/30/2020 19:27:27'!
PASSED!

!testRun: #RestInterfaceTest #test05cannotAddWhenCartIDIsInvalid stamp: 'JEA 11/30/2020 19:27:27'!
PASSED!

!testRun: #RestInterfaceTest #test06canAddItemToCartWithValidID stamp: 'JEA 11/30/2020 19:27:27'!
PASSED!

!testRun: #RestInterfaceTest #test07cantCheckOutCartWithInvalidID stamp: 'JEA 11/30/2020 19:27:27'!
PASSED!

!testRun: #RestInterfaceTest #test08cantCheckOutCartWithInvalidCreditCardNumber stamp: 'JEA 11/30/2020 19:27:27'!
PASSED!

!testRun: #RestInterfaceTest #test99cantAddToCartAfterTimeout stamp: 'JEA 11/30/2020 19:27:27'!
FAILURE!

!testRun: #RestInterfaceTest #test99cantAddToCartAfterTimeout stamp: 'JEA 11/30/2020 19:27:27'!
FAILURE!
!RestInterfaceTest methodsFor: 'tests - checking out cart' stamp: 'JEA 11/30/2020 19:28:49'!
test09canCheckOutNonEmptyValidCartWithValidCreditCard
	| restInterface cartID |

	restInterface := RestInterface 
		newWithAuthenticator: AuthenticatorSimulator newSimulatingValidAuthentication 
		withCatalog: testObjectsFactory defaultCatalog.
		
	cartID := restInterface
		createCartFor: testObjectsFactory validClientID
		password: testObjectsFactory correctPassword.
		
	restInterface 
		add: 1 
		of: testObjectsFactory 
		itemSoldByTheStore toCartWithID: cartID.
	
	self should: [ 
		restInterface 
			checkOutCartWithID: cartID 
			withCardNumber: testObjectsFactory invalidCardNumber 
			expiring: testObjectsFactory expirationDateNotReached 
			owner: testObjectsFactory validCreditCardOwnersName. 
		]
		raise: Error
		withMessageText: RestInterface invalidCreditCardNumberMessage.! !
!RestInterfaceTest methodsFor: 'tests - checking out cart' stamp: 'JEA 11/30/2020 19:29:22' prior: 50875572!
test09canCheckOutNonEmptyValidCartWithValidCreditCard
	| restInterface cartID |

	restInterface := RestInterface 
		newWithAuthenticator: AuthenticatorSimulator newSimulatingValidAuthentication 
		withCatalog: testObjectsFactory defaultCatalog.
		
	cartID := restInterface
		createCartFor: testObjectsFactory validClientID
		password: testObjectsFactory correctPassword.
		
	restInterface 
		add: 1 
		of: testObjectsFactory 
		itemSoldByTheStore toCartWithID: cartID.
	
	restInterface 
		checkOutCartWithID: cartID 
		withCardNumber: testObjectsFactory invalidCardNumber 
		expiring: testObjectsFactory expirationDateNotReached 
		owner: testObjectsFactory validCreditCardOwnersName.! !
!RestInterfaceTest methodsFor: 'tests - checking out cart' stamp: 'JEA 11/30/2020 19:31:02' prior: 50875601!
test09canCheckOutNonEmptyValidCartWithValidCreditCard
	| restInterface cartID transactionID |

	restInterface := RestInterface 
		newWithAuthenticator: AuthenticatorSimulator newSimulatingValidAuthentication 
		withCatalog: testObjectsFactory defaultCatalog.
		
	cartID := restInterface
		createCartFor: testObjectsFactory validClientID
		password: testObjectsFactory correctPassword.
		
	restInterface 
		add: 1 
		of: testObjectsFactory itemSoldByTheStore 
		toCartWithID: cartID.
	
	transactionID := restInterface 
		checkOutCartWithID: cartID 
		withCardNumber: testObjectsFactory invalidCardNumber 
		expiring: testObjectsFactory expirationDateNotReached 
		owner: testObjectsFactory validCreditCardOwnersName.
	
	self assert: testObjectsFactory itemSoldByTheStorePrice 
		equals: (restInterface moneyDebitedInTransactionWithID: transactionID).! !

!testRun: #RestInterfaceTest #test01cannotCreateCartForInvalidClientID stamp: 'JEA 11/30/2020 19:31:05'!
PASSED!

!testRun: #RestInterfaceTest #test02cannotCreateCartForClientWithWrongPassword stamp: 'JEA 11/30/2020 19:31:05'!
PASSED!

!testRun: #RestInterfaceTest #test03canCreateCartForWellAuthenticatedClient stamp: 'JEA 11/30/2020 19:31:05'!
PASSED!

!testRun: #RestInterfaceTest #test04canCreateMoreThanOneCartWithDifferentIDs stamp: 'JEA 11/30/2020 19:31:05'!
PASSED!

!testRun: #RestInterfaceTest #test05cannotAddWhenCartIDIsInvalid stamp: 'JEA 11/30/2020 19:31:05'!
PASSED!

!testRun: #RestInterfaceTest #test06canAddItemToCartWithValidID stamp: 'JEA 11/30/2020 19:31:05'!
PASSED!

!testRun: #RestInterfaceTest #test07cantCheckOutCartWithInvalidID stamp: 'JEA 11/30/2020 19:31:05'!
PASSED!

!testRun: #RestInterfaceTest #test08cantCheckOutCartWithInvalidCreditCardNumber stamp: 'JEA 11/30/2020 19:31:05'!
PASSED!

!testRun: #RestInterfaceTest #test09canCheckOutNonEmptyValidCartWithValidCreditCard stamp: 'JEA 11/30/2020 19:31:05'!
ERROR!

!testRun: #RestInterfaceTest #test99cantAddToCartAfterTimeout stamp: 'JEA 11/30/2020 19:31:05'!
FAILURE!
!RestInterface methodsFor: 'testing' stamp: 'JEA 11/30/2020 19:31:37'!
moneyDebitedInTransactionWithID: aTransactionID

	! !
!RestInterface methodsFor: 'testing' stamp: 'JEA 11/30/2020 19:31:39' prior: 50875691!
moneyDebitedInTransactionWithID: aTransactionID

	^0.! !
!RestInterface methodsFor: 'api' stamp: 'JEA 11/30/2020 19:32:18' prior: 50875505!
checkOutCartWithID: aCartID withCardNumber: aCardNumber expiring: aGregorianMonthOfYear owner: aName

	self ensureCartIDIsValid: aCartID.
	self ensureCardNumberIsValid: aCardNumber.! !

Object subclass: #RestInterface
	instanceVariableNames: 'authenticator lastCartID carts catalog transactions'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

!classDefinition: #RestInterface category: 'TusLibros' stamp: 'JEA 11/30/2020 19:32:27'!
Object subclass: #RestInterface
	instanceVariableNames: 'authenticator lastCartID carts catalog transactions'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!
!RestInterface methodsFor: 'initialization' stamp: 'JEA 11/30/2020 19:32:33' prior: 50872762!
initializeWithAuthenticator: anAuthenticator withCatalog: aCatalog 

	authenticator := anAuthenticator.
	lastCartID := 0.
	catalog := aCatalog.
	carts := Dictionary new.
	carts := Dictionary new.! !
!RestInterface methodsFor: 'initialization' stamp: 'JEA 11/30/2020 19:32:37' prior: 50875724!
initializeWithAuthenticator: anAuthenticator withCatalog: aCatalog 

	authenticator := anAuthenticator.
	lastCartID := 0.
	catalog := aCatalog.
	carts := Dictionary new.
	transactions := Dictionary new.! !

!classDefinition: #RestInterface category: 'TusLibros' stamp: 'JEA 11/30/2020 19:33:03'!
Object subclass: #RestInterface
	instanceVariableNames: 'authenticator lastCartID carts catalog transactions transactionPrices'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!
!RestInterface methodsFor: 'initialization' stamp: 'JEA 11/30/2020 19:33:01' prior: 50875734!
initializeWithAuthenticator: anAuthenticator withCatalog: aCatalog 

	authenticator := anAuthenticator.
	lastCartID := 0.
	catalog := aCatalog.
	carts := Dictionary new.
	transactionPrices := Dictionary new.! !

Object subclass: #RestInterface
	instanceVariableNames: 'authenticator lastCartID carts catalog transactionPrices'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

!classDefinition: #RestInterface category: 'TusLibros' stamp: 'JEA 11/30/2020 19:33:08'!
Object subclass: #RestInterface
	instanceVariableNames: 'authenticator lastCartID carts catalog transactionPrices'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!
!RestInterface methodsFor: 'api' stamp: 'JEA 11/30/2020 19:33:34' prior: 50875701!
checkOutCartWithID: aCartID withCardNumber: aCardNumber expiring: aGregorianMonthOfYear owner: aName

	self ensureCartIDIsValid: aCartID.
	self ensureCardNumberIsValid: aCardNumber.! !
!RestInterfaceTest methodsFor: 'tests - checking out cart' stamp: 'JEA 11/30/2020 19:34:09' prior: 50875626!
test09canCheckOutNonEmptyValidCartWithValidCreditCard
	| restInterface cartID transactionID |

	restInterface := RestInterface 
		newWithAuthenticator: AuthenticatorSimulator newSimulatingValidAuthentication 
		withCatalog: testObjectsFactory defaultCatalog.
		
	cartID := restInterface
		createCartFor: testObjectsFactory validClientID
		password: testObjectsFactory correctPassword.
		
	restInterface 
		add: 1 
		of: testObjectsFactory itemSoldByTheStore 
		toCartWithID: cartID.
	
	transactionID := restInterface 
		checkOutCartWithID: cartID 
		withCardNumber: testObjectsFactory invalidCardNumber 
		expiring: testObjectsFactory expirationDateNotReached 
		owner: testObjectsFactory validCreditCardOwnersName.
	
	"self assert: testObjectsFactory itemSoldByTheStorePrice 
		equals: (restInterface moneyDebitedInTransactionWithID: transactionID)."! !

!testRun: #RestInterfaceTest #test01cannotCreateCartForInvalidClientID stamp: 'JEA 11/30/2020 19:34:14'!
PASSED!

!testRun: #RestInterfaceTest #test02cannotCreateCartForClientWithWrongPassword stamp: 'JEA 11/30/2020 19:34:14'!
PASSED!

!testRun: #RestInterfaceTest #test03canCreateCartForWellAuthenticatedClient stamp: 'JEA 11/30/2020 19:34:14'!
PASSED!

!testRun: #RestInterfaceTest #test04canCreateMoreThanOneCartWithDifferentIDs stamp: 'JEA 11/30/2020 19:34:14'!
PASSED!

!testRun: #RestInterfaceTest #test05cannotAddWhenCartIDIsInvalid stamp: 'JEA 11/30/2020 19:34:14'!
PASSED!

!testRun: #RestInterfaceTest #test06canAddItemToCartWithValidID stamp: 'JEA 11/30/2020 19:34:14'!
PASSED!

!testRun: #RestInterfaceTest #test07cantCheckOutCartWithInvalidID stamp: 'JEA 11/30/2020 19:34:14'!
PASSED!

!testRun: #RestInterfaceTest #test08cantCheckOutCartWithInvalidCreditCardNumber stamp: 'JEA 11/30/2020 19:34:14'!
PASSED!

!testRun: #RestInterfaceTest #test09canCheckOutNonEmptyValidCartWithValidCreditCard stamp: 'JEA 11/30/2020 19:34:14'!
ERROR!

!testRun: #RestInterfaceTest #test99cantAddToCartAfterTimeout stamp: 'JEA 11/30/2020 19:34:14'!
FAILURE!

!testRun: #RestInterfaceTest #test09canCheckOutNonEmptyValidCartWithValidCreditCard stamp: 'JEA 11/30/2020 19:34:21'!
ERROR!
!RestInterfaceTest methodsFor: 'tests - checking out cart' stamp: 'JEA 11/30/2020 19:34:28' prior: 50875787!
test09canCheckOutNonEmptyValidCartWithValidCreditCard
	| restInterface cartID transactionID |

	restInterface := RestInterface 
		newWithAuthenticator: AuthenticatorSimulator newSimulatingValidAuthentication 
		withCatalog: testObjectsFactory defaultCatalog.
		
	cartID := restInterface
		createCartFor: testObjectsFactory validClientID
		password: testObjectsFactory correctPassword.
		
	restInterface 
		add: 1 
		of: testObjectsFactory itemSoldByTheStore 
		toCartWithID: cartID.
	
	transactionID := restInterface 
		checkOutCartWithID: cartID 
		withCardNumber: testObjectsFactory validCardNumber 
		expiring: testObjectsFactory expirationDateNotReached 
		owner: testObjectsFactory validCreditCardOwnersName.
	
	"self assert: testObjectsFactory itemSoldByTheStorePrice 
		equals: (restInterface moneyDebitedInTransactionWithID: transactionID)."! !

!testRun: #RestInterfaceTest #test07cantCheckOutCartWithInvalidID stamp: 'JEA 11/30/2020 19:34:30'!
PASSED!

!testRun: #RestInterfaceTest #test08cantCheckOutCartWithInvalidCreditCardNumber stamp: 'JEA 11/30/2020 19:34:30'!
PASSED!

!testRun: #RestInterfaceTest #test09canCheckOutNonEmptyValidCartWithValidCreditCard stamp: 'JEA 11/30/2020 19:34:30'!
PASSED!

!testRun: #RestInterfaceTest #test01cannotCreateCartForInvalidClientID stamp: 'JEA 11/30/2020 19:34:32'!
PASSED!

!testRun: #RestInterfaceTest #test02cannotCreateCartForClientWithWrongPassword stamp: 'JEA 11/30/2020 19:34:32'!
PASSED!

!testRun: #RestInterfaceTest #test03canCreateCartForWellAuthenticatedClient stamp: 'JEA 11/30/2020 19:34:32'!
PASSED!

!testRun: #RestInterfaceTest #test04canCreateMoreThanOneCartWithDifferentIDs stamp: 'JEA 11/30/2020 19:34:32'!
PASSED!

!testRun: #RestInterfaceTest #test05cannotAddWhenCartIDIsInvalid stamp: 'JEA 11/30/2020 19:34:32'!
PASSED!

!testRun: #RestInterfaceTest #test06canAddItemToCartWithValidID stamp: 'JEA 11/30/2020 19:34:32'!
PASSED!

!testRun: #RestInterfaceTest #test07cantCheckOutCartWithInvalidID stamp: 'JEA 11/30/2020 19:34:32'!
PASSED!

!testRun: #RestInterfaceTest #test08cantCheckOutCartWithInvalidCreditCardNumber stamp: 'JEA 11/30/2020 19:34:32'!
PASSED!

!testRun: #RestInterfaceTest #test09canCheckOutNonEmptyValidCartWithValidCreditCard stamp: 'JEA 11/30/2020 19:34:32'!
PASSED!

!testRun: #RestInterfaceTest #test99cantAddToCartAfterTimeout stamp: 'JEA 11/30/2020 19:34:32'!
FAILURE!

!testRun: #RestInterfaceTest #test99cantAddToCartAfterTimeout stamp: 'JEA 11/30/2020 19:34:32'!
FAILURE!
!RestInterfaceTest methodsFor: 'tests - listing cart' stamp: 'JEA 11/30/2020 19:34:49'!
test10cannotListCartWithInvalidID! !

!classDefinition: #ClockSimulator category: 'TusLibros' stamp: 'JEA 11/30/2020 19:40:05'!
Object subclass: #ClockSimulator
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!
!RestInterfaceTest methodsFor: 'tests - cart timeout' stamp: 'JEA 11/30/2020 19:40:01' prior: 50875281!
test99cantAddToCartAfterTimeout
	| restInterface cartID clockSimulator |

	clockSimulator := ClockSimulator newSimulatingRealTime.

	restInterface := RestInterface 
		newWithAuthenticator: AuthenticatorSimulator newSimulatingValidAuthentication 
		withCatalog: testObjectsFactory defaultCatalog
		withClock: clockSimulator.
	
	cartID := restInterface 
		createCartFor: testObjectsFactory validClientID
		password: testObjectsFactory correctPassword.
	
	clockSimulator simulateAdvancingHalfAnHour.
	
	self should: [ 
		restInterface 
			add: 2 
			of: testObjectsFactory itemSoldByTheStore 
			toCartWithID: cartID. 
		]
		raise: Error
		withMessageText: RestInterface cartTimedOutMessage.! !
!RestInterfaceTest methodsFor: 'tests - cart timeout' stamp: 'JEA 11/30/2020 19:40:16'!
test11cantAddToCartAfterTimeout
	| restInterface cartID clockSimulator |

	clockSimulator := ClockSimulator newSimulatingRealTime.

	restInterface := RestInterface 
		newWithAuthenticator: AuthenticatorSimulator newSimulatingValidAuthentication 
		withCatalog: testObjectsFactory defaultCatalog
		withClock: clockSimulator.
	
	cartID := restInterface 
		createCartFor: testObjectsFactory validClientID
		password: testObjectsFactory correctPassword.
	
	clockSimulator simulateAdvancingHalfAnHour.
	
	self should: [ 
		restInterface 
			add: 2 
			of: testObjectsFactory itemSoldByTheStore 
			toCartWithID: cartID. 
		]
		raise: Error
		withMessageText: RestInterface cartTimedOutMessage.! !

!methodRemoval: RestInterfaceTest #test99cantAddToCartAfterTimeout stamp: 'JEA 11/30/2020 19:40:16'!
test99cantAddToCartAfterTimeout
	| restInterface cartID clockSimulator |

	clockSimulator := ClockSimulator newSimulatingRealTime.

	restInterface := RestInterface 
		newWithAuthenticator: AuthenticatorSimulator newSimulatingValidAuthentication 
		withCatalog: testObjectsFactory defaultCatalog
		withClock: clockSimulator.
	
	cartID := restInterface 
		createCartFor: testObjectsFactory validClientID
		password: testObjectsFactory correctPassword.
	
	clockSimulator simulateAdvancingHalfAnHour.
	
	self should: [ 
		restInterface 
			add: 2 
			of: testObjectsFactory itemSoldByTheStore 
			toCartWithID: cartID. 
		]
		raise: Error
		withMessageText: RestInterface cartTimedOutMessage.!
!ClockSimulator class methodsFor: 'instance creation' stamp: 'JEA 11/30/2020 19:42:59'!
newSimulatingRealTime

	^self new initializeSimulatingRealTime.! !

!classDefinition: #ClockSimulator category: 'TusLibros' stamp: 'JEA 11/30/2020 19:43:36'!
Object subclass: #ClockSimulator
	instanceVariableNames: 'currentDateAndTimeBehavior'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!
!ClockSimulator methodsFor: 'initialization' stamp: 'JEA 11/30/2020 19:43:34'!
initializeSimulatingRealTime

	currentDateAndTimeBehavior := [  ].! !

GregorianDateTime  now!
!ClockSimulator methodsFor: 'initialization' stamp: 'JEA 11/30/2020 19:44:15' prior: 50876039!
initializeSimulatingRealTime

	currentDateAndTimeBehavior := [ GregorianDateTime now. ].! !
!ClockSimulator methodsFor: 'queries' stamp: 'JEA 11/30/2020 19:44:53'!
now

	^currentDateAndTimeBehavior value.! !
!ClockSimulator methodsFor: 'initialization' stamp: 'JEA 11/30/2020 19:45:10' prior: 50876045!
initializeSimulatingRealTime

	self simulateRealTime.! !
!ClockSimulator methodsFor: 'simulations' stamp: 'JEA 11/30/2020 19:45:17'!
simulateRealTime

	currentDateAndTimeBehavior := [ GregorianDateTime now. ].! !
!ClockSimulator methodsFor: 'simulations' stamp: 'JEA 11/30/2020 19:45:30'!
simulateAdvancingHalfAnHour

	currentDateAndTimeBehavior := [ GregorianDateTime now. ].! !

GregorianDateTime now!

GregorianDateTime now type!

GregorianDateTime now next: 30*minute.!
!ClockSimulator methodsFor: 'simulations' stamp: 'JEA 11/30/2020 19:49:28'!
simulateAdvancing: aTimeMeasure

	currentDateAndTimeBehavior := [ GregorianDateTime now next: aTimeMeasure. ].! !

!methodRemoval: ClockSimulator #simulateAdvancingHalfAnHour stamp: 'JEA 11/30/2020 19:49:31'!
simulateAdvancingHalfAnHour

	currentDateAndTimeBehavior := [ GregorianDateTime now. ].!
!RestInterfaceTest methodsFor: 'tests - cart timeout' stamp: 'JEA 11/30/2020 19:49:42' prior: 50875976!
test11cantAddToCartAfterTimeout
	| restInterface cartID clockSimulator |

	clockSimulator := ClockSimulator newSimulatingRealTime.

	restInterface := RestInterface 
		newWithAuthenticator: AuthenticatorSimulator newSimulatingValidAuthentication 
		withCatalog: testObjectsFactory defaultCatalog
		withClock: clockSimulator.
	
	cartID := restInterface 
		createCartFor: testObjectsFactory validClientID
		password: testObjectsFactory correctPassword.
	
	clockSimulator simulateAdvancing: 30*minute.
	
	self should: [ 
		restInterface 
			add: 2 
			of: testObjectsFactory itemSoldByTheStore 
			toCartWithID: cartID. 
		]
		raise: Error
		withMessageText: RestInterface cartTimedOutMessage.! !
!RestInterfaceTest methodsFor: 'tests - cart timeout' stamp: 'JEA 11/30/2020 19:50:16'!
test11cantAccessCartAfterTimeout
	| restInterface cartID clockSimulator |

	clockSimulator := ClockSimulator newSimulatingRealTime.

	restInterface := RestInterface 
		newWithAuthenticator: AuthenticatorSimulator newSimulatingValidAuthentication 
		withCatalog: testObjectsFactory defaultCatalog
		withClock: clockSimulator.
	
	cartID := restInterface 
		createCartFor: testObjectsFactory validClientID
		password: testObjectsFactory correctPassword.
	
	clockSimulator simulateAdvancing: 30*minute.
	
	self should: [ 
		restInterface 
			add: 2 
			of: testObjectsFactory itemSoldByTheStore 
			toCartWithID: cartID. 
		]
		raise: Error
		withMessageText: RestInterface cartTimedOutMessage.! !

!methodRemoval: RestInterfaceTest #test11cantAddToCartAfterTimeout stamp: 'JEA 11/30/2020 19:50:16'!
test11cantAddToCartAfterTimeout
	| restInterface cartID clockSimulator |

	clockSimulator := ClockSimulator newSimulatingRealTime.

	restInterface := RestInterface 
		newWithAuthenticator: AuthenticatorSimulator newSimulatingValidAuthentication 
		withCatalog: testObjectsFactory defaultCatalog
		withClock: clockSimulator.
	
	cartID := restInterface 
		createCartFor: testObjectsFactory validClientID
		password: testObjectsFactory correctPassword.
	
	clockSimulator simulateAdvancing: 30*minute.
	
	self should: [ 
		restInterface 
			add: 2 
			of: testObjectsFactory itemSoldByTheStore 
			toCartWithID: cartID. 
		]
		raise: Error
		withMessageText: RestInterface cartTimedOutMessage.!
!RestInterfaceTest methodsFor: 'tests - cart timeout' stamp: 'JEA 11/30/2020 19:52:20'!
test11cantAccessCartAfterTimeoutSinceCreated
	| restInterface cartID clockSimulator |

	clockSimulator := ClockSimulator newSimulatingRealTime.

	restInterface := RestInterface 
		newWithAuthenticator: AuthenticatorSimulator newSimulatingValidAuthentication 
		withCatalog: testObjectsFactory defaultCatalog
		withClock: clockSimulator.
	
	cartID := restInterface 
		createCartFor: testObjectsFactory validClientID
		password: testObjectsFactory correctPassword.
	
	clockSimulator simulateAdvancing: 30*minute.
	
	self should: [ 
		restInterface 
			add: 2 
			of: testObjectsFactory itemSoldByTheStore 
			toCartWithID: cartID. 
		]
		raise: Error
		withMessageText: RestInterface cartTimedOutMessage.! !

!methodRemoval: RestInterfaceTest #test11cantAccessCartAfterTimeout stamp: 'JEA 11/30/2020 19:52:21'!
test11cantAccessCartAfterTimeout
	| restInterface cartID clockSimulator |

	clockSimulator := ClockSimulator newSimulatingRealTime.

	restInterface := RestInterface 
		newWithAuthenticator: AuthenticatorSimulator newSimulatingValidAuthentication 
		withCatalog: testObjectsFactory defaultCatalog
		withClock: clockSimulator.
	
	cartID := restInterface 
		createCartFor: testObjectsFactory validClientID
		password: testObjectsFactory correctPassword.
	
	clockSimulator simulateAdvancing: 30*minute.
	
	self should: [ 
		restInterface 
			add: 2 
			of: testObjectsFactory itemSoldByTheStore 
			toCartWithID: cartID. 
		]
		raise: Error
		withMessageText: RestInterface cartTimedOutMessage.!
!RestInterfaceTest methodsFor: 'tests - cart timeout' stamp: 'JEA 11/30/2020 19:52:42' prior: 50876163!
test11cantAccessCartAfterTimeoutSinceCreated
	| restInterface cartID clockSimulator |

	clockSimulator := ClockSimulator newSimulatingRealTime.

	restInterface := RestInterface 
		newWithAuthenticator: AuthenticatorSimulator newSimulatingValidAuthentication 
		withCatalog: testObjectsFactory defaultCatalog
		withClock: clockSimulator.
	
	cartID := restInterface 
		createCartFor: testObjectsFactory validClientID
		password: testObjectsFactory correctPassword.
	
	clockSimulator simulateAdvancing: 30 * minute.
	
	self should: [ 
		restInterface 
			add: 2 
			of: testObjectsFactory itemSoldByTheStore 
			toCartWithID: cartID. 
		]
		raise: Error
		withMessageText: RestInterface cartTimedOutMessage.! !
!RestInterfaceTest methodsFor: 'tests - cart timeout' stamp: 'JEA 11/30/2020 19:53:15' prior: 50876214!
test11cantAccessCartAfterTimeoutSinceCreated
	| restInterface cartID clockSimulator |

	clockSimulator := ClockSimulator newSimulatingRealTime.

	restInterface := RestInterface 
		newWithAuthenticator: AuthenticatorSimulator newSimulatingValidAuthentication 
		withCatalog: testObjectsFactory defaultCatalog
		withClock: clockSimulator.
	
	cartID := restInterface 
		createCartFor: testObjectsFactory validClientID
		password: testObjectsFactory correctPassword.
	
	clockSimulator simulateAdvancing: 30 * minute.
	
	self should: [ 
		restInterface 
			add: 2 
			of: testObjectsFactory itemSoldByTheStore 
			toCartWithID: cartID. 
		]
		raise: Error
		withMessageText: RestInterface cartTimedOutMessage.
	
	self should: [ 
		restInterface listItemsInCartWithID: cartID. 
		]
		raise: Error
		withMessageText: RestInterface cartTimedOutMessage.! !
!RestInterfaceTest methodsFor: 'tests - cart timeout' stamp: 'JEA 11/30/2020 19:56:09' prior: 50876240!
test11cantAccessCartAfterTimeoutSinceCreated
	| restInterface cartID clockSimulator |

	clockSimulator := ClockSimulator newSimulatingRealTime.

	restInterface := RestInterface 
		newWithAuthenticator: AuthenticatorSimulator newSimulatingValidAuthentication 
		withCatalog: testObjectsFactory defaultCatalog
		withClock: clockSimulator.
	
	cartID := restInterface 
		createCartFor: testObjectsFactory validClientID
		password: testObjectsFactory correctPassword.
	
	clockSimulator simulateAdvancing: 30 * minute.
	
	self should: [ 
		restInterface 
			add: 2 
			of: testObjectsFactory itemSoldByTheStore 
			toCartWithID: cartID. 
		]
		raise: Error
		withMessageText: RestInterface cartTimedOutMessage.
	
	self should: [ 
		restInterface listItemsInCartWithID: cartID. 
		]
		raise: Error
		withMessageText: RestInterface cartTimedOutMessage.
	
	self should: [ 
		restInterface 
			checkOutCartWithID: cartID 
			withCardNumber: testObjectsFactory validCardNumber 
			expiring: testObjectsFactory expirationDateNotReached 
			owner: testObjectsFactory validClientID.
		]
		raise: Error
		withMessageText: RestInterface cartTimedOutMessage.! !

!testRun: #RestInterfaceTest #test01cannotCreateCartForInvalidClientID stamp: 'JEA 11/30/2020 19:56:12'!
PASSED!

!testRun: #RestInterfaceTest #test02cannotCreateCartForClientWithWrongPassword stamp: 'JEA 11/30/2020 19:56:12'!
PASSED!

!testRun: #RestInterfaceTest #test03canCreateCartForWellAuthenticatedClient stamp: 'JEA 11/30/2020 19:56:12'!
PASSED!

!testRun: #RestInterfaceTest #test04canCreateMoreThanOneCartWithDifferentIDs stamp: 'JEA 11/30/2020 19:56:12'!
PASSED!

!testRun: #RestInterfaceTest #test05cannotAddWhenCartIDIsInvalid stamp: 'JEA 11/30/2020 19:56:12'!
PASSED!

!testRun: #RestInterfaceTest #test06canAddItemToCartWithValidID stamp: 'JEA 11/30/2020 19:56:12'!
PASSED!

!testRun: #RestInterfaceTest #test07cantCheckOutCartWithInvalidID stamp: 'JEA 11/30/2020 19:56:12'!
PASSED!

!testRun: #RestInterfaceTest #test08cantCheckOutCartWithInvalidCreditCardNumber stamp: 'JEA 11/30/2020 19:56:12'!
PASSED!

!testRun: #RestInterfaceTest #test09canCheckOutNonEmptyValidCartWithValidCreditCard stamp: 'JEA 11/30/2020 19:56:12'!
PASSED!

!testRun: #RestInterfaceTest #test10cannotListCartWithInvalidID stamp: 'JEA 11/30/2020 19:56:12'!
PASSED!

!testRun: #RestInterfaceTest #test11cantAccessCartAfterTimeoutSinceCreated stamp: 'JEA 11/30/2020 19:56:12'!
ERROR!

!testRun: #RestInterfaceTest #test11cantAccessCartAfterTimeoutSinceCreated stamp: 'JEA 11/30/2020 19:56:12'!
ERROR!

!classRenamed: #ClockSimulator as: #Clock stamp: 'JEA 11/30/2020 19:57:43'!
Smalltalk renameClassNamed: #ClockSimulator as: #Clock!
!RestInterfaceTest methodsFor: 'as yet unclassified' stamp: 'JEA 11/30/2020 19:57:43' prior: 50876270!
test11cantAccessCartAfterTimeoutSinceCreated
	| restInterface cartID clockSimulator |

	clockSimulator := Clock newSimulatingRealTime.

	restInterface := RestInterface 
		newWithAuthenticator: AuthenticatorSimulator newSimulatingValidAuthentication 
		withCatalog: testObjectsFactory defaultCatalog
		withClock: clockSimulator.
	
	cartID := restInterface 
		createCartFor: testObjectsFactory validClientID
		password: testObjectsFactory correctPassword.
	
	clockSimulator simulateAdvancing: 30 * minute.
	
	self should: [ 
		restInterface 
			add: 2 
			of: testObjectsFactory itemSoldByTheStore 
			toCartWithID: cartID. 
		]
		raise: Error
		withMessageText: RestInterface cartTimedOutMessage.
	
	self should: [ 
		restInterface listItemsInCartWithID: cartID. 
		]
		raise: Error
		withMessageText: RestInterface cartTimedOutMessage.
	
	self should: [ 
		restInterface 
			checkOutCartWithID: cartID 
			withCardNumber: testObjectsFactory validCardNumber 
			expiring: testObjectsFactory expirationDateNotReached 
			owner: testObjectsFactory validClientID.
		]
		raise: Error
		withMessageText: RestInterface cartTimedOutMessage.! !
!RestInterfaceTest methodsFor: 'tests - cart timeout' stamp: 'JEA 11/30/2020 19:58:14' prior: 50876357!
test11cantAccessCartAfterTimeoutSinceCreated
	| restInterface cartID clock |

	clock := Clock newSimulatingRealTime.

	restInterface := RestInterface 
		newWithAuthenticator: AuthenticatorSimulator newSimulatingValidAuthentication 
		withCatalog: testObjectsFactory defaultCatalog
		withClock: clock.
	
	cartID := restInterface 
		createCartFor: testObjectsFactory validClientID
		password: testObjectsFactory correctPassword.
	
	clock simulateAdvancing: 30 * minute.
	
	self should: [ 
		restInterface 
			add: 2 
			of: testObjectsFactory itemSoldByTheStore 
			toCartWithID: cartID. 
		]
		raise: Error
		withMessageText: RestInterface cartTimedOutMessage.
	
	self should: [ 
		restInterface listItemsInCartWithID: cartID. 
		]
		raise: Error
		withMessageText: RestInterface cartTimedOutMessage.
	
	self should: [ 
		restInterface 
			checkOutCartWithID: cartID 
			withCardNumber: testObjectsFactory validCardNumber 
			expiring: testObjectsFactory expirationDateNotReached 
			owner: testObjectsFactory validClientID.
		]
		raise: Error
		withMessageText: RestInterface cartTimedOutMessage.! !
!RestInterface class methodsFor: 'instance creation' stamp: 'JEA 11/30/2020 20:00:01'!
newWithAuthenticator: anAuthenticator withCatalog: aCatalog withClock: aClock  

	^self new initializeWithAuthenticator: anAuthenticator withCatalog: aCatalog.! !
!RestInterfaceTest methodsFor: 'as yet unclassified' stamp: 'JEA 11/30/2020 20:00:01' prior: 50873953!
test04canCreateMoreThanOneCartWithDifferentIDs
	| restInterface authenticatorSimulator cartID1 cartID2 |
	
	authenticatorSimulator := AuthenticatorSimulator newSimulatingValidAuthentication.
	restInterface := RestInterface newWithAuthenticator: authenticatorSimulator withCatalog: Dictionary new withClock: Clock newSimulatingRealTime.
	
	cartID1 := restInterface 
				createCartFor: testObjectsFactory validClientID 
				password: testObjectsFactory correctPassword.

	cartID2 := restInterface 
				createCartFor: testObjectsFactory validClientID 
				password: testObjectsFactory correctPassword.
	
	self assert: cartID1 ~= cartID2.! !
!RestInterfaceTest methodsFor: 'as yet unclassified' stamp: 'JEA 11/30/2020 20:00:01' prior: 50875858!
test09canCheckOutNonEmptyValidCartWithValidCreditCard
	| restInterface cartID transactionID |

	restInterface := RestInterface 
		newWithAuthenticator: AuthenticatorSimulator newSimulatingValidAuthentication 
		withCatalog: testObjectsFactory defaultCatalog withClock: Clock newSimulatingRealTime.
		
	cartID := restInterface
		createCartFor: testObjectsFactory validClientID
		password: testObjectsFactory correctPassword.
		
	restInterface 
		add: 1 
		of: testObjectsFactory itemSoldByTheStore 
		toCartWithID: cartID.
	
	transactionID := restInterface 
		checkOutCartWithID: cartID 
		withCardNumber: testObjectsFactory validCardNumber 
		expiring: testObjectsFactory expirationDateNotReached 
		owner: testObjectsFactory validCreditCardOwnersName.
	
	"self assert: testObjectsFactory itemSoldByTheStorePrice 
		equals: (restInterface moneyDebitedInTransactionWithID: transactionID)."! !
!RestInterfaceTest methodsFor: 'as yet unclassified' stamp: 'JEA 11/30/2020 20:00:01' prior: 50873866!
test01cannotCreateCartForInvalidClientID
	| restInterface authenticatorSimulator |
	
	authenticatorSimulator := AuthenticatorSimulator newSimulatingValidAuthentication.
	authenticatorSimulator simulateInvalidClientID.
	restInterface := RestInterface newWithAuthenticator: authenticatorSimulator withCatalog: Dictionary new withClock: Clock newSimulatingRealTime.
	
	self should: [ restInterface 
				createCartFor: testObjectsFactory validClientID 
				password: testObjectsFactory correctPassword. ]
		raise: Error
		withMessageText: RestInterface authenticationFailedMessage.! !
!RestInterfaceTest methodsFor: 'as yet unclassified' stamp: 'JEA 11/30/2020 20:00:01' prior: 50875020!
test07cantCheckOutCartWithInvalidID
	| restInterface |

	restInterface := RestInterface 
		newWithAuthenticator: AuthenticatorSimulator newSimulatingValidAuthentication 
		withCatalog: testObjectsFactory defaultCatalog withClock: Clock newSimulatingRealTime.
	
	self should: [ 
		restInterface 
			checkOutCartWithID: testObjectsFactory invalidCartID 
			withCardNumber: testObjectsFactory validCardNumber 
			expiring: testObjectsFactory expirationDateNotReached 
			owner: testObjectsFactory validCreditCardOwnersName. 
		]
		raise: Error
		withMessageText: RestInterface invalidCartIDMessage.! !
!RestInterfaceTest methodsFor: 'as yet unclassified' stamp: 'JEA 11/30/2020 20:00:01' prior: 50875072!
test06canAddItemToCartWithValidID
	| restInterface cartID |

	restInterface := RestInterface 
		newWithAuthenticator: AuthenticatorSimulator newSimulatingValidAuthentication 
		withCatalog: testObjectsFactory defaultCatalog withClock: Clock newSimulatingRealTime.
	
	cartID := restInterface 
		createCartFor: testObjectsFactory validClientID
		password: testObjectsFactory correctPassword.
	
	restInterface 
		add: 2 
		of: testObjectsFactory itemSoldByTheStore 
		toCartWithID: cartID.
	
	self assert: 2 
		equals: ((restInterface listItemsInCartWithID: cartID) occurrencesOf: testObjectsFactory itemSoldByTheStore).! !
!RestInterfaceTest methodsFor: 'as yet unclassified' stamp: 'JEA 11/30/2020 20:00:01' prior: 50875251!
test08cantCheckOutCartWithInvalidCreditCardNumber
	| restInterface cartID |

	restInterface := RestInterface 
		newWithAuthenticator: AuthenticatorSimulator newSimulatingValidAuthentication 
		withCatalog: testObjectsFactory defaultCatalog withClock: Clock newSimulatingRealTime.
		
	cartID := restInterface
		createCartFor: testObjectsFactory validClientID
		password: testObjectsFactory correctPassword.
	
	self should: [ 
		restInterface 
			checkOutCartWithID: cartID 
			withCardNumber: testObjectsFactory invalidCardNumber 
			expiring: testObjectsFactory expirationDateNotReached 
			owner: testObjectsFactory validCreditCardOwnersName. 
		]
		raise: Error
		withMessageText: RestInterface invalidCreditCardNumberMessage.! !
!RestInterfaceTest methodsFor: 'as yet unclassified' stamp: 'JEA 11/30/2020 20:00:01' prior: 50875052!
test03canCreateCartForWellAuthenticatedClient
	| restInterface authenticatorSimulator cartID cartList |
	
	authenticatorSimulator := AuthenticatorSimulator newSimulatingValidAuthentication.
	restInterface := RestInterface newWithAuthenticator: authenticatorSimulator withCatalog: Dictionary new withClock: Clock newSimulatingRealTime.
	
	cartID := restInterface 
				createCartFor: testObjectsFactory validClientID 
				password: testObjectsFactory correctPassword.
	
	cartList := restInterface listItemsInCartWithID: cartID.
	
	self assert: cartList isEmpty.! !
!RestInterfaceTest methodsFor: 'as yet unclassified' stamp: 'JEA 11/30/2020 20:00:01' prior: 50873887!
test02cannotCreateCartForClientWithWrongPassword
	| restInterface authenticatorSimulator |
	
	authenticatorSimulator := AuthenticatorSimulator newSimulatingValidAuthentication.
	authenticatorSimulator simulateWrongPassword.
	restInterface := RestInterface newWithAuthenticator: authenticatorSimulator withCatalog: Dictionary new withClock: Clock newSimulatingRealTime.
	
	self should: [ restInterface 
				createCartFor: testObjectsFactory validClientID 
				password: testObjectsFactory correctPassword. ]
		raise: Error
		withMessageText: RestInterface authenticationFailedMessage.! !
!RestInterfaceTest methodsFor: 'as yet unclassified' stamp: 'JEA 11/30/2020 20:00:01' prior: 50874990!
test05cannotAddWhenCartIDIsInvalid
	| restInterface |

	restInterface := RestInterface 
		newWithAuthenticator: AuthenticatorSimulator newSimulatingValidAuthentication 
		withCatalog: testObjectsFactory defaultCatalog withClock: Clock newSimulatingRealTime.
	
	self should: [ 
		restInterface 
			add: 1 
			of: testObjectsFactory itemSoldByTheStore 
			toCartWithID: testObjectsFactory invalidCartID. 
		]
		raise: Error
		withMessageText: RestInterface invalidCartIDMessage.! !

!methodRemoval: RestInterface class #newWithAuthenticator:withCatalog: stamp: 'JEA 11/30/2020 20:00:01'!
newWithAuthenticator: anAuthenticator withCatalog: aCatalog 

	^self new initializeWithAuthenticator: anAuthenticator withCatalog: aCatalog.!

!testRun: #RestInterfaceTest #test01cannotCreateCartForInvalidClientID stamp: 'JEA 11/30/2020 20:00:15'!
PASSED!

!testRun: #RestInterfaceTest #test02cannotCreateCartForClientWithWrongPassword stamp: 'JEA 11/30/2020 20:00:15'!
PASSED!

!testRun: #RestInterfaceTest #test03canCreateCartForWellAuthenticatedClient stamp: 'JEA 11/30/2020 20:00:15'!
PASSED!

!testRun: #RestInterfaceTest #test04canCreateMoreThanOneCartWithDifferentIDs stamp: 'JEA 11/30/2020 20:00:15'!
PASSED!

!testRun: #RestInterfaceTest #test05cannotAddWhenCartIDIsInvalid stamp: 'JEA 11/30/2020 20:00:15'!
PASSED!

!testRun: #RestInterfaceTest #test06canAddItemToCartWithValidID stamp: 'JEA 11/30/2020 20:00:15'!
PASSED!

!testRun: #RestInterfaceTest #test07cantCheckOutCartWithInvalidID stamp: 'JEA 11/30/2020 20:00:15'!
PASSED!

!testRun: #RestInterfaceTest #test08cantCheckOutCartWithInvalidCreditCardNumber stamp: 'JEA 11/30/2020 20:00:15'!
PASSED!

!testRun: #RestInterfaceTest #test09canCheckOutNonEmptyValidCartWithValidCreditCard stamp: 'JEA 11/30/2020 20:00:15'!
PASSED!

!testRun: #RestInterfaceTest #test10cannotListCartWithInvalidID stamp: 'JEA 11/30/2020 20:00:15'!
PASSED!

!testRun: #RestInterfaceTest #test11cantAccessCartAfterTimeoutSinceCreated stamp: 'JEA 11/30/2020 20:00:15'!
FAILURE!

!testRun: #RestInterfaceTest #test11cantAccessCartAfterTimeoutSinceCreated stamp: 'JEA 11/30/2020 20:00:15'!
FAILURE!
!RestInterfaceTest methodsFor: 'tests - creating cart' stamp: 'JEA 11/30/2020 20:00:35' prior: 50876499!
test01cannotCreateCartForInvalidClientID
	| restInterface authenticatorSimulator |
	
	authenticatorSimulator := AuthenticatorSimulator newSimulatingValidAuthentication.
	authenticatorSimulator simulateInvalidClientID.
	restInterface := RestInterface 
		newWithAuthenticator: authenticatorSimulator 
		withCatalog: Dictionary new 
		withClock: Clock newSimulatingRealTime.
	
	self should: [ restInterface 
				createCartFor: testObjectsFactory validClientID 
				password: testObjectsFactory correctPassword. ]
		raise: Error
		withMessageText: RestInterface authenticationFailedMessage.! !
!RestInterfaceTest methodsFor: 'tests - creating cart' stamp: 'JEA 11/30/2020 20:00:39' prior: 50876706!
test01cannotCreateCartForInvalidClientID
	| restInterface authenticatorSimulator |
	
	authenticatorSimulator := AuthenticatorSimulator newSimulatingValidAuthentication.
	authenticatorSimulator simulateInvalidClientID.

	restInterface := RestInterface 
		newWithAuthenticator: authenticatorSimulator 
		withCatalog: Dictionary new 
		withClock: Clock newSimulatingRealTime.
	
	self should: [ restInterface 
				createCartFor: testObjectsFactory validClientID 
				password: testObjectsFactory correctPassword. ]
		raise: Error
		withMessageText: RestInterface authenticationFailedMessage.! !
!RestInterfaceTest methodsFor: 'tests - creating cart' stamp: 'JEA 11/30/2020 20:00:52' prior: 50876614!
test02cannotCreateCartForClientWithWrongPassword
	| restInterface authenticatorSimulator |
	
	authenticatorSimulator := AuthenticatorSimulator newSimulatingValidAuthentication.
	authenticatorSimulator simulateWrongPassword.
	
	restInterface := RestInterface 
		newWithAuthenticator: authenticatorSimulator 
		withCatalog: Dictionary new 
		withClock: Clock newSimulatingRealTime.
	
	self should: [ restInterface 
				createCartFor: testObjectsFactory validClientID 
				password: testObjectsFactory correctPassword. ]
		raise: Error
		withMessageText: RestInterface authenticationFailedMessage.! !
!RestInterfaceTest methodsFor: 'tests - creating cart' stamp: 'JEA 11/30/2020 20:01:04' prior: 50876593!
test03canCreateCartForWellAuthenticatedClient
	| restInterface authenticatorSimulator cartID cartList |
	
	authenticatorSimulator := AuthenticatorSimulator newSimulatingValidAuthentication.
	
	restInterface := RestInterface 
		newWithAuthenticator: authenticatorSimulator 
		withCatalog: Dictionary new 
		withClock: Clock newSimulatingRealTime.
	
	cartID := restInterface 
				createCartFor: testObjectsFactory validClientID 
				password: testObjectsFactory correctPassword.
	
	cartList := restInterface listItemsInCartWithID: cartID.
	
	self assert: cartList isEmpty.! !
!RestInterfaceTest methodsFor: 'tests - creating cart' stamp: 'JEA 11/30/2020 20:01:18' prior: 50876443!
test04canCreateMoreThanOneCartWithDifferentIDs
	| restInterface authenticatorSimulator cartID1 cartID2 |
	
	authenticatorSimulator := AuthenticatorSimulator newSimulatingValidAuthentication.
	
	restInterface := RestInterface 
		newWithAuthenticator: authenticatorSimulator 
		withCatalog: Dictionary new 
		withClock: Clock newSimulatingRealTime.
	
	cartID1 := restInterface 
				createCartFor: testObjectsFactory validClientID 
				password: testObjectsFactory correctPassword.

	cartID2 := restInterface 
				createCartFor: testObjectsFactory validClientID 
				password: testObjectsFactory correctPassword.
	
	self assert: cartID1 ~= cartID2.! !

!testRun: #RestInterfaceTest #test01cannotCreateCartForInvalidClientID stamp: 'JEA 11/30/2020 20:01:19'!
PASSED!

!testRun: #RestInterfaceTest #test02cannotCreateCartForClientWithWrongPassword stamp: 'JEA 11/30/2020 20:01:19'!
PASSED!

!testRun: #RestInterfaceTest #test03canCreateCartForWellAuthenticatedClient stamp: 'JEA 11/30/2020 20:01:19'!
PASSED!

!testRun: #RestInterfaceTest #test04canCreateMoreThanOneCartWithDifferentIDs stamp: 'JEA 11/30/2020 20:01:19'!
PASSED!
!RestInterfaceTest methodsFor: 'tests - adding to cart' stamp: 'JEA 11/30/2020 20:01:26' prior: 50876636!
test05cannotAddWhenCartIDIsInvalid
	| restInterface |

	restInterface := RestInterface 
		newWithAuthenticator: AuthenticatorSimulator newSimulatingValidAuthentication 
		withCatalog: testObjectsFactory defaultCatalog 
		withClock: Clock newSimulatingRealTime.
	
	self should: [ 
		restInterface 
			add: 1 
			of: testObjectsFactory itemSoldByTheStore 
			toCartWithID: testObjectsFactory invalidCartID. 
		]
		raise: Error
		withMessageText: RestInterface invalidCartIDMessage.! !
!RestInterfaceTest methodsFor: 'tests - adding to cart' stamp: 'JEA 11/30/2020 20:01:31' prior: 50876543!
test06canAddItemToCartWithValidID
	| restInterface cartID |

	restInterface := RestInterface 
		newWithAuthenticator: AuthenticatorSimulator newSimulatingValidAuthentication 
		withCatalog: testObjectsFactory defaultCatalog 
		withClock: Clock newSimulatingRealTime.
	
	cartID := restInterface 
		createCartFor: testObjectsFactory validClientID
		password: testObjectsFactory correctPassword.
	
	restInterface 
		add: 2 
		of: testObjectsFactory itemSoldByTheStore 
		toCartWithID: cartID.
	
	self assert: 2 
		equals: ((restInterface listItemsInCartWithID: cartID) occurrencesOf: testObjectsFactory itemSoldByTheStore).! !
!RestInterfaceTest methodsFor: 'tests - checking out cart' stamp: 'JEA 11/30/2020 20:01:36' prior: 50876566!
test08cantCheckOutCartWithInvalidCreditCardNumber
	| restInterface cartID |

	restInterface := RestInterface 
		newWithAuthenticator: AuthenticatorSimulator newSimulatingValidAuthentication 
		withCatalog: testObjectsFactory defaultCatalog 
		withClock: Clock newSimulatingRealTime.
		
	cartID := restInterface
		createCartFor: testObjectsFactory validClientID
		password: testObjectsFactory correctPassword.
	
	self should: [ 
		restInterface 
			checkOutCartWithID: cartID 
			withCardNumber: testObjectsFactory invalidCardNumber 
			expiring: testObjectsFactory expirationDateNotReached 
			owner: testObjectsFactory validCreditCardOwnersName. 
		]
		raise: Error
		withMessageText: RestInterface invalidCreditCardNumberMessage.! !
!RestInterfaceTest methodsFor: 'tests - checking out cart' stamp: 'JEA 11/30/2020 20:01:39' prior: 50876467!
test09canCheckOutNonEmptyValidCartWithValidCreditCard
	| restInterface cartID transactionID |

	restInterface := RestInterface 
		newWithAuthenticator: AuthenticatorSimulator newSimulatingValidAuthentication 
		withCatalog: testObjectsFactory defaultCatalog 
		withClock: Clock newSimulatingRealTime.
		
	cartID := restInterface
		createCartFor: testObjectsFactory validClientID
		password: testObjectsFactory correctPassword.
		
	restInterface 
		add: 1 
		of: testObjectsFactory itemSoldByTheStore 
		toCartWithID: cartID.
	
	transactionID := restInterface 
		checkOutCartWithID: cartID 
		withCardNumber: testObjectsFactory validCardNumber 
		expiring: testObjectsFactory expirationDateNotReached 
		owner: testObjectsFactory validCreditCardOwnersName.
	
	"self assert: testObjectsFactory itemSoldByTheStorePrice 
		equals: (restInterface moneyDebitedInTransactionWithID: transactionID)."! !

!testRun: #RestInterfaceTest #test01cannotCreateCartForInvalidClientID stamp: 'JEA 11/30/2020 20:01:54'!
PASSED!

!testRun: #RestInterfaceTest #test02cannotCreateCartForClientWithWrongPassword stamp: 'JEA 11/30/2020 20:01:54'!
PASSED!

!testRun: #RestInterfaceTest #test03canCreateCartForWellAuthenticatedClient stamp: 'JEA 11/30/2020 20:01:54'!
PASSED!

!testRun: #RestInterfaceTest #test04canCreateMoreThanOneCartWithDifferentIDs stamp: 'JEA 11/30/2020 20:01:54'!
PASSED!

!testRun: #RestInterfaceTest #test05cannotAddWhenCartIDIsInvalid stamp: 'JEA 11/30/2020 20:01:54'!
PASSED!

!testRun: #RestInterfaceTest #test06canAddItemToCartWithValidID stamp: 'JEA 11/30/2020 20:01:54'!
PASSED!

!testRun: #RestInterfaceTest #test07cantCheckOutCartWithInvalidID stamp: 'JEA 11/30/2020 20:01:54'!
PASSED!

!testRun: #RestInterfaceTest #test08cantCheckOutCartWithInvalidCreditCardNumber stamp: 'JEA 11/30/2020 20:01:54'!
PASSED!

!testRun: #RestInterfaceTest #test09canCheckOutNonEmptyValidCartWithValidCreditCard stamp: 'JEA 11/30/2020 20:01:54'!
PASSED!

!testRun: #RestInterfaceTest #test10cannotListCartWithInvalidID stamp: 'JEA 11/30/2020 20:01:54'!
PASSED!

!testRun: #RestInterfaceTest #test11cantAccessCartAfterTimeoutSinceCreated stamp: 'JEA 11/30/2020 20:01:54'!
FAILURE!

!testRun: #RestInterfaceTest #test11cantAccessCartAfterTimeoutSinceCreated stamp: 'JEA 11/30/2020 20:01:54'!
FAILURE!
!RestInterface methodsFor: 'api' stamp: 'JEA 11/30/2020 20:02:53' prior: 50872771!
createCartFor: aClientID password: aPassword
	| cartID |
	
	cartID := self nextCartID.
	
	self authenticate: aClientID with: aPassword.
	
	carts add: cartID -> (Cart acceptingItemsOf: catalog).
	
	^cartID.! !
!RestInterface methodsFor: 'api - private' stamp: 'JEA 11/30/2020 20:03:22'!
authenticate: aClientID with: aPassword.
	
	[ authenticator authenticate: aClientID password: aPassword. ]
		on: Error
		do: [ self error: self class authenticationFailedMessage. ].! !
!RestInterface methodsFor: 'initialization' stamp: 'JEA 11/30/2020 20:04:36' prior: 50875753!
initializeWithAuthenticator: anAuthenticator withCatalog: aCatalog 

	authenticator := anAuthenticator.
	lastCartID := 0.
	catalog := aCatalog.
	carts := Dictionary new.! !

Object subclass: #RestInterface
	instanceVariableNames: 'authenticator lastCartID carts catalog'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

!classDefinition: #RestInterface category: 'TusLibros' stamp: 'JEA 11/30/2020 20:04:42'!
Object subclass: #RestInterface
	instanceVariableNames: 'authenticator lastCartID carts catalog'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

!testRun: #RestInterfaceTest #test01cannotCreateCartForInvalidClientID stamp: 'JEA 11/30/2020 20:04:45'!
PASSED!

!testRun: #RestInterfaceTest #test02cannotCreateCartForClientWithWrongPassword stamp: 'JEA 11/30/2020 20:04:45'!
PASSED!

!testRun: #RestInterfaceTest #test03canCreateCartForWellAuthenticatedClient stamp: 'JEA 11/30/2020 20:04:45'!
PASSED!

!testRun: #RestInterfaceTest #test04canCreateMoreThanOneCartWithDifferentIDs stamp: 'JEA 11/30/2020 20:04:45'!
PASSED!

!testRun: #RestInterfaceTest #test05cannotAddWhenCartIDIsInvalid stamp: 'JEA 11/30/2020 20:04:45'!
PASSED!

!testRun: #RestInterfaceTest #test06canAddItemToCartWithValidID stamp: 'JEA 11/30/2020 20:04:45'!
PASSED!

!testRun: #RestInterfaceTest #test07cantCheckOutCartWithInvalidID stamp: 'JEA 11/30/2020 20:04:45'!
PASSED!

!testRun: #RestInterfaceTest #test08cantCheckOutCartWithInvalidCreditCardNumber stamp: 'JEA 11/30/2020 20:04:45'!
PASSED!

!testRun: #RestInterfaceTest #test09canCheckOutNonEmptyValidCartWithValidCreditCard stamp: 'JEA 11/30/2020 20:04:45'!
PASSED!

!testRun: #RestInterfaceTest #test10cannotListCartWithInvalidID stamp: 'JEA 11/30/2020 20:04:45'!
PASSED!

!testRun: #RestInterfaceTest #test11cantAccessCartAfterTimeoutSinceCreated stamp: 'JEA 11/30/2020 20:04:45'!
FAILURE!

!testRun: #RestInterfaceTest #test11cantAccessCartAfterTimeoutSinceCreated stamp: 'JEA 11/30/2020 20:04:45'!
FAILURE!
!RestInterface methodsFor: 'api' stamp: 'JEA 11/30/2020 20:04:50' prior: 50875777!
checkOutCartWithID: aCartID withCardNumber: aCardNumber expiring: aGregorianMonthOfYear owner: aName

	self ensureCartIDIsValid: aCartID.
	self ensureCardNumberIsValid: aCardNumber.
	
	! !
!RestInterface methodsFor: 'api' stamp: 'JEA 11/30/2020 20:12:20' prior: 50877060!
checkOutCartWithID: aCartID withCardNumber: aCardNumber expiring: aGregorianMonthOfYear owner: aName

	self ensureCartIDIsValid: aCartID.
	self ensureCardNumberIsValid: aCardNumber.
	
	self error: self cartTimedOutMessage.! !

!testRun: #RestInterfaceTest #test01cannotCreateCartForInvalidClientID stamp: 'JEA 11/30/2020 20:12:21'!
PASSED!

!testRun: #RestInterfaceTest #test02cannotCreateCartForClientWithWrongPassword stamp: 'JEA 11/30/2020 20:12:21'!
PASSED!

!testRun: #RestInterfaceTest #test03canCreateCartForWellAuthenticatedClient stamp: 'JEA 11/30/2020 20:12:21'!
PASSED!

!testRun: #RestInterfaceTest #test04canCreateMoreThanOneCartWithDifferentIDs stamp: 'JEA 11/30/2020 20:12:21'!
PASSED!

!testRun: #RestInterfaceTest #test05cannotAddWhenCartIDIsInvalid stamp: 'JEA 11/30/2020 20:12:21'!
PASSED!

!testRun: #RestInterfaceTest #test06canAddItemToCartWithValidID stamp: 'JEA 11/30/2020 20:12:21'!
PASSED!

!testRun: #RestInterfaceTest #test07cantCheckOutCartWithInvalidID stamp: 'JEA 11/30/2020 20:12:21'!
PASSED!

!testRun: #RestInterfaceTest #test08cantCheckOutCartWithInvalidCreditCardNumber stamp: 'JEA 11/30/2020 20:12:21'!
PASSED!

!testRun: #RestInterfaceTest #test09canCheckOutNonEmptyValidCartWithValidCreditCard stamp: 'JEA 11/30/2020 20:12:21'!
ERROR!

!testRun: #RestInterfaceTest #test10cannotListCartWithInvalidID stamp: 'JEA 11/30/2020 20:12:21'!
PASSED!

!testRun: #RestInterfaceTest #test11cantAccessCartAfterTimeoutSinceCreated stamp: 'JEA 11/30/2020 20:12:21'!
FAILURE!

!testRun: #RestInterfaceTest #test11cantAccessCartAfterTimeoutSinceCreated stamp: 'JEA 11/30/2020 20:12:30'!
FAILURE!

!testRun: #RestInterfaceTest #test01cannotCreateCartForInvalidClientID stamp: 'JEA 11/30/2020 20:24:56'!
PASSED!

!testRun: #RestInterfaceTest #test02cannotCreateCartForClientWithWrongPassword stamp: 'JEA 11/30/2020 20:24:56'!
PASSED!

!testRun: #RestInterfaceTest #test03canCreateCartForWellAuthenticatedClient stamp: 'JEA 11/30/2020 20:24:56'!
PASSED!

!testRun: #RestInterfaceTest #test04canCreateMoreThanOneCartWithDifferentIDs stamp: 'JEA 11/30/2020 20:24:56'!
PASSED!

!testRun: #RestInterfaceTest #test05cannotAddWhenCartIDIsInvalid stamp: 'JEA 11/30/2020 20:24:56'!
PASSED!

!testRun: #RestInterfaceTest #test06canAddItemToCartWithValidID stamp: 'JEA 11/30/2020 20:24:56'!
PASSED!

!testRun: #RestInterfaceTest #test07cantCheckOutCartWithInvalidID stamp: 'JEA 11/30/2020 20:24:56'!
PASSED!

!testRun: #RestInterfaceTest #test08cantCheckOutCartWithInvalidCreditCardNumber stamp: 'JEA 11/30/2020 20:24:56'!
PASSED!

!testRun: #RestInterfaceTest #test09canCheckOutNonEmptyValidCartWithValidCreditCard stamp: 'JEA 11/30/2020 20:24:56'!
ERROR!

!testRun: #RestInterfaceTest #test10cannotListCartWithInvalidID stamp: 'JEA 11/30/2020 20:24:56'!
PASSED!

!testRun: #RestInterfaceTest #test11cantAccessCartAfterTimeoutSinceCreated stamp: 'JEA 11/30/2020 20:24:56'!
FAILURE!

!testRun: #RestInterfaceTest #test11cantAccessCartAfterTimeoutSinceCreated stamp: 'JEA 11/30/2020 20:25:01'!
FAILURE!
!RestInterface methodsFor: 'api' stamp: 'JEA 11/30/2020 20:25:22' prior: 50877069!
checkOutCartWithID: aCartID withCardNumber: aCardNumber expiring: aGregorianMonthOfYear owner: aName

	self ensureCartIDIsValid: aCartID.
	self ensureCardNumberIsValid: aCardNumber.! !
!RestInterface methodsFor: 'api' stamp: 'JEA 11/30/2020 20:26:45' prior: 50875458!
add: aQuantity of: anISBN toCartWithID: aCartID

	self ensureCartIDIsValid: aCartID.

	(carts at: aCartID)
		add: aQuantity of: anISBN.! !

Object subclass: #RestInterface
	instanceVariableNames: 'authenticator lastCartID carts cartExpirations catalog'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

!classDefinition: #RestInterface category: 'TusLibros' stamp: 'JEA 11/30/2020 20:41:58'!
Object subclass: #RestInterface
	instanceVariableNames: 'authenticator lastCartID carts cartExpirations catalog'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!
!RestInterface methodsFor: 'initialization' stamp: 'JEA 11/30/2020 20:42:13' prior: 50876995!
initializeWithAuthenticator: anAuthenticator withCatalog: aCatalog 

	authenticator := anAuthenticator.
	lastCartID := 0.
	catalog := aCatalog.
	carts := Dictionary new.
	cartExpirations := Dictionary new.! !
!RestInterface methodsFor: 'api' stamp: 'JEA 11/30/2020 20:45:47' prior: 50877175!
add: aQuantity of: anISBN toCartWithID: aCartID

	self ensureCartIDIsValid: aCartID.

	cartExpirations at: aCartID put: Clock now.

	(carts at: aCartID)
		add: aQuantity of: anISBN.! !
!RestInterface methodsFor: 'api' stamp: 'JEA 11/30/2020 20:46:33' prior: 50877207!
add: aQuantity of: anISBN toCartWithID: aCartID

	self ensureCartIDIsValid: aCartID.

	self resetTimerOfCartWithID: aCartID.

	(carts at: aCartID)
		add: aQuantity of: anISBN.! !
!RestInterface methodsFor: 'api - private' stamp: 'JEA 11/30/2020 20:46:40'!
resetTimerOfCartWithID: aCartID

	cartExpirations at: aCartID put: Clock now.! !
!RestInterface methodsFor: 'api' stamp: 'JEA 11/30/2020 20:46:59' prior: 50877166!
checkOutCartWithID: aCartID withCardNumber: aCardNumber expiring: aGregorianMonthOfYear owner: aName

	self ensureCartIDIsValid: aCartID.
	self ensureCardNumberIsValid: aCardNumber.
	
	self resetTimerOfCartWithID: aCartID.! !
!RestInterface methodsFor: 'api' stamp: 'JEA 11/30/2020 20:47:30' prior: 50876977!
createCartFor: aClientID password: aPassword
	| cartID |
	
	self authenticate: aClientID with: aPassword.

	cartID := self nextCartID.

	self resetTimerOfCartWithID: cartID.	
	
	carts add: cartID -> (Cart acceptingItemsOf: catalog).
	
	^cartID.! !
!RestInterface methodsFor: 'api' stamp: 'JEA 11/30/2020 20:47:39' prior: 50877240!
createCartFor: aClientID password: aPassword
	| cartID |
	
	self authenticate: aClientID with: aPassword.

	cartID := self nextCartID.
	self resetTimerOfCartWithID: cartID.	
	carts add: cartID -> (Cart acceptingItemsOf: catalog).
	
	^cartID.! !
!RestInterface methodsFor: 'api' stamp: 'JEA 11/30/2020 20:47:51' prior: 50875046!
listItemsInCartWithID: aCartID

	self resetTimerOfCartWithID: aCartID.	
	^(carts at: aCartID) listItems.! !
!RestInterface methodsFor: 'api' stamp: 'JEA 11/30/2020 20:47:55' prior: 50877262!
listItemsInCartWithID: aCartID

	self resetTimerOfCartWithID: aCartID.	

	^(carts at: aCartID) listItems.! !
!RestInterface methodsFor: 'api - private' stamp: 'JEA 11/30/2020 20:49:33'!
ensureCartIDIsValidAndNotTimedOut: aCartID

	carts at: aCartID 
		ifAbsent: [ self error: self class invalidCartIDMessage. ].! !
!RestInterface methodsFor: 'as yet unclassified' stamp: 'JEA 11/30/2020 20:49:33' prior: 50877230!
checkOutCartWithID: aCartID withCardNumber: aCardNumber expiring: aGregorianMonthOfYear owner: aName

	self ensureCartIDIsValidAndNotTimedOut: aCartID.
	self ensureCardNumberIsValid: aCardNumber.
	
	self resetTimerOfCartWithID: aCartID.! !
!RestInterface methodsFor: 'as yet unclassified' stamp: 'JEA 11/30/2020 20:49:33' prior: 50877216!
add: aQuantity of: anISBN toCartWithID: aCartID

	self ensureCartIDIsValidAndNotTimedOut: aCartID.

	self resetTimerOfCartWithID: aCartID.

	(carts at: aCartID)
		add: aQuantity of: anISBN.! !

!methodRemoval: RestInterface #ensureCartIDIsValid: stamp: 'JEA 11/30/2020 20:49:33'!
ensureCartIDIsValid: aCartID

	carts at: aCartID 
		ifAbsent: [ self error: self class invalidCartIDMessage. ].!
!RestInterface methodsFor: 'api - private' stamp: 'JEA 11/30/2020 20:50:24' prior: 50877274!
ensureCartIDIsValidAndNotTimedOut: aCartID

	carts at: aCartID 
		ifAbsent: [ self error: self class invalidCartIDMessage. ].
	
	cartExpirations at: aCartID.! !

!classDefinition: #RestInterface category: 'TusLibros' stamp: 'JEA 11/30/2020 20:50:43'!
Object subclass: #RestInterface
	instanceVariableNames: 'authenticator lastCartID carts lastInteractionForCart catalog'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!
!RestInterface methodsFor: 'as yet unclassified' stamp: 'JEA 11/30/2020 20:50:43' prior: 50877309!
ensureCartIDIsValidAndNotTimedOut: aCartID

	carts at: aCartID 
		ifAbsent: [ self error: self class invalidCartIDMessage. ].
	
	lastInteractionForCart at: aCartID.! !
!RestInterface methodsFor: 'as yet unclassified' stamp: 'JEA 11/30/2020 20:50:43' prior: 50877224!
resetTimerOfCartWithID: aCartID

	lastInteractionForCart at: aCartID put: Clock now.! !
!RestInterface methodsFor: 'as yet unclassified' stamp: 'JEA 11/30/2020 20:50:43' prior: 50877197!
initializeWithAuthenticator: anAuthenticator withCatalog: aCatalog 

	authenticator := anAuthenticator.
	lastCartID := 0.
	catalog := aCatalog.
	carts := Dictionary new.
	lastInteractionForCart := Dictionary new.! !
!RestInterface class methodsFor: 'instance creation' stamp: 'JEA 11/30/2020 20:54:53' prior: 50876434!
newWithAuthenticator: anAuthenticator withCatalog: aCatalog withClock: aClock  

	^self new initializeWithAuthenticator: anAuthenticator withCatalog: aCatalog withClock: aClock.! !
!RestInterface methodsFor: 'initialization' stamp: 'JEA 11/30/2020 20:55:11'!
initializeWithAuthenticator: anAuthenticator withCatalog: aCatalog withClock: aClock

	authenticator := anAuthenticator.
	lastCartID := 0.
	catalog := aCatalog.
	carts := Dictionary new.
	lastInteractionForCart := Dictionary new.! !

!methodRemoval: RestInterface #initializeWithAuthenticator:withCatalog: stamp: 'JEA 11/30/2020 20:55:12'!
initializeWithAuthenticator: anAuthenticator withCatalog: aCatalog 

	authenticator := anAuthenticator.
	lastCartID := 0.
	catalog := aCatalog.
	carts := Dictionary new.
	lastInteractionForCart := Dictionary new.!

!classDefinition: #RestInterface category: 'TusLibros' stamp: 'JEA 11/30/2020 20:55:23'!
Object subclass: #RestInterface
	instanceVariableNames: 'authenticator lastCartID carts lastInteractionForCart catalog clock'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!
!RestInterface methodsFor: 'initialization' stamp: 'JEA 11/30/2020 20:55:21' prior: 50877360!
initializeWithAuthenticator: anAuthenticator withCatalog: aCatalog withClock: aClock

	authenticator := anAuthenticator.
	lastCartID := 0.
	catalog := aCatalog.
	clock := aClock.
	carts := Dictionary new.
	lastInteractionForCart := Dictionary new.! !
!RestInterface methodsFor: 'api - private' stamp: 'JEA 11/30/2020 20:58:17' prior: 50877326!
ensureCartIDIsValidAndNotTimedOut: aCartID

	carts at: aCartID 
		ifAbsent: [ self error: self class invalidCartIDMessage. ].
	
	((lastInteractionForCart at: aCartID) next: 30 * minute > clock now) 
		ifTrue: [ self error: self class cartTimedOutMessage. ].! !

!testRun: #RestInterfaceTest #test01cannotCreateCartForInvalidClientID stamp: 'JEA 11/30/2020 20:58:19'!
PASSED!

!testRun: #RestInterfaceTest #test02cannotCreateCartForClientWithWrongPassword stamp: 'JEA 11/30/2020 20:58:19'!
PASSED!

!testRun: #RestInterfaceTest #test03canCreateCartForWellAuthenticatedClient stamp: 'JEA 11/30/2020 20:58:19'!
ERROR!

!testRun: #RestInterfaceTest #test04canCreateMoreThanOneCartWithDifferentIDs stamp: 'JEA 11/30/2020 20:58:19'!
ERROR!

!testRun: #RestInterfaceTest #test05cannotAddWhenCartIDIsInvalid stamp: 'JEA 11/30/2020 20:58:19'!
PASSED!

!testRun: #RestInterfaceTest #test06canAddItemToCartWithValidID stamp: 'JEA 11/30/2020 20:58:19'!
ERROR!

!testRun: #RestInterfaceTest #test07cantCheckOutCartWithInvalidID stamp: 'JEA 11/30/2020 20:58:19'!
PASSED!

!testRun: #RestInterfaceTest #test08cantCheckOutCartWithInvalidCreditCardNumber stamp: 'JEA 11/30/2020 20:58:19'!
ERROR!

!testRun: #RestInterfaceTest #test09canCheckOutNonEmptyValidCartWithValidCreditCard stamp: 'JEA 11/30/2020 20:58:19'!
ERROR!

!testRun: #RestInterfaceTest #test10cannotListCartWithInvalidID stamp: 'JEA 11/30/2020 20:58:19'!
PASSED!

!testRun: #RestInterfaceTest #test11cantAccessCartAfterTimeoutSinceCreated stamp: 'JEA 11/30/2020 20:58:19'!
ERROR!
!RestInterface methodsFor: 'api - private' stamp: 'JEA 11/30/2020 20:58:27' prior: 50877401!
ensureCartIDIsValidAndNotTimedOut: aCartID

	carts at: aCartID 
		ifAbsent: [ self error: self class invalidCartIDMessage. ].
	
	((lastInteractionForCart at: aCartID) next: 30 * minute <= clock now) 
		ifTrue: [ self error: self class cartTimedOutMessage. ].! !

!testRun: #RestInterfaceTest #test01cannotCreateCartForInvalidClientID stamp: 'JEA 11/30/2020 20:58:30'!
PASSED!

!testRun: #RestInterfaceTest #test02cannotCreateCartForClientWithWrongPassword stamp: 'JEA 11/30/2020 20:58:30'!
PASSED!

!testRun: #RestInterfaceTest #test03canCreateCartForWellAuthenticatedClient stamp: 'JEA 11/30/2020 20:58:30'!
ERROR!

!testRun: #RestInterfaceTest #test04canCreateMoreThanOneCartWithDifferentIDs stamp: 'JEA 11/30/2020 20:58:30'!
ERROR!

!testRun: #RestInterfaceTest #test05cannotAddWhenCartIDIsInvalid stamp: 'JEA 11/30/2020 20:58:30'!
PASSED!

!testRun: #RestInterfaceTest #test06canAddItemToCartWithValidID stamp: 'JEA 11/30/2020 20:58:30'!
ERROR!

!testRun: #RestInterfaceTest #test07cantCheckOutCartWithInvalidID stamp: 'JEA 11/30/2020 20:58:30'!
PASSED!

!testRun: #RestInterfaceTest #test08cantCheckOutCartWithInvalidCreditCardNumber stamp: 'JEA 11/30/2020 20:58:30'!
ERROR!

!testRun: #RestInterfaceTest #test09canCheckOutNonEmptyValidCartWithValidCreditCard stamp: 'JEA 11/30/2020 20:58:30'!
ERROR!

!testRun: #RestInterfaceTest #test10cannotListCartWithInvalidID stamp: 'JEA 11/30/2020 20:58:30'!
PASSED!

!testRun: #RestInterfaceTest #test11cantAccessCartAfterTimeoutSinceCreated stamp: 'JEA 11/30/2020 20:58:30'!
ERROR!

!testRun: #RestInterfaceTest #test01cannotCreateCartForInvalidClientID stamp: 'JEA 11/30/2020 20:59:34'!
PASSED!

!testRun: #RestInterfaceTest #test02cannotCreateCartForClientWithWrongPassword stamp: 'JEA 11/30/2020 20:59:34'!
PASSED!

!testRun: #RestInterfaceTest #test03canCreateCartForWellAuthenticatedClient stamp: 'JEA 11/30/2020 20:59:34'!
ERROR!

!testRun: #RestInterfaceTest #test04canCreateMoreThanOneCartWithDifferentIDs stamp: 'JEA 11/30/2020 20:59:34'!
ERROR!

!testRun: #RestInterfaceTest #test05cannotAddWhenCartIDIsInvalid stamp: 'JEA 11/30/2020 20:59:34'!
PASSED!

!testRun: #RestInterfaceTest #test06canAddItemToCartWithValidID stamp: 'JEA 11/30/2020 20:59:34'!
ERROR!

!testRun: #RestInterfaceTest #test07cantCheckOutCartWithInvalidID stamp: 'JEA 11/30/2020 20:59:34'!
PASSED!

!testRun: #RestInterfaceTest #test08cantCheckOutCartWithInvalidCreditCardNumber stamp: 'JEA 11/30/2020 20:59:34'!
ERROR!

!testRun: #RestInterfaceTest #test09canCheckOutNonEmptyValidCartWithValidCreditCard stamp: 'JEA 11/30/2020 20:59:34'!
ERROR!

!testRun: #RestInterfaceTest #test10cannotListCartWithInvalidID stamp: 'JEA 11/30/2020 20:59:34'!
PASSED!

!testRun: #RestInterfaceTest #test11cantAccessCartAfterTimeoutSinceCreated stamp: 'JEA 11/30/2020 20:59:34'!
ERROR!

!testRun: #RestInterfaceTest #test03canCreateCartForWellAuthenticatedClient stamp: 'JEA 11/30/2020 20:59:36'!
ERROR!
!RestInterface methodsFor: 'api - private' stamp: 'JEA 11/30/2020 20:59:55' prior: 50877335!
resetTimerOfCartWithID: aCartID

	lastInteractionForCart at: aCartID put: clock now.! !

!testRun: #RestInterfaceTest #test01cannotCreateCartForInvalidClientID stamp: 'JEA 11/30/2020 20:59:55'!
PASSED!

!testRun: #RestInterfaceTest #test02cannotCreateCartForClientWithWrongPassword stamp: 'JEA 11/30/2020 20:59:55'!
PASSED!

!testRun: #RestInterfaceTest #test03canCreateCartForWellAuthenticatedClient stamp: 'JEA 11/30/2020 20:59:55'!
PASSED!

!testRun: #RestInterfaceTest #test04canCreateMoreThanOneCartWithDifferentIDs stamp: 'JEA 11/30/2020 20:59:55'!
PASSED!

!testRun: #RestInterfaceTest #test05cannotAddWhenCartIDIsInvalid stamp: 'JEA 11/30/2020 20:59:55'!
PASSED!

!testRun: #RestInterfaceTest #test06canAddItemToCartWithValidID stamp: 'JEA 11/30/2020 20:59:55'!
ERROR!

!testRun: #RestInterfaceTest #test07cantCheckOutCartWithInvalidID stamp: 'JEA 11/30/2020 20:59:55'!
PASSED!

!testRun: #RestInterfaceTest #test08cantCheckOutCartWithInvalidCreditCardNumber stamp: 'JEA 11/30/2020 20:59:55'!
FAILURE!

!testRun: #RestInterfaceTest #test09canCheckOutNonEmptyValidCartWithValidCreditCard stamp: 'JEA 11/30/2020 20:59:55'!
ERROR!

!testRun: #RestInterfaceTest #test10cannotListCartWithInvalidID stamp: 'JEA 11/30/2020 20:59:55'!
PASSED!

!testRun: #RestInterfaceTest #test11cantAccessCartAfterTimeoutSinceCreated stamp: 'JEA 11/30/2020 20:59:55'!
FAILURE!

!testRun: #RestInterfaceTest #test06canAddItemToCartWithValidID stamp: 'JEA 11/30/2020 20:59:57'!
ERROR!

!testRun: #RestInterfaceTest #test06canAddItemToCartWithValidID stamp: 'JEA 11/30/2020 21:00:05'!
ERROR!
!RestInterface methodsFor: 'api - private' stamp: 'JEA 11/30/2020 21:00:21' prior: 50877452!
ensureCartIDIsValidAndNotTimedOut: aCartID

	carts at: aCartID 
		ifAbsent: [ self error: self class invalidCartIDMessage. ].
	
	(((lastInteractionForCart at: aCartID) next: 30 * minute) <= clock now) 
		ifTrue: [ self error: self class cartTimedOutMessage. ].! !

!testRun: #RestInterfaceTest #test01cannotCreateCartForInvalidClientID stamp: 'JEA 11/30/2020 21:00:22'!
PASSED!

!testRun: #RestInterfaceTest #test02cannotCreateCartForClientWithWrongPassword stamp: 'JEA 11/30/2020 21:00:22'!
PASSED!

!testRun: #RestInterfaceTest #test03canCreateCartForWellAuthenticatedClient stamp: 'JEA 11/30/2020 21:00:22'!
PASSED!

!testRun: #RestInterfaceTest #test04canCreateMoreThanOneCartWithDifferentIDs stamp: 'JEA 11/30/2020 21:00:22'!
PASSED!

!testRun: #RestInterfaceTest #test05cannotAddWhenCartIDIsInvalid stamp: 'JEA 11/30/2020 21:00:22'!
PASSED!

!testRun: #RestInterfaceTest #test06canAddItemToCartWithValidID stamp: 'JEA 11/30/2020 21:00:22'!
PASSED!

!testRun: #RestInterfaceTest #test07cantCheckOutCartWithInvalidID stamp: 'JEA 11/30/2020 21:00:22'!
PASSED!

!testRun: #RestInterfaceTest #test08cantCheckOutCartWithInvalidCreditCardNumber stamp: 'JEA 11/30/2020 21:00:22'!
PASSED!

!testRun: #RestInterfaceTest #test09canCheckOutNonEmptyValidCartWithValidCreditCard stamp: 'JEA 11/30/2020 21:00:22'!
PASSED!

!testRun: #RestInterfaceTest #test10cannotListCartWithInvalidID stamp: 'JEA 11/30/2020 21:00:22'!
PASSED!

!testRun: #RestInterfaceTest #test11cantAccessCartAfterTimeoutSinceCreated stamp: 'JEA 11/30/2020 21:00:22'!
FAILURE!

!testRun: #RestInterfaceTest #test11cantAccessCartAfterTimeoutSinceCreated stamp: 'JEA 11/30/2020 21:00:22'!
FAILURE!
!RestInterface methodsFor: 'api - private' stamp: 'JEA 11/30/2020 21:01:11'!
ensureCartIDNotTimedOut: aCartID
	
	(((lastInteractionForCart at: aCartID) next: 30 * minute) <= clock now) 
		ifTrue: [ self error: self class cartTimedOutMessage. ].! !

!methodRemoval: RestInterface #ensureCartIDIsValidAndNotTimedOut: stamp: 'JEA 11/30/2020 21:01:14'!
ensureCartIDIsValidAndNotTimedOut: aCartID

	carts at: aCartID 
		ifAbsent: [ self error: self class invalidCartIDMessage. ].
	
	(((lastInteractionForCart at: aCartID) next: 30 * minute) <= clock now) 
		ifTrue: [ self error: self class cartTimedOutMessage. ].!
!RestInterface methodsFor: 'api - private' stamp: 'JEA 11/30/2020 21:02:01'!
ensureCartIDIsNotTimedOut: aCartID
	
	(((lastInteractionForCart at: aCartID) next: 30 * minute) <= clock now) 
		ifTrue: [ self error: self class cartTimedOutMessage. ].! !

!methodRemoval: RestInterface #ensureCartIDNotTimedOut: stamp: 'JEA 11/30/2020 21:02:03'!
ensureCartIDNotTimedOut: aCartID
	
	(((lastInteractionForCart at: aCartID) next: 30 * minute) <= clock now) 
		ifTrue: [ self error: self class cartTimedOutMessage. ].!
!RestInterface methodsFor: 'api - private' stamp: 'JEA 11/30/2020 21:02:31'!
ensureCartIDIsValid: aCartID
	
	carts at: aCartID 
		ifAbsent: [ self error: self class invalidCartIDMessage. ].! !
!RestInterface methodsFor: 'api' stamp: 'JEA 11/30/2020 21:02:58' prior: 50877282!
checkOutCartWithID: aCartID withCardNumber: aCardNumber expiring: aGregorianMonthOfYear owner: aName

	self ensureCartIDIsValid: aCartID.
	self ensureCartIDIsNotTimedOut: aCardNumber.
	
	self resetTimerOfCartWithID: aCartID.! !
!RestInterface methodsFor: 'api - private' stamp: 'JEA 11/30/2020 21:03:30'!
ensureCartIDCanBeInteractedWith: aCartID
	
	self ensureCartIDIsValid: aCartID.
	self ensureCartIDIsNotTimedOut: aCartID.! !
!RestInterface methodsFor: 'api' stamp: 'JEA 11/30/2020 21:03:53' prior: 50877698!
checkOutCartWithID: aCartID withCardNumber: aCardNumber expiring: aGregorianMonthOfYear owner: aName

	self ensureCartIDCanBeInteractedWith: aCartID.
	self ensureCardNumberIsValid: aCardNumber.
	
	self resetTimerOfCartWithID: aCartID.! !
!RestInterface methodsFor: 'api' stamp: 'JEA 11/30/2020 21:05:06' prior: 50877293!
add: aQuantity of: anISBN toCartWithID: aCartID

	self ensureCartIDCanBeInteractedWith: aCartID.

	self resetTimerOfCartWithID: aCartID.

	(carts at: aCartID)
		add: aQuantity of: anISBN.! !
!RestInterface methodsFor: 'api' stamp: 'JEA 11/30/2020 21:05:32' prior: 50877268!
listItemsInCartWithID: aCartID
	
	self ensureCartIDIsNotTimedOut: aCartID.

	self resetTimerOfCartWithID: aCartID.	

	^(carts at: aCartID) listItems.! !

!testRun: #RestInterfaceTest #test01cannotCreateCartForInvalidClientID stamp: 'JEA 11/30/2020 21:05:34'!
PASSED!

!testRun: #RestInterfaceTest #test02cannotCreateCartForClientWithWrongPassword stamp: 'JEA 11/30/2020 21:05:34'!
PASSED!

!testRun: #RestInterfaceTest #test03canCreateCartForWellAuthenticatedClient stamp: 'JEA 11/30/2020 21:05:34'!
PASSED!

!testRun: #RestInterfaceTest #test04canCreateMoreThanOneCartWithDifferentIDs stamp: 'JEA 11/30/2020 21:05:34'!
PASSED!

!testRun: #RestInterfaceTest #test05cannotAddWhenCartIDIsInvalid stamp: 'JEA 11/30/2020 21:05:34'!
PASSED!

!testRun: #RestInterfaceTest #test06canAddItemToCartWithValidID stamp: 'JEA 11/30/2020 21:05:34'!
PASSED!

!testRun: #RestInterfaceTest #test07cantCheckOutCartWithInvalidID stamp: 'JEA 11/30/2020 21:05:34'!
PASSED!

!testRun: #RestInterfaceTest #test08cantCheckOutCartWithInvalidCreditCardNumber stamp: 'JEA 11/30/2020 21:05:34'!
PASSED!

!testRun: #RestInterfaceTest #test09canCheckOutNonEmptyValidCartWithValidCreditCard stamp: 'JEA 11/30/2020 21:05:34'!
PASSED!

!testRun: #RestInterfaceTest #test10cannotListCartWithInvalidID stamp: 'JEA 11/30/2020 21:05:34'!
PASSED!

!testRun: #RestInterfaceTest #test11cantAccessCartAfterTimeoutSinceCreated stamp: 'JEA 11/30/2020 21:05:34'!
PASSED!
!RestInterfaceTest methodsFor: 'tests - adding to cart' stamp: 'JEA 11/30/2020 21:06:04'!
test05cannotAddToCartWithInvalidID
	| restInterface |

	restInterface := RestInterface 
		newWithAuthenticator: AuthenticatorSimulator newSimulatingValidAuthentication 
		withCatalog: testObjectsFactory defaultCatalog 
		withClock: Clock newSimulatingRealTime.
	
	self should: [ 
		restInterface 
			add: 1 
			of: testObjectsFactory itemSoldByTheStore 
			toCartWithID: testObjectsFactory invalidCartID. 
		]
		raise: Error
		withMessageText: RestInterface invalidCartIDMessage.! !

!methodRemoval: RestInterfaceTest #test05cannotAddWhenCartIDIsInvalid stamp: 'JEA 11/30/2020 21:06:04'!
test05cannotAddWhenCartIDIsInvalid
	| restInterface |

	restInterface := RestInterface 
		newWithAuthenticator: AuthenticatorSimulator newSimulatingValidAuthentication 
		withCatalog: testObjectsFactory defaultCatalog 
		withClock: Clock newSimulatingRealTime.
	
	self should: [ 
		restInterface 
			add: 1 
			of: testObjectsFactory itemSoldByTheStore 
			toCartWithID: testObjectsFactory invalidCartID. 
		]
		raise: Error
		withMessageText: RestInterface invalidCartIDMessage.!
!RestInterfaceTest methodsFor: 'tests - listing cart' stamp: 'JEA 11/30/2020 21:07:03' prior: 50875939!
test10cannotListCartWithInvalidID
	| restInterface |

	restInterface := RestInterface 
		newWithAuthenticator: AuthenticatorSimulator newSimulatingValidAuthentication 
		withCatalog: testObjectsFactory defaultCatalog 
		withClock: Clock newSimulatingRealTime.
	
	self should: [ restInterface listItemsInCartWithID: testObjectsFactory invalidCartID. ]
		raise: Error
		withMessageText: RestInterface invalidCartIDMessage.! !

!testRun: #RestInterfaceTest #test01cannotCreateCartForInvalidClientID stamp: 'JEA 11/30/2020 21:07:07'!
PASSED!

!testRun: #RestInterfaceTest #test02cannotCreateCartForClientWithWrongPassword stamp: 'JEA 11/30/2020 21:07:07'!
PASSED!

!testRun: #RestInterfaceTest #test03canCreateCartForWellAuthenticatedClient stamp: 'JEA 11/30/2020 21:07:07'!
PASSED!

!testRun: #RestInterfaceTest #test04canCreateMoreThanOneCartWithDifferentIDs stamp: 'JEA 11/30/2020 21:07:07'!
PASSED!

!testRun: #RestInterfaceTest #test05cannotAddToCartWithInvalidID stamp: 'JEA 11/30/2020 21:07:07'!
PASSED!

!testRun: #RestInterfaceTest #test06canAddItemToCartWithValidID stamp: 'JEA 11/30/2020 21:07:07'!
PASSED!

!testRun: #RestInterfaceTest #test07cantCheckOutCartWithInvalidID stamp: 'JEA 11/30/2020 21:07:07'!
PASSED!

!testRun: #RestInterfaceTest #test08cantCheckOutCartWithInvalidCreditCardNumber stamp: 'JEA 11/30/2020 21:07:07'!
PASSED!

!testRun: #RestInterfaceTest #test09canCheckOutNonEmptyValidCartWithValidCreditCard stamp: 'JEA 11/30/2020 21:07:07'!
PASSED!

!testRun: #RestInterfaceTest #test10cannotListCartWithInvalidID stamp: 'JEA 11/30/2020 21:07:07'!
FAILURE!

!testRun: #RestInterfaceTest #test11cantAccessCartAfterTimeoutSinceCreated stamp: 'JEA 11/30/2020 21:07:07'!
PASSED!

!testRun: #RestInterfaceTest #test10cannotListCartWithInvalidID stamp: 'JEA 11/30/2020 21:07:07'!
FAILURE!
!RestInterfaceTest methodsFor: 'tests - cart timeout' stamp: 'JEA 11/30/2020 21:07:29' prior: 50876396!
test11cantAccessCartAfterTimeoutSinceCreated
	| restInterface cartID clock |

	clock := Clock newSimulatingRealTime.

	restInterface := RestInterface 
		newWithAuthenticator: AuthenticatorSimulator newSimulatingValidAuthentication 
		withCatalog: testObjectsFactory defaultCatalog
		withClock: clock.
	
	cartID := restInterface 
		createCartFor: testObjectsFactory validClientID
		password: testObjectsFactory correctPassword.
	
	clock simulateAdvancing: 30 * minute.
	
	self should: [ 
		restInterface 
			add: 2 
			of: testObjectsFactory itemSoldByTheStore 
			toCartWithID: cartID. 
		]
		raise: Error
		withMessageText: RestInterface cartTimedOutMessage.
	
	self should: [ restInterface listItemsInCartWithID: cartID. ]
		raise: Error
		withMessageText: RestInterface cartTimedOutMessage.
	
	self should: [ 
		restInterface 
			checkOutCartWithID: cartID 
			withCardNumber: testObjectsFactory validCardNumber 
			expiring: testObjectsFactory expirationDateNotReached 
			owner: testObjectsFactory validClientID.
		]
		raise: Error
		withMessageText: RestInterface cartTimedOutMessage.! !
!RestInterface methodsFor: 'api' stamp: 'JEA 11/30/2020 21:07:47' prior: 50877735!
listItemsInCartWithID: aCartID
	
	self ensureCartIDCanBeInteractedWith: aCartID.

	self resetTimerOfCartWithID: aCartID.	

	^(carts at: aCartID) listItems.! !

!testRun: #RestInterfaceTest #test01cannotCreateCartForInvalidClientID stamp: 'JEA 11/30/2020 21:07:48'!
PASSED!

!testRun: #RestInterfaceTest #test02cannotCreateCartForClientWithWrongPassword stamp: 'JEA 11/30/2020 21:07:48'!
PASSED!

!testRun: #RestInterfaceTest #test03canCreateCartForWellAuthenticatedClient stamp: 'JEA 11/30/2020 21:07:48'!
PASSED!

!testRun: #RestInterfaceTest #test04canCreateMoreThanOneCartWithDifferentIDs stamp: 'JEA 11/30/2020 21:07:48'!
PASSED!

!testRun: #RestInterfaceTest #test05cannotAddToCartWithInvalidID stamp: 'JEA 11/30/2020 21:07:48'!
PASSED!

!testRun: #RestInterfaceTest #test06canAddItemToCartWithValidID stamp: 'JEA 11/30/2020 21:07:48'!
PASSED!

!testRun: #RestInterfaceTest #test07cantCheckOutCartWithInvalidID stamp: 'JEA 11/30/2020 21:07:48'!
PASSED!

!testRun: #RestInterfaceTest #test08cantCheckOutCartWithInvalidCreditCardNumber stamp: 'JEA 11/30/2020 21:07:48'!
PASSED!

!testRun: #RestInterfaceTest #test09canCheckOutNonEmptyValidCartWithValidCreditCard stamp: 'JEA 11/30/2020 21:07:48'!
PASSED!

!testRun: #RestInterfaceTest #test10cannotListCartWithInvalidID stamp: 'JEA 11/30/2020 21:07:48'!
PASSED!

!testRun: #RestInterfaceTest #test11cantAccessCartAfterTimeoutSinceCreated stamp: 'JEA 11/30/2020 21:07:48'!
PASSED!
!RestInterfaceTest methodsFor: 'tests - checking out cart' stamp: 'JEA 11/30/2020 21:12:10' prior: 50876902!
test09canCheckOutNonEmptyValidCartWithValidCreditCard
	| restInterface cartID transactionID |

	restInterface := RestInterface 
		newWithAuthenticator: AuthenticatorSimulator newSimulatingValidAuthentication 
		withCatalog: testObjectsFactory defaultCatalog 
		withClock: Clock newSimulatingRealTime.
		
	cartID := restInterface
		createCartFor: testObjectsFactory validClientID
		password: testObjectsFactory correctPassword.
		
	restInterface 
		add: 1 
		of: testObjectsFactory itemSoldByTheStore 
		toCartWithID: cartID.
	
	transactionID := restInterface 
		checkOutCartWithID: cartID 
		withCardNumber: testObjectsFactory validCardNumber 
		expiring: testObjectsFactory expirationDateNotReached 
		owner: testObjectsFactory validCreditCardOwnersName.
	
	self assert: testObjectsFactory itemSoldByTheStorePrice 
		equals: (restInterface moneyDebitedInTransactionWithID: transactionID).! !

!testRun: #RestInterfaceTest #test01cannotCreateCartForInvalidClientID stamp: 'JEA 11/30/2020 21:12:11'!
PASSED!

!testRun: #RestInterfaceTest #test02cannotCreateCartForClientWithWrongPassword stamp: 'JEA 11/30/2020 21:12:11'!
PASSED!

!testRun: #RestInterfaceTest #test03canCreateCartForWellAuthenticatedClient stamp: 'JEA 11/30/2020 21:12:11'!
PASSED!

!testRun: #RestInterfaceTest #test04canCreateMoreThanOneCartWithDifferentIDs stamp: 'JEA 11/30/2020 21:12:11'!
PASSED!

!testRun: #RestInterfaceTest #test05cannotAddToCartWithInvalidID stamp: 'JEA 11/30/2020 21:12:11'!
PASSED!

!testRun: #RestInterfaceTest #test06canAddItemToCartWithValidID stamp: 'JEA 11/30/2020 21:12:11'!
PASSED!

!testRun: #RestInterfaceTest #test07cantCheckOutCartWithInvalidID stamp: 'JEA 11/30/2020 21:12:11'!
PASSED!

!testRun: #RestInterfaceTest #test08cantCheckOutCartWithInvalidCreditCardNumber stamp: 'JEA 11/30/2020 21:12:11'!
PASSED!

!testRun: #RestInterfaceTest #test09canCheckOutNonEmptyValidCartWithValidCreditCard stamp: 'JEA 11/30/2020 21:12:11'!
FAILURE!

!testRun: #RestInterfaceTest #test10cannotListCartWithInvalidID stamp: 'JEA 11/30/2020 21:12:11'!
PASSED!

!testRun: #RestInterfaceTest #test11cantAccessCartAfterTimeoutSinceCreated stamp: 'JEA 11/30/2020 21:12:11'!
PASSED!

!testRun: #RestInterfaceTest #test09canCheckOutNonEmptyValidCartWithValidCreditCard stamp: 'JEA 11/30/2020 21:12:11'!
FAILURE!

Object subclass: #RestInterface
	instanceVariableNames: 'authenticator lastCartID carts lastInteractionForCart catalog clock transactionPrices'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

!classDefinition: #RestInterface category: 'TusLibros' stamp: 'JEA 11/30/2020 21:12:44'!
Object subclass: #RestInterface
	instanceVariableNames: 'authenticator lastCartID carts lastInteractionForCart catalog clock transactionPrices'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!
!RestInterface methodsFor: 'testing' stamp: 'JEA 11/30/2020 21:13:06' prior: 50875696!
moneyDebitedInTransactionWithID: aTransactionID

	^transactionPrices at: aTransactionID.! !
!RestInterface methodsFor: 'api' stamp: 'JEA 11/30/2020 21:14:22' prior: 50877715!
checkOutCartWithID: aCartID withCardNumber: aCardNumber expiring: aGregorianMonthOfYear owner: aName
	| transactionValue |

	self ensureCartIDCanBeInteractedWith: aCartID.
	self ensureCardNumberIsValid: aCardNumber.
	
	self resetTimerOfCartWithID: aCartID.
	
	transactionPrices at: 0 put: transactionValue.! !

!classDefinition: #RestInterface category: 'TusLibros' stamp: 'JEA 11/30/2020 21:14:28'!
Object subclass: #RestInterface
	instanceVariableNames: 'authenticator lastCartID carts lastInteractionForCart catalog clock transactionValues'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!
!RestInterface methodsFor: 'as yet unclassified' stamp: 'JEA 11/30/2020 21:14:28' prior: 50878063!
checkOutCartWithID: aCartID withCardNumber: aCardNumber expiring: aGregorianMonthOfYear owner: aName
	| transactionValue |

	self ensureCartIDCanBeInteractedWith: aCartID.
	self ensureCardNumberIsValid: aCardNumber.
	
	self resetTimerOfCartWithID: aCartID.
	
	transactionValues at: 0 put: transactionValue.! !
!RestInterface methodsFor: 'as yet unclassified' stamp: 'JEA 11/30/2020 21:14:28' prior: 50878057!
moneyDebitedInTransactionWithID: aTransactionID

	^transactionValues at: aTransactionID.! !

GregorianDateTime now date!

!classDefinition: #RestInterface category: 'TusLibros' stamp: 'JEA 11/30/2020 21:23:27'!
Object subclass: #RestInterface
	instanceVariableNames: 'authenticator lastCartID carts lastInteractionForCart catalog clock transactionValues salesBook'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!
!RestInterface methodsFor: 'api' stamp: 'JEA 11/30/2020 21:23:25' prior: 50878086!
checkOutCartWithID: aCartID withCardNumber: aCardNumber expiring: aGregorianMonthOfYear owner: aName
	| creditCard cashier |

	self ensureCartIDCanBeInteractedWith: aCartID.
	self ensureCardNumberIsValid: aCardNumber.
	
	self resetTimerOfCartWithID: aCartID.
	
	creditCard := CreditCard expiringOn: aGregorianMonthOfYear.
	
	cashier:= Cashier 
		toCheckout: (carts at: aCartID) 
		charging: creditCard
		throught: self
		on: clock now date
		registeringOn: salesBook.
	
	cashier checkOut.! !
!RestInterface methodsFor: 'api - private' stamp: 'JEA 11/30/2020 21:24:28'!
checkout: aCart withCard: aCard! !
!RestInterface methodsFor: 'api' stamp: 'JEA 11/30/2020 21:24:55' prior: 50878116!
checkOutCartWithID: aCartID withCardNumber: aCardNumber expiring: aGregorianMonthOfYear owner: aName
	| creditCard |

	self ensureCartIDCanBeInteractedWith: aCartID.
	self ensureCardNumberIsValid: aCardNumber.
	
	self resetTimerOfCartWithID: aCartID.
	
	creditCard := CreditCard expiringOn: aGregorianMonthOfYear.
	
	self checkout: (carts at: aCartID) withCard: creditCard.! !
!RestInterface methodsFor: 'api - private' stamp: 'JEA 11/30/2020 21:25:21' prior: 50878134!
checkout: aCart withCard: aCard
	| cashier |

	cashier:= Cashier 
		toCheckout: aCart
		charging: aCard
		throught: self
		on: clock now date
		registeringOn: salesBook.
	
	cashier checkOut.! !
!Cashier methodsFor: 'checkout - private' stamp: 'JEA 11/30/2020 21:34:02' prior: 50870908!
registerSale

	salesBook at: self newTransactionID put: self createSale.! !

!classDefinition: #Cashier category: 'TusLibros' stamp: 'JEA 11/30/2020 21:35:10'!
Object subclass: #Cashier
	instanceVariableNames: 'cart salesBook merchantProcessor creditCard total lastTransactionID'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!
!Cashier methodsFor: 'checkout - private' stamp: 'JEA 11/30/2020 21:35:09'!
newTransactionID
	
	lastTransactionID := lastTransactionID + 1.
	^lastTransactionID.! !
!Cashier methodsFor: 'initialization' stamp: 'JEA 11/30/2020 21:36:56' prior: 50874495!
initializeToCheckout: aCart charging: aCreditCard through: aMerchantProcessor registeringOn: aSalesBook
	
	cart := aCart.
	creditCard := aCreditCard.
	merchantProcessor := aMerchantProcessor.
	salesBook := aSalesBook.
	lastTransactionID := 0.! !
!CashierTest methodsFor: 'tests' stamp: 'JEA 11/30/2020 21:42:21' prior: 50871094!
test01CanNotCheckoutAnEmptyCart
	| salesBook |
	
	salesBook := Dictionary new.
	self 
		should: [ Cashier 
			toCheckout: testObjectsFactory createCart 
			charging: testObjectsFactory notExpiredCreditCard 
			throught: self
			on: testObjectsFactory today
			registeringOn:  salesBook ]
		raise: Error - MessageNotUnderstood
		withExceptionDo: [ :anError |
			self assert: anError messageText = Cashier cartCanNotBeEmptyErrorMessage.
			self assert: salesBook isEmpty ]! !
!CashierTest methodsFor: 'tests' stamp: 'JEA 11/30/2020 21:42:29' prior: 50873512!
test02CalculatedTotalIsCorrect

	| cart cashier |
	
	cart := testObjectsFactory createCart.
	cart add: 2 of: testObjectsFactory itemSoldByTheStore.
	
	cashier :=  Cashier
		toCheckout: cart 
		charging: testObjectsFactory notExpiredCreditCard 
		throught: self
		on: testObjectsFactory today 
		registeringOn: Dictionary new..
		
	self assert: cashier checkOut = (testObjectsFactory itemSoldByTheStorePrice * 2)! !
!CashierTest methodsFor: 'tests' stamp: 'JEA 11/30/2020 21:42:31' prior: 50878211!
test02CalculatedTotalIsCorrect

	| cart cashier |
	
	cart := testObjectsFactory createCart.
	cart add: 2 of: testObjectsFactory itemSoldByTheStore.
	
	cashier :=  Cashier
		toCheckout: cart 
		charging: testObjectsFactory notExpiredCreditCard 
		throught: self
		on: testObjectsFactory today 
		registeringOn: Dictionary new.
		
	self assert: cashier checkOut = (testObjectsFactory itemSoldByTheStorePrice * 2)! !
!CashierTest methodsFor: 'tests' stamp: 'JEA 11/30/2020 21:42:37' prior: 50873352!
test03CanNotCheckoutWithAnExpiredCreditCart

	| cart salesBook |

	cart := testObjectsFactory createCart.
	cart add: testObjectsFactory itemSoldByTheStore.
	salesBook := Dictionary new.
	
	self
		should: [ Cashier 
				toCheckout: cart 
				charging: testObjectsFactory expiredCreditCard 
				throught: self
				on: testObjectsFactory today
				registeringOn: salesBook ]
		raise: Error - MessageNotUnderstood
		withExceptionDo: [ :anError | 
			self assert: anError messageText = Cashier canNotChargeAnExpiredCreditCardErrorMessage.
			self assert: salesBook isEmpty ]! !
!CashierTest methodsFor: 'tests' stamp: 'JEA 11/30/2020 21:42:40' prior: 50873485!
test04CheckoutRegistersASale

	| cart cashier salesBook total |

	cart := testObjectsFactory createCart.
	cart add: testObjectsFactory itemSoldByTheStore.
	salesBook := Dictionary new.
 
	cashier:= Cashier 
		toCheckout: cart 
		charging: testObjectsFactory notExpiredCreditCard
		throught: self
		on: testObjectsFactory today
		registeringOn: salesBook.
		
	total := cashier checkOut.
					
	self assert: salesBook size = 1.
	self assert: salesBook first = total.! !
!CashierTest methodsFor: 'tests' stamp: 'JEA 11/30/2020 21:42:43' prior: 50873374!
test05CashierChargesCreditCardUsingMerchantProcessor

	| cart cashier salesBook total creditCard debitedAmout debitedCreditCard  |

	cart := testObjectsFactory createCart.
	cart add: testObjectsFactory itemSoldByTheStore.
	creditCard := testObjectsFactory notExpiredCreditCard.
	salesBook := Dictionary new.
 
	cashier:= Cashier 
		toCheckout: cart 
		charging: creditCard
		throught: self
		on: testObjectsFactory today
		registeringOn: salesBook.
		
	debitBehavior := [ :anAmount :aCreditCard | 
		debitedAmout := anAmount.
		debitedCreditCard := aCreditCard ].
	total := cashier checkOut.
					
	self assert: debitedCreditCard = creditCard.
	self assert: debitedAmout = total.! !
!CashierTest methodsFor: 'tests' stamp: 'JEA 11/30/2020 21:42:46' prior: 50873440!
test06CashierDoesNotSaleWhenTheCreditCardHasNoCredit

	| cart cashier salesBook creditCard |

	cart := testObjectsFactory createCart.
	cart add: testObjectsFactory itemSoldByTheStore.
	creditCard := testObjectsFactory notExpiredCreditCard.
	salesBook := Dictionary new.
 	debitBehavior := [ :anAmount :aCreditCard | self error: Cashier creditCardHasNoCreditErrorMessage].
	
	cashier:= Cashier 
		toCheckout: cart 
		charging: creditCard
		throught: self
		on: testObjectsFactory today
		registeringOn: salesBook.
		
	self 
		should: [cashier checkOut ]
		raise: Error - MessageNotUnderstood
		withExceptionDo: [ :anError |
			self assert: anError messageText = Cashier creditCardHasNoCreditErrorMessage.
			self assert: salesBook isEmpty ]! !
!CashierTest methodsFor: 'tests' stamp: 'JEA 11/30/2020 21:46:10' prior: 50878227!
test02CalculatedTotalIsCorrect

	| cart cashier salesBook total |
	
	salesBook := Dictionary new.
	cart := testObjectsFactory createCart.
	cart add: 2 of: testObjectsFactory itemSoldByTheStore.
	
	cashier :=  Cashier
		toCheckout: cart 
		charging: testObjectsFactory notExpiredCreditCard 
		throught: self
		on: testObjectsFactory today 
		registeringOn: salesBook.
	
	total := salesBook at: cashier checkOut.
	
	self assert: total = (testObjectsFactory itemSoldByTheStorePrice * 2)! !
!CashierTest methodsFor: 'tests' stamp: 'JEA 11/30/2020 21:46:24' prior: 50878264!
test04CheckoutRegistersASale

	| cart cashier salesBook total |

	cart := testObjectsFactory createCart.
	cart add: testObjectsFactory itemSoldByTheStore.
	salesBook := Dictionary new.
 
	cashier:= Cashier 
		toCheckout: cart 
		charging: testObjectsFactory notExpiredCreditCard
		throught: self
		on: testObjectsFactory today
		registeringOn: salesBook.
		
	total := salesBook at: cashier checkOut.
					
	self assert: salesBook size = 1.
	self assert: salesBook first = total.! !
!CashierTest methodsFor: 'tests' stamp: 'JEA 11/30/2020 21:46:35' prior: 50878282!
test05CashierChargesCreditCardUsingMerchantProcessor

	| cart cashier salesBook total creditCard debitedAmout debitedCreditCard  |

	cart := testObjectsFactory createCart.
	cart add: testObjectsFactory itemSoldByTheStore.
	creditCard := testObjectsFactory notExpiredCreditCard.
	salesBook := Dictionary new.
 
	cashier:= Cashier 
		toCheckout: cart 
		charging: creditCard
		throught: self
		on: testObjectsFactory today
		registeringOn: salesBook.
		
	debitBehavior := [ :anAmount :aCreditCard | 
		debitedAmout := anAmount.
		debitedCreditCard := aCreditCard ].
	
	total := salesBook at: cashier checkOut.
					
	self assert: debitedCreditCard = creditCard.
	self assert: debitedAmout = total.! !

!testRun: #CashierTest #test01CanNotCheckoutAnEmptyCart stamp: 'JEA 11/30/2020 21:46:45'!
PASSED!

!testRun: #CashierTest #test02CalculatedTotalIsCorrect stamp: 'JEA 11/30/2020 21:46:45'!
ERROR!

!testRun: #CashierTest #test03CanNotCheckoutWithAnExpiredCreditCart stamp: 'JEA 11/30/2020 21:46:45'!
PASSED!

!testRun: #CashierTest #test04CheckoutRegistersASale stamp: 'JEA 11/30/2020 21:46:45'!
ERROR!

!testRun: #CashierTest #test05CashierChargesCreditCardUsingMerchantProcessor stamp: 'JEA 11/30/2020 21:46:45'!
ERROR!

!testRun: #CashierTest #test06CashierDoesNotSaleWhenTheCreditCardHasNoCredit stamp: 'JEA 11/30/2020 21:46:45'!
PASSED!

!testRun: #CashierTest #test02CalculatedTotalIsCorrect stamp: 'JEA 11/30/2020 21:46:47'!
ERROR!
!Cashier methodsFor: 'checkout - private' stamp: 'JEA 11/30/2020 21:47:19'!
registerSaleWithID: aSaleID

	salesBook at: aSaleID put: self createSale.! !
!Cashier methodsFor: 'checkout' stamp: 'JEA 11/30/2020 21:47:41' prior: 50870926!
checkOut

	self calculateTotal.
	self debitTotal.
	self registerSaleWithID: 3.
	^ total! !

!methodRemoval: Cashier #registerSale stamp: 'JEA 11/30/2020 21:47:45'!
registerSale

	salesBook at: self newTransactionID put: self createSale.!
!Cashier methodsFor: 'checkout' stamp: 'JEA 11/30/2020 21:47:57' prior: 50878421!
checkOut

	self calculateTotal.
	self debitTotal.
	self registerSaleWithID: self newTransactionID.
	^ total! !
!Cashier methodsFor: 'checkout' stamp: 'JEA 11/30/2020 21:48:25' prior: 50878431!
checkOut
	| transactionID |
	
	transactionID := self newTransactionID.
	self calculateTotal.
	self debitTotal.
	self registerSaleWithID: transactionID.
	
	^transactionID.! !
!Cashier methodsFor: 'checkout' stamp: 'JEA 11/30/2020 21:48:27' prior: 50878438!
checkOut
	| transactionID |
	
	transactionID := self newTransactionID.

	self calculateTotal.
	self debitTotal.
	self registerSaleWithID: transactionID.
	
	^transactionID.! !

!testRun: #CashierTest #test01CanNotCheckoutAnEmptyCart stamp: 'JEA 11/30/2020 21:48:28'!
PASSED!

!testRun: #CashierTest #test02CalculatedTotalIsCorrect stamp: 'JEA 11/30/2020 21:48:28'!
PASSED!

!testRun: #CashierTest #test03CanNotCheckoutWithAnExpiredCreditCart stamp: 'JEA 11/30/2020 21:48:28'!
PASSED!

!testRun: #CashierTest #test04CheckoutRegistersASale stamp: 'JEA 11/30/2020 21:48:28'!
ERROR!

!testRun: #CashierTest #test05CashierChargesCreditCardUsingMerchantProcessor stamp: 'JEA 11/30/2020 21:48:28'!
PASSED!

!testRun: #CashierTest #test06CashierDoesNotSaleWhenTheCreditCardHasNoCredit stamp: 'JEA 11/30/2020 21:48:28'!
PASSED!

!testRun: #CashierTest #test04CheckoutRegistersASale stamp: 'JEA 11/30/2020 21:48:28'!
ERROR!
!CashierTest methodsFor: 'tests' stamp: 'JEA 11/30/2020 21:48:54' prior: 50878350!
test04CheckoutRegistersASale

	| cart cashier salesBook total |

	cart := testObjectsFactory createCart.
	cart add: testObjectsFactory itemSoldByTheStore.
	salesBook := Dictionary new.
 
	cashier:= Cashier 
		toCheckout: cart 
		charging: testObjectsFactory notExpiredCreditCard
		throught: self
		on: testObjectsFactory today
		registeringOn: salesBook.
		
	total := salesBook at: cashier checkOut.
					
	self assert: salesBook size = 1.
	self assert: salesBook includes: total.! !

!testRun: #CashierTest #test01CanNotCheckoutAnEmptyCart stamp: 'JEA 11/30/2020 21:48:56'!
PASSED!

!testRun: #CashierTest #test02CalculatedTotalIsCorrect stamp: 'JEA 11/30/2020 21:48:56'!
PASSED!

!testRun: #CashierTest #test03CanNotCheckoutWithAnExpiredCreditCart stamp: 'JEA 11/30/2020 21:48:56'!
PASSED!

!testRun: #CashierTest #test04CheckoutRegistersASale stamp: 'JEA 11/30/2020 21:48:56'!
PASSED!

!testRun: #CashierTest #test05CashierChargesCreditCardUsingMerchantProcessor stamp: 'JEA 11/30/2020 21:48:56'!
PASSED!

!testRun: #CashierTest #test06CashierDoesNotSaleWhenTheCreditCardHasNoCredit stamp: 'JEA 11/30/2020 21:48:56'!
PASSED!

!testRun: #RestInterfaceTest #test01cannotCreateCartForInvalidClientID stamp: 'JEA 11/30/2020 21:49:06'!
PASSED!

!testRun: #RestInterfaceTest #test02cannotCreateCartForClientWithWrongPassword stamp: 'JEA 11/30/2020 21:49:06'!
PASSED!

!testRun: #RestInterfaceTest #test03canCreateCartForWellAuthenticatedClient stamp: 'JEA 11/30/2020 21:49:06'!
PASSED!

!testRun: #RestInterfaceTest #test04canCreateMoreThanOneCartWithDifferentIDs stamp: 'JEA 11/30/2020 21:49:06'!
PASSED!

!testRun: #RestInterfaceTest #test05cannotAddToCartWithInvalidID stamp: 'JEA 11/30/2020 21:49:06'!
PASSED!

!testRun: #RestInterfaceTest #test06canAddItemToCartWithValidID stamp: 'JEA 11/30/2020 21:49:06'!
PASSED!

!testRun: #RestInterfaceTest #test07cantCheckOutCartWithInvalidID stamp: 'JEA 11/30/2020 21:49:06'!
PASSED!

!testRun: #RestInterfaceTest #test08cantCheckOutCartWithInvalidCreditCardNumber stamp: 'JEA 11/30/2020 21:49:06'!
PASSED!

!testRun: #RestInterfaceTest #test09canCheckOutNonEmptyValidCartWithValidCreditCard stamp: 'JEA 11/30/2020 21:49:06'!
ERROR!

!testRun: #RestInterfaceTest #test10cannotListCartWithInvalidID stamp: 'JEA 11/30/2020 21:49:06'!
PASSED!

!testRun: #RestInterfaceTest #test11cantAccessCartAfterTimeoutSinceCreated stamp: 'JEA 11/30/2020 21:49:06'!
PASSED!

!testRun: #RestInterfaceTest #test09canCheckOutNonEmptyValidCartWithValidCreditCard stamp: 'JEA 11/30/2020 21:49:06'!
ERROR!
!Cashier class methodsFor: 'instance creation' stamp: 'JEA 11/30/2020 21:49:51'!
toCheckout: aCart charging: aCreditCard through: aMerchantProcessor on: aDate registeringOn: aSalesBook
	
	self assertIsNotEmpty: aCart.
	self assertIsNotExpired: aCreditCard on: aDate.
	
	^self new initializeToCheckout: aCart charging: aCreditCard through: aMerchantProcessor registeringOn: aSalesBook! !
!CashierTest methodsFor: 'as yet unclassified' stamp: 'JEA 11/30/2020 21:49:51' prior: 50878368!
test05CashierChargesCreditCardUsingMerchantProcessor

	| cart cashier salesBook total creditCard debitedAmout debitedCreditCard  |

	cart := testObjectsFactory createCart.
	cart add: testObjectsFactory itemSoldByTheStore.
	creditCard := testObjectsFactory notExpiredCreditCard.
	salesBook := Dictionary new.
 
	cashier:= Cashier 
		toCheckout: cart 
		charging: creditCard
		through: self
		on: testObjectsFactory today
		registeringOn: salesBook.
		
	debitBehavior := [ :anAmount :aCreditCard | 
		debitedAmout := anAmount.
		debitedCreditCard := aCreditCard ].
	
	total := salesBook at: cashier checkOut.
					
	self assert: debitedCreditCard = creditCard.
	self assert: debitedAmout = total.! !
!CashierTest methodsFor: 'as yet unclassified' stamp: 'JEA 11/30/2020 21:49:51' prior: 50878478!
test04CheckoutRegistersASale

	| cart cashier salesBook total |

	cart := testObjectsFactory createCart.
	cart add: testObjectsFactory itemSoldByTheStore.
	salesBook := Dictionary new.
 
	cashier:= Cashier 
		toCheckout: cart 
		charging: testObjectsFactory notExpiredCreditCard
		through: self
		on: testObjectsFactory today
		registeringOn: salesBook.
		
	total := salesBook at: cashier checkOut.
					
	self assert: salesBook size = 1.
	self assert: salesBook includes: total.! !
!CashierTest methodsFor: 'as yet unclassified' stamp: 'JEA 11/30/2020 21:49:51' prior: 50878332!
test02CalculatedTotalIsCorrect

	| cart cashier salesBook total |
	
	salesBook := Dictionary new.
	cart := testObjectsFactory createCart.
	cart add: 2 of: testObjectsFactory itemSoldByTheStore.
	
	cashier :=  Cashier
		toCheckout: cart 
		charging: testObjectsFactory notExpiredCreditCard 
		through: self
		on: testObjectsFactory today 
		registeringOn: salesBook.
	
	total := salesBook at: cashier checkOut.
	
	self assert: total = (testObjectsFactory itemSoldByTheStorePrice * 2)! !
!CashierTest methodsFor: 'as yet unclassified' stamp: 'JEA 11/30/2020 21:49:51' prior: 50878193!
test01CanNotCheckoutAnEmptyCart
	| salesBook |
	
	salesBook := Dictionary new.
	self 
		should: [ Cashier 
			toCheckout: testObjectsFactory createCart 
			charging: testObjectsFactory notExpiredCreditCard 
			through: self
			on: testObjectsFactory today
			registeringOn:  salesBook ]
		raise: Error - MessageNotUnderstood
		withExceptionDo: [ :anError |
			self assert: anError messageText = Cashier cartCanNotBeEmptyErrorMessage.
			self assert: salesBook isEmpty ]! !
!CashierTest methodsFor: 'as yet unclassified' stamp: 'JEA 11/30/2020 21:49:51' prior: 50878306!
test06CashierDoesNotSaleWhenTheCreditCardHasNoCredit

	| cart cashier salesBook creditCard |

	cart := testObjectsFactory createCart.
	cart add: testObjectsFactory itemSoldByTheStore.
	creditCard := testObjectsFactory notExpiredCreditCard.
	salesBook := Dictionary new.
 	debitBehavior := [ :anAmount :aCreditCard | self error: Cashier creditCardHasNoCreditErrorMessage].
	
	cashier:= Cashier 
		toCheckout: cart 
		charging: creditCard
		through: self
		on: testObjectsFactory today
		registeringOn: salesBook.
		
	self 
		should: [cashier checkOut ]
		raise: Error - MessageNotUnderstood
		withExceptionDo: [ :anError |
			self assert: anError messageText = Cashier creditCardHasNoCreditErrorMessage.
			self assert: salesBook isEmpty ]! !
!RestInterface methodsFor: 'as yet unclassified' stamp: 'JEA 11/30/2020 21:49:51' prior: 50878153!
checkout: aCart withCard: aCard
	| cashier |

	cashier:= Cashier 
		toCheckout: aCart
		charging: aCard
		through: self
		on: clock now date
		registeringOn: salesBook.
	
	cashier checkOut.! !
!CashierTest methodsFor: 'as yet unclassified' stamp: 'JEA 11/30/2020 21:49:51' prior: 50878243!
test03CanNotCheckoutWithAnExpiredCreditCart

	| cart salesBook |

	cart := testObjectsFactory createCart.
	cart add: testObjectsFactory itemSoldByTheStore.
	salesBook := Dictionary new.
	
	self
		should: [ Cashier 
				toCheckout: cart 
				charging: testObjectsFactory expiredCreditCard 
				through: self
				on: testObjectsFactory today
				registeringOn: salesBook ]
		raise: Error - MessageNotUnderstood
		withExceptionDo: [ :anError | 
			self assert: anError messageText = Cashier canNotChargeAnExpiredCreditCardErrorMessage.
			self assert: salesBook isEmpty ]! !

!methodRemoval: Cashier class #toCheckout:charging:throught:on:registeringOn: stamp: 'JEA 11/30/2020 21:49:51'!
toCheckout: aCart charging: aCreditCard throught: aMerchantProcessor on: aDate registeringOn: aSalesBook
	
	self assertIsNotEmpty: aCart.
	self assertIsNotExpired: aCreditCard on: aDate.
	
	^self new initializeToCheckout: aCart charging: aCreditCard through: aMerchantProcessor registeringOn: aSalesBook!
!StoreTestObjectsFactory methodsFor: 'credit card' stamp: 'JEA 11/30/2020 22:28:44' prior: 50871253!
expiredCreditCard
	
	^CreditCard expiringOn: GregorianDateTime today monthOfYear previous.! !
!StoreTestObjectsFactory methodsFor: 'credit card' stamp: 'JEA 11/30/2020 22:28:54' prior: 50871246!
notExpiredCreditCard
	
	^CreditCard expiringOn: GregorianDateTime today monthOfYear next.! !

!testRun: #CashierTest #test01CanNotCheckoutAnEmptyCart stamp: 'JEA 11/30/2020 22:29:14'!
ERROR!

!testRun: #CashierTest #test02CalculatedTotalIsCorrect stamp: 'JEA 11/30/2020 22:29:14'!
ERROR!

!testRun: #CashierTest #test03CanNotCheckoutWithAnExpiredCreditCart stamp: 'JEA 11/30/2020 22:29:14'!
ERROR!

!testRun: #CashierTest #test04CheckoutRegistersASale stamp: 'JEA 11/30/2020 22:29:14'!
ERROR!

!testRun: #CashierTest #test05CashierChargesCreditCardUsingMerchantProcessor stamp: 'JEA 11/30/2020 22:29:14'!
ERROR!

!testRun: #CashierTest #test06CashierDoesNotSaleWhenTheCreditCardHasNoCredit stamp: 'JEA 11/30/2020 22:29:14'!
ERROR!

!testRun: #CashierTest #test01CanNotCheckoutAnEmptyCart stamp: 'JEA 11/30/2020 22:29:18'!
ERROR!
!StoreTestObjectsFactory methodsFor: 'credit card' stamp: 'JEA 11/30/2020 22:29:42' prior: 50878733!
notExpiredCreditCard
	
	^CreditCard expiringOn: GregorianDateTime now monthOfYear next.! !
!StoreTestObjectsFactory methodsFor: 'credit card' stamp: 'JEA 11/30/2020 22:29:45' prior: 50878726!
expiredCreditCard
	
	^CreditCard expiringOn: GregorianDateTime now monthOfYear previous.! !

!testRun: #CashierTest #test01CanNotCheckoutAnEmptyCart stamp: 'JEA 11/30/2020 22:29:47'!
PASSED!

!testRun: #CashierTest #test02CalculatedTotalIsCorrect stamp: 'JEA 11/30/2020 22:29:47'!
ERROR!

!testRun: #CashierTest #test03CanNotCheckoutWithAnExpiredCreditCart stamp: 'JEA 11/30/2020 22:29:47'!
ERROR!

!testRun: #CashierTest #test04CheckoutRegistersASale stamp: 'JEA 11/30/2020 22:29:47'!
ERROR!

!testRun: #CashierTest #test05CashierChargesCreditCardUsingMerchantProcessor stamp: 'JEA 11/30/2020 22:29:47'!
ERROR!

!testRun: #CashierTest #test06CashierDoesNotSaleWhenTheCreditCardHasNoCredit stamp: 'JEA 11/30/2020 22:29:47'!
ERROR!

!testRun: #CashierTest #test02CalculatedTotalIsCorrect stamp: 'JEA 11/30/2020 22:29:49'!
ERROR!

!testRun: #CashierTest #test03CanNotCheckoutWithAnExpiredCreditCart stamp: 'JEA 11/30/2020 22:29:54'!
ERROR!
!CreditCard methodsFor: 'testing' stamp: 'JEA 11/30/2020 22:32:49' prior: 50871153!
isExpiredOn: aDate 
	
	^expiration < aDate monthOfYear.! !

!testRun: #CashierTest #test01CanNotCheckoutAnEmptyCart stamp: 'JEA 11/30/2020 22:32:53'!
PASSED!

!testRun: #CashierTest #test02CalculatedTotalIsCorrect stamp: 'JEA 11/30/2020 22:32:53'!
ERROR!

!testRun: #CashierTest #test03CanNotCheckoutWithAnExpiredCreditCart stamp: 'JEA 11/30/2020 22:32:53'!
ERROR!

!testRun: #CashierTest #test04CheckoutRegistersASale stamp: 'JEA 11/30/2020 22:32:53'!
ERROR!

!testRun: #CashierTest #test05CashierChargesCreditCardUsingMerchantProcessor stamp: 'JEA 11/30/2020 22:32:53'!
ERROR!

!testRun: #CashierTest #test06CashierDoesNotSaleWhenTheCreditCardHasNoCredit stamp: 'JEA 11/30/2020 22:32:53'!
ERROR!

!testRun: #CashierTest #test02CalculatedTotalIsCorrect stamp: 'JEA 11/30/2020 22:32:55'!
ERROR!
!StoreTestObjectsFactory methodsFor: 'initialization' stamp: 'JEA 11/30/2020 22:33:32' prior: 50871260 overrides: 16896425!
initialize

	today := GregorianDateTime now! !

!testRun: #CartTest #test01NewCartsAreCreatedEmpty stamp: 'JEA 11/30/2020 22:33:34'!
PASSED!

!testRun: #CartTest #test02CanNotAddItemsThatDoNotBelongToStore stamp: 'JEA 11/30/2020 22:33:34'!
PASSED!

!testRun: #CartTest #test03AfterAddingAnItemTheCartIsNotEmptyAnymore stamp: 'JEA 11/30/2020 22:33:34'!
PASSED!

!testRun: #CartTest #test04CanNotAddNonPositiveNumberOfItems stamp: 'JEA 11/30/2020 22:33:34'!
PASSED!

!testRun: #CartTest #test05CanNotAddMoreThanOneItemNotSellByTheStore stamp: 'JEA 11/30/2020 22:33:34'!
PASSED!

!testRun: #CartTest #test06CartRemembersAddedItems stamp: 'JEA 11/30/2020 22:33:34'!
PASSED!

!testRun: #CartTest #test07CartDoesNotHoldNotAddedItems stamp: 'JEA 11/30/2020 22:33:34'!
PASSED!

!testRun: #CartTest #test08CartRemembersTheNumberOfAddedItems stamp: 'JEA 11/30/2020 22:33:34'!
PASSED!

!testRun: #CashierTest #test01CanNotCheckoutAnEmptyCart stamp: 'JEA 11/30/2020 22:33:34'!
PASSED!

!testRun: #CashierTest #test02CalculatedTotalIsCorrect stamp: 'JEA 11/30/2020 22:33:34'!
PASSED!

!testRun: #CashierTest #test03CanNotCheckoutWithAnExpiredCreditCart stamp: 'JEA 11/30/2020 22:33:34'!
PASSED!

!testRun: #CashierTest #test04CheckoutRegistersASale stamp: 'JEA 11/30/2020 22:33:34'!
PASSED!

!testRun: #CashierTest #test05CashierChargesCreditCardUsingMerchantProcessor stamp: 'JEA 11/30/2020 22:33:34'!
PASSED!

!testRun: #CashierTest #test06CashierDoesNotSaleWhenTheCreditCardHasNoCredit stamp: 'JEA 11/30/2020 22:33:34'!
PASSED!

!testRun: #RestInterfaceTest #test01cannotCreateCartForInvalidClientID stamp: 'JEA 11/30/2020 22:33:34'!
PASSED!

!testRun: #RestInterfaceTest #test02cannotCreateCartForClientWithWrongPassword stamp: 'JEA 11/30/2020 22:33:34'!
PASSED!

!testRun: #RestInterfaceTest #test03canCreateCartForWellAuthenticatedClient stamp: 'JEA 11/30/2020 22:33:34'!
PASSED!

!testRun: #RestInterfaceTest #test04canCreateMoreThanOneCartWithDifferentIDs stamp: 'JEA 11/30/2020 22:33:34'!
PASSED!

!testRun: #RestInterfaceTest #test05cannotAddToCartWithInvalidID stamp: 'JEA 11/30/2020 22:33:34'!
PASSED!

!testRun: #RestInterfaceTest #test06canAddItemToCartWithValidID stamp: 'JEA 11/30/2020 22:33:34'!
PASSED!

!testRun: #RestInterfaceTest #test07cantCheckOutCartWithInvalidID stamp: 'JEA 11/30/2020 22:33:34'!
PASSED!

!testRun: #RestInterfaceTest #test08cantCheckOutCartWithInvalidCreditCardNumber stamp: 'JEA 11/30/2020 22:33:34'!
PASSED!

!testRun: #RestInterfaceTest #test09canCheckOutNonEmptyValidCartWithValidCreditCard stamp: 'JEA 11/30/2020 22:33:34'!
ERROR!

!testRun: #RestInterfaceTest #test10cannotListCartWithInvalidID stamp: 'JEA 11/30/2020 22:33:34'!
PASSED!

!testRun: #RestInterfaceTest #test11cantAccessCartAfterTimeoutSinceCreated stamp: 'JEA 11/30/2020 22:33:34'!
PASSED!

!testRun: #RestInterfaceTest #test09canCheckOutNonEmptyValidCartWithValidCreditCard stamp: 'JEA 11/30/2020 22:33:34'!
ERROR!

!testRun: #CashierTest #test01CanNotCheckoutAnEmptyCart stamp: 'JEA 11/30/2020 22:33:39'!
PASSED!

!testRun: #CashierTest #test02CalculatedTotalIsCorrect stamp: 'JEA 11/30/2020 22:33:39'!
PASSED!

!testRun: #CashierTest #test03CanNotCheckoutWithAnExpiredCreditCart stamp: 'JEA 11/30/2020 22:33:39'!
PASSED!

!testRun: #CashierTest #test04CheckoutRegistersASale stamp: 'JEA 11/30/2020 22:33:39'!
PASSED!

!testRun: #CashierTest #test05CashierChargesCreditCardUsingMerchantProcessor stamp: 'JEA 11/30/2020 22:33:39'!
PASSED!

!testRun: #CashierTest #test06CashierDoesNotSaleWhenTheCreditCardHasNoCredit stamp: 'JEA 11/30/2020 22:33:39'!
PASSED!

!testRun: #RestInterfaceTest #test01cannotCreateCartForInvalidClientID stamp: 'JEA 11/30/2020 22:33:44'!
PASSED!

!testRun: #RestInterfaceTest #test02cannotCreateCartForClientWithWrongPassword stamp: 'JEA 11/30/2020 22:33:44'!
PASSED!

!testRun: #RestInterfaceTest #test03canCreateCartForWellAuthenticatedClient stamp: 'JEA 11/30/2020 22:33:44'!
PASSED!

!testRun: #RestInterfaceTest #test04canCreateMoreThanOneCartWithDifferentIDs stamp: 'JEA 11/30/2020 22:33:44'!
PASSED!

!testRun: #RestInterfaceTest #test05cannotAddToCartWithInvalidID stamp: 'JEA 11/30/2020 22:33:44'!
PASSED!

!testRun: #RestInterfaceTest #test06canAddItemToCartWithValidID stamp: 'JEA 11/30/2020 22:33:44'!
PASSED!

!testRun: #RestInterfaceTest #test07cantCheckOutCartWithInvalidID stamp: 'JEA 11/30/2020 22:33:44'!
PASSED!

!testRun: #RestInterfaceTest #test08cantCheckOutCartWithInvalidCreditCardNumber stamp: 'JEA 11/30/2020 22:33:44'!
PASSED!

!testRun: #RestInterfaceTest #test09canCheckOutNonEmptyValidCartWithValidCreditCard stamp: 'JEA 11/30/2020 22:33:44'!
ERROR!

!testRun: #RestInterfaceTest #test10cannotListCartWithInvalidID stamp: 'JEA 11/30/2020 22:33:44'!
PASSED!

!testRun: #RestInterfaceTest #test11cantAccessCartAfterTimeoutSinceCreated stamp: 'JEA 11/30/2020 22:33:44'!
PASSED!

!testRun: #RestInterfaceTest #test09canCheckOutNonEmptyValidCartWithValidCreditCard stamp: 'JEA 11/30/2020 22:33:44'!
ERROR!

!testRun: #RestInterfaceTest #test01cannotCreateCartForInvalidClientID stamp: 'JEA 11/30/2020 22:35:49'!
PASSED!

!testRun: #RestInterfaceTest #test02cannotCreateCartForClientWithWrongPassword stamp: 'JEA 11/30/2020 22:35:49'!
PASSED!

!testRun: #RestInterfaceTest #test03canCreateCartForWellAuthenticatedClient stamp: 'JEA 11/30/2020 22:35:49'!
PASSED!

!testRun: #RestInterfaceTest #test04canCreateMoreThanOneCartWithDifferentIDs stamp: 'JEA 11/30/2020 22:35:49'!
PASSED!

!testRun: #RestInterfaceTest #test05cannotAddToCartWithInvalidID stamp: 'JEA 11/30/2020 22:35:49'!
PASSED!

!testRun: #RestInterfaceTest #test06canAddItemToCartWithValidID stamp: 'JEA 11/30/2020 22:35:49'!
PASSED!

!testRun: #RestInterfaceTest #test07cantCheckOutCartWithInvalidID stamp: 'JEA 11/30/2020 22:35:49'!
PASSED!

!testRun: #RestInterfaceTest #test08cantCheckOutCartWithInvalidCreditCardNumber stamp: 'JEA 11/30/2020 22:35:49'!
PASSED!

!testRun: #RestInterfaceTest #test09canCheckOutNonEmptyValidCartWithValidCreditCard stamp: 'JEA 11/30/2020 22:35:49'!
ERROR!

!testRun: #RestInterfaceTest #test10cannotListCartWithInvalidID stamp: 'JEA 11/30/2020 22:35:49'!
PASSED!

!testRun: #RestInterfaceTest #test11cantAccessCartAfterTimeoutSinceCreated stamp: 'JEA 11/30/2020 22:35:49'!
PASSED!

!testRun: #RestInterfaceTest #test09canCheckOutNonEmptyValidCartWithValidCreditCard stamp: 'JEA 11/30/2020 22:35:49'!
ERROR!

!testRun: #RestInterfaceTest #test01cannotCreateCartForInvalidClientID stamp: 'JEA 11/30/2020 22:36:11'!
PASSED!

!testRun: #RestInterfaceTest #test02cannotCreateCartForClientWithWrongPassword stamp: 'JEA 11/30/2020 22:36:11'!
PASSED!

!testRun: #RestInterfaceTest #test03canCreateCartForWellAuthenticatedClient stamp: 'JEA 11/30/2020 22:36:11'!
PASSED!

!testRun: #RestInterfaceTest #test04canCreateMoreThanOneCartWithDifferentIDs stamp: 'JEA 11/30/2020 22:36:11'!
PASSED!

!testRun: #RestInterfaceTest #test05cannotAddToCartWithInvalidID stamp: 'JEA 11/30/2020 22:36:11'!
PASSED!

!testRun: #RestInterfaceTest #test06canAddItemToCartWithValidID stamp: 'JEA 11/30/2020 22:36:11'!
PASSED!

!testRun: #RestInterfaceTest #test07cantCheckOutCartWithInvalidID stamp: 'JEA 11/30/2020 22:36:11'!
PASSED!

!testRun: #RestInterfaceTest #test08cantCheckOutCartWithInvalidCreditCardNumber stamp: 'JEA 11/30/2020 22:36:11'!
PASSED!

!testRun: #RestInterfaceTest #test09canCheckOutNonEmptyValidCartWithValidCreditCard stamp: 'JEA 11/30/2020 22:36:11'!
ERROR!

!testRun: #RestInterfaceTest #test10cannotListCartWithInvalidID stamp: 'JEA 11/30/2020 22:36:11'!
PASSED!

!testRun: #RestInterfaceTest #test11cantAccessCartAfterTimeoutSinceCreated stamp: 'JEA 11/30/2020 22:36:11'!
PASSED!

!testRun: #RestInterfaceTest #test09canCheckOutNonEmptyValidCartWithValidCreditCard stamp: 'JEA 11/30/2020 22:36:11'!
ERROR!

!testRun: #RestInterfaceTest #test01cannotCreateCartForInvalidClientID stamp: 'JEA 11/30/2020 22:50:15'!
PASSED!

!testRun: #RestInterfaceTest #test02cannotCreateCartForClientWithWrongPassword stamp: 'JEA 11/30/2020 22:50:15'!
PASSED!

!testRun: #RestInterfaceTest #test03canCreateCartForWellAuthenticatedClient stamp: 'JEA 11/30/2020 22:50:15'!
PASSED!

!testRun: #RestInterfaceTest #test04canCreateMoreThanOneCartWithDifferentIDs stamp: 'JEA 11/30/2020 22:50:15'!
PASSED!

!testRun: #RestInterfaceTest #test05cannotAddToCartWithInvalidID stamp: 'JEA 11/30/2020 22:50:15'!
PASSED!

!testRun: #RestInterfaceTest #test06canAddItemToCartWithValidID stamp: 'JEA 11/30/2020 22:50:15'!
PASSED!

!testRun: #RestInterfaceTest #test07cantCheckOutCartWithInvalidID stamp: 'JEA 11/30/2020 22:50:15'!
PASSED!

!testRun: #RestInterfaceTest #test08cantCheckOutCartWithInvalidCreditCardNumber stamp: 'JEA 11/30/2020 22:50:15'!
PASSED!

!testRun: #RestInterfaceTest #test09canCheckOutNonEmptyValidCartWithValidCreditCard stamp: 'JEA 11/30/2020 22:50:15'!
ERROR!

!testRun: #RestInterfaceTest #test10cannotListCartWithInvalidID stamp: 'JEA 11/30/2020 22:50:15'!
PASSED!

!testRun: #RestInterfaceTest #test11cantAccessCartAfterTimeoutSinceCreated stamp: 'JEA 11/30/2020 22:50:15'!
PASSED!

!testRun: #RestInterfaceTest #test09canCheckOutNonEmptyValidCartWithValidCreditCard stamp: 'JEA 11/30/2020 22:50:15'!
ERROR!
!RestInterface class methodsFor: 'instance creation' stamp: 'JEA 11/30/2020 22:53:24'!
newWithAuthenticator: anAuthenticator withMerchantProcessor: aMerchantProcessor withCatalog: aCatalog withClock: aClock  

	^self new initializeWithAuthenticator: anAuthenticator withCatalog: aCatalog withClock: aClock.! !
!RestInterfaceTest methodsFor: 'as yet unclassified' stamp: 'JEA 11/30/2020 22:53:24' prior: 50876728!
test01cannotCreateCartForInvalidClientID
	| restInterface authenticatorSimulator |
	
	authenticatorSimulator := AuthenticatorSimulator newSimulatingValidAuthentication.
	authenticatorSimulator simulateInvalidClientID.

	restInterface := RestInterface 
		newWithAuthenticator: authenticatorSimulator 
		withMerchantProcessor: self withCatalog: Dictionary new 
		withClock: Clock newSimulatingRealTime.
	
	self should: [ restInterface 
				createCartFor: testObjectsFactory validClientID 
				password: testObjectsFactory correctPassword. ]
		raise: Error
		withMessageText: RestInterface authenticationFailedMessage.! !
!RestInterfaceTest methodsFor: 'as yet unclassified' stamp: 'JEA 11/30/2020 22:53:24' prior: 50877783!
test05cannotAddToCartWithInvalidID
	| restInterface |

	restInterface := RestInterface 
		newWithAuthenticator: AuthenticatorSimulator newSimulatingValidAuthentication 
		withMerchantProcessor: self withCatalog: testObjectsFactory defaultCatalog 
		withClock: Clock newSimulatingRealTime.
	
	self should: [ 
		restInterface 
			add: 1 
			of: testObjectsFactory itemSoldByTheStore 
			toCartWithID: testObjectsFactory invalidCartID. 
		]
		raise: Error
		withMessageText: RestInterface invalidCartIDMessage.! !
!RestInterfaceTest methodsFor: 'as yet unclassified' stamp: 'JEA 11/30/2020 22:53:24' prior: 50877880!
test11cantAccessCartAfterTimeoutSinceCreated
	| restInterface cartID clock |

	clock := Clock newSimulatingRealTime.

	restInterface := RestInterface 
		newWithAuthenticator: AuthenticatorSimulator newSimulatingValidAuthentication 
		withMerchantProcessor: self withCatalog: testObjectsFactory defaultCatalog
		withClock: clock.
	
	cartID := restInterface 
		createCartFor: testObjectsFactory validClientID
		password: testObjectsFactory correctPassword.
	
	clock simulateAdvancing: 30 * minute.
	
	self should: [ 
		restInterface 
			add: 2 
			of: testObjectsFactory itemSoldByTheStore 
			toCartWithID: cartID. 
		]
		raise: Error
		withMessageText: RestInterface cartTimedOutMessage.
	
	self should: [ restInterface listItemsInCartWithID: cartID. ]
		raise: Error
		withMessageText: RestInterface cartTimedOutMessage.
	
	self should: [ 
		restInterface 
			checkOutCartWithID: cartID 
			withCardNumber: testObjectsFactory validCardNumber 
			expiring: testObjectsFactory expirationDateNotReached 
			owner: testObjectsFactory validClientID.
		]
		raise: Error
		withMessageText: RestInterface cartTimedOutMessage.! !
!RestInterfaceTest methodsFor: 'as yet unclassified' stamp: 'JEA 11/30/2020 22:53:24' prior: 50877966!
test09canCheckOutNonEmptyValidCartWithValidCreditCard
	| restInterface cartID transactionID |

	restInterface := RestInterface 
		newWithAuthenticator: AuthenticatorSimulator newSimulatingValidAuthentication 
		withMerchantProcessor: self withCatalog: testObjectsFactory defaultCatalog 
		withClock: Clock newSimulatingRealTime.
		
	cartID := restInterface
		createCartFor: testObjectsFactory validClientID
		password: testObjectsFactory correctPassword.
		
	restInterface 
		add: 1 
		of: testObjectsFactory itemSoldByTheStore 
		toCartWithID: cartID.
	
	transactionID := restInterface 
		checkOutCartWithID: cartID 
		withCardNumber: testObjectsFactory validCardNumber 
		expiring: testObjectsFactory expirationDateNotReached 
		owner: testObjectsFactory validCreditCardOwnersName.
	
	self assert: testObjectsFactory itemSoldByTheStorePrice 
		equals: (restInterface moneyDebitedInTransactionWithID: transactionID).! !
!RestInterfaceTest methodsFor: 'as yet unclassified' stamp: 'JEA 11/30/2020 22:53:24' prior: 50876772!
test03canCreateCartForWellAuthenticatedClient
	| restInterface authenticatorSimulator cartID cartList |
	
	authenticatorSimulator := AuthenticatorSimulator newSimulatingValidAuthentication.
	
	restInterface := RestInterface 
		newWithAuthenticator: authenticatorSimulator 
		withMerchantProcessor: self withCatalog: Dictionary new 
		withClock: Clock newSimulatingRealTime.
	
	cartID := restInterface 
				createCartFor: testObjectsFactory validClientID 
				password: testObjectsFactory correctPassword.
	
	cartList := restInterface listItemsInCartWithID: cartID.
	
	self assert: cartList isEmpty.! !
!RestInterfaceTest methodsFor: 'as yet unclassified' stamp: 'JEA 11/30/2020 22:53:24' prior: 50876750!
test02cannotCreateCartForClientWithWrongPassword
	| restInterface authenticatorSimulator |
	
	authenticatorSimulator := AuthenticatorSimulator newSimulatingValidAuthentication.
	authenticatorSimulator simulateWrongPassword.
	
	restInterface := RestInterface 
		newWithAuthenticator: authenticatorSimulator 
		withMerchantProcessor: self withCatalog: Dictionary new 
		withClock: Clock newSimulatingRealTime.
	
	self should: [ restInterface 
				createCartFor: testObjectsFactory validClientID 
				password: testObjectsFactory correctPassword. ]
		raise: Error
		withMessageText: RestInterface authenticationFailedMessage.! !
!RestInterfaceTest methodsFor: 'as yet unclassified' stamp: 'JEA 11/30/2020 22:53:24' prior: 50876852!
test06canAddItemToCartWithValidID
	| restInterface cartID |

	restInterface := RestInterface 
		newWithAuthenticator: AuthenticatorSimulator newSimulatingValidAuthentication 
		withMerchantProcessor: self withCatalog: testObjectsFactory defaultCatalog 
		withClock: Clock newSimulatingRealTime.
	
	cartID := restInterface 
		createCartFor: testObjectsFactory validClientID
		password: testObjectsFactory correctPassword.
	
	restInterface 
		add: 2 
		of: testObjectsFactory itemSoldByTheStore 
		toCartWithID: cartID.
	
	self assert: 2 
		equals: ((restInterface listItemsInCartWithID: cartID) occurrencesOf: testObjectsFactory itemSoldByTheStore).! !
!RestInterfaceTest methodsFor: 'as yet unclassified' stamp: 'JEA 11/30/2020 22:53:24' prior: 50876521!
test07cantCheckOutCartWithInvalidID
	| restInterface |

	restInterface := RestInterface 
		newWithAuthenticator: AuthenticatorSimulator newSimulatingValidAuthentication 
		withMerchantProcessor: self withCatalog: testObjectsFactory defaultCatalog withClock: Clock newSimulatingRealTime.
	
	self should: [ 
		restInterface 
			checkOutCartWithID: testObjectsFactory invalidCartID 
			withCardNumber: testObjectsFactory validCardNumber 
			expiring: testObjectsFactory expirationDateNotReached 
			owner: testObjectsFactory validCreditCardOwnersName. 
		]
		raise: Error
		withMessageText: RestInterface invalidCartIDMessage.! !
!RestInterfaceTest methodsFor: 'as yet unclassified' stamp: 'JEA 11/30/2020 22:53:24' prior: 50876794!
test04canCreateMoreThanOneCartWithDifferentIDs
	| restInterface authenticatorSimulator cartID1 cartID2 |
	
	authenticatorSimulator := AuthenticatorSimulator newSimulatingValidAuthentication.
	
	restInterface := RestInterface 
		newWithAuthenticator: authenticatorSimulator 
		withMerchantProcessor: self withCatalog: Dictionary new 
		withClock: Clock newSimulatingRealTime.
	
	cartID1 := restInterface 
				createCartFor: testObjectsFactory validClientID 
				password: testObjectsFactory correctPassword.

	cartID2 := restInterface 
				createCartFor: testObjectsFactory validClientID 
				password: testObjectsFactory correctPassword.
	
	self assert: cartID1 ~= cartID2.! !
!RestInterfaceTest methodsFor: 'as yet unclassified' stamp: 'JEA 11/30/2020 22:53:24' prior: 50877820!
test10cannotListCartWithInvalidID
	| restInterface |

	restInterface := RestInterface 
		newWithAuthenticator: AuthenticatorSimulator newSimulatingValidAuthentication 
		withMerchantProcessor: self withCatalog: testObjectsFactory defaultCatalog 
		withClock: Clock newSimulatingRealTime.
	
	self should: [ restInterface listItemsInCartWithID: testObjectsFactory invalidCartID. ]
		raise: Error
		withMessageText: RestInterface invalidCartIDMessage.! !
!RestInterfaceTest methodsFor: 'as yet unclassified' stamp: 'JEA 11/30/2020 22:53:24' prior: 50876875!
test08cantCheckOutCartWithInvalidCreditCardNumber
	| restInterface cartID |

	restInterface := RestInterface 
		newWithAuthenticator: AuthenticatorSimulator newSimulatingValidAuthentication 
		withMerchantProcessor: self withCatalog: testObjectsFactory defaultCatalog 
		withClock: Clock newSimulatingRealTime.
		
	cartID := restInterface
		createCartFor: testObjectsFactory validClientID
		password: testObjectsFactory correctPassword.
	
	self should: [ 
		restInterface 
			checkOutCartWithID: cartID 
			withCardNumber: testObjectsFactory invalidCardNumber 
			expiring: testObjectsFactory expirationDateNotReached 
			owner: testObjectsFactory validCreditCardOwnersName. 
		]
		raise: Error
		withMessageText: RestInterface invalidCreditCardNumberMessage.! !

!methodRemoval: RestInterface class #newWithAuthenticator:withCatalog:withClock: stamp: 'JEA 11/30/2020 22:53:24'!
newWithAuthenticator: anAuthenticator withCatalog: aCatalog withClock: aClock  

	^self new initializeWithAuthenticator: anAuthenticator withCatalog: aCatalog withClock: aClock.!
!RestInterfaceTest methodsFor: 'tests - creating cart' stamp: 'JEA 11/30/2020 22:55:35' prior: 50879130!
test01cannotCreateCartForInvalidClientID
	| restInterface authenticatorSimulator |
	
	authenticatorSimulator := AuthenticatorSimulator newSimulatingValidAuthentication.
	authenticatorSimulator simulateInvalidClientID.

	restInterface := RestInterface 
		newWithAuthenticator: authenticatorSimulator 
		withMerchantProcessor: self 
		withCatalog: Dictionary new 
		withClock: Clock newSimulatingRealTime.
	
	self should: [ restInterface 
				createCartFor: testObjectsFactory validClientID 
				password: testObjectsFactory correctPassword. ]
		raise: Error
		withMessageText: RestInterface authenticationFailedMessage.! !
!RestInterfaceTest methodsFor: 'tests - creating cart' stamp: 'JEA 11/30/2020 22:55:47' prior: 50879267!
test02cannotCreateCartForClientWithWrongPassword
	| restInterface authenticatorSimulator |
	
	authenticatorSimulator := AuthenticatorSimulator newSimulatingValidAuthentication.
	authenticatorSimulator simulateWrongPassword.
	
	restInterface := RestInterface 
		newWithAuthenticator: authenticatorSimulator 
		withMerchantProcessor: self 
		withCatalog: Dictionary new 
		withClock: Clock newSimulatingRealTime.
	
	self should: [ restInterface 
				createCartFor: testObjectsFactory validClientID 
				password: testObjectsFactory correctPassword. ]
		raise: Error
		withMessageText: RestInterface authenticationFailedMessage.! !
!RestInterfaceTest methodsFor: 'tests - creating cart' stamp: 'JEA 11/30/2020 22:55:51' prior: 50879244!
test03canCreateCartForWellAuthenticatedClient
	| restInterface authenticatorSimulator cartID cartList |
	
	authenticatorSimulator := AuthenticatorSimulator newSimulatingValidAuthentication.
	
	restInterface := RestInterface 
		newWithAuthenticator: authenticatorSimulator 
		withMerchantProcessor: self 
		withCatalog: Dictionary new 
		withClock: Clock newSimulatingRealTime.
	
	cartID := restInterface 
				createCartFor: testObjectsFactory validClientID 
				password: testObjectsFactory correctPassword.
	
	cartList := restInterface listItemsInCartWithID: cartID.
	
	self assert: cartList isEmpty.! !
!RestInterfaceTest methodsFor: 'tests - creating cart' stamp: 'JEA 11/30/2020 22:55:54' prior: 50879337!
test04canCreateMoreThanOneCartWithDifferentIDs
	| restInterface authenticatorSimulator cartID1 cartID2 |
	
	authenticatorSimulator := AuthenticatorSimulator newSimulatingValidAuthentication.
	
	restInterface := RestInterface 
		newWithAuthenticator: authenticatorSimulator 
		withMerchantProcessor: self 
		withCatalog: Dictionary new 
		withClock: Clock newSimulatingRealTime.
	
	cartID1 := restInterface 
				createCartFor: testObjectsFactory validClientID 
				password: testObjectsFactory correctPassword.

	cartID2 := restInterface 
				createCartFor: testObjectsFactory validClientID 
				password: testObjectsFactory correctPassword.
	
	self assert: cartID1 ~= cartID2.! !
!RestInterfaceTest methodsFor: 'merchant processor protocol' stamp: 'JEA 11/30/2020 22:57:20'!
debit: anAmount from: aCreditCard 

	^[  ].! !
!RestInterfaceTest methodsFor: 'merchant processor protocol' stamp: 'JEA 11/30/2020 22:57:28' prior: 50879511!
debit: anAmount from: aCreditCard! !

!testRun: #RestInterfaceTest #test01cannotCreateCartForInvalidClientID stamp: 'JEA 11/30/2020 22:57:38'!
PASSED!

!testRun: #RestInterfaceTest #test02cannotCreateCartForClientWithWrongPassword stamp: 'JEA 11/30/2020 22:57:38'!
PASSED!

!testRun: #RestInterfaceTest #test03canCreateCartForWellAuthenticatedClient stamp: 'JEA 11/30/2020 22:57:38'!
PASSED!

!testRun: #RestInterfaceTest #test04canCreateMoreThanOneCartWithDifferentIDs stamp: 'JEA 11/30/2020 22:57:38'!
PASSED!

!testRun: #RestInterfaceTest #test05cannotAddToCartWithInvalidID stamp: 'JEA 11/30/2020 22:57:38'!
PASSED!

!testRun: #RestInterfaceTest #test06canAddItemToCartWithValidID stamp: 'JEA 11/30/2020 22:57:38'!
PASSED!

!testRun: #RestInterfaceTest #test07cantCheckOutCartWithInvalidID stamp: 'JEA 11/30/2020 22:57:38'!
PASSED!

!testRun: #RestInterfaceTest #test08cantCheckOutCartWithInvalidCreditCardNumber stamp: 'JEA 11/30/2020 22:57:38'!
PASSED!

!testRun: #RestInterfaceTest #test09canCheckOutNonEmptyValidCartWithValidCreditCard stamp: 'JEA 11/30/2020 22:57:38'!
ERROR!

!testRun: #RestInterfaceTest #test10cannotListCartWithInvalidID stamp: 'JEA 11/30/2020 22:57:38'!
PASSED!

!testRun: #RestInterfaceTest #test11cantAccessCartAfterTimeoutSinceCreated stamp: 'JEA 11/30/2020 22:57:38'!
PASSED!

!testRun: #RestInterfaceTest #test09canCheckOutNonEmptyValidCartWithValidCreditCard stamp: 'JEA 11/30/2020 22:57:38'!
ERROR!
!RestInterface methodsFor: 'initialization' stamp: 'JEA 11/30/2020 22:58:49'!
initializeWithAuthenticator: anAuthenticator withMerchantProcessor: aMerchantProcessor withCatalog: aCatalog withClock: aClock

	authenticator := anAuthenticator.
	lastCartID := 0.
	catalog := aCatalog.
	clock := aClock.
	carts := Dictionary new.
	lastInteractionForCart := Dictionary new.! !
!RestInterface class methodsFor: 'as yet unclassified' stamp: 'JEA 11/30/2020 22:58:49' prior: 50879119!
newWithAuthenticator: anAuthenticator withMerchantProcessor: aMerchantProcessor withCatalog: aCatalog withClock: aClock  

	^self new initializeWithAuthenticator: anAuthenticator withMerchantProcessor: aMerchantProcessor withCatalog: aCatalog withClock: aClock.! !

!methodRemoval: RestInterface #initializeWithAuthenticator:withCatalog:withClock: stamp: 'JEA 11/30/2020 22:58:49'!
initializeWithAuthenticator: anAuthenticator withCatalog: aCatalog withClock: aClock

	authenticator := anAuthenticator.
	lastCartID := 0.
	catalog := aCatalog.
	clock := aClock.
	carts := Dictionary new.
	lastInteractionForCart := Dictionary new.!

!classDefinition: #RestInterface category: 'TusLibros' stamp: 'JEA 11/30/2020 22:59:08'!
Object subclass: #RestInterface
	instanceVariableNames: 'authenticator lastCartID carts lastInteractionForCart catalog clock transactionValues salesBook merchantProcessor'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!
!RestInterface methodsFor: 'initialization' stamp: 'JEA 11/30/2020 22:59:07' prior: 50879564!
initializeWithAuthenticator: anAuthenticator withMerchantProcessor: aMerchantProcessor withCatalog: aCatalog withClock: aClock

	authenticator := anAuthenticator.
	lastCartID := 0.
	catalog := aCatalog.
	clock := aClock.
	merchantProcessor := aMerchantProcessor.
	carts := Dictionary new.
	lastInteractionForCart := Dictionary new.! !
!RestInterface methodsFor: 'api - private' stamp: 'JEA 11/30/2020 22:59:24' prior: 50878681!
checkout: aCart withCard: aCard
	| cashier |

	cashier:= Cashier 
		toCheckout: aCart
		charging: aCard
		through: merchantProcessor
		on: clock now date
		registeringOn: salesBook.
	
	cashier checkOut.! !

!testRun: #RestInterfaceTest #test01cannotCreateCartForInvalidClientID stamp: 'JEA 11/30/2020 22:59:26'!
PASSED!

!testRun: #RestInterfaceTest #test02cannotCreateCartForClientWithWrongPassword stamp: 'JEA 11/30/2020 22:59:26'!
PASSED!

!testRun: #RestInterfaceTest #test03canCreateCartForWellAuthenticatedClient stamp: 'JEA 11/30/2020 22:59:26'!
PASSED!

!testRun: #RestInterfaceTest #test04canCreateMoreThanOneCartWithDifferentIDs stamp: 'JEA 11/30/2020 22:59:26'!
PASSED!

!testRun: #RestInterfaceTest #test05cannotAddToCartWithInvalidID stamp: 'JEA 11/30/2020 22:59:26'!
PASSED!

!testRun: #RestInterfaceTest #test06canAddItemToCartWithValidID stamp: 'JEA 11/30/2020 22:59:26'!
PASSED!

!testRun: #RestInterfaceTest #test07cantCheckOutCartWithInvalidID stamp: 'JEA 11/30/2020 22:59:26'!
PASSED!

!testRun: #RestInterfaceTest #test08cantCheckOutCartWithInvalidCreditCardNumber stamp: 'JEA 11/30/2020 22:59:26'!
PASSED!

!testRun: #RestInterfaceTest #test09canCheckOutNonEmptyValidCartWithValidCreditCard stamp: 'JEA 11/30/2020 22:59:26'!
ERROR!

!testRun: #RestInterfaceTest #test10cannotListCartWithInvalidID stamp: 'JEA 11/30/2020 22:59:26'!
PASSED!

!testRun: #RestInterfaceTest #test11cantAccessCartAfterTimeoutSinceCreated stamp: 'JEA 11/30/2020 22:59:26'!
PASSED!

!testRun: #RestInterfaceTest #test09canCheckOutNonEmptyValidCartWithValidCreditCard stamp: 'JEA 11/30/2020 22:59:26'!
ERROR!
!RestInterface methodsFor: 'initialization' stamp: 'JEA 11/30/2020 23:00:39' prior: 50879611!
initializeWithAuthenticator: anAuthenticator withMerchantProcessor: aMerchantProcessor withCatalog: aCatalog withClock: aClock

	authenticator := anAuthenticator.
	lastCartID := 0.
	catalog := aCatalog.
	clock := aClock.
	merchantProcessor := aMerchantProcessor.
	salesBook := Dictionary new.
	carts := Dictionary new.
	lastInteractionForCart := Dictionary new.! !

!testRun: #RestInterfaceTest #test01cannotCreateCartForInvalidClientID stamp: 'JEA 11/30/2020 23:00:41'!
PASSED!

!testRun: #RestInterfaceTest #test02cannotCreateCartForClientWithWrongPassword stamp: 'JEA 11/30/2020 23:00:41'!
PASSED!

!testRun: #RestInterfaceTest #test03canCreateCartForWellAuthenticatedClient stamp: 'JEA 11/30/2020 23:00:41'!
PASSED!

!testRun: #RestInterfaceTest #test04canCreateMoreThanOneCartWithDifferentIDs stamp: 'JEA 11/30/2020 23:00:41'!
PASSED!

!testRun: #RestInterfaceTest #test05cannotAddToCartWithInvalidID stamp: 'JEA 11/30/2020 23:00:41'!
PASSED!

!testRun: #RestInterfaceTest #test06canAddItemToCartWithValidID stamp: 'JEA 11/30/2020 23:00:41'!
PASSED!

!testRun: #RestInterfaceTest #test07cantCheckOutCartWithInvalidID stamp: 'JEA 11/30/2020 23:00:41'!
PASSED!

!testRun: #RestInterfaceTest #test08cantCheckOutCartWithInvalidCreditCardNumber stamp: 'JEA 11/30/2020 23:00:41'!
PASSED!

!testRun: #RestInterfaceTest #test09canCheckOutNonEmptyValidCartWithValidCreditCard stamp: 'JEA 11/30/2020 23:00:41'!
ERROR!

!testRun: #RestInterfaceTest #test10cannotListCartWithInvalidID stamp: 'JEA 11/30/2020 23:00:41'!
PASSED!

!testRun: #RestInterfaceTest #test11cantAccessCartAfterTimeoutSinceCreated stamp: 'JEA 11/30/2020 23:00:41'!
PASSED!

!testRun: #RestInterfaceTest #test09canCheckOutNonEmptyValidCartWithValidCreditCard stamp: 'JEA 11/30/2020 23:00:41'!
ERROR!
!RestInterface methodsFor: 'initialization' stamp: 'JEA 11/30/2020 23:01:35' prior: 50879679!
initializeWithAuthenticator: anAuthenticator withMerchantProcessor: aMerchantProcessor withCatalog: aCatalog withClock: aClock

	authenticator := anAuthenticator.
	lastCartID := 0.
	catalog := aCatalog.
	clock := aClock.
	merchantProcessor := aMerchantProcessor.
	transactionValues := Dictionary new.
	carts := Dictionary new.
	lastInteractionForCart := Dictionary new.! !

Object subclass: #RestInterface
	instanceVariableNames: 'authenticator lastCartID carts lastInteractionForCart catalog clock transactionValues merchantProcessor'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

!classDefinition: #RestInterface category: 'TusLibros' stamp: 'JEA 11/30/2020 23:01:47'!
Object subclass: #RestInterface
	instanceVariableNames: 'authenticator lastCartID carts lastInteractionForCart catalog clock transactionValues merchantProcessor'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!
!RestInterface methodsFor: 'api - private' stamp: 'JEA 11/30/2020 23:02:00' prior: 50879625!
checkout: aCart withCard: aCard
	| cashier |

	cashier:= Cashier 
		toCheckout: aCart
		charging: aCard
		through: merchantProcessor
		on: clock now date
		registeringOn: transactionValues.
	
	cashier checkOut.! !

!testRun: #RestInterfaceTest #test01cannotCreateCartForInvalidClientID stamp: 'JEA 11/30/2020 23:02:01'!
PASSED!

!testRun: #RestInterfaceTest #test02cannotCreateCartForClientWithWrongPassword stamp: 'JEA 11/30/2020 23:02:01'!
PASSED!

!testRun: #RestInterfaceTest #test03canCreateCartForWellAuthenticatedClient stamp: 'JEA 11/30/2020 23:02:01'!
PASSED!

!testRun: #RestInterfaceTest #test04canCreateMoreThanOneCartWithDifferentIDs stamp: 'JEA 11/30/2020 23:02:01'!
PASSED!

!testRun: #RestInterfaceTest #test05cannotAddToCartWithInvalidID stamp: 'JEA 11/30/2020 23:02:01'!
PASSED!

!testRun: #RestInterfaceTest #test06canAddItemToCartWithValidID stamp: 'JEA 11/30/2020 23:02:01'!
PASSED!

!testRun: #RestInterfaceTest #test07cantCheckOutCartWithInvalidID stamp: 'JEA 11/30/2020 23:02:01'!
PASSED!

!testRun: #RestInterfaceTest #test08cantCheckOutCartWithInvalidCreditCardNumber stamp: 'JEA 11/30/2020 23:02:01'!
PASSED!

!testRun: #RestInterfaceTest #test09canCheckOutNonEmptyValidCartWithValidCreditCard stamp: 'JEA 11/30/2020 23:02:01'!
ERROR!

!testRun: #RestInterfaceTest #test10cannotListCartWithInvalidID stamp: 'JEA 11/30/2020 23:02:01'!
PASSED!

!testRun: #RestInterfaceTest #test11cantAccessCartAfterTimeoutSinceCreated stamp: 'JEA 11/30/2020 23:02:02'!
PASSED!

!testRun: #RestInterfaceTest #test09canCheckOutNonEmptyValidCartWithValidCreditCard stamp: 'JEA 11/30/2020 23:02:02'!
ERROR!
!RestInterface methodsFor: 'api' stamp: 'JEA 11/30/2020 23:12:06' prior: 50878138!
checkOutCartWithID: aCartID withCardNumber: aCardNumber expiring: aGregorianMonthOfYear owner: aName
	| creditCard |

	self ensureCartIDCanBeInteractedWith: aCartID.
	self ensureCardNumberIsValid: aCardNumber.
	
	self resetTimerOfCartWithID: aCartID.
	
	creditCard := CreditCard expiringOn: aGregorianMonthOfYear.
	
	^self checkout: (carts at: aCartID) withCard: creditCard.! !
!RestInterface methodsFor: 'api - private' stamp: 'JEA 11/30/2020 23:12:11' prior: 50879770!
checkout: aCart withCard: aCard
	| cashier |

	cashier:= Cashier 
		toCheckout: aCart
		charging: aCard
		through: merchantProcessor
		on: clock now date
		registeringOn: transactionValues.
	
	^cashier checkOut.! !

!testRun: #RestInterfaceTest #test01cannotCreateCartForInvalidClientID stamp: 'JEA 11/30/2020 23:12:11'!
PASSED!

!testRun: #RestInterfaceTest #test02cannotCreateCartForClientWithWrongPassword stamp: 'JEA 11/30/2020 23:12:11'!
PASSED!

!testRun: #RestInterfaceTest #test03canCreateCartForWellAuthenticatedClient stamp: 'JEA 11/30/2020 23:12:11'!
PASSED!

!testRun: #RestInterfaceTest #test04canCreateMoreThanOneCartWithDifferentIDs stamp: 'JEA 11/30/2020 23:12:11'!
PASSED!

!testRun: #RestInterfaceTest #test05cannotAddToCartWithInvalidID stamp: 'JEA 11/30/2020 23:12:11'!
PASSED!

!testRun: #RestInterfaceTest #test06canAddItemToCartWithValidID stamp: 'JEA 11/30/2020 23:12:11'!
PASSED!

!testRun: #RestInterfaceTest #test07cantCheckOutCartWithInvalidID stamp: 'JEA 11/30/2020 23:12:11'!
PASSED!

!testRun: #RestInterfaceTest #test08cantCheckOutCartWithInvalidCreditCardNumber stamp: 'JEA 11/30/2020 23:12:11'!
PASSED!

!testRun: #RestInterfaceTest #test09canCheckOutNonEmptyValidCartWithValidCreditCard stamp: 'JEA 11/30/2020 23:12:11'!
PASSED!

!testRun: #RestInterfaceTest #test10cannotListCartWithInvalidID stamp: 'JEA 11/30/2020 23:12:11'!
PASSED!

!testRun: #RestInterfaceTest #test11cantAccessCartAfterTimeoutSinceCreated stamp: 'JEA 11/30/2020 23:12:11'!
PASSED!

----SNAPSHOT----(30 November 2020 23:16:19) CuisUniversity-4384.image priorSource: 17374440!

----QUIT----(30 November 2020 23:16:25) CuisUniversity-4384.image priorSource: 17543568!

----STARTUP---- (2 December 2020 15:21:07) as /home/jadmin/Documents/IngenierÃ­a de Software 1/Cuis University/Cuis University/CuisUniversity-4384.image!


!testRun: #CartTest #test01NewCartsAreCreatedEmpty stamp: 'JEA 12/2/2020 15:26:00'!
PASSED!

!testRun: #CartTest #test02CanNotAddItemsThatDoNotBelongToStore stamp: 'JEA 12/2/2020 15:26:00'!
PASSED!

!testRun: #CartTest #test03AfterAddingAnItemTheCartIsNotEmptyAnymore stamp: 'JEA 12/2/2020 15:26:00'!
PASSED!

!testRun: #CartTest #test04CanNotAddNonPositiveNumberOfItems stamp: 'JEA 12/2/2020 15:26:00'!
PASSED!

!testRun: #CartTest #test05CanNotAddMoreThanOneItemNotSellByTheStore stamp: 'JEA 12/2/2020 15:26:00'!
PASSED!

!testRun: #CartTest #test06CartRemembersAddedItems stamp: 'JEA 12/2/2020 15:26:00'!
PASSED!

!testRun: #CartTest #test07CartDoesNotHoldNotAddedItems stamp: 'JEA 12/2/2020 15:26:00'!
PASSED!

!testRun: #CartTest #test08CartRemembersTheNumberOfAddedItems stamp: 'JEA 12/2/2020 15:26:00'!
PASSED!

!testRun: #CashierTest #test01CanNotCheckoutAnEmptyCart stamp: 'JEA 12/2/2020 15:26:00'!
PASSED!

!testRun: #CashierTest #test02CalculatedTotalIsCorrect stamp: 'JEA 12/2/2020 15:26:00'!
PASSED!

!testRun: #CashierTest #test03CanNotCheckoutWithAnExpiredCreditCart stamp: 'JEA 12/2/2020 15:26:00'!
PASSED!

!testRun: #CashierTest #test04CheckoutRegistersASale stamp: 'JEA 12/2/2020 15:26:00'!
PASSED!

!testRun: #CashierTest #test05CashierChargesCreditCardUsingMerchantProcessor stamp: 'JEA 12/2/2020 15:26:00'!
PASSED!

!testRun: #CashierTest #test06CashierDoesNotSaleWhenTheCreditCardHasNoCredit stamp: 'JEA 12/2/2020 15:26:00'!
PASSED!

!testRun: #RestInterfaceTest #test01cannotCreateCartForInvalidClientID stamp: 'JEA 12/2/2020 15:26:00'!
PASSED!

!testRun: #RestInterfaceTest #test02cannotCreateCartForClientWithWrongPassword stamp: 'JEA 12/2/2020 15:26:00'!
PASSED!

!testRun: #RestInterfaceTest #test03canCreateCartForWellAuthenticatedClient stamp: 'JEA 12/2/2020 15:26:00'!
PASSED!

!testRun: #RestInterfaceTest #test04canCreateMoreThanOneCartWithDifferentIDs stamp: 'JEA 12/2/2020 15:26:00'!
PASSED!

!testRun: #RestInterfaceTest #test05cannotAddToCartWithInvalidID stamp: 'JEA 12/2/2020 15:26:00'!
PASSED!

!testRun: #RestInterfaceTest #test06canAddItemToCartWithValidID stamp: 'JEA 12/2/2020 15:26:00'!
PASSED!

!testRun: #RestInterfaceTest #test07cantCheckOutCartWithInvalidID stamp: 'JEA 12/2/2020 15:26:00'!
PASSED!

!testRun: #RestInterfaceTest #test08cantCheckOutCartWithInvalidCreditCardNumber stamp: 'JEA 12/2/2020 15:26:00'!
PASSED!

!testRun: #RestInterfaceTest #test09canCheckOutNonEmptyValidCartWithValidCreditCard stamp: 'JEA 12/2/2020 15:26:00'!
PASSED!

!testRun: #RestInterfaceTest #test10cannotListCartWithInvalidID stamp: 'JEA 12/2/2020 15:26:00'!
PASSED!

!testRun: #RestInterfaceTest #test11cantAccessCartAfterTimeoutSinceCreated stamp: 'JEA 12/2/2020 15:26:00'!
PASSED!

!testRun: #CartTest #test01NewCartsAreCreatedEmpty stamp: 'JEA 12/2/2020 16:43:51'!
PASSED!

!testRun: #CartTest #test02CanNotAddItemsThatDoNotBelongToStore stamp: 'JEA 12/2/2020 16:43:51'!
PASSED!

!testRun: #CartTest #test03AfterAddingAnItemTheCartIsNotEmptyAnymore stamp: 'JEA 12/2/2020 16:43:51'!
PASSED!

!testRun: #CartTest #test04CanNotAddNonPositiveNumberOfItems stamp: 'JEA 12/2/2020 16:43:51'!
PASSED!

!testRun: #CartTest #test05CanNotAddMoreThanOneItemNotSellByTheStore stamp: 'JEA 12/2/2020 16:43:51'!
PASSED!

!testRun: #CartTest #test06CartRemembersAddedItems stamp: 'JEA 12/2/2020 16:43:51'!
PASSED!

!testRun: #CartTest #test07CartDoesNotHoldNotAddedItems stamp: 'JEA 12/2/2020 16:43:51'!
PASSED!

!testRun: #CartTest #test08CartRemembersTheNumberOfAddedItems stamp: 'JEA 12/2/2020 16:43:51'!
PASSED!

!testRun: #CashierTest #test01CanNotCheckoutAnEmptyCart stamp: 'JEA 12/2/2020 16:43:51'!
PASSED!

!testRun: #CashierTest #test02CalculatedTotalIsCorrect stamp: 'JEA 12/2/2020 16:43:51'!
PASSED!

!testRun: #CashierTest #test03CanNotCheckoutWithAnExpiredCreditCart stamp: 'JEA 12/2/2020 16:43:51'!
PASSED!

!testRun: #CashierTest #test04CheckoutRegistersASale stamp: 'JEA 12/2/2020 16:43:51'!
PASSED!

!testRun: #CashierTest #test05CashierChargesCreditCardUsingMerchantProcessor stamp: 'JEA 12/2/2020 16:43:51'!
PASSED!

!testRun: #CashierTest #test06CashierDoesNotSaleWhenTheCreditCardHasNoCredit stamp: 'JEA 12/2/2020 16:43:51'!
PASSED!

!testRun: #RestInterfaceTest #test01cannotCreateCartForInvalidClientID stamp: 'JEA 12/2/2020 16:43:51'!
PASSED!

!testRun: #RestInterfaceTest #test02cannotCreateCartForClientWithWrongPassword stamp: 'JEA 12/2/2020 16:43:51'!
PASSED!

!testRun: #RestInterfaceTest #test03canCreateCartForWellAuthenticatedClient stamp: 'JEA 12/2/2020 16:43:51'!
PASSED!

!testRun: #RestInterfaceTest #test04canCreateMoreThanOneCartWithDifferentIDs stamp: 'JEA 12/2/2020 16:43:51'!
PASSED!

!testRun: #RestInterfaceTest #test05cannotAddToCartWithInvalidID stamp: 'JEA 12/2/2020 16:43:51'!
PASSED!

!testRun: #RestInterfaceTest #test06canAddItemToCartWithValidID stamp: 'JEA 12/2/2020 16:43:51'!
PASSED!

!testRun: #RestInterfaceTest #test07cantCheckOutCartWithInvalidID stamp: 'JEA 12/2/2020 16:43:51'!
PASSED!

!testRun: #RestInterfaceTest #test08cantCheckOutCartWithInvalidCreditCardNumber stamp: 'JEA 12/2/2020 16:43:51'!
PASSED!

!testRun: #RestInterfaceTest #test09canCheckOutNonEmptyValidCartWithValidCreditCard stamp: 'JEA 12/2/2020 16:43:51'!
PASSED!

!testRun: #RestInterfaceTest #test10cannotListCartWithInvalidID stamp: 'JEA 12/2/2020 16:43:51'!
PASSED!

!testRun: #RestInterfaceTest #test11cantAccessCartAfterTimeoutSinceCreated stamp: 'JEA 12/2/2020 16:43:51'!
PASSED!
!RestInterface methodsFor: 'api' stamp: 'JEA 12/2/2020 16:44:04' prior: 50877251!
createCartFor: aClientID password: aPassword
	| cartID |
	
	self authenticate: aClientID with: aPassword.

	cartID := self nextCartID.
	self resetTimerOfCartWithID: cartID.	
	carts at: cartID put: (Cart acceptingItemsOf: catalog).
	
	^cartID.! !

!testRun: #CartTest #test01NewCartsAreCreatedEmpty stamp: 'JEA 12/2/2020 16:44:06'!
PASSED!

!testRun: #CartTest #test02CanNotAddItemsThatDoNotBelongToStore stamp: 'JEA 12/2/2020 16:44:06'!
PASSED!

!testRun: #CartTest #test03AfterAddingAnItemTheCartIsNotEmptyAnymore stamp: 'JEA 12/2/2020 16:44:06'!
PASSED!

!testRun: #CartTest #test04CanNotAddNonPositiveNumberOfItems stamp: 'JEA 12/2/2020 16:44:06'!
PASSED!

!testRun: #CartTest #test05CanNotAddMoreThanOneItemNotSellByTheStore stamp: 'JEA 12/2/2020 16:44:06'!
PASSED!

!testRun: #CartTest #test06CartRemembersAddedItems stamp: 'JEA 12/2/2020 16:44:06'!
PASSED!

!testRun: #CartTest #test07CartDoesNotHoldNotAddedItems stamp: 'JEA 12/2/2020 16:44:06'!
PASSED!

!testRun: #CartTest #test08CartRemembersTheNumberOfAddedItems stamp: 'JEA 12/2/2020 16:44:06'!
PASSED!

!testRun: #CashierTest #test01CanNotCheckoutAnEmptyCart stamp: 'JEA 12/2/2020 16:44:06'!
PASSED!

!testRun: #CashierTest #test02CalculatedTotalIsCorrect stamp: 'JEA 12/2/2020 16:44:06'!
PASSED!

!testRun: #CashierTest #test03CanNotCheckoutWithAnExpiredCreditCart stamp: 'JEA 12/2/2020 16:44:06'!
PASSED!

!testRun: #CashierTest #test04CheckoutRegistersASale stamp: 'JEA 12/2/2020 16:44:06'!
PASSED!

!testRun: #CashierTest #test05CashierChargesCreditCardUsingMerchantProcessor stamp: 'JEA 12/2/2020 16:44:06'!
PASSED!

!testRun: #CashierTest #test06CashierDoesNotSaleWhenTheCreditCardHasNoCredit stamp: 'JEA 12/2/2020 16:44:06'!
PASSED!

!testRun: #RestInterfaceTest #test01cannotCreateCartForInvalidClientID stamp: 'JEA 12/2/2020 16:44:06'!
PASSED!

!testRun: #RestInterfaceTest #test02cannotCreateCartForClientWithWrongPassword stamp: 'JEA 12/2/2020 16:44:06'!
PASSED!

!testRun: #RestInterfaceTest #test03canCreateCartForWellAuthenticatedClient stamp: 'JEA 12/2/2020 16:44:06'!
PASSED!

!testRun: #RestInterfaceTest #test04canCreateMoreThanOneCartWithDifferentIDs stamp: 'JEA 12/2/2020 16:44:06'!
PASSED!

!testRun: #RestInterfaceTest #test05cannotAddToCartWithInvalidID stamp: 'JEA 12/2/2020 16:44:06'!
PASSED!

!testRun: #RestInterfaceTest #test06canAddItemToCartWithValidID stamp: 'JEA 12/2/2020 16:44:06'!
PASSED!

!testRun: #RestInterfaceTest #test07cantCheckOutCartWithInvalidID stamp: 'JEA 12/2/2020 16:44:06'!
PASSED!

!testRun: #RestInterfaceTest #test08cantCheckOutCartWithInvalidCreditCardNumber stamp: 'JEA 12/2/2020 16:44:06'!
PASSED!

!testRun: #RestInterfaceTest #test09canCheckOutNonEmptyValidCartWithValidCreditCard stamp: 'JEA 12/2/2020 16:44:06'!
PASSED!

!testRun: #RestInterfaceTest #test10cannotListCartWithInvalidID stamp: 'JEA 12/2/2020 16:44:06'!
PASSED!

!testRun: #RestInterfaceTest #test11cantAccessCartAfterTimeoutSinceCreated stamp: 'JEA 12/2/2020 16:44:06'!
PASSED!

----SNAPSHOT----(2 December 2020 16:45:41) CuisUniversity-4384.image priorSource: 17543662!
!RestInterface methodsFor: 'api' stamp: 'JEA 12/2/2020 17:14:35' prior: 50880068!
createCartFor: aClientID password: aPassword
	| cartID |
	
	self authenticate: aClientID with: aPassword.

	cartID := self nextCartID.
	carts at: cartID put: (Cart acceptingItemsOf: catalog).
	
	self resetTimerOfCartWithID: cartID.	
	
	^cartID.! !
!RestInterface methodsFor: 'cartInfo' stamp: 'JEA 12/2/2020 17:30:41'!
cartExpirationDateTimeForID: aCartID

	! !
!RestInterface methodsFor: 'api - private' stamp: 'JEA 12/2/2020 17:31:13' prior: 50877675!
ensureCartIDIsNotTimedOut: aCartID
	
	(self cartExpirationDateTimeForID: aCartID <= clock now) 
		ifTrue: [ self error: self class cartTimedOutMessage. ].! !
!RestInterface methodsFor: 'api - private' stamp: 'JEA 12/2/2020 17:31:21' prior: 50880182!
ensureCartIDIsNotTimedOut: aCartID
	
	((self cartExpirationDateTimeForID: aCartID) <= clock now) 
		ifTrue: [ self error: self class cartTimedOutMessage. ].! !
!RestInterface methodsFor: 'api - private' stamp: 'JEA 12/2/2020 17:31:29' prior: 50880190!
ensureCartIDIsNotTimedOut: aCartID
	
	((self cartExpirationDateTimeForID: aCartID) <= clock now) 
		ifTrue: [ self error: self class cartTimedOutMessage. ].! !
!RestInterface methodsFor: 'cartInfo' stamp: 'JEA 12/2/2020 17:31:39' prior: 50880177!
cartExpirationDateTimeForID: aCartID

	^(lastInteractionForCart at: aCartID) next: 30 * minute.! !
!RestInterface methodsFor: 'api - private' stamp: 'JEA 12/2/2020 17:34:50' prior: 50880198!
ensureCartIDIsNotTimedOut: aCartID
	
	(self cartExpirationDateTimeForID: aCartID) <= clock now 
		ifTrue: [ self error: self class cartTimedOutMessage. ].! !

!testRun: #CartTest #test01NewCartsAreCreatedEmpty stamp: 'JEA 12/2/2020 17:34:53'!
PASSED!

!testRun: #CartTest #test02CanNotAddItemsThatDoNotBelongToStore stamp: 'JEA 12/2/2020 17:34:53'!
PASSED!

!testRun: #CartTest #test03AfterAddingAnItemTheCartIsNotEmptyAnymore stamp: 'JEA 12/2/2020 17:34:53'!
PASSED!

!testRun: #CartTest #test04CanNotAddNonPositiveNumberOfItems stamp: 'JEA 12/2/2020 17:34:53'!
PASSED!

!testRun: #CartTest #test05CanNotAddMoreThanOneItemNotSellByTheStore stamp: 'JEA 12/2/2020 17:34:53'!
PASSED!

!testRun: #CartTest #test06CartRemembersAddedItems stamp: 'JEA 12/2/2020 17:34:53'!
PASSED!

!testRun: #CartTest #test07CartDoesNotHoldNotAddedItems stamp: 'JEA 12/2/2020 17:34:53'!
PASSED!

!testRun: #CartTest #test08CartRemembersTheNumberOfAddedItems stamp: 'JEA 12/2/2020 17:34:53'!
PASSED!

!testRun: #CashierTest #test01CanNotCheckoutAnEmptyCart stamp: 'JEA 12/2/2020 17:34:53'!
PASSED!

!testRun: #CashierTest #test02CalculatedTotalIsCorrect stamp: 'JEA 12/2/2020 17:34:53'!
PASSED!

!testRun: #CashierTest #test03CanNotCheckoutWithAnExpiredCreditCart stamp: 'JEA 12/2/2020 17:34:53'!
PASSED!

!testRun: #CashierTest #test04CheckoutRegistersASale stamp: 'JEA 12/2/2020 17:34:53'!
PASSED!

!testRun: #CashierTest #test05CashierChargesCreditCardUsingMerchantProcessor stamp: 'JEA 12/2/2020 17:34:53'!
PASSED!

!testRun: #CashierTest #test06CashierDoesNotSaleWhenTheCreditCardHasNoCredit stamp: 'JEA 12/2/2020 17:34:53'!
PASSED!

!testRun: #RestInterfaceTest #test01cannotCreateCartForInvalidClientID stamp: 'JEA 12/2/2020 17:34:53'!
PASSED!

!testRun: #RestInterfaceTest #test02cannotCreateCartForClientWithWrongPassword stamp: 'JEA 12/2/2020 17:34:53'!
PASSED!

!testRun: #RestInterfaceTest #test03canCreateCartForWellAuthenticatedClient stamp: 'JEA 12/2/2020 17:34:53'!
PASSED!

!testRun: #RestInterfaceTest #test04canCreateMoreThanOneCartWithDifferentIDs stamp: 'JEA 12/2/2020 17:34:53'!
PASSED!

!testRun: #RestInterfaceTest #test05cannotAddToCartWithInvalidID stamp: 'JEA 12/2/2020 17:34:53'!
PASSED!

!testRun: #RestInterfaceTest #test06canAddItemToCartWithValidID stamp: 'JEA 12/2/2020 17:34:53'!
PASSED!

!testRun: #RestInterfaceTest #test07cantCheckOutCartWithInvalidID stamp: 'JEA 12/2/2020 17:34:53'!
PASSED!

!testRun: #RestInterfaceTest #test08cantCheckOutCartWithInvalidCreditCardNumber stamp: 'JEA 12/2/2020 17:34:53'!
PASSED!

!testRun: #RestInterfaceTest #test09canCheckOutNonEmptyValidCartWithValidCreditCard stamp: 'JEA 12/2/2020 17:34:53'!
PASSED!

!testRun: #RestInterfaceTest #test10cannotListCartWithInvalidID stamp: 'JEA 12/2/2020 17:34:53'!
PASSED!

!testRun: #RestInterfaceTest #test11cantAccessCartAfterTimeoutSinceCreated stamp: 'JEA 12/2/2020 17:34:53'!
PASSED!
!StoreTestObjectsFactory methodsFor: 'rest interface' stamp: 'JEA 12/2/2020 17:46:52' prior: 50875276!
invalidCardNumber

	^'1'.! !

!testRun: #CartTest #test01NewCartsAreCreatedEmpty stamp: 'JEA 12/2/2020 17:46:53'!
PASSED!

!testRun: #CartTest #test02CanNotAddItemsThatDoNotBelongToStore stamp: 'JEA 12/2/2020 17:46:53'!
PASSED!

!testRun: #CartTest #test03AfterAddingAnItemTheCartIsNotEmptyAnymore stamp: 'JEA 12/2/2020 17:46:53'!
PASSED!

!testRun: #CartTest #test04CanNotAddNonPositiveNumberOfItems stamp: 'JEA 12/2/2020 17:46:53'!
PASSED!

!testRun: #CartTest #test05CanNotAddMoreThanOneItemNotSellByTheStore stamp: 'JEA 12/2/2020 17:46:53'!
PASSED!

!testRun: #CartTest #test06CartRemembersAddedItems stamp: 'JEA 12/2/2020 17:46:53'!
PASSED!

!testRun: #CartTest #test07CartDoesNotHoldNotAddedItems stamp: 'JEA 12/2/2020 17:46:53'!
PASSED!

!testRun: #CartTest #test08CartRemembersTheNumberOfAddedItems stamp: 'JEA 12/2/2020 17:46:53'!
PASSED!

!testRun: #CashierTest #test01CanNotCheckoutAnEmptyCart stamp: 'JEA 12/2/2020 17:46:53'!
PASSED!

!testRun: #CashierTest #test02CalculatedTotalIsCorrect stamp: 'JEA 12/2/2020 17:46:53'!
PASSED!

!testRun: #CashierTest #test03CanNotCheckoutWithAnExpiredCreditCart stamp: 'JEA 12/2/2020 17:46:53'!
PASSED!

!testRun: #CashierTest #test04CheckoutRegistersASale stamp: 'JEA 12/2/2020 17:46:53'!
PASSED!

!testRun: #CashierTest #test05CashierChargesCreditCardUsingMerchantProcessor stamp: 'JEA 12/2/2020 17:46:53'!
PASSED!

!testRun: #CashierTest #test06CashierDoesNotSaleWhenTheCreditCardHasNoCredit stamp: 'JEA 12/2/2020 17:46:53'!
PASSED!

!testRun: #RestInterfaceTest #test01cannotCreateCartForInvalidClientID stamp: 'JEA 12/2/2020 17:46:53'!
PASSED!

!testRun: #RestInterfaceTest #test02cannotCreateCartForClientWithWrongPassword stamp: 'JEA 12/2/2020 17:46:53'!
PASSED!

!testRun: #RestInterfaceTest #test03canCreateCartForWellAuthenticatedClient stamp: 'JEA 12/2/2020 17:46:53'!
PASSED!

!testRun: #RestInterfaceTest #test04canCreateMoreThanOneCartWithDifferentIDs stamp: 'JEA 12/2/2020 17:46:53'!
PASSED!

!testRun: #RestInterfaceTest #test05cannotAddToCartWithInvalidID stamp: 'JEA 12/2/2020 17:46:53'!
PASSED!

!testRun: #RestInterfaceTest #test06canAddItemToCartWithValidID stamp: 'JEA 12/2/2020 17:46:53'!
PASSED!

!testRun: #RestInterfaceTest #test07cantCheckOutCartWithInvalidID stamp: 'JEA 12/2/2020 17:46:53'!
PASSED!

!testRun: #RestInterfaceTest #test08cantCheckOutCartWithInvalidCreditCardNumber stamp: 'JEA 12/2/2020 17:46:53'!
PASSED!

!testRun: #RestInterfaceTest #test09canCheckOutNonEmptyValidCartWithValidCreditCard stamp: 'JEA 12/2/2020 17:46:53'!
PASSED!

!testRun: #RestInterfaceTest #test10cannotListCartWithInvalidID stamp: 'JEA 12/2/2020 17:46:53'!
PASSED!

!testRun: #RestInterfaceTest #test11cantAccessCartAfterTimeoutSinceCreated stamp: 'JEA 12/2/2020 17:46:53'!
PASSED!
!StoreTestObjectsFactory methodsFor: 'rest interface' stamp: 'JEA 12/2/2020 17:47:20'!
invalidCardNumberShort

	^'1'.! !
!RestInterfaceTest methodsFor: 'as yet unclassified' stamp: 'JEA 12/2/2020 17:47:20' prior: 50879380!
test08cantCheckOutCartWithInvalidCreditCardNumber
	| restInterface cartID |

	restInterface := RestInterface 
		newWithAuthenticator: AuthenticatorSimulator newSimulatingValidAuthentication 
		withMerchantProcessor: self withCatalog: testObjectsFactory defaultCatalog 
		withClock: Clock newSimulatingRealTime.
		
	cartID := restInterface
		createCartFor: testObjectsFactory validClientID
		password: testObjectsFactory correctPassword.
	
	self should: [ 
		restInterface 
			checkOutCartWithID: cartID 
			withCardNumber: testObjectsFactory invalidCardNumberShort 
			expiring: testObjectsFactory expirationDateNotReached 
			owner: testObjectsFactory validCreditCardOwnersName. 
		]
		raise: Error
		withMessageText: RestInterface invalidCreditCardNumberMessage.! !

!methodRemoval: StoreTestObjectsFactory #invalidCardNumber stamp: 'JEA 12/2/2020 17:47:20'!
invalidCardNumber

	^'1'.!

!testRun: #CartTest #test01NewCartsAreCreatedEmpty stamp: 'JEA 12/2/2020 17:47:24'!
PASSED!

!testRun: #CartTest #test02CanNotAddItemsThatDoNotBelongToStore stamp: 'JEA 12/2/2020 17:47:24'!
PASSED!

!testRun: #CartTest #test03AfterAddingAnItemTheCartIsNotEmptyAnymore stamp: 'JEA 12/2/2020 17:47:24'!
PASSED!

!testRun: #CartTest #test04CanNotAddNonPositiveNumberOfItems stamp: 'JEA 12/2/2020 17:47:24'!
PASSED!

!testRun: #CartTest #test05CanNotAddMoreThanOneItemNotSellByTheStore stamp: 'JEA 12/2/2020 17:47:24'!
PASSED!

!testRun: #CartTest #test06CartRemembersAddedItems stamp: 'JEA 12/2/2020 17:47:24'!
PASSED!

!testRun: #CartTest #test07CartDoesNotHoldNotAddedItems stamp: 'JEA 12/2/2020 17:47:24'!
PASSED!

!testRun: #CartTest #test08CartRemembersTheNumberOfAddedItems stamp: 'JEA 12/2/2020 17:47:24'!
PASSED!

!testRun: #CashierTest #test01CanNotCheckoutAnEmptyCart stamp: 'JEA 12/2/2020 17:47:24'!
PASSED!

!testRun: #CashierTest #test02CalculatedTotalIsCorrect stamp: 'JEA 12/2/2020 17:47:24'!
PASSED!

!testRun: #CashierTest #test03CanNotCheckoutWithAnExpiredCreditCart stamp: 'JEA 12/2/2020 17:47:24'!
PASSED!

!testRun: #CashierTest #test04CheckoutRegistersASale stamp: 'JEA 12/2/2020 17:47:24'!
PASSED!

!testRun: #CashierTest #test05CashierChargesCreditCardUsingMerchantProcessor stamp: 'JEA 12/2/2020 17:47:24'!
PASSED!

!testRun: #CashierTest #test06CashierDoesNotSaleWhenTheCreditCardHasNoCredit stamp: 'JEA 12/2/2020 17:47:24'!
PASSED!

!testRun: #RestInterfaceTest #test01cannotCreateCartForInvalidClientID stamp: 'JEA 12/2/2020 17:47:24'!
PASSED!

!testRun: #RestInterfaceTest #test02cannotCreateCartForClientWithWrongPassword stamp: 'JEA 12/2/2020 17:47:24'!
PASSED!

!testRun: #RestInterfaceTest #test03canCreateCartForWellAuthenticatedClient stamp: 'JEA 12/2/2020 17:47:24'!
PASSED!

!testRun: #RestInterfaceTest #test04canCreateMoreThanOneCartWithDifferentIDs stamp: 'JEA 12/2/2020 17:47:24'!
PASSED!

!testRun: #RestInterfaceTest #test05cannotAddToCartWithInvalidID stamp: 'JEA 12/2/2020 17:47:24'!
PASSED!

!testRun: #RestInterfaceTest #test06canAddItemToCartWithValidID stamp: 'JEA 12/2/2020 17:47:24'!
PASSED!

!testRun: #RestInterfaceTest #test07cantCheckOutCartWithInvalidID stamp: 'JEA 12/2/2020 17:47:24'!
PASSED!

!testRun: #RestInterfaceTest #test08cantCheckOutCartWithInvalidCreditCardNumber stamp: 'JEA 12/2/2020 17:47:24'!
PASSED!

!testRun: #RestInterfaceTest #test09canCheckOutNonEmptyValidCartWithValidCreditCard stamp: 'JEA 12/2/2020 17:47:24'!
PASSED!

!testRun: #RestInterfaceTest #test10cannotListCartWithInvalidID stamp: 'JEA 12/2/2020 17:47:24'!
PASSED!

!testRun: #RestInterfaceTest #test11cantAccessCartAfterTimeoutSinceCreated stamp: 'JEA 12/2/2020 17:47:24'!
PASSED!
!RestInterface methodsFor: 'api - private' stamp: 'JEA 12/2/2020 17:47:46'!
checkOut: aCart withCard: aCard
	| cashier |

	cashier:= Cashier 
		toCheckout: aCart
		charging: aCard
		through: merchantProcessor
		on: clock now date
		registeringOn: transactionValues.
	
	^cashier checkOut.! !
!RestInterface methodsFor: 'as yet unclassified' stamp: 'JEA 12/2/2020 17:47:46' prior: 50879823!
checkOutCartWithID: aCartID withCardNumber: aCardNumber expiring: aGregorianMonthOfYear owner: aName
	| creditCard |

	self ensureCartIDCanBeInteractedWith: aCartID.
	self ensureCardNumberIsValid: aCardNumber.
	
	self resetTimerOfCartWithID: aCartID.
	
	creditCard := CreditCard expiringOn: aGregorianMonthOfYear.
	
	^self checkOut: (carts at: aCartID) withCard: creditCard.! !

!methodRemoval: RestInterface #checkout:withCard: stamp: 'JEA 12/2/2020 17:47:46'!
checkout: aCart withCard: aCard
	| cashier |

	cashier:= Cashier 
		toCheckout: aCart
		charging: aCard
		through: merchantProcessor
		on: clock now date
		registeringOn: transactionValues.
	
	^cashier checkOut.!

----SNAPSHOT----(2 December 2020 17:47:54) CuisUniversity-4384.image priorSource: 17552405!
!RestInterface methodsFor: 'api - private' stamp: 'JEA 12/2/2020 17:50:15' prior: 50875528!
ensureCardNumberIsValid: aCardNumber

	(aCardNumber size = 16 ) 
		ifFalse: [ self error: self class invalidCreditCardNumberMessage ].! !

!testRun: #CartTest #test01NewCartsAreCreatedEmpty stamp: 'JEA 12/2/2020 17:50:16'!
PASSED!

!testRun: #CartTest #test02CanNotAddItemsThatDoNotBelongToStore stamp: 'JEA 12/2/2020 17:50:16'!
PASSED!

!testRun: #CartTest #test03AfterAddingAnItemTheCartIsNotEmptyAnymore stamp: 'JEA 12/2/2020 17:50:16'!
PASSED!

!testRun: #CartTest #test04CanNotAddNonPositiveNumberOfItems stamp: 'JEA 12/2/2020 17:50:16'!
PASSED!

!testRun: #CartTest #test05CanNotAddMoreThanOneItemNotSellByTheStore stamp: 'JEA 12/2/2020 17:50:16'!
PASSED!

!testRun: #CartTest #test06CartRemembersAddedItems stamp: 'JEA 12/2/2020 17:50:16'!
PASSED!

!testRun: #CartTest #test07CartDoesNotHoldNotAddedItems stamp: 'JEA 12/2/2020 17:50:16'!
PASSED!

!testRun: #CartTest #test08CartRemembersTheNumberOfAddedItems stamp: 'JEA 12/2/2020 17:50:16'!
PASSED!

!testRun: #CashierTest #test01CanNotCheckoutAnEmptyCart stamp: 'JEA 12/2/2020 17:50:16'!
PASSED!

!testRun: #CashierTest #test02CalculatedTotalIsCorrect stamp: 'JEA 12/2/2020 17:50:16'!
PASSED!

!testRun: #CashierTest #test03CanNotCheckoutWithAnExpiredCreditCart stamp: 'JEA 12/2/2020 17:50:16'!
PASSED!

!testRun: #CashierTest #test04CheckoutRegistersASale stamp: 'JEA 12/2/2020 17:50:16'!
PASSED!

!testRun: #CashierTest #test05CashierChargesCreditCardUsingMerchantProcessor stamp: 'JEA 12/2/2020 17:50:16'!
PASSED!

!testRun: #CashierTest #test06CashierDoesNotSaleWhenTheCreditCardHasNoCredit stamp: 'JEA 12/2/2020 17:50:16'!
PASSED!

!testRun: #RestInterfaceTest #test01cannotCreateCartForInvalidClientID stamp: 'JEA 12/2/2020 17:50:16'!
PASSED!

!testRun: #RestInterfaceTest #test02cannotCreateCartForClientWithWrongPassword stamp: 'JEA 12/2/2020 17:50:16'!
PASSED!

!testRun: #RestInterfaceTest #test03canCreateCartForWellAuthenticatedClient stamp: 'JEA 12/2/2020 17:50:16'!
PASSED!

!testRun: #RestInterfaceTest #test04canCreateMoreThanOneCartWithDifferentIDs stamp: 'JEA 12/2/2020 17:50:16'!
PASSED!

!testRun: #RestInterfaceTest #test05cannotAddToCartWithInvalidID stamp: 'JEA 12/2/2020 17:50:16'!
PASSED!

!testRun: #RestInterfaceTest #test06canAddItemToCartWithValidID stamp: 'JEA 12/2/2020 17:50:16'!
PASSED!

!testRun: #RestInterfaceTest #test07cantCheckOutCartWithInvalidID stamp: 'JEA 12/2/2020 17:50:16'!
PASSED!

!testRun: #RestInterfaceTest #test08cantCheckOutCartWithInvalidCreditCardNumber stamp: 'JEA 12/2/2020 17:50:16'!
PASSED!

!testRun: #RestInterfaceTest #test09canCheckOutNonEmptyValidCartWithValidCreditCard stamp: 'JEA 12/2/2020 17:50:16'!
PASSED!

!testRun: #RestInterfaceTest #test10cannotListCartWithInvalidID stamp: 'JEA 12/2/2020 17:50:16'!
PASSED!

!testRun: #RestInterfaceTest #test11cantAccessCartAfterTimeoutSinceCreated stamp: 'JEA 12/2/2020 17:50:16'!
PASSED!
!RestInterface methodsFor: 'api - private' stamp: 'JEA 12/2/2020 17:50:21' prior: 50880553!
ensureCardNumberIsValid: aCardNumber

	aCardNumber size = 16 
		ifFalse: [ self error: self class invalidCreditCardNumberMessage ].! !

!testRun: #RestInterfaceTest #test01cannotCreateCartForInvalidClientID stamp: 'JEA 12/2/2020 17:50:23'!
PASSED!

!testRun: #RestInterfaceTest #test02cannotCreateCartForClientWithWrongPassword stamp: 'JEA 12/2/2020 17:50:23'!
PASSED!

!testRun: #RestInterfaceTest #test03canCreateCartForWellAuthenticatedClient stamp: 'JEA 12/2/2020 17:50:23'!
PASSED!

!testRun: #RestInterfaceTest #test04canCreateMoreThanOneCartWithDifferentIDs stamp: 'JEA 12/2/2020 17:50:23'!
PASSED!

!testRun: #RestInterfaceTest #test05cannotAddToCartWithInvalidID stamp: 'JEA 12/2/2020 17:50:23'!
PASSED!

!testRun: #RestInterfaceTest #test06canAddItemToCartWithValidID stamp: 'JEA 12/2/2020 17:50:23'!
PASSED!

!testRun: #RestInterfaceTest #test07cantCheckOutCartWithInvalidID stamp: 'JEA 12/2/2020 17:50:23'!
PASSED!

!testRun: #RestInterfaceTest #test08cantCheckOutCartWithInvalidCreditCardNumber stamp: 'JEA 12/2/2020 17:50:23'!
PASSED!

!testRun: #RestInterfaceTest #test09canCheckOutNonEmptyValidCartWithValidCreditCard stamp: 'JEA 12/2/2020 17:50:23'!
PASSED!

!testRun: #RestInterfaceTest #test10cannotListCartWithInvalidID stamp: 'JEA 12/2/2020 17:50:23'!
PASSED!

!testRun: #RestInterfaceTest #test11cantAccessCartAfterTimeoutSinceCreated stamp: 'JEA 12/2/2020 17:50:23'!
PASSED!

!testRun: #CartTest #test01NewCartsAreCreatedEmpty stamp: 'JEA 12/2/2020 17:50:24'!
PASSED!

!testRun: #CartTest #test02CanNotAddItemsThatDoNotBelongToStore stamp: 'JEA 12/2/2020 17:50:24'!
PASSED!

!testRun: #CartTest #test03AfterAddingAnItemTheCartIsNotEmptyAnymore stamp: 'JEA 12/2/2020 17:50:24'!
PASSED!

!testRun: #CartTest #test04CanNotAddNonPositiveNumberOfItems stamp: 'JEA 12/2/2020 17:50:24'!
PASSED!

!testRun: #CartTest #test05CanNotAddMoreThanOneItemNotSellByTheStore stamp: 'JEA 12/2/2020 17:50:24'!
PASSED!

!testRun: #CartTest #test06CartRemembersAddedItems stamp: 'JEA 12/2/2020 17:50:24'!
PASSED!

!testRun: #CartTest #test07CartDoesNotHoldNotAddedItems stamp: 'JEA 12/2/2020 17:50:24'!
PASSED!

!testRun: #CartTest #test08CartRemembersTheNumberOfAddedItems stamp: 'JEA 12/2/2020 17:50:24'!
PASSED!

!testRun: #CashierTest #test01CanNotCheckoutAnEmptyCart stamp: 'JEA 12/2/2020 17:50:24'!
PASSED!

!testRun: #CashierTest #test02CalculatedTotalIsCorrect stamp: 'JEA 12/2/2020 17:50:24'!
PASSED!

!testRun: #CashierTest #test03CanNotCheckoutWithAnExpiredCreditCart stamp: 'JEA 12/2/2020 17:50:24'!
PASSED!

!testRun: #CashierTest #test04CheckoutRegistersASale stamp: 'JEA 12/2/2020 17:50:24'!
PASSED!

!testRun: #CashierTest #test05CashierChargesCreditCardUsingMerchantProcessor stamp: 'JEA 12/2/2020 17:50:24'!
PASSED!

!testRun: #CashierTest #test06CashierDoesNotSaleWhenTheCreditCardHasNoCredit stamp: 'JEA 12/2/2020 17:50:24'!
PASSED!

!testRun: #RestInterfaceTest #test01cannotCreateCartForInvalidClientID stamp: 'JEA 12/2/2020 17:50:24'!
PASSED!

!testRun: #RestInterfaceTest #test02cannotCreateCartForClientWithWrongPassword stamp: 'JEA 12/2/2020 17:50:24'!
PASSED!

!testRun: #RestInterfaceTest #test03canCreateCartForWellAuthenticatedClient stamp: 'JEA 12/2/2020 17:50:24'!
PASSED!

!testRun: #RestInterfaceTest #test04canCreateMoreThanOneCartWithDifferentIDs stamp: 'JEA 12/2/2020 17:50:24'!
PASSED!

!testRun: #RestInterfaceTest #test05cannotAddToCartWithInvalidID stamp: 'JEA 12/2/2020 17:50:24'!
PASSED!

!testRun: #RestInterfaceTest #test06canAddItemToCartWithValidID stamp: 'JEA 12/2/2020 17:50:24'!
PASSED!

!testRun: #RestInterfaceTest #test07cantCheckOutCartWithInvalidID stamp: 'JEA 12/2/2020 17:50:24'!
PASSED!

!testRun: #RestInterfaceTest #test08cantCheckOutCartWithInvalidCreditCardNumber stamp: 'JEA 12/2/2020 17:50:24'!
PASSED!

!testRun: #RestInterfaceTest #test09canCheckOutNonEmptyValidCartWithValidCreditCard stamp: 'JEA 12/2/2020 17:50:24'!
PASSED!

!testRun: #RestInterfaceTest #test10cannotListCartWithInvalidID stamp: 'JEA 12/2/2020 17:50:24'!
PASSED!

!testRun: #RestInterfaceTest #test11cantAccessCartAfterTimeoutSinceCreated stamp: 'JEA 12/2/2020 17:50:24'!
PASSED!
!RestInterfaceTest methodsFor: 'tests - cart timeout' stamp: 'JEA 12/2/2020 17:50:46'!
test12cantAccessCartAfterTimeoutSinceCreated
	| restInterface cartID clock |

	clock := Clock newSimulatingRealTime.

	restInterface := RestInterface 
		newWithAuthenticator: AuthenticatorSimulator newSimulatingValidAuthentication 
		withMerchantProcessor: self withCatalog: testObjectsFactory defaultCatalog
		withClock: clock.
	
	cartID := restInterface 
		createCartFor: testObjectsFactory validClientID
		password: testObjectsFactory correctPassword.
	
	clock simulateAdvancing: 30 * minute.
	
	self should: [ 
		restInterface 
			add: 2 
			of: testObjectsFactory itemSoldByTheStore 
			toCartWithID: cartID. 
		]
		raise: Error
		withMessageText: RestInterface cartTimedOutMessage.
	
	self should: [ restInterface listItemsInCartWithID: cartID. ]
		raise: Error
		withMessageText: RestInterface cartTimedOutMessage.
	
	self should: [ 
		restInterface 
			checkOutCartWithID: cartID 
			withCardNumber: testObjectsFactory validCardNumber 
			expiring: testObjectsFactory expirationDateNotReached 
			owner: testObjectsFactory validClientID.
		]
		raise: Error
		withMessageText: RestInterface cartTimedOutMessage.! !

!methodRemoval: RestInterfaceTest #test11cantAccessCartAfterTimeoutSinceCreated stamp: 'JEA 12/2/2020 17:50:46'!
test11cantAccessCartAfterTimeoutSinceCreated
	| restInterface cartID clock |

	clock := Clock newSimulatingRealTime.

	restInterface := RestInterface 
		newWithAuthenticator: AuthenticatorSimulator newSimulatingValidAuthentication 
		withMerchantProcessor: self withCatalog: testObjectsFactory defaultCatalog
		withClock: clock.
	
	cartID := restInterface 
		createCartFor: testObjectsFactory validClientID
		password: testObjectsFactory correctPassword.
	
	clock simulateAdvancing: 30 * minute.
	
	self should: [ 
		restInterface 
			add: 2 
			of: testObjectsFactory itemSoldByTheStore 
			toCartWithID: cartID. 
		]
		raise: Error
		withMessageText: RestInterface cartTimedOutMessage.
	
	self should: [ restInterface listItemsInCartWithID: cartID. ]
		raise: Error
		withMessageText: RestInterface cartTimedOutMessage.
	
	self should: [ 
		restInterface 
			checkOutCartWithID: cartID 
			withCardNumber: testObjectsFactory validCardNumber 
			expiring: testObjectsFactory expirationDateNotReached 
			owner: testObjectsFactory validClientID.
		]
		raise: Error
		withMessageText: RestInterface cartTimedOutMessage.!
!RestInterfaceTest methodsFor: 'tests - listing cart' stamp: 'JEA 12/2/2020 17:50:49'!
test11cannotListCartWithInvalidID
	| restInterface |

	restInterface := RestInterface 
		newWithAuthenticator: AuthenticatorSimulator newSimulatingValidAuthentication 
		withMerchantProcessor: self withCatalog: testObjectsFactory defaultCatalog 
		withClock: Clock newSimulatingRealTime.
	
	self should: [ restInterface listItemsInCartWithID: testObjectsFactory invalidCartID. ]
		raise: Error
		withMessageText: RestInterface invalidCartIDMessage.! !

!methodRemoval: RestInterfaceTest #test10cannotListCartWithInvalidID stamp: 'JEA 12/2/2020 17:50:49'!
test10cannotListCartWithInvalidID
	| restInterface |

	restInterface := RestInterface 
		newWithAuthenticator: AuthenticatorSimulator newSimulatingValidAuthentication 
		withMerchantProcessor: self withCatalog: testObjectsFactory defaultCatalog 
		withClock: Clock newSimulatingRealTime.
	
	self should: [ restInterface listItemsInCartWithID: testObjectsFactory invalidCartID. ]
		raise: Error
		withMessageText: RestInterface invalidCartIDMessage.!
!RestInterfaceTest methodsFor: 'tests - checking out cart' stamp: 'JEA 12/2/2020 17:50:53'!
test10canCheckOutNonEmptyValidCartWithValidCreditCard
	| restInterface cartID transactionID |

	restInterface := RestInterface 
		newWithAuthenticator: AuthenticatorSimulator newSimulatingValidAuthentication 
		withMerchantProcessor: self withCatalog: testObjectsFactory defaultCatalog 
		withClock: Clock newSimulatingRealTime.
		
	cartID := restInterface
		createCartFor: testObjectsFactory validClientID
		password: testObjectsFactory correctPassword.
		
	restInterface 
		add: 1 
		of: testObjectsFactory itemSoldByTheStore 
		toCartWithID: cartID.
	
	transactionID := restInterface 
		checkOutCartWithID: cartID 
		withCardNumber: testObjectsFactory validCardNumber 
		expiring: testObjectsFactory expirationDateNotReached 
		owner: testObjectsFactory validCreditCardOwnersName.
	
	self assert: testObjectsFactory itemSoldByTheStorePrice 
		equals: (restInterface moneyDebitedInTransactionWithID: transactionID).! !

!methodRemoval: RestInterfaceTest #test09canCheckOutNonEmptyValidCartWithValidCreditCard stamp: 'JEA 12/2/2020 17:50:53'!
test09canCheckOutNonEmptyValidCartWithValidCreditCard
	| restInterface cartID transactionID |

	restInterface := RestInterface 
		newWithAuthenticator: AuthenticatorSimulator newSimulatingValidAuthentication 
		withMerchantProcessor: self withCatalog: testObjectsFactory defaultCatalog 
		withClock: Clock newSimulatingRealTime.
		
	cartID := restInterface
		createCartFor: testObjectsFactory validClientID
		password: testObjectsFactory correctPassword.
		
	restInterface 
		add: 1 
		of: testObjectsFactory itemSoldByTheStore 
		toCartWithID: cartID.
	
	transactionID := restInterface 
		checkOutCartWithID: cartID 
		withCardNumber: testObjectsFactory validCardNumber 
		expiring: testObjectsFactory expirationDateNotReached 
		owner: testObjectsFactory validCreditCardOwnersName.
	
	self assert: testObjectsFactory itemSoldByTheStorePrice 
		equals: (restInterface moneyDebitedInTransactionWithID: transactionID).!
!RestInterfaceTest methodsFor: 'tests - checking out cart' stamp: 'JEA 12/2/2020 17:51:04'!
test07cannotCheckOutCartWithInvalidID
	| restInterface |

	restInterface := RestInterface 
		newWithAuthenticator: AuthenticatorSimulator newSimulatingValidAuthentication 
		withMerchantProcessor: self withCatalog: testObjectsFactory defaultCatalog withClock: Clock newSimulatingRealTime.
	
	self should: [ 
		restInterface 
			checkOutCartWithID: testObjectsFactory invalidCartID 
			withCardNumber: testObjectsFactory validCardNumber 
			expiring: testObjectsFactory expirationDateNotReached 
			owner: testObjectsFactory validCreditCardOwnersName. 
		]
		raise: Error
		withMessageText: RestInterface invalidCartIDMessage.! !

!methodRemoval: RestInterfaceTest #test07cantCheckOutCartWithInvalidID stamp: 'JEA 12/2/2020 17:51:04'!
test07cantCheckOutCartWithInvalidID
	| restInterface |

	restInterface := RestInterface 
		newWithAuthenticator: AuthenticatorSimulator newSimulatingValidAuthentication 
		withMerchantProcessor: self withCatalog: testObjectsFactory defaultCatalog withClock: Clock newSimulatingRealTime.
	
	self should: [ 
		restInterface 
			checkOutCartWithID: testObjectsFactory invalidCartID 
			withCardNumber: testObjectsFactory validCardNumber 
			expiring: testObjectsFactory expirationDateNotReached 
			owner: testObjectsFactory validCreditCardOwnersName. 
		]
		raise: Error
		withMessageText: RestInterface invalidCartIDMessage.!
!RestInterfaceTest methodsFor: 'tests - checking out cart' stamp: 'JEA 12/2/2020 17:51:08'!
test08cannotCheckOutCartWithInvalidCreditCardNumber
	| restInterface cartID |

	restInterface := RestInterface 
		newWithAuthenticator: AuthenticatorSimulator newSimulatingValidAuthentication 
		withMerchantProcessor: self withCatalog: testObjectsFactory defaultCatalog 
		withClock: Clock newSimulatingRealTime.
		
	cartID := restInterface
		createCartFor: testObjectsFactory validClientID
		password: testObjectsFactory correctPassword.
	
	self should: [ 
		restInterface 
			checkOutCartWithID: cartID 
			withCardNumber: testObjectsFactory invalidCardNumberShort 
			expiring: testObjectsFactory expirationDateNotReached 
			owner: testObjectsFactory validCreditCardOwnersName. 
		]
		raise: Error
		withMessageText: RestInterface invalidCreditCardNumberMessage.! !

!methodRemoval: RestInterfaceTest #test08cantCheckOutCartWithInvalidCreditCardNumber stamp: 'JEA 12/2/2020 17:51:08'!
test08cantCheckOutCartWithInvalidCreditCardNumber
	| restInterface cartID |

	restInterface := RestInterface 
		newWithAuthenticator: AuthenticatorSimulator newSimulatingValidAuthentication 
		withMerchantProcessor: self withCatalog: testObjectsFactory defaultCatalog 
		withClock: Clock newSimulatingRealTime.
		
	cartID := restInterface
		createCartFor: testObjectsFactory validClientID
		password: testObjectsFactory correctPassword.
	
	self should: [ 
		restInterface 
			checkOutCartWithID: cartID 
			withCardNumber: testObjectsFactory invalidCardNumberShort 
			expiring: testObjectsFactory expirationDateNotReached 
			owner: testObjectsFactory validCreditCardOwnersName. 
		]
		raise: Error
		withMessageText: RestInterface invalidCreditCardNumberMessage.!
!RestInterfaceTest methodsFor: 'tests - cart timeout' stamp: 'JEA 12/2/2020 17:51:17'!
test12cannotAccessCartAfterTimeoutSinceCreated
	| restInterface cartID clock |

	clock := Clock newSimulatingRealTime.

	restInterface := RestInterface 
		newWithAuthenticator: AuthenticatorSimulator newSimulatingValidAuthentication 
		withMerchantProcessor: self withCatalog: testObjectsFactory defaultCatalog
		withClock: clock.
	
	cartID := restInterface 
		createCartFor: testObjectsFactory validClientID
		password: testObjectsFactory correctPassword.
	
	clock simulateAdvancing: 30 * minute.
	
	self should: [ 
		restInterface 
			add: 2 
			of: testObjectsFactory itemSoldByTheStore 
			toCartWithID: cartID. 
		]
		raise: Error
		withMessageText: RestInterface cartTimedOutMessage.
	
	self should: [ restInterface listItemsInCartWithID: cartID. ]
		raise: Error
		withMessageText: RestInterface cartTimedOutMessage.
	
	self should: [ 
		restInterface 
			checkOutCartWithID: cartID 
			withCardNumber: testObjectsFactory validCardNumber 
			expiring: testObjectsFactory expirationDateNotReached 
			owner: testObjectsFactory validClientID.
		]
		raise: Error
		withMessageText: RestInterface cartTimedOutMessage.! !

!methodRemoval: RestInterfaceTest #test12cantAccessCartAfterTimeoutSinceCreated stamp: 'JEA 12/2/2020 17:51:17'!
test12cantAccessCartAfterTimeoutSinceCreated
	| restInterface cartID clock |

	clock := Clock newSimulatingRealTime.

	restInterface := RestInterface 
		newWithAuthenticator: AuthenticatorSimulator newSimulatingValidAuthentication 
		withMerchantProcessor: self withCatalog: testObjectsFactory defaultCatalog
		withClock: clock.
	
	cartID := restInterface 
		createCartFor: testObjectsFactory validClientID
		password: testObjectsFactory correctPassword.
	
	clock simulateAdvancing: 30 * minute.
	
	self should: [ 
		restInterface 
			add: 2 
			of: testObjectsFactory itemSoldByTheStore 
			toCartWithID: cartID. 
		]
		raise: Error
		withMessageText: RestInterface cartTimedOutMessage.
	
	self should: [ restInterface listItemsInCartWithID: cartID. ]
		raise: Error
		withMessageText: RestInterface cartTimedOutMessage.
	
	self should: [ 
		restInterface 
			checkOutCartWithID: cartID 
			withCardNumber: testObjectsFactory validCardNumber 
			expiring: testObjectsFactory expirationDateNotReached 
			owner: testObjectsFactory validClientID.
		]
		raise: Error
		withMessageText: RestInterface cartTimedOutMessage.!
!RestInterfaceTest methodsFor: 'tests - checking out cart' stamp: 'JEA 12/2/2020 17:51:47'!
test08cannotCheckOutCartWithCreditCardNumberTooShort
	| restInterface cartID |

	restInterface := RestInterface 
		newWithAuthenticator: AuthenticatorSimulator newSimulatingValidAuthentication 
		withMerchantProcessor: self withCatalog: testObjectsFactory defaultCatalog 
		withClock: Clock newSimulatingRealTime.
		
	cartID := restInterface
		createCartFor: testObjectsFactory validClientID
		password: testObjectsFactory correctPassword.
	
	self should: [ 
		restInterface 
			checkOutCartWithID: cartID 
			withCardNumber: testObjectsFactory invalidCardNumberShort 
			expiring: testObjectsFactory expirationDateNotReached 
			owner: testObjectsFactory validCreditCardOwnersName. 
		]
		raise: Error
		withMessageText: RestInterface invalidCreditCardNumberMessage.! !

!methodRemoval: RestInterfaceTest #test08cannotCheckOutCartWithInvalidCreditCardNumber stamp: 'JEA 12/2/2020 17:51:47'!
test08cannotCheckOutCartWithInvalidCreditCardNumber
	| restInterface cartID |

	restInterface := RestInterface 
		newWithAuthenticator: AuthenticatorSimulator newSimulatingValidAuthentication 
		withMerchantProcessor: self withCatalog: testObjectsFactory defaultCatalog 
		withClock: Clock newSimulatingRealTime.
		
	cartID := restInterface
		createCartFor: testObjectsFactory validClientID
		password: testObjectsFactory correctPassword.
	
	self should: [ 
		restInterface 
			checkOutCartWithID: cartID 
			withCardNumber: testObjectsFactory invalidCardNumberShort 
			expiring: testObjectsFactory expirationDateNotReached 
			owner: testObjectsFactory validCreditCardOwnersName. 
		]
		raise: Error
		withMessageText: RestInterface invalidCreditCardNumberMessage.!
!RestInterfaceTest methodsFor: 'tests - checking out cart' stamp: 'JEA 12/2/2020 17:53:02'!
test09cannotCheckOutCartWithNonNumericCreditCardNumber
	| restInterface cartID |

	restInterface := RestInterface 
		newWithAuthenticator: AuthenticatorSimulator newSimulatingValidAuthentication 
		withMerchantProcessor: self withCatalog: testObjectsFactory defaultCatalog 
		withClock: Clock newSimulatingRealTime.
		
	cartID := restInterface
		createCartFor: testObjectsFactory validClientID
		password: testObjectsFactory correctPassword.
	
	self should: [ 
		restInterface 
			checkOutCartWithID: cartID 
			withCardNumber: testObjectsFactory invalidCardNumberShort 
			expiring: testObjectsFactory expirationDateNotReached 
			owner: testObjectsFactory validCreditCardOwnersName. 
		]
		raise: Error
		withMessageText: RestInterface invalidCreditCardNumberMessage.! !
!StoreTestObjectsFactory methodsFor: 'rest interface' stamp: 'JEA 12/2/2020 17:53:51'!
invalidCardNumberNonNumeric

	^'AAAAAAAAAAAAAAAA'.! !
!RestInterfaceTest methodsFor: 'tests - checking out cart' stamp: 'JEA 12/2/2020 17:54:11' prior: 50881188!
test09cannotCheckOutCartWithNonNumericCreditCardNumber
	| restInterface cartID |

	restInterface := RestInterface 
		newWithAuthenticator: AuthenticatorSimulator newSimulatingValidAuthentication 
		withMerchantProcessor: self withCatalog: testObjectsFactory defaultCatalog 
		withClock: Clock newSimulatingRealTime.
		
	cartID := restInterface
		createCartFor: testObjectsFactory validClientID
		password: testObjectsFactory correctPassword.
	
	self should: [ 
		restInterface 
			checkOutCartWithID: cartID 
			withCardNumber: testObjectsFactory invalidCardNumberNonNumeric 
			expiring: testObjectsFactory expirationDateNotReached 
			owner: testObjectsFactory validCreditCardOwnersName. 
		]
		raise: Error
		withMessageText: RestInterface invalidCreditCardNumberMessage.! !

!testRun: #RestInterfaceTest #test01cannotCreateCartForInvalidClientID stamp: 'JEA 12/2/2020 17:54:17'!
PASSED!

!testRun: #RestInterfaceTest #test02cannotCreateCartForClientWithWrongPassword stamp: 'JEA 12/2/2020 17:54:17'!
PASSED!

!testRun: #RestInterfaceTest #test03canCreateCartForWellAuthenticatedClient stamp: 'JEA 12/2/2020 17:54:17'!
PASSED!

!testRun: #RestInterfaceTest #test04canCreateMoreThanOneCartWithDifferentIDs stamp: 'JEA 12/2/2020 17:54:17'!
PASSED!

!testRun: #RestInterfaceTest #test05cannotAddToCartWithInvalidID stamp: 'JEA 12/2/2020 17:54:17'!
PASSED!

!testRun: #RestInterfaceTest #test06canAddItemToCartWithValidID stamp: 'JEA 12/2/2020 17:54:17'!
PASSED!

!testRun: #RestInterfaceTest #test07cannotCheckOutCartWithInvalidID stamp: 'JEA 12/2/2020 17:54:17'!
PASSED!

!testRun: #RestInterfaceTest #test08cannotCheckOutCartWithCreditCardNumberTooShort stamp: 'JEA 12/2/2020 17:54:17'!
PASSED!

!testRun: #RestInterfaceTest #test09cannotCheckOutCartWithNonNumericCreditCardNumber stamp: 'JEA 12/2/2020 17:54:17'!
FAILURE!

!testRun: #RestInterfaceTest #test10canCheckOutNonEmptyValidCartWithValidCreditCard stamp: 'JEA 12/2/2020 17:54:17'!
PASSED!

!testRun: #RestInterfaceTest #test11cannotListCartWithInvalidID stamp: 'JEA 12/2/2020 17:54:17'!
PASSED!

!testRun: #RestInterfaceTest #test12cannotAccessCartAfterTimeoutSinceCreated stamp: 'JEA 12/2/2020 17:54:17'!
PASSED!

!testRun: #RestInterfaceTest #test09cannotCheckOutCartWithNonNumericCreditCardNumber stamp: 'JEA 12/2/2020 17:54:17'!
FAILURE!
!RestInterfaceTest methodsFor: 'tests - checking out cart' stamp: 'JEA 12/2/2020 17:54:48' prior: 50881221!
test09cannotCheckOutCartWithNonNumericCreditCardNumber
	| restInterface cartID |

	restInterface := RestInterface 
		newWithAuthenticator: AuthenticatorSimulator newSimulatingValidAuthentication 
		withMerchantProcessor: self withCatalog: testObjectsFactory defaultCatalog 
		withClock: Clock newSimulatingRealTime.
		
	cartID := restInterface
		createCartFor: testObjectsFactory validClientID
		password: testObjectsFactory correctPassword.
	
	restInterface 
		add: 1 
		of: testObjectsFactory itemSoldByTheStore 
		toCartWithID: cartID.
	
	self should: [ 
		restInterface 
			checkOutCartWithID: cartID 
			withCardNumber: testObjectsFactory invalidCardNumberNonNumeric 
			expiring: testObjectsFactory expirationDateNotReached 
			owner: testObjectsFactory validCreditCardOwnersName. 
		]
		raise: Error
		withMessageText: RestInterface invalidCreditCardNumberMessage.! !
!RestInterfaceTest methodsFor: 'tests - checking out cart' stamp: 'JEA 12/2/2020 17:54:53' prior: 50881133!
test08cannotCheckOutCartWithCreditCardNumberTooShort
	| restInterface cartID |

	restInterface := RestInterface 
		newWithAuthenticator: AuthenticatorSimulator newSimulatingValidAuthentication 
		withMerchantProcessor: self withCatalog: testObjectsFactory defaultCatalog 
		withClock: Clock newSimulatingRealTime.
		
	cartID := restInterface
		createCartFor: testObjectsFactory validClientID
		password: testObjectsFactory correctPassword.
	
	restInterface 
		add: 1 
		of: testObjectsFactory itemSoldByTheStore 
		toCartWithID: cartID.
	
	self should: [ 
		restInterface 
			checkOutCartWithID: cartID 
			withCardNumber: testObjectsFactory invalidCardNumberShort 
			expiring: testObjectsFactory expirationDateNotReached 
			owner: testObjectsFactory validCreditCardOwnersName. 
		]
		raise: Error
		withMessageText: RestInterface invalidCreditCardNumberMessage.! !

!testRun: #RestInterfaceTest #test07cannotCheckOutCartWithInvalidID stamp: 'JEA 12/2/2020 17:55:07'!
PASSED!

!testRun: #CartTest #test01NewCartsAreCreatedEmpty stamp: 'JEA 12/2/2020 17:55:07'!
PASSED!

!testRun: #CartTest #test02CanNotAddItemsThatDoNotBelongToStore stamp: 'JEA 12/2/2020 17:55:07'!
PASSED!

!testRun: #CartTest #test03AfterAddingAnItemTheCartIsNotEmptyAnymore stamp: 'JEA 12/2/2020 17:55:07'!
PASSED!

!testRun: #CartTest #test04CanNotAddNonPositiveNumberOfItems stamp: 'JEA 12/2/2020 17:55:07'!
PASSED!

!testRun: #CartTest #test05CanNotAddMoreThanOneItemNotSellByTheStore stamp: 'JEA 12/2/2020 17:55:07'!
PASSED!

!testRun: #CartTest #test06CartRemembersAddedItems stamp: 'JEA 12/2/2020 17:55:07'!
PASSED!

!testRun: #CartTest #test07CartDoesNotHoldNotAddedItems stamp: 'JEA 12/2/2020 17:55:07'!
PASSED!

!testRun: #CartTest #test08CartRemembersTheNumberOfAddedItems stamp: 'JEA 12/2/2020 17:55:07'!
PASSED!

!testRun: #CashierTest #test01CanNotCheckoutAnEmptyCart stamp: 'JEA 12/2/2020 17:55:07'!
PASSED!

!testRun: #CashierTest #test02CalculatedTotalIsCorrect stamp: 'JEA 12/2/2020 17:55:07'!
PASSED!

!testRun: #CashierTest #test03CanNotCheckoutWithAnExpiredCreditCart stamp: 'JEA 12/2/2020 17:55:07'!
PASSED!

!testRun: #CashierTest #test04CheckoutRegistersASale stamp: 'JEA 12/2/2020 17:55:07'!
PASSED!

!testRun: #CashierTest #test05CashierChargesCreditCardUsingMerchantProcessor stamp: 'JEA 12/2/2020 17:55:07'!
PASSED!

!testRun: #CashierTest #test06CashierDoesNotSaleWhenTheCreditCardHasNoCredit stamp: 'JEA 12/2/2020 17:55:07'!
PASSED!

!testRun: #RestInterfaceTest #test01cannotCreateCartForInvalidClientID stamp: 'JEA 12/2/2020 17:55:07'!
PASSED!

!testRun: #RestInterfaceTest #test02cannotCreateCartForClientWithWrongPassword stamp: 'JEA 12/2/2020 17:55:07'!
PASSED!

!testRun: #RestInterfaceTest #test03canCreateCartForWellAuthenticatedClient stamp: 'JEA 12/2/2020 17:55:07'!
PASSED!

!testRun: #RestInterfaceTest #test04canCreateMoreThanOneCartWithDifferentIDs stamp: 'JEA 12/2/2020 17:55:07'!
PASSED!

!testRun: #RestInterfaceTest #test05cannotAddToCartWithInvalidID stamp: 'JEA 12/2/2020 17:55:07'!
PASSED!

!testRun: #RestInterfaceTest #test06canAddItemToCartWithValidID stamp: 'JEA 12/2/2020 17:55:07'!
PASSED!

!testRun: #RestInterfaceTest #test07cannotCheckOutCartWithInvalidID stamp: 'JEA 12/2/2020 17:55:07'!
PASSED!

!testRun: #RestInterfaceTest #test08cannotCheckOutCartWithCreditCardNumberTooShort stamp: 'JEA 12/2/2020 17:55:07'!
PASSED!

!testRun: #RestInterfaceTest #test09cannotCheckOutCartWithNonNumericCreditCardNumber stamp: 'JEA 12/2/2020 17:55:07'!
FAILURE!

!testRun: #RestInterfaceTest #test10canCheckOutNonEmptyValidCartWithValidCreditCard stamp: 'JEA 12/2/2020 17:55:07'!
PASSED!

!testRun: #RestInterfaceTest #test11cannotListCartWithInvalidID stamp: 'JEA 12/2/2020 17:55:07'!
PASSED!

!testRun: #RestInterfaceTest #test12cannotAccessCartAfterTimeoutSinceCreated stamp: 'JEA 12/2/2020 17:55:07'!
PASSED!

!testRun: #RestInterfaceTest #test09cannotCheckOutCartWithNonNumericCreditCardNumber stamp: 'JEA 12/2/2020 17:55:07'!
FAILURE!

!testRun: #RestInterfaceTest #test09cannotCheckOutCartWithNonNumericCreditCardNumber stamp: 'JEA 12/2/2020 17:55:12'!
FAILURE!

!testRun: #RestInterfaceTest #test09cannotCheckOutCartWithNonNumericCreditCardNumber stamp: 'JEA 12/2/2020 17:55:16'!
FAILURE!
!RestInterface methodsFor: 'api - private' stamp: 'JEA 12/2/2020 17:55:42'!
ensureCreditCardNumberIsValid: aCardNumber

	aCardNumber size = 16 
		ifFalse: [ self error: self class invalidCreditCardNumberMessage ].! !
!RestInterface methodsFor: 'as yet unclassified' stamp: 'JEA 12/2/2020 17:55:42' prior: 50880526!
checkOutCartWithID: aCartID withCardNumber: aCardNumber expiring: aGregorianMonthOfYear owner: aName
	| creditCard |

	self ensureCartIDCanBeInteractedWith: aCartID.
	self ensureCreditCardNumberIsValid: aCardNumber.
	
	self resetTimerOfCartWithID: aCartID.
	
	creditCard := CreditCard expiringOn: aGregorianMonthOfYear.
	
	^self checkOut: (carts at: aCartID) withCard: creditCard.! !

!methodRemoval: RestInterface #ensureCardNumberIsValid: stamp: 'JEA 12/2/2020 17:55:42'!
ensureCardNumberIsValid: aCardNumber

	aCardNumber size = 16 
		ifFalse: [ self error: self class invalidCreditCardNumberMessage ].!
!RestInterface methodsFor: 'api - private' stamp: 'JEA 12/2/2020 17:55:55' prior: 50881463!
ensureCreditCardNumberIsValid: aCardNumber

	(aCardNumber size = 16 )
		ifFalse: [ self error: self class invalidCreditCardNumberMessage ].! !
!RestInterface methodsFor: 'api - private' stamp: 'JEA 12/2/2020 17:59:46' prior: 50881493!
ensureCreditCardNumberIsValid: aCardNumber

	(aCardNumber size = 16)
		ifFalse: [ self error: self class invalidCreditCardNumberMessage ].! !

'65464654A' asNumber!

'123456789A' asNumber!

'A123456789A' asNumber!

'0A123456789A' isAlphaNumeric !

$0 isDigit !
!RestInterface methodsFor: 'api - private' stamp: 'JEA 12/2/2020 18:03:19' prior: 50881501!
ensureCreditCardNumberIsValid: aCardNumber

	(aCardNumber size = 16 and: [ aCardNumber allSatisfy: [ :aCharacter | aCharacter isDigit. ] ])
		ifFalse: [ self error: self class invalidCreditCardNumberMessage ].! !
!RestInterface methodsFor: 'api - private' stamp: 'JEA 12/2/2020 18:03:26' prior: 50881513!
ensureCreditCardNumberIsValid: aCardNumber

	(aCardNumber size = 16 and: [ aCardNumber allSatisfy: [ :aCharacter | aCharacter isDigit. ]. ])
		ifFalse: [ self error: self class invalidCreditCardNumberMessage ].! !

!testRun: #CartTest #test01NewCartsAreCreatedEmpty stamp: 'JEA 12/2/2020 18:03:27'!
PASSED!

!testRun: #CartTest #test02CanNotAddItemsThatDoNotBelongToStore stamp: 'JEA 12/2/2020 18:03:27'!
PASSED!

!testRun: #CartTest #test03AfterAddingAnItemTheCartIsNotEmptyAnymore stamp: 'JEA 12/2/2020 18:03:27'!
PASSED!

!testRun: #CartTest #test04CanNotAddNonPositiveNumberOfItems stamp: 'JEA 12/2/2020 18:03:27'!
PASSED!

!testRun: #CartTest #test05CanNotAddMoreThanOneItemNotSellByTheStore stamp: 'JEA 12/2/2020 18:03:27'!
PASSED!

!testRun: #CartTest #test06CartRemembersAddedItems stamp: 'JEA 12/2/2020 18:03:27'!
PASSED!

!testRun: #CartTest #test07CartDoesNotHoldNotAddedItems stamp: 'JEA 12/2/2020 18:03:27'!
PASSED!

!testRun: #CartTest #test08CartRemembersTheNumberOfAddedItems stamp: 'JEA 12/2/2020 18:03:27'!
PASSED!

!testRun: #CashierTest #test01CanNotCheckoutAnEmptyCart stamp: 'JEA 12/2/2020 18:03:27'!
PASSED!

!testRun: #CashierTest #test02CalculatedTotalIsCorrect stamp: 'JEA 12/2/2020 18:03:27'!
PASSED!

!testRun: #CashierTest #test03CanNotCheckoutWithAnExpiredCreditCart stamp: 'JEA 12/2/2020 18:03:27'!
PASSED!

!testRun: #CashierTest #test04CheckoutRegistersASale stamp: 'JEA 12/2/2020 18:03:27'!
PASSED!

!testRun: #CashierTest #test05CashierChargesCreditCardUsingMerchantProcessor stamp: 'JEA 12/2/2020 18:03:27'!
PASSED!

!testRun: #CashierTest #test06CashierDoesNotSaleWhenTheCreditCardHasNoCredit stamp: 'JEA 12/2/2020 18:03:27'!
PASSED!

!testRun: #RestInterfaceTest #test01cannotCreateCartForInvalidClientID stamp: 'JEA 12/2/2020 18:03:27'!
PASSED!

!testRun: #RestInterfaceTest #test02cannotCreateCartForClientWithWrongPassword stamp: 'JEA 12/2/2020 18:03:27'!
PASSED!

!testRun: #RestInterfaceTest #test03canCreateCartForWellAuthenticatedClient stamp: 'JEA 12/2/2020 18:03:27'!
PASSED!

!testRun: #RestInterfaceTest #test04canCreateMoreThanOneCartWithDifferentIDs stamp: 'JEA 12/2/2020 18:03:27'!
PASSED!

!testRun: #RestInterfaceTest #test05cannotAddToCartWithInvalidID stamp: 'JEA 12/2/2020 18:03:27'!
PASSED!

!testRun: #RestInterfaceTest #test06canAddItemToCartWithValidID stamp: 'JEA 12/2/2020 18:03:27'!
PASSED!

!testRun: #RestInterfaceTest #test07cannotCheckOutCartWithInvalidID stamp: 'JEA 12/2/2020 18:03:27'!
PASSED!

!testRun: #RestInterfaceTest #test08cannotCheckOutCartWithCreditCardNumberTooShort stamp: 'JEA 12/2/2020 18:03:27'!
PASSED!

!testRun: #RestInterfaceTest #test09cannotCheckOutCartWithNonNumericCreditCardNumber stamp: 'JEA 12/2/2020 18:03:27'!
PASSED!

!testRun: #RestInterfaceTest #test10canCheckOutNonEmptyValidCartWithValidCreditCard stamp: 'JEA 12/2/2020 18:03:27'!
PASSED!

!testRun: #RestInterfaceTest #test11cannotListCartWithInvalidID stamp: 'JEA 12/2/2020 18:03:27'!
PASSED!

!testRun: #RestInterfaceTest #test12cannotAccessCartAfterTimeoutSinceCreated stamp: 'JEA 12/2/2020 18:03:27'!
PASSED!
!StoreTestObjectsFactory methodsFor: 'rest interface' stamp: 'JEA 12/2/2020 18:05:00'!
cartTimeout

	^30 * minute.! !
!RestInterfaceTest methodsFor: 'tests - cart timeout' stamp: 'JEA 12/2/2020 18:05:16' prior: 50881056!
test12cannotAccessCartAfterTimeoutSinceCreated
	| restInterface cartID clock |

	clock := Clock newSimulatingRealTime.

	restInterface := RestInterface 
		newWithAuthenticator: AuthenticatorSimulator newSimulatingValidAuthentication 
		withMerchantProcessor: self withCatalog: testObjectsFactory defaultCatalog
		withClock: clock.
	
	cartID := restInterface 
		createCartFor: testObjectsFactory validClientID
		password: testObjectsFactory correctPassword.
	
	clock simulateAdvancing: testObjectsFactory cartTimeout.
	
	self should: [ 
		restInterface 
			add: 2 
			of: testObjectsFactory itemSoldByTheStore 
			toCartWithID: cartID. 
		]
		raise: Error
		withMessageText: RestInterface cartTimedOutMessage.
	
	self should: [ restInterface listItemsInCartWithID: cartID. ]
		raise: Error
		withMessageText: RestInterface cartTimedOutMessage.
	
	self should: [ 
		restInterface 
			checkOutCartWithID: cartID 
			withCardNumber: testObjectsFactory validCardNumber 
			expiring: testObjectsFactory expirationDateNotReached 
			owner: testObjectsFactory validClientID.
		]
		raise: Error
		withMessageText: RestInterface cartTimedOutMessage.! !

!testRun: #RestInterfaceTest #test12cannotAccessCartAfterTimeoutSinceCreated stamp: 'JEA 12/2/2020 18:05:50'!
PASSED!

!testRun: #CartTest #test01NewCartsAreCreatedEmpty stamp: 'JEA 12/2/2020 18:05:50'!
PASSED!

!testRun: #CartTest #test02CanNotAddItemsThatDoNotBelongToStore stamp: 'JEA 12/2/2020 18:05:50'!
PASSED!

!testRun: #CartTest #test03AfterAddingAnItemTheCartIsNotEmptyAnymore stamp: 'JEA 12/2/2020 18:05:50'!
PASSED!

!testRun: #CartTest #test04CanNotAddNonPositiveNumberOfItems stamp: 'JEA 12/2/2020 18:05:50'!
PASSED!

!testRun: #CartTest #test05CanNotAddMoreThanOneItemNotSellByTheStore stamp: 'JEA 12/2/2020 18:05:50'!
PASSED!

!testRun: #CartTest #test06CartRemembersAddedItems stamp: 'JEA 12/2/2020 18:05:50'!
PASSED!

!testRun: #CartTest #test07CartDoesNotHoldNotAddedItems stamp: 'JEA 12/2/2020 18:05:50'!
PASSED!

!testRun: #CartTest #test08CartRemembersTheNumberOfAddedItems stamp: 'JEA 12/2/2020 18:05:50'!
PASSED!

!testRun: #CashierTest #test01CanNotCheckoutAnEmptyCart stamp: 'JEA 12/2/2020 18:05:50'!
PASSED!

!testRun: #CashierTest #test02CalculatedTotalIsCorrect stamp: 'JEA 12/2/2020 18:05:50'!
PASSED!

!testRun: #CashierTest #test03CanNotCheckoutWithAnExpiredCreditCart stamp: 'JEA 12/2/2020 18:05:50'!
PASSED!

!testRun: #CashierTest #test04CheckoutRegistersASale stamp: 'JEA 12/2/2020 18:05:50'!
PASSED!

!testRun: #CashierTest #test05CashierChargesCreditCardUsingMerchantProcessor stamp: 'JEA 12/2/2020 18:05:50'!
PASSED!

!testRun: #CashierTest #test06CashierDoesNotSaleWhenTheCreditCardHasNoCredit stamp: 'JEA 12/2/2020 18:05:50'!
PASSED!

!testRun: #RestInterfaceTest #test01cannotCreateCartForInvalidClientID stamp: 'JEA 12/2/2020 18:05:50'!
PASSED!

!testRun: #RestInterfaceTest #test02cannotCreateCartForClientWithWrongPassword stamp: 'JEA 12/2/2020 18:05:50'!
PASSED!

!testRun: #RestInterfaceTest #test03canCreateCartForWellAuthenticatedClient stamp: 'JEA 12/2/2020 18:05:50'!
PASSED!

!testRun: #RestInterfaceTest #test04canCreateMoreThanOneCartWithDifferentIDs stamp: 'JEA 12/2/2020 18:05:50'!
PASSED!

!testRun: #RestInterfaceTest #test05cannotAddToCartWithInvalidID stamp: 'JEA 12/2/2020 18:05:50'!
PASSED!

!testRun: #RestInterfaceTest #test06canAddItemToCartWithValidID stamp: 'JEA 12/2/2020 18:05:50'!
PASSED!

!testRun: #RestInterfaceTest #test07cannotCheckOutCartWithInvalidID stamp: 'JEA 12/2/2020 18:05:50'!
PASSED!

!testRun: #RestInterfaceTest #test08cannotCheckOutCartWithCreditCardNumberTooShort stamp: 'JEA 12/2/2020 18:05:50'!
PASSED!

!testRun: #RestInterfaceTest #test09cannotCheckOutCartWithNonNumericCreditCardNumber stamp: 'JEA 12/2/2020 18:05:50'!
PASSED!

!testRun: #RestInterfaceTest #test10canCheckOutNonEmptyValidCartWithValidCreditCard stamp: 'JEA 12/2/2020 18:05:50'!
PASSED!

!testRun: #RestInterfaceTest #test11cannotListCartWithInvalidID stamp: 'JEA 12/2/2020 18:05:50'!
PASSED!

!testRun: #RestInterfaceTest #test12cannotAccessCartAfterTimeoutSinceCreated stamp: 'JEA 12/2/2020 18:05:50'!
PASSED!
!RestInterface class methodsFor: 'instance creation' stamp: 'JEA 12/2/2020 18:08:00'!
authenticatingWith: anAuthenticator debitingWith: aMerchantProcessor itemsFrom: aCatalog withClock: aClock  

	^self new initializeWithAuthenticator: anAuthenticator withMerchantProcessor: aMerchantProcessor withCatalog: aCatalog withClock: aClock.! !
!RestInterfaceTest methodsFor: 'as yet unclassified' stamp: 'JEA 12/2/2020 18:08:00' prior: 50880890!
test10canCheckOutNonEmptyValidCartWithValidCreditCard
	| restInterface cartID transactionID |

	restInterface := RestInterface 
		authenticatingWith: AuthenticatorSimulator newSimulatingValidAuthentication 
		debitingWith: self itemsFrom: testObjectsFactory defaultCatalog 
		withClock: Clock newSimulatingRealTime.
		
	cartID := restInterface
		createCartFor: testObjectsFactory validClientID
		password: testObjectsFactory correctPassword.
		
	restInterface 
		add: 1 
		of: testObjectsFactory itemSoldByTheStore 
		toCartWithID: cartID.
	
	transactionID := restInterface 
		checkOutCartWithID: cartID 
		withCardNumber: testObjectsFactory validCardNumber 
		expiring: testObjectsFactory expirationDateNotReached 
		owner: testObjectsFactory validCreditCardOwnersName.
	
	self assert: testObjectsFactory itemSoldByTheStorePrice 
		equals: (restInterface moneyDebitedInTransactionWithID: transactionID).! !
!RestInterfaceTest methodsFor: 'as yet unclassified' stamp: 'JEA 12/2/2020 18:08:00' prior: 50881627!
test12cannotAccessCartAfterTimeoutSinceCreated
	| restInterface cartID clock |

	clock := Clock newSimulatingRealTime.

	restInterface := RestInterface 
		authenticatingWith: AuthenticatorSimulator newSimulatingValidAuthentication 
		debitingWith: self itemsFrom: testObjectsFactory defaultCatalog
		withClock: clock.
	
	cartID := restInterface 
		createCartFor: testObjectsFactory validClientID
		password: testObjectsFactory correctPassword.
	
	clock simulateAdvancing: testObjectsFactory cartTimeout.
	
	self should: [ 
		restInterface 
			add: 2 
			of: testObjectsFactory itemSoldByTheStore 
			toCartWithID: cartID. 
		]
		raise: Error
		withMessageText: RestInterface cartTimedOutMessage.
	
	self should: [ restInterface listItemsInCartWithID: cartID. ]
		raise: Error
		withMessageText: RestInterface cartTimedOutMessage.
	
	self should: [ 
		restInterface 
			checkOutCartWithID: cartID 
			withCardNumber: testObjectsFactory validCardNumber 
			expiring: testObjectsFactory expirationDateNotReached 
			owner: testObjectsFactory validClientID.
		]
		raise: Error
		withMessageText: RestInterface cartTimedOutMessage.! !
!RestInterfaceTest methodsFor: 'as yet unclassified' stamp: 'JEA 12/2/2020 18:08:00' prior: 50879153!
test05cannotAddToCartWithInvalidID
	| restInterface |

	restInterface := RestInterface 
		authenticatingWith: AuthenticatorSimulator newSimulatingValidAuthentication 
		debitingWith: self itemsFrom: testObjectsFactory defaultCatalog 
		withClock: Clock newSimulatingRealTime.
	
	self should: [ 
		restInterface 
			add: 1 
			of: testObjectsFactory itemSoldByTheStore 
			toCartWithID: testObjectsFactory invalidCartID. 
		]
		raise: Error
		withMessageText: RestInterface invalidCartIDMessage.! !
!RestInterfaceTest methodsFor: 'as yet unclassified' stamp: 'JEA 12/2/2020 18:08:00' prior: 50879417!
test01cannotCreateCartForInvalidClientID
	| restInterface authenticatorSimulator |
	
	authenticatorSimulator := AuthenticatorSimulator newSimulatingValidAuthentication.
	authenticatorSimulator simulateInvalidClientID.

	restInterface := RestInterface 
		authenticatingWith: authenticatorSimulator 
		debitingWith: self 
		itemsFrom: Dictionary new 
		withClock: Clock newSimulatingRealTime.
	
	self should: [ restInterface 
				createCartFor: testObjectsFactory validClientID 
				password: testObjectsFactory correctPassword. ]
		raise: Error
		withMessageText: RestInterface authenticationFailedMessage.! !
!RestInterfaceTest methodsFor: 'as yet unclassified' stamp: 'JEA 12/2/2020 18:08:00' prior: 50880855!
test11cannotListCartWithInvalidID
	| restInterface |

	restInterface := RestInterface 
		authenticatingWith: AuthenticatorSimulator newSimulatingValidAuthentication 
		debitingWith: self itemsFrom: testObjectsFactory defaultCatalog 
		withClock: Clock newSimulatingRealTime.
	
	self should: [ restInterface listItemsInCartWithID: testObjectsFactory invalidCartID. ]
		raise: Error
		withMessageText: RestInterface invalidCartIDMessage.! !
!RestInterfaceTest methodsFor: 'as yet unclassified' stamp: 'JEA 12/2/2020 18:08:00' prior: 50881328!
test08cannotCheckOutCartWithCreditCardNumberTooShort
	| restInterface cartID |

	restInterface := RestInterface 
		authenticatingWith: AuthenticatorSimulator newSimulatingValidAuthentication 
		debitingWith: self itemsFrom: testObjectsFactory defaultCatalog 
		withClock: Clock newSimulatingRealTime.
		
	cartID := restInterface
		createCartFor: testObjectsFactory validClientID
		password: testObjectsFactory correctPassword.
	
	restInterface 
		add: 1 
		of: testObjectsFactory itemSoldByTheStore 
		toCartWithID: cartID.
	
	self should: [ 
		restInterface 
			checkOutCartWithID: cartID 
			withCardNumber: testObjectsFactory invalidCardNumberShort 
			expiring: testObjectsFactory expirationDateNotReached 
			owner: testObjectsFactory validCreditCardOwnersName. 
		]
		raise: Error
		withMessageText: RestInterface invalidCreditCardNumberMessage.! !
!RestInterfaceTest methodsFor: 'as yet unclassified' stamp: 'JEA 12/2/2020 18:08:00' prior: 50879463!
test03canCreateCartForWellAuthenticatedClient
	| restInterface authenticatorSimulator cartID cartList |
	
	authenticatorSimulator := AuthenticatorSimulator newSimulatingValidAuthentication.
	
	restInterface := RestInterface 
		authenticatingWith: authenticatorSimulator 
		debitingWith: self 
		itemsFrom: Dictionary new 
		withClock: Clock newSimulatingRealTime.
	
	cartID := restInterface 
				createCartFor: testObjectsFactory validClientID 
				password: testObjectsFactory correctPassword.
	
	cartList := restInterface listItemsInCartWithID: cartID.
	
	self assert: cartList isEmpty.! !
!RestInterfaceTest methodsFor: 'as yet unclassified' stamp: 'JEA 12/2/2020 18:08:00' prior: 50881297!
test09cannotCheckOutCartWithNonNumericCreditCardNumber
	| restInterface cartID |

	restInterface := RestInterface 
		authenticatingWith: AuthenticatorSimulator newSimulatingValidAuthentication 
		debitingWith: self itemsFrom: testObjectsFactory defaultCatalog 
		withClock: Clock newSimulatingRealTime.
		
	cartID := restInterface
		createCartFor: testObjectsFactory validClientID
		password: testObjectsFactory correctPassword.
	
	restInterface 
		add: 1 
		of: testObjectsFactory itemSoldByTheStore 
		toCartWithID: cartID.
	
	self should: [ 
		restInterface 
			checkOutCartWithID: cartID 
			withCardNumber: testObjectsFactory invalidCardNumberNonNumeric 
			expiring: testObjectsFactory expirationDateNotReached 
			owner: testObjectsFactory validCreditCardOwnersName. 
		]
		raise: Error
		withMessageText: RestInterface invalidCreditCardNumberMessage.! !
!RestInterfaceTest methodsFor: 'as yet unclassified' stamp: 'JEA 12/2/2020 18:08:00' prior: 50880955!
test07cannotCheckOutCartWithInvalidID
	| restInterface |

	restInterface := RestInterface 
		authenticatingWith: AuthenticatorSimulator newSimulatingValidAuthentication 
		debitingWith: self itemsFrom: testObjectsFactory defaultCatalog withClock: Clock newSimulatingRealTime.
	
	self should: [ 
		restInterface 
			checkOutCartWithID: testObjectsFactory invalidCartID 
			withCardNumber: testObjectsFactory validCardNumber 
			expiring: testObjectsFactory expirationDateNotReached 
			owner: testObjectsFactory validCreditCardOwnersName. 
		]
		raise: Error
		withMessageText: RestInterface invalidCartIDMessage.! !
!RestInterfaceTest methodsFor: 'as yet unclassified' stamp: 'JEA 12/2/2020 18:08:00' prior: 50879486!
test04canCreateMoreThanOneCartWithDifferentIDs
	| restInterface authenticatorSimulator cartID1 cartID2 |
	
	authenticatorSimulator := AuthenticatorSimulator newSimulatingValidAuthentication.
	
	restInterface := RestInterface 
		authenticatingWith: authenticatorSimulator 
		debitingWith: self 
		itemsFrom: Dictionary new 
		withClock: Clock newSimulatingRealTime.
	
	cartID1 := restInterface 
				createCartFor: testObjectsFactory validClientID 
				password: testObjectsFactory correctPassword.

	cartID2 := restInterface 
				createCartFor: testObjectsFactory validClientID 
				password: testObjectsFactory correctPassword.
	
	self assert: cartID1 ~= cartID2.! !
!RestInterfaceTest methodsFor: 'as yet unclassified' stamp: 'JEA 12/2/2020 18:08:00' prior: 50879440!
test02cannotCreateCartForClientWithWrongPassword
	| restInterface authenticatorSimulator |
	
	authenticatorSimulator := AuthenticatorSimulator newSimulatingValidAuthentication.
	authenticatorSimulator simulateWrongPassword.
	
	restInterface := RestInterface 
		authenticatingWith: authenticatorSimulator 
		debitingWith: self 
		itemsFrom: Dictionary new 
		withClock: Clock newSimulatingRealTime.
	
	self should: [ restInterface 
				createCartFor: testObjectsFactory validClientID 
				password: testObjectsFactory correctPassword. ]
		raise: Error
		withMessageText: RestInterface authenticationFailedMessage.! !
!RestInterfaceTest methodsFor: 'as yet unclassified' stamp: 'JEA 12/2/2020 18:08:00' prior: 50879290!
test06canAddItemToCartWithValidID
	| restInterface cartID |

	restInterface := RestInterface 
		authenticatingWith: AuthenticatorSimulator newSimulatingValidAuthentication 
		debitingWith: self itemsFrom: testObjectsFactory defaultCatalog 
		withClock: Clock newSimulatingRealTime.
	
	cartID := restInterface 
		createCartFor: testObjectsFactory validClientID
		password: testObjectsFactory correctPassword.
	
	restInterface 
		add: 2 
		of: testObjectsFactory itemSoldByTheStore 
		toCartWithID: cartID.
	
	self assert: 2 
		equals: ((restInterface listItemsInCartWithID: cartID) occurrencesOf: testObjectsFactory itemSoldByTheStore).! !

!methodRemoval: RestInterface class #newWithAuthenticator:withMerchantProcessor:withCatalog:withClock: stamp: 'JEA 12/2/2020 18:08:00'!
newWithAuthenticator: anAuthenticator withMerchantProcessor: aMerchantProcessor withCatalog: aCatalog withClock: aClock  

	^self new initializeWithAuthenticator: anAuthenticator withMerchantProcessor: aMerchantProcessor withCatalog: aCatalog withClock: aClock.!

!testRun: #CartTest #test01NewCartsAreCreatedEmpty stamp: 'JEA 12/2/2020 18:08:05'!
PASSED!

!testRun: #CartTest #test02CanNotAddItemsThatDoNotBelongToStore stamp: 'JEA 12/2/2020 18:08:05'!
PASSED!

!testRun: #CartTest #test03AfterAddingAnItemTheCartIsNotEmptyAnymore stamp: 'JEA 12/2/2020 18:08:05'!
PASSED!

!testRun: #CartTest #test04CanNotAddNonPositiveNumberOfItems stamp: 'JEA 12/2/2020 18:08:05'!
PASSED!

!testRun: #CartTest #test05CanNotAddMoreThanOneItemNotSellByTheStore stamp: 'JEA 12/2/2020 18:08:05'!
PASSED!

!testRun: #CartTest #test06CartRemembersAddedItems stamp: 'JEA 12/2/2020 18:08:05'!
PASSED!

!testRun: #CartTest #test07CartDoesNotHoldNotAddedItems stamp: 'JEA 12/2/2020 18:08:05'!
PASSED!

!testRun: #CartTest #test08CartRemembersTheNumberOfAddedItems stamp: 'JEA 12/2/2020 18:08:05'!
PASSED!

!testRun: #CashierTest #test01CanNotCheckoutAnEmptyCart stamp: 'JEA 12/2/2020 18:08:05'!
PASSED!

!testRun: #CashierTest #test02CalculatedTotalIsCorrect stamp: 'JEA 12/2/2020 18:08:05'!
PASSED!

!testRun: #CashierTest #test03CanNotCheckoutWithAnExpiredCreditCart stamp: 'JEA 12/2/2020 18:08:05'!
PASSED!

!testRun: #CashierTest #test04CheckoutRegistersASale stamp: 'JEA 12/2/2020 18:08:05'!
PASSED!

!testRun: #CashierTest #test05CashierChargesCreditCardUsingMerchantProcessor stamp: 'JEA 12/2/2020 18:08:05'!
PASSED!

!testRun: #CashierTest #test06CashierDoesNotSaleWhenTheCreditCardHasNoCredit stamp: 'JEA 12/2/2020 18:08:05'!
PASSED!

!testRun: #RestInterfaceTest #test01cannotCreateCartForInvalidClientID stamp: 'JEA 12/2/2020 18:08:05'!
PASSED!

!testRun: #RestInterfaceTest #test02cannotCreateCartForClientWithWrongPassword stamp: 'JEA 12/2/2020 18:08:05'!
PASSED!

!testRun: #RestInterfaceTest #test03canCreateCartForWellAuthenticatedClient stamp: 'JEA 12/2/2020 18:08:05'!
PASSED!

!testRun: #RestInterfaceTest #test04canCreateMoreThanOneCartWithDifferentIDs stamp: 'JEA 12/2/2020 18:08:05'!
PASSED!

!testRun: #RestInterfaceTest #test05cannotAddToCartWithInvalidID stamp: 'JEA 12/2/2020 18:08:05'!
PASSED!

!testRun: #RestInterfaceTest #test06canAddItemToCartWithValidID stamp: 'JEA 12/2/2020 18:08:05'!
PASSED!

!testRun: #RestInterfaceTest #test07cannotCheckOutCartWithInvalidID stamp: 'JEA 12/2/2020 18:08:05'!
PASSED!

!testRun: #RestInterfaceTest #test08cannotCheckOutCartWithCreditCardNumberTooShort stamp: 'JEA 12/2/2020 18:08:05'!
PASSED!

!testRun: #RestInterfaceTest #test09cannotCheckOutCartWithNonNumericCreditCardNumber stamp: 'JEA 12/2/2020 18:08:05'!
PASSED!

!testRun: #RestInterfaceTest #test10canCheckOutNonEmptyValidCartWithValidCreditCard stamp: 'JEA 12/2/2020 18:08:05'!
PASSED!

!testRun: #RestInterfaceTest #test11cannotListCartWithInvalidID stamp: 'JEA 12/2/2020 18:08:05'!
PASSED!

!testRun: #RestInterfaceTest #test12cannotAccessCartAfterTimeoutSinceCreated stamp: 'JEA 12/2/2020 18:08:05'!
PASSED!
!RestInterface class methodsFor: 'instance creation' stamp: 'JEA 12/2/2020 18:09:07'!
authenticatingWith: anAuthenticator debitingWith: aMerchantProcessor itemsFrom: aCatalog withClock: aClock withCartTimeout: aTimeMeasure   

	^self new initializeWithAuthenticator: anAuthenticator withMerchantProcessor: aMerchantProcessor withCatalog: aCatalog withClock: aClock.! !
!RestInterfaceTest methodsFor: 'as yet unclassified' stamp: 'JEA 12/2/2020 18:09:07' prior: 50881884!
test11cannotListCartWithInvalidID
	| restInterface |

	restInterface := RestInterface 
		authenticatingWith: AuthenticatorSimulator newSimulatingValidAuthentication 
		debitingWith: self itemsFrom: testObjectsFactory defaultCatalog 
		withClock: Clock newSimulatingRealTime withCartTimeout: testObjectsFactory cartTimeout.
	
	self should: [ restInterface listItemsInCartWithID: testObjectsFactory invalidCartID. ]
		raise: Error
		withMessageText: RestInterface invalidCartIDMessage.! !
!RestInterfaceTest methodsFor: 'as yet unclassified' stamp: 'JEA 12/2/2020 18:09:07' prior: 50881953!
test09cannotCheckOutCartWithNonNumericCreditCardNumber
	| restInterface cartID |

	restInterface := RestInterface 
		authenticatingWith: AuthenticatorSimulator newSimulatingValidAuthentication 
		debitingWith: self itemsFrom: testObjectsFactory defaultCatalog 
		withClock: Clock newSimulatingRealTime withCartTimeout: testObjectsFactory cartTimeout.
		
	cartID := restInterface
		createCartFor: testObjectsFactory validClientID
		password: testObjectsFactory correctPassword.
	
	restInterface 
		add: 1 
		of: testObjectsFactory itemSoldByTheStore 
		toCartWithID: cartID.
	
	self should: [ 
		restInterface 
			checkOutCartWithID: cartID 
			withCardNumber: testObjectsFactory invalidCardNumberNonNumeric 
			expiring: testObjectsFactory expirationDateNotReached 
			owner: testObjectsFactory validCreditCardOwnersName. 
		]
		raise: Error
		withMessageText: RestInterface invalidCreditCardNumberMessage.! !
!RestInterfaceTest methodsFor: 'as yet unclassified' stamp: 'JEA 12/2/2020 18:09:07' prior: 50881842!
test05cannotAddToCartWithInvalidID
	| restInterface |

	restInterface := RestInterface 
		authenticatingWith: AuthenticatorSimulator newSimulatingValidAuthentication 
		debitingWith: self itemsFrom: testObjectsFactory defaultCatalog 
		withClock: Clock newSimulatingRealTime withCartTimeout: testObjectsFactory cartTimeout.
	
	self should: [ 
		restInterface 
			add: 1 
			of: testObjectsFactory itemSoldByTheStore 
			toCartWithID: testObjectsFactory invalidCartID. 
		]
		raise: Error
		withMessageText: RestInterface invalidCartIDMessage.! !
!RestInterfaceTest methodsFor: 'as yet unclassified' stamp: 'JEA 12/2/2020 18:09:07' prior: 50881803!
test12cannotAccessCartAfterTimeoutSinceCreated
	| restInterface cartID clock |

	clock := Clock newSimulatingRealTime.

	restInterface := RestInterface 
		authenticatingWith: AuthenticatorSimulator newSimulatingValidAuthentication 
		debitingWith: self itemsFrom: testObjectsFactory defaultCatalog
		withClock: clock withCartTimeout: testObjectsFactory cartTimeout.
	
	cartID := restInterface 
		createCartFor: testObjectsFactory validClientID
		password: testObjectsFactory correctPassword.
	
	clock simulateAdvancing: testObjectsFactory cartTimeout.
	
	self should: [ 
		restInterface 
			add: 2 
			of: testObjectsFactory itemSoldByTheStore 
			toCartWithID: cartID. 
		]
		raise: Error
		withMessageText: RestInterface cartTimedOutMessage.
	
	self should: [ restInterface listItemsInCartWithID: cartID. ]
		raise: Error
		withMessageText: RestInterface cartTimedOutMessage.
	
	self should: [ 
		restInterface 
			checkOutCartWithID: cartID 
			withCardNumber: testObjectsFactory validCardNumber 
			expiring: testObjectsFactory expirationDateNotReached 
			owner: testObjectsFactory validClientID.
		]
		raise: Error
		withMessageText: RestInterface cartTimedOutMessage.! !
!RestInterfaceTest methodsFor: 'as yet unclassified' stamp: 'JEA 12/2/2020 18:09:07' prior: 50881861!
test01cannotCreateCartForInvalidClientID
	| restInterface authenticatorSimulator |
	
	authenticatorSimulator := AuthenticatorSimulator newSimulatingValidAuthentication.
	authenticatorSimulator simulateInvalidClientID.

	restInterface := RestInterface 
		authenticatingWith: authenticatorSimulator 
		debitingWith: self 
		itemsFrom: Dictionary new 
		withClock: Clock newSimulatingRealTime withCartTimeout: testObjectsFactory cartTimeout.
	
	self should: [ restInterface 
				createCartFor: testObjectsFactory validClientID 
				password: testObjectsFactory correctPassword. ]
		raise: Error
		withMessageText: RestInterface authenticationFailedMessage.! !
!RestInterfaceTest methodsFor: 'as yet unclassified' stamp: 'JEA 12/2/2020 18:09:07' prior: 50881901!
test08cannotCheckOutCartWithCreditCardNumberTooShort
	| restInterface cartID |

	restInterface := RestInterface 
		authenticatingWith: AuthenticatorSimulator newSimulatingValidAuthentication 
		debitingWith: self itemsFrom: testObjectsFactory defaultCatalog 
		withClock: Clock newSimulatingRealTime withCartTimeout: testObjectsFactory cartTimeout.
		
	cartID := restInterface
		createCartFor: testObjectsFactory validClientID
		password: testObjectsFactory correctPassword.
	
	restInterface 
		add: 1 
		of: testObjectsFactory itemSoldByTheStore 
		toCartWithID: cartID.
	
	self should: [ 
		restInterface 
			checkOutCartWithID: cartID 
			withCardNumber: testObjectsFactory invalidCardNumberShort 
			expiring: testObjectsFactory expirationDateNotReached 
			owner: testObjectsFactory validCreditCardOwnersName. 
		]
		raise: Error
		withMessageText: RestInterface invalidCreditCardNumberMessage.! !
!RestInterfaceTest methodsFor: 'as yet unclassified' stamp: 'JEA 12/2/2020 18:09:07' prior: 50881931!
test03canCreateCartForWellAuthenticatedClient
	| restInterface authenticatorSimulator cartID cartList |
	
	authenticatorSimulator := AuthenticatorSimulator newSimulatingValidAuthentication.
	
	restInterface := RestInterface 
		authenticatingWith: authenticatorSimulator 
		debitingWith: self 
		itemsFrom: Dictionary new 
		withClock: Clock newSimulatingRealTime withCartTimeout: testObjectsFactory cartTimeout.
	
	cartID := restInterface 
				createCartFor: testObjectsFactory validClientID 
				password: testObjectsFactory correctPassword.
	
	cartList := restInterface listItemsInCartWithID: cartID.
	
	self assert: cartList isEmpty.! !
!RestInterfaceTest methodsFor: 'as yet unclassified' stamp: 'JEA 12/2/2020 18:09:07' prior: 50881771!
test10canCheckOutNonEmptyValidCartWithValidCreditCard
	| restInterface cartID transactionID |

	restInterface := RestInterface 
		authenticatingWith: AuthenticatorSimulator newSimulatingValidAuthentication 
		debitingWith: self itemsFrom: testObjectsFactory defaultCatalog 
		withClock: Clock newSimulatingRealTime withCartTimeout: testObjectsFactory cartTimeout.
		
	cartID := restInterface
		createCartFor: testObjectsFactory validClientID
		password: testObjectsFactory correctPassword.
		
	restInterface 
		add: 1 
		of: testObjectsFactory itemSoldByTheStore 
		toCartWithID: cartID.
	
	transactionID := restInterface 
		checkOutCartWithID: cartID 
		withCardNumber: testObjectsFactory validCardNumber 
		expiring: testObjectsFactory expirationDateNotReached 
		owner: testObjectsFactory validCreditCardOwnersName.
	
	self assert: testObjectsFactory itemSoldByTheStorePrice 
		equals: (restInterface moneyDebitedInTransactionWithID: transactionID).! !
!RestInterfaceTest methodsFor: 'as yet unclassified' stamp: 'JEA 12/2/2020 18:09:07' prior: 50882055!
test06canAddItemToCartWithValidID
	| restInterface cartID |

	restInterface := RestInterface 
		authenticatingWith: AuthenticatorSimulator newSimulatingValidAuthentication 
		debitingWith: self itemsFrom: testObjectsFactory defaultCatalog 
		withClock: Clock newSimulatingRealTime withCartTimeout: testObjectsFactory cartTimeout.
	
	cartID := restInterface 
		createCartFor: testObjectsFactory validClientID
		password: testObjectsFactory correctPassword.
	
	restInterface 
		add: 2 
		of: testObjectsFactory itemSoldByTheStore 
		toCartWithID: cartID.
	
	self assert: 2 
		equals: ((restInterface listItemsInCartWithID: cartID) occurrencesOf: testObjectsFactory itemSoldByTheStore).! !
!RestInterfaceTest methodsFor: 'as yet unclassified' stamp: 'JEA 12/2/2020 18:09:07' prior: 50882032!
test02cannotCreateCartForClientWithWrongPassword
	| restInterface authenticatorSimulator |
	
	authenticatorSimulator := AuthenticatorSimulator newSimulatingValidAuthentication.
	authenticatorSimulator simulateWrongPassword.
	
	restInterface := RestInterface 
		authenticatingWith: authenticatorSimulator 
		debitingWith: self 
		itemsFrom: Dictionary new 
		withClock: Clock newSimulatingRealTime withCartTimeout: testObjectsFactory cartTimeout.
	
	self should: [ restInterface 
				createCartFor: testObjectsFactory validClientID 
				password: testObjectsFactory correctPassword. ]
		raise: Error
		withMessageText: RestInterface authenticationFailedMessage.! !
!RestInterfaceTest methodsFor: 'as yet unclassified' stamp: 'JEA 12/2/2020 18:09:07' prior: 50881984!
test07cannotCheckOutCartWithInvalidID
	| restInterface |

	restInterface := RestInterface 
		authenticatingWith: AuthenticatorSimulator newSimulatingValidAuthentication 
		debitingWith: self itemsFrom: testObjectsFactory defaultCatalog withClock: Clock newSimulatingRealTime withCartTimeout: testObjectsFactory cartTimeout.
	
	self should: [ 
		restInterface 
			checkOutCartWithID: testObjectsFactory invalidCartID 
			withCardNumber: testObjectsFactory validCardNumber 
			expiring: testObjectsFactory expirationDateNotReached 
			owner: testObjectsFactory validCreditCardOwnersName. 
		]
		raise: Error
		withMessageText: RestInterface invalidCartIDMessage.! !
!RestInterfaceTest methodsFor: 'as yet unclassified' stamp: 'JEA 12/2/2020 18:09:07' prior: 50882007!
test04canCreateMoreThanOneCartWithDifferentIDs
	| restInterface authenticatorSimulator cartID1 cartID2 |
	
	authenticatorSimulator := AuthenticatorSimulator newSimulatingValidAuthentication.
	
	restInterface := RestInterface 
		authenticatingWith: authenticatorSimulator 
		debitingWith: self 
		itemsFrom: Dictionary new 
		withClock: Clock newSimulatingRealTime withCartTimeout: testObjectsFactory cartTimeout.
	
	cartID1 := restInterface 
				createCartFor: testObjectsFactory validClientID 
				password: testObjectsFactory correctPassword.

	cartID2 := restInterface 
				createCartFor: testObjectsFactory validClientID 
				password: testObjectsFactory correctPassword.
	
	self assert: cartID1 ~= cartID2.! !

!methodRemoval: RestInterface class #authenticatingWith:debitingWith:itemsFrom:withClock: stamp: 'JEA 12/2/2020 18:09:07'!
authenticatingWith: anAuthenticator debitingWith: aMerchantProcessor itemsFrom: aCatalog withClock: aClock  

	^self new initializeWithAuthenticator: anAuthenticator withMerchantProcessor: aMerchantProcessor withCatalog: aCatalog withClock: aClock.!

!testRun: #CartTest #test01NewCartsAreCreatedEmpty stamp: 'JEA 12/2/2020 18:09:25'!
PASSED!

!testRun: #CartTest #test02CanNotAddItemsThatDoNotBelongToStore stamp: 'JEA 12/2/2020 18:09:25'!
PASSED!

!testRun: #CartTest #test03AfterAddingAnItemTheCartIsNotEmptyAnymore stamp: 'JEA 12/2/2020 18:09:25'!
PASSED!

!testRun: #CartTest #test04CanNotAddNonPositiveNumberOfItems stamp: 'JEA 12/2/2020 18:09:25'!
PASSED!

!testRun: #CartTest #test05CanNotAddMoreThanOneItemNotSellByTheStore stamp: 'JEA 12/2/2020 18:09:25'!
PASSED!

!testRun: #CartTest #test06CartRemembersAddedItems stamp: 'JEA 12/2/2020 18:09:25'!
PASSED!

!testRun: #CartTest #test07CartDoesNotHoldNotAddedItems stamp: 'JEA 12/2/2020 18:09:25'!
PASSED!

!testRun: #CartTest #test08CartRemembersTheNumberOfAddedItems stamp: 'JEA 12/2/2020 18:09:25'!
PASSED!

!testRun: #CashierTest #test01CanNotCheckoutAnEmptyCart stamp: 'JEA 12/2/2020 18:09:25'!
PASSED!

!testRun: #CashierTest #test02CalculatedTotalIsCorrect stamp: 'JEA 12/2/2020 18:09:25'!
PASSED!

!testRun: #CashierTest #test03CanNotCheckoutWithAnExpiredCreditCart stamp: 'JEA 12/2/2020 18:09:25'!
PASSED!

!testRun: #CashierTest #test04CheckoutRegistersASale stamp: 'JEA 12/2/2020 18:09:25'!
PASSED!

!testRun: #CashierTest #test05CashierChargesCreditCardUsingMerchantProcessor stamp: 'JEA 12/2/2020 18:09:25'!
PASSED!

!testRun: #CashierTest #test06CashierDoesNotSaleWhenTheCreditCardHasNoCredit stamp: 'JEA 12/2/2020 18:09:25'!
PASSED!

!testRun: #RestInterfaceTest #test01cannotCreateCartForInvalidClientID stamp: 'JEA 12/2/2020 18:09:25'!
PASSED!

!testRun: #RestInterfaceTest #test02cannotCreateCartForClientWithWrongPassword stamp: 'JEA 12/2/2020 18:09:25'!
PASSED!

!testRun: #RestInterfaceTest #test03canCreateCartForWellAuthenticatedClient stamp: 'JEA 12/2/2020 18:09:25'!
PASSED!

!testRun: #RestInterfaceTest #test04canCreateMoreThanOneCartWithDifferentIDs stamp: 'JEA 12/2/2020 18:09:25'!
PASSED!

!testRun: #RestInterfaceTest #test05cannotAddToCartWithInvalidID stamp: 'JEA 12/2/2020 18:09:25'!
PASSED!

!testRun: #RestInterfaceTest #test06canAddItemToCartWithValidID stamp: 'JEA 12/2/2020 18:09:25'!
PASSED!

!testRun: #RestInterfaceTest #test07cannotCheckOutCartWithInvalidID stamp: 'JEA 12/2/2020 18:09:25'!
PASSED!

!testRun: #RestInterfaceTest #test08cannotCheckOutCartWithCreditCardNumberTooShort stamp: 'JEA 12/2/2020 18:09:25'!
PASSED!

!testRun: #RestInterfaceTest #test09cannotCheckOutCartWithNonNumericCreditCardNumber stamp: 'JEA 12/2/2020 18:09:25'!
PASSED!

!testRun: #RestInterfaceTest #test10canCheckOutNonEmptyValidCartWithValidCreditCard stamp: 'JEA 12/2/2020 18:09:25'!
PASSED!

!testRun: #RestInterfaceTest #test11cannotListCartWithInvalidID stamp: 'JEA 12/2/2020 18:09:25'!
PASSED!

!testRun: #RestInterfaceTest #test12cannotAccessCartAfterTimeoutSinceCreated stamp: 'JEA 12/2/2020 18:09:25'!
PASSED!
!RestInterface methodsFor: 'initialization' stamp: 'JEA 12/2/2020 18:10:00'!
initializeWithAuthenticator: anAuthenticator withMerchantProcessor: aMerchantProcessor withCatalog: aCatalog withClock: aClock withCartTimeout: aTimeMeasure 

	authenticator := anAuthenticator.
	lastCartID := 0.
	catalog := aCatalog.
	clock := aClock.
	merchantProcessor := aMerchantProcessor.
	transactionValues := Dictionary new.
	carts := Dictionary new.
	lastInteractionForCart := Dictionary new.! !
!RestInterface class methodsFor: 'as yet unclassified' stamp: 'JEA 12/2/2020 18:10:00' prior: 50882180!
authenticatingWith: anAuthenticator debitingWith: aMerchantProcessor itemsFrom: aCatalog withClock: aClock withCartTimeout: aTimeMeasure   

	^self new initializeWithAuthenticator: anAuthenticator withMerchantProcessor: aMerchantProcessor withCatalog: aCatalog withClock: aClock withCartTimeout: aTimeMeasure.! !

!methodRemoval: RestInterface #initializeWithAuthenticator:withMerchantProcessor:withCatalog:withClock: stamp: 'JEA 12/2/2020 18:10:00'!
initializeWithAuthenticator: anAuthenticator withMerchantProcessor: aMerchantProcessor withCatalog: aCatalog withClock: aClock

	authenticator := anAuthenticator.
	lastCartID := 0.
	catalog := aCatalog.
	clock := aClock.
	merchantProcessor := aMerchantProcessor.
	transactionValues := Dictionary new.
	carts := Dictionary new.
	lastInteractionForCart := Dictionary new.!

!classDefinition: #RestInterface category: 'TusLibros' stamp: 'JEA 12/2/2020 18:10:31'!
Object subclass: #RestInterface
	instanceVariableNames: 'authenticator lastCartID carts lastInteractionForCart catalog clock transactionValues merchantProcessor cartTimeout'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!
!RestInterface methodsFor: 'initialization' stamp: 'JEA 12/2/2020 18:10:30' prior: 50882618!
initializeWithAuthenticator: anAuthenticator withMerchantProcessor: aMerchantProcessor withCatalog: aCatalog withClock: aClock withCartTimeout: aTimeMeasure 

	authenticator := anAuthenticator.
	lastCartID := 0.
	catalog := aCatalog.
	clock := aClock.
	merchantProcessor := aMerchantProcessor.
	cartTimeout := aTimeMeasure.
	transactionValues := Dictionary new.
	carts := Dictionary new.
	lastInteractionForCart := Dictionary new.! !
!RestInterface methodsFor: 'cart information' stamp: 'JEA 12/2/2020 18:10:39' prior: 50880206!
cartExpirationDateTimeForID: aCartID

	^(lastInteractionForCart at: aCartID) next: cartTimeout.! !

!testRun: #RestInterfaceTest #test01cannotCreateCartForInvalidClientID stamp: 'JEA 12/2/2020 18:10:40'!
PASSED!

!testRun: #RestInterfaceTest #test02cannotCreateCartForClientWithWrongPassword stamp: 'JEA 12/2/2020 18:10:40'!
PASSED!

!testRun: #RestInterfaceTest #test03canCreateCartForWellAuthenticatedClient stamp: 'JEA 12/2/2020 18:10:40'!
PASSED!

!testRun: #RestInterfaceTest #test04canCreateMoreThanOneCartWithDifferentIDs stamp: 'JEA 12/2/2020 18:10:40'!
PASSED!

!testRun: #RestInterfaceTest #test05cannotAddToCartWithInvalidID stamp: 'JEA 12/2/2020 18:10:40'!
PASSED!

!testRun: #RestInterfaceTest #test06canAddItemToCartWithValidID stamp: 'JEA 12/2/2020 18:10:40'!
PASSED!

!testRun: #RestInterfaceTest #test07cannotCheckOutCartWithInvalidID stamp: 'JEA 12/2/2020 18:10:40'!
PASSED!

!testRun: #RestInterfaceTest #test08cannotCheckOutCartWithCreditCardNumberTooShort stamp: 'JEA 12/2/2020 18:10:40'!
PASSED!

!testRun: #RestInterfaceTest #test09cannotCheckOutCartWithNonNumericCreditCardNumber stamp: 'JEA 12/2/2020 18:10:40'!
PASSED!

!testRun: #RestInterfaceTest #test10canCheckOutNonEmptyValidCartWithValidCreditCard stamp: 'JEA 12/2/2020 18:10:40'!
PASSED!

!testRun: #RestInterfaceTest #test11cannotListCartWithInvalidID stamp: 'JEA 12/2/2020 18:10:40'!
PASSED!

!testRun: #RestInterfaceTest #test12cannotAccessCartAfterTimeoutSinceCreated stamp: 'JEA 12/2/2020 18:10:40'!
PASSED!

!testRun: #CartTest #test01NewCartsAreCreatedEmpty stamp: 'JEA 12/2/2020 18:10:42'!
PASSED!

!testRun: #CartTest #test02CanNotAddItemsThatDoNotBelongToStore stamp: 'JEA 12/2/2020 18:10:42'!
PASSED!

!testRun: #CartTest #test03AfterAddingAnItemTheCartIsNotEmptyAnymore stamp: 'JEA 12/2/2020 18:10:42'!
PASSED!

!testRun: #CartTest #test04CanNotAddNonPositiveNumberOfItems stamp: 'JEA 12/2/2020 18:10:42'!
PASSED!

!testRun: #CartTest #test05CanNotAddMoreThanOneItemNotSellByTheStore stamp: 'JEA 12/2/2020 18:10:42'!
PASSED!

!testRun: #CartTest #test06CartRemembersAddedItems stamp: 'JEA 12/2/2020 18:10:42'!
PASSED!

!testRun: #CartTest #test07CartDoesNotHoldNotAddedItems stamp: 'JEA 12/2/2020 18:10:42'!
PASSED!

!testRun: #CartTest #test08CartRemembersTheNumberOfAddedItems stamp: 'JEA 12/2/2020 18:10:42'!
PASSED!

!testRun: #CashierTest #test01CanNotCheckoutAnEmptyCart stamp: 'JEA 12/2/2020 18:10:42'!
PASSED!

!testRun: #CashierTest #test02CalculatedTotalIsCorrect stamp: 'JEA 12/2/2020 18:10:42'!
PASSED!

!testRun: #CashierTest #test03CanNotCheckoutWithAnExpiredCreditCart stamp: 'JEA 12/2/2020 18:10:42'!
PASSED!

!testRun: #CashierTest #test04CheckoutRegistersASale stamp: 'JEA 12/2/2020 18:10:42'!
PASSED!

!testRun: #CashierTest #test05CashierChargesCreditCardUsingMerchantProcessor stamp: 'JEA 12/2/2020 18:10:42'!
PASSED!

!testRun: #CashierTest #test06CashierDoesNotSaleWhenTheCreditCardHasNoCredit stamp: 'JEA 12/2/2020 18:10:42'!
PASSED!

!testRun: #RestInterfaceTest #test01cannotCreateCartForInvalidClientID stamp: 'JEA 12/2/2020 18:10:42'!
PASSED!

!testRun: #RestInterfaceTest #test02cannotCreateCartForClientWithWrongPassword stamp: 'JEA 12/2/2020 18:10:42'!
PASSED!

!testRun: #RestInterfaceTest #test03canCreateCartForWellAuthenticatedClient stamp: 'JEA 12/2/2020 18:10:42'!
PASSED!

!testRun: #RestInterfaceTest #test04canCreateMoreThanOneCartWithDifferentIDs stamp: 'JEA 12/2/2020 18:10:42'!
PASSED!

!testRun: #RestInterfaceTest #test05cannotAddToCartWithInvalidID stamp: 'JEA 12/2/2020 18:10:42'!
PASSED!

!testRun: #RestInterfaceTest #test06canAddItemToCartWithValidID stamp: 'JEA 12/2/2020 18:10:42'!
PASSED!

!testRun: #RestInterfaceTest #test07cannotCheckOutCartWithInvalidID stamp: 'JEA 12/2/2020 18:10:42'!
PASSED!

!testRun: #RestInterfaceTest #test08cannotCheckOutCartWithCreditCardNumberTooShort stamp: 'JEA 12/2/2020 18:10:42'!
PASSED!

!testRun: #RestInterfaceTest #test09cannotCheckOutCartWithNonNumericCreditCardNumber stamp: 'JEA 12/2/2020 18:10:42'!
PASSED!

!testRun: #RestInterfaceTest #test10canCheckOutNonEmptyValidCartWithValidCreditCard stamp: 'JEA 12/2/2020 18:10:42'!
PASSED!

!testRun: #RestInterfaceTest #test11cannotListCartWithInvalidID stamp: 'JEA 12/2/2020 18:10:42'!
PASSED!

!testRun: #RestInterfaceTest #test12cannotAccessCartAfterTimeoutSinceCreated stamp: 'JEA 12/2/2020 18:10:42'!
PASSED!
!RestInterface class methodsFor: 'instance creation' stamp: 'JEA 12/2/2020 18:11:18' prior: 50882634!
authenticatingWith: anAuthenticator debitingWith: aMerchantProcessor itemsFrom: aCatalog withClock: aClock withCartTimeout: aTimeMeasure

	^self new initializeWithAuthenticator: anAuthenticator withMerchantProcessor: aMerchantProcessor withCatalog: aCatalog withClock: aClock withCartTimeout: aTimeMeasure.! !
!RestInterface methodsFor: 'initialization' stamp: 'JEA 12/2/2020 18:11:40'!
initializeAuthenticatingWith: anAuthenticator debitingWith: aMerchantProcessor itemsFrom: aCatalog withClock: aClock withCartTimeout: aTimeMeasure 

	authenticator := anAuthenticator.
	lastCartID := 0.
	catalog := aCatalog.
	clock := aClock.
	merchantProcessor := aMerchantProcessor.
	cartTimeout := aTimeMeasure.
	transactionValues := Dictionary new.
	carts := Dictionary new.
	lastInteractionForCart := Dictionary new.! !
!RestInterface class methodsFor: 'as yet unclassified' stamp: 'JEA 12/2/2020 18:11:40' prior: 50882830!
authenticatingWith: anAuthenticator debitingWith: aMerchantProcessor itemsFrom: aCatalog withClock: aClock withCartTimeout: aTimeMeasure

	^self new initializeAuthenticatingWith: anAuthenticator debitingWith: aMerchantProcessor itemsFrom: aCatalog withClock: aClock withCartTimeout: aTimeMeasure.! !

!methodRemoval: RestInterface #initializeWithAuthenticator:withMerchantProcessor:withCatalog:withClock:withCartTimeout: stamp: 'JEA 12/2/2020 18:11:40'!
initializeWithAuthenticator: anAuthenticator withMerchantProcessor: aMerchantProcessor withCatalog: aCatalog withClock: aClock withCartTimeout: aTimeMeasure 

	authenticator := anAuthenticator.
	lastCartID := 0.
	catalog := aCatalog.
	clock := aClock.
	merchantProcessor := aMerchantProcessor.
	cartTimeout := aTimeMeasure.
	transactionValues := Dictionary new.
	carts := Dictionary new.
	lastInteractionForCart := Dictionary new.!

!testRun: #CartTest #test01NewCartsAreCreatedEmpty stamp: 'JEA 12/2/2020 18:11:42'!
PASSED!

!testRun: #CartTest #test02CanNotAddItemsThatDoNotBelongToStore stamp: 'JEA 12/2/2020 18:11:42'!
PASSED!

!testRun: #CartTest #test03AfterAddingAnItemTheCartIsNotEmptyAnymore stamp: 'JEA 12/2/2020 18:11:42'!
PASSED!

!testRun: #CartTest #test04CanNotAddNonPositiveNumberOfItems stamp: 'JEA 12/2/2020 18:11:42'!
PASSED!

!testRun: #CartTest #test05CanNotAddMoreThanOneItemNotSellByTheStore stamp: 'JEA 12/2/2020 18:11:42'!
PASSED!

!testRun: #CartTest #test06CartRemembersAddedItems stamp: 'JEA 12/2/2020 18:11:42'!
PASSED!

!testRun: #CartTest #test07CartDoesNotHoldNotAddedItems stamp: 'JEA 12/2/2020 18:11:42'!
PASSED!

!testRun: #CartTest #test08CartRemembersTheNumberOfAddedItems stamp: 'JEA 12/2/2020 18:11:42'!
PASSED!

!testRun: #CashierTest #test01CanNotCheckoutAnEmptyCart stamp: 'JEA 12/2/2020 18:11:42'!
PASSED!

!testRun: #CashierTest #test02CalculatedTotalIsCorrect stamp: 'JEA 12/2/2020 18:11:42'!
PASSED!

!testRun: #CashierTest #test03CanNotCheckoutWithAnExpiredCreditCart stamp: 'JEA 12/2/2020 18:11:42'!
PASSED!

!testRun: #CashierTest #test04CheckoutRegistersASale stamp: 'JEA 12/2/2020 18:11:42'!
PASSED!

!testRun: #CashierTest #test05CashierChargesCreditCardUsingMerchantProcessor stamp: 'JEA 12/2/2020 18:11:42'!
PASSED!

!testRun: #CashierTest #test06CashierDoesNotSaleWhenTheCreditCardHasNoCredit stamp: 'JEA 12/2/2020 18:11:42'!
PASSED!

!testRun: #RestInterfaceTest #test01cannotCreateCartForInvalidClientID stamp: 'JEA 12/2/2020 18:11:42'!
PASSED!

!testRun: #RestInterfaceTest #test02cannotCreateCartForClientWithWrongPassword stamp: 'JEA 12/2/2020 18:11:42'!
PASSED!

!testRun: #RestInterfaceTest #test03canCreateCartForWellAuthenticatedClient stamp: 'JEA 12/2/2020 18:11:42'!
PASSED!

!testRun: #RestInterfaceTest #test04canCreateMoreThanOneCartWithDifferentIDs stamp: 'JEA 12/2/2020 18:11:42'!
PASSED!

!testRun: #RestInterfaceTest #test05cannotAddToCartWithInvalidID stamp: 'JEA 12/2/2020 18:11:42'!
PASSED!

!testRun: #RestInterfaceTest #test06canAddItemToCartWithValidID stamp: 'JEA 12/2/2020 18:11:42'!
PASSED!

!testRun: #RestInterfaceTest #test07cannotCheckOutCartWithInvalidID stamp: 'JEA 12/2/2020 18:11:42'!
PASSED!

!testRun: #RestInterfaceTest #test08cannotCheckOutCartWithCreditCardNumberTooShort stamp: 'JEA 12/2/2020 18:11:42'!
PASSED!

!testRun: #RestInterfaceTest #test09cannotCheckOutCartWithNonNumericCreditCardNumber stamp: 'JEA 12/2/2020 18:11:42'!
PASSED!

!testRun: #RestInterfaceTest #test10canCheckOutNonEmptyValidCartWithValidCreditCard stamp: 'JEA 12/2/2020 18:11:42'!
PASSED!

!testRun: #RestInterfaceTest #test11cannotListCartWithInvalidID stamp: 'JEA 12/2/2020 18:11:42'!
PASSED!

!testRun: #RestInterfaceTest #test12cannotAccessCartAfterTimeoutSinceCreated stamp: 'JEA 12/2/2020 18:11:42'!
PASSED!

!methodRemoval: RestInterfaceTest #test09cannotCheckOutCartWithNonNumericCreditCardNumber stamp: 'JEA 12/2/2020 19:17:43'!
test09cannotCheckOutCartWithNonNumericCreditCardNumber
	| restInterface cartID |

	restInterface := RestInterface 
		authenticatingWith: AuthenticatorSimulator newSimulatingValidAuthentication 
		debitingWith: self itemsFrom: testObjectsFactory defaultCatalog 
		withClock: Clock newSimulatingRealTime withCartTimeout: testObjectsFactory cartTimeout.
		
	cartID := restInterface
		createCartFor: testObjectsFactory validClientID
		password: testObjectsFactory correctPassword.
	
	restInterface 
		add: 1 
		of: testObjectsFactory itemSoldByTheStore 
		toCartWithID: cartID.
	
	self should: [ 
		restInterface 
			checkOutCartWithID: cartID 
			withCardNumber: testObjectsFactory invalidCardNumberNonNumeric 
			expiring: testObjectsFactory expirationDateNotReached 
			owner: testObjectsFactory validCreditCardOwnersName. 
		]
		raise: Error
		withMessageText: RestInterface invalidCreditCardNumberMessage.!

!methodRemoval: RestInterfaceTest #test08cannotCheckOutCartWithCreditCardNumberTooShort stamp: 'JEA 12/2/2020 19:17:44'!
test08cannotCheckOutCartWithCreditCardNumberTooShort
	| restInterface cartID |

	restInterface := RestInterface 
		authenticatingWith: AuthenticatorSimulator newSimulatingValidAuthentication 
		debitingWith: self itemsFrom: testObjectsFactory defaultCatalog 
		withClock: Clock newSimulatingRealTime withCartTimeout: testObjectsFactory cartTimeout.
		
	cartID := restInterface
		createCartFor: testObjectsFactory validClientID
		password: testObjectsFactory correctPassword.
	
	restInterface 
		add: 1 
		of: testObjectsFactory itemSoldByTheStore 
		toCartWithID: cartID.
	
	self should: [ 
		restInterface 
			checkOutCartWithID: cartID 
			withCardNumber: testObjectsFactory invalidCardNumberShort 
			expiring: testObjectsFactory expirationDateNotReached 
			owner: testObjectsFactory validCreditCardOwnersName. 
		]
		raise: Error
		withMessageText: RestInterface invalidCreditCardNumberMessage.!

!methodRemoval: RestInterface class #invalidCreditCardNumberMessage stamp: 'JEA 12/2/2020 19:17:52'!
invalidCreditCardNumberMessage

	^'The credit card number provided does not have a valid format.'.!
!RestInterface methodsFor: 'api' stamp: 'JEA 12/2/2020 19:18:09' prior: 50881471!
checkOutCartWithID: aCartID withCardNumber: aCardNumber expiring: aGregorianMonthOfYear owner: aName
	| creditCard |

	self ensureCartIDCanBeInteractedWith: aCartID.
	
	self resetTimerOfCartWithID: aCartID.
	
	creditCard := CreditCard expiringOn: aGregorianMonthOfYear.
	
	^self checkOut: (carts at: aCartID) withCard: creditCard.! !

!methodRemoval: RestInterface #ensureCreditCardNumberIsValid: stamp: 'JEA 12/2/2020 19:18:14'!
ensureCreditCardNumberIsValid: aCardNumber

	(aCardNumber size = 16 and: [ aCardNumber allSatisfy: [ :aCharacter | aCharacter isDigit. ]. ])
		ifFalse: [ self error: self class invalidCreditCardNumberMessage ].!

TestCase subclass: #CreditCardTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

!classDefinition: #CreditCardTest category: 'TusLibros' stamp: 'JEA 12/2/2020 19:28:09'!
TestCase subclass: #CreditCardTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!
!CreditCardTest methodsFor: 'tests' stamp: 'JEA 12/2/2020 19:36:12'!
test01cantCreateCardWithNumberTooShort

	self should: [ 
		CreditCard 
			numbered: '1' 
			ownedBy: 'Aquiles Vaesa'
			expiringOn: ''. 
		]
		raise: Error
		withMessageText: CreditCard cannotCreateCardUnlessNumberIsOfAdequateLength.! !
!CreditCardTest methodsFor: 'setup' stamp: 'JEA 12/2/2020 19:36:25' overrides: 16927572!
setUp

	! !

!classDefinition: #CreditCardTest category: 'TusLibros' stamp: 'JEA 12/2/2020 19:36:43'!
TestCase subclass: #CreditCardTest
	instanceVariableNames: 'testObjectsFactory'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!
!CreditCardTest methodsFor: 'setup' stamp: 'JEA 12/2/2020 19:36:42' prior: 50883095 overrides: 16927572!
setUp

	testObjectsFactory := StoreTestObjectsFactory new.! !
!CreditCardTest methodsFor: 'tests' stamp: 'JEA 12/2/2020 19:37:38' prior: 50883084!
test01cantCreateCardWithNumberTooShort

	self should: [ 
		CreditCard 
			numbered: testObjectsFactory invalidCardNumberShort 
			ownedBy: 'Aquiles Vaesa' 
			expiringOn: ''. 
		]
		raise: Error
		withMessageText: CreditCard cannotCreateCardUnlessNumberIsOfAdequateLength.! !
!CreditCardTest methodsFor: 'tests' stamp: 'JEA 12/2/2020 19:39:36' prior: 50883112!
test01cantCreateCardWithNumberTooShort

	self should: [ 
		CreditCard 
			numbered: testObjectsFactory invalidCardNumberShort 
			ownedBy: testObjectsFactory validCreditCardOwnersName 
			expiringOn: testObjectsFactory expirationDateNotReached. 
		]
		raise: Error
		withMessageText: CreditCard cannotCreateCardUnlessNumberIsOfAdequateLength.! !

!testRun: #CreditCardTest #test01cantCreateCardWithNumberTooShort stamp: 'JEA 12/2/2020 19:39:44'!
ERROR!

!testRun: #CreditCardTest #test01cantCreateCardWithNumberTooShort stamp: 'JEA 12/2/2020 19:39:44'!
ERROR!
!CreditCardTest methodsFor: 'tests' stamp: 'JEA 12/2/2020 19:46:38' prior: 50883124!
test01cantCreateCardWithNumberTooShort

	self should: [ 
		CreditCard 
			numbered: testObjectsFactory invalidCardNumberShort 
			ownedBy: testObjectsFactory validCreditCardOwnersName 
			expiringOn: testObjectsFactory expirationDateNotReached. 
		]
		raise: Error
		withMessageText: CreditCard cannotCreateCardUnlessNumberIsOfAdequateLengthMessage.! !
!CreditCard class methodsFor: 'error messages' stamp: 'JEA 12/2/2020 19:50:13'!
cannotCreateCardUnlessNumberIsOfAdequateLengthMessage

	^'Card number should be 16 digits long.'.! !

!testRun: #CreditCardTest #test01cantCreateCardWithNumberTooShort stamp: 'JEA 12/2/2020 19:50:22'!
FAILURE!

!testRun: #CreditCardTest #test01cantCreateCardWithNumberTooShort stamp: 'JEA 12/2/2020 19:50:22'!
FAILURE!
!CreditCard class methodsFor: 'instance creation' stamp: 'JEA 12/2/2020 19:52:58'!
numbered: aString ownedBy: anOwnerName expiringOn: aMonth
	
	^self new initializeExpiringOn: aMonth! !
!CreditCard class methodsFor: 'instance creation' stamp: 'JEA 12/2/2020 19:53:08' prior: 50883172!
numbered: aString ownedBy: aName expiringOn: aMonth
	
	^self new initializeExpiringOn: aMonth! !
!RestInterface methodsFor: 'api' stamp: 'JEA 12/2/2020 19:54:34' prior: 50883050!
checkOutCartWithID: aCartID withCardNumber: aCardNumber expiring: aGregorianMonthOfYear owner: aName
	| creditCard |

	self ensureCartIDCanBeInteractedWith: aCartID.
	
	self resetTimerOfCartWithID: aCartID.
	
	creditCard := CreditCard 
		numbered: aCardNumber 
		ownedBy: aName 
		expiringOn: aGregorianMonthOfYear.
	
	^self checkOut: (carts at: aCartID) withCard: creditCard.! !
!StoreTestObjectsFactory methodsFor: 'credit card' stamp: 'JEA 12/2/2020 19:55:15' prior: 50878769!
expiredCreditCard
	
	^CreditCard 
		numbered: self validCardNumber 
		ownedBy: self validCreditCardOwnersName 
		expiringOn: GregorianDateTime now monthOfYear previous.! !
!StoreTestObjectsFactory methodsFor: 'credit card' stamp: 'JEA 12/2/2020 19:55:30' prior: 50878763!
notExpiredCreditCard
	
	^CreditCard 
		numbered: self validCardNumber 
		ownedBy: self validCreditCardOwnersName 
		expiringOn: GregorianDateTime now monthOfYear next.! !

!methodRemoval: CreditCard class #expiringOn: stamp: 'JEA 12/2/2020 19:55:32'!
expiringOn: aMonth 
	
	^self new initializeExpiringOn: aMonth!
!CreditCard class methodsFor: 'instance creation' stamp: 'JEA 12/2/2020 19:55:45' prior: 50883179!
numbered: aString ownedBy: aName expiringOn: aMonth
	
	^self new.! !
!CreditCard class methodsFor: 'instance creation' stamp: 'JEA 12/2/2020 19:56:01' prior: 50883222!
numbered: aString ownedBy: aName expiringOn: aMonth
	
	^self new initializeExpiringOn: aMonth .! !

!testRun: #CreditCardTest #test01cantCreateCardWithNumberTooShort stamp: 'JEA 12/2/2020 19:56:02'!
FAILURE!

!testRun: #CreditCardTest #test01cantCreateCardWithNumberTooShort stamp: 'JEA 12/2/2020 19:56:02'!
FAILURE!
!CreditCard class methodsFor: 'instance creation' stamp: 'JEA 12/2/2020 19:56:31' prior: 50883228!
numbered: aString ownedBy: aName expiringOn: aMonth
	
	^self new.! !

!classDefinition: #CreditCard category: 'TusLibros' stamp: 'JEA 12/2/2020 19:58:04'!
Object subclass: #CreditCard
	instanceVariableNames: 'expiration number'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

!classDefinition: #CreditCard category: 'TusLibros' stamp: 'JEA 12/2/2020 19:58:05'!
Object subclass: #CreditCard
	instanceVariableNames: 'expiration number owner'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!
!CreditCard methodsFor: 'initialization' stamp: 'JEA 12/2/2020 19:58:02'!
initializeNumbered: aString ownedBy: aName ExpiringOn: aMonth 
	
	number := aString.
	owner := aName.
	expiration := aMonth.! !

!methodRemoval: CreditCard #initializeExpiringOn: stamp: 'JEA 12/2/2020 19:58:07'!
initializeExpiringOn: aMonth 
	
	expiration := aMonth !
!CreditCard class methodsFor: 'instance creation' stamp: 'JEA 12/2/2020 19:58:17' prior: 50883241!
numbered: aString ownedBy: aName expiringOn: aMonth
	
	^self new initializeNumbered: aString ownedBy: aName ExpiringOn: aMonth.! !

!testRun: #CreditCardTest #test01cantCreateCardWithNumberTooShort stamp: 'JEA 12/2/2020 19:58:18'!
FAILURE!

!testRun: #CreditCardTest #test01cantCreateCardWithNumberTooShort stamp: 'JEA 12/2/2020 19:58:18'!
FAILURE!
!CreditCard class methodsFor: 'instance creation' stamp: 'JEA 12/2/2020 19:59:22' prior: 50883272!
numbered: aString ownedBy: aName expiringOn: aMonth
	
	self ensureCardNumberIsOfAdequateLength: aString.
	
	^self new initializeNumbered: aString ownedBy: aName ExpiringOn: aMonth.! !

!testRun: #CreditCardTest #test01cantCreateCardWithNumberTooShort stamp: 'JEA 12/2/2020 19:59:26'!
FAILURE!

!testRun: #CreditCardTest #test01cantCreateCardWithNumberTooShort stamp: 'JEA 12/2/2020 19:59:26'!
FAILURE!
!CreditCard class methodsFor: 'nil' stamp: 'JEA 12/2/2020 20:01:42'!
ensureCardNumberIsOfAdequateLength: aString

	aString size < 16 
		ifTrue: [ self error self cannotCreateCardUnlessNumberIsOfAdequateLengthMessage. ].! !
!CreditCard class methodsFor: 'as yet unclassified' stamp: 'JEA 12/2/2020 20:01:45' prior: 50883301!
ensureCardNumberIsOfAdequateLength: aString

	aString size < 16 
		ifTrue: [ self error: self cannotCreateCardUnlessNumberIsOfAdequateLengthMessage. ].! !

!testRun: #CreditCardTest #test01cantCreateCardWithNumberTooShort stamp: 'JEA 12/2/2020 20:01:47'!
PASSED!
!CreditCardTest methodsFor: 'tests' stamp: 'JEA 12/2/2020 20:02:18'!
test02cantCreateCardWithNumberTooLong

	self should: [ 
		CreditCard 
			numbered: testObjectsFactory invalidCardNumberLong 
			ownedBy: testObjectsFactory validCreditCardOwnersName 
			expiringOn: testObjectsFactory expirationDateNotReached. 
		]
		raise: Error
		withMessageText: CreditCard cannotCreateCardUnlessNumberIsOfAdequateLengthMessage.! !

!testRun: #CreditCardTest #test01cantCreateCardWithNumberTooShort stamp: 'JEA 12/2/2020 20:02:20'!
PASSED!

!testRun: #CreditCardTest #test02cantCreateCardWithNumberTooLong stamp: 'JEA 12/2/2020 20:02:20'!
FAILURE!

!testRun: #CreditCardTest #test02cantCreateCardWithNumberTooLong stamp: 'JEA 12/2/2020 20:02:20'!
FAILURE!
!StoreTestObjectsFactory methodsFor: 'credit card' stamp: 'JEA 12/2/2020 20:03:22'!
invalidCardNumberLong

	^'12341234123412345'.! !

!testRun: #CreditCardTest #test01cantCreateCardWithNumberTooShort stamp: 'JEA 12/2/2020 20:03:30'!
PASSED!

!testRun: #CreditCardTest #test02cantCreateCardWithNumberTooLong stamp: 'JEA 12/2/2020 20:03:30'!
FAILURE!

!testRun: #CreditCardTest #test02cantCreateCardWithNumberTooLong stamp: 'JEA 12/2/2020 20:03:30'!
FAILURE!
!CreditCard class methodsFor: 'as yet unclassified' stamp: 'JEA 12/2/2020 20:03:45' prior: 50883309!
ensureCardNumberIsOfAdequateLength: aString

	aString size ~= 16 
		ifTrue: [ self error: self cannotCreateCardUnlessNumberIsOfAdequateLengthMessage. ].! !

!testRun: #CreditCardTest #test01cantCreateCardWithNumberTooShort stamp: 'JEA 12/2/2020 20:03:46'!
PASSED!

!testRun: #CreditCardTest #test02cantCreateCardWithNumberTooLong stamp: 'JEA 12/2/2020 20:03:46'!
PASSED!
!CreditCardTest methodsFor: 'tests' stamp: 'JEA 12/2/2020 20:04:25'!
test03cantCreateCardWithNumberNonNumeric

	self should: [ 
		CreditCard 
			numbered: testObjectsFactory invalidCardNumberNonNumeric 
			ownedBy: testObjectsFactory validCreditCardOwnersName 
			expiringOn: testObjectsFactory expirationDateNotReached. 
		]
		raise: Error
		withMessageText: CreditCard cannotCreateCardUnlessNumberIsOfAdequateLengthMessage.! !

!testRun: #CreditCardTest #test01cantCreateCardWithNumberTooShort stamp: 'JEA 12/2/2020 20:04:26'!
PASSED!

!testRun: #CreditCardTest #test02cantCreateCardWithNumberTooLong stamp: 'JEA 12/2/2020 20:04:26'!
PASSED!

!testRun: #CreditCardTest #test03cantCreateCardWithNumberNonNumeric stamp: 'JEA 12/2/2020 20:04:26'!
FAILURE!

!testRun: #CreditCardTest #test03cantCreateCardWithNumberNonNumeric stamp: 'JEA 12/2/2020 20:04:26'!
FAILURE!
!CreditCard class methodsFor: 'instance creation' stamp: 'JEA 12/2/2020 20:04:53' prior: 50883286!
numbered: aString ownedBy: aName expiringOn: aMonth
	
	self ensureCardNumberIsOfAdequateLength: aString.
	self ensureCardNumberIsNumeric: aString.
	
	^self new initializeNumbered: aString ownedBy: aName ExpiringOn: aMonth.! !
!CreditCard class methodsFor: 'as yet unclassified' stamp: 'JEA 12/2/2020 20:05:35'!
ensureCardNumberIsNumeric: aString

	(aString allSatisfy: [ :aCharacter | aCharacter isDigit. ])
		ifFalse: [ self error: self cannotCreateCardUnlessNumberIsOfAdequateLengthMessage. ].! !

!testRun: #CreditCardTest #test01cantCreateCardWithNumberTooShort stamp: 'JEA 12/2/2020 20:05:36'!
PASSED!

!testRun: #CreditCardTest #test02cantCreateCardWithNumberTooLong stamp: 'JEA 12/2/2020 20:05:36'!
PASSED!

!testRun: #CreditCardTest #test03cantCreateCardWithNumberNonNumeric stamp: 'JEA 12/2/2020 20:05:36'!
PASSED!

----SNAPSHOT----(2 December 2020 20:08:26) CuisUniversity-4384.image priorSource: 17564770!
!RestInterfaceTest methodsFor: 'tests - checking out cart' stamp: 'JEA 12/2/2020 20:19:32'!
test08canCheckOutNonEmptyValidCartWithValidCreditCard
	| restInterface cartID transactionID |

	restInterface := RestInterface 
		authenticatingWith: AuthenticatorSimulator newSimulatingValidAuthentication 
		debitingWith: self itemsFrom: testObjectsFactory defaultCatalog 
		withClock: Clock newSimulatingRealTime withCartTimeout: testObjectsFactory cartTimeout.
		
	cartID := restInterface
		createCartFor: testObjectsFactory validClientID
		password: testObjectsFactory correctPassword.
		
	restInterface 
		add: 1 
		of: testObjectsFactory itemSoldByTheStore 
		toCartWithID: cartID.
	
	transactionID := restInterface 
		checkOutCartWithID: cartID 
		withCardNumber: testObjectsFactory validCardNumber 
		expiring: testObjectsFactory expirationDateNotReached 
		owner: testObjectsFactory validCreditCardOwnersName.
	
	self assert: testObjectsFactory itemSoldByTheStorePrice 
		equals: (restInterface moneyDebitedInTransactionWithID: transactionID).! !

!methodRemoval: RestInterfaceTest #test10canCheckOutNonEmptyValidCartWithValidCreditCard stamp: 'JEA 12/2/2020 20:19:32'!
test10canCheckOutNonEmptyValidCartWithValidCreditCard
	| restInterface cartID transactionID |

	restInterface := RestInterface 
		authenticatingWith: AuthenticatorSimulator newSimulatingValidAuthentication 
		debitingWith: self itemsFrom: testObjectsFactory defaultCatalog 
		withClock: Clock newSimulatingRealTime withCartTimeout: testObjectsFactory cartTimeout.
		
	cartID := restInterface
		createCartFor: testObjectsFactory validClientID
		password: testObjectsFactory correctPassword.
		
	restInterface 
		add: 1 
		of: testObjectsFactory itemSoldByTheStore 
		toCartWithID: cartID.
	
	transactionID := restInterface 
		checkOutCartWithID: cartID 
		withCardNumber: testObjectsFactory validCardNumber 
		expiring: testObjectsFactory expirationDateNotReached 
		owner: testObjectsFactory validCreditCardOwnersName.
	
	self assert: testObjectsFactory itemSoldByTheStorePrice 
		equals: (restInterface moneyDebitedInTransactionWithID: transactionID).!
!RestInterfaceTest methodsFor: 'tests - listing cart' stamp: 'JEA 12/2/2020 20:19:43'!
test09cannotListCartWithInvalidID
	| restInterface |

	restInterface := RestInterface 
		authenticatingWith: AuthenticatorSimulator newSimulatingValidAuthentication 
		debitingWith: self itemsFrom: testObjectsFactory defaultCatalog 
		withClock: Clock newSimulatingRealTime withCartTimeout: testObjectsFactory cartTimeout.
	
	self should: [ restInterface listItemsInCartWithID: testObjectsFactory invalidCartID. ]
		raise: Error
		withMessageText: RestInterface invalidCartIDMessage.! !

!methodRemoval: RestInterfaceTest #test11cannotListCartWithInvalidID stamp: 'JEA 12/2/2020 20:19:43'!
test11cannotListCartWithInvalidID
	| restInterface |

	restInterface := RestInterface 
		authenticatingWith: AuthenticatorSimulator newSimulatingValidAuthentication 
		debitingWith: self itemsFrom: testObjectsFactory defaultCatalog 
		withClock: Clock newSimulatingRealTime withCartTimeout: testObjectsFactory cartTimeout.
	
	self should: [ restInterface listItemsInCartWithID: testObjectsFactory invalidCartID. ]
		raise: Error
		withMessageText: RestInterface invalidCartIDMessage.!
!RestInterfaceTest methodsFor: 'tests - cart timeout' stamp: 'JEA 12/2/2020 20:19:48'!
test10cannotAccessCartAfterTimeoutSinceCreated
	| restInterface cartID clock |

	clock := Clock newSimulatingRealTime.

	restInterface := RestInterface 
		authenticatingWith: AuthenticatorSimulator newSimulatingValidAuthentication 
		debitingWith: self itemsFrom: testObjectsFactory defaultCatalog
		withClock: clock withCartTimeout: testObjectsFactory cartTimeout.
	
	cartID := restInterface 
		createCartFor: testObjectsFactory validClientID
		password: testObjectsFactory correctPassword.
	
	clock simulateAdvancing: testObjectsFactory cartTimeout.
	
	self should: [ 
		restInterface 
			add: 2 
			of: testObjectsFactory itemSoldByTheStore 
			toCartWithID: cartID. 
		]
		raise: Error
		withMessageText: RestInterface cartTimedOutMessage.
	
	self should: [ restInterface listItemsInCartWithID: cartID. ]
		raise: Error
		withMessageText: RestInterface cartTimedOutMessage.
	
	self should: [ 
		restInterface 
			checkOutCartWithID: cartID 
			withCardNumber: testObjectsFactory validCardNumber 
			expiring: testObjectsFactory expirationDateNotReached 
			owner: testObjectsFactory validClientID.
		]
		raise: Error
		withMessageText: RestInterface cartTimedOutMessage.! !

!methodRemoval: RestInterfaceTest #test12cannotAccessCartAfterTimeoutSinceCreated stamp: 'JEA 12/2/2020 20:19:48'!
test12cannotAccessCartAfterTimeoutSinceCreated
	| restInterface cartID clock |

	clock := Clock newSimulatingRealTime.

	restInterface := RestInterface 
		authenticatingWith: AuthenticatorSimulator newSimulatingValidAuthentication 
		debitingWith: self itemsFrom: testObjectsFactory defaultCatalog
		withClock: clock withCartTimeout: testObjectsFactory cartTimeout.
	
	cartID := restInterface 
		createCartFor: testObjectsFactory validClientID
		password: testObjectsFactory correctPassword.
	
	clock simulateAdvancing: testObjectsFactory cartTimeout.
	
	self should: [ 
		restInterface 
			add: 2 
			of: testObjectsFactory itemSoldByTheStore 
			toCartWithID: cartID. 
		]
		raise: Error
		withMessageText: RestInterface cartTimedOutMessage.
	
	self should: [ restInterface listItemsInCartWithID: cartID. ]
		raise: Error
		withMessageText: RestInterface cartTimedOutMessage.
	
	self should: [ 
		restInterface 
			checkOutCartWithID: cartID 
			withCardNumber: testObjectsFactory validCardNumber 
			expiring: testObjectsFactory expirationDateNotReached 
			owner: testObjectsFactory validClientID.
		]
		raise: Error
		withMessageText: RestInterface cartTimedOutMessage.!

!testRun: #RestInterfaceTest #test05cannotAddToCartWithInvalidID stamp: 'JEA 12/2/2020 20:19:58'!
PASSED!

!testRun: #CartTest #test01NewCartsAreCreatedEmpty stamp: 'JEA 12/2/2020 20:19:58'!
PASSED!

!testRun: #CartTest #test02CanNotAddItemsThatDoNotBelongToStore stamp: 'JEA 12/2/2020 20:19:58'!
PASSED!

!testRun: #CartTest #test03AfterAddingAnItemTheCartIsNotEmptyAnymore stamp: 'JEA 12/2/2020 20:19:58'!
PASSED!

!testRun: #CartTest #test04CanNotAddNonPositiveNumberOfItems stamp: 'JEA 12/2/2020 20:19:58'!
PASSED!

!testRun: #CartTest #test05CanNotAddMoreThanOneItemNotSellByTheStore stamp: 'JEA 12/2/2020 20:19:58'!
PASSED!

!testRun: #CartTest #test06CartRemembersAddedItems stamp: 'JEA 12/2/2020 20:19:58'!
PASSED!

!testRun: #CartTest #test07CartDoesNotHoldNotAddedItems stamp: 'JEA 12/2/2020 20:19:58'!
PASSED!

!testRun: #CartTest #test08CartRemembersTheNumberOfAddedItems stamp: 'JEA 12/2/2020 20:19:58'!
PASSED!

!testRun: #CashierTest #test01CanNotCheckoutAnEmptyCart stamp: 'JEA 12/2/2020 20:19:58'!
PASSED!

!testRun: #CashierTest #test02CalculatedTotalIsCorrect stamp: 'JEA 12/2/2020 20:19:58'!
PASSED!

!testRun: #CashierTest #test03CanNotCheckoutWithAnExpiredCreditCart stamp: 'JEA 12/2/2020 20:19:58'!
PASSED!

!testRun: #CashierTest #test04CheckoutRegistersASale stamp: 'JEA 12/2/2020 20:19:58'!
PASSED!

!testRun: #CashierTest #test05CashierChargesCreditCardUsingMerchantProcessor stamp: 'JEA 12/2/2020 20:19:58'!
PASSED!

!testRun: #CashierTest #test06CashierDoesNotSaleWhenTheCreditCardHasNoCredit stamp: 'JEA 12/2/2020 20:19:58'!
PASSED!

!testRun: #CreditCardTest #test01cantCreateCardWithNumberTooShort stamp: 'JEA 12/2/2020 20:19:58'!
PASSED!

!testRun: #CreditCardTest #test02cantCreateCardWithNumberTooLong stamp: 'JEA 12/2/2020 20:19:58'!
PASSED!

!testRun: #CreditCardTest #test03cantCreateCardWithNumberNonNumeric stamp: 'JEA 12/2/2020 20:19:58'!
PASSED!

!testRun: #RestInterfaceTest #test01cannotCreateCartForInvalidClientID stamp: 'JEA 12/2/2020 20:19:58'!
PASSED!

!testRun: #RestInterfaceTest #test02cannotCreateCartForClientWithWrongPassword stamp: 'JEA 12/2/2020 20:19:58'!
PASSED!

!testRun: #RestInterfaceTest #test03canCreateCartForWellAuthenticatedClient stamp: 'JEA 12/2/2020 20:19:58'!
PASSED!

!testRun: #RestInterfaceTest #test04canCreateMoreThanOneCartWithDifferentIDs stamp: 'JEA 12/2/2020 20:19:58'!
PASSED!

!testRun: #RestInterfaceTest #test05cannotAddToCartWithInvalidID stamp: 'JEA 12/2/2020 20:19:58'!
PASSED!

!testRun: #RestInterfaceTest #test06canAddItemToCartWithValidID stamp: 'JEA 12/2/2020 20:19:58'!
PASSED!

!testRun: #RestInterfaceTest #test07cannotCheckOutCartWithInvalidID stamp: 'JEA 12/2/2020 20:19:58'!
PASSED!

!testRun: #RestInterfaceTest #test08canCheckOutNonEmptyValidCartWithValidCreditCard stamp: 'JEA 12/2/2020 20:19:58'!
PASSED!

!testRun: #RestInterfaceTest #test09cannotListCartWithInvalidID stamp: 'JEA 12/2/2020 20:19:58'!
PASSED!

!testRun: #RestInterfaceTest #test10cannotAccessCartAfterTimeoutSinceCreated stamp: 'JEA 12/2/2020 20:19:58'!
PASSED!
!RestInterfaceTest methodsFor: 'tests - cart timeout' stamp: 'JEA 12/2/2020 20:34:00'!
test10cannotInteractWithCartAfterTimeoutSinceCreated
	| restInterface cartID clock |

	clock := Clock newSimulatingRealTime.

	restInterface := RestInterface 
		authenticatingWith: AuthenticatorSimulator newSimulatingValidAuthentication 
		debitingWith: self itemsFrom: testObjectsFactory defaultCatalog
		withClock: clock withCartTimeout: testObjectsFactory cartTimeout.
	
	cartID := restInterface 
		createCartFor: testObjectsFactory validClientID
		password: testObjectsFactory correctPassword.
	
	clock simulateAdvancing: testObjectsFactory cartTimeout.
	
	self should: [ 
		restInterface 
			add: 2 
			of: testObjectsFactory itemSoldByTheStore 
			toCartWithID: cartID. 
		]
		raise: Error
		withMessageText: RestInterface cartTimedOutMessage.
	
	self should: [ restInterface listItemsInCartWithID: cartID. ]
		raise: Error
		withMessageText: RestInterface cartTimedOutMessage.
	
	self should: [ 
		restInterface 
			checkOutCartWithID: cartID 
			withCardNumber: testObjectsFactory validCardNumber 
			expiring: testObjectsFactory expirationDateNotReached 
			owner: testObjectsFactory validClientID.
		]
		raise: Error
		withMessageText: RestInterface cartTimedOutMessage.! !

!methodRemoval: RestInterfaceTest #test10cannotAccessCartAfterTimeoutSinceCreated stamp: 'JEA 12/2/2020 20:34:00'!
test10cannotAccessCartAfterTimeoutSinceCreated
	| restInterface cartID clock |

	clock := Clock newSimulatingRealTime.

	restInterface := RestInterface 
		authenticatingWith: AuthenticatorSimulator newSimulatingValidAuthentication 
		debitingWith: self itemsFrom: testObjectsFactory defaultCatalog
		withClock: clock withCartTimeout: testObjectsFactory cartTimeout.
	
	cartID := restInterface 
		createCartFor: testObjectsFactory validClientID
		password: testObjectsFactory correctPassword.
	
	clock simulateAdvancing: testObjectsFactory cartTimeout.
	
	self should: [ 
		restInterface 
			add: 2 
			of: testObjectsFactory itemSoldByTheStore 
			toCartWithID: cartID. 
		]
		raise: Error
		withMessageText: RestInterface cartTimedOutMessage.
	
	self should: [ restInterface listItemsInCartWithID: cartID. ]
		raise: Error
		withMessageText: RestInterface cartTimedOutMessage.
	
	self should: [ 
		restInterface 
			checkOutCartWithID: cartID 
			withCardNumber: testObjectsFactory validCardNumber 
			expiring: testObjectsFactory expirationDateNotReached 
			owner: testObjectsFactory validClientID.
		]
		raise: Error
		withMessageText: RestInterface cartTimedOutMessage.!

!testRun: #RestInterfaceTest #test10cannotInteractWithCartAfterTimeoutSinceCreated stamp: 'JEA 12/2/2020 20:34:01'!
PASSED!

!testRun: #CartTest #test01NewCartsAreCreatedEmpty stamp: 'JEA 12/2/2020 20:34:01'!
PASSED!

!testRun: #CartTest #test02CanNotAddItemsThatDoNotBelongToStore stamp: 'JEA 12/2/2020 20:34:01'!
PASSED!

!testRun: #CartTest #test03AfterAddingAnItemTheCartIsNotEmptyAnymore stamp: 'JEA 12/2/2020 20:34:01'!
PASSED!

!testRun: #CartTest #test04CanNotAddNonPositiveNumberOfItems stamp: 'JEA 12/2/2020 20:34:01'!
PASSED!

!testRun: #CartTest #test05CanNotAddMoreThanOneItemNotSellByTheStore stamp: 'JEA 12/2/2020 20:34:01'!
PASSED!

!testRun: #CartTest #test06CartRemembersAddedItems stamp: 'JEA 12/2/2020 20:34:01'!
PASSED!

!testRun: #CartTest #test07CartDoesNotHoldNotAddedItems stamp: 'JEA 12/2/2020 20:34:01'!
PASSED!

!testRun: #CartTest #test08CartRemembersTheNumberOfAddedItems stamp: 'JEA 12/2/2020 20:34:01'!
PASSED!

!testRun: #CashierTest #test01CanNotCheckoutAnEmptyCart stamp: 'JEA 12/2/2020 20:34:01'!
PASSED!

!testRun: #CashierTest #test02CalculatedTotalIsCorrect stamp: 'JEA 12/2/2020 20:34:01'!
PASSED!

!testRun: #CashierTest #test03CanNotCheckoutWithAnExpiredCreditCart stamp: 'JEA 12/2/2020 20:34:01'!
PASSED!

!testRun: #CashierTest #test04CheckoutRegistersASale stamp: 'JEA 12/2/2020 20:34:01'!
PASSED!

!testRun: #CashierTest #test05CashierChargesCreditCardUsingMerchantProcessor stamp: 'JEA 12/2/2020 20:34:01'!
PASSED!

!testRun: #CashierTest #test06CashierDoesNotSaleWhenTheCreditCardHasNoCredit stamp: 'JEA 12/2/2020 20:34:01'!
PASSED!

!testRun: #CreditCardTest #test01cantCreateCardWithNumberTooShort stamp: 'JEA 12/2/2020 20:34:01'!
PASSED!

!testRun: #CreditCardTest #test02cantCreateCardWithNumberTooLong stamp: 'JEA 12/2/2020 20:34:01'!
PASSED!

!testRun: #CreditCardTest #test03cantCreateCardWithNumberNonNumeric stamp: 'JEA 12/2/2020 20:34:01'!
PASSED!

!testRun: #RestInterfaceTest #test01cannotCreateCartForInvalidClientID stamp: 'JEA 12/2/2020 20:34:01'!
PASSED!

!testRun: #RestInterfaceTest #test02cannotCreateCartForClientWithWrongPassword stamp: 'JEA 12/2/2020 20:34:01'!
PASSED!

!testRun: #RestInterfaceTest #test03canCreateCartForWellAuthenticatedClient stamp: 'JEA 12/2/2020 20:34:01'!
PASSED!

!testRun: #RestInterfaceTest #test04canCreateMoreThanOneCartWithDifferentIDs stamp: 'JEA 12/2/2020 20:34:01'!
PASSED!

!testRun: #RestInterfaceTest #test05cannotAddToCartWithInvalidID stamp: 'JEA 12/2/2020 20:34:01'!
PASSED!

!testRun: #RestInterfaceTest #test06canAddItemToCartWithValidID stamp: 'JEA 12/2/2020 20:34:01'!
PASSED!

!testRun: #RestInterfaceTest #test07cannotCheckOutCartWithInvalidID stamp: 'JEA 12/2/2020 20:34:01'!
PASSED!

!testRun: #RestInterfaceTest #test08canCheckOutNonEmptyValidCartWithValidCreditCard stamp: 'JEA 12/2/2020 20:34:01'!
PASSED!

!testRun: #RestInterfaceTest #test09cannotListCartWithInvalidID stamp: 'JEA 12/2/2020 20:34:01'!
PASSED!

!testRun: #RestInterfaceTest #test10cannotInteractWithCartAfterTimeoutSinceCreated stamp: 'JEA 12/2/2020 20:34:01'!
PASSED!

----SNAPSHOT----(2 December 2020 20:53:05) CuisUniversity-4384.image priorSource: 17656928!

----QUIT----(2 December 2020 20:53:16) CuisUniversity-4384.image priorSource: 17671581!

----STARTUP---- (3 December 2020 14:03:03) as /home/jadmin/Documents/IngenierÃ­a de Software 1/Cuis University/Cuis University/CuisUniversity-4384.image!


!classRemoval: #StoreTestObjectsFactory stamp: 'JEA 12/3/2020 14:03:29'!
Object subclass: #StoreTestObjectsFactory
	instanceVariableNames: 'today'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

!classRemoval: #RestInterface stamp: 'JEA 12/3/2020 14:03:29'!
Object subclass: #RestInterface
	instanceVariableNames: 'authenticator lastCartID carts lastInteractionForCart catalog clock transactionValues merchantProcessor cartTimeout'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

!classRemoval: #CreditCard stamp: 'JEA 12/3/2020 14:03:30'!
Object subclass: #CreditCard
	instanceVariableNames: 'expiration number owner'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

!classRemoval: #Clock stamp: 'JEA 12/3/2020 14:03:30'!
Object subclass: #Clock
	instanceVariableNames: 'currentDateAndTimeBehavior'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

!classRemoval: #Cashier stamp: 'JEA 12/3/2020 14:03:30'!
Object subclass: #Cashier
	instanceVariableNames: 'cart salesBook merchantProcessor creditCard total lastTransactionID'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

!classRemoval: #Cart stamp: 'JEA 12/3/2020 14:03:31'!
Object subclass: #Cart
	instanceVariableNames: 'catalog items'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

!classRemoval: #AuthenticatorSimulator stamp: 'JEA 12/3/2020 14:03:31'!
Object subclass: #AuthenticatorSimulator
	instanceVariableNames: 'authenticateBehavior'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

!classRemoval: #RestInterfaceTest stamp: 'JEA 12/3/2020 14:03:31'!
TestCase subclass: #RestInterfaceTest
	instanceVariableNames: 'testObjectsFactory'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

!classRemoval: #CreditCardTest stamp: 'JEA 12/3/2020 14:03:32'!
TestCase subclass: #CreditCardTest
	instanceVariableNames: 'testObjectsFactory'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

!classRemoval: #CashierTest stamp: 'JEA 12/3/2020 14:03:32'!
TestCase subclass: #CashierTest
	instanceVariableNames: 'testObjectsFactory debitBehavior'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

!classRemoval: #CartTest stamp: 'JEA 12/3/2020 14:03:32'!
TestCase subclass: #CartTest
	instanceVariableNames: 'testObjectsFactory'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

----End fileIn of /home/jadmin/Documents/GIT/IS1 Ejercicios/20-TusLibros/TusLibros-4.st----!

!testRun: #RestInterfaceTest #test17canListPurchasesClientWhoBoughtOneBook stamp: 'JEA 12/3/2020 14:04:20'!
PASSED!

!testRun: #CartTest #test01NewCartsAreCreatedEmpty stamp: 'JEA 12/3/2020 14:04:20'!
PASSED!

!testRun: #CartTest #test02CanNotAddItemsThatDoNotBelongToStore stamp: 'JEA 12/3/2020 14:04:20'!
PASSED!

!testRun: #CartTest #test03AfterAddingAnItemTheCartIsNotEmptyAnymore stamp: 'JEA 12/3/2020 14:04:20'!
PASSED!

!testRun: #CartTest #test04CanNotAddNonPositiveNumberOfItems stamp: 'JEA 12/3/2020 14:04:20'!
PASSED!

!testRun: #CartTest #test05CanNotAddMoreThanOneItemNotSellByTheStore stamp: 'JEA 12/3/2020 14:04:20'!
PASSED!

!testRun: #CartTest #test06CartRemembersAddedItems stamp: 'JEA 12/3/2020 14:04:20'!
PASSED!

!testRun: #CartTest #test07CartDoesNotHoldNotAddedItems stamp: 'JEA 12/3/2020 14:04:20'!
PASSED!

!testRun: #CartTest #test08CartRemembersTheNumberOfAddedItems stamp: 'JEA 12/3/2020 14:04:20'!
PASSED!

!testRun: #CashierTest #test01CanNotCheckoutAnEmptyCart stamp: 'JEA 12/3/2020 14:04:20'!
PASSED!

!testRun: #CashierTest #test02CalculatedTotalIsCorrect stamp: 'JEA 12/3/2020 14:04:20'!
PASSED!

!testRun: #CashierTest #test03CanNotCheckoutWithAnExpiredCreditCart stamp: 'JEA 12/3/2020 14:04:20'!
PASSED!

!testRun: #CashierTest #test04CheckoutRegistersASale stamp: 'JEA 12/3/2020 14:04:20'!
PASSED!

!testRun: #CashierTest #test05CashierChargesCreditCardUsingMerchantProcessor stamp: 'JEA 12/3/2020 14:04:20'!
PASSED!

!testRun: #CashierTest #test06CashierDoesNotSaleWhenTheCreditCardHasNoCredit stamp: 'JEA 12/3/2020 14:04:20'!
PASSED!

!testRun: #CreditCardTest #test01cantCreateCardWithNumberTooShort stamp: 'JEA 12/3/2020 14:04:20'!
PASSED!

!testRun: #CreditCardTest #test02cantCreateCardWithNumberTooLong stamp: 'JEA 12/3/2020 14:04:20'!
PASSED!

!testRun: #CreditCardTest #test03cantCreateCardWithNumberNonNumeric stamp: 'JEA 12/3/2020 14:04:20'!
PASSED!

!testRun: #RestInterfaceTest #test01cannotCreateCartForInvalidClientID stamp: 'JEA 12/3/2020 14:04:20'!
PASSED!

!testRun: #RestInterfaceTest #test02cannotCreateCartForClientWithWrongPassword stamp: 'JEA 12/3/2020 14:04:20'!
PASSED!

!testRun: #RestInterfaceTest #test03canCreateCartForWellAuthenticatedClient stamp: 'JEA 12/3/2020 14:04:20'!
PASSED!

!testRun: #RestInterfaceTest #test04canCreateMoreThanOneCartWithDifferentIDs stamp: 'JEA 12/3/2020 14:04:20'!
PASSED!

!testRun: #RestInterfaceTest #test05cannotAddToCartWithInvalidID stamp: 'JEA 12/3/2020 14:04:20'!
PASSED!

!testRun: #RestInterfaceTest #test06canAddItemToCartWithValidID stamp: 'JEA 12/3/2020 14:04:20'!
PASSED!

!testRun: #RestInterfaceTest #test07cannotCheckOutCartWithInvalidID stamp: 'JEA 12/3/2020 14:04:20'!
PASSED!

!testRun: #RestInterfaceTest #test08canCheckOutNonEmptyValidCartWithValidCreditCard stamp: 'JEA 12/3/2020 14:04:20'!
PASSED!

!testRun: #RestInterfaceTest #test09cannotListCartWithInvalidID stamp: 'JEA 12/3/2020 14:04:20'!
PASSED!

!testRun: #RestInterfaceTest #test10cannotInteractWithCartAfterTimeoutSinceCreated stamp: 'JEA 12/3/2020 14:04:20'!
PASSED!

!testRun: #RestInterfaceTest #test11cartClockResetsAfterAdd stamp: 'JEA 12/3/2020 14:04:20'!
PASSED!

!testRun: #RestInterfaceTest #test12cartClockResetsAfterListing stamp: 'JEA 12/3/2020 14:04:20'!
PASSED!

!testRun: #RestInterfaceTest #test13cartClockResetsAfterCheckout stamp: 'JEA 12/3/2020 14:04:20'!
PASSED!

!testRun: #RestInterfaceTest #test14cannotListPurchasesOfInvalidClient stamp: 'JEA 12/3/2020 14:04:20'!
PASSED!

!testRun: #RestInterfaceTest #test15cannotListPurchasesOfClientWithInvalidPassword stamp: 'JEA 12/3/2020 14:04:20'!
PASSED!

!testRun: #RestInterfaceTest #test16canListPurchasesClientWhoNeverCheckedOut stamp: 'JEA 12/3/2020 14:04:20'!
PASSED!

!testRun: #RestInterfaceTest #test17canListPurchasesClientWhoBoughtOneBook stamp: 'JEA 12/3/2020 14:04:20'!
PASSED!

!testRun: #RestInterfaceTest #test18canListPurchasesClientWhoBoughtMoreThanOneBook stamp: 'JEA 12/3/2020 14:04:20'!
PASSED!

!testRun: #RestInterfaceTest #test19canListPurchasesClientWhoCheckedOutMoreThanOneCart stamp: 'JEA 12/3/2020 14:04:20'!
PASSED!
!RestInterface methodsFor: 'api' stamp: 'JEA 12/3/2020 14:05:21' prior: 50885358!
add: aQuantity of: anISBN toCartWithID: aCartID

	self ensureCartIDCanBeInteractedWith: aCartID.

	"self resetTimerOfCartWithID: aCartID."

	(carts at: aCartID)
		add: aQuantity of: anISBN.! !

!testRun: #CartTest #test01NewCartsAreCreatedEmpty stamp: 'JEA 12/3/2020 14:05:23'!
PASSED!

!testRun: #CartTest #test02CanNotAddItemsThatDoNotBelongToStore stamp: 'JEA 12/3/2020 14:05:23'!
PASSED!

!testRun: #CartTest #test03AfterAddingAnItemTheCartIsNotEmptyAnymore stamp: 'JEA 12/3/2020 14:05:23'!
PASSED!

!testRun: #CartTest #test04CanNotAddNonPositiveNumberOfItems stamp: 'JEA 12/3/2020 14:05:23'!
PASSED!

!testRun: #CartTest #test05CanNotAddMoreThanOneItemNotSellByTheStore stamp: 'JEA 12/3/2020 14:05:23'!
PASSED!

!testRun: #CartTest #test06CartRemembersAddedItems stamp: 'JEA 12/3/2020 14:05:23'!
PASSED!

!testRun: #CartTest #test07CartDoesNotHoldNotAddedItems stamp: 'JEA 12/3/2020 14:05:23'!
PASSED!

!testRun: #CartTest #test08CartRemembersTheNumberOfAddedItems stamp: 'JEA 12/3/2020 14:05:23'!
PASSED!

!testRun: #CashierTest #test01CanNotCheckoutAnEmptyCart stamp: 'JEA 12/3/2020 14:05:23'!
PASSED!

!testRun: #CashierTest #test02CalculatedTotalIsCorrect stamp: 'JEA 12/3/2020 14:05:23'!
PASSED!

!testRun: #CashierTest #test03CanNotCheckoutWithAnExpiredCreditCart stamp: 'JEA 12/3/2020 14:05:23'!
PASSED!

!testRun: #CashierTest #test04CheckoutRegistersASale stamp: 'JEA 12/3/2020 14:05:23'!
PASSED!

!testRun: #CashierTest #test05CashierChargesCreditCardUsingMerchantProcessor stamp: 'JEA 12/3/2020 14:05:23'!
PASSED!

!testRun: #CashierTest #test06CashierDoesNotSaleWhenTheCreditCardHasNoCredit stamp: 'JEA 12/3/2020 14:05:23'!
PASSED!

!testRun: #CreditCardTest #test01cantCreateCardWithNumberTooShort stamp: 'JEA 12/3/2020 14:05:23'!
PASSED!

!testRun: #CreditCardTest #test02cantCreateCardWithNumberTooLong stamp: 'JEA 12/3/2020 14:05:23'!
PASSED!

!testRun: #CreditCardTest #test03cantCreateCardWithNumberNonNumeric stamp: 'JEA 12/3/2020 14:05:23'!
PASSED!

!testRun: #RestInterfaceTest #test01cannotCreateCartForInvalidClientID stamp: 'JEA 12/3/2020 14:05:23'!
PASSED!

!testRun: #RestInterfaceTest #test02cannotCreateCartForClientWithWrongPassword stamp: 'JEA 12/3/2020 14:05:23'!
PASSED!

!testRun: #RestInterfaceTest #test03canCreateCartForWellAuthenticatedClient stamp: 'JEA 12/3/2020 14:05:23'!
PASSED!

!testRun: #RestInterfaceTest #test04canCreateMoreThanOneCartWithDifferentIDs stamp: 'JEA 12/3/2020 14:05:23'!
PASSED!

!testRun: #RestInterfaceTest #test05cannotAddToCartWithInvalidID stamp: 'JEA 12/3/2020 14:05:23'!
PASSED!

!testRun: #RestInterfaceTest #test06canAddItemToCartWithValidID stamp: 'JEA 12/3/2020 14:05:23'!
PASSED!

!testRun: #RestInterfaceTest #test07cannotCheckOutCartWithInvalidID stamp: 'JEA 12/3/2020 14:05:23'!
PASSED!

!testRun: #RestInterfaceTest #test08canCheckOutNonEmptyValidCartWithValidCreditCard stamp: 'JEA 12/3/2020 14:05:23'!
PASSED!

!testRun: #RestInterfaceTest #test09cannotListCartWithInvalidID stamp: 'JEA 12/3/2020 14:05:23'!
PASSED!

!testRun: #RestInterfaceTest #test10cannotInteractWithCartAfterTimeoutSinceCreated stamp: 'JEA 12/3/2020 14:05:23'!
PASSED!

!testRun: #RestInterfaceTest #test11cartClockResetsAfterAdd stamp: 'JEA 12/3/2020 14:05:23'!
FAILURE!

!testRun: #RestInterfaceTest #test12cartClockResetsAfterListing stamp: 'JEA 12/3/2020 14:05:23'!
PASSED!

!testRun: #RestInterfaceTest #test13cartClockResetsAfterCheckout stamp: 'JEA 12/3/2020 14:05:23'!
PASSED!

!testRun: #RestInterfaceTest #test14cannotListPurchasesOfInvalidClient stamp: 'JEA 12/3/2020 14:05:23'!
PASSED!

!testRun: #RestInterfaceTest #test15cannotListPurchasesOfClientWithInvalidPassword stamp: 'JEA 12/3/2020 14:05:23'!
PASSED!

!testRun: #RestInterfaceTest #test16canListPurchasesClientWhoNeverCheckedOut stamp: 'JEA 12/3/2020 14:05:23'!
PASSED!

!testRun: #RestInterfaceTest #test17canListPurchasesClientWhoBoughtOneBook stamp: 'JEA 12/3/2020 14:05:23'!
PASSED!

!testRun: #RestInterfaceTest #test18canListPurchasesClientWhoBoughtMoreThanOneBook stamp: 'JEA 12/3/2020 14:05:23'!
PASSED!

!testRun: #RestInterfaceTest #test19canListPurchasesClientWhoCheckedOutMoreThanOneCart stamp: 'JEA 12/3/2020 14:05:23'!
PASSED!

!testRun: #RestInterfaceTest #test11cartClockResetsAfterAdd stamp: 'JEA 12/3/2020 14:05:23'!
FAILURE!
!RestInterface methodsFor: 'api' stamp: 'JEA 12/3/2020 14:05:30' prior: 50885827!
add: aQuantity of: anISBN toCartWithID: aCartID

	self ensureCartIDCanBeInteractedWith: aCartID.

	self resetTimerOfCartWithID: aCartID.

	(carts at: aCartID)
		add: aQuantity of: anISBN.! !
!RestInterface methodsFor: 'api' stamp: 'JEA 12/3/2020 14:05:37' prior: 50885964!
add: aQuantity of: anISBN toCartWithID: aCartID

	"self ensureCartIDCanBeInteractedWith: aCartID."

	self resetTimerOfCartWithID: aCartID.

	(carts at: aCartID)
		add: aQuantity of: anISBN.! !

!testRun: #CartTest #test01NewCartsAreCreatedEmpty stamp: 'JEA 12/3/2020 14:05:38'!
PASSED!

!testRun: #CartTest #test02CanNotAddItemsThatDoNotBelongToStore stamp: 'JEA 12/3/2020 14:05:38'!
PASSED!

!testRun: #CartTest #test03AfterAddingAnItemTheCartIsNotEmptyAnymore stamp: 'JEA 12/3/2020 14:05:38'!
PASSED!

!testRun: #CartTest #test04CanNotAddNonPositiveNumberOfItems stamp: 'JEA 12/3/2020 14:05:38'!
PASSED!

!testRun: #CartTest #test05CanNotAddMoreThanOneItemNotSellByTheStore stamp: 'JEA 12/3/2020 14:05:38'!
PASSED!

!testRun: #CartTest #test06CartRemembersAddedItems stamp: 'JEA 12/3/2020 14:05:38'!
PASSED!

!testRun: #CartTest #test07CartDoesNotHoldNotAddedItems stamp: 'JEA 12/3/2020 14:05:38'!
PASSED!

!testRun: #CartTest #test08CartRemembersTheNumberOfAddedItems stamp: 'JEA 12/3/2020 14:05:38'!
PASSED!

!testRun: #CashierTest #test01CanNotCheckoutAnEmptyCart stamp: 'JEA 12/3/2020 14:05:38'!
PASSED!

!testRun: #CashierTest #test02CalculatedTotalIsCorrect stamp: 'JEA 12/3/2020 14:05:38'!
PASSED!

!testRun: #CashierTest #test03CanNotCheckoutWithAnExpiredCreditCart stamp: 'JEA 12/3/2020 14:05:38'!
PASSED!

!testRun: #CashierTest #test04CheckoutRegistersASale stamp: 'JEA 12/3/2020 14:05:38'!
PASSED!

!testRun: #CashierTest #test05CashierChargesCreditCardUsingMerchantProcessor stamp: 'JEA 12/3/2020 14:05:38'!
PASSED!

!testRun: #CashierTest #test06CashierDoesNotSaleWhenTheCreditCardHasNoCredit stamp: 'JEA 12/3/2020 14:05:38'!
PASSED!

!testRun: #CreditCardTest #test01cantCreateCardWithNumberTooShort stamp: 'JEA 12/3/2020 14:05:38'!
PASSED!

!testRun: #CreditCardTest #test02cantCreateCardWithNumberTooLong stamp: 'JEA 12/3/2020 14:05:38'!
PASSED!

!testRun: #CreditCardTest #test03cantCreateCardWithNumberNonNumeric stamp: 'JEA 12/3/2020 14:05:38'!
PASSED!

!testRun: #RestInterfaceTest #test01cannotCreateCartForInvalidClientID stamp: 'JEA 12/3/2020 14:05:38'!
PASSED!

!testRun: #RestInterfaceTest #test02cannotCreateCartForClientWithWrongPassword stamp: 'JEA 12/3/2020 14:05:38'!
PASSED!

!testRun: #RestInterfaceTest #test03canCreateCartForWellAuthenticatedClient stamp: 'JEA 12/3/2020 14:05:38'!
PASSED!

!testRun: #RestInterfaceTest #test04canCreateMoreThanOneCartWithDifferentIDs stamp: 'JEA 12/3/2020 14:05:38'!
PASSED!

!testRun: #RestInterfaceTest #test05cannotAddToCartWithInvalidID stamp: 'JEA 12/3/2020 14:05:38'!
FAILURE!

!testRun: #RestInterfaceTest #test06canAddItemToCartWithValidID stamp: 'JEA 12/3/2020 14:05:38'!
PASSED!

!testRun: #RestInterfaceTest #test07cannotCheckOutCartWithInvalidID stamp: 'JEA 12/3/2020 14:05:38'!
PASSED!

!testRun: #RestInterfaceTest #test08canCheckOutNonEmptyValidCartWithValidCreditCard stamp: 'JEA 12/3/2020 14:05:38'!
PASSED!

!testRun: #RestInterfaceTest #test09cannotListCartWithInvalidID stamp: 'JEA 12/3/2020 14:05:38'!
PASSED!

!testRun: #RestInterfaceTest #test10cannotInteractWithCartAfterTimeoutSinceCreated stamp: 'JEA 12/3/2020 14:05:38'!
FAILURE!

!testRun: #RestInterfaceTest #test11cartClockResetsAfterAdd stamp: 'JEA 12/3/2020 14:05:38'!
PASSED!

!testRun: #RestInterfaceTest #test12cartClockResetsAfterListing stamp: 'JEA 12/3/2020 14:05:38'!
PASSED!

!testRun: #RestInterfaceTest #test13cartClockResetsAfterCheckout stamp: 'JEA 12/3/2020 14:05:38'!
PASSED!

!testRun: #RestInterfaceTest #test14cannotListPurchasesOfInvalidClient stamp: 'JEA 12/3/2020 14:05:38'!
PASSED!

!testRun: #RestInterfaceTest #test15cannotListPurchasesOfClientWithInvalidPassword stamp: 'JEA 12/3/2020 14:05:38'!
PASSED!

!testRun: #RestInterfaceTest #test16canListPurchasesClientWhoNeverCheckedOut stamp: 'JEA 12/3/2020 14:05:38'!
PASSED!

!testRun: #RestInterfaceTest #test17canListPurchasesClientWhoBoughtOneBook stamp: 'JEA 12/3/2020 14:05:38'!
PASSED!

!testRun: #RestInterfaceTest #test18canListPurchasesClientWhoBoughtMoreThanOneBook stamp: 'JEA 12/3/2020 14:05:38'!
PASSED!

!testRun: #RestInterfaceTest #test19canListPurchasesClientWhoCheckedOutMoreThanOneCart stamp: 'JEA 12/3/2020 14:05:38'!
PASSED!
!RestInterface methodsFor: 'api' stamp: 'JEA 12/3/2020 14:05:42' prior: 50885973!
add: aQuantity of: anISBN toCartWithID: aCartID

	self ensureCartIDCanBeInteractedWith: aCartID.

	self resetTimerOfCartWithID: aCartID.

	(carts at: aCartID)
		add: aQuantity of: anISBN.! !
!RestInterface methodsFor: 'api' stamp: 'JEA 12/3/2020 14:05:47' prior: 50886106!
add: aQuantity of: anISBN toCartWithID: aCartID

	self ensureCartIDCanBeInteractedWith: aCartID.

	self resetTimerOfCartWithID: aCartID.

	"(carts at: aCartID)
		add: aQuantity of: anISBN."! !

!testRun: #CartTest #test01NewCartsAreCreatedEmpty stamp: 'JEA 12/3/2020 14:05:48'!
PASSED!

!testRun: #CartTest #test02CanNotAddItemsThatDoNotBelongToStore stamp: 'JEA 12/3/2020 14:05:48'!
PASSED!

!testRun: #CartTest #test03AfterAddingAnItemTheCartIsNotEmptyAnymore stamp: 'JEA 12/3/2020 14:05:48'!
PASSED!

!testRun: #CartTest #test04CanNotAddNonPositiveNumberOfItems stamp: 'JEA 12/3/2020 14:05:48'!
PASSED!

!testRun: #CartTest #test05CanNotAddMoreThanOneItemNotSellByTheStore stamp: 'JEA 12/3/2020 14:05:48'!
PASSED!

!testRun: #CartTest #test06CartRemembersAddedItems stamp: 'JEA 12/3/2020 14:05:48'!
PASSED!

!testRun: #CartTest #test07CartDoesNotHoldNotAddedItems stamp: 'JEA 12/3/2020 14:05:48'!
PASSED!

!testRun: #CartTest #test08CartRemembersTheNumberOfAddedItems stamp: 'JEA 12/3/2020 14:05:48'!
PASSED!

!testRun: #CashierTest #test01CanNotCheckoutAnEmptyCart stamp: 'JEA 12/3/2020 14:05:48'!
PASSED!

!testRun: #CashierTest #test02CalculatedTotalIsCorrect stamp: 'JEA 12/3/2020 14:05:48'!
PASSED!

!testRun: #CashierTest #test03CanNotCheckoutWithAnExpiredCreditCart stamp: 'JEA 12/3/2020 14:05:48'!
PASSED!

!testRun: #CashierTest #test04CheckoutRegistersASale stamp: 'JEA 12/3/2020 14:05:48'!
PASSED!

!testRun: #CashierTest #test05CashierChargesCreditCardUsingMerchantProcessor stamp: 'JEA 12/3/2020 14:05:48'!
PASSED!

!testRun: #CashierTest #test06CashierDoesNotSaleWhenTheCreditCardHasNoCredit stamp: 'JEA 12/3/2020 14:05:48'!
PASSED!

!testRun: #CreditCardTest #test01cantCreateCardWithNumberTooShort stamp: 'JEA 12/3/2020 14:05:48'!
PASSED!

!testRun: #CreditCardTest #test02cantCreateCardWithNumberTooLong stamp: 'JEA 12/3/2020 14:05:48'!
PASSED!

!testRun: #CreditCardTest #test03cantCreateCardWithNumberNonNumeric stamp: 'JEA 12/3/2020 14:05:48'!
PASSED!

!testRun: #RestInterfaceTest #test01cannotCreateCartForInvalidClientID stamp: 'JEA 12/3/2020 14:05:48'!
PASSED!

!testRun: #RestInterfaceTest #test02cannotCreateCartForClientWithWrongPassword stamp: 'JEA 12/3/2020 14:05:48'!
PASSED!

!testRun: #RestInterfaceTest #test03canCreateCartForWellAuthenticatedClient stamp: 'JEA 12/3/2020 14:05:48'!
PASSED!

!testRun: #RestInterfaceTest #test04canCreateMoreThanOneCartWithDifferentIDs stamp: 'JEA 12/3/2020 14:05:48'!
PASSED!

!testRun: #RestInterfaceTest #test05cannotAddToCartWithInvalidID stamp: 'JEA 12/3/2020 14:05:48'!
PASSED!

!testRun: #RestInterfaceTest #test06canAddItemToCartWithValidID stamp: 'JEA 12/3/2020 14:05:48'!
FAILURE!

!testRun: #RestInterfaceTest #test07cannotCheckOutCartWithInvalidID stamp: 'JEA 12/3/2020 14:05:48'!
PASSED!

!testRun: #RestInterfaceTest #test08canCheckOutNonEmptyValidCartWithValidCreditCard stamp: 'JEA 12/3/2020 14:05:48'!
ERROR!

!testRun: #RestInterfaceTest #test09cannotListCartWithInvalidID stamp: 'JEA 12/3/2020 14:05:48'!
PASSED!

!testRun: #RestInterfaceTest #test10cannotInteractWithCartAfterTimeoutSinceCreated stamp: 'JEA 12/3/2020 14:05:48'!
PASSED!

!testRun: #RestInterfaceTest #test11cartClockResetsAfterAdd stamp: 'JEA 12/3/2020 14:05:48'!
PASSED!

!testRun: #RestInterfaceTest #test12cartClockResetsAfterListing stamp: 'JEA 12/3/2020 14:05:48'!
PASSED!

!testRun: #RestInterfaceTest #test13cartClockResetsAfterCheckout stamp: 'JEA 12/3/2020 14:05:48'!
ERROR!

!testRun: #RestInterfaceTest #test14cannotListPurchasesOfInvalidClient stamp: 'JEA 12/3/2020 14:05:48'!
PASSED!

!testRun: #RestInterfaceTest #test15cannotListPurchasesOfClientWithInvalidPassword stamp: 'JEA 12/3/2020 14:05:48'!
PASSED!

!testRun: #RestInterfaceTest #test16canListPurchasesClientWhoNeverCheckedOut stamp: 'JEA 12/3/2020 14:05:48'!
PASSED!

!testRun: #RestInterfaceTest #test17canListPurchasesClientWhoBoughtOneBook stamp: 'JEA 12/3/2020 14:05:48'!
ERROR!

!testRun: #RestInterfaceTest #test18canListPurchasesClientWhoBoughtMoreThanOneBook stamp: 'JEA 12/3/2020 14:05:48'!
ERROR!

!testRun: #RestInterfaceTest #test19canListPurchasesClientWhoCheckedOutMoreThanOneCart stamp: 'JEA 12/3/2020 14:05:48'!
ERROR!
!RestInterface methodsFor: 'api' stamp: 'JEA 12/3/2020 14:05:54' prior: 50886115!
add: aQuantity of: anISBN toCartWithID: aCartID

	self ensureCartIDCanBeInteractedWith: aCartID.

	self resetTimerOfCartWithID: aCartID.

	(carts at: aCartID)
		add: aQuantity of: anISBN.! !
!RestInterface methodsFor: 'api' stamp: 'JEA 12/3/2020 14:08:58' prior: 50885408!
listPurchasesOf: aClientID password: aPassword

	authenticator authenticate: aClientID password: aPassword.
	
	^(clientSessions at: aClientID 
			       ifAbsent: [ clientSessions add: aClientID -> (ClientSession newFor: aClientID inInterface: self).
						clientSessions at: aClientID]) listPurchases.
					
	! !
!RestInterfaceTest methodsFor: 'tests - list purchases' stamp: 'JEA 12/3/2020 14:10:10' prior: 50884520!
test14cannotListPurchasesOfInvalidClient

	| restInterface clock authSimulator |
	
	clock := Clock newSimulatingRealTime.
	authSimulator := AuthenticatorSimulator new.
	authSimulator simulateInvalidClientID.
	restInterface := RestInterface authenticatingWith: authSimulator
							  debitingWith:  self
							  itemsFrom:  testObjectsFactory defaultCatalog
							  withClock:  clock
							  withCartTimeout: testObjectsFactory cartTimeout.
							
	self should: [ 
		restInterface listPurchasesOf: testObjectsFactory validClientID 
			password: testObjectsFactory correctPassword 
		]
		raise: Error
		withMessageText: AuthenticatorSimulator invalidClientIDMessage.! !
!RestInterfaceTest methodsFor: 'tests - list purchases' stamp: 'JEA 12/3/2020 14:10:22' prior: 50884545!
test15cannotListPurchasesOfClientWithInvalidPassword

	| restInterface clock authSimulator |
	
	clock := Clock newSimulatingRealTime.
	authSimulator := AuthenticatorSimulator new.
	authSimulator simulateWrongPassword .
	restInterface := RestInterface authenticatingWith: authSimulator
							  debitingWith:  self
							  itemsFrom:  testObjectsFactory defaultCatalog
							  withClock:  clock
							  withCartTimeout: testObjectsFactory cartTimeout.
							
	self should: [
		restInterface listPurchasesOf: testObjectsFactory validClientID
			password: testObjectsFactory correctPassword]
		raise: Error
		withMessageText: AuthenticatorSimulator invalidPasswordMessage .! !
!RestInterfaceTest methodsFor: 'tests - list purchases' stamp: 'JEA 12/3/2020 14:10:53' prior: 50886296!
test15cannotListPurchasesOfClientWithInvalidPassword

	| restInterface clock authSimulator |
	
	clock := Clock newSimulatingRealTime.
	authSimulator := AuthenticatorSimulator new.
	authSimulator simulateWrongPassword .
	restInterface := RestInterface authenticatingWith: authSimulator
							  debitingWith:  self
							  itemsFrom:  testObjectsFactory defaultCatalog
							  withClock:  clock
							  withCartTimeout: testObjectsFactory cartTimeout.
							
	self should: [
		restInterface listPurchasesOf: testObjectsFactory validClientID
			password: testObjectsFactory correctPassword]
		raise: Error
		withMessageText: AuthenticatorSimulator authenticationFailedMessage.! !
!RestInterfaceTest methodsFor: 'tests - list purchases' stamp: 'JEA 12/3/2020 14:11:16' prior: 50886321!
test15cannotListPurchasesOfClientWithInvalidPassword

	| restInterface clock authSimulator |
	
	clock := Clock newSimulatingRealTime.
	authSimulator := AuthenticatorSimulator new.
	authSimulator simulateWrongPassword .
	restInterface := RestInterface authenticatingWith: authSimulator
							  debitingWith:  self
							  itemsFrom:  testObjectsFactory defaultCatalog
							  withClock:  clock
							  withCartTimeout: testObjectsFactory cartTimeout.
							
	self should: [
		restInterface listPurchasesOf: testObjectsFactory validClientID
			password: testObjectsFactory correctPassword]
		raise: Error
		withMessageText: AuthenticatorSimulator invalidPasswordMessage.! !
!RestInterface methodsFor: 'api' stamp: 'JEA 12/3/2020 14:12:38' prior: 50886257!
listPurchasesOf: aClientID password: aPassword

	self authenticate: aClientID password: aPassword.
	
	^(clientSessions at: aClientID 
			       ifAbsent: [ clientSessions add: aClientID -> (ClientSession newFor: aClientID inInterface: self).
						clientSessions at: aClientID]) listPurchases.
					
	! !

!testRun: #RestInterfaceTest #test01cannotCreateCartForInvalidClientID stamp: 'JEA 12/3/2020 14:12:39'!
PASSED!

!testRun: #RestInterfaceTest #test02cannotCreateCartForClientWithWrongPassword stamp: 'JEA 12/3/2020 14:12:39'!
PASSED!

!testRun: #RestInterfaceTest #test03canCreateCartForWellAuthenticatedClient stamp: 'JEA 12/3/2020 14:12:39'!
PASSED!

!testRun: #RestInterfaceTest #test04canCreateMoreThanOneCartWithDifferentIDs stamp: 'JEA 12/3/2020 14:12:39'!
PASSED!

!testRun: #RestInterfaceTest #test05cannotAddToCartWithInvalidID stamp: 'JEA 12/3/2020 14:12:39'!
PASSED!

!testRun: #RestInterfaceTest #test06canAddItemToCartWithValidID stamp: 'JEA 12/3/2020 14:12:39'!
PASSED!

!testRun: #RestInterfaceTest #test07cannotCheckOutCartWithInvalidID stamp: 'JEA 12/3/2020 14:12:39'!
PASSED!

!testRun: #RestInterfaceTest #test08canCheckOutNonEmptyValidCartWithValidCreditCard stamp: 'JEA 12/3/2020 14:12:39'!
PASSED!

!testRun: #RestInterfaceTest #test09cannotListCartWithInvalidID stamp: 'JEA 12/3/2020 14:12:39'!
PASSED!

!testRun: #RestInterfaceTest #test10cannotInteractWithCartAfterTimeoutSinceCreated stamp: 'JEA 12/3/2020 14:12:39'!
PASSED!

!testRun: #RestInterfaceTest #test11cartClockResetsAfterAdd stamp: 'JEA 12/3/2020 14:12:39'!
PASSED!

!testRun: #RestInterfaceTest #test12cartClockResetsAfterListing stamp: 'JEA 12/3/2020 14:12:39'!
PASSED!

!testRun: #RestInterfaceTest #test13cartClockResetsAfterCheckout stamp: 'JEA 12/3/2020 14:12:39'!
PASSED!

!testRun: #RestInterfaceTest #test14cannotListPurchasesOfInvalidClient stamp: 'JEA 12/3/2020 14:12:39'!
FAILURE!

!testRun: #RestInterfaceTest #test15cannotListPurchasesOfClientWithInvalidPassword stamp: 'JEA 12/3/2020 14:12:39'!
FAILURE!

!testRun: #RestInterfaceTest #test16canListPurchasesClientWhoNeverCheckedOut stamp: 'JEA 12/3/2020 14:12:39'!
ERROR!

!testRun: #RestInterfaceTest #test17canListPurchasesClientWhoBoughtOneBook stamp: 'JEA 12/3/2020 14:12:39'!
ERROR!

!testRun: #RestInterfaceTest #test18canListPurchasesClientWhoBoughtMoreThanOneBook stamp: 'JEA 12/3/2020 14:12:39'!
ERROR!

!testRun: #RestInterfaceTest #test19canListPurchasesClientWhoCheckedOutMoreThanOneCart stamp: 'JEA 12/3/2020 14:12:39'!
ERROR!

!testRun: #RestInterfaceTest #test01cannotCreateCartForInvalidClientID stamp: 'JEA 12/3/2020 14:12:45'!
PASSED!

!testRun: #RestInterfaceTest #test02cannotCreateCartForClientWithWrongPassword stamp: 'JEA 12/3/2020 14:12:45'!
PASSED!

!testRun: #RestInterfaceTest #test03canCreateCartForWellAuthenticatedClient stamp: 'JEA 12/3/2020 14:12:45'!
PASSED!

!testRun: #RestInterfaceTest #test04canCreateMoreThanOneCartWithDifferentIDs stamp: 'JEA 12/3/2020 14:12:45'!
PASSED!

!testRun: #RestInterfaceTest #test05cannotAddToCartWithInvalidID stamp: 'JEA 12/3/2020 14:12:45'!
PASSED!

!testRun: #RestInterfaceTest #test06canAddItemToCartWithValidID stamp: 'JEA 12/3/2020 14:12:45'!
PASSED!

!testRun: #RestInterfaceTest #test07cannotCheckOutCartWithInvalidID stamp: 'JEA 12/3/2020 14:12:45'!
PASSED!

!testRun: #RestInterfaceTest #test08canCheckOutNonEmptyValidCartWithValidCreditCard stamp: 'JEA 12/3/2020 14:12:45'!
PASSED!

!testRun: #RestInterfaceTest #test09cannotListCartWithInvalidID stamp: 'JEA 12/3/2020 14:12:45'!
PASSED!

!testRun: #RestInterfaceTest #test10cannotInteractWithCartAfterTimeoutSinceCreated stamp: 'JEA 12/3/2020 14:12:45'!
PASSED!

!testRun: #RestInterfaceTest #test11cartClockResetsAfterAdd stamp: 'JEA 12/3/2020 14:12:45'!
PASSED!

!testRun: #RestInterfaceTest #test12cartClockResetsAfterListing stamp: 'JEA 12/3/2020 14:12:45'!
PASSED!

!testRun: #RestInterfaceTest #test13cartClockResetsAfterCheckout stamp: 'JEA 12/3/2020 14:12:45'!
PASSED!

!testRun: #RestInterfaceTest #test14cannotListPurchasesOfInvalidClient stamp: 'JEA 12/3/2020 14:12:45'!
FAILURE!

!testRun: #RestInterfaceTest #test15cannotListPurchasesOfClientWithInvalidPassword stamp: 'JEA 12/3/2020 14:12:45'!
FAILURE!

!testRun: #RestInterfaceTest #test16canListPurchasesClientWhoNeverCheckedOut stamp: 'JEA 12/3/2020 14:12:45'!
ERROR!

!testRun: #RestInterfaceTest #test17canListPurchasesClientWhoBoughtOneBook stamp: 'JEA 12/3/2020 14:12:45'!
ERROR!

!testRun: #RestInterfaceTest #test18canListPurchasesClientWhoBoughtMoreThanOneBook stamp: 'JEA 12/3/2020 14:12:45'!
ERROR!

!testRun: #RestInterfaceTest #test19canListPurchasesClientWhoCheckedOutMoreThanOneCart stamp: 'JEA 12/3/2020 14:12:45'!
ERROR!
!RestInterfaceTest methodsFor: 'tests - list purchases' stamp: 'JEA 12/3/2020 14:13:09' prior: 50886271!
test14cannotListPurchasesOfInvalidClient

	| restInterface clock authSimulator |
	
	clock := Clock newSimulatingRealTime.
	authSimulator := AuthenticatorSimulator new.
	authSimulator simulateInvalidClientID.
	restInterface := RestInterface authenticatingWith: authSimulator
							  debitingWith:  self
							  itemsFrom:  testObjectsFactory defaultCatalog
							  withClock:  clock
							  withCartTimeout: testObjectsFactory cartTimeout.
							
	self should: [ 
		restInterface listPurchasesOf: testObjectsFactory validClientID 
			password: testObjectsFactory correctPassword 
		]
		raise: Error
		withMessageText: RestInterface authenticationFailedMessage.! !
!RestInterfaceTest methodsFor: 'tests - list purchases' stamp: 'JEA 12/3/2020 14:13:13' prior: 50886346!
test15cannotListPurchasesOfClientWithInvalidPassword

	| restInterface clock authSimulator |
	
	clock := Clock newSimulatingRealTime.
	authSimulator := AuthenticatorSimulator new.
	authSimulator simulateWrongPassword .
	restInterface := RestInterface authenticatingWith: authSimulator
							  debitingWith:  self
							  itemsFrom:  testObjectsFactory defaultCatalog
							  withClock:  clock
							  withCartTimeout: testObjectsFactory cartTimeout.
							
	self should: [
		restInterface listPurchasesOf: testObjectsFactory validClientID
			password: testObjectsFactory correctPassword]
		raise: Error
		withMessageText: RestInterface authenticationFailedMessage.! !

!testRun: #RestInterfaceTest #test15cannotListPurchasesOfClientWithInvalidPassword stamp: 'JEA 12/3/2020 14:13:26'!
FAILURE!

!testRun: #RestInterfaceTest #test14cannotListPurchasesOfInvalidClient stamp: 'JEA 12/3/2020 14:13:40'!
FAILURE!

!testRun: #RestInterfaceTest #test14cannotListPurchasesOfInvalidClient stamp: 'JEA 12/3/2020 14:13:40'!
FAILURE!
!RestInterfaceTest methodsFor: 'tests - list purchases' stamp: 'JEA 12/3/2020 14:14:08' prior: 50886520!
test14cannotListPurchasesOfInvalidClient

	| restInterface clock authSimulator |
	
	clock := Clock newSimulatingRealTime.
	authSimulator := AuthenticatorSimulator new.
	authSimulator simulateInvalidClientID.
	restInterface := RestInterface authenticatingWith: authSimulator
							  debitingWith:  self
							  itemsFrom:  testObjectsFactory defaultCatalog
							  withClock:  clock
							  withCartTimeout: testObjectsFactory cartTimeout.
							
	self should: [ 
		restInterface listPurchasesOf: testObjectsFactory validClientID 
			password: testObjectsFactory correctPassword 
		]
		raise: Error
		withMessageText: RestInterface authenticationFailedMessage.! !

!testRun: #RestInterfaceTest #test14cannotListPurchasesOfInvalidClient stamp: 'JEA 12/3/2020 14:14:15'!
FAILURE!
!RestInterface methodsFor: 'api' stamp: 'JEA 12/3/2020 14:14:54' prior: 50886370!
listPurchasesOf: aClientID password: aPassword

	self authenticate: aClientID with: aPassword.
	
	^(clientSessions at: aClientID 
			       ifAbsent: [ clientSessions add: aClientID -> (ClientSession newFor: aClientID inInterface: self).
						clientSessions at: aClientID]) listPurchases.
					
	! !

!testRun: #RestInterfaceTest #test01cannotCreateCartForInvalidClientID stamp: 'JEA 12/3/2020 14:14:55'!
PASSED!

!testRun: #RestInterfaceTest #test02cannotCreateCartForClientWithWrongPassword stamp: 'JEA 12/3/2020 14:14:55'!
PASSED!

!testRun: #RestInterfaceTest #test03canCreateCartForWellAuthenticatedClient stamp: 'JEA 12/3/2020 14:14:55'!
PASSED!

!testRun: #RestInterfaceTest #test04canCreateMoreThanOneCartWithDifferentIDs stamp: 'JEA 12/3/2020 14:14:55'!
PASSED!

!testRun: #RestInterfaceTest #test05cannotAddToCartWithInvalidID stamp: 'JEA 12/3/2020 14:14:55'!
PASSED!

!testRun: #RestInterfaceTest #test06canAddItemToCartWithValidID stamp: 'JEA 12/3/2020 14:14:55'!
PASSED!

!testRun: #RestInterfaceTest #test07cannotCheckOutCartWithInvalidID stamp: 'JEA 12/3/2020 14:14:55'!
PASSED!

!testRun: #RestInterfaceTest #test08canCheckOutNonEmptyValidCartWithValidCreditCard stamp: 'JEA 12/3/2020 14:14:55'!
PASSED!

!testRun: #RestInterfaceTest #test09cannotListCartWithInvalidID stamp: 'JEA 12/3/2020 14:14:55'!
PASSED!

!testRun: #RestInterfaceTest #test10cannotInteractWithCartAfterTimeoutSinceCreated stamp: 'JEA 12/3/2020 14:14:55'!
PASSED!

!testRun: #RestInterfaceTest #test11cartClockResetsAfterAdd stamp: 'JEA 12/3/2020 14:14:55'!
PASSED!

!testRun: #RestInterfaceTest #test12cartClockResetsAfterListing stamp: 'JEA 12/3/2020 14:14:55'!
PASSED!

!testRun: #RestInterfaceTest #test13cartClockResetsAfterCheckout stamp: 'JEA 12/3/2020 14:14:55'!
PASSED!

!testRun: #RestInterfaceTest #test14cannotListPurchasesOfInvalidClient stamp: 'JEA 12/3/2020 14:14:55'!
PASSED!

!testRun: #RestInterfaceTest #test15cannotListPurchasesOfClientWithInvalidPassword stamp: 'JEA 12/3/2020 14:14:55'!
PASSED!

!testRun: #RestInterfaceTest #test16canListPurchasesClientWhoNeverCheckedOut stamp: 'JEA 12/3/2020 14:14:55'!
PASSED!

!testRun: #RestInterfaceTest #test17canListPurchasesClientWhoBoughtOneBook stamp: 'JEA 12/3/2020 14:14:55'!
PASSED!

!testRun: #RestInterfaceTest #test18canListPurchasesClientWhoBoughtMoreThanOneBook stamp: 'JEA 12/3/2020 14:14:55'!
PASSED!

!testRun: #RestInterfaceTest #test19canListPurchasesClientWhoCheckedOutMoreThanOneCart stamp: 'JEA 12/3/2020 14:14:55'!
PASSED!
!RestInterfaceTest methodsFor: 'tests - list purchases' stamp: 'JEA 12/3/2020 14:15:41' prior: 50884571!
test16canListPurchasesClientWhoNeverCheckedOut

	| restInterface |
	
	restInterface := RestInterface authenticatingWith:  AuthenticatorSimulator new
							  debitingWith:  self
							  itemsFrom:  testObjectsFactory defaultCatalog
							  withClock: Clock newSimulatingRealTime
							  withCartTimeout: testObjectsFactory cartTimeout.
							
	self assert: (restInterface listPurchasesOf: testObjectsFactory validClientID 
	                                      password: testObjectsFactory correctPassword)
		equals: (OrderedCollection with: Dictionary new with: 0).! !

!testRun: #RestInterfaceTest #test16canListPurchasesClientWhoNeverCheckedOut stamp: 'JEA 12/3/2020 14:15:43'!
PASSED!

!testRun: #CartTest #test01NewCartsAreCreatedEmpty stamp: 'JEA 12/3/2020 14:15:43'!
PASSED!

!testRun: #CartTest #test02CanNotAddItemsThatDoNotBelongToStore stamp: 'JEA 12/3/2020 14:15:43'!
PASSED!

!testRun: #CartTest #test03AfterAddingAnItemTheCartIsNotEmptyAnymore stamp: 'JEA 12/3/2020 14:15:43'!
PASSED!

!testRun: #CartTest #test04CanNotAddNonPositiveNumberOfItems stamp: 'JEA 12/3/2020 14:15:43'!
PASSED!

!testRun: #CartTest #test05CanNotAddMoreThanOneItemNotSellByTheStore stamp: 'JEA 12/3/2020 14:15:43'!
PASSED!

!testRun: #CartTest #test06CartRemembersAddedItems stamp: 'JEA 12/3/2020 14:15:43'!
PASSED!

!testRun: #CartTest #test07CartDoesNotHoldNotAddedItems stamp: 'JEA 12/3/2020 14:15:43'!
PASSED!

!testRun: #CartTest #test08CartRemembersTheNumberOfAddedItems stamp: 'JEA 12/3/2020 14:15:43'!
PASSED!

!testRun: #CashierTest #test01CanNotCheckoutAnEmptyCart stamp: 'JEA 12/3/2020 14:15:43'!
PASSED!

!testRun: #CashierTest #test02CalculatedTotalIsCorrect stamp: 'JEA 12/3/2020 14:15:43'!
PASSED!

!testRun: #CashierTest #test03CanNotCheckoutWithAnExpiredCreditCart stamp: 'JEA 12/3/2020 14:15:43'!
PASSED!

!testRun: #CashierTest #test04CheckoutRegistersASale stamp: 'JEA 12/3/2020 14:15:43'!
PASSED!

!testRun: #CashierTest #test05CashierChargesCreditCardUsingMerchantProcessor stamp: 'JEA 12/3/2020 14:15:43'!
PASSED!

!testRun: #CashierTest #test06CashierDoesNotSaleWhenTheCreditCardHasNoCredit stamp: 'JEA 12/3/2020 14:15:43'!
PASSED!

!testRun: #CreditCardTest #test01cantCreateCardWithNumberTooShort stamp: 'JEA 12/3/2020 14:15:43'!
PASSED!

!testRun: #CreditCardTest #test02cantCreateCardWithNumberTooLong stamp: 'JEA 12/3/2020 14:15:43'!
PASSED!

!testRun: #CreditCardTest #test03cantCreateCardWithNumberNonNumeric stamp: 'JEA 12/3/2020 14:15:43'!
PASSED!

!testRun: #RestInterfaceTest #test01cannotCreateCartForInvalidClientID stamp: 'JEA 12/3/2020 14:15:43'!
PASSED!

!testRun: #RestInterfaceTest #test02cannotCreateCartForClientWithWrongPassword stamp: 'JEA 12/3/2020 14:15:43'!
PASSED!

!testRun: #RestInterfaceTest #test03canCreateCartForWellAuthenticatedClient stamp: 'JEA 12/3/2020 14:15:43'!
PASSED!

!testRun: #RestInterfaceTest #test04canCreateMoreThanOneCartWithDifferentIDs stamp: 'JEA 12/3/2020 14:15:43'!
PASSED!

!testRun: #RestInterfaceTest #test05cannotAddToCartWithInvalidID stamp: 'JEA 12/3/2020 14:15:43'!
PASSED!

!testRun: #RestInterfaceTest #test06canAddItemToCartWithValidID stamp: 'JEA 12/3/2020 14:15:43'!
PASSED!

!testRun: #RestInterfaceTest #test07cannotCheckOutCartWithInvalidID stamp: 'JEA 12/3/2020 14:15:43'!
PASSED!

!testRun: #RestInterfaceTest #test08canCheckOutNonEmptyValidCartWithValidCreditCard stamp: 'JEA 12/3/2020 14:15:43'!
PASSED!

!testRun: #RestInterfaceTest #test09cannotListCartWithInvalidID stamp: 'JEA 12/3/2020 14:15:43'!
PASSED!

!testRun: #RestInterfaceTest #test10cannotInteractWithCartAfterTimeoutSinceCreated stamp: 'JEA 12/3/2020 14:15:43'!
PASSED!

!testRun: #RestInterfaceTest #test11cartClockResetsAfterAdd stamp: 'JEA 12/3/2020 14:15:43'!
PASSED!

!testRun: #RestInterfaceTest #test12cartClockResetsAfterListing stamp: 'JEA 12/3/2020 14:15:43'!
PASSED!

!testRun: #RestInterfaceTest #test13cartClockResetsAfterCheckout stamp: 'JEA 12/3/2020 14:15:43'!
PASSED!

!testRun: #RestInterfaceTest #test14cannotListPurchasesOfInvalidClient stamp: 'JEA 12/3/2020 14:15:43'!
PASSED!

!testRun: #RestInterfaceTest #test15cannotListPurchasesOfClientWithInvalidPassword stamp: 'JEA 12/3/2020 14:15:43'!
PASSED!

!testRun: #RestInterfaceTest #test16canListPurchasesClientWhoNeverCheckedOut stamp: 'JEA 12/3/2020 14:15:43'!
PASSED!

!testRun: #RestInterfaceTest #test17canListPurchasesClientWhoBoughtOneBook stamp: 'JEA 12/3/2020 14:15:43'!
PASSED!

!testRun: #RestInterfaceTest #test18canListPurchasesClientWhoBoughtMoreThanOneBook stamp: 'JEA 12/3/2020 14:15:43'!
PASSED!

!testRun: #RestInterfaceTest #test19canListPurchasesClientWhoCheckedOutMoreThanOneCart stamp: 'JEA 12/3/2020 14:15:43'!
PASSED!
!RestInterfaceTest methodsFor: 'tests - list purchases' stamp: 'JEA 12/3/2020 14:16:05' prior: 50886690!
test16canListPurchasesClientWhoNeverCheckedOut

	| restInterface |
	
	restInterface := RestInterface authenticatingWith:  AuthenticatorSimulator new
							  debitingWith: self
							  itemsFrom: testObjectsFactory defaultCatalog
							  withClock: Clock newSimulatingRealTime
							  withCartTimeout: testObjectsFactory cartTimeout.
							
	self assert: (restInterface listPurchasesOf: testObjectsFactory validClientID 
	                                      password: testObjectsFactory correctPassword)
		equals: (OrderedCollection with: Dictionary new with: 0).! !
!RestInterfaceTest methodsFor: 'tests - list purchases' stamp: 'JEA 12/3/2020 14:16:09' prior: 50886840!
test16canListPurchasesClientWhoNeverCheckedOut

	| restInterface |
	
	restInterface := RestInterface authenticatingWith: AuthenticatorSimulator new
							  debitingWith: self
							  itemsFrom: testObjectsFactory defaultCatalog
							  withClock: Clock newSimulatingRealTime
							  withCartTimeout: testObjectsFactory cartTimeout.
							
	self assert: (restInterface listPurchasesOf: testObjectsFactory validClientID 
	                                      password: testObjectsFactory correctPassword)
		equals: (OrderedCollection with: Dictionary new with: 0).! !
!Clock methodsFor: 'simulations - private' stamp: 'JEA 12/3/2020 14:23:07'!
realTimeNow

	^GregorianDateTime now.! !
!Clock methodsFor: 'simulations' stamp: 'JEA 12/3/2020 14:23:17' prior: 50885243!
simulateAdvancing: aTimeMeasure

	currentDateAndTimeBehavior := [ self realTimeNow next: aTimeMeasure. ].! !
!Clock methodsFor: 'simulations' stamp: 'JEA 12/3/2020 14:23:24' prior: 50885249!
simulateRealTime

	currentDateAndTimeBehavior := [ self realTimeNow. ].! !

!testRun: #CartTest #test01NewCartsAreCreatedEmpty stamp: 'JEA 12/3/2020 14:23:29'!
PASSED!

!testRun: #CartTest #test02CanNotAddItemsThatDoNotBelongToStore stamp: 'JEA 12/3/2020 14:23:29'!
PASSED!

!testRun: #CartTest #test03AfterAddingAnItemTheCartIsNotEmptyAnymore stamp: 'JEA 12/3/2020 14:23:29'!
PASSED!

!testRun: #CartTest #test04CanNotAddNonPositiveNumberOfItems stamp: 'JEA 12/3/2020 14:23:29'!
PASSED!

!testRun: #CartTest #test05CanNotAddMoreThanOneItemNotSellByTheStore stamp: 'JEA 12/3/2020 14:23:29'!
PASSED!

!testRun: #CartTest #test06CartRemembersAddedItems stamp: 'JEA 12/3/2020 14:23:29'!
PASSED!

!testRun: #CartTest #test07CartDoesNotHoldNotAddedItems stamp: 'JEA 12/3/2020 14:23:29'!
PASSED!

!testRun: #CartTest #test08CartRemembersTheNumberOfAddedItems stamp: 'JEA 12/3/2020 14:23:29'!
PASSED!

!testRun: #CashierTest #test01CanNotCheckoutAnEmptyCart stamp: 'JEA 12/3/2020 14:23:29'!
PASSED!

!testRun: #CashierTest #test02CalculatedTotalIsCorrect stamp: 'JEA 12/3/2020 14:23:29'!
PASSED!

!testRun: #CashierTest #test03CanNotCheckoutWithAnExpiredCreditCart stamp: 'JEA 12/3/2020 14:23:29'!
PASSED!

!testRun: #CashierTest #test04CheckoutRegistersASale stamp: 'JEA 12/3/2020 14:23:29'!
PASSED!

!testRun: #CashierTest #test05CashierChargesCreditCardUsingMerchantProcessor stamp: 'JEA 12/3/2020 14:23:29'!
PASSED!

!testRun: #CashierTest #test06CashierDoesNotSaleWhenTheCreditCardHasNoCredit stamp: 'JEA 12/3/2020 14:23:29'!
PASSED!

!testRun: #CreditCardTest #test01cantCreateCardWithNumberTooShort stamp: 'JEA 12/3/2020 14:23:29'!
PASSED!

!testRun: #CreditCardTest #test02cantCreateCardWithNumberTooLong stamp: 'JEA 12/3/2020 14:23:29'!
PASSED!

!testRun: #CreditCardTest #test03cantCreateCardWithNumberNonNumeric stamp: 'JEA 12/3/2020 14:23:29'!
PASSED!

!testRun: #RestInterfaceTest #test01cannotCreateCartForInvalidClientID stamp: 'JEA 12/3/2020 14:23:29'!
PASSED!

!testRun: #RestInterfaceTest #test02cannotCreateCartForClientWithWrongPassword stamp: 'JEA 12/3/2020 14:23:29'!
PASSED!

!testRun: #RestInterfaceTest #test03canCreateCartForWellAuthenticatedClient stamp: 'JEA 12/3/2020 14:23:29'!
PASSED!

!testRun: #RestInterfaceTest #test04canCreateMoreThanOneCartWithDifferentIDs stamp: 'JEA 12/3/2020 14:23:29'!
PASSED!

!testRun: #RestInterfaceTest #test05cannotAddToCartWithInvalidID stamp: 'JEA 12/3/2020 14:23:29'!
PASSED!

!testRun: #RestInterfaceTest #test06canAddItemToCartWithValidID stamp: 'JEA 12/3/2020 14:23:29'!
PASSED!

!testRun: #RestInterfaceTest #test07cannotCheckOutCartWithInvalidID stamp: 'JEA 12/3/2020 14:23:29'!
PASSED!

!testRun: #RestInterfaceTest #test08canCheckOutNonEmptyValidCartWithValidCreditCard stamp: 'JEA 12/3/2020 14:23:29'!
PASSED!

!testRun: #RestInterfaceTest #test09cannotListCartWithInvalidID stamp: 'JEA 12/3/2020 14:23:29'!
PASSED!

!testRun: #RestInterfaceTest #test10cannotInteractWithCartAfterTimeoutSinceCreated stamp: 'JEA 12/3/2020 14:23:29'!
PASSED!

!testRun: #RestInterfaceTest #test11cartClockResetsAfterAdd stamp: 'JEA 12/3/2020 14:23:29'!
PASSED!

!testRun: #RestInterfaceTest #test12cartClockResetsAfterListing stamp: 'JEA 12/3/2020 14:23:29'!
PASSED!

!testRun: #RestInterfaceTest #test13cartClockResetsAfterCheckout stamp: 'JEA 12/3/2020 14:23:29'!
PASSED!

!testRun: #RestInterfaceTest #test14cannotListPurchasesOfInvalidClient stamp: 'JEA 12/3/2020 14:23:29'!
PASSED!

!testRun: #RestInterfaceTest #test15cannotListPurchasesOfClientWithInvalidPassword stamp: 'JEA 12/3/2020 14:23:29'!
PASSED!

!testRun: #RestInterfaceTest #test16canListPurchasesClientWhoNeverCheckedOut stamp: 'JEA 12/3/2020 14:23:29'!
PASSED!

!testRun: #RestInterfaceTest #test17canListPurchasesClientWhoBoughtOneBook stamp: 'JEA 12/3/2020 14:23:29'!
PASSED!

!testRun: #RestInterfaceTest #test18canListPurchasesClientWhoBoughtMoreThanOneBook stamp: 'JEA 12/3/2020 14:23:29'!
PASSED!

!testRun: #RestInterfaceTest #test19canListPurchasesClientWhoCheckedOutMoreThanOneCart stamp: 'JEA 12/3/2020 14:23:29'!
PASSED!
!RestInterface methodsFor: 'cart information' stamp: 'JEA 12/3/2020 14:28:39'!
clientSessionFor: aCartID
	
	^clientSessions detect: [ :aClientSession | aClientSession owns: aCartID ].! !
!RestInterface methodsFor: 'as yet unclassified' stamp: 'JEA 12/3/2020 14:28:39' prior: 50885366!
checkOutCartWithID: aCartID withCardNumber: aCardNumber expiring: aGregorianMonthOfYear owner: aName
	| creditCard transactionID |

	self ensureCartIDCanBeInteractedWith: aCartID.
	
	self resetTimerOfCartWithID: aCartID.
	
	creditCard := CreditCard 
		numbered: aCardNumber 
		ownedBy: aName 
		expiringOn: aGregorianMonthOfYear.
	
	transactionID := self checkOut: (carts at: aCartID) withCard: creditCard .
	
	(self clientSessionFor: aCartID) registerPurchasesInCart: aCartID.
	
	^transactionID.! !

!methodRemoval: RestInterface #ownerOf: stamp: 'JEA 12/3/2020 14:28:39'!
ownerOf: aCartID
	
	^clientSessions detect: [ :aClientSession | aClientSession owns: aCartID ].!
!RestInterface methodsFor: 'cart information' stamp: 'JEA 12/3/2020 14:29:13' prior: 50885485!
totalPriceOfCartID: aCartID

	self ensureCartIDIsValid: aCartID.
	
	^(carts at: aCartID) total.! !
!RestInterface methodsFor: 'api - private' stamp: 'JEA 12/3/2020 14:30:55' prior: 50885447!
ensureCartIDIsNotTimedOut: aCartID
	
	(clock hasReached: (self cartExpirationDateTimeForID: aCartID))
		ifTrue: [ self error: self class cartTimedOutMessage. ].! !
!Clock methodsFor: 'queries' stamp: 'JEA 12/3/2020 14:31:23'!
hasReached: aDateTime

	^self now >= aDateTime! !
!Clock methodsFor: 'queries' stamp: 'JEA 12/3/2020 14:31:24' prior: 50887068!
hasReached: aDateTime

	^self now >= aDateTime.! !

!testRun: #CartTest #test01NewCartsAreCreatedEmpty stamp: 'JEA 12/3/2020 14:31:25'!
PASSED!

!testRun: #CartTest #test02CanNotAddItemsThatDoNotBelongToStore stamp: 'JEA 12/3/2020 14:31:25'!
PASSED!

!testRun: #CartTest #test03AfterAddingAnItemTheCartIsNotEmptyAnymore stamp: 'JEA 12/3/2020 14:31:25'!
PASSED!

!testRun: #CartTest #test04CanNotAddNonPositiveNumberOfItems stamp: 'JEA 12/3/2020 14:31:25'!
PASSED!

!testRun: #CartTest #test05CanNotAddMoreThanOneItemNotSellByTheStore stamp: 'JEA 12/3/2020 14:31:25'!
PASSED!

!testRun: #CartTest #test06CartRemembersAddedItems stamp: 'JEA 12/3/2020 14:31:25'!
PASSED!

!testRun: #CartTest #test07CartDoesNotHoldNotAddedItems stamp: 'JEA 12/3/2020 14:31:25'!
PASSED!

!testRun: #CartTest #test08CartRemembersTheNumberOfAddedItems stamp: 'JEA 12/3/2020 14:31:25'!
PASSED!

!testRun: #CashierTest #test01CanNotCheckoutAnEmptyCart stamp: 'JEA 12/3/2020 14:31:25'!
PASSED!

!testRun: #CashierTest #test02CalculatedTotalIsCorrect stamp: 'JEA 12/3/2020 14:31:25'!
PASSED!

!testRun: #CashierTest #test03CanNotCheckoutWithAnExpiredCreditCart stamp: 'JEA 12/3/2020 14:31:25'!
PASSED!

!testRun: #CashierTest #test04CheckoutRegistersASale stamp: 'JEA 12/3/2020 14:31:25'!
PASSED!

!testRun: #CashierTest #test05CashierChargesCreditCardUsingMerchantProcessor stamp: 'JEA 12/3/2020 14:31:25'!
PASSED!

!testRun: #CashierTest #test06CashierDoesNotSaleWhenTheCreditCardHasNoCredit stamp: 'JEA 12/3/2020 14:31:25'!
PASSED!

!testRun: #CreditCardTest #test01cantCreateCardWithNumberTooShort stamp: 'JEA 12/3/2020 14:31:25'!
PASSED!

!testRun: #CreditCardTest #test02cantCreateCardWithNumberTooLong stamp: 'JEA 12/3/2020 14:31:25'!
PASSED!

!testRun: #CreditCardTest #test03cantCreateCardWithNumberNonNumeric stamp: 'JEA 12/3/2020 14:31:25'!
PASSED!

!testRun: #RestInterfaceTest #test01cannotCreateCartForInvalidClientID stamp: 'JEA 12/3/2020 14:31:25'!
PASSED!

!testRun: #RestInterfaceTest #test02cannotCreateCartForClientWithWrongPassword stamp: 'JEA 12/3/2020 14:31:25'!
PASSED!

!testRun: #RestInterfaceTest #test03canCreateCartForWellAuthenticatedClient stamp: 'JEA 12/3/2020 14:31:25'!
PASSED!

!testRun: #RestInterfaceTest #test04canCreateMoreThanOneCartWithDifferentIDs stamp: 'JEA 12/3/2020 14:31:25'!
PASSED!

!testRun: #RestInterfaceTest #test05cannotAddToCartWithInvalidID stamp: 'JEA 12/3/2020 14:31:25'!
PASSED!

!testRun: #RestInterfaceTest #test06canAddItemToCartWithValidID stamp: 'JEA 12/3/2020 14:31:25'!
PASSED!

!testRun: #RestInterfaceTest #test07cannotCheckOutCartWithInvalidID stamp: 'JEA 12/3/2020 14:31:25'!
PASSED!

!testRun: #RestInterfaceTest #test08canCheckOutNonEmptyValidCartWithValidCreditCard stamp: 'JEA 12/3/2020 14:31:25'!
PASSED!

!testRun: #RestInterfaceTest #test09cannotListCartWithInvalidID stamp: 'JEA 12/3/2020 14:31:25'!
PASSED!

!testRun: #RestInterfaceTest #test10cannotInteractWithCartAfterTimeoutSinceCreated stamp: 'JEA 12/3/2020 14:31:25'!
PASSED!

!testRun: #RestInterfaceTest #test11cartClockResetsAfterAdd stamp: 'JEA 12/3/2020 14:31:25'!
PASSED!

!testRun: #RestInterfaceTest #test12cartClockResetsAfterListing stamp: 'JEA 12/3/2020 14:31:25'!
PASSED!

!testRun: #RestInterfaceTest #test13cartClockResetsAfterCheckout stamp: 'JEA 12/3/2020 14:31:25'!
PASSED!

!testRun: #RestInterfaceTest #test14cannotListPurchasesOfInvalidClient stamp: 'JEA 12/3/2020 14:31:25'!
PASSED!

!testRun: #RestInterfaceTest #test15cannotListPurchasesOfClientWithInvalidPassword stamp: 'JEA 12/3/2020 14:31:25'!
PASSED!

!testRun: #RestInterfaceTest #test16canListPurchasesClientWhoNeverCheckedOut stamp: 'JEA 12/3/2020 14:31:25'!
PASSED!

!testRun: #RestInterfaceTest #test17canListPurchasesClientWhoBoughtOneBook stamp: 'JEA 12/3/2020 14:31:25'!
PASSED!

!testRun: #RestInterfaceTest #test18canListPurchasesClientWhoBoughtMoreThanOneBook stamp: 'JEA 12/3/2020 14:31:25'!
PASSED!

!testRun: #RestInterfaceTest #test19canListPurchasesClientWhoCheckedOutMoreThanOneCart stamp: 'JEA 12/3/2020 14:31:25'!
PASSED!
!RestInterface methodsFor: 'cart information' stamp: 'JEA 12/3/2020 14:35:38'!
clientSessionForCart: aCartID
	
	^clientSessions detect: [ :aClientSession | aClientSession owns: aCartID ].! !
!RestInterface methodsFor: 'as yet unclassified' stamp: 'JEA 12/3/2020 14:35:38' prior: 50887030!
checkOutCartWithID: aCartID withCardNumber: aCardNumber expiring: aGregorianMonthOfYear owner: aName
	| creditCard transactionID |

	self ensureCartIDCanBeInteractedWith: aCartID.
	
	self resetTimerOfCartWithID: aCartID.
	
	creditCard := CreditCard 
		numbered: aCardNumber 
		ownedBy: aName 
		expiringOn: aGregorianMonthOfYear.
	
	transactionID := self checkOut: (carts at: aCartID) withCard: creditCard .
	
	(self clientSessionForCart: aCartID) registerPurchasesInCart: aCartID.
	
	^transactionID.! !

!methodRemoval: RestInterface #clientSessionFor: stamp: 'JEA 12/3/2020 14:35:38'!
clientSessionFor: aCartID
	
	^clientSessions detect: [ :aClientSession | aClientSession owns: aCartID ].!

!testRun: #CartTest #test01NewCartsAreCreatedEmpty stamp: 'JEA 12/3/2020 14:35:40'!
PASSED!

!testRun: #CartTest #test02CanNotAddItemsThatDoNotBelongToStore stamp: 'JEA 12/3/2020 14:35:40'!
PASSED!

!testRun: #CartTest #test03AfterAddingAnItemTheCartIsNotEmptyAnymore stamp: 'JEA 12/3/2020 14:35:40'!
PASSED!

!testRun: #CartTest #test04CanNotAddNonPositiveNumberOfItems stamp: 'JEA 12/3/2020 14:35:40'!
PASSED!

!testRun: #CartTest #test05CanNotAddMoreThanOneItemNotSellByTheStore stamp: 'JEA 12/3/2020 14:35:40'!
PASSED!

!testRun: #CartTest #test06CartRemembersAddedItems stamp: 'JEA 12/3/2020 14:35:40'!
PASSED!

!testRun: #CartTest #test07CartDoesNotHoldNotAddedItems stamp: 'JEA 12/3/2020 14:35:40'!
PASSED!

!testRun: #CartTest #test08CartRemembersTheNumberOfAddedItems stamp: 'JEA 12/3/2020 14:35:40'!
PASSED!

!testRun: #CashierTest #test01CanNotCheckoutAnEmptyCart stamp: 'JEA 12/3/2020 14:35:40'!
PASSED!

!testRun: #CashierTest #test02CalculatedTotalIsCorrect stamp: 'JEA 12/3/2020 14:35:40'!
PASSED!

!testRun: #CashierTest #test03CanNotCheckoutWithAnExpiredCreditCart stamp: 'JEA 12/3/2020 14:35:40'!
PASSED!

!testRun: #CashierTest #test04CheckoutRegistersASale stamp: 'JEA 12/3/2020 14:35:40'!
PASSED!

!testRun: #CashierTest #test05CashierChargesCreditCardUsingMerchantProcessor stamp: 'JEA 12/3/2020 14:35:40'!
PASSED!

!testRun: #CashierTest #test06CashierDoesNotSaleWhenTheCreditCardHasNoCredit stamp: 'JEA 12/3/2020 14:35:40'!
PASSED!

!testRun: #CreditCardTest #test01cantCreateCardWithNumberTooShort stamp: 'JEA 12/3/2020 14:35:40'!
PASSED!

!testRun: #CreditCardTest #test02cantCreateCardWithNumberTooLong stamp: 'JEA 12/3/2020 14:35:40'!
PASSED!

!testRun: #CreditCardTest #test03cantCreateCardWithNumberNonNumeric stamp: 'JEA 12/3/2020 14:35:40'!
PASSED!

!testRun: #RestInterfaceTest #test01cannotCreateCartForInvalidClientID stamp: 'JEA 12/3/2020 14:35:40'!
PASSED!

!testRun: #RestInterfaceTest #test02cannotCreateCartForClientWithWrongPassword stamp: 'JEA 12/3/2020 14:35:40'!
PASSED!

!testRun: #RestInterfaceTest #test03canCreateCartForWellAuthenticatedClient stamp: 'JEA 12/3/2020 14:35:40'!
PASSED!

!testRun: #RestInterfaceTest #test04canCreateMoreThanOneCartWithDifferentIDs stamp: 'JEA 12/3/2020 14:35:40'!
PASSED!

!testRun: #RestInterfaceTest #test05cannotAddToCartWithInvalidID stamp: 'JEA 12/3/2020 14:35:40'!
PASSED!

!testRun: #RestInterfaceTest #test06canAddItemToCartWithValidID stamp: 'JEA 12/3/2020 14:35:40'!
PASSED!

!testRun: #RestInterfaceTest #test07cannotCheckOutCartWithInvalidID stamp: 'JEA 12/3/2020 14:35:40'!
PASSED!

!testRun: #RestInterfaceTest #test08canCheckOutNonEmptyValidCartWithValidCreditCard stamp: 'JEA 12/3/2020 14:35:40'!
PASSED!

!testRun: #RestInterfaceTest #test09cannotListCartWithInvalidID stamp: 'JEA 12/3/2020 14:35:40'!
PASSED!

!testRun: #RestInterfaceTest #test10cannotInteractWithCartAfterTimeoutSinceCreated stamp: 'JEA 12/3/2020 14:35:40'!
PASSED!

!testRun: #RestInterfaceTest #test11cartClockResetsAfterAdd stamp: 'JEA 12/3/2020 14:35:40'!
PASSED!

!testRun: #RestInterfaceTest #test12cartClockResetsAfterListing stamp: 'JEA 12/3/2020 14:35:40'!
PASSED!

!testRun: #RestInterfaceTest #test13cartClockResetsAfterCheckout stamp: 'JEA 12/3/2020 14:35:40'!
PASSED!

!testRun: #RestInterfaceTest #test14cannotListPurchasesOfInvalidClient stamp: 'JEA 12/3/2020 14:35:40'!
PASSED!

!testRun: #RestInterfaceTest #test15cannotListPurchasesOfClientWithInvalidPassword stamp: 'JEA 12/3/2020 14:35:40'!
PASSED!

!testRun: #RestInterfaceTest #test16canListPurchasesClientWhoNeverCheckedOut stamp: 'JEA 12/3/2020 14:35:40'!
PASSED!

!testRun: #RestInterfaceTest #test17canListPurchasesClientWhoBoughtOneBook stamp: 'JEA 12/3/2020 14:35:40'!
PASSED!

!testRun: #RestInterfaceTest #test18canListPurchasesClientWhoBoughtMoreThanOneBook stamp: 'JEA 12/3/2020 14:35:40'!
PASSED!

!testRun: #RestInterfaceTest #test19canListPurchasesClientWhoCheckedOutMoreThanOneCart stamp: 'JEA 12/3/2020 14:35:40'!
PASSED!

Object subclass: #RestInterface
	instanceVariableNames: 'authenticator merchantProcessor lastCartID clock catalog carts lastInteractionForCart transactionValues cartTimeout clientSessions'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

!classDefinition: #RestInterface category: 'TusLibros' stamp: 'JEA 12/3/2020 14:37:22'!
Object subclass: #RestInterface
	instanceVariableNames: 'authenticator merchantProcessor lastCartID clock catalog carts lastInteractionForCart transactionValues cartTimeout clientSessions'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

Object subclass: #RestInterface
	instanceVariableNames: 'authenticator merchantProcessor lastCartID clock catalog  carts lastInteractionForCart transactionValues cartTimeout clientSessions'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

!classDefinition: #RestInterface category: 'TusLibros' stamp: 'JEA 12/3/2020 14:41:06'!
Object subclass: #RestInterface
	instanceVariableNames: 'authenticator merchantProcessor lastCartID clock catalog carts lastInteractionForCart transactionValues cartTimeout clientSessions'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!
!RestInterface methodsFor: 'api' stamp: 'JEA 12/3/2020 14:48:35' prior: 50887208!
checkOutCartWithID: aCartID withCardNumber: aCardNumber expiring: aGregorianMonthOfYear owner: aName
	| creditCard transactionID |

	self ensureCartIDCanBeInteractedWith: aCartID.
	
	self resetTimerOfCartWithID: aCartID.
	
	creditCard := CreditCard 
		numbered: aCardNumber 
		ownedBy: aName 
		expiringOn: aGregorianMonthOfYear.
	
	transactionID := self checkOut: (carts at: aCartID) withCard: creditCard.
	
	(self clientSessionForCart: aCartID) registerPurchasesInCart: aCartID.
	
	^transactionID.! !

----SNAPSHOT----(3 December 2020 14:49:25) CuisUniversity-4384.image priorSource: 17671674!
!RestInterface methodsFor: 'api' stamp: 'JEA 12/3/2020 14:51:10' prior: 50885384!
createCartFor: aClientID password: aPassword
	| cartID |
	
	self authenticate: aClientID with: aPassword.

	cartID := self nextCartID.
	carts at: cartID put: (Cart acceptingItemsOf: catalog).
	
	self resetTimerOfCartWithID: cartID.	
					
	^cartID.! !
!RestInterface methodsFor: 'api' stamp: 'JEA 12/3/2020 14:51:20' prior: 50887395!
checkOutCartWithID: aCartID withCardNumber: aCardNumber expiring: aGregorianMonthOfYear owner: aName
	| creditCard transactionID |

	self ensureCartIDCanBeInteractedWith: aCartID.
	
	self resetTimerOfCartWithID: aCartID.
	
	creditCard := CreditCard 
		numbered: aCardNumber 
		ownedBy: aName 
		expiringOn: aGregorianMonthOfYear.
	
	transactionID := self checkOut: (carts at: aCartID) withCard: creditCard.
	
	^transactionID.! !
!RestInterface methodsFor: 'api' stamp: 'JEA 12/3/2020 14:51:30' prior: 50886608!
listPurchasesOf: aClientID password: aPassword

	self authenticate: aClientID with: aPassword.
					
	! !

!methodRemoval: RestInterface #clientSessionForCart: stamp: 'JEA 12/3/2020 14:51:45'!
clientSessionForCart: aCartID
	
	^clientSessions detect: [ :aClientSession | aClientSession owns: aCartID ].!
!RestInterface methodsFor: 'initialization' stamp: 'JEA 12/3/2020 14:51:52' prior: 50885497!
initializeAuthenticatingWith: anAuthenticator debitingWith: aMerchantProcessor itemsFrom: aCatalog withClock: aClock withCartTimeout: aTimeMeasure 

	authenticator := anAuthenticator.
	lastCartID := 0.
	catalog := aCatalog.
	clock := aClock.
	merchantProcessor := aMerchantProcessor.
	cartTimeout := aTimeMeasure.
	transactionValues := Dictionary new.
	carts := Dictionary new.
	lastInteractionForCart := Dictionary new.! !

!classRemoval: #ClientSession stamp: 'JEA 12/3/2020 14:51:56'!
Object subclass: #ClientSession
	instanceVariableNames: 'ownedCarts listOfPurchases clientID totalSpent interface'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

!testRun: #CartTest #test01NewCartsAreCreatedEmpty stamp: 'JEA 12/3/2020 14:51:59'!
PASSED!

!testRun: #CartTest #test02CanNotAddItemsThatDoNotBelongToStore stamp: 'JEA 12/3/2020 14:51:59'!
PASSED!

!testRun: #CartTest #test03AfterAddingAnItemTheCartIsNotEmptyAnymore stamp: 'JEA 12/3/2020 14:51:59'!
PASSED!

!testRun: #CartTest #test04CanNotAddNonPositiveNumberOfItems stamp: 'JEA 12/3/2020 14:51:59'!
PASSED!

!testRun: #CartTest #test05CanNotAddMoreThanOneItemNotSellByTheStore stamp: 'JEA 12/3/2020 14:51:59'!
PASSED!

!testRun: #CartTest #test06CartRemembersAddedItems stamp: 'JEA 12/3/2020 14:51:59'!
PASSED!

!testRun: #CartTest #test07CartDoesNotHoldNotAddedItems stamp: 'JEA 12/3/2020 14:51:59'!
PASSED!

!testRun: #CartTest #test08CartRemembersTheNumberOfAddedItems stamp: 'JEA 12/3/2020 14:51:59'!
PASSED!

!testRun: #CashierTest #test01CanNotCheckoutAnEmptyCart stamp: 'JEA 12/3/2020 14:51:59'!
PASSED!

!testRun: #CashierTest #test02CalculatedTotalIsCorrect stamp: 'JEA 12/3/2020 14:51:59'!
PASSED!

!testRun: #CashierTest #test03CanNotCheckoutWithAnExpiredCreditCart stamp: 'JEA 12/3/2020 14:51:59'!
PASSED!

!testRun: #CashierTest #test04CheckoutRegistersASale stamp: 'JEA 12/3/2020 14:51:59'!
PASSED!

!testRun: #CashierTest #test05CashierChargesCreditCardUsingMerchantProcessor stamp: 'JEA 12/3/2020 14:51:59'!
PASSED!

!testRun: #CashierTest #test06CashierDoesNotSaleWhenTheCreditCardHasNoCredit stamp: 'JEA 12/3/2020 14:51:59'!
PASSED!

!testRun: #CreditCardTest #test01cantCreateCardWithNumberTooShort stamp: 'JEA 12/3/2020 14:51:59'!
PASSED!

!testRun: #CreditCardTest #test02cantCreateCardWithNumberTooLong stamp: 'JEA 12/3/2020 14:51:59'!
PASSED!

!testRun: #CreditCardTest #test03cantCreateCardWithNumberNonNumeric stamp: 'JEA 12/3/2020 14:51:59'!
PASSED!

!testRun: #RestInterfaceTest #test01cannotCreateCartForInvalidClientID stamp: 'JEA 12/3/2020 14:51:59'!
PASSED!

!testRun: #RestInterfaceTest #test02cannotCreateCartForClientWithWrongPassword stamp: 'JEA 12/3/2020 14:51:59'!
PASSED!

!testRun: #RestInterfaceTest #test03canCreateCartForWellAuthenticatedClient stamp: 'JEA 12/3/2020 14:51:59'!
PASSED!

!testRun: #RestInterfaceTest #test04canCreateMoreThanOneCartWithDifferentIDs stamp: 'JEA 12/3/2020 14:51:59'!
PASSED!

!testRun: #RestInterfaceTest #test05cannotAddToCartWithInvalidID stamp: 'JEA 12/3/2020 14:51:59'!
PASSED!

!testRun: #RestInterfaceTest #test06canAddItemToCartWithValidID stamp: 'JEA 12/3/2020 14:51:59'!
PASSED!

!testRun: #RestInterfaceTest #test07cannotCheckOutCartWithInvalidID stamp: 'JEA 12/3/2020 14:51:59'!
PASSED!

!testRun: #RestInterfaceTest #test08canCheckOutNonEmptyValidCartWithValidCreditCard stamp: 'JEA 12/3/2020 14:51:59'!
PASSED!

!testRun: #RestInterfaceTest #test09cannotListCartWithInvalidID stamp: 'JEA 12/3/2020 14:51:59'!
PASSED!

!testRun: #RestInterfaceTest #test10cannotInteractWithCartAfterTimeoutSinceCreated stamp: 'JEA 12/3/2020 14:51:59'!
PASSED!

!testRun: #RestInterfaceTest #test11cartClockResetsAfterAdd stamp: 'JEA 12/3/2020 14:51:59'!
PASSED!

!testRun: #RestInterfaceTest #test12cartClockResetsAfterListing stamp: 'JEA 12/3/2020 14:51:59'!
PASSED!

!testRun: #RestInterfaceTest #test13cartClockResetsAfterCheckout stamp: 'JEA 12/3/2020 14:51:59'!
PASSED!

!testRun: #RestInterfaceTest #test14cannotListPurchasesOfInvalidClient stamp: 'JEA 12/3/2020 14:51:59'!
PASSED!

!testRun: #RestInterfaceTest #test15cannotListPurchasesOfClientWithInvalidPassword stamp: 'JEA 12/3/2020 14:51:59'!
PASSED!

!testRun: #RestInterfaceTest #test16canListPurchasesClientWhoNeverCheckedOut stamp: 'JEA 12/3/2020 14:51:59'!
FAILURE!

!testRun: #RestInterfaceTest #test17canListPurchasesClientWhoBoughtOneBook stamp: 'JEA 12/3/2020 14:51:59'!
FAILURE!

!testRun: #RestInterfaceTest #test18canListPurchasesClientWhoBoughtMoreThanOneBook stamp: 'JEA 12/3/2020 14:51:59'!
FAILURE!

!testRun: #RestInterfaceTest #test19canListPurchasesClientWhoCheckedOutMoreThanOneCart stamp: 'JEA 12/3/2020 14:51:59'!
FAILURE!

Object subclass: #RestInterface
	instanceVariableNames: 'authenticator merchantProcessor lastCartID clock catalog carts lastInteractionForCart transactionValues cartTimeout'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

!classDefinition: #RestInterface category: 'TusLibros' stamp: 'JEA 12/3/2020 14:52:15'!
Object subclass: #RestInterface
	instanceVariableNames: 'authenticator merchantProcessor lastCartID clock catalog carts lastInteractionForCart transactionValues cartTimeout'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

Object subclass: #RestInterface
	instanceVariableNames: 'authenticator merchantProcessor lastCartID clock catalog transactionValues carts lastInteractionForCart cartTimeout'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

!classDefinition: #RestInterface category: 'TusLibros' stamp: 'JEA 12/3/2020 14:52:27'!
Object subclass: #RestInterface
	instanceVariableNames: 'authenticator merchantProcessor lastCartID clock catalog transactionValues carts lastInteractionForCart cartTimeout'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

Object subclass: #RestInterface
	instanceVariableNames: 'authenticator merchantProcessor lastCartID clock catalog transactionValues cartSessions carts lastInteractionForCart cartTimeout'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

!classDefinition: #RestInterface category: 'TusLibros' stamp: 'JEA 12/3/2020 14:54:24'!
Object subclass: #RestInterface
	instanceVariableNames: 'authenticator merchantProcessor lastCartID clock catalog transactionValues cartSessions carts lastInteractionForCart cartTimeout'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

Object subclass: #RestInterface
	instanceVariableNames: 'authenticator merchantProcessor lastCartID clock catalog transactionValues cartTimeout cartSessions carts lastInteractionForCart'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

!classDefinition: #RestInterface category: 'TusLibros' stamp: 'JEA 12/3/2020 14:55:12'!
Object subclass: #RestInterface
	instanceVariableNames: 'authenticator merchantProcessor lastCartID clock catalog transactionValues cartTimeout cartSessions carts lastInteractionForCart'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!
!RestInterface methodsFor: 'initialization' stamp: 'JEA 12/3/2020 14:55:46' prior: 50887457!
initializeAuthenticatingWith: anAuthenticator debitingWith: aMerchantProcessor itemsFrom: aCatalog withClock: aClock withCartTimeout: aTimeMeasure 

	authenticator := anAuthenticator.
	lastCartID := 0.
	catalog := aCatalog.
	clock := aClock.
	merchantProcessor := aMerchantProcessor.
	cartTimeout := aTimeMeasure.
	transactionValues := Dictionary new.
	cartSessions := Dictionary new.

	carts := Dictionary new.
	lastInteractionForCart := Dictionary new.! !

!testRun: #CartTest #test01NewCartsAreCreatedEmpty stamp: 'JEA 12/3/2020 14:55:52'!
PASSED!

!testRun: #CartTest #test02CanNotAddItemsThatDoNotBelongToStore stamp: 'JEA 12/3/2020 14:55:52'!
PASSED!

!testRun: #CartTest #test03AfterAddingAnItemTheCartIsNotEmptyAnymore stamp: 'JEA 12/3/2020 14:55:52'!
PASSED!

!testRun: #CartTest #test04CanNotAddNonPositiveNumberOfItems stamp: 'JEA 12/3/2020 14:55:52'!
PASSED!

!testRun: #CartTest #test05CanNotAddMoreThanOneItemNotSellByTheStore stamp: 'JEA 12/3/2020 14:55:52'!
PASSED!

!testRun: #CartTest #test06CartRemembersAddedItems stamp: 'JEA 12/3/2020 14:55:52'!
PASSED!

!testRun: #CartTest #test07CartDoesNotHoldNotAddedItems stamp: 'JEA 12/3/2020 14:55:52'!
PASSED!

!testRun: #CartTest #test08CartRemembersTheNumberOfAddedItems stamp: 'JEA 12/3/2020 14:55:52'!
PASSED!

!testRun: #CashierTest #test01CanNotCheckoutAnEmptyCart stamp: 'JEA 12/3/2020 14:55:52'!
PASSED!

!testRun: #CashierTest #test02CalculatedTotalIsCorrect stamp: 'JEA 12/3/2020 14:55:52'!
PASSED!

!testRun: #CashierTest #test03CanNotCheckoutWithAnExpiredCreditCart stamp: 'JEA 12/3/2020 14:55:52'!
PASSED!

!testRun: #CashierTest #test04CheckoutRegistersASale stamp: 'JEA 12/3/2020 14:55:52'!
PASSED!

!testRun: #CashierTest #test05CashierChargesCreditCardUsingMerchantProcessor stamp: 'JEA 12/3/2020 14:55:52'!
PASSED!

!testRun: #CashierTest #test06CashierDoesNotSaleWhenTheCreditCardHasNoCredit stamp: 'JEA 12/3/2020 14:55:52'!
PASSED!

!testRun: #CreditCardTest #test01cantCreateCardWithNumberTooShort stamp: 'JEA 12/3/2020 14:55:52'!
PASSED!

!testRun: #CreditCardTest #test02cantCreateCardWithNumberTooLong stamp: 'JEA 12/3/2020 14:55:52'!
PASSED!

!testRun: #CreditCardTest #test03cantCreateCardWithNumberNonNumeric stamp: 'JEA 12/3/2020 14:55:52'!
PASSED!

!testRun: #RestInterfaceTest #test01cannotCreateCartForInvalidClientID stamp: 'JEA 12/3/2020 14:55:52'!
PASSED!

!testRun: #RestInterfaceTest #test02cannotCreateCartForClientWithWrongPassword stamp: 'JEA 12/3/2020 14:55:52'!
PASSED!

!testRun: #RestInterfaceTest #test03canCreateCartForWellAuthenticatedClient stamp: 'JEA 12/3/2020 14:55:52'!
PASSED!

!testRun: #RestInterfaceTest #test04canCreateMoreThanOneCartWithDifferentIDs stamp: 'JEA 12/3/2020 14:55:52'!
PASSED!

!testRun: #RestInterfaceTest #test05cannotAddToCartWithInvalidID stamp: 'JEA 12/3/2020 14:55:52'!
PASSED!

!testRun: #RestInterfaceTest #test06canAddItemToCartWithValidID stamp: 'JEA 12/3/2020 14:55:52'!
PASSED!

!testRun: #RestInterfaceTest #test07cannotCheckOutCartWithInvalidID stamp: 'JEA 12/3/2020 14:55:52'!
PASSED!

!testRun: #RestInterfaceTest #test08canCheckOutNonEmptyValidCartWithValidCreditCard stamp: 'JEA 12/3/2020 14:55:52'!
PASSED!

!testRun: #RestInterfaceTest #test09cannotListCartWithInvalidID stamp: 'JEA 12/3/2020 14:55:52'!
PASSED!

!testRun: #RestInterfaceTest #test10cannotInteractWithCartAfterTimeoutSinceCreated stamp: 'JEA 12/3/2020 14:55:52'!
PASSED!

!testRun: #RestInterfaceTest #test11cartClockResetsAfterAdd stamp: 'JEA 12/3/2020 14:55:52'!
PASSED!

!testRun: #RestInterfaceTest #test12cartClockResetsAfterListing stamp: 'JEA 12/3/2020 14:55:52'!
PASSED!

!testRun: #RestInterfaceTest #test13cartClockResetsAfterCheckout stamp: 'JEA 12/3/2020 14:55:52'!
PASSED!

!testRun: #RestInterfaceTest #test14cannotListPurchasesOfInvalidClient stamp: 'JEA 12/3/2020 14:55:52'!
PASSED!

!testRun: #RestInterfaceTest #test15cannotListPurchasesOfClientWithInvalidPassword stamp: 'JEA 12/3/2020 14:55:52'!
PASSED!

!testRun: #RestInterfaceTest #test16canListPurchasesClientWhoNeverCheckedOut stamp: 'JEA 12/3/2020 14:55:52'!
FAILURE!

!testRun: #RestInterfaceTest #test17canListPurchasesClientWhoBoughtOneBook stamp: 'JEA 12/3/2020 14:55:52'!
FAILURE!

!testRun: #RestInterfaceTest #test18canListPurchasesClientWhoBoughtMoreThanOneBook stamp: 'JEA 12/3/2020 14:55:52'!
FAILURE!

!testRun: #RestInterfaceTest #test19canListPurchasesClientWhoCheckedOutMoreThanOneCart stamp: 'JEA 12/3/2020 14:55:52'!
FAILURE!
!RestInterface methodsFor: 'api' stamp: 'JEA 12/3/2020 14:57:27' prior: 50886248!
add: aQuantity of: anISBN toCartWithID: aCartID

	self ensureCartIDCanBeInteractedWith: aCartID.

	self resetTimerOfCartWithID: aCartID.


	(self cartSessionForID: aCartID) 
		add: aQuantity of: anISBN.! !
!RestInterface methodsFor: 'api - private' stamp: 'JEA 12/3/2020 14:57:50'!
cartSessionForID: aCartID

	(cartSessions at: aCartID).! !
!RestInterface methodsFor: 'api - private' stamp: 'JEA 12/3/2020 14:57:57' prior: 50887831!
cartSessionForID: aCartID

	(cartSessions at: aCartID).! !

!methodRemoval: RestInterface #cartSessionForID: stamp: 'JEA 12/3/2020 14:58:05'!
cartSessionForID: aCartID

	(cartSessions at: aCartID).!
!RestInterface methodsFor: 'api' stamp: 'JEA 12/3/2020 14:58:11' prior: 50887822!
add: aQuantity of: anISBN toCartWithID: aCartID

	self ensureCartIDCanBeInteractedWith: aCartID.

	self resetTimerOfCartWithID: aCartID.

	(carts at: aCartID)
		add: aQuantity of: anISBN.! !

!testRun: #CartTest #test01NewCartsAreCreatedEmpty stamp: 'JEA 12/3/2020 14:58:17'!
PASSED!

!testRun: #CartTest #test02CanNotAddItemsThatDoNotBelongToStore stamp: 'JEA 12/3/2020 14:58:17'!
PASSED!

!testRun: #CartTest #test03AfterAddingAnItemTheCartIsNotEmptyAnymore stamp: 'JEA 12/3/2020 14:58:17'!
PASSED!

!testRun: #CartTest #test04CanNotAddNonPositiveNumberOfItems stamp: 'JEA 12/3/2020 14:58:17'!
PASSED!

!testRun: #CartTest #test05CanNotAddMoreThanOneItemNotSellByTheStore stamp: 'JEA 12/3/2020 14:58:17'!
PASSED!

!testRun: #CartTest #test06CartRemembersAddedItems stamp: 'JEA 12/3/2020 14:58:17'!
PASSED!

!testRun: #CartTest #test07CartDoesNotHoldNotAddedItems stamp: 'JEA 12/3/2020 14:58:17'!
PASSED!

!testRun: #CartTest #test08CartRemembersTheNumberOfAddedItems stamp: 'JEA 12/3/2020 14:58:17'!
PASSED!

!testRun: #CashierTest #test01CanNotCheckoutAnEmptyCart stamp: 'JEA 12/3/2020 14:58:17'!
PASSED!

!testRun: #CashierTest #test02CalculatedTotalIsCorrect stamp: 'JEA 12/3/2020 14:58:17'!
PASSED!

!testRun: #CashierTest #test03CanNotCheckoutWithAnExpiredCreditCart stamp: 'JEA 12/3/2020 14:58:17'!
PASSED!

!testRun: #CashierTest #test04CheckoutRegistersASale stamp: 'JEA 12/3/2020 14:58:17'!
PASSED!

!testRun: #CashierTest #test05CashierChargesCreditCardUsingMerchantProcessor stamp: 'JEA 12/3/2020 14:58:17'!
PASSED!

!testRun: #CashierTest #test06CashierDoesNotSaleWhenTheCreditCardHasNoCredit stamp: 'JEA 12/3/2020 14:58:17'!
PASSED!

!testRun: #CreditCardTest #test01cantCreateCardWithNumberTooShort stamp: 'JEA 12/3/2020 14:58:17'!
PASSED!

!testRun: #CreditCardTest #test02cantCreateCardWithNumberTooLong stamp: 'JEA 12/3/2020 14:58:17'!
PASSED!

!testRun: #CreditCardTest #test03cantCreateCardWithNumberNonNumeric stamp: 'JEA 12/3/2020 14:58:17'!
PASSED!

!testRun: #RestInterfaceTest #test01cannotCreateCartForInvalidClientID stamp: 'JEA 12/3/2020 14:58:17'!
PASSED!

!testRun: #RestInterfaceTest #test02cannotCreateCartForClientWithWrongPassword stamp: 'JEA 12/3/2020 14:58:17'!
PASSED!

!testRun: #RestInterfaceTest #test03canCreateCartForWellAuthenticatedClient stamp: 'JEA 12/3/2020 14:58:17'!
PASSED!

!testRun: #RestInterfaceTest #test04canCreateMoreThanOneCartWithDifferentIDs stamp: 'JEA 12/3/2020 14:58:17'!
PASSED!

!testRun: #RestInterfaceTest #test05cannotAddToCartWithInvalidID stamp: 'JEA 12/3/2020 14:58:17'!
PASSED!

!testRun: #RestInterfaceTest #test06canAddItemToCartWithValidID stamp: 'JEA 12/3/2020 14:58:17'!
PASSED!

!testRun: #RestInterfaceTest #test07cannotCheckOutCartWithInvalidID stamp: 'JEA 12/3/2020 14:58:17'!
PASSED!

!testRun: #RestInterfaceTest #test08canCheckOutNonEmptyValidCartWithValidCreditCard stamp: 'JEA 12/3/2020 14:58:17'!
PASSED!

!testRun: #RestInterfaceTest #test09cannotListCartWithInvalidID stamp: 'JEA 12/3/2020 14:58:17'!
PASSED!

!testRun: #RestInterfaceTest #test10cannotInteractWithCartAfterTimeoutSinceCreated stamp: 'JEA 12/3/2020 14:58:17'!
PASSED!

!testRun: #RestInterfaceTest #test11cartClockResetsAfterAdd stamp: 'JEA 12/3/2020 14:58:17'!
PASSED!

!testRun: #RestInterfaceTest #test12cartClockResetsAfterListing stamp: 'JEA 12/3/2020 14:58:17'!
PASSED!

!testRun: #RestInterfaceTest #test13cartClockResetsAfterCheckout stamp: 'JEA 12/3/2020 14:58:17'!
PASSED!

!testRun: #RestInterfaceTest #test14cannotListPurchasesOfInvalidClient stamp: 'JEA 12/3/2020 14:58:17'!
PASSED!

!testRun: #RestInterfaceTest #test15cannotListPurchasesOfClientWithInvalidPassword stamp: 'JEA 12/3/2020 14:58:17'!
PASSED!

!testRun: #RestInterfaceTest #test16canListPurchasesClientWhoNeverCheckedOut stamp: 'JEA 12/3/2020 14:58:17'!
FAILURE!

!testRun: #RestInterfaceTest #test17canListPurchasesClientWhoBoughtOneBook stamp: 'JEA 12/3/2020 14:58:17'!
FAILURE!

!testRun: #RestInterfaceTest #test18canListPurchasesClientWhoBoughtMoreThanOneBook stamp: 'JEA 12/3/2020 14:58:17'!
FAILURE!

!testRun: #RestInterfaceTest #test19canListPurchasesClientWhoCheckedOutMoreThanOneCart stamp: 'JEA 12/3/2020 14:58:17'!
FAILURE!

Object subclass: #CartSession
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

!classDefinition: #CartSession category: 'TusLibros' stamp: 'JEA 12/3/2020 14:58:44'!
Object subclass: #CartSession
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

Object subclass: #CartSession
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

!classDefinition: #CartSession category: 'TusLibros' stamp: 'JEA 12/3/2020 14:59:15'!
Object subclass: #CartSession
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

Object subclass: #CartSession
	instanceVariableNames: 'cart expirationDateTime ownerClientID'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

!classDefinition: #CartSession category: 'TusLibros' stamp: 'JEA 12/3/2020 14:59:54'!
Object subclass: #CartSession
	instanceVariableNames: 'cart expirationDateTime ownerClientID'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!
!RestInterface methodsFor: 'api' stamp: 'JEA 12/3/2020 15:01:19' prior: 50887417!
createCartFor: aClientID password: aPassword
	| cartID |
	
	self authenticate: aClientID with: aPassword.

	cartID := self nextCartID.
	
	cartSessions at: cartID put: (Cart acceptingItemsOf: catalog).
	
	self resetTimerOfCartWithID: cartID.	
					
	^cartID.! !
!RestInterface methodsFor: 'api' stamp: 'JEA 12/3/2020 15:01:23' prior: 50888013!
createCartFor: aClientID password: aPassword
	| cartID |
	
	self authenticate: aClientID with: aPassword.

	cartID := self nextCartID.
	cartSessions at: cartID put: (Cart acceptingItemsOf: catalog).
	
	self resetTimerOfCartWithID: cartID.	
					
	^cartID.! !
!RestInterface methodsFor: 'api' stamp: 'JEA 12/3/2020 15:02:41' prior: 50888024!
createCartFor: aClientID password: aPassword
	| cartID |
	
	self authenticate: aClientID with: aPassword.

	cartID := self nextCartID.
	carts at: cartID put: (Cart acceptingItemsOf: catalog).
	
	self resetTimerOfCartWithID: cartID.	
					
	^cartID.! !
!RestInterface methodsFor: 'initialization' stamp: 'JEA 12/3/2020 15:02:53' prior: 50887680!
initializeAuthenticatingWith: anAuthenticator debitingWith: aMerchantProcessor itemsFrom: aCatalog withClock: aClock withCartTimeout: aTimeMeasure 

	authenticator := anAuthenticator.
	lastCartID := 0.
	catalog := aCatalog.
	clock := aClock.
	merchantProcessor := aMerchantProcessor.
	cartTimeout := aTimeMeasure.
	transactionValues := Dictionary new.
	carts := Dictionary new.
	lastInteractionForCart := Dictionary new.! !

Object subclass: #RestInterface
	instanceVariableNames: 'authenticator merchantProcessor lastCartID clock catalog transactionValues cartTimeout carts lastInteractionForCart'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

!classDefinition: #RestInterface category: 'TusLibros' stamp: 'JEA 12/3/2020 15:02:58'!
Object subclass: #RestInterface
	instanceVariableNames: 'authenticator merchantProcessor lastCartID clock catalog transactionValues cartTimeout carts lastInteractionForCart'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

!testRun: #CartTest #test01NewCartsAreCreatedEmpty stamp: 'JEA 12/3/2020 15:03:00'!
PASSED!

!testRun: #CartTest #test02CanNotAddItemsThatDoNotBelongToStore stamp: 'JEA 12/3/2020 15:03:00'!
PASSED!

!testRun: #CartTest #test03AfterAddingAnItemTheCartIsNotEmptyAnymore stamp: 'JEA 12/3/2020 15:03:00'!
PASSED!

!testRun: #CartTest #test04CanNotAddNonPositiveNumberOfItems stamp: 'JEA 12/3/2020 15:03:00'!
PASSED!

!testRun: #CartTest #test05CanNotAddMoreThanOneItemNotSellByTheStore stamp: 'JEA 12/3/2020 15:03:00'!
PASSED!

!testRun: #CartTest #test06CartRemembersAddedItems stamp: 'JEA 12/3/2020 15:03:00'!
PASSED!

!testRun: #CartTest #test07CartDoesNotHoldNotAddedItems stamp: 'JEA 12/3/2020 15:03:00'!
PASSED!

!testRun: #CartTest #test08CartRemembersTheNumberOfAddedItems stamp: 'JEA 12/3/2020 15:03:00'!
PASSED!

!testRun: #CashierTest #test01CanNotCheckoutAnEmptyCart stamp: 'JEA 12/3/2020 15:03:00'!
PASSED!

!testRun: #CashierTest #test02CalculatedTotalIsCorrect stamp: 'JEA 12/3/2020 15:03:00'!
PASSED!

!testRun: #CashierTest #test03CanNotCheckoutWithAnExpiredCreditCart stamp: 'JEA 12/3/2020 15:03:00'!
PASSED!

!testRun: #CashierTest #test04CheckoutRegistersASale stamp: 'JEA 12/3/2020 15:03:00'!
PASSED!

!testRun: #CashierTest #test05CashierChargesCreditCardUsingMerchantProcessor stamp: 'JEA 12/3/2020 15:03:00'!
PASSED!

!testRun: #CashierTest #test06CashierDoesNotSaleWhenTheCreditCardHasNoCredit stamp: 'JEA 12/3/2020 15:03:00'!
PASSED!

!testRun: #CreditCardTest #test01cantCreateCardWithNumberTooShort stamp: 'JEA 12/3/2020 15:03:00'!
PASSED!

!testRun: #CreditCardTest #test02cantCreateCardWithNumberTooLong stamp: 'JEA 12/3/2020 15:03:00'!
PASSED!

!testRun: #CreditCardTest #test03cantCreateCardWithNumberNonNumeric stamp: 'JEA 12/3/2020 15:03:00'!
PASSED!

!testRun: #RestInterfaceTest #test01cannotCreateCartForInvalidClientID stamp: 'JEA 12/3/2020 15:03:00'!
PASSED!

!testRun: #RestInterfaceTest #test02cannotCreateCartForClientWithWrongPassword stamp: 'JEA 12/3/2020 15:03:00'!
PASSED!

!testRun: #RestInterfaceTest #test03canCreateCartForWellAuthenticatedClient stamp: 'JEA 12/3/2020 15:03:00'!
PASSED!

!testRun: #RestInterfaceTest #test04canCreateMoreThanOneCartWithDifferentIDs stamp: 'JEA 12/3/2020 15:03:00'!
PASSED!

!testRun: #RestInterfaceTest #test05cannotAddToCartWithInvalidID stamp: 'JEA 12/3/2020 15:03:00'!
PASSED!

!testRun: #RestInterfaceTest #test06canAddItemToCartWithValidID stamp: 'JEA 12/3/2020 15:03:00'!
PASSED!

!testRun: #RestInterfaceTest #test07cannotCheckOutCartWithInvalidID stamp: 'JEA 12/3/2020 15:03:00'!
PASSED!

!testRun: #RestInterfaceTest #test08canCheckOutNonEmptyValidCartWithValidCreditCard stamp: 'JEA 12/3/2020 15:03:00'!
PASSED!

!testRun: #RestInterfaceTest #test09cannotListCartWithInvalidID stamp: 'JEA 12/3/2020 15:03:00'!
PASSED!

!testRun: #RestInterfaceTest #test10cannotInteractWithCartAfterTimeoutSinceCreated stamp: 'JEA 12/3/2020 15:03:00'!
PASSED!

!testRun: #RestInterfaceTest #test11cartClockResetsAfterAdd stamp: 'JEA 12/3/2020 15:03:00'!
PASSED!

!testRun: #RestInterfaceTest #test12cartClockResetsAfterListing stamp: 'JEA 12/3/2020 15:03:00'!
PASSED!

!testRun: #RestInterfaceTest #test13cartClockResetsAfterCheckout stamp: 'JEA 12/3/2020 15:03:00'!
PASSED!

!testRun: #RestInterfaceTest #test14cannotListPurchasesOfInvalidClient stamp: 'JEA 12/3/2020 15:03:00'!
PASSED!

!testRun: #RestInterfaceTest #test15cannotListPurchasesOfClientWithInvalidPassword stamp: 'JEA 12/3/2020 15:03:00'!
PASSED!

!testRun: #RestInterfaceTest #test16canListPurchasesClientWhoNeverCheckedOut stamp: 'JEA 12/3/2020 15:03:00'!
FAILURE!

!testRun: #RestInterfaceTest #test17canListPurchasesClientWhoBoughtOneBook stamp: 'JEA 12/3/2020 15:03:00'!
FAILURE!

!testRun: #RestInterfaceTest #test18canListPurchasesClientWhoBoughtMoreThanOneBook stamp: 'JEA 12/3/2020 15:03:00'!
FAILURE!

!testRun: #RestInterfaceTest #test19canListPurchasesClientWhoCheckedOutMoreThanOneCart stamp: 'JEA 12/3/2020 15:03:00'!
FAILURE!

!classDefinition: #RestInterface category: 'TusLibros' stamp: 'JEA 12/3/2020 15:03:09'!
Object subclass: #RestInterface
	instanceVariableNames: 'authenticator merchantProcessor lastCartID clock catalog transactionValues cartTimeout cartSessions lastInteractionForCart'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!
!RestInterface methodsFor: 'as yet unclassified' stamp: 'JEA 12/3/2020 15:03:09' prior: 50887845!
add: aQuantity of: anISBN toCartWithID: aCartID

	self ensureCartIDCanBeInteractedWith: aCartID.

	self resetTimerOfCartWithID: aCartID.

	(cartSessions at: aCartID)
		add: aQuantity of: anISBN.! !
!RestInterface methodsFor: 'as yet unclassified' stamp: 'JEA 12/3/2020 15:03:09' prior: 50888035!
createCartFor: aClientID password: aPassword
	| cartID |
	
	self authenticate: aClientID with: aPassword.

	cartID := self nextCartID.
	cartSessions at: cartID put: (Cart acceptingItemsOf: catalog).
	
	self resetTimerOfCartWithID: cartID.	
					
	^cartID.! !
!RestInterface methodsFor: 'as yet unclassified' stamp: 'JEA 12/3/2020 15:03:09' prior: 50885401!
listItemsInCartWithID: aCartID
	
	self ensureCartIDCanBeInteractedWith: aCartID.

	self resetTimerOfCartWithID: aCartID.	

	^(cartSessions at: aCartID) listItems.! !
!RestInterface methodsFor: 'as yet unclassified' stamp: 'JEA 12/3/2020 15:03:09' prior: 50885455!
ensureCartIDIsValid: aCartID
	
	cartSessions at: aCartID 
		ifAbsent: [ self error: self class invalidCartIDMessage. ].! !
!RestInterface methodsFor: 'as yet unclassified' stamp: 'JEA 12/3/2020 15:03:09' prior: 50888046!
initializeAuthenticatingWith: anAuthenticator debitingWith: aMerchantProcessor itemsFrom: aCatalog withClock: aClock withCartTimeout: aTimeMeasure 

	authenticator := anAuthenticator.
	lastCartID := 0.
	catalog := aCatalog.
	clock := aClock.
	merchantProcessor := aMerchantProcessor.
	cartTimeout := aTimeMeasure.
	transactionValues := Dictionary new.
	cartSessions := Dictionary new.
	lastInteractionForCart := Dictionary new.! !
!RestInterface methodsFor: 'as yet unclassified' stamp: 'JEA 12/3/2020 15:03:09' prior: 50887428!
checkOutCartWithID: aCartID withCardNumber: aCardNumber expiring: aGregorianMonthOfYear owner: aName
	| creditCard transactionID |

	self ensureCartIDCanBeInteractedWith: aCartID.
	
	self resetTimerOfCartWithID: aCartID.
	
	creditCard := CreditCard 
		numbered: aCardNumber 
		ownedBy: aName 
		expiringOn: aGregorianMonthOfYear.
	
	transactionID := self checkOut: (cartSessions at: aCartID) withCard: creditCard.
	
	^transactionID.! !
!RestInterface methodsFor: 'as yet unclassified' stamp: 'JEA 12/3/2020 15:03:09' prior: 50887054!
totalPriceOfCartID: aCartID

	self ensureCartIDIsValid: aCartID.
	
	^(cartSessions at: aCartID) total.! !

!testRun: #CartTest #test01NewCartsAreCreatedEmpty stamp: 'JEA 12/3/2020 15:03:14'!
PASSED!

!testRun: #CartTest #test02CanNotAddItemsThatDoNotBelongToStore stamp: 'JEA 12/3/2020 15:03:14'!
PASSED!

!testRun: #CartTest #test03AfterAddingAnItemTheCartIsNotEmptyAnymore stamp: 'JEA 12/3/2020 15:03:14'!
PASSED!

!testRun: #CartTest #test04CanNotAddNonPositiveNumberOfItems stamp: 'JEA 12/3/2020 15:03:14'!
PASSED!

!testRun: #CartTest #test05CanNotAddMoreThanOneItemNotSellByTheStore stamp: 'JEA 12/3/2020 15:03:14'!
PASSED!

!testRun: #CartTest #test06CartRemembersAddedItems stamp: 'JEA 12/3/2020 15:03:14'!
PASSED!

!testRun: #CartTest #test07CartDoesNotHoldNotAddedItems stamp: 'JEA 12/3/2020 15:03:14'!
PASSED!

!testRun: #CartTest #test08CartRemembersTheNumberOfAddedItems stamp: 'JEA 12/3/2020 15:03:14'!
PASSED!

!testRun: #CashierTest #test01CanNotCheckoutAnEmptyCart stamp: 'JEA 12/3/2020 15:03:14'!
PASSED!

!testRun: #CashierTest #test02CalculatedTotalIsCorrect stamp: 'JEA 12/3/2020 15:03:14'!
PASSED!

!testRun: #CashierTest #test03CanNotCheckoutWithAnExpiredCreditCart stamp: 'JEA 12/3/2020 15:03:14'!
PASSED!

!testRun: #CashierTest #test04CheckoutRegistersASale stamp: 'JEA 12/3/2020 15:03:14'!
PASSED!

!testRun: #CashierTest #test05CashierChargesCreditCardUsingMerchantProcessor stamp: 'JEA 12/3/2020 15:03:14'!
PASSED!

!testRun: #CashierTest #test06CashierDoesNotSaleWhenTheCreditCardHasNoCredit stamp: 'JEA 12/3/2020 15:03:14'!
PASSED!

!testRun: #CreditCardTest #test01cantCreateCardWithNumberTooShort stamp: 'JEA 12/3/2020 15:03:14'!
PASSED!

!testRun: #CreditCardTest #test02cantCreateCardWithNumberTooLong stamp: 'JEA 12/3/2020 15:03:14'!
PASSED!

!testRun: #CreditCardTest #test03cantCreateCardWithNumberNonNumeric stamp: 'JEA 12/3/2020 15:03:14'!
PASSED!

!testRun: #RestInterfaceTest #test01cannotCreateCartForInvalidClientID stamp: 'JEA 12/3/2020 15:03:14'!
PASSED!

!testRun: #RestInterfaceTest #test02cannotCreateCartForClientWithWrongPassword stamp: 'JEA 12/3/2020 15:03:14'!
PASSED!

!testRun: #RestInterfaceTest #test03canCreateCartForWellAuthenticatedClient stamp: 'JEA 12/3/2020 15:03:14'!
PASSED!

!testRun: #RestInterfaceTest #test04canCreateMoreThanOneCartWithDifferentIDs stamp: 'JEA 12/3/2020 15:03:14'!
PASSED!

!testRun: #RestInterfaceTest #test05cannotAddToCartWithInvalidID stamp: 'JEA 12/3/2020 15:03:14'!
PASSED!

!testRun: #RestInterfaceTest #test06canAddItemToCartWithValidID stamp: 'JEA 12/3/2020 15:03:14'!
PASSED!

!testRun: #RestInterfaceTest #test07cannotCheckOutCartWithInvalidID stamp: 'JEA 12/3/2020 15:03:14'!
PASSED!

!testRun: #RestInterfaceTest #test08canCheckOutNonEmptyValidCartWithValidCreditCard stamp: 'JEA 12/3/2020 15:03:14'!
PASSED!

!testRun: #RestInterfaceTest #test09cannotListCartWithInvalidID stamp: 'JEA 12/3/2020 15:03:14'!
PASSED!

!testRun: #RestInterfaceTest #test10cannotInteractWithCartAfterTimeoutSinceCreated stamp: 'JEA 12/3/2020 15:03:14'!
PASSED!

!testRun: #RestInterfaceTest #test11cartClockResetsAfterAdd stamp: 'JEA 12/3/2020 15:03:14'!
PASSED!

!testRun: #RestInterfaceTest #test12cartClockResetsAfterListing stamp: 'JEA 12/3/2020 15:03:14'!
PASSED!

!testRun: #RestInterfaceTest #test13cartClockResetsAfterCheckout stamp: 'JEA 12/3/2020 15:03:14'!
PASSED!

!testRun: #RestInterfaceTest #test14cannotListPurchasesOfInvalidClient stamp: 'JEA 12/3/2020 15:03:14'!
PASSED!

!testRun: #RestInterfaceTest #test15cannotListPurchasesOfClientWithInvalidPassword stamp: 'JEA 12/3/2020 15:03:14'!
PASSED!

!testRun: #RestInterfaceTest #test16canListPurchasesClientWhoNeverCheckedOut stamp: 'JEA 12/3/2020 15:03:14'!
FAILURE!

!testRun: #RestInterfaceTest #test17canListPurchasesClientWhoBoughtOneBook stamp: 'JEA 12/3/2020 15:03:14'!
FAILURE!

!testRun: #RestInterfaceTest #test18canListPurchasesClientWhoBoughtMoreThanOneBook stamp: 'JEA 12/3/2020 15:03:14'!
FAILURE!

!testRun: #RestInterfaceTest #test19canListPurchasesClientWhoCheckedOutMoreThanOneCart stamp: 'JEA 12/3/2020 15:03:14'!
FAILURE!
!RestInterface methodsFor: 'api' stamp: 'JEA 12/3/2020 15:04:37' prior: 50888226!
createCartFor: aClientID password: aPassword
	| cartID |
	
	self authenticate: aClientID with: aPassword.

	cartID := self nextCartID.
	cartSessions at: cartID put: (self newCartSessionFor: aClientID).
	
	self resetTimerOfCartWithID: cartID.	
					
	^cartID.! !
!RestInterface methodsFor: 'api' stamp: 'JEA 12/3/2020 15:04:49' prior: 50888419!
createCartFor: aClientID password: aPassword
	| cartID |
	
	self authenticate: aClientID with: aPassword.

	cartID := self nextCartID.
	cartSessions at: cartID put: (self newCartSessionFor: aClientID).
	
	self resetTimerOfCartWithID: cartID.	
					
	^cartID.! !
!RestInterface methodsFor: 'api - private' stamp: 'JEA 12/3/2020 15:05:12'!
newCartSessionFor: aClientID

	^CartSession newFor: aClientID acceptingItemsOf: catalog.! !
!CartSession class methodsFor: 'instance creation' stamp: 'JEA 12/3/2020 15:05:57'!
newFor: aClientID acceptingItemsOf: aCatalog

	^self new initializeFor: aClientID acceptingItemsOf: aCatalog.! !
!CartSession methodsFor: 'initialization' stamp: 'JEA 12/3/2020 15:06:39'!
initializeFor: aClientID acceptingItemsOf: aCatalog

	cart := Cart acceptingItemsOf: aCatalog.
	ownerClientID := aClientID.! !
!CartSession methodsFor: 'initialization' stamp: 'JEA 12/3/2020 15:07:14' prior: 50888453!
initializeFor: aClientID acceptingItemsOf: aCatalog

	cart := Cart acceptingItemsOf: aCatalog.
	ownerClientID := aClientID.
	expirationDateTime := GregorianDateTime now.! !
!CartSession methodsFor: 'initialization' stamp: 'JEA 12/3/2020 15:07:17' prior: 50888460!
initializeFor: aClientID acceptingItemsOf: aCatalog

	cart := Cart acceptingItemsOf: aCatalog.
	ownerClientID := aClientID.
	expirationDateTime := ''.! !

Object subclass: #CartSession
	instanceVariableNames: 'cart expirationDateTime ownerClientID clock'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

!classDefinition: #CartSession category: 'TusLibros' stamp: 'JEA 12/3/2020 15:07:29'!
Object subclass: #CartSession
	instanceVariableNames: 'cart expirationDateTime ownerClientID clock'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

Object subclass: #CartSession
	instanceVariableNames: 'cart expirationDateTime ownerClientID'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

!classDefinition: #CartSession category: 'TusLibros' stamp: 'JEA 12/3/2020 15:08:24'!
Object subclass: #CartSession
	instanceVariableNames: 'cart expirationDateTime ownerClientID'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!
!CartSession class methodsFor: 'instance creation' stamp: 'JEA 12/3/2020 15:09:11'!
newFor: aClientID acceptingItemsOf: aCatalog expiring: aGregorianDateTime 

	^self new initializeFor: aClientID acceptingItemsOf: aCatalog.! !
!RestInterface methodsFor: 'as yet unclassified' stamp: 'JEA 12/3/2020 15:09:11' prior: 50888441!
newCartSessionFor: aClientID

	^CartSession newFor: aClientID acceptingItemsOf: catalog expiring: ''.! !

!methodRemoval: CartSession class #newFor:acceptingItemsOf: stamp: 'JEA 12/3/2020 15:09:11'!
newFor: aClientID acceptingItemsOf: aCatalog

	^self new initializeFor: aClientID acceptingItemsOf: aCatalog.!
!CartSession class methodsFor: 'instance creation' stamp: 'JEA 12/3/2020 15:09:24' prior: 50888503!
newFor: aClientID acceptingItemsOf: aCatalog expiring: aGregorianDateTime 

	^self new initializeFor: aClientID acceptingItemsOf: aCatalog expiring: aGregorianDateTime.! !
!CartSession methodsFor: 'initialization' stamp: 'JEA 12/3/2020 15:09:32'!
initializeFor: aClientID acceptingItemsOf: aCatalog expiring: aGregorianDateTime

	cart := Cart acceptingItemsOf: aCatalog.
	ownerClientID := aClientID.
	expirationDateTime := ''.! !

!methodRemoval: CartSession #initializeFor:acceptingItemsOf: stamp: 'JEA 12/3/2020 15:09:33'!
initializeFor: aClientID acceptingItemsOf: aCatalog

	cart := Cart acceptingItemsOf: aCatalog.
	ownerClientID := aClientID.
	expirationDateTime := ''.!
!CartSession methodsFor: 'initialization' stamp: 'JEA 12/3/2020 15:09:38' prior: 50888532!
initializeFor: aClientID acceptingItemsOf: aCatalog expiring: aGregorianDateTime

	cart := Cart acceptingItemsOf: aCatalog.
	ownerClientID := aClientID.
	expirationDateTime := aGregorianDateTime.! !
!RestInterface methodsFor: 'api - private' stamp: 'JEA 12/3/2020 15:10:44' prior: 50888511!
newCartSessionFor: aClientID

	^CartSession newFor: aClientID acceptingItemsOf: catalog expiring: (clock new next: cartTimeout).! !
!RestInterface methodsFor: 'api - private' stamp: 'JEA 12/3/2020 15:10:48' prior: 50888559!
newCartSessionFor: aClientID

	^CartSession newFor: aClientID acceptingItemsOf: catalog expiring: (clock now next: cartTimeout).! !

!testRun: #CartTest #test01NewCartsAreCreatedEmpty stamp: 'JEA 12/3/2020 15:10:55'!
PASSED!

!testRun: #CartTest #test02CanNotAddItemsThatDoNotBelongToStore stamp: 'JEA 12/3/2020 15:10:55'!
PASSED!

!testRun: #CartTest #test03AfterAddingAnItemTheCartIsNotEmptyAnymore stamp: 'JEA 12/3/2020 15:10:55'!
PASSED!

!testRun: #CartTest #test04CanNotAddNonPositiveNumberOfItems stamp: 'JEA 12/3/2020 15:10:55'!
PASSED!

!testRun: #CartTest #test05CanNotAddMoreThanOneItemNotSellByTheStore stamp: 'JEA 12/3/2020 15:10:55'!
PASSED!

!testRun: #CartTest #test06CartRemembersAddedItems stamp: 'JEA 12/3/2020 15:10:55'!
PASSED!

!testRun: #CartTest #test07CartDoesNotHoldNotAddedItems stamp: 'JEA 12/3/2020 15:10:55'!
PASSED!

!testRun: #CartTest #test08CartRemembersTheNumberOfAddedItems stamp: 'JEA 12/3/2020 15:10:55'!
PASSED!

!testRun: #CashierTest #test01CanNotCheckoutAnEmptyCart stamp: 'JEA 12/3/2020 15:10:55'!
PASSED!

!testRun: #CashierTest #test02CalculatedTotalIsCorrect stamp: 'JEA 12/3/2020 15:10:55'!
PASSED!

!testRun: #CashierTest #test03CanNotCheckoutWithAnExpiredCreditCart stamp: 'JEA 12/3/2020 15:10:55'!
PASSED!

!testRun: #CashierTest #test04CheckoutRegistersASale stamp: 'JEA 12/3/2020 15:10:55'!
PASSED!

!testRun: #CashierTest #test05CashierChargesCreditCardUsingMerchantProcessor stamp: 'JEA 12/3/2020 15:10:55'!
PASSED!

!testRun: #CashierTest #test06CashierDoesNotSaleWhenTheCreditCardHasNoCredit stamp: 'JEA 12/3/2020 15:10:55'!
PASSED!

!testRun: #CreditCardTest #test01cantCreateCardWithNumberTooShort stamp: 'JEA 12/3/2020 15:10:55'!
PASSED!

!testRun: #CreditCardTest #test02cantCreateCardWithNumberTooLong stamp: 'JEA 12/3/2020 15:10:55'!
PASSED!

!testRun: #CreditCardTest #test03cantCreateCardWithNumberNonNumeric stamp: 'JEA 12/3/2020 15:10:55'!
PASSED!

!testRun: #RestInterfaceTest #test01cannotCreateCartForInvalidClientID stamp: 'JEA 12/3/2020 15:10:55'!
PASSED!

!testRun: #RestInterfaceTest #test02cannotCreateCartForClientWithWrongPassword stamp: 'JEA 12/3/2020 15:10:55'!
PASSED!

!testRun: #RestInterfaceTest #test03canCreateCartForWellAuthenticatedClient stamp: 'JEA 12/3/2020 15:10:55'!
ERROR!

!testRun: #RestInterfaceTest #test04canCreateMoreThanOneCartWithDifferentIDs stamp: 'JEA 12/3/2020 15:10:55'!
PASSED!

!testRun: #RestInterfaceTest #test05cannotAddToCartWithInvalidID stamp: 'JEA 12/3/2020 15:10:55'!
PASSED!

!testRun: #RestInterfaceTest #test06canAddItemToCartWithValidID stamp: 'JEA 12/3/2020 15:10:55'!
ERROR!

!testRun: #RestInterfaceTest #test07cannotCheckOutCartWithInvalidID stamp: 'JEA 12/3/2020 15:10:55'!
PASSED!

!testRun: #RestInterfaceTest #test08canCheckOutNonEmptyValidCartWithValidCreditCard stamp: 'JEA 12/3/2020 15:10:55'!
ERROR!

!testRun: #RestInterfaceTest #test09cannotListCartWithInvalidID stamp: 'JEA 12/3/2020 15:10:55'!
PASSED!

!testRun: #RestInterfaceTest #test10cannotInteractWithCartAfterTimeoutSinceCreated stamp: 'JEA 12/3/2020 15:10:55'!
PASSED!

!testRun: #RestInterfaceTest #test11cartClockResetsAfterAdd stamp: 'JEA 12/3/2020 15:10:55'!
ERROR!

!testRun: #RestInterfaceTest #test12cartClockResetsAfterListing stamp: 'JEA 12/3/2020 15:10:55'!
ERROR!

!testRun: #RestInterfaceTest #test13cartClockResetsAfterCheckout stamp: 'JEA 12/3/2020 15:10:55'!
ERROR!

!testRun: #RestInterfaceTest #test14cannotListPurchasesOfInvalidClient stamp: 'JEA 12/3/2020 15:10:55'!
PASSED!

!testRun: #RestInterfaceTest #test15cannotListPurchasesOfClientWithInvalidPassword stamp: 'JEA 12/3/2020 15:10:55'!
PASSED!

!testRun: #RestInterfaceTest #test16canListPurchasesClientWhoNeverCheckedOut stamp: 'JEA 12/3/2020 15:10:55'!
FAILURE!

!testRun: #RestInterfaceTest #test17canListPurchasesClientWhoBoughtOneBook stamp: 'JEA 12/3/2020 15:10:55'!
ERROR!

!testRun: #RestInterfaceTest #test18canListPurchasesClientWhoBoughtMoreThanOneBook stamp: 'JEA 12/3/2020 15:10:55'!
ERROR!

!testRun: #RestInterfaceTest #test19canListPurchasesClientWhoCheckedOutMoreThanOneCart stamp: 'JEA 12/3/2020 15:10:55'!
ERROR!
!RestInterface methodsFor: 'api - private' stamp: 'JEA 12/3/2020 15:11:17' prior: 50888566!
newCartSessionFor: aClientID

	^CartSession newFor: aClientID 
		acceptingItemsOf: catalog 
		expiring: (clock now next: cartTimeout).! !
!RestInterface methodsFor: 'api' stamp: 'JEA 12/3/2020 15:12:05' prior: 50888271!
checkOutCartWithID: aCartID withCardNumber: aCardNumber expiring: aGregorianMonthOfYear owner: aName
	| creditCard transactionID |

	self ensureCartIDCanBeInteractedWith: aCartID.
	
	self resetTimerOfCartWithID: aCartID.
	
	creditCard := CreditCard 
		numbered: aCardNumber 
		ownedBy: aName 
		expiringOn: aGregorianMonthOfYear.
	
	transactionID := self checkOut: (self cartForID: aCartID) withCard: creditCard.
	
	^transactionID.! !
!RestInterface methodsFor: 'cart information' stamp: 'JEA 12/3/2020 15:12:37'!
cartForID: aCartID

	(cartSessions at: aCartID) cart.! !
!CartSession methodsFor: 'accessing' stamp: 'JEA 12/3/2020 15:12:55'!
cart

	^cart.! !

!testRun: #RestInterfaceTest #test01cannotCreateCartForInvalidClientID stamp: 'JEA 12/3/2020 15:13:00'!
PASSED!

!testRun: #RestInterfaceTest #test02cannotCreateCartForClientWithWrongPassword stamp: 'JEA 12/3/2020 15:13:00'!
PASSED!

!testRun: #RestInterfaceTest #test03canCreateCartForWellAuthenticatedClient stamp: 'JEA 12/3/2020 15:13:00'!
ERROR!

!testRun: #RestInterfaceTest #test04canCreateMoreThanOneCartWithDifferentIDs stamp: 'JEA 12/3/2020 15:13:00'!
PASSED!

!testRun: #RestInterfaceTest #test05cannotAddToCartWithInvalidID stamp: 'JEA 12/3/2020 15:13:00'!
PASSED!

!testRun: #RestInterfaceTest #test06canAddItemToCartWithValidID stamp: 'JEA 12/3/2020 15:13:00'!
ERROR!

!testRun: #RestInterfaceTest #test07cannotCheckOutCartWithInvalidID stamp: 'JEA 12/3/2020 15:13:00'!
PASSED!

!testRun: #RestInterfaceTest #test08canCheckOutNonEmptyValidCartWithValidCreditCard stamp: 'JEA 12/3/2020 15:13:00'!
ERROR!

!testRun: #RestInterfaceTest #test09cannotListCartWithInvalidID stamp: 'JEA 12/3/2020 15:13:00'!
PASSED!

!testRun: #RestInterfaceTest #test10cannotInteractWithCartAfterTimeoutSinceCreated stamp: 'JEA 12/3/2020 15:13:00'!
PASSED!

!testRun: #RestInterfaceTest #test11cartClockResetsAfterAdd stamp: 'JEA 12/3/2020 15:13:00'!
ERROR!

!testRun: #RestInterfaceTest #test12cartClockResetsAfterListing stamp: 'JEA 12/3/2020 15:13:00'!
ERROR!

!testRun: #RestInterfaceTest #test13cartClockResetsAfterCheckout stamp: 'JEA 12/3/2020 15:13:00'!
ERROR!

!testRun: #RestInterfaceTest #test14cannotListPurchasesOfInvalidClient stamp: 'JEA 12/3/2020 15:13:00'!
PASSED!

!testRun: #RestInterfaceTest #test15cannotListPurchasesOfClientWithInvalidPassword stamp: 'JEA 12/3/2020 15:13:00'!
PASSED!

!testRun: #RestInterfaceTest #test16canListPurchasesClientWhoNeverCheckedOut stamp: 'JEA 12/3/2020 15:13:00'!
FAILURE!

!testRun: #RestInterfaceTest #test17canListPurchasesClientWhoBoughtOneBook stamp: 'JEA 12/3/2020 15:13:00'!
ERROR!

!testRun: #RestInterfaceTest #test18canListPurchasesClientWhoBoughtMoreThanOneBook stamp: 'JEA 12/3/2020 15:13:00'!
ERROR!

!testRun: #RestInterfaceTest #test19canListPurchasesClientWhoCheckedOutMoreThanOneCart stamp: 'JEA 12/3/2020 15:13:00'!
ERROR!
!RestInterface methodsFor: 'api' stamp: 'JEA 12/3/2020 15:13:20' prior: 50888216!
add: aQuantity of: anISBN toCartWithID: aCartID

	self ensureCartIDCanBeInteractedWith: aCartID.

	self resetTimerOfCartWithID: aCartID.

	(self cartForID: aCartID)
		add: aQuantity of: anISBN.! !
!RestInterface methodsFor: 'api' stamp: 'JEA 12/3/2020 15:13:39' prior: 50888238!
listItemsInCartWithID: aCartID
	
	self ensureCartIDCanBeInteractedWith: aCartID.

	self resetTimerOfCartWithID: aCartID.	

	^(self cartForID: aCartID) listItems.! !

!testRun: #RestInterfaceTest #test01cannotCreateCartForInvalidClientID stamp: 'JEA 12/3/2020 15:13:42'!
PASSED!

!testRun: #RestInterfaceTest #test02cannotCreateCartForClientWithWrongPassword stamp: 'JEA 12/3/2020 15:13:42'!
PASSED!

!testRun: #RestInterfaceTest #test03canCreateCartForWellAuthenticatedClient stamp: 'JEA 12/3/2020 15:13:42'!
ERROR!

!testRun: #RestInterfaceTest #test04canCreateMoreThanOneCartWithDifferentIDs stamp: 'JEA 12/3/2020 15:13:42'!
PASSED!

!testRun: #RestInterfaceTest #test05cannotAddToCartWithInvalidID stamp: 'JEA 12/3/2020 15:13:42'!
PASSED!

!testRun: #RestInterfaceTest #test06canAddItemToCartWithValidID stamp: 'JEA 12/3/2020 15:13:42'!
ERROR!

!testRun: #RestInterfaceTest #test07cannotCheckOutCartWithInvalidID stamp: 'JEA 12/3/2020 15:13:42'!
PASSED!

!testRun: #RestInterfaceTest #test08canCheckOutNonEmptyValidCartWithValidCreditCard stamp: 'JEA 12/3/2020 15:13:42'!
ERROR!

!testRun: #RestInterfaceTest #test09cannotListCartWithInvalidID stamp: 'JEA 12/3/2020 15:13:42'!
PASSED!

!testRun: #RestInterfaceTest #test10cannotInteractWithCartAfterTimeoutSinceCreated stamp: 'JEA 12/3/2020 15:13:42'!
PASSED!

!testRun: #RestInterfaceTest #test11cartClockResetsAfterAdd stamp: 'JEA 12/3/2020 15:13:42'!
ERROR!

!testRun: #RestInterfaceTest #test12cartClockResetsAfterListing stamp: 'JEA 12/3/2020 15:13:42'!
ERROR!

!testRun: #RestInterfaceTest #test13cartClockResetsAfterCheckout stamp: 'JEA 12/3/2020 15:13:42'!
ERROR!

!testRun: #RestInterfaceTest #test14cannotListPurchasesOfInvalidClient stamp: 'JEA 12/3/2020 15:13:42'!
PASSED!

!testRun: #RestInterfaceTest #test15cannotListPurchasesOfClientWithInvalidPassword stamp: 'JEA 12/3/2020 15:13:42'!
PASSED!

!testRun: #RestInterfaceTest #test16canListPurchasesClientWhoNeverCheckedOut stamp: 'JEA 12/3/2020 15:13:42'!
FAILURE!

!testRun: #RestInterfaceTest #test17canListPurchasesClientWhoBoughtOneBook stamp: 'JEA 12/3/2020 15:13:42'!
ERROR!

!testRun: #RestInterfaceTest #test18canListPurchasesClientWhoBoughtMoreThanOneBook stamp: 'JEA 12/3/2020 15:13:42'!
ERROR!

!testRun: #RestInterfaceTest #test19canListPurchasesClientWhoCheckedOutMoreThanOneCart stamp: 'JEA 12/3/2020 15:13:42'!
ERROR!

!testRun: #RestInterfaceTest #test03canCreateCartForWellAuthenticatedClient stamp: 'JEA 12/3/2020 15:13:45'!
ERROR!

!testRun: #CartTest #test01NewCartsAreCreatedEmpty stamp: 'JEA 12/3/2020 15:13:56'!
PASSED!

!testRun: #CartTest #test02CanNotAddItemsThatDoNotBelongToStore stamp: 'JEA 12/3/2020 15:13:56'!
PASSED!

!testRun: #CartTest #test03AfterAddingAnItemTheCartIsNotEmptyAnymore stamp: 'JEA 12/3/2020 15:13:56'!
PASSED!

!testRun: #CartTest #test04CanNotAddNonPositiveNumberOfItems stamp: 'JEA 12/3/2020 15:13:56'!
PASSED!

!testRun: #CartTest #test05CanNotAddMoreThanOneItemNotSellByTheStore stamp: 'JEA 12/3/2020 15:13:56'!
PASSED!

!testRun: #CartTest #test06CartRemembersAddedItems stamp: 'JEA 12/3/2020 15:13:56'!
PASSED!

!testRun: #CartTest #test07CartDoesNotHoldNotAddedItems stamp: 'JEA 12/3/2020 15:13:56'!
PASSED!

!testRun: #CartTest #test08CartRemembersTheNumberOfAddedItems stamp: 'JEA 12/3/2020 15:13:56'!
PASSED!

!testRun: #CashierTest #test01CanNotCheckoutAnEmptyCart stamp: 'JEA 12/3/2020 15:13:56'!
PASSED!

!testRun: #CashierTest #test02CalculatedTotalIsCorrect stamp: 'JEA 12/3/2020 15:13:56'!
PASSED!

!testRun: #CashierTest #test03CanNotCheckoutWithAnExpiredCreditCart stamp: 'JEA 12/3/2020 15:13:56'!
PASSED!

!testRun: #CashierTest #test04CheckoutRegistersASale stamp: 'JEA 12/3/2020 15:13:56'!
PASSED!

!testRun: #CashierTest #test05CashierChargesCreditCardUsingMerchantProcessor stamp: 'JEA 12/3/2020 15:13:56'!
PASSED!

!testRun: #CashierTest #test06CashierDoesNotSaleWhenTheCreditCardHasNoCredit stamp: 'JEA 12/3/2020 15:13:56'!
PASSED!

!testRun: #CreditCardTest #test01cantCreateCardWithNumberTooShort stamp: 'JEA 12/3/2020 15:13:56'!
PASSED!

!testRun: #CreditCardTest #test02cantCreateCardWithNumberTooLong stamp: 'JEA 12/3/2020 15:13:56'!
PASSED!

!testRun: #CreditCardTest #test03cantCreateCardWithNumberNonNumeric stamp: 'JEA 12/3/2020 15:13:56'!
PASSED!

!testRun: #RestInterfaceTest #test01cannotCreateCartForInvalidClientID stamp: 'JEA 12/3/2020 15:13:56'!
PASSED!

!testRun: #RestInterfaceTest #test02cannotCreateCartForClientWithWrongPassword stamp: 'JEA 12/3/2020 15:13:56'!
PASSED!

!testRun: #RestInterfaceTest #test03canCreateCartForWellAuthenticatedClient stamp: 'JEA 12/3/2020 15:13:56'!
ERROR!

!testRun: #RestInterfaceTest #test04canCreateMoreThanOneCartWithDifferentIDs stamp: 'JEA 12/3/2020 15:13:56'!
PASSED!

!testRun: #RestInterfaceTest #test05cannotAddToCartWithInvalidID stamp: 'JEA 12/3/2020 15:13:56'!
PASSED!

!testRun: #RestInterfaceTest #test06canAddItemToCartWithValidID stamp: 'JEA 12/3/2020 15:13:56'!
ERROR!

!testRun: #RestInterfaceTest #test07cannotCheckOutCartWithInvalidID stamp: 'JEA 12/3/2020 15:13:56'!
PASSED!

!testRun: #RestInterfaceTest #test08canCheckOutNonEmptyValidCartWithValidCreditCard stamp: 'JEA 12/3/2020 15:13:56'!
ERROR!

!testRun: #RestInterfaceTest #test09cannotListCartWithInvalidID stamp: 'JEA 12/3/2020 15:13:56'!
PASSED!

!testRun: #RestInterfaceTest #test10cannotInteractWithCartAfterTimeoutSinceCreated stamp: 'JEA 12/3/2020 15:13:56'!
PASSED!

!testRun: #RestInterfaceTest #test11cartClockResetsAfterAdd stamp: 'JEA 12/3/2020 15:13:56'!
ERROR!

!testRun: #RestInterfaceTest #test12cartClockResetsAfterListing stamp: 'JEA 12/3/2020 15:13:56'!
ERROR!

!testRun: #RestInterfaceTest #test13cartClockResetsAfterCheckout stamp: 'JEA 12/3/2020 15:13:56'!
ERROR!

!testRun: #RestInterfaceTest #test14cannotListPurchasesOfInvalidClient stamp: 'JEA 12/3/2020 15:13:56'!
PASSED!

!testRun: #RestInterfaceTest #test15cannotListPurchasesOfClientWithInvalidPassword stamp: 'JEA 12/3/2020 15:13:56'!
PASSED!

!testRun: #RestInterfaceTest #test16canListPurchasesClientWhoNeverCheckedOut stamp: 'JEA 12/3/2020 15:13:56'!
FAILURE!

!testRun: #RestInterfaceTest #test17canListPurchasesClientWhoBoughtOneBook stamp: 'JEA 12/3/2020 15:13:56'!
ERROR!

!testRun: #RestInterfaceTest #test18canListPurchasesClientWhoBoughtMoreThanOneBook stamp: 'JEA 12/3/2020 15:13:56'!
ERROR!

!testRun: #RestInterfaceTest #test19canListPurchasesClientWhoCheckedOutMoreThanOneCart stamp: 'JEA 12/3/2020 15:13:56'!
ERROR!

!testRun: #RestInterfaceTest #test03canCreateCartForWellAuthenticatedClient stamp: 'JEA 12/3/2020 15:13:58'!
ERROR!
!RestInterface methodsFor: 'cart information' stamp: 'JEA 12/3/2020 15:14:17' prior: 50888721!
cartForID: aCartID

	^(cartSessions at: aCartID) cart.! !

!testRun: #CartTest #test01NewCartsAreCreatedEmpty stamp: 'JEA 12/3/2020 15:14:19'!
PASSED!

!testRun: #CartTest #test02CanNotAddItemsThatDoNotBelongToStore stamp: 'JEA 12/3/2020 15:14:19'!
PASSED!

!testRun: #CartTest #test03AfterAddingAnItemTheCartIsNotEmptyAnymore stamp: 'JEA 12/3/2020 15:14:19'!
PASSED!

!testRun: #CartTest #test04CanNotAddNonPositiveNumberOfItems stamp: 'JEA 12/3/2020 15:14:19'!
PASSED!

!testRun: #CartTest #test05CanNotAddMoreThanOneItemNotSellByTheStore stamp: 'JEA 12/3/2020 15:14:19'!
PASSED!

!testRun: #CartTest #test06CartRemembersAddedItems stamp: 'JEA 12/3/2020 15:14:19'!
PASSED!

!testRun: #CartTest #test07CartDoesNotHoldNotAddedItems stamp: 'JEA 12/3/2020 15:14:19'!
PASSED!

!testRun: #CartTest #test08CartRemembersTheNumberOfAddedItems stamp: 'JEA 12/3/2020 15:14:19'!
PASSED!

!testRun: #CashierTest #test01CanNotCheckoutAnEmptyCart stamp: 'JEA 12/3/2020 15:14:19'!
PASSED!

!testRun: #CashierTest #test02CalculatedTotalIsCorrect stamp: 'JEA 12/3/2020 15:14:19'!
PASSED!

!testRun: #CashierTest #test03CanNotCheckoutWithAnExpiredCreditCart stamp: 'JEA 12/3/2020 15:14:19'!
PASSED!

!testRun: #CashierTest #test04CheckoutRegistersASale stamp: 'JEA 12/3/2020 15:14:19'!
PASSED!

!testRun: #CashierTest #test05CashierChargesCreditCardUsingMerchantProcessor stamp: 'JEA 12/3/2020 15:14:19'!
PASSED!

!testRun: #CashierTest #test06CashierDoesNotSaleWhenTheCreditCardHasNoCredit stamp: 'JEA 12/3/2020 15:14:19'!
PASSED!

!testRun: #CreditCardTest #test01cantCreateCardWithNumberTooShort stamp: 'JEA 12/3/2020 15:14:19'!
PASSED!

!testRun: #CreditCardTest #test02cantCreateCardWithNumberTooLong stamp: 'JEA 12/3/2020 15:14:19'!
PASSED!

!testRun: #CreditCardTest #test03cantCreateCardWithNumberNonNumeric stamp: 'JEA 12/3/2020 15:14:19'!
PASSED!

!testRun: #RestInterfaceTest #test01cannotCreateCartForInvalidClientID stamp: 'JEA 12/3/2020 15:14:19'!
PASSED!

!testRun: #RestInterfaceTest #test02cannotCreateCartForClientWithWrongPassword stamp: 'JEA 12/3/2020 15:14:19'!
PASSED!

!testRun: #RestInterfaceTest #test03canCreateCartForWellAuthenticatedClient stamp: 'JEA 12/3/2020 15:14:19'!
PASSED!

!testRun: #RestInterfaceTest #test04canCreateMoreThanOneCartWithDifferentIDs stamp: 'JEA 12/3/2020 15:14:19'!
PASSED!

!testRun: #RestInterfaceTest #test05cannotAddToCartWithInvalidID stamp: 'JEA 12/3/2020 15:14:19'!
PASSED!

!testRun: #RestInterfaceTest #test06canAddItemToCartWithValidID stamp: 'JEA 12/3/2020 15:14:19'!
PASSED!

!testRun: #RestInterfaceTest #test07cannotCheckOutCartWithInvalidID stamp: 'JEA 12/3/2020 15:14:19'!
PASSED!

!testRun: #RestInterfaceTest #test08canCheckOutNonEmptyValidCartWithValidCreditCard stamp: 'JEA 12/3/2020 15:14:19'!
PASSED!

!testRun: #RestInterfaceTest #test09cannotListCartWithInvalidID stamp: 'JEA 12/3/2020 15:14:19'!
PASSED!

!testRun: #RestInterfaceTest #test10cannotInteractWithCartAfterTimeoutSinceCreated stamp: 'JEA 12/3/2020 15:14:19'!
PASSED!

!testRun: #RestInterfaceTest #test11cartClockResetsAfterAdd stamp: 'JEA 12/3/2020 15:14:19'!
PASSED!

!testRun: #RestInterfaceTest #test12cartClockResetsAfterListing stamp: 'JEA 12/3/2020 15:14:19'!
PASSED!

!testRun: #RestInterfaceTest #test13cartClockResetsAfterCheckout stamp: 'JEA 12/3/2020 15:14:19'!
PASSED!

!testRun: #RestInterfaceTest #test14cannotListPurchasesOfInvalidClient stamp: 'JEA 12/3/2020 15:14:19'!
PASSED!

!testRun: #RestInterfaceTest #test15cannotListPurchasesOfClientWithInvalidPassword stamp: 'JEA 12/3/2020 15:14:19'!
PASSED!

!testRun: #RestInterfaceTest #test16canListPurchasesClientWhoNeverCheckedOut stamp: 'JEA 12/3/2020 15:14:19'!
FAILURE!

!testRun: #RestInterfaceTest #test17canListPurchasesClientWhoBoughtOneBook stamp: 'JEA 12/3/2020 15:14:19'!
FAILURE!

!testRun: #RestInterfaceTest #test18canListPurchasesClientWhoBoughtMoreThanOneBook stamp: 'JEA 12/3/2020 15:14:19'!
FAILURE!

!testRun: #RestInterfaceTest #test19canListPurchasesClientWhoCheckedOutMoreThanOneCart stamp: 'JEA 12/3/2020 15:14:19'!
FAILURE!
!CartSession class methodsFor: 'instance creation' stamp: 'JEA 12/3/2020 15:16:07'!
newFor: aClientID acceptingItemsOf: aCatalog withClock: aGregorianDateTime 

	^self new initializeFor: aClientID acceptingItemsOf: aCatalog expiring: aGregorianDateTime.! !
!RestInterface methodsFor: 'as yet unclassified' stamp: 'JEA 12/3/2020 15:16:07' prior: 50888697!
newCartSessionFor: aClientID

	^CartSession newFor: aClientID 
		acceptingItemsOf: catalog 
		withClock: (clock now next: cartTimeout).! !

!methodRemoval: CartSession class #newFor:acceptingItemsOf:expiring: stamp: 'JEA 12/3/2020 15:16:07'!
newFor: aClientID acceptingItemsOf: aCatalog expiring: aGregorianDateTime 

	^self new initializeFor: aClientID acceptingItemsOf: aCatalog expiring: aGregorianDateTime.!
!CartSession class methodsFor: 'instance creation' stamp: 'JEA 12/3/2020 15:16:53'!
newFor: aClientID acceptingItemsOf: aCatalog withClock: aGregorianDateTime withTimeout: aTimeMeasure  

	^self new initializeFor: aClientID acceptingItemsOf: aCatalog expiring: aGregorianDateTime.! !
!RestInterface methodsFor: 'as yet unclassified' stamp: 'JEA 12/3/2020 15:16:53' prior: 50889152!
newCartSessionFor: aClientID

	^CartSession newFor: aClientID 
		acceptingItemsOf: catalog 
		withClock: (clock now next: cartTimeout) withTimeout: cartTimeout.! !

!methodRemoval: CartSession class #newFor:acceptingItemsOf:withClock: stamp: 'JEA 12/3/2020 15:16:53'!
newFor: aClientID acceptingItemsOf: aCatalog withClock: aGregorianDateTime 

	^self new initializeFor: aClientID acceptingItemsOf: aCatalog expiring: aGregorianDateTime.!
!RestInterface methodsFor: 'api - private' stamp: 'JEA 12/3/2020 15:17:04' prior: 50889178!
newCartSessionFor: aClientID

	^CartSession newFor: aClientID 
		acceptingItemsOf: catalog 
		withClock: clock
		withTimeout: cartTimeout.! !
!CartSession methodsFor: 'initialization' stamp: 'JEA 12/3/2020 15:17:32'!
initializeFor: aClientID acceptingItemsOf: aCatalog expiring: aGregorianDateTime withTimeout: aTimeMeasure 

	cart := Cart acceptingItemsOf: aCatalog.
	ownerClientID := aClientID.
	expirationDateTime := aGregorianDateTime.! !
!CartSession class methodsFor: 'as yet unclassified' stamp: 'JEA 12/3/2020 15:17:32' prior: 50889168!
newFor: aClientID acceptingItemsOf: aCatalog withClock: aGregorianDateTime withTimeout: aTimeMeasure  

	^self new initializeFor: aClientID acceptingItemsOf: aCatalog expiring: aGregorianDateTime withTimeout: aTimeMeasure.! !

!methodRemoval: CartSession #initializeFor:acceptingItemsOf:expiring: stamp: 'JEA 12/3/2020 15:17:32'!
initializeFor: aClientID acceptingItemsOf: aCatalog expiring: aGregorianDateTime

	cart := Cart acceptingItemsOf: aCatalog.
	ownerClientID := aClientID.
	expirationDateTime := aGregorianDateTime.!

Object subclass: #CartSession
	instanceVariableNames: 'cart clock ownerClientID timeout'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

!classDefinition: #CartSession category: 'TusLibros' stamp: 'JEA 12/3/2020 15:18:19'!
Object subclass: #CartSession
	instanceVariableNames: 'cart clock ownerClientID timeout'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

!classRenamed: #Clock as: #ClockSimulator stamp: 'JEA 12/3/2020 15:18:24'!
Smalltalk renameClassNamed: #Clock as: #ClockSimulator!
!RestInterfaceTest methodsFor: 'as yet unclassified' stamp: 'JEA 12/3/2020 15:18:24' prior: 50884764!
test10cannotInteractWithCartAfterTimeoutSinceCreated
	| restInterface cartID clock |

	clock := ClockSimulator newSimulatingRealTime.

	restInterface := RestInterface 
		authenticatingWith: AuthenticatorSimulator newSimulatingValidAuthentication 
		debitingWith: self itemsFrom: testObjectsFactory defaultCatalog
		withClock: clock withCartTimeout: testObjectsFactory cartTimeout.
	
	cartID := restInterface 
		createCartFor: testObjectsFactory validClientID
		password: testObjectsFactory correctPassword.
	
	clock simulateAdvancing: testObjectsFactory cartTimeout.
	
	self should: [ 
		restInterface 
			add: 2 
			of: testObjectsFactory itemSoldByTheStore 
			toCartWithID: cartID. 
		]
		raise: Error
		withMessageText: RestInterface cartTimedOutMessage.
	
	self should: [ restInterface listItemsInCartWithID: cartID. ]
		raise: Error
		withMessageText: RestInterface cartTimedOutMessage.
	
	self should: [ 
		restInterface 
			checkOutCartWithID: cartID 
			withCardNumber: testObjectsFactory validCardNumber 
			expiring: testObjectsFactory expirationDateNotReached 
			owner: testObjectsFactory validClientID.
		]
		raise: Error
		withMessageText: RestInterface cartTimedOutMessage.! !
!RestInterfaceTest methodsFor: 'as yet unclassified' stamp: 'JEA 12/3/2020 15:18:24' prior: 50884420!
test06canAddItemToCartWithValidID
	| restInterface cartID |

	restInterface := RestInterface 
		authenticatingWith: AuthenticatorSimulator newSimulatingValidAuthentication 
		debitingWith: self itemsFrom: testObjectsFactory defaultCatalog 
		withClock: ClockSimulator newSimulatingRealTime withCartTimeout: testObjectsFactory cartTimeout.
	
	cartID := restInterface 
		createCartFor: testObjectsFactory validClientID
		password: testObjectsFactory correctPassword.
	
	restInterface 
		add: 2 
		of: testObjectsFactory itemSoldByTheStore 
		toCartWithID: cartID.
	
	self assert: 2 
		equals: ((restInterface listItemsInCartWithID: cartID) occurrencesOf: testObjectsFactory itemSoldByTheStore).! !
!RestInterfaceTest methodsFor: 'as yet unclassified' stamp: 'JEA 12/3/2020 15:18:24' prior: 50884469!
test08canCheckOutNonEmptyValidCartWithValidCreditCard
	| restInterface cartID transactionID |

	restInterface := RestInterface 
		authenticatingWith: AuthenticatorSimulator newSimulatingValidAuthentication 
		debitingWith: self itemsFrom: testObjectsFactory defaultCatalog 
		withClock: ClockSimulator newSimulatingRealTime withCartTimeout: testObjectsFactory cartTimeout.
		
	cartID := restInterface
		createCartFor: testObjectsFactory validClientID
		password: testObjectsFactory correctPassword.
		
	restInterface 
		add: 1 
		of: testObjectsFactory itemSoldByTheStore 
		toCartWithID: cartID.
	
	transactionID := restInterface 
		checkOutCartWithID: cartID 
		withCardNumber: testObjectsFactory validCardNumber 
		expiring: testObjectsFactory expirationDateNotReached 
		owner: testObjectsFactory validCreditCardOwnersName.
	
	self assert: testObjectsFactory itemSoldByTheStorePrice 
		equals: (restInterface moneyDebitedInTransactionWithID: transactionID).! !
!RestInterfaceTest methodsFor: 'as yet unclassified' stamp: 'JEA 12/3/2020 15:18:24' prior: 50884593!
test17canListPurchasesClientWhoBoughtOneBook

	| restInterface cartID clock |
	
	clock := ClockSimulator newSimulatingRealTime.
	restInterface := RestInterface authenticatingWith:  AuthenticatorSimulator new
							  debitingWith:  self
							  itemsFrom:  testObjectsFactory defaultCatalog
							  withClock:  clock
							  withCartTimeout: testObjectsFactory cartTimeout.
	
	cartID := restInterface createCartFor: testObjectsFactory validClientID password: testObjectsFactory correctPassword.
	
	restInterface add: 1 of: testObjectsFactory itemSoldByTheStore toCartWithID: cartID.
	
	restInterface checkOutCartWithID: cartID 
			     withCardNumber: testObjectsFactory validCardNumber 
			     expiring:  testObjectsFactory expirationDateNotReached 
			     owner: testObjectsFactory validCreditCardOwnersName.
							
	self assert: (restInterface listPurchasesOf: testObjectsFactory validClientID 
	                                      password: testObjectsFactory correctPassword)
		equals: (OrderedCollection with: (Dictionary with: testObjectsFactory itemSoldByTheStore -> 1 ) 
			                                  with: testObjectsFactory itemSoldByTheStorePrice ).! !
!RestInterfaceTest methodsFor: 'as yet unclassified' stamp: 'JEA 12/3/2020 15:18:24' prior: 50884351!
test03canCreateCartForWellAuthenticatedClient
	| restInterface authenticatorSimulator cartID cartList |
	
	authenticatorSimulator := AuthenticatorSimulator newSimulatingValidAuthentication.
	
	restInterface := RestInterface 
		authenticatingWith: authenticatorSimulator 
		debitingWith: self 
		itemsFrom: Dictionary new 
		withClock: ClockSimulator newSimulatingRealTime withCartTimeout: testObjectsFactory cartTimeout.
	
	cartID := restInterface 
				createCartFor: testObjectsFactory validClientID 
				password: testObjectsFactory correctPassword.
	
	cartList := restInterface listItemsInCartWithID: cartID.
	
	self assert: cartList isEmpty.! !
!RestInterfaceTest methodsFor: 'as yet unclassified' stamp: 'JEA 12/3/2020 15:18:24' prior: 50884804!
test11cartClockResetsAfterAdd
	| restInterface cartID clock originalExpirationDate |

	clock := ClockSimulator newSimulatingRealTime.

	restInterface := RestInterface 
		authenticatingWith: AuthenticatorSimulator newSimulatingValidAuthentication 
		debitingWith: self itemsFrom: testObjectsFactory defaultCatalog
		withClock: clock withCartTimeout: testObjectsFactory cartTimeout.
	
	cartID := restInterface 
		createCartFor: testObjectsFactory validClientID
		password: testObjectsFactory correctPassword.
	originalExpirationDate := restInterface cartExpirationDateTimeForID: cartID.
	
	clock simulateAdvancing: testObjectsFactory cartTimeoutNotReached.
	
	restInterface 
		add: 2 
		of: testObjectsFactory itemSoldByTheStore 
		toCartWithID: cartID. 
	
	self assert: (restInterface cartExpirationDateTimeForID: cartID) ~= originalExpirationDate.
	
	
	! !
!RestInterfaceTest methodsFor: 'as yet unclassified' stamp: 'JEA 12/3/2020 15:18:24' prior: 50884327!
test02cannotCreateCartForClientWithWrongPassword
	| restInterface authenticatorSimulator |
	
	authenticatorSimulator := AuthenticatorSimulator newSimulatingValidAuthentication.
	authenticatorSimulator simulateWrongPassword.
	
	restInterface := RestInterface 
		authenticatingWith: authenticatorSimulator 
		debitingWith: self 
		itemsFrom: Dictionary new 
		withClock: ClockSimulator newSimulatingRealTime withCartTimeout: testObjectsFactory cartTimeout.
	
	self should: [ restInterface 
				createCartFor: testObjectsFactory validClientID 
				password: testObjectsFactory correctPassword. ]
		raise: Error
		withMessageText: RestInterface authenticationFailedMessage.! !
!RestInterfaceTest methodsFor: 'as yet unclassified' stamp: 'JEA 12/3/2020 15:18:24' prior: 50884862!
test13cartClockResetsAfterCheckout
	| restInterface cartID clock originalExpirationDate |

	clock := ClockSimulator newSimulatingRealTime.

	restInterface := RestInterface 
		authenticatingWith: AuthenticatorSimulator newSimulatingValidAuthentication 
		debitingWith: self itemsFrom: testObjectsFactory defaultCatalog
		withClock: clock withCartTimeout: testObjectsFactory cartTimeout.
	
	cartID := restInterface 
		createCartFor: testObjectsFactory validClientID
		password: testObjectsFactory correctPassword.
	originalExpirationDate := restInterface cartExpirationDateTimeForID: cartID .
		
	restInterface add: 1 of: testObjectsFactory itemSoldByTheStore toCartWithID: cartID.
	
	clock simulateAdvancing: testObjectsFactory cartTimeoutNotReached.
	
	restInterface    checkOutCartWithID: cartID 
				withCardNumber: testObjectsFactory validCardNumber 
				expiring: testObjectsFactory expirationDateNotReached 
				owner: 'Pepe'.
	
	self assert: (restInterface cartExpirationDateTimeForID: cartID) ~= originalExpirationDate .
	! !
!RestInterfaceTest methodsFor: 'as yet unclassified' stamp: 'JEA 12/3/2020 15:18:24' prior: 50884374!
test04canCreateMoreThanOneCartWithDifferentIDs
	| restInterface authenticatorSimulator cartID1 cartID2 |
	
	authenticatorSimulator := AuthenticatorSimulator newSimulatingValidAuthentication.
	
	restInterface := RestInterface 
		authenticatingWith: authenticatorSimulator 
		debitingWith: self 
		itemsFrom: Dictionary new 
		withClock: ClockSimulator newSimulatingRealTime withCartTimeout: testObjectsFactory cartTimeout.
	
	cartID1 := restInterface 
				createCartFor: testObjectsFactory validClientID 
				password: testObjectsFactory correctPassword.

	cartID2 := restInterface 
				createCartFor: testObjectsFactory validClientID 
				password: testObjectsFactory correctPassword.
	
	self assert: cartID1 ~= cartID2.! !
!RestInterfaceTest methodsFor: 'as yet unclassified' stamp: 'JEA 12/3/2020 15:18:24' prior: 50884400!
test05cannotAddToCartWithInvalidID
	| restInterface |

	restInterface := RestInterface 
		authenticatingWith: AuthenticatorSimulator newSimulatingValidAuthentication 
		debitingWith: self itemsFrom: testObjectsFactory defaultCatalog 
		withClock: ClockSimulator newSimulatingRealTime withCartTimeout: testObjectsFactory cartTimeout.
	
	self should: [ 
		restInterface 
			add: 1 
			of: testObjectsFactory itemSoldByTheStore 
			toCartWithID: testObjectsFactory invalidCartID. 
		]
		raise: Error
		withMessageText: RestInterface invalidCartIDMessage.! !
!RestInterfaceTest methodsFor: 'as yet unclassified' stamp: 'JEA 12/3/2020 15:18:24' prior: 50886581!
test14cannotListPurchasesOfInvalidClient

	| restInterface clock authSimulator |
	
	clock := ClockSimulator newSimulatingRealTime.
	authSimulator := AuthenticatorSimulator new.
	authSimulator simulateInvalidClientID.
	restInterface := RestInterface authenticatingWith: authSimulator
							  debitingWith:  self
							  itemsFrom:  testObjectsFactory defaultCatalog
							  withClock:  clock
							  withCartTimeout: testObjectsFactory cartTimeout.
							
	self should: [ 
		restInterface listPurchasesOf: testObjectsFactory validClientID 
			password: testObjectsFactory correctPassword 
		]
		raise: Error
		withMessageText: RestInterface authenticationFailedMessage.! !
!RestInterfaceTest methodsFor: 'as yet unclassified' stamp: 'JEA 12/3/2020 15:18:24' prior: 50884303!
test01cannotCreateCartForInvalidClientID
	| restInterface authenticatorSimulator |
	
	authenticatorSimulator := AuthenticatorSimulator newSimulatingValidAuthentication.
	authenticatorSimulator simulateInvalidClientID.

	restInterface := RestInterface 
		authenticatingWith: authenticatorSimulator 
		debitingWith: self 
		itemsFrom: Dictionary new 
		withClock: ClockSimulator newSimulatingRealTime withCartTimeout: testObjectsFactory cartTimeout.
	
	self should: [ restInterface 
				createCartFor: testObjectsFactory validClientID 
				password: testObjectsFactory correctPassword. ]
		raise: Error
		withMessageText: RestInterface authenticationFailedMessage.! !
!RestInterfaceTest methodsFor: 'as yet unclassified' stamp: 'JEA 12/3/2020 15:18:24' prior: 50884690!
test19canListPurchasesClientWhoCheckedOutMoreThanOneCart

	| restInterface cartID1 cartID2 clock expectedDic expectedTotal |
	
	clock := ClockSimulator newSimulatingRealTime.
	restInterface := RestInterface authenticatingWith:  AuthenticatorSimulator new
							  debitingWith:  self
							  itemsFrom:  testObjectsFactory threeItemCatalog
							  withClock:  clock
							  withCartTimeout: testObjectsFactory cartTimeout.
	
	cartID1 := restInterface createCartFor: testObjectsFactory validClientID password: testObjectsFactory correctPassword.
	
	restInterface add: 1 of: testObjectsFactory threeItemCatalogItem1 toCartWithID: cartID1.
	restInterface add: 2 of: testObjectsFactory threeItemCatalogItem2 toCartWithID: cartID1.
	restInterface add: 4 of: testObjectsFactory threeItemCatalogItem3 toCartWithID: cartID1.
	
	restInterface checkOutCartWithID: cartID1
			     withCardNumber: testObjectsFactory validCardNumber 
			     expiring:  testObjectsFactory expirationDateNotReached 
			     owner: testObjectsFactory validCreditCardOwnersName.
			
	cartID2 := restInterface createCartFor: testObjectsFactory validClientID password: testObjectsFactory correctPassword.
	
	restInterface add: 5 of: testObjectsFactory threeItemCatalogItem2 toCartWithID: cartID2.
	restInterface add: 6 of: testObjectsFactory threeItemCatalogItem3 toCartWithID: cartID2.
	
	restInterface checkOutCartWithID: cartID2
			     withCardNumber: testObjectsFactory validCardNumber 
			     expiring:  testObjectsFactory expirationDateNotReached 
			     owner: testObjectsFactory validCreditCardOwnersName.	
			
	expectedDic := Dictionary with: testObjectsFactory threeItemCatalogItem1 -> 1
						     with: testObjectsFactory threeItemCatalogItem2 -> 7
						     with: testObjectsFactory threeItemCatalogItem3 -> 10.
						
	expectedTotal := testObjectsFactory threeItemCatalogItem1Price +
				      (testObjectsFactory threeItemCatalogItem2Price * 7) +
			             (testObjectsFactory threeItemCatalogItem3Price * 10).
							
	self assert: (restInterface listPurchasesOf: testObjectsFactory validClientID 
	                                      password: testObjectsFactory correctPassword)
		equals: (OrderedCollection with: expectedDic
			                                  with: expectedTotal ).! !
!RestInterfaceTest methodsFor: 'as yet unclassified' stamp: 'JEA 12/3/2020 15:18:24' prior: 50886545!
test15cannotListPurchasesOfClientWithInvalidPassword

	| restInterface clock authSimulator |
	
	clock := ClockSimulator newSimulatingRealTime.
	authSimulator := AuthenticatorSimulator new.
	authSimulator simulateWrongPassword .
	restInterface := RestInterface authenticatingWith: authSimulator
							  debitingWith:  self
							  itemsFrom:  testObjectsFactory defaultCatalog
							  withClock:  clock
							  withCartTimeout: testObjectsFactory cartTimeout.
							
	self should: [
		restInterface listPurchasesOf: testObjectsFactory validClientID
			password: testObjectsFactory correctPassword]
		raise: Error
		withMessageText: RestInterface authenticationFailedMessage.! !
!RestInterfaceTest methodsFor: 'as yet unclassified' stamp: 'JEA 12/3/2020 15:18:24' prior: 50886862!
test16canListPurchasesClientWhoNeverCheckedOut

	| restInterface |
	
	restInterface := RestInterface authenticatingWith: AuthenticatorSimulator new
							  debitingWith: self
							  itemsFrom: testObjectsFactory defaultCatalog
							  withClock: ClockSimulator newSimulatingRealTime
							  withCartTimeout: testObjectsFactory cartTimeout.
							
	self assert: (restInterface listPurchasesOf: testObjectsFactory validClientID 
	                                      password: testObjectsFactory correctPassword)
		equals: (OrderedCollection with: Dictionary new with: 0).! !
!RestInterfaceTest methodsFor: 'as yet unclassified' stamp: 'JEA 12/3/2020 15:18:24' prior: 50884633!
test18canListPurchasesClientWhoBoughtMoreThanOneBook

	| restInterface cartID clock expectedDic expectedTotal |
	
	clock := ClockSimulator newSimulatingRealTime.
	restInterface := RestInterface authenticatingWith:  AuthenticatorSimulator new
							  debitingWith:  self
							  itemsFrom:  testObjectsFactory threeItemCatalog
							  withClock:  clock
							  withCartTimeout: testObjectsFactory cartTimeout.
	
	cartID := restInterface createCartFor: testObjectsFactory validClientID password: testObjectsFactory correctPassword.
	
	restInterface add: 1 of: testObjectsFactory threeItemCatalogItem1 toCartWithID: cartID.
	restInterface add: 2 of: testObjectsFactory threeItemCatalogItem2 toCartWithID: cartID.
	restInterface add: 4 of: testObjectsFactory threeItemCatalogItem3 toCartWithID: cartID.
	
	restInterface checkOutCartWithID: cartID 
			     withCardNumber: testObjectsFactory validCardNumber 
			     expiring:  testObjectsFactory expirationDateNotReached 
			     owner: testObjectsFactory validCreditCardOwnersName.
			
	expectedDic := Dictionary with: testObjectsFactory threeItemCatalogItem1 -> 1
						     with: testObjectsFactory threeItemCatalogItem2 -> 2
						     with: testObjectsFactory threeItemCatalogItem3 -> 4.
						
	expectedTotal := testObjectsFactory threeItemCatalogItem1Price +
				      (testObjectsFactory threeItemCatalogItem2Price * 2) +
			             (testObjectsFactory threeItemCatalogItem3Price * 4).
							
	self assert: (restInterface listPurchasesOf: testObjectsFactory validClientID 
	                                      password: testObjectsFactory correctPassword)
		equals: (OrderedCollection with: expectedDic
			                                  with: expectedTotal ).! !
!RestInterfaceTest methodsFor: 'as yet unclassified' stamp: 'JEA 12/3/2020 15:18:24' prior: 50884502!
test09cannotListCartWithInvalidID
	| restInterface |

	restInterface := RestInterface 
		authenticatingWith: AuthenticatorSimulator newSimulatingValidAuthentication 
		debitingWith: self itemsFrom: testObjectsFactory defaultCatalog 
		withClock: ClockSimulator newSimulatingRealTime withCartTimeout: testObjectsFactory cartTimeout.
	
	self should: [ restInterface listItemsInCartWithID: testObjectsFactory invalidCartID. ]
		raise: Error
		withMessageText: RestInterface invalidCartIDMessage.! !
!RestInterfaceTest methodsFor: 'as yet unclassified' stamp: 'JEA 12/3/2020 15:18:24' prior: 50884834!
test12cartClockResetsAfterListing
	| restInterface cartID clock originalExpirationDate |

	clock := ClockSimulator newSimulatingRealTime.

	restInterface := RestInterface 
		authenticatingWith: AuthenticatorSimulator newSimulatingValidAuthentication 
		debitingWith: self itemsFrom: testObjectsFactory defaultCatalog
		withClock: clock withCartTimeout: testObjectsFactory cartTimeout.
	
	cartID := restInterface 
		createCartFor: testObjectsFactory validClientID
		password: testObjectsFactory correctPassword.
	originalExpirationDate  := restInterface cartExpirationDateTimeForID: cartID.
	
	clock simulateAdvancing: testObjectsFactory cartTimeoutNotReached.
	
	restInterface listItemsInCartWithID: cartID.
	
	self assert: (restInterface cartExpirationDateTimeForID: cartID) ~= originalExpirationDate .
	! !
!RestInterfaceTest methodsFor: 'as yet unclassified' stamp: 'JEA 12/3/2020 15:18:24' prior: 50884445!
test07cannotCheckOutCartWithInvalidID
	| restInterface |

	restInterface := RestInterface 
		authenticatingWith: AuthenticatorSimulator newSimulatingValidAuthentication 
		debitingWith: self itemsFrom: testObjectsFactory defaultCatalog withClock: ClockSimulator newSimulatingRealTime withCartTimeout: testObjectsFactory cartTimeout.
	
	self should: [ 
		restInterface 
			checkOutCartWithID: testObjectsFactory invalidCartID 
			withCardNumber: testObjectsFactory validCardNumber 
			expiring: testObjectsFactory expirationDateNotReached 
			owner: testObjectsFactory validCreditCardOwnersName. 
		]
		raise: Error
		withMessageText: RestInterface invalidCartIDMessage.! !
!CartSession methodsFor: 'initialization' stamp: 'JEA 12/3/2020 15:18:58'!
initializeFor: aClientID acceptingItemsOf: aCatalog withClock: aGregorianDateTime withTimeout: aTimeMeasure 

	cart := Cart acceptingItemsOf: aCatalog.
	ownerClientID := aClientID.
	expirationDateTime := aGregorianDateTime.! !
!CartSession class methodsFor: 'as yet unclassified' stamp: 'JEA 12/3/2020 15:18:58' prior: 50889213!
newFor: aClientID acceptingItemsOf: aCatalog withClock: aGregorianDateTime withTimeout: aTimeMeasure  

	^self new initializeFor: aClientID acceptingItemsOf: aCatalog withClock: aGregorianDateTime withTimeout: aTimeMeasure.! !

!methodRemoval: CartSession #initializeFor:acceptingItemsOf:expiring:withTimeout: stamp: 'JEA 12/3/2020 15:18:58'!
initializeFor: aClientID acceptingItemsOf: aCatalog expiring: aGregorianDateTime withTimeout: aTimeMeasure 

	cart := Cart acceptingItemsOf: aCatalog.
	ownerClientID := aClientID.
	expirationDateTime := aGregorianDateTime.!
!CartSession class methodsFor: 'instance creation' stamp: 'JEA 12/3/2020 15:19:06' prior: 50889865!
newFor: aClientID acceptingItemsOf: aCatalog withClock: aClock withTimeout: aTimeMeasure  

	^self new initializeFor: aClientID acceptingItemsOf: aCatalog withClock: aClock withTimeout: aTimeMeasure.! !
!CartSession methodsFor: 'initialization' stamp: 'JEA 12/3/2020 15:19:28' prior: 50889854!
initializeFor: aClientID acceptingItemsOf: aCatalog withClock: aClock withTimeout: aTimeMeasure 

	cart := Cart acceptingItemsOf: aCatalog.
	ownerClientID := aClientID.
	clock := aClock.
	timeout := aTimeMeasure.! !

!classDefinition: #CartSession category: 'TusLibros' stamp: 'JEA 12/3/2020 15:20:18'!
Object subclass: #CartSession
	instanceVariableNames: 'cart clock ownerClientID timeout lastInteraction'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!
!CartSession methodsFor: 'initialization' stamp: 'JEA 12/3/2020 15:20:16' prior: 50889896!
initializeFor: aClientID acceptingItemsOf: aCatalog withClock: aClock withTimeout: aTimeMeasure 

	cart := Cart acceptingItemsOf: aCatalog.
	ownerClientID := aClientID.
	clock := aClock.
	timeout := aTimeMeasure.
	lastInteraction := clock now.! !
!RestInterface methodsFor: 'api' stamp: 'JEA 12/3/2020 15:20:36' prior: 50888430!
createCartFor: aClientID password: aPassword
	| cartID |
	
	self authenticate: aClientID with: aPassword.

	cartID := self nextCartID.
	cartSessions at: cartID put: (self newCartSessionFor: aClientID).
					
	^cartID.! !
!RestInterface methodsFor: 'api' stamp: 'JEA 12/3/2020 15:21:09' prior: 50888797!
add: aQuantity of: anISBN toCartWithID: aCartID

	self ensureCartIDCanBeInteractedWith: aCartID.

	(self cartSessionForID: aCartID) add: aQuantity of: anISBN.! !

!methodRemoval: RestInterface #resetTimerOfCartWithID: stamp: 'JEA 12/3/2020 15:21:21'!
resetTimerOfCartWithID: aCartID

	lastInteractionForCart at: aCartID put: clock now.!
!RestInterface methodsFor: 'api - private' stamp: 'JEA 12/3/2020 15:21:34'!
cartSessionForID: aCartID

	cartSessions at: aCartID.! !
!RestInterface methodsFor: 'api - private' stamp: 'JEA 12/3/2020 15:21:40' prior: 50889948!
cartSessionForID: aCartID

	^cartSessions at: aCartID.! !
!CartSession methodsFor: 'operations' stamp: 'JEA 12/3/2020 15:22:21'!
add: aQuantity of: anISBN

	cart add: aQuantity of: anISBN.
	self resetLastInteraction.! !
!CartSession methodsFor: 'operations - private' stamp: 'JEA 12/3/2020 15:22:39'!
resetLastInteraction

	! !
!CartSession methodsFor: 'initialization' stamp: 'JEA 12/3/2020 15:22:47' prior: 50889914!
initializeFor: aClientID acceptingItemsOf: aCatalog withClock: aClock withTimeout: aTimeMeasure 

	cart := Cart acceptingItemsOf: aCatalog.
	ownerClientID := aClientID.
	clock := aClock.
	timeout := aTimeMeasure.
	self resetLastInteraction.! !
!CartSession methodsFor: 'operations - private' stamp: 'JEA 12/3/2020 15:22:50' prior: 50889964!
resetLastInteraction

	lastInteraction := clock now.! !
!RestInterface methodsFor: 'api' stamp: 'JEA 12/3/2020 15:24:11' prior: 50888806!
listItemsInCartWithID: aCartID
	
	self ensureCartIDCanBeInteractedWith: aCartID.

	^(self cartSessionForID: aCartID) listItems.! !
!CartSession methodsFor: 'operations' stamp: 'JEA 12/3/2020 15:24:39'!
listItems

	self resetLastInteraction.
	^cart listItems.! !
!RestInterface methodsFor: 'api' stamp: 'JEA 12/3/2020 15:25:04' prior: 50888704!
checkOutCartWithID: aCartID withCardNumber: aCardNumber expiring: aGregorianMonthOfYear owner: aName
	| creditCard transactionID |

	self ensureCartIDCanBeInteractedWith: aCartID.
	
	creditCard := CreditCard 
		numbered: aCardNumber 
		ownedBy: aName 
		expiringOn: aGregorianMonthOfYear.
	
	transactionID := self checkOut: (self cartForID: aCartID) withCard: creditCard.
	
	^transactionID.! !
!RestInterface methodsFor: 'api' stamp: 'JEA 12/3/2020 15:26:15' prior: 50889996!
checkOutCartWithID: aCartID withCardNumber: aCardNumber expiring: aGregorianMonthOfYear owner: aName
	| creditCard transactionID |

	self ensureCartIDCanBeInteractedWith: aCartID.
	
	creditCard := CreditCard 
		numbered: aCardNumber 
		ownedBy: aName 
		expiringOn: aGregorianMonthOfYear.
	
	transactionID := self checkOut: (self cartForID: aCartID) withCard: creditCard.
	
	self removeCartWithID: aCartID.
	
	^transactionID.! !
!RestInterface methodsFor: 'api - private' stamp: 'JEA 12/3/2020 15:26:36'!
removeCartWithID: aCartID

	cartSessions removeKey: aCartID.! !
!RestInterface methodsFor: 'api - private' stamp: 'JEA 12/3/2020 15:28:39' prior: 50887060!
ensureCartIDIsNotTimedOut: aCartID
	
	(cartSessions at: aCartID) isTimedOut
		ifTrue: [ self error: self class cartTimedOutMessage. ].! !
!CartSession methodsFor: 'queries' stamp: 'JEA 12/3/2020 15:29:06'!
isTimedOut

	^false.! !
!CartSession methodsFor: 'queries' stamp: 'JEA 12/3/2020 15:29:40' prior: 50890039!
isTimedOut

	^clock now > (lastInteraction next: timeout).! !

!testRun: #CartTest #test01NewCartsAreCreatedEmpty stamp: 'JEA 12/3/2020 15:29:45'!
PASSED!

!testRun: #CartTest #test02CanNotAddItemsThatDoNotBelongToStore stamp: 'JEA 12/3/2020 15:29:46'!
PASSED!

!testRun: #CartTest #test03AfterAddingAnItemTheCartIsNotEmptyAnymore stamp: 'JEA 12/3/2020 15:29:46'!
PASSED!

!testRun: #CartTest #test04CanNotAddNonPositiveNumberOfItems stamp: 'JEA 12/3/2020 15:29:46'!
PASSED!

!testRun: #CartTest #test05CanNotAddMoreThanOneItemNotSellByTheStore stamp: 'JEA 12/3/2020 15:29:46'!
PASSED!

!testRun: #CartTest #test06CartRemembersAddedItems stamp: 'JEA 12/3/2020 15:29:46'!
PASSED!

!testRun: #CartTest #test07CartDoesNotHoldNotAddedItems stamp: 'JEA 12/3/2020 15:29:46'!
PASSED!

!testRun: #CartTest #test08CartRemembersTheNumberOfAddedItems stamp: 'JEA 12/3/2020 15:29:46'!
PASSED!

!testRun: #CashierTest #test01CanNotCheckoutAnEmptyCart stamp: 'JEA 12/3/2020 15:29:46'!
PASSED!

!testRun: #CashierTest #test02CalculatedTotalIsCorrect stamp: 'JEA 12/3/2020 15:29:46'!
PASSED!

!testRun: #CashierTest #test03CanNotCheckoutWithAnExpiredCreditCart stamp: 'JEA 12/3/2020 15:29:46'!
PASSED!

!testRun: #CashierTest #test04CheckoutRegistersASale stamp: 'JEA 12/3/2020 15:29:46'!
PASSED!

!testRun: #CashierTest #test05CashierChargesCreditCardUsingMerchantProcessor stamp: 'JEA 12/3/2020 15:29:46'!
PASSED!

!testRun: #CashierTest #test06CashierDoesNotSaleWhenTheCreditCardHasNoCredit stamp: 'JEA 12/3/2020 15:29:46'!
PASSED!

!testRun: #CreditCardTest #test01cantCreateCardWithNumberTooShort stamp: 'JEA 12/3/2020 15:29:46'!
PASSED!

!testRun: #CreditCardTest #test02cantCreateCardWithNumberTooLong stamp: 'JEA 12/3/2020 15:29:46'!
PASSED!

!testRun: #CreditCardTest #test03cantCreateCardWithNumberNonNumeric stamp: 'JEA 12/3/2020 15:29:46'!
PASSED!

!testRun: #RestInterfaceTest #test01cannotCreateCartForInvalidClientID stamp: 'JEA 12/3/2020 15:29:46'!
PASSED!

!testRun: #RestInterfaceTest #test02cannotCreateCartForClientWithWrongPassword stamp: 'JEA 12/3/2020 15:29:46'!
PASSED!

!testRun: #RestInterfaceTest #test03canCreateCartForWellAuthenticatedClient stamp: 'JEA 12/3/2020 15:29:46'!
PASSED!

!testRun: #RestInterfaceTest #test04canCreateMoreThanOneCartWithDifferentIDs stamp: 'JEA 12/3/2020 15:29:46'!
PASSED!

!testRun: #RestInterfaceTest #test05cannotAddToCartWithInvalidID stamp: 'JEA 12/3/2020 15:29:46'!
PASSED!

!testRun: #RestInterfaceTest #test06canAddItemToCartWithValidID stamp: 'JEA 12/3/2020 15:29:46'!
PASSED!

!testRun: #RestInterfaceTest #test07cannotCheckOutCartWithInvalidID stamp: 'JEA 12/3/2020 15:29:46'!
PASSED!

!testRun: #RestInterfaceTest #test08canCheckOutNonEmptyValidCartWithValidCreditCard stamp: 'JEA 12/3/2020 15:29:46'!
PASSED!

!testRun: #RestInterfaceTest #test09cannotListCartWithInvalidID stamp: 'JEA 12/3/2020 15:29:46'!
PASSED!

!testRun: #RestInterfaceTest #test10cannotInteractWithCartAfterTimeoutSinceCreated stamp: 'JEA 12/3/2020 15:29:46'!
FAILURE!

!testRun: #RestInterfaceTest #test11cartClockResetsAfterAdd stamp: 'JEA 12/3/2020 15:29:46'!
ERROR!

!testRun: #RestInterfaceTest #test12cartClockResetsAfterListing stamp: 'JEA 12/3/2020 15:29:46'!
ERROR!

!testRun: #RestInterfaceTest #test13cartClockResetsAfterCheckout stamp: 'JEA 12/3/2020 15:29:46'!
ERROR!

!testRun: #RestInterfaceTest #test14cannotListPurchasesOfInvalidClient stamp: 'JEA 12/3/2020 15:29:46'!
PASSED!

!testRun: #RestInterfaceTest #test15cannotListPurchasesOfClientWithInvalidPassword stamp: 'JEA 12/3/2020 15:29:46'!
PASSED!

!testRun: #RestInterfaceTest #test16canListPurchasesClientWhoNeverCheckedOut stamp: 'JEA 12/3/2020 15:29:46'!
FAILURE!

!testRun: #RestInterfaceTest #test17canListPurchasesClientWhoBoughtOneBook stamp: 'JEA 12/3/2020 15:29:46'!
FAILURE!

!testRun: #RestInterfaceTest #test18canListPurchasesClientWhoBoughtMoreThanOneBook stamp: 'JEA 12/3/2020 15:29:46'!
FAILURE!

!testRun: #RestInterfaceTest #test19canListPurchasesClientWhoCheckedOutMoreThanOneCart stamp: 'JEA 12/3/2020 15:29:46'!
FAILURE!

!methodRemoval: RestInterface #cartExpirationDateTimeForID: stamp: 'JEA 12/3/2020 15:30:30'!
cartExpirationDateTimeForID: aCartID

	^(lastInteractionForCart at: aCartID) next: cartTimeout.!
!RestInterface methodsFor: 'testing' stamp: 'JEA 12/3/2020 15:31:13'!
cartExpirationDateTimeForID: aCartID

	^(self cartSessionForID: aCartID) expirationDateTime.! !
!RestInterface methodsFor: 'api' stamp: 'JEA 12/3/2020 15:31:37' prior: 50889925!
createCartFor: aClientID password: aPassword
	| cartID |
	
	self authenticate: aClientID with: aPassword.

	cartID := self nextCartID.
	cartSessions at: cartID put: (self newCartSessionFor: aClientID).
					
	^cartID.! !
!CartSession methodsFor: 'testing' stamp: 'JEA 12/3/2020 15:32:29'!
expirationDateTime

	^lastInteraction next: timeout! !
!CartSession methodsFor: 'queries' stamp: 'JEA 12/3/2020 15:33:08' prior: 50890043!
isTimedOut

	^clock now > self expirationDateTime.! !

!testRun: #RestInterfaceTest #test01cannotCreateCartForInvalidClientID stamp: 'JEA 12/3/2020 15:33:16'!
PASSED!

!testRun: #RestInterfaceTest #test02cannotCreateCartForClientWithWrongPassword stamp: 'JEA 12/3/2020 15:33:16'!
PASSED!

!testRun: #RestInterfaceTest #test03canCreateCartForWellAuthenticatedClient stamp: 'JEA 12/3/2020 15:33:16'!
PASSED!

!testRun: #RestInterfaceTest #test04canCreateMoreThanOneCartWithDifferentIDs stamp: 'JEA 12/3/2020 15:33:16'!
PASSED!

!testRun: #RestInterfaceTest #test05cannotAddToCartWithInvalidID stamp: 'JEA 12/3/2020 15:33:16'!
PASSED!

!testRun: #RestInterfaceTest #test06canAddItemToCartWithValidID stamp: 'JEA 12/3/2020 15:33:16'!
PASSED!

!testRun: #RestInterfaceTest #test07cannotCheckOutCartWithInvalidID stamp: 'JEA 12/3/2020 15:33:16'!
PASSED!

!testRun: #RestInterfaceTest #test08canCheckOutNonEmptyValidCartWithValidCreditCard stamp: 'JEA 12/3/2020 15:33:16'!
PASSED!

!testRun: #RestInterfaceTest #test09cannotListCartWithInvalidID stamp: 'JEA 12/3/2020 15:33:16'!
PASSED!

!testRun: #RestInterfaceTest #test10cannotInteractWithCartAfterTimeoutSinceCreated stamp: 'JEA 12/3/2020 15:33:16'!
FAILURE!

!testRun: #RestInterfaceTest #test11cartClockResetsAfterAdd stamp: 'JEA 12/3/2020 15:33:16'!
PASSED!

!testRun: #RestInterfaceTest #test12cartClockResetsAfterListing stamp: 'JEA 12/3/2020 15:33:16'!
PASSED!

!testRun: #RestInterfaceTest #test13cartClockResetsAfterCheckout stamp: 'JEA 12/3/2020 15:33:16'!
ERROR!

!testRun: #RestInterfaceTest #test14cannotListPurchasesOfInvalidClient stamp: 'JEA 12/3/2020 15:33:16'!
PASSED!

!testRun: #RestInterfaceTest #test15cannotListPurchasesOfClientWithInvalidPassword stamp: 'JEA 12/3/2020 15:33:16'!
PASSED!

!testRun: #RestInterfaceTest #test16canListPurchasesClientWhoNeverCheckedOut stamp: 'JEA 12/3/2020 15:33:16'!
FAILURE!

!testRun: #RestInterfaceTest #test17canListPurchasesClientWhoBoughtOneBook stamp: 'JEA 12/3/2020 15:33:16'!
FAILURE!

!testRun: #RestInterfaceTest #test18canListPurchasesClientWhoBoughtMoreThanOneBook stamp: 'JEA 12/3/2020 15:33:16'!
FAILURE!

!testRun: #RestInterfaceTest #test19canListPurchasesClientWhoCheckedOutMoreThanOneCart stamp: 'JEA 12/3/2020 15:33:16'!
FAILURE!

!methodRemoval: RestInterfaceTest #test13cartClockResetsAfterCheckout stamp: 'JEA 12/3/2020 15:33:44'!
test13cartClockResetsAfterCheckout
	| restInterface cartID clock originalExpirationDate |

	clock := ClockSimulator newSimulatingRealTime.

	restInterface := RestInterface 
		authenticatingWith: AuthenticatorSimulator newSimulatingValidAuthentication 
		debitingWith: self itemsFrom: testObjectsFactory defaultCatalog
		withClock: clock withCartTimeout: testObjectsFactory cartTimeout.
	
	cartID := restInterface 
		createCartFor: testObjectsFactory validClientID
		password: testObjectsFactory correctPassword.
	originalExpirationDate := restInterface cartExpirationDateTimeForID: cartID .
		
	restInterface add: 1 of: testObjectsFactory itemSoldByTheStore toCartWithID: cartID.
	
	clock simulateAdvancing: testObjectsFactory cartTimeoutNotReached.
	
	restInterface    checkOutCartWithID: cartID 
				withCardNumber: testObjectsFactory validCardNumber 
				expiring: testObjectsFactory expirationDateNotReached 
				owner: 'Pepe'.
	
	self assert: (restInterface cartExpirationDateTimeForID: cartID) ~= originalExpirationDate .
	!

!testRun: #RestInterfaceTest #test01cannotCreateCartForInvalidClientID stamp: 'JEA 12/3/2020 15:33:52'!
PASSED!

!testRun: #RestInterfaceTest #test02cannotCreateCartForClientWithWrongPassword stamp: 'JEA 12/3/2020 15:33:52'!
PASSED!

!testRun: #RestInterfaceTest #test03canCreateCartForWellAuthenticatedClient stamp: 'JEA 12/3/2020 15:33:52'!
PASSED!

!testRun: #RestInterfaceTest #test04canCreateMoreThanOneCartWithDifferentIDs stamp: 'JEA 12/3/2020 15:33:52'!
PASSED!

!testRun: #RestInterfaceTest #test05cannotAddToCartWithInvalidID stamp: 'JEA 12/3/2020 15:33:52'!
PASSED!

!testRun: #RestInterfaceTest #test06canAddItemToCartWithValidID stamp: 'JEA 12/3/2020 15:33:52'!
PASSED!

!testRun: #RestInterfaceTest #test07cannotCheckOutCartWithInvalidID stamp: 'JEA 12/3/2020 15:33:52'!
PASSED!

!testRun: #RestInterfaceTest #test08canCheckOutNonEmptyValidCartWithValidCreditCard stamp: 'JEA 12/3/2020 15:33:52'!
PASSED!

!testRun: #RestInterfaceTest #test09cannotListCartWithInvalidID stamp: 'JEA 12/3/2020 15:33:52'!
PASSED!

!testRun: #RestInterfaceTest #test10cannotInteractWithCartAfterTimeoutSinceCreated stamp: 'JEA 12/3/2020 15:33:52'!
FAILURE!

!testRun: #RestInterfaceTest #test11cartClockResetsAfterAdd stamp: 'JEA 12/3/2020 15:33:52'!
PASSED!

!testRun: #RestInterfaceTest #test12cartClockResetsAfterListing stamp: 'JEA 12/3/2020 15:33:52'!
PASSED!

!testRun: #RestInterfaceTest #test14cannotListPurchasesOfInvalidClient stamp: 'JEA 12/3/2020 15:33:52'!
PASSED!

!testRun: #RestInterfaceTest #test15cannotListPurchasesOfClientWithInvalidPassword stamp: 'JEA 12/3/2020 15:33:52'!
PASSED!

!testRun: #RestInterfaceTest #test16canListPurchasesClientWhoNeverCheckedOut stamp: 'JEA 12/3/2020 15:33:52'!
FAILURE!

!testRun: #RestInterfaceTest #test17canListPurchasesClientWhoBoughtOneBook stamp: 'JEA 12/3/2020 15:33:52'!
FAILURE!

!testRun: #RestInterfaceTest #test18canListPurchasesClientWhoBoughtMoreThanOneBook stamp: 'JEA 12/3/2020 15:33:52'!
FAILURE!

!testRun: #RestInterfaceTest #test19canListPurchasesClientWhoCheckedOutMoreThanOneCart stamp: 'JEA 12/3/2020 15:33:52'!
FAILURE!
!RestInterface methodsFor: 'api - private' stamp: 'JEA 12/3/2020 15:34:48' prior: 50890032!
ensureCartIDIsNotTimedOut: aCartID
	
	(self cartSessionForID: aCartID) isTimedOut
		ifTrue: [ self error: self class cartTimedOutMessage. ].! !
!CartSession methodsFor: 'queries' stamp: 'JEA 12/3/2020 15:35:09' prior: 50890199!
isTimedOut

	^clock now >= self expirationDateTime.! !

!testRun: #RestInterfaceTest #test01cannotCreateCartForInvalidClientID stamp: 'JEA 12/3/2020 15:35:17'!
PASSED!

!testRun: #RestInterfaceTest #test02cannotCreateCartForClientWithWrongPassword stamp: 'JEA 12/3/2020 15:35:17'!
PASSED!

!testRun: #RestInterfaceTest #test03canCreateCartForWellAuthenticatedClient stamp: 'JEA 12/3/2020 15:35:17'!
PASSED!

!testRun: #RestInterfaceTest #test04canCreateMoreThanOneCartWithDifferentIDs stamp: 'JEA 12/3/2020 15:35:17'!
PASSED!

!testRun: #RestInterfaceTest #test05cannotAddToCartWithInvalidID stamp: 'JEA 12/3/2020 15:35:17'!
PASSED!

!testRun: #RestInterfaceTest #test06canAddItemToCartWithValidID stamp: 'JEA 12/3/2020 15:35:17'!
PASSED!

!testRun: #RestInterfaceTest #test07cannotCheckOutCartWithInvalidID stamp: 'JEA 12/3/2020 15:35:17'!
PASSED!

!testRun: #RestInterfaceTest #test08canCheckOutNonEmptyValidCartWithValidCreditCard stamp: 'JEA 12/3/2020 15:35:17'!
PASSED!

!testRun: #RestInterfaceTest #test09cannotListCartWithInvalidID stamp: 'JEA 12/3/2020 15:35:17'!
PASSED!

!testRun: #RestInterfaceTest #test10cannotInteractWithCartAfterTimeoutSinceCreated stamp: 'JEA 12/3/2020 15:35:17'!
PASSED!

!testRun: #RestInterfaceTest #test11cartClockResetsAfterAdd stamp: 'JEA 12/3/2020 15:35:17'!
PASSED!

!testRun: #RestInterfaceTest #test12cartClockResetsAfterListing stamp: 'JEA 12/3/2020 15:35:17'!
PASSED!

!testRun: #RestInterfaceTest #test14cannotListPurchasesOfInvalidClient stamp: 'JEA 12/3/2020 15:35:17'!
PASSED!

!testRun: #RestInterfaceTest #test15cannotListPurchasesOfClientWithInvalidPassword stamp: 'JEA 12/3/2020 15:35:17'!
PASSED!

!testRun: #RestInterfaceTest #test16canListPurchasesClientWhoNeverCheckedOut stamp: 'JEA 12/3/2020 15:35:17'!
FAILURE!

!testRun: #RestInterfaceTest #test17canListPurchasesClientWhoBoughtOneBook stamp: 'JEA 12/3/2020 15:35:17'!
FAILURE!

!testRun: #RestInterfaceTest #test18canListPurchasesClientWhoBoughtMoreThanOneBook stamp: 'JEA 12/3/2020 15:35:17'!
FAILURE!

!testRun: #RestInterfaceTest #test19canListPurchasesClientWhoCheckedOutMoreThanOneCart stamp: 'JEA 12/3/2020 15:35:17'!
FAILURE!

Object subclass: #RestInterface
	instanceVariableNames: 'authenticator merchantProcessor lastCartID clock catalog transactionValues cartTimeout cartSessions'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

!classDefinition: #RestInterface category: 'TusLibros' stamp: 'JEA 12/3/2020 15:35:30'!
Object subclass: #RestInterface
	instanceVariableNames: 'authenticator merchantProcessor lastCartID clock catalog transactionValues cartTimeout cartSessions'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

!testRun: #RestInterfaceTest #test01cannotCreateCartForInvalidClientID stamp: 'JEA 12/3/2020 15:35:31'!
PASSED!

!testRun: #RestInterfaceTest #test02cannotCreateCartForClientWithWrongPassword stamp: 'JEA 12/3/2020 15:35:31'!
PASSED!

!testRun: #RestInterfaceTest #test03canCreateCartForWellAuthenticatedClient stamp: 'JEA 12/3/2020 15:35:31'!
PASSED!

!testRun: #RestInterfaceTest #test04canCreateMoreThanOneCartWithDifferentIDs stamp: 'JEA 12/3/2020 15:35:31'!
PASSED!

!testRun: #RestInterfaceTest #test05cannotAddToCartWithInvalidID stamp: 'JEA 12/3/2020 15:35:31'!
PASSED!

!testRun: #RestInterfaceTest #test06canAddItemToCartWithValidID stamp: 'JEA 12/3/2020 15:35:31'!
PASSED!

!testRun: #RestInterfaceTest #test07cannotCheckOutCartWithInvalidID stamp: 'JEA 12/3/2020 15:35:31'!
PASSED!

!testRun: #RestInterfaceTest #test08canCheckOutNonEmptyValidCartWithValidCreditCard stamp: 'JEA 12/3/2020 15:35:31'!
PASSED!

!testRun: #RestInterfaceTest #test09cannotListCartWithInvalidID stamp: 'JEA 12/3/2020 15:35:31'!
PASSED!

!testRun: #RestInterfaceTest #test10cannotInteractWithCartAfterTimeoutSinceCreated stamp: 'JEA 12/3/2020 15:35:31'!
PASSED!

!testRun: #RestInterfaceTest #test11cartClockResetsAfterAdd stamp: 'JEA 12/3/2020 15:35:31'!
PASSED!

!testRun: #RestInterfaceTest #test12cartClockResetsAfterListing stamp: 'JEA 12/3/2020 15:35:31'!
PASSED!

!testRun: #RestInterfaceTest #test14cannotListPurchasesOfInvalidClient stamp: 'JEA 12/3/2020 15:35:31'!
PASSED!

!testRun: #RestInterfaceTest #test15cannotListPurchasesOfClientWithInvalidPassword stamp: 'JEA 12/3/2020 15:35:31'!
PASSED!

!testRun: #RestInterfaceTest #test16canListPurchasesClientWhoNeverCheckedOut stamp: 'JEA 12/3/2020 15:35:31'!
FAILURE!

!testRun: #RestInterfaceTest #test17canListPurchasesClientWhoBoughtOneBook stamp: 'JEA 12/3/2020 15:35:31'!
FAILURE!

!testRun: #RestInterfaceTest #test18canListPurchasesClientWhoBoughtMoreThanOneBook stamp: 'JEA 12/3/2020 15:35:31'!
FAILURE!

!testRun: #RestInterfaceTest #test19canListPurchasesClientWhoCheckedOutMoreThanOneCart stamp: 'JEA 12/3/2020 15:35:31'!
FAILURE!
!RestInterface methodsFor: 'initialization' stamp: 'JEA 12/3/2020 15:35:44' prior: 50888254!
initializeAuthenticatingWith: anAuthenticator debitingWith: aMerchantProcessor itemsFrom: aCatalog withClock: aClock withCartTimeout: aTimeMeasure 

	authenticator := anAuthenticator.
	lastCartID := 0.
	catalog := aCatalog.
	clock := aClock.
	merchantProcessor := aMerchantProcessor.
	cartTimeout := aTimeMeasure.
	transactionValues := Dictionary new.
	cartSessions := Dictionary new.! !
!RestInterface class methodsFor: 'instance creation' stamp: 'JEA 12/3/2020 15:36:01' prior: 50885539!
authenticatingWith: anAuthenticator debitingWith: aMerchantProcessor itemsFrom: aCatalog withClock: aClock withCartTimeout: aTimeMeasure

	^self new 
		initializeAuthenticatingWith: anAuthenticator 
		debitingWith: aMerchantProcessor 
		itemsFrom: aCatalog 
		withClock: aClock 
		withCartTimeout: aTimeMeasure.! !
!RestInterface class methodsFor: 'error messages' stamp: 'JEA 12/3/2020 15:36:23' prior: 50885533!
invalidCartIDMessage

	^'The cart ID provided does not correspond to an already created cart, or it corresponds to an already checked out cart.'! !
!RestInterface class methodsFor: 'error messages' stamp: 'JEA 12/3/2020 15:36:41' prior: 50890564!
invalidCartIDMessage

	^'The cart ID provided corresponds to an already checked out cart, or it does not correspond to an already created cart.'! !

!methodRemoval: RestInterface #totalPriceOfCartID: stamp: 'JEA 12/3/2020 15:38:40'!
totalPriceOfCartID: aCartID

	self ensureCartIDIsValid: aCartID.
	
	^(cartSessions at: aCartID) total.!
!RestInterface methodsFor: 'api - private' stamp: 'JEA 12/3/2020 15:41:29' prior: 50885430!
checkOut: aCartID withCard: aCard  
	| cashier |

	cashier:= Cashier 
		toCheckout: (self cartForID: aCartID)
		charging: aCard
		through: merchantProcessor
		on: clock now date
		registeringOn: transactionValues.	
	
	^cashier checkOut.! !
!RestInterface methodsFor: 'api' stamp: 'JEA 12/3/2020 15:41:45' prior: 50890011!
checkOutCartWithID: aCartID withCardNumber: aCardNumber expiring: aGregorianMonthOfYear owner: aName
	| creditCard transactionID |

	self ensureCartIDCanBeInteractedWith: aCartID.
	
	creditCard := CreditCard 
		numbered: aCardNumber 
		ownedBy: aName 
		expiringOn: aGregorianMonthOfYear.
	
	transactionID := self checkOutCartWithID: aCartID withCard: creditCard.
	
	self removeCartWithID: aCartID.
	
	^transactionID.! !
!RestInterface methodsFor: 'api - private' stamp: 'JEA 12/3/2020 15:41:58'!
checkOutCartWithID: aCartID withCard: aCard  
	| cashier |

	cashier:= Cashier 
		toCheckout: (self cartForID: aCartID)
		charging: aCard
		through: merchantProcessor
		on: clock now date
		registeringOn: transactionValues.	
	
	^cashier checkOut.! !

!methodRemoval: RestInterface #checkOut:withCard: stamp: 'JEA 12/3/2020 15:41:59'!
checkOut: aCartID withCard: aCard  
	| cashier |

	cashier:= Cashier 
		toCheckout: (self cartForID: aCartID)
		charging: aCard
		through: merchantProcessor
		on: clock now date
		registeringOn: transactionValues.	
	
	^cashier checkOut.!

!testRun: #CartTest #test01NewCartsAreCreatedEmpty stamp: 'JEA 12/3/2020 15:42:01'!
PASSED!

!testRun: #CartTest #test02CanNotAddItemsThatDoNotBelongToStore stamp: 'JEA 12/3/2020 15:42:01'!
PASSED!

!testRun: #CartTest #test03AfterAddingAnItemTheCartIsNotEmptyAnymore stamp: 'JEA 12/3/2020 15:42:01'!
PASSED!

!testRun: #CartTest #test04CanNotAddNonPositiveNumberOfItems stamp: 'JEA 12/3/2020 15:42:01'!
PASSED!

!testRun: #CartTest #test05CanNotAddMoreThanOneItemNotSellByTheStore stamp: 'JEA 12/3/2020 15:42:01'!
PASSED!

!testRun: #CartTest #test06CartRemembersAddedItems stamp: 'JEA 12/3/2020 15:42:01'!
PASSED!

!testRun: #CartTest #test07CartDoesNotHoldNotAddedItems stamp: 'JEA 12/3/2020 15:42:01'!
PASSED!

!testRun: #CartTest #test08CartRemembersTheNumberOfAddedItems stamp: 'JEA 12/3/2020 15:42:01'!
PASSED!

!testRun: #CashierTest #test01CanNotCheckoutAnEmptyCart stamp: 'JEA 12/3/2020 15:42:01'!
PASSED!

!testRun: #CashierTest #test02CalculatedTotalIsCorrect stamp: 'JEA 12/3/2020 15:42:01'!
PASSED!

!testRun: #CashierTest #test03CanNotCheckoutWithAnExpiredCreditCart stamp: 'JEA 12/3/2020 15:42:01'!
PASSED!

!testRun: #CashierTest #test04CheckoutRegistersASale stamp: 'JEA 12/3/2020 15:42:01'!
PASSED!

!testRun: #CashierTest #test05CashierChargesCreditCardUsingMerchantProcessor stamp: 'JEA 12/3/2020 15:42:01'!
PASSED!

!testRun: #CashierTest #test06CashierDoesNotSaleWhenTheCreditCardHasNoCredit stamp: 'JEA 12/3/2020 15:42:01'!
PASSED!

!testRun: #CreditCardTest #test01cantCreateCardWithNumberTooShort stamp: 'JEA 12/3/2020 15:42:01'!
PASSED!

!testRun: #CreditCardTest #test02cantCreateCardWithNumberTooLong stamp: 'JEA 12/3/2020 15:42:01'!
PASSED!

!testRun: #CreditCardTest #test03cantCreateCardWithNumberNonNumeric stamp: 'JEA 12/3/2020 15:42:01'!
PASSED!

!testRun: #RestInterfaceTest #test01cannotCreateCartForInvalidClientID stamp: 'JEA 12/3/2020 15:42:01'!
PASSED!

!testRun: #RestInterfaceTest #test02cannotCreateCartForClientWithWrongPassword stamp: 'JEA 12/3/2020 15:42:01'!
PASSED!

!testRun: #RestInterfaceTest #test03canCreateCartForWellAuthenticatedClient stamp: 'JEA 12/3/2020 15:42:01'!
PASSED!

!testRun: #RestInterfaceTest #test04canCreateMoreThanOneCartWithDifferentIDs stamp: 'JEA 12/3/2020 15:42:01'!
PASSED!

!testRun: #RestInterfaceTest #test05cannotAddToCartWithInvalidID stamp: 'JEA 12/3/2020 15:42:01'!
PASSED!

!testRun: #RestInterfaceTest #test06canAddItemToCartWithValidID stamp: 'JEA 12/3/2020 15:42:01'!
PASSED!

!testRun: #RestInterfaceTest #test07cannotCheckOutCartWithInvalidID stamp: 'JEA 12/3/2020 15:42:01'!
PASSED!

!testRun: #RestInterfaceTest #test08canCheckOutNonEmptyValidCartWithValidCreditCard stamp: 'JEA 12/3/2020 15:42:01'!
PASSED!

!testRun: #RestInterfaceTest #test09cannotListCartWithInvalidID stamp: 'JEA 12/3/2020 15:42:01'!
PASSED!

!testRun: #RestInterfaceTest #test10cannotInteractWithCartAfterTimeoutSinceCreated stamp: 'JEA 12/3/2020 15:42:01'!
PASSED!

!testRun: #RestInterfaceTest #test11cartClockResetsAfterAdd stamp: 'JEA 12/3/2020 15:42:01'!
PASSED!

!testRun: #RestInterfaceTest #test12cartClockResetsAfterListing stamp: 'JEA 12/3/2020 15:42:01'!
PASSED!

!testRun: #RestInterfaceTest #test14cannotListPurchasesOfInvalidClient stamp: 'JEA 12/3/2020 15:42:01'!
PASSED!

!testRun: #RestInterfaceTest #test15cannotListPurchasesOfClientWithInvalidPassword stamp: 'JEA 12/3/2020 15:42:01'!
PASSED!

!testRun: #RestInterfaceTest #test16canListPurchasesClientWhoNeverCheckedOut stamp: 'JEA 12/3/2020 15:42:01'!
FAILURE!

!testRun: #RestInterfaceTest #test17canListPurchasesClientWhoBoughtOneBook stamp: 'JEA 12/3/2020 15:42:01'!
FAILURE!

!testRun: #RestInterfaceTest #test18canListPurchasesClientWhoBoughtMoreThanOneBook stamp: 'JEA 12/3/2020 15:42:01'!
FAILURE!

!testRun: #RestInterfaceTest #test19canListPurchasesClientWhoCheckedOutMoreThanOneCart stamp: 'JEA 12/3/2020 15:42:01'!
FAILURE!
!RestInterfaceTest methodsFor: 'tests - checking out cart' stamp: 'JEA 12/3/2020 15:44:38' prior: 50889316!
test08canCheckOutNonEmptyValidCartWithValidCreditCard
	| restInterface cartID transactionID |

	restInterface := RestInterface 
		authenticatingWith: AuthenticatorSimulator newSimulatingValidAuthentication 
		debitingWith: self itemsFrom: testObjectsFactory defaultCatalog 
		withClock: ClockSimulator newSimulatingRealTime withCartTimeout: testObjectsFactory cartTimeout.
		
	cartID := restInterface
		createCartFor: testObjectsFactory validClientID
		password: testObjectsFactory correctPassword.
		
	restInterface 
		add: 1 
		of: testObjectsFactory itemSoldByTheStore 
		toCartWithID: cartID.
	
	transactionID := restInterface 
		checkOutCartWithID: cartID 
		withCardNumber: testObjectsFactory validCardNumber 
		expiring: testObjectsFactory expirationDateNotReached 
		owner: testObjectsFactory validCreditCardOwnersName.
	
	self assert: testObjectsFactory itemSoldByTheStorePrice 
		equals: (restInterface moneyDebitedInTransactionWithID: transactionID).
	
	self should: [ 
		restInterface listItemsInCartWithID: cartID
		]
		raise: Error
		withMessageText: RestInterface invalidCartIDMessage.! !

!testRun: #RestInterfaceTest #test08canCheckOutNonEmptyValidCartWithValidCreditCard stamp: 'JEA 12/3/2020 15:44:43'!
PASSED!

!testRun: #RestInterfaceTest #test01cannotCreateCartForInvalidClientID stamp: 'JEA 12/3/2020 15:44:43'!
PASSED!

!testRun: #RestInterfaceTest #test02cannotCreateCartForClientWithWrongPassword stamp: 'JEA 12/3/2020 15:44:43'!
PASSED!

!testRun: #RestInterfaceTest #test03canCreateCartForWellAuthenticatedClient stamp: 'JEA 12/3/2020 15:44:43'!
PASSED!

!testRun: #RestInterfaceTest #test04canCreateMoreThanOneCartWithDifferentIDs stamp: 'JEA 12/3/2020 15:44:43'!
PASSED!

!testRun: #RestInterfaceTest #test05cannotAddToCartWithInvalidID stamp: 'JEA 12/3/2020 15:44:43'!
PASSED!

!testRun: #RestInterfaceTest #test06canAddItemToCartWithValidID stamp: 'JEA 12/3/2020 15:44:43'!
PASSED!

!testRun: #RestInterfaceTest #test07cannotCheckOutCartWithInvalidID stamp: 'JEA 12/3/2020 15:44:43'!
PASSED!

!testRun: #RestInterfaceTest #test08canCheckOutNonEmptyValidCartWithValidCreditCard stamp: 'JEA 12/3/2020 15:44:43'!
PASSED!

!testRun: #RestInterfaceTest #test09cannotListCartWithInvalidID stamp: 'JEA 12/3/2020 15:44:43'!
PASSED!

!testRun: #RestInterfaceTest #test10cannotInteractWithCartAfterTimeoutSinceCreated stamp: 'JEA 12/3/2020 15:44:43'!
PASSED!

!testRun: #RestInterfaceTest #test11cartClockResetsAfterAdd stamp: 'JEA 12/3/2020 15:44:43'!
PASSED!

!testRun: #RestInterfaceTest #test12cartClockResetsAfterListing stamp: 'JEA 12/3/2020 15:44:43'!
PASSED!

!testRun: #RestInterfaceTest #test14cannotListPurchasesOfInvalidClient stamp: 'JEA 12/3/2020 15:44:43'!
PASSED!

!testRun: #RestInterfaceTest #test15cannotListPurchasesOfClientWithInvalidPassword stamp: 'JEA 12/3/2020 15:44:43'!
PASSED!

!testRun: #RestInterfaceTest #test16canListPurchasesClientWhoNeverCheckedOut stamp: 'JEA 12/3/2020 15:44:43'!
FAILURE!

!testRun: #RestInterfaceTest #test17canListPurchasesClientWhoBoughtOneBook stamp: 'JEA 12/3/2020 15:44:43'!
FAILURE!

!testRun: #RestInterfaceTest #test18canListPurchasesClientWhoBoughtMoreThanOneBook stamp: 'JEA 12/3/2020 15:44:43'!
FAILURE!

!testRun: #RestInterfaceTest #test19canListPurchasesClientWhoCheckedOutMoreThanOneCart stamp: 'JEA 12/3/2020 15:44:43'!
FAILURE!
!RestInterfaceTest methodsFor: 'tests - checking out cart' stamp: 'JEA 12/3/2020 15:45:04' prior: 50890756!
test08canCheckOutNonEmptyValidCartWithValidCreditCard
	| restInterface cartID transactionID |

	restInterface := RestInterface 
		authenticatingWith: AuthenticatorSimulator newSimulatingValidAuthentication 
		debitingWith: self itemsFrom: testObjectsFactory defaultCatalog 
		withClock: ClockSimulator newSimulatingRealTime withCartTimeout: testObjectsFactory cartTimeout.
		
	cartID := restInterface
		createCartFor: testObjectsFactory validClientID
		password: testObjectsFactory correctPassword.
		
	restInterface 
		add: 1 
		of: testObjectsFactory itemSoldByTheStore 
		toCartWithID: cartID.
	
	transactionID := restInterface 
		checkOutCartWithID: cartID 
		withCardNumber: testObjectsFactory validCardNumber 
		expiring: testObjectsFactory expirationDateNotReached 
		owner: testObjectsFactory validCreditCardOwnersName.
	
	self assert: testObjectsFactory itemSoldByTheStorePrice 
		equals: (restInterface moneyDebitedInTransactionWithID: transactionID).
	
	self should: [ 
			restInterface listItemsInCartWithID: cartID
		]
		raise: Error
		withMessageText: RestInterface invalidCartIDMessage.! !
!RestInterfaceTest methodsFor: 'tests - cart timeout' stamp: 'JEA 12/3/2020 15:46:53' prior: 50889250!
test10cannotInteractWithCartAfterTimeoutSinceCreated
	| restInterface cartID clock |

	clock := ClockSimulator newSimulatingRealTime.

	restInterface := RestInterface 
		authenticatingWith: AuthenticatorSimulator newSimulatingValidAuthentication 
		debitingWith: self itemsFrom: testObjectsFactory defaultCatalog
		withClock: clock withCartTimeout: testObjectsFactory cartTimeout.
	
	cartID := restInterface 
		createCartFor: testObjectsFactory validClientID
		password: testObjectsFactory correctPassword.
	
	clock simulateAdvancing: testObjectsFactory cartTimeout.
	
	self should: [ 
		restInterface 
			add: 2 
			of: testObjectsFactory itemSoldByTheStore 
			toCartWithID: cartID. 
		]
		raise: Error
		withMessageText: RestInterface cartTimedOutMessage.
	
	self should: [ restInterface listItemsInCartWithID: cartID. ]
		raise: Error
		withMessageText: RestInterface cartTimedOutMessage.
	
	self should: [ 
		restInterface 
			checkOutCartWithID: cartID 
			withCardNumber: testObjectsFactory validCardNumber 
			expiring: testObjectsFactory expirationDateNotReached 
			owner: testObjectsFactory validClientID.
		]
		raise: Error
		withMessageText: RestInterface cartTimedOutMessage.! !
!RestInterfaceTest methodsFor: 'tests - checking out cart' stamp: 'JEA 12/3/2020 15:47:04' prior: 50890864!
test08canCheckOutNonEmptyValidCartWithValidCreditCard
	| restInterface cartID transactionID |

	restInterface := RestInterface 
		authenticatingWith: AuthenticatorSimulator newSimulatingValidAuthentication 
		debitingWith: self itemsFrom: testObjectsFactory defaultCatalog 
		withClock: ClockSimulator newSimulatingRealTime withCartTimeout: testObjectsFactory cartTimeout.
		
	cartID := restInterface
		createCartFor: testObjectsFactory validClientID
		password: testObjectsFactory correctPassword.
		
	restInterface 
		add: 1 
		of: testObjectsFactory itemSoldByTheStore 
		toCartWithID: cartID.
	
	transactionID := restInterface 
		checkOutCartWithID: cartID 
		withCardNumber: testObjectsFactory validCardNumber 
		expiring: testObjectsFactory expirationDateNotReached 
		owner: testObjectsFactory validCreditCardOwnersName.
	
	self assert: testObjectsFactory itemSoldByTheStorePrice 
		equals: (restInterface moneyDebitedInTransactionWithID: transactionID).
	
	self should: [ restInterface listItemsInCartWithID: cartID ]
		raise: Error
		withMessageText: RestInterface invalidCartIDMessage.! !
!RestInterface methodsFor: 'api - private' stamp: 'JEA 12/3/2020 15:48:00' prior: 50890374!
ensureCartIDIsNotTimedOut: aCartID
	
	(self cartSessionForID: aCartID) isTimedOut
		ifTrue: [ 
			self removeCartWithID: aCartID.
			self error: self class cartTimedOutMessage.
		 ].! !

!testRun: #RestInterfaceTest #test01cannotCreateCartForInvalidClientID stamp: 'JEA 12/3/2020 15:49:34'!
PASSED!

!testRun: #RestInterfaceTest #test02cannotCreateCartForClientWithWrongPassword stamp: 'JEA 12/3/2020 15:49:34'!
PASSED!

!testRun: #RestInterfaceTest #test03canCreateCartForWellAuthenticatedClient stamp: 'JEA 12/3/2020 15:49:34'!
PASSED!

!testRun: #RestInterfaceTest #test04canCreateMoreThanOneCartWithDifferentIDs stamp: 'JEA 12/3/2020 15:49:34'!
PASSED!

!testRun: #RestInterfaceTest #test05cannotAddToCartWithInvalidID stamp: 'JEA 12/3/2020 15:49:34'!
PASSED!

!testRun: #RestInterfaceTest #test06canAddItemToCartWithValidID stamp: 'JEA 12/3/2020 15:49:34'!
PASSED!

!testRun: #RestInterfaceTest #test07cannotCheckOutCartWithInvalidID stamp: 'JEA 12/3/2020 15:49:34'!
PASSED!

!testRun: #RestInterfaceTest #test08canCheckOutNonEmptyValidCartWithValidCreditCard stamp: 'JEA 12/3/2020 15:49:34'!
PASSED!

!testRun: #RestInterfaceTest #test09cannotListCartWithInvalidID stamp: 'JEA 12/3/2020 15:49:34'!
PASSED!

!testRun: #RestInterfaceTest #test10cannotInteractWithCartAfterTimeoutSinceCreated stamp: 'JEA 12/3/2020 15:49:34'!
FAILURE!

!testRun: #RestInterfaceTest #test11cartClockResetsAfterAdd stamp: 'JEA 12/3/2020 15:49:34'!
PASSED!

!testRun: #RestInterfaceTest #test12cartClockResetsAfterListing stamp: 'JEA 12/3/2020 15:49:34'!
PASSED!

!testRun: #RestInterfaceTest #test14cannotListPurchasesOfInvalidClient stamp: 'JEA 12/3/2020 15:49:34'!
PASSED!

!testRun: #RestInterfaceTest #test15cannotListPurchasesOfClientWithInvalidPassword stamp: 'JEA 12/3/2020 15:49:34'!
PASSED!

!testRun: #RestInterfaceTest #test16canListPurchasesClientWhoNeverCheckedOut stamp: 'JEA 12/3/2020 15:49:34'!
FAILURE!

!testRun: #RestInterfaceTest #test17canListPurchasesClientWhoBoughtOneBook stamp: 'JEA 12/3/2020 15:49:34'!
FAILURE!

!testRun: #RestInterfaceTest #test18canListPurchasesClientWhoBoughtMoreThanOneBook stamp: 'JEA 12/3/2020 15:49:34'!
FAILURE!

!testRun: #RestInterfaceTest #test19canListPurchasesClientWhoCheckedOutMoreThanOneCart stamp: 'JEA 12/3/2020 15:49:34'!
FAILURE!

!methodRemoval: RestInterface class #cartTimedOutMessage stamp: 'JEA 12/3/2020 15:50:32'!
cartTimedOutMessage

	^'The cart with the given ID has timed out.'.!
!RestInterface methodsFor: 'api - private' stamp: 'JEA 12/3/2020 15:50:40' prior: 50890981!
ensureCartIDIsNotTimedOut: aCartID
	
	(self cartSessionForID: aCartID) isTimedOut
		ifTrue: [ 
			self removeCartWithID: aCartID.
			self error: self class invalidCartIDMessage.
		 ].! !
!RestInterfaceTest methodsFor: 'tests - cart timeout' stamp: 'JEA 12/3/2020 15:50:46' prior: 50890902!
test10cannotInteractWithCartAfterTimeoutSinceCreated
	| restInterface cartID clock |

	clock := ClockSimulator newSimulatingRealTime.

	restInterface := RestInterface 
		authenticatingWith: AuthenticatorSimulator newSimulatingValidAuthentication 
		debitingWith: self itemsFrom: testObjectsFactory defaultCatalog
		withClock: clock withCartTimeout: testObjectsFactory cartTimeout.
	
	cartID := restInterface 
		createCartFor: testObjectsFactory validClientID
		password: testObjectsFactory correctPassword.
	
	clock simulateAdvancing: testObjectsFactory cartTimeout.
	
	self should: [ 
		restInterface 
			add: 2 
			of: testObjectsFactory itemSoldByTheStore 
			toCartWithID: cartID. 
		]
		raise: Error
		withMessageText: RestInterface cartTimedOutMessage.
	
	self should: [ restInterface listItemsInCartWithID: cartID. ]
		raise: Error
		withMessageText: RestInterface cartTimedOutMessage.
	
	self should: [ 
		restInterface 
			checkOutCartWithID: cartID 
			withCardNumber: testObjectsFactory validCardNumber 
			expiring: testObjectsFactory expirationDateNotReached 
			owner: testObjectsFactory validClientID.
		]
		raise: Error
		withMessageText: RestInterface invalidCartIDMessage.! !

!testRun: #RestInterfaceTest #test01cannotCreateCartForInvalidClientID stamp: 'JEA 12/3/2020 15:50:50'!
PASSED!

!testRun: #RestInterfaceTest #test02cannotCreateCartForClientWithWrongPassword stamp: 'JEA 12/3/2020 15:50:50'!
PASSED!

!testRun: #RestInterfaceTest #test03canCreateCartForWellAuthenticatedClient stamp: 'JEA 12/3/2020 15:50:50'!
PASSED!

!testRun: #RestInterfaceTest #test04canCreateMoreThanOneCartWithDifferentIDs stamp: 'JEA 12/3/2020 15:50:50'!
PASSED!

!testRun: #RestInterfaceTest #test05cannotAddToCartWithInvalidID stamp: 'JEA 12/3/2020 15:50:50'!
PASSED!

!testRun: #RestInterfaceTest #test06canAddItemToCartWithValidID stamp: 'JEA 12/3/2020 15:50:50'!
PASSED!

!testRun: #RestInterfaceTest #test07cannotCheckOutCartWithInvalidID stamp: 'JEA 12/3/2020 15:50:50'!
PASSED!

!testRun: #RestInterfaceTest #test08canCheckOutNonEmptyValidCartWithValidCreditCard stamp: 'JEA 12/3/2020 15:50:50'!
PASSED!

!testRun: #RestInterfaceTest #test09cannotListCartWithInvalidID stamp: 'JEA 12/3/2020 15:50:50'!
PASSED!

!testRun: #RestInterfaceTest #test10cannotInteractWithCartAfterTimeoutSinceCreated stamp: 'JEA 12/3/2020 15:50:50'!
ERROR!

!testRun: #RestInterfaceTest #test11cartClockResetsAfterAdd stamp: 'JEA 12/3/2020 15:50:50'!
PASSED!

!testRun: #RestInterfaceTest #test12cartClockResetsAfterListing stamp: 'JEA 12/3/2020 15:50:50'!
PASSED!

!testRun: #RestInterfaceTest #test14cannotListPurchasesOfInvalidClient stamp: 'JEA 12/3/2020 15:50:50'!
PASSED!

!testRun: #RestInterfaceTest #test15cannotListPurchasesOfClientWithInvalidPassword stamp: 'JEA 12/3/2020 15:50:50'!
PASSED!

!testRun: #RestInterfaceTest #test16canListPurchasesClientWhoNeverCheckedOut stamp: 'JEA 12/3/2020 15:50:50'!
FAILURE!

!testRun: #RestInterfaceTest #test17canListPurchasesClientWhoBoughtOneBook stamp: 'JEA 12/3/2020 15:50:50'!
FAILURE!

!testRun: #RestInterfaceTest #test18canListPurchasesClientWhoBoughtMoreThanOneBook stamp: 'JEA 12/3/2020 15:50:50'!
FAILURE!

!testRun: #RestInterfaceTest #test19canListPurchasesClientWhoCheckedOutMoreThanOneCart stamp: 'JEA 12/3/2020 15:50:50'!
FAILURE!

!testRun: #RestInterfaceTest #test10cannotInteractWithCartAfterTimeoutSinceCreated stamp: 'JEA 12/3/2020 15:50:52'!
ERROR!
!RestInterfaceTest methodsFor: 'tests - cart timeout' stamp: 'JEA 12/3/2020 15:51:26' prior: 50891071!
test10cannotInteractWithCartAfterTimeoutSinceCreated
	| restInterface cartID clock |

	clock := ClockSimulator newSimulatingRealTime.

	restInterface := RestInterface 
		authenticatingWith: AuthenticatorSimulator newSimulatingValidAuthentication 
		debitingWith: self itemsFrom: testObjectsFactory defaultCatalog
		withClock: clock withCartTimeout: testObjectsFactory cartTimeout.
	
	cartID := restInterface 
		createCartFor: testObjectsFactory validClientID
		password: testObjectsFactory correctPassword.
	
	clock simulateAdvancing: testObjectsFactory cartTimeout.
	
	self should: [ 
		restInterface 
			add: 2 
			of: testObjectsFactory itemSoldByTheStore 
			toCartWithID: cartID. 
		]
		raise: Error
		withMessageText: RestInterface invalidCartIDMessage.
	
	self should: [ restInterface listItemsInCartWithID: cartID. ]
		raise: Error
		withMessageText: RestInterface invalidCartIDMessage.
	
	self should: [ 
		restInterface 
			checkOutCartWithID: cartID 
			withCardNumber: testObjectsFactory validCardNumber 
			expiring: testObjectsFactory expirationDateNotReached 
			owner: testObjectsFactory validClientID.
		]
		raise: Error
		withMessageText: RestInterface invalidCartIDMessage.! !

!testRun: #RestInterfaceTest #test01cannotCreateCartForInvalidClientID stamp: 'JEA 12/3/2020 15:51:33'!
PASSED!

!testRun: #RestInterfaceTest #test02cannotCreateCartForClientWithWrongPassword stamp: 'JEA 12/3/2020 15:51:33'!
PASSED!

!testRun: #RestInterfaceTest #test03canCreateCartForWellAuthenticatedClient stamp: 'JEA 12/3/2020 15:51:33'!
PASSED!

!testRun: #RestInterfaceTest #test04canCreateMoreThanOneCartWithDifferentIDs stamp: 'JEA 12/3/2020 15:51:33'!
PASSED!

!testRun: #RestInterfaceTest #test05cannotAddToCartWithInvalidID stamp: 'JEA 12/3/2020 15:51:33'!
PASSED!

!testRun: #RestInterfaceTest #test06canAddItemToCartWithValidID stamp: 'JEA 12/3/2020 15:51:33'!
PASSED!

!testRun: #RestInterfaceTest #test07cannotCheckOutCartWithInvalidID stamp: 'JEA 12/3/2020 15:51:33'!
PASSED!

!testRun: #RestInterfaceTest #test08canCheckOutNonEmptyValidCartWithValidCreditCard stamp: 'JEA 12/3/2020 15:51:33'!
PASSED!

!testRun: #RestInterfaceTest #test09cannotListCartWithInvalidID stamp: 'JEA 12/3/2020 15:51:33'!
PASSED!

!testRun: #RestInterfaceTest #test10cannotInteractWithCartAfterTimeoutSinceCreated stamp: 'JEA 12/3/2020 15:51:33'!
PASSED!

!testRun: #RestInterfaceTest #test11cartClockResetsAfterAdd stamp: 'JEA 12/3/2020 15:51:33'!
PASSED!

!testRun: #RestInterfaceTest #test12cartClockResetsAfterListing stamp: 'JEA 12/3/2020 15:51:33'!
PASSED!

!testRun: #RestInterfaceTest #test14cannotListPurchasesOfInvalidClient stamp: 'JEA 12/3/2020 15:51:33'!
PASSED!

!testRun: #RestInterfaceTest #test15cannotListPurchasesOfClientWithInvalidPassword stamp: 'JEA 12/3/2020 15:51:33'!
PASSED!

!testRun: #RestInterfaceTest #test16canListPurchasesClientWhoNeverCheckedOut stamp: 'JEA 12/3/2020 15:51:33'!
FAILURE!

!testRun: #RestInterfaceTest #test17canListPurchasesClientWhoBoughtOneBook stamp: 'JEA 12/3/2020 15:51:33'!
FAILURE!

!testRun: #RestInterfaceTest #test18canListPurchasesClientWhoBoughtMoreThanOneBook stamp: 'JEA 12/3/2020 15:51:33'!
FAILURE!

!testRun: #RestInterfaceTest #test19canListPurchasesClientWhoCheckedOutMoreThanOneCart stamp: 'JEA 12/3/2020 15:51:33'!
FAILURE!

----SNAPSHOT----(3 December 2020 15:51:37) CuisUniversity-4384.image priorSource: 17784406!
!RestInterface class methodsFor: 'error messages' stamp: 'JEA 12/3/2020 15:51:51'!
cartIDInvalidOrTimedOutMessage

	^'The cart ID provided corresponds to an already checked out cart, or it does not correspond to an already created cart.'! !
!RestInterfaceTest methodsFor: 'as yet unclassified' stamp: 'JEA 12/3/2020 15:51:51' prior: 50889782!
test09cannotListCartWithInvalidID
	| restInterface |

	restInterface := RestInterface 
		authenticatingWith: AuthenticatorSimulator newSimulatingValidAuthentication 
		debitingWith: self itemsFrom: testObjectsFactory defaultCatalog 
		withClock: ClockSimulator newSimulatingRealTime withCartTimeout: testObjectsFactory cartTimeout.
	
	self should: [ restInterface listItemsInCartWithID: testObjectsFactory invalidCartID. ]
		raise: Error
		withMessageText: RestInterface cartIDInvalidOrTimedOutMessage.! !
!RestInterfaceTest methodsFor: 'as yet unclassified' stamp: 'JEA 12/3/2020 15:51:51' prior: 50891181!
test10cannotInteractWithCartAfterTimeoutSinceCreated
	| restInterface cartID clock |

	clock := ClockSimulator newSimulatingRealTime.

	restInterface := RestInterface 
		authenticatingWith: AuthenticatorSimulator newSimulatingValidAuthentication 
		debitingWith: self itemsFrom: testObjectsFactory defaultCatalog
		withClock: clock withCartTimeout: testObjectsFactory cartTimeout.
	
	cartID := restInterface 
		createCartFor: testObjectsFactory validClientID
		password: testObjectsFactory correctPassword.
	
	clock simulateAdvancing: testObjectsFactory cartTimeout.
	
	self should: [ 
		restInterface 
			add: 2 
			of: testObjectsFactory itemSoldByTheStore 
			toCartWithID: cartID. 
		]
		raise: Error
		withMessageText: RestInterface cartIDInvalidOrTimedOutMessage.
	
	self should: [ restInterface listItemsInCartWithID: cartID. ]
		raise: Error
		withMessageText: RestInterface cartIDInvalidOrTimedOutMessage.
	
	self should: [ 
		restInterface 
			checkOutCartWithID: cartID 
			withCardNumber: testObjectsFactory validCardNumber 
			expiring: testObjectsFactory expirationDateNotReached 
			owner: testObjectsFactory validClientID.
		]
		raise: Error
		withMessageText: RestInterface cartIDInvalidOrTimedOutMessage.! !
!RestInterface methodsFor: 'as yet unclassified' stamp: 'JEA 12/3/2020 15:51:51' prior: 50888247!
ensureCartIDIsValid: aCartID
	
	cartSessions at: aCartID 
		ifAbsent: [ self error: self class cartIDInvalidOrTimedOutMessage. ].! !
!RestInterfaceTest methodsFor: 'as yet unclassified' stamp: 'JEA 12/3/2020 15:51:51' prior: 50889532!
test05cannotAddToCartWithInvalidID
	| restInterface |

	restInterface := RestInterface 
		authenticatingWith: AuthenticatorSimulator newSimulatingValidAuthentication 
		debitingWith: self itemsFrom: testObjectsFactory defaultCatalog 
		withClock: ClockSimulator newSimulatingRealTime withCartTimeout: testObjectsFactory cartTimeout.
	
	self should: [ 
		restInterface 
			add: 1 
			of: testObjectsFactory itemSoldByTheStore 
			toCartWithID: testObjectsFactory invalidCartID. 
		]
		raise: Error
		withMessageText: RestInterface cartIDInvalidOrTimedOutMessage.! !
!RestInterfaceTest methodsFor: 'as yet unclassified' stamp: 'JEA 12/3/2020 15:51:51' prior: 50890943!
test08canCheckOutNonEmptyValidCartWithValidCreditCard
	| restInterface cartID transactionID |

	restInterface := RestInterface 
		authenticatingWith: AuthenticatorSimulator newSimulatingValidAuthentication 
		debitingWith: self itemsFrom: testObjectsFactory defaultCatalog 
		withClock: ClockSimulator newSimulatingRealTime withCartTimeout: testObjectsFactory cartTimeout.
		
	cartID := restInterface
		createCartFor: testObjectsFactory validClientID
		password: testObjectsFactory correctPassword.
		
	restInterface 
		add: 1 
		of: testObjectsFactory itemSoldByTheStore 
		toCartWithID: cartID.
	
	transactionID := restInterface 
		checkOutCartWithID: cartID 
		withCardNumber: testObjectsFactory validCardNumber 
		expiring: testObjectsFactory expirationDateNotReached 
		owner: testObjectsFactory validCreditCardOwnersName.
	
	self assert: testObjectsFactory itemSoldByTheStorePrice 
		equals: (restInterface moneyDebitedInTransactionWithID: transactionID).
	
	self should: [ restInterface listItemsInCartWithID: cartID ]
		raise: Error
		withMessageText: RestInterface cartIDInvalidOrTimedOutMessage.! !
!RestInterfaceTest methodsFor: 'as yet unclassified' stamp: 'JEA 12/3/2020 15:51:51' prior: 50889830!
test07cannotCheckOutCartWithInvalidID
	| restInterface |

	restInterface := RestInterface 
		authenticatingWith: AuthenticatorSimulator newSimulatingValidAuthentication 
		debitingWith: self itemsFrom: testObjectsFactory defaultCatalog withClock: ClockSimulator newSimulatingRealTime withCartTimeout: testObjectsFactory cartTimeout.
	
	self should: [ 
		restInterface 
			checkOutCartWithID: testObjectsFactory invalidCartID 
			withCardNumber: testObjectsFactory validCardNumber 
			expiring: testObjectsFactory expirationDateNotReached 
			owner: testObjectsFactory validCreditCardOwnersName. 
		]
		raise: Error
		withMessageText: RestInterface cartIDInvalidOrTimedOutMessage.! !
!RestInterface methodsFor: 'as yet unclassified' stamp: 'JEA 12/3/2020 15:51:51' prior: 50891061!
ensureCartIDIsNotTimedOut: aCartID
	
	(self cartSessionForID: aCartID) isTimedOut
		ifTrue: [ 
			self removeCartWithID: aCartID.
			self error: self class cartIDInvalidOrTimedOutMessage.
		 ].! !

!methodRemoval: RestInterface class #invalidCartIDMessage stamp: 'JEA 12/3/2020 15:51:51'!
invalidCartIDMessage

	^'The cart ID provided corresponds to an already checked out cart, or it does not correspond to an already created cart.'!

!testRun: #RestInterfaceTest #test01cannotCreateCartForInvalidClientID stamp: 'JEA 12/3/2020 15:51:54'!
PASSED!

!testRun: #RestInterfaceTest #test02cannotCreateCartForClientWithWrongPassword stamp: 'JEA 12/3/2020 15:51:54'!
PASSED!

!testRun: #RestInterfaceTest #test03canCreateCartForWellAuthenticatedClient stamp: 'JEA 12/3/2020 15:51:54'!
PASSED!

!testRun: #RestInterfaceTest #test04canCreateMoreThanOneCartWithDifferentIDs stamp: 'JEA 12/3/2020 15:51:54'!
PASSED!

!testRun: #RestInterfaceTest #test05cannotAddToCartWithInvalidID stamp: 'JEA 12/3/2020 15:51:54'!
PASSED!

!testRun: #RestInterfaceTest #test06canAddItemToCartWithValidID stamp: 'JEA 12/3/2020 15:51:54'!
PASSED!

!testRun: #RestInterfaceTest #test07cannotCheckOutCartWithInvalidID stamp: 'JEA 12/3/2020 15:51:54'!
PASSED!

!testRun: #RestInterfaceTest #test08canCheckOutNonEmptyValidCartWithValidCreditCard stamp: 'JEA 12/3/2020 15:51:54'!
PASSED!

!testRun: #RestInterfaceTest #test09cannotListCartWithInvalidID stamp: 'JEA 12/3/2020 15:51:54'!
PASSED!

!testRun: #RestInterfaceTest #test10cannotInteractWithCartAfterTimeoutSinceCreated stamp: 'JEA 12/3/2020 15:51:54'!
PASSED!

!testRun: #RestInterfaceTest #test11cartClockResetsAfterAdd stamp: 'JEA 12/3/2020 15:51:54'!
PASSED!

!testRun: #RestInterfaceTest #test12cartClockResetsAfterListing stamp: 'JEA 12/3/2020 15:51:54'!
PASSED!

!testRun: #RestInterfaceTest #test14cannotListPurchasesOfInvalidClient stamp: 'JEA 12/3/2020 15:51:54'!
PASSED!

!testRun: #RestInterfaceTest #test15cannotListPurchasesOfClientWithInvalidPassword stamp: 'JEA 12/3/2020 15:51:54'!
PASSED!

!testRun: #RestInterfaceTest #test16canListPurchasesClientWhoNeverCheckedOut stamp: 'JEA 12/3/2020 15:51:54'!
FAILURE!

!testRun: #RestInterfaceTest #test17canListPurchasesClientWhoBoughtOneBook stamp: 'JEA 12/3/2020 15:51:54'!
FAILURE!

!testRun: #RestInterfaceTest #test18canListPurchasesClientWhoBoughtMoreThanOneBook stamp: 'JEA 12/3/2020 15:51:54'!
FAILURE!

!testRun: #RestInterfaceTest #test19canListPurchasesClientWhoCheckedOutMoreThanOneCart stamp: 'JEA 12/3/2020 15:51:54'!
FAILURE!
!RestInterface class methodsFor: 'error messages' stamp: 'JEA 12/3/2020 15:52:20' prior: 50891290!
cartIDInvalidOrTimedOutMessage

	^'The cart ID provided was either timed out, checked out or never created.'! !
!RestInterface class methodsFor: 'error messages' stamp: 'JEA 12/3/2020 15:52:22' prior: 50891535!
cartIDInvalidOrTimedOutMessage

	^'The cart ID provided was either timed out, checked out or never created.'.! !
!RestInterface methodsFor: 'api - private' stamp: 'JEA 12/3/2020 15:53:19' prior: 50891452!
ensureCartIDIsNotTimedOut: aCartID
	
	(self cartSessionForID: aCartID) isTimedOut
		ifTrue: [ 
			"self removeCartWithID: aCartID."
			self error: self class cartIDInvalidOrTimedOutMessage.
		 ].! !

!testRun: #CartTest #test01NewCartsAreCreatedEmpty stamp: 'JEA 12/3/2020 15:53:20'!
PASSED!

!testRun: #CartTest #test02CanNotAddItemsThatDoNotBelongToStore stamp: 'JEA 12/3/2020 15:53:20'!
PASSED!

!testRun: #CartTest #test03AfterAddingAnItemTheCartIsNotEmptyAnymore stamp: 'JEA 12/3/2020 15:53:20'!
PASSED!

!testRun: #CartTest #test04CanNotAddNonPositiveNumberOfItems stamp: 'JEA 12/3/2020 15:53:20'!
PASSED!

!testRun: #CartTest #test05CanNotAddMoreThanOneItemNotSellByTheStore stamp: 'JEA 12/3/2020 15:53:21'!
PASSED!

!testRun: #CartTest #test06CartRemembersAddedItems stamp: 'JEA 12/3/2020 15:53:21'!
PASSED!

!testRun: #CartTest #test07CartDoesNotHoldNotAddedItems stamp: 'JEA 12/3/2020 15:53:21'!
PASSED!

!testRun: #CartTest #test08CartRemembersTheNumberOfAddedItems stamp: 'JEA 12/3/2020 15:53:21'!
PASSED!

!testRun: #CashierTest #test01CanNotCheckoutAnEmptyCart stamp: 'JEA 12/3/2020 15:53:21'!
PASSED!

!testRun: #CashierTest #test02CalculatedTotalIsCorrect stamp: 'JEA 12/3/2020 15:53:21'!
PASSED!

!testRun: #CashierTest #test03CanNotCheckoutWithAnExpiredCreditCart stamp: 'JEA 12/3/2020 15:53:21'!
PASSED!

!testRun: #CashierTest #test04CheckoutRegistersASale stamp: 'JEA 12/3/2020 15:53:21'!
PASSED!

!testRun: #CashierTest #test05CashierChargesCreditCardUsingMerchantProcessor stamp: 'JEA 12/3/2020 15:53:21'!
PASSED!

!testRun: #CashierTest #test06CashierDoesNotSaleWhenTheCreditCardHasNoCredit stamp: 'JEA 12/3/2020 15:53:21'!
PASSED!

!testRun: #CreditCardTest #test01cantCreateCardWithNumberTooShort stamp: 'JEA 12/3/2020 15:53:21'!
PASSED!

!testRun: #CreditCardTest #test02cantCreateCardWithNumberTooLong stamp: 'JEA 12/3/2020 15:53:21'!
PASSED!

!testRun: #CreditCardTest #test03cantCreateCardWithNumberNonNumeric stamp: 'JEA 12/3/2020 15:53:21'!
PASSED!

!testRun: #RestInterfaceTest #test01cannotCreateCartForInvalidClientID stamp: 'JEA 12/3/2020 15:53:21'!
PASSED!

!testRun: #RestInterfaceTest #test02cannotCreateCartForClientWithWrongPassword stamp: 'JEA 12/3/2020 15:53:21'!
PASSED!

!testRun: #RestInterfaceTest #test03canCreateCartForWellAuthenticatedClient stamp: 'JEA 12/3/2020 15:53:21'!
PASSED!

!testRun: #RestInterfaceTest #test04canCreateMoreThanOneCartWithDifferentIDs stamp: 'JEA 12/3/2020 15:53:21'!
PASSED!

!testRun: #RestInterfaceTest #test05cannotAddToCartWithInvalidID stamp: 'JEA 12/3/2020 15:53:21'!
PASSED!

!testRun: #RestInterfaceTest #test06canAddItemToCartWithValidID stamp: 'JEA 12/3/2020 15:53:21'!
PASSED!

!testRun: #RestInterfaceTest #test07cannotCheckOutCartWithInvalidID stamp: 'JEA 12/3/2020 15:53:21'!
PASSED!

!testRun: #RestInterfaceTest #test08canCheckOutNonEmptyValidCartWithValidCreditCard stamp: 'JEA 12/3/2020 15:53:21'!
PASSED!

!testRun: #RestInterfaceTest #test09cannotListCartWithInvalidID stamp: 'JEA 12/3/2020 15:53:21'!
PASSED!

!testRun: #RestInterfaceTest #test10cannotInteractWithCartAfterTimeoutSinceCreated stamp: 'JEA 12/3/2020 15:53:21'!
PASSED!

!testRun: #RestInterfaceTest #test11cartClockResetsAfterAdd stamp: 'JEA 12/3/2020 15:53:21'!
PASSED!

!testRun: #RestInterfaceTest #test12cartClockResetsAfterListing stamp: 'JEA 12/3/2020 15:53:21'!
PASSED!

!testRun: #RestInterfaceTest #test14cannotListPurchasesOfInvalidClient stamp: 'JEA 12/3/2020 15:53:21'!
PASSED!

!testRun: #RestInterfaceTest #test15cannotListPurchasesOfClientWithInvalidPassword stamp: 'JEA 12/3/2020 15:53:21'!
PASSED!

!testRun: #RestInterfaceTest #test16canListPurchasesClientWhoNeverCheckedOut stamp: 'JEA 12/3/2020 15:53:21'!
FAILURE!

!testRun: #RestInterfaceTest #test17canListPurchasesClientWhoBoughtOneBook stamp: 'JEA 12/3/2020 15:53:21'!
FAILURE!

!testRun: #RestInterfaceTest #test18canListPurchasesClientWhoBoughtMoreThanOneBook stamp: 'JEA 12/3/2020 15:53:21'!
FAILURE!

!testRun: #RestInterfaceTest #test19canListPurchasesClientWhoCheckedOutMoreThanOneCart stamp: 'JEA 12/3/2020 15:53:21'!
FAILURE!
!RestInterface methodsFor: 'api - private' stamp: 'JEA 12/3/2020 15:53:26' prior: 50891549!
ensureCartIDIsNotTimedOut: aCartID
	
	(self cartSessionForID: aCartID) isTimedOut
		ifTrue: [ 
			self removeCartWithID: aCartID.
			self error: self class cartIDInvalidOrTimedOutMessage.
		 ].! !
!RestInterface methodsFor: 'testing' stamp: 'JEA 12/3/2020 15:54:04'!
cartExists: aCartID

	cartSessions at: aCartID.! !
!RestInterface methodsFor: 'testing' stamp: 'JEA 12/3/2020 15:54:10' prior: 50891689!
cartExists: aCartID

	^cartSessions at: aCartID.! !
!RestInterface methodsFor: 'api - private' stamp: 'JEA 12/3/2020 15:54:45' prior: 50891360!
ensureCartIDIsValid: aCartID
	
	(self cartExists: aCartID) 
		ifFalse: [ self error: self class cartIDInvalidOrTimedOutMessage. ].! !
!RestInterface methodsFor: 'testing' stamp: 'JEA 12/3/2020 15:55:04' prior: 50891694!
cartExists: aCartID

	^cartSessions includesKey: aCartID.! !

!testRun: #RestInterfaceTest #test01cannotCreateCartForInvalidClientID stamp: 'JEA 12/3/2020 15:55:06'!
PASSED!

!testRun: #RestInterfaceTest #test02cannotCreateCartForClientWithWrongPassword stamp: 'JEA 12/3/2020 15:55:06'!
PASSED!

!testRun: #RestInterfaceTest #test03canCreateCartForWellAuthenticatedClient stamp: 'JEA 12/3/2020 15:55:06'!
PASSED!

!testRun: #RestInterfaceTest #test04canCreateMoreThanOneCartWithDifferentIDs stamp: 'JEA 12/3/2020 15:55:06'!
PASSED!

!testRun: #RestInterfaceTest #test05cannotAddToCartWithInvalidID stamp: 'JEA 12/3/2020 15:55:06'!
PASSED!

!testRun: #RestInterfaceTest #test06canAddItemToCartWithValidID stamp: 'JEA 12/3/2020 15:55:06'!
PASSED!

!testRun: #RestInterfaceTest #test07cannotCheckOutCartWithInvalidID stamp: 'JEA 12/3/2020 15:55:06'!
PASSED!

!testRun: #RestInterfaceTest #test08canCheckOutNonEmptyValidCartWithValidCreditCard stamp: 'JEA 12/3/2020 15:55:06'!
PASSED!

!testRun: #RestInterfaceTest #test09cannotListCartWithInvalidID stamp: 'JEA 12/3/2020 15:55:06'!
PASSED!

!testRun: #RestInterfaceTest #test10cannotInteractWithCartAfterTimeoutSinceCreated stamp: 'JEA 12/3/2020 15:55:06'!
PASSED!

!testRun: #RestInterfaceTest #test11cartClockResetsAfterAdd stamp: 'JEA 12/3/2020 15:55:06'!
PASSED!

!testRun: #RestInterfaceTest #test12cartClockResetsAfterListing stamp: 'JEA 12/3/2020 15:55:06'!
PASSED!

!testRun: #RestInterfaceTest #test14cannotListPurchasesOfInvalidClient stamp: 'JEA 12/3/2020 15:55:06'!
PASSED!

!testRun: #RestInterfaceTest #test15cannotListPurchasesOfClientWithInvalidPassword stamp: 'JEA 12/3/2020 15:55:06'!
PASSED!

!testRun: #RestInterfaceTest #test16canListPurchasesClientWhoNeverCheckedOut stamp: 'JEA 12/3/2020 15:55:06'!
FAILURE!

!testRun: #RestInterfaceTest #test17canListPurchasesClientWhoBoughtOneBook stamp: 'JEA 12/3/2020 15:55:06'!
FAILURE!

!testRun: #RestInterfaceTest #test18canListPurchasesClientWhoBoughtMoreThanOneBook stamp: 'JEA 12/3/2020 15:55:06'!
FAILURE!

!testRun: #RestInterfaceTest #test19canListPurchasesClientWhoCheckedOutMoreThanOneCart stamp: 'JEA 12/3/2020 15:55:06'!
FAILURE!
!RestInterface methodsFor: 'api - private' stamp: 'JEA 12/3/2020 15:55:20' prior: 50891680!
ensureCartIDIsNotTimedOut: aCartID
	
	(self cartSessionForID: aCartID) isTimedOut
		ifTrue: [ 
			"self removeCartWithID: aCartID."
			self error: self class cartIDInvalidOrTimedOutMessage.
		 ].! !

!testRun: #RestInterfaceTest #test01cannotCreateCartForInvalidClientID stamp: 'JEA 12/3/2020 15:55:22'!
PASSED!

!testRun: #RestInterfaceTest #test02cannotCreateCartForClientWithWrongPassword stamp: 'JEA 12/3/2020 15:55:22'!
PASSED!

!testRun: #RestInterfaceTest #test03canCreateCartForWellAuthenticatedClient stamp: 'JEA 12/3/2020 15:55:22'!
PASSED!

!testRun: #RestInterfaceTest #test04canCreateMoreThanOneCartWithDifferentIDs stamp: 'JEA 12/3/2020 15:55:22'!
PASSED!

!testRun: #RestInterfaceTest #test05cannotAddToCartWithInvalidID stamp: 'JEA 12/3/2020 15:55:22'!
PASSED!

!testRun: #RestInterfaceTest #test06canAddItemToCartWithValidID stamp: 'JEA 12/3/2020 15:55:22'!
PASSED!

!testRun: #RestInterfaceTest #test07cannotCheckOutCartWithInvalidID stamp: 'JEA 12/3/2020 15:55:22'!
PASSED!

!testRun: #RestInterfaceTest #test08canCheckOutNonEmptyValidCartWithValidCreditCard stamp: 'JEA 12/3/2020 15:55:22'!
PASSED!

!testRun: #RestInterfaceTest #test09cannotListCartWithInvalidID stamp: 'JEA 12/3/2020 15:55:22'!
PASSED!

!testRun: #RestInterfaceTest #test10cannotInteractWithCartAfterTimeoutSinceCreated stamp: 'JEA 12/3/2020 15:55:22'!
PASSED!

!testRun: #RestInterfaceTest #test11cartClockResetsAfterAdd stamp: 'JEA 12/3/2020 15:55:22'!
PASSED!

!testRun: #RestInterfaceTest #test12cartClockResetsAfterListing stamp: 'JEA 12/3/2020 15:55:22'!
PASSED!

!testRun: #RestInterfaceTest #test14cannotListPurchasesOfInvalidClient stamp: 'JEA 12/3/2020 15:55:22'!
PASSED!

!testRun: #RestInterfaceTest #test15cannotListPurchasesOfClientWithInvalidPassword stamp: 'JEA 12/3/2020 15:55:22'!
PASSED!

!testRun: #RestInterfaceTest #test16canListPurchasesClientWhoNeverCheckedOut stamp: 'JEA 12/3/2020 15:55:22'!
FAILURE!

!testRun: #RestInterfaceTest #test17canListPurchasesClientWhoBoughtOneBook stamp: 'JEA 12/3/2020 15:55:22'!
FAILURE!

!testRun: #RestInterfaceTest #test18canListPurchasesClientWhoBoughtMoreThanOneBook stamp: 'JEA 12/3/2020 15:55:22'!
FAILURE!

!testRun: #RestInterfaceTest #test19canListPurchasesClientWhoCheckedOutMoreThanOneCart stamp: 'JEA 12/3/2020 15:55:22'!
FAILURE!
!RestInterfaceTest methodsFor: 'tests - cart timeout' stamp: 'JEA 12/3/2020 15:55:57' prior: 50891318!
test10cannotInteractWithCartAfterTimeoutSinceCreated
	| restInterface cartID clock |

	clock := ClockSimulator newSimulatingRealTime.

	restInterface := RestInterface 
		authenticatingWith: AuthenticatorSimulator newSimulatingValidAuthentication 
		debitingWith: self itemsFrom: testObjectsFactory defaultCatalog
		withClock: clock withCartTimeout: testObjectsFactory cartTimeout.
	
	cartID := restInterface 
		createCartFor: testObjectsFactory validClientID
		password: testObjectsFactory correctPassword.
	
	clock simulateAdvancing: testObjectsFactory cartTimeout.
	
	self should: [ 
		restInterface 
			add: 2 
			of: testObjectsFactory itemSoldByTheStore 
			toCartWithID: cartID. 
		]
		raise: Error
		withMessageText: RestInterface cartIDInvalidOrTimedOutMessage.
	
	self should: [ restInterface listItemsInCartWithID: cartID. ]
		raise: Error
		withMessageText: RestInterface cartIDInvalidOrTimedOutMessage.
	
	self should: [ 
		restInterface 
			checkOutCartWithID: cartID 
			withCardNumber: testObjectsFactory validCardNumber 
			expiring: testObjectsFactory expirationDateNotReached 
			owner: testObjectsFactory validClientID.
		]
		raise: Error
		withMessageText: RestInterface cartIDInvalidOrTimedOutMessage.
	
	self assert: false equals: (restInterface cartExists: cartID).! !
!RestInterface methodsFor: 'testing' stamp: 'JEA 12/3/2020 15:56:11'!
cartIDExists: aCartID

	^cartSessions includesKey: aCartID.! !
!RestInterfaceTest methodsFor: 'as yet unclassified' stamp: 'JEA 12/3/2020 15:56:11' prior: 50891852!
test10cannotInteractWithCartAfterTimeoutSinceCreated
	| restInterface cartID clock |

	clock := ClockSimulator newSimulatingRealTime.

	restInterface := RestInterface 
		authenticatingWith: AuthenticatorSimulator newSimulatingValidAuthentication 
		debitingWith: self itemsFrom: testObjectsFactory defaultCatalog
		withClock: clock withCartTimeout: testObjectsFactory cartTimeout.
	
	cartID := restInterface 
		createCartFor: testObjectsFactory validClientID
		password: testObjectsFactory correctPassword.
	
	clock simulateAdvancing: testObjectsFactory cartTimeout.
	
	self should: [ 
		restInterface 
			add: 2 
			of: testObjectsFactory itemSoldByTheStore 
			toCartWithID: cartID. 
		]
		raise: Error
		withMessageText: RestInterface cartIDInvalidOrTimedOutMessage.
	
	self should: [ restInterface listItemsInCartWithID: cartID. ]
		raise: Error
		withMessageText: RestInterface cartIDInvalidOrTimedOutMessage.
	
	self should: [ 
		restInterface 
			checkOutCartWithID: cartID 
			withCardNumber: testObjectsFactory validCardNumber 
			expiring: testObjectsFactory expirationDateNotReached 
			owner: testObjectsFactory validClientID.
		]
		raise: Error
		withMessageText: RestInterface cartIDInvalidOrTimedOutMessage.
	
	self assert: false equals: (restInterface cartIDExists: cartID).! !
!RestInterface methodsFor: 'as yet unclassified' stamp: 'JEA 12/3/2020 15:56:11' prior: 50891699!
ensureCartIDIsValid: aCartID
	
	(self cartIDExists: aCartID) 
		ifFalse: [ self error: self class cartIDInvalidOrTimedOutMessage. ].! !

!methodRemoval: RestInterface #cartExists: stamp: 'JEA 12/3/2020 15:56:11'!
cartExists: aCartID

	^cartSessions includesKey: aCartID.!

!testRun: #RestInterfaceTest #test01cannotCreateCartForInvalidClientID stamp: 'JEA 12/3/2020 15:56:29'!
PASSED!

!testRun: #RestInterfaceTest #test02cannotCreateCartForClientWithWrongPassword stamp: 'JEA 12/3/2020 15:56:29'!
PASSED!

!testRun: #RestInterfaceTest #test03canCreateCartForWellAuthenticatedClient stamp: 'JEA 12/3/2020 15:56:29'!
PASSED!

!testRun: #RestInterfaceTest #test04canCreateMoreThanOneCartWithDifferentIDs stamp: 'JEA 12/3/2020 15:56:29'!
PASSED!

!testRun: #RestInterfaceTest #test05cannotAddToCartWithInvalidID stamp: 'JEA 12/3/2020 15:56:29'!
PASSED!

!testRun: #RestInterfaceTest #test06canAddItemToCartWithValidID stamp: 'JEA 12/3/2020 15:56:29'!
PASSED!

!testRun: #RestInterfaceTest #test07cannotCheckOutCartWithInvalidID stamp: 'JEA 12/3/2020 15:56:29'!
PASSED!

!testRun: #RestInterfaceTest #test08canCheckOutNonEmptyValidCartWithValidCreditCard stamp: 'JEA 12/3/2020 15:56:29'!
PASSED!

!testRun: #RestInterfaceTest #test09cannotListCartWithInvalidID stamp: 'JEA 12/3/2020 15:56:29'!
PASSED!

!testRun: #RestInterfaceTest #test10cannotInteractWithCartAfterTimeoutSinceCreated stamp: 'JEA 12/3/2020 15:56:29'!
FAILURE!

!testRun: #RestInterfaceTest #test11cartClockResetsAfterAdd stamp: 'JEA 12/3/2020 15:56:29'!
PASSED!

!testRun: #RestInterfaceTest #test12cartClockResetsAfterListing stamp: 'JEA 12/3/2020 15:56:29'!
PASSED!

!testRun: #RestInterfaceTest #test14cannotListPurchasesOfInvalidClient stamp: 'JEA 12/3/2020 15:56:29'!
PASSED!

!testRun: #RestInterfaceTest #test15cannotListPurchasesOfClientWithInvalidPassword stamp: 'JEA 12/3/2020 15:56:29'!
PASSED!

!testRun: #RestInterfaceTest #test16canListPurchasesClientWhoNeverCheckedOut stamp: 'JEA 12/3/2020 15:56:29'!
FAILURE!

!testRun: #RestInterfaceTest #test17canListPurchasesClientWhoBoughtOneBook stamp: 'JEA 12/3/2020 15:56:29'!
FAILURE!

!testRun: #RestInterfaceTest #test18canListPurchasesClientWhoBoughtMoreThanOneBook stamp: 'JEA 12/3/2020 15:56:29'!
FAILURE!

!testRun: #RestInterfaceTest #test19canListPurchasesClientWhoCheckedOutMoreThanOneCart stamp: 'JEA 12/3/2020 15:56:29'!
FAILURE!

!testRun: #RestInterfaceTest #test10cannotInteractWithCartAfterTimeoutSinceCreated stamp: 'JEA 12/3/2020 15:56:31'!
FAILURE!
!RestInterface methodsFor: 'api - private' stamp: 'JEA 12/3/2020 15:56:43' prior: 50891777!
ensureCartIDIsNotTimedOut: aCartID
	
	(self cartSessionForID: aCartID) isTimedOut
		ifTrue: [ 
			self removeCartWithID: aCartID.
			self error: self class cartIDInvalidOrTimedOutMessage.
		 ].! !

!testRun: #RestInterfaceTest #test01cannotCreateCartForInvalidClientID stamp: 'JEA 12/3/2020 15:56:45'!
PASSED!

!testRun: #RestInterfaceTest #test02cannotCreateCartForClientWithWrongPassword stamp: 'JEA 12/3/2020 15:56:45'!
PASSED!

!testRun: #RestInterfaceTest #test03canCreateCartForWellAuthenticatedClient stamp: 'JEA 12/3/2020 15:56:45'!
PASSED!

!testRun: #RestInterfaceTest #test04canCreateMoreThanOneCartWithDifferentIDs stamp: 'JEA 12/3/2020 15:56:45'!
PASSED!

!testRun: #RestInterfaceTest #test05cannotAddToCartWithInvalidID stamp: 'JEA 12/3/2020 15:56:45'!
PASSED!

!testRun: #RestInterfaceTest #test06canAddItemToCartWithValidID stamp: 'JEA 12/3/2020 15:56:45'!
PASSED!

!testRun: #RestInterfaceTest #test07cannotCheckOutCartWithInvalidID stamp: 'JEA 12/3/2020 15:56:45'!
PASSED!

!testRun: #RestInterfaceTest #test08canCheckOutNonEmptyValidCartWithValidCreditCard stamp: 'JEA 12/3/2020 15:56:45'!
PASSED!

!testRun: #RestInterfaceTest #test09cannotListCartWithInvalidID stamp: 'JEA 12/3/2020 15:56:45'!
PASSED!

!testRun: #RestInterfaceTest #test10cannotInteractWithCartAfterTimeoutSinceCreated stamp: 'JEA 12/3/2020 15:56:45'!
PASSED!

!testRun: #RestInterfaceTest #test11cartClockResetsAfterAdd stamp: 'JEA 12/3/2020 15:56:45'!
PASSED!

!testRun: #RestInterfaceTest #test12cartClockResetsAfterListing stamp: 'JEA 12/3/2020 15:56:45'!
PASSED!

!testRun: #RestInterfaceTest #test14cannotListPurchasesOfInvalidClient stamp: 'JEA 12/3/2020 15:56:45'!
PASSED!

!testRun: #RestInterfaceTest #test15cannotListPurchasesOfClientWithInvalidPassword stamp: 'JEA 12/3/2020 15:56:45'!
PASSED!

!testRun: #RestInterfaceTest #test16canListPurchasesClientWhoNeverCheckedOut stamp: 'JEA 12/3/2020 15:56:45'!
FAILURE!

!testRun: #RestInterfaceTest #test17canListPurchasesClientWhoBoughtOneBook stamp: 'JEA 12/3/2020 15:56:45'!
FAILURE!

!testRun: #RestInterfaceTest #test18canListPurchasesClientWhoBoughtMoreThanOneBook stamp: 'JEA 12/3/2020 15:56:45'!
FAILURE!

!testRun: #RestInterfaceTest #test19canListPurchasesClientWhoCheckedOutMoreThanOneCart stamp: 'JEA 12/3/2020 15:56:45'!
FAILURE!

!classDefinition: #ClientPurchasesReport category: 'TusLibros' stamp: 'JEA 12/3/2020 15:58:39'!
Object subclass: #ClientPurchasesReport
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!
!RestInterfaceTest methodsFor: 'tests - list purchases' stamp: 'JEA 12/3/2020 15:58:32' prior: 50889702!
test16canListPurchasesClientWhoNeverCheckedOut

	| restInterface |
	
	restInterface := RestInterface authenticatingWith: AuthenticatorSimulator new
							  debitingWith: self
							  itemsFrom: testObjectsFactory defaultCatalog
							  withClock: ClockSimulator newSimulatingRealTime
							  withCartTimeout: testObjectsFactory cartTimeout.
							
	self assert: (restInterface listPurchasesOf: testObjectsFactory validClientID 
	                                      password: testObjectsFactory correctPassword)
		equals: ClientPurchasesReport new.! !

!testRun: #RestInterfaceTest #test01cannotCreateCartForInvalidClientID stamp: 'JEA 12/3/2020 15:58:43'!
PASSED!

!testRun: #RestInterfaceTest #test02cannotCreateCartForClientWithWrongPassword stamp: 'JEA 12/3/2020 15:58:43'!
PASSED!

!testRun: #RestInterfaceTest #test03canCreateCartForWellAuthenticatedClient stamp: 'JEA 12/3/2020 15:58:43'!
PASSED!

!testRun: #RestInterfaceTest #test04canCreateMoreThanOneCartWithDifferentIDs stamp: 'JEA 12/3/2020 15:58:43'!
PASSED!

!testRun: #RestInterfaceTest #test05cannotAddToCartWithInvalidID stamp: 'JEA 12/3/2020 15:58:43'!
PASSED!

!testRun: #RestInterfaceTest #test06canAddItemToCartWithValidID stamp: 'JEA 12/3/2020 15:58:43'!
PASSED!

!testRun: #RestInterfaceTest #test07cannotCheckOutCartWithInvalidID stamp: 'JEA 12/3/2020 15:58:43'!
PASSED!

!testRun: #RestInterfaceTest #test08canCheckOutNonEmptyValidCartWithValidCreditCard stamp: 'JEA 12/3/2020 15:58:43'!
PASSED!

!testRun: #RestInterfaceTest #test09cannotListCartWithInvalidID stamp: 'JEA 12/3/2020 15:58:43'!
PASSED!

!testRun: #RestInterfaceTest #test10cannotInteractWithCartAfterTimeoutSinceCreated stamp: 'JEA 12/3/2020 15:58:43'!
PASSED!

!testRun: #RestInterfaceTest #test11cartClockResetsAfterAdd stamp: 'JEA 12/3/2020 15:58:43'!
PASSED!

!testRun: #RestInterfaceTest #test12cartClockResetsAfterListing stamp: 'JEA 12/3/2020 15:58:43'!
PASSED!

!testRun: #RestInterfaceTest #test14cannotListPurchasesOfInvalidClient stamp: 'JEA 12/3/2020 15:58:43'!
PASSED!

!testRun: #RestInterfaceTest #test15cannotListPurchasesOfClientWithInvalidPassword stamp: 'JEA 12/3/2020 15:58:43'!
PASSED!

!testRun: #RestInterfaceTest #test16canListPurchasesClientWhoNeverCheckedOut stamp: 'JEA 12/3/2020 15:58:43'!
FAILURE!

!testRun: #RestInterfaceTest #test17canListPurchasesClientWhoBoughtOneBook stamp: 'JEA 12/3/2020 15:58:43'!
FAILURE!

!testRun: #RestInterfaceTest #test18canListPurchasesClientWhoBoughtMoreThanOneBook stamp: 'JEA 12/3/2020 15:58:43'!
FAILURE!

!testRun: #RestInterfaceTest #test19canListPurchasesClientWhoCheckedOutMoreThanOneCart stamp: 'JEA 12/3/2020 15:58:43'!
FAILURE!
!RestInterface methodsFor: 'api' stamp: 'JEA 12/3/2020 15:59:11' prior: 50887444!
listPurchasesOf: aClientID password: aPassword

	self authenticate: aClientID with: aPassword.
	
	^ClientPurchasesReport new.
					
	! !

!testRun: #RestInterfaceTest #test01cannotCreateCartForInvalidClientID stamp: 'JEA 12/3/2020 15:59:12'!
PASSED!

!testRun: #RestInterfaceTest #test02cannotCreateCartForClientWithWrongPassword stamp: 'JEA 12/3/2020 15:59:12'!
PASSED!

!testRun: #RestInterfaceTest #test03canCreateCartForWellAuthenticatedClient stamp: 'JEA 12/3/2020 15:59:12'!
PASSED!

!testRun: #RestInterfaceTest #test04canCreateMoreThanOneCartWithDifferentIDs stamp: 'JEA 12/3/2020 15:59:12'!
PASSED!

!testRun: #RestInterfaceTest #test05cannotAddToCartWithInvalidID stamp: 'JEA 12/3/2020 15:59:12'!
PASSED!

!testRun: #RestInterfaceTest #test06canAddItemToCartWithValidID stamp: 'JEA 12/3/2020 15:59:12'!
PASSED!

!testRun: #RestInterfaceTest #test07cannotCheckOutCartWithInvalidID stamp: 'JEA 12/3/2020 15:59:12'!
PASSED!

!testRun: #RestInterfaceTest #test08canCheckOutNonEmptyValidCartWithValidCreditCard stamp: 'JEA 12/3/2020 15:59:12'!
PASSED!

!testRun: #RestInterfaceTest #test09cannotListCartWithInvalidID stamp: 'JEA 12/3/2020 15:59:12'!
PASSED!

!testRun: #RestInterfaceTest #test10cannotInteractWithCartAfterTimeoutSinceCreated stamp: 'JEA 12/3/2020 15:59:12'!
PASSED!

!testRun: #RestInterfaceTest #test11cartClockResetsAfterAdd stamp: 'JEA 12/3/2020 15:59:12'!
PASSED!

!testRun: #RestInterfaceTest #test12cartClockResetsAfterListing stamp: 'JEA 12/3/2020 15:59:12'!
PASSED!

!testRun: #RestInterfaceTest #test14cannotListPurchasesOfInvalidClient stamp: 'JEA 12/3/2020 15:59:12'!
PASSED!

!testRun: #RestInterfaceTest #test15cannotListPurchasesOfClientWithInvalidPassword stamp: 'JEA 12/3/2020 15:59:12'!
PASSED!

!testRun: #RestInterfaceTest #test16canListPurchasesClientWhoNeverCheckedOut stamp: 'JEA 12/3/2020 15:59:12'!
FAILURE!

!testRun: #RestInterfaceTest #test17canListPurchasesClientWhoBoughtOneBook stamp: 'JEA 12/3/2020 15:59:12'!
FAILURE!

!testRun: #RestInterfaceTest #test18canListPurchasesClientWhoBoughtMoreThanOneBook stamp: 'JEA 12/3/2020 15:59:12'!
FAILURE!

!testRun: #RestInterfaceTest #test19canListPurchasesClientWhoCheckedOutMoreThanOneCart stamp: 'JEA 12/3/2020 15:59:12'!
FAILURE!

!testRun: #RestInterfaceTest #test16canListPurchasesClientWhoNeverCheckedOut stamp: 'JEA 12/3/2020 15:59:23'!
FAILURE!
!RestInterfaceTest methodsFor: 'tests - list purchases' stamp: 'JEA 12/3/2020 16:00:16' prior: 50892109!
test16canListPurchasesClientWhoNeverCheckedOut

	| restInterface |
	
	restInterface := RestInterface authenticatingWith: AuthenticatorSimulator new
							  debitingWith: self
							  itemsFrom: testObjectsFactory defaultCatalog
							  withClock: ClockSimulator newSimulatingRealTime
							  withCartTimeout: testObjectsFactory cartTimeout.
							
	self assert: (restInterface listPurchasesOf: testObjectsFactory validClientID 
	                                      password: testObjectsFactory correctPassword) isEmpty.! !

!testRun: #RestInterfaceTest #test01cannotCreateCartForInvalidClientID stamp: 'JEA 12/3/2020 16:00:18'!
PASSED!

!testRun: #RestInterfaceTest #test02cannotCreateCartForClientWithWrongPassword stamp: 'JEA 12/3/2020 16:00:18'!
PASSED!

!testRun: #RestInterfaceTest #test03canCreateCartForWellAuthenticatedClient stamp: 'JEA 12/3/2020 16:00:18'!
PASSED!

!testRun: #RestInterfaceTest #test04canCreateMoreThanOneCartWithDifferentIDs stamp: 'JEA 12/3/2020 16:00:18'!
PASSED!

!testRun: #RestInterfaceTest #test05cannotAddToCartWithInvalidID stamp: 'JEA 12/3/2020 16:00:18'!
PASSED!

!testRun: #RestInterfaceTest #test06canAddItemToCartWithValidID stamp: 'JEA 12/3/2020 16:00:18'!
PASSED!

!testRun: #RestInterfaceTest #test07cannotCheckOutCartWithInvalidID stamp: 'JEA 12/3/2020 16:00:18'!
PASSED!

!testRun: #RestInterfaceTest #test08canCheckOutNonEmptyValidCartWithValidCreditCard stamp: 'JEA 12/3/2020 16:00:18'!
PASSED!

!testRun: #RestInterfaceTest #test09cannotListCartWithInvalidID stamp: 'JEA 12/3/2020 16:00:18'!
PASSED!

!testRun: #RestInterfaceTest #test10cannotInteractWithCartAfterTimeoutSinceCreated stamp: 'JEA 12/3/2020 16:00:18'!
PASSED!

!testRun: #RestInterfaceTest #test11cartClockResetsAfterAdd stamp: 'JEA 12/3/2020 16:00:18'!
PASSED!

!testRun: #RestInterfaceTest #test12cartClockResetsAfterListing stamp: 'JEA 12/3/2020 16:00:18'!
PASSED!

!testRun: #RestInterfaceTest #test14cannotListPurchasesOfInvalidClient stamp: 'JEA 12/3/2020 16:00:18'!
PASSED!

!testRun: #RestInterfaceTest #test15cannotListPurchasesOfClientWithInvalidPassword stamp: 'JEA 12/3/2020 16:00:18'!
PASSED!

!testRun: #RestInterfaceTest #test16canListPurchasesClientWhoNeverCheckedOut stamp: 'JEA 12/3/2020 16:00:18'!
ERROR!

!testRun: #RestInterfaceTest #test17canListPurchasesClientWhoBoughtOneBook stamp: 'JEA 12/3/2020 16:00:18'!
FAILURE!

!testRun: #RestInterfaceTest #test18canListPurchasesClientWhoBoughtMoreThanOneBook stamp: 'JEA 12/3/2020 16:00:18'!
FAILURE!

!testRun: #RestInterfaceTest #test19canListPurchasesClientWhoCheckedOutMoreThanOneCart stamp: 'JEA 12/3/2020 16:00:18'!
FAILURE!
!ClientPurchasesReport methodsFor: 'queries' stamp: 'JEA 12/3/2020 16:00:34'!
isEmpty

	^true.! !

!testRun: #RestInterfaceTest #test01cannotCreateCartForInvalidClientID stamp: 'JEA 12/3/2020 16:00:37'!
PASSED!

!testRun: #RestInterfaceTest #test02cannotCreateCartForClientWithWrongPassword stamp: 'JEA 12/3/2020 16:00:37'!
PASSED!

!testRun: #RestInterfaceTest #test03canCreateCartForWellAuthenticatedClient stamp: 'JEA 12/3/2020 16:00:37'!
PASSED!

!testRun: #RestInterfaceTest #test04canCreateMoreThanOneCartWithDifferentIDs stamp: 'JEA 12/3/2020 16:00:37'!
PASSED!

!testRun: #RestInterfaceTest #test05cannotAddToCartWithInvalidID stamp: 'JEA 12/3/2020 16:00:37'!
PASSED!

!testRun: #RestInterfaceTest #test06canAddItemToCartWithValidID stamp: 'JEA 12/3/2020 16:00:37'!
PASSED!

!testRun: #RestInterfaceTest #test07cannotCheckOutCartWithInvalidID stamp: 'JEA 12/3/2020 16:00:37'!
PASSED!

!testRun: #RestInterfaceTest #test08canCheckOutNonEmptyValidCartWithValidCreditCard stamp: 'JEA 12/3/2020 16:00:37'!
PASSED!

!testRun: #RestInterfaceTest #test09cannotListCartWithInvalidID stamp: 'JEA 12/3/2020 16:00:37'!
PASSED!

!testRun: #RestInterfaceTest #test10cannotInteractWithCartAfterTimeoutSinceCreated stamp: 'JEA 12/3/2020 16:00:37'!
PASSED!

!testRun: #RestInterfaceTest #test11cartClockResetsAfterAdd stamp: 'JEA 12/3/2020 16:00:37'!
PASSED!

!testRun: #RestInterfaceTest #test12cartClockResetsAfterListing stamp: 'JEA 12/3/2020 16:00:37'!
PASSED!

!testRun: #RestInterfaceTest #test14cannotListPurchasesOfInvalidClient stamp: 'JEA 12/3/2020 16:00:37'!
PASSED!

!testRun: #RestInterfaceTest #test15cannotListPurchasesOfClientWithInvalidPassword stamp: 'JEA 12/3/2020 16:00:37'!
PASSED!

!testRun: #RestInterfaceTest #test16canListPurchasesClientWhoNeverCheckedOut stamp: 'JEA 12/3/2020 16:00:37'!
PASSED!

!testRun: #RestInterfaceTest #test17canListPurchasesClientWhoBoughtOneBook stamp: 'JEA 12/3/2020 16:00:37'!
FAILURE!

!testRun: #RestInterfaceTest #test18canListPurchasesClientWhoBoughtMoreThanOneBook stamp: 'JEA 12/3/2020 16:00:37'!
FAILURE!

!testRun: #RestInterfaceTest #test19canListPurchasesClientWhoCheckedOutMoreThanOneCart stamp: 'JEA 12/3/2020 16:00:37'!
FAILURE!
!RestInterfaceTest methodsFor: 'tests - list purchases' stamp: 'JEA 12/3/2020 16:03:47' prior: 50889350!
test17canListPurchasesClientWhoBoughtOneBook

	| restInterface cartID clientPurchasesReport |
	
	restInterface := RestInterface authenticatingWith:  AuthenticatorSimulator new
							  debitingWith:  self
							  itemsFrom:  testObjectsFactory defaultCatalog
							  withClock:  ClockSimulator newSimulatingRealTime
							  withCartTimeout: testObjectsFactory cartTimeout.
	
	cartID := restInterface createCartFor: testObjectsFactory validClientID password: testObjectsFactory correctPassword.
	
	restInterface add: 1 of: testObjectsFactory itemSoldByTheStore toCartWithID: cartID.
	
	restInterface checkOutCartWithID: cartID 
			     withCardNumber: testObjectsFactory validCardNumber 
			     expiring:  testObjectsFactory expirationDateNotReached 
			     owner: testObjectsFactory validCreditCardOwnersName.
							
	clientPurchasesReport := (restInterface listPurchasesOf: testObjectsFactory validClientID 
	                                      password: testObjectsFactory correctPassword).
	self assert: (
		clientPurchasesReport 
			includes: testObjectsFactory itemSoldByTheStore 
			boughtFor: testObjectsFactory itemSoldByTheStorePrice
		).

	self assert: 0 equals: clientPurchasesReport total.! !

!testRun: #RestInterfaceTest #test17canListPurchasesClientWhoBoughtOneBook stamp: 'JEA 12/3/2020 16:03:58'!
ERROR!
!ClientPurchasesReport methodsFor: 'queries' stamp: 'JEA 12/3/2020 16:04:25'!
includes: anItem boughtFor: anAmount! !

!methodRemoval: ClientPurchasesReport #includes:boughtFor: stamp: 'JEA 12/3/2020 16:04:32'!
includes: anItem boughtFor: anAmount!
!RestInterfaceTest methodsFor: 'tests - list purchases' stamp: 'JEA 12/3/2020 16:04:44' prior: 50892427!
test17canListPurchasesClientWhoBoughtOneBook

	| restInterface cartID clientPurchasesReport |
	
	restInterface := RestInterface authenticatingWith:  AuthenticatorSimulator new
							  debitingWith:  self
							  itemsFrom:  testObjectsFactory defaultCatalog
							  withClock:  ClockSimulator newSimulatingRealTime
							  withCartTimeout: testObjectsFactory cartTimeout.
	
	cartID := restInterface createCartFor: testObjectsFactory validClientID password: testObjectsFactory correctPassword.
	
	restInterface add: 1 of: testObjectsFactory itemSoldByTheStore toCartWithID: cartID.
	
	restInterface checkOutCartWithID: cartID 
			     withCardNumber: testObjectsFactory validCardNumber 
			     expiring:  testObjectsFactory expirationDateNotReached 
			     owner: testObjectsFactory validCreditCardOwnersName.
							
	clientPurchasesReport := (restInterface listPurchasesOf: testObjectsFactory validClientID 
	                                      password: testObjectsFactory correctPassword).
	self assert: (
		clientPurchasesReport 
			includes: 1 
			of: testObjectsFactory itemSoldByTheStore 
			boughtFor: testObjectsFactory itemSoldByTheStorePrice
		).

	self assert: 0 equals: clientPurchasesReport total.! !

!testRun: #RestInterfaceTest #test01cannotCreateCartForInvalidClientID stamp: 'JEA 12/3/2020 16:04:56'!
PASSED!

!testRun: #RestInterfaceTest #test02cannotCreateCartForClientWithWrongPassword stamp: 'JEA 12/3/2020 16:04:56'!
PASSED!

!testRun: #RestInterfaceTest #test03canCreateCartForWellAuthenticatedClient stamp: 'JEA 12/3/2020 16:04:56'!
PASSED!

!testRun: #RestInterfaceTest #test04canCreateMoreThanOneCartWithDifferentIDs stamp: 'JEA 12/3/2020 16:04:56'!
PASSED!

!testRun: #RestInterfaceTest #test05cannotAddToCartWithInvalidID stamp: 'JEA 12/3/2020 16:04:56'!
PASSED!

!testRun: #RestInterfaceTest #test06canAddItemToCartWithValidID stamp: 'JEA 12/3/2020 16:04:56'!
PASSED!

!testRun: #RestInterfaceTest #test07cannotCheckOutCartWithInvalidID stamp: 'JEA 12/3/2020 16:04:56'!
PASSED!

!testRun: #RestInterfaceTest #test08canCheckOutNonEmptyValidCartWithValidCreditCard stamp: 'JEA 12/3/2020 16:04:56'!
PASSED!

!testRun: #RestInterfaceTest #test09cannotListCartWithInvalidID stamp: 'JEA 12/3/2020 16:04:56'!
PASSED!

!testRun: #RestInterfaceTest #test10cannotInteractWithCartAfterTimeoutSinceCreated stamp: 'JEA 12/3/2020 16:04:56'!
PASSED!

!testRun: #RestInterfaceTest #test11cartClockResetsAfterAdd stamp: 'JEA 12/3/2020 16:04:56'!
PASSED!

!testRun: #RestInterfaceTest #test12cartClockResetsAfterListing stamp: 'JEA 12/3/2020 16:04:56'!
PASSED!

!testRun: #RestInterfaceTest #test14cannotListPurchasesOfInvalidClient stamp: 'JEA 12/3/2020 16:04:56'!
PASSED!

!testRun: #RestInterfaceTest #test15cannotListPurchasesOfClientWithInvalidPassword stamp: 'JEA 12/3/2020 16:04:56'!
PASSED!

!testRun: #RestInterfaceTest #test16canListPurchasesClientWhoNeverCheckedOut stamp: 'JEA 12/3/2020 16:04:56'!
PASSED!

!testRun: #RestInterfaceTest #test17canListPurchasesClientWhoBoughtOneBook stamp: 'JEA 12/3/2020 16:04:56'!
ERROR!

!testRun: #RestInterfaceTest #test18canListPurchasesClientWhoBoughtMoreThanOneBook stamp: 'JEA 12/3/2020 16:04:56'!
FAILURE!

!testRun: #RestInterfaceTest #test19canListPurchasesClientWhoCheckedOutMoreThanOneCart stamp: 'JEA 12/3/2020 16:04:56'!
FAILURE!
!ClientPurchasesReport methodsFor: 'queries' stamp: 'JEA 12/3/2020 16:05:30'!
includes: aQuantity of: anItem boughtFor: aPrice! !

Object subclass: #ClientPurchasesReport
	instanceVariableNames: 'quantity item price'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

!classDefinition: #ClientPurchasesReport category: 'TusLibros' stamp: 'JEA 12/3/2020 16:06:23'!
Object subclass: #ClientPurchasesReport
	instanceVariableNames: 'quantity item price'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!
!ClientPurchasesReport methodsFor: 'adding' stamp: 'JEA 12/3/2020 16:07:19'!
add: aQuantity of: anItem for: aPrice

	quantity := aQuantity.
	item := anItem.
	price := aPrice.! !
!ClientPurchasesReport methodsFor: 'queries' stamp: 'JEA 12/3/2020 16:07:42' prior: 50892586!
includes: aQuantity of: anItem boughtFor: aPrice

	quantity == aQuantity.
	item == anItem.
	price == aPrice.! !

!testRun: #RestInterfaceTest #test01cannotCreateCartForInvalidClientID stamp: 'JEA 12/3/2020 16:07:48'!
PASSED!

!testRun: #RestInterfaceTest #test02cannotCreateCartForClientWithWrongPassword stamp: 'JEA 12/3/2020 16:07:48'!
PASSED!

!testRun: #RestInterfaceTest #test03canCreateCartForWellAuthenticatedClient stamp: 'JEA 12/3/2020 16:07:48'!
PASSED!

!testRun: #RestInterfaceTest #test04canCreateMoreThanOneCartWithDifferentIDs stamp: 'JEA 12/3/2020 16:07:48'!
PASSED!

!testRun: #RestInterfaceTest #test05cannotAddToCartWithInvalidID stamp: 'JEA 12/3/2020 16:07:48'!
PASSED!

!testRun: #RestInterfaceTest #test06canAddItemToCartWithValidID stamp: 'JEA 12/3/2020 16:07:48'!
PASSED!

!testRun: #RestInterfaceTest #test07cannotCheckOutCartWithInvalidID stamp: 'JEA 12/3/2020 16:07:48'!
PASSED!

!testRun: #RestInterfaceTest #test08canCheckOutNonEmptyValidCartWithValidCreditCard stamp: 'JEA 12/3/2020 16:07:48'!
PASSED!

!testRun: #RestInterfaceTest #test09cannotListCartWithInvalidID stamp: 'JEA 12/3/2020 16:07:48'!
PASSED!

!testRun: #RestInterfaceTest #test10cannotInteractWithCartAfterTimeoutSinceCreated stamp: 'JEA 12/3/2020 16:07:48'!
PASSED!

!testRun: #RestInterfaceTest #test11cartClockResetsAfterAdd stamp: 'JEA 12/3/2020 16:07:48'!
PASSED!

!testRun: #RestInterfaceTest #test12cartClockResetsAfterListing stamp: 'JEA 12/3/2020 16:07:48'!
PASSED!

!testRun: #RestInterfaceTest #test14cannotListPurchasesOfInvalidClient stamp: 'JEA 12/3/2020 16:07:48'!
PASSED!

!testRun: #RestInterfaceTest #test15cannotListPurchasesOfClientWithInvalidPassword stamp: 'JEA 12/3/2020 16:07:48'!
PASSED!

!testRun: #RestInterfaceTest #test16canListPurchasesClientWhoNeverCheckedOut stamp: 'JEA 12/3/2020 16:07:48'!
PASSED!

!testRun: #RestInterfaceTest #test17canListPurchasesClientWhoBoughtOneBook stamp: 'JEA 12/3/2020 16:07:48'!
ERROR!

!testRun: #RestInterfaceTest #test18canListPurchasesClientWhoBoughtMoreThanOneBook stamp: 'JEA 12/3/2020 16:07:48'!
FAILURE!

!testRun: #RestInterfaceTest #test19canListPurchasesClientWhoCheckedOutMoreThanOneCart stamp: 'JEA 12/3/2020 16:07:48'!
FAILURE!

!testRun: #RestInterfaceTest #test17canListPurchasesClientWhoBoughtOneBook stamp: 'JEA 12/3/2020 16:07:50'!
ERROR!
!ClientPurchasesReport methodsFor: 'queries' stamp: 'JEA 12/3/2020 16:08:19' prior: 50892610!
includes: aQuantity of: anItem boughtFor: aPrice

	^quantity == aQuantity and: [ item == anItem and: [ price == aPrice. ]. ].
	! !

!testRun: #RestInterfaceTest #test01cannotCreateCartForInvalidClientID stamp: 'JEA 12/3/2020 16:08:21'!
PASSED!

!testRun: #RestInterfaceTest #test02cannotCreateCartForClientWithWrongPassword stamp: 'JEA 12/3/2020 16:08:21'!
PASSED!

!testRun: #RestInterfaceTest #test03canCreateCartForWellAuthenticatedClient stamp: 'JEA 12/3/2020 16:08:21'!
PASSED!

!testRun: #RestInterfaceTest #test04canCreateMoreThanOneCartWithDifferentIDs stamp: 'JEA 12/3/2020 16:08:21'!
PASSED!

!testRun: #RestInterfaceTest #test05cannotAddToCartWithInvalidID stamp: 'JEA 12/3/2020 16:08:21'!
PASSED!

!testRun: #RestInterfaceTest #test06canAddItemToCartWithValidID stamp: 'JEA 12/3/2020 16:08:21'!
PASSED!

!testRun: #RestInterfaceTest #test07cannotCheckOutCartWithInvalidID stamp: 'JEA 12/3/2020 16:08:21'!
PASSED!

!testRun: #RestInterfaceTest #test08canCheckOutNonEmptyValidCartWithValidCreditCard stamp: 'JEA 12/3/2020 16:08:21'!
PASSED!

!testRun: #RestInterfaceTest #test09cannotListCartWithInvalidID stamp: 'JEA 12/3/2020 16:08:21'!
PASSED!

!testRun: #RestInterfaceTest #test10cannotInteractWithCartAfterTimeoutSinceCreated stamp: 'JEA 12/3/2020 16:08:21'!
PASSED!

!testRun: #RestInterfaceTest #test11cartClockResetsAfterAdd stamp: 'JEA 12/3/2020 16:08:21'!
PASSED!

!testRun: #RestInterfaceTest #test12cartClockResetsAfterListing stamp: 'JEA 12/3/2020 16:08:21'!
PASSED!

!testRun: #RestInterfaceTest #test14cannotListPurchasesOfInvalidClient stamp: 'JEA 12/3/2020 16:08:21'!
PASSED!

!testRun: #RestInterfaceTest #test15cannotListPurchasesOfClientWithInvalidPassword stamp: 'JEA 12/3/2020 16:08:21'!
PASSED!

!testRun: #RestInterfaceTest #test16canListPurchasesClientWhoNeverCheckedOut stamp: 'JEA 12/3/2020 16:08:21'!
PASSED!

!testRun: #RestInterfaceTest #test17canListPurchasesClientWhoBoughtOneBook stamp: 'JEA 12/3/2020 16:08:21'!
FAILURE!

!testRun: #RestInterfaceTest #test18canListPurchasesClientWhoBoughtMoreThanOneBook stamp: 'JEA 12/3/2020 16:08:21'!
FAILURE!

!testRun: #RestInterfaceTest #test19canListPurchasesClientWhoCheckedOutMoreThanOneCart stamp: 'JEA 12/3/2020 16:08:21'!
FAILURE!

!testRun: #RestInterfaceTest #test17canListPurchasesClientWhoBoughtOneBook stamp: 'JEA 12/3/2020 16:08:23'!
FAILURE!
!ClientPurchasesReport methodsFor: 'queries' stamp: 'JEA 12/3/2020 16:08:41' prior: 50892686!
includes: aQuantity of: anItem boughtFor: aPrice

	^quantity = aQuantity and: [ item = anItem and: [ price = aPrice. ]. ].
	! !

!testRun: #CartTest #test01NewCartsAreCreatedEmpty stamp: 'JEA 12/3/2020 16:08:42'!
PASSED!

!testRun: #CartTest #test02CanNotAddItemsThatDoNotBelongToStore stamp: 'JEA 12/3/2020 16:08:42'!
PASSED!

!testRun: #CartTest #test03AfterAddingAnItemTheCartIsNotEmptyAnymore stamp: 'JEA 12/3/2020 16:08:42'!
PASSED!

!testRun: #CartTest #test04CanNotAddNonPositiveNumberOfItems stamp: 'JEA 12/3/2020 16:08:42'!
PASSED!

!testRun: #CartTest #test05CanNotAddMoreThanOneItemNotSellByTheStore stamp: 'JEA 12/3/2020 16:08:42'!
PASSED!

!testRun: #CartTest #test06CartRemembersAddedItems stamp: 'JEA 12/3/2020 16:08:42'!
PASSED!

!testRun: #CartTest #test07CartDoesNotHoldNotAddedItems stamp: 'JEA 12/3/2020 16:08:42'!
PASSED!

!testRun: #CartTest #test08CartRemembersTheNumberOfAddedItems stamp: 'JEA 12/3/2020 16:08:42'!
PASSED!

!testRun: #CashierTest #test01CanNotCheckoutAnEmptyCart stamp: 'JEA 12/3/2020 16:08:42'!
PASSED!

!testRun: #CashierTest #test02CalculatedTotalIsCorrect stamp: 'JEA 12/3/2020 16:08:42'!
PASSED!

!testRun: #CashierTest #test03CanNotCheckoutWithAnExpiredCreditCart stamp: 'JEA 12/3/2020 16:08:42'!
PASSED!

!testRun: #CashierTest #test04CheckoutRegistersASale stamp: 'JEA 12/3/2020 16:08:42'!
PASSED!

!testRun: #CashierTest #test05CashierChargesCreditCardUsingMerchantProcessor stamp: 'JEA 12/3/2020 16:08:42'!
PASSED!

!testRun: #CashierTest #test06CashierDoesNotSaleWhenTheCreditCardHasNoCredit stamp: 'JEA 12/3/2020 16:08:42'!
PASSED!

!testRun: #CreditCardTest #test01cantCreateCardWithNumberTooShort stamp: 'JEA 12/3/2020 16:08:42'!
PASSED!

!testRun: #CreditCardTest #test02cantCreateCardWithNumberTooLong stamp: 'JEA 12/3/2020 16:08:42'!
PASSED!

!testRun: #CreditCardTest #test03cantCreateCardWithNumberNonNumeric stamp: 'JEA 12/3/2020 16:08:42'!
PASSED!

!testRun: #RestInterfaceTest #test01cannotCreateCartForInvalidClientID stamp: 'JEA 12/3/2020 16:08:42'!
PASSED!

!testRun: #RestInterfaceTest #test02cannotCreateCartForClientWithWrongPassword stamp: 'JEA 12/3/2020 16:08:42'!
PASSED!

!testRun: #RestInterfaceTest #test03canCreateCartForWellAuthenticatedClient stamp: 'JEA 12/3/2020 16:08:42'!
PASSED!

!testRun: #RestInterfaceTest #test04canCreateMoreThanOneCartWithDifferentIDs stamp: 'JEA 12/3/2020 16:08:42'!
PASSED!

!testRun: #RestInterfaceTest #test05cannotAddToCartWithInvalidID stamp: 'JEA 12/3/2020 16:08:42'!
PASSED!

!testRun: #RestInterfaceTest #test06canAddItemToCartWithValidID stamp: 'JEA 12/3/2020 16:08:42'!
PASSED!

!testRun: #RestInterfaceTest #test07cannotCheckOutCartWithInvalidID stamp: 'JEA 12/3/2020 16:08:42'!
PASSED!

!testRun: #RestInterfaceTest #test08canCheckOutNonEmptyValidCartWithValidCreditCard stamp: 'JEA 12/3/2020 16:08:42'!
PASSED!

!testRun: #RestInterfaceTest #test09cannotListCartWithInvalidID stamp: 'JEA 12/3/2020 16:08:42'!
PASSED!

!testRun: #RestInterfaceTest #test10cannotInteractWithCartAfterTimeoutSinceCreated stamp: 'JEA 12/3/2020 16:08:42'!
PASSED!

!testRun: #RestInterfaceTest #test11cartClockResetsAfterAdd stamp: 'JEA 12/3/2020 16:08:42'!
PASSED!

!testRun: #RestInterfaceTest #test12cartClockResetsAfterListing stamp: 'JEA 12/3/2020 16:08:42'!
PASSED!

!testRun: #RestInterfaceTest #test14cannotListPurchasesOfInvalidClient stamp: 'JEA 12/3/2020 16:08:42'!
PASSED!

!testRun: #RestInterfaceTest #test15cannotListPurchasesOfClientWithInvalidPassword stamp: 'JEA 12/3/2020 16:08:42'!
PASSED!

!testRun: #RestInterfaceTest #test16canListPurchasesClientWhoNeverCheckedOut stamp: 'JEA 12/3/2020 16:08:42'!
PASSED!

!testRun: #RestInterfaceTest #test17canListPurchasesClientWhoBoughtOneBook stamp: 'JEA 12/3/2020 16:08:42'!
FAILURE!

!testRun: #RestInterfaceTest #test18canListPurchasesClientWhoBoughtMoreThanOneBook stamp: 'JEA 12/3/2020 16:08:42'!
FAILURE!

!testRun: #RestInterfaceTest #test19canListPurchasesClientWhoCheckedOutMoreThanOneCart stamp: 'JEA 12/3/2020 16:08:42'!
FAILURE!

!testRun: #RestInterfaceTest #test17canListPurchasesClientWhoBoughtOneBook stamp: 'JEA 12/3/2020 16:08:43'!
FAILURE!

Object subclass: #RestInterface
	instanceVariableNames: 'authenticator merchantProcessor lastCartID clock catalog transactionValues cartTimeout cartSessions clientPurchasesReports'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

!classDefinition: #RestInterface category: 'TusLibros' stamp: 'JEA 12/3/2020 16:09:30'!
Object subclass: #RestInterface
	instanceVariableNames: 'authenticator merchantProcessor lastCartID clock catalog transactionValues cartTimeout cartSessions clientPurchasesReports'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!
!RestInterface methodsFor: 'initialization' stamp: 'JEA 12/3/2020 16:09:42' prior: 50890535!
initializeAuthenticatingWith: anAuthenticator debitingWith: aMerchantProcessor itemsFrom: aCatalog withClock: aClock withCartTimeout: aTimeMeasure 

	authenticator := anAuthenticator.
	lastCartID := 0.
	catalog := aCatalog.
	clock := aClock.
	merchantProcessor := aMerchantProcessor.
	cartTimeout := aTimeMeasure.
	clientPurchasesReports := Dictionary new.
	transactionValues := Dictionary new.
	cartSessions := Dictionary new.! !
!RestInterface methodsFor: 'initialization' stamp: 'JEA 12/3/2020 16:09:46' prior: 50892914!
initializeAuthenticatingWith: anAuthenticator debitingWith: aMerchantProcessor itemsFrom: aCatalog withClock: aClock withCartTimeout: aTimeMeasure 

	authenticator := anAuthenticator.
	lastCartID := 0.
	catalog := aCatalog.
	clock := aClock.
	merchantProcessor := aMerchantProcessor.
	cartTimeout := aTimeMeasure.
	transactionValues := Dictionary new.
	cartSessions := Dictionary new.
	clientPurchasesReports := Dictionary new.! !
!RestInterface methodsFor: 'api' stamp: 'JEA 12/3/2020 16:10:19' prior: 50892195!
listPurchasesOf: aClientID password: aPassword

	self authenticate: aClientID with: aPassword.
	
	^self clientPurchasesReportFor: aClientID.
					
	! !
!RestInterface methodsFor: 'api - private' stamp: 'JEA 12/3/2020 16:10:47'!
clientPurchasesReportFor: aClientID

	clientPurchasesReports at: aClientID ifAbsent: [ ClientPurchasesReport new. ].! !

!testRun: #CartTest #test01NewCartsAreCreatedEmpty stamp: 'JEA 12/3/2020 16:10:48'!
PASSED!

!testRun: #CartTest #test02CanNotAddItemsThatDoNotBelongToStore stamp: 'JEA 12/3/2020 16:10:48'!
PASSED!

!testRun: #CartTest #test03AfterAddingAnItemTheCartIsNotEmptyAnymore stamp: 'JEA 12/3/2020 16:10:48'!
PASSED!

!testRun: #CartTest #test04CanNotAddNonPositiveNumberOfItems stamp: 'JEA 12/3/2020 16:10:48'!
PASSED!

!testRun: #CartTest #test05CanNotAddMoreThanOneItemNotSellByTheStore stamp: 'JEA 12/3/2020 16:10:48'!
PASSED!

!testRun: #CartTest #test06CartRemembersAddedItems stamp: 'JEA 12/3/2020 16:10:48'!
PASSED!

!testRun: #CartTest #test07CartDoesNotHoldNotAddedItems stamp: 'JEA 12/3/2020 16:10:48'!
PASSED!

!testRun: #CartTest #test08CartRemembersTheNumberOfAddedItems stamp: 'JEA 12/3/2020 16:10:48'!
PASSED!

!testRun: #CashierTest #test01CanNotCheckoutAnEmptyCart stamp: 'JEA 12/3/2020 16:10:48'!
PASSED!

!testRun: #CashierTest #test02CalculatedTotalIsCorrect stamp: 'JEA 12/3/2020 16:10:48'!
PASSED!

!testRun: #CashierTest #test03CanNotCheckoutWithAnExpiredCreditCart stamp: 'JEA 12/3/2020 16:10:48'!
PASSED!

!testRun: #CashierTest #test04CheckoutRegistersASale stamp: 'JEA 12/3/2020 16:10:48'!
PASSED!

!testRun: #CashierTest #test05CashierChargesCreditCardUsingMerchantProcessor stamp: 'JEA 12/3/2020 16:10:48'!
PASSED!

!testRun: #CashierTest #test06CashierDoesNotSaleWhenTheCreditCardHasNoCredit stamp: 'JEA 12/3/2020 16:10:48'!
PASSED!

!testRun: #CreditCardTest #test01cantCreateCardWithNumberTooShort stamp: 'JEA 12/3/2020 16:10:48'!
PASSED!

!testRun: #CreditCardTest #test02cantCreateCardWithNumberTooLong stamp: 'JEA 12/3/2020 16:10:48'!
PASSED!

!testRun: #CreditCardTest #test03cantCreateCardWithNumberNonNumeric stamp: 'JEA 12/3/2020 16:10:48'!
PASSED!

!testRun: #RestInterfaceTest #test01cannotCreateCartForInvalidClientID stamp: 'JEA 12/3/2020 16:10:48'!
PASSED!

!testRun: #RestInterfaceTest #test02cannotCreateCartForClientWithWrongPassword stamp: 'JEA 12/3/2020 16:10:48'!
PASSED!

!testRun: #RestInterfaceTest #test03canCreateCartForWellAuthenticatedClient stamp: 'JEA 12/3/2020 16:10:48'!
PASSED!

!testRun: #RestInterfaceTest #test04canCreateMoreThanOneCartWithDifferentIDs stamp: 'JEA 12/3/2020 16:10:48'!
PASSED!

!testRun: #RestInterfaceTest #test05cannotAddToCartWithInvalidID stamp: 'JEA 12/3/2020 16:10:48'!
PASSED!

!testRun: #RestInterfaceTest #test06canAddItemToCartWithValidID stamp: 'JEA 12/3/2020 16:10:48'!
PASSED!

!testRun: #RestInterfaceTest #test07cannotCheckOutCartWithInvalidID stamp: 'JEA 12/3/2020 16:10:48'!
PASSED!

!testRun: #RestInterfaceTest #test08canCheckOutNonEmptyValidCartWithValidCreditCard stamp: 'JEA 12/3/2020 16:10:48'!
PASSED!

!testRun: #RestInterfaceTest #test09cannotListCartWithInvalidID stamp: 'JEA 12/3/2020 16:10:48'!
PASSED!

!testRun: #RestInterfaceTest #test10cannotInteractWithCartAfterTimeoutSinceCreated stamp: 'JEA 12/3/2020 16:10:48'!
PASSED!

!testRun: #RestInterfaceTest #test11cartClockResetsAfterAdd stamp: 'JEA 12/3/2020 16:10:48'!
PASSED!

!testRun: #RestInterfaceTest #test12cartClockResetsAfterListing stamp: 'JEA 12/3/2020 16:10:48'!
PASSED!

!testRun: #RestInterfaceTest #test14cannotListPurchasesOfInvalidClient stamp: 'JEA 12/3/2020 16:10:48'!
PASSED!

!testRun: #RestInterfaceTest #test15cannotListPurchasesOfClientWithInvalidPassword stamp: 'JEA 12/3/2020 16:10:48'!
PASSED!

!testRun: #RestInterfaceTest #test16canListPurchasesClientWhoNeverCheckedOut stamp: 'JEA 12/3/2020 16:10:48'!
ERROR!

!testRun: #RestInterfaceTest #test17canListPurchasesClientWhoBoughtOneBook stamp: 'JEA 12/3/2020 16:10:48'!
ERROR!

!testRun: #RestInterfaceTest #test18canListPurchasesClientWhoBoughtMoreThanOneBook stamp: 'JEA 12/3/2020 16:10:48'!
FAILURE!

!testRun: #RestInterfaceTest #test19canListPurchasesClientWhoCheckedOutMoreThanOneCart stamp: 'JEA 12/3/2020 16:10:48'!
FAILURE!

!testRun: #RestInterfaceTest #test16canListPurchasesClientWhoNeverCheckedOut stamp: 'JEA 12/3/2020 16:10:49'!
ERROR!
!RestInterface methodsFor: 'api - private' stamp: 'JEA 12/3/2020 16:10:54' prior: 50892956!
clientPurchasesReportFor: aClientID

	^clientPurchasesReports at: aClientID ifAbsent: [ ClientPurchasesReport new. ].! !

!testRun: #CartTest #test01NewCartsAreCreatedEmpty stamp: 'JEA 12/3/2020 16:10:55'!
PASSED!

!testRun: #CartTest #test02CanNotAddItemsThatDoNotBelongToStore stamp: 'JEA 12/3/2020 16:10:55'!
PASSED!

!testRun: #CartTest #test03AfterAddingAnItemTheCartIsNotEmptyAnymore stamp: 'JEA 12/3/2020 16:10:55'!
PASSED!

!testRun: #CartTest #test04CanNotAddNonPositiveNumberOfItems stamp: 'JEA 12/3/2020 16:10:55'!
PASSED!

!testRun: #CartTest #test05CanNotAddMoreThanOneItemNotSellByTheStore stamp: 'JEA 12/3/2020 16:10:55'!
PASSED!

!testRun: #CartTest #test06CartRemembersAddedItems stamp: 'JEA 12/3/2020 16:10:55'!
PASSED!

!testRun: #CartTest #test07CartDoesNotHoldNotAddedItems stamp: 'JEA 12/3/2020 16:10:55'!
PASSED!

!testRun: #CartTest #test08CartRemembersTheNumberOfAddedItems stamp: 'JEA 12/3/2020 16:10:55'!
PASSED!

!testRun: #CashierTest #test01CanNotCheckoutAnEmptyCart stamp: 'JEA 12/3/2020 16:10:55'!
PASSED!

!testRun: #CashierTest #test02CalculatedTotalIsCorrect stamp: 'JEA 12/3/2020 16:10:55'!
PASSED!

!testRun: #CashierTest #test03CanNotCheckoutWithAnExpiredCreditCart stamp: 'JEA 12/3/2020 16:10:55'!
PASSED!

!testRun: #CashierTest #test04CheckoutRegistersASale stamp: 'JEA 12/3/2020 16:10:55'!
PASSED!

!testRun: #CashierTest #test05CashierChargesCreditCardUsingMerchantProcessor stamp: 'JEA 12/3/2020 16:10:55'!
PASSED!

!testRun: #CashierTest #test06CashierDoesNotSaleWhenTheCreditCardHasNoCredit stamp: 'JEA 12/3/2020 16:10:55'!
PASSED!

!testRun: #CreditCardTest #test01cantCreateCardWithNumberTooShort stamp: 'JEA 12/3/2020 16:10:55'!
PASSED!

!testRun: #CreditCardTest #test02cantCreateCardWithNumberTooLong stamp: 'JEA 12/3/2020 16:10:55'!
PASSED!

!testRun: #CreditCardTest #test03cantCreateCardWithNumberNonNumeric stamp: 'JEA 12/3/2020 16:10:55'!
PASSED!

!testRun: #RestInterfaceTest #test01cannotCreateCartForInvalidClientID stamp: 'JEA 12/3/2020 16:10:55'!
PASSED!

!testRun: #RestInterfaceTest #test02cannotCreateCartForClientWithWrongPassword stamp: 'JEA 12/3/2020 16:10:55'!
PASSED!

!testRun: #RestInterfaceTest #test03canCreateCartForWellAuthenticatedClient stamp: 'JEA 12/3/2020 16:10:55'!
PASSED!

!testRun: #RestInterfaceTest #test04canCreateMoreThanOneCartWithDifferentIDs stamp: 'JEA 12/3/2020 16:10:55'!
PASSED!

!testRun: #RestInterfaceTest #test05cannotAddToCartWithInvalidID stamp: 'JEA 12/3/2020 16:10:55'!
PASSED!

!testRun: #RestInterfaceTest #test06canAddItemToCartWithValidID stamp: 'JEA 12/3/2020 16:10:55'!
PASSED!

!testRun: #RestInterfaceTest #test07cannotCheckOutCartWithInvalidID stamp: 'JEA 12/3/2020 16:10:55'!
PASSED!

!testRun: #RestInterfaceTest #test08canCheckOutNonEmptyValidCartWithValidCreditCard stamp: 'JEA 12/3/2020 16:10:55'!
PASSED!

!testRun: #RestInterfaceTest #test09cannotListCartWithInvalidID stamp: 'JEA 12/3/2020 16:10:55'!
PASSED!

!testRun: #RestInterfaceTest #test10cannotInteractWithCartAfterTimeoutSinceCreated stamp: 'JEA 12/3/2020 16:10:55'!
PASSED!

!testRun: #RestInterfaceTest #test11cartClockResetsAfterAdd stamp: 'JEA 12/3/2020 16:10:55'!
PASSED!

!testRun: #RestInterfaceTest #test12cartClockResetsAfterListing stamp: 'JEA 12/3/2020 16:10:55'!
PASSED!

!testRun: #RestInterfaceTest #test14cannotListPurchasesOfInvalidClient stamp: 'JEA 12/3/2020 16:10:55'!
PASSED!

!testRun: #RestInterfaceTest #test15cannotListPurchasesOfClientWithInvalidPassword stamp: 'JEA 12/3/2020 16:10:55'!
PASSED!

!testRun: #RestInterfaceTest #test16canListPurchasesClientWhoNeverCheckedOut stamp: 'JEA 12/3/2020 16:10:55'!
PASSED!

!testRun: #RestInterfaceTest #test17canListPurchasesClientWhoBoughtOneBook stamp: 'JEA 12/3/2020 16:10:55'!
FAILURE!

!testRun: #RestInterfaceTest #test18canListPurchasesClientWhoBoughtMoreThanOneBook stamp: 'JEA 12/3/2020 16:10:55'!
FAILURE!

!testRun: #RestInterfaceTest #test19canListPurchasesClientWhoCheckedOutMoreThanOneCart stamp: 'JEA 12/3/2020 16:10:55'!
FAILURE!

!testRun: #RestInterfaceTest #test17canListPurchasesClientWhoBoughtOneBook stamp: 'JEA 12/3/2020 16:10:57'!
FAILURE!
!RestInterface methodsFor: 'api - private' stamp: 'JEA 12/3/2020 16:11:46' prior: 50893088!
clientPurchasesReportFor: aClientID

	^clientPurchasesReports at: aClientID 
		ifAbsent: [ 
			clientPurchasesReports at: aClientID put: ClientPurchasesReport new.
		].! !
!RestInterface methodsFor: 'api - private' stamp: 'JEA 12/3/2020 16:11:56' prior: 50893220!
clientPurchasesReportFor: aClientID

	^clientPurchasesReports at: aClientID 
		ifAbsent: [ clientPurchasesReports at: aClientID put: ClientPurchasesReport new. ].! !

!testRun: #CartTest #test01NewCartsAreCreatedEmpty stamp: 'JEA 12/3/2020 16:12:04'!
PASSED!

!testRun: #CartTest #test02CanNotAddItemsThatDoNotBelongToStore stamp: 'JEA 12/3/2020 16:12:04'!
PASSED!

!testRun: #CartTest #test03AfterAddingAnItemTheCartIsNotEmptyAnymore stamp: 'JEA 12/3/2020 16:12:04'!
PASSED!

!testRun: #CartTest #test04CanNotAddNonPositiveNumberOfItems stamp: 'JEA 12/3/2020 16:12:04'!
PASSED!

!testRun: #CartTest #test05CanNotAddMoreThanOneItemNotSellByTheStore stamp: 'JEA 12/3/2020 16:12:04'!
PASSED!

!testRun: #CartTest #test06CartRemembersAddedItems stamp: 'JEA 12/3/2020 16:12:04'!
PASSED!

!testRun: #CartTest #test07CartDoesNotHoldNotAddedItems stamp: 'JEA 12/3/2020 16:12:04'!
PASSED!

!testRun: #CartTest #test08CartRemembersTheNumberOfAddedItems stamp: 'JEA 12/3/2020 16:12:04'!
PASSED!

!testRun: #CashierTest #test01CanNotCheckoutAnEmptyCart stamp: 'JEA 12/3/2020 16:12:04'!
PASSED!

!testRun: #CashierTest #test02CalculatedTotalIsCorrect stamp: 'JEA 12/3/2020 16:12:04'!
PASSED!

!testRun: #CashierTest #test03CanNotCheckoutWithAnExpiredCreditCart stamp: 'JEA 12/3/2020 16:12:04'!
PASSED!

!testRun: #CashierTest #test04CheckoutRegistersASale stamp: 'JEA 12/3/2020 16:12:04'!
PASSED!

!testRun: #CashierTest #test05CashierChargesCreditCardUsingMerchantProcessor stamp: 'JEA 12/3/2020 16:12:04'!
PASSED!

!testRun: #CashierTest #test06CashierDoesNotSaleWhenTheCreditCardHasNoCredit stamp: 'JEA 12/3/2020 16:12:04'!
PASSED!

!testRun: #CreditCardTest #test01cantCreateCardWithNumberTooShort stamp: 'JEA 12/3/2020 16:12:04'!
PASSED!

!testRun: #CreditCardTest #test02cantCreateCardWithNumberTooLong stamp: 'JEA 12/3/2020 16:12:04'!
PASSED!

!testRun: #CreditCardTest #test03cantCreateCardWithNumberNonNumeric stamp: 'JEA 12/3/2020 16:12:04'!
PASSED!

!testRun: #RestInterfaceTest #test01cannotCreateCartForInvalidClientID stamp: 'JEA 12/3/2020 16:12:04'!
PASSED!

!testRun: #RestInterfaceTest #test02cannotCreateCartForClientWithWrongPassword stamp: 'JEA 12/3/2020 16:12:04'!
PASSED!

!testRun: #RestInterfaceTest #test03canCreateCartForWellAuthenticatedClient stamp: 'JEA 12/3/2020 16:12:04'!
PASSED!

!testRun: #RestInterfaceTest #test04canCreateMoreThanOneCartWithDifferentIDs stamp: 'JEA 12/3/2020 16:12:04'!
PASSED!

!testRun: #RestInterfaceTest #test05cannotAddToCartWithInvalidID stamp: 'JEA 12/3/2020 16:12:04'!
PASSED!

!testRun: #RestInterfaceTest #test06canAddItemToCartWithValidID stamp: 'JEA 12/3/2020 16:12:04'!
PASSED!

!testRun: #RestInterfaceTest #test07cannotCheckOutCartWithInvalidID stamp: 'JEA 12/3/2020 16:12:04'!
PASSED!

!testRun: #RestInterfaceTest #test08canCheckOutNonEmptyValidCartWithValidCreditCard stamp: 'JEA 12/3/2020 16:12:04'!
PASSED!

!testRun: #RestInterfaceTest #test09cannotListCartWithInvalidID stamp: 'JEA 12/3/2020 16:12:04'!
PASSED!

!testRun: #RestInterfaceTest #test10cannotInteractWithCartAfterTimeoutSinceCreated stamp: 'JEA 12/3/2020 16:12:04'!
PASSED!

!testRun: #RestInterfaceTest #test11cartClockResetsAfterAdd stamp: 'JEA 12/3/2020 16:12:04'!
PASSED!

!testRun: #RestInterfaceTest #test12cartClockResetsAfterListing stamp: 'JEA 12/3/2020 16:12:04'!
PASSED!

!testRun: #RestInterfaceTest #test14cannotListPurchasesOfInvalidClient stamp: 'JEA 12/3/2020 16:12:04'!
PASSED!

!testRun: #RestInterfaceTest #test15cannotListPurchasesOfClientWithInvalidPassword stamp: 'JEA 12/3/2020 16:12:04'!
PASSED!

!testRun: #RestInterfaceTest #test16canListPurchasesClientWhoNeverCheckedOut stamp: 'JEA 12/3/2020 16:12:04'!
PASSED!

!testRun: #RestInterfaceTest #test17canListPurchasesClientWhoBoughtOneBook stamp: 'JEA 12/3/2020 16:12:04'!
FAILURE!

!testRun: #RestInterfaceTest #test18canListPurchasesClientWhoBoughtMoreThanOneBook stamp: 'JEA 12/3/2020 16:12:04'!
FAILURE!

!testRun: #RestInterfaceTest #test19canListPurchasesClientWhoCheckedOutMoreThanOneCart stamp: 'JEA 12/3/2020 16:12:04'!
FAILURE!
!RestInterface methodsFor: 'api - private' stamp: 'JEA 12/3/2020 16:12:58' prior: 50890613!
checkOutCartWithID: aCartID withCard: aCard  
	| cashier |

	cashier:= Cashier 
		toCheckout: (self cartForID: aCartID)
		charging: aCard
		through: merchantProcessor
		on: clock now date
		registeringOn: transactionValues.	
	
	^cashier checkOut.! !
!RestInterface methodsFor: 'api' stamp: 'JEA 12/3/2020 16:14:29' prior: 50890597!
checkOutCartWithID: aCartID withCardNumber: aCardNumber expiring: aGregorianMonthOfYear owner: aName
	| creditCard transactionID |

	self ensureCartIDCanBeInteractedWith: aCartID.
	
	creditCard := CreditCard 
		numbered: aCardNumber 
		ownedBy: aName 
		expiringOn: aGregorianMonthOfYear.
	
	transactionID := self checkOutCartWithID: aCartID withCard: creditCard.
	
	self registerPurchasesInClientReportForCart: aCartID.
	
	self removeCartWithID: aCartID.
	
	^transactionID.! !
!RestInterface methodsFor: 'api - private' stamp: 'JEA 12/3/2020 16:14:58'!
registerPurchasesInClientReportForCart: aCartID

	(self cartSessionForID: aCartID).! !
!RestInterface methodsFor: 'api - private' stamp: 'JEA 12/3/2020 16:15:36' prior: 50893388!
registerPurchasesInClientReportForCart: aCartID

	self clientPurchasesReportFor: (self cartSessionForID: aCartID) owner.! !
!RestInterface methodsFor: 'api - private' stamp: 'JEA 12/3/2020 16:15:44' prior: 50893394!
registerPurchasesInClientReportForCart: aCartID

	self clientPurchasesReportFor: (self cartSessionForID: aCartID) ownersClientID.! !
!CartSession methodsFor: 'accessing' stamp: 'JEA 12/3/2020 16:16:06'!
ownersClientID

	^ownerClientID.! !
!CartSession methodsFor: 'accessing' stamp: 'JEA 12/3/2020 16:16:12'!
ownerClientID

	^ownerClientID.! !
!RestInterface methodsFor: 'as yet unclassified' stamp: 'JEA 12/3/2020 16:16:12' prior: 50893401!
registerPurchasesInClientReportForCart: aCartID

	self clientPurchasesReportFor: (self cartSessionForID: aCartID) ownerClientID.! !

!methodRemoval: CartSession #ownersClientID stamp: 'JEA 12/3/2020 16:16:12'!
ownersClientID

	^ownerClientID.!
!RestInterface methodsFor: 'api - private' stamp: 'JEA 12/3/2020 16:18:15' prior: 50893417!
registerPurchasesInClientReportForCart: aCartID
	| cartSession clientID clientPurchasesReport |

	cartSession := (self cartSessionForID: aCartID).
	
	clientID := cartSession ownerClientID.
	clientPurchasesReport := self clientPurchasesReportFor: clientID.
	
	! !
!RestInterface methodsFor: 'api - private' stamp: 'JEA 12/3/2020 16:18:46' prior: 50893428!
registerPurchasesInClientReportForCart: aCartID
	| cartSession clientID clientPurchasesReport |

	cartSession := (self cartSessionForID: aCartID).
	
	clientID := cartSession ownerClientID.
	clientPurchasesReport := self clientPurchasesReportFor: clientID.
	
	clientPurchasesReport addItemsFromCart: cartSession cart.! !

!methodRemoval: ClientPurchasesReport #add:of:for: stamp: 'JEA 12/3/2020 16:18:58'!
add: aQuantity of: anItem for: aPrice

	quantity := aQuantity.
	item := anItem.
	price := aPrice.!
!ClientPurchasesReport methodsFor: 'adding' stamp: 'JEA 12/3/2020 16:19:13'!
addItemsFromCart: aCart

	! !

!methodRemoval: ClientPurchasesReport #addItemsFromCart: stamp: 'JEA 12/3/2020 16:19:26'!
addItemsFromCart: aCart

	!
!RestInterface methodsFor: 'api - private' stamp: 'JEA 12/3/2020 16:20:02' prior: 50893440!
registerPurchasesInClientReportForCart: aCartID
	| cartSession clientID clientPurchasesReport |

	cartSession := (self cartSessionForID: aCartID).
	
	clientID := cartSession ownerClientID.
	clientPurchasesReport := self clientPurchasesReportFor: clientID.
	
	clientPurchasesReport addItems: cartSession listItems withTotalPrice: cartSession totalPrice.! !
!CartSession methodsFor: 'queries' stamp: 'JEA 12/3/2020 16:20:26'!
totalPrice

	^cart total.! !
!ClientPurchasesReport methodsFor: 'adding' stamp: 'JEA 12/3/2020 16:21:13'!
addItems: aBag withTotalPrice: aPrice

	! !

Object subclass: #ClientPurchasesReport
	instanceVariableNames: 'items totalPrice'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

!classDefinition: #ClientPurchasesReport category: 'TusLibros' stamp: 'JEA 12/3/2020 16:21:51'!
Object subclass: #ClientPurchasesReport
	instanceVariableNames: 'items totalPrice'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!
!ClientPurchasesReport methodsFor: 'initialization' stamp: 'JEA 12/3/2020 16:22:32' overrides: 16896425!
initialize

	items := Bag new.
	totalPrice := 0.! !
!ClientPurchasesReport methodsFor: 'adding' stamp: 'JEA 12/3/2020 16:23:01' prior: 50893485!
addItems: anUnorderedCollection withTotalPrice: aPrice

	items := anUnorderedCollection asBag.
	totalPrice := aPrice.! !
!ClientPurchasesReport methodsFor: 'queries' stamp: 'JEA 12/3/2020 16:23:19'!
total

	^totalPrice.! !
!ClientPurchasesReport methodsFor: 'queries' stamp: 'JEA 12/3/2020 16:24:12' prior: 50892763!
includes: aQuantity of: anItem boughtFor: aPrice

	^(items occurrencesOf: anItem) = aQuantity.
	! !
!ClientPurchasesReport methodsFor: 'queries' stamp: 'JEA 12/3/2020 16:24:18'!
includes: aQuantity of: anItem

	^(items occurrencesOf: anItem) = aQuantity.
	! !

!methodRemoval: ClientPurchasesReport #includes:of:boughtFor: stamp: 'JEA 12/3/2020 16:24:21'!
includes: aQuantity of: anItem boughtFor: aPrice

	^(items occurrencesOf: anItem) = aQuantity.
	!
!RestInterfaceTest methodsFor: 'tests - list purchases' stamp: 'JEA 12/3/2020 16:24:43' prior: 50892480!
test17canListPurchasesClientWhoBoughtOneBook

	| restInterface cartID clientPurchasesReport |
	
	restInterface := RestInterface authenticatingWith:  AuthenticatorSimulator new
							  debitingWith:  self
							  itemsFrom:  testObjectsFactory defaultCatalog
							  withClock:  ClockSimulator newSimulatingRealTime
							  withCartTimeout: testObjectsFactory cartTimeout.
	
	cartID := restInterface createCartFor: testObjectsFactory validClientID password: testObjectsFactory correctPassword.
	
	restInterface add: 1 of: testObjectsFactory itemSoldByTheStore toCartWithID: cartID.
	
	restInterface checkOutCartWithID: cartID 
			     withCardNumber: testObjectsFactory validCardNumber 
			     expiring:  testObjectsFactory expirationDateNotReached 
			     owner: testObjectsFactory validCreditCardOwnersName.
							
	clientPurchasesReport := (restInterface listPurchasesOf: testObjectsFactory validClientID 
	                                      password: testObjectsFactory correctPassword).
	self assert: (
		clientPurchasesReport 
			includes: 1 
			of: testObjectsFactory itemSoldByTheStore
		).

	self assert: testObjectsFactory itemSoldByTheStorePrice equals: clientPurchasesReport total.! !

!testRun: #RestInterfaceTest #test01cannotCreateCartForInvalidClientID stamp: 'JEA 12/3/2020 16:24:48'!
PASSED!

!testRun: #RestInterfaceTest #test02cannotCreateCartForClientWithWrongPassword stamp: 'JEA 12/3/2020 16:24:48'!
PASSED!

!testRun: #RestInterfaceTest #test03canCreateCartForWellAuthenticatedClient stamp: 'JEA 12/3/2020 16:24:48'!
PASSED!

!testRun: #RestInterfaceTest #test04canCreateMoreThanOneCartWithDifferentIDs stamp: 'JEA 12/3/2020 16:24:48'!
PASSED!

!testRun: #RestInterfaceTest #test05cannotAddToCartWithInvalidID stamp: 'JEA 12/3/2020 16:24:48'!
PASSED!

!testRun: #RestInterfaceTest #test06canAddItemToCartWithValidID stamp: 'JEA 12/3/2020 16:24:48'!
PASSED!

!testRun: #RestInterfaceTest #test07cannotCheckOutCartWithInvalidID stamp: 'JEA 12/3/2020 16:24:48'!
PASSED!

!testRun: #RestInterfaceTest #test08canCheckOutNonEmptyValidCartWithValidCreditCard stamp: 'JEA 12/3/2020 16:24:48'!
PASSED!

!testRun: #RestInterfaceTest #test09cannotListCartWithInvalidID stamp: 'JEA 12/3/2020 16:24:48'!
PASSED!

!testRun: #RestInterfaceTest #test10cannotInteractWithCartAfterTimeoutSinceCreated stamp: 'JEA 12/3/2020 16:24:48'!
PASSED!

!testRun: #RestInterfaceTest #test11cartClockResetsAfterAdd stamp: 'JEA 12/3/2020 16:24:48'!
PASSED!

!testRun: #RestInterfaceTest #test12cartClockResetsAfterListing stamp: 'JEA 12/3/2020 16:24:48'!
PASSED!

!testRun: #RestInterfaceTest #test14cannotListPurchasesOfInvalidClient stamp: 'JEA 12/3/2020 16:24:48'!
PASSED!

!testRun: #RestInterfaceTest #test15cannotListPurchasesOfClientWithInvalidPassword stamp: 'JEA 12/3/2020 16:24:48'!
PASSED!

!testRun: #RestInterfaceTest #test16canListPurchasesClientWhoNeverCheckedOut stamp: 'JEA 12/3/2020 16:24:48'!
PASSED!

!testRun: #RestInterfaceTest #test17canListPurchasesClientWhoBoughtOneBook stamp: 'JEA 12/3/2020 16:24:48'!
PASSED!

!testRun: #RestInterfaceTest #test18canListPurchasesClientWhoBoughtMoreThanOneBook stamp: 'JEA 12/3/2020 16:24:48'!
FAILURE!

!testRun: #RestInterfaceTest #test19canListPurchasesClientWhoCheckedOutMoreThanOneCart stamp: 'JEA 12/3/2020 16:24:48'!
FAILURE!
!RestInterfaceTest methodsFor: 'tests - list purchases' stamp: 'JEA 12/3/2020 16:26:37' prior: 50889724!
test18canListPurchasesClientWhoBoughtMoreThanOneBook

	| restInterface clientPurchasesReport cartID expectedTotal |

	restInterface := RestInterface authenticatingWith:  AuthenticatorSimulator new
							  debitingWith:  self
							  itemsFrom:  testObjectsFactory threeItemCatalog
							  withClock:  ClockSimulator newSimulatingRealTime
							  withCartTimeout: testObjectsFactory cartTimeout.
	
	cartID := restInterface createCartFor: testObjectsFactory validClientID password: testObjectsFactory correctPassword.
	
	restInterface add: 1 of: testObjectsFactory threeItemCatalogItem1 toCartWithID: cartID.
	restInterface add: 2 of: testObjectsFactory threeItemCatalogItem2 toCartWithID: cartID.
	restInterface add: 4 of: testObjectsFactory threeItemCatalogItem3 toCartWithID: cartID.
	
	restInterface checkOutCartWithID: cartID 
			     withCardNumber: testObjectsFactory validCardNumber 
			     expiring:  testObjectsFactory expirationDateNotReached 
			     owner: testObjectsFactory validCreditCardOwnersName.
						
	expectedTotal := testObjectsFactory threeItemCatalogItem1Price +
				      (testObjectsFactory threeItemCatalogItem2Price * 2) +
			             (testObjectsFactory threeItemCatalogItem3Price * 4).
	
	clientPurchasesReport := restInterface 
		listPurchasesOf: testObjectsFactory validClientID
		password: testObjectsFactory correctPassword.

	self assert: expectedTotal equals: clientPurchasesReport total.! !

!testRun: #RestInterfaceTest #test01cannotCreateCartForInvalidClientID stamp: 'JEA 12/3/2020 16:26:43'!
PASSED!

!testRun: #RestInterfaceTest #test02cannotCreateCartForClientWithWrongPassword stamp: 'JEA 12/3/2020 16:26:43'!
PASSED!

!testRun: #RestInterfaceTest #test03canCreateCartForWellAuthenticatedClient stamp: 'JEA 12/3/2020 16:26:43'!
PASSED!

!testRun: #RestInterfaceTest #test04canCreateMoreThanOneCartWithDifferentIDs stamp: 'JEA 12/3/2020 16:26:43'!
PASSED!

!testRun: #RestInterfaceTest #test05cannotAddToCartWithInvalidID stamp: 'JEA 12/3/2020 16:26:43'!
PASSED!

!testRun: #RestInterfaceTest #test06canAddItemToCartWithValidID stamp: 'JEA 12/3/2020 16:26:43'!
PASSED!

!testRun: #RestInterfaceTest #test07cannotCheckOutCartWithInvalidID stamp: 'JEA 12/3/2020 16:26:43'!
PASSED!

!testRun: #RestInterfaceTest #test08canCheckOutNonEmptyValidCartWithValidCreditCard stamp: 'JEA 12/3/2020 16:26:43'!
PASSED!

!testRun: #RestInterfaceTest #test09cannotListCartWithInvalidID stamp: 'JEA 12/3/2020 16:26:43'!
PASSED!

!testRun: #RestInterfaceTest #test10cannotInteractWithCartAfterTimeoutSinceCreated stamp: 'JEA 12/3/2020 16:26:43'!
PASSED!

!testRun: #RestInterfaceTest #test11cartClockResetsAfterAdd stamp: 'JEA 12/3/2020 16:26:43'!
PASSED!

!testRun: #RestInterfaceTest #test12cartClockResetsAfterListing stamp: 'JEA 12/3/2020 16:26:43'!
PASSED!

!testRun: #RestInterfaceTest #test14cannotListPurchasesOfInvalidClient stamp: 'JEA 12/3/2020 16:26:43'!
PASSED!

!testRun: #RestInterfaceTest #test15cannotListPurchasesOfClientWithInvalidPassword stamp: 'JEA 12/3/2020 16:26:43'!
PASSED!

!testRun: #RestInterfaceTest #test16canListPurchasesClientWhoNeverCheckedOut stamp: 'JEA 12/3/2020 16:26:43'!
PASSED!

!testRun: #RestInterfaceTest #test17canListPurchasesClientWhoBoughtOneBook stamp: 'JEA 12/3/2020 16:26:43'!
PASSED!

!testRun: #RestInterfaceTest #test18canListPurchasesClientWhoBoughtMoreThanOneBook stamp: 'JEA 12/3/2020 16:26:43'!
PASSED!

!testRun: #RestInterfaceTest #test19canListPurchasesClientWhoCheckedOutMoreThanOneCart stamp: 'JEA 12/3/2020 16:26:43'!
FAILURE!

!testRun: #RestInterfaceTest #test19canListPurchasesClientWhoCheckedOutMoreThanOneCart stamp: 'JEA 12/3/2020 16:26:43'!
FAILURE!
!RestInterfaceTest methodsFor: 'tests - list purchases' stamp: 'JEA 12/3/2020 16:27:19' prior: 50893644!
test18canListPurchasesClientWhoBoughtMoreThanOneBook

	| restInterface clientPurchasesReport cartID expectedTotal |

	restInterface := RestInterface authenticatingWith:  AuthenticatorSimulator new
							  debitingWith:  self
							  itemsFrom:  testObjectsFactory threeItemCatalog
							  withClock:  ClockSimulator newSimulatingRealTime
							  withCartTimeout: testObjectsFactory cartTimeout.
	
	cartID := restInterface createCartFor: testObjectsFactory validClientID password: testObjectsFactory correctPassword.
	
	restInterface add: 1 of: testObjectsFactory threeItemCatalogItem1 toCartWithID: cartID.
	restInterface add: 2 of: testObjectsFactory threeItemCatalogItem2 toCartWithID: cartID.
	restInterface add: 4 of: testObjectsFactory threeItemCatalogItem3 toCartWithID: cartID.
	
	restInterface checkOutCartWithID: cartID 
			     withCardNumber: testObjectsFactory validCardNumber 
			     expiring:  testObjectsFactory expirationDateNotReached 
			     owner: testObjectsFactory validCreditCardOwnersName.
						
	expectedTotal := testObjectsFactory threeItemCatalogItem1Price +
				      (testObjectsFactory threeItemCatalogItem2Price * 2) +
			             (testObjectsFactory threeItemCatalogItem3Price * 4).
	
	clientPurchasesReport := restInterface 
		listPurchasesOf: testObjectsFactory validClientID
		password: testObjectsFactory correctPassword.

	self assert: clientPurchasesReport listItems.

	self assert: expectedTotal equals: clientPurchasesReport total.! !
!RestInterfaceTest methodsFor: 'tests - list purchases' stamp: 'JEA 12/3/2020 16:28:25' prior: 50893762!
test18canListPurchasesClientWhoBoughtMoreThanOneBook

	| restInterface clientPurchasesReport cartID expectedTotal |

	restInterface := RestInterface authenticatingWith:  AuthenticatorSimulator new
							  debitingWith:  self
							  itemsFrom:  testObjectsFactory threeItemCatalog
							  withClock:  ClockSimulator newSimulatingRealTime
							  withCartTimeout: testObjectsFactory cartTimeout.
	
	cartID := restInterface createCartFor: testObjectsFactory validClientID password: testObjectsFactory correctPassword.
	
	restInterface add: 1 of: testObjectsFactory threeItemCatalogItem1 toCartWithID: cartID.
	restInterface add: 2 of: testObjectsFactory threeItemCatalogItem2 toCartWithID: cartID.
	restInterface add: 4 of: testObjectsFactory threeItemCatalogItem3 toCartWithID: cartID.
	
	restInterface checkOutCartWithID: cartID 
			     withCardNumber: testObjectsFactory validCardNumber 
			     expiring:  testObjectsFactory expirationDateNotReached 
			     owner: testObjectsFactory validCreditCardOwnersName.
						
	expectedTotal := testObjectsFactory threeItemCatalogItem1Price +
				      (testObjectsFactory threeItemCatalogItem2Price * 2) +
			             (testObjectsFactory threeItemCatalogItem3Price * 4).
	
	clientPurchasesReport := restInterface 
		listPurchasesOf: testObjectsFactory validClientID
		password: testObjectsFactory correctPassword.

	self assert: (clientPurchasesReport includes: 1 of: testObjectsFactory threeItemCatalogItem1).
	self assert: (clientPurchasesReport includes: 2 of: testObjectsFactory threeItemCatalogItem2).
	self assert: (clientPurchasesReport includes: 4 of: testObjectsFactory threeItemCatalogItem3).

	self assert: expectedTotal equals: clientPurchasesReport total.! !

----SNAPSHOT----(3 December 2020 16:28:29) CuisUniversity-4384.image priorSource: 17908342!

!testRun: #RestInterfaceTest #test01cannotCreateCartForInvalidClientID stamp: 'JEA 12/3/2020 16:28:36'!
PASSED!

!testRun: #RestInterfaceTest #test02cannotCreateCartForClientWithWrongPassword stamp: 'JEA 12/3/2020 16:28:36'!
PASSED!

!testRun: #RestInterfaceTest #test03canCreateCartForWellAuthenticatedClient stamp: 'JEA 12/3/2020 16:28:36'!
PASSED!

!testRun: #RestInterfaceTest #test04canCreateMoreThanOneCartWithDifferentIDs stamp: 'JEA 12/3/2020 16:28:36'!
PASSED!

!testRun: #RestInterfaceTest #test05cannotAddToCartWithInvalidID stamp: 'JEA 12/3/2020 16:28:36'!
PASSED!

!testRun: #RestInterfaceTest #test06canAddItemToCartWithValidID stamp: 'JEA 12/3/2020 16:28:36'!
PASSED!

!testRun: #RestInterfaceTest #test07cannotCheckOutCartWithInvalidID stamp: 'JEA 12/3/2020 16:28:36'!
PASSED!

!testRun: #RestInterfaceTest #test08canCheckOutNonEmptyValidCartWithValidCreditCard stamp: 'JEA 12/3/2020 16:28:36'!
PASSED!

!testRun: #RestInterfaceTest #test09cannotListCartWithInvalidID stamp: 'JEA 12/3/2020 16:28:36'!
PASSED!

!testRun: #RestInterfaceTest #test10cannotInteractWithCartAfterTimeoutSinceCreated stamp: 'JEA 12/3/2020 16:28:36'!
PASSED!

!testRun: #RestInterfaceTest #test11cartClockResetsAfterAdd stamp: 'JEA 12/3/2020 16:28:36'!
PASSED!

!testRun: #RestInterfaceTest #test12cartClockResetsAfterListing stamp: 'JEA 12/3/2020 16:28:36'!
PASSED!

!testRun: #RestInterfaceTest #test14cannotListPurchasesOfInvalidClient stamp: 'JEA 12/3/2020 16:28:36'!
PASSED!

!testRun: #RestInterfaceTest #test15cannotListPurchasesOfClientWithInvalidPassword stamp: 'JEA 12/3/2020 16:28:36'!
PASSED!

!testRun: #RestInterfaceTest #test16canListPurchasesClientWhoNeverCheckedOut stamp: 'JEA 12/3/2020 16:28:36'!
PASSED!

!testRun: #RestInterfaceTest #test17canListPurchasesClientWhoBoughtOneBook stamp: 'JEA 12/3/2020 16:28:36'!
PASSED!

!testRun: #RestInterfaceTest #test18canListPurchasesClientWhoBoughtMoreThanOneBook stamp: 'JEA 12/3/2020 16:28:36'!
PASSED!

!testRun: #RestInterfaceTest #test19canListPurchasesClientWhoCheckedOutMoreThanOneCart stamp: 'JEA 12/3/2020 16:28:36'!
FAILURE!

!testRun: #RestInterfaceTest #test19canListPurchasesClientWhoCheckedOutMoreThanOneCart stamp: 'JEA 12/3/2020 16:28:36'!
FAILURE!
!RestInterfaceTest methodsFor: 'tests - list purchases' stamp: 'JEA 12/3/2020 16:29:04' prior: 50889602!
test19canListPurchasesClientWhoCheckedOutMoreThanOneCart

	| restInterface cartID1 cartID2  expectedTotal |

	restInterface := RestInterface authenticatingWith:  AuthenticatorSimulator new
							  debitingWith:  self
							  itemsFrom:  testObjectsFactory threeItemCatalog
							  withClock:  ClockSimulator newSimulatingRealTime
							  withCartTimeout: testObjectsFactory cartTimeout.
	
	cartID1 := restInterface createCartFor: testObjectsFactory validClientID password: testObjectsFactory correctPassword.
	
	restInterface add: 1 of: testObjectsFactory threeItemCatalogItem1 toCartWithID: cartID1.
	restInterface add: 2 of: testObjectsFactory threeItemCatalogItem2 toCartWithID: cartID1.
	restInterface add: 4 of: testObjectsFactory threeItemCatalogItem3 toCartWithID: cartID1.
	
	restInterface checkOutCartWithID: cartID1
			     withCardNumber: testObjectsFactory validCardNumber 
			     expiring:  testObjectsFactory expirationDateNotReached 
			     owner: testObjectsFactory validCreditCardOwnersName.
			
	cartID2 := restInterface createCartFor: testObjectsFactory validClientID password: testObjectsFactory correctPassword.
	
	restInterface add: 5 of: testObjectsFactory threeItemCatalogItem2 toCartWithID: cartID2.
	restInterface add: 6 of: testObjectsFactory threeItemCatalogItem3 toCartWithID: cartID2.
	
	restInterface checkOutCartWithID: cartID2
			     withCardNumber: testObjectsFactory validCardNumber 
			     expiring:  testObjectsFactory expirationDateNotReached 
			     owner: testObjectsFactory validCreditCardOwnersName.	
						
	expectedTotal := testObjectsFactory threeItemCatalogItem1Price +
				      (testObjectsFactory threeItemCatalogItem2Price * 7) +
			             (testObjectsFactory threeItemCatalogItem3Price * 10).! !
!RestInterfaceTest methodsFor: 'tests - list purchases' stamp: 'JEA 12/3/2020 16:29:37' prior: 50893942!
test19canListPurchasesClientWhoCheckedOutMoreThanOneCart

	| restInterface cartID1 cartID2  expectedTotal clientPurchasesReport |

	restInterface := RestInterface authenticatingWith:  AuthenticatorSimulator new
							  debitingWith:  self
							  itemsFrom:  testObjectsFactory threeItemCatalog
							  withClock:  ClockSimulator newSimulatingRealTime
							  withCartTimeout: testObjectsFactory cartTimeout.
	
	cartID1 := restInterface createCartFor: testObjectsFactory validClientID password: testObjectsFactory correctPassword.
	
	restInterface add: 1 of: testObjectsFactory threeItemCatalogItem1 toCartWithID: cartID1.
	restInterface add: 2 of: testObjectsFactory threeItemCatalogItem2 toCartWithID: cartID1.
	restInterface add: 4 of: testObjectsFactory threeItemCatalogItem3 toCartWithID: cartID1.
	
	restInterface checkOutCartWithID: cartID1
			     withCardNumber: testObjectsFactory validCardNumber 
			     expiring:  testObjectsFactory expirationDateNotReached 
			     owner: testObjectsFactory validCreditCardOwnersName.
			
	cartID2 := restInterface createCartFor: testObjectsFactory validClientID password: testObjectsFactory correctPassword.
	
	restInterface add: 5 of: testObjectsFactory threeItemCatalogItem2 toCartWithID: cartID2.
	restInterface add: 6 of: testObjectsFactory threeItemCatalogItem3 toCartWithID: cartID2.
	
	restInterface checkOutCartWithID: cartID2
			     withCardNumber: testObjectsFactory validCardNumber 
			     expiring:  testObjectsFactory expirationDateNotReached 
			     owner: testObjectsFactory validCreditCardOwnersName.	
						
	expectedTotal := testObjectsFactory threeItemCatalogItem1Price +
				      (testObjectsFactory threeItemCatalogItem2Price * 7) +
			             (testObjectsFactory threeItemCatalogItem3Price * 10).
	
	clientPurchasesReport := restInterface 
		listPurchasesOf: testObjectsFactory validClientID
		password: testObjectsFactory correctPassword.

	self assert: (clientPurchasesReport includes: 1 of: testObjectsFactory threeItemCatalogItem1).
	self assert: (clientPurchasesReport includes: 2 of: testObjectsFactory threeItemCatalogItem2).
	self assert: (clientPurchasesReport includes: 4 of: testObjectsFactory threeItemCatalogItem3).

	self assert: expectedTotal equals: clientPurchasesReport total.! !
!RestInterfaceTest methodsFor: 'tests - list purchases' stamp: 'JEA 12/3/2020 16:29:51' prior: 50894001!
test19canListPurchasesClientWhoCheckedOutMoreThanOneCart

	| restInterface cartID1 cartID2  expectedTotal clientPurchasesReport |

	restInterface := RestInterface authenticatingWith:  AuthenticatorSimulator new
							  debitingWith:  self
							  itemsFrom:  testObjectsFactory threeItemCatalog
							  withClock:  ClockSimulator newSimulatingRealTime
							  withCartTimeout: testObjectsFactory cartTimeout.
	
	cartID1 := restInterface createCartFor: testObjectsFactory validClientID password: testObjectsFactory correctPassword.
	
	restInterface add: 1 of: testObjectsFactory threeItemCatalogItem1 toCartWithID: cartID1.
	restInterface add: 2 of: testObjectsFactory threeItemCatalogItem2 toCartWithID: cartID1.
	restInterface add: 4 of: testObjectsFactory threeItemCatalogItem3 toCartWithID: cartID1.
	
	restInterface checkOutCartWithID: cartID1
			     withCardNumber: testObjectsFactory validCardNumber 
			     expiring:  testObjectsFactory expirationDateNotReached 
			     owner: testObjectsFactory validCreditCardOwnersName.
			
	cartID2 := restInterface createCartFor: testObjectsFactory validClientID password: testObjectsFactory correctPassword.
	
	restInterface add: 5 of: testObjectsFactory threeItemCatalogItem2 toCartWithID: cartID2.
	restInterface add: 6 of: testObjectsFactory threeItemCatalogItem3 toCartWithID: cartID2.
	
	restInterface checkOutCartWithID: cartID2
			     withCardNumber: testObjectsFactory validCardNumber 
			     expiring:  testObjectsFactory expirationDateNotReached 
			     owner: testObjectsFactory validCreditCardOwnersName.	
						
	expectedTotal := testObjectsFactory threeItemCatalogItem1Price +
				      (testObjectsFactory threeItemCatalogItem2Price * 7) +
			             (testObjectsFactory threeItemCatalogItem3Price * 10).
	
	clientPurchasesReport := restInterface 
		listPurchasesOf: testObjectsFactory validClientID
		password: testObjectsFactory correctPassword.

	self assert: (clientPurchasesReport includes: 1 of: testObjectsFactory threeItemCatalogItem1).
	self assert: (clientPurchasesReport includes: 7 of: testObjectsFactory threeItemCatalogItem2).
	self assert: (clientPurchasesReport includes: 10 of: testObjectsFactory threeItemCatalogItem3).

	self assert: expectedTotal equals: clientPurchasesReport total.! !

!testRun: #RestInterfaceTest #test01cannotCreateCartForInvalidClientID stamp: 'JEA 12/3/2020 16:29:52'!
PASSED!

!testRun: #RestInterfaceTest #test02cannotCreateCartForClientWithWrongPassword stamp: 'JEA 12/3/2020 16:29:52'!
PASSED!

!testRun: #RestInterfaceTest #test03canCreateCartForWellAuthenticatedClient stamp: 'JEA 12/3/2020 16:29:52'!
PASSED!

!testRun: #RestInterfaceTest #test04canCreateMoreThanOneCartWithDifferentIDs stamp: 'JEA 12/3/2020 16:29:52'!
PASSED!

!testRun: #RestInterfaceTest #test05cannotAddToCartWithInvalidID stamp: 'JEA 12/3/2020 16:29:52'!
PASSED!

!testRun: #RestInterfaceTest #test06canAddItemToCartWithValidID stamp: 'JEA 12/3/2020 16:29:52'!
PASSED!

!testRun: #RestInterfaceTest #test07cannotCheckOutCartWithInvalidID stamp: 'JEA 12/3/2020 16:29:52'!
PASSED!

!testRun: #RestInterfaceTest #test08canCheckOutNonEmptyValidCartWithValidCreditCard stamp: 'JEA 12/3/2020 16:29:52'!
PASSED!

!testRun: #RestInterfaceTest #test09cannotListCartWithInvalidID stamp: 'JEA 12/3/2020 16:29:52'!
PASSED!

!testRun: #RestInterfaceTest #test10cannotInteractWithCartAfterTimeoutSinceCreated stamp: 'JEA 12/3/2020 16:29:52'!
PASSED!

!testRun: #RestInterfaceTest #test11cartClockResetsAfterAdd stamp: 'JEA 12/3/2020 16:29:52'!
PASSED!

!testRun: #RestInterfaceTest #test12cartClockResetsAfterListing stamp: 'JEA 12/3/2020 16:29:52'!
PASSED!

!testRun: #RestInterfaceTest #test14cannotListPurchasesOfInvalidClient stamp: 'JEA 12/3/2020 16:29:52'!
PASSED!

!testRun: #RestInterfaceTest #test15cannotListPurchasesOfClientWithInvalidPassword stamp: 'JEA 12/3/2020 16:29:52'!
PASSED!

!testRun: #RestInterfaceTest #test16canListPurchasesClientWhoNeverCheckedOut stamp: 'JEA 12/3/2020 16:29:52'!
PASSED!

!testRun: #RestInterfaceTest #test17canListPurchasesClientWhoBoughtOneBook stamp: 'JEA 12/3/2020 16:29:52'!
PASSED!

!testRun: #RestInterfaceTest #test18canListPurchasesClientWhoBoughtMoreThanOneBook stamp: 'JEA 12/3/2020 16:29:52'!
PASSED!

!testRun: #RestInterfaceTest #test19canListPurchasesClientWhoCheckedOutMoreThanOneCart stamp: 'JEA 12/3/2020 16:29:52'!
FAILURE!

!testRun: #RestInterfaceTest #test19canListPurchasesClientWhoCheckedOutMoreThanOneCart stamp: 'JEA 12/3/2020 16:29:52'!
FAILURE!
!RestInterfaceTest methodsFor: 'tests - list purchases' stamp: 'JEA 12/3/2020 16:30:35' prior: 50894076!
test19canListPurchasesClientWhoCheckedOutMoreThanOneCart

	| restInterface cartID1 cartID2  expectedTotal clientPurchasesReport |

	restInterface := RestInterface authenticatingWith:  AuthenticatorSimulator new
							  debitingWith:  self
							  itemsFrom:  testObjectsFactory threeItemCatalog
							  withClock:  ClockSimulator newSimulatingRealTime
							  withCartTimeout: testObjectsFactory cartTimeout.
	
	cartID1 := restInterface createCartFor: testObjectsFactory validClientID password: testObjectsFactory correctPassword.
	
	restInterface add: 1 of: testObjectsFactory threeItemCatalogItem1 toCartWithID: cartID1.
	restInterface add: 2 of: testObjectsFactory threeItemCatalogItem2 toCartWithID: cartID1.
	restInterface add: 4 of: testObjectsFactory threeItemCatalogItem3 toCartWithID: cartID1.
	
	restInterface checkOutCartWithID: cartID1
			     withCardNumber: testObjectsFactory validCardNumber 
			     expiring:  testObjectsFactory expirationDateNotReached 
			     owner: testObjectsFactory validCreditCardOwnersName.
			
	cartID2 := restInterface createCartFor: testObjectsFactory validClientID password: testObjectsFactory correctPassword.
	
	restInterface add: 5 of: testObjectsFactory threeItemCatalogItem2 toCartWithID: cartID2.
	restInterface add: 6 of: testObjectsFactory threeItemCatalogItem3 toCartWithID: cartID2.
	
	restInterface checkOutCartWithID: cartID2
			     withCardNumber: testObjectsFactory validCardNumber 
			     expiring:  testObjectsFactory expirationDateNotReached 
			     owner: testObjectsFactory validCreditCardOwnersName.	
						
	expectedTotal := testObjectsFactory threeItemCatalogItem1Price +
				      (testObjectsFactory threeItemCatalogItem2Price * 7) +
			             (testObjectsFactory threeItemCatalogItem3Price * 10).
	
	clientPurchasesReport := restInterface 
		listPurchasesOf: testObjectsFactory validClientID
		password: testObjectsFactory correctPassword.

	"self assert: (clientPurchasesReport includes: 1 of: testObjectsFactory threeItemCatalogItem1)."
	self assert: (clientPurchasesReport includes: 7 of: testObjectsFactory threeItemCatalogItem2).
	self assert: (clientPurchasesReport includes: 10 of: testObjectsFactory threeItemCatalogItem3).

	self assert: expectedTotal equals: clientPurchasesReport total.! !

!testRun: #RestInterfaceTest #test19canListPurchasesClientWhoCheckedOutMoreThanOneCart stamp: 'JEA 12/3/2020 16:30:36'!
FAILURE!
!RestInterfaceTest methodsFor: 'tests - list purchases' stamp: 'JEA 12/3/2020 16:31:07' prior: 50894220!
test19canListPurchasesClientWhoCheckedOutMoreThanOneCart

	| restInterface cartID1 cartID2  expectedTotal clientPurchasesReport |

	restInterface := RestInterface authenticatingWith:  AuthenticatorSimulator new
							  debitingWith:  self
							  itemsFrom:  testObjectsFactory threeItemCatalog
							  withClock:  ClockSimulator newSimulatingRealTime
							  withCartTimeout: testObjectsFactory cartTimeout.
	
	cartID1 := restInterface createCartFor: testObjectsFactory validClientID password: testObjectsFactory correctPassword.
	
	restInterface add: 1 of: testObjectsFactory threeItemCatalogItem1 toCartWithID: cartID1.
	restInterface add: 2 of: testObjectsFactory threeItemCatalogItem2 toCartWithID: cartID1.
	restInterface add: 4 of: testObjectsFactory threeItemCatalogItem3 toCartWithID: cartID1.
	
	restInterface checkOutCartWithID: cartID1
			     withCardNumber: testObjectsFactory validCardNumber 
			     expiring:  testObjectsFactory expirationDateNotReached 
			     owner: testObjectsFactory validCreditCardOwnersName.
			
	cartID2 := restInterface createCartFor: testObjectsFactory validClientID password: testObjectsFactory correctPassword.
	
	restInterface add: 5 of: testObjectsFactory threeItemCatalogItem2 toCartWithID: cartID2.
	restInterface add: 6 of: testObjectsFactory threeItemCatalogItem3 toCartWithID: cartID2.
	
	restInterface checkOutCartWithID: cartID2
			     withCardNumber: testObjectsFactory validCardNumber 
			     expiring:  testObjectsFactory expirationDateNotReached 
			     owner: testObjectsFactory validCreditCardOwnersName.	
						
	expectedTotal := testObjectsFactory threeItemCatalogItem1Price +
				      (testObjectsFactory threeItemCatalogItem2Price * 7) +
			             (testObjectsFactory threeItemCatalogItem3Price * 10).
	
	clientPurchasesReport := restInterface 
		listPurchasesOf: testObjectsFactory validClientID
		password: testObjectsFactory correctPassword.

	self assert: expectedTotal equals: clientPurchasesReport total.
	self assert: (clientPurchasesReport includes: 1 of: testObjectsFactory threeItemCatalogItem1).
	self assert: (clientPurchasesReport includes: 7 of: testObjectsFactory threeItemCatalogItem2).
	self assert: (clientPurchasesReport includes: 10 of: testObjectsFactory threeItemCatalogItem3).! !

!testRun: #RestInterfaceTest #test19canListPurchasesClientWhoCheckedOutMoreThanOneCart stamp: 'JEA 12/3/2020 16:31:12'!
FAILURE!
!RestInterfaceTest methodsFor: 'tests - list purchases' stamp: 'JEA 12/3/2020 16:31:16' prior: 50894299!
test19canListPurchasesClientWhoCheckedOutMoreThanOneCart

	| restInterface cartID1 cartID2  expectedTotal clientPurchasesReport |

	restInterface := RestInterface authenticatingWith:  AuthenticatorSimulator new
							  debitingWith:  self
							  itemsFrom:  testObjectsFactory threeItemCatalog
							  withClock:  ClockSimulator newSimulatingRealTime
							  withCartTimeout: testObjectsFactory cartTimeout.
	
	cartID1 := restInterface createCartFor: testObjectsFactory validClientID password: testObjectsFactory correctPassword.
	
	restInterface add: 1 of: testObjectsFactory threeItemCatalogItem1 toCartWithID: cartID1.
	restInterface add: 2 of: testObjectsFactory threeItemCatalogItem2 toCartWithID: cartID1.
	restInterface add: 4 of: testObjectsFactory threeItemCatalogItem3 toCartWithID: cartID1.
	
	restInterface checkOutCartWithID: cartID1
			     withCardNumber: testObjectsFactory validCardNumber 
			     expiring:  testObjectsFactory expirationDateNotReached 
			     owner: testObjectsFactory validCreditCardOwnersName.
			
	cartID2 := restInterface createCartFor: testObjectsFactory validClientID password: testObjectsFactory correctPassword.
	
	restInterface add: 5 of: testObjectsFactory threeItemCatalogItem2 toCartWithID: cartID2.
	restInterface add: 6 of: testObjectsFactory threeItemCatalogItem3 toCartWithID: cartID2.
	
	restInterface checkOutCartWithID: cartID2
			     withCardNumber: testObjectsFactory validCardNumber 
			     expiring:  testObjectsFactory expirationDateNotReached 
			     owner: testObjectsFactory validCreditCardOwnersName.	
						
	expectedTotal := testObjectsFactory threeItemCatalogItem1Price +
				      (testObjectsFactory threeItemCatalogItem2Price * 7) +
			             (testObjectsFactory threeItemCatalogItem3Price * 10).
	
	clientPurchasesReport := restInterface 
		listPurchasesOf: testObjectsFactory validClientID
		password: testObjectsFactory correctPassword.

	self assert: expectedTotal equals: clientPurchasesReport total.

	self assert: (clientPurchasesReport includes: 1 of: testObjectsFactory threeItemCatalogItem1).
	self assert: (clientPurchasesReport includes: 7 of: testObjectsFactory threeItemCatalogItem2).
	self assert: (clientPurchasesReport includes: 10 of: testObjectsFactory threeItemCatalogItem3).! !
!ClientPurchasesReport methodsFor: 'adding' stamp: 'JEA 12/3/2020 16:32:05' prior: 50893508!
addItems: anUnorderedCollection withTotalPrice: aPrice

	items addAll: anUnorderedCollection asBag.
	totalPrice := totalPrice + aPrice.! !

!testRun: #RestInterfaceTest #test01cannotCreateCartForInvalidClientID stamp: 'JEA 12/3/2020 16:32:08'!
PASSED!

!testRun: #RestInterfaceTest #test02cannotCreateCartForClientWithWrongPassword stamp: 'JEA 12/3/2020 16:32:08'!
PASSED!

!testRun: #RestInterfaceTest #test03canCreateCartForWellAuthenticatedClient stamp: 'JEA 12/3/2020 16:32:08'!
PASSED!

!testRun: #RestInterfaceTest #test04canCreateMoreThanOneCartWithDifferentIDs stamp: 'JEA 12/3/2020 16:32:08'!
PASSED!

!testRun: #RestInterfaceTest #test05cannotAddToCartWithInvalidID stamp: 'JEA 12/3/2020 16:32:08'!
PASSED!

!testRun: #RestInterfaceTest #test06canAddItemToCartWithValidID stamp: 'JEA 12/3/2020 16:32:08'!
PASSED!

!testRun: #RestInterfaceTest #test07cannotCheckOutCartWithInvalidID stamp: 'JEA 12/3/2020 16:32:08'!
PASSED!

!testRun: #RestInterfaceTest #test08canCheckOutNonEmptyValidCartWithValidCreditCard stamp: 'JEA 12/3/2020 16:32:08'!
PASSED!

!testRun: #RestInterfaceTest #test09cannotListCartWithInvalidID stamp: 'JEA 12/3/2020 16:32:08'!
PASSED!

!testRun: #RestInterfaceTest #test10cannotInteractWithCartAfterTimeoutSinceCreated stamp: 'JEA 12/3/2020 16:32:08'!
PASSED!

!testRun: #RestInterfaceTest #test11cartClockResetsAfterAdd stamp: 'JEA 12/3/2020 16:32:08'!
PASSED!

!testRun: #RestInterfaceTest #test12cartClockResetsAfterListing stamp: 'JEA 12/3/2020 16:32:08'!
PASSED!

!testRun: #RestInterfaceTest #test14cannotListPurchasesOfInvalidClient stamp: 'JEA 12/3/2020 16:32:08'!
PASSED!

!testRun: #RestInterfaceTest #test15cannotListPurchasesOfClientWithInvalidPassword stamp: 'JEA 12/3/2020 16:32:08'!
PASSED!

!testRun: #RestInterfaceTest #test16canListPurchasesClientWhoNeverCheckedOut stamp: 'JEA 12/3/2020 16:32:08'!
PASSED!

!testRun: #RestInterfaceTest #test17canListPurchasesClientWhoBoughtOneBook stamp: 'JEA 12/3/2020 16:32:08'!
PASSED!

!testRun: #RestInterfaceTest #test18canListPurchasesClientWhoBoughtMoreThanOneBook stamp: 'JEA 12/3/2020 16:32:08'!
PASSED!

!testRun: #RestInterfaceTest #test19canListPurchasesClientWhoCheckedOutMoreThanOneCart stamp: 'JEA 12/3/2020 16:32:08'!
PASSED!

----SNAPSHOT----(3 December 2020 16:32:18) CuisUniversity-4384.image priorSource: 17990973!

----SNAPSHOT----(3 December 2020 16:36:17) CuisUniversity-4384.image priorSource: 18011985!
!CartSession methodsFor: 'operations' stamp: 'JEA 12/3/2020 16:38:32' prior: 50889958!
add: aQuantity of: anISBN

	self resetLastInteraction.
	cart add: aQuantity of: anISBN.! !
!RestInterfaceTest methodsFor: 'tests - list purchases' stamp: 'JEA 12/3/2020 16:40:44' prior: 50893537!
test17canListPurchasesClientWhoBoughtOneBook

	| restInterface cartID clientPurchasesReport |
	
	restInterface := RestInterface authenticatingWith:  AuthenticatorSimulator new
							  debitingWith:  self
							  itemsFrom:  testObjectsFactory defaultCatalog
							  withClock:  ClockSimulator newSimulatingRealTime
							  withCartTimeout: testObjectsFactory cartTimeout.
	
	cartID := restInterface createCartFor: testObjectsFactory validClientID password: testObjectsFactory correctPassword.
	
	restInterface add: 1 of: testObjectsFactory itemSoldByTheStore toCartWithID: cartID.
	
	restInterface checkOutCartWithID: cartID 
			     withCardNumber: testObjectsFactory validCardNumber 
			     expiring:  testObjectsFactory expirationDateNotReached 
			     owner: testObjectsFactory validCreditCardOwnersName.
							
	clientPurchasesReport := (restInterface listPurchasesOf: testObjectsFactory validClientID 
	                                      password: testObjectsFactory correctPassword).
	self assert: (
		clientPurchasesReport 
			includes: 1 
			of: testObjectsFactory itemSoldByTheStore
		).

	self assert: testObjectsFactory itemSoldByTheStorePrice equals: clientPurchasesReport total.
	
	self assert: clientPurchasesReport isEmpty not.! !

!testRun: #RestInterfaceTest #test01cannotCreateCartForInvalidClientID stamp: 'JEA 12/3/2020 16:40:47'!
PASSED!

!testRun: #RestInterfaceTest #test02cannotCreateCartForClientWithWrongPassword stamp: 'JEA 12/3/2020 16:40:47'!
PASSED!

!testRun: #RestInterfaceTest #test03canCreateCartForWellAuthenticatedClient stamp: 'JEA 12/3/2020 16:40:47'!
PASSED!

!testRun: #RestInterfaceTest #test04canCreateMoreThanOneCartWithDifferentIDs stamp: 'JEA 12/3/2020 16:40:47'!
PASSED!

!testRun: #RestInterfaceTest #test05cannotAddToCartWithInvalidID stamp: 'JEA 12/3/2020 16:40:47'!
PASSED!

!testRun: #RestInterfaceTest #test06canAddItemToCartWithValidID stamp: 'JEA 12/3/2020 16:40:47'!
PASSED!

!testRun: #RestInterfaceTest #test07cannotCheckOutCartWithInvalidID stamp: 'JEA 12/3/2020 16:40:47'!
PASSED!

!testRun: #RestInterfaceTest #test08canCheckOutNonEmptyValidCartWithValidCreditCard stamp: 'JEA 12/3/2020 16:40:47'!
PASSED!

!testRun: #RestInterfaceTest #test09cannotListCartWithInvalidID stamp: 'JEA 12/3/2020 16:40:47'!
PASSED!

!testRun: #RestInterfaceTest #test10cannotInteractWithCartAfterTimeoutSinceCreated stamp: 'JEA 12/3/2020 16:40:47'!
PASSED!

!testRun: #RestInterfaceTest #test11cartClockResetsAfterAdd stamp: 'JEA 12/3/2020 16:40:47'!
PASSED!

!testRun: #RestInterfaceTest #test12cartClockResetsAfterListing stamp: 'JEA 12/3/2020 16:40:47'!
PASSED!

!testRun: #RestInterfaceTest #test14cannotListPurchasesOfInvalidClient stamp: 'JEA 12/3/2020 16:40:47'!
PASSED!

!testRun: #RestInterfaceTest #test15cannotListPurchasesOfClientWithInvalidPassword stamp: 'JEA 12/3/2020 16:40:47'!
PASSED!

!testRun: #RestInterfaceTest #test16canListPurchasesClientWhoNeverCheckedOut stamp: 'JEA 12/3/2020 16:40:47'!
PASSED!

!testRun: #RestInterfaceTest #test17canListPurchasesClientWhoBoughtOneBook stamp: 'JEA 12/3/2020 16:40:47'!
FAILURE!

!testRun: #RestInterfaceTest #test18canListPurchasesClientWhoBoughtMoreThanOneBook stamp: 'JEA 12/3/2020 16:40:47'!
PASSED!

!testRun: #RestInterfaceTest #test19canListPurchasesClientWhoCheckedOutMoreThanOneCart stamp: 'JEA 12/3/2020 16:40:47'!
PASSED!

!testRun: #RestInterfaceTest #test17canListPurchasesClientWhoBoughtOneBook stamp: 'JEA 12/3/2020 16:40:47'!
FAILURE!
!ClientPurchasesReport methodsFor: 'queries' stamp: 'JEA 12/3/2020 16:40:55' prior: 50892357!
isEmpty

	^items isEmpty.! !

!testRun: #CartTest #test01NewCartsAreCreatedEmpty stamp: 'JEA 12/3/2020 16:40:58'!
PASSED!

!testRun: #CartTest #test02CanNotAddItemsThatDoNotBelongToStore stamp: 'JEA 12/3/2020 16:40:58'!
PASSED!

!testRun: #CartTest #test03AfterAddingAnItemTheCartIsNotEmptyAnymore stamp: 'JEA 12/3/2020 16:40:58'!
PASSED!

!testRun: #CartTest #test04CanNotAddNonPositiveNumberOfItems stamp: 'JEA 12/3/2020 16:40:58'!
PASSED!

!testRun: #CartTest #test05CanNotAddMoreThanOneItemNotSellByTheStore stamp: 'JEA 12/3/2020 16:40:58'!
PASSED!

!testRun: #CartTest #test06CartRemembersAddedItems stamp: 'JEA 12/3/2020 16:40:58'!
PASSED!

!testRun: #CartTest #test07CartDoesNotHoldNotAddedItems stamp: 'JEA 12/3/2020 16:40:58'!
PASSED!

!testRun: #CartTest #test08CartRemembersTheNumberOfAddedItems stamp: 'JEA 12/3/2020 16:40:58'!
PASSED!

!testRun: #CashierTest #test01CanNotCheckoutAnEmptyCart stamp: 'JEA 12/3/2020 16:40:58'!
PASSED!

!testRun: #CashierTest #test02CalculatedTotalIsCorrect stamp: 'JEA 12/3/2020 16:40:58'!
PASSED!

!testRun: #CashierTest #test03CanNotCheckoutWithAnExpiredCreditCart stamp: 'JEA 12/3/2020 16:40:58'!
PASSED!

!testRun: #CashierTest #test04CheckoutRegistersASale stamp: 'JEA 12/3/2020 16:40:58'!
PASSED!

!testRun: #CashierTest #test05CashierChargesCreditCardUsingMerchantProcessor stamp: 'JEA 12/3/2020 16:40:58'!
PASSED!

!testRun: #CashierTest #test06CashierDoesNotSaleWhenTheCreditCardHasNoCredit stamp: 'JEA 12/3/2020 16:40:58'!
PASSED!

!testRun: #CreditCardTest #test01cantCreateCardWithNumberTooShort stamp: 'JEA 12/3/2020 16:40:58'!
PASSED!

!testRun: #CreditCardTest #test02cantCreateCardWithNumberTooLong stamp: 'JEA 12/3/2020 16:40:58'!
PASSED!

!testRun: #CreditCardTest #test03cantCreateCardWithNumberNonNumeric stamp: 'JEA 12/3/2020 16:40:58'!
PASSED!

!testRun: #RestInterfaceTest #test01cannotCreateCartForInvalidClientID stamp: 'JEA 12/3/2020 16:40:58'!
PASSED!

!testRun: #RestInterfaceTest #test02cannotCreateCartForClientWithWrongPassword stamp: 'JEA 12/3/2020 16:40:58'!
PASSED!

!testRun: #RestInterfaceTest #test03canCreateCartForWellAuthenticatedClient stamp: 'JEA 12/3/2020 16:40:58'!
PASSED!

!testRun: #RestInterfaceTest #test04canCreateMoreThanOneCartWithDifferentIDs stamp: 'JEA 12/3/2020 16:40:58'!
PASSED!

!testRun: #RestInterfaceTest #test05cannotAddToCartWithInvalidID stamp: 'JEA 12/3/2020 16:40:58'!
PASSED!

!testRun: #RestInterfaceTest #test06canAddItemToCartWithValidID stamp: 'JEA 12/3/2020 16:40:58'!
PASSED!

!testRun: #RestInterfaceTest #test07cannotCheckOutCartWithInvalidID stamp: 'JEA 12/3/2020 16:40:58'!
PASSED!

!testRun: #RestInterfaceTest #test08canCheckOutNonEmptyValidCartWithValidCreditCard stamp: 'JEA 12/3/2020 16:40:58'!
PASSED!

!testRun: #RestInterfaceTest #test09cannotListCartWithInvalidID stamp: 'JEA 12/3/2020 16:40:58'!
PASSED!

!testRun: #RestInterfaceTest #test10cannotInteractWithCartAfterTimeoutSinceCreated stamp: 'JEA 12/3/2020 16:40:58'!
PASSED!

!testRun: #RestInterfaceTest #test11cartClockResetsAfterAdd stamp: 'JEA 12/3/2020 16:40:58'!
PASSED!

!testRun: #RestInterfaceTest #test12cartClockResetsAfterListing stamp: 'JEA 12/3/2020 16:40:58'!
PASSED!

!testRun: #RestInterfaceTest #test14cannotListPurchasesOfInvalidClient stamp: 'JEA 12/3/2020 16:40:58'!
PASSED!

!testRun: #RestInterfaceTest #test15cannotListPurchasesOfClientWithInvalidPassword stamp: 'JEA 12/3/2020 16:40:58'!
PASSED!

!testRun: #RestInterfaceTest #test16canListPurchasesClientWhoNeverCheckedOut stamp: 'JEA 12/3/2020 16:40:58'!
PASSED!

!testRun: #RestInterfaceTest #test17canListPurchasesClientWhoBoughtOneBook stamp: 'JEA 12/3/2020 16:40:58'!
PASSED!

!testRun: #RestInterfaceTest #test18canListPurchasesClientWhoBoughtMoreThanOneBook stamp: 'JEA 12/3/2020 16:40:58'!
PASSED!

!testRun: #RestInterfaceTest #test19canListPurchasesClientWhoCheckedOutMoreThanOneCart stamp: 'JEA 12/3/2020 16:40:58'!
PASSED!
!RestInterface methodsFor: 'api - private' stamp: 'JEA 12/3/2020 16:44:01' prior: 50893229!
clientPurchasesReportFor: aClientID

	"^clientPurchasesReports at: aClientID 
		ifAbsent: [ clientPurchasesReports at: aClientID put: ClientPurchasesReport new. ]."! !
!RestInterface methodsFor: 'api - private' stamp: 'JEA 12/3/2020 16:44:16' prior: 50894776!
clientPurchasesReportFor: aClientID

	"^clientPurchasesReports at: aClientID 
		ifAbsent: [ clientPurchasesReports at: aClientID put: ClientPurchasesReport new. ]."
	^clientPurchasesReports at: aClientID ifAbsentPut: ClientPurchasesReport new.! !

!testRun: #RestInterfaceTest #test01cannotCreateCartForInvalidClientID stamp: 'JEA 12/3/2020 16:44:17'!
PASSED!

!testRun: #RestInterfaceTest #test02cannotCreateCartForClientWithWrongPassword stamp: 'JEA 12/3/2020 16:44:17'!
PASSED!

!testRun: #RestInterfaceTest #test03canCreateCartForWellAuthenticatedClient stamp: 'JEA 12/3/2020 16:44:17'!
PASSED!

!testRun: #RestInterfaceTest #test04canCreateMoreThanOneCartWithDifferentIDs stamp: 'JEA 12/3/2020 16:44:17'!
PASSED!

!testRun: #RestInterfaceTest #test05cannotAddToCartWithInvalidID stamp: 'JEA 12/3/2020 16:44:17'!
PASSED!

!testRun: #RestInterfaceTest #test06canAddItemToCartWithValidID stamp: 'JEA 12/3/2020 16:44:17'!
PASSED!

!testRun: #RestInterfaceTest #test07cannotCheckOutCartWithInvalidID stamp: 'JEA 12/3/2020 16:44:17'!
PASSED!

!testRun: #RestInterfaceTest #test08canCheckOutNonEmptyValidCartWithValidCreditCard stamp: 'JEA 12/3/2020 16:44:17'!
PASSED!

!testRun: #RestInterfaceTest #test09cannotListCartWithInvalidID stamp: 'JEA 12/3/2020 16:44:17'!
PASSED!

!testRun: #RestInterfaceTest #test10cannotInteractWithCartAfterTimeoutSinceCreated stamp: 'JEA 12/3/2020 16:44:17'!
PASSED!

!testRun: #RestInterfaceTest #test11cartClockResetsAfterAdd stamp: 'JEA 12/3/2020 16:44:17'!
PASSED!

!testRun: #RestInterfaceTest #test12cartClockResetsAfterListing stamp: 'JEA 12/3/2020 16:44:17'!
PASSED!

!testRun: #RestInterfaceTest #test14cannotListPurchasesOfInvalidClient stamp: 'JEA 12/3/2020 16:44:17'!
PASSED!

!testRun: #RestInterfaceTest #test15cannotListPurchasesOfClientWithInvalidPassword stamp: 'JEA 12/3/2020 16:44:17'!
PASSED!

!testRun: #RestInterfaceTest #test16canListPurchasesClientWhoNeverCheckedOut stamp: 'JEA 12/3/2020 16:44:17'!
PASSED!

!testRun: #RestInterfaceTest #test17canListPurchasesClientWhoBoughtOneBook stamp: 'JEA 12/3/2020 16:44:17'!
PASSED!

!testRun: #RestInterfaceTest #test18canListPurchasesClientWhoBoughtMoreThanOneBook stamp: 'JEA 12/3/2020 16:44:17'!
PASSED!

!testRun: #RestInterfaceTest #test19canListPurchasesClientWhoCheckedOutMoreThanOneCart stamp: 'JEA 12/3/2020 16:44:17'!
PASSED!
!RestInterface methodsFor: 'api - private' stamp: 'JEA 12/3/2020 16:44:21' prior: 50894785!
clientPurchasesReportFor: aClientID

	"^clientPurchasesReports at: aClientID 
		ifAbsent: [ clientPurchasesReports at: aClientID put: ClientPurchasesReport new. ]."
	^clientPurchasesReports at: aClientID ifAbsentPut: [ ClientPurchasesReport new ].! !

!testRun: #RestInterfaceTest #test01cannotCreateCartForInvalidClientID stamp: 'JEA 12/3/2020 16:44:22'!
PASSED!

!testRun: #RestInterfaceTest #test02cannotCreateCartForClientWithWrongPassword stamp: 'JEA 12/3/2020 16:44:22'!
PASSED!

!testRun: #RestInterfaceTest #test03canCreateCartForWellAuthenticatedClient stamp: 'JEA 12/3/2020 16:44:22'!
PASSED!

!testRun: #RestInterfaceTest #test04canCreateMoreThanOneCartWithDifferentIDs stamp: 'JEA 12/3/2020 16:44:22'!
PASSED!

!testRun: #RestInterfaceTest #test05cannotAddToCartWithInvalidID stamp: 'JEA 12/3/2020 16:44:22'!
PASSED!

!testRun: #RestInterfaceTest #test06canAddItemToCartWithValidID stamp: 'JEA 12/3/2020 16:44:22'!
PASSED!

!testRun: #RestInterfaceTest #test07cannotCheckOutCartWithInvalidID stamp: 'JEA 12/3/2020 16:44:22'!
PASSED!

!testRun: #RestInterfaceTest #test08canCheckOutNonEmptyValidCartWithValidCreditCard stamp: 'JEA 12/3/2020 16:44:22'!
PASSED!

!testRun: #RestInterfaceTest #test09cannotListCartWithInvalidID stamp: 'JEA 12/3/2020 16:44:22'!
PASSED!

!testRun: #RestInterfaceTest #test10cannotInteractWithCartAfterTimeoutSinceCreated stamp: 'JEA 12/3/2020 16:44:22'!
PASSED!

!testRun: #RestInterfaceTest #test11cartClockResetsAfterAdd stamp: 'JEA 12/3/2020 16:44:22'!
PASSED!

!testRun: #RestInterfaceTest #test12cartClockResetsAfterListing stamp: 'JEA 12/3/2020 16:44:22'!
PASSED!

!testRun: #RestInterfaceTest #test14cannotListPurchasesOfInvalidClient stamp: 'JEA 12/3/2020 16:44:22'!
PASSED!

!testRun: #RestInterfaceTest #test15cannotListPurchasesOfClientWithInvalidPassword stamp: 'JEA 12/3/2020 16:44:22'!
PASSED!

!testRun: #RestInterfaceTest #test16canListPurchasesClientWhoNeverCheckedOut stamp: 'JEA 12/3/2020 16:44:22'!
PASSED!

!testRun: #RestInterfaceTest #test17canListPurchasesClientWhoBoughtOneBook stamp: 'JEA 12/3/2020 16:44:22'!
PASSED!

!testRun: #RestInterfaceTest #test18canListPurchasesClientWhoBoughtMoreThanOneBook stamp: 'JEA 12/3/2020 16:44:22'!
PASSED!

!testRun: #RestInterfaceTest #test19canListPurchasesClientWhoCheckedOutMoreThanOneCart stamp: 'JEA 12/3/2020 16:44:22'!
PASSED!
!RestInterface methodsFor: 'api - private' stamp: 'JEA 12/3/2020 16:44:44' prior: 50894861!
clientPurchasesReportFor: aClientID

	^clientPurchasesReports at: aClientID ifAbsentPut: [ ClientPurchasesReport new ].! !

----SNAPSHOT----(3 December 2020 16:44:45) CuisUniversity-4384.image priorSource: 18012078!
!RestInterface methodsFor: 'api - private' stamp: 'JEA 12/3/2020 16:46:14'!
newCartSessionForClient: aClientID

	^CartSession newFor: aClientID 
		acceptingItemsOf: catalog 
		withClock: clock
		withTimeout: cartTimeout.! !
!RestInterface methodsFor: 'as yet unclassified' stamp: 'JEA 12/3/2020 16:46:14' prior: 50890184!
createCartFor: aClientID password: aPassword
	| cartID |
	
	self authenticate: aClientID with: aPassword.

	cartID := self nextCartID.
	cartSessions at: cartID put: (self newCartSessionForClient: aClientID).
					
	^cartID.! !

!methodRemoval: RestInterface #newCartSessionFor: stamp: 'JEA 12/3/2020 16:46:14'!
newCartSessionFor: aClientID

	^CartSession newFor: aClientID 
		acceptingItemsOf: catalog 
		withClock: clock
		withTimeout: cartTimeout.!

----SNAPSHOT----(3 December 2020 16:46:45) CuisUniversity-4384.image priorSource: 18025370!
!CreditCardTest methodsFor: 'assertions' stamp: 'JEA 12/3/2020 16:49:31'!
assertCardIsNotCreatedBecauseOfInadequateLengthInNumber: aCardNumber

	self should: [ 
		CreditCard 
			numbered: aCardNumber 
			ownedBy: testObjectsFactory validCreditCardOwnersName 
			expiringOn: testObjectsFactory expirationDateNotReached. 
		]
		raise: Error
		withMessageText: CreditCard cannotCreateCardUnlessNumberIsOfAdequateLengthMessage.! !
!CreditCardTest methodsFor: 'tests' stamp: 'JEA 12/3/2020 16:49:58' prior: 50884238!
test01cantCreateCardWithNumberTooShort

	self assertCardIsNotCreatedBecauseOfInadequateLengthInNumber: testObjectsFactory invalidCardNumberShort.! !
!CreditCardTest methodsFor: 'tests' stamp: 'JEA 12/3/2020 16:50:12' prior: 50884252!
test02cantCreateCardWithNumberTooLong

	self self assertCardIsNotCreatedBecauseOfInadequateLengthInNumber: testObjectsFactory invalidCardNumberLong.! !
!CreditCardTest methodsFor: 'tests' stamp: 'JEA 12/3/2020 16:50:24' prior: 50894997!
test02cantCreateCardWithNumberTooLong

	self assertCardIsNotCreatedBecauseOfInadequateLengthInNumber: testObjectsFactory invalidCardNumberLong.! !
!CreditCardTest methodsFor: 'tests' stamp: 'JEA 12/3/2020 16:50:42' prior: 50884266!
test03cantCreateCardWithNumberNonNumeric

	self should: [ 
		CreditCard 
			numbered: testObjectsFactory invalidCardNumberNonNumeric 
			ownedBy: testObjectsFactory validCreditCardOwnersName 
			expiringOn: testObjectsFactory expirationDateNotReached. 
		]
		raise: Error
		withMessageText: CreditCard cannotCreateCardUnlessNumberIsNumericMessage.! !
!CreditCard class methodsFor: 'error messages' stamp: 'JEA 12/3/2020 16:51:00'!
cannotCreateCardUnlessNumberIsNumericMessage

	^'Card number should be of 16 numeric digits.'.! !
!CreditCard class methodsFor: 'as yet unclassified' stamp: 'JEA 12/3/2020 16:51:16' prior: 50885323!
ensureCardNumberIsNumeric: aString

	(aString allSatisfy: [ :aCharacter | aCharacter isDigit. ])
		ifFalse: [ self error: self cannotCreateCardUnlessNumberIsNumericMessage. ].! !

!testRun: #CreditCardTest #test01cantCreateCardWithNumberTooShort stamp: 'JEA 12/3/2020 16:51:29'!
PASSED!

!testRun: #CreditCardTest #test02cantCreateCardWithNumberTooLong stamp: 'JEA 12/3/2020 16:51:29'!
PASSED!

!testRun: #CreditCardTest #test03cantCreateCardWithNumberNonNumeric stamp: 'JEA 12/3/2020 16:51:29'!
PASSED!

----SNAPSHOT----(3 December 2020 16:51:33) CuisUniversity-4384.image priorSource: 18026274!
!StoreTestObjectsFactory methodsFor: 'rest interface' stamp: 'JEA 12/3/2020 16:52:14'!
clockSimulatingRealTime

	ClockSimulator newSimulatingRealTime.! !

!methodRemoval: StoreTestObjectsFactory #clockSimulatingRealTime stamp: 'JEA 12/3/2020 16:52:17'!
clockSimulatingRealTime

	ClockSimulator newSimulatingRealTime.!

!testRun: #RestInterfaceTest #test01cannotCreateCartForInvalidClientID stamp: 'JEA 12/3/2020 16:52:22'!
PASSED!

!testRun: #RestInterfaceTest #test02cannotCreateCartForClientWithWrongPassword stamp: 'JEA 12/3/2020 16:52:22'!
PASSED!

!testRun: #RestInterfaceTest #test03canCreateCartForWellAuthenticatedClient stamp: 'JEA 12/3/2020 16:52:22'!
PASSED!

!testRun: #RestInterfaceTest #test04canCreateMoreThanOneCartWithDifferentIDs stamp: 'JEA 12/3/2020 16:52:22'!
PASSED!

!testRun: #RestInterfaceTest #test05cannotAddToCartWithInvalidID stamp: 'JEA 12/3/2020 16:52:22'!
PASSED!

!testRun: #RestInterfaceTest #test06canAddItemToCartWithValidID stamp: 'JEA 12/3/2020 16:52:22'!
PASSED!

!testRun: #RestInterfaceTest #test07cannotCheckOutCartWithInvalidID stamp: 'JEA 12/3/2020 16:52:22'!
PASSED!

!testRun: #RestInterfaceTest #test08canCheckOutNonEmptyValidCartWithValidCreditCard stamp: 'JEA 12/3/2020 16:52:22'!
PASSED!

!testRun: #RestInterfaceTest #test09cannotListCartWithInvalidID stamp: 'JEA 12/3/2020 16:52:22'!
PASSED!

!testRun: #RestInterfaceTest #test10cannotInteractWithCartAfterTimeoutSinceCreated stamp: 'JEA 12/3/2020 16:52:22'!
PASSED!

!testRun: #RestInterfaceTest #test11cartClockResetsAfterAdd stamp: 'JEA 12/3/2020 16:52:22'!
PASSED!

!testRun: #RestInterfaceTest #test12cartClockResetsAfterListing stamp: 'JEA 12/3/2020 16:52:22'!
PASSED!

!testRun: #RestInterfaceTest #test14cannotListPurchasesOfInvalidClient stamp: 'JEA 12/3/2020 16:52:22'!
PASSED!

!testRun: #RestInterfaceTest #test15cannotListPurchasesOfClientWithInvalidPassword stamp: 'JEA 12/3/2020 16:52:22'!
PASSED!

!testRun: #RestInterfaceTest #test16canListPurchasesClientWhoNeverCheckedOut stamp: 'JEA 12/3/2020 16:52:22'!
PASSED!

!testRun: #RestInterfaceTest #test17canListPurchasesClientWhoBoughtOneBook stamp: 'JEA 12/3/2020 16:52:22'!
PASSED!

!testRun: #RestInterfaceTest #test18canListPurchasesClientWhoBoughtMoreThanOneBook stamp: 'JEA 12/3/2020 16:52:22'!
PASSED!

!testRun: #RestInterfaceTest #test19canListPurchasesClientWhoCheckedOutMoreThanOneCart stamp: 'JEA 12/3/2020 16:52:22'!
PASSED!
!RestInterfaceTest methodsFor: 'tests - creating cart' stamp: 'JEA 12/3/2020 16:52:29' prior: 50889578!
test01cannotCreateCartForInvalidClientID
	| restInterface authenticatorSimulator |
	
	authenticatorSimulator := AuthenticatorSimulator newSimulatingValidAuthentication.
	authenticatorSimulator simulateInvalidClientID.

	restInterface := RestInterface 
		authenticatingWith: authenticatorSimulator 
		debitingWith: self 
		itemsFrom: Dictionary new 
		withClock: ClockSimulator newSimulatingRealTime 
		withCartTimeout: testObjectsFactory cartTimeout.
	
	self should: [ restInterface 
				createCartFor: testObjectsFactory validClientID 
				password: testObjectsFactory correctPassword. ]
		raise: Error
		withMessageText: RestInterface authenticationFailedMessage.! !
!RestInterfaceTest methodsFor: 'tests - creating cart' stamp: 'JEA 12/3/2020 16:52:32' prior: 50889445!
test02cannotCreateCartForClientWithWrongPassword
	| restInterface authenticatorSimulator |
	
	authenticatorSimulator := AuthenticatorSimulator newSimulatingValidAuthentication.
	authenticatorSimulator simulateWrongPassword.
	
	restInterface := RestInterface 
		authenticatingWith: authenticatorSimulator 
		debitingWith: self 
		itemsFrom: Dictionary new 
		withClock: ClockSimulator newSimulatingRealTime 
		withCartTimeout: testObjectsFactory cartTimeout.
	
	self should: [ restInterface 
				createCartFor: testObjectsFactory validClientID 
				password: testObjectsFactory correctPassword. ]
		raise: Error
		withMessageText: RestInterface authenticationFailedMessage.! !
!RestInterfaceTest methodsFor: 'tests - creating cart' stamp: 'JEA 12/3/2020 16:52:36' prior: 50889391!
test03canCreateCartForWellAuthenticatedClient
	| restInterface authenticatorSimulator cartID cartList |
	
	authenticatorSimulator := AuthenticatorSimulator newSimulatingValidAuthentication.
	
	restInterface := RestInterface 
		authenticatingWith: authenticatorSimulator 
		debitingWith: self 
		itemsFrom: Dictionary new 
		withClock: ClockSimulator newSimulatingRealTime 
		withCartTimeout: testObjectsFactory cartTimeout.
	
	cartID := restInterface 
				createCartFor: testObjectsFactory validClientID 
				password: testObjectsFactory correctPassword.
	
	cartList := restInterface listItemsInCartWithID: cartID.
	
	self assert: cartList isEmpty.! !
!RestInterfaceTest methodsFor: 'tests - creating cart' stamp: 'JEA 12/3/2020 16:52:39' prior: 50889506!
test04canCreateMoreThanOneCartWithDifferentIDs
	| restInterface authenticatorSimulator cartID1 cartID2 |
	
	authenticatorSimulator := AuthenticatorSimulator newSimulatingValidAuthentication.
	
	restInterface := RestInterface 
		authenticatingWith: authenticatorSimulator 
		debitingWith: self 
		itemsFrom: Dictionary new 
		withClock: ClockSimulator newSimulatingRealTime 
		withCartTimeout: testObjectsFactory cartTimeout.
	
	cartID1 := restInterface 
				createCartFor: testObjectsFactory validClientID 
				password: testObjectsFactory correctPassword.

	cartID2 := restInterface 
				createCartFor: testObjectsFactory validClientID 
				password: testObjectsFactory correctPassword.
	
	self assert: cartID1 ~= cartID2.! !
!RestInterfaceTest methodsFor: 'tests - adding to cart' stamp: 'JEA 12/3/2020 16:53:19' prior: 50891368!
test05cannotAddToCartWithInvalidID
	| restInterface |

	restInterface := RestInterface 
		authenticatingWith: AuthenticatorSimulator newSimulatingValidAuthentication 
		debitingWith: self itemsFrom: testObjectsFactory defaultCatalog 
		withClock: ClockSimulator newSimulatingRealTime 
		withCartTimeout: testObjectsFactory cartTimeout.
	
	self should: [ 
		restInterface 
			add: 1 
			of: testObjectsFactory itemSoldByTheStore 
			toCartWithID: testObjectsFactory invalidCartID. 
		]
		raise: Error
		withMessageText: RestInterface cartIDInvalidOrTimedOutMessage.! !
!RestInterfaceTest methodsFor: 'tests - adding to cart' stamp: 'JEA 12/3/2020 16:53:43' prior: 50889291!
test06canAddItemToCartWithValidID
	| restInterface cartID |

	restInterface := RestInterface 
		authenticatingWith: AuthenticatorSimulator newSimulatingValidAuthentication 
		debitingWith: self itemsFrom: testObjectsFactory defaultCatalog 
		withClock: ClockSimulator newSimulatingRealTime
		withCartTimeout: testObjectsFactory cartTimeout.
	
	cartID := restInterface 
		createCartFor: testObjectsFactory validClientID
		password: testObjectsFactory correctPassword.
	
	restInterface 
		add: 2 
		of: testObjectsFactory itemSoldByTheStore 
		toCartWithID: cartID.
	
	self assert: 2 
		equals: ((restInterface listItemsInCartWithID: cartID) occurrencesOf: testObjectsFactory itemSoldByTheStore).! !
!StoreTestObjectsFactory methodsFor: 'rest interface' stamp: 'JEA 12/3/2020 16:54:13'!
defaultValidRestInterface

	^RestInterface 
		authenticatingWith: AuthenticatorSimulator newSimulatingValidAuthentication 
		debitingWith: self itemsFrom: self defaultCatalog 
		withClock: ClockSimulator newSimulatingRealTime
		withCartTimeout: self cartTimeout.! !

!methodRemoval: StoreTestObjectsFactory #defaultValidRestInterface stamp: 'JEA 12/3/2020 16:54:35'!
defaultValidRestInterface

	^RestInterface 
		authenticatingWith: AuthenticatorSimulator newSimulatingValidAuthentication 
		debitingWith: self itemsFrom: self defaultCatalog 
		withClock: ClockSimulator newSimulatingRealTime
		withCartTimeout: self cartTimeout.!

!testRun: #RestInterfaceTest #test03canCreateCartForWellAuthenticatedClient stamp: 'JEA 12/3/2020 16:54:58'!
PASSED!

!testRun: #CartTest #test01NewCartsAreCreatedEmpty stamp: 'JEA 12/3/2020 16:54:58'!
PASSED!

!testRun: #CartTest #test02CanNotAddItemsThatDoNotBelongToStore stamp: 'JEA 12/3/2020 16:54:58'!
PASSED!

!testRun: #CartTest #test03AfterAddingAnItemTheCartIsNotEmptyAnymore stamp: 'JEA 12/3/2020 16:54:58'!
PASSED!

!testRun: #CartTest #test04CanNotAddNonPositiveNumberOfItems stamp: 'JEA 12/3/2020 16:54:58'!
PASSED!

!testRun: #CartTest #test05CanNotAddMoreThanOneItemNotSellByTheStore stamp: 'JEA 12/3/2020 16:54:58'!
PASSED!

!testRun: #CartTest #test06CartRemembersAddedItems stamp: 'JEA 12/3/2020 16:54:58'!
PASSED!

!testRun: #CartTest #test07CartDoesNotHoldNotAddedItems stamp: 'JEA 12/3/2020 16:54:58'!
PASSED!

!testRun: #CartTest #test08CartRemembersTheNumberOfAddedItems stamp: 'JEA 12/3/2020 16:54:58'!
PASSED!

!testRun: #CashierTest #test01CanNotCheckoutAnEmptyCart stamp: 'JEA 12/3/2020 16:54:58'!
PASSED!

!testRun: #CashierTest #test02CalculatedTotalIsCorrect stamp: 'JEA 12/3/2020 16:54:58'!
PASSED!

!testRun: #CashierTest #test03CanNotCheckoutWithAnExpiredCreditCart stamp: 'JEA 12/3/2020 16:54:58'!
PASSED!

!testRun: #CashierTest #test04CheckoutRegistersASale stamp: 'JEA 12/3/2020 16:54:58'!
PASSED!

!testRun: #CashierTest #test05CashierChargesCreditCardUsingMerchantProcessor stamp: 'JEA 12/3/2020 16:54:58'!
PASSED!

!testRun: #CashierTest #test06CashierDoesNotSaleWhenTheCreditCardHasNoCredit stamp: 'JEA 12/3/2020 16:54:58'!
PASSED!

!testRun: #CreditCardTest #test01cantCreateCardWithNumberTooShort stamp: 'JEA 12/3/2020 16:54:58'!
PASSED!

!testRun: #CreditCardTest #test02cantCreateCardWithNumberTooLong stamp: 'JEA 12/3/2020 16:54:58'!
PASSED!

!testRun: #CreditCardTest #test03cantCreateCardWithNumberNonNumeric stamp: 'JEA 12/3/2020 16:54:58'!
PASSED!

!testRun: #RestInterfaceTest #test01cannotCreateCartForInvalidClientID stamp: 'JEA 12/3/2020 16:54:58'!
PASSED!

!testRun: #RestInterfaceTest #test02cannotCreateCartForClientWithWrongPassword stamp: 'JEA 12/3/2020 16:54:58'!
PASSED!

!testRun: #RestInterfaceTest #test03canCreateCartForWellAuthenticatedClient stamp: 'JEA 12/3/2020 16:54:58'!
PASSED!

!testRun: #RestInterfaceTest #test04canCreateMoreThanOneCartWithDifferentIDs stamp: 'JEA 12/3/2020 16:54:58'!
PASSED!

!testRun: #RestInterfaceTest #test05cannotAddToCartWithInvalidID stamp: 'JEA 12/3/2020 16:54:58'!
PASSED!

!testRun: #RestInterfaceTest #test06canAddItemToCartWithValidID stamp: 'JEA 12/3/2020 16:54:58'!
PASSED!

!testRun: #RestInterfaceTest #test07cannotCheckOutCartWithInvalidID stamp: 'JEA 12/3/2020 16:54:58'!
PASSED!

!testRun: #RestInterfaceTest #test08canCheckOutNonEmptyValidCartWithValidCreditCard stamp: 'JEA 12/3/2020 16:54:58'!
PASSED!

!testRun: #RestInterfaceTest #test09cannotListCartWithInvalidID stamp: 'JEA 12/3/2020 16:54:58'!
PASSED!

!testRun: #RestInterfaceTest #test10cannotInteractWithCartAfterTimeoutSinceCreated stamp: 'JEA 12/3/2020 16:54:58'!
PASSED!

!testRun: #RestInterfaceTest #test11cartClockResetsAfterAdd stamp: 'JEA 12/3/2020 16:54:58'!
PASSED!

!testRun: #RestInterfaceTest #test12cartClockResetsAfterListing stamp: 'JEA 12/3/2020 16:54:58'!
PASSED!

!testRun: #RestInterfaceTest #test14cannotListPurchasesOfInvalidClient stamp: 'JEA 12/3/2020 16:54:58'!
PASSED!

!testRun: #RestInterfaceTest #test15cannotListPurchasesOfClientWithInvalidPassword stamp: 'JEA 12/3/2020 16:54:58'!
PASSED!

!testRun: #RestInterfaceTest #test16canListPurchasesClientWhoNeverCheckedOut stamp: 'JEA 12/3/2020 16:54:58'!
PASSED!

!testRun: #RestInterfaceTest #test17canListPurchasesClientWhoBoughtOneBook stamp: 'JEA 12/3/2020 16:54:58'!
PASSED!

!testRun: #RestInterfaceTest #test18canListPurchasesClientWhoBoughtMoreThanOneBook stamp: 'JEA 12/3/2020 16:54:58'!
PASSED!

!testRun: #RestInterfaceTest #test19canListPurchasesClientWhoCheckedOutMoreThanOneCart stamp: 'JEA 12/3/2020 16:54:58'!
PASSED!

----QUIT----(3 December 2020 16:55:04) CuisUniversity-4384.image priorSource: 18028855!