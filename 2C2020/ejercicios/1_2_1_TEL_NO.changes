

----STARTUP---- (1 November 2020 14:53:46) as /home/nahuel/Documents/cuisuniversity/CuisUniversity-4384.image!


----End fileIn of /home/nahuel/git/isw1-2c2020-ejercicios/17-TerniLapilli/Terni Lapilli.st----!

!testRun: #TerniLapilliTest #test01FirstPlayerIsX stamp: 'NNH 11/1/2020 14:54:39'!
PASSED!

!testRun: #TerniLapilliTest #test02SecondPlayerIsO stamp: 'NNH 11/1/2020 14:54:39'!
PASSED!

!testRun: #TerniLapilliTest #test03ThirdPlayerIsX stamp: 'NNH 11/1/2020 14:54:39'!
PASSED!

!testRun: #TerniLapilliTest #test04PlayersShouldNotPlayOnOccupiedCell stamp: 'NNH 11/1/2020 14:54:39'!
PASSED!

!testRun: #TerniLapilliTest #test05ShouldNotPlaceAChipToTheRightOfTheBoard stamp: 'NNH 11/1/2020 14:54:39'!
PASSED!

!testRun: #TerniLapilliTest #test07ShouldNotPlaceAChipToTheLeftOfTheBoard stamp: 'NNH 11/1/2020 14:54:39'!
PASSED!

!testRun: #TerniLapilliTest #test09ShouldNotPlaceAChipBelowTheBoard stamp: 'NNH 11/1/2020 14:54:39'!
PASSED!

!testRun: #TerniLapilliTest #test11ShouldNotPlaceAChipAboveTheBoard stamp: 'NNH 11/1/2020 14:54:39'!
PASSED!

!testRun: #TerniLapilliTest #test13 stamp: 'NNH 11/1/2020 14:54:39'!
PASSED!

!testRun: #TerniLapilliTest #test15 stamp: 'NNH 11/1/2020 14:54:39'!
PASSED!

!testRun: #TerniLapilliTest #test16 stamp: 'NNH 11/1/2020 14:54:39'!
PASSED!

!testRun: #TerniLapilliTest #test17InitialGameIsNotOver stamp: 'NNH 11/1/2020 14:54:39'!
PASSED!

!testRun: #TerniLapilliTest #test18FirstRowForXIsWinningGame stamp: 'NNH 11/1/2020 14:54:39'!
PASSED!

!testRun: #TerniLapilliTest #test19FirstColumnForOISWinningGame stamp: 'NNH 11/1/2020 14:54:39'!
PASSED!

!testRun: #TerniLapilliTest #test20 stamp: 'NNH 11/1/2020 14:54:39'!
PASSED!

!testRun: #TerniLapilliTest #test21 stamp: 'NNH 11/1/2020 14:54:39'!
PASSED!

!testRun: #TerniLapilliTest #test22 stamp: 'NNH 11/1/2020 14:54:39'!
PASSED!

!testRun: #TerniLapilliTest #test23 stamp: 'NNH 11/1/2020 14:54:39'!
PASSED!

!testRun: #TerniLapilliTest #test24AfterAMovingOperationOfXIsOTurn stamp: 'NNH 11/1/2020 14:54:39'!
PASSED!

!testRun: #TerniLapilliTest #test25MovingOperationDoesNotAllowPlayingOnOthersTurn stamp: 'NNH 11/1/2020 14:54:39'!
PASSED!

!testRun: #TerniLapilliTest #test26 stamp: 'NNH 11/1/2020 14:54:39'!
PASSED!

!testRun: #TerniLapilliTest #test27 stamp: 'NNH 11/1/2020 14:54:39'!
PASSED!

!testRun: #TerniLapilliTest #test28 stamp: 'NNH 11/1/2020 14:54:39'!
PASSED!

!testRun: #TerniLapilliTest #test29 stamp: 'NNH 11/1/2020 14:54:39'!
PASSED!

!testRun: #TerniLapilliTest #test30 stamp: 'NNH 11/1/2020 14:54:39'!
PASSED!

!classRemoval: #TerniLapilliStatePlacing stamp: 'NNH 11/1/2020 16:34:02'!
TerniLapilliState subclass: #TerniLapilliStatePlacing
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Terni Lapilli'!

!classRemoval: #TerniLapilliStateMoving stamp: 'NNH 11/1/2020 16:34:02'!
TerniLapilliState subclass: #TerniLapilliStateMoving
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Terni Lapilli'!

!classRemoval: #TerniLapilliStateGameOver stamp: 'NNH 11/1/2020 16:34:03'!
TerniLapilliState subclass: #TerniLapilliStateGameOver
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Terni Lapilli'!

!classRemoval: #TerniLapilliState stamp: 'NNH 11/1/2020 16:34:03'!
Object subclass: #TerniLapilliState
	instanceVariableNames: 'terniLapilli board nextPlayer'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Terni Lapilli'!

!classRemoval: #TerniLapilli stamp: 'NNH 11/1/2020 16:34:03'!
Object subclass: #TerniLapilli
	instanceVariableNames: 'nextPlayer cells state'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Terni Lapilli'!

!classRemoval: #TerniLapilliTest stamp: 'NNH 11/1/2020 16:34:04'!
TestCase subclass: #TerniLapilliTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Terni Lapilli'!

----STARTUP---- (1 November 2020 20:17:08) as /home/nahuel/Documents/cuisuniversity/CuisUniversity-4384.image!


----End fileIn of /home/nahuel/git/isw1-2c2020-ejercicios/17-TerniLapilli/Terni Lapilli.st----!

----STARTUP---- (1 November 2020 20:22:01) as /home/nahuel/Documents/cuisuniversity/CuisUniversity-4384.image!


----End fileIn of /home/nahuel/git/isw1-2c2020-ejercicios/17-TerniLapilli/Terni Lapilli.st----!

!classRemoval: #TerniLapilliStatePlacing stamp: 'NNH 11/1/2020 20:22:26'!
TerniLapilliState subclass: #TerniLapilliStatePlacing
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Terni Lapilli'!

!classRemoval: #TerniLapilliStateMoving stamp: 'NNH 11/1/2020 20:22:27'!
TerniLapilliState subclass: #TerniLapilliStateMoving
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Terni Lapilli'!

!classRemoval: #TerniLapilliStateGameOver stamp: 'NNH 11/1/2020 20:22:27'!
TerniLapilliState subclass: #TerniLapilliStateGameOver
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Terni Lapilli'!

!classRemoval: #TerniLapilliState stamp: 'NNH 11/1/2020 20:22:27'!
Object subclass: #TerniLapilliState
	instanceVariableNames: 'terniLapilli board nextPlayer'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Terni Lapilli'!

!classRemoval: #TerniLapilli stamp: 'NNH 11/1/2020 20:22:28'!
Object subclass: #TerniLapilli
	instanceVariableNames: 'nextPlayer waitingPlayer cells state'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Terni Lapilli'!

!classRemoval: #TerniLapilliTest stamp: 'NNH 11/1/2020 20:22:28'!
TestCase subclass: #TerniLapilliTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Terni Lapilli'!

----End fileIn of /home/nahuel/git/isw1-2c2020-ejercicios/17-TerniLapilli/Terni Lapilli.st----!
!TerniLapilli methodsFor: 'assertions' stamp: 'NNH 11/1/2020 20:24:26'!
assertThatCellCanBeOccupied: aCell by: aPlayerWantingToPlay
	self assertThatIsWithinBoardLimits: aCell.
	self assertThatItsTheTurnOf: aPlayerWantingToPlay.
	self assertThatIsNotAlreadyOccupied: aCell.! !
!TerniLapilli methodsFor: 'as yet unclassified' stamp: 'NNH 11/1/2020 20:24:26' prior: 50876260!
moveFrom: anOccupiedCell to: aFreeCell by: aPlayerWantingToPlay

	self assertThatCellCanBeOccupied: aFreeCell by: aPlayerWantingToPlay.
	self assertThatMovementIsValidFrom: anOccupiedCell to: aFreeCell .
	
	(cells at: aPlayerWantingToPlay ) remove: anOccupiedCell 
		ifAbsent: [self signalCanNotMoveFromACellWithoutAChipOfItsOwnership ].
	(cells at: aPlayerWantingToPlay) add: aFreeCell .
	
	self updateState.
! !
!TerniLapilli methodsFor: 'as yet unclassified' stamp: 'NNH 11/1/2020 20:24:26' prior: 50876276!
placeAt: aCell by: aPlayerWantingToPlay

	self assertThatCellCanBeOccupied: aCell by: aPlayerWantingToPlay.
	
	(cells at: aPlayerWantingToPlay) add: aCell.
	self updateState.! !

!methodRemoval: TerniLapilli #assertThatCanBeOccupiedAt:by: stamp: 'NNH 11/1/2020 20:24:26'!
assertThatCanBeOccupiedAt: aCell by: aPlayerWantingToPlay
	self assertThatIsWithinBoardLimits: aCell.
	self assertThatItsTheTurnOf: aPlayerWantingToPlay.
	self assertThatIsNotAlreadyOccupied: aCell.!
!TerniLapilli methodsFor: 'testing players -- private' stamp: 'NNH 11/1/2020 20:28:30'!
aPlayerHasAlreadyWon

	^((self hasPlayedThreeChips: #X) and: [self hasThreeAlignedChips: #X]) or: [
		(self hasPlayedThreeChips: #O) and: [self hasThreeAlignedChips: #O]]! !
!TerniLapilliState class methodsFor: 'as yet unclassified' stamp: 'NNH 11/1/2020 20:28:30' prior: 50876534!
for: aTerniLapilli with: aBoard playing: aPlayer 
	(aTerniLapilli aPlayerHasAlreadyWon) ifTrue: [ ^TerniLapilliStateGameOver new initializeFor: aTerniLapilli with: aBoard playing: aPlayer ].
	(aBoard at: #O) size = 3 ifTrue: [^ TerniLapilliStateMoving new initializeFor: aTerniLapilli with: aBoard playing: aPlayer ].
	^TerniLapilliStatePlacing new initializeFor: aTerniLapilli with: aBoard playing: aPlayer ! !

!methodRemoval: TerniLapilli #aPlayerHasThreeAlignedChips stamp: 'NNH 11/1/2020 20:28:30'!
aPlayerHasThreeAlignedChips

	^((self hasPlayedThreeChips: #X) and: [self hasThreeAlignedChips: #X]) or: [
		(self hasPlayedThreeChips: #O) and: [self hasThreeAlignedChips: #O]]!
!TerniLapilli methodsFor: 'testing players -- private' stamp: 'NNH 11/1/2020 20:29:36' prior: 50876693!
aPlayerHasAlreadyWon

	^ self hasOAlreadyWon or: [
		self hasXAlreadyWon ]! !
!TerniLapilli methodsFor: 'testing players -- private' stamp: 'NNH 11/1/2020 20:29:51' prior: 50876727!
aPlayerHasAlreadyWon

	^ self hasXAlreadyWon or: [self hasOAlreadyWon].! !
!TerniLapilliState class methodsFor: 'instance creation' stamp: 'NNH 11/1/2020 20:34:01'!
for: aTerniLapilli

	| subclass |
	subclass = self subclasses detect: [:aSubclass | aSubclass canHandle: aTerniLapilli ] ifNone: [].
	^subclass new initializeFor: aTerniLapilli.
	! !
!TerniLapilliState class methodsFor: 'instance creation' stamp: 'NNH 11/1/2020 20:34:35' prior: 50876739!
for: aTerniLapilli

	| subclass |
	
	subclass := self subclasses detect: [:aSubclass | aSubclass canHandle: aTerniLapilli ].
	
	^subclass new initializeFor: aTerniLapilli.
	! !

Object subclass: #TerniLapilliState
	instanceVariableNames: 'terniLapilli'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Terni Lapilli'!

!classDefinition: #TerniLapilliState category: 'Terni Lapilli' stamp: 'NNH 11/1/2020 20:35:29'!
Object subclass: #TerniLapilliState
	instanceVariableNames: 'terniLapilli'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Terni Lapilli'!
!TerniLapilliState methodsFor: 'initializing' stamp: 'NNH 11/1/2020 20:35:57'!
initializeFor: aTerniLapilli

	terniLapilli := aTerniLapilli.
! !

!methodRemoval: TerniLapilliState #initializeFor:with:playing: stamp: 'NNH 11/1/2020 20:36:02'!
initializeFor: aTerniLapilli with: aBoard playing: aPlayer
	terniLapilli := aTerniLapilli.
	board := aBoard.
	nextPlayer := aPlayer.!

!methodRemoval: TerniLapilliState class #for:with:playing: stamp: 'NNH 11/1/2020 20:36:23'!
for: aTerniLapilli with: aBoard playing: aPlayer 
	(aTerniLapilli aPlayerHasAlreadyWon) ifTrue: [ ^TerniLapilliStateGameOver new initializeFor: aTerniLapilli with: aBoard playing: aPlayer ].
	(aBoard at: #O) size = 3 ifTrue: [^ TerniLapilliStateMoving new initializeFor: aTerniLapilli with: aBoard playing: aPlayer ].
	^TerniLapilliStatePlacing new initializeFor: aTerniLapilli with: aBoard playing: aPlayer !
!TerniLapilli methodsFor: 'initializing' stamp: 'NNH 11/1/2020 20:36:33' prior: 50876344 overrides: 16896425!
initialize
	cells := Dictionary new.
	cells at: #X put: OrderedCollection new.
	cells at: #O put: OrderedCollection new.
	nextPlayer := #X.
	waitingPlayer := #O.
	state := TerniLapilliStatePlacing for: self.! !
!TerniLapilli methodsFor: 'state update' stamp: 'NNH 11/1/2020 20:36:43' prior: 50876361!
updateState

	state := TerniLapilliState for: self.
	self changeTurns ! !
!TerniLapilliStateGameOver class methodsFor: 'nil' stamp: 'NNH 11/1/2020 20:37:29'!
canHandle: aTerniLapilli
	
	^ aTerniLapilli aPlayerHasAlreadyWon.! !
!TerniLapilliStateMoving class methodsFor: 'nil' stamp: 'NNH 11/1/2020 20:40:16'!
canHandle: aTerniLapilli

	aTerniLapilli
	
	! !
!TerniLapilliStateMoving class methodsFor: 'as yet unclassified' stamp: 'NNH 11/1/2020 20:40:56' prior: 50876819!
canHandle: aTerniLapilli

	^ aTerniLapilli hasPlayedThreeChips: #O.
	
	! !
!TerniLapilliStatePlacing class methodsFor: 'no messages' stamp: 'NNH 11/1/2020 20:41:33'!
canHandle: aTerniLapilli
	
	^ true.! !
!TerniLapilliStatePlacing class methodsFor: 'as yet unclassified' stamp: 'NNH 11/1/2020 20:43:11' prior: 50876831!
canHandle: aTerniLapilli
	
	^ aTerniLapilli aPlayerHasAlreadyWon not and: [
		(aTerniLapilli hasPlayedThreeChips: #O) not]! !
!TerniLapilliStateMoving class methodsFor: 'instance creation' stamp: 'NNH 11/1/2020 20:44:11' prior: 50876825!
canHandle: aTerniLapilli

	^ (aTerniLapilli hasPlayedThreeChips: #O) and: [
		aTerniLapilli aPlayerHasAlreadyWon not
		]
	
	! !
!TerniLapilliState class methodsFor: 'nil' stamp: 'NNH 11/1/2020 20:45:25'!
canHandle: aTerniLapilli
	
	self subclassResponsibility.! !

!testRun: #TerniLapilliTest #test01FirstPlayerIsX stamp: 'NNH 11/1/2020 20:45:44'!
ERROR!

!testRun: #TerniLapilliTest #test02SecondPlayerIsO stamp: 'NNH 11/1/2020 20:45:44'!
ERROR!

!testRun: #TerniLapilliTest #test03ThirdPlayerIsX stamp: 'NNH 11/1/2020 20:45:44'!
ERROR!

!testRun: #TerniLapilliTest #test04PlayersShouldNotPlayOnOccupiedCell stamp: 'NNH 11/1/2020 20:45:44'!
ERROR!

!testRun: #TerniLapilliTest #test05ShouldNotPlaceAChipToTheRightOfTheBoard stamp: 'NNH 11/1/2020 20:45:44'!
ERROR!

!testRun: #TerniLapilliTest #test07ShouldNotPlaceAChipToTheLeftOfTheBoard stamp: 'NNH 11/1/2020 20:45:44'!
ERROR!

!testRun: #TerniLapilliTest #test09ShouldNotPlaceAChipBelowTheBoard stamp: 'NNH 11/1/2020 20:45:44'!
ERROR!

!testRun: #TerniLapilliTest #test11ShouldNotPlaceAChipAboveTheBoard stamp: 'NNH 11/1/2020 20:45:44'!
ERROR!

!testRun: #TerniLapilliTest #test13OShouldNotPlaceWhenItsXsTurn stamp: 'NNH 11/1/2020 20:45:44'!
ERROR!

!testRun: #TerniLapilliTest #test15PlayerShouldNotMoveBeforePlacingThreeChips stamp: 'NNH 11/1/2020 20:45:44'!
ERROR!

!testRun: #TerniLapilliTest #test17InitialGameIsNotOver stamp: 'NNH 11/1/2020 20:45:44'!
ERROR!

!testRun: #TerniLapilliTest #test18FirstRowForXIsWinningGame stamp: 'NNH 11/1/2020 20:45:44'!
ERROR!

!testRun: #TerniLapilliTest #test19FirstColumnForOIsWinningGame stamp: 'NNH 11/1/2020 20:45:44'!
ERROR!

!testRun: #TerniLapilliTest #test20ShouldNotMoveChipToOccupiedCell stamp: 'NNH 11/1/2020 20:45:44'!
ERROR!

!testRun: #TerniLapilliTest #test21ShouldNotPlaceWhenGameIsOver stamp: 'NNH 11/1/2020 20:45:44'!
ERROR!

!testRun: #TerniLapilliTest #test22GameIsOverAfterOMoves stamp: 'NNH 11/1/2020 20:45:44'!
ERROR!

!testRun: #TerniLapilliTest #test23ShouldNotMoveWhenGameIsOver stamp: 'NNH 11/1/2020 20:45:44'!
ERROR!

!testRun: #TerniLapilliTest #test24AfterAMovingOperationOfXIsOTurn stamp: 'NNH 11/1/2020 20:45:44'!
ERROR!

!testRun: #TerniLapilliTest #test25MovingOperationDoesNotAllowPlayingOnOthersTurn stamp: 'NNH 11/1/2020 20:45:44'!
ERROR!

!testRun: #TerniLapilliTest #test26APlayerShouldNotMoveFromACellWithoutAChipOfItsOwnership stamp: 'NNH 11/1/2020 20:45:44'!
ERROR!

!testRun: #TerniLapilliTest #test27PlayerShouldNotMoveChipToNonAdjacentCell stamp: 'NNH 11/1/2020 20:45:44'!
ERROR!

!testRun: #TerniLapilliTest #test28PlayerShouldNotMoveDiagonallyOutsideMainDiagonals stamp: 'NNH 11/1/2020 20:45:44'!
ERROR!

!testRun: #TerniLapilliTest #test29PlayerShouldBeAbleToMoveAlongMainDiagonals stamp: 'NNH 11/1/2020 20:45:44'!
ERROR!

!testRun: #TerniLapilliTest #test30PlayerShouldNotPlaceAfterPlacingThreeChips stamp: 'NNH 11/1/2020 20:45:44'!
ERROR!

!testRun: #TerniLapilliTest #test31XShouldBeDeclaredWinnerIfThreeChipsAligned stamp: 'NNH 11/1/2020 20:45:44'!
ERROR!

!testRun: #TerniLapilliTest #test01FirstPlayerIsX stamp: 'NNH 11/1/2020 20:45:54'!
ERROR!

!testRun: #TerniLapilliTest #test01FirstPlayerIsX stamp: 'NNH 11/1/2020 20:46:39'!
ERROR!

!testRun: #TerniLapilliTest #test01FirstPlayerIsX stamp: 'NNH 11/1/2020 20:46:39'!
ERROR!

!testRun: #TerniLapilliTest #test01FirstPlayerIsX stamp: 'NNH 11/1/2020 20:46:59'!
ERROR!

!testRun: #TerniLapilliTest #test01FirstPlayerIsX stamp: 'NNH 11/1/2020 20:47:06'!
ERROR!

!testRun: #TerniLapilliTest #test01FirstPlayerIsX stamp: 'NNH 11/1/2020 20:47:20'!
ERROR!

subclasses!

self subclasses!
!TerniLapilliState class methodsFor: 'instance creation' stamp: 'NNH 11/1/2020 20:48:34' prior: 50876749!
for: aTerniLapilli

	| subclass |
	
	subclass := self allSubclasses detect: [:aSubclass | aSubclass canHandle: aTerniLapilli ].
	
	^subclass new initializeFor: aTerniLapilli.
	! !

!testRun: #TerniLapilliTest #test01FirstPlayerIsX stamp: 'NNH 11/1/2020 20:48:38'!
ERROR!

!testRun: #TerniLapilliTest #test02SecondPlayerIsO stamp: 'NNH 11/1/2020 20:48:38'!
ERROR!

!testRun: #TerniLapilliTest #test03ThirdPlayerIsX stamp: 'NNH 11/1/2020 20:48:38'!
ERROR!

!testRun: #TerniLapilliTest #test04PlayersShouldNotPlayOnOccupiedCell stamp: 'NNH 11/1/2020 20:48:38'!
ERROR!

!testRun: #TerniLapilliTest #test05ShouldNotPlaceAChipToTheRightOfTheBoard stamp: 'NNH 11/1/2020 20:48:38'!
ERROR!

!testRun: #TerniLapilliTest #test07ShouldNotPlaceAChipToTheLeftOfTheBoard stamp: 'NNH 11/1/2020 20:48:38'!
ERROR!

!testRun: #TerniLapilliTest #test09ShouldNotPlaceAChipBelowTheBoard stamp: 'NNH 11/1/2020 20:48:38'!
ERROR!

!testRun: #TerniLapilliTest #test11ShouldNotPlaceAChipAboveTheBoard stamp: 'NNH 11/1/2020 20:48:38'!
ERROR!

!testRun: #TerniLapilliTest #test13OShouldNotPlaceWhenItsXsTurn stamp: 'NNH 11/1/2020 20:48:38'!
ERROR!

!testRun: #TerniLapilliTest #test15PlayerShouldNotMoveBeforePlacingThreeChips stamp: 'NNH 11/1/2020 20:48:38'!
ERROR!

!testRun: #TerniLapilliTest #test17InitialGameIsNotOver stamp: 'NNH 11/1/2020 20:48:38'!
ERROR!

!testRun: #TerniLapilliTest #test18FirstRowForXIsWinningGame stamp: 'NNH 11/1/2020 20:48:38'!
ERROR!

!testRun: #TerniLapilliTest #test19FirstColumnForOIsWinningGame stamp: 'NNH 11/1/2020 20:48:38'!
ERROR!

!testRun: #TerniLapilliTest #test20ShouldNotMoveChipToOccupiedCell stamp: 'NNH 11/1/2020 20:48:38'!
ERROR!

!testRun: #TerniLapilliTest #test21ShouldNotPlaceWhenGameIsOver stamp: 'NNH 11/1/2020 20:48:38'!
ERROR!

!testRun: #TerniLapilliTest #test22GameIsOverAfterOMoves stamp: 'NNH 11/1/2020 20:48:38'!
ERROR!

!testRun: #TerniLapilliTest #test23ShouldNotMoveWhenGameIsOver stamp: 'NNH 11/1/2020 20:48:38'!
ERROR!

!testRun: #TerniLapilliTest #test24AfterAMovingOperationOfXIsOTurn stamp: 'NNH 11/1/2020 20:48:38'!
ERROR!

!testRun: #TerniLapilliTest #test25MovingOperationDoesNotAllowPlayingOnOthersTurn stamp: 'NNH 11/1/2020 20:48:38'!
ERROR!

!testRun: #TerniLapilliTest #test26APlayerShouldNotMoveFromACellWithoutAChipOfItsOwnership stamp: 'NNH 11/1/2020 20:48:38'!
ERROR!

!testRun: #TerniLapilliTest #test27PlayerShouldNotMoveChipToNonAdjacentCell stamp: 'NNH 11/1/2020 20:48:38'!
ERROR!

!testRun: #TerniLapilliTest #test28PlayerShouldNotMoveDiagonallyOutsideMainDiagonals stamp: 'NNH 11/1/2020 20:48:38'!
ERROR!

!testRun: #TerniLapilliTest #test29PlayerShouldBeAbleToMoveAlongMainDiagonals stamp: 'NNH 11/1/2020 20:48:38'!
ERROR!

!testRun: #TerniLapilliTest #test30PlayerShouldNotPlaceAfterPlacingThreeChips stamp: 'NNH 11/1/2020 20:48:38'!
ERROR!

!testRun: #TerniLapilliTest #test31XShouldBeDeclaredWinnerIfThreeChipsAligned stamp: 'NNH 11/1/2020 20:48:38'!
ERROR!

self allSubclasses!

self!
!TerniLapilli methodsFor: 'initializing' stamp: 'NNH 11/1/2020 20:50:01' prior: 50876799 overrides: 16896425!
initialize
	cells := Dictionary new.
	cells at: #X put: OrderedCollection new.
	cells at: #O put: OrderedCollection new.
	nextPlayer := #X.
	waitingPlayer := #O.
	state := TerniLapilliState for: self.! !

!testRun: #TerniLapilliTest #test01FirstPlayerIsX stamp: 'NNH 11/1/2020 20:50:09'!
PASSED!

!testRun: #TerniLapilliTest #test02SecondPlayerIsO stamp: 'NNH 11/1/2020 20:50:09'!
PASSED!

!testRun: #TerniLapilliTest #test03ThirdPlayerIsX stamp: 'NNH 11/1/2020 20:50:09'!
PASSED!

!testRun: #TerniLapilliTest #test04PlayersShouldNotPlayOnOccupiedCell stamp: 'NNH 11/1/2020 20:50:09'!
PASSED!

!testRun: #TerniLapilliTest #test05ShouldNotPlaceAChipToTheRightOfTheBoard stamp: 'NNH 11/1/2020 20:50:09'!
PASSED!

!testRun: #TerniLapilliTest #test07ShouldNotPlaceAChipToTheLeftOfTheBoard stamp: 'NNH 11/1/2020 20:50:09'!
PASSED!

!testRun: #TerniLapilliTest #test09ShouldNotPlaceAChipBelowTheBoard stamp: 'NNH 11/1/2020 20:50:09'!
PASSED!

!testRun: #TerniLapilliTest #test11ShouldNotPlaceAChipAboveTheBoard stamp: 'NNH 11/1/2020 20:50:09'!
PASSED!

!testRun: #TerniLapilliTest #test13OShouldNotPlaceWhenItsXsTurn stamp: 'NNH 11/1/2020 20:50:09'!
PASSED!

!testRun: #TerniLapilliTest #test15PlayerShouldNotMoveBeforePlacingThreeChips stamp: 'NNH 11/1/2020 20:50:09'!
PASSED!

!testRun: #TerniLapilliTest #test17InitialGameIsNotOver stamp: 'NNH 11/1/2020 20:50:09'!
PASSED!

!testRun: #TerniLapilliTest #test18FirstRowForXIsWinningGame stamp: 'NNH 11/1/2020 20:50:09'!
PASSED!

!testRun: #TerniLapilliTest #test19FirstColumnForOIsWinningGame stamp: 'NNH 11/1/2020 20:50:09'!
PASSED!

!testRun: #TerniLapilliTest #test20ShouldNotMoveChipToOccupiedCell stamp: 'NNH 11/1/2020 20:50:09'!
PASSED!

!testRun: #TerniLapilliTest #test21ShouldNotPlaceWhenGameIsOver stamp: 'NNH 11/1/2020 20:50:09'!
PASSED!

!testRun: #TerniLapilliTest #test22GameIsOverAfterOMoves stamp: 'NNH 11/1/2020 20:50:09'!
PASSED!

!testRun: #TerniLapilliTest #test23ShouldNotMoveWhenGameIsOver stamp: 'NNH 11/1/2020 20:50:09'!
PASSED!

!testRun: #TerniLapilliTest #test24AfterAMovingOperationOfXIsOTurn stamp: 'NNH 11/1/2020 20:50:09'!
PASSED!

!testRun: #TerniLapilliTest #test25MovingOperationDoesNotAllowPlayingOnOthersTurn stamp: 'NNH 11/1/2020 20:50:09'!
PASSED!

!testRun: #TerniLapilliTest #test26APlayerShouldNotMoveFromACellWithoutAChipOfItsOwnership stamp: 'NNH 11/1/2020 20:50:09'!
PASSED!

!testRun: #TerniLapilliTest #test27PlayerShouldNotMoveChipToNonAdjacentCell stamp: 'NNH 11/1/2020 20:50:09'!
PASSED!

!testRun: #TerniLapilliTest #test28PlayerShouldNotMoveDiagonallyOutsideMainDiagonals stamp: 'NNH 11/1/2020 20:50:09'!
PASSED!

!testRun: #TerniLapilliTest #test29PlayerShouldBeAbleToMoveAlongMainDiagonals stamp: 'NNH 11/1/2020 20:50:09'!
PASSED!

!testRun: #TerniLapilliTest #test30PlayerShouldNotPlaceAfterPlacingThreeChips stamp: 'NNH 11/1/2020 20:50:09'!
PASSED!

!testRun: #TerniLapilliTest #test31XShouldBeDeclaredWinnerIfThreeChipsAligned stamp: 'NNH 11/1/2020 20:50:09'!
PASSED!

----End fileIn of /home/nahuel/Documents/cuisuniversity/Packages/TerseGuide.pck.st----!
!TerniLapilli methodsFor: 'initializing' stamp: 'NNH 11/1/2020 20:52:05' prior: 50877056 overrides: 16896425!
initialize
	cells := Dictionary new add: #X->OrderedCollection new; add: #O->OrderedCollection new.
	cells at: #X put: OrderedCollection new.
	cells at: #O put: OrderedCollection new.
	nextPlayer := #X.
	waitingPlayer := #O.
	state := TerniLapilliState for: self.! !
!TerniLapilli methodsFor: 'initializing' stamp: 'NNH 11/1/2020 20:52:38' prior: 50880088 overrides: 16896425!
initialize
	cells := Dictionary new add: #X -> OrderedCollection new; add: #O -> OrderedCollection new.
	nextPlayer := #X.
	waitingPlayer := #O.
	state := TerniLapilliState for: self.! !
!TerniLapilli methodsFor: 'testing players -- private' stamp: 'NNH 11/1/2020 20:53:06'!
hasAPlayerAlreadyWon

	^ self hasXAlreadyWon or: [self hasOAlreadyWon].! !
!TerniLapilliStatePlacing class methodsFor: 'as yet unclassified' stamp: 'NNH 11/1/2020 20:53:06' prior: 50876836 overrides: 50876851!
canHandle: aTerniLapilli
	
	^ aTerniLapilli hasAPlayerAlreadyWon not and: [
		(aTerniLapilli hasPlayedThreeChips: #O) not]! !
!TerniLapilliStateGameOver class methodsFor: 'as yet unclassified' stamp: 'NNH 11/1/2020 20:53:06' prior: 50876814 overrides: 50876851!
canHandle: aTerniLapilli
	
	^ aTerniLapilli hasAPlayerAlreadyWon.! !
!TerniLapilliStateMoving class methodsFor: 'as yet unclassified' stamp: 'NNH 11/1/2020 20:53:06' prior: 50876844 overrides: 50876851!
canHandle: aTerniLapilli

	^ (aTerniLapilli hasPlayedThreeChips: #O) and: [
		aTerniLapilli hasAPlayerAlreadyWon not
		]
	
	! !

!methodRemoval: TerniLapilli #aPlayerHasAlreadyWon stamp: 'NNH 11/1/2020 20:53:06'!
aPlayerHasAlreadyWon

	^ self hasXAlreadyWon or: [self hasOAlreadyWon].!

!testRun: #TerniLapilliTest #test01FirstPlayerIsX stamp: 'NNH 11/1/2020 20:53:10'!
ERROR!

!testRun: #TerniLapilliTest #test02SecondPlayerIsO stamp: 'NNH 11/1/2020 20:53:10'!
ERROR!

!testRun: #TerniLapilliTest #test03ThirdPlayerIsX stamp: 'NNH 11/1/2020 20:53:10'!
ERROR!

!testRun: #TerniLapilliTest #test04PlayersShouldNotPlayOnOccupiedCell stamp: 'NNH 11/1/2020 20:53:10'!
ERROR!

!testRun: #TerniLapilliTest #test05ShouldNotPlaceAChipToTheRightOfTheBoard stamp: 'NNH 11/1/2020 20:53:10'!
ERROR!

!testRun: #TerniLapilliTest #test07ShouldNotPlaceAChipToTheLeftOfTheBoard stamp: 'NNH 11/1/2020 20:53:10'!
ERROR!

!testRun: #TerniLapilliTest #test09ShouldNotPlaceAChipBelowTheBoard stamp: 'NNH 11/1/2020 20:53:10'!
ERROR!

!testRun: #TerniLapilliTest #test11ShouldNotPlaceAChipAboveTheBoard stamp: 'NNH 11/1/2020 20:53:10'!
ERROR!

!testRun: #TerniLapilliTest #test13OShouldNotPlaceWhenItsXsTurn stamp: 'NNH 11/1/2020 20:53:10'!
ERROR!

!testRun: #TerniLapilliTest #test15PlayerShouldNotMoveBeforePlacingThreeChips stamp: 'NNH 11/1/2020 20:53:10'!
ERROR!

!testRun: #TerniLapilliTest #test17InitialGameIsNotOver stamp: 'NNH 11/1/2020 20:53:10'!
ERROR!

!testRun: #TerniLapilliTest #test18FirstRowForXIsWinningGame stamp: 'NNH 11/1/2020 20:53:10'!
ERROR!

!testRun: #TerniLapilliTest #test19FirstColumnForOIsWinningGame stamp: 'NNH 11/1/2020 20:53:10'!
ERROR!

!testRun: #TerniLapilliTest #test20ShouldNotMoveChipToOccupiedCell stamp: 'NNH 11/1/2020 20:53:10'!
ERROR!

!testRun: #TerniLapilliTest #test21ShouldNotPlaceWhenGameIsOver stamp: 'NNH 11/1/2020 20:53:10'!
ERROR!

!testRun: #TerniLapilliTest #test22GameIsOverAfterOMoves stamp: 'NNH 11/1/2020 20:53:10'!
ERROR!

!testRun: #TerniLapilliTest #test23ShouldNotMoveWhenGameIsOver stamp: 'NNH 11/1/2020 20:53:10'!
ERROR!

!testRun: #TerniLapilliTest #test24AfterAMovingOperationOfXIsOTurn stamp: 'NNH 11/1/2020 20:53:10'!
ERROR!

!testRun: #TerniLapilliTest #test25MovingOperationDoesNotAllowPlayingOnOthersTurn stamp: 'NNH 11/1/2020 20:53:10'!
ERROR!

!testRun: #TerniLapilliTest #test26APlayerShouldNotMoveFromACellWithoutAChipOfItsOwnership stamp: 'NNH 11/1/2020 20:53:10'!
ERROR!

!testRun: #TerniLapilliTest #test27PlayerShouldNotMoveChipToNonAdjacentCell stamp: 'NNH 11/1/2020 20:53:10'!
ERROR!

!testRun: #TerniLapilliTest #test28PlayerShouldNotMoveDiagonallyOutsideMainDiagonals stamp: 'NNH 11/1/2020 20:53:10'!
ERROR!

!testRun: #TerniLapilliTest #test29PlayerShouldBeAbleToMoveAlongMainDiagonals stamp: 'NNH 11/1/2020 20:53:10'!
ERROR!

!testRun: #TerniLapilliTest #test30PlayerShouldNotPlaceAfterPlacingThreeChips stamp: 'NNH 11/1/2020 20:53:10'!
ERROR!

!testRun: #TerniLapilliTest #test31XShouldBeDeclaredWinnerIfThreeChipsAligned stamp: 'NNH 11/1/2020 20:53:10'!
ERROR!
!TerniLapilli methodsFor: 'initializing' stamp: 'NNH 11/1/2020 20:55:02' prior: 50880100 overrides: 16896425!
initialize
	cells := Dictionary new.
	cells add: #X -> OrderedCollection new; add: #O -> OrderedCollection new.
	nextPlayer := #X.
	waitingPlayer := #O.
	state := TerniLapilliState for: self.! !

!testRun: #TerniLapilliTest #test01FirstPlayerIsX stamp: 'NNH 11/1/2020 20:55:08'!
PASSED!

!testRun: #TerniLapilliTest #test02SecondPlayerIsO stamp: 'NNH 11/1/2020 20:55:08'!
PASSED!

!testRun: #TerniLapilliTest #test03ThirdPlayerIsX stamp: 'NNH 11/1/2020 20:55:08'!
PASSED!

!testRun: #TerniLapilliTest #test04PlayersShouldNotPlayOnOccupiedCell stamp: 'NNH 11/1/2020 20:55:08'!
PASSED!

!testRun: #TerniLapilliTest #test05ShouldNotPlaceAChipToTheRightOfTheBoard stamp: 'NNH 11/1/2020 20:55:08'!
PASSED!

!testRun: #TerniLapilliTest #test07ShouldNotPlaceAChipToTheLeftOfTheBoard stamp: 'NNH 11/1/2020 20:55:08'!
PASSED!

!testRun: #TerniLapilliTest #test09ShouldNotPlaceAChipBelowTheBoard stamp: 'NNH 11/1/2020 20:55:08'!
PASSED!

!testRun: #TerniLapilliTest #test11ShouldNotPlaceAChipAboveTheBoard stamp: 'NNH 11/1/2020 20:55:08'!
PASSED!

!testRun: #TerniLapilliTest #test13OShouldNotPlaceWhenItsXsTurn stamp: 'NNH 11/1/2020 20:55:08'!
PASSED!

!testRun: #TerniLapilliTest #test15PlayerShouldNotMoveBeforePlacingThreeChips stamp: 'NNH 11/1/2020 20:55:08'!
PASSED!

!testRun: #TerniLapilliTest #test17InitialGameIsNotOver stamp: 'NNH 11/1/2020 20:55:08'!
PASSED!

!testRun: #TerniLapilliTest #test18FirstRowForXIsWinningGame stamp: 'NNH 11/1/2020 20:55:08'!
PASSED!

!testRun: #TerniLapilliTest #test19FirstColumnForOIsWinningGame stamp: 'NNH 11/1/2020 20:55:08'!
PASSED!

!testRun: #TerniLapilliTest #test20ShouldNotMoveChipToOccupiedCell stamp: 'NNH 11/1/2020 20:55:08'!
PASSED!

!testRun: #TerniLapilliTest #test21ShouldNotPlaceWhenGameIsOver stamp: 'NNH 11/1/2020 20:55:08'!
PASSED!

!testRun: #TerniLapilliTest #test22GameIsOverAfterOMoves stamp: 'NNH 11/1/2020 20:55:08'!
PASSED!

!testRun: #TerniLapilliTest #test23ShouldNotMoveWhenGameIsOver stamp: 'NNH 11/1/2020 20:55:08'!
PASSED!

!testRun: #TerniLapilliTest #test24AfterAMovingOperationOfXIsOTurn stamp: 'NNH 11/1/2020 20:55:08'!
PASSED!

!testRun: #TerniLapilliTest #test25MovingOperationDoesNotAllowPlayingOnOthersTurn stamp: 'NNH 11/1/2020 20:55:08'!
PASSED!

!testRun: #TerniLapilliTest #test26APlayerShouldNotMoveFromACellWithoutAChipOfItsOwnership stamp: 'NNH 11/1/2020 20:55:08'!
PASSED!

!testRun: #TerniLapilliTest #test27PlayerShouldNotMoveChipToNonAdjacentCell stamp: 'NNH 11/1/2020 20:55:08'!
PASSED!

!testRun: #TerniLapilliTest #test28PlayerShouldNotMoveDiagonallyOutsideMainDiagonals stamp: 'NNH 11/1/2020 20:55:08'!
PASSED!

!testRun: #TerniLapilliTest #test29PlayerShouldBeAbleToMoveAlongMainDiagonals stamp: 'NNH 11/1/2020 20:55:08'!
PASSED!

!testRun: #TerniLapilliTest #test30PlayerShouldNotPlaceAfterPlacingThreeChips stamp: 'NNH 11/1/2020 20:55:08'!
PASSED!

!testRun: #TerniLapilliTest #test31XShouldBeDeclaredWinnerIfThreeChipsAligned stamp: 'NNH 11/1/2020 20:55:08'!
PASSED!
!TerniLapilli methodsFor: 'initializing' stamp: 'NNH 11/1/2020 20:55:25' prior: 50880230 overrides: 16896425!
initialize
	
	cells := Dictionary new.
	cells add: #X -> OrderedCollection new; add: #O -> OrderedCollection new.
	
	nextPlayer := #X.
	waitingPlayer := #O.
	
	state := TerniLapilliState for: self.! !

----SNAPSHOT----(1 November 2020 20:57:16) CuisUniversity-4384.image priorSource: 17387239!

----QUIT----(1 November 2020 20:57:20) CuisUniversity-4384.image priorSource: 17557896!