

----End fileIn of /home/fede/Documentos/Facultad/Inge1/EjerciciosParaEntregar/2020-2c/18-Portfolio1/Portfolio-Ejercicio.st----!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'fr 11/7/2020 22:36:24'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'fr 11/7/2020 22:36:24'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'fr 11/7/2020 22:36:24'!
FAILURE!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'fr 11/7/2020 22:36:24'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'fr 11/7/2020 22:36:25'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'fr 11/7/2020 22:36:25'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'fr 11/7/2020 22:36:25'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'fr 11/7/2020 22:36:25'!
FAILURE!
!ReceptiveAccount methodsFor: 'balance' stamp: 'fr 11/7/2020 22:37:06' prior: 50867984!
balance

	"^transactions sum: [ :aTransaction | aTransaction value ] ifEmpty: [ 0 ]"
	
	| balance |
	balance _ 0.
	transactions do: [:aTransaction | balance _ aTransaction applyToBalance: balance].
	^balance! !

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'fr 11/7/2020 22:37:09'!
ERROR!
!AccountTransaction methodsFor: 'apply' stamp: 'fr 11/7/2020 22:37:15'!
applyToBalance: aSmallInteger 
	self shouldBeImplemented.! !
!AccountTransaction methodsFor: 'apply' stamp: 'fr 11/7/2020 22:37:20' prior: 50868042!
applyToBalance: aSmallInteger 
	
	self subclassResponsibility ! !

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'fr 11/7/2020 22:37:21'!
ERROR!
!Deposit methodsFor: 'apply' stamp: 'fr 11/7/2020 22:37:26' overrides: 50868047!
applyToBalance: aSmallInteger 
	self shouldBeImplemented.! !
!Deposit methodsFor: 'apply' stamp: 'fr 11/7/2020 22:37:36' prior: 50868056 overrides: 50868047!
applyToBalance: aBalance 
	
	^aBalance + value! !

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'fr 11/7/2020 22:37:37'!
ERROR!
!Withdraw methodsFor: 'apply' stamp: 'fr 11/7/2020 22:37:42' overrides: 50868047!
applyToBalance: aSmallInteger 
	self shouldBeImplemented.! !
!Withdraw methodsFor: 'apply' stamp: 'fr 11/7/2020 22:37:54' prior: 50868069 overrides: 50868047!
applyToBalance: aBalance 

	^aBalance - value! !

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'fr 11/7/2020 22:37:55'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'fr 11/7/2020 22:37:57'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'fr 11/7/2020 22:37:57'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'fr 11/7/2020 22:37:57'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'fr 11/7/2020 22:37:57'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'fr 11/7/2020 22:37:57'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'fr 11/7/2020 22:37:57'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'fr 11/7/2020 22:37:57'!
PASSED!

TestCase subclass: #PortfolioTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classDefinition: #PortfolioTest category: 'Portfolio-Ejercicio' stamp: 'fr 11/7/2020 22:38:01'!
TestCase subclass: #PortfolioTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classDefinition: #Portfolio category: 'Portfolio-Ejercicio' stamp: 'fr 11/7/2020 22:38:30'!
Object subclass: #Portfolio
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!
!PortfolioTest methodsFor: 'no messages' stamp: 'fr 11/7/2020 22:38:27'!
test01

	| portfolio |
	portfolio _ Portfolio new.
	
	self assert: [portfolio balance = 0]! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'fr 11/7/2020 22:38:32' prior: 50868127!
test01

	| portfolio |
	portfolio _ Portfolio new.
	self assert: [portfolio balance = 0]! !

!testRun: #PortfolioTest #test01 stamp: 'fr 11/7/2020 22:38:33'!
ERROR!
!Portfolio methodsFor: 'balance' stamp: 'fr 11/7/2020 22:38:40'!
balance
	self shouldBeImplemented.! !
!Portfolio methodsFor: 'balance' stamp: 'fr 11/7/2020 22:38:44' prior: 50868141!
balance
	
	^0! !

!testRun: #PortfolioTest #test01 stamp: 'fr 11/7/2020 22:38:46'!
PASSED!

!testRun: #PortfolioTest #test01 stamp: 'fr 11/7/2020 22:38:46'!
PASSED!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'fr 11/7/2020 22:38:48'!
test02

	| portfolio |
	portfolio _ Portfolio new.
	self assert: [portfolio balance = 0]! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'fr 11/7/2020 22:39:16' prior: 50868153!
test02

	| portfolio account |
	account _ ReceptiveAccount new.
	portfolio _ Portfolio new.
	self assert: [portfolio balance = 0]! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'fr 11/7/2020 22:43:32' prior: 50868159!
test02

	| portfolio account |
	account _ ReceptiveAccount new.
	portfolio _ Portfolio with: account.
	self assert: [portfolio balance = 0]! !

!testRun: #PortfolioTest #test02 stamp: 'fr 11/7/2020 22:43:32'!
ERROR!
!Portfolio class methodsFor: 'instance creation' stamp: 'fr 11/7/2020 22:43:36'!
with: aReceptiveAccount 
	"DO NOT FORGET TO RENAME COLLABORATORS AND REMOVE THIS COMMENT!!!!"
	self shouldBeImplemented.
	^self new initializeWith: aReceptiveAccount ! !
!Portfolio class methodsFor: 'instance creation' stamp: 'fr 11/7/2020 22:43:41' prior: 50868177!
with: aReceptiveAccount 
	
	^self new initializeWith: aReceptiveAccount ! !

!testRun: #PortfolioTest #test02 stamp: 'fr 11/7/2020 22:43:42'!
ERROR!

!classDefinition: #Portfolio category: 'Portfolio-Ejercicio' stamp: 'fr 11/7/2020 22:43:50'!
Object subclass: #Portfolio
	instanceVariableNames: 'receptiveAccount'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!
!Portfolio methodsFor: 'initialization' stamp: 'fr 11/7/2020 22:43:50'!
initializeWith: aReceptiveAccount 
	self shouldBeImplemented.
	receptiveAccount := aReceptiveAccount.! !
!Portfolio methodsFor: 'initialization' stamp: 'fr 11/7/2020 22:43:53' prior: 50868201!
initializeWith: aReceptiveAccount 
	
	receptiveAccount := aReceptiveAccount.! !

!classDefinition: #Portfolio category: 'Portfolio-Ejercicio' stamp: 'fr 11/7/2020 22:43:57'!
Object subclass: #Portfolio
	instanceVariableNames: 'account'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'fr 11/7/2020 22:43:57' prior: 50868208!
initializeWith: aReceptiveAccount 
	
	account := aReceptiveAccount.! !
!Portfolio methodsFor: 'initialization' stamp: 'fr 11/7/2020 22:44:00' prior: 50868221!
initializeWith: aReceptiveAccount 
	
	account _ aReceptiveAccount.! !

!testRun: #PortfolioTest #test02 stamp: 'fr 11/7/2020 22:44:01'!
PASSED!

!testRun: #PortfolioTest #test01 stamp: 'fr 11/7/2020 22:44:01'!
PASSED!

!testRun: #PortfolioTest #test02 stamp: 'fr 11/7/2020 22:44:01'!
PASSED!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'fr 11/7/2020 22:44:04'!
test03

	| portfolio account |
	account _ ReceptiveAccount new.
	portfolio _ Portfolio with: account.
	self assert: [portfolio balance = 0]! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'fr 11/7/2020 22:44:23' prior: 50868238!
test03

	| portfolio account |
	account _ ReceptiveAccount new.
	Deposit register: 100 on: account. 
	portfolio _ Portfolio with: account.
	self assert: [portfolio balance = 100]! !

!testRun: #PortfolioTest #test03 stamp: 'fr 11/7/2020 22:44:24'!
FAILURE!
!Portfolio methodsFor: 'balance' stamp: 'fr 11/7/2020 22:45:05' prior: 50868145!
balance
	
	^account ifNil: [0] ifNotNil: [account balance]! !

!testRun: #PortfolioTest #test03 stamp: 'fr 11/7/2020 22:45:09'!
FAILURE!

!testRun: #PortfolioTest #test03 stamp: 'fr 11/7/2020 22:45:12'!
PASSED!

!testRun: #PortfolioTest #test01 stamp: 'fr 11/7/2020 22:45:12'!
PASSED!

!testRun: #PortfolioTest #test02 stamp: 'fr 11/7/2020 22:45:12'!
PASSED!

!testRun: #PortfolioTest #test03 stamp: 'fr 11/7/2020 22:45:12'!
PASSED!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'fr 11/7/2020 22:45:17'!
test04

	| portfolio account |
	account _ ReceptiveAccount new.
	Deposit register: 100 on: account. 
	portfolio _ Portfolio with: account.
	self assert: [portfolio balance = 100]! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'fr 11/7/2020 22:46:51' prior: 50868274!
test04

	| portfolio account anotherAccount innerPortfolio |
	account _ ReceptiveAccount new.
	anotherAccount _ ReceptiveAccount new.
	
	Deposit register: 100 on: account. 
	Deposit register: 50 on: anotherAccount.
	 
	innerPortfolio _ Portfolio with: account.
	portfolio _ Portfolio with: {anotherAccount. innerPortfolio}.
	self assert: [portfolio balance = 100]! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'fr 11/7/2020 22:46:58' prior: 50868283!
test04

	| portfolio account anotherAccount innerPortfolio |
	account _ ReceptiveAccount new.
	anotherAccount _ ReceptiveAccount new.
	
	Deposit register: 100 on: account. 
	Deposit register: 50 on: anotherAccount.
	 
	innerPortfolio _ Portfolio with: account.
	portfolio _ Portfolio with: {anotherAccount. innerPortfolio}.
	self assert: [portfolio balance = 150]! !

!testRun: #PortfolioTest #test04 stamp: 'fr 11/7/2020 22:47:04'!
ERROR!
!Portfolio methodsFor: 'balance' stamp: 'fr 11/7/2020 22:48:48' prior: 50868257!
balance
	
	^account ifNil: [0] ifNotNil: [account sum: [:anAccount | anAccount balance]]! !

!testRun: #PortfolioTest #test04 stamp: 'fr 11/7/2020 22:48:49'!
ERROR!

!testRun: #PortfolioTest #test04 stamp: 'fr 11/7/2020 22:49:10'!
ERROR!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'fr 11/7/2020 22:49:20' prior: 50868298!
test04

	| portfolio account anotherAccount innerPortfolio |
	account _ ReceptiveAccount new.
	anotherAccount _ ReceptiveAccount new.
	
	Deposit register: 100 on: account. 
	Deposit register: 50 on: anotherAccount.
	 
	innerPortfolio _ Portfolio with: {account}.
	portfolio _ Portfolio with: {anotherAccount. innerPortfolio}.
	self assert: [portfolio balance = 150]! !

!testRun: #PortfolioTest #test04 stamp: 'fr 11/7/2020 22:49:21'!
PASSED!

!testRun: #PortfolioTest #test01 stamp: 'fr 11/7/2020 22:49:21'!
PASSED!

!testRun: #PortfolioTest #test02 stamp: 'fr 11/7/2020 22:49:21'!
ERROR!

!testRun: #PortfolioTest #test03 stamp: 'fr 11/7/2020 22:49:21'!
ERROR!

!testRun: #PortfolioTest #test04 stamp: 'fr 11/7/2020 22:49:21'!
PASSED!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'fr 11/7/2020 22:49:34' prior: 50868167!
test02

	| portfolio account |
	account _ ReceptiveAccount new.
	portfolio _ Portfolio with: {account}.
	self assert: [portfolio balance = 0]! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'fr 11/7/2020 22:49:40' prior: 50868246!
test03

	| portfolio account |
	account _ ReceptiveAccount new.
	Deposit register: 100 on: account. 
	portfolio _ Portfolio with: {account}.
	self assert: [portfolio balance = 100]! !

!testRun: #PortfolioTest #test03 stamp: 'fr 11/7/2020 22:49:41'!
PASSED!

!testRun: #PortfolioTest #test01 stamp: 'fr 11/7/2020 22:49:41'!
PASSED!

!testRun: #PortfolioTest #test02 stamp: 'fr 11/7/2020 22:49:41'!
PASSED!

!testRun: #PortfolioTest #test03 stamp: 'fr 11/7/2020 22:49:41'!
PASSED!

!testRun: #PortfolioTest #test04 stamp: 'fr 11/7/2020 22:49:41'!
PASSED!

----End fileIn of /home/fede/Documentos/Facultad/Inge1/Cuises/linux64/Packages/TerseGuide.pck.st----!
!Portfolio methodsFor: 'initialization' stamp: 'fr 11/7/2020 22:52:12' overrides: 16896425!
initialize

	account _ {}! !
!Portfolio methodsFor: 'initialization' stamp: 'fr 11/7/2020 22:52:30' prior: 50868226!
initializeWith: aReceptiveAccountList 
	
	account _ aReceptiveAccountList.! !

!classDefinition: #Portfolio category: 'Portfolio-Ejercicio' stamp: 'fr 11/7/2020 22:52:36'!
Object subclass: #Portfolio
	instanceVariableNames: 'accounts'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'fr 11/7/2020 22:52:36' prior: 50871322!
initializeWith: aReceptiveAccountList 
	
	accounts _ aReceptiveAccountList.! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'fr 11/7/2020 22:52:36' prior: 50871318 overrides: 16896425!
initialize

	accounts _ {}! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'fr 11/7/2020 22:52:36' prior: 50868315!
balance
	
	^accounts ifNil: [0] ifNotNil: [accounts sum: [:anAccount | anAccount balance]]! !
!Portfolio methodsFor: 'balance' stamp: 'fr 11/7/2020 22:52:52' prior: 50871345!
balance
	
	^accounts sum: [:anAccount | anAccount balance] ifEmpty: [0]! !

#() class !

{} class !

#()!

{}!

!testRun: #PortfolioTest #test01 stamp: 'fr 11/7/2020 22:55:27'!
PASSED!

!testRun: #PortfolioTest #test02 stamp: 'fr 11/7/2020 22:55:27'!
PASSED!

!testRun: #PortfolioTest #test03 stamp: 'fr 11/7/2020 22:55:27'!
PASSED!

!testRun: #PortfolioTest #test04 stamp: 'fr 11/7/2020 22:55:27'!
PASSED!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'fr 11/7/2020 22:55:38'!
test05

	| portfolio |
	portfolio _ Portfolio new.
	self assert: [portfolio balance = 0]! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'fr 11/7/2020 22:56:18' prior: 50871367!
test05

	| portfolio account deposit |
	account _ ReceptiveAccount new.
	deposit _ Deposit register: 100 on: account.	
	portfolio _ Portfolio new.
	self assert: [portfolio balance = 0]! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'fr 11/7/2020 22:56:28' prior: 50871373!
test05

	| portfolio account |
	account _ ReceptiveAccount new.
	Deposit register: 100 on: account.	
	portfolio _ Portfolio new.
	self assert: [portfolio balance = 0]! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'fr 11/7/2020 22:56:49' prior: 50871382!
test05

	| portfolio account deposit |
	account _ ReceptiveAccount new.
	deposit _ Deposit register: 100 on: account.	
	portfolio _ Portfolio new.
	self assert: [(portfolio hasRegistered: deposit) not]! !

!testRun: #PortfolioTest #test05 stamp: 'fr 11/7/2020 22:56:52'!
ERROR!
!Portfolio methodsFor: 'transactions' stamp: 'fr 11/7/2020 22:57:01'!
hasRegistered: aDeposit 
	self shouldBeImplemented.! !
!Portfolio methodsFor: 'transactions' stamp: 'fr 11/7/2020 22:57:04' prior: 50871402!
hasRegistered: aDeposit 
	
	^false! !

!testRun: #PortfolioTest #test05 stamp: 'fr 11/7/2020 22:57:05'!
PASSED!

!testRun: #PortfolioTest #test01 stamp: 'fr 11/7/2020 22:57:05'!
PASSED!

!testRun: #PortfolioTest #test02 stamp: 'fr 11/7/2020 22:57:05'!
PASSED!

!testRun: #PortfolioTest #test03 stamp: 'fr 11/7/2020 22:57:05'!
PASSED!

!testRun: #PortfolioTest #test04 stamp: 'fr 11/7/2020 22:57:05'!
PASSED!

!testRun: #PortfolioTest #test05 stamp: 'fr 11/7/2020 22:57:05'!
PASSED!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'fr 11/7/2020 22:57:08'!
test06

	| portfolio account deposit |
	account _ ReceptiveAccount new.
	deposit _ Deposit register: 100 on: account.	
	portfolio _ Portfolio new.
	self assert: [(portfolio hasRegistered: deposit) not]! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'fr 11/7/2020 22:57:17' prior: 50871425!
test06

	| portfolio account deposit |
	account _ ReceptiveAccount new.
	deposit _ Deposit register: 100 on: account.	
	portfolio _ Portfolio with: {account}.
	self assert: [portfolio hasRegistered: deposit]! !

!testRun: #PortfolioTest #test06 stamp: 'fr 11/7/2020 22:57:18'!
FAILURE!
!Portfolio methodsFor: 'transactions' stamp: 'fr 11/7/2020 22:58:10' prior: 50871407!
hasRegistered: aDeposit 
	
	^accounts ifEmpty: [false] ifNotEmpty: [(accounts at: 1) hasRegistered: aDeposit ]! !

!testRun: #PortfolioTest #test06 stamp: 'fr 11/7/2020 22:58:11'!
PASSED!

!testRun: #PortfolioTest #test01 stamp: 'fr 11/7/2020 22:58:11'!
PASSED!

!testRun: #PortfolioTest #test02 stamp: 'fr 11/7/2020 22:58:11'!
PASSED!

!testRun: #PortfolioTest #test03 stamp: 'fr 11/7/2020 22:58:11'!
PASSED!

!testRun: #PortfolioTest #test04 stamp: 'fr 11/7/2020 22:58:11'!
PASSED!

!testRun: #PortfolioTest #test05 stamp: 'fr 11/7/2020 22:58:11'!
PASSED!

!testRun: #PortfolioTest #test06 stamp: 'fr 11/7/2020 22:58:11'!
PASSED!

!testRun: #PortfolioTest #test06 stamp: 'fr 11/7/2020 23:00:55'!
PASSED!

!testRun: #PortfolioTest #test01 stamp: 'fr 11/7/2020 23:00:55'!
PASSED!

!testRun: #PortfolioTest #test02 stamp: 'fr 11/7/2020 23:00:55'!
PASSED!

!testRun: #PortfolioTest #test03 stamp: 'fr 11/7/2020 23:00:55'!
PASSED!

!testRun: #PortfolioTest #test04 stamp: 'fr 11/7/2020 23:00:55'!
PASSED!

!testRun: #PortfolioTest #test05 stamp: 'fr 11/7/2020 23:00:55'!
PASSED!

!testRun: #PortfolioTest #test06 stamp: 'fr 11/7/2020 23:00:55'!
PASSED!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'fr 11/7/2020 23:01:00'!
test07

	| portfolio account deposit |
	account _ ReceptiveAccount new.
	deposit _ Deposit register: 100 on: account.	
	portfolio _ Portfolio with: {account}.
	self assert: [portfolio hasRegistered: deposit]! !

!methodRemoval: PortfolioTest #test07 stamp: 'fr 11/7/2020 23:01:08'!
test07

	| portfolio account deposit |
	account _ ReceptiveAccount new.
	deposit _ Deposit register: 100 on: account.	
	portfolio _ Portfolio with: {account}.
	self assert: [portfolio hasRegistered: deposit]!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'fr 11/7/2020 23:01:16'!
test07

	| portfolio account anotherAccount innerPortfolio |
	account _ ReceptiveAccount new.
	anotherAccount _ ReceptiveAccount new.
	
	Deposit register: 100 on: account. 
	Deposit register: 50 on: anotherAccount.
	 
	innerPortfolio _ Portfolio with: {account}.
	portfolio _ Portfolio with: {anotherAccount. innerPortfolio}.
	self assert: [portfolio balance = 150]! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'fr 11/7/2020 23:02:15' prior: 50871504!
test07

	| portfolio account anotherAccount innerPortfolio anotherDeposit deposit |
	account _ ReceptiveAccount new.
	anotherAccount _ ReceptiveAccount new.
	
	deposit _ Deposit register: 100 on: account. 
	anotherDeposit _ Deposit register: 50 on: anotherAccount.
	 
	innerPortfolio _ Portfolio with: {account}.
	portfolio _ Portfolio with: {anotherAccount. innerPortfolio}.
	self assert: [
		(portfolio hasRegistered: deposit) and: 
		[portfolio hasRegistered: anotherDeposit]
	]! !

!testRun: #PortfolioTest #test07 stamp: 'fr 11/7/2020 23:02:20'!
FAILURE!
!Portfolio methodsFor: 'transactions' stamp: 'fr 11/7/2020 23:03:15' prior: 50871447!
hasRegistered: aDeposit 
	
	^accounts anySatisfy: [:anAccount | anAccount hasRegistered: aDeposit]! !

!testRun: #PortfolioTest #test07 stamp: 'fr 11/7/2020 23:03:16'!
PASSED!

!testRun: #PortfolioTest #test01 stamp: 'fr 11/7/2020 23:03:16'!
PASSED!

!testRun: #PortfolioTest #test02 stamp: 'fr 11/7/2020 23:03:16'!
PASSED!

!testRun: #PortfolioTest #test03 stamp: 'fr 11/7/2020 23:03:16'!
PASSED!

!testRun: #PortfolioTest #test04 stamp: 'fr 11/7/2020 23:03:16'!
PASSED!

!testRun: #PortfolioTest #test05 stamp: 'fr 11/7/2020 23:03:16'!
PASSED!

!testRun: #PortfolioTest #test06 stamp: 'fr 11/7/2020 23:03:16'!
PASSED!

!testRun: #PortfolioTest #test07 stamp: 'fr 11/7/2020 23:03:16'!
PASSED!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'fr 11/7/2020 23:03:27'!
test08

	| portfolio |
	portfolio _ Portfolio new.
	self assert: [portfolio balance = 0]! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'fr 11/7/2020 23:03:38' prior: 50871565!
test08

	| portfolio |
	portfolio _ Portfolio new.
	self assert: [portfolio transactions = OrderedCollection new]! !

!testRun: #PortfolioTest #test08 stamp: 'fr 11/7/2020 23:04:11'!
ERROR!
!Portfolio methodsFor: 'transactions' stamp: 'fr 11/7/2020 23:04:20'!
transactions
	self shouldBeImplemented.! !
!Portfolio methodsFor: 'transactions' stamp: 'fr 11/7/2020 23:04:27' prior: 50871580!
transactions
	
	^OrderedCollection new! !

!testRun: #PortfolioTest #test08 stamp: 'fr 11/7/2020 23:04:28'!
PASSED!

!testRun: #PortfolioTest #test01 stamp: 'fr 11/7/2020 23:04:28'!
PASSED!

!testRun: #PortfolioTest #test02 stamp: 'fr 11/7/2020 23:04:28'!
PASSED!

!testRun: #PortfolioTest #test03 stamp: 'fr 11/7/2020 23:04:28'!
PASSED!

!testRun: #PortfolioTest #test04 stamp: 'fr 11/7/2020 23:04:28'!
PASSED!

!testRun: #PortfolioTest #test05 stamp: 'fr 11/7/2020 23:04:28'!
PASSED!

!testRun: #PortfolioTest #test06 stamp: 'fr 11/7/2020 23:04:28'!
PASSED!

!testRun: #PortfolioTest #test07 stamp: 'fr 11/7/2020 23:04:28'!
PASSED!

!testRun: #PortfolioTest #test08 stamp: 'fr 11/7/2020 23:04:28'!
PASSED!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'fr 11/7/2020 23:04:47'!
test09

	| portfolio account deposit |
	account _ ReceptiveAccount new.
	deposit _ Deposit register: 100 on: account.	
	portfolio _ Portfolio new.
	self assert: [(portfolio hasRegistered: deposit) not]! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'fr 11/7/2020 23:05:10' prior: 50871610!
test09

	| portfolio account deposit |
	account _ ReceptiveAccount new.
	deposit _ Deposit register: 100 on: account.	
	portfolio _ Portfolio new.
	self assert: [portfolio transactions = (OrderedCollection with: deposit)]! !

!testRun: #PortfolioTest #test09 stamp: 'fr 11/7/2020 23:05:11'!
FAILURE!
!Portfolio methodsFor: 'transactions' stamp: 'fr 11/7/2020 23:06:39' prior: 50871585!
transactions
	
	^accounts ifEmpty: [OrderedCollection new] ifNotEmpty: [(accounts at: 1) transactions]! !

!testRun: #PortfolioTest #test09 stamp: 'fr 11/7/2020 23:06:40'!
FAILURE!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'fr 11/7/2020 23:06:56' prior: 50871620!
test09

	| portfolio account deposit |
	account _ ReceptiveAccount new.
	deposit _ Deposit register: 100 on: account.	
	portfolio _ Portfolio with: {deposit}.
	self assert: [portfolio transactions = (OrderedCollection with: deposit)]! !

!testRun: #PortfolioTest #test09 stamp: 'fr 11/7/2020 23:06:56'!
ERROR!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'fr 11/7/2020 23:07:03' prior: 50871642!
test09

	| portfolio account deposit |
	account _ ReceptiveAccount new.
	deposit _ Deposit register: 100 on: account.	
	portfolio _ Portfolio with: {account}.
	self assert: [portfolio transactions = (OrderedCollection with: deposit)]! !

!testRun: #PortfolioTest #test09 stamp: 'fr 11/7/2020 23:07:04'!
PASSED!

!testRun: #PortfolioTest #test01 stamp: 'fr 11/7/2020 23:07:04'!
PASSED!

!testRun: #PortfolioTest #test02 stamp: 'fr 11/7/2020 23:07:04'!
PASSED!

!testRun: #PortfolioTest #test03 stamp: 'fr 11/7/2020 23:07:04'!
PASSED!

!testRun: #PortfolioTest #test04 stamp: 'fr 11/7/2020 23:07:04'!
PASSED!

!testRun: #PortfolioTest #test05 stamp: 'fr 11/7/2020 23:07:04'!
PASSED!

!testRun: #PortfolioTest #test06 stamp: 'fr 11/7/2020 23:07:04'!
PASSED!

!testRun: #PortfolioTest #test07 stamp: 'fr 11/7/2020 23:07:04'!
PASSED!

!testRun: #PortfolioTest #test08 stamp: 'fr 11/7/2020 23:07:04'!
PASSED!

!testRun: #PortfolioTest #test09 stamp: 'fr 11/7/2020 23:07:04'!
PASSED!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'fr 11/7/2020 23:07:29'!
test10

	| portfolio account anotherAccount innerPortfolio anotherDeposit deposit |
	account _ ReceptiveAccount new.
	anotherAccount _ ReceptiveAccount new.
	
	deposit _ Deposit register: 100 on: account. 
	anotherDeposit _ Deposit register: 50 on: anotherAccount.
	 
	innerPortfolio _ Portfolio with: {account}.
	portfolio _ Portfolio with: {anotherAccount. innerPortfolio}.
	self assert: [
		(portfolio hasRegistered: deposit) and: 
		[portfolio hasRegistered: anotherDeposit]
	]! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'fr 11/7/2020 23:08:02' prior: 50871689!
test10

	| portfolio account anotherAccount innerPortfolio anotherDeposit deposit |
	account _ ReceptiveAccount new.
	anotherAccount _ ReceptiveAccount new.
	
	deposit _ Deposit register: 100 on: account. 
	anotherDeposit _ Deposit register: 50 on: anotherAccount.
	 
	innerPortfolio _ Portfolio with: {account}.
	portfolio _ Portfolio with: {anotherAccount. innerPortfolio}.
	self assert: [portfolio transactions = (OrderedCollection with: anotherDeposit with: deposit	)]! !

!testRun: #PortfolioTest #test10 stamp: 'fr 11/7/2020 23:08:03'!
FAILURE!
!Portfolio methodsFor: 'transactions' stamp: 'fr 11/7/2020 23:08:50' prior: 50871633!
transactions
	
	| transactions |
	transactions _ OrderedCollection new.
	accounts do: [:anAccount | transactions addAllLast: accounts transactions].
	^transactions! !

!testRun: #PortfolioTest #test10 stamp: 'fr 11/7/2020 23:08:53'!
ERROR!

!testRun: #PortfolioTest #test10 stamp: 'fr 11/7/2020 23:09:01'!
ERROR!
!Portfolio methodsFor: 'transactions' stamp: 'fr 11/7/2020 23:09:12' prior: 50871728!
transactions
	
	| transactions |
	transactions _ OrderedCollection new.
	accounts do: [:anAccount | transactions addAllLast: anAccount transactions].
	^transactions! !

!testRun: #PortfolioTest #test10 stamp: 'fr 11/7/2020 23:09:14'!
PASSED!

!testRun: #PortfolioTest #test01 stamp: 'fr 11/7/2020 23:09:14'!
PASSED!

!testRun: #PortfolioTest #test02 stamp: 'fr 11/7/2020 23:09:14'!
PASSED!

!testRun: #PortfolioTest #test03 stamp: 'fr 11/7/2020 23:09:14'!
PASSED!

!testRun: #PortfolioTest #test04 stamp: 'fr 11/7/2020 23:09:14'!
PASSED!

!testRun: #PortfolioTest #test05 stamp: 'fr 11/7/2020 23:09:14'!
PASSED!

!testRun: #PortfolioTest #test06 stamp: 'fr 11/7/2020 23:09:14'!
PASSED!

!testRun: #PortfolioTest #test07 stamp: 'fr 11/7/2020 23:09:14'!
PASSED!

!testRun: #PortfolioTest #test08 stamp: 'fr 11/7/2020 23:09:14'!
PASSED!

!testRun: #PortfolioTest #test09 stamp: 'fr 11/7/2020 23:09:14'!
PASSED!

!testRun: #PortfolioTest #test10 stamp: 'fr 11/7/2020 23:09:14'!
PASSED!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'fr 11/7/2020 23:09:17'!
test11

	| portfolio account anotherAccount innerPortfolio anotherDeposit deposit |
	account _ ReceptiveAccount new.
	anotherAccount _ ReceptiveAccount new.
	
	deposit _ Deposit register: 100 on: account. 
	anotherDeposit _ Deposit register: 50 on: anotherAccount.
	 
	innerPortfolio _ Portfolio with: {account}.
	portfolio _ Portfolio with: {anotherAccount. innerPortfolio}.
	self assert: [portfolio transactions = (OrderedCollection with: anotherDeposit with: deposit	)]! !

----STARTUP---- (7 November 2020 22:32:34) as /home/fede/Documentos/Facultad/Inge1/Cuises/linux64/CuisUniversity-4384.image!

!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'fr 11/7/2020 23:10:55'!
test01BalanceEmptyPort

	| portfolio |
	portfolio _ Portfolio new.
	self assert: [portfolio balance = 0]! !

!methodRemoval: PortfolioTest #test01 stamp: 'fr 11/7/2020 23:10:55'!
test01

	| portfolio |
	portfolio _ Portfolio new.
	self assert: [portfolio balance = 0]!

----SNAPSHOT----(7 November 2020 23:13:32) CuisUniversity-4384.image priorSource: 17155779!

----SNAPSHOT----(7 November 2020 23:19:09) CuisUniversity-4384.image priorSource: 17284539!
!PortfolioTest methodsFor: 'tests' stamp: 'fr 11/7/2020 23:19:37'!
test01EmptyPortfolioHasBalanceZero

	| portfolio |
	portfolio _ Portfolio new.
	self assert: [portfolio balance = 0]! !

!methodRemoval: PortfolioTest #test01 stamp: 'fr 11/7/2020 23:19:37'!
test01

	| portfolio |
	portfolio _ Portfolio new.
	self assert: [portfolio balance = 0]!
!PortfolioTest methodsFor: 'tests' stamp: 'fr 11/7/2020 23:20:17'!
test02PortfolioWithASingleAccountWithNoTransactionsHasBalanceZero

	| portfolio account |
	account _ ReceptiveAccount new.
	portfolio _ Portfolio with: {account}.
	self assert: [portfolio balance = 0]! !

!methodRemoval: PortfolioTest #test02 stamp: 'fr 11/7/2020 23:20:17'!
test02

	| portfolio account |
	account _ ReceptiveAccount new.
	portfolio _ Portfolio with: {account}.
	self assert: [portfolio balance = 0]!
!PortfolioTest methodsFor: 'tests' stamp: 'fr 11/7/2020 23:21:43'!
test03PortfolioWithASingleAccountReflectsItsTransactionsValuesIntoItsBalance

	| portfolio account |
	account _ ReceptiveAccount new.
	Deposit register: 100 on: account. 
	portfolio _ Portfolio with: {account}.
	self assert: [portfolio balance = 100]! !

!methodRemoval: PortfolioTest #test03 stamp: 'fr 11/7/2020 23:21:43'!
test03

	| portfolio account |
	account _ ReceptiveAccount new.
	Deposit register: 100 on: account. 
	portfolio _ Portfolio with: {account}.
	self assert: [portfolio balance = 100]!
!PortfolioTest methodsFor: 'tests' stamp: 'fr 11/7/2020 23:22:18'!
test04PortfolioWithMultipleAccountsAndPortfoliosReflectsItsTransactionsValuesInItsBalance

	| portfolio account anotherAccount innerPortfolio |
	account _ ReceptiveAccount new.
	anotherAccount _ ReceptiveAccount new.
	
	Deposit register: 100 on: account. 
	Deposit register: 50 on: anotherAccount.
	 
	innerPortfolio _ Portfolio with: {account}.
	portfolio _ Portfolio with: {anotherAccount. innerPortfolio}.
	self assert: [portfolio balance = 150]! !

!methodRemoval: PortfolioTest #test04 stamp: 'fr 11/7/2020 23:22:18'!
test04

	| portfolio account anotherAccount innerPortfolio |
	account _ ReceptiveAccount new.
	anotherAccount _ ReceptiveAccount new.
	
	Deposit register: 100 on: account. 
	Deposit register: 50 on: anotherAccount.
	 
	innerPortfolio _ Portfolio with: {account}.
	portfolio _ Portfolio with: {anotherAccount. innerPortfolio}.
	self assert: [portfolio balance = 150]!
!PortfolioTest methodsFor: 'tests' stamp: 'fr 11/7/2020 23:22:24'!
test03PortfolioWithASingleAccountReflectsItsTransactionsValuesInItsBalance

	| portfolio account |
	account _ ReceptiveAccount new.
	Deposit register: 100 on: account. 
	portfolio _ Portfolio with: {account}.
	self assert: [portfolio balance = 100]! !

!methodRemoval: PortfolioTest #test03PortfolioWithASingleAccountReflectsItsTransactionsValuesIntoItsBalance stamp: 'fr 11/7/2020 23:22:24'!
test03PortfolioWithASingleAccountReflectsItsTransactionsValuesIntoItsBalance

	| portfolio account |
	account _ ReceptiveAccount new.
	Deposit register: 100 on: account. 
	portfolio _ Portfolio with: {account}.
	self assert: [portfolio balance = 100]!
!PortfolioTest methodsFor: 'tests' stamp: 'fr 11/7/2020 23:22:56'!
test05EmptyPortfolioHasNotRegisteredAnyTransaction

	| portfolio account deposit |
	account _ ReceptiveAccount new.
	deposit _ Deposit register: 100 on: account.	
	portfolio _ Portfolio new.
	self assert: [(portfolio hasRegistered: deposit) not]! !

!methodRemoval: PortfolioTest #test05 stamp: 'fr 11/7/2020 23:22:56'!
test05

	| portfolio account deposit |
	account _ ReceptiveAccount new.
	deposit _ Deposit register: 100 on: account.	
	portfolio _ Portfolio new.
	self assert: [(portfolio hasRegistered: deposit) not]!
!PortfolioTest methodsFor: 'tests' stamp: 'fr 11/7/2020 23:23:29'!
test06PortfolioWithASingleAccountRegistersItsTransactions

	| portfolio account deposit |
	account _ ReceptiveAccount new.
	deposit _ Deposit register: 100 on: account.	
	portfolio _ Portfolio with: {account}.
	self assert: [portfolio hasRegistered: deposit]! !

!methodRemoval: PortfolioTest #test06 stamp: 'fr 11/7/2020 23:23:29'!
test06

	| portfolio account deposit |
	account _ ReceptiveAccount new.
	deposit _ Deposit register: 100 on: account.	
	portfolio _ Portfolio with: {account}.
	self assert: [portfolio hasRegistered: deposit]!
!PortfolioTest methodsFor: 'tests' stamp: 'fr 11/7/2020 23:24:16'!
test07PortfolioWithMulltipleAccountsAndPortfoliosRegistersItsTransactions

	| portfolio account anotherAccount innerPortfolio anotherDeposit deposit |
	account _ ReceptiveAccount new.
	anotherAccount _ ReceptiveAccount new.
	
	deposit _ Deposit register: 100 on: account. 
	anotherDeposit _ Deposit register: 50 on: anotherAccount.
	 
	innerPortfolio _ Portfolio with: {account}.
	portfolio _ Portfolio with: {anotherAccount. innerPortfolio}.
	self assert: [
		(portfolio hasRegistered: deposit) and: 
		[portfolio hasRegistered: anotherDeposit]
	]! !

!methodRemoval: PortfolioTest #test07 stamp: 'fr 11/7/2020 23:24:16'!
test07

	| portfolio account anotherAccount innerPortfolio anotherDeposit deposit |
	account _ ReceptiveAccount new.
	anotherAccount _ ReceptiveAccount new.
	
	deposit _ Deposit register: 100 on: account. 
	anotherDeposit _ Deposit register: 50 on: anotherAccount.
	 
	innerPortfolio _ Portfolio with: {account}.
	portfolio _ Portfolio with: {anotherAccount. innerPortfolio}.
	self assert: [
		(portfolio hasRegistered: deposit) and: 
		[portfolio hasRegistered: anotherDeposit]
	]!
!PortfolioTest methodsFor: 'tests' stamp: 'fr 11/7/2020 23:25:03'!
test08EmptyPortfolioDoesNotExhibitAnyTransaction

	| portfolio |
	portfolio _ Portfolio new.
	self assert: [portfolio transactions = OrderedCollection new]! !

!methodRemoval: PortfolioTest #test08 stamp: 'fr 11/7/2020 23:25:03'!
test08

	| portfolio |
	portfolio _ Portfolio new.
	self assert: [portfolio transactions = OrderedCollection new]!
!PortfolioTest methodsFor: 'tests' stamp: 'fr 11/7/2020 23:27:02'!
test09PortfolioWithASingleAccountExhibitsTheSameTransactions

	| portfolio account deposit |
	account _ ReceptiveAccount new.
	deposit _ Deposit register: 100 on: account.	
	portfolio _ Portfolio with: {account}.
	self assert: [portfolio transactions = (OrderedCollection with: deposit)]! !

!methodRemoval: PortfolioTest #test09 stamp: 'fr 11/7/2020 23:27:02'!
test09

	| portfolio account deposit |
	account _ ReceptiveAccount new.
	deposit _ Deposit register: 100 on: account.	
	portfolio _ Portfolio with: {account}.
	self assert: [portfolio transactions = (OrderedCollection with: deposit)]!
!PortfolioTest methodsFor: 'tests' stamp: 'fr 11/7/2020 23:27:15'!
test09PortfolioWithASingleAccountExhibitsItsTransactions

	| portfolio account deposit |
	account _ ReceptiveAccount new.
	deposit _ Deposit register: 100 on: account.	
	portfolio _ Portfolio with: {account}.
	self assert: [portfolio transactions = (OrderedCollection with: deposit)]! !

!methodRemoval: PortfolioTest #test09PortfolioWithASingleAccountExhibitsTheSameTransactions stamp: 'fr 11/7/2020 23:27:15'!
test09PortfolioWithASingleAccountExhibitsTheSameTransactions

	| portfolio account deposit |
	account _ ReceptiveAccount new.
	deposit _ Deposit register: 100 on: account.	
	portfolio _ Portfolio with: {account}.
	self assert: [portfolio transactions = (OrderedCollection with: deposit)]!
!PortfolioTest methodsFor: 'tests' stamp: 'fr 11/7/2020 23:32:32'!
test10PortfolioWithMultipleAccountsAndPortfoliosExhibitsAllTheirTransactionsCombined

	| portfolio account anotherAccount innerPortfolio anotherDeposit deposit |
	account _ ReceptiveAccount new.
	anotherAccount _ ReceptiveAccount new.
	
	deposit _ Deposit register: 100 on: account. 
	anotherDeposit _ Deposit register: 50 on: anotherAccount.
	 
	innerPortfolio _ Portfolio with: {account}.
	portfolio _ Portfolio with: {anotherAccount. innerPortfolio}.
	self assert: [portfolio transactions = (OrderedCollection with: anotherDeposit with: deposit	)]! !

!methodRemoval: PortfolioTest #test10 stamp: 'fr 11/7/2020 23:32:32'!
test10

	| portfolio account anotherAccount innerPortfolio anotherDeposit deposit |
	account _ ReceptiveAccount new.
	anotherAccount _ ReceptiveAccount new.
	
	deposit _ Deposit register: 100 on: account. 
	anotherDeposit _ Deposit register: 50 on: anotherAccount.
	 
	innerPortfolio _ Portfolio with: {account}.
	portfolio _ Portfolio with: {anotherAccount. innerPortfolio}.
	self assert: [portfolio transactions = (OrderedCollection with: anotherDeposit with: deposit	)]!
!PortfolioTest methodsFor: 'tests' stamp: 'fr 11/7/2020 23:32:50'!
test07PortfolioWithMulltipleAccountsAndPortfoliosRegistersAllTheirTransactions

	| portfolio account anotherAccount innerPortfolio anotherDeposit deposit |
	account _ ReceptiveAccount new.
	anotherAccount _ ReceptiveAccount new.
	
	deposit _ Deposit register: 100 on: account. 
	anotherDeposit _ Deposit register: 50 on: anotherAccount.
	 
	innerPortfolio _ Portfolio with: {account}.
	portfolio _ Portfolio with: {anotherAccount. innerPortfolio}.
	self assert: [
		(portfolio hasRegistered: deposit) and: 
		[portfolio hasRegistered: anotherDeposit]
	]! !

!methodRemoval: PortfolioTest #test07PortfolioWithMulltipleAccountsAndPortfoliosRegistersItsTransactions stamp: 'fr 11/7/2020 23:32:50'!
test07PortfolioWithMulltipleAccountsAndPortfoliosRegistersItsTransactions

	| portfolio account anotherAccount innerPortfolio anotherDeposit deposit |
	account _ ReceptiveAccount new.
	anotherAccount _ ReceptiveAccount new.
	
	deposit _ Deposit register: 100 on: account. 
	anotherDeposit _ Deposit register: 50 on: anotherAccount.
	 
	innerPortfolio _ Portfolio with: {account}.
	portfolio _ Portfolio with: {anotherAccount. innerPortfolio}.
	self assert: [
		(portfolio hasRegistered: deposit) and: 
		[portfolio hasRegistered: anotherDeposit]
	]!
!PortfolioTest methodsFor: 'tests' stamp: 'fr 11/7/2020 23:33:04'!
test04PortfolioWithMultipleAccountsAndPortfoliosReflectsTheirTransactionsValuesInItsBalance

	| portfolio account anotherAccount innerPortfolio |
	account _ ReceptiveAccount new.
	anotherAccount _ ReceptiveAccount new.
	
	Deposit register: 100 on: account. 
	Deposit register: 50 on: anotherAccount.
	 
	innerPortfolio _ Portfolio with: {account}.
	portfolio _ Portfolio with: {anotherAccount. innerPortfolio}.
	self assert: [portfolio balance = 150]! !

!methodRemoval: PortfolioTest #test04PortfolioWithMultipleAccountsAndPortfoliosReflectsItsTransactionsValuesInItsBalance stamp: 'fr 11/7/2020 23:33:04'!
test04PortfolioWithMultipleAccountsAndPortfoliosReflectsItsTransactionsValuesInItsBalance

	| portfolio account anotherAccount innerPortfolio |
	account _ ReceptiveAccount new.
	anotherAccount _ ReceptiveAccount new.
	
	Deposit register: 100 on: account. 
	Deposit register: 50 on: anotherAccount.
	 
	innerPortfolio _ Portfolio with: {account}.
	portfolio _ Portfolio with: {anotherAccount. innerPortfolio}.
	self assert: [portfolio balance = 150]!

!methodRemoval: PortfolioTest #test11 stamp: 'fr 11/7/2020 23:37:50'!
test11

	| portfolio account anotherAccount innerPortfolio anotherDeposit deposit |
	account _ ReceptiveAccount new.
	anotherAccount _ ReceptiveAccount new.
	
	deposit _ Deposit register: 100 on: account. 
	anotherDeposit _ Deposit register: 50 on: anotherAccount.
	 
	innerPortfolio _ Portfolio with: {account}.
	portfolio _ Portfolio with: {anotherAccount. innerPortfolio}.
	self assert: [portfolio transactions = (OrderedCollection with: anotherDeposit with: deposit	)]!
!PortfolioTest methodsFor: 'tests' stamp: 'fr 11/7/2020 23:37:57'!
test11

	| portfolio |
	portfolio _ Portfolio new.
	self assert: [portfolio balance = 0]! !
!PortfolioTest methodsFor: 'tests' stamp: 'fr 11/7/2020 23:38:30' prior: 50872161!
test11

	| portfolio account |
	account _ ReceptiveAccount new.
	portfolio _ Portfolio new.
	self assert: [(portfolio contains: account) not]! !

!testRun: #PortfolioTest #test11 stamp: 'fr 11/7/2020 23:38:33'!
ERROR!
!Portfolio methodsFor: 'accounts' stamp: 'fr 11/7/2020 23:39:36'!
contains: aReceptiveAccount 
	self shouldBeImplemented.! !
!Portfolio methodsFor: 'accounts' stamp: 'fr 11/7/2020 23:39:39' prior: 50872176!
contains: aReceptiveAccount 
	
	^false! !

!testRun: #PortfolioTest #test11 stamp: 'fr 11/7/2020 23:39:40'!
PASSED!

!testRun: #PortfolioTest #test01EmptyPortfolioHasBalanceZero stamp: 'fr 11/7/2020 23:39:40'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioWithASingleAccountWithNoTransactionsHasBalanceZero stamp: 'fr 11/7/2020 23:39:40'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioWithASingleAccountReflectsItsTransactionsValuesInItsBalance stamp: 'fr 11/7/2020 23:39:40'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithMultipleAccountsAndPortfoliosReflectsTheirTransactionsValuesInItsBalance stamp: 'fr 11/7/2020 23:39:40'!
PASSED!

!testRun: #PortfolioTest #test05EmptyPortfolioHasNotRegisteredAnyTransaction stamp: 'fr 11/7/2020 23:39:40'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioWithASingleAccountRegistersItsTransactions stamp: 'fr 11/7/2020 23:39:40'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioWithMulltipleAccountsAndPortfoliosRegistersAllTheirTransactions stamp: 'fr 11/7/2020 23:39:40'!
PASSED!

!testRun: #PortfolioTest #test08EmptyPortfolioDoesNotExhibitAnyTransaction stamp: 'fr 11/7/2020 23:39:40'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithASingleAccountExhibitsItsTransactions stamp: 'fr 11/7/2020 23:39:40'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioWithMultipleAccountsAndPortfoliosExhibitsAllTheirTransactionsCombined stamp: 'fr 11/7/2020 23:39:40'!
PASSED!

!testRun: #PortfolioTest #test11 stamp: 'fr 11/7/2020 23:39:40'!
PASSED!
!PortfolioTest methodsFor: 'tests' stamp: 'fr 11/7/2020 23:39:45'!
test12

	| portfolio account |
	account _ ReceptiveAccount new.
	portfolio _ Portfolio new.
	self assert: [(portfolio contains: account) not]! !
!PortfolioTest methodsFor: 'tests' stamp: 'fr 11/7/2020 23:39:52' prior: 50872231!
test12

	| portfolio account |
	account _ ReceptiveAccount new.
	portfolio _ Portfolio with: {account}.
	self assert: [(portfolio contains: account) not]! !
!PortfolioTest methodsFor: 'tests' stamp: 'fr 11/7/2020 23:39:56' prior: 50872239!
test12

	| portfolio account |
	account _ ReceptiveAccount new.
	portfolio _ Portfolio with: {account}.
	self assert: [portfolio contains: account]! !

!testRun: #PortfolioTest #test12 stamp: 'fr 11/7/2020 23:39:57'!
FAILURE!
!PortfolioTest methodsFor: 'tests' stamp: 'fr 11/7/2020 23:40:09' prior: 50872247!
test12

	| portfolio account |
	account _ ReceptiveAccount new.
	portfolio _ Portfolio new.
	portfolio add: account.
	self assert: [(portfolio contains: account) not]! !

!testRun: #PortfolioTest #test12 stamp: 'fr 11/7/2020 23:40:11'!
ERROR!
!Portfolio methodsFor: 'accounts' stamp: 'fr 11/7/2020 23:40:16'!
add: aReceptiveAccount 
	self shouldBeImplemented.! !
!Portfolio methodsFor: 'accounts' stamp: 'fr 11/7/2020 23:40:30' prior: 50872267!
add: aReceptiveAccount 
	
	accounts add: aReceptiveAccount ! !

!testRun: #PortfolioTest #test12 stamp: 'fr 11/7/2020 23:40:36'!
ERROR!

!testRun: #PortfolioTest #test12 stamp: 'fr 11/7/2020 23:42:21'!
ERROR!
!Portfolio methodsFor: 'initialization' stamp: 'fr 11/7/2020 23:42:52' prior: 50871341 overrides: 16896425!
initialize

	accounts _ OrderedCollection new.! !

!testRun: #PortfolioTest #test12 stamp: 'fr 11/7/2020 23:42:53'!
PASSED!

!testRun: #PortfolioTest #test01EmptyPortfolioHasBalanceZero stamp: 'fr 11/7/2020 23:42:53'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioWithASingleAccountWithNoTransactionsHasBalanceZero stamp: 'fr 11/7/2020 23:42:53'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioWithASingleAccountReflectsItsTransactionsValuesInItsBalance stamp: 'fr 11/7/2020 23:42:53'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithMultipleAccountsAndPortfoliosReflectsTheirTransactionsValuesInItsBalance stamp: 'fr 11/7/2020 23:42:53'!
PASSED!

!testRun: #PortfolioTest #test05EmptyPortfolioHasNotRegisteredAnyTransaction stamp: 'fr 11/7/2020 23:42:53'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioWithASingleAccountRegistersItsTransactions stamp: 'fr 11/7/2020 23:42:53'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioWithMulltipleAccountsAndPortfoliosRegistersAllTheirTransactions stamp: 'fr 11/7/2020 23:42:53'!
PASSED!

!testRun: #PortfolioTest #test08EmptyPortfolioDoesNotExhibitAnyTransaction stamp: 'fr 11/7/2020 23:42:53'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithASingleAccountExhibitsItsTransactions stamp: 'fr 11/7/2020 23:42:53'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioWithMultipleAccountsAndPortfoliosExhibitsAllTheirTransactionsCombined stamp: 'fr 11/7/2020 23:42:53'!
PASSED!

!testRun: #PortfolioTest #test11 stamp: 'fr 11/7/2020 23:42:53'!
PASSED!

!testRun: #PortfolioTest #test12 stamp: 'fr 11/7/2020 23:42:53'!
PASSED!
!PortfolioTest methodsFor: 'tests' stamp: 'fr 11/7/2020 23:43:56' prior: 50872257!
test12

	| portfolio account |
	account _ ReceptiveAccount new.
	portfolio _ Portfolio new.
	portfolio add: account.
	self assert: [portfolio contains: account]! !

!testRun: #PortfolioTest #test12 stamp: 'fr 11/7/2020 23:43:57'!
FAILURE!
!Portfolio methodsFor: 'accounts management' stamp: 'fr 11/7/2020 23:44:18' prior: 50872181!
contains: aReceptiveAccount 
	
	^accounts includes: aReceptiveAccount ! !

!testRun: #PortfolioTest #test12 stamp: 'fr 11/7/2020 23:44:19'!
PASSED!

!testRun: #PortfolioTest #test01EmptyPortfolioHasBalanceZero stamp: 'fr 11/7/2020 23:44:19'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioWithASingleAccountWithNoTransactionsHasBalanceZero stamp: 'fr 11/7/2020 23:44:19'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioWithASingleAccountReflectsItsTransactionsValuesInItsBalance stamp: 'fr 11/7/2020 23:44:19'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithMultipleAccountsAndPortfoliosReflectsTheirTransactionsValuesInItsBalance stamp: 'fr 11/7/2020 23:44:19'!
PASSED!

!testRun: #PortfolioTest #test05EmptyPortfolioHasNotRegisteredAnyTransaction stamp: 'fr 11/7/2020 23:44:19'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioWithASingleAccountRegistersItsTransactions stamp: 'fr 11/7/2020 23:44:19'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioWithMulltipleAccountsAndPortfoliosRegistersAllTheirTransactions stamp: 'fr 11/7/2020 23:44:19'!
PASSED!

!testRun: #PortfolioTest #test08EmptyPortfolioDoesNotExhibitAnyTransaction stamp: 'fr 11/7/2020 23:44:19'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithASingleAccountExhibitsItsTransactions stamp: 'fr 11/7/2020 23:44:19'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioWithMultipleAccountsAndPortfoliosExhibitsAllTheirTransactionsCombined stamp: 'fr 11/7/2020 23:44:19'!
PASSED!

!testRun: #PortfolioTest #test11 stamp: 'fr 11/7/2020 23:44:19'!
PASSED!

!testRun: #PortfolioTest #test12 stamp: 'fr 11/7/2020 23:44:19'!
PASSED!

!testRun: #PortfolioTest #test12 stamp: 'fr 11/7/2020 23:44:21'!
PASSED!

!testRun: #PortfolioTest #test01EmptyPortfolioHasBalanceZero stamp: 'fr 11/7/2020 23:44:21'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioWithASingleAccountWithNoTransactionsHasBalanceZero stamp: 'fr 11/7/2020 23:44:21'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioWithASingleAccountReflectsItsTransactionsValuesInItsBalance stamp: 'fr 11/7/2020 23:44:21'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithMultipleAccountsAndPortfoliosReflectsTheirTransactionsValuesInItsBalance stamp: 'fr 11/7/2020 23:44:21'!
PASSED!

!testRun: #PortfolioTest #test05EmptyPortfolioHasNotRegisteredAnyTransaction stamp: 'fr 11/7/2020 23:44:21'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioWithASingleAccountRegistersItsTransactions stamp: 'fr 11/7/2020 23:44:21'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioWithMulltipleAccountsAndPortfoliosRegistersAllTheirTransactions stamp: 'fr 11/7/2020 23:44:21'!
PASSED!

!testRun: #PortfolioTest #test08EmptyPortfolioDoesNotExhibitAnyTransaction stamp: 'fr 11/7/2020 23:44:21'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithASingleAccountExhibitsItsTransactions stamp: 'fr 11/7/2020 23:44:21'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioWithMultipleAccountsAndPortfoliosExhibitsAllTheirTransactionsCombined stamp: 'fr 11/7/2020 23:44:21'!
PASSED!

!testRun: #PortfolioTest #test11 stamp: 'fr 11/7/2020 23:44:21'!
PASSED!

!testRun: #PortfolioTest #test12 stamp: 'fr 11/7/2020 23:44:21'!
PASSED!
!PortfolioTest methodsFor: 'tests' stamp: 'fr 11/7/2020 23:45:08' prior: 50871809!
test02PortfolioWithASingleAccountWithNoTransactionsHasBalanceZero

	| portfolio account |
	account _ ReceptiveAccount new.
	portfolio _ Portfolio with: (OrderedCollection with: account).
	self assert: [portfolio balance = 0]! !

!testRun: #PortfolioTest #test02PortfolioWithASingleAccountWithNoTransactionsHasBalanceZero stamp: 'fr 11/7/2020 23:45:10'!
PASSED!

!testRun: #PortfolioTest #test01EmptyPortfolioHasBalanceZero stamp: 'fr 11/7/2020 23:45:10'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioWithASingleAccountWithNoTransactionsHasBalanceZero stamp: 'fr 11/7/2020 23:45:10'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioWithASingleAccountReflectsItsTransactionsValuesInItsBalance stamp: 'fr 11/7/2020 23:45:10'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithMultipleAccountsAndPortfoliosReflectsTheirTransactionsValuesInItsBalance stamp: 'fr 11/7/2020 23:45:10'!
PASSED!

!testRun: #PortfolioTest #test05EmptyPortfolioHasNotRegisteredAnyTransaction stamp: 'fr 11/7/2020 23:45:10'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioWithASingleAccountRegistersItsTransactions stamp: 'fr 11/7/2020 23:45:10'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioWithMulltipleAccountsAndPortfoliosRegistersAllTheirTransactions stamp: 'fr 11/7/2020 23:45:10'!
PASSED!

!testRun: #PortfolioTest #test08EmptyPortfolioDoesNotExhibitAnyTransaction stamp: 'fr 11/7/2020 23:45:10'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithASingleAccountExhibitsItsTransactions stamp: 'fr 11/7/2020 23:45:10'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioWithMultipleAccountsAndPortfoliosExhibitsAllTheirTransactionsCombined stamp: 'fr 11/7/2020 23:45:10'!
PASSED!

!testRun: #PortfolioTest #test11 stamp: 'fr 11/7/2020 23:45:10'!
PASSED!

!testRun: #PortfolioTest #test12 stamp: 'fr 11/7/2020 23:45:10'!
PASSED!
!PortfolioTest methodsFor: 'tests' stamp: 'fr 11/7/2020 23:45:25' prior: 50871873!
test03PortfolioWithASingleAccountReflectsItsTransactionsValuesInItsBalance

	| portfolio account |
	account _ ReceptiveAccount new.
	Deposit register: 100 on: account. 
	portfolio _ Portfolio with: (OrderedCollection with: account).
	self assert: [portfolio balance = 100]! !
!PortfolioTest methodsFor: 'tests' stamp: 'fr 11/7/2020 23:45:58' prior: 50872108!
test04PortfolioWithMultipleAccountsAndPortfoliosReflectsTheirTransactionsValuesInItsBalance

	| portfolio account anotherAccount innerPortfolio |
	account _ ReceptiveAccount new.
	anotherAccount _ ReceptiveAccount new.
	
	Deposit register: 100 on: account. 
	Deposit register: 50 on: anotherAccount.
	 
	innerPortfolio _ Portfolio with: (OrderedCollection with: account).
	portfolio _ Portfolio with: (OrderedCollection with: anotherAccount with: innerPortfolio).
	self assert: [portfolio balance = 150]! !

!testRun: #PortfolioTest #test04PortfolioWithMultipleAccountsAndPortfoliosReflectsTheirTransactionsValuesInItsBalance stamp: 'fr 11/7/2020 23:45:59'!
PASSED!

!testRun: #PortfolioTest #test01EmptyPortfolioHasBalanceZero stamp: 'fr 11/7/2020 23:45:59'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioWithASingleAccountWithNoTransactionsHasBalanceZero stamp: 'fr 11/7/2020 23:45:59'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioWithASingleAccountReflectsItsTransactionsValuesInItsBalance stamp: 'fr 11/7/2020 23:45:59'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithMultipleAccountsAndPortfoliosReflectsTheirTransactionsValuesInItsBalance stamp: 'fr 11/7/2020 23:45:59'!
PASSED!

!testRun: #PortfolioTest #test05EmptyPortfolioHasNotRegisteredAnyTransaction stamp: 'fr 11/7/2020 23:45:59'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioWithASingleAccountRegistersItsTransactions stamp: 'fr 11/7/2020 23:45:59'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioWithMulltipleAccountsAndPortfoliosRegistersAllTheirTransactions stamp: 'fr 11/7/2020 23:45:59'!
PASSED!

!testRun: #PortfolioTest #test08EmptyPortfolioDoesNotExhibitAnyTransaction stamp: 'fr 11/7/2020 23:45:59'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithASingleAccountExhibitsItsTransactions stamp: 'fr 11/7/2020 23:45:59'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioWithMultipleAccountsAndPortfoliosExhibitsAllTheirTransactionsCombined stamp: 'fr 11/7/2020 23:45:59'!
PASSED!

!testRun: #PortfolioTest #test11 stamp: 'fr 11/7/2020 23:45:59'!
PASSED!

!testRun: #PortfolioTest #test12 stamp: 'fr 11/7/2020 23:45:59'!
PASSED!
!PortfolioTest methodsFor: 'tests' stamp: 'fr 11/7/2020 23:46:16' prior: 50871915!
test06PortfolioWithASingleAccountRegistersItsTransactions

	| portfolio account deposit |
	account _ ReceptiveAccount new.
	deposit _ Deposit register: 100 on: account.	
	portfolio _ Portfolio with: (OrderedCollection with: account).
	self assert: [portfolio hasRegistered: deposit]! !

!testRun: #PortfolioTest #test06PortfolioWithASingleAccountRegistersItsTransactions stamp: 'fr 11/7/2020 23:46:17'!
PASSED!

!testRun: #PortfolioTest #test01EmptyPortfolioHasBalanceZero stamp: 'fr 11/7/2020 23:46:17'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioWithASingleAccountWithNoTransactionsHasBalanceZero stamp: 'fr 11/7/2020 23:46:17'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioWithASingleAccountReflectsItsTransactionsValuesInItsBalance stamp: 'fr 11/7/2020 23:46:17'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithMultipleAccountsAndPortfoliosReflectsTheirTransactionsValuesInItsBalance stamp: 'fr 11/7/2020 23:46:17'!
PASSED!

!testRun: #PortfolioTest #test05EmptyPortfolioHasNotRegisteredAnyTransaction stamp: 'fr 11/7/2020 23:46:17'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioWithASingleAccountRegistersItsTransactions stamp: 'fr 11/7/2020 23:46:17'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioWithMulltipleAccountsAndPortfoliosRegistersAllTheirTransactions stamp: 'fr 11/7/2020 23:46:17'!
PASSED!

!testRun: #PortfolioTest #test08EmptyPortfolioDoesNotExhibitAnyTransaction stamp: 'fr 11/7/2020 23:46:17'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithASingleAccountExhibitsItsTransactions stamp: 'fr 11/7/2020 23:46:17'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioWithMultipleAccountsAndPortfoliosExhibitsAllTheirTransactionsCombined stamp: 'fr 11/7/2020 23:46:17'!
PASSED!

!testRun: #PortfolioTest #test11 stamp: 'fr 11/7/2020 23:46:17'!
PASSED!

!testRun: #PortfolioTest #test12 stamp: 'fr 11/7/2020 23:46:17'!
PASSED!
!PortfolioTest methodsFor: 'tests' stamp: 'fr 11/7/2020 23:46:27' prior: 50872067!
test07PortfolioWithMulltipleAccountsAndPortfoliosRegistersAllTheirTransactions

	| portfolio account anotherAccount innerPortfolio anotherDeposit deposit |
	account _ ReceptiveAccount new.
	anotherAccount _ ReceptiveAccount new.
	
	deposit _ Deposit register: 100 on: account. 
	anotherDeposit _ Deposit register: 50 on: anotherAccount.
	 
	innerPortfolio _ Portfolio with: (OrderedCollection with: account).
	portfolio _ Portfolio with: {anotherAccount. innerPortfolio}.
	self assert: [
		(portfolio hasRegistered: deposit) and: 
		[portfolio hasRegistered: anotherDeposit]
	]! !
!PortfolioTest methodsFor: 'tests' stamp: 'fr 11/7/2020 23:46:52' prior: 50872652!
test07PortfolioWithMulltipleAccountsAndPortfoliosRegistersAllTheirTransactions

	| portfolio account anotherAccount innerPortfolio anotherDeposit deposit |
	account _ ReceptiveAccount new.
	anotherAccount _ ReceptiveAccount new.
	
	deposit _ Deposit register: 100 on: account. 
	anotherDeposit _ Deposit register: 50 on: anotherAccount.
	 
	innerPortfolio _ Portfolio with: (OrderedCollection with: account).
	portfolio _ Portfolio with: (OrderedCollection with: anotherAccount with: innerPortfolio).
	self assert: [
		(portfolio hasRegistered: deposit) and: 
		[portfolio hasRegistered: anotherDeposit]
	]! !

!testRun: #PortfolioTest #test07PortfolioWithMulltipleAccountsAndPortfoliosRegistersAllTheirTransactions stamp: 'fr 11/7/2020 23:46:52'!
PASSED!

!testRun: #PortfolioTest #test01EmptyPortfolioHasBalanceZero stamp: 'fr 11/7/2020 23:46:52'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioWithASingleAccountWithNoTransactionsHasBalanceZero stamp: 'fr 11/7/2020 23:46:52'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioWithASingleAccountReflectsItsTransactionsValuesInItsBalance stamp: 'fr 11/7/2020 23:46:52'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithMultipleAccountsAndPortfoliosReflectsTheirTransactionsValuesInItsBalance stamp: 'fr 11/7/2020 23:46:52'!
PASSED!

!testRun: #PortfolioTest #test05EmptyPortfolioHasNotRegisteredAnyTransaction stamp: 'fr 11/7/2020 23:46:52'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioWithASingleAccountRegistersItsTransactions stamp: 'fr 11/7/2020 23:46:52'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioWithMulltipleAccountsAndPortfoliosRegistersAllTheirTransactions stamp: 'fr 11/7/2020 23:46:52'!
PASSED!

!testRun: #PortfolioTest #test08EmptyPortfolioDoesNotExhibitAnyTransaction stamp: 'fr 11/7/2020 23:46:52'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithASingleAccountExhibitsItsTransactions stamp: 'fr 11/7/2020 23:46:52'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioWithMultipleAccountsAndPortfoliosExhibitsAllTheirTransactionsCombined stamp: 'fr 11/7/2020 23:46:52'!
PASSED!

!testRun: #PortfolioTest #test11 stamp: 'fr 11/7/2020 23:46:52'!
PASSED!

!testRun: #PortfolioTest #test12 stamp: 'fr 11/7/2020 23:46:52'!
PASSED!
!PortfolioTest methodsFor: 'tests' stamp: 'fr 11/7/2020 23:47:02' prior: 50872006!
test09PortfolioWithASingleAccountExhibitsItsTransactions

	| portfolio account deposit |
	account _ ReceptiveAccount new.
	deposit _ Deposit register: 100 on: account.	
	portfolio _ Portfolio with: (OrderedCollection with: account).
	self assert: [portfolio transactions = (OrderedCollection with: deposit)]! !
!PortfolioTest methodsFor: 'tests' stamp: 'fr 11/7/2020 23:47:19' prior: 50872030!
test10PortfolioWithMultipleAccountsAndPortfoliosExhibitsAllTheirTransactionsCombined

	| portfolio account anotherAccount innerPortfolio anotherDeposit deposit |
	account _ ReceptiveAccount new.
	anotherAccount _ ReceptiveAccount new.
	
	deposit _ Deposit register: 100 on: account. 
	anotherDeposit _ Deposit register: 50 on: anotherAccount.
	 
	innerPortfolio _ Portfolio with: (OrderedCollection with: account).
	portfolio _ Portfolio with: (OrderedCollection with: anotherAccount with: innerPortfolio).
	self assert: [portfolio transactions = (OrderedCollection with: anotherDeposit with: deposit	)]! !

!testRun: #PortfolioTest #test10PortfolioWithMultipleAccountsAndPortfoliosExhibitsAllTheirTransactionsCombined stamp: 'fr 11/7/2020 23:47:20'!
PASSED!

!testRun: #PortfolioTest #test01EmptyPortfolioHasBalanceZero stamp: 'fr 11/7/2020 23:47:20'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioWithASingleAccountWithNoTransactionsHasBalanceZero stamp: 'fr 11/7/2020 23:47:20'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioWithASingleAccountReflectsItsTransactionsValuesInItsBalance stamp: 'fr 11/7/2020 23:47:20'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithMultipleAccountsAndPortfoliosReflectsTheirTransactionsValuesInItsBalance stamp: 'fr 11/7/2020 23:47:20'!
PASSED!

!testRun: #PortfolioTest #test05EmptyPortfolioHasNotRegisteredAnyTransaction stamp: 'fr 11/7/2020 23:47:20'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioWithASingleAccountRegistersItsTransactions stamp: 'fr 11/7/2020 23:47:20'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioWithMulltipleAccountsAndPortfoliosRegistersAllTheirTransactions stamp: 'fr 11/7/2020 23:47:20'!
PASSED!

!testRun: #PortfolioTest #test08EmptyPortfolioDoesNotExhibitAnyTransaction stamp: 'fr 11/7/2020 23:47:20'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithASingleAccountExhibitsItsTransactions stamp: 'fr 11/7/2020 23:47:20'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioWithMultipleAccountsAndPortfoliosExhibitsAllTheirTransactionsCombined stamp: 'fr 11/7/2020 23:47:20'!
PASSED!

!testRun: #PortfolioTest #test11 stamp: 'fr 11/7/2020 23:47:20'!
PASSED!

!testRun: #PortfolioTest #test12 stamp: 'fr 11/7/2020 23:47:20'!
PASSED!
!PortfolioTest methodsFor: 'tests' stamp: 'fr 11/7/2020 23:47:30'!
test13

	| portfolio account |
	account _ ReceptiveAccount new.
	portfolio _ Portfolio new.
	portfolio add: account.
	self assert: [portfolio contains: account]! !

!methodRemoval: PortfolioTest #test13 stamp: 'fr 11/7/2020 23:47:38'!
test13

	| portfolio account |
	account _ ReceptiveAccount new.
	portfolio _ Portfolio new.
	portfolio add: account.
	self assert: [portfolio contains: account]!
!PortfolioTest methodsFor: 'tests' stamp: 'fr 11/7/2020 23:47:52'!
test11EmptyPortfolioDoesNotContainAnyAccount

	| portfolio account |
	account _ ReceptiveAccount new.
	portfolio _ Portfolio new.
	self assert: [(portfolio contains: account) not]! !

!methodRemoval: PortfolioTest #test11 stamp: 'fr 11/7/2020 23:47:52'!
test11

	| portfolio account |
	account _ ReceptiveAccount new.
	portfolio _ Portfolio new.
	self assert: [(portfolio contains: account) not]!
!PortfolioTest methodsFor: 'tests' stamp: 'fr 11/7/2020 23:48:51'!
test12PortfolioContainsAnAccountAfterItIsAdded

	| portfolio account |
	account _ ReceptiveAccount new.
	portfolio _ Portfolio new.
	portfolio add: account.
	self assert: [portfolio contains: account]! !

!methodRemoval: PortfolioTest #test12 stamp: 'fr 11/7/2020 23:48:51'!
test12

	| portfolio account |
	account _ ReceptiveAccount new.
	portfolio _ Portfolio new.
	portfolio add: account.
	self assert: [portfolio contains: account]!

!testRun: #PortfolioTest #test12PortfolioContainsAnAccountAfterItIsAdded stamp: 'fr 11/7/2020 23:48:55'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioContainsAnAccountAfterItIsAdded stamp: 'fr 11/7/2020 23:48:56'!
PASSED!

!testRun: #PortfolioTest #test01EmptyPortfolioHasBalanceZero stamp: 'fr 11/7/2020 23:48:56'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioWithASingleAccountWithNoTransactionsHasBalanceZero stamp: 'fr 11/7/2020 23:48:56'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioWithASingleAccountReflectsItsTransactionsValuesInItsBalance stamp: 'fr 11/7/2020 23:48:56'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithMultipleAccountsAndPortfoliosReflectsTheirTransactionsValuesInItsBalance stamp: 'fr 11/7/2020 23:48:56'!
PASSED!

!testRun: #PortfolioTest #test05EmptyPortfolioHasNotRegisteredAnyTransaction stamp: 'fr 11/7/2020 23:48:56'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioWithASingleAccountRegistersItsTransactions stamp: 'fr 11/7/2020 23:48:56'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioWithMulltipleAccountsAndPortfoliosRegistersAllTheirTransactions stamp: 'fr 11/7/2020 23:48:56'!
PASSED!

!testRun: #PortfolioTest #test08EmptyPortfolioDoesNotExhibitAnyTransaction stamp: 'fr 11/7/2020 23:48:56'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithASingleAccountExhibitsItsTransactions stamp: 'fr 11/7/2020 23:48:56'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioWithMultipleAccountsAndPortfoliosExhibitsAllTheirTransactionsCombined stamp: 'fr 11/7/2020 23:48:56'!
PASSED!

!testRun: #PortfolioTest #test11EmptyPortfolioDoesNotContainAnyAccount stamp: 'fr 11/7/2020 23:48:56'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioContainsAnAccountAfterItIsAdded stamp: 'fr 11/7/2020 23:48:56'!
PASSED!

----SNAPSHOT----(7 November 2020 23:49:46) CuisUniversity-4384.image priorSource: 17284632!

----SNAPSHOT----(8 November 2020 00:34:35) CuisUniversity-4384.image priorSource: 17320991!

----QUIT----(8 November 2020 00:34:45) CuisUniversity-4384.image priorSource: 17321084!

----STARTUP---- (8 November 2020 03:14:40) as /home/fede/Documentos/Facultad/Inge1/Cuises/linux64/CuisUniversity-4384.image!


----QUIT----(8 November 2020 03:33:21) CuisUniversity-4384.image priorSource: 17321177!

----STARTUP---- (8 November 2020 07:01:35) as /home/fede/Documentos/Facultad/Inge1/Cuises/linux64/CuisUniversity-4384.image!

!PortfolioTest methodsFor: 'tests' stamp: 'fr 11/8/2020 07:03:32'!
test13

	| portfolio account |
	account _ ReceptiveAccount new.
	portfolio _ Portfolio new.
	portfolio add: account.
	self assert: [portfolio contains: account]! !
!PortfolioTest methodsFor: 'tests' stamp: 'fr 11/8/2020 07:24:42' prior: 50872951!
test13

	| portfolio |
	portfolio _ Portfolio new.
	portfolio add: portfolio.
	self should: [portfolio add: portfolio] raise: Error withMessageText: Portfolio canNotAddAccountErrorDescription! !
!PortfolioTest methodsFor: 'tests' stamp: 'fr 11/8/2020 07:25:07' prior: 50872959!
test13

	| portfolio |
	portfolio _ Portfolio new.
	portfolio add: portfolio.
	
	self  should: [portfolio add: portfolio] 
		raise: Error 
		withMessageText: Portfolio canNotAddAccountErrorDescription! !

!testRun: #PortfolioTest #test13 stamp: 'fr 11/8/2020 07:25:10'!
ERROR!
!Portfolio class methodsFor: 'error descriptions' stamp: 'fr 11/8/2020 07:25:26'!
canNotAddAccountErrorDescription
	self shouldBeImplemented.! !
!Portfolio class methodsFor: 'error descriptions' stamp: 'fr 11/8/2020 07:25:50' prior: 50872980!
canNotAddAccountErrorDescription
	
	^'Can not add account'! !

!testRun: #PortfolioTest #test13 stamp: 'fr 11/8/2020 07:25:57'!
FAILURE!
!Portfolio methodsFor: 'accounts management' stamp: 'fr 11/8/2020 07:27:01' prior: 50872272!
add: aReceptiveAccount 
	
	aReceptiveAccount = self ifTrue: [self error: self class canNotAddAccountErrorDescription].
	
	accounts add: aReceptiveAccount ! !

!testRun: #PortfolioTest #test13 stamp: 'fr 11/8/2020 07:27:02'!
ERROR!
!PortfolioTest methodsFor: 'tests' stamp: 'fr 11/8/2020 07:27:09' prior: 50872968!
test13

	| portfolio |
	portfolio _ Portfolio new.
	
	self  should: [portfolio add: portfolio] 
		raise: Error 
		withMessageText: Portfolio canNotAddAccountErrorDescription! !

!testRun: #PortfolioTest #test13 stamp: 'fr 11/8/2020 07:27:10'!
PASSED!

!testRun: #PortfolioTest #test01EmptyPortfolioHasBalanceZero stamp: 'fr 11/8/2020 07:27:10'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioWithASingleAccountWithNoTransactionsHasBalanceZero stamp: 'fr 11/8/2020 07:27:10'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioWithASingleAccountReflectsItsTransactionsValuesInItsBalance stamp: 'fr 11/8/2020 07:27:10'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithMultipleAccountsAndPortfoliosReflectsTheirTransactionsValuesInItsBalance stamp: 'fr 11/8/2020 07:27:10'!
PASSED!

!testRun: #PortfolioTest #test05EmptyPortfolioHasNotRegisteredAnyTransaction stamp: 'fr 11/8/2020 07:27:10'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioWithASingleAccountRegistersItsTransactions stamp: 'fr 11/8/2020 07:27:10'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioWithMulltipleAccountsAndPortfoliosRegistersAllTheirTransactions stamp: 'fr 11/8/2020 07:27:10'!
PASSED!

!testRun: #PortfolioTest #test08EmptyPortfolioDoesNotExhibitAnyTransaction stamp: 'fr 11/8/2020 07:27:10'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithASingleAccountExhibitsItsTransactions stamp: 'fr 11/8/2020 07:27:10'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioWithMultipleAccountsAndPortfoliosExhibitsAllTheirTransactionsCombined stamp: 'fr 11/8/2020 07:27:10'!
PASSED!

!testRun: #PortfolioTest #test11EmptyPortfolioDoesNotContainAnyAccount stamp: 'fr 11/8/2020 07:27:10'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioContainsAnAccountAfterItIsAdded stamp: 'fr 11/8/2020 07:27:10'!
PASSED!

!testRun: #PortfolioTest #test13 stamp: 'fr 11/8/2020 07:27:10'!
PASSED!
!PortfolioTest methodsFor: 'tests' stamp: 'fr 11/8/2020 07:27:59'!
test13PortfolioCanNotAddItself

	| portfolio |
	portfolio _ Portfolio new.
	
	self  should: [portfolio add: portfolio] 
		raise: Error 
		withMessageText: Portfolio canNotAddAccountErrorDescription! !
!PortfolioTest methodsFor: 'tests' stamp: 'fr 11/8/2020 07:28:03'!
test14

	| portfolio |
	portfolio _ Portfolio new.
	
	self  should: [portfolio add: portfolio] 
		raise: Error 
		withMessageText: Portfolio canNotAddAccountErrorDescription! !

!methodRemoval: PortfolioTest #test13 stamp: 'fr 11/8/2020 07:28:34'!
test13

	| portfolio |
	portfolio _ Portfolio new.
	
	self  should: [portfolio add: portfolio] 
		raise: Error 
		withMessageText: Portfolio canNotAddAccountErrorDescription!
!PortfolioTest methodsFor: 'tests' stamp: 'fr 11/8/2020 07:35:38' prior: 50873074!
test14

	| portfolio anotherPortfolio |
	portfolio _ Portfolio new.
	anotherPortfolio _ Portfolio with: (OrderedCollection with: portfolio).
	
	self  should: [anotherPortfolio add: portfolio] 
		raise: Error 
		withMessageText: Portfolio canNotAddAccountErrorDescription! !

!testRun: #PortfolioTest #test14 stamp: 'fr 11/8/2020 07:35:48'!
FAILURE!

!classDefinition: #Portfolio category: 'Portfolio-Ejercicio' stamp: 'fr 11/8/2020 07:37:20'!
Object subclass: #Portfolio
	instanceVariableNames: 'accounts parent'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!
!Portfolio methodsFor: 'accounts management' stamp: 'fr 11/8/2020 07:37:24' prior: 50872994!
add: aReceptiveAccount 
	
	aReceptiveAccount = self ifTrue: [self error: self class canNotAddAccountErrorDescription].
	aReceptiveAccount = parent ifTrue: [self error: self class canNotAddAccountErrorDescription].
	
	accounts add: aReceptiveAccount ! !

!testRun: #PortfolioTest #test14 stamp: 'fr 11/8/2020 07:37:28'!
FAILURE!
!Portfolio methodsFor: 'initialization' stamp: 'fr 11/8/2020 07:39:34' prior: 50871335!
initializeWith: aReceptiveAccountList 
	
	accounts _ aReceptiveAccountList.
	aReceptiveAccountList do: [:anAccount | 
		(anAccount isMemberOf: Portfolio) ifTrue:
			[anAccount hasBeenAddedBy: self]
		]! !

!testRun: #PortfolioTest #test14 stamp: 'fr 11/8/2020 07:39:37'!
ERROR!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'fr 11/8/2020 07:39:48'!
hasBeenAddedBy: aPortfolio 
	self shouldBeImplemented.! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'fr 11/8/2020 07:40:01' prior: 50873137!
hasBeenAddedBy: aPortfolio 
	
	parent _ aPortfolio! !

!testRun: #PortfolioTest #test14 stamp: 'fr 11/8/2020 07:40:02'!
FAILURE!
!PortfolioTest methodsFor: 'tests' stamp: 'fr 11/8/2020 07:40:47' prior: 50873090!
test14

	| portfolio anotherPortfolio |
	portfolio _ Portfolio new.
	anotherPortfolio _ Portfolio with: (OrderedCollection with: portfolio).
	
	self  should: [portfolio add: anotherPortfolio] 
		raise: Error 
		withMessageText: Portfolio canNotAddAccountErrorDescription! !

!testRun: #PortfolioTest #test14 stamp: 'fr 11/8/2020 07:40:48'!
PASSED!

!testRun: #PortfolioTest #test01EmptyPortfolioHasBalanceZero stamp: 'fr 11/8/2020 07:40:48'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioWithASingleAccountWithNoTransactionsHasBalanceZero stamp: 'fr 11/8/2020 07:40:48'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioWithASingleAccountReflectsItsTransactionsValuesInItsBalance stamp: 'fr 11/8/2020 07:40:48'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithMultipleAccountsAndPortfoliosReflectsTheirTransactionsValuesInItsBalance stamp: 'fr 11/8/2020 07:40:48'!
PASSED!

!testRun: #PortfolioTest #test05EmptyPortfolioHasNotRegisteredAnyTransaction stamp: 'fr 11/8/2020 07:40:48'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioWithASingleAccountRegistersItsTransactions stamp: 'fr 11/8/2020 07:40:48'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioWithMulltipleAccountsAndPortfoliosRegistersAllTheirTransactions stamp: 'fr 11/8/2020 07:40:48'!
PASSED!

!testRun: #PortfolioTest #test08EmptyPortfolioDoesNotExhibitAnyTransaction stamp: 'fr 11/8/2020 07:40:48'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithASingleAccountExhibitsItsTransactions stamp: 'fr 11/8/2020 07:40:48'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioWithMultipleAccountsAndPortfoliosExhibitsAllTheirTransactionsCombined stamp: 'fr 11/8/2020 07:40:48'!
PASSED!

!testRun: #PortfolioTest #test11EmptyPortfolioDoesNotContainAnyAccount stamp: 'fr 11/8/2020 07:40:48'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioContainsAnAccountAfterItIsAdded stamp: 'fr 11/8/2020 07:40:48'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioCanNotAddItself stamp: 'fr 11/8/2020 07:40:48'!
PASSED!

!testRun: #PortfolioTest #test14 stamp: 'fr 11/8/2020 07:40:48'!
PASSED!
!PortfolioTest methodsFor: 'tests' stamp: 'fr 11/8/2020 07:41:05'!
test14PortfolioCanNotAddItsParent

	| portfolio anotherPortfolio |
	portfolio _ Portfolio new.
	anotherPortfolio _ Portfolio with: (OrderedCollection with: portfolio).
	
	self  should: [portfolio add: anotherPortfolio] 
		raise: Error 
		withMessageText: Portfolio canNotAddAccountErrorDescription! !

!methodRemoval: PortfolioTest #test14 stamp: 'fr 11/8/2020 07:41:05'!
test14

	| portfolio anotherPortfolio |
	portfolio _ Portfolio new.
	anotherPortfolio _ Portfolio with: (OrderedCollection with: portfolio).
	
	self  should: [portfolio add: anotherPortfolio] 
		raise: Error 
		withMessageText: Portfolio canNotAddAccountErrorDescription!
!PortfolioTest methodsFor: 'tests' stamp: 'fr 11/8/2020 07:42:29' prior: 50873216!
test14PortfolioCanNotAddItsParent

	| portfolio anotherPortfolio leafPortfolio middlePortfolio rootPortfolio |
	leafPortfolio _ Portfolio new.
	middlePortfolio _ Portfolio with: (OrderedCollection with: portfolio).
	rootPortfolio _ Portfolio with: (OrderedCollection with: middlePortfolio).
	
	self  should: [portfolio add: anotherPortfolio] 
		raise: Error 
		withMessageText: Portfolio canNotAddAccountErrorDescription! !
!PortfolioTest methodsFor: 'tests' stamp: 'fr 11/8/2020 07:42:56' prior: 50873239!
test14PortfolioCanNotAddItsParent

	| portfolio anotherPortfolio leafPortfolio middlePortfolio rootPortfolio |
	leafPortfolio _ Portfolio new.
	middlePortfolio _ Portfolio with: (OrderedCollection with: leafPortfolio).
	rootPortfolio _ Portfolio with: (OrderedCollection with: middlePortfolio).
	
	self  should: [portfolio add: anotherPortfolio] 
		raise: Error 
		withMessageText: Portfolio canNotAddAccountErrorDescription! !
!PortfolioTest methodsFor: 'tests' stamp: 'fr 11/8/2020 07:43:08' prior: 50873255!
test14PortfolioCanNotAddItsParent

	| leafPortfolio middlePortfolio rootPortfolio |
	leafPortfolio _ Portfolio new.
	middlePortfolio _ Portfolio with: (OrderedCollection with: leafPortfolio).
	rootPortfolio _ Portfolio with: (OrderedCollection with: middlePortfolio).
	
	self  should: [leafPortfolio add: rootPortfolio] 
		raise: Error 
		withMessageText: Portfolio canNotAddAccountErrorDescription! !
!PortfolioTest methodsFor: 'tests' stamp: 'fr 11/8/2020 07:43:27' prior: 50873271!
test14PortfolioCanNotAddItsParent

	| portfolio anotherPortfolio |
	portfolio _ Portfolio new.
	anotherPortfolio _ Portfolio with: (OrderedCollection with: portfolio).
	
	self  should: [portfolio add: anotherPortfolio] 
		raise: Error 
		withMessageText: Portfolio canNotAddAccountErrorDescription! !

!testRun: #PortfolioTest #test14PortfolioCanNotAddItsParent stamp: 'fr 11/8/2020 07:43:30'!
PASSED!

!testRun: #PortfolioTest #test01EmptyPortfolioHasBalanceZero stamp: 'fr 11/8/2020 07:43:30'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioWithASingleAccountWithNoTransactionsHasBalanceZero stamp: 'fr 11/8/2020 07:43:30'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioWithASingleAccountReflectsItsTransactionsValuesInItsBalance stamp: 'fr 11/8/2020 07:43:30'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithMultipleAccountsAndPortfoliosReflectsTheirTransactionsValuesInItsBalance stamp: 'fr 11/8/2020 07:43:30'!
PASSED!

!testRun: #PortfolioTest #test05EmptyPortfolioHasNotRegisteredAnyTransaction stamp: 'fr 11/8/2020 07:43:30'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioWithASingleAccountRegistersItsTransactions stamp: 'fr 11/8/2020 07:43:30'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioWithMulltipleAccountsAndPortfoliosRegistersAllTheirTransactions stamp: 'fr 11/8/2020 07:43:30'!
PASSED!

!testRun: #PortfolioTest #test08EmptyPortfolioDoesNotExhibitAnyTransaction stamp: 'fr 11/8/2020 07:43:30'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithASingleAccountExhibitsItsTransactions stamp: 'fr 11/8/2020 07:43:30'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioWithMultipleAccountsAndPortfoliosExhibitsAllTheirTransactionsCombined stamp: 'fr 11/8/2020 07:43:30'!
PASSED!

!testRun: #PortfolioTest #test11EmptyPortfolioDoesNotContainAnyAccount stamp: 'fr 11/8/2020 07:43:30'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioContainsAnAccountAfterItIsAdded stamp: 'fr 11/8/2020 07:43:30'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioCanNotAddItself stamp: 'fr 11/8/2020 07:43:30'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioCanNotAddItsParent stamp: 'fr 11/8/2020 07:43:30'!
PASSED!
!PortfolioTest methodsFor: 'tests' stamp: 'fr 11/8/2020 07:43:37'!
test15

	| leafPortfolio middlePortfolio rootPortfolio |
	leafPortfolio _ Portfolio new.
	middlePortfolio _ Portfolio with: (OrderedCollection with: leafPortfolio).
	rootPortfolio _ Portfolio with: (OrderedCollection with: middlePortfolio).
	
	self  should: [leafPortfolio add: rootPortfolio] 
		raise: Error 
		withMessageText: Portfolio canNotAddAccountErrorDescription! !

!testRun: #PortfolioTest #test15 stamp: 'fr 11/8/2020 07:44:17'!
FAILURE!
!Portfolio methodsFor: 'accounts management' stamp: 'fr 11/8/2020 07:48:31' prior: 50873112!
add: aReceptiveAccount 
	
	self validateAdding: aReceptiveAccount.
	
	accounts add: aReceptiveAccount ! !

!testRun: #PortfolioTest #test15 stamp: 'fr 11/8/2020 07:48:32'!
FAILURE!

!testRun: #PortfolioTest #test15 stamp: 'fr 11/8/2020 07:48:38'!
FAILURE!
!Portfolio methodsFor: 'accounts management' stamp: 'fr 11/8/2020 07:37:24' prior: 50873374!
add: aReceptiveAccount 
	
	aReceptiveAccount = self ifTrue: [self error: self class canNotAddAccountErrorDescription].
	aReceptiveAccount = parent ifTrue: [self error: self class canNotAddAccountErrorDescription].
	
	accounts add: aReceptiveAccount ! !
!Portfolio methodsFor: 'accounts management' stamp: 'fr 11/8/2020 07:50:05' prior: 50873385!
add: aReceptiveAccount 
	
	"aReceptiveAccount = self ifTrue: [self error: self class canNotAddAccountErrorDescription].
	aReceptiveAccount = parent ifTrue: [self error: self class canNotAddAccountErrorDescription]."
	
	self ancestors include: aReceptiveAccount 
	
	accounts add: aReceptiveAccount ! !
!Portfolio methodsFor: 'accounts management' stamp: 'fr 11/8/2020 07:50:12' prior: 50873396!
add: aReceptiveAccount 
	
	"aReceptiveAccount = self ifTrue: [self error: self class canNotAddAccountErrorDescription].
	aReceptiveAccount = parent ifTrue: [self error: self class canNotAddAccountErrorDescription]."
	
	self ancestors include: aReceptiveAccount.
	
	accounts add: aReceptiveAccount ! !
!Portfolio methodsFor: 'accounts management' stamp: 'fr 11/8/2020 07:50:19' prior: 50873409!
add: aReceptiveAccount 
	
	"aReceptiveAccount = self ifTrue: [self error: self class canNotAddAccountErrorDescription].
	aReceptiveAccount = parent ifTrue: [self error: self class canNotAddAccountErrorDescription]."
	
	self ancestors includes: aReceptiveAccount.
	
	accounts add: aReceptiveAccount ! !

!testRun: #PortfolioTest #test15 stamp: 'fr 11/8/2020 07:50:59'!
FAILURE!
!Portfolio methodsFor: 'accounts management' stamp: 'fr 11/8/2020 07:59:39' prior: 50873422!
add: aReceptiveAccount 
	
	"aReceptiveAccount = self ifTrue: [self error: self class canNotAddAccountErrorDescription].
	aReceptiveAccount = parent ifTrue: [self error: self class canNotAddAccountErrorDescription]."
	
	self ancestors includes: aReceptiveAccount ifTrue: [self error: self class canNotAddAccountErrorDescription].
	
	accounts add: aReceptiveAccount ! !
!Portfolio methodsFor: 'accounts management' stamp: 'fr 11/8/2020 07:59:48' prior: 50873437!
add: aReceptiveAccount 
	
	"aReceptiveAccount = self ifTrue: [self error: self class canNotAddAccountErrorDescription].
	aReceptiveAccount = parent ifTrue: [self error: self class canNotAddAccountErrorDescription]."
	
	(self ancestors includes: aReceptiveAccount) ifTrue: [self error: self class canNotAddAccountErrorDescription].
	
	accounts add: aReceptiveAccount ! !

!testRun: #PortfolioTest #test15 stamp: 'fr 11/8/2020 07:59:59'!
FAILURE!
!Portfolio methodsFor: 'account lineage' stamp: 'fr 11/8/2020 08:01:00'!
ancestors
	self shouldBeImplemented.! !
!Portfolio methodsFor: 'account lineage' stamp: 'fr 11/8/2020 08:01:31' prior: 50873469!
ancestors
	
	^(OrderedCollection with: parent) addAllLast: parent ancestors! !
!Portfolio methodsFor: 'account lineage' stamp: 'fr 11/8/2020 08:03:34' prior: 50873474!
ancestors
	
	| ancestors |
	ancestors _ OrderedCollection new.
	^parent ifNotNil: [ancestors add: parent. ancestors addAllLast: parent ancestors] ifNil: [ancestors]! !

!testRun: #PortfolioTest #test15 stamp: 'fr 11/8/2020 08:03:39'!
FAILURE!

self ancestors!

!testRun: #PortfolioTest #test15 stamp: 'fr 11/8/2020 08:04:43'!
FAILURE!

!testRun: #PortfolioTest #test15 stamp: 'fr 11/8/2020 08:04:47'!
FAILURE!

parent!
!Portfolio methodsFor: 'account lineage' stamp: 'fr 11/8/2020 08:06:03' prior: 50873480!
ancestors
	
	| ancestors |
	ancestors _ OrderedCollection new.
	parent ifNotNil: [ancestors add: parent. ancestors addAllLast: parent ancestors] ifNil: [ancestors].
	^ancestors! !

!testRun: #PortfolioTest #test15 stamp: 'fr 11/8/2020 08:06:04'!
FAILURE!

!testRun: #PortfolioTest #test15 stamp: 'fr 11/8/2020 08:06:07'!
PASSED!

!testRun: #PortfolioTest #test01EmptyPortfolioHasBalanceZero stamp: 'fr 11/8/2020 08:06:07'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioWithASingleAccountWithNoTransactionsHasBalanceZero stamp: 'fr 11/8/2020 08:06:07'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioWithASingleAccountReflectsItsTransactionsValuesInItsBalance stamp: 'fr 11/8/2020 08:06:07'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithMultipleAccountsAndPortfoliosReflectsTheirTransactionsValuesInItsBalance stamp: 'fr 11/8/2020 08:06:07'!
PASSED!

!testRun: #PortfolioTest #test05EmptyPortfolioHasNotRegisteredAnyTransaction stamp: 'fr 11/8/2020 08:06:07'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioWithASingleAccountRegistersItsTransactions stamp: 'fr 11/8/2020 08:06:07'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioWithMulltipleAccountsAndPortfoliosRegistersAllTheirTransactions stamp: 'fr 11/8/2020 08:06:07'!
PASSED!

!testRun: #PortfolioTest #test08EmptyPortfolioDoesNotExhibitAnyTransaction stamp: 'fr 11/8/2020 08:06:07'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithASingleAccountExhibitsItsTransactions stamp: 'fr 11/8/2020 08:06:07'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioWithMultipleAccountsAndPortfoliosExhibitsAllTheirTransactionsCombined stamp: 'fr 11/8/2020 08:06:07'!
PASSED!

!testRun: #PortfolioTest #test11EmptyPortfolioDoesNotContainAnyAccount stamp: 'fr 11/8/2020 08:06:07'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioContainsAnAccountAfterItIsAdded stamp: 'fr 11/8/2020 08:06:07'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioCanNotAddItself stamp: 'fr 11/8/2020 08:06:07'!
FAILURE!

!testRun: #PortfolioTest #test14PortfolioCanNotAddItsParent stamp: 'fr 11/8/2020 08:06:07'!
PASSED!

!testRun: #PortfolioTest #test15 stamp: 'fr 11/8/2020 08:06:07'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioCanNotAddItself stamp: 'fr 11/8/2020 08:06:07'!
FAILURE!

!testRun: #PortfolioTest #test13PortfolioCanNotAddItself stamp: 'fr 11/8/2020 08:06:18'!
FAILURE!

ancestors!
!Portfolio methodsFor: 'account lineage' stamp: 'fr 11/8/2020 08:07:07' prior: 50873496!
ancestors
	
	| ancestors |
	ancestors _ OrderedCollection new.
	parent ifNotNil: [ancestors add: parent. ancestors addAllLast: parent ancestors] ifNil: [ancestors add: self].
	^ancestors! !

!testRun: #PortfolioTest #test13PortfolioCanNotAddItself stamp: 'fr 11/8/2020 08:07:10'!
PASSED!

!testRun: #PortfolioTest #test01EmptyPortfolioHasBalanceZero stamp: 'fr 11/8/2020 08:07:10'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioWithASingleAccountWithNoTransactionsHasBalanceZero stamp: 'fr 11/8/2020 08:07:10'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioWithASingleAccountReflectsItsTransactionsValuesInItsBalance stamp: 'fr 11/8/2020 08:07:10'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithMultipleAccountsAndPortfoliosReflectsTheirTransactionsValuesInItsBalance stamp: 'fr 11/8/2020 08:07:10'!
PASSED!

!testRun: #PortfolioTest #test05EmptyPortfolioHasNotRegisteredAnyTransaction stamp: 'fr 11/8/2020 08:07:10'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioWithASingleAccountRegistersItsTransactions stamp: 'fr 11/8/2020 08:07:10'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioWithMulltipleAccountsAndPortfoliosRegistersAllTheirTransactions stamp: 'fr 11/8/2020 08:07:10'!
PASSED!

!testRun: #PortfolioTest #test08EmptyPortfolioDoesNotExhibitAnyTransaction stamp: 'fr 11/8/2020 08:07:10'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithASingleAccountExhibitsItsTransactions stamp: 'fr 11/8/2020 08:07:10'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioWithMultipleAccountsAndPortfoliosExhibitsAllTheirTransactionsCombined stamp: 'fr 11/8/2020 08:07:10'!
PASSED!

!testRun: #PortfolioTest #test11EmptyPortfolioDoesNotContainAnyAccount stamp: 'fr 11/8/2020 08:07:10'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioContainsAnAccountAfterItIsAdded stamp: 'fr 11/8/2020 08:07:10'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioCanNotAddItself stamp: 'fr 11/8/2020 08:07:10'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioCanNotAddItsParent stamp: 'fr 11/8/2020 08:07:10'!
PASSED!

!testRun: #PortfolioTest #test15 stamp: 'fr 11/8/2020 08:07:10'!
PASSED!
!PortfolioTest methodsFor: 'tests' stamp: 'fr 11/8/2020 08:07:24' prior: 50873357!
test15

	| leafPortfolio middlePortfolio rootPortfolio |
	leafPortfolio _ Portfolio new.
	middlePortfolio _ Portfolio with: (OrderedCollection with: leafPortfolio).
	rootPortfolio _ Portfolio with: (OrderedCollection with: middlePortfolio).
	
	self  should: [leafPortfolio add: rootPortfolio] 
		raise: Error 
		withMessageText: Portfolio canNotAddAccountErrorDescription! !

!testRun: #PortfolioTest #test15 stamp: 'fr 11/8/2020 08:07:26'!
PASSED!

!testRun: #PortfolioTest #test01EmptyPortfolioHasBalanceZero stamp: 'fr 11/8/2020 08:07:26'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioWithASingleAccountWithNoTransactionsHasBalanceZero stamp: 'fr 11/8/2020 08:07:26'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioWithASingleAccountReflectsItsTransactionsValuesInItsBalance stamp: 'fr 11/8/2020 08:07:26'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithMultipleAccountsAndPortfoliosReflectsTheirTransactionsValuesInItsBalance stamp: 'fr 11/8/2020 08:07:26'!
PASSED!

!testRun: #PortfolioTest #test05EmptyPortfolioHasNotRegisteredAnyTransaction stamp: 'fr 11/8/2020 08:07:26'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioWithASingleAccountRegistersItsTransactions stamp: 'fr 11/8/2020 08:07:26'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioWithMulltipleAccountsAndPortfoliosRegistersAllTheirTransactions stamp: 'fr 11/8/2020 08:07:26'!
PASSED!

!testRun: #PortfolioTest #test08EmptyPortfolioDoesNotExhibitAnyTransaction stamp: 'fr 11/8/2020 08:07:26'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithASingleAccountExhibitsItsTransactions stamp: 'fr 11/8/2020 08:07:26'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioWithMultipleAccountsAndPortfoliosExhibitsAllTheirTransactionsCombined stamp: 'fr 11/8/2020 08:07:26'!
PASSED!

!testRun: #PortfolioTest #test11EmptyPortfolioDoesNotContainAnyAccount stamp: 'fr 11/8/2020 08:07:26'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioContainsAnAccountAfterItIsAdded stamp: 'fr 11/8/2020 08:07:26'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioCanNotAddItself stamp: 'fr 11/8/2020 08:07:26'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioCanNotAddItsParent stamp: 'fr 11/8/2020 08:07:26'!
PASSED!

!testRun: #PortfolioTest #test15 stamp: 'fr 11/8/2020 08:07:26'!
PASSED!
!PortfolioTest methodsFor: 'tests' stamp: 'fr 11/8/2020 08:07:39'!
test15PortfolioCanNotAddAnyAncestor

	| leafPortfolio middlePortfolio rootPortfolio |
	leafPortfolio _ Portfolio new.
	middlePortfolio _ Portfolio with: (OrderedCollection with: leafPortfolio).
	rootPortfolio _ Portfolio with: (OrderedCollection with: middlePortfolio).
	
	self  should: [leafPortfolio add: rootPortfolio] 
		raise: Error 
		withMessageText: Portfolio canNotAddAccountErrorDescription! !

!methodRemoval: PortfolioTest #test15 stamp: 'fr 11/8/2020 08:07:39'!
test15

	| leafPortfolio middlePortfolio rootPortfolio |
	leafPortfolio _ Portfolio new.
	middlePortfolio _ Portfolio with: (OrderedCollection with: leafPortfolio).
	rootPortfolio _ Portfolio with: (OrderedCollection with: middlePortfolio).
	
	self  should: [leafPortfolio add: rootPortfolio] 
		raise: Error 
		withMessageText: Portfolio canNotAddAccountErrorDescription!
!PortfolioTest methodsFor: 'tests' stamp: 'fr 11/8/2020 08:07:44'!
test16

	| leafPortfolio middlePortfolio rootPortfolio |
	leafPortfolio _ Portfolio new.
	middlePortfolio _ Portfolio with: (OrderedCollection with: leafPortfolio).
	rootPortfolio _ Portfolio with: (OrderedCollection with: middlePortfolio).
	
	self  should: [leafPortfolio add: rootPortfolio] 
		raise: Error 
		withMessageText: Portfolio canNotAddAccountErrorDescription! !
!PortfolioTest methodsFor: 'tests' stamp: 'fr 11/8/2020 08:17:24' prior: 50873744!
test16

	| leafPortfolio middlePortfolio rootPortfolio anotherLeafPortfolio |
	leafPortfolio _ Portfolio new.
	anotherLeafPortfolio _ Portfolio new.
	middlePortfolio _ Portfolio with: (OrderedCollection with: leafPortfolio).
	rootPortfolio _ Portfolio with: (OrderedCollection with: middlePortfolio).
	
	self  should: [leafPortfolio add: rootPortfolio] 
		raise: Error 
		withMessageText: Portfolio canNotAddAccountErrorDescription! !
!PortfolioTest methodsFor: 'tests' stamp: 'fr 11/8/2020 08:17:37' prior: 50873759!
test16

	| leafPortfolio middlePortfolio rootPortfolio anotherLeafPortfolio |
	leafPortfolio _ Portfolio new.
	anotherLeafPortfolio _ Portfolio new.
	middlePortfolio _ Portfolio with: (OrderedCollection with: leafPortfolio).
	rootPortfolio _ Portfolio with: (OrderedCollection with: middlePortfolio).
	
	self  should: [leafPortfolio add: anotherLeafPortfolio] 
		raise: Error 
		withMessageText: Portfolio canNotAddAccountErrorDescription! !
!PortfolioTest methodsFor: 'tests' stamp: 'fr 11/8/2020 08:18:02' prior: 50873776!
test16

	| leafPortfolio middlePortfolio rootPortfolio anotherLeafPortfolio |
	leafPortfolio _ Portfolio new.
	anotherLeafPortfolio _ Portfolio new.
	middlePortfolio _ Portfolio with: (OrderedCollection with: leafPortfolio).
	rootPortfolio _ Portfolio with: (OrderedCollection with: middlePortfolio with: anotherLeafPortfolio).
	
	self  should: [leafPortfolio add: anotherLeafPortfolio] 
		raise: Error 
		withMessageText: Portfolio canNotAddAccountErrorDescription! !

!testRun: #PortfolioTest #test16 stamp: 'fr 11/8/2020 08:18:11'!
FAILURE!
!Portfolio methodsFor: 'accounts management' stamp: 'fr 11/8/2020 08:19:40' prior: 50873452!
add: aReceptiveAccount 
	
	"aReceptiveAccount = self ifTrue: [self error: self class canNotAddAccountErrorDescription].
	aReceptiveAccount = parent ifTrue: [self error: self class canNotAddAccountErrorDescription]."
	
	(self ancestors includes: aReceptiveAccount) ifTrue: [self error: self class canNotAddAccountErrorDescription].
	
	accounts add: aReceptiveAccount ! !
!Portfolio methodsFor: 'accounts management' stamp: 'fr 11/8/2020 08:20:22' prior: 50873813!
add: aReceptiveAccount 
	
	"aReceptiveAccount = self ifTrue: [self error: self class canNotAddAccountErrorDescription].
	aReceptiveAccount = parent ifTrue: [self error: self class canNotAddAccountErrorDescription]."
	
	(self isAlreadyAMember: aReceptiveAccount) ifTrue: [self error: self class canNotAddAccountErrorDescription].
	
	accounts add: aReceptiveAccount ! !

!testRun: #PortfolioTest #test01EmptyPortfolioHasBalanceZero stamp: 'fr 11/8/2020 08:20:27'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioWithASingleAccountWithNoTransactionsHasBalanceZero stamp: 'fr 11/8/2020 08:20:27'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioWithASingleAccountReflectsItsTransactionsValuesInItsBalance stamp: 'fr 11/8/2020 08:20:27'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithMultipleAccountsAndPortfoliosReflectsTheirTransactionsValuesInItsBalance stamp: 'fr 11/8/2020 08:20:27'!
PASSED!

!testRun: #PortfolioTest #test05EmptyPortfolioHasNotRegisteredAnyTransaction stamp: 'fr 11/8/2020 08:20:27'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioWithASingleAccountRegistersItsTransactions stamp: 'fr 11/8/2020 08:20:27'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioWithMulltipleAccountsAndPortfoliosRegistersAllTheirTransactions stamp: 'fr 11/8/2020 08:20:27'!
PASSED!

!testRun: #PortfolioTest #test08EmptyPortfolioDoesNotExhibitAnyTransaction stamp: 'fr 11/8/2020 08:20:27'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithASingleAccountExhibitsItsTransactions stamp: 'fr 11/8/2020 08:20:27'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioWithMultipleAccountsAndPortfoliosExhibitsAllTheirTransactionsCombined stamp: 'fr 11/8/2020 08:20:27'!
PASSED!

!testRun: #PortfolioTest #test11EmptyPortfolioDoesNotContainAnyAccount stamp: 'fr 11/8/2020 08:20:27'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioContainsAnAccountAfterItIsAdded stamp: 'fr 11/8/2020 08:20:27'!
ERROR!

!testRun: #PortfolioTest #test13PortfolioCanNotAddItself stamp: 'fr 11/8/2020 08:20:27'!
FAILURE!

!testRun: #PortfolioTest #test14PortfolioCanNotAddItsParent stamp: 'fr 11/8/2020 08:20:27'!
FAILURE!

!testRun: #PortfolioTest #test15PortfolioCanNotAddAnyAncestor stamp: 'fr 11/8/2020 08:20:27'!
FAILURE!

!testRun: #PortfolioTest #test16 stamp: 'fr 11/8/2020 08:20:27'!
FAILURE!

!testRun: #PortfolioTest #test16 stamp: 'fr 11/8/2020 08:20:32'!
FAILURE!
!Portfolio methodsFor: 'private - account lineage' stamp: 'fr 11/8/2020 08:20:57'!
isAlreadyAMember: aPortfolio 
	self shouldBeImplemented.! !
!Portfolio methodsFor: 'private - account lineage' stamp: 'fr 11/8/2020 08:23:08' prior: 50873905!
isAlreadyAMember: aPortfolio 
	
	(self ancestors) anySatisfy: [:aRootPortfolio | aRootPortfolio knows: aPortfolio]! !
!PortfolioTest methodsFor: 'tests' stamp: 'fr 11/8/2020 08:24:59'!
test14PortfolioCanNotAddItself

	| portfolio |
	portfolio _ Portfolio new.
	
	self  should: [portfolio add: portfolio] 
		raise: Error 
		withMessageText: Portfolio canNotAddAccountErrorDescription! !

!methodRemoval: PortfolioTest #test13PortfolioCanNotAddItself stamp: 'fr 11/8/2020 08:24:59'!
test13PortfolioCanNotAddItself

	| portfolio |
	portfolio _ Portfolio new.
	
	self  should: [portfolio add: portfolio] 
		raise: Error 
		withMessageText: Portfolio canNotAddAccountErrorDescription!
!PortfolioTest methodsFor: 'tests' stamp: 'fr 11/8/2020 08:25:04'!
test15PortfolioCanNotAddItsParent

	| portfolio anotherPortfolio |
	portfolio _ Portfolio new.
	anotherPortfolio _ Portfolio with: (OrderedCollection with: portfolio).
	
	self  should: [portfolio add: anotherPortfolio] 
		raise: Error 
		withMessageText: Portfolio canNotAddAccountErrorDescription! !

!methodRemoval: PortfolioTest #test14PortfolioCanNotAddItsParent stamp: 'fr 11/8/2020 08:25:04'!
test14PortfolioCanNotAddItsParent

	| portfolio anotherPortfolio |
	portfolio _ Portfolio new.
	anotherPortfolio _ Portfolio with: (OrderedCollection with: portfolio).
	
	self  should: [portfolio add: anotherPortfolio] 
		raise: Error 
		withMessageText: Portfolio canNotAddAccountErrorDescription!
!PortfolioTest methodsFor: 'tests' stamp: 'fr 11/8/2020 08:25:11'!
test16PortfolioCanNotAddAnyAncestor

	| leafPortfolio middlePortfolio rootPortfolio |
	leafPortfolio _ Portfolio new.
	middlePortfolio _ Portfolio with: (OrderedCollection with: leafPortfolio).
	rootPortfolio _ Portfolio with: (OrderedCollection with: middlePortfolio).
	
	self  should: [leafPortfolio add: rootPortfolio] 
		raise: Error 
		withMessageText: Portfolio canNotAddAccountErrorDescription! !

!methodRemoval: PortfolioTest #test15PortfolioCanNotAddAnyAncestor stamp: 'fr 11/8/2020 08:25:11'!
test15PortfolioCanNotAddAnyAncestor

	| leafPortfolio middlePortfolio rootPortfolio |
	leafPortfolio _ Portfolio new.
	middlePortfolio _ Portfolio with: (OrderedCollection with: leafPortfolio).
	rootPortfolio _ Portfolio with: (OrderedCollection with: middlePortfolio).
	
	self  should: [leafPortfolio add: rootPortfolio] 
		raise: Error 
		withMessageText: Portfolio canNotAddAccountErrorDescription!
!PortfolioTest methodsFor: 'tests' stamp: 'fr 11/8/2020 08:25:15'!
test17

	| leafPortfolio middlePortfolio rootPortfolio anotherLeafPortfolio |
	leafPortfolio _ Portfolio new.
	anotherLeafPortfolio _ Portfolio new.
	middlePortfolio _ Portfolio with: (OrderedCollection with: leafPortfolio).
	rootPortfolio _ Portfolio with: (OrderedCollection with: middlePortfolio with: anotherLeafPortfolio).
	
	self  should: [leafPortfolio add: anotherLeafPortfolio] 
		raise: Error 
		withMessageText: Portfolio canNotAddAccountErrorDescription! !

!methodRemoval: PortfolioTest #test16 stamp: 'fr 11/8/2020 08:25:15'!
test16

	| leafPortfolio middlePortfolio rootPortfolio anotherLeafPortfolio |
	leafPortfolio _ Portfolio new.
	anotherLeafPortfolio _ Portfolio new.
	middlePortfolio _ Portfolio with: (OrderedCollection with: leafPortfolio).
	rootPortfolio _ Portfolio with: (OrderedCollection with: middlePortfolio with: anotherLeafPortfolio).
	
	self  should: [leafPortfolio add: anotherLeafPortfolio] 
		raise: Error 
		withMessageText: Portfolio canNotAddAccountErrorDescription!
!PortfolioTest methodsFor: 'tests' stamp: 'fr 11/8/2020 08:26:51'!
test13PortfolioContainsAnAccountAfterItIsAddedToItselfOrAnyOfItsDecendents

	| portfolio account anotherPortfolio |
	account _ ReceptiveAccount new.
	portfolio _ Portfolio new.
	anotherPortfolio _ Portfolio with: (OrderedCollection with: portfolio).
	portfolio add: account.
	self assert: [anotherPortfolio contains: account]! !

!testRun: #PortfolioTest #test13PortfolioContainsAnAccountAfterItIsAddedToItselfOrAnyOfItsDecendents stamp: 'fr 11/8/2020 08:26:54'!
ERROR!
!PortfolioTest methodsFor: 'tests' stamp: 'fr 11/8/2020 08:27:16' prior: 50873958!
test16PortfolioCanNotAddAnyAncestor

	"| leafPortfolio middlePortfolio rootPortfolio |
	leafPortfolio _ Portfolio new.
	middlePortfolio _ Portfolio with: (OrderedCollection with: leafPortfolio).
	rootPortfolio _ Portfolio with: (OrderedCollection with: middlePortfolio).
	
	self  should: [leafPortfolio add: rootPortfolio] 
		raise: Error 
		withMessageText: Portfolio canNotAddAccountErrorDescription"! !
!PortfolioTest methodsFor: 'tests' stamp: 'fr 11/8/2020 08:27:28' prior: 50873934!
test15PortfolioCanNotAddItsParent

	"| portfolio anotherPortfolio |
	portfolio _ Portfolio new.
	anotherPortfolio _ Portfolio with: (OrderedCollection with: portfolio).
	
	self  should: [portfolio add: anotherPortfolio] 
		raise: Error 
		withMessageText: Portfolio canNotAddAccountErrorDescription"! !
!PortfolioTest methodsFor: 'tests' stamp: 'fr 11/8/2020 08:27:32' prior: 50873916!
test14PortfolioCanNotAddItself

	"| portfolio |
	portfolio _ Portfolio new.
	
	self  should: [portfolio add: portfolio] 
		raise: Error 
		withMessageText: Portfolio canNotAddAccountErrorDescription"! !

!testRun: #PortfolioTest #test13PortfolioContainsAnAccountAfterItIsAddedToItselfOrAnyOfItsDecendents stamp: 'fr 11/8/2020 08:27:36'!
ERROR!
!Portfolio methodsFor: 'accounts management' stamp: 'fr 11/8/2020 08:28:04' prior: 50873828!
add: aReceptiveAccount 
	
	"aReceptiveAccount = self ifTrue: [self error: self class canNotAddAccountErrorDescription].
	aReceptiveAccount = parent ifTrue: [self error: self class canNotAddAccountErrorDescription]."
	
	"(self isAlreadyAMember: aReceptiveAccount) ifTrue: [self error: self class canNotAddAccountErrorDescription]."
	
	accounts add: aReceptiveAccount ! !

!testRun: #PortfolioTest #test13PortfolioContainsAnAccountAfterItIsAddedToItselfOrAnyOfItsDecendents stamp: 'fr 11/8/2020 08:28:08'!
FAILURE!
!Portfolio methodsFor: 'accounts management' stamp: 'fr 11/8/2020 08:29:12' prior: 50872346!
contains: aReceptiveAccount 
	
	^(accounts includes: aReceptiveAccount) or: [accounts anySatisfy: [:anAccount | anAccount contains: aReceptiveAccount]]! !

!testRun: #PortfolioTest #test01EmptyPortfolioHasBalanceZero stamp: 'fr 11/8/2020 08:29:13'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioWithASingleAccountWithNoTransactionsHasBalanceZero stamp: 'fr 11/8/2020 08:29:13'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioWithASingleAccountReflectsItsTransactionsValuesInItsBalance stamp: 'fr 11/8/2020 08:29:13'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithMultipleAccountsAndPortfoliosReflectsTheirTransactionsValuesInItsBalance stamp: 'fr 11/8/2020 08:29:13'!
PASSED!

!testRun: #PortfolioTest #test05EmptyPortfolioHasNotRegisteredAnyTransaction stamp: 'fr 11/8/2020 08:29:13'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioWithASingleAccountRegistersItsTransactions stamp: 'fr 11/8/2020 08:29:13'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioWithMulltipleAccountsAndPortfoliosRegistersAllTheirTransactions stamp: 'fr 11/8/2020 08:29:13'!
PASSED!

!testRun: #PortfolioTest #test08EmptyPortfolioDoesNotExhibitAnyTransaction stamp: 'fr 11/8/2020 08:29:13'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithASingleAccountExhibitsItsTransactions stamp: 'fr 11/8/2020 08:29:13'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioWithMultipleAccountsAndPortfoliosExhibitsAllTheirTransactionsCombined stamp: 'fr 11/8/2020 08:29:13'!
PASSED!

!testRun: #PortfolioTest #test11EmptyPortfolioDoesNotContainAnyAccount stamp: 'fr 11/8/2020 08:29:13'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioContainsAnAccountAfterItIsAdded stamp: 'fr 11/8/2020 08:29:13'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioContainsAnAccountAfterItIsAddedToItselfOrAnyOfItsDecendents stamp: 'fr 11/8/2020 08:29:13'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioCanNotAddItself stamp: 'fr 11/8/2020 08:29:13'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotAddItsParent stamp: 'fr 11/8/2020 08:29:13'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioCanNotAddAnyAncestor stamp: 'fr 11/8/2020 08:29:13'!
PASSED!

!testRun: #PortfolioTest #test17 stamp: 'fr 11/8/2020 08:29:13'!
FAILURE!

!testRun: #PortfolioTest #test17 stamp: 'fr 11/8/2020 08:29:13'!
FAILURE!

!testRun: #PortfolioTest #test17 stamp: 'fr 11/8/2020 08:29:17'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioContainsAnAccountAfterItIsAddedToItselfOrAnyOfItsDecendents stamp: 'fr 11/8/2020 08:29:18'!
PASSED!

!testRun: #PortfolioTest #test01EmptyPortfolioHasBalanceZero stamp: 'fr 11/8/2020 08:29:18'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioWithASingleAccountWithNoTransactionsHasBalanceZero stamp: 'fr 11/8/2020 08:29:18'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioWithASingleAccountReflectsItsTransactionsValuesInItsBalance stamp: 'fr 11/8/2020 08:29:18'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithMultipleAccountsAndPortfoliosReflectsTheirTransactionsValuesInItsBalance stamp: 'fr 11/8/2020 08:29:18'!
PASSED!

!testRun: #PortfolioTest #test05EmptyPortfolioHasNotRegisteredAnyTransaction stamp: 'fr 11/8/2020 08:29:18'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioWithASingleAccountRegistersItsTransactions stamp: 'fr 11/8/2020 08:29:18'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioWithMulltipleAccountsAndPortfoliosRegistersAllTheirTransactions stamp: 'fr 11/8/2020 08:29:18'!
PASSED!

!testRun: #PortfolioTest #test08EmptyPortfolioDoesNotExhibitAnyTransaction stamp: 'fr 11/8/2020 08:29:18'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithASingleAccountExhibitsItsTransactions stamp: 'fr 11/8/2020 08:29:18'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioWithMultipleAccountsAndPortfoliosExhibitsAllTheirTransactionsCombined stamp: 'fr 11/8/2020 08:29:18'!
PASSED!

!testRun: #PortfolioTest #test11EmptyPortfolioDoesNotContainAnyAccount stamp: 'fr 11/8/2020 08:29:18'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioContainsAnAccountAfterItIsAdded stamp: 'fr 11/8/2020 08:29:18'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioContainsAnAccountAfterItIsAddedToItselfOrAnyOfItsDecendents stamp: 'fr 11/8/2020 08:29:18'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioCanNotAddItself stamp: 'fr 11/8/2020 08:29:18'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotAddItsParent stamp: 'fr 11/8/2020 08:29:18'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioCanNotAddAnyAncestor stamp: 'fr 11/8/2020 08:29:18'!
PASSED!

!testRun: #PortfolioTest #test17 stamp: 'fr 11/8/2020 08:29:18'!
FAILURE!

!testRun: #PortfolioTest #test17 stamp: 'fr 11/8/2020 08:29:18'!
FAILURE!
!PortfolioTest methodsFor: 'tests' stamp: 'fr 11/8/2020 08:29:26' prior: 50873989!
test17

	"| leafPortfolio middlePortfolio rootPortfolio anotherLeafPortfolio |
	leafPortfolio _ Portfolio new.
	anotherLeafPortfolio _ Portfolio new.
	middlePortfolio _ Portfolio with: (OrderedCollection with: leafPortfolio).
	rootPortfolio _ Portfolio with: (OrderedCollection with: middlePortfolio with: anotherLeafPortfolio).
	
	self  should: [leafPortfolio add: anotherLeafPortfolio] 
		raise: Error 
		withMessageText: Portfolio canNotAddAccountErrorDescription"! !
!PortfolioTest methodsFor: 'tests' stamp: 'fr 11/8/2020 08:30:48' prior: 50874023!
test13PortfolioContainsAnAccountAfterItIsAddedToItselfOrAnyOfItsDecendents

	| portfolio account anotherPortfolio anotherAccount |
	account _ ReceptiveAccount new.
	anotherAccount _ ReceptiveAccount new.
	portfolio _ Portfolio new..
	anotherPortfolio _ Portfolio with: (OrderedCollection with: portfolio with: anotherAccount).
	portfolio add: account.
	self assert: [anotherPortfolio contains: account]! !

!testRun: #PortfolioTest #test13PortfolioContainsAnAccountAfterItIsAddedToItselfOrAnyOfItsDecendents stamp: 'fr 11/8/2020 08:30:50'!
PASSED!

!testRun: #PortfolioTest #test01EmptyPortfolioHasBalanceZero stamp: 'fr 11/8/2020 08:30:50'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioWithASingleAccountWithNoTransactionsHasBalanceZero stamp: 'fr 11/8/2020 08:30:50'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioWithASingleAccountReflectsItsTransactionsValuesInItsBalance stamp: 'fr 11/8/2020 08:30:50'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithMultipleAccountsAndPortfoliosReflectsTheirTransactionsValuesInItsBalance stamp: 'fr 11/8/2020 08:30:50'!
PASSED!

!testRun: #PortfolioTest #test05EmptyPortfolioHasNotRegisteredAnyTransaction stamp: 'fr 11/8/2020 08:30:50'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioWithASingleAccountRegistersItsTransactions stamp: 'fr 11/8/2020 08:30:50'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioWithMulltipleAccountsAndPortfoliosRegistersAllTheirTransactions stamp: 'fr 11/8/2020 08:30:50'!
PASSED!

!testRun: #PortfolioTest #test08EmptyPortfolioDoesNotExhibitAnyTransaction stamp: 'fr 11/8/2020 08:30:50'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithASingleAccountExhibitsItsTransactions stamp: 'fr 11/8/2020 08:30:50'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioWithMultipleAccountsAndPortfoliosExhibitsAllTheirTransactionsCombined stamp: 'fr 11/8/2020 08:30:50'!
PASSED!

!testRun: #PortfolioTest #test11EmptyPortfolioDoesNotContainAnyAccount stamp: 'fr 11/8/2020 08:30:50'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioContainsAnAccountAfterItIsAdded stamp: 'fr 11/8/2020 08:30:50'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioContainsAnAccountAfterItIsAddedToItselfOrAnyOfItsDecendents stamp: 'fr 11/8/2020 08:30:50'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioCanNotAddItself stamp: 'fr 11/8/2020 08:30:50'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotAddItsParent stamp: 'fr 11/8/2020 08:30:50'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioCanNotAddAnyAncestor stamp: 'fr 11/8/2020 08:30:50'!
PASSED!

!testRun: #PortfolioTest #test17 stamp: 'fr 11/8/2020 08:30:50'!
PASSED!
!PortfolioTest methodsFor: 'tests' stamp: 'fr 11/8/2020 08:31:07' prior: 50874269!
test13PortfolioContainsAnAccountAfterItIsAddedToItselfOrAnyOfItsDecendents

	| portfolio account anotherPortfolio |
	account _ ReceptiveAccount new.
	portfolio _ Portfolio new.
	anotherPortfolio _ Portfolio with: (OrderedCollection with: portfolio).
	portfolio add: account.
	self assert: [anotherPortfolio contains: account]! !
!PortfolioTest methodsFor: 'tests' stamp: 'fr 11/8/2020 08:32:01' prior: 50874354!
test13PortfolioContainsAnAccountAfterItIsAddedToItselfOrAnyOfItsDecendents

	| portfolio account anotherPortfolio anotherAccount |
	account _ ReceptiveAccount new.
	anotherAccount _ ReceptiveAccount new.
	portfolio _ Portfolio new.
	anotherPortfolio _ Portfolio with: (OrderedCollection with: anotherAccount with: portfolio).
	portfolio add: account.
	self assert: [anotherPortfolio contains: account]! !

!testRun: #PortfolioTest #test13PortfolioContainsAnAccountAfterItIsAddedToItselfOrAnyOfItsDecendents stamp: 'fr 11/8/2020 08:32:03'!
ERROR!
!ReceptiveAccount methodsFor: 'private' stamp: 'fr 11/8/2020 08:32:18'!
contains: aReceptiveAccount 
	self shouldBeImplemented.! !
!ReceptiveAccount methodsFor: 'private' stamp: 'fr 11/8/2020 08:32:25' prior: 50874387!
contains: aReceptiveAccount 
	
	^false! !

!testRun: #PortfolioTest #test13PortfolioContainsAnAccountAfterItIsAddedToItselfOrAnyOfItsDecendents stamp: 'fr 11/8/2020 08:32:26'!
PASSED!

!testRun: #PortfolioTest #test01EmptyPortfolioHasBalanceZero stamp: 'fr 11/8/2020 08:32:26'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioWithASingleAccountWithNoTransactionsHasBalanceZero stamp: 'fr 11/8/2020 08:32:26'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioWithASingleAccountReflectsItsTransactionsValuesInItsBalance stamp: 'fr 11/8/2020 08:32:26'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithMultipleAccountsAndPortfoliosReflectsTheirTransactionsValuesInItsBalance stamp: 'fr 11/8/2020 08:32:26'!
PASSED!

!testRun: #PortfolioTest #test05EmptyPortfolioHasNotRegisteredAnyTransaction stamp: 'fr 11/8/2020 08:32:26'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioWithASingleAccountRegistersItsTransactions stamp: 'fr 11/8/2020 08:32:26'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioWithMulltipleAccountsAndPortfoliosRegistersAllTheirTransactions stamp: 'fr 11/8/2020 08:32:26'!
PASSED!

!testRun: #PortfolioTest #test08EmptyPortfolioDoesNotExhibitAnyTransaction stamp: 'fr 11/8/2020 08:32:26'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithASingleAccountExhibitsItsTransactions stamp: 'fr 11/8/2020 08:32:26'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioWithMultipleAccountsAndPortfoliosExhibitsAllTheirTransactionsCombined stamp: 'fr 11/8/2020 08:32:26'!
PASSED!

!testRun: #PortfolioTest #test11EmptyPortfolioDoesNotContainAnyAccount stamp: 'fr 11/8/2020 08:32:26'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioContainsAnAccountAfterItIsAdded stamp: 'fr 11/8/2020 08:32:26'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioContainsAnAccountAfterItIsAddedToItselfOrAnyOfItsDecendents stamp: 'fr 11/8/2020 08:32:26'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioCanNotAddItself stamp: 'fr 11/8/2020 08:32:26'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotAddItsParent stamp: 'fr 11/8/2020 08:32:26'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioCanNotAddAnyAncestor stamp: 'fr 11/8/2020 08:32:26'!
PASSED!

!testRun: #PortfolioTest #test17 stamp: 'fr 11/8/2020 08:32:26'!
PASSED!

!methodRemoval: ReceptiveAccount #contains: stamp: 'fr 11/8/2020 08:33:18'!
contains: aReceptiveAccount 
	
	^false!
!PortfolioTest methodsFor: 'tests' stamp: 'fr 11/8/2020 08:31:07' prior: 50874367!
test13PortfolioContainsAnAccountAfterItIsAddedToItselfOrAnyOfItsDecendents

	| portfolio account anotherPortfolio |
	account _ ReceptiveAccount new.
	portfolio _ Portfolio new.
	anotherPortfolio _ Portfolio with: (OrderedCollection with: portfolio).
	portfolio add: account.
	self assert: [anotherPortfolio contains: account]! !

!testRun: #PortfolioTest #test13PortfolioContainsAnAccountAfterItIsAddedToItselfOrAnyOfItsDecendents stamp: 'fr 11/8/2020 08:33:33'!
PASSED!

!testRun: #PortfolioTest #test01EmptyPortfolioHasBalanceZero stamp: 'fr 11/8/2020 08:33:33'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioWithASingleAccountWithNoTransactionsHasBalanceZero stamp: 'fr 11/8/2020 08:33:33'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioWithASingleAccountReflectsItsTransactionsValuesInItsBalance stamp: 'fr 11/8/2020 08:33:33'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithMultipleAccountsAndPortfoliosReflectsTheirTransactionsValuesInItsBalance stamp: 'fr 11/8/2020 08:33:33'!
PASSED!

!testRun: #PortfolioTest #test05EmptyPortfolioHasNotRegisteredAnyTransaction stamp: 'fr 11/8/2020 08:33:33'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioWithASingleAccountRegistersItsTransactions stamp: 'fr 11/8/2020 08:33:33'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioWithMulltipleAccountsAndPortfoliosRegistersAllTheirTransactions stamp: 'fr 11/8/2020 08:33:33'!
PASSED!

!testRun: #PortfolioTest #test08EmptyPortfolioDoesNotExhibitAnyTransaction stamp: 'fr 11/8/2020 08:33:33'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithASingleAccountExhibitsItsTransactions stamp: 'fr 11/8/2020 08:33:33'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioWithMultipleAccountsAndPortfoliosExhibitsAllTheirTransactionsCombined stamp: 'fr 11/8/2020 08:33:33'!
PASSED!

!testRun: #PortfolioTest #test11EmptyPortfolioDoesNotContainAnyAccount stamp: 'fr 11/8/2020 08:33:33'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioContainsAnAccountAfterItIsAdded stamp: 'fr 11/8/2020 08:33:33'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioContainsAnAccountAfterItIsAddedToItselfOrAnyOfItsDecendents stamp: 'fr 11/8/2020 08:33:33'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioCanNotAddItself stamp: 'fr 11/8/2020 08:33:33'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotAddItsParent stamp: 'fr 11/8/2020 08:33:33'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioCanNotAddAnyAncestor stamp: 'fr 11/8/2020 08:33:33'!
PASSED!

!testRun: #PortfolioTest #test17 stamp: 'fr 11/8/2020 08:33:33'!
PASSED!
!PortfolioTest methodsFor: 'tests' stamp: 'fr 11/8/2020 08:33:42'!
test14

	| portfolio account anotherPortfolio |
	account _ ReceptiveAccount new.
	portfolio _ Portfolio new.
	anotherPortfolio _ Portfolio with: (OrderedCollection with: portfolio).
	portfolio add: account.
	self assert: [anotherPortfolio contains: account]! !
!PortfolioTest methodsFor: 'tests' stamp: 'fr 11/8/2020 08:34:25' prior: 50874551!
test14

	| portfolio account anotherPortfolio anotherAccount |
	account _ ReceptiveAccount new.
	anotherAccount _ ReceptiveAccount new.
	portfolio _ Portfolio new.
	portfolio add: account.
	self assert: [anotherPortfolio contains: account]! !
!PortfolioTest methodsFor: 'tests' stamp: 'fr 11/8/2020 08:34:44' prior: 50874562!
test14

	| portfolio account anotherAccount |
	account _ ReceptiveAccount new.
	anotherAccount _ ReceptiveAccount new.
	portfolio _ Portfolio new.
	portfolio add: account.
	self assert: [(portfolio contains: anotherAccount) not]! !

!testRun: #PortfolioTest #test14 stamp: 'fr 11/8/2020 08:34:46'!
ERROR!
!ReceptiveAccount methodsFor: 'private' stamp: 'fr 11/8/2020 08:34:54'!
contains: aReceptiveAccount 
	self shouldBeImplemented.! !
!ReceptiveAccount methodsFor: 'private' stamp: 'fr 11/8/2020 08:35:05' prior: 50874585!
contains: aReceptiveAccount 
	
	^false! !

!testRun: #PortfolioTest #test14 stamp: 'fr 11/8/2020 08:35:07'!
PASSED!

!testRun: #PortfolioTest #test01EmptyPortfolioHasBalanceZero stamp: 'fr 11/8/2020 08:35:07'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioWithASingleAccountWithNoTransactionsHasBalanceZero stamp: 'fr 11/8/2020 08:35:07'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioWithASingleAccountReflectsItsTransactionsValuesInItsBalance stamp: 'fr 11/8/2020 08:35:07'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithMultipleAccountsAndPortfoliosReflectsTheirTransactionsValuesInItsBalance stamp: 'fr 11/8/2020 08:35:07'!
PASSED!

!testRun: #PortfolioTest #test05EmptyPortfolioHasNotRegisteredAnyTransaction stamp: 'fr 11/8/2020 08:35:07'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioWithASingleAccountRegistersItsTransactions stamp: 'fr 11/8/2020 08:35:07'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioWithMulltipleAccountsAndPortfoliosRegistersAllTheirTransactions stamp: 'fr 11/8/2020 08:35:07'!
PASSED!

!testRun: #PortfolioTest #test08EmptyPortfolioDoesNotExhibitAnyTransaction stamp: 'fr 11/8/2020 08:35:07'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithASingleAccountExhibitsItsTransactions stamp: 'fr 11/8/2020 08:35:07'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioWithMultipleAccountsAndPortfoliosExhibitsAllTheirTransactionsCombined stamp: 'fr 11/8/2020 08:35:07'!
PASSED!

!testRun: #PortfolioTest #test11EmptyPortfolioDoesNotContainAnyAccount stamp: 'fr 11/8/2020 08:35:07'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioContainsAnAccountAfterItIsAdded stamp: 'fr 11/8/2020 08:35:07'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioContainsAnAccountAfterItIsAddedToItselfOrAnyOfItsDecendents stamp: 'fr 11/8/2020 08:35:07'!
PASSED!

!testRun: #PortfolioTest #test14 stamp: 'fr 11/8/2020 08:35:07'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioCanNotAddItself stamp: 'fr 11/8/2020 08:35:07'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotAddItsParent stamp: 'fr 11/8/2020 08:35:07'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioCanNotAddAnyAncestor stamp: 'fr 11/8/2020 08:35:07'!
PASSED!

!testRun: #PortfolioTest #test17 stamp: 'fr 11/8/2020 08:35:07'!
PASSED!
!PortfolioTest methodsFor: 'tests' stamp: 'fr 11/8/2020 08:35:36'!
test14PortfolioDoesNotContainAnythingThatWasNotAddedToItself

	| portfolio account anotherAccount |
	account _ ReceptiveAccount new.
	anotherAccount _ ReceptiveAccount new.
	portfolio _ Portfolio new.
	portfolio add: account.
	self assert: [(portfolio contains: anotherAccount) not]! !

!methodRemoval: PortfolioTest #test14 stamp: 'fr 11/8/2020 08:35:40'!
test14

	| portfolio account anotherAccount |
	account _ ReceptiveAccount new.
	anotherAccount _ ReceptiveAccount new.
	portfolio _ Portfolio new.
	portfolio add: account.
	self assert: [(portfolio contains: anotherAccount) not]!
!PortfolioTest methodsFor: 'tests' stamp: 'fr 11/8/2020 08:35:46'!
test15PortfolioCanNotAddItself

	"| portfolio |
	portfolio _ Portfolio new.
	
	self  should: [portfolio add: portfolio] 
		raise: Error 
		withMessageText: Portfolio canNotAddAccountErrorDescription"! !

!methodRemoval: PortfolioTest #test14PortfolioCanNotAddItself stamp: 'fr 11/8/2020 08:35:46'!
test14PortfolioCanNotAddItself

	"| portfolio |
	portfolio _ Portfolio new.
	
	self  should: [portfolio add: portfolio] 
		raise: Error 
		withMessageText: Portfolio canNotAddAccountErrorDescription"!
!PortfolioTest methodsFor: 'tests' stamp: 'fr 11/8/2020 08:35:54'!
test16PortfolioCanNotAddItsParent

	"| portfolio anotherPortfolio |
	portfolio _ Portfolio new.
	anotherPortfolio _ Portfolio with: (OrderedCollection with: portfolio).
	
	self  should: [portfolio add: anotherPortfolio] 
		raise: Error 
		withMessageText: Portfolio canNotAddAccountErrorDescription"! !

!methodRemoval: PortfolioTest #test15PortfolioCanNotAddItsParent stamp: 'fr 11/8/2020 08:35:54'!
test15PortfolioCanNotAddItsParent

	"| portfolio anotherPortfolio |
	portfolio _ Portfolio new.
	anotherPortfolio _ Portfolio with: (OrderedCollection with: portfolio).
	
	self  should: [portfolio add: anotherPortfolio] 
		raise: Error 
		withMessageText: Portfolio canNotAddAccountErrorDescription"!
!PortfolioTest methodsFor: 'tests' stamp: 'fr 11/8/2020 08:36:02'!
test17PortfolioCanNotAddAnyAncestor

	"| leafPortfolio middlePortfolio rootPortfolio |
	leafPortfolio _ Portfolio new.
	middlePortfolio _ Portfolio with: (OrderedCollection with: leafPortfolio).
	rootPortfolio _ Portfolio with: (OrderedCollection with: middlePortfolio).
	
	self  should: [leafPortfolio add: rootPortfolio] 
		raise: Error 
		withMessageText: Portfolio canNotAddAccountErrorDescription"! !

!methodRemoval: PortfolioTest #test16PortfolioCanNotAddAnyAncestor stamp: 'fr 11/8/2020 08:36:02'!
test16PortfolioCanNotAddAnyAncestor

	"| leafPortfolio middlePortfolio rootPortfolio |
	leafPortfolio _ Portfolio new.
	middlePortfolio _ Portfolio with: (OrderedCollection with: leafPortfolio).
	rootPortfolio _ Portfolio with: (OrderedCollection with: middlePortfolio).
	
	self  should: [leafPortfolio add: rootPortfolio] 
		raise: Error 
		withMessageText: Portfolio canNotAddAccountErrorDescription"!
!PortfolioTest methodsFor: 'tests' stamp: 'fr 11/8/2020 08:36:06'!
test18

	"| leafPortfolio middlePortfolio rootPortfolio anotherLeafPortfolio |
	leafPortfolio _ Portfolio new.
	anotherLeafPortfolio _ Portfolio new.
	middlePortfolio _ Portfolio with: (OrderedCollection with: leafPortfolio).
	rootPortfolio _ Portfolio with: (OrderedCollection with: middlePortfolio with: anotherLeafPortfolio).
	
	self  should: [leafPortfolio add: anotherLeafPortfolio] 
		raise: Error 
		withMessageText: Portfolio canNotAddAccountErrorDescription"! !

!methodRemoval: PortfolioTest #test17 stamp: 'fr 11/8/2020 08:36:06'!
test17

	"| leafPortfolio middlePortfolio rootPortfolio anotherLeafPortfolio |
	leafPortfolio _ Portfolio new.
	anotherLeafPortfolio _ Portfolio new.
	middlePortfolio _ Portfolio with: (OrderedCollection with: leafPortfolio).
	rootPortfolio _ Portfolio with: (OrderedCollection with: middlePortfolio with: anotherLeafPortfolio).
	
	self  should: [leafPortfolio add: anotherLeafPortfolio] 
		raise: Error 
		withMessageText: Portfolio canNotAddAccountErrorDescription"!

----SNAPSHOT----(8 November 2020 08:36:10) CuisUniversity-4384.image priorSource: 17321393!
!PortfolioTest methodsFor: 'tests' stamp: 'fr 11/8/2020 08:36:24' prior: 50874684!
test15PortfolioCanNotAddItself

	| portfolio |
	portfolio _ Portfolio new.
	
	self  should: [portfolio add: portfolio] 
		raise: Error 
		withMessageText: Portfolio canNotAddAccountErrorDescription! !

!testRun: #PortfolioTest #test15PortfolioCanNotAddItself stamp: 'fr 11/8/2020 08:36:25'!
FAILURE!
!Portfolio methodsFor: 'accounts management' stamp: 'fr 11/8/2020 08:36:41' prior: 50874084!
add: aReceptiveAccount 
	
	aReceptiveAccount = self ifTrue: [self error: self class canNotAddAccountErrorDescription].
	"aReceptiveAccount = parent ifTrue: [self error: self class canNotAddAccountErrorDescription]."
	
	"(self isAlreadyAMember: aReceptiveAccount) ifTrue: [self error: self class canNotAddAccountErrorDescription]."
	
	accounts add: aReceptiveAccount ! !

!testRun: #PortfolioTest #test15PortfolioCanNotAddItself stamp: 'fr 11/8/2020 08:36:43'!
PASSED!

!testRun: #PortfolioTest #test01EmptyPortfolioHasBalanceZero stamp: 'fr 11/8/2020 08:36:43'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioWithASingleAccountWithNoTransactionsHasBalanceZero stamp: 'fr 11/8/2020 08:36:43'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioWithASingleAccountReflectsItsTransactionsValuesInItsBalance stamp: 'fr 11/8/2020 08:36:43'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithMultipleAccountsAndPortfoliosReflectsTheirTransactionsValuesInItsBalance stamp: 'fr 11/8/2020 08:36:43'!
PASSED!

!testRun: #PortfolioTest #test05EmptyPortfolioHasNotRegisteredAnyTransaction stamp: 'fr 11/8/2020 08:36:43'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioWithASingleAccountRegistersItsTransactions stamp: 'fr 11/8/2020 08:36:43'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioWithMulltipleAccountsAndPortfoliosRegistersAllTheirTransactions stamp: 'fr 11/8/2020 08:36:43'!
PASSED!

!testRun: #PortfolioTest #test08EmptyPortfolioDoesNotExhibitAnyTransaction stamp: 'fr 11/8/2020 08:36:43'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithASingleAccountExhibitsItsTransactions stamp: 'fr 11/8/2020 08:36:43'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioWithMultipleAccountsAndPortfoliosExhibitsAllTheirTransactionsCombined stamp: 'fr 11/8/2020 08:36:43'!
PASSED!

!testRun: #PortfolioTest #test11EmptyPortfolioDoesNotContainAnyAccount stamp: 'fr 11/8/2020 08:36:43'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioContainsAnAccountAfterItIsAdded stamp: 'fr 11/8/2020 08:36:43'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioContainsAnAccountAfterItIsAddedToItselfOrAnyOfItsDecendents stamp: 'fr 11/8/2020 08:36:43'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioDoesNotContainAnythingThatWasNotAddedToItself stamp: 'fr 11/8/2020 08:36:43'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotAddItself stamp: 'fr 11/8/2020 08:36:43'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioCanNotAddItsParent stamp: 'fr 11/8/2020 08:36:43'!
PASSED!

!testRun: #PortfolioTest #test17PortfolioCanNotAddAnyAncestor stamp: 'fr 11/8/2020 08:36:43'!
PASSED!

!testRun: #PortfolioTest #test18 stamp: 'fr 11/8/2020 08:36:43'!
PASSED!
!PortfolioTest methodsFor: 'tests' stamp: 'fr 11/8/2020 08:36:52' prior: 50874702!
test16PortfolioCanNotAddItsParent

	| portfolio anotherPortfolio |
	portfolio _ Portfolio new.
	anotherPortfolio _ Portfolio with: (OrderedCollection with: portfolio).
	
	self  should: [portfolio add: anotherPortfolio] 
		raise: Error 
		withMessageText: Portfolio canNotAddAccountErrorDescription! !

!testRun: #PortfolioTest #test16PortfolioCanNotAddItsParent stamp: 'fr 11/8/2020 08:36:55'!
FAILURE!
!Portfolio methodsFor: 'accounts management' stamp: 'fr 11/8/2020 08:37:16' prior: 50874809!
add: aReceptiveAccount 
	
	aReceptiveAccount = self ifTrue: [self error: self class canNotAddAccountErrorDescription].
	aReceptiveAccount = parent ifTrue: [self error: self class canNotAddAccountErrorDescription].
	
	"(self isAlreadyAMember: aReceptiveAccount) ifTrue: [self error: self class canNotAddAccountErrorDescription]."
	
	accounts add: aReceptiveAccount ! !

!testRun: #PortfolioTest #test16PortfolioCanNotAddItsParent stamp: 'fr 11/8/2020 08:37:17'!
PASSED!

!testRun: #PortfolioTest #test01EmptyPortfolioHasBalanceZero stamp: 'fr 11/8/2020 08:37:17'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioWithASingleAccountWithNoTransactionsHasBalanceZero stamp: 'fr 11/8/2020 08:37:17'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioWithASingleAccountReflectsItsTransactionsValuesInItsBalance stamp: 'fr 11/8/2020 08:37:17'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithMultipleAccountsAndPortfoliosReflectsTheirTransactionsValuesInItsBalance stamp: 'fr 11/8/2020 08:37:17'!
PASSED!

!testRun: #PortfolioTest #test05EmptyPortfolioHasNotRegisteredAnyTransaction stamp: 'fr 11/8/2020 08:37:17'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioWithASingleAccountRegistersItsTransactions stamp: 'fr 11/8/2020 08:37:17'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioWithMulltipleAccountsAndPortfoliosRegistersAllTheirTransactions stamp: 'fr 11/8/2020 08:37:17'!
PASSED!

!testRun: #PortfolioTest #test08EmptyPortfolioDoesNotExhibitAnyTransaction stamp: 'fr 11/8/2020 08:37:17'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithASingleAccountExhibitsItsTransactions stamp: 'fr 11/8/2020 08:37:17'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioWithMultipleAccountsAndPortfoliosExhibitsAllTheirTransactionsCombined stamp: 'fr 11/8/2020 08:37:17'!
PASSED!

!testRun: #PortfolioTest #test11EmptyPortfolioDoesNotContainAnyAccount stamp: 'fr 11/8/2020 08:37:17'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioContainsAnAccountAfterItIsAdded stamp: 'fr 11/8/2020 08:37:17'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioContainsAnAccountAfterItIsAddedToItselfOrAnyOfItsDecendents stamp: 'fr 11/8/2020 08:37:17'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioDoesNotContainAnythingThatWasNotAddedToItself stamp: 'fr 11/8/2020 08:37:17'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotAddItself stamp: 'fr 11/8/2020 08:37:17'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioCanNotAddItsParent stamp: 'fr 11/8/2020 08:37:17'!
PASSED!

!testRun: #PortfolioTest #test17PortfolioCanNotAddAnyAncestor stamp: 'fr 11/8/2020 08:37:17'!
PASSED!

!testRun: #PortfolioTest #test18 stamp: 'fr 11/8/2020 08:37:17'!
PASSED!
!PortfolioTest methodsFor: 'tests' stamp: 'fr 11/8/2020 08:37:25' prior: 50874727!
test17PortfolioCanNotAddAnyAncestor

	| leafPortfolio middlePortfolio rootPortfolio |
	leafPortfolio _ Portfolio new.
	middlePortfolio _ Portfolio with: (OrderedCollection with: leafPortfolio).
	rootPortfolio _ Portfolio with: (OrderedCollection with: middlePortfolio).
	
	self  should: [leafPortfolio add: rootPortfolio] 
		raise: Error 
		withMessageText: Portfolio canNotAddAccountErrorDescription! !

!testRun: #PortfolioTest #test17PortfolioCanNotAddAnyAncestor stamp: 'fr 11/8/2020 08:37:27'!
FAILURE!
!Portfolio methodsFor: 'accounts management' stamp: 'fr 11/8/2020 08:19:40' prior: 50874911!
add: aReceptiveAccount 
	
	"aReceptiveAccount = self ifTrue: [self error: self class canNotAddAccountErrorDescription].
	aReceptiveAccount = parent ifTrue: [self error: self class canNotAddAccountErrorDescription]."
	
	(self ancestors includes: aReceptiveAccount) ifTrue: [self error: self class canNotAddAccountErrorDescription].
	
	accounts add: aReceptiveAccount ! !

!testRun: #PortfolioTest #test17PortfolioCanNotAddAnyAncestor stamp: 'fr 11/8/2020 08:37:56'!
FAILURE!

self ancestors!

self ancestors includes: aReceptiveAccount!

!testRun: #PortfolioTest #test17PortfolioCanNotAddAnyAncestor stamp: 'fr 11/8/2020 08:39:06'!
PASSED!

!testRun: #PortfolioTest #test01EmptyPortfolioHasBalanceZero stamp: 'fr 11/8/2020 08:39:06'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioWithASingleAccountWithNoTransactionsHasBalanceZero stamp: 'fr 11/8/2020 08:39:06'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioWithASingleAccountReflectsItsTransactionsValuesInItsBalance stamp: 'fr 11/8/2020 08:39:06'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithMultipleAccountsAndPortfoliosReflectsTheirTransactionsValuesInItsBalance stamp: 'fr 11/8/2020 08:39:06'!
PASSED!

!testRun: #PortfolioTest #test05EmptyPortfolioHasNotRegisteredAnyTransaction stamp: 'fr 11/8/2020 08:39:06'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioWithASingleAccountRegistersItsTransactions stamp: 'fr 11/8/2020 08:39:06'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioWithMulltipleAccountsAndPortfoliosRegistersAllTheirTransactions stamp: 'fr 11/8/2020 08:39:06'!
PASSED!

!testRun: #PortfolioTest #test08EmptyPortfolioDoesNotExhibitAnyTransaction stamp: 'fr 11/8/2020 08:39:06'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithASingleAccountExhibitsItsTransactions stamp: 'fr 11/8/2020 08:39:06'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioWithMultipleAccountsAndPortfoliosExhibitsAllTheirTransactionsCombined stamp: 'fr 11/8/2020 08:39:06'!
PASSED!

!testRun: #PortfolioTest #test11EmptyPortfolioDoesNotContainAnyAccount stamp: 'fr 11/8/2020 08:39:06'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioContainsAnAccountAfterItIsAdded stamp: 'fr 11/8/2020 08:39:06'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioContainsAnAccountAfterItIsAddedToItselfOrAnyOfItsDecendents stamp: 'fr 11/8/2020 08:39:06'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioDoesNotContainAnythingThatWasNotAddedToItself stamp: 'fr 11/8/2020 08:39:06'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotAddItself stamp: 'fr 11/8/2020 08:39:06'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioCanNotAddItsParent stamp: 'fr 11/8/2020 08:39:06'!
PASSED!

!testRun: #PortfolioTest #test17PortfolioCanNotAddAnyAncestor stamp: 'fr 11/8/2020 08:39:06'!
PASSED!

!testRun: #PortfolioTest #test18 stamp: 'fr 11/8/2020 08:39:06'!
PASSED!
!PortfolioTest methodsFor: 'tests' stamp: 'fr 11/8/2020 08:39:14' prior: 50874758!
test18

	| leafPortfolio middlePortfolio rootPortfolio anotherLeafPortfolio |
	leafPortfolio _ Portfolio new.
	anotherLeafPortfolio _ Portfolio new.
	middlePortfolio _ Portfolio with: (OrderedCollection with: leafPortfolio).
	rootPortfolio _ Portfolio with: (OrderedCollection with: middlePortfolio with: anotherLeafPortfolio).
	
	self  should: [leafPortfolio add: anotherLeafPortfolio] 
		raise: Error 
		withMessageText: Portfolio canNotAddAccountErrorDescription! !
!PortfolioTest methodsFor: 'tests' stamp: 'fr 11/8/2020 08:40:15'!
test18CanNotAddAnyPreviousMemberOfTheTree

	| leafPortfolio middlePortfolio rootPortfolio anotherLeafPortfolio |
	leafPortfolio _ Portfolio new.
	anotherLeafPortfolio _ Portfolio new.
	middlePortfolio _ Portfolio with: (OrderedCollection with: leafPortfolio).
	rootPortfolio _ Portfolio with: (OrderedCollection with: middlePortfolio with: anotherLeafPortfolio).
	
	self  should: [leafPortfolio add: anotherLeafPortfolio] 
		raise: Error 
		withMessageText: Portfolio canNotAddAccountErrorDescription! !

!methodRemoval: PortfolioTest #test18 stamp: 'fr 11/8/2020 08:40:25'!
test18

	| leafPortfolio middlePortfolio rootPortfolio anotherLeafPortfolio |
	leafPortfolio _ Portfolio new.
	anotherLeafPortfolio _ Portfolio new.
	middlePortfolio _ Portfolio with: (OrderedCollection with: leafPortfolio).
	rootPortfolio _ Portfolio with: (OrderedCollection with: middlePortfolio with: anotherLeafPortfolio).
	
	self  should: [leafPortfolio add: anotherLeafPortfolio] 
		raise: Error 
		withMessageText: Portfolio canNotAddAccountErrorDescription!

!testRun: #PortfolioTest #test18CanNotAddAnyPreviousMemberOfTheTree stamp: 'fr 11/8/2020 08:40:27'!
FAILURE!
!Portfolio methodsFor: 'accounts management' stamp: 'fr 11/8/2020 08:41:04' prior: 50875016!
add: aReceptiveAccount 
	
	"aReceptiveAccount = self ifTrue: [self error: self class canNotAddAccountErrorDescription].
	aReceptiveAccount = parent ifTrue: [self error: self class canNotAddAccountErrorDescription]."
	
	(self isAlreadyAMember: aReceptiveAccount) ifTrue: [self error: self class canNotAddAccountErrorDescription].
	
	accounts add: aReceptiveAccount ! !

!testRun: #PortfolioTest #test18CanNotAddAnyPreviousMemberOfTheTree stamp: 'fr 11/8/2020 08:41:06'!
FAILURE!
!Portfolio methodsFor: 'private - account lineage' stamp: 'fr 11/8/2020 08:42:01' prior: 50873910!
isAlreadyAMember: aPortfolio 
	
	(self ancestors) anySatisfy: [:aRootPortfolio | aRootPortfolio contains: aPortfolio]! !
!Portfolio methodsFor: 'private - account lineage' stamp: 'fr 11/8/2020 08:42:35' prior: 50873573!
ancestors
	
	| ancestors |
	ancestors _ OrderedCollection new.
	parent ifNotNil: [ancestors addAllLast: parent ancestors] ifNil: [ancestors add: self].
	^ancestors! !

!testRun: #PortfolioTest #test18CanNotAddAnyPreviousMemberOfTheTree stamp: 'fr 11/8/2020 08:42:56'!
FAILURE!

self isAlreadyAMember: aReceptiveAccount!
!Portfolio methodsFor: 'private - account lineage' stamp: 'fr 11/8/2020 08:43:34' prior: 50875182!
isAlreadyAMember: aPortfolio 
	
	^(self ancestors) anySatisfy: [:aRootPortfolio | aRootPortfolio contains: aPortfolio]! !

!testRun: #PortfolioTest #test18CanNotAddAnyPreviousMemberOfTheTree stamp: 'fr 11/8/2020 08:43:35'!
PASSED!

!testRun: #PortfolioTest #test01EmptyPortfolioHasBalanceZero stamp: 'fr 11/8/2020 08:43:35'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioWithASingleAccountWithNoTransactionsHasBalanceZero stamp: 'fr 11/8/2020 08:43:35'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioWithASingleAccountReflectsItsTransactionsValuesInItsBalance stamp: 'fr 11/8/2020 08:43:35'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithMultipleAccountsAndPortfoliosReflectsTheirTransactionsValuesInItsBalance stamp: 'fr 11/8/2020 08:43:35'!
PASSED!

!testRun: #PortfolioTest #test05EmptyPortfolioHasNotRegisteredAnyTransaction stamp: 'fr 11/8/2020 08:43:35'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioWithASingleAccountRegistersItsTransactions stamp: 'fr 11/8/2020 08:43:35'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioWithMulltipleAccountsAndPortfoliosRegistersAllTheirTransactions stamp: 'fr 11/8/2020 08:43:35'!
PASSED!

!testRun: #PortfolioTest #test08EmptyPortfolioDoesNotExhibitAnyTransaction stamp: 'fr 11/8/2020 08:43:35'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithASingleAccountExhibitsItsTransactions stamp: 'fr 11/8/2020 08:43:35'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioWithMultipleAccountsAndPortfoliosExhibitsAllTheirTransactionsCombined stamp: 'fr 11/8/2020 08:43:35'!
PASSED!

!testRun: #PortfolioTest #test11EmptyPortfolioDoesNotContainAnyAccount stamp: 'fr 11/8/2020 08:43:35'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioContainsAnAccountAfterItIsAdded stamp: 'fr 11/8/2020 08:43:35'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioContainsAnAccountAfterItIsAddedToItselfOrAnyOfItsDecendents stamp: 'fr 11/8/2020 08:43:35'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioDoesNotContainAnythingThatWasNotAddedToItself stamp: 'fr 11/8/2020 08:43:35'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotAddItself stamp: 'fr 11/8/2020 08:43:35'!
FAILURE!

!testRun: #PortfolioTest #test16PortfolioCanNotAddItsParent stamp: 'fr 11/8/2020 08:43:35'!
FAILURE!

!testRun: #PortfolioTest #test17PortfolioCanNotAddAnyAncestor stamp: 'fr 11/8/2020 08:43:35'!
FAILURE!

!testRun: #PortfolioTest #test18CanNotAddAnyPreviousMemberOfTheTree stamp: 'fr 11/8/2020 08:43:35'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotAddItself stamp: 'fr 11/8/2020 08:43:48'!
FAILURE!

!testRun: #PortfolioTest #test15PortfolioCanNotAddItself stamp: 'fr 11/8/2020 08:43:48'!
FAILURE!

self isAlreadyAMember: aReceptiveAccount!

self ancestors!
!Portfolio methodsFor: 'private - account lineage' stamp: 'fr 11/8/2020 08:45:05' prior: 50875203!
isAlreadyAMember: aPortfolio 
	
	^(self ancestors) anySatisfy: [:aRootPortfolio | aRootPortfolio = aPortfolio or: (aRootPortfolio contains: aPortfolio)]! !

!testRun: #PortfolioTest #test15PortfolioCanNotAddItself stamp: 'fr 11/8/2020 08:45:09'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotAddItself stamp: 'fr 11/8/2020 08:45:11'!
PASSED!

!testRun: #PortfolioTest #test01EmptyPortfolioHasBalanceZero stamp: 'fr 11/8/2020 08:45:11'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioWithASingleAccountWithNoTransactionsHasBalanceZero stamp: 'fr 11/8/2020 08:45:11'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioWithASingleAccountReflectsItsTransactionsValuesInItsBalance stamp: 'fr 11/8/2020 08:45:11'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithMultipleAccountsAndPortfoliosReflectsTheirTransactionsValuesInItsBalance stamp: 'fr 11/8/2020 08:45:11'!
PASSED!

!testRun: #PortfolioTest #test05EmptyPortfolioHasNotRegisteredAnyTransaction stamp: 'fr 11/8/2020 08:45:11'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioWithASingleAccountRegistersItsTransactions stamp: 'fr 11/8/2020 08:45:11'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioWithMulltipleAccountsAndPortfoliosRegistersAllTheirTransactions stamp: 'fr 11/8/2020 08:45:11'!
PASSED!

!testRun: #PortfolioTest #test08EmptyPortfolioDoesNotExhibitAnyTransaction stamp: 'fr 11/8/2020 08:45:11'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithASingleAccountExhibitsItsTransactions stamp: 'fr 11/8/2020 08:45:11'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioWithMultipleAccountsAndPortfoliosExhibitsAllTheirTransactionsCombined stamp: 'fr 11/8/2020 08:45:11'!
PASSED!

!testRun: #PortfolioTest #test11EmptyPortfolioDoesNotContainAnyAccount stamp: 'fr 11/8/2020 08:45:11'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioContainsAnAccountAfterItIsAdded stamp: 'fr 11/8/2020 08:45:11'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioContainsAnAccountAfterItIsAddedToItselfOrAnyOfItsDecendents stamp: 'fr 11/8/2020 08:45:11'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioDoesNotContainAnythingThatWasNotAddedToItself stamp: 'fr 11/8/2020 08:45:11'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotAddItself stamp: 'fr 11/8/2020 08:45:11'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioCanNotAddItsParent stamp: 'fr 11/8/2020 08:45:11'!
PASSED!

!testRun: #PortfolioTest #test17PortfolioCanNotAddAnyAncestor stamp: 'fr 11/8/2020 08:45:11'!
PASSED!

!testRun: #PortfolioTest #test18CanNotAddAnyPreviousMemberOfTheTree stamp: 'fr 11/8/2020 08:45:11'!
PASSED!
!PortfolioTest methodsFor: 'tests' stamp: 'fr 11/8/2020 08:46:34'!
test19

	| portfolio anotherPortfolio |
	portfolio _ Portfolio new.
	anotherPortfolio _ Portfolio with: (OrderedCollection with: portfolio).
	
	self  should: [portfolio add: anotherPortfolio] 
		raise: Error 
		withMessageText: Portfolio canNotAddAccountErrorDescription! !
!PortfolioTest methodsFor: 'tests' stamp: 'fr 11/8/2020 08:46:45' prior: 50875374!
test19

	| portfolio anotherPortfolio |
	portfolio _ Portfolio new.
	anotherPortfolio _ Portfolio with: (OrderedCollection with: portfolio).
	
	self  should: [anotherPortfolio add: portfolio] 
		raise: Error 
		withMessageText: Portfolio canNotAddAccountErrorDescription! !

!testRun: #PortfolioTest #test19 stamp: 'fr 11/8/2020 08:46:46'!
PASSED!

!testRun: #PortfolioTest #test01EmptyPortfolioHasBalanceZero stamp: 'fr 11/8/2020 08:46:46'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioWithASingleAccountWithNoTransactionsHasBalanceZero stamp: 'fr 11/8/2020 08:46:46'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioWithASingleAccountReflectsItsTransactionsValuesInItsBalance stamp: 'fr 11/8/2020 08:46:46'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithMultipleAccountsAndPortfoliosReflectsTheirTransactionsValuesInItsBalance stamp: 'fr 11/8/2020 08:46:46'!
PASSED!

!testRun: #PortfolioTest #test05EmptyPortfolioHasNotRegisteredAnyTransaction stamp: 'fr 11/8/2020 08:46:46'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioWithASingleAccountRegistersItsTransactions stamp: 'fr 11/8/2020 08:46:46'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioWithMulltipleAccountsAndPortfoliosRegistersAllTheirTransactions stamp: 'fr 11/8/2020 08:46:46'!
PASSED!

!testRun: #PortfolioTest #test08EmptyPortfolioDoesNotExhibitAnyTransaction stamp: 'fr 11/8/2020 08:46:46'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithASingleAccountExhibitsItsTransactions stamp: 'fr 11/8/2020 08:46:46'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioWithMultipleAccountsAndPortfoliosExhibitsAllTheirTransactionsCombined stamp: 'fr 11/8/2020 08:46:46'!
PASSED!

!testRun: #PortfolioTest #test11EmptyPortfolioDoesNotContainAnyAccount stamp: 'fr 11/8/2020 08:46:46'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioContainsAnAccountAfterItIsAdded stamp: 'fr 11/8/2020 08:46:46'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioContainsAnAccountAfterItIsAddedToItselfOrAnyOfItsDecendents stamp: 'fr 11/8/2020 08:46:46'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioDoesNotContainAnythingThatWasNotAddedToItself stamp: 'fr 11/8/2020 08:46:46'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotAddItself stamp: 'fr 11/8/2020 08:46:46'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioCanNotAddItsParent stamp: 'fr 11/8/2020 08:46:46'!
PASSED!

!testRun: #PortfolioTest #test17PortfolioCanNotAddAnyAncestor stamp: 'fr 11/8/2020 08:46:46'!
PASSED!

!testRun: #PortfolioTest #test18CanNotAddAnyPreviousMemberOfTheTree stamp: 'fr 11/8/2020 08:46:46'!
PASSED!

!testRun: #PortfolioTest #test19 stamp: 'fr 11/8/2020 08:46:46'!
PASSED!
!PortfolioTest methodsFor: 'tests' stamp: 'fr 11/8/2020 08:46:51' prior: 50875386!
test19

	| portfolio anotherPortfolio |
	portfolio _ Portfolio new.
	anotherPortfolio _ Portfolio with: (OrderedCollection with: portfolio).
	
	self  should: [anotherPortfolio add: anotherPortfolio] 
		raise: Error 
		withMessageText: Portfolio canNotAddAccountErrorDescription! !

!testRun: #PortfolioTest #test19 stamp: 'fr 11/8/2020 08:46:52'!
PASSED!

!testRun: #PortfolioTest #test01EmptyPortfolioHasBalanceZero stamp: 'fr 11/8/2020 08:46:52'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioWithASingleAccountWithNoTransactionsHasBalanceZero stamp: 'fr 11/8/2020 08:46:52'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioWithASingleAccountReflectsItsTransactionsValuesInItsBalance stamp: 'fr 11/8/2020 08:46:52'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithMultipleAccountsAndPortfoliosReflectsTheirTransactionsValuesInItsBalance stamp: 'fr 11/8/2020 08:46:52'!
PASSED!

!testRun: #PortfolioTest #test05EmptyPortfolioHasNotRegisteredAnyTransaction stamp: 'fr 11/8/2020 08:46:52'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioWithASingleAccountRegistersItsTransactions stamp: 'fr 11/8/2020 08:46:52'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioWithMulltipleAccountsAndPortfoliosRegistersAllTheirTransactions stamp: 'fr 11/8/2020 08:46:52'!
PASSED!

!testRun: #PortfolioTest #test08EmptyPortfolioDoesNotExhibitAnyTransaction stamp: 'fr 11/8/2020 08:46:52'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithASingleAccountExhibitsItsTransactions stamp: 'fr 11/8/2020 08:46:52'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioWithMultipleAccountsAndPortfoliosExhibitsAllTheirTransactionsCombined stamp: 'fr 11/8/2020 08:46:52'!
PASSED!

!testRun: #PortfolioTest #test11EmptyPortfolioDoesNotContainAnyAccount stamp: 'fr 11/8/2020 08:46:52'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioContainsAnAccountAfterItIsAdded stamp: 'fr 11/8/2020 08:46:52'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioContainsAnAccountAfterItIsAddedToItselfOrAnyOfItsDecendents stamp: 'fr 11/8/2020 08:46:52'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioDoesNotContainAnythingThatWasNotAddedToItself stamp: 'fr 11/8/2020 08:46:52'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotAddItself stamp: 'fr 11/8/2020 08:46:52'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioCanNotAddItsParent stamp: 'fr 11/8/2020 08:46:52'!
PASSED!

!testRun: #PortfolioTest #test17PortfolioCanNotAddAnyAncestor stamp: 'fr 11/8/2020 08:46:52'!
PASSED!

!testRun: #PortfolioTest #test18CanNotAddAnyPreviousMemberOfTheTree stamp: 'fr 11/8/2020 08:46:52'!
PASSED!

!testRun: #PortfolioTest #test19 stamp: 'fr 11/8/2020 08:46:52'!
PASSED!
!PortfolioTest methodsFor: 'tests' stamp: 'fr 11/8/2020 08:57:30' prior: 50875472!
test19

	| portfolio anotherParentPortfolio parentPortfolio |
	portfolio _ Portfolio new.
	parentPortfolio _ Portfolio with: (OrderedCollection with: portfolio).
	anotherParentPortfolio _ Portfolio with: (OrderedCollection with: portfolio).
	
	self  should: [parentPortfolio add: anotherParentPortfolio] 
		raise: Error 
		withMessageText: Portfolio canNotAddAccountErrorDescription! !

!testRun: #PortfolioTest #test19 stamp: 'fr 11/8/2020 08:57:38'!
FAILURE!
!Portfolio methodsFor: 'private - account lineage' stamp: 'fr 11/8/2020 08:58:34' prior: 50873142!
hasBeenAddedBy: aPortfolio 
	
	parent add: aPortfolio! !

!classDefinition: #Portfolio category: 'Portfolio-Ejercicio' stamp: 'fr 11/8/2020 08:58:40'!
Object subclass: #Portfolio
	instanceVariableNames: 'accounts parents'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'fr 11/8/2020 08:58:40' prior: 50875576!
hasBeenAddedBy: aPortfolio 
	
	parents add: aPortfolio! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'fr 11/8/2020 08:58:40' prior: 50875189!
ancestors
	
	| ancestors |
	ancestors _ OrderedCollection new.
	parents ifNotNil: [ancestors addAllLast: parents ancestors] ifNil: [ancestors add: self].
	^ancestors! !

!testRun: #PortfolioTest #test19 stamp: 'fr 11/8/2020 08:58:44'!
ERROR!
!Portfolio methodsFor: 'initialization' stamp: 'fr 11/8/2020 08:59:14' prior: 50873125!
initializeWith: aReceptiveAccountList 
	
	accounts _ aReceptiveAccountList.
	parents _ OrderedCollection new.
	aReceptiveAccountList do: [:anAccount | 
		(anAccount isMemberOf: Portfolio) ifTrue:
			[anAccount hasBeenAddedBy: self]
		]! !

!testRun: #PortfolioTest #test19 stamp: 'fr 11/8/2020 08:59:18'!
ERROR!

!testRun: #PortfolioTest #test19 stamp: 'fr 11/8/2020 08:59:25'!
ERROR!
!Portfolio methodsFor: 'initialization' stamp: 'fr 11/8/2020 08:59:50' prior: 50872282 overrides: 16896425!
initialize

	accounts _ OrderedCollection new.
	parents _ OrderedCollection new.! !

!testRun: #PortfolioTest #test19 stamp: 'fr 11/8/2020 08:59:53'!
FAILURE!

!testRun: #PortfolioTest #test19 stamp: 'fr 11/8/2020 09:02:43'!
FAILURE!
!Portfolio methodsFor: 'private - account lineage' stamp: 'fr 11/8/2020 09:03:57' prior: 50875594!
ancestors
	
	| ancestors |
	ancestors _ OrderedCollection new.
	parents ifEmpty: [ancestors add: self] ifNotEmpty: [parents do: [:aParent | ancestors addAllLast: aParent ancestors]].
	"parents ifNotNil: [ancestors addAllLast: parents ancestors] ifNil: [ancestors add: self]."
	^ancestors! !

!testRun: #PortfolioTest #test19 stamp: 'fr 11/8/2020 09:03:59'!
FAILURE!

!testRun: #PortfolioTest #test19 stamp: 'fr 11/8/2020 09:04:13'!
FAILURE!

!testRun: #PortfolioTest #test19 stamp: 'fr 11/8/2020 09:04:13'!
FAILURE!

self ancestors!
!Portfolio methodsFor: 'private - account lineage' stamp: 'fr 11/8/2020 09:05:19' prior: 50875291!
isAlreadyAMember: aPortfolio 
	
	^(self ancestors) anySatisfy: [:aRootPortfolio | aRootPortfolio = aPortfolio or: [aRootPortfolio contains: aPortfolio] or: [aPortfolio contains: aRootPortfolio]]! !

!testRun: #PortfolioTest #test19 stamp: 'fr 11/8/2020 09:05:22'!
FAILURE!

self isAlreadyAMember: aReceptiveAccount!
!Portfolio methodsFor: 'private - account lineage' stamp: 'fr 11/8/2020 09:07:38' prior: 50875652!
isAlreadyAMember: aPortfolio 
	
	^(self ancestors) anySatisfy: [:aRootPortfolio | aRootPortfolio = aPortfolio or: [aRootPortfolio contains: aPortfolio]]! !

----SNAPSHOT----(8 November 2020 09:34:39) CuisUniversity-4384.image priorSource: 17380530!
!PortfolioTest methodsFor: 'tests' stamp: 'fr 11/8/2020 16:53:04' prior: 50875558!
test19

	"| portfolio anotherParentPortfolio parentPortfolio |
	portfolio _ Portfolio new.
	parentPortfolio _ Portfolio with: (OrderedCollection with: portfolio).
	anotherParentPortfolio _ Portfolio with: (OrderedCollection with: portfolio).
	
	self  should: [parentPortfolio add: anotherParentPortfolio] 
		raise: Error 
		withMessageText: Portfolio canNotAddAccountErrorDescription"
	self fail! !

!testRun: #PortfolioTest #test19 stamp: 'fr 11/8/2020 16:53:05'!
FAILURE!
!Portfolio methodsFor: 'private - account lineage' stamp: 'fr 11/8/2020 16:53:25' prior: 50875632!
ancestors
	
	| ancestors |
	ancestors _ OrderedCollection new.
	parents ifEmpty: [ancestors add: self] ifNotEmpty: [parents do: [:aParent | ancestors addAllLast: aParent ancestors]].
	^ancestors! !
!PortfolioTest methodsFor: 'tests' stamp: 'fr 11/8/2020 18:16:24' prior: 50875676!
test19

	| portfolio anotherParentPortfolio parentPortfolio |
	portfolio _ Portfolio new.
	parentPortfolio _ Portfolio with: (OrderedCollection with: portfolio).
	anotherParentPortfolio _ Portfolio with: (OrderedCollection with: portfolio).
	
	self  should: [parentPortfolio add: anotherParentPortfolio] 
		raise: Error 
		withMessageText: Portfolio canNotAddAccountErrorDescription! !

!testRun: #PortfolioTest #test19 stamp: 'fr 11/8/2020 18:16:24'!
FAILURE!
!Portfolio methodsFor: 'private - account lineage' stamp: 'fr 11/8/2020 18:16:55' prior: 50875665!
isAlreadyAMember: aPortfolio 
	
	^(self ancestors) anySatisfy: [:aRootPortfolio | aRootPortfolio = aPortfolio or: [aRootPortfolio includes: aPortfolio]]! !

!testRun: #PortfolioTest #test19 stamp: 'fr 11/8/2020 18:17:37'!
FAILURE!

!testRun: #PortfolioTest #test19 stamp: 'fr 11/8/2020 18:17:59'!
FAILURE!
!Portfolio methodsFor: 'private - account lineage' stamp: 'fr 11/8/2020 18:18:31'!
includes: aPortfolio 
	self shouldBeImplemented.! !
!Portfolio methodsFor: 'private - account lineage' stamp: 'fr 11/8/2020 18:19:20' prior: 50875734!
includes: aPortfolio 
	
	accounts anySatisfy: [:anAccount | anAccount = aPortfolio or: (anAccount includes: aPortfolio)]! !
!Portfolio methodsFor: 'private - account lineage' stamp: 'fr 11/8/2020 18:22:10' prior: 50875739!
includes: aPortfolio 
	
	^accounts anySatisfy: [:anAccount | anAccount = aPortfolio or: (anAccount includes: aPortfolio)]! !

!testRun: #PortfolioTest #test19 stamp: 'fr 11/8/2020 18:22:12'!
FAILURE!
!Portfolio methodsFor: 'private - account lineage' stamp: 'fr 11/8/2020 18:22:41' prior: 50875721!
isAlreadyAMember: aPortfolio 
	
	^(self ancestors) anySatisfy: [:aRootPortfolio | aRootPortfolio includes: aPortfolio]! !

!testRun: #PortfolioTest #test19 stamp: 'fr 11/8/2020 18:24:09'!
FAILURE!

portfolio!

aReceptiveAccount!

self ancestors!
!Portfolio methodsFor: 'private - account lineage' stamp: 'fr 11/8/2020 18:48:04' prior: 50875746!
includes: aPortfolio 
	
	^self = aPortfolio or: [accounts anySatisfy: [:anAccount | (anAccount includes: aPortfolio) or: [aPortfolio includes: anAccount]]]! !

!testRun: #PortfolioTest #test19 stamp: 'fr 11/8/2020 18:50:13'!
PASSED!

!testRun: #PortfolioTest #test01EmptyPortfolioHasBalanceZero stamp: 'fr 11/8/2020 18:50:13'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioWithASingleAccountWithNoTransactionsHasBalanceZero stamp: 'fr 11/8/2020 18:50:13'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioWithASingleAccountReflectsItsTransactionsValuesInItsBalance stamp: 'fr 11/8/2020 18:50:13'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithMultipleAccountsAndPortfoliosReflectsTheirTransactionsValuesInItsBalance stamp: 'fr 11/8/2020 18:50:13'!
PASSED!

!testRun: #PortfolioTest #test05EmptyPortfolioHasNotRegisteredAnyTransaction stamp: 'fr 11/8/2020 18:50:13'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioWithASingleAccountRegistersItsTransactions stamp: 'fr 11/8/2020 18:50:13'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioWithMulltipleAccountsAndPortfoliosRegistersAllTheirTransactions stamp: 'fr 11/8/2020 18:50:13'!
PASSED!

!testRun: #PortfolioTest #test08EmptyPortfolioDoesNotExhibitAnyTransaction stamp: 'fr 11/8/2020 18:50:13'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithASingleAccountExhibitsItsTransactions stamp: 'fr 11/8/2020 18:50:13'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioWithMultipleAccountsAndPortfoliosExhibitsAllTheirTransactionsCombined stamp: 'fr 11/8/2020 18:50:13'!
PASSED!

!testRun: #PortfolioTest #test11EmptyPortfolioDoesNotContainAnyAccount stamp: 'fr 11/8/2020 18:50:13'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioContainsAnAccountAfterItIsAdded stamp: 'fr 11/8/2020 18:50:13'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioContainsAnAccountAfterItIsAddedToItselfOrAnyOfItsDecendents stamp: 'fr 11/8/2020 18:50:13'!
ERROR!

!testRun: #PortfolioTest #test14PortfolioDoesNotContainAnythingThatWasNotAddedToItself stamp: 'fr 11/8/2020 18:50:13'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotAddItself stamp: 'fr 11/8/2020 18:50:13'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioCanNotAddItsParent stamp: 'fr 11/8/2020 18:50:13'!
PASSED!

!testRun: #PortfolioTest #test17PortfolioCanNotAddAnyAncestor stamp: 'fr 11/8/2020 18:50:13'!
PASSED!

!testRun: #PortfolioTest #test18CanNotAddAnyPreviousMemberOfTheTree stamp: 'fr 11/8/2020 18:50:13'!
PASSED!

!testRun: #PortfolioTest #test19 stamp: 'fr 11/8/2020 18:50:13'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioContainsAnAccountAfterItIsAddedToItselfOrAnyOfItsDecendents stamp: 'fr 11/8/2020 18:50:13'!
ERROR!

!testRun: #PortfolioTest #test13PortfolioContainsAnAccountAfterItIsAddedToItselfOrAnyOfItsDecendents stamp: 'fr 11/8/2020 18:51:01'!
ERROR!
!ReceptiveAccount methodsFor: 'private' stamp: 'fr 11/8/2020 18:51:23'!
includes: aPortfolio 
	self shouldBeImplemented.! !
!ReceptiveAccount methodsFor: 'private' stamp: 'fr 11/8/2020 18:51:35' prior: 50875858!
includes: aPortfolio 
	
	^self = aPortfolio ! !

!testRun: #PortfolioTest #test13PortfolioContainsAnAccountAfterItIsAddedToItselfOrAnyOfItsDecendents stamp: 'fr 11/8/2020 18:51:39'!
PASSED!

!testRun: #PortfolioTest #test01EmptyPortfolioHasBalanceZero stamp: 'fr 11/8/2020 18:51:39'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioWithASingleAccountWithNoTransactionsHasBalanceZero stamp: 'fr 11/8/2020 18:51:39'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioWithASingleAccountReflectsItsTransactionsValuesInItsBalance stamp: 'fr 11/8/2020 18:51:39'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithMultipleAccountsAndPortfoliosReflectsTheirTransactionsValuesInItsBalance stamp: 'fr 11/8/2020 18:51:39'!
PASSED!

!testRun: #PortfolioTest #test05EmptyPortfolioHasNotRegisteredAnyTransaction stamp: 'fr 11/8/2020 18:51:39'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioWithASingleAccountRegistersItsTransactions stamp: 'fr 11/8/2020 18:51:39'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioWithMulltipleAccountsAndPortfoliosRegistersAllTheirTransactions stamp: 'fr 11/8/2020 18:51:39'!
PASSED!

!testRun: #PortfolioTest #test08EmptyPortfolioDoesNotExhibitAnyTransaction stamp: 'fr 11/8/2020 18:51:39'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithASingleAccountExhibitsItsTransactions stamp: 'fr 11/8/2020 18:51:39'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioWithMultipleAccountsAndPortfoliosExhibitsAllTheirTransactionsCombined stamp: 'fr 11/8/2020 18:51:39'!
PASSED!

!testRun: #PortfolioTest #test11EmptyPortfolioDoesNotContainAnyAccount stamp: 'fr 11/8/2020 18:51:39'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioContainsAnAccountAfterItIsAdded stamp: 'fr 11/8/2020 18:51:39'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioContainsAnAccountAfterItIsAddedToItselfOrAnyOfItsDecendents stamp: 'fr 11/8/2020 18:51:39'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioDoesNotContainAnythingThatWasNotAddedToItself stamp: 'fr 11/8/2020 18:51:39'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotAddItself stamp: 'fr 11/8/2020 18:51:39'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioCanNotAddItsParent stamp: 'fr 11/8/2020 18:51:39'!
PASSED!

!testRun: #PortfolioTest #test17PortfolioCanNotAddAnyAncestor stamp: 'fr 11/8/2020 18:51:39'!
PASSED!

!testRun: #PortfolioTest #test18CanNotAddAnyPreviousMemberOfTheTree stamp: 'fr 11/8/2020 18:51:39'!
PASSED!

!testRun: #PortfolioTest #test19 stamp: 'fr 11/8/2020 18:51:39'!
PASSED!
!PortfolioTest methodsFor: 'tests' stamp: 'fr 11/8/2020 18:53:06'!
test19PortfolioCanNotAddAnotherOneWichSharesChild

	| portfolio anotherParentPortfolio parentPortfolio |
	portfolio _ Portfolio new.
	parentPortfolio _ Portfolio with: (OrderedCollection with: portfolio).
	anotherParentPortfolio _ Portfolio with: (OrderedCollection with: portfolio).
	
	self  should: [parentPortfolio add: anotherParentPortfolio] 
		raise: Error 
		withMessageText: Portfolio canNotAddAccountErrorDescription! !

!methodRemoval: PortfolioTest #test19 stamp: 'fr 11/8/2020 18:53:06'!
test19

	| portfolio anotherParentPortfolio parentPortfolio |
	portfolio _ Portfolio new.
	parentPortfolio _ Portfolio with: (OrderedCollection with: portfolio).
	anotherParentPortfolio _ Portfolio with: (OrderedCollection with: portfolio).
	
	self  should: [parentPortfolio add: anotherParentPortfolio] 
		raise: Error 
		withMessageText: Portfolio canNotAddAccountErrorDescription!
!PortfolioTest methodsFor: 'tests' stamp: 'fr 11/8/2020 18:53:16'!
test19PortfolioCanNotAddAnotherOneWhichSharesChild

	| portfolio anotherParentPortfolio parentPortfolio |
	portfolio _ Portfolio new.
	parentPortfolio _ Portfolio with: (OrderedCollection with: portfolio).
	anotherParentPortfolio _ Portfolio with: (OrderedCollection with: portfolio).
	
	self  should: [parentPortfolio add: anotherParentPortfolio] 
		raise: Error 
		withMessageText: Portfolio canNotAddAccountErrorDescription! !

!methodRemoval: PortfolioTest #test19PortfolioCanNotAddAnotherOneWichSharesChild stamp: 'fr 11/8/2020 18:53:16'!
test19PortfolioCanNotAddAnotherOneWichSharesChild

	| portfolio anotherParentPortfolio parentPortfolio |
	portfolio _ Portfolio new.
	parentPortfolio _ Portfolio with: (OrderedCollection with: portfolio).
	anotherParentPortfolio _ Portfolio with: (OrderedCollection with: portfolio).
	
	self  should: [parentPortfolio add: anotherParentPortfolio] 
		raise: Error 
		withMessageText: Portfolio canNotAddAccountErrorDescription!
!Portfolio methodsFor: 'accounts management' stamp: 'fr 11/8/2020 18:53:49' prior: 50875163!
add: aReceptiveAccount 
	
	(self isAlreadyAMember: aReceptiveAccount) ifTrue: [self error: self class canNotAddAccountErrorDescription].
	
	accounts add: aReceptiveAccount ! !
!Portfolio methodsFor: 'accounts management' stamp: 'fr 11/8/2020 18:54:16'!
validateAdding: aReceptiveAccount

	^ (self isAlreadyAMember: aReceptiveAccount) ifTrue: [self error: self class canNotAddAccountErrorDescription]! !
!Portfolio methodsFor: 'accounts management' stamp: 'fr 11/8/2020 18:54:16' prior: 50876007!
add: aReceptiveAccount 
	
	self validateAdding: aReceptiveAccount.
	
	accounts add: aReceptiveAccount ! !
!Portfolio methodsFor: 'accounts management' stamp: 'fr 11/8/2020 18:55:02' prior: 50876015!
validateAdding: aReceptiveAccount

	^(self isAlreadyAMember: aReceptiveAccount) ifTrue: [self error: self class canNotAddAccountErrorDescription]! !
!Portfolio methodsFor: 'private - account lineage' stamp: 'fr 11/8/2020 18:56:05'!
isReachableFromRoots: aPortfolio 
	
	^(self ancestors) anySatisfy: [:aRootPortfolio | aRootPortfolio includes: aPortfolio]! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'fr 11/8/2020 18:56:05' prior: 50876030!
validateAdding: aReceptiveAccount

	^(self isReachableFromRoots: aReceptiveAccount) ifTrue: [self error: self class canNotAddAccountErrorDescription]! !

!methodRemoval: Portfolio #isAlreadyAMember: stamp: 'fr 11/8/2020 18:56:05'!
isAlreadyAMember: aPortfolio 
	
	^(self ancestors) anySatisfy: [:aRootPortfolio | aRootPortfolio includes: aPortfolio]!
!Portfolio methodsFor: 'accounts management' stamp: 'fr 11/8/2020 18:57:05'!
signalCanNotAddAccountError

	^ self error: self class canNotAddAccountErrorDescription! !
!Portfolio methodsFor: 'accounts management' stamp: 'fr 11/8/2020 18:57:05' prior: 50876045!
validateAdding: aReceptiveAccount

	^(self isReachableFromRoots: aReceptiveAccount) ifTrue: [self signalCanNotAddAccountError]! !
!Portfolio methodsFor: 'private - account lineage' stamp: 'fr 11/8/2020 18:57:36'!
roots
	
	| ancestors |
	ancestors _ OrderedCollection new.
	parents ifEmpty: [ancestors add: self] ifNotEmpty: [parents do: [:aParent | ancestors addAllLast: aParent ancestors]].
	^ancestors! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'fr 11/8/2020 18:57:36' prior: 50876038!
isReachableFromRoots: aPortfolio 
	
	^(self roots) anySatisfy: [:aRootPortfolio | aRootPortfolio includes: aPortfolio]! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'fr 11/8/2020 18:57:36' prior: 50876072!
roots
	
	| ancestors |
	ancestors _ OrderedCollection new.
	parents ifEmpty: [ancestors add: self] ifNotEmpty: [parents do: [:aParent | ancestors addAllLast: aParent ancestors]].
	^ancestors! !

!methodRemoval: Portfolio #ancestors stamp: 'fr 11/8/2020 18:57:36'!
ancestors
	
	| ancestors |
	ancestors _ OrderedCollection new.
	parents ifEmpty: [ancestors add: self] ifNotEmpty: [parents do: [:aParent | ancestors addAllLast: aParent ancestors]].
	^ancestors!
!Portfolio methodsFor: 'private - account lineage' stamp: 'fr 11/8/2020 18:57:57' prior: 50876088!
roots
	
	| ancestors |
	ancestors _ OrderedCollection new.
	parents ifEmpty: [ancestors add: self] ifNotEmpty: [parents do: [:aParent | ancestors addAllLast: aParent roots]].
	^ancestors! !
!Portfolio methodsFor: 'private - account lineage' stamp: 'fr 11/8/2020 18:58:10' prior: 50876106!
roots
	
	| roots |
	roots _ OrderedCollection new.
	parents ifEmpty: [roots add: self] ifNotEmpty: [parents do: [:aParent | roots addAllLast: aParent roots]].
	^roots! !
!Portfolio methodsFor: 'private - account lineage' stamp: 'fr 11/8/2020 18:58:29' prior: 50876116!
roots
	
	| roots |
	roots _ OrderedCollection new.
	parents 
		ifEmpty: [roots add: self] 
		ifNotEmpty: [parents do: [:aParent | roots addAllLast: aParent roots]].
	^roots! !
!Portfolio methodsFor: 'private - account lineage' stamp: 'fr 11/8/2020 18:59:18' prior: 50876081!
isReachableFromRoots: aPortfolio 
	
	^self roots anySatisfy: [:aRootPortfolio | aRootPortfolio includes: aPortfolio]! !

anAccount _ ReceptiveAccount new. !

port1 _ Portfolio with: (OrderedCollection with: anAccount). !

port2 _ Portfolio with: (OrderedCollection with: anAccount). !

port1 add: anAccount. !

port1 _ Portfolio new. !

port1 add: anAccount. !

port1 add: anAccount. !

port1 _ Portfolio new. !

port2 _ Portfolio new.  !

port1 add: port2. !

port2 add: port1. !

port1 add: anAccount. !

port1 _ Portfolio new. !

port2 _ Portfolio new.  !

port1 add: anAccount. !

port2 add: port1. !

port2 add: port1. !

 
port2 _ Portfolio new.  !

port1 add: port2.  !

port2 add: port1. !

port1 add: anAccount. !
!PortfolioTest methodsFor: 'tests' stamp: 'fr 11/8/2020 19:12:20'!
test20

	| portfolio anotherParentPortfolio parentPortfolio |
	portfolio _ Portfolio new.
	parentPortfolio _ Portfolio with: (OrderedCollection with: portfolio).
	anotherParentPortfolio _ Portfolio with: (OrderedCollection with: portfolio).
	
	self  should: [parentPortfolio add: anotherParentPortfolio] 
		raise: Error 
		withMessageText: Portfolio canNotAddAccountErrorDescription! !
!PortfolioTest methodsFor: 'tests' stamp: 'fr 11/8/2020 19:12:50' prior: 50876159!
test20

	| portfolio parentPortfolio |
	portfolio _ Portfolio new.
	parentPortfolio _ Portfolio new.
	
	parentPortfolio add: portfolio.
	
	self  should: [portfolio add: parentPortfolio] 
		raise: Error 
		withMessageText: Portfolio canNotAddAccountErrorDescription! !

!testRun: #PortfolioTest #test20 stamp: 'fr 11/8/2020 19:14:00'!
FAILURE!
!Portfolio methodsFor: 'accounts management' stamp: 'fr 11/8/2020 19:16:11' prior: 50876023!
add: aReceptiveAccount 
	
	self validateAdding: aReceptiveAccount.
	(aReceptiveAccount isMemberOf: Portfolio) ifTrue:
		[aReceptiveAccount hasBeenAddedBy: self].
	accounts add: aReceptiveAccount ! !
!Portfolio methodsFor: 'accounts management' stamp: 'fr 11/8/2020 19:16:15' prior: 50876188!
add: aReceptiveAccount 
	
	self validateAdding: aReceptiveAccount.
	(aReceptiveAccount isMemberOf: Portfolio) ifTrue: [aReceptiveAccount hasBeenAddedBy: self].
	accounts add: aReceptiveAccount ! !

!testRun: #PortfolioTest #test20 stamp: 'fr 11/8/2020 19:16:19'!
FAILURE!

!testRun: #PortfolioTest #test20 stamp: 'fr 11/8/2020 19:16:23'!
PASSED!

!testRun: #PortfolioTest #test01EmptyPortfolioHasBalanceZero stamp: 'fr 11/8/2020 19:16:23'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioWithASingleAccountWithNoTransactionsHasBalanceZero stamp: 'fr 11/8/2020 19:16:23'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioWithASingleAccountReflectsItsTransactionsValuesInItsBalance stamp: 'fr 11/8/2020 19:16:23'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithMultipleAccountsAndPortfoliosReflectsTheirTransactionsValuesInItsBalance stamp: 'fr 11/8/2020 19:16:23'!
PASSED!

!testRun: #PortfolioTest #test05EmptyPortfolioHasNotRegisteredAnyTransaction stamp: 'fr 11/8/2020 19:16:23'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioWithASingleAccountRegistersItsTransactions stamp: 'fr 11/8/2020 19:16:23'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioWithMulltipleAccountsAndPortfoliosRegistersAllTheirTransactions stamp: 'fr 11/8/2020 19:16:23'!
PASSED!

!testRun: #PortfolioTest #test08EmptyPortfolioDoesNotExhibitAnyTransaction stamp: 'fr 11/8/2020 19:16:23'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithASingleAccountExhibitsItsTransactions stamp: 'fr 11/8/2020 19:16:23'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioWithMultipleAccountsAndPortfoliosExhibitsAllTheirTransactionsCombined stamp: 'fr 11/8/2020 19:16:23'!
PASSED!

!testRun: #PortfolioTest #test11EmptyPortfolioDoesNotContainAnyAccount stamp: 'fr 11/8/2020 19:16:23'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioContainsAnAccountAfterItIsAdded stamp: 'fr 11/8/2020 19:16:23'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioContainsAnAccountAfterItIsAddedToItselfOrAnyOfItsDecendents stamp: 'fr 11/8/2020 19:16:23'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioDoesNotContainAnythingThatWasNotAddedToItself stamp: 'fr 11/8/2020 19:16:23'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotAddItself stamp: 'fr 11/8/2020 19:16:23'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioCanNotAddItsParent stamp: 'fr 11/8/2020 19:16:23'!
PASSED!

!testRun: #PortfolioTest #test17PortfolioCanNotAddAnyAncestor stamp: 'fr 11/8/2020 19:16:23'!
PASSED!

!testRun: #PortfolioTest #test18CanNotAddAnyPreviousMemberOfTheTree stamp: 'fr 11/8/2020 19:16:23'!
PASSED!

!testRun: #PortfolioTest #test19PortfolioCanNotAddAnotherOneWhichSharesChild stamp: 'fr 11/8/2020 19:16:23'!
PASSED!

!testRun: #PortfolioTest #test20 stamp: 'fr 11/8/2020 19:16:23'!
PASSED!
!PortfolioTest methodsFor: 'tests' stamp: 'fr 11/8/2020 19:17:51' prior: 50876174!
test20

	| portfolio parentPortfolio |
	portfolio _ Portfolio new.
	parentPortfolio _ Portfolio new.
	
	parentPortfolio add: portfolio.
	
	self  should: [portfolio add: parentPortfolio] 
		raise: Error 
		withMessageText: Portfolio canNotAddAccountErrorDescription! !
!PortfolioTest methodsFor: 'tests' stamp: 'fr 11/8/2020 19:18:39'!
test20AddingShouldBehaveIdenticallyAsWhenThePortfolioIsCreatedWithAccounts

	| portfolio parentPortfolio |
	portfolio _ Portfolio new.
	parentPortfolio _ Portfolio new.
	
	parentPortfolio add: portfolio.
	
	self  should: [portfolio add: parentPortfolio] 
		raise: Error 
		withMessageText: Portfolio canNotAddAccountErrorDescription! !

!methodRemoval: PortfolioTest #test20 stamp: 'fr 11/8/2020 19:18:39'!
test20

	| portfolio parentPortfolio |
	portfolio _ Portfolio new.
	parentPortfolio _ Portfolio new.
	
	parentPortfolio add: portfolio.
	
	self  should: [portfolio add: parentPortfolio] 
		raise: Error 
		withMessageText: Portfolio canNotAddAccountErrorDescription!
!PortfolioTest methodsFor: 'tests' stamp: 'fr 11/8/2020 19:19:10'!
test20AddingShouldBehaveIdenticallyAsCreatingAPortfolioWithAccounts

	| portfolio parentPortfolio |
	portfolio _ Portfolio new.
	parentPortfolio _ Portfolio new.
	
	parentPortfolio add: portfolio.
	
	self  should: [portfolio add: parentPortfolio] 
		raise: Error 
		withMessageText: Portfolio canNotAddAccountErrorDescription! !

!methodRemoval: PortfolioTest #test20AddingShouldBehaveIdenticallyAsWhenThePortfolioIsCreatedWithAccounts stamp: 'fr 11/8/2020 19:19:10'!
test20AddingShouldBehaveIdenticallyAsWhenThePortfolioIsCreatedWithAccounts

	| portfolio parentPortfolio |
	portfolio _ Portfolio new.
	parentPortfolio _ Portfolio new.
	
	parentPortfolio add: portfolio.
	
	self  should: [portfolio add: parentPortfolio] 
		raise: Error 
		withMessageText: Portfolio canNotAddAccountErrorDescription!

Object subclass: #Account
	instanceVariableNames: 'accounts parents'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classDefinition: #Account category: 'Portfolio-Ejercicio' stamp: 'fr 11/8/2020 19:19:34'!
Object subclass: #Account
	instanceVariableNames: 'accounts parents'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

Object subclass: #Account
	instanceVariableNames: 'accounts'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classDefinition: #Account category: 'Portfolio-Ejercicio' stamp: 'fr 11/8/2020 19:19:41'!
Object subclass: #Account
	instanceVariableNames: 'accounts'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

Object subclass: #Account
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classDefinition: #Account category: 'Portfolio-Ejercicio' stamp: 'fr 11/8/2020 19:19:54'!
Object subclass: #Account
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

Account subclass: #Portfolio
	instanceVariableNames: 'accounts parents'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classDefinition: #Portfolio category: 'Portfolio-Ejercicio' stamp: 'fr 11/8/2020 19:20:01'!
Account subclass: #Portfolio
	instanceVariableNames: 'accounts parents'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

Account subclass: #ReceptiveAccount
	instanceVariableNames: 'transactions'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classDefinition: #ReceptiveAccount category: 'Portfolio-Ejercicio' stamp: 'fr 11/8/2020 19:20:07'!
Account subclass: #ReceptiveAccount
	instanceVariableNames: 'transactions'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!testRun: #PortfolioTest #test01EmptyPortfolioHasBalanceZero stamp: 'fr 11/8/2020 19:20:27'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioWithASingleAccountWithNoTransactionsHasBalanceZero stamp: 'fr 11/8/2020 19:20:27'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioWithASingleAccountReflectsItsTransactionsValuesInItsBalance stamp: 'fr 11/8/2020 19:20:27'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithMultipleAccountsAndPortfoliosReflectsTheirTransactionsValuesInItsBalance stamp: 'fr 11/8/2020 19:20:27'!
PASSED!

!testRun: #PortfolioTest #test05EmptyPortfolioHasNotRegisteredAnyTransaction stamp: 'fr 11/8/2020 19:20:27'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioWithASingleAccountRegistersItsTransactions stamp: 'fr 11/8/2020 19:20:27'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioWithMulltipleAccountsAndPortfoliosRegistersAllTheirTransactions stamp: 'fr 11/8/2020 19:20:27'!
PASSED!

!testRun: #PortfolioTest #test08EmptyPortfolioDoesNotExhibitAnyTransaction stamp: 'fr 11/8/2020 19:20:27'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithASingleAccountExhibitsItsTransactions stamp: 'fr 11/8/2020 19:20:27'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioWithMultipleAccountsAndPortfoliosExhibitsAllTheirTransactionsCombined stamp: 'fr 11/8/2020 19:20:27'!
PASSED!

!testRun: #PortfolioTest #test11EmptyPortfolioDoesNotContainAnyAccount stamp: 'fr 11/8/2020 19:20:27'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioContainsAnAccountAfterItIsAdded stamp: 'fr 11/8/2020 19:20:27'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioContainsAnAccountAfterItIsAddedToItselfOrAnyOfItsDecendents stamp: 'fr 11/8/2020 19:20:27'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioDoesNotContainAnythingThatWasNotAddedToItself stamp: 'fr 11/8/2020 19:20:27'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotAddItself stamp: 'fr 11/8/2020 19:20:27'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioCanNotAddItsParent stamp: 'fr 11/8/2020 19:20:27'!
PASSED!

!testRun: #PortfolioTest #test17PortfolioCanNotAddAnyAncestor stamp: 'fr 11/8/2020 19:20:27'!
PASSED!

!testRun: #PortfolioTest #test18CanNotAddAnyPreviousMemberOfTheTree stamp: 'fr 11/8/2020 19:20:27'!
PASSED!

!testRun: #PortfolioTest #test19PortfolioCanNotAddAnotherOneWhichSharesChild stamp: 'fr 11/8/2020 19:20:27'!
PASSED!

!testRun: #PortfolioTest #test20AddingShouldBehaveIdenticallyAsCreatingAPortfolioWithAccounts stamp: 'fr 11/8/2020 19:20:27'!
PASSED!

  

port1 add: port2.  

port2 add: port1. 

port1 add: anAccount. !

port2 _ Portfolio new.!

port1 _ Portfolio new. !

port3 _ Portfolio new.!

port2 _ Portfolio with: (OrderedCollection with: port1).!

port3 _ Portfolio with: (OrderedCollection with: port1).!

port4 _ Portfolio new. !

port4 add: port2. !

port4 add: port3. !

port4 _ Portfolio new.!

port4 _ Portfolio with: (OrderedCollection with: port3 with: port2). !

port4 _ Portfolio new. !

port4 add: port3. !

port4 add: port2. !

port4 _ Portfolio with: (OrderedCollection with: port3 with: port2). !
!PortfolioTest methodsFor: 'tests' stamp: 'fr 11/8/2020 19:25:48'!
test21

	| portfolio parentPortfolio |
	portfolio _ Portfolio new.
	parentPortfolio _ Portfolio new.
	
	parentPortfolio add: portfolio.
	
	self  should: [portfolio add: parentPortfolio] 
		raise: Error 
		withMessageText: Portfolio canNotAddAccountErrorDescription! !
!PortfolioTest methodsFor: 'tests' stamp: 'fr 11/8/2020 19:27:01' prior: 50876505!
test21

	| portfolio parentPortfolio anotherParentPortfolio |
	portfolio _ Portfolio new. 
	parentPortfolio _ Portfolio with: (OrderedCollection with: portfolio).
	anotherParentPortfolio _ Portfolio with: (OrderedCollection with: portfolio). 
	
	self  should: [Portfolio with: (OrderedCollection with: parentPortfolio with: anotherParentPortfolio)] 
		raise: Error 
		withMessageText: Portfolio canNotAddAccountErrorDescription! !

!testRun: #PortfolioTest #test21 stamp: 'fr 11/8/2020 19:27:13'!
FAILURE!
!Portfolio methodsFor: 'initialization' stamp: 'fr 11/8/2020 19:27:58' prior: 50875605!
initializeWith: aReceptiveAccountList 
	
	accounts _ aReceptiveAccountList.
	parents _ OrderedCollection new.
	aReceptiveAccountList do: [:anAccount | 
		self add: anAccount
	]! !

!testRun: #PortfolioTest #test21 stamp: 'fr 11/8/2020 19:28:00'!
PASSED!

!testRun: #PortfolioTest #test01EmptyPortfolioHasBalanceZero stamp: 'fr 11/8/2020 19:28:00'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioWithASingleAccountWithNoTransactionsHasBalanceZero stamp: 'fr 11/8/2020 19:28:00'!
ERROR!

!testRun: #PortfolioTest #test03PortfolioWithASingleAccountReflectsItsTransactionsValuesInItsBalance stamp: 'fr 11/8/2020 19:28:00'!
ERROR!

!testRun: #PortfolioTest #test04PortfolioWithMultipleAccountsAndPortfoliosReflectsTheirTransactionsValuesInItsBalance stamp: 'fr 11/8/2020 19:28:00'!
ERROR!

!testRun: #PortfolioTest #test05EmptyPortfolioHasNotRegisteredAnyTransaction stamp: 'fr 11/8/2020 19:28:00'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioWithASingleAccountRegistersItsTransactions stamp: 'fr 11/8/2020 19:28:00'!
ERROR!

!testRun: #PortfolioTest #test07PortfolioWithMulltipleAccountsAndPortfoliosRegistersAllTheirTransactions stamp: 'fr 11/8/2020 19:28:00'!
ERROR!

!testRun: #PortfolioTest #test08EmptyPortfolioDoesNotExhibitAnyTransaction stamp: 'fr 11/8/2020 19:28:00'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithASingleAccountExhibitsItsTransactions stamp: 'fr 11/8/2020 19:28:00'!
ERROR!

!testRun: #PortfolioTest #test10PortfolioWithMultipleAccountsAndPortfoliosExhibitsAllTheirTransactionsCombined stamp: 'fr 11/8/2020 19:28:00'!
ERROR!

!testRun: #PortfolioTest #test11EmptyPortfolioDoesNotContainAnyAccount stamp: 'fr 11/8/2020 19:28:00'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioContainsAnAccountAfterItIsAdded stamp: 'fr 11/8/2020 19:28:00'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioContainsAnAccountAfterItIsAddedToItselfOrAnyOfItsDecendents stamp: 'fr 11/8/2020 19:28:00'!
ERROR!

!testRun: #PortfolioTest #test14PortfolioDoesNotContainAnythingThatWasNotAddedToItself stamp: 'fr 11/8/2020 19:28:00'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotAddItself stamp: 'fr 11/8/2020 19:28:00'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioCanNotAddItsParent stamp: 'fr 11/8/2020 19:28:00'!
ERROR!

!testRun: #PortfolioTest #test17PortfolioCanNotAddAnyAncestor stamp: 'fr 11/8/2020 19:28:00'!
ERROR!

!testRun: #PortfolioTest #test18CanNotAddAnyPreviousMemberOfTheTree stamp: 'fr 11/8/2020 19:28:00'!
ERROR!

!testRun: #PortfolioTest #test19PortfolioCanNotAddAnotherOneWhichSharesChild stamp: 'fr 11/8/2020 19:28:00'!
ERROR!

!testRun: #PortfolioTest #test20AddingShouldBehaveIdenticallyAsCreatingAPortfolioWithAccounts stamp: 'fr 11/8/2020 19:28:00'!
PASSED!

!testRun: #PortfolioTest #test21 stamp: 'fr 11/8/2020 19:28:00'!
ERROR!

!testRun: #PortfolioTest #test21 stamp: 'fr 11/8/2020 19:28:03'!
ERROR!

port1 _ Portfolio new. 
port2 _ Portfolio new.
port3 _ Portfolio new.!

port2 add: port1. !

port3 add: port1. !

!testRun: #PortfolioTest #test21 stamp: 'fr 11/8/2020 19:29:06'!
ERROR!

!testRun: #PortfolioTest #test21 stamp: 'fr 11/8/2020 19:29:24'!
ERROR!

!testRun: #PortfolioTest #test21 stamp: 'fr 11/8/2020 19:30:18'!
ERROR!
!Portfolio methodsFor: 'initialization' stamp: 'fr 11/8/2020 19:30:37' prior: 50876535!
initializeWith: aReceptiveAccountList 
	
	self initialize.
	aReceptiveAccountList do: [:anAccount | 
		self add: anAccount
	]! !

!testRun: #PortfolioTest #test21 stamp: 'fr 11/8/2020 19:30:48'!
PASSED!

!testRun: #PortfolioTest #test01EmptyPortfolioHasBalanceZero stamp: 'fr 11/8/2020 19:30:48'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioWithASingleAccountWithNoTransactionsHasBalanceZero stamp: 'fr 11/8/2020 19:30:48'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioWithASingleAccountReflectsItsTransactionsValuesInItsBalance stamp: 'fr 11/8/2020 19:30:48'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithMultipleAccountsAndPortfoliosReflectsTheirTransactionsValuesInItsBalance stamp: 'fr 11/8/2020 19:30:48'!
PASSED!

!testRun: #PortfolioTest #test05EmptyPortfolioHasNotRegisteredAnyTransaction stamp: 'fr 11/8/2020 19:30:48'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioWithASingleAccountRegistersItsTransactions stamp: 'fr 11/8/2020 19:30:48'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioWithMulltipleAccountsAndPortfoliosRegistersAllTheirTransactions stamp: 'fr 11/8/2020 19:30:48'!
PASSED!

!testRun: #PortfolioTest #test08EmptyPortfolioDoesNotExhibitAnyTransaction stamp: 'fr 11/8/2020 19:30:48'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithASingleAccountExhibitsItsTransactions stamp: 'fr 11/8/2020 19:30:48'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioWithMultipleAccountsAndPortfoliosExhibitsAllTheirTransactionsCombined stamp: 'fr 11/8/2020 19:30:48'!
PASSED!

!testRun: #PortfolioTest #test11EmptyPortfolioDoesNotContainAnyAccount stamp: 'fr 11/8/2020 19:30:48'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioContainsAnAccountAfterItIsAdded stamp: 'fr 11/8/2020 19:30:48'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioContainsAnAccountAfterItIsAddedToItselfOrAnyOfItsDecendents stamp: 'fr 11/8/2020 19:30:48'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioDoesNotContainAnythingThatWasNotAddedToItself stamp: 'fr 11/8/2020 19:30:48'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotAddItself stamp: 'fr 11/8/2020 19:30:48'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioCanNotAddItsParent stamp: 'fr 11/8/2020 19:30:48'!
PASSED!

!testRun: #PortfolioTest #test17PortfolioCanNotAddAnyAncestor stamp: 'fr 11/8/2020 19:30:48'!
PASSED!

!testRun: #PortfolioTest #test18CanNotAddAnyPreviousMemberOfTheTree stamp: 'fr 11/8/2020 19:30:48'!
PASSED!

!testRun: #PortfolioTest #test19PortfolioCanNotAddAnotherOneWhichSharesChild stamp: 'fr 11/8/2020 19:30:48'!
PASSED!

!testRun: #PortfolioTest #test20AddingShouldBehaveIdenticallyAsCreatingAPortfolioWithAccounts stamp: 'fr 11/8/2020 19:30:48'!
PASSED!

!testRun: #PortfolioTest #test21 stamp: 'fr 11/8/2020 19:30:48'!
PASSED!
!PortfolioTest methodsFor: 'tests' stamp: 'fr 11/8/2020 19:31:19'!
test21CreatingAPortfolioWithAccountsShouldBehaveIdenticallyAsAddingThem

	| portfolio parentPortfolio anotherParentPortfolio |
	portfolio _ Portfolio new. 
	parentPortfolio _ Portfolio with: (OrderedCollection with: portfolio).
	anotherParentPortfolio _ Portfolio with: (OrderedCollection with: portfolio). 
	
	self  should: [Portfolio with: (OrderedCollection with: parentPortfolio with: anotherParentPortfolio)] 
		raise: Error 
		withMessageText: Portfolio canNotAddAccountErrorDescription! !

!methodRemoval: PortfolioTest #test21 stamp: 'fr 11/8/2020 19:31:22'!
test21

	| portfolio parentPortfolio anotherParentPortfolio |
	portfolio _ Portfolio new. 
	parentPortfolio _ Portfolio with: (OrderedCollection with: portfolio).
	anotherParentPortfolio _ Portfolio with: (OrderedCollection with: portfolio). 
	
	self  should: [Portfolio with: (OrderedCollection with: parentPortfolio with: anotherParentPortfolio)] 
		raise: Error 
		withMessageText: Portfolio canNotAddAccountErrorDescription!

!testRun: #PortfolioTest #test21CreatingAPortfolioWithAccountsShouldBehaveIdenticallyAsAddingThem stamp: 'fr 11/8/2020 19:31:25'!
PASSED!

!testRun: #PortfolioTest #test01EmptyPortfolioHasBalanceZero stamp: 'fr 11/8/2020 19:31:25'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioWithASingleAccountWithNoTransactionsHasBalanceZero stamp: 'fr 11/8/2020 19:31:25'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioWithASingleAccountReflectsItsTransactionsValuesInItsBalance stamp: 'fr 11/8/2020 19:31:25'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithMultipleAccountsAndPortfoliosReflectsTheirTransactionsValuesInItsBalance stamp: 'fr 11/8/2020 19:31:25'!
PASSED!

!testRun: #PortfolioTest #test05EmptyPortfolioHasNotRegisteredAnyTransaction stamp: 'fr 11/8/2020 19:31:25'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioWithASingleAccountRegistersItsTransactions stamp: 'fr 11/8/2020 19:31:25'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioWithMulltipleAccountsAndPortfoliosRegistersAllTheirTransactions stamp: 'fr 11/8/2020 19:31:25'!
PASSED!

!testRun: #PortfolioTest #test08EmptyPortfolioDoesNotExhibitAnyTransaction stamp: 'fr 11/8/2020 19:31:25'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithASingleAccountExhibitsItsTransactions stamp: 'fr 11/8/2020 19:31:25'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioWithMultipleAccountsAndPortfoliosExhibitsAllTheirTransactionsCombined stamp: 'fr 11/8/2020 19:31:25'!
PASSED!

!testRun: #PortfolioTest #test11EmptyPortfolioDoesNotContainAnyAccount stamp: 'fr 11/8/2020 19:31:25'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioContainsAnAccountAfterItIsAdded stamp: 'fr 11/8/2020 19:31:25'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioContainsAnAccountAfterItIsAddedToItselfOrAnyOfItsDecendents stamp: 'fr 11/8/2020 19:31:25'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioDoesNotContainAnythingThatWasNotAddedToItself stamp: 'fr 11/8/2020 19:31:25'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotAddItself stamp: 'fr 11/8/2020 19:31:25'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioCanNotAddItsParent stamp: 'fr 11/8/2020 19:31:25'!
PASSED!

!testRun: #PortfolioTest #test17PortfolioCanNotAddAnyAncestor stamp: 'fr 11/8/2020 19:31:25'!
PASSED!

!testRun: #PortfolioTest #test18CanNotAddAnyPreviousMemberOfTheTree stamp: 'fr 11/8/2020 19:31:25'!
PASSED!

!testRun: #PortfolioTest #test19PortfolioCanNotAddAnotherOneWhichSharesChild stamp: 'fr 11/8/2020 19:31:25'!
PASSED!

!testRun: #PortfolioTest #test20AddingShouldBehaveIdenticallyAsCreatingAPortfolioWithAccounts stamp: 'fr 11/8/2020 19:31:25'!
PASSED!

!testRun: #PortfolioTest #test21CreatingAPortfolioWithAccountsShouldBehaveIdenticallyAsAddingThem stamp: 'fr 11/8/2020 19:31:25'!
PASSED!
!Portfolio methodsFor: 'initialization' stamp: 'fr 11/8/2020 19:32:11' prior: 50876638!
initializeWith: aReceptiveAccountList 
	
	self initialize.
	aReceptiveAccountList do: [:anAccount | self add: anAccount]! !
!Portfolio methodsFor: 'accounts management' stamp: 'fr 11/8/2020 19:33:14' prior: 50876198!
add: aReceptiveAccount 
	
	self validateAdding: aReceptiveAccount.
	accounts add: aReceptiveAccount.
	aReceptiveAccount hasBeenAddedBy: self! !
!ReceptiveAccount methodsFor: 'private' stamp: 'fr 11/8/2020 19:33:37'!
hasBeenAddedBy: aPortfolio
! !

!testRun: #PortfolioTest #test01EmptyPortfolioHasBalanceZero stamp: 'fr 11/8/2020 19:33:40'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioWithASingleAccountWithNoTransactionsHasBalanceZero stamp: 'fr 11/8/2020 19:33:40'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioWithASingleAccountReflectsItsTransactionsValuesInItsBalance stamp: 'fr 11/8/2020 19:33:40'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithMultipleAccountsAndPortfoliosReflectsTheirTransactionsValuesInItsBalance stamp: 'fr 11/8/2020 19:33:40'!
PASSED!

!testRun: #PortfolioTest #test05EmptyPortfolioHasNotRegisteredAnyTransaction stamp: 'fr 11/8/2020 19:33:40'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioWithASingleAccountRegistersItsTransactions stamp: 'fr 11/8/2020 19:33:40'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioWithMulltipleAccountsAndPortfoliosRegistersAllTheirTransactions stamp: 'fr 11/8/2020 19:33:40'!
PASSED!

!testRun: #PortfolioTest #test08EmptyPortfolioDoesNotExhibitAnyTransaction stamp: 'fr 11/8/2020 19:33:40'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithASingleAccountExhibitsItsTransactions stamp: 'fr 11/8/2020 19:33:40'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioWithMultipleAccountsAndPortfoliosExhibitsAllTheirTransactionsCombined stamp: 'fr 11/8/2020 19:33:40'!
PASSED!

!testRun: #PortfolioTest #test11EmptyPortfolioDoesNotContainAnyAccount stamp: 'fr 11/8/2020 19:33:40'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioContainsAnAccountAfterItIsAdded stamp: 'fr 11/8/2020 19:33:40'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioContainsAnAccountAfterItIsAddedToItselfOrAnyOfItsDecendents stamp: 'fr 11/8/2020 19:33:40'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioDoesNotContainAnythingThatWasNotAddedToItself stamp: 'fr 11/8/2020 19:33:40'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotAddItself stamp: 'fr 11/8/2020 19:33:40'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioCanNotAddItsParent stamp: 'fr 11/8/2020 19:33:40'!
PASSED!

!testRun: #PortfolioTest #test17PortfolioCanNotAddAnyAncestor stamp: 'fr 11/8/2020 19:33:40'!
PASSED!

!testRun: #PortfolioTest #test18CanNotAddAnyPreviousMemberOfTheTree stamp: 'fr 11/8/2020 19:33:40'!
PASSED!

!testRun: #PortfolioTest #test19PortfolioCanNotAddAnotherOneWhichSharesChild stamp: 'fr 11/8/2020 19:33:41'!
PASSED!

!testRun: #PortfolioTest #test20AddingShouldBehaveIdenticallyAsCreatingAPortfolioWithAccounts stamp: 'fr 11/8/2020 19:33:41'!
PASSED!

!testRun: #PortfolioTest #test21CreatingAPortfolioWithAccountsShouldBehaveIdenticallyAsAddingThem stamp: 'fr 11/8/2020 19:33:41'!
PASSED!
!ReceptiveAccount methodsFor: 'balance' stamp: 'fr 11/8/2020 19:34:11' prior: 50868029!
balance

	| balance |
	balance _ 0.
	transactions do: [:aTransaction | balance _ aTransaction applyToBalance: balance].
	^balance! !
!ReceptiveAccount methodsFor: 'testing' stamp: 'fr 11/8/2020 19:34:17' prior: 50867989!
hasRegistered: aTransaction

	^transactions includes: aTransaction 
! !
!Portfolio methodsFor: 'private - account lineage' stamp: 'fr 11/8/2020 20:29:33' prior: 50875767!
includes: aPortfolio 
	
	^self = aPortfolio or: [accounts anySatisfy: [:anAccount | (anAccount includes: aPortfolio)]]! !

!testRun: #PortfolioTest #test01EmptyPortfolioHasBalanceZero stamp: 'fr 11/8/2020 20:29:36'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioWithASingleAccountWithNoTransactionsHasBalanceZero stamp: 'fr 11/8/2020 20:29:36'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioWithASingleAccountReflectsItsTransactionsValuesInItsBalance stamp: 'fr 11/8/2020 20:29:36'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithMultipleAccountsAndPortfoliosReflectsTheirTransactionsValuesInItsBalance stamp: 'fr 11/8/2020 20:29:36'!
PASSED!

!testRun: #PortfolioTest #test05EmptyPortfolioHasNotRegisteredAnyTransaction stamp: 'fr 11/8/2020 20:29:36'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioWithASingleAccountRegistersItsTransactions stamp: 'fr 11/8/2020 20:29:36'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioWithMulltipleAccountsAndPortfoliosRegistersAllTheirTransactions stamp: 'fr 11/8/2020 20:29:36'!
PASSED!

!testRun: #PortfolioTest #test08EmptyPortfolioDoesNotExhibitAnyTransaction stamp: 'fr 11/8/2020 20:29:36'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithASingleAccountExhibitsItsTransactions stamp: 'fr 11/8/2020 20:29:36'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioWithMultipleAccountsAndPortfoliosExhibitsAllTheirTransactionsCombined stamp: 'fr 11/8/2020 20:29:36'!
PASSED!

!testRun: #PortfolioTest #test11EmptyPortfolioDoesNotContainAnyAccount stamp: 'fr 11/8/2020 20:29:36'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioContainsAnAccountAfterItIsAdded stamp: 'fr 11/8/2020 20:29:36'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioContainsAnAccountAfterItIsAddedToItselfOrAnyOfItsDecendents stamp: 'fr 11/8/2020 20:29:36'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioDoesNotContainAnythingThatWasNotAddedToItself stamp: 'fr 11/8/2020 20:29:36'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotAddItself stamp: 'fr 11/8/2020 20:29:36'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioCanNotAddItsParent stamp: 'fr 11/8/2020 20:29:36'!
PASSED!

!testRun: #PortfolioTest #test17PortfolioCanNotAddAnyAncestor stamp: 'fr 11/8/2020 20:29:36'!
PASSED!

!testRun: #PortfolioTest #test18CanNotAddAnyPreviousMemberOfTheTree stamp: 'fr 11/8/2020 20:29:36'!
PASSED!

!testRun: #PortfolioTest #test19PortfolioCanNotAddAnotherOneWhichSharesChild stamp: 'fr 11/8/2020 20:29:36'!
FAILURE!

!testRun: #PortfolioTest #test20AddingShouldBehaveIdenticallyAsCreatingAPortfolioWithAccounts stamp: 'fr 11/8/2020 20:29:36'!
PASSED!

!testRun: #PortfolioTest #test21CreatingAPortfolioWithAccountsShouldBehaveIdenticallyAsAddingThem stamp: 'fr 11/8/2020 20:29:36'!
FAILURE!

!testRun: #PortfolioTest #test01EmptyPortfolioHasBalanceZero stamp: 'fr 11/8/2020 20:29:47'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioWithASingleAccountWithNoTransactionsHasBalanceZero stamp: 'fr 11/8/2020 20:29:47'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioWithASingleAccountReflectsItsTransactionsValuesInItsBalance stamp: 'fr 11/8/2020 20:29:47'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithMultipleAccountsAndPortfoliosReflectsTheirTransactionsValuesInItsBalance stamp: 'fr 11/8/2020 20:29:47'!
PASSED!

!testRun: #PortfolioTest #test05EmptyPortfolioHasNotRegisteredAnyTransaction stamp: 'fr 11/8/2020 20:29:47'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioWithASingleAccountRegistersItsTransactions stamp: 'fr 11/8/2020 20:29:47'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioWithMulltipleAccountsAndPortfoliosRegistersAllTheirTransactions stamp: 'fr 11/8/2020 20:29:47'!
PASSED!

!testRun: #PortfolioTest #test08EmptyPortfolioDoesNotExhibitAnyTransaction stamp: 'fr 11/8/2020 20:29:47'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithASingleAccountExhibitsItsTransactions stamp: 'fr 11/8/2020 20:29:47'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioWithMultipleAccountsAndPortfoliosExhibitsAllTheirTransactionsCombined stamp: 'fr 11/8/2020 20:29:47'!
PASSED!

!testRun: #PortfolioTest #test11EmptyPortfolioDoesNotContainAnyAccount stamp: 'fr 11/8/2020 20:29:47'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioContainsAnAccountAfterItIsAdded stamp: 'fr 11/8/2020 20:29:47'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioContainsAnAccountAfterItIsAddedToItselfOrAnyOfItsDecendents stamp: 'fr 11/8/2020 20:29:47'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioDoesNotContainAnythingThatWasNotAddedToItself stamp: 'fr 11/8/2020 20:29:47'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotAddItself stamp: 'fr 11/8/2020 20:29:47'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioCanNotAddItsParent stamp: 'fr 11/8/2020 20:29:47'!
PASSED!

!testRun: #PortfolioTest #test17PortfolioCanNotAddAnyAncestor stamp: 'fr 11/8/2020 20:29:47'!
PASSED!

!testRun: #PortfolioTest #test18CanNotAddAnyPreviousMemberOfTheTree stamp: 'fr 11/8/2020 20:29:47'!
PASSED!

!testRun: #PortfolioTest #test19PortfolioCanNotAddAnotherOneWhichSharesChild stamp: 'fr 11/8/2020 20:29:47'!
FAILURE!

!testRun: #PortfolioTest #test20AddingShouldBehaveIdenticallyAsCreatingAPortfolioWithAccounts stamp: 'fr 11/8/2020 20:29:47'!
PASSED!

!testRun: #PortfolioTest #test21CreatingAPortfolioWithAccountsShouldBehaveIdenticallyAsAddingThem stamp: 'fr 11/8/2020 20:29:47'!
FAILURE!
!Portfolio methodsFor: 'private - account lineage' stamp: 'fr 11/8/2020 18:48:04' prior: 50876960!
includes: aPortfolio 
	
	^self = aPortfolio or: [accounts anySatisfy: [:anAccount | (anAccount includes: aPortfolio) or: [aPortfolio includes: anAccount]]]! !

!testRun: #PortfolioTest #test01EmptyPortfolioHasBalanceZero stamp: 'fr 11/8/2020 20:30:03'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioWithASingleAccountWithNoTransactionsHasBalanceZero stamp: 'fr 11/8/2020 20:30:03'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioWithASingleAccountReflectsItsTransactionsValuesInItsBalance stamp: 'fr 11/8/2020 20:30:03'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithMultipleAccountsAndPortfoliosReflectsTheirTransactionsValuesInItsBalance stamp: 'fr 11/8/2020 20:30:03'!
PASSED!

!testRun: #PortfolioTest #test05EmptyPortfolioHasNotRegisteredAnyTransaction stamp: 'fr 11/8/2020 20:30:03'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioWithASingleAccountRegistersItsTransactions stamp: 'fr 11/8/2020 20:30:03'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioWithMulltipleAccountsAndPortfoliosRegistersAllTheirTransactions stamp: 'fr 11/8/2020 20:30:03'!
PASSED!

!testRun: #PortfolioTest #test08EmptyPortfolioDoesNotExhibitAnyTransaction stamp: 'fr 11/8/2020 20:30:03'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithASingleAccountExhibitsItsTransactions stamp: 'fr 11/8/2020 20:30:03'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioWithMultipleAccountsAndPortfoliosExhibitsAllTheirTransactionsCombined stamp: 'fr 11/8/2020 20:30:03'!
PASSED!

!testRun: #PortfolioTest #test11EmptyPortfolioDoesNotContainAnyAccount stamp: 'fr 11/8/2020 20:30:03'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioContainsAnAccountAfterItIsAdded stamp: 'fr 11/8/2020 20:30:03'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioContainsAnAccountAfterItIsAddedToItselfOrAnyOfItsDecendents stamp: 'fr 11/8/2020 20:30:03'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioDoesNotContainAnythingThatWasNotAddedToItself stamp: 'fr 11/8/2020 20:30:03'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotAddItself stamp: 'fr 11/8/2020 20:30:03'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioCanNotAddItsParent stamp: 'fr 11/8/2020 20:30:03'!
PASSED!

!testRun: #PortfolioTest #test17PortfolioCanNotAddAnyAncestor stamp: 'fr 11/8/2020 20:30:03'!
PASSED!

!testRun: #PortfolioTest #test18CanNotAddAnyPreviousMemberOfTheTree stamp: 'fr 11/8/2020 20:30:03'!
PASSED!

!testRun: #PortfolioTest #test19PortfolioCanNotAddAnotherOneWhichSharesChild stamp: 'fr 11/8/2020 20:30:03'!
PASSED!

!testRun: #PortfolioTest #test20AddingShouldBehaveIdenticallyAsCreatingAPortfolioWithAccounts stamp: 'fr 11/8/2020 20:30:03'!
PASSED!

!testRun: #PortfolioTest #test21CreatingAPortfolioWithAccountsShouldBehaveIdenticallyAsAddingThem stamp: 'fr 11/8/2020 20:30:03'!
PASSED!
!Portfolio methodsFor: 'private - account lineage' stamp: 'fr 11/8/2020 20:30:13' prior: 50877131!
includes: aPortfolio 
	
	^self = aPortfolio or: [accounts anySatisfy: [:anAccount | (aPortfolio includes: anAccount)]]! !

!testRun: #PortfolioTest #test01EmptyPortfolioHasBalanceZero stamp: 'fr 11/8/2020 20:30:14'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioWithASingleAccountWithNoTransactionsHasBalanceZero stamp: 'fr 11/8/2020 20:30:14'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioWithASingleAccountReflectsItsTransactionsValuesInItsBalance stamp: 'fr 11/8/2020 20:30:14'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithMultipleAccountsAndPortfoliosReflectsTheirTransactionsValuesInItsBalance stamp: 'fr 11/8/2020 20:30:14'!
PASSED!

!testRun: #PortfolioTest #test05EmptyPortfolioHasNotRegisteredAnyTransaction stamp: 'fr 11/8/2020 20:30:14'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioWithASingleAccountRegistersItsTransactions stamp: 'fr 11/8/2020 20:30:14'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioWithMulltipleAccountsAndPortfoliosRegistersAllTheirTransactions stamp: 'fr 11/8/2020 20:30:14'!
PASSED!

!testRun: #PortfolioTest #test08EmptyPortfolioDoesNotExhibitAnyTransaction stamp: 'fr 11/8/2020 20:30:14'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithASingleAccountExhibitsItsTransactions stamp: 'fr 11/8/2020 20:30:14'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioWithMultipleAccountsAndPortfoliosExhibitsAllTheirTransactionsCombined stamp: 'fr 11/8/2020 20:30:14'!
PASSED!

!testRun: #PortfolioTest #test11EmptyPortfolioDoesNotContainAnyAccount stamp: 'fr 11/8/2020 20:30:14'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioContainsAnAccountAfterItIsAdded stamp: 'fr 11/8/2020 20:30:14'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioContainsAnAccountAfterItIsAddedToItselfOrAnyOfItsDecendents stamp: 'fr 11/8/2020 20:30:14'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioDoesNotContainAnythingThatWasNotAddedToItself stamp: 'fr 11/8/2020 20:30:14'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotAddItself stamp: 'fr 11/8/2020 20:30:14'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioCanNotAddItsParent stamp: 'fr 11/8/2020 20:30:14'!
PASSED!

!testRun: #PortfolioTest #test17PortfolioCanNotAddAnyAncestor stamp: 'fr 11/8/2020 20:30:14'!
PASSED!

!testRun: #PortfolioTest #test18CanNotAddAnyPreviousMemberOfTheTree stamp: 'fr 11/8/2020 20:30:14'!
PASSED!

!testRun: #PortfolioTest #test19PortfolioCanNotAddAnotherOneWhichSharesChild stamp: 'fr 11/8/2020 20:30:14'!
PASSED!

!testRun: #PortfolioTest #test20AddingShouldBehaveIdenticallyAsCreatingAPortfolioWithAccounts stamp: 'fr 11/8/2020 20:30:14'!
PASSED!

!testRun: #PortfolioTest #test21CreatingAPortfolioWithAccountsShouldBehaveIdenticallyAsAddingThem stamp: 'fr 11/8/2020 20:30:14'!
PASSED!
!Portfolio methodsFor: 'private - account lineage' stamp: 'fr 11/8/2020 20:31:10' prior: 50877221!
includes: aPortfolio 
	
	^self = aPortfolio or: [accounts anySatisfy: [:anAccount | (anAccount includes: aPortfolio) or: [aPortfolio includes: anAccount]]]! !
!Portfolio methodsFor: 'private - account lineage' stamp: 'fr 11/8/2020 20:31:22' prior: 50877310!
includes: aPortfolio 
	
	^self = aPortfolio or: [accounts anySatisfy: [:anAccount | (aPortfolio includes: anAccount)]]! !

!testRun: #PortfolioTest #test01EmptyPortfolioHasBalanceZero stamp: 'fr 11/8/2020 20:31:48'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioWithASingleAccountWithNoTransactionsHasBalanceZero stamp: 'fr 11/8/2020 20:31:48'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioWithASingleAccountReflectsItsTransactionsValuesInItsBalance stamp: 'fr 11/8/2020 20:31:48'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithMultipleAccountsAndPortfoliosReflectsTheirTransactionsValuesInItsBalance stamp: 'fr 11/8/2020 20:31:48'!
PASSED!

!testRun: #PortfolioTest #test05EmptyPortfolioHasNotRegisteredAnyTransaction stamp: 'fr 11/8/2020 20:31:48'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioWithASingleAccountRegistersItsTransactions stamp: 'fr 11/8/2020 20:31:48'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioWithMulltipleAccountsAndPortfoliosRegistersAllTheirTransactions stamp: 'fr 11/8/2020 20:31:48'!
PASSED!

!testRun: #PortfolioTest #test08EmptyPortfolioDoesNotExhibitAnyTransaction stamp: 'fr 11/8/2020 20:31:48'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithASingleAccountExhibitsItsTransactions stamp: 'fr 11/8/2020 20:31:48'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioWithMultipleAccountsAndPortfoliosExhibitsAllTheirTransactionsCombined stamp: 'fr 11/8/2020 20:31:48'!
PASSED!

!testRun: #PortfolioTest #test11EmptyPortfolioDoesNotContainAnyAccount stamp: 'fr 11/8/2020 20:31:48'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioContainsAnAccountAfterItIsAdded stamp: 'fr 11/8/2020 20:31:48'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioContainsAnAccountAfterItIsAddedToItselfOrAnyOfItsDecendents stamp: 'fr 11/8/2020 20:31:48'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioDoesNotContainAnythingThatWasNotAddedToItself stamp: 'fr 11/8/2020 20:31:48'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotAddItself stamp: 'fr 11/8/2020 20:31:48'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioCanNotAddItsParent stamp: 'fr 11/8/2020 20:31:48'!
PASSED!

!testRun: #PortfolioTest #test17PortfolioCanNotAddAnyAncestor stamp: 'fr 11/8/2020 20:31:48'!
PASSED!

!testRun: #PortfolioTest #test18CanNotAddAnyPreviousMemberOfTheTree stamp: 'fr 11/8/2020 20:31:48'!
PASSED!

!testRun: #PortfolioTest #test19PortfolioCanNotAddAnotherOneWhichSharesChild stamp: 'fr 11/8/2020 20:31:48'!
PASSED!

!testRun: #PortfolioTest #test20AddingShouldBehaveIdenticallyAsCreatingAPortfolioWithAccounts stamp: 'fr 11/8/2020 20:31:48'!
PASSED!

!testRun: #PortfolioTest #test21CreatingAPortfolioWithAccountsShouldBehaveIdenticallyAsAddingThem stamp: 'fr 11/8/2020 20:31:48'!
PASSED!

port1 _ Portfolio new. 
port2 _ Portfolio new.
port3 _ Portfolio new.!

port2 add: port1. !

port2 add: port1. !

port1 _ Portfolio new. 
port2 _ Portfolio new.
port3 _ Portfolio new.
!

port1 add: port2.!

port1 add: port3. !

port2 add: port3. !

port1 _ Portfolio new. 
port2 _ Portfolio new.
port3 _ Portfolio new.!

port1 add: port2.!

port2 add: port3. !

port1 add: port3. !

port1 add: port3.!

port1 _ Portfolio new. 
port2 _ Portfolio new.
port3 _ Portfolio new.

port1 add: port2.

port2 add: port3. 

port1 add: port3.!
!Portfolio methodsFor: 'private - account lineage' stamp: 'fr 11/8/2020 20:36:49' prior: 50877319!
includes: aPortfolio 
	
	^self = aPortfolio or: [accounts anySatisfy: [:anAccount | (anAccount includes: aPortfolio) or: [aPortfolio includes: anAccount]]]! !

port1 _ Portfolio new. 
port2 _ Portfolio new.
port3 _ Portfolio new.

port1 add: port2.

port2 add: port3. 

port1 add: port3.!
!Portfolio methodsFor: 'private - account lineage' stamp: 'fr 11/8/2020 20:37:15' prior: 50877425!
includes: aPortfolio 
	
	^self = aPortfolio or: [accounts anySatisfy: [:anAccount | (aPortfolio includes: anAccount)]]! !
!PortfolioTest methodsFor: 'tests' stamp: 'fr 11/8/2020 20:37:59'!
test22PortfolioCanNotAddDuplicateIndirectly

	| portfolio parentPortfolio anotherParentPortfolio |
	portfolio _ Portfolio new. 
	parentPortfolio _ Portfolio with: (OrderedCollection with: portfolio).
	anotherParentPortfolio _ Portfolio with: (OrderedCollection with: portfolio). 
	
	self  should: [Portfolio with: (OrderedCollection with: parentPortfolio with: anotherParentPortfolio)] 
		raise: Error 
		withMessageText: Portfolio canNotAddAccountErrorDescription! !
!PortfolioTest methodsFor: 'tests' stamp: 'fr 11/8/2020 20:39:10' prior: 50877444!
test22PortfolioCanNotAddDuplicateIndirectly

	| portfolio parentPortfolio rootPortfolio |
	portfolio _ Portfolio new.
	parentPortfolio _ Portfolio with: (OrderedCollection with: portfolio).
	rootPortfolio _ Portfolio with: (OrderedCollection with: parentPortfolio).
	
	self  should: [rootPortfolio add: portfolio] 
		raise: Error 
		withMessageText: Portfolio canNotAddAccountErrorDescription! !

!testRun: #PortfolioTest #test01EmptyPortfolioHasBalanceZero stamp: 'fr 11/8/2020 20:39:24'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioWithASingleAccountWithNoTransactionsHasBalanceZero stamp: 'fr 11/8/2020 20:39:24'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioWithASingleAccountReflectsItsTransactionsValuesInItsBalance stamp: 'fr 11/8/2020 20:39:24'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithMultipleAccountsAndPortfoliosReflectsTheirTransactionsValuesInItsBalance stamp: 'fr 11/8/2020 20:39:24'!
PASSED!

!testRun: #PortfolioTest #test05EmptyPortfolioHasNotRegisteredAnyTransaction stamp: 'fr 11/8/2020 20:39:24'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioWithASingleAccountRegistersItsTransactions stamp: 'fr 11/8/2020 20:39:24'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioWithMulltipleAccountsAndPortfoliosRegistersAllTheirTransactions stamp: 'fr 11/8/2020 20:39:24'!
PASSED!

!testRun: #PortfolioTest #test08EmptyPortfolioDoesNotExhibitAnyTransaction stamp: 'fr 11/8/2020 20:39:24'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithASingleAccountExhibitsItsTransactions stamp: 'fr 11/8/2020 20:39:24'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioWithMultipleAccountsAndPortfoliosExhibitsAllTheirTransactionsCombined stamp: 'fr 11/8/2020 20:39:24'!
PASSED!

!testRun: #PortfolioTest #test11EmptyPortfolioDoesNotContainAnyAccount stamp: 'fr 11/8/2020 20:39:24'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioContainsAnAccountAfterItIsAdded stamp: 'fr 11/8/2020 20:39:24'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioContainsAnAccountAfterItIsAddedToItselfOrAnyOfItsDecendents stamp: 'fr 11/8/2020 20:39:24'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioDoesNotContainAnythingThatWasNotAddedToItself stamp: 'fr 11/8/2020 20:39:24'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotAddItself stamp: 'fr 11/8/2020 20:39:24'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioCanNotAddItsParent stamp: 'fr 11/8/2020 20:39:24'!
PASSED!

!testRun: #PortfolioTest #test17PortfolioCanNotAddAnyAncestor stamp: 'fr 11/8/2020 20:39:24'!
PASSED!

!testRun: #PortfolioTest #test18CanNotAddAnyPreviousMemberOfTheTree stamp: 'fr 11/8/2020 20:39:24'!
PASSED!

!testRun: #PortfolioTest #test19PortfolioCanNotAddAnotherOneWhichSharesChild stamp: 'fr 11/8/2020 20:39:24'!
PASSED!

!testRun: #PortfolioTest #test20AddingShouldBehaveIdenticallyAsCreatingAPortfolioWithAccounts stamp: 'fr 11/8/2020 20:39:24'!
PASSED!

!testRun: #PortfolioTest #test21CreatingAPortfolioWithAccountsShouldBehaveIdenticallyAsAddingThem stamp: 'fr 11/8/2020 20:39:24'!
PASSED!

!testRun: #PortfolioTest #test22PortfolioCanNotAddDuplicateIndirectly stamp: 'fr 11/8/2020 20:39:24'!
FAILURE!

!testRun: #PortfolioTest #test22PortfolioCanNotAddDuplicateIndirectly stamp: 'fr 11/8/2020 20:39:24'!
FAILURE!
!Portfolio methodsFor: 'private - account lineage' stamp: 'fr 11/8/2020 20:40:15' prior: 50877438!
includes: aPortfolio 
	
	^self = aPortfolio or: [accounts anySatisfy: [:anAccount | (anAccount includes: aPortfolio) or: [aPortfolio includes: anAccount]]]! !

!testRun: #PortfolioTest #test22PortfolioCanNotAddDuplicateIndirectly stamp: 'fr 11/8/2020 20:40:16'!
PASSED!

!testRun: #PortfolioTest #test01EmptyPortfolioHasBalanceZero stamp: 'fr 11/8/2020 20:40:19'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioWithASingleAccountWithNoTransactionsHasBalanceZero stamp: 'fr 11/8/2020 20:40:19'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioWithASingleAccountReflectsItsTransactionsValuesInItsBalance stamp: 'fr 11/8/2020 20:40:19'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithMultipleAccountsAndPortfoliosReflectsTheirTransactionsValuesInItsBalance stamp: 'fr 11/8/2020 20:40:19'!
PASSED!

!testRun: #PortfolioTest #test05EmptyPortfolioHasNotRegisteredAnyTransaction stamp: 'fr 11/8/2020 20:40:19'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioWithASingleAccountRegistersItsTransactions stamp: 'fr 11/8/2020 20:40:19'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioWithMulltipleAccountsAndPortfoliosRegistersAllTheirTransactions stamp: 'fr 11/8/2020 20:40:19'!
PASSED!

!testRun: #PortfolioTest #test08EmptyPortfolioDoesNotExhibitAnyTransaction stamp: 'fr 11/8/2020 20:40:19'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithASingleAccountExhibitsItsTransactions stamp: 'fr 11/8/2020 20:40:19'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioWithMultipleAccountsAndPortfoliosExhibitsAllTheirTransactionsCombined stamp: 'fr 11/8/2020 20:40:19'!
PASSED!

!testRun: #PortfolioTest #test11EmptyPortfolioDoesNotContainAnyAccount stamp: 'fr 11/8/2020 20:40:19'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioContainsAnAccountAfterItIsAdded stamp: 'fr 11/8/2020 20:40:19'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioContainsAnAccountAfterItIsAddedToItselfOrAnyOfItsDecendents stamp: 'fr 11/8/2020 20:40:19'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioDoesNotContainAnythingThatWasNotAddedToItself stamp: 'fr 11/8/2020 20:40:19'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotAddItself stamp: 'fr 11/8/2020 20:40:19'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioCanNotAddItsParent stamp: 'fr 11/8/2020 20:40:19'!
PASSED!

!testRun: #PortfolioTest #test17PortfolioCanNotAddAnyAncestor stamp: 'fr 11/8/2020 20:40:19'!
PASSED!

!testRun: #PortfolioTest #test18CanNotAddAnyPreviousMemberOfTheTree stamp: 'fr 11/8/2020 20:40:19'!
PASSED!

!testRun: #PortfolioTest #test19PortfolioCanNotAddAnotherOneWhichSharesChild stamp: 'fr 11/8/2020 20:40:19'!
PASSED!

!testRun: #PortfolioTest #test20AddingShouldBehaveIdenticallyAsCreatingAPortfolioWithAccounts stamp: 'fr 11/8/2020 20:40:19'!
PASSED!

!testRun: #PortfolioTest #test21CreatingAPortfolioWithAccountsShouldBehaveIdenticallyAsAddingThem stamp: 'fr 11/8/2020 20:40:19'!
PASSED!

!testRun: #PortfolioTest #test22PortfolioCanNotAddDuplicateIndirectly stamp: 'fr 11/8/2020 20:40:19'!
PASSED!
!PortfolioTest methodsFor: 'tests' stamp: 'fr 11/8/2020 20:40:48'!
test18PortfolioCanNotAddAnyPreviousMemberOfTheTree

	| leafPortfolio middlePortfolio rootPortfolio anotherLeafPortfolio |
	leafPortfolio _ Portfolio new.
	anotherLeafPortfolio _ Portfolio new.
	middlePortfolio _ Portfolio with: (OrderedCollection with: leafPortfolio).
	rootPortfolio _ Portfolio with: (OrderedCollection with: middlePortfolio with: anotherLeafPortfolio).
	
	self  should: [leafPortfolio add: anotherLeafPortfolio] 
		raise: Error 
		withMessageText: Portfolio canNotAddAccountErrorDescription! !

!methodRemoval: PortfolioTest #test18CanNotAddAnyPreviousMemberOfTheTree stamp: 'fr 11/8/2020 20:40:48'!
test18CanNotAddAnyPreviousMemberOfTheTree

	| leafPortfolio middlePortfolio rootPortfolio anotherLeafPortfolio |
	leafPortfolio _ Portfolio new.
	anotherLeafPortfolio _ Portfolio new.
	middlePortfolio _ Portfolio with: (OrderedCollection with: leafPortfolio).
	rootPortfolio _ Portfolio with: (OrderedCollection with: middlePortfolio with: anotherLeafPortfolio).
	
	self  should: [leafPortfolio add: anotherLeafPortfolio] 
		raise: Error 
		withMessageText: Portfolio canNotAddAccountErrorDescription!
!PortfolioTest methodsFor: 'tests' stamp: 'fr 11/8/2020 20:41:19'!
test22PortfolioCanNotAddDuplicateAccountIndirectly

	| portfolio parentPortfolio rootPortfolio |
	portfolio _ Portfolio new.
	parentPortfolio _ Portfolio with: (OrderedCollection with: portfolio).
	rootPortfolio _ Portfolio with: (OrderedCollection with: parentPortfolio).
	
	self  should: [rootPortfolio add: portfolio] 
		raise: Error 
		withMessageText: Portfolio canNotAddAccountErrorDescription! !

!methodRemoval: PortfolioTest #test22PortfolioCanNotAddDuplicateIndirectly stamp: 'fr 11/8/2020 20:41:19'!
test22PortfolioCanNotAddDuplicateIndirectly

	| portfolio parentPortfolio rootPortfolio |
	portfolio _ Portfolio new.
	parentPortfolio _ Portfolio with: (OrderedCollection with: portfolio).
	rootPortfolio _ Portfolio with: (OrderedCollection with: parentPortfolio).
	
	self  should: [rootPortfolio add: portfolio] 
		raise: Error 
		withMessageText: Portfolio canNotAddAccountErrorDescription!

port1 _ Portfolio new. 
port2 _ Portfolio new.
port3 _ Portfolio new.
port4 _ Portfolio new.!

port1 add: port2. !


port1 _ Portfolio new. 
port2 _ Portfolio new.
port3 _ Portfolio new.
port4 _ Portfolio new.!

port1 add: port2. 
port2 add: port3. 
port3 add: port4. !

port1 add: port4. !

----SNAPSHOT----(8 November 2020 20:49:36) CuisUniversity-4384.image priorSource: 17408699!

----QUIT----(8 November 2020 20:50:44) CuisUniversity-4384.image priorSource: 17474892!

----STARTUP---- (8 November 2020 20:51:14) as /home/fede/Documentos/Facultad/Inge1/Cuises/linux64/CuisUniversity-4384.image!


----SNAPSHOT----(8 November 2020 20:55:21) CuisUniversity-4384.image priorSource: 17474985!

port1 _ Portfolio new. 
port2 _ Portfolio new.
port3 _ Portfolio new.
port4 _ Portfolio new.!

port1 add: port2. 
port1 add: port3. 
port3 add: port4. !

port5 _ Portfolio new. 
port6 _ Portfolio new.
port7 _ Portfolio new.!

port5 add: 6.!

port5 add: port6.!

port1 _ Portfolio new. 
port2 _ Portfolio new.
port3 _ Portfolio new.
port4 _ Portfolio new.

port5 _ Portfolio new. 
port6 _ Portfolio new.
port7 _ Portfolio new.!

port1 add: port2. 
port1 add: port3. 
port3 add: port4.!

port5 add: port6. !

port5 add. port7. !

port1 _ Portfolio new. 
port2 _ Portfolio new.
port3 _ Portfolio new.
port4 _ Portfolio new.

port5 _ Portfolio new. 
port6 _ Portfolio new.
port7 _ Portfolio new.!

port1 add: port2. 
port1 add: port3. 
port3 add: port4. !

port5 add: port6. 
port5 add. port7. !

port1 _ Portfolio new. 
port2 _ Portfolio new.
port3 _ Portfolio new.
port4 _ Portfolio new.

port5 _ Portfolio new. 
port6 _ Portfolio new.
port7 _ Portfolio new.!

port1 add: port2. 
port1 add: port3. 
port3 add: port4.!

port5 add: port6. !

port1 _ Portfolio new. 
port2 _ Portfolio new.
port3 _ Portfolio new.
port4 _ Portfolio new.

port5 _ Portfolio new. 
port6 _ Portfolio new.
port7 _ Portfolio new.!

port1 add: port2. 
port1 add: port3. 
port3 add: port4. 

port5 add: port6. 
port5 add: port7. !

port6 add: port4. !

port1 add: port5. !

----SNAPSHOT----(8 November 2020 20:58:30) CuisUniversity-4384.image priorSource: 17475201!

----SNAPSHOT----(8 November 2020 20:58:54) CuisUniversity-4384.image priorSource: 17476638!
!Portfolio methodsFor: 'transactions' stamp: 'fr 11/8/2020 21:08:37' prior: 50871540!
hasRegistered: aTransaction 
	
	^accounts anySatisfy: [:anAccount | anAccount hasRegistered: aTransaction]! !
!Portfolio methodsFor: 'private - account management' stamp: 'fr 11/8/2020 21:09:05' prior: 50877567!
includes: anAccountToCheck 
	
	^self = anAccountToCheck or: [accounts anySatisfy: [:anAccount | (anAccount includes: anAccountToCheck) or: [anAccountToCheck includes: anAccount]]]! !

!testRun: #PortfolioTest #test01EmptyPortfolioHasBalanceZero stamp: 'fr 11/8/2020 21:09:08'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioWithASingleAccountWithNoTransactionsHasBalanceZero stamp: 'fr 11/8/2020 21:09:08'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioWithASingleAccountReflectsItsTransactionsValuesInItsBalance stamp: 'fr 11/8/2020 21:09:08'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithMultipleAccountsAndPortfoliosReflectsTheirTransactionsValuesInItsBalance stamp: 'fr 11/8/2020 21:09:08'!
PASSED!

!testRun: #PortfolioTest #test05EmptyPortfolioHasNotRegisteredAnyTransaction stamp: 'fr 11/8/2020 21:09:08'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioWithASingleAccountRegistersItsTransactions stamp: 'fr 11/8/2020 21:09:08'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioWithMulltipleAccountsAndPortfoliosRegistersAllTheirTransactions stamp: 'fr 11/8/2020 21:09:08'!
PASSED!

!testRun: #PortfolioTest #test08EmptyPortfolioDoesNotExhibitAnyTransaction stamp: 'fr 11/8/2020 21:09:08'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithASingleAccountExhibitsItsTransactions stamp: 'fr 11/8/2020 21:09:08'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioWithMultipleAccountsAndPortfoliosExhibitsAllTheirTransactionsCombined stamp: 'fr 11/8/2020 21:09:08'!
PASSED!

!testRun: #PortfolioTest #test11EmptyPortfolioDoesNotContainAnyAccount stamp: 'fr 11/8/2020 21:09:08'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioContainsAnAccountAfterItIsAdded stamp: 'fr 11/8/2020 21:09:08'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioContainsAnAccountAfterItIsAddedToItselfOrAnyOfItsDecendents stamp: 'fr 11/8/2020 21:09:08'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioDoesNotContainAnythingThatWasNotAddedToItself stamp: 'fr 11/8/2020 21:09:08'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotAddItself stamp: 'fr 11/8/2020 21:09:08'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioCanNotAddItsParent stamp: 'fr 11/8/2020 21:09:08'!
PASSED!

!testRun: #PortfolioTest #test17PortfolioCanNotAddAnyAncestor stamp: 'fr 11/8/2020 21:09:08'!
PASSED!

!testRun: #PortfolioTest #test18PortfolioCanNotAddAnyPreviousMemberOfTheTree stamp: 'fr 11/8/2020 21:09:08'!
PASSED!

!testRun: #PortfolioTest #test19PortfolioCanNotAddAnotherOneWhichSharesChild stamp: 'fr 11/8/2020 21:09:08'!
PASSED!

!testRun: #PortfolioTest #test20AddingShouldBehaveIdenticallyAsCreatingAPortfolioWithAccounts stamp: 'fr 11/8/2020 21:09:08'!
PASSED!

!testRun: #PortfolioTest #test21CreatingAPortfolioWithAccountsShouldBehaveIdenticallyAsAddingThem stamp: 'fr 11/8/2020 21:09:08'!
PASSED!

!testRun: #PortfolioTest #test22PortfolioCanNotAddDuplicateAccountIndirectly stamp: 'fr 11/8/2020 21:09:08'!
PASSED!
!Portfolio methodsFor: 'accounts management' stamp: 'fr 11/8/2020 21:09:27' prior: 50876854!
add: anAccount 
	
	self validateAdding: anAccount.
	accounts add: anAccount.
	anAccount hasBeenAddedBy: self! !

!testRun: #PortfolioTest #test01EmptyPortfolioHasBalanceZero stamp: 'fr 11/8/2020 21:09:29'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioWithASingleAccountWithNoTransactionsHasBalanceZero stamp: 'fr 11/8/2020 21:09:29'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioWithASingleAccountReflectsItsTransactionsValuesInItsBalance stamp: 'fr 11/8/2020 21:09:29'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithMultipleAccountsAndPortfoliosReflectsTheirTransactionsValuesInItsBalance stamp: 'fr 11/8/2020 21:09:29'!
PASSED!

!testRun: #PortfolioTest #test05EmptyPortfolioHasNotRegisteredAnyTransaction stamp: 'fr 11/8/2020 21:09:29'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioWithASingleAccountRegistersItsTransactions stamp: 'fr 11/8/2020 21:09:29'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioWithMulltipleAccountsAndPortfoliosRegistersAllTheirTransactions stamp: 'fr 11/8/2020 21:09:29'!
PASSED!

!testRun: #PortfolioTest #test08EmptyPortfolioDoesNotExhibitAnyTransaction stamp: 'fr 11/8/2020 21:09:29'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithASingleAccountExhibitsItsTransactions stamp: 'fr 11/8/2020 21:09:29'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioWithMultipleAccountsAndPortfoliosExhibitsAllTheirTransactionsCombined stamp: 'fr 11/8/2020 21:09:29'!
PASSED!

!testRun: #PortfolioTest #test11EmptyPortfolioDoesNotContainAnyAccount stamp: 'fr 11/8/2020 21:09:29'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioContainsAnAccountAfterItIsAdded stamp: 'fr 11/8/2020 21:09:29'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioContainsAnAccountAfterItIsAddedToItselfOrAnyOfItsDecendents stamp: 'fr 11/8/2020 21:09:29'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioDoesNotContainAnythingThatWasNotAddedToItself stamp: 'fr 11/8/2020 21:09:29'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotAddItself stamp: 'fr 11/8/2020 21:09:29'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioCanNotAddItsParent stamp: 'fr 11/8/2020 21:09:29'!
PASSED!

!testRun: #PortfolioTest #test17PortfolioCanNotAddAnyAncestor stamp: 'fr 11/8/2020 21:09:29'!
PASSED!

!testRun: #PortfolioTest #test18PortfolioCanNotAddAnyPreviousMemberOfTheTree stamp: 'fr 11/8/2020 21:09:29'!
PASSED!

!testRun: #PortfolioTest #test19PortfolioCanNotAddAnotherOneWhichSharesChild stamp: 'fr 11/8/2020 21:09:29'!
PASSED!

!testRun: #PortfolioTest #test20AddingShouldBehaveIdenticallyAsCreatingAPortfolioWithAccounts stamp: 'fr 11/8/2020 21:09:29'!
PASSED!

!testRun: #PortfolioTest #test21CreatingAPortfolioWithAccountsShouldBehaveIdenticallyAsAddingThem stamp: 'fr 11/8/2020 21:09:29'!
PASSED!

!testRun: #PortfolioTest #test22PortfolioCanNotAddDuplicateAccountIndirectly stamp: 'fr 11/8/2020 21:09:29'!
PASSED!
!Portfolio methodsFor: 'accounts management' stamp: 'fr 11/8/2020 21:09:48' prior: 50874103!
contains: anAccountToCheck 
	
	^(accounts includes: anAccountToCheck) or: [accounts anySatisfy: [:anAccount | anAccount contains: anAccountToCheck]]! !
!Portfolio methodsFor: 'accounts management' stamp: 'fr 11/8/2020 21:10:09' prior: 50876065!
validateAdding: anAccountToValidate

	^(self isReachableFromRoots: anAccountToValidate) ifTrue: [self signalCanNotAddAccountError]! !
!Portfolio methodsFor: 'transactions' stamp: 'fr 11/8/2020 21:11:29' prior: 50871741!
transactions
	
	| transactions |
	transactions _ OrderedCollection new.
	"accounts do: [:anAccount | transactions addAllLast: anAccount transactions]."
	self collectTransactionsInto: transactions.
	^transactions! !
!Portfolio methodsFor: 'transactions' stamp: 'fr 11/8/2020 21:13:44'!
collectTransactionsInto: aTransactionsList

	^accounts inject: aTransactionsList into: [:transactionsList :anAccount | anAccount collectTransactionsInto: transactionsList]
	! !
!ReceptiveAccount methodsFor: 'transactions' stamp: 'fr 11/8/2020 21:14:39'!
collectTransactionsInto: aTransactionsList

	^aTransactionsList addAllLast: transactions copy! !

!testRun: #PortfolioTest #test01EmptyPortfolioHasBalanceZero stamp: 'fr 11/8/2020 21:14:43'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioWithASingleAccountWithNoTransactionsHasBalanceZero stamp: 'fr 11/8/2020 21:14:43'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioWithASingleAccountReflectsItsTransactionsValuesInItsBalance stamp: 'fr 11/8/2020 21:14:43'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithMultipleAccountsAndPortfoliosReflectsTheirTransactionsValuesInItsBalance stamp: 'fr 11/8/2020 21:14:43'!
PASSED!

!testRun: #PortfolioTest #test05EmptyPortfolioHasNotRegisteredAnyTransaction stamp: 'fr 11/8/2020 21:14:43'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioWithASingleAccountRegistersItsTransactions stamp: 'fr 11/8/2020 21:14:43'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioWithMulltipleAccountsAndPortfoliosRegistersAllTheirTransactions stamp: 'fr 11/8/2020 21:14:43'!
PASSED!

!testRun: #PortfolioTest #test08EmptyPortfolioDoesNotExhibitAnyTransaction stamp: 'fr 11/8/2020 21:14:43'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithASingleAccountExhibitsItsTransactions stamp: 'fr 11/8/2020 21:14:43'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioWithMultipleAccountsAndPortfoliosExhibitsAllTheirTransactionsCombined stamp: 'fr 11/8/2020 21:14:43'!
FAILURE!

!testRun: #PortfolioTest #test11EmptyPortfolioDoesNotContainAnyAccount stamp: 'fr 11/8/2020 21:14:43'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioContainsAnAccountAfterItIsAdded stamp: 'fr 11/8/2020 21:14:43'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioContainsAnAccountAfterItIsAddedToItselfOrAnyOfItsDecendents stamp: 'fr 11/8/2020 21:14:43'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioDoesNotContainAnythingThatWasNotAddedToItself stamp: 'fr 11/8/2020 21:14:43'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotAddItself stamp: 'fr 11/8/2020 21:14:43'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioCanNotAddItsParent stamp: 'fr 11/8/2020 21:14:43'!
PASSED!

!testRun: #PortfolioTest #test17PortfolioCanNotAddAnyAncestor stamp: 'fr 11/8/2020 21:14:43'!
PASSED!

!testRun: #PortfolioTest #test18PortfolioCanNotAddAnyPreviousMemberOfTheTree stamp: 'fr 11/8/2020 21:14:43'!
PASSED!

!testRun: #PortfolioTest #test19PortfolioCanNotAddAnotherOneWhichSharesChild stamp: 'fr 11/8/2020 21:14:43'!
PASSED!

!testRun: #PortfolioTest #test20AddingShouldBehaveIdenticallyAsCreatingAPortfolioWithAccounts stamp: 'fr 11/8/2020 21:14:43'!
PASSED!

!testRun: #PortfolioTest #test21CreatingAPortfolioWithAccountsShouldBehaveIdenticallyAsAddingThem stamp: 'fr 11/8/2020 21:14:43'!
PASSED!

!testRun: #PortfolioTest #test22PortfolioCanNotAddDuplicateAccountIndirectly stamp: 'fr 11/8/2020 21:14:43'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioWithMultipleAccountsAndPortfoliosExhibitsAllTheirTransactionsCombined stamp: 'fr 11/8/2020 21:14:43'!
FAILURE!
!ReceptiveAccount methodsFor: 'transactions' stamp: 'fr 11/8/2020 21:15:12' prior: 50867980!
transactions 

	^transactions copy! !
!ReceptiveAccount methodsFor: 'transactions' stamp: 'fr 11/8/2020 21:15:31' prior: 50878029!
collectTransactionsInto: aTransactionsList

	aTransactionsList addAllLast: transactions copy! !
!Portfolio methodsFor: 'transactions' stamp: 'fr 11/8/2020 21:15:36' prior: 50878021!
collectTransactionsInto: aTransactionsList

	accounts inject: aTransactionsList into: [:transactionsList :anAccount | anAccount collectTransactionsInto: transactionsList]
	! !

!testRun: #PortfolioTest #test01EmptyPortfolioHasBalanceZero stamp: 'fr 11/8/2020 21:15:41'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioWithASingleAccountWithNoTransactionsHasBalanceZero stamp: 'fr 11/8/2020 21:15:41'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioWithASingleAccountReflectsItsTransactionsValuesInItsBalance stamp: 'fr 11/8/2020 21:15:41'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithMultipleAccountsAndPortfoliosReflectsTheirTransactionsValuesInItsBalance stamp: 'fr 11/8/2020 21:15:41'!
PASSED!

!testRun: #PortfolioTest #test05EmptyPortfolioHasNotRegisteredAnyTransaction stamp: 'fr 11/8/2020 21:15:41'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioWithASingleAccountRegistersItsTransactions stamp: 'fr 11/8/2020 21:15:41'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioWithMulltipleAccountsAndPortfoliosRegistersAllTheirTransactions stamp: 'fr 11/8/2020 21:15:41'!
PASSED!

!testRun: #PortfolioTest #test08EmptyPortfolioDoesNotExhibitAnyTransaction stamp: 'fr 11/8/2020 21:15:41'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithASingleAccountExhibitsItsTransactions stamp: 'fr 11/8/2020 21:15:41'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioWithMultipleAccountsAndPortfoliosExhibitsAllTheirTransactionsCombined stamp: 'fr 11/8/2020 21:15:41'!
ERROR!

!testRun: #PortfolioTest #test11EmptyPortfolioDoesNotContainAnyAccount stamp: 'fr 11/8/2020 21:15:41'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioContainsAnAccountAfterItIsAdded stamp: 'fr 11/8/2020 21:15:41'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioContainsAnAccountAfterItIsAddedToItselfOrAnyOfItsDecendents stamp: 'fr 11/8/2020 21:15:41'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioDoesNotContainAnythingThatWasNotAddedToItself stamp: 'fr 11/8/2020 21:15:41'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotAddItself stamp: 'fr 11/8/2020 21:15:41'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioCanNotAddItsParent stamp: 'fr 11/8/2020 21:15:41'!
PASSED!

!testRun: #PortfolioTest #test17PortfolioCanNotAddAnyAncestor stamp: 'fr 11/8/2020 21:15:41'!
PASSED!

!testRun: #PortfolioTest #test18PortfolioCanNotAddAnyPreviousMemberOfTheTree stamp: 'fr 11/8/2020 21:15:41'!
PASSED!

!testRun: #PortfolioTest #test19PortfolioCanNotAddAnotherOneWhichSharesChild stamp: 'fr 11/8/2020 21:15:41'!
PASSED!

!testRun: #PortfolioTest #test20AddingShouldBehaveIdenticallyAsCreatingAPortfolioWithAccounts stamp: 'fr 11/8/2020 21:15:41'!
PASSED!

!testRun: #PortfolioTest #test21CreatingAPortfolioWithAccountsShouldBehaveIdenticallyAsAddingThem stamp: 'fr 11/8/2020 21:15:41'!
PASSED!

!testRun: #PortfolioTest #test22PortfolioCanNotAddDuplicateAccountIndirectly stamp: 'fr 11/8/2020 21:15:41'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioWithMultipleAccountsAndPortfoliosExhibitsAllTheirTransactionsCombined stamp: 'fr 11/8/2020 21:15:41'!
ERROR!

!testRun: #PortfolioTest #test01EmptyPortfolioHasBalanceZero stamp: 'fr 11/8/2020 21:18:02'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioWithASingleAccountWithNoTransactionsHasBalanceZero stamp: 'fr 11/8/2020 21:18:02'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioWithASingleAccountReflectsItsTransactionsValuesInItsBalance stamp: 'fr 11/8/2020 21:18:02'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithMultipleAccountsAndPortfoliosReflectsTheirTransactionsValuesInItsBalance stamp: 'fr 11/8/2020 21:18:02'!
PASSED!

!testRun: #PortfolioTest #test05EmptyPortfolioHasNotRegisteredAnyTransaction stamp: 'fr 11/8/2020 21:18:02'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioWithASingleAccountRegistersItsTransactions stamp: 'fr 11/8/2020 21:18:02'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioWithMulltipleAccountsAndPortfoliosRegistersAllTheirTransactions stamp: 'fr 11/8/2020 21:18:02'!
PASSED!

!testRun: #PortfolioTest #test08EmptyPortfolioDoesNotExhibitAnyTransaction stamp: 'fr 11/8/2020 21:18:02'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithASingleAccountExhibitsItsTransactions stamp: 'fr 11/8/2020 21:18:02'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioWithMultipleAccountsAndPortfoliosExhibitsAllTheirTransactionsCombined stamp: 'fr 11/8/2020 21:18:02'!
ERROR!

!testRun: #PortfolioTest #test11EmptyPortfolioDoesNotContainAnyAccount stamp: 'fr 11/8/2020 21:18:02'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioContainsAnAccountAfterItIsAdded stamp: 'fr 11/8/2020 21:18:02'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioContainsAnAccountAfterItIsAddedToItselfOrAnyOfItsDecendents stamp: 'fr 11/8/2020 21:18:02'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioDoesNotContainAnythingThatWasNotAddedToItself stamp: 'fr 11/8/2020 21:18:02'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotAddItself stamp: 'fr 11/8/2020 21:18:02'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioCanNotAddItsParent stamp: 'fr 11/8/2020 21:18:02'!
PASSED!

!testRun: #PortfolioTest #test17PortfolioCanNotAddAnyAncestor stamp: 'fr 11/8/2020 21:18:02'!
PASSED!

!testRun: #PortfolioTest #test18PortfolioCanNotAddAnyPreviousMemberOfTheTree stamp: 'fr 11/8/2020 21:18:02'!
PASSED!

!testRun: #PortfolioTest #test19PortfolioCanNotAddAnotherOneWhichSharesChild stamp: 'fr 11/8/2020 21:18:02'!
PASSED!

!testRun: #PortfolioTest #test20AddingShouldBehaveIdenticallyAsCreatingAPortfolioWithAccounts stamp: 'fr 11/8/2020 21:18:02'!
PASSED!

!testRun: #PortfolioTest #test21CreatingAPortfolioWithAccountsShouldBehaveIdenticallyAsAddingThem stamp: 'fr 11/8/2020 21:18:02'!
PASSED!

!testRun: #PortfolioTest #test22PortfolioCanNotAddDuplicateAccountIndirectly stamp: 'fr 11/8/2020 21:18:02'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioWithMultipleAccountsAndPortfoliosExhibitsAllTheirTransactionsCombined stamp: 'fr 11/8/2020 21:18:02'!
ERROR!

port _ Portfolio new.!

port add: (ReceptiveAccount new)!

port transactions!

port1 _ Portfolio new. !

port add: port1.!

port _ Portfolio new.

port1 _ Portfolio new. 

port add: port1.

port add: (ReceptiveAccount new).!

port transactions !

transactionsList!

anAccount!

anAccount!

transactionsList!

transactionsList!

anAccount!

anAccount!

transactionsList!
!Portfolio methodsFor: 'transactions' stamp: 'fr 11/8/2020 21:24:22' prior: 50878137!
collectTransactionsInto: aTransactionsList

	^accounts inject: aTransactionsList into: [:transactionsList :anAccount | anAccount collectTransactionsInto: transactionsList]
	! !

port _ Portfolio new.

port1 _ Portfolio new. 

port add: port1.

port add: (ReceptiveAccount new).

port transactions!

!testRun: #PortfolioTest #test01EmptyPortfolioHasBalanceZero stamp: 'fr 11/8/2020 21:24:47'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioWithASingleAccountWithNoTransactionsHasBalanceZero stamp: 'fr 11/8/2020 21:24:47'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioWithASingleAccountReflectsItsTransactionsValuesInItsBalance stamp: 'fr 11/8/2020 21:24:47'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithMultipleAccountsAndPortfoliosReflectsTheirTransactionsValuesInItsBalance stamp: 'fr 11/8/2020 21:24:47'!
PASSED!

!testRun: #PortfolioTest #test05EmptyPortfolioHasNotRegisteredAnyTransaction stamp: 'fr 11/8/2020 21:24:47'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioWithASingleAccountRegistersItsTransactions stamp: 'fr 11/8/2020 21:24:47'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioWithMulltipleAccountsAndPortfoliosRegistersAllTheirTransactions stamp: 'fr 11/8/2020 21:24:47'!
PASSED!

!testRun: #PortfolioTest #test08EmptyPortfolioDoesNotExhibitAnyTransaction stamp: 'fr 11/8/2020 21:24:47'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithASingleAccountExhibitsItsTransactions stamp: 'fr 11/8/2020 21:24:47'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioWithMultipleAccountsAndPortfoliosExhibitsAllTheirTransactionsCombined stamp: 'fr 11/8/2020 21:24:47'!
ERROR!

!testRun: #PortfolioTest #test11EmptyPortfolioDoesNotContainAnyAccount stamp: 'fr 11/8/2020 21:24:47'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioContainsAnAccountAfterItIsAdded stamp: 'fr 11/8/2020 21:24:47'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioContainsAnAccountAfterItIsAddedToItselfOrAnyOfItsDecendents stamp: 'fr 11/8/2020 21:24:47'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioDoesNotContainAnythingThatWasNotAddedToItself stamp: 'fr 11/8/2020 21:24:47'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotAddItself stamp: 'fr 11/8/2020 21:24:47'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioCanNotAddItsParent stamp: 'fr 11/8/2020 21:24:47'!
PASSED!

!testRun: #PortfolioTest #test17PortfolioCanNotAddAnyAncestor stamp: 'fr 11/8/2020 21:24:47'!
PASSED!

!testRun: #PortfolioTest #test18PortfolioCanNotAddAnyPreviousMemberOfTheTree stamp: 'fr 11/8/2020 21:24:47'!
PASSED!

!testRun: #PortfolioTest #test19PortfolioCanNotAddAnotherOneWhichSharesChild stamp: 'fr 11/8/2020 21:24:47'!
PASSED!

!testRun: #PortfolioTest #test20AddingShouldBehaveIdenticallyAsCreatingAPortfolioWithAccounts stamp: 'fr 11/8/2020 21:24:47'!
PASSED!

!testRun: #PortfolioTest #test21CreatingAPortfolioWithAccountsShouldBehaveIdenticallyAsAddingThem stamp: 'fr 11/8/2020 21:24:47'!
PASSED!

!testRun: #PortfolioTest #test22PortfolioCanNotAddDuplicateAccountIndirectly stamp: 'fr 11/8/2020 21:24:47'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioWithMultipleAccountsAndPortfoliosExhibitsAllTheirTransactionsCombined stamp: 'fr 11/8/2020 21:24:47'!
ERROR!
!ReceptiveAccount methodsFor: 'transactions' stamp: 'fr 11/8/2020 21:24:57' prior: 50878131!
collectTransactionsInto: aTransactionsList

	^aTransactionsList addAllLast: transactions copy! !

!testRun: #PortfolioTest #test01EmptyPortfolioHasBalanceZero stamp: 'fr 11/8/2020 21:24:59'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioWithASingleAccountWithNoTransactionsHasBalanceZero stamp: 'fr 11/8/2020 21:24:59'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioWithASingleAccountReflectsItsTransactionsValuesInItsBalance stamp: 'fr 11/8/2020 21:24:59'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithMultipleAccountsAndPortfoliosReflectsTheirTransactionsValuesInItsBalance stamp: 'fr 11/8/2020 21:24:59'!
PASSED!

!testRun: #PortfolioTest #test05EmptyPortfolioHasNotRegisteredAnyTransaction stamp: 'fr 11/8/2020 21:24:59'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioWithASingleAccountRegistersItsTransactions stamp: 'fr 11/8/2020 21:24:59'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioWithMulltipleAccountsAndPortfoliosRegistersAllTheirTransactions stamp: 'fr 11/8/2020 21:24:59'!
PASSED!

!testRun: #PortfolioTest #test08EmptyPortfolioDoesNotExhibitAnyTransaction stamp: 'fr 11/8/2020 21:24:59'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithASingleAccountExhibitsItsTransactions stamp: 'fr 11/8/2020 21:24:59'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioWithMultipleAccountsAndPortfoliosExhibitsAllTheirTransactionsCombined stamp: 'fr 11/8/2020 21:24:59'!
FAILURE!

!testRun: #PortfolioTest #test11EmptyPortfolioDoesNotContainAnyAccount stamp: 'fr 11/8/2020 21:24:59'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioContainsAnAccountAfterItIsAdded stamp: 'fr 11/8/2020 21:24:59'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioContainsAnAccountAfterItIsAddedToItselfOrAnyOfItsDecendents stamp: 'fr 11/8/2020 21:24:59'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioDoesNotContainAnythingThatWasNotAddedToItself stamp: 'fr 11/8/2020 21:24:59'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotAddItself stamp: 'fr 11/8/2020 21:24:59'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioCanNotAddItsParent stamp: 'fr 11/8/2020 21:24:59'!
PASSED!

!testRun: #PortfolioTest #test17PortfolioCanNotAddAnyAncestor stamp: 'fr 11/8/2020 21:24:59'!
PASSED!

!testRun: #PortfolioTest #test18PortfolioCanNotAddAnyPreviousMemberOfTheTree stamp: 'fr 11/8/2020 21:24:59'!
PASSED!

!testRun: #PortfolioTest #test19PortfolioCanNotAddAnotherOneWhichSharesChild stamp: 'fr 11/8/2020 21:24:59'!
PASSED!

!testRun: #PortfolioTest #test20AddingShouldBehaveIdenticallyAsCreatingAPortfolioWithAccounts stamp: 'fr 11/8/2020 21:24:59'!
PASSED!

!testRun: #PortfolioTest #test21CreatingAPortfolioWithAccountsShouldBehaveIdenticallyAsAddingThem stamp: 'fr 11/8/2020 21:24:59'!
PASSED!

!testRun: #PortfolioTest #test22PortfolioCanNotAddDuplicateAccountIndirectly stamp: 'fr 11/8/2020 21:24:59'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioWithMultipleAccountsAndPortfoliosExhibitsAllTheirTransactionsCombined stamp: 'fr 11/8/2020 21:24:59'!
FAILURE!

port _ Portfolio new.

port1 _ Portfolio new. 

port add: port1.

port add: (ReceptiveAccount new).

port transactions!

account _ ReceptiveAccount new.
anotherAccount _ ReceptiveAccount new.

deposit _ Deposit register: 100 on: account. 
anotherDeposit _ Deposit register: 50 on: anotherAccount.
 
innerPortfolio _ Portfolio with: (OrderedCollection with: account).
portfolio _ Portfolio with: (OrderedCollection with: anotherAccount with: innerPortfolio).
!

portfolio transactions !

((portfolio transactions) at: 1) value !
!Portfolio methodsFor: 'transactions' stamp: 'fr 11/8/2020 21:28:54' prior: 50878338!
collectTransactionsInto: aTransactionsList

	^accounts inject: aTransactionsList into: [:transactionsList :anAccount | transactionsList addAllLast: (anAccount collectTransactionsInto: transactionsList)]
	! !
!ReceptiveAccount methodsFor: 'transactions' stamp: 'fr 11/8/2020 21:29:08' prior: 50878441!
collectTransactionsInto: aTransactionsList

	^self transactions! !

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'fr 11/8/2020 21:29:10'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'fr 11/8/2020 21:29:10'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'fr 11/8/2020 21:29:10'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'fr 11/8/2020 21:29:10'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'fr 11/8/2020 21:29:10'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'fr 11/8/2020 21:29:10'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'fr 11/8/2020 21:29:10'!
PASSED!

!testRun: #PortfolioTest #test01EmptyPortfolioHasBalanceZero stamp: 'fr 11/8/2020 21:29:13'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioWithASingleAccountWithNoTransactionsHasBalanceZero stamp: 'fr 11/8/2020 21:29:13'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioWithASingleAccountReflectsItsTransactionsValuesInItsBalance stamp: 'fr 11/8/2020 21:29:13'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithMultipleAccountsAndPortfoliosReflectsTheirTransactionsValuesInItsBalance stamp: 'fr 11/8/2020 21:29:13'!
PASSED!

!testRun: #PortfolioTest #test05EmptyPortfolioHasNotRegisteredAnyTransaction stamp: 'fr 11/8/2020 21:29:13'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioWithASingleAccountRegistersItsTransactions stamp: 'fr 11/8/2020 21:29:13'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioWithMulltipleAccountsAndPortfoliosRegistersAllTheirTransactions stamp: 'fr 11/8/2020 21:29:13'!
PASSED!

!testRun: #PortfolioTest #test08EmptyPortfolioDoesNotExhibitAnyTransaction stamp: 'fr 11/8/2020 21:29:13'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithASingleAccountExhibitsItsTransactions stamp: 'fr 11/8/2020 21:29:13'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioWithMultipleAccountsAndPortfoliosExhibitsAllTheirTransactionsCombined stamp: 'fr 11/8/2020 21:29:13'!
FAILURE!

!testRun: #PortfolioTest #test11EmptyPortfolioDoesNotContainAnyAccount stamp: 'fr 11/8/2020 21:29:13'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioContainsAnAccountAfterItIsAdded stamp: 'fr 11/8/2020 21:29:13'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioContainsAnAccountAfterItIsAddedToItselfOrAnyOfItsDecendents stamp: 'fr 11/8/2020 21:29:13'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioDoesNotContainAnythingThatWasNotAddedToItself stamp: 'fr 11/8/2020 21:29:13'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotAddItself stamp: 'fr 11/8/2020 21:29:13'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioCanNotAddItsParent stamp: 'fr 11/8/2020 21:29:13'!
PASSED!

!testRun: #PortfolioTest #test17PortfolioCanNotAddAnyAncestor stamp: 'fr 11/8/2020 21:29:13'!
PASSED!

!testRun: #PortfolioTest #test18PortfolioCanNotAddAnyPreviousMemberOfTheTree stamp: 'fr 11/8/2020 21:29:13'!
PASSED!

!testRun: #PortfolioTest #test19PortfolioCanNotAddAnotherOneWhichSharesChild stamp: 'fr 11/8/2020 21:29:13'!
PASSED!

!testRun: #PortfolioTest #test20AddingShouldBehaveIdenticallyAsCreatingAPortfolioWithAccounts stamp: 'fr 11/8/2020 21:29:13'!
PASSED!

!testRun: #PortfolioTest #test21CreatingAPortfolioWithAccountsShouldBehaveIdenticallyAsAddingThem stamp: 'fr 11/8/2020 21:29:13'!
PASSED!

!testRun: #PortfolioTest #test22PortfolioCanNotAddDuplicateAccountIndirectly stamp: 'fr 11/8/2020 21:29:13'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioWithMultipleAccountsAndPortfoliosExhibitsAllTheirTransactionsCombined stamp: 'fr 11/8/2020 21:29:13'!
FAILURE!
!ReceptiveAccount methodsFor: 'transactions' stamp: 'fr 11/8/2020 21:24:57' prior: 50878564!
collectTransactionsInto: aTransactionsList

	^aTransactionsList addAllLast: transactions copy! !
!Portfolio methodsFor: 'transactions' stamp: 'fr 11/8/2020 21:24:22' prior: 50878554!
collectTransactionsInto: aTransactionsList

	^accounts inject: aTransactionsList into: [:transactionsList :anAccount | anAccount collectTransactionsInto: transactionsList]
	! !
!Portfolio methodsFor: 'transactions' stamp: 'fr 11/8/2020 21:31:10' prior: 50878692!
collectTransactionsInto: aTransactionsList

	^accounts inject: aTransactionsList into: [:transactionsList :anAccount | anAccount collectTransactionsInto: transactionsList]
	! !
!ReceptiveAccount methodsFor: 'transactions' stamp: 'fr 11/8/2020 21:33:07' prior: 50878686!
collectTransactionsInto: aTransactionsList

	^self transactions! !
!Portfolio methodsFor: 'transactions' stamp: 'fr 11/8/2020 21:33:16' prior: 50878012!
transactions
	
	| transactions |
	transactions _ OrderedCollection new.
	"accounts do: [:anAccount | transactions addAllLast: anAccount transactions]."
	^self collectTransactionsInto: transactions.
! !

!testRun: #PortfolioTest #test01EmptyPortfolioHasBalanceZero stamp: 'fr 11/8/2020 21:33:18'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioWithASingleAccountWithNoTransactionsHasBalanceZero stamp: 'fr 11/8/2020 21:33:19'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioWithASingleAccountReflectsItsTransactionsValuesInItsBalance stamp: 'fr 11/8/2020 21:33:19'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithMultipleAccountsAndPortfoliosReflectsTheirTransactionsValuesInItsBalance stamp: 'fr 11/8/2020 21:33:19'!
PASSED!

!testRun: #PortfolioTest #test05EmptyPortfolioHasNotRegisteredAnyTransaction stamp: 'fr 11/8/2020 21:33:19'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioWithASingleAccountRegistersItsTransactions stamp: 'fr 11/8/2020 21:33:19'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioWithMulltipleAccountsAndPortfoliosRegistersAllTheirTransactions stamp: 'fr 11/8/2020 21:33:19'!
PASSED!

!testRun: #PortfolioTest #test08EmptyPortfolioDoesNotExhibitAnyTransaction stamp: 'fr 11/8/2020 21:33:19'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithASingleAccountExhibitsItsTransactions stamp: 'fr 11/8/2020 21:33:19'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioWithMultipleAccountsAndPortfoliosExhibitsAllTheirTransactionsCombined stamp: 'fr 11/8/2020 21:33:19'!
FAILURE!

!testRun: #PortfolioTest #test11EmptyPortfolioDoesNotContainAnyAccount stamp: 'fr 11/8/2020 21:33:19'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioContainsAnAccountAfterItIsAdded stamp: 'fr 11/8/2020 21:33:19'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioContainsAnAccountAfterItIsAddedToItselfOrAnyOfItsDecendents stamp: 'fr 11/8/2020 21:33:19'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioDoesNotContainAnythingThatWasNotAddedToItself stamp: 'fr 11/8/2020 21:33:19'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotAddItself stamp: 'fr 11/8/2020 21:33:19'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioCanNotAddItsParent stamp: 'fr 11/8/2020 21:33:19'!
PASSED!

!testRun: #PortfolioTest #test17PortfolioCanNotAddAnyAncestor stamp: 'fr 11/8/2020 21:33:19'!
PASSED!

!testRun: #PortfolioTest #test18PortfolioCanNotAddAnyPreviousMemberOfTheTree stamp: 'fr 11/8/2020 21:33:19'!
PASSED!

!testRun: #PortfolioTest #test19PortfolioCanNotAddAnotherOneWhichSharesChild stamp: 'fr 11/8/2020 21:33:19'!
PASSED!

!testRun: #PortfolioTest #test20AddingShouldBehaveIdenticallyAsCreatingAPortfolioWithAccounts stamp: 'fr 11/8/2020 21:33:19'!
PASSED!

!testRun: #PortfolioTest #test21CreatingAPortfolioWithAccountsShouldBehaveIdenticallyAsAddingThem stamp: 'fr 11/8/2020 21:33:19'!
PASSED!

!testRun: #PortfolioTest #test22PortfolioCanNotAddDuplicateAccountIndirectly stamp: 'fr 11/8/2020 21:33:19'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioWithMultipleAccountsAndPortfoliosExhibitsAllTheirTransactionsCombined stamp: 'fr 11/8/2020 21:33:19'!
FAILURE!

account _ ReceptiveAccount new.
anotherAccount _ ReceptiveAccount new.

deposit _ Deposit register: 100 on: account. 
anotherDeposit _ Deposit register: 50 on: anotherAccount.
 
innerPortfolio _ Portfolio with: (OrderedCollection with: account).
portfolio _ Portfolio with: (OrderedCollection with: anotherAccount with: innerPortfolio).

((portfolio transactions) at: 1) value !

portfolio transactions!
!Portfolio methodsFor: 'transactions' stamp: 'fr 11/8/2020 21:34:15' prior: 50878701!
collectTransactionsInto: aTransactionsList

	^accounts inject: aTransactionsList into: [:transactionsList :anAccount | anAccount collectTransactionsInto: aTransactionsList]
	! !

!testRun: #PortfolioTest #test01EmptyPortfolioHasBalanceZero stamp: 'fr 11/8/2020 21:34:48'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioWithASingleAccountWithNoTransactionsHasBalanceZero stamp: 'fr 11/8/2020 21:34:48'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioWithASingleAccountReflectsItsTransactionsValuesInItsBalance stamp: 'fr 11/8/2020 21:34:48'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithMultipleAccountsAndPortfoliosReflectsTheirTransactionsValuesInItsBalance stamp: 'fr 11/8/2020 21:34:48'!
PASSED!

!testRun: #PortfolioTest #test05EmptyPortfolioHasNotRegisteredAnyTransaction stamp: 'fr 11/8/2020 21:34:48'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioWithASingleAccountRegistersItsTransactions stamp: 'fr 11/8/2020 21:34:48'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioWithMulltipleAccountsAndPortfoliosRegistersAllTheirTransactions stamp: 'fr 11/8/2020 21:34:48'!
PASSED!

!testRun: #PortfolioTest #test08EmptyPortfolioDoesNotExhibitAnyTransaction stamp: 'fr 11/8/2020 21:34:48'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithASingleAccountExhibitsItsTransactions stamp: 'fr 11/8/2020 21:34:48'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioWithMultipleAccountsAndPortfoliosExhibitsAllTheirTransactionsCombined stamp: 'fr 11/8/2020 21:34:48'!
FAILURE!

!testRun: #PortfolioTest #test11EmptyPortfolioDoesNotContainAnyAccount stamp: 'fr 11/8/2020 21:34:48'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioContainsAnAccountAfterItIsAdded stamp: 'fr 11/8/2020 21:34:48'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioContainsAnAccountAfterItIsAddedToItselfOrAnyOfItsDecendents stamp: 'fr 11/8/2020 21:34:48'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioDoesNotContainAnythingThatWasNotAddedToItself stamp: 'fr 11/8/2020 21:34:48'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotAddItself stamp: 'fr 11/8/2020 21:34:48'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioCanNotAddItsParent stamp: 'fr 11/8/2020 21:34:48'!
PASSED!

!testRun: #PortfolioTest #test17PortfolioCanNotAddAnyAncestor stamp: 'fr 11/8/2020 21:34:48'!
PASSED!

!testRun: #PortfolioTest #test18PortfolioCanNotAddAnyPreviousMemberOfTheTree stamp: 'fr 11/8/2020 21:34:48'!
PASSED!

!testRun: #PortfolioTest #test19PortfolioCanNotAddAnotherOneWhichSharesChild stamp: 'fr 11/8/2020 21:34:48'!
PASSED!

!testRun: #PortfolioTest #test20AddingShouldBehaveIdenticallyAsCreatingAPortfolioWithAccounts stamp: 'fr 11/8/2020 21:34:48'!
PASSED!

!testRun: #PortfolioTest #test21CreatingAPortfolioWithAccountsShouldBehaveIdenticallyAsAddingThem stamp: 'fr 11/8/2020 21:34:48'!
PASSED!

!testRun: #PortfolioTest #test22PortfolioCanNotAddDuplicateAccountIndirectly stamp: 'fr 11/8/2020 21:34:48'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioWithMultipleAccountsAndPortfoliosExhibitsAllTheirTransactionsCombined stamp: 'fr 11/8/2020 21:34:48'!
FAILURE!
!Portfolio methodsFor: 'transactions' stamp: 'fr 11/8/2020 21:36:06' prior: 50878828!
collectTransactionsInto: aTransactionsList

	^accounts inject: aTransactionsList into: [:transactionsList :anAccount | transactionsList addAllLast: (anAccount collectTransactionsInto: transactionsList)]
	! !

!testRun: #PortfolioTest #test01EmptyPortfolioHasBalanceZero stamp: 'fr 11/8/2020 21:36:15'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioWithASingleAccountWithNoTransactionsHasBalanceZero stamp: 'fr 11/8/2020 21:36:15'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioWithASingleAccountReflectsItsTransactionsValuesInItsBalance stamp: 'fr 11/8/2020 21:36:15'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithMultipleAccountsAndPortfoliosReflectsTheirTransactionsValuesInItsBalance stamp: 'fr 11/8/2020 21:36:15'!
PASSED!

!testRun: #PortfolioTest #test05EmptyPortfolioHasNotRegisteredAnyTransaction stamp: 'fr 11/8/2020 21:36:15'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioWithASingleAccountRegistersItsTransactions stamp: 'fr 11/8/2020 21:36:15'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioWithMulltipleAccountsAndPortfoliosRegistersAllTheirTransactions stamp: 'fr 11/8/2020 21:36:15'!
PASSED!

!testRun: #PortfolioTest #test08EmptyPortfolioDoesNotExhibitAnyTransaction stamp: 'fr 11/8/2020 21:36:15'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithASingleAccountExhibitsItsTransactions stamp: 'fr 11/8/2020 21:36:15'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioWithMultipleAccountsAndPortfoliosExhibitsAllTheirTransactionsCombined stamp: 'fr 11/8/2020 21:36:15'!
FAILURE!

!testRun: #PortfolioTest #test11EmptyPortfolioDoesNotContainAnyAccount stamp: 'fr 11/8/2020 21:36:15'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioContainsAnAccountAfterItIsAdded stamp: 'fr 11/8/2020 21:36:15'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioContainsAnAccountAfterItIsAddedToItselfOrAnyOfItsDecendents stamp: 'fr 11/8/2020 21:36:15'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioDoesNotContainAnythingThatWasNotAddedToItself stamp: 'fr 11/8/2020 21:36:15'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotAddItself stamp: 'fr 11/8/2020 21:36:15'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioCanNotAddItsParent stamp: 'fr 11/8/2020 21:36:15'!
PASSED!

!testRun: #PortfolioTest #test17PortfolioCanNotAddAnyAncestor stamp: 'fr 11/8/2020 21:36:15'!
PASSED!

!testRun: #PortfolioTest #test18PortfolioCanNotAddAnyPreviousMemberOfTheTree stamp: 'fr 11/8/2020 21:36:15'!
PASSED!

!testRun: #PortfolioTest #test19PortfolioCanNotAddAnotherOneWhichSharesChild stamp: 'fr 11/8/2020 21:36:15'!
PASSED!

!testRun: #PortfolioTest #test20AddingShouldBehaveIdenticallyAsCreatingAPortfolioWithAccounts stamp: 'fr 11/8/2020 21:36:15'!
PASSED!

!testRun: #PortfolioTest #test21CreatingAPortfolioWithAccountsShouldBehaveIdenticallyAsAddingThem stamp: 'fr 11/8/2020 21:36:15'!
PASSED!

!testRun: #PortfolioTest #test22PortfolioCanNotAddDuplicateAccountIndirectly stamp: 'fr 11/8/2020 21:36:15'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioWithMultipleAccountsAndPortfoliosExhibitsAllTheirTransactionsCombined stamp: 'fr 11/8/2020 21:36:15'!
FAILURE!
!Portfolio methodsFor: 'transactions' stamp: 'fr 11/8/2020 21:36:24' prior: 50878927!
collectTransactionsInto: aTransactionsList

	^accounts inject: aTransactionsList into: [:transactionsList :anAccount | transactionsList addAllLast: (anAccount collectTransactionsInto: aTransactionsList)]
	! !

!testRun: #PortfolioTest #test01EmptyPortfolioHasBalanceZero stamp: 'fr 11/8/2020 21:36:48'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioWithASingleAccountWithNoTransactionsHasBalanceZero stamp: 'fr 11/8/2020 21:36:48'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioWithASingleAccountReflectsItsTransactionsValuesInItsBalance stamp: 'fr 11/8/2020 21:36:48'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithMultipleAccountsAndPortfoliosReflectsTheirTransactionsValuesInItsBalance stamp: 'fr 11/8/2020 21:36:48'!
PASSED!

!testRun: #PortfolioTest #test05EmptyPortfolioHasNotRegisteredAnyTransaction stamp: 'fr 11/8/2020 21:36:48'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioWithASingleAccountRegistersItsTransactions stamp: 'fr 11/8/2020 21:36:48'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioWithMulltipleAccountsAndPortfoliosRegistersAllTheirTransactions stamp: 'fr 11/8/2020 21:36:48'!
PASSED!

!testRun: #PortfolioTest #test08EmptyPortfolioDoesNotExhibitAnyTransaction stamp: 'fr 11/8/2020 21:36:48'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithASingleAccountExhibitsItsTransactions stamp: 'fr 11/8/2020 21:36:48'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioWithMultipleAccountsAndPortfoliosExhibitsAllTheirTransactionsCombined stamp: 'fr 11/8/2020 21:36:48'!
FAILURE!

!testRun: #PortfolioTest #test11EmptyPortfolioDoesNotContainAnyAccount stamp: 'fr 11/8/2020 21:36:48'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioContainsAnAccountAfterItIsAdded stamp: 'fr 11/8/2020 21:36:48'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioContainsAnAccountAfterItIsAddedToItselfOrAnyOfItsDecendents stamp: 'fr 11/8/2020 21:36:48'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioDoesNotContainAnythingThatWasNotAddedToItself stamp: 'fr 11/8/2020 21:36:48'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotAddItself stamp: 'fr 11/8/2020 21:36:48'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioCanNotAddItsParent stamp: 'fr 11/8/2020 21:36:48'!
PASSED!

!testRun: #PortfolioTest #test17PortfolioCanNotAddAnyAncestor stamp: 'fr 11/8/2020 21:36:48'!
PASSED!

!testRun: #PortfolioTest #test18PortfolioCanNotAddAnyPreviousMemberOfTheTree stamp: 'fr 11/8/2020 21:36:48'!
PASSED!

!testRun: #PortfolioTest #test19PortfolioCanNotAddAnotherOneWhichSharesChild stamp: 'fr 11/8/2020 21:36:48'!
PASSED!

!testRun: #PortfolioTest #test20AddingShouldBehaveIdenticallyAsCreatingAPortfolioWithAccounts stamp: 'fr 11/8/2020 21:36:48'!
PASSED!

!testRun: #PortfolioTest #test21CreatingAPortfolioWithAccountsShouldBehaveIdenticallyAsAddingThem stamp: 'fr 11/8/2020 21:36:48'!
PASSED!

!testRun: #PortfolioTest #test22PortfolioCanNotAddDuplicateAccountIndirectly stamp: 'fr 11/8/2020 21:36:48'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioWithMultipleAccountsAndPortfoliosExhibitsAllTheirTransactionsCombined stamp: 'fr 11/8/2020 21:36:48'!
FAILURE!

account _ ReceptiveAccount new.
anotherAccount _ ReceptiveAccount new.

deposit _ Deposit register: 100 on: account. 
anotherDeposit _ Deposit register: 50 on: anotherAccount.
 
innerPortfolio _ Portfolio with: (OrderedCollection with: account).
portfolio _ Portfolio with: (OrderedCollection with: anotherAccount with: innerPortfolio).

portfolio transactions!

(portfolio transactions at: 1) value !
!Portfolio methodsFor: 'transactions' stamp: 'fr 11/8/2020 21:39:41' prior: 50879027!
collectTransactionsInto: aTransactionsList

	accounts inject: aTransactionsList into: [:transactionsList :anAccount | transactionsList addAllLast: (anAccount collectTransactionsInto: aTransactionsList)]
	! !

account _ ReceptiveAccount new.
anotherAccount _ ReceptiveAccount new.

deposit _ Deposit register: 100 on: account. 
anotherDeposit _ Deposit register: 50 on: anotherAccount.
 
innerPortfolio _ Portfolio with: (OrderedCollection with: account).
portfolio _ Portfolio with: (OrderedCollection with: anotherAccount with: innerPortfolio).

(portfolio transactions at: 1) value 
!
!Portfolio methodsFor: 'transactions' stamp: 'fr 11/8/2020 21:40:31' prior: 50879140!
collectTransactionsInto: aTransactionsList

	^accounts inject: aTransactionsList into: [:transactionsList :anAccount | transactionsList addAllLast: (anAccount collectTransactionsInto: aTransactionsList)]
	! !

transactionsList!

anAccount!

transactionsList!

anAccount!

deposits _ portfolio transactions at: 1!

deposits !

deposits _ portfolio transactions!

----QUIT----(8 November 2020 21:47:33) CuisUniversity-4384.image priorSource: 17476731!

----STARTUP---- (8 November 2020 21:49:05) as /home/fede/Documentos/Facultad/Inge1/Cuises/linux64/CuisUniversity-4384.image!


!methodRemoval: ReceptiveAccount #collectTransactionsInto: stamp: 'fr 11/8/2020 21:50:29'!
collectTransactionsInto: aTransactionsList

	^self transactions!
!Portfolio methodsFor: 'transactions' stamp: 'fr 11/8/2020 21:51:28' prior: 50879162!
collectTransactionsInto: aTransactionsList

	^(accounts collect: [accounts transactions]) inject: aTransactionsList into: [:totalTransactions :transactionsForAccount | 
		totalTransactions addAllLast: transactionsForAccount]
	! !

!testRun: #PortfolioTest #test01EmptyPortfolioHasBalanceZero stamp: 'fr 11/8/2020 21:51:30'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioWithASingleAccountWithNoTransactionsHasBalanceZero stamp: 'fr 11/8/2020 21:51:30'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioWithASingleAccountReflectsItsTransactionsValuesInItsBalance stamp: 'fr 11/8/2020 21:51:30'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithMultipleAccountsAndPortfoliosReflectsTheirTransactionsValuesInItsBalance stamp: 'fr 11/8/2020 21:51:30'!
PASSED!

!testRun: #PortfolioTest #test05EmptyPortfolioHasNotRegisteredAnyTransaction stamp: 'fr 11/8/2020 21:51:30'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioWithASingleAccountRegistersItsTransactions stamp: 'fr 11/8/2020 21:51:30'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioWithMulltipleAccountsAndPortfoliosRegistersAllTheirTransactions stamp: 'fr 11/8/2020 21:51:30'!
PASSED!

!testRun: #PortfolioTest #test08EmptyPortfolioDoesNotExhibitAnyTransaction stamp: 'fr 11/8/2020 21:51:30'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithASingleAccountExhibitsItsTransactions stamp: 'fr 11/8/2020 21:51:30'!
ERROR!

!testRun: #PortfolioTest #test10PortfolioWithMultipleAccountsAndPortfoliosExhibitsAllTheirTransactionsCombined stamp: 'fr 11/8/2020 21:51:30'!
ERROR!

!testRun: #PortfolioTest #test11EmptyPortfolioDoesNotContainAnyAccount stamp: 'fr 11/8/2020 21:51:30'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioContainsAnAccountAfterItIsAdded stamp: 'fr 11/8/2020 21:51:30'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioContainsAnAccountAfterItIsAddedToItselfOrAnyOfItsDecendents stamp: 'fr 11/8/2020 21:51:30'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioDoesNotContainAnythingThatWasNotAddedToItself stamp: 'fr 11/8/2020 21:51:30'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotAddItself stamp: 'fr 11/8/2020 21:51:30'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioCanNotAddItsParent stamp: 'fr 11/8/2020 21:51:30'!
PASSED!

!testRun: #PortfolioTest #test17PortfolioCanNotAddAnyAncestor stamp: 'fr 11/8/2020 21:51:30'!
PASSED!

!testRun: #PortfolioTest #test18PortfolioCanNotAddAnyPreviousMemberOfTheTree stamp: 'fr 11/8/2020 21:51:30'!
PASSED!

!testRun: #PortfolioTest #test19PortfolioCanNotAddAnotherOneWhichSharesChild stamp: 'fr 11/8/2020 21:51:30'!
PASSED!

!testRun: #PortfolioTest #test20AddingShouldBehaveIdenticallyAsCreatingAPortfolioWithAccounts stamp: 'fr 11/8/2020 21:51:30'!
PASSED!

!testRun: #PortfolioTest #test21CreatingAPortfolioWithAccountsShouldBehaveIdenticallyAsAddingThem stamp: 'fr 11/8/2020 21:51:30'!
PASSED!

!testRun: #PortfolioTest #test22PortfolioCanNotAddDuplicateAccountIndirectly stamp: 'fr 11/8/2020 21:51:30'!
PASSED!

!testRun: #PortfolioTest #test01EmptyPortfolioHasBalanceZero stamp: 'fr 11/8/2020 21:51:36'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioWithASingleAccountWithNoTransactionsHasBalanceZero stamp: 'fr 11/8/2020 21:51:36'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioWithASingleAccountReflectsItsTransactionsValuesInItsBalance stamp: 'fr 11/8/2020 21:51:36'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithMultipleAccountsAndPortfoliosReflectsTheirTransactionsValuesInItsBalance stamp: 'fr 11/8/2020 21:51:36'!
PASSED!

!testRun: #PortfolioTest #test05EmptyPortfolioHasNotRegisteredAnyTransaction stamp: 'fr 11/8/2020 21:51:36'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioWithASingleAccountRegistersItsTransactions stamp: 'fr 11/8/2020 21:51:36'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioWithMulltipleAccountsAndPortfoliosRegistersAllTheirTransactions stamp: 'fr 11/8/2020 21:51:36'!
PASSED!

!testRun: #PortfolioTest #test08EmptyPortfolioDoesNotExhibitAnyTransaction stamp: 'fr 11/8/2020 21:51:36'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithASingleAccountExhibitsItsTransactions stamp: 'fr 11/8/2020 21:51:36'!
ERROR!

!testRun: #PortfolioTest #test10PortfolioWithMultipleAccountsAndPortfoliosExhibitsAllTheirTransactionsCombined stamp: 'fr 11/8/2020 21:51:36'!
ERROR!

!testRun: #PortfolioTest #test11EmptyPortfolioDoesNotContainAnyAccount stamp: 'fr 11/8/2020 21:51:36'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioContainsAnAccountAfterItIsAdded stamp: 'fr 11/8/2020 21:51:36'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioContainsAnAccountAfterItIsAddedToItselfOrAnyOfItsDecendents stamp: 'fr 11/8/2020 21:51:36'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioDoesNotContainAnythingThatWasNotAddedToItself stamp: 'fr 11/8/2020 21:51:36'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotAddItself stamp: 'fr 11/8/2020 21:51:36'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioCanNotAddItsParent stamp: 'fr 11/8/2020 21:51:36'!
PASSED!

!testRun: #PortfolioTest #test17PortfolioCanNotAddAnyAncestor stamp: 'fr 11/8/2020 21:51:36'!
PASSED!

!testRun: #PortfolioTest #test18PortfolioCanNotAddAnyPreviousMemberOfTheTree stamp: 'fr 11/8/2020 21:51:36'!
PASSED!

!testRun: #PortfolioTest #test19PortfolioCanNotAddAnotherOneWhichSharesChild stamp: 'fr 11/8/2020 21:51:36'!
PASSED!

!testRun: #PortfolioTest #test20AddingShouldBehaveIdenticallyAsCreatingAPortfolioWithAccounts stamp: 'fr 11/8/2020 21:51:36'!
PASSED!

!testRun: #PortfolioTest #test21CreatingAPortfolioWithAccountsShouldBehaveIdenticallyAsAddingThem stamp: 'fr 11/8/2020 21:51:36'!
PASSED!

!testRun: #PortfolioTest #test22PortfolioCanNotAddDuplicateAccountIndirectly stamp: 'fr 11/8/2020 21:51:36'!
PASSED!

account _ ReceptiveAccount new.
anotherAccount _ ReceptiveAccount new.

deposit _ Deposit register: 100 on: account. 
anotherDeposit _ Deposit register: 50 on: anotherAccount.
 
innerPortfolio _ Portfolio with: (OrderedCollection with: account).
portfolio _ Portfolio with: (OrderedCollection with: anotherAccount with: innerPortfolio).

deposits _ portfolio transactions!
!Portfolio methodsFor: 'transactions' stamp: 'fr 11/8/2020 21:52:38' prior: 50879188!
collectTransactionsInto: aTransactionsList

	^(accounts collect: [:anAccount | anAccount transactions]) inject: aTransactionsList into: [:totalTransactions :transactionsForAccount | 
		totalTransactions addAllLast: transactionsForAccount]
	! !

!testRun: #PortfolioTest #test01EmptyPortfolioHasBalanceZero stamp: 'fr 11/8/2020 21:52:41'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioWithASingleAccountWithNoTransactionsHasBalanceZero stamp: 'fr 11/8/2020 21:52:41'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioWithASingleAccountReflectsItsTransactionsValuesInItsBalance stamp: 'fr 11/8/2020 21:52:41'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithMultipleAccountsAndPortfoliosReflectsTheirTransactionsValuesInItsBalance stamp: 'fr 11/8/2020 21:52:41'!
PASSED!

!testRun: #PortfolioTest #test05EmptyPortfolioHasNotRegisteredAnyTransaction stamp: 'fr 11/8/2020 21:52:41'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioWithASingleAccountRegistersItsTransactions stamp: 'fr 11/8/2020 21:52:41'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioWithMulltipleAccountsAndPortfoliosRegistersAllTheirTransactions stamp: 'fr 11/8/2020 21:52:41'!
PASSED!

!testRun: #PortfolioTest #test08EmptyPortfolioDoesNotExhibitAnyTransaction stamp: 'fr 11/8/2020 21:52:41'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithASingleAccountExhibitsItsTransactions stamp: 'fr 11/8/2020 21:52:41'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioWithMultipleAccountsAndPortfoliosExhibitsAllTheirTransactionsCombined stamp: 'fr 11/8/2020 21:52:41'!
FAILURE!

!testRun: #PortfolioTest #test11EmptyPortfolioDoesNotContainAnyAccount stamp: 'fr 11/8/2020 21:52:41'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioContainsAnAccountAfterItIsAdded stamp: 'fr 11/8/2020 21:52:41'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioContainsAnAccountAfterItIsAddedToItselfOrAnyOfItsDecendents stamp: 'fr 11/8/2020 21:52:41'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioDoesNotContainAnythingThatWasNotAddedToItself stamp: 'fr 11/8/2020 21:52:41'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotAddItself stamp: 'fr 11/8/2020 21:52:41'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioCanNotAddItsParent stamp: 'fr 11/8/2020 21:52:41'!
PASSED!

!testRun: #PortfolioTest #test17PortfolioCanNotAddAnyAncestor stamp: 'fr 11/8/2020 21:52:41'!
PASSED!

!testRun: #PortfolioTest #test18PortfolioCanNotAddAnyPreviousMemberOfTheTree stamp: 'fr 11/8/2020 21:52:41'!
PASSED!

!testRun: #PortfolioTest #test19PortfolioCanNotAddAnotherOneWhichSharesChild stamp: 'fr 11/8/2020 21:52:41'!
PASSED!

!testRun: #PortfolioTest #test20AddingShouldBehaveIdenticallyAsCreatingAPortfolioWithAccounts stamp: 'fr 11/8/2020 21:52:41'!
PASSED!

!testRun: #PortfolioTest #test21CreatingAPortfolioWithAccountsShouldBehaveIdenticallyAsAddingThem stamp: 'fr 11/8/2020 21:52:41'!
PASSED!

!testRun: #PortfolioTest #test22PortfolioCanNotAddDuplicateAccountIndirectly stamp: 'fr 11/8/2020 21:52:41'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioWithMultipleAccountsAndPortfoliosExhibitsAllTheirTransactionsCombined stamp: 'fr 11/8/2020 21:52:41'!
FAILURE!

account _ ReceptiveAccount new.
anotherAccount _ ReceptiveAccount new.

deposit _ Deposit register: 100 on: account. 
anotherDeposit _ Deposit register: 50 on: anotherAccount.
 
innerPortfolio _ Portfolio with: (OrderedCollection with: account).
portfolio _ Portfolio with: (OrderedCollection with: anotherAccount with: innerPortfolio).

deposits _ portfolio transactions!
!Portfolio methodsFor: 'transactions' stamp: 'fr 11/8/2020 21:53:27' prior: 50879381!
collectTransactionsInto: aTransactionsList

	^(accounts collect: [:anAccount | anAccount transactions]) inject: aTransactionsList into: [:totalTransactions :transactionsForAccount | 		totalTransactions addAllLast: transactionsForAccount]
	! !
!Portfolio methodsFor: 'transactions' stamp: 'fr 11/8/2020 21:54:17' prior: 50879494!
collectTransactionsInto: aTransactionsList

	^(accounts collect: [:anAccount | anAccount transactions]) inject: aTransactionsList into: [:totalTransactions :transactionsForAccount | 		totalTransactions addAllLast: transactionsForAccount]
	! !
!Portfolio methodsFor: 'transactions' stamp: 'fr 11/8/2020 21:56:36' prior: 50879505!
collectTransactionsInto: aTransactionsList

	^accounts inject: aTransactionsList into: [:totalTransactions :anAccount | totalTransactions addAllLast: (anAccount collectTransactionsInto: aTransactionsList)] 
	! !
!ReceptiveAccount methodsFor: 'transactions' stamp: 'fr 11/8/2020 21:57:03'!
collectTransactionsInto: aTransactionsList

	^self transactions
! !

account _ ReceptiveAccount new.
anotherAccount _ ReceptiveAccount new.

deposit _ Deposit register: 100 on: account. 
anotherDeposit _ Deposit register: 50 on: anotherAccount.
 
innerPortfolio _ Portfolio with: (OrderedCollection with: account).
portfolio _ Portfolio with: (OrderedCollection with: anotherAccount with: innerPortfolio).

deposits _ portfolio transactions!

anAccount!

accounts inject: aTransactionsList into: [:totalTransactions :anAccount | totalTransactions addAllLast: (anAccount collectTransactionsInto: aTransactionsList)] !

self collectTransactionsInto: transactions.!

transactions!

account _ ReceptiveAccount new.
anotherAccount _ ReceptiveAccount new.

deposit _ Deposit register: 100 on: account. 
anotherDeposit _ Deposit register: 50 on: anotherAccount.
 
innerPortfolio _ Portfolio with: (OrderedCollection with: account).
portfolio _ Portfolio with: (OrderedCollection with: anotherAccount with: innerPortfolio).

deposits _ portfolio transactions!
!Portfolio methodsFor: 'transactions' stamp: 'fr 11/8/2020 22:01:40' prior: 50878715!
transactions
	
	| transactions |
	transactions _ OrderedCollection new.
	"accounts do: [:anAccount | transactions addAllLast: anAccount transactions]."
	self collectTransactionsInto: transactions.
	^transactions
! !

account _ ReceptiveAccount new.
anotherAccount _ ReceptiveAccount new.

deposit _ Deposit register: 100 on: account. 
anotherDeposit _ Deposit register: 50 on: anotherAccount.
 
innerPortfolio _ Portfolio with: (OrderedCollection with: account).
portfolio _ Portfolio with: (OrderedCollection with: anotherAccount with: innerPortfolio).

deposits _ portfolio transactions
!

!testRun: #PortfolioTest #test01EmptyPortfolioHasBalanceZero stamp: 'fr 11/8/2020 22:01:49'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioWithASingleAccountWithNoTransactionsHasBalanceZero stamp: 'fr 11/8/2020 22:01:49'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioWithASingleAccountReflectsItsTransactionsValuesInItsBalance stamp: 'fr 11/8/2020 22:01:49'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithMultipleAccountsAndPortfoliosReflectsTheirTransactionsValuesInItsBalance stamp: 'fr 11/8/2020 22:01:49'!
PASSED!

!testRun: #PortfolioTest #test05EmptyPortfolioHasNotRegisteredAnyTransaction stamp: 'fr 11/8/2020 22:01:49'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioWithASingleAccountRegistersItsTransactions stamp: 'fr 11/8/2020 22:01:49'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioWithMulltipleAccountsAndPortfoliosRegistersAllTheirTransactions stamp: 'fr 11/8/2020 22:01:49'!
PASSED!

!testRun: #PortfolioTest #test08EmptyPortfolioDoesNotExhibitAnyTransaction stamp: 'fr 11/8/2020 22:01:49'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithASingleAccountExhibitsItsTransactions stamp: 'fr 11/8/2020 22:01:49'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioWithMultipleAccountsAndPortfoliosExhibitsAllTheirTransactionsCombined stamp: 'fr 11/8/2020 22:01:49'!
PASSED!

!testRun: #PortfolioTest #test11EmptyPortfolioDoesNotContainAnyAccount stamp: 'fr 11/8/2020 22:01:49'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioContainsAnAccountAfterItIsAdded stamp: 'fr 11/8/2020 22:01:49'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioContainsAnAccountAfterItIsAddedToItselfOrAnyOfItsDecendents stamp: 'fr 11/8/2020 22:01:49'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioDoesNotContainAnythingThatWasNotAddedToItself stamp: 'fr 11/8/2020 22:01:49'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotAddItself stamp: 'fr 11/8/2020 22:01:49'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioCanNotAddItsParent stamp: 'fr 11/8/2020 22:01:49'!
PASSED!

!testRun: #PortfolioTest #test17PortfolioCanNotAddAnyAncestor stamp: 'fr 11/8/2020 22:01:49'!
PASSED!

!testRun: #PortfolioTest #test18PortfolioCanNotAddAnyPreviousMemberOfTheTree stamp: 'fr 11/8/2020 22:01:49'!
PASSED!

!testRun: #PortfolioTest #test19PortfolioCanNotAddAnotherOneWhichSharesChild stamp: 'fr 11/8/2020 22:01:49'!
PASSED!

!testRun: #PortfolioTest #test20AddingShouldBehaveIdenticallyAsCreatingAPortfolioWithAccounts stamp: 'fr 11/8/2020 22:01:49'!
PASSED!

!testRun: #PortfolioTest #test21CreatingAPortfolioWithAccountsShouldBehaveIdenticallyAsAddingThem stamp: 'fr 11/8/2020 22:01:49'!
PASSED!

!testRun: #PortfolioTest #test22PortfolioCanNotAddDuplicateAccountIndirectly stamp: 'fr 11/8/2020 22:01:49'!
PASSED!

!testRun: #PortfolioTest #test01EmptyPortfolioHasBalanceZero stamp: 'fr 11/8/2020 22:01:54'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioWithASingleAccountWithNoTransactionsHasBalanceZero stamp: 'fr 11/8/2020 22:01:54'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioWithASingleAccountReflectsItsTransactionsValuesInItsBalance stamp: 'fr 11/8/2020 22:01:54'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithMultipleAccountsAndPortfoliosReflectsTheirTransactionsValuesInItsBalance stamp: 'fr 11/8/2020 22:01:54'!
PASSED!

!testRun: #PortfolioTest #test05EmptyPortfolioHasNotRegisteredAnyTransaction stamp: 'fr 11/8/2020 22:01:54'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioWithASingleAccountRegistersItsTransactions stamp: 'fr 11/8/2020 22:01:54'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioWithMulltipleAccountsAndPortfoliosRegistersAllTheirTransactions stamp: 'fr 11/8/2020 22:01:54'!
PASSED!

!testRun: #PortfolioTest #test08EmptyPortfolioDoesNotExhibitAnyTransaction stamp: 'fr 11/8/2020 22:01:54'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithASingleAccountExhibitsItsTransactions stamp: 'fr 11/8/2020 22:01:54'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioWithMultipleAccountsAndPortfoliosExhibitsAllTheirTransactionsCombined stamp: 'fr 11/8/2020 22:01:54'!
PASSED!

!testRun: #PortfolioTest #test11EmptyPortfolioDoesNotContainAnyAccount stamp: 'fr 11/8/2020 22:01:54'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioContainsAnAccountAfterItIsAdded stamp: 'fr 11/8/2020 22:01:54'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioContainsAnAccountAfterItIsAddedToItselfOrAnyOfItsDecendents stamp: 'fr 11/8/2020 22:01:54'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioDoesNotContainAnythingThatWasNotAddedToItself stamp: 'fr 11/8/2020 22:01:54'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotAddItself stamp: 'fr 11/8/2020 22:01:54'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioCanNotAddItsParent stamp: 'fr 11/8/2020 22:01:54'!
PASSED!

!testRun: #PortfolioTest #test17PortfolioCanNotAddAnyAncestor stamp: 'fr 11/8/2020 22:01:54'!
PASSED!

!testRun: #PortfolioTest #test18PortfolioCanNotAddAnyPreviousMemberOfTheTree stamp: 'fr 11/8/2020 22:01:54'!
PASSED!

!testRun: #PortfolioTest #test19PortfolioCanNotAddAnotherOneWhichSharesChild stamp: 'fr 11/8/2020 22:01:54'!
PASSED!

!testRun: #PortfolioTest #test20AddingShouldBehaveIdenticallyAsCreatingAPortfolioWithAccounts stamp: 'fr 11/8/2020 22:01:54'!
PASSED!

!testRun: #PortfolioTest #test21CreatingAPortfolioWithAccountsShouldBehaveIdenticallyAsAddingThem stamp: 'fr 11/8/2020 22:01:54'!
PASSED!

!testRun: #PortfolioTest #test22PortfolioCanNotAddDuplicateAccountIndirectly stamp: 'fr 11/8/2020 22:01:54'!
PASSED!

account _ ReceptiveAccount new.
anotherAccount _ ReceptiveAccount new.

deposit _ Deposit register: 100 on: account. 
anotherDeposit _ Deposit register: 50 on: anotherAccount.
anotherDeposit _ Deposit register: 150 on: anotherAccount.
anotherDeposit _ Deposit register: 200 on: anotherAccount.
 
innerPortfolio _ Portfolio with: (OrderedCollection with: account).
portfolio _ Portfolio with: (OrderedCollection with: anotherAccount with: innerPortfolio).

deposits _ portfolio transactions!

account _ ReceptiveAccount new.
anotherAccount _ ReceptiveAccount new.

deposit _ Deposit register: 100 on: account. 
deposit _ Withdraw register: 100 on: account. 
anotherDeposit _ Deposit register: 50 on: anotherAccount.
anotherDeposit _ Deposit register: 150 on: anotherAccount.
anotherDeposit _ Deposit register: 200 on: anotherAccount.
 
innerPortfolio _ Portfolio with: (OrderedCollection with: account).
portfolio _ Portfolio with: (OrderedCollection with: anotherAccount with: innerPortfolio).

deposits _ portfolio transactions!

----SNAPSHOT----(8 November 2020 22:09:45) CuisUniversity-4384.image priorSource: 17520808!

----SNAPSHOT----(8 November 2020 22:11:12) CuisUniversity-4384.image priorSource: 17540355!
!Portfolio methodsFor: 'private - account management' stamp: 'fr 11/8/2020 22:14:34'!
collectTransactions: aTransactionsList

	^accounts inject: aTransactionsList into: [:totalTransactions :anAccount | totalTransactions addAllLast: (anAccount collectTransactionsInto: aTransactionsList)] 
	! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'fr 11/8/2020 22:14:34' prior: 50879562!
transactions
	
	| transactions |
	transactions _ OrderedCollection new.
	"accounts do: [:anAccount | transactions addAllLast: anAccount transactions]."
	self collectTransactions: transactions.
	^transactions
! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'fr 11/8/2020 22:14:34' prior: 50879793!
collectTransactions: aTransactionsList

	^accounts inject: aTransactionsList into: [:totalTransactions :anAccount | totalTransactions addAllLast: (anAccount collectTransactionsInto: aTransactionsList)] 
	! !

!methodRemoval: Portfolio #collectTransactionsInto: stamp: 'fr 11/8/2020 22:14:34'!
collectTransactionsInto: aTransactionsList

	^accounts inject: aTransactionsList into: [:totalTransactions :anAccount | totalTransactions addAllLast: (anAccount collectTransactionsInto: aTransactionsList)] 
	!
!ReceptiveAccount methodsFor: 'private - account management' stamp: 'fr 11/8/2020 22:14:46'!
collectTransactions: aTransactionsList

	^self transactions
! !

!methodRemoval: ReceptiveAccount #collectTransactionsInto: stamp: 'fr 11/8/2020 22:14:46'!
collectTransactionsInto: aTransactionsList

	^self transactions
!

!testRun: #PortfolioTest #test01EmptyPortfolioHasBalanceZero stamp: 'fr 11/8/2020 22:14:48'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioWithASingleAccountWithNoTransactionsHasBalanceZero stamp: 'fr 11/8/2020 22:14:48'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioWithASingleAccountReflectsItsTransactionsValuesInItsBalance stamp: 'fr 11/8/2020 22:14:48'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithMultipleAccountsAndPortfoliosReflectsTheirTransactionsValuesInItsBalance stamp: 'fr 11/8/2020 22:14:48'!
PASSED!

!testRun: #PortfolioTest #test05EmptyPortfolioHasNotRegisteredAnyTransaction stamp: 'fr 11/8/2020 22:14:48'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioWithASingleAccountRegistersItsTransactions stamp: 'fr 11/8/2020 22:14:48'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioWithMulltipleAccountsAndPortfoliosRegistersAllTheirTransactions stamp: 'fr 11/8/2020 22:14:48'!
PASSED!

!testRun: #PortfolioTest #test08EmptyPortfolioDoesNotExhibitAnyTransaction stamp: 'fr 11/8/2020 22:14:48'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithASingleAccountExhibitsItsTransactions stamp: 'fr 11/8/2020 22:14:48'!
ERROR!

!testRun: #PortfolioTest #test10PortfolioWithMultipleAccountsAndPortfoliosExhibitsAllTheirTransactionsCombined stamp: 'fr 11/8/2020 22:14:48'!
ERROR!

!testRun: #PortfolioTest #test11EmptyPortfolioDoesNotContainAnyAccount stamp: 'fr 11/8/2020 22:14:48'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioContainsAnAccountAfterItIsAdded stamp: 'fr 11/8/2020 22:14:48'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioContainsAnAccountAfterItIsAddedToItselfOrAnyOfItsDecendents stamp: 'fr 11/8/2020 22:14:48'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioDoesNotContainAnythingThatWasNotAddedToItself stamp: 'fr 11/8/2020 22:14:48'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotAddItself stamp: 'fr 11/8/2020 22:14:48'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioCanNotAddItsParent stamp: 'fr 11/8/2020 22:14:48'!
PASSED!

!testRun: #PortfolioTest #test17PortfolioCanNotAddAnyAncestor stamp: 'fr 11/8/2020 22:14:48'!
PASSED!

!testRun: #PortfolioTest #test18PortfolioCanNotAddAnyPreviousMemberOfTheTree stamp: 'fr 11/8/2020 22:14:48'!
PASSED!

!testRun: #PortfolioTest #test19PortfolioCanNotAddAnotherOneWhichSharesChild stamp: 'fr 11/8/2020 22:14:48'!
PASSED!

!testRun: #PortfolioTest #test20AddingShouldBehaveIdenticallyAsCreatingAPortfolioWithAccounts stamp: 'fr 11/8/2020 22:14:48'!
PASSED!

!testRun: #PortfolioTest #test21CreatingAPortfolioWithAccountsShouldBehaveIdenticallyAsAddingThem stamp: 'fr 11/8/2020 22:14:48'!
PASSED!

!testRun: #PortfolioTest #test22PortfolioCanNotAddDuplicateAccountIndirectly stamp: 'fr 11/8/2020 22:14:48'!
PASSED!
!Portfolio methodsFor: 'private - account management' stamp: 'fr 11/8/2020 22:14:58' prior: 50879813!
collectTransactions: aTransactionsList

	^accounts inject: aTransactionsList into: [:totalTransactions :anAccount | totalTransactions addAllLast: (anAccount collectTransactions: aTransactionsList)] 
	! !

!testRun: #PortfolioTest #test01EmptyPortfolioHasBalanceZero stamp: 'fr 11/8/2020 22:14:59'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioWithASingleAccountWithNoTransactionsHasBalanceZero stamp: 'fr 11/8/2020 22:14:59'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioWithASingleAccountReflectsItsTransactionsValuesInItsBalance stamp: 'fr 11/8/2020 22:14:59'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithMultipleAccountsAndPortfoliosReflectsTheirTransactionsValuesInItsBalance stamp: 'fr 11/8/2020 22:14:59'!
PASSED!

!testRun: #PortfolioTest #test05EmptyPortfolioHasNotRegisteredAnyTransaction stamp: 'fr 11/8/2020 22:14:59'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioWithASingleAccountRegistersItsTransactions stamp: 'fr 11/8/2020 22:14:59'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioWithMulltipleAccountsAndPortfoliosRegistersAllTheirTransactions stamp: 'fr 11/8/2020 22:14:59'!
PASSED!

!testRun: #PortfolioTest #test08EmptyPortfolioDoesNotExhibitAnyTransaction stamp: 'fr 11/8/2020 22:14:59'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithASingleAccountExhibitsItsTransactions stamp: 'fr 11/8/2020 22:14:59'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioWithMultipleAccountsAndPortfoliosExhibitsAllTheirTransactionsCombined stamp: 'fr 11/8/2020 22:14:59'!
PASSED!

!testRun: #PortfolioTest #test11EmptyPortfolioDoesNotContainAnyAccount stamp: 'fr 11/8/2020 22:14:59'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioContainsAnAccountAfterItIsAdded stamp: 'fr 11/8/2020 22:14:59'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioContainsAnAccountAfterItIsAddedToItselfOrAnyOfItsDecendents stamp: 'fr 11/8/2020 22:14:59'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioDoesNotContainAnythingThatWasNotAddedToItself stamp: 'fr 11/8/2020 22:14:59'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotAddItself stamp: 'fr 11/8/2020 22:14:59'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioCanNotAddItsParent stamp: 'fr 11/8/2020 22:14:59'!
PASSED!

!testRun: #PortfolioTest #test17PortfolioCanNotAddAnyAncestor stamp: 'fr 11/8/2020 22:14:59'!
PASSED!

!testRun: #PortfolioTest #test18PortfolioCanNotAddAnyPreviousMemberOfTheTree stamp: 'fr 11/8/2020 22:14:59'!
PASSED!

!testRun: #PortfolioTest #test19PortfolioCanNotAddAnotherOneWhichSharesChild stamp: 'fr 11/8/2020 22:14:59'!
PASSED!

!testRun: #PortfolioTest #test20AddingShouldBehaveIdenticallyAsCreatingAPortfolioWithAccounts stamp: 'fr 11/8/2020 22:14:59'!
PASSED!

!testRun: #PortfolioTest #test21CreatingAPortfolioWithAccountsShouldBehaveIdenticallyAsAddingThem stamp: 'fr 11/8/2020 22:14:59'!
PASSED!

!testRun: #PortfolioTest #test22PortfolioCanNotAddDuplicateAccountIndirectly stamp: 'fr 11/8/2020 22:14:59'!
PASSED!
!Portfolio methodsFor: 'transactions' stamp: 'fr 11/8/2020 22:15:19' prior: 50879803!
transactions
	
	| transactions |
	transactions _ OrderedCollection new.
	self collectTransactions: transactions.
	^transactions
! !
!Portfolio methodsFor: 'private - account management' stamp: 'fr 11/8/2020 22:16:21' prior: 50877809!
includes: anAccountToCheck 
	
	^self = anAccountToCheck 
		or: [accounts 
			anySatisfy: [:anAccount | 
				(anAccount includes: anAccountToCheck) or: [anAccountToCheck includes: anAccount]
			]
		]! !
!Portfolio methodsFor: 'accounts management' stamp: 'fr 11/8/2020 22:17:46' prior: 50875589!
hasBeenAddedBy: a 
	
	parents add: a! !
!Portfolio methodsFor: 'accounts management' stamp: 'fr 11/8/2020 22:17:56' prior: 50880041!
hasBeenAddedBy: aPortfolio
	
	parents add: aPortfolio! !

----SNAPSHOT----(8 November 2020 22:18:29) CuisUniversity-4384.image priorSource: 17540448!
!Portfolio class methodsFor: 'error descriptions' stamp: 'fr 11/8/2020 22:19:41' prior: 50872986!
canNotAddAccountErrorDescription
	
	^'Can not add account twice'! !
!Portfolio class methodsFor: 'error descriptions' stamp: 'fr 11/8/2020 22:20:02' prior: 50880054!
canNotAddAccountErrorDescription
	
	^'Can not add an account twice'! !
!Account methodsFor: 'no messages' stamp: 'fr 11/8/2020 22:20:26'!
balance
	
	self subclassResponsibility ! !
!Account methodsFor: 'as yet unclassified' stamp: 'fr 11/8/2020 22:20:29'!
transactions
	
	self subclassResponsibility ! !
!Account methodsFor: 'as yet unclassified' stamp: 'fr 11/8/2020 22:20:40'!
hasRegistered: aTransaction
	
	self subclassResponsibility ! !
!Account methodsFor: 'as yet unclassified' stamp: 'fr 11/8/2020 22:21:25'!
contains: anAccount 

	self subclassResponsibility ! !
!Account methodsFor: 'as yet unclassified' stamp: 'fr 11/8/2020 22:22:10'!
collectTransactions: aTransactionList

	self subclassResponsibility ! !
!ReceptiveAccount methodsFor: 'private - account management' stamp: 'fr 11/8/2020 22:22:39' prior: 50875863!
includes: anAccount 
	
	^self = anAccount ! !
!Account methodsFor: 'private' stamp: 'fr 11/8/2020 22:25:41'!
includes: anAccount

	self subclassResponsibility ! !

----SNAPSHOT----(8 November 2020 22:25:55) CuisUniversity-4384.image priorSource: 17548792!
!PortfolioTest methodsFor: 'tests' stamp: 'fr 11/8/2020 22:26:28'!
test20PortfolioCanNotAddDuplicateAccountIndirectly

	| portfolio parentPortfolio rootPortfolio |
	portfolio _ Portfolio new.
	parentPortfolio _ Portfolio with: (OrderedCollection with: portfolio).
	rootPortfolio _ Portfolio with: (OrderedCollection with: parentPortfolio).
	
	self  should: [rootPortfolio add: portfolio] 
		raise: Error 
		withMessageText: Portfolio canNotAddAccountErrorDescription! !

!methodRemoval: PortfolioTest #test22PortfolioCanNotAddDuplicateAccountIndirectly stamp: 'fr 11/8/2020 22:26:28'!
test22PortfolioCanNotAddDuplicateAccountIndirectly

	| portfolio parentPortfolio rootPortfolio |
	portfolio _ Portfolio new.
	parentPortfolio _ Portfolio with: (OrderedCollection with: portfolio).
	rootPortfolio _ Portfolio with: (OrderedCollection with: parentPortfolio).
	
	self  should: [rootPortfolio add: portfolio] 
		raise: Error 
		withMessageText: Portfolio canNotAddAccountErrorDescription!
!PortfolioTest methodsFor: 'tests' stamp: 'fr 11/8/2020 22:26:37'!
test21AddingShouldBehaveIdenticallyAsCreatingAPortfolioWithAccounts

	| portfolio parentPortfolio |
	portfolio _ Portfolio new.
	parentPortfolio _ Portfolio new.
	
	parentPortfolio add: portfolio.
	
	self  should: [portfolio add: parentPortfolio] 
		raise: Error 
		withMessageText: Portfolio canNotAddAccountErrorDescription! !

!methodRemoval: PortfolioTest #test20AddingShouldBehaveIdenticallyAsCreatingAPortfolioWithAccounts stamp: 'fr 11/8/2020 22:26:37'!
test20AddingShouldBehaveIdenticallyAsCreatingAPortfolioWithAccounts

	| portfolio parentPortfolio |
	portfolio _ Portfolio new.
	parentPortfolio _ Portfolio new.
	
	parentPortfolio add: portfolio.
	
	self  should: [portfolio add: parentPortfolio] 
		raise: Error 
		withMessageText: Portfolio canNotAddAccountErrorDescription!
!PortfolioTest methodsFor: 'tests' stamp: 'fr 11/8/2020 22:26:42'!
test22CreatingAPortfolioWithAccountsShouldBehaveIdenticallyAsAddingThem

	| portfolio parentPortfolio anotherParentPortfolio |
	portfolio _ Portfolio new. 
	parentPortfolio _ Portfolio with: (OrderedCollection with: portfolio).
	anotherParentPortfolio _ Portfolio with: (OrderedCollection with: portfolio). 
	
	self  should: [Portfolio with: (OrderedCollection with: parentPortfolio with: anotherParentPortfolio)] 
		raise: Error 
		withMessageText: Portfolio canNotAddAccountErrorDescription! !

!methodRemoval: PortfolioTest #test21CreatingAPortfolioWithAccountsShouldBehaveIdenticallyAsAddingThem stamp: 'fr 11/8/2020 22:26:42'!
test21CreatingAPortfolioWithAccountsShouldBehaveIdenticallyAsAddingThem

	| portfolio parentPortfolio anotherParentPortfolio |
	portfolio _ Portfolio new. 
	parentPortfolio _ Portfolio with: (OrderedCollection with: portfolio).
	anotherParentPortfolio _ Portfolio with: (OrderedCollection with: portfolio). 
	
	self  should: [Portfolio with: (OrderedCollection with: parentPortfolio with: anotherParentPortfolio)] 
		raise: Error 
		withMessageText: Portfolio canNotAddAccountErrorDescription!
!PortfolioTest methodsFor: 'tests' stamp: 'fr 11/8/2020 22:27:16'!
test22CreatingAPortfolioWithAccountsShouldFailIdenticallyAsWhenAddingThem

	| portfolio parentPortfolio anotherParentPortfolio |
	portfolio _ Portfolio new. 
	parentPortfolio _ Portfolio with: (OrderedCollection with: portfolio).
	anotherParentPortfolio _ Portfolio with: (OrderedCollection with: portfolio). 
	
	self  should: [Portfolio with: (OrderedCollection with: parentPortfolio with: anotherParentPortfolio)] 
		raise: Error 
		withMessageText: Portfolio canNotAddAccountErrorDescription! !

!methodRemoval: PortfolioTest #test22CreatingAPortfolioWithAccountsShouldBehaveIdenticallyAsAddingThem stamp: 'fr 11/8/2020 22:27:16'!
test22CreatingAPortfolioWithAccountsShouldBehaveIdenticallyAsAddingThem

	| portfolio parentPortfolio anotherParentPortfolio |
	portfolio _ Portfolio new. 
	parentPortfolio _ Portfolio with: (OrderedCollection with: portfolio).
	anotherParentPortfolio _ Portfolio with: (OrderedCollection with: portfolio). 
	
	self  should: [Portfolio with: (OrderedCollection with: parentPortfolio with: anotherParentPortfolio)] 
		raise: Error 
		withMessageText: Portfolio canNotAddAccountErrorDescription!

----SNAPSHOT----(8 November 2020 22:34:36) CuisUniversity-4384.image priorSource: 17550293!
!Portfolio methodsFor: 'error' stamp: 'fr 11/8/2020 22:36:30' prior: 50876059!
signalCanNotAddAccountError

	^self error: self class canNotAddAccountErrorDescription! !

----SNAPSHOT----(8 November 2020 22:37:06) CuisUniversity-4384.image priorSource: 17554663!

----QUIT----(9 November 2020 02:41:56) CuisUniversity-4384.image priorSource: 17554937!

----STARTUP---- (9 November 2020 08:16:02) as /home/fede/Documentos/Facultad/Inge1/Cuises/linux64/CuisUniversity-4384.image!


!testRun: #PortfolioTest #test01EmptyPortfolioHasBalanceZero stamp: 'fr 11/9/2020 08:19:09'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioWithASingleAccountWithNoTransactionsHasBalanceZero stamp: 'fr 11/9/2020 08:19:09'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioWithASingleAccountReflectsItsTransactionsValuesInItsBalance stamp: 'fr 11/9/2020 08:19:09'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithMultipleAccountsAndPortfoliosReflectsTheirTransactionsValuesInItsBalance stamp: 'fr 11/9/2020 08:19:09'!
PASSED!

!testRun: #PortfolioTest #test05EmptyPortfolioHasNotRegisteredAnyTransaction stamp: 'fr 11/9/2020 08:19:09'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioWithASingleAccountRegistersItsTransactions stamp: 'fr 11/9/2020 08:19:09'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioWithMulltipleAccountsAndPortfoliosRegistersAllTheirTransactions stamp: 'fr 11/9/2020 08:19:09'!
PASSED!

!testRun: #PortfolioTest #test08EmptyPortfolioDoesNotExhibitAnyTransaction stamp: 'fr 11/9/2020 08:19:09'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithASingleAccountExhibitsItsTransactions stamp: 'fr 11/9/2020 08:19:09'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioWithMultipleAccountsAndPortfoliosExhibitsAllTheirTransactionsCombined stamp: 'fr 11/9/2020 08:19:09'!
PASSED!

!testRun: #PortfolioTest #test11EmptyPortfolioDoesNotContainAnyAccount stamp: 'fr 11/9/2020 08:19:09'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioContainsAnAccountAfterItIsAdded stamp: 'fr 11/9/2020 08:19:09'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioContainsAnAccountAfterItIsAddedToItselfOrAnyOfItsDecendents stamp: 'fr 11/9/2020 08:19:09'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioDoesNotContainAnythingThatWasNotAddedToItself stamp: 'fr 11/9/2020 08:19:09'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotAddItself stamp: 'fr 11/9/2020 08:19:09'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioCanNotAddItsParent stamp: 'fr 11/9/2020 08:19:09'!
PASSED!

!testRun: #PortfolioTest #test17PortfolioCanNotAddAnyAncestor stamp: 'fr 11/9/2020 08:19:09'!
PASSED!

!testRun: #PortfolioTest #test18PortfolioCanNotAddAnyPreviousMemberOfTheTree stamp: 'fr 11/9/2020 08:19:09'!
PASSED!

!testRun: #PortfolioTest #test19PortfolioCanNotAddAnotherOneWhichSharesChild stamp: 'fr 11/9/2020 08:19:09'!
PASSED!

!testRun: #PortfolioTest #test20PortfolioCanNotAddDuplicateAccountIndirectly stamp: 'fr 11/9/2020 08:19:09'!
PASSED!

!testRun: #PortfolioTest #test21AddingShouldBehaveIdenticallyAsCreatingAPortfolioWithAccounts stamp: 'fr 11/9/2020 08:19:09'!
PASSED!

!testRun: #PortfolioTest #test22CreatingAPortfolioWithAccountsShouldFailIdenticallyAsWhenAddingThem stamp: 'fr 11/9/2020 08:19:09'!
PASSED!

!testRun: #PortfolioTest #test01EmptyPortfolioHasBalanceZero stamp: 'fr 11/9/2020 08:19:20'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioWithASingleAccountWithNoTransactionsHasBalanceZero stamp: 'fr 11/9/2020 08:19:20'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioWithASingleAccountReflectsItsTransactionsValuesInItsBalance stamp: 'fr 11/9/2020 08:19:20'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithMultipleAccountsAndPortfoliosReflectsTheirTransactionsValuesInItsBalance stamp: 'fr 11/9/2020 08:19:20'!
PASSED!

!testRun: #PortfolioTest #test05EmptyPortfolioHasNotRegisteredAnyTransaction stamp: 'fr 11/9/2020 08:19:20'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioWithASingleAccountRegistersItsTransactions stamp: 'fr 11/9/2020 08:19:20'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioWithMulltipleAccountsAndPortfoliosRegistersAllTheirTransactions stamp: 'fr 11/9/2020 08:19:20'!
PASSED!

!testRun: #PortfolioTest #test08EmptyPortfolioDoesNotExhibitAnyTransaction stamp: 'fr 11/9/2020 08:19:20'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithASingleAccountExhibitsItsTransactions stamp: 'fr 11/9/2020 08:19:20'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioWithMultipleAccountsAndPortfoliosExhibitsAllTheirTransactionsCombined stamp: 'fr 11/9/2020 08:19:20'!
PASSED!

!testRun: #PortfolioTest #test11EmptyPortfolioDoesNotContainAnyAccount stamp: 'fr 11/9/2020 08:19:20'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioContainsAnAccountAfterItIsAdded stamp: 'fr 11/9/2020 08:19:20'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioContainsAnAccountAfterItIsAddedToItselfOrAnyOfItsDecendents stamp: 'fr 11/9/2020 08:19:20'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioDoesNotContainAnythingThatWasNotAddedToItself stamp: 'fr 11/9/2020 08:19:20'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotAddItself stamp: 'fr 11/9/2020 08:19:20'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioCanNotAddItsParent stamp: 'fr 11/9/2020 08:19:20'!
PASSED!

!testRun: #PortfolioTest #test17PortfolioCanNotAddAnyAncestor stamp: 'fr 11/9/2020 08:19:20'!
PASSED!

!testRun: #PortfolioTest #test18PortfolioCanNotAddAnyPreviousMemberOfTheTree stamp: 'fr 11/9/2020 08:19:20'!
PASSED!

!testRun: #PortfolioTest #test19PortfolioCanNotAddAnotherOneWhichSharesChild stamp: 'fr 11/9/2020 08:19:20'!
PASSED!

!testRun: #PortfolioTest #test20PortfolioCanNotAddDuplicateAccountIndirectly stamp: 'fr 11/9/2020 08:19:20'!
PASSED!

!testRun: #PortfolioTest #test21AddingShouldBehaveIdenticallyAsCreatingAPortfolioWithAccounts stamp: 'fr 11/9/2020 08:19:20'!
PASSED!

!testRun: #PortfolioTest #test22CreatingAPortfolioWithAccountsShouldFailIdenticallyAsWhenAddingThem stamp: 'fr 11/9/2020 08:19:20'!
PASSED!
!PortfolioTest methodsFor: 'tests - hasRegistered' stamp: 'fr 11/9/2020 08:22:38' prior: 50872590!
test06PortfolioWithASingleAccountRegistersItsTransactions

	| portfolio account deposit |
	account _ ReceptiveAccount new.
	portfolio _ Portfolio with: (OrderedCollection with: account).
	deposit _ Deposit register: 100 on: account.	
	self assert: [portfolio hasRegistered: deposit]! !

!testRun: #PortfolioTest #test01EmptyPortfolioHasBalanceZero stamp: 'fr 11/9/2020 08:23:24'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioWithASingleAccountWithNoTransactionsHasBalanceZero stamp: 'fr 11/9/2020 08:23:24'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioWithASingleAccountReflectsItsTransactionsValuesInItsBalance stamp: 'fr 11/9/2020 08:23:24'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithMultipleAccountsAndPortfoliosReflectsTheirTransactionsValuesInItsBalance stamp: 'fr 11/9/2020 08:23:24'!
PASSED!

!testRun: #PortfolioTest #test05EmptyPortfolioHasNotRegisteredAnyTransaction stamp: 'fr 11/9/2020 08:23:24'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioWithASingleAccountRegistersItsTransactions stamp: 'fr 11/9/2020 08:23:24'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioWithMulltipleAccountsAndPortfoliosRegistersAllTheirTransactions stamp: 'fr 11/9/2020 08:23:24'!
PASSED!

!testRun: #PortfolioTest #test08EmptyPortfolioDoesNotExhibitAnyTransaction stamp: 'fr 11/9/2020 08:23:24'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithASingleAccountExhibitsItsTransactions stamp: 'fr 11/9/2020 08:23:24'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioWithMultipleAccountsAndPortfoliosExhibitsAllTheirTransactionsCombined stamp: 'fr 11/9/2020 08:23:24'!
PASSED!

!testRun: #PortfolioTest #test11EmptyPortfolioDoesNotContainAnyAccount stamp: 'fr 11/9/2020 08:23:24'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioContainsAnAccountAfterItIsAdded stamp: 'fr 11/9/2020 08:23:24'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioContainsAnAccountAfterItIsAddedToItselfOrAnyOfItsDecendents stamp: 'fr 11/9/2020 08:23:24'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioDoesNotContainAnythingThatWasNotAddedToItself stamp: 'fr 11/9/2020 08:23:24'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotAddItself stamp: 'fr 11/9/2020 08:23:24'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioCanNotAddItsParent stamp: 'fr 11/9/2020 08:23:24'!
PASSED!

!testRun: #PortfolioTest #test17PortfolioCanNotAddAnyAncestor stamp: 'fr 11/9/2020 08:23:24'!
PASSED!

!testRun: #PortfolioTest #test18PortfolioCanNotAddAnyPreviousMemberOfTheTree stamp: 'fr 11/9/2020 08:23:24'!
PASSED!

!testRun: #PortfolioTest #test19PortfolioCanNotAddAnotherOneWhichSharesChild stamp: 'fr 11/9/2020 08:23:24'!
PASSED!

!testRun: #PortfolioTest #test20PortfolioCanNotAddDuplicateAccountIndirectly stamp: 'fr 11/9/2020 08:23:24'!
PASSED!

!testRun: #PortfolioTest #test21AddingShouldBehaveIdenticallyAsCreatingAPortfolioWithAccounts stamp: 'fr 11/9/2020 08:23:24'!
PASSED!

!testRun: #PortfolioTest #test22CreatingAPortfolioWithAccountsShouldFailIdenticallyAsWhenAddingThem stamp: 'fr 11/9/2020 08:23:24'!
PASSED!
!PortfolioTest methodsFor: 'tests - hasRegistered' stamp: 'fr 11/9/2020 08:23:59' prior: 50880425!
test06PortfolioWithASingleAccountRegistersItsTransactions

	| portfolio account deposit |
	account _ ReceptiveAccount new.
	deposit _ Deposit register: 100 on: account.	
	portfolio _ Portfolio with: (OrderedCollection with: account).
	self assert: [portfolio hasRegistered: deposit]! !
!PortfolioTest methodsFor: 'setup' stamp: 'fr 11/9/2020 08:29:50' overrides: 16927572!
setUp! !
!PortfolioTest methodsFor: 'tests - balance' stamp: 'fr 11/9/2020 08:35:58' prior: 50872520!
test04PortfolioWithMultipleAccountsAndPortfoliosReflectsTheirTransactionsValuesInItsBalance

	| portfolio account anotherAccount anotherPortfolio |
	account _ ReceptiveAccount new.
	anotherAccount _ ReceptiveAccount new.
	
	Deposit register: 100 on: account. 
	Deposit register: 50 on: anotherAccount.
	 
	anotherPortfolio _ Portfolio with: (OrderedCollection with: account).
	portfolio _ Portfolio with: (OrderedCollection with: anotherAccount with: anotherPortfolio).
	self assert: [portfolio balance = 150]! !
!PortfolioTest methodsFor: 'tests - hasRegistered' stamp: 'fr 11/9/2020 08:36:23' prior: 50872673!
test07PortfolioWithMulltipleAccountsAndPortfoliosRegistersAllTheirTransactions

	| portfolio account anotherAccount anotherPortfolio anotherDeposit deposit |
	account _ ReceptiveAccount new.
	anotherAccount _ ReceptiveAccount new.
	
	deposit _ Deposit register: 100 on: account. 
	anotherDeposit _ Deposit register: 50 on: anotherAccount.
	 
	anotherPortfolio _ Portfolio with: (OrderedCollection with: account).
	portfolio _ Portfolio with: (OrderedCollection with: anotherAccount with: anotherPortfolio).
	self assert: [
		(portfolio hasRegistered: deposit) and: 
		[portfolio hasRegistered: anotherDeposit]
	]! !
!PortfolioTest methodsFor: 'tests - balance' stamp: 'fr 11/9/2020 08:36:49' prior: 50871798!
test01EmptyPortfolioHasBalanceZero

	| portfolio1 |
	portfolio1 _ Portfolio new.
	self assert: [portfolio1 balance = 0]! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'fr 11/9/2020 08:36:59' prior: 50880582!
test01EmptyPortfolioHasBalanceZero

	 
	portfolio1 _ Portfolio new.
	self assert: [portfolio1 balance = 0]! !

!classDefinition: #PortfolioTest category: 'Portfolio-Ejercicio' stamp: 'fr 11/9/2020 08:36:59'!
TestCase subclass: #PortfolioTest
	instanceVariableNames: 'portfolio1'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!
!PortfolioTest methodsFor: 'tests - balance' stamp: 'fr 11/9/2020 08:37:07' prior: 50880589!
test01EmptyPortfolioHasBalanceZero

	portfolio1 _ Portfolio new.
	self assert: [portfolio1 balance = 0]! !
!PortfolioTest methodsFor: 'tests - hasRegistered' stamp: 'fr 11/9/2020 08:37:27' prior: 50871896!
test05EmptyPortfolioHasNotRegisteredAnyTransaction

	| account deposit |
	account _ ReceptiveAccount new.
	deposit _ Deposit register: 100 on: account.	
	portfolio1 _ Portfolio new.
	self assert: [(portfolio1 hasRegistered: deposit) not]! !

!testRun: #PortfolioTest #test05EmptyPortfolioHasNotRegisteredAnyTransaction stamp: 'fr 11/9/2020 08:37:28'!
PASSED!

!testRun: #PortfolioTest #test01EmptyPortfolioHasBalanceZero stamp: 'fr 11/9/2020 08:37:28'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioWithASingleAccountWithNoTransactionsHasBalanceZero stamp: 'fr 11/9/2020 08:37:28'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioWithASingleAccountReflectsItsTransactionsValuesInItsBalance stamp: 'fr 11/9/2020 08:37:28'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithMultipleAccountsAndPortfoliosReflectsTheirTransactionsValuesInItsBalance stamp: 'fr 11/9/2020 08:37:28'!
PASSED!

!testRun: #PortfolioTest #test05EmptyPortfolioHasNotRegisteredAnyTransaction stamp: 'fr 11/9/2020 08:37:28'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioWithASingleAccountRegistersItsTransactions stamp: 'fr 11/9/2020 08:37:28'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioWithMulltipleAccountsAndPortfoliosRegistersAllTheirTransactions stamp: 'fr 11/9/2020 08:37:28'!
PASSED!

!testRun: #PortfolioTest #test08EmptyPortfolioDoesNotExhibitAnyTransaction stamp: 'fr 11/9/2020 08:37:28'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithASingleAccountExhibitsItsTransactions stamp: 'fr 11/9/2020 08:37:28'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioWithMultipleAccountsAndPortfoliosExhibitsAllTheirTransactionsCombined stamp: 'fr 11/9/2020 08:37:28'!
PASSED!

!testRun: #PortfolioTest #test11EmptyPortfolioDoesNotContainAnyAccount stamp: 'fr 11/9/2020 08:37:28'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioContainsAnAccountAfterItIsAdded stamp: 'fr 11/9/2020 08:37:28'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioContainsAnAccountAfterItIsAddedToItselfOrAnyOfItsDecendents stamp: 'fr 11/9/2020 08:37:28'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioDoesNotContainAnythingThatWasNotAddedToItself stamp: 'fr 11/9/2020 08:37:28'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotAddItself stamp: 'fr 11/9/2020 08:37:28'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioCanNotAddItsParent stamp: 'fr 11/9/2020 08:37:28'!
PASSED!

!testRun: #PortfolioTest #test17PortfolioCanNotAddAnyAncestor stamp: 'fr 11/9/2020 08:37:28'!
PASSED!

!testRun: #PortfolioTest #test18PortfolioCanNotAddAnyPreviousMemberOfTheTree stamp: 'fr 11/9/2020 08:37:28'!
PASSED!

!testRun: #PortfolioTest #test19PortfolioCanNotAddAnotherOneWhichSharesChild stamp: 'fr 11/9/2020 08:37:28'!
PASSED!

!testRun: #PortfolioTest #test20PortfolioCanNotAddDuplicateAccountIndirectly stamp: 'fr 11/9/2020 08:37:28'!
PASSED!

!testRun: #PortfolioTest #test21AddingShouldBehaveIdenticallyAsCreatingAPortfolioWithAccounts stamp: 'fr 11/9/2020 08:37:28'!
PASSED!

!testRun: #PortfolioTest #test22CreatingAPortfolioWithAccountsShouldFailIdenticallyAsWhenAddingThem stamp: 'fr 11/9/2020 08:37:28'!
PASSED!
!PortfolioTest methodsFor: 'tests - transactions' stamp: 'fr 11/9/2020 08:37:40' prior: 50871972!
test08EmptyPortfolioDoesNotExhibitAnyTransaction

	portfolio1 _ Portfolio new.
	self assert: [portfolio1 transactions = OrderedCollection new]! !

!testRun: #PortfolioTest #test08EmptyPortfolioDoesNotExhibitAnyTransaction stamp: 'fr 11/9/2020 08:37:41'!
PASSED!

!testRun: #PortfolioTest #test01EmptyPortfolioHasBalanceZero stamp: 'fr 11/9/2020 08:37:41'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioWithASingleAccountWithNoTransactionsHasBalanceZero stamp: 'fr 11/9/2020 08:37:41'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioWithASingleAccountReflectsItsTransactionsValuesInItsBalance stamp: 'fr 11/9/2020 08:37:41'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithMultipleAccountsAndPortfoliosReflectsTheirTransactionsValuesInItsBalance stamp: 'fr 11/9/2020 08:37:41'!
PASSED!

!testRun: #PortfolioTest #test05EmptyPortfolioHasNotRegisteredAnyTransaction stamp: 'fr 11/9/2020 08:37:41'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioWithASingleAccountRegistersItsTransactions stamp: 'fr 11/9/2020 08:37:41'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioWithMulltipleAccountsAndPortfoliosRegistersAllTheirTransactions stamp: 'fr 11/9/2020 08:37:41'!
PASSED!

!testRun: #PortfolioTest #test08EmptyPortfolioDoesNotExhibitAnyTransaction stamp: 'fr 11/9/2020 08:37:41'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithASingleAccountExhibitsItsTransactions stamp: 'fr 11/9/2020 08:37:41'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioWithMultipleAccountsAndPortfoliosExhibitsAllTheirTransactionsCombined stamp: 'fr 11/9/2020 08:37:41'!
PASSED!

!testRun: #PortfolioTest #test11EmptyPortfolioDoesNotContainAnyAccount stamp: 'fr 11/9/2020 08:37:41'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioContainsAnAccountAfterItIsAdded stamp: 'fr 11/9/2020 08:37:41'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioContainsAnAccountAfterItIsAddedToItselfOrAnyOfItsDecendents stamp: 'fr 11/9/2020 08:37:41'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioDoesNotContainAnythingThatWasNotAddedToItself stamp: 'fr 11/9/2020 08:37:41'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotAddItself stamp: 'fr 11/9/2020 08:37:41'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioCanNotAddItsParent stamp: 'fr 11/9/2020 08:37:41'!
PASSED!

!testRun: #PortfolioTest #test17PortfolioCanNotAddAnyAncestor stamp: 'fr 11/9/2020 08:37:41'!
PASSED!

!testRun: #PortfolioTest #test18PortfolioCanNotAddAnyPreviousMemberOfTheTree stamp: 'fr 11/9/2020 08:37:41'!
PASSED!

!testRun: #PortfolioTest #test19PortfolioCanNotAddAnotherOneWhichSharesChild stamp: 'fr 11/9/2020 08:37:41'!
PASSED!

!testRun: #PortfolioTest #test20PortfolioCanNotAddDuplicateAccountIndirectly stamp: 'fr 11/9/2020 08:37:41'!
PASSED!

!testRun: #PortfolioTest #test21AddingShouldBehaveIdenticallyAsCreatingAPortfolioWithAccounts stamp: 'fr 11/9/2020 08:37:41'!
PASSED!

!testRun: #PortfolioTest #test22CreatingAPortfolioWithAccountsShouldFailIdenticallyAsWhenAddingThem stamp: 'fr 11/9/2020 08:37:41'!
PASSED!
!PortfolioTest methodsFor: 'tests - add' stamp: 'fr 11/9/2020 08:37:53' prior: 50872845!
test11EmptyPortfolioDoesNotContainAnyAccount

	| account |
	account _ ReceptiveAccount new.
	portfolio1 _ Portfolio new.
	self assert: [(portfolio1 contains: account) not]! !

!testRun: #PortfolioTest #test11EmptyPortfolioDoesNotContainAnyAccount stamp: 'fr 11/9/2020 08:37:53'!
PASSED!

!testRun: #PortfolioTest #test01EmptyPortfolioHasBalanceZero stamp: 'fr 11/9/2020 08:37:53'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioWithASingleAccountWithNoTransactionsHasBalanceZero stamp: 'fr 11/9/2020 08:37:53'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioWithASingleAccountReflectsItsTransactionsValuesInItsBalance stamp: 'fr 11/9/2020 08:37:53'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithMultipleAccountsAndPortfoliosReflectsTheirTransactionsValuesInItsBalance stamp: 'fr 11/9/2020 08:37:53'!
PASSED!

!testRun: #PortfolioTest #test05EmptyPortfolioHasNotRegisteredAnyTransaction stamp: 'fr 11/9/2020 08:37:53'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioWithASingleAccountRegistersItsTransactions stamp: 'fr 11/9/2020 08:37:53'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioWithMulltipleAccountsAndPortfoliosRegistersAllTheirTransactions stamp: 'fr 11/9/2020 08:37:53'!
PASSED!

!testRun: #PortfolioTest #test08EmptyPortfolioDoesNotExhibitAnyTransaction stamp: 'fr 11/9/2020 08:37:53'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithASingleAccountExhibitsItsTransactions stamp: 'fr 11/9/2020 08:37:53'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioWithMultipleAccountsAndPortfoliosExhibitsAllTheirTransactionsCombined stamp: 'fr 11/9/2020 08:37:53'!
PASSED!

!testRun: #PortfolioTest #test11EmptyPortfolioDoesNotContainAnyAccount stamp: 'fr 11/9/2020 08:37:53'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioContainsAnAccountAfterItIsAdded stamp: 'fr 11/9/2020 08:37:53'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioContainsAnAccountAfterItIsAddedToItselfOrAnyOfItsDecendents stamp: 'fr 11/9/2020 08:37:53'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioDoesNotContainAnythingThatWasNotAddedToItself stamp: 'fr 11/9/2020 08:37:53'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotAddItself stamp: 'fr 11/9/2020 08:37:53'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioCanNotAddItsParent stamp: 'fr 11/9/2020 08:37:53'!
PASSED!

!testRun: #PortfolioTest #test17PortfolioCanNotAddAnyAncestor stamp: 'fr 11/9/2020 08:37:54'!
PASSED!

!testRun: #PortfolioTest #test18PortfolioCanNotAddAnyPreviousMemberOfTheTree stamp: 'fr 11/9/2020 08:37:54'!
PASSED!

!testRun: #PortfolioTest #test19PortfolioCanNotAddAnotherOneWhichSharesChild stamp: 'fr 11/9/2020 08:37:54'!
PASSED!

!testRun: #PortfolioTest #test20PortfolioCanNotAddDuplicateAccountIndirectly stamp: 'fr 11/9/2020 08:37:54'!
PASSED!

!testRun: #PortfolioTest #test21AddingShouldBehaveIdenticallyAsCreatingAPortfolioWithAccounts stamp: 'fr 11/9/2020 08:37:54'!
PASSED!

!testRun: #PortfolioTest #test22CreatingAPortfolioWithAccountsShouldFailIdenticallyAsWhenAddingThem stamp: 'fr 11/9/2020 08:37:54'!
PASSED!
!PortfolioTest methodsFor: 'tests - tree structure' stamp: 'fr 11/9/2020 08:38:13' prior: 50874796!
test15PortfolioCanNotAddItself

	portfolio1 _ Portfolio new.
	
	self  should: [portfolio1 add: portfolio1] 
		raise: Error 
		withMessageText: Portfolio canNotAddAccountErrorDescription! !

!testRun: #PortfolioTest #test15PortfolioCanNotAddItself stamp: 'fr 11/9/2020 08:38:14'!
PASSED!

!testRun: #PortfolioTest #test01EmptyPortfolioHasBalanceZero stamp: 'fr 11/9/2020 08:38:14'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioWithASingleAccountWithNoTransactionsHasBalanceZero stamp: 'fr 11/9/2020 08:38:14'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioWithASingleAccountReflectsItsTransactionsValuesInItsBalance stamp: 'fr 11/9/2020 08:38:14'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithMultipleAccountsAndPortfoliosReflectsTheirTransactionsValuesInItsBalance stamp: 'fr 11/9/2020 08:38:14'!
PASSED!

!testRun: #PortfolioTest #test05EmptyPortfolioHasNotRegisteredAnyTransaction stamp: 'fr 11/9/2020 08:38:14'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioWithASingleAccountRegistersItsTransactions stamp: 'fr 11/9/2020 08:38:14'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioWithMulltipleAccountsAndPortfoliosRegistersAllTheirTransactions stamp: 'fr 11/9/2020 08:38:14'!
PASSED!

!testRun: #PortfolioTest #test08EmptyPortfolioDoesNotExhibitAnyTransaction stamp: 'fr 11/9/2020 08:38:14'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithASingleAccountExhibitsItsTransactions stamp: 'fr 11/9/2020 08:38:14'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioWithMultipleAccountsAndPortfoliosExhibitsAllTheirTransactionsCombined stamp: 'fr 11/9/2020 08:38:14'!
PASSED!

!testRun: #PortfolioTest #test11EmptyPortfolioDoesNotContainAnyAccount stamp: 'fr 11/9/2020 08:38:14'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioContainsAnAccountAfterItIsAdded stamp: 'fr 11/9/2020 08:38:14'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioContainsAnAccountAfterItIsAddedToItselfOrAnyOfItsDecendents stamp: 'fr 11/9/2020 08:38:14'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioDoesNotContainAnythingThatWasNotAddedToItself stamp: 'fr 11/9/2020 08:38:14'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotAddItself stamp: 'fr 11/9/2020 08:38:14'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioCanNotAddItsParent stamp: 'fr 11/9/2020 08:38:14'!
PASSED!

!testRun: #PortfolioTest #test17PortfolioCanNotAddAnyAncestor stamp: 'fr 11/9/2020 08:38:14'!
PASSED!

!testRun: #PortfolioTest #test18PortfolioCanNotAddAnyPreviousMemberOfTheTree stamp: 'fr 11/9/2020 08:38:14'!
PASSED!

!testRun: #PortfolioTest #test19PortfolioCanNotAddAnotherOneWhichSharesChild stamp: 'fr 11/9/2020 08:38:14'!
PASSED!

!testRun: #PortfolioTest #test20PortfolioCanNotAddDuplicateAccountIndirectly stamp: 'fr 11/9/2020 08:38:14'!
PASSED!

!testRun: #PortfolioTest #test21AddingShouldBehaveIdenticallyAsCreatingAPortfolioWithAccounts stamp: 'fr 11/9/2020 08:38:14'!
PASSED!

!testRun: #PortfolioTest #test22CreatingAPortfolioWithAccountsShouldFailIdenticallyAsWhenAddingThem stamp: 'fr 11/9/2020 08:38:14'!
PASSED!
!PortfolioTest methodsFor: 'tests - tree structure' stamp: 'fr 11/9/2020 08:38:41' prior: 50874895!
test16PortfolioCanNotAddItsParent

	| anotherPortfolio |
	portfolio1 _ Portfolio new.
	anotherPortfolio _ Portfolio with: (OrderedCollection with: portfolio1).
	
	self  should: [portfolio1 add: anotherPortfolio] 
		raise: Error 
		withMessageText: Portfolio canNotAddAccountErrorDescription! !

!testRun: #PortfolioTest #test16PortfolioCanNotAddItsParent stamp: 'fr 11/9/2020 08:38:41'!
PASSED!

!testRun: #PortfolioTest #test01EmptyPortfolioHasBalanceZero stamp: 'fr 11/9/2020 08:38:41'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioWithASingleAccountWithNoTransactionsHasBalanceZero stamp: 'fr 11/9/2020 08:38:41'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioWithASingleAccountReflectsItsTransactionsValuesInItsBalance stamp: 'fr 11/9/2020 08:38:41'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithMultipleAccountsAndPortfoliosReflectsTheirTransactionsValuesInItsBalance stamp: 'fr 11/9/2020 08:38:41'!
PASSED!

!testRun: #PortfolioTest #test05EmptyPortfolioHasNotRegisteredAnyTransaction stamp: 'fr 11/9/2020 08:38:41'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioWithASingleAccountRegistersItsTransactions stamp: 'fr 11/9/2020 08:38:41'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioWithMulltipleAccountsAndPortfoliosRegistersAllTheirTransactions stamp: 'fr 11/9/2020 08:38:41'!
PASSED!

!testRun: #PortfolioTest #test08EmptyPortfolioDoesNotExhibitAnyTransaction stamp: 'fr 11/9/2020 08:38:41'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithASingleAccountExhibitsItsTransactions stamp: 'fr 11/9/2020 08:38:41'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioWithMultipleAccountsAndPortfoliosExhibitsAllTheirTransactionsCombined stamp: 'fr 11/9/2020 08:38:41'!
PASSED!

!testRun: #PortfolioTest #test11EmptyPortfolioDoesNotContainAnyAccount stamp: 'fr 11/9/2020 08:38:41'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioContainsAnAccountAfterItIsAdded stamp: 'fr 11/9/2020 08:38:41'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioContainsAnAccountAfterItIsAddedToItselfOrAnyOfItsDecendents stamp: 'fr 11/9/2020 08:38:41'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioDoesNotContainAnythingThatWasNotAddedToItself stamp: 'fr 11/9/2020 08:38:41'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotAddItself stamp: 'fr 11/9/2020 08:38:41'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioCanNotAddItsParent stamp: 'fr 11/9/2020 08:38:41'!
PASSED!

!testRun: #PortfolioTest #test17PortfolioCanNotAddAnyAncestor stamp: 'fr 11/9/2020 08:38:41'!
PASSED!

!testRun: #PortfolioTest #test18PortfolioCanNotAddAnyPreviousMemberOfTheTree stamp: 'fr 11/9/2020 08:38:41'!
PASSED!

!testRun: #PortfolioTest #test19PortfolioCanNotAddAnotherOneWhichSharesChild stamp: 'fr 11/9/2020 08:38:41'!
PASSED!

!testRun: #PortfolioTest #test20PortfolioCanNotAddDuplicateAccountIndirectly stamp: 'fr 11/9/2020 08:38:41'!
PASSED!

!testRun: #PortfolioTest #test21AddingShouldBehaveIdenticallyAsCreatingAPortfolioWithAccounts stamp: 'fr 11/9/2020 08:38:41'!
PASSED!

!testRun: #PortfolioTest #test22CreatingAPortfolioWithAccountsShouldFailIdenticallyAsWhenAddingThem stamp: 'fr 11/9/2020 08:38:41'!
PASSED!
!PortfolioTest methodsFor: 'tests - tree structure' stamp: 'fr 11/9/2020 08:39:07' prior: 50874997!
test17PortfolioCanNotAddAnyAncestor

	| portfolio middlePortfolio rootPortfolio |
	portfolio _ Portfolio new.
	middlePortfolio _ Portfolio with: (OrderedCollection with: portfolio).
	rootPortfolio _ Portfolio with: (OrderedCollection with: middlePortfolio).
	
	self  should: [portfolio add: rootPortfolio] 
		raise: Error 
		withMessageText: Portfolio canNotAddAccountErrorDescription! !
!PortfolioTest methodsFor: 'tests - tree structure' stamp: 'fr 11/9/2020 08:39:15' prior: 50881107!
test17PortfolioCanNotAddAnyAncestor

	| portfolio parentPortfolio rootPortfolio |
	portfolio _ Portfolio new.
	parentPortfolio _ Portfolio with: (OrderedCollection with: portfolio).
	rootPortfolio _ Portfolio with: (OrderedCollection with: parentPortfolio).
	
	self  should: [portfolio add: rootPortfolio] 
		raise: Error 
		withMessageText: Portfolio canNotAddAccountErrorDescription! !
!PortfolioTest methodsFor: 'tests - tree structure' stamp: 'fr 11/9/2020 08:39:29' prior: 50877663!
test18PortfolioCanNotAddAnyPreviousMemberOfTheTree

	| portfolio middlePortfolio rootPortfolio anotherLeafPortfolio |
	portfolio _ Portfolio new.
	anotherLeafPortfolio _ Portfolio new.
	middlePortfolio _ Portfolio with: (OrderedCollection with: portfolio).
	rootPortfolio _ Portfolio with: (OrderedCollection with: middlePortfolio with: anotherLeafPortfolio).
	
	self  should: [portfolio add: anotherLeafPortfolio] 
		raise: Error 
		withMessageText: Portfolio canNotAddAccountErrorDescription! !
!PortfolioTest methodsFor: 'tests - tree structure' stamp: 'fr 11/9/2020 08:39:52' prior: 50881123!
test17PortfolioCanNotAddAnyAncestor

	| parentPortfolio rootPortfolio |
	portfolio1 _ Portfolio new.
	parentPortfolio _ Portfolio with: (OrderedCollection with: portfolio1).
	rootPortfolio _ Portfolio with: (OrderedCollection with: parentPortfolio).
	
	self  should: [portfolio1 add: rootPortfolio] 
		raise: Error 
		withMessageText: Portfolio canNotAddAccountErrorDescription! !
!PortfolioTest methodsFor: 'tests - tree structure' stamp: 'fr 11/9/2020 08:40:03' prior: 50881139!
test18PortfolioCanNotAddAnyPreviousMemberOfTheTree

	| middlePortfolio rootPortfolio anotherLeafPortfolio |
	portfolio1 _ Portfolio new.
	anotherLeafPortfolio _ Portfolio new.
	middlePortfolio _ Portfolio with: (OrderedCollection with: portfolio1).
	rootPortfolio _ Portfolio with: (OrderedCollection with: middlePortfolio with: anotherLeafPortfolio).
	
	self  should: [portfolio1 add: anotherLeafPortfolio] 
		raise: Error 
		withMessageText: Portfolio canNotAddAccountErrorDescription! !

!testRun: #PortfolioTest #test18PortfolioCanNotAddAnyPreviousMemberOfTheTree stamp: 'fr 11/9/2020 08:40:08'!
PASSED!

!testRun: #PortfolioTest #test01EmptyPortfolioHasBalanceZero stamp: 'fr 11/9/2020 08:40:08'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioWithASingleAccountWithNoTransactionsHasBalanceZero stamp: 'fr 11/9/2020 08:40:08'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioWithASingleAccountReflectsItsTransactionsValuesInItsBalance stamp: 'fr 11/9/2020 08:40:08'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithMultipleAccountsAndPortfoliosReflectsTheirTransactionsValuesInItsBalance stamp: 'fr 11/9/2020 08:40:08'!
PASSED!

!testRun: #PortfolioTest #test05EmptyPortfolioHasNotRegisteredAnyTransaction stamp: 'fr 11/9/2020 08:40:08'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioWithASingleAccountRegistersItsTransactions stamp: 'fr 11/9/2020 08:40:08'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioWithMulltipleAccountsAndPortfoliosRegistersAllTheirTransactions stamp: 'fr 11/9/2020 08:40:08'!
PASSED!

!testRun: #PortfolioTest #test08EmptyPortfolioDoesNotExhibitAnyTransaction stamp: 'fr 11/9/2020 08:40:08'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithASingleAccountExhibitsItsTransactions stamp: 'fr 11/9/2020 08:40:08'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioWithMultipleAccountsAndPortfoliosExhibitsAllTheirTransactionsCombined stamp: 'fr 11/9/2020 08:40:08'!
PASSED!

!testRun: #PortfolioTest #test11EmptyPortfolioDoesNotContainAnyAccount stamp: 'fr 11/9/2020 08:40:08'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioContainsAnAccountAfterItIsAdded stamp: 'fr 11/9/2020 08:40:08'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioContainsAnAccountAfterItIsAddedToItselfOrAnyOfItsDecendents stamp: 'fr 11/9/2020 08:40:08'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioDoesNotContainAnythingThatWasNotAddedToItself stamp: 'fr 11/9/2020 08:40:08'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotAddItself stamp: 'fr 11/9/2020 08:40:08'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioCanNotAddItsParent stamp: 'fr 11/9/2020 08:40:08'!
PASSED!

!testRun: #PortfolioTest #test17PortfolioCanNotAddAnyAncestor stamp: 'fr 11/9/2020 08:40:08'!
PASSED!

!testRun: #PortfolioTest #test18PortfolioCanNotAddAnyPreviousMemberOfTheTree stamp: 'fr 11/9/2020 08:40:08'!
PASSED!

!testRun: #PortfolioTest #test19PortfolioCanNotAddAnotherOneWhichSharesChild stamp: 'fr 11/9/2020 08:40:08'!
PASSED!

!testRun: #PortfolioTest #test20PortfolioCanNotAddDuplicateAccountIndirectly stamp: 'fr 11/9/2020 08:40:08'!
PASSED!

!testRun: #PortfolioTest #test21AddingShouldBehaveIdenticallyAsCreatingAPortfolioWithAccounts stamp: 'fr 11/9/2020 08:40:08'!
PASSED!

!testRun: #PortfolioTest #test22CreatingAPortfolioWithAccountsShouldFailIdenticallyAsWhenAddingThem stamp: 'fr 11/9/2020 08:40:08'!
PASSED!
!PortfolioTest methodsFor: 'tests - tree structure' stamp: 'fr 11/9/2020 08:40:24' prior: 50875973!
test19PortfolioCanNotAddAnotherOneWhichSharesChild

	| anotherParentPortfolio parentPortfolio |
	portfolio1 _ Portfolio new.
	parentPortfolio _ Portfolio with: (OrderedCollection with: portfolio1).
	anotherParentPortfolio _ Portfolio with: (OrderedCollection with: portfolio1).
	
	self  should: [parentPortfolio add: anotherParentPortfolio] 
		raise: Error 
		withMessageText: Portfolio canNotAddAccountErrorDescription! !

!testRun: #PortfolioTest #test19PortfolioCanNotAddAnotherOneWhichSharesChild stamp: 'fr 11/9/2020 08:40:24'!
PASSED!

!testRun: #PortfolioTest #test01EmptyPortfolioHasBalanceZero stamp: 'fr 11/9/2020 08:40:24'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioWithASingleAccountWithNoTransactionsHasBalanceZero stamp: 'fr 11/9/2020 08:40:24'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioWithASingleAccountReflectsItsTransactionsValuesInItsBalance stamp: 'fr 11/9/2020 08:40:25'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithMultipleAccountsAndPortfoliosReflectsTheirTransactionsValuesInItsBalance stamp: 'fr 11/9/2020 08:40:25'!
PASSED!

!testRun: #PortfolioTest #test05EmptyPortfolioHasNotRegisteredAnyTransaction stamp: 'fr 11/9/2020 08:40:25'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioWithASingleAccountRegistersItsTransactions stamp: 'fr 11/9/2020 08:40:25'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioWithMulltipleAccountsAndPortfoliosRegistersAllTheirTransactions stamp: 'fr 11/9/2020 08:40:25'!
PASSED!

!testRun: #PortfolioTest #test08EmptyPortfolioDoesNotExhibitAnyTransaction stamp: 'fr 11/9/2020 08:40:25'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithASingleAccountExhibitsItsTransactions stamp: 'fr 11/9/2020 08:40:25'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioWithMultipleAccountsAndPortfoliosExhibitsAllTheirTransactionsCombined stamp: 'fr 11/9/2020 08:40:25'!
PASSED!

!testRun: #PortfolioTest #test11EmptyPortfolioDoesNotContainAnyAccount stamp: 'fr 11/9/2020 08:40:25'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioContainsAnAccountAfterItIsAdded stamp: 'fr 11/9/2020 08:40:25'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioContainsAnAccountAfterItIsAddedToItselfOrAnyOfItsDecendents stamp: 'fr 11/9/2020 08:40:25'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioDoesNotContainAnythingThatWasNotAddedToItself stamp: 'fr 11/9/2020 08:40:25'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotAddItself stamp: 'fr 11/9/2020 08:40:25'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioCanNotAddItsParent stamp: 'fr 11/9/2020 08:40:25'!
PASSED!

!testRun: #PortfolioTest #test17PortfolioCanNotAddAnyAncestor stamp: 'fr 11/9/2020 08:40:25'!
PASSED!

!testRun: #PortfolioTest #test18PortfolioCanNotAddAnyPreviousMemberOfTheTree stamp: 'fr 11/9/2020 08:40:25'!
PASSED!

!testRun: #PortfolioTest #test19PortfolioCanNotAddAnotherOneWhichSharesChild stamp: 'fr 11/9/2020 08:40:25'!
PASSED!

!testRun: #PortfolioTest #test20PortfolioCanNotAddDuplicateAccountIndirectly stamp: 'fr 11/9/2020 08:40:25'!
PASSED!

!testRun: #PortfolioTest #test21AddingShouldBehaveIdenticallyAsCreatingAPortfolioWithAccounts stamp: 'fr 11/9/2020 08:40:25'!
PASSED!

!testRun: #PortfolioTest #test22CreatingAPortfolioWithAccountsShouldFailIdenticallyAsWhenAddingThem stamp: 'fr 11/9/2020 08:40:25'!
PASSED!
!PortfolioTest methodsFor: 'tests - tree structure' stamp: 'fr 11/9/2020 08:40:40' prior: 50880100!
test20PortfolioCanNotAddDuplicateAccountIndirectly

	| parentPortfolio rootPortfolio |
	portfolio1 _ Portfolio new.
	parentPortfolio _ Portfolio with: (OrderedCollection with: portfolio1).
	rootPortfolio _ Portfolio with: (OrderedCollection with: parentPortfolio).
	
	self  should: [rootPortfolio add: portfolio1] 
		raise: Error 
		withMessageText: Portfolio canNotAddAccountErrorDescription! !

!testRun: #PortfolioTest #test20PortfolioCanNotAddDuplicateAccountIndirectly stamp: 'fr 11/9/2020 08:40:43'!
PASSED!

!testRun: #PortfolioTest #test01EmptyPortfolioHasBalanceZero stamp: 'fr 11/9/2020 08:40:43'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioWithASingleAccountWithNoTransactionsHasBalanceZero stamp: 'fr 11/9/2020 08:40:43'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioWithASingleAccountReflectsItsTransactionsValuesInItsBalance stamp: 'fr 11/9/2020 08:40:43'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithMultipleAccountsAndPortfoliosReflectsTheirTransactionsValuesInItsBalance stamp: 'fr 11/9/2020 08:40:43'!
PASSED!

!testRun: #PortfolioTest #test05EmptyPortfolioHasNotRegisteredAnyTransaction stamp: 'fr 11/9/2020 08:40:43'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioWithASingleAccountRegistersItsTransactions stamp: 'fr 11/9/2020 08:40:43'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioWithMulltipleAccountsAndPortfoliosRegistersAllTheirTransactions stamp: 'fr 11/9/2020 08:40:43'!
PASSED!

!testRun: #PortfolioTest #test08EmptyPortfolioDoesNotExhibitAnyTransaction stamp: 'fr 11/9/2020 08:40:43'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithASingleAccountExhibitsItsTransactions stamp: 'fr 11/9/2020 08:40:43'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioWithMultipleAccountsAndPortfoliosExhibitsAllTheirTransactionsCombined stamp: 'fr 11/9/2020 08:40:43'!
PASSED!

!testRun: #PortfolioTest #test11EmptyPortfolioDoesNotContainAnyAccount stamp: 'fr 11/9/2020 08:40:43'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioContainsAnAccountAfterItIsAdded stamp: 'fr 11/9/2020 08:40:43'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioContainsAnAccountAfterItIsAddedToItselfOrAnyOfItsDecendents stamp: 'fr 11/9/2020 08:40:43'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioDoesNotContainAnythingThatWasNotAddedToItself stamp: 'fr 11/9/2020 08:40:43'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotAddItself stamp: 'fr 11/9/2020 08:40:43'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioCanNotAddItsParent stamp: 'fr 11/9/2020 08:40:43'!
PASSED!

!testRun: #PortfolioTest #test17PortfolioCanNotAddAnyAncestor stamp: 'fr 11/9/2020 08:40:43'!
PASSED!

!testRun: #PortfolioTest #test18PortfolioCanNotAddAnyPreviousMemberOfTheTree stamp: 'fr 11/9/2020 08:40:43'!
PASSED!

!testRun: #PortfolioTest #test19PortfolioCanNotAddAnotherOneWhichSharesChild stamp: 'fr 11/9/2020 08:40:43'!
PASSED!

!testRun: #PortfolioTest #test20PortfolioCanNotAddDuplicateAccountIndirectly stamp: 'fr 11/9/2020 08:40:43'!
PASSED!

!testRun: #PortfolioTest #test21AddingShouldBehaveIdenticallyAsCreatingAPortfolioWithAccounts stamp: 'fr 11/9/2020 08:40:43'!
PASSED!

!testRun: #PortfolioTest #test22CreatingAPortfolioWithAccountsShouldFailIdenticallyAsWhenAddingThem stamp: 'fr 11/9/2020 08:40:43'!
PASSED!
!PortfolioTest methodsFor: 'tests - tree structure' stamp: 'fr 11/9/2020 08:40:59' prior: 50880131!
test21AddingShouldBehaveIdenticallyAsCreatingAPortfolioWithAccounts

	| parentPortfolio |
	portfolio1 _ Portfolio new.
	parentPortfolio _ Portfolio new.
	
	parentPortfolio add: portfolio1.
	
	self  should: [portfolio1 add: parentPortfolio] 
		raise: Error 
		withMessageText: Portfolio canNotAddAccountErrorDescription! !

!testRun: #PortfolioTest #test21AddingShouldBehaveIdenticallyAsCreatingAPortfolioWithAccounts stamp: 'fr 11/9/2020 08:41:00'!
PASSED!

!testRun: #PortfolioTest #test01EmptyPortfolioHasBalanceZero stamp: 'fr 11/9/2020 08:41:00'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioWithASingleAccountWithNoTransactionsHasBalanceZero stamp: 'fr 11/9/2020 08:41:00'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioWithASingleAccountReflectsItsTransactionsValuesInItsBalance stamp: 'fr 11/9/2020 08:41:00'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithMultipleAccountsAndPortfoliosReflectsTheirTransactionsValuesInItsBalance stamp: 'fr 11/9/2020 08:41:00'!
PASSED!

!testRun: #PortfolioTest #test05EmptyPortfolioHasNotRegisteredAnyTransaction stamp: 'fr 11/9/2020 08:41:00'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioWithASingleAccountRegistersItsTransactions stamp: 'fr 11/9/2020 08:41:00'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioWithMulltipleAccountsAndPortfoliosRegistersAllTheirTransactions stamp: 'fr 11/9/2020 08:41:00'!
PASSED!

!testRun: #PortfolioTest #test08EmptyPortfolioDoesNotExhibitAnyTransaction stamp: 'fr 11/9/2020 08:41:00'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithASingleAccountExhibitsItsTransactions stamp: 'fr 11/9/2020 08:41:00'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioWithMultipleAccountsAndPortfoliosExhibitsAllTheirTransactionsCombined stamp: 'fr 11/9/2020 08:41:00'!
PASSED!

!testRun: #PortfolioTest #test11EmptyPortfolioDoesNotContainAnyAccount stamp: 'fr 11/9/2020 08:41:00'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioContainsAnAccountAfterItIsAdded stamp: 'fr 11/9/2020 08:41:00'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioContainsAnAccountAfterItIsAddedToItselfOrAnyOfItsDecendents stamp: 'fr 11/9/2020 08:41:00'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioDoesNotContainAnythingThatWasNotAddedToItself stamp: 'fr 11/9/2020 08:41:00'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotAddItself stamp: 'fr 11/9/2020 08:41:00'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioCanNotAddItsParent stamp: 'fr 11/9/2020 08:41:00'!
PASSED!

!testRun: #PortfolioTest #test17PortfolioCanNotAddAnyAncestor stamp: 'fr 11/9/2020 08:41:00'!
PASSED!

!testRun: #PortfolioTest #test18PortfolioCanNotAddAnyPreviousMemberOfTheTree stamp: 'fr 11/9/2020 08:41:00'!
PASSED!

!testRun: #PortfolioTest #test19PortfolioCanNotAddAnotherOneWhichSharesChild stamp: 'fr 11/9/2020 08:41:00'!
PASSED!

!testRun: #PortfolioTest #test20PortfolioCanNotAddDuplicateAccountIndirectly stamp: 'fr 11/9/2020 08:41:00'!
PASSED!

!testRun: #PortfolioTest #test21AddingShouldBehaveIdenticallyAsCreatingAPortfolioWithAccounts stamp: 'fr 11/9/2020 08:41:00'!
PASSED!

!testRun: #PortfolioTest #test22CreatingAPortfolioWithAccountsShouldFailIdenticallyAsWhenAddingThem stamp: 'fr 11/9/2020 08:41:00'!
PASSED!
!PortfolioTest methodsFor: 'tests - tree structure' stamp: 'fr 11/9/2020 08:41:14' prior: 50880196!
test22CreatingAPortfolioWithAccountsShouldFailIdenticallyAsWhenAddingThem

	| parentPortfolio anotherParentPortfolio |
	portfolio1 _ Portfolio new. 
	parentPortfolio _ Portfolio with: (OrderedCollection with: portfolio1).
	anotherParentPortfolio _ Portfolio with: (OrderedCollection with: portfolio1). 
	
	self  should: [Portfolio with: (OrderedCollection with: parentPortfolio with: anotherParentPortfolio)] 
		raise: Error 
		withMessageText: Portfolio canNotAddAccountErrorDescription! !

!testRun: #PortfolioTest #test22CreatingAPortfolioWithAccountsShouldFailIdenticallyAsWhenAddingThem stamp: 'fr 11/9/2020 08:41:15'!
PASSED!

!testRun: #PortfolioTest #test01EmptyPortfolioHasBalanceZero stamp: 'fr 11/9/2020 08:41:15'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioWithASingleAccountWithNoTransactionsHasBalanceZero stamp: 'fr 11/9/2020 08:41:15'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioWithASingleAccountReflectsItsTransactionsValuesInItsBalance stamp: 'fr 11/9/2020 08:41:15'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithMultipleAccountsAndPortfoliosReflectsTheirTransactionsValuesInItsBalance stamp: 'fr 11/9/2020 08:41:15'!
PASSED!

!testRun: #PortfolioTest #test05EmptyPortfolioHasNotRegisteredAnyTransaction stamp: 'fr 11/9/2020 08:41:15'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioWithASingleAccountRegistersItsTransactions stamp: 'fr 11/9/2020 08:41:15'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioWithMulltipleAccountsAndPortfoliosRegistersAllTheirTransactions stamp: 'fr 11/9/2020 08:41:15'!
PASSED!

!testRun: #PortfolioTest #test08EmptyPortfolioDoesNotExhibitAnyTransaction stamp: 'fr 11/9/2020 08:41:15'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithASingleAccountExhibitsItsTransactions stamp: 'fr 11/9/2020 08:41:15'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioWithMultipleAccountsAndPortfoliosExhibitsAllTheirTransactionsCombined stamp: 'fr 11/9/2020 08:41:15'!
PASSED!

!testRun: #PortfolioTest #test11EmptyPortfolioDoesNotContainAnyAccount stamp: 'fr 11/9/2020 08:41:15'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioContainsAnAccountAfterItIsAdded stamp: 'fr 11/9/2020 08:41:15'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioContainsAnAccountAfterItIsAddedToItselfOrAnyOfItsDecendents stamp: 'fr 11/9/2020 08:41:15'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioDoesNotContainAnythingThatWasNotAddedToItself stamp: 'fr 11/9/2020 08:41:15'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotAddItself stamp: 'fr 11/9/2020 08:41:15'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioCanNotAddItsParent stamp: 'fr 11/9/2020 08:41:15'!
PASSED!

!testRun: #PortfolioTest #test17PortfolioCanNotAddAnyAncestor stamp: 'fr 11/9/2020 08:41:15'!
PASSED!

!testRun: #PortfolioTest #test18PortfolioCanNotAddAnyPreviousMemberOfTheTree stamp: 'fr 11/9/2020 08:41:15'!
PASSED!

!testRun: #PortfolioTest #test19PortfolioCanNotAddAnotherOneWhichSharesChild stamp: 'fr 11/9/2020 08:41:15'!
PASSED!

!testRun: #PortfolioTest #test20PortfolioCanNotAddDuplicateAccountIndirectly stamp: 'fr 11/9/2020 08:41:15'!
PASSED!

!testRun: #PortfolioTest #test21AddingShouldBehaveIdenticallyAsCreatingAPortfolioWithAccounts stamp: 'fr 11/9/2020 08:41:15'!
PASSED!

!testRun: #PortfolioTest #test22CreatingAPortfolioWithAccountsShouldFailIdenticallyAsWhenAddingThem stamp: 'fr 11/9/2020 08:41:15'!
PASSED!
!PortfolioTest methodsFor: 'tests - tree structure' stamp: 'fr 11/9/2020 08:41:24' prior: 50881597!
test22CreatingAPortfolioWithAccountsShouldFailIdenticallyAsWhenAddingThem

	| parentPortfolio anotherParentPortfolio |
	parentPortfolio _ Portfolio with: (OrderedCollection with: portfolio1).
	anotherParentPortfolio _ Portfolio with: (OrderedCollection with: portfolio1). 
	
	self  should: [Portfolio with: (OrderedCollection with: parentPortfolio with: anotherParentPortfolio)] 
		raise: Error 
		withMessageText: Portfolio canNotAddAccountErrorDescription! !
!PortfolioTest methodsFor: 'setup' stamp: 'fr 11/9/2020 08:41:31' prior: 50880535 overrides: 16927572!
setUp

	portfolio1 _ Portfolio new. 
! !

!testRun: #PortfolioTest #test01EmptyPortfolioHasBalanceZero stamp: 'fr 11/9/2020 08:41:38'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioWithASingleAccountWithNoTransactionsHasBalanceZero stamp: 'fr 11/9/2020 08:41:38'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioWithASingleAccountReflectsItsTransactionsValuesInItsBalance stamp: 'fr 11/9/2020 08:41:38'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithMultipleAccountsAndPortfoliosReflectsTheirTransactionsValuesInItsBalance stamp: 'fr 11/9/2020 08:41:38'!
PASSED!

!testRun: #PortfolioTest #test05EmptyPortfolioHasNotRegisteredAnyTransaction stamp: 'fr 11/9/2020 08:41:38'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioWithASingleAccountRegistersItsTransactions stamp: 'fr 11/9/2020 08:41:38'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioWithMulltipleAccountsAndPortfoliosRegistersAllTheirTransactions stamp: 'fr 11/9/2020 08:41:38'!
PASSED!

!testRun: #PortfolioTest #test08EmptyPortfolioDoesNotExhibitAnyTransaction stamp: 'fr 11/9/2020 08:41:38'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithASingleAccountExhibitsItsTransactions stamp: 'fr 11/9/2020 08:41:38'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioWithMultipleAccountsAndPortfoliosExhibitsAllTheirTransactionsCombined stamp: 'fr 11/9/2020 08:41:38'!
PASSED!

!testRun: #PortfolioTest #test11EmptyPortfolioDoesNotContainAnyAccount stamp: 'fr 11/9/2020 08:41:38'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioContainsAnAccountAfterItIsAdded stamp: 'fr 11/9/2020 08:41:38'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioContainsAnAccountAfterItIsAddedToItselfOrAnyOfItsDecendents stamp: 'fr 11/9/2020 08:41:38'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioDoesNotContainAnythingThatWasNotAddedToItself stamp: 'fr 11/9/2020 08:41:38'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotAddItself stamp: 'fr 11/9/2020 08:41:38'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioCanNotAddItsParent stamp: 'fr 11/9/2020 08:41:38'!
PASSED!

!testRun: #PortfolioTest #test17PortfolioCanNotAddAnyAncestor stamp: 'fr 11/9/2020 08:41:38'!
PASSED!

!testRun: #PortfolioTest #test18PortfolioCanNotAddAnyPreviousMemberOfTheTree stamp: 'fr 11/9/2020 08:41:38'!
PASSED!

!testRun: #PortfolioTest #test19PortfolioCanNotAddAnotherOneWhichSharesChild stamp: 'fr 11/9/2020 08:41:38'!
PASSED!

!testRun: #PortfolioTest #test20PortfolioCanNotAddDuplicateAccountIndirectly stamp: 'fr 11/9/2020 08:41:38'!
PASSED!

!testRun: #PortfolioTest #test21AddingShouldBehaveIdenticallyAsCreatingAPortfolioWithAccounts stamp: 'fr 11/9/2020 08:41:38'!
PASSED!

!testRun: #PortfolioTest #test22CreatingAPortfolioWithAccountsShouldFailIdenticallyAsWhenAddingThem stamp: 'fr 11/9/2020 08:41:38'!
PASSED!
!PortfolioTest methodsFor: 'tests - tree structure' stamp: 'fr 11/9/2020 08:42:01' prior: 50881493!
test21AddingShouldBehaveIdenticallyAsCreatingAPortfolioWithAccounts

	| parentPortfolio |
	parentPortfolio _ Portfolio new.
	
	parentPortfolio add: portfolio1.
	
	self  should: [portfolio1 add: parentPortfolio] 
		raise: Error 
		withMessageText: Portfolio canNotAddAccountErrorDescription! !
!PortfolioTest methodsFor: 'tests - tree structure' stamp: 'fr 11/9/2020 08:42:25' prior: 50881388!
test20PortfolioCanNotAddDuplicateAccountIndirectly

	| parentPortfolio rootPortfolio |
	parentPortfolio _ Portfolio with: (OrderedCollection with: portfolio1).
	rootPortfolio _ Portfolio with: (OrderedCollection with: parentPortfolio).
	
	self  should: [rootPortfolio add: portfolio1] 
		raise: Error 
		withMessageText: Portfolio canNotAddAccountErrorDescription! !

!testRun: #PortfolioTest #test20PortfolioCanNotAddDuplicateAccountIndirectly stamp: 'fr 11/9/2020 08:42:26'!
PASSED!

!testRun: #PortfolioTest #test01EmptyPortfolioHasBalanceZero stamp: 'fr 11/9/2020 08:42:26'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioWithASingleAccountWithNoTransactionsHasBalanceZero stamp: 'fr 11/9/2020 08:42:26'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioWithASingleAccountReflectsItsTransactionsValuesInItsBalance stamp: 'fr 11/9/2020 08:42:26'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithMultipleAccountsAndPortfoliosReflectsTheirTransactionsValuesInItsBalance stamp: 'fr 11/9/2020 08:42:26'!
PASSED!

!testRun: #PortfolioTest #test05EmptyPortfolioHasNotRegisteredAnyTransaction stamp: 'fr 11/9/2020 08:42:26'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioWithASingleAccountRegistersItsTransactions stamp: 'fr 11/9/2020 08:42:26'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioWithMulltipleAccountsAndPortfoliosRegistersAllTheirTransactions stamp: 'fr 11/9/2020 08:42:26'!
PASSED!

!testRun: #PortfolioTest #test08EmptyPortfolioDoesNotExhibitAnyTransaction stamp: 'fr 11/9/2020 08:42:26'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithASingleAccountExhibitsItsTransactions stamp: 'fr 11/9/2020 08:42:26'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioWithMultipleAccountsAndPortfoliosExhibitsAllTheirTransactionsCombined stamp: 'fr 11/9/2020 08:42:26'!
PASSED!

!testRun: #PortfolioTest #test11EmptyPortfolioDoesNotContainAnyAccount stamp: 'fr 11/9/2020 08:42:26'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioContainsAnAccountAfterItIsAdded stamp: 'fr 11/9/2020 08:42:26'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioContainsAnAccountAfterItIsAddedToItselfOrAnyOfItsDecendents stamp: 'fr 11/9/2020 08:42:26'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioDoesNotContainAnythingThatWasNotAddedToItself stamp: 'fr 11/9/2020 08:42:26'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotAddItself stamp: 'fr 11/9/2020 08:42:26'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioCanNotAddItsParent stamp: 'fr 11/9/2020 08:42:26'!
PASSED!

!testRun: #PortfolioTest #test17PortfolioCanNotAddAnyAncestor stamp: 'fr 11/9/2020 08:42:26'!
PASSED!

!testRun: #PortfolioTest #test18PortfolioCanNotAddAnyPreviousMemberOfTheTree stamp: 'fr 11/9/2020 08:42:26'!
PASSED!

!testRun: #PortfolioTest #test19PortfolioCanNotAddAnotherOneWhichSharesChild stamp: 'fr 11/9/2020 08:42:26'!
PASSED!

!testRun: #PortfolioTest #test20PortfolioCanNotAddDuplicateAccountIndirectly stamp: 'fr 11/9/2020 08:42:26'!
PASSED!

!testRun: #PortfolioTest #test21AddingShouldBehaveIdenticallyAsCreatingAPortfolioWithAccounts stamp: 'fr 11/9/2020 08:42:26'!
PASSED!

!testRun: #PortfolioTest #test22CreatingAPortfolioWithAccountsShouldFailIdenticallyAsWhenAddingThem stamp: 'fr 11/9/2020 08:42:26'!
PASSED!
!PortfolioTest methodsFor: 'tests - tree structure' stamp: 'fr 11/9/2020 08:42:32' prior: 50881282!
test19PortfolioCanNotAddAnotherOneWhichSharesChild

	| anotherParentPortfolio parentPortfolio |
	parentPortfolio _ Portfolio with: (OrderedCollection with: portfolio1).
	anotherParentPortfolio _ Portfolio with: (OrderedCollection with: portfolio1).
	
	self  should: [parentPortfolio add: anotherParentPortfolio] 
		raise: Error 
		withMessageText: Portfolio canNotAddAccountErrorDescription! !

!testRun: #PortfolioTest #test19PortfolioCanNotAddAnotherOneWhichSharesChild stamp: 'fr 11/9/2020 08:42:33'!
PASSED!

!testRun: #PortfolioTest #test01EmptyPortfolioHasBalanceZero stamp: 'fr 11/9/2020 08:42:33'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioWithASingleAccountWithNoTransactionsHasBalanceZero stamp: 'fr 11/9/2020 08:42:33'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioWithASingleAccountReflectsItsTransactionsValuesInItsBalance stamp: 'fr 11/9/2020 08:42:33'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithMultipleAccountsAndPortfoliosReflectsTheirTransactionsValuesInItsBalance stamp: 'fr 11/9/2020 08:42:33'!
PASSED!

!testRun: #PortfolioTest #test05EmptyPortfolioHasNotRegisteredAnyTransaction stamp: 'fr 11/9/2020 08:42:33'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioWithASingleAccountRegistersItsTransactions stamp: 'fr 11/9/2020 08:42:33'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioWithMulltipleAccountsAndPortfoliosRegistersAllTheirTransactions stamp: 'fr 11/9/2020 08:42:33'!
PASSED!

!testRun: #PortfolioTest #test08EmptyPortfolioDoesNotExhibitAnyTransaction stamp: 'fr 11/9/2020 08:42:33'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithASingleAccountExhibitsItsTransactions stamp: 'fr 11/9/2020 08:42:33'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioWithMultipleAccountsAndPortfoliosExhibitsAllTheirTransactionsCombined stamp: 'fr 11/9/2020 08:42:33'!
PASSED!

!testRun: #PortfolioTest #test11EmptyPortfolioDoesNotContainAnyAccount stamp: 'fr 11/9/2020 08:42:33'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioContainsAnAccountAfterItIsAdded stamp: 'fr 11/9/2020 08:42:33'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioContainsAnAccountAfterItIsAddedToItselfOrAnyOfItsDecendents stamp: 'fr 11/9/2020 08:42:33'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioDoesNotContainAnythingThatWasNotAddedToItself stamp: 'fr 11/9/2020 08:42:33'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotAddItself stamp: 'fr 11/9/2020 08:42:33'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioCanNotAddItsParent stamp: 'fr 11/9/2020 08:42:33'!
PASSED!

!testRun: #PortfolioTest #test17PortfolioCanNotAddAnyAncestor stamp: 'fr 11/9/2020 08:42:33'!
PASSED!

!testRun: #PortfolioTest #test18PortfolioCanNotAddAnyPreviousMemberOfTheTree stamp: 'fr 11/9/2020 08:42:33'!
PASSED!

!testRun: #PortfolioTest #test19PortfolioCanNotAddAnotherOneWhichSharesChild stamp: 'fr 11/9/2020 08:42:33'!
PASSED!

!testRun: #PortfolioTest #test20PortfolioCanNotAddDuplicateAccountIndirectly stamp: 'fr 11/9/2020 08:42:33'!
PASSED!

!testRun: #PortfolioTest #test21AddingShouldBehaveIdenticallyAsCreatingAPortfolioWithAccounts stamp: 'fr 11/9/2020 08:42:33'!
PASSED!

!testRun: #PortfolioTest #test22CreatingAPortfolioWithAccountsShouldFailIdenticallyAsWhenAddingThem stamp: 'fr 11/9/2020 08:42:33'!
PASSED!
!PortfolioTest methodsFor: 'tests - tree structure' stamp: 'fr 11/9/2020 08:42:37' prior: 50881174!
test18PortfolioCanNotAddAnyPreviousMemberOfTheTree

	| middlePortfolio rootPortfolio anotherLeafPortfolio |
	anotherLeafPortfolio _ Portfolio new.
	middlePortfolio _ Portfolio with: (OrderedCollection with: portfolio1).
	rootPortfolio _ Portfolio with: (OrderedCollection with: middlePortfolio with: anotherLeafPortfolio).
	
	self  should: [portfolio1 add: anotherLeafPortfolio] 
		raise: Error 
		withMessageText: Portfolio canNotAddAccountErrorDescription! !

!testRun: #PortfolioTest #test18PortfolioCanNotAddAnyPreviousMemberOfTheTree stamp: 'fr 11/9/2020 08:42:43'!
PASSED!

!testRun: #PortfolioTest #test01EmptyPortfolioHasBalanceZero stamp: 'fr 11/9/2020 08:42:43'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioWithASingleAccountWithNoTransactionsHasBalanceZero stamp: 'fr 11/9/2020 08:42:43'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioWithASingleAccountReflectsItsTransactionsValuesInItsBalance stamp: 'fr 11/9/2020 08:42:43'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithMultipleAccountsAndPortfoliosReflectsTheirTransactionsValuesInItsBalance stamp: 'fr 11/9/2020 08:42:43'!
PASSED!

!testRun: #PortfolioTest #test05EmptyPortfolioHasNotRegisteredAnyTransaction stamp: 'fr 11/9/2020 08:42:43'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioWithASingleAccountRegistersItsTransactions stamp: 'fr 11/9/2020 08:42:43'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioWithMulltipleAccountsAndPortfoliosRegistersAllTheirTransactions stamp: 'fr 11/9/2020 08:42:43'!
PASSED!

!testRun: #PortfolioTest #test08EmptyPortfolioDoesNotExhibitAnyTransaction stamp: 'fr 11/9/2020 08:42:43'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithASingleAccountExhibitsItsTransactions stamp: 'fr 11/9/2020 08:42:43'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioWithMultipleAccountsAndPortfoliosExhibitsAllTheirTransactionsCombined stamp: 'fr 11/9/2020 08:42:43'!
PASSED!

!testRun: #PortfolioTest #test11EmptyPortfolioDoesNotContainAnyAccount stamp: 'fr 11/9/2020 08:42:43'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioContainsAnAccountAfterItIsAdded stamp: 'fr 11/9/2020 08:42:43'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioContainsAnAccountAfterItIsAddedToItselfOrAnyOfItsDecendents stamp: 'fr 11/9/2020 08:42:43'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioDoesNotContainAnythingThatWasNotAddedToItself stamp: 'fr 11/9/2020 08:42:43'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotAddItself stamp: 'fr 11/9/2020 08:42:43'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioCanNotAddItsParent stamp: 'fr 11/9/2020 08:42:43'!
PASSED!

!testRun: #PortfolioTest #test17PortfolioCanNotAddAnyAncestor stamp: 'fr 11/9/2020 08:42:43'!
PASSED!

!testRun: #PortfolioTest #test18PortfolioCanNotAddAnyPreviousMemberOfTheTree stamp: 'fr 11/9/2020 08:42:43'!
PASSED!

!testRun: #PortfolioTest #test19PortfolioCanNotAddAnotherOneWhichSharesChild stamp: 'fr 11/9/2020 08:42:43'!
PASSED!

!testRun: #PortfolioTest #test20PortfolioCanNotAddDuplicateAccountIndirectly stamp: 'fr 11/9/2020 08:42:43'!
PASSED!

!testRun: #PortfolioTest #test21AddingShouldBehaveIdenticallyAsCreatingAPortfolioWithAccounts stamp: 'fr 11/9/2020 08:42:43'!
PASSED!

!testRun: #PortfolioTest #test22CreatingAPortfolioWithAccountsShouldFailIdenticallyAsWhenAddingThem stamp: 'fr 11/9/2020 08:42:43'!
PASSED!
!PortfolioTest methodsFor: 'tests - tree structure' stamp: 'fr 11/9/2020 08:42:48' prior: 50881158!
test17PortfolioCanNotAddAnyAncestor

	| parentPortfolio rootPortfolio |
	parentPortfolio _ Portfolio with: (OrderedCollection with: portfolio1).
	rootPortfolio _ Portfolio with: (OrderedCollection with: parentPortfolio).
	
	self  should: [portfolio1 add: rootPortfolio] 
		raise: Error 
		withMessageText: Portfolio canNotAddAccountErrorDescription! !

!testRun: #PortfolioTest #test17PortfolioCanNotAddAnyAncestor stamp: 'fr 11/9/2020 08:42:49'!
PASSED!

!testRun: #PortfolioTest #test01EmptyPortfolioHasBalanceZero stamp: 'fr 11/9/2020 08:42:49'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioWithASingleAccountWithNoTransactionsHasBalanceZero stamp: 'fr 11/9/2020 08:42:49'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioWithASingleAccountReflectsItsTransactionsValuesInItsBalance stamp: 'fr 11/9/2020 08:42:49'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithMultipleAccountsAndPortfoliosReflectsTheirTransactionsValuesInItsBalance stamp: 'fr 11/9/2020 08:42:49'!
PASSED!

!testRun: #PortfolioTest #test05EmptyPortfolioHasNotRegisteredAnyTransaction stamp: 'fr 11/9/2020 08:42:49'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioWithASingleAccountRegistersItsTransactions stamp: 'fr 11/9/2020 08:42:49'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioWithMulltipleAccountsAndPortfoliosRegistersAllTheirTransactions stamp: 'fr 11/9/2020 08:42:49'!
PASSED!

!testRun: #PortfolioTest #test08EmptyPortfolioDoesNotExhibitAnyTransaction stamp: 'fr 11/9/2020 08:42:49'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithASingleAccountExhibitsItsTransactions stamp: 'fr 11/9/2020 08:42:49'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioWithMultipleAccountsAndPortfoliosExhibitsAllTheirTransactionsCombined stamp: 'fr 11/9/2020 08:42:49'!
PASSED!

!testRun: #PortfolioTest #test11EmptyPortfolioDoesNotContainAnyAccount stamp: 'fr 11/9/2020 08:42:49'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioContainsAnAccountAfterItIsAdded stamp: 'fr 11/9/2020 08:42:49'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioContainsAnAccountAfterItIsAddedToItselfOrAnyOfItsDecendents stamp: 'fr 11/9/2020 08:42:49'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioDoesNotContainAnythingThatWasNotAddedToItself stamp: 'fr 11/9/2020 08:42:49'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotAddItself stamp: 'fr 11/9/2020 08:42:49'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioCanNotAddItsParent stamp: 'fr 11/9/2020 08:42:49'!
PASSED!

!testRun: #PortfolioTest #test17PortfolioCanNotAddAnyAncestor stamp: 'fr 11/9/2020 08:42:49'!
PASSED!

!testRun: #PortfolioTest #test18PortfolioCanNotAddAnyPreviousMemberOfTheTree stamp: 'fr 11/9/2020 08:42:49'!
PASSED!

!testRun: #PortfolioTest #test19PortfolioCanNotAddAnotherOneWhichSharesChild stamp: 'fr 11/9/2020 08:42:49'!
PASSED!

!testRun: #PortfolioTest #test20PortfolioCanNotAddDuplicateAccountIndirectly stamp: 'fr 11/9/2020 08:42:49'!
PASSED!

!testRun: #PortfolioTest #test21AddingShouldBehaveIdenticallyAsCreatingAPortfolioWithAccounts stamp: 'fr 11/9/2020 08:42:49'!
PASSED!

!testRun: #PortfolioTest #test22CreatingAPortfolioWithAccountsShouldFailIdenticallyAsWhenAddingThem stamp: 'fr 11/9/2020 08:42:49'!
PASSED!
!PortfolioTest methodsFor: 'tests - tree structure' stamp: 'fr 11/9/2020 08:42:56' prior: 50881005!
test16PortfolioCanNotAddItsParent

	| anotherPortfolio |
	anotherPortfolio _ Portfolio with: (OrderedCollection with: portfolio1).
	
	self  should: [portfolio1 add: anotherPortfolio] 
		raise: Error 
		withMessageText: Portfolio canNotAddAccountErrorDescription! !

!testRun: #PortfolioTest #test16PortfolioCanNotAddItsParent stamp: 'fr 11/9/2020 08:42:56'!
PASSED!

!testRun: #PortfolioTest #test01EmptyPortfolioHasBalanceZero stamp: 'fr 11/9/2020 08:42:56'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioWithASingleAccountWithNoTransactionsHasBalanceZero stamp: 'fr 11/9/2020 08:42:56'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioWithASingleAccountReflectsItsTransactionsValuesInItsBalance stamp: 'fr 11/9/2020 08:42:56'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithMultipleAccountsAndPortfoliosReflectsTheirTransactionsValuesInItsBalance stamp: 'fr 11/9/2020 08:42:56'!
PASSED!

!testRun: #PortfolioTest #test05EmptyPortfolioHasNotRegisteredAnyTransaction stamp: 'fr 11/9/2020 08:42:56'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioWithASingleAccountRegistersItsTransactions stamp: 'fr 11/9/2020 08:42:56'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioWithMulltipleAccountsAndPortfoliosRegistersAllTheirTransactions stamp: 'fr 11/9/2020 08:42:56'!
PASSED!

!testRun: #PortfolioTest #test08EmptyPortfolioDoesNotExhibitAnyTransaction stamp: 'fr 11/9/2020 08:42:56'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithASingleAccountExhibitsItsTransactions stamp: 'fr 11/9/2020 08:42:56'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioWithMultipleAccountsAndPortfoliosExhibitsAllTheirTransactionsCombined stamp: 'fr 11/9/2020 08:42:56'!
PASSED!

!testRun: #PortfolioTest #test11EmptyPortfolioDoesNotContainAnyAccount stamp: 'fr 11/9/2020 08:42:56'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioContainsAnAccountAfterItIsAdded stamp: 'fr 11/9/2020 08:42:56'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioContainsAnAccountAfterItIsAddedToItselfOrAnyOfItsDecendents stamp: 'fr 11/9/2020 08:42:56'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioDoesNotContainAnythingThatWasNotAddedToItself stamp: 'fr 11/9/2020 08:42:56'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotAddItself stamp: 'fr 11/9/2020 08:42:56'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioCanNotAddItsParent stamp: 'fr 11/9/2020 08:42:56'!
PASSED!

!testRun: #PortfolioTest #test17PortfolioCanNotAddAnyAncestor stamp: 'fr 11/9/2020 08:42:56'!
PASSED!

!testRun: #PortfolioTest #test18PortfolioCanNotAddAnyPreviousMemberOfTheTree stamp: 'fr 11/9/2020 08:42:56'!
PASSED!

!testRun: #PortfolioTest #test19PortfolioCanNotAddAnotherOneWhichSharesChild stamp: 'fr 11/9/2020 08:42:56'!
PASSED!

!testRun: #PortfolioTest #test20PortfolioCanNotAddDuplicateAccountIndirectly stamp: 'fr 11/9/2020 08:42:56'!
PASSED!

!testRun: #PortfolioTest #test21AddingShouldBehaveIdenticallyAsCreatingAPortfolioWithAccounts stamp: 'fr 11/9/2020 08:42:56'!
PASSED!

!testRun: #PortfolioTest #test22CreatingAPortfolioWithAccountsShouldFailIdenticallyAsWhenAddingThem stamp: 'fr 11/9/2020 08:42:56'!
PASSED!
!PortfolioTest methodsFor: 'tests - tree structure' stamp: 'fr 11/9/2020 08:43:01' prior: 50880907!
test15PortfolioCanNotAddItself
	
	self  should: [portfolio1 add: portfolio1] 
		raise: Error 
		withMessageText: Portfolio canNotAddAccountErrorDescription! !

!testRun: #PortfolioTest #test15PortfolioCanNotAddItself stamp: 'fr 11/9/2020 08:43:02'!
PASSED!

!testRun: #PortfolioTest #test01EmptyPortfolioHasBalanceZero stamp: 'fr 11/9/2020 08:43:02'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioWithASingleAccountWithNoTransactionsHasBalanceZero stamp: 'fr 11/9/2020 08:43:02'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioWithASingleAccountReflectsItsTransactionsValuesInItsBalance stamp: 'fr 11/9/2020 08:43:02'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithMultipleAccountsAndPortfoliosReflectsTheirTransactionsValuesInItsBalance stamp: 'fr 11/9/2020 08:43:02'!
PASSED!

!testRun: #PortfolioTest #test05EmptyPortfolioHasNotRegisteredAnyTransaction stamp: 'fr 11/9/2020 08:43:02'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioWithASingleAccountRegistersItsTransactions stamp: 'fr 11/9/2020 08:43:02'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioWithMulltipleAccountsAndPortfoliosRegistersAllTheirTransactions stamp: 'fr 11/9/2020 08:43:02'!
PASSED!

!testRun: #PortfolioTest #test08EmptyPortfolioDoesNotExhibitAnyTransaction stamp: 'fr 11/9/2020 08:43:02'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithASingleAccountExhibitsItsTransactions stamp: 'fr 11/9/2020 08:43:02'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioWithMultipleAccountsAndPortfoliosExhibitsAllTheirTransactionsCombined stamp: 'fr 11/9/2020 08:43:02'!
PASSED!

!testRun: #PortfolioTest #test11EmptyPortfolioDoesNotContainAnyAccount stamp: 'fr 11/9/2020 08:43:02'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioContainsAnAccountAfterItIsAdded stamp: 'fr 11/9/2020 08:43:02'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioContainsAnAccountAfterItIsAddedToItselfOrAnyOfItsDecendents stamp: 'fr 11/9/2020 08:43:02'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioDoesNotContainAnythingThatWasNotAddedToItself stamp: 'fr 11/9/2020 08:43:02'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotAddItself stamp: 'fr 11/9/2020 08:43:02'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioCanNotAddItsParent stamp: 'fr 11/9/2020 08:43:02'!
PASSED!

!testRun: #PortfolioTest #test17PortfolioCanNotAddAnyAncestor stamp: 'fr 11/9/2020 08:43:02'!
PASSED!

!testRun: #PortfolioTest #test18PortfolioCanNotAddAnyPreviousMemberOfTheTree stamp: 'fr 11/9/2020 08:43:02'!
PASSED!

!testRun: #PortfolioTest #test19PortfolioCanNotAddAnotherOneWhichSharesChild stamp: 'fr 11/9/2020 08:43:02'!
PASSED!

!testRun: #PortfolioTest #test20PortfolioCanNotAddDuplicateAccountIndirectly stamp: 'fr 11/9/2020 08:43:02'!
PASSED!

!testRun: #PortfolioTest #test21AddingShouldBehaveIdenticallyAsCreatingAPortfolioWithAccounts stamp: 'fr 11/9/2020 08:43:02'!
PASSED!

!testRun: #PortfolioTest #test22CreatingAPortfolioWithAccountsShouldFailIdenticallyAsWhenAddingThem stamp: 'fr 11/9/2020 08:43:02'!
PASSED!
!PortfolioTest methodsFor: 'tests - balance' stamp: 'fr 11/9/2020 08:43:10' prior: 50880604!
test01EmptyPortfolioHasBalanceZero

	self assert: [portfolio1 balance = 0]! !

!testRun: #PortfolioTest #test01EmptyPortfolioHasBalanceZero stamp: 'fr 11/9/2020 08:43:10'!
PASSED!

!testRun: #PortfolioTest #test01EmptyPortfolioHasBalanceZero stamp: 'fr 11/9/2020 08:43:10'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioWithASingleAccountWithNoTransactionsHasBalanceZero stamp: 'fr 11/9/2020 08:43:10'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioWithASingleAccountReflectsItsTransactionsValuesInItsBalance stamp: 'fr 11/9/2020 08:43:10'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithMultipleAccountsAndPortfoliosReflectsTheirTransactionsValuesInItsBalance stamp: 'fr 11/9/2020 08:43:10'!
PASSED!

!testRun: #PortfolioTest #test05EmptyPortfolioHasNotRegisteredAnyTransaction stamp: 'fr 11/9/2020 08:43:10'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioWithASingleAccountRegistersItsTransactions stamp: 'fr 11/9/2020 08:43:10'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioWithMulltipleAccountsAndPortfoliosRegistersAllTheirTransactions stamp: 'fr 11/9/2020 08:43:10'!
PASSED!

!testRun: #PortfolioTest #test08EmptyPortfolioDoesNotExhibitAnyTransaction stamp: 'fr 11/9/2020 08:43:10'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithASingleAccountExhibitsItsTransactions stamp: 'fr 11/9/2020 08:43:10'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioWithMultipleAccountsAndPortfoliosExhibitsAllTheirTransactionsCombined stamp: 'fr 11/9/2020 08:43:10'!
PASSED!

!testRun: #PortfolioTest #test11EmptyPortfolioDoesNotContainAnyAccount stamp: 'fr 11/9/2020 08:43:10'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioContainsAnAccountAfterItIsAdded stamp: 'fr 11/9/2020 08:43:10'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioContainsAnAccountAfterItIsAddedToItselfOrAnyOfItsDecendents stamp: 'fr 11/9/2020 08:43:10'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioDoesNotContainAnythingThatWasNotAddedToItself stamp: 'fr 11/9/2020 08:43:10'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotAddItself stamp: 'fr 11/9/2020 08:43:10'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioCanNotAddItsParent stamp: 'fr 11/9/2020 08:43:10'!
PASSED!

!testRun: #PortfolioTest #test17PortfolioCanNotAddAnyAncestor stamp: 'fr 11/9/2020 08:43:10'!
PASSED!

!testRun: #PortfolioTest #test18PortfolioCanNotAddAnyPreviousMemberOfTheTree stamp: 'fr 11/9/2020 08:43:10'!
PASSED!

!testRun: #PortfolioTest #test19PortfolioCanNotAddAnotherOneWhichSharesChild stamp: 'fr 11/9/2020 08:43:10'!
PASSED!

!testRun: #PortfolioTest #test20PortfolioCanNotAddDuplicateAccountIndirectly stamp: 'fr 11/9/2020 08:43:10'!
PASSED!

!testRun: #PortfolioTest #test21AddingShouldBehaveIdenticallyAsCreatingAPortfolioWithAccounts stamp: 'fr 11/9/2020 08:43:10'!
PASSED!

!testRun: #PortfolioTest #test22CreatingAPortfolioWithAccountsShouldFailIdenticallyAsWhenAddingThem stamp: 'fr 11/9/2020 08:43:10'!
PASSED!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'fr 11/9/2020 08:45:13' prior: 50872448!
test02PortfolioWithASingleAccountWithNoTransactionsHasBalanceZero

	| portfolio  |
	account1 _ ReceptiveAccount new.
	portfolio _ Portfolio with: (OrderedCollection with: account1).
	self assert: [portfolio balance = 0]! !

!classDefinition: #PortfolioTest category: 'Portfolio-Ejercicio' stamp: 'fr 11/9/2020 08:45:14'!
TestCase subclass: #PortfolioTest
	instanceVariableNames: 'portfolio1 account1'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!
!PortfolioTest methodsFor: 'tests - balance' stamp: 'fr 11/9/2020 08:45:20' prior: 50882542!
test02PortfolioWithASingleAccountWithNoTransactionsHasBalanceZero

	| portfolio  |
	account1 _ ReceptiveAccount new.
	portfolio _ Portfolio with: (OrderedCollection with: account1).
	self assert: [portfolio balance = 0]! !

!testRun: #PortfolioTest #test01EmptyPortfolioHasBalanceZero stamp: 'fr 11/9/2020 08:45:23'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioWithASingleAccountWithNoTransactionsHasBalanceZero stamp: 'fr 11/9/2020 08:45:23'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioWithASingleAccountReflectsItsTransactionsValuesInItsBalance stamp: 'fr 11/9/2020 08:45:23'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithMultipleAccountsAndPortfoliosReflectsTheirTransactionsValuesInItsBalance stamp: 'fr 11/9/2020 08:45:23'!
PASSED!

!testRun: #PortfolioTest #test05EmptyPortfolioHasNotRegisteredAnyTransaction stamp: 'fr 11/9/2020 08:45:23'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioWithASingleAccountRegistersItsTransactions stamp: 'fr 11/9/2020 08:45:23'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioWithMulltipleAccountsAndPortfoliosRegistersAllTheirTransactions stamp: 'fr 11/9/2020 08:45:23'!
PASSED!

!testRun: #PortfolioTest #test08EmptyPortfolioDoesNotExhibitAnyTransaction stamp: 'fr 11/9/2020 08:45:23'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithASingleAccountExhibitsItsTransactions stamp: 'fr 11/9/2020 08:45:23'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioWithMultipleAccountsAndPortfoliosExhibitsAllTheirTransactionsCombined stamp: 'fr 11/9/2020 08:45:23'!
PASSED!

!testRun: #PortfolioTest #test11EmptyPortfolioDoesNotContainAnyAccount stamp: 'fr 11/9/2020 08:45:23'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioContainsAnAccountAfterItIsAdded stamp: 'fr 11/9/2020 08:45:23'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioContainsAnAccountAfterItIsAddedToItselfOrAnyOfItsDecendents stamp: 'fr 11/9/2020 08:45:23'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioDoesNotContainAnythingThatWasNotAddedToItself stamp: 'fr 11/9/2020 08:45:23'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotAddItself stamp: 'fr 11/9/2020 08:45:23'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioCanNotAddItsParent stamp: 'fr 11/9/2020 08:45:23'!
PASSED!

!testRun: #PortfolioTest #test17PortfolioCanNotAddAnyAncestor stamp: 'fr 11/9/2020 08:45:23'!
PASSED!

!testRun: #PortfolioTest #test18PortfolioCanNotAddAnyPreviousMemberOfTheTree stamp: 'fr 11/9/2020 08:45:23'!
PASSED!

!testRun: #PortfolioTest #test19PortfolioCanNotAddAnotherOneWhichSharesChild stamp: 'fr 11/9/2020 08:45:23'!
PASSED!

!testRun: #PortfolioTest #test20PortfolioCanNotAddDuplicateAccountIndirectly stamp: 'fr 11/9/2020 08:45:23'!
PASSED!

!testRun: #PortfolioTest #test21AddingShouldBehaveIdenticallyAsCreatingAPortfolioWithAccounts stamp: 'fr 11/9/2020 08:45:23'!
PASSED!

!testRun: #PortfolioTest #test22CreatingAPortfolioWithAccountsShouldFailIdenticallyAsWhenAddingThem stamp: 'fr 11/9/2020 08:45:23'!
PASSED!

!classDefinition: #PortfolioTest category: 'Portfolio-Ejercicio' stamp: 'fr 11/9/2020 08:45:33'!
TestCase subclass: #PortfolioTest
	instanceVariableNames: 'emptyPortfolio account1'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'fr 11/9/2020 08:45:33' prior: 50882038!
test18PortfolioCanNotAddAnyPreviousMemberOfTheTree

	| middlePortfolio rootPortfolio anotherLeafPortfolio |
	anotherLeafPortfolio _ Portfolio new.
	middlePortfolio _ Portfolio with: (OrderedCollection with: emptyPortfolio).
	rootPortfolio _ Portfolio with: (OrderedCollection with: middlePortfolio with: anotherLeafPortfolio).
	
	self  should: [emptyPortfolio add: anotherLeafPortfolio] 
		raise: Error 
		withMessageText: Portfolio canNotAddAccountErrorDescription! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'fr 11/9/2020 08:45:33' prior: 50881933!
test19PortfolioCanNotAddAnotherOneWhichSharesChild

	| anotherParentPortfolio parentPortfolio |
	parentPortfolio _ Portfolio with: (OrderedCollection with: emptyPortfolio).
	anotherParentPortfolio _ Portfolio with: (OrderedCollection with: emptyPortfolio).
	
	self  should: [parentPortfolio add: anotherParentPortfolio] 
		raise: Error 
		withMessageText: Portfolio canNotAddAccountErrorDescription! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'fr 11/9/2020 08:45:33' prior: 50881724 overrides: 16927572!
setUp

	emptyPortfolio _ Portfolio new. 
! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'fr 11/9/2020 08:45:33' prior: 50882145!
test17PortfolioCanNotAddAnyAncestor

	| parentPortfolio rootPortfolio |
	parentPortfolio _ Portfolio with: (OrderedCollection with: emptyPortfolio).
	rootPortfolio _ Portfolio with: (OrderedCollection with: parentPortfolio).
	
	self  should: [emptyPortfolio add: rootPortfolio] 
		raise: Error 
		withMessageText: Portfolio canNotAddAccountErrorDescription! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'fr 11/9/2020 08:45:33' prior: 50882447!
test01EmptyPortfolioHasBalanceZero

	self assert: [emptyPortfolio balance = 0]! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'fr 11/9/2020 08:45:33' prior: 50881828!
test20PortfolioCanNotAddDuplicateAccountIndirectly

	| parentPortfolio rootPortfolio |
	parentPortfolio _ Portfolio with: (OrderedCollection with: emptyPortfolio).
	rootPortfolio _ Portfolio with: (OrderedCollection with: parentPortfolio).
	
	self  should: [rootPortfolio add: emptyPortfolio] 
		raise: Error 
		withMessageText: Portfolio canNotAddAccountErrorDescription! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'fr 11/9/2020 08:45:33' prior: 50881815!
test21AddingShouldBehaveIdenticallyAsCreatingAPortfolioWithAccounts

	| parentPortfolio |
	parentPortfolio _ Portfolio new.
	
	parentPortfolio add: emptyPortfolio.
	
	self  should: [emptyPortfolio add: parentPortfolio] 
		raise: Error 
		withMessageText: Portfolio canNotAddAccountErrorDescription! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'fr 11/9/2020 08:45:33' prior: 50882350!
test15PortfolioCanNotAddItself
	
	self  should: [emptyPortfolio add: emptyPortfolio] 
		raise: Error 
		withMessageText: Portfolio canNotAddAccountErrorDescription! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'fr 11/9/2020 08:45:33' prior: 50881706!
test22CreatingAPortfolioWithAccountsShouldFailIdenticallyAsWhenAddingThem

	| parentPortfolio anotherParentPortfolio |
	parentPortfolio _ Portfolio with: (OrderedCollection with: emptyPortfolio).
	anotherParentPortfolio _ Portfolio with: (OrderedCollection with: emptyPortfolio). 
	
	self  should: [Portfolio with: (OrderedCollection with: parentPortfolio with: anotherParentPortfolio)] 
		raise: Error 
		withMessageText: Portfolio canNotAddAccountErrorDescription! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'fr 11/9/2020 08:45:33' prior: 50882249!
test16PortfolioCanNotAddItsParent

	| anotherPortfolio |
	anotherPortfolio _ Portfolio with: (OrderedCollection with: emptyPortfolio).
	
	self  should: [emptyPortfolio add: anotherPortfolio] 
		raise: Error 
		withMessageText: Portfolio canNotAddAccountErrorDescription! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'fr 11/9/2020 08:45:33' prior: 50880712!
test08EmptyPortfolioDoesNotExhibitAnyTransaction

	emptyPortfolio _ Portfolio new.
	self assert: [emptyPortfolio transactions = OrderedCollection new]! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'fr 11/9/2020 08:45:33' prior: 50880611!
test05EmptyPortfolioHasNotRegisteredAnyTransaction

	| account deposit |
	account _ ReceptiveAccount new.
	deposit _ Deposit register: 100 on: account.	
	emptyPortfolio _ Portfolio new.
	self assert: [(emptyPortfolio hasRegistered: deposit) not]! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'fr 11/9/2020 08:45:33' prior: 50880809!
test11EmptyPortfolioDoesNotContainAnyAccount

	| account |
	account _ ReceptiveAccount new.
	emptyPortfolio _ Portfolio new.
	self assert: [(emptyPortfolio contains: account) not]! !
!PortfolioTest methodsFor: 'tests - transactions' stamp: 'fr 11/9/2020 08:46:20' prior: 50882792!
test08EmptyPortfolioDoesNotExhibitAnyTransaction

	emptyPortfolio _ Portfolio new.
	self assert: [emptyPortfolio transactions isEmpty]! !

!testRun: #PortfolioTest #test08EmptyPortfolioDoesNotExhibitAnyTransaction stamp: 'fr 11/9/2020 08:46:21'!
PASSED!

!testRun: #PortfolioTest #test01EmptyPortfolioHasBalanceZero stamp: 'fr 11/9/2020 08:46:21'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioWithASingleAccountWithNoTransactionsHasBalanceZero stamp: 'fr 11/9/2020 08:46:21'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioWithASingleAccountReflectsItsTransactionsValuesInItsBalance stamp: 'fr 11/9/2020 08:46:21'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithMultipleAccountsAndPortfoliosReflectsTheirTransactionsValuesInItsBalance stamp: 'fr 11/9/2020 08:46:21'!
PASSED!

!testRun: #PortfolioTest #test05EmptyPortfolioHasNotRegisteredAnyTransaction stamp: 'fr 11/9/2020 08:46:21'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioWithASingleAccountRegistersItsTransactions stamp: 'fr 11/9/2020 08:46:21'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioWithMulltipleAccountsAndPortfoliosRegistersAllTheirTransactions stamp: 'fr 11/9/2020 08:46:21'!
PASSED!

!testRun: #PortfolioTest #test08EmptyPortfolioDoesNotExhibitAnyTransaction stamp: 'fr 11/9/2020 08:46:21'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithASingleAccountExhibitsItsTransactions stamp: 'fr 11/9/2020 08:46:21'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioWithMultipleAccountsAndPortfoliosExhibitsAllTheirTransactionsCombined stamp: 'fr 11/9/2020 08:46:21'!
PASSED!

!testRun: #PortfolioTest #test11EmptyPortfolioDoesNotContainAnyAccount stamp: 'fr 11/9/2020 08:46:21'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioContainsAnAccountAfterItIsAdded stamp: 'fr 11/9/2020 08:46:21'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioContainsAnAccountAfterItIsAddedToItselfOrAnyOfItsDecendents stamp: 'fr 11/9/2020 08:46:21'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioDoesNotContainAnythingThatWasNotAddedToItself stamp: 'fr 11/9/2020 08:46:21'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotAddItself stamp: 'fr 11/9/2020 08:46:21'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioCanNotAddItsParent stamp: 'fr 11/9/2020 08:46:21'!
PASSED!

!testRun: #PortfolioTest #test17PortfolioCanNotAddAnyAncestor stamp: 'fr 11/9/2020 08:46:21'!
PASSED!

!testRun: #PortfolioTest #test18PortfolioCanNotAddAnyPreviousMemberOfTheTree stamp: 'fr 11/9/2020 08:46:21'!
PASSED!

!testRun: #PortfolioTest #test19PortfolioCanNotAddAnotherOneWhichSharesChild stamp: 'fr 11/9/2020 08:46:21'!
PASSED!

!testRun: #PortfolioTest #test20PortfolioCanNotAddDuplicateAccountIndirectly stamp: 'fr 11/9/2020 08:46:21'!
PASSED!

!testRun: #PortfolioTest #test21AddingShouldBehaveIdenticallyAsCreatingAPortfolioWithAccounts stamp: 'fr 11/9/2020 08:46:21'!
PASSED!

!testRun: #PortfolioTest #test22CreatingAPortfolioWithAccountsShouldFailIdenticallyAsWhenAddingThem stamp: 'fr 11/9/2020 08:46:21'!
PASSED!
!PortfolioTest methodsFor: 'tests - transactions' stamp: 'fr 11/9/2020 08:46:30' prior: 50882820!
test08EmptyPortfolioDoesNotExhibitAnyTransaction

	self assert: [emptyPortfolio transactions isEmpty]! !

!testRun: #PortfolioTest #test08EmptyPortfolioDoesNotExhibitAnyTransaction stamp: 'fr 11/9/2020 08:46:31'!
PASSED!

!testRun: #PortfolioTest #test01EmptyPortfolioHasBalanceZero stamp: 'fr 11/9/2020 08:46:31'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioWithASingleAccountWithNoTransactionsHasBalanceZero stamp: 'fr 11/9/2020 08:46:31'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioWithASingleAccountReflectsItsTransactionsValuesInItsBalance stamp: 'fr 11/9/2020 08:46:31'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithMultipleAccountsAndPortfoliosReflectsTheirTransactionsValuesInItsBalance stamp: 'fr 11/9/2020 08:46:31'!
PASSED!

!testRun: #PortfolioTest #test05EmptyPortfolioHasNotRegisteredAnyTransaction stamp: 'fr 11/9/2020 08:46:31'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioWithASingleAccountRegistersItsTransactions stamp: 'fr 11/9/2020 08:46:31'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioWithMulltipleAccountsAndPortfoliosRegistersAllTheirTransactions stamp: 'fr 11/9/2020 08:46:31'!
PASSED!

!testRun: #PortfolioTest #test08EmptyPortfolioDoesNotExhibitAnyTransaction stamp: 'fr 11/9/2020 08:46:31'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithASingleAccountExhibitsItsTransactions stamp: 'fr 11/9/2020 08:46:31'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioWithMultipleAccountsAndPortfoliosExhibitsAllTheirTransactionsCombined stamp: 'fr 11/9/2020 08:46:31'!
PASSED!

!testRun: #PortfolioTest #test11EmptyPortfolioDoesNotContainAnyAccount stamp: 'fr 11/9/2020 08:46:31'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioContainsAnAccountAfterItIsAdded stamp: 'fr 11/9/2020 08:46:31'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioContainsAnAccountAfterItIsAddedToItselfOrAnyOfItsDecendents stamp: 'fr 11/9/2020 08:46:31'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioDoesNotContainAnythingThatWasNotAddedToItself stamp: 'fr 11/9/2020 08:46:31'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotAddItself stamp: 'fr 11/9/2020 08:46:31'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioCanNotAddItsParent stamp: 'fr 11/9/2020 08:46:31'!
PASSED!

!testRun: #PortfolioTest #test17PortfolioCanNotAddAnyAncestor stamp: 'fr 11/9/2020 08:46:31'!
PASSED!

!testRun: #PortfolioTest #test18PortfolioCanNotAddAnyPreviousMemberOfTheTree stamp: 'fr 11/9/2020 08:46:31'!
PASSED!

!testRun: #PortfolioTest #test19PortfolioCanNotAddAnotherOneWhichSharesChild stamp: 'fr 11/9/2020 08:46:31'!
PASSED!

!testRun: #PortfolioTest #test20PortfolioCanNotAddDuplicateAccountIndirectly stamp: 'fr 11/9/2020 08:46:31'!
PASSED!

!testRun: #PortfolioTest #test21AddingShouldBehaveIdenticallyAsCreatingAPortfolioWithAccounts stamp: 'fr 11/9/2020 08:46:31'!
PASSED!

!testRun: #PortfolioTest #test22CreatingAPortfolioWithAccountsShouldFailIdenticallyAsWhenAddingThem stamp: 'fr 11/9/2020 08:46:31'!
PASSED!
!PortfolioTest methodsFor: 'tests - balance' stamp: 'fr 11/9/2020 08:46:55' prior: 50872508!
test03PortfolioWithASingleAccountReflectsItsTransactionsValuesInItsBalance

	| portfolio |
	account1 _ ReceptiveAccount new.
	Deposit register: 100 on: account1. 
	portfolio _ Portfolio with: (OrderedCollection with: account1).
	self assert: [portfolio balance = 100]! !

!testRun: #PortfolioTest #test03PortfolioWithASingleAccountReflectsItsTransactionsValuesInItsBalance stamp: 'fr 11/9/2020 08:46:57'!
PASSED!

!testRun: #PortfolioTest #test01EmptyPortfolioHasBalanceZero stamp: 'fr 11/9/2020 08:46:57'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioWithASingleAccountWithNoTransactionsHasBalanceZero stamp: 'fr 11/9/2020 08:46:57'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioWithASingleAccountReflectsItsTransactionsValuesInItsBalance stamp: 'fr 11/9/2020 08:46:57'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithMultipleAccountsAndPortfoliosReflectsTheirTransactionsValuesInItsBalance stamp: 'fr 11/9/2020 08:46:57'!
PASSED!

!testRun: #PortfolioTest #test05EmptyPortfolioHasNotRegisteredAnyTransaction stamp: 'fr 11/9/2020 08:46:57'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioWithASingleAccountRegistersItsTransactions stamp: 'fr 11/9/2020 08:46:57'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioWithMulltipleAccountsAndPortfoliosRegistersAllTheirTransactions stamp: 'fr 11/9/2020 08:46:57'!
PASSED!

!testRun: #PortfolioTest #test08EmptyPortfolioDoesNotExhibitAnyTransaction stamp: 'fr 11/9/2020 08:46:57'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithASingleAccountExhibitsItsTransactions stamp: 'fr 11/9/2020 08:46:57'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioWithMultipleAccountsAndPortfoliosExhibitsAllTheirTransactionsCombined stamp: 'fr 11/9/2020 08:46:57'!
PASSED!

!testRun: #PortfolioTest #test11EmptyPortfolioDoesNotContainAnyAccount stamp: 'fr 11/9/2020 08:46:57'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioContainsAnAccountAfterItIsAdded stamp: 'fr 11/9/2020 08:46:57'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioContainsAnAccountAfterItIsAddedToItselfOrAnyOfItsDecendents stamp: 'fr 11/9/2020 08:46:57'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioDoesNotContainAnythingThatWasNotAddedToItself stamp: 'fr 11/9/2020 08:46:57'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotAddItself stamp: 'fr 11/9/2020 08:46:57'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioCanNotAddItsParent stamp: 'fr 11/9/2020 08:46:57'!
PASSED!

!testRun: #PortfolioTest #test17PortfolioCanNotAddAnyAncestor stamp: 'fr 11/9/2020 08:46:57'!
PASSED!

!testRun: #PortfolioTest #test18PortfolioCanNotAddAnyPreviousMemberOfTheTree stamp: 'fr 11/9/2020 08:46:57'!
PASSED!

!testRun: #PortfolioTest #test19PortfolioCanNotAddAnotherOneWhichSharesChild stamp: 'fr 11/9/2020 08:46:57'!
PASSED!

!testRun: #PortfolioTest #test20PortfolioCanNotAddDuplicateAccountIndirectly stamp: 'fr 11/9/2020 08:46:57'!
PASSED!

!testRun: #PortfolioTest #test21AddingShouldBehaveIdenticallyAsCreatingAPortfolioWithAccounts stamp: 'fr 11/9/2020 08:46:57'!
PASSED!

!testRun: #PortfolioTest #test22CreatingAPortfolioWithAccountsShouldFailIdenticallyAsWhenAddingThem stamp: 'fr 11/9/2020 08:46:57'!
PASSED!
!PortfolioTest methodsFor: 'tests - balance' stamp: 'fr 11/9/2020 08:47:19' prior: 50880539!
test04PortfolioWithMultipleAccountsAndPortfoliosReflectsTheirTransactionsValuesInItsBalance

	| portfolio anotherAccount anotherPortfolio |
	account1 _ ReceptiveAccount new.
	anotherAccount _ ReceptiveAccount new.
	
	Deposit register: 100 on: account1. 
	Deposit register: 50 on: anotherAccount.
	 
	anotherPortfolio _ Portfolio with: (OrderedCollection with: account1).
	portfolio _ Portfolio with: (OrderedCollection with: anotherAccount with: anotherPortfolio).
	self assert: [portfolio balance = 150]! !

!testRun: #PortfolioTest #test04PortfolioWithMultipleAccountsAndPortfoliosReflectsTheirTransactionsValuesInItsBalance stamp: 'fr 11/9/2020 08:47:21'!
PASSED!

!testRun: #PortfolioTest #test01EmptyPortfolioHasBalanceZero stamp: 'fr 11/9/2020 08:47:21'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioWithASingleAccountWithNoTransactionsHasBalanceZero stamp: 'fr 11/9/2020 08:47:21'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioWithASingleAccountReflectsItsTransactionsValuesInItsBalance stamp: 'fr 11/9/2020 08:47:21'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithMultipleAccountsAndPortfoliosReflectsTheirTransactionsValuesInItsBalance stamp: 'fr 11/9/2020 08:47:21'!
PASSED!

!testRun: #PortfolioTest #test05EmptyPortfolioHasNotRegisteredAnyTransaction stamp: 'fr 11/9/2020 08:47:21'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioWithASingleAccountRegistersItsTransactions stamp: 'fr 11/9/2020 08:47:21'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioWithMulltipleAccountsAndPortfoliosRegistersAllTheirTransactions stamp: 'fr 11/9/2020 08:47:21'!
PASSED!

!testRun: #PortfolioTest #test08EmptyPortfolioDoesNotExhibitAnyTransaction stamp: 'fr 11/9/2020 08:47:21'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithASingleAccountExhibitsItsTransactions stamp: 'fr 11/9/2020 08:47:21'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioWithMultipleAccountsAndPortfoliosExhibitsAllTheirTransactionsCombined stamp: 'fr 11/9/2020 08:47:21'!
PASSED!

!testRun: #PortfolioTest #test11EmptyPortfolioDoesNotContainAnyAccount stamp: 'fr 11/9/2020 08:47:21'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioContainsAnAccountAfterItIsAdded stamp: 'fr 11/9/2020 08:47:21'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioContainsAnAccountAfterItIsAddedToItselfOrAnyOfItsDecendents stamp: 'fr 11/9/2020 08:47:21'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioDoesNotContainAnythingThatWasNotAddedToItself stamp: 'fr 11/9/2020 08:47:21'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotAddItself stamp: 'fr 11/9/2020 08:47:21'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioCanNotAddItsParent stamp: 'fr 11/9/2020 08:47:21'!
PASSED!

!testRun: #PortfolioTest #test17PortfolioCanNotAddAnyAncestor stamp: 'fr 11/9/2020 08:47:21'!
PASSED!

!testRun: #PortfolioTest #test18PortfolioCanNotAddAnyPreviousMemberOfTheTree stamp: 'fr 11/9/2020 08:47:21'!
PASSED!

!testRun: #PortfolioTest #test19PortfolioCanNotAddAnotherOneWhichSharesChild stamp: 'fr 11/9/2020 08:47:21'!
PASSED!

!testRun: #PortfolioTest #test20PortfolioCanNotAddDuplicateAccountIndirectly stamp: 'fr 11/9/2020 08:47:21'!
PASSED!

!testRun: #PortfolioTest #test21AddingShouldBehaveIdenticallyAsCreatingAPortfolioWithAccounts stamp: 'fr 11/9/2020 08:47:21'!
PASSED!

!testRun: #PortfolioTest #test22CreatingAPortfolioWithAccountsShouldFailIdenticallyAsWhenAddingThem stamp: 'fr 11/9/2020 08:47:21'!
PASSED!
!PortfolioTest methodsFor: 'tests - hasRegistered' stamp: 'fr 11/9/2020 08:48:56' prior: 50882800!
test05EmptyPortfolioHasNotRegisteredAnyTransaction

	| deposit |
	account1 _ ReceptiveAccount new.
	deposit _ Deposit register: 100 on: account1.	
	emptyPortfolio _ Portfolio new.
	self assert: [(emptyPortfolio hasRegistered: deposit) not]! !
!PortfolioTest methodsFor: 'tests - hasRegistered' stamp: 'fr 11/9/2020 08:49:28' prior: 50880523!
test06PortfolioWithASingleAccountRegistersItsTransactions

	| portfolio deposit |
	account1 _ ReceptiveAccount new.
	deposit _ Deposit register: 100 on: account1.	
	portfolio _ Portfolio with: (OrderedCollection with: account1).
	self assert: [portfolio hasRegistered: deposit]! !

!testRun: #PortfolioTest #test06PortfolioWithASingleAccountRegistersItsTransactions stamp: 'fr 11/9/2020 08:49:29'!
PASSED!

!testRun: #PortfolioTest #test01EmptyPortfolioHasBalanceZero stamp: 'fr 11/9/2020 08:49:29'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioWithASingleAccountWithNoTransactionsHasBalanceZero stamp: 'fr 11/9/2020 08:49:29'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioWithASingleAccountReflectsItsTransactionsValuesInItsBalance stamp: 'fr 11/9/2020 08:49:29'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithMultipleAccountsAndPortfoliosReflectsTheirTransactionsValuesInItsBalance stamp: 'fr 11/9/2020 08:49:29'!
PASSED!

!testRun: #PortfolioTest #test05EmptyPortfolioHasNotRegisteredAnyTransaction stamp: 'fr 11/9/2020 08:49:29'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioWithASingleAccountRegistersItsTransactions stamp: 'fr 11/9/2020 08:49:29'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioWithMulltipleAccountsAndPortfoliosRegistersAllTheirTransactions stamp: 'fr 11/9/2020 08:49:29'!
PASSED!

!testRun: #PortfolioTest #test08EmptyPortfolioDoesNotExhibitAnyTransaction stamp: 'fr 11/9/2020 08:49:29'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithASingleAccountExhibitsItsTransactions stamp: 'fr 11/9/2020 08:49:29'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioWithMultipleAccountsAndPortfoliosExhibitsAllTheirTransactionsCombined stamp: 'fr 11/9/2020 08:49:29'!
PASSED!

!testRun: #PortfolioTest #test11EmptyPortfolioDoesNotContainAnyAccount stamp: 'fr 11/9/2020 08:49:29'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioContainsAnAccountAfterItIsAdded stamp: 'fr 11/9/2020 08:49:29'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioContainsAnAccountAfterItIsAddedToItselfOrAnyOfItsDecendents stamp: 'fr 11/9/2020 08:49:29'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioDoesNotContainAnythingThatWasNotAddedToItself stamp: 'fr 11/9/2020 08:49:29'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotAddItself stamp: 'fr 11/9/2020 08:49:29'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioCanNotAddItsParent stamp: 'fr 11/9/2020 08:49:29'!
PASSED!

!testRun: #PortfolioTest #test17PortfolioCanNotAddAnyAncestor stamp: 'fr 11/9/2020 08:49:29'!
PASSED!

!testRun: #PortfolioTest #test18PortfolioCanNotAddAnyPreviousMemberOfTheTree stamp: 'fr 11/9/2020 08:49:29'!
PASSED!

!testRun: #PortfolioTest #test19PortfolioCanNotAddAnotherOneWhichSharesChild stamp: 'fr 11/9/2020 08:49:29'!
PASSED!

!testRun: #PortfolioTest #test20PortfolioCanNotAddDuplicateAccountIndirectly stamp: 'fr 11/9/2020 08:49:29'!
PASSED!

!testRun: #PortfolioTest #test21AddingShouldBehaveIdenticallyAsCreatingAPortfolioWithAccounts stamp: 'fr 11/9/2020 08:49:29'!
PASSED!

!testRun: #PortfolioTest #test22CreatingAPortfolioWithAccountsShouldFailIdenticallyAsWhenAddingThem stamp: 'fr 11/9/2020 08:49:29'!
PASSED!
!PortfolioTest methodsFor: 'tests - hasRegistered' stamp: 'fr 11/9/2020 08:49:43' prior: 50880559!
test07PortfolioWithMulltipleAccountsAndPortfoliosRegistersAllTheirTransactions

	| portfolio anotherAccount anotherPortfolio anotherDeposit deposit |
	account1 _ ReceptiveAccount new.
	anotherAccount _ ReceptiveAccount new.
	
	deposit _ Deposit register: 100 on: account1. 
	anotherDeposit _ Deposit register: 50 on: anotherAccount.
	 
	anotherPortfolio _ Portfolio with: (OrderedCollection with: account1).
	portfolio _ Portfolio with: (OrderedCollection with: anotherAccount with: anotherPortfolio).
	self assert: [
		(portfolio hasRegistered: deposit) and: 
		[portfolio hasRegistered: anotherDeposit]
	]! !

!testRun: #PortfolioTest #test07PortfolioWithMulltipleAccountsAndPortfoliosRegistersAllTheirTransactions stamp: 'fr 11/9/2020 08:49:46'!
PASSED!

!testRun: #PortfolioTest #test01EmptyPortfolioHasBalanceZero stamp: 'fr 11/9/2020 08:49:46'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioWithASingleAccountWithNoTransactionsHasBalanceZero stamp: 'fr 11/9/2020 08:49:46'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioWithASingleAccountReflectsItsTransactionsValuesInItsBalance stamp: 'fr 11/9/2020 08:49:46'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithMultipleAccountsAndPortfoliosReflectsTheirTransactionsValuesInItsBalance stamp: 'fr 11/9/2020 08:49:46'!
PASSED!

!testRun: #PortfolioTest #test05EmptyPortfolioHasNotRegisteredAnyTransaction stamp: 'fr 11/9/2020 08:49:46'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioWithASingleAccountRegistersItsTransactions stamp: 'fr 11/9/2020 08:49:46'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioWithMulltipleAccountsAndPortfoliosRegistersAllTheirTransactions stamp: 'fr 11/9/2020 08:49:46'!
PASSED!

!testRun: #PortfolioTest #test08EmptyPortfolioDoesNotExhibitAnyTransaction stamp: 'fr 11/9/2020 08:49:46'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithASingleAccountExhibitsItsTransactions stamp: 'fr 11/9/2020 08:49:46'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioWithMultipleAccountsAndPortfoliosExhibitsAllTheirTransactionsCombined stamp: 'fr 11/9/2020 08:49:46'!
PASSED!

!testRun: #PortfolioTest #test11EmptyPortfolioDoesNotContainAnyAccount stamp: 'fr 11/9/2020 08:49:46'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioContainsAnAccountAfterItIsAdded stamp: 'fr 11/9/2020 08:49:46'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioContainsAnAccountAfterItIsAddedToItselfOrAnyOfItsDecendents stamp: 'fr 11/9/2020 08:49:46'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioDoesNotContainAnythingThatWasNotAddedToItself stamp: 'fr 11/9/2020 08:49:46'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotAddItself stamp: 'fr 11/9/2020 08:49:47'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioCanNotAddItsParent stamp: 'fr 11/9/2020 08:49:47'!
PASSED!

!testRun: #PortfolioTest #test17PortfolioCanNotAddAnyAncestor stamp: 'fr 11/9/2020 08:49:47'!
PASSED!

!testRun: #PortfolioTest #test18PortfolioCanNotAddAnyPreviousMemberOfTheTree stamp: 'fr 11/9/2020 08:49:47'!
PASSED!

!testRun: #PortfolioTest #test19PortfolioCanNotAddAnotherOneWhichSharesChild stamp: 'fr 11/9/2020 08:49:47'!
PASSED!

!testRun: #PortfolioTest #test20PortfolioCanNotAddDuplicateAccountIndirectly stamp: 'fr 11/9/2020 08:49:47'!
PASSED!

!testRun: #PortfolioTest #test21AddingShouldBehaveIdenticallyAsCreatingAPortfolioWithAccounts stamp: 'fr 11/9/2020 08:49:47'!
PASSED!

!testRun: #PortfolioTest #test22CreatingAPortfolioWithAccountsShouldFailIdenticallyAsWhenAddingThem stamp: 'fr 11/9/2020 08:49:47'!
PASSED!
!PortfolioTest methodsFor: 'tests - transactions' stamp: 'fr 11/9/2020 08:50:02' prior: 50872745!
test09PortfolioWithASingleAccountExhibitsItsTransactions

	| portfolio deposit |
	account1 _ ReceptiveAccount new.
	deposit _ Deposit register: 100 on: account1.	
	portfolio _ Portfolio with: (OrderedCollection with: account1).
	self assert: [portfolio transactions = (OrderedCollection with: deposit)]! !

!testRun: #PortfolioTest #test09PortfolioWithASingleAccountExhibitsItsTransactions stamp: 'fr 11/9/2020 08:50:03'!
PASSED!

!testRun: #PortfolioTest #test01EmptyPortfolioHasBalanceZero stamp: 'fr 11/9/2020 08:50:03'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioWithASingleAccountWithNoTransactionsHasBalanceZero stamp: 'fr 11/9/2020 08:50:03'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioWithASingleAccountReflectsItsTransactionsValuesInItsBalance stamp: 'fr 11/9/2020 08:50:03'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithMultipleAccountsAndPortfoliosReflectsTheirTransactionsValuesInItsBalance stamp: 'fr 11/9/2020 08:50:03'!
PASSED!

!testRun: #PortfolioTest #test05EmptyPortfolioHasNotRegisteredAnyTransaction stamp: 'fr 11/9/2020 08:50:03'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioWithASingleAccountRegistersItsTransactions stamp: 'fr 11/9/2020 08:50:03'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioWithMulltipleAccountsAndPortfoliosRegistersAllTheirTransactions stamp: 'fr 11/9/2020 08:50:03'!
PASSED!

!testRun: #PortfolioTest #test08EmptyPortfolioDoesNotExhibitAnyTransaction stamp: 'fr 11/9/2020 08:50:03'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithASingleAccountExhibitsItsTransactions stamp: 'fr 11/9/2020 08:50:03'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioWithMultipleAccountsAndPortfoliosExhibitsAllTheirTransactionsCombined stamp: 'fr 11/9/2020 08:50:03'!
PASSED!

!testRun: #PortfolioTest #test11EmptyPortfolioDoesNotContainAnyAccount stamp: 'fr 11/9/2020 08:50:03'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioContainsAnAccountAfterItIsAdded stamp: 'fr 11/9/2020 08:50:03'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioContainsAnAccountAfterItIsAddedToItselfOrAnyOfItsDecendents stamp: 'fr 11/9/2020 08:50:03'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioDoesNotContainAnythingThatWasNotAddedToItself stamp: 'fr 11/9/2020 08:50:03'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotAddItself stamp: 'fr 11/9/2020 08:50:03'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioCanNotAddItsParent stamp: 'fr 11/9/2020 08:50:03'!
PASSED!

!testRun: #PortfolioTest #test17PortfolioCanNotAddAnyAncestor stamp: 'fr 11/9/2020 08:50:03'!
PASSED!

!testRun: #PortfolioTest #test18PortfolioCanNotAddAnyPreviousMemberOfTheTree stamp: 'fr 11/9/2020 08:50:03'!
PASSED!

!testRun: #PortfolioTest #test19PortfolioCanNotAddAnotherOneWhichSharesChild stamp: 'fr 11/9/2020 08:50:03'!
PASSED!

!testRun: #PortfolioTest #test20PortfolioCanNotAddDuplicateAccountIndirectly stamp: 'fr 11/9/2020 08:50:03'!
PASSED!

!testRun: #PortfolioTest #test21AddingShouldBehaveIdenticallyAsCreatingAPortfolioWithAccounts stamp: 'fr 11/9/2020 08:50:03'!
PASSED!

!testRun: #PortfolioTest #test22CreatingAPortfolioWithAccountsShouldFailIdenticallyAsWhenAddingThem stamp: 'fr 11/9/2020 08:50:03'!
PASSED!
!PortfolioTest methodsFor: 'tests - transactions' stamp: 'fr 11/9/2020 08:50:14' prior: 50872758!
test10PortfolioWithMultipleAccountsAndPortfoliosExhibitsAllTheirTransactionsCombined

	| portfolio anotherAccount innerPortfolio anotherDeposit deposit |
	account1 _ ReceptiveAccount new.
	anotherAccount _ ReceptiveAccount new.
	
	deposit _ Deposit register: 100 on: account1. 
	anotherDeposit _ Deposit register: 50 on: anotherAccount.
	 
	innerPortfolio _ Portfolio with: (OrderedCollection with: account1).
	portfolio _ Portfolio with: (OrderedCollection with: anotherAccount with: innerPortfolio).
	self assert: [portfolio transactions = (OrderedCollection with: anotherDeposit with: deposit	)]! !

!testRun: #PortfolioTest #test10PortfolioWithMultipleAccountsAndPortfoliosExhibitsAllTheirTransactionsCombined stamp: 'fr 11/9/2020 08:50:15'!
PASSED!

!testRun: #PortfolioTest #test01EmptyPortfolioHasBalanceZero stamp: 'fr 11/9/2020 08:50:15'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioWithASingleAccountWithNoTransactionsHasBalanceZero stamp: 'fr 11/9/2020 08:50:15'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioWithASingleAccountReflectsItsTransactionsValuesInItsBalance stamp: 'fr 11/9/2020 08:50:15'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithMultipleAccountsAndPortfoliosReflectsTheirTransactionsValuesInItsBalance stamp: 'fr 11/9/2020 08:50:15'!
PASSED!

!testRun: #PortfolioTest #test05EmptyPortfolioHasNotRegisteredAnyTransaction stamp: 'fr 11/9/2020 08:50:15'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioWithASingleAccountRegistersItsTransactions stamp: 'fr 11/9/2020 08:50:15'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioWithMulltipleAccountsAndPortfoliosRegistersAllTheirTransactions stamp: 'fr 11/9/2020 08:50:15'!
PASSED!

!testRun: #PortfolioTest #test08EmptyPortfolioDoesNotExhibitAnyTransaction stamp: 'fr 11/9/2020 08:50:15'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithASingleAccountExhibitsItsTransactions stamp: 'fr 11/9/2020 08:50:15'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioWithMultipleAccountsAndPortfoliosExhibitsAllTheirTransactionsCombined stamp: 'fr 11/9/2020 08:50:15'!
PASSED!

!testRun: #PortfolioTest #test11EmptyPortfolioDoesNotContainAnyAccount stamp: 'fr 11/9/2020 08:50:15'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioContainsAnAccountAfterItIsAdded stamp: 'fr 11/9/2020 08:50:15'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioContainsAnAccountAfterItIsAddedToItselfOrAnyOfItsDecendents stamp: 'fr 11/9/2020 08:50:15'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioDoesNotContainAnythingThatWasNotAddedToItself stamp: 'fr 11/9/2020 08:50:15'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotAddItself stamp: 'fr 11/9/2020 08:50:15'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioCanNotAddItsParent stamp: 'fr 11/9/2020 08:50:15'!
PASSED!

!testRun: #PortfolioTest #test17PortfolioCanNotAddAnyAncestor stamp: 'fr 11/9/2020 08:50:15'!
PASSED!

!testRun: #PortfolioTest #test18PortfolioCanNotAddAnyPreviousMemberOfTheTree stamp: 'fr 11/9/2020 08:50:15'!
PASSED!

!testRun: #PortfolioTest #test19PortfolioCanNotAddAnotherOneWhichSharesChild stamp: 'fr 11/9/2020 08:50:15'!
PASSED!

!testRun: #PortfolioTest #test20PortfolioCanNotAddDuplicateAccountIndirectly stamp: 'fr 11/9/2020 08:50:15'!
PASSED!

!testRun: #PortfolioTest #test21AddingShouldBehaveIdenticallyAsCreatingAPortfolioWithAccounts stamp: 'fr 11/9/2020 08:50:15'!
PASSED!

!testRun: #PortfolioTest #test22CreatingAPortfolioWithAccountsShouldFailIdenticallyAsWhenAddingThem stamp: 'fr 11/9/2020 08:50:15'!
PASSED!
!PortfolioTest methodsFor: 'tests - add' stamp: 'fr 11/9/2020 08:50:30' prior: 50882811!
test11EmptyPortfolioDoesNotContainAnyAccount

	account1 _ ReceptiveAccount new.
	self assert: [(emptyPortfolio contains: account1) not]! !

!testRun: #PortfolioTest #test11EmptyPortfolioDoesNotContainAnyAccount stamp: 'fr 11/9/2020 08:50:31'!
PASSED!

!testRun: #PortfolioTest #test01EmptyPortfolioHasBalanceZero stamp: 'fr 11/9/2020 08:50:31'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioWithASingleAccountWithNoTransactionsHasBalanceZero stamp: 'fr 11/9/2020 08:50:31'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioWithASingleAccountReflectsItsTransactionsValuesInItsBalance stamp: 'fr 11/9/2020 08:50:31'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithMultipleAccountsAndPortfoliosReflectsTheirTransactionsValuesInItsBalance stamp: 'fr 11/9/2020 08:50:31'!
PASSED!

!testRun: #PortfolioTest #test05EmptyPortfolioHasNotRegisteredAnyTransaction stamp: 'fr 11/9/2020 08:50:31'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioWithASingleAccountRegistersItsTransactions stamp: 'fr 11/9/2020 08:50:31'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioWithMulltipleAccountsAndPortfoliosRegistersAllTheirTransactions stamp: 'fr 11/9/2020 08:50:31'!
PASSED!

!testRun: #PortfolioTest #test08EmptyPortfolioDoesNotExhibitAnyTransaction stamp: 'fr 11/9/2020 08:50:31'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithASingleAccountExhibitsItsTransactions stamp: 'fr 11/9/2020 08:50:31'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioWithMultipleAccountsAndPortfoliosExhibitsAllTheirTransactionsCombined stamp: 'fr 11/9/2020 08:50:31'!
PASSED!

!testRun: #PortfolioTest #test11EmptyPortfolioDoesNotContainAnyAccount stamp: 'fr 11/9/2020 08:50:31'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioContainsAnAccountAfterItIsAdded stamp: 'fr 11/9/2020 08:50:31'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioContainsAnAccountAfterItIsAddedToItselfOrAnyOfItsDecendents stamp: 'fr 11/9/2020 08:50:31'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioDoesNotContainAnythingThatWasNotAddedToItself stamp: 'fr 11/9/2020 08:50:31'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotAddItself stamp: 'fr 11/9/2020 08:50:31'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioCanNotAddItsParent stamp: 'fr 11/9/2020 08:50:31'!
PASSED!

!testRun: #PortfolioTest #test17PortfolioCanNotAddAnyAncestor stamp: 'fr 11/9/2020 08:50:31'!
PASSED!

!testRun: #PortfolioTest #test18PortfolioCanNotAddAnyPreviousMemberOfTheTree stamp: 'fr 11/9/2020 08:50:31'!
PASSED!

!testRun: #PortfolioTest #test19PortfolioCanNotAddAnotherOneWhichSharesChild stamp: 'fr 11/9/2020 08:50:31'!
PASSED!

!testRun: #PortfolioTest #test20PortfolioCanNotAddDuplicateAccountIndirectly stamp: 'fr 11/9/2020 08:50:31'!
PASSED!

!testRun: #PortfolioTest #test21AddingShouldBehaveIdenticallyAsCreatingAPortfolioWithAccounts stamp: 'fr 11/9/2020 08:50:31'!
PASSED!

!testRun: #PortfolioTest #test22CreatingAPortfolioWithAccountsShouldFailIdenticallyAsWhenAddingThem stamp: 'fr 11/9/2020 08:50:31'!
PASSED!
!PortfolioTest methodsFor: 'tests - add' stamp: 'fr 11/9/2020 08:51:13' prior: 50872860!
test12PortfolioContainsAnAccountAfterItIsAdded

	account1 _ ReceptiveAccount new.
	emptyPortfolio add: account1.
	self assert: [emptyPortfolio contains: account1]! !

!testRun: #PortfolioTest #test12PortfolioContainsAnAccountAfterItIsAdded stamp: 'fr 11/9/2020 08:51:14'!
PASSED!

!testRun: #PortfolioTest #test01EmptyPortfolioHasBalanceZero stamp: 'fr 11/9/2020 08:51:14'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioWithASingleAccountWithNoTransactionsHasBalanceZero stamp: 'fr 11/9/2020 08:51:14'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioWithASingleAccountReflectsItsTransactionsValuesInItsBalance stamp: 'fr 11/9/2020 08:51:14'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithMultipleAccountsAndPortfoliosReflectsTheirTransactionsValuesInItsBalance stamp: 'fr 11/9/2020 08:51:14'!
PASSED!

!testRun: #PortfolioTest #test05EmptyPortfolioHasNotRegisteredAnyTransaction stamp: 'fr 11/9/2020 08:51:14'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioWithASingleAccountRegistersItsTransactions stamp: 'fr 11/9/2020 08:51:14'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioWithMulltipleAccountsAndPortfoliosRegistersAllTheirTransactions stamp: 'fr 11/9/2020 08:51:14'!
PASSED!

!testRun: #PortfolioTest #test08EmptyPortfolioDoesNotExhibitAnyTransaction stamp: 'fr 11/9/2020 08:51:14'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithASingleAccountExhibitsItsTransactions stamp: 'fr 11/9/2020 08:51:14'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioWithMultipleAccountsAndPortfoliosExhibitsAllTheirTransactionsCombined stamp: 'fr 11/9/2020 08:51:14'!
PASSED!

!testRun: #PortfolioTest #test11EmptyPortfolioDoesNotContainAnyAccount stamp: 'fr 11/9/2020 08:51:14'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioContainsAnAccountAfterItIsAdded stamp: 'fr 11/9/2020 08:51:14'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioContainsAnAccountAfterItIsAddedToItselfOrAnyOfItsDecendents stamp: 'fr 11/9/2020 08:51:14'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioDoesNotContainAnythingThatWasNotAddedToItself stamp: 'fr 11/9/2020 08:51:14'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotAddItself stamp: 'fr 11/9/2020 08:51:14'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioCanNotAddItsParent stamp: 'fr 11/9/2020 08:51:14'!
PASSED!

!testRun: #PortfolioTest #test17PortfolioCanNotAddAnyAncestor stamp: 'fr 11/9/2020 08:51:14'!
PASSED!

!testRun: #PortfolioTest #test18PortfolioCanNotAddAnyPreviousMemberOfTheTree stamp: 'fr 11/9/2020 08:51:14'!
PASSED!

!testRun: #PortfolioTest #test19PortfolioCanNotAddAnotherOneWhichSharesChild stamp: 'fr 11/9/2020 08:51:14'!
PASSED!

!testRun: #PortfolioTest #test20PortfolioCanNotAddDuplicateAccountIndirectly stamp: 'fr 11/9/2020 08:51:14'!
PASSED!

!testRun: #PortfolioTest #test21AddingShouldBehaveIdenticallyAsCreatingAPortfolioWithAccounts stamp: 'fr 11/9/2020 08:51:14'!
PASSED!

!testRun: #PortfolioTest #test22CreatingAPortfolioWithAccountsShouldFailIdenticallyAsWhenAddingThem stamp: 'fr 11/9/2020 08:51:14'!
PASSED!
!PortfolioTest methodsFor: 'tests - add' stamp: 'fr 11/9/2020 08:52:15' prior: 50874469!
test13PortfolioContainsAnAccountAfterItIsAddedToItselfOrAnyOfItsDecendents

	| anotherPortfolio |
	account1 _ ReceptiveAccount new.
	anotherPortfolio _ Portfolio with: (OrderedCollection with: emptyPortfolio).
	emptyPortfolio add: account1.
	self assert: [anotherPortfolio contains: account1]! !

!testRun: #PortfolioTest #test13PortfolioContainsAnAccountAfterItIsAddedToItselfOrAnyOfItsDecendents stamp: 'fr 11/9/2020 08:52:16'!
PASSED!

!testRun: #PortfolioTest #test01EmptyPortfolioHasBalanceZero stamp: 'fr 11/9/2020 08:52:16'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioWithASingleAccountWithNoTransactionsHasBalanceZero stamp: 'fr 11/9/2020 08:52:16'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioWithASingleAccountReflectsItsTransactionsValuesInItsBalance stamp: 'fr 11/9/2020 08:52:16'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithMultipleAccountsAndPortfoliosReflectsTheirTransactionsValuesInItsBalance stamp: 'fr 11/9/2020 08:52:16'!
PASSED!

!testRun: #PortfolioTest #test05EmptyPortfolioHasNotRegisteredAnyTransaction stamp: 'fr 11/9/2020 08:52:16'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioWithASingleAccountRegistersItsTransactions stamp: 'fr 11/9/2020 08:52:16'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioWithMulltipleAccountsAndPortfoliosRegistersAllTheirTransactions stamp: 'fr 11/9/2020 08:52:16'!
PASSED!

!testRun: #PortfolioTest #test08EmptyPortfolioDoesNotExhibitAnyTransaction stamp: 'fr 11/9/2020 08:52:16'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithASingleAccountExhibitsItsTransactions stamp: 'fr 11/9/2020 08:52:16'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioWithMultipleAccountsAndPortfoliosExhibitsAllTheirTransactionsCombined stamp: 'fr 11/9/2020 08:52:16'!
PASSED!

!testRun: #PortfolioTest #test11EmptyPortfolioDoesNotContainAnyAccount stamp: 'fr 11/9/2020 08:52:16'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioContainsAnAccountAfterItIsAdded stamp: 'fr 11/9/2020 08:52:16'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioContainsAnAccountAfterItIsAddedToItselfOrAnyOfItsDecendents stamp: 'fr 11/9/2020 08:52:16'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioDoesNotContainAnythingThatWasNotAddedToItself stamp: 'fr 11/9/2020 08:52:16'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotAddItself stamp: 'fr 11/9/2020 08:52:16'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioCanNotAddItsParent stamp: 'fr 11/9/2020 08:52:16'!
PASSED!

!testRun: #PortfolioTest #test17PortfolioCanNotAddAnyAncestor stamp: 'fr 11/9/2020 08:52:16'!
PASSED!

!testRun: #PortfolioTest #test18PortfolioCanNotAddAnyPreviousMemberOfTheTree stamp: 'fr 11/9/2020 08:52:16'!
PASSED!

!testRun: #PortfolioTest #test19PortfolioCanNotAddAnotherOneWhichSharesChild stamp: 'fr 11/9/2020 08:52:16'!
PASSED!

!testRun: #PortfolioTest #test20PortfolioCanNotAddDuplicateAccountIndirectly stamp: 'fr 11/9/2020 08:52:16'!
PASSED!

!testRun: #PortfolioTest #test21AddingShouldBehaveIdenticallyAsCreatingAPortfolioWithAccounts stamp: 'fr 11/9/2020 08:52:16'!
PASSED!

!testRun: #PortfolioTest #test22CreatingAPortfolioWithAccountsShouldFailIdenticallyAsWhenAddingThem stamp: 'fr 11/9/2020 08:52:16'!
PASSED!
!PortfolioTest methodsFor: 'tests - add' stamp: 'fr 11/9/2020 08:52:41' prior: 50874663!
test14PortfolioDoesNotContainAnythingThatWasNotAddedToItself

	| anotherAccount |
	account1 _ ReceptiveAccount new.
	anotherAccount _ ReceptiveAccount new.
	emptyPortfolio add: account1.
	self assert: [(emptyPortfolio contains: anotherAccount) not]! !

!testRun: #PortfolioTest #test14PortfolioDoesNotContainAnythingThatWasNotAddedToItself stamp: 'fr 11/9/2020 08:52:47'!
PASSED!

!testRun: #PortfolioTest #test01EmptyPortfolioHasBalanceZero stamp: 'fr 11/9/2020 08:52:47'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioWithASingleAccountWithNoTransactionsHasBalanceZero stamp: 'fr 11/9/2020 08:52:47'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioWithASingleAccountReflectsItsTransactionsValuesInItsBalance stamp: 'fr 11/9/2020 08:52:47'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithMultipleAccountsAndPortfoliosReflectsTheirTransactionsValuesInItsBalance stamp: 'fr 11/9/2020 08:52:47'!
PASSED!

!testRun: #PortfolioTest #test05EmptyPortfolioHasNotRegisteredAnyTransaction stamp: 'fr 11/9/2020 08:52:47'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioWithASingleAccountRegistersItsTransactions stamp: 'fr 11/9/2020 08:52:47'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioWithMulltipleAccountsAndPortfoliosRegistersAllTheirTransactions stamp: 'fr 11/9/2020 08:52:47'!
PASSED!

!testRun: #PortfolioTest #test08EmptyPortfolioDoesNotExhibitAnyTransaction stamp: 'fr 11/9/2020 08:52:47'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithASingleAccountExhibitsItsTransactions stamp: 'fr 11/9/2020 08:52:47'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioWithMultipleAccountsAndPortfoliosExhibitsAllTheirTransactionsCombined stamp: 'fr 11/9/2020 08:52:47'!
PASSED!

!testRun: #PortfolioTest #test11EmptyPortfolioDoesNotContainAnyAccount stamp: 'fr 11/9/2020 08:52:47'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioContainsAnAccountAfterItIsAdded stamp: 'fr 11/9/2020 08:52:47'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioContainsAnAccountAfterItIsAddedToItselfOrAnyOfItsDecendents stamp: 'fr 11/9/2020 08:52:47'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioDoesNotContainAnythingThatWasNotAddedToItself stamp: 'fr 11/9/2020 08:52:47'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotAddItself stamp: 'fr 11/9/2020 08:52:47'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioCanNotAddItsParent stamp: 'fr 11/9/2020 08:52:47'!
PASSED!

!testRun: #PortfolioTest #test17PortfolioCanNotAddAnyAncestor stamp: 'fr 11/9/2020 08:52:47'!
PASSED!

!testRun: #PortfolioTest #test18PortfolioCanNotAddAnyPreviousMemberOfTheTree stamp: 'fr 11/9/2020 08:52:47'!
PASSED!

!testRun: #PortfolioTest #test19PortfolioCanNotAddAnotherOneWhichSharesChild stamp: 'fr 11/9/2020 08:52:47'!
PASSED!

!testRun: #PortfolioTest #test20PortfolioCanNotAddDuplicateAccountIndirectly stamp: 'fr 11/9/2020 08:52:47'!
PASSED!

!testRun: #PortfolioTest #test21AddingShouldBehaveIdenticallyAsCreatingAPortfolioWithAccounts stamp: 'fr 11/9/2020 08:52:47'!
PASSED!

!testRun: #PortfolioTest #test22CreatingAPortfolioWithAccountsShouldFailIdenticallyAsWhenAddingThem stamp: 'fr 11/9/2020 08:52:47'!
PASSED!
!PortfolioTest methodsFor: 'tests - balance' stamp: 'fr 11/9/2020 08:53:15' prior: 50882560!
test02PortfolioWithASingleAccountWithNoTransactionsHasBalanceZero

	| portfolio  |
	portfolio _ Portfolio with: (OrderedCollection with: account1).
	self assert: [portfolio balance = 0]! !
!PortfolioTest methodsFor: 'setup' stamp: 'fr 11/9/2020 08:53:22' prior: 50882699 overrides: 16927572!
setUp

	emptyPortfolio _ Portfolio new. 

	account1 _ ReceptiveAccount new.
! !
!PortfolioTest methodsFor: 'tests - balance' stamp: 'fr 11/9/2020 08:53:30' prior: 50883013!
test03PortfolioWithASingleAccountReflectsItsTransactionsValuesInItsBalance

	| portfolio |
	Deposit register: 100 on: account1. 
	portfolio _ Portfolio with: (OrderedCollection with: account1).
	self assert: [portfolio balance = 100]! !
!PortfolioTest methodsFor: 'tests - balance' stamp: 'fr 11/9/2020 08:53:36' prior: 50883115!
test04PortfolioWithMultipleAccountsAndPortfoliosReflectsTheirTransactionsValuesInItsBalance

	| portfolio anotherAccount anotherPortfolio |
	anotherAccount _ ReceptiveAccount new.
	
	Deposit register: 100 on: account1. 
	Deposit register: 50 on: anotherAccount.
	 
	anotherPortfolio _ Portfolio with: (OrderedCollection with: account1).
	portfolio _ Portfolio with: (OrderedCollection with: anotherAccount with: anotherPortfolio).
	self assert: [portfolio balance = 150]! !
!PortfolioTest methodsFor: 'tests - hasRegistered' stamp: 'fr 11/9/2020 08:53:41' prior: 50883225!
test05EmptyPortfolioHasNotRegisteredAnyTransaction

	| deposit |
	deposit _ Deposit register: 100 on: account1.	
	emptyPortfolio _ Portfolio new.
	self assert: [(emptyPortfolio hasRegistered: deposit) not]! !
!PortfolioTest methodsFor: 'tests - hasRegistered' stamp: 'fr 11/9/2020 08:53:44' prior: 50884111!
test05EmptyPortfolioHasNotRegisteredAnyTransaction

	| deposit |
	deposit _ Deposit register: 100 on: account1.	
	self assert: [(emptyPortfolio hasRegistered: deposit) not]! !
!PortfolioTest methodsFor: 'tests - hasRegistered' stamp: 'fr 11/9/2020 08:53:51' prior: 50883236!
test06PortfolioWithASingleAccountRegistersItsTransactions

	| portfolio deposit |
	deposit _ Deposit register: 100 on: account1.	
	portfolio _ Portfolio with: (OrderedCollection with: account1).
	self assert: [portfolio hasRegistered: deposit]! !
!PortfolioTest methodsFor: 'tests - hasRegistered' stamp: 'fr 11/9/2020 08:53:58' prior: 50883338!
test07PortfolioWithMulltipleAccountsAndPortfoliosRegistersAllTheirTransactions

	| portfolio anotherAccount anotherPortfolio anotherDeposit deposit |
	anotherAccount _ ReceptiveAccount new.
	
	deposit _ Deposit register: 100 on: account1. 
	anotherDeposit _ Deposit register: 50 on: anotherAccount.
	 
	anotherPortfolio _ Portfolio with: (OrderedCollection with: account1).
	portfolio _ Portfolio with: (OrderedCollection with: anotherAccount with: anotherPortfolio).
	self assert: [
		(portfolio hasRegistered: deposit) and: 
		[portfolio hasRegistered: anotherDeposit]
	]! !

!testRun: #PortfolioTest #test05EmptyPortfolioHasNotRegisteredAnyTransaction stamp: 'fr 11/9/2020 08:54:02'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioWithASingleAccountRegistersItsTransactions stamp: 'fr 11/9/2020 08:54:02'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioWithMulltipleAccountsAndPortfoliosRegistersAllTheirTransactions stamp: 'fr 11/9/2020 08:54:02'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioWithMulltipleAccountsAndPortfoliosRegistersAllTheirTransactions stamp: 'fr 11/9/2020 08:54:04'!
PASSED!

!testRun: #PortfolioTest #test01EmptyPortfolioHasBalanceZero stamp: 'fr 11/9/2020 08:54:04'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioWithASingleAccountWithNoTransactionsHasBalanceZero stamp: 'fr 11/9/2020 08:54:04'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioWithASingleAccountReflectsItsTransactionsValuesInItsBalance stamp: 'fr 11/9/2020 08:54:04'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithMultipleAccountsAndPortfoliosReflectsTheirTransactionsValuesInItsBalance stamp: 'fr 11/9/2020 08:54:04'!
PASSED!

!testRun: #PortfolioTest #test05EmptyPortfolioHasNotRegisteredAnyTransaction stamp: 'fr 11/9/2020 08:54:04'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioWithASingleAccountRegistersItsTransactions stamp: 'fr 11/9/2020 08:54:04'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioWithMulltipleAccountsAndPortfoliosRegistersAllTheirTransactions stamp: 'fr 11/9/2020 08:54:04'!
PASSED!

!testRun: #PortfolioTest #test08EmptyPortfolioDoesNotExhibitAnyTransaction stamp: 'fr 11/9/2020 08:54:04'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithASingleAccountExhibitsItsTransactions stamp: 'fr 11/9/2020 08:54:04'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioWithMultipleAccountsAndPortfoliosExhibitsAllTheirTransactionsCombined stamp: 'fr 11/9/2020 08:54:04'!
PASSED!

!testRun: #PortfolioTest #test11EmptyPortfolioDoesNotContainAnyAccount stamp: 'fr 11/9/2020 08:54:04'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioContainsAnAccountAfterItIsAdded stamp: 'fr 11/9/2020 08:54:04'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioContainsAnAccountAfterItIsAddedToItselfOrAnyOfItsDecendents stamp: 'fr 11/9/2020 08:54:04'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioDoesNotContainAnythingThatWasNotAddedToItself stamp: 'fr 11/9/2020 08:54:04'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotAddItself stamp: 'fr 11/9/2020 08:54:04'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioCanNotAddItsParent stamp: 'fr 11/9/2020 08:54:04'!
PASSED!

!testRun: #PortfolioTest #test17PortfolioCanNotAddAnyAncestor stamp: 'fr 11/9/2020 08:54:04'!
PASSED!

!testRun: #PortfolioTest #test18PortfolioCanNotAddAnyPreviousMemberOfTheTree stamp: 'fr 11/9/2020 08:54:04'!
PASSED!

!testRun: #PortfolioTest #test19PortfolioCanNotAddAnotherOneWhichSharesChild stamp: 'fr 11/9/2020 08:54:04'!
PASSED!

!testRun: #PortfolioTest #test20PortfolioCanNotAddDuplicateAccountIndirectly stamp: 'fr 11/9/2020 08:54:04'!
PASSED!

!testRun: #PortfolioTest #test21AddingShouldBehaveIdenticallyAsCreatingAPortfolioWithAccounts stamp: 'fr 11/9/2020 08:54:04'!
PASSED!

!testRun: #PortfolioTest #test22CreatingAPortfolioWithAccountsShouldFailIdenticallyAsWhenAddingThem stamp: 'fr 11/9/2020 08:54:04'!
PASSED!
!PortfolioTest methodsFor: 'tests - transactions' stamp: 'fr 11/9/2020 08:54:10' prior: 50883451!
test09PortfolioWithASingleAccountExhibitsItsTransactions

	| portfolio deposit |
	deposit _ Deposit register: 100 on: account1.	
	portfolio _ Portfolio with: (OrderedCollection with: account1).
	self assert: [portfolio transactions = (OrderedCollection with: deposit)]! !
!PortfolioTest methodsFor: 'tests - transactions' stamp: 'fr 11/9/2020 08:54:14' prior: 50883554!
test10PortfolioWithMultipleAccountsAndPortfoliosExhibitsAllTheirTransactionsCombined

	| portfolio anotherAccount innerPortfolio anotherDeposit deposit |
	anotherAccount _ ReceptiveAccount new.
	
	deposit _ Deposit register: 100 on: account1. 
	anotherDeposit _ Deposit register: 50 on: anotherAccount.
	 
	innerPortfolio _ Portfolio with: (OrderedCollection with: account1).
	portfolio _ Portfolio with: (OrderedCollection with: anotherAccount with: innerPortfolio).
	self assert: [portfolio transactions = (OrderedCollection with: anotherDeposit with: deposit	)]! !
!PortfolioTest methodsFor: 'tests - add' stamp: 'fr 11/9/2020 08:54:20' prior: 50883667!
test11EmptyPortfolioDoesNotContainAnyAccount

	self assert: [(emptyPortfolio contains: account1) not]! !
!PortfolioTest methodsFor: 'tests - add' stamp: 'fr 11/9/2020 08:54:25' prior: 50883764!
test12PortfolioContainsAnAccountAfterItIsAdded

	emptyPortfolio add: account1.
	self assert: [emptyPortfolio contains: account1]! !
!PortfolioTest methodsFor: 'tests - add' stamp: 'fr 11/9/2020 08:54:43' prior: 50883862!
test13PortfolioContainsAnAccountAfterItIsAddedToItselfOrAnyOfItsDecendents

	| anotherPortfolio |
	anotherPortfolio _ Portfolio with: (OrderedCollection with: emptyPortfolio).
	emptyPortfolio add: account1.
	self assert: [anotherPortfolio contains: account1]! !
!PortfolioTest methodsFor: 'tests - add' stamp: 'fr 11/9/2020 08:54:49' prior: 50883965!
test14PortfolioDoesNotContainAnythingThatWasNotAddedToItself

	| anotherAccount |
	anotherAccount _ ReceptiveAccount new.
	emptyPortfolio add: account1.
	self assert: [(emptyPortfolio contains: anotherAccount) not]! !

!testRun: #PortfolioTest #test10PortfolioWithMultipleAccountsAndPortfoliosExhibitsAllTheirTransactionsCombined stamp: 'fr 11/9/2020 08:54:56'!
PASSED!

!testRun: #PortfolioTest #test01EmptyPortfolioHasBalanceZero stamp: 'fr 11/9/2020 08:54:56'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioWithASingleAccountWithNoTransactionsHasBalanceZero stamp: 'fr 11/9/2020 08:54:56'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioWithASingleAccountReflectsItsTransactionsValuesInItsBalance stamp: 'fr 11/9/2020 08:54:56'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithMultipleAccountsAndPortfoliosReflectsTheirTransactionsValuesInItsBalance stamp: 'fr 11/9/2020 08:54:56'!
PASSED!

!testRun: #PortfolioTest #test05EmptyPortfolioHasNotRegisteredAnyTransaction stamp: 'fr 11/9/2020 08:54:56'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioWithASingleAccountRegistersItsTransactions stamp: 'fr 11/9/2020 08:54:56'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioWithMulltipleAccountsAndPortfoliosRegistersAllTheirTransactions stamp: 'fr 11/9/2020 08:54:56'!
PASSED!

!testRun: #PortfolioTest #test08EmptyPortfolioDoesNotExhibitAnyTransaction stamp: 'fr 11/9/2020 08:54:56'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithASingleAccountExhibitsItsTransactions stamp: 'fr 11/9/2020 08:54:56'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioWithMultipleAccountsAndPortfoliosExhibitsAllTheirTransactionsCombined stamp: 'fr 11/9/2020 08:54:56'!
PASSED!

!testRun: #PortfolioTest #test11EmptyPortfolioDoesNotContainAnyAccount stamp: 'fr 11/9/2020 08:54:56'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioContainsAnAccountAfterItIsAdded stamp: 'fr 11/9/2020 08:54:56'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioContainsAnAccountAfterItIsAddedToItselfOrAnyOfItsDecendents stamp: 'fr 11/9/2020 08:54:56'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioDoesNotContainAnythingThatWasNotAddedToItself stamp: 'fr 11/9/2020 08:54:56'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotAddItself stamp: 'fr 11/9/2020 08:54:56'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioCanNotAddItsParent stamp: 'fr 11/9/2020 08:54:56'!
PASSED!

!testRun: #PortfolioTest #test17PortfolioCanNotAddAnyAncestor stamp: 'fr 11/9/2020 08:54:56'!
PASSED!

!testRun: #PortfolioTest #test18PortfolioCanNotAddAnyPreviousMemberOfTheTree stamp: 'fr 11/9/2020 08:54:56'!
PASSED!

!testRun: #PortfolioTest #test19PortfolioCanNotAddAnotherOneWhichSharesChild stamp: 'fr 11/9/2020 08:54:56'!
PASSED!

!testRun: #PortfolioTest #test20PortfolioCanNotAddDuplicateAccountIndirectly stamp: 'fr 11/9/2020 08:54:56'!
PASSED!

!testRun: #PortfolioTest #test21AddingShouldBehaveIdenticallyAsCreatingAPortfolioWithAccounts stamp: 'fr 11/9/2020 08:54:56'!
PASSED!

!testRun: #PortfolioTest #test22CreatingAPortfolioWithAccountsShouldFailIdenticallyAsWhenAddingThem stamp: 'fr 11/9/2020 08:54:56'!
PASSED!

!classDefinition: #PortfolioTest category: 'Portfolio-Ejercicio' stamp: 'fr 11/9/2020 08:55:21'!
TestCase subclass: #PortfolioTest
	instanceVariableNames: 'emptyPortfolio account'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'fr 11/9/2020 08:55:21' prior: 50884121!
test05EmptyPortfolioHasNotRegisteredAnyTransaction

	| deposit |
	deposit _ Deposit register: 100 on: account.	
	self assert: [(emptyPortfolio hasRegistered: deposit) not]! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'fr 11/9/2020 08:55:21' prior: 50884312!
test13PortfolioContainsAnAccountAfterItIsAddedToItselfOrAnyOfItsDecendents

	| anotherPortfolio |
	anotherPortfolio _ Portfolio with: (OrderedCollection with: emptyPortfolio).
	emptyPortfolio add: account.
	self assert: [anotherPortfolio contains: account]! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'fr 11/9/2020 08:55:21' prior: 50884093!
test04PortfolioWithMultipleAccountsAndPortfoliosReflectsTheirTransactionsValuesInItsBalance

	| portfolio anotherAccount anotherPortfolio |
	anotherAccount _ ReceptiveAccount new.
	
	Deposit register: 100 on: account. 
	Deposit register: 50 on: anotherAccount.
	 
	anotherPortfolio _ Portfolio with: (OrderedCollection with: account).
	portfolio _ Portfolio with: (OrderedCollection with: anotherAccount with: anotherPortfolio).
	self assert: [portfolio balance = 150]! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'fr 11/9/2020 08:55:21' prior: 50884076 overrides: 16927572!
setUp

	emptyPortfolio _ Portfolio new. 

	account _ ReceptiveAccount new.
! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'fr 11/9/2020 08:55:21' prior: 50884265!
test09PortfolioWithASingleAccountExhibitsItsTransactions

	| portfolio deposit |
	deposit _ Deposit register: 100 on: account.	
	portfolio _ Portfolio with: (OrderedCollection with: account).
	self assert: [portfolio transactions = (OrderedCollection with: deposit)]! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'fr 11/9/2020 08:55:21' prior: 50884298!
test11EmptyPortfolioDoesNotContainAnyAccount

	self assert: [(emptyPortfolio contains: account) not]! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'fr 11/9/2020 08:55:21' prior: 50884082!
test03PortfolioWithASingleAccountReflectsItsTransactionsValuesInItsBalance

	| portfolio |
	Deposit register: 100 on: account. 
	portfolio _ Portfolio with: (OrderedCollection with: account).
	self assert: [portfolio balance = 100]! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'fr 11/9/2020 08:55:21' prior: 50884141!
test07PortfolioWithMulltipleAccountsAndPortfoliosRegistersAllTheirTransactions

	| portfolio anotherAccount anotherPortfolio anotherDeposit deposit |
	anotherAccount _ ReceptiveAccount new.
	
	deposit _ Deposit register: 100 on: account. 
	anotherDeposit _ Deposit register: 50 on: anotherAccount.
	 
	anotherPortfolio _ Portfolio with: (OrderedCollection with: account).
	portfolio _ Portfolio with: (OrderedCollection with: anotherAccount with: anotherPortfolio).
	self assert: [
		(portfolio hasRegistered: deposit) and: 
		[portfolio hasRegistered: anotherDeposit]
	]! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'fr 11/9/2020 08:55:21' prior: 50884305!
test12PortfolioContainsAnAccountAfterItIsAdded

	emptyPortfolio add: account.
	self assert: [emptyPortfolio contains: account]! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'fr 11/9/2020 08:55:21' prior: 50884323!
test14PortfolioDoesNotContainAnythingThatWasNotAddedToItself

	| anotherAccount |
	anotherAccount _ ReceptiveAccount new.
	emptyPortfolio add: account.
	self assert: [(emptyPortfolio contains: anotherAccount) not]! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'fr 11/9/2020 08:55:21' prior: 50884130!
test06PortfolioWithASingleAccountRegistersItsTransactions

	| portfolio deposit |
	deposit _ Deposit register: 100 on: account.	
	portfolio _ Portfolio with: (OrderedCollection with: account).
	self assert: [portfolio hasRegistered: deposit]! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'fr 11/9/2020 08:55:21' prior: 50884277!
test10PortfolioWithMultipleAccountsAndPortfoliosExhibitsAllTheirTransactionsCombined

	| portfolio anotherAccount innerPortfolio anotherDeposit deposit |
	anotherAccount _ ReceptiveAccount new.
	
	deposit _ Deposit register: 100 on: account. 
	anotherDeposit _ Deposit register: 50 on: anotherAccount.
	 
	innerPortfolio _ Portfolio with: (OrderedCollection with: account).
	portfolio _ Portfolio with: (OrderedCollection with: anotherAccount with: innerPortfolio).
	self assert: [portfolio transactions = (OrderedCollection with: anotherDeposit with: deposit	)]! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'fr 11/9/2020 08:55:21' prior: 50884066!
test02PortfolioWithASingleAccountWithNoTransactionsHasBalanceZero

	| portfolio  |
	portfolio _ Portfolio with: (OrderedCollection with: account).
	self assert: [portfolio balance = 0]! !
!PortfolioTest methodsFor: 'tests - balance' stamp: 'fr 11/9/2020 08:59:46' prior: 50884453!
test04PortfolioWithMultipleAccountsAndPortfoliosReflectsTheirTransactionsValuesInItsBalance

	| portfolio1 anotherAccount anotherPortfolio |
	anotherAccount _ ReceptiveAccount new.
	
	Deposit register: 100 on: account. 
	Deposit register: 50 on: anotherAccount.
	 
	anotherPortfolio _ Portfolio with: (OrderedCollection with: account).
	portfolio1 _ Portfolio with: (OrderedCollection with: anotherAccount with: anotherPortfolio).
	self assert: [portfolio1 balance = 150]! !
!PortfolioTest methodsFor: 'tests - balance' stamp: 'fr 11/9/2020 08:59:55' prior: 50884588!
test04PortfolioWithMultipleAccountsAndPortfoliosReflectsTheirTransactionsValuesInItsBalance

	| portfolio1 anotherAccount portfolio |
	anotherAccount _ ReceptiveAccount new.
	
	Deposit register: 100 on: account. 
	Deposit register: 50 on: anotherAccount.
	 
	portfolio _ Portfolio with: (OrderedCollection with: account).
	portfolio1 _ Portfolio with: (OrderedCollection with: anotherAccount with: portfolio).
	self assert: [portfolio1 balance = 150]! !
!PortfolioTest methodsFor: 'tests - balance' stamp: 'fr 11/9/2020 09:00:03' prior: 50884606!
test04PortfolioWithMultipleAccountsAndPortfoliosReflectsTheirTransactionsValuesInItsBalance

	| anotherPortfolio anotherAccount portfolio |
	anotherAccount _ ReceptiveAccount new.
	
	Deposit register: 100 on: account. 
	Deposit register: 50 on: anotherAccount.
	 
	portfolio _ Portfolio with: (OrderedCollection with: account).
	anotherPortfolio _ Portfolio with: (OrderedCollection with: anotherAccount with: portfolio).
	self assert: [anotherPortfolio balance = 150]! !
!PortfolioTest methodsFor: 'tests - balance' stamp: 'fr 11/9/2020 09:01:40' prior: 50884579!
test02PortfolioWithASingleAccountWithNoTransactionsHasBalanceZero

	| portfolioWithAccount  |
	portfolioWithAccount _ Portfolio with: (OrderedCollection with: account).
	self assert: [portfolioWithAccount balance = 0]! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'fr 11/9/2020 09:01:53' prior: 50884642!
test02PortfolioWithASingleAccountWithNoTransactionsHasBalanceZero

	 
	portfolioWithAccount _ Portfolio with: (OrderedCollection with: account).
	self assert: [portfolioWithAccount balance = 0]! !

!classDefinition: #PortfolioTest category: 'Portfolio-Ejercicio' stamp: 'fr 11/9/2020 09:01:53'!
TestCase subclass: #PortfolioTest
	instanceVariableNames: 'emptyPortfolio account portfolioWithAccount'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!
!PortfolioTest methodsFor: 'tests - balance' stamp: 'fr 11/9/2020 09:01:57' prior: 50884652!
test02PortfolioWithASingleAccountWithNoTransactionsHasBalanceZero

	portfolioWithAccount _ Portfolio with: (OrderedCollection with: account).
	self assert: [portfolioWithAccount balance = 0]! !
!PortfolioTest methodsFor: 'tests - balance' stamp: 'fr 11/9/2020 09:02:28' prior: 50884497!
test03PortfolioWithASingleAccountReflectsItsTransactionsValuesInItsBalance

	Deposit register: 100 on: account. 
	portfolioWithAccount _ Portfolio with: (OrderedCollection with: account).
	self assert: [portfolioWithAccount balance = 100]! !

!testRun: #PortfolioTest #test03PortfolioWithASingleAccountReflectsItsTransactionsValuesInItsBalance stamp: 'fr 11/9/2020 09:02:29'!
PASSED!

!testRun: #PortfolioTest #test01EmptyPortfolioHasBalanceZero stamp: 'fr 11/9/2020 09:02:29'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioWithASingleAccountWithNoTransactionsHasBalanceZero stamp: 'fr 11/9/2020 09:02:29'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioWithASingleAccountReflectsItsTransactionsValuesInItsBalance stamp: 'fr 11/9/2020 09:02:29'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithMultipleAccountsAndPortfoliosReflectsTheirTransactionsValuesInItsBalance stamp: 'fr 11/9/2020 09:02:29'!
PASSED!

!testRun: #PortfolioTest #test05EmptyPortfolioHasNotRegisteredAnyTransaction stamp: 'fr 11/9/2020 09:02:29'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioWithASingleAccountRegistersItsTransactions stamp: 'fr 11/9/2020 09:02:29'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioWithMulltipleAccountsAndPortfoliosRegistersAllTheirTransactions stamp: 'fr 11/9/2020 09:02:29'!
PASSED!

!testRun: #PortfolioTest #test08EmptyPortfolioDoesNotExhibitAnyTransaction stamp: 'fr 11/9/2020 09:02:29'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithASingleAccountExhibitsItsTransactions stamp: 'fr 11/9/2020 09:02:29'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioWithMultipleAccountsAndPortfoliosExhibitsAllTheirTransactionsCombined stamp: 'fr 11/9/2020 09:02:29'!
PASSED!

!testRun: #PortfolioTest #test11EmptyPortfolioDoesNotContainAnyAccount stamp: 'fr 11/9/2020 09:02:29'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioContainsAnAccountAfterItIsAdded stamp: 'fr 11/9/2020 09:02:29'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioContainsAnAccountAfterItIsAddedToItselfOrAnyOfItsDecendents stamp: 'fr 11/9/2020 09:02:29'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioDoesNotContainAnythingThatWasNotAddedToItself stamp: 'fr 11/9/2020 09:02:29'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotAddItself stamp: 'fr 11/9/2020 09:02:29'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioCanNotAddItsParent stamp: 'fr 11/9/2020 09:02:29'!
PASSED!

!testRun: #PortfolioTest #test17PortfolioCanNotAddAnyAncestor stamp: 'fr 11/9/2020 09:02:29'!
PASSED!

!testRun: #PortfolioTest #test18PortfolioCanNotAddAnyPreviousMemberOfTheTree stamp: 'fr 11/9/2020 09:02:29'!
PASSED!

!testRun: #PortfolioTest #test19PortfolioCanNotAddAnotherOneWhichSharesChild stamp: 'fr 11/9/2020 09:02:29'!
PASSED!

!testRun: #PortfolioTest #test20PortfolioCanNotAddDuplicateAccountIndirectly stamp: 'fr 11/9/2020 09:02:29'!
PASSED!

!testRun: #PortfolioTest #test21AddingShouldBehaveIdenticallyAsCreatingAPortfolioWithAccounts stamp: 'fr 11/9/2020 09:02:29'!
PASSED!

!testRun: #PortfolioTest #test22CreatingAPortfolioWithAccountsShouldFailIdenticallyAsWhenAddingThem stamp: 'fr 11/9/2020 09:02:29'!
PASSED!
!PortfolioTest methodsFor: 'tests - balance' stamp: 'fr 11/9/2020 09:02:42' prior: 50884624!
test04PortfolioWithMultipleAccountsAndPortfoliosReflectsTheirTransactionsValuesInItsBalance

	| anotherPortfolio anotherAccount |
	anotherAccount _ ReceptiveAccount new.
	
	Deposit register: 100 on: account. 
	Deposit register: 50 on: anotherAccount.
	 
	portfolioWithAccount _ Portfolio with: (OrderedCollection with: account).
	anotherPortfolio _ Portfolio with: (OrderedCollection with: anotherAccount with: portfolioWithAccount).
	self assert: [anotherPortfolio balance = 150]! !

!testRun: #PortfolioTest #test04PortfolioWithMultipleAccountsAndPortfoliosReflectsTheirTransactionsValuesInItsBalance stamp: 'fr 11/9/2020 09:02:43'!
PASSED!

!testRun: #PortfolioTest #test01EmptyPortfolioHasBalanceZero stamp: 'fr 11/9/2020 09:02:43'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioWithASingleAccountWithNoTransactionsHasBalanceZero stamp: 'fr 11/9/2020 09:02:43'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioWithASingleAccountReflectsItsTransactionsValuesInItsBalance stamp: 'fr 11/9/2020 09:02:43'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithMultipleAccountsAndPortfoliosReflectsTheirTransactionsValuesInItsBalance stamp: 'fr 11/9/2020 09:02:43'!
PASSED!

!testRun: #PortfolioTest #test05EmptyPortfolioHasNotRegisteredAnyTransaction stamp: 'fr 11/9/2020 09:02:43'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioWithASingleAccountRegistersItsTransactions stamp: 'fr 11/9/2020 09:02:43'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioWithMulltipleAccountsAndPortfoliosRegistersAllTheirTransactions stamp: 'fr 11/9/2020 09:02:43'!
PASSED!

!testRun: #PortfolioTest #test08EmptyPortfolioDoesNotExhibitAnyTransaction stamp: 'fr 11/9/2020 09:02:43'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithASingleAccountExhibitsItsTransactions stamp: 'fr 11/9/2020 09:02:43'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioWithMultipleAccountsAndPortfoliosExhibitsAllTheirTransactionsCombined stamp: 'fr 11/9/2020 09:02:43'!
PASSED!

!testRun: #PortfolioTest #test11EmptyPortfolioDoesNotContainAnyAccount stamp: 'fr 11/9/2020 09:02:43'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioContainsAnAccountAfterItIsAdded stamp: 'fr 11/9/2020 09:02:43'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioContainsAnAccountAfterItIsAddedToItselfOrAnyOfItsDecendents stamp: 'fr 11/9/2020 09:02:43'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioDoesNotContainAnythingThatWasNotAddedToItself stamp: 'fr 11/9/2020 09:02:43'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotAddItself stamp: 'fr 11/9/2020 09:02:43'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioCanNotAddItsParent stamp: 'fr 11/9/2020 09:02:43'!
PASSED!

!testRun: #PortfolioTest #test17PortfolioCanNotAddAnyAncestor stamp: 'fr 11/9/2020 09:02:43'!
PASSED!

!testRun: #PortfolioTest #test18PortfolioCanNotAddAnyPreviousMemberOfTheTree stamp: 'fr 11/9/2020 09:02:43'!
PASSED!

!testRun: #PortfolioTest #test19PortfolioCanNotAddAnotherOneWhichSharesChild stamp: 'fr 11/9/2020 09:02:43'!
PASSED!

!testRun: #PortfolioTest #test20PortfolioCanNotAddDuplicateAccountIndirectly stamp: 'fr 11/9/2020 09:02:43'!
PASSED!

!testRun: #PortfolioTest #test21AddingShouldBehaveIdenticallyAsCreatingAPortfolioWithAccounts stamp: 'fr 11/9/2020 09:02:43'!
PASSED!

!testRun: #PortfolioTest #test22CreatingAPortfolioWithAccountsShouldFailIdenticallyAsWhenAddingThem stamp: 'fr 11/9/2020 09:02:43'!
PASSED!
!PortfolioTest methodsFor: 'tests - hasRegistered' stamp: 'fr 11/9/2020 09:03:06' prior: 50884547!
test06PortfolioWithASingleAccountRegistersItsTransactions

	| deposit |
	deposit _ Deposit register: 100 on: account.	
	portfolioWithAccount _ Portfolio with: (OrderedCollection with: account).
	self assert: [portfolioWithAccount hasRegistered: deposit]! !

!testRun: #PortfolioTest #test06PortfolioWithASingleAccountRegistersItsTransactions stamp: 'fr 11/9/2020 09:03:07'!
PASSED!

!testRun: #PortfolioTest #test01EmptyPortfolioHasBalanceZero stamp: 'fr 11/9/2020 09:03:07'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioWithASingleAccountWithNoTransactionsHasBalanceZero stamp: 'fr 11/9/2020 09:03:07'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioWithASingleAccountReflectsItsTransactionsValuesInItsBalance stamp: 'fr 11/9/2020 09:03:07'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithMultipleAccountsAndPortfoliosReflectsTheirTransactionsValuesInItsBalance stamp: 'fr 11/9/2020 09:03:07'!
PASSED!

!testRun: #PortfolioTest #test05EmptyPortfolioHasNotRegisteredAnyTransaction stamp: 'fr 11/9/2020 09:03:07'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioWithASingleAccountRegistersItsTransactions stamp: 'fr 11/9/2020 09:03:07'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioWithMulltipleAccountsAndPortfoliosRegistersAllTheirTransactions stamp: 'fr 11/9/2020 09:03:07'!
PASSED!

!testRun: #PortfolioTest #test08EmptyPortfolioDoesNotExhibitAnyTransaction stamp: 'fr 11/9/2020 09:03:07'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithASingleAccountExhibitsItsTransactions stamp: 'fr 11/9/2020 09:03:07'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioWithMultipleAccountsAndPortfoliosExhibitsAllTheirTransactionsCombined stamp: 'fr 11/9/2020 09:03:07'!
PASSED!

!testRun: #PortfolioTest #test11EmptyPortfolioDoesNotContainAnyAccount stamp: 'fr 11/9/2020 09:03:07'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioContainsAnAccountAfterItIsAdded stamp: 'fr 11/9/2020 09:03:07'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioContainsAnAccountAfterItIsAddedToItselfOrAnyOfItsDecendents stamp: 'fr 11/9/2020 09:03:07'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioDoesNotContainAnythingThatWasNotAddedToItself stamp: 'fr 11/9/2020 09:03:07'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotAddItself stamp: 'fr 11/9/2020 09:03:07'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioCanNotAddItsParent stamp: 'fr 11/9/2020 09:03:07'!
PASSED!

!testRun: #PortfolioTest #test17PortfolioCanNotAddAnyAncestor stamp: 'fr 11/9/2020 09:03:07'!
PASSED!

!testRun: #PortfolioTest #test18PortfolioCanNotAddAnyPreviousMemberOfTheTree stamp: 'fr 11/9/2020 09:03:07'!
PASSED!

!testRun: #PortfolioTest #test19PortfolioCanNotAddAnotherOneWhichSharesChild stamp: 'fr 11/9/2020 09:03:07'!
PASSED!

!testRun: #PortfolioTest #test20PortfolioCanNotAddDuplicateAccountIndirectly stamp: 'fr 11/9/2020 09:03:07'!
PASSED!

!testRun: #PortfolioTest #test21AddingShouldBehaveIdenticallyAsCreatingAPortfolioWithAccounts stamp: 'fr 11/9/2020 09:03:07'!
PASSED!

!testRun: #PortfolioTest #test22CreatingAPortfolioWithAccountsShouldFailIdenticallyAsWhenAddingThem stamp: 'fr 11/9/2020 09:03:07'!
PASSED!
!PortfolioTest methodsFor: 'tests - hasRegistered' stamp: 'fr 11/9/2020 09:03:25' prior: 50884508!
test07PortfolioWithMulltipleAccountsAndPortfoliosRegistersAllTheirTransactions

	| portfolio1 anotherAccount anotherPortfolio anotherDeposit deposit |
	anotherAccount _ ReceptiveAccount new.
	
	deposit _ Deposit register: 100 on: account. 
	anotherDeposit _ Deposit register: 50 on: anotherAccount.
	 
	anotherPortfolio _ Portfolio with: (OrderedCollection with: account).
	portfolio1 _ Portfolio with: (OrderedCollection with: anotherAccount with: anotherPortfolio).
	self assert: [
		(portfolio1 hasRegistered: deposit) and: 
		[portfolio1 hasRegistered: anotherDeposit]
	]! !
!PortfolioTest methodsFor: 'tests - hasRegistered' stamp: 'fr 11/9/2020 09:03:30' prior: 50884990!
test07PortfolioWithMulltipleAccountsAndPortfoliosRegistersAllTheirTransactions

	| portfolio1 portfolio anotherPortfolio anotherDeposit deposit |
	portfolio _ ReceptiveAccount new.
	
	deposit _ Deposit register: 100 on: account. 
	anotherDeposit _ Deposit register: 50 on: portfolio.
	 
	anotherPortfolio _ Portfolio with: (OrderedCollection with: account).
	portfolio1 _ Portfolio with: (OrderedCollection with: portfolio with: anotherPortfolio).
	self assert: [
		(portfolio1 hasRegistered: deposit) and: 
		[portfolio1 hasRegistered: anotherDeposit]
	]! !
!PortfolioTest methodsFor: 'tests - hasRegistered' stamp: 'fr 11/9/2020 08:55:21' prior: 50885012!
test07PortfolioWithMulltipleAccountsAndPortfoliosRegistersAllTheirTransactions

	| portfolio anotherAccount anotherPortfolio anotherDeposit deposit |
	anotherAccount _ ReceptiveAccount new.
	
	deposit _ Deposit register: 100 on: account. 
	anotherDeposit _ Deposit register: 50 on: anotherAccount.
	 
	anotherPortfolio _ Portfolio with: (OrderedCollection with: account).
	portfolio _ Portfolio with: (OrderedCollection with: anotherAccount with: anotherPortfolio).
	self assert: [
		(portfolio hasRegistered: deposit) and: 
		[portfolio hasRegistered: anotherDeposit]
	]! !

!testRun: #PortfolioTest #test07PortfolioWithMulltipleAccountsAndPortfoliosRegistersAllTheirTransactions stamp: 'fr 11/9/2020 09:04:24'!
PASSED!

!testRun: #PortfolioTest #test01EmptyPortfolioHasBalanceZero stamp: 'fr 11/9/2020 09:04:24'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioWithASingleAccountWithNoTransactionsHasBalanceZero stamp: 'fr 11/9/2020 09:04:24'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioWithASingleAccountReflectsItsTransactionsValuesInItsBalance stamp: 'fr 11/9/2020 09:04:24'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithMultipleAccountsAndPortfoliosReflectsTheirTransactionsValuesInItsBalance stamp: 'fr 11/9/2020 09:04:24'!
PASSED!

!testRun: #PortfolioTest #test05EmptyPortfolioHasNotRegisteredAnyTransaction stamp: 'fr 11/9/2020 09:04:24'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioWithASingleAccountRegistersItsTransactions stamp: 'fr 11/9/2020 09:04:24'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioWithMulltipleAccountsAndPortfoliosRegistersAllTheirTransactions stamp: 'fr 11/9/2020 09:04:24'!
PASSED!

!testRun: #PortfolioTest #test08EmptyPortfolioDoesNotExhibitAnyTransaction stamp: 'fr 11/9/2020 09:04:24'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithASingleAccountExhibitsItsTransactions stamp: 'fr 11/9/2020 09:04:24'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioWithMultipleAccountsAndPortfoliosExhibitsAllTheirTransactionsCombined stamp: 'fr 11/9/2020 09:04:24'!
PASSED!

!testRun: #PortfolioTest #test11EmptyPortfolioDoesNotContainAnyAccount stamp: 'fr 11/9/2020 09:04:24'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioContainsAnAccountAfterItIsAdded stamp: 'fr 11/9/2020 09:04:24'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioContainsAnAccountAfterItIsAddedToItselfOrAnyOfItsDecendents stamp: 'fr 11/9/2020 09:04:24'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioDoesNotContainAnythingThatWasNotAddedToItself stamp: 'fr 11/9/2020 09:04:24'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotAddItself stamp: 'fr 11/9/2020 09:04:24'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioCanNotAddItsParent stamp: 'fr 11/9/2020 09:04:24'!
PASSED!

!testRun: #PortfolioTest #test17PortfolioCanNotAddAnyAncestor stamp: 'fr 11/9/2020 09:04:24'!
PASSED!

!testRun: #PortfolioTest #test18PortfolioCanNotAddAnyPreviousMemberOfTheTree stamp: 'fr 11/9/2020 09:04:24'!
PASSED!

!testRun: #PortfolioTest #test19PortfolioCanNotAddAnotherOneWhichSharesChild stamp: 'fr 11/9/2020 09:04:24'!
PASSED!

!testRun: #PortfolioTest #test20PortfolioCanNotAddDuplicateAccountIndirectly stamp: 'fr 11/9/2020 09:04:24'!
PASSED!

!testRun: #PortfolioTest #test21AddingShouldBehaveIdenticallyAsCreatingAPortfolioWithAccounts stamp: 'fr 11/9/2020 09:04:24'!
PASSED!

!testRun: #PortfolioTest #test22CreatingAPortfolioWithAccountsShouldFailIdenticallyAsWhenAddingThem stamp: 'fr 11/9/2020 09:04:24'!
PASSED!
!PortfolioTest methodsFor: 'tests - hasRegistered' stamp: 'fr 11/9/2020 09:04:30' prior: 50885033!
test07PortfolioWithMulltipleAccountsAndPortfoliosRegistersAllTheirTransactions

	| portfolio1 anotherAccount anotherPortfolio anotherDeposit deposit |
	anotherAccount _ ReceptiveAccount new.
	
	deposit _ Deposit register: 100 on: account. 
	anotherDeposit _ Deposit register: 50 on: anotherAccount.
	 
	anotherPortfolio _ Portfolio with: (OrderedCollection with: account).
	portfolio1 _ Portfolio with: (OrderedCollection with: anotherAccount with: anotherPortfolio).
	self assert: [
		(portfolio1 hasRegistered: deposit) and: 
		[portfolio1 hasRegistered: anotherDeposit]
	]! !
!PortfolioTest methodsFor: 'tests - hasRegistered' stamp: 'fr 11/9/2020 09:04:35' prior: 50885145!
test07PortfolioWithMulltipleAccountsAndPortfoliosRegistersAllTheirTransactions

	| portfolio1 anotherAccount portfolio anotherDeposit deposit |
	anotherAccount _ ReceptiveAccount new.
	
	deposit _ Deposit register: 100 on: account. 
	anotherDeposit _ Deposit register: 50 on: anotherAccount.
	 
	portfolio _ Portfolio with: (OrderedCollection with: account).
	portfolio1 _ Portfolio with: (OrderedCollection with: anotherAccount with: portfolio).
	self assert: [
		(portfolio1 hasRegistered: deposit) and: 
		[portfolio1 hasRegistered: anotherDeposit]
	]! !
!PortfolioTest methodsFor: 'tests - hasRegistered' stamp: 'fr 11/9/2020 09:04:40' prior: 50885167!
test07PortfolioWithMulltipleAccountsAndPortfoliosRegistersAllTheirTransactions

	| anotherPortfolio anotherAccount portfolio anotherDeposit deposit |
	anotherAccount _ ReceptiveAccount new.
	
	deposit _ Deposit register: 100 on: account. 
	anotherDeposit _ Deposit register: 50 on: anotherAccount.
	 
	portfolio _ Portfolio with: (OrderedCollection with: account).
	anotherPortfolio _ Portfolio with: (OrderedCollection with: anotherAccount with: portfolio).
	self assert: [
		(anotherPortfolio hasRegistered: deposit) and: 
		[anotherPortfolio hasRegistered: anotherDeposit]
	]! !
!PortfolioTest methodsFor: 'tests - hasRegistered' stamp: 'fr 11/9/2020 09:04:49' prior: 50885188!
test07PortfolioWithMulltipleAccountsAndPortfoliosRegistersAllTheirTransactions

	| anotherPortfolio anotherAccount anotherDeposit deposit |
	anotherAccount _ ReceptiveAccount new.
	
	deposit _ Deposit register: 100 on: account. 
	anotherDeposit _ Deposit register: 50 on: anotherAccount.
	 
	portfolioWithAccount _ Portfolio with: (OrderedCollection with: account).
	anotherPortfolio _ Portfolio with: (OrderedCollection with: anotherAccount with: portfolioWithAccount).
	self assert: [
		(anotherPortfolio hasRegistered: deposit) and: 
		[anotherPortfolio hasRegistered: anotherDeposit]
	]! !

!testRun: #PortfolioTest #test07PortfolioWithMulltipleAccountsAndPortfoliosRegistersAllTheirTransactions stamp: 'fr 11/9/2020 09:05:05'!
PASSED!

!testRun: #PortfolioTest #test01EmptyPortfolioHasBalanceZero stamp: 'fr 11/9/2020 09:05:05'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioWithASingleAccountWithNoTransactionsHasBalanceZero stamp: 'fr 11/9/2020 09:05:05'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioWithASingleAccountReflectsItsTransactionsValuesInItsBalance stamp: 'fr 11/9/2020 09:05:05'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithMultipleAccountsAndPortfoliosReflectsTheirTransactionsValuesInItsBalance stamp: 'fr 11/9/2020 09:05:05'!
PASSED!

!testRun: #PortfolioTest #test05EmptyPortfolioHasNotRegisteredAnyTransaction stamp: 'fr 11/9/2020 09:05:05'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioWithASingleAccountRegistersItsTransactions stamp: 'fr 11/9/2020 09:05:05'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioWithMulltipleAccountsAndPortfoliosRegistersAllTheirTransactions stamp: 'fr 11/9/2020 09:05:05'!
PASSED!

!testRun: #PortfolioTest #test08EmptyPortfolioDoesNotExhibitAnyTransaction stamp: 'fr 11/9/2020 09:05:05'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithASingleAccountExhibitsItsTransactions stamp: 'fr 11/9/2020 09:05:05'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioWithMultipleAccountsAndPortfoliosExhibitsAllTheirTransactionsCombined stamp: 'fr 11/9/2020 09:05:05'!
PASSED!

!testRun: #PortfolioTest #test11EmptyPortfolioDoesNotContainAnyAccount stamp: 'fr 11/9/2020 09:05:05'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioContainsAnAccountAfterItIsAdded stamp: 'fr 11/9/2020 09:05:05'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioContainsAnAccountAfterItIsAddedToItselfOrAnyOfItsDecendents stamp: 'fr 11/9/2020 09:05:05'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioDoesNotContainAnythingThatWasNotAddedToItself stamp: 'fr 11/9/2020 09:05:05'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotAddItself stamp: 'fr 11/9/2020 09:05:05'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioCanNotAddItsParent stamp: 'fr 11/9/2020 09:05:05'!
PASSED!

!testRun: #PortfolioTest #test17PortfolioCanNotAddAnyAncestor stamp: 'fr 11/9/2020 09:05:05'!
PASSED!

!testRun: #PortfolioTest #test18PortfolioCanNotAddAnyPreviousMemberOfTheTree stamp: 'fr 11/9/2020 09:05:05'!
PASSED!

!testRun: #PortfolioTest #test19PortfolioCanNotAddAnotherOneWhichSharesChild stamp: 'fr 11/9/2020 09:05:05'!
PASSED!

!testRun: #PortfolioTest #test20PortfolioCanNotAddDuplicateAccountIndirectly stamp: 'fr 11/9/2020 09:05:05'!
PASSED!

!testRun: #PortfolioTest #test21AddingShouldBehaveIdenticallyAsCreatingAPortfolioWithAccounts stamp: 'fr 11/9/2020 09:05:05'!
PASSED!

!testRun: #PortfolioTest #test22CreatingAPortfolioWithAccountsShouldFailIdenticallyAsWhenAddingThem stamp: 'fr 11/9/2020 09:05:05'!
PASSED!
!PortfolioTest methodsFor: 'tests - transactions' stamp: 'fr 11/9/2020 09:05:31' prior: 50884478!
test09PortfolioWithASingleAccountExhibitsItsTransactions

	| deposit |
	deposit _ Deposit register: 100 on: account.	
	portfolioWithAccount _ Portfolio with: (OrderedCollection with: account).
	self assert: [portfolioWithAccount transactions = (OrderedCollection with: deposit)]! !

!testRun: #PortfolioTest #test09PortfolioWithASingleAccountExhibitsItsTransactions stamp: 'fr 11/9/2020 09:05:32'!
PASSED!

!testRun: #PortfolioTest #test01EmptyPortfolioHasBalanceZero stamp: 'fr 11/9/2020 09:05:32'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioWithASingleAccountWithNoTransactionsHasBalanceZero stamp: 'fr 11/9/2020 09:05:32'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioWithASingleAccountReflectsItsTransactionsValuesInItsBalance stamp: 'fr 11/9/2020 09:05:32'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithMultipleAccountsAndPortfoliosReflectsTheirTransactionsValuesInItsBalance stamp: 'fr 11/9/2020 09:05:32'!
PASSED!

!testRun: #PortfolioTest #test05EmptyPortfolioHasNotRegisteredAnyTransaction stamp: 'fr 11/9/2020 09:05:32'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioWithASingleAccountRegistersItsTransactions stamp: 'fr 11/9/2020 09:05:32'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioWithMulltipleAccountsAndPortfoliosRegistersAllTheirTransactions stamp: 'fr 11/9/2020 09:05:32'!
PASSED!

!testRun: #PortfolioTest #test08EmptyPortfolioDoesNotExhibitAnyTransaction stamp: 'fr 11/9/2020 09:05:32'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithASingleAccountExhibitsItsTransactions stamp: 'fr 11/9/2020 09:05:32'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioWithMultipleAccountsAndPortfoliosExhibitsAllTheirTransactionsCombined stamp: 'fr 11/9/2020 09:05:32'!
PASSED!

!testRun: #PortfolioTest #test11EmptyPortfolioDoesNotContainAnyAccount stamp: 'fr 11/9/2020 09:05:32'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioContainsAnAccountAfterItIsAdded stamp: 'fr 11/9/2020 09:05:32'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioContainsAnAccountAfterItIsAddedToItselfOrAnyOfItsDecendents stamp: 'fr 11/9/2020 09:05:32'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioDoesNotContainAnythingThatWasNotAddedToItself stamp: 'fr 11/9/2020 09:05:32'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotAddItself stamp: 'fr 11/9/2020 09:05:32'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioCanNotAddItsParent stamp: 'fr 11/9/2020 09:05:32'!
PASSED!

!testRun: #PortfolioTest #test17PortfolioCanNotAddAnyAncestor stamp: 'fr 11/9/2020 09:05:32'!
PASSED!

!testRun: #PortfolioTest #test18PortfolioCanNotAddAnyPreviousMemberOfTheTree stamp: 'fr 11/9/2020 09:05:32'!
PASSED!

!testRun: #PortfolioTest #test19PortfolioCanNotAddAnotherOneWhichSharesChild stamp: 'fr 11/9/2020 09:05:32'!
PASSED!

!testRun: #PortfolioTest #test20PortfolioCanNotAddDuplicateAccountIndirectly stamp: 'fr 11/9/2020 09:05:32'!
PASSED!

!testRun: #PortfolioTest #test21AddingShouldBehaveIdenticallyAsCreatingAPortfolioWithAccounts stamp: 'fr 11/9/2020 09:05:32'!
PASSED!

!testRun: #PortfolioTest #test22CreatingAPortfolioWithAccountsShouldFailIdenticallyAsWhenAddingThem stamp: 'fr 11/9/2020 09:05:32'!
PASSED!
!PortfolioTest methodsFor: 'tests - transactions' stamp: 'fr 11/9/2020 09:05:53' prior: 50884558!
test10PortfolioWithMultipleAccountsAndPortfoliosExhibitsAllTheirTransactionsCombined

	| portfolio anotherAccount anotherDeposit deposit |
	anotherAccount _ ReceptiveAccount new.
	
	deposit _ Deposit register: 100 on: account. 
	anotherDeposit _ Deposit register: 50 on: anotherAccount.
	 
	portfolioWithAccount _ Portfolio with: (OrderedCollection with: account).
	portfolio _ Portfolio with: (OrderedCollection with: anotherAccount with: portfolioWithAccount).
	self assert: [portfolio transactions = (OrderedCollection with: anotherDeposit with: deposit	)]! !
!PortfolioTest methodsFor: 'tests - transactions' stamp: 'fr 11/9/2020 09:06:01' prior: 50885424!
test10PortfolioWithMultipleAccountsAndPortfoliosExhibitsAllTheirTransactionsCombined

	| anotherPortfolio anotherAccount anotherDeposit deposit |
	anotherAccount _ ReceptiveAccount new.
	
	deposit _ Deposit register: 100 on: account. 
	anotherDeposit _ Deposit register: 50 on: anotherAccount.
	 
	portfolioWithAccount _ Portfolio with: (OrderedCollection with: account).
	anotherPortfolio _ Portfolio with: (OrderedCollection with: anotherAccount with: portfolioWithAccount).
	self assert: [anotherPortfolio transactions = (OrderedCollection with: anotherDeposit with: deposit	)]! !

!testRun: #PortfolioTest #test10PortfolioWithMultipleAccountsAndPortfoliosExhibitsAllTheirTransactionsCombined stamp: 'fr 11/9/2020 09:06:04'!
PASSED!

!testRun: #PortfolioTest #test01EmptyPortfolioHasBalanceZero stamp: 'fr 11/9/2020 09:06:04'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioWithASingleAccountWithNoTransactionsHasBalanceZero stamp: 'fr 11/9/2020 09:06:04'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioWithASingleAccountReflectsItsTransactionsValuesInItsBalance stamp: 'fr 11/9/2020 09:06:04'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithMultipleAccountsAndPortfoliosReflectsTheirTransactionsValuesInItsBalance stamp: 'fr 11/9/2020 09:06:04'!
PASSED!

!testRun: #PortfolioTest #test05EmptyPortfolioHasNotRegisteredAnyTransaction stamp: 'fr 11/9/2020 09:06:04'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioWithASingleAccountRegistersItsTransactions stamp: 'fr 11/9/2020 09:06:04'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioWithMulltipleAccountsAndPortfoliosRegistersAllTheirTransactions stamp: 'fr 11/9/2020 09:06:04'!
PASSED!

!testRun: #PortfolioTest #test08EmptyPortfolioDoesNotExhibitAnyTransaction stamp: 'fr 11/9/2020 09:06:04'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithASingleAccountExhibitsItsTransactions stamp: 'fr 11/9/2020 09:06:04'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioWithMultipleAccountsAndPortfoliosExhibitsAllTheirTransactionsCombined stamp: 'fr 11/9/2020 09:06:04'!
PASSED!

!testRun: #PortfolioTest #test11EmptyPortfolioDoesNotContainAnyAccount stamp: 'fr 11/9/2020 09:06:04'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioContainsAnAccountAfterItIsAdded stamp: 'fr 11/9/2020 09:06:04'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioContainsAnAccountAfterItIsAddedToItselfOrAnyOfItsDecendents stamp: 'fr 11/9/2020 09:06:04'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioDoesNotContainAnythingThatWasNotAddedToItself stamp: 'fr 11/9/2020 09:06:04'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotAddItself stamp: 'fr 11/9/2020 09:06:04'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioCanNotAddItsParent stamp: 'fr 11/9/2020 09:06:04'!
PASSED!

!testRun: #PortfolioTest #test17PortfolioCanNotAddAnyAncestor stamp: 'fr 11/9/2020 09:06:04'!
PASSED!

!testRun: #PortfolioTest #test18PortfolioCanNotAddAnyPreviousMemberOfTheTree stamp: 'fr 11/9/2020 09:06:04'!
PASSED!

!testRun: #PortfolioTest #test19PortfolioCanNotAddAnotherOneWhichSharesChild stamp: 'fr 11/9/2020 09:06:04'!
PASSED!

!testRun: #PortfolioTest #test20PortfolioCanNotAddDuplicateAccountIndirectly stamp: 'fr 11/9/2020 09:06:04'!
PASSED!

!testRun: #PortfolioTest #test21AddingShouldBehaveIdenticallyAsCreatingAPortfolioWithAccounts stamp: 'fr 11/9/2020 09:06:04'!
PASSED!

!testRun: #PortfolioTest #test22CreatingAPortfolioWithAccountsShouldFailIdenticallyAsWhenAddingThem stamp: 'fr 11/9/2020 09:06:04'!
PASSED!
!PortfolioTest methodsFor: 'tests - balance' stamp: 'fr 11/9/2020 09:06:36' prior: 50884670!
test02PortfolioWithASingleAccountWithNoTransactionsHasBalanceZero

	self assert: [portfolioWithAccount balance = 0]! !
!PortfolioTest methodsFor: 'setup' stamp: 'fr 11/9/2020 09:06:45' prior: 50884472 overrides: 16927572!
setUp

	emptyPortfolio _ Portfolio new. 

	account _ ReceptiveAccount new.
	
	portfolioWithAccount _ Portfolio with: (OrderedCollection with: account).

! !
!PortfolioTest methodsFor: 'tests - balance' stamp: 'fr 11/9/2020 09:06:52' prior: 50884679!
test03PortfolioWithASingleAccountReflectsItsTransactionsValuesInItsBalance

	Deposit register: 100 on: account. 
	self assert: [portfolioWithAccount balance = 100]! !

!testRun: #PortfolioTest #test03PortfolioWithASingleAccountReflectsItsTransactionsValuesInItsBalance stamp: 'fr 11/9/2020 09:06:53'!
PASSED!

!testRun: #PortfolioTest #test01EmptyPortfolioHasBalanceZero stamp: 'fr 11/9/2020 09:06:53'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioWithASingleAccountWithNoTransactionsHasBalanceZero stamp: 'fr 11/9/2020 09:06:53'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioWithASingleAccountReflectsItsTransactionsValuesInItsBalance stamp: 'fr 11/9/2020 09:06:53'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithMultipleAccountsAndPortfoliosReflectsTheirTransactionsValuesInItsBalance stamp: 'fr 11/9/2020 09:06:53'!
PASSED!

!testRun: #PortfolioTest #test05EmptyPortfolioHasNotRegisteredAnyTransaction stamp: 'fr 11/9/2020 09:06:53'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioWithASingleAccountRegistersItsTransactions stamp: 'fr 11/9/2020 09:06:53'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioWithMulltipleAccountsAndPortfoliosRegistersAllTheirTransactions stamp: 'fr 11/9/2020 09:06:53'!
PASSED!

!testRun: #PortfolioTest #test08EmptyPortfolioDoesNotExhibitAnyTransaction stamp: 'fr 11/9/2020 09:06:53'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithASingleAccountExhibitsItsTransactions stamp: 'fr 11/9/2020 09:06:53'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioWithMultipleAccountsAndPortfoliosExhibitsAllTheirTransactionsCombined stamp: 'fr 11/9/2020 09:06:53'!
PASSED!

!testRun: #PortfolioTest #test11EmptyPortfolioDoesNotContainAnyAccount stamp: 'fr 11/9/2020 09:06:53'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioContainsAnAccountAfterItIsAdded stamp: 'fr 11/9/2020 09:06:53'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioContainsAnAccountAfterItIsAddedToItselfOrAnyOfItsDecendents stamp: 'fr 11/9/2020 09:06:53'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioDoesNotContainAnythingThatWasNotAddedToItself stamp: 'fr 11/9/2020 09:06:53'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotAddItself stamp: 'fr 11/9/2020 09:06:53'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioCanNotAddItsParent stamp: 'fr 11/9/2020 09:06:53'!
PASSED!

!testRun: #PortfolioTest #test17PortfolioCanNotAddAnyAncestor stamp: 'fr 11/9/2020 09:06:53'!
PASSED!

!testRun: #PortfolioTest #test18PortfolioCanNotAddAnyPreviousMemberOfTheTree stamp: 'fr 11/9/2020 09:06:53'!
PASSED!

!testRun: #PortfolioTest #test19PortfolioCanNotAddAnotherOneWhichSharesChild stamp: 'fr 11/9/2020 09:06:53'!
PASSED!

!testRun: #PortfolioTest #test20PortfolioCanNotAddDuplicateAccountIndirectly stamp: 'fr 11/9/2020 09:06:53'!
PASSED!

!testRun: #PortfolioTest #test21AddingShouldBehaveIdenticallyAsCreatingAPortfolioWithAccounts stamp: 'fr 11/9/2020 09:06:53'!
PASSED!

!testRun: #PortfolioTest #test22CreatingAPortfolioWithAccountsShouldFailIdenticallyAsWhenAddingThem stamp: 'fr 11/9/2020 09:06:53'!
PASSED!
!PortfolioTest methodsFor: 'tests - balance' stamp: 'fr 11/9/2020 09:06:58' prior: 50884780!
test04PortfolioWithMultipleAccountsAndPortfoliosReflectsTheirTransactionsValuesInItsBalance

	| anotherPortfolio anotherAccount |
	anotherAccount _ ReceptiveAccount new.
	
	Deposit register: 100 on: account. 
	Deposit register: 50 on: anotherAccount.
	 
	anotherPortfolio _ Portfolio with: (OrderedCollection with: anotherAccount with: portfolioWithAccount).
	self assert: [anotherPortfolio balance = 150]! !

!testRun: #PortfolioTest #test04PortfolioWithMultipleAccountsAndPortfoliosReflectsTheirTransactionsValuesInItsBalance stamp: 'fr 11/9/2020 09:06:59'!
PASSED!

!testRun: #PortfolioTest #test01EmptyPortfolioHasBalanceZero stamp: 'fr 11/9/2020 09:06:59'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioWithASingleAccountWithNoTransactionsHasBalanceZero stamp: 'fr 11/9/2020 09:06:59'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioWithASingleAccountReflectsItsTransactionsValuesInItsBalance stamp: 'fr 11/9/2020 09:06:59'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithMultipleAccountsAndPortfoliosReflectsTheirTransactionsValuesInItsBalance stamp: 'fr 11/9/2020 09:06:59'!
PASSED!

!testRun: #PortfolioTest #test05EmptyPortfolioHasNotRegisteredAnyTransaction stamp: 'fr 11/9/2020 09:06:59'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioWithASingleAccountRegistersItsTransactions stamp: 'fr 11/9/2020 09:06:59'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioWithMulltipleAccountsAndPortfoliosRegistersAllTheirTransactions stamp: 'fr 11/9/2020 09:06:59'!
PASSED!

!testRun: #PortfolioTest #test08EmptyPortfolioDoesNotExhibitAnyTransaction stamp: 'fr 11/9/2020 09:06:59'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithASingleAccountExhibitsItsTransactions stamp: 'fr 11/9/2020 09:06:59'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioWithMultipleAccountsAndPortfoliosExhibitsAllTheirTransactionsCombined stamp: 'fr 11/9/2020 09:06:59'!
PASSED!

!testRun: #PortfolioTest #test11EmptyPortfolioDoesNotContainAnyAccount stamp: 'fr 11/9/2020 09:06:59'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioContainsAnAccountAfterItIsAdded stamp: 'fr 11/9/2020 09:06:59'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioContainsAnAccountAfterItIsAddedToItselfOrAnyOfItsDecendents stamp: 'fr 11/9/2020 09:06:59'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioDoesNotContainAnythingThatWasNotAddedToItself stamp: 'fr 11/9/2020 09:06:59'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotAddItself stamp: 'fr 11/9/2020 09:06:59'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioCanNotAddItsParent stamp: 'fr 11/9/2020 09:06:59'!
PASSED!

!testRun: #PortfolioTest #test17PortfolioCanNotAddAnyAncestor stamp: 'fr 11/9/2020 09:06:59'!
PASSED!

!testRun: #PortfolioTest #test18PortfolioCanNotAddAnyPreviousMemberOfTheTree stamp: 'fr 11/9/2020 09:06:59'!
PASSED!

!testRun: #PortfolioTest #test19PortfolioCanNotAddAnotherOneWhichSharesChild stamp: 'fr 11/9/2020 09:06:59'!
PASSED!

!testRun: #PortfolioTest #test20PortfolioCanNotAddDuplicateAccountIndirectly stamp: 'fr 11/9/2020 09:06:59'!
PASSED!

!testRun: #PortfolioTest #test21AddingShouldBehaveIdenticallyAsCreatingAPortfolioWithAccounts stamp: 'fr 11/9/2020 09:06:59'!
PASSED!

!testRun: #PortfolioTest #test22CreatingAPortfolioWithAccountsShouldFailIdenticallyAsWhenAddingThem stamp: 'fr 11/9/2020 09:06:59'!
PASSED!
!PortfolioTest methodsFor: 'tests - hasRegistered' stamp: 'fr 11/9/2020 09:07:05' prior: 50884889!
test06PortfolioWithASingleAccountRegistersItsTransactions

	| deposit |
	deposit _ Deposit register: 100 on: account.	
	self assert: [portfolioWithAccount hasRegistered: deposit]! !
!PortfolioTest methodsFor: 'tests - hasRegistered' stamp: 'fr 11/9/2020 09:07:10' prior: 50885210!
test07PortfolioWithMulltipleAccountsAndPortfoliosRegistersAllTheirTransactions

	| anotherPortfolio anotherAccount anotherDeposit deposit |
	anotherAccount _ ReceptiveAccount new.
	
	deposit _ Deposit register: 100 on: account. 
	anotherDeposit _ Deposit register: 50 on: anotherAccount.
	 
	anotherPortfolio _ Portfolio with: (OrderedCollection with: anotherAccount with: portfolioWithAccount).
	self assert: [
		(anotherPortfolio hasRegistered: deposit) and: 
		[anotherPortfolio hasRegistered: anotherDeposit]
	]! !

!testRun: #PortfolioTest #test07PortfolioWithMulltipleAccountsAndPortfoliosRegistersAllTheirTransactions stamp: 'fr 11/9/2020 09:07:11'!
PASSED!

!testRun: #PortfolioTest #test01EmptyPortfolioHasBalanceZero stamp: 'fr 11/9/2020 09:07:11'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioWithASingleAccountWithNoTransactionsHasBalanceZero stamp: 'fr 11/9/2020 09:07:11'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioWithASingleAccountReflectsItsTransactionsValuesInItsBalance stamp: 'fr 11/9/2020 09:07:11'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithMultipleAccountsAndPortfoliosReflectsTheirTransactionsValuesInItsBalance stamp: 'fr 11/9/2020 09:07:11'!
PASSED!

!testRun: #PortfolioTest #test05EmptyPortfolioHasNotRegisteredAnyTransaction stamp: 'fr 11/9/2020 09:07:11'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioWithASingleAccountRegistersItsTransactions stamp: 'fr 11/9/2020 09:07:11'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioWithMulltipleAccountsAndPortfoliosRegistersAllTheirTransactions stamp: 'fr 11/9/2020 09:07:11'!
PASSED!

!testRun: #PortfolioTest #test08EmptyPortfolioDoesNotExhibitAnyTransaction stamp: 'fr 11/9/2020 09:07:11'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithASingleAccountExhibitsItsTransactions stamp: 'fr 11/9/2020 09:07:11'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioWithMultipleAccountsAndPortfoliosExhibitsAllTheirTransactionsCombined stamp: 'fr 11/9/2020 09:07:11'!
PASSED!

!testRun: #PortfolioTest #test11EmptyPortfolioDoesNotContainAnyAccount stamp: 'fr 11/9/2020 09:07:11'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioContainsAnAccountAfterItIsAdded stamp: 'fr 11/9/2020 09:07:11'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioContainsAnAccountAfterItIsAddedToItselfOrAnyOfItsDecendents stamp: 'fr 11/9/2020 09:07:11'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioDoesNotContainAnythingThatWasNotAddedToItself stamp: 'fr 11/9/2020 09:07:11'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotAddItself stamp: 'fr 11/9/2020 09:07:11'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioCanNotAddItsParent stamp: 'fr 11/9/2020 09:07:11'!
PASSED!

!testRun: #PortfolioTest #test17PortfolioCanNotAddAnyAncestor stamp: 'fr 11/9/2020 09:07:11'!
PASSED!

!testRun: #PortfolioTest #test18PortfolioCanNotAddAnyPreviousMemberOfTheTree stamp: 'fr 11/9/2020 09:07:11'!
PASSED!

!testRun: #PortfolioTest #test19PortfolioCanNotAddAnotherOneWhichSharesChild stamp: 'fr 11/9/2020 09:07:11'!
PASSED!

!testRun: #PortfolioTest #test20PortfolioCanNotAddDuplicateAccountIndirectly stamp: 'fr 11/9/2020 09:07:11'!
PASSED!

!testRun: #PortfolioTest #test21AddingShouldBehaveIdenticallyAsCreatingAPortfolioWithAccounts stamp: 'fr 11/9/2020 09:07:11'!
PASSED!

!testRun: #PortfolioTest #test22CreatingAPortfolioWithAccountsShouldFailIdenticallyAsWhenAddingThem stamp: 'fr 11/9/2020 09:07:11'!
PASSED!
!PortfolioTest methodsFor: 'tests - transactions' stamp: 'fr 11/9/2020 09:07:17' prior: 50885322!
test09PortfolioWithASingleAccountExhibitsItsTransactions

	| deposit |
	deposit _ Deposit register: 100 on: account.	
	self assert: [portfolioWithAccount transactions = (OrderedCollection with: deposit)]! !

!testRun: #PortfolioTest #test09PortfolioWithASingleAccountExhibitsItsTransactions stamp: 'fr 11/9/2020 09:07:18'!
PASSED!

!testRun: #PortfolioTest #test01EmptyPortfolioHasBalanceZero stamp: 'fr 11/9/2020 09:07:18'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioWithASingleAccountWithNoTransactionsHasBalanceZero stamp: 'fr 11/9/2020 09:07:18'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioWithASingleAccountReflectsItsTransactionsValuesInItsBalance stamp: 'fr 11/9/2020 09:07:18'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithMultipleAccountsAndPortfoliosReflectsTheirTransactionsValuesInItsBalance stamp: 'fr 11/9/2020 09:07:18'!
PASSED!

!testRun: #PortfolioTest #test05EmptyPortfolioHasNotRegisteredAnyTransaction stamp: 'fr 11/9/2020 09:07:18'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioWithASingleAccountRegistersItsTransactions stamp: 'fr 11/9/2020 09:07:18'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioWithMulltipleAccountsAndPortfoliosRegistersAllTheirTransactions stamp: 'fr 11/9/2020 09:07:18'!
PASSED!

!testRun: #PortfolioTest #test08EmptyPortfolioDoesNotExhibitAnyTransaction stamp: 'fr 11/9/2020 09:07:18'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithASingleAccountExhibitsItsTransactions stamp: 'fr 11/9/2020 09:07:18'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioWithMultipleAccountsAndPortfoliosExhibitsAllTheirTransactionsCombined stamp: 'fr 11/9/2020 09:07:18'!
PASSED!

!testRun: #PortfolioTest #test11EmptyPortfolioDoesNotContainAnyAccount stamp: 'fr 11/9/2020 09:07:18'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioContainsAnAccountAfterItIsAdded stamp: 'fr 11/9/2020 09:07:18'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioContainsAnAccountAfterItIsAddedToItselfOrAnyOfItsDecendents stamp: 'fr 11/9/2020 09:07:18'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioDoesNotContainAnythingThatWasNotAddedToItself stamp: 'fr 11/9/2020 09:07:18'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotAddItself stamp: 'fr 11/9/2020 09:07:18'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioCanNotAddItsParent stamp: 'fr 11/9/2020 09:07:18'!
PASSED!

!testRun: #PortfolioTest #test17PortfolioCanNotAddAnyAncestor stamp: 'fr 11/9/2020 09:07:18'!
PASSED!

!testRun: #PortfolioTest #test18PortfolioCanNotAddAnyPreviousMemberOfTheTree stamp: 'fr 11/9/2020 09:07:18'!
PASSED!

!testRun: #PortfolioTest #test19PortfolioCanNotAddAnotherOneWhichSharesChild stamp: 'fr 11/9/2020 09:07:18'!
PASSED!

!testRun: #PortfolioTest #test20PortfolioCanNotAddDuplicateAccountIndirectly stamp: 'fr 11/9/2020 09:07:18'!
PASSED!

!testRun: #PortfolioTest #test21AddingShouldBehaveIdenticallyAsCreatingAPortfolioWithAccounts stamp: 'fr 11/9/2020 09:07:18'!
PASSED!

!testRun: #PortfolioTest #test22CreatingAPortfolioWithAccountsShouldFailIdenticallyAsWhenAddingThem stamp: 'fr 11/9/2020 09:07:18'!
PASSED!
!PortfolioTest methodsFor: 'tests - transactions' stamp: 'fr 11/9/2020 09:07:22' prior: 50885445!
test10PortfolioWithMultipleAccountsAndPortfoliosExhibitsAllTheirTransactionsCombined

	| anotherPortfolio anotherAccount anotherDeposit deposit |
	anotherAccount _ ReceptiveAccount new.
	
	deposit _ Deposit register: 100 on: account. 
	anotherDeposit _ Deposit register: 50 on: anotherAccount.
	 
	anotherPortfolio _ Portfolio with: (OrderedCollection with: anotherAccount with: portfolioWithAccount).
	self assert: [anotherPortfolio transactions = (OrderedCollection with: anotherDeposit with: deposit	)]! !

!testRun: #PortfolioTest #test10PortfolioWithMultipleAccountsAndPortfoliosExhibitsAllTheirTransactionsCombined stamp: 'fr 11/9/2020 09:07:23'!
PASSED!

!testRun: #PortfolioTest #test01EmptyPortfolioHasBalanceZero stamp: 'fr 11/9/2020 09:07:23'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioWithASingleAccountWithNoTransactionsHasBalanceZero stamp: 'fr 11/9/2020 09:07:23'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioWithASingleAccountReflectsItsTransactionsValuesInItsBalance stamp: 'fr 11/9/2020 09:07:23'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithMultipleAccountsAndPortfoliosReflectsTheirTransactionsValuesInItsBalance stamp: 'fr 11/9/2020 09:07:23'!
PASSED!

!testRun: #PortfolioTest #test05EmptyPortfolioHasNotRegisteredAnyTransaction stamp: 'fr 11/9/2020 09:07:23'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioWithASingleAccountRegistersItsTransactions stamp: 'fr 11/9/2020 09:07:23'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioWithMulltipleAccountsAndPortfoliosRegistersAllTheirTransactions stamp: 'fr 11/9/2020 09:07:23'!
PASSED!

!testRun: #PortfolioTest #test08EmptyPortfolioDoesNotExhibitAnyTransaction stamp: 'fr 11/9/2020 09:07:23'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithASingleAccountExhibitsItsTransactions stamp: 'fr 11/9/2020 09:07:23'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioWithMultipleAccountsAndPortfoliosExhibitsAllTheirTransactionsCombined stamp: 'fr 11/9/2020 09:07:23'!
PASSED!

!testRun: #PortfolioTest #test11EmptyPortfolioDoesNotContainAnyAccount stamp: 'fr 11/9/2020 09:07:23'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioContainsAnAccountAfterItIsAdded stamp: 'fr 11/9/2020 09:07:23'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioContainsAnAccountAfterItIsAddedToItselfOrAnyOfItsDecendents stamp: 'fr 11/9/2020 09:07:23'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioDoesNotContainAnythingThatWasNotAddedToItself stamp: 'fr 11/9/2020 09:07:23'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotAddItself stamp: 'fr 11/9/2020 09:07:23'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioCanNotAddItsParent stamp: 'fr 11/9/2020 09:07:23'!
PASSED!

!testRun: #PortfolioTest #test17PortfolioCanNotAddAnyAncestor stamp: 'fr 11/9/2020 09:07:23'!
PASSED!

!testRun: #PortfolioTest #test18PortfolioCanNotAddAnyPreviousMemberOfTheTree stamp: 'fr 11/9/2020 09:07:23'!
PASSED!

!testRun: #PortfolioTest #test19PortfolioCanNotAddAnotherOneWhichSharesChild stamp: 'fr 11/9/2020 09:07:23'!
PASSED!

!testRun: #PortfolioTest #test20PortfolioCanNotAddDuplicateAccountIndirectly stamp: 'fr 11/9/2020 09:07:23'!
PASSED!

!testRun: #PortfolioTest #test21AddingShouldBehaveIdenticallyAsCreatingAPortfolioWithAccounts stamp: 'fr 11/9/2020 09:07:23'!
PASSED!

!testRun: #PortfolioTest #test22CreatingAPortfolioWithAccountsShouldFailIdenticallyAsWhenAddingThem stamp: 'fr 11/9/2020 09:07:23'!
PASSED!

!testRun: #PortfolioTest #test11EmptyPortfolioDoesNotContainAnyAccount stamp: 'fr 11/9/2020 09:07:51'!
PASSED!

!testRun: #PortfolioTest #test11EmptyPortfolioDoesNotContainAnyAccount stamp: 'fr 11/9/2020 09:07:53'!
PASSED!

!testRun: #PortfolioTest #test01EmptyPortfolioHasBalanceZero stamp: 'fr 11/9/2020 09:07:53'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioWithASingleAccountWithNoTransactionsHasBalanceZero stamp: 'fr 11/9/2020 09:07:53'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioWithASingleAccountReflectsItsTransactionsValuesInItsBalance stamp: 'fr 11/9/2020 09:07:53'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithMultipleAccountsAndPortfoliosReflectsTheirTransactionsValuesInItsBalance stamp: 'fr 11/9/2020 09:07:53'!
PASSED!

!testRun: #PortfolioTest #test05EmptyPortfolioHasNotRegisteredAnyTransaction stamp: 'fr 11/9/2020 09:07:53'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioWithASingleAccountRegistersItsTransactions stamp: 'fr 11/9/2020 09:07:53'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioWithMulltipleAccountsAndPortfoliosRegistersAllTheirTransactions stamp: 'fr 11/9/2020 09:07:53'!
PASSED!

!testRun: #PortfolioTest #test08EmptyPortfolioDoesNotExhibitAnyTransaction stamp: 'fr 11/9/2020 09:07:53'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithASingleAccountExhibitsItsTransactions stamp: 'fr 11/9/2020 09:07:53'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioWithMultipleAccountsAndPortfoliosExhibitsAllTheirTransactionsCombined stamp: 'fr 11/9/2020 09:07:53'!
PASSED!

!testRun: #PortfolioTest #test11EmptyPortfolioDoesNotContainAnyAccount stamp: 'fr 11/9/2020 09:07:53'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioContainsAnAccountAfterItIsAdded stamp: 'fr 11/9/2020 09:07:53'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioContainsAnAccountAfterItIsAddedToItselfOrAnyOfItsDecendents stamp: 'fr 11/9/2020 09:07:53'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioDoesNotContainAnythingThatWasNotAddedToItself stamp: 'fr 11/9/2020 09:07:53'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotAddItself stamp: 'fr 11/9/2020 09:07:53'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioCanNotAddItsParent stamp: 'fr 11/9/2020 09:07:53'!
PASSED!

!testRun: #PortfolioTest #test17PortfolioCanNotAddAnyAncestor stamp: 'fr 11/9/2020 09:07:53'!
PASSED!

!testRun: #PortfolioTest #test18PortfolioCanNotAddAnyPreviousMemberOfTheTree stamp: 'fr 11/9/2020 09:07:53'!
PASSED!

!testRun: #PortfolioTest #test19PortfolioCanNotAddAnotherOneWhichSharesChild stamp: 'fr 11/9/2020 09:07:53'!
PASSED!

!testRun: #PortfolioTest #test20PortfolioCanNotAddDuplicateAccountIndirectly stamp: 'fr 11/9/2020 09:07:53'!
PASSED!

!testRun: #PortfolioTest #test21AddingShouldBehaveIdenticallyAsCreatingAPortfolioWithAccounts stamp: 'fr 11/9/2020 09:07:53'!
PASSED!

!testRun: #PortfolioTest #test22CreatingAPortfolioWithAccountsShouldFailIdenticallyAsWhenAddingThem stamp: 'fr 11/9/2020 09:07:53'!
PASSED!
!PortfolioTest methodsFor: 'tests - add' stamp: 'fr 11/9/2020 09:13:58'!
test13PortfolioContainsAnAccountAfterItIsAddedToAnyOfItsDecendents

	| anotherPortfolio |
	anotherPortfolio _ Portfolio with: (OrderedCollection with: emptyPortfolio).
	emptyPortfolio add: account.
	self assert: [anotherPortfolio contains: account]! !

!methodRemoval: PortfolioTest #test13PortfolioContainsAnAccountAfterItIsAddedToItselfOrAnyOfItsDecendents stamp: 'fr 11/9/2020 09:13:58'!
test13PortfolioContainsAnAccountAfterItIsAddedToItselfOrAnyOfItsDecendents

	| anotherPortfolio |
	anotherPortfolio _ Portfolio with: (OrderedCollection with: emptyPortfolio).
	emptyPortfolio add: account.
	self assert: [anotherPortfolio contains: account]!
!PortfolioTest methodsFor: 'tests - balance' stamp: 'fr 11/9/2020 09:14:33' prior: 50885671!
test04PortfolioWithMultipleAccountsAndPortfoliosReflectsTheirTransactionsValuesInItsBalance

	| anotherPortfolio anotherAccount1 |
	anotherAccount1 _ ReceptiveAccount new.
	
	Deposit register: 100 on: account. 
	Deposit register: 50 on: anotherAccount1.
	 
	anotherPortfolio _ Portfolio with: (OrderedCollection with: anotherAccount1 with: portfolioWithAccount).
	self assert: [anotherPortfolio balance = 150]! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'fr 11/9/2020 09:14:35' prior: 50886223!
test04PortfolioWithMultipleAccountsAndPortfoliosReflectsTheirTransactionsValuesInItsBalance

	| anotherPortfolio  |
	anotherAccount1 _ ReceptiveAccount new.
	
	Deposit register: 100 on: account. 
	Deposit register: 50 on: anotherAccount1.
	 
	anotherPortfolio _ Portfolio with: (OrderedCollection with: anotherAccount1 with: portfolioWithAccount).
	self assert: [anotherPortfolio balance = 150]! !

!classDefinition: #PortfolioTest category: 'Portfolio-Ejercicio' stamp: 'fr 11/9/2020 09:14:35'!
TestCase subclass: #PortfolioTest
	instanceVariableNames: 'emptyPortfolio account portfolioWithAccount anotherAccount1'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!
!PortfolioTest methodsFor: 'tests - hasRegistered' stamp: 'fr 11/9/2020 09:15:00' prior: 50885787!
test07PortfolioWithMulltipleAccountsAndPortfoliosRegistersAllTheirTransactions

	| anotherPortfolio anotherDeposit deposit |
	anotherAccount1 _ ReceptiveAccount new.
	
	deposit _ Deposit register: 100 on: account. 
	anotherDeposit _ Deposit register: 50 on: anotherAccount1.
	 
	anotherPortfolio _ Portfolio with: (OrderedCollection with: anotherAccount1 with: portfolioWithAccount).
	self assert: [
		(anotherPortfolio hasRegistered: deposit) and: 
		[anotherPortfolio hasRegistered: anotherDeposit]
	]! !

!testRun: #PortfolioTest #test07PortfolioWithMulltipleAccountsAndPortfoliosRegistersAllTheirTransactions stamp: 'fr 11/9/2020 09:15:01'!
PASSED!

!testRun: #PortfolioTest #test01EmptyPortfolioHasBalanceZero stamp: 'fr 11/9/2020 09:15:01'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioWithASingleAccountWithNoTransactionsHasBalanceZero stamp: 'fr 11/9/2020 09:15:01'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioWithASingleAccountReflectsItsTransactionsValuesInItsBalance stamp: 'fr 11/9/2020 09:15:01'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithMultipleAccountsAndPortfoliosReflectsTheirTransactionsValuesInItsBalance stamp: 'fr 11/9/2020 09:15:01'!
PASSED!

!testRun: #PortfolioTest #test05EmptyPortfolioHasNotRegisteredAnyTransaction stamp: 'fr 11/9/2020 09:15:01'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioWithASingleAccountRegistersItsTransactions stamp: 'fr 11/9/2020 09:15:01'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioWithMulltipleAccountsAndPortfoliosRegistersAllTheirTransactions stamp: 'fr 11/9/2020 09:15:01'!
PASSED!

!testRun: #PortfolioTest #test08EmptyPortfolioDoesNotExhibitAnyTransaction stamp: 'fr 11/9/2020 09:15:01'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithASingleAccountExhibitsItsTransactions stamp: 'fr 11/9/2020 09:15:01'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioWithMultipleAccountsAndPortfoliosExhibitsAllTheirTransactionsCombined stamp: 'fr 11/9/2020 09:15:01'!
PASSED!

!testRun: #PortfolioTest #test11EmptyPortfolioDoesNotContainAnyAccount stamp: 'fr 11/9/2020 09:15:01'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioContainsAnAccountAfterItIsAdded stamp: 'fr 11/9/2020 09:15:01'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioContainsAnAccountAfterItIsAddedToAnyOfItsDecendents stamp: 'fr 11/9/2020 09:15:01'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioDoesNotContainAnythingThatWasNotAddedToItself stamp: 'fr 11/9/2020 09:15:01'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotAddItself stamp: 'fr 11/9/2020 09:15:01'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioCanNotAddItsParent stamp: 'fr 11/9/2020 09:15:01'!
PASSED!

!testRun: #PortfolioTest #test17PortfolioCanNotAddAnyAncestor stamp: 'fr 11/9/2020 09:15:01'!
PASSED!

!testRun: #PortfolioTest #test18PortfolioCanNotAddAnyPreviousMemberOfTheTree stamp: 'fr 11/9/2020 09:15:01'!
PASSED!

!testRun: #PortfolioTest #test19PortfolioCanNotAddAnotherOneWhichSharesChild stamp: 'fr 11/9/2020 09:15:01'!
PASSED!

!testRun: #PortfolioTest #test20PortfolioCanNotAddDuplicateAccountIndirectly stamp: 'fr 11/9/2020 09:15:01'!
PASSED!

!testRun: #PortfolioTest #test21AddingShouldBehaveIdenticallyAsCreatingAPortfolioWithAccounts stamp: 'fr 11/9/2020 09:15:01'!
PASSED!

!testRun: #PortfolioTest #test22CreatingAPortfolioWithAccountsShouldFailIdenticallyAsWhenAddingThem stamp: 'fr 11/9/2020 09:15:01'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioWithMulltipleAccountsAndPortfoliosRegistersAllTheirTransactions stamp: 'fr 11/9/2020 09:15:02'!
PASSED!

!testRun: #PortfolioTest #test01EmptyPortfolioHasBalanceZero stamp: 'fr 11/9/2020 09:15:02'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioWithASingleAccountWithNoTransactionsHasBalanceZero stamp: 'fr 11/9/2020 09:15:02'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioWithASingleAccountReflectsItsTransactionsValuesInItsBalance stamp: 'fr 11/9/2020 09:15:02'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithMultipleAccountsAndPortfoliosReflectsTheirTransactionsValuesInItsBalance stamp: 'fr 11/9/2020 09:15:02'!
PASSED!

!testRun: #PortfolioTest #test05EmptyPortfolioHasNotRegisteredAnyTransaction stamp: 'fr 11/9/2020 09:15:02'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioWithASingleAccountRegistersItsTransactions stamp: 'fr 11/9/2020 09:15:02'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioWithMulltipleAccountsAndPortfoliosRegistersAllTheirTransactions stamp: 'fr 11/9/2020 09:15:02'!
PASSED!

!testRun: #PortfolioTest #test08EmptyPortfolioDoesNotExhibitAnyTransaction stamp: 'fr 11/9/2020 09:15:02'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithASingleAccountExhibitsItsTransactions stamp: 'fr 11/9/2020 09:15:02'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioWithMultipleAccountsAndPortfoliosExhibitsAllTheirTransactionsCombined stamp: 'fr 11/9/2020 09:15:02'!
PASSED!

!testRun: #PortfolioTest #test11EmptyPortfolioDoesNotContainAnyAccount stamp: 'fr 11/9/2020 09:15:02'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioContainsAnAccountAfterItIsAdded stamp: 'fr 11/9/2020 09:15:02'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioContainsAnAccountAfterItIsAddedToAnyOfItsDecendents stamp: 'fr 11/9/2020 09:15:02'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioDoesNotContainAnythingThatWasNotAddedToItself stamp: 'fr 11/9/2020 09:15:02'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotAddItself stamp: 'fr 11/9/2020 09:15:02'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioCanNotAddItsParent stamp: 'fr 11/9/2020 09:15:02'!
PASSED!

!testRun: #PortfolioTest #test17PortfolioCanNotAddAnyAncestor stamp: 'fr 11/9/2020 09:15:02'!
PASSED!

!testRun: #PortfolioTest #test18PortfolioCanNotAddAnyPreviousMemberOfTheTree stamp: 'fr 11/9/2020 09:15:02'!
PASSED!

!testRun: #PortfolioTest #test19PortfolioCanNotAddAnotherOneWhichSharesChild stamp: 'fr 11/9/2020 09:15:02'!
PASSED!

!testRun: #PortfolioTest #test20PortfolioCanNotAddDuplicateAccountIndirectly stamp: 'fr 11/9/2020 09:15:02'!
PASSED!

!testRun: #PortfolioTest #test21AddingShouldBehaveIdenticallyAsCreatingAPortfolioWithAccounts stamp: 'fr 11/9/2020 09:15:02'!
PASSED!

!testRun: #PortfolioTest #test22CreatingAPortfolioWithAccountsShouldFailIdenticallyAsWhenAddingThem stamp: 'fr 11/9/2020 09:15:02'!
PASSED!
!PortfolioTest methodsFor: 'tests - transactions' stamp: 'fr 11/9/2020 09:15:15' prior: 50885997!
test10PortfolioWithMultipleAccountsAndPortfoliosExhibitsAllTheirTransactionsCombined

	| anotherPortfolio anotherDeposit deposit |
	anotherAccount1 _ ReceptiveAccount new.
	
	deposit _ Deposit register: 100 on: account. 
	anotherDeposit _ Deposit register: 50 on: anotherAccount1.
	 
	anotherPortfolio _ Portfolio with: (OrderedCollection with: anotherAccount1 with: portfolioWithAccount).
	self assert: [anotherPortfolio transactions = (OrderedCollection with: anotherDeposit with: deposit	)]! !

!testRun: #PortfolioTest #test10PortfolioWithMultipleAccountsAndPortfoliosExhibitsAllTheirTransactionsCombined stamp: 'fr 11/9/2020 09:15:15'!
PASSED!

!testRun: #PortfolioTest #test01EmptyPortfolioHasBalanceZero stamp: 'fr 11/9/2020 09:15:15'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioWithASingleAccountWithNoTransactionsHasBalanceZero stamp: 'fr 11/9/2020 09:15:15'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioWithASingleAccountReflectsItsTransactionsValuesInItsBalance stamp: 'fr 11/9/2020 09:15:15'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithMultipleAccountsAndPortfoliosReflectsTheirTransactionsValuesInItsBalance stamp: 'fr 11/9/2020 09:15:15'!
PASSED!

!testRun: #PortfolioTest #test05EmptyPortfolioHasNotRegisteredAnyTransaction stamp: 'fr 11/9/2020 09:15:15'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioWithASingleAccountRegistersItsTransactions stamp: 'fr 11/9/2020 09:15:15'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioWithMulltipleAccountsAndPortfoliosRegistersAllTheirTransactions stamp: 'fr 11/9/2020 09:15:15'!
PASSED!

!testRun: #PortfolioTest #test08EmptyPortfolioDoesNotExhibitAnyTransaction stamp: 'fr 11/9/2020 09:15:15'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithASingleAccountExhibitsItsTransactions stamp: 'fr 11/9/2020 09:15:15'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioWithMultipleAccountsAndPortfoliosExhibitsAllTheirTransactionsCombined stamp: 'fr 11/9/2020 09:15:15'!
PASSED!

!testRun: #PortfolioTest #test11EmptyPortfolioDoesNotContainAnyAccount stamp: 'fr 11/9/2020 09:15:15'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioContainsAnAccountAfterItIsAdded stamp: 'fr 11/9/2020 09:15:15'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioContainsAnAccountAfterItIsAddedToAnyOfItsDecendents stamp: 'fr 11/9/2020 09:15:15'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioDoesNotContainAnythingThatWasNotAddedToItself stamp: 'fr 11/9/2020 09:15:15'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotAddItself stamp: 'fr 11/9/2020 09:15:15'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioCanNotAddItsParent stamp: 'fr 11/9/2020 09:15:15'!
PASSED!

!testRun: #PortfolioTest #test17PortfolioCanNotAddAnyAncestor stamp: 'fr 11/9/2020 09:15:15'!
PASSED!

!testRun: #PortfolioTest #test18PortfolioCanNotAddAnyPreviousMemberOfTheTree stamp: 'fr 11/9/2020 09:15:15'!
PASSED!

!testRun: #PortfolioTest #test19PortfolioCanNotAddAnotherOneWhichSharesChild stamp: 'fr 11/9/2020 09:15:15'!
PASSED!

!testRun: #PortfolioTest #test20PortfolioCanNotAddDuplicateAccountIndirectly stamp: 'fr 11/9/2020 09:15:15'!
PASSED!

!testRun: #PortfolioTest #test21AddingShouldBehaveIdenticallyAsCreatingAPortfolioWithAccounts stamp: 'fr 11/9/2020 09:15:15'!
PASSED!

!testRun: #PortfolioTest #test22CreatingAPortfolioWithAccountsShouldFailIdenticallyAsWhenAddingThem stamp: 'fr 11/9/2020 09:15:15'!
PASSED!
!PortfolioTest methodsFor: 'tests - add' stamp: 'fr 11/9/2020 09:15:43' prior: 50884537!
test14PortfolioDoesNotContainAnythingThatWasNotAddedToItself

	anotherAccount1 _ ReceptiveAccount new.
	emptyPortfolio add: account.
	self assert: [(emptyPortfolio contains: anotherAccount1) not]! !
!PortfolioTest methodsFor: 'tests - balance' stamp: 'fr 11/9/2020 09:16:21' prior: 50886239!
test04PortfolioWithMultipleAccountsAndPortfoliosReflectsTheirTransactionsValuesInItsBalance

	| anotherPortfolio  |
	
	Deposit register: 100 on: account. 
	Deposit register: 50 on: anotherAccount1.
	 
	anotherPortfolio _ Portfolio with: (OrderedCollection with: anotherAccount1 with: portfolioWithAccount).
	self assert: [anotherPortfolio balance = 150]! !
!PortfolioTest methodsFor: 'setup' stamp: 'fr 11/9/2020 09:16:30' prior: 50885564 overrides: 16927572!
setUp

	emptyPortfolio _ Portfolio new. 

	account _ ReceptiveAccount new.
	
	portfolioWithAccount _ Portfolio with: (OrderedCollection with: account).
	
	anotherAccount1 _ ReceptiveAccount new.


! !

!classDefinition: #PortfolioTest category: 'Portfolio-Ejercicio' stamp: 'fr 11/9/2020 09:16:35'!
TestCase subclass: #PortfolioTest
	instanceVariableNames: 'emptyPortfolio account portfolioWithAccount anotherAccount'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'fr 11/9/2020 09:16:35' prior: 50886598 overrides: 16927572!
setUp

	emptyPortfolio _ Portfolio new. 

	account _ ReceptiveAccount new.
	
	portfolioWithAccount _ Portfolio with: (OrderedCollection with: account).
	
	anotherAccount _ ReceptiveAccount new.


! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'fr 11/9/2020 09:16:35' prior: 50886464!
test10PortfolioWithMultipleAccountsAndPortfoliosExhibitsAllTheirTransactionsCombined

	| anotherPortfolio anotherDeposit deposit |
	anotherAccount _ ReceptiveAccount new.
	
	deposit _ Deposit register: 100 on: account. 
	anotherDeposit _ Deposit register: 50 on: anotherAccount.
	 
	anotherPortfolio _ Portfolio with: (OrderedCollection with: anotherAccount with: portfolioWithAccount).
	self assert: [anotherPortfolio transactions = (OrderedCollection with: anotherDeposit with: deposit	)]! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'fr 11/9/2020 09:16:35' prior: 50886573!
test14PortfolioDoesNotContainAnythingThatWasNotAddedToItself

	anotherAccount _ ReceptiveAccount new.
	emptyPortfolio add: account.
	self assert: [(emptyPortfolio contains: anotherAccount) not]! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'fr 11/9/2020 09:16:35' prior: 50886583!
test04PortfolioWithMultipleAccountsAndPortfoliosReflectsTheirTransactionsValuesInItsBalance

	| anotherPortfolio  |
	
	Deposit register: 100 on: account. 
	Deposit register: 50 on: anotherAccount.
	 
	anotherPortfolio _ Portfolio with: (OrderedCollection with: anotherAccount with: portfolioWithAccount).
	self assert: [anotherPortfolio balance = 150]! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'fr 11/9/2020 09:16:35' prior: 50886264!
test07PortfolioWithMulltipleAccountsAndPortfoliosRegistersAllTheirTransactions

	| anotherPortfolio anotherDeposit deposit |
	anotherAccount _ ReceptiveAccount new.
	
	deposit _ Deposit register: 100 on: account. 
	anotherDeposit _ Deposit register: 50 on: anotherAccount.
	 
	anotherPortfolio _ Portfolio with: (OrderedCollection with: anotherAccount with: portfolioWithAccount).
	self assert: [
		(anotherPortfolio hasRegistered: deposit) and: 
		[anotherPortfolio hasRegistered: anotherDeposit]
	]! !

!testRun: #PortfolioTest #test01EmptyPortfolioHasBalanceZero stamp: 'fr 11/9/2020 09:16:39'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioWithASingleAccountWithNoTransactionsHasBalanceZero stamp: 'fr 11/9/2020 09:16:39'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioWithASingleAccountReflectsItsTransactionsValuesInItsBalance stamp: 'fr 11/9/2020 09:16:39'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithMultipleAccountsAndPortfoliosReflectsTheirTransactionsValuesInItsBalance stamp: 'fr 11/9/2020 09:16:39'!
PASSED!

!testRun: #PortfolioTest #test05EmptyPortfolioHasNotRegisteredAnyTransaction stamp: 'fr 11/9/2020 09:16:39'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioWithASingleAccountRegistersItsTransactions stamp: 'fr 11/9/2020 09:16:39'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioWithMulltipleAccountsAndPortfoliosRegistersAllTheirTransactions stamp: 'fr 11/9/2020 09:16:39'!
PASSED!

!testRun: #PortfolioTest #test08EmptyPortfolioDoesNotExhibitAnyTransaction stamp: 'fr 11/9/2020 09:16:39'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithASingleAccountExhibitsItsTransactions stamp: 'fr 11/9/2020 09:16:39'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioWithMultipleAccountsAndPortfoliosExhibitsAllTheirTransactionsCombined stamp: 'fr 11/9/2020 09:16:39'!
PASSED!

!testRun: #PortfolioTest #test11EmptyPortfolioDoesNotContainAnyAccount stamp: 'fr 11/9/2020 09:16:39'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioContainsAnAccountAfterItIsAdded stamp: 'fr 11/9/2020 09:16:39'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioContainsAnAccountAfterItIsAddedToAnyOfItsDecendents stamp: 'fr 11/9/2020 09:16:39'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioDoesNotContainAnythingThatWasNotAddedToItself stamp: 'fr 11/9/2020 09:16:39'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotAddItself stamp: 'fr 11/9/2020 09:16:39'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioCanNotAddItsParent stamp: 'fr 11/9/2020 09:16:39'!
PASSED!

!testRun: #PortfolioTest #test17PortfolioCanNotAddAnyAncestor stamp: 'fr 11/9/2020 09:16:39'!
PASSED!

!testRun: #PortfolioTest #test18PortfolioCanNotAddAnyPreviousMemberOfTheTree stamp: 'fr 11/9/2020 09:16:39'!
PASSED!

!testRun: #PortfolioTest #test19PortfolioCanNotAddAnotherOneWhichSharesChild stamp: 'fr 11/9/2020 09:16:39'!
PASSED!

!testRun: #PortfolioTest #test20PortfolioCanNotAddDuplicateAccountIndirectly stamp: 'fr 11/9/2020 09:16:39'!
PASSED!

!testRun: #PortfolioTest #test21AddingShouldBehaveIdenticallyAsCreatingAPortfolioWithAccounts stamp: 'fr 11/9/2020 09:16:39'!
PASSED!

!testRun: #PortfolioTest #test22CreatingAPortfolioWithAccountsShouldFailIdenticallyAsWhenAddingThem stamp: 'fr 11/9/2020 09:16:39'!
PASSED!
!PortfolioTest methodsFor: 'tests - hasRegistered' stamp: 'fr 11/9/2020 09:16:54' prior: 50886672!
test07PortfolioWithMulltipleAccountsAndPortfoliosRegistersAllTheirTransactions

	| anotherPortfolio anotherDeposit deposit |	
	deposit _ Deposit register: 100 on: account. 
	anotherDeposit _ Deposit register: 50 on: anotherAccount.
	 
	anotherPortfolio _ Portfolio with: (OrderedCollection with: anotherAccount with: portfolioWithAccount).
	self assert: [
		(anotherPortfolio hasRegistered: deposit) and: 
		[anotherPortfolio hasRegistered: anotherDeposit]
	]! !
!PortfolioTest methodsFor: 'tests - hasRegistered' stamp: 'fr 11/9/2020 09:16:56' prior: 50886777!
test07PortfolioWithMulltipleAccountsAndPortfoliosRegistersAllTheirTransactions

	| anotherPortfolio anotherDeposit deposit |
		
	deposit _ Deposit register: 100 on: account. 
	anotherDeposit _ Deposit register: 50 on: anotherAccount.
	 
	anotherPortfolio _ Portfolio with: (OrderedCollection with: anotherAccount with: portfolioWithAccount).
	self assert: [
		(anotherPortfolio hasRegistered: deposit) and: 
		[anotherPortfolio hasRegistered: anotherDeposit]
	]! !
!PortfolioTest methodsFor: 'tests - transactions' stamp: 'fr 11/9/2020 09:17:03' prior: 50886628!
test10PortfolioWithMultipleAccountsAndPortfoliosExhibitsAllTheirTransactionsCombined

	| anotherPortfolio anotherDeposit deposit |	
	deposit _ Deposit register: 100 on: account. 
	anotherDeposit _ Deposit register: 50 on: anotherAccount.
	 
	anotherPortfolio _ Portfolio with: (OrderedCollection with: anotherAccount with: portfolioWithAccount).
	self assert: [anotherPortfolio transactions = (OrderedCollection with: anotherDeposit with: deposit	)]! !
!PortfolioTest methodsFor: 'tests - transactions' stamp: 'fr 11/9/2020 09:17:04' prior: 50886813!
test10PortfolioWithMultipleAccountsAndPortfoliosExhibitsAllTheirTransactionsCombined

	| anotherPortfolio anotherDeposit deposit |
		
	deposit _ Deposit register: 100 on: account. 
	anotherDeposit _ Deposit register: 50 on: anotherAccount.
	 
	anotherPortfolio _ Portfolio with: (OrderedCollection with: anotherAccount with: portfolioWithAccount).
	self assert: [anotherPortfolio transactions = (OrderedCollection with: anotherDeposit with: deposit	)]! !
!PortfolioTest methodsFor: 'tests - add' stamp: 'fr 11/9/2020 09:17:11' prior: 50886647!
test14PortfolioDoesNotContainAnythingThatWasNotAddedToItself

	emptyPortfolio add: account.
	self assert: [(emptyPortfolio contains: anotherAccount) not]! !

!testRun: #PortfolioTest #test01EmptyPortfolioHasBalanceZero stamp: 'fr 11/9/2020 09:17:17'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioWithASingleAccountWithNoTransactionsHasBalanceZero stamp: 'fr 11/9/2020 09:17:17'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioWithASingleAccountReflectsItsTransactionsValuesInItsBalance stamp: 'fr 11/9/2020 09:17:17'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithMultipleAccountsAndPortfoliosReflectsTheirTransactionsValuesInItsBalance stamp: 'fr 11/9/2020 09:17:17'!
PASSED!

!testRun: #PortfolioTest #test05EmptyPortfolioHasNotRegisteredAnyTransaction stamp: 'fr 11/9/2020 09:17:17'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioWithASingleAccountRegistersItsTransactions stamp: 'fr 11/9/2020 09:17:17'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioWithMulltipleAccountsAndPortfoliosRegistersAllTheirTransactions stamp: 'fr 11/9/2020 09:17:17'!
PASSED!

!testRun: #PortfolioTest #test08EmptyPortfolioDoesNotExhibitAnyTransaction stamp: 'fr 11/9/2020 09:17:17'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithASingleAccountExhibitsItsTransactions stamp: 'fr 11/9/2020 09:17:17'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioWithMultipleAccountsAndPortfoliosExhibitsAllTheirTransactionsCombined stamp: 'fr 11/9/2020 09:17:17'!
PASSED!

!testRun: #PortfolioTest #test11EmptyPortfolioDoesNotContainAnyAccount stamp: 'fr 11/9/2020 09:17:17'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioContainsAnAccountAfterItIsAdded stamp: 'fr 11/9/2020 09:17:17'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioContainsAnAccountAfterItIsAddedToAnyOfItsDecendents stamp: 'fr 11/9/2020 09:17:17'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioDoesNotContainAnythingThatWasNotAddedToItself stamp: 'fr 11/9/2020 09:17:17'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotAddItself stamp: 'fr 11/9/2020 09:17:17'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioCanNotAddItsParent stamp: 'fr 11/9/2020 09:17:17'!
PASSED!

!testRun: #PortfolioTest #test17PortfolioCanNotAddAnyAncestor stamp: 'fr 11/9/2020 09:17:17'!
PASSED!

!testRun: #PortfolioTest #test18PortfolioCanNotAddAnyPreviousMemberOfTheTree stamp: 'fr 11/9/2020 09:17:17'!
PASSED!

!testRun: #PortfolioTest #test19PortfolioCanNotAddAnotherOneWhichSharesChild stamp: 'fr 11/9/2020 09:17:17'!
PASSED!

!testRun: #PortfolioTest #test20PortfolioCanNotAddDuplicateAccountIndirectly stamp: 'fr 11/9/2020 09:17:17'!
PASSED!

!testRun: #PortfolioTest #test21AddingShouldBehaveIdenticallyAsCreatingAPortfolioWithAccounts stamp: 'fr 11/9/2020 09:17:17'!
PASSED!

!testRun: #PortfolioTest #test22CreatingAPortfolioWithAccountsShouldFailIdenticallyAsWhenAddingThem stamp: 'fr 11/9/2020 09:17:17'!
PASSED!
!PortfolioTest methodsFor: 'tests - balance' stamp: 'fr 11/9/2020 09:18:22' prior: 50886657!
test04PortfolioWithMultipleAccountsAndPortfoliosReflectsTheirTransactionsValuesInItsBalance

	| portfolioWithAccountAndPortfolio  |
	
	Deposit register: 100 on: account. 
	Deposit register: 50 on: anotherAccount.
	 
	portfolioWithAccountAndPortfolio _ Portfolio with: (OrderedCollection with: anotherAccount with: portfolioWithAccount).
	self assert: [portfolioWithAccountAndPortfolio balance = 150]! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'fr 11/9/2020 09:18:26' prior: 50886942!
test04PortfolioWithMultipleAccountsAndPortfoliosReflectsTheirTransactionsValuesInItsBalance

	 
	
	Deposit register: 100 on: account. 
	Deposit register: 50 on: anotherAccount.
	 
	portfolioWithAccountAndPortfolio _ Portfolio with: (OrderedCollection with: anotherAccount with: portfolioWithAccount).
	self assert: [portfolioWithAccountAndPortfolio balance = 150]! !

!classDefinition: #PortfolioTest category: 'Portfolio-Ejercicio' stamp: 'fr 11/9/2020 09:18:26'!
TestCase subclass: #PortfolioTest
	instanceVariableNames: 'emptyPortfolio account portfolioWithAccount anotherAccount portfolioWithAccountAndPortfolio'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!
!PortfolioTest methodsFor: 'tests - balance' stamp: 'fr 11/9/2020 09:18:32' prior: 50886958!
test04PortfolioWithMultipleAccountsAndPortfoliosReflectsTheirTransactionsValuesInItsBalance

	Deposit register: 100 on: account. 
	Deposit register: 50 on: anotherAccount.
	 
	portfolioWithAccountAndPortfolio _ Portfolio with: (OrderedCollection with: anotherAccount with: portfolioWithAccount).
	self assert: [portfolioWithAccountAndPortfolio balance = 150]! !
!PortfolioTest methodsFor: 'tests - hasRegistered' stamp: 'fr 11/9/2020 09:19:01' prior: 50886795!
test07PortfolioWithMulltipleAccountsAndPortfoliosRegistersAllTheirTransactions

	| anotherDeposit deposit |
		
	deposit _ Deposit register: 100 on: account. 
	anotherDeposit _ Deposit register: 50 on: anotherAccount.
	 
	portfolioWithAccountAndPortfolio _ Portfolio with: (OrderedCollection with: anotherAccount with: portfolioWithAccount).
	self assert: [
		(portfolioWithAccountAndPortfolio hasRegistered: deposit) and: 
		[portfolioWithAccountAndPortfolio hasRegistered: anotherDeposit]
	]! !

!testRun: #PortfolioTest #test07PortfolioWithMulltipleAccountsAndPortfoliosRegistersAllTheirTransactions stamp: 'fr 11/9/2020 09:19:01'!
PASSED!

!testRun: #PortfolioTest #test01EmptyPortfolioHasBalanceZero stamp: 'fr 11/9/2020 09:19:01'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioWithASingleAccountWithNoTransactionsHasBalanceZero stamp: 'fr 11/9/2020 09:19:01'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioWithASingleAccountReflectsItsTransactionsValuesInItsBalance stamp: 'fr 11/9/2020 09:19:01'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithMultipleAccountsAndPortfoliosReflectsTheirTransactionsValuesInItsBalance stamp: 'fr 11/9/2020 09:19:01'!
PASSED!

!testRun: #PortfolioTest #test05EmptyPortfolioHasNotRegisteredAnyTransaction stamp: 'fr 11/9/2020 09:19:01'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioWithASingleAccountRegistersItsTransactions stamp: 'fr 11/9/2020 09:19:01'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioWithMulltipleAccountsAndPortfoliosRegistersAllTheirTransactions stamp: 'fr 11/9/2020 09:19:01'!
PASSED!

!testRun: #PortfolioTest #test08EmptyPortfolioDoesNotExhibitAnyTransaction stamp: 'fr 11/9/2020 09:19:01'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithASingleAccountExhibitsItsTransactions stamp: 'fr 11/9/2020 09:19:01'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioWithMultipleAccountsAndPortfoliosExhibitsAllTheirTransactionsCombined stamp: 'fr 11/9/2020 09:19:01'!
PASSED!

!testRun: #PortfolioTest #test11EmptyPortfolioDoesNotContainAnyAccount stamp: 'fr 11/9/2020 09:19:01'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioContainsAnAccountAfterItIsAdded stamp: 'fr 11/9/2020 09:19:01'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioContainsAnAccountAfterItIsAddedToAnyOfItsDecendents stamp: 'fr 11/9/2020 09:19:01'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioDoesNotContainAnythingThatWasNotAddedToItself stamp: 'fr 11/9/2020 09:19:01'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotAddItself stamp: 'fr 11/9/2020 09:19:02'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioCanNotAddItsParent stamp: 'fr 11/9/2020 09:19:02'!
PASSED!

!testRun: #PortfolioTest #test17PortfolioCanNotAddAnyAncestor stamp: 'fr 11/9/2020 09:19:02'!
PASSED!

!testRun: #PortfolioTest #test18PortfolioCanNotAddAnyPreviousMemberOfTheTree stamp: 'fr 11/9/2020 09:19:02'!
PASSED!

!testRun: #PortfolioTest #test19PortfolioCanNotAddAnotherOneWhichSharesChild stamp: 'fr 11/9/2020 09:19:02'!
PASSED!

!testRun: #PortfolioTest #test20PortfolioCanNotAddDuplicateAccountIndirectly stamp: 'fr 11/9/2020 09:19:02'!
PASSED!

!testRun: #PortfolioTest #test21AddingShouldBehaveIdenticallyAsCreatingAPortfolioWithAccounts stamp: 'fr 11/9/2020 09:19:02'!
PASSED!

!testRun: #PortfolioTest #test22CreatingAPortfolioWithAccountsShouldFailIdenticallyAsWhenAddingThem stamp: 'fr 11/9/2020 09:19:02'!
PASSED!
!PortfolioTest methodsFor: 'tests - transactions' stamp: 'fr 11/9/2020 09:19:16' prior: 50886831!
test10PortfolioWithMultipleAccountsAndPortfoliosExhibitsAllTheirTransactionsCombined

	| anotherDeposit deposit |
		
	deposit _ Deposit register: 100 on: account. 
	anotherDeposit _ Deposit register: 50 on: anotherAccount.
	 
	portfolioWithAccountAndPortfolio _ Portfolio with: (OrderedCollection with: anotherAccount with: portfolioWithAccount).
	self assert: [portfolioWithAccountAndPortfolio transactions = (OrderedCollection with: anotherDeposit with: deposit	)]! !

!testRun: #PortfolioTest #test10PortfolioWithMultipleAccountsAndPortfoliosExhibitsAllTheirTransactionsCombined stamp: 'fr 11/9/2020 09:19:17'!
PASSED!

!testRun: #PortfolioTest #test01EmptyPortfolioHasBalanceZero stamp: 'fr 11/9/2020 09:19:17'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioWithASingleAccountWithNoTransactionsHasBalanceZero stamp: 'fr 11/9/2020 09:19:17'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioWithASingleAccountReflectsItsTransactionsValuesInItsBalance stamp: 'fr 11/9/2020 09:19:17'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithMultipleAccountsAndPortfoliosReflectsTheirTransactionsValuesInItsBalance stamp: 'fr 11/9/2020 09:19:17'!
PASSED!

!testRun: #PortfolioTest #test05EmptyPortfolioHasNotRegisteredAnyTransaction stamp: 'fr 11/9/2020 09:19:17'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioWithASingleAccountRegistersItsTransactions stamp: 'fr 11/9/2020 09:19:17'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioWithMulltipleAccountsAndPortfoliosRegistersAllTheirTransactions stamp: 'fr 11/9/2020 09:19:17'!
PASSED!

!testRun: #PortfolioTest #test08EmptyPortfolioDoesNotExhibitAnyTransaction stamp: 'fr 11/9/2020 09:19:17'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithASingleAccountExhibitsItsTransactions stamp: 'fr 11/9/2020 09:19:17'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioWithMultipleAccountsAndPortfoliosExhibitsAllTheirTransactionsCombined stamp: 'fr 11/9/2020 09:19:17'!
PASSED!

!testRun: #PortfolioTest #test11EmptyPortfolioDoesNotContainAnyAccount stamp: 'fr 11/9/2020 09:19:17'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioContainsAnAccountAfterItIsAdded stamp: 'fr 11/9/2020 09:19:17'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioContainsAnAccountAfterItIsAddedToAnyOfItsDecendents stamp: 'fr 11/9/2020 09:19:17'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioDoesNotContainAnythingThatWasNotAddedToItself stamp: 'fr 11/9/2020 09:19:17'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotAddItself stamp: 'fr 11/9/2020 09:19:17'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioCanNotAddItsParent stamp: 'fr 11/9/2020 09:19:17'!
PASSED!

!testRun: #PortfolioTest #test17PortfolioCanNotAddAnyAncestor stamp: 'fr 11/9/2020 09:19:17'!
PASSED!

!testRun: #PortfolioTest #test18PortfolioCanNotAddAnyPreviousMemberOfTheTree stamp: 'fr 11/9/2020 09:19:17'!
PASSED!

!testRun: #PortfolioTest #test19PortfolioCanNotAddAnotherOneWhichSharesChild stamp: 'fr 11/9/2020 09:19:17'!
PASSED!

!testRun: #PortfolioTest #test20PortfolioCanNotAddDuplicateAccountIndirectly stamp: 'fr 11/9/2020 09:19:17'!
PASSED!

!testRun: #PortfolioTest #test21AddingShouldBehaveIdenticallyAsCreatingAPortfolioWithAccounts stamp: 'fr 11/9/2020 09:19:17'!
PASSED!

!testRun: #PortfolioTest #test22CreatingAPortfolioWithAccountsShouldFailIdenticallyAsWhenAddingThem stamp: 'fr 11/9/2020 09:19:17'!
PASSED!
!PortfolioTest methodsFor: 'tests - balance' stamp: 'fr 11/9/2020 09:19:50' prior: 50886983!
test04PortfolioWithMultipleAccountsAndPortfoliosReflectsTheirTransactionsValuesInItsBalance

	Deposit register: 100 on: account. 
	Deposit register: 50 on: anotherAccount.

	self assert: [portfolioWithAccountAndPortfolio balance = 150]! !
!PortfolioTest methodsFor: 'setup' stamp: 'fr 11/9/2020 09:19:57' prior: 50886618 overrides: 16927572!
setUp

	emptyPortfolio _ Portfolio new. 

	account _ ReceptiveAccount new.
	
	portfolioWithAccount _ Portfolio with: (OrderedCollection with: account).
	
	anotherAccount _ ReceptiveAccount new.
	
	portfolioWithAccountAndPortfolio _ Portfolio with: (OrderedCollection with: anotherAccount with: portfolioWithAccount).



! !
!PortfolioTest methodsFor: 'tests - hasRegistered' stamp: 'fr 11/9/2020 09:20:15' prior: 50886998!
test07PortfolioWithMulltipleAccountsAndPortfoliosRegistersAllTheirTransactions

	| anotherDeposit deposit |
		
	deposit _ Deposit register: 100 on: account. 
	anotherDeposit _ Deposit register: 50 on: anotherAccount.
	 
	self assert: [
		(portfolioWithAccountAndPortfolio hasRegistered: deposit) and: 
		[portfolioWithAccountAndPortfolio hasRegistered: anotherDeposit]
	]! !
!PortfolioTest methodsFor: 'tests - transactions' stamp: 'fr 11/9/2020 09:20:22' prior: 50887107!
test10PortfolioWithMultipleAccountsAndPortfoliosExhibitsAllTheirTransactionsCombined

	| anotherDeposit deposit |
		
	deposit _ Deposit register: 100 on: account. 
	anotherDeposit _ Deposit register: 50 on: anotherAccount.
	 
	self assert: [portfolioWithAccountAndPortfolio transactions = (OrderedCollection with: anotherDeposit with: deposit	)]! !

!testRun: #PortfolioTest #test10PortfolioWithMultipleAccountsAndPortfoliosExhibitsAllTheirTransactionsCombined stamp: 'fr 11/9/2020 09:20:22'!
PASSED!

!testRun: #PortfolioTest #test01EmptyPortfolioHasBalanceZero stamp: 'fr 11/9/2020 09:20:22'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioWithASingleAccountWithNoTransactionsHasBalanceZero stamp: 'fr 11/9/2020 09:20:22'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioWithASingleAccountReflectsItsTransactionsValuesInItsBalance stamp: 'fr 11/9/2020 09:20:22'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithMultipleAccountsAndPortfoliosReflectsTheirTransactionsValuesInItsBalance stamp: 'fr 11/9/2020 09:20:22'!
PASSED!

!testRun: #PortfolioTest #test05EmptyPortfolioHasNotRegisteredAnyTransaction stamp: 'fr 11/9/2020 09:20:22'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioWithASingleAccountRegistersItsTransactions stamp: 'fr 11/9/2020 09:20:22'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioWithMulltipleAccountsAndPortfoliosRegistersAllTheirTransactions stamp: 'fr 11/9/2020 09:20:22'!
PASSED!

!testRun: #PortfolioTest #test08EmptyPortfolioDoesNotExhibitAnyTransaction stamp: 'fr 11/9/2020 09:20:22'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithASingleAccountExhibitsItsTransactions stamp: 'fr 11/9/2020 09:20:22'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioWithMultipleAccountsAndPortfoliosExhibitsAllTheirTransactionsCombined stamp: 'fr 11/9/2020 09:20:22'!
PASSED!

!testRun: #PortfolioTest #test11EmptyPortfolioDoesNotContainAnyAccount stamp: 'fr 11/9/2020 09:20:22'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioContainsAnAccountAfterItIsAdded stamp: 'fr 11/9/2020 09:20:22'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioContainsAnAccountAfterItIsAddedToAnyOfItsDecendents stamp: 'fr 11/9/2020 09:20:22'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioDoesNotContainAnythingThatWasNotAddedToItself stamp: 'fr 11/9/2020 09:20:22'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotAddItself stamp: 'fr 11/9/2020 09:20:22'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioCanNotAddItsParent stamp: 'fr 11/9/2020 09:20:22'!
PASSED!

!testRun: #PortfolioTest #test17PortfolioCanNotAddAnyAncestor stamp: 'fr 11/9/2020 09:20:22'!
PASSED!

!testRun: #PortfolioTest #test18PortfolioCanNotAddAnyPreviousMemberOfTheTree stamp: 'fr 11/9/2020 09:20:22'!
PASSED!

!testRun: #PortfolioTest #test19PortfolioCanNotAddAnotherOneWhichSharesChild stamp: 'fr 11/9/2020 09:20:22'!
PASSED!

!testRun: #PortfolioTest #test20PortfolioCanNotAddDuplicateAccountIndirectly stamp: 'fr 11/9/2020 09:20:22'!
PASSED!

!testRun: #PortfolioTest #test21AddingShouldBehaveIdenticallyAsCreatingAPortfolioWithAccounts stamp: 'fr 11/9/2020 09:20:22'!
PASSED!

!testRun: #PortfolioTest #test22CreatingAPortfolioWithAccountsShouldFailIdenticallyAsWhenAddingThem stamp: 'fr 11/9/2020 09:20:22'!
PASSED!
!PortfolioTest methodsFor: 'tests - hasRegistered' stamp: 'fr 11/9/2020 09:22:17' prior: 50884432!
test05EmptyPortfolioHasNotRegisteredAnyTransaction

	| deposit |
	deposit _ Deposit register: 100 on: account.	
	self assert: [(emptyPortfolio hasRegistered: deposit) not]! !
!PortfolioTest methodsFor: 'tests - hasRegistered' stamp: 'fr 11/9/2020 09:25:00'!
deposit100OnAccount

	^ Deposit register: 100 on: account! !
!PortfolioTest methodsFor: 'tests - hasRegistered' stamp: 'fr 11/9/2020 09:25:00' prior: 50885778!
test06PortfolioWithASingleAccountRegistersItsTransactions

	| deposit |
	deposit _ self deposit100OnAccount.	
	self assert: [portfolioWithAccount hasRegistered: deposit]! !

!testRun: #PortfolioTest #test06PortfolioWithASingleAccountRegistersItsTransactions stamp: 'fr 11/9/2020 09:25:02'!
PASSED!

!testRun: #PortfolioTest #test01EmptyPortfolioHasBalanceZero stamp: 'fr 11/9/2020 09:25:02'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioWithASingleAccountWithNoTransactionsHasBalanceZero stamp: 'fr 11/9/2020 09:25:02'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioWithASingleAccountReflectsItsTransactionsValuesInItsBalance stamp: 'fr 11/9/2020 09:25:02'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithMultipleAccountsAndPortfoliosReflectsTheirTransactionsValuesInItsBalance stamp: 'fr 11/9/2020 09:25:02'!
PASSED!

!testRun: #PortfolioTest #test05EmptyPortfolioHasNotRegisteredAnyTransaction stamp: 'fr 11/9/2020 09:25:02'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioWithASingleAccountRegistersItsTransactions stamp: 'fr 11/9/2020 09:25:02'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioWithMulltipleAccountsAndPortfoliosRegistersAllTheirTransactions stamp: 'fr 11/9/2020 09:25:02'!
PASSED!

!testRun: #PortfolioTest #test08EmptyPortfolioDoesNotExhibitAnyTransaction stamp: 'fr 11/9/2020 09:25:02'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithASingleAccountExhibitsItsTransactions stamp: 'fr 11/9/2020 09:25:02'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioWithMultipleAccountsAndPortfoliosExhibitsAllTheirTransactionsCombined stamp: 'fr 11/9/2020 09:25:02'!
PASSED!

!testRun: #PortfolioTest #test11EmptyPortfolioDoesNotContainAnyAccount stamp: 'fr 11/9/2020 09:25:02'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioContainsAnAccountAfterItIsAdded stamp: 'fr 11/9/2020 09:25:02'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioContainsAnAccountAfterItIsAddedToAnyOfItsDecendents stamp: 'fr 11/9/2020 09:25:02'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioDoesNotContainAnythingThatWasNotAddedToItself stamp: 'fr 11/9/2020 09:25:02'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotAddItself stamp: 'fr 11/9/2020 09:25:02'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioCanNotAddItsParent stamp: 'fr 11/9/2020 09:25:02'!
PASSED!

!testRun: #PortfolioTest #test17PortfolioCanNotAddAnyAncestor stamp: 'fr 11/9/2020 09:25:02'!
PASSED!

!testRun: #PortfolioTest #test18PortfolioCanNotAddAnyPreviousMemberOfTheTree stamp: 'fr 11/9/2020 09:25:02'!
PASSED!

!testRun: #PortfolioTest #test19PortfolioCanNotAddAnotherOneWhichSharesChild stamp: 'fr 11/9/2020 09:25:02'!
PASSED!

!testRun: #PortfolioTest #test20PortfolioCanNotAddDuplicateAccountIndirectly stamp: 'fr 11/9/2020 09:25:02'!
PASSED!

!testRun: #PortfolioTest #test21AddingShouldBehaveIdenticallyAsCreatingAPortfolioWithAccounts stamp: 'fr 11/9/2020 09:25:02'!
PASSED!

!testRun: #PortfolioTest #test22CreatingAPortfolioWithAccountsShouldFailIdenticallyAsWhenAddingThem stamp: 'fr 11/9/2020 09:25:02'!
PASSED!
!PortfolioTest methodsFor: 'tests - hasRegistered' stamp: 'fr 11/9/2020 09:25:56' prior: 50887360!
test05EmptyPortfolioHasNotRegisteredAnyTransaction

	| deposit |
	deposit _ self deposit100OnAccount.
	self assert: [(emptyPortfolio hasRegistered: deposit) not]! !
!PortfolioTest methodsFor: 'tests - hasRegistered' stamp: 'fr 11/9/2020 09:26:56' prior: 50887240!
test07PortfolioWithMulltipleAccountsAndPortfoliosRegistersAllTheirTransactions

	| anotherDeposit deposit |
		
	deposit _ self deposit100OnAccount.
	anotherDeposit _ Deposit register: 50 on: anotherAccount.
	 
	self assert: [
		(portfolioWithAccountAndPortfolio hasRegistered: deposit) and: 
		[portfolioWithAccountAndPortfolio hasRegistered: anotherDeposit]
	]! !

!testRun: #PortfolioTest #test07PortfolioWithMulltipleAccountsAndPortfoliosRegistersAllTheirTransactions stamp: 'fr 11/9/2020 09:26:57'!
PASSED!

!testRun: #PortfolioTest #test01EmptyPortfolioHasBalanceZero stamp: 'fr 11/9/2020 09:26:57'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioWithASingleAccountWithNoTransactionsHasBalanceZero stamp: 'fr 11/9/2020 09:26:57'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioWithASingleAccountReflectsItsTransactionsValuesInItsBalance stamp: 'fr 11/9/2020 09:26:57'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithMultipleAccountsAndPortfoliosReflectsTheirTransactionsValuesInItsBalance stamp: 'fr 11/9/2020 09:26:57'!
PASSED!

!testRun: #PortfolioTest #test05EmptyPortfolioHasNotRegisteredAnyTransaction stamp: 'fr 11/9/2020 09:26:57'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioWithASingleAccountRegistersItsTransactions stamp: 'fr 11/9/2020 09:26:57'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioWithMulltipleAccountsAndPortfoliosRegistersAllTheirTransactions stamp: 'fr 11/9/2020 09:26:57'!
PASSED!

!testRun: #PortfolioTest #test08EmptyPortfolioDoesNotExhibitAnyTransaction stamp: 'fr 11/9/2020 09:26:57'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithASingleAccountExhibitsItsTransactions stamp: 'fr 11/9/2020 09:26:57'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioWithMultipleAccountsAndPortfoliosExhibitsAllTheirTransactionsCombined stamp: 'fr 11/9/2020 09:26:57'!
PASSED!

!testRun: #PortfolioTest #test11EmptyPortfolioDoesNotContainAnyAccount stamp: 'fr 11/9/2020 09:26:57'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioContainsAnAccountAfterItIsAdded stamp: 'fr 11/9/2020 09:26:57'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioContainsAnAccountAfterItIsAddedToAnyOfItsDecendents stamp: 'fr 11/9/2020 09:26:57'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioDoesNotContainAnythingThatWasNotAddedToItself stamp: 'fr 11/9/2020 09:26:57'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotAddItself stamp: 'fr 11/9/2020 09:26:57'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioCanNotAddItsParent stamp: 'fr 11/9/2020 09:26:57'!
PASSED!

!testRun: #PortfolioTest #test17PortfolioCanNotAddAnyAncestor stamp: 'fr 11/9/2020 09:26:57'!
PASSED!

!testRun: #PortfolioTest #test18PortfolioCanNotAddAnyPreviousMemberOfTheTree stamp: 'fr 11/9/2020 09:26:57'!
PASSED!

!testRun: #PortfolioTest #test19PortfolioCanNotAddAnotherOneWhichSharesChild stamp: 'fr 11/9/2020 09:26:57'!
PASSED!

!testRun: #PortfolioTest #test20PortfolioCanNotAddDuplicateAccountIndirectly stamp: 'fr 11/9/2020 09:26:57'!
PASSED!

!testRun: #PortfolioTest #test21AddingShouldBehaveIdenticallyAsCreatingAPortfolioWithAccounts stamp: 'fr 11/9/2020 09:26:57'!
PASSED!

!testRun: #PortfolioTest #test22CreatingAPortfolioWithAccountsShouldFailIdenticallyAsWhenAddingThem stamp: 'fr 11/9/2020 09:26:57'!
PASSED!
!PortfolioTest methodsFor: 'tests - transactions' stamp: 'fr 11/9/2020 09:27:07' prior: 50885897!
test09PortfolioWithASingleAccountExhibitsItsTransactions

	| deposit |
	deposit _ self deposit100OnAccount.
	self assert: [portfolioWithAccount transactions = (OrderedCollection with: deposit)]! !

!testRun: #PortfolioTest #test09PortfolioWithASingleAccountExhibitsItsTransactions stamp: 'fr 11/9/2020 09:27:10'!
PASSED!

!testRun: #PortfolioTest #test01EmptyPortfolioHasBalanceZero stamp: 'fr 11/9/2020 09:27:10'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioWithASingleAccountWithNoTransactionsHasBalanceZero stamp: 'fr 11/9/2020 09:27:10'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioWithASingleAccountReflectsItsTransactionsValuesInItsBalance stamp: 'fr 11/9/2020 09:27:10'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithMultipleAccountsAndPortfoliosReflectsTheirTransactionsValuesInItsBalance stamp: 'fr 11/9/2020 09:27:10'!
PASSED!

!testRun: #PortfolioTest #test05EmptyPortfolioHasNotRegisteredAnyTransaction stamp: 'fr 11/9/2020 09:27:10'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioWithASingleAccountRegistersItsTransactions stamp: 'fr 11/9/2020 09:27:10'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioWithMulltipleAccountsAndPortfoliosRegistersAllTheirTransactions stamp: 'fr 11/9/2020 09:27:10'!
PASSED!

!testRun: #PortfolioTest #test08EmptyPortfolioDoesNotExhibitAnyTransaction stamp: 'fr 11/9/2020 09:27:10'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithASingleAccountExhibitsItsTransactions stamp: 'fr 11/9/2020 09:27:10'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioWithMultipleAccountsAndPortfoliosExhibitsAllTheirTransactionsCombined stamp: 'fr 11/9/2020 09:27:10'!
PASSED!

!testRun: #PortfolioTest #test11EmptyPortfolioDoesNotContainAnyAccount stamp: 'fr 11/9/2020 09:27:10'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioContainsAnAccountAfterItIsAdded stamp: 'fr 11/9/2020 09:27:10'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioContainsAnAccountAfterItIsAddedToAnyOfItsDecendents stamp: 'fr 11/9/2020 09:27:10'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioDoesNotContainAnythingThatWasNotAddedToItself stamp: 'fr 11/9/2020 09:27:10'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotAddItself stamp: 'fr 11/9/2020 09:27:10'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioCanNotAddItsParent stamp: 'fr 11/9/2020 09:27:10'!
PASSED!

!testRun: #PortfolioTest #test17PortfolioCanNotAddAnyAncestor stamp: 'fr 11/9/2020 09:27:10'!
PASSED!

!testRun: #PortfolioTest #test18PortfolioCanNotAddAnyPreviousMemberOfTheTree stamp: 'fr 11/9/2020 09:27:10'!
PASSED!

!testRun: #PortfolioTest #test19PortfolioCanNotAddAnotherOneWhichSharesChild stamp: 'fr 11/9/2020 09:27:10'!
PASSED!

!testRun: #PortfolioTest #test20PortfolioCanNotAddDuplicateAccountIndirectly stamp: 'fr 11/9/2020 09:27:10'!
PASSED!

!testRun: #PortfolioTest #test21AddingShouldBehaveIdenticallyAsCreatingAPortfolioWithAccounts stamp: 'fr 11/9/2020 09:27:10'!
PASSED!

!testRun: #PortfolioTest #test22CreatingAPortfolioWithAccountsShouldFailIdenticallyAsWhenAddingThem stamp: 'fr 11/9/2020 09:27:10'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithASingleAccountExhibitsItsTransactions stamp: 'fr 11/9/2020 09:27:11'!
PASSED!

!testRun: #PortfolioTest #test01EmptyPortfolioHasBalanceZero stamp: 'fr 11/9/2020 09:27:11'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioWithASingleAccountWithNoTransactionsHasBalanceZero stamp: 'fr 11/9/2020 09:27:11'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioWithASingleAccountReflectsItsTransactionsValuesInItsBalance stamp: 'fr 11/9/2020 09:27:11'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithMultipleAccountsAndPortfoliosReflectsTheirTransactionsValuesInItsBalance stamp: 'fr 11/9/2020 09:27:11'!
PASSED!

!testRun: #PortfolioTest #test05EmptyPortfolioHasNotRegisteredAnyTransaction stamp: 'fr 11/9/2020 09:27:11'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioWithASingleAccountRegistersItsTransactions stamp: 'fr 11/9/2020 09:27:11'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioWithMulltipleAccountsAndPortfoliosRegistersAllTheirTransactions stamp: 'fr 11/9/2020 09:27:11'!
PASSED!

!testRun: #PortfolioTest #test08EmptyPortfolioDoesNotExhibitAnyTransaction stamp: 'fr 11/9/2020 09:27:11'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithASingleAccountExhibitsItsTransactions stamp: 'fr 11/9/2020 09:27:11'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioWithMultipleAccountsAndPortfoliosExhibitsAllTheirTransactionsCombined stamp: 'fr 11/9/2020 09:27:11'!
PASSED!

!testRun: #PortfolioTest #test11EmptyPortfolioDoesNotContainAnyAccount stamp: 'fr 11/9/2020 09:27:11'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioContainsAnAccountAfterItIsAdded stamp: 'fr 11/9/2020 09:27:11'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioContainsAnAccountAfterItIsAddedToAnyOfItsDecendents stamp: 'fr 11/9/2020 09:27:11'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioDoesNotContainAnythingThatWasNotAddedToItself stamp: 'fr 11/9/2020 09:27:11'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotAddItself stamp: 'fr 11/9/2020 09:27:11'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioCanNotAddItsParent stamp: 'fr 11/9/2020 09:27:11'!
PASSED!

!testRun: #PortfolioTest #test17PortfolioCanNotAddAnyAncestor stamp: 'fr 11/9/2020 09:27:11'!
PASSED!

!testRun: #PortfolioTest #test18PortfolioCanNotAddAnyPreviousMemberOfTheTree stamp: 'fr 11/9/2020 09:27:11'!
PASSED!

!testRun: #PortfolioTest #test19PortfolioCanNotAddAnotherOneWhichSharesChild stamp: 'fr 11/9/2020 09:27:11'!
PASSED!

!testRun: #PortfolioTest #test20PortfolioCanNotAddDuplicateAccountIndirectly stamp: 'fr 11/9/2020 09:27:11'!
PASSED!

!testRun: #PortfolioTest #test21AddingShouldBehaveIdenticallyAsCreatingAPortfolioWithAccounts stamp: 'fr 11/9/2020 09:27:11'!
PASSED!

!testRun: #PortfolioTest #test22CreatingAPortfolioWithAccountsShouldFailIdenticallyAsWhenAddingThem stamp: 'fr 11/9/2020 09:27:11'!
PASSED!
!PortfolioTest methodsFor: 'tests - transactions' stamp: 'fr 11/9/2020 09:27:18' prior: 50887255!
test10PortfolioWithMultipleAccountsAndPortfoliosExhibitsAllTheirTransactionsCombined

	| anotherDeposit deposit |
		
	deposit _ self deposit100OnAccount.
	anotherDeposit _ Deposit register: 50 on: anotherAccount.
	 
	self assert: [portfolioWithAccountAndPortfolio transactions = (OrderedCollection with: anotherDeposit with: deposit	)]! !

!testRun: #PortfolioTest #test10PortfolioWithMultipleAccountsAndPortfoliosExhibitsAllTheirTransactionsCombined stamp: 'fr 11/9/2020 09:27:18'!
PASSED!

!testRun: #PortfolioTest #test01EmptyPortfolioHasBalanceZero stamp: 'fr 11/9/2020 09:27:18'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioWithASingleAccountWithNoTransactionsHasBalanceZero stamp: 'fr 11/9/2020 09:27:18'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioWithASingleAccountReflectsItsTransactionsValuesInItsBalance stamp: 'fr 11/9/2020 09:27:18'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithMultipleAccountsAndPortfoliosReflectsTheirTransactionsValuesInItsBalance stamp: 'fr 11/9/2020 09:27:18'!
PASSED!

!testRun: #PortfolioTest #test05EmptyPortfolioHasNotRegisteredAnyTransaction stamp: 'fr 11/9/2020 09:27:18'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioWithASingleAccountRegistersItsTransactions stamp: 'fr 11/9/2020 09:27:18'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioWithMulltipleAccountsAndPortfoliosRegistersAllTheirTransactions stamp: 'fr 11/9/2020 09:27:18'!
PASSED!

!testRun: #PortfolioTest #test08EmptyPortfolioDoesNotExhibitAnyTransaction stamp: 'fr 11/9/2020 09:27:18'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithASingleAccountExhibitsItsTransactions stamp: 'fr 11/9/2020 09:27:18'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioWithMultipleAccountsAndPortfoliosExhibitsAllTheirTransactionsCombined stamp: 'fr 11/9/2020 09:27:18'!
PASSED!

!testRun: #PortfolioTest #test11EmptyPortfolioDoesNotContainAnyAccount stamp: 'fr 11/9/2020 09:27:18'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioContainsAnAccountAfterItIsAdded stamp: 'fr 11/9/2020 09:27:18'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioContainsAnAccountAfterItIsAddedToAnyOfItsDecendents stamp: 'fr 11/9/2020 09:27:18'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioDoesNotContainAnythingThatWasNotAddedToItself stamp: 'fr 11/9/2020 09:27:18'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotAddItself stamp: 'fr 11/9/2020 09:27:18'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioCanNotAddItsParent stamp: 'fr 11/9/2020 09:27:18'!
PASSED!

!testRun: #PortfolioTest #test17PortfolioCanNotAddAnyAncestor stamp: 'fr 11/9/2020 09:27:18'!
PASSED!

!testRun: #PortfolioTest #test18PortfolioCanNotAddAnyPreviousMemberOfTheTree stamp: 'fr 11/9/2020 09:27:18'!
PASSED!

!testRun: #PortfolioTest #test19PortfolioCanNotAddAnotherOneWhichSharesChild stamp: 'fr 11/9/2020 09:27:18'!
PASSED!

!testRun: #PortfolioTest #test20PortfolioCanNotAddDuplicateAccountIndirectly stamp: 'fr 11/9/2020 09:27:18'!
PASSED!

!testRun: #PortfolioTest #test21AddingShouldBehaveIdenticallyAsCreatingAPortfolioWithAccounts stamp: 'fr 11/9/2020 09:27:18'!
PASSED!

!testRun: #PortfolioTest #test22CreatingAPortfolioWithAccountsShouldFailIdenticallyAsWhenAddingThem stamp: 'fr 11/9/2020 09:27:18'!
PASSED!
!PortfolioTest methodsFor: 'tests - balance' stamp: 'fr 11/9/2020 09:28:47' prior: 50885572!
test03PortfolioWithASingleAccountReflectsItsTransactionsValuesInItsBalance

	self deposit100OnAccount.
	self assert: [portfolioWithAccount balance = 100]! !

!testRun: #PortfolioTest #test03PortfolioWithASingleAccountReflectsItsTransactionsValuesInItsBalance stamp: 'fr 11/9/2020 09:28:48'!
PASSED!

!testRun: #PortfolioTest #test01EmptyPortfolioHasBalanceZero stamp: 'fr 11/9/2020 09:28:48'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioWithASingleAccountWithNoTransactionsHasBalanceZero stamp: 'fr 11/9/2020 09:28:48'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioWithASingleAccountReflectsItsTransactionsValuesInItsBalance stamp: 'fr 11/9/2020 09:28:48'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithMultipleAccountsAndPortfoliosReflectsTheirTransactionsValuesInItsBalance stamp: 'fr 11/9/2020 09:28:48'!
PASSED!

!testRun: #PortfolioTest #test05EmptyPortfolioHasNotRegisteredAnyTransaction stamp: 'fr 11/9/2020 09:28:48'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioWithASingleAccountRegistersItsTransactions stamp: 'fr 11/9/2020 09:28:48'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioWithMulltipleAccountsAndPortfoliosRegistersAllTheirTransactions stamp: 'fr 11/9/2020 09:28:48'!
PASSED!

!testRun: #PortfolioTest #test08EmptyPortfolioDoesNotExhibitAnyTransaction stamp: 'fr 11/9/2020 09:28:48'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithASingleAccountExhibitsItsTransactions stamp: 'fr 11/9/2020 09:28:48'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioWithMultipleAccountsAndPortfoliosExhibitsAllTheirTransactionsCombined stamp: 'fr 11/9/2020 09:28:48'!
PASSED!

!testRun: #PortfolioTest #test11EmptyPortfolioDoesNotContainAnyAccount stamp: 'fr 11/9/2020 09:28:48'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioContainsAnAccountAfterItIsAdded stamp: 'fr 11/9/2020 09:28:48'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioContainsAnAccountAfterItIsAddedToAnyOfItsDecendents stamp: 'fr 11/9/2020 09:28:48'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioDoesNotContainAnythingThatWasNotAddedToItself stamp: 'fr 11/9/2020 09:28:48'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotAddItself stamp: 'fr 11/9/2020 09:28:48'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioCanNotAddItsParent stamp: 'fr 11/9/2020 09:28:48'!
PASSED!

!testRun: #PortfolioTest #test17PortfolioCanNotAddAnyAncestor stamp: 'fr 11/9/2020 09:28:48'!
PASSED!

!testRun: #PortfolioTest #test18PortfolioCanNotAddAnyPreviousMemberOfTheTree stamp: 'fr 11/9/2020 09:28:48'!
PASSED!

!testRun: #PortfolioTest #test19PortfolioCanNotAddAnotherOneWhichSharesChild stamp: 'fr 11/9/2020 09:28:48'!
PASSED!

!testRun: #PortfolioTest #test20PortfolioCanNotAddDuplicateAccountIndirectly stamp: 'fr 11/9/2020 09:28:48'!
PASSED!

!testRun: #PortfolioTest #test21AddingShouldBehaveIdenticallyAsCreatingAPortfolioWithAccounts stamp: 'fr 11/9/2020 09:28:48'!
PASSED!

!testRun: #PortfolioTest #test22CreatingAPortfolioWithAccountsShouldFailIdenticallyAsWhenAddingThem stamp: 'fr 11/9/2020 09:28:48'!
PASSED!
!PortfolioTest methodsFor: 'tests - balance' stamp: 'fr 11/9/2020 09:29:15' prior: 50887215!
test04PortfolioWithMultipleAccountsAndPortfoliosReflectsTheirTransactionsValuesInItsBalance

	self deposit100OnAccount.
	Deposit register: 50 on: anotherAccount.

	self assert: [portfolioWithAccountAndPortfolio balance = 150]! !
!PortfolioTest methodsFor: 'tests - balance' stamp: 'fr 11/9/2020 09:30:00'!
deposit50OnAnotherAccount

	^ Deposit register: 50 on: anotherAccount! !
!PortfolioTest methodsFor: 'tests - balance' stamp: 'fr 11/9/2020 09:30:00' prior: 50887977!
test04PortfolioWithMultipleAccountsAndPortfoliosReflectsTheirTransactionsValuesInItsBalance

	self deposit100OnAccount.
	self deposit50OnAnotherAccount.

	self assert: [portfolioWithAccountAndPortfolio balance = 150]! !
!PortfolioTest methodsFor: 'tests - hasRegistered' stamp: 'fr 11/9/2020 09:30:21' prior: 50887481!
test07PortfolioWithMulltipleAccountsAndPortfoliosRegistersAllTheirTransactions

	| anotherDeposit deposit |
		
	deposit _ self deposit100OnAccount.
	anotherDeposit _ self deposit50OnAnotherAccount.
	 
	self assert: [
		(portfolioWithAccountAndPortfolio hasRegistered: deposit) and: 
		[portfolioWithAccountAndPortfolio hasRegistered: anotherDeposit]
	]! !

!testRun: #PortfolioTest #test07PortfolioWithMulltipleAccountsAndPortfoliosRegistersAllTheirTransactions stamp: 'fr 11/9/2020 09:30:21'!
PASSED!

!testRun: #PortfolioTest #test01EmptyPortfolioHasBalanceZero stamp: 'fr 11/9/2020 09:30:21'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioWithASingleAccountWithNoTransactionsHasBalanceZero stamp: 'fr 11/9/2020 09:30:21'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioWithASingleAccountReflectsItsTransactionsValuesInItsBalance stamp: 'fr 11/9/2020 09:30:21'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithMultipleAccountsAndPortfoliosReflectsTheirTransactionsValuesInItsBalance stamp: 'fr 11/9/2020 09:30:21'!
PASSED!

!testRun: #PortfolioTest #test05EmptyPortfolioHasNotRegisteredAnyTransaction stamp: 'fr 11/9/2020 09:30:21'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioWithASingleAccountRegistersItsTransactions stamp: 'fr 11/9/2020 09:30:21'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioWithMulltipleAccountsAndPortfoliosRegistersAllTheirTransactions stamp: 'fr 11/9/2020 09:30:21'!
PASSED!

!testRun: #PortfolioTest #test08EmptyPortfolioDoesNotExhibitAnyTransaction stamp: 'fr 11/9/2020 09:30:21'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithASingleAccountExhibitsItsTransactions stamp: 'fr 11/9/2020 09:30:21'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioWithMultipleAccountsAndPortfoliosExhibitsAllTheirTransactionsCombined stamp: 'fr 11/9/2020 09:30:21'!
PASSED!

!testRun: #PortfolioTest #test11EmptyPortfolioDoesNotContainAnyAccount stamp: 'fr 11/9/2020 09:30:21'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioContainsAnAccountAfterItIsAdded stamp: 'fr 11/9/2020 09:30:21'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioContainsAnAccountAfterItIsAddedToAnyOfItsDecendents stamp: 'fr 11/9/2020 09:30:21'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioDoesNotContainAnythingThatWasNotAddedToItself stamp: 'fr 11/9/2020 09:30:21'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotAddItself stamp: 'fr 11/9/2020 09:30:21'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioCanNotAddItsParent stamp: 'fr 11/9/2020 09:30:21'!
PASSED!

!testRun: #PortfolioTest #test17PortfolioCanNotAddAnyAncestor stamp: 'fr 11/9/2020 09:30:21'!
PASSED!

!testRun: #PortfolioTest #test18PortfolioCanNotAddAnyPreviousMemberOfTheTree stamp: 'fr 11/9/2020 09:30:21'!
PASSED!

!testRun: #PortfolioTest #test19PortfolioCanNotAddAnotherOneWhichSharesChild stamp: 'fr 11/9/2020 09:30:21'!
PASSED!

!testRun: #PortfolioTest #test20PortfolioCanNotAddDuplicateAccountIndirectly stamp: 'fr 11/9/2020 09:30:21'!
PASSED!

!testRun: #PortfolioTest #test21AddingShouldBehaveIdenticallyAsCreatingAPortfolioWithAccounts stamp: 'fr 11/9/2020 09:30:21'!
PASSED!

!testRun: #PortfolioTest #test22CreatingAPortfolioWithAccountsShouldFailIdenticallyAsWhenAddingThem stamp: 'fr 11/9/2020 09:30:21'!
PASSED!
!PortfolioTest methodsFor: 'tests - transactions' stamp: 'fr 11/9/2020 09:30:35' prior: 50887775!
test10PortfolioWithMultipleAccountsAndPortfoliosExhibitsAllTheirTransactionsCombined

	| anotherDeposit deposit |
		
	deposit _ self deposit100OnAccount.
	anotherDeposit _ self deposit50OnAnotherAccount.
	 
	self assert: [portfolioWithAccountAndPortfolio transactions = (OrderedCollection with: anotherDeposit with: deposit	)]! !
!PortfolioTest methodsFor: 'tests - hasRegistered' stamp: 'fr 11/9/2020 09:33:51' prior: 50887472!
test05EmptyPortfolioHasNotRegisteredAnyTransaction

	| deposit1 |
	deposit1 _ self deposit100OnAccount.
	self assert: [(emptyPortfolio hasRegistered: deposit1) not]! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'fr 11/9/2020 09:33:59' prior: 50888122!
test05EmptyPortfolioHasNotRegisteredAnyTransaction

	 
	deposit1 _ self deposit100OnAccount.
	self assert: [(emptyPortfolio hasRegistered: deposit1) not]! !

!classDefinition: #PortfolioTest category: 'Portfolio-Ejercicio' stamp: 'fr 11/9/2020 09:33:59'!
TestCase subclass: #PortfolioTest
	instanceVariableNames: 'emptyPortfolio account portfolioWithAccount anotherAccount portfolioWithAccountAndPortfolio deposit1'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!
!PortfolioTest methodsFor: 'tests - hasRegistered' stamp: 'fr 11/9/2020 09:34:02' prior: 50888131!
test05EmptyPortfolioHasNotRegisteredAnyTransaction

	deposit1 _ self deposit100OnAccount.
	self assert: [(emptyPortfolio hasRegistered: deposit1) not]! !
!PortfolioTest methodsFor: 'tests - hasRegistered' stamp: 'fr 11/9/2020 09:34:16' prior: 50887374!
test06PortfolioWithASingleAccountRegistersItsTransactions

	deposit1 _ self deposit100OnAccount.	
	self assert: [portfolioWithAccount hasRegistered: deposit1]! !
!PortfolioTest methodsFor: 'tests - hasRegistered' stamp: 'fr 11/9/2020 09:34:26' prior: 50888003!
test07PortfolioWithMulltipleAccountsAndPortfoliosRegistersAllTheirTransactions

	| anotherDeposit |
		
	deposit1 _ self deposit100OnAccount.
	anotherDeposit _ self deposit50OnAnotherAccount.
	 
	self assert: [
		(portfolioWithAccountAndPortfolio hasRegistered: deposit1) and: 
		[portfolioWithAccountAndPortfolio hasRegistered: anotherDeposit]
	]! !

!testRun: #PortfolioTest #test07PortfolioWithMulltipleAccountsAndPortfoliosRegistersAllTheirTransactions stamp: 'fr 11/9/2020 09:34:28'!
PASSED!

!testRun: #PortfolioTest #test01EmptyPortfolioHasBalanceZero stamp: 'fr 11/9/2020 09:34:28'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioWithASingleAccountWithNoTransactionsHasBalanceZero stamp: 'fr 11/9/2020 09:34:28'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioWithASingleAccountReflectsItsTransactionsValuesInItsBalance stamp: 'fr 11/9/2020 09:34:28'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithMultipleAccountsAndPortfoliosReflectsTheirTransactionsValuesInItsBalance stamp: 'fr 11/9/2020 09:34:28'!
PASSED!

!testRun: #PortfolioTest #test05EmptyPortfolioHasNotRegisteredAnyTransaction stamp: 'fr 11/9/2020 09:34:28'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioWithASingleAccountRegistersItsTransactions stamp: 'fr 11/9/2020 09:34:28'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioWithMulltipleAccountsAndPortfoliosRegistersAllTheirTransactions stamp: 'fr 11/9/2020 09:34:28'!
PASSED!

!testRun: #PortfolioTest #test08EmptyPortfolioDoesNotExhibitAnyTransaction stamp: 'fr 11/9/2020 09:34:28'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithASingleAccountExhibitsItsTransactions stamp: 'fr 11/9/2020 09:34:28'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioWithMultipleAccountsAndPortfoliosExhibitsAllTheirTransactionsCombined stamp: 'fr 11/9/2020 09:34:28'!
PASSED!

!testRun: #PortfolioTest #test11EmptyPortfolioDoesNotContainAnyAccount stamp: 'fr 11/9/2020 09:34:28'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioContainsAnAccountAfterItIsAdded stamp: 'fr 11/9/2020 09:34:28'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioContainsAnAccountAfterItIsAddedToAnyOfItsDecendents stamp: 'fr 11/9/2020 09:34:28'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioDoesNotContainAnythingThatWasNotAddedToItself stamp: 'fr 11/9/2020 09:34:28'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotAddItself stamp: 'fr 11/9/2020 09:34:28'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioCanNotAddItsParent stamp: 'fr 11/9/2020 09:34:28'!
PASSED!

!testRun: #PortfolioTest #test17PortfolioCanNotAddAnyAncestor stamp: 'fr 11/9/2020 09:34:28'!
PASSED!

!testRun: #PortfolioTest #test18PortfolioCanNotAddAnyPreviousMemberOfTheTree stamp: 'fr 11/9/2020 09:34:28'!
PASSED!

!testRun: #PortfolioTest #test19PortfolioCanNotAddAnotherOneWhichSharesChild stamp: 'fr 11/9/2020 09:34:28'!
PASSED!

!testRun: #PortfolioTest #test20PortfolioCanNotAddDuplicateAccountIndirectly stamp: 'fr 11/9/2020 09:34:28'!
PASSED!

!testRun: #PortfolioTest #test21AddingShouldBehaveIdenticallyAsCreatingAPortfolioWithAccounts stamp: 'fr 11/9/2020 09:34:28'!
PASSED!

!testRun: #PortfolioTest #test22CreatingAPortfolioWithAccountsShouldFailIdenticallyAsWhenAddingThem stamp: 'fr 11/9/2020 09:34:28'!
PASSED!
!PortfolioTest methodsFor: 'tests - transactions' stamp: 'fr 11/9/2020 09:34:38' prior: 50887586!
test09PortfolioWithASingleAccountExhibitsItsTransactions

	deposit1 _ self deposit100OnAccount.
	self assert: [portfolioWithAccount transactions = (OrderedCollection with: deposit1)]! !

!testRun: #PortfolioTest #test09PortfolioWithASingleAccountExhibitsItsTransactions stamp: 'fr 11/9/2020 09:34:39'!
PASSED!

!testRun: #PortfolioTest #test01EmptyPortfolioHasBalanceZero stamp: 'fr 11/9/2020 09:34:39'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioWithASingleAccountWithNoTransactionsHasBalanceZero stamp: 'fr 11/9/2020 09:34:39'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioWithASingleAccountReflectsItsTransactionsValuesInItsBalance stamp: 'fr 11/9/2020 09:34:39'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithMultipleAccountsAndPortfoliosReflectsTheirTransactionsValuesInItsBalance stamp: 'fr 11/9/2020 09:34:39'!
PASSED!

!testRun: #PortfolioTest #test05EmptyPortfolioHasNotRegisteredAnyTransaction stamp: 'fr 11/9/2020 09:34:39'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioWithASingleAccountRegistersItsTransactions stamp: 'fr 11/9/2020 09:34:39'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioWithMulltipleAccountsAndPortfoliosRegistersAllTheirTransactions stamp: 'fr 11/9/2020 09:34:39'!
PASSED!

!testRun: #PortfolioTest #test08EmptyPortfolioDoesNotExhibitAnyTransaction stamp: 'fr 11/9/2020 09:34:39'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithASingleAccountExhibitsItsTransactions stamp: 'fr 11/9/2020 09:34:39'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioWithMultipleAccountsAndPortfoliosExhibitsAllTheirTransactionsCombined stamp: 'fr 11/9/2020 09:34:39'!
PASSED!

!testRun: #PortfolioTest #test11EmptyPortfolioDoesNotContainAnyAccount stamp: 'fr 11/9/2020 09:34:39'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioContainsAnAccountAfterItIsAdded stamp: 'fr 11/9/2020 09:34:39'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioContainsAnAccountAfterItIsAddedToAnyOfItsDecendents stamp: 'fr 11/9/2020 09:34:39'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioDoesNotContainAnythingThatWasNotAddedToItself stamp: 'fr 11/9/2020 09:34:39'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotAddItself stamp: 'fr 11/9/2020 09:34:39'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioCanNotAddItsParent stamp: 'fr 11/9/2020 09:34:39'!
PASSED!

!testRun: #PortfolioTest #test17PortfolioCanNotAddAnyAncestor stamp: 'fr 11/9/2020 09:34:39'!
PASSED!

!testRun: #PortfolioTest #test18PortfolioCanNotAddAnyPreviousMemberOfTheTree stamp: 'fr 11/9/2020 09:34:39'!
PASSED!

!testRun: #PortfolioTest #test19PortfolioCanNotAddAnotherOneWhichSharesChild stamp: 'fr 11/9/2020 09:34:39'!
PASSED!

!testRun: #PortfolioTest #test20PortfolioCanNotAddDuplicateAccountIndirectly stamp: 'fr 11/9/2020 09:34:39'!
PASSED!

!testRun: #PortfolioTest #test21AddingShouldBehaveIdenticallyAsCreatingAPortfolioWithAccounts stamp: 'fr 11/9/2020 09:34:39'!
PASSED!

!testRun: #PortfolioTest #test22CreatingAPortfolioWithAccountsShouldFailIdenticallyAsWhenAddingThem stamp: 'fr 11/9/2020 09:34:39'!
PASSED!
!PortfolioTest methodsFor: 'tests - transactions' stamp: 'fr 11/9/2020 09:34:52' prior: 50888108!
test10PortfolioWithMultipleAccountsAndPortfoliosExhibitsAllTheirTransactionsCombined

	| anotherDeposit |
		
	deposit1 _ self deposit100OnAccount.
	anotherDeposit _ self deposit50OnAnotherAccount.
	 
	self assert: [portfolioWithAccountAndPortfolio transactions = (OrderedCollection with: anotherDeposit with: deposit1	)]! !

!testRun: #PortfolioTest #test10PortfolioWithMultipleAccountsAndPortfoliosExhibitsAllTheirTransactionsCombined stamp: 'fr 11/9/2020 09:34:53'!
PASSED!

!testRun: #PortfolioTest #test01EmptyPortfolioHasBalanceZero stamp: 'fr 11/9/2020 09:34:53'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioWithASingleAccountWithNoTransactionsHasBalanceZero stamp: 'fr 11/9/2020 09:34:53'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioWithASingleAccountReflectsItsTransactionsValuesInItsBalance stamp: 'fr 11/9/2020 09:34:53'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithMultipleAccountsAndPortfoliosReflectsTheirTransactionsValuesInItsBalance stamp: 'fr 11/9/2020 09:34:53'!
PASSED!

!testRun: #PortfolioTest #test05EmptyPortfolioHasNotRegisteredAnyTransaction stamp: 'fr 11/9/2020 09:34:53'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioWithASingleAccountRegistersItsTransactions stamp: 'fr 11/9/2020 09:34:53'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioWithMulltipleAccountsAndPortfoliosRegistersAllTheirTransactions stamp: 'fr 11/9/2020 09:34:53'!
PASSED!

!testRun: #PortfolioTest #test08EmptyPortfolioDoesNotExhibitAnyTransaction stamp: 'fr 11/9/2020 09:34:53'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithASingleAccountExhibitsItsTransactions stamp: 'fr 11/9/2020 09:34:53'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioWithMultipleAccountsAndPortfoliosExhibitsAllTheirTransactionsCombined stamp: 'fr 11/9/2020 09:34:53'!
PASSED!

!testRun: #PortfolioTest #test11EmptyPortfolioDoesNotContainAnyAccount stamp: 'fr 11/9/2020 09:34:53'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioContainsAnAccountAfterItIsAdded stamp: 'fr 11/9/2020 09:34:53'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioContainsAnAccountAfterItIsAddedToAnyOfItsDecendents stamp: 'fr 11/9/2020 09:34:53'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioDoesNotContainAnythingThatWasNotAddedToItself stamp: 'fr 11/9/2020 09:34:53'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotAddItself stamp: 'fr 11/9/2020 09:34:53'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioCanNotAddItsParent stamp: 'fr 11/9/2020 09:34:53'!
PASSED!

!testRun: #PortfolioTest #test17PortfolioCanNotAddAnyAncestor stamp: 'fr 11/9/2020 09:34:53'!
PASSED!

!testRun: #PortfolioTest #test18PortfolioCanNotAddAnyPreviousMemberOfTheTree stamp: 'fr 11/9/2020 09:34:53'!
PASSED!

!testRun: #PortfolioTest #test19PortfolioCanNotAddAnotherOneWhichSharesChild stamp: 'fr 11/9/2020 09:34:53'!
PASSED!

!testRun: #PortfolioTest #test20PortfolioCanNotAddDuplicateAccountIndirectly stamp: 'fr 11/9/2020 09:34:53'!
PASSED!

!testRun: #PortfolioTest #test21AddingShouldBehaveIdenticallyAsCreatingAPortfolioWithAccounts stamp: 'fr 11/9/2020 09:34:53'!
PASSED!

!testRun: #PortfolioTest #test22CreatingAPortfolioWithAccountsShouldFailIdenticallyAsWhenAddingThem stamp: 'fr 11/9/2020 09:34:53'!
PASSED!

!classDefinition: #PortfolioTest category: 'Portfolio-Ejercicio' stamp: 'fr 11/9/2020 09:35:17'!
TestCase subclass: #PortfolioTest
	instanceVariableNames: 'emptyPortfolio account portfolioWithAccount anotherAccount portfolioWithAccountAndPortfolio deposit'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'fr 11/9/2020 09:35:17' prior: 50888272!
test09PortfolioWithASingleAccountExhibitsItsTransactions

	deposit _ self deposit100OnAccount.
	self assert: [portfolioWithAccount transactions = (OrderedCollection with: deposit)]! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'fr 11/9/2020 09:35:17' prior: 50888371!
test10PortfolioWithMultipleAccountsAndPortfoliosExhibitsAllTheirTransactionsCombined

	| anotherDeposit |
		
	deposit _ self deposit100OnAccount.
	anotherDeposit _ self deposit50OnAnotherAccount.
	 
	self assert: [portfolioWithAccountAndPortfolio transactions = (OrderedCollection with: anotherDeposit with: deposit	)]! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'fr 11/9/2020 09:35:17' prior: 50888150!
test05EmptyPortfolioHasNotRegisteredAnyTransaction

	deposit _ self deposit100OnAccount.
	self assert: [(emptyPortfolio hasRegistered: deposit) not]! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'fr 11/9/2020 09:35:17' prior: 50888158!
test06PortfolioWithASingleAccountRegistersItsTransactions

	deposit _ self deposit100OnAccount.	
	self assert: [portfolioWithAccount hasRegistered: deposit]! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'fr 11/9/2020 09:35:17' prior: 50888167!
test07PortfolioWithMulltipleAccountsAndPortfoliosRegistersAllTheirTransactions

	| anotherDeposit |
		
	deposit _ self deposit100OnAccount.
	anotherDeposit _ self deposit50OnAnotherAccount.
	 
	self assert: [
		(portfolioWithAccountAndPortfolio hasRegistered: deposit) and: 
		[portfolioWithAccountAndPortfolio hasRegistered: anotherDeposit]
	]! !
!PortfolioTest methodsFor: 'tests - hasRegistered' stamp: 'fr 11/9/2020 09:36:04' prior: 50888525!
test07PortfolioWithMulltipleAccountsAndPortfoliosRegistersAllTheirTransactions

	| anotherDeposit1 |
		
	deposit _ self deposit100OnAccount.
	anotherDeposit1 _ self deposit50OnAnotherAccount.
	 
	self assert: [
		(portfolioWithAccountAndPortfolio hasRegistered: deposit) and: 
		[portfolioWithAccountAndPortfolio hasRegistered: anotherDeposit1]
	]! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'fr 11/9/2020 09:36:12' prior: 50888539!
test07PortfolioWithMulltipleAccountsAndPortfoliosRegistersAllTheirTransactions

	 
		
	deposit _ self deposit100OnAccount.
	anotherDeposit1 _ self deposit50OnAnotherAccount.
	 
	self assert: [
		(portfolioWithAccountAndPortfolio hasRegistered: deposit) and: 
		[portfolioWithAccountAndPortfolio hasRegistered: anotherDeposit1]
	]! !

!classDefinition: #PortfolioTest category: 'Portfolio-Ejercicio' stamp: 'fr 11/9/2020 09:36:12'!
TestCase subclass: #PortfolioTest
	instanceVariableNames: 'emptyPortfolio account portfolioWithAccount anotherAccount portfolioWithAccountAndPortfolio deposit anotherDeposit1'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!
!PortfolioTest methodsFor: 'tests - hasRegistered' stamp: 'fr 11/9/2020 09:36:15' prior: 50888553!
test07PortfolioWithMulltipleAccountsAndPortfoliosRegistersAllTheirTransactions
		
	deposit _ self deposit100OnAccount.
	anotherDeposit1 _ self deposit50OnAnotherAccount.
	 
	self assert: [
		(portfolioWithAccountAndPortfolio hasRegistered: deposit) and: 
		[portfolioWithAccountAndPortfolio hasRegistered: anotherDeposit1]
	]! !
!PortfolioTest methodsFor: 'tests - transactions' stamp: 'fr 11/9/2020 09:36:29' prior: 50888494!
test10PortfolioWithMultipleAccountsAndPortfoliosExhibitsAllTheirTransactionsCombined
		
	deposit _ self deposit100OnAccount.
	anotherDeposit1 _ self deposit50OnAnotherAccount.
	 
	self assert: [portfolioWithAccountAndPortfolio transactions = (OrderedCollection with: anotherDeposit1 with: deposit	)]! !

!classDefinition: #PortfolioTest category: 'Portfolio-Ejercicio' stamp: 'fr 11/9/2020 09:36:53'!
TestCase subclass: #PortfolioTest
	instanceVariableNames: 'emptyPortfolio account portfolioWithAccount anotherAccount portfolioWithAccountAndPortfolio deposit anotherDeposit'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'fr 11/9/2020 09:36:53' prior: 50888592!
test10PortfolioWithMultipleAccountsAndPortfoliosExhibitsAllTheirTransactionsCombined
		
	deposit _ self deposit100OnAccount.
	anotherDeposit _ self deposit50OnAnotherAccount.
	 
	self assert: [portfolioWithAccountAndPortfolio transactions = (OrderedCollection with: anotherDeposit with: deposit	)]! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'fr 11/9/2020 09:36:53' prior: 50888578!
test07PortfolioWithMulltipleAccountsAndPortfoliosRegistersAllTheirTransactions
		
	deposit _ self deposit100OnAccount.
	anotherDeposit _ self deposit50OnAnotherAccount.
	 
	self assert: [
		(portfolioWithAccountAndPortfolio hasRegistered: deposit) and: 
		[portfolioWithAccountAndPortfolio hasRegistered: anotherDeposit]
	]! !
!PortfolioTest methodsFor: 'tests - hasRegistered' stamp: 'fr 11/9/2020 09:37:40'!
deposit100OnAccount50OnAnotherAccountAndStore

	deposit _ self deposit100OnAccount.
	anotherDeposit _ self deposit50OnAnotherAccount! !
!PortfolioTest methodsFor: 'tests - hasRegistered' stamp: 'fr 11/9/2020 09:37:40' prior: 50888629!
test07PortfolioWithMulltipleAccountsAndPortfoliosRegistersAllTheirTransactions
		
	self deposit100OnAccount50OnAnotherAccountAndStore.
	 
	self assert: [
		(portfolioWithAccountAndPortfolio hasRegistered: deposit) and: 
		[portfolioWithAccountAndPortfolio hasRegistered: anotherDeposit]
	]! !

!testRun: #PortfolioTest #test07PortfolioWithMulltipleAccountsAndPortfoliosRegistersAllTheirTransactions stamp: 'fr 11/9/2020 09:37:44'!
PASSED!

!testRun: #PortfolioTest #test01EmptyPortfolioHasBalanceZero stamp: 'fr 11/9/2020 09:37:44'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioWithASingleAccountWithNoTransactionsHasBalanceZero stamp: 'fr 11/9/2020 09:37:44'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioWithASingleAccountReflectsItsTransactionsValuesInItsBalance stamp: 'fr 11/9/2020 09:37:44'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithMultipleAccountsAndPortfoliosReflectsTheirTransactionsValuesInItsBalance stamp: 'fr 11/9/2020 09:37:44'!
PASSED!

!testRun: #PortfolioTest #test05EmptyPortfolioHasNotRegisteredAnyTransaction stamp: 'fr 11/9/2020 09:37:44'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioWithASingleAccountRegistersItsTransactions stamp: 'fr 11/9/2020 09:37:44'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioWithMulltipleAccountsAndPortfoliosRegistersAllTheirTransactions stamp: 'fr 11/9/2020 09:37:44'!
PASSED!

!testRun: #PortfolioTest #test08EmptyPortfolioDoesNotExhibitAnyTransaction stamp: 'fr 11/9/2020 09:37:44'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithASingleAccountExhibitsItsTransactions stamp: 'fr 11/9/2020 09:37:44'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioWithMultipleAccountsAndPortfoliosExhibitsAllTheirTransactionsCombined stamp: 'fr 11/9/2020 09:37:44'!
PASSED!

!testRun: #PortfolioTest #test11EmptyPortfolioDoesNotContainAnyAccount stamp: 'fr 11/9/2020 09:37:44'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioContainsAnAccountAfterItIsAdded stamp: 'fr 11/9/2020 09:37:44'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioContainsAnAccountAfterItIsAddedToAnyOfItsDecendents stamp: 'fr 11/9/2020 09:37:44'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioDoesNotContainAnythingThatWasNotAddedToItself stamp: 'fr 11/9/2020 09:37:44'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotAddItself stamp: 'fr 11/9/2020 09:37:44'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioCanNotAddItsParent stamp: 'fr 11/9/2020 09:37:44'!
PASSED!

!testRun: #PortfolioTest #test17PortfolioCanNotAddAnyAncestor stamp: 'fr 11/9/2020 09:37:44'!
PASSED!

!testRun: #PortfolioTest #test18PortfolioCanNotAddAnyPreviousMemberOfTheTree stamp: 'fr 11/9/2020 09:37:44'!
PASSED!

!testRun: #PortfolioTest #test19PortfolioCanNotAddAnotherOneWhichSharesChild stamp: 'fr 11/9/2020 09:37:44'!
PASSED!

!testRun: #PortfolioTest #test20PortfolioCanNotAddDuplicateAccountIndirectly stamp: 'fr 11/9/2020 09:37:44'!
PASSED!

!testRun: #PortfolioTest #test21AddingShouldBehaveIdenticallyAsCreatingAPortfolioWithAccounts stamp: 'fr 11/9/2020 09:37:44'!
PASSED!

!testRun: #PortfolioTest #test22CreatingAPortfolioWithAccountsShouldFailIdenticallyAsWhenAddingThem stamp: 'fr 11/9/2020 09:37:44'!
PASSED!
!PortfolioTest methodsFor: 'tests - transactions' stamp: 'fr 11/9/2020 09:37:54' prior: 50888616!
test10PortfolioWithMultipleAccountsAndPortfoliosExhibitsAllTheirTransactionsCombined
		
	self deposit100OnAccount50OnAnotherAccountAndStore.
	 
	self assert: [portfolioWithAccountAndPortfolio transactions = (OrderedCollection with: anotherDeposit with: deposit	)]! !

!testRun: #PortfolioTest #test10PortfolioWithMultipleAccountsAndPortfoliosExhibitsAllTheirTransactionsCombined stamp: 'fr 11/9/2020 09:38:07'!
PASSED!

!testRun: #PortfolioTest #test01EmptyPortfolioHasBalanceZero stamp: 'fr 11/9/2020 09:38:07'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioWithASingleAccountWithNoTransactionsHasBalanceZero stamp: 'fr 11/9/2020 09:38:07'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioWithASingleAccountReflectsItsTransactionsValuesInItsBalance stamp: 'fr 11/9/2020 09:38:07'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithMultipleAccountsAndPortfoliosReflectsTheirTransactionsValuesInItsBalance stamp: 'fr 11/9/2020 09:38:07'!
PASSED!

!testRun: #PortfolioTest #test05EmptyPortfolioHasNotRegisteredAnyTransaction stamp: 'fr 11/9/2020 09:38:07'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioWithASingleAccountRegistersItsTransactions stamp: 'fr 11/9/2020 09:38:07'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioWithMulltipleAccountsAndPortfoliosRegistersAllTheirTransactions stamp: 'fr 11/9/2020 09:38:07'!
PASSED!

!testRun: #PortfolioTest #test08EmptyPortfolioDoesNotExhibitAnyTransaction stamp: 'fr 11/9/2020 09:38:07'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithASingleAccountExhibitsItsTransactions stamp: 'fr 11/9/2020 09:38:07'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioWithMultipleAccountsAndPortfoliosExhibitsAllTheirTransactionsCombined stamp: 'fr 11/9/2020 09:38:07'!
PASSED!

!testRun: #PortfolioTest #test11EmptyPortfolioDoesNotContainAnyAccount stamp: 'fr 11/9/2020 09:38:07'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioContainsAnAccountAfterItIsAdded stamp: 'fr 11/9/2020 09:38:07'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioContainsAnAccountAfterItIsAddedToAnyOfItsDecendents stamp: 'fr 11/9/2020 09:38:07'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioDoesNotContainAnythingThatWasNotAddedToItself stamp: 'fr 11/9/2020 09:38:07'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotAddItself stamp: 'fr 11/9/2020 09:38:07'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioCanNotAddItsParent stamp: 'fr 11/9/2020 09:38:07'!
PASSED!

!testRun: #PortfolioTest #test17PortfolioCanNotAddAnyAncestor stamp: 'fr 11/9/2020 09:38:07'!
PASSED!

!testRun: #PortfolioTest #test18PortfolioCanNotAddAnyPreviousMemberOfTheTree stamp: 'fr 11/9/2020 09:38:07'!
PASSED!

!testRun: #PortfolioTest #test19PortfolioCanNotAddAnotherOneWhichSharesChild stamp: 'fr 11/9/2020 09:38:07'!
PASSED!

!testRun: #PortfolioTest #test20PortfolioCanNotAddDuplicateAccountIndirectly stamp: 'fr 11/9/2020 09:38:07'!
PASSED!

!testRun: #PortfolioTest #test21AddingShouldBehaveIdenticallyAsCreatingAPortfolioWithAccounts stamp: 'fr 11/9/2020 09:38:07'!
PASSED!

!testRun: #PortfolioTest #test22CreatingAPortfolioWithAccountsShouldFailIdenticallyAsWhenAddingThem stamp: 'fr 11/9/2020 09:38:07'!
PASSED!
!PortfolioTest methodsFor: 'tests - transactions' stamp: 'fr 11/9/2020 09:38:27' prior: 50888485!
test09PortfolioWithASingleAccountExhibitsItsTransactions

	deposit _ self deposit100OnAccount.
	
	self assert: [portfolioWithAccount transactions = (OrderedCollection with: deposit)]! !
!PortfolioTest methodsFor: 'tests - private' stamp: 'fr 11/9/2020 09:39:05'!
deposit100OnAccountAndStore

	^ deposit _ self deposit100OnAccount! !
!PortfolioTest methodsFor: 'tests - private' stamp: 'fr 11/9/2020 09:39:05' prior: 50888642!
deposit100OnAccount50OnAnotherAccountAndStore

	self deposit100OnAccountAndStore.
	anotherDeposit _ self deposit50OnAnotherAccount! !
!PortfolioTest methodsFor: 'tests - hasRegistered' stamp: 'fr 11/9/2020 09:39:23' prior: 50888508!
test05EmptyPortfolioHasNotRegisteredAnyTransaction

	self deposit100OnAccountAndStore.
	self assert: [(emptyPortfolio hasRegistered: deposit) not]! !
!PortfolioTest methodsFor: 'tests - hasRegistered' stamp: 'fr 11/9/2020 09:39:27' prior: 50888516!
test06PortfolioWithASingleAccountRegistersItsTransactions

	self deposit100OnAccountAndStore.
	self assert: [portfolioWithAccount hasRegistered: deposit]! !
!PortfolioTest methodsFor: 'tests - transactions' stamp: 'fr 11/9/2020 09:39:37' prior: 50888855!
test09PortfolioWithASingleAccountExhibitsItsTransactions

	self deposit100OnAccountAndStore.	
	self assert: [portfolioWithAccount transactions = (OrderedCollection with: deposit)]! !
!PortfolioTest methodsFor: 'tests - transactions' stamp: 'fr 11/9/2020 09:39:42' prior: 50888753!
test10PortfolioWithMultipleAccountsAndPortfoliosExhibitsAllTheirTransactionsCombined
		
	self deposit100OnAccount50OnAnotherAccountAndStore.
	self assert: [portfolioWithAccountAndPortfolio transactions = (OrderedCollection with: anotherDeposit with: deposit	)]! !
!PortfolioTest methodsFor: 'tests - balance' stamp: 'fr 11/9/2020 09:40:34' prior: 50882719!
test01EmptyPortfolioHasBalanceZero

	self assert: emptyPortfolio balance equals: 0! !

!testRun: #PortfolioTest #test01EmptyPortfolioHasBalanceZero stamp: 'fr 11/9/2020 09:40:35'!
PASSED!

!testRun: #PortfolioTest #test01EmptyPortfolioHasBalanceZero stamp: 'fr 11/9/2020 09:40:35'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioWithASingleAccountWithNoTransactionsHasBalanceZero stamp: 'fr 11/9/2020 09:40:35'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioWithASingleAccountReflectsItsTransactionsValuesInItsBalance stamp: 'fr 11/9/2020 09:40:35'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithMultipleAccountsAndPortfoliosReflectsTheirTransactionsValuesInItsBalance stamp: 'fr 11/9/2020 09:40:35'!
PASSED!

!testRun: #PortfolioTest #test05EmptyPortfolioHasNotRegisteredAnyTransaction stamp: 'fr 11/9/2020 09:40:35'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioWithASingleAccountRegistersItsTransactions stamp: 'fr 11/9/2020 09:40:35'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioWithMulltipleAccountsAndPortfoliosRegistersAllTheirTransactions stamp: 'fr 11/9/2020 09:40:35'!
PASSED!

!testRun: #PortfolioTest #test08EmptyPortfolioDoesNotExhibitAnyTransaction stamp: 'fr 11/9/2020 09:40:35'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithASingleAccountExhibitsItsTransactions stamp: 'fr 11/9/2020 09:40:35'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioWithMultipleAccountsAndPortfoliosExhibitsAllTheirTransactionsCombined stamp: 'fr 11/9/2020 09:40:35'!
PASSED!

!testRun: #PortfolioTest #test11EmptyPortfolioDoesNotContainAnyAccount stamp: 'fr 11/9/2020 09:40:35'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioContainsAnAccountAfterItIsAdded stamp: 'fr 11/9/2020 09:40:35'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioContainsAnAccountAfterItIsAddedToAnyOfItsDecendents stamp: 'fr 11/9/2020 09:40:35'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioDoesNotContainAnythingThatWasNotAddedToItself stamp: 'fr 11/9/2020 09:40:35'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotAddItself stamp: 'fr 11/9/2020 09:40:35'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioCanNotAddItsParent stamp: 'fr 11/9/2020 09:40:35'!
PASSED!

!testRun: #PortfolioTest #test17PortfolioCanNotAddAnyAncestor stamp: 'fr 11/9/2020 09:40:35'!
PASSED!

!testRun: #PortfolioTest #test18PortfolioCanNotAddAnyPreviousMemberOfTheTree stamp: 'fr 11/9/2020 09:40:35'!
PASSED!

!testRun: #PortfolioTest #test19PortfolioCanNotAddAnotherOneWhichSharesChild stamp: 'fr 11/9/2020 09:40:35'!
PASSED!

!testRun: #PortfolioTest #test20PortfolioCanNotAddDuplicateAccountIndirectly stamp: 'fr 11/9/2020 09:40:35'!
PASSED!

!testRun: #PortfolioTest #test21AddingShouldBehaveIdenticallyAsCreatingAPortfolioWithAccounts stamp: 'fr 11/9/2020 09:40:35'!
PASSED!

!testRun: #PortfolioTest #test22CreatingAPortfolioWithAccountsShouldFailIdenticallyAsWhenAddingThem stamp: 'fr 11/9/2020 09:40:35'!
PASSED!
!PortfolioTest methodsFor: 'tests - balance' stamp: 'fr 11/9/2020 09:40:44' prior: 50885557!
test02PortfolioWithASingleAccountWithNoTransactionsHasBalanceZero

	self assert: portfolioWithAccount balance equals: 0! !

!testRun: #PortfolioTest #test02PortfolioWithASingleAccountWithNoTransactionsHasBalanceZero stamp: 'fr 11/9/2020 09:40:45'!
PASSED!

!testRun: #PortfolioTest #test01EmptyPortfolioHasBalanceZero stamp: 'fr 11/9/2020 09:40:45'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioWithASingleAccountWithNoTransactionsHasBalanceZero stamp: 'fr 11/9/2020 09:40:45'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioWithASingleAccountReflectsItsTransactionsValuesInItsBalance stamp: 'fr 11/9/2020 09:40:45'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithMultipleAccountsAndPortfoliosReflectsTheirTransactionsValuesInItsBalance stamp: 'fr 11/9/2020 09:40:45'!
PASSED!

!testRun: #PortfolioTest #test05EmptyPortfolioHasNotRegisteredAnyTransaction stamp: 'fr 11/9/2020 09:40:45'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioWithASingleAccountRegistersItsTransactions stamp: 'fr 11/9/2020 09:40:45'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioWithMulltipleAccountsAndPortfoliosRegistersAllTheirTransactions stamp: 'fr 11/9/2020 09:40:45'!
PASSED!

!testRun: #PortfolioTest #test08EmptyPortfolioDoesNotExhibitAnyTransaction stamp: 'fr 11/9/2020 09:40:45'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithASingleAccountExhibitsItsTransactions stamp: 'fr 11/9/2020 09:40:45'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioWithMultipleAccountsAndPortfoliosExhibitsAllTheirTransactionsCombined stamp: 'fr 11/9/2020 09:40:45'!
PASSED!

!testRun: #PortfolioTest #test11EmptyPortfolioDoesNotContainAnyAccount stamp: 'fr 11/9/2020 09:40:45'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioContainsAnAccountAfterItIsAdded stamp: 'fr 11/9/2020 09:40:45'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioContainsAnAccountAfterItIsAddedToAnyOfItsDecendents stamp: 'fr 11/9/2020 09:40:45'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioDoesNotContainAnythingThatWasNotAddedToItself stamp: 'fr 11/9/2020 09:40:45'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotAddItself stamp: 'fr 11/9/2020 09:40:45'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioCanNotAddItsParent stamp: 'fr 11/9/2020 09:40:45'!
PASSED!

!testRun: #PortfolioTest #test17PortfolioCanNotAddAnyAncestor stamp: 'fr 11/9/2020 09:40:45'!
PASSED!

!testRun: #PortfolioTest #test18PortfolioCanNotAddAnyPreviousMemberOfTheTree stamp: 'fr 11/9/2020 09:40:45'!
PASSED!

!testRun: #PortfolioTest #test19PortfolioCanNotAddAnotherOneWhichSharesChild stamp: 'fr 11/9/2020 09:40:45'!
PASSED!

!testRun: #PortfolioTest #test20PortfolioCanNotAddDuplicateAccountIndirectly stamp: 'fr 11/9/2020 09:40:45'!
PASSED!

!testRun: #PortfolioTest #test21AddingShouldBehaveIdenticallyAsCreatingAPortfolioWithAccounts stamp: 'fr 11/9/2020 09:40:45'!
PASSED!

!testRun: #PortfolioTest #test22CreatingAPortfolioWithAccountsShouldFailIdenticallyAsWhenAddingThem stamp: 'fr 11/9/2020 09:40:45'!
PASSED!
!PortfolioTest methodsFor: 'tests - balance' stamp: 'fr 11/9/2020 09:40:54' prior: 50887879!
test03PortfolioWithASingleAccountReflectsItsTransactionsValuesInItsBalance

	self deposit100OnAccount.
	self assert: portfolioWithAccount balance equals: 100! !

!testRun: #PortfolioTest #test03PortfolioWithASingleAccountReflectsItsTransactionsValuesInItsBalance stamp: 'fr 11/9/2020 09:40:54'!
PASSED!

!testRun: #PortfolioTest #test01EmptyPortfolioHasBalanceZero stamp: 'fr 11/9/2020 09:40:54'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioWithASingleAccountWithNoTransactionsHasBalanceZero stamp: 'fr 11/9/2020 09:40:54'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioWithASingleAccountReflectsItsTransactionsValuesInItsBalance stamp: 'fr 11/9/2020 09:40:54'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithMultipleAccountsAndPortfoliosReflectsTheirTransactionsValuesInItsBalance stamp: 'fr 11/9/2020 09:40:54'!
PASSED!

!testRun: #PortfolioTest #test05EmptyPortfolioHasNotRegisteredAnyTransaction stamp: 'fr 11/9/2020 09:40:54'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioWithASingleAccountRegistersItsTransactions stamp: 'fr 11/9/2020 09:40:54'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioWithMulltipleAccountsAndPortfoliosRegistersAllTheirTransactions stamp: 'fr 11/9/2020 09:40:54'!
PASSED!

!testRun: #PortfolioTest #test08EmptyPortfolioDoesNotExhibitAnyTransaction stamp: 'fr 11/9/2020 09:40:54'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithASingleAccountExhibitsItsTransactions stamp: 'fr 11/9/2020 09:40:54'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioWithMultipleAccountsAndPortfoliosExhibitsAllTheirTransactionsCombined stamp: 'fr 11/9/2020 09:40:54'!
PASSED!

!testRun: #PortfolioTest #test11EmptyPortfolioDoesNotContainAnyAccount stamp: 'fr 11/9/2020 09:40:54'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioContainsAnAccountAfterItIsAdded stamp: 'fr 11/9/2020 09:40:54'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioContainsAnAccountAfterItIsAddedToAnyOfItsDecendents stamp: 'fr 11/9/2020 09:40:54'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioDoesNotContainAnythingThatWasNotAddedToItself stamp: 'fr 11/9/2020 09:40:54'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotAddItself stamp: 'fr 11/9/2020 09:40:54'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioCanNotAddItsParent stamp: 'fr 11/9/2020 09:40:54'!
PASSED!

!testRun: #PortfolioTest #test17PortfolioCanNotAddAnyAncestor stamp: 'fr 11/9/2020 09:40:54'!
PASSED!

!testRun: #PortfolioTest #test18PortfolioCanNotAddAnyPreviousMemberOfTheTree stamp: 'fr 11/9/2020 09:40:54'!
PASSED!

!testRun: #PortfolioTest #test19PortfolioCanNotAddAnotherOneWhichSharesChild stamp: 'fr 11/9/2020 09:40:54'!
PASSED!

!testRun: #PortfolioTest #test20PortfolioCanNotAddDuplicateAccountIndirectly stamp: 'fr 11/9/2020 09:40:54'!
PASSED!

!testRun: #PortfolioTest #test21AddingShouldBehaveIdenticallyAsCreatingAPortfolioWithAccounts stamp: 'fr 11/9/2020 09:40:54'!
PASSED!

!testRun: #PortfolioTest #test22CreatingAPortfolioWithAccountsShouldFailIdenticallyAsWhenAddingThem stamp: 'fr 11/9/2020 09:40:54'!
PASSED!
!PortfolioTest methodsFor: 'tests - balance' stamp: 'fr 11/9/2020 09:41:04' prior: 50887993!
test04PortfolioWithMultipleAccountsAndPortfoliosReflectsTheirTransactionsValuesInItsBalance

	self deposit100OnAccount.
	self deposit50OnAnotherAccount.

	self assert: portfolioWithAccountAndPortfolio balance equals: 150! !

!testRun: #PortfolioTest #test04PortfolioWithMultipleAccountsAndPortfoliosReflectsTheirTransactionsValuesInItsBalance stamp: 'fr 11/9/2020 09:41:05'!
PASSED!

!testRun: #PortfolioTest #test01EmptyPortfolioHasBalanceZero stamp: 'fr 11/9/2020 09:41:05'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioWithASingleAccountWithNoTransactionsHasBalanceZero stamp: 'fr 11/9/2020 09:41:05'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioWithASingleAccountReflectsItsTransactionsValuesInItsBalance stamp: 'fr 11/9/2020 09:41:05'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithMultipleAccountsAndPortfoliosReflectsTheirTransactionsValuesInItsBalance stamp: 'fr 11/9/2020 09:41:05'!
PASSED!

!testRun: #PortfolioTest #test05EmptyPortfolioHasNotRegisteredAnyTransaction stamp: 'fr 11/9/2020 09:41:05'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioWithASingleAccountRegistersItsTransactions stamp: 'fr 11/9/2020 09:41:05'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioWithMulltipleAccountsAndPortfoliosRegistersAllTheirTransactions stamp: 'fr 11/9/2020 09:41:05'!
PASSED!

!testRun: #PortfolioTest #test08EmptyPortfolioDoesNotExhibitAnyTransaction stamp: 'fr 11/9/2020 09:41:05'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithASingleAccountExhibitsItsTransactions stamp: 'fr 11/9/2020 09:41:05'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioWithMultipleAccountsAndPortfoliosExhibitsAllTheirTransactionsCombined stamp: 'fr 11/9/2020 09:41:05'!
PASSED!

!testRun: #PortfolioTest #test11EmptyPortfolioDoesNotContainAnyAccount stamp: 'fr 11/9/2020 09:41:05'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioContainsAnAccountAfterItIsAdded stamp: 'fr 11/9/2020 09:41:05'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioContainsAnAccountAfterItIsAddedToAnyOfItsDecendents stamp: 'fr 11/9/2020 09:41:05'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioDoesNotContainAnythingThatWasNotAddedToItself stamp: 'fr 11/9/2020 09:41:05'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotAddItself stamp: 'fr 11/9/2020 09:41:05'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioCanNotAddItsParent stamp: 'fr 11/9/2020 09:41:05'!
PASSED!

!testRun: #PortfolioTest #test17PortfolioCanNotAddAnyAncestor stamp: 'fr 11/9/2020 09:41:05'!
PASSED!

!testRun: #PortfolioTest #test18PortfolioCanNotAddAnyPreviousMemberOfTheTree stamp: 'fr 11/9/2020 09:41:05'!
PASSED!

!testRun: #PortfolioTest #test19PortfolioCanNotAddAnotherOneWhichSharesChild stamp: 'fr 11/9/2020 09:41:05'!
PASSED!

!testRun: #PortfolioTest #test20PortfolioCanNotAddDuplicateAccountIndirectly stamp: 'fr 11/9/2020 09:41:05'!
PASSED!

!testRun: #PortfolioTest #test21AddingShouldBehaveIdenticallyAsCreatingAPortfolioWithAccounts stamp: 'fr 11/9/2020 09:41:05'!
PASSED!

!testRun: #PortfolioTest #test22CreatingAPortfolioWithAccountsShouldFailIdenticallyAsWhenAddingThem stamp: 'fr 11/9/2020 09:41:05'!
PASSED!
!PortfolioTest methodsFor: 'tests - hasRegistered' stamp: 'fr 11/9/2020 09:41:18' prior: 50888878!
test05EmptyPortfolioHasNotRegisteredAnyTransaction

	self deposit100OnAccountAndStore.
	self deny: (emptyPortfolio hasRegistered: deposit)! !

!testRun: #PortfolioTest #test05EmptyPortfolioHasNotRegisteredAnyTransaction stamp: 'fr 11/9/2020 09:41:19'!
PASSED!

!testRun: #PortfolioTest #test01EmptyPortfolioHasBalanceZero stamp: 'fr 11/9/2020 09:41:19'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioWithASingleAccountWithNoTransactionsHasBalanceZero stamp: 'fr 11/9/2020 09:41:19'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioWithASingleAccountReflectsItsTransactionsValuesInItsBalance stamp: 'fr 11/9/2020 09:41:19'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithMultipleAccountsAndPortfoliosReflectsTheirTransactionsValuesInItsBalance stamp: 'fr 11/9/2020 09:41:19'!
PASSED!

!testRun: #PortfolioTest #test05EmptyPortfolioHasNotRegisteredAnyTransaction stamp: 'fr 11/9/2020 09:41:19'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioWithASingleAccountRegistersItsTransactions stamp: 'fr 11/9/2020 09:41:19'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioWithMulltipleAccountsAndPortfoliosRegistersAllTheirTransactions stamp: 'fr 11/9/2020 09:41:19'!
PASSED!

!testRun: #PortfolioTest #test08EmptyPortfolioDoesNotExhibitAnyTransaction stamp: 'fr 11/9/2020 09:41:19'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithASingleAccountExhibitsItsTransactions stamp: 'fr 11/9/2020 09:41:19'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioWithMultipleAccountsAndPortfoliosExhibitsAllTheirTransactionsCombined stamp: 'fr 11/9/2020 09:41:19'!
PASSED!

!testRun: #PortfolioTest #test11EmptyPortfolioDoesNotContainAnyAccount stamp: 'fr 11/9/2020 09:41:19'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioContainsAnAccountAfterItIsAdded stamp: 'fr 11/9/2020 09:41:19'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioContainsAnAccountAfterItIsAddedToAnyOfItsDecendents stamp: 'fr 11/9/2020 09:41:19'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioDoesNotContainAnythingThatWasNotAddedToItself stamp: 'fr 11/9/2020 09:41:19'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotAddItself stamp: 'fr 11/9/2020 09:41:19'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioCanNotAddItsParent stamp: 'fr 11/9/2020 09:41:19'!
PASSED!

!testRun: #PortfolioTest #test17PortfolioCanNotAddAnyAncestor stamp: 'fr 11/9/2020 09:41:19'!
PASSED!

!testRun: #PortfolioTest #test18PortfolioCanNotAddAnyPreviousMemberOfTheTree stamp: 'fr 11/9/2020 09:41:19'!
PASSED!

!testRun: #PortfolioTest #test19PortfolioCanNotAddAnotherOneWhichSharesChild stamp: 'fr 11/9/2020 09:41:19'!
PASSED!

!testRun: #PortfolioTest #test20PortfolioCanNotAddDuplicateAccountIndirectly stamp: 'fr 11/9/2020 09:41:19'!
PASSED!

!testRun: #PortfolioTest #test21AddingShouldBehaveIdenticallyAsCreatingAPortfolioWithAccounts stamp: 'fr 11/9/2020 09:41:19'!
PASSED!

!testRun: #PortfolioTest #test22CreatingAPortfolioWithAccountsShouldFailIdenticallyAsWhenAddingThem stamp: 'fr 11/9/2020 09:41:19'!
PASSED!
!PortfolioTest methodsFor: 'tests - hasRegistered' stamp: 'fr 11/9/2020 09:41:34' prior: 50888886!
test06PortfolioWithASingleAccountRegistersItsTransactions

	self deposit100OnAccountAndStore.
	self assert: (portfolioWithAccount hasRegistered: deposit)! !

!testRun: #PortfolioTest #test06PortfolioWithASingleAccountRegistersItsTransactions stamp: 'fr 11/9/2020 09:41:35'!
PASSED!

!testRun: #PortfolioTest #test01EmptyPortfolioHasBalanceZero stamp: 'fr 11/9/2020 09:41:35'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioWithASingleAccountWithNoTransactionsHasBalanceZero stamp: 'fr 11/9/2020 09:41:35'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioWithASingleAccountReflectsItsTransactionsValuesInItsBalance stamp: 'fr 11/9/2020 09:41:35'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithMultipleAccountsAndPortfoliosReflectsTheirTransactionsValuesInItsBalance stamp: 'fr 11/9/2020 09:41:35'!
PASSED!

!testRun: #PortfolioTest #test05EmptyPortfolioHasNotRegisteredAnyTransaction stamp: 'fr 11/9/2020 09:41:35'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioWithASingleAccountRegistersItsTransactions stamp: 'fr 11/9/2020 09:41:35'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioWithMulltipleAccountsAndPortfoliosRegistersAllTheirTransactions stamp: 'fr 11/9/2020 09:41:35'!
PASSED!

!testRun: #PortfolioTest #test08EmptyPortfolioDoesNotExhibitAnyTransaction stamp: 'fr 11/9/2020 09:41:35'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithASingleAccountExhibitsItsTransactions stamp: 'fr 11/9/2020 09:41:35'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioWithMultipleAccountsAndPortfoliosExhibitsAllTheirTransactionsCombined stamp: 'fr 11/9/2020 09:41:35'!
PASSED!

!testRun: #PortfolioTest #test11EmptyPortfolioDoesNotContainAnyAccount stamp: 'fr 11/9/2020 09:41:35'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioContainsAnAccountAfterItIsAdded stamp: 'fr 11/9/2020 09:41:35'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioContainsAnAccountAfterItIsAddedToAnyOfItsDecendents stamp: 'fr 11/9/2020 09:41:35'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioDoesNotContainAnythingThatWasNotAddedToItself stamp: 'fr 11/9/2020 09:41:35'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotAddItself stamp: 'fr 11/9/2020 09:41:35'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioCanNotAddItsParent stamp: 'fr 11/9/2020 09:41:35'!
PASSED!

!testRun: #PortfolioTest #test17PortfolioCanNotAddAnyAncestor stamp: 'fr 11/9/2020 09:41:35'!
PASSED!

!testRun: #PortfolioTest #test18PortfolioCanNotAddAnyPreviousMemberOfTheTree stamp: 'fr 11/9/2020 09:41:35'!
PASSED!

!testRun: #PortfolioTest #test19PortfolioCanNotAddAnotherOneWhichSharesChild stamp: 'fr 11/9/2020 09:41:35'!
PASSED!

!testRun: #PortfolioTest #test20PortfolioCanNotAddDuplicateAccountIndirectly stamp: 'fr 11/9/2020 09:41:35'!
PASSED!

!testRun: #PortfolioTest #test21AddingShouldBehaveIdenticallyAsCreatingAPortfolioWithAccounts stamp: 'fr 11/9/2020 09:41:35'!
PASSED!

!testRun: #PortfolioTest #test22CreatingAPortfolioWithAccountsShouldFailIdenticallyAsWhenAddingThem stamp: 'fr 11/9/2020 09:41:35'!
PASSED!
!PortfolioTest methodsFor: 'tests - hasRegistered' stamp: 'fr 11/9/2020 09:41:51' prior: 50888650!
test07PortfolioWithMulltipleAccountsAndPortfoliosRegistersAllTheirTransactions
		
	self deposit100OnAccount50OnAnotherAccountAndStore.
	 
	self assert: (
		(portfolioWithAccountAndPortfolio hasRegistered: deposit) and: 
		[portfolioWithAccountAndPortfolio hasRegistered: anotherDeposit]
	)! !

!testRun: #PortfolioTest #test07PortfolioWithMulltipleAccountsAndPortfoliosRegistersAllTheirTransactions stamp: 'fr 11/9/2020 09:41:51'!
PASSED!

!testRun: #PortfolioTest #test01EmptyPortfolioHasBalanceZero stamp: 'fr 11/9/2020 09:41:51'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioWithASingleAccountWithNoTransactionsHasBalanceZero stamp: 'fr 11/9/2020 09:41:51'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioWithASingleAccountReflectsItsTransactionsValuesInItsBalance stamp: 'fr 11/9/2020 09:41:51'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithMultipleAccountsAndPortfoliosReflectsTheirTransactionsValuesInItsBalance stamp: 'fr 11/9/2020 09:41:51'!
PASSED!

!testRun: #PortfolioTest #test05EmptyPortfolioHasNotRegisteredAnyTransaction stamp: 'fr 11/9/2020 09:41:51'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioWithASingleAccountRegistersItsTransactions stamp: 'fr 11/9/2020 09:41:51'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioWithMulltipleAccountsAndPortfoliosRegistersAllTheirTransactions stamp: 'fr 11/9/2020 09:41:51'!
PASSED!

!testRun: #PortfolioTest #test08EmptyPortfolioDoesNotExhibitAnyTransaction stamp: 'fr 11/9/2020 09:41:51'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithASingleAccountExhibitsItsTransactions stamp: 'fr 11/9/2020 09:41:51'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioWithMultipleAccountsAndPortfoliosExhibitsAllTheirTransactionsCombined stamp: 'fr 11/9/2020 09:41:51'!
PASSED!

!testRun: #PortfolioTest #test11EmptyPortfolioDoesNotContainAnyAccount stamp: 'fr 11/9/2020 09:41:51'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioContainsAnAccountAfterItIsAdded stamp: 'fr 11/9/2020 09:41:51'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioContainsAnAccountAfterItIsAddedToAnyOfItsDecendents stamp: 'fr 11/9/2020 09:41:51'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioDoesNotContainAnythingThatWasNotAddedToItself stamp: 'fr 11/9/2020 09:41:51'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotAddItself stamp: 'fr 11/9/2020 09:41:51'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioCanNotAddItsParent stamp: 'fr 11/9/2020 09:41:51'!
PASSED!

!testRun: #PortfolioTest #test17PortfolioCanNotAddAnyAncestor stamp: 'fr 11/9/2020 09:41:51'!
PASSED!

!testRun: #PortfolioTest #test18PortfolioCanNotAddAnyPreviousMemberOfTheTree stamp: 'fr 11/9/2020 09:41:51'!
PASSED!

!testRun: #PortfolioTest #test19PortfolioCanNotAddAnotherOneWhichSharesChild stamp: 'fr 11/9/2020 09:41:51'!
PASSED!

!testRun: #PortfolioTest #test20PortfolioCanNotAddDuplicateAccountIndirectly stamp: 'fr 11/9/2020 09:41:51'!
PASSED!

!testRun: #PortfolioTest #test21AddingShouldBehaveIdenticallyAsCreatingAPortfolioWithAccounts stamp: 'fr 11/9/2020 09:41:51'!
PASSED!

!testRun: #PortfolioTest #test22CreatingAPortfolioWithAccountsShouldFailIdenticallyAsWhenAddingThem stamp: 'fr 11/9/2020 09:41:51'!
PASSED!
!PortfolioTest methodsFor: 'tests - transactions' stamp: 'fr 11/9/2020 09:42:11' prior: 50882917!
test08EmptyPortfolioDoesNotExhibitAnyTransaction

	self assert: (emptyPortfolio transactions isEmpty)! !

!testRun: #PortfolioTest #test08EmptyPortfolioDoesNotExhibitAnyTransaction stamp: 'fr 11/9/2020 09:42:12'!
PASSED!

!testRun: #PortfolioTest #test01EmptyPortfolioHasBalanceZero stamp: 'fr 11/9/2020 09:42:12'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioWithASingleAccountWithNoTransactionsHasBalanceZero stamp: 'fr 11/9/2020 09:42:12'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioWithASingleAccountReflectsItsTransactionsValuesInItsBalance stamp: 'fr 11/9/2020 09:42:12'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithMultipleAccountsAndPortfoliosReflectsTheirTransactionsValuesInItsBalance stamp: 'fr 11/9/2020 09:42:12'!
PASSED!

!testRun: #PortfolioTest #test05EmptyPortfolioHasNotRegisteredAnyTransaction stamp: 'fr 11/9/2020 09:42:12'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioWithASingleAccountRegistersItsTransactions stamp: 'fr 11/9/2020 09:42:12'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioWithMulltipleAccountsAndPortfoliosRegistersAllTheirTransactions stamp: 'fr 11/9/2020 09:42:12'!
PASSED!

!testRun: #PortfolioTest #test08EmptyPortfolioDoesNotExhibitAnyTransaction stamp: 'fr 11/9/2020 09:42:12'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithASingleAccountExhibitsItsTransactions stamp: 'fr 11/9/2020 09:42:12'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioWithMultipleAccountsAndPortfoliosExhibitsAllTheirTransactionsCombined stamp: 'fr 11/9/2020 09:42:12'!
PASSED!

!testRun: #PortfolioTest #test11EmptyPortfolioDoesNotContainAnyAccount stamp: 'fr 11/9/2020 09:42:12'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioContainsAnAccountAfterItIsAdded stamp: 'fr 11/9/2020 09:42:12'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioContainsAnAccountAfterItIsAddedToAnyOfItsDecendents stamp: 'fr 11/9/2020 09:42:12'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioDoesNotContainAnythingThatWasNotAddedToItself stamp: 'fr 11/9/2020 09:42:12'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotAddItself stamp: 'fr 11/9/2020 09:42:12'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioCanNotAddItsParent stamp: 'fr 11/9/2020 09:42:12'!
PASSED!

!testRun: #PortfolioTest #test17PortfolioCanNotAddAnyAncestor stamp: 'fr 11/9/2020 09:42:12'!
PASSED!

!testRun: #PortfolioTest #test18PortfolioCanNotAddAnyPreviousMemberOfTheTree stamp: 'fr 11/9/2020 09:42:12'!
PASSED!

!testRun: #PortfolioTest #test19PortfolioCanNotAddAnotherOneWhichSharesChild stamp: 'fr 11/9/2020 09:42:12'!
PASSED!

!testRun: #PortfolioTest #test20PortfolioCanNotAddDuplicateAccountIndirectly stamp: 'fr 11/9/2020 09:42:12'!
PASSED!

!testRun: #PortfolioTest #test21AddingShouldBehaveIdenticallyAsCreatingAPortfolioWithAccounts stamp: 'fr 11/9/2020 09:42:12'!
PASSED!

!testRun: #PortfolioTest #test22CreatingAPortfolioWithAccountsShouldFailIdenticallyAsWhenAddingThem stamp: 'fr 11/9/2020 09:42:12'!
PASSED!
!PortfolioTest methodsFor: 'tests - transactions' stamp: 'fr 11/9/2020 09:42:29' prior: 50888894!
test09PortfolioWithASingleAccountExhibitsItsTransactions

	self deposit100OnAccountAndStore.	
	self assert: portfolioWithAccount transactions equals: (OrderedCollection with: deposit)! !

!testRun: #PortfolioTest #test09PortfolioWithASingleAccountExhibitsItsTransactions stamp: 'fr 11/9/2020 09:42:29'!
PASSED!

!testRun: #PortfolioTest #test01EmptyPortfolioHasBalanceZero stamp: 'fr 11/9/2020 09:42:29'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioWithASingleAccountWithNoTransactionsHasBalanceZero stamp: 'fr 11/9/2020 09:42:29'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioWithASingleAccountReflectsItsTransactionsValuesInItsBalance stamp: 'fr 11/9/2020 09:42:29'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithMultipleAccountsAndPortfoliosReflectsTheirTransactionsValuesInItsBalance stamp: 'fr 11/9/2020 09:42:29'!
PASSED!

!testRun: #PortfolioTest #test05EmptyPortfolioHasNotRegisteredAnyTransaction stamp: 'fr 11/9/2020 09:42:29'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioWithASingleAccountRegistersItsTransactions stamp: 'fr 11/9/2020 09:42:29'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioWithMulltipleAccountsAndPortfoliosRegistersAllTheirTransactions stamp: 'fr 11/9/2020 09:42:29'!
PASSED!

!testRun: #PortfolioTest #test08EmptyPortfolioDoesNotExhibitAnyTransaction stamp: 'fr 11/9/2020 09:42:29'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithASingleAccountExhibitsItsTransactions stamp: 'fr 11/9/2020 09:42:29'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioWithMultipleAccountsAndPortfoliosExhibitsAllTheirTransactionsCombined stamp: 'fr 11/9/2020 09:42:29'!
PASSED!

!testRun: #PortfolioTest #test11EmptyPortfolioDoesNotContainAnyAccount stamp: 'fr 11/9/2020 09:42:29'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioContainsAnAccountAfterItIsAdded stamp: 'fr 11/9/2020 09:42:29'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioContainsAnAccountAfterItIsAddedToAnyOfItsDecendents stamp: 'fr 11/9/2020 09:42:29'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioDoesNotContainAnythingThatWasNotAddedToItself stamp: 'fr 11/9/2020 09:42:29'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotAddItself stamp: 'fr 11/9/2020 09:42:29'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioCanNotAddItsParent stamp: 'fr 11/9/2020 09:42:29'!
PASSED!

!testRun: #PortfolioTest #test17PortfolioCanNotAddAnyAncestor stamp: 'fr 11/9/2020 09:42:29'!
PASSED!

!testRun: #PortfolioTest #test18PortfolioCanNotAddAnyPreviousMemberOfTheTree stamp: 'fr 11/9/2020 09:42:29'!
PASSED!

!testRun: #PortfolioTest #test19PortfolioCanNotAddAnotherOneWhichSharesChild stamp: 'fr 11/9/2020 09:42:29'!
PASSED!

!testRun: #PortfolioTest #test20PortfolioCanNotAddDuplicateAccountIndirectly stamp: 'fr 11/9/2020 09:42:29'!
PASSED!

!testRun: #PortfolioTest #test21AddingShouldBehaveIdenticallyAsCreatingAPortfolioWithAccounts stamp: 'fr 11/9/2020 09:42:29'!
PASSED!

!testRun: #PortfolioTest #test22CreatingAPortfolioWithAccountsShouldFailIdenticallyAsWhenAddingThem stamp: 'fr 11/9/2020 09:42:29'!
PASSED!
!PortfolioTest methodsFor: 'tests - transactions' stamp: 'fr 11/9/2020 09:42:41' prior: 50888903!
test10PortfolioWithMultipleAccountsAndPortfoliosExhibitsAllTheirTransactionsCombined
		
	self deposit100OnAccount50OnAnotherAccountAndStore.
	self assert: portfolioWithAccountAndPortfolio transactions equals: (OrderedCollection with: anotherDeposit with: deposit	)! !

!testRun: #PortfolioTest #test10PortfolioWithMultipleAccountsAndPortfoliosExhibitsAllTheirTransactionsCombined stamp: 'fr 11/9/2020 09:42:43'!
PASSED!

!testRun: #PortfolioTest #test01EmptyPortfolioHasBalanceZero stamp: 'fr 11/9/2020 09:42:43'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioWithASingleAccountWithNoTransactionsHasBalanceZero stamp: 'fr 11/9/2020 09:42:43'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioWithASingleAccountReflectsItsTransactionsValuesInItsBalance stamp: 'fr 11/9/2020 09:42:43'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithMultipleAccountsAndPortfoliosReflectsTheirTransactionsValuesInItsBalance stamp: 'fr 11/9/2020 09:42:43'!
PASSED!

!testRun: #PortfolioTest #test05EmptyPortfolioHasNotRegisteredAnyTransaction stamp: 'fr 11/9/2020 09:42:43'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioWithASingleAccountRegistersItsTransactions stamp: 'fr 11/9/2020 09:42:43'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioWithMulltipleAccountsAndPortfoliosRegistersAllTheirTransactions stamp: 'fr 11/9/2020 09:42:43'!
PASSED!

!testRun: #PortfolioTest #test08EmptyPortfolioDoesNotExhibitAnyTransaction stamp: 'fr 11/9/2020 09:42:43'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithASingleAccountExhibitsItsTransactions stamp: 'fr 11/9/2020 09:42:43'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioWithMultipleAccountsAndPortfoliosExhibitsAllTheirTransactionsCombined stamp: 'fr 11/9/2020 09:42:43'!
PASSED!

!testRun: #PortfolioTest #test11EmptyPortfolioDoesNotContainAnyAccount stamp: 'fr 11/9/2020 09:42:43'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioContainsAnAccountAfterItIsAdded stamp: 'fr 11/9/2020 09:42:43'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioContainsAnAccountAfterItIsAddedToAnyOfItsDecendents stamp: 'fr 11/9/2020 09:42:43'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioDoesNotContainAnythingThatWasNotAddedToItself stamp: 'fr 11/9/2020 09:42:43'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotAddItself stamp: 'fr 11/9/2020 09:42:43'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioCanNotAddItsParent stamp: 'fr 11/9/2020 09:42:43'!
PASSED!

!testRun: #PortfolioTest #test17PortfolioCanNotAddAnyAncestor stamp: 'fr 11/9/2020 09:42:43'!
PASSED!

!testRun: #PortfolioTest #test18PortfolioCanNotAddAnyPreviousMemberOfTheTree stamp: 'fr 11/9/2020 09:42:43'!
PASSED!

!testRun: #PortfolioTest #test19PortfolioCanNotAddAnotherOneWhichSharesChild stamp: 'fr 11/9/2020 09:42:43'!
PASSED!

!testRun: #PortfolioTest #test20PortfolioCanNotAddDuplicateAccountIndirectly stamp: 'fr 11/9/2020 09:42:43'!
PASSED!

!testRun: #PortfolioTest #test21AddingShouldBehaveIdenticallyAsCreatingAPortfolioWithAccounts stamp: 'fr 11/9/2020 09:42:43'!
PASSED!

!testRun: #PortfolioTest #test22CreatingAPortfolioWithAccountsShouldFailIdenticallyAsWhenAddingThem stamp: 'fr 11/9/2020 09:42:43'!
PASSED!
!PortfolioTest methodsFor: 'tests - add' stamp: 'fr 11/9/2020 09:43:00' prior: 50884490!
test11EmptyPortfolioDoesNotContainAnyAccount

	self deny: (emptyPortfolio contains: account)! !

!testRun: #PortfolioTest #test11EmptyPortfolioDoesNotContainAnyAccount stamp: 'fr 11/9/2020 09:43:01'!
PASSED!

!testRun: #PortfolioTest #test01EmptyPortfolioHasBalanceZero stamp: 'fr 11/9/2020 09:43:01'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioWithASingleAccountWithNoTransactionsHasBalanceZero stamp: 'fr 11/9/2020 09:43:01'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioWithASingleAccountReflectsItsTransactionsValuesInItsBalance stamp: 'fr 11/9/2020 09:43:01'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithMultipleAccountsAndPortfoliosReflectsTheirTransactionsValuesInItsBalance stamp: 'fr 11/9/2020 09:43:01'!
PASSED!

!testRun: #PortfolioTest #test05EmptyPortfolioHasNotRegisteredAnyTransaction stamp: 'fr 11/9/2020 09:43:01'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioWithASingleAccountRegistersItsTransactions stamp: 'fr 11/9/2020 09:43:01'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioWithMulltipleAccountsAndPortfoliosRegistersAllTheirTransactions stamp: 'fr 11/9/2020 09:43:01'!
PASSED!

!testRun: #PortfolioTest #test08EmptyPortfolioDoesNotExhibitAnyTransaction stamp: 'fr 11/9/2020 09:43:01'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithASingleAccountExhibitsItsTransactions stamp: 'fr 11/9/2020 09:43:01'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioWithMultipleAccountsAndPortfoliosExhibitsAllTheirTransactionsCombined stamp: 'fr 11/9/2020 09:43:01'!
PASSED!

!testRun: #PortfolioTest #test11EmptyPortfolioDoesNotContainAnyAccount stamp: 'fr 11/9/2020 09:43:01'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioContainsAnAccountAfterItIsAdded stamp: 'fr 11/9/2020 09:43:01'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioContainsAnAccountAfterItIsAddedToAnyOfItsDecendents stamp: 'fr 11/9/2020 09:43:01'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioDoesNotContainAnythingThatWasNotAddedToItself stamp: 'fr 11/9/2020 09:43:01'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotAddItself stamp: 'fr 11/9/2020 09:43:01'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioCanNotAddItsParent stamp: 'fr 11/9/2020 09:43:01'!
PASSED!

!testRun: #PortfolioTest #test17PortfolioCanNotAddAnyAncestor stamp: 'fr 11/9/2020 09:43:01'!
PASSED!

!testRun: #PortfolioTest #test18PortfolioCanNotAddAnyPreviousMemberOfTheTree stamp: 'fr 11/9/2020 09:43:01'!
PASSED!

!testRun: #PortfolioTest #test19PortfolioCanNotAddAnotherOneWhichSharesChild stamp: 'fr 11/9/2020 09:43:01'!
PASSED!

!testRun: #PortfolioTest #test20PortfolioCanNotAddDuplicateAccountIndirectly stamp: 'fr 11/9/2020 09:43:01'!
PASSED!

!testRun: #PortfolioTest #test21AddingShouldBehaveIdenticallyAsCreatingAPortfolioWithAccounts stamp: 'fr 11/9/2020 09:43:01'!
PASSED!

!testRun: #PortfolioTest #test22CreatingAPortfolioWithAccountsShouldFailIdenticallyAsWhenAddingThem stamp: 'fr 11/9/2020 09:43:01'!
PASSED!
!PortfolioTest methodsFor: 'tests - add' stamp: 'fr 11/9/2020 09:43:09' prior: 50884529!
test12PortfolioContainsAnAccountAfterItIsAdded

	emptyPortfolio add: account.
	self assert: (emptyPortfolio contains: account)! !

!testRun: #PortfolioTest #test12PortfolioContainsAnAccountAfterItIsAdded stamp: 'fr 11/9/2020 09:43:09'!
PASSED!

!testRun: #PortfolioTest #test01EmptyPortfolioHasBalanceZero stamp: 'fr 11/9/2020 09:43:09'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioWithASingleAccountWithNoTransactionsHasBalanceZero stamp: 'fr 11/9/2020 09:43:09'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioWithASingleAccountReflectsItsTransactionsValuesInItsBalance stamp: 'fr 11/9/2020 09:43:09'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithMultipleAccountsAndPortfoliosReflectsTheirTransactionsValuesInItsBalance stamp: 'fr 11/9/2020 09:43:09'!
PASSED!

!testRun: #PortfolioTest #test05EmptyPortfolioHasNotRegisteredAnyTransaction stamp: 'fr 11/9/2020 09:43:09'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioWithASingleAccountRegistersItsTransactions stamp: 'fr 11/9/2020 09:43:09'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioWithMulltipleAccountsAndPortfoliosRegistersAllTheirTransactions stamp: 'fr 11/9/2020 09:43:09'!
PASSED!

!testRun: #PortfolioTest #test08EmptyPortfolioDoesNotExhibitAnyTransaction stamp: 'fr 11/9/2020 09:43:09'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithASingleAccountExhibitsItsTransactions stamp: 'fr 11/9/2020 09:43:09'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioWithMultipleAccountsAndPortfoliosExhibitsAllTheirTransactionsCombined stamp: 'fr 11/9/2020 09:43:09'!
PASSED!

!testRun: #PortfolioTest #test11EmptyPortfolioDoesNotContainAnyAccount stamp: 'fr 11/9/2020 09:43:09'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioContainsAnAccountAfterItIsAdded stamp: 'fr 11/9/2020 09:43:09'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioContainsAnAccountAfterItIsAddedToAnyOfItsDecendents stamp: 'fr 11/9/2020 09:43:09'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioDoesNotContainAnythingThatWasNotAddedToItself stamp: 'fr 11/9/2020 09:43:09'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotAddItself stamp: 'fr 11/9/2020 09:43:09'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioCanNotAddItsParent stamp: 'fr 11/9/2020 09:43:09'!
PASSED!

!testRun: #PortfolioTest #test17PortfolioCanNotAddAnyAncestor stamp: 'fr 11/9/2020 09:43:09'!
PASSED!

!testRun: #PortfolioTest #test18PortfolioCanNotAddAnyPreviousMemberOfTheTree stamp: 'fr 11/9/2020 09:43:09'!
PASSED!

!testRun: #PortfolioTest #test19PortfolioCanNotAddAnotherOneWhichSharesChild stamp: 'fr 11/9/2020 09:43:09'!
PASSED!

!testRun: #PortfolioTest #test20PortfolioCanNotAddDuplicateAccountIndirectly stamp: 'fr 11/9/2020 09:43:09'!
PASSED!

!testRun: #PortfolioTest #test21AddingShouldBehaveIdenticallyAsCreatingAPortfolioWithAccounts stamp: 'fr 11/9/2020 09:43:09'!
PASSED!

!testRun: #PortfolioTest #test22CreatingAPortfolioWithAccountsShouldFailIdenticallyAsWhenAddingThem stamp: 'fr 11/9/2020 09:43:09'!
PASSED!
!PortfolioTest methodsFor: 'tests - add' stamp: 'fr 11/9/2020 09:43:20' prior: 50886199!
test13PortfolioContainsAnAccountAfterItIsAddedToAnyOfItsDecendents

	| anotherPortfolio |
	anotherPortfolio _ Portfolio with: (OrderedCollection with: emptyPortfolio).
	emptyPortfolio add: account.
	self assert: (anotherPortfolio contains: account)! !

!testRun: #PortfolioTest #test13PortfolioContainsAnAccountAfterItIsAddedToAnyOfItsDecendents stamp: 'fr 11/9/2020 09:43:21'!
PASSED!

!testRun: #PortfolioTest #test01EmptyPortfolioHasBalanceZero stamp: 'fr 11/9/2020 09:43:21'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioWithASingleAccountWithNoTransactionsHasBalanceZero stamp: 'fr 11/9/2020 09:43:21'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioWithASingleAccountReflectsItsTransactionsValuesInItsBalance stamp: 'fr 11/9/2020 09:43:21'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithMultipleAccountsAndPortfoliosReflectsTheirTransactionsValuesInItsBalance stamp: 'fr 11/9/2020 09:43:21'!
PASSED!

!testRun: #PortfolioTest #test05EmptyPortfolioHasNotRegisteredAnyTransaction stamp: 'fr 11/9/2020 09:43:21'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioWithASingleAccountRegistersItsTransactions stamp: 'fr 11/9/2020 09:43:21'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioWithMulltipleAccountsAndPortfoliosRegistersAllTheirTransactions stamp: 'fr 11/9/2020 09:43:21'!
PASSED!

!testRun: #PortfolioTest #test08EmptyPortfolioDoesNotExhibitAnyTransaction stamp: 'fr 11/9/2020 09:43:21'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithASingleAccountExhibitsItsTransactions stamp: 'fr 11/9/2020 09:43:21'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioWithMultipleAccountsAndPortfoliosExhibitsAllTheirTransactionsCombined stamp: 'fr 11/9/2020 09:43:21'!
PASSED!

!testRun: #PortfolioTest #test11EmptyPortfolioDoesNotContainAnyAccount stamp: 'fr 11/9/2020 09:43:21'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioContainsAnAccountAfterItIsAdded stamp: 'fr 11/9/2020 09:43:21'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioContainsAnAccountAfterItIsAddedToAnyOfItsDecendents stamp: 'fr 11/9/2020 09:43:21'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioDoesNotContainAnythingThatWasNotAddedToItself stamp: 'fr 11/9/2020 09:43:21'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotAddItself stamp: 'fr 11/9/2020 09:43:21'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioCanNotAddItsParent stamp: 'fr 11/9/2020 09:43:21'!
PASSED!

!testRun: #PortfolioTest #test17PortfolioCanNotAddAnyAncestor stamp: 'fr 11/9/2020 09:43:21'!
PASSED!

!testRun: #PortfolioTest #test18PortfolioCanNotAddAnyPreviousMemberOfTheTree stamp: 'fr 11/9/2020 09:43:21'!
PASSED!

!testRun: #PortfolioTest #test19PortfolioCanNotAddAnotherOneWhichSharesChild stamp: 'fr 11/9/2020 09:43:21'!
PASSED!

!testRun: #PortfolioTest #test20PortfolioCanNotAddDuplicateAccountIndirectly stamp: 'fr 11/9/2020 09:43:21'!
PASSED!

!testRun: #PortfolioTest #test21AddingShouldBehaveIdenticallyAsCreatingAPortfolioWithAccounts stamp: 'fr 11/9/2020 09:43:21'!
PASSED!

!testRun: #PortfolioTest #test22CreatingAPortfolioWithAccountsShouldFailIdenticallyAsWhenAddingThem stamp: 'fr 11/9/2020 09:43:21'!
PASSED!
!PortfolioTest methodsFor: 'tests - add' stamp: 'fr 11/9/2020 09:43:31' prior: 50886848!
test14PortfolioDoesNotContainAnythingThatWasNotAddedToItself

	emptyPortfolio add: account.
	self deny: (emptyPortfolio contains: anotherAccount)! !

!testRun: #PortfolioTest #test14PortfolioDoesNotContainAnythingThatWasNotAddedToItself stamp: 'fr 11/9/2020 09:43:33'!
PASSED!

!testRun: #PortfolioTest #test01EmptyPortfolioHasBalanceZero stamp: 'fr 11/9/2020 09:43:33'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioWithASingleAccountWithNoTransactionsHasBalanceZero stamp: 'fr 11/9/2020 09:43:33'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioWithASingleAccountReflectsItsTransactionsValuesInItsBalance stamp: 'fr 11/9/2020 09:43:33'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithMultipleAccountsAndPortfoliosReflectsTheirTransactionsValuesInItsBalance stamp: 'fr 11/9/2020 09:43:33'!
PASSED!

!testRun: #PortfolioTest #test05EmptyPortfolioHasNotRegisteredAnyTransaction stamp: 'fr 11/9/2020 09:43:33'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioWithASingleAccountRegistersItsTransactions stamp: 'fr 11/9/2020 09:43:33'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioWithMulltipleAccountsAndPortfoliosRegistersAllTheirTransactions stamp: 'fr 11/9/2020 09:43:33'!
PASSED!

!testRun: #PortfolioTest #test08EmptyPortfolioDoesNotExhibitAnyTransaction stamp: 'fr 11/9/2020 09:43:33'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithASingleAccountExhibitsItsTransactions stamp: 'fr 11/9/2020 09:43:33'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioWithMultipleAccountsAndPortfoliosExhibitsAllTheirTransactionsCombined stamp: 'fr 11/9/2020 09:43:33'!
PASSED!

!testRun: #PortfolioTest #test11EmptyPortfolioDoesNotContainAnyAccount stamp: 'fr 11/9/2020 09:43:33'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioContainsAnAccountAfterItIsAdded stamp: 'fr 11/9/2020 09:43:33'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioContainsAnAccountAfterItIsAddedToAnyOfItsDecendents stamp: 'fr 11/9/2020 09:43:33'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioDoesNotContainAnythingThatWasNotAddedToItself stamp: 'fr 11/9/2020 09:43:33'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotAddItself stamp: 'fr 11/9/2020 09:43:33'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioCanNotAddItsParent stamp: 'fr 11/9/2020 09:43:33'!
PASSED!

!testRun: #PortfolioTest #test17PortfolioCanNotAddAnyAncestor stamp: 'fr 11/9/2020 09:43:33'!
PASSED!

!testRun: #PortfolioTest #test18PortfolioCanNotAddAnyPreviousMemberOfTheTree stamp: 'fr 11/9/2020 09:43:33'!
PASSED!

!testRun: #PortfolioTest #test19PortfolioCanNotAddAnotherOneWhichSharesChild stamp: 'fr 11/9/2020 09:43:33'!
PASSED!

!testRun: #PortfolioTest #test20PortfolioCanNotAddDuplicateAccountIndirectly stamp: 'fr 11/9/2020 09:43:33'!
PASSED!

!testRun: #PortfolioTest #test21AddingShouldBehaveIdenticallyAsCreatingAPortfolioWithAccounts stamp: 'fr 11/9/2020 09:43:33'!
PASSED!

!testRun: #PortfolioTest #test22CreatingAPortfolioWithAccountsShouldFailIdenticallyAsWhenAddingThem stamp: 'fr 11/9/2020 09:43:33'!
PASSED!
!PortfolioTest methodsFor: 'tests - add' stamp: 'fr 11/9/2020 09:45:53' prior: 50890092!
test13PortfolioContainsAnAccountAfterItIsAddedToAnyOfItsDecendents

	| portfolioWithEmptyPortfolio |
	portfolioWithEmptyPortfolio _ Portfolio with: (OrderedCollection with: emptyPortfolio).
	emptyPortfolio add: account.
	self assert: (portfolioWithEmptyPortfolio contains: account)! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'fr 11/9/2020 09:45:56' prior: 50890290!
test13PortfolioContainsAnAccountAfterItIsAddedToAnyOfItsDecendents

	 
	portfolioWithEmptyPortfolio _ Portfolio with: (OrderedCollection with: emptyPortfolio).
	emptyPortfolio add: account.
	self assert: (portfolioWithEmptyPortfolio contains: account)! !

!classDefinition: #PortfolioTest category: 'Portfolio-Ejercicio' stamp: 'fr 11/9/2020 09:45:57'!
TestCase subclass: #PortfolioTest
	instanceVariableNames: 'emptyPortfolio account portfolioWithAccount anotherAccount portfolioWithAccountAndPortfolio deposit anotherDeposit portfolioWithEmptyPortfolio'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!
!PortfolioTest methodsFor: 'tests - add' stamp: 'fr 11/9/2020 09:46:00' prior: 50890302!
test13PortfolioContainsAnAccountAfterItIsAddedToAnyOfItsDecendents

	portfolioWithEmptyPortfolio _ Portfolio with: (OrderedCollection with: emptyPortfolio).
	emptyPortfolio add: account.
	self assert: (portfolioWithEmptyPortfolio contains: account)! !
!PortfolioTest methodsFor: 'tests - tree structure' stamp: 'fr 11/9/2020 09:46:19' prior: 50882780!
test16PortfolioCanNotAddItsParent

	portfolioWithEmptyPortfolio _ Portfolio with: (OrderedCollection with: emptyPortfolio).
	
	self  should: [emptyPortfolio add: portfolioWithEmptyPortfolio] 
		raise: Error 
		withMessageText: Portfolio canNotAddAccountErrorDescription! !

!testRun: #PortfolioTest #test16PortfolioCanNotAddItsParent stamp: 'fr 11/9/2020 09:46:25'!
PASSED!

!testRun: #PortfolioTest #test01EmptyPortfolioHasBalanceZero stamp: 'fr 11/9/2020 09:46:25'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioWithASingleAccountWithNoTransactionsHasBalanceZero stamp: 'fr 11/9/2020 09:46:25'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioWithASingleAccountReflectsItsTransactionsValuesInItsBalance stamp: 'fr 11/9/2020 09:46:25'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithMultipleAccountsAndPortfoliosReflectsTheirTransactionsValuesInItsBalance stamp: 'fr 11/9/2020 09:46:25'!
PASSED!

!testRun: #PortfolioTest #test05EmptyPortfolioHasNotRegisteredAnyTransaction stamp: 'fr 11/9/2020 09:46:25'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioWithASingleAccountRegistersItsTransactions stamp: 'fr 11/9/2020 09:46:25'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioWithMulltipleAccountsAndPortfoliosRegistersAllTheirTransactions stamp: 'fr 11/9/2020 09:46:25'!
PASSED!

!testRun: #PortfolioTest #test08EmptyPortfolioDoesNotExhibitAnyTransaction stamp: 'fr 11/9/2020 09:46:25'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithASingleAccountExhibitsItsTransactions stamp: 'fr 11/9/2020 09:46:25'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioWithMultipleAccountsAndPortfoliosExhibitsAllTheirTransactionsCombined stamp: 'fr 11/9/2020 09:46:25'!
PASSED!

!testRun: #PortfolioTest #test11EmptyPortfolioDoesNotContainAnyAccount stamp: 'fr 11/9/2020 09:46:25'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioContainsAnAccountAfterItIsAdded stamp: 'fr 11/9/2020 09:46:25'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioContainsAnAccountAfterItIsAddedToAnyOfItsDecendents stamp: 'fr 11/9/2020 09:46:25'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioDoesNotContainAnythingThatWasNotAddedToItself stamp: 'fr 11/9/2020 09:46:25'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotAddItself stamp: 'fr 11/9/2020 09:46:25'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioCanNotAddItsParent stamp: 'fr 11/9/2020 09:46:25'!
PASSED!

!testRun: #PortfolioTest #test17PortfolioCanNotAddAnyAncestor stamp: 'fr 11/9/2020 09:46:25'!
PASSED!

!testRun: #PortfolioTest #test18PortfolioCanNotAddAnyPreviousMemberOfTheTree stamp: 'fr 11/9/2020 09:46:25'!
PASSED!

!testRun: #PortfolioTest #test19PortfolioCanNotAddAnotherOneWhichSharesChild stamp: 'fr 11/9/2020 09:46:25'!
PASSED!

!testRun: #PortfolioTest #test20PortfolioCanNotAddDuplicateAccountIndirectly stamp: 'fr 11/9/2020 09:46:25'!
PASSED!

!testRun: #PortfolioTest #test21AddingShouldBehaveIdenticallyAsCreatingAPortfolioWithAccounts stamp: 'fr 11/9/2020 09:46:25'!
PASSED!

!testRun: #PortfolioTest #test22CreatingAPortfolioWithAccountsShouldFailIdenticallyAsWhenAddingThem stamp: 'fr 11/9/2020 09:46:25'!
PASSED!
!PortfolioTest methodsFor: 'tests - tree structure' stamp: 'fr 11/9/2020 09:46:36' prior: 50882704!
test17PortfolioCanNotAddAnyAncestor

	| rootPortfolio |
	portfolioWithEmptyPortfolio _ Portfolio with: (OrderedCollection with: emptyPortfolio).
	rootPortfolio _ Portfolio with: (OrderedCollection with: portfolioWithEmptyPortfolio).
	
	self  should: [emptyPortfolio add: rootPortfolio] 
		raise: Error 
		withMessageText: Portfolio canNotAddAccountErrorDescription! !

!testRun: #PortfolioTest #test17PortfolioCanNotAddAnyAncestor stamp: 'fr 11/9/2020 09:46:37'!
PASSED!

!testRun: #PortfolioTest #test01EmptyPortfolioHasBalanceZero stamp: 'fr 11/9/2020 09:46:37'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioWithASingleAccountWithNoTransactionsHasBalanceZero stamp: 'fr 11/9/2020 09:46:37'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioWithASingleAccountReflectsItsTransactionsValuesInItsBalance stamp: 'fr 11/9/2020 09:46:37'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithMultipleAccountsAndPortfoliosReflectsTheirTransactionsValuesInItsBalance stamp: 'fr 11/9/2020 09:46:37'!
PASSED!

!testRun: #PortfolioTest #test05EmptyPortfolioHasNotRegisteredAnyTransaction stamp: 'fr 11/9/2020 09:46:37'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioWithASingleAccountRegistersItsTransactions stamp: 'fr 11/9/2020 09:46:37'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioWithMulltipleAccountsAndPortfoliosRegistersAllTheirTransactions stamp: 'fr 11/9/2020 09:46:37'!
PASSED!

!testRun: #PortfolioTest #test08EmptyPortfolioDoesNotExhibitAnyTransaction stamp: 'fr 11/9/2020 09:46:37'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithASingleAccountExhibitsItsTransactions stamp: 'fr 11/9/2020 09:46:37'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioWithMultipleAccountsAndPortfoliosExhibitsAllTheirTransactionsCombined stamp: 'fr 11/9/2020 09:46:37'!
PASSED!

!testRun: #PortfolioTest #test11EmptyPortfolioDoesNotContainAnyAccount stamp: 'fr 11/9/2020 09:46:37'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioContainsAnAccountAfterItIsAdded stamp: 'fr 11/9/2020 09:46:37'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioContainsAnAccountAfterItIsAddedToAnyOfItsDecendents stamp: 'fr 11/9/2020 09:46:37'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioDoesNotContainAnythingThatWasNotAddedToItself stamp: 'fr 11/9/2020 09:46:37'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotAddItself stamp: 'fr 11/9/2020 09:46:37'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioCanNotAddItsParent stamp: 'fr 11/9/2020 09:46:37'!
PASSED!

!testRun: #PortfolioTest #test17PortfolioCanNotAddAnyAncestor stamp: 'fr 11/9/2020 09:46:37'!
PASSED!

!testRun: #PortfolioTest #test18PortfolioCanNotAddAnyPreviousMemberOfTheTree stamp: 'fr 11/9/2020 09:46:37'!
PASSED!

!testRun: #PortfolioTest #test19PortfolioCanNotAddAnotherOneWhichSharesChild stamp: 'fr 11/9/2020 09:46:37'!
PASSED!

!testRun: #PortfolioTest #test20PortfolioCanNotAddDuplicateAccountIndirectly stamp: 'fr 11/9/2020 09:46:37'!
PASSED!

!testRun: #PortfolioTest #test21AddingShouldBehaveIdenticallyAsCreatingAPortfolioWithAccounts stamp: 'fr 11/9/2020 09:46:37'!
PASSED!

!testRun: #PortfolioTest #test22CreatingAPortfolioWithAccountsShouldFailIdenticallyAsWhenAddingThem stamp: 'fr 11/9/2020 09:46:37'!
PASSED!
!PortfolioTest methodsFor: 'tests - tree structure' stamp: 'fr 11/9/2020 09:46:58' prior: 50882664!
test18PortfolioCanNotAddAnyPreviousMemberOfTheTree

	| rootPortfolio anotherLeafPortfolio |
	anotherLeafPortfolio _ Portfolio new.
	portfolioWithEmptyPortfolio _ Portfolio with: (OrderedCollection with: emptyPortfolio).
	rootPortfolio _ Portfolio with: (OrderedCollection with: portfolioWithEmptyPortfolio with: anotherLeafPortfolio).
	
	self  should: [emptyPortfolio add: anotherLeafPortfolio] 
		raise: Error 
		withMessageText: Portfolio canNotAddAccountErrorDescription! !
!PortfolioTest methodsFor: 'tests - tree structure' stamp: 'fr 11/9/2020 09:47:32' prior: 50882682!
test19PortfolioCanNotAddAnotherOneWhichSharesChild

	| anotherParentPortfolio |
	portfolioWithEmptyPortfolio _ Portfolio with: (OrderedCollection with: emptyPortfolio).
	anotherParentPortfolio _ Portfolio with: (OrderedCollection with: emptyPortfolio).
	
	self  should: [portfolioWithEmptyPortfolio add: anotherParentPortfolio] 
		raise: Error 
		withMessageText: Portfolio canNotAddAccountErrorDescription! !

!testRun: #PortfolioTest #test19PortfolioCanNotAddAnotherOneWhichSharesChild stamp: 'fr 11/9/2020 09:47:35'!
PASSED!

!testRun: #PortfolioTest #test01EmptyPortfolioHasBalanceZero stamp: 'fr 11/9/2020 09:47:35'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioWithASingleAccountWithNoTransactionsHasBalanceZero stamp: 'fr 11/9/2020 09:47:35'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioWithASingleAccountReflectsItsTransactionsValuesInItsBalance stamp: 'fr 11/9/2020 09:47:35'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithMultipleAccountsAndPortfoliosReflectsTheirTransactionsValuesInItsBalance stamp: 'fr 11/9/2020 09:47:35'!
PASSED!

!testRun: #PortfolioTest #test05EmptyPortfolioHasNotRegisteredAnyTransaction stamp: 'fr 11/9/2020 09:47:35'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioWithASingleAccountRegistersItsTransactions stamp: 'fr 11/9/2020 09:47:35'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioWithMulltipleAccountsAndPortfoliosRegistersAllTheirTransactions stamp: 'fr 11/9/2020 09:47:35'!
PASSED!

!testRun: #PortfolioTest #test08EmptyPortfolioDoesNotExhibitAnyTransaction stamp: 'fr 11/9/2020 09:47:35'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithASingleAccountExhibitsItsTransactions stamp: 'fr 11/9/2020 09:47:35'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioWithMultipleAccountsAndPortfoliosExhibitsAllTheirTransactionsCombined stamp: 'fr 11/9/2020 09:47:35'!
PASSED!

!testRun: #PortfolioTest #test11EmptyPortfolioDoesNotContainAnyAccount stamp: 'fr 11/9/2020 09:47:35'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioContainsAnAccountAfterItIsAdded stamp: 'fr 11/9/2020 09:47:35'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioContainsAnAccountAfterItIsAddedToAnyOfItsDecendents stamp: 'fr 11/9/2020 09:47:35'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioDoesNotContainAnythingThatWasNotAddedToItself stamp: 'fr 11/9/2020 09:47:35'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotAddItself stamp: 'fr 11/9/2020 09:47:35'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioCanNotAddItsParent stamp: 'fr 11/9/2020 09:47:35'!
PASSED!

!testRun: #PortfolioTest #test17PortfolioCanNotAddAnyAncestor stamp: 'fr 11/9/2020 09:47:35'!
PASSED!

!testRun: #PortfolioTest #test18PortfolioCanNotAddAnyPreviousMemberOfTheTree stamp: 'fr 11/9/2020 09:47:35'!
PASSED!

!testRun: #PortfolioTest #test19PortfolioCanNotAddAnotherOneWhichSharesChild stamp: 'fr 11/9/2020 09:47:35'!
PASSED!

!testRun: #PortfolioTest #test20PortfolioCanNotAddDuplicateAccountIndirectly stamp: 'fr 11/9/2020 09:47:35'!
PASSED!

!testRun: #PortfolioTest #test21AddingShouldBehaveIdenticallyAsCreatingAPortfolioWithAccounts stamp: 'fr 11/9/2020 09:47:35'!
PASSED!

!testRun: #PortfolioTest #test22CreatingAPortfolioWithAccountsShouldFailIdenticallyAsWhenAddingThem stamp: 'fr 11/9/2020 09:47:35'!
PASSED!
!PortfolioTest methodsFor: 'tests - tree structure' stamp: 'fr 11/9/2020 09:47:45' prior: 50882725!
test20PortfolioCanNotAddDuplicateAccountIndirectly

	| rootPortfolio |
	portfolioWithEmptyPortfolio _ Portfolio with: (OrderedCollection with: emptyPortfolio).
	rootPortfolio _ Portfolio with: (OrderedCollection with: portfolioWithEmptyPortfolio).
	
	self  should: [rootPortfolio add: emptyPortfolio] 
		raise: Error 
		withMessageText: Portfolio canNotAddAccountErrorDescription! !

!testRun: #PortfolioTest #test20PortfolioCanNotAddDuplicateAccountIndirectly stamp: 'fr 11/9/2020 09:47:45'!
PASSED!

!testRun: #PortfolioTest #test01EmptyPortfolioHasBalanceZero stamp: 'fr 11/9/2020 09:47:45'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioWithASingleAccountWithNoTransactionsHasBalanceZero stamp: 'fr 11/9/2020 09:47:45'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioWithASingleAccountReflectsItsTransactionsValuesInItsBalance stamp: 'fr 11/9/2020 09:47:45'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithMultipleAccountsAndPortfoliosReflectsTheirTransactionsValuesInItsBalance stamp: 'fr 11/9/2020 09:47:45'!
PASSED!

!testRun: #PortfolioTest #test05EmptyPortfolioHasNotRegisteredAnyTransaction stamp: 'fr 11/9/2020 09:47:45'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioWithASingleAccountRegistersItsTransactions stamp: 'fr 11/9/2020 09:47:45'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioWithMulltipleAccountsAndPortfoliosRegistersAllTheirTransactions stamp: 'fr 11/9/2020 09:47:45'!
PASSED!

!testRun: #PortfolioTest #test08EmptyPortfolioDoesNotExhibitAnyTransaction stamp: 'fr 11/9/2020 09:47:45'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithASingleAccountExhibitsItsTransactions stamp: 'fr 11/9/2020 09:47:45'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioWithMultipleAccountsAndPortfoliosExhibitsAllTheirTransactionsCombined stamp: 'fr 11/9/2020 09:47:45'!
PASSED!

!testRun: #PortfolioTest #test11EmptyPortfolioDoesNotContainAnyAccount stamp: 'fr 11/9/2020 09:47:45'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioContainsAnAccountAfterItIsAdded stamp: 'fr 11/9/2020 09:47:45'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioContainsAnAccountAfterItIsAddedToAnyOfItsDecendents stamp: 'fr 11/9/2020 09:47:45'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioDoesNotContainAnythingThatWasNotAddedToItself stamp: 'fr 11/9/2020 09:47:45'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotAddItself stamp: 'fr 11/9/2020 09:47:45'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioCanNotAddItsParent stamp: 'fr 11/9/2020 09:47:45'!
PASSED!

!testRun: #PortfolioTest #test17PortfolioCanNotAddAnyAncestor stamp: 'fr 11/9/2020 09:47:45'!
PASSED!

!testRun: #PortfolioTest #test18PortfolioCanNotAddAnyPreviousMemberOfTheTree stamp: 'fr 11/9/2020 09:47:45'!
PASSED!

!testRun: #PortfolioTest #test19PortfolioCanNotAddAnotherOneWhichSharesChild stamp: 'fr 11/9/2020 09:47:45'!
PASSED!

!testRun: #PortfolioTest #test20PortfolioCanNotAddDuplicateAccountIndirectly stamp: 'fr 11/9/2020 09:47:46'!
PASSED!

!testRun: #PortfolioTest #test21AddingShouldBehaveIdenticallyAsCreatingAPortfolioWithAccounts stamp: 'fr 11/9/2020 09:47:46'!
PASSED!

!testRun: #PortfolioTest #test22CreatingAPortfolioWithAccountsShouldFailIdenticallyAsWhenAddingThem stamp: 'fr 11/9/2020 09:47:46'!
PASSED!
!PortfolioTest methodsFor: 'tests - tree structure' stamp: 'fr 11/9/2020 09:48:37' prior: 50882762!
test22CreatingAPortfolioWithAccountsShouldFailIdenticallyAsWhenAddingThem

	| anotherParentPortfolio |
	portfolioWithEmptyPortfolio _ Portfolio with: (OrderedCollection with: emptyPortfolio).
	anotherParentPortfolio _ Portfolio with: (OrderedCollection with: emptyPortfolio). 
	
	self  should: [Portfolio with: (OrderedCollection with: portfolioWithEmptyPortfolio with: anotherParentPortfolio)] 
		raise: Error 
		withMessageText: Portfolio canNotAddAccountErrorDescription! !

!testRun: #PortfolioTest #test22CreatingAPortfolioWithAccountsShouldFailIdenticallyAsWhenAddingThem stamp: 'fr 11/9/2020 09:48:38'!
PASSED!

!testRun: #PortfolioTest #test01EmptyPortfolioHasBalanceZero stamp: 'fr 11/9/2020 09:48:38'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioWithASingleAccountWithNoTransactionsHasBalanceZero stamp: 'fr 11/9/2020 09:48:38'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioWithASingleAccountReflectsItsTransactionsValuesInItsBalance stamp: 'fr 11/9/2020 09:48:38'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithMultipleAccountsAndPortfoliosReflectsTheirTransactionsValuesInItsBalance stamp: 'fr 11/9/2020 09:48:38'!
PASSED!

!testRun: #PortfolioTest #test05EmptyPortfolioHasNotRegisteredAnyTransaction stamp: 'fr 11/9/2020 09:48:38'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioWithASingleAccountRegistersItsTransactions stamp: 'fr 11/9/2020 09:48:38'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioWithMulltipleAccountsAndPortfoliosRegistersAllTheirTransactions stamp: 'fr 11/9/2020 09:48:38'!
PASSED!

!testRun: #PortfolioTest #test08EmptyPortfolioDoesNotExhibitAnyTransaction stamp: 'fr 11/9/2020 09:48:38'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithASingleAccountExhibitsItsTransactions stamp: 'fr 11/9/2020 09:48:38'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioWithMultipleAccountsAndPortfoliosExhibitsAllTheirTransactionsCombined stamp: 'fr 11/9/2020 09:48:38'!
PASSED!

!testRun: #PortfolioTest #test11EmptyPortfolioDoesNotContainAnyAccount stamp: 'fr 11/9/2020 09:48:38'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioContainsAnAccountAfterItIsAdded stamp: 'fr 11/9/2020 09:48:38'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioContainsAnAccountAfterItIsAddedToAnyOfItsDecendents stamp: 'fr 11/9/2020 09:48:38'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioDoesNotContainAnythingThatWasNotAddedToItself stamp: 'fr 11/9/2020 09:48:38'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotAddItself stamp: 'fr 11/9/2020 09:48:38'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioCanNotAddItsParent stamp: 'fr 11/9/2020 09:48:38'!
PASSED!

!testRun: #PortfolioTest #test17PortfolioCanNotAddAnyAncestor stamp: 'fr 11/9/2020 09:48:38'!
PASSED!

!testRun: #PortfolioTest #test18PortfolioCanNotAddAnyPreviousMemberOfTheTree stamp: 'fr 11/9/2020 09:48:38'!
PASSED!

!testRun: #PortfolioTest #test19PortfolioCanNotAddAnotherOneWhichSharesChild stamp: 'fr 11/9/2020 09:48:38'!
PASSED!

!testRun: #PortfolioTest #test20PortfolioCanNotAddDuplicateAccountIndirectly stamp: 'fr 11/9/2020 09:48:38'!
PASSED!

!testRun: #PortfolioTest #test21AddingShouldBehaveIdenticallyAsCreatingAPortfolioWithAccounts stamp: 'fr 11/9/2020 09:48:38'!
PASSED!

!testRun: #PortfolioTest #test22CreatingAPortfolioWithAccountsShouldFailIdenticallyAsWhenAddingThem stamp: 'fr 11/9/2020 09:48:38'!
PASSED!
!PortfolioTest methodsFor: 'tests - tree structure' stamp: 'fr 11/9/2020 09:48:54' prior: 50890771!
test22CreatingAPortfolioWithAccountsShouldFailIdenticallyAsWhenAddingThem

	| anotherParentPortfolio |
	anotherParentPortfolio _ Portfolio with: (OrderedCollection with: emptyPortfolio). 
	
	self  should: [Portfolio with: (OrderedCollection with: portfolioWithEmptyPortfolio with: anotherParentPortfolio)] 
		raise: Error 
		withMessageText: Portfolio canNotAddAccountErrorDescription! !
!PortfolioTest methodsFor: 'setup' stamp: 'fr 11/9/2020 09:49:01' prior: 50887226 overrides: 16927572!
setUp

	emptyPortfolio _ Portfolio new. 

	account _ ReceptiveAccount new.
	
	portfolioWithAccount _ Portfolio with: (OrderedCollection with: account).
	
	anotherAccount _ ReceptiveAccount new.
	
	portfolioWithAccountAndPortfolio _ Portfolio with: (OrderedCollection with: anotherAccount with: portfolioWithAccount).

	portfolioWithEmptyPortfolio _ Portfolio with: (OrderedCollection with: emptyPortfolio).



! !
!PortfolioTest methodsFor: 'tests - add' stamp: 'fr 11/9/2020 09:49:20' prior: 50890325!
test13PortfolioContainsAnAccountAfterItIsAddedToAnyOfItsDecendents

	emptyPortfolio add: account.
	self assert: (portfolioWithEmptyPortfolio contains: account)! !
!PortfolioTest methodsFor: 'tests - tree structure' stamp: 'fr 11/9/2020 09:49:33' prior: 50890336!
test16PortfolioCanNotAddItsParent
	
	self  should: [emptyPortfolio add: portfolioWithEmptyPortfolio] 
		raise: Error 
		withMessageText: Portfolio canNotAddAccountErrorDescription! !
!PortfolioTest methodsFor: 'tests - tree structure' stamp: 'fr 11/9/2020 09:49:38' prior: 50890437!
test17PortfolioCanNotAddAnyAncestor

	| rootPortfolio |
	rootPortfolio _ Portfolio with: (OrderedCollection with: portfolioWithEmptyPortfolio).
	
	self  should: [emptyPortfolio add: rootPortfolio] 
		raise: Error 
		withMessageText: Portfolio canNotAddAccountErrorDescription! !
!PortfolioTest methodsFor: 'tests - tree structure' stamp: 'fr 11/9/2020 09:49:44' prior: 50890541!
test18PortfolioCanNotAddAnyPreviousMemberOfTheTree

	| rootPortfolio anotherLeafPortfolio |
	anotherLeafPortfolio _ Portfolio new.
	rootPortfolio _ Portfolio with: (OrderedCollection with: portfolioWithEmptyPortfolio with: anotherLeafPortfolio).
	
	self  should: [emptyPortfolio add: anotherLeafPortfolio] 
		raise: Error 
		withMessageText: Portfolio canNotAddAccountErrorDescription! !

!testRun: #PortfolioTest #test18PortfolioCanNotAddAnyPreviousMemberOfTheTree stamp: 'fr 11/9/2020 09:49:53'!
PASSED!

!testRun: #PortfolioTest #test01EmptyPortfolioHasBalanceZero stamp: 'fr 11/9/2020 09:49:53'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioWithASingleAccountWithNoTransactionsHasBalanceZero stamp: 'fr 11/9/2020 09:49:53'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioWithASingleAccountReflectsItsTransactionsValuesInItsBalance stamp: 'fr 11/9/2020 09:49:53'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithMultipleAccountsAndPortfoliosReflectsTheirTransactionsValuesInItsBalance stamp: 'fr 11/9/2020 09:49:53'!
PASSED!

!testRun: #PortfolioTest #test05EmptyPortfolioHasNotRegisteredAnyTransaction stamp: 'fr 11/9/2020 09:49:53'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioWithASingleAccountRegistersItsTransactions stamp: 'fr 11/9/2020 09:49:53'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioWithMulltipleAccountsAndPortfoliosRegistersAllTheirTransactions stamp: 'fr 11/9/2020 09:49:53'!
PASSED!

!testRun: #PortfolioTest #test08EmptyPortfolioDoesNotExhibitAnyTransaction stamp: 'fr 11/9/2020 09:49:53'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithASingleAccountExhibitsItsTransactions stamp: 'fr 11/9/2020 09:49:53'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioWithMultipleAccountsAndPortfoliosExhibitsAllTheirTransactionsCombined stamp: 'fr 11/9/2020 09:49:53'!
PASSED!

!testRun: #PortfolioTest #test11EmptyPortfolioDoesNotContainAnyAccount stamp: 'fr 11/9/2020 09:49:53'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioContainsAnAccountAfterItIsAdded stamp: 'fr 11/9/2020 09:49:53'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioContainsAnAccountAfterItIsAddedToAnyOfItsDecendents stamp: 'fr 11/9/2020 09:49:53'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioDoesNotContainAnythingThatWasNotAddedToItself stamp: 'fr 11/9/2020 09:49:53'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotAddItself stamp: 'fr 11/9/2020 09:49:53'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioCanNotAddItsParent stamp: 'fr 11/9/2020 09:49:53'!
PASSED!

!testRun: #PortfolioTest #test17PortfolioCanNotAddAnyAncestor stamp: 'fr 11/9/2020 09:49:53'!
PASSED!

!testRun: #PortfolioTest #test18PortfolioCanNotAddAnyPreviousMemberOfTheTree stamp: 'fr 11/9/2020 09:49:53'!
PASSED!

!testRun: #PortfolioTest #test19PortfolioCanNotAddAnotherOneWhichSharesChild stamp: 'fr 11/9/2020 09:49:53'!
PASSED!

!testRun: #PortfolioTest #test20PortfolioCanNotAddDuplicateAccountIndirectly stamp: 'fr 11/9/2020 09:49:53'!
PASSED!

!testRun: #PortfolioTest #test21AddingShouldBehaveIdenticallyAsCreatingAPortfolioWithAccounts stamp: 'fr 11/9/2020 09:49:53'!
PASSED!

!testRun: #PortfolioTest #test22CreatingAPortfolioWithAccountsShouldFailIdenticallyAsWhenAddingThem stamp: 'fr 11/9/2020 09:49:53'!
PASSED!
!PortfolioTest methodsFor: 'tests - tree structure' stamp: 'fr 11/9/2020 09:49:58' prior: 50890560!
test19PortfolioCanNotAddAnotherOneWhichSharesChild

	| anotherParentPortfolio |
	anotherParentPortfolio _ Portfolio with: (OrderedCollection with: emptyPortfolio).
	
	self  should: [portfolioWithEmptyPortfolio add: anotherParentPortfolio] 
		raise: Error 
		withMessageText: Portfolio canNotAddAccountErrorDescription! !

!testRun: #PortfolioTest #test19PortfolioCanNotAddAnotherOneWhichSharesChild stamp: 'fr 11/9/2020 09:49:59'!
PASSED!

!testRun: #PortfolioTest #test01EmptyPortfolioHasBalanceZero stamp: 'fr 11/9/2020 09:49:59'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioWithASingleAccountWithNoTransactionsHasBalanceZero stamp: 'fr 11/9/2020 09:49:59'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioWithASingleAccountReflectsItsTransactionsValuesInItsBalance stamp: 'fr 11/9/2020 09:49:59'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithMultipleAccountsAndPortfoliosReflectsTheirTransactionsValuesInItsBalance stamp: 'fr 11/9/2020 09:49:59'!
PASSED!

!testRun: #PortfolioTest #test05EmptyPortfolioHasNotRegisteredAnyTransaction stamp: 'fr 11/9/2020 09:49:59'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioWithASingleAccountRegistersItsTransactions stamp: 'fr 11/9/2020 09:49:59'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioWithMulltipleAccountsAndPortfoliosRegistersAllTheirTransactions stamp: 'fr 11/9/2020 09:49:59'!
PASSED!

!testRun: #PortfolioTest #test08EmptyPortfolioDoesNotExhibitAnyTransaction stamp: 'fr 11/9/2020 09:49:59'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithASingleAccountExhibitsItsTransactions stamp: 'fr 11/9/2020 09:49:59'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioWithMultipleAccountsAndPortfoliosExhibitsAllTheirTransactionsCombined stamp: 'fr 11/9/2020 09:49:59'!
PASSED!

!testRun: #PortfolioTest #test11EmptyPortfolioDoesNotContainAnyAccount stamp: 'fr 11/9/2020 09:49:59'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioContainsAnAccountAfterItIsAdded stamp: 'fr 11/9/2020 09:49:59'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioContainsAnAccountAfterItIsAddedToAnyOfItsDecendents stamp: 'fr 11/9/2020 09:49:59'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioDoesNotContainAnythingThatWasNotAddedToItself stamp: 'fr 11/9/2020 09:49:59'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotAddItself stamp: 'fr 11/9/2020 09:49:59'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioCanNotAddItsParent stamp: 'fr 11/9/2020 09:49:59'!
PASSED!

!testRun: #PortfolioTest #test17PortfolioCanNotAddAnyAncestor stamp: 'fr 11/9/2020 09:49:59'!
PASSED!

!testRun: #PortfolioTest #test18PortfolioCanNotAddAnyPreviousMemberOfTheTree stamp: 'fr 11/9/2020 09:49:59'!
PASSED!

!testRun: #PortfolioTest #test19PortfolioCanNotAddAnotherOneWhichSharesChild stamp: 'fr 11/9/2020 09:49:59'!
PASSED!

!testRun: #PortfolioTest #test20PortfolioCanNotAddDuplicateAccountIndirectly stamp: 'fr 11/9/2020 09:49:59'!
PASSED!

!testRun: #PortfolioTest #test21AddingShouldBehaveIdenticallyAsCreatingAPortfolioWithAccounts stamp: 'fr 11/9/2020 09:49:59'!
PASSED!

!testRun: #PortfolioTest #test22CreatingAPortfolioWithAccountsShouldFailIdenticallyAsWhenAddingThem stamp: 'fr 11/9/2020 09:49:59'!
PASSED!
!PortfolioTest methodsFor: 'tests - tree structure' stamp: 'fr 11/9/2020 09:50:04' prior: 50890666!
test20PortfolioCanNotAddDuplicateAccountIndirectly

	| rootPortfolio |
	rootPortfolio _ Portfolio with: (OrderedCollection with: portfolioWithEmptyPortfolio).
	
	self  should: [rootPortfolio add: emptyPortfolio] 
		raise: Error 
		withMessageText: Portfolio canNotAddAccountErrorDescription! !

!testRun: #PortfolioTest #test20PortfolioCanNotAddDuplicateAccountIndirectly stamp: 'fr 11/9/2020 09:50:05'!
PASSED!

!testRun: #PortfolioTest #test01EmptyPortfolioHasBalanceZero stamp: 'fr 11/9/2020 09:50:05'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioWithASingleAccountWithNoTransactionsHasBalanceZero stamp: 'fr 11/9/2020 09:50:05'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioWithASingleAccountReflectsItsTransactionsValuesInItsBalance stamp: 'fr 11/9/2020 09:50:05'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithMultipleAccountsAndPortfoliosReflectsTheirTransactionsValuesInItsBalance stamp: 'fr 11/9/2020 09:50:05'!
PASSED!

!testRun: #PortfolioTest #test05EmptyPortfolioHasNotRegisteredAnyTransaction stamp: 'fr 11/9/2020 09:50:05'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioWithASingleAccountRegistersItsTransactions stamp: 'fr 11/9/2020 09:50:05'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioWithMulltipleAccountsAndPortfoliosRegistersAllTheirTransactions stamp: 'fr 11/9/2020 09:50:05'!
PASSED!

!testRun: #PortfolioTest #test08EmptyPortfolioDoesNotExhibitAnyTransaction stamp: 'fr 11/9/2020 09:50:05'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithASingleAccountExhibitsItsTransactions stamp: 'fr 11/9/2020 09:50:05'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioWithMultipleAccountsAndPortfoliosExhibitsAllTheirTransactionsCombined stamp: 'fr 11/9/2020 09:50:05'!
PASSED!

!testRun: #PortfolioTest #test11EmptyPortfolioDoesNotContainAnyAccount stamp: 'fr 11/9/2020 09:50:05'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioContainsAnAccountAfterItIsAdded stamp: 'fr 11/9/2020 09:50:05'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioContainsAnAccountAfterItIsAddedToAnyOfItsDecendents stamp: 'fr 11/9/2020 09:50:05'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioDoesNotContainAnythingThatWasNotAddedToItself stamp: 'fr 11/9/2020 09:50:05'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotAddItself stamp: 'fr 11/9/2020 09:50:05'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioCanNotAddItsParent stamp: 'fr 11/9/2020 09:50:05'!
PASSED!

!testRun: #PortfolioTest #test17PortfolioCanNotAddAnyAncestor stamp: 'fr 11/9/2020 09:50:05'!
PASSED!

!testRun: #PortfolioTest #test18PortfolioCanNotAddAnyPreviousMemberOfTheTree stamp: 'fr 11/9/2020 09:50:05'!
PASSED!

!testRun: #PortfolioTest #test19PortfolioCanNotAddAnotherOneWhichSharesChild stamp: 'fr 11/9/2020 09:50:05'!
PASSED!

!testRun: #PortfolioTest #test20PortfolioCanNotAddDuplicateAccountIndirectly stamp: 'fr 11/9/2020 09:50:05'!
PASSED!

!testRun: #PortfolioTest #test21AddingShouldBehaveIdenticallyAsCreatingAPortfolioWithAccounts stamp: 'fr 11/9/2020 09:50:05'!
PASSED!

!testRun: #PortfolioTest #test22CreatingAPortfolioWithAccountsShouldFailIdenticallyAsWhenAddingThem stamp: 'fr 11/9/2020 09:50:05'!
PASSED!
!PortfolioTest methodsFor: 'tests - tree structure' stamp: 'fr 11/9/2020 09:51:51' prior: 50891046!
test19PortfolioCanNotAddAnotherOneWhichSharesChild

	| anotherPortfolioWithEmptyPortfolio |
	anotherPortfolioWithEmptyPortfolio _ Portfolio with: (OrderedCollection with: emptyPortfolio).
	
	self  should: [portfolioWithEmptyPortfolio add: anotherPortfolioWithEmptyPortfolio] 
		raise: Error 
		withMessageText: Portfolio canNotAddAccountErrorDescription! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'fr 11/9/2020 09:51:56' prior: 50891251!
test19PortfolioCanNotAddAnotherOneWhichSharesChild

	 
	anotherPortfolioWithEmptyPortfolio _ Portfolio with: (OrderedCollection with: emptyPortfolio).
	
	self  should: [portfolioWithEmptyPortfolio add: anotherPortfolioWithEmptyPortfolio] 
		raise: Error 
		withMessageText: Portfolio canNotAddAccountErrorDescription! !

!classDefinition: #PortfolioTest category: 'Portfolio-Ejercicio' stamp: 'fr 11/9/2020 09:51:56'!
TestCase subclass: #PortfolioTest
	instanceVariableNames: 'emptyPortfolio account portfolioWithAccount anotherAccount portfolioWithAccountAndPortfolio deposit anotherDeposit portfolioWithEmptyPortfolio anotherPortfolioWithEmptyPortfolio'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!
!PortfolioTest methodsFor: 'tests - tree structure' stamp: 'fr 11/9/2020 09:51:59' prior: 50891266!
test19PortfolioCanNotAddAnotherOneWhichSharesChild

	anotherPortfolioWithEmptyPortfolio _ Portfolio with: (OrderedCollection with: emptyPortfolio).
	
	self  should: [portfolioWithEmptyPortfolio add: anotherPortfolioWithEmptyPortfolio] 
		raise: Error 
		withMessageText: Portfolio canNotAddAccountErrorDescription! !
!PortfolioTest methodsFor: 'tests - tree structure' stamp: 'fr 11/9/2020 09:52:11' prior: 50890879!
test22CreatingAPortfolioWithAccountsShouldFailIdenticallyAsWhenAddingThem

	anotherPortfolioWithEmptyPortfolio _ Portfolio with: (OrderedCollection with: emptyPortfolio). 
	
	self  should: [Portfolio with: (OrderedCollection with: portfolioWithEmptyPortfolio with: anotherPortfolioWithEmptyPortfolio)] 
		raise: Error 
		withMessageText: Portfolio canNotAddAccountErrorDescription! !
!PortfolioTest methodsFor: 'tests - tree structure' stamp: 'fr 11/9/2020 09:53:16' prior: 50891293!
test19PortfolioCanNotAddAnotherOneWhichSharesChild
	
	self  should: [portfolioWithEmptyPortfolio add: anotherPortfolioWithEmptyPortfolio] 
		raise: Error 
		withMessageText: Portfolio canNotAddAccountErrorDescription! !
!PortfolioTest methodsFor: 'setup' stamp: 'fr 11/9/2020 09:53:26' prior: 50890895 overrides: 16927572!
setUp

	emptyPortfolio _ Portfolio new. 

	account _ ReceptiveAccount new.
	
	portfolioWithAccount _ Portfolio with: (OrderedCollection with: account).
	
	anotherAccount _ ReceptiveAccount new.
	
	portfolioWithAccountAndPortfolio _ Portfolio with: (OrderedCollection with: anotherAccount with: portfolioWithAccount).

	portfolioWithEmptyPortfolio _ Portfolio with: (OrderedCollection with: emptyPortfolio).
	
	anotherPortfolioWithEmptyPortfolio _ Portfolio with: (OrderedCollection with: emptyPortfolio).




! !
!PortfolioTest methodsFor: 'tests - tree structure' stamp: 'fr 11/9/2020 09:53:34' prior: 50891307!
test22CreatingAPortfolioWithAccountsShouldFailIdenticallyAsWhenAddingThem
	
	self  should: [Portfolio with: (OrderedCollection with: portfolioWithEmptyPortfolio with: anotherPortfolioWithEmptyPortfolio)] 
		raise: Error 
		withMessageText: Portfolio canNotAddAccountErrorDescription! !

!testRun: #PortfolioTest #test17PortfolioCanNotAddAnyAncestor stamp: 'fr 11/9/2020 09:53:49'!
PASSED!

!testRun: #PortfolioTest #test01EmptyPortfolioHasBalanceZero stamp: 'fr 11/9/2020 09:53:49'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioWithASingleAccountWithNoTransactionsHasBalanceZero stamp: 'fr 11/9/2020 09:53:49'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioWithASingleAccountReflectsItsTransactionsValuesInItsBalance stamp: 'fr 11/9/2020 09:53:49'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithMultipleAccountsAndPortfoliosReflectsTheirTransactionsValuesInItsBalance stamp: 'fr 11/9/2020 09:53:49'!
PASSED!

!testRun: #PortfolioTest #test05EmptyPortfolioHasNotRegisteredAnyTransaction stamp: 'fr 11/9/2020 09:53:49'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioWithASingleAccountRegistersItsTransactions stamp: 'fr 11/9/2020 09:53:49'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioWithMulltipleAccountsAndPortfoliosRegistersAllTheirTransactions stamp: 'fr 11/9/2020 09:53:49'!
PASSED!

!testRun: #PortfolioTest #test08EmptyPortfolioDoesNotExhibitAnyTransaction stamp: 'fr 11/9/2020 09:53:49'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithASingleAccountExhibitsItsTransactions stamp: 'fr 11/9/2020 09:53:49'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioWithMultipleAccountsAndPortfoliosExhibitsAllTheirTransactionsCombined stamp: 'fr 11/9/2020 09:53:49'!
PASSED!

!testRun: #PortfolioTest #test11EmptyPortfolioDoesNotContainAnyAccount stamp: 'fr 11/9/2020 09:53:49'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioContainsAnAccountAfterItIsAdded stamp: 'fr 11/9/2020 09:53:49'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioContainsAnAccountAfterItIsAddedToAnyOfItsDecendents stamp: 'fr 11/9/2020 09:53:49'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioDoesNotContainAnythingThatWasNotAddedToItself stamp: 'fr 11/9/2020 09:53:49'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotAddItself stamp: 'fr 11/9/2020 09:53:49'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioCanNotAddItsParent stamp: 'fr 11/9/2020 09:53:49'!
PASSED!

!testRun: #PortfolioTest #test17PortfolioCanNotAddAnyAncestor stamp: 'fr 11/9/2020 09:53:49'!
PASSED!

!testRun: #PortfolioTest #test18PortfolioCanNotAddAnyPreviousMemberOfTheTree stamp: 'fr 11/9/2020 09:53:49'!
PASSED!

!testRun: #PortfolioTest #test19PortfolioCanNotAddAnotherOneWhichSharesChild stamp: 'fr 11/9/2020 09:53:49'!
PASSED!

!testRun: #PortfolioTest #test20PortfolioCanNotAddDuplicateAccountIndirectly stamp: 'fr 11/9/2020 09:53:49'!
PASSED!

!testRun: #PortfolioTest #test21AddingShouldBehaveIdenticallyAsCreatingAPortfolioWithAccounts stamp: 'fr 11/9/2020 09:53:49'!
PASSED!

!testRun: #PortfolioTest #test22CreatingAPortfolioWithAccountsShouldFailIdenticallyAsWhenAddingThem stamp: 'fr 11/9/2020 09:53:49'!
PASSED!
!PortfolioTest methodsFor: 'tests - tree structure' stamp: 'fr 11/9/2020 09:56:13' prior: 50890929!
test17PortfolioCanNotAddAnyAncestor

	| portfolioWithEmptyPortfolioWithEmptyPortfolio |
	portfolioWithEmptyPortfolioWithEmptyPortfolio _ Portfolio with: (OrderedCollection with: portfolioWithEmptyPortfolio).
	
	self  should: [emptyPortfolio add: portfolioWithEmptyPortfolioWithEmptyPortfolio] 
		raise: Error 
		withMessageText: Portfolio canNotAddAccountErrorDescription! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'fr 11/9/2020 09:56:20' prior: 50891455!
test17PortfolioCanNotAddAnyAncestor

	 
	portfolioWithEmptyPortfolioWithEmptyPortfolio _ Portfolio with: (OrderedCollection with: portfolioWithEmptyPortfolio).
	
	self  should: [emptyPortfolio add: portfolioWithEmptyPortfolioWithEmptyPortfolio] 
		raise: Error 
		withMessageText: Portfolio canNotAddAccountErrorDescription! !

!classDefinition: #PortfolioTest category: 'Portfolio-Ejercicio' stamp: 'fr 11/9/2020 09:56:20'!
TestCase subclass: #PortfolioTest
	instanceVariableNames: 'emptyPortfolio account portfolioWithAccount anotherAccount portfolioWithAccountAndPortfolio deposit anotherDeposit portfolioWithEmptyPortfolio anotherPortfolioWithEmptyPortfolio portfolioWithEmptyPortfolioWithEmptyPortfolio'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!
!PortfolioTest methodsFor: 'tests - tree structure' stamp: 'fr 11/9/2020 09:56:22' prior: 50891470!
test17PortfolioCanNotAddAnyAncestor

	portfolioWithEmptyPortfolioWithEmptyPortfolio _ Portfolio with: (OrderedCollection with: portfolioWithEmptyPortfolio).
	
	self  should: [emptyPortfolio add: portfolioWithEmptyPortfolioWithEmptyPortfolio] 
		raise: Error 
		withMessageText: Portfolio canNotAddAccountErrorDescription! !
!PortfolioTest methodsFor: 'tests - tree structure' stamp: 'fr 11/9/2020 09:56:44' prior: 50891149!
test20PortfolioCanNotAddDuplicateAccountIndirectly

	portfolioWithEmptyPortfolioWithEmptyPortfolio _ Portfolio with: (OrderedCollection with: portfolioWithEmptyPortfolio).
	
	self  should: [portfolioWithEmptyPortfolioWithEmptyPortfolio add: emptyPortfolio] 
		raise: Error 
		withMessageText: Portfolio canNotAddAccountErrorDescription! !

!testRun: #PortfolioTest #test20PortfolioCanNotAddDuplicateAccountIndirectly stamp: 'fr 11/9/2020 09:56:45'!
PASSED!

!testRun: #PortfolioTest #test01EmptyPortfolioHasBalanceZero stamp: 'fr 11/9/2020 09:56:45'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioWithASingleAccountWithNoTransactionsHasBalanceZero stamp: 'fr 11/9/2020 09:56:45'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioWithASingleAccountReflectsItsTransactionsValuesInItsBalance stamp: 'fr 11/9/2020 09:56:45'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithMultipleAccountsAndPortfoliosReflectsTheirTransactionsValuesInItsBalance stamp: 'fr 11/9/2020 09:56:45'!
PASSED!

!testRun: #PortfolioTest #test05EmptyPortfolioHasNotRegisteredAnyTransaction stamp: 'fr 11/9/2020 09:56:45'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioWithASingleAccountRegistersItsTransactions stamp: 'fr 11/9/2020 09:56:45'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioWithMulltipleAccountsAndPortfoliosRegistersAllTheirTransactions stamp: 'fr 11/9/2020 09:56:45'!
PASSED!

!testRun: #PortfolioTest #test08EmptyPortfolioDoesNotExhibitAnyTransaction stamp: 'fr 11/9/2020 09:56:45'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithASingleAccountExhibitsItsTransactions stamp: 'fr 11/9/2020 09:56:45'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioWithMultipleAccountsAndPortfoliosExhibitsAllTheirTransactionsCombined stamp: 'fr 11/9/2020 09:56:45'!
PASSED!

!testRun: #PortfolioTest #test11EmptyPortfolioDoesNotContainAnyAccount stamp: 'fr 11/9/2020 09:56:45'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioContainsAnAccountAfterItIsAdded stamp: 'fr 11/9/2020 09:56:45'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioContainsAnAccountAfterItIsAddedToAnyOfItsDecendents stamp: 'fr 11/9/2020 09:56:45'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioDoesNotContainAnythingThatWasNotAddedToItself stamp: 'fr 11/9/2020 09:56:45'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotAddItself stamp: 'fr 11/9/2020 09:56:45'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioCanNotAddItsParent stamp: 'fr 11/9/2020 09:56:45'!
PASSED!

!testRun: #PortfolioTest #test17PortfolioCanNotAddAnyAncestor stamp: 'fr 11/9/2020 09:56:45'!
PASSED!

!testRun: #PortfolioTest #test18PortfolioCanNotAddAnyPreviousMemberOfTheTree stamp: 'fr 11/9/2020 09:56:45'!
PASSED!

!testRun: #PortfolioTest #test19PortfolioCanNotAddAnotherOneWhichSharesChild stamp: 'fr 11/9/2020 09:56:45'!
PASSED!

!testRun: #PortfolioTest #test20PortfolioCanNotAddDuplicateAccountIndirectly stamp: 'fr 11/9/2020 09:56:45'!
PASSED!

!testRun: #PortfolioTest #test21AddingShouldBehaveIdenticallyAsCreatingAPortfolioWithAccounts stamp: 'fr 11/9/2020 09:56:45'!
PASSED!

!testRun: #PortfolioTest #test22CreatingAPortfolioWithAccountsShouldFailIdenticallyAsWhenAddingThem stamp: 'fr 11/9/2020 09:56:45'!
PASSED!
!PortfolioTest methodsFor: 'tests - tree structure' stamp: 'fr 11/9/2020 09:56:56' prior: 50891512!
test20PortfolioCanNotAddDuplicateAccountIndirectly
	
	self  should: [portfolioWithEmptyPortfolioWithEmptyPortfolio add: emptyPortfolio] 
		raise: Error 
		withMessageText: Portfolio canNotAddAccountErrorDescription! !
!PortfolioTest methodsFor: 'setup' stamp: 'fr 11/9/2020 09:57:02' prior: 50891334 overrides: 16927572!
setUp

	emptyPortfolio _ Portfolio new. 

	account _ ReceptiveAccount new.
	
	portfolioWithAccount _ Portfolio with: (OrderedCollection with: account).
	
	anotherAccount _ ReceptiveAccount new.
	
	portfolioWithAccountAndPortfolio _ Portfolio with: (OrderedCollection with: anotherAccount with: portfolioWithAccount).

	portfolioWithEmptyPortfolio _ Portfolio with: (OrderedCollection with: emptyPortfolio).
	
	anotherPortfolioWithEmptyPortfolio _ Portfolio with: (OrderedCollection with: emptyPortfolio).

	portfolioWithEmptyPortfolioWithEmptyPortfolio _ Portfolio with: (OrderedCollection with: portfolioWithEmptyPortfolio).



! !
!PortfolioTest methodsFor: 'tests - tree structure' stamp: 'fr 11/9/2020 09:57:11' prior: 50891498!
test17PortfolioCanNotAddAnyAncestor
	
	self  should: [emptyPortfolio add: portfolioWithEmptyPortfolioWithEmptyPortfolio] 
		raise: Error 
		withMessageText: Portfolio canNotAddAccountErrorDescription! !

!classDefinition: #PortfolioTest category: 'Portfolio-Ejercicio' stamp: 'fr 11/9/2020 09:57:30'!
TestCase subclass: #PortfolioTest
	instanceVariableNames: 'emptyPortfolio account portfolioWithAccount anotherAccount portfolioWithAccountAndPortfolio deposit anotherDeposit portfolioWithEmptyPortfolio anotherPortfolioWithEmptyPortfolio portfolioWithPortfolioWithEmptyPortfolio'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'fr 11/9/2020 09:57:30' prior: 50891626 overrides: 16927572!
setUp

	emptyPortfolio _ Portfolio new. 

	account _ ReceptiveAccount new.
	
	portfolioWithAccount _ Portfolio with: (OrderedCollection with: account).
	
	anotherAccount _ ReceptiveAccount new.
	
	portfolioWithAccountAndPortfolio _ Portfolio with: (OrderedCollection with: anotherAccount with: portfolioWithAccount).

	portfolioWithEmptyPortfolio _ Portfolio with: (OrderedCollection with: emptyPortfolio).
	
	anotherPortfolioWithEmptyPortfolio _ Portfolio with: (OrderedCollection with: emptyPortfolio).

	portfolioWithPortfolioWithEmptyPortfolio _ Portfolio with: (OrderedCollection with: portfolioWithEmptyPortfolio).



! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'fr 11/9/2020 09:57:30' prior: 50891649!
test17PortfolioCanNotAddAnyAncestor
	
	self  should: [emptyPortfolio add: portfolioWithPortfolioWithEmptyPortfolio] 
		raise: Error 
		withMessageText: Portfolio canNotAddAccountErrorDescription! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'fr 11/9/2020 09:57:30' prior: 50891615!
test20PortfolioCanNotAddDuplicateAccountIndirectly
	
	self  should: [portfolioWithPortfolioWithEmptyPortfolio add: emptyPortfolio] 
		raise: Error 
		withMessageText: Portfolio canNotAddAccountErrorDescription! !
!PortfolioTest methodsFor: 'tests - tree structure' stamp: 'fr 11/9/2020 09:58:13' prior: 50890941!
test18PortfolioCanNotAddAnyPreviousMemberOfTheTree

	| rootPortfolio anotherEmptyPortfolio |
	anotherEmptyPortfolio _ Portfolio new.
	rootPortfolio _ Portfolio with: (OrderedCollection with: portfolioWithEmptyPortfolio with: anotherEmptyPortfolio).
	
	self  should: [emptyPortfolio add: anotherEmptyPortfolio] 
		raise: Error 
		withMessageText: Portfolio canNotAddAccountErrorDescription! !
!PortfolioTest methodsFor: 'tests - tree structure' stamp: 'fr 11/9/2020 09:58:33' prior: 50891717!
test18PortfolioCanNotAddAnyPreviousMemberOfTheTree

	| rootPortfolio anotherEmptyPortfolio |
	
	anotherEmptyPortfolio _ Portfolio new.
	rootPortfolio _ Portfolio with: (OrderedCollection with: portfolioWithEmptyPortfolio with: anotherEmptyPortfolio).
	
	self  should: [emptyPortfolio add: anotherEmptyPortfolio] 
		raise: Error 
		withMessageText: Portfolio canNotAddAccountErrorDescription! !

!testRun: #PortfolioTest #test18PortfolioCanNotAddAnyPreviousMemberOfTheTree stamp: 'fr 11/9/2020 09:58:37'!
PASSED!

!testRun: #PortfolioTest #test01EmptyPortfolioHasBalanceZero stamp: 'fr 11/9/2020 09:58:37'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioWithASingleAccountWithNoTransactionsHasBalanceZero stamp: 'fr 11/9/2020 09:58:37'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioWithASingleAccountReflectsItsTransactionsValuesInItsBalance stamp: 'fr 11/9/2020 09:58:37'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithMultipleAccountsAndPortfoliosReflectsTheirTransactionsValuesInItsBalance stamp: 'fr 11/9/2020 09:58:37'!
PASSED!

!testRun: #PortfolioTest #test05EmptyPortfolioHasNotRegisteredAnyTransaction stamp: 'fr 11/9/2020 09:58:37'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioWithASingleAccountRegistersItsTransactions stamp: 'fr 11/9/2020 09:58:37'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioWithMulltipleAccountsAndPortfoliosRegistersAllTheirTransactions stamp: 'fr 11/9/2020 09:58:37'!
PASSED!

!testRun: #PortfolioTest #test08EmptyPortfolioDoesNotExhibitAnyTransaction stamp: 'fr 11/9/2020 09:58:37'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithASingleAccountExhibitsItsTransactions stamp: 'fr 11/9/2020 09:58:37'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioWithMultipleAccountsAndPortfoliosExhibitsAllTheirTransactionsCombined stamp: 'fr 11/9/2020 09:58:37'!
PASSED!

!testRun: #PortfolioTest #test11EmptyPortfolioDoesNotContainAnyAccount stamp: 'fr 11/9/2020 09:58:37'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioContainsAnAccountAfterItIsAdded stamp: 'fr 11/9/2020 09:58:37'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioContainsAnAccountAfterItIsAddedToAnyOfItsDecendents stamp: 'fr 11/9/2020 09:58:37'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioDoesNotContainAnythingThatWasNotAddedToItself stamp: 'fr 11/9/2020 09:58:37'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotAddItself stamp: 'fr 11/9/2020 09:58:37'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioCanNotAddItsParent stamp: 'fr 11/9/2020 09:58:37'!
PASSED!

!testRun: #PortfolioTest #test17PortfolioCanNotAddAnyAncestor stamp: 'fr 11/9/2020 09:58:37'!
PASSED!

!testRun: #PortfolioTest #test18PortfolioCanNotAddAnyPreviousMemberOfTheTree stamp: 'fr 11/9/2020 09:58:37'!
PASSED!

!testRun: #PortfolioTest #test19PortfolioCanNotAddAnotherOneWhichSharesChild stamp: 'fr 11/9/2020 09:58:37'!
PASSED!

!testRun: #PortfolioTest #test20PortfolioCanNotAddDuplicateAccountIndirectly stamp: 'fr 11/9/2020 09:58:37'!
PASSED!

!testRun: #PortfolioTest #test21AddingShouldBehaveIdenticallyAsCreatingAPortfolioWithAccounts stamp: 'fr 11/9/2020 09:58:37'!
PASSED!

!testRun: #PortfolioTest #test22CreatingAPortfolioWithAccountsShouldFailIdenticallyAsWhenAddingThem stamp: 'fr 11/9/2020 09:58:37'!
PASSED!
!PortfolioTest methodsFor: 'tests - tree structure' stamp: 'fr 11/9/2020 09:58:45' prior: 50882740!
test21AddingShouldBehaveIdenticallyAsCreatingAPortfolioWithAccounts

	| parentPortfolio |
	
	parentPortfolio _ Portfolio new.
	parentPortfolio add: emptyPortfolio.
	
	self  should: [emptyPortfolio add: parentPortfolio] 
		raise: Error 
		withMessageText: Portfolio canNotAddAccountErrorDescription! !

!testRun: #PortfolioTest #test21AddingShouldBehaveIdenticallyAsCreatingAPortfolioWithAccounts stamp: 'fr 11/9/2020 09:58:47'!
PASSED!

!testRun: #PortfolioTest #test01EmptyPortfolioHasBalanceZero stamp: 'fr 11/9/2020 09:58:47'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioWithASingleAccountWithNoTransactionsHasBalanceZero stamp: 'fr 11/9/2020 09:58:47'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioWithASingleAccountReflectsItsTransactionsValuesInItsBalance stamp: 'fr 11/9/2020 09:58:47'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithMultipleAccountsAndPortfoliosReflectsTheirTransactionsValuesInItsBalance stamp: 'fr 11/9/2020 09:58:47'!
PASSED!

!testRun: #PortfolioTest #test05EmptyPortfolioHasNotRegisteredAnyTransaction stamp: 'fr 11/9/2020 09:58:47'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioWithASingleAccountRegistersItsTransactions stamp: 'fr 11/9/2020 09:58:47'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioWithMulltipleAccountsAndPortfoliosRegistersAllTheirTransactions stamp: 'fr 11/9/2020 09:58:47'!
PASSED!

!testRun: #PortfolioTest #test08EmptyPortfolioDoesNotExhibitAnyTransaction stamp: 'fr 11/9/2020 09:58:47'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithASingleAccountExhibitsItsTransactions stamp: 'fr 11/9/2020 09:58:47'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioWithMultipleAccountsAndPortfoliosExhibitsAllTheirTransactionsCombined stamp: 'fr 11/9/2020 09:58:47'!
PASSED!

!testRun: #PortfolioTest #test11EmptyPortfolioDoesNotContainAnyAccount stamp: 'fr 11/9/2020 09:58:47'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioContainsAnAccountAfterItIsAdded stamp: 'fr 11/9/2020 09:58:47'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioContainsAnAccountAfterItIsAddedToAnyOfItsDecendents stamp: 'fr 11/9/2020 09:58:47'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioDoesNotContainAnythingThatWasNotAddedToItself stamp: 'fr 11/9/2020 09:58:47'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotAddItself stamp: 'fr 11/9/2020 09:58:47'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioCanNotAddItsParent stamp: 'fr 11/9/2020 09:58:47'!
PASSED!

!testRun: #PortfolioTest #test17PortfolioCanNotAddAnyAncestor stamp: 'fr 11/9/2020 09:58:47'!
PASSED!

!testRun: #PortfolioTest #test18PortfolioCanNotAddAnyPreviousMemberOfTheTree stamp: 'fr 11/9/2020 09:58:47'!
PASSED!

!testRun: #PortfolioTest #test19PortfolioCanNotAddAnotherOneWhichSharesChild stamp: 'fr 11/9/2020 09:58:47'!
PASSED!

!testRun: #PortfolioTest #test20PortfolioCanNotAddDuplicateAccountIndirectly stamp: 'fr 11/9/2020 09:58:47'!
PASSED!

!testRun: #PortfolioTest #test21AddingShouldBehaveIdenticallyAsCreatingAPortfolioWithAccounts stamp: 'fr 11/9/2020 09:58:47'!
PASSED!

!testRun: #PortfolioTest #test22CreatingAPortfolioWithAccountsShouldFailIdenticallyAsWhenAddingThem stamp: 'fr 11/9/2020 09:58:47'!
PASSED!
!PortfolioTest methodsFor: 'tests - tree structure' stamp: 'fr 11/9/2020 09:59:18'!
test21AddingShouldFailIdenticallyAsCreatingAPortfolioWithAccounts

	| parentPortfolio |
	
	parentPortfolio _ Portfolio new.
	parentPortfolio add: emptyPortfolio.
	
	self  should: [emptyPortfolio add: parentPortfolio] 
		raise: Error 
		withMessageText: Portfolio canNotAddAccountErrorDescription! !

!methodRemoval: PortfolioTest #test21AddingShouldBehaveIdenticallyAsCreatingAPortfolioWithAccounts stamp: 'fr 11/9/2020 09:59:18'!
test21AddingShouldBehaveIdenticallyAsCreatingAPortfolioWithAccounts

	| parentPortfolio |
	
	parentPortfolio _ Portfolio new.
	parentPortfolio add: emptyPortfolio.
	
	self  should: [emptyPortfolio add: parentPortfolio] 
		raise: Error 
		withMessageText: Portfolio canNotAddAccountErrorDescription!
!PortfolioTest methodsFor: 'tests - add' stamp: 'fr 11/9/2020 09:59:52'!
addAccountToEmptyPortfolio

	^ emptyPortfolio add: account! !
!PortfolioTest methodsFor: 'tests - add' stamp: 'fr 11/9/2020 09:59:52' prior: 50890911!
test13PortfolioContainsAnAccountAfterItIsAddedToAnyOfItsDecendents

	self addAccountToEmptyPortfolio.
	self assert: (portfolioWithEmptyPortfolio contains: account)! !
!PortfolioTest methodsFor: 'tests - add' stamp: 'fr 11/9/2020 09:59:59' prior: 50889996!
test12PortfolioContainsAnAccountAfterItIsAdded

	self addAccountToEmptyPortfolio.
	self assert: (emptyPortfolio contains: account)! !

!testRun: #PortfolioTest #test12PortfolioContainsAnAccountAfterItIsAdded stamp: 'fr 11/9/2020 10:00:00'!
PASSED!

!testRun: #PortfolioTest #test01EmptyPortfolioHasBalanceZero stamp: 'fr 11/9/2020 10:00:00'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioWithASingleAccountWithNoTransactionsHasBalanceZero stamp: 'fr 11/9/2020 10:00:00'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioWithASingleAccountReflectsItsTransactionsValuesInItsBalance stamp: 'fr 11/9/2020 10:00:00'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithMultipleAccountsAndPortfoliosReflectsTheirTransactionsValuesInItsBalance stamp: 'fr 11/9/2020 10:00:00'!
PASSED!

!testRun: #PortfolioTest #test05EmptyPortfolioHasNotRegisteredAnyTransaction stamp: 'fr 11/9/2020 10:00:00'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioWithASingleAccountRegistersItsTransactions stamp: 'fr 11/9/2020 10:00:00'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioWithMulltipleAccountsAndPortfoliosRegistersAllTheirTransactions stamp: 'fr 11/9/2020 10:00:00'!
PASSED!

!testRun: #PortfolioTest #test08EmptyPortfolioDoesNotExhibitAnyTransaction stamp: 'fr 11/9/2020 10:00:00'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithASingleAccountExhibitsItsTransactions stamp: 'fr 11/9/2020 10:00:00'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioWithMultipleAccountsAndPortfoliosExhibitsAllTheirTransactionsCombined stamp: 'fr 11/9/2020 10:00:00'!
PASSED!

!testRun: #PortfolioTest #test11EmptyPortfolioDoesNotContainAnyAccount stamp: 'fr 11/9/2020 10:00:00'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioContainsAnAccountAfterItIsAdded stamp: 'fr 11/9/2020 10:00:00'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioContainsAnAccountAfterItIsAddedToAnyOfItsDecendents stamp: 'fr 11/9/2020 10:00:00'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioDoesNotContainAnythingThatWasNotAddedToItself stamp: 'fr 11/9/2020 10:00:00'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotAddItself stamp: 'fr 11/9/2020 10:00:00'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioCanNotAddItsParent stamp: 'fr 11/9/2020 10:00:00'!
PASSED!

!testRun: #PortfolioTest #test17PortfolioCanNotAddAnyAncestor stamp: 'fr 11/9/2020 10:00:00'!
PASSED!

!testRun: #PortfolioTest #test18PortfolioCanNotAddAnyPreviousMemberOfTheTree stamp: 'fr 11/9/2020 10:00:00'!
PASSED!

!testRun: #PortfolioTest #test19PortfolioCanNotAddAnotherOneWhichSharesChild stamp: 'fr 11/9/2020 10:00:00'!
PASSED!

!testRun: #PortfolioTest #test20PortfolioCanNotAddDuplicateAccountIndirectly stamp: 'fr 11/9/2020 10:00:00'!
PASSED!

!testRun: #PortfolioTest #test21AddingShouldFailIdenticallyAsCreatingAPortfolioWithAccounts stamp: 'fr 11/9/2020 10:00:00'!
PASSED!

!testRun: #PortfolioTest #test22CreatingAPortfolioWithAccountsShouldFailIdenticallyAsWhenAddingThem stamp: 'fr 11/9/2020 10:00:00'!
PASSED!
!PortfolioTest methodsFor: 'tests - add' stamp: 'fr 11/9/2020 10:00:33' prior: 50890193!
test14PortfolioDoesNotContainAnythingThatWasNotAddedToItself

	self addAccountToEmptyPortfolio.
	self deny: (emptyPortfolio contains: anotherAccount)! !

!testRun: #PortfolioTest #test14PortfolioDoesNotContainAnythingThatWasNotAddedToItself stamp: 'fr 11/9/2020 10:00:34'!
PASSED!

!testRun: #PortfolioTest #test01EmptyPortfolioHasBalanceZero stamp: 'fr 11/9/2020 10:00:34'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioWithASingleAccountWithNoTransactionsHasBalanceZero stamp: 'fr 11/9/2020 10:00:34'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioWithASingleAccountReflectsItsTransactionsValuesInItsBalance stamp: 'fr 11/9/2020 10:00:34'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithMultipleAccountsAndPortfoliosReflectsTheirTransactionsValuesInItsBalance stamp: 'fr 11/9/2020 10:00:34'!
PASSED!

!testRun: #PortfolioTest #test05EmptyPortfolioHasNotRegisteredAnyTransaction stamp: 'fr 11/9/2020 10:00:34'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioWithASingleAccountRegistersItsTransactions stamp: 'fr 11/9/2020 10:00:34'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioWithMulltipleAccountsAndPortfoliosRegistersAllTheirTransactions stamp: 'fr 11/9/2020 10:00:34'!
PASSED!

!testRun: #PortfolioTest #test08EmptyPortfolioDoesNotExhibitAnyTransaction stamp: 'fr 11/9/2020 10:00:34'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithASingleAccountExhibitsItsTransactions stamp: 'fr 11/9/2020 10:00:34'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioWithMultipleAccountsAndPortfoliosExhibitsAllTheirTransactionsCombined stamp: 'fr 11/9/2020 10:00:34'!
PASSED!

!testRun: #PortfolioTest #test11EmptyPortfolioDoesNotContainAnyAccount stamp: 'fr 11/9/2020 10:00:34'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioContainsAnAccountAfterItIsAdded stamp: 'fr 11/9/2020 10:00:34'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioContainsAnAccountAfterItIsAddedToAnyOfItsDecendents stamp: 'fr 11/9/2020 10:00:34'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioDoesNotContainAnythingThatWasNotAddedToItself stamp: 'fr 11/9/2020 10:00:34'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotAddItself stamp: 'fr 11/9/2020 10:00:34'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioCanNotAddItsParent stamp: 'fr 11/9/2020 10:00:34'!
PASSED!

!testRun: #PortfolioTest #test17PortfolioCanNotAddAnyAncestor stamp: 'fr 11/9/2020 10:00:34'!
PASSED!

!testRun: #PortfolioTest #test18PortfolioCanNotAddAnyPreviousMemberOfTheTree stamp: 'fr 11/9/2020 10:00:34'!
PASSED!

!testRun: #PortfolioTest #test19PortfolioCanNotAddAnotherOneWhichSharesChild stamp: 'fr 11/9/2020 10:00:34'!
PASSED!

!testRun: #PortfolioTest #test20PortfolioCanNotAddDuplicateAccountIndirectly stamp: 'fr 11/9/2020 10:00:34'!
PASSED!

!testRun: #PortfolioTest #test21AddingShouldFailIdenticallyAsCreatingAPortfolioWithAccounts stamp: 'fr 11/9/2020 10:00:34'!
PASSED!

!testRun: #PortfolioTest #test22CreatingAPortfolioWithAccountsShouldFailIdenticallyAsWhenAddingThem stamp: 'fr 11/9/2020 10:00:34'!
PASSED!

----SNAPSHOT----(9 November 2020 10:02:31) CuisUniversity-4384.image priorSource: 17555030!

----SNAPSHOT----(9 November 2020 10:59:36) CuisUniversity-4384.image priorSource: 17936679!

port1 _ Portfolio new. !

port1 _ Portfolio new. 
port2 _ Portfolio new. 
port3 _ Portfolio new. 
port4 _ Portfolio new. !

port5 _ Portfolio new. !


port1 add: port3.!


port1!

port1 _ Portfolio new. 
port2 _ Portfolio new. 
port3 _ Portfolio new. 
port4 _ Portfolio new. 
port5 _ Portfolio new. !

port1 add: port2.
port1 add: port3.!


port1!

port6 _ Portfolio new. !

port7 _ Portfolio new. !

port4 add: port3.!

port4 add: port5. !

port5 add: port6. !

port6 add: port7. !

port1 add: port7!

port1 _ Portfolio new. 
port2 _ Portfolio new. 
port3 _ Portfolio new. 
port4 _ Portfolio new. 
port5 _ Portfolio new. 
port6 _ Portfolio new. 
port7 _ Portfolio new. 

port1 add: port2.
port1 add: port3.

port4 add: port3.
port4 add: port5. 
port5 add: port6. 
port6 add: port7. !

port1 add: port4. !
!PortfolioTest methodsFor: 'tests - balance' stamp: 'fr 11/9/2020 12:05:25'!
deposit100OnAccountAndAssert: aBlockToAssert

	self deposit100OnAccount.
	aBlockToAssert value! !
!PortfolioTest methodsFor: 'tests - private' stamp: 'fr 11/9/2020 12:06:00'!
deposit100OnAccountStoreAndAssert: aBlockToAssert

	self deposit100OnAccount.
	aBlockToAssert value! !

!methodRemoval: PortfolioTest #deposit100OnAccountAndAssert: stamp: 'fr 11/9/2020 12:06:00'!
deposit100OnAccountAndAssert: aBlockToAssert

	self deposit100OnAccount.
	aBlockToAssert value!
!PortfolioTest methodsFor: 'tests - private' stamp: 'fr 11/9/2020 12:06:25' prior: 50892209!
deposit100OnAccountStoreAndAssert: aBlockToAssert

	deposit _ self deposit100OnAccount.
	aBlockToAssert value! !
!PortfolioTest methodsFor: 'tests - private' stamp: 'fr 11/9/2020 12:06:43' prior: 50892222!
deposit100OnAccountStoreAndAssert: aBlockToAssert

	self deposit100OnAccountAndStore.
	aBlockToAssert value! !
!PortfolioTest methodsFor: 'tests - hasRegistered' stamp: 'fr 11/9/2020 12:07:34' prior: 50889306!
test05EmptyPortfolioHasNotRegisteredAnyTransaction

	self deposit100OnAccountStoreAndAssert: 	[self deny: (emptyPortfolio hasRegistered: deposit)]! !

!testRun: #PortfolioTest #test05EmptyPortfolioHasNotRegisteredAnyTransaction stamp: 'fr 11/9/2020 12:07:35'!
PASSED!

!testRun: #PortfolioTest #test01EmptyPortfolioHasBalanceZero stamp: 'fr 11/9/2020 12:07:35'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioWithASingleAccountWithNoTransactionsHasBalanceZero stamp: 'fr 11/9/2020 12:07:35'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioWithASingleAccountReflectsItsTransactionsValuesInItsBalance stamp: 'fr 11/9/2020 12:07:35'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithMultipleAccountsAndPortfoliosReflectsTheirTransactionsValuesInItsBalance stamp: 'fr 11/9/2020 12:07:35'!
PASSED!

!testRun: #PortfolioTest #test05EmptyPortfolioHasNotRegisteredAnyTransaction stamp: 'fr 11/9/2020 12:07:35'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioWithASingleAccountRegistersItsTransactions stamp: 'fr 11/9/2020 12:07:35'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioWithMulltipleAccountsAndPortfoliosRegistersAllTheirTransactions stamp: 'fr 11/9/2020 12:07:35'!
PASSED!

!testRun: #PortfolioTest #test08EmptyPortfolioDoesNotExhibitAnyTransaction stamp: 'fr 11/9/2020 12:07:35'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithASingleAccountExhibitsItsTransactions stamp: 'fr 11/9/2020 12:07:35'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioWithMultipleAccountsAndPortfoliosExhibitsAllTheirTransactionsCombined stamp: 'fr 11/9/2020 12:07:35'!
PASSED!

!testRun: #PortfolioTest #test11EmptyPortfolioDoesNotContainAnyAccount stamp: 'fr 11/9/2020 12:07:35'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioContainsAnAccountAfterItIsAdded stamp: 'fr 11/9/2020 12:07:35'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioContainsAnAccountAfterItIsAddedToAnyOfItsDecendents stamp: 'fr 11/9/2020 12:07:35'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioDoesNotContainAnythingThatWasNotAddedToItself stamp: 'fr 11/9/2020 12:07:35'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotAddItself stamp: 'fr 11/9/2020 12:07:35'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioCanNotAddItsParent stamp: 'fr 11/9/2020 12:07:35'!
PASSED!

!testRun: #PortfolioTest #test17PortfolioCanNotAddAnyAncestor stamp: 'fr 11/9/2020 12:07:35'!
PASSED!

!testRun: #PortfolioTest #test18PortfolioCanNotAddAnyPreviousMemberOfTheTree stamp: 'fr 11/9/2020 12:07:35'!
PASSED!

!testRun: #PortfolioTest #test19PortfolioCanNotAddAnotherOneWhichSharesChild stamp: 'fr 11/9/2020 12:07:35'!
PASSED!

!testRun: #PortfolioTest #test20PortfolioCanNotAddDuplicateAccountIndirectly stamp: 'fr 11/9/2020 12:07:35'!
PASSED!

!testRun: #PortfolioTest #test21AddingShouldFailIdenticallyAsCreatingAPortfolioWithAccounts stamp: 'fr 11/9/2020 12:07:35'!
PASSED!

!testRun: #PortfolioTest #test22CreatingAPortfolioWithAccountsShouldFailIdenticallyAsWhenAddingThem stamp: 'fr 11/9/2020 12:07:35'!
PASSED!
!PortfolioTest methodsFor: 'tests - private' stamp: 'fr 11/9/2020 12:08:05'!
depositAndStore100OnAccountAndAssert: aBlockToAssert

	self deposit100OnAccountAndStore.
	aBlockToAssert value! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'fr 11/9/2020 12:08:05' prior: 50892236!
test05EmptyPortfolioHasNotRegisteredAnyTransaction

	self depositAndStore100OnAccountAndAssert: 	[self deny: (emptyPortfolio hasRegistered: deposit)]! !

!methodRemoval: PortfolioTest #deposit100OnAccountStoreAndAssert: stamp: 'fr 11/9/2020 12:08:05'!
deposit100OnAccountStoreAndAssert: aBlockToAssert

	self deposit100OnAccountAndStore.
	aBlockToAssert value!

!testRun: #PortfolioTest #test21AddingShouldFailIdenticallyAsCreatingAPortfolioWithAccounts stamp: 'fr 11/9/2020 12:08:10'!
PASSED!

!testRun: #PortfolioTest #test01EmptyPortfolioHasBalanceZero stamp: 'fr 11/9/2020 12:08:10'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioWithASingleAccountWithNoTransactionsHasBalanceZero stamp: 'fr 11/9/2020 12:08:10'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioWithASingleAccountReflectsItsTransactionsValuesInItsBalance stamp: 'fr 11/9/2020 12:08:10'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithMultipleAccountsAndPortfoliosReflectsTheirTransactionsValuesInItsBalance stamp: 'fr 11/9/2020 12:08:10'!
PASSED!

!testRun: #PortfolioTest #test05EmptyPortfolioHasNotRegisteredAnyTransaction stamp: 'fr 11/9/2020 12:08:10'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioWithASingleAccountRegistersItsTransactions stamp: 'fr 11/9/2020 12:08:10'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioWithMulltipleAccountsAndPortfoliosRegistersAllTheirTransactions stamp: 'fr 11/9/2020 12:08:10'!
PASSED!

!testRun: #PortfolioTest #test08EmptyPortfolioDoesNotExhibitAnyTransaction stamp: 'fr 11/9/2020 12:08:10'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithASingleAccountExhibitsItsTransactions stamp: 'fr 11/9/2020 12:08:10'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioWithMultipleAccountsAndPortfoliosExhibitsAllTheirTransactionsCombined stamp: 'fr 11/9/2020 12:08:10'!
PASSED!

!testRun: #PortfolioTest #test11EmptyPortfolioDoesNotContainAnyAccount stamp: 'fr 11/9/2020 12:08:10'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioContainsAnAccountAfterItIsAdded stamp: 'fr 11/9/2020 12:08:10'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioContainsAnAccountAfterItIsAddedToAnyOfItsDecendents stamp: 'fr 11/9/2020 12:08:10'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioDoesNotContainAnythingThatWasNotAddedToItself stamp: 'fr 11/9/2020 12:08:10'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotAddItself stamp: 'fr 11/9/2020 12:08:10'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioCanNotAddItsParent stamp: 'fr 11/9/2020 12:08:10'!
PASSED!

!testRun: #PortfolioTest #test17PortfolioCanNotAddAnyAncestor stamp: 'fr 11/9/2020 12:08:10'!
PASSED!

!testRun: #PortfolioTest #test18PortfolioCanNotAddAnyPreviousMemberOfTheTree stamp: 'fr 11/9/2020 12:08:10'!
PASSED!

!testRun: #PortfolioTest #test19PortfolioCanNotAddAnotherOneWhichSharesChild stamp: 'fr 11/9/2020 12:08:10'!
PASSED!

!testRun: #PortfolioTest #test20PortfolioCanNotAddDuplicateAccountIndirectly stamp: 'fr 11/9/2020 12:08:10'!
PASSED!

!testRun: #PortfolioTest #test21AddingShouldFailIdenticallyAsCreatingAPortfolioWithAccounts stamp: 'fr 11/9/2020 12:08:10'!
PASSED!

!testRun: #PortfolioTest #test22CreatingAPortfolioWithAccountsShouldFailIdenticallyAsWhenAddingThem stamp: 'fr 11/9/2020 12:08:10'!
PASSED!
!PortfolioTest methodsFor: 'tests - hasRegistered' stamp: 'fr 11/9/2020 12:08:47' prior: 50889403!
test06PortfolioWithASingleAccountRegistersItsTransactions

	self depositAndStore100OnAccountAndAssert: 	[self assert: (portfolioWithAccount hasRegistered: deposit)]! !
!PortfolioTest methodsFor: 'tests - transactions' stamp: 'fr 11/9/2020 12:09:07' prior: 50889700!
test09PortfolioWithASingleAccountExhibitsItsTransactions

	self depositAndStore100OnAccountAndAssert: [	self assert: portfolioWithAccount transactions equals: (OrderedCollection with: deposit)]! !

!testRun: #PortfolioTest #test09PortfolioWithASingleAccountExhibitsItsTransactions stamp: 'fr 11/9/2020 12:09:10'!
PASSED!

!testRun: #PortfolioTest #test01EmptyPortfolioHasBalanceZero stamp: 'fr 11/9/2020 12:09:10'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioWithASingleAccountWithNoTransactionsHasBalanceZero stamp: 'fr 11/9/2020 12:09:10'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioWithASingleAccountReflectsItsTransactionsValuesInItsBalance stamp: 'fr 11/9/2020 12:09:10'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithMultipleAccountsAndPortfoliosReflectsTheirTransactionsValuesInItsBalance stamp: 'fr 11/9/2020 12:09:10'!
PASSED!

!testRun: #PortfolioTest #test05EmptyPortfolioHasNotRegisteredAnyTransaction stamp: 'fr 11/9/2020 12:09:10'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioWithASingleAccountRegistersItsTransactions stamp: 'fr 11/9/2020 12:09:10'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioWithMulltipleAccountsAndPortfoliosRegistersAllTheirTransactions stamp: 'fr 11/9/2020 12:09:10'!
PASSED!

!testRun: #PortfolioTest #test08EmptyPortfolioDoesNotExhibitAnyTransaction stamp: 'fr 11/9/2020 12:09:10'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithASingleAccountExhibitsItsTransactions stamp: 'fr 11/9/2020 12:09:10'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioWithMultipleAccountsAndPortfoliosExhibitsAllTheirTransactionsCombined stamp: 'fr 11/9/2020 12:09:10'!
PASSED!

!testRun: #PortfolioTest #test11EmptyPortfolioDoesNotContainAnyAccount stamp: 'fr 11/9/2020 12:09:10'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioContainsAnAccountAfterItIsAdded stamp: 'fr 11/9/2020 12:09:10'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioContainsAnAccountAfterItIsAddedToAnyOfItsDecendents stamp: 'fr 11/9/2020 12:09:10'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioDoesNotContainAnythingThatWasNotAddedToItself stamp: 'fr 11/9/2020 12:09:10'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotAddItself stamp: 'fr 11/9/2020 12:09:10'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioCanNotAddItsParent stamp: 'fr 11/9/2020 12:09:10'!
PASSED!

!testRun: #PortfolioTest #test17PortfolioCanNotAddAnyAncestor stamp: 'fr 11/9/2020 12:09:10'!
PASSED!

!testRun: #PortfolioTest #test18PortfolioCanNotAddAnyPreviousMemberOfTheTree stamp: 'fr 11/9/2020 12:09:10'!
PASSED!

!testRun: #PortfolioTest #test19PortfolioCanNotAddAnotherOneWhichSharesChild stamp: 'fr 11/9/2020 12:09:10'!
PASSED!

!testRun: #PortfolioTest #test20PortfolioCanNotAddDuplicateAccountIndirectly stamp: 'fr 11/9/2020 12:09:10'!
PASSED!

!testRun: #PortfolioTest #test21AddingShouldFailIdenticallyAsCreatingAPortfolioWithAccounts stamp: 'fr 11/9/2020 12:09:10'!
PASSED!

!testRun: #PortfolioTest #test22CreatingAPortfolioWithAccountsShouldFailIdenticallyAsWhenAddingThem stamp: 'fr 11/9/2020 12:09:10'!
PASSED!
!PortfolioTest methodsFor: 'tests - transactions' stamp: 'fr 11/9/2020 12:10:01'!
depositAndStore100OnAccount50OnAnotherAccountAndAssert: aBlockToAssert
		
	self deposit100OnAccount50OnAnotherAccountAndStore.
	aBlockToAssert value! !
!PortfolioTest methodsFor: 'tests - transactions' stamp: 'fr 11/9/2020 12:10:39' prior: 50889799!
test10PortfolioWithMultipleAccountsAndPortfoliosExhibitsAllTheirTransactionsCombined
		
	self depositAndStore100OnAccount50OnAnotherAccountAndAssert: 
	[self assert: portfolioWithAccountAndPortfolio transactions equals: (OrderedCollection with: anotherDeposit with: deposit	)]! !
!PortfolioTest methodsFor: 'tests - transactions' stamp: 'fr 11/9/2020 12:10:47' prior: 50892453!
test09PortfolioWithASingleAccountExhibitsItsTransactions

	self depositAndStore100OnAccountAndAssert: 
	[self assert: portfolioWithAccount transactions equals: (OrderedCollection with: deposit)]! !
!PortfolioTest methodsFor: 'tests - hasRegistered' stamp: 'fr 11/9/2020 12:10:53' prior: 50892340!
test05EmptyPortfolioHasNotRegisteredAnyTransaction

	self depositAndStore100OnAccountAndAssert: 	
	[self deny: (emptyPortfolio hasRegistered: deposit)]! !
!PortfolioTest methodsFor: 'tests - hasRegistered' stamp: 'fr 11/9/2020 12:10:57' prior: 50892444!
test06PortfolioWithASingleAccountRegistersItsTransactions

	self depositAndStore100OnAccountAndAssert: 
		[self assert: (portfolioWithAccount hasRegistered: deposit)]! !
!PortfolioTest methodsFor: 'tests - hasRegistered' stamp: 'fr 11/9/2020 12:10:58' prior: 50892590!
test06PortfolioWithASingleAccountRegistersItsTransactions

	self depositAndStore100OnAccountAndAssert: 
	[self assert: (portfolioWithAccount hasRegistered: deposit)]! !
!PortfolioTest methodsFor: 'tests - hasRegistered' stamp: 'fr 11/9/2020 12:11:20' prior: 50889501!
test07PortfolioWithMulltipleAccountsAndPortfoliosRegistersAllTheirTransactions
		
	self depositAndStore100OnAccount50OnAnotherAccountAndAssert:	 
	[self assert: (
		(portfolioWithAccountAndPortfolio hasRegistered: deposit) and: 
		[portfolioWithAccountAndPortfolio hasRegistered: anotherDeposit]
	)]! !

!testRun: #PortfolioTest #test07PortfolioWithMulltipleAccountsAndPortfoliosRegistersAllTheirTransactions stamp: 'fr 11/9/2020 12:11:20'!
PASSED!

!testRun: #PortfolioTest #test01EmptyPortfolioHasBalanceZero stamp: 'fr 11/9/2020 12:11:20'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioWithASingleAccountWithNoTransactionsHasBalanceZero stamp: 'fr 11/9/2020 12:11:20'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioWithASingleAccountReflectsItsTransactionsValuesInItsBalance stamp: 'fr 11/9/2020 12:11:20'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithMultipleAccountsAndPortfoliosReflectsTheirTransactionsValuesInItsBalance stamp: 'fr 11/9/2020 12:11:20'!
PASSED!

!testRun: #PortfolioTest #test05EmptyPortfolioHasNotRegisteredAnyTransaction stamp: 'fr 11/9/2020 12:11:20'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioWithASingleAccountRegistersItsTransactions stamp: 'fr 11/9/2020 12:11:20'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioWithMulltipleAccountsAndPortfoliosRegistersAllTheirTransactions stamp: 'fr 11/9/2020 12:11:20'!
PASSED!

!testRun: #PortfolioTest #test08EmptyPortfolioDoesNotExhibitAnyTransaction stamp: 'fr 11/9/2020 12:11:20'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithASingleAccountExhibitsItsTransactions stamp: 'fr 11/9/2020 12:11:20'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioWithMultipleAccountsAndPortfoliosExhibitsAllTheirTransactionsCombined stamp: 'fr 11/9/2020 12:11:20'!
PASSED!

!testRun: #PortfolioTest #test11EmptyPortfolioDoesNotContainAnyAccount stamp: 'fr 11/9/2020 12:11:20'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioContainsAnAccountAfterItIsAdded stamp: 'fr 11/9/2020 12:11:20'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioContainsAnAccountAfterItIsAddedToAnyOfItsDecendents stamp: 'fr 11/9/2020 12:11:20'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioDoesNotContainAnythingThatWasNotAddedToItself stamp: 'fr 11/9/2020 12:11:20'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotAddItself stamp: 'fr 11/9/2020 12:11:20'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioCanNotAddItsParent stamp: 'fr 11/9/2020 12:11:20'!
PASSED!

!testRun: #PortfolioTest #test17PortfolioCanNotAddAnyAncestor stamp: 'fr 11/9/2020 12:11:20'!
PASSED!

!testRun: #PortfolioTest #test18PortfolioCanNotAddAnyPreviousMemberOfTheTree stamp: 'fr 11/9/2020 12:11:20'!
PASSED!

!testRun: #PortfolioTest #test19PortfolioCanNotAddAnotherOneWhichSharesChild stamp: 'fr 11/9/2020 12:11:20'!
PASSED!

!testRun: #PortfolioTest #test20PortfolioCanNotAddDuplicateAccountIndirectly stamp: 'fr 11/9/2020 12:11:20'!
PASSED!

!testRun: #PortfolioTest #test21AddingShouldFailIdenticallyAsCreatingAPortfolioWithAccounts stamp: 'fr 11/9/2020 12:11:20'!
PASSED!

!testRun: #PortfolioTest #test22CreatingAPortfolioWithAccountsShouldFailIdenticallyAsWhenAddingThem stamp: 'fr 11/9/2020 12:11:20'!
PASSED!
!PortfolioTest methodsFor: 'tests - add' stamp: 'fr 11/9/2020 12:11:55'!
addAccountToEmptyPortfolioAndAssert: aBlockToAssert

	self addAccountToEmptyPortfolio.
	aBlockToAssert value! !
!PortfolioTest methodsFor: 'tests - add' stamp: 'fr 11/9/2020 12:12:13' prior: 50891979!
test12PortfolioContainsAnAccountAfterItIsAdded

	self addAccountToEmptyPortfolioAndAssert: 
	[self assert: (emptyPortfolio contains: account)]! !
!PortfolioTest methodsFor: 'tests - add' stamp: 'fr 11/9/2020 12:12:22' prior: 50891971!
test13PortfolioContainsAnAccountAfterItIsAddedToAnyOfItsDecendents

	self addAccountToEmptyPortfolioAndAssert: 
	[self assert: (portfolioWithEmptyPortfolio contains: account)]! !
!PortfolioTest methodsFor: 'tests - add' stamp: 'fr 11/9/2020 12:12:32' prior: 50892075!
test14PortfolioDoesNotContainAnythingThatWasNotAddedToItself

	self addAccountToEmptyPortfolioAndAssert: 
	[self deny: (emptyPortfolio contains: anotherAccount)]! !

!testRun: #PortfolioTest #test14PortfolioDoesNotContainAnythingThatWasNotAddedToItself stamp: 'fr 11/9/2020 12:12:34'!
PASSED!

!testRun: #PortfolioTest #test01EmptyPortfolioHasBalanceZero stamp: 'fr 11/9/2020 12:12:34'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioWithASingleAccountWithNoTransactionsHasBalanceZero stamp: 'fr 11/9/2020 12:12:34'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioWithASingleAccountReflectsItsTransactionsValuesInItsBalance stamp: 'fr 11/9/2020 12:12:34'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithMultipleAccountsAndPortfoliosReflectsTheirTransactionsValuesInItsBalance stamp: 'fr 11/9/2020 12:12:34'!
PASSED!

!testRun: #PortfolioTest #test05EmptyPortfolioHasNotRegisteredAnyTransaction stamp: 'fr 11/9/2020 12:12:34'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioWithASingleAccountRegistersItsTransactions stamp: 'fr 11/9/2020 12:12:34'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioWithMulltipleAccountsAndPortfoliosRegistersAllTheirTransactions stamp: 'fr 11/9/2020 12:12:34'!
PASSED!

!testRun: #PortfolioTest #test08EmptyPortfolioDoesNotExhibitAnyTransaction stamp: 'fr 11/9/2020 12:12:34'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithASingleAccountExhibitsItsTransactions stamp: 'fr 11/9/2020 12:12:34'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioWithMultipleAccountsAndPortfoliosExhibitsAllTheirTransactionsCombined stamp: 'fr 11/9/2020 12:12:34'!
PASSED!

!testRun: #PortfolioTest #test11EmptyPortfolioDoesNotContainAnyAccount stamp: 'fr 11/9/2020 12:12:34'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioContainsAnAccountAfterItIsAdded stamp: 'fr 11/9/2020 12:12:34'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioContainsAnAccountAfterItIsAddedToAnyOfItsDecendents stamp: 'fr 11/9/2020 12:12:34'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioDoesNotContainAnythingThatWasNotAddedToItself stamp: 'fr 11/9/2020 12:12:34'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotAddItself stamp: 'fr 11/9/2020 12:12:34'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioCanNotAddItsParent stamp: 'fr 11/9/2020 12:12:34'!
PASSED!

!testRun: #PortfolioTest #test17PortfolioCanNotAddAnyAncestor stamp: 'fr 11/9/2020 12:12:34'!
PASSED!

!testRun: #PortfolioTest #test18PortfolioCanNotAddAnyPreviousMemberOfTheTree stamp: 'fr 11/9/2020 12:12:34'!
PASSED!

!testRun: #PortfolioTest #test19PortfolioCanNotAddAnotherOneWhichSharesChild stamp: 'fr 11/9/2020 12:12:34'!
PASSED!

!testRun: #PortfolioTest #test20PortfolioCanNotAddDuplicateAccountIndirectly stamp: 'fr 11/9/2020 12:12:34'!
PASSED!

!testRun: #PortfolioTest #test21AddingShouldFailIdenticallyAsCreatingAPortfolioWithAccounts stamp: 'fr 11/9/2020 12:12:34'!
PASSED!

!testRun: #PortfolioTest #test22CreatingAPortfolioWithAccountsShouldFailIdenticallyAsWhenAddingThem stamp: 'fr 11/9/2020 12:12:34'!
PASSED!
!PortfolioTest methodsFor: 'tests - tree structure' stamp: 'fr 11/9/2020 12:13:46'!
emptyPortfolioShouldFailWhileTryingToAdd: aPortfolio
	
	self  should: [emptyPortfolio add: aPortfolio ] 
		raise: Error 
		withMessageText: Portfolio canNotAddAccountErrorDescription! !
!PortfolioTest methodsFor: 'tests - tree structure' stamp: 'fr 11/9/2020 12:14:11' prior: 50882753!
test15PortfolioCanNotAddItself

	self emptyPortfolioShouldFailWhileTryingToAdd: emptyPortfolio.! !

!testRun: #PortfolioTest #test15PortfolioCanNotAddItself stamp: 'fr 11/9/2020 12:14:12'!
PASSED!

!testRun: #PortfolioTest #test01EmptyPortfolioHasBalanceZero stamp: 'fr 11/9/2020 12:14:12'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioWithASingleAccountWithNoTransactionsHasBalanceZero stamp: 'fr 11/9/2020 12:14:12'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioWithASingleAccountReflectsItsTransactionsValuesInItsBalance stamp: 'fr 11/9/2020 12:14:12'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithMultipleAccountsAndPortfoliosReflectsTheirTransactionsValuesInItsBalance stamp: 'fr 11/9/2020 12:14:12'!
PASSED!

!testRun: #PortfolioTest #test05EmptyPortfolioHasNotRegisteredAnyTransaction stamp: 'fr 11/9/2020 12:14:12'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioWithASingleAccountRegistersItsTransactions stamp: 'fr 11/9/2020 12:14:12'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioWithMulltipleAccountsAndPortfoliosRegistersAllTheirTransactions stamp: 'fr 11/9/2020 12:14:12'!
PASSED!

!testRun: #PortfolioTest #test08EmptyPortfolioDoesNotExhibitAnyTransaction stamp: 'fr 11/9/2020 12:14:12'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithASingleAccountExhibitsItsTransactions stamp: 'fr 11/9/2020 12:14:12'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioWithMultipleAccountsAndPortfoliosExhibitsAllTheirTransactionsCombined stamp: 'fr 11/9/2020 12:14:12'!
PASSED!

!testRun: #PortfolioTest #test11EmptyPortfolioDoesNotContainAnyAccount stamp: 'fr 11/9/2020 12:14:12'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioContainsAnAccountAfterItIsAdded stamp: 'fr 11/9/2020 12:14:12'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioContainsAnAccountAfterItIsAddedToAnyOfItsDecendents stamp: 'fr 11/9/2020 12:14:12'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioDoesNotContainAnythingThatWasNotAddedToItself stamp: 'fr 11/9/2020 12:14:12'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotAddItself stamp: 'fr 11/9/2020 12:14:12'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioCanNotAddItsParent stamp: 'fr 11/9/2020 12:14:12'!
PASSED!

!testRun: #PortfolioTest #test17PortfolioCanNotAddAnyAncestor stamp: 'fr 11/9/2020 12:14:12'!
PASSED!

!testRun: #PortfolioTest #test18PortfolioCanNotAddAnyPreviousMemberOfTheTree stamp: 'fr 11/9/2020 12:14:12'!
PASSED!

!testRun: #PortfolioTest #test19PortfolioCanNotAddAnotherOneWhichSharesChild stamp: 'fr 11/9/2020 12:14:12'!
PASSED!

!testRun: #PortfolioTest #test20PortfolioCanNotAddDuplicateAccountIndirectly stamp: 'fr 11/9/2020 12:14:12'!
PASSED!

!testRun: #PortfolioTest #test21AddingShouldFailIdenticallyAsCreatingAPortfolioWithAccounts stamp: 'fr 11/9/2020 12:14:12'!
PASSED!

!testRun: #PortfolioTest #test22CreatingAPortfolioWithAccountsShouldFailIdenticallyAsWhenAddingThem stamp: 'fr 11/9/2020 12:14:12'!
PASSED!
!PortfolioTest methodsFor: 'tests - tree structure' stamp: 'fr 11/9/2020 12:14:37' prior: 50890920!
test16PortfolioCanNotAddItsParent

	self emptyPortfolioShouldFailWhileTryingToAdd: portfolioWithEmptyPortfolio.! !

!testRun: #PortfolioTest #test16PortfolioCanNotAddItsParent stamp: 'fr 11/9/2020 12:14:38'!
PASSED!

!testRun: #PortfolioTest #test01EmptyPortfolioHasBalanceZero stamp: 'fr 11/9/2020 12:14:38'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioWithASingleAccountWithNoTransactionsHasBalanceZero stamp: 'fr 11/9/2020 12:14:38'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioWithASingleAccountReflectsItsTransactionsValuesInItsBalance stamp: 'fr 11/9/2020 12:14:38'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithMultipleAccountsAndPortfoliosReflectsTheirTransactionsValuesInItsBalance stamp: 'fr 11/9/2020 12:14:38'!
PASSED!

!testRun: #PortfolioTest #test05EmptyPortfolioHasNotRegisteredAnyTransaction stamp: 'fr 11/9/2020 12:14:38'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioWithASingleAccountRegistersItsTransactions stamp: 'fr 11/9/2020 12:14:38'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioWithMulltipleAccountsAndPortfoliosRegistersAllTheirTransactions stamp: 'fr 11/9/2020 12:14:38'!
PASSED!

!testRun: #PortfolioTest #test08EmptyPortfolioDoesNotExhibitAnyTransaction stamp: 'fr 11/9/2020 12:14:38'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithASingleAccountExhibitsItsTransactions stamp: 'fr 11/9/2020 12:14:38'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioWithMultipleAccountsAndPortfoliosExhibitsAllTheirTransactionsCombined stamp: 'fr 11/9/2020 12:14:38'!
PASSED!

!testRun: #PortfolioTest #test11EmptyPortfolioDoesNotContainAnyAccount stamp: 'fr 11/9/2020 12:14:38'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioContainsAnAccountAfterItIsAdded stamp: 'fr 11/9/2020 12:14:38'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioContainsAnAccountAfterItIsAddedToAnyOfItsDecendents stamp: 'fr 11/9/2020 12:14:38'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioDoesNotContainAnythingThatWasNotAddedToItself stamp: 'fr 11/9/2020 12:14:38'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotAddItself stamp: 'fr 11/9/2020 12:14:38'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioCanNotAddItsParent stamp: 'fr 11/9/2020 12:14:38'!
PASSED!

!testRun: #PortfolioTest #test17PortfolioCanNotAddAnyAncestor stamp: 'fr 11/9/2020 12:14:38'!
PASSED!

!testRun: #PortfolioTest #test18PortfolioCanNotAddAnyPreviousMemberOfTheTree stamp: 'fr 11/9/2020 12:14:38'!
PASSED!

!testRun: #PortfolioTest #test19PortfolioCanNotAddAnotherOneWhichSharesChild stamp: 'fr 11/9/2020 12:14:38'!
PASSED!

!testRun: #PortfolioTest #test20PortfolioCanNotAddDuplicateAccountIndirectly stamp: 'fr 11/9/2020 12:14:38'!
PASSED!

!testRun: #PortfolioTest #test21AddingShouldFailIdenticallyAsCreatingAPortfolioWithAccounts stamp: 'fr 11/9/2020 12:14:38'!
PASSED!

!testRun: #PortfolioTest #test22CreatingAPortfolioWithAccountsShouldFailIdenticallyAsWhenAddingThem stamp: 'fr 11/9/2020 12:14:38'!
PASSED!
!PortfolioTest methodsFor: 'tests - tree structure' stamp: 'fr 11/9/2020 12:14:55' prior: 50891697!
test17PortfolioCanNotAddAnyAncestor
	
	self emptyPortfolioShouldFailWhileTryingToAdd: portfolioWithPortfolioWithEmptyPortfolio.! !

!testRun: #PortfolioTest #test17PortfolioCanNotAddAnyAncestor stamp: 'fr 11/9/2020 12:14:55'!
PASSED!

!testRun: #PortfolioTest #test01EmptyPortfolioHasBalanceZero stamp: 'fr 11/9/2020 12:14:55'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioWithASingleAccountWithNoTransactionsHasBalanceZero stamp: 'fr 11/9/2020 12:14:55'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioWithASingleAccountReflectsItsTransactionsValuesInItsBalance stamp: 'fr 11/9/2020 12:14:55'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithMultipleAccountsAndPortfoliosReflectsTheirTransactionsValuesInItsBalance stamp: 'fr 11/9/2020 12:14:55'!
PASSED!

!testRun: #PortfolioTest #test05EmptyPortfolioHasNotRegisteredAnyTransaction stamp: 'fr 11/9/2020 12:14:55'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioWithASingleAccountRegistersItsTransactions stamp: 'fr 11/9/2020 12:14:55'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioWithMulltipleAccountsAndPortfoliosRegistersAllTheirTransactions stamp: 'fr 11/9/2020 12:14:55'!
PASSED!

!testRun: #PortfolioTest #test08EmptyPortfolioDoesNotExhibitAnyTransaction stamp: 'fr 11/9/2020 12:14:55'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithASingleAccountExhibitsItsTransactions stamp: 'fr 11/9/2020 12:14:55'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioWithMultipleAccountsAndPortfoliosExhibitsAllTheirTransactionsCombined stamp: 'fr 11/9/2020 12:14:55'!
PASSED!

!testRun: #PortfolioTest #test11EmptyPortfolioDoesNotContainAnyAccount stamp: 'fr 11/9/2020 12:14:55'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioContainsAnAccountAfterItIsAdded stamp: 'fr 11/9/2020 12:14:55'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioContainsAnAccountAfterItIsAddedToAnyOfItsDecendents stamp: 'fr 11/9/2020 12:14:55'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioDoesNotContainAnythingThatWasNotAddedToItself stamp: 'fr 11/9/2020 12:14:55'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotAddItself stamp: 'fr 11/9/2020 12:14:55'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioCanNotAddItsParent stamp: 'fr 11/9/2020 12:14:55'!
PASSED!

!testRun: #PortfolioTest #test17PortfolioCanNotAddAnyAncestor stamp: 'fr 11/9/2020 12:14:55'!
PASSED!

!testRun: #PortfolioTest #test18PortfolioCanNotAddAnyPreviousMemberOfTheTree stamp: 'fr 11/9/2020 12:14:55'!
PASSED!

!testRun: #PortfolioTest #test19PortfolioCanNotAddAnotherOneWhichSharesChild stamp: 'fr 11/9/2020 12:14:55'!
PASSED!

!testRun: #PortfolioTest #test20PortfolioCanNotAddDuplicateAccountIndirectly stamp: 'fr 11/9/2020 12:14:55'!
PASSED!

!testRun: #PortfolioTest #test21AddingShouldFailIdenticallyAsCreatingAPortfolioWithAccounts stamp: 'fr 11/9/2020 12:14:55'!
PASSED!

!testRun: #PortfolioTest #test22CreatingAPortfolioWithAccountsShouldFailIdenticallyAsWhenAddingThem stamp: 'fr 11/9/2020 12:14:55'!
PASSED!
!PortfolioTest methodsFor: 'tests - tree structure' stamp: 'fr 11/9/2020 12:16:14'!
portfolio: aPortfolio shouldFailWhileTryingToAdd: anotherPortfolio
	
	self  should: [portfolioWithEmptyPortfolio add: anotherPortfolioWithEmptyPortfolio] 
		raise: Error 
		withMessageText: Portfolio canNotAddAccountErrorDescription! !
!PortfolioTest methodsFor: 'tests - tree structure' stamp: 'fr 11/9/2020 12:16:22' prior: 50893128!
portfolio: aPortfolio shouldFailWhileTryingToAdd: anotherPortfolio
	
	self  should: [aPortfolio add: anotherPortfolio] 
		raise: Error 
		withMessageText: Portfolio canNotAddAccountErrorDescription! !
!PortfolioTest methodsFor: 'tests - tree structure' stamp: 'fr 11/9/2020 12:16:52' prior: 50891323!
test19PortfolioCanNotAddAnotherOneWhichSharesChild

	self portfolio: portfolioWithEmptyPortfolio shouldFailWhileTryingToAdd: anotherPortfolioWithEmptyPortfolio.! !

!testRun: #PortfolioTest #test19PortfolioCanNotAddAnotherOneWhichSharesChild stamp: 'fr 11/9/2020 12:16:53'!
PASSED!

!testRun: #PortfolioTest #test01EmptyPortfolioHasBalanceZero stamp: 'fr 11/9/2020 12:16:53'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioWithASingleAccountWithNoTransactionsHasBalanceZero stamp: 'fr 11/9/2020 12:16:53'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioWithASingleAccountReflectsItsTransactionsValuesInItsBalance stamp: 'fr 11/9/2020 12:16:53'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithMultipleAccountsAndPortfoliosReflectsTheirTransactionsValuesInItsBalance stamp: 'fr 11/9/2020 12:16:53'!
PASSED!

!testRun: #PortfolioTest #test05EmptyPortfolioHasNotRegisteredAnyTransaction stamp: 'fr 11/9/2020 12:16:53'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioWithASingleAccountRegistersItsTransactions stamp: 'fr 11/9/2020 12:16:53'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioWithMulltipleAccountsAndPortfoliosRegistersAllTheirTransactions stamp: 'fr 11/9/2020 12:16:53'!
PASSED!

!testRun: #PortfolioTest #test08EmptyPortfolioDoesNotExhibitAnyTransaction stamp: 'fr 11/9/2020 12:16:53'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithASingleAccountExhibitsItsTransactions stamp: 'fr 11/9/2020 12:16:53'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioWithMultipleAccountsAndPortfoliosExhibitsAllTheirTransactionsCombined stamp: 'fr 11/9/2020 12:16:53'!
PASSED!

!testRun: #PortfolioTest #test11EmptyPortfolioDoesNotContainAnyAccount stamp: 'fr 11/9/2020 12:16:53'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioContainsAnAccountAfterItIsAdded stamp: 'fr 11/9/2020 12:16:53'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioContainsAnAccountAfterItIsAddedToAnyOfItsDecendents stamp: 'fr 11/9/2020 12:16:53'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioDoesNotContainAnythingThatWasNotAddedToItself stamp: 'fr 11/9/2020 12:16:53'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotAddItself stamp: 'fr 11/9/2020 12:16:53'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioCanNotAddItsParent stamp: 'fr 11/9/2020 12:16:53'!
PASSED!

!testRun: #PortfolioTest #test17PortfolioCanNotAddAnyAncestor stamp: 'fr 11/9/2020 12:16:53'!
PASSED!

!testRun: #PortfolioTest #test18PortfolioCanNotAddAnyPreviousMemberOfTheTree stamp: 'fr 11/9/2020 12:16:53'!
PASSED!

!testRun: #PortfolioTest #test19PortfolioCanNotAddAnotherOneWhichSharesChild stamp: 'fr 11/9/2020 12:16:53'!
PASSED!

!testRun: #PortfolioTest #test20PortfolioCanNotAddDuplicateAccountIndirectly stamp: 'fr 11/9/2020 12:16:53'!
PASSED!

!testRun: #PortfolioTest #test21AddingShouldFailIdenticallyAsCreatingAPortfolioWithAccounts stamp: 'fr 11/9/2020 12:16:53'!
PASSED!

!testRun: #PortfolioTest #test22CreatingAPortfolioWithAccountsShouldFailIdenticallyAsWhenAddingThem stamp: 'fr 11/9/2020 12:16:53'!
PASSED!
!PortfolioTest methodsFor: 'tests - tree structure' stamp: 'fr 11/9/2020 12:17:13' prior: 50891707!
test20PortfolioCanNotAddDuplicateAccountIndirectly
	
	self portfolio: portfolioWithPortfolioWithEmptyPortfolio shouldFailWhileTryingToAdd: emptyPortfolio.! !

!testRun: #PortfolioTest #test20PortfolioCanNotAddDuplicateAccountIndirectly stamp: 'fr 11/9/2020 12:17:14'!
PASSED!

!testRun: #PortfolioTest #test01EmptyPortfolioHasBalanceZero stamp: 'fr 11/9/2020 12:17:14'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioWithASingleAccountWithNoTransactionsHasBalanceZero stamp: 'fr 11/9/2020 12:17:14'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioWithASingleAccountReflectsItsTransactionsValuesInItsBalance stamp: 'fr 11/9/2020 12:17:14'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithMultipleAccountsAndPortfoliosReflectsTheirTransactionsValuesInItsBalance stamp: 'fr 11/9/2020 12:17:14'!
PASSED!

!testRun: #PortfolioTest #test05EmptyPortfolioHasNotRegisteredAnyTransaction stamp: 'fr 11/9/2020 12:17:14'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioWithASingleAccountRegistersItsTransactions stamp: 'fr 11/9/2020 12:17:14'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioWithMulltipleAccountsAndPortfoliosRegistersAllTheirTransactions stamp: 'fr 11/9/2020 12:17:14'!
PASSED!

!testRun: #PortfolioTest #test08EmptyPortfolioDoesNotExhibitAnyTransaction stamp: 'fr 11/9/2020 12:17:14'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithASingleAccountExhibitsItsTransactions stamp: 'fr 11/9/2020 12:17:14'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioWithMultipleAccountsAndPortfoliosExhibitsAllTheirTransactionsCombined stamp: 'fr 11/9/2020 12:17:14'!
PASSED!

!testRun: #PortfolioTest #test11EmptyPortfolioDoesNotContainAnyAccount stamp: 'fr 11/9/2020 12:17:14'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioContainsAnAccountAfterItIsAdded stamp: 'fr 11/9/2020 12:17:14'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioContainsAnAccountAfterItIsAddedToAnyOfItsDecendents stamp: 'fr 11/9/2020 12:17:14'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioDoesNotContainAnythingThatWasNotAddedToItself stamp: 'fr 11/9/2020 12:17:14'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotAddItself stamp: 'fr 11/9/2020 12:17:14'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioCanNotAddItsParent stamp: 'fr 11/9/2020 12:17:14'!
PASSED!

!testRun: #PortfolioTest #test17PortfolioCanNotAddAnyAncestor stamp: 'fr 11/9/2020 12:17:14'!
PASSED!

!testRun: #PortfolioTest #test18PortfolioCanNotAddAnyPreviousMemberOfTheTree stamp: 'fr 11/9/2020 12:17:14'!
PASSED!

!testRun: #PortfolioTest #test19PortfolioCanNotAddAnotherOneWhichSharesChild stamp: 'fr 11/9/2020 12:17:14'!
PASSED!

!testRun: #PortfolioTest #test20PortfolioCanNotAddDuplicateAccountIndirectly stamp: 'fr 11/9/2020 12:17:14'!
PASSED!

!testRun: #PortfolioTest #test21AddingShouldFailIdenticallyAsCreatingAPortfolioWithAccounts stamp: 'fr 11/9/2020 12:17:14'!
PASSED!

!testRun: #PortfolioTest #test22CreatingAPortfolioWithAccountsShouldFailIdenticallyAsWhenAddingThem stamp: 'fr 11/9/2020 12:17:14'!
PASSED!
!PortfolioTest methodsFor: 'tests - private' stamp: 'fr 11/9/2020 12:18:02' prior: 50892832!
emptyPortfolioShouldFailWhileTryingToAdd: aPortfolio
		
	self portfolio: emptyPortfolio shouldFailWhileTryingToAdd: aPortfolio ! !

!testRun: #PortfolioTest #test22CreatingAPortfolioWithAccountsShouldFailIdenticallyAsWhenAddingThem stamp: 'fr 11/9/2020 12:18:05'!
PASSED!

!testRun: #PortfolioTest #test01EmptyPortfolioHasBalanceZero stamp: 'fr 11/9/2020 12:18:05'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioWithASingleAccountWithNoTransactionsHasBalanceZero stamp: 'fr 11/9/2020 12:18:05'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioWithASingleAccountReflectsItsTransactionsValuesInItsBalance stamp: 'fr 11/9/2020 12:18:05'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithMultipleAccountsAndPortfoliosReflectsTheirTransactionsValuesInItsBalance stamp: 'fr 11/9/2020 12:18:05'!
PASSED!

!testRun: #PortfolioTest #test05EmptyPortfolioHasNotRegisteredAnyTransaction stamp: 'fr 11/9/2020 12:18:05'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioWithASingleAccountRegistersItsTransactions stamp: 'fr 11/9/2020 12:18:05'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioWithMulltipleAccountsAndPortfoliosRegistersAllTheirTransactions stamp: 'fr 11/9/2020 12:18:05'!
PASSED!

!testRun: #PortfolioTest #test08EmptyPortfolioDoesNotExhibitAnyTransaction stamp: 'fr 11/9/2020 12:18:05'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithASingleAccountExhibitsItsTransactions stamp: 'fr 11/9/2020 12:18:05'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioWithMultipleAccountsAndPortfoliosExhibitsAllTheirTransactionsCombined stamp: 'fr 11/9/2020 12:18:05'!
PASSED!

!testRun: #PortfolioTest #test11EmptyPortfolioDoesNotContainAnyAccount stamp: 'fr 11/9/2020 12:18:05'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioContainsAnAccountAfterItIsAdded stamp: 'fr 11/9/2020 12:18:05'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioContainsAnAccountAfterItIsAddedToAnyOfItsDecendents stamp: 'fr 11/9/2020 12:18:05'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioDoesNotContainAnythingThatWasNotAddedToItself stamp: 'fr 11/9/2020 12:18:05'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotAddItself stamp: 'fr 11/9/2020 12:18:05'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioCanNotAddItsParent stamp: 'fr 11/9/2020 12:18:05'!
PASSED!

!testRun: #PortfolioTest #test17PortfolioCanNotAddAnyAncestor stamp: 'fr 11/9/2020 12:18:05'!
PASSED!

!testRun: #PortfolioTest #test18PortfolioCanNotAddAnyPreviousMemberOfTheTree stamp: 'fr 11/9/2020 12:18:05'!
PASSED!

!testRun: #PortfolioTest #test19PortfolioCanNotAddAnotherOneWhichSharesChild stamp: 'fr 11/9/2020 12:18:05'!
PASSED!

!testRun: #PortfolioTest #test20PortfolioCanNotAddDuplicateAccountIndirectly stamp: 'fr 11/9/2020 12:18:05'!
PASSED!

!testRun: #PortfolioTest #test21AddingShouldFailIdenticallyAsCreatingAPortfolioWithAccounts stamp: 'fr 11/9/2020 12:18:05'!
PASSED!

!testRun: #PortfolioTest #test22CreatingAPortfolioWithAccountsShouldFailIdenticallyAsWhenAddingThem stamp: 'fr 11/9/2020 12:18:05'!
PASSED!
!PortfolioTest methodsFor: 'tests - tree structure' stamp: 'fr 11/9/2020 12:19:04' prior: 50891940!
test21AddingShouldFailIdenticallyAsCreatingAPortfolioWithAccounts

	| parentPortfolio |
	
	parentPortfolio _ Portfolio new.
	parentPortfolio add: emptyPortfolio.
	
	self emptyPortfolioShouldFailWhileTryingToAdd: parentPortfolio.! !

!testRun: #PortfolioTest #test21AddingShouldFailIdenticallyAsCreatingAPortfolioWithAccounts stamp: 'fr 11/9/2020 12:19:05'!
PASSED!

!testRun: #PortfolioTest #test01EmptyPortfolioHasBalanceZero stamp: 'fr 11/9/2020 12:19:05'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioWithASingleAccountWithNoTransactionsHasBalanceZero stamp: 'fr 11/9/2020 12:19:05'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioWithASingleAccountReflectsItsTransactionsValuesInItsBalance stamp: 'fr 11/9/2020 12:19:05'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithMultipleAccountsAndPortfoliosReflectsTheirTransactionsValuesInItsBalance stamp: 'fr 11/9/2020 12:19:05'!
PASSED!

!testRun: #PortfolioTest #test05EmptyPortfolioHasNotRegisteredAnyTransaction stamp: 'fr 11/9/2020 12:19:05'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioWithASingleAccountRegistersItsTransactions stamp: 'fr 11/9/2020 12:19:05'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioWithMulltipleAccountsAndPortfoliosRegistersAllTheirTransactions stamp: 'fr 11/9/2020 12:19:05'!
PASSED!

!testRun: #PortfolioTest #test08EmptyPortfolioDoesNotExhibitAnyTransaction stamp: 'fr 11/9/2020 12:19:05'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithASingleAccountExhibitsItsTransactions stamp: 'fr 11/9/2020 12:19:05'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioWithMultipleAccountsAndPortfoliosExhibitsAllTheirTransactionsCombined stamp: 'fr 11/9/2020 12:19:05'!
PASSED!

!testRun: #PortfolioTest #test11EmptyPortfolioDoesNotContainAnyAccount stamp: 'fr 11/9/2020 12:19:05'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioContainsAnAccountAfterItIsAdded stamp: 'fr 11/9/2020 12:19:05'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioContainsAnAccountAfterItIsAddedToAnyOfItsDecendents stamp: 'fr 11/9/2020 12:19:05'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioDoesNotContainAnythingThatWasNotAddedToItself stamp: 'fr 11/9/2020 12:19:05'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotAddItself stamp: 'fr 11/9/2020 12:19:05'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioCanNotAddItsParent stamp: 'fr 11/9/2020 12:19:05'!
PASSED!

!testRun: #PortfolioTest #test17PortfolioCanNotAddAnyAncestor stamp: 'fr 11/9/2020 12:19:05'!
PASSED!

!testRun: #PortfolioTest #test18PortfolioCanNotAddAnyPreviousMemberOfTheTree stamp: 'fr 11/9/2020 12:19:05'!
PASSED!

!testRun: #PortfolioTest #test19PortfolioCanNotAddAnotherOneWhichSharesChild stamp: 'fr 11/9/2020 12:19:05'!
PASSED!

!testRun: #PortfolioTest #test20PortfolioCanNotAddDuplicateAccountIndirectly stamp: 'fr 11/9/2020 12:19:05'!
PASSED!

!testRun: #PortfolioTest #test21AddingShouldFailIdenticallyAsCreatingAPortfolioWithAccounts stamp: 'fr 11/9/2020 12:19:05'!
PASSED!

!testRun: #PortfolioTest #test22CreatingAPortfolioWithAccountsShouldFailIdenticallyAsWhenAddingThem stamp: 'fr 11/9/2020 12:19:05'!
PASSED!
!PortfolioTest methodsFor: 'tests - tree structure' stamp: 'fr 11/9/2020 12:20:32' prior: 50891733!
test18PortfolioCanNotAddAnyPreviousMemberOfTheTree

	| rootPortfolio anotherEmptyPortfolio |
	
	anotherEmptyPortfolio _ Portfolio new.
	rootPortfolio _ Portfolio with: (OrderedCollection with: portfolioWithEmptyPortfolio with: anotherEmptyPortfolio).
	
	self emptyPortfolioShouldFailWhileTryingToAdd: anotherEmptyPortfolio.! !

!testRun: #PortfolioTest #test18PortfolioCanNotAddAnyPreviousMemberOfTheTree stamp: 'fr 11/9/2020 12:20:44'!
PASSED!

!testRun: #PortfolioTest #test01EmptyPortfolioHasBalanceZero stamp: 'fr 11/9/2020 12:20:44'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioWithASingleAccountWithNoTransactionsHasBalanceZero stamp: 'fr 11/9/2020 12:20:44'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioWithASingleAccountReflectsItsTransactionsValuesInItsBalance stamp: 'fr 11/9/2020 12:20:44'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithMultipleAccountsAndPortfoliosReflectsTheirTransactionsValuesInItsBalance stamp: 'fr 11/9/2020 12:20:44'!
PASSED!

!testRun: #PortfolioTest #test05EmptyPortfolioHasNotRegisteredAnyTransaction stamp: 'fr 11/9/2020 12:20:44'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioWithASingleAccountRegistersItsTransactions stamp: 'fr 11/9/2020 12:20:44'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioWithMulltipleAccountsAndPortfoliosRegistersAllTheirTransactions stamp: 'fr 11/9/2020 12:20:44'!
PASSED!

!testRun: #PortfolioTest #test08EmptyPortfolioDoesNotExhibitAnyTransaction stamp: 'fr 11/9/2020 12:20:44'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithASingleAccountExhibitsItsTransactions stamp: 'fr 11/9/2020 12:20:44'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioWithMultipleAccountsAndPortfoliosExhibitsAllTheirTransactionsCombined stamp: 'fr 11/9/2020 12:20:44'!
PASSED!

!testRun: #PortfolioTest #test11EmptyPortfolioDoesNotContainAnyAccount stamp: 'fr 11/9/2020 12:20:44'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioContainsAnAccountAfterItIsAdded stamp: 'fr 11/9/2020 12:20:44'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioContainsAnAccountAfterItIsAddedToAnyOfItsDecendents stamp: 'fr 11/9/2020 12:20:44'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioDoesNotContainAnythingThatWasNotAddedToItself stamp: 'fr 11/9/2020 12:20:44'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotAddItself stamp: 'fr 11/9/2020 12:20:44'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioCanNotAddItsParent stamp: 'fr 11/9/2020 12:20:44'!
PASSED!

!testRun: #PortfolioTest #test17PortfolioCanNotAddAnyAncestor stamp: 'fr 11/9/2020 12:20:44'!
PASSED!

!testRun: #PortfolioTest #test18PortfolioCanNotAddAnyPreviousMemberOfTheTree stamp: 'fr 11/9/2020 12:20:44'!
PASSED!

!testRun: #PortfolioTest #test19PortfolioCanNotAddAnotherOneWhichSharesChild stamp: 'fr 11/9/2020 12:20:44'!
PASSED!

!testRun: #PortfolioTest #test20PortfolioCanNotAddDuplicateAccountIndirectly stamp: 'fr 11/9/2020 12:20:44'!
PASSED!

!testRun: #PortfolioTest #test21AddingShouldFailIdenticallyAsCreatingAPortfolioWithAccounts stamp: 'fr 11/9/2020 12:20:44'!
PASSED!

!testRun: #PortfolioTest #test22CreatingAPortfolioWithAccountsShouldFailIdenticallyAsWhenAddingThem stamp: 'fr 11/9/2020 12:20:44'!
PASSED!

----SNAPSHOT----(9 November 2020 12:21:22) CuisUniversity-4384.image priorSource: 17936772!
!Portfolio methodsFor: 'private - account management' stamp: 'fr 11/9/2020 12:28:26' prior: 50879928 overrides: 50880083!
collectTransactions: aTransactionsList

	"^accounts inject: aTransactionsList into: [:totalTransactions :anAccount | totalTransactions addAllLast: (anAccount collectTransactions: aTransactionsList)] "
	
	accounts do: [:anAccount | anAccount collectTransactions: aTransactionsList]
	! !
!ReceptiveAccount methodsFor: 'private - account management' stamp: 'fr 11/9/2020 12:28:50' prior: 50879832 overrides: 50880083!
collectTransactions: aTransactionsList

	^aTransactionsList addAllLast: self transactions
! !

!testRun: #PortfolioTest #test01EmptyPortfolioHasBalanceZero stamp: 'fr 11/9/2020 12:28:53'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioWithASingleAccountWithNoTransactionsHasBalanceZero stamp: 'fr 11/9/2020 12:28:53'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioWithASingleAccountReflectsItsTransactionsValuesInItsBalance stamp: 'fr 11/9/2020 12:28:53'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithMultipleAccountsAndPortfoliosReflectsTheirTransactionsValuesInItsBalance stamp: 'fr 11/9/2020 12:28:53'!
PASSED!

!testRun: #PortfolioTest #test05EmptyPortfolioHasNotRegisteredAnyTransaction stamp: 'fr 11/9/2020 12:28:53'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioWithASingleAccountRegistersItsTransactions stamp: 'fr 11/9/2020 12:28:53'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioWithMulltipleAccountsAndPortfoliosRegistersAllTheirTransactions stamp: 'fr 11/9/2020 12:28:53'!
PASSED!

!testRun: #PortfolioTest #test08EmptyPortfolioDoesNotExhibitAnyTransaction stamp: 'fr 11/9/2020 12:28:53'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithASingleAccountExhibitsItsTransactions stamp: 'fr 11/9/2020 12:28:53'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioWithMultipleAccountsAndPortfoliosExhibitsAllTheirTransactionsCombined stamp: 'fr 11/9/2020 12:28:53'!
PASSED!

!testRun: #PortfolioTest #test11EmptyPortfolioDoesNotContainAnyAccount stamp: 'fr 11/9/2020 12:28:53'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioContainsAnAccountAfterItIsAdded stamp: 'fr 11/9/2020 12:28:53'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioContainsAnAccountAfterItIsAddedToAnyOfItsDecendents stamp: 'fr 11/9/2020 12:28:53'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioDoesNotContainAnythingThatWasNotAddedToItself stamp: 'fr 11/9/2020 12:28:53'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotAddItself stamp: 'fr 11/9/2020 12:28:53'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioCanNotAddItsParent stamp: 'fr 11/9/2020 12:28:53'!
PASSED!

!testRun: #PortfolioTest #test17PortfolioCanNotAddAnyAncestor stamp: 'fr 11/9/2020 12:28:53'!
PASSED!

!testRun: #PortfolioTest #test18PortfolioCanNotAddAnyPreviousMemberOfTheTree stamp: 'fr 11/9/2020 12:28:53'!
PASSED!

!testRun: #PortfolioTest #test19PortfolioCanNotAddAnotherOneWhichSharesChild stamp: 'fr 11/9/2020 12:28:53'!
PASSED!

!testRun: #PortfolioTest #test20PortfolioCanNotAddDuplicateAccountIndirectly stamp: 'fr 11/9/2020 12:28:53'!
PASSED!

!testRun: #PortfolioTest #test21AddingShouldFailIdenticallyAsCreatingAPortfolioWithAccounts stamp: 'fr 11/9/2020 12:28:53'!
PASSED!

!testRun: #PortfolioTest #test22CreatingAPortfolioWithAccountsShouldFailIdenticallyAsWhenAddingThem stamp: 'fr 11/9/2020 12:28:53'!
PASSED!
!Portfolio methodsFor: 'private - account management' stamp: 'fr 11/9/2020 12:31:13' prior: 50893649 overrides: 50880083!
collectTransactions: aTransactionsList
	
	accounts do: [:anAccount | anAccount collectTransactions: aTransactionsList]
	! !
!Account methodsFor: 'private' stamp: 'fr 11/9/2020 12:32:16'!
collectTransactionsInto: aTransactionList

	self subclassResponsibility ! !
!Portfolio methodsFor: 'private - account management' stamp: 'fr 11/9/2020 12:32:16' overrides: 50893761!
collectTransactionsInto: aTransactionsList
	
	accounts do: [:anAccount | anAccount collectTransactions: aTransactionsList]
	! !
!ReceptiveAccount methodsFor: 'private - account management' stamp: 'fr 11/9/2020 12:32:16' overrides: 50893761!
collectTransactionsInto: aTransactionsList

	^aTransactionsList addAllLast: self transactions
! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'fr 11/9/2020 12:32:16' prior: 50880023 overrides: 50880069!
transactions
	
	| transactions |
	transactions _ OrderedCollection new.
	self collectTransactionsInto: transactions.
	^transactions
! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'fr 11/9/2020 12:32:16' prior: 50893767 overrides: 50893761!
collectTransactionsInto: aTransactionsList
	
	accounts do: [:anAccount | anAccount collectTransactions: aTransactionsList]
	! !

!methodRemoval: Account #collectTransactions: stamp: 'fr 11/9/2020 12:32:17'!
collectTransactions: aTransactionList

	self subclassResponsibility !

!methodRemoval: Portfolio #collectTransactions: stamp: 'fr 11/9/2020 12:32:17'!
collectTransactions: aTransactionsList
	
	accounts do: [:anAccount | anAccount collectTransactions: aTransactionsList]
	!

!methodRemoval: ReceptiveAccount #collectTransactions: stamp: 'fr 11/9/2020 12:32:17'!
collectTransactions: aTransactionsList

	^aTransactionsList addAllLast: self transactions
!
!Portfolio methodsFor: 'private - account management' stamp: 'fr 11/9/2020 12:32:20' prior: 50893790 overrides: 50893761!
collectTransactionsInto: aTransactionsList
	
	accounts do: [:anAccount | anAccount collectTransactionsInto: aTransactionsList]
	! !

!testRun: #PortfolioTest #test01EmptyPortfolioHasBalanceZero stamp: 'fr 11/9/2020 12:32:27'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioWithASingleAccountWithNoTransactionsHasBalanceZero stamp: 'fr 11/9/2020 12:32:27'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioWithASingleAccountReflectsItsTransactionsValuesInItsBalance stamp: 'fr 11/9/2020 12:32:27'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithMultipleAccountsAndPortfoliosReflectsTheirTransactionsValuesInItsBalance stamp: 'fr 11/9/2020 12:32:28'!
PASSED!

!testRun: #PortfolioTest #test05EmptyPortfolioHasNotRegisteredAnyTransaction stamp: 'fr 11/9/2020 12:32:28'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioWithASingleAccountRegistersItsTransactions stamp: 'fr 11/9/2020 12:32:28'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioWithMulltipleAccountsAndPortfoliosRegistersAllTheirTransactions stamp: 'fr 11/9/2020 12:32:28'!
PASSED!

!testRun: #PortfolioTest #test08EmptyPortfolioDoesNotExhibitAnyTransaction stamp: 'fr 11/9/2020 12:32:28'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithASingleAccountExhibitsItsTransactions stamp: 'fr 11/9/2020 12:32:28'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioWithMultipleAccountsAndPortfoliosExhibitsAllTheirTransactionsCombined stamp: 'fr 11/9/2020 12:32:28'!
PASSED!

!testRun: #PortfolioTest #test11EmptyPortfolioDoesNotContainAnyAccount stamp: 'fr 11/9/2020 12:32:28'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioContainsAnAccountAfterItIsAdded stamp: 'fr 11/9/2020 12:32:28'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioContainsAnAccountAfterItIsAddedToAnyOfItsDecendents stamp: 'fr 11/9/2020 12:32:28'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioDoesNotContainAnythingThatWasNotAddedToItself stamp: 'fr 11/9/2020 12:32:28'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotAddItself stamp: 'fr 11/9/2020 12:32:28'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioCanNotAddItsParent stamp: 'fr 11/9/2020 12:32:28'!
PASSED!

!testRun: #PortfolioTest #test17PortfolioCanNotAddAnyAncestor stamp: 'fr 11/9/2020 12:32:28'!
PASSED!

!testRun: #PortfolioTest #test18PortfolioCanNotAddAnyPreviousMemberOfTheTree stamp: 'fr 11/9/2020 12:32:28'!
PASSED!

!testRun: #PortfolioTest #test19PortfolioCanNotAddAnotherOneWhichSharesChild stamp: 'fr 11/9/2020 12:32:28'!
PASSED!

!testRun: #PortfolioTest #test20PortfolioCanNotAddDuplicateAccountIndirectly stamp: 'fr 11/9/2020 12:32:28'!
PASSED!

!testRun: #PortfolioTest #test21AddingShouldFailIdenticallyAsCreatingAPortfolioWithAccounts stamp: 'fr 11/9/2020 12:32:28'!
PASSED!

!testRun: #PortfolioTest #test22CreatingAPortfolioWithAccountsShouldFailIdenticallyAsWhenAddingThem stamp: 'fr 11/9/2020 12:32:28'!
PASSED!

----SNAPSHOT----(9 November 2020 12:33:29) CuisUniversity-4384.image priorSource: 17983787!
!Portfolio methodsFor: 'private - account management' stamp: 'fr 11/9/2020 12:35:04' prior: 50880031 overrides: 50880093!
includes: anAccountToCheck 
	
	^self = anAccountToCheck 
		or: [accounts 
			anySatisfy: [:anAccount | 
				self inclusionGoesEitherWay
			]
		]! !
!Portfolio methodsFor: 'private - account management' stamp: 'fr 11/9/2020 12:35:41' prior: 50893912 overrides: 50880093!
includes: anAccountToCheck 
	
	^self = anAccountToCheck 
		or: [accounts 
			anySatisfy: [:anAccount | 
				(anAccount includes: anAccountToCheck) or: [anAccountToCheck includes: anAccount]
			]
		]! !
!Portfolio methodsFor: 'private - account management' stamp: 'fr 11/9/2020 12:36:13' prior: 50893921 overrides: 50880093!
includes: anAccountToCheck 
	
	^self = anAccountToCheck 
		or: [accounts 
			anySatisfy: [:anAccount | 
				self inclusionGoesEitherWayFor: anAccount and: anAccountToCheck 
			]
		]! !
!Portfolio methodsFor: 'private - account management' stamp: 'fr 11/9/2020 12:36:29'!
inclusionGoesEitherWayFor: anAccount and: anAccountToCheck 
	
	^(anAccount includes: anAccountToCheck) or: [anAccountToCheck includes: anAccount]! !

!testRun: #PortfolioTest #test01EmptyPortfolioHasBalanceZero stamp: 'fr 11/9/2020 12:36:32'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioWithASingleAccountWithNoTransactionsHasBalanceZero stamp: 'fr 11/9/2020 12:36:32'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioWithASingleAccountReflectsItsTransactionsValuesInItsBalance stamp: 'fr 11/9/2020 12:36:32'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithMultipleAccountsAndPortfoliosReflectsTheirTransactionsValuesInItsBalance stamp: 'fr 11/9/2020 12:36:32'!
PASSED!

!testRun: #PortfolioTest #test05EmptyPortfolioHasNotRegisteredAnyTransaction stamp: 'fr 11/9/2020 12:36:32'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioWithASingleAccountRegistersItsTransactions stamp: 'fr 11/9/2020 12:36:32'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioWithMulltipleAccountsAndPortfoliosRegistersAllTheirTransactions stamp: 'fr 11/9/2020 12:36:32'!
PASSED!

!testRun: #PortfolioTest #test08EmptyPortfolioDoesNotExhibitAnyTransaction stamp: 'fr 11/9/2020 12:36:32'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithASingleAccountExhibitsItsTransactions stamp: 'fr 11/9/2020 12:36:32'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioWithMultipleAccountsAndPortfoliosExhibitsAllTheirTransactionsCombined stamp: 'fr 11/9/2020 12:36:32'!
PASSED!

!testRun: #PortfolioTest #test11EmptyPortfolioDoesNotContainAnyAccount stamp: 'fr 11/9/2020 12:36:32'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioContainsAnAccountAfterItIsAdded stamp: 'fr 11/9/2020 12:36:32'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioContainsAnAccountAfterItIsAddedToAnyOfItsDecendents stamp: 'fr 11/9/2020 12:36:32'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioDoesNotContainAnythingThatWasNotAddedToItself stamp: 'fr 11/9/2020 12:36:32'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotAddItself stamp: 'fr 11/9/2020 12:36:32'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioCanNotAddItsParent stamp: 'fr 11/9/2020 12:36:32'!
PASSED!

!testRun: #PortfolioTest #test17PortfolioCanNotAddAnyAncestor stamp: 'fr 11/9/2020 12:36:32'!
PASSED!

!testRun: #PortfolioTest #test18PortfolioCanNotAddAnyPreviousMemberOfTheTree stamp: 'fr 11/9/2020 12:36:32'!
PASSED!

!testRun: #PortfolioTest #test19PortfolioCanNotAddAnotherOneWhichSharesChild stamp: 'fr 11/9/2020 12:36:32'!
PASSED!

!testRun: #PortfolioTest #test20PortfolioCanNotAddDuplicateAccountIndirectly stamp: 'fr 11/9/2020 12:36:32'!
PASSED!

!testRun: #PortfolioTest #test21AddingShouldFailIdenticallyAsCreatingAPortfolioWithAccounts stamp: 'fr 11/9/2020 12:36:32'!
PASSED!

!testRun: #PortfolioTest #test22CreatingAPortfolioWithAccountsShouldFailIdenticallyAsWhenAddingThem stamp: 'fr 11/9/2020 12:36:32'!
PASSED!

----SNAPSHOT----(9 November 2020 12:37:04) CuisUniversity-4384.image priorSource: 17992210!
!Portfolio methodsFor: 'private - account management' stamp: 'fr 11/9/2020 12:37:44'!
isComposedBy: anAccountToCheck 
	
	^self = anAccountToCheck 
		or: [accounts 
			anySatisfy: [:anAccount | 
				self inclusionGoesEitherWayFor: anAccount and: anAccountToCheck 
			]
		]! !
!ReceptiveAccount methodsFor: 'private - account management' stamp: 'fr 11/9/2020 12:37:44'!
isComposedBy: anAccount 
	
	^self = anAccount ! !
!Account methodsFor: 'private' stamp: 'fr 11/9/2020 12:37:44'!
isComposedBy: anAccount

	self subclassResponsibility ! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'fr 11/9/2020 12:37:44' prior: 50893941!
inclusionGoesEitherWayFor: anAccount and: anAccountToCheck 
	
	^(anAccount isComposedBy: anAccountToCheck) or: [anAccountToCheck isComposedBy: anAccount]! !

!methodRemoval: Portfolio #includes: stamp: 'fr 11/9/2020 12:37:44'!
includes: anAccountToCheck 
	
	^self = anAccountToCheck 
		or: [accounts 
			anySatisfy: [:anAccount | 
				self inclusionGoesEitherWayFor: anAccount and: anAccountToCheck 
			]
		]!

!methodRemoval: ReceptiveAccount #includes: stamp: 'fr 11/9/2020 12:37:44'!
includes: anAccount 
	
	^self = anAccount !

!methodRemoval: Account #includes: stamp: 'fr 11/9/2020 12:37:44'!
includes: anAccount

	self subclassResponsibility !
!ReceptiveAccount methodsFor: 'private - account management' stamp: 'fr 11/9/2020 12:38:43'!
includes: anAccount 
	
	^self = anAccount ! !
!Account methodsFor: 'private' stamp: 'fr 11/9/2020 12:38:43'!
includes: anAccount

	self subclassResponsibility ! !
!Portfolio methodsFor: 'private - account management' stamp: 'fr 11/9/2020 12:38:43' overrides: 50894083!
includes: anAccountToCheck 
	
	^self = anAccountToCheck 
		or: [accounts 
			anySatisfy: [:anAccount | 
				self inclusionGoesEitherWayFor: anAccount and: anAccountToCheck 
			]
		]! !

!methodRemoval: ReceptiveAccount #isComposedBy: stamp: 'fr 11/9/2020 12:38:43'!
isComposedBy: anAccount 
	
	^self = anAccount !

!methodRemoval: Account #isComposedBy: stamp: 'fr 11/9/2020 12:38:43'!
isComposedBy: anAccount

	self subclassResponsibility !

!methodRemoval: Portfolio #isComposedBy: stamp: 'fr 11/9/2020 12:38:43'!
isComposedBy: anAccountToCheck 
	
	^self = anAccountToCheck 
		or: [accounts 
			anySatisfy: [:anAccount | 
				self inclusionGoesEitherWayFor: anAccount and: anAccountToCheck 
			]
		]!

----STARTUP---- (9 November 2020 12:39:09) as /home/fede/Documentos/Facultad/Inge1/Cuises/linux64/CuisUniversity-4384.image!


!testRun: #PortfolioTest #test01EmptyPortfolioHasBalanceZero stamp: 'fr 11/9/2020 12:39:11'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioWithASingleAccountWithNoTransactionsHasBalanceZero stamp: 'fr 11/9/2020 12:39:11'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioWithASingleAccountReflectsItsTransactionsValuesInItsBalance stamp: 'fr 11/9/2020 12:39:11'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithMultipleAccountsAndPortfoliosReflectsTheirTransactionsValuesInItsBalance stamp: 'fr 11/9/2020 12:39:11'!
PASSED!

!testRun: #PortfolioTest #test05EmptyPortfolioHasNotRegisteredAnyTransaction stamp: 'fr 11/9/2020 12:39:11'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioWithASingleAccountRegistersItsTransactions stamp: 'fr 11/9/2020 12:39:11'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioWithMulltipleAccountsAndPortfoliosRegistersAllTheirTransactions stamp: 'fr 11/9/2020 12:39:11'!
PASSED!

!testRun: #PortfolioTest #test08EmptyPortfolioDoesNotExhibitAnyTransaction stamp: 'fr 11/9/2020 12:39:11'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithASingleAccountExhibitsItsTransactions stamp: 'fr 11/9/2020 12:39:11'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioWithMultipleAccountsAndPortfoliosExhibitsAllTheirTransactionsCombined stamp: 'fr 11/9/2020 12:39:11'!
PASSED!

!testRun: #PortfolioTest #test11EmptyPortfolioDoesNotContainAnyAccount stamp: 'fr 11/9/2020 12:39:11'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioContainsAnAccountAfterItIsAdded stamp: 'fr 11/9/2020 12:39:11'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioContainsAnAccountAfterItIsAddedToAnyOfItsDecendents stamp: 'fr 11/9/2020 12:39:11'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioDoesNotContainAnythingThatWasNotAddedToItself stamp: 'fr 11/9/2020 12:39:11'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotAddItself stamp: 'fr 11/9/2020 12:39:11'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioCanNotAddItsParent stamp: 'fr 11/9/2020 12:39:11'!
PASSED!

!testRun: #PortfolioTest #test17PortfolioCanNotAddAnyAncestor stamp: 'fr 11/9/2020 12:39:11'!
PASSED!

!testRun: #PortfolioTest #test18PortfolioCanNotAddAnyPreviousMemberOfTheTree stamp: 'fr 11/9/2020 12:39:11'!
PASSED!

!testRun: #PortfolioTest #test19PortfolioCanNotAddAnotherOneWhichSharesChild stamp: 'fr 11/9/2020 12:39:11'!
PASSED!

!testRun: #PortfolioTest #test20PortfolioCanNotAddDuplicateAccountIndirectly stamp: 'fr 11/9/2020 12:39:11'!
PASSED!

!testRun: #PortfolioTest #test21AddingShouldFailIdenticallyAsCreatingAPortfolioWithAccounts stamp: 'fr 11/9/2020 12:39:11'!
PASSED!

!testRun: #PortfolioTest #test22CreatingAPortfolioWithAccountsShouldFailIdenticallyAsWhenAddingThem stamp: 'fr 11/9/2020 12:39:11'!
PASSED!
!Portfolio methodsFor: 'private - account management' stamp: 'fr 11/9/2020 12:40:00'!
isComposedBy: anAccountToCheck 
	
	^self = anAccountToCheck 
		or: [accounts 
			anySatisfy: [:anAccount | 
				self inclusionGoesEitherWayFor: anAccount and: anAccountToCheck 
			]
		]! !

!methodRemoval: Portfolio #includes: stamp: 'fr 11/9/2020 12:40:07'!
includes: anAccountToCheck 
	
	^self = anAccountToCheck 
		or: [accounts 
			anySatisfy: [:anAccount | 
				self inclusionGoesEitherWayFor: anAccount and: anAccountToCheck 
			]
		]!
!Portfolio methodsFor: 'private - account management' stamp: 'fr 11/9/2020 12:40:38' prior: 50893941!
inclusionGoesEitherWayFor: anAccount and: anAccountToCheck 
	
	^(anAccount isComposedBy: anAccountToCheck) or: [anAccountToCheck isComposedBy: anAccount]! !
!Portfolio methodsFor: 'private - account management' stamp: 'fr 11/9/2020 12:41:04' prior: 50876134!
isReachableFromRoots: aPortfolio 
	
	^self roots anySatisfy: [:aRootPortfolio | aRootPortfolio isComposedBy: aPortfolio]! !
!ReceptiveAccount methodsFor: 'private - account management' stamp: 'fr 11/9/2020 12:42:56'!
isComposedBy: anAccount 
	
	^self = anAccount ! !

!testRun: #PortfolioTest #test01EmptyPortfolioHasBalanceZero stamp: 'fr 11/9/2020 12:43:01'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioWithASingleAccountWithNoTransactionsHasBalanceZero stamp: 'fr 11/9/2020 12:43:01'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioWithASingleAccountReflectsItsTransactionsValuesInItsBalance stamp: 'fr 11/9/2020 12:43:01'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithMultipleAccountsAndPortfoliosReflectsTheirTransactionsValuesInItsBalance stamp: 'fr 11/9/2020 12:43:01'!
PASSED!

!testRun: #PortfolioTest #test05EmptyPortfolioHasNotRegisteredAnyTransaction stamp: 'fr 11/9/2020 12:43:01'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioWithASingleAccountRegistersItsTransactions stamp: 'fr 11/9/2020 12:43:01'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioWithMulltipleAccountsAndPortfoliosRegistersAllTheirTransactions stamp: 'fr 11/9/2020 12:43:01'!
PASSED!

!testRun: #PortfolioTest #test08EmptyPortfolioDoesNotExhibitAnyTransaction stamp: 'fr 11/9/2020 12:43:01'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithASingleAccountExhibitsItsTransactions stamp: 'fr 11/9/2020 12:43:01'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioWithMultipleAccountsAndPortfoliosExhibitsAllTheirTransactionsCombined stamp: 'fr 11/9/2020 12:43:01'!
PASSED!

!testRun: #PortfolioTest #test11EmptyPortfolioDoesNotContainAnyAccount stamp: 'fr 11/9/2020 12:43:01'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioContainsAnAccountAfterItIsAdded stamp: 'fr 11/9/2020 12:43:01'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioContainsAnAccountAfterItIsAddedToAnyOfItsDecendents stamp: 'fr 11/9/2020 12:43:01'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioDoesNotContainAnythingThatWasNotAddedToItself stamp: 'fr 11/9/2020 12:43:01'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotAddItself stamp: 'fr 11/9/2020 12:43:01'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioCanNotAddItsParent stamp: 'fr 11/9/2020 12:43:01'!
PASSED!

!testRun: #PortfolioTest #test17PortfolioCanNotAddAnyAncestor stamp: 'fr 11/9/2020 12:43:01'!
PASSED!

!testRun: #PortfolioTest #test18PortfolioCanNotAddAnyPreviousMemberOfTheTree stamp: 'fr 11/9/2020 12:43:01'!
PASSED!

!testRun: #PortfolioTest #test19PortfolioCanNotAddAnotherOneWhichSharesChild stamp: 'fr 11/9/2020 12:43:01'!
PASSED!

!testRun: #PortfolioTest #test20PortfolioCanNotAddDuplicateAccountIndirectly stamp: 'fr 11/9/2020 12:43:01'!
PASSED!

!testRun: #PortfolioTest #test21AddingShouldFailIdenticallyAsCreatingAPortfolioWithAccounts stamp: 'fr 11/9/2020 12:43:01'!
PASSED!

!testRun: #PortfolioTest #test22CreatingAPortfolioWithAccountsShouldFailIdenticallyAsWhenAddingThem stamp: 'fr 11/9/2020 12:43:01'!
PASSED!

!methodRemoval: ReceptiveAccount #includes: stamp: 'fr 11/9/2020 12:43:12'!
includes: anAccount 
	
	^self = anAccount !

!testRun: #PortfolioTest #test01EmptyPortfolioHasBalanceZero stamp: 'fr 11/9/2020 12:43:14'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioWithASingleAccountWithNoTransactionsHasBalanceZero stamp: 'fr 11/9/2020 12:43:14'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioWithASingleAccountReflectsItsTransactionsValuesInItsBalance stamp: 'fr 11/9/2020 12:43:14'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithMultipleAccountsAndPortfoliosReflectsTheirTransactionsValuesInItsBalance stamp: 'fr 11/9/2020 12:43:14'!
PASSED!

!testRun: #PortfolioTest #test05EmptyPortfolioHasNotRegisteredAnyTransaction stamp: 'fr 11/9/2020 12:43:14'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioWithASingleAccountRegistersItsTransactions stamp: 'fr 11/9/2020 12:43:14'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioWithMulltipleAccountsAndPortfoliosRegistersAllTheirTransactions stamp: 'fr 11/9/2020 12:43:14'!
PASSED!

!testRun: #PortfolioTest #test08EmptyPortfolioDoesNotExhibitAnyTransaction stamp: 'fr 11/9/2020 12:43:14'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithASingleAccountExhibitsItsTransactions stamp: 'fr 11/9/2020 12:43:14'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioWithMultipleAccountsAndPortfoliosExhibitsAllTheirTransactionsCombined stamp: 'fr 11/9/2020 12:43:14'!
PASSED!

!testRun: #PortfolioTest #test11EmptyPortfolioDoesNotContainAnyAccount stamp: 'fr 11/9/2020 12:43:14'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioContainsAnAccountAfterItIsAdded stamp: 'fr 11/9/2020 12:43:14'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioContainsAnAccountAfterItIsAddedToAnyOfItsDecendents stamp: 'fr 11/9/2020 12:43:14'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioDoesNotContainAnythingThatWasNotAddedToItself stamp: 'fr 11/9/2020 12:43:14'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotAddItself stamp: 'fr 11/9/2020 12:43:14'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioCanNotAddItsParent stamp: 'fr 11/9/2020 12:43:14'!
PASSED!

!testRun: #PortfolioTest #test17PortfolioCanNotAddAnyAncestor stamp: 'fr 11/9/2020 12:43:15'!
PASSED!

!testRun: #PortfolioTest #test18PortfolioCanNotAddAnyPreviousMemberOfTheTree stamp: 'fr 11/9/2020 12:43:15'!
PASSED!

!testRun: #PortfolioTest #test19PortfolioCanNotAddAnotherOneWhichSharesChild stamp: 'fr 11/9/2020 12:43:15'!
PASSED!

!testRun: #PortfolioTest #test20PortfolioCanNotAddDuplicateAccountIndirectly stamp: 'fr 11/9/2020 12:43:15'!
PASSED!

!testRun: #PortfolioTest #test21AddingShouldFailIdenticallyAsCreatingAPortfolioWithAccounts stamp: 'fr 11/9/2020 12:43:15'!
PASSED!

!testRun: #PortfolioTest #test22CreatingAPortfolioWithAccountsShouldFailIdenticallyAsWhenAddingThem stamp: 'fr 11/9/2020 12:43:15'!
PASSED!

!methodRemoval: Account #includes: stamp: 'fr 11/9/2020 12:43:20'!
includes: anAccount

	self subclassResponsibility !
!Account methodsFor: 'transactions' stamp: 'fr 11/9/2020 12:43:29'!
isComposedBy: anAccount
	
	self subclassResponsibility ! !

!testRun: #PortfolioTest #test01EmptyPortfolioHasBalanceZero stamp: 'fr 11/9/2020 12:43:55'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioWithASingleAccountWithNoTransactionsHasBalanceZero stamp: 'fr 11/9/2020 12:43:55'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioWithASingleAccountReflectsItsTransactionsValuesInItsBalance stamp: 'fr 11/9/2020 12:43:55'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithMultipleAccountsAndPortfoliosReflectsTheirTransactionsValuesInItsBalance stamp: 'fr 11/9/2020 12:43:55'!
PASSED!

!testRun: #PortfolioTest #test05EmptyPortfolioHasNotRegisteredAnyTransaction stamp: 'fr 11/9/2020 12:43:55'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioWithASingleAccountRegistersItsTransactions stamp: 'fr 11/9/2020 12:43:55'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioWithMulltipleAccountsAndPortfoliosRegistersAllTheirTransactions stamp: 'fr 11/9/2020 12:43:55'!
PASSED!

!testRun: #PortfolioTest #test08EmptyPortfolioDoesNotExhibitAnyTransaction stamp: 'fr 11/9/2020 12:43:55'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithASingleAccountExhibitsItsTransactions stamp: 'fr 11/9/2020 12:43:55'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioWithMultipleAccountsAndPortfoliosExhibitsAllTheirTransactionsCombined stamp: 'fr 11/9/2020 12:43:55'!
PASSED!

!testRun: #PortfolioTest #test11EmptyPortfolioDoesNotContainAnyAccount stamp: 'fr 11/9/2020 12:43:55'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioContainsAnAccountAfterItIsAdded stamp: 'fr 11/9/2020 12:43:55'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioContainsAnAccountAfterItIsAddedToAnyOfItsDecendents stamp: 'fr 11/9/2020 12:43:55'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioDoesNotContainAnythingThatWasNotAddedToItself stamp: 'fr 11/9/2020 12:43:55'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotAddItself stamp: 'fr 11/9/2020 12:43:55'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioCanNotAddItsParent stamp: 'fr 11/9/2020 12:43:55'!
PASSED!

!testRun: #PortfolioTest #test17PortfolioCanNotAddAnyAncestor stamp: 'fr 11/9/2020 12:43:55'!
PASSED!

!testRun: #PortfolioTest #test18PortfolioCanNotAddAnyPreviousMemberOfTheTree stamp: 'fr 11/9/2020 12:43:55'!
PASSED!

!testRun: #PortfolioTest #test19PortfolioCanNotAddAnotherOneWhichSharesChild stamp: 'fr 11/9/2020 12:43:55'!
PASSED!

!testRun: #PortfolioTest #test20PortfolioCanNotAddDuplicateAccountIndirectly stamp: 'fr 11/9/2020 12:43:55'!
PASSED!

!testRun: #PortfolioTest #test21AddingShouldFailIdenticallyAsCreatingAPortfolioWithAccounts stamp: 'fr 11/9/2020 12:43:55'!
PASSED!

!testRun: #PortfolioTest #test22CreatingAPortfolioWithAccountsShouldFailIdenticallyAsWhenAddingThem stamp: 'fr 11/9/2020 12:43:55'!
PASSED!
!Portfolio methodsFor: 'private - account management' stamp: 'fr 11/9/2020 12:44:12'!
compositionGoesEitherWayFor: anAccount and: anAccountToCheck 
	
	^(anAccount isComposedBy: anAccountToCheck) or: [anAccountToCheck isComposedBy: anAccount]! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'fr 11/9/2020 12:44:12' prior: 50894127 overrides: 50894343!
isComposedBy: anAccountToCheck 
	
	^self = anAccountToCheck 
		or: [accounts 
			anySatisfy: [:anAccount | 
				self compositionGoesEitherWayFor: anAccount and: anAccountToCheck 
			]
		]! !

!methodRemoval: Portfolio #inclusionGoesEitherWayFor:and: stamp: 'fr 11/9/2020 12:44:12'!
inclusionGoesEitherWayFor: anAccount and: anAccountToCheck 
	
	^(anAccount isComposedBy: anAccountToCheck) or: [anAccountToCheck isComposedBy: anAccount]!

!testRun: #PortfolioTest #test01EmptyPortfolioHasBalanceZero stamp: 'fr 11/9/2020 12:44:14'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioWithASingleAccountWithNoTransactionsHasBalanceZero stamp: 'fr 11/9/2020 12:44:14'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioWithASingleAccountReflectsItsTransactionsValuesInItsBalance stamp: 'fr 11/9/2020 12:44:14'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithMultipleAccountsAndPortfoliosReflectsTheirTransactionsValuesInItsBalance stamp: 'fr 11/9/2020 12:44:14'!
PASSED!

!testRun: #PortfolioTest #test05EmptyPortfolioHasNotRegisteredAnyTransaction stamp: 'fr 11/9/2020 12:44:14'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioWithASingleAccountRegistersItsTransactions stamp: 'fr 11/9/2020 12:44:14'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioWithMulltipleAccountsAndPortfoliosRegistersAllTheirTransactions stamp: 'fr 11/9/2020 12:44:14'!
PASSED!

!testRun: #PortfolioTest #test08EmptyPortfolioDoesNotExhibitAnyTransaction stamp: 'fr 11/9/2020 12:44:14'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithASingleAccountExhibitsItsTransactions stamp: 'fr 11/9/2020 12:44:14'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioWithMultipleAccountsAndPortfoliosExhibitsAllTheirTransactionsCombined stamp: 'fr 11/9/2020 12:44:14'!
PASSED!

!testRun: #PortfolioTest #test11EmptyPortfolioDoesNotContainAnyAccount stamp: 'fr 11/9/2020 12:44:14'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioContainsAnAccountAfterItIsAdded stamp: 'fr 11/9/2020 12:44:14'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioContainsAnAccountAfterItIsAddedToAnyOfItsDecendents stamp: 'fr 11/9/2020 12:44:14'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioDoesNotContainAnythingThatWasNotAddedToItself stamp: 'fr 11/9/2020 12:44:14'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotAddItself stamp: 'fr 11/9/2020 12:44:14'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioCanNotAddItsParent stamp: 'fr 11/9/2020 12:44:14'!
PASSED!

!testRun: #PortfolioTest #test17PortfolioCanNotAddAnyAncestor stamp: 'fr 11/9/2020 12:44:14'!
PASSED!

!testRun: #PortfolioTest #test18PortfolioCanNotAddAnyPreviousMemberOfTheTree stamp: 'fr 11/9/2020 12:44:14'!
PASSED!

!testRun: #PortfolioTest #test19PortfolioCanNotAddAnotherOneWhichSharesChild stamp: 'fr 11/9/2020 12:44:14'!
PASSED!

!testRun: #PortfolioTest #test20PortfolioCanNotAddDuplicateAccountIndirectly stamp: 'fr 11/9/2020 12:44:14'!
PASSED!

!testRun: #PortfolioTest #test21AddingShouldFailIdenticallyAsCreatingAPortfolioWithAccounts stamp: 'fr 11/9/2020 12:44:14'!
PASSED!

!testRun: #PortfolioTest #test22CreatingAPortfolioWithAccountsShouldFailIdenticallyAsWhenAddingThem stamp: 'fr 11/9/2020 12:44:14'!
PASSED!

----SNAPSHOT----(9 November 2020 12:45:00) CuisUniversity-4384.image priorSource: 17996259!

----QUIT----(9 November 2020 12:47:24) CuisUniversity-4384.image priorSource: 18012579!

----STARTUP---- (9 November 2020 13:35:23) as /home/fede/Documentos/Facultad/Inge1/Cuises/linux64/CuisUniversity-4384.image!

!Account methodsFor: 'nil' stamp: 'fr 11/9/2020 13:39:10'!
hasBeenAddedBy: aPortfolio

	self subclassResponsibility ! !

!testRun: #PortfolioTest #test01EmptyPortfolioHasBalanceZero stamp: 'fr 11/9/2020 13:42:01'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioWithASingleAccountWithNoTransactionsHasBalanceZero stamp: 'fr 11/9/2020 13:42:01'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioWithASingleAccountReflectsItsTransactionsValuesInItsBalance stamp: 'fr 11/9/2020 13:42:01'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithMultipleAccountsAndPortfoliosReflectsTheirTransactionsValuesInItsBalance stamp: 'fr 11/9/2020 13:42:01'!
PASSED!

!testRun: #PortfolioTest #test05EmptyPortfolioHasNotRegisteredAnyTransaction stamp: 'fr 11/9/2020 13:42:01'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioWithASingleAccountRegistersItsTransactions stamp: 'fr 11/9/2020 13:42:01'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioWithMulltipleAccountsAndPortfoliosRegistersAllTheirTransactions stamp: 'fr 11/9/2020 13:42:01'!
PASSED!

!testRun: #PortfolioTest #test08EmptyPortfolioDoesNotExhibitAnyTransaction stamp: 'fr 11/9/2020 13:42:01'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithASingleAccountExhibitsItsTransactions stamp: 'fr 11/9/2020 13:42:01'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioWithMultipleAccountsAndPortfoliosExhibitsAllTheirTransactionsCombined stamp: 'fr 11/9/2020 13:42:01'!
PASSED!

!testRun: #PortfolioTest #test11EmptyPortfolioDoesNotContainAnyAccount stamp: 'fr 11/9/2020 13:42:01'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioContainsAnAccountAfterItIsAdded stamp: 'fr 11/9/2020 13:42:01'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioContainsAnAccountAfterItIsAddedToAnyOfItsDecendents stamp: 'fr 11/9/2020 13:42:01'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioDoesNotContainAnythingThatWasNotAddedToItself stamp: 'fr 11/9/2020 13:42:01'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotAddItself stamp: 'fr 11/9/2020 13:42:01'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioCanNotAddItsParent stamp: 'fr 11/9/2020 13:42:01'!
PASSED!

!testRun: #PortfolioTest #test17PortfolioCanNotAddAnyAncestor stamp: 'fr 11/9/2020 13:42:01'!
PASSED!

!testRun: #PortfolioTest #test18PortfolioCanNotAddAnyPreviousMemberOfTheTree stamp: 'fr 11/9/2020 13:42:01'!
PASSED!

!testRun: #PortfolioTest #test19PortfolioCanNotAddAnotherOneWhichSharesChild stamp: 'fr 11/9/2020 13:42:01'!
PASSED!

!testRun: #PortfolioTest #test20PortfolioCanNotAddDuplicateAccountIndirectly stamp: 'fr 11/9/2020 13:42:01'!
PASSED!

!testRun: #PortfolioTest #test21AddingShouldFailIdenticallyAsCreatingAPortfolioWithAccounts stamp: 'fr 11/9/2020 13:42:01'!
PASSED!

!testRun: #PortfolioTest #test22CreatingAPortfolioWithAccountsShouldFailIdenticallyAsWhenAddingThem stamp: 'fr 11/9/2020 13:42:01'!
PASSED!

----STARTUP---- (9 November 2020 13:44:34) as /home/fede/Documentos/Facultad/Inge1/Cuises/linux64/CuisUniversity-4384.image!

!Account methodsFor: 'balance' stamp: 'fr 11/9/2020 13:45:05'!
hasBeenAddedBy: aPortfolio
	
	self subclassResponsibility ! !

!testRun: #PortfolioTest #test01EmptyPortfolioHasBalanceZero stamp: 'fr 11/9/2020 13:45:26'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioWithASingleAccountWithNoTransactionsHasBalanceZero stamp: 'fr 11/9/2020 13:45:26'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioWithASingleAccountReflectsItsTransactionsValuesInItsBalance stamp: 'fr 11/9/2020 13:45:26'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithMultipleAccountsAndPortfoliosReflectsTheirTransactionsValuesInItsBalance stamp: 'fr 11/9/2020 13:45:26'!
PASSED!

!testRun: #PortfolioTest #test05EmptyPortfolioHasNotRegisteredAnyTransaction stamp: 'fr 11/9/2020 13:45:26'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioWithASingleAccountRegistersItsTransactions stamp: 'fr 11/9/2020 13:45:26'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioWithMulltipleAccountsAndPortfoliosRegistersAllTheirTransactions stamp: 'fr 11/9/2020 13:45:26'!
PASSED!

!testRun: #PortfolioTest #test08EmptyPortfolioDoesNotExhibitAnyTransaction stamp: 'fr 11/9/2020 13:45:26'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithASingleAccountExhibitsItsTransactions stamp: 'fr 11/9/2020 13:45:26'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioWithMultipleAccountsAndPortfoliosExhibitsAllTheirTransactionsCombined stamp: 'fr 11/9/2020 13:45:26'!
PASSED!

!testRun: #PortfolioTest #test11EmptyPortfolioDoesNotContainAnyAccount stamp: 'fr 11/9/2020 13:45:26'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioContainsAnAccountAfterItIsAdded stamp: 'fr 11/9/2020 13:45:26'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioContainsAnAccountAfterItIsAddedToAnyOfItsDecendents stamp: 'fr 11/9/2020 13:45:26'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioDoesNotContainAnythingThatWasNotAddedToItself stamp: 'fr 11/9/2020 13:45:26'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotAddItself stamp: 'fr 11/9/2020 13:45:26'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioCanNotAddItsParent stamp: 'fr 11/9/2020 13:45:26'!
PASSED!

!testRun: #PortfolioTest #test17PortfolioCanNotAddAnyAncestor stamp: 'fr 11/9/2020 13:45:26'!
PASSED!

!testRun: #PortfolioTest #test18PortfolioCanNotAddAnyPreviousMemberOfTheTree stamp: 'fr 11/9/2020 13:45:26'!
PASSED!

!testRun: #PortfolioTest #test19PortfolioCanNotAddAnotherOneWhichSharesChild stamp: 'fr 11/9/2020 13:45:26'!
PASSED!

!testRun: #PortfolioTest #test20PortfolioCanNotAddDuplicateAccountIndirectly stamp: 'fr 11/9/2020 13:45:26'!
PASSED!

!testRun: #PortfolioTest #test21AddingShouldFailIdenticallyAsCreatingAPortfolioWithAccounts stamp: 'fr 11/9/2020 13:45:26'!
PASSED!

!testRun: #PortfolioTest #test22CreatingAPortfolioWithAccountsShouldFailIdenticallyAsWhenAddingThem stamp: 'fr 11/9/2020 13:45:26'!
PASSED!
!PortfolioTest methodsFor: 'tests - tree structure' stamp: 'fr 11/9/2020 13:45:47' prior: 50891354!
test22CreatingAPortfolioWithAccountsShouldFailIdenticallyAsWhenAddingThem
	
	self  should: 
			[Portfolio with: (OrderedCollection with: portfolioWithEmptyPortfolio with: anotherPortfolioWithEmptyPortfolio)] 
		raise: Error 
		withMessageText: Portfolio canNotAddAccountErrorDescription! !

----SNAPSHOT----(9 November 2020 13:47:10) CuisUniversity-4384.image priorSource: 18012672!

----SNAPSHOT----(9 November 2020 13:48:49) CuisUniversity-4384.image priorSource: 18016161!

!testRun: #PortfolioTest #test01EmptyPortfolioHasBalanceZero stamp: 'fr 11/9/2020 13:48:52'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioWithASingleAccountWithNoTransactionsHasBalanceZero stamp: 'fr 11/9/2020 13:48:52'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioWithASingleAccountReflectsItsTransactionsValuesInItsBalance stamp: 'fr 11/9/2020 13:48:52'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithMultipleAccountsAndPortfoliosReflectsTheirTransactionsValuesInItsBalance stamp: 'fr 11/9/2020 13:48:52'!
PASSED!

!testRun: #PortfolioTest #test05EmptyPortfolioHasNotRegisteredAnyTransaction stamp: 'fr 11/9/2020 13:48:52'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioWithASingleAccountRegistersItsTransactions stamp: 'fr 11/9/2020 13:48:52'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioWithMulltipleAccountsAndPortfoliosRegistersAllTheirTransactions stamp: 'fr 11/9/2020 13:48:52'!
PASSED!

!testRun: #PortfolioTest #test08EmptyPortfolioDoesNotExhibitAnyTransaction stamp: 'fr 11/9/2020 13:48:52'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithASingleAccountExhibitsItsTransactions stamp: 'fr 11/9/2020 13:48:52'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioWithMultipleAccountsAndPortfoliosExhibitsAllTheirTransactionsCombined stamp: 'fr 11/9/2020 13:48:52'!
PASSED!

!testRun: #PortfolioTest #test11EmptyPortfolioDoesNotContainAnyAccount stamp: 'fr 11/9/2020 13:48:52'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioContainsAnAccountAfterItIsAdded stamp: 'fr 11/9/2020 13:48:52'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioContainsAnAccountAfterItIsAddedToAnyOfItsDecendents stamp: 'fr 11/9/2020 13:48:52'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioDoesNotContainAnythingThatWasNotAddedToItself stamp: 'fr 11/9/2020 13:48:52'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotAddItself stamp: 'fr 11/9/2020 13:48:52'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioCanNotAddItsParent stamp: 'fr 11/9/2020 13:48:52'!
PASSED!

!testRun: #PortfolioTest #test17PortfolioCanNotAddAnyAncestor stamp: 'fr 11/9/2020 13:48:52'!
PASSED!

!testRun: #PortfolioTest #test18PortfolioCanNotAddAnyPreviousMemberOfTheTree stamp: 'fr 11/9/2020 13:48:52'!
PASSED!

!testRun: #PortfolioTest #test19PortfolioCanNotAddAnotherOneWhichSharesChild stamp: 'fr 11/9/2020 13:48:52'!
PASSED!

!testRun: #PortfolioTest #test20PortfolioCanNotAddDuplicateAccountIndirectly stamp: 'fr 11/9/2020 13:48:52'!
PASSED!

!testRun: #PortfolioTest #test21AddingShouldFailIdenticallyAsCreatingAPortfolioWithAccounts stamp: 'fr 11/9/2020 13:48:52'!
PASSED!

!testRun: #PortfolioTest #test22CreatingAPortfolioWithAccountsShouldFailIdenticallyAsWhenAddingThem stamp: 'fr 11/9/2020 13:48:52'!
PASSED!

----QUIT----(9 November 2020 13:49:08) CuisUniversity-4384.image priorSource: 18016254!