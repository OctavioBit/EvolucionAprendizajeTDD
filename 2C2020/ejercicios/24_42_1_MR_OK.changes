

----STARTUP---- (25 October 2020 13:44:28) as /home/jadmin/Documents/Ingenier√≠a de Software 1/Cuis University/Cuis University/CuisUniversity-4384.image!


TestCase subclass: #MarsRoverTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover'!

!classDefinition: #MarsRoverTest category: 'MarsRover' stamp: 'JEA 10/25/2020 15:45:39'!
TestCase subclass: #MarsRoverTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover'!

!classDefinition: #MarsRover category: 'MarsRover' stamp: 'JEA 10/25/2020 15:50:19'!
Object subclass: #MarsRover
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover'!
!MarsRoverTest methodsFor: 'tests' stamp: 'JEA 10/25/2020 15:50:47'!
test01NewRoverShouldBeAtInitializedPosition

	self assert: ((MarsRover at: 0@0 facing: $N) isAt: 0@0).! !

!testRun: #MarsRoverTest #test01NewRoverShouldBeAtInitializedPosition stamp: 'JEA 10/25/2020 15:51:17'!
ERROR!

!testRun: #MarsRoverTest #test01NewRoverShouldBeAtInitializedPosition stamp: 'JEA 10/25/2020 15:51:17'!
ERROR!
!MarsRover class methodsFor: 'instance creation' stamp: 'JEA 10/25/2020 15:54:24'!
at: aPoint facing: aDirection

	^self basicNew placeAt: aPoint facing: aDirection.! !
!MarsRover methodsFor: 'initialization' stamp: 'JEA 10/25/2020 15:54:47'!
placeAt: aPoint facing: aDirection! !

Object subclass: #MarsRover
	instanceVariableNames: 'position orientation'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover'!

!classDefinition: #MarsRover category: 'MarsRover' stamp: 'JEA 10/25/2020 15:55:07'!
Object subclass: #MarsRover
	instanceVariableNames: 'position orientation'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover'!
!MarsRover methodsFor: 'initialization' stamp: 'JEA 10/25/2020 15:55:23' prior: 50870750!
placeAt: aPoint facing: aDirection

	position = aPoint.
	orientation = aDirection.! !

!testRun: #MarsRoverTest #test01NewRoverShouldBeAtInitializedPosition stamp: 'JEA 10/25/2020 15:56:11'!
ERROR!

!testRun: #MarsRoverTest #test01NewRoverShouldBeAtInitializedPosition stamp: 'JEA 10/25/2020 15:56:11'!
ERROR!
!MarsRover methodsFor: 'testing' stamp: 'JEA 10/25/2020 15:56:42'!
isAt: aPoint

	^aPoint = position! !
!MarsRover methodsFor: 'testing' stamp: 'JEA 10/25/2020 15:56:43' prior: 50870778!
isAt: aPoint

	^aPoint = position.! !

!testRun: #MarsRoverTest #test01NewRoverShouldBeAtInitializedPosition stamp: 'JEA 10/25/2020 15:56:45'!
FAILURE!

!testRun: #MarsRoverTest #test01NewRoverShouldBeAtInitializedPosition stamp: 'JEA 10/25/2020 15:56:45'!
FAILURE!

!testRun: #MarsRoverTest #test01NewRoverShouldBeAtInitializedPosition stamp: 'JEA 10/25/2020 15:58:04'!
FAILURE!

!testRun: #MarsRoverTest #test01NewRoverShouldBeAtInitializedPosition stamp: 'JEA 10/25/2020 15:58:04'!
FAILURE!
!MarsRover methodsFor: 'initialization' stamp: 'JEA 10/25/2020 15:59:33' prior: 50870766!
placeAt: aPoint facing: aDirection

	position := aPoint.
	orientation := aDirection.! !

!testRun: #MarsRoverTest #test01NewRoverShouldBeAtInitializedPosition stamp: 'JEA 10/25/2020 15:59:36'!
PASSED!
!MarsRoverTest methodsFor: 'tests' stamp: 'JEA 10/25/2020 16:01:11'!
test02NewRoverShouldBeFacingInitializedDirection

	self assert: ((MarsRover at: 0@0 facing: $N) isFacing: $N).! !

!testRun: #MarsRoverTest #test01NewRoverShouldBeAtInitializedPosition stamp: 'JEA 10/25/2020 16:01:15'!
PASSED!

!testRun: #MarsRoverTest #test02NewRoverShouldBeFacingInitializedDirection stamp: 'JEA 10/25/2020 16:01:15'!
ERROR!

!testRun: #MarsRoverTest #test02NewRoverShouldBeFacingInitializedDirection stamp: 'JEA 10/25/2020 16:01:15'!
ERROR!
!MarsRover methodsFor: 'testing' stamp: 'JEA 10/25/2020 16:01:51'!
isFacing: aDirection

	^aDirection = orientation.! !

!testRun: #MarsRoverTest #test01NewRoverShouldBeAtInitializedPosition stamp: 'JEA 10/25/2020 16:01:53'!
PASSED!

!testRun: #MarsRoverTest #test02NewRoverShouldBeFacingInitializedDirection stamp: 'JEA 10/25/2020 16:01:53'!
PASSED!
!MarsRoverTest methodsFor: 'tests' stamp: 'JEA 10/25/2020 16:09:52'!
test03RoverCantBeInitializedWithInvalidOrientation

	self assert: ((MarsRover at: 0@0 facing: $N) isFacing: $N).! !
!MarsRoverTest methodsFor: 'tests' stamp: 'JEA 10/25/2020 16:10:40'!
test03RoverCantBeInitializedWithInvalidDirection

	! !

!methodRemoval: MarsRoverTest #test03RoverCantBeInitializedWithInvalidOrientation stamp: 'JEA 10/25/2020 16:10:43'!
test03RoverCantBeInitializedWithInvalidOrientation

	self assert: ((MarsRover at: 0@0 facing: $N) isFacing: $N).!
!MarsRoverTest methodsFor: 'tests' stamp: 'JEA 10/25/2020 17:30:28' prior: 50870845!
test03RoverCantBeInitializedWithInvalidDirection

	self should: (MarsRover at: 0@0 facing: $Q) raise: Error withMessageText: 'Invalid direction, only N,S,E,W allowed.'! !

!testRun: #MarsRoverTest #test01NewRoverShouldBeAtInitializedPosition stamp: 'JEA 10/25/2020 17:34:37'!
PASSED!

!testRun: #MarsRoverTest #test02NewRoverShouldBeFacingInitializedDirection stamp: 'JEA 10/25/2020 17:34:37'!
PASSED!

!testRun: #MarsRoverTest #test03RoverCantBeInitializedWithInvalidDirection stamp: 'JEA 10/25/2020 17:34:37'!
FAILURE!

!testRun: #MarsRoverTest #test03RoverCantBeInitializedWithInvalidDirection stamp: 'JEA 10/25/2020 17:34:37'!
FAILURE!
!MarsRover class methodsFor: 'error messages' stamp: 'JEA 10/25/2020 17:35:19'!
invalidDirectionErrorMessage

	^'Invalid direction, only N,S,E,W allowed.'! !
!MarsRover methodsFor: 'initialization' stamp: 'JEA 10/25/2020 18:06:32' prior: 50870801!
placeAt: aPoint facing: aDirection

	(aDirection = $Q) ifTrue: [self error: self class invalidDirectionErrorMessage].
	position := aPoint.
	orientation := aDirection.! !

!testRun: #MarsRoverTest #test01NewRoverShouldBeAtInitializedPosition stamp: 'JEA 10/25/2020 18:06:39'!
PASSED!

!testRun: #MarsRoverTest #test02NewRoverShouldBeFacingInitializedDirection stamp: 'JEA 10/25/2020 18:06:39'!
PASSED!

!testRun: #MarsRoverTest #test03RoverCantBeInitializedWithInvalidDirection stamp: 'JEA 10/25/2020 18:06:39'!
ERROR!

!testRun: #MarsRoverTest #test03RoverCantBeInitializedWithInvalidDirection stamp: 'JEA 10/25/2020 18:06:39'!
ERROR!

!testRun: #MarsRoverTest #test01NewRoverShouldBeAtInitializedPosition stamp: 'JEA 10/25/2020 18:06:48'!
PASSED!

!testRun: #MarsRoverTest #test02NewRoverShouldBeFacingInitializedDirection stamp: 'JEA 10/25/2020 18:06:48'!
PASSED!

!testRun: #MarsRoverTest #test03RoverCantBeInitializedWithInvalidDirection stamp: 'JEA 10/25/2020 18:06:48'!
ERROR!

!testRun: #MarsRoverTest #test03RoverCantBeInitializedWithInvalidDirection stamp: 'JEA 10/25/2020 18:06:48'!
ERROR!
!MarsRoverTest methodsFor: 'tests' stamp: 'JEA 10/25/2020 18:07:06' prior: 50870857!
test03RoverCantBeInitializedWithInvalidDirection

	self should: (MarsRover at: 0@0 facing: $Q) raise: Error withMessageText: 'Invalid direction, only N, S, E, W allowed.'! !
!MarsRover class methodsFor: 'error messages' stamp: 'JEA 10/25/2020 18:07:17' prior: 50870880!
invalidDirectionErrorMessage

	^'Invalid direction, only N, S, E, W allowed.'! !
!MarsRoverTest methodsFor: 'tests' stamp: 'JEA 10/25/2020 18:07:53' prior: 50870924!
test03RoverCantBeInitializedWithInvalidDirection

	self should: (MarsRover at: 0@0 facing: $Q) 
		raise: Error 
		withMessageText: 'Invalid direction, only N, S, E, W allowed.'! !
!MarsRoverTest methodsFor: 'tests' stamp: 'JEA 10/25/2020 18:08:00' prior: 50870939!
test03RoverCantBeInitializedWithInvalidDirection

	self should: [MarsRover at: 0@0 facing: $Q] 
		raise: Error 
		withMessageText: 'Invalid direction, only N, S, E, W allowed.'! !

!testRun: #MarsRoverTest #test01NewRoverShouldBeAtInitializedPosition stamp: 'JEA 10/25/2020 18:08:02'!
PASSED!

!testRun: #MarsRoverTest #test02NewRoverShouldBeFacingInitializedDirection stamp: 'JEA 10/25/2020 18:08:02'!
PASSED!

!testRun: #MarsRoverTest #test03RoverCantBeInitializedWithInvalidDirection stamp: 'JEA 10/25/2020 18:08:02'!
PASSED!
!MarsRoverTest methodsFor: 'tests' stamp: 'JEA 10/25/2020 18:08:32'!
test03RoverCantBeInitializedWithDirectionQ

	self should: [MarsRover at: 0@0 facing: $Q] 
		raise: Error 
		withMessageText: 'Invalid direction, only N, S, E, W allowed.'! !

!methodRemoval: MarsRoverTest #test03RoverCantBeInitializedWithInvalidDirection stamp: 'JEA 10/25/2020 18:08:32'!
test03RoverCantBeInitializedWithInvalidDirection

	self should: [MarsRover at: 0@0 facing: $Q] 
		raise: Error 
		withMessageText: 'Invalid direction, only N, S, E, W allowed.'!
!MarsRoverTest methodsFor: 'tests' stamp: 'JEA 10/25/2020 18:09:02'!
test03RoverCantBeInitializedWithDirectionJ

	self should: [MarsRover at: 0@0 facing: $J] 
		raise: Error 
		withMessageText: 'Invalid direction, only N, S, E, W allowed.'! !
!MarsRoverTest methodsFor: 'tests' stamp: 'JEA 10/25/2020 18:09:10'!
test0rRoverCantBeInitializedWithDirectionJ

	self should: [MarsRover at: 0@0 facing: $J] 
		raise: Error 
		withMessageText: 'Invalid direction, only N, S, E, W allowed.'! !

!methodRemoval: MarsRoverTest #test03RoverCantBeInitializedWithDirectionJ stamp: 'JEA 10/25/2020 18:09:10'!
test03RoverCantBeInitializedWithDirectionJ

	self should: [MarsRover at: 0@0 facing: $J] 
		raise: Error 
		withMessageText: 'Invalid direction, only N, S, E, W allowed.'!
!MarsRoverTest methodsFor: 'tests' stamp: 'JEA 10/25/2020 18:09:15'!
test04RoverCantBeInitializedWithDirectionJ

	self should: [MarsRover at: 0@0 facing: $J] 
		raise: Error 
		withMessageText: 'Invalid direction, only N, S, E, W allowed.'! !

!methodRemoval: MarsRoverTest #test0rRoverCantBeInitializedWithDirectionJ stamp: 'JEA 10/25/2020 18:09:15'!
test0rRoverCantBeInitializedWithDirectionJ

	self should: [MarsRover at: 0@0 facing: $J] 
		raise: Error 
		withMessageText: 'Invalid direction, only N, S, E, W allowed.'!

!testRun: #MarsRoverTest #test01NewRoverShouldBeAtInitializedPosition stamp: 'JEA 10/25/2020 18:09:19'!
PASSED!

!testRun: #MarsRoverTest #test02NewRoverShouldBeFacingInitializedDirection stamp: 'JEA 10/25/2020 18:09:19'!
PASSED!

!testRun: #MarsRoverTest #test03RoverCantBeInitializedWithDirectionQ stamp: 'JEA 10/25/2020 18:09:19'!
PASSED!

!testRun: #MarsRoverTest #test04RoverCantBeInitializedWithDirectionJ stamp: 'JEA 10/25/2020 18:09:19'!
FAILURE!

!testRun: #MarsRoverTest #test04RoverCantBeInitializedWithDirectionJ stamp: 'JEA 10/25/2020 18:09:19'!
FAILURE!

!testRun: #MarsRoverTest #test01NewRoverShouldBeAtInitializedPosition stamp: 'JEA 10/25/2020 18:09:22'!
PASSED!

!testRun: #MarsRoverTest #test02NewRoverShouldBeFacingInitializedDirection stamp: 'JEA 10/25/2020 18:09:22'!
PASSED!

!testRun: #MarsRoverTest #test03RoverCantBeInitializedWithDirectionQ stamp: 'JEA 10/25/2020 18:09:22'!
PASSED!

!testRun: #MarsRoverTest #test04RoverCantBeInitializedWithDirectionJ stamp: 'JEA 10/25/2020 18:09:22'!
FAILURE!

!testRun: #MarsRoverTest #test04RoverCantBeInitializedWithDirectionJ stamp: 'JEA 10/25/2020 18:09:22'!
FAILURE!
!MarsRover methodsFor: 'initialization' stamp: 'JEA 10/25/2020 18:10:44' prior: 50870886!
placeAt: aPoint facing: aDirection

	(aDirection ~= $N) ifTrue: [self error: self class invalidDirectionErrorMessage].
	position := aPoint.
	orientation := aDirection.! !

!testRun: #MarsRoverTest #test01NewRoverShouldBeAtInitializedPosition stamp: 'JEA 10/25/2020 18:10:46'!
PASSED!

!testRun: #MarsRoverTest #test02NewRoverShouldBeFacingInitializedDirection stamp: 'JEA 10/25/2020 18:10:46'!
PASSED!

!testRun: #MarsRoverTest #test03RoverCantBeInitializedWithDirectionQ stamp: 'JEA 10/25/2020 18:10:46'!
PASSED!

!testRun: #MarsRoverTest #test04RoverCantBeInitializedWithDirectionJ stamp: 'JEA 10/25/2020 18:10:46'!
PASSED!

TestCase subclass: #MarsRoverTest
	instanceVariableNames: 'initialPosition initialDirection'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover'!

!classDefinition: #MarsRoverTest category: 'MarsRover' stamp: 'JEA 10/25/2020 18:11:45'!
TestCase subclass: #MarsRoverTest
	instanceVariableNames: 'initialPosition initialDirection'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover'!
!MarsRoverTest methodsFor: 'setup' stamp: 'JEA 10/25/2020 18:12:15' overrides: 16927572!
setUp

	initialPosition := 0@0.
	initialDirection := $N.! !
!MarsRoverTest methodsFor: 'tests' stamp: 'JEA 10/25/2020 18:12:37' prior: 50870732!
test01NewRoverShouldBeAtInitializedPosition

	self assert: ((MarsRover at: initialPosition facing: initialDirection) isAt: initialPosition).! !
!MarsRoverTest methodsFor: 'tests' stamp: 'JEA 10/25/2020 18:12:45' prior: 50871103!
test01NewRoverShouldBeAtInitializedPosition

	self assert: ((MarsRover at: 0@0 facing: $N) isAt: 0@0).! !
!MarsRoverTest methodsFor: 'tests' stamp: 'JEA 10/25/2020 18:15:04' prior: 50871111!
test01NewRoverShouldBeAtInitializedPosition

	self assert: ((MarsRover at: 0@0 facing: $N) isAt: 0@0).! !
!MarsRoverTest methodsFor: 'tests' stamp: 'JEA 10/25/2020 18:15:35' prior: 50871117!
test01NewRoverShouldBeAtInitializedPosition

	self assert: ((MarsRover at: 0@0 facing: $N) isAt: 0@0).! !
!MarsRover methodsFor: 'initialization' stamp: 'JEA 10/25/2020 18:17:16' prior: 50871062!
placeAt: aPoint facing: aDirection

	(aDirection = $Q) ifTrue: [self error: self class invalidDirectionErrorMessage].
	position := aPoint.
	orientation := aDirection.! !

!testRun: #MarsRoverTest #test01NewRoverShouldBeAtInitializedPosition stamp: 'JEA 10/25/2020 18:17:19'!
PASSED!

!testRun: #MarsRoverTest #test02NewRoverShouldBeFacingInitializedDirection stamp: 'JEA 10/25/2020 18:17:19'!
PASSED!

!testRun: #MarsRoverTest #test03RoverCantBeInitializedWithDirectionQ stamp: 'JEA 10/25/2020 18:17:19'!
PASSED!

!testRun: #MarsRoverTest #test04RoverCantBeInitializedWithDirectionJ stamp: 'JEA 10/25/2020 18:17:19'!
FAILURE!

!testRun: #MarsRoverTest #test04RoverCantBeInitializedWithDirectionJ stamp: 'JEA 10/25/2020 18:17:19'!
FAILURE!
!MarsRover methodsFor: 'initialization' stamp: 'JEA 10/25/2020 18:17:33' prior: 50871130!
placeAt: aPoint facing: aDirection

	(aDirection ~= $N) ifTrue: [self error: self class invalidDirectionErrorMessage].
	position := aPoint.
	orientation := aDirection.! !

!testRun: #MarsRoverTest #test01NewRoverShouldBeAtInitializedPosition stamp: 'JEA 10/25/2020 18:17:36'!
PASSED!

!testRun: #MarsRoverTest #test02NewRoverShouldBeFacingInitializedDirection stamp: 'JEA 10/25/2020 18:17:36'!
PASSED!

!testRun: #MarsRoverTest #test03RoverCantBeInitializedWithDirectionQ stamp: 'JEA 10/25/2020 18:17:36'!
PASSED!

!testRun: #MarsRoverTest #test04RoverCantBeInitializedWithDirectionJ stamp: 'JEA 10/25/2020 18:17:36'!
PASSED!
!MarsRoverTest methodsFor: 'tests' stamp: 'JEA 10/25/2020 18:18:21' prior: 50871123!
test01NewRoverShouldBeAtInitializedPosition

	self assert: ((MarsRover at: initialPosition facing: $N) isAt: initialPosition).! !
!MarsRoverTest methodsFor: 'tests' stamp: 'JEA 10/25/2020 18:18:26' prior: 50871179!
test01NewRoverShouldBeAtInitializedPosition

	self assert: ((MarsRover at: initialPosition facing: initialDirection) isAt: initialPosition).! !
!MarsRoverTest methodsFor: 'tests' stamp: 'JEA 10/25/2020 18:18:42' prior: 50870810!
test02NewRoverShouldBeFacingInitializedDirection

	self assert: ((MarsRover at: initialPosition facing: initialDirection) isFacing: initialDirection).! !
!MarsRoverTest methodsFor: 'tests' stamp: 'JEA 10/25/2020 18:20:33' prior: 50870967!
test03RoverCantBeInitializedWithDirectionQ

	self should: [MarsRover at: initialPosition facing: $Q] 
		raise: Error 
		withMessageText: 'Invalid direction, only N, S, E, W allowed.'! !
!MarsRoverTest methodsFor: 'tests' stamp: 'JEA 10/25/2020 18:20:40' prior: 50871009!
test04RoverCantBeInitializedWithDirectionJ

	self should: [MarsRover at: initialPosition facing: $J] 
		raise: Error 
		withMessageText: 'Invalid direction, only N, S, E, W allowed.'! !

!testRun: #MarsRoverTest #test01NewRoverShouldBeAtInitializedPosition stamp: 'JEA 10/25/2020 18:20:45'!
PASSED!

!testRun: #MarsRoverTest #test02NewRoverShouldBeFacingInitializedDirection stamp: 'JEA 10/25/2020 18:20:45'!
PASSED!

!testRun: #MarsRoverTest #test03RoverCantBeInitializedWithDirectionQ stamp: 'JEA 10/25/2020 18:20:45'!
PASSED!

!testRun: #MarsRoverTest #test04RoverCantBeInitializedWithDirectionJ stamp: 'JEA 10/25/2020 18:20:45'!
PASSED!
!MarsRover methodsFor: 'initialization' stamp: 'JEA 10/25/2020 18:22:28' prior: 50871156!
placeAt: aPoint facing: aDirection

	(aDirection ~= $N) ifTrue: [self error: self class invalidDirectionErrorMessage].
	position := aPoint.
	orientation := aDirection.! !

TestCase subclass: #MarsRoverTest
	instanceVariableNames: 'initialPosition initialDirection supportedDirections'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover'!

!classDefinition: #MarsRoverTest category: 'MarsRover' stamp: 'JEA 10/25/2020 18:22:43'!
TestCase subclass: #MarsRoverTest
	instanceVariableNames: 'initialPosition initialDirection supportedDirections'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover'!

TestCase subclass: #MarsRoverTest
	instanceVariableNames: 'initialPosition initialDirection supportedDirections'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover'!

!classDefinition: #MarsRoverTest category: 'MarsRover' stamp: 'JEA 10/25/2020 18:23:31'!
TestCase subclass: #MarsRoverTest
	instanceVariableNames: 'initialPosition initialDirection supportedDirections'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover'!

TestCase subclass: #MarsRoverTest
	instanceVariableNames: 'initialPosition initialDirection'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover'!

!classDefinition: #MarsRoverTest category: 'MarsRover' stamp: 'JEA 10/25/2020 18:24:11'!
TestCase subclass: #MarsRoverTest
	instanceVariableNames: 'initialPosition initialDirection'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover'!

Object subclass: #MarsRover
	instanceVariableNames: 'position orientation supportedDirections'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover'!

!classDefinition: #MarsRover category: 'MarsRover' stamp: 'JEA 10/25/2020 18:24:16'!
Object subclass: #MarsRover
	instanceVariableNames: 'position orientation supportedDirections'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover'!

Object subclass: #MarsRover
	instanceVariableNames: 'position orientation supportedOrientations'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover'!

!classDefinition: #MarsRover category: 'MarsRover' stamp: 'JEA 10/25/2020 18:24:20'!
Object subclass: #MarsRover
	instanceVariableNames: 'position orientation supportedOrientations'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover'!

Object subclass: #MarsRover
	instanceVariableNames: 'position orientation supportedDirections'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover'!

!classDefinition: #MarsRover category: 'MarsRover' stamp: 'JEA 10/25/2020 18:24:26'!
Object subclass: #MarsRover
	instanceVariableNames: 'position orientation supportedDirections'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover'!
!MarsRover methodsFor: 'initialization' stamp: 'JEA 10/25/2020 18:24:44' prior: 50871234!
placeAt: aPoint facing: aDirection

	(aDirection ~= $N) ifTrue: [self error: self class invalidDirectionErrorMessage].
	position := aPoint.
	orientation := aDirection.! !

Object subclass: #MarsRover
	instanceVariableNames: 'position orientation'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover'!

!classDefinition: #MarsRover category: 'MarsRover' stamp: 'JEA 10/25/2020 18:24:53'!
Object subclass: #MarsRover
	instanceVariableNames: 'position orientation'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover'!
!MarsRover methodsFor: 'initialization' stamp: 'JEA 10/25/2020 18:26:16' prior: 50871323!
placeAt: aPoint facing: aDirection
	| supportedDirections |
	supportedDirections := OrderedCollection with: $N with: $S with: $W with: $E.
	
	(aDirection ) ifTrue: [self error: self class invalidDirectionErrorMessage].
	
	position := aPoint.
	orientation := aDirection.! !
!MarsRover methodsFor: 'initialization' stamp: 'JEA 10/25/2020 18:27:42' prior: 50871343!
placeAt: aPoint facing: aDirection
	| supportedDirections |
	supportedDirections := OrderedCollection with: $N with: $S with: $W with: $E.
	
	(supportedDirections includes: aDirection) ifTrue: [self error: self class invalidDirectionErrorMessage].
	
	position := aPoint.
	orientation := aDirection.! !

!testRun: #MarsRoverTest #test01NewRoverShouldBeAtInitializedPosition stamp: 'JEA 10/25/2020 18:27:52'!
ERROR!

!testRun: #MarsRoverTest #test02NewRoverShouldBeFacingInitializedDirection stamp: 'JEA 10/25/2020 18:27:52'!
ERROR!

!testRun: #MarsRoverTest #test03RoverCantBeInitializedWithDirectionQ stamp: 'JEA 10/25/2020 18:27:52'!
FAILURE!

!testRun: #MarsRoverTest #test04RoverCantBeInitializedWithDirectionJ stamp: 'JEA 10/25/2020 18:27:52'!
FAILURE!
!MarsRover methodsFor: 'initialization' stamp: 'JEA 10/25/2020 18:28:10' prior: 50871355!
placeAt: aPoint facing: aDirection
	| supportedDirections |
	supportedDirections := OrderedCollection with: $N with: $S with: $W with: $E.
	
	(supportedDirections includes: aDirection) ifFalse: [self error: self class invalidDirectionErrorMessage].
	
	position := aPoint.
	orientation := aDirection.! !

!testRun: #MarsRoverTest #test01NewRoverShouldBeAtInitializedPosition stamp: 'JEA 10/25/2020 18:28:14'!
PASSED!

!testRun: #MarsRoverTest #test02NewRoverShouldBeFacingInitializedDirection stamp: 'JEA 10/25/2020 18:28:14'!
PASSED!

!testRun: #MarsRoverTest #test03RoverCantBeInitializedWithDirectionQ stamp: 'JEA 10/25/2020 18:28:14'!
PASSED!

!testRun: #MarsRoverTest #test04RoverCantBeInitializedWithDirectionJ stamp: 'JEA 10/25/2020 18:28:14'!
PASSED!

!methodRemoval: MarsRoverTest #test04RoverCantBeInitializedWithDirectionJ stamp: 'JEA 10/25/2020 18:29:14'!
test04RoverCantBeInitializedWithDirectionJ

	self should: [MarsRover at: initialPosition facing: $J] 
		raise: Error 
		withMessageText: 'Invalid direction, only N, S, E, W allowed.'!
!MarsRoverTest methodsFor: 'tests' stamp: 'JEA 10/25/2020 18:29:26'!
test03RoverCantBeInitializedWithInvalidDirection

	self should: [MarsRover at: initialPosition facing: $Q] 
		raise: Error 
		withMessageText: 'Invalid direction, only N, S, E, W allowed.'! !

!methodRemoval: MarsRoverTest #test03RoverCantBeInitializedWithDirectionQ stamp: 'JEA 10/25/2020 18:29:26'!
test03RoverCantBeInitializedWithDirectionQ

	self should: [MarsRover at: initialPosition facing: $Q] 
		raise: Error 
		withMessageText: 'Invalid direction, only N, S, E, W allowed.'!
!MarsRoverTest methodsFor: 'tests' stamp: 'JEA 10/25/2020 18:32:23'!
test04RoverMovesForwardWhenFacingNorth

	! !
!MarsRoverTest methodsFor: 'tests' stamp: 'JEA 10/25/2020 18:35:00' prior: 50871435!
test04RoverMovesForwardWhenFacingNorth
	| marsRover |
	marsRover := MarsRover at: initialPosition facing: initialDirection.
	
	marsRover command: 'f'.
	
	self assert: (marsRover isAt: initialPosition + 0@1).! !

0@0 + 0@1!

(0@0) + (0@1)!

(0@1) + (0@1) !
!MarsRoverTest methodsFor: 'tests' stamp: 'JEA 10/25/2020 18:35:46' prior: 50871440!
test04RoverMovesForwardWhenFacingNorth
	| marsRover |
	marsRover := MarsRover at: initialPosition facing: initialDirection.
	
	marsRover command: 'f'.
	
	self assert: (marsRover isAt: initialPosition + (0@1)).! !

!testRun: #MarsRoverTest #test01NewRoverShouldBeAtInitializedPosition stamp: 'JEA 10/25/2020 18:35:48'!
PASSED!

!testRun: #MarsRoverTest #test02NewRoverShouldBeFacingInitializedDirection stamp: 'JEA 10/25/2020 18:35:48'!
PASSED!

!testRun: #MarsRoverTest #test03RoverCantBeInitializedWithInvalidDirection stamp: 'JEA 10/25/2020 18:35:48'!
PASSED!

!testRun: #MarsRoverTest #test04RoverMovesForwardWhenFacingNorth stamp: 'JEA 10/25/2020 18:35:48'!
ERROR!

!testRun: #MarsRoverTest #test04RoverMovesForwardWhenFacingNorth stamp: 'JEA 10/25/2020 18:35:48'!
ERROR!
!MarsRover methodsFor: 'movement' stamp: 'JEA 10/25/2020 18:36:25'!
command: aCommandSequence

	position + (0@1).! !

!testRun: #MarsRoverTest #test01NewRoverShouldBeAtInitializedPosition stamp: 'JEA 10/25/2020 18:36:27'!
PASSED!

!testRun: #MarsRoverTest #test02NewRoverShouldBeFacingInitializedDirection stamp: 'JEA 10/25/2020 18:36:27'!
PASSED!

!testRun: #MarsRoverTest #test03RoverCantBeInitializedWithInvalidDirection stamp: 'JEA 10/25/2020 18:36:27'!
PASSED!

!testRun: #MarsRoverTest #test04RoverMovesForwardWhenFacingNorth stamp: 'JEA 10/25/2020 18:36:27'!
FAILURE!

!testRun: #MarsRoverTest #test04RoverMovesForwardWhenFacingNorth stamp: 'JEA 10/25/2020 18:36:27'!
FAILURE!
!MarsRover methodsFor: 'movement' stamp: 'JEA 10/25/2020 18:36:42' prior: 50871478!
command: aCommandSequence

	position := position + (0@1).! !

!testRun: #MarsRoverTest #test01NewRoverShouldBeAtInitializedPosition stamp: 'JEA 10/25/2020 18:36:43'!
PASSED!

!testRun: #MarsRoverTest #test02NewRoverShouldBeFacingInitializedDirection stamp: 'JEA 10/25/2020 18:36:43'!
PASSED!

!testRun: #MarsRoverTest #test03RoverCantBeInitializedWithInvalidDirection stamp: 'JEA 10/25/2020 18:36:43'!
PASSED!

!testRun: #MarsRoverTest #test04RoverMovesForwardWhenFacingNorth stamp: 'JEA 10/25/2020 18:36:43'!
PASSED!
!MarsRoverTest methodsFor: 'tests' stamp: 'JEA 10/25/2020 18:36:59'!
test04RoverMovesBackwardsWhenFacingNorth
	| marsRover |
	marsRover := MarsRover at: initialPosition facing: initialDirection.
	
	marsRover command: 'f'.
	
	self assert: (marsRover isAt: initialPosition + (0@1)).! !
!MarsRoverTest methodsFor: 'tests' stamp: 'JEA 10/25/2020 18:37:13'!
test05RoverMovesBackwardsWhenFacingNorth
	| marsRover |
	marsRover := MarsRover at: initialPosition facing: initialDirection.
	
	marsRover command: 'f'.
	
	self assert: (marsRover isAt: initialPosition + (0@1)).! !

!methodRemoval: MarsRoverTest #test04RoverMovesBackwardsWhenFacingNorth stamp: 'JEA 10/25/2020 18:37:13'!
test04RoverMovesBackwardsWhenFacingNorth
	| marsRover |
	marsRover := MarsRover at: initialPosition facing: initialDirection.
	
	marsRover command: 'f'.
	
	self assert: (marsRover isAt: initialPosition + (0@1)).!
!MarsRoverTest methodsFor: 'tests' stamp: 'JEA 10/25/2020 18:37:33' prior: 50871528!
test05RoverMovesBackwardsWhenFacingNorth
	| marsRover |
	marsRover := MarsRover at: initialPosition facing: $N.
	
	marsRover command: 'f'.
	
	self assert: (marsRover isAt: initialPosition + (0@1)).! !
!MarsRoverTest methodsFor: 'tests' stamp: 'JEA 10/25/2020 18:37:39' prior: 50871451!
test04RoverMovesForwardWhenFacingNorth
	| marsRover |
	marsRover := MarsRover at: initialPosition facing: $N.
	
	marsRover command: 'f'.
	
	self assert: (marsRover isAt: initialPosition + (0@1)).! !
!MarsRoverTest methodsFor: 'tests' stamp: 'JEA 10/25/2020 18:37:57' prior: 50871548!
test05RoverMovesBackwardsWhenFacingNorth
	| marsRover |
	marsRover := MarsRover at: initialPosition facing: $N.
	
	marsRover command: 'b'.
	
	self assert: (marsRover isAt: initialPosition - (0@1)).! !

!testRun: #MarsRoverTest #test01NewRoverShouldBeAtInitializedPosition stamp: 'JEA 10/25/2020 18:38:02'!
PASSED!

!testRun: #MarsRoverTest #test02NewRoverShouldBeFacingInitializedDirection stamp: 'JEA 10/25/2020 18:38:02'!
PASSED!

!testRun: #MarsRoverTest #test03RoverCantBeInitializedWithInvalidDirection stamp: 'JEA 10/25/2020 18:38:02'!
PASSED!

!testRun: #MarsRoverTest #test04RoverMovesForwardWhenFacingNorth stamp: 'JEA 10/25/2020 18:38:02'!
PASSED!

!testRun: #MarsRoverTest #test05RoverMovesBackwardsWhenFacingNorth stamp: 'JEA 10/25/2020 18:38:02'!
FAILURE!

!testRun: #MarsRoverTest #test05RoverMovesBackwardsWhenFacingNorth stamp: 'JEA 10/25/2020 18:38:02'!
FAILURE!
!MarsRover methodsFor: 'movement' stamp: 'JEA 10/25/2020 18:40:46' prior: 50871500!
command: aCommandSequence

	(aCommandSequence = 'f')
		ifTrue: [position := position + (0@1)]
		ifFalse: [position := position - (0@1)].! !

!testRun: #MarsRoverTest #test01NewRoverShouldBeAtInitializedPosition stamp: 'JEA 10/25/2020 18:40:50'!
PASSED!

!testRun: #MarsRoverTest #test02NewRoverShouldBeFacingInitializedDirection stamp: 'JEA 10/25/2020 18:40:50'!
PASSED!

!testRun: #MarsRoverTest #test03RoverCantBeInitializedWithInvalidDirection stamp: 'JEA 10/25/2020 18:40:50'!
PASSED!

!testRun: #MarsRoverTest #test04RoverMovesForwardWhenFacingNorth stamp: 'JEA 10/25/2020 18:40:50'!
PASSED!

!testRun: #MarsRoverTest #test05RoverMovesBackwardsWhenFacingNorth stamp: 'JEA 10/25/2020 18:40:50'!
PASSED!
!MarsRoverTest methodsFor: 'tests' stamp: 'JEA 10/25/2020 18:42:37'!
test06RoverRotatesLeftWhenFacingNorth
	| marsRover |
	marsRover := MarsRover at: initialPosition facing: $N.
	
	marsRover command: 'l'.
	
	self assert: (marsRover isFacing: $W).! !

!testRun: #MarsRoverTest #test01NewRoverShouldBeAtInitializedPosition stamp: 'JEA 10/25/2020 18:43:33'!
PASSED!

!testRun: #MarsRoverTest #test02NewRoverShouldBeFacingInitializedDirection stamp: 'JEA 10/25/2020 18:43:33'!
PASSED!

!testRun: #MarsRoverTest #test03RoverCantBeInitializedWithInvalidDirection stamp: 'JEA 10/25/2020 18:43:33'!
PASSED!

!testRun: #MarsRoverTest #test04RoverMovesForwardWhenFacingNorth stamp: 'JEA 10/25/2020 18:43:33'!
PASSED!

!testRun: #MarsRoverTest #test05RoverMovesBackwardsWhenFacingNorth stamp: 'JEA 10/25/2020 18:43:33'!
PASSED!

!testRun: #MarsRoverTest #test06RoverRotatesLeftWhenFacingNorth stamp: 'JEA 10/25/2020 18:43:33'!
FAILURE!

!testRun: #MarsRoverTest #test06RoverRotatesLeftWhenFacingNorth stamp: 'JEA 10/25/2020 18:43:33'!
FAILURE!
!MarsRover methodsFor: 'movement' stamp: 'JEA 10/25/2020 18:44:59' prior: 50871597!
command: aCommandSequence

	(aCommandSequence = 'f')
		ifTrue: [position := position + (0@1)].
		
	(aCommandSequence = 'b')
		ifTrue: [position := position - (0@1)].
		
	(aCommandSequence = 'l')
		ifTrue: [orientation := $W].
		
	(aCommandSequence = 'l')
		ifTrue: [orientation := $E].! !
!MarsRover methodsFor: 'movement' stamp: 'JEA 10/25/2020 18:45:02' prior: 50871655!
command: aCommandSequence

	(aCommandSequence = 'f')
		ifTrue: [position := position + (0@1)].
		
	(aCommandSequence = 'b')
		ifTrue: [position := position - (0@1)].
		
	(aCommandSequence = 'l')
		ifTrue: [orientation := $W].
		
	(aCommandSequence = 'r')
		ifTrue: [orientation := $E].! !

!testRun: #MarsRoverTest #test01NewRoverShouldBeAtInitializedPosition stamp: 'JEA 10/25/2020 18:45:08'!
PASSED!

!testRun: #MarsRoverTest #test02NewRoverShouldBeFacingInitializedDirection stamp: 'JEA 10/25/2020 18:45:08'!
PASSED!

!testRun: #MarsRoverTest #test03RoverCantBeInitializedWithInvalidDirection stamp: 'JEA 10/25/2020 18:45:08'!
PASSED!

!testRun: #MarsRoverTest #test04RoverMovesForwardWhenFacingNorth stamp: 'JEA 10/25/2020 18:45:08'!
PASSED!

!testRun: #MarsRoverTest #test05RoverMovesBackwardsWhenFacingNorth stamp: 'JEA 10/25/2020 18:45:08'!
PASSED!

!testRun: #MarsRoverTest #test06RoverRotatesLeftWhenFacingNorth stamp: 'JEA 10/25/2020 18:45:08'!
PASSED!

!testRun: #MarsRoverTest #test01NewRoverShouldBeAtInitializedPosition stamp: 'JEA 10/25/2020 18:48:17'!
PASSED!

!testRun: #MarsRoverTest #test02NewRoverShouldBeFacingInitializedDirection stamp: 'JEA 10/25/2020 18:48:17'!
PASSED!

!testRun: #MarsRoverTest #test03RoverCantBeInitializedWithInvalidDirection stamp: 'JEA 10/25/2020 18:48:17'!
PASSED!

!testRun: #MarsRoverTest #test04RoverMovesForwardWhenFacingNorth stamp: 'JEA 10/25/2020 18:48:17'!
PASSED!

!testRun: #MarsRoverTest #test05RoverMovesBackwardsWhenFacingNorth stamp: 'JEA 10/25/2020 18:48:17'!
PASSED!

!testRun: #MarsRoverTest #test06RoverRotatesLeftWhenFacingNorth stamp: 'JEA 10/25/2020 18:48:17'!
PASSED!
!MarsRover methodsFor: 'movement' stamp: 'JEA 10/25/2020 18:48:31' prior: 50871667!
command: aCommandSequence

	(aCommandSequence = 'f')
		ifTrue: [position := position + (0@1)].
		
	(aCommandSequence = 'b')
		ifTrue: [position := position - (0@1)].
		
	(aCommandSequence = 'l')
		ifTrue: [orientation := $W].! !

!testRun: #MarsRoverTest #test01NewRoverShouldBeAtInitializedPosition stamp: 'JEA 10/25/2020 18:48:34'!
PASSED!

!testRun: #MarsRoverTest #test02NewRoverShouldBeFacingInitializedDirection stamp: 'JEA 10/25/2020 18:48:34'!
PASSED!

!testRun: #MarsRoverTest #test03RoverCantBeInitializedWithInvalidDirection stamp: 'JEA 10/25/2020 18:48:34'!
PASSED!

!testRun: #MarsRoverTest #test04RoverMovesForwardWhenFacingNorth stamp: 'JEA 10/25/2020 18:48:34'!
PASSED!

!testRun: #MarsRoverTest #test05RoverMovesBackwardsWhenFacingNorth stamp: 'JEA 10/25/2020 18:48:34'!
PASSED!

!testRun: #MarsRoverTest #test06RoverRotatesLeftWhenFacingNorth stamp: 'JEA 10/25/2020 18:48:34'!
PASSED!
!MarsRoverTest methodsFor: 'tests' stamp: 'JEA 10/25/2020 18:48:47'!
test07RoverRotatesRightWhenFacingNorth
	| marsRover |
	marsRover := MarsRover at: initialPosition facing: $N.
	
	marsRover command: 'r'.
	
	self assert: (marsRover isFacing: $E).! !

!testRun: #MarsRoverTest #test01NewRoverShouldBeAtInitializedPosition stamp: 'JEA 10/25/2020 18:48:48'!
PASSED!

!testRun: #MarsRoverTest #test02NewRoverShouldBeFacingInitializedDirection stamp: 'JEA 10/25/2020 18:48:48'!
PASSED!

!testRun: #MarsRoverTest #test03RoverCantBeInitializedWithInvalidDirection stamp: 'JEA 10/25/2020 18:48:48'!
PASSED!

!testRun: #MarsRoverTest #test04RoverMovesForwardWhenFacingNorth stamp: 'JEA 10/25/2020 18:48:48'!
PASSED!

!testRun: #MarsRoverTest #test05RoverMovesBackwardsWhenFacingNorth stamp: 'JEA 10/25/2020 18:48:48'!
PASSED!

!testRun: #MarsRoverTest #test06RoverRotatesLeftWhenFacingNorth stamp: 'JEA 10/25/2020 18:48:48'!
PASSED!

!testRun: #MarsRoverTest #test07RoverRotatesRightWhenFacingNorth stamp: 'JEA 10/25/2020 18:48:48'!
FAILURE!

!testRun: #MarsRoverTest #test07RoverRotatesRightWhenFacingNorth stamp: 'JEA 10/25/2020 18:48:48'!
FAILURE!
!MarsRover methodsFor: 'movement' stamp: 'JEA 10/25/2020 18:49:01' prior: 50871721!
command: aCommandSequence

	(aCommandSequence = 'f')
		ifTrue: [position := position + (0@1)].
		
	(aCommandSequence = 'b')
		ifTrue: [position := position - (0@1)].
		
	(aCommandSequence = 'l')
		ifTrue: [orientation := $W].

	(aCommandSequence = 'r')
		ifTrue: [orientation := $E].	! !

!testRun: #MarsRoverTest #test01NewRoverShouldBeAtInitializedPosition stamp: 'JEA 10/25/2020 18:49:18'!
PASSED!

!testRun: #MarsRoverTest #test02NewRoverShouldBeFacingInitializedDirection stamp: 'JEA 10/25/2020 18:49:18'!
PASSED!

!testRun: #MarsRoverTest #test03RoverCantBeInitializedWithInvalidDirection stamp: 'JEA 10/25/2020 18:49:18'!
PASSED!

!testRun: #MarsRoverTest #test04RoverMovesForwardWhenFacingNorth stamp: 'JEA 10/25/2020 18:49:18'!
PASSED!

!testRun: #MarsRoverTest #test05RoverMovesBackwardsWhenFacingNorth stamp: 'JEA 10/25/2020 18:49:18'!
PASSED!

!testRun: #MarsRoverTest #test06RoverRotatesLeftWhenFacingNorth stamp: 'JEA 10/25/2020 18:49:18'!
PASSED!

!testRun: #MarsRoverTest #test07RoverRotatesRightWhenFacingNorth stamp: 'JEA 10/25/2020 18:49:18'!
PASSED!
!MarsRoverTest methodsFor: 'tests' stamp: 'JEA 10/25/2020 18:49:58'!
test08RoverMovesForwardWhenFacingEast
	| marsRover |
	marsRover := MarsRover at: initialPosition facing: $E.
	
	marsRover command: 'f'.
	
	self assert: (marsRover isAt: initialPosition + (1@0)).! !

!testRun: #MarsRoverTest #test01NewRoverShouldBeAtInitializedPosition stamp: 'JEA 10/25/2020 18:50:03'!
PASSED!

!testRun: #MarsRoverTest #test02NewRoverShouldBeFacingInitializedDirection stamp: 'JEA 10/25/2020 18:50:03'!
PASSED!

!testRun: #MarsRoverTest #test03RoverCantBeInitializedWithInvalidDirection stamp: 'JEA 10/25/2020 18:50:03'!
PASSED!

!testRun: #MarsRoverTest #test04RoverMovesForwardWhenFacingNorth stamp: 'JEA 10/25/2020 18:50:03'!
PASSED!

!testRun: #MarsRoverTest #test05RoverMovesBackwardsWhenFacingNorth stamp: 'JEA 10/25/2020 18:50:03'!
PASSED!

!testRun: #MarsRoverTest #test06RoverRotatesLeftWhenFacingNorth stamp: 'JEA 10/25/2020 18:50:03'!
PASSED!

!testRun: #MarsRoverTest #test07RoverRotatesRightWhenFacingNorth stamp: 'JEA 10/25/2020 18:50:03'!
PASSED!

!testRun: #MarsRoverTest #test08RoverMovesForwardWhenFacingEast stamp: 'JEA 10/25/2020 18:50:03'!
FAILURE!

!testRun: #MarsRoverTest #test08RoverMovesForwardWhenFacingEast stamp: 'JEA 10/25/2020 18:50:03'!
FAILURE!
!MarsRover methodsFor: 'movement' stamp: 'JEA 10/25/2020 18:51:09' prior: 50871789!
command: aCommandSequence

	(aCommandSequence = 'f')
		ifTrue: [
			(orientation = $N) ifTrue: [position := position + (0@1)].
			(orientation = $E) ifTrue: [position := position + (1@0)]
		].
		
	(aCommandSequence = 'b')
		ifTrue: [position := position - (0@1)].
		
	(aCommandSequence = 'l')
		ifTrue: [orientation := $W].

	(aCommandSequence = 'r')
		ifTrue: [orientation := $E].	! !

!testRun: #MarsRoverTest #test01NewRoverShouldBeAtInitializedPosition stamp: 'JEA 10/25/2020 18:51:10'!
PASSED!

!testRun: #MarsRoverTest #test02NewRoverShouldBeFacingInitializedDirection stamp: 'JEA 10/25/2020 18:51:10'!
PASSED!

!testRun: #MarsRoverTest #test03RoverCantBeInitializedWithInvalidDirection stamp: 'JEA 10/25/2020 18:51:10'!
PASSED!

!testRun: #MarsRoverTest #test04RoverMovesForwardWhenFacingNorth stamp: 'JEA 10/25/2020 18:51:10'!
PASSED!

!testRun: #MarsRoverTest #test05RoverMovesBackwardsWhenFacingNorth stamp: 'JEA 10/25/2020 18:51:10'!
PASSED!

!testRun: #MarsRoverTest #test06RoverRotatesLeftWhenFacingNorth stamp: 'JEA 10/25/2020 18:51:10'!
PASSED!

!testRun: #MarsRoverTest #test07RoverRotatesRightWhenFacingNorth stamp: 'JEA 10/25/2020 18:51:10'!
PASSED!

!testRun: #MarsRoverTest #test08RoverMovesForwardWhenFacingEast stamp: 'JEA 10/25/2020 18:51:10'!
PASSED!
!MarsRoverTest methodsFor: 'tests' stamp: 'JEA 10/25/2020 18:51:31'!
test09RoverMovesBackwardsWhenFacingEast
	| marsRover |
	marsRover := MarsRover at: initialPosition facing: $E.
	
	marsRover command: 'b'.
	
	self assert: (marsRover isAt: initialPosition - (1@0)).! !

!testRun: #MarsRoverTest #test01NewRoverShouldBeAtInitializedPosition stamp: 'JEA 10/25/2020 18:51:32'!
PASSED!

!testRun: #MarsRoverTest #test02NewRoverShouldBeFacingInitializedDirection stamp: 'JEA 10/25/2020 18:51:32'!
PASSED!

!testRun: #MarsRoverTest #test03RoverCantBeInitializedWithInvalidDirection stamp: 'JEA 10/25/2020 18:51:32'!
PASSED!

!testRun: #MarsRoverTest #test04RoverMovesForwardWhenFacingNorth stamp: 'JEA 10/25/2020 18:51:32'!
PASSED!

!testRun: #MarsRoverTest #test05RoverMovesBackwardsWhenFacingNorth stamp: 'JEA 10/25/2020 18:51:32'!
PASSED!

!testRun: #MarsRoverTest #test06RoverRotatesLeftWhenFacingNorth stamp: 'JEA 10/25/2020 18:51:32'!
PASSED!

!testRun: #MarsRoverTest #test07RoverRotatesRightWhenFacingNorth stamp: 'JEA 10/25/2020 18:51:32'!
PASSED!

!testRun: #MarsRoverTest #test08RoverMovesForwardWhenFacingEast stamp: 'JEA 10/25/2020 18:51:32'!
PASSED!

!testRun: #MarsRoverTest #test09RoverMovesBackwardsWhenFacingEast stamp: 'JEA 10/25/2020 18:51:32'!
FAILURE!

!testRun: #MarsRoverTest #test09RoverMovesBackwardsWhenFacingEast stamp: 'JEA 10/25/2020 18:51:32'!
FAILURE!
!MarsRover methodsFor: 'movement' stamp: 'JEA 10/25/2020 18:51:54' prior: 50871865!
command: aCommandSequence

	(aCommandSequence = 'f')
		ifTrue: [
			(orientation = $N) ifTrue: [position := position + (0@1)].
			(orientation = $E) ifTrue: [position := position + (1@0)]
		].
		
	(aCommandSequence = 'b')
		ifTrue: [
			(orientation = $N) ifTrue: [position := position - (0@1)].
			(orientation = $E) ifTrue: [position := position - (1@0)]
		].
		
	(aCommandSequence = 'l')
		ifTrue: [orientation := $W].

	(aCommandSequence = 'r')
		ifTrue: [orientation := $E].	! !

!testRun: #MarsRoverTest #test01NewRoverShouldBeAtInitializedPosition stamp: 'JEA 10/25/2020 18:51:56'!
PASSED!

!testRun: #MarsRoverTest #test02NewRoverShouldBeFacingInitializedDirection stamp: 'JEA 10/25/2020 18:51:56'!
PASSED!

!testRun: #MarsRoverTest #test03RoverCantBeInitializedWithInvalidDirection stamp: 'JEA 10/25/2020 18:51:56'!
PASSED!

!testRun: #MarsRoverTest #test04RoverMovesForwardWhenFacingNorth stamp: 'JEA 10/25/2020 18:51:56'!
PASSED!

!testRun: #MarsRoverTest #test05RoverMovesBackwardsWhenFacingNorth stamp: 'JEA 10/25/2020 18:51:56'!
PASSED!

!testRun: #MarsRoverTest #test06RoverRotatesLeftWhenFacingNorth stamp: 'JEA 10/25/2020 18:51:56'!
PASSED!

!testRun: #MarsRoverTest #test07RoverRotatesRightWhenFacingNorth stamp: 'JEA 10/25/2020 18:51:56'!
PASSED!

!testRun: #MarsRoverTest #test08RoverMovesForwardWhenFacingEast stamp: 'JEA 10/25/2020 18:51:56'!
PASSED!

!testRun: #MarsRoverTest #test09RoverMovesBackwardsWhenFacingEast stamp: 'JEA 10/25/2020 18:51:56'!
PASSED!
!MarsRoverTest methodsFor: 'tests' stamp: 'JEA 10/25/2020 18:53:26'!
test10RoverRotatesLeftWhenFacingEast
	| marsRover |
	marsRover := MarsRover at: initialPosition facing: $E.
	
	marsRover command: 'l'.
	
	self assert: (marsRover isFacing: $S).! !

!testRun: #MarsRoverTest #test01NewRoverShouldBeAtInitializedPosition stamp: 'JEA 10/25/2020 18:53:27'!
PASSED!

!testRun: #MarsRoverTest #test02NewRoverShouldBeFacingInitializedDirection stamp: 'JEA 10/25/2020 18:53:27'!
PASSED!

!testRun: #MarsRoverTest #test03RoverCantBeInitializedWithInvalidDirection stamp: 'JEA 10/25/2020 18:53:27'!
PASSED!

!testRun: #MarsRoverTest #test04RoverMovesForwardWhenFacingNorth stamp: 'JEA 10/25/2020 18:53:27'!
PASSED!

!testRun: #MarsRoverTest #test05RoverMovesBackwardsWhenFacingNorth stamp: 'JEA 10/25/2020 18:53:27'!
PASSED!

!testRun: #MarsRoverTest #test06RoverRotatesLeftWhenFacingNorth stamp: 'JEA 10/25/2020 18:53:27'!
PASSED!

!testRun: #MarsRoverTest #test07RoverRotatesRightWhenFacingNorth stamp: 'JEA 10/25/2020 18:53:27'!
PASSED!

!testRun: #MarsRoverTest #test08RoverMovesForwardWhenFacingEast stamp: 'JEA 10/25/2020 18:53:27'!
PASSED!

!testRun: #MarsRoverTest #test09RoverMovesBackwardsWhenFacingEast stamp: 'JEA 10/25/2020 18:53:27'!
PASSED!

!testRun: #MarsRoverTest #test10RoverRotatesLeftWhenFacingEast stamp: 'JEA 10/25/2020 18:53:27'!
FAILURE!

!testRun: #MarsRoverTest #test10RoverRotatesLeftWhenFacingEast stamp: 'JEA 10/25/2020 18:53:27'!
FAILURE!
!MarsRover methodsFor: 'movement' stamp: 'JEA 10/25/2020 18:54:39' prior: 50871951!
command: aCommandSequence

	(aCommandSequence = 'f')
		ifTrue: [
			(orientation = $N) ifTrue: [position := position + (0@1)].
			(orientation = $E) ifTrue: [position := position + (1@0)]
		].
		
	(aCommandSequence = 'b')
		ifTrue: [
			(orientation = $N) ifTrue: [position := position - (0@1)].
			(orientation = $E) ifTrue: [position := position - (1@0)]
		].
		
	(aCommandSequence = 'l')
		ifTrue: [
			(orientation = $N) ifTrue: [orientation := $W].
			(orientation = $E) ifTrue: [orientation := $S].
		].

	(aCommandSequence = 'r')
		ifTrue: [orientation := $E].	! !

!testRun: #MarsRoverTest #test01NewRoverShouldBeAtInitializedPosition stamp: 'JEA 10/25/2020 18:54:41'!
PASSED!

!testRun: #MarsRoverTest #test02NewRoverShouldBeFacingInitializedDirection stamp: 'JEA 10/25/2020 18:54:41'!
PASSED!

!testRun: #MarsRoverTest #test03RoverCantBeInitializedWithInvalidDirection stamp: 'JEA 10/25/2020 18:54:41'!
PASSED!

!testRun: #MarsRoverTest #test04RoverMovesForwardWhenFacingNorth stamp: 'JEA 10/25/2020 18:54:41'!
PASSED!

!testRun: #MarsRoverTest #test05RoverMovesBackwardsWhenFacingNorth stamp: 'JEA 10/25/2020 18:54:41'!
PASSED!

!testRun: #MarsRoverTest #test06RoverRotatesLeftWhenFacingNorth stamp: 'JEA 10/25/2020 18:54:41'!
PASSED!

!testRun: #MarsRoverTest #test07RoverRotatesRightWhenFacingNorth stamp: 'JEA 10/25/2020 18:54:41'!
PASSED!

!testRun: #MarsRoverTest #test08RoverMovesForwardWhenFacingEast stamp: 'JEA 10/25/2020 18:54:41'!
PASSED!

!testRun: #MarsRoverTest #test09RoverMovesBackwardsWhenFacingEast stamp: 'JEA 10/25/2020 18:54:41'!
PASSED!

!testRun: #MarsRoverTest #test10RoverRotatesLeftWhenFacingEast stamp: 'JEA 10/25/2020 18:54:41'!
PASSED!
!MarsRoverTest methodsFor: 'tests' stamp: 'JEA 10/25/2020 18:54:57'!
test11RoverRotatesRightWhenFacingEast
	| marsRover |
	marsRover := MarsRover at: initialPosition facing: $E.
	
	marsRover command: 'r'.
	
	self assert: (marsRover isFacing: $N).! !

!testRun: #MarsRoverTest #test01NewRoverShouldBeAtInitializedPosition stamp: 'JEA 10/25/2020 18:54:59'!
PASSED!

!testRun: #MarsRoverTest #test02NewRoverShouldBeFacingInitializedDirection stamp: 'JEA 10/25/2020 18:54:59'!
PASSED!

!testRun: #MarsRoverTest #test03RoverCantBeInitializedWithInvalidDirection stamp: 'JEA 10/25/2020 18:54:59'!
PASSED!

!testRun: #MarsRoverTest #test04RoverMovesForwardWhenFacingNorth stamp: 'JEA 10/25/2020 18:54:59'!
PASSED!

!testRun: #MarsRoverTest #test05RoverMovesBackwardsWhenFacingNorth stamp: 'JEA 10/25/2020 18:54:59'!
PASSED!

!testRun: #MarsRoverTest #test06RoverRotatesLeftWhenFacingNorth stamp: 'JEA 10/25/2020 18:54:59'!
PASSED!

!testRun: #MarsRoverTest #test07RoverRotatesRightWhenFacingNorth stamp: 'JEA 10/25/2020 18:54:59'!
PASSED!

!testRun: #MarsRoverTest #test08RoverMovesForwardWhenFacingEast stamp: 'JEA 10/25/2020 18:54:59'!
PASSED!

!testRun: #MarsRoverTest #test09RoverMovesBackwardsWhenFacingEast stamp: 'JEA 10/25/2020 18:54:59'!
PASSED!

!testRun: #MarsRoverTest #test10RoverRotatesLeftWhenFacingEast stamp: 'JEA 10/25/2020 18:54:59'!
PASSED!

!testRun: #MarsRoverTest #test11RoverRotatesRightWhenFacingEast stamp: 'JEA 10/25/2020 18:54:59'!
FAILURE!

!testRun: #MarsRoverTest #test11RoverRotatesRightWhenFacingEast stamp: 'JEA 10/25/2020 18:54:59'!
FAILURE!
!MarsRover methodsFor: 'movement' stamp: 'JEA 10/25/2020 18:55:20' prior: 50872047!
command: aCommandSequence

	(aCommandSequence = 'f')
		ifTrue: [
			(orientation = $N) ifTrue: [position := position + (0@1)].
			(orientation = $E) ifTrue: [position := position + (1@0)]
		].
		
	(aCommandSequence = 'b')
		ifTrue: [
			(orientation = $N) ifTrue: [position := position - (0@1)].
			(orientation = $E) ifTrue: [position := position - (1@0)]
		].
		
	(aCommandSequence = 'l')
		ifTrue: [
			(orientation = $N) ifTrue: [orientation := $W].
			(orientation = $E) ifTrue: [orientation := $S].
		].

	(aCommandSequence = 'r')
		ifTrue: [
			(orientation = $N) ifTrue: [orientation := $E].
			(orientation = $E) ifTrue: [orientation := $N].
		].	! !

!testRun: #MarsRoverTest #test01NewRoverShouldBeAtInitializedPosition stamp: 'JEA 10/25/2020 18:55:22'!
PASSED!

!testRun: #MarsRoverTest #test02NewRoverShouldBeFacingInitializedDirection stamp: 'JEA 10/25/2020 18:55:22'!
PASSED!

!testRun: #MarsRoverTest #test03RoverCantBeInitializedWithInvalidDirection stamp: 'JEA 10/25/2020 18:55:22'!
PASSED!

!testRun: #MarsRoverTest #test04RoverMovesForwardWhenFacingNorth stamp: 'JEA 10/25/2020 18:55:22'!
PASSED!

!testRun: #MarsRoverTest #test05RoverMovesBackwardsWhenFacingNorth stamp: 'JEA 10/25/2020 18:55:22'!
PASSED!

!testRun: #MarsRoverTest #test06RoverRotatesLeftWhenFacingNorth stamp: 'JEA 10/25/2020 18:55:22'!
PASSED!

!testRun: #MarsRoverTest #test07RoverRotatesRightWhenFacingNorth stamp: 'JEA 10/25/2020 18:55:22'!
FAILURE!

!testRun: #MarsRoverTest #test08RoverMovesForwardWhenFacingEast stamp: 'JEA 10/25/2020 18:55:22'!
PASSED!

!testRun: #MarsRoverTest #test09RoverMovesBackwardsWhenFacingEast stamp: 'JEA 10/25/2020 18:55:22'!
PASSED!

!testRun: #MarsRoverTest #test10RoverRotatesLeftWhenFacingEast stamp: 'JEA 10/25/2020 18:55:22'!
PASSED!

!testRun: #MarsRoverTest #test11RoverRotatesRightWhenFacingEast stamp: 'JEA 10/25/2020 18:55:22'!
PASSED!

!testRun: #MarsRoverTest #test07RoverRotatesRightWhenFacingNorth stamp: 'JEA 10/25/2020 18:55:22'!
FAILURE!
!MarsRoverTest methodsFor: 'tests' stamp: 'JEA 10/25/2020 18:57:56'!
test12RoverMovesForwardWhenFacingSouth
	| marsRover |
	marsRover := MarsRover at: initialPosition facing: $S.
	
	marsRover command: 'f'.
	
	self assert: (marsRover isAt: initialPosition - (0@1)).! !

!testRun: #MarsRoverTest #test01NewRoverShouldBeAtInitializedPosition stamp: 'JEA 10/25/2020 18:57:58'!
PASSED!

!testRun: #MarsRoverTest #test02NewRoverShouldBeFacingInitializedDirection stamp: 'JEA 10/25/2020 18:57:58'!
PASSED!

!testRun: #MarsRoverTest #test03RoverCantBeInitializedWithInvalidDirection stamp: 'JEA 10/25/2020 18:57:58'!
PASSED!

!testRun: #MarsRoverTest #test04RoverMovesForwardWhenFacingNorth stamp: 'JEA 10/25/2020 18:57:58'!
PASSED!

!testRun: #MarsRoverTest #test05RoverMovesBackwardsWhenFacingNorth stamp: 'JEA 10/25/2020 18:57:58'!
PASSED!

!testRun: #MarsRoverTest #test06RoverRotatesLeftWhenFacingNorth stamp: 'JEA 10/25/2020 18:57:58'!
PASSED!

!testRun: #MarsRoverTest #test07RoverRotatesRightWhenFacingNorth stamp: 'JEA 10/25/2020 18:57:58'!
FAILURE!

!testRun: #MarsRoverTest #test08RoverMovesForwardWhenFacingEast stamp: 'JEA 10/25/2020 18:57:58'!
PASSED!

!testRun: #MarsRoverTest #test09RoverMovesBackwardsWhenFacingEast stamp: 'JEA 10/25/2020 18:57:58'!
PASSED!

!testRun: #MarsRoverTest #test10RoverRotatesLeftWhenFacingEast stamp: 'JEA 10/25/2020 18:57:58'!
PASSED!

!testRun: #MarsRoverTest #test11RoverRotatesRightWhenFacingEast stamp: 'JEA 10/25/2020 18:57:58'!
PASSED!

!testRun: #MarsRoverTest #test12RoverMovesForwardWhenFacingSouth stamp: 'JEA 10/25/2020 18:57:58'!
FAILURE!
!MarsRover methodsFor: 'movement' stamp: 'JEA 10/25/2020 18:58:54' prior: 50872152!
command: aCommandSequence

	(aCommandSequence = 'f')
		ifTrue: [
			(orientation = $N) ifTrue: [position := position + (0@1)].
			(orientation = $E) ifTrue: [position := position + (1@0)]
		].
		
	(aCommandSequence = 'b')
		ifTrue: [
			(orientation = $N) ifTrue: [position := position - (0@1)].
			(orientation = $E) ifTrue: [position := position - (1@0)]
		].
		
	(aCommandSequence = 'l')
		ifTrue: [
			(orientation = $N) ifTrue: [orientation := $W].
			(orientation = $E) ifTrue: [orientation := $N].
		].

	(aCommandSequence = 'r')
		ifTrue: [
			(orientation = $N) ifTrue: [orientation := $E].
			(orientation = $E) ifTrue: [orientation := $S].
		].	! !
!MarsRoverTest methodsFor: 'tests' stamp: 'JEA 10/25/2020 18:59:07' prior: 50872000!
test10RoverRotatesLeftWhenFacingEast
	| marsRover |
	marsRover := MarsRover at: initialPosition facing: $E.
	
	marsRover command: 'l'.
	
	self assert: (marsRover isFacing: $N).! !
!MarsRoverTest methodsFor: 'tests' stamp: 'JEA 10/25/2020 18:59:11' prior: 50872102!
test11RoverRotatesRightWhenFacingEast
	| marsRover |
	marsRover := MarsRover at: initialPosition facing: $E.
	
	marsRover command: 'r'.
	
	self assert: (marsRover isFacing: $S).! !

!testRun: #MarsRoverTest #test01NewRoverShouldBeAtInitializedPosition stamp: 'JEA 10/25/2020 18:59:14'!
PASSED!

!testRun: #MarsRoverTest #test02NewRoverShouldBeFacingInitializedDirection stamp: 'JEA 10/25/2020 18:59:14'!
PASSED!

!testRun: #MarsRoverTest #test03RoverCantBeInitializedWithInvalidDirection stamp: 'JEA 10/25/2020 18:59:14'!
PASSED!

!testRun: #MarsRoverTest #test04RoverMovesForwardWhenFacingNorth stamp: 'JEA 10/25/2020 18:59:14'!
PASSED!

!testRun: #MarsRoverTest #test05RoverMovesBackwardsWhenFacingNorth stamp: 'JEA 10/25/2020 18:59:14'!
PASSED!

!testRun: #MarsRoverTest #test06RoverRotatesLeftWhenFacingNorth stamp: 'JEA 10/25/2020 18:59:14'!
PASSED!

!testRun: #MarsRoverTest #test07RoverRotatesRightWhenFacingNorth stamp: 'JEA 10/25/2020 18:59:14'!
FAILURE!

!testRun: #MarsRoverTest #test08RoverMovesForwardWhenFacingEast stamp: 'JEA 10/25/2020 18:59:14'!
PASSED!

!testRun: #MarsRoverTest #test09RoverMovesBackwardsWhenFacingEast stamp: 'JEA 10/25/2020 18:59:14'!
PASSED!

!testRun: #MarsRoverTest #test10RoverRotatesLeftWhenFacingEast stamp: 'JEA 10/25/2020 18:59:14'!
PASSED!

!testRun: #MarsRoverTest #test11RoverRotatesRightWhenFacingEast stamp: 'JEA 10/25/2020 18:59:14'!
PASSED!

!testRun: #MarsRoverTest #test12RoverMovesForwardWhenFacingSouth stamp: 'JEA 10/25/2020 18:59:14'!
FAILURE!
!MarsRover methodsFor: 'movement' stamp: 'JEA 10/25/2020 19:00:12' prior: 50872268!
command: aCommandSequence

	(aCommandSequence = 'f')
		ifTrue: [
			(orientation = $N) ifTrue: [position := position + (0@1). ^self].
			(orientation = $E) ifTrue: [position := position + (1@0). ^self]
		].
		
	(aCommandSequence = 'b')
		ifTrue: [
			(orientation = $N) ifTrue: [position := position - (0@1). ^self].
			(orientation = $E) ifTrue: [position := position - (1@0). ^self]
		].
		
	(aCommandSequence = 'l')
		ifTrue: [
			(orientation = $N) ifTrue: [orientation := $W. ^self].
			(orientation = $E) ifTrue: [orientation := $N. ^self].
		].

	(aCommandSequence = 'r')
		ifTrue: [
			(orientation = $N) ifTrue: [orientation := $E. ^self].
			(orientation = $E) ifTrue: [orientation := $S. ^self].
		].	! !

!testRun: #MarsRoverTest #test01NewRoverShouldBeAtInitializedPosition stamp: 'JEA 10/25/2020 19:00:14'!
PASSED!

!testRun: #MarsRoverTest #test02NewRoverShouldBeFacingInitializedDirection stamp: 'JEA 10/25/2020 19:00:14'!
PASSED!

!testRun: #MarsRoverTest #test03RoverCantBeInitializedWithInvalidDirection stamp: 'JEA 10/25/2020 19:00:14'!
PASSED!

!testRun: #MarsRoverTest #test04RoverMovesForwardWhenFacingNorth stamp: 'JEA 10/25/2020 19:00:14'!
PASSED!

!testRun: #MarsRoverTest #test05RoverMovesBackwardsWhenFacingNorth stamp: 'JEA 10/25/2020 19:00:14'!
PASSED!

!testRun: #MarsRoverTest #test06RoverRotatesLeftWhenFacingNorth stamp: 'JEA 10/25/2020 19:00:14'!
PASSED!

!testRun: #MarsRoverTest #test07RoverRotatesRightWhenFacingNorth stamp: 'JEA 10/25/2020 19:00:14'!
PASSED!

!testRun: #MarsRoverTest #test08RoverMovesForwardWhenFacingEast stamp: 'JEA 10/25/2020 19:00:14'!
PASSED!

!testRun: #MarsRoverTest #test09RoverMovesBackwardsWhenFacingEast stamp: 'JEA 10/25/2020 19:00:14'!
PASSED!

!testRun: #MarsRoverTest #test10RoverRotatesLeftWhenFacingEast stamp: 'JEA 10/25/2020 19:00:14'!
PASSED!

!testRun: #MarsRoverTest #test11RoverRotatesRightWhenFacingEast stamp: 'JEA 10/25/2020 19:00:14'!
PASSED!

!testRun: #MarsRoverTest #test12RoverMovesForwardWhenFacingSouth stamp: 'JEA 10/25/2020 19:00:14'!
FAILURE!

!testRun: #MarsRoverTest #test12RoverMovesForwardWhenFacingSouth stamp: 'JEA 10/25/2020 19:00:14'!
FAILURE!
!MarsRover methodsFor: 'movement' stamp: 'JEA 10/25/2020 19:00:41' prior: 50872351!
command: aCommandSequence

	(aCommandSequence = 'f')
		ifTrue: [
			(orientation = $N) ifTrue: [position := position + (0@1). ^self].
			(orientation = $E) ifTrue: [position := position + (1@0). ^self].
			(orientation = $S) ifTrue: [position := position - (0@1). ^self].
		].
		
	(aCommandSequence = 'b')
		ifTrue: [
			(orientation = $N) ifTrue: [position := position - (0@1). ^self].
			(orientation = $E) ifTrue: [position := position - (1@0). ^self].
		].
		
	(aCommandSequence = 'l')
		ifTrue: [
			(orientation = $N) ifTrue: [orientation := $W. ^self].
			(orientation = $E) ifTrue: [orientation := $N. ^self].
		].

	(aCommandSequence = 'r')
		ifTrue: [
			(orientation = $N) ifTrue: [orientation := $E. ^self].
			(orientation = $E) ifTrue: [orientation := $S. ^self].
		].	! !

!testRun: #MarsRoverTest #test01NewRoverShouldBeAtInitializedPosition stamp: 'JEA 10/25/2020 19:00:43'!
PASSED!

!testRun: #MarsRoverTest #test02NewRoverShouldBeFacingInitializedDirection stamp: 'JEA 10/25/2020 19:00:43'!
PASSED!

!testRun: #MarsRoverTest #test03RoverCantBeInitializedWithInvalidDirection stamp: 'JEA 10/25/2020 19:00:43'!
PASSED!

!testRun: #MarsRoverTest #test04RoverMovesForwardWhenFacingNorth stamp: 'JEA 10/25/2020 19:00:43'!
PASSED!

!testRun: #MarsRoverTest #test05RoverMovesBackwardsWhenFacingNorth stamp: 'JEA 10/25/2020 19:00:43'!
PASSED!

!testRun: #MarsRoverTest #test06RoverRotatesLeftWhenFacingNorth stamp: 'JEA 10/25/2020 19:00:43'!
PASSED!

!testRun: #MarsRoverTest #test07RoverRotatesRightWhenFacingNorth stamp: 'JEA 10/25/2020 19:00:43'!
PASSED!

!testRun: #MarsRoverTest #test08RoverMovesForwardWhenFacingEast stamp: 'JEA 10/25/2020 19:00:43'!
PASSED!

!testRun: #MarsRoverTest #test09RoverMovesBackwardsWhenFacingEast stamp: 'JEA 10/25/2020 19:00:43'!
PASSED!

!testRun: #MarsRoverTest #test10RoverRotatesLeftWhenFacingEast stamp: 'JEA 10/25/2020 19:00:43'!
PASSED!

!testRun: #MarsRoverTest #test11RoverRotatesRightWhenFacingEast stamp: 'JEA 10/25/2020 19:00:43'!
PASSED!

!testRun: #MarsRoverTest #test12RoverMovesForwardWhenFacingSouth stamp: 'JEA 10/25/2020 19:00:43'!
PASSED!
!MarsRoverTest methodsFor: 'tests' stamp: 'JEA 10/25/2020 19:00:57'!
test13RoverMovesBackwardsWhenFacingSouth
	| marsRover |
	marsRover := MarsRover at: initialPosition facing: $S.
	
	marsRover command: 'b'.
	
	self assert: (marsRover isAt: initialPosition + (0@1)).! !

!testRun: #MarsRoverTest #test01NewRoverShouldBeAtInitializedPosition stamp: 'JEA 10/25/2020 19:01:12'!
PASSED!

!testRun: #MarsRoverTest #test02NewRoverShouldBeFacingInitializedDirection stamp: 'JEA 10/25/2020 19:01:12'!
PASSED!

!testRun: #MarsRoverTest #test03RoverCantBeInitializedWithInvalidDirection stamp: 'JEA 10/25/2020 19:01:12'!
PASSED!

!testRun: #MarsRoverTest #test04RoverMovesForwardWhenFacingNorth stamp: 'JEA 10/25/2020 19:01:12'!
PASSED!

!testRun: #MarsRoverTest #test05RoverMovesBackwardsWhenFacingNorth stamp: 'JEA 10/25/2020 19:01:12'!
PASSED!

!testRun: #MarsRoverTest #test06RoverRotatesLeftWhenFacingNorth stamp: 'JEA 10/25/2020 19:01:12'!
PASSED!

!testRun: #MarsRoverTest #test07RoverRotatesRightWhenFacingNorth stamp: 'JEA 10/25/2020 19:01:12'!
PASSED!

!testRun: #MarsRoverTest #test08RoverMovesForwardWhenFacingEast stamp: 'JEA 10/25/2020 19:01:12'!
PASSED!

!testRun: #MarsRoverTest #test09RoverMovesBackwardsWhenFacingEast stamp: 'JEA 10/25/2020 19:01:12'!
PASSED!

!testRun: #MarsRoverTest #test10RoverRotatesLeftWhenFacingEast stamp: 'JEA 10/25/2020 19:01:12'!
PASSED!

!testRun: #MarsRoverTest #test11RoverRotatesRightWhenFacingEast stamp: 'JEA 10/25/2020 19:01:12'!
PASSED!

!testRun: #MarsRoverTest #test12RoverMovesForwardWhenFacingSouth stamp: 'JEA 10/25/2020 19:01:12'!
PASSED!

!testRun: #MarsRoverTest #test13RoverMovesBackwardsWhenFacingSouth stamp: 'JEA 10/25/2020 19:01:12'!
FAILURE!

!testRun: #MarsRoverTest #test13RoverMovesBackwardsWhenFacingSouth stamp: 'JEA 10/25/2020 19:01:12'!
FAILURE!
!MarsRover methodsFor: 'movement' stamp: 'JEA 10/25/2020 19:01:21' prior: 50872421!
command: aCommandSequence

	(aCommandSequence = 'f')
		ifTrue: [
			(orientation = $N) ifTrue: [position := position + (0@1). ^self].
			(orientation = $E) ifTrue: [position := position + (1@0). ^self].
			(orientation = $S) ifTrue: [position := position - (0@1). ^self].
		].
		
	(aCommandSequence = 'b')
		ifTrue: [
			(orientation = $N) ifTrue: [position := position - (0@1). ^self].
			(orientation = $E) ifTrue: [position := position - (1@0). ^self].
			(orientation = $S) ifTrue: [position := position + (0@1). ^self].
		].
		
	(aCommandSequence = 'l')
		ifTrue: [
			(orientation = $N) ifTrue: [orientation := $W. ^self].
			(orientation = $E) ifTrue: [orientation := $N. ^self].
		].

	(aCommandSequence = 'r')
		ifTrue: [
			(orientation = $N) ifTrue: [orientation := $E. ^self].
			(orientation = $E) ifTrue: [orientation := $S. ^self].
		].	! !

!testRun: #MarsRoverTest #test01NewRoverShouldBeAtInitializedPosition stamp: 'JEA 10/25/2020 19:01:27'!
PASSED!

!testRun: #MarsRoverTest #test02NewRoverShouldBeFacingInitializedDirection stamp: 'JEA 10/25/2020 19:01:27'!
PASSED!

!testRun: #MarsRoverTest #test03RoverCantBeInitializedWithInvalidDirection stamp: 'JEA 10/25/2020 19:01:27'!
PASSED!

!testRun: #MarsRoverTest #test04RoverMovesForwardWhenFacingNorth stamp: 'JEA 10/25/2020 19:01:27'!
PASSED!

!testRun: #MarsRoverTest #test05RoverMovesBackwardsWhenFacingNorth stamp: 'JEA 10/25/2020 19:01:27'!
PASSED!

!testRun: #MarsRoverTest #test06RoverRotatesLeftWhenFacingNorth stamp: 'JEA 10/25/2020 19:01:28'!
PASSED!

!testRun: #MarsRoverTest #test07RoverRotatesRightWhenFacingNorth stamp: 'JEA 10/25/2020 19:01:28'!
PASSED!

!testRun: #MarsRoverTest #test08RoverMovesForwardWhenFacingEast stamp: 'JEA 10/25/2020 19:01:28'!
PASSED!

!testRun: #MarsRoverTest #test09RoverMovesBackwardsWhenFacingEast stamp: 'JEA 10/25/2020 19:01:28'!
PASSED!

!testRun: #MarsRoverTest #test10RoverRotatesLeftWhenFacingEast stamp: 'JEA 10/25/2020 19:01:28'!
PASSED!

!testRun: #MarsRoverTest #test11RoverRotatesRightWhenFacingEast stamp: 'JEA 10/25/2020 19:01:28'!
PASSED!

!testRun: #MarsRoverTest #test12RoverMovesForwardWhenFacingSouth stamp: 'JEA 10/25/2020 19:01:28'!
PASSED!

!testRun: #MarsRoverTest #test13RoverMovesBackwardsWhenFacingSouth stamp: 'JEA 10/25/2020 19:01:28'!
PASSED!
!MarsRoverTest methodsFor: 'tests' stamp: 'JEA 10/25/2020 19:02:01'!
test14RoverRotatesLeftWhenFacingSouth
	| marsRover |
	marsRover := MarsRover at: initialPosition facing: $S.
	
	marsRover command: 'l'.
	
	self assert: (marsRover isFacing: $E).! !

!testRun: #MarsRoverTest #test01NewRoverShouldBeAtInitializedPosition stamp: 'JEA 10/25/2020 19:02:02'!
PASSED!

!testRun: #MarsRoverTest #test02NewRoverShouldBeFacingInitializedDirection stamp: 'JEA 10/25/2020 19:02:02'!
PASSED!

!testRun: #MarsRoverTest #test03RoverCantBeInitializedWithInvalidDirection stamp: 'JEA 10/25/2020 19:02:02'!
PASSED!

!testRun: #MarsRoverTest #test04RoverMovesForwardWhenFacingNorth stamp: 'JEA 10/25/2020 19:02:02'!
PASSED!

!testRun: #MarsRoverTest #test05RoverMovesBackwardsWhenFacingNorth stamp: 'JEA 10/25/2020 19:02:02'!
PASSED!

!testRun: #MarsRoverTest #test06RoverRotatesLeftWhenFacingNorth stamp: 'JEA 10/25/2020 19:02:02'!
PASSED!

!testRun: #MarsRoverTest #test07RoverRotatesRightWhenFacingNorth stamp: 'JEA 10/25/2020 19:02:02'!
PASSED!

!testRun: #MarsRoverTest #test08RoverMovesForwardWhenFacingEast stamp: 'JEA 10/25/2020 19:02:02'!
PASSED!

!testRun: #MarsRoverTest #test09RoverMovesBackwardsWhenFacingEast stamp: 'JEA 10/25/2020 19:02:02'!
PASSED!

!testRun: #MarsRoverTest #test10RoverRotatesLeftWhenFacingEast stamp: 'JEA 10/25/2020 19:02:02'!
PASSED!

!testRun: #MarsRoverTest #test11RoverRotatesRightWhenFacingEast stamp: 'JEA 10/25/2020 19:02:02'!
PASSED!

!testRun: #MarsRoverTest #test12RoverMovesForwardWhenFacingSouth stamp: 'JEA 10/25/2020 19:02:02'!
PASSED!

!testRun: #MarsRoverTest #test13RoverMovesBackwardsWhenFacingSouth stamp: 'JEA 10/25/2020 19:02:02'!
PASSED!

!testRun: #MarsRoverTest #test14RoverRotatesLeftWhenFacingSouth stamp: 'JEA 10/25/2020 19:02:02'!
FAILURE!

!testRun: #MarsRoverTest #test14RoverRotatesLeftWhenFacingSouth stamp: 'JEA 10/25/2020 19:02:02'!
FAILURE!
!MarsRover methodsFor: 'movement' stamp: 'JEA 10/25/2020 19:02:18' prior: 50872547!
command: aCommandSequence

	(aCommandSequence = 'f')
		ifTrue: [
			(orientation = $N) ifTrue: [position := position + (0@1). ^self].
			(orientation = $E) ifTrue: [position := position + (1@0). ^self].
			(orientation = $S) ifTrue: [position := position - (0@1). ^self].
		].
		
	(aCommandSequence = 'b')
		ifTrue: [
			(orientation = $N) ifTrue: [position := position - (0@1). ^self].
			(orientation = $E) ifTrue: [position := position - (1@0). ^self].
			(orientation = $S) ifTrue: [position := position + (0@1). ^self].
		].
		
	(aCommandSequence = 'l')
		ifTrue: [
			(orientation = $N) ifTrue: [orientation := $W. ^self].
			(orientation = $E) ifTrue: [orientation := $N. ^self].
			(orientation = $S) ifTrue: [orientation := $E. ^self].
		].

	(aCommandSequence = 'r')
		ifTrue: [
			(orientation = $N) ifTrue: [orientation := $E. ^self].
			(orientation = $E) ifTrue: [orientation := $S. ^self].
		].	! !

!testRun: #MarsRoverTest #test01NewRoverShouldBeAtInitializedPosition stamp: 'JEA 10/25/2020 19:02:19'!
PASSED!

!testRun: #MarsRoverTest #test02NewRoverShouldBeFacingInitializedDirection stamp: 'JEA 10/25/2020 19:02:19'!
PASSED!

!testRun: #MarsRoverTest #test03RoverCantBeInitializedWithInvalidDirection stamp: 'JEA 10/25/2020 19:02:19'!
PASSED!

!testRun: #MarsRoverTest #test04RoverMovesForwardWhenFacingNorth stamp: 'JEA 10/25/2020 19:02:19'!
PASSED!

!testRun: #MarsRoverTest #test05RoverMovesBackwardsWhenFacingNorth stamp: 'JEA 10/25/2020 19:02:19'!
PASSED!

!testRun: #MarsRoverTest #test06RoverRotatesLeftWhenFacingNorth stamp: 'JEA 10/25/2020 19:02:19'!
PASSED!

!testRun: #MarsRoverTest #test07RoverRotatesRightWhenFacingNorth stamp: 'JEA 10/25/2020 19:02:19'!
PASSED!

!testRun: #MarsRoverTest #test08RoverMovesForwardWhenFacingEast stamp: 'JEA 10/25/2020 19:02:19'!
PASSED!

!testRun: #MarsRoverTest #test09RoverMovesBackwardsWhenFacingEast stamp: 'JEA 10/25/2020 19:02:19'!
PASSED!

!testRun: #MarsRoverTest #test10RoverRotatesLeftWhenFacingEast stamp: 'JEA 10/25/2020 19:02:19'!
PASSED!

!testRun: #MarsRoverTest #test11RoverRotatesRightWhenFacingEast stamp: 'JEA 10/25/2020 19:02:19'!
PASSED!

!testRun: #MarsRoverTest #test12RoverMovesForwardWhenFacingSouth stamp: 'JEA 10/25/2020 19:02:19'!
PASSED!

!testRun: #MarsRoverTest #test13RoverMovesBackwardsWhenFacingSouth stamp: 'JEA 10/25/2020 19:02:19'!
PASSED!

!testRun: #MarsRoverTest #test14RoverRotatesLeftWhenFacingSouth stamp: 'JEA 10/25/2020 19:02:19'!
PASSED!
!MarsRoverTest methodsFor: 'tests' stamp: 'JEA 10/25/2020 19:02:47'!
test15RoverRotatesRightWhenFacingSouth
	| marsRover |
	marsRover := MarsRover at: initialPosition facing: $S.
	
	marsRover command: 'R'.
	
	self assert: (marsRover isFacing: $W).! !

!testRun: #MarsRoverTest #test01NewRoverShouldBeAtInitializedPosition stamp: 'JEA 10/25/2020 19:02:48'!
PASSED!

!testRun: #MarsRoverTest #test02NewRoverShouldBeFacingInitializedDirection stamp: 'JEA 10/25/2020 19:02:48'!
PASSED!

!testRun: #MarsRoverTest #test03RoverCantBeInitializedWithInvalidDirection stamp: 'JEA 10/25/2020 19:02:48'!
PASSED!

!testRun: #MarsRoverTest #test04RoverMovesForwardWhenFacingNorth stamp: 'JEA 10/25/2020 19:02:48'!
PASSED!

!testRun: #MarsRoverTest #test05RoverMovesBackwardsWhenFacingNorth stamp: 'JEA 10/25/2020 19:02:48'!
PASSED!

!testRun: #MarsRoverTest #test06RoverRotatesLeftWhenFacingNorth stamp: 'JEA 10/25/2020 19:02:48'!
PASSED!

!testRun: #MarsRoverTest #test07RoverRotatesRightWhenFacingNorth stamp: 'JEA 10/25/2020 19:02:48'!
PASSED!

!testRun: #MarsRoverTest #test08RoverMovesForwardWhenFacingEast stamp: 'JEA 10/25/2020 19:02:48'!
PASSED!

!testRun: #MarsRoverTest #test09RoverMovesBackwardsWhenFacingEast stamp: 'JEA 10/25/2020 19:02:48'!
PASSED!

!testRun: #MarsRoverTest #test10RoverRotatesLeftWhenFacingEast stamp: 'JEA 10/25/2020 19:02:48'!
PASSED!

!testRun: #MarsRoverTest #test11RoverRotatesRightWhenFacingEast stamp: 'JEA 10/25/2020 19:02:48'!
PASSED!

!testRun: #MarsRoverTest #test12RoverMovesForwardWhenFacingSouth stamp: 'JEA 10/25/2020 19:02:48'!
PASSED!

!testRun: #MarsRoverTest #test13RoverMovesBackwardsWhenFacingSouth stamp: 'JEA 10/25/2020 19:02:48'!
PASSED!

!testRun: #MarsRoverTest #test14RoverRotatesLeftWhenFacingSouth stamp: 'JEA 10/25/2020 19:02:48'!
PASSED!

!testRun: #MarsRoverTest #test15RoverRotatesRightWhenFacingSouth stamp: 'JEA 10/25/2020 19:02:48'!
FAILURE!

!testRun: #MarsRoverTest #test15RoverRotatesRightWhenFacingSouth stamp: 'JEA 10/25/2020 19:02:48'!
FAILURE!
!MarsRoverTest methodsFor: 'tests' stamp: 'JEA 10/25/2020 19:02:54' prior: 50872760!
test15RoverRotatesRightWhenFacingSouth
	| marsRover |
	marsRover := MarsRover at: initialPosition facing: $S.
	
	marsRover command: 'r'.
	
	self assert: (marsRover isFacing: $W).! !

!testRun: #MarsRoverTest #test01NewRoverShouldBeAtInitializedPosition stamp: 'JEA 10/25/2020 19:02:55'!
PASSED!

!testRun: #MarsRoverTest #test02NewRoverShouldBeFacingInitializedDirection stamp: 'JEA 10/25/2020 19:02:55'!
PASSED!

!testRun: #MarsRoverTest #test03RoverCantBeInitializedWithInvalidDirection stamp: 'JEA 10/25/2020 19:02:55'!
PASSED!

!testRun: #MarsRoverTest #test04RoverMovesForwardWhenFacingNorth stamp: 'JEA 10/25/2020 19:02:55'!
PASSED!

!testRun: #MarsRoverTest #test05RoverMovesBackwardsWhenFacingNorth stamp: 'JEA 10/25/2020 19:02:55'!
PASSED!

!testRun: #MarsRoverTest #test06RoverRotatesLeftWhenFacingNorth stamp: 'JEA 10/25/2020 19:02:55'!
PASSED!

!testRun: #MarsRoverTest #test07RoverRotatesRightWhenFacingNorth stamp: 'JEA 10/25/2020 19:02:55'!
PASSED!

!testRun: #MarsRoverTest #test08RoverMovesForwardWhenFacingEast stamp: 'JEA 10/25/2020 19:02:55'!
PASSED!

!testRun: #MarsRoverTest #test09RoverMovesBackwardsWhenFacingEast stamp: 'JEA 10/25/2020 19:02:55'!
PASSED!

!testRun: #MarsRoverTest #test10RoverRotatesLeftWhenFacingEast stamp: 'JEA 10/25/2020 19:02:55'!
PASSED!

!testRun: #MarsRoverTest #test11RoverRotatesRightWhenFacingEast stamp: 'JEA 10/25/2020 19:02:55'!
PASSED!

!testRun: #MarsRoverTest #test12RoverMovesForwardWhenFacingSouth stamp: 'JEA 10/25/2020 19:02:55'!
PASSED!

!testRun: #MarsRoverTest #test13RoverMovesBackwardsWhenFacingSouth stamp: 'JEA 10/25/2020 19:02:55'!
PASSED!

!testRun: #MarsRoverTest #test14RoverRotatesLeftWhenFacingSouth stamp: 'JEA 10/25/2020 19:02:55'!
PASSED!

!testRun: #MarsRoverTest #test15RoverRotatesRightWhenFacingSouth stamp: 'JEA 10/25/2020 19:02:55'!
FAILURE!

!testRun: #MarsRoverTest #test15RoverRotatesRightWhenFacingSouth stamp: 'JEA 10/25/2020 19:02:55'!
FAILURE!
!MarsRover methodsFor: 'movement' stamp: 'JEA 10/25/2020 19:03:07' prior: 50872681!
command: aCommandSequence

	(aCommandSequence = 'f')
		ifTrue: [
			(orientation = $N) ifTrue: [position := position + (0@1). ^self].
			(orientation = $E) ifTrue: [position := position + (1@0). ^self].
			(orientation = $S) ifTrue: [position := position - (0@1). ^self].
		].
		
	(aCommandSequence = 'b')
		ifTrue: [
			(orientation = $N) ifTrue: [position := position - (0@1). ^self].
			(orientation = $E) ifTrue: [position := position - (1@0). ^self].
			(orientation = $S) ifTrue: [position := position + (0@1). ^self].
		].
		
	(aCommandSequence = 'l')
		ifTrue: [
			(orientation = $N) ifTrue: [orientation := $W. ^self].
			(orientation = $E) ifTrue: [orientation := $N. ^self].
			(orientation = $S) ifTrue: [orientation := $E. ^self].
		].

	(aCommandSequence = 'r')
		ifTrue: [
			(orientation = $N) ifTrue: [orientation := $E. ^self].
			(orientation = $E) ifTrue: [orientation := $S. ^self].
			(orientation = $S) ifTrue: [orientation := $W. ^self].
		].	! !

!testRun: #MarsRoverTest #test01NewRoverShouldBeAtInitializedPosition stamp: 'JEA 10/25/2020 19:03:08'!
PASSED!

!testRun: #MarsRoverTest #test02NewRoverShouldBeFacingInitializedDirection stamp: 'JEA 10/25/2020 19:03:08'!
PASSED!

!testRun: #MarsRoverTest #test03RoverCantBeInitializedWithInvalidDirection stamp: 'JEA 10/25/2020 19:03:08'!
PASSED!

!testRun: #MarsRoverTest #test04RoverMovesForwardWhenFacingNorth stamp: 'JEA 10/25/2020 19:03:08'!
PASSED!

!testRun: #MarsRoverTest #test05RoverMovesBackwardsWhenFacingNorth stamp: 'JEA 10/25/2020 19:03:08'!
PASSED!

!testRun: #MarsRoverTest #test06RoverRotatesLeftWhenFacingNorth stamp: 'JEA 10/25/2020 19:03:08'!
PASSED!

!testRun: #MarsRoverTest #test07RoverRotatesRightWhenFacingNorth stamp: 'JEA 10/25/2020 19:03:08'!
PASSED!

!testRun: #MarsRoverTest #test08RoverMovesForwardWhenFacingEast stamp: 'JEA 10/25/2020 19:03:08'!
PASSED!

!testRun: #MarsRoverTest #test09RoverMovesBackwardsWhenFacingEast stamp: 'JEA 10/25/2020 19:03:08'!
PASSED!

!testRun: #MarsRoverTest #test10RoverRotatesLeftWhenFacingEast stamp: 'JEA 10/25/2020 19:03:08'!
PASSED!

!testRun: #MarsRoverTest #test11RoverRotatesRightWhenFacingEast stamp: 'JEA 10/25/2020 19:03:08'!
PASSED!

!testRun: #MarsRoverTest #test12RoverMovesForwardWhenFacingSouth stamp: 'JEA 10/25/2020 19:03:08'!
PASSED!

!testRun: #MarsRoverTest #test13RoverMovesBackwardsWhenFacingSouth stamp: 'JEA 10/25/2020 19:03:08'!
PASSED!

!testRun: #MarsRoverTest #test14RoverRotatesLeftWhenFacingSouth stamp: 'JEA 10/25/2020 19:03:08'!
PASSED!

!testRun: #MarsRoverTest #test15RoverRotatesRightWhenFacingSouth stamp: 'JEA 10/25/2020 19:03:08'!
PASSED!
!MarsRoverTest methodsFor: 'tests' stamp: 'JEA 10/25/2020 19:03:33'!
test16RoverMovesForwardWhenFacingWest
	| marsRover |
	marsRover := MarsRover at: initialPosition facing: $W.
	
	marsRover command: 'f'.
	
	self assert: (marsRover isAt: initialPosition - (1@0)).! !

!testRun: #MarsRoverTest #test01NewRoverShouldBeAtInitializedPosition stamp: 'JEA 10/25/2020 19:03:34'!
PASSED!

!testRun: #MarsRoverTest #test02NewRoverShouldBeFacingInitializedDirection stamp: 'JEA 10/25/2020 19:03:34'!
PASSED!

!testRun: #MarsRoverTest #test03RoverCantBeInitializedWithInvalidDirection stamp: 'JEA 10/25/2020 19:03:34'!
PASSED!

!testRun: #MarsRoverTest #test04RoverMovesForwardWhenFacingNorth stamp: 'JEA 10/25/2020 19:03:34'!
PASSED!

!testRun: #MarsRoverTest #test05RoverMovesBackwardsWhenFacingNorth stamp: 'JEA 10/25/2020 19:03:34'!
PASSED!

!testRun: #MarsRoverTest #test06RoverRotatesLeftWhenFacingNorth stamp: 'JEA 10/25/2020 19:03:34'!
PASSED!

!testRun: #MarsRoverTest #test07RoverRotatesRightWhenFacingNorth stamp: 'JEA 10/25/2020 19:03:34'!
PASSED!

!testRun: #MarsRoverTest #test08RoverMovesForwardWhenFacingEast stamp: 'JEA 10/25/2020 19:03:34'!
PASSED!

!testRun: #MarsRoverTest #test09RoverMovesBackwardsWhenFacingEast stamp: 'JEA 10/25/2020 19:03:34'!
PASSED!

!testRun: #MarsRoverTest #test10RoverRotatesLeftWhenFacingEast stamp: 'JEA 10/25/2020 19:03:34'!
PASSED!

!testRun: #MarsRoverTest #test11RoverRotatesRightWhenFacingEast stamp: 'JEA 10/25/2020 19:03:34'!
PASSED!

!testRun: #MarsRoverTest #test12RoverMovesForwardWhenFacingSouth stamp: 'JEA 10/25/2020 19:03:34'!
PASSED!

!testRun: #MarsRoverTest #test13RoverMovesBackwardsWhenFacingSouth stamp: 'JEA 10/25/2020 19:03:34'!
PASSED!

!testRun: #MarsRoverTest #test14RoverRotatesLeftWhenFacingSouth stamp: 'JEA 10/25/2020 19:03:34'!
PASSED!

!testRun: #MarsRoverTest #test15RoverRotatesRightWhenFacingSouth stamp: 'JEA 10/25/2020 19:03:34'!
PASSED!

!testRun: #MarsRoverTest #test16RoverMovesForwardWhenFacingWest stamp: 'JEA 10/25/2020 19:03:34'!
FAILURE!

!testRun: #MarsRoverTest #test16RoverMovesForwardWhenFacingWest stamp: 'JEA 10/25/2020 19:03:34'!
FAILURE!
!MarsRover methodsFor: 'movement' stamp: 'JEA 10/25/2020 19:03:49' prior: 50872888!
command: aCommandSequence

	(aCommandSequence = 'f')
		ifTrue: [
			(orientation = $N) ifTrue: [position := position + (0@1). ^self].
			(orientation = $E) ifTrue: [position := position + (1@0). ^self].
			(orientation = $S) ifTrue: [position := position - (0@1). ^self].
			(orientation = $W) ifTrue: [position := position - (1@0). ^self].
		].
		
	(aCommandSequence = 'b')
		ifTrue: [
			(orientation = $N) ifTrue: [position := position - (0@1). ^self].
			(orientation = $E) ifTrue: [position := position - (1@0). ^self].
			(orientation = $S) ifTrue: [position := position + (0@1). ^self].
		].
		
	(aCommandSequence = 'l')
		ifTrue: [
			(orientation = $N) ifTrue: [orientation := $W. ^self].
			(orientation = $E) ifTrue: [orientation := $N. ^self].
			(orientation = $S) ifTrue: [orientation := $E. ^self].
		].

	(aCommandSequence = 'r')
		ifTrue: [
			(orientation = $N) ifTrue: [orientation := $E. ^self].
			(orientation = $E) ifTrue: [orientation := $S. ^self].
			(orientation = $S) ifTrue: [orientation := $W. ^self].
		].	! !

!testRun: #MarsRoverTest #test01NewRoverShouldBeAtInitializedPosition stamp: 'JEA 10/25/2020 19:03:50'!
PASSED!

!testRun: #MarsRoverTest #test02NewRoverShouldBeFacingInitializedDirection stamp: 'JEA 10/25/2020 19:03:50'!
PASSED!

!testRun: #MarsRoverTest #test03RoverCantBeInitializedWithInvalidDirection stamp: 'JEA 10/25/2020 19:03:50'!
PASSED!

!testRun: #MarsRoverTest #test04RoverMovesForwardWhenFacingNorth stamp: 'JEA 10/25/2020 19:03:50'!
PASSED!

!testRun: #MarsRoverTest #test05RoverMovesBackwardsWhenFacingNorth stamp: 'JEA 10/25/2020 19:03:50'!
PASSED!

!testRun: #MarsRoverTest #test06RoverRotatesLeftWhenFacingNorth stamp: 'JEA 10/25/2020 19:03:50'!
PASSED!

!testRun: #MarsRoverTest #test07RoverRotatesRightWhenFacingNorth stamp: 'JEA 10/25/2020 19:03:50'!
PASSED!

!testRun: #MarsRoverTest #test08RoverMovesForwardWhenFacingEast stamp: 'JEA 10/25/2020 19:03:50'!
PASSED!

!testRun: #MarsRoverTest #test09RoverMovesBackwardsWhenFacingEast stamp: 'JEA 10/25/2020 19:03:50'!
PASSED!

!testRun: #MarsRoverTest #test10RoverRotatesLeftWhenFacingEast stamp: 'JEA 10/25/2020 19:03:50'!
PASSED!

!testRun: #MarsRoverTest #test11RoverRotatesRightWhenFacingEast stamp: 'JEA 10/25/2020 19:03:50'!
PASSED!

!testRun: #MarsRoverTest #test12RoverMovesForwardWhenFacingSouth stamp: 'JEA 10/25/2020 19:03:50'!
PASSED!

!testRun: #MarsRoverTest #test13RoverMovesBackwardsWhenFacingSouth stamp: 'JEA 10/25/2020 19:03:50'!
PASSED!

!testRun: #MarsRoverTest #test14RoverRotatesLeftWhenFacingSouth stamp: 'JEA 10/25/2020 19:03:50'!
PASSED!

!testRun: #MarsRoverTest #test15RoverRotatesRightWhenFacingSouth stamp: 'JEA 10/25/2020 19:03:50'!
PASSED!

!testRun: #MarsRoverTest #test16RoverMovesForwardWhenFacingWest stamp: 'JEA 10/25/2020 19:03:50'!
PASSED!
!MarsRoverTest methodsFor: 'tests' stamp: 'JEA 10/25/2020 19:04:08'!
test17RoverMovesBackwardsWhenFacingWest
	| marsRover |
	marsRover := MarsRover at: initialPosition facing: $W.
	
	marsRover command: 'b'.
	
	self assert: (marsRover isAt: initialPosition + (1@0)).! !

!testRun: #MarsRoverTest #test01NewRoverShouldBeAtInitializedPosition stamp: 'JEA 10/25/2020 19:04:09'!
PASSED!

!testRun: #MarsRoverTest #test02NewRoverShouldBeFacingInitializedDirection stamp: 'JEA 10/25/2020 19:04:09'!
PASSED!

!testRun: #MarsRoverTest #test03RoverCantBeInitializedWithInvalidDirection stamp: 'JEA 10/25/2020 19:04:09'!
PASSED!

!testRun: #MarsRoverTest #test04RoverMovesForwardWhenFacingNorth stamp: 'JEA 10/25/2020 19:04:09'!
PASSED!

!testRun: #MarsRoverTest #test05RoverMovesBackwardsWhenFacingNorth stamp: 'JEA 10/25/2020 19:04:09'!
PASSED!

!testRun: #MarsRoverTest #test06RoverRotatesLeftWhenFacingNorth stamp: 'JEA 10/25/2020 19:04:09'!
PASSED!

!testRun: #MarsRoverTest #test07RoverRotatesRightWhenFacingNorth stamp: 'JEA 10/25/2020 19:04:09'!
PASSED!

!testRun: #MarsRoverTest #test08RoverMovesForwardWhenFacingEast stamp: 'JEA 10/25/2020 19:04:09'!
PASSED!

!testRun: #MarsRoverTest #test09RoverMovesBackwardsWhenFacingEast stamp: 'JEA 10/25/2020 19:04:09'!
PASSED!

!testRun: #MarsRoverTest #test10RoverRotatesLeftWhenFacingEast stamp: 'JEA 10/25/2020 19:04:09'!
PASSED!

!testRun: #MarsRoverTest #test11RoverRotatesRightWhenFacingEast stamp: 'JEA 10/25/2020 19:04:09'!
PASSED!

!testRun: #MarsRoverTest #test12RoverMovesForwardWhenFacingSouth stamp: 'JEA 10/25/2020 19:04:09'!
PASSED!

!testRun: #MarsRoverTest #test13RoverMovesBackwardsWhenFacingSouth stamp: 'JEA 10/25/2020 19:04:09'!
PASSED!

!testRun: #MarsRoverTest #test14RoverRotatesLeftWhenFacingSouth stamp: 'JEA 10/25/2020 19:04:09'!
PASSED!

!testRun: #MarsRoverTest #test15RoverRotatesRightWhenFacingSouth stamp: 'JEA 10/25/2020 19:04:09'!
PASSED!

!testRun: #MarsRoverTest #test16RoverMovesForwardWhenFacingWest stamp: 'JEA 10/25/2020 19:04:09'!
PASSED!

!testRun: #MarsRoverTest #test17RoverMovesBackwardsWhenFacingWest stamp: 'JEA 10/25/2020 19:04:09'!
FAILURE!

!testRun: #MarsRoverTest #test17RoverMovesBackwardsWhenFacingWest stamp: 'JEA 10/25/2020 19:04:09'!
FAILURE!
!MarsRover methodsFor: 'movement' stamp: 'JEA 10/25/2020 19:04:26' prior: 50873039!
command: aCommandSequence

	(aCommandSequence = 'f')
		ifTrue: [
			(orientation = $N) ifTrue: [position := position + (0@1). ^self].
			(orientation = $E) ifTrue: [position := position + (1@0). ^self].
			(orientation = $S) ifTrue: [position := position - (0@1). ^self].
			(orientation = $W) ifTrue: [position := position - (1@0). ^self].
		].
		
	(aCommandSequence = 'b')
		ifTrue: [
			(orientation = $N) ifTrue: [position := position - (0@1). ^self].
			(orientation = $E) ifTrue: [position := position - (1@0). ^self].
			(orientation = $S) ifTrue: [position := position + (0@1). ^self].
			(orientation = $W) ifTrue: [position := position + (1@0). ^self].
		].
		
	(aCommandSequence = 'l')
		ifTrue: [
			(orientation = $N) ifTrue: [orientation := $W. ^self].
			(orientation = $E) ifTrue: [orientation := $N. ^self].
			(orientation = $S) ifTrue: [orientation := $E. ^self].
		].

	(aCommandSequence = 'r')
		ifTrue: [
			(orientation = $N) ifTrue: [orientation := $E. ^self].
			(orientation = $E) ifTrue: [orientation := $S. ^self].
			(orientation = $S) ifTrue: [orientation := $W. ^self].
		].	! !

!testRun: #MarsRoverTest #test01NewRoverShouldBeAtInitializedPosition stamp: 'JEA 10/25/2020 19:04:36'!
PASSED!

!testRun: #MarsRoverTest #test02NewRoverShouldBeFacingInitializedDirection stamp: 'JEA 10/25/2020 19:04:36'!
PASSED!

!testRun: #MarsRoverTest #test03RoverCantBeInitializedWithInvalidDirection stamp: 'JEA 10/25/2020 19:04:36'!
PASSED!

!testRun: #MarsRoverTest #test04RoverMovesForwardWhenFacingNorth stamp: 'JEA 10/25/2020 19:04:36'!
PASSED!

!testRun: #MarsRoverTest #test05RoverMovesBackwardsWhenFacingNorth stamp: 'JEA 10/25/2020 19:04:36'!
PASSED!

!testRun: #MarsRoverTest #test06RoverRotatesLeftWhenFacingNorth stamp: 'JEA 10/25/2020 19:04:36'!
PASSED!

!testRun: #MarsRoverTest #test07RoverRotatesRightWhenFacingNorth stamp: 'JEA 10/25/2020 19:04:36'!
PASSED!

!testRun: #MarsRoverTest #test08RoverMovesForwardWhenFacingEast stamp: 'JEA 10/25/2020 19:04:36'!
PASSED!

!testRun: #MarsRoverTest #test09RoverMovesBackwardsWhenFacingEast stamp: 'JEA 10/25/2020 19:04:36'!
PASSED!

!testRun: #MarsRoverTest #test10RoverRotatesLeftWhenFacingEast stamp: 'JEA 10/25/2020 19:04:36'!
PASSED!

!testRun: #MarsRoverTest #test11RoverRotatesRightWhenFacingEast stamp: 'JEA 10/25/2020 19:04:36'!
PASSED!

!testRun: #MarsRoverTest #test12RoverMovesForwardWhenFacingSouth stamp: 'JEA 10/25/2020 19:04:36'!
PASSED!

!testRun: #MarsRoverTest #test13RoverMovesBackwardsWhenFacingSouth stamp: 'JEA 10/25/2020 19:04:36'!
PASSED!

!testRun: #MarsRoverTest #test14RoverRotatesLeftWhenFacingSouth stamp: 'JEA 10/25/2020 19:04:36'!
PASSED!

!testRun: #MarsRoverTest #test15RoverRotatesRightWhenFacingSouth stamp: 'JEA 10/25/2020 19:04:36'!
PASSED!

!testRun: #MarsRoverTest #test16RoverMovesForwardWhenFacingWest stamp: 'JEA 10/25/2020 19:04:36'!
PASSED!

!testRun: #MarsRoverTest #test17RoverMovesBackwardsWhenFacingWest stamp: 'JEA 10/25/2020 19:04:36'!
PASSED!
!MarsRoverTest methodsFor: 'tests' stamp: 'JEA 10/25/2020 19:05:03'!
test18RoverRotatesLeftWhenFacingWest
	| marsRover |
	marsRover := MarsRover at: initialPosition facing: $S.
	
	marsRover command: 'l'.
	
	self assert: (marsRover isFacing: $E).! !
!MarsRoverTest methodsFor: 'tests' stamp: 'JEA 10/25/2020 19:05:13' prior: 50873295!
test18RoverRotatesLeftWhenFacingWest
	| marsRover |
	marsRover := MarsRover at: initialPosition facing: $W.
	
	marsRover command: 'l'.
	
	self assert: (marsRover isFacing: $S).! !
!MarsRover methodsFor: 'movement' stamp: 'JEA 10/25/2020 19:05:26' prior: 50873200!
command: aCommandSequence

	(aCommandSequence = 'f')
		ifTrue: [
			(orientation = $N) ifTrue: [position := position + (0@1). ^self].
			(orientation = $E) ifTrue: [position := position + (1@0). ^self].
			(orientation = $S) ifTrue: [position := position - (0@1). ^self].
			(orientation = $W) ifTrue: [position := position - (1@0). ^self].
		].
		
	(aCommandSequence = 'b')
		ifTrue: [
			(orientation = $N) ifTrue: [position := position - (0@1). ^self].
			(orientation = $E) ifTrue: [position := position - (1@0). ^self].
			(orientation = $S) ifTrue: [position := position + (0@1). ^self].
			(orientation = $W) ifTrue: [position := position + (1@0). ^self].
		].
		
	(aCommandSequence = 'l')
		ifTrue: [
			(orientation = $N) ifTrue: [orientation := $W. ^self].
			(orientation = $E) ifTrue: [orientation := $N. ^self].
			(orientation = $S) ifTrue: [orientation := $E. ^self].
			(orientation = $W) ifTrue: [orientation := $S. ^self].
		].

	(aCommandSequence = 'r')
		ifTrue: [
			(orientation = $N) ifTrue: [orientation := $E. ^self].
			(orientation = $E) ifTrue: [orientation := $S. ^self].
			(orientation = $S) ifTrue: [orientation := $W. ^self].
		].	! !

!testRun: #MarsRoverTest #test01NewRoverShouldBeAtInitializedPosition stamp: 'JEA 10/25/2020 19:05:35'!
PASSED!

!testRun: #MarsRoverTest #test02NewRoverShouldBeFacingInitializedDirection stamp: 'JEA 10/25/2020 19:05:35'!
PASSED!

!testRun: #MarsRoverTest #test03RoverCantBeInitializedWithInvalidDirection stamp: 'JEA 10/25/2020 19:05:35'!
PASSED!

!testRun: #MarsRoverTest #test04RoverMovesForwardWhenFacingNorth stamp: 'JEA 10/25/2020 19:05:35'!
PASSED!

!testRun: #MarsRoverTest #test05RoverMovesBackwardsWhenFacingNorth stamp: 'JEA 10/25/2020 19:05:35'!
PASSED!

!testRun: #MarsRoverTest #test06RoverRotatesLeftWhenFacingNorth stamp: 'JEA 10/25/2020 19:05:35'!
PASSED!

!testRun: #MarsRoverTest #test07RoverRotatesRightWhenFacingNorth stamp: 'JEA 10/25/2020 19:05:35'!
PASSED!

!testRun: #MarsRoverTest #test08RoverMovesForwardWhenFacingEast stamp: 'JEA 10/25/2020 19:05:35'!
PASSED!

!testRun: #MarsRoverTest #test09RoverMovesBackwardsWhenFacingEast stamp: 'JEA 10/25/2020 19:05:35'!
PASSED!

!testRun: #MarsRoverTest #test10RoverRotatesLeftWhenFacingEast stamp: 'JEA 10/25/2020 19:05:35'!
PASSED!

!testRun: #MarsRoverTest #test11RoverRotatesRightWhenFacingEast stamp: 'JEA 10/25/2020 19:05:35'!
PASSED!

!testRun: #MarsRoverTest #test12RoverMovesForwardWhenFacingSouth stamp: 'JEA 10/25/2020 19:05:35'!
PASSED!

!testRun: #MarsRoverTest #test13RoverMovesBackwardsWhenFacingSouth stamp: 'JEA 10/25/2020 19:05:35'!
PASSED!

!testRun: #MarsRoverTest #test14RoverRotatesLeftWhenFacingSouth stamp: 'JEA 10/25/2020 19:05:35'!
PASSED!

!testRun: #MarsRoverTest #test15RoverRotatesRightWhenFacingSouth stamp: 'JEA 10/25/2020 19:05:35'!
PASSED!

!testRun: #MarsRoverTest #test16RoverMovesForwardWhenFacingWest stamp: 'JEA 10/25/2020 19:05:35'!
PASSED!

!testRun: #MarsRoverTest #test17RoverMovesBackwardsWhenFacingWest stamp: 'JEA 10/25/2020 19:05:35'!
PASSED!

!testRun: #MarsRoverTest #test18RoverRotatesLeftWhenFacingWest stamp: 'JEA 10/25/2020 19:05:35'!
PASSED!
!MarsRoverTest methodsFor: 'tests' stamp: 'JEA 10/25/2020 19:05:45'!
test18RoverRotatesRightWhenFacingWest
	| marsRover |
	marsRover := MarsRover at: initialPosition facing: $W.
	
	marsRover command: 'r'.
	
	self assert: (marsRover isFacing: $N).! !
!MarsRoverTest methodsFor: 'tests' stamp: 'JEA 10/25/2020 19:05:58'!
test19RoverRotatesRightWhenFacingWest
	| marsRover |
	marsRover := MarsRover at: initialPosition facing: $W.
	
	marsRover command: 'r'.
	
	self assert: (marsRover isFacing: $N).! !

!methodRemoval: MarsRoverTest #test18RoverRotatesRightWhenFacingWest stamp: 'JEA 10/25/2020 19:05:58'!
test18RoverRotatesRightWhenFacingWest
	| marsRover |
	marsRover := MarsRover at: initialPosition facing: $W.
	
	marsRover command: 'r'.
	
	self assert: (marsRover isFacing: $N).!

!testRun: #MarsRoverTest #test01NewRoverShouldBeAtInitializedPosition stamp: 'JEA 10/25/2020 19:06:05'!
PASSED!

!testRun: #MarsRoverTest #test02NewRoverShouldBeFacingInitializedDirection stamp: 'JEA 10/25/2020 19:06:05'!
PASSED!

!testRun: #MarsRoverTest #test03RoverCantBeInitializedWithInvalidDirection stamp: 'JEA 10/25/2020 19:06:05'!
PASSED!

!testRun: #MarsRoverTest #test04RoverMovesForwardWhenFacingNorth stamp: 'JEA 10/25/2020 19:06:05'!
PASSED!

!testRun: #MarsRoverTest #test05RoverMovesBackwardsWhenFacingNorth stamp: 'JEA 10/25/2020 19:06:05'!
PASSED!

!testRun: #MarsRoverTest #test06RoverRotatesLeftWhenFacingNorth stamp: 'JEA 10/25/2020 19:06:05'!
PASSED!

!testRun: #MarsRoverTest #test07RoverRotatesRightWhenFacingNorth stamp: 'JEA 10/25/2020 19:06:05'!
PASSED!

!testRun: #MarsRoverTest #test08RoverMovesForwardWhenFacingEast stamp: 'JEA 10/25/2020 19:06:05'!
PASSED!

!testRun: #MarsRoverTest #test09RoverMovesBackwardsWhenFacingEast stamp: 'JEA 10/25/2020 19:06:05'!
PASSED!

!testRun: #MarsRoverTest #test10RoverRotatesLeftWhenFacingEast stamp: 'JEA 10/25/2020 19:06:05'!
PASSED!

!testRun: #MarsRoverTest #test11RoverRotatesRightWhenFacingEast stamp: 'JEA 10/25/2020 19:06:05'!
PASSED!

!testRun: #MarsRoverTest #test12RoverMovesForwardWhenFacingSouth stamp: 'JEA 10/25/2020 19:06:05'!
PASSED!

!testRun: #MarsRoverTest #test13RoverMovesBackwardsWhenFacingSouth stamp: 'JEA 10/25/2020 19:06:05'!
PASSED!

!testRun: #MarsRoverTest #test14RoverRotatesLeftWhenFacingSouth stamp: 'JEA 10/25/2020 19:06:05'!
PASSED!

!testRun: #MarsRoverTest #test15RoverRotatesRightWhenFacingSouth stamp: 'JEA 10/25/2020 19:06:05'!
PASSED!

!testRun: #MarsRoverTest #test16RoverMovesForwardWhenFacingWest stamp: 'JEA 10/25/2020 19:06:05'!
PASSED!

!testRun: #MarsRoverTest #test17RoverMovesBackwardsWhenFacingWest stamp: 'JEA 10/25/2020 19:06:05'!
PASSED!

!testRun: #MarsRoverTest #test18RoverRotatesLeftWhenFacingWest stamp: 'JEA 10/25/2020 19:06:05'!
PASSED!

!testRun: #MarsRoverTest #test19RoverRotatesRightWhenFacingWest stamp: 'JEA 10/25/2020 19:06:05'!
FAILURE!

!testRun: #MarsRoverTest #test19RoverRotatesRightWhenFacingWest stamp: 'JEA 10/25/2020 19:06:05'!
FAILURE!
!MarsRover methodsFor: 'movement' stamp: 'JEA 10/25/2020 19:06:14' prior: 50873313!
command: aCommandSequence

	(aCommandSequence = 'f')
		ifTrue: [
			(orientation = $N) ifTrue: [position := position + (0@1). ^self].
			(orientation = $E) ifTrue: [position := position + (1@0). ^self].
			(orientation = $S) ifTrue: [position := position - (0@1). ^self].
			(orientation = $W) ifTrue: [position := position - (1@0). ^self].
		].
		
	(aCommandSequence = 'b')
		ifTrue: [
			(orientation = $N) ifTrue: [position := position - (0@1). ^self].
			(orientation = $E) ifTrue: [position := position - (1@0). ^self].
			(orientation = $S) ifTrue: [position := position + (0@1). ^self].
			(orientation = $W) ifTrue: [position := position + (1@0). ^self].
		].
		
	(aCommandSequence = 'l')
		ifTrue: [
			(orientation = $N) ifTrue: [orientation := $W. ^self].
			(orientation = $E) ifTrue: [orientation := $N. ^self].
			(orientation = $S) ifTrue: [orientation := $E. ^self].
			(orientation = $W) ifTrue: [orientation := $S. ^self].
		].

	(aCommandSequence = 'r')
		ifTrue: [
			(orientation = $N) ifTrue: [orientation := $E. ^self].
			(orientation = $E) ifTrue: [orientation := $S. ^self].
			(orientation = $S) ifTrue: [orientation := $W. ^self].
			(orientation = $W) ifTrue: [orientation := $N. ^self].
		].	! !

!testRun: #MarsRoverTest #test01NewRoverShouldBeAtInitializedPosition stamp: 'JEA 10/25/2020 19:06:19'!
PASSED!

!testRun: #MarsRoverTest #test02NewRoverShouldBeFacingInitializedDirection stamp: 'JEA 10/25/2020 19:06:19'!
PASSED!

!testRun: #MarsRoverTest #test03RoverCantBeInitializedWithInvalidDirection stamp: 'JEA 10/25/2020 19:06:19'!
PASSED!

!testRun: #MarsRoverTest #test04RoverMovesForwardWhenFacingNorth stamp: 'JEA 10/25/2020 19:06:19'!
PASSED!

!testRun: #MarsRoverTest #test05RoverMovesBackwardsWhenFacingNorth stamp: 'JEA 10/25/2020 19:06:19'!
PASSED!

!testRun: #MarsRoverTest #test06RoverRotatesLeftWhenFacingNorth stamp: 'JEA 10/25/2020 19:06:19'!
PASSED!

!testRun: #MarsRoverTest #test07RoverRotatesRightWhenFacingNorth stamp: 'JEA 10/25/2020 19:06:19'!
PASSED!

!testRun: #MarsRoverTest #test08RoverMovesForwardWhenFacingEast stamp: 'JEA 10/25/2020 19:06:19'!
PASSED!

!testRun: #MarsRoverTest #test09RoverMovesBackwardsWhenFacingEast stamp: 'JEA 10/25/2020 19:06:19'!
PASSED!

!testRun: #MarsRoverTest #test10RoverRotatesLeftWhenFacingEast stamp: 'JEA 10/25/2020 19:06:19'!
PASSED!

!testRun: #MarsRoverTest #test11RoverRotatesRightWhenFacingEast stamp: 'JEA 10/25/2020 19:06:19'!
PASSED!

!testRun: #MarsRoverTest #test12RoverMovesForwardWhenFacingSouth stamp: 'JEA 10/25/2020 19:06:19'!
PASSED!

!testRun: #MarsRoverTest #test13RoverMovesBackwardsWhenFacingSouth stamp: 'JEA 10/25/2020 19:06:19'!
PASSED!

!testRun: #MarsRoverTest #test14RoverRotatesLeftWhenFacingSouth stamp: 'JEA 10/25/2020 19:06:19'!
PASSED!

!testRun: #MarsRoverTest #test15RoverRotatesRightWhenFacingSouth stamp: 'JEA 10/25/2020 19:06:19'!
PASSED!

!testRun: #MarsRoverTest #test16RoverMovesForwardWhenFacingWest stamp: 'JEA 10/25/2020 19:06:19'!
PASSED!

!testRun: #MarsRoverTest #test17RoverMovesBackwardsWhenFacingWest stamp: 'JEA 10/25/2020 19:06:19'!
PASSED!

!testRun: #MarsRoverTest #test18RoverRotatesLeftWhenFacingWest stamp: 'JEA 10/25/2020 19:06:19'!
PASSED!

!testRun: #MarsRoverTest #test19RoverRotatesRightWhenFacingWest stamp: 'JEA 10/25/2020 19:06:19'!
PASSED!
!MarsRoverTest methodsFor: 'tests' stamp: 'JEA 10/25/2020 19:07:02' prior: 50871557!
test04RoverMovesForwardWhenFacingNorth
	| marsRover |
	marsRover := MarsRover at: initialPosition facing: $N.
	
	marsRover command: 'f'.
	
	self assert: (marsRover isAt: initialPosition + (0@1)).
	self assert: (marsRover isFacing: initialDirection).! !
!MarsRoverTest methodsFor: 'tests' stamp: 'JEA 10/25/2020 19:07:12' prior: 50873614!
test04RoverMovesForwardWhenFacingNorth
	| marsRover |
	marsRover := MarsRover at: initialPosition facing: $N.
	
	marsRover command: 'f'.
	
	self assert: (marsRover isAt: initialPosition + (0@1)).
	self assert: (marsRover isFacing: $N).! !

!testRun: #MarsRoverTest #test01NewRoverShouldBeAtInitializedPosition stamp: 'JEA 10/25/2020 19:07:14'!
PASSED!

!testRun: #MarsRoverTest #test02NewRoverShouldBeFacingInitializedDirection stamp: 'JEA 10/25/2020 19:07:14'!
PASSED!

!testRun: #MarsRoverTest #test03RoverCantBeInitializedWithInvalidDirection stamp: 'JEA 10/25/2020 19:07:14'!
PASSED!

!testRun: #MarsRoverTest #test04RoverMovesForwardWhenFacingNorth stamp: 'JEA 10/25/2020 19:07:14'!
PASSED!

!testRun: #MarsRoverTest #test05RoverMovesBackwardsWhenFacingNorth stamp: 'JEA 10/25/2020 19:07:14'!
PASSED!

!testRun: #MarsRoverTest #test06RoverRotatesLeftWhenFacingNorth stamp: 'JEA 10/25/2020 19:07:14'!
PASSED!

!testRun: #MarsRoverTest #test07RoverRotatesRightWhenFacingNorth stamp: 'JEA 10/25/2020 19:07:14'!
PASSED!

!testRun: #MarsRoverTest #test08RoverMovesForwardWhenFacingEast stamp: 'JEA 10/25/2020 19:07:14'!
PASSED!

!testRun: #MarsRoverTest #test09RoverMovesBackwardsWhenFacingEast stamp: 'JEA 10/25/2020 19:07:14'!
PASSED!

!testRun: #MarsRoverTest #test10RoverRotatesLeftWhenFacingEast stamp: 'JEA 10/25/2020 19:07:14'!
PASSED!

!testRun: #MarsRoverTest #test11RoverRotatesRightWhenFacingEast stamp: 'JEA 10/25/2020 19:07:14'!
PASSED!

!testRun: #MarsRoverTest #test12RoverMovesForwardWhenFacingSouth stamp: 'JEA 10/25/2020 19:07:14'!
PASSED!

!testRun: #MarsRoverTest #test13RoverMovesBackwardsWhenFacingSouth stamp: 'JEA 10/25/2020 19:07:14'!
PASSED!

!testRun: #MarsRoverTest #test14RoverRotatesLeftWhenFacingSouth stamp: 'JEA 10/25/2020 19:07:14'!
PASSED!

!testRun: #MarsRoverTest #test15RoverRotatesRightWhenFacingSouth stamp: 'JEA 10/25/2020 19:07:14'!
PASSED!

!testRun: #MarsRoverTest #test16RoverMovesForwardWhenFacingWest stamp: 'JEA 10/25/2020 19:07:14'!
PASSED!

!testRun: #MarsRoverTest #test17RoverMovesBackwardsWhenFacingWest stamp: 'JEA 10/25/2020 19:07:14'!
PASSED!

!testRun: #MarsRoverTest #test18RoverRotatesLeftWhenFacingWest stamp: 'JEA 10/25/2020 19:07:14'!
PASSED!

!testRun: #MarsRoverTest #test19RoverRotatesRightWhenFacingWest stamp: 'JEA 10/25/2020 19:07:14'!
PASSED!
!MarsRoverTest methodsFor: 'tests' stamp: 'JEA 10/25/2020 19:07:30' prior: 50871566!
test05RoverMovesBackwardsWhenFacingNorth
	| marsRover |
	marsRover := MarsRover at: initialPosition facing: $N.
	
	marsRover command: 'b'.
	
	self assert: (marsRover isAt: initialPosition - (0@1)).
	self assert: (marsRover isFacing: $N).! !

!testRun: #MarsRoverTest #test01NewRoverShouldBeAtInitializedPosition stamp: 'JEA 10/25/2020 19:07:31'!
PASSED!

!testRun: #MarsRoverTest #test02NewRoverShouldBeFacingInitializedDirection stamp: 'JEA 10/25/2020 19:07:31'!
PASSED!

!testRun: #MarsRoverTest #test03RoverCantBeInitializedWithInvalidDirection stamp: 'JEA 10/25/2020 19:07:31'!
PASSED!

!testRun: #MarsRoverTest #test04RoverMovesForwardWhenFacingNorth stamp: 'JEA 10/25/2020 19:07:31'!
PASSED!

!testRun: #MarsRoverTest #test05RoverMovesBackwardsWhenFacingNorth stamp: 'JEA 10/25/2020 19:07:31'!
PASSED!

!testRun: #MarsRoverTest #test06RoverRotatesLeftWhenFacingNorth stamp: 'JEA 10/25/2020 19:07:31'!
PASSED!

!testRun: #MarsRoverTest #test07RoverRotatesRightWhenFacingNorth stamp: 'JEA 10/25/2020 19:07:31'!
PASSED!

!testRun: #MarsRoverTest #test08RoverMovesForwardWhenFacingEast stamp: 'JEA 10/25/2020 19:07:31'!
PASSED!

!testRun: #MarsRoverTest #test09RoverMovesBackwardsWhenFacingEast stamp: 'JEA 10/25/2020 19:07:31'!
PASSED!

!testRun: #MarsRoverTest #test10RoverRotatesLeftWhenFacingEast stamp: 'JEA 10/25/2020 19:07:31'!
PASSED!

!testRun: #MarsRoverTest #test11RoverRotatesRightWhenFacingEast stamp: 'JEA 10/25/2020 19:07:31'!
PASSED!

!testRun: #MarsRoverTest #test12RoverMovesForwardWhenFacingSouth stamp: 'JEA 10/25/2020 19:07:31'!
PASSED!

!testRun: #MarsRoverTest #test13RoverMovesBackwardsWhenFacingSouth stamp: 'JEA 10/25/2020 19:07:31'!
PASSED!

!testRun: #MarsRoverTest #test14RoverRotatesLeftWhenFacingSouth stamp: 'JEA 10/25/2020 19:07:31'!
PASSED!

!testRun: #MarsRoverTest #test15RoverRotatesRightWhenFacingSouth stamp: 'JEA 10/25/2020 19:07:31'!
PASSED!

!testRun: #MarsRoverTest #test16RoverMovesForwardWhenFacingWest stamp: 'JEA 10/25/2020 19:07:31'!
PASSED!

!testRun: #MarsRoverTest #test17RoverMovesBackwardsWhenFacingWest stamp: 'JEA 10/25/2020 19:07:31'!
PASSED!

!testRun: #MarsRoverTest #test18RoverRotatesLeftWhenFacingWest stamp: 'JEA 10/25/2020 19:07:31'!
PASSED!

!testRun: #MarsRoverTest #test19RoverRotatesRightWhenFacingWest stamp: 'JEA 10/25/2020 19:07:31'!
PASSED!
!MarsRoverTest methodsFor: 'tests' stamp: 'JEA 10/25/2020 19:07:58' prior: 50871622!
test06RoverRotatesLeftWhenFacingNorth
	| marsRover |
	marsRover := MarsRover at: initialPosition facing: $N.
	
	marsRover command: 'l'.
	
	self assert: (marsRover isFacing: $W).
	self assert: (marsRover isAt: initialPosition)! !
!MarsRoverTest methodsFor: 'tests' stamp: 'JEA 10/25/2020 19:07:59' prior: 50873775!
test06RoverRotatesLeftWhenFacingNorth
	| marsRover |
	marsRover := MarsRover at: initialPosition facing: $N.
	
	marsRover command: 'l'.
	
	self assert: (marsRover isFacing: $W).
	self assert: (marsRover isAt: initialPosition).! !
!MarsRoverTest methodsFor: 'tests' stamp: 'JEA 10/25/2020 19:08:10' prior: 50871752!
test07RoverRotatesRightWhenFacingNorth
	| marsRover |
	marsRover := MarsRover at: initialPosition facing: $N.
	
	marsRover command: 'r'.
	
	self assert: (marsRover isFacing: $E).
	self assert: (marsRover isAt: initialPosition).! !

!testRun: #MarsRoverTest #test01NewRoverShouldBeAtInitializedPosition stamp: 'JEA 10/25/2020 19:08:15'!
PASSED!

!testRun: #MarsRoverTest #test02NewRoverShouldBeFacingInitializedDirection stamp: 'JEA 10/25/2020 19:08:15'!
PASSED!

!testRun: #MarsRoverTest #test03RoverCantBeInitializedWithInvalidDirection stamp: 'JEA 10/25/2020 19:08:15'!
PASSED!

!testRun: #MarsRoverTest #test04RoverMovesForwardWhenFacingNorth stamp: 'JEA 10/25/2020 19:08:15'!
PASSED!

!testRun: #MarsRoverTest #test05RoverMovesBackwardsWhenFacingNorth stamp: 'JEA 10/25/2020 19:08:15'!
PASSED!

!testRun: #MarsRoverTest #test06RoverRotatesLeftWhenFacingNorth stamp: 'JEA 10/25/2020 19:08:15'!
PASSED!

!testRun: #MarsRoverTest #test07RoverRotatesRightWhenFacingNorth stamp: 'JEA 10/25/2020 19:08:15'!
PASSED!

!testRun: #MarsRoverTest #test08RoverMovesForwardWhenFacingEast stamp: 'JEA 10/25/2020 19:08:15'!
PASSED!

!testRun: #MarsRoverTest #test09RoverMovesBackwardsWhenFacingEast stamp: 'JEA 10/25/2020 19:08:15'!
PASSED!

!testRun: #MarsRoverTest #test10RoverRotatesLeftWhenFacingEast stamp: 'JEA 10/25/2020 19:08:15'!
PASSED!

!testRun: #MarsRoverTest #test11RoverRotatesRightWhenFacingEast stamp: 'JEA 10/25/2020 19:08:15'!
PASSED!

!testRun: #MarsRoverTest #test12RoverMovesForwardWhenFacingSouth stamp: 'JEA 10/25/2020 19:08:15'!
PASSED!

!testRun: #MarsRoverTest #test13RoverMovesBackwardsWhenFacingSouth stamp: 'JEA 10/25/2020 19:08:15'!
PASSED!

!testRun: #MarsRoverTest #test14RoverRotatesLeftWhenFacingSouth stamp: 'JEA 10/25/2020 19:08:15'!
PASSED!

!testRun: #MarsRoverTest #test15RoverRotatesRightWhenFacingSouth stamp: 'JEA 10/25/2020 19:08:15'!
PASSED!

!testRun: #MarsRoverTest #test16RoverMovesForwardWhenFacingWest stamp: 'JEA 10/25/2020 19:08:15'!
PASSED!

!testRun: #MarsRoverTest #test17RoverMovesBackwardsWhenFacingWest stamp: 'JEA 10/25/2020 19:08:15'!
PASSED!

!testRun: #MarsRoverTest #test18RoverRotatesLeftWhenFacingWest stamp: 'JEA 10/25/2020 19:08:15'!
PASSED!

!testRun: #MarsRoverTest #test19RoverRotatesRightWhenFacingWest stamp: 'JEA 10/25/2020 19:08:15'!
PASSED!
!MarsRoverTest methodsFor: 'tests' stamp: 'JEA 10/25/2020 19:08:21' prior: 50872292!
test10RoverRotatesLeftWhenFacingEast
	| marsRover |
	marsRover := MarsRover at: initialPosition facing: $E.
	
	marsRover command: 'l'.
	
	self assert: (marsRover isFacing: $N).
	self assert: (marsRover isAt: initialPosition).! !
!MarsRoverTest methodsFor: 'tests' stamp: 'JEA 10/25/2020 19:08:24' prior: 50872301!
test11RoverRotatesRightWhenFacingEast
	| marsRover |
	marsRover := MarsRover at: initialPosition facing: $E.
	
	marsRover command: 'r'.
	
	self assert: (marsRover isFacing: $S).
	self assert: (marsRover isAt: initialPosition).! !
!MarsRoverTest methodsFor: 'tests' stamp: 'JEA 10/25/2020 19:08:28' prior: 50872621!
test14RoverRotatesLeftWhenFacingSouth
	| marsRover |
	marsRover := MarsRover at: initialPosition facing: $S.
	
	marsRover command: 'l'.
	
	self assert: (marsRover isFacing: $E).
	self assert: (marsRover isAt: initialPosition).! !
!MarsRoverTest methodsFor: 'tests' stamp: 'JEA 10/25/2020 19:08:31' prior: 50872824!
test15RoverRotatesRightWhenFacingSouth
	| marsRover |
	marsRover := MarsRover at: initialPosition facing: $S.
	
	marsRover command: 'r'.
	
	self assert: (marsRover isFacing: $W).
	self assert: (marsRover isAt: initialPosition).! !
!MarsRoverTest methodsFor: 'tests' stamp: 'JEA 10/25/2020 19:08:34' prior: 50873304!
test18RoverRotatesLeftWhenFacingWest
	| marsRover |
	marsRover := MarsRover at: initialPosition facing: $W.
	
	marsRover command: 'l'.
	
	self assert: (marsRover isFacing: $S).
	self assert: (marsRover isAt: initialPosition).! !
!MarsRoverTest methodsFor: 'tests' stamp: 'JEA 10/25/2020 19:08:37' prior: 50873422!
test19RoverRotatesRightWhenFacingWest
	| marsRover |
	marsRover := MarsRover at: initialPosition facing: $W.
	
	marsRover command: 'r'.
	
	self assert: (marsRover isFacing: $N).
	self assert: (marsRover isAt: initialPosition).! !

!testRun: #MarsRoverTest #test01NewRoverShouldBeAtInitializedPosition stamp: 'JEA 10/25/2020 19:08:38'!
PASSED!

!testRun: #MarsRoverTest #test02NewRoverShouldBeFacingInitializedDirection stamp: 'JEA 10/25/2020 19:08:38'!
PASSED!

!testRun: #MarsRoverTest #test03RoverCantBeInitializedWithInvalidDirection stamp: 'JEA 10/25/2020 19:08:38'!
PASSED!

!testRun: #MarsRoverTest #test04RoverMovesForwardWhenFacingNorth stamp: 'JEA 10/25/2020 19:08:38'!
PASSED!

!testRun: #MarsRoverTest #test05RoverMovesBackwardsWhenFacingNorth stamp: 'JEA 10/25/2020 19:08:38'!
PASSED!

!testRun: #MarsRoverTest #test06RoverRotatesLeftWhenFacingNorth stamp: 'JEA 10/25/2020 19:08:38'!
PASSED!

!testRun: #MarsRoverTest #test07RoverRotatesRightWhenFacingNorth stamp: 'JEA 10/25/2020 19:08:38'!
PASSED!

!testRun: #MarsRoverTest #test08RoverMovesForwardWhenFacingEast stamp: 'JEA 10/25/2020 19:08:38'!
PASSED!

!testRun: #MarsRoverTest #test09RoverMovesBackwardsWhenFacingEast stamp: 'JEA 10/25/2020 19:08:38'!
PASSED!

!testRun: #MarsRoverTest #test10RoverRotatesLeftWhenFacingEast stamp: 'JEA 10/25/2020 19:08:38'!
PASSED!

!testRun: #MarsRoverTest #test11RoverRotatesRightWhenFacingEast stamp: 'JEA 10/25/2020 19:08:38'!
PASSED!

!testRun: #MarsRoverTest #test12RoverMovesForwardWhenFacingSouth stamp: 'JEA 10/25/2020 19:08:38'!
PASSED!

!testRun: #MarsRoverTest #test13RoverMovesBackwardsWhenFacingSouth stamp: 'JEA 10/25/2020 19:08:38'!
PASSED!

!testRun: #MarsRoverTest #test14RoverRotatesLeftWhenFacingSouth stamp: 'JEA 10/25/2020 19:08:38'!
PASSED!

!testRun: #MarsRoverTest #test15RoverRotatesRightWhenFacingSouth stamp: 'JEA 10/25/2020 19:08:38'!
PASSED!

!testRun: #MarsRoverTest #test16RoverMovesForwardWhenFacingWest stamp: 'JEA 10/25/2020 19:08:38'!
PASSED!

!testRun: #MarsRoverTest #test17RoverMovesBackwardsWhenFacingWest stamp: 'JEA 10/25/2020 19:08:38'!
PASSED!

!testRun: #MarsRoverTest #test18RoverRotatesLeftWhenFacingWest stamp: 'JEA 10/25/2020 19:08:38'!
PASSED!

!testRun: #MarsRoverTest #test19RoverRotatesRightWhenFacingWest stamp: 'JEA 10/25/2020 19:08:38'!
PASSED!
!MarsRoverTest methodsFor: 'tests' stamp: 'JEA 10/25/2020 19:08:59' prior: 50871825!
test08RoverMovesForwardWhenFacingEast
	| marsRover |
	marsRover := MarsRover at: initialPosition facing: $E.
	
	marsRover command: 'f'.
	
	self assert: (marsRover isAt: initialPosition + (1@0)).
	self assert: (marsRover isFacing: $E).	! !
!MarsRoverTest methodsFor: 'tests' stamp: 'JEA 10/25/2020 19:09:07' prior: 50871907!
test09RoverMovesBackwardsWhenFacingEast
	| marsRover |
	marsRover := MarsRover at: initialPosition facing: $E.
	
	marsRover command: 'b'.
	
	self assert: (marsRover isAt: initialPosition - (1@0)).
	self assert: (marsRover isFacing: $E).	! !
!MarsRoverTest methodsFor: 'tests' stamp: 'JEA 10/25/2020 19:09:18' prior: 50872217!
test12RoverMovesForwardWhenFacingSouth
	| marsRover |
	marsRover := MarsRover at: initialPosition facing: $S.
	
	marsRover command: 'f'.
	
	self assert: (marsRover isAt: initialPosition - (0@1)).
	self assert: (marsRover isFacing: $S).	! !
!MarsRoverTest methodsFor: 'tests' stamp: 'JEA 10/25/2020 19:09:25' prior: 50872489!
test13RoverMovesBackwardsWhenFacingSouth
	| marsRover |
	marsRover := MarsRover at: initialPosition facing: $S.
	
	marsRover command: 'b'.
	
	self assert: (marsRover isAt: initialPosition + (0@1)).
	self assert: (marsRover isFacing: $S).	! !
!MarsRoverTest methodsFor: 'tests' stamp: 'JEA 10/25/2020 19:09:33' prior: 50872972!
test16RoverMovesForwardWhenFacingWest
	| marsRover |
	marsRover := MarsRover at: initialPosition facing: $W.
	
	marsRover command: 'f'.
	
	self assert: (marsRover isAt: initialPosition - (1@0)).
	self assert: (marsRover isFacing: $W).	! !
!MarsRoverTest methodsFor: 'tests' stamp: 'JEA 10/25/2020 19:09:39' prior: 50873129!
test17RoverMovesBackwardsWhenFacingWest
	| marsRover |
	marsRover := MarsRover at: initialPosition facing: $W.
	
	marsRover command: 'b'.
	
	self assert: (marsRover isAt: initialPosition + (1@0)).
	self assert: (marsRover isFacing: $W).	! !

!testRun: #MarsRoverTest #test01NewRoverShouldBeAtInitializedPosition stamp: 'JEA 10/25/2020 19:09:40'!
PASSED!

!testRun: #MarsRoverTest #test02NewRoverShouldBeFacingInitializedDirection stamp: 'JEA 10/25/2020 19:09:40'!
PASSED!

!testRun: #MarsRoverTest #test03RoverCantBeInitializedWithInvalidDirection stamp: 'JEA 10/25/2020 19:09:40'!
PASSED!

!testRun: #MarsRoverTest #test04RoverMovesForwardWhenFacingNorth stamp: 'JEA 10/25/2020 19:09:40'!
PASSED!

!testRun: #MarsRoverTest #test05RoverMovesBackwardsWhenFacingNorth stamp: 'JEA 10/25/2020 19:09:40'!
PASSED!

!testRun: #MarsRoverTest #test06RoverRotatesLeftWhenFacingNorth stamp: 'JEA 10/25/2020 19:09:40'!
PASSED!

!testRun: #MarsRoverTest #test07RoverRotatesRightWhenFacingNorth stamp: 'JEA 10/25/2020 19:09:40'!
PASSED!

!testRun: #MarsRoverTest #test08RoverMovesForwardWhenFacingEast stamp: 'JEA 10/25/2020 19:09:40'!
PASSED!

!testRun: #MarsRoverTest #test09RoverMovesBackwardsWhenFacingEast stamp: 'JEA 10/25/2020 19:09:40'!
PASSED!

!testRun: #MarsRoverTest #test10RoverRotatesLeftWhenFacingEast stamp: 'JEA 10/25/2020 19:09:40'!
PASSED!

!testRun: #MarsRoverTest #test11RoverRotatesRightWhenFacingEast stamp: 'JEA 10/25/2020 19:09:40'!
PASSED!

!testRun: #MarsRoverTest #test12RoverMovesForwardWhenFacingSouth stamp: 'JEA 10/25/2020 19:09:40'!
PASSED!

!testRun: #MarsRoverTest #test13RoverMovesBackwardsWhenFacingSouth stamp: 'JEA 10/25/2020 19:09:40'!
PASSED!

!testRun: #MarsRoverTest #test14RoverRotatesLeftWhenFacingSouth stamp: 'JEA 10/25/2020 19:09:40'!
PASSED!

!testRun: #MarsRoverTest #test15RoverRotatesRightWhenFacingSouth stamp: 'JEA 10/25/2020 19:09:40'!
PASSED!

!testRun: #MarsRoverTest #test16RoverMovesForwardWhenFacingWest stamp: 'JEA 10/25/2020 19:09:40'!
PASSED!

!testRun: #MarsRoverTest #test17RoverMovesBackwardsWhenFacingWest stamp: 'JEA 10/25/2020 19:09:40'!
PASSED!

!testRun: #MarsRoverTest #test18RoverRotatesLeftWhenFacingWest stamp: 'JEA 10/25/2020 19:09:40'!
PASSED!

!testRun: #MarsRoverTest #test19RoverRotatesRightWhenFacingWest stamp: 'JEA 10/25/2020 19:09:40'!
PASSED!

!classDefinition: #MarsRoverTest category: 'MarsRover' stamp: 'JEA 10/25/2020 19:11:22'!
TestCase subclass: #MarsRoverTest
	instanceVariableNames: 'cardinalCenter initialDirection'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover'!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'JEA 10/25/2020 19:11:22' prior: 50873995!
test08RoverMovesForwardWhenFacingEast
	| marsRover |
	marsRover := MarsRover at: cardinalCenter facing: $E.
	
	marsRover command: 'f'.
	
	self assert: (marsRover isAt: cardinalCenter + (1@0)).
	self assert: (marsRover isFacing: $E).	! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'JEA 10/25/2020 19:11:22' prior: 50873890!
test14RoverRotatesLeftWhenFacingSouth
	| marsRover |
	marsRover := MarsRover at: cardinalCenter facing: $S.
	
	marsRover command: 'l'.
	
	self assert: (marsRover isFacing: $E).
	self assert: (marsRover isAt: cardinalCenter).! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'JEA 10/25/2020 19:11:22' prior: 50874017!
test12RoverMovesForwardWhenFacingSouth
	| marsRover |
	marsRover := MarsRover at: cardinalCenter facing: $S.
	
	marsRover command: 'f'.
	
	self assert: (marsRover isAt: cardinalCenter - (0@1)).
	self assert: (marsRover isFacing: $S).	! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'JEA 10/25/2020 19:11:22' prior: 50871194!
test02NewRoverShouldBeFacingInitializedDirection

	self assert: ((MarsRover at: cardinalCenter facing: initialDirection) isFacing: initialDirection).! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'JEA 10/25/2020 19:11:22' prior: 50871098 overrides: 16927572!
setUp

	cardinalCenter := 0@0.
	initialDirection := $N.! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'JEA 10/25/2020 19:11:22' prior: 50873900!
test15RoverRotatesRightWhenFacingSouth
	| marsRover |
	marsRover := MarsRover at: cardinalCenter facing: $S.
	
	marsRover command: 'r'.
	
	self assert: (marsRover isFacing: $W).
	self assert: (marsRover isAt: cardinalCenter).! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'JEA 10/25/2020 19:11:22' prior: 50874050!
test17RoverMovesBackwardsWhenFacingWest
	| marsRover |
	marsRover := MarsRover at: cardinalCenter facing: $W.
	
	marsRover command: 'b'.
	
	self assert: (marsRover isAt: cardinalCenter + (1@0)).
	self assert: (marsRover isFacing: $W).	! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'JEA 10/25/2020 19:11:22' prior: 50873880!
test11RoverRotatesRightWhenFacingEast
	| marsRover |
	marsRover := MarsRover at: cardinalCenter facing: $E.
	
	marsRover command: 'r'.
	
	self assert: (marsRover isFacing: $S).
	self assert: (marsRover isAt: cardinalCenter).! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'JEA 10/25/2020 19:11:22' prior: 50873920!
test19RoverRotatesRightWhenFacingWest
	| marsRover |
	marsRover := MarsRover at: cardinalCenter facing: $W.
	
	marsRover command: 'r'.
	
	self assert: (marsRover isFacing: $N).
	self assert: (marsRover isAt: cardinalCenter).! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'JEA 10/25/2020 19:11:22' prior: 50873625!
test04RoverMovesForwardWhenFacingNorth
	| marsRover |
	marsRover := MarsRover at: cardinalCenter facing: $N.
	
	marsRover command: 'f'.
	
	self assert: (marsRover isAt: cardinalCenter + (0@1)).
	self assert: (marsRover isFacing: $N).! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'JEA 10/25/2020 19:11:22' prior: 50874006!
test09RoverMovesBackwardsWhenFacingEast
	| marsRover |
	marsRover := MarsRover at: cardinalCenter facing: $E.
	
	marsRover command: 'b'.
	
	self assert: (marsRover isAt: cardinalCenter - (1@0)).
	self assert: (marsRover isFacing: $E).	! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'JEA 10/25/2020 19:11:22' prior: 50871186!
test01NewRoverShouldBeAtInitializedPosition

	self assert: ((MarsRover at: cardinalCenter facing: initialDirection) isAt: cardinalCenter).! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'JEA 10/25/2020 19:11:22' prior: 50874028!
test13RoverMovesBackwardsWhenFacingSouth
	| marsRover |
	marsRover := MarsRover at: cardinalCenter facing: $S.
	
	marsRover command: 'b'.
	
	self assert: (marsRover isAt: cardinalCenter + (0@1)).
	self assert: (marsRover isFacing: $S).	! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'JEA 10/25/2020 19:11:22' prior: 50873910!
test18RoverRotatesLeftWhenFacingWest
	| marsRover |
	marsRover := MarsRover at: cardinalCenter facing: $W.
	
	marsRover command: 'l'.
	
	self assert: (marsRover isFacing: $S).
	self assert: (marsRover isAt: cardinalCenter).! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'JEA 10/25/2020 19:11:22' prior: 50873795!
test07RoverRotatesRightWhenFacingNorth
	| marsRover |
	marsRover := MarsRover at: cardinalCenter facing: $N.
	
	marsRover command: 'r'.
	
	self assert: (marsRover isFacing: $E).
	self assert: (marsRover isAt: cardinalCenter).! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'JEA 10/25/2020 19:11:22' prior: 50874039!
test16RoverMovesForwardWhenFacingWest
	| marsRover |
	marsRover := MarsRover at: cardinalCenter facing: $W.
	
	marsRover command: 'f'.
	
	self assert: (marsRover isAt: cardinalCenter - (1@0)).
	self assert: (marsRover isFacing: $W).	! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'JEA 10/25/2020 19:11:22' prior: 50871417!
test03RoverCantBeInitializedWithInvalidDirection

	self should: [MarsRover at: cardinalCenter facing: $Q] 
		raise: Error 
		withMessageText: 'Invalid direction, only N, S, E, W allowed.'! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'JEA 10/25/2020 19:11:22' prior: 50873700!
test05RoverMovesBackwardsWhenFacingNorth
	| marsRover |
	marsRover := MarsRover at: cardinalCenter facing: $N.
	
	marsRover command: 'b'.
	
	self assert: (marsRover isAt: cardinalCenter - (0@1)).
	self assert: (marsRover isFacing: $N).! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'JEA 10/25/2020 19:11:22' prior: 50873785!
test06RoverRotatesLeftWhenFacingNorth
	| marsRover |
	marsRover := MarsRover at: cardinalCenter facing: $N.
	
	marsRover command: 'l'.
	
	self assert: (marsRover isFacing: $W).
	self assert: (marsRover isAt: cardinalCenter).! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'JEA 10/25/2020 19:11:22' prior: 50873870!
test10RoverRotatesLeftWhenFacingEast
	| marsRover |
	marsRover := MarsRover at: cardinalCenter facing: $E.
	
	marsRover command: 'l'.
	
	self assert: (marsRover isFacing: $N).
	self assert: (marsRover isAt: cardinalCenter).! !

!testRun: #MarsRoverTest #test01NewRoverShouldBeAtInitializedPosition stamp: 'JEA 10/25/2020 19:11:25'!
PASSED!

!testRun: #MarsRoverTest #test02NewRoverShouldBeFacingInitializedDirection stamp: 'JEA 10/25/2020 19:11:25'!
PASSED!

!testRun: #MarsRoverTest #test03RoverCantBeInitializedWithInvalidDirection stamp: 'JEA 10/25/2020 19:11:25'!
PASSED!

!testRun: #MarsRoverTest #test04RoverMovesForwardWhenFacingNorth stamp: 'JEA 10/25/2020 19:11:25'!
PASSED!

!testRun: #MarsRoverTest #test05RoverMovesBackwardsWhenFacingNorth stamp: 'JEA 10/25/2020 19:11:25'!
PASSED!

!testRun: #MarsRoverTest #test06RoverRotatesLeftWhenFacingNorth stamp: 'JEA 10/25/2020 19:11:25'!
PASSED!

!testRun: #MarsRoverTest #test07RoverRotatesRightWhenFacingNorth stamp: 'JEA 10/25/2020 19:11:25'!
PASSED!

!testRun: #MarsRoverTest #test08RoverMovesForwardWhenFacingEast stamp: 'JEA 10/25/2020 19:11:25'!
PASSED!

!testRun: #MarsRoverTest #test09RoverMovesBackwardsWhenFacingEast stamp: 'JEA 10/25/2020 19:11:25'!
PASSED!

!testRun: #MarsRoverTest #test10RoverRotatesLeftWhenFacingEast stamp: 'JEA 10/25/2020 19:11:25'!
PASSED!

!testRun: #MarsRoverTest #test11RoverRotatesRightWhenFacingEast stamp: 'JEA 10/25/2020 19:11:25'!
PASSED!

!testRun: #MarsRoverTest #test12RoverMovesForwardWhenFacingSouth stamp: 'JEA 10/25/2020 19:11:25'!
PASSED!

!testRun: #MarsRoverTest #test13RoverMovesBackwardsWhenFacingSouth stamp: 'JEA 10/25/2020 19:11:25'!
PASSED!

!testRun: #MarsRoverTest #test14RoverRotatesLeftWhenFacingSouth stamp: 'JEA 10/25/2020 19:11:25'!
PASSED!

!testRun: #MarsRoverTest #test15RoverRotatesRightWhenFacingSouth stamp: 'JEA 10/25/2020 19:11:25'!
PASSED!

!testRun: #MarsRoverTest #test16RoverMovesForwardWhenFacingWest stamp: 'JEA 10/25/2020 19:11:25'!
PASSED!

!testRun: #MarsRoverTest #test17RoverMovesBackwardsWhenFacingWest stamp: 'JEA 10/25/2020 19:11:25'!
PASSED!

!testRun: #MarsRoverTest #test18RoverRotatesLeftWhenFacingWest stamp: 'JEA 10/25/2020 19:11:25'!
PASSED!

!testRun: #MarsRoverTest #test19RoverRotatesRightWhenFacingWest stamp: 'JEA 10/25/2020 19:11:25'!
PASSED!

!classDefinition: #MarsRoverTest category: 'MarsRover' stamp: 'JEA 10/25/2020 19:13:42'!
TestCase subclass: #MarsRoverTest
	instanceVariableNames: 'cartesianCenter initialDirection'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover'!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'JEA 10/25/2020 19:13:42' prior: 50874134!
test08RoverMovesForwardWhenFacingEast
	| marsRover |
	marsRover := MarsRover at: cartesianCenter facing: $E.
	
	marsRover command: 'f'.
	
	self assert: (marsRover isAt: cartesianCenter + (1@0)).
	self assert: (marsRover isFacing: $E).	! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'JEA 10/25/2020 19:13:42' prior: 50874145!
test14RoverRotatesLeftWhenFacingSouth
	| marsRover |
	marsRover := MarsRover at: cartesianCenter facing: $S.
	
	marsRover command: 'l'.
	
	self assert: (marsRover isFacing: $E).
	self assert: (marsRover isAt: cartesianCenter).! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'JEA 10/25/2020 19:13:42' prior: 50874156!
test12RoverMovesForwardWhenFacingSouth
	| marsRover |
	marsRover := MarsRover at: cartesianCenter facing: $S.
	
	marsRover command: 'f'.
	
	self assert: (marsRover isAt: cartesianCenter - (0@1)).
	self assert: (marsRover isFacing: $S).	! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'JEA 10/25/2020 19:13:42' prior: 50874167!
test02NewRoverShouldBeFacingInitializedDirection

	self assert: ((MarsRover at: cartesianCenter facing: initialDirection) isFacing: initialDirection).! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'JEA 10/25/2020 19:13:42' prior: 50874176 overrides: 16927572!
setUp

	cartesianCenter := 0@0.
	initialDirection := $N.! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'JEA 10/25/2020 19:13:42' prior: 50874181!
test15RoverRotatesRightWhenFacingSouth
	| marsRover |
	marsRover := MarsRover at: cartesianCenter facing: $S.
	
	marsRover command: 'r'.
	
	self assert: (marsRover isFacing: $W).
	self assert: (marsRover isAt: cartesianCenter).! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'JEA 10/25/2020 19:13:42' prior: 50874192!
test17RoverMovesBackwardsWhenFacingWest
	| marsRover |
	marsRover := MarsRover at: cartesianCenter facing: $W.
	
	marsRover command: 'b'.
	
	self assert: (marsRover isAt: cartesianCenter + (1@0)).
	self assert: (marsRover isFacing: $W).	! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'JEA 10/25/2020 19:13:42' prior: 50874203!
test11RoverRotatesRightWhenFacingEast
	| marsRover |
	marsRover := MarsRover at: cartesianCenter facing: $E.
	
	marsRover command: 'r'.
	
	self assert: (marsRover isFacing: $S).
	self assert: (marsRover isAt: cartesianCenter).! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'JEA 10/25/2020 19:13:42' prior: 50874214!
test19RoverRotatesRightWhenFacingWest
	| marsRover |
	marsRover := MarsRover at: cartesianCenter facing: $W.
	
	marsRover command: 'r'.
	
	self assert: (marsRover isFacing: $N).
	self assert: (marsRover isAt: cartesianCenter).! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'JEA 10/25/2020 19:13:42' prior: 50874225!
test04RoverMovesForwardWhenFacingNorth
	| marsRover |
	marsRover := MarsRover at: cartesianCenter facing: $N.
	
	marsRover command: 'f'.
	
	self assert: (marsRover isAt: cartesianCenter + (0@1)).
	self assert: (marsRover isFacing: $N).! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'JEA 10/25/2020 19:13:42' prior: 50874236!
test09RoverMovesBackwardsWhenFacingEast
	| marsRover |
	marsRover := MarsRover at: cartesianCenter facing: $E.
	
	marsRover command: 'b'.
	
	self assert: (marsRover isAt: cartesianCenter - (1@0)).
	self assert: (marsRover isFacing: $E).	! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'JEA 10/25/2020 19:13:42' prior: 50874247!
test01NewRoverShouldBeAtInitializedPosition

	self assert: ((MarsRover at: cartesianCenter facing: initialDirection) isAt: cartesianCenter).! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'JEA 10/25/2020 19:13:43' prior: 50874255!
test13RoverMovesBackwardsWhenFacingSouth
	| marsRover |
	marsRover := MarsRover at: cartesianCenter facing: $S.
	
	marsRover command: 'b'.
	
	self assert: (marsRover isAt: cartesianCenter + (0@1)).
	self assert: (marsRover isFacing: $S).	! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'JEA 10/25/2020 19:13:43' prior: 50874266!
test18RoverRotatesLeftWhenFacingWest
	| marsRover |
	marsRover := MarsRover at: cartesianCenter facing: $W.
	
	marsRover command: 'l'.
	
	self assert: (marsRover isFacing: $S).
	self assert: (marsRover isAt: cartesianCenter).! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'JEA 10/25/2020 19:13:43' prior: 50874277!
test07RoverRotatesRightWhenFacingNorth
	| marsRover |
	marsRover := MarsRover at: cartesianCenter facing: $N.
	
	marsRover command: 'r'.
	
	self assert: (marsRover isFacing: $E).
	self assert: (marsRover isAt: cartesianCenter).! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'JEA 10/25/2020 19:13:43' prior: 50874288!
test16RoverMovesForwardWhenFacingWest
	| marsRover |
	marsRover := MarsRover at: cartesianCenter facing: $W.
	
	marsRover command: 'f'.
	
	self assert: (marsRover isAt: cartesianCenter - (1@0)).
	self assert: (marsRover isFacing: $W).	! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'JEA 10/25/2020 19:13:43' prior: 50874299!
test03RoverCantBeInitializedWithInvalidDirection

	self should: [MarsRover at: cartesianCenter facing: $Q] 
		raise: Error 
		withMessageText: 'Invalid direction, only N, S, E, W allowed.'! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'JEA 10/25/2020 19:13:43' prior: 50874309!
test05RoverMovesBackwardsWhenFacingNorth
	| marsRover |
	marsRover := MarsRover at: cartesianCenter facing: $N.
	
	marsRover command: 'b'.
	
	self assert: (marsRover isAt: cartesianCenter - (0@1)).
	self assert: (marsRover isFacing: $N).! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'JEA 10/25/2020 19:13:43' prior: 50874320!
test06RoverRotatesLeftWhenFacingNorth
	| marsRover |
	marsRover := MarsRover at: cartesianCenter facing: $N.
	
	marsRover command: 'l'.
	
	self assert: (marsRover isFacing: $W).
	self assert: (marsRover isAt: cartesianCenter).! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'JEA 10/25/2020 19:13:43' prior: 50874331!
test10RoverRotatesLeftWhenFacingEast
	| marsRover |
	marsRover := MarsRover at: cartesianCenter facing: $E.
	
	marsRover command: 'l'.
	
	self assert: (marsRover isFacing: $N).
	self assert: (marsRover isAt: cartesianCenter).! !

!testRun: #MarsRoverTest #test01NewRoverShouldBeAtInitializedPosition stamp: 'JEA 10/25/2020 19:13:47'!
PASSED!

!testRun: #MarsRoverTest #test02NewRoverShouldBeFacingInitializedDirection stamp: 'JEA 10/25/2020 19:13:47'!
PASSED!

!testRun: #MarsRoverTest #test03RoverCantBeInitializedWithInvalidDirection stamp: 'JEA 10/25/2020 19:13:47'!
PASSED!

!testRun: #MarsRoverTest #test04RoverMovesForwardWhenFacingNorth stamp: 'JEA 10/25/2020 19:13:47'!
PASSED!

!testRun: #MarsRoverTest #test05RoverMovesBackwardsWhenFacingNorth stamp: 'JEA 10/25/2020 19:13:47'!
PASSED!

!testRun: #MarsRoverTest #test06RoverRotatesLeftWhenFacingNorth stamp: 'JEA 10/25/2020 19:13:47'!
PASSED!

!testRun: #MarsRoverTest #test07RoverRotatesRightWhenFacingNorth stamp: 'JEA 10/25/2020 19:13:47'!
PASSED!

!testRun: #MarsRoverTest #test08RoverMovesForwardWhenFacingEast stamp: 'JEA 10/25/2020 19:13:47'!
PASSED!

!testRun: #MarsRoverTest #test09RoverMovesBackwardsWhenFacingEast stamp: 'JEA 10/25/2020 19:13:47'!
PASSED!

!testRun: #MarsRoverTest #test10RoverRotatesLeftWhenFacingEast stamp: 'JEA 10/25/2020 19:13:47'!
PASSED!

!testRun: #MarsRoverTest #test11RoverRotatesRightWhenFacingEast stamp: 'JEA 10/25/2020 19:13:47'!
PASSED!

!testRun: #MarsRoverTest #test12RoverMovesForwardWhenFacingSouth stamp: 'JEA 10/25/2020 19:13:47'!
PASSED!

!testRun: #MarsRoverTest #test13RoverMovesBackwardsWhenFacingSouth stamp: 'JEA 10/25/2020 19:13:47'!
PASSED!

!testRun: #MarsRoverTest #test14RoverRotatesLeftWhenFacingSouth stamp: 'JEA 10/25/2020 19:13:47'!
PASSED!

!testRun: #MarsRoverTest #test15RoverRotatesRightWhenFacingSouth stamp: 'JEA 10/25/2020 19:13:47'!
PASSED!

!testRun: #MarsRoverTest #test16RoverMovesForwardWhenFacingWest stamp: 'JEA 10/25/2020 19:13:47'!
PASSED!

!testRun: #MarsRoverTest #test17RoverMovesBackwardsWhenFacingWest stamp: 'JEA 10/25/2020 19:13:47'!
PASSED!

!testRun: #MarsRoverTest #test18RoverRotatesLeftWhenFacingWest stamp: 'JEA 10/25/2020 19:13:47'!
PASSED!

!testRun: #MarsRoverTest #test19RoverRotatesRightWhenFacingWest stamp: 'JEA 10/25/2020 19:13:47'!
PASSED!

----SNAPSHOT----(25 October 2020 19:16:13) CuisUniversity-4384.image priorSource: 17249806!

----SNAPSHOT----(25 October 2020 19:16:14) CuisUniversity-4384.image priorSource: 17377117!
!MarsRover methodsFor: 'movement' stamp: 'JEA 10/25/2020 19:17:19' prior: 50873508!
command: aCommandSequence

	(aCommandSequence = 'f')
		ifTrue: [
			(orientation = $N) ifTrue: [position := position + (0@1). ^self].
			(orientation = $E) ifTrue: [position := position + (1@0). ^self].
			(orientation = $S) ifTrue: [position := position - (0@1). ^self].
			(orientation = $W) ifTrue: [position := position - (1@0). ^self].
		].
		
	(aCommandSequence = 'b')
		ifTrue: [
			(orientation = $N) ifTrue: [position := position - (0@1). ^self].
			(orientation = $E) ifTrue: [position := position - (1@0). ^self].
			(orientation = $S) ifTrue: [position := position + (0@1). ^self].
			(orientation = $W) ifTrue: [position := position + (1@0). ^self].
		].
		
	(aCommandSequence = 'l')
		ifTrue: [
			(orientation = $N) ifTrue: [orientation := $W. ^self].
			(orientation = $E) ifTrue: [orientation := $N. ^self].
			(orientation = $S) ifTrue: [orientation := $E. ^self].
			(orientation = $W) ifTrue: [orientation := $S. ^self].
		].

	(aCommandSequence = 'r')
		ifTrue: [
			(orientation = $N) ifTrue: [orientation := $E. ^self].
			(orientation = $E) ifTrue: [orientation := $S. ^self].
			(orientation = $S) ifTrue: [orientation := $W. ^self].
			(orientation = $W) ifTrue: [orientation := $N. ^self].
		].	! !
!MarsRover methodsFor: 'testing' stamp: 'JEA 10/25/2020 19:18:02' prior: 50870827!
isFacing: anOrientation

	^anOrientation = orientation.! !
!MarsRover methodsFor: 'initialization' stamp: 'JEA 10/25/2020 19:18:11' prior: 50871382!
placeAt: aPoint facing: anOrientation
	| supportedDirections |
	supportedDirections := OrderedCollection with: $N with: $S with: $W with: $E.
	
	(supportedDirections includes: anOrientation) ifFalse: [self error: self class invalidDirectionErrorMessage].
	
	position := aPoint.
	orientation := anOrientation.! !

!classDefinition: #MarsRoverTest category: 'MarsRover' stamp: 'JEA 10/25/2020 19:18:45'!
TestCase subclass: #MarsRoverTest
	instanceVariableNames: 'cartesianCenter initialOrientation'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover'!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'JEA 10/25/2020 19:18:46' prior: 50874456 overrides: 16927572!
setUp

	cartesianCenter := 0@0.
	initialOrientation := $N.! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'JEA 10/25/2020 19:18:46' prior: 50874527!
test01NewRoverShouldBeAtInitializedPosition

	self assert: ((MarsRover at: cartesianCenter facing: initialOrientation) isAt: cartesianCenter).! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'JEA 10/25/2020 19:18:46' prior: 50874447!
test02NewRoverShouldBeFacingInitializedDirection

	self assert: ((MarsRover at: cartesianCenter facing: initialOrientation) isFacing: initialOrientation).! !

Object subclass: #Orientation
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover'!

!classDefinition: #Orientation category: 'MarsRover' stamp: 'JEA 10/25/2020 19:19:03'!
Object subclass: #Orientation
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover'!

Orientation subclass: #North
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover'!

!classDefinition: #North category: 'MarsRover' stamp: 'JEA 10/25/2020 19:19:43'!
Orientation subclass: #North
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover'!

Orientation subclass: #South
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover'!

!classDefinition: #South category: 'MarsRover' stamp: 'JEA 10/25/2020 19:19:47'!
Orientation subclass: #South
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover'!

Orientation subclass: #West
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover'!

!classDefinition: #West category: 'MarsRover' stamp: 'JEA 10/25/2020 19:19:51'!
Orientation subclass: #West
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover'!

Orientation subclass: #East
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover'!

!classDefinition: #East category: 'MarsRover' stamp: 'JEA 10/25/2020 19:19:53'!
Orientation subclass: #East
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover'!
!MarsRover class methodsFor: 'instance creation' stamp: 'JEA 10/25/2020 19:20:50' prior: 50870745!
at: aPoint facing: anOrientation

	^self basicNew placeAt: aPoint facing: anOrientation.! !
!MarsRover methodsFor: 'initialization' stamp: 'JEA 10/25/2020 19:21:26' prior: 50874738!
placeAt: aPoint facing: anOrientation
	| supportedDirections |
	supportedDirections := OrderedCollection with: North with: South with: West with: East.
	
	(supportedDirections includes: anOrientation) ifFalse: [self error: self class invalidDirectionErrorMessage].
	
	position := aPoint.
	orientation := anOrientation.! !
!MarsRover methodsFor: 'movement' stamp: 'JEA 10/25/2020 19:22:11' prior: 50874692!
command: aCommandSequence

	(aCommandSequence = 'f')
		ifTrue: [
			(orientation = North) ifTrue: [position := position + (0@1). ^self].
			(orientation = $E) ifTrue: [position := position + (1@0). ^self].
			(orientation = $S) ifTrue: [position := position - (0@1). ^self].
			(orientation = $W) ifTrue: [position := position - (1@0). ^self].
		].
		
	(aCommandSequence = 'b')
		ifTrue: [
			(orientation = North) ifTrue: [position := position - (0@1). ^self].
			(orientation = $E) ifTrue: [position := position - (1@0). ^self].
			(orientation = $S) ifTrue: [position := position + (0@1). ^self].
			(orientation = $W) ifTrue: [position := position + (1@0). ^self].
		].
		
	(aCommandSequence = 'l')
		ifTrue: [
			(orientation = North) ifTrue: [orientation := $W. ^self].
			(orientation = $E) ifTrue: [orientation := North. ^self].
			(orientation = $S) ifTrue: [orientation := $E. ^self].
			(orientation = $W) ifTrue: [orientation := $S. ^self].
		].

	(aCommandSequence = 'r')
		ifTrue: [
			(orientation = North) ifTrue: [orientation := $E. ^self].
			(orientation = $E) ifTrue: [orientation := $S. ^self].
			(orientation = $S) ifTrue: [orientation := $W. ^self].
			(orientation = $W) ifTrue: [orientation := North. ^self].
		].	! !
!MarsRover methodsFor: 'movement' stamp: 'JEA 10/25/2020 19:22:17' prior: 50874854!
command: aCommandSequence

	(aCommandSequence = 'f')
		ifTrue: [
			(orientation = North) ifTrue: [position := position + (0@1). ^self].
			(orientation = $E) ifTrue: [position := position + (1@0). ^self].
			(orientation = $S) ifTrue: [position := position - (0@1). ^self].
			(orientation = $W) ifTrue: [position := position - (1@0). ^self].
		].
		
	(aCommandSequence = 'b')
		ifTrue: [
			(orientation = North) ifTrue: [position := position - (0@1). ^self].
			(orientation = $E) ifTrue: [position := position - (1@0). ^self].
			(orientation = $S) ifTrue: [position := position + (0@1). ^self].
			(orientation = $W) ifTrue: [position := position + (1@0). ^self].
		].
		
	(aCommandSequence = 'l')
		ifTrue: [
			(orientation = North) ifTrue: [orientation := $W. ^self].
			(orientation = East) ifTrue: [orientation := North. ^self].
			(orientation = $S) ifTrue: [orientation := $E. ^self].
			(orientation = $W) ifTrue: [orientation := $S. ^self].
		].

	(aCommandSequence = 'r')
		ifTrue: [
			(orientation = North) ifTrue: [orientation := $E. ^self].
			(orientation = $E) ifTrue: [orientation := $S. ^self].
			(orientation = $S) ifTrue: [orientation := $W. ^self].
			(orientation = $W) ifTrue: [orientation := North. ^self].
		].	! !
!MarsRover methodsFor: 'movement' stamp: 'JEA 10/25/2020 19:22:28' prior: 50874896!
command: aCommandSequence

	(aCommandSequence = 'f')
		ifTrue: [
			(orientation = North) ifTrue: [position := position + (0@1). ^self].
			(orientation = $E) ifTrue: [position := position + (1@0). ^self].
			(orientation = $S) ifTrue: [position := position - (0@1). ^self].
			(orientation = $W) ifTrue: [position := position - (1@0). ^self].
		].
		
	(aCommandSequence = 'b')
		ifTrue: [
			(orientation = North) ifTrue: [position := position - (0@1). ^self].
			(orientation = East) ifTrue: [position := position - (1@0). ^self].
			(orientation = $S) ifTrue: [position := position + (0@1). ^self].
			(orientation = $W) ifTrue: [position := position + (1@0). ^self].
		].
		
	(aCommandSequence = 'l')
		ifTrue: [
			(orientation = North) ifTrue: [orientation := $W. ^self].
			(orientation = East) ifTrue: [orientation := North. ^self].
			(orientation = $S) ifTrue: [orientation := $E. ^self].
			(orientation = $W) ifTrue: [orientation := $S. ^self].
		].

	(aCommandSequence = 'r')
		ifTrue: [
			(orientation = North) ifTrue: [orientation := $E. ^self].
			(orientation = $E) ifTrue: [orientation := $S. ^self].
			(orientation = $S) ifTrue: [orientation := $W. ^self].
			(orientation = $W) ifTrue: [orientation := North. ^self].
		].	! !
!MarsRover methodsFor: 'movement' stamp: 'JEA 10/25/2020 19:22:31' prior: 50874938!
command: aCommandSequence

	(aCommandSequence = 'f')
		ifTrue: [
			(orientation = North) ifTrue: [position := position + (0@1). ^self].
			(orientation = $E) ifTrue: [position := position + (1@0). ^self].
			(orientation = $S) ifTrue: [position := position - (0@1). ^self].
			(orientation = $W) ifTrue: [position := position - (1@0). ^self].
		].
		
	(aCommandSequence = 'b')
		ifTrue: [
			(orientation = North) ifTrue: [position := position - (0@1). ^self].
			(orientation = East) ifTrue: [position := position - (1@0). ^self].
			(orientation = $S) ifTrue: [position := position + (0@1). ^self].
			(orientation = $W) ifTrue: [position := position + (1@0). ^self].
		].
		
	(aCommandSequence = 'l')
		ifTrue: [
			(orientation = North) ifTrue: [orientation := $W. ^self].
			(orientation = East) ifTrue: [orientation := North. ^self].
			(orientation = $S) ifTrue: [orientation := East. ^self].
			(orientation = $W) ifTrue: [orientation := $S. ^self].
		].

	(aCommandSequence = 'r')
		ifTrue: [
			(orientation = North) ifTrue: [orientation := $E. ^self].
			(orientation = $E) ifTrue: [orientation := $S. ^self].
			(orientation = $S) ifTrue: [orientation := $W. ^self].
			(orientation = $W) ifTrue: [orientation := North. ^self].
		].	! !
!MarsRover methodsFor: 'movement' stamp: 'JEA 10/25/2020 19:22:33' prior: 50874980!
command: aCommandSequence

	(aCommandSequence = 'f')
		ifTrue: [
			(orientation = North) ifTrue: [position := position + (0@1). ^self].
			(orientation = $E) ifTrue: [position := position + (1@0). ^self].
			(orientation = $S) ifTrue: [position := position - (0@1). ^self].
			(orientation = $W) ifTrue: [position := position - (1@0). ^self].
		].
		
	(aCommandSequence = 'b')
		ifTrue: [
			(orientation = North) ifTrue: [position := position - (0@1). ^self].
			(orientation = East) ifTrue: [position := position - (1@0). ^self].
			(orientation = $S) ifTrue: [position := position + (0@1). ^self].
			(orientation = $W) ifTrue: [position := position + (1@0). ^self].
		].
		
	(aCommandSequence = 'l')
		ifTrue: [
			(orientation = North) ifTrue: [orientation := $W. ^self].
			(orientation = East) ifTrue: [orientation := North. ^self].
			(orientation = $S) ifTrue: [orientation := East. ^self].
			(orientation = $W) ifTrue: [orientation := $S. ^self].
		].

	(aCommandSequence = 'r')
		ifTrue: [
			(orientation = North) ifTrue: [orientation := East. ^self].
			(orientation = $E) ifTrue: [orientation := $S. ^self].
			(orientation = $S) ifTrue: [orientation := $W. ^self].
			(orientation = $W) ifTrue: [orientation := North. ^self].
		].	! !
!MarsRover methodsFor: 'movement' stamp: 'JEA 10/25/2020 19:22:35' prior: 50875022!
command: aCommandSequence

	(aCommandSequence = 'f')
		ifTrue: [
			(orientation = North) ifTrue: [position := position + (0@1). ^self].
			(orientation = $E) ifTrue: [position := position + (1@0). ^self].
			(orientation = $S) ifTrue: [position := position - (0@1). ^self].
			(orientation = $W) ifTrue: [position := position - (1@0). ^self].
		].
		
	(aCommandSequence = 'b')
		ifTrue: [
			(orientation = North) ifTrue: [position := position - (0@1). ^self].
			(orientation = East) ifTrue: [position := position - (1@0). ^self].
			(orientation = $S) ifTrue: [position := position + (0@1). ^self].
			(orientation = $W) ifTrue: [position := position + (1@0). ^self].
		].
		
	(aCommandSequence = 'l')
		ifTrue: [
			(orientation = North) ifTrue: [orientation := $W. ^self].
			(orientation = East) ifTrue: [orientation := North. ^self].
			(orientation = $S) ifTrue: [orientation := East. ^self].
			(orientation = $W) ifTrue: [orientation := $S. ^self].
		].

	(aCommandSequence = 'r')
		ifTrue: [
			(orientation = North) ifTrue: [orientation := East. ^self].
			(orientation = East) ifTrue: [orientation := $S. ^self].
			(orientation = $S) ifTrue: [orientation := $W. ^self].
			(orientation = $W) ifTrue: [orientation := North. ^self].
		].	! !
!MarsRover methodsFor: 'movement' stamp: 'JEA 10/25/2020 19:22:38' prior: 50875064!
command: aCommandSequence

	(aCommandSequence = 'f')
		ifTrue: [
			(orientation = North) ifTrue: [position := position + (0@1). ^self].
			(orientation = $E) ifTrue: [position := position + (1@0). ^self].
			(orientation = $S) ifTrue: [position := position - (0@1). ^self].
			(orientation = $W) ifTrue: [position := position - (1@0). ^self].
		].
		
	(aCommandSequence = 'b')
		ifTrue: [
			(orientation = North) ifTrue: [position := position - (0@1). ^self].
			(orientation = East) ifTrue: [position := position - (1@0). ^self].
			(orientation = $S) ifTrue: [position := position + (0@1). ^self].
			(orientation = $W) ifTrue: [position := position + (1@0). ^self].
		].
		
	(aCommandSequence = 'l')
		ifTrue: [
			(orientation = North) ifTrue: [orientation := $W. ^self].
			(orientation = East) ifTrue: [orientation := North. ^self].
			(orientation = $S) ifTrue: [orientation := East. ^self].
			(orientation = $W) ifTrue: [orientation := $S. ^self].
		].

	(aCommandSequence = 'r')
		ifTrue: [
			(orientation = North) ifTrue: [orientation := East. ^self].
			(orientation = East) ifTrue: [orientation := $S. ^self].
			(orientation = South) ifTrue: [orientation := $W. ^self].
			(orientation = $W) ifTrue: [orientation := North. ^self].
		].	! !
!MarsRover methodsFor: 'movement' stamp: 'JEA 10/25/2020 19:22:42' prior: 50875106!
command: aCommandSequence

	(aCommandSequence = 'f')
		ifTrue: [
			(orientation = North) ifTrue: [position := position + (0@1). ^self].
			(orientation = $E) ifTrue: [position := position + (1@0). ^self].
			(orientation = $S) ifTrue: [position := position - (0@1). ^self].
			(orientation = $W) ifTrue: [position := position - (1@0). ^self].
		].
		
	(aCommandSequence = 'b')
		ifTrue: [
			(orientation = North) ifTrue: [position := position - (0@1). ^self].
			(orientation = East) ifTrue: [position := position - (1@0). ^self].
			(orientation = $S) ifTrue: [position := position + (0@1). ^self].
			(orientation = $W) ifTrue: [position := position + (1@0). ^self].
		].
		
	(aCommandSequence = 'l')
		ifTrue: [
			(orientation = North) ifTrue: [orientation := $W. ^self].
			(orientation = East) ifTrue: [orientation := North. ^self].
			(orientation = $S) ifTrue: [orientation := East. ^self].
			(orientation = $W) ifTrue: [orientation := South. ^self].
		].

	(aCommandSequence = 'r')
		ifTrue: [
			(orientation = North) ifTrue: [orientation := East. ^self].
			(orientation = East) ifTrue: [orientation := South. ^self].
			(orientation = South) ifTrue: [orientation := $W. ^self].
			(orientation = $W) ifTrue: [orientation := North. ^self].
		].	! !
!MarsRover methodsFor: 'movement' stamp: 'JEA 10/25/2020 19:22:46' prior: 50875148!
command: aCommandSequence

	(aCommandSequence = 'f')
		ifTrue: [
			(orientation = North) ifTrue: [position := position + (0@1). ^self].
			(orientation = $E) ifTrue: [position := position + (1@0). ^self].
			(orientation = $S) ifTrue: [position := position - (0@1). ^self].
			(orientation = $W) ifTrue: [position := position - (1@0). ^self].
		].
		
	(aCommandSequence = 'b')
		ifTrue: [
			(orientation = North) ifTrue: [position := position - (0@1). ^self].
			(orientation = East) ifTrue: [position := position - (1@0). ^self].
			(orientation = $S) ifTrue: [position := position + (0@1). ^self].
			(orientation = $W) ifTrue: [position := position + (1@0). ^self].
		].
		
	(aCommandSequence = 'l')
		ifTrue: [
			(orientation = North) ifTrue: [orientation := $W. ^self].
			(orientation = East) ifTrue: [orientation := North. ^self].
			(orientation = South) ifTrue: [orientation := East. ^self].
			(orientation = $W) ifTrue: [orientation := South. ^self].
		].

	(aCommandSequence = 'r')
		ifTrue: [
			(orientation = North) ifTrue: [orientation := East. ^self].
			(orientation = East) ifTrue: [orientation := South. ^self].
			(orientation = South) ifTrue: [orientation := $W. ^self].
			(orientation = $W) ifTrue: [orientation := North. ^self].
		].	! !
!MarsRover methodsFor: 'movement' stamp: 'JEA 10/25/2020 19:22:54' prior: 50875191!
command: aCommandSequence

	(aCommandSequence = 'f')
		ifTrue: [
			(orientation = North) ifTrue: [position := position + (0@1). ^self].
			(orientation = East) ifTrue: [position := position + (1@0). ^self].
			(orientation = South) ifTrue: [position := position - (0@1). ^self].
			(orientation = $W) ifTrue: [position := position - (1@0). ^self].
		].
		
	(aCommandSequence = 'b')
		ifTrue: [
			(orientation = North) ifTrue: [position := position - (0@1). ^self].
			(orientation = East) ifTrue: [position := position - (1@0). ^self].
			(orientation = South) ifTrue: [position := position + (0@1). ^self].
			(orientation = $W) ifTrue: [position := position + (1@0). ^self].
		].
		
	(aCommandSequence = 'l')
		ifTrue: [
			(orientation = North) ifTrue: [orientation := $W. ^self].
			(orientation = East) ifTrue: [orientation := North. ^self].
			(orientation = South) ifTrue: [orientation := East. ^self].
			(orientation = $W) ifTrue: [orientation := South. ^self].
		].

	(aCommandSequence = 'r')
		ifTrue: [
			(orientation = North) ifTrue: [orientation := East. ^self].
			(orientation = East) ifTrue: [orientation := South. ^self].
			(orientation = South) ifTrue: [orientation := $W. ^self].
			(orientation = $W) ifTrue: [orientation := North. ^self].
		].	! !
!MarsRover methodsFor: 'movement' stamp: 'JEA 10/25/2020 19:23:09' prior: 50875234!
command: aCommandSequence

	(aCommandSequence = 'f')
		ifTrue: [
			(orientation = North) ifTrue: [position := position + (0@1). ^self].
			(orientation = East) ifTrue: [position := position + (1@0). ^self].
			(orientation = South) ifTrue: [position := position - (0@1). ^self].
			(orientation = West) ifTrue: [position := position - (1@0). ^self].
		].
		
	(aCommandSequence = 'b')
		ifTrue: [
			(orientation = North) ifTrue: [position := position - (0@1). ^self].
			(orientation = East) ifTrue: [position := position - (1@0). ^self].
			(orientation = South) ifTrue: [position := position + (0@1). ^self].
			(orientation = West) ifTrue: [position := position + (1@0). ^self].
		].
		
	(aCommandSequence = 'l')
		ifTrue: [
			(orientation = North) ifTrue: [orientation := West. ^self].
			(orientation = East) ifTrue: [orientation := North. ^self].
			(orientation = South) ifTrue: [orientation := East. ^self].
			(orientation = West) ifTrue: [orientation := South. ^self].
		].

	(aCommandSequence = 'r')
		ifTrue: [
			(orientation = North) ifTrue: [orientation := East. ^self].
			(orientation = East) ifTrue: [orientation := South. ^self].
			(orientation = South) ifTrue: [orientation := West. ^self].
			(orientation = West) ifTrue: [orientation := North. ^self].
		].	! !

!methodRemoval: MarsRover class #invalidDirectionErrorMessage stamp: 'JEA 10/25/2020 19:23:25'!
invalidDirectionErrorMessage

	^'Invalid direction, only N, S, E, W allowed.'!
!MarsRoverTest methodsFor: 'setup' stamp: 'JEA 10/25/2020 19:23:42' prior: 50874760 overrides: 16927572!
setUp

	cartesianCenter := 0@0.
	initialOrientation := North.! !

!methodRemoval: MarsRoverTest #test03RoverCantBeInitializedWithInvalidDirection stamp: 'JEA 10/25/2020 19:23:55'!
test03RoverCantBeInitializedWithInvalidDirection

	self should: [MarsRover at: cartesianCenter facing: $Q] 
		raise: Error 
		withMessageText: 'Invalid direction, only N, S, E, W allowed.'!
!MarsRoverTest methodsFor: 'tests' stamp: 'JEA 10/25/2020 19:24:04' prior: 50874505!
test04RoverMovesForwardWhenFacingNorth
	| marsRover |
	marsRover := MarsRover at: cartesianCenter facing:North.
	
	marsRover command: 'f'.
	
	self assert: (marsRover isAt: cartesianCenter + (0@1)).
	self assert: (marsRover isFacing: North).! !
!MarsRoverTest methodsFor: 'tests' stamp: 'JEA 10/25/2020 19:24:08' prior: 50874589!
test05RoverMovesBackwardsWhenFacingNorth
	| marsRover |
	marsRover := MarsRover at: cartesianCenter facing: North.
	
	marsRover command: 'b'.
	
	self assert: (marsRover isAt: cartesianCenter - (0@1)).
	self assert: (marsRover isFacing: $N).! !
!MarsRoverTest methodsFor: 'tests' stamp: 'JEA 10/25/2020 19:24:11' prior: 50875352!
test05RoverMovesBackwardsWhenFacingNorth
	| marsRover |
	marsRover := MarsRover at: cartesianCenter facing: North.
	
	marsRover command: 'b'.
	
	self assert: (marsRover isAt: cartesianCenter - (0@1)).
	self assert: (marsRover isFacing: North).! !
!MarsRoverTest methodsFor: 'tests' stamp: 'JEA 10/25/2020 19:24:18' prior: 50874600!
test06RoverRotatesLeftWhenFacingNorth
	| marsRover |
	marsRover := MarsRover at: cartesianCenter facing: North.
	
	marsRover command: 'l'.
	
	self assert: (marsRover isFacing: West).
	self assert: (marsRover isAt: cartesianCenter).! !
!MarsRoverTest methodsFor: 'tests' stamp: 'JEA 10/25/2020 19:24:26' prior: 50874557!
test07RoverRotatesRightWhenFacingNorth
	| marsRover |
	marsRover := MarsRover at: cartesianCenter facing: North.
	
	marsRover command: 'r'.
	
	self assert: (marsRover isFacing: East).
	self assert: (marsRover isAt: cartesianCenter).! !
!MarsRoverTest methodsFor: 'tests' stamp: 'JEA 10/25/2020 19:24:32' prior: 50874414!
test08RoverMovesForwardWhenFacingEast
	| marsRover |
	marsRover := MarsRover at: cartesianCenter facing: East.
	
	marsRover command: 'f'.
	
	self assert: (marsRover isAt: cartesianCenter + (1@0)).
	self assert: (marsRover isFacing: East).	! !
!MarsRoverTest methodsFor: 'tests' stamp: 'JEA 10/25/2020 19:24:39' prior: 50874516!
test09RoverMovesBackwardsWhenFacingEast
	| marsRover |
	marsRover := MarsRover at: cartesianCenter facing: East.
	
	marsRover command: 'b'.
	
	self assert: (marsRover isAt: cartesianCenter - (1@0)).
	self assert: (marsRover isFacing: East).	! !
!MarsRoverTest methodsFor: 'tests' stamp: 'JEA 10/25/2020 19:25:50' prior: 50874611!
test10RoverRotatesLeftWhenFacingEast
	| marsRover |
	marsRover := MarsRover at: cartesianCenter facing: East.
	
	marsRover command: 'l'.
	
	self assert: (marsRover isFacing: $N).
	self assert: (marsRover isAt: cartesianCenter).! !
!MarsRoverTest methodsFor: 'tests' stamp: 'JEA 10/25/2020 19:25:55' prior: 50875417!
test10RoverRotatesLeftWhenFacingEast
	| marsRover |
	marsRover := MarsRover at: cartesianCenter facing: East.
	
	marsRover command: 'l'.
	
	self assert: (marsRover isFacing: North).
	self assert: (marsRover isAt: cartesianCenter).! !
!MarsRoverTest methodsFor: 'tests' stamp: 'JEA 10/25/2020 19:26:07' prior: 50875341!
test04RoverMovesForwardWhenFacingNorth
	| marsRover |
	marsRover := MarsRover at: cartesianCenter facing: North.
	
	marsRover command: 'f'.
	
	self assert: (marsRover isAt: cartesianCenter + (0@1)).
	self assert: (marsRover isFacing: North).! !
!MarsRoverTest methodsFor: 'tests' stamp: 'JEA 10/25/2020 19:27:23' prior: 50875437!
test04RoverMovesForwardWhenFacingNorth
	| marsRover |
	marsRover := MarsRover at: cartesianCenter facing: North.
	
	marsRover command: 'f'.
	
	self assert: (marsRover isAt: cartesianCenter + (0@1)).
	self assert: (marsRover isFacing: North).! !

TestCase subclass: #MarsRoverTest
	instanceVariableNames: 'cartesianCenter initialOrientation north south east west'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover'!

!classDefinition: #MarsRoverTest category: 'MarsRover' stamp: 'JEA 10/25/2020 19:28:36'!
TestCase subclass: #MarsRoverTest
	instanceVariableNames: 'cartesianCenter initialOrientation north south east west'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover'!
!MarsRoverTest methodsFor: 'setup' stamp: 'JEA 10/25/2020 19:28:51' prior: 50875326 overrides: 16927572!
setUp

	cartesianCenter := 0@0.
	north := North new.! !
!MarsRoverTest methodsFor: 'setup' stamp: 'JEA 10/25/2020 19:29:14' prior: 50875474 overrides: 16927572!
setUp

	cartesianCenter := 0@0.
	north := North new.
	south := South new.
	west := West new.
	east := East new.! !
!MarsRoverTest methodsFor: 'tests' stamp: 'JEA 10/25/2020 19:29:25' prior: 50874766!
test01NewRoverShouldBeAtInitializedPosition

	self assert: ((MarsRover at: cartesianCenter facing: north) isAt: cartesianCenter).! !
!MarsRoverTest methodsFor: 'tests' stamp: 'JEA 10/25/2020 19:29:29' prior: 50874774!
test02NewRoverShouldBeFacingInitializedDirection

	self assert: ((MarsRover at: cartesianCenter facing: north) isFacing: initialOrientation).! !
!MarsRoverTest methodsFor: 'tests' stamp: 'JEA 10/25/2020 19:29:34' prior: 50875494!
test02NewRoverShouldBeFacingInitializedDirection

	self assert: ((MarsRover at: cartesianCenter facing: north) isFacing: north).! !
!MarsRoverTest methodsFor: 'tests' stamp: 'JEA 10/25/2020 19:29:41' prior: 50875448!
test04RoverMovesForwardWhenFacingNorth
	| marsRover |
	marsRover := MarsRover at: cartesianCenter facing: north.
	
	marsRover command: 'f'.
	
	self assert: (marsRover isAt: cartesianCenter + (0@1)).
	self assert: (marsRover isFacing: north).! !
!MarsRoverTest methodsFor: 'tests' stamp: 'JEA 10/25/2020 19:29:56' prior: 50875363!
test05RoverMovesBackwardsWhenFacingNorth
	| marsRover |
	marsRover := MarsRover at: cartesianCenter facing: north.
	
	marsRover command: 'b'.
	
	self assert: (marsRover isAt: cartesianCenter - (0@1)).
	self assert: (marsRover isFacing: north).! !
!MarsRoverTest methodsFor: 'tests' stamp: 'JEA 10/25/2020 19:30:01' prior: 50875374!
test06RoverRotatesLeftWhenFacingNorth
	| marsRover |
	marsRover := MarsRover at: cartesianCenter facing: north.
	
	marsRover command: 'l'.
	
	self assert: (marsRover isFacing: west).
	self assert: (marsRover isAt: cartesianCenter).! !
!MarsRoverTest methodsFor: 'tests' stamp: 'JEA 10/25/2020 19:30:06' prior: 50875384!
test07RoverRotatesRightWhenFacingNorth
	| marsRover |
	marsRover := MarsRover at: cartesianCenter facing: north.
	
	marsRover command: 'r'.
	
	self assert: (marsRover isFacing: east).
	self assert: (marsRover isAt: cartesianCenter).! !
!MarsRoverTest methodsFor: 'tests' stamp: 'JEA 10/25/2020 19:30:10' prior: 50875395!
test08RoverMovesForwardWhenFacingEast
	| marsRover |
	marsRover := MarsRover at: cartesianCenter facing: east.
	
	marsRover command: 'f'.
	
	self assert: (marsRover isAt: cartesianCenter + (1@0)).
	self assert: (marsRover isFacing: east).	! !
!MarsRoverTest methodsFor: 'tests' stamp: 'JEA 10/25/2020 19:30:16' prior: 50875406!
test09RoverMovesBackwardsWhenFacingEast
	| marsRover |
	marsRover := MarsRover at: cartesianCenter facing: east.
	
	marsRover command: 'b'.
	
	self assert: (marsRover isAt: cartesianCenter - (1@0)).
	self assert: (marsRover isFacing: east).	! !
!MarsRoverTest methodsFor: 'tests' stamp: 'JEA 10/25/2020 19:30:21' prior: 50875427!
test10RoverRotatesLeftWhenFacingEast
	| marsRover |
	marsRover := MarsRover at: cartesianCenter facing: east.
	
	marsRover command: 'l'.
	
	self assert: (marsRover isFacing: north).
	self assert: (marsRover isAt: cartesianCenter).! !
!MarsRoverTest methodsFor: 'tests' stamp: 'JEA 10/25/2020 19:30:28' prior: 50874483!
test11RoverRotatesRightWhenFacingEast
	| marsRover |
	marsRover := MarsRover at: cartesianCenter facing: east.
	
	marsRover command: 'r'.
	
	self assert: (marsRover isFacing: south).
	self assert: (marsRover isAt: cartesianCenter).! !
!MarsRoverTest methodsFor: 'tests' stamp: 'JEA 10/25/2020 19:30:38' prior: 50874436!
test12RoverMovesForwardWhenFacingSouth
	| marsRover |
	marsRover := MarsRover at: cartesianCenter facing: south.
	
	marsRover command: 'f'.
	
	self assert: (marsRover isAt: cartesianCenter - (0@1)).
	self assert: (marsRover isFacing: south).	! !
!MarsRoverTest methodsFor: 'tests' stamp: 'JEA 10/25/2020 19:30:42' prior: 50874535!
test13RoverMovesBackwardsWhenFacingSouth
	| marsRover |
	marsRover := MarsRover at: cartesianCenter facing: south.
	
	marsRover command: 'b'.
	
	self assert: (marsRover isAt: cartesianCenter + (0@1)).
	self assert: (marsRover isFacing: south).	! !
!MarsRoverTest methodsFor: 'tests' stamp: 'JEA 10/25/2020 19:30:49' prior: 50874425!
test14RoverRotatesLeftWhenFacingSouth
	| marsRover |
	marsRover := MarsRover at: cartesianCenter facing: south.
	
	marsRover command: 'l'.
	
	self assert: (marsRover isFacing: east).
	self assert: (marsRover isAt: cartesianCenter).! !
!MarsRoverTest methodsFor: 'tests' stamp: 'JEA 10/25/2020 19:30:59' prior: 50874461!
test15RoverRotatesRightWhenFacingSouth
	| marsRover |
	marsRover := MarsRover at: cartesianCenter facing: south.
	
	marsRover command: 'r'.
	
	self assert: (marsRover isFacing: west).
	self assert: (marsRover isAt: cartesianCenter).! !
!MarsRoverTest methodsFor: 'tests' stamp: 'JEA 10/25/2020 19:31:05' prior: 50874568!
test16RoverMovesForwardWhenFacingWest
	| marsRover |
	marsRover := MarsRover at: cartesianCenter facing: west.
	
	marsRover command: 'f'.
	
	self assert: (marsRover isAt: cartesianCenter - (1@0)).
	self assert: (marsRover isFacing: west).	! !
!MarsRoverTest methodsFor: 'tests' stamp: 'JEA 10/25/2020 19:31:09' prior: 50874472!
test17RoverMovesBackwardsWhenFacingWest
	| marsRover |
	marsRover := MarsRover at: cartesianCenter facing: west.
	
	marsRover command: 'b'.
	
	self assert: (marsRover isAt: cartesianCenter + (1@0)).
	self assert: (marsRover isFacing: west).	! !
!MarsRoverTest methodsFor: 'tests' stamp: 'JEA 10/25/2020 19:31:13' prior: 50874546!
test18RoverRotatesLeftWhenFacingWest
	| marsRover |
	marsRover := MarsRover at: cartesianCenter facing: west.
	
	marsRover command: 'l'.
	
	self assert: (marsRover isFacing: $S).
	self assert: (marsRover isAt: cartesianCenter).! !
!MarsRoverTest methodsFor: 'tests' stamp: 'JEA 10/25/2020 19:31:16' prior: 50875659!
test18RoverRotatesLeftWhenFacingWest
	| marsRover |
	marsRover := MarsRover at: cartesianCenter facing: west.
	
	marsRover command: 'l'.
	
	self assert: (marsRover isFacing: south).
	self assert: (marsRover isAt: cartesianCenter).! !
!MarsRoverTest methodsFor: 'tests' stamp: 'JEA 10/25/2020 19:31:22' prior: 50874494!
test19RoverRotatesRightWhenFacingWest
	| marsRover |
	marsRover := MarsRover at: cartesianCenter facing: west.
	
	marsRover command: 'r'.
	
	self assert: (marsRover isFacing: north).
	self assert: (marsRover isAt: cartesianCenter).! !
!MarsRover methodsFor: 'movement' stamp: 'JEA 10/25/2020 19:32:33' prior: 50875277!
command: aCommandSequence

	(aCommandSequence = 'f')
		ifTrue: [
			(orientation isKindOf: North) ifTrue: [position := position + (0@1). ^self].
			(orientation isKindOf: East) ifTrue: [position := position + (1@0). ^self].
			(orientation isKindOf: South) ifTrue: [position := position - (0@1). ^self].
			(orientation isKindOf: West) ifTrue: [position := position - (1@0). ^self].
		].
		
	(aCommandSequence = 'b')
		ifTrue: [
			(orientation isKindOf: North) ifTrue: [position := position - (0@1). ^self].
			(orientation isKindOf: East) ifTrue: [position := position - (1@0). ^self].
			(orientation isKindOf: South) ifTrue: [position := position + (0@1). ^self].
			(orientation isKindOf: West) ifTrue: [position := position + (1@0). ^self].
		].
		
	(aCommandSequence = 'l')
		ifTrue: [
			(orientation isKindOf: North) ifTrue: [orientation := West. ^self].
			(orientation isKindOf: East) ifTrue: [orientation := North. ^self].
			(orientation isKindOf: South) ifTrue: [orientation := East. ^self].
			(orientation isKindOf: West) ifTrue: [orientation := South. ^self].
		].

	(aCommandSequence = 'r')
		ifTrue: [
			(orientation isKindOf: North) ifTrue: [orientation := East. ^self].
			(orientation isKindOf: East) ifTrue: [orientation := South. ^self].
			(orientation isKindOf: South) ifTrue: [orientation := West. ^self].
			(orientation isKindOf: West) ifTrue: [orientation := North. ^self].
		].	! !
!MarsRover methodsFor: 'movement' stamp: 'JEA 10/25/2020 19:32:57' prior: 50875689!
command: aCommandSequence

	(aCommandSequence = 'f')
		ifTrue: [
			(orientation isKindOf: North) ifTrue: [position := position + (0@1). ^self].
			(orientation isKindOf: East) ifTrue: [position := position + (1@0). ^self].
			(orientation isKindOf: South) ifTrue: [position := position - (0@1). ^self].
			(orientation isKindOf: West) ifTrue: [position := position - (1@0). ^self].
		].
		
	(aCommandSequence = 'b')
		ifTrue: [
			(orientation isKindOf: North) ifTrue: [position := position - (0@1). ^self].
			(orientation isKindOf: East) ifTrue: [position := position - (1@0). ^self].
			(orientation isKindOf: South) ifTrue: [position := position + (0@1). ^self].
			(orientation isKindOf: West) ifTrue: [position := position + (1@0). ^self].
		].
		
	(aCommandSequence = 'l')
		ifTrue: [
			(orientation isKindOf: North) ifTrue: [orientation := West new. ^self].
			(orientation isKindOf: East) ifTrue: [orientation := North new. ^self].
			(orientation isKindOf: South) ifTrue: [orientation := East new. ^self].
			(orientation isKindOf: West) ifTrue: [orientation := South new. ^self].
		].

	(aCommandSequence = 'r')
		ifTrue: [
			(orientation isKindOf: North) ifTrue: [orientation := East new. ^self].
			(orientation isKindOf: East) ifTrue: [orientation := South new. ^self].
			(orientation isKindOf: South) ifTrue: [orientation := West new. ^self].
			(orientation isKindOf: West) ifTrue: [orientation := North new. ^self].
		].	! !
!MarsRover methodsFor: 'initialization' stamp: 'JEA 10/25/2020 19:34:13' prior: 50874841!
placeAt: aPoint facing: anOrientation
	| supportedDirections |
	supportedDirections := OrderedCollection with: North new with: South new with: West new with: East new.
	
	(supportedDirections includes: anOrientation) ifFalse: [self error: self class invalidDirectionErrorMessage].
	
	position := aPoint.
	orientation := anOrientation.! !

!testRun: #MarsRoverTest #test01NewRoverShouldBeAtInitializedPosition stamp: 'JEA 10/25/2020 19:34:15'!
ERROR!

!testRun: #MarsRoverTest #test02NewRoverShouldBeFacingInitializedDirection stamp: 'JEA 10/25/2020 19:34:15'!
ERROR!

!testRun: #MarsRoverTest #test04RoverMovesForwardWhenFacingNorth stamp: 'JEA 10/25/2020 19:34:15'!
ERROR!

!testRun: #MarsRoverTest #test05RoverMovesBackwardsWhenFacingNorth stamp: 'JEA 10/25/2020 19:34:15'!
ERROR!

!testRun: #MarsRoverTest #test06RoverRotatesLeftWhenFacingNorth stamp: 'JEA 10/25/2020 19:34:15'!
ERROR!

!testRun: #MarsRoverTest #test07RoverRotatesRightWhenFacingNorth stamp: 'JEA 10/25/2020 19:34:15'!
ERROR!

!testRun: #MarsRoverTest #test08RoverMovesForwardWhenFacingEast stamp: 'JEA 10/25/2020 19:34:15'!
ERROR!

!testRun: #MarsRoverTest #test09RoverMovesBackwardsWhenFacingEast stamp: 'JEA 10/25/2020 19:34:15'!
ERROR!

!testRun: #MarsRoverTest #test10RoverRotatesLeftWhenFacingEast stamp: 'JEA 10/25/2020 19:34:15'!
ERROR!

!testRun: #MarsRoverTest #test11RoverRotatesRightWhenFacingEast stamp: 'JEA 10/25/2020 19:34:15'!
ERROR!

!testRun: #MarsRoverTest #test12RoverMovesForwardWhenFacingSouth stamp: 'JEA 10/25/2020 19:34:15'!
ERROR!

!testRun: #MarsRoverTest #test13RoverMovesBackwardsWhenFacingSouth stamp: 'JEA 10/25/2020 19:34:15'!
ERROR!

!testRun: #MarsRoverTest #test14RoverRotatesLeftWhenFacingSouth stamp: 'JEA 10/25/2020 19:34:15'!
ERROR!

!testRun: #MarsRoverTest #test15RoverRotatesRightWhenFacingSouth stamp: 'JEA 10/25/2020 19:34:15'!
ERROR!

!testRun: #MarsRoverTest #test16RoverMovesForwardWhenFacingWest stamp: 'JEA 10/25/2020 19:34:15'!
ERROR!

!testRun: #MarsRoverTest #test17RoverMovesBackwardsWhenFacingWest stamp: 'JEA 10/25/2020 19:34:15'!
ERROR!

!testRun: #MarsRoverTest #test18RoverRotatesLeftWhenFacingWest stamp: 'JEA 10/25/2020 19:34:15'!
ERROR!

!testRun: #MarsRoverTest #test19RoverRotatesRightWhenFacingWest stamp: 'JEA 10/25/2020 19:34:15'!
ERROR!

!testRun: #MarsRoverTest #test01NewRoverShouldBeAtInitializedPosition stamp: 'JEA 10/25/2020 19:34:22'!
ERROR!
!MarsRover methodsFor: 'initialization' stamp: 'JEA 10/25/2020 19:34:47' prior: 50875784!
placeAt: aPoint facing: anOrientation	
	position := aPoint.
	orientation := anOrientation.! !
!MarsRover methodsFor: 'initialization' stamp: 'JEA 10/25/2020 19:34:48' prior: 50875862!
placeAt: aPoint facing: anOrientation
	
	position := aPoint.
	orientation := anOrientation.! !

!testRun: #MarsRoverTest #test01NewRoverShouldBeAtInitializedPosition stamp: 'JEA 10/25/2020 19:34:49'!
PASSED!

!testRun: #MarsRoverTest #test02NewRoverShouldBeFacingInitializedDirection stamp: 'JEA 10/25/2020 19:34:49'!
PASSED!

!testRun: #MarsRoverTest #test04RoverMovesForwardWhenFacingNorth stamp: 'JEA 10/25/2020 19:34:49'!
PASSED!

!testRun: #MarsRoverTest #test05RoverMovesBackwardsWhenFacingNorth stamp: 'JEA 10/25/2020 19:34:49'!
PASSED!

!testRun: #MarsRoverTest #test06RoverRotatesLeftWhenFacingNorth stamp: 'JEA 10/25/2020 19:34:49'!
FAILURE!

!testRun: #MarsRoverTest #test07RoverRotatesRightWhenFacingNorth stamp: 'JEA 10/25/2020 19:34:49'!
FAILURE!

!testRun: #MarsRoverTest #test08RoverMovesForwardWhenFacingEast stamp: 'JEA 10/25/2020 19:34:49'!
PASSED!

!testRun: #MarsRoverTest #test09RoverMovesBackwardsWhenFacingEast stamp: 'JEA 10/25/2020 19:34:49'!
PASSED!

!testRun: #MarsRoverTest #test10RoverRotatesLeftWhenFacingEast stamp: 'JEA 10/25/2020 19:34:49'!
FAILURE!

!testRun: #MarsRoverTest #test11RoverRotatesRightWhenFacingEast stamp: 'JEA 10/25/2020 19:34:49'!
FAILURE!

!testRun: #MarsRoverTest #test12RoverMovesForwardWhenFacingSouth stamp: 'JEA 10/25/2020 19:34:49'!
PASSED!

!testRun: #MarsRoverTest #test13RoverMovesBackwardsWhenFacingSouth stamp: 'JEA 10/25/2020 19:34:49'!
PASSED!

!testRun: #MarsRoverTest #test14RoverRotatesLeftWhenFacingSouth stamp: 'JEA 10/25/2020 19:34:49'!
FAILURE!

!testRun: #MarsRoverTest #test15RoverRotatesRightWhenFacingSouth stamp: 'JEA 10/25/2020 19:34:49'!
FAILURE!

!testRun: #MarsRoverTest #test16RoverMovesForwardWhenFacingWest stamp: 'JEA 10/25/2020 19:34:49'!
PASSED!

!testRun: #MarsRoverTest #test17RoverMovesBackwardsWhenFacingWest stamp: 'JEA 10/25/2020 19:34:49'!
PASSED!

!testRun: #MarsRoverTest #test18RoverRotatesLeftWhenFacingWest stamp: 'JEA 10/25/2020 19:34:49'!
FAILURE!

!testRun: #MarsRoverTest #test19RoverRotatesRightWhenFacingWest stamp: 'JEA 10/25/2020 19:34:49'!
FAILURE!

!testRun: #MarsRoverTest #test06RoverRotatesLeftWhenFacingNorth stamp: 'JEA 10/25/2020 19:34:55'!
FAILURE!
!Orientation methodsFor: 'comparing' stamp: 'JEA 10/25/2020 19:36:11' overrides: 16881029!
= anOrientation

	! !
!Orientation methodsFor: 'comparing' stamp: 'JEA 10/25/2020 19:40:01' prior: 50875939 overrides: 16881029!
= anOrientation

	self subclassResponsibility ! !

	self subclassResponsibility.!
!Orientation methodsFor: 'comparing' stamp: 'JEA 10/25/2020 19:40:07' prior: 50875944 overrides: 16881029!
= anOrientation

	self subclassResponsibility.! !
!North methodsFor: 'comparing' stamp: 'JEA 10/25/2020 19:42:09' overrides: 50875950!
= anOrientation

	self subclassResponsibility.! !
!South methodsFor: 'comparing' stamp: 'JEA 10/25/2020 19:42:09' overrides: 50875950!
= anOrientation

	self subclassResponsibility.! !
!West methodsFor: 'comparing' stamp: 'JEA 10/25/2020 19:42:09' overrides: 50875950!
= anOrientation

	self subclassResponsibility.! !
!East methodsFor: 'comparing' stamp: 'JEA 10/25/2020 19:42:09' overrides: 50875950!
= anOrientation

	self subclassResponsibility.! !

!methodRemoval: Orientation #= stamp: 'JEA 10/25/2020 19:42:09'!
= anOrientation

	self subclassResponsibility.!
!Orientation methodsFor: 'comparing' stamp: 'JEA 10/25/2020 19:42:19' overrides: 16881029!
= anOrientation

	self subclassResponsibility.! !

!methodRemoval: East #= stamp: 'JEA 10/25/2020 19:42:19'!
= anOrientation

	self subclassResponsibility.!
!East methodsFor: 'comparing' stamp: 'JEA 10/25/2020 19:42:21' overrides: 50875978!
= anOrientation

	self subclassResponsibility.! !
!West methodsFor: 'comparing' stamp: 'JEA 10/25/2020 19:43:34' prior: 50875965 overrides: 50875978!
= anOrientation

	self isKindOf: West.! !

!methodRemoval: East #= stamp: 'JEA 10/25/2020 19:44:03'!
= anOrientation

	self subclassResponsibility.!

!methodRemoval: North #= stamp: 'JEA 10/25/2020 19:44:07'!
= anOrientation

	self subclassResponsibility.!

!methodRemoval: South #= stamp: 'JEA 10/25/2020 19:44:09'!
= anOrientation

	self subclassResponsibility.!

!methodRemoval: West #= stamp: 'JEA 10/25/2020 19:44:12'!
= anOrientation

	self isKindOf: West.!

Object subclass: #Orientation
	instanceVariableNames: 'unitaryVector'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover'!

!classDefinition: #Orientation category: 'MarsRover' stamp: 'JEA 10/25/2020 19:44:28'!
Object subclass: #Orientation
	instanceVariableNames: 'unitaryVector'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover'!
!Orientation methodsFor: 'comparing' stamp: 'JEA 10/25/2020 19:45:18' prior: 50875978 overrides: 16881029!
= anOrientation

	^unitaryVector = anOrientation vector.! !
!Orientation methodsFor: 'accessing' stamp: 'JEA 10/25/2020 19:45:40'!
vector

	^ unitaryVector .! !
!Orientation methodsFor: 'accessing' stamp: 'JEA 10/25/2020 19:45:42' prior: 50876026!
vector

	^ unitaryVector.! !
!Orientation methodsFor: 'accessing' stamp: 'JEA 10/25/2020 19:46:41' prior: 50876030!
vector

	^unitaryVector.! !
!Orientation methodsFor: 'accessing' stamp: 'JEA 10/25/2020 19:47:08' prior: 50876034!
vector

	^self vector.! !
!Orientation methodsFor: 'accessing' stamp: 'JEA 10/25/2020 19:47:22' prior: 50876038!
vector

	self subclassResponsibility.! !
!Orientation methodsFor: 'comparing' stamp: 'JEA 10/25/2020 19:47:30' prior: 50876021 overrides: 16881029!
= anOrientation

	^self vector = anOrientation vector.! !
!East methodsFor: 'accessing' stamp: 'JEA 10/25/2020 19:47:49' overrides: 50876042!
vector

	^1@0.! !
!North methodsFor: 'accessing' stamp: 'JEA 10/25/2020 19:48:14' overrides: 50876042!
vector

	^0@1.! !
!South methodsFor: 'accessing' stamp: 'JEA 10/25/2020 19:48:29' overrides: 50876042!
vector

	^0@-1.! !
!West methodsFor: 'accessing' stamp: 'JEA 10/25/2020 19:48:36' overrides: 50876042!
vector

	^-1@0.! !

!testRun: #MarsRoverTest #test01NewRoverShouldBeAtInitializedPosition stamp: 'JEA 10/25/2020 19:49:01'!
PASSED!

!testRun: #MarsRoverTest #test02NewRoverShouldBeFacingInitializedDirection stamp: 'JEA 10/25/2020 19:49:01'!
PASSED!

!testRun: #MarsRoverTest #test04RoverMovesForwardWhenFacingNorth stamp: 'JEA 10/25/2020 19:49:01'!
PASSED!

!testRun: #MarsRoverTest #test05RoverMovesBackwardsWhenFacingNorth stamp: 'JEA 10/25/2020 19:49:01'!
PASSED!

!testRun: #MarsRoverTest #test06RoverRotatesLeftWhenFacingNorth stamp: 'JEA 10/25/2020 19:49:01'!
PASSED!

!testRun: #MarsRoverTest #test07RoverRotatesRightWhenFacingNorth stamp: 'JEA 10/25/2020 19:49:01'!
PASSED!

!testRun: #MarsRoverTest #test08RoverMovesForwardWhenFacingEast stamp: 'JEA 10/25/2020 19:49:01'!
PASSED!

!testRun: #MarsRoverTest #test09RoverMovesBackwardsWhenFacingEast stamp: 'JEA 10/25/2020 19:49:01'!
PASSED!

!testRun: #MarsRoverTest #test10RoverRotatesLeftWhenFacingEast stamp: 'JEA 10/25/2020 19:49:01'!
PASSED!

!testRun: #MarsRoverTest #test11RoverRotatesRightWhenFacingEast stamp: 'JEA 10/25/2020 19:49:01'!
PASSED!

!testRun: #MarsRoverTest #test12RoverMovesForwardWhenFacingSouth stamp: 'JEA 10/25/2020 19:49:01'!
PASSED!

!testRun: #MarsRoverTest #test13RoverMovesBackwardsWhenFacingSouth stamp: 'JEA 10/25/2020 19:49:01'!
PASSED!

!testRun: #MarsRoverTest #test14RoverRotatesLeftWhenFacingSouth stamp: 'JEA 10/25/2020 19:49:01'!
PASSED!

!testRun: #MarsRoverTest #test15RoverRotatesRightWhenFacingSouth stamp: 'JEA 10/25/2020 19:49:01'!
PASSED!

!testRun: #MarsRoverTest #test16RoverMovesForwardWhenFacingWest stamp: 'JEA 10/25/2020 19:49:01'!
PASSED!

!testRun: #MarsRoverTest #test17RoverMovesBackwardsWhenFacingWest stamp: 'JEA 10/25/2020 19:49:01'!
PASSED!

!testRun: #MarsRoverTest #test18RoverRotatesLeftWhenFacingWest stamp: 'JEA 10/25/2020 19:49:01'!
PASSED!

!testRun: #MarsRoverTest #test19RoverRotatesRightWhenFacingWest stamp: 'JEA 10/25/2020 19:49:01'!
PASSED!
!MarsRover methodsFor: 'movement' stamp: 'JEA 10/25/2020 19:50:04' prior: 50875736!
command: aCommandSequence

	(aCommandSequence = 'f')
		ifTrue: [
			position := position + orientation vector.
		].
		
	(aCommandSequence = 'b')
		ifTrue: [
			position := position - orientation vector.
		].
		
	(aCommandSequence = 'l')
		ifTrue: [
			(orientation isKindOf: North) ifTrue: [orientation := West new. ^self].
			(orientation isKindOf: East) ifTrue: [orientation := North new. ^self].
			(orientation isKindOf: South) ifTrue: [orientation := East new. ^self].
			(orientation isKindOf: West) ifTrue: [orientation := South new. ^self].
		].

	(aCommandSequence = 'r')
		ifTrue: [
			(orientation isKindOf: North) ifTrue: [orientation := East new. ^self].
			(orientation isKindOf: East) ifTrue: [orientation := South new. ^self].
			(orientation isKindOf: South) ifTrue: [orientation := West new. ^self].
			(orientation isKindOf: West) ifTrue: [orientation := North new. ^self].
		].	! !

!testRun: #MarsRoverTest #test01NewRoverShouldBeAtInitializedPosition stamp: 'JEA 10/25/2020 19:50:06'!
PASSED!

!testRun: #MarsRoverTest #test02NewRoverShouldBeFacingInitializedDirection stamp: 'JEA 10/25/2020 19:50:06'!
PASSED!

!testRun: #MarsRoverTest #test04RoverMovesForwardWhenFacingNorth stamp: 'JEA 10/25/2020 19:50:06'!
PASSED!

!testRun: #MarsRoverTest #test05RoverMovesBackwardsWhenFacingNorth stamp: 'JEA 10/25/2020 19:50:06'!
PASSED!

!testRun: #MarsRoverTest #test06RoverRotatesLeftWhenFacingNorth stamp: 'JEA 10/25/2020 19:50:06'!
PASSED!

!testRun: #MarsRoverTest #test07RoverRotatesRightWhenFacingNorth stamp: 'JEA 10/25/2020 19:50:06'!
PASSED!

!testRun: #MarsRoverTest #test08RoverMovesForwardWhenFacingEast stamp: 'JEA 10/25/2020 19:50:06'!
PASSED!

!testRun: #MarsRoverTest #test09RoverMovesBackwardsWhenFacingEast stamp: 'JEA 10/25/2020 19:50:06'!
PASSED!

!testRun: #MarsRoverTest #test10RoverRotatesLeftWhenFacingEast stamp: 'JEA 10/25/2020 19:50:06'!
PASSED!

!testRun: #MarsRoverTest #test11RoverRotatesRightWhenFacingEast stamp: 'JEA 10/25/2020 19:50:06'!
PASSED!

!testRun: #MarsRoverTest #test12RoverMovesForwardWhenFacingSouth stamp: 'JEA 10/25/2020 19:50:06'!
PASSED!

!testRun: #MarsRoverTest #test13RoverMovesBackwardsWhenFacingSouth stamp: 'JEA 10/25/2020 19:50:06'!
PASSED!

!testRun: #MarsRoverTest #test14RoverRotatesLeftWhenFacingSouth stamp: 'JEA 10/25/2020 19:50:06'!
PASSED!

!testRun: #MarsRoverTest #test15RoverRotatesRightWhenFacingSouth stamp: 'JEA 10/25/2020 19:50:06'!
PASSED!

!testRun: #MarsRoverTest #test16RoverMovesForwardWhenFacingWest stamp: 'JEA 10/25/2020 19:50:06'!
PASSED!

!testRun: #MarsRoverTest #test17RoverMovesBackwardsWhenFacingWest stamp: 'JEA 10/25/2020 19:50:06'!
PASSED!

!testRun: #MarsRoverTest #test18RoverRotatesLeftWhenFacingWest stamp: 'JEA 10/25/2020 19:50:06'!
PASSED!

!testRun: #MarsRoverTest #test19RoverRotatesRightWhenFacingWest stamp: 'JEA 10/25/2020 19:50:06'!
PASSED!
!MarsRover methodsFor: 'movement' stamp: 'JEA 10/25/2020 19:51:02' prior: 50876129!
command: aCommandSequence

	(aCommandSequence = 'f')
		ifTrue: [
			position := position + orientation vector.
		].
		
	(aCommandSequence = 'b')
		ifTrue: [
			position := position - orientation vector.
		].
		
	(aCommandSequence = 'l')
		ifTrue: [
			orientation nextCounterClockwise.
		].

	(aCommandSequence = 'r')
		ifTrue: [
			(orientation isKindOf: North) ifTrue: [orientation := East new. ^self].
			(orientation isKindOf: East) ifTrue: [orientation := South new. ^self].
			(orientation isKindOf: South) ifTrue: [orientation := West new. ^self].
			(orientation isKindOf: West) ifTrue: [orientation := North new. ^self].
		].	! !
!MarsRover methodsFor: 'movement' stamp: 'JEA 10/25/2020 19:51:12' prior: 50876221!
command: aCommandSequence

	(aCommandSequence = 'f')
		ifTrue: [
			position := position + orientation vector.
		].
		
	(aCommandSequence = 'b')
		ifTrue: [
			position := position - orientation vector.
		].
		
	(aCommandSequence = 'l')
		ifTrue: [
			orientation := orientation nextCounterClockwise.
		].

	(aCommandSequence = 'r')
		ifTrue: [
			(orientation isKindOf: North) ifTrue: [orientation := East new. ^self].
			(orientation isKindOf: East) ifTrue: [orientation := South new. ^self].
			(orientation isKindOf: South) ifTrue: [orientation := West new. ^self].
			(orientation isKindOf: West) ifTrue: [orientation := North new. ^self].
		].	! !
!Orientation methodsFor: 'calculating' stamp: 'JEA 10/25/2020 19:52:06'!
nextCounterClockwise

	self subclassResponsibility.! !
!North methodsFor: 'calculating' stamp: 'JEA 10/25/2020 19:52:15' overrides: 50876267!
nextCounterClockwise

	self subclassResponsibility.! !
!South methodsFor: 'calculating' stamp: 'JEA 10/25/2020 19:52:15' overrides: 50876267!
nextCounterClockwise

	self subclassResponsibility.! !
!West methodsFor: 'calculating' stamp: 'JEA 10/25/2020 19:52:15' overrides: 50876267!
nextCounterClockwise

	self subclassResponsibility.! !
!East methodsFor: 'calculating' stamp: 'JEA 10/25/2020 19:52:15' overrides: 50876267!
nextCounterClockwise

	self subclassResponsibility.! !

!methodRemoval: Orientation #nextCounterClockwise stamp: 'JEA 10/25/2020 19:52:15'!
nextCounterClockwise

	self subclassResponsibility.!
!Orientation methodsFor: 'calculating' stamp: 'JEA 10/25/2020 19:52:28'!
nextCounterClockwise

	self subclassResponsibility.! !
!East methodsFor: 'calculating' stamp: 'JEA 10/25/2020 19:52:55' prior: 50876287 overrides: 50876296!
nextCounterClockwise

	^North new.! !
!North methodsFor: 'calculating' stamp: 'JEA 10/25/2020 19:53:07' prior: 50876272 overrides: 50876296!
nextCounterClockwise

	^West new.! !
!South methodsFor: 'calculating' stamp: 'JEA 10/25/2020 19:53:26' prior: 50876277 overrides: 50876296!
nextCounterClockwise

	^East.! !
!West methodsFor: 'calculating' stamp: 'JEA 10/25/2020 19:53:39' prior: 50876282 overrides: 50876296!
nextCounterClockwise

	^South.! !
!Orientation methodsFor: 'calculating' stamp: 'JEA 10/25/2020 19:53:48'!
nextClockwise

	self subclassResponsibility.! !
!North methodsFor: 'calculating' stamp: 'JEA 10/25/2020 19:53:57' overrides: 50876320!
nextClockwise

	self subclassResponsibility.! !
!South methodsFor: 'calculating' stamp: 'JEA 10/25/2020 19:53:57' overrides: 50876320!
nextClockwise

	self subclassResponsibility.! !
!West methodsFor: 'calculating' stamp: 'JEA 10/25/2020 19:53:57' overrides: 50876320!
nextClockwise

	self subclassResponsibility.! !
!East methodsFor: 'calculating' stamp: 'JEA 10/25/2020 19:53:57' overrides: 50876320!
nextClockwise

	self subclassResponsibility.! !

!methodRemoval: Orientation #nextClockwise stamp: 'JEA 10/25/2020 19:53:57'!
nextClockwise

	self subclassResponsibility.!
!Orientation methodsFor: 'calculating' stamp: 'JEA 10/25/2020 19:53:58'!
nextClockwise

	self subclassResponsibility.! !
!East methodsFor: 'calculating' stamp: 'JEA 10/25/2020 19:54:06' prior: 50876340 overrides: 50876348!
nextClockwise

	^South new.! !
!West methodsFor: 'calculating' stamp: 'JEA 10/25/2020 19:54:10' prior: 50876316 overrides: 50876296!
nextCounterClockwise

	^South new.! !
!South methodsFor: 'calculating' stamp: 'JEA 10/25/2020 19:54:14' prior: 50876311 overrides: 50876296!
nextCounterClockwise

	^East new.! !
!North methodsFor: 'calculating' stamp: 'JEA 10/25/2020 19:54:29' prior: 50876325 overrides: 50876348!
nextClockwise

	^East new.! !
!South methodsFor: 'calculating' stamp: 'JEA 10/25/2020 19:54:38' prior: 50876330 overrides: 50876348!
nextClockwise

	^West new.! !
!West methodsFor: 'calculating' stamp: 'JEA 10/25/2020 19:54:45' prior: 50876335 overrides: 50876348!
nextClockwise

	^North new.! !
!MarsRover methodsFor: 'movement' stamp: 'JEA 10/25/2020 19:55:10' prior: 50876244!
command: aCommandSequence

	(aCommandSequence = 'f')
		ifTrue: [
			position := position + orientation vector.
		].
		
	(aCommandSequence = 'b')
		ifTrue: [
			position := position - orientation vector.
		].
		
	(aCommandSequence = 'l')
		ifTrue: [
			orientation := orientation nextCounterClockwise.
		].

	(aCommandSequence = 'r')
		ifTrue: [
			orientation := orientation nextClockwise.
		].	! !

!testRun: #MarsRoverTest #test01NewRoverShouldBeAtInitializedPosition stamp: 'JEA 10/25/2020 19:55:11'!
PASSED!

!testRun: #MarsRoverTest #test02NewRoverShouldBeFacingInitializedDirection stamp: 'JEA 10/25/2020 19:55:11'!
PASSED!

!testRun: #MarsRoverTest #test04RoverMovesForwardWhenFacingNorth stamp: 'JEA 10/25/2020 19:55:11'!
PASSED!

!testRun: #MarsRoverTest #test05RoverMovesBackwardsWhenFacingNorth stamp: 'JEA 10/25/2020 19:55:11'!
PASSED!

!testRun: #MarsRoverTest #test06RoverRotatesLeftWhenFacingNorth stamp: 'JEA 10/25/2020 19:55:11'!
PASSED!

!testRun: #MarsRoverTest #test07RoverRotatesRightWhenFacingNorth stamp: 'JEA 10/25/2020 19:55:11'!
PASSED!

!testRun: #MarsRoverTest #test08RoverMovesForwardWhenFacingEast stamp: 'JEA 10/25/2020 19:55:11'!
PASSED!

!testRun: #MarsRoverTest #test09RoverMovesBackwardsWhenFacingEast stamp: 'JEA 10/25/2020 19:55:11'!
PASSED!

!testRun: #MarsRoverTest #test10RoverRotatesLeftWhenFacingEast stamp: 'JEA 10/25/2020 19:55:11'!
PASSED!

!testRun: #MarsRoverTest #test11RoverRotatesRightWhenFacingEast stamp: 'JEA 10/25/2020 19:55:11'!
PASSED!

!testRun: #MarsRoverTest #test12RoverMovesForwardWhenFacingSouth stamp: 'JEA 10/25/2020 19:55:11'!
PASSED!

!testRun: #MarsRoverTest #test13RoverMovesBackwardsWhenFacingSouth stamp: 'JEA 10/25/2020 19:55:11'!
PASSED!

!testRun: #MarsRoverTest #test14RoverRotatesLeftWhenFacingSouth stamp: 'JEA 10/25/2020 19:55:11'!
PASSED!

!testRun: #MarsRoverTest #test15RoverRotatesRightWhenFacingSouth stamp: 'JEA 10/25/2020 19:55:11'!
PASSED!

!testRun: #MarsRoverTest #test16RoverMovesForwardWhenFacingWest stamp: 'JEA 10/25/2020 19:55:11'!
PASSED!

!testRun: #MarsRoverTest #test17RoverMovesBackwardsWhenFacingWest stamp: 'JEA 10/25/2020 19:55:11'!
PASSED!

!testRun: #MarsRoverTest #test18RoverRotatesLeftWhenFacingWest stamp: 'JEA 10/25/2020 19:55:11'!
PASSED!

!testRun: #MarsRoverTest #test19RoverRotatesRightWhenFacingWest stamp: 'JEA 10/25/2020 19:55:11'!
PASSED!
!MarsRover methodsFor: 'movement' stamp: 'JEA 10/25/2020 19:55:19' prior: 50876382!
command: aCommandSequence

	(aCommandSequence = 'f')
		ifTrue: [
			position := position + orientation vector.
		].
		
	(aCommandSequence = 'b')
		ifTrue: [
			position := position - orientation vector.
		].
		
	(aCommandSequence = 'l')
		ifTrue: [
			orientation := orientation nextCounterClockwise.
		].

	(aCommandSequence = 'r')
		ifTrue: [
			orientation := orientation nextCounterClockwise.
		].	! !

!testRun: #MarsRoverTest #test01NewRoverShouldBeAtInitializedPosition stamp: 'JEA 10/25/2020 19:55:21'!
PASSED!

!testRun: #MarsRoverTest #test02NewRoverShouldBeFacingInitializedDirection stamp: 'JEA 10/25/2020 19:55:21'!
PASSED!

!testRun: #MarsRoverTest #test04RoverMovesForwardWhenFacingNorth stamp: 'JEA 10/25/2020 19:55:21'!
PASSED!

!testRun: #MarsRoverTest #test05RoverMovesBackwardsWhenFacingNorth stamp: 'JEA 10/25/2020 19:55:21'!
PASSED!

!testRun: #MarsRoverTest #test06RoverRotatesLeftWhenFacingNorth stamp: 'JEA 10/25/2020 19:55:21'!
PASSED!

!testRun: #MarsRoverTest #test07RoverRotatesRightWhenFacingNorth stamp: 'JEA 10/25/2020 19:55:21'!
FAILURE!

!testRun: #MarsRoverTest #test08RoverMovesForwardWhenFacingEast stamp: 'JEA 10/25/2020 19:55:21'!
PASSED!

!testRun: #MarsRoverTest #test09RoverMovesBackwardsWhenFacingEast stamp: 'JEA 10/25/2020 19:55:21'!
PASSED!

!testRun: #MarsRoverTest #test10RoverRotatesLeftWhenFacingEast stamp: 'JEA 10/25/2020 19:55:21'!
PASSED!

!testRun: #MarsRoverTest #test11RoverRotatesRightWhenFacingEast stamp: 'JEA 10/25/2020 19:55:21'!
FAILURE!

!testRun: #MarsRoverTest #test12RoverMovesForwardWhenFacingSouth stamp: 'JEA 10/25/2020 19:55:21'!
PASSED!

!testRun: #MarsRoverTest #test13RoverMovesBackwardsWhenFacingSouth stamp: 'JEA 10/25/2020 19:55:21'!
PASSED!

!testRun: #MarsRoverTest #test14RoverRotatesLeftWhenFacingSouth stamp: 'JEA 10/25/2020 19:55:21'!
PASSED!

!testRun: #MarsRoverTest #test15RoverRotatesRightWhenFacingSouth stamp: 'JEA 10/25/2020 19:55:21'!
FAILURE!

!testRun: #MarsRoverTest #test16RoverMovesForwardWhenFacingWest stamp: 'JEA 10/25/2020 19:55:21'!
PASSED!

!testRun: #MarsRoverTest #test17RoverMovesBackwardsWhenFacingWest stamp: 'JEA 10/25/2020 19:55:21'!
PASSED!

!testRun: #MarsRoverTest #test18RoverRotatesLeftWhenFacingWest stamp: 'JEA 10/25/2020 19:55:21'!
PASSED!

!testRun: #MarsRoverTest #test19RoverRotatesRightWhenFacingWest stamp: 'JEA 10/25/2020 19:55:21'!
FAILURE!
!MarsRover methodsFor: 'movement' stamp: 'JEA 10/25/2020 19:55:29' prior: 50876459!
command: aCommandSequence

	(aCommandSequence = 'f')
		ifTrue: [
			position := position + orientation vector.
		].
		
	(aCommandSequence = 'b')
		ifTrue: [
			position := position - orientation vector.
		].
		
	(aCommandSequence = 'l')
		ifTrue: [
			orientation := orientation nextCounterClockwise.
		].

	(aCommandSequence = 'r')
		ifTrue: [
			orientation := orientation nextClockwise.
		].	! !
!MarsRoverTest methodsFor: 'tests' stamp: 'JEA 10/25/2020 20:00:03'!
test03RoverCantBeInitializedWithInvalidOrientation

	self should: [MarsRover at: cartesianCenter facing: Orientation new]
		raise: Error
		withMessage: ''.
		
		! !
!MarsRoverTest methodsFor: 'tests' stamp: 'JEA 10/25/2020 20:00:20' prior: 50876551!
test03RoverCantBeInitializedWithInvalidOrientation

	self should: [MarsRover at: cartesianCenter facing: Orientation new]
		raise: Error
		withMessageText: ''.! !
!Orientation class methodsFor: 'instance creation' stamp: 'JEA 10/25/2020 20:01:20' overrides: 16783533!
new

	self error: self cantInitializeAbstractErrorDescription.! !
!Orientation class methodsFor: 'instance creation' stamp: 'JEA 10/25/2020 20:01:25' prior: 50876568 overrides: 16783533!
new

	self error: self cannotInitializeAbstractErrorDescription.! !
!Orientation class methodsFor: 'error messages' stamp: 'JEA 10/25/2020 20:01:55'!
cannotInitializeAbstractErrorDescription

	! !
!Orientation class methodsFor: 'error messages' stamp: 'JEA 10/25/2020 20:02:16' prior: 50876579!
cannotInitializeAbstractErrorDescription

	^'Cannot initialize abstract orientation.'! !
!Orientation class methodsFor: 'error messages' stamp: 'JEA 10/25/2020 20:02:27'!
cannotInstanceAbstractErrorDescription

	^'Cannot instance abstract orientation.'! !

!methodRemoval: Orientation class #cannotInitializeAbstractErrorDescription stamp: 'JEA 10/25/2020 20:02:32'!
cannotInitializeAbstractErrorDescription

	^'Cannot initialize abstract orientation.'!
!Orientation class methodsFor: 'instance creation' stamp: 'JEA 10/25/2020 20:02:40' prior: 50876574 overrides: 16783533!
new

	self error: self cannotInstanceAbstractErrorDescription.! !
!North class methodsFor: 'instance creation' stamp: 'JEA 10/25/2020 20:02:53' overrides: 50876603!
new

	self error: self cannotInstanceAbstractErrorDescription.! !
!South class methodsFor: 'instance creation' stamp: 'JEA 10/25/2020 20:02:53' overrides: 50876603!
new

	self error: self cannotInstanceAbstractErrorDescription.! !
!West class methodsFor: 'instance creation' stamp: 'JEA 10/25/2020 20:02:53' overrides: 50876603!
new

	self error: self cannotInstanceAbstractErrorDescription.! !
!East class methodsFor: 'instance creation' stamp: 'JEA 10/25/2020 20:02:53' overrides: 50876603!
new

	self error: self cannotInstanceAbstractErrorDescription.! !

!methodRemoval: Orientation class #new stamp: 'JEA 10/25/2020 20:02:53'!
new

	self error: self cannotInstanceAbstractErrorDescription.!
!Orientation class methodsFor: 'instance creation' stamp: 'JEA 10/25/2020 20:02:56' overrides: 16783533!
new

	self error: self cannotInstanceAbstractErrorDescription.! !
!East class methodsFor: 'instance creation' stamp: 'JEA 10/25/2020 20:03:04' prior: 50876627 overrides: 50876637!
new

	self basicNew.! !
!North class methodsFor: 'instance creation' stamp: 'JEA 10/25/2020 20:04:01' prior: 50876609 overrides: 50876637!
new

	self basicNew.! !
!South class methodsFor: 'instance creation' stamp: 'JEA 10/25/2020 20:04:10' prior: 50876615 overrides: 50876637!
new

	self basicNew.! !
!West class methodsFor: 'instance creation' stamp: 'JEA 10/25/2020 20:04:14' prior: 50876621 overrides: 50876637!
new

	self basicNew.! !
!East class methodsFor: 'instance creation' stamp: 'JEA 10/25/2020 20:04:31' prior: 50876643 overrides: 50876637!
new

	^self basicNew.! !
!North class methodsFor: 'instance creation' stamp: 'JEA 10/25/2020 20:04:35' prior: 50876648 overrides: 50876637!
new

	^self basicNew.! !
!South class methodsFor: 'instance creation' stamp: 'JEA 10/25/2020 20:04:39' prior: 50876653 overrides: 50876637!
new

	^self basicNew.! !
!West class methodsFor: 'instance creation' stamp: 'JEA 10/25/2020 20:04:44' prior: 50876658 overrides: 50876637!
new

	^self basicNew.! !
!MarsRoverTest methodsFor: 'tests' stamp: 'JEA 10/25/2020 20:05:13' prior: 50876559!
test03RoverCantBeInitializedWithInvalidOrientation

	self should: [MarsRover at: cartesianCenter facing: Orientation new]
		raise: Error
		withMessageText: Orientation cannotInstanceAbstractErrorDescription .! !
!MarsRoverTest methodsFor: 'tests' stamp: 'JEA 10/25/2020 20:05:15' prior: 50876682!
test03RoverCantBeInitializedWithInvalidOrientation

	self should: [MarsRover at: cartesianCenter facing: Orientation new]
		raise: Error
		withMessageText: Orientation cannotInstanceAbstractErrorDescription.! !
!Orientation class methodsFor: 'instance creation' stamp: 'JEA 10/25/2020 20:05:26' prior: 50876637 overrides: 16783533!
new

	"self error: self cannotInstanceAbstractErrorDescription."! !

!testRun: #MarsRoverTest #test01NewRoverShouldBeAtInitializedPosition stamp: 'JEA 10/25/2020 20:05:27'!
PASSED!

!testRun: #MarsRoverTest #test02NewRoverShouldBeFacingInitializedDirection stamp: 'JEA 10/25/2020 20:05:27'!
PASSED!

!testRun: #MarsRoverTest #test03RoverCantBeInitializedWithInvalidOrientation stamp: 'JEA 10/25/2020 20:05:27'!
FAILURE!

!testRun: #MarsRoverTest #test04RoverMovesForwardWhenFacingNorth stamp: 'JEA 10/25/2020 20:05:27'!
PASSED!

!testRun: #MarsRoverTest #test05RoverMovesBackwardsWhenFacingNorth stamp: 'JEA 10/25/2020 20:05:27'!
PASSED!

!testRun: #MarsRoverTest #test06RoverRotatesLeftWhenFacingNorth stamp: 'JEA 10/25/2020 20:05:27'!
PASSED!

!testRun: #MarsRoverTest #test07RoverRotatesRightWhenFacingNorth stamp: 'JEA 10/25/2020 20:05:27'!
PASSED!

!testRun: #MarsRoverTest #test08RoverMovesForwardWhenFacingEast stamp: 'JEA 10/25/2020 20:05:27'!
PASSED!

!testRun: #MarsRoverTest #test09RoverMovesBackwardsWhenFacingEast stamp: 'JEA 10/25/2020 20:05:27'!
PASSED!

!testRun: #MarsRoverTest #test10RoverRotatesLeftWhenFacingEast stamp: 'JEA 10/25/2020 20:05:27'!
PASSED!

!testRun: #MarsRoverTest #test11RoverRotatesRightWhenFacingEast stamp: 'JEA 10/25/2020 20:05:27'!
PASSED!

!testRun: #MarsRoverTest #test12RoverMovesForwardWhenFacingSouth stamp: 'JEA 10/25/2020 20:05:27'!
PASSED!

!testRun: #MarsRoverTest #test13RoverMovesBackwardsWhenFacingSouth stamp: 'JEA 10/25/2020 20:05:27'!
PASSED!

!testRun: #MarsRoverTest #test14RoverRotatesLeftWhenFacingSouth stamp: 'JEA 10/25/2020 20:05:27'!
PASSED!

!testRun: #MarsRoverTest #test15RoverRotatesRightWhenFacingSouth stamp: 'JEA 10/25/2020 20:05:27'!
PASSED!

!testRun: #MarsRoverTest #test16RoverMovesForwardWhenFacingWest stamp: 'JEA 10/25/2020 20:05:27'!
PASSED!

!testRun: #MarsRoverTest #test17RoverMovesBackwardsWhenFacingWest stamp: 'JEA 10/25/2020 20:05:27'!
PASSED!

!testRun: #MarsRoverTest #test18RoverRotatesLeftWhenFacingWest stamp: 'JEA 10/25/2020 20:05:27'!
PASSED!

!testRun: #MarsRoverTest #test19RoverRotatesRightWhenFacingWest stamp: 'JEA 10/25/2020 20:05:27'!
PASSED!

!testRun: #MarsRoverTest #test03RoverCantBeInitializedWithInvalidOrientation stamp: 'JEA 10/25/2020 20:05:27'!
FAILURE!
!Orientation class methodsFor: 'instance creation' stamp: 'JEA 10/25/2020 20:05:34' prior: 50876703 overrides: 16783533!
new

	self error: self cannotInstanceAbstractErrorDescription.! !

!testRun: #MarsRoverTest #test01NewRoverShouldBeAtInitializedPosition stamp: 'JEA 10/25/2020 20:05:34'!
PASSED!

!testRun: #MarsRoverTest #test02NewRoverShouldBeFacingInitializedDirection stamp: 'JEA 10/25/2020 20:05:34'!
PASSED!

!testRun: #MarsRoverTest #test03RoverCantBeInitializedWithInvalidOrientation stamp: 'JEA 10/25/2020 20:05:34'!
PASSED!

!testRun: #MarsRoverTest #test04RoverMovesForwardWhenFacingNorth stamp: 'JEA 10/25/2020 20:05:34'!
PASSED!

!testRun: #MarsRoverTest #test05RoverMovesBackwardsWhenFacingNorth stamp: 'JEA 10/25/2020 20:05:34'!
PASSED!

!testRun: #MarsRoverTest #test06RoverRotatesLeftWhenFacingNorth stamp: 'JEA 10/25/2020 20:05:34'!
PASSED!

!testRun: #MarsRoverTest #test07RoverRotatesRightWhenFacingNorth stamp: 'JEA 10/25/2020 20:05:34'!
PASSED!

!testRun: #MarsRoverTest #test08RoverMovesForwardWhenFacingEast stamp: 'JEA 10/25/2020 20:05:34'!
PASSED!

!testRun: #MarsRoverTest #test09RoverMovesBackwardsWhenFacingEast stamp: 'JEA 10/25/2020 20:05:34'!
PASSED!

!testRun: #MarsRoverTest #test10RoverRotatesLeftWhenFacingEast stamp: 'JEA 10/25/2020 20:05:34'!
PASSED!

!testRun: #MarsRoverTest #test11RoverRotatesRightWhenFacingEast stamp: 'JEA 10/25/2020 20:05:34'!
PASSED!

!testRun: #MarsRoverTest #test12RoverMovesForwardWhenFacingSouth stamp: 'JEA 10/25/2020 20:05:34'!
PASSED!

!testRun: #MarsRoverTest #test13RoverMovesBackwardsWhenFacingSouth stamp: 'JEA 10/25/2020 20:05:34'!
PASSED!

!testRun: #MarsRoverTest #test14RoverRotatesLeftWhenFacingSouth stamp: 'JEA 10/25/2020 20:05:34'!
PASSED!

!testRun: #MarsRoverTest #test15RoverRotatesRightWhenFacingSouth stamp: 'JEA 10/25/2020 20:05:34'!
PASSED!

!testRun: #MarsRoverTest #test16RoverMovesForwardWhenFacingWest stamp: 'JEA 10/25/2020 20:05:34'!
PASSED!

!testRun: #MarsRoverTest #test17RoverMovesBackwardsWhenFacingWest stamp: 'JEA 10/25/2020 20:05:34'!
PASSED!

!testRun: #MarsRoverTest #test18RoverRotatesLeftWhenFacingWest stamp: 'JEA 10/25/2020 20:05:34'!
PASSED!

!testRun: #MarsRoverTest #test19RoverRotatesRightWhenFacingWest stamp: 'JEA 10/25/2020 20:05:34'!
PASSED!
!MarsRoverTest methodsFor: 'tests' stamp: 'JEA 10/25/2020 20:06:44'!
test20RoverMovesForwardMoreThanOnce
	| marsRover |
	marsRover := MarsRover at: cartesianCenter facing: north.
	
	marsRover command: 'ff'.
	
	self assert: (marsRover isFacing: north).
	self assert: (marsRover isAt: cartesianCenter + (0@2)).! !

!testRun: #MarsRoverTest #test01NewRoverShouldBeAtInitializedPosition stamp: 'JEA 10/25/2020 20:06:46'!
PASSED!

!testRun: #MarsRoverTest #test02NewRoverShouldBeFacingInitializedDirection stamp: 'JEA 10/25/2020 20:06:46'!
PASSED!

!testRun: #MarsRoverTest #test03RoverCantBeInitializedWithInvalidOrientation stamp: 'JEA 10/25/2020 20:06:46'!
PASSED!

!testRun: #MarsRoverTest #test04RoverMovesForwardWhenFacingNorth stamp: 'JEA 10/25/2020 20:06:46'!
PASSED!

!testRun: #MarsRoverTest #test05RoverMovesBackwardsWhenFacingNorth stamp: 'JEA 10/25/2020 20:06:46'!
PASSED!

!testRun: #MarsRoverTest #test06RoverRotatesLeftWhenFacingNorth stamp: 'JEA 10/25/2020 20:06:46'!
PASSED!

!testRun: #MarsRoverTest #test07RoverRotatesRightWhenFacingNorth stamp: 'JEA 10/25/2020 20:06:46'!
PASSED!

!testRun: #MarsRoverTest #test08RoverMovesForwardWhenFacingEast stamp: 'JEA 10/25/2020 20:06:46'!
PASSED!

!testRun: #MarsRoverTest #test09RoverMovesBackwardsWhenFacingEast stamp: 'JEA 10/25/2020 20:06:46'!
PASSED!

!testRun: #MarsRoverTest #test10RoverRotatesLeftWhenFacingEast stamp: 'JEA 10/25/2020 20:06:46'!
PASSED!

!testRun: #MarsRoverTest #test11RoverRotatesRightWhenFacingEast stamp: 'JEA 10/25/2020 20:06:46'!
PASSED!

!testRun: #MarsRoverTest #test12RoverMovesForwardWhenFacingSouth stamp: 'JEA 10/25/2020 20:06:46'!
PASSED!

!testRun: #MarsRoverTest #test13RoverMovesBackwardsWhenFacingSouth stamp: 'JEA 10/25/2020 20:06:46'!
PASSED!

!testRun: #MarsRoverTest #test14RoverRotatesLeftWhenFacingSouth stamp: 'JEA 10/25/2020 20:06:46'!
PASSED!

!testRun: #MarsRoverTest #test15RoverRotatesRightWhenFacingSouth stamp: 'JEA 10/25/2020 20:06:47'!
PASSED!

!testRun: #MarsRoverTest #test16RoverMovesForwardWhenFacingWest stamp: 'JEA 10/25/2020 20:06:47'!
PASSED!

!testRun: #MarsRoverTest #test17RoverMovesBackwardsWhenFacingWest stamp: 'JEA 10/25/2020 20:06:47'!
PASSED!

!testRun: #MarsRoverTest #test18RoverRotatesLeftWhenFacingWest stamp: 'JEA 10/25/2020 20:06:47'!
PASSED!

!testRun: #MarsRoverTest #test19RoverRotatesRightWhenFacingWest stamp: 'JEA 10/25/2020 20:06:47'!
PASSED!

!testRun: #MarsRoverTest #test20RoverMovesForwardMoreThanOnce stamp: 'JEA 10/25/2020 20:06:47'!
FAILURE!

!testRun: #MarsRoverTest #test20RoverMovesForwardMoreThanOnce stamp: 'JEA 10/25/2020 20:06:47'!
FAILURE!

marsRover isAt: 0@0.!
!MarsRover methodsFor: 'movement' stamp: 'JEA 10/25/2020 20:08:35' prior: 50876536!
command: aCommandSequence

	aCommandSequence do: [ :aCommand |
		(aCommand = 'f')
			ifTrue: [
				position := position + orientation vector.
			].
			
		(aCommand = 'b')
			ifTrue: [
				position := position - orientation vector.
			].
			
		(aCommand = 'l')
			ifTrue: [
				orientation := orientation nextCounterClockwise.
			].

		(aCommand = 'r')
			ifTrue: [
				orientation := orientation nextClockwise.
			].
	].! !

!testRun: #MarsRoverTest #test01NewRoverShouldBeAtInitializedPosition stamp: 'JEA 10/25/2020 20:08:37'!
PASSED!

!testRun: #MarsRoverTest #test02NewRoverShouldBeFacingInitializedDirection stamp: 'JEA 10/25/2020 20:08:37'!
PASSED!

!testRun: #MarsRoverTest #test03RoverCantBeInitializedWithInvalidOrientation stamp: 'JEA 10/25/2020 20:08:37'!
PASSED!

!testRun: #MarsRoverTest #test04RoverMovesForwardWhenFacingNorth stamp: 'JEA 10/25/2020 20:08:37'!
FAILURE!

!testRun: #MarsRoverTest #test05RoverMovesBackwardsWhenFacingNorth stamp: 'JEA 10/25/2020 20:08:37'!
FAILURE!

!testRun: #MarsRoverTest #test06RoverRotatesLeftWhenFacingNorth stamp: 'JEA 10/25/2020 20:08:37'!
FAILURE!

!testRun: #MarsRoverTest #test07RoverRotatesRightWhenFacingNorth stamp: 'JEA 10/25/2020 20:08:37'!
FAILURE!

!testRun: #MarsRoverTest #test08RoverMovesForwardWhenFacingEast stamp: 'JEA 10/25/2020 20:08:37'!
FAILURE!

!testRun: #MarsRoverTest #test09RoverMovesBackwardsWhenFacingEast stamp: 'JEA 10/25/2020 20:08:37'!
FAILURE!

!testRun: #MarsRoverTest #test10RoverRotatesLeftWhenFacingEast stamp: 'JEA 10/25/2020 20:08:37'!
FAILURE!

!testRun: #MarsRoverTest #test11RoverRotatesRightWhenFacingEast stamp: 'JEA 10/25/2020 20:08:37'!
FAILURE!

!testRun: #MarsRoverTest #test12RoverMovesForwardWhenFacingSouth stamp: 'JEA 10/25/2020 20:08:37'!
FAILURE!

!testRun: #MarsRoverTest #test13RoverMovesBackwardsWhenFacingSouth stamp: 'JEA 10/25/2020 20:08:37'!
FAILURE!

!testRun: #MarsRoverTest #test14RoverRotatesLeftWhenFacingSouth stamp: 'JEA 10/25/2020 20:08:37'!
FAILURE!

!testRun: #MarsRoverTest #test15RoverRotatesRightWhenFacingSouth stamp: 'JEA 10/25/2020 20:08:37'!
FAILURE!

!testRun: #MarsRoverTest #test16RoverMovesForwardWhenFacingWest stamp: 'JEA 10/25/2020 20:08:37'!
FAILURE!

!testRun: #MarsRoverTest #test17RoverMovesBackwardsWhenFacingWest stamp: 'JEA 10/25/2020 20:08:37'!
FAILURE!

!testRun: #MarsRoverTest #test18RoverRotatesLeftWhenFacingWest stamp: 'JEA 10/25/2020 20:08:37'!
FAILURE!

!testRun: #MarsRoverTest #test19RoverRotatesRightWhenFacingWest stamp: 'JEA 10/25/2020 20:08:37'!
FAILURE!

!testRun: #MarsRoverTest #test20RoverMovesForwardMoreThanOnce stamp: 'JEA 10/25/2020 20:08:37'!
FAILURE!

!testRun: #MarsRoverTest #test01NewRoverShouldBeAtInitializedPosition stamp: 'JEA 10/25/2020 20:08:58'!
PASSED!

!testRun: #MarsRoverTest #test02NewRoverShouldBeFacingInitializedDirection stamp: 'JEA 10/25/2020 20:08:58'!
PASSED!

!testRun: #MarsRoverTest #test03RoverCantBeInitializedWithInvalidOrientation stamp: 'JEA 10/25/2020 20:08:58'!
PASSED!

!testRun: #MarsRoverTest #test04RoverMovesForwardWhenFacingNorth stamp: 'JEA 10/25/2020 20:08:58'!
FAILURE!

!testRun: #MarsRoverTest #test05RoverMovesBackwardsWhenFacingNorth stamp: 'JEA 10/25/2020 20:08:58'!
FAILURE!

!testRun: #MarsRoverTest #test06RoverRotatesLeftWhenFacingNorth stamp: 'JEA 10/25/2020 20:08:58'!
FAILURE!

!testRun: #MarsRoverTest #test07RoverRotatesRightWhenFacingNorth stamp: 'JEA 10/25/2020 20:08:58'!
FAILURE!

!testRun: #MarsRoverTest #test08RoverMovesForwardWhenFacingEast stamp: 'JEA 10/25/2020 20:08:58'!
FAILURE!

!testRun: #MarsRoverTest #test09RoverMovesBackwardsWhenFacingEast stamp: 'JEA 10/25/2020 20:08:58'!
FAILURE!

!testRun: #MarsRoverTest #test10RoverRotatesLeftWhenFacingEast stamp: 'JEA 10/25/2020 20:08:58'!
FAILURE!

!testRun: #MarsRoverTest #test11RoverRotatesRightWhenFacingEast stamp: 'JEA 10/25/2020 20:08:58'!
FAILURE!

!testRun: #MarsRoverTest #test12RoverMovesForwardWhenFacingSouth stamp: 'JEA 10/25/2020 20:08:58'!
FAILURE!

!testRun: #MarsRoverTest #test13RoverMovesBackwardsWhenFacingSouth stamp: 'JEA 10/25/2020 20:08:58'!
FAILURE!

!testRun: #MarsRoverTest #test14RoverRotatesLeftWhenFacingSouth stamp: 'JEA 10/25/2020 20:08:58'!
FAILURE!

!testRun: #MarsRoverTest #test15RoverRotatesRightWhenFacingSouth stamp: 'JEA 10/25/2020 20:08:58'!
FAILURE!

!testRun: #MarsRoverTest #test16RoverMovesForwardWhenFacingWest stamp: 'JEA 10/25/2020 20:08:58'!
FAILURE!

!testRun: #MarsRoverTest #test17RoverMovesBackwardsWhenFacingWest stamp: 'JEA 10/25/2020 20:08:58'!
FAILURE!

!testRun: #MarsRoverTest #test18RoverRotatesLeftWhenFacingWest stamp: 'JEA 10/25/2020 20:08:58'!
FAILURE!

!testRun: #MarsRoverTest #test19RoverRotatesRightWhenFacingWest stamp: 'JEA 10/25/2020 20:08:58'!
FAILURE!

!testRun: #MarsRoverTest #test20RoverMovesForwardMoreThanOnce stamp: 'JEA 10/25/2020 20:08:58'!
FAILURE!

!testRun: #MarsRoverTest #test04RoverMovesForwardWhenFacingNorth stamp: 'JEA 10/25/2020 20:09:01'!
FAILURE!
!MarsRover methodsFor: 'movement' stamp: 'JEA 10/25/2020 20:09:44' prior: 50876931!
command: aCommandSequence

	aCommandSequence do: [ :aCommand |
		(aCommand = $f)
			ifTrue: [
				position := position + orientation vector.
			].
			
		(aCommand = $b)
			ifTrue: [
				position := position - orientation vector.
			].
			
		(aCommand = $l)
			ifTrue: [
				orientation := orientation nextCounterClockwise.
			].

		(aCommand = $r)
			ifTrue: [
				orientation := orientation nextClockwise.
			].
	].! !

!testRun: #MarsRoverTest #test01NewRoverShouldBeAtInitializedPosition stamp: 'JEA 10/25/2020 20:09:46'!
PASSED!

!testRun: #MarsRoverTest #test02NewRoverShouldBeFacingInitializedDirection stamp: 'JEA 10/25/2020 20:09:46'!
PASSED!

!testRun: #MarsRoverTest #test03RoverCantBeInitializedWithInvalidOrientation stamp: 'JEA 10/25/2020 20:09:46'!
PASSED!

!testRun: #MarsRoverTest #test04RoverMovesForwardWhenFacingNorth stamp: 'JEA 10/25/2020 20:09:46'!
PASSED!

!testRun: #MarsRoverTest #test05RoverMovesBackwardsWhenFacingNorth stamp: 'JEA 10/25/2020 20:09:46'!
PASSED!

!testRun: #MarsRoverTest #test06RoverRotatesLeftWhenFacingNorth stamp: 'JEA 10/25/2020 20:09:46'!
PASSED!

!testRun: #MarsRoverTest #test07RoverRotatesRightWhenFacingNorth stamp: 'JEA 10/25/2020 20:09:46'!
PASSED!

!testRun: #MarsRoverTest #test08RoverMovesForwardWhenFacingEast stamp: 'JEA 10/25/2020 20:09:46'!
PASSED!

!testRun: #MarsRoverTest #test09RoverMovesBackwardsWhenFacingEast stamp: 'JEA 10/25/2020 20:09:46'!
PASSED!

!testRun: #MarsRoverTest #test10RoverRotatesLeftWhenFacingEast stamp: 'JEA 10/25/2020 20:09:46'!
PASSED!

!testRun: #MarsRoverTest #test11RoverRotatesRightWhenFacingEast stamp: 'JEA 10/25/2020 20:09:46'!
PASSED!

!testRun: #MarsRoverTest #test12RoverMovesForwardWhenFacingSouth stamp: 'JEA 10/25/2020 20:09:46'!
PASSED!

!testRun: #MarsRoverTest #test13RoverMovesBackwardsWhenFacingSouth stamp: 'JEA 10/25/2020 20:09:46'!
PASSED!

!testRun: #MarsRoverTest #test14RoverRotatesLeftWhenFacingSouth stamp: 'JEA 10/25/2020 20:09:46'!
PASSED!

!testRun: #MarsRoverTest #test15RoverRotatesRightWhenFacingSouth stamp: 'JEA 10/25/2020 20:09:46'!
PASSED!

!testRun: #MarsRoverTest #test16RoverMovesForwardWhenFacingWest stamp: 'JEA 10/25/2020 20:09:46'!
PASSED!

!testRun: #MarsRoverTest #test17RoverMovesBackwardsWhenFacingWest stamp: 'JEA 10/25/2020 20:09:46'!
PASSED!

!testRun: #MarsRoverTest #test18RoverRotatesLeftWhenFacingWest stamp: 'JEA 10/25/2020 20:09:46'!
PASSED!

!testRun: #MarsRoverTest #test19RoverRotatesRightWhenFacingWest stamp: 'JEA 10/25/2020 20:09:46'!
PASSED!

!testRun: #MarsRoverTest #test20RoverMovesForwardMoreThanOnce stamp: 'JEA 10/25/2020 20:09:46'!
PASSED!

!testRun: #MarsRoverTest #test01NewRoverShouldBeAtInitializedPosition stamp: 'JEA 10/25/2020 20:09:50'!
PASSED!

!testRun: #MarsRoverTest #test02NewRoverShouldBeFacingInitializedDirection stamp: 'JEA 10/25/2020 20:09:50'!
PASSED!

!testRun: #MarsRoverTest #test03RoverCantBeInitializedWithInvalidOrientation stamp: 'JEA 10/25/2020 20:09:50'!
PASSED!

!testRun: #MarsRoverTest #test04RoverMovesForwardWhenFacingNorth stamp: 'JEA 10/25/2020 20:09:50'!
PASSED!

!testRun: #MarsRoverTest #test05RoverMovesBackwardsWhenFacingNorth stamp: 'JEA 10/25/2020 20:09:50'!
PASSED!

!testRun: #MarsRoverTest #test06RoverRotatesLeftWhenFacingNorth stamp: 'JEA 10/25/2020 20:09:50'!
PASSED!

!testRun: #MarsRoverTest #test07RoverRotatesRightWhenFacingNorth stamp: 'JEA 10/25/2020 20:09:50'!
PASSED!

!testRun: #MarsRoverTest #test08RoverMovesForwardWhenFacingEast stamp: 'JEA 10/25/2020 20:09:50'!
PASSED!

!testRun: #MarsRoverTest #test09RoverMovesBackwardsWhenFacingEast stamp: 'JEA 10/25/2020 20:09:50'!
PASSED!

!testRun: #MarsRoverTest #test10RoverRotatesLeftWhenFacingEast stamp: 'JEA 10/25/2020 20:09:50'!
PASSED!

!testRun: #MarsRoverTest #test11RoverRotatesRightWhenFacingEast stamp: 'JEA 10/25/2020 20:09:50'!
PASSED!

!testRun: #MarsRoverTest #test12RoverMovesForwardWhenFacingSouth stamp: 'JEA 10/25/2020 20:09:50'!
PASSED!

!testRun: #MarsRoverTest #test13RoverMovesBackwardsWhenFacingSouth stamp: 'JEA 10/25/2020 20:09:50'!
PASSED!

!testRun: #MarsRoverTest #test14RoverRotatesLeftWhenFacingSouth stamp: 'JEA 10/25/2020 20:09:50'!
PASSED!

!testRun: #MarsRoverTest #test15RoverRotatesRightWhenFacingSouth stamp: 'JEA 10/25/2020 20:09:50'!
PASSED!

!testRun: #MarsRoverTest #test16RoverMovesForwardWhenFacingWest stamp: 'JEA 10/25/2020 20:09:50'!
PASSED!

!testRun: #MarsRoverTest #test17RoverMovesBackwardsWhenFacingWest stamp: 'JEA 10/25/2020 20:09:50'!
PASSED!

!testRun: #MarsRoverTest #test18RoverRotatesLeftWhenFacingWest stamp: 'JEA 10/25/2020 20:09:50'!
PASSED!

!testRun: #MarsRoverTest #test19RoverRotatesRightWhenFacingWest stamp: 'JEA 10/25/2020 20:09:50'!
PASSED!

!testRun: #MarsRoverTest #test20RoverMovesForwardMoreThanOnce stamp: 'JEA 10/25/2020 20:09:50'!
PASSED!
!MarsRoverTest methodsFor: 'tests' stamp: 'JEA 10/25/2020 20:10:33' prior: 50876848!
test20RoverMovesForwardMoreThanOnce
	| marsRover |
	marsRover := MarsRover at: cartesianCenter facing: north.
	
	marsRover command: 'ff'.
	
	self assert: (marsRover isFacing: north).
	self assert: (marsRover isAt: cartesianCenter + (0@2)).! !
!MarsRoverTest methodsFor: 'tests' stamp: 'JEA 10/25/2020 20:10:40' prior: 50877241!
test20RoverMovesForwardMoreThanOnce
	| marsRover |
	marsRover := MarsRover at: cartesianCenter facing: north.
	
	marsRover command: 'fbfb'.
	
	self assert: (marsRover isFacing: north).
	self assert: (marsRover isAt: cartesianCenter + (0@2)).! !
!MarsRoverTest methodsFor: 'tests' stamp: 'JEA 10/25/2020 20:10:45'!
test20RoverMovesMoreThanOnce
	| marsRover |
	marsRover := MarsRover at: cartesianCenter facing: north.
	
	marsRover command: 'fbfb'.
	
	self assert: (marsRover isFacing: north).
	self assert: (marsRover isAt: cartesianCenter + (0@2)).! !

!testRun: #MarsRoverTest #test01NewRoverShouldBeAtInitializedPosition stamp: 'JEA 10/25/2020 20:10:45'!
PASSED!

!testRun: #MarsRoverTest #test02NewRoverShouldBeFacingInitializedDirection stamp: 'JEA 10/25/2020 20:10:45'!
PASSED!

!testRun: #MarsRoverTest #test03RoverCantBeInitializedWithInvalidOrientation stamp: 'JEA 10/25/2020 20:10:45'!
PASSED!

!testRun: #MarsRoverTest #test04RoverMovesForwardWhenFacingNorth stamp: 'JEA 10/25/2020 20:10:45'!
PASSED!

!testRun: #MarsRoverTest #test05RoverMovesBackwardsWhenFacingNorth stamp: 'JEA 10/25/2020 20:10:45'!
PASSED!

!testRun: #MarsRoverTest #test06RoverRotatesLeftWhenFacingNorth stamp: 'JEA 10/25/2020 20:10:45'!
PASSED!

!testRun: #MarsRoverTest #test07RoverRotatesRightWhenFacingNorth stamp: 'JEA 10/25/2020 20:10:45'!
PASSED!

!testRun: #MarsRoverTest #test08RoverMovesForwardWhenFacingEast stamp: 'JEA 10/25/2020 20:10:45'!
PASSED!

!testRun: #MarsRoverTest #test09RoverMovesBackwardsWhenFacingEast stamp: 'JEA 10/25/2020 20:10:45'!
PASSED!

!testRun: #MarsRoverTest #test10RoverRotatesLeftWhenFacingEast stamp: 'JEA 10/25/2020 20:10:45'!
PASSED!

!testRun: #MarsRoverTest #test11RoverRotatesRightWhenFacingEast stamp: 'JEA 10/25/2020 20:10:45'!
PASSED!

!testRun: #MarsRoverTest #test12RoverMovesForwardWhenFacingSouth stamp: 'JEA 10/25/2020 20:10:45'!
PASSED!

!testRun: #MarsRoverTest #test13RoverMovesBackwardsWhenFacingSouth stamp: 'JEA 10/25/2020 20:10:45'!
PASSED!

!testRun: #MarsRoverTest #test14RoverRotatesLeftWhenFacingSouth stamp: 'JEA 10/25/2020 20:10:45'!
PASSED!

!testRun: #MarsRoverTest #test15RoverRotatesRightWhenFacingSouth stamp: 'JEA 10/25/2020 20:10:45'!
PASSED!

!testRun: #MarsRoverTest #test16RoverMovesForwardWhenFacingWest stamp: 'JEA 10/25/2020 20:10:45'!
PASSED!

!testRun: #MarsRoverTest #test17RoverMovesBackwardsWhenFacingWest stamp: 'JEA 10/25/2020 20:10:45'!
PASSED!

!testRun: #MarsRoverTest #test18RoverRotatesLeftWhenFacingWest stamp: 'JEA 10/25/2020 20:10:45'!
PASSED!

!testRun: #MarsRoverTest #test19RoverRotatesRightWhenFacingWest stamp: 'JEA 10/25/2020 20:10:45'!
PASSED!

!testRun: #MarsRoverTest #test20RoverMovesForwardMoreThanOnce stamp: 'JEA 10/25/2020 20:10:45'!
FAILURE!

!testRun: #MarsRoverTest #test20RoverMovesMoreThanOnce stamp: 'JEA 10/25/2020 20:10:45'!
FAILURE!
!MarsRoverTest methodsFor: 'tests' stamp: 'JEA 10/25/2020 20:10:54' prior: 50877262!
test20RoverMovesMoreThanOnce
	| marsRover |
	marsRover := MarsRover at: cartesianCenter facing: north.
	
	marsRover command: 'fbfb'.
	
	self assert: (marsRover isFacing: north).
	self assert: (marsRover isAt: cartesianCenter).! !

!testRun: #MarsRoverTest #test01NewRoverShouldBeAtInitializedPosition stamp: 'JEA 10/25/2020 20:10:55'!
PASSED!

!testRun: #MarsRoverTest #test02NewRoverShouldBeFacingInitializedDirection stamp: 'JEA 10/25/2020 20:10:55'!
PASSED!

!testRun: #MarsRoverTest #test03RoverCantBeInitializedWithInvalidOrientation stamp: 'JEA 10/25/2020 20:10:55'!
PASSED!

!testRun: #MarsRoverTest #test04RoverMovesForwardWhenFacingNorth stamp: 'JEA 10/25/2020 20:10:55'!
PASSED!

!testRun: #MarsRoverTest #test05RoverMovesBackwardsWhenFacingNorth stamp: 'JEA 10/25/2020 20:10:55'!
PASSED!

!testRun: #MarsRoverTest #test06RoverRotatesLeftWhenFacingNorth stamp: 'JEA 10/25/2020 20:10:55'!
PASSED!

!testRun: #MarsRoverTest #test07RoverRotatesRightWhenFacingNorth stamp: 'JEA 10/25/2020 20:10:55'!
PASSED!

!testRun: #MarsRoverTest #test08RoverMovesForwardWhenFacingEast stamp: 'JEA 10/25/2020 20:10:55'!
PASSED!

!testRun: #MarsRoverTest #test09RoverMovesBackwardsWhenFacingEast stamp: 'JEA 10/25/2020 20:10:55'!
PASSED!

!testRun: #MarsRoverTest #test10RoverRotatesLeftWhenFacingEast stamp: 'JEA 10/25/2020 20:10:55'!
PASSED!

!testRun: #MarsRoverTest #test11RoverRotatesRightWhenFacingEast stamp: 'JEA 10/25/2020 20:10:55'!
PASSED!

!testRun: #MarsRoverTest #test12RoverMovesForwardWhenFacingSouth stamp: 'JEA 10/25/2020 20:10:55'!
PASSED!

!testRun: #MarsRoverTest #test13RoverMovesBackwardsWhenFacingSouth stamp: 'JEA 10/25/2020 20:10:55'!
PASSED!

!testRun: #MarsRoverTest #test14RoverRotatesLeftWhenFacingSouth stamp: 'JEA 10/25/2020 20:10:55'!
PASSED!

!testRun: #MarsRoverTest #test15RoverRotatesRightWhenFacingSouth stamp: 'JEA 10/25/2020 20:10:55'!
PASSED!

!testRun: #MarsRoverTest #test16RoverMovesForwardWhenFacingWest stamp: 'JEA 10/25/2020 20:10:55'!
PASSED!

!testRun: #MarsRoverTest #test17RoverMovesBackwardsWhenFacingWest stamp: 'JEA 10/25/2020 20:10:55'!
PASSED!

!testRun: #MarsRoverTest #test18RoverRotatesLeftWhenFacingWest stamp: 'JEA 10/25/2020 20:10:55'!
PASSED!

!testRun: #MarsRoverTest #test19RoverRotatesRightWhenFacingWest stamp: 'JEA 10/25/2020 20:10:55'!
PASSED!

!testRun: #MarsRoverTest #test20RoverMovesForwardMoreThanOnce stamp: 'JEA 10/25/2020 20:10:55'!
FAILURE!

!testRun: #MarsRoverTest #test20RoverMovesMoreThanOnce stamp: 'JEA 10/25/2020 20:10:55'!
PASSED!

!testRun: #MarsRoverTest #test20RoverMovesForwardMoreThanOnce stamp: 'JEA 10/25/2020 20:10:55'!
FAILURE!

!testRun: #MarsRoverTest #test01NewRoverShouldBeAtInitializedPosition stamp: 'JEA 10/25/2020 20:10:57'!
PASSED!

!testRun: #MarsRoverTest #test02NewRoverShouldBeFacingInitializedDirection stamp: 'JEA 10/25/2020 20:10:57'!
PASSED!

!testRun: #MarsRoverTest #test03RoverCantBeInitializedWithInvalidOrientation stamp: 'JEA 10/25/2020 20:10:57'!
PASSED!

!testRun: #MarsRoverTest #test04RoverMovesForwardWhenFacingNorth stamp: 'JEA 10/25/2020 20:10:57'!
PASSED!

!testRun: #MarsRoverTest #test05RoverMovesBackwardsWhenFacingNorth stamp: 'JEA 10/25/2020 20:10:57'!
PASSED!

!testRun: #MarsRoverTest #test06RoverRotatesLeftWhenFacingNorth stamp: 'JEA 10/25/2020 20:10:57'!
PASSED!

!testRun: #MarsRoverTest #test07RoverRotatesRightWhenFacingNorth stamp: 'JEA 10/25/2020 20:10:57'!
PASSED!

!testRun: #MarsRoverTest #test08RoverMovesForwardWhenFacingEast stamp: 'JEA 10/25/2020 20:10:57'!
PASSED!

!testRun: #MarsRoverTest #test09RoverMovesBackwardsWhenFacingEast stamp: 'JEA 10/25/2020 20:10:57'!
PASSED!

!testRun: #MarsRoverTest #test10RoverRotatesLeftWhenFacingEast stamp: 'JEA 10/25/2020 20:10:57'!
PASSED!

!testRun: #MarsRoverTest #test11RoverRotatesRightWhenFacingEast stamp: 'JEA 10/25/2020 20:10:57'!
PASSED!

!testRun: #MarsRoverTest #test12RoverMovesForwardWhenFacingSouth stamp: 'JEA 10/25/2020 20:10:57'!
PASSED!

!testRun: #MarsRoverTest #test13RoverMovesBackwardsWhenFacingSouth stamp: 'JEA 10/25/2020 20:10:57'!
PASSED!

!testRun: #MarsRoverTest #test14RoverRotatesLeftWhenFacingSouth stamp: 'JEA 10/25/2020 20:10:57'!
PASSED!

!testRun: #MarsRoverTest #test15RoverRotatesRightWhenFacingSouth stamp: 'JEA 10/25/2020 20:10:57'!
PASSED!

!testRun: #MarsRoverTest #test16RoverMovesForwardWhenFacingWest stamp: 'JEA 10/25/2020 20:10:57'!
PASSED!

!testRun: #MarsRoverTest #test17RoverMovesBackwardsWhenFacingWest stamp: 'JEA 10/25/2020 20:10:57'!
PASSED!

!testRun: #MarsRoverTest #test18RoverRotatesLeftWhenFacingWest stamp: 'JEA 10/25/2020 20:10:57'!
PASSED!

!testRun: #MarsRoverTest #test19RoverRotatesRightWhenFacingWest stamp: 'JEA 10/25/2020 20:10:57'!
PASSED!

!testRun: #MarsRoverTest #test20RoverMovesForwardMoreThanOnce stamp: 'JEA 10/25/2020 20:10:57'!
FAILURE!

!testRun: #MarsRoverTest #test20RoverMovesMoreThanOnce stamp: 'JEA 10/25/2020 20:10:57'!
PASSED!

!testRun: #MarsRoverTest #test20RoverMovesForwardMoreThanOnce stamp: 'JEA 10/25/2020 20:10:57'!
FAILURE!

!testRun: #MarsRoverTest #test01NewRoverShouldBeAtInitializedPosition stamp: 'JEA 10/25/2020 20:11:17'!
PASSED!

!testRun: #MarsRoverTest #test02NewRoverShouldBeFacingInitializedDirection stamp: 'JEA 10/25/2020 20:11:17'!
PASSED!

!testRun: #MarsRoverTest #test03RoverCantBeInitializedWithInvalidOrientation stamp: 'JEA 10/25/2020 20:11:17'!
PASSED!

!testRun: #MarsRoverTest #test04RoverMovesForwardWhenFacingNorth stamp: 'JEA 10/25/2020 20:11:17'!
PASSED!

!testRun: #MarsRoverTest #test05RoverMovesBackwardsWhenFacingNorth stamp: 'JEA 10/25/2020 20:11:17'!
PASSED!

!testRun: #MarsRoverTest #test06RoverRotatesLeftWhenFacingNorth stamp: 'JEA 10/25/2020 20:11:17'!
PASSED!

!testRun: #MarsRoverTest #test07RoverRotatesRightWhenFacingNorth stamp: 'JEA 10/25/2020 20:11:17'!
PASSED!

!testRun: #MarsRoverTest #test08RoverMovesForwardWhenFacingEast stamp: 'JEA 10/25/2020 20:11:17'!
PASSED!

!testRun: #MarsRoverTest #test09RoverMovesBackwardsWhenFacingEast stamp: 'JEA 10/25/2020 20:11:17'!
PASSED!

!testRun: #MarsRoverTest #test10RoverRotatesLeftWhenFacingEast stamp: 'JEA 10/25/2020 20:11:17'!
PASSED!

!testRun: #MarsRoverTest #test11RoverRotatesRightWhenFacingEast stamp: 'JEA 10/25/2020 20:11:17'!
PASSED!

!testRun: #MarsRoverTest #test12RoverMovesForwardWhenFacingSouth stamp: 'JEA 10/25/2020 20:11:17'!
PASSED!

!testRun: #MarsRoverTest #test13RoverMovesBackwardsWhenFacingSouth stamp: 'JEA 10/25/2020 20:11:17'!
PASSED!

!testRun: #MarsRoverTest #test14RoverRotatesLeftWhenFacingSouth stamp: 'JEA 10/25/2020 20:11:17'!
PASSED!

!testRun: #MarsRoverTest #test15RoverRotatesRightWhenFacingSouth stamp: 'JEA 10/25/2020 20:11:17'!
PASSED!

!testRun: #MarsRoverTest #test16RoverMovesForwardWhenFacingWest stamp: 'JEA 10/25/2020 20:11:17'!
PASSED!

!testRun: #MarsRoverTest #test17RoverMovesBackwardsWhenFacingWest stamp: 'JEA 10/25/2020 20:11:17'!
PASSED!

!testRun: #MarsRoverTest #test18RoverRotatesLeftWhenFacingWest stamp: 'JEA 10/25/2020 20:11:17'!
PASSED!

!testRun: #MarsRoverTest #test19RoverRotatesRightWhenFacingWest stamp: 'JEA 10/25/2020 20:11:17'!
PASSED!

!testRun: #MarsRoverTest #test20RoverMovesForwardMoreThanOnce stamp: 'JEA 10/25/2020 20:11:17'!
FAILURE!

!testRun: #MarsRoverTest #test20RoverMovesMoreThanOnce stamp: 'JEA 10/25/2020 20:11:17'!
PASSED!

!testRun: #MarsRoverTest #test20RoverMovesForwardMoreThanOnce stamp: 'JEA 10/25/2020 20:11:17'!
FAILURE!

!methodRemoval: MarsRoverTest #test20RoverMovesForwardMoreThanOnce stamp: 'JEA 10/25/2020 20:11:25'!
test20RoverMovesForwardMoreThanOnce
	| marsRover |
	marsRover := MarsRover at: cartesianCenter facing: north.
	
	marsRover command: 'fbfb'.
	
	self assert: (marsRover isFacing: north).
	self assert: (marsRover isAt: cartesianCenter + (0@2)).!

!testRun: #MarsRoverTest #test01NewRoverShouldBeAtInitializedPosition stamp: 'JEA 10/25/2020 20:11:26'!
PASSED!

!testRun: #MarsRoverTest #test02NewRoverShouldBeFacingInitializedDirection stamp: 'JEA 10/25/2020 20:11:26'!
PASSED!

!testRun: #MarsRoverTest #test03RoverCantBeInitializedWithInvalidOrientation stamp: 'JEA 10/25/2020 20:11:26'!
PASSED!

!testRun: #MarsRoverTest #test04RoverMovesForwardWhenFacingNorth stamp: 'JEA 10/25/2020 20:11:26'!
PASSED!

!testRun: #MarsRoverTest #test05RoverMovesBackwardsWhenFacingNorth stamp: 'JEA 10/25/2020 20:11:26'!
PASSED!

!testRun: #MarsRoverTest #test06RoverRotatesLeftWhenFacingNorth stamp: 'JEA 10/25/2020 20:11:26'!
PASSED!

!testRun: #MarsRoverTest #test07RoverRotatesRightWhenFacingNorth stamp: 'JEA 10/25/2020 20:11:26'!
PASSED!

!testRun: #MarsRoverTest #test08RoverMovesForwardWhenFacingEast stamp: 'JEA 10/25/2020 20:11:26'!
PASSED!

!testRun: #MarsRoverTest #test09RoverMovesBackwardsWhenFacingEast stamp: 'JEA 10/25/2020 20:11:26'!
PASSED!

!testRun: #MarsRoverTest #test10RoverRotatesLeftWhenFacingEast stamp: 'JEA 10/25/2020 20:11:26'!
PASSED!

!testRun: #MarsRoverTest #test11RoverRotatesRightWhenFacingEast stamp: 'JEA 10/25/2020 20:11:26'!
PASSED!

!testRun: #MarsRoverTest #test12RoverMovesForwardWhenFacingSouth stamp: 'JEA 10/25/2020 20:11:26'!
PASSED!

!testRun: #MarsRoverTest #test13RoverMovesBackwardsWhenFacingSouth stamp: 'JEA 10/25/2020 20:11:26'!
PASSED!

!testRun: #MarsRoverTest #test14RoverRotatesLeftWhenFacingSouth stamp: 'JEA 10/25/2020 20:11:26'!
PASSED!

!testRun: #MarsRoverTest #test15RoverRotatesRightWhenFacingSouth stamp: 'JEA 10/25/2020 20:11:26'!
PASSED!

!testRun: #MarsRoverTest #test16RoverMovesForwardWhenFacingWest stamp: 'JEA 10/25/2020 20:11:26'!
PASSED!

!testRun: #MarsRoverTest #test17RoverMovesBackwardsWhenFacingWest stamp: 'JEA 10/25/2020 20:11:26'!
PASSED!

!testRun: #MarsRoverTest #test18RoverRotatesLeftWhenFacingWest stamp: 'JEA 10/25/2020 20:11:26'!
PASSED!

!testRun: #MarsRoverTest #test19RoverRotatesRightWhenFacingWest stamp: 'JEA 10/25/2020 20:11:26'!
PASSED!

!testRun: #MarsRoverTest #test20RoverMovesMoreThanOnce stamp: 'JEA 10/25/2020 20:11:26'!
PASSED!
!MarsRoverTest methodsFor: 'tests' stamp: 'JEA 10/25/2020 20:12:10'!
test21RoverRotatesMoreThanOnce
	| marsRover |
	marsRover := MarsRover at: cartesianCenter facing: north.
	
	marsRover command: 'lrlr'.
	
	self assert: (marsRover isFacing: north).
	self assert: (marsRover isAt: cartesianCenter).! !

!testRun: #MarsRoverTest #test01NewRoverShouldBeAtInitializedPosition stamp: 'JEA 10/25/2020 20:12:11'!
PASSED!

!testRun: #MarsRoverTest #test02NewRoverShouldBeFacingInitializedDirection stamp: 'JEA 10/25/2020 20:12:11'!
PASSED!

!testRun: #MarsRoverTest #test03RoverCantBeInitializedWithInvalidOrientation stamp: 'JEA 10/25/2020 20:12:12'!
PASSED!

!testRun: #MarsRoverTest #test04RoverMovesForwardWhenFacingNorth stamp: 'JEA 10/25/2020 20:12:12'!
PASSED!

!testRun: #MarsRoverTest #test05RoverMovesBackwardsWhenFacingNorth stamp: 'JEA 10/25/2020 20:12:12'!
PASSED!

!testRun: #MarsRoverTest #test06RoverRotatesLeftWhenFacingNorth stamp: 'JEA 10/25/2020 20:12:12'!
PASSED!

!testRun: #MarsRoverTest #test07RoverRotatesRightWhenFacingNorth stamp: 'JEA 10/25/2020 20:12:12'!
PASSED!

!testRun: #MarsRoverTest #test08RoverMovesForwardWhenFacingEast stamp: 'JEA 10/25/2020 20:12:12'!
PASSED!

!testRun: #MarsRoverTest #test09RoverMovesBackwardsWhenFacingEast stamp: 'JEA 10/25/2020 20:12:12'!
PASSED!

!testRun: #MarsRoverTest #test10RoverRotatesLeftWhenFacingEast stamp: 'JEA 10/25/2020 20:12:12'!
PASSED!

!testRun: #MarsRoverTest #test11RoverRotatesRightWhenFacingEast stamp: 'JEA 10/25/2020 20:12:12'!
PASSED!

!testRun: #MarsRoverTest #test12RoverMovesForwardWhenFacingSouth stamp: 'JEA 10/25/2020 20:12:12'!
PASSED!

!testRun: #MarsRoverTest #test13RoverMovesBackwardsWhenFacingSouth stamp: 'JEA 10/25/2020 20:12:12'!
PASSED!

!testRun: #MarsRoverTest #test14RoverRotatesLeftWhenFacingSouth stamp: 'JEA 10/25/2020 20:12:12'!
PASSED!

!testRun: #MarsRoverTest #test15RoverRotatesRightWhenFacingSouth stamp: 'JEA 10/25/2020 20:12:12'!
PASSED!

!testRun: #MarsRoverTest #test16RoverMovesForwardWhenFacingWest stamp: 'JEA 10/25/2020 20:12:12'!
PASSED!

!testRun: #MarsRoverTest #test17RoverMovesBackwardsWhenFacingWest stamp: 'JEA 10/25/2020 20:12:12'!
PASSED!

!testRun: #MarsRoverTest #test18RoverRotatesLeftWhenFacingWest stamp: 'JEA 10/25/2020 20:12:12'!
PASSED!

!testRun: #MarsRoverTest #test19RoverRotatesRightWhenFacingWest stamp: 'JEA 10/25/2020 20:12:12'!
PASSED!

!testRun: #MarsRoverTest #test20RoverMovesMoreThanOnce stamp: 'JEA 10/25/2020 20:12:12'!
PASSED!

!testRun: #MarsRoverTest #test21RoverRotatesMoreThanOnce stamp: 'JEA 10/25/2020 20:12:12'!
PASSED!

!methodRemoval: MarsRoverTest #test21RoverRotatesMoreThanOnce stamp: 'JEA 10/25/2020 20:12:31'!
test21RoverRotatesMoreThanOnce
	| marsRover |
	marsRover := MarsRover at: cartesianCenter facing: north.
	
	marsRover command: 'lrlr'.
	
	self assert: (marsRover isFacing: north).
	self assert: (marsRover isAt: cartesianCenter).!
!MarsRoverTest methodsFor: 'tests' stamp: 'JEA 10/25/2020 20:12:35'!
test20RoverMovesAndRotatesMoreThanOnce
	| marsRover |
	marsRover := MarsRover at: cartesianCenter facing: north.
	
	marsRover command: 'fbfb'.
	
	self assert: (marsRover isFacing: north).
	self assert: (marsRover isAt: cartesianCenter).! !

!methodRemoval: MarsRoverTest #test20RoverMovesMoreThanOnce stamp: 'JEA 10/25/2020 20:12:39'!
test20RoverMovesMoreThanOnce
	| marsRover |
	marsRover := MarsRover at: cartesianCenter facing: north.
	
	marsRover command: 'fbfb'.
	
	self assert: (marsRover isFacing: north).
	self assert: (marsRover isAt: cartesianCenter).!
!MarsRoverTest methodsFor: 'tests' stamp: 'JEA 10/25/2020 20:13:12' prior: 50877747!
test20RoverMovesAndRotatesMoreThanOnce
	| marsRover |
	marsRover := MarsRover at: cartesianCenter facing: north.
	
	marsRover command: 'fblrfrfrfrfr'.
	
	self assert: (marsRover isFacing: north).
	self assert: (marsRover isAt: cartesianCenter).! !

!testRun: #MarsRoverTest #test01NewRoverShouldBeAtInitializedPosition stamp: 'JEA 10/25/2020 20:13:17'!
PASSED!

!testRun: #MarsRoverTest #test02NewRoverShouldBeFacingInitializedDirection stamp: 'JEA 10/25/2020 20:13:17'!
PASSED!

!testRun: #MarsRoverTest #test03RoverCantBeInitializedWithInvalidOrientation stamp: 'JEA 10/25/2020 20:13:17'!
PASSED!

!testRun: #MarsRoverTest #test04RoverMovesForwardWhenFacingNorth stamp: 'JEA 10/25/2020 20:13:17'!
PASSED!

!testRun: #MarsRoverTest #test05RoverMovesBackwardsWhenFacingNorth stamp: 'JEA 10/25/2020 20:13:17'!
PASSED!

!testRun: #MarsRoverTest #test06RoverRotatesLeftWhenFacingNorth stamp: 'JEA 10/25/2020 20:13:17'!
PASSED!

!testRun: #MarsRoverTest #test07RoverRotatesRightWhenFacingNorth stamp: 'JEA 10/25/2020 20:13:17'!
PASSED!

!testRun: #MarsRoverTest #test08RoverMovesForwardWhenFacingEast stamp: 'JEA 10/25/2020 20:13:17'!
PASSED!

!testRun: #MarsRoverTest #test09RoverMovesBackwardsWhenFacingEast stamp: 'JEA 10/25/2020 20:13:17'!
PASSED!

!testRun: #MarsRoverTest #test10RoverRotatesLeftWhenFacingEast stamp: 'JEA 10/25/2020 20:13:17'!
PASSED!

!testRun: #MarsRoverTest #test11RoverRotatesRightWhenFacingEast stamp: 'JEA 10/25/2020 20:13:17'!
PASSED!

!testRun: #MarsRoverTest #test12RoverMovesForwardWhenFacingSouth stamp: 'JEA 10/25/2020 20:13:17'!
PASSED!

!testRun: #MarsRoverTest #test13RoverMovesBackwardsWhenFacingSouth stamp: 'JEA 10/25/2020 20:13:17'!
PASSED!

!testRun: #MarsRoverTest #test14RoverRotatesLeftWhenFacingSouth stamp: 'JEA 10/25/2020 20:13:17'!
PASSED!

!testRun: #MarsRoverTest #test15RoverRotatesRightWhenFacingSouth stamp: 'JEA 10/25/2020 20:13:17'!
PASSED!

!testRun: #MarsRoverTest #test16RoverMovesForwardWhenFacingWest stamp: 'JEA 10/25/2020 20:13:17'!
PASSED!

!testRun: #MarsRoverTest #test17RoverMovesBackwardsWhenFacingWest stamp: 'JEA 10/25/2020 20:13:17'!
PASSED!

!testRun: #MarsRoverTest #test18RoverRotatesLeftWhenFacingWest stamp: 'JEA 10/25/2020 20:13:17'!
PASSED!

!testRun: #MarsRoverTest #test19RoverRotatesRightWhenFacingWest stamp: 'JEA 10/25/2020 20:13:17'!
PASSED!

!testRun: #MarsRoverTest #test20RoverMovesAndRotatesMoreThanOnce stamp: 'JEA 10/25/2020 20:13:17'!
PASSED!
!MarsRover methodsFor: 'movement' stamp: 'JEA 10/25/2020 20:24:06' prior: 50877088!
command: aCommandSequence
	
	aCommandSequence do: [ :aCommand | 
		(aCommand = $f)
			ifTrue: [
				position := position + orientation vector.
			].
			
		(aCommand = $b)
			ifTrue: [
				position := position - orientation vector.
			].
			
		(aCommand = $l)
			ifTrue: [
				orientation := orientation nextCounterClockwise.
			].

		(aCommand = $r)
			ifTrue: [
				orientation := orientation nextClockwise.
			].
	].! !
!MarsRover methodsFor: 'movement' stamp: 'JEA 10/25/2020 20:24:52' prior: 50877847!
command: aCommandSequence
	
	aCommandSequence do: [ :aCommand | 
		(aCommand = $f) ifTrue: [position := position + orientation vector].
			
		(aCommand = $b) ifTrue: [position := position - orientation vector].
			
		(aCommand = $l) ifTrue: [orientation := orientation nextCounterClockwise].

		(aCommand = $r) ifTrue: [orientation := orientation nextClockwise].
	].! !
!MarsRover methodsFor: 'movement' stamp: 'JEA 10/25/2020 20:25:02' prior: 50877863!
command: aCommandSequence
	
	aCommandSequence do: [ :aCommand | 
		(aCommand = $f) ifTrue: [position := position + orientation vector].
		(aCommand = $b) ifTrue: [position := position - orientation vector].
		(aCommand = $l) ifTrue: [orientation := orientation nextCounterClockwise].
		(aCommand = $r) ifTrue: [orientation := orientation nextClockwise].
	].! !
!MarsRover methodsFor: 'movement' stamp: 'JEA 10/25/2020 20:25:40' prior: 50877878!
command: aCommandSequence
	
	aCommandSequence do: [ :aCommandCharacter | 
		(aCommandCharacter = $f) ifTrue: [position := position + orientation vector].
		(aCommandCharacter = $b) ifTrue: [position := position - orientation vector].
		(aCommandCharacter = $l) ifTrue: [orientation := orientation nextCounterClockwise].
		(aCommandCharacter = $r) ifTrue: [orientation := orientation nextClockwise].
	].! !

----SNAPSHOT----(25 October 2020 20:27:30) CuisUniversity-4384.image priorSource: 17377210!
!MarsRoverTest methodsFor: 'tests' stamp: 'JEA 10/25/2020 20:31:08'!
test21RoverStopsObeyingCommandsAfterInvalidCommand
	| marsRover |
	marsRover := MarsRover at: cartesianCenter facing: north.
	
	self should: [marsRover command: 'fffQflffrffff'] 
		raise: Error 
		withMessageText: ''.
	
	self assert: (marsRover isFacing: north).
	self assert: (marsRover isAt: cartesianCenter + 0@3).! !

!testRun: #MarsRoverTest #test01NewRoverShouldBeAtInitializedPosition stamp: 'JEA 10/25/2020 20:31:10'!
PASSED!

!testRun: #MarsRoverTest #test02NewRoverShouldBeFacingInitializedDirection stamp: 'JEA 10/25/2020 20:31:10'!
PASSED!

!testRun: #MarsRoverTest #test03RoverCantBeInitializedWithInvalidOrientation stamp: 'JEA 10/25/2020 20:31:10'!
PASSED!

!testRun: #MarsRoverTest #test04RoverMovesForwardWhenFacingNorth stamp: 'JEA 10/25/2020 20:31:10'!
PASSED!

!testRun: #MarsRoverTest #test05RoverMovesBackwardsWhenFacingNorth stamp: 'JEA 10/25/2020 20:31:10'!
PASSED!

!testRun: #MarsRoverTest #test06RoverRotatesLeftWhenFacingNorth stamp: 'JEA 10/25/2020 20:31:10'!
PASSED!

!testRun: #MarsRoverTest #test07RoverRotatesRightWhenFacingNorth stamp: 'JEA 10/25/2020 20:31:10'!
PASSED!

!testRun: #MarsRoverTest #test08RoverMovesForwardWhenFacingEast stamp: 'JEA 10/25/2020 20:31:11'!
PASSED!

!testRun: #MarsRoverTest #test09RoverMovesBackwardsWhenFacingEast stamp: 'JEA 10/25/2020 20:31:11'!
PASSED!

!testRun: #MarsRoverTest #test10RoverRotatesLeftWhenFacingEast stamp: 'JEA 10/25/2020 20:31:11'!
PASSED!

!testRun: #MarsRoverTest #test11RoverRotatesRightWhenFacingEast stamp: 'JEA 10/25/2020 20:31:11'!
PASSED!

!testRun: #MarsRoverTest #test12RoverMovesForwardWhenFacingSouth stamp: 'JEA 10/25/2020 20:31:11'!
PASSED!

!testRun: #MarsRoverTest #test13RoverMovesBackwardsWhenFacingSouth stamp: 'JEA 10/25/2020 20:31:11'!
PASSED!

!testRun: #MarsRoverTest #test14RoverRotatesLeftWhenFacingSouth stamp: 'JEA 10/25/2020 20:31:11'!
PASSED!

!testRun: #MarsRoverTest #test15RoverRotatesRightWhenFacingSouth stamp: 'JEA 10/25/2020 20:31:11'!
PASSED!

!testRun: #MarsRoverTest #test16RoverMovesForwardWhenFacingWest stamp: 'JEA 10/25/2020 20:31:11'!
PASSED!

!testRun: #MarsRoverTest #test17RoverMovesBackwardsWhenFacingWest stamp: 'JEA 10/25/2020 20:31:11'!
PASSED!

!testRun: #MarsRoverTest #test18RoverRotatesLeftWhenFacingWest stamp: 'JEA 10/25/2020 20:31:11'!
PASSED!

!testRun: #MarsRoverTest #test19RoverRotatesRightWhenFacingWest stamp: 'JEA 10/25/2020 20:31:11'!
PASSED!

!testRun: #MarsRoverTest #test20RoverMovesAndRotatesMoreThanOnce stamp: 'JEA 10/25/2020 20:31:11'!
PASSED!

!testRun: #MarsRoverTest #test21RoverStopsObeyingCommandsAfterInvalidCommand stamp: 'JEA 10/25/2020 20:31:11'!
FAILURE!

!testRun: #MarsRoverTest #test21RoverStopsObeyingCommandsAfterInvalidCommand stamp: 'JEA 10/25/2020 20:31:11'!
FAILURE!
!MarsRover class methodsFor: 'error messages' stamp: 'JEA 10/25/2020 20:31:51'!
invalidCommandErrorDescription

	^'Encountered and invalid command character.'.! !
!MarsRover methodsFor: 'movement' stamp: 'JEA 10/25/2020 20:32:17' prior: 50877892!
command: aCommandSequence
	
	aCommandSequence do: [ :aCommandCharacter | 
		(aCommandCharacter = $f) ifTrue: [position := position + orientation vector].
		(aCommandCharacter = $b) ifTrue: [position := position - orientation vector].
		(aCommandCharacter = $l) ifTrue: [orientation := orientation nextCounterClockwise].
		(aCommandCharacter = $r) ifTrue: [orientation := orientation nextClockwise].
		
		self error: self class invalidCommandErrorDescription.
	].! !
!MarsRover methodsFor: 'movement' stamp: 'JEA 10/25/2020 20:34:17' prior: 50878005!
command: aCommandSequence
	
	aCommandSequence do: [ :aCommandCharacter | 
		(aCommandCharacter = $f) ifTrue: [position := position + orientation vector].
		(aCommandCharacter = $b) ifTrue: [position := position - orientation vector].
		(aCommandCharacter = $l) ifTrue: [orientation := orientation nextCounterClockwise].
		(aCommandCharacter = $r) ifTrue: [orientation := orientation nextClockwise].
		
		('fblr' includes: aCommandCharacter) ifFalse: [self error: self class invalidCommandErrorDescription].
	].! !

!testRun: #MarsRoverTest #test01NewRoverShouldBeAtInitializedPosition stamp: 'JEA 10/25/2020 20:34:20'!
PASSED!

!testRun: #MarsRoverTest #test02NewRoverShouldBeFacingInitializedDirection stamp: 'JEA 10/25/2020 20:34:20'!
PASSED!

!testRun: #MarsRoverTest #test03RoverCantBeInitializedWithInvalidOrientation stamp: 'JEA 10/25/2020 20:34:20'!
PASSED!

!testRun: #MarsRoverTest #test04RoverMovesForwardWhenFacingNorth stamp: 'JEA 10/25/2020 20:34:20'!
PASSED!

!testRun: #MarsRoverTest #test05RoverMovesBackwardsWhenFacingNorth stamp: 'JEA 10/25/2020 20:34:20'!
PASSED!

!testRun: #MarsRoverTest #test06RoverRotatesLeftWhenFacingNorth stamp: 'JEA 10/25/2020 20:34:20'!
PASSED!

!testRun: #MarsRoverTest #test07RoverRotatesRightWhenFacingNorth stamp: 'JEA 10/25/2020 20:34:20'!
PASSED!

!testRun: #MarsRoverTest #test08RoverMovesForwardWhenFacingEast stamp: 'JEA 10/25/2020 20:34:20'!
PASSED!

!testRun: #MarsRoverTest #test09RoverMovesBackwardsWhenFacingEast stamp: 'JEA 10/25/2020 20:34:20'!
PASSED!

!testRun: #MarsRoverTest #test10RoverRotatesLeftWhenFacingEast stamp: 'JEA 10/25/2020 20:34:20'!
PASSED!

!testRun: #MarsRoverTest #test11RoverRotatesRightWhenFacingEast stamp: 'JEA 10/25/2020 20:34:20'!
PASSED!

!testRun: #MarsRoverTest #test12RoverMovesForwardWhenFacingSouth stamp: 'JEA 10/25/2020 20:34:20'!
PASSED!

!testRun: #MarsRoverTest #test13RoverMovesBackwardsWhenFacingSouth stamp: 'JEA 10/25/2020 20:34:20'!
PASSED!

!testRun: #MarsRoverTest #test14RoverRotatesLeftWhenFacingSouth stamp: 'JEA 10/25/2020 20:34:20'!
PASSED!

!testRun: #MarsRoverTest #test15RoverRotatesRightWhenFacingSouth stamp: 'JEA 10/25/2020 20:34:20'!
PASSED!

!testRun: #MarsRoverTest #test16RoverMovesForwardWhenFacingWest stamp: 'JEA 10/25/2020 20:34:20'!
PASSED!

!testRun: #MarsRoverTest #test17RoverMovesBackwardsWhenFacingWest stamp: 'JEA 10/25/2020 20:34:20'!
PASSED!

!testRun: #MarsRoverTest #test18RoverRotatesLeftWhenFacingWest stamp: 'JEA 10/25/2020 20:34:20'!
PASSED!

!testRun: #MarsRoverTest #test19RoverRotatesRightWhenFacingWest stamp: 'JEA 10/25/2020 20:34:20'!
PASSED!

!testRun: #MarsRoverTest #test20RoverMovesAndRotatesMoreThanOnce stamp: 'JEA 10/25/2020 20:34:20'!
PASSED!

!testRun: #MarsRoverTest #test21RoverStopsObeyingCommandsAfterInvalidCommand stamp: 'JEA 10/25/2020 20:34:20'!
FAILURE!

!testRun: #MarsRoverTest #test21RoverStopsObeyingCommandsAfterInvalidCommand stamp: 'JEA 10/25/2020 20:34:20'!
FAILURE!
!MarsRoverTest methodsFor: 'tests' stamp: 'JEA 10/25/2020 20:34:37' prior: 50877910!
test21RoverStopsObeyingCommandsAfterInvalidCommand
	| marsRover |
	marsRover := MarsRover at: cartesianCenter facing: north.
	
	self should: [marsRover command: 'fffQflffrffff'] 
		raise: Error 
		withMessageText: MarsRover invalidCommandErrorDescription .
	
	self assert: (marsRover isFacing: north).
	self assert: (marsRover isAt: cartesianCenter + 0@3).! !
!MarsRoverTest methodsFor: 'tests' stamp: 'JEA 10/25/2020 20:34:38' prior: 50878118!
test21RoverStopsObeyingCommandsAfterInvalidCommand
	| marsRover |
	marsRover := MarsRover at: cartesianCenter facing: north.
	
	self should: [marsRover command: 'fffQflffrffff'] 
		raise: Error 
		withMessageText: MarsRover invalidCommandErrorDescription.
	
	self assert: (marsRover isFacing: north).
	self assert: (marsRover isAt: cartesianCenter + 0@3).! !

!testRun: #MarsRoverTest #test01NewRoverShouldBeAtInitializedPosition stamp: 'JEA 10/25/2020 20:34:39'!
PASSED!

!testRun: #MarsRoverTest #test02NewRoverShouldBeFacingInitializedDirection stamp: 'JEA 10/25/2020 20:34:39'!
PASSED!

!testRun: #MarsRoverTest #test03RoverCantBeInitializedWithInvalidOrientation stamp: 'JEA 10/25/2020 20:34:39'!
PASSED!

!testRun: #MarsRoverTest #test04RoverMovesForwardWhenFacingNorth stamp: 'JEA 10/25/2020 20:34:39'!
PASSED!

!testRun: #MarsRoverTest #test05RoverMovesBackwardsWhenFacingNorth stamp: 'JEA 10/25/2020 20:34:39'!
PASSED!

!testRun: #MarsRoverTest #test06RoverRotatesLeftWhenFacingNorth stamp: 'JEA 10/25/2020 20:34:39'!
PASSED!

!testRun: #MarsRoverTest #test07RoverRotatesRightWhenFacingNorth stamp: 'JEA 10/25/2020 20:34:39'!
PASSED!

!testRun: #MarsRoverTest #test08RoverMovesForwardWhenFacingEast stamp: 'JEA 10/25/2020 20:34:39'!
PASSED!

!testRun: #MarsRoverTest #test09RoverMovesBackwardsWhenFacingEast stamp: 'JEA 10/25/2020 20:34:39'!
PASSED!

!testRun: #MarsRoverTest #test10RoverRotatesLeftWhenFacingEast stamp: 'JEA 10/25/2020 20:34:39'!
PASSED!

!testRun: #MarsRoverTest #test11RoverRotatesRightWhenFacingEast stamp: 'JEA 10/25/2020 20:34:39'!
PASSED!

!testRun: #MarsRoverTest #test12RoverMovesForwardWhenFacingSouth stamp: 'JEA 10/25/2020 20:34:39'!
PASSED!

!testRun: #MarsRoverTest #test13RoverMovesBackwardsWhenFacingSouth stamp: 'JEA 10/25/2020 20:34:39'!
PASSED!

!testRun: #MarsRoverTest #test14RoverRotatesLeftWhenFacingSouth stamp: 'JEA 10/25/2020 20:34:39'!
PASSED!

!testRun: #MarsRoverTest #test15RoverRotatesRightWhenFacingSouth stamp: 'JEA 10/25/2020 20:34:39'!
PASSED!

!testRun: #MarsRoverTest #test16RoverMovesForwardWhenFacingWest stamp: 'JEA 10/25/2020 20:34:39'!
PASSED!

!testRun: #MarsRoverTest #test17RoverMovesBackwardsWhenFacingWest stamp: 'JEA 10/25/2020 20:34:39'!
PASSED!

!testRun: #MarsRoverTest #test18RoverRotatesLeftWhenFacingWest stamp: 'JEA 10/25/2020 20:34:39'!
PASSED!

!testRun: #MarsRoverTest #test19RoverRotatesRightWhenFacingWest stamp: 'JEA 10/25/2020 20:34:39'!
PASSED!

!testRun: #MarsRoverTest #test20RoverMovesAndRotatesMoreThanOnce stamp: 'JEA 10/25/2020 20:34:39'!
PASSED!

!testRun: #MarsRoverTest #test21RoverStopsObeyingCommandsAfterInvalidCommand stamp: 'JEA 10/25/2020 20:34:39'!
ERROR!

!testRun: #MarsRoverTest #test21RoverStopsObeyingCommandsAfterInvalidCommand stamp: 'JEA 10/25/2020 20:34:39'!
ERROR!

!testRun: #MarsRoverTest #test01NewRoverShouldBeAtInitializedPosition stamp: 'JEA 10/25/2020 20:34:42'!
PASSED!

!testRun: #MarsRoverTest #test02NewRoverShouldBeFacingInitializedDirection stamp: 'JEA 10/25/2020 20:34:42'!
PASSED!

!testRun: #MarsRoverTest #test03RoverCantBeInitializedWithInvalidOrientation stamp: 'JEA 10/25/2020 20:34:42'!
PASSED!

!testRun: #MarsRoverTest #test04RoverMovesForwardWhenFacingNorth stamp: 'JEA 10/25/2020 20:34:42'!
PASSED!

!testRun: #MarsRoverTest #test05RoverMovesBackwardsWhenFacingNorth stamp: 'JEA 10/25/2020 20:34:42'!
PASSED!

!testRun: #MarsRoverTest #test06RoverRotatesLeftWhenFacingNorth stamp: 'JEA 10/25/2020 20:34:42'!
PASSED!

!testRun: #MarsRoverTest #test07RoverRotatesRightWhenFacingNorth stamp: 'JEA 10/25/2020 20:34:42'!
PASSED!

!testRun: #MarsRoverTest #test08RoverMovesForwardWhenFacingEast stamp: 'JEA 10/25/2020 20:34:42'!
PASSED!

!testRun: #MarsRoverTest #test09RoverMovesBackwardsWhenFacingEast stamp: 'JEA 10/25/2020 20:34:42'!
PASSED!

!testRun: #MarsRoverTest #test10RoverRotatesLeftWhenFacingEast stamp: 'JEA 10/25/2020 20:34:42'!
PASSED!

!testRun: #MarsRoverTest #test11RoverRotatesRightWhenFacingEast stamp: 'JEA 10/25/2020 20:34:42'!
PASSED!

!testRun: #MarsRoverTest #test12RoverMovesForwardWhenFacingSouth stamp: 'JEA 10/25/2020 20:34:42'!
PASSED!

!testRun: #MarsRoverTest #test13RoverMovesBackwardsWhenFacingSouth stamp: 'JEA 10/25/2020 20:34:42'!
PASSED!

!testRun: #MarsRoverTest #test14RoverRotatesLeftWhenFacingSouth stamp: 'JEA 10/25/2020 20:34:42'!
PASSED!

!testRun: #MarsRoverTest #test15RoverRotatesRightWhenFacingSouth stamp: 'JEA 10/25/2020 20:34:42'!
PASSED!

!testRun: #MarsRoverTest #test16RoverMovesForwardWhenFacingWest stamp: 'JEA 10/25/2020 20:34:42'!
PASSED!

!testRun: #MarsRoverTest #test17RoverMovesBackwardsWhenFacingWest stamp: 'JEA 10/25/2020 20:34:42'!
PASSED!

!testRun: #MarsRoverTest #test18RoverRotatesLeftWhenFacingWest stamp: 'JEA 10/25/2020 20:34:42'!
PASSED!

!testRun: #MarsRoverTest #test19RoverRotatesRightWhenFacingWest stamp: 'JEA 10/25/2020 20:34:42'!
PASSED!

!testRun: #MarsRoverTest #test20RoverMovesAndRotatesMoreThanOnce stamp: 'JEA 10/25/2020 20:34:42'!
PASSED!

!testRun: #MarsRoverTest #test21RoverStopsObeyingCommandsAfterInvalidCommand stamp: 'JEA 10/25/2020 20:34:42'!
ERROR!

!testRun: #MarsRoverTest #test21RoverStopsObeyingCommandsAfterInvalidCommand stamp: 'JEA 10/25/2020 20:34:42'!
ERROR!

!testRun: #MarsRoverTest #test01NewRoverShouldBeAtInitializedPosition stamp: 'JEA 10/25/2020 20:35:01'!
PASSED!

!testRun: #MarsRoverTest #test02NewRoverShouldBeFacingInitializedDirection stamp: 'JEA 10/25/2020 20:35:01'!
PASSED!

!testRun: #MarsRoverTest #test03RoverCantBeInitializedWithInvalidOrientation stamp: 'JEA 10/25/2020 20:35:01'!
PASSED!

!testRun: #MarsRoverTest #test04RoverMovesForwardWhenFacingNorth stamp: 'JEA 10/25/2020 20:35:01'!
PASSED!

!testRun: #MarsRoverTest #test05RoverMovesBackwardsWhenFacingNorth stamp: 'JEA 10/25/2020 20:35:01'!
PASSED!

!testRun: #MarsRoverTest #test06RoverRotatesLeftWhenFacingNorth stamp: 'JEA 10/25/2020 20:35:01'!
PASSED!

!testRun: #MarsRoverTest #test07RoverRotatesRightWhenFacingNorth stamp: 'JEA 10/25/2020 20:35:01'!
PASSED!

!testRun: #MarsRoverTest #test08RoverMovesForwardWhenFacingEast stamp: 'JEA 10/25/2020 20:35:01'!
PASSED!

!testRun: #MarsRoverTest #test09RoverMovesBackwardsWhenFacingEast stamp: 'JEA 10/25/2020 20:35:01'!
PASSED!

!testRun: #MarsRoverTest #test10RoverRotatesLeftWhenFacingEast stamp: 'JEA 10/25/2020 20:35:01'!
PASSED!

!testRun: #MarsRoverTest #test11RoverRotatesRightWhenFacingEast stamp: 'JEA 10/25/2020 20:35:01'!
PASSED!

!testRun: #MarsRoverTest #test12RoverMovesForwardWhenFacingSouth stamp: 'JEA 10/25/2020 20:35:01'!
PASSED!

!testRun: #MarsRoverTest #test13RoverMovesBackwardsWhenFacingSouth stamp: 'JEA 10/25/2020 20:35:01'!
PASSED!

!testRun: #MarsRoverTest #test14RoverRotatesLeftWhenFacingSouth stamp: 'JEA 10/25/2020 20:35:01'!
PASSED!

!testRun: #MarsRoverTest #test15RoverRotatesRightWhenFacingSouth stamp: 'JEA 10/25/2020 20:35:01'!
PASSED!

!testRun: #MarsRoverTest #test16RoverMovesForwardWhenFacingWest stamp: 'JEA 10/25/2020 20:35:01'!
PASSED!

!testRun: #MarsRoverTest #test17RoverMovesBackwardsWhenFacingWest stamp: 'JEA 10/25/2020 20:35:01'!
PASSED!

!testRun: #MarsRoverTest #test18RoverRotatesLeftWhenFacingWest stamp: 'JEA 10/25/2020 20:35:01'!
PASSED!

!testRun: #MarsRoverTest #test19RoverRotatesRightWhenFacingWest stamp: 'JEA 10/25/2020 20:35:01'!
PASSED!

!testRun: #MarsRoverTest #test20RoverMovesAndRotatesMoreThanOnce stamp: 'JEA 10/25/2020 20:35:01'!
PASSED!

!testRun: #MarsRoverTest #test21RoverStopsObeyingCommandsAfterInvalidCommand stamp: 'JEA 10/25/2020 20:35:01'!
ERROR!

!testRun: #MarsRoverTest #test21RoverStopsObeyingCommandsAfterInvalidCommand stamp: 'JEA 10/25/2020 20:35:01'!
ERROR!
!MarsRoverTest methodsFor: 'tests' stamp: 'JEA 10/25/2020 20:35:11' prior: 50878132!
test21RoverStopsObeyingCommandsAfterInvalidCommand
	| marsRover |
	marsRover := MarsRover at: cartesianCenter facing: north.
	
	self should: [marsRover command: 'fffQflffrffff'] 
		raise: Error 
		withMessageText: MarsRover invalidCommandErrorDescription.
	
	self assert: (marsRover isFacing: north).
	self assert: (marsRover isAt: cartesianCenter + (0@3)).! !

!testRun: #MarsRoverTest #test01NewRoverShouldBeAtInitializedPosition stamp: 'JEA 10/25/2020 20:35:12'!
PASSED!

!testRun: #MarsRoverTest #test02NewRoverShouldBeFacingInitializedDirection stamp: 'JEA 10/25/2020 20:35:12'!
PASSED!

!testRun: #MarsRoverTest #test03RoverCantBeInitializedWithInvalidOrientation stamp: 'JEA 10/25/2020 20:35:12'!
PASSED!

!testRun: #MarsRoverTest #test04RoverMovesForwardWhenFacingNorth stamp: 'JEA 10/25/2020 20:35:12'!
PASSED!

!testRun: #MarsRoverTest #test05RoverMovesBackwardsWhenFacingNorth stamp: 'JEA 10/25/2020 20:35:12'!
PASSED!

!testRun: #MarsRoverTest #test06RoverRotatesLeftWhenFacingNorth stamp: 'JEA 10/25/2020 20:35:12'!
PASSED!

!testRun: #MarsRoverTest #test07RoverRotatesRightWhenFacingNorth stamp: 'JEA 10/25/2020 20:35:12'!
PASSED!

!testRun: #MarsRoverTest #test08RoverMovesForwardWhenFacingEast stamp: 'JEA 10/25/2020 20:35:12'!
PASSED!

!testRun: #MarsRoverTest #test09RoverMovesBackwardsWhenFacingEast stamp: 'JEA 10/25/2020 20:35:12'!
PASSED!

!testRun: #MarsRoverTest #test10RoverRotatesLeftWhenFacingEast stamp: 'JEA 10/25/2020 20:35:12'!
PASSED!

!testRun: #MarsRoverTest #test11RoverRotatesRightWhenFacingEast stamp: 'JEA 10/25/2020 20:35:12'!
PASSED!

!testRun: #MarsRoverTest #test12RoverMovesForwardWhenFacingSouth stamp: 'JEA 10/25/2020 20:35:12'!
PASSED!

!testRun: #MarsRoverTest #test13RoverMovesBackwardsWhenFacingSouth stamp: 'JEA 10/25/2020 20:35:12'!
PASSED!

!testRun: #MarsRoverTest #test14RoverRotatesLeftWhenFacingSouth stamp: 'JEA 10/25/2020 20:35:12'!
PASSED!

!testRun: #MarsRoverTest #test15RoverRotatesRightWhenFacingSouth stamp: 'JEA 10/25/2020 20:35:12'!
PASSED!

!testRun: #MarsRoverTest #test16RoverMovesForwardWhenFacingWest stamp: 'JEA 10/25/2020 20:35:12'!
PASSED!

!testRun: #MarsRoverTest #test17RoverMovesBackwardsWhenFacingWest stamp: 'JEA 10/25/2020 20:35:12'!
PASSED!

!testRun: #MarsRoverTest #test18RoverRotatesLeftWhenFacingWest stamp: 'JEA 10/25/2020 20:35:12'!
PASSED!

!testRun: #MarsRoverTest #test19RoverRotatesRightWhenFacingWest stamp: 'JEA 10/25/2020 20:35:12'!
PASSED!

!testRun: #MarsRoverTest #test20RoverMovesAndRotatesMoreThanOnce stamp: 'JEA 10/25/2020 20:35:12'!
PASSED!

!testRun: #MarsRoverTest #test21RoverStopsObeyingCommandsAfterInvalidCommand stamp: 'JEA 10/25/2020 20:35:12'!
PASSED!
!MarsRoverTest methodsFor: 'tests' stamp: 'JEA 10/25/2020 20:36:18' prior: 50878373!
test21RoverStopsObeyingCommandsAfterInvalidCommand
	| marsRover |
	marsRover := MarsRover at: cartesianCenter facing: north.
	
	self should: [marsRover command: 'fffQflffrffff'] 
		raise: Error 
		withMessageText: MarsRover invalidCommandErrorDescription.
	
	self assert: (marsRover isFacing: north).
	self assert: (marsRover isAt: cartesianCenter + (0@3)).! !
!MarsRoverTest methodsFor: 'tests' stamp: 'JEA 10/25/2020 20:36:27'!
test22RoverStopsObeyingCommandsAfterInvalidCommand
	| marsRover |
	marsRover := MarsRover at: cartesianCenter facing: north.
	
	self should: [marsRover command: 'fffQflffrffff'] 
		raise: Error 
		withMessageText: MarsRover invalidCommandErrorDescription.
	
	self assert: (marsRover isFacing: north).
	self assert: (marsRover isAt: cartesianCenter + (0@3)).! !

!methodRemoval: MarsRoverTest #test21RoverStopsObeyingCommandsAfterInvalidCommand stamp: 'JEA 10/25/2020 20:36:27'!
test21RoverStopsObeyingCommandsAfterInvalidCommand
	| marsRover |
	marsRover := MarsRover at: cartesianCenter facing: north.
	
	self should: [marsRover command: 'fffQflffrffff'] 
		raise: Error 
		withMessageText: MarsRover invalidCommandErrorDescription.
	
	self assert: (marsRover isFacing: north).
	self assert: (marsRover isAt: cartesianCenter + (0@3)).!
!MarsRoverTest methodsFor: 'tests' stamp: 'JEA 10/25/2020 20:38:07'!
test21RoverObeysMoreThanOneCommandSequence
	| marsRover |
	marsRover := MarsRover at: cartesianCenter facing: north.
	
	marsRover command: 'f'.
	marsRover command: 'fflfrf'.
	marsRover command: 'bl'.
	
	self assert: (marsRover isFacing: west).
	self assert: (marsRover isAt: cartesianCenter + (-1@3)).! !

!testRun: #MarsRoverTest #test01NewRoverShouldBeAtInitializedPosition stamp: 'JEA 10/25/2020 20:38:09'!
PASSED!

!testRun: #MarsRoverTest #test02NewRoverShouldBeFacingInitializedDirection stamp: 'JEA 10/25/2020 20:38:09'!
PASSED!

!testRun: #MarsRoverTest #test03RoverCantBeInitializedWithInvalidOrientation stamp: 'JEA 10/25/2020 20:38:09'!
PASSED!

!testRun: #MarsRoverTest #test04RoverMovesForwardWhenFacingNorth stamp: 'JEA 10/25/2020 20:38:09'!
PASSED!

!testRun: #MarsRoverTest #test05RoverMovesBackwardsWhenFacingNorth stamp: 'JEA 10/25/2020 20:38:09'!
PASSED!

!testRun: #MarsRoverTest #test06RoverRotatesLeftWhenFacingNorth stamp: 'JEA 10/25/2020 20:38:09'!
PASSED!

!testRun: #MarsRoverTest #test07RoverRotatesRightWhenFacingNorth stamp: 'JEA 10/25/2020 20:38:09'!
PASSED!

!testRun: #MarsRoverTest #test08RoverMovesForwardWhenFacingEast stamp: 'JEA 10/25/2020 20:38:09'!
PASSED!

!testRun: #MarsRoverTest #test09RoverMovesBackwardsWhenFacingEast stamp: 'JEA 10/25/2020 20:38:09'!
PASSED!

!testRun: #MarsRoverTest #test10RoverRotatesLeftWhenFacingEast stamp: 'JEA 10/25/2020 20:38:09'!
PASSED!

!testRun: #MarsRoverTest #test11RoverRotatesRightWhenFacingEast stamp: 'JEA 10/25/2020 20:38:09'!
PASSED!

!testRun: #MarsRoverTest #test12RoverMovesForwardWhenFacingSouth stamp: 'JEA 10/25/2020 20:38:09'!
PASSED!

!testRun: #MarsRoverTest #test13RoverMovesBackwardsWhenFacingSouth stamp: 'JEA 10/25/2020 20:38:09'!
PASSED!

!testRun: #MarsRoverTest #test14RoverRotatesLeftWhenFacingSouth stamp: 'JEA 10/25/2020 20:38:09'!
PASSED!

!testRun: #MarsRoverTest #test15RoverRotatesRightWhenFacingSouth stamp: 'JEA 10/25/2020 20:38:09'!
PASSED!

!testRun: #MarsRoverTest #test16RoverMovesForwardWhenFacingWest stamp: 'JEA 10/25/2020 20:38:09'!
PASSED!

!testRun: #MarsRoverTest #test17RoverMovesBackwardsWhenFacingWest stamp: 'JEA 10/25/2020 20:38:09'!
PASSED!

!testRun: #MarsRoverTest #test18RoverRotatesLeftWhenFacingWest stamp: 'JEA 10/25/2020 20:38:09'!
PASSED!

!testRun: #MarsRoverTest #test19RoverRotatesRightWhenFacingWest stamp: 'JEA 10/25/2020 20:38:09'!
PASSED!

!testRun: #MarsRoverTest #test20RoverMovesAndRotatesMoreThanOnce stamp: 'JEA 10/25/2020 20:38:09'!
PASSED!

!testRun: #MarsRoverTest #test21RoverObeysMoreThanOneCommandSequence stamp: 'JEA 10/25/2020 20:38:09'!
PASSED!

!testRun: #MarsRoverTest #test22RoverStopsObeyingCommandsAfterInvalidCommand stamp: 'JEA 10/25/2020 20:38:09'!
PASSED!
!MarsRoverTest methodsFor: 'tests' stamp: 'JEA 10/25/2020 20:42:49'!
test04RoverMovesForwardAndBackwardsWhenFacingNorth
	| marsRover |
	marsRover := MarsRover at: cartesianCenter facing: north.
	
	marsRover command: 'ffb'.
	
	self assert: (marsRover isAt: cartesianCenter + (0@1)).
	self assert: (marsRover isFacing: north).! !

!methodRemoval: MarsRoverTest #test04RoverMovesForwardWhenFacingNorth stamp: 'JEA 10/25/2020 20:42:54'!
test04RoverMovesForwardWhenFacingNorth
	| marsRover |
	marsRover := MarsRover at: cartesianCenter facing: north.
	
	marsRover command: 'f'.
	
	self assert: (marsRover isAt: cartesianCenter + (0@1)).
	self assert: (marsRover isFacing: north).!

!methodRemoval: MarsRoverTest #test05RoverMovesBackwardsWhenFacingNorth stamp: 'JEA 10/25/2020 20:42:55'!
test05RoverMovesBackwardsWhenFacingNorth
	| marsRover |
	marsRover := MarsRover at: cartesianCenter facing: north.
	
	marsRover command: 'b'.
	
	self assert: (marsRover isAt: cartesianCenter - (0@1)).
	self assert: (marsRover isFacing: north).!
!MarsRoverTest methodsFor: 'tests' stamp: 'JEA 10/25/2020 20:43:08'!
test06RoverRotatesLeftAndRightWhenFacingNorth
	| marsRover |
	marsRover := MarsRover at: cartesianCenter facing: north.
	
	marsRover command: 'llr'.
	
	self assert: (marsRover isFacing: west).
	self assert: (marsRover isAt: cartesianCenter).! !

!methodRemoval: MarsRoverTest #test06RoverRotatesLeftWhenFacingNorth stamp: 'JEA 10/25/2020 20:43:10'!
test06RoverRotatesLeftWhenFacingNorth
	| marsRover |
	marsRover := MarsRover at: cartesianCenter facing: north.
	
	marsRover command: 'l'.
	
	self assert: (marsRover isFacing: west).
	self assert: (marsRover isAt: cartesianCenter).!

!methodRemoval: MarsRoverTest #test07RoverRotatesRightWhenFacingNorth stamp: 'JEA 10/25/2020 20:43:14'!
test07RoverRotatesRightWhenFacingNorth
	| marsRover |
	marsRover := MarsRover at: cartesianCenter facing: north.
	
	marsRover command: 'r'.
	
	self assert: (marsRover isFacing: east).
	self assert: (marsRover isAt: cartesianCenter).!
!MarsRoverTest methodsFor: 'tests' stamp: 'JEA 10/25/2020 20:43:18'!
test05RoverRotatesLeftAndRightWhenFacingNorth
	| marsRover |
	marsRover := MarsRover at: cartesianCenter facing: north.
	
	marsRover command: 'llr'.
	
	self assert: (marsRover isFacing: west).
	self assert: (marsRover isAt: cartesianCenter).! !

!methodRemoval: MarsRoverTest #test06RoverRotatesLeftAndRightWhenFacingNorth stamp: 'JEA 10/25/2020 20:43:18'!
test06RoverRotatesLeftAndRightWhenFacingNorth
	| marsRover |
	marsRover := MarsRover at: cartesianCenter facing: north.
	
	marsRover command: 'llr'.
	
	self assert: (marsRover isFacing: west).
	self assert: (marsRover isAt: cartesianCenter).!

!testRun: #MarsRoverTest #test01NewRoverShouldBeAtInitializedPosition stamp: 'JEA 10/25/2020 20:43:20'!
PASSED!

!testRun: #MarsRoverTest #test02NewRoverShouldBeFacingInitializedDirection stamp: 'JEA 10/25/2020 20:43:20'!
PASSED!

!testRun: #MarsRoverTest #test03RoverCantBeInitializedWithInvalidOrientation stamp: 'JEA 10/25/2020 20:43:20'!
PASSED!

!testRun: #MarsRoverTest #test04RoverMovesForwardAndBackwardsWhenFacingNorth stamp: 'JEA 10/25/2020 20:43:20'!
PASSED!

!testRun: #MarsRoverTest #test05RoverRotatesLeftAndRightWhenFacingNorth stamp: 'JEA 10/25/2020 20:43:20'!
PASSED!

!testRun: #MarsRoverTest #test08RoverMovesForwardWhenFacingEast stamp: 'JEA 10/25/2020 20:43:20'!
PASSED!

!testRun: #MarsRoverTest #test09RoverMovesBackwardsWhenFacingEast stamp: 'JEA 10/25/2020 20:43:20'!
PASSED!

!testRun: #MarsRoverTest #test10RoverRotatesLeftWhenFacingEast stamp: 'JEA 10/25/2020 20:43:20'!
PASSED!

!testRun: #MarsRoverTest #test11RoverRotatesRightWhenFacingEast stamp: 'JEA 10/25/2020 20:43:20'!
PASSED!

!testRun: #MarsRoverTest #test12RoverMovesForwardWhenFacingSouth stamp: 'JEA 10/25/2020 20:43:20'!
PASSED!

!testRun: #MarsRoverTest #test13RoverMovesBackwardsWhenFacingSouth stamp: 'JEA 10/25/2020 20:43:20'!
PASSED!

!testRun: #MarsRoverTest #test14RoverRotatesLeftWhenFacingSouth stamp: 'JEA 10/25/2020 20:43:20'!
PASSED!

!testRun: #MarsRoverTest #test15RoverRotatesRightWhenFacingSouth stamp: 'JEA 10/25/2020 20:43:20'!
PASSED!

!testRun: #MarsRoverTest #test16RoverMovesForwardWhenFacingWest stamp: 'JEA 10/25/2020 20:43:20'!
PASSED!

!testRun: #MarsRoverTest #test17RoverMovesBackwardsWhenFacingWest stamp: 'JEA 10/25/2020 20:43:20'!
PASSED!

!testRun: #MarsRoverTest #test18RoverRotatesLeftWhenFacingWest stamp: 'JEA 10/25/2020 20:43:20'!
PASSED!

!testRun: #MarsRoverTest #test19RoverRotatesRightWhenFacingWest stamp: 'JEA 10/25/2020 20:43:20'!
PASSED!

!testRun: #MarsRoverTest #test20RoverMovesAndRotatesMoreThanOnce stamp: 'JEA 10/25/2020 20:43:20'!
PASSED!

!testRun: #MarsRoverTest #test21RoverObeysMoreThanOneCommandSequence stamp: 'JEA 10/25/2020 20:43:20'!
PASSED!

!testRun: #MarsRoverTest #test22RoverStopsObeyingCommandsAfterInvalidCommand stamp: 'JEA 10/25/2020 20:43:20'!
PASSED!

!methodRemoval: MarsRoverTest #test08RoverMovesForwardWhenFacingEast stamp: 'JEA 10/25/2020 20:45:46'!
test08RoverMovesForwardWhenFacingEast
	| marsRover |
	marsRover := MarsRover at: cartesianCenter facing: east.
	
	marsRover command: 'f'.
	
	self assert: (marsRover isAt: cartesianCenter + (1@0)).
	self assert: (marsRover isFacing: east).	!

!methodRemoval: MarsRoverTest #test09RoverMovesBackwardsWhenFacingEast stamp: 'JEA 10/25/2020 20:45:48'!
test09RoverMovesBackwardsWhenFacingEast
	| marsRover |
	marsRover := MarsRover at: cartesianCenter facing: east.
	
	marsRover command: 'b'.
	
	self assert: (marsRover isAt: cartesianCenter - (1@0)).
	self assert: (marsRover isFacing: east).	!

!methodRemoval: MarsRoverTest #test10RoverRotatesLeftWhenFacingEast stamp: 'JEA 10/25/2020 20:45:48'!
test10RoverRotatesLeftWhenFacingEast
	| marsRover |
	marsRover := MarsRover at: cartesianCenter facing: east.
	
	marsRover command: 'l'.
	
	self assert: (marsRover isFacing: north).
	self assert: (marsRover isAt: cartesianCenter).!

!methodRemoval: MarsRoverTest #test11RoverRotatesRightWhenFacingEast stamp: 'JEA 10/25/2020 20:45:50'!
test11RoverRotatesRightWhenFacingEast
	| marsRover |
	marsRover := MarsRover at: cartesianCenter facing: east.
	
	marsRover command: 'r'.
	
	self assert: (marsRover isFacing: south).
	self assert: (marsRover isAt: cartesianCenter).!

!methodRemoval: MarsRoverTest #test12RoverMovesForwardWhenFacingSouth stamp: 'JEA 10/25/2020 20:45:51'!
test12RoverMovesForwardWhenFacingSouth
	| marsRover |
	marsRover := MarsRover at: cartesianCenter facing: south.
	
	marsRover command: 'f'.
	
	self assert: (marsRover isAt: cartesianCenter - (0@1)).
	self assert: (marsRover isFacing: south).	!

!methodRemoval: MarsRoverTest #test13RoverMovesBackwardsWhenFacingSouth stamp: 'JEA 10/25/2020 20:45:51'!
test13RoverMovesBackwardsWhenFacingSouth
	| marsRover |
	marsRover := MarsRover at: cartesianCenter facing: south.
	
	marsRover command: 'b'.
	
	self assert: (marsRover isAt: cartesianCenter + (0@1)).
	self assert: (marsRover isFacing: south).	!

!methodRemoval: MarsRoverTest #test14RoverRotatesLeftWhenFacingSouth stamp: 'JEA 10/25/2020 20:45:52'!
test14RoverRotatesLeftWhenFacingSouth
	| marsRover |
	marsRover := MarsRover at: cartesianCenter facing: south.
	
	marsRover command: 'l'.
	
	self assert: (marsRover isFacing: east).
	self assert: (marsRover isAt: cartesianCenter).!

!methodRemoval: MarsRoverTest #test15RoverRotatesRightWhenFacingSouth stamp: 'JEA 10/25/2020 20:45:53'!
test15RoverRotatesRightWhenFacingSouth
	| marsRover |
	marsRover := MarsRover at: cartesianCenter facing: south.
	
	marsRover command: 'r'.
	
	self assert: (marsRover isFacing: west).
	self assert: (marsRover isAt: cartesianCenter).!

!methodRemoval: MarsRoverTest #test16RoverMovesForwardWhenFacingWest stamp: 'JEA 10/25/2020 20:45:54'!
test16RoverMovesForwardWhenFacingWest
	| marsRover |
	marsRover := MarsRover at: cartesianCenter facing: west.
	
	marsRover command: 'f'.
	
	self assert: (marsRover isAt: cartesianCenter - (1@0)).
	self assert: (marsRover isFacing: west).	!

!methodRemoval: MarsRoverTest #test17RoverMovesBackwardsWhenFacingWest stamp: 'JEA 10/25/2020 20:45:55'!
test17RoverMovesBackwardsWhenFacingWest
	| marsRover |
	marsRover := MarsRover at: cartesianCenter facing: west.
	
	marsRover command: 'b'.
	
	self assert: (marsRover isAt: cartesianCenter + (1@0)).
	self assert: (marsRover isFacing: west).	!

!methodRemoval: MarsRoverTest #test18RoverRotatesLeftWhenFacingWest stamp: 'JEA 10/25/2020 20:45:55'!
test18RoverRotatesLeftWhenFacingWest
	| marsRover |
	marsRover := MarsRover at: cartesianCenter facing: west.
	
	marsRover command: 'l'.
	
	self assert: (marsRover isFacing: south).
	self assert: (marsRover isAt: cartesianCenter).!

!methodRemoval: MarsRoverTest #test19RoverRotatesRightWhenFacingWest stamp: 'JEA 10/25/2020 20:45:56'!
test19RoverRotatesRightWhenFacingWest
	| marsRover |
	marsRover := MarsRover at: cartesianCenter facing: west.
	
	marsRover command: 'r'.
	
	self assert: (marsRover isFacing: north).
	self assert: (marsRover isAt: cartesianCenter).!

!methodRemoval: MarsRoverTest #test20RoverMovesAndRotatesMoreThanOnce stamp: 'JEA 10/25/2020 20:45:57'!
test20RoverMovesAndRotatesMoreThanOnce
	| marsRover |
	marsRover := MarsRover at: cartesianCenter facing: north.
	
	marsRover command: 'fblrfrfrfrfr'.
	
	self assert: (marsRover isFacing: north).
	self assert: (marsRover isAt: cartesianCenter).!
!MarsRoverTest methodsFor: 'tests' stamp: 'JEA 10/25/2020 20:46:05'!
test06RoverObeysMoreThanOneCommandSequence
	| marsRover |
	marsRover := MarsRover at: cartesianCenter facing: north.
	
	marsRover command: 'f'.
	marsRover command: 'fflfrf'.
	marsRover command: 'bl'.
	
	self assert: (marsRover isFacing: west).
	self assert: (marsRover isAt: cartesianCenter + (-1@3)).! !

!methodRemoval: MarsRoverTest #test21RoverObeysMoreThanOneCommandSequence stamp: 'JEA 10/25/2020 20:46:07'!
test21RoverObeysMoreThanOneCommandSequence
	| marsRover |
	marsRover := MarsRover at: cartesianCenter facing: north.
	
	marsRover command: 'f'.
	marsRover command: 'fflfrf'.
	marsRover command: 'bl'.
	
	self assert: (marsRover isFacing: west).
	self assert: (marsRover isAt: cartesianCenter + (-1@3)).!
!MarsRoverTest methodsFor: 'tests' stamp: 'JEA 10/25/2020 20:46:13'!
test07RoverStopsObeyingCommandsAfterInvalidCommand
	| marsRover |
	marsRover := MarsRover at: cartesianCenter facing: north.
	
	self should: [marsRover command: 'fffQflffrffff'] 
		raise: Error 
		withMessageText: MarsRover invalidCommandErrorDescription.
	
	self assert: (marsRover isFacing: north).
	self assert: (marsRover isAt: cartesianCenter + (0@3)).! !

!methodRemoval: MarsRoverTest #test22RoverStopsObeyingCommandsAfterInvalidCommand stamp: 'JEA 10/25/2020 20:46:15'!
test22RoverStopsObeyingCommandsAfterInvalidCommand
	| marsRover |
	marsRover := MarsRover at: cartesianCenter facing: north.
	
	self should: [marsRover command: 'fffQflffrffff'] 
		raise: Error 
		withMessageText: MarsRover invalidCommandErrorDescription.
	
	self assert: (marsRover isFacing: north).
	self assert: (marsRover isAt: cartesianCenter + (0@3)).!

!testRun: #MarsRoverTest #test01NewRoverShouldBeAtInitializedPosition stamp: 'JEA 10/25/2020 20:46:15'!
PASSED!

!testRun: #MarsRoverTest #test02NewRoverShouldBeFacingInitializedDirection stamp: 'JEA 10/25/2020 20:46:15'!
PASSED!

!testRun: #MarsRoverTest #test03RoverCantBeInitializedWithInvalidOrientation stamp: 'JEA 10/25/2020 20:46:15'!
PASSED!

!testRun: #MarsRoverTest #test04RoverMovesForwardAndBackwardsWhenFacingNorth stamp: 'JEA 10/25/2020 20:46:15'!
PASSED!

!testRun: #MarsRoverTest #test05RoverRotatesLeftAndRightWhenFacingNorth stamp: 'JEA 10/25/2020 20:46:15'!
PASSED!

!testRun: #MarsRoverTest #test06RoverObeysMoreThanOneCommandSequence stamp: 'JEA 10/25/2020 20:46:15'!
PASSED!

!testRun: #MarsRoverTest #test07RoverStopsObeyingCommandsAfterInvalidCommand stamp: 'JEA 10/25/2020 20:46:15'!
PASSED!
!MarsRoverTest methodsFor: 'tests' stamp: 'JEA 10/25/2020 20:47:21'!
test01NewRoverShouldBeAtInitializedPositionFacingInitializedDirection
	| marsRover |
	marsRover := MarsRover at: cartesianCenter facing: north.
	
	self assert: (marsRover isAt: cartesianCenter).
	self assert: (marsRover isFacing: north).! !

!testRun: #MarsRoverTest #test01NewRoverShouldBeAtInitializedPosition stamp: 'JEA 10/25/2020 20:47:23'!
PASSED!

!testRun: #MarsRoverTest #test01NewRoverShouldBeAtInitializedPositionFacingInitializedDirection stamp: 'JEA 10/25/2020 20:47:23'!
PASSED!

!testRun: #MarsRoverTest #test02NewRoverShouldBeFacingInitializedDirection stamp: 'JEA 10/25/2020 20:47:23'!
PASSED!

!testRun: #MarsRoverTest #test03RoverCantBeInitializedWithInvalidOrientation stamp: 'JEA 10/25/2020 20:47:23'!
PASSED!

!testRun: #MarsRoverTest #test04RoverMovesForwardAndBackwardsWhenFacingNorth stamp: 'JEA 10/25/2020 20:47:23'!
PASSED!

!testRun: #MarsRoverTest #test05RoverRotatesLeftAndRightWhenFacingNorth stamp: 'JEA 10/25/2020 20:47:23'!
PASSED!

!testRun: #MarsRoverTest #test06RoverObeysMoreThanOneCommandSequence stamp: 'JEA 10/25/2020 20:47:23'!
PASSED!

!testRun: #MarsRoverTest #test07RoverStopsObeyingCommandsAfterInvalidCommand stamp: 'JEA 10/25/2020 20:47:23'!
PASSED!

!methodRemoval: MarsRoverTest #test01NewRoverShouldBeAtInitializedPosition stamp: 'JEA 10/25/2020 20:47:34'!
test01NewRoverShouldBeAtInitializedPosition

	self assert: ((MarsRover at: cartesianCenter facing: north) isAt: cartesianCenter).!

!methodRemoval: MarsRoverTest #test02NewRoverShouldBeFacingInitializedDirection stamp: 'JEA 10/25/2020 20:47:35'!
test02NewRoverShouldBeFacingInitializedDirection

	self assert: ((MarsRover at: cartesianCenter facing: north) isFacing: north).!
!MarsRoverTest methodsFor: 'tests' stamp: 'JEA 10/25/2020 20:47:39'!
test02RoverCantBeInitializedWithInvalidOrientation

	self should: [MarsRover at: cartesianCenter facing: Orientation new]
		raise: Error
		withMessageText: Orientation cannotInstanceAbstractErrorDescription.! !

!methodRemoval: MarsRoverTest #test03RoverCantBeInitializedWithInvalidOrientation stamp: 'JEA 10/25/2020 20:47:39'!
test03RoverCantBeInitializedWithInvalidOrientation

	self should: [MarsRover at: cartesianCenter facing: Orientation new]
		raise: Error
		withMessageText: Orientation cannotInstanceAbstractErrorDescription.!
!MarsRoverTest methodsFor: 'tests' stamp: 'JEA 10/25/2020 20:47:45'!
test03RoverMovesForwardAndBackwardsWhenFacingNorth
	| marsRover |
	marsRover := MarsRover at: cartesianCenter facing: north.
	
	marsRover command: 'ffb'.
	
	self assert: (marsRover isAt: cartesianCenter + (0@1)).
	self assert: (marsRover isFacing: north).! !

!methodRemoval: MarsRoverTest #test04RoverMovesForwardAndBackwardsWhenFacingNorth stamp: 'JEA 10/25/2020 20:47:45'!
test04RoverMovesForwardAndBackwardsWhenFacingNorth
	| marsRover |
	marsRover := MarsRover at: cartesianCenter facing: north.
	
	marsRover command: 'ffb'.
	
	self assert: (marsRover isAt: cartesianCenter + (0@1)).
	self assert: (marsRover isFacing: north).!
!MarsRoverTest methodsFor: 'tests' stamp: 'JEA 10/25/2020 20:47:48'!
test04RoverRotatesLeftAndRightWhenFacingNorth
	| marsRover |
	marsRover := MarsRover at: cartesianCenter facing: north.
	
	marsRover command: 'llr'.
	
	self assert: (marsRover isFacing: west).
	self assert: (marsRover isAt: cartesianCenter).! !

!methodRemoval: MarsRoverTest #test05RoverRotatesLeftAndRightWhenFacingNorth stamp: 'JEA 10/25/2020 20:47:48'!
test05RoverRotatesLeftAndRightWhenFacingNorth
	| marsRover |
	marsRover := MarsRover at: cartesianCenter facing: north.
	
	marsRover command: 'llr'.
	
	self assert: (marsRover isFacing: west).
	self assert: (marsRover isAt: cartesianCenter).!
!MarsRoverTest methodsFor: 'tests' stamp: 'JEA 10/25/2020 20:47:55'!
test05RoverObeysMoreThanOneCommandSequence
	| marsRover |
	marsRover := MarsRover at: cartesianCenter facing: north.
	
	marsRover command: 'f'.
	marsRover command: 'fflfrf'.
	marsRover command: 'bl'.
	
	self assert: (marsRover isFacing: west).
	self assert: (marsRover isAt: cartesianCenter + (-1@3)).! !

!methodRemoval: MarsRoverTest #test06RoverObeysMoreThanOneCommandSequence stamp: 'JEA 10/25/2020 20:47:55'!
test06RoverObeysMoreThanOneCommandSequence
	| marsRover |
	marsRover := MarsRover at: cartesianCenter facing: north.
	
	marsRover command: 'f'.
	marsRover command: 'fflfrf'.
	marsRover command: 'bl'.
	
	self assert: (marsRover isFacing: west).
	self assert: (marsRover isAt: cartesianCenter + (-1@3)).!
!MarsRoverTest methodsFor: 'tests' stamp: 'JEA 10/25/2020 20:48:04'!
test05RoverStopsObeyingCommandsAfterInvalidCommand
	| marsRover |
	marsRover := MarsRover at: cartesianCenter facing: north.
	
	self should: [marsRover command: 'fffQflffrffff'] 
		raise: Error 
		withMessageText: MarsRover invalidCommandErrorDescription.
	
	self assert: (marsRover isFacing: north).
	self assert: (marsRover isAt: cartesianCenter + (0@3)).! !

!methodRemoval: MarsRoverTest #test07RoverStopsObeyingCommandsAfterInvalidCommand stamp: 'JEA 10/25/2020 20:48:04'!
test07RoverStopsObeyingCommandsAfterInvalidCommand
	| marsRover |
	marsRover := MarsRover at: cartesianCenter facing: north.
	
	self should: [marsRover command: 'fffQflffrffff'] 
		raise: Error 
		withMessageText: MarsRover invalidCommandErrorDescription.
	
	self assert: (marsRover isFacing: north).
	self assert: (marsRover isAt: cartesianCenter + (0@3)).!
!MarsRoverTest methodsFor: 'tests' stamp: 'JEA 10/25/2020 20:48:08'!
test06RoverStopsObeyingCommandsAfterInvalidCommand
	| marsRover |
	marsRover := MarsRover at: cartesianCenter facing: north.
	
	self should: [marsRover command: 'fffQflffrffff'] 
		raise: Error 
		withMessageText: MarsRover invalidCommandErrorDescription.
	
	self assert: (marsRover isFacing: north).
	self assert: (marsRover isAt: cartesianCenter + (0@3)).! !

!methodRemoval: MarsRoverTest #test05RoverStopsObeyingCommandsAfterInvalidCommand stamp: 'JEA 10/25/2020 20:48:08'!
test05RoverStopsObeyingCommandsAfterInvalidCommand
	| marsRover |
	marsRover := MarsRover at: cartesianCenter facing: north.
	
	self should: [marsRover command: 'fffQflffrffff'] 
		raise: Error 
		withMessageText: MarsRover invalidCommandErrorDescription.
	
	self assert: (marsRover isFacing: north).
	self assert: (marsRover isAt: cartesianCenter + (0@3)).!

!testRun: #MarsRoverTest #test01NewRoverShouldBeAtInitializedPositionFacingInitializedDirection stamp: 'JEA 10/25/2020 20:48:10'!
PASSED!

!testRun: #MarsRoverTest #test02RoverCantBeInitializedWithInvalidOrientation stamp: 'JEA 10/25/2020 20:48:10'!
PASSED!

!testRun: #MarsRoverTest #test03RoverMovesForwardAndBackwardsWhenFacingNorth stamp: 'JEA 10/25/2020 20:48:10'!
PASSED!

!testRun: #MarsRoverTest #test04RoverRotatesLeftAndRightWhenFacingNorth stamp: 'JEA 10/25/2020 20:48:10'!
PASSED!

!testRun: #MarsRoverTest #test05RoverObeysMoreThanOneCommandSequence stamp: 'JEA 10/25/2020 20:48:10'!
PASSED!

!testRun: #MarsRoverTest #test06RoverStopsObeyingCommandsAfterInvalidCommand stamp: 'JEA 10/25/2020 20:48:10'!
PASSED!
!MarsRoverTest methodsFor: 'tests' stamp: 'JEA 10/25/2020 20:51:13' prior: 50879037!
test03RoverMovesForwardAndBackwardsWhenFacingNorth
	| marsRover |
	marsRover := MarsRover at: cartesianCenter facing: north.
	
	marsRover command: 'rf'.
	
	self assert: (marsRover isAt: cartesianCenter + (0@1)).
	self assert: (marsRover isFacing: north).! !
!MarsRoverTest methodsFor: 'tests' stamp: 'JEA 10/25/2020 20:51:23' prior: 50879059!
test04RoverRotatesLeftAndRightWhenFacingNorth
	| marsRover |
	marsRover := MarsRover at: cartesianCenter facing: north.
	
	marsRover command: 'flb'.
	
	self assert: (marsRover isFacing: west).
	self assert: (marsRover isAt: cartesianCenter).! !
!MarsRoverTest methodsFor: 'tests' stamp: 'JEA 10/25/2020 20:51:42' prior: 50879186!
test03RoverMovesForwardAndBackwardsWhenFacingNorth
	| marsRover |
	marsRover := MarsRover at: cartesianCenter facing: north.
	
	marsRover command: 'frf'.
	
	self assert: (marsRover isAt: cartesianCenter + (0@1)).
	self assert: (marsRover isFacing: north).! !
!MarsRoverTest methodsFor: 'tests' stamp: 'JEA 10/25/2020 20:51:58' prior: 50879197!
test04RoverRotatesLeftAndRightWhenFacingNorth
	| marsRover |
	marsRover := MarsRover at: cartesianCenter facing: north.
	
	marsRover command: 'lblf'.
	
	self assert: (marsRover isFacing: west).
	self assert: (marsRover isAt: cartesianCenter).! !
!MarsRoverTest methodsFor: 'tests' stamp: 'JEA 10/25/2020 20:52:17' prior: 50879208!
test03RoverMovesForwardAndBackwardsWhenFacingNorth
	| marsRover |
	marsRover := MarsRover at: cartesianCenter facing: north.
	
	marsRover command: 'frb'.
	
	self assert: (marsRover isAt: cartesianCenter + (0@1)).
	self assert: (marsRover isFacing: north).! !
!MarsRoverTest methodsFor: 'tests' stamp: 'JEA 10/25/2020 20:52:24' prior: 50879230!
test03RoverMovesForwardAndBackwardsWhenFacingNorth
	| marsRover |
	marsRover := MarsRover at: cartesianCenter facing: north.
	
	marsRover command: 'r'.
	
	self assert: (marsRover isAt: cartesianCenter + (0@1)).
	self assert: (marsRover isFacing: north).! !
!MarsRoverTest methodsFor: 'tests' stamp: 'JEA 10/25/2020 20:52:37' prior: 50879219!
test04RoverRotatesLeftAndRightWhenFacingNorth
	| marsRover |
	marsRover := MarsRover at: cartesianCenter facing: north.
	
	marsRover command: 'ffbl'.
	
	self assert: (marsRover isFacing: west).
	self assert: (marsRover isAt: cartesianCenter).! !
!MarsRoverTest methodsFor: 'tests' stamp: 'JEA 10/25/2020 20:53:41' prior: 50879252!
test04RoverRotatesLeftAndRightWhenFacingNorth
	| marsRover |
	marsRover := MarsRover at: cartesianCenter facing: north.
	
	marsRover command: 'llrffb'.
	
	self assert: (marsRover isFacing: west).
	self assert: (marsRover isAt: cartesianCenter).! !
!MarsRoverTest methodsFor: 'tests' stamp: 'JEA 10/25/2020 20:53:47' prior: 50879241!
test03RoverMovesForwardAndBackwardsWhenFacingNorth
	| marsRover |
	marsRover := MarsRover at: cartesianCenter facing: north.
	
	marsRover command: 'ffb'.
	
	self assert: (marsRover isAt: cartesianCenter + (0@1)).
	self assert: (marsRover isFacing: north).! !
!MarsRoverTest methodsFor: 'tests' stamp: 'JEA 10/25/2020 20:54:05' prior: 50879274!
test03RoverMovesForwardAndBackwardsWhenFacingNorth
	| marsRover |
	marsRover := MarsRover at: cartesianCenter facing: north.
	
	marsRover command: 'rf'.
	
	self assert: (marsRover isAt: cartesianCenter + (0@1)).
	self assert: (marsRover isFacing: north).! !
!MarsRoverTest methodsFor: 'tests' stamp: 'JEA 10/25/2020 20:54:16' prior: 50879285!
test03RoverMovesForwardAndBackwardsWhenFacingNorth
	| marsRover |
	marsRover := MarsRover at: cartesianCenter facing: north.
	
	marsRover command: 'f'.
	
	self assert: (marsRover isAt: cartesianCenter + (0@1)).
	self assert: (marsRover isFacing: north).! !
!MarsRoverTest methodsFor: 'tests' stamp: 'JEA 10/25/2020 20:54:20' prior: 50879296!
test03RoverMovesForwardAndBackwardsWhenFacingNorth
	| marsRover |
	marsRover := MarsRover at: cartesianCenter facing: north.
	
	marsRover command: 'ffb'.
	
	self assert: (marsRover isAt: cartesianCenter + (0@1)).
	self assert: (marsRover isFacing: north).! !
!MarsRoverTest methodsFor: 'tests' stamp: 'JEA 10/25/2020 20:54:42' prior: 50879263!
test04RoverRotatesLeftAndRightWhenFacingNorth
	| marsRover |
	marsRover := MarsRover at: cartesianCenter facing: north.
	
	marsRover command: 'llrffb'.
	
	self assert: (marsRover isFacing: west).
	self assert: (marsRover isAt: cartesianCenter + (1@0)).! !

!testRun: #MarsRoverTest #test01NewRoverShouldBeAtInitializedPositionFacingInitializedDirection stamp: 'JEA 10/25/2020 20:54:42'!
PASSED!

!testRun: #MarsRoverTest #test02RoverCantBeInitializedWithInvalidOrientation stamp: 'JEA 10/25/2020 20:54:42'!
PASSED!

!testRun: #MarsRoverTest #test03RoverMovesForwardAndBackwardsWhenFacingNorth stamp: 'JEA 10/25/2020 20:54:42'!
PASSED!

!testRun: #MarsRoverTest #test04RoverRotatesLeftAndRightWhenFacingNorth stamp: 'JEA 10/25/2020 20:54:42'!
FAILURE!

!testRun: #MarsRoverTest #test05RoverObeysMoreThanOneCommandSequence stamp: 'JEA 10/25/2020 20:54:42'!
PASSED!

!testRun: #MarsRoverTest #test06RoverStopsObeyingCommandsAfterInvalidCommand stamp: 'JEA 10/25/2020 20:54:42'!
PASSED!

!testRun: #MarsRoverTest #test04RoverRotatesLeftAndRightWhenFacingNorth stamp: 'JEA 10/25/2020 20:54:42'!
FAILURE!
!MarsRoverTest methodsFor: 'tests' stamp: 'JEA 10/25/2020 20:54:59' prior: 50879318!
test04RoverRotatesLeftAndRightWhenFacingNorth
	| marsRover |
	marsRover := MarsRover at: cartesianCenter facing: north.
	
	marsRover command: 'llrffb'.
	
	self assert: (marsRover isFacing: west).
	self assert: (marsRover isAt: cartesianCenter - (1@0)).! !

!testRun: #MarsRoverTest #test01NewRoverShouldBeAtInitializedPositionFacingInitializedDirection stamp: 'JEA 10/25/2020 20:55:00'!
PASSED!

!testRun: #MarsRoverTest #test02RoverCantBeInitializedWithInvalidOrientation stamp: 'JEA 10/25/2020 20:55:00'!
PASSED!

!testRun: #MarsRoverTest #test03RoverMovesForwardAndBackwardsWhenFacingNorth stamp: 'JEA 10/25/2020 20:55:00'!
PASSED!

!testRun: #MarsRoverTest #test04RoverRotatesLeftAndRightWhenFacingNorth stamp: 'JEA 10/25/2020 20:55:00'!
PASSED!

!testRun: #MarsRoverTest #test05RoverObeysMoreThanOneCommandSequence stamp: 'JEA 10/25/2020 20:55:00'!
PASSED!

!testRun: #MarsRoverTest #test06RoverStopsObeyingCommandsAfterInvalidCommand stamp: 'JEA 10/25/2020 20:55:00'!
PASSED!

----SNAPSHOT----(25 October 2020 20:56:00) CuisUniversity-4384.image priorSource: 17480213!

----SNAPSHOT----(25 October 2020 20:56:56) CuisUniversity-4384.image priorSource: 17527605!

----QUIT----(25 October 2020 20:57:02) CuisUniversity-4384.image priorSource: 17527698!