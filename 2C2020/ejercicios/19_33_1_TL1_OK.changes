TestCase subclass: #CartTests
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Ejercicio - TusLibros.com'!

!classDefinition: #CartTests category: #'Ejercicio - TusLibros.com' stamp: 'FG 11/16/2020 18:53:01'!
TestCase subclass: #CartTests
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Ejercicio - TusLibros.com'!

Object subclass: #Cart
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Ejercicio - TusLibros.com'!

!classDefinition: #Cart category: #'Ejercicio - TusLibros.com' stamp: 'FG 11/16/2020 18:54:23'!
Object subclass: #Cart
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Ejercicio - TusLibros.com'!
!CartTests methodsFor: 'nil' stamp: 'FG 11/16/2020 18:56:11'!
test01

	| cart |
	
	cart := Cart new.
	
	self assert: cart isEmpty. ! !
!Cart methodsFor: 'nil' stamp: 'FG 11/16/2020 18:56:24'!
isEmpty
	^ true.! !

!testRun: #CartTests #test01 stamp: 'FG 11/16/2020 18:56:27'!
PASSED!
!CartTests methodsFor: 'as yet unclassified' stamp: 'FG 11/16/2020 19:01:27'!
test02

	| cart book |
	
	cart := Cart new.
	book := 0.
	
	cart add: 1 of: book.
	
	self assert: cart isEmpty. ! !
!CartTests methodsFor: 'as yet unclassified' stamp: 'FG 11/16/2020 19:02:22' prior: 50929036!
test02

	| cart book |
	
	cart := Cart new.
	book := 0.
	
	cart add: 1 of: book.
	
	self assert: cart isEmpty not. ! !

!testRun: #CartTests #test02 stamp: 'FG 11/16/2020 19:02:52'!
ERROR!

!testRun: #CartTests #test02 stamp: 'FG 11/16/2020 19:02:52'!
ERROR!

!testRun: #CartTests #test02 stamp: 'FG 11/16/2020 19:03:07'!
ERROR!

!testRun: #CartTests #test02 stamp: 'FG 11/16/2020 19:03:08'!
ERROR!
!Cart methodsFor: 'as yet unclassified' stamp: 'FG 11/16/2020 19:03:15'!
add: aSmallInteger of: aSmallInteger2 
	self shouldBeImplemented.! !
!Cart methodsFor: 'as yet unclassified' stamp: 'FG 11/16/2020 19:03:35' prior: 50929058!
add: aQuantity of: aBook ! !

!testRun: #CartTests #test02 stamp: 'FG 11/16/2020 19:03:39'!
FAILURE!

!testRun: #CartTests #test02 stamp: 'FG 11/16/2020 19:03:39'!
FAILURE!

Object subclass: #Cart
	instanceVariableNames: 'isEmpty'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Ejercicio - TusLibros.com'!

!classDefinition: #Cart category: #'Ejercicio - TusLibros.com' stamp: 'FG 11/16/2020 19:04:04'!
Object subclass: #Cart
	instanceVariableNames: 'isEmpty'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Ejercicio - TusLibros.com'!
!Cart methodsFor: 'as yet unclassified' stamp: 'FG 11/16/2020 19:04:17' prior: 50929063!
add: aQuantity of: aBook 
	^ isEmpty := true.! !
!Cart methodsFor: 'as yet unclassified' stamp: 'FG 11/16/2020 19:04:23' prior: 50929030!
isEmpty
	^ isEmpty.! !
!Cart class methodsFor: 'nil' stamp: 'FG 11/16/2020 19:04:42' overrides: 16783533!
new
	 ^ self basicNew initialize.! !
!Cart methodsFor: 'nil' stamp: 'FG 11/16/2020 19:04:53' overrides: 16896425!
initialize
	isEmpty := false.! !
!Cart methodsFor: 'as yet unclassified' stamp: 'FG 11/16/2020 19:04:59' prior: 50929097 overrides: 16896425!
initialize
	isEmpty := true.! !
!Cart methodsFor: 'as yet unclassified' stamp: 'FG 11/16/2020 19:05:06' prior: 50929084!
add: aQuantity of: aBook 
	^ isEmpty := false.! !

!testRun: #CartTests #test01 stamp: 'FG 11/16/2020 19:05:09'!
PASSED!

!testRun: #CartTests #test02 stamp: 'FG 11/16/2020 19:05:11'!
PASSED!

!testRun: #CartTests #test02 stamp: 'FG 11/16/2020 19:05:15'!
PASSED!

!testRun: #CartTests #test02 stamp: 'FG 11/16/2020 19:05:20'!
PASSED!
!CartTests methodsFor: 'as yet unclassified' stamp: 'FG 11/16/2020 19:07:13'!
test03

	| cart book |
	
	cart := Cart new.
	book := 0.
	
	cart add: 1 of: book.
	
	self assert: (cart has: book) ! !

!testRun: #CartTests #test03 stamp: 'FG 11/16/2020 19:09:08'!
ERROR!

!testRun: #CartTests #test03 stamp: 'FG 11/16/2020 19:09:08'!
ERROR!
!Cart methodsFor: 'as yet unclassified' stamp: 'FG 11/16/2020 19:09:15'!
has: aSmallInteger 
	self shouldBeImplemented.! !
!Cart methodsFor: 'as yet unclassified' stamp: 'FG 11/16/2020 19:09:33' prior: 50929130!
has: aBook! !

!testRun: #CartTests #test03 stamp: 'FG 11/16/2020 19:09:39'!
ERROR!

!testRun: #CartTests #test03 stamp: 'FG 11/16/2020 19:09:39'!
ERROR!
!Cart methodsFor: 'as yet unclassified' stamp: 'FG 11/16/2020 19:09:58' prior: 50929135!
has: aBook
	^ true.! !
!CartTests methodsFor: 'as yet unclassified' stamp: 'FG 11/16/2020 19:10:21' prior: 50929119!
test03

	| cart book |
	
	cart := Cart new.
	book := 0.
	
	self assert: (cart has: book) ! !
!CartTests methodsFor: 'as yet unclassified' stamp: 'FG 11/16/2020 19:10:26' prior: 50929147!
test03

	| cart book |
	
	cart := Cart new.
	book := 0.
	
	self assert: (cart has: book) not.! !

!testRun: #CartTests #test03 stamp: 'FG 11/16/2020 19:10:28'!
FAILURE!

!testRun: #CartTests #test03 stamp: 'FG 11/16/2020 19:10:28'!
FAILURE!
!Cart methodsFor: 'as yet unclassified' stamp: 'FG 11/16/2020 19:10:44' prior: 50929143!
has: aBook
	^ false.! !

!testRun: #CartTests #test03 stamp: 'FG 11/16/2020 19:10:47'!
PASSED!
!CartTests methodsFor: 'as yet unclassified' stamp: 'FG 11/16/2020 19:11:17'!
test04

	| cart book |
	
	cart := Cart new.
	book := 0.
	
	cart add: 1 of: book. 
	
	self assert: (cart has: book) not.! !
!CartTests methodsFor: 'as yet unclassified' stamp: 'FG 11/16/2020 19:11:29' prior: 50929170!
test04

	| cart book |
	
	cart := Cart new.
	book := 0.
	
	cart add: 1 of: book. 
	
	self assert: (cart has: book).! !

!testRun: #CartTests #test04 stamp: 'FG 11/16/2020 19:11:31'!
FAILURE!

!testRun: #CartTests #test04 stamp: 'FG 11/16/2020 19:11:31'!
FAILURE!
!Cart methodsFor: 'as yet unclassified' stamp: 'FG 11/16/2020 19:11:54' prior: 50929164!
has: aBook
	^ isEmpty.! !
!Cart methodsFor: 'as yet unclassified' stamp: 'FG 11/16/2020 19:11:58' prior: 50929188!
has: aBook
	^ isEmpty not.! !

!testRun: #CartTests #test01 stamp: 'FG 11/16/2020 19:12:02'!
PASSED!

!testRun: #CartTests #test02 stamp: 'FG 11/16/2020 19:12:02'!
PASSED!

!testRun: #CartTests #test03 stamp: 'FG 11/16/2020 19:12:02'!
PASSED!

!testRun: #CartTests #test04 stamp: 'FG 11/16/2020 19:12:02'!
PASSED!
!CartTests methodsFor: 'as yet unclassified' stamp: 'FG 11/16/2020 19:13:04'!
test05

	| cart historyBook mathBook |
	
	cart := Cart new.
	mathBook := 0.
	historyBook := 1.
	
	cart add: 1 of: historyBook. 
	
	self assert: (cart has: mathBook) not.
	! !

!testRun: #CartTests #test05 stamp: 'FG 11/16/2020 19:13:06'!
FAILURE!

!testRun: #CartTests #test05 stamp: 'FG 11/16/2020 19:13:06'!
FAILURE!

Object subclass: #Cart
	instanceVariableNames: 'books'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Ejercicio - TusLibros.com'!

!classDefinition: #Cart category: #'Ejercicio - TusLibros.com' stamp: 'FG 11/16/2020 19:14:01'!
Object subclass: #Cart
	instanceVariableNames: 'books'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Ejercicio - TusLibros.com'!
!Cart methodsFor: 'as yet unclassified' stamp: 'FG 11/16/2020 19:14:25' prior: 50929102 overrides: 16896425!
initialize
	books := OrderedCollection new.! !
!Cart methodsFor: 'as yet unclassified' stamp: 'FG 11/16/2020 19:15:27' prior: 50929089!
isEmpty
	^ books isEmpty.! !
!Cart methodsFor: 'as yet unclassified' stamp: 'FG 11/16/2020 19:15:43' prior: 50929106!
add: aQuantity of: aBook 
	^ books add: aBook.! !
!Cart methodsFor: 'as yet unclassified' stamp: 'FG 11/16/2020 19:15:54' prior: 50929192!
has: aBook
	^ books includes: aBook.! !

!testRun: #CartTests #test05 stamp: 'FG 11/16/2020 19:15:59'!
PASSED!

!testRun: #CartTests #test01 stamp: 'FG 11/16/2020 19:16:01'!
PASSED!

!testRun: #CartTests #test02 stamp: 'FG 11/16/2020 19:16:01'!
PASSED!

!testRun: #CartTests #test03 stamp: 'FG 11/16/2020 19:16:01'!
PASSED!

!testRun: #CartTests #test04 stamp: 'FG 11/16/2020 19:16:01'!
PASSED!

!testRun: #CartTests #test05 stamp: 'FG 11/16/2020 19:16:02'!
PASSED!
!Cart methodsFor: 'as yet unclassified' stamp: 'FG 11/16/2020 19:17:55' prior: 50929231 overrides: 16896425!
initialize
	books := Bag new.! !
!CartTests methodsFor: 'as yet unclassified' stamp: 'FG 11/16/2020 19:20:19'!
test06

	| cart book |
	
	cart := Cart new.
	book := 0.
		
	cart add: 100 of: book. 
	
	self assert: (cart quantityOf: book) equals: 100.
	! !

!testRun: #CartTests #test06 stamp: 'FG 11/16/2020 19:20:23'!
ERROR!

!testRun: #CartTests #test06 stamp: 'FG 11/16/2020 19:20:23'!
ERROR!
!Cart methodsFor: 'as yet unclassified' stamp: 'FG 11/16/2020 19:20:32'!
quantityOf: aSmallInteger 
	self shouldBeImplemented.! !
!Cart methodsFor: 'as yet unclassified' stamp: 'FG 11/16/2020 19:20:43' prior: 50929279!
quantityOf: aBook
	^ 100.! !

!testRun: #CartTests #test06 stamp: 'FG 11/16/2020 19:22:51'!
PASSED!
!CartTests methodsFor: 'as yet unclassified' stamp: 'FG 11/16/2020 19:24:25' prior: 50929267!
test06

	| cart historyBook mathBook|
	
	cart := Cart new.
	historyBook := 'HistoryBook'.
	mathBook := 'MathBook'.
		
	cart add: 100 of: historyBook.
	cart add: 50 of: mathBook. 
	
	self assert: (cart quantityOf: historyBook) equals: 100.
	self assert: (cart quantityOf: mathBook) equals: 50.
	! !

!testRun: #CartTests #test06 stamp: 'FG 11/16/2020 19:24:33'!
FAILURE!

!testRun: #CartTests #test06 stamp: 'FG 11/16/2020 19:24:33'!
FAILURE!

!testRun: #CartTests #test01 stamp: 'FG 11/16/2020 19:25:02'!
PASSED!

!testRun: #CartTests #test02 stamp: 'FG 11/16/2020 19:25:04'!
PASSED!

!testRun: #CartTests #test03 stamp: 'FG 11/16/2020 19:25:06'!
PASSED!

!testRun: #CartTests #test04 stamp: 'FG 11/16/2020 19:25:07'!
PASSED!
!Cart methodsFor: 'as yet unclassified' stamp: 'FG 11/16/2020 19:25:41' prior: 50929240!
add: aQuantity of: aBook 
	^ books add: aBook withOccurrences: aQuantity.! !
!Cart methodsFor: 'as yet unclassified' stamp: 'FG 11/16/2020 19:26:32' prior: 50929284!
quantityOf: aBook
	^ books occurrencesOf: aBook.! !

!testRun: #CartTests #test06 stamp: 'FG 11/16/2020 19:26:37'!
PASSED!

!testRun: #CartTests #test05 stamp: 'FG 11/16/2020 19:26:39'!
PASSED!

!testRun: #CartTests #test04 stamp: 'FG 11/16/2020 19:26:41'!
PASSED!

!testRun: #CartTests #test03 stamp: 'FG 11/16/2020 19:26:42'!
PASSED!
!CartTests methodsFor: 'as yet unclassified' stamp: 'FG 11/16/2020 19:27:51'!
test07

	| cart historyBook mathBook|
	
	cart := Cart new.
	historyBook := 'HistoryBook'.
	mathBook := 'MathBook'.
		
	cart add: 100 of: historyBook.
	cart add: 50 of: mathBook. 
	cart add: 150 of: mathBook.
		
	self assert: (cart quantityOf: historyBook) equals: 100.
	self assert: (cart quantityOf: mathBook) equals: 50.
	! !
!CartTests methodsFor: 'as yet unclassified' stamp: 'FG 11/16/2020 19:27:58' prior: 50929336!
test07

	| cart historyBook mathBook|
	
	cart := Cart new.
	historyBook := 'HistoryBook'.
	mathBook := 'MathBook'.
		
	cart add: 100 of: historyBook.
	cart add: 50 of: mathBook. 
	cart add: 150 of: mathBook.
		
	self assert: (cart quantityOf: historyBook) equals: 100.
	self assert: (cart quantityOf: mathBook) equals: 200.
	! !

!testRun: #CartTests #test07 stamp: 'FG 11/16/2020 19:28:01'!
PASSED!
!CartTests methodsFor: 'as yet unclassified' stamp: 'FG 11/16/2020 19:32:13' prior: 50929043!
test02

	| cart book |
	
	cart := Cart new.
	book := 'Book'.
	
	cart add: 1 of: book.
	
	self assert: cart isEmpty not. ! !
!CartTests methodsFor: 'as yet unclassified' stamp: 'FG 11/16/2020 19:32:20' prior: 50929153!
test03

	| cart book |
	
	cart := Cart new.
	book := 'Book'.
	
	self assert: (cart has: book) not.! !
!CartTests methodsFor: 'as yet unclassified' stamp: 'FG 11/16/2020 19:32:28' prior: 50929177!
test04

	| cart book |
	
	cart := Cart new.
	book := 'Book'.
	
	cart add: 1 of: book. 
	
	self assert: (cart has: book).! !
!CartTests methodsFor: 'as yet unclassified' stamp: 'FG 11/16/2020 19:32:57' prior: 50929205!
test05

	| cart historyBook mathBook |
	
	cart := Cart new.
	mathBook := 'MathBook'.
	historyBook := 'HistoryBook'.
	
	cart add: 1 of: historyBook. 
	
	self assert: (cart has: mathBook) not.
	! !
!CartTests methodsFor: 'as yet unclassified' stamp: 'FG 11/16/2020 19:33:14' prior: 50929350!
test07

	| cart mathBook|
	
	cart := Cart new.
	mathBook := 'MathBook'.
		
	cart add: 50 of: mathBook. 
	cart add: 150 of: mathBook.
		
	self assert: (cart quantityOf: mathBook) equals: 200.
	! !
!CartTests methodsFor: 'as yet unclassified' stamp: 'FG 11/16/2020 19:33:29' prior: 50929397!
test07

	| cart book|
	
	cart := Cart new.
	book := 'MathBook'.
		
	cart add: 50 of: book. 
	cart add: 150 of: book.
		
	self assert: (cart quantityOf: book) equals: 200.
	! !
!CartTests methodsFor: 'as yet unclassified' stamp: 'FG 11/16/2020 19:34:27' prior: 50929387!
test05

	| cart historyBook mathBook |
	
	cart := Cart new.
	mathBook := 'MathBook'.
	historyBook := 'HistoryBook'.
	
	cart add: 10 of: historyBook. 
	
	self assert: (cart has: mathBook) not.
	! !
!CartTests methodsFor: 'as yet unclassified' stamp: 'FG 11/16/2020 19:34:31' prior: 50929380!
test04

	| cart book |
	
	cart := Cart new.
	book := 'Book'.
	
	cart add: 10 of: book. 
	
	self assert: (cart has: book).! !
!CartTests methodsFor: 'as yet unclassified' stamp: 'FG 11/16/2020 19:34:39' prior: 50929366!
test02

	| cart book |
	
	cart := Cart new.
	book := 'Book'.
	
	cart add: 10 of: book.
	
	self assert: cart isEmpty not. ! !

----QUIT----(16 November 2020 20:58:39) CuisUniversity-4365.image priorSource: 18890066!

----STARTUP---- (18 November 2020 17:34:37) as C:\Users\FACU PC\Documents\Clases Virtuales\Cosas IS 1\Cuis University\CuisUniversity-4365.image!

!CartTests methodsFor: 'as yet unclassified' stamp: 'FG 11/18/2020 17:43:24' prior: 50929407!
test07

	| cart book|
	
	cart := Cart new.
	book := 'MathBook'.
		
	cart add: 50 of: book. 
	cart add: 150 of: book.
		
	self assert: (cart quantityOf: book) equals: 200.! !
!CartTests methodsFor: 'as yet unclassified' stamp: 'FG 11/18/2020 17:45:45'!
test08

	| cart mathBook historyBook|
	
	cart := Cart new.
	mathBook := 'MathBook'.
	historyBook := 'HistoryBook'.	
		
	cart add: 50 of: mathBook.
		
	self assert: cart books size equals: 1.
	self assert: (cart books includes: mathBook).
	
	cart add: 100 of: historyBook.
	
	self assert: cart books size equals: 2.
	self assert: (cart books includes: historyBook).
	! !

!testRun: #CartTests #test08 stamp: 'FG 11/18/2020 17:45:56'!
ERROR!

!testRun: #CartTests #test08 stamp: 'FG 11/18/2020 17:45:56'!
ERROR!
!Cart methodsFor: 'as yet unclassified' stamp: 'FG 11/18/2020 17:46:05'!
books
	self shouldBeImplemented.
	^books! !
!Cart methodsFor: 'as yet unclassified' stamp: 'FG 11/18/2020 17:46:38' prior: 50929475!
books
	^ books copy.! !

!testRun: #CartTests #test08 stamp: 'FG 11/18/2020 17:46:51'!
FAILURE!

!testRun: #CartTests #test08 stamp: 'FG 11/18/2020 17:46:51'!
FAILURE!
!CartTests methodsFor: 'as yet unclassified' stamp: 'FG 11/18/2020 17:48:21' prior: 50929456!
test08

	| cart mathBook historyBook|
	
	cart := Cart new.
	mathBook := 'MathBook'.
	historyBook := 'HistoryBook'.	
		
	cart add: 50 of: mathBook.
		
	self assert: cart books size equals: 50.
	self assert: (cart books includes: mathBook).
	
	cart add: 100 of: historyBook.
	
	self assert: cart books size equals: 150.
	self assert: (cart books includes: historyBook).
	! !

!testRun: #CartTests #test08 stamp: 'FG 11/18/2020 17:48:24'!
PASSED!
!CartTests methodsFor: 'as yet unclassified' stamp: 'FG 11/18/2020 17:48:29' prior: 50929448!
test07

	| cart book|
	
	cart := Cart new.
	book := 'Book'.
		
	cart add: 50 of: book. 
	cart add: 150 of: book.
		
	self assert: (cart quantityOf: book) equals: 200.! !

Object subclass: #Cart
	instanceVariableNames: 'books'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Ejercicio - TusLibros.com'!

!classDefinition: #Cart category: #'Ejercicio - TusLibros.com' stamp: 'FG 11/18/2020 17:50:27'!
Object subclass: #Cart
	instanceVariableNames: 'books'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Ejercicio - TusLibros.com'!
!CartTests methodsFor: 'as yet unclassified' stamp: 'FG 11/18/2020 17:52:11'!
test09

	| cart catalogue mathBook historyBook|
	
	
	mathBook := 'MathBook'.
	historyBook := 'HistoryBook'.	
	
	catalogue := OrderedCollection new.
	catalogue add: mathBook.
	catalogue add: historyBook.
	
	cart := Cart with: catalogue.
		
	cart add: 50 of: mathBook.
	! !
!CartTests methodsFor: 'as yet unclassified' stamp: 'FG 11/18/2020 17:53:11' prior: 50929526!
test09

	| cart catalogue mathBook historyBook|
	
	
	mathBook := 'MathBook'.
	historyBook := 'HistoryBook'.	
	
	catalogue := OrderedCollection with: mathBook with: historyBook.
	cart := Cart with: catalogue.
		
	cart add: 50 of: mathBook.
	! !
!CartTests methodsFor: 'as yet unclassified' stamp: 'FG 11/18/2020 18:00:22' prior: 50929538!
test09

	| cart catalogue mathBook historyBook|
	
	mathBook := 'MathBook'.
	historyBook := 'HistoryBook'.	
	
	catalogue := OrderedCollection with: mathBook.
	cart := Cart with: catalogue.
	
	[cart add: historyBook. self fail]
		on: Error
		do: [:anError | self assert: anError messageText equals: Cart CantAddBooksThatAreNotInTheCatalogue. ].	
! !

!testRun: #CartTests #test09 stamp: 'FG 11/18/2020 18:00:43'!
ERROR!

!testRun: #CartTests #test09 stamp: 'FG 11/18/2020 18:00:43'!
ERROR!
!Cart class methodsFor: 'as yet unclassified' stamp: 'FG 11/18/2020 18:01:21'!
with: aCatalogue
	^ self basicNew initializeWith: aCatalogue.! !

!methodRemoval: Cart class #new stamp: 'FG 11/18/2020 18:01:25'!
new
	 ^ self basicNew initialize.!

!classDefinition: #Cart category: #'Ejercicio - TusLibros.com' stamp: 'FG 11/18/2020 18:02:05'!
Object subclass: #Cart
	instanceVariableNames: 'books catalogue'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Ejercicio - TusLibros.com'!
!Cart methodsFor: 'as yet unclassified' stamp: 'FG 11/18/2020 18:02:03'!
initializeWith: aCatalogue

	catalogue := aCatalogue.
	books := Bag new.! !

!testRun: #CartTests #test09 stamp: 'FG 11/18/2020 18:02:13'!
ERROR!

!testRun: #CartTests #test09 stamp: 'FG 11/18/2020 18:02:13'!
ERROR!
!Cart class methodsFor: 'as yet unclassified' stamp: 'FG 11/18/2020 18:02:24'!
CantAddBooksThatAreNotInTheCatalogue
	self shouldBeImplemented.! !
!Cart class methodsFor: 'as yet unclassified' stamp: 'FG 11/18/2020 18:03:40' prior: 50929593!
CantAddBooksThatAreNotInTheCatalogue
	^ 'Cant add book because is not in the catalogue'.! !

!testRun: #CartTests #test09 stamp: 'FG 11/18/2020 18:03:46'!
FAILURE!

!testRun: #CartTests #test09 stamp: 'FG 11/18/2020 18:03:46'!
FAILURE!
!CartTests methodsFor: 'as yet unclassified' stamp: 'FG 11/18/2020 18:04:13' prior: 50929549!
test09

	| cart catalogue mathBook historyBook|
	
	mathBook := 'MathBook'.
	historyBook := 'HistoryBook'.	
	
	catalogue := OrderedCollection with: mathBook.
	cart := Cart with: catalogue.
	
	[cart add: 100 of: historyBook. self fail]
		on: Error
		do: [:anError | self assert: anError messageText equals: Cart CantAddBooksThatAreNotInTheCatalogue. ].	
! !

!testRun: #CartTests #test09 stamp: 'FG 11/18/2020 18:04:15'!
FAILURE!

!testRun: #CartTests #test09 stamp: 'FG 11/18/2020 18:04:15'!
FAILURE!
!Cart methodsFor: 'as yet unclassified' stamp: 'FG 11/18/2020 18:05:08' prior: 50929317!
add: aQuantity of: aBook 

	(catalogue includes: aBook) ifTrue:[ self error: Cart cantAddBooksThatAreNotInTheCatalogue ].
	^ books add: aBook withOccurrences: aQuantity.! !
!Cart class methodsFor: 'as yet unclassified' stamp: 'FG 11/18/2020 18:05:15'!
cantAddBooksThatAreNotInTheCatalogue
	^ 'Cant add book because is not in the catalogue'.! !

!methodRemoval: Cart class #CantAddBooksThatAreNotInTheCatalogue stamp: 'FG 11/18/2020 18:05:17'!
CantAddBooksThatAreNotInTheCatalogue
	^ 'Cant add book because is not in the catalogue'.!
!Cart methodsFor: 'as yet unclassified' stamp: 'FG 11/18/2020 18:05:32' prior: 50929629!
add: aQuantity of: aBook 

	(catalogue includes: aBook) ifTrue:[ self error: Cart cantAddBooksThatAreNotInTheCatalogue ].
	
	^ books add: aBook withOccurrences: aQuantity.! !
!CartTests methodsFor: 'as yet unclassified' stamp: 'FG 11/18/2020 18:07:06' prior: 50929610!
test09

	| cart catalogue mathBook historyBook|
	
	mathBook := 'MathBook'.
	historyBook := 'HistoryBook'.	
	
	catalogue := OrderedCollection with: mathBook.
	cart := Cart with: catalogue.
	
	[cart add: 100 of: historyBook. self fail]
		on: Error
		do: [:anError | self assert: anError messageText equals: Cart cantAddBooksThatAreNotInTheCatalogue. ].	
! !
!Cart methodsFor: 'as yet unclassified' stamp: 'FG 11/18/2020 18:07:36' prior: 50929649!
add: aQuantity of: aBook 

	(catalogue includes: aBook) ifFalse:[ self error: Cart cantAddBooksThatAreNotInTheCatalogue ].
	
	^ books add: aBook withOccurrences: aQuantity.! !
!CartTests methodsFor: 'as yet unclassified' stamp: 'FG 11/18/2020 18:09:18' prior: 50929658!
test09

	| cart catalogue mathBook historyBook|
	
	mathBook := 'MathBook'.
	historyBook := 'HistoryBook'.	
	
	catalogue := Set with: mathBook.
	cart := Cart with: catalogue.
	
	[cart add: 100 of: historyBook. self fail]
		on: Error
		do: [:anError | self assert: anError messageText equals: Cart cantAddBooksThatAreNotInTheCatalogue. ].	
! !

!methodRemoval: Cart #initialize stamp: 'FG 11/18/2020 18:09:32'!
initialize
	books := Bag new.!

!testRun: #CartTests #test09 stamp: 'FG 11/18/2020 18:09:41'!
PASSED!
!CartTests methodsFor: 'as yet unclassified' stamp: 'FG 11/18/2020 18:10:45' prior: 50929025!
test01

	| cart catalogue |
	
	catalogue := Set new.
	cart := Cart with: catalogue.
	
	self assert: cart isEmpty. ! !

!testRun: #CartTests #test01 stamp: 'FG 11/18/2020 18:10:48'!
PASSED!
!CartTests methodsFor: 'as yet unclassified' stamp: 'FG 11/18/2020 18:11:31' prior: 50929433!
test02

	| cart catalogue book |
	
	book := 'Book'.
	catalogue := Set with: book.
	
	cart := Cart new.
	
	cart add: 10 of: book.
	
	self assert: cart isEmpty not. ! !
!CartTests methodsFor: 'as yet unclassified' stamp: 'FG 11/18/2020 18:11:39' prior: 50929709!
test02

	| cart catalogue book |
	
	book := 'Book'.
	catalogue := Set with: book.
	
	cart := Cart with: catalogue.
	
	cart add: 10 of: book.
	
	self assert: cart isEmpty not. ! !

!testRun: #CartTests #test02 stamp: 'FG 11/18/2020 18:11:44'!
PASSED!
!CartTests methodsFor: 'as yet unclassified' stamp: 'FG 11/18/2020 18:12:04' prior: 50929373!
test03

	| cart catalogue book |
	
	book := 'Book'.
	catalogue := Set with: book.
	
	cart := Cart new.
	
	self assert: (cart has: book) not.! !
!CartTests methodsFor: 'as yet unclassified' stamp: 'FG 11/18/2020 18:12:12' prior: 50929729!
test03

	| cart catalogue book |
	
	book := 'Book'.
	catalogue := Set with: book.
	
	cart := Cart with: catalogue.
	
	self assert: (cart has: book) not.! !

!testRun: #CartTests #test03 stamp: 'FG 11/18/2020 18:12:15'!
PASSED!
!CartTests methodsFor: 'as yet unclassified' stamp: 'FG 11/18/2020 18:12:44' prior: 50929426!
test04

	| cart catalogue book |
	
	book := 'Book'.
	catalogue := Set with: book.
	
	cart := Cart with: catalogue.
	
	cart add: 10 of: book. 
	
	self assert: (cart has: book).! !
!CartTests methodsFor: 'as yet unclassified' stamp: 'FG 11/18/2020 18:13:24' prior: 50929416!
test05

	| cart catalogue historyBook mathBook |
	
	mathBook := 'MathBook'.
	historyBook := 'HistoryBook'.
	catalogue := Set with: mathBook with: historyBook.
	
	cart := Cart with: catalogue.
	
	cart add: 10 of: historyBook. 
	
	self assert: (cart has: mathBook) not.
	! !

!testRun: #CartTests #test05 stamp: 'FG 11/18/2020 18:13:26'!
PASSED!
!CartTests methodsFor: 'as yet unclassified' stamp: 'FG 11/18/2020 18:14:06' prior: 50929291!
test06

	| cart catalogue historyBook mathBook|
	
	historyBook := 'HistoryBook'.
	mathBook := 'MathBook'.
	catalogue := Set with: mathBook with: historyBook.
	
	cart := Cart with: catalogue.
		
	cart add: 100 of: historyBook.
	cart add: 50 of: mathBook. 
	
	self assert: (cart quantityOf: historyBook) equals: 100.
	self assert: (cart quantityOf: mathBook) equals: 50.
	! !

!testRun: #CartTests #test06 stamp: 'FG 11/18/2020 18:14:09'!
PASSED!
!CartTests methodsFor: 'as yet unclassified' stamp: 'FG 11/18/2020 18:14:25' prior: 50929506!
test07

	| cart catalogue book|
	
	book := 'Book'.
	catalogue := Set with: book.
	
	cart := Cart new.
		
	cart add: 50 of: book. 
	cart add: 150 of: book.
		
	self assert: (cart quantityOf: book) equals: 200.! !
!CartTests methodsFor: 'as yet unclassified' stamp: 'FG 11/18/2020 18:14:34' prior: 50929788!
test07

	| cart catalogue book|
	
	book := 'Book'.
	catalogue := Set with: book.
	
	cart := Cart with: catalogue .
		
	cart add: 50 of: book. 
	cart add: 150 of: book.
		
	self assert: (cart quantityOf: book) equals: 200.! !
!CartTests methodsFor: 'as yet unclassified' stamp: 'FG 11/18/2020 18:15:24' prior: 50929489!
test08

	| cart catalogue mathBook historyBook|
	
	mathBook := 'MathBook'.
	historyBook := 'HistoryBook'.		
	
	catalogue := Set with: mathBook with: historyBook.
	
	cart := Cart with: catalogue.
	
	cart add: 50 of: mathBook.
		
	self assert: cart books size equals: 50.
	self assert: (cart books includes: mathBook).
	
	cart add: 100 of: historyBook.
	
	self assert: cart books size equals: 150.
	self assert: (cart books includes: historyBook).
	! !

!testRun: #CartTests #test08 stamp: 'FG 11/18/2020 18:15:27'!
PASSED!

!testRun: #CartTests #test01 stamp: 'FG 11/18/2020 18:15:29'!
PASSED!

!testRun: #CartTests #test02 stamp: 'FG 11/18/2020 18:15:29'!
PASSED!

!testRun: #CartTests #test03 stamp: 'FG 11/18/2020 18:15:29'!
PASSED!

!testRun: #CartTests #test04 stamp: 'FG 11/18/2020 18:15:29'!
PASSED!

!testRun: #CartTests #test05 stamp: 'FG 11/18/2020 18:15:29'!
PASSED!

!testRun: #CartTests #test06 stamp: 'FG 11/18/2020 18:15:29'!
PASSED!

!testRun: #CartTests #test07 stamp: 'FG 11/18/2020 18:15:29'!
PASSED!

!testRun: #CartTests #test08 stamp: 'FG 11/18/2020 18:15:29'!
PASSED!

!testRun: #CartTests #test09 stamp: 'FG 11/18/2020 18:15:29'!
PASSED!
!CartTests methodsFor: 'as yet unclassified' stamp: 'FG 11/18/2020 18:16:27' prior: 50929681!
test09

	| cart catalogue mathBook historyBook|
	
	mathBook := 'MathBook'.
	historyBook := 'HistoryBook'.	
	
	catalogue := Set with: mathBook.
	cart := Cart with: catalogue.
	
	[cart add: 100 of: historyBook. self fail]
		on: Error
		do: [:anError | self assert: anError messageText equals: Cart cantAddBooksThatAreNotInTheCatalogue. ].	
! !
!CartTests methodsFor: 'as yet unclassified' stamp: 'FG 11/18/2020 18:19:28'!
test10

	| cart catalogue historyBook|
	
	historyBook := 'HistoryBook'.	
	
	catalogue := Set new.
	cart := Cart with: catalogue.
	
	self assert: (cart quantityOf: historyBook) equals: 0. ! !

!testRun: #CartTests #test10 stamp: 'FG 11/18/2020 18:19:33'!
PASSED!

!testRun: #CartTests #test10 stamp: 'FG 11/18/2020 18:19:45'!
PASSED!

!methodRemoval: CartTests #test10 stamp: 'FG 11/18/2020 18:20:36'!
test10

	| cart catalogue historyBook|
	
	historyBook := 'HistoryBook'.	
	
	catalogue := Set new.
	cart := Cart with: catalogue.
	
	self assert: (cart quantityOf: historyBook) equals: 0. !
!Cart methodsFor: 'as yet unclassified' stamp: 'FG 11/18/2020 18:21:15' prior: 50929672!
add: aQuantity of: aBook 

	(catalogue includes: aBook) ifFalse: [self error: Cart cantAddBooksThatAreNotInTheCatalogue].
	
	^ books add: aBook withOccurrences: aQuantity.! !
!CartTests methodsFor: 'cart tests' stamp: 'FG 11/18/2020 18:24:29'!
test01NewCartShouldBeEmpty

	| cart catalogue |
	
	catalogue := Set new.
	cart := Cart with: catalogue.
	
	self assert: cart isEmpty. ! !

!methodRemoval: CartTests #test01 stamp: 'FG 11/18/2020 18:24:31'!
test01

	| cart catalogue |
	
	catalogue := Set new.
	cart := Cart with: catalogue.
	
	self assert: cart isEmpty. !
!CartTests methodsFor: 'cart tests' stamp: 'FG 11/18/2020 18:24:54'!
test02CartWithABookShouldNotBeEmpty

	| cart catalogue book |
	
	book := 'Book'.
	catalogue := Set with: book.
	
	cart := Cart with: catalogue.
	
	cart add: 10 of: book.
	
	self assert: cart isEmpty not. ! !

!methodRemoval: CartTests #test02 stamp: 'FG 11/18/2020 18:24:57'!
test02

	| cart catalogue book |
	
	book := 'Book'.
	catalogue := Set with: book.
	
	cart := Cart with: catalogue.
	
	cart add: 10 of: book.
	
	self assert: cart isEmpty not. !
!CartTests methodsFor: 'cart tests' stamp: 'FG 11/18/2020 18:25:43'!
test03CartWithABookContainsIt

	| cart catalogue book |
	
	book := 'Book'.
	catalogue := Set with: book.
	
	cart := Cart with: catalogue.
	
	self assert: (cart has: book) not.! !

!methodRemoval: CartTests #test03 stamp: 'FG 11/18/2020 18:25:45'!
test03

	| cart catalogue book |
	
	book := 'Book'.
	catalogue := Set with: book.
	
	cart := Cart with: catalogue.
	
	self assert: (cart has: book) not.!
!CartTests methodsFor: 'cart tests' stamp: 'FG 11/18/2020 18:26:17'!
test03EmptyCartDoesntHasABook

	| cart catalogue book |
	
	book := 'Book'.
	catalogue := Set with: book.
	
	cart := Cart with: catalogue.
	
	self assert: (cart has: book) not.! !

!methodRemoval: CartTests #test03CartWithABookContainsIt stamp: 'FG 11/18/2020 18:26:19'!
test03CartWithABookContainsIt

	| cart catalogue book |
	
	book := 'Book'.
	catalogue := Set with: book.
	
	cart := Cart with: catalogue.
	
	self assert: (cart has: book) not.!
!CartTests methodsFor: 'cart tests' stamp: 'FG 11/18/2020 18:26:48'!
test04CartShouldHasAddedBook

	| cart catalogue book |
	
	book := 'Book'.
	catalogue := Set with: book.
	
	cart := Cart with: catalogue.
	
	cart add: 10 of: book. 
	
	self assert: (cart has: book).! !

!methodRemoval: CartTests #test04 stamp: 'FG 11/18/2020 18:26:52'!
test04

	| cart catalogue book |
	
	book := 'Book'.
	catalogue := Set with: book.
	
	cart := Cart with: catalogue.
	
	cart add: 10 of: book. 
	
	self assert: (cart has: book).!
!CartTests methodsFor: 'cart tests' stamp: 'FG 11/18/2020 18:27:59'!
test05CartShouldNotHaveNonAddedBook

	| cart catalogue historyBook mathBook |
	
	mathBook := 'MathBook'.
	historyBook := 'HistoryBook'.
	catalogue := Set with: mathBook with: historyBook.
	
	cart := Cart with: catalogue.
	
	cart add: 10 of: historyBook. 
	
	self assert: (cart has: mathBook) not.
	! !

!methodRemoval: CartTests #test05 stamp: 'FG 11/18/2020 18:28:02'!
test05

	| cart catalogue historyBook mathBook |
	
	mathBook := 'MathBook'.
	historyBook := 'HistoryBook'.
	catalogue := Set with: mathBook with: historyBook.
	
	cart := Cart with: catalogue.
	
	cart add: 10 of: historyBook. 
	
	self assert: (cart has: mathBook) not.
	!
!CartTests methodsFor: 'cart tests' stamp: 'FG 11/18/2020 18:28:49'!
test04CartShouldHaveAddedBook

	| cart catalogue book |
	
	book := 'Book'.
	catalogue := Set with: book.
	
	cart := Cart with: catalogue.
	
	cart add: 10 of: book. 
	
	self assert: (cart has: book).! !

!methodRemoval: CartTests #test04CartShouldHasAddedBook stamp: 'FG 11/18/2020 18:28:50'!
test04CartShouldHasAddedBook

	| cart catalogue book |
	
	book := 'Book'.
	catalogue := Set with: book.
	
	cart := Cart with: catalogue.
	
	cart add: 10 of: book. 
	
	self assert: (cart has: book).!
!CartTests methodsFor: 'cart tests' stamp: 'FG 11/18/2020 18:31:53'!
test06CartShouldAnswerQuantityOfAnAddedBook

	| cart catalogue historyBook mathBook|
	
	historyBook := 'HistoryBook'.
	mathBook := 'MathBook'.
	catalogue := Set with: mathBook with: historyBook.
	
	cart := Cart with: catalogue.
		
	cart add: 100 of: historyBook.
	cart add: 50 of: mathBook. 
	
	self assert: (cart quantityOf: historyBook) equals: 100.
	self assert: (cart quantityOf: mathBook) equals: 50.
	! !

!methodRemoval: CartTests #test06 stamp: 'FG 11/18/2020 18:31:55'!
test06

	| cart catalogue historyBook mathBook|
	
	historyBook := 'HistoryBook'.
	mathBook := 'MathBook'.
	catalogue := Set with: mathBook with: historyBook.
	
	cart := Cart with: catalogue.
		
	cart add: 100 of: historyBook.
	cart add: 50 of: mathBook. 
	
	self assert: (cart quantityOf: historyBook) equals: 100.
	self assert: (cart quantityOf: mathBook) equals: 50.
	!
!CartTests methodsFor: 'cart tests' stamp: 'FG 11/18/2020 18:33:28'!
test07CartShouldProperlyAddMoreCopiesOfAnAlreadyAddedBook

	| cart catalogue book|
	
	book := 'Book'.
	catalogue := Set with: book.
	
	cart := Cart with: catalogue .
		
	cart add: 50 of: book. 
	cart add: 150 of: book.
		
	self assert: (cart quantityOf: book) equals: 200.! !

!methodRemoval: CartTests #test07 stamp: 'FG 11/18/2020 18:33:30'!
test07

	| cart catalogue book|
	
	book := 'Book'.
	catalogue := Set with: book.
	
	cart := Cart with: catalogue .
		
	cart add: 50 of: book. 
	cart add: 150 of: book.
		
	self assert: (cart quantityOf: book) equals: 200.!
!CartTests methodsFor: 'cart tests' stamp: 'FG 11/18/2020 18:34:18'!
test08CartShouldBeAbleToAnswerWhatBooksItHas

	| cart catalogue mathBook historyBook|
	
	mathBook := 'MathBook'.
	historyBook := 'HistoryBook'.		
	
	catalogue := Set with: mathBook with: historyBook.
	
	cart := Cart with: catalogue.
	
	cart add: 50 of: mathBook.
		
	self assert: cart books size equals: 50.
	self assert: (cart books includes: mathBook).
	
	cart add: 100 of: historyBook.
	
	self assert: cart books size equals: 150.
	self assert: (cart books includes: historyBook).
	! !

!methodRemoval: CartTests #test08 stamp: 'FG 11/18/2020 18:34:19'!
test08

	| cart catalogue mathBook historyBook|
	
	mathBook := 'MathBook'.
	historyBook := 'HistoryBook'.		
	
	catalogue := Set with: mathBook with: historyBook.
	
	cart := Cart with: catalogue.
	
	cart add: 50 of: mathBook.
		
	self assert: cart books size equals: 50.
	self assert: (cart books includes: mathBook).
	
	cart add: 100 of: historyBook.
	
	self assert: cart books size equals: 150.
	self assert: (cart books includes: historyBook).
	!
!CartTests methodsFor: 'cart tests' stamp: 'FG 11/18/2020 18:34:35'!
test09CartCantAddBookThatAreNotInTheCatalogue

	| cart catalogue mathBook historyBook|
	
	mathBook := 'MathBook'.
	historyBook := 'HistoryBook'.	
	
	catalogue := Set with: mathBook.
	cart := Cart with: catalogue.
	
	[cart add: 100 of: historyBook. self fail]
		on: Error
		do: [:anError | self assert: anError messageText equals: Cart cantAddBooksThatAreNotInTheCatalogue. ].	
! !

!methodRemoval: CartTests #test09 stamp: 'FG 11/18/2020 18:34:38'!
test09

	| cart catalogue mathBook historyBook|
	
	mathBook := 'MathBook'.
	historyBook := 'HistoryBook'.	
	
	catalogue := Set with: mathBook.
	cart := Cart with: catalogue.
	
	[cart add: 100 of: historyBook. self fail]
		on: Error
		do: [:anError | self assert: anError messageText equals: Cart cantAddBooksThatAreNotInTheCatalogue. ].	
!

----QUIT----(18 November 2020 18:38:32) CuisUniversity-4365.image priorSource: 19129244!