

----STARTUP---- (9 November 2020 19:29:41) as /home/pablo/Documents/Ingenieria1/cuis_portfolio2/CuisUniversity-4384.image!


----End fileIn of /home/pablo/Documents/Ingenieria1/repoNuestro/19-Portfolio2/Portfolio-Solucion.st----!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'PGTA 11/9/2020 19:44:29'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'PGTA 11/9/2020 19:44:29'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'PGTA 11/9/2020 19:44:29'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'PGTA 11/9/2020 19:44:29'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'PGTA 11/9/2020 19:44:29'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'PGTA 11/9/2020 19:44:29'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'PGTA 11/9/2020 19:44:29'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'PGTA 11/9/2020 19:44:29'!
PASSED!

!classDefinition: #Transfer category: 'Portfolio-Solucion' stamp: 'PGTA 11/9/2020 19:55:43'!
AccountTransaction subclass: #Transfer
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'PGTA 11/9/2020 19:55:06'!
test08TransferSenderAccountAcknowledgesTransferTransactions 

	| senderAccount receiverAccount transfer|
	
	senderAccount := ReceptiveAccount new.
	Deposit register: 100 on: senderAccount.
	
	receiverAccount := ReceptiveAccount new.
	
	transfer := Transfer from: senderAccount to: receiverAccount amount: 10.
		
	self assert: 90 equals: senderAccount balance.
	self assert: (senderAccount transactions includes: transfer).
! !

!testRun: #ReceptiveAccountTest #test08TransferSenderAccountAcknowledgesTransferTransactions stamp: 'PGTA 11/9/2020 19:56:16'!
ERROR!
!Transfer class methodsFor: 'as yet unclassified' stamp: 'PGTA 11/9/2020 19:56:25'!
from: aReceptiveAccount to: aReceptiveAccount2 amount: aSmallInteger 
	self shouldBeImplemented.! !
!Transfer class methodsFor: 'as yet unclassified' stamp: 'PGTA 11/9/2020 19:57:25' prior: 50868546!
from: aSenderAccount to: aReceiverAccount amount: anAmount
	self shouldBeImplemented.! !
!Transfer class methodsFor: 'as yet unclassified' stamp: 'PGTA 11/9/2020 19:59:30' prior: 50868553!
from: aSenderAccount to: aReceiverAccount amount: anAmount
	aSenderAccount register: self.! !

!testRun: #ReceptiveAccountTest #test08TransferSenderAccountAcknowledgesTransferTransactions stamp: 'PGTA 11/9/2020 19:59:34'!
ERROR!
!Transfer class methodsFor: 'as yet unclassified' stamp: 'PGTA 11/9/2020 19:59:50'!
affectBalance: aSmallInteger 
	self shouldBeImplemented.! !

!methodRemoval: Transfer class #affectBalance: stamp: 'PGTA 11/9/2020 20:05:03'!
affectBalance: aSmallInteger 
	self shouldBeImplemented.!
!Transfer class methodsFor: 'as yet unclassified' stamp: 'PGTA 11/9/2020 20:06:30' prior: 50868559!
from: aSenderAccount to: aReceiverAccount amount: anAmount
	self new initializeFrom: aSenderAccount to: aReceiverAccount amount: anAmount.! !
!Transfer methodsFor: 'no messages' stamp: 'PGTA 11/9/2020 20:06:58'!
initializeFrom: aSenderAccount
	aSenderAccount register: self.! !
!Transfer methodsFor: 'as yet unclassified' stamp: 'PGTA 11/9/2020 20:07:29'!
initializeFrom: aSenderAccount  to: aReceiverAccount amount: anAmount
	
	aSenderAccount register: self.! !

!methodRemoval: Transfer #initializeFrom: stamp: 'PGTA 11/9/2020 20:07:36'!
initializeFrom: aSenderAccount
	aSenderAccount register: self.!

!testRun: #ReceptiveAccountTest #test08TransferSenderAccountAcknowledgesTransferTransactions stamp: 'PGTA 11/9/2020 20:07:43'!
ERROR!
!Transfer methodsFor: 'as yet unclassified' stamp: 'PGTA 11/9/2020 20:07:54' overrides: 50868388!
affectBalance: aSmallInteger 
	self shouldBeImplemented.! !

!classDefinition: #Transfer category: 'Portfolio-Solucion' stamp: 'PGTA 11/9/2020 20:09:20'!
AccountTransaction subclass: #Transfer
	instanceVariableNames: 'value'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!
!Transfer methodsFor: 'as yet unclassified' stamp: 'PGTA 11/9/2020 20:09:15' prior: 50868607 overrides: 50868388!
affectBalance: aBalance 
	^aBalance - value.! !

!testRun: #ReceptiveAccountTest #test08TransferSenderAccountAcknowledgesTransferTransactions stamp: 'PGTA 11/9/2020 20:09:23'!
ERROR!
!Transfer methodsFor: 'as yet unclassified' stamp: 'PGTA 11/9/2020 20:10:17' prior: 50868591!
initializeFrom: aSenderAccount  to: aReceiverAccount amount: anAmount
	
	value :=  anAmount.
	aSenderAccount register: self.! !

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'PGTA 11/9/2020 20:10:22'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'PGTA 11/9/2020 20:10:22'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'PGTA 11/9/2020 20:10:22'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'PGTA 11/9/2020 20:10:22'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'PGTA 11/9/2020 20:10:22'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'PGTA 11/9/2020 20:10:22'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'PGTA 11/9/2020 20:10:22'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'PGTA 11/9/2020 20:10:22'!
PASSED!

!testRun: #ReceptiveAccountTest #test08TransferSenderAccountAcknowledgesTransferTransactions stamp: 'PGTA 11/9/2020 20:10:22'!
FAILURE!

!testRun: #ReceptiveAccountTest #test08TransferSenderAccountAcknowledgesTransferTransactions stamp: 'PGTA 11/9/2020 20:10:22'!
FAILURE!

!testRun: #ReceptiveAccountTest #test08TransferSenderAccountAcknowledgesTransferTransactions stamp: 'PGTA 11/9/2020 20:11:56'!
FAILURE!

!testRun: #ReceptiveAccountTest #test08TransferSenderAccountAcknowledgesTransferTransactions stamp: 'PGTA 11/9/2020 20:14:29'!
FAILURE!

senderAccount transactions!

senderAccount transactions includes: transfer!

transfer!

Transfer from: senderAccount to: receiverAccount amount: 10!
!Transfer class methodsFor: 'as yet unclassified' stamp: 'PGTA 11/9/2020 20:18:07' prior: 50868579!
from: aSenderAccount to: aReceiverAccount amount: anAmount
	^self new initializeFrom: aSenderAccount to: aReceiverAccount amount: anAmount.! !

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'PGTA 11/9/2020 20:18:21'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'PGTA 11/9/2020 20:18:21'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'PGTA 11/9/2020 20:18:21'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'PGTA 11/9/2020 20:18:21'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'PGTA 11/9/2020 20:18:21'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'PGTA 11/9/2020 20:18:21'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'PGTA 11/9/2020 20:18:21'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'PGTA 11/9/2020 20:18:21'!
PASSED!

!testRun: #ReceptiveAccountTest #test08TransferSenderAccountAcknowledgesTransferTransactions stamp: 'PGTA 11/9/2020 20:18:21'!
PASSED!
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'PGTA 11/9/2020 20:19:43'!
test09TransferReceiverAccountAcknowledgesTransferTransactions 

	| senderAccount receiverAccount transfer|
	
	senderAccount := ReceptiveAccount new.
	Deposit register: 100 on: senderAccount.
	
	receiverAccount := ReceptiveAccount new.
	
	transfer := Transfer from: senderAccount to: receiverAccount amount: 10.
		
	self assert: 10 equals: receiverAccount balance.
	self assert: (receiverAccount transactions includes: transfer).
! !

!testRun: #ReceptiveAccountTest #test09TransferReceiverAccountAcknowledgesTransferTransactions stamp: 'PGTA 11/9/2020 20:19:43'!
FAILURE!
!Transfer methodsFor: 'as yet unclassified' stamp: 'PGTA 11/9/2020 20:21:08' prior: 50868630!
initializeFrom: aSenderAccount  to: aReceiverAccount amount: anAmount
	
	value :=  anAmount.
	aSenderAccount register: self.
	aReceiverAccount register: self.! !

!testRun: #ReceptiveAccountTest #test09TransferReceiverAccountAcknowledgesTransferTransactions stamp: 'PGTA 11/9/2020 20:21:10'!
FAILURE!

AccountTransaction subclass: #Transfer
	instanceVariableNames: 'value sender receiver'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #Transfer category: 'Portfolio-Solucion' stamp: 'PGTA 11/9/2020 20:25:10'!
AccountTransaction subclass: #Transfer
	instanceVariableNames: 'value sender receiver'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!
!Transfer methodsFor: 'as yet unclassified' stamp: 'PGTA 11/9/2020 20:25:51' prior: 50868753!
initializeFrom: aSenderAccount  to: aReceiverAccount amount: anAmount
	
	value :=  anAmount.
	sender := aSenderAccount .
	receiver := aReceiverAccount.
	aSenderAccount register: self.
	aReceiverAccount register: self.! !
!ReceptiveAccount methodsFor: 'balance' stamp: 'PGTA 11/9/2020 20:29:12' prior: 50868349 overrides: 50868154!
balance

	^transactions 
		inject: 0
		"into: [ :currentBalance :transaction | transaction affectBalance: currentBalance ]"
		into: [ :currentBalance :transaction | (transaction isKindOf: Transfer) ifTrue: [transaction affectBalance: currentBalance for: self] ifFalse: [transaction affectBalance: currentBalance] ]! !

!testRun: #ReceptiveAccountTest #test09TransferReceiverAccountAcknowledgesTransferTransactions stamp: 'PGTA 11/9/2020 20:29:22'!
ERROR!
!Transfer methodsFor: 'as yet unclassified' stamp: 'PGTA 11/9/2020 20:29:32'!
affectBalance: aSmallInteger for: aReceptiveAccount 
	self shouldBeImplemented.! !
!Transfer methodsFor: 'as yet unclassified' stamp: 'PGTA 11/9/2020 20:29:40' prior: 50868807!
affectBalance: aSmallInteger for: anAccount 
	self shouldBeImplemented.! !
!Transfer methodsFor: 'as yet unclassified' stamp: 'PGTA 11/9/2020 20:31:58' prior: 50868813!
affectBalance: aBalance for: anAccount 
	anAccount = sender ifTrue: [^aBalance - value].
	anAccount = receiver ifTrue: [^aBalance + value].! !

!testRun: #ReceptiveAccountTest #test09TransferReceiverAccountAcknowledgesTransferTransactions stamp: 'PGTA 11/9/2020 20:32:02'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'PGTA 11/9/2020 20:32:02'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'PGTA 11/9/2020 20:32:02'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'PGTA 11/9/2020 20:32:02'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'PGTA 11/9/2020 20:32:02'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'PGTA 11/9/2020 20:32:02'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'PGTA 11/9/2020 20:32:02'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'PGTA 11/9/2020 20:32:02'!
PASSED!

!testRun: #ReceptiveAccountTest #test08TransferSenderAccountAcknowledgesTransferTransactions stamp: 'PGTA 11/9/2020 20:32:02'!
PASSED!

!testRun: #ReceptiveAccountTest #test09TransferReceiverAccountAcknowledgesTransferTransactions stamp: 'PGTA 11/9/2020 20:32:02'!
PASSED!

!testRun: #ReceptiveAccountTest #test09TransferReceiverAccountAcknowledgesTransferTransactions stamp: 'PGTA 11/9/2020 20:58:47'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'PGTA 11/9/2020 20:58:47'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'PGTA 11/9/2020 20:58:47'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'PGTA 11/9/2020 20:58:47'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'PGTA 11/9/2020 20:58:47'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'PGTA 11/9/2020 20:58:47'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'PGTA 11/9/2020 20:58:47'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'PGTA 11/9/2020 20:58:47'!
PASSED!

!testRun: #ReceptiveAccountTest #test08TransferSenderAccountAcknowledgesTransferTransactions stamp: 'PGTA 11/9/2020 20:58:47'!
PASSED!

!testRun: #ReceptiveAccountTest #test09TransferReceiverAccountAcknowledgesTransferTransactions stamp: 'PGTA 11/9/2020 20:58:47'!
PASSED!
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'PGTA 11/9/2020 21:04:37' prior: 50868732!
test09TransferReceiverAccountAcknowledgesTransferTransactions 

	| senderAccount receiverAccount transfer |
	
	senderAccount := ReceptiveAccount new.
	Deposit register: 100 on: senderAccount.
	
	receiverAccount := ReceptiveAccount new.
	
	transfer := Transfer from: senderAccount to: receiverAccount amount: 10.
		
	self assert: 10 equals: receiverAccount balance.
	self assert: (receiverAccount transactions includes: transfer).
! !

Object subclass: #Transfer
	instanceVariableNames: 'value sender receiver'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #Transfer category: 'Portfolio-Solucion' stamp: 'PGTA 11/9/2020 21:06:38'!
Object subclass: #Transfer
	instanceVariableNames: 'value sender receiver'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'PGTA 11/9/2020 21:06:45'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'PGTA 11/9/2020 21:06:45'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'PGTA 11/9/2020 21:06:45'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'PGTA 11/9/2020 21:06:45'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'PGTA 11/9/2020 21:06:45'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'PGTA 11/9/2020 21:06:45'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'PGTA 11/9/2020 21:06:45'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'PGTA 11/9/2020 21:06:45'!
PASSED!

!testRun: #ReceptiveAccountTest #test08TransferSenderAccountAcknowledgesTransferTransactions stamp: 'PGTA 11/9/2020 21:06:45'!
PASSED!

!testRun: #ReceptiveAccountTest #test09TransferReceiverAccountAcknowledgesTransferTransactions stamp: 'PGTA 11/9/2020 21:06:45'!
PASSED!

!methodRemoval: Transfer #affectBalance: stamp: 'PGTA 11/9/2020 21:07:06'!
affectBalance: aBalance 
	^aBalance - value.!
!ReceptiveAccount methodsFor: 'balance' stamp: 'PGTA 11/9/2020 21:07:25' prior: 50868790 overrides: 50868154!
balance

	^transactions 
		inject: 0
		"into: [ :currentBalance :transaction | transaction affectBalance: currentBalance ]"
		into: [ :currentBalance :transaction | (transaction isKindOf: Transfer)
			ifTrue: [transaction affectBalance: currentBalance for: self]
			ifFalse: [transaction affectBalance: currentBalance] ]! !

AccountTransaction subclass: #TransferTransactions
	instanceVariableNames: 'value'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #TransferTransactions category: 'Portfolio-Solucion' stamp: 'PGTA 11/9/2020 21:10:24'!
AccountTransaction subclass: #TransferTransactions
	instanceVariableNames: 'value'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

TransferTransactions subclass: #TransferDeposit
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #TransferDeposit category: 'Portfolio-Solucion' stamp: 'PGTA 11/9/2020 21:10:56'!
TransferTransactions subclass: #TransferDeposit
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

TransferTransactions subclass: #TransferWithdraw
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #TransferWithdraw category: 'Portfolio-Solucion' stamp: 'PGTA 11/9/2020 21:11:14'!
TransferTransactions subclass: #TransferWithdraw
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

Deposit subclass: #TransferDeposit
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #TransferDeposit category: 'Portfolio-Solucion' stamp: 'PGTA 11/9/2020 21:14:03'!
Deposit subclass: #TransferDeposit
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

Withdraw subclass: #TransferWithdraw
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #TransferWithdraw category: 'Portfolio-Solucion' stamp: 'PGTA 11/9/2020 21:14:13'!
Withdraw subclass: #TransferWithdraw
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classRemoval: #TransferTransactions stamp: 'PGTA 11/9/2020 21:14:27'!
AccountTransaction subclass: #TransferTransactions
	instanceVariableNames: 'value'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!
!Transfer methodsFor: 'as yet unclassified' stamp: 'PGTA 11/9/2020 21:16:18' prior: 50868779!
initializeFrom: aSenderAccount  to: aReceiverAccount amount: anAmount
	
	value :=  anAmount.
	sender := aSenderAccount .
	receiver := aReceiverAccount.
	aSenderAccount register: self.
	aReceiverAccount register: self.! !
!Transfer class methodsFor: 'as yet unclassified' stamp: 'PGTA 11/9/2020 21:19:08' prior: 50868690!
from: aSenderAccount to: aReceiverAccount amount: anAmount
	"^self new initializeFrom: aSenderAccount to: aReceiverAccount amount: anAmount."
	
	TransferDeposit register: anAmount on: aReceiverAccount.
	TransferWithdraw register: anAmount on: aSenderAccount.! !

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'PGTA 11/9/2020 21:19:16'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'PGTA 11/9/2020 21:19:16'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'PGTA 11/9/2020 21:19:16'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'PGTA 11/9/2020 21:19:16'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'PGTA 11/9/2020 21:19:16'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'PGTA 11/9/2020 21:19:16'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'PGTA 11/9/2020 21:19:16'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'PGTA 11/9/2020 21:19:16'!
PASSED!

!testRun: #ReceptiveAccountTest #test08TransferSenderAccountAcknowledgesTransferTransactions stamp: 'PGTA 11/9/2020 21:19:16'!
FAILURE!

!testRun: #ReceptiveAccountTest #test09TransferReceiverAccountAcknowledgesTransferTransactions stamp: 'PGTA 11/9/2020 21:19:16'!
FAILURE!

Object subclass: #Transfer
	instanceVariableNames: 'value deposit withdraw'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #Transfer category: 'Portfolio-Solucion' stamp: 'PGTA 11/9/2020 21:20:57'!
Object subclass: #Transfer
	instanceVariableNames: 'value deposit withdraw'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

Object subclass: #Transfer
	instanceVariableNames: 'deposit withdraw'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #Transfer category: 'Portfolio-Solucion' stamp: 'PGTA 11/9/2020 21:21:12'!
Object subclass: #Transfer
	instanceVariableNames: 'deposit withdraw'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!methodRemoval: Transfer #affectBalance:for: stamp: 'PGTA 11/9/2020 21:21:20'!
affectBalance: aBalance for: anAccount 
	anAccount = sender ifTrue: [^aBalance - value].
	anAccount = receiver ifTrue: [^aBalance + value].!
!Transfer class methodsFor: 'as yet unclassified' stamp: 'PGTA 11/9/2020 21:21:45' prior: 50869074!
from: aSenderAccount to: aReceiverAccount amount: anAmount
	^self new initializeFrom: aSenderAccount to: aReceiverAccount amount: anAmount.
	
	! !
!Transfer methodsFor: 'as yet unclassified' stamp: 'PGTA 11/9/2020 21:22:23' prior: 50869063!
initializeFrom: aSenderAccount  to: aReceiverAccount amount: anAmount
	
	deposit := TransferDeposit register: anAmount on: aReceiverAccount.
	withdraw := TransferWithdraw register: anAmount on: aSenderAccount.! !
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'PGTA 11/9/2020 21:27:02' prior: 50868525!
test08TransferSenderAccountAcknowledgesTransferTransactions 

	| senderAccount receiverAccount transfer|
	
	senderAccount := ReceptiveAccount new.
	Deposit register: 100 on: senderAccount.
	
	receiverAccount := ReceptiveAccount new.
	
	transfer := Transfer from: senderAccount to: receiverAccount amount: 10.
		
	self assert: 90 equals: senderAccount balance.
	self assert: (senderAccount hasRegistered: transfer).
! !
!ReceptiveAccount methodsFor: 'balance' stamp: 'PGTA 11/9/2020 21:30:32' prior: 50868979 overrides: 50868154!
balance

	^transactions 
		inject: 0
		into: [ :currentBalance :transaction | transaction affectBalance: currentBalance ]
		! !

!testRun: #ReceptiveAccountTest #test08TransferSenderAccountAcknowledgesTransferTransactions stamp: 'PGTA 11/9/2020 21:30:47'!
FAILURE!
!Transfer methodsFor: 'as yet unclassified' stamp: 'PGTA 11/9/2020 21:31:24'!
deposit
	
	^deposit.! !
!Transfer methodsFor: 'as yet unclassified' stamp: 'PGTA 11/9/2020 21:31:42'!
withdraw
	
	^withdraw.! !
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'PGTA 11/9/2020 21:32:03' prior: 50869175!
test08TransferSenderAccountAcknowledgesTransferTransactions 

	| senderAccount receiverAccount transfer|
	
	senderAccount := ReceptiveAccount new.
	Deposit register: 100 on: senderAccount.
	
	receiverAccount := ReceptiveAccount new.
	
	transfer := Transfer from: senderAccount to: receiverAccount amount: 10.
		
	self assert: 90 equals: senderAccount balance.
	self assert: (senderAccount hasRegistered: (transfer withdraw)).
! !
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'PGTA 11/9/2020 21:32:22' prior: 50868906!
test09TransferReceiverAccountAcknowledgesTransferTransactions 

	| senderAccount receiverAccount transfer |
	
	senderAccount := ReceptiveAccount new.
	Deposit register: 100 on: senderAccount.
	
	receiverAccount := ReceptiveAccount new.
	
	transfer := Transfer from: senderAccount to: receiverAccount amount: 10.
		
	self assert: 10 equals: receiverAccount balance.
	self assert: (receiverAccount hasRegistered: (transfer deposit) ).
! !

!testRun: #ReceptiveAccountTest #test09TransferReceiverAccountAcknowledgesTransferTransactions stamp: 'PGTA 11/9/2020 21:32:25'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'PGTA 11/9/2020 21:32:25'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'PGTA 11/9/2020 21:32:25'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'PGTA 11/9/2020 21:32:25'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'PGTA 11/9/2020 21:32:25'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'PGTA 11/9/2020 21:32:25'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'PGTA 11/9/2020 21:32:25'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'PGTA 11/9/2020 21:32:25'!
PASSED!

!testRun: #ReceptiveAccountTest #test08TransferSenderAccountAcknowledgesTransferTransactions stamp: 'PGTA 11/9/2020 21:32:25'!
PASSED!

!testRun: #ReceptiveAccountTest #test09TransferReceiverAccountAcknowledgesTransferTransactions stamp: 'PGTA 11/9/2020 21:32:25'!
PASSED!
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'PGTA 11/9/2020 21:40:48'!
test10TransferDepositCanNavigateToTransferAndTransferWithdraw

	| senderAccount receiverAccount transfer deposit withdraw |
	
	senderAccount := ReceptiveAccount new.
	Deposit register: 100 on: senderAccount.
	
	receiverAccount := ReceptiveAccount new.
	
	transfer := Transfer from: senderAccount to: receiverAccount amount: 10.
	
	deposit := transfer deposit.
	withdraw  := transfer withdraw.
	
	self assert: transfer equals: deposit transfer.
	self assert: withdraw equals: deposit transfer withdraw.
! !

!testRun: #ReceptiveAccountTest #test10TransferDepositCanNavigateToTransferAndTransferWithdraw stamp: 'PGTA 11/9/2020 21:40:52'!
ERROR!
!TransferDeposit methodsFor: 'as yet unclassified' stamp: 'PGTA 11/9/2020 21:40:58'!
transfer
	self shouldBeImplemented.! !

!classDefinition: #TransferDeposit category: 'Portfolio-Solucion' stamp: 'PGTA 11/9/2020 21:41:08'!
Deposit subclass: #TransferDeposit
	instanceVariableNames: 'transfer'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!
!TransferDeposit methodsFor: 'as yet unclassified' stamp: 'PGTA 11/9/2020 21:41:06' prior: 50869307!
transfer
	^transfer! !

!testRun: #ReceptiveAccountTest #test10TransferDepositCanNavigateToTransferAndTransferWithdraw stamp: 'PGTA 11/9/2020 21:41:19'!
FAILURE!

!testRun: #ReceptiveAccountTest #test10TransferDepositCanNavigateToTransferAndTransferWithdraw stamp: 'PGTA 11/9/2020 21:41:28'!
FAILURE!

!testRun: #ReceptiveAccountTest #test10TransferDepositCanNavigateToTransferAndTransferWithdraw stamp: 'PGTA 11/9/2020 22:22:28'!
FAILURE!
!Transfer methodsFor: 'as yet unclassified' stamp: 'PGTA 11/9/2020 22:27:23' prior: 50869165!
initializeFrom: aSenderAccount to: aReceiverAccount amount: anAmount
	
	deposit := TransferDeposit register: anAmount on: aReceiverAccount.
	withdraw := TransferWithdraw register: anAmount on: aSenderAccount.! !

AccountTransaction subclass: #TransferTransaction
	instanceVariableNames: 'transfer'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #TransferTransaction category: 'Portfolio-Solucion' stamp: 'PGTA 11/9/2020 22:34:05'!
AccountTransaction subclass: #TransferTransaction
	instanceVariableNames: 'transfer'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

TransferTransaction subclass: #TransferDeposit
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #TransferDeposit category: 'Portfolio-Solucion' stamp: 'PGTA 11/9/2020 22:34:23'!
TransferTransaction subclass: #TransferDeposit
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

TransferTransaction subclass: #TransferWithdraw
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #TransferWithdraw category: 'Portfolio-Solucion' stamp: 'PGTA 11/9/2020 22:34:40'!
TransferTransaction subclass: #TransferWithdraw
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!
!TransferDeposit methodsFor: 'as yet unclassified' stamp: 'PGTA 11/9/2020 22:35:36' overrides: 50868388!
affectBalance: aBalance

	^aBalance + transfer value.! !

Object subclass: #Transfer
	instanceVariableNames: 'deposit withdraw value'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #Transfer category: 'Portfolio-Solucion' stamp: 'PGTA 11/9/2020 22:36:10'!
Object subclass: #Transfer
	instanceVariableNames: 'deposit withdraw value'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!testRun: #ReceptiveAccountTest #test09TransferReceiverAccountAcknowledgesTransferTransactions stamp: 'PGTA 11/9/2020 22:36:55'!
ERROR!

!testRun: #ReceptiveAccountTest #test09TransferReceiverAccountAcknowledgesTransferTransactions stamp: 'PGTA 11/9/2020 22:37:18'!
ERROR!
!Transfer methodsFor: 'as yet unclassified' stamp: 'PGTA 11/9/2020 22:38:50' prior: 50869337!
initializeFrom: aSenderAccount to: aReceiverAccount amount: anAmount
	
	deposit := TransferDeposit register: anAmount on: aReceiverAccount for: self.
	withdraw := TransferWithdraw register: anAmount on: aSenderAccount for: self.! !
!TransferTransaction class methodsFor: 'nil' stamp: 'PGTA 11/9/2020 22:40:30'!
register: anAmount on: aReceiverAccount for: aTransfer.
	
	! !
!TransferTransaction class methodsFor: 'as yet unclassified' stamp: 'PGTA 11/9/2020 22:42:58' prior: 50869423!
register: anAmount on: aReceiverAccount for: aTransfer
	
	^self new initializeWith: anAmount on: aReceiverAccount for: aTransfer.
	! !
!TransferTransaction methodsFor: 'no messages' stamp: 'PGTA 11/9/2020 22:44:42'!
initializeWith: anAmount on: aReceiverAccount for: aTransfer

	transfer := aTransfer.
	self register: anAmount on: aReceiverAccount.! !

!testRun: #ReceptiveAccountTest #test09TransferReceiverAccountAcknowledgesTransferTransactions stamp: 'PGTA 11/9/2020 22:45:04'!
ERROR!

!testRun: #ReceptiveAccountTest #test09TransferReceiverAccountAcknowledgesTransferTransactions stamp: 'PGTA 11/9/2020 22:45:04'!
ERROR!
!TransferTransaction methodsFor: 'as yet unclassified' stamp: 'PGTA 11/9/2020 22:47:44' prior: 50869436!
initializeWith: anAmount on: aReceiverAccount for: aTransfer

	transfer := aTransfer.
	aReceiverAccount register: self.! !
!Transfer methodsFor: 'as yet unclassified' stamp: 'PGTA 11/9/2020 22:49:08' prior: 50869413!
initializeFrom: aSenderAccount to: aReceiverAccount amount: anAmount
	
	value := anAmount.
	deposit := TransferDeposit register: anAmount on: aReceiverAccount for: self.
	withdraw := TransferWithdraw register: anAmount on: aSenderAccount for: self.! !
!TransferTransaction methodsFor: 'as yet unclassified' stamp: 'PGTA 11/9/2020 22:50:49'!
initializeOn: aReceiverAccount for: aTransfer

	transfer := aTransfer.
	aReceiverAccount register: self.! !

!methodRemoval: TransferTransaction #initializeWith:on:for: stamp: 'PGTA 11/9/2020 22:50:55'!
initializeWith: anAmount on: aReceiverAccount for: aTransfer

	transfer := aTransfer.
	aReceiverAccount register: self.!
!TransferTransaction class methodsFor: 'as yet unclassified' stamp: 'PGTA 11/9/2020 22:51:15'!
registerOn: aReceiverAccount for: aTransfer
	
	^self new initializeOn: aReceiverAccount for: aTransfer.
	! !

!methodRemoval: TransferTransaction class #register:on:for: stamp: 'PGTA 11/9/2020 22:51:20'!
register: anAmount on: aReceiverAccount for: aTransfer
	
	^self new initializeWith: anAmount on: aReceiverAccount for: aTransfer.
	!
!Transfer methodsFor: 'as yet unclassified' stamp: 'PGTA 11/9/2020 22:51:42' prior: 50869460!
initializeFrom: aSenderAccount to: aReceiverAccount amount: anAmount
	
	value := anAmount.
	deposit := TransferDeposit registerOn: aReceiverAccount for: self.
	withdraw := TransferWithdraw registerOn: aSenderAccount for: self.! !

!testRun: #ReceptiveAccountTest #test08TransferSenderAccountAcknowledgesTransferTransactions stamp: 'PGTA 11/9/2020 22:51:49'!
ERROR!

!testRun: #ReceptiveAccountTest #test08TransferSenderAccountAcknowledgesTransferTransactions stamp: 'PGTA 11/9/2020 22:51:49'!
ERROR!
!TransferWithdraw methodsFor: 'nil' stamp: 'PGTA 11/9/2020 22:52:13' overrides: 50868388!
affectBalance: aBalance

	^aBalance - transfer value.! !

!testRun: #ReceptiveAccountTest #test08TransferSenderAccountAcknowledgesTransferTransactions stamp: 'PGTA 11/9/2020 22:52:52'!
ERROR!
!Transfer methodsFor: 'as yet unclassified' stamp: 'PGTA 11/9/2020 22:54:56' overrides: 16881508!
value
	^value.! !

!testRun: #ReceptiveAccountTest #test08TransferSenderAccountAcknowledgesTransferTransactions stamp: 'PGTA 11/9/2020 22:55:01'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'PGTA 11/9/2020 22:55:01'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'PGTA 11/9/2020 22:55:01'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'PGTA 11/9/2020 22:55:01'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'PGTA 11/9/2020 22:55:01'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'PGTA 11/9/2020 22:55:01'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'PGTA 11/9/2020 22:55:01'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'PGTA 11/9/2020 22:55:01'!
PASSED!

!testRun: #ReceptiveAccountTest #test08TransferSenderAccountAcknowledgesTransferTransactions stamp: 'PGTA 11/9/2020 22:55:01'!
PASSED!

!testRun: #ReceptiveAccountTest #test09TransferReceiverAccountAcknowledgesTransferTransactions stamp: 'PGTA 11/9/2020 22:55:01'!
PASSED!

!testRun: #ReceptiveAccountTest #test10TransferDepositCanNavigateToTransferAndTransferWithdraw stamp: 'PGTA 11/9/2020 22:55:01'!
PASSED!

----SNAPSHOT----(9 November 2020 22:55:16) CuisUniversity-4384.image priorSource: 17155564!

----QUIT----(9 November 2020 22:56:31) CuisUniversity-4384.image priorSource: 17213580!

----STARTUP---- (10 November 2020 21:03:20) as C:\Users\paujimenez\Documents\Ingenieria1\cuisWindows64\19-windows64-Portfolio2\CuisUniversity-4384.image!


----End fileIn of C:\Users\paujimenez\Documents\Ingenieria1\IS1-2c-2020\19-Portfolio2\Portfolio-Solucion.st----!

!testRun: #ReceptiveAccountTest #test10TransferDepositCanNavigateToTransferAndTransferWithdraw stamp: 'PJ 11/10/2020 21:07:48'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'PJ 11/10/2020 21:07:48'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'PJ 11/10/2020 21:07:48'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'PJ 11/10/2020 21:07:48'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'PJ 11/10/2020 21:07:48'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'PJ 11/10/2020 21:07:48'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'PJ 11/10/2020 21:07:48'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'PJ 11/10/2020 21:07:48'!
PASSED!

!testRun: #ReceptiveAccountTest #test08TransferSenderAccountAcknowledgesTransferTransactions stamp: 'PJ 11/10/2020 21:07:48'!
PASSED!

!testRun: #ReceptiveAccountTest #test09TransferReceiverAccountAcknowledgesTransferTransactions stamp: 'PJ 11/10/2020 21:07:48'!
PASSED!

!testRun: #ReceptiveAccountTest #test10TransferDepositCanNavigateToTransferAndTransferWithdraw stamp: 'PJ 11/10/2020 21:07:48'!
PASSED!
!ReceptiveAccountTest methodsFor: 'transfer tests' stamp: 'PJ 11/10/2020 21:16:10'!
test10TransferDepositAndWithdrawCanNavigateToTransfer

	| senderAccount receiverAccount transfer deposit withdraw |
	
	senderAccount := ReceptiveAccount new.
	Deposit register: 100 on: senderAccount.
	
	receiverAccount := ReceptiveAccount new.
	
	transfer := Transfer from: senderAccount to: receiverAccount amount: 10.
	
	deposit := transfer deposit.
	withdraw  := transfer withdraw.
	
	self assert: transfer equals: deposit transfer.
	self assert: transfer equals: withdraw transfer.
! !

!methodRemoval: ReceptiveAccountTest #test10TransferDepositCanNavigateToTransferAndTransferWithdraw stamp: 'PJ 11/10/2020 21:16:21'!
test10TransferDepositCanNavigateToTransferAndTransferWithdraw

	| senderAccount receiverAccount transfer deposit withdraw |
	
	senderAccount := ReceptiveAccount new.
	Deposit register: 100 on: senderAccount.
	
	receiverAccount := ReceptiveAccount new.
	
	transfer := Transfer from: senderAccount to: receiverAccount amount: 10.
	
	deposit := transfer deposit.
	withdraw  := transfer withdraw.
	
	self assert: transfer equals: deposit transfer.
	self assert: withdraw equals: deposit transfer withdraw.
!
!ReceptiveAccountTest methodsFor: 'transfer tests' stamp: 'PJ 11/10/2020 21:16:50' prior: 50868142!
test08TransferSenderAccountAcknowledgesTransferTransactions 

	| senderAccount receiverAccount transfer|
	
	senderAccount := ReceptiveAccount new.
	Deposit register: 100 on: senderAccount.
	
	receiverAccount := ReceptiveAccount new.
	
	transfer := Transfer from: senderAccount to: receiverAccount amount: 10.
		
	self assert: 90 equals: senderAccount balance.
	self assert: (senderAccount hasRegistered: (transfer withdraw)).
! !
!ReceptiveAccountTest methodsFor: 'transfer tests' stamp: 'PJ 11/10/2020 21:17:27' prior: 50868159!
test09TransferReceiverAccountAcknowledgesTransferTransactions 

	| senderAccount receiverAccount transfer |
	
	senderAccount := ReceptiveAccount new.
	Deposit register: 100 on: senderAccount.
	
	receiverAccount := ReceptiveAccount new.
	
	transfer := Transfer from: senderAccount to: receiverAccount amount: 10.
		
	self assert: 10 equals: receiverAccount balance.
	self assert: (receiverAccount hasRegistered: (transfer deposit) ).
! !

!testRun: #ReceptiveAccountTest #test10TransferDepositAndWithdrawCanNavigateToTransfer stamp: 'PJ 11/10/2020 21:17:34'!
ERROR!
!TransferWithdraw methodsFor: 'as yet unclassified' stamp: 'PJ 11/10/2020 21:17:48'!
transfer
	self shouldBeImplemented.! !
!TransferWithdraw methodsFor: 'as yet unclassified' stamp: 'PJ 11/10/2020 21:18:08' prior: 50868800!
transfer
	^transfer! !

!testRun: #ReceptiveAccountTest #test10TransferDepositAndWithdrawCanNavigateToTransfer stamp: 'PJ 11/10/2020 21:18:13'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'PJ 11/10/2020 21:18:13'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'PJ 11/10/2020 21:18:13'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'PJ 11/10/2020 21:18:13'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'PJ 11/10/2020 21:18:13'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'PJ 11/10/2020 21:18:13'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'PJ 11/10/2020 21:18:13'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'PJ 11/10/2020 21:18:13'!
PASSED!

!testRun: #ReceptiveAccountTest #test08TransferSenderAccountAcknowledgesTransferTransactions stamp: 'PJ 11/10/2020 21:18:13'!
PASSED!

!testRun: #ReceptiveAccountTest #test09TransferReceiverAccountAcknowledgesTransferTransactions stamp: 'PJ 11/10/2020 21:18:13'!
PASSED!

!testRun: #ReceptiveAccountTest #test10TransferDepositAndWithdrawCanNavigateToTransfer stamp: 'PJ 11/10/2020 21:18:13'!
PASSED!
!TransferTransaction methodsFor: 'as yet unclassified' stamp: 'PJ 11/10/2020 21:19:11'!
transfer
	^transfer! !

!methodRemoval: TransferDeposit #transfer stamp: 'PJ 11/10/2020 21:19:31'!
transfer
	^transfer!

!methodRemoval: TransferWithdraw #transfer stamp: 'PJ 11/10/2020 21:19:36'!
transfer
	^transfer!
!TransferWithdraw methodsFor: 'as yet unclassified' stamp: 'PJ 11/10/2020 21:19:54' prior: 50868581 overrides: 50868449!
affectBalance: aBalance

	^aBalance - transfer value.! !
!TransferDeposit methodsFor: 'as yet unclassified' stamp: 'PJ 11/10/2020 21:20:14' prior: 50868559 overrides: 50868449!
affectBalance: aBalance

	^aBalance + transfer value.! !
!TransferTransaction methodsFor: 'as yet unclassified' stamp: 'PJ 11/10/2020 21:20:23' prior: 50868523!
initializeOn: aReceiverAccount for: aTransfer

	transfer := aTransfer.
	aReceiverAccount register: self.! !

!testRun: #PortfolioTest #test09PortfolioTransactionsAreCalculatedRecursively stamp: 'PJ 11/10/2020 21:25:27'!
PASSED!

!testRun: #PortfolioTest #test01BalanceOfPortfolioWithoutAccountsIsZero stamp: 'PJ 11/10/2020 21:25:27'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithOneAccountIsAccountBalance stamp: 'PJ 11/10/2020 21:25:27'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioIsCalculatedRecursivelyOnPortfolios stamp: 'PJ 11/10/2020 21:25:27'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithoutAccountsHasNoRegisteredTransaction stamp: 'PJ 11/10/2020 21:25:27'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredItsAccountsTransactions stamp: 'PJ 11/10/2020 21:25:27'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioLooksForRegisteredTransactionsRecursively stamp: 'PJ 11/10/2020 21:25:27'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioHasNoTransactionWhenHasNoAccounts stamp: 'PJ 11/10/2020 21:25:27'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTransactionsIncludesAllItsAccountsTransactions stamp: 'PJ 11/10/2020 21:25:27'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioTransactionsAreCalculatedRecursively stamp: 'PJ 11/10/2020 21:25:27'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCanNotIncludeTheSameAccountMoreThanOnce stamp: 'PJ 11/10/2020 21:25:27'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCanNotIncludeAccountOfItsPortfolios stamp: 'PJ 11/10/2020 21:25:27'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioCanNotIncludeItself stamp: 'PJ 11/10/2020 21:25:27'!
PASSED!

!testRun: #PortfolioTest #test13ComposedPortfolioCanNotHaveParentPortfolioAccount stamp: 'PJ 11/10/2020 21:25:27'!
PASSED!

!testRun: #PortfolioTest #test14ComposedPortfolioCanNotHaveAccountOfAnyRootParentRecursively stamp: 'PJ 11/10/2020 21:25:27'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotIncludeAnyOfTheComposedAccountOfPortfolioToAdd stamp: 'PJ 11/10/2020 21:25:27'!
PASSED!

TestCase subclass: #ReportTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #ReportTest category: 'Portfolio-Solucion' stamp: 'PJ 11/10/2020 21:34:15'!
TestCase subclass: #ReportTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #AccountSummary category: 'Portfolio-Solucion' stamp: 'PJ 11/10/2020 21:47:32'!
Object subclass: #AccountSummary
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!
!ReportTest methodsFor: 'nil' stamp: 'PJ 11/10/2020 21:47:09'!
test01AccountSummaryFromANewAccountReturnsBalance0

	|account report|
	
	account := ReceptiveAccount new.
	report := AccountSummary for: account.
	
	self assert: 1 equals: report size.
	self assert: 'Balance = 0' equals: report first.! !

!testRun: #ReportTest #test01AccountSummaryFromANewAccountReturnsBalance0 stamp: 'PJ 11/10/2020 21:47:36'!
ERROR!
!AccountSummary class methodsFor: 'initialization' stamp: 'PJ 11/10/2020 21:48:06'!
for: aReceptiveAccount 
	self shouldBeImplemented.! !
!AccountSummary class methodsFor: 'initialization' stamp: 'PJ 11/10/2020 21:49:46' prior: 50868975!
for: anAccount 
	self new generateReportFor: anAccount.! !

!testRun: #ReportTest #test01AccountSummaryFromANewAccountReturnsBalance0 stamp: 'PJ 11/10/2020 21:50:00'!
ERROR!
!AccountSummary methodsFor: 'private' stamp: 'PJ 11/10/2020 21:50:30'!
generateReportFor: aReceptiveAccount 
	self shouldBeImplemented.! !
!AccountSummary methodsFor: 'private' stamp: 'PJ 11/10/2020 21:52:07' prior: 50868988!
generateReportFor: anAccount 
	
	|report|
	report := OrderedCollection with: 'Balance = 0'.
	
	^report ! !

!testRun: #ReportTest #test01AccountSummaryFromANewAccountReturnsBalance0 stamp: 'PJ 11/10/2020 21:52:09'!
ERROR!

report!
!AccountSummary class methodsFor: 'initialization' stamp: 'PJ 11/10/2020 21:53:04' prior: 50868980!
for: anAccount 
	^self new generateReportFor: anAccount.! !

!testRun: #ReportTest #test01AccountSummaryFromANewAccountReturnsBalance0 stamp: 'PJ 11/10/2020 21:53:08'!
PASSED!

!testRun: #ReportTest #test01AccountSummaryFromANewAccountReturnsBalance0 stamp: 'PJ 11/10/2020 21:53:08'!
PASSED!
!ReportTest methodsFor: 'as yet unclassified' stamp: 'PJ 11/10/2020 21:57:55'!
test02AccountSummaryReturnsAReportFromAnAccountWithADeposit

	|account report|
	
	account := ReceptiveAccount new.
	Deposit register: 100 on: account.
	
	report := AccountSummary for: account.
	
	self assert: 2 equals: report size.
	self assert: 'Dep�sito por 100' equals: (report at: 1).
	self assert: 'Balance = 100' equals: (report at: 2).! !

!testRun: #ReportTest #test02AccountSummaryReturnsAReportFromAnAccountWithADeposit stamp: 'PJ 11/10/2020 21:57:57'!
FAILURE!

!testRun: #ReportTest #test02AccountSummaryReturnsAReportFromAnAccountWithADeposit stamp: 'PJ 11/10/2020 21:58:25'!
FAILURE!
!AccountSummary methodsFor: 'private' stamp: 'PJ 11/10/2020 22:06:39' prior: 50868993!
generateReportFor: anAccount 
	
	|report transactions balance|
	report := OrderedCollection new.
	balance := 0.
	
	transactions := anAccount transactions.
	transactions do: [:transaction | 
		(transaction isKindOf: Deposit) ifTrue: [report add: ('Dep�sito por ', transaction value asString)].
		balance := transaction affectBalance: balance. 
		].
	
	report add: ('Balance = ', balance asString).
	^report ! !

!testRun: #ReportTest #test02AccountSummaryReturnsAReportFromAnAccountWithADeposit stamp: 'PJ 11/10/2020 22:06:47'!
PASSED!

!testRun: #ReportTest #test01AccountSummaryFromANewAccountReturnsBalance0 stamp: 'PJ 11/10/2020 22:06:47'!
PASSED!

!testRun: #ReportTest #test02AccountSummaryReturnsAReportFromAnAccountWithADeposit stamp: 'PJ 11/10/2020 22:06:47'!
PASSED!
!ReportTest methodsFor: 'as yet unclassified' stamp: 'PJ 11/10/2020 22:08:03'!
test03AccountSummaryReturnsAReportFromAnAccountWithAWithdraw

	|account report|
	
	account := ReceptiveAccount new.
	Withdraw register: 50 on: account.
	
	report := AccountSummary for: account.
	
	self assert: 2 equals: report size.
	self assert: 'Extracci�n por 50' equals: (report at: 1).
	self assert: 'Balance = -50' equals: (report at: 2).! !

!testRun: #ReportTest #test03AccountSummaryReturnsAReportFromAnAccountWithAWithdraw stamp: 'PJ 11/10/2020 22:08:07'!
FAILURE!
!AccountSummary methodsFor: 'private' stamp: 'PJ 11/10/2020 22:10:44' prior: 50869038!
generateReportFor: anAccount 
	
	|report transactions balance|
	report := OrderedCollection new.
	balance := anAccount balance.
	
	transactions := anAccount transactions.
	transactions do: [:transaction | 
		(transaction isKindOf: Deposit) ifTrue: [report add: ('Dep�sito por ', transaction value asString)].
		(transaction isKindOf: Withdraw ) ifTrue: [report add: ('Extracci�n por ', transaction value asString)].
		].
	
	report add: ('Balance = ', balance asString).
	^report ! !

!testRun: #ReportTest #test03AccountSummaryReturnsAReportFromAnAccountWithAWithdraw stamp: 'PJ 11/10/2020 22:10:50'!
PASSED!

!testRun: #ReportTest #test01AccountSummaryFromANewAccountReturnsBalance0 stamp: 'PJ 11/10/2020 22:10:50'!
PASSED!

!testRun: #ReportTest #test02AccountSummaryReturnsAReportFromAnAccountWithADeposit stamp: 'PJ 11/10/2020 22:10:50'!
PASSED!

!testRun: #ReportTest #test03AccountSummaryReturnsAReportFromAnAccountWithAWithdraw stamp: 'PJ 11/10/2020 22:10:50'!
PASSED!

!testRun: #ReportTest #test03AccountSummaryReturnsAReportFromAnAccountWithAWithdraw stamp: 'PJ 11/10/2020 22:10:55'!
PASSED!

!testRun: #ReportTest #test01AccountSummaryFromANewAccountReturnsBalance0 stamp: 'PJ 11/10/2020 22:10:55'!
PASSED!

!testRun: #ReportTest #test02AccountSummaryReturnsAReportFromAnAccountWithADeposit stamp: 'PJ 11/10/2020 22:10:55'!
PASSED!

!testRun: #ReportTest #test03AccountSummaryReturnsAReportFromAnAccountWithAWithdraw stamp: 'PJ 11/10/2020 22:10:55'!
PASSED!
!ReportTest methodsFor: 'as yet unclassified' stamp: 'PJ 11/10/2020 22:15:11'!
test04AccountSummaryReturnsAReportFromAnAccountWithATransferWithdraw

	|senderAccount receiverAccount report|
	
	receiverAccount := ReceptiveAccount new.
	senderAccount := ReceptiveAccount new.
	Transfer from: senderAccount to: receiverAccount amount: 20.
	
	report := AccountSummary for: senderAccount.
	
	self assert: 2 equals: report size.
	self assert: 'Salida por transferencia de 20' equals: (report at: 1).
	self assert: 'Balance = -20' equals: (report at: 2).! !

!testRun: #ReportTest #test04AccountSummaryReturnsAReportFromAnAccountWithATransferWithdraw stamp: 'PJ 11/10/2020 22:15:12'!
FAILURE!
!AccountSummary methodsFor: 'private' stamp: 'PJ 11/10/2020 22:16:35' prior: 50869083!
generateReportFor: anAccount 
	
	|report transactions balance|
	report := OrderedCollection new.
	balance := anAccount balance.
	
	transactions := anAccount transactions.
	transactions do: [:transaction | 
		(transaction isKindOf: Deposit) ifTrue: [report add: ('Dep�sito por ', transaction value asString)].
		(transaction isKindOf: Withdraw ) ifTrue: [report add: ('Extracci�n por ', transaction value asString)].
		(transaction isKindOf: TransferWithdraw ) ifTrue: [report add: ('Salida por transferencia de ', transaction value asString)].
		].
	
	report add: ('Balance = ', balance asString).
	^report ! !

!testRun: #ReportTest #test04AccountSummaryReturnsAReportFromAnAccountWithATransferWithdraw stamp: 'PJ 11/10/2020 22:16:39'!
ERROR!

transaction!
!ReceptiveAccountTest methodsFor: 'transfer tests' stamp: 'PJ 11/10/2020 22:21:22'!
test11TransferDepositAndWithdrawKnowTheTransferAmount

	| senderAccount receiverAccount transfer deposit withdraw |
	
	senderAccount := ReceptiveAccount new.
	Deposit register: 100 on: senderAccount.
	
	receiverAccount := ReceptiveAccount new.
	
	transfer := Transfer from: senderAccount to: receiverAccount amount: 10.
	
	self assert: 10 equals: deposit value.
	self assert: 10 equals: withdraw value.
! !
!ReceptiveAccountTest methodsFor: 'transfer tests' stamp: 'PJ 11/10/2020 22:22:28' prior: 50869181!
test11TransferDepositAndWithdrawKnowTheTransferAmount

	| senderAccount receiverAccount transfer deposit withdraw |
	
	senderAccount := ReceptiveAccount new.
	Deposit register: 100 on: senderAccount.
	
	receiverAccount := ReceptiveAccount new.
	
	transfer := Transfer from: senderAccount to: receiverAccount amount: 10.
	
	deposit := transfer deposit.
	withdraw  := transfer withdraw.
	
	self assert: 10 equals: deposit value.
	self assert: 10 equals: withdraw value.
! !

!testRun: #ReceptiveAccountTest #test11TransferDepositAndWithdrawKnowTheTransferAmount stamp: 'PJ 11/10/2020 22:22:29'!
ERROR!
!TransferDeposit methodsFor: 'accessing' stamp: 'PJ 11/10/2020 22:22:59' overrides: 50868445!
value
	self shouldBeImplemented.! !
!TransferDeposit methodsFor: 'accessing' stamp: 'PJ 11/10/2020 22:23:17' prior: 50869219 overrides: 50868445!
value
	^transfer value.! !

!testRun: #ReceptiveAccountTest #test11TransferDepositAndWithdrawKnowTheTransferAmount stamp: 'PJ 11/10/2020 22:23:20'!
ERROR!
!TransferWithdraw methodsFor: 'accessing' stamp: 'PJ 11/10/2020 22:23:26' overrides: 50868445!
value
	self shouldBeImplemented.! !
!TransferWithdraw methodsFor: 'accessing' stamp: 'PJ 11/10/2020 22:23:30' prior: 50869232 overrides: 50868445!
value
	^transfer value.! !

!testRun: #ReceptiveAccountTest #test11TransferDepositAndWithdrawKnowTheTransferAmount stamp: 'PJ 11/10/2020 22:23:39'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'PJ 11/10/2020 22:23:39'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'PJ 11/10/2020 22:23:39'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'PJ 11/10/2020 22:23:39'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'PJ 11/10/2020 22:23:39'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'PJ 11/10/2020 22:23:39'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'PJ 11/10/2020 22:23:39'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'PJ 11/10/2020 22:23:39'!
PASSED!

!testRun: #ReceptiveAccountTest #test08TransferSenderAccountAcknowledgesTransferTransactions stamp: 'PJ 11/10/2020 22:23:39'!
PASSED!

!testRun: #ReceptiveAccountTest #test09TransferReceiverAccountAcknowledgesTransferTransactions stamp: 'PJ 11/10/2020 22:23:39'!
PASSED!

!testRun: #ReceptiveAccountTest #test10TransferDepositAndWithdrawCanNavigateToTransfer stamp: 'PJ 11/10/2020 22:23:39'!
PASSED!

!testRun: #ReceptiveAccountTest #test11TransferDepositAndWithdrawKnowTheTransferAmount stamp: 'PJ 11/10/2020 22:23:39'!
PASSED!
!TransferTransaction methodsFor: 'as yet unclassified' stamp: 'PJ 11/10/2020 22:23:50' overrides: 50868445!
value
	^transfer value.! !

!methodRemoval: TransferWithdraw #value stamp: 'PJ 11/10/2020 22:24:17'!
value
	^transfer value.!

!methodRemoval: TransferDeposit #value stamp: 'PJ 11/10/2020 22:24:29'!
value
	^transfer value.!

!methodRemoval: Transfer #value stamp: 'PJ 11/10/2020 22:25:01'!
value
	^value.!

----SNAPSHOT----(10 November 2020 22:25:07) CuisUniversity-4384.image priorSource: 17155564!

!testRun: #ReceptiveAccountTest #test08TransferSenderAccountAcknowledgesTransferTransactions stamp: 'PJ 11/10/2020 22:25:12'!
ERROR!
!Transfer methodsFor: 'as yet unclassified' stamp: 'PJ 11/10/2020 22:26:04' overrides: 16881508!
value
	^value! !

!testRun: #ReceptiveAccountTest #test10TransferDepositAndWithdrawCanNavigateToTransfer stamp: 'PJ 11/10/2020 22:26:10'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'PJ 11/10/2020 22:26:10'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'PJ 11/10/2020 22:26:10'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'PJ 11/10/2020 22:26:10'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'PJ 11/10/2020 22:26:10'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'PJ 11/10/2020 22:26:10'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'PJ 11/10/2020 22:26:10'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'PJ 11/10/2020 22:26:10'!
PASSED!

!testRun: #ReceptiveAccountTest #test08TransferSenderAccountAcknowledgesTransferTransactions stamp: 'PJ 11/10/2020 22:26:10'!
PASSED!

!testRun: #ReceptiveAccountTest #test09TransferReceiverAccountAcknowledgesTransferTransactions stamp: 'PJ 11/10/2020 22:26:10'!
PASSED!

!testRun: #ReceptiveAccountTest #test10TransferDepositAndWithdrawCanNavigateToTransfer stamp: 'PJ 11/10/2020 22:26:10'!
PASSED!

!testRun: #ReceptiveAccountTest #test11TransferDepositAndWithdrawKnowTheTransferAmount stamp: 'PJ 11/10/2020 22:26:10'!
PASSED!

!testRun: #ReportTest #test04AccountSummaryReturnsAReportFromAnAccountWithATransferWithdraw stamp: 'PJ 11/10/2020 22:26:26'!
PASSED!

!testRun: #ReportTest #test01AccountSummaryFromANewAccountReturnsBalance0 stamp: 'PJ 11/10/2020 22:26:26'!
PASSED!

!testRun: #ReportTest #test02AccountSummaryReturnsAReportFromAnAccountWithADeposit stamp: 'PJ 11/10/2020 22:26:26'!
PASSED!

!testRun: #ReportTest #test03AccountSummaryReturnsAReportFromAnAccountWithAWithdraw stamp: 'PJ 11/10/2020 22:26:26'!
PASSED!

!testRun: #ReportTest #test04AccountSummaryReturnsAReportFromAnAccountWithATransferWithdraw stamp: 'PJ 11/10/2020 22:26:26'!
PASSED!
!ReportTest methodsFor: 'as yet unclassified' stamp: 'PJ 11/10/2020 22:27:31'!
test05AccountSummaryReturnsAReportFromAnAccountWithATransferWithdraw

	|senderAccount receiverAccount report|
	
	receiverAccount := ReceptiveAccount new.
	senderAccount := ReceptiveAccount new.
	Transfer from: senderAccount to: receiverAccount amount: 20.
	
	report := AccountSummary for: receiverAccount.
	
	self assert: 2 equals: report size.
	self assert: 'Entrada por transferencia de 20' equals: (report at: 1).
	self assert: 'Balance = 20' equals: (report at: 2).! !

!testRun: #ReportTest #test05AccountSummaryReturnsAReportFromAnAccountWithATransferWithdraw stamp: 'PJ 11/10/2020 22:27:34'!
FAILURE!
!AccountSummary methodsFor: 'private' stamp: 'PJ 11/10/2020 22:28:22' prior: 50869154!
generateReportFor: anAccount 
	
	|report transactions balance|
	report := OrderedCollection new.
	balance := anAccount balance.
	
	transactions := anAccount transactions.
	transactions do: [:transaction | 
		(transaction isKindOf: Deposit) ifTrue: [report add: ('Dep�sito por ', transaction value asString)].
		(transaction isKindOf: Withdraw ) ifTrue: [report add: ('Extracci�n por ', transaction value asString)].
		(transaction isKindOf: TransferWithdraw ) ifTrue: [report add: ('Salida por transferencia de ', transaction value asString)].
		(transaction isKindOf: TransferDeposit ) ifTrue: [report add: ('Entrada por transferencia de ', transaction value asString)].
		].
	
	report add: ('Balance = ', balance asString).
	^report ! !

!testRun: #ReportTest #test05AccountSummaryReturnsAReportFromAnAccountWithATransferWithdraw stamp: 'PJ 11/10/2020 22:28:26'!
PASSED!

!testRun: #ReportTest #test01AccountSummaryFromANewAccountReturnsBalance0 stamp: 'PJ 11/10/2020 22:28:26'!
PASSED!

!testRun: #ReportTest #test02AccountSummaryReturnsAReportFromAnAccountWithADeposit stamp: 'PJ 11/10/2020 22:28:26'!
PASSED!

!testRun: #ReportTest #test03AccountSummaryReturnsAReportFromAnAccountWithAWithdraw stamp: 'PJ 11/10/2020 22:28:26'!
PASSED!

!testRun: #ReportTest #test04AccountSummaryReturnsAReportFromAnAccountWithATransferWithdraw stamp: 'PJ 11/10/2020 22:28:26'!
PASSED!

!testRun: #ReportTest #test05AccountSummaryReturnsAReportFromAnAccountWithATransferWithdraw stamp: 'PJ 11/10/2020 22:28:26'!
PASSED!
!AccountSummary methodsFor: 'private' stamp: 'PJ 11/10/2020 22:36:48' prior: 50869401!
generateReportFor: anAccount 
	
	|report transactions balance|
	report := OrderedCollection new.
	balance := anAccount balance.
	
	transactions := anAccount transactions.
	transactions do: [:transaction | report add: transaction description].
	
	report add: ('Balance = ', balance asString).
	^report ! !

!testRun: #ReportTest #test05AccountSummaryReturnsAReportFromAnAccountWithATransferWithdraw stamp: 'PJ 11/10/2020 22:36:55'!
ERROR!

!testRun: #ReportTest #test01AccountSummaryFromANewAccountReturnsBalance0 stamp: 'PJ 11/10/2020 22:37:20'!
PASSED!

!testRun: #ReportTest #test01AccountSummaryFromANewAccountReturnsBalance0 stamp: 'PJ 11/10/2020 22:37:20'!
PASSED!

!testRun: #ReportTest #test02AccountSummaryReturnsAReportFromAnAccountWithADeposit stamp: 'PJ 11/10/2020 22:37:20'!
ERROR!

!testRun: #ReportTest #test03AccountSummaryReturnsAReportFromAnAccountWithAWithdraw stamp: 'PJ 11/10/2020 22:37:20'!
ERROR!

!testRun: #ReportTest #test04AccountSummaryReturnsAReportFromAnAccountWithATransferWithdraw stamp: 'PJ 11/10/2020 22:37:20'!
ERROR!

!testRun: #ReportTest #test05AccountSummaryReturnsAReportFromAnAccountWithATransferWithdraw stamp: 'PJ 11/10/2020 22:37:20'!
ERROR!

!testRun: #ReportTest #test02AccountSummaryReturnsAReportFromAnAccountWithADeposit stamp: 'PJ 11/10/2020 22:37:33'!
ERROR!
!AccountTransaction methodsFor: 'as yet unclassified' stamp: 'PJ 11/10/2020 22:38:07'!
description
	self shouldBeImplemented.! !
!AccountTransaction methodsFor: 'as yet unclassified' stamp: 'PJ 11/10/2020 22:38:23' prior: 50869495!
description
	self subclassResponsibility! !

!testRun: #ReportTest #test02AccountSummaryReturnsAReportFromAnAccountWithADeposit stamp: 'PJ 11/10/2020 22:38:25'!
ERROR!
!Deposit methodsFor: 'printing' stamp: 'PJ 11/10/2020 22:38:45' overrides: 50869500!
description
	self shouldBeImplemented.! !
!Deposit methodsFor: 'printing' stamp: 'PJ 11/10/2020 22:39:34' prior: 50869508 overrides: 50869500!
description
	^'Dep�sito por ', value asString ! !

!testRun: #ReportTest #test02AccountSummaryReturnsAReportFromAnAccountWithADeposit stamp: 'PJ 11/10/2020 22:39:36'!
PASSED!

!testRun: #ReportTest #test03AccountSummaryReturnsAReportFromAnAccountWithAWithdraw stamp: 'PJ 11/10/2020 22:39:38'!
ERROR!
!Withdraw methodsFor: 'printing' stamp: 'PJ 11/10/2020 22:39:48' overrides: 50869500!
description
	self shouldBeImplemented.! !
!Withdraw methodsFor: 'printing' stamp: 'PJ 11/10/2020 22:40:02' prior: 50869526 overrides: 50869500!
description
	^'Extracci�n por ', value asString ! !

!testRun: #ReportTest #test03AccountSummaryReturnsAReportFromAnAccountWithAWithdraw stamp: 'PJ 11/10/2020 22:40:03'!
PASSED!

!testRun: #ReportTest #test04AccountSummaryReturnsAReportFromAnAccountWithATransferWithdraw stamp: 'PJ 11/10/2020 22:40:04'!
ERROR!
!TransferWithdraw methodsFor: 'printing' stamp: 'PJ 11/10/2020 22:40:13' overrides: 50869500!
description
	self shouldBeImplemented.! !
!TransferWithdraw methodsFor: 'printing' stamp: 'PJ 11/10/2020 22:41:01' prior: 50869544 overrides: 50869500!
description
	^'Salida por transferencia de ', self value asString ! !

!testRun: #ReportTest #test04AccountSummaryReturnsAReportFromAnAccountWithATransferWithdraw stamp: 'PJ 11/10/2020 22:41:02'!
PASSED!

!testRun: #ReportTest #test05AccountSummaryReturnsAReportFromAnAccountWithATransferWithdraw stamp: 'PJ 11/10/2020 22:41:04'!
ERROR!
!TransferDeposit methodsFor: 'printing' stamp: 'PJ 11/10/2020 22:41:10' overrides: 50869500!
description
	self shouldBeImplemented.! !
!TransferDeposit methodsFor: 'printing' stamp: 'PJ 11/10/2020 22:41:27' prior: 50869563 overrides: 50869500!
description
	^'Entrada por transferencia de ', self value asString! !

!testRun: #ReportTest #test05AccountSummaryReturnsAReportFromAnAccountWithATransferWithdraw stamp: 'PJ 11/10/2020 22:41:29'!
PASSED!

!testRun: #ReportTest #test01AccountSummaryFromANewAccountReturnsBalance0 stamp: 'PJ 11/10/2020 22:41:34'!
PASSED!

!testRun: #ReportTest #test01AccountSummaryFromANewAccountReturnsBalance0 stamp: 'PJ 11/10/2020 22:41:34'!
PASSED!

!testRun: #ReportTest #test02AccountSummaryReturnsAReportFromAnAccountWithADeposit stamp: 'PJ 11/10/2020 22:41:34'!
PASSED!

!testRun: #ReportTest #test03AccountSummaryReturnsAReportFromAnAccountWithAWithdraw stamp: 'PJ 11/10/2020 22:41:34'!
PASSED!

!testRun: #ReportTest #test04AccountSummaryReturnsAReportFromAnAccountWithATransferWithdraw stamp: 'PJ 11/10/2020 22:41:34'!
PASSED!

!testRun: #ReportTest #test05AccountSummaryReturnsAReportFromAnAccountWithATransferWithdraw stamp: 'PJ 11/10/2020 22:41:34'!
PASSED!

----SNAPSHOT----(10 November 2020 22:41:40) CuisUniversity-4384.image priorSource: 17204818!
!AccountSummary methodsFor: 'private' stamp: 'PJ 11/10/2020 22:43:41' prior: 50869451!
generateReportFor: anAccount 
	
	|report transactions|
	report := OrderedCollection new.
	
	transactions := anAccount transactions.
	transactions do: [:transaction | report add: transaction description].
	
	report add: anAccount balanceDescription.
	^report ! !

!testRun: #ReportTest #test05AccountSummaryReturnsAReportFromAnAccountWithATransferWithdraw stamp: 'PJ 11/10/2020 22:43:57'!
ERROR!
!Account methodsFor: 'printing' stamp: 'PJ 11/10/2020 22:44:23'!
balanceDescription
	self shouldBeImplemented.! !
!Account methodsFor: 'printing' stamp: 'PJ 11/10/2020 22:44:31' prior: 50869619!
balanceDescription
	self subclassResponsibility .! !

!testRun: #ReportTest #test05AccountSummaryReturnsAReportFromAnAccountWithATransferWithdraw stamp: 'PJ 11/10/2020 22:44:33'!
ERROR!
!ReceptiveAccount methodsFor: 'printing' stamp: 'PJ 11/10/2020 22:44:40' overrides: 50869624!
balanceDescription
	self shouldBeImplemented.! !
!ReceptiveAccount methodsFor: 'printing' stamp: 'PJ 11/10/2020 22:44:58' prior: 50869633 overrides: 50869624!
balanceDescription
	^'Balance = ', self balance asString! !

!testRun: #ReportTest #test05AccountSummaryReturnsAReportFromAnAccountWithATransferWithdraw stamp: 'PJ 11/10/2020 22:45:08'!
PASSED!

!testRun: #ReportTest #test01AccountSummaryFromANewAccountReturnsBalance0 stamp: 'PJ 11/10/2020 22:45:08'!
PASSED!

!testRun: #ReportTest #test02AccountSummaryReturnsAReportFromAnAccountWithADeposit stamp: 'PJ 11/10/2020 22:45:08'!
PASSED!

!testRun: #ReportTest #test03AccountSummaryReturnsAReportFromAnAccountWithAWithdraw stamp: 'PJ 11/10/2020 22:45:08'!
PASSED!

!testRun: #ReportTest #test04AccountSummaryReturnsAReportFromAnAccountWithATransferWithdraw stamp: 'PJ 11/10/2020 22:45:08'!
PASSED!

!testRun: #ReportTest #test05AccountSummaryReturnsAReportFromAnAccountWithATransferWithdraw stamp: 'PJ 11/10/2020 22:45:08'!
PASSED!

!testRun: #ReportTest #test05AccountSummaryReturnsAReportFromAnAccountWithATransferWithdraw stamp: 'PJ 11/10/2020 22:45:12'!
PASSED!

!testRun: #ReportTest #test01AccountSummaryFromANewAccountReturnsBalance0 stamp: 'PJ 11/10/2020 22:45:12'!
PASSED!

!testRun: #ReportTest #test02AccountSummaryReturnsAReportFromAnAccountWithADeposit stamp: 'PJ 11/10/2020 22:45:12'!
PASSED!

!testRun: #ReportTest #test03AccountSummaryReturnsAReportFromAnAccountWithAWithdraw stamp: 'PJ 11/10/2020 22:45:12'!
PASSED!

!testRun: #ReportTest #test04AccountSummaryReturnsAReportFromAnAccountWithATransferWithdraw stamp: 'PJ 11/10/2020 22:45:12'!
PASSED!

!testRun: #ReportTest #test05AccountSummaryReturnsAReportFromAnAccountWithATransferWithdraw stamp: 'PJ 11/10/2020 22:45:12'!
PASSED!

!classDefinition: #TransferNet category: 'Portfolio-Solucion' stamp: 'PJ 11/10/2020 23:05:20'!
Object subclass: #TransferNet
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!
!ReportTest methodsFor: 'account summary' stamp: 'PJ 11/10/2020 23:05:12'!
test06TransferNetFromANewAccountReturnsZero

	|account report|
	
	account := ReceptiveAccount new.
	report := TransferNet for: account.
	
	self assert: 'Transfer Net: 0' equals: report first.! !

!testRun: #ReportTest #test06TransferNetFromANewAccountReturnsZero stamp: 'PJ 11/10/2020 23:05:35'!
ERROR!
!TransferNet class methodsFor: 'instance creation' stamp: 'PJ 11/10/2020 23:06:03'!
for: aReceptiveAccount 
	"DO NOT FORGET TO RENAME COLLABORATORS AND REMOVE THIS COMMENT!!!!"
	self shouldBeImplemented.
	^self new initializeFor: aReceptiveAccount ! !
!TransferNet class methodsFor: 'instance creation' stamp: 'PJ 11/10/2020 23:07:23' prior: 50869711!
for: anAccount 
	^self new generateReportFor: anAccount ! !

!testRun: #ReportTest #test06TransferNetFromANewAccountReturnsZero stamp: 'PJ 11/10/2020 23:07:26'!
ERROR!
!TransferNet methodsFor: 'private' stamp: 'PJ 11/10/2020 23:07:37'!
generateReportFor: aReceptiveAccount 
	self shouldBeImplemented.! !
!TransferNet methodsFor: 'private' stamp: 'PJ 11/10/2020 23:08:11' prior: 50869728!
generateReportFor: anAccount 
	^'Transfer Net: 0'! !

!testRun: #ReportTest #test06TransferNetFromANewAccountReturnsZero stamp: 'PJ 11/10/2020 23:08:14'!
FAILURE!
!ReportTest methodsFor: 'account summary' stamp: 'PJ 11/10/2020 23:08:36' prior: 50869698!
test06TransferNetFromANewAccountReturnsZero

	|account report|
	
	account := ReceptiveAccount new.
	report := TransferNet for: account.
	
	self assert: 'Transfer Net: 0' equals: report.! !

!testRun: #ReportTest #test06TransferNetFromANewAccountReturnsZero stamp: 'PJ 11/10/2020 23:08:40'!
PASSED!

!testRun: #ReportTest #test01AccountSummaryFromANewAccountReturnsBalance0 stamp: 'PJ 11/10/2020 23:08:40'!
PASSED!

!testRun: #ReportTest #test02AccountSummaryReturnsAReportFromAnAccountWithADeposit stamp: 'PJ 11/10/2020 23:08:40'!
PASSED!

!testRun: #ReportTest #test03AccountSummaryReturnsAReportFromAnAccountWithAWithdraw stamp: 'PJ 11/10/2020 23:08:40'!
PASSED!

!testRun: #ReportTest #test04AccountSummaryReturnsAReportFromAnAccountWithATransferWithdraw stamp: 'PJ 11/10/2020 23:08:40'!
PASSED!

!testRun: #ReportTest #test05AccountSummaryReturnsAReportFromAnAccountWithATransferWithdraw stamp: 'PJ 11/10/2020 23:08:40'!
PASSED!

!testRun: #ReportTest #test06TransferNetFromANewAccountReturnsZero stamp: 'PJ 11/10/2020 23:08:40'!
PASSED!

Object subclass: #Report
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #Report category: 'Portfolio-Solucion' stamp: 'PJ 11/10/2020 23:09:20'!
Object subclass: #Report
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

Report subclass: #AccountSummary
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #AccountSummary category: 'Portfolio-Solucion' stamp: 'PJ 11/10/2020 23:10:06'!
Report subclass: #AccountSummary
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

Report subclass: #TransferNet
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #TransferNet category: 'Portfolio-Solucion' stamp: 'PJ 11/10/2020 23:10:21'!
Report subclass: #TransferNet
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!
!Report methodsFor: 'nil' stamp: 'PJ 11/10/2020 23:11:11'!
generateReportFor: anAccount
	self subclassResponsibility ! !
!Report class methodsFor: 'instance creation' stamp: 'PJ 11/10/2020 23:12:22'!
for: anAccount 
	^self new generateReportFor: anAccount ! !

!methodRemoval: AccountSummary class #for: stamp: 'PJ 11/10/2020 23:12:32'!
for: anAccount 
	^self new generateReportFor: anAccount.!

!methodRemoval: TransferNet class #for: stamp: 'PJ 11/10/2020 23:12:43'!
for: anAccount 
	^self new generateReportFor: anAccount !

!testRun: #ReportTest #test06TransferNetFromANewAccountReturnsZero stamp: 'PJ 11/10/2020 23:12:55'!
PASSED!

!testRun: #ReportTest #test01AccountSummaryFromANewAccountReturnsBalance0 stamp: 'PJ 11/10/2020 23:12:55'!
PASSED!

!testRun: #ReportTest #test02AccountSummaryReturnsAReportFromAnAccountWithADeposit stamp: 'PJ 11/10/2020 23:12:55'!
PASSED!

!testRun: #ReportTest #test03AccountSummaryReturnsAReportFromAnAccountWithAWithdraw stamp: 'PJ 11/10/2020 23:12:55'!
PASSED!

!testRun: #ReportTest #test04AccountSummaryReturnsAReportFromAnAccountWithATransferWithdraw stamp: 'PJ 11/10/2020 23:12:55'!
PASSED!

!testRun: #ReportTest #test05AccountSummaryReturnsAReportFromAnAccountWithATransferWithdraw stamp: 'PJ 11/10/2020 23:12:55'!
PASSED!

!testRun: #ReportTest #test06TransferNetFromANewAccountReturnsZero stamp: 'PJ 11/10/2020 23:12:55'!
PASSED!

----SNAPSHOT----(10 November 2020 23:13:01) CuisUniversity-4384.image priorSource: 17214394!

----QUIT----(10 November 2020 23:14:46) CuisUniversity-4384.image priorSource: 17222523!

----STARTUP---- (12 November 2020 20:04:41) as C:\Users\paujimenez\Documents\Ingenieria1\cuisWindows64\19-windows64-Portfolio2\CuisUniversity-4384.image!

!AccountSummary methodsFor: 'private' stamp: 'PJ 11/12/2020 21:43:54' prior: 50869604 overrides: 50869810!
generateReportFor: anAccount 
	
	|report transactions|
	report := OrderedCollection new.
	
	transactions := anAccount transactions.
	transactions do: [:transaction | report add: (transaction reportTo: self)].
	
	report add: anAccount balanceDescription.
	^report ! !

!testRun: #ReportTest #test06TransferNetFromANewAccountReturnsZero stamp: 'PJ 11/12/2020 21:44:05'!
PASSED!

!testRun: #ReportTest #test01AccountSummaryFromANewAccountReturnsBalance0 stamp: 'PJ 11/12/2020 21:44:05'!
PASSED!

!testRun: #ReportTest #test02AccountSummaryReturnsAReportFromAnAccountWithADeposit stamp: 'PJ 11/12/2020 21:44:05'!
ERROR!

!testRun: #ReportTest #test03AccountSummaryReturnsAReportFromAnAccountWithAWithdraw stamp: 'PJ 11/12/2020 21:44:05'!
ERROR!

!testRun: #ReportTest #test04AccountSummaryReturnsAReportFromAnAccountWithATransferWithdraw stamp: 'PJ 11/12/2020 21:44:05'!
ERROR!

!testRun: #ReportTest #test05AccountSummaryReturnsAReportFromAnAccountWithATransferWithdraw stamp: 'PJ 11/12/2020 21:44:05'!
ERROR!

!testRun: #ReportTest #test06TransferNetFromANewAccountReturnsZero stamp: 'PJ 11/12/2020 21:44:05'!
PASSED!

!testRun: #ReportTest #test02AccountSummaryReturnsAReportFromAnAccountWithADeposit stamp: 'PJ 11/12/2020 21:44:08'!
ERROR!
!AccountTransaction methodsFor: 'as yet unclassified' stamp: 'PJ 11/12/2020 21:44:42'!
reportTo: anAccountSummary 
	self shouldBeImplemented.! !
!AccountTransaction methodsFor: 'as yet unclassified' stamp: 'PJ 11/12/2020 21:45:00' prior: 50869908!
reportTo: anAccountSummary 
	self subclassResponsibility.! !

!testRun: #ReportTest #test02AccountSummaryReturnsAReportFromAnAccountWithADeposit stamp: 'PJ 11/12/2020 21:45:02'!
ERROR!
!Deposit methodsFor: 'as yet unclassified' stamp: 'PJ 11/12/2020 21:45:09' overrides: 50869914!
reportTo: anAccountSummary 
	self shouldBeImplemented.! !
!Deposit methodsFor: 'as yet unclassified' stamp: 'PJ 11/12/2020 21:47:24' prior: 50869923 overrides: 50869914!
reportTo: aReport 
	aReport reportAsDeposit: self.! !

!testRun: #ReportTest #test02AccountSummaryReturnsAReportFromAnAccountWithADeposit stamp: 'PJ 11/12/2020 21:48:07'!
ERROR!
!Report methodsFor: 'as yet unclassified' stamp: 'PJ 11/12/2020 21:48:25'!
reportAsDeposit: aDeposit 
	self shouldBeImplemented.! !
!Report methodsFor: 'as yet unclassified' stamp: 'PJ 11/12/2020 21:48:32' prior: 50869937!
reportAsDeposit: aDeposit 
	self subclassResponsibility.! !

!testRun: #ReportTest #test02AccountSummaryReturnsAReportFromAnAccountWithADeposit stamp: 'PJ 11/12/2020 21:48:33'!
ERROR!
!AccountSummary methodsFor: 'as yet unclassified' stamp: 'PJ 11/12/2020 21:48:39' overrides: 50869942!
reportAsDeposit: aDeposit 
	self shouldBeImplemented.! !
!AccountSummary methodsFor: 'as yet unclassified' stamp: 'PJ 11/12/2020 21:49:45' prior: 50869951 overrides: 50869942!
reportAsDeposit: aTransaction 
	^'Dep�sito por ', aTransaction value asString ! !

!testRun: #ReportTest #test02AccountSummaryReturnsAReportFromAnAccountWithADeposit stamp: 'PJ 11/12/2020 21:50:22'!
FAILURE!
!Deposit methodsFor: 'as yet unclassified' stamp: 'PJ 11/12/2020 21:51:39' prior: 50869929 overrides: 50869914!
reportTo: aReport 
	^aReport reportAsDeposit: self.! !

!testRun: #ReportTest #test02AccountSummaryReturnsAReportFromAnAccountWithADeposit stamp: 'PJ 11/12/2020 21:51:41'!
PASSED!

!testRun: #ReportTest #test06TransferNetFromANewAccountReturnsZero stamp: 'PJ 11/12/2020 21:51:57'!
PASSED!

!testRun: #ReportTest #test01AccountSummaryFromANewAccountReturnsBalance0 stamp: 'PJ 11/12/2020 21:51:57'!
PASSED!

!testRun: #ReportTest #test02AccountSummaryReturnsAReportFromAnAccountWithADeposit stamp: 'PJ 11/12/2020 21:51:57'!
PASSED!

!testRun: #ReportTest #test03AccountSummaryReturnsAReportFromAnAccountWithAWithdraw stamp: 'PJ 11/12/2020 21:51:57'!
ERROR!

!testRun: #ReportTest #test04AccountSummaryReturnsAReportFromAnAccountWithATransferWithdraw stamp: 'PJ 11/12/2020 21:51:57'!
ERROR!

!testRun: #ReportTest #test05AccountSummaryReturnsAReportFromAnAccountWithATransferWithdraw stamp: 'PJ 11/12/2020 21:51:57'!
ERROR!

!testRun: #ReportTest #test06TransferNetFromANewAccountReturnsZero stamp: 'PJ 11/12/2020 21:51:57'!
PASSED!

!testRun: #ReportTest #test03AccountSummaryReturnsAReportFromAnAccountWithAWithdraw stamp: 'PJ 11/12/2020 21:52:07'!
ERROR!
!Withdraw methodsFor: 'as yet unclassified' stamp: 'PJ 11/12/2020 21:52:19' overrides: 50869914!
reportTo: anAccountSummary 
	self shouldBeImplemented.! !
!Withdraw methodsFor: 'as yet unclassified' stamp: 'PJ 11/12/2020 21:53:09' prior: 50870007 overrides: 50869914!
reportTo: aReport 
	aReport reportAsWithdraw: self.! !

!testRun: #ReportTest #test03AccountSummaryReturnsAReportFromAnAccountWithAWithdraw stamp: 'PJ 11/12/2020 21:53:14'!
ERROR!
!AccountSummary methodsFor: 'as yet unclassified' stamp: 'PJ 11/12/2020 21:53:20'!
reportAsWithdraw: aWithdraw 
	self shouldBeImplemented.! !
!Withdraw methodsFor: 'as yet unclassified' stamp: 'PJ 11/12/2020 21:54:02' prior: 50870013 overrides: 50869914!
reportTo: aReport 
	^aReport reportAsWithdraw: self.! !

!testRun: #ReportTest #test03AccountSummaryReturnsAReportFromAnAccountWithAWithdraw stamp: 'PJ 11/12/2020 21:56:54'!
ERROR!
!AccountSummary methodsFor: 'as yet unclassified' stamp: 'PJ 11/12/2020 21:57:29' prior: 50870022!
reportAsWithdraw: aWithdraw 
	^'Extracci�n por ', aWithdraw value asString! !

!testRun: #ReportTest #test03AccountSummaryReturnsAReportFromAnAccountWithAWithdraw stamp: 'PJ 11/12/2020 21:57:56'!
PASSED!

!testRun: #ReportTest #test04AccountSummaryReturnsAReportFromAnAccountWithATransferWithdraw stamp: 'PJ 11/12/2020 21:58:06'!
ERROR!
!TransferWithdraw methodsFor: 'as yet unclassified' stamp: 'PJ 11/12/2020 21:58:56' overrides: 50869914!
reportTo: anAccountSummary 
	self shouldBeImplemented.! !
!TransferWithdraw methodsFor: 'as yet unclassified' stamp: 'PJ 11/12/2020 21:59:45' prior: 50870051 overrides: 50869914!
reportTo: aReport 
	aReport reportAsTransferWithdraw: self.! !

!testRun: #ReportTest #test04AccountSummaryReturnsAReportFromAnAccountWithATransferWithdraw stamp: 'PJ 11/12/2020 21:59:49'!
ERROR!
!Report methodsFor: 'as yet unclassified' stamp: 'PJ 11/12/2020 22:00:06'!
reportAsTransferWithdraw: aTransferWithdraw 
	self shouldBeImplemented.! !
!Report methodsFor: 'as yet unclassified' stamp: 'PJ 11/12/2020 22:00:41' prior: 50870066!
reportAsTransferWithdraw: aTransaction
	self subclassResponsibility .! !

!testRun: #ReportTest #test04AccountSummaryReturnsAReportFromAnAccountWithATransferWithdraw stamp: 'PJ 11/12/2020 22:00:42'!
ERROR!
!AccountSummary methodsFor: 'as yet unclassified' stamp: 'PJ 11/12/2020 22:00:51' overrides: 50870072!
reportAsTransferWithdraw: aTransferWithdraw 
	self shouldBeImplemented.! !
!AccountSummary methodsFor: 'as yet unclassified' stamp: 'PJ 11/12/2020 22:02:03' prior: 50870082 overrides: 50870072!
reportAsTransferWithdraw: aTransaction 
	^'Salida por transferencia de ', aTransaction value asString ! !
!TransferWithdraw methodsFor: 'as yet unclassified' stamp: 'PJ 11/12/2020 22:02:10' prior: 50870057 overrides: 50869914!
reportTo: aReport 
	^aReport reportAsTransferWithdraw: self.! !

!testRun: #ReportTest #test04AccountSummaryReturnsAReportFromAnAccountWithATransferWithdraw stamp: 'PJ 11/12/2020 22:02:11'!
PASSED!

!testRun: #ReportTest #test05AccountSummaryReturnsAReportFromAnAccountWithATransferWithdraw stamp: 'PJ 11/12/2020 22:02:16'!
ERROR!
!TransferTransaction methodsFor: 'as yet unclassified' stamp: 'PJ 11/12/2020 22:02:35' overrides: 50869914!
reportTo: anAccountSummary 
	self shouldBeImplemented.! !
!TransferTransaction methodsFor: 'as yet unclassified' stamp: 'PJ 11/12/2020 22:03:00' prior: 50870111 overrides: 50869914!
reportTo: aReport
	self subclassResponsibility.! !

!testRun: #ReportTest #test05AccountSummaryReturnsAReportFromAnAccountWithATransferWithdraw stamp: 'PJ 11/12/2020 22:03:01'!
ERROR!
!TransferDeposit methodsFor: 'as yet unclassified' stamp: 'PJ 11/12/2020 22:03:08' overrides: 50870117!
reportTo: anAccountSummary 
	self shouldBeImplemented.! !
!TransferDeposit methodsFor: 'as yet unclassified' stamp: 'PJ 11/12/2020 22:04:36' prior: 50870126 overrides: 50870117!
reportTo: aReport
	aReport reportAsTransferDeposit: self.! !

!testRun: #ReportTest #test05AccountSummaryReturnsAReportFromAnAccountWithATransferWithdraw stamp: 'PJ 11/12/2020 22:04:40'!
ERROR!
!Report methodsFor: 'as yet unclassified' stamp: 'PJ 11/12/2020 22:04:48'!
reportAsTransferDeposit: aTransferDeposit 
	self shouldBeImplemented.! !
!Report methodsFor: 'as yet unclassified' stamp: 'PJ 11/12/2020 22:05:29' prior: 50870141!
reportAsTransferDeposit: aTransaction
	^'Entrada por transferencia de ', aTransaction value asString! !
!TransferDeposit methodsFor: 'as yet unclassified' stamp: 'PJ 11/12/2020 22:05:36' prior: 50870132 overrides: 50870117!
reportTo: aReport
	^aReport reportAsTransferDeposit: self.! !

!testRun: #ReportTest #test05AccountSummaryReturnsAReportFromAnAccountWithATransferWithdraw stamp: 'PJ 11/12/2020 22:05:43'!
PASSED!

!testRun: #ReportTest #test06TransferNetFromANewAccountReturnsZero stamp: 'PJ 11/12/2020 22:05:50'!
PASSED!

!testRun: #ReportTest #test01AccountSummaryFromANewAccountReturnsBalance0 stamp: 'PJ 11/12/2020 22:05:50'!
PASSED!

!testRun: #ReportTest #test02AccountSummaryReturnsAReportFromAnAccountWithADeposit stamp: 'PJ 11/12/2020 22:05:50'!
PASSED!

!testRun: #ReportTest #test03AccountSummaryReturnsAReportFromAnAccountWithAWithdraw stamp: 'PJ 11/12/2020 22:05:50'!
PASSED!

!testRun: #ReportTest #test04AccountSummaryReturnsAReportFromAnAccountWithATransferWithdraw stamp: 'PJ 11/12/2020 22:05:50'!
PASSED!

!testRun: #ReportTest #test05AccountSummaryReturnsAReportFromAnAccountWithATransferWithdraw stamp: 'PJ 11/12/2020 22:05:50'!
PASSED!

!testRun: #ReportTest #test06TransferNetFromANewAccountReturnsZero stamp: 'PJ 11/12/2020 22:05:50'!
PASSED!

----SNAPSHOT----(12 November 2020 22:05:56) CuisUniversity-4384.image priorSource: 17222617!
!Report methodsFor: 'as yet unclassified' stamp: 'PJ 11/12/2020 22:07:39' prior: 50870147!
reportAsTransferDeposit: aTransaction
	self subclassResponsibility ! !
!AccountSummary methodsFor: 'as yet unclassified' stamp: 'PJ 11/12/2020 22:08:34' overrides: 50870193!
reportAsTransferDeposit: aTransaction! !
!AccountSummary methodsFor: 'as yet unclassified' stamp: 'PJ 11/12/2020 22:09:00' prior: 50870199 overrides: 50870193!
reportAsTransferDeposit: aTransaction
	^'Entrada por transferencia de ', aTransaction value asString! !
!Report methodsFor: 'as yet unclassified' stamp: 'PJ 11/12/2020 22:09:57'!
reportAsWithdraw: aWithdraw 
	self subclassResponsibility .! !

!testRun: #ReportTest #test06TransferNetFromANewAccountReturnsZero stamp: 'PJ 11/12/2020 22:10:04'!
PASSED!

!testRun: #ReportTest #test01AccountSummaryFromANewAccountReturnsBalance0 stamp: 'PJ 11/12/2020 22:10:04'!
PASSED!

!testRun: #ReportTest #test02AccountSummaryReturnsAReportFromAnAccountWithADeposit stamp: 'PJ 11/12/2020 22:10:04'!
PASSED!

!testRun: #ReportTest #test03AccountSummaryReturnsAReportFromAnAccountWithAWithdraw stamp: 'PJ 11/12/2020 22:10:04'!
PASSED!

!testRun: #ReportTest #test04AccountSummaryReturnsAReportFromAnAccountWithATransferWithdraw stamp: 'PJ 11/12/2020 22:10:04'!
PASSED!

!testRun: #ReportTest #test05AccountSummaryReturnsAReportFromAnAccountWithATransferWithdraw stamp: 'PJ 11/12/2020 22:10:04'!
PASSED!

!testRun: #ReportTest #test06TransferNetFromANewAccountReturnsZero stamp: 'PJ 11/12/2020 22:10:04'!
PASSED!
!ReportTest methodsFor: 'transfer net' stamp: 'PJ 11/12/2020 22:15:02'!
test07TransferNetReturnsAReportFromAnAccountWithADeposit

	|account report|
	
	account := ReceptiveAccount new.
	report := TransferNet for: account.
	
	self assert: 'Transfer Net: 0' equals: report.! !
!ReportTest methodsFor: 'transfer net' stamp: 'PJ 11/12/2020 22:16:33' prior: 50870241!
test07TransferNetReturnsAReportFromAnAccountWithADeposit

	|account report|
	
	account := ReceptiveAccount new.
	Deposit register: 100 on: account.
	
	report := TransferNet for: account.
	
	self assert: 'Transfer Net: 0' equals: report.! !

!testRun: #ReportTest #test07TransferNetReturnsAReportFromAnAccountWithADeposit stamp: 'PJ 11/12/2020 22:16:35'!
PASSED!

!testRun: #ReportTest #test01AccountSummaryFromANewAccountReturnsBalance0 stamp: 'PJ 11/12/2020 22:16:35'!
PASSED!

!testRun: #ReportTest #test02AccountSummaryReturnsAReportFromAnAccountWithADeposit stamp: 'PJ 11/12/2020 22:16:35'!
PASSED!

!testRun: #ReportTest #test03AccountSummaryReturnsAReportFromAnAccountWithAWithdraw stamp: 'PJ 11/12/2020 22:16:35'!
PASSED!

!testRun: #ReportTest #test04AccountSummaryReturnsAReportFromAnAccountWithATransferWithdraw stamp: 'PJ 11/12/2020 22:16:35'!
PASSED!

!testRun: #ReportTest #test05AccountSummaryReturnsAReportFromAnAccountWithATransferWithdraw stamp: 'PJ 11/12/2020 22:16:35'!
PASSED!

!testRun: #ReportTest #test06TransferNetFromANewAccountReturnsZero stamp: 'PJ 11/12/2020 22:16:35'!
PASSED!

!testRun: #ReportTest #test07TransferNetReturnsAReportFromAnAccountWithADeposit stamp: 'PJ 11/12/2020 22:16:35'!
PASSED!
!ReportTest methodsFor: 'transfer net' stamp: 'PJ 11/12/2020 22:17:25'!
test08TransferNetReturnsAReportFromAnAccountWithAWithdraw

	|account report|
	
	account := ReceptiveAccount new.
	Withdraw register: 100 on: account.
	
	report := TransferNet for: account.
	
	self assert: 'Transfer Net: 0' equals: report.! !

!testRun: #ReportTest #test08TransferNetReturnsAReportFromAnAccountWithAWithdraw stamp: 'PJ 11/12/2020 22:18:05'!
PASSED!

!testRun: #ReportTest #test01AccountSummaryFromANewAccountReturnsBalance0 stamp: 'PJ 11/12/2020 22:18:05'!
PASSED!

!testRun: #ReportTest #test02AccountSummaryReturnsAReportFromAnAccountWithADeposit stamp: 'PJ 11/12/2020 22:18:05'!
PASSED!

!testRun: #ReportTest #test03AccountSummaryReturnsAReportFromAnAccountWithAWithdraw stamp: 'PJ 11/12/2020 22:18:05'!
PASSED!

!testRun: #ReportTest #test04AccountSummaryReturnsAReportFromAnAccountWithATransferWithdraw stamp: 'PJ 11/12/2020 22:18:05'!
PASSED!

!testRun: #ReportTest #test05AccountSummaryReturnsAReportFromAnAccountWithATransferWithdraw stamp: 'PJ 11/12/2020 22:18:05'!
PASSED!

!testRun: #ReportTest #test06TransferNetFromANewAccountReturnsZero stamp: 'PJ 11/12/2020 22:18:05'!
PASSED!

!testRun: #ReportTest #test07TransferNetReturnsAReportFromAnAccountWithADeposit stamp: 'PJ 11/12/2020 22:18:05'!
PASSED!

!testRun: #ReportTest #test08TransferNetReturnsAReportFromAnAccountWithAWithdraw stamp: 'PJ 11/12/2020 22:18:05'!
PASSED!
!ReportTest methodsFor: 'transfer net' stamp: 'PJ 11/12/2020 22:19:05'!
test08TransferNetReturnsAReportFromAnAccountWithATransferWithdraw

	|account report|
	
	account := ReceptiveAccount new.
	TransferWithdraw .
	
	report := TransferNet for: account.
	
	self assert: 'Transfer Net: 0' equals: report.! !
!ReportTest methodsFor: 'account summary' stamp: 'PJ 11/12/2020 22:19:53'!
test05AccountSummaryReturnsAReportFromAnAccountWithATransferDeposit

	|senderAccount receiverAccount report|
	
	receiverAccount := ReceptiveAccount new.
	senderAccount := ReceptiveAccount new.
	Transfer from: senderAccount to: receiverAccount amount: 20.
	
	report := AccountSummary for: receiverAccount.
	
	self assert: 2 equals: report size.
	self assert: 'Entrada por transferencia de 20' equals: (report at: 1).
	self assert: 'Balance = 20' equals: (report at: 2).! !

!methodRemoval: ReportTest #test05AccountSummaryReturnsAReportFromAnAccountWithATransferWithdraw stamp: 'PJ 11/12/2020 22:19:53'!
test05AccountSummaryReturnsAReportFromAnAccountWithATransferWithdraw

	|senderAccount receiverAccount report|
	
	receiverAccount := ReceptiveAccount new.
	senderAccount := ReceptiveAccount new.
	Transfer from: senderAccount to: receiverAccount amount: 20.
	
	report := AccountSummary for: receiverAccount.
	
	self assert: 2 equals: report size.
	self assert: 'Entrada por transferencia de 20' equals: (report at: 1).
	self assert: 'Balance = 20' equals: (report at: 2).!
!ReportTest methodsFor: 'transfer net' stamp: 'PJ 11/12/2020 22:21:22' prior: 50870292!
test08TransferNetReturnsAReportFromAnAccountWithAWithdraw

	|senderAccount receiverAccount report|
	
	receiverAccount := ReceptiveAccount new.
	senderAccount := ReceptiveAccount new.
	Transfer from: senderAccount to: receiverAccount amount: 20.
	
	report := TransferNet for: senderAccount.
	
	self assert: 'Transfer Net: -20' equals: report.! !

!testRun: #ReportTest #test08TransferNetReturnsAReportFromAnAccountWithAWithdraw stamp: 'PJ 11/12/2020 22:21:25'!
FAILURE!
!TransferNet methodsFor: 'private' stamp: 'PJ 11/12/2020 22:27:32' prior: 50869733 overrides: 50869810!
generateReportFor: anAccount 
	|net transactions|
	net := 0.
	transactions := anAccount transactions.
	
	transactions do: [:aTransaction | (aTransaction isKindOf: TransferWithdraw) ifTrue: [net := aTransaction affectBalance: net]].
	
	^'Transfer Net: ', net asString. ! !

!testRun: #ReportTest #test08TransferNetReturnsAReportFromAnAccountWithAWithdraw stamp: 'PJ 11/12/2020 22:27:34'!
PASSED!

!testRun: #ReportTest #test01AccountSummaryFromANewAccountReturnsBalance0 stamp: 'PJ 11/12/2020 22:27:34'!
PASSED!

!testRun: #ReportTest #test02AccountSummaryReturnsAReportFromAnAccountWithADeposit stamp: 'PJ 11/12/2020 22:27:34'!
PASSED!

!testRun: #ReportTest #test03AccountSummaryReturnsAReportFromAnAccountWithAWithdraw stamp: 'PJ 11/12/2020 22:27:34'!
PASSED!

!testRun: #ReportTest #test04AccountSummaryReturnsAReportFromAnAccountWithATransferWithdraw stamp: 'PJ 11/12/2020 22:27:34'!
PASSED!

!testRun: #ReportTest #test05AccountSummaryReturnsAReportFromAnAccountWithATransferDeposit stamp: 'PJ 11/12/2020 22:27:34'!
PASSED!

!testRun: #ReportTest #test06TransferNetFromANewAccountReturnsZero stamp: 'PJ 11/12/2020 22:27:34'!
PASSED!

!testRun: #ReportTest #test07TransferNetReturnsAReportFromAnAccountWithADeposit stamp: 'PJ 11/12/2020 22:27:34'!
PASSED!

!testRun: #ReportTest #test08TransferNetReturnsAReportFromAnAccountWithATransferWithdraw stamp: 'PJ 11/12/2020 22:27:34'!
PASSED!

!testRun: #ReportTest #test08TransferNetReturnsAReportFromAnAccountWithAWithdraw stamp: 'PJ 11/12/2020 22:27:34'!
PASSED!
!ReportTest methodsFor: 'transfer net' stamp: 'PJ 11/12/2020 22:28:56'!
test09TransferNetReturnsAReportFromAnAccountWithATransferWithdraw

	|senderAccount receiverAccount report|
	
	receiverAccount := ReceptiveAccount new.
	senderAccount := ReceptiveAccount new.
	Transfer from: senderAccount to: receiverAccount amount: 20.
	
	report := TransferNet for: senderAccount.
	
	self assert: 'Transfer Net: -20' equals: report.! !

!methodRemoval: ReportTest #test08TransferNetReturnsAReportFromAnAccountWithAWithdraw stamp: 'PJ 11/12/2020 22:29:08'!
test08TransferNetReturnsAReportFromAnAccountWithAWithdraw

	|senderAccount receiverAccount report|
	
	receiverAccount := ReceptiveAccount new.
	senderAccount := ReceptiveAccount new.
	Transfer from: senderAccount to: receiverAccount amount: 20.
	
	report := TransferNet for: senderAccount.
	
	self assert: 'Transfer Net: -20' equals: report.!
!ReportTest methodsFor: 'transfer net' stamp: 'PJ 11/12/2020 22:29:22'!
test08TransferNetReturnsAReportFromAnAccountWithAWithdraw

	|account report|
	
	account := ReceptiveAccount new.
	TransferWithdraw .
	
	report := TransferNet for: account.
	
	self assert: 'Transfer Net: 0' equals: report.! !

!methodRemoval: ReportTest #test08TransferNetReturnsAReportFromAnAccountWithATransferWithdraw stamp: 'PJ 11/12/2020 22:29:27'!
test08TransferNetReturnsAReportFromAnAccountWithATransferWithdraw

	|account report|
	
	account := ReceptiveAccount new.
	TransferWithdraw .
	
	report := TransferNet for: account.
	
	self assert: 'Transfer Net: 0' equals: report.!
!ReportTest methodsFor: 'transfer net' stamp: 'PJ 11/12/2020 22:30:12' prior: 50870480!
test08TransferNetReturnsAReportFromAnAccountWithAWithdraw

	|account report|
	
	account := ReceptiveAccount new.
	Withdraw register: 100 on: account.
	
	report := TransferNet for: account.
	
	self assert: 'Transfer Net: 0' equals: report.! !

!testRun: #ReportTest #test08TransferNetReturnsAReportFromAnAccountWithAWithdraw stamp: 'PJ 11/12/2020 22:30:24'!
PASSED!

!testRun: #ReportTest #test01AccountSummaryFromANewAccountReturnsBalance0 stamp: 'PJ 11/12/2020 22:30:24'!
PASSED!

!testRun: #ReportTest #test02AccountSummaryReturnsAReportFromAnAccountWithADeposit stamp: 'PJ 11/12/2020 22:30:24'!
PASSED!

!testRun: #ReportTest #test03AccountSummaryReturnsAReportFromAnAccountWithAWithdraw stamp: 'PJ 11/12/2020 22:30:24'!
PASSED!

!testRun: #ReportTest #test04AccountSummaryReturnsAReportFromAnAccountWithATransferWithdraw stamp: 'PJ 11/12/2020 22:30:24'!
PASSED!

!testRun: #ReportTest #test05AccountSummaryReturnsAReportFromAnAccountWithATransferDeposit stamp: 'PJ 11/12/2020 22:30:24'!
PASSED!

!testRun: #ReportTest #test06TransferNetFromANewAccountReturnsZero stamp: 'PJ 11/12/2020 22:30:24'!
PASSED!

!testRun: #ReportTest #test07TransferNetReturnsAReportFromAnAccountWithADeposit stamp: 'PJ 11/12/2020 22:30:24'!
PASSED!

!testRun: #ReportTest #test08TransferNetReturnsAReportFromAnAccountWithAWithdraw stamp: 'PJ 11/12/2020 22:30:25'!
PASSED!

!testRun: #ReportTest #test09TransferNetReturnsAReportFromAnAccountWithATransferWithdraw stamp: 'PJ 11/12/2020 22:30:25'!
PASSED!

Withdraw!
!ReportTest methodsFor: 'transfer net' stamp: 'PJ 11/12/2020 22:31:11'!
test10TransferNetReturnsAReportFromAnAccountWithATransferDeposit

	|senderAccount receiverAccount report|
	
	receiverAccount := ReceptiveAccount new.
	senderAccount := ReceptiveAccount new.
	Transfer from: senderAccount to: receiverAccount amount: 20.
	
	report := TransferNet for: receiverAccount.
	
	self assert: 'Transfer Net: 20' equals: report.! !

!testRun: #ReportTest #test10TransferNetReturnsAReportFromAnAccountWithATransferDeposit stamp: 'PJ 11/12/2020 22:31:13'!
FAILURE!
!TransferNet methodsFor: 'private' stamp: 'PJ 11/12/2020 22:32:04' prior: 50870402 overrides: 50869810!
generateReportFor: anAccount 
	|net transactions|
	net := 0.
	transactions := anAccount transactions.
	
	transactions do: [:aTransaction | 
		(aTransaction isKindOf: TransferWithdraw) ifTrue: [net := aTransaction affectBalance: net].
		(aTransaction isKindOf: TransferDeposit) ifTrue: [net := aTransaction affectBalance: net].
		].
	
	^'Transfer Net: ', net asString. ! !

!testRun: #ReportTest #test10TransferNetReturnsAReportFromAnAccountWithATransferDeposit stamp: 'PJ 11/12/2020 22:32:09'!
PASSED!

!testRun: #ReportTest #test01AccountSummaryFromANewAccountReturnsBalance0 stamp: 'PJ 11/12/2020 22:32:09'!
PASSED!

!testRun: #ReportTest #test02AccountSummaryReturnsAReportFromAnAccountWithADeposit stamp: 'PJ 11/12/2020 22:32:09'!
PASSED!

!testRun: #ReportTest #test03AccountSummaryReturnsAReportFromAnAccountWithAWithdraw stamp: 'PJ 11/12/2020 22:32:09'!
PASSED!

!testRun: #ReportTest #test04AccountSummaryReturnsAReportFromAnAccountWithATransferWithdraw stamp: 'PJ 11/12/2020 22:32:09'!
PASSED!

!testRun: #ReportTest #test05AccountSummaryReturnsAReportFromAnAccountWithATransferDeposit stamp: 'PJ 11/12/2020 22:32:09'!
PASSED!

!testRun: #ReportTest #test06TransferNetFromANewAccountReturnsZero stamp: 'PJ 11/12/2020 22:32:09'!
PASSED!

!testRun: #ReportTest #test07TransferNetReturnsAReportFromAnAccountWithADeposit stamp: 'PJ 11/12/2020 22:32:09'!
PASSED!

!testRun: #ReportTest #test08TransferNetReturnsAReportFromAnAccountWithAWithdraw stamp: 'PJ 11/12/2020 22:32:09'!
PASSED!

!testRun: #ReportTest #test09TransferNetReturnsAReportFromAnAccountWithATransferWithdraw stamp: 'PJ 11/12/2020 22:32:09'!
PASSED!

!testRun: #ReportTest #test10TransferNetReturnsAReportFromAnAccountWithATransferDeposit stamp: 'PJ 11/12/2020 22:32:09'!
PASSED!
!ReportTest methodsFor: 'transfer net' stamp: 'PJ 11/12/2020 22:34:18' prior: 50870550!
test10TransferNetReturnsAReportFromAnAccountWithATransferDeposit

	|senderAccount receiverAccount report|
	
	receiverAccount := ReceptiveAccount new.
	senderAccount := ReceptiveAccount new.
	Transfer from: senderAccount to: receiverAccount amount: 20.
	Transfer from: senderAccount to: receiverAccount amount: 20.	
	report := TransferNet for: receiverAccount.
	
	self assert: 'Transfer Net: 40' equals: report.! !

!testRun: #ReportTest #test10TransferNetReturnsAReportFromAnAccountWithATransferDeposit stamp: 'PJ 11/12/2020 22:34:20'!
PASSED!

!testRun: #ReportTest #test01AccountSummaryFromANewAccountReturnsBalance0 stamp: 'PJ 11/12/2020 22:34:20'!
PASSED!

!testRun: #ReportTest #test02AccountSummaryReturnsAReportFromAnAccountWithADeposit stamp: 'PJ 11/12/2020 22:34:20'!
PASSED!

!testRun: #ReportTest #test03AccountSummaryReturnsAReportFromAnAccountWithAWithdraw stamp: 'PJ 11/12/2020 22:34:20'!
PASSED!

!testRun: #ReportTest #test04AccountSummaryReturnsAReportFromAnAccountWithATransferWithdraw stamp: 'PJ 11/12/2020 22:34:20'!
PASSED!

!testRun: #ReportTest #test05AccountSummaryReturnsAReportFromAnAccountWithATransferDeposit stamp: 'PJ 11/12/2020 22:34:20'!
PASSED!

!testRun: #ReportTest #test06TransferNetFromANewAccountReturnsZero stamp: 'PJ 11/12/2020 22:34:20'!
PASSED!

!testRun: #ReportTest #test07TransferNetReturnsAReportFromAnAccountWithADeposit stamp: 'PJ 11/12/2020 22:34:20'!
PASSED!

!testRun: #ReportTest #test08TransferNetReturnsAReportFromAnAccountWithAWithdraw stamp: 'PJ 11/12/2020 22:34:20'!
PASSED!

!testRun: #ReportTest #test09TransferNetReturnsAReportFromAnAccountWithATransferWithdraw stamp: 'PJ 11/12/2020 22:34:20'!
PASSED!

!testRun: #ReportTest #test10TransferNetReturnsAReportFromAnAccountWithATransferDeposit stamp: 'PJ 11/12/2020 22:34:20'!
PASSED!
!ReportTest methodsFor: 'transfer net' stamp: 'PJ 11/12/2020 22:34:36' prior: 50870627!
test10TransferNetReturnsAReportFromAnAccountWithATransferDeposit

	|senderAccount receiverAccount report|
	
	receiverAccount := ReceptiveAccount new.
	senderAccount := ReceptiveAccount new.
	Transfer from: senderAccount to: receiverAccount amount: 20.
		
	report := TransferNet for: receiverAccount.
	
	self assert: 'Transfer Net: 20' equals: report.! !

!testRun: #ReportTest #test10TransferNetReturnsAReportFromAnAccountWithATransferDeposit stamp: 'PJ 11/12/2020 22:34:39'!
PASSED!

!testRun: #ReportTest #test01AccountSummaryFromANewAccountReturnsBalance0 stamp: 'PJ 11/12/2020 22:34:39'!
PASSED!

!testRun: #ReportTest #test02AccountSummaryReturnsAReportFromAnAccountWithADeposit stamp: 'PJ 11/12/2020 22:34:39'!
PASSED!

!testRun: #ReportTest #test03AccountSummaryReturnsAReportFromAnAccountWithAWithdraw stamp: 'PJ 11/12/2020 22:34:39'!
PASSED!

!testRun: #ReportTest #test04AccountSummaryReturnsAReportFromAnAccountWithATransferWithdraw stamp: 'PJ 11/12/2020 22:34:39'!
PASSED!

!testRun: #ReportTest #test05AccountSummaryReturnsAReportFromAnAccountWithATransferDeposit stamp: 'PJ 11/12/2020 22:34:39'!
PASSED!

!testRun: #ReportTest #test06TransferNetFromANewAccountReturnsZero stamp: 'PJ 11/12/2020 22:34:39'!
PASSED!

!testRun: #ReportTest #test07TransferNetReturnsAReportFromAnAccountWithADeposit stamp: 'PJ 11/12/2020 22:34:39'!
PASSED!

!testRun: #ReportTest #test08TransferNetReturnsAReportFromAnAccountWithAWithdraw stamp: 'PJ 11/12/2020 22:34:39'!
PASSED!

!testRun: #ReportTest #test09TransferNetReturnsAReportFromAnAccountWithATransferWithdraw stamp: 'PJ 11/12/2020 22:34:39'!
PASSED!

!testRun: #ReportTest #test10TransferNetReturnsAReportFromAnAccountWithATransferDeposit stamp: 'PJ 11/12/2020 22:34:39'!
PASSED!
!TransferNet methodsFor: 'private' stamp: 'PJ 11/12/2020 22:35:32' prior: 50870569 overrides: 50869810!
generateReportFor: anAccount 
	|net transactions|
	net := 0.
	transactions := anAccount transactions.
	
	transactions do: [:aTransaction | 
		(aTransaction isKindOf: TransferWithdraw) ifTrue: [net := aTransaction reportTo: self].
		(aTransaction isKindOf: TransferDeposit) ifTrue: [net := aTransaction affectBalance: net].
		].
	
	^'Transfer Net: ', net asString. ! !

!testRun: #ReportTest #test10TransferNetReturnsAReportFromAnAccountWithATransferDeposit stamp: 'PJ 11/12/2020 22:35:37'!
PASSED!

!testRun: #ReportTest #test01AccountSummaryFromANewAccountReturnsBalance0 stamp: 'PJ 11/12/2020 22:35:37'!
PASSED!

!testRun: #ReportTest #test02AccountSummaryReturnsAReportFromAnAccountWithADeposit stamp: 'PJ 11/12/2020 22:35:37'!
PASSED!

!testRun: #ReportTest #test03AccountSummaryReturnsAReportFromAnAccountWithAWithdraw stamp: 'PJ 11/12/2020 22:35:37'!
PASSED!

!testRun: #ReportTest #test04AccountSummaryReturnsAReportFromAnAccountWithATransferWithdraw stamp: 'PJ 11/12/2020 22:35:37'!
PASSED!

!testRun: #ReportTest #test05AccountSummaryReturnsAReportFromAnAccountWithATransferDeposit stamp: 'PJ 11/12/2020 22:35:37'!
PASSED!

!testRun: #ReportTest #test06TransferNetFromANewAccountReturnsZero stamp: 'PJ 11/12/2020 22:35:37'!
PASSED!

!testRun: #ReportTest #test07TransferNetReturnsAReportFromAnAccountWithADeposit stamp: 'PJ 11/12/2020 22:35:37'!
PASSED!

!testRun: #ReportTest #test08TransferNetReturnsAReportFromAnAccountWithAWithdraw stamp: 'PJ 11/12/2020 22:35:38'!
PASSED!

!testRun: #ReportTest #test09TransferNetReturnsAReportFromAnAccountWithATransferWithdraw stamp: 'PJ 11/12/2020 22:35:38'!
ERROR!

!testRun: #ReportTest #test10TransferNetReturnsAReportFromAnAccountWithATransferDeposit stamp: 'PJ 11/12/2020 22:35:38'!
PASSED!

!testRun: #ReportTest #test09TransferNetReturnsAReportFromAnAccountWithATransferWithdraw stamp: 'PJ 11/12/2020 22:35:38'!
ERROR!
!TransferNet methodsFor: 'as yet unclassified' stamp: 'PJ 11/12/2020 22:35:49' overrides: 50870072!
reportAsTransferWithdraw: aTransferWithdraw 
	self shouldBeImplemented.! !
!TransferNet methodsFor: 'as yet unclassified' stamp: 'PJ 11/12/2020 22:38:05' prior: 50870806 overrides: 50870072!
reportAsTransferWithdraw: aTransaction 
	^[:aBalance | aTransaction affectBalance: aBalance]! !

!testRun: #ReportTest #test09TransferNetReturnsAReportFromAnAccountWithATransferWithdraw stamp: 'PJ 11/12/2020 22:38:10'!
FAILURE!
!TransferNet methodsFor: 'private' stamp: 'PJ 11/12/2020 22:39:02' prior: 50870744 overrides: 50869810!
generateReportFor: anAccount 
	|net transactions|
	net := 0.
	transactions := anAccount transactions.
	
	transactions do: [:aTransaction | 
		(aTransaction isKindOf: TransferWithdraw) ifTrue: [net := (aTransaction reportTo: self) value: net].
		(aTransaction isKindOf: TransferDeposit) ifTrue: [net := aTransaction affectBalance: net].
		].
	
	^'Transfer Net: ', net asString. ! !

!testRun: #ReportTest #test09TransferNetReturnsAReportFromAnAccountWithATransferWithdraw stamp: 'PJ 11/12/2020 22:39:16'!
PASSED!

!testRun: #ReportTest #test10TransferNetReturnsAReportFromAnAccountWithATransferDeposit stamp: 'PJ 11/12/2020 22:39:20'!
PASSED!

!testRun: #ReportTest #test01AccountSummaryFromANewAccountReturnsBalance0 stamp: 'PJ 11/12/2020 22:39:20'!
PASSED!

!testRun: #ReportTest #test02AccountSummaryReturnsAReportFromAnAccountWithADeposit stamp: 'PJ 11/12/2020 22:39:20'!
PASSED!

!testRun: #ReportTest #test03AccountSummaryReturnsAReportFromAnAccountWithAWithdraw stamp: 'PJ 11/12/2020 22:39:20'!
PASSED!

!testRun: #ReportTest #test04AccountSummaryReturnsAReportFromAnAccountWithATransferWithdraw stamp: 'PJ 11/12/2020 22:39:20'!
PASSED!

!testRun: #ReportTest #test05AccountSummaryReturnsAReportFromAnAccountWithATransferDeposit stamp: 'PJ 11/12/2020 22:39:20'!
PASSED!

!testRun: #ReportTest #test06TransferNetFromANewAccountReturnsZero stamp: 'PJ 11/12/2020 22:39:20'!
PASSED!

!testRun: #ReportTest #test07TransferNetReturnsAReportFromAnAccountWithADeposit stamp: 'PJ 11/12/2020 22:39:20'!
PASSED!

!testRun: #ReportTest #test08TransferNetReturnsAReportFromAnAccountWithAWithdraw stamp: 'PJ 11/12/2020 22:39:20'!
PASSED!

!testRun: #ReportTest #test09TransferNetReturnsAReportFromAnAccountWithATransferWithdraw stamp: 'PJ 11/12/2020 22:39:20'!
PASSED!

!testRun: #ReportTest #test10TransferNetReturnsAReportFromAnAccountWithATransferDeposit stamp: 'PJ 11/12/2020 22:39:20'!
PASSED!
!TransferNet methodsFor: 'private' stamp: 'PJ 11/12/2020 22:40:27' prior: 50870823 overrides: 50869810!
generateReportFor: anAccount 
	|net transactions|
	net := 0.
	transactions := anAccount transactions.
	
	transactions do: [:aTransaction | 		net := (aTransaction reportTo: self) value: net].
	
	^'Transfer Net: ', net asString. ! !

!testRun: #ReportTest #test10TransferNetReturnsAReportFromAnAccountWithATransferDeposit stamp: 'PJ 11/12/2020 22:40:54'!
ERROR!
!TransferNet methodsFor: 'as yet unclassified' stamp: 'PJ 11/12/2020 22:41:10' overrides: 50870193!
reportAsTransferDeposit: aTransferDeposit 
	self shouldBeImplemented.! !
!TransferNet methodsFor: 'as yet unclassified' stamp: 'PJ 11/12/2020 22:41:24' prior: 50870901 overrides: 50870193!
reportAsTransferDeposit: aTransaction 
	^[:aBalance | aTransaction affectBalance: aBalance]! !

!testRun: #ReportTest #test10TransferNetReturnsAReportFromAnAccountWithATransferDeposit stamp: 'PJ 11/12/2020 22:41:40'!
PASSED!

!testRun: #ReportTest #test01AccountSummaryFromANewAccountReturnsBalance0 stamp: 'PJ 11/12/2020 22:41:40'!
PASSED!

!testRun: #ReportTest #test02AccountSummaryReturnsAReportFromAnAccountWithADeposit stamp: 'PJ 11/12/2020 22:41:40'!
PASSED!

!testRun: #ReportTest #test03AccountSummaryReturnsAReportFromAnAccountWithAWithdraw stamp: 'PJ 11/12/2020 22:41:40'!
PASSED!

!testRun: #ReportTest #test04AccountSummaryReturnsAReportFromAnAccountWithATransferWithdraw stamp: 'PJ 11/12/2020 22:41:40'!
PASSED!

!testRun: #ReportTest #test05AccountSummaryReturnsAReportFromAnAccountWithATransferDeposit stamp: 'PJ 11/12/2020 22:41:40'!
PASSED!

!testRun: #ReportTest #test06TransferNetFromANewAccountReturnsZero stamp: 'PJ 11/12/2020 22:41:40'!
PASSED!

!testRun: #ReportTest #test07TransferNetReturnsAReportFromAnAccountWithADeposit stamp: 'PJ 11/12/2020 22:41:40'!
ERROR!

!testRun: #ReportTest #test08TransferNetReturnsAReportFromAnAccountWithAWithdraw stamp: 'PJ 11/12/2020 22:41:40'!
ERROR!

!testRun: #ReportTest #test09TransferNetReturnsAReportFromAnAccountWithATransferWithdraw stamp: 'PJ 11/12/2020 22:41:40'!
PASSED!

!testRun: #ReportTest #test10TransferNetReturnsAReportFromAnAccountWithATransferDeposit stamp: 'PJ 11/12/2020 22:41:40'!
PASSED!

!testRun: #ReportTest #test07TransferNetReturnsAReportFromAnAccountWithADeposit stamp: 'PJ 11/12/2020 22:41:46'!
ERROR!
!TransferNet methodsFor: 'as yet unclassified' stamp: 'PJ 11/12/2020 22:41:53' overrides: 50869942!
reportAsDeposit: aDeposit 
	self shouldBeImplemented.! !
!TransferNet methodsFor: 'as yet unclassified' stamp: 'PJ 11/12/2020 22:42:35' prior: 50870960 overrides: 50869942!
reportAsDeposit: aTransaction 
	^[:aBalance | aBalance]! !

!testRun: #ReportTest #test07TransferNetReturnsAReportFromAnAccountWithADeposit stamp: 'PJ 11/12/2020 22:42:36'!
PASSED!

!testRun: #ReportTest #test08TransferNetReturnsAReportFromAnAccountWithAWithdraw stamp: 'PJ 11/12/2020 22:42:38'!
ERROR!
!TransferNet methodsFor: 'as yet unclassified' stamp: 'PJ 11/12/2020 22:42:43' overrides: 50870210!
reportAsWithdraw: aWithdraw 
	self shouldBeImplemented.! !
!TransferNet methodsFor: 'as yet unclassified' stamp: 'PJ 11/12/2020 22:42:50' prior: 50870979 overrides: 50870210!
reportAsWithdraw: aTransaction 
	^[:aBalance | aBalance]! !

!testRun: #ReportTest #test08TransferNetReturnsAReportFromAnAccountWithAWithdraw stamp: 'PJ 11/12/2020 22:42:51'!
PASSED!

!testRun: #ReportTest #test10TransferNetReturnsAReportFromAnAccountWithATransferDeposit stamp: 'PJ 11/12/2020 22:42:55'!
PASSED!

!testRun: #ReportTest #test01AccountSummaryFromANewAccountReturnsBalance0 stamp: 'PJ 11/12/2020 22:42:55'!
PASSED!

!testRun: #ReportTest #test02AccountSummaryReturnsAReportFromAnAccountWithADeposit stamp: 'PJ 11/12/2020 22:42:55'!
PASSED!

!testRun: #ReportTest #test03AccountSummaryReturnsAReportFromAnAccountWithAWithdraw stamp: 'PJ 11/12/2020 22:42:55'!
PASSED!

!testRun: #ReportTest #test04AccountSummaryReturnsAReportFromAnAccountWithATransferWithdraw stamp: 'PJ 11/12/2020 22:42:55'!
PASSED!

!testRun: #ReportTest #test05AccountSummaryReturnsAReportFromAnAccountWithATransferDeposit stamp: 'PJ 11/12/2020 22:42:55'!
PASSED!

!testRun: #ReportTest #test06TransferNetFromANewAccountReturnsZero stamp: 'PJ 11/12/2020 22:42:55'!
PASSED!

!testRun: #ReportTest #test07TransferNetReturnsAReportFromAnAccountWithADeposit stamp: 'PJ 11/12/2020 22:42:55'!
PASSED!

!testRun: #ReportTest #test08TransferNetReturnsAReportFromAnAccountWithAWithdraw stamp: 'PJ 11/12/2020 22:42:55'!
PASSED!

!testRun: #ReportTest #test09TransferNetReturnsAReportFromAnAccountWithATransferWithdraw stamp: 'PJ 11/12/2020 22:42:55'!
PASSED!

!testRun: #ReportTest #test10TransferNetReturnsAReportFromAnAccountWithATransferDeposit stamp: 'PJ 11/12/2020 22:42:55'!
PASSED!

----SNAPSHOT----(12 November 2020 22:45:01) CuisUniversity-4384.image priorSource: 17233240!
!TransferNet methodsFor: 'private' stamp: 'PJ 11/12/2020 22:47:23' prior: 50870886 overrides: 50869810!
generateReportFor: anAccount 
	|net transactions|
	net := 0.
	transactions := anAccount transactions.
	
	transactions do: [:aTransaction | 		net := (aTransaction reportTo: self) + net].
	
	^'Transfer Net: ', net asString. ! !
!TransferNet methodsFor: 'as yet unclassified' stamp: 'PJ 11/12/2020 22:47:38' prior: 50870966 overrides: 50869942!
reportAsDeposit: aTransaction 
	^0! !
!TransferNet methodsFor: 'as yet unclassified' stamp: 'PJ 11/12/2020 22:47:56' prior: 50870907 overrides: 50870193!
reportAsTransferDeposit: aTransaction 
	^aTransaction affectBalance: 0! !
!TransferNet methodsFor: 'as yet unclassified' stamp: 'PJ 11/12/2020 22:48:13' prior: 50870812 overrides: 50870072!
reportAsTransferWithdraw: aTransaction 
	^aTransaction affectBalance: 0! !
!TransferNet methodsFor: 'as yet unclassified' stamp: 'PJ 11/12/2020 22:48:24' prior: 50870985 overrides: 50870210!
reportAsWithdraw: aTransaction 
	^0! !

!testRun: #ReportTest #test10TransferNetReturnsAReportFromAnAccountWithATransferDeposit stamp: 'PJ 11/12/2020 22:48:43'!
PASSED!

!testRun: #ReportTest #test01AccountSummaryFromANewAccountReturnsBalance0 stamp: 'PJ 11/12/2020 22:48:43'!
PASSED!

!testRun: #ReportTest #test02AccountSummaryReturnsAReportFromAnAccountWithADeposit stamp: 'PJ 11/12/2020 22:48:43'!
PASSED!

!testRun: #ReportTest #test03AccountSummaryReturnsAReportFromAnAccountWithAWithdraw stamp: 'PJ 11/12/2020 22:48:43'!
PASSED!

!testRun: #ReportTest #test04AccountSummaryReturnsAReportFromAnAccountWithATransferWithdraw stamp: 'PJ 11/12/2020 22:48:44'!
PASSED!

!testRun: #ReportTest #test05AccountSummaryReturnsAReportFromAnAccountWithATransferDeposit stamp: 'PJ 11/12/2020 22:48:44'!
PASSED!

!testRun: #ReportTest #test06TransferNetFromANewAccountReturnsZero stamp: 'PJ 11/12/2020 22:48:44'!
PASSED!

!testRun: #ReportTest #test07TransferNetReturnsAReportFromAnAccountWithADeposit stamp: 'PJ 11/12/2020 22:48:44'!
PASSED!

!testRun: #ReportTest #test08TransferNetReturnsAReportFromAnAccountWithAWithdraw stamp: 'PJ 11/12/2020 22:48:44'!
PASSED!

!testRun: #ReportTest #test09TransferNetReturnsAReportFromAnAccountWithATransferWithdraw stamp: 'PJ 11/12/2020 22:48:44'!
PASSED!

!testRun: #ReportTest #test10TransferNetReturnsAReportFromAnAccountWithATransferDeposit stamp: 'PJ 11/12/2020 22:48:44'!
PASSED!

----SNAPSHOT----(12 November 2020 22:55:59) CuisUniversity-4384.image priorSource: 17260345!
!TransferNet methodsFor: 'private' stamp: 'PJ 11/12/2020 23:04:58' prior: 50871040 overrides: 50869810!
generateReportFor: anAccount 
	|net transactions|
	net := 0.
	transactions := anAccount reportTo: self.
	
	
	
	^'Transfer Net: ', net asString. ! !

!testRun: #ReportTest #test10TransferNetReturnsAReportFromAnAccountWithATransferDeposit stamp: 'PJ 11/12/2020 23:05:15'!
ERROR!
!Account methodsFor: 'as yet unclassified' stamp: 'PJ 11/12/2020 23:05:25'!
reportTo: aTransferNet 
	self shouldBeImplemented.! !
!Account methodsFor: 'as yet unclassified' stamp: 'PJ 11/12/2020 23:05:43' prior: 50871131!
reportTo: aReport 
	self subclassResponsibility.! !

!testRun: #ReportTest #test10TransferNetReturnsAReportFromAnAccountWithATransferDeposit stamp: 'PJ 11/12/2020 23:05:45'!
ERROR!
!ReceptiveAccount methodsFor: 'as yet unclassified' stamp: 'PJ 11/12/2020 23:05:57' overrides: 50871136!
reportTo: aTransferNet 
	self shouldBeImplemented.! !
!ReceptiveAccount methodsFor: 'as yet unclassified' stamp: 'PJ 11/12/2020 23:10:07' prior: 50871145 overrides: 50871136!
reportTo: aReport 
	transactions do: [:aTransaction | 	aReport reportTransaction: (aTransaction reportTo: aReport )].! !
!ReceptiveAccount methodsFor: 'as yet unclassified' stamp: 'PJ 11/12/2020 23:11:39' prior: 50871151 overrides: 50871136!
reportTo: aReport 
	transactions do: [:aTransaction | 	aReport reportTransactionInfo: (aTransaction reportTo: aReport )].! !

!testRun: #ReportTest #test10TransferNetReturnsAReportFromAnAccountWithATransferDeposit stamp: 'PJ 11/12/2020 23:12:25'!
ERROR!
!TransferNet methodsFor: 'as yet unclassified' stamp: 'PJ 11/12/2020 23:12:32'!
reportTransactionInfo: aSmallInteger 
	self shouldBeImplemented.! !

!classDefinition: #TransferNet category: 'Portfolio-Solucion' stamp: 'PJ 11/12/2020 23:14:22'!
Report subclass: #TransferNet
	instanceVariableNames: 'netValue'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!
!TransferNet methodsFor: 'as yet unclassified' stamp: 'PJ 11/12/2020 23:14:20' prior: 50871170!
reportTransactionInfo: aValue 
	netValue := netValue + aValue.! !

!testRun: #ReportTest #test10TransferNetReturnsAReportFromAnAccountWithATransferDeposit stamp: 'PJ 11/12/2020 23:14:27'!
ERROR!
!TransferNet methodsFor: 'private' stamp: 'PJ 11/12/2020 23:15:28' prior: 50871119 overrides: 50869810!
generateReportFor: anAccount 
	
	netValue := 0.
	
	anAccount reportTo: self.
		
	^'Transfer Net: ', netValue asString. ! !

!testRun: #ReportTest #test10TransferNetReturnsAReportFromAnAccountWithATransferDeposit stamp: 'PJ 11/12/2020 23:15:41'!
PASSED!

!testRun: #ReportTest #test01AccountSummaryFromANewAccountReturnsBalance0 stamp: 'PJ 11/12/2020 23:15:41'!
PASSED!

!testRun: #ReportTest #test02AccountSummaryReturnsAReportFromAnAccountWithADeposit stamp: 'PJ 11/12/2020 23:15:41'!
PASSED!

!testRun: #ReportTest #test03AccountSummaryReturnsAReportFromAnAccountWithAWithdraw stamp: 'PJ 11/12/2020 23:15:41'!
PASSED!

!testRun: #ReportTest #test04AccountSummaryReturnsAReportFromAnAccountWithATransferWithdraw stamp: 'PJ 11/12/2020 23:15:41'!
PASSED!

!testRun: #ReportTest #test05AccountSummaryReturnsAReportFromAnAccountWithATransferDeposit stamp: 'PJ 11/12/2020 23:15:41'!
PASSED!

!testRun: #ReportTest #test06TransferNetFromANewAccountReturnsZero stamp: 'PJ 11/12/2020 23:15:41'!
PASSED!

!testRun: #ReportTest #test07TransferNetReturnsAReportFromAnAccountWithADeposit stamp: 'PJ 11/12/2020 23:15:41'!
PASSED!

!testRun: #ReportTest #test08TransferNetReturnsAReportFromAnAccountWithAWithdraw stamp: 'PJ 11/12/2020 23:15:41'!
PASSED!

!testRun: #ReportTest #test09TransferNetReturnsAReportFromAnAccountWithATransferWithdraw stamp: 'PJ 11/12/2020 23:15:41'!
PASSED!

!testRun: #ReportTest #test10TransferNetReturnsAReportFromAnAccountWithATransferDeposit stamp: 'PJ 11/12/2020 23:15:41'!
PASSED!
!ReportTest methodsFor: 'transfer net' stamp: 'PJ 11/12/2020 23:18:28'!
test11TransferNetWorksWithAnEmptyPortfolio

	|portfolio report|
	
	portfolio := Portfolio new.
		
	report := TransferNet for: portfolio .
	
	self assert: 'Transfer Net: 0' equals: report.! !

!testRun: #ReportTest #test11TransferNetWorksWithAnEmptyPortfolio stamp: 'PJ 11/12/2020 23:19:17'!
ERROR!
!Account methodsFor: 'as yet unclassified' stamp: 'PJ 11/12/2020 23:19:26' prior: 50871136!
reportTo: aTransferNet 
	self shouldBeImplemented.! !
!Account methodsFor: 'as yet unclassified' stamp: 'PJ 11/12/2020 23:19:40' prior: 50871256!
reportTo: aReport 
	self subclassResponsibility.! !

!testRun: #ReportTest #test11TransferNetWorksWithAnEmptyPortfolio stamp: 'PJ 11/12/2020 23:19:42'!
ERROR!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'PJ 11/12/2020 23:19:48' overrides: 50871261!
reportTo: aTransferNet 
	self shouldBeImplemented.! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'PJ 11/12/2020 23:20:04' prior: 50871270 overrides: 50871261!
reportTo: aReport 
	self transactions do: [:aTransaction | 	aReport reportTransactionInfo: (aTransaction reportTo: aReport )].! !

!testRun: #ReportTest #test11TransferNetWorksWithAnEmptyPortfolio stamp: 'PJ 11/12/2020 23:20:10'!
PASSED!

!testRun: #ReportTest #test01AccountSummaryFromANewAccountReturnsBalance0 stamp: 'PJ 11/12/2020 23:20:10'!
PASSED!

!testRun: #ReportTest #test02AccountSummaryReturnsAReportFromAnAccountWithADeposit stamp: 'PJ 11/12/2020 23:20:10'!
PASSED!

!testRun: #ReportTest #test03AccountSummaryReturnsAReportFromAnAccountWithAWithdraw stamp: 'PJ 11/12/2020 23:20:10'!
PASSED!

!testRun: #ReportTest #test04AccountSummaryReturnsAReportFromAnAccountWithATransferWithdraw stamp: 'PJ 11/12/2020 23:20:10'!
PASSED!

!testRun: #ReportTest #test05AccountSummaryReturnsAReportFromAnAccountWithATransferDeposit stamp: 'PJ 11/12/2020 23:20:10'!
PASSED!

!testRun: #ReportTest #test06TransferNetFromANewAccountReturnsZero stamp: 'PJ 11/12/2020 23:20:10'!
PASSED!

!testRun: #ReportTest #test07TransferNetReturnsAReportFromAnAccountWithADeposit stamp: 'PJ 11/12/2020 23:20:10'!
PASSED!

!testRun: #ReportTest #test08TransferNetReturnsAReportFromAnAccountWithAWithdraw stamp: 'PJ 11/12/2020 23:20:10'!
PASSED!

!testRun: #ReportTest #test09TransferNetReturnsAReportFromAnAccountWithATransferWithdraw stamp: 'PJ 11/12/2020 23:20:10'!
PASSED!

!testRun: #ReportTest #test10TransferNetReturnsAReportFromAnAccountWithATransferDeposit stamp: 'PJ 11/12/2020 23:20:10'!
PASSED!

!testRun: #ReportTest #test11TransferNetWorksWithAnEmptyPortfolio stamp: 'PJ 11/12/2020 23:20:10'!
PASSED!
!ReportTest methodsFor: 'transfer net' stamp: 'PJ 11/12/2020 23:34:11'!
test11TransferNetWorksWithAPortfolio

	|portfolio account account2 report|
	
	account := ReceptiveAccount new.
	account2 := ReceptiveAccount new.
	
	Deposit register: 100 on: account.
	Transfer from: account to: account2 amount: 50. 
	Transfer from: account2 to: account amount: 5. 
		
	portfolio := Portfolio with: account.
		
	report := TransferNet for: portfolio .
	
	self assert: 'Transfer Net: -45' equals: report.! !

!testRun: #ReportTest #test11TransferNetWorksWithAPortfolio stamp: 'PJ 11/12/2020 23:34:16'!
PASSED!

!testRun: #ReportTest #test01AccountSummaryFromANewAccountReturnsBalance0 stamp: 'PJ 11/12/2020 23:34:16'!
PASSED!

!testRun: #ReportTest #test02AccountSummaryReturnsAReportFromAnAccountWithADeposit stamp: 'PJ 11/12/2020 23:34:16'!
PASSED!

!testRun: #ReportTest #test03AccountSummaryReturnsAReportFromAnAccountWithAWithdraw stamp: 'PJ 11/12/2020 23:34:16'!
PASSED!

!testRun: #ReportTest #test04AccountSummaryReturnsAReportFromAnAccountWithATransferWithdraw stamp: 'PJ 11/12/2020 23:34:16'!
PASSED!

!testRun: #ReportTest #test05AccountSummaryReturnsAReportFromAnAccountWithATransferDeposit stamp: 'PJ 11/12/2020 23:34:16'!
PASSED!

!testRun: #ReportTest #test06TransferNetFromANewAccountReturnsZero stamp: 'PJ 11/12/2020 23:34:16'!
PASSED!

!testRun: #ReportTest #test07TransferNetReturnsAReportFromAnAccountWithADeposit stamp: 'PJ 11/12/2020 23:34:16'!
PASSED!

!testRun: #ReportTest #test08TransferNetReturnsAReportFromAnAccountWithAWithdraw stamp: 'PJ 11/12/2020 23:34:16'!
PASSED!

!testRun: #ReportTest #test09TransferNetReturnsAReportFromAnAccountWithATransferWithdraw stamp: 'PJ 11/12/2020 23:34:16'!
PASSED!

!testRun: #ReportTest #test10TransferNetReturnsAReportFromAnAccountWithATransferDeposit stamp: 'PJ 11/12/2020 23:34:16'!
PASSED!

!testRun: #ReportTest #test11TransferNetWorksWithAPortfolio stamp: 'PJ 11/12/2020 23:34:16'!
PASSED!

!testRun: #ReportTest #test11TransferNetWorksWithAnEmptyPortfolio stamp: 'PJ 11/12/2020 23:34:16'!
PASSED!

!methodRemoval: ReportTest #test11TransferNetWorksWithAnEmptyPortfolio stamp: 'PJ 11/12/2020 23:34:29'!
test11TransferNetWorksWithAnEmptyPortfolio

	|portfolio report|
	
	portfolio := Portfolio new.
		
	report := TransferNet for: portfolio .
	
	self assert: 'Transfer Net: 0' equals: report.!

----QUIT----(12 November 2020 23:36:38) CuisUniversity-4384.image priorSource: 17262857!

----STARTUP---- (14 November 2020 20:10:54) as C:\Users\paujimenez\Documents\Ingenieria1\cuisWindows64\19-windows64-Portfolio2\CuisUniversity-4384.image!

!Account methodsFor: 'as yet unclassified' stamp: 'PJ 11/14/2020 20:27:44'!
report: myTransactions To: aReport 
	myTransactions do: [:aTransaction | 	aReport reportTransactionInfo: (aTransaction reportTo: aReport )].! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'PJ 11/14/2020 20:33:55' prior: 50871276 overrides: 50871261!
reportTo: aReport 
	self report: self transactions To: aReport .! !
!ReceptiveAccount methodsFor: 'as yet unclassified' stamp: 'PJ 11/14/2020 20:34:15' prior: 50871159 overrides: 50871261!
reportTo: aReport 
	self report: transactions To: aReport .! !

!testRun: #ReportTest #test11TransferNetWorksWithAPortfolio stamp: 'PJ 11/14/2020 20:34:30'!
PASSED!

!testRun: #ReportTest #test01AccountSummaryFromANewAccountReturnsBalance0 stamp: 'PJ 11/14/2020 20:34:30'!
PASSED!

!testRun: #ReportTest #test02AccountSummaryReturnsAReportFromAnAccountWithADeposit stamp: 'PJ 11/14/2020 20:34:30'!
PASSED!

!testRun: #ReportTest #test03AccountSummaryReturnsAReportFromAnAccountWithAWithdraw stamp: 'PJ 11/14/2020 20:34:30'!
PASSED!

!testRun: #ReportTest #test04AccountSummaryReturnsAReportFromAnAccountWithATransferWithdraw stamp: 'PJ 11/14/2020 20:34:30'!
PASSED!

!testRun: #ReportTest #test05AccountSummaryReturnsAReportFromAnAccountWithATransferDeposit stamp: 'PJ 11/14/2020 20:34:30'!
PASSED!

!testRun: #ReportTest #test06TransferNetFromANewAccountReturnsZero stamp: 'PJ 11/14/2020 20:34:30'!
PASSED!

!testRun: #ReportTest #test07TransferNetReturnsAReportFromAnAccountWithADeposit stamp: 'PJ 11/14/2020 20:34:30'!
PASSED!

!testRun: #ReportTest #test08TransferNetReturnsAReportFromAnAccountWithAWithdraw stamp: 'PJ 11/14/2020 20:34:30'!
PASSED!

!testRun: #ReportTest #test09TransferNetReturnsAReportFromAnAccountWithATransferWithdraw stamp: 'PJ 11/14/2020 20:34:30'!
PASSED!

!testRun: #ReportTest #test10TransferNetReturnsAReportFromAnAccountWithATransferDeposit stamp: 'PJ 11/14/2020 20:34:30'!
PASSED!

!testRun: #ReportTest #test11TransferNetWorksWithAPortfolio stamp: 'PJ 11/14/2020 20:34:30'!
PASSED!
!TransferNet methodsFor: 'private' stamp: 'PJ 11/14/2020 20:41:29'!
reportZero
	
	^0.! !
!TransferNet methodsFor: 'private' stamp: 'PJ 11/14/2020 20:42:53'!
reportAffectedBalance: aTransaction
	
	^aTransaction affectBalance: 0.! !
!TransferNet methodsFor: 'as yet unclassified' stamp: 'PJ 11/14/2020 20:43:41' prior: 50871056 overrides: 50870193!
reportAsTransferDeposit: aTransaction 
	^self reportAffectedBalance: aTransaction! !
!TransferNet methodsFor: 'as yet unclassified' stamp: 'PJ 11/14/2020 20:44:00' prior: 50871062 overrides: 50870072!
reportAsTransferWithdraw: aTransaction 
	^self reportAffectedBalance: aTransaction! !
!TransferNet methodsFor: 'as yet unclassified' stamp: 'PJ 11/14/2020 20:44:36' prior: 50871051 overrides: 50869942!
reportAsDeposit: aTransaction 
	^self reportZero ! !
!TransferNet methodsFor: 'as yet unclassified' stamp: 'PJ 11/14/2020 20:44:42' prior: 50871068 overrides: 50870210!
reportAsWithdraw: aTransaction 
	^self reportZero ! !
!TransferNet methodsFor: 'private' stamp: 'PJ 11/14/2020 20:53:08' prior: 50871479!
reportAffectedBalance: aTransaction
	
	^netValue := netValue + (aTransaction affectBalance: 0).! !

!methodRemoval: TransferNet #reportZero stamp: 'PJ 11/14/2020 20:53:35'!
reportZero
	
	^0.!
!TransferNet methodsFor: 'as yet unclassified' stamp: 'PJ 11/14/2020 20:53:44' prior: 50871499 overrides: 50869942!
reportAsDeposit: aTransaction 
	! !
!TransferNet methodsFor: 'as yet unclassified' stamp: 'PJ 11/14/2020 20:53:51' prior: 50871505 overrides: 50870210!
reportAsWithdraw: aTransaction 
	! !
!TransferNet methodsFor: 'private' stamp: 'PJ 11/14/2020 20:54:58' prior: 50871510!
reportAffectedBalance: aTransaction
	
	^netValue := aTransaction affectBalance: netValue.! !
!Account methodsFor: 'as yet unclassified' stamp: 'PJ 11/14/2020 20:55:18' prior: 50871411!
report: myTransactions To: aReport 
	myTransactions do: [:aTransaction |aTransaction reportTo: aReport ].! !

!testRun: #ReportTest #test11TransferNetWorksWithAPortfolio stamp: 'PJ 11/14/2020 20:55:28'!
PASSED!

!testRun: #ReportTest #test01AccountSummaryFromANewAccountReturnsBalance0 stamp: 'PJ 11/14/2020 20:55:28'!
PASSED!

!testRun: #ReportTest #test02AccountSummaryReturnsAReportFromAnAccountWithADeposit stamp: 'PJ 11/14/2020 20:55:28'!
PASSED!

!testRun: #ReportTest #test03AccountSummaryReturnsAReportFromAnAccountWithAWithdraw stamp: 'PJ 11/14/2020 20:55:28'!
PASSED!

!testRun: #ReportTest #test04AccountSummaryReturnsAReportFromAnAccountWithATransferWithdraw stamp: 'PJ 11/14/2020 20:55:28'!
PASSED!

!testRun: #ReportTest #test05AccountSummaryReturnsAReportFromAnAccountWithATransferDeposit stamp: 'PJ 11/14/2020 20:55:28'!
PASSED!

!testRun: #ReportTest #test06TransferNetFromANewAccountReturnsZero stamp: 'PJ 11/14/2020 20:55:28'!
PASSED!

!testRun: #ReportTest #test07TransferNetReturnsAReportFromAnAccountWithADeposit stamp: 'PJ 11/14/2020 20:55:28'!
PASSED!

!testRun: #ReportTest #test08TransferNetReturnsAReportFromAnAccountWithAWithdraw stamp: 'PJ 11/14/2020 20:55:28'!
PASSED!

!testRun: #ReportTest #test09TransferNetReturnsAReportFromAnAccountWithATransferWithdraw stamp: 'PJ 11/14/2020 20:55:28'!
PASSED!

!testRun: #ReportTest #test10TransferNetReturnsAReportFromAnAccountWithATransferDeposit stamp: 'PJ 11/14/2020 20:55:28'!
PASSED!

!testRun: #ReportTest #test11TransferNetWorksWithAPortfolio stamp: 'PJ 11/14/2020 20:55:28'!
PASSED!

----SNAPSHOT----(14 November 2020 20:56:24) CuisUniversity-4384.image priorSource: 17272069!

Report subclass: #AccountSummary
	instanceVariableNames: 'report'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

Report subclass: #AccountSummary
	instanceVariableNames: 'summary'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #AccountSummary category: 'Portfolio-Solucion' stamp: 'PJ 11/14/2020 21:01:55'!
Report subclass: #AccountSummary
	instanceVariableNames: 'summary'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!
!AccountSummary methodsFor: 'private' stamp: 'PJ 11/14/2020 21:02:02' prior: 50869866 overrides: 50869810!
generateReportFor: anAccount 
	
	summary := OrderedCollection new.
	
	anAccount reportTo: self.
	
	summary add: anAccount balanceDescription.
	^summary ! !
!AccountSummary methodsFor: 'as yet unclassified' stamp: 'PJ 11/14/2020 21:02:39' prior: 50869957 overrides: 50869942!
reportAsDeposit: aTransaction 
	summary add: ('Dep�sito por ', aTransaction value asString)! !
!AccountSummary methodsFor: 'as yet unclassified' stamp: 'PJ 11/14/2020 21:02:53' prior: 50870204 overrides: 50870193!
reportAsTransferDeposit: aTransaction
	summary add: ('Entrada por transferencia de ', aTransaction value asString)! !
!AccountSummary methodsFor: 'as yet unclassified' stamp: 'PJ 11/14/2020 21:03:01' prior: 50870089 overrides: 50870072!
reportAsTransferWithdraw: aTransaction 
	summary add: ('Salida por transferencia de ', aTransaction value asString)! !
!AccountSummary methodsFor: 'as yet unclassified' stamp: 'PJ 11/14/2020 21:04:00' prior: 50870037 overrides: 50870210!
reportAsWithdraw: aWithdraw 
	summary add: ('Extracci�n por ', aWithdraw value asString)! !

!testRun: #ReportTest #test11TransferNetWorksWithAPortfolio stamp: 'PJ 11/14/2020 21:04:26'!
PASSED!

!testRun: #ReportTest #test01AccountSummaryFromANewAccountReturnsBalance0 stamp: 'PJ 11/14/2020 21:04:26'!
PASSED!

!testRun: #ReportTest #test02AccountSummaryReturnsAReportFromAnAccountWithADeposit stamp: 'PJ 11/14/2020 21:04:26'!
PASSED!

!testRun: #ReportTest #test03AccountSummaryReturnsAReportFromAnAccountWithAWithdraw stamp: 'PJ 11/14/2020 21:04:26'!
PASSED!

!testRun: #ReportTest #test04AccountSummaryReturnsAReportFromAnAccountWithATransferWithdraw stamp: 'PJ 11/14/2020 21:04:26'!
PASSED!

!testRun: #ReportTest #test05AccountSummaryReturnsAReportFromAnAccountWithATransferDeposit stamp: 'PJ 11/14/2020 21:04:26'!
PASSED!

!testRun: #ReportTest #test06TransferNetFromANewAccountReturnsZero stamp: 'PJ 11/14/2020 21:04:26'!
PASSED!

!testRun: #ReportTest #test07TransferNetReturnsAReportFromAnAccountWithADeposit stamp: 'PJ 11/14/2020 21:04:26'!
PASSED!

!testRun: #ReportTest #test08TransferNetReturnsAReportFromAnAccountWithAWithdraw stamp: 'PJ 11/14/2020 21:04:26'!
PASSED!

!testRun: #ReportTest #test09TransferNetReturnsAReportFromAnAccountWithATransferWithdraw stamp: 'PJ 11/14/2020 21:04:26'!
PASSED!

!testRun: #ReportTest #test10TransferNetReturnsAReportFromAnAccountWithATransferDeposit stamp: 'PJ 11/14/2020 21:04:26'!
PASSED!

!testRun: #ReportTest #test11TransferNetWorksWithAPortfolio stamp: 'PJ 11/14/2020 21:04:26'!
PASSED!
!AccountSummary methodsFor: 'private' stamp: 'PJ 11/14/2020 21:13:00' prior: 50871607 overrides: 50869810!
generateReportFor: anAccount 
	
	summary := OrderedCollection new.
	
	anAccount reportTo: self.
	
	summary add: (anAccount balance asString).
	^summary! !

!testRun: #ReportTest #test08TransferNetReturnsAReportFromAnAccountWithAWithdraw stamp: 'PJ 11/14/2020 21:13:12'!
PASSED!

!testRun: #ReportTest #test01AccountSummaryFromANewAccountReturnsBalance0 stamp: 'PJ 11/14/2020 21:13:12'!
FAILURE!

!testRun: #ReportTest #test02AccountSummaryReturnsAReportFromAnAccountWithADeposit stamp: 'PJ 11/14/2020 21:13:12'!
FAILURE!

!testRun: #ReportTest #test03AccountSummaryReturnsAReportFromAnAccountWithAWithdraw stamp: 'PJ 11/14/2020 21:13:12'!
FAILURE!

!testRun: #ReportTest #test04AccountSummaryReturnsAReportFromAnAccountWithATransferWithdraw stamp: 'PJ 11/14/2020 21:13:12'!
FAILURE!

!testRun: #ReportTest #test05AccountSummaryReturnsAReportFromAnAccountWithATransferDeposit stamp: 'PJ 11/14/2020 21:13:12'!
FAILURE!

!testRun: #ReportTest #test06TransferNetFromANewAccountReturnsZero stamp: 'PJ 11/14/2020 21:13:12'!
PASSED!

!testRun: #ReportTest #test07TransferNetReturnsAReportFromAnAccountWithADeposit stamp: 'PJ 11/14/2020 21:13:12'!
PASSED!

!testRun: #ReportTest #test08TransferNetReturnsAReportFromAnAccountWithAWithdraw stamp: 'PJ 11/14/2020 21:13:12'!
PASSED!

!testRun: #ReportTest #test09TransferNetReturnsAReportFromAnAccountWithATransferWithdraw stamp: 'PJ 11/14/2020 21:13:12'!
PASSED!

!testRun: #ReportTest #test10TransferNetReturnsAReportFromAnAccountWithATransferDeposit stamp: 'PJ 11/14/2020 21:13:12'!
PASSED!

!testRun: #ReportTest #test11TransferNetWorksWithAPortfolio stamp: 'PJ 11/14/2020 21:13:12'!
PASSED!
!AccountSummary methodsFor: 'private' stamp: 'PJ 11/14/2020 21:14:01' prior: 50871691 overrides: 50869810!
generateReportFor: anAccount 
	
	summary := OrderedCollection new.
	
	anAccount reportTo: self.
	
	summary add: ('Balance = ', anAccount balance asString).
	^summary! !

!testRun: #ReportTest #test08TransferNetReturnsAReportFromAnAccountWithAWithdraw stamp: 'PJ 11/14/2020 21:14:07'!
PASSED!

!testRun: #ReportTest #test01AccountSummaryFromANewAccountReturnsBalance0 stamp: 'PJ 11/14/2020 21:14:07'!
PASSED!

!testRun: #ReportTest #test02AccountSummaryReturnsAReportFromAnAccountWithADeposit stamp: 'PJ 11/14/2020 21:14:07'!
PASSED!

!testRun: #ReportTest #test03AccountSummaryReturnsAReportFromAnAccountWithAWithdraw stamp: 'PJ 11/14/2020 21:14:07'!
PASSED!

!testRun: #ReportTest #test04AccountSummaryReturnsAReportFromAnAccountWithATransferWithdraw stamp: 'PJ 11/14/2020 21:14:07'!
PASSED!

!testRun: #ReportTest #test05AccountSummaryReturnsAReportFromAnAccountWithATransferDeposit stamp: 'PJ 11/14/2020 21:14:07'!
PASSED!

!testRun: #ReportTest #test06TransferNetFromANewAccountReturnsZero stamp: 'PJ 11/14/2020 21:14:07'!
PASSED!

!testRun: #ReportTest #test07TransferNetReturnsAReportFromAnAccountWithADeposit stamp: 'PJ 11/14/2020 21:14:07'!
PASSED!

!testRun: #ReportTest #test08TransferNetReturnsAReportFromAnAccountWithAWithdraw stamp: 'PJ 11/14/2020 21:14:07'!
PASSED!

!testRun: #ReportTest #test09TransferNetReturnsAReportFromAnAccountWithATransferWithdraw stamp: 'PJ 11/14/2020 21:14:07'!
PASSED!

!testRun: #ReportTest #test10TransferNetReturnsAReportFromAnAccountWithATransferDeposit stamp: 'PJ 11/14/2020 21:14:07'!
PASSED!

!testRun: #ReportTest #test11TransferNetWorksWithAPortfolio stamp: 'PJ 11/14/2020 21:14:07'!
PASSED!

!methodRemoval: ReceptiveAccount #balanceDescription stamp: 'PJ 11/14/2020 21:14:16'!
balanceDescription
	^'Balance = ', self balance asString!

----SNAPSHOT----(14 November 2020 21:14:26) CuisUniversity-4384.image priorSource: 17277945!

!testRun: #ReportTest #test08TransferNetReturnsAReportFromAnAccountWithAWithdraw stamp: 'PJ 11/14/2020 21:14:34'!
PASSED!

!testRun: #ReportTest #test01AccountSummaryFromANewAccountReturnsBalance0 stamp: 'PJ 11/14/2020 21:14:34'!
PASSED!

!testRun: #ReportTest #test02AccountSummaryReturnsAReportFromAnAccountWithADeposit stamp: 'PJ 11/14/2020 21:14:34'!
PASSED!

!testRun: #ReportTest #test03AccountSummaryReturnsAReportFromAnAccountWithAWithdraw stamp: 'PJ 11/14/2020 21:14:34'!
PASSED!

!testRun: #ReportTest #test04AccountSummaryReturnsAReportFromAnAccountWithATransferWithdraw stamp: 'PJ 11/14/2020 21:14:34'!
PASSED!

!testRun: #ReportTest #test05AccountSummaryReturnsAReportFromAnAccountWithATransferDeposit stamp: 'PJ 11/14/2020 21:14:34'!
PASSED!

!testRun: #ReportTest #test06TransferNetFromANewAccountReturnsZero stamp: 'PJ 11/14/2020 21:14:34'!
PASSED!

!testRun: #ReportTest #test07TransferNetReturnsAReportFromAnAccountWithADeposit stamp: 'PJ 11/14/2020 21:14:34'!
PASSED!

!testRun: #ReportTest #test08TransferNetReturnsAReportFromAnAccountWithAWithdraw stamp: 'PJ 11/14/2020 21:14:34'!
PASSED!

!testRun: #ReportTest #test09TransferNetReturnsAReportFromAnAccountWithATransferWithdraw stamp: 'PJ 11/14/2020 21:14:34'!
PASSED!

!testRun: #ReportTest #test10TransferNetReturnsAReportFromAnAccountWithATransferDeposit stamp: 'PJ 11/14/2020 21:14:34'!
PASSED!

!testRun: #ReportTest #test11TransferNetWorksWithAPortfolio stamp: 'PJ 11/14/2020 21:14:34'!
PASSED!

|portfolio account account2 report|
	
	account := ReceptiveAccount new.
	account2 := ReceptiveAccount new.
	
	Deposit register: 100 on: account.
	Transfer from: account to: account2 amount: 50. 
	Transfer from: account2 to: account amount: 5. 
		
	portfolio := Portfolio with: account.
		
	report := AccountSummary for: portfolio .!

----SNAPSHOT----(14 November 2020 21:20:38) CuisUniversity-4384.image priorSource: 17284923!

----STARTUP---- (14 November 2020 21:59:56) as /home/pablo/Documents/Ingenieria1/cuis_portfolio2/CuisUniversity-4384.image!


!methodRemoval: TransferNet #reportTransactionInfo: stamp: 'PGTA 11/14/2020 22:01:34'!
reportTransactionInfo: aValue 
	netValue := netValue + aValue.!

!testRun: #ReportTest #test10TransferNetReturnsAReportFromAnAccountWithATransferDeposit stamp: 'PGTA 11/14/2020 22:01:43'!
PASSED!

!testRun: #ReportTest #test01AccountSummaryFromANewAccountReturnsBalance0 stamp: 'PGTA 11/14/2020 22:01:43'!
PASSED!

!testRun: #ReportTest #test02AccountSummaryReturnsAReportFromAnAccountWithADeposit stamp: 'PGTA 11/14/2020 22:01:43'!
PASSED!

!testRun: #ReportTest #test03AccountSummaryReturnsAReportFromAnAccountWithAWithdraw stamp: 'PGTA 11/14/2020 22:01:43'!
PASSED!

!testRun: #ReportTest #test04AccountSummaryReturnsAReportFromAnAccountWithATransferWithdraw stamp: 'PGTA 11/14/2020 22:01:43'!
PASSED!

!testRun: #ReportTest #test05AccountSummaryReturnsAReportFromAnAccountWithATransferDeposit stamp: 'PGTA 11/14/2020 22:01:43'!
PASSED!

!testRun: #ReportTest #test06TransferNetFromANewAccountReturnsZero stamp: 'PGTA 11/14/2020 22:01:43'!
PASSED!

!testRun: #ReportTest #test07TransferNetReturnsAReportFromAnAccountWithADeposit stamp: 'PGTA 11/14/2020 22:01:43'!
PASSED!

!testRun: #ReportTest #test08TransferNetReturnsAReportFromAnAccountWithAWithdraw stamp: 'PGTA 11/14/2020 22:01:43'!
PASSED!

!testRun: #ReportTest #test09TransferNetReturnsAReportFromAnAccountWithATransferWithdraw stamp: 'PGTA 11/14/2020 22:01:43'!
PASSED!

!testRun: #ReportTest #test10TransferNetReturnsAReportFromAnAccountWithATransferDeposit stamp: 'PGTA 11/14/2020 22:01:43'!
PASSED!

!testRun: #ReportTest #test11TransferNetWorksWithAPortfolio stamp: 'PGTA 11/14/2020 22:01:43'!
PASSED!
!ReceptiveAccountTest methodsFor: 'transfer tests' stamp: 'PGTA 11/14/2020 22:05:30'!
test12ReceptiveAccountCanHaveAName

	| senderAccount receiverAccount transfer deposit withdraw |
	
	senderAccount := ReceptiveAccount new.
	Deposit register: 100 on: senderAccount.
	
	receiverAccount := ReceptiveAccount new.
	
	transfer := Transfer from: senderAccount to: receiverAccount amount: 10.
	
	deposit := transfer deposit.
	withdraw  := transfer withdraw.
	
	self assert: 10 equals: deposit value.
	self assert: 10 equals: withdraw value.
! !
!ReceptiveAccountTest methodsFor: 'account tests' stamp: 'PGTA 11/14/2020 22:09:02' prior: 50869147!
test12ReceptiveAccountCanHaveAName
	
	| johnsAccount name |
	name := 'Cuenta de Juan'.
	johnsAccount := ReceptiveAccount named: name.
	
	self assert: name equals: johnsAccount name.
! !

!testRun: #ReceptiveAccountTest #test12ReceptiveAccountCanHaveAName stamp: 'PGTA 11/14/2020 22:09:02'!
ERROR!
!Account class methodsFor: 'as yet unclassified' stamp: 'PGTA 11/14/2020 22:09:30'!
named: aString 
	self shouldBeImplemented.! !
!Account class methodsFor: 'as yet unclassified' stamp: 'PGTA 11/14/2020 22:09:52' prior: 50869177!
named: aName
	self subclassResponsibility.! !

!testRun: #ReceptiveAccountTest #test12ReceptiveAccountCanHaveAName stamp: 'PGTA 11/14/2020 22:09:54'!
ERROR!
!ReceptiveAccount class methodsFor: 'as yet unclassified' stamp: 'PGTA 11/14/2020 22:10:02' overrides: 50869182!
named: aString 
	self shouldBeImplemented.! !
!ReceptiveAccount class methodsFor: 'as yet unclassified' stamp: 'PGTA 11/14/2020 22:13:34' prior: 50869191 overrides: 50869182!
named: aName 
	^self new initializeWithName: aName.! !

!testRun: #ReceptiveAccountTest #test12ReceptiveAccountCanHaveAName stamp: 'PGTA 11/14/2020 22:13:37'!
ERROR!

!classDefinition: #ReceptiveAccount category: 'Portfolio-Solucion' stamp: 'PGTA 11/14/2020 22:13:46'!
Account subclass: #ReceptiveAccount
	instanceVariableNames: 'transactions name'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!
!ReceptiveAccount methodsFor: 'initialization' stamp: 'PGTA 11/14/2020 22:13:46'!
initializeWithName: aName 
	self shouldBeImplemented.
	name := aName.! !
!ReceptiveAccount methodsFor: 'initialization' stamp: 'PGTA 11/14/2020 22:16:14' prior: 50869213!
initializeWithName: aName 
	self initialize.
	name := aName.! !

!testRun: #ReceptiveAccountTest #test12ReceptiveAccountCanHaveAName stamp: 'PGTA 11/14/2020 22:16:15'!
FAILURE!
!ReceptiveAccount methodsFor: 'as yet unclassified' stamp: 'PGTA 11/14/2020 22:18:07' overrides: 16882612!
name
	^name.! !
!ReceptiveAccount methodsFor: 'as yet unclassified' stamp: 'PGTA 11/14/2020 22:18:24' prior: 50869228 overrides: 16882612!
name
	^name copy.! !

!testRun: #ReceptiveAccountTest #test12ReceptiveAccountCanHaveAName stamp: 'PGTA 11/14/2020 22:18:55'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'PGTA 11/14/2020 22:18:55'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'PGTA 11/14/2020 22:18:55'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'PGTA 11/14/2020 22:18:55'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'PGTA 11/14/2020 22:18:55'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'PGTA 11/14/2020 22:18:55'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'PGTA 11/14/2020 22:18:55'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'PGTA 11/14/2020 22:18:55'!
PASSED!

!testRun: #ReceptiveAccountTest #test08TransferSenderAccountAcknowledgesTransferTransactions stamp: 'PGTA 11/14/2020 22:18:55'!
PASSED!

!testRun: #ReceptiveAccountTest #test09TransferReceiverAccountAcknowledgesTransferTransactions stamp: 'PGTA 11/14/2020 22:18:55'!
PASSED!

!testRun: #ReceptiveAccountTest #test10TransferDepositAndWithdrawCanNavigateToTransfer stamp: 'PGTA 11/14/2020 22:18:55'!
PASSED!

!testRun: #ReceptiveAccountTest #test11TransferDepositAndWithdrawKnowTheTransferAmount stamp: 'PGTA 11/14/2020 22:18:55'!
PASSED!

!testRun: #ReceptiveAccountTest #test12ReceptiveAccountCanHaveAName stamp: 'PGTA 11/14/2020 22:18:55'!
PASSED!
!PortfolioTest methodsFor: 'tests' stamp: 'PGTA 11/14/2020 22:20:20'!
test16PortfolioCanHaveAName
	
	| johnsPortfolio name |
	name := 'Portafolio de Juan'.
	johnsPortfolio := Portfolio named: name.
	
	self assert: name equals: johnsPortfolio name.
! !

!testRun: #PortfolioTest #test16PortfolioCanHaveAName stamp: 'PGTA 11/14/2020 22:20:20'!
ERROR!
!Portfolio class methodsFor: 'as yet unclassified' stamp: 'PGTA 11/14/2020 22:20:40' overrides: 50869182!
named: aString 
	self shouldBeImplemented.! !
!Portfolio class methodsFor: 'as yet unclassified' stamp: 'PGTA 11/14/2020 22:21:05' prior: 50869300 overrides: 50869182!
named: aName
	^self new intializeWithName: aName.! !

!testRun: #PortfolioTest #test16PortfolioCanHaveAName stamp: 'PGTA 11/14/2020 22:21:07'!
ERROR!
!Portfolio methodsFor: 'initialization' stamp: 'PGTA 11/14/2020 22:21:21'!
intializeWithName: aString 
	self shouldBeImplemented.! !

!testRun: #PortfolioTest #test16PortfolioCanHaveAName stamp: 'PGTA 11/14/2020 22:22:21'!
ERROR!
!Portfolio methodsFor: 'error handling' stamp: 'PGTA 11/14/2020 22:22:31' overrides: 16881409!
error: aString 
	self shouldBeImplemented.! !

!classDefinition: #Portfolio category: 'Portfolio-Solucion' stamp: 'PGTA 11/14/2020 22:23:16'!
Account subclass: #Portfolio
	instanceVariableNames: 'accounts parents name'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!
!Portfolio methodsFor: 'initialization' stamp: 'PGTA 11/14/2020 22:23:11' prior: 50869314!
intializeWithName: aName 
	self initialize.
	name := aName.! !

!testRun: #PortfolioTest #test16PortfolioCanHaveAName stamp: 'PGTA 11/14/2020 22:23:46'!
FAILURE!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'PGTA 11/14/2020 22:25:16' overrides: 16882612!
name
	^name.! !

!testRun: #PortfolioTest #test16PortfolioCanHaveAName stamp: 'PGTA 11/14/2020 22:25:32'!
PASSED!

!testRun: #PortfolioTest #test01BalanceOfPortfolioWithoutAccountsIsZero stamp: 'PGTA 11/14/2020 22:25:32'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithOneAccountIsAccountBalance stamp: 'PGTA 11/14/2020 22:25:32'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioIsCalculatedRecursivelyOnPortfolios stamp: 'PGTA 11/14/2020 22:25:32'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithoutAccountsHasNoRegisteredTransaction stamp: 'PGTA 11/14/2020 22:25:32'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredItsAccountsTransactions stamp: 'PGTA 11/14/2020 22:25:32'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioLooksForRegisteredTransactionsRecursively stamp: 'PGTA 11/14/2020 22:25:32'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioHasNoTransactionWhenHasNoAccounts stamp: 'PGTA 11/14/2020 22:25:32'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTransactionsIncludesAllItsAccountsTransactions stamp: 'PGTA 11/14/2020 22:25:32'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioTransactionsAreCalculatedRecursively stamp: 'PGTA 11/14/2020 22:25:32'!
PASSED!

Portfolio named: 'Julio'!

pf := Portfolio named: 'Julio'.

pf name.!

4 name.!
!PortfolioTest methodsFor: 'tests' stamp: 'PGTA 11/14/2020 22:28:07' prior: 50869287!
test16PortfolioCanHaveAName
	
	| johnsPortfolio name |
	name := 'Portafolio de Juan'.
	johnsPortfolio := Portfolio named: name.
	
	self assert: name equals: johnsPortfolio name.
! !

!testRun: #PortfolioTest #test16PortfolioCanHaveAName stamp: 'PGTA 11/14/2020 22:28:07'!
PASSED!

!testRun: #PortfolioTest #test01BalanceOfPortfolioWithoutAccountsIsZero stamp: 'PGTA 11/14/2020 22:28:07'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithOneAccountIsAccountBalance stamp: 'PGTA 11/14/2020 22:28:07'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioIsCalculatedRecursivelyOnPortfolios stamp: 'PGTA 11/14/2020 22:28:07'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithoutAccountsHasNoRegisteredTransaction stamp: 'PGTA 11/14/2020 22:28:07'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredItsAccountsTransactions stamp: 'PGTA 11/14/2020 22:28:07'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioLooksForRegisteredTransactionsRecursively stamp: 'PGTA 11/14/2020 22:28:07'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioHasNoTransactionWhenHasNoAccounts stamp: 'PGTA 11/14/2020 22:28:07'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTransactionsIncludesAllItsAccountsTransactions stamp: 'PGTA 11/14/2020 22:28:07'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioTransactionsAreCalculatedRecursively stamp: 'PGTA 11/14/2020 22:28:07'!
PASSED!

	| johnsPortfolio portfolioName |
	portfolioName := 'Portafolio de Juan'.
	johnsPortfolio := Portfolio named: portfolioName.
	
	self assert: portfolioName equals: johnsPortfolio name.
!
!PortfolioTest methodsFor: 'tests' stamp: 'PGTA 11/14/2020 22:29:31' prior: 50869388!
test16PortfolioCanHaveAName
	
	| johnsPortfolio portfolioName |
	portfolioName := 'Portafolio de Juan'.
	johnsPortfolio := Portfolio named: portfolioName.
	
	self assert: portfolioName equals: johnsPortfolio name.
! !

!testRun: #PortfolioTest #test16PortfolioCanHaveAName stamp: 'PGTA 11/14/2020 22:29:31'!
PASSED!

!testRun: #PortfolioTest #test01BalanceOfPortfolioWithoutAccountsIsZero stamp: 'PGTA 11/14/2020 22:29:31'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithOneAccountIsAccountBalance stamp: 'PGTA 11/14/2020 22:29:31'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioIsCalculatedRecursivelyOnPortfolios stamp: 'PGTA 11/14/2020 22:29:31'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithoutAccountsHasNoRegisteredTransaction stamp: 'PGTA 11/14/2020 22:29:31'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredItsAccountsTransactions stamp: 'PGTA 11/14/2020 22:29:31'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioLooksForRegisteredTransactionsRecursively stamp: 'PGTA 11/14/2020 22:29:31'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioHasNoTransactionWhenHasNoAccounts stamp: 'PGTA 11/14/2020 22:29:31'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTransactionsIncludesAllItsAccountsTransactions stamp: 'PGTA 11/14/2020 22:29:31'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioTransactionsAreCalculatedRecursively stamp: 'PGTA 11/14/2020 22:29:31'!
PASSED!

portfolioName := 'Portafolio de Juan'.
johnsPortfolio := Portfolio named: portfolioName.!
!PortfolioTest methodsFor: 'tests' stamp: 'PGTA 11/14/2020 22:30:30' prior: 50869441!
test16PortfolioCanHaveAName
	
	| johnsPortfolio portfolioName |
	portfolioName := 'Portafolio de Juan'.
	johnsPortfolio := Portfolio named: portfolioName.
	
	self assert: portfolioName equals: (johnsPortfolio name).
! !

!testRun: #PortfolioTest #test16PortfolioCanHaveAName stamp: 'PGTA 11/14/2020 22:30:30'!
PASSED!

!testRun: #PortfolioTest #test01BalanceOfPortfolioWithoutAccountsIsZero stamp: 'PGTA 11/14/2020 22:30:30'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithOneAccountIsAccountBalance stamp: 'PGTA 11/14/2020 22:30:30'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioIsCalculatedRecursivelyOnPortfolios stamp: 'PGTA 11/14/2020 22:30:30'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithoutAccountsHasNoRegisteredTransaction stamp: 'PGTA 11/14/2020 22:30:30'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredItsAccountsTransactions stamp: 'PGTA 11/14/2020 22:30:30'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioLooksForRegisteredTransactionsRecursively stamp: 'PGTA 11/14/2020 22:30:30'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioHasNoTransactionWhenHasNoAccounts stamp: 'PGTA 11/14/2020 22:30:30'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTransactionsIncludesAllItsAccountsTransactions stamp: 'PGTA 11/14/2020 22:30:30'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioTransactionsAreCalculatedRecursively stamp: 'PGTA 11/14/2020 22:30:30'!
PASSED!

self assert: portfolioName equals: (johnsPortfolio name).!

johnsPortfolio name.!

portfolioName = (johnsPortfolio name).!
!PortfolioTest methodsFor: 'tests' stamp: 'PGTA 11/14/2020 22:31:35' prior: 50869492!
test16PortfolioCanHaveAName
	
	| johnsPortfolio portfolioName |
	portfolioName := 'Portafolio de Juan'.
	johnsPortfolio := Portfolio named: portfolioName.
	
	self assert: portfolioName equals: (johnsPortfolio name2).
! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'PGTA 11/14/2020 22:31:47'!
name2
	^name.! !

!testRun: #PortfolioTest #test16PortfolioCanHaveAName stamp: 'PGTA 11/14/2020 22:31:59'!
PASSED!

!testRun: #PortfolioTest #test01BalanceOfPortfolioWithoutAccountsIsZero stamp: 'PGTA 11/14/2020 22:31:59'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithOneAccountIsAccountBalance stamp: 'PGTA 11/14/2020 22:31:59'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioIsCalculatedRecursivelyOnPortfolios stamp: 'PGTA 11/14/2020 22:31:59'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithoutAccountsHasNoRegisteredTransaction stamp: 'PGTA 11/14/2020 22:31:59'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredItsAccountsTransactions stamp: 'PGTA 11/14/2020 22:31:59'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioLooksForRegisteredTransactionsRecursively stamp: 'PGTA 11/14/2020 22:31:59'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioHasNoTransactionWhenHasNoAccounts stamp: 'PGTA 11/14/2020 22:31:59'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTransactionsIncludesAllItsAccountsTransactions stamp: 'PGTA 11/14/2020 22:31:59'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioTransactionsAreCalculatedRecursively stamp: 'PGTA 11/14/2020 22:31:59'!
PASSED!

Account subclass: #Portfolio
	instanceVariableNames: 'accounts parents name2'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #Portfolio category: 'Portfolio-Solucion' stamp: 'PGTA 11/14/2020 22:32:58'!
Account subclass: #Portfolio
	instanceVariableNames: 'accounts parents name2'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!
!Portfolio methodsFor: 'initialization' stamp: 'PGTA 11/14/2020 22:33:09' prior: 50869335!
intializeWithName: aName 
	self initialize.
	name2 := aName.! !

portfolioName := 'Portafolio de Juan'.!

johnsPortfolio := Portfolio named: portfolioName.!

johnsPortfolio name. 'Portafolio de Juan' !

johnsPortfolio name.!

portfolioName := 'Portafolio de Juan'.!

johnsPortfolio := Portfolio named: portfolioName.!

johnsPortfolio name2.!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'PGTA 11/14/2020 22:34:21'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'PGTA 11/14/2020 22:34:21'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'PGTA 11/14/2020 22:34:21'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'PGTA 11/14/2020 22:34:21'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'PGTA 11/14/2020 22:34:21'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'PGTA 11/14/2020 22:34:21'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'PGTA 11/14/2020 22:34:21'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'PGTA 11/14/2020 22:34:21'!
PASSED!

!testRun: #ReceptiveAccountTest #test08TransferSenderAccountAcknowledgesTransferTransactions stamp: 'PGTA 11/14/2020 22:34:21'!
PASSED!

!testRun: #ReceptiveAccountTest #test09TransferReceiverAccountAcknowledgesTransferTransactions stamp: 'PGTA 11/14/2020 22:34:21'!
PASSED!

!testRun: #ReceptiveAccountTest #test10TransferDepositAndWithdrawCanNavigateToTransfer stamp: 'PGTA 11/14/2020 22:34:21'!
PASSED!

!testRun: #ReceptiveAccountTest #test11TransferDepositAndWithdrawKnowTheTransferAmount stamp: 'PGTA 11/14/2020 22:34:21'!
PASSED!

!testRun: #ReceptiveAccountTest #test12ReceptiveAccountCanHaveAName stamp: 'PGTA 11/14/2020 22:34:21'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioCanHaveAName stamp: 'PGTA 11/14/2020 22:34:28'!
FAILURE!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'PGTA 11/14/2020 22:35:06' prior: 50869554!
name2
	^name2.! !

!methodRemoval: Portfolio #name stamp: 'PGTA 11/14/2020 22:35:11'!
name
	^name.!

!testRun: #PortfolioTest #test16PortfolioCanHaveAName stamp: 'PGTA 11/14/2020 22:35:23'!
PASSED!

!testRun: #PortfolioTest #test01BalanceOfPortfolioWithoutAccountsIsZero stamp: 'PGTA 11/14/2020 22:35:23'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithOneAccountIsAccountBalance stamp: 'PGTA 11/14/2020 22:35:23'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioIsCalculatedRecursivelyOnPortfolios stamp: 'PGTA 11/14/2020 22:35:23'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithoutAccountsHasNoRegisteredTransaction stamp: 'PGTA 11/14/2020 22:35:23'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredItsAccountsTransactions stamp: 'PGTA 11/14/2020 22:35:23'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioLooksForRegisteredTransactionsRecursively stamp: 'PGTA 11/14/2020 22:35:23'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioHasNoTransactionWhenHasNoAccounts stamp: 'PGTA 11/14/2020 22:35:23'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTransactionsIncludesAllItsAccountsTransactions stamp: 'PGTA 11/14/2020 22:35:23'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioTransactionsAreCalculatedRecursively stamp: 'PGTA 11/14/2020 22:35:23'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioCanHaveAName stamp: 'PGTA 11/14/2020 22:38:11'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioCanHaveAName stamp: 'PGTA 11/14/2020 22:38:53'!
PASSED!

!testRun: #PortfolioTest #test01BalanceOfPortfolioWithoutAccountsIsZero stamp: 'PGTA 11/14/2020 22:38:53'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithOneAccountIsAccountBalance stamp: 'PGTA 11/14/2020 22:38:53'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioIsCalculatedRecursivelyOnPortfolios stamp: 'PGTA 11/14/2020 22:38:53'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithoutAccountsHasNoRegisteredTransaction stamp: 'PGTA 11/14/2020 22:38:53'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredItsAccountsTransactions stamp: 'PGTA 11/14/2020 22:38:53'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioLooksForRegisteredTransactionsRecursively stamp: 'PGTA 11/14/2020 22:38:53'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioHasNoTransactionWhenHasNoAccounts stamp: 'PGTA 11/14/2020 22:38:53'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTransactionsIncludesAllItsAccountsTransactions stamp: 'PGTA 11/14/2020 22:38:53'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioTransactionsAreCalculatedRecursively stamp: 'PGTA 11/14/2020 22:38:53'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioCanHaveAName stamp: 'PGTA 11/14/2020 22:39:27'!
PASSED!

----STARTUP---- (14 November 2020 22:40:35) as /home/pablo/Documents/Ingenieria1/cuis_portfolio2/CuisUniversity-4384.image!

!ReceptiveAccountTest methodsFor: 'transfer tests' stamp: 'PGTA 11/14/2020 22:42:38'!
test12ReceptiveAccountCanHaveAName
	
	| johnsAccount accountName |
	accountName := 'Cuenta de Juan'.
	johnsAccount := ReceptiveAccount named: accountName.
	
	self assert: accountName equals: johnsAccount accountName.
! !

!testRun: #ReceptiveAccountTest #test12ReceptiveAccountCanHaveAName stamp: 'PGTA 11/14/2020 22:42:49'!
ERROR!
!ReceptiveAccount class methodsFor: 'as yet unclassified' stamp: 'PGTA 11/14/2020 22:43:10'!
named: aString 
	self shouldBeImplemented.! !
!ReceptiveAccount class methodsFor: 'as yet unclassified' stamp: 'PGTA 11/14/2020 22:43:43' prior: 50869109!
named: aName
	self new initializeWithName: aName.! !

!testRun: #ReceptiveAccountTest #test12ReceptiveAccountCanHaveAName stamp: 'PGTA 11/14/2020 22:43:46'!
ERROR!

!classDefinition: #ReceptiveAccount category: 'Portfolio-Solucion' stamp: 'PGTA 11/14/2020 22:43:55'!
Account subclass: #ReceptiveAccount
	instanceVariableNames: 'transactions name'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!
!ReceptiveAccount methodsFor: 'initialization' stamp: 'PGTA 11/14/2020 22:43:55'!
initializeWithName: aName 
	self shouldBeImplemented.
	name := aName.! !
!ReceptiveAccount methodsFor: 'initialization' stamp: 'PGTA 11/14/2020 22:44:03' prior: 50869130!
initializeWithName: aName 
	self initialize.
	name := aName.! !

!testRun: #ReceptiveAccountTest #test12ReceptiveAccountCanHaveAName stamp: 'PGTA 11/14/2020 22:44:05'!
ERROR!
!ReceptiveAccount class methodsFor: 'as yet unclassified' stamp: 'PGTA 11/14/2020 22:44:28'!
accountName
	self shouldBeImplemented.! !

!classDefinition: 'ReceptiveAccount class' category: 'Portfolio-Solucion' stamp: 'PGTA 11/14/2020 22:44:47'!
ReceptiveAccount class
	instanceVariableNames: 'accountName'!
!ReceptiveAccount class methodsFor: 'as yet unclassified' stamp: 'PGTA 11/14/2020 22:44:45' prior: 50869145!
accountName
	^accountName.! !

!testRun: #ReceptiveAccountTest #test12ReceptiveAccountCanHaveAName stamp: 'PGTA 11/14/2020 22:45:02'!
FAILURE!

!classDefinition: #ReceptiveAccount category: 'Portfolio-Solucion' stamp: 'PGTA 11/14/2020 22:45:55'!
Account subclass: #ReceptiveAccount
	instanceVariableNames: 'transactions name accountName'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!
!ReceptiveAccount methodsFor: 'as yet unclassified' stamp: 'PGTA 11/14/2020 22:45:53'!
accountName
	^accountName.! !

ReceptiveAccount class
	instanceVariableNames: ''!

!classDefinition: 'ReceptiveAccount class' category: 'Portfolio-Solucion' stamp: 'PGTA 11/14/2020 22:46:03'!
ReceptiveAccount class
	instanceVariableNames: ''!

!methodRemoval: ReceptiveAccount class #accountName stamp: 'PGTA 11/14/2020 22:46:08'!
accountName
	^accountName.!

!testRun: #ReceptiveAccountTest #test12ReceptiveAccountCanHaveAName stamp: 'PGTA 11/14/2020 22:46:21'!
ERROR!

!testRun: #ReceptiveAccountTest #test12ReceptiveAccountCanHaveAName stamp: 'PGTA 11/14/2020 22:46:51'!
ERROR!
!ReceptiveAccount class methodsFor: 'as yet unclassified' stamp: 'PGTA 11/14/2020 22:47:12' prior: 50869114!
named: aName
	^self new initializeWithName: aName.! !

!testRun: #ReceptiveAccountTest #test10TransferDepositAndWithdrawCanNavigateToTransfer stamp: 'PGTA 11/14/2020 22:47:24'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'PGTA 11/14/2020 22:47:24'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'PGTA 11/14/2020 22:47:24'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'PGTA 11/14/2020 22:47:24'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'PGTA 11/14/2020 22:47:24'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'PGTA 11/14/2020 22:47:24'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'PGTA 11/14/2020 22:47:24'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'PGTA 11/14/2020 22:47:24'!
PASSED!

!testRun: #ReceptiveAccountTest #test08TransferSenderAccountAcknowledgesTransferTransactions stamp: 'PGTA 11/14/2020 22:47:24'!
PASSED!

!testRun: #ReceptiveAccountTest #test09TransferReceiverAccountAcknowledgesTransferTransactions stamp: 'PGTA 11/14/2020 22:47:24'!
PASSED!

!testRun: #ReceptiveAccountTest #test10TransferDepositAndWithdrawCanNavigateToTransfer stamp: 'PGTA 11/14/2020 22:47:24'!
PASSED!

!testRun: #ReceptiveAccountTest #test11TransferDepositAndWithdrawKnowTheTransferAmount stamp: 'PGTA 11/14/2020 22:47:24'!
PASSED!

!testRun: #ReceptiveAccountTest #test12ReceptiveAccountCanHaveAName stamp: 'PGTA 11/14/2020 22:47:24'!
FAILURE!

!testRun: #ReceptiveAccountTest #test12ReceptiveAccountCanHaveAName stamp: 'PGTA 11/14/2020 22:47:24'!
FAILURE!
!ReceptiveAccount methodsFor: 'initialization' stamp: 'PGTA 11/14/2020 22:48:04' prior: 50869136!
initializeWithName: aName 
	self initialize.
	accountName := aName.! !

Account subclass: #ReceptiveAccount
	instanceVariableNames: 'transactions accountName'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #ReceptiveAccount category: 'Portfolio-Solucion' stamp: 'PGTA 11/14/2020 22:48:23'!
Account subclass: #ReceptiveAccount
	instanceVariableNames: 'transactions accountName'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!testRun: #ReceptiveAccountTest #test12ReceptiveAccountCanHaveAName stamp: 'PGTA 11/14/2020 22:48:30'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'PGTA 11/14/2020 22:48:30'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'PGTA 11/14/2020 22:48:30'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'PGTA 11/14/2020 22:48:30'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'PGTA 11/14/2020 22:48:30'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'PGTA 11/14/2020 22:48:30'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'PGTA 11/14/2020 22:48:30'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'PGTA 11/14/2020 22:48:30'!
PASSED!

!testRun: #ReceptiveAccountTest #test08TransferSenderAccountAcknowledgesTransferTransactions stamp: 'PGTA 11/14/2020 22:48:30'!
PASSED!

!testRun: #ReceptiveAccountTest #test09TransferReceiverAccountAcknowledgesTransferTransactions stamp: 'PGTA 11/14/2020 22:48:30'!
PASSED!

!testRun: #ReceptiveAccountTest #test10TransferDepositAndWithdrawCanNavigateToTransfer stamp: 'PGTA 11/14/2020 22:48:30'!
PASSED!

!testRun: #ReceptiveAccountTest #test11TransferDepositAndWithdrawKnowTheTransferAmount stamp: 'PGTA 11/14/2020 22:48:30'!
PASSED!

!testRun: #ReceptiveAccountTest #test12ReceptiveAccountCanHaveAName stamp: 'PGTA 11/14/2020 22:48:30'!
PASSED!
!PortfolioTest methodsFor: 'tests' stamp: 'PGTA 11/14/2020 22:49:17'!
test16PortfolioCanHaveAName
	
	| johnsPortfolio accountName |
	accountName := 'Cuenta de Juan'.
	johnsPortfolio := Portfolio named: accountName.
	
	self assert: accountName equals: johnsPortfolio accountName.
! !

!testRun: #PortfolioTest #test16PortfolioCanHaveAName stamp: 'PGTA 11/14/2020 22:49:19'!
ERROR!
!Portfolio class methodsFor: 'as yet unclassified' stamp: 'PGTA 11/14/2020 22:49:54'!
named: aString 
	self shouldBeImplemented.! !
!Portfolio class methodsFor: 'as yet unclassified' stamp: 'PGTA 11/14/2020 22:50:18' prior: 50869336!
named: aName 
	^self new initializeWithName: aName.! !

!testRun: #PortfolioTest #test16PortfolioCanHaveAName stamp: 'PGTA 11/14/2020 22:50:20'!
ERROR!

!classDefinition: #Portfolio category: 'Portfolio-Solucion' stamp: 'PGTA 11/14/2020 22:50:30'!
Account subclass: #Portfolio
	instanceVariableNames: 'accounts parents name'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!
!Portfolio methodsFor: 'initialization' stamp: 'PGTA 11/14/2020 22:50:30'!
initializeWithName: aName 
	self shouldBeImplemented.
	name := aName.! !

!classDefinition: #Portfolio category: 'Portfolio-Solucion' stamp: 'PGTA 11/14/2020 22:50:59'!
Account subclass: #Portfolio
	instanceVariableNames: 'accounts parents name accountName'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!
!Portfolio methodsFor: 'initialization' stamp: 'PGTA 11/14/2020 22:50:56' prior: 50869356!
initializeWithName: aName 
	self initialize.
	accountName := aName.! !

!testRun: #PortfolioTest #test16PortfolioCanHaveAName stamp: 'PGTA 11/14/2020 22:51:01'!
ERROR!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'PGTA 11/14/2020 22:51:09'!
accountName
	self shouldBeImplemented.
	^accountName! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'PGTA 11/14/2020 22:51:15' prior: 50869378!
accountName
	^accountName! !

!testRun: #PortfolioTest #test16PortfolioCanHaveAName stamp: 'PGTA 11/14/2020 22:51:19'!
PASSED!

!testRun: #PortfolioTest #test01BalanceOfPortfolioWithoutAccountsIsZero stamp: 'PGTA 11/14/2020 22:51:19'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithOneAccountIsAccountBalance stamp: 'PGTA 11/14/2020 22:51:19'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioIsCalculatedRecursivelyOnPortfolios stamp: 'PGTA 11/14/2020 22:51:19'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithoutAccountsHasNoRegisteredTransaction stamp: 'PGTA 11/14/2020 22:51:19'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredItsAccountsTransactions stamp: 'PGTA 11/14/2020 22:51:19'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioLooksForRegisteredTransactionsRecursively stamp: 'PGTA 11/14/2020 22:51:19'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioHasNoTransactionWhenHasNoAccounts stamp: 'PGTA 11/14/2020 22:51:19'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTransactionsIncludesAllItsAccountsTransactions stamp: 'PGTA 11/14/2020 22:51:19'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioTransactionsAreCalculatedRecursively stamp: 'PGTA 11/14/2020 22:51:19'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCanNotIncludeTheSameAccountMoreThanOnce stamp: 'PGTA 11/14/2020 22:51:19'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCanNotIncludeAccountOfItsPortfolios stamp: 'PGTA 11/14/2020 22:51:19'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioCanNotIncludeItself stamp: 'PGTA 11/14/2020 22:51:19'!
PASSED!

!testRun: #PortfolioTest #test13ComposedPortfolioCanNotHaveParentPortfolioAccount stamp: 'PGTA 11/14/2020 22:51:19'!
PASSED!

!testRun: #PortfolioTest #test14ComposedPortfolioCanNotHaveAccountOfAnyRootParentRecursively stamp: 'PGTA 11/14/2020 22:51:19'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotIncludeAnyOfTheComposedAccountOfPortfolioToAdd stamp: 'PGTA 11/14/2020 22:51:19'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioCanHaveAName stamp: 'PGTA 11/14/2020 22:51:19'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioCanHaveAName stamp: 'PGTA 11/14/2020 22:51:22'!
PASSED!

!testRun: #PortfolioTest #test01BalanceOfPortfolioWithoutAccountsIsZero stamp: 'PGTA 11/14/2020 22:51:22'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithOneAccountIsAccountBalance stamp: 'PGTA 11/14/2020 22:51:22'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioIsCalculatedRecursivelyOnPortfolios stamp: 'PGTA 11/14/2020 22:51:22'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithoutAccountsHasNoRegisteredTransaction stamp: 'PGTA 11/14/2020 22:51:22'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredItsAccountsTransactions stamp: 'PGTA 11/14/2020 22:51:22'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioLooksForRegisteredTransactionsRecursively stamp: 'PGTA 11/14/2020 22:51:22'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioHasNoTransactionWhenHasNoAccounts stamp: 'PGTA 11/14/2020 22:51:22'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTransactionsIncludesAllItsAccountsTransactions stamp: 'PGTA 11/14/2020 22:51:22'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioTransactionsAreCalculatedRecursively stamp: 'PGTA 11/14/2020 22:51:22'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCanNotIncludeTheSameAccountMoreThanOnce stamp: 'PGTA 11/14/2020 22:51:22'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCanNotIncludeAccountOfItsPortfolios stamp: 'PGTA 11/14/2020 22:51:22'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioCanNotIncludeItself stamp: 'PGTA 11/14/2020 22:51:22'!
PASSED!

!testRun: #PortfolioTest #test13ComposedPortfolioCanNotHaveParentPortfolioAccount stamp: 'PGTA 11/14/2020 22:51:22'!
PASSED!

!testRun: #PortfolioTest #test14ComposedPortfolioCanNotHaveAccountOfAnyRootParentRecursively stamp: 'PGTA 11/14/2020 22:51:22'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotIncludeAnyOfTheComposedAccountOfPortfolioToAdd stamp: 'PGTA 11/14/2020 22:51:22'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioCanHaveAName stamp: 'PGTA 11/14/2020 22:51:22'!
PASSED!

----SNAPSHOT----(14 November 2020 22:51:26) CuisUniversity-4384.image priorSource: 17197978!
!PortfolioTest methodsFor: 'tests' stamp: 'PGTA 11/14/2020 22:56:50'!
test16PortfolioWithAnAccountCanHaveAName
	
	| johnsPortfolio portfolioName account |
	account := ReceptiveAccount new.
	portfolioName := 'Cuenta de Juan'.
	johnsPortfolio := Portfolio named: portfolioName with: account.
	
	self assert: portfolioName equals: johnsPortfolio accountName.
! !
!PortfolioTest methodsFor: 'tests' stamp: 'PGTA 11/14/2020 22:57:00'!
test17PortfolioWithAnAccountCanHaveAName
	
	| johnsPortfolio portfolioName account |
	account := ReceptiveAccount new.
	portfolioName := 'Cuenta de Juan'.
	johnsPortfolio := Portfolio named: portfolioName with: account.
	
	self assert: portfolioName equals: johnsPortfolio accountName.
! !

!methodRemoval: PortfolioTest #test16PortfolioWithAnAccountCanHaveAName stamp: 'PGTA 11/14/2020 22:57:00'!
test16PortfolioWithAnAccountCanHaveAName
	
	| johnsPortfolio portfolioName account |
	account := ReceptiveAccount new.
	portfolioName := 'Cuenta de Juan'.
	johnsPortfolio := Portfolio named: portfolioName with: account.
	
	self assert: portfolioName equals: johnsPortfolio accountName.
!

!testRun: #PortfolioTest #test17PortfolioWithAnAccountCanHaveAName stamp: 'PGTA 11/14/2020 22:57:03'!
ERROR!
!Portfolio class methodsFor: 'as yet unclassified' stamp: 'PGTA 11/14/2020 22:57:14'!
named: aString with: aReceptiveAccount 
	self shouldBeImplemented.! !
!Portfolio class methodsFor: 'as yet unclassified' stamp: 'PGTA 11/14/2020 22:58:45' prior: 50869559!
named: aName with: anAccount 
	self new initializeWithName: aName;
	add: anAccount;
		yourself! !
!Portfolio class methodsFor: 'as yet unclassified' stamp: 'PGTA 11/14/2020 23:02:43' prior: 50869565!
named: aName with: anAccount 
	
	^self new initializeWithName: aName;
	add: anAccount;
		yourself! !
!Portfolio class methodsFor: 'as yet unclassified' stamp: 'PGTA 11/14/2020 23:02:50' prior: 50869572!
named: aName with: anAccount 
	
	^self new initializeWithName: aName;
		add: anAccount;
		yourself! !

!testRun: #PortfolioTest #test17PortfolioWithAnAccountCanHaveAName stamp: 'PGTA 11/14/2020 23:02:53'!
PASSED!

!testRun: #PortfolioTest #test01BalanceOfPortfolioWithoutAccountsIsZero stamp: 'PGTA 11/14/2020 23:02:53'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithOneAccountIsAccountBalance stamp: 'PGTA 11/14/2020 23:02:53'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioIsCalculatedRecursivelyOnPortfolios stamp: 'PGTA 11/14/2020 23:02:53'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithoutAccountsHasNoRegisteredTransaction stamp: 'PGTA 11/14/2020 23:02:53'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredItsAccountsTransactions stamp: 'PGTA 11/14/2020 23:02:53'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioLooksForRegisteredTransactionsRecursively stamp: 'PGTA 11/14/2020 23:02:53'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioHasNoTransactionWhenHasNoAccounts stamp: 'PGTA 11/14/2020 23:02:53'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTransactionsIncludesAllItsAccountsTransactions stamp: 'PGTA 11/14/2020 23:02:53'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioTransactionsAreCalculatedRecursively stamp: 'PGTA 11/14/2020 23:02:53'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCanNotIncludeTheSameAccountMoreThanOnce stamp: 'PGTA 11/14/2020 23:02:53'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCanNotIncludeAccountOfItsPortfolios stamp: 'PGTA 11/14/2020 23:02:53'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioCanNotIncludeItself stamp: 'PGTA 11/14/2020 23:02:53'!
PASSED!

!testRun: #PortfolioTest #test13ComposedPortfolioCanNotHaveParentPortfolioAccount stamp: 'PGTA 11/14/2020 23:02:53'!
PASSED!

!testRun: #PortfolioTest #test14ComposedPortfolioCanNotHaveAccountOfAnyRootParentRecursively stamp: 'PGTA 11/14/2020 23:02:53'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotIncludeAnyOfTheComposedAccountOfPortfolioToAdd stamp: 'PGTA 11/14/2020 23:02:53'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioCanHaveAName stamp: 'PGTA 11/14/2020 23:02:53'!
PASSED!

!testRun: #PortfolioTest #test17PortfolioWithAnAccountCanHaveAName stamp: 'PGTA 11/14/2020 23:02:53'!
PASSED!
!PortfolioTest methodsFor: 'tests' stamp: 'PGTA 11/14/2020 23:03:53'!
test17PortfolioWithTwoAccountsCanHaveAName
	
	| johnsPortfolio portfolioName account1 account2 |
	account1 := ReceptiveAccount new.
	account2 := ReceptiveAccount new.
	
	portfolioName := 'Cuenta de Juan'.
	johnsPortfolio := Portfolio named: portfolioName with: account1 with: account2.
	
	self assert: portfolioName equals: johnsPortfolio accountName.
! !

!testRun: #PortfolioTest #test17PortfolioWithTwoAccountsCanHaveAName stamp: 'PGTA 11/14/2020 23:03:55'!
ERROR!
!Portfolio class methodsFor: 'as yet unclassified' stamp: 'PGTA 11/14/2020 23:04:03'!
named: aString with: aReceptiveAccount with: aReceptiveAccount3 
	self shouldBeImplemented.! !
!Portfolio class methodsFor: 'as yet unclassified' stamp: 'PGTA 11/14/2020 23:05:06' prior: 50869671!
named: aName with: anAccount with: anotherAccount
	
	^self new initializeWithName: aName;
		add: anAccount;
		add: anotherAccount;
		yourself! !

!testRun: #PortfolioTest #test17PortfolioWithTwoAccountsCanHaveAName stamp: 'PGTA 11/14/2020 23:05:07'!
PASSED!

!testRun: #PortfolioTest #test01BalanceOfPortfolioWithoutAccountsIsZero stamp: 'PGTA 11/14/2020 23:05:07'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithOneAccountIsAccountBalance stamp: 'PGTA 11/14/2020 23:05:07'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioIsCalculatedRecursivelyOnPortfolios stamp: 'PGTA 11/14/2020 23:05:07'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithoutAccountsHasNoRegisteredTransaction stamp: 'PGTA 11/14/2020 23:05:07'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredItsAccountsTransactions stamp: 'PGTA 11/14/2020 23:05:07'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioLooksForRegisteredTransactionsRecursively stamp: 'PGTA 11/14/2020 23:05:07'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioHasNoTransactionWhenHasNoAccounts stamp: 'PGTA 11/14/2020 23:05:07'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTransactionsIncludesAllItsAccountsTransactions stamp: 'PGTA 11/14/2020 23:05:07'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioTransactionsAreCalculatedRecursively stamp: 'PGTA 11/14/2020 23:05:07'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCanNotIncludeTheSameAccountMoreThanOnce stamp: 'PGTA 11/14/2020 23:05:07'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCanNotIncludeAccountOfItsPortfolios stamp: 'PGTA 11/14/2020 23:05:07'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioCanNotIncludeItself stamp: 'PGTA 11/14/2020 23:05:07'!
PASSED!

!testRun: #PortfolioTest #test13ComposedPortfolioCanNotHaveParentPortfolioAccount stamp: 'PGTA 11/14/2020 23:05:07'!
PASSED!

!testRun: #PortfolioTest #test14ComposedPortfolioCanNotHaveAccountOfAnyRootParentRecursively stamp: 'PGTA 11/14/2020 23:05:07'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotIncludeAnyOfTheComposedAccountOfPortfolioToAdd stamp: 'PGTA 11/14/2020 23:05:07'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioCanHaveAName stamp: 'PGTA 11/14/2020 23:05:07'!
PASSED!

!testRun: #PortfolioTest #test17PortfolioWithAnAccountCanHaveAName stamp: 'PGTA 11/14/2020 23:05:07'!
PASSED!

!testRun: #PortfolioTest #test17PortfolioWithTwoAccountsCanHaveAName stamp: 'PGTA 11/14/2020 23:05:07'!
PASSED!
!PortfolioTest methodsFor: 'tests' stamp: 'PGTA 11/14/2020 23:05:23'!
test18PortfolioWithTwoAccountsCanHaveAName
	
	| johnsPortfolio portfolioName account1 account2 |
	account1 := ReceptiveAccount new.
	account2 := ReceptiveAccount new.
	
	portfolioName := 'Cuenta de Juan'.
	johnsPortfolio := Portfolio named: portfolioName with: account1 with: account2.
	
	self assert: portfolioName equals: johnsPortfolio accountName.
! !

!methodRemoval: PortfolioTest #test17PortfolioWithTwoAccountsCanHaveAName stamp: 'PGTA 11/14/2020 23:05:23'!
test17PortfolioWithTwoAccountsCanHaveAName
	
	| johnsPortfolio portfolioName account1 account2 |
	account1 := ReceptiveAccount new.
	account2 := ReceptiveAccount new.
	
	portfolioName := 'Cuenta de Juan'.
	johnsPortfolio := Portfolio named: portfolioName with: account1 with: account2.
	
	self assert: portfolioName equals: johnsPortfolio accountName.
!

----SNAPSHOT----(14 November 2020 23:05:28) CuisUniversity-4384.image priorSource: 17211684!

!methodRemoval: TransferNet #reportTransactionInfo: stamp: 'PGTA 11/14/2020 23:07:16'!
reportTransactionInfo: aValue 
	netValue := netValue + aValue.!

algo := 'hola
	sarasa'!

algo!

algo!

!classDefinition: #PortfolioStructure category: 'Portfolio-Solucion' stamp: 'PGTA 11/14/2020 23:20:09'!
Report subclass: #PortfolioStructure
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!
!ReportTest methodsFor: 'transfer net' stamp: 'PGTA 11/14/2020 23:19:31'!
test12PortfolioStructureWithoutAccountsReturnsPortfolioName

	| portfolio portfolioName report |
	
	portfolioName := 'Portfolio de Juan'.
	portfolio := Portfolio named: portfolioName.
		
	report := PortfolioStructure for: portfolio.
	
	self assert: portfolioName equals: report.! !

!testRun: #ReportTest #test12PortfolioStructureWithoutAccountsReturnsPortfolioName stamp: 'PGTA 11/14/2020 23:20:09'!
ERROR!
!PortfolioStructure methodsFor: 'as yet unclassified' stamp: 'PGTA 11/14/2020 23:20:20' overrides: 50868894!
generateReportFor: aPortfolio 
	self shouldBeImplemented.! !
!PortfolioStructure methodsFor: 'as yet unclassified' stamp: 'PGTA 11/14/2020 23:20:58' prior: 50869819 overrides: 50868894!
generateReportFor: aPortfolio 
	^aPortfolio accountName.! !

!testRun: #ReportTest #test12PortfolioStructureWithoutAccountsReturnsPortfolioName stamp: 'PGTA 11/14/2020 23:21:00'!
PASSED!

!testRun: #ReportTest #test01AccountSummaryFromANewAccountReturnsBalance0 stamp: 'PGTA 11/14/2020 23:21:00'!
PASSED!

!testRun: #ReportTest #test02AccountSummaryReturnsAReportFromAnAccountWithADeposit stamp: 'PGTA 11/14/2020 23:21:00'!
PASSED!

!testRun: #ReportTest #test03AccountSummaryReturnsAReportFromAnAccountWithAWithdraw stamp: 'PGTA 11/14/2020 23:21:00'!
PASSED!

!testRun: #ReportTest #test04AccountSummaryReturnsAReportFromAnAccountWithATransferWithdraw stamp: 'PGTA 11/14/2020 23:21:00'!
PASSED!

!testRun: #ReportTest #test05AccountSummaryReturnsAReportFromAnAccountWithATransferDeposit stamp: 'PGTA 11/14/2020 23:21:00'!
PASSED!

!testRun: #ReportTest #test06TransferNetFromANewAccountReturnsZero stamp: 'PGTA 11/14/2020 23:21:00'!
PASSED!

!testRun: #ReportTest #test07TransferNetReturnsAReportFromAnAccountWithADeposit stamp: 'PGTA 11/14/2020 23:21:00'!
PASSED!

!testRun: #ReportTest #test08TransferNetReturnsAReportFromAnAccountWithAWithdraw stamp: 'PGTA 11/14/2020 23:21:00'!
PASSED!

!testRun: #ReportTest #test09TransferNetReturnsAReportFromAnAccountWithATransferWithdraw stamp: 'PGTA 11/14/2020 23:21:00'!
PASSED!

!testRun: #ReportTest #test10TransferNetReturnsAReportFromAnAccountWithATransferDeposit stamp: 'PGTA 11/14/2020 23:21:00'!
PASSED!

!testRun: #ReportTest #test11TransferNetWorksWithAPortfolio stamp: 'PGTA 11/14/2020 23:21:00'!
PASSED!

!testRun: #ReportTest #test12PortfolioStructureWithoutAccountsReturnsPortfolioName stamp: 'PGTA 11/14/2020 23:21:00'!
PASSED!

----SNAPSHOT----(14 November 2020 23:21:08) CuisUniversity-4384.image priorSource: 17220307!

----QUIT----(14 November 2020 23:21:26) CuisUniversity-4384.image priorSource: 17223350!

----STARTUP---- (15 November 2020 18:21:42) as C:\Users\paujimenez\Documents\Ingenieria1\cuisWindows64\19-windows64-Portfolio2\CuisUniversity-4384.image!


----End fileIn of C:\Users\paujimenez\Documents\Ingenieria1\IS1-2c-2020\19-Portfolio2\Portfolio-Solucion.st----!
!ReceptiveAccountTest methodsFor: 'account tests' stamp: 'PJ 11/15/2020 18:27:06'!
test13ReceptiveAccountWithoutANameReturnsDefault
	
	| johnsAccount accountName |
	accountName := 'a Receptive Account'.
	johnsAccount := ReceptiveAccount new.
	
	self assert: accountName equals: johnsAccount accountName.
! !

!testRun: #ReceptiveAccountTest #test13ReceptiveAccountWithoutANameReturnsDefault stamp: 'PJ 11/15/2020 18:27:08'!
FAILURE!
!ReceptiveAccount methodsFor: 'initialization' stamp: 'PJ 11/15/2020 18:27:55' prior: 50872892 overrides: 16896425!
initialize

	super initialize.
	accountName := 'a Receptive Account'.
	transactions := OrderedCollection new.! !

!testRun: #ReceptiveAccountTest #test13ReceptiveAccountWithoutANameReturnsDefault stamp: 'PJ 11/15/2020 18:28:03'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'PJ 11/15/2020 18:28:03'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'PJ 11/15/2020 18:28:03'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'PJ 11/15/2020 18:28:03'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'PJ 11/15/2020 18:28:03'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'PJ 11/15/2020 18:28:03'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'PJ 11/15/2020 18:28:03'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'PJ 11/15/2020 18:28:03'!
PASSED!

!testRun: #ReceptiveAccountTest #test08TransferSenderAccountAcknowledgesTransferTransactions stamp: 'PJ 11/15/2020 18:28:03'!
PASSED!

!testRun: #ReceptiveAccountTest #test09TransferReceiverAccountAcknowledgesTransferTransactions stamp: 'PJ 11/15/2020 18:28:03'!
PASSED!

!testRun: #ReceptiveAccountTest #test10TransferDepositAndWithdrawCanNavigateToTransfer stamp: 'PJ 11/15/2020 18:28:03'!
PASSED!

!testRun: #ReceptiveAccountTest #test11TransferDepositAndWithdrawKnowTheTransferAmount stamp: 'PJ 11/15/2020 18:28:03'!
PASSED!

!testRun: #ReceptiveAccountTest #test12ReceptiveAccountCanHaveAName stamp: 'PJ 11/15/2020 18:28:03'!
PASSED!

!testRun: #ReceptiveAccountTest #test13ReceptiveAccountWithoutANameReturnsDefault stamp: 'PJ 11/15/2020 18:28:03'!
PASSED!

!testRun: #ReceptiveAccountTest #test13ReceptiveAccountWithoutANameReturnsDefault stamp: 'PJ 11/15/2020 18:28:06'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'PJ 11/15/2020 18:28:06'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'PJ 11/15/2020 18:28:06'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'PJ 11/15/2020 18:28:06'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'PJ 11/15/2020 18:28:06'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'PJ 11/15/2020 18:28:06'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'PJ 11/15/2020 18:28:06'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'PJ 11/15/2020 18:28:06'!
PASSED!

!testRun: #ReceptiveAccountTest #test08TransferSenderAccountAcknowledgesTransferTransactions stamp: 'PJ 11/15/2020 18:28:06'!
PASSED!

!testRun: #ReceptiveAccountTest #test09TransferReceiverAccountAcknowledgesTransferTransactions stamp: 'PJ 11/15/2020 18:28:06'!
PASSED!

!testRun: #ReceptiveAccountTest #test10TransferDepositAndWithdrawCanNavigateToTransfer stamp: 'PJ 11/15/2020 18:28:06'!
PASSED!

!testRun: #ReceptiveAccountTest #test11TransferDepositAndWithdrawKnowTheTransferAmount stamp: 'PJ 11/15/2020 18:28:06'!
PASSED!

!testRun: #ReceptiveAccountTest #test12ReceptiveAccountCanHaveAName stamp: 'PJ 11/15/2020 18:28:06'!
PASSED!

!testRun: #ReceptiveAccountTest #test13ReceptiveAccountWithoutANameReturnsDefault stamp: 'PJ 11/15/2020 18:28:06'!
PASSED!
!PortfolioTest methodsFor: 'tests' stamp: 'PJ 11/15/2020 18:29:38'!
test19PortfolioWithoutANameReturnsDefault
	
	| johnsPortfolio portfolioName |
	portfolioName := 'a Portfolio'.
	johnsPortfolio := Portfolio new.
	
	self assert: portfolioName equals: johnsPortfolio accountName.
! !

!testRun: #PortfolioTest #test19PortfolioWithoutANameReturnsDefault stamp: 'PJ 11/15/2020 18:29:39'!
FAILURE!
!Portfolio methodsFor: 'initialization' stamp: 'PJ 11/15/2020 18:30:32' prior: 50872742 overrides: 16896425!
initialize

	accountName := 'a Portfolio'.
	accounts := OrderedCollection new.
	parents := OrderedCollection new.! !

!testRun: #PortfolioTest #test19PortfolioWithoutANameReturnsDefault stamp: 'PJ 11/15/2020 18:30:34'!
PASSED!

!testRun: #PortfolioTest #test01BalanceOfPortfolioWithoutAccountsIsZero stamp: 'PJ 11/15/2020 18:30:34'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithOneAccountIsAccountBalance stamp: 'PJ 11/15/2020 18:30:34'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioIsCalculatedRecursivelyOnPortfolios stamp: 'PJ 11/15/2020 18:30:34'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithoutAccountsHasNoRegisteredTransaction stamp: 'PJ 11/15/2020 18:30:34'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredItsAccountsTransactions stamp: 'PJ 11/15/2020 18:30:34'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioLooksForRegisteredTransactionsRecursively stamp: 'PJ 11/15/2020 18:30:34'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioHasNoTransactionWhenHasNoAccounts stamp: 'PJ 11/15/2020 18:30:34'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTransactionsIncludesAllItsAccountsTransactions stamp: 'PJ 11/15/2020 18:30:34'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioTransactionsAreCalculatedRecursively stamp: 'PJ 11/15/2020 18:30:34'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCanNotIncludeTheSameAccountMoreThanOnce stamp: 'PJ 11/15/2020 18:30:34'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCanNotIncludeAccountOfItsPortfolios stamp: 'PJ 11/15/2020 18:30:34'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioCanNotIncludeItself stamp: 'PJ 11/15/2020 18:30:34'!
PASSED!

!testRun: #PortfolioTest #test13ComposedPortfolioCanNotHaveParentPortfolioAccount stamp: 'PJ 11/15/2020 18:30:34'!
PASSED!

!testRun: #PortfolioTest #test14ComposedPortfolioCanNotHaveAccountOfAnyRootParentRecursively stamp: 'PJ 11/15/2020 18:30:34'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotIncludeAnyOfTheComposedAccountOfPortfolioToAdd stamp: 'PJ 11/15/2020 18:30:34'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioCanHaveAName stamp: 'PJ 11/15/2020 18:30:34'!
PASSED!

!testRun: #PortfolioTest #test17PortfolioWithAnAccountCanHaveAName stamp: 'PJ 11/15/2020 18:30:34'!
PASSED!

!testRun: #PortfolioTest #test18PortfolioWithTwoAccountsCanHaveAName stamp: 'PJ 11/15/2020 18:30:35'!
PASSED!

!testRun: #PortfolioTest #test19PortfolioWithoutANameReturnsDefault stamp: 'PJ 11/15/2020 18:30:35'!
PASSED!

!testRun: #PortfolioTest #test19PortfolioWithoutANameReturnsDefault stamp: 'PJ 11/15/2020 18:30:37'!
PASSED!

!testRun: #PortfolioTest #test01BalanceOfPortfolioWithoutAccountsIsZero stamp: 'PJ 11/15/2020 18:30:37'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithOneAccountIsAccountBalance stamp: 'PJ 11/15/2020 18:30:38'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioIsCalculatedRecursivelyOnPortfolios stamp: 'PJ 11/15/2020 18:30:38'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithoutAccountsHasNoRegisteredTransaction stamp: 'PJ 11/15/2020 18:30:38'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredItsAccountsTransactions stamp: 'PJ 11/15/2020 18:30:38'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioLooksForRegisteredTransactionsRecursively stamp: 'PJ 11/15/2020 18:30:38'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioHasNoTransactionWhenHasNoAccounts stamp: 'PJ 11/15/2020 18:30:38'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTransactionsIncludesAllItsAccountsTransactions stamp: 'PJ 11/15/2020 18:30:38'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioTransactionsAreCalculatedRecursively stamp: 'PJ 11/15/2020 18:30:38'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCanNotIncludeTheSameAccountMoreThanOnce stamp: 'PJ 11/15/2020 18:30:38'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCanNotIncludeAccountOfItsPortfolios stamp: 'PJ 11/15/2020 18:30:38'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioCanNotIncludeItself stamp: 'PJ 11/15/2020 18:30:38'!
PASSED!

!testRun: #PortfolioTest #test13ComposedPortfolioCanNotHaveParentPortfolioAccount stamp: 'PJ 11/15/2020 18:30:38'!
PASSED!

!testRun: #PortfolioTest #test14ComposedPortfolioCanNotHaveAccountOfAnyRootParentRecursively stamp: 'PJ 11/15/2020 18:30:38'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotIncludeAnyOfTheComposedAccountOfPortfolioToAdd stamp: 'PJ 11/15/2020 18:30:38'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioCanHaveAName stamp: 'PJ 11/15/2020 18:30:38'!
PASSED!

!testRun: #PortfolioTest #test17PortfolioWithAnAccountCanHaveAName stamp: 'PJ 11/15/2020 18:30:38'!
PASSED!

!testRun: #PortfolioTest #test18PortfolioWithTwoAccountsCanHaveAName stamp: 'PJ 11/15/2020 18:30:38'!
PASSED!

!testRun: #PortfolioTest #test19PortfolioWithoutANameReturnsDefault stamp: 'PJ 11/15/2020 18:30:38'!
PASSED!

----SNAPSHOT----(15 November 2020 18:30:42) CuisUniversity-4384.image priorSource: 17290528!

----SNAPSHOT----(15 November 2020 18:36:30) CuisUniversity-4384.image priorSource: 17346824!

----STARTUP---- (15 November 2020 18:49:05) as /home/pablo/Documents/Ingenieria1/cuis_portfolio2/CuisUniversity-4384.image!


----SNAPSHOT----(15 November 2020 18:49:11) CuisUniversity-4384.image priorSource: 17202524!
!ReportTest methodsFor: 'portfolio tree' stamp: 'PGTA 11/15/2020 19:00:58'!
test13PortfolioStructureWithOneAccount

	| portfolio portfolioName report account accountName |
	
	accountName := 'Cuenta de Juan'.
	account := 	ReceptiveAccount named: accountName.
	
	portfolioName := 'Portfolio de Juan'.
	portfolio := Portfolio named: portfolioName.
	
	report := PortfolioStructure for: portfolio.
	
	self assert: portfolioName equals: (report at: 1).
	self assert: ('	', accountName) equals: (report at: 2).! !
!ReportTest methodsFor: 'portfolio tree' stamp: 'PGTA 11/15/2020 19:01:27' prior: 50869239!
test13PortfolioStructureWithOneAccount

	| portfolio portfolioName report account accountName |
	
	accountName := 'Cuenta de Juan'.
	account := 	ReceptiveAccount named: accountName.
	
	portfolioName := 'Portfolio de Juan'.
	portfolio := Portfolio named: portfolioName with: account.
	
	report := PortfolioStructure for: portfolio.
	
	self assert: portfolioName equals: (report at: 1).
	self assert: ('	', accountName) equals: (report at: 2).! !

!testRun: #ReportTest #test13PortfolioStructureWithOneAccount stamp: 'PGTA 11/15/2020 19:01:30'!
FAILURE!

!testRun: #ReportTest #test13PortfolioStructureWithOneAccount stamp: 'PGTA 11/15/2020 19:17:05'!
FAILURE!

!testRun: #ReportTest #test13PortfolioStructureWithOneAccount stamp: 'PGTA 11/15/2020 19:17:15'!
FAILURE!

!classDefinition: #PortfolioStructure category: 'Portfolio-Solucion' stamp: 'PGTA 11/15/2020 19:19:25'!
Report subclass: #PortfolioStructure
	instanceVariableNames: 'structure'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!
!PortfolioStructure methodsFor: 'as yet unclassified' stamp: 'PGTA 11/15/2020 19:19:23' prior: 50869125 overrides: 50869026!
generateReportFor: aPortfolio 
	structure := OrderedCollection new.
	aPortfolio reportStructureTo: self.
	^structure.! !

!testRun: #ReportTest #test13PortfolioStructureWithOneAccount stamp: 'PGTA 11/15/2020 19:19:34'!
ERROR!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'PGTA 11/15/2020 19:19:47'!
reportStructureTo: aPortfolioStructure 
	self shouldBeImplemented.! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'PGTA 11/15/2020 19:25:26' prior: 50869302!
reportStructureTo: aReport
	aReport reportAsPortfolio: self.
	accounts do: [:anAccount | anAccount reportStructureTo: aReport]! !

!testRun: #ReportTest #test13PortfolioStructureWithOneAccount stamp: 'PGTA 11/15/2020 19:25:31'!
ERROR!
!PortfolioStructure methodsFor: 'accessing' stamp: 'PGTA 11/15/2020 19:25:41'!
reportAsPortfolio: aPortfolio 
	self shouldBeImplemented.! !
!PortfolioStructure methodsFor: 'accessing' stamp: 'PGTA 11/15/2020 19:26:45' prior: 50869318!
reportAsPortfolio: aPortfolio 
	structure add: aPortfolio accountName.! !

!testRun: #ReportTest #test13PortfolioStructureWithOneAccount stamp: 'PGTA 11/15/2020 19:26:46'!
ERROR!
!ReceptiveAccount methodsFor: 'as yet unclassified' stamp: 'PGTA 11/15/2020 19:26:55'!
reportStructureTo: aPortfolioStructure 
	self shouldBeImplemented.! !
!ReceptiveAccount methodsFor: 'as yet unclassified' stamp: 'PGTA 11/15/2020 19:27:33' prior: 50869332!
reportStructureTo: aReport
	aReport reportAsReceptiveAccount: self.! !

!testRun: #ReportTest #test13PortfolioStructureWithOneAccount stamp: 'PGTA 11/15/2020 19:27:36'!
ERROR!
!PortfolioStructure methodsFor: 'as yet unclassified' stamp: 'PGTA 11/15/2020 19:27:47'!
reportAsReceptiveAccount: aReceptiveAccount 
	self shouldBeImplemented.! !
!PortfolioStructure methodsFor: 'as yet unclassified' stamp: 'PGTA 11/15/2020 19:28:26' prior: 50869347!
reportAsReceptiveAccount: aReceptiveAccount
	structure add: (aReceptiveAccount accountName).! !
!PortfolioStructure methodsFor: 'as yet unclassified' stamp: 'PGTA 11/15/2020 19:28:50' prior: 50869353!
reportAsReceptiveAccount: aReceptiveAccount
	structure add: ('	', aReceptiveAccount accountName).! !

!testRun: #ReportTest #test13PortfolioStructureWithOneAccount stamp: 'PGTA 11/15/2020 19:28:50'!
PASSED!

!testRun: #ReportTest #test01AccountSummaryFromANewAccountReturnsBalance0 stamp: 'PGTA 11/15/2020 19:28:50'!
PASSED!

!testRun: #ReportTest #test02AccountSummaryReturnsAReportFromAnAccountWithADeposit stamp: 'PGTA 11/15/2020 19:28:50'!
PASSED!

!testRun: #ReportTest #test03AccountSummaryReturnsAReportFromAnAccountWithAWithdraw stamp: 'PGTA 11/15/2020 19:28:50'!
PASSED!

!testRun: #ReportTest #test04AccountSummaryReturnsAReportFromAnAccountWithATransferWithdraw stamp: 'PGTA 11/15/2020 19:28:50'!
PASSED!

!testRun: #ReportTest #test05AccountSummaryReturnsAReportFromAnAccountWithATransferDeposit stamp: 'PGTA 11/15/2020 19:28:50'!
PASSED!

!testRun: #ReportTest #test06TransferNetFromANewAccountReturnsZero stamp: 'PGTA 11/15/2020 19:28:50'!
PASSED!

!testRun: #ReportTest #test07TransferNetReturnsAReportFromAnAccountWithADeposit stamp: 'PGTA 11/15/2020 19:28:50'!
PASSED!

!testRun: #ReportTest #test08TransferNetReturnsAReportFromAnAccountWithAWithdraw stamp: 'PGTA 11/15/2020 19:28:50'!
PASSED!

!testRun: #ReportTest #test09TransferNetReturnsAReportFromAnAccountWithATransferWithdraw stamp: 'PGTA 11/15/2020 19:28:51'!
PASSED!

!testRun: #ReportTest #test10TransferNetReturnsAReportFromAnAccountWithATransferDeposit stamp: 'PGTA 11/15/2020 19:28:51'!
PASSED!

!testRun: #ReportTest #test11TransferNetWorksWithAPortfolio stamp: 'PGTA 11/15/2020 19:28:51'!
PASSED!

!testRun: #ReportTest #test12PortfolioStructureWithoutAccountsReturnsPortfolioName stamp: 'PGTA 11/15/2020 19:28:51'!
FAILURE!

!testRun: #ReportTest #test13PortfolioStructureWithOneAccount stamp: 'PGTA 11/15/2020 19:28:51'!
PASSED!

!testRun: #ReportTest #test12PortfolioStructureWithoutAccountsReturnsPortfolioName stamp: 'PGTA 11/15/2020 19:28:51'!
FAILURE!
!ReportTest methodsFor: 'portfolio tree' stamp: 'PGTA 11/15/2020 19:29:34' prior: 50868429!
test12PortfolioStructureWithoutAccountsReturnsPortfolioName

	| portfolio portfolioName report |
	
	portfolioName := 'Portfolio de Juan'.
	portfolio := Portfolio named: portfolioName.
		
	report := PortfolioStructure for: portfolio.
	
	self assert: portfolioName equals: report first.! !

!testRun: #ReportTest #test12PortfolioStructureWithoutAccountsReturnsPortfolioName stamp: 'PGTA 11/15/2020 19:29:34'!
PASSED!

!testRun: #ReportTest #test01AccountSummaryFromANewAccountReturnsBalance0 stamp: 'PGTA 11/15/2020 19:29:34'!
PASSED!

!testRun: #ReportTest #test02AccountSummaryReturnsAReportFromAnAccountWithADeposit stamp: 'PGTA 11/15/2020 19:29:34'!
PASSED!

!testRun: #ReportTest #test03AccountSummaryReturnsAReportFromAnAccountWithAWithdraw stamp: 'PGTA 11/15/2020 19:29:34'!
PASSED!

!testRun: #ReportTest #test04AccountSummaryReturnsAReportFromAnAccountWithATransferWithdraw stamp: 'PGTA 11/15/2020 19:29:34'!
PASSED!

!testRun: #ReportTest #test05AccountSummaryReturnsAReportFromAnAccountWithATransferDeposit stamp: 'PGTA 11/15/2020 19:29:34'!
PASSED!

!testRun: #ReportTest #test06TransferNetFromANewAccountReturnsZero stamp: 'PGTA 11/15/2020 19:29:34'!
PASSED!

!testRun: #ReportTest #test07TransferNetReturnsAReportFromAnAccountWithADeposit stamp: 'PGTA 11/15/2020 19:29:34'!
PASSED!

!testRun: #ReportTest #test08TransferNetReturnsAReportFromAnAccountWithAWithdraw stamp: 'PGTA 11/15/2020 19:29:34'!
PASSED!

!testRun: #ReportTest #test09TransferNetReturnsAReportFromAnAccountWithATransferWithdraw stamp: 'PGTA 11/15/2020 19:29:34'!
PASSED!

!testRun: #ReportTest #test10TransferNetReturnsAReportFromAnAccountWithATransferDeposit stamp: 'PGTA 11/15/2020 19:29:34'!
PASSED!

!testRun: #ReportTest #test11TransferNetWorksWithAPortfolio stamp: 'PGTA 11/15/2020 19:29:34'!
PASSED!

!testRun: #ReportTest #test12PortfolioStructureWithoutAccountsReturnsPortfolioName stamp: 'PGTA 11/15/2020 19:29:34'!
PASSED!

!testRun: #ReportTest #test13PortfolioStructureWithOneAccount stamp: 'PGTA 11/15/2020 19:29:34'!
PASSED!
!ReportTest methodsFor: 'portfolio tree' stamp: 'PGTA 11/15/2020 19:33:34'!
test14PortfolioStructureWithOnePortfolioIndentsCorrectly

	| portfolio1 portfolio2 portfolioName1 portfolioName2 report |
	
	portfolioName1 := 'Portfolio hijo'.
	portfolio1 := Portfolio named: portfolioName1.
	
	portfolioName2 := 'Portfolio padre'.
	portfolio2 := Portfolio named: portfolioName2 with: portfolio1.
	
	report := PortfolioStructure for: portfolio2.
	
	self assert: portfolioName2 equals: (report at: 1).
	self assert: ('	', portfolioName1) equals: (report at: 2).! !

!testRun: #ReportTest #test14PortfolioStructureWithOnePortfolioIndentsCorrectly stamp: 'PGTA 11/15/2020 19:33:36'!
FAILURE!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'PGTA 11/15/2020 19:50:01' prior: 50869308!
reportStructureTo: aReport
	aReport reportAsPortfolio: self.
	accounts do: [:anAccount | anAccount reportChildStructureTo: aReport]! !

!testRun: #ReportTest #test14PortfolioStructureWithOnePortfolioIndentsCorrectly stamp: 'PGTA 11/15/2020 19:50:16'!
ERROR!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'PGTA 11/15/2020 19:50:25'!
reportChildStructureTo: aPortfolioStructure 
	self shouldBeImplemented.! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'PGTA 11/15/2020 19:59:37' prior: 50869523!
reportChildStructureTo: aReport
	self reportStructureTo: aReport.! !

!testRun: #ReportTest #test14PortfolioStructureWithOnePortfolioIndentsCorrectly stamp: 'PGTA 11/15/2020 19:59:55'!
FAILURE!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'PGTA 11/15/2020 20:00:27' prior: 50869529!
reportChildStructureTo: aReport
	^self reportStructureTo: aReport.! !

!testRun: #ReportTest #test14PortfolioStructureWithOnePortfolioIndentsCorrectly stamp: 'PGTA 11/15/2020 20:00:32'!
FAILURE!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'PGTA 11/15/2020 20:05:43' prior: 50869539!
reportChildStructureTo: aReport
	| report |
	report := self reportStructureTo: aReport.
	! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'PGTA 11/15/2020 20:05:50' prior: 50869549!
reportChildStructureTo: aReport
	| report |
	report := self reportStructureTo: aReport.
	^report! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'PGTA 11/15/2020 20:06:55' prior: 50869555!
reportChildStructureTo: aReport
	^self reportStructureTo: aReport.! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'PGTA 11/15/2020 20:18:23' prior: 50869512!
reportStructureTo: aReport
	| childReport |
	aReport reportAsPortfolio: self.
	
	childReport := OrderedCollection new.
	accounts do: [:anAccount | anAccount reportChildStructureTo: aReport].! !
!PortfolioStructure methodsFor: 'as yet unclassified' stamp: 'PGTA 11/15/2020 20:28:53' prior: 50869292 overrides: 50869026!
generateReportFor: aPortfolio 
	structure := OrderedCollection new.
	aPortfolio reportStructureTo: self forLevel: 0.
	^structure.! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'PGTA 11/15/2020 20:31:05'!
reportStructureTo: aReport  forLevel: aLevel
	aReport reportAsPortfolio: self forLevel: aLevel.
	accounts do: [:anAccount | anAccount reportStructureTo: aReport  forLevel: (aLevel+1)].! !
!PortfolioStructure methodsFor: 'accessing' stamp: 'PGTA 11/15/2020 20:34:07'!
reportAsPortfolio: aPortfolio forLevel: aLevel
	| accountString |
	accountString := self generateIndentationFor: aLevel.
	structure add: (accountString, aPortfolio accountName).! !

!testRun: #ReportTest #test14PortfolioStructureWithOnePortfolioIndentsCorrectly stamp: 'PGTA 11/15/2020 20:34:14'!
ERROR!
!PortfolioStructure methodsFor: 'as yet unclassified' stamp: 'PGTA 11/15/2020 20:34:25'!
generateIndentationFor: aSmallInteger 
	self shouldBeImplemented.! !

'E'*5!

'' padded: #left to: 5 with: '	'!

'' padded: #left to: 5 with: $	!

'' padded: #left to: 5 with: $	!

'' padded: #left to: 5 with: $a	!

'' padded: #left to: 5 with: $	a!

'a' padded: #left to: 5 with: $	!
!PortfolioStructure methodsFor: 'as yet unclassified' stamp: 'PGTA 11/15/2020 20:39:32' prior: 50869607!
generateIndentationFor: aLevel
	^'' padded: #left to: aLevel with: $	! !

!testRun: #ReportTest #test14PortfolioStructureWithOnePortfolioIndentsCorrectly stamp: 'PGTA 11/15/2020 20:39:35'!
PASSED!

!testRun: #ReportTest #test01AccountSummaryFromANewAccountReturnsBalance0 stamp: 'PGTA 11/15/2020 20:39:35'!
PASSED!

!testRun: #ReportTest #test02AccountSummaryReturnsAReportFromAnAccountWithADeposit stamp: 'PGTA 11/15/2020 20:39:35'!
PASSED!

!testRun: #ReportTest #test03AccountSummaryReturnsAReportFromAnAccountWithAWithdraw stamp: 'PGTA 11/15/2020 20:39:35'!
PASSED!

!testRun: #ReportTest #test04AccountSummaryReturnsAReportFromAnAccountWithATransferWithdraw stamp: 'PGTA 11/15/2020 20:39:35'!
PASSED!

!testRun: #ReportTest #test05AccountSummaryReturnsAReportFromAnAccountWithATransferDeposit stamp: 'PGTA 11/15/2020 20:39:35'!
PASSED!

!testRun: #ReportTest #test06TransferNetFromANewAccountReturnsZero stamp: 'PGTA 11/15/2020 20:39:35'!
PASSED!

!testRun: #ReportTest #test07TransferNetReturnsAReportFromAnAccountWithADeposit stamp: 'PGTA 11/15/2020 20:39:35'!
PASSED!

!testRun: #ReportTest #test08TransferNetReturnsAReportFromAnAccountWithAWithdraw stamp: 'PGTA 11/15/2020 20:39:35'!
PASSED!

!testRun: #ReportTest #test09TransferNetReturnsAReportFromAnAccountWithATransferWithdraw stamp: 'PGTA 11/15/2020 20:39:35'!
PASSED!

!testRun: #ReportTest #test10TransferNetReturnsAReportFromAnAccountWithATransferDeposit stamp: 'PGTA 11/15/2020 20:39:35'!
PASSED!

!testRun: #ReportTest #test11TransferNetWorksWithAPortfolio stamp: 'PGTA 11/15/2020 20:39:35'!
PASSED!

!testRun: #ReportTest #test12PortfolioStructureWithoutAccountsReturnsPortfolioName stamp: 'PGTA 11/15/2020 20:39:35'!
PASSED!

!testRun: #ReportTest #test13PortfolioStructureWithOneAccount stamp: 'PGTA 11/15/2020 20:39:35'!
ERROR!

!testRun: #ReportTest #test14PortfolioStructureWithOnePortfolioIndentsCorrectly stamp: 'PGTA 11/15/2020 20:39:35'!
PASSED!

!testRun: #ReportTest #test13PortfolioStructureWithOneAccount stamp: 'PGTA 11/15/2020 20:39:35'!
ERROR!
!ReceptiveAccount methodsFor: 'as yet unclassified' stamp: 'PGTA 11/15/2020 20:39:47'!
reportStructureTo: aPortfolioStructure forLevel: aSmallInteger 
	self shouldBeImplemented.! !
!ReceptiveAccount methodsFor: 'as yet unclassified' stamp: 'PGTA 11/15/2020 20:40:52' prior: 50869687!
reportStructureTo: aReport forLevel: aLevel
	aReport reportAsReceptiveAccount: self forLevel: aLevel.! !

!testRun: #ReportTest #test14PortfolioStructureWithOnePortfolioIndentsCorrectly stamp: 'PGTA 11/15/2020 20:41:02'!
PASSED!

!testRun: #ReportTest #test01AccountSummaryFromANewAccountReturnsBalance0 stamp: 'PGTA 11/15/2020 20:41:02'!
PASSED!

!testRun: #ReportTest #test02AccountSummaryReturnsAReportFromAnAccountWithADeposit stamp: 'PGTA 11/15/2020 20:41:02'!
PASSED!

!testRun: #ReportTest #test03AccountSummaryReturnsAReportFromAnAccountWithAWithdraw stamp: 'PGTA 11/15/2020 20:41:02'!
PASSED!

!testRun: #ReportTest #test04AccountSummaryReturnsAReportFromAnAccountWithATransferWithdraw stamp: 'PGTA 11/15/2020 20:41:02'!
PASSED!

!testRun: #ReportTest #test05AccountSummaryReturnsAReportFromAnAccountWithATransferDeposit stamp: 'PGTA 11/15/2020 20:41:02'!
PASSED!

!testRun: #ReportTest #test06TransferNetFromANewAccountReturnsZero stamp: 'PGTA 11/15/2020 20:41:02'!
PASSED!

!testRun: #ReportTest #test07TransferNetReturnsAReportFromAnAccountWithADeposit stamp: 'PGTA 11/15/2020 20:41:02'!
PASSED!

!testRun: #ReportTest #test08TransferNetReturnsAReportFromAnAccountWithAWithdraw stamp: 'PGTA 11/15/2020 20:41:02'!
PASSED!

!testRun: #ReportTest #test09TransferNetReturnsAReportFromAnAccountWithATransferWithdraw stamp: 'PGTA 11/15/2020 20:41:02'!
PASSED!

!testRun: #ReportTest #test10TransferNetReturnsAReportFromAnAccountWithATransferDeposit stamp: 'PGTA 11/15/2020 20:41:02'!
PASSED!

!testRun: #ReportTest #test11TransferNetWorksWithAPortfolio stamp: 'PGTA 11/15/2020 20:41:02'!
PASSED!

!testRun: #ReportTest #test12PortfolioStructureWithoutAccountsReturnsPortfolioName stamp: 'PGTA 11/15/2020 20:41:02'!
PASSED!

!testRun: #ReportTest #test13PortfolioStructureWithOneAccount stamp: 'PGTA 11/15/2020 20:41:02'!
ERROR!

!testRun: #ReportTest #test14PortfolioStructureWithOnePortfolioIndentsCorrectly stamp: 'PGTA 11/15/2020 20:41:02'!
PASSED!

!testRun: #ReportTest #test13PortfolioStructureWithOneAccount stamp: 'PGTA 11/15/2020 20:41:02'!
ERROR!
!PortfolioStructure methodsFor: 'as yet unclassified' stamp: 'PGTA 11/15/2020 20:41:11'!
reportAsReceptiveAccount: aReceptiveAccount forLevel: aSmallInteger 
	self shouldBeImplemented.! !
!PortfolioStructure methodsFor: 'as yet unclassified' stamp: 'PGTA 11/15/2020 20:41:58' prior: 50869762!
reportAsReceptiveAccount: aReceptiveAccount forLevel: aLevel
	| accountString |
	accountString := self generateIndentationFor: aLevel.
	structure add: (accountString, aReceptiveAccount accountName).! !

!testRun: #ReportTest #test13PortfolioStructureWithOneAccount stamp: 'PGTA 11/15/2020 20:41:59'!
PASSED!

!testRun: #ReportTest #test14PortfolioStructureWithOnePortfolioIndentsCorrectly stamp: 'PGTA 11/15/2020 20:42:09'!
PASSED!

!testRun: #ReportTest #test01AccountSummaryFromANewAccountReturnsBalance0 stamp: 'PGTA 11/15/2020 20:42:09'!
PASSED!

!testRun: #ReportTest #test02AccountSummaryReturnsAReportFromAnAccountWithADeposit stamp: 'PGTA 11/15/2020 20:42:09'!
PASSED!

!testRun: #ReportTest #test03AccountSummaryReturnsAReportFromAnAccountWithAWithdraw stamp: 'PGTA 11/15/2020 20:42:09'!
PASSED!

!testRun: #ReportTest #test04AccountSummaryReturnsAReportFromAnAccountWithATransferWithdraw stamp: 'PGTA 11/15/2020 20:42:09'!
PASSED!

!testRun: #ReportTest #test05AccountSummaryReturnsAReportFromAnAccountWithATransferDeposit stamp: 'PGTA 11/15/2020 20:42:09'!
PASSED!

!testRun: #ReportTest #test06TransferNetFromANewAccountReturnsZero stamp: 'PGTA 11/15/2020 20:42:09'!
PASSED!

!testRun: #ReportTest #test07TransferNetReturnsAReportFromAnAccountWithADeposit stamp: 'PGTA 11/15/2020 20:42:09'!
PASSED!

!testRun: #ReportTest #test08TransferNetReturnsAReportFromAnAccountWithAWithdraw stamp: 'PGTA 11/15/2020 20:42:09'!
PASSED!

!testRun: #ReportTest #test09TransferNetReturnsAReportFromAnAccountWithATransferWithdraw stamp: 'PGTA 11/15/2020 20:42:09'!
PASSED!

!testRun: #ReportTest #test10TransferNetReturnsAReportFromAnAccountWithATransferDeposit stamp: 'PGTA 11/15/2020 20:42:09'!
PASSED!

!testRun: #ReportTest #test11TransferNetWorksWithAPortfolio stamp: 'PGTA 11/15/2020 20:42:09'!
PASSED!

!testRun: #ReportTest #test12PortfolioStructureWithoutAccountsReturnsPortfolioName stamp: 'PGTA 11/15/2020 20:42:09'!
PASSED!

!testRun: #ReportTest #test13PortfolioStructureWithOneAccount stamp: 'PGTA 11/15/2020 20:42:09'!
PASSED!

!testRun: #ReportTest #test14PortfolioStructureWithOnePortfolioIndentsCorrectly stamp: 'PGTA 11/15/2020 20:42:09'!
PASSED!

----SNAPSHOT----(15 November 2020 20:42:37) CuisUniversity-4384.image priorSource: 17202740!

!methodRemoval: ReceptiveAccount #reportStructureTo: stamp: 'PGTA 11/15/2020 20:43:09'!
reportStructureTo: aReport
	aReport reportAsReceptiveAccount: self.!

!methodRemoval: Portfolio #reportStructureTo: stamp: 'PGTA 11/15/2020 20:43:28'!
reportStructureTo: aReport
	| childReport |
	aReport reportAsPortfolio: self.
	
	childReport := OrderedCollection new.
	accounts do: [:anAccount | anAccount reportChildStructureTo: aReport].!

!methodRemoval: Portfolio #reportChildStructureTo: stamp: 'PGTA 11/15/2020 20:43:33'!
reportChildStructureTo: aReport
	^self reportStructureTo: aReport.!

!testRun: #ReportTest #test13PortfolioStructureWithOneAccount stamp: 'PGTA 11/15/2020 20:43:46'!
PASSED!

!testRun: #ReportTest #test01AccountSummaryFromANewAccountReturnsBalance0 stamp: 'PGTA 11/15/2020 20:43:46'!
PASSED!

!testRun: #ReportTest #test02AccountSummaryReturnsAReportFromAnAccountWithADeposit stamp: 'PGTA 11/15/2020 20:43:46'!
PASSED!

!testRun: #ReportTest #test03AccountSummaryReturnsAReportFromAnAccountWithAWithdraw stamp: 'PGTA 11/15/2020 20:43:46'!
PASSED!

!testRun: #ReportTest #test04AccountSummaryReturnsAReportFromAnAccountWithATransferWithdraw stamp: 'PGTA 11/15/2020 20:43:46'!
PASSED!

!testRun: #ReportTest #test05AccountSummaryReturnsAReportFromAnAccountWithATransferDeposit stamp: 'PGTA 11/15/2020 20:43:46'!
PASSED!

!testRun: #ReportTest #test06TransferNetFromANewAccountReturnsZero stamp: 'PGTA 11/15/2020 20:43:46'!
PASSED!

!testRun: #ReportTest #test07TransferNetReturnsAReportFromAnAccountWithADeposit stamp: 'PGTA 11/15/2020 20:43:46'!
PASSED!

!testRun: #ReportTest #test08TransferNetReturnsAReportFromAnAccountWithAWithdraw stamp: 'PGTA 11/15/2020 20:43:46'!
PASSED!

!testRun: #ReportTest #test09TransferNetReturnsAReportFromAnAccountWithATransferWithdraw stamp: 'PGTA 11/15/2020 20:43:46'!
PASSED!

!testRun: #ReportTest #test10TransferNetReturnsAReportFromAnAccountWithATransferDeposit stamp: 'PGTA 11/15/2020 20:43:46'!
PASSED!

!testRun: #ReportTest #test11TransferNetWorksWithAPortfolio stamp: 'PGTA 11/15/2020 20:43:46'!
PASSED!

!testRun: #ReportTest #test12PortfolioStructureWithoutAccountsReturnsPortfolioName stamp: 'PGTA 11/15/2020 20:43:46'!
PASSED!

!testRun: #ReportTest #test13PortfolioStructureWithOneAccount stamp: 'PGTA 11/15/2020 20:43:46'!
PASSED!

!testRun: #ReportTest #test14PortfolioStructureWithOnePortfolioIndentsCorrectly stamp: 'PGTA 11/15/2020 20:43:46'!
PASSED!

!methodRemoval: PortfolioStructure #reportAsReceptiveAccount: stamp: 'PGTA 11/15/2020 20:44:07'!
reportAsReceptiveAccount: aReceptiveAccount
	structure add: ('	', aReceptiveAccount accountName).!

!methodRemoval: PortfolioStructure #reportAsPortfolio: stamp: 'PGTA 11/15/2020 20:44:15'!
reportAsPortfolio: aPortfolio 
	structure add: aPortfolio accountName.!

----SNAPSHOT----(15 November 2020 20:44:25) CuisUniversity-4384.image priorSource: 17222033!

!testRun: #ReportTest #test10TransferNetReturnsAReportFromAnAccountWithATransferDeposit stamp: 'PGTA 11/15/2020 20:44:33'!
PASSED!

!testRun: #ReportTest #test10TransferNetReturnsAReportFromAnAccountWithATransferDeposit stamp: 'PGTA 11/15/2020 20:44:36'!
PASSED!

!testRun: #ReportTest #test01AccountSummaryFromANewAccountReturnsBalance0 stamp: 'PGTA 11/15/2020 20:44:36'!
PASSED!

!testRun: #ReportTest #test02AccountSummaryReturnsAReportFromAnAccountWithADeposit stamp: 'PGTA 11/15/2020 20:44:36'!
PASSED!

!testRun: #ReportTest #test03AccountSummaryReturnsAReportFromAnAccountWithAWithdraw stamp: 'PGTA 11/15/2020 20:44:36'!
PASSED!

!testRun: #ReportTest #test04AccountSummaryReturnsAReportFromAnAccountWithATransferWithdraw stamp: 'PGTA 11/15/2020 20:44:36'!
PASSED!

!testRun: #ReportTest #test05AccountSummaryReturnsAReportFromAnAccountWithATransferDeposit stamp: 'PGTA 11/15/2020 20:44:36'!
PASSED!

!testRun: #ReportTest #test06TransferNetFromANewAccountReturnsZero stamp: 'PGTA 11/15/2020 20:44:36'!
PASSED!

!testRun: #ReportTest #test07TransferNetReturnsAReportFromAnAccountWithADeposit stamp: 'PGTA 11/15/2020 20:44:36'!
PASSED!

!testRun: #ReportTest #test08TransferNetReturnsAReportFromAnAccountWithAWithdraw stamp: 'PGTA 11/15/2020 20:44:36'!
PASSED!

!testRun: #ReportTest #test09TransferNetReturnsAReportFromAnAccountWithATransferWithdraw stamp: 'PGTA 11/15/2020 20:44:36'!
PASSED!

!testRun: #ReportTest #test10TransferNetReturnsAReportFromAnAccountWithATransferDeposit stamp: 'PGTA 11/15/2020 20:44:36'!
PASSED!

!testRun: #ReportTest #test11TransferNetWorksWithAPortfolio stamp: 'PGTA 11/15/2020 20:44:36'!
PASSED!

!testRun: #ReportTest #test12PortfolioStructureWithoutAccountsReturnsPortfolioName stamp: 'PGTA 11/15/2020 20:44:36'!
PASSED!

!testRun: #ReportTest #test13PortfolioStructureWithOneAccount stamp: 'PGTA 11/15/2020 20:44:36'!
PASSED!

!testRun: #ReportTest #test14PortfolioStructureWithOnePortfolioIndentsCorrectly stamp: 'PGTA 11/15/2020 20:44:36'!
PASSED!

----SNAPSHOT----(15 November 2020 20:48:26) CuisUniversity-4384.image priorSource: 17224910!
!ReportTest methodsFor: 'portfolio tree' stamp: 'PGTA 11/15/2020 20:57:39'!
test15PortfolioStructureCatedra
	| johnsAccount angiesAccount childrenPortfolio myAccount familyPortfolio report stringReport |

	johnsAccount := ReceptiveAccount named: 'Cuenta de Juan'.
	angiesAccount := ReceptiveAccount named: 'Cuenta de Angeles'.
	childrenPortfolio := Portfolio named: 'Portfolio de hijos' with: johnsAccount with: angiesAccount.
	myAccount := ReceptiveAccount named: 'Cuenta mia'.
	familyPortfolio := Portfolio named: 'Portfolio de la familia' with: myAccount with: childrenPortfolio.
	
	report := PortfolioStructure for: familyPortfolio.
	stringReport := 'Portfolio de la familia
	Cuenta Mia
	Portfolio de hijos
		Cuenta de Juan
		Cuenta de Angeles'.
			
	self assert: stringReport equals: report printStringWithNewline.! !

!testRun: #ReportTest #test15PortfolioStructureCatedra stamp: 'PGTA 11/15/2020 20:57:39'!
FAILURE!

report!

stringReport!

stringReport asString!

report printStringWithNewline!

stringReport asString!
!ReportTest methodsFor: 'portfolio tree' stamp: 'PGTA 11/15/2020 21:01:23' prior: 50869998!
test15PortfolioStructureCatedra
	| johnsAccount angiesAccount childrenPortfolio myAccount familyPortfolio report stringReport |

	johnsAccount := ReceptiveAccount named: 'Cuenta de Juan'.
	angiesAccount := ReceptiveAccount named: 'Cuenta de Angeles'.
	childrenPortfolio := Portfolio named: 'Portfolio de hijos' with: johnsAccount with: angiesAccount.
	myAccount := ReceptiveAccount named: 'Cuenta mia'.
	familyPortfolio := Portfolio named: 'Portfolio de la familia' with: myAccount with: childrenPortfolio.
	
	report := PortfolioStructure for: familyPortfolio.
	stringReport := 'Portfolio de la familia
	Cuenta Mia
	Portfolio de hijos
		Cuenta de Juan
		Cuenta de Angeles'.
			
	self assert: (stringReport asString) equals: (report printStringWithNewline).! !

!testRun: #ReportTest #test15PortfolioStructureCatedra stamp: 'PGTA 11/15/2020 21:01:27'!
FAILURE!

stringReport asString!

report printStringWithNewline!
!ReportTest methodsFor: 'portfolio tree' stamp: 'PGTA 11/15/2020 21:02:47' prior: 50870031!
test15PortfolioStructureCatedra
	| johnsAccount angiesAccount childrenPortfolio myAccount familyPortfolio report stringReport |

	johnsAccount := ReceptiveAccount named: 'Cuenta de Juan'.
	angiesAccount := ReceptiveAccount named: 'Cuenta de Angeles'.
	childrenPortfolio := Portfolio named: 'Portfolio de hijos' with: johnsAccount with: angiesAccount.
	myAccount := ReceptiveAccount named: 'Cuenta mia'.
	familyPortfolio := Portfolio named: 'Portfolio de la familia' with: myAccount with: childrenPortfolio.
	
	report := PortfolioStructure for: familyPortfolio.
	stringReport := 'Portfolio de la familia
	Cuenta mia
	Portfolio de hijos
		Cuenta de Juan
		Cuenta de Angeles'.
			
	self assert: (stringReport asString) equals: (report printStringWithNewline).! !
!ReportTest methodsFor: 'portfolio tree' stamp: 'PGTA 11/15/2020 21:02:54' prior: 50870063!
test15PortfolioStructureCatedra
	| johnsAccount angiesAccount childrenPortfolio myAccount familyPortfolio report stringReport |

	johnsAccount := ReceptiveAccount named: 'Cuenta de Juan'.
	angiesAccount := ReceptiveAccount named: 'Cuenta de Angeles'.
	childrenPortfolio := Portfolio named: 'Portfolio de hijos' with: johnsAccount with: angiesAccount.
	myAccount := ReceptiveAccount named: 'Cuenta mia'.
	familyPortfolio := Portfolio named: 'Portfolio de la familia' with: myAccount with: childrenPortfolio.
	
	report := PortfolioStructure for: familyPortfolio.
	stringReport := 'Portfolio de la familia
	Cuenta mia
	Portfolio de hijos
		Cuenta de Juan
		Cuenta de Angeles'.
			
	self assert: (stringReport asString) equals: (report printStringWithNewline).! !

!testRun: #ReportTest #test15PortfolioStructureCatedra stamp: 'PGTA 11/15/2020 21:02:57'!
PASSED!

!testRun: #ReportTest #test01AccountSummaryFromANewAccountReturnsBalance0 stamp: 'PGTA 11/15/2020 21:02:58'!
PASSED!

!testRun: #ReportTest #test02AccountSummaryReturnsAReportFromAnAccountWithADeposit stamp: 'PGTA 11/15/2020 21:02:58'!
PASSED!

!testRun: #ReportTest #test03AccountSummaryReturnsAReportFromAnAccountWithAWithdraw stamp: 'PGTA 11/15/2020 21:02:58'!
PASSED!

!testRun: #ReportTest #test04AccountSummaryReturnsAReportFromAnAccountWithATransferWithdraw stamp: 'PGTA 11/15/2020 21:02:58'!
PASSED!

!testRun: #ReportTest #test05AccountSummaryReturnsAReportFromAnAccountWithATransferDeposit stamp: 'PGTA 11/15/2020 21:02:58'!
PASSED!

!testRun: #ReportTest #test06TransferNetFromANewAccountReturnsZero stamp: 'PGTA 11/15/2020 21:02:58'!
PASSED!

!testRun: #ReportTest #test07TransferNetReturnsAReportFromAnAccountWithADeposit stamp: 'PGTA 11/15/2020 21:02:58'!
PASSED!

!testRun: #ReportTest #test08TransferNetReturnsAReportFromAnAccountWithAWithdraw stamp: 'PGTA 11/15/2020 21:02:58'!
PASSED!

!testRun: #ReportTest #test09TransferNetReturnsAReportFromAnAccountWithATransferWithdraw stamp: 'PGTA 11/15/2020 21:02:58'!
PASSED!

!testRun: #ReportTest #test10TransferNetReturnsAReportFromAnAccountWithATransferDeposit stamp: 'PGTA 11/15/2020 21:02:58'!
PASSED!

!testRun: #ReportTest #test11TransferNetWorksWithAPortfolio stamp: 'PGTA 11/15/2020 21:02:58'!
PASSED!

!testRun: #ReportTest #test12PortfolioStructureWithoutAccountsReturnsPortfolioName stamp: 'PGTA 11/15/2020 21:02:58'!
PASSED!

!testRun: #ReportTest #test13PortfolioStructureWithOneAccount stamp: 'PGTA 11/15/2020 21:02:58'!
PASSED!

!testRun: #ReportTest #test14PortfolioStructureWithOnePortfolioIndentsCorrectly stamp: 'PGTA 11/15/2020 21:02:58'!
PASSED!

!testRun: #ReportTest #test15PortfolioStructureCatedra stamp: 'PGTA 11/15/2020 21:02:58'!
PASSED!
!ReportTest methodsFor: 'portfolio tree' stamp: 'PGTA 11/15/2020 21:03:09' prior: 50870090!
test15PortfolioStructureCatedra
	| johnsAccount angiesAccount childrenPortfolio myAccount familyPortfolio report stringReport |

	johnsAccount := ReceptiveAccount named: 'Cuenta de Juan'.
	angiesAccount := ReceptiveAccount named: 'Cuenta de Angeles'.
	childrenPortfolio := Portfolio named: 'Portfolio de hijos' with: johnsAccount with: angiesAccount.
	myAccount := ReceptiveAccount named: 'Cuenta mia'.
	familyPortfolio := Portfolio named: 'Portfolio de la familia' with: myAccount with: childrenPortfolio.
	
	report := PortfolioStructure for: familyPortfolio.
	stringReport := 'Portfolio de la familia
	Cuenta mia
	Portfolio de hijos
		Cuenta de Juan
		Cuenta de Angeles'.
			
	self assert: stringReport equals: (report printStringWithNewline).! !

!testRun: #ReportTest #test15PortfolioStructureCatedra stamp: 'PGTA 11/15/2020 21:03:09'!
PASSED!

!testRun: #ReportTest #test01AccountSummaryFromANewAccountReturnsBalance0 stamp: 'PGTA 11/15/2020 21:03:09'!
PASSED!

!testRun: #ReportTest #test02AccountSummaryReturnsAReportFromAnAccountWithADeposit stamp: 'PGTA 11/15/2020 21:03:09'!
PASSED!

!testRun: #ReportTest #test03AccountSummaryReturnsAReportFromAnAccountWithAWithdraw stamp: 'PGTA 11/15/2020 21:03:09'!
PASSED!

!testRun: #ReportTest #test04AccountSummaryReturnsAReportFromAnAccountWithATransferWithdraw stamp: 'PGTA 11/15/2020 21:03:09'!
PASSED!

!testRun: #ReportTest #test05AccountSummaryReturnsAReportFromAnAccountWithATransferDeposit stamp: 'PGTA 11/15/2020 21:03:09'!
PASSED!

!testRun: #ReportTest #test06TransferNetFromANewAccountReturnsZero stamp: 'PGTA 11/15/2020 21:03:09'!
PASSED!

!testRun: #ReportTest #test07TransferNetReturnsAReportFromAnAccountWithADeposit stamp: 'PGTA 11/15/2020 21:03:09'!
PASSED!

!testRun: #ReportTest #test08TransferNetReturnsAReportFromAnAccountWithAWithdraw stamp: 'PGTA 11/15/2020 21:03:09'!
PASSED!

!testRun: #ReportTest #test09TransferNetReturnsAReportFromAnAccountWithATransferWithdraw stamp: 'PGTA 11/15/2020 21:03:09'!
PASSED!

!testRun: #ReportTest #test10TransferNetReturnsAReportFromAnAccountWithATransferDeposit stamp: 'PGTA 11/15/2020 21:03:09'!
PASSED!

!testRun: #ReportTest #test11TransferNetWorksWithAPortfolio stamp: 'PGTA 11/15/2020 21:03:09'!
PASSED!

!testRun: #ReportTest #test12PortfolioStructureWithoutAccountsReturnsPortfolioName stamp: 'PGTA 11/15/2020 21:03:09'!
PASSED!

!testRun: #ReportTest #test13PortfolioStructureWithOneAccount stamp: 'PGTA 11/15/2020 21:03:09'!
PASSED!

!testRun: #ReportTest #test14PortfolioStructureWithOnePortfolioIndentsCorrectly stamp: 'PGTA 11/15/2020 21:03:09'!
PASSED!

!testRun: #ReportTest #test15PortfolioStructureCatedra stamp: 'PGTA 11/15/2020 21:03:09'!
PASSED!

!testRun: #ReportTest #test15PortfolioStructureCatedra stamp: 'PGTA 11/15/2020 21:03:13'!
PASSED!

!testRun: #ReportTest #test01AccountSummaryFromANewAccountReturnsBalance0 stamp: 'PGTA 11/15/2020 21:03:13'!
PASSED!

!testRun: #ReportTest #test02AccountSummaryReturnsAReportFromAnAccountWithADeposit stamp: 'PGTA 11/15/2020 21:03:13'!
PASSED!

!testRun: #ReportTest #test03AccountSummaryReturnsAReportFromAnAccountWithAWithdraw stamp: 'PGTA 11/15/2020 21:03:13'!
PASSED!

!testRun: #ReportTest #test04AccountSummaryReturnsAReportFromAnAccountWithATransferWithdraw stamp: 'PGTA 11/15/2020 21:03:13'!
PASSED!

!testRun: #ReportTest #test05AccountSummaryReturnsAReportFromAnAccountWithATransferDeposit stamp: 'PGTA 11/15/2020 21:03:13'!
PASSED!

!testRun: #ReportTest #test06TransferNetFromANewAccountReturnsZero stamp: 'PGTA 11/15/2020 21:03:13'!
PASSED!

!testRun: #ReportTest #test07TransferNetReturnsAReportFromAnAccountWithADeposit stamp: 'PGTA 11/15/2020 21:03:13'!
PASSED!

!testRun: #ReportTest #test08TransferNetReturnsAReportFromAnAccountWithAWithdraw stamp: 'PGTA 11/15/2020 21:03:13'!
PASSED!

!testRun: #ReportTest #test09TransferNetReturnsAReportFromAnAccountWithATransferWithdraw stamp: 'PGTA 11/15/2020 21:03:13'!
PASSED!

!testRun: #ReportTest #test10TransferNetReturnsAReportFromAnAccountWithATransferDeposit stamp: 'PGTA 11/15/2020 21:03:13'!
PASSED!

!testRun: #ReportTest #test11TransferNetWorksWithAPortfolio stamp: 'PGTA 11/15/2020 21:03:13'!
PASSED!

!testRun: #ReportTest #test12PortfolioStructureWithoutAccountsReturnsPortfolioName stamp: 'PGTA 11/15/2020 21:03:13'!
PASSED!

!testRun: #ReportTest #test13PortfolioStructureWithOneAccount stamp: 'PGTA 11/15/2020 21:03:13'!
PASSED!

!testRun: #ReportTest #test14PortfolioStructureWithOnePortfolioIndentsCorrectly stamp: 'PGTA 11/15/2020 21:03:13'!
PASSED!

!testRun: #ReportTest #test15PortfolioStructureCatedra stamp: 'PGTA 11/15/2020 21:03:13'!
PASSED!

!classDefinition: #SpecialSummary category: 'Portfolio-Solucion' stamp: 'PGTA 11/15/2020 21:09:19'!
Report subclass: #SpecialSummary
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!
!ReportTest methodsFor: 'portfolio tree' stamp: 'PGTA 11/15/2020 21:08:58'!
test16SpecialSummaryReportForOnePortfolio
	| johnsPortfolio report stringReport |
	
	stringReport := 'Portfolio de Juan'.
	johnsPortfolio := Portfolio named: stringReport.
	
	report := SpecialSummary for: johnsPortfolio.
	self assert: stringReport equals: (report first).! !

!testRun: #ReportTest #test16SpecialSummaryReportForOnePortfolio stamp: 'PGTA 11/15/2020 21:09:36'!
ERROR!
!SpecialSummary methodsFor: 'as yet unclassified' stamp: 'PGTA 11/15/2020 21:09:46' overrides: 50869026!
generateReportFor: aPortfolio 
	self shouldBeImplemented.! !
!SpecialSummary methodsFor: 'as yet unclassified' stamp: 'PGTA 11/15/2020 21:10:03' prior: 50870347 overrides: 50869026!
generateReportFor: aPortfolio 
	^aPortfolio accountName.! !

!testRun: #ReportTest #test16SpecialSummaryReportForOnePortfolio stamp: 'PGTA 11/15/2020 21:10:05'!
FAILURE!

!testRun: #ReportTest #test16SpecialSummaryReportForOnePortfolio stamp: 'PGTA 11/15/2020 21:10:14'!
FAILURE!
!SpecialSummary methodsFor: 'as yet unclassified' stamp: 'PGTA 11/15/2020 21:10:54' prior: 50870353 overrides: 50869026!
generateReportFor: aPortfolio 
	^OrderedCollection with: aPortfolio accountName.! !

!testRun: #ReportTest #test16SpecialSummaryReportForOnePortfolio stamp: 'PGTA 11/15/2020 21:10:55'!
PASSED!

!testRun: #ReportTest #test01AccountSummaryFromANewAccountReturnsBalance0 stamp: 'PGTA 11/15/2020 21:10:55'!
PASSED!

!testRun: #ReportTest #test02AccountSummaryReturnsAReportFromAnAccountWithADeposit stamp: 'PGTA 11/15/2020 21:10:55'!
PASSED!

!testRun: #ReportTest #test03AccountSummaryReturnsAReportFromAnAccountWithAWithdraw stamp: 'PGTA 11/15/2020 21:10:55'!
PASSED!

!testRun: #ReportTest #test04AccountSummaryReturnsAReportFromAnAccountWithATransferWithdraw stamp: 'PGTA 11/15/2020 21:10:55'!
PASSED!

!testRun: #ReportTest #test05AccountSummaryReturnsAReportFromAnAccountWithATransferDeposit stamp: 'PGTA 11/15/2020 21:10:55'!
PASSED!

!testRun: #ReportTest #test06TransferNetFromANewAccountReturnsZero stamp: 'PGTA 11/15/2020 21:10:55'!
PASSED!

!testRun: #ReportTest #test07TransferNetReturnsAReportFromAnAccountWithADeposit stamp: 'PGTA 11/15/2020 21:10:55'!
PASSED!

!testRun: #ReportTest #test08TransferNetReturnsAReportFromAnAccountWithAWithdraw stamp: 'PGTA 11/15/2020 21:10:55'!
PASSED!

!testRun: #ReportTest #test09TransferNetReturnsAReportFromAnAccountWithATransferWithdraw stamp: 'PGTA 11/15/2020 21:10:55'!
PASSED!

!testRun: #ReportTest #test10TransferNetReturnsAReportFromAnAccountWithATransferDeposit stamp: 'PGTA 11/15/2020 21:10:55'!
PASSED!

!testRun: #ReportTest #test11TransferNetWorksWithAPortfolio stamp: 'PGTA 11/15/2020 21:10:55'!
PASSED!

!testRun: #ReportTest #test12PortfolioStructureWithoutAccountsReturnsPortfolioName stamp: 'PGTA 11/15/2020 21:10:55'!
PASSED!

!testRun: #ReportTest #test13PortfolioStructureWithOneAccount stamp: 'PGTA 11/15/2020 21:10:55'!
PASSED!

!testRun: #ReportTest #test14PortfolioStructureWithOnePortfolioIndentsCorrectly stamp: 'PGTA 11/15/2020 21:10:55'!
PASSED!

!testRun: #ReportTest #test15PortfolioStructureCatedra stamp: 'PGTA 11/15/2020 21:10:55'!
PASSED!

!testRun: #ReportTest #test16SpecialSummaryReportForOnePortfolio stamp: 'PGTA 11/15/2020 21:10:55'!
PASSED!
!ReportTest methodsFor: 'portfolio tree' stamp: 'PGTA 11/15/2020 21:11:14'!
test17SpecialSummaryReportForOnePortfolioWithOneAccount
	| johnsPortfolio report stringReport |
	
	stringReport := 'Portfolio de Juan'.
	johnsPortfolio := Portfolio named: stringReport.
	
	report := SpecialSummary for: johnsPortfolio.
	self assert: stringReport equals: (report first).! !
!ReportTest methodsFor: 'portfolio tree' stamp: 'PGTA 11/15/2020 21:17:02' prior: 50870435!
test17SpecialSummaryReportForOnePortfolioWithOneAccount
	| johnsPortfolio report stringReport account account2 |
	
	account := ReceptiveAccount named: 'Cuenta de Juan'.
	account2 := ReceptiveAccount new.
	
	Deposit register: 100 on: account.
	Transfer from: account2 to: account amount: 30.
	Withdraw register: 20 on: account.
	Transfer from: account to: account2 amount: 15.
	
	johnsPortfolio := Portfolio named: 'Portfolio de Juan'.
	
	report := SpecialSummary for: johnsPortfolio.
	
	
	
	stringReport := 'Portfolio de Juan'.
	self assert: stringReport equals: (report first).! !
!ReportTest methodsFor: 'portfolio tree' stamp: 'PGTA 11/15/2020 21:19:21' prior: 50870447!
test17SpecialSummaryReportForOnePortfolioWithOneAccount
	| johnsPortfolio report stringReport account account2 |
	
	account := ReceptiveAccount named: 'Cuenta de Juan'.
	account2 := ReceptiveAccount new.
	
	Deposit register: 100 on: account.
	Transfer from: account2 to: account amount: 30.
	Withdraw register: 20 on: account.
	Transfer from: account to: account2 amount: 15.
	
	johnsPortfolio := Portfolio named: 'Portfolio de Juan' with: account.
	
	report := SpecialSummary for: johnsPortfolio.
	
	stringReport := 'Portfolio de Juan
	Cuenta de Juan
		Dep�sito por 100
		Entrada por transferencia de 30
		Extracci�n por 20
		Salida por transferencia de 15'.
		
	self assert: stringReport equals: (report printStringWithNewline).! !

!testRun: #ReportTest #test17SpecialSummaryReportForOnePortfolioWithOneAccount stamp: 'PGTA 11/15/2020 21:19:24'!
FAILURE!

!classDefinition: #SpecialSummary category: 'Portfolio-Solucion' stamp: 'PGTA 11/15/2020 21:21:46'!
Report subclass: #SpecialSummary
	instanceVariableNames: 'summary'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!
!SpecialSummary methodsFor: 'as yet unclassified' stamp: 'PGTA 11/15/2020 21:21:45' prior: 50870366 overrides: 50869026!
generateReportFor: aPortfolio
	summary := OrderedCollection new.
	^OrderedCollection with: aPortfolio accountName.! !
!SpecialSummary methodsFor: 'as yet unclassified' stamp: 'PGTA 11/15/2020 21:23:01' prior: 50870508 overrides: 50869026!
generateReportFor: aPortfolio
	summary := OrderedCollection new.
	aPortfolio reportStructureTo: self forLevel: 0.
	^summary.! !

!testRun: #ReportTest #test17SpecialSummaryReportForOnePortfolioWithOneAccount stamp: 'PGTA 11/15/2020 21:23:03'!
ERROR!
!SpecialSummary methodsFor: 'as yet unclassified' stamp: 'PGTA 11/15/2020 21:23:13'!
reportAsPortfolio: aPortfolio forLevel: aSmallInteger 
	self shouldBeImplemented.! !
!SpecialSummary methodsFor: 'as yet unclassified' stamp: 'PGTA 11/15/2020 21:24:04' prior: 50870527!
reportAsPortfolio: aPortfolio forLevel: aLevel
	| accountString |
	accountString := self generateIndentationFor: aLevel.
	summary add: (accountString, aPortfolio accountName).! !

!testRun: #ReportTest #test17SpecialSummaryReportForOnePortfolioWithOneAccount stamp: 'PGTA 11/15/2020 21:24:08'!
ERROR!
!SpecialSummary methodsFor: 'as yet unclassified' stamp: 'PGTA 11/15/2020 21:24:14'!
generateIndentationFor: aSmallInteger 
	self shouldBeImplemented.! !

!testRun: #ReportTest #test17SpecialSummaryReportForOnePortfolioWithOneAccount stamp: 'PGTA 11/15/2020 21:24:37'!
ERROR!
!Report methodsFor: 'as yet unclassified' stamp: 'PGTA 11/15/2020 21:24:53'!
generateIndentationFor: aLevel
	^'' padded: #left to: aLevel with: $	! !

!methodRemoval: PortfolioStructure #generateIndentationFor: stamp: 'PGTA 11/15/2020 21:25:05'!
generateIndentationFor: aLevel
	^'' padded: #left to: aLevel with: $	!

!testRun: #ReportTest #test11TransferNetWorksWithAPortfolio stamp: 'PGTA 11/15/2020 21:25:11'!
PASSED!

!testRun: #ReportTest #test11TransferNetWorksWithAPortfolio stamp: 'PGTA 11/15/2020 21:25:13'!
PASSED!

!testRun: #ReportTest #test01AccountSummaryFromANewAccountReturnsBalance0 stamp: 'PGTA 11/15/2020 21:25:13'!
PASSED!

!testRun: #ReportTest #test02AccountSummaryReturnsAReportFromAnAccountWithADeposit stamp: 'PGTA 11/15/2020 21:25:13'!
PASSED!

!testRun: #ReportTest #test03AccountSummaryReturnsAReportFromAnAccountWithAWithdraw stamp: 'PGTA 11/15/2020 21:25:13'!
PASSED!

!testRun: #ReportTest #test04AccountSummaryReturnsAReportFromAnAccountWithATransferWithdraw stamp: 'PGTA 11/15/2020 21:25:13'!
PASSED!

!testRun: #ReportTest #test05AccountSummaryReturnsAReportFromAnAccountWithATransferDeposit stamp: 'PGTA 11/15/2020 21:25:13'!
PASSED!

!testRun: #ReportTest #test06TransferNetFromANewAccountReturnsZero stamp: 'PGTA 11/15/2020 21:25:13'!
PASSED!

!testRun: #ReportTest #test07TransferNetReturnsAReportFromAnAccountWithADeposit stamp: 'PGTA 11/15/2020 21:25:13'!
PASSED!

!testRun: #ReportTest #test08TransferNetReturnsAReportFromAnAccountWithAWithdraw stamp: 'PGTA 11/15/2020 21:25:13'!
PASSED!

!testRun: #ReportTest #test09TransferNetReturnsAReportFromAnAccountWithATransferWithdraw stamp: 'PGTA 11/15/2020 21:25:13'!
PASSED!

!testRun: #ReportTest #test10TransferNetReturnsAReportFromAnAccountWithATransferDeposit stamp: 'PGTA 11/15/2020 21:25:13'!
PASSED!

!testRun: #ReportTest #test11TransferNetWorksWithAPortfolio stamp: 'PGTA 11/15/2020 21:25:13'!
PASSED!

!testRun: #ReportTest #test12PortfolioStructureWithoutAccountsReturnsPortfolioName stamp: 'PGTA 11/15/2020 21:25:13'!
PASSED!

!testRun: #ReportTest #test13PortfolioStructureWithOneAccount stamp: 'PGTA 11/15/2020 21:25:13'!
PASSED!

!testRun: #ReportTest #test14PortfolioStructureWithOnePortfolioIndentsCorrectly stamp: 'PGTA 11/15/2020 21:25:13'!
PASSED!

!testRun: #ReportTest #test15PortfolioStructureCatedra stamp: 'PGTA 11/15/2020 21:25:13'!
PASSED!

!testRun: #ReportTest #test16SpecialSummaryReportForOnePortfolio stamp: 'PGTA 11/15/2020 21:25:13'!
ERROR!

!testRun: #ReportTest #test17SpecialSummaryReportForOnePortfolioWithOneAccount stamp: 'PGTA 11/15/2020 21:25:13'!
ERROR!

!testRun: #ReportTest #test11TransferNetWorksWithAPortfolio stamp: 'PGTA 11/15/2020 21:25:19'!
PASSED!

!testRun: #ReportTest #test01AccountSummaryFromANewAccountReturnsBalance0 stamp: 'PGTA 11/15/2020 21:25:19'!
PASSED!

!testRun: #ReportTest #test02AccountSummaryReturnsAReportFromAnAccountWithADeposit stamp: 'PGTA 11/15/2020 21:25:19'!
PASSED!

!testRun: #ReportTest #test03AccountSummaryReturnsAReportFromAnAccountWithAWithdraw stamp: 'PGTA 11/15/2020 21:25:19'!
PASSED!

!testRun: #ReportTest #test04AccountSummaryReturnsAReportFromAnAccountWithATransferWithdraw stamp: 'PGTA 11/15/2020 21:25:19'!
PASSED!

!testRun: #ReportTest #test05AccountSummaryReturnsAReportFromAnAccountWithATransferDeposit stamp: 'PGTA 11/15/2020 21:25:19'!
PASSED!

!testRun: #ReportTest #test06TransferNetFromANewAccountReturnsZero stamp: 'PGTA 11/15/2020 21:25:19'!
PASSED!

!testRun: #ReportTest #test07TransferNetReturnsAReportFromAnAccountWithADeposit stamp: 'PGTA 11/15/2020 21:25:19'!
PASSED!

!testRun: #ReportTest #test08TransferNetReturnsAReportFromAnAccountWithAWithdraw stamp: 'PGTA 11/15/2020 21:25:19'!
PASSED!

!testRun: #ReportTest #test09TransferNetReturnsAReportFromAnAccountWithATransferWithdraw stamp: 'PGTA 11/15/2020 21:25:19'!
PASSED!

!testRun: #ReportTest #test10TransferNetReturnsAReportFromAnAccountWithATransferDeposit stamp: 'PGTA 11/15/2020 21:25:19'!
PASSED!

!testRun: #ReportTest #test11TransferNetWorksWithAPortfolio stamp: 'PGTA 11/15/2020 21:25:19'!
PASSED!

!testRun: #ReportTest #test12PortfolioStructureWithoutAccountsReturnsPortfolioName stamp: 'PGTA 11/15/2020 21:25:19'!
PASSED!

!testRun: #ReportTest #test13PortfolioStructureWithOneAccount stamp: 'PGTA 11/15/2020 21:25:19'!
PASSED!

!testRun: #ReportTest #test14PortfolioStructureWithOnePortfolioIndentsCorrectly stamp: 'PGTA 11/15/2020 21:25:19'!
PASSED!

!testRun: #ReportTest #test15PortfolioStructureCatedra stamp: 'PGTA 11/15/2020 21:25:19'!
PASSED!

!testRun: #ReportTest #test16SpecialSummaryReportForOnePortfolio stamp: 'PGTA 11/15/2020 21:25:19'!
ERROR!

!testRun: #ReportTest #test17SpecialSummaryReportForOnePortfolioWithOneAccount stamp: 'PGTA 11/15/2020 21:25:19'!
ERROR!

!testRun: #ReportTest #test16SpecialSummaryReportForOnePortfolio stamp: 'PGTA 11/15/2020 21:25:34'!
ERROR!
!SpecialSummary methodsFor: 'error handling' stamp: 'PGTA 11/15/2020 21:25:47' overrides: 16881409!
error: aString 
	self shouldBeImplemented.! !

!methodRemoval: SpecialSummary #generateIndentationFor: stamp: 'PGTA 11/15/2020 21:26:41'!
generateIndentationFor: aSmallInteger 
	self shouldBeImplemented.!

!methodRemoval: SpecialSummary #error: stamp: 'PGTA 11/15/2020 21:26:50'!
error: aString 
	self shouldBeImplemented.!

!testRun: #ReportTest #test09TransferNetReturnsAReportFromAnAccountWithATransferWithdraw stamp: 'PGTA 11/15/2020 21:26:55'!
PASSED!

!testRun: #ReportTest #test16SpecialSummaryReportForOnePortfolio stamp: 'PGTA 11/15/2020 21:26:58'!
PASSED!

!testRun: #ReportTest #test17SpecialSummaryReportForOnePortfolioWithOneAccount stamp: 'PGTA 11/15/2020 21:27:04'!
ERROR!
!SpecialSummary methodsFor: 'as yet unclassified' stamp: 'PGTA 11/15/2020 21:27:12'!
reportAsReceptiveAccount: aReceptiveAccount forLevel: aSmallInteger 
	self shouldBeImplemented.! !
!SpecialSummary methodsFor: 'as yet unclassified' stamp: 'PGTA 11/15/2020 21:32:25' prior: 50870733!
reportAsReceptiveAccount: aReceptiveAccount forLevel: aLevel
	| accountString accountSummary|
	accountString := self generateIndentationFor: aLevel.
	summary add: (accountString, aReceptiveAccount accountName).
	
	accountSummary := AccountSummary for: aReceptiveAccount.
	accountSummary do: [:transactionDescription | 
		accountString := self generateIndentationFor: (aLevel+1).
		summary add: (accountString, transactionDescription).]! !

!testRun: #ReportTest #test17SpecialSummaryReportForOnePortfolioWithOneAccount stamp: 'PGTA 11/15/2020 21:32:27'!
FAILURE!

report printStringWithNewline!

stringReport!
!ReportTest methodsFor: 'portfolio tree' stamp: 'PGTA 11/15/2020 21:33:40' prior: 50870469!
test17SpecialSummaryReportForOnePortfolioWithOneAccount
	| johnsPortfolio report stringReport account account2 |
	
	account := ReceptiveAccount named: 'Cuenta de Juan'.
	account2 := ReceptiveAccount new.
	
	Deposit register: 100 on: account.
	Transfer from: account2 to: account amount: 30.
	Withdraw register: 20 on: account.
	Transfer from: account to: account2 amount: 15.
	
	johnsPortfolio := Portfolio named: 'Portfolio de Juan' with: account.
	
	report := SpecialSummary for: johnsPortfolio.
	
	stringReport := 'Portfolio de Juan
	Cuenta de Juan
		Dep�sito por 100
		Entrada por transferencia de 30
		Extracci�n por 20
		Salida por transferencia de 15
		Balance = 95'.
		
	self assert: stringReport equals: (report printStringWithNewline).! !

!testRun: #ReportTest #test17SpecialSummaryReportForOnePortfolioWithOneAccount stamp: 'PGTA 11/15/2020 21:33:41'!
PASSED!

!testRun: #ReportTest #test01AccountSummaryFromANewAccountReturnsBalance0 stamp: 'PGTA 11/15/2020 21:33:41'!
PASSED!

!testRun: #ReportTest #test02AccountSummaryReturnsAReportFromAnAccountWithADeposit stamp: 'PGTA 11/15/2020 21:33:41'!
PASSED!

!testRun: #ReportTest #test03AccountSummaryReturnsAReportFromAnAccountWithAWithdraw stamp: 'PGTA 11/15/2020 21:33:41'!
PASSED!

!testRun: #ReportTest #test04AccountSummaryReturnsAReportFromAnAccountWithATransferWithdraw stamp: 'PGTA 11/15/2020 21:33:41'!
PASSED!

!testRun: #ReportTest #test05AccountSummaryReturnsAReportFromAnAccountWithATransferDeposit stamp: 'PGTA 11/15/2020 21:33:41'!
PASSED!

!testRun: #ReportTest #test06TransferNetFromANewAccountReturnsZero stamp: 'PGTA 11/15/2020 21:33:41'!
PASSED!

!testRun: #ReportTest #test07TransferNetReturnsAReportFromAnAccountWithADeposit stamp: 'PGTA 11/15/2020 21:33:41'!
PASSED!

!testRun: #ReportTest #test08TransferNetReturnsAReportFromAnAccountWithAWithdraw stamp: 'PGTA 11/15/2020 21:33:41'!
PASSED!

!testRun: #ReportTest #test09TransferNetReturnsAReportFromAnAccountWithATransferWithdraw stamp: 'PGTA 11/15/2020 21:33:41'!
PASSED!

!testRun: #ReportTest #test10TransferNetReturnsAReportFromAnAccountWithATransferDeposit stamp: 'PGTA 11/15/2020 21:33:41'!
PASSED!

!testRun: #ReportTest #test11TransferNetWorksWithAPortfolio stamp: 'PGTA 11/15/2020 21:33:41'!
PASSED!

!testRun: #ReportTest #test12PortfolioStructureWithoutAccountsReturnsPortfolioName stamp: 'PGTA 11/15/2020 21:33:41'!
PASSED!

!testRun: #ReportTest #test13PortfolioStructureWithOneAccount stamp: 'PGTA 11/15/2020 21:33:41'!
PASSED!

!testRun: #ReportTest #test14PortfolioStructureWithOnePortfolioIndentsCorrectly stamp: 'PGTA 11/15/2020 21:33:41'!
PASSED!

!testRun: #ReportTest #test15PortfolioStructureCatedra stamp: 'PGTA 11/15/2020 21:33:41'!
PASSED!

!testRun: #ReportTest #test16SpecialSummaryReportForOnePortfolio stamp: 'PGTA 11/15/2020 21:33:41'!
PASSED!

!testRun: #ReportTest #test17SpecialSummaryReportForOnePortfolioWithOneAccount stamp: 'PGTA 11/15/2020 21:33:41'!
PASSED!

!testRun: #ReportTest #test17SpecialSummaryReportForOnePortfolioWithOneAccount stamp: 'PGTA 11/15/2020 21:34:19'!
PASSED!

!testRun: #ReportTest #test01AccountSummaryFromANewAccountReturnsBalance0 stamp: 'PGTA 11/15/2020 21:34:19'!
PASSED!

!testRun: #ReportTest #test02AccountSummaryReturnsAReportFromAnAccountWithADeposit stamp: 'PGTA 11/15/2020 21:34:19'!
PASSED!

!testRun: #ReportTest #test03AccountSummaryReturnsAReportFromAnAccountWithAWithdraw stamp: 'PGTA 11/15/2020 21:34:19'!
PASSED!

!testRun: #ReportTest #test04AccountSummaryReturnsAReportFromAnAccountWithATransferWithdraw stamp: 'PGTA 11/15/2020 21:34:19'!
PASSED!

!testRun: #ReportTest #test05AccountSummaryReturnsAReportFromAnAccountWithATransferDeposit stamp: 'PGTA 11/15/2020 21:34:19'!
PASSED!

!testRun: #ReportTest #test06TransferNetFromANewAccountReturnsZero stamp: 'PGTA 11/15/2020 21:34:19'!
PASSED!

!testRun: #ReportTest #test07TransferNetReturnsAReportFromAnAccountWithADeposit stamp: 'PGTA 11/15/2020 21:34:19'!
PASSED!

!testRun: #ReportTest #test08TransferNetReturnsAReportFromAnAccountWithAWithdraw stamp: 'PGTA 11/15/2020 21:34:19'!
PASSED!

!testRun: #ReportTest #test09TransferNetReturnsAReportFromAnAccountWithATransferWithdraw stamp: 'PGTA 11/15/2020 21:34:19'!
PASSED!

!testRun: #ReportTest #test10TransferNetReturnsAReportFromAnAccountWithATransferDeposit stamp: 'PGTA 11/15/2020 21:34:19'!
PASSED!

!testRun: #ReportTest #test11TransferNetWorksWithAPortfolio stamp: 'PGTA 11/15/2020 21:34:19'!
PASSED!

!testRun: #ReportTest #test12PortfolioStructureWithoutAccountsReturnsPortfolioName stamp: 'PGTA 11/15/2020 21:34:19'!
PASSED!

!testRun: #ReportTest #test13PortfolioStructureWithOneAccount stamp: 'PGTA 11/15/2020 21:34:19'!
PASSED!

!testRun: #ReportTest #test14PortfolioStructureWithOnePortfolioIndentsCorrectly stamp: 'PGTA 11/15/2020 21:34:19'!
PASSED!

!testRun: #ReportTest #test15PortfolioStructureCatedra stamp: 'PGTA 11/15/2020 21:34:19'!
PASSED!

!testRun: #ReportTest #test16SpecialSummaryReportForOnePortfolio stamp: 'PGTA 11/15/2020 21:34:19'!
PASSED!

!testRun: #ReportTest #test17SpecialSummaryReportForOnePortfolioWithOneAccount stamp: 'PGTA 11/15/2020 21:34:19'!
PASSED!

----SNAPSHOT----(15 November 2020 21:34:23) CuisUniversity-4384.image priorSource: 17226998!

----SNAPSHOT----(15 November 2020 21:37:22) CuisUniversity-4384.image priorSource: 17256764!

----QUIT----(15 November 2020 21:37:26) CuisUniversity-4384.image priorSource: 17256858!

----STARTUP---- (16 November 2020 15:30:04) as /home/pablo/Documents/Ingenieria1/cuis_portfolio2/CuisUniversity-4384.image!


!methodRemoval: Withdraw #description stamp: 'PGTA 11/16/2020 15:33:03'!
description
	^'Extracci�n por ', value asString !

!testRun: #PortfolioTest #test07PortfolioHasNoTransactionWhenHasNoAccounts stamp: 'PGTA 11/16/2020 15:33:22'!
PASSED!

!testRun: #PortfolioTest #test01BalanceOfPortfolioWithoutAccountsIsZero stamp: 'PGTA 11/16/2020 15:33:22'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithOneAccountIsAccountBalance stamp: 'PGTA 11/16/2020 15:33:22'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioIsCalculatedRecursivelyOnPortfolios stamp: 'PGTA 11/16/2020 15:33:22'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithoutAccountsHasNoRegisteredTransaction stamp: 'PGTA 11/16/2020 15:33:22'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredItsAccountsTransactions stamp: 'PGTA 11/16/2020 15:33:22'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioLooksForRegisteredTransactionsRecursively stamp: 'PGTA 11/16/2020 15:33:22'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioHasNoTransactionWhenHasNoAccounts stamp: 'PGTA 11/16/2020 15:33:22'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTransactionsIncludesAllItsAccountsTransactions stamp: 'PGTA 11/16/2020 15:33:22'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioTransactionsAreCalculatedRecursively stamp: 'PGTA 11/16/2020 15:33:22'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCanNotIncludeTheSameAccountMoreThanOnce stamp: 'PGTA 11/16/2020 15:33:22'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCanNotIncludeAccountOfItsPortfolios stamp: 'PGTA 11/16/2020 15:33:22'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioCanNotIncludeItself stamp: 'PGTA 11/16/2020 15:33:22'!
PASSED!

!testRun: #PortfolioTest #test13ComposedPortfolioCanNotHaveParentPortfolioAccount stamp: 'PGTA 11/16/2020 15:33:22'!
PASSED!

!testRun: #PortfolioTest #test14ComposedPortfolioCanNotHaveAccountOfAnyRootParentRecursively stamp: 'PGTA 11/16/2020 15:33:22'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotIncludeAnyOfTheComposedAccountOfPortfolioToAdd stamp: 'PGTA 11/16/2020 15:33:22'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioCanHaveAName stamp: 'PGTA 11/16/2020 15:33:22'!
PASSED!

!testRun: #PortfolioTest #test17PortfolioWithAnAccountCanHaveAName stamp: 'PGTA 11/16/2020 15:33:22'!
PASSED!

!testRun: #PortfolioTest #test18PortfolioWithTwoAccountsCanHaveAName stamp: 'PGTA 11/16/2020 15:33:22'!
PASSED!

!testRun: #PortfolioTest #test19PortfolioWithoutANameReturnsDefault stamp: 'PGTA 11/16/2020 15:33:22'!
PASSED!

!testRun: #ReceptiveAccountTest #test10TransferDepositAndWithdrawCanNavigateToTransfer stamp: 'PGTA 11/16/2020 15:33:27'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'PGTA 11/16/2020 15:33:27'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'PGTA 11/16/2020 15:33:27'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'PGTA 11/16/2020 15:33:27'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'PGTA 11/16/2020 15:33:27'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'PGTA 11/16/2020 15:33:27'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'PGTA 11/16/2020 15:33:27'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'PGTA 11/16/2020 15:33:27'!
PASSED!

!testRun: #ReceptiveAccountTest #test08TransferSenderAccountAcknowledgesTransferTransactions stamp: 'PGTA 11/16/2020 15:33:27'!
PASSED!

!testRun: #ReceptiveAccountTest #test09TransferReceiverAccountAcknowledgesTransferTransactions stamp: 'PGTA 11/16/2020 15:33:27'!
PASSED!

!testRun: #ReceptiveAccountTest #test10TransferDepositAndWithdrawCanNavigateToTransfer stamp: 'PGTA 11/16/2020 15:33:27'!
PASSED!

!testRun: #ReceptiveAccountTest #test11TransferDepositAndWithdrawKnowTheTransferAmount stamp: 'PGTA 11/16/2020 15:33:27'!
PASSED!

!testRun: #ReceptiveAccountTest #test12ReceptiveAccountCanHaveAName stamp: 'PGTA 11/16/2020 15:33:27'!
PASSED!

!testRun: #ReceptiveAccountTest #test13ReceptiveAccountWithoutANameReturnsDefault stamp: 'PGTA 11/16/2020 15:33:27'!
PASSED!

!testRun: #ReportTest #test10TransferNetReturnsAReportFromAnAccountWithATransferDeposit stamp: 'PGTA 11/16/2020 15:33:33'!
PASSED!

!testRun: #ReportTest #test01AccountSummaryFromANewAccountReturnsBalance0 stamp: 'PGTA 11/16/2020 15:33:33'!
PASSED!

!testRun: #ReportTest #test02AccountSummaryReturnsAReportFromAnAccountWithADeposit stamp: 'PGTA 11/16/2020 15:33:33'!
PASSED!

!testRun: #ReportTest #test03AccountSummaryReturnsAReportFromAnAccountWithAWithdraw stamp: 'PGTA 11/16/2020 15:33:33'!
PASSED!

!testRun: #ReportTest #test04AccountSummaryReturnsAReportFromAnAccountWithATransferWithdraw stamp: 'PGTA 11/16/2020 15:33:33'!
PASSED!

!testRun: #ReportTest #test05AccountSummaryReturnsAReportFromAnAccountWithATransferDeposit stamp: 'PGTA 11/16/2020 15:33:33'!
PASSED!

!testRun: #ReportTest #test06TransferNetFromANewAccountReturnsZero stamp: 'PGTA 11/16/2020 15:33:33'!
PASSED!

!testRun: #ReportTest #test07TransferNetReturnsAReportFromAnAccountWithADeposit stamp: 'PGTA 11/16/2020 15:33:33'!
PASSED!

!testRun: #ReportTest #test08TransferNetReturnsAReportFromAnAccountWithAWithdraw stamp: 'PGTA 11/16/2020 15:33:33'!
PASSED!

!testRun: #ReportTest #test09TransferNetReturnsAReportFromAnAccountWithATransferWithdraw stamp: 'PGTA 11/16/2020 15:33:33'!
PASSED!

!testRun: #ReportTest #test10TransferNetReturnsAReportFromAnAccountWithATransferDeposit stamp: 'PGTA 11/16/2020 15:33:33'!
PASSED!

!testRun: #ReportTest #test11TransferNetWorksWithAPortfolio stamp: 'PGTA 11/16/2020 15:33:33'!
PASSED!

!testRun: #ReportTest #test12PortfolioStructureWithoutAccountsReturnsPortfolioName stamp: 'PGTA 11/16/2020 15:33:33'!
PASSED!

!testRun: #ReportTest #test13PortfolioStructureWithOneAccount stamp: 'PGTA 11/16/2020 15:33:33'!
PASSED!

!testRun: #ReportTest #test14PortfolioStructureWithOnePortfolioIndentsCorrectly stamp: 'PGTA 11/16/2020 15:33:33'!
PASSED!

!testRun: #ReportTest #test15PortfolioStructureCatedra stamp: 'PGTA 11/16/2020 15:33:33'!
PASSED!

!testRun: #ReportTest #test16SpecialSummaryReportForOnePortfolio stamp: 'PGTA 11/16/2020 15:33:33'!
PASSED!

!testRun: #ReportTest #test17SpecialSummaryReportForOnePortfolioWithOneAccount stamp: 'PGTA 11/16/2020 15:33:33'!
PASSED!

!methodRemoval: Deposit #description stamp: 'PGTA 11/16/2020 15:40:06'!
description
	^'Dep�sito por ', value asString !

!methodRemoval: TransferDeposit #description stamp: 'PGTA 11/16/2020 15:40:28'!
description
	^'Entrada por transferencia de ', self value asString!

!methodRemoval: TransferWithdraw #description stamp: 'PGTA 11/16/2020 15:40:37'!
description
	^'Salida por transferencia de ', self value asString !

!testRun: #PortfolioTest #test01BalanceOfPortfolioWithoutAccountsIsZero stamp: 'PGTA 11/16/2020 15:41:01'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithOneAccountIsAccountBalance stamp: 'PGTA 11/16/2020 15:41:01'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioIsCalculatedRecursivelyOnPortfolios stamp: 'PGTA 11/16/2020 15:41:01'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithoutAccountsHasNoRegisteredTransaction stamp: 'PGTA 11/16/2020 15:41:01'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredItsAccountsTransactions stamp: 'PGTA 11/16/2020 15:41:01'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioLooksForRegisteredTransactionsRecursively stamp: 'PGTA 11/16/2020 15:41:01'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioHasNoTransactionWhenHasNoAccounts stamp: 'PGTA 11/16/2020 15:41:01'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTransactionsIncludesAllItsAccountsTransactions stamp: 'PGTA 11/16/2020 15:41:01'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioTransactionsAreCalculatedRecursively stamp: 'PGTA 11/16/2020 15:41:01'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCanNotIncludeTheSameAccountMoreThanOnce stamp: 'PGTA 11/16/2020 15:41:01'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCanNotIncludeAccountOfItsPortfolios stamp: 'PGTA 11/16/2020 15:41:01'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioCanNotIncludeItself stamp: 'PGTA 11/16/2020 15:41:01'!
PASSED!

!testRun: #PortfolioTest #test13ComposedPortfolioCanNotHaveParentPortfolioAccount stamp: 'PGTA 11/16/2020 15:41:01'!
PASSED!

!testRun: #PortfolioTest #test14ComposedPortfolioCanNotHaveAccountOfAnyRootParentRecursively stamp: 'PGTA 11/16/2020 15:41:01'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotIncludeAnyOfTheComposedAccountOfPortfolioToAdd stamp: 'PGTA 11/16/2020 15:41:01'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioCanHaveAName stamp: 'PGTA 11/16/2020 15:41:01'!
PASSED!

!testRun: #PortfolioTest #test17PortfolioWithAnAccountCanHaveAName stamp: 'PGTA 11/16/2020 15:41:01'!
PASSED!

!testRun: #PortfolioTest #test18PortfolioWithTwoAccountsCanHaveAName stamp: 'PGTA 11/16/2020 15:41:01'!
PASSED!

!testRun: #PortfolioTest #test19PortfolioWithoutANameReturnsDefault stamp: 'PGTA 11/16/2020 15:41:01'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'PGTA 11/16/2020 15:41:01'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'PGTA 11/16/2020 15:41:01'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'PGTA 11/16/2020 15:41:01'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'PGTA 11/16/2020 15:41:01'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'PGTA 11/16/2020 15:41:01'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'PGTA 11/16/2020 15:41:01'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'PGTA 11/16/2020 15:41:01'!
PASSED!

!testRun: #ReceptiveAccountTest #test08TransferSenderAccountAcknowledgesTransferTransactions stamp: 'PGTA 11/16/2020 15:41:01'!
PASSED!

!testRun: #ReceptiveAccountTest #test09TransferReceiverAccountAcknowledgesTransferTransactions stamp: 'PGTA 11/16/2020 15:41:01'!
PASSED!

!testRun: #ReceptiveAccountTest #test10TransferDepositAndWithdrawCanNavigateToTransfer stamp: 'PGTA 11/16/2020 15:41:01'!
PASSED!

!testRun: #ReceptiveAccountTest #test11TransferDepositAndWithdrawKnowTheTransferAmount stamp: 'PGTA 11/16/2020 15:41:01'!
PASSED!

!testRun: #ReceptiveAccountTest #test12ReceptiveAccountCanHaveAName stamp: 'PGTA 11/16/2020 15:41:01'!
PASSED!

!testRun: #ReceptiveAccountTest #test13ReceptiveAccountWithoutANameReturnsDefault stamp: 'PGTA 11/16/2020 15:41:01'!
PASSED!

!testRun: #ReportTest #test01AccountSummaryFromANewAccountReturnsBalance0 stamp: 'PGTA 11/16/2020 15:41:01'!
PASSED!

!testRun: #ReportTest #test02AccountSummaryReturnsAReportFromAnAccountWithADeposit stamp: 'PGTA 11/16/2020 15:41:01'!
PASSED!

!testRun: #ReportTest #test03AccountSummaryReturnsAReportFromAnAccountWithAWithdraw stamp: 'PGTA 11/16/2020 15:41:01'!
PASSED!

!testRun: #ReportTest #test04AccountSummaryReturnsAReportFromAnAccountWithATransferWithdraw stamp: 'PGTA 11/16/2020 15:41:01'!
PASSED!

!testRun: #ReportTest #test05AccountSummaryReturnsAReportFromAnAccountWithATransferDeposit stamp: 'PGTA 11/16/2020 15:41:01'!
PASSED!

!testRun: #ReportTest #test06TransferNetFromANewAccountReturnsZero stamp: 'PGTA 11/16/2020 15:41:01'!
PASSED!

!testRun: #ReportTest #test07TransferNetReturnsAReportFromAnAccountWithADeposit stamp: 'PGTA 11/16/2020 15:41:01'!
PASSED!

!testRun: #ReportTest #test08TransferNetReturnsAReportFromAnAccountWithAWithdraw stamp: 'PGTA 11/16/2020 15:41:01'!
PASSED!

!testRun: #ReportTest #test09TransferNetReturnsAReportFromAnAccountWithATransferWithdraw stamp: 'PGTA 11/16/2020 15:41:01'!
PASSED!

!testRun: #ReportTest #test10TransferNetReturnsAReportFromAnAccountWithATransferDeposit stamp: 'PGTA 11/16/2020 15:41:01'!
PASSED!

!testRun: #ReportTest #test11TransferNetWorksWithAPortfolio stamp: 'PGTA 11/16/2020 15:41:01'!
PASSED!

!testRun: #ReportTest #test12PortfolioStructureWithoutAccountsReturnsPortfolioName stamp: 'PGTA 11/16/2020 15:41:01'!
PASSED!

!testRun: #ReportTest #test13PortfolioStructureWithOneAccount stamp: 'PGTA 11/16/2020 15:41:01'!
PASSED!

!testRun: #ReportTest #test14PortfolioStructureWithOnePortfolioIndentsCorrectly stamp: 'PGTA 11/16/2020 15:41:01'!
PASSED!

!testRun: #ReportTest #test15PortfolioStructureCatedra stamp: 'PGTA 11/16/2020 15:41:01'!
PASSED!

!testRun: #ReportTest #test16SpecialSummaryReportForOnePortfolio stamp: 'PGTA 11/16/2020 15:41:01'!
PASSED!

!testRun: #ReportTest #test17SpecialSummaryReportForOnePortfolioWithOneAccount stamp: 'PGTA 11/16/2020 15:41:01'!
PASSED!

!testRun: #PortfolioTest #test01BalanceOfPortfolioWithoutAccountsIsZero stamp: 'PGTA 11/16/2020 15:41:27'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithOneAccountIsAccountBalance stamp: 'PGTA 11/16/2020 15:41:28'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioIsCalculatedRecursivelyOnPortfolios stamp: 'PGTA 11/16/2020 15:41:28'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithoutAccountsHasNoRegisteredTransaction stamp: 'PGTA 11/16/2020 15:41:28'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredItsAccountsTransactions stamp: 'PGTA 11/16/2020 15:41:28'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioLooksForRegisteredTransactionsRecursively stamp: 'PGTA 11/16/2020 15:41:28'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioHasNoTransactionWhenHasNoAccounts stamp: 'PGTA 11/16/2020 15:41:28'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTransactionsIncludesAllItsAccountsTransactions stamp: 'PGTA 11/16/2020 15:41:28'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioTransactionsAreCalculatedRecursively stamp: 'PGTA 11/16/2020 15:41:28'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCanNotIncludeTheSameAccountMoreThanOnce stamp: 'PGTA 11/16/2020 15:41:28'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCanNotIncludeAccountOfItsPortfolios stamp: 'PGTA 11/16/2020 15:41:28'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioCanNotIncludeItself stamp: 'PGTA 11/16/2020 15:41:28'!
PASSED!

!testRun: #PortfolioTest #test13ComposedPortfolioCanNotHaveParentPortfolioAccount stamp: 'PGTA 11/16/2020 15:41:28'!
PASSED!

!testRun: #PortfolioTest #test14ComposedPortfolioCanNotHaveAccountOfAnyRootParentRecursively stamp: 'PGTA 11/16/2020 15:41:28'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotIncludeAnyOfTheComposedAccountOfPortfolioToAdd stamp: 'PGTA 11/16/2020 15:41:28'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioCanHaveAName stamp: 'PGTA 11/16/2020 15:41:28'!
PASSED!

!testRun: #PortfolioTest #test17PortfolioWithAnAccountCanHaveAName stamp: 'PGTA 11/16/2020 15:41:28'!
PASSED!

!testRun: #PortfolioTest #test18PortfolioWithTwoAccountsCanHaveAName stamp: 'PGTA 11/16/2020 15:41:28'!
PASSED!

!testRun: #PortfolioTest #test19PortfolioWithoutANameReturnsDefault stamp: 'PGTA 11/16/2020 15:41:28'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'PGTA 11/16/2020 15:41:28'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'PGTA 11/16/2020 15:41:28'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'PGTA 11/16/2020 15:41:28'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'PGTA 11/16/2020 15:41:28'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'PGTA 11/16/2020 15:41:28'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'PGTA 11/16/2020 15:41:28'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'PGTA 11/16/2020 15:41:28'!
PASSED!

!testRun: #ReceptiveAccountTest #test08TransferSenderAccountAcknowledgesTransferTransactions stamp: 'PGTA 11/16/2020 15:41:28'!
PASSED!

!testRun: #ReceptiveAccountTest #test09TransferReceiverAccountAcknowledgesTransferTransactions stamp: 'PGTA 11/16/2020 15:41:28'!
PASSED!

!testRun: #ReceptiveAccountTest #test10TransferDepositAndWithdrawCanNavigateToTransfer stamp: 'PGTA 11/16/2020 15:41:28'!
PASSED!

!testRun: #ReceptiveAccountTest #test11TransferDepositAndWithdrawKnowTheTransferAmount stamp: 'PGTA 11/16/2020 15:41:28'!
PASSED!

!testRun: #ReceptiveAccountTest #test12ReceptiveAccountCanHaveAName stamp: 'PGTA 11/16/2020 15:41:28'!
PASSED!

!testRun: #ReceptiveAccountTest #test13ReceptiveAccountWithoutANameReturnsDefault stamp: 'PGTA 11/16/2020 15:41:28'!
PASSED!

!testRun: #ReportTest #test01AccountSummaryFromANewAccountReturnsBalance0 stamp: 'PGTA 11/16/2020 15:41:28'!
PASSED!

!testRun: #ReportTest #test02AccountSummaryReturnsAReportFromAnAccountWithADeposit stamp: 'PGTA 11/16/2020 15:41:28'!
PASSED!

!testRun: #ReportTest #test03AccountSummaryReturnsAReportFromAnAccountWithAWithdraw stamp: 'PGTA 11/16/2020 15:41:28'!
PASSED!

!testRun: #ReportTest #test04AccountSummaryReturnsAReportFromAnAccountWithATransferWithdraw stamp: 'PGTA 11/16/2020 15:41:28'!
PASSED!

!testRun: #ReportTest #test05AccountSummaryReturnsAReportFromAnAccountWithATransferDeposit stamp: 'PGTA 11/16/2020 15:41:28'!
PASSED!

!testRun: #ReportTest #test06TransferNetFromANewAccountReturnsZero stamp: 'PGTA 11/16/2020 15:41:28'!
PASSED!

!testRun: #ReportTest #test07TransferNetReturnsAReportFromAnAccountWithADeposit stamp: 'PGTA 11/16/2020 15:41:28'!
PASSED!

!testRun: #ReportTest #test08TransferNetReturnsAReportFromAnAccountWithAWithdraw stamp: 'PGTA 11/16/2020 15:41:28'!
PASSED!

!testRun: #ReportTest #test09TransferNetReturnsAReportFromAnAccountWithATransferWithdraw stamp: 'PGTA 11/16/2020 15:41:28'!
PASSED!

!testRun: #ReportTest #test10TransferNetReturnsAReportFromAnAccountWithATransferDeposit stamp: 'PGTA 11/16/2020 15:41:28'!
PASSED!

!testRun: #ReportTest #test11TransferNetWorksWithAPortfolio stamp: 'PGTA 11/16/2020 15:41:28'!
PASSED!

!testRun: #ReportTest #test12PortfolioStructureWithoutAccountsReturnsPortfolioName stamp: 'PGTA 11/16/2020 15:41:28'!
PASSED!

!testRun: #ReportTest #test13PortfolioStructureWithOneAccount stamp: 'PGTA 11/16/2020 15:41:28'!
PASSED!

!testRun: #ReportTest #test14PortfolioStructureWithOnePortfolioIndentsCorrectly stamp: 'PGTA 11/16/2020 15:41:28'!
PASSED!

!testRun: #ReportTest #test15PortfolioStructureCatedra stamp: 'PGTA 11/16/2020 15:41:28'!
PASSED!

!testRun: #ReportTest #test16SpecialSummaryReportForOnePortfolio stamp: 'PGTA 11/16/2020 15:41:28'!
PASSED!

!testRun: #ReportTest #test17SpecialSummaryReportForOnePortfolioWithOneAccount stamp: 'PGTA 11/16/2020 15:41:28'!
PASSED!

!methodRemoval: AccountTransaction #description stamp: 'PGTA 11/16/2020 15:41:50'!
description
	self subclassResponsibility!

!methodRemoval: Account #balanceDescription stamp: 'PGTA 11/16/2020 15:46:54'!
balanceDescription
	self subclassResponsibility .!

!testRun: #PortfolioTest #test01BalanceOfPortfolioWithoutAccountsIsZero stamp: 'PGTA 11/16/2020 15:47:10'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithOneAccountIsAccountBalance stamp: 'PGTA 11/16/2020 15:47:10'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioIsCalculatedRecursivelyOnPortfolios stamp: 'PGTA 11/16/2020 15:47:10'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithoutAccountsHasNoRegisteredTransaction stamp: 'PGTA 11/16/2020 15:47:10'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredItsAccountsTransactions stamp: 'PGTA 11/16/2020 15:47:10'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioLooksForRegisteredTransactionsRecursively stamp: 'PGTA 11/16/2020 15:47:10'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioHasNoTransactionWhenHasNoAccounts stamp: 'PGTA 11/16/2020 15:47:10'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTransactionsIncludesAllItsAccountsTransactions stamp: 'PGTA 11/16/2020 15:47:10'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioTransactionsAreCalculatedRecursively stamp: 'PGTA 11/16/2020 15:47:10'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCanNotIncludeTheSameAccountMoreThanOnce stamp: 'PGTA 11/16/2020 15:47:10'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCanNotIncludeAccountOfItsPortfolios stamp: 'PGTA 11/16/2020 15:47:10'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioCanNotIncludeItself stamp: 'PGTA 11/16/2020 15:47:10'!
PASSED!

!testRun: #PortfolioTest #test13ComposedPortfolioCanNotHaveParentPortfolioAccount stamp: 'PGTA 11/16/2020 15:47:10'!
PASSED!

!testRun: #PortfolioTest #test14ComposedPortfolioCanNotHaveAccountOfAnyRootParentRecursively stamp: 'PGTA 11/16/2020 15:47:10'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotIncludeAnyOfTheComposedAccountOfPortfolioToAdd stamp: 'PGTA 11/16/2020 15:47:10'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioCanHaveAName stamp: 'PGTA 11/16/2020 15:47:10'!
PASSED!

!testRun: #PortfolioTest #test17PortfolioWithAnAccountCanHaveAName stamp: 'PGTA 11/16/2020 15:47:10'!
PASSED!

!testRun: #PortfolioTest #test18PortfolioWithTwoAccountsCanHaveAName stamp: 'PGTA 11/16/2020 15:47:10'!
PASSED!

!testRun: #PortfolioTest #test19PortfolioWithoutANameReturnsDefault stamp: 'PGTA 11/16/2020 15:47:10'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'PGTA 11/16/2020 15:47:10'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'PGTA 11/16/2020 15:47:10'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'PGTA 11/16/2020 15:47:10'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'PGTA 11/16/2020 15:47:10'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'PGTA 11/16/2020 15:47:10'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'PGTA 11/16/2020 15:47:10'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'PGTA 11/16/2020 15:47:10'!
PASSED!

!testRun: #ReceptiveAccountTest #test08TransferSenderAccountAcknowledgesTransferTransactions stamp: 'PGTA 11/16/2020 15:47:10'!
PASSED!

!testRun: #ReceptiveAccountTest #test09TransferReceiverAccountAcknowledgesTransferTransactions stamp: 'PGTA 11/16/2020 15:47:10'!
PASSED!

!testRun: #ReceptiveAccountTest #test10TransferDepositAndWithdrawCanNavigateToTransfer stamp: 'PGTA 11/16/2020 15:47:10'!
PASSED!

!testRun: #ReceptiveAccountTest #test11TransferDepositAndWithdrawKnowTheTransferAmount stamp: 'PGTA 11/16/2020 15:47:10'!
PASSED!

!testRun: #ReceptiveAccountTest #test12ReceptiveAccountCanHaveAName stamp: 'PGTA 11/16/2020 15:47:10'!
PASSED!

!testRun: #ReceptiveAccountTest #test13ReceptiveAccountWithoutANameReturnsDefault stamp: 'PGTA 11/16/2020 15:47:10'!
PASSED!

!testRun: #ReportTest #test01AccountSummaryFromANewAccountReturnsBalance0 stamp: 'PGTA 11/16/2020 15:47:10'!
PASSED!

!testRun: #ReportTest #test02AccountSummaryReturnsAReportFromAnAccountWithADeposit stamp: 'PGTA 11/16/2020 15:47:10'!
PASSED!

!testRun: #ReportTest #test03AccountSummaryReturnsAReportFromAnAccountWithAWithdraw stamp: 'PGTA 11/16/2020 15:47:10'!
PASSED!

!testRun: #ReportTest #test04AccountSummaryReturnsAReportFromAnAccountWithATransferWithdraw stamp: 'PGTA 11/16/2020 15:47:10'!
PASSED!

!testRun: #ReportTest #test05AccountSummaryReturnsAReportFromAnAccountWithATransferDeposit stamp: 'PGTA 11/16/2020 15:47:10'!
PASSED!

!testRun: #ReportTest #test06TransferNetFromANewAccountReturnsZero stamp: 'PGTA 11/16/2020 15:47:10'!
PASSED!

!testRun: #ReportTest #test07TransferNetReturnsAReportFromAnAccountWithADeposit stamp: 'PGTA 11/16/2020 15:47:10'!
PASSED!

!testRun: #ReportTest #test08TransferNetReturnsAReportFromAnAccountWithAWithdraw stamp: 'PGTA 11/16/2020 15:47:10'!
PASSED!

!testRun: #ReportTest #test09TransferNetReturnsAReportFromAnAccountWithATransferWithdraw stamp: 'PGTA 11/16/2020 15:47:10'!
PASSED!

!testRun: #ReportTest #test10TransferNetReturnsAReportFromAnAccountWithATransferDeposit stamp: 'PGTA 11/16/2020 15:47:10'!
PASSED!

!testRun: #ReportTest #test11TransferNetWorksWithAPortfolio stamp: 'PGTA 11/16/2020 15:47:10'!
PASSED!

!testRun: #ReportTest #test12PortfolioStructureWithoutAccountsReturnsPortfolioName stamp: 'PGTA 11/16/2020 15:47:10'!
PASSED!

!testRun: #ReportTest #test13PortfolioStructureWithOneAccount stamp: 'PGTA 11/16/2020 15:47:10'!
PASSED!

!testRun: #ReportTest #test14PortfolioStructureWithOnePortfolioIndentsCorrectly stamp: 'PGTA 11/16/2020 15:47:10'!
PASSED!

!testRun: #ReportTest #test15PortfolioStructureCatedra stamp: 'PGTA 11/16/2020 15:47:10'!
PASSED!

!testRun: #ReportTest #test16SpecialSummaryReportForOnePortfolio stamp: 'PGTA 11/16/2020 15:47:10'!
PASSED!

!testRun: #ReportTest #test17SpecialSummaryReportForOnePortfolioWithOneAccount stamp: 'PGTA 11/16/2020 15:47:10'!
PASSED!

!testRun: #PortfolioTest #test01BalanceOfPortfolioWithoutAccountsIsZero stamp: 'PGTA 11/16/2020 15:56:30'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithOneAccountIsAccountBalance stamp: 'PGTA 11/16/2020 15:56:30'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioIsCalculatedRecursivelyOnPortfolios stamp: 'PGTA 11/16/2020 15:56:30'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithoutAccountsHasNoRegisteredTransaction stamp: 'PGTA 11/16/2020 15:56:30'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredItsAccountsTransactions stamp: 'PGTA 11/16/2020 15:56:30'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioLooksForRegisteredTransactionsRecursively stamp: 'PGTA 11/16/2020 15:56:30'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioHasNoTransactionWhenHasNoAccounts stamp: 'PGTA 11/16/2020 15:56:30'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTransactionsIncludesAllItsAccountsTransactions stamp: 'PGTA 11/16/2020 15:56:30'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioTransactionsAreCalculatedRecursively stamp: 'PGTA 11/16/2020 15:56:30'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCanNotIncludeTheSameAccountMoreThanOnce stamp: 'PGTA 11/16/2020 15:56:30'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCanNotIncludeAccountOfItsPortfolios stamp: 'PGTA 11/16/2020 15:56:30'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioCanNotIncludeItself stamp: 'PGTA 11/16/2020 15:56:30'!
PASSED!

!testRun: #PortfolioTest #test13ComposedPortfolioCanNotHaveParentPortfolioAccount stamp: 'PGTA 11/16/2020 15:56:30'!
PASSED!

!testRun: #PortfolioTest #test14ComposedPortfolioCanNotHaveAccountOfAnyRootParentRecursively stamp: 'PGTA 11/16/2020 15:56:30'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotIncludeAnyOfTheComposedAccountOfPortfolioToAdd stamp: 'PGTA 11/16/2020 15:56:30'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioCanHaveAName stamp: 'PGTA 11/16/2020 15:56:30'!
PASSED!

!testRun: #PortfolioTest #test17PortfolioWithAnAccountCanHaveAName stamp: 'PGTA 11/16/2020 15:56:30'!
PASSED!

!testRun: #PortfolioTest #test18PortfolioWithTwoAccountsCanHaveAName stamp: 'PGTA 11/16/2020 15:56:30'!
PASSED!

!testRun: #PortfolioTest #test19PortfolioWithoutANameReturnsDefault stamp: 'PGTA 11/16/2020 15:56:30'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'PGTA 11/16/2020 15:56:30'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'PGTA 11/16/2020 15:56:30'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'PGTA 11/16/2020 15:56:30'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'PGTA 11/16/2020 15:56:30'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'PGTA 11/16/2020 15:56:30'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'PGTA 11/16/2020 15:56:30'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'PGTA 11/16/2020 15:56:30'!
PASSED!

!testRun: #ReceptiveAccountTest #test08TransferSenderAccountAcknowledgesTransferTransactions stamp: 'PGTA 11/16/2020 15:56:30'!
PASSED!

!testRun: #ReceptiveAccountTest #test09TransferReceiverAccountAcknowledgesTransferTransactions stamp: 'PGTA 11/16/2020 15:56:30'!
PASSED!

!testRun: #ReceptiveAccountTest #test10TransferDepositAndWithdrawCanNavigateToTransfer stamp: 'PGTA 11/16/2020 15:56:30'!
PASSED!

!testRun: #ReceptiveAccountTest #test11TransferDepositAndWithdrawKnowTheTransferAmount stamp: 'PGTA 11/16/2020 15:56:30'!
PASSED!

!testRun: #ReceptiveAccountTest #test12ReceptiveAccountCanHaveAName stamp: 'PGTA 11/16/2020 15:56:30'!
PASSED!

!testRun: #ReceptiveAccountTest #test13ReceptiveAccountWithoutANameReturnsDefault stamp: 'PGTA 11/16/2020 15:56:30'!
PASSED!

!testRun: #ReportTest #test01AccountSummaryFromANewAccountReturnsBalance0 stamp: 'PGTA 11/16/2020 15:56:30'!
PASSED!

!testRun: #ReportTest #test02AccountSummaryReturnsAReportFromAnAccountWithADeposit stamp: 'PGTA 11/16/2020 15:56:30'!
PASSED!

!testRun: #ReportTest #test03AccountSummaryReturnsAReportFromAnAccountWithAWithdraw stamp: 'PGTA 11/16/2020 15:56:30'!
PASSED!

!testRun: #ReportTest #test04AccountSummaryReturnsAReportFromAnAccountWithATransferWithdraw stamp: 'PGTA 11/16/2020 15:56:30'!
PASSED!

!testRun: #ReportTest #test05AccountSummaryReturnsAReportFromAnAccountWithATransferDeposit stamp: 'PGTA 11/16/2020 15:56:30'!
PASSED!

!testRun: #ReportTest #test06TransferNetFromANewAccountReturnsZero stamp: 'PGTA 11/16/2020 15:56:30'!
PASSED!

!testRun: #ReportTest #test07TransferNetReturnsAReportFromAnAccountWithADeposit stamp: 'PGTA 11/16/2020 15:56:30'!
PASSED!

!testRun: #ReportTest #test08TransferNetReturnsAReportFromAnAccountWithAWithdraw stamp: 'PGTA 11/16/2020 15:56:30'!
PASSED!

!testRun: #ReportTest #test09TransferNetReturnsAReportFromAnAccountWithATransferWithdraw stamp: 'PGTA 11/16/2020 15:56:30'!
PASSED!

!testRun: #ReportTest #test10TransferNetReturnsAReportFromAnAccountWithATransferDeposit stamp: 'PGTA 11/16/2020 15:56:30'!
PASSED!

!testRun: #ReportTest #test11TransferNetWorksWithAPortfolio stamp: 'PGTA 11/16/2020 15:56:30'!
PASSED!

!testRun: #ReportTest #test12PortfolioStructureWithoutAccountsReturnsPortfolioName stamp: 'PGTA 11/16/2020 15:56:30'!
PASSED!

!testRun: #ReportTest #test13PortfolioStructureWithOneAccount stamp: 'PGTA 11/16/2020 15:56:30'!
PASSED!

!testRun: #ReportTest #test14PortfolioStructureWithOnePortfolioIndentsCorrectly stamp: 'PGTA 11/16/2020 15:56:30'!
PASSED!

!testRun: #ReportTest #test15PortfolioStructureCatedra stamp: 'PGTA 11/16/2020 15:56:30'!
PASSED!

!testRun: #ReportTest #test16SpecialSummaryReportForOnePortfolio stamp: 'PGTA 11/16/2020 15:56:30'!
PASSED!

!testRun: #ReportTest #test17SpecialSummaryReportForOnePortfolioWithOneAccount stamp: 'PGTA 11/16/2020 15:56:30'!
PASSED!

----SNAPSHOT----(16 November 2020 15:56:35) CuisUniversity-4384.image priorSource: 17256952!

!classDefinition: #Transfer category: 'Portfolio-Solucion' stamp: 'PGTA 11/16/2020 16:18:08'!
Object subclass: #Transfer
	instanceVariableNames: 'deposit withdraw value transferReceiver'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #Transfer category: 'Portfolio-Solucion' stamp: 'PGTA 11/16/2020 16:18:09'!
Object subclass: #Transfer
	instanceVariableNames: 'deposit withdraw value transferReceiver transferSender'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!
!Transfer methodsFor: 'as yet unclassified' stamp: 'PGTA 11/16/2020 16:18:06' prior: 50869193!
initializeFrom: aSenderAccount to: aReceiverAccount amount: anAmount
	
	value := anAmount.
	transferReceiver := TransferDeposit registerOn: aReceiverAccount for: self.
	transferSender := TransferWithdraw registerOn: aSenderAccount for: self.! !
!Transfer methodsFor: 'as yet unclassified' stamp: 'PGTA 11/16/2020 16:18:27' prior: 50869189!
deposit
	
	^transferReceiver.! !
!Transfer methodsFor: 'as yet unclassified' stamp: 'PGTA 11/16/2020 16:18:35' prior: 50869207!
withdraw
	
	^transferSender.! !

!testRun: #PortfolioTest #test01BalanceOfPortfolioWithoutAccountsIsZero stamp: 'PGTA 11/16/2020 16:18:39'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithOneAccountIsAccountBalance stamp: 'PGTA 11/16/2020 16:18:39'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioIsCalculatedRecursivelyOnPortfolios stamp: 'PGTA 11/16/2020 16:18:39'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithoutAccountsHasNoRegisteredTransaction stamp: 'PGTA 11/16/2020 16:18:39'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredItsAccountsTransactions stamp: 'PGTA 11/16/2020 16:18:39'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioLooksForRegisteredTransactionsRecursively stamp: 'PGTA 11/16/2020 16:18:39'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioHasNoTransactionWhenHasNoAccounts stamp: 'PGTA 11/16/2020 16:18:39'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTransactionsIncludesAllItsAccountsTransactions stamp: 'PGTA 11/16/2020 16:18:39'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioTransactionsAreCalculatedRecursively stamp: 'PGTA 11/16/2020 16:18:39'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCanNotIncludeTheSameAccountMoreThanOnce stamp: 'PGTA 11/16/2020 16:18:39'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCanNotIncludeAccountOfItsPortfolios stamp: 'PGTA 11/16/2020 16:18:39'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioCanNotIncludeItself stamp: 'PGTA 11/16/2020 16:18:39'!
PASSED!

!testRun: #PortfolioTest #test13ComposedPortfolioCanNotHaveParentPortfolioAccount stamp: 'PGTA 11/16/2020 16:18:39'!
PASSED!

!testRun: #PortfolioTest #test14ComposedPortfolioCanNotHaveAccountOfAnyRootParentRecursively stamp: 'PGTA 11/16/2020 16:18:39'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotIncludeAnyOfTheComposedAccountOfPortfolioToAdd stamp: 'PGTA 11/16/2020 16:18:39'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioCanHaveAName stamp: 'PGTA 11/16/2020 16:18:39'!
PASSED!

!testRun: #PortfolioTest #test17PortfolioWithAnAccountCanHaveAName stamp: 'PGTA 11/16/2020 16:18:39'!
PASSED!

!testRun: #PortfolioTest #test18PortfolioWithTwoAccountsCanHaveAName stamp: 'PGTA 11/16/2020 16:18:39'!
PASSED!

!testRun: #PortfolioTest #test19PortfolioWithoutANameReturnsDefault stamp: 'PGTA 11/16/2020 16:18:39'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'PGTA 11/16/2020 16:18:39'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'PGTA 11/16/2020 16:18:39'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'PGTA 11/16/2020 16:18:39'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'PGTA 11/16/2020 16:18:39'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'PGTA 11/16/2020 16:18:39'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'PGTA 11/16/2020 16:18:39'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'PGTA 11/16/2020 16:18:39'!
PASSED!

!testRun: #ReceptiveAccountTest #test08TransferSenderAccountAcknowledgesTransferTransactions stamp: 'PGTA 11/16/2020 16:18:39'!
PASSED!

!testRun: #ReceptiveAccountTest #test09TransferReceiverAccountAcknowledgesTransferTransactions stamp: 'PGTA 11/16/2020 16:18:39'!
PASSED!

!testRun: #ReceptiveAccountTest #test10TransferDepositAndWithdrawCanNavigateToTransfer stamp: 'PGTA 11/16/2020 16:18:39'!
PASSED!

!testRun: #ReceptiveAccountTest #test11TransferDepositAndWithdrawKnowTheTransferAmount stamp: 'PGTA 11/16/2020 16:18:39'!
PASSED!

!testRun: #ReceptiveAccountTest #test12ReceptiveAccountCanHaveAName stamp: 'PGTA 11/16/2020 16:18:39'!
PASSED!

!testRun: #ReceptiveAccountTest #test13ReceptiveAccountWithoutANameReturnsDefault stamp: 'PGTA 11/16/2020 16:18:39'!
PASSED!

!testRun: #ReportTest #test01AccountSummaryFromANewAccountReturnsBalance0 stamp: 'PGTA 11/16/2020 16:18:39'!
PASSED!

!testRun: #ReportTest #test02AccountSummaryReturnsAReportFromAnAccountWithADeposit stamp: 'PGTA 11/16/2020 16:18:39'!
PASSED!

!testRun: #ReportTest #test03AccountSummaryReturnsAReportFromAnAccountWithAWithdraw stamp: 'PGTA 11/16/2020 16:18:39'!
PASSED!

!testRun: #ReportTest #test04AccountSummaryReturnsAReportFromAnAccountWithATransferWithdraw stamp: 'PGTA 11/16/2020 16:18:39'!
PASSED!

!testRun: #ReportTest #test05AccountSummaryReturnsAReportFromAnAccountWithATransferDeposit stamp: 'PGTA 11/16/2020 16:18:39'!
PASSED!

!testRun: #ReportTest #test06TransferNetFromANewAccountReturnsZero stamp: 'PGTA 11/16/2020 16:18:39'!
PASSED!

!testRun: #ReportTest #test07TransferNetReturnsAReportFromAnAccountWithADeposit stamp: 'PGTA 11/16/2020 16:18:39'!
PASSED!

!testRun: #ReportTest #test08TransferNetReturnsAReportFromAnAccountWithAWithdraw stamp: 'PGTA 11/16/2020 16:18:39'!
PASSED!

!testRun: #ReportTest #test09TransferNetReturnsAReportFromAnAccountWithATransferWithdraw stamp: 'PGTA 11/16/2020 16:18:39'!
PASSED!

!testRun: #ReportTest #test10TransferNetReturnsAReportFromAnAccountWithATransferDeposit stamp: 'PGTA 11/16/2020 16:18:39'!
PASSED!

!testRun: #ReportTest #test11TransferNetWorksWithAPortfolio stamp: 'PGTA 11/16/2020 16:18:39'!
PASSED!

!testRun: #ReportTest #test12PortfolioStructureWithoutAccountsReturnsPortfolioName stamp: 'PGTA 11/16/2020 16:18:39'!
PASSED!

!testRun: #ReportTest #test13PortfolioStructureWithOneAccount stamp: 'PGTA 11/16/2020 16:18:39'!
PASSED!

!testRun: #ReportTest #test14PortfolioStructureWithOnePortfolioIndentsCorrectly stamp: 'PGTA 11/16/2020 16:18:39'!
PASSED!

!testRun: #ReportTest #test15PortfolioStructureCatedra stamp: 'PGTA 11/16/2020 16:18:39'!
PASSED!

!testRun: #ReportTest #test16SpecialSummaryReportForOnePortfolio stamp: 'PGTA 11/16/2020 16:18:39'!
PASSED!

!testRun: #ReportTest #test17SpecialSummaryReportForOnePortfolioWithOneAccount stamp: 'PGTA 11/16/2020 16:18:39'!
PASSED!

Object subclass: #Transfer
	instanceVariableNames: 'value transferReceiver transferSender'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #Transfer category: 'Portfolio-Solucion' stamp: 'PGTA 11/16/2020 16:19:08'!
Object subclass: #Transfer
	instanceVariableNames: 'value transferReceiver transferSender'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!testRun: #PortfolioTest #test01BalanceOfPortfolioWithoutAccountsIsZero stamp: 'PGTA 11/16/2020 16:19:12'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithOneAccountIsAccountBalance stamp: 'PGTA 11/16/2020 16:19:12'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioIsCalculatedRecursivelyOnPortfolios stamp: 'PGTA 11/16/2020 16:19:12'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithoutAccountsHasNoRegisteredTransaction stamp: 'PGTA 11/16/2020 16:19:12'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredItsAccountsTransactions stamp: 'PGTA 11/16/2020 16:19:12'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioLooksForRegisteredTransactionsRecursively stamp: 'PGTA 11/16/2020 16:19:12'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioHasNoTransactionWhenHasNoAccounts stamp: 'PGTA 11/16/2020 16:19:12'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTransactionsIncludesAllItsAccountsTransactions stamp: 'PGTA 11/16/2020 16:19:12'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioTransactionsAreCalculatedRecursively stamp: 'PGTA 11/16/2020 16:19:12'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCanNotIncludeTheSameAccountMoreThanOnce stamp: 'PGTA 11/16/2020 16:19:12'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCanNotIncludeAccountOfItsPortfolios stamp: 'PGTA 11/16/2020 16:19:12'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioCanNotIncludeItself stamp: 'PGTA 11/16/2020 16:19:12'!
PASSED!

!testRun: #PortfolioTest #test13ComposedPortfolioCanNotHaveParentPortfolioAccount stamp: 'PGTA 11/16/2020 16:19:12'!
PASSED!

!testRun: #PortfolioTest #test14ComposedPortfolioCanNotHaveAccountOfAnyRootParentRecursively stamp: 'PGTA 11/16/2020 16:19:12'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotIncludeAnyOfTheComposedAccountOfPortfolioToAdd stamp: 'PGTA 11/16/2020 16:19:12'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioCanHaveAName stamp: 'PGTA 11/16/2020 16:19:12'!
PASSED!

!testRun: #PortfolioTest #test17PortfolioWithAnAccountCanHaveAName stamp: 'PGTA 11/16/2020 16:19:12'!
PASSED!

!testRun: #PortfolioTest #test18PortfolioWithTwoAccountsCanHaveAName stamp: 'PGTA 11/16/2020 16:19:12'!
PASSED!

!testRun: #PortfolioTest #test19PortfolioWithoutANameReturnsDefault stamp: 'PGTA 11/16/2020 16:19:12'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'PGTA 11/16/2020 16:19:12'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'PGTA 11/16/2020 16:19:12'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'PGTA 11/16/2020 16:19:12'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'PGTA 11/16/2020 16:19:12'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'PGTA 11/16/2020 16:19:12'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'PGTA 11/16/2020 16:19:12'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'PGTA 11/16/2020 16:19:12'!
PASSED!

!testRun: #ReceptiveAccountTest #test08TransferSenderAccountAcknowledgesTransferTransactions stamp: 'PGTA 11/16/2020 16:19:12'!
PASSED!

!testRun: #ReceptiveAccountTest #test09TransferReceiverAccountAcknowledgesTransferTransactions stamp: 'PGTA 11/16/2020 16:19:12'!
PASSED!

!testRun: #ReceptiveAccountTest #test10TransferDepositAndWithdrawCanNavigateToTransfer stamp: 'PGTA 11/16/2020 16:19:12'!
PASSED!

!testRun: #ReceptiveAccountTest #test11TransferDepositAndWithdrawKnowTheTransferAmount stamp: 'PGTA 11/16/2020 16:19:12'!
PASSED!

!testRun: #ReceptiveAccountTest #test12ReceptiveAccountCanHaveAName stamp: 'PGTA 11/16/2020 16:19:12'!
PASSED!

!testRun: #ReceptiveAccountTest #test13ReceptiveAccountWithoutANameReturnsDefault stamp: 'PGTA 11/16/2020 16:19:12'!
PASSED!

!testRun: #ReportTest #test01AccountSummaryFromANewAccountReturnsBalance0 stamp: 'PGTA 11/16/2020 16:19:12'!
PASSED!

!testRun: #ReportTest #test02AccountSummaryReturnsAReportFromAnAccountWithADeposit stamp: 'PGTA 11/16/2020 16:19:12'!
PASSED!

!testRun: #ReportTest #test03AccountSummaryReturnsAReportFromAnAccountWithAWithdraw stamp: 'PGTA 11/16/2020 16:19:12'!
PASSED!

!testRun: #ReportTest #test04AccountSummaryReturnsAReportFromAnAccountWithATransferWithdraw stamp: 'PGTA 11/16/2020 16:19:12'!
PASSED!

!testRun: #ReportTest #test05AccountSummaryReturnsAReportFromAnAccountWithATransferDeposit stamp: 'PGTA 11/16/2020 16:19:12'!
PASSED!

!testRun: #ReportTest #test06TransferNetFromANewAccountReturnsZero stamp: 'PGTA 11/16/2020 16:19:12'!
PASSED!

!testRun: #ReportTest #test07TransferNetReturnsAReportFromAnAccountWithADeposit stamp: 'PGTA 11/16/2020 16:19:12'!
PASSED!

!testRun: #ReportTest #test08TransferNetReturnsAReportFromAnAccountWithAWithdraw stamp: 'PGTA 11/16/2020 16:19:12'!
PASSED!

!testRun: #ReportTest #test09TransferNetReturnsAReportFromAnAccountWithATransferWithdraw stamp: 'PGTA 11/16/2020 16:19:12'!
PASSED!

!testRun: #ReportTest #test10TransferNetReturnsAReportFromAnAccountWithATransferDeposit stamp: 'PGTA 11/16/2020 16:19:12'!
PASSED!

!testRun: #ReportTest #test11TransferNetWorksWithAPortfolio stamp: 'PGTA 11/16/2020 16:19:12'!
PASSED!

!testRun: #ReportTest #test12PortfolioStructureWithoutAccountsReturnsPortfolioName stamp: 'PGTA 11/16/2020 16:19:12'!
PASSED!

!testRun: #ReportTest #test13PortfolioStructureWithOneAccount stamp: 'PGTA 11/16/2020 16:19:12'!
PASSED!

!testRun: #ReportTest #test14PortfolioStructureWithOnePortfolioIndentsCorrectly stamp: 'PGTA 11/16/2020 16:19:12'!
PASSED!

!testRun: #ReportTest #test15PortfolioStructureCatedra stamp: 'PGTA 11/16/2020 16:19:12'!
PASSED!

!testRun: #ReportTest #test16SpecialSummaryReportForOnePortfolio stamp: 'PGTA 11/16/2020 16:19:12'!
PASSED!

!testRun: #ReportTest #test17SpecialSummaryReportForOnePortfolioWithOneAccount stamp: 'PGTA 11/16/2020 16:19:12'!
PASSED!

----SNAPSHOT----(16 November 2020 16:19:18) CuisUniversity-4384.image priorSource: 17288376!

!classDefinition: #Transfer category: 'Portfolio-Solucion' stamp: 'PGTA 11/16/2020 16:22:35'!
Object subclass: #Transfer
	instanceVariableNames: 'value transferReceiver transferSender receivedTransaction'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #Transfer category: 'Portfolio-Solucion' stamp: 'PGTA 11/16/2020 16:22:36'!
Object subclass: #Transfer
	instanceVariableNames: 'value transferReceiver transferSender receivedTransaction sendTransaction'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!
!Transfer methodsFor: 'private' stamp: 'PGTA 11/16/2020 16:22:34' prior: 50871933!
initializeFrom: aSenderAccount to: aReceiverAccount amount: anAmount
	
	value := anAmount.
	receivedTransaction := TransferDeposit registerOn: aReceiverAccount for: self.
	sendTransaction := TransferWithdraw registerOn: aSenderAccount for: self.! !
!Transfer methodsFor: 'private' stamp: 'PGTA 11/16/2020 16:22:52' prior: 50871944!
deposit
	
	^receivedTransaction.! !
!Transfer methodsFor: 'private' stamp: 'PGTA 11/16/2020 16:23:06' prior: 50871948!
withdraw
	
	^sendTransaction.! !

Object subclass: #Transfer
	instanceVariableNames: 'value receivedTransaction sendTransaction'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #Transfer category: 'Portfolio-Solucion' stamp: 'PGTA 11/16/2020 16:23:15'!
Object subclass: #Transfer
	instanceVariableNames: 'value receivedTransaction sendTransaction'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!testRun: #PortfolioTest #test01BalanceOfPortfolioWithoutAccountsIsZero stamp: 'PGTA 11/16/2020 16:23:17'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithOneAccountIsAccountBalance stamp: 'PGTA 11/16/2020 16:23:17'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioIsCalculatedRecursivelyOnPortfolios stamp: 'PGTA 11/16/2020 16:23:17'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithoutAccountsHasNoRegisteredTransaction stamp: 'PGTA 11/16/2020 16:23:17'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredItsAccountsTransactions stamp: 'PGTA 11/16/2020 16:23:17'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioLooksForRegisteredTransactionsRecursively stamp: 'PGTA 11/16/2020 16:23:17'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioHasNoTransactionWhenHasNoAccounts stamp: 'PGTA 11/16/2020 16:23:17'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTransactionsIncludesAllItsAccountsTransactions stamp: 'PGTA 11/16/2020 16:23:17'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioTransactionsAreCalculatedRecursively stamp: 'PGTA 11/16/2020 16:23:17'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCanNotIncludeTheSameAccountMoreThanOnce stamp: 'PGTA 11/16/2020 16:23:17'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCanNotIncludeAccountOfItsPortfolios stamp: 'PGTA 11/16/2020 16:23:17'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioCanNotIncludeItself stamp: 'PGTA 11/16/2020 16:23:17'!
PASSED!

!testRun: #PortfolioTest #test13ComposedPortfolioCanNotHaveParentPortfolioAccount stamp: 'PGTA 11/16/2020 16:23:17'!
PASSED!

!testRun: #PortfolioTest #test14ComposedPortfolioCanNotHaveAccountOfAnyRootParentRecursively stamp: 'PGTA 11/16/2020 16:23:17'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotIncludeAnyOfTheComposedAccountOfPortfolioToAdd stamp: 'PGTA 11/16/2020 16:23:17'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioCanHaveAName stamp: 'PGTA 11/16/2020 16:23:17'!
PASSED!

!testRun: #PortfolioTest #test17PortfolioWithAnAccountCanHaveAName stamp: 'PGTA 11/16/2020 16:23:17'!
PASSED!

!testRun: #PortfolioTest #test18PortfolioWithTwoAccountsCanHaveAName stamp: 'PGTA 11/16/2020 16:23:17'!
PASSED!

!testRun: #PortfolioTest #test19PortfolioWithoutANameReturnsDefault stamp: 'PGTA 11/16/2020 16:23:17'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'PGTA 11/16/2020 16:23:17'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'PGTA 11/16/2020 16:23:17'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'PGTA 11/16/2020 16:23:17'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'PGTA 11/16/2020 16:23:17'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'PGTA 11/16/2020 16:23:17'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'PGTA 11/16/2020 16:23:17'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'PGTA 11/16/2020 16:23:18'!
PASSED!

!testRun: #ReceptiveAccountTest #test08TransferSenderAccountAcknowledgesTransferTransactions stamp: 'PGTA 11/16/2020 16:23:18'!
PASSED!

!testRun: #ReceptiveAccountTest #test09TransferReceiverAccountAcknowledgesTransferTransactions stamp: 'PGTA 11/16/2020 16:23:18'!
PASSED!

!testRun: #ReceptiveAccountTest #test10TransferDepositAndWithdrawCanNavigateToTransfer stamp: 'PGTA 11/16/2020 16:23:18'!
PASSED!

!testRun: #ReceptiveAccountTest #test11TransferDepositAndWithdrawKnowTheTransferAmount stamp: 'PGTA 11/16/2020 16:23:18'!
PASSED!

!testRun: #ReceptiveAccountTest #test12ReceptiveAccountCanHaveAName stamp: 'PGTA 11/16/2020 16:23:18'!
PASSED!

!testRun: #ReceptiveAccountTest #test13ReceptiveAccountWithoutANameReturnsDefault stamp: 'PGTA 11/16/2020 16:23:18'!
PASSED!

!testRun: #ReportTest #test01AccountSummaryFromANewAccountReturnsBalance0 stamp: 'PGTA 11/16/2020 16:23:18'!
PASSED!

!testRun: #ReportTest #test02AccountSummaryReturnsAReportFromAnAccountWithADeposit stamp: 'PGTA 11/16/2020 16:23:18'!
PASSED!

!testRun: #ReportTest #test03AccountSummaryReturnsAReportFromAnAccountWithAWithdraw stamp: 'PGTA 11/16/2020 16:23:18'!
PASSED!

!testRun: #ReportTest #test04AccountSummaryReturnsAReportFromAnAccountWithATransferWithdraw stamp: 'PGTA 11/16/2020 16:23:18'!
PASSED!

!testRun: #ReportTest #test05AccountSummaryReturnsAReportFromAnAccountWithATransferDeposit stamp: 'PGTA 11/16/2020 16:23:18'!
PASSED!

!testRun: #ReportTest #test06TransferNetFromANewAccountReturnsZero stamp: 'PGTA 11/16/2020 16:23:18'!
PASSED!

!testRun: #ReportTest #test07TransferNetReturnsAReportFromAnAccountWithADeposit stamp: 'PGTA 11/16/2020 16:23:18'!
PASSED!

!testRun: #ReportTest #test08TransferNetReturnsAReportFromAnAccountWithAWithdraw stamp: 'PGTA 11/16/2020 16:23:18'!
PASSED!

!testRun: #ReportTest #test09TransferNetReturnsAReportFromAnAccountWithATransferWithdraw stamp: 'PGTA 11/16/2020 16:23:18'!
PASSED!

!testRun: #ReportTest #test10TransferNetReturnsAReportFromAnAccountWithATransferDeposit stamp: 'PGTA 11/16/2020 16:23:18'!
PASSED!

!testRun: #ReportTest #test11TransferNetWorksWithAPortfolio stamp: 'PGTA 11/16/2020 16:23:18'!
PASSED!

!testRun: #ReportTest #test12PortfolioStructureWithoutAccountsReturnsPortfolioName stamp: 'PGTA 11/16/2020 16:23:18'!
PASSED!

!testRun: #ReportTest #test13PortfolioStructureWithOneAccount stamp: 'PGTA 11/16/2020 16:23:18'!
PASSED!

!testRun: #ReportTest #test14PortfolioStructureWithOnePortfolioIndentsCorrectly stamp: 'PGTA 11/16/2020 16:23:18'!
PASSED!

!testRun: #ReportTest #test15PortfolioStructureCatedra stamp: 'PGTA 11/16/2020 16:23:18'!
PASSED!

!testRun: #ReportTest #test16SpecialSummaryReportForOnePortfolio stamp: 'PGTA 11/16/2020 16:23:18'!
PASSED!

!testRun: #ReportTest #test17SpecialSummaryReportForOnePortfolioWithOneAccount stamp: 'PGTA 11/16/2020 16:23:18'!
PASSED!

----SNAPSHOT----(16 November 2020 16:23:21) CuisUniversity-4384.image priorSource: 17302077!

!testRun: #PortfolioTest #test01BalanceOfPortfolioWithoutAccountsIsZero stamp: 'PGTA 11/16/2020 16:32:34'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithOneAccountIsAccountBalance stamp: 'PGTA 11/16/2020 16:32:35'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioIsCalculatedRecursivelyOnPortfolios stamp: 'PGTA 11/16/2020 16:32:35'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithoutAccountsHasNoRegisteredTransaction stamp: 'PGTA 11/16/2020 16:32:35'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredItsAccountsTransactions stamp: 'PGTA 11/16/2020 16:32:35'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioLooksForRegisteredTransactionsRecursively stamp: 'PGTA 11/16/2020 16:32:35'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioHasNoTransactionWhenHasNoAccounts stamp: 'PGTA 11/16/2020 16:32:35'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTransactionsIncludesAllItsAccountsTransactions stamp: 'PGTA 11/16/2020 16:32:35'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioTransactionsAreCalculatedRecursively stamp: 'PGTA 11/16/2020 16:32:35'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCanNotIncludeTheSameAccountMoreThanOnce stamp: 'PGTA 11/16/2020 16:32:35'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCanNotIncludeAccountOfItsPortfolios stamp: 'PGTA 11/16/2020 16:32:35'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioCanNotIncludeItself stamp: 'PGTA 11/16/2020 16:32:35'!
PASSED!

!testRun: #PortfolioTest #test13ComposedPortfolioCanNotHaveParentPortfolioAccount stamp: 'PGTA 11/16/2020 16:32:35'!
PASSED!

!testRun: #PortfolioTest #test14ComposedPortfolioCanNotHaveAccountOfAnyRootParentRecursively stamp: 'PGTA 11/16/2020 16:32:35'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotIncludeAnyOfTheComposedAccountOfPortfolioToAdd stamp: 'PGTA 11/16/2020 16:32:35'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioCanHaveAName stamp: 'PGTA 11/16/2020 16:32:35'!
PASSED!

!testRun: #PortfolioTest #test17PortfolioWithAnAccountCanHaveAName stamp: 'PGTA 11/16/2020 16:32:35'!
PASSED!

!testRun: #PortfolioTest #test18PortfolioWithTwoAccountsCanHaveAName stamp: 'PGTA 11/16/2020 16:32:35'!
PASSED!

!testRun: #PortfolioTest #test19PortfolioWithoutANameReturnsDefault stamp: 'PGTA 11/16/2020 16:32:35'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'PGTA 11/16/2020 16:32:35'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'PGTA 11/16/2020 16:32:35'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'PGTA 11/16/2020 16:32:35'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'PGTA 11/16/2020 16:32:35'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'PGTA 11/16/2020 16:32:35'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'PGTA 11/16/2020 16:32:35'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'PGTA 11/16/2020 16:32:35'!
PASSED!

!testRun: #ReceptiveAccountTest #test08TransferSenderAccountAcknowledgesTransferTransactions stamp: 'PGTA 11/16/2020 16:32:35'!
PASSED!

!testRun: #ReceptiveAccountTest #test09TransferReceiverAccountAcknowledgesTransferTransactions stamp: 'PGTA 11/16/2020 16:32:35'!
PASSED!

!testRun: #ReceptiveAccountTest #test10TransferDepositAndWithdrawCanNavigateToTransfer stamp: 'PGTA 11/16/2020 16:32:35'!
PASSED!

!testRun: #ReceptiveAccountTest #test11TransferDepositAndWithdrawKnowTheTransferAmount stamp: 'PGTA 11/16/2020 16:32:35'!
PASSED!

!testRun: #ReceptiveAccountTest #test12ReceptiveAccountCanHaveAName stamp: 'PGTA 11/16/2020 16:32:35'!
PASSED!

!testRun: #ReceptiveAccountTest #test13ReceptiveAccountWithoutANameReturnsDefault stamp: 'PGTA 11/16/2020 16:32:35'!
PASSED!

!testRun: #ReportTest #test01AccountSummaryFromANewAccountReturnsBalance0 stamp: 'PGTA 11/16/2020 16:32:35'!
PASSED!

!testRun: #ReportTest #test02AccountSummaryReturnsAReportFromAnAccountWithADeposit stamp: 'PGTA 11/16/2020 16:32:35'!
PASSED!

!testRun: #ReportTest #test03AccountSummaryReturnsAReportFromAnAccountWithAWithdraw stamp: 'PGTA 11/16/2020 16:32:35'!
PASSED!

!testRun: #ReportTest #test04AccountSummaryReturnsAReportFromAnAccountWithATransferWithdraw stamp: 'PGTA 11/16/2020 16:32:35'!
PASSED!

!testRun: #ReportTest #test05AccountSummaryReturnsAReportFromAnAccountWithATransferDeposit stamp: 'PGTA 11/16/2020 16:32:35'!
PASSED!

!testRun: #ReportTest #test06TransferNetFromANewAccountReturnsZero stamp: 'PGTA 11/16/2020 16:32:35'!
PASSED!

!testRun: #ReportTest #test07TransferNetReturnsAReportFromAnAccountWithADeposit stamp: 'PGTA 11/16/2020 16:32:35'!
PASSED!

!testRun: #ReportTest #test08TransferNetReturnsAReportFromAnAccountWithAWithdraw stamp: 'PGTA 11/16/2020 16:32:35'!
PASSED!

!testRun: #ReportTest #test09TransferNetReturnsAReportFromAnAccountWithATransferWithdraw stamp: 'PGTA 11/16/2020 16:32:35'!
PASSED!

!testRun: #ReportTest #test10TransferNetReturnsAReportFromAnAccountWithATransferDeposit stamp: 'PGTA 11/16/2020 16:32:35'!
PASSED!

!testRun: #ReportTest #test11TransferNetWorksWithAPortfolio stamp: 'PGTA 11/16/2020 16:32:35'!
PASSED!

!testRun: #ReportTest #test12PortfolioStructureWithoutAccountsReturnsPortfolioName stamp: 'PGTA 11/16/2020 16:32:35'!
PASSED!

!testRun: #ReportTest #test13PortfolioStructureWithOneAccount stamp: 'PGTA 11/16/2020 16:32:35'!
PASSED!

!testRun: #ReportTest #test14PortfolioStructureWithOnePortfolioIndentsCorrectly stamp: 'PGTA 11/16/2020 16:32:35'!
PASSED!

!testRun: #ReportTest #test15PortfolioStructureCatedra stamp: 'PGTA 11/16/2020 16:32:35'!
PASSED!

!testRun: #ReportTest #test16SpecialSummaryReportForOnePortfolio stamp: 'PGTA 11/16/2020 16:32:35'!
PASSED!

!testRun: #ReportTest #test17SpecialSummaryReportForOnePortfolioWithOneAccount stamp: 'PGTA 11/16/2020 16:32:35'!
PASSED!

!testRun: #PortfolioTest #test01BalanceOfPortfolioWithoutAccountsIsZero stamp: 'PGTA 11/16/2020 16:32:40'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithOneAccountIsAccountBalance stamp: 'PGTA 11/16/2020 16:32:40'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioIsCalculatedRecursivelyOnPortfolios stamp: 'PGTA 11/16/2020 16:32:40'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithoutAccountsHasNoRegisteredTransaction stamp: 'PGTA 11/16/2020 16:32:40'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredItsAccountsTransactions stamp: 'PGTA 11/16/2020 16:32:40'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioLooksForRegisteredTransactionsRecursively stamp: 'PGTA 11/16/2020 16:32:40'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioHasNoTransactionWhenHasNoAccounts stamp: 'PGTA 11/16/2020 16:32:40'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTransactionsIncludesAllItsAccountsTransactions stamp: 'PGTA 11/16/2020 16:32:40'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioTransactionsAreCalculatedRecursively stamp: 'PGTA 11/16/2020 16:32:40'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCanNotIncludeTheSameAccountMoreThanOnce stamp: 'PGTA 11/16/2020 16:32:40'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCanNotIncludeAccountOfItsPortfolios stamp: 'PGTA 11/16/2020 16:32:40'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioCanNotIncludeItself stamp: 'PGTA 11/16/2020 16:32:40'!
PASSED!

!testRun: #PortfolioTest #test13ComposedPortfolioCanNotHaveParentPortfolioAccount stamp: 'PGTA 11/16/2020 16:32:40'!
PASSED!

!testRun: #PortfolioTest #test14ComposedPortfolioCanNotHaveAccountOfAnyRootParentRecursively stamp: 'PGTA 11/16/2020 16:32:40'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotIncludeAnyOfTheComposedAccountOfPortfolioToAdd stamp: 'PGTA 11/16/2020 16:32:40'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioCanHaveAName stamp: 'PGTA 11/16/2020 16:32:40'!
PASSED!

!testRun: #PortfolioTest #test17PortfolioWithAnAccountCanHaveAName stamp: 'PGTA 11/16/2020 16:32:40'!
PASSED!

!testRun: #PortfolioTest #test18PortfolioWithTwoAccountsCanHaveAName stamp: 'PGTA 11/16/2020 16:32:40'!
PASSED!

!testRun: #PortfolioTest #test19PortfolioWithoutANameReturnsDefault stamp: 'PGTA 11/16/2020 16:32:40'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'PGTA 11/16/2020 16:32:40'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'PGTA 11/16/2020 16:32:40'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'PGTA 11/16/2020 16:32:40'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'PGTA 11/16/2020 16:32:40'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'PGTA 11/16/2020 16:32:40'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'PGTA 11/16/2020 16:32:40'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'PGTA 11/16/2020 16:32:40'!
PASSED!

!testRun: #ReceptiveAccountTest #test08TransferSenderAccountAcknowledgesTransferTransactions stamp: 'PGTA 11/16/2020 16:32:40'!
PASSED!

!testRun: #ReceptiveAccountTest #test09TransferReceiverAccountAcknowledgesTransferTransactions stamp: 'PGTA 11/16/2020 16:32:40'!
PASSED!

!testRun: #ReceptiveAccountTest #test10TransferDepositAndWithdrawCanNavigateToTransfer stamp: 'PGTA 11/16/2020 16:32:40'!
PASSED!

!testRun: #ReceptiveAccountTest #test11TransferDepositAndWithdrawKnowTheTransferAmount stamp: 'PGTA 11/16/2020 16:32:40'!
PASSED!

!testRun: #ReceptiveAccountTest #test12ReceptiveAccountCanHaveAName stamp: 'PGTA 11/16/2020 16:32:40'!
PASSED!

!testRun: #ReceptiveAccountTest #test13ReceptiveAccountWithoutANameReturnsDefault stamp: 'PGTA 11/16/2020 16:32:40'!
PASSED!

!testRun: #ReportTest #test01AccountSummaryFromANewAccountReturnsBalance0 stamp: 'PGTA 11/16/2020 16:32:40'!
PASSED!

!testRun: #ReportTest #test02AccountSummaryReturnsAReportFromAnAccountWithADeposit stamp: 'PGTA 11/16/2020 16:32:40'!
PASSED!

!testRun: #ReportTest #test03AccountSummaryReturnsAReportFromAnAccountWithAWithdraw stamp: 'PGTA 11/16/2020 16:32:40'!
PASSED!

!testRun: #ReportTest #test04AccountSummaryReturnsAReportFromAnAccountWithATransferWithdraw stamp: 'PGTA 11/16/2020 16:32:40'!
PASSED!

!testRun: #ReportTest #test05AccountSummaryReturnsAReportFromAnAccountWithATransferDeposit stamp: 'PGTA 11/16/2020 16:32:40'!
PASSED!

!testRun: #ReportTest #test06TransferNetFromANewAccountReturnsZero stamp: 'PGTA 11/16/2020 16:32:40'!
PASSED!

!testRun: #ReportTest #test07TransferNetReturnsAReportFromAnAccountWithADeposit stamp: 'PGTA 11/16/2020 16:32:40'!
PASSED!

!testRun: #ReportTest #test08TransferNetReturnsAReportFromAnAccountWithAWithdraw stamp: 'PGTA 11/16/2020 16:32:40'!
PASSED!

!testRun: #ReportTest #test09TransferNetReturnsAReportFromAnAccountWithATransferWithdraw stamp: 'PGTA 11/16/2020 16:32:40'!
PASSED!

!testRun: #ReportTest #test10TransferNetReturnsAReportFromAnAccountWithATransferDeposit stamp: 'PGTA 11/16/2020 16:32:40'!
PASSED!

!testRun: #ReportTest #test11TransferNetWorksWithAPortfolio stamp: 'PGTA 11/16/2020 16:32:40'!
PASSED!

!testRun: #ReportTest #test12PortfolioStructureWithoutAccountsReturnsPortfolioName stamp: 'PGTA 11/16/2020 16:32:40'!
PASSED!

!testRun: #ReportTest #test13PortfolioStructureWithOneAccount stamp: 'PGTA 11/16/2020 16:32:40'!
PASSED!

!testRun: #ReportTest #test14PortfolioStructureWithOnePortfolioIndentsCorrectly stamp: 'PGTA 11/16/2020 16:32:40'!
PASSED!

!testRun: #ReportTest #test15PortfolioStructureCatedra stamp: 'PGTA 11/16/2020 16:32:40'!
PASSED!

!testRun: #ReportTest #test16SpecialSummaryReportForOnePortfolio stamp: 'PGTA 11/16/2020 16:32:40'!
PASSED!

!testRun: #ReportTest #test17SpecialSummaryReportForOnePortfolioWithOneAccount stamp: 'PGTA 11/16/2020 16:32:40'!
PASSED!

----SNAPSHOT----(16 November 2020 16:32:44) CuisUniversity-4384.image priorSource: 17309809!

!testRun: #PortfolioTest #test01BalanceOfPortfolioWithoutAccountsIsZero stamp: 'PGTA 11/16/2020 16:47:33'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithOneAccountIsAccountBalance stamp: 'PGTA 11/16/2020 16:47:33'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioIsCalculatedRecursivelyOnPortfolios stamp: 'PGTA 11/16/2020 16:47:33'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithoutAccountsHasNoRegisteredTransaction stamp: 'PGTA 11/16/2020 16:47:33'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredItsAccountsTransactions stamp: 'PGTA 11/16/2020 16:47:33'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioLooksForRegisteredTransactionsRecursively stamp: 'PGTA 11/16/2020 16:47:33'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioHasNoTransactionWhenHasNoAccounts stamp: 'PGTA 11/16/2020 16:47:33'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTransactionsIncludesAllItsAccountsTransactions stamp: 'PGTA 11/16/2020 16:47:33'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioTransactionsAreCalculatedRecursively stamp: 'PGTA 11/16/2020 16:47:33'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCanNotIncludeTheSameAccountMoreThanOnce stamp: 'PGTA 11/16/2020 16:47:33'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCanNotIncludeAccountOfItsPortfolios stamp: 'PGTA 11/16/2020 16:47:33'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioCanNotIncludeItself stamp: 'PGTA 11/16/2020 16:47:33'!
PASSED!

!testRun: #PortfolioTest #test13ComposedPortfolioCanNotHaveParentPortfolioAccount stamp: 'PGTA 11/16/2020 16:47:33'!
PASSED!

!testRun: #PortfolioTest #test14ComposedPortfolioCanNotHaveAccountOfAnyRootParentRecursively stamp: 'PGTA 11/16/2020 16:47:33'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotIncludeAnyOfTheComposedAccountOfPortfolioToAdd stamp: 'PGTA 11/16/2020 16:47:33'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioCanHaveAName stamp: 'PGTA 11/16/2020 16:47:33'!
PASSED!

!testRun: #PortfolioTest #test17PortfolioWithAnAccountCanHaveAName stamp: 'PGTA 11/16/2020 16:47:33'!
PASSED!

!testRun: #PortfolioTest #test18PortfolioWithTwoAccountsCanHaveAName stamp: 'PGTA 11/16/2020 16:47:33'!
PASSED!

!testRun: #PortfolioTest #test19PortfolioWithoutANameReturnsDefault stamp: 'PGTA 11/16/2020 16:47:33'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'PGTA 11/16/2020 16:47:33'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'PGTA 11/16/2020 16:47:33'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'PGTA 11/16/2020 16:47:33'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'PGTA 11/16/2020 16:47:33'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'PGTA 11/16/2020 16:47:33'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'PGTA 11/16/2020 16:47:33'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'PGTA 11/16/2020 16:47:33'!
PASSED!

!testRun: #ReceptiveAccountTest #test08TransferSenderAccountAcknowledgesTransferTransactions stamp: 'PGTA 11/16/2020 16:47:33'!
PASSED!

!testRun: #ReceptiveAccountTest #test09TransferReceiverAccountAcknowledgesTransferTransactions stamp: 'PGTA 11/16/2020 16:47:33'!
PASSED!

!testRun: #ReceptiveAccountTest #test10TransferDepositAndWithdrawCanNavigateToTransfer stamp: 'PGTA 11/16/2020 16:47:33'!
PASSED!

!testRun: #ReceptiveAccountTest #test11TransferDepositAndWithdrawKnowTheTransferAmount stamp: 'PGTA 11/16/2020 16:47:33'!
PASSED!

!testRun: #ReceptiveAccountTest #test12ReceptiveAccountCanHaveAName stamp: 'PGTA 11/16/2020 16:47:33'!
PASSED!

!testRun: #ReceptiveAccountTest #test13ReceptiveAccountWithoutANameReturnsDefault stamp: 'PGTA 11/16/2020 16:47:33'!
PASSED!

!testRun: #ReportTest #test01AccountSummaryFromANewAccountReturnsBalance0 stamp: 'PGTA 11/16/2020 16:47:33'!
PASSED!

!testRun: #ReportTest #test02AccountSummaryReturnsAReportFromAnAccountWithADeposit stamp: 'PGTA 11/16/2020 16:47:33'!
PASSED!

!testRun: #ReportTest #test03AccountSummaryReturnsAReportFromAnAccountWithAWithdraw stamp: 'PGTA 11/16/2020 16:47:33'!
PASSED!

!testRun: #ReportTest #test04AccountSummaryReturnsAReportFromAnAccountWithATransferWithdraw stamp: 'PGTA 11/16/2020 16:47:33'!
PASSED!

!testRun: #ReportTest #test05AccountSummaryReturnsAReportFromAnAccountWithATransferDeposit stamp: 'PGTA 11/16/2020 16:47:33'!
PASSED!

!testRun: #ReportTest #test06TransferNetFromANewAccountReturnsZero stamp: 'PGTA 11/16/2020 16:47:33'!
PASSED!

!testRun: #ReportTest #test07TransferNetReturnsAReportFromAnAccountWithADeposit stamp: 'PGTA 11/16/2020 16:47:33'!
PASSED!

!testRun: #ReportTest #test08TransferNetReturnsAReportFromAnAccountWithAWithdraw stamp: 'PGTA 11/16/2020 16:47:33'!
PASSED!

!testRun: #ReportTest #test09TransferNetReturnsAReportFromAnAccountWithATransferWithdraw stamp: 'PGTA 11/16/2020 16:47:33'!
PASSED!

!testRun: #ReportTest #test10TransferNetReturnsAReportFromAnAccountWithATransferDeposit stamp: 'PGTA 11/16/2020 16:47:33'!
PASSED!

!testRun: #ReportTest #test11TransferNetWorksWithAPortfolio stamp: 'PGTA 11/16/2020 16:47:33'!
PASSED!

!testRun: #ReportTest #test12PortfolioStructureWithoutAccountsReturnsPortfolioName stamp: 'PGTA 11/16/2020 16:47:33'!
PASSED!

!testRun: #ReportTest #test13PortfolioStructureWithOneAccount stamp: 'PGTA 11/16/2020 16:47:33'!
PASSED!

!testRun: #ReportTest #test14PortfolioStructureWithOnePortfolioIndentsCorrectly stamp: 'PGTA 11/16/2020 16:47:33'!
PASSED!

!testRun: #ReportTest #test15PortfolioStructureCatedra stamp: 'PGTA 11/16/2020 16:47:33'!
PASSED!

!testRun: #ReportTest #test16SpecialSummaryReportForOnePortfolio stamp: 'PGTA 11/16/2020 16:47:33'!
PASSED!

!testRun: #ReportTest #test17SpecialSummaryReportForOnePortfolioWithOneAccount stamp: 'PGTA 11/16/2020 16:47:33'!
PASSED!

----SNAPSHOT----(16 November 2020 16:47:37) CuisUniversity-4384.image priorSource: 17321913!