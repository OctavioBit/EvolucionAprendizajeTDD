

----STARTUP---- (24 October 2020 20:01:35) as /home/fede/Documentos/Facultad/Inge1/Cuises/katas/linux64/CuisUniversity-4384.image!


----SNAPSHOT----(24 October 2020 20:01:40) CuisUniversity-4384.image priorSource: 17155564!

TestCase subclass: #MarsRoverTests
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover - Exercise'!

!classDefinition: #MarsRoverTests category: 'MarsRover - Exercise' stamp: 'fr 10/24/2020 20:02:07'!
TestCase subclass: #MarsRoverTests
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover - Exercise'!

!classDefinition: #MarsRover category: 'MarsRover - Exercise' stamp: 'fr 10/24/2020 20:03:21'!
Object subclass: #MarsRover
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover - Exercise'!
!MarsRoverTests methodsFor: 'no messages' stamp: 'fr 10/24/2020 20:03:17'!
test01

	| marsRover |
	
	marsRover _ MarsRover at: 1@1 facing: #S.
	
	marsRover move: ''.
	
	self assert: (marsRover isAt: 1@1 facing: #S)! !

!testRun: #MarsRoverTests #test01 stamp: 'fr 10/24/2020 20:03:24'!
ERROR!
!MarsRover class methodsFor: 'instance creation' stamp: 'fr 10/24/2020 20:03:31'!
at: aPoint facing: aSymbol 
	"DO NOT FORGET TO RENAME COLLABORATORS AND REMOVE THIS COMMENT!!!!"
	self shouldBeImplemented.
	^self new initializeAt: aPoint facing: aSymbol ! !
!MarsRover class methodsFor: 'instance creation' stamp: 'fr 10/24/2020 20:03:48' prior: 50867801!
at: aPosition facing: aCardinalPoint 

	^self new initializeAt: aPosition facing: aCardinalPoint ! !

!testRun: #MarsRoverTests #test01 stamp: 'fr 10/24/2020 20:03:51'!
ERROR!

!classDefinition: #MarsRover category: 'MarsRover - Exercise' stamp: 'fr 10/24/2020 20:04:02'!
Object subclass: #MarsRover
	instanceVariableNames: 'position'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover - Exercise'!

!classDefinition: #MarsRover category: 'MarsRover - Exercise' stamp: 'fr 10/24/2020 20:04:02'!
Object subclass: #MarsRover
	instanceVariableNames: 'position cardinalPoint'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover - Exercise'!
!MarsRover methodsFor: 'initialization' stamp: 'fr 10/24/2020 20:04:02'!
initializeAt: aPosition facing: aCardinalPoint 
	self shouldBeImplemented.
	position := aPosition.
	cardinalPoint := aCardinalPoint.! !
!MarsRover methodsFor: 'initialization' stamp: 'fr 10/24/2020 20:04:15' prior: 50867834!
initializeAt: aPosition facing: aCardinalPoint 

	| orientation |
	position _ aPosition.
	orientation _ aCardinalPoint! !

!classDefinition: #MarsRover category: 'MarsRover - Exercise' stamp: 'fr 10/24/2020 20:04:37'!
Object subclass: #MarsRover
	instanceVariableNames: 'position cardinalPoint orientationa'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover - Exercise'!
!MarsRover methodsFor: 'initialization' stamp: 'fr 10/24/2020 20:04:35' prior: 50867842!
initializeAt: aPosition facing: aCardinalPoint 
	
	position _ aPosition.
	orientationa _ aCardinalPoint! !

!classDefinition: #MarsRover category: 'MarsRover - Exercise' stamp: 'fr 10/24/2020 20:04:41'!
Object subclass: #MarsRover
	instanceVariableNames: 'position cardinalPoint orientationa orientation'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover - Exercise'!
!MarsRover methodsFor: 'initialization' stamp: 'fr 10/24/2020 20:04:39' prior: 50867857!
initializeAt: aPosition facing: aCardinalPoint 
	
	position _ aPosition.
	orientation _ aCardinalPoint! !

!testRun: #MarsRoverTests #test01 stamp: 'fr 10/24/2020 20:04:43'!
ERROR!
!MarsRover methodsFor: '*Cuis-University-Model' stamp: 'fr 10/24/2020 20:04:49'!
move: aString 
	self shouldBeImplemented.! !

!methodRemoval: MarsRover #move: stamp: 'fr 10/24/2020 20:04:59'!
move: aString 
	self shouldBeImplemented.!

!testRun: #MarsRoverTests #test01 stamp: 'fr 10/24/2020 20:05:04'!
ERROR!
!MarsRover methodsFor: 'movement' stamp: 'fr 10/24/2020 20:05:12'!
move: aString 
	self shouldBeImplemented.! !
!MarsRover methodsFor: 'movement' stamp: 'fr 10/24/2020 20:05:22' prior: 50867891!
move: aCommandList

	
	! !

!testRun: #MarsRoverTests #test01 stamp: 'fr 10/24/2020 20:05:24'!
ERROR!
!MarsRover methodsFor: 'state' stamp: 'fr 10/24/2020 20:05:37'!
isAt: aPoint facing: aSymbol 
	self shouldBeImplemented.! !
!MarsRover methodsFor: 'state' stamp: 'fr 10/24/2020 20:06:07' prior: 50867901!
isAt: aPosition facing: aCardinalPoint

	^aPosition = position and: [aCardinalPoint = orientation]
	
	! !

!testRun: #MarsRoverTests #test01 stamp: 'fr 10/24/2020 20:06:08'!
PASSED!

!testRun: #MarsRoverTests #test01 stamp: 'fr 10/24/2020 20:06:08'!
PASSED!

Object subclass: #MarsRover
	instanceVariableNames: 'position orientation'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover - Exercise'!

!classDefinition: #MarsRover category: 'MarsRover - Exercise' stamp: 'fr 10/24/2020 20:06:16'!
Object subclass: #MarsRover
	instanceVariableNames: 'position orientation'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover - Exercise'!
!MarsRoverTests methodsFor: 'as yet unclassified' stamp: 'fr 10/24/2020 20:06:22'!
test02

	| marsRover |
	
	marsRover _ MarsRover at: 1@1 facing: #S.
	
	marsRover move: ''.
	
	self assert: (marsRover isAt: 1@1 facing: #S)! !
!MarsRoverTests methodsFor: 'as yet unclassified' stamp: 'fr 10/24/2020 20:06:29' prior: 50867930!
test02

	| marsRover |
	
	marsRover _ MarsRover at: 1@1 facing: #S.
	
	marsRover move: 'f'.
	
	self assert: (marsRover isAt: 1@0 facing: #S)! !

!testRun: #MarsRoverTests #test02 stamp: 'fr 10/24/2020 20:06:36'!
FAILURE!
!MarsRover methodsFor: 'movement' stamp: 'fr 10/24/2020 20:07:36' prior: 50867895!
move: aCommandList

	aCommandList = 'f' ifTrue: [position _ position - (0@1)]

	
	! !

!testRun: #MarsRoverTests #test02 stamp: 'fr 10/24/2020 20:07:37'!
PASSED!

!testRun: #MarsRoverTests #test01 stamp: 'fr 10/24/2020 20:07:37'!
PASSED!

!testRun: #MarsRoverTests #test02 stamp: 'fr 10/24/2020 20:07:37'!
PASSED!
!MarsRoverTests methodsFor: 'as yet unclassified' stamp: 'fr 10/24/2020 20:07:40' prior: 50867938!
test02

	| marsRover |
	
	marsRover _ MarsRover at: 1@1 facing: #S.
	
	marsRover move: 'b'.
	
	self assert: (marsRover isAt: 1@0 facing: #S)! !
!MarsRoverTests methodsFor: 'as yet unclassified' stamp: 'fr 10/24/2020 20:07:43' prior: 50867961!
test02

	| marsRover |
	
	marsRover _ MarsRover at: 1@1 facing: #S.
	
	marsRover move: 'b'.
	
	self assert: (marsRover isAt: 1@2 facing: #S)! !

!testRun: #MarsRoverTests #test02 stamp: 'fr 10/24/2020 20:07:44'!
FAILURE!
!MarsRover methodsFor: 'movement' stamp: 'fr 10/24/2020 20:07:52' prior: 50867948!
move: aCommandList

	aCommandList = 'b' ifTrue: [position _ position - (0@1)]

	
	! !
!MarsRover methodsFor: 'movement' stamp: 'fr 10/24/2020 20:07:55' prior: 50867979!
move: aCommandList

	aCommandList = 'b' ifTrue: [position _ position + (0@1)]

	
	! !
!MarsRover methodsFor: 'movement' stamp: 'fr 10/24/2020 20:08:06' prior: 50867985!
move: aCommandList

	aCommandList = 'f' ifTrue: [position _ position - (0@1)].
	aCommandList = 'b' ifTrue: [position _ position + (0@1)]


	
	! !

!testRun: #MarsRoverTests #test02 stamp: 'fr 10/24/2020 20:08:07'!
PASSED!

!testRun: #MarsRoverTests #test01 stamp: 'fr 10/24/2020 20:08:07'!
PASSED!

!testRun: #MarsRoverTests #test02 stamp: 'fr 10/24/2020 20:08:07'!
PASSED!
!MarsRoverTests methodsFor: 'as yet unclassified' stamp: 'fr 10/24/2020 20:08:15' prior: 50867969!
test02

	| marsRover |
	
	marsRover _ MarsRover at: 1@1 facing: #S.
	
	marsRover move: 'l'.
	
	self assert: (marsRover isAt: 1@2 facing: #S)! !

!testRun: #MarsRoverTests #test02 stamp: 'fr 10/24/2020 20:08:17'!
FAILURE!
!MarsRover methodsFor: 'movement' stamp: 'fr 10/24/2020 20:08:27' prior: 50867991!
move: aCommandList

	aCommandList = 'f' ifTrue: [position _ position - (0@1)].
	aCommandList = 'l' ifTrue: [position _ position + (0@1)]


	
	! !
!MarsRover methodsFor: 'movement' stamp: 'fr 10/24/2020 20:08:52' prior: 50868016!
move: aCommandList

	aCommandList = 'f' ifTrue: [position _ position - (0@1)].
	aCommandList = 'l' ifTrue: [orientation _ #W]


	
	! !
!MarsRover methodsFor: 'movement' stamp: 'fr 10/24/2020 20:09:04' prior: 50868024!
move: aCommandList

	aCommandList = 'f' ifTrue: [position _ position - (0@1)].
	aCommandList = 'b' ifTrue: [position _ position + (0@1)].
	aCommandList = 'l' ifTrue: [orientation _ #W]



	
	! !

!testRun: #MarsRoverTests #test02 stamp: 'fr 10/24/2020 20:09:05'!
FAILURE!
!MarsRoverTests methodsFor: 'as yet unclassified' stamp: 'fr 10/24/2020 20:09:13' prior: 50868006!
test02

	| marsRover |
	
	marsRover _ MarsRover at: 1@1 facing: #S.
	
	marsRover move: 'l'.
	
	self assert: (marsRover isAt: 1@1 facing: #W)! !

!testRun: #MarsRoverTests #test02 stamp: 'fr 10/24/2020 20:09:14'!
PASSED!

!testRun: #MarsRoverTests #test01 stamp: 'fr 10/24/2020 20:09:14'!
PASSED!

!testRun: #MarsRoverTests #test02 stamp: 'fr 10/24/2020 20:09:14'!
PASSED!
!MarsRoverTests methodsFor: 'as yet unclassified' stamp: 'fr 10/24/2020 20:09:18'!
test03

	| marsRover |
	
	marsRover _ MarsRover at: 1@1 facing: #S.
	
	marsRover move: 'l'.
	
	self assert: (marsRover isAt: 1@1 facing: #W)! !
!MarsRoverTests methodsFor: 'as yet unclassified' stamp: 'fr 10/24/2020 20:09:24' prior: 50868043!
test02

	| marsRover |
	
	marsRover _ MarsRover at: 1@1 facing: #S.
	
	marsRover move: 'f'.
	
	self assert: (marsRover isAt: 1@0 facing: #S)! !

!testRun: #MarsRoverTests #test02 stamp: 'fr 10/24/2020 20:09:24'!
PASSED!

!testRun: #MarsRoverTests #test01 stamp: 'fr 10/24/2020 20:09:24'!
PASSED!

!testRun: #MarsRoverTests #test02 stamp: 'fr 10/24/2020 20:09:24'!
PASSED!

!testRun: #MarsRoverTests #test03 stamp: 'fr 10/24/2020 20:09:24'!
PASSED!
!MarsRoverTests methodsFor: 'as yet unclassified' stamp: 'fr 10/24/2020 20:09:33' prior: 50868066!
test02

	| marsRover |
	
	marsRover _ MarsRover at: 1@1 facing: #S.
	
	marsRover move: 'b'.
	
	self assert: (marsRover isAt: 1@0 facing: #S)! !

!testRun: #MarsRoverTests #test02 stamp: 'fr 10/24/2020 20:09:34'!
FAILURE!
!MarsRoverTests methodsFor: 'as yet unclassified' stamp: 'fr 10/24/2020 20:09:42' prior: 50868084!
test02

	| marsRover |
	
	marsRover _ MarsRover at: 1@1 facing: #S.
	
	marsRover move: 'b'.
	
	self assert: (marsRover isAt: 1@2 facing: #S)! !

!testRun: #MarsRoverTests #test02 stamp: 'fr 10/24/2020 20:09:42'!
PASSED!

!testRun: #MarsRoverTests #test01 stamp: 'fr 10/24/2020 20:09:42'!
PASSED!

!testRun: #MarsRoverTests #test02 stamp: 'fr 10/24/2020 20:09:42'!
PASSED!

!testRun: #MarsRoverTests #test03 stamp: 'fr 10/24/2020 20:09:42'!
PASSED!
!MarsRoverTests methodsFor: 'as yet unclassified' stamp: 'fr 10/24/2020 20:09:45'!
test04

	| marsRover |
	
	marsRover _ MarsRover at: 1@1 facing: #S.
	
	marsRover move: 'b'.
	
	self assert: (marsRover isAt: 1@2 facing: #S)! !
!MarsRoverTests methodsFor: 'as yet unclassified' stamp: 'fr 10/24/2020 20:09:52' prior: 50868111!
test04

	| marsRover |
	
	marsRover _ MarsRover at: 1@1 facing: #S.
	
	marsRover move: 'r'.
	
	self assert: (marsRover isAt: 1@1 facing: #E)! !

!testRun: #MarsRoverTests #test04 stamp: 'fr 10/24/2020 20:09:53'!
FAILURE!
!MarsRover methodsFor: 'movement' stamp: 'fr 10/24/2020 20:10:06' prior: 50868031!
move: aCommandList

	aCommandList = 'f' ifTrue: [position _ position - (0@1)].
	aCommandList = 'b' ifTrue: [position _ position + (0@1)].
	aCommandList = 'l' ifTrue: [orientation _ #W].
	aCommandList = 'r' ifTrue: [orientation _ #E]



	
	! !

!testRun: #MarsRoverTests #test04 stamp: 'fr 10/24/2020 20:10:08'!
PASSED!

!testRun: #MarsRoverTests #test01 stamp: 'fr 10/24/2020 20:10:08'!
PASSED!

!testRun: #MarsRoverTests #test02 stamp: 'fr 10/24/2020 20:10:08'!
PASSED!

!testRun: #MarsRoverTests #test03 stamp: 'fr 10/24/2020 20:10:08'!
PASSED!

!testRun: #MarsRoverTests #test04 stamp: 'fr 10/24/2020 20:10:08'!
PASSED!
!MarsRoverTests methodsFor: 'as yet unclassified' stamp: 'fr 10/24/2020 20:10:30'!
test05

	| marsRover |
	
	marsRover _ MarsRover at: 1@1 facing: #N.
	
	marsRover move: 'f'.
	
	self assert: (marsRover isAt: 1@2 facing: #N)! !

!testRun: #MarsRoverTests #test05 stamp: 'fr 10/24/2020 20:10:31'!
FAILURE!
!MarsRover methodsFor: 'movement' stamp: 'fr 10/24/2020 20:11:01' prior: 50868129!
move: aCommandList
	
	orientation = #S ifTrue: [
		aCommandList = 'f' ifTrue: [position _ position - (0@1)].
		aCommandList = 'b' ifTrue: [position _ position + (0@1)].
		aCommandList = 'l' ifTrue: [orientation _ #W].
		aCommandList = 'r' ifTrue: [orientation _ #E]
	].

	
	! !
!MarsRover methodsFor: 'movement' stamp: 'fr 10/24/2020 20:11:11' prior: 50868162!
move: aCommandList
	
	orientation = #S ifTrue: [
		aCommandList = 'f' ifTrue: [position _ position - (0@1)].
		aCommandList = 'b' ifTrue: [position _ position + (0@1)].
		aCommandList = 'l' ifTrue: [orientation _ #W].
		aCommandList = 'r' ifTrue: [orientation _ #E]
	].
	orientation = #N ifTrue: [
		aCommandList = 'f' ifTrue: [position _ position - (0@1)].
		aCommandList = 'b' ifTrue: [position _ position + (0@1)].
		aCommandList = 'l' ifTrue: [orientation _ #W].
		aCommandList = 'r' ifTrue: [orientation _ #E]
	].

	
	! !
!MarsRover methodsFor: 'movement' stamp: 'fr 10/24/2020 20:11:18' prior: 50868174!
move: aCommandList
	
	orientation = #S ifTrue: [
		aCommandList = 'f' ifTrue: [position _ position - (0@1)].
		aCommandList = 'b' ifTrue: [position _ position + (0@1)].
		aCommandList = 'l' ifTrue: [orientation _ #W].
		aCommandList = 'r' ifTrue: [orientation _ #E]
	].
	orientation = #N ifTrue: [
		aCommandList = 'f' ifTrue: [position _ position + (0@1)].
	].

	
	! !

!testRun: #MarsRoverTests #test05 stamp: 'fr 10/24/2020 20:11:19'!
PASSED!

!testRun: #MarsRoverTests #test01 stamp: 'fr 10/24/2020 20:11:19'!
PASSED!

!testRun: #MarsRoverTests #test02 stamp: 'fr 10/24/2020 20:11:19'!
PASSED!

!testRun: #MarsRoverTests #test03 stamp: 'fr 10/24/2020 20:11:19'!
PASSED!

!testRun: #MarsRoverTests #test04 stamp: 'fr 10/24/2020 20:11:19'!
PASSED!

!testRun: #MarsRoverTests #test05 stamp: 'fr 10/24/2020 20:11:19'!
PASSED!
!MarsRoverTests methodsFor: 'as yet unclassified' stamp: 'fr 10/24/2020 20:11:25'!
test06

	| marsRover |
	
	marsRover _ MarsRover at: 1@1 facing: #N.
	
	marsRover move: 'f'.
	
	self assert: (marsRover isAt: 1@2 facing: #N)! !
!MarsRoverTests methodsFor: 'as yet unclassified' stamp: 'fr 10/24/2020 20:11:29' prior: 50868223!
test06

	| marsRover |
	
	marsRover _ MarsRover at: 1@1 facing: #N.
	
	marsRover move: 'b'.
	
	self assert: (marsRover isAt: 1@2 facing: #N)! !
!MarsRoverTests methodsFor: 'as yet unclassified' stamp: 'fr 10/24/2020 20:11:31' prior: 50868231!
test06

	| marsRover |
	
	marsRover _ MarsRover at: 1@1 facing: #N.
	
	marsRover move: 'b'.
	
	self assert: (marsRover isAt: 1@0 facing: #N)! !

!testRun: #MarsRoverTests #test06 stamp: 'fr 10/24/2020 20:11:32'!
FAILURE!
!MarsRover methodsFor: 'movement' stamp: 'fr 10/24/2020 20:11:59' prior: 50868194!
move: aCommandList
	
	orientation = #S ifTrue: [
		aCommandList = 'f' ifTrue: [position _ position - (0@1)].
		aCommandList = 'b' ifTrue: [position _ position + (0@1)].
		aCommandList = 'l' ifTrue: [orientation _ #W].
		aCommandList = 'r' ifTrue: [orientation _ #E]
	].
	orientation = #N ifTrue: [
		aCommandList = 'f' ifTrue: [position _ position + (0@1)].
		aCommandList = 'b' ifTrue: [position _ position - (0@1)].
	].

	
	! !

!testRun: #MarsRoverTests #test06 stamp: 'fr 10/24/2020 20:12:00'!
PASSED!

!testRun: #MarsRoverTests #test01 stamp: 'fr 10/24/2020 20:12:00'!
PASSED!

!testRun: #MarsRoverTests #test02 stamp: 'fr 10/24/2020 20:12:00'!
PASSED!

!testRun: #MarsRoverTests #test03 stamp: 'fr 10/24/2020 20:12:00'!
PASSED!

!testRun: #MarsRoverTests #test04 stamp: 'fr 10/24/2020 20:12:00'!
PASSED!

!testRun: #MarsRoverTests #test05 stamp: 'fr 10/24/2020 20:12:00'!
PASSED!

!testRun: #MarsRoverTests #test06 stamp: 'fr 10/24/2020 20:12:00'!
PASSED!
!MarsRoverTests methodsFor: 'as yet unclassified' stamp: 'fr 10/24/2020 20:12:04'!
test08

	| marsRover |
	
	marsRover _ MarsRover at: 1@1 facing: #N.
	
	marsRover move: 'b'.
	
	self assert: (marsRover isAt: 1@0 facing: #N)! !
!MarsRoverTests methodsFor: 'as yet unclassified' stamp: 'fr 10/24/2020 20:12:08' prior: 50868282!
test08

	| marsRover |
	
	marsRover _ MarsRover at: 1@1 facing: #N.
	
	marsRover move: 'l'.
	
	self assert: (marsRover isAt: 1@0 facing: #N)! !
!MarsRoverTests methodsFor: 'as yet unclassified' stamp: 'fr 10/24/2020 20:12:10' prior: 50868290!
test08

	| marsRover |
	
	marsRover _ MarsRover at: 1@1 facing: #N.
	
	marsRover move: 'l'.
	
	self assert: (marsRover isAt: 1@1 facing: #N)! !
!MarsRoverTests methodsFor: 'as yet unclassified' stamp: 'fr 10/24/2020 20:12:15' prior: 50868298!
test08

	| marsRover |
	
	marsRover _ MarsRover at: 1@1 facing: #N.
	
	marsRover move: 'l'.
	
	self assert: (marsRover isAt: 1@1 facing: #W)! !

!testRun: #MarsRoverTests #test08 stamp: 'fr 10/24/2020 20:12:18'!
FAILURE!
!MarsRover methodsFor: 'movement' stamp: 'fr 10/24/2020 20:12:47' prior: 50868249!
move: aCommandList
	
	orientation = #S ifTrue: [
		aCommandList = 'f' ifTrue: [position _ position - (0@1)].
		aCommandList = 'b' ifTrue: [position _ position + (0@1)].
		aCommandList = 'l' ifTrue: [orientation _ #W].
		aCommandList = 'r' ifTrue: [orientation _ #E]
	].
	orientation = #N ifTrue: [
		aCommandList = 'f' ifTrue: [position _ position + (0@1)].
		aCommandList = 'b' ifTrue: [position _ position - (0@1)].
		aCommandList = 'l' ifTrue: [orientation _ #E].

	].

	
	! !
!MarsRoverTests methodsFor: 'as yet unclassified' stamp: 'fr 10/24/2020 20:12:56' prior: 50868306!
test08

	| marsRover |
	
	marsRover _ MarsRover at: 1@1 facing: #N.
	
	marsRover move: 'l'.
	
	self assert: (marsRover isAt: 1@1 facing: #E)! !
!MarsRoverTests methodsFor: 'as yet unclassified' stamp: 'fr 10/24/2020 20:13:00' prior: 50868335!
test08

	| marsRover |
	
	marsRover _ MarsRover at: 1@1 facing: #N.
	
	marsRover move: 'l'.
	
	self assert: (marsRover isAt: 1@1 facing: #W)! !
!MarsRover methodsFor: 'movement' stamp: 'fr 10/24/2020 20:13:19' prior: 50868316!
move: aCommandList
	
	orientation = #S ifTrue: [
		aCommandList = 'f' ifTrue: [position _ position - (0@1)].
		aCommandList = 'b' ifTrue: [position _ position + (0@1)].
		aCommandList = 'l' ifTrue: [orientation _ #E].
		aCommandList = 'r' ifTrue: [orientation _ #W]
	].
	orientation = #N ifTrue: [
		aCommandList = 'f' ifTrue: [position _ position + (0@1)].
		aCommandList = 'b' ifTrue: [position _ position - (0@1)].
		aCommandList = 'l' ifTrue: [orientation _ #E].

	].

	
	! !
!MarsRover methodsFor: 'movement' stamp: 'fr 10/24/2020 20:13:23' prior: 50868351!
move: aCommandList
	
	orientation = #S ifTrue: [
		aCommandList = 'f' ifTrue: [position _ position - (0@1)].
		aCommandList = 'b' ifTrue: [position _ position + (0@1)].
		aCommandList = 'l' ifTrue: [orientation _ #E].
		aCommandList = 'r' ifTrue: [orientation _ #W]
	].
	orientation = #N ifTrue: [
		aCommandList = 'f' ifTrue: [position _ position + (0@1)].
		aCommandList = 'b' ifTrue: [position _ position - (0@1)].
		aCommandList = 'l' ifTrue: [orientation _ #W].

	].

	
	! !

!testRun: #MarsRoverTests #test08 stamp: 'fr 10/24/2020 20:13:31'!
PASSED!

!testRun: #MarsRoverTests #test01 stamp: 'fr 10/24/2020 20:13:31'!
PASSED!

!testRun: #MarsRoverTests #test02 stamp: 'fr 10/24/2020 20:13:31'!
PASSED!

!testRun: #MarsRoverTests #test03 stamp: 'fr 10/24/2020 20:13:31'!
FAILURE!

!testRun: #MarsRoverTests #test04 stamp: 'fr 10/24/2020 20:13:31'!
FAILURE!

!testRun: #MarsRoverTests #test05 stamp: 'fr 10/24/2020 20:13:31'!
PASSED!

!testRun: #MarsRoverTests #test06 stamp: 'fr 10/24/2020 20:13:31'!
PASSED!

!testRun: #MarsRoverTests #test08 stamp: 'fr 10/24/2020 20:13:31'!
PASSED!
!MarsRoverTests methodsFor: 'as yet unclassified' stamp: 'fr 10/24/2020 20:13:43' prior: 50868058!
test03

	| marsRover |
	
	marsRover _ MarsRover at: 1@1 facing: #S.
	
	marsRover move: 'l'.
	
	self assert: (marsRover isAt: 1@1 facing: #E)! !
!MarsRoverTests methodsFor: 'as yet unclassified' stamp: 'fr 10/24/2020 20:13:46' prior: 50868119!
test04

	| marsRover |
	
	marsRover _ MarsRover at: 1@1 facing: #S.
	
	marsRover move: 'r'.
	
	self assert: (marsRover isAt: 1@1 facing: #W)! !

!testRun: #MarsRoverTests #test04 stamp: 'fr 10/24/2020 20:13:53'!
PASSED!

!testRun: #MarsRoverTests #test01 stamp: 'fr 10/24/2020 20:13:53'!
PASSED!

!testRun: #MarsRoverTests #test02 stamp: 'fr 10/24/2020 20:13:53'!
PASSED!

!testRun: #MarsRoverTests #test03 stamp: 'fr 10/24/2020 20:13:53'!
PASSED!

!testRun: #MarsRoverTests #test04 stamp: 'fr 10/24/2020 20:13:53'!
PASSED!

!testRun: #MarsRoverTests #test05 stamp: 'fr 10/24/2020 20:13:53'!
PASSED!

!testRun: #MarsRoverTests #test06 stamp: 'fr 10/24/2020 20:13:53'!
PASSED!

!testRun: #MarsRoverTests #test08 stamp: 'fr 10/24/2020 20:13:53'!
PASSED!
!MarsRoverTests methodsFor: 'as yet unclassified' stamp: 'fr 10/24/2020 20:14:07'!
test07

	| marsRover |
	
	marsRover _ MarsRover at: 1@1 facing: #N.
	
	marsRover move: 'l'.
	
	self assert: (marsRover isAt: 1@1 facing: #W)! !
!MarsRoverTests methodsFor: 'as yet unclassified' stamp: 'fr 10/24/2020 20:14:11' prior: 50868442!
test07

	| marsRover |
	
	marsRover _ MarsRover at: 1@1 facing: #N.
	
	marsRover move: 'r'.
	
	self assert: (marsRover isAt: 1@1 facing: #W)! !
!MarsRoverTests methodsFor: 'as yet unclassified' stamp: 'fr 10/24/2020 20:14:13' prior: 50868450!
test07

	| marsRover |
	
	marsRover _ MarsRover at: 1@1 facing: #N.
	
	marsRover move: 'r'.
	
	self assert: (marsRover isAt: 1@1 facing: #E)! !

!testRun: #MarsRoverTests #test07 stamp: 'fr 10/24/2020 20:14:14'!
FAILURE!

!testRun: #MarsRoverTests #test07 stamp: 'fr 10/24/2020 20:14:19'!
FAILURE!
!MarsRover methodsFor: 'movement' stamp: 'fr 10/24/2020 20:14:34' prior: 50868369!
move: aCommandList
	
	orientation = #S ifTrue: [
		aCommandList = 'f' ifTrue: [position _ position - (0@1)].
		aCommandList = 'b' ifTrue: [position _ position + (0@1)].
		aCommandList = 'l' ifTrue: [orientation _ #E].
		aCommandList = 'r' ifTrue: [orientation _ #W]
	].
	orientation = #N ifTrue: [
		aCommandList = 'f' ifTrue: [position _ position + (0@1)].
		aCommandList = 'b' ifTrue: [position _ position - (0@1)].
		aCommandList = 'l' ifTrue: [orientation _ #W].
		aCommandList = 'r' ifTrue: [orientation _ #E].

	].

	
	! !
!MarsRover methodsFor: 'movement' stamp: 'fr 10/24/2020 20:14:35' prior: 50868470!
move: aCommandList
	
	orientation = #S ifTrue: [
		aCommandList = 'f' ifTrue: [position _ position - (0@1)].
		aCommandList = 'b' ifTrue: [position _ position + (0@1)].
		aCommandList = 'l' ifTrue: [orientation _ #E].
		aCommandList = 'r' ifTrue: [orientation _ #W]
	].
	orientation = #N ifTrue: [
		aCommandList = 'f' ifTrue: [position _ position + (0@1)].
		aCommandList = 'b' ifTrue: [position _ position - (0@1)].
		aCommandList = 'l' ifTrue: [orientation _ #W].
		aCommandList = 'r' ifTrue: [orientation _ #E].
	].

	
	! !

!testRun: #MarsRoverTests #test07 stamp: 'fr 10/24/2020 20:14:36'!
PASSED!

!testRun: #MarsRoverTests #test01 stamp: 'fr 10/24/2020 20:14:36'!
PASSED!

!testRun: #MarsRoverTests #test02 stamp: 'fr 10/24/2020 20:14:36'!
PASSED!

!testRun: #MarsRoverTests #test03 stamp: 'fr 10/24/2020 20:14:36'!
PASSED!

!testRun: #MarsRoverTests #test04 stamp: 'fr 10/24/2020 20:14:36'!
PASSED!

!testRun: #MarsRoverTests #test05 stamp: 'fr 10/24/2020 20:14:36'!
PASSED!

!testRun: #MarsRoverTests #test06 stamp: 'fr 10/24/2020 20:14:36'!
PASSED!

!testRun: #MarsRoverTests #test07 stamp: 'fr 10/24/2020 20:14:36'!
PASSED!

!testRun: #MarsRoverTests #test08 stamp: 'fr 10/24/2020 20:14:36'!
PASSED!
!MarsRoverTests methodsFor: 'as yet unclassified' stamp: 'fr 10/24/2020 20:15:12'!
test09

	| marsRover |
	
	marsRover _ MarsRover at: 1@1 facing: #N.
	
	marsRover move: 'l'.
	
	self assert: (marsRover isAt: 1@1 facing: #W)! !
!MarsRoverTests methodsFor: 'as yet unclassified' stamp: 'fr 10/24/2020 20:15:46' prior: 50868343!
test08

	| marsRover |
	
	marsRover _ MarsRover at: 1@1 facing: #N.
	
	marsRover move: 'r'.
	
	self assert: (marsRover isAt: 1@1 facing: #E)! !
!MarsRoverTests methodsFor: 'as yet unclassified' stamp: 'fr 10/24/2020 20:15:57' prior: 50868094!
test02

	| marsRover |
	
	marsRover _ MarsRover at: 1@1 facing: #S.
	
	marsRover move: 'f'.
	
	self assert: (marsRover isAt: 1@0 facing: #S)! !

!testRun: #MarsRoverTests #test03 stamp: 'fr 10/24/2020 20:16:05'!
PASSED!

!testRun: #MarsRoverTests #test01 stamp: 'fr 10/24/2020 20:16:05'!
PASSED!

!testRun: #MarsRoverTests #test02 stamp: 'fr 10/24/2020 20:16:05'!
PASSED!

!testRun: #MarsRoverTests #test03 stamp: 'fr 10/24/2020 20:16:05'!
PASSED!

!testRun: #MarsRoverTests #test04 stamp: 'fr 10/24/2020 20:16:05'!
PASSED!

!testRun: #MarsRoverTests #test05 stamp: 'fr 10/24/2020 20:16:05'!
PASSED!

!testRun: #MarsRoverTests #test06 stamp: 'fr 10/24/2020 20:16:05'!
PASSED!

!testRun: #MarsRoverTests #test07 stamp: 'fr 10/24/2020 20:16:05'!
PASSED!

!testRun: #MarsRoverTests #test08 stamp: 'fr 10/24/2020 20:16:05'!
PASSED!

!testRun: #MarsRoverTests #test09 stamp: 'fr 10/24/2020 20:16:05'!
PASSED!
!MarsRoverTests methodsFor: 'as yet unclassified' stamp: 'fr 10/24/2020 20:16:20' prior: 50868407!
test03

	| marsRover |
	
	marsRover _ MarsRover at: 1@1 facing: #S.
	
	marsRover move: 'b'.
	
	self assert: (marsRover isAt: 1@2 facing: #S)! !

!testRun: #MarsRoverTests #test03 stamp: 'fr 10/24/2020 20:16:21'!
PASSED!

!testRun: #MarsRoverTests #test01 stamp: 'fr 10/24/2020 20:16:21'!
PASSED!

!testRun: #MarsRoverTests #test02 stamp: 'fr 10/24/2020 20:16:21'!
PASSED!

!testRun: #MarsRoverTests #test03 stamp: 'fr 10/24/2020 20:16:21'!
PASSED!

!testRun: #MarsRoverTests #test04 stamp: 'fr 10/24/2020 20:16:21'!
PASSED!

!testRun: #MarsRoverTests #test05 stamp: 'fr 10/24/2020 20:16:21'!
PASSED!

!testRun: #MarsRoverTests #test06 stamp: 'fr 10/24/2020 20:16:21'!
PASSED!

!testRun: #MarsRoverTests #test07 stamp: 'fr 10/24/2020 20:16:21'!
PASSED!

!testRun: #MarsRoverTests #test08 stamp: 'fr 10/24/2020 20:16:21'!
PASSED!

!testRun: #MarsRoverTests #test09 stamp: 'fr 10/24/2020 20:16:21'!
PASSED!
!MarsRoverTests methodsFor: 'as yet unclassified' stamp: 'fr 10/24/2020 20:16:29' prior: 50868415!
test04

	| marsRover |
	
	marsRover _ MarsRover at: 1@1 facing: #S.
	
	marsRover move: 'r'.
	
	self assert: (marsRover isAt: 1@1 facing: #W)! !
!MarsRoverTests methodsFor: 'as yet unclassified' stamp: 'fr 10/24/2020 20:16:44' prior: 50868152!
test05

	| marsRover |
	
	marsRover _ MarsRover at: 1@1 facing: #S.
	
	marsRover move: 'l'.
	
	self assert: (marsRover isAt: 1@2 facing: #S)! !
!MarsRoverTests methodsFor: 'as yet unclassified' stamp: 'fr 10/24/2020 20:16:53' prior: 50868619!
test05

	| marsRover |
	
	marsRover _ MarsRover at: 1@1 facing: #S.
	
	marsRover move: 'l'.
	
	self assert: (marsRover isAt: 1@2 facing: #E)! !

!testRun: #MarsRoverTests #test05 stamp: 'fr 10/24/2020 20:16:56'!
FAILURE!

!methodRemoval: MarsRoverTests #test06 stamp: 'fr 10/24/2020 20:17:23'!
test06

	| marsRover |
	
	marsRover _ MarsRover at: 1@1 facing: #N.
	
	marsRover move: 'b'.
	
	self assert: (marsRover isAt: 1@0 facing: #N)!

!methodRemoval: MarsRoverTests #test07 stamp: 'fr 10/24/2020 20:17:26'!
test07

	| marsRover |
	
	marsRover _ MarsRover at: 1@1 facing: #N.
	
	marsRover move: 'r'.
	
	self assert: (marsRover isAt: 1@1 facing: #E)!

!methodRemoval: MarsRoverTests #test08 stamp: 'fr 10/24/2020 20:17:27'!
test08

	| marsRover |
	
	marsRover _ MarsRover at: 1@1 facing: #N.
	
	marsRover move: 'r'.
	
	self assert: (marsRover isAt: 1@1 facing: #E)!

!methodRemoval: MarsRoverTests #test09 stamp: 'fr 10/24/2020 20:17:29'!
test09

	| marsRover |
	
	marsRover _ MarsRover at: 1@1 facing: #N.
	
	marsRover move: 'l'.
	
	self assert: (marsRover isAt: 1@1 facing: #W)!

!testRun: #MarsRoverTests #test05 stamp: 'fr 10/24/2020 20:17:33'!
FAILURE!

!testRun: #MarsRoverTests #test05 stamp: 'fr 10/24/2020 20:17:33'!
FAILURE!
!MarsRoverTests methodsFor: 'as yet unclassified' stamp: 'fr 10/24/2020 20:18:20' prior: 50868627!
test05

	| marsRover |
	
	marsRover _ MarsRover at: 1@1 facing: #S.
	
	marsRover move: 'l'.
	
	self assert: (marsRover isAt: 1@1 facing: #E)! !

!testRun: #MarsRoverTests #test05 stamp: 'fr 10/24/2020 20:18:21'!
PASSED!

!testRun: #MarsRoverTests #test01 stamp: 'fr 10/24/2020 20:18:21'!
PASSED!

!testRun: #MarsRoverTests #test02 stamp: 'fr 10/24/2020 20:18:21'!
PASSED!

!testRun: #MarsRoverTests #test03 stamp: 'fr 10/24/2020 20:18:21'!
PASSED!

!testRun: #MarsRoverTests #test04 stamp: 'fr 10/24/2020 20:18:21'!
PASSED!

!testRun: #MarsRoverTests #test05 stamp: 'fr 10/24/2020 20:18:21'!
PASSED!
!MarsRoverTests methodsFor: 'as yet unclassified' stamp: 'fr 10/24/2020 20:18:28'!
test06

	| marsRover |
	
	marsRover _ MarsRover at: 1@1 facing: #S.
	
	marsRover move: 'l'.
	
	self assert: (marsRover isAt: 1@1 facing: #E)! !
!MarsRoverTests methodsFor: 'as yet unclassified' stamp: 'fr 10/24/2020 20:18:36' prior: 50868691!
test06

	| marsRover |
	
	marsRover _ MarsRover at: 1@1 facing: #N.
	
	marsRover move: 'f'.
	
	self assert: (marsRover isAt: 1@2 facing: #N)! !

!testRun: #MarsRoverTests #test06 stamp: 'fr 10/24/2020 20:18:36'!
PASSED!

!testRun: #MarsRoverTests #test01 stamp: 'fr 10/24/2020 20:18:36'!
PASSED!

!testRun: #MarsRoverTests #test02 stamp: 'fr 10/24/2020 20:18:36'!
PASSED!

!testRun: #MarsRoverTests #test03 stamp: 'fr 10/24/2020 20:18:36'!
PASSED!

!testRun: #MarsRoverTests #test04 stamp: 'fr 10/24/2020 20:18:36'!
PASSED!

!testRun: #MarsRoverTests #test05 stamp: 'fr 10/24/2020 20:18:36'!
PASSED!

!testRun: #MarsRoverTests #test06 stamp: 'fr 10/24/2020 20:18:36'!
PASSED!
!MarsRoverTests methodsFor: 'as yet unclassified' stamp: 'fr 10/24/2020 20:18:42' prior: 50868699!
test06

	| marsRover |
	
	marsRover _ MarsRover at: 1@1 facing: #N.
	
	marsRover move: 'b'.
	
	self assert: (marsRover isAt: 1@0 facing: #N)! !

!testRun: #MarsRoverTests #test06 stamp: 'fr 10/24/2020 20:18:42'!
PASSED!

!testRun: #MarsRoverTests #test01 stamp: 'fr 10/24/2020 20:18:42'!
PASSED!

!testRun: #MarsRoverTests #test02 stamp: 'fr 10/24/2020 20:18:42'!
PASSED!

!testRun: #MarsRoverTests #test03 stamp: 'fr 10/24/2020 20:18:42'!
PASSED!

!testRun: #MarsRoverTests #test04 stamp: 'fr 10/24/2020 20:18:42'!
PASSED!

!testRun: #MarsRoverTests #test05 stamp: 'fr 10/24/2020 20:18:42'!
PASSED!

!testRun: #MarsRoverTests #test06 stamp: 'fr 10/24/2020 20:18:42'!
PASSED!
!MarsRoverTests methodsFor: 'as yet unclassified' stamp: 'fr 10/24/2020 20:18:50' prior: 50868724!
test06

	| marsRover |
	
	marsRover _ MarsRover at: 1@1 facing: #N.
	
	marsRover move: 'f'.
	
	self assert: (marsRover isAt: 1@2 facing: #N)! !

!testRun: #MarsRoverTests #test06 stamp: 'fr 10/24/2020 20:18:51'!
PASSED!

!testRun: #MarsRoverTests #test01 stamp: 'fr 10/24/2020 20:18:51'!
PASSED!

!testRun: #MarsRoverTests #test02 stamp: 'fr 10/24/2020 20:18:51'!
PASSED!

!testRun: #MarsRoverTests #test03 stamp: 'fr 10/24/2020 20:18:51'!
PASSED!

!testRun: #MarsRoverTests #test04 stamp: 'fr 10/24/2020 20:18:51'!
PASSED!

!testRun: #MarsRoverTests #test05 stamp: 'fr 10/24/2020 20:18:51'!
PASSED!

!testRun: #MarsRoverTests #test06 stamp: 'fr 10/24/2020 20:18:51'!
PASSED!
!MarsRoverTests methodsFor: 'as yet unclassified' stamp: 'fr 10/24/2020 20:18:54'!
test07

	| marsRover |
	
	marsRover _ MarsRover at: 1@1 facing: #N.
	
	marsRover move: 'f'.
	
	self assert: (marsRover isAt: 1@2 facing: #N)! !
!MarsRoverTests methodsFor: 'as yet unclassified' stamp: 'fr 10/24/2020 20:19:00' prior: 50868773!
test07

	| marsRover |
	
	marsRover _ MarsRover at: 1@1 facing: #N.
	
	marsRover move: 'f'.
	
	self assert: (marsRover isAt: 1@2 facing: #N)! !
!MarsRoverTests methodsFor: 'as yet unclassified' stamp: 'fr 10/24/2020 20:19:12' prior: 50868781!
test07

	| marsRover |
	
	marsRover _ MarsRover at: 1@1 facing: #N.
	
	marsRover move: 'b'.
	
	self assert: (marsRover isAt: 1@0 facing: #N)! !

!testRun: #MarsRoverTests #test07 stamp: 'fr 10/24/2020 20:19:12'!
PASSED!

!testRun: #MarsRoverTests #test01 stamp: 'fr 10/24/2020 20:19:12'!
PASSED!

!testRun: #MarsRoverTests #test02 stamp: 'fr 10/24/2020 20:19:12'!
PASSED!

!testRun: #MarsRoverTests #test03 stamp: 'fr 10/24/2020 20:19:12'!
PASSED!

!testRun: #MarsRoverTests #test04 stamp: 'fr 10/24/2020 20:19:12'!
PASSED!

!testRun: #MarsRoverTests #test05 stamp: 'fr 10/24/2020 20:19:12'!
PASSED!

!testRun: #MarsRoverTests #test06 stamp: 'fr 10/24/2020 20:19:12'!
PASSED!

!testRun: #MarsRoverTests #test07 stamp: 'fr 10/24/2020 20:19:12'!
PASSED!
!MarsRoverTests methodsFor: 'as yet unclassified' stamp: 'fr 10/24/2020 20:19:15'!
test08

	| marsRover |
	
	marsRover _ MarsRover at: 1@1 facing: #N.
	
	marsRover move: 'b'.
	
	self assert: (marsRover isAt: 1@0 facing: #N)! !
!MarsRoverTests methodsFor: 'as yet unclassified' stamp: 'fr 10/24/2020 20:19:17' prior: 50868816!
test08

	| marsRover |
	
	marsRover _ MarsRover at: 1@1 facing: #N.
	
	marsRover move: 'l'.
	
	self assert: (marsRover isAt: 1@0 facing: #N)! !
!MarsRoverTests methodsFor: 'as yet unclassified' stamp: 'fr 10/24/2020 20:19:23' prior: 50868824!
test08

	| marsRover |
	
	marsRover _ MarsRover at: 1@1 facing: #N.
	
	marsRover move: 'l'.
	
	self assert: (marsRover isAt: 1@1 facing: #W)! !

!testRun: #MarsRoverTests #test08 stamp: 'fr 10/24/2020 20:19:23'!
PASSED!

!testRun: #MarsRoverTests #test01 stamp: 'fr 10/24/2020 20:19:23'!
PASSED!

!testRun: #MarsRoverTests #test02 stamp: 'fr 10/24/2020 20:19:23'!
PASSED!

!testRun: #MarsRoverTests #test03 stamp: 'fr 10/24/2020 20:19:23'!
PASSED!

!testRun: #MarsRoverTests #test04 stamp: 'fr 10/24/2020 20:19:23'!
PASSED!

!testRun: #MarsRoverTests #test05 stamp: 'fr 10/24/2020 20:19:23'!
PASSED!

!testRun: #MarsRoverTests #test06 stamp: 'fr 10/24/2020 20:19:23'!
PASSED!

!testRun: #MarsRoverTests #test07 stamp: 'fr 10/24/2020 20:19:23'!
PASSED!

!testRun: #MarsRoverTests #test08 stamp: 'fr 10/24/2020 20:19:23'!
PASSED!
!MarsRoverTests methodsFor: 'as yet unclassified' stamp: 'fr 10/24/2020 20:19:26'!
test09

	| marsRover |
	
	marsRover _ MarsRover at: 1@1 facing: #N.
	
	marsRover move: 'l'.
	
	self assert: (marsRover isAt: 1@1 facing: #W)! !
!MarsRoverTests methodsFor: 'as yet unclassified' stamp: 'fr 10/24/2020 20:19:32' prior: 50868861!
test09

	| marsRover |
	
	marsRover _ MarsRover at: 1@1 facing: #N.
	
	marsRover move: 'r'.
	
	self assert: (marsRover isAt: 1@1 facing: #E)! !

!testRun: #MarsRoverTests #test09 stamp: 'fr 10/24/2020 20:19:33'!
PASSED!

!testRun: #MarsRoverTests #test01 stamp: 'fr 10/24/2020 20:19:33'!
PASSED!

!testRun: #MarsRoverTests #test02 stamp: 'fr 10/24/2020 20:19:33'!
PASSED!

!testRun: #MarsRoverTests #test03 stamp: 'fr 10/24/2020 20:19:33'!
PASSED!

!testRun: #MarsRoverTests #test04 stamp: 'fr 10/24/2020 20:19:33'!
PASSED!

!testRun: #MarsRoverTests #test05 stamp: 'fr 10/24/2020 20:19:33'!
PASSED!

!testRun: #MarsRoverTests #test06 stamp: 'fr 10/24/2020 20:19:33'!
PASSED!

!testRun: #MarsRoverTests #test07 stamp: 'fr 10/24/2020 20:19:33'!
PASSED!

!testRun: #MarsRoverTests #test08 stamp: 'fr 10/24/2020 20:19:33'!
PASSED!

!testRun: #MarsRoverTests #test09 stamp: 'fr 10/24/2020 20:19:33'!
PASSED!
!MarsRoverTests methodsFor: 'as yet unclassified' stamp: 'fr 10/24/2020 20:19:49' prior: 50868869!
test09

	| marsRover |
	
	marsRover _ MarsRover at: 1@1 facing: #E.
	
	marsRover move: 'f'.
	
	self assert: (marsRover isAt: 1@1 facing: #E)! !
!MarsRoverTests methodsFor: 'as yet unclassified' stamp: 'fr 10/24/2020 20:19:57' prior: 50868901!
test09

	| marsRover |
	
	marsRover _ MarsRover at: 1@1 facing: #E.
	
	marsRover move: 'f'.
	
	self assert: (marsRover isAt: 2@1 facing: #E)! !

!testRun: #MarsRoverTests #test09 stamp: 'fr 10/24/2020 20:19:57'!
FAILURE!
!MarsRover methodsFor: 'movement' stamp: 'fr 10/24/2020 20:20:23' prior: 50868490!
move: aCommandList
	
	orientation = #S ifTrue: [
		aCommandList = 'f' ifTrue: [position _ position - (0@1)].
		aCommandList = 'b' ifTrue: [position _ position + (0@1)].
		aCommandList = 'l' ifTrue: [orientation _ #E].
		aCommandList = 'r' ifTrue: [orientation _ #W]
	].
	orientation = #N ifTrue: [
		aCommandList = 'f' ifTrue: [position _ position + (0@1)].
		aCommandList = 'b' ifTrue: [position _ position - (0@1)].
		aCommandList = 'l' ifTrue: [orientation _ #W].
		aCommandList = 'r' ifTrue: [orientation _ #E].
	].
	orientation = #E ifTrue: [
		aCommandList = 'f' ifTrue: [position _ position + (1@0)].
	].

	
	! !

!testRun: #MarsRoverTests #test09 stamp: 'fr 10/24/2020 20:20:25'!
PASSED!

!testRun: #MarsRoverTests #test01 stamp: 'fr 10/24/2020 20:20:25'!
PASSED!

!testRun: #MarsRoverTests #test02 stamp: 'fr 10/24/2020 20:20:25'!
PASSED!

!testRun: #MarsRoverTests #test03 stamp: 'fr 10/24/2020 20:20:25'!
PASSED!

!testRun: #MarsRoverTests #test04 stamp: 'fr 10/24/2020 20:20:25'!
PASSED!

!testRun: #MarsRoverTests #test05 stamp: 'fr 10/24/2020 20:20:25'!
PASSED!

!testRun: #MarsRoverTests #test06 stamp: 'fr 10/24/2020 20:20:25'!
PASSED!

!testRun: #MarsRoverTests #test07 stamp: 'fr 10/24/2020 20:20:25'!
PASSED!

!testRun: #MarsRoverTests #test08 stamp: 'fr 10/24/2020 20:20:25'!
PASSED!

!testRun: #MarsRoverTests #test09 stamp: 'fr 10/24/2020 20:20:25'!
PASSED!
!MarsRoverTests methodsFor: 'as yet unclassified' stamp: 'fr 10/24/2020 20:20:32'!
test10

	| marsRover |
	
	marsRover _ MarsRover at: 1@1 facing: #E.
	
	marsRover move: 'f'.
	
	self assert: (marsRover isAt: 2@1 facing: #E)! !
!MarsRoverTests methodsFor: 'as yet unclassified' stamp: 'fr 10/24/2020 20:20:44' prior: 50868909!
test09

	| marsRover |
	
	marsRover _ MarsRover at: 1@1 facing: #N.
	
	marsRover move: 'r'.
	
	self assert: (marsRover isAt: 1@1 facing: #E)! !

!testRun: #MarsRoverTests #test09 stamp: 'fr 10/24/2020 20:20:45'!
PASSED!

!testRun: #MarsRoverTests #test01 stamp: 'fr 10/24/2020 20:20:45'!
PASSED!

!testRun: #MarsRoverTests #test02 stamp: 'fr 10/24/2020 20:20:45'!
PASSED!

!testRun: #MarsRoverTests #test03 stamp: 'fr 10/24/2020 20:20:45'!
PASSED!

!testRun: #MarsRoverTests #test04 stamp: 'fr 10/24/2020 20:20:45'!
PASSED!

!testRun: #MarsRoverTests #test05 stamp: 'fr 10/24/2020 20:20:45'!
PASSED!

!testRun: #MarsRoverTests #test06 stamp: 'fr 10/24/2020 20:20:45'!
PASSED!

!testRun: #MarsRoverTests #test07 stamp: 'fr 10/24/2020 20:20:45'!
PASSED!

!testRun: #MarsRoverTests #test08 stamp: 'fr 10/24/2020 20:20:45'!
PASSED!

!testRun: #MarsRoverTests #test09 stamp: 'fr 10/24/2020 20:20:45'!
PASSED!

!testRun: #MarsRoverTests #test10 stamp: 'fr 10/24/2020 20:20:45'!
PASSED!
!MarsRoverTests methodsFor: 'as yet unclassified' stamp: 'fr 10/24/2020 20:20:48'!
test11

	| marsRover |
	
	marsRover _ MarsRover at: 1@1 facing: #E.
	
	marsRover move: 'f'.
	
	self assert: (marsRover isAt: 2@1 facing: #E)! !
!MarsRoverTests methodsFor: 'as yet unclassified' stamp: 'fr 10/24/2020 20:20:51' prior: 50869007!
test11

	| marsRover |
	
	marsRover _ MarsRover at: 1@1 facing: #E.
	
	marsRover move: 'b'.
	
	self assert: (marsRover isAt: 2@1 facing: #E)! !
!MarsRoverTests methodsFor: 'as yet unclassified' stamp: 'fr 10/24/2020 20:20:53' prior: 50869015!
test11

	| marsRover |
	
	marsRover _ MarsRover at: 1@1 facing: #E.
	
	marsRover move: 'b'.
	
	self assert: (marsRover isAt: 0@1 facing: #E)! !

!testRun: #MarsRoverTests #test11 stamp: 'fr 10/24/2020 20:20:54'!
FAILURE!
!MarsRover methodsFor: 'movement' stamp: 'fr 10/24/2020 20:21:09' prior: 50868919!
move: aCommandList
	
	orientation = #S ifTrue: [
		aCommandList = 'f' ifTrue: [position _ position - (0@1)].
		aCommandList = 'b' ifTrue: [position _ position + (0@1)].
		aCommandList = 'l' ifTrue: [orientation _ #E].
		aCommandList = 'r' ifTrue: [orientation _ #W]
	].
	orientation = #N ifTrue: [
		aCommandList = 'f' ifTrue: [position _ position + (0@1)].
		aCommandList = 'b' ifTrue: [position _ position - (0@1)].
		aCommandList = 'l' ifTrue: [orientation _ #W].
		aCommandList = 'r' ifTrue: [orientation _ #E].
	].
	orientation = #E ifTrue: [
		aCommandList = 'f' ifTrue: [position _ position + (1@0)].
		aCommandList = 'b' ifTrue: [position _ position - (1@0)].

	].

	
	! !

!testRun: #MarsRoverTests #test11 stamp: 'fr 10/24/2020 20:21:10'!
PASSED!

!testRun: #MarsRoverTests #test01 stamp: 'fr 10/24/2020 20:21:10'!
PASSED!

!testRun: #MarsRoverTests #test02 stamp: 'fr 10/24/2020 20:21:10'!
PASSED!

!testRun: #MarsRoverTests #test03 stamp: 'fr 10/24/2020 20:21:10'!
PASSED!

!testRun: #MarsRoverTests #test04 stamp: 'fr 10/24/2020 20:21:10'!
PASSED!

!testRun: #MarsRoverTests #test05 stamp: 'fr 10/24/2020 20:21:10'!
PASSED!

!testRun: #MarsRoverTests #test06 stamp: 'fr 10/24/2020 20:21:10'!
PASSED!

!testRun: #MarsRoverTests #test07 stamp: 'fr 10/24/2020 20:21:10'!
PASSED!

!testRun: #MarsRoverTests #test08 stamp: 'fr 10/24/2020 20:21:10'!
PASSED!

!testRun: #MarsRoverTests #test09 stamp: 'fr 10/24/2020 20:21:10'!
PASSED!

!testRun: #MarsRoverTests #test10 stamp: 'fr 10/24/2020 20:21:10'!
PASSED!

!testRun: #MarsRoverTests #test11 stamp: 'fr 10/24/2020 20:21:10'!
PASSED!
!MarsRoverTests methodsFor: 'as yet unclassified' stamp: 'fr 10/24/2020 20:21:14'!
test12

	| marsRover |
	
	marsRover _ MarsRover at: 1@1 facing: #E.
	
	marsRover move: 'b'.
	
	self assert: (marsRover isAt: 0@1 facing: #E)! !

!testRun: #MarsRoverTests #test12 stamp: 'fr 10/24/2020 20:21:31'!
PASSED!

!testRun: #MarsRoverTests #test01 stamp: 'fr 10/24/2020 20:21:31'!
PASSED!

!testRun: #MarsRoverTests #test02 stamp: 'fr 10/24/2020 20:21:31'!
PASSED!

!testRun: #MarsRoverTests #test03 stamp: 'fr 10/24/2020 20:21:31'!
PASSED!

!testRun: #MarsRoverTests #test04 stamp: 'fr 10/24/2020 20:21:31'!
PASSED!

!testRun: #MarsRoverTests #test05 stamp: 'fr 10/24/2020 20:21:31'!
PASSED!

!testRun: #MarsRoverTests #test06 stamp: 'fr 10/24/2020 20:21:31'!
PASSED!

!testRun: #MarsRoverTests #test07 stamp: 'fr 10/24/2020 20:21:31'!
PASSED!

!testRun: #MarsRoverTests #test08 stamp: 'fr 10/24/2020 20:21:31'!
PASSED!

!testRun: #MarsRoverTests #test09 stamp: 'fr 10/24/2020 20:21:31'!
PASSED!

!testRun: #MarsRoverTests #test10 stamp: 'fr 10/24/2020 20:21:31'!
PASSED!

!testRun: #MarsRoverTests #test11 stamp: 'fr 10/24/2020 20:21:31'!
PASSED!

!testRun: #MarsRoverTests #test12 stamp: 'fr 10/24/2020 20:21:31'!
PASSED!
!MarsRoverTests methodsFor: 'as yet unclassified' stamp: 'fr 10/24/2020 20:21:41'!
test13

	| marsRover |
	
	marsRover _ MarsRover at: 1@1 facing: #E.
	
	marsRover move: 'b'.
	
	self assert: (marsRover isAt: 0@1 facing: #E)! !
!MarsRoverTests methodsFor: 'as yet unclassified' stamp: 'fr 10/24/2020 20:21:44' prior: 50869124!
test13

	| marsRover |
	
	marsRover _ MarsRover at: 1@1 facing: #E.
	
	marsRover move: 'l'.
	
	self assert: (marsRover isAt: 0@1 facing: #E)! !
!MarsRoverTests methodsFor: 'as yet unclassified' stamp: 'fr 10/24/2020 20:21:47' prior: 50869132!
test13

	| marsRover |
	
	marsRover _ MarsRover at: 1@1 facing: #E.
	
	marsRover move: 'l'.
	
	self assert: (marsRover isAt: 1@1 facing: #E)! !
!MarsRoverTests methodsFor: 'as yet unclassified' stamp: 'fr 10/24/2020 20:21:58' prior: 50869140!
test13

	| marsRover |
	
	marsRover _ MarsRover at: 1@1 facing: #E.
	
	marsRover move: 'l'.
	
	self assert: (marsRover isAt: 1@1 facing: #N)! !

!testRun: #MarsRoverTests #test13 stamp: 'fr 10/24/2020 20:21:59'!
FAILURE!
!MarsRover methodsFor: 'movement' stamp: 'fr 10/24/2020 20:22:22' prior: 50869033!
move: aCommandList
	
	orientation = #S ifTrue: [
		aCommandList = 'f' ifTrue: [position _ position - (0@1)].
		aCommandList = 'b' ifTrue: [position _ position + (0@1)].
		aCommandList = 'l' ifTrue: [orientation _ #E].
		aCommandList = 'r' ifTrue: [orientation _ #W]
	].
	orientation = #N ifTrue: [
		aCommandList = 'f' ifTrue: [position _ position + (0@1)].
		aCommandList = 'b' ifTrue: [position _ position - (0@1)].
		aCommandList = 'l' ifTrue: [orientation _ #W].
		aCommandList = 'r' ifTrue: [orientation _ #E].
	].
	orientation = #E ifTrue: [
		aCommandList = 'f' ifTrue: [position _ position + (1@0)].
		aCommandList = 'b' ifTrue: [position _ position - (1@0)].
		aCommandList = 'l' ifTrue: [orientation _ #N].

	].

	
	! !

!testRun: #MarsRoverTests #test13 stamp: 'fr 10/24/2020 20:22:24'!
PASSED!

!testRun: #MarsRoverTests #test01 stamp: 'fr 10/24/2020 20:22:24'!
PASSED!

!testRun: #MarsRoverTests #test02 stamp: 'fr 10/24/2020 20:22:24'!
PASSED!

!testRun: #MarsRoverTests #test03 stamp: 'fr 10/24/2020 20:22:24'!
PASSED!

!testRun: #MarsRoverTests #test04 stamp: 'fr 10/24/2020 20:22:24'!
PASSED!

!testRun: #MarsRoverTests #test05 stamp: 'fr 10/24/2020 20:22:24'!
FAILURE!

!testRun: #MarsRoverTests #test06 stamp: 'fr 10/24/2020 20:22:24'!
PASSED!

!testRun: #MarsRoverTests #test07 stamp: 'fr 10/24/2020 20:22:24'!
PASSED!

!testRun: #MarsRoverTests #test08 stamp: 'fr 10/24/2020 20:22:24'!
PASSED!

!testRun: #MarsRoverTests #test09 stamp: 'fr 10/24/2020 20:22:24'!
PASSED!

!testRun: #MarsRoverTests #test10 stamp: 'fr 10/24/2020 20:22:24'!
PASSED!

!testRun: #MarsRoverTests #test11 stamp: 'fr 10/24/2020 20:22:24'!
PASSED!

!testRun: #MarsRoverTests #test12 stamp: 'fr 10/24/2020 20:22:24'!
PASSED!

!testRun: #MarsRoverTests #test13 stamp: 'fr 10/24/2020 20:22:24'!
PASSED!

!testRun: #MarsRoverTests #test05 stamp: 'fr 10/24/2020 20:22:24'!
FAILURE!

!testRun: #MarsRoverTests #test13 stamp: 'fr 10/24/2020 20:22:31'!
PASSED!

!testRun: #MarsRoverTests #test01 stamp: 'fr 10/24/2020 20:22:31'!
PASSED!

!testRun: #MarsRoverTests #test02 stamp: 'fr 10/24/2020 20:22:31'!
PASSED!

!testRun: #MarsRoverTests #test03 stamp: 'fr 10/24/2020 20:22:31'!
PASSED!

!testRun: #MarsRoverTests #test04 stamp: 'fr 10/24/2020 20:22:31'!
PASSED!

!testRun: #MarsRoverTests #test05 stamp: 'fr 10/24/2020 20:22:31'!
FAILURE!

!testRun: #MarsRoverTests #test06 stamp: 'fr 10/24/2020 20:22:31'!
PASSED!

!testRun: #MarsRoverTests #test07 stamp: 'fr 10/24/2020 20:22:31'!
PASSED!

!testRun: #MarsRoverTests #test08 stamp: 'fr 10/24/2020 20:22:31'!
PASSED!

!testRun: #MarsRoverTests #test09 stamp: 'fr 10/24/2020 20:22:31'!
PASSED!

!testRun: #MarsRoverTests #test10 stamp: 'fr 10/24/2020 20:22:31'!
PASSED!

!testRun: #MarsRoverTests #test11 stamp: 'fr 10/24/2020 20:22:31'!
PASSED!

!testRun: #MarsRoverTests #test12 stamp: 'fr 10/24/2020 20:22:31'!
PASSED!

!testRun: #MarsRoverTests #test13 stamp: 'fr 10/24/2020 20:22:31'!
PASSED!

!testRun: #MarsRoverTests #test05 stamp: 'fr 10/24/2020 20:22:31'!
FAILURE!
!MarsRover methodsFor: 'movement' stamp: 'fr 10/24/2020 20:23:22' prior: 50869158!
move: aCommandList
	
	|previousOrientation|
	
	previousOrientation _ orientation.
	
	orientation = #S ifTrue: [
		aCommandList = 'f' ifTrue: [position _ position - (0@1)].
		aCommandList = 'b' ifTrue: [position _ position + (0@1)].
		aCommandList = 'l' ifTrue: [orientation _ #E].
		aCommandList = 'r' ifTrue: [orientation _ #W]
	].
	orientation = #N ifTrue: [
		aCommandList = 'f' ifTrue: [position _ position + (0@1)].
		aCommandList = 'b' ifTrue: [position _ position - (0@1)].
		aCommandList = 'l' ifTrue: [orientation _ #W].
		aCommandList = 'r' ifTrue: [orientation _ #E].
	].
	orientation = #E ifTrue: [
		aCommandList = 'f' ifTrue: [position _ position + (1@0)].
		aCommandList = 'b' ifTrue: [position _ position - (1@0)].
		aCommandList = 'l' ifTrue: [orientation _ #N].

	].

	
	! !
!MarsRover methodsFor: 'movement' stamp: 'fr 10/24/2020 20:23:32' prior: 50869255!
move: aCommandList
	
	|previousOrientation|
	
	previousOrientation _ orientation.
	
	previousOrientation = #S ifTrue: [
		aCommandList = 'f' ifTrue: [position _ position - (0@1)].
		aCommandList = 'b' ifTrue: [position _ position + (0@1)].
		aCommandList = 'l' ifTrue: [orientation _ #E].
		aCommandList = 'r' ifTrue: [orientation _ #W]
	].
	previousOrientation = #N ifTrue: [
		aCommandList = 'f' ifTrue: [position _ position + (0@1)].
		aCommandList = 'b' ifTrue: [position _ position - (0@1)].
		aCommandList = 'l' ifTrue: [orientation _ #W].
		aCommandList = 'r' ifTrue: [orientation _ #E].
	].
	previousOrientation = #E ifTrue: [
		aCommandList = 'f' ifTrue: [position _ position + (1@0)].
		aCommandList = 'b' ifTrue: [position _ position - (1@0)].
		aCommandList = 'l' ifTrue: [orientation _ #N].

	].

	
	! !
!MarsRover methodsFor: 'movement' stamp: 'fr 10/24/2020 20:23:39' prior: 50869283!
move: aCommandList
	
	|previousOrientation|
	
	previousOrientation _ orientation.
	
	previousOrientation = #S ifTrue: [
		aCommandList = 'f' ifTrue: [position _ position - (0@1)].
		aCommandList = 'b' ifTrue: [position _ position + (0@1)].
		aCommandList = 'l' ifTrue: [orientation _ #E].
		aCommandList = 'r' ifTrue: [orientation _ #W]
	].
	previousOrientation = #N ifTrue: [
		aCommandList = 'f' ifTrue: [position _ position + (0@1)].
		aCommandList = 'b' ifTrue: [position _ position - (0@1)].
		aCommandList = 'l' ifTrue: [orientation _ #W].
		aCommandList = 'r' ifTrue: [orientation _ #E].
	].
	previousOrientation = #E ifTrue: [
		aCommandList = 'f' ifTrue: [position _ position + (1@0)].
		aCommandList = 'b' ifTrue: [position _ position - (1@0)].
		aCommandList = 'l' ifTrue: [orientation _ #N].

	].

	
	! !

!testRun: #MarsRoverTests #test05 stamp: 'fr 10/24/2020 20:23:40'!
PASSED!

!testRun: #MarsRoverTests #test13 stamp: 'fr 10/24/2020 20:23:42'!
PASSED!

!testRun: #MarsRoverTests #test01 stamp: 'fr 10/24/2020 20:23:42'!
PASSED!

!testRun: #MarsRoverTests #test02 stamp: 'fr 10/24/2020 20:23:42'!
PASSED!

!testRun: #MarsRoverTests #test03 stamp: 'fr 10/24/2020 20:23:42'!
PASSED!

!testRun: #MarsRoverTests #test04 stamp: 'fr 10/24/2020 20:23:42'!
PASSED!

!testRun: #MarsRoverTests #test05 stamp: 'fr 10/24/2020 20:23:42'!
PASSED!

!testRun: #MarsRoverTests #test06 stamp: 'fr 10/24/2020 20:23:42'!
PASSED!

!testRun: #MarsRoverTests #test07 stamp: 'fr 10/24/2020 20:23:42'!
PASSED!

!testRun: #MarsRoverTests #test08 stamp: 'fr 10/24/2020 20:23:42'!
PASSED!

!testRun: #MarsRoverTests #test09 stamp: 'fr 10/24/2020 20:23:42'!
PASSED!

!testRun: #MarsRoverTests #test10 stamp: 'fr 10/24/2020 20:23:42'!
PASSED!

!testRun: #MarsRoverTests #test11 stamp: 'fr 10/24/2020 20:23:42'!
PASSED!

!testRun: #MarsRoverTests #test12 stamp: 'fr 10/24/2020 20:23:42'!
PASSED!

!testRun: #MarsRoverTests #test13 stamp: 'fr 10/24/2020 20:23:42'!
PASSED!
!MarsRoverTests methodsFor: 'as yet unclassified' stamp: 'fr 10/24/2020 20:26:04'!
test14

	| marsRover |
	
	marsRover _ MarsRover at: 1@1 facing: #E.
	
	marsRover move: 'l'.
	
	self assert: (marsRover isAt: 1@1 facing: #N)! !
!MarsRoverTests methodsFor: 'as yet unclassified' stamp: 'fr 10/24/2020 20:26:09' prior: 50869376!
test14

	| marsRover |
	
	marsRover _ MarsRover at: 1@1 facing: #E.
	
	marsRover move: 'r'.
	
	self assert: (marsRover isAt: 1@1 facing: #S)! !

!testRun: #MarsRoverTests #test14 stamp: 'fr 10/24/2020 20:26:11'!
FAILURE!
!MarsRover methodsFor: 'movement' stamp: 'fr 10/24/2020 20:26:27' prior: 50869312!
move: aCommandList
	
	|previousOrientation|
	
	previousOrientation _ orientation.
	
	previousOrientation = #S ifTrue: [
		aCommandList = 'f' ifTrue: [position _ position - (0@1)].
		aCommandList = 'b' ifTrue: [position _ position + (0@1)].
		aCommandList = 'l' ifTrue: [orientation _ #E].
		aCommandList = 'r' ifTrue: [orientation _ #W]
	].
	previousOrientation = #N ifTrue: [
		aCommandList = 'f' ifTrue: [position _ position + (0@1)].
		aCommandList = 'b' ifTrue: [position _ position - (0@1)].
		aCommandList = 'l' ifTrue: [orientation _ #W].
		aCommandList = 'r' ifTrue: [orientation _ #E].
	].
	previousOrientation = #E ifTrue: [
		aCommandList = 'f' ifTrue: [position _ position + (1@0)].
		aCommandList = 'b' ifTrue: [position _ position - (1@0)].
		aCommandList = 'l' ifTrue: [orientation _ #N].
		aCommandList = 'r' ifTrue: [orientation _ #S]
	].

	
	! !

!testRun: #MarsRoverTests #test14 stamp: 'fr 10/24/2020 20:26:28'!
PASSED!

!testRun: #MarsRoverTests #test01 stamp: 'fr 10/24/2020 20:26:28'!
PASSED!

!testRun: #MarsRoverTests #test02 stamp: 'fr 10/24/2020 20:26:28'!
PASSED!

!testRun: #MarsRoverTests #test03 stamp: 'fr 10/24/2020 20:26:28'!
PASSED!

!testRun: #MarsRoverTests #test04 stamp: 'fr 10/24/2020 20:26:28'!
PASSED!

!testRun: #MarsRoverTests #test05 stamp: 'fr 10/24/2020 20:26:28'!
PASSED!

!testRun: #MarsRoverTests #test06 stamp: 'fr 10/24/2020 20:26:28'!
PASSED!

!testRun: #MarsRoverTests #test07 stamp: 'fr 10/24/2020 20:26:28'!
PASSED!

!testRun: #MarsRoverTests #test08 stamp: 'fr 10/24/2020 20:26:28'!
PASSED!

!testRun: #MarsRoverTests #test09 stamp: 'fr 10/24/2020 20:26:28'!
PASSED!

!testRun: #MarsRoverTests #test10 stamp: 'fr 10/24/2020 20:26:28'!
PASSED!

!testRun: #MarsRoverTests #test11 stamp: 'fr 10/24/2020 20:26:28'!
PASSED!

!testRun: #MarsRoverTests #test12 stamp: 'fr 10/24/2020 20:26:28'!
PASSED!

!testRun: #MarsRoverTests #test13 stamp: 'fr 10/24/2020 20:26:28'!
PASSED!

!testRun: #MarsRoverTests #test14 stamp: 'fr 10/24/2020 20:26:28'!
PASSED!
!MarsRoverTests methodsFor: 'as yet unclassified' stamp: 'fr 10/24/2020 20:26:31'!
test15

	| marsRover |
	
	marsRover _ MarsRover at: 1@1 facing: #E.
	
	marsRover move: 'r'.
	
	self assert: (marsRover isAt: 1@1 facing: #S)! !
!MarsRoverTests methodsFor: 'as yet unclassified' stamp: 'fr 10/24/2020 20:26:35' prior: 50869460!
test15

	| marsRover |
	
	marsRover _ MarsRover at: 1@1 facing: #W.
	
	marsRover move: 'r'.
	
	self assert: (marsRover isAt: 1@1 facing: #S)! !
!MarsRoverTests methodsFor: 'as yet unclassified' stamp: 'fr 10/24/2020 20:26:48' prior: 50869468!
test15

	| marsRover |
	
	marsRover _ MarsRover at: 1@1 facing: #W.
	
	marsRover move: 'f'.
	
	self assert: (marsRover isAt: 0@1 facing: #W)! !

!testRun: #MarsRoverTests #test15 stamp: 'fr 10/24/2020 20:26:48'!
FAILURE!
!MarsRover methodsFor: 'movement' stamp: 'fr 10/24/2020 20:27:17' prior: 50869394!
move: aCommandList
	
	|previousOrientation|
	
	previousOrientation _ orientation.
	
	previousOrientation = #S ifTrue: [
		aCommandList = 'f' ifTrue: [position _ position - (0@1)].
		aCommandList = 'b' ifTrue: [position _ position + (0@1)].
		aCommandList = 'l' ifTrue: [orientation _ #E].
		aCommandList = 'r' ifTrue: [orientation _ #W]
	].
	previousOrientation = #N ifTrue: [
		aCommandList = 'f' ifTrue: [position _ position + (0@1)].
		aCommandList = 'b' ifTrue: [position _ position - (0@1)].
		aCommandList = 'l' ifTrue: [orientation _ #W].
		aCommandList = 'r' ifTrue: [orientation _ #E].
	].
	previousOrientation = #E ifTrue: [
		aCommandList = 'f' ifTrue: [position _ position + (1@0)].
		aCommandList = 'b' ifTrue: [position _ position - (1@0)].
		aCommandList = 'l' ifTrue: [orientation _ #N].
		aCommandList = 'r' ifTrue: [orientation _ #S]
	].
	previousOrientation = #W ifTrue: [
		aCommandList = 'f' ifTrue: [position _ position + (1@0)].
		aCommandList = 'b' ifTrue: [position _ position - (1@0)].
		aCommandList = 'l' ifTrue: [orientation _ #N].
		aCommandList = 'r' ifTrue: [orientation _ #S]
	].

	
	! !
!MarsRover methodsFor: 'movement' stamp: 'fr 10/24/2020 20:27:30' prior: 50869486!
move: aCommandList
	
	|previousOrientation|
	
	previousOrientation _ orientation.
	
	previousOrientation = #S ifTrue: [
		aCommandList = 'f' ifTrue: [position _ position - (0@1)].
		aCommandList = 'b' ifTrue: [position _ position + (0@1)].
		aCommandList = 'l' ifTrue: [orientation _ #E].
		aCommandList = 'r' ifTrue: [orientation _ #W]
	].
	previousOrientation = #N ifTrue: [
		aCommandList = 'f' ifTrue: [position _ position + (0@1)].
		aCommandList = 'b' ifTrue: [position _ position - (0@1)].
		aCommandList = 'l' ifTrue: [orientation _ #W].
		aCommandList = 'r' ifTrue: [orientation _ #E].
	].
	previousOrientation = #E ifTrue: [
		aCommandList = 'f' ifTrue: [position _ position + (1@0)].
		aCommandList = 'b' ifTrue: [position _ position - (1@0)].
		aCommandList = 'l' ifTrue: [orientation _ #N].
		aCommandList = 'r' ifTrue: [orientation _ #S]
	].
	previousOrientation = #W ifTrue: [
		aCommandList = 'f' ifTrue: [position _ position - (1@0)].
	].

	
	! !

!testRun: #MarsRoverTests #test15 stamp: 'fr 10/24/2020 20:27:35'!
PASSED!

!testRun: #MarsRoverTests #test01 stamp: 'fr 10/24/2020 20:27:35'!
PASSED!

!testRun: #MarsRoverTests #test02 stamp: 'fr 10/24/2020 20:27:35'!
PASSED!

!testRun: #MarsRoverTests #test03 stamp: 'fr 10/24/2020 20:27:35'!
PASSED!

!testRun: #MarsRoverTests #test04 stamp: 'fr 10/24/2020 20:27:35'!
PASSED!

!testRun: #MarsRoverTests #test05 stamp: 'fr 10/24/2020 20:27:35'!
PASSED!

!testRun: #MarsRoverTests #test06 stamp: 'fr 10/24/2020 20:27:35'!
PASSED!

!testRun: #MarsRoverTests #test07 stamp: 'fr 10/24/2020 20:27:35'!
PASSED!

!testRun: #MarsRoverTests #test08 stamp: 'fr 10/24/2020 20:27:35'!
PASSED!

!testRun: #MarsRoverTests #test09 stamp: 'fr 10/24/2020 20:27:35'!
PASSED!

!testRun: #MarsRoverTests #test10 stamp: 'fr 10/24/2020 20:27:35'!
PASSED!

!testRun: #MarsRoverTests #test11 stamp: 'fr 10/24/2020 20:27:35'!
PASSED!

!testRun: #MarsRoverTests #test12 stamp: 'fr 10/24/2020 20:27:35'!
PASSED!

!testRun: #MarsRoverTests #test13 stamp: 'fr 10/24/2020 20:27:35'!
PASSED!

!testRun: #MarsRoverTests #test14 stamp: 'fr 10/24/2020 20:27:35'!
PASSED!

!testRun: #MarsRoverTests #test15 stamp: 'fr 10/24/2020 20:27:35'!
PASSED!
!MarsRoverTests methodsFor: 'as yet unclassified' stamp: 'fr 10/24/2020 20:27:38'!
test16

	| marsRover |
	
	marsRover _ MarsRover at: 1@1 facing: #W.
	
	marsRover move: 'f'.
	
	self assert: (marsRover isAt: 0@1 facing: #W)! !
!MarsRoverTests methodsFor: 'as yet unclassified' stamp: 'fr 10/24/2020 20:27:40' prior: 50869595!
test16

	| marsRover |
	
	marsRover _ MarsRover at: 1@1 facing: #W.
	
	marsRover move: 'b'.
	
	self assert: (marsRover isAt: 0@1 facing: #W)! !
!MarsRoverTests methodsFor: 'as yet unclassified' stamp: 'fr 10/24/2020 20:27:43' prior: 50869603!
test16

	| marsRover |
	
	marsRover _ MarsRover at: 1@1 facing: #W.
	
	marsRover move: 'b'.
	
	self assert: (marsRover isAt: 2@1 facing: #W)! !

!testRun: #MarsRoverTests #test16 stamp: 'fr 10/24/2020 20:27:44'!
FAILURE!
!MarsRover methodsFor: 'movement' stamp: 'fr 10/24/2020 20:28:09' prior: 50869524!
move: aCommandList
	
	|previousOrientation|
	
	previousOrientation _ orientation.
	
	previousOrientation = #S ifTrue: [
		aCommandList = 'f' ifTrue: [position _ position - (0@1)].
		aCommandList = 'b' ifTrue: [position _ position + (0@1)].
		aCommandList = 'l' ifTrue: [orientation _ #E].
		aCommandList = 'r' ifTrue: [orientation _ #W]
	].
	previousOrientation = #N ifTrue: [
		aCommandList = 'f' ifTrue: [position _ position + (0@1)].
		aCommandList = 'b' ifTrue: [position _ position - (0@1)].
		aCommandList = 'l' ifTrue: [orientation _ #W].
		aCommandList = 'r' ifTrue: [orientation _ #E].
	].
	previousOrientation = #E ifTrue: [
		aCommandList = 'f' ifTrue: [position _ position + (1@0)].
		aCommandList = 'b' ifTrue: [position _ position - (1@0)].
		aCommandList = 'l' ifTrue: [orientation _ #N].
		aCommandList = 'r' ifTrue: [orientation _ #S]
	].
	previousOrientation = #W ifTrue: [
		aCommandList = 'f' ifTrue: [position _ position - (1@0)].
		aCommandList = 'b' ifTrue: [position _ position + (1@0)].

	].

	
	! !

!testRun: #MarsRoverTests #test16 stamp: 'fr 10/24/2020 20:28:10'!
PASSED!

!testRun: #MarsRoverTests #test01 stamp: 'fr 10/24/2020 20:28:10'!
PASSED!

!testRun: #MarsRoverTests #test02 stamp: 'fr 10/24/2020 20:28:10'!
PASSED!

!testRun: #MarsRoverTests #test03 stamp: 'fr 10/24/2020 20:28:10'!
PASSED!

!testRun: #MarsRoverTests #test04 stamp: 'fr 10/24/2020 20:28:10'!
PASSED!

!testRun: #MarsRoverTests #test05 stamp: 'fr 10/24/2020 20:28:10'!
PASSED!

!testRun: #MarsRoverTests #test06 stamp: 'fr 10/24/2020 20:28:10'!
PASSED!

!testRun: #MarsRoverTests #test07 stamp: 'fr 10/24/2020 20:28:10'!
PASSED!

!testRun: #MarsRoverTests #test08 stamp: 'fr 10/24/2020 20:28:10'!
PASSED!

!testRun: #MarsRoverTests #test09 stamp: 'fr 10/24/2020 20:28:10'!
PASSED!

!testRun: #MarsRoverTests #test10 stamp: 'fr 10/24/2020 20:28:10'!
PASSED!

!testRun: #MarsRoverTests #test11 stamp: 'fr 10/24/2020 20:28:10'!
PASSED!

!testRun: #MarsRoverTests #test12 stamp: 'fr 10/24/2020 20:28:10'!
PASSED!

!testRun: #MarsRoverTests #test13 stamp: 'fr 10/24/2020 20:28:10'!
PASSED!

!testRun: #MarsRoverTests #test14 stamp: 'fr 10/24/2020 20:28:10'!
PASSED!

!testRun: #MarsRoverTests #test15 stamp: 'fr 10/24/2020 20:28:10'!
PASSED!

!testRun: #MarsRoverTests #test16 stamp: 'fr 10/24/2020 20:28:10'!
PASSED!
!MarsRoverTests methodsFor: 'as yet unclassified' stamp: 'fr 10/24/2020 20:28:12'!
test17

	| marsRover |
	
	marsRover _ MarsRover at: 1@1 facing: #W.
	
	marsRover move: 'b'.
	
	self assert: (marsRover isAt: 2@1 facing: #W)! !
!MarsRoverTests methodsFor: 'as yet unclassified' stamp: 'fr 10/24/2020 20:28:16' prior: 50869696!
test17

	| marsRover |
	
	marsRover _ MarsRover at: 1@1 facing: #W.
	
	marsRover move: 'l'.
	
	self assert: (marsRover isAt: 2@1 facing: #W)! !
!MarsRoverTests methodsFor: 'as yet unclassified' stamp: 'fr 10/24/2020 20:28:19' prior: 50869704!
test17

	| marsRover |
	
	marsRover _ MarsRover at: 1@1 facing: #W.
	
	marsRover move: 'l'.
	
	self assert: (marsRover isAt: 1@1 facing: #S)! !

!testRun: #MarsRoverTests #test17 stamp: 'fr 10/24/2020 20:28:20'!
FAILURE!
!MarsRover methodsFor: 'movement' stamp: 'fr 10/24/2020 20:28:40' prior: 50869621!
move: aCommandList
	
	|previousOrientation|
	
	previousOrientation _ orientation.
	
	previousOrientation = #S ifTrue: [
		aCommandList = 'f' ifTrue: [position _ position - (0@1)].
		aCommandList = 'b' ifTrue: [position _ position + (0@1)].
		aCommandList = 'l' ifTrue: [orientation _ #E].
		aCommandList = 'r' ifTrue: [orientation _ #W]
	].
	previousOrientation = #N ifTrue: [
		aCommandList = 'f' ifTrue: [position _ position + (0@1)].
		aCommandList = 'b' ifTrue: [position _ position - (0@1)].
		aCommandList = 'l' ifTrue: [orientation _ #W].
		aCommandList = 'r' ifTrue: [orientation _ #E].
	].
	previousOrientation = #E ifTrue: [
		aCommandList = 'f' ifTrue: [position _ position + (1@0)].
		aCommandList = 'b' ifTrue: [position _ position - (1@0)].
		aCommandList = 'l' ifTrue: [orientation _ #N].
		aCommandList = 'r' ifTrue: [orientation _ #S]
	].
	previousOrientation = #W ifTrue: [
		aCommandList = 'f' ifTrue: [position _ position - (1@0)].
		aCommandList = 'b' ifTrue: [position _ position + (1@0)].
		aCommandList = 'l' ifTrue: [orientation _ #S]


	].

	
	! !

!testRun: #MarsRoverTests #test17 stamp: 'fr 10/24/2020 20:28:41'!
PASSED!

!testRun: #MarsRoverTests #test01 stamp: 'fr 10/24/2020 20:28:41'!
PASSED!

!testRun: #MarsRoverTests #test02 stamp: 'fr 10/24/2020 20:28:41'!
PASSED!

!testRun: #MarsRoverTests #test03 stamp: 'fr 10/24/2020 20:28:41'!
PASSED!

!testRun: #MarsRoverTests #test04 stamp: 'fr 10/24/2020 20:28:41'!
PASSED!

!testRun: #MarsRoverTests #test05 stamp: 'fr 10/24/2020 20:28:41'!
PASSED!

!testRun: #MarsRoverTests #test06 stamp: 'fr 10/24/2020 20:28:41'!
PASSED!

!testRun: #MarsRoverTests #test07 stamp: 'fr 10/24/2020 20:28:41'!
PASSED!

!testRun: #MarsRoverTests #test08 stamp: 'fr 10/24/2020 20:28:41'!
PASSED!

!testRun: #MarsRoverTests #test09 stamp: 'fr 10/24/2020 20:28:41'!
PASSED!

!testRun: #MarsRoverTests #test10 stamp: 'fr 10/24/2020 20:28:41'!
PASSED!

!testRun: #MarsRoverTests #test11 stamp: 'fr 10/24/2020 20:28:41'!
PASSED!

!testRun: #MarsRoverTests #test12 stamp: 'fr 10/24/2020 20:28:41'!
PASSED!

!testRun: #MarsRoverTests #test13 stamp: 'fr 10/24/2020 20:28:41'!
PASSED!

!testRun: #MarsRoverTests #test14 stamp: 'fr 10/24/2020 20:28:41'!
PASSED!

!testRun: #MarsRoverTests #test15 stamp: 'fr 10/24/2020 20:28:41'!
PASSED!

!testRun: #MarsRoverTests #test16 stamp: 'fr 10/24/2020 20:28:41'!
PASSED!

!testRun: #MarsRoverTests #test17 stamp: 'fr 10/24/2020 20:28:41'!
PASSED!
!MarsRoverTests methodsFor: 'as yet unclassified' stamp: 'fr 10/24/2020 20:28:44'!
test18

	| marsRover |
	
	marsRover _ MarsRover at: 1@1 facing: #W.
	
	marsRover move: 'l'.
	
	self assert: (marsRover isAt: 1@1 facing: #S)! !
!MarsRoverTests methodsFor: 'as yet unclassified' stamp: 'fr 10/24/2020 20:28:51' prior: 50869801!
test18

	| marsRover |
	
	marsRover _ MarsRover at: 1@1 facing: #W.
	
	marsRover move: 'r'.
	
	self assert: (marsRover isAt: 1@1 facing: #N)! !

!testRun: #MarsRoverTests #test18 stamp: 'fr 10/24/2020 20:28:53'!
FAILURE!
!MarsRover methodsFor: 'movement' stamp: 'fr 10/24/2020 20:29:12' prior: 50869722!
move: aCommandList
	
	|previousOrientation|
	
	previousOrientation _ orientation.
	
	previousOrientation = #S ifTrue: [
		aCommandList = 'f' ifTrue: [position _ position - (0@1)].
		aCommandList = 'b' ifTrue: [position _ position + (0@1)].
		aCommandList = 'l' ifTrue: [orientation _ #E].
		aCommandList = 'r' ifTrue: [orientation _ #W]
	].
	previousOrientation = #N ifTrue: [
		aCommandList = 'f' ifTrue: [position _ position + (0@1)].
		aCommandList = 'b' ifTrue: [position _ position - (0@1)].
		aCommandList = 'l' ifTrue: [orientation _ #W].
		aCommandList = 'r' ifTrue: [orientation _ #E].
	].
	previousOrientation = #E ifTrue: [
		aCommandList = 'f' ifTrue: [position _ position + (1@0)].
		aCommandList = 'b' ifTrue: [position _ position - (1@0)].
		aCommandList = 'l' ifTrue: [orientation _ #N].
		aCommandList = 'r' ifTrue: [orientation _ #S]
	].
	previousOrientation = #W ifTrue: [
		aCommandList = 'f' ifTrue: [position _ position - (1@0)].
		aCommandList = 'b' ifTrue: [position _ position + (1@0)].
		aCommandList = 'l' ifTrue: [orientation _ #S].
		aCommandList = 'r' ifTrue: [orientation _ #N].
	].

	
	! !

!testRun: #MarsRoverTests #test18 stamp: 'fr 10/24/2020 20:29:13'!
PASSED!

!testRun: #MarsRoverTests #test01 stamp: 'fr 10/24/2020 20:29:13'!
PASSED!

!testRun: #MarsRoverTests #test02 stamp: 'fr 10/24/2020 20:29:13'!
PASSED!

!testRun: #MarsRoverTests #test03 stamp: 'fr 10/24/2020 20:29:13'!
PASSED!

!testRun: #MarsRoverTests #test04 stamp: 'fr 10/24/2020 20:29:13'!
PASSED!

!testRun: #MarsRoverTests #test05 stamp: 'fr 10/24/2020 20:29:13'!
PASSED!

!testRun: #MarsRoverTests #test06 stamp: 'fr 10/24/2020 20:29:13'!
PASSED!

!testRun: #MarsRoverTests #test07 stamp: 'fr 10/24/2020 20:29:13'!
PASSED!

!testRun: #MarsRoverTests #test08 stamp: 'fr 10/24/2020 20:29:13'!
PASSED!

!testRun: #MarsRoverTests #test09 stamp: 'fr 10/24/2020 20:29:13'!
PASSED!

!testRun: #MarsRoverTests #test10 stamp: 'fr 10/24/2020 20:29:13'!
PASSED!

!testRun: #MarsRoverTests #test11 stamp: 'fr 10/24/2020 20:29:13'!
PASSED!

!testRun: #MarsRoverTests #test12 stamp: 'fr 10/24/2020 20:29:13'!
PASSED!

!testRun: #MarsRoverTests #test13 stamp: 'fr 10/24/2020 20:29:13'!
PASSED!

!testRun: #MarsRoverTests #test14 stamp: 'fr 10/24/2020 20:29:13'!
PASSED!

!testRun: #MarsRoverTests #test15 stamp: 'fr 10/24/2020 20:29:13'!
PASSED!

!testRun: #MarsRoverTests #test16 stamp: 'fr 10/24/2020 20:29:13'!
PASSED!

!testRun: #MarsRoverTests #test17 stamp: 'fr 10/24/2020 20:29:13'!
PASSED!

!testRun: #MarsRoverTests #test18 stamp: 'fr 10/24/2020 20:29:13'!
PASSED!

!methodRemoval: MarsRoverTests #test12 stamp: 'fr 10/24/2020 20:30:28'!
test12

	| marsRover |
	
	marsRover _ MarsRover at: 1@1 facing: #E.
	
	marsRover move: 'b'.
	
	self assert: (marsRover isAt: 0@1 facing: #E)!

Object subclass: #MarsRoverOrientation
	instanceVariableNames: 'marsRover'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover - Exercise'!

!classDefinition: #MarsRoverOrientation category: 'MarsRover - Exercise' stamp: 'fr 10/24/2020 20:42:22'!
Object subclass: #MarsRoverOrientation
	instanceVariableNames: 'marsRover'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover - Exercise'!

MarsRoverOrientation subclass: #NorthOrientation
	instanceVariableNames: 'marsRover'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover - Exercise'!

MarsRoverOrientation subclass: #NorthOrientation
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover - Exercise'!

!classDefinition: #NorthOrientation category: 'MarsRover - Exercise' stamp: 'fr 10/24/2020 20:42:35'!
MarsRoverOrientation subclass: #NorthOrientation
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover - Exercise'!

MarsRoverOrientation subclass: #SouthOrientation
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover - Exercise'!

!classDefinition: #SouthOrientation category: 'MarsRover - Exercise' stamp: 'fr 10/24/2020 20:42:39'!
MarsRoverOrientation subclass: #SouthOrientation
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover - Exercise'!

MarsRoverOrientation subclass: #EastOrientation
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover - Exercise'!

!classDefinition: #EastOrientation category: 'MarsRover - Exercise' stamp: 'fr 10/24/2020 20:42:42'!
MarsRoverOrientation subclass: #EastOrientation
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover - Exercise'!

MarsRoverOrientation subclass: #WestOrientation
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover - Exercise'!

!classDefinition: #WestOrientation category: 'MarsRover - Exercise' stamp: 'fr 10/24/2020 20:42:44'!
MarsRoverOrientation subclass: #WestOrientation
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover - Exercise'!
!MarsRover methodsFor: 'movement' stamp: 'fr 10/24/2020 20:43:40' prior: 50869819!
move: aCommandList

	aCommandList = 'f' ifTrue: [position _ position - (0@1)].
	aCommandList = 'b' ifTrue: [position _ position + (0@1)].
	aCommandList = 'l' ifTrue: [orientation _ #E].
	aCommandList = 'r' ifTrue: [orientation _ #W]

	
	! !
!MarsRover methodsFor: 'movement' stamp: 'fr 10/24/2020 20:43:48' prior: 50869979!
move: aCommandList

	aCommandList = 'f' ifTrue: [orientation moveForward].
	aCommandList = 'b' ifTrue: [position _ position + (0@1)].
	aCommandList = 'l' ifTrue: [orientation _ #E].
	aCommandList = 'r' ifTrue: [orientation _ #W]

	
	! !
!MarsRover methodsFor: 'movement' stamp: 'fr 10/24/2020 20:45:00' prior: 50869990!
move: aCommandList

	aCommandList = 'f' ifTrue: [orientation moveForward].
	aCommandList = 'b' ifTrue: [orientation moveBackwards].
	aCommandList = 'l' ifTrue: [orientation _ #E].
	aCommandList = 'r' ifTrue: [orientation _ #W]

	
	! !
!MarsRover methodsFor: 'movement' stamp: 'fr 10/24/2020 20:45:12' prior: 50870000!
move: aCommandList

	aCommandList = 'f' ifTrue: [orientation moveForward].
	aCommandList = 'b' ifTrue: [orientation moveBackwards].
	aCommandList = 'l' ifTrue: [orientation rotateLeft].
	aCommandList = 'r' ifTrue: [orientation _ #W]

	
	! !
!MarsRover methodsFor: 'movement' stamp: 'fr 10/24/2020 20:45:21' prior: 50870010!
move: aCommandList

	aCommandList = 'f' ifTrue: [orientation moveForward].
	aCommandList = 'b' ifTrue: [orientation moveBackwards].
	aCommandList = 'l' ifTrue: [orientation rotateLeft].
	aCommandList = 'r' ifTrue: [orientation rotateRight]

	
	! !
!MarsRoverOrientation methodsFor: 'no messages' stamp: 'fr 10/24/2020 20:45:45'!
moveForward
	
	self subclassResponsibility ! !
!MarsRoverOrientation methodsFor: 'as yet unclassified' stamp: 'fr 10/24/2020 20:45:51'!
moveBackwards
	
	self subclassResponsibility ! !
!MarsRoverOrientation methodsFor: 'as yet unclassified' stamp: 'fr 10/24/2020 20:45:56'!
rotateLeft
	
	self subclassResponsibility ! !
!MarsRoverOrientation methodsFor: 'as yet unclassified' stamp: 'fr 10/24/2020 20:45:58'!
rotateRight
	
	self subclassResponsibility ! !
!EastOrientation methodsFor: 'no messages' stamp: 'fr 10/24/2020 20:46:29' overrides: 50870032!
moveForward
	
	marsRover moveEast! !
!EastOrientation methodsFor: 'as yet unclassified' stamp: 'fr 10/24/2020 20:46:37' overrides: 50870037!
moveBackwards
	
	marsRover moveEast! !
!EastOrientation methodsFor: 'as yet unclassified' stamp: 'fr 10/24/2020 20:46:41' prior: 50870057 overrides: 50870037!
moveBackwards
	
	marsRover moveWest! !
!EastOrientation methodsFor: 'as yet unclassified' stamp: 'fr 10/24/2020 20:46:49' overrides: 50870042!
rotateLeft
	
	marsRover moveWest! !
!EastOrientation methodsFor: 'as yet unclassified' stamp: 'fr 10/24/2020 20:46:59' prior: 50870067 overrides: 50870042!
rotateLeft
	
	marsRover faceNorth! !
!EastOrientation methodsFor: 'as yet unclassified' stamp: 'fr 10/24/2020 20:47:04' overrides: 50870047!
rotateRight
	
	marsRover faceNorth! !
!EastOrientation methodsFor: 'as yet unclassified' stamp: 'fr 10/24/2020 20:47:07' prior: 50870077 overrides: 50870047!
rotateRight
	
	marsRover faceSouth! !
!NorthOrientation methodsFor: 'no messages' stamp: 'fr 10/24/2020 20:47:27' overrides: 50870032!
moveForward

	marsRover moveNorth! !
!NorthOrientation methodsFor: 'as yet unclassified' stamp: 'fr 10/24/2020 20:47:36' overrides: 50870037!
moveBackwards

	marsRover moveSouth! !
!NorthOrientation methodsFor: 'as yet unclassified' stamp: 'fr 10/24/2020 20:48:21' overrides: 50870042!
rotateLeft

	marsRover faceWest! !
!NorthOrientation methodsFor: 'as yet unclassified' stamp: 'fr 10/24/2020 20:48:28' overrides: 50870047!
rotateRight

	marsRover faceEast! !
!SouthOrientation methodsFor: 'no messages' stamp: 'fr 10/24/2020 20:48:39' overrides: 50870032!
moveForward

	marsRover moveSouth! !
!SouthOrientation methodsFor: 'as yet unclassified' stamp: 'fr 10/24/2020 20:48:48' overrides: 50870037!
moveBackwards

	marsRover moveNorth
	! !
!SouthOrientation methodsFor: 'as yet unclassified' stamp: 'fr 10/24/2020 20:48:59' overrides: 50870042!
rotateLeft

	marsRover faceEast
	! !
!SouthOrientation methodsFor: 'as yet unclassified' stamp: 'fr 10/24/2020 20:49:07' overrides: 50870047!
rotateRight

	marsRover faceWest
	! !
!WestOrientation methodsFor: 'no messages' stamp: 'fr 10/24/2020 20:49:23' overrides: 50870032!
moveForward

	marsRover moveWest! !
!WestOrientation methodsFor: 'as yet unclassified' stamp: 'fr 10/24/2020 20:49:30' overrides: 50870037!
moveBackwards

	marsRover moveEast! !
!WestOrientation methodsFor: 'as yet unclassified' stamp: 'fr 10/24/2020 20:49:42' overrides: 50870042!
rotateLeft

	marsRover faceSouth! !
!WestOrientation methodsFor: 'as yet unclassified' stamp: 'fr 10/24/2020 20:49:48' overrides: 50870047!
rotateRight

	marsRover faceNorth! !
!MarsRover methodsFor: 'initialization' stamp: 'fr 10/24/2020 20:50:28' prior: 50867872!
initializeAt: aPosition facing: aCardinalPoint 
	
	position _ aPosition.
	orientation _ MarsRoverOrientation facing: aCardinalPoint for: self! !
!MarsRoverOrientation class methodsFor: 'no messages' stamp: 'fr 10/24/2020 20:52:32'!
facing: aCardinalPoint for: aMarsRover

	^(self subclasses detect: [:anOrientationClass | anOrientationClass canHandle: aCardinalPoint]) for: aMarsRover ! !
!MarsRoverOrientation class methodsFor: 'as yet unclassified' stamp: 'fr 10/24/2020 20:52:46'!
for: aMarsRover 
	
	^self new initializeWith: aMarsRover ! !
!MarsRoverOrientation methodsFor: 'nil' stamp: 'fr 10/24/2020 20:54:00'!
initializeFor: aMarsRover

	marsRover _ aMarsRover ! !
!MarsRoverOrientation class methodsFor: 'instance creation - private' stamp: 'fr 10/24/2020 20:54:22' prior: 50870162!
for: aMarsRover 
	
	^self new initializeFor: aMarsRover ! !
!MarsRover methodsFor: 'movement cardinal orientation' stamp: 'fr 10/24/2020 20:55:38'!
moveNorth

	position _ position + (0@1)! !
!MarsRover methodsFor: 'movement cardinal orientation' stamp: 'fr 10/24/2020 20:55:46'!
moveSouth

	position _ position - (0@1)! !
!MarsRover methodsFor: 'movement cardinal orientation' stamp: 'fr 10/24/2020 20:55:49'!
moveEast

	position _ position - (0@1)! !
!MarsRover methodsFor: 'movement cardinal orientation' stamp: 'fr 10/24/2020 20:55:58' prior: 50870188!
moveEast

	position _ position + (1@0)! !
!MarsRover methodsFor: 'movement cardinal orientation' stamp: 'fr 10/24/2020 20:56:01'!
moveWest

	position _ position + (1@0)! !
!MarsRover methodsFor: 'movement cardinal orientation' stamp: 'fr 10/24/2020 20:56:05' prior: 50870198!
moveWest

	position _ position - (1@0)! !
!MarsRover methodsFor: 'orientation' stamp: 'fr 10/24/2020 20:56:52'!
faceNorth

	orientation _ MarsRoverOrientation facing: #N for: self ! !
!MarsRover methodsFor: 'orientation' stamp: 'fr 10/24/2020 20:56:59'!
faceSouth

	orientation _ MarsRoverOrientation facing: #S for: self ! !
!MarsRover methodsFor: 'orientation' stamp: 'fr 10/24/2020 20:57:02'!
faceEast

	orientation _ MarsRoverOrientation facing: #S for: self ! !
!MarsRover methodsFor: 'orientation' stamp: 'fr 10/24/2020 20:57:06' prior: 50870217!
faceEast

	orientation _ MarsRoverOrientation facing: #E for: self ! !
!MarsRover methodsFor: 'orientation' stamp: 'fr 10/24/2020 20:57:08'!
faceWest

	orientation _ MarsRoverOrientation facing: #E for: self ! !
!MarsRover methodsFor: 'orientation' stamp: 'fr 10/24/2020 20:57:12' prior: 50870227!
faceWest

	orientation _ MarsRoverOrientation facing: #W for: self ! !
!MarsRover methodsFor: 'state' stamp: 'fr 10/24/2020 20:58:17' prior: 50867906!
isAt: aPosition facing: aCardinalPoint

	^aPosition = position and: [aCardinalPoint faces: aCardinalPoint ]
	
	! !
!MarsRover methodsFor: 'state' stamp: 'fr 10/24/2020 20:58:18' prior: 50870237!
isAt: aPosition facing: aCardinalPoint

	^aPosition = position and: [aCardinalPoint faces: aCardinalPoint]
	
	! !
!MarsRoverOrientation methodsFor: 'nil' stamp: 'fr 10/24/2020 20:58:26'!
faces: aCardinalPoint! !
!MarsRoverOrientation methodsFor: 'as yet unclassified' stamp: 'fr 10/24/2020 20:58:29' prior: 50870250!
faces: aCardinalPoint

	self subclassResponsibility ! !
!EastOrientation methodsFor: 'nil' stamp: 'fr 10/24/2020 20:59:02' overrides: 50870255!
faces: aCardinalPoint

	^aCardinalPoint = #E! !
!NorthOrientation methodsFor: 'nil' stamp: 'fr 10/24/2020 20:59:09' overrides: 50870255!
faces: aCardinalPoint

	^aCardinalPoint = #N! !
!SouthOrientation methodsFor: 'nil' stamp: 'fr 10/24/2020 20:59:16' overrides: 50870255!
faces: aCardinalPoint

	^aCardinalPoint = #S! !
!WestOrientation methodsFor: 'nil' stamp: 'fr 10/24/2020 20:59:22' overrides: 50870255!
faces: aCardinalPoint

	^aCardinalPoint = #W! !

!testRun: #MarsRoverTests #test01 stamp: 'fr 10/24/2020 20:59:42'!
ERROR!

!testRun: #MarsRoverTests #test02 stamp: 'fr 10/24/2020 20:59:42'!
ERROR!

!testRun: #MarsRoverTests #test03 stamp: 'fr 10/24/2020 20:59:42'!
ERROR!

!testRun: #MarsRoverTests #test04 stamp: 'fr 10/24/2020 20:59:42'!
ERROR!

!testRun: #MarsRoverTests #test05 stamp: 'fr 10/24/2020 20:59:42'!
ERROR!

!testRun: #MarsRoverTests #test06 stamp: 'fr 10/24/2020 20:59:42'!
ERROR!

!testRun: #MarsRoverTests #test07 stamp: 'fr 10/24/2020 20:59:42'!
ERROR!

!testRun: #MarsRoverTests #test08 stamp: 'fr 10/24/2020 20:59:42'!
ERROR!

!testRun: #MarsRoverTests #test09 stamp: 'fr 10/24/2020 20:59:42'!
ERROR!

!testRun: #MarsRoverTests #test10 stamp: 'fr 10/24/2020 20:59:42'!
ERROR!

!testRun: #MarsRoverTests #test11 stamp: 'fr 10/24/2020 20:59:42'!
ERROR!

!testRun: #MarsRoverTests #test13 stamp: 'fr 10/24/2020 20:59:42'!
ERROR!

!testRun: #MarsRoverTests #test14 stamp: 'fr 10/24/2020 20:59:42'!
ERROR!

!testRun: #MarsRoverTests #test15 stamp: 'fr 10/24/2020 20:59:42'!
ERROR!

!testRun: #MarsRoverTests #test16 stamp: 'fr 10/24/2020 20:59:42'!
ERROR!

!testRun: #MarsRoverTests #test17 stamp: 'fr 10/24/2020 20:59:42'!
ERROR!

!testRun: #MarsRoverTests #test18 stamp: 'fr 10/24/2020 20:59:42'!
ERROR!

!testRun: #MarsRoverTests #test01 stamp: 'fr 10/24/2020 20:59:51'!
ERROR!

!testRun: #MarsRoverTests #test01 stamp: 'fr 10/24/2020 20:59:51'!
ERROR!
!EastOrientation class methodsFor: 'no messages' stamp: 'fr 10/24/2020 21:00:30'!
canHandle: aCardinalPoint 

	^aCardinalPoint = #E! !
!NorthOrientation class methodsFor: 'no messages' stamp: 'fr 10/24/2020 21:00:37'!
canHandle: aCardinalPoint 

	^aCardinalPoint = #N! !
!SouthOrientation class methodsFor: 'no messages' stamp: 'fr 10/24/2020 21:00:42'!
canHandle: aCardinalPoint 

	^aCardinalPoint = #S! !
!WestOrientation class methodsFor: 'no messages' stamp: 'fr 10/24/2020 21:00:46'!
canHandle: aCardinalPoint 

	^aCardinalPoint = #W! !

!testRun: #MarsRoverTests #test01 stamp: 'fr 10/24/2020 21:00:47'!
ERROR!

!testRun: #MarsRoverTests #test02 stamp: 'fr 10/24/2020 21:00:47'!
ERROR!

!testRun: #MarsRoverTests #test03 stamp: 'fr 10/24/2020 21:00:47'!
ERROR!

!testRun: #MarsRoverTests #test04 stamp: 'fr 10/24/2020 21:00:47'!
ERROR!

!testRun: #MarsRoverTests #test05 stamp: 'fr 10/24/2020 21:00:47'!
ERROR!

!testRun: #MarsRoverTests #test06 stamp: 'fr 10/24/2020 21:00:47'!
ERROR!

!testRun: #MarsRoverTests #test07 stamp: 'fr 10/24/2020 21:00:47'!
ERROR!

!testRun: #MarsRoverTests #test08 stamp: 'fr 10/24/2020 21:00:47'!
ERROR!

!testRun: #MarsRoverTests #test09 stamp: 'fr 10/24/2020 21:00:47'!
ERROR!

!testRun: #MarsRoverTests #test10 stamp: 'fr 10/24/2020 21:00:47'!
ERROR!

!testRun: #MarsRoverTests #test11 stamp: 'fr 10/24/2020 21:00:47'!
ERROR!

!testRun: #MarsRoverTests #test13 stamp: 'fr 10/24/2020 21:00:47'!
ERROR!

!testRun: #MarsRoverTests #test14 stamp: 'fr 10/24/2020 21:00:47'!
ERROR!

!testRun: #MarsRoverTests #test15 stamp: 'fr 10/24/2020 21:00:47'!
ERROR!

!testRun: #MarsRoverTests #test16 stamp: 'fr 10/24/2020 21:00:47'!
ERROR!

!testRun: #MarsRoverTests #test17 stamp: 'fr 10/24/2020 21:00:47'!
ERROR!

!testRun: #MarsRoverTests #test18 stamp: 'fr 10/24/2020 21:00:47'!
ERROR!

!testRun: #MarsRoverTests #test01 stamp: 'fr 10/24/2020 21:00:57'!
ERROR!

!testRun: #MarsRoverTests #test01 stamp: 'fr 10/24/2020 21:00:57'!
ERROR!
!MarsRover methodsFor: 'state' stamp: 'fr 10/24/2020 21:01:10' prior: 50870244!
isAt: aPosition facing: aCardinalPoint

	^aPosition = position and: [orientation faces: aCardinalPoint]
	
	! !

!testRun: #MarsRoverTests #test01 stamp: 'fr 10/24/2020 21:01:13'!
PASSED!

!testRun: #MarsRoverTests #test02 stamp: 'fr 10/24/2020 21:01:13'!
PASSED!

!testRun: #MarsRoverTests #test03 stamp: 'fr 10/24/2020 21:01:13'!
PASSED!

!testRun: #MarsRoverTests #test04 stamp: 'fr 10/24/2020 21:01:13'!
PASSED!

!testRun: #MarsRoverTests #test05 stamp: 'fr 10/24/2020 21:01:13'!
PASSED!

!testRun: #MarsRoverTests #test06 stamp: 'fr 10/24/2020 21:01:13'!
PASSED!

!testRun: #MarsRoverTests #test07 stamp: 'fr 10/24/2020 21:01:13'!
PASSED!

!testRun: #MarsRoverTests #test08 stamp: 'fr 10/24/2020 21:01:13'!
PASSED!

!testRun: #MarsRoverTests #test09 stamp: 'fr 10/24/2020 21:01:13'!
PASSED!

!testRun: #MarsRoverTests #test10 stamp: 'fr 10/24/2020 21:01:13'!
PASSED!

!testRun: #MarsRoverTests #test11 stamp: 'fr 10/24/2020 21:01:13'!
PASSED!

!testRun: #MarsRoverTests #test13 stamp: 'fr 10/24/2020 21:01:13'!
PASSED!

!testRun: #MarsRoverTests #test14 stamp: 'fr 10/24/2020 21:01:13'!
PASSED!

!testRun: #MarsRoverTests #test15 stamp: 'fr 10/24/2020 21:01:13'!
PASSED!

!testRun: #MarsRoverTests #test16 stamp: 'fr 10/24/2020 21:01:13'!
PASSED!

!testRun: #MarsRoverTests #test17 stamp: 'fr 10/24/2020 21:01:13'!
PASSED!

!testRun: #MarsRoverTests #test18 stamp: 'fr 10/24/2020 21:01:13'!
PASSED!
!MarsRoverTests methodsFor: 'as yet unclassified' stamp: 'fr 10/24/2020 21:02:09'!
test19

	| marsRover |
	
	marsRover _ MarsRover at: 1@1 facing: #W.
	
	marsRover move: 'r'.
	
	self assert: (marsRover isAt: 1@1 facing: #N)! !
!MarsRoverTests methodsFor: 'as yet unclassified' stamp: 'fr 10/24/2020 21:02:20' prior: 50870435!
test19

	| marsRover |
	
	marsRover _ MarsRover at: 1@1 facing: #N.
	
	marsRover move: 'ff'.
	
	self assert: (marsRover isAt: 1@1 facing: #N)! !
!MarsRoverTests methodsFor: 'as yet unclassified' stamp: 'fr 10/24/2020 21:02:28' prior: 50870443!
test19

	| marsRover |
	
	marsRover _ MarsRover at: 1@1 facing: #N.
	
	marsRover move: 'ff'.
	
	self assert: (marsRover isAt: 1@3 facing: #N)! !

!testRun: #MarsRoverTests #test19 stamp: 'fr 10/24/2020 21:03:09'!
FAILURE!
!MarsRover methodsFor: 'movement' stamp: 'fr 10/24/2020 21:03:48'!
process: aCommandList

	aCommandList = 'f' ifTrue: [orientation moveForward].
	aCommandList = 'b' ifTrue: [orientation moveBackwards].
	aCommandList = 'l' ifTrue: [orientation rotateLeft].
	aCommandList = 'r' ifTrue: [orientation rotateRight]! !
!MarsRover methodsFor: 'movement' stamp: 'fr 10/24/2020 21:03:48' prior: 50870021!
move: aCommandList

	self process: aCommandList

	
	! !
!MarsRover methodsFor: 'movement' stamp: 'fr 10/24/2020 21:04:49' prior: 50870472!
move: aCommandList
	
	aCommandList do: [ :aCommand | 
		self process: aCommand
	]

	
	! !
!MarsRover methodsFor: 'movement' stamp: 'fr 10/24/2020 21:04:55' prior: 50870477!
move: aCommandList
	
	aCommandList do: [ :aCommand | self process: aCommand]

	
	! !

!testRun: #MarsRoverTests #test19 stamp: 'fr 10/24/2020 21:05:07'!
FAILURE!
!MarsRover methodsFor: 'movement' stamp: 'fr 10/24/2020 21:05:41' prior: 50870461!
process: aCommandList

	aCommandList = $f ifTrue: [orientation moveForward].
	aCommandList = $b ifTrue: [orientation moveBackwards].
	aCommandList = $l ifTrue: [orientation rotateLeft].
	aCommandList = $r ifTrue: [orientation rotateRight]! !

!testRun: #MarsRoverTests #test19 stamp: 'fr 10/24/2020 21:05:42'!
PASSED!

!testRun: #MarsRoverTests #test01 stamp: 'fr 10/24/2020 21:05:42'!
PASSED!

!testRun: #MarsRoverTests #test02 stamp: 'fr 10/24/2020 21:05:42'!
PASSED!

!testRun: #MarsRoverTests #test03 stamp: 'fr 10/24/2020 21:05:42'!
PASSED!

!testRun: #MarsRoverTests #test04 stamp: 'fr 10/24/2020 21:05:42'!
PASSED!

!testRun: #MarsRoverTests #test05 stamp: 'fr 10/24/2020 21:05:42'!
PASSED!

!testRun: #MarsRoverTests #test06 stamp: 'fr 10/24/2020 21:05:42'!
PASSED!

!testRun: #MarsRoverTests #test07 stamp: 'fr 10/24/2020 21:05:42'!
PASSED!

!testRun: #MarsRoverTests #test08 stamp: 'fr 10/24/2020 21:05:42'!
PASSED!

!testRun: #MarsRoverTests #test09 stamp: 'fr 10/24/2020 21:05:42'!
PASSED!

!testRun: #MarsRoverTests #test10 stamp: 'fr 10/24/2020 21:05:42'!
PASSED!

!testRun: #MarsRoverTests #test11 stamp: 'fr 10/24/2020 21:05:42'!
PASSED!

!testRun: #MarsRoverTests #test13 stamp: 'fr 10/24/2020 21:05:42'!
PASSED!

!testRun: #MarsRoverTests #test14 stamp: 'fr 10/24/2020 21:05:42'!
PASSED!

!testRun: #MarsRoverTests #test15 stamp: 'fr 10/24/2020 21:05:42'!
PASSED!

!testRun: #MarsRoverTests #test16 stamp: 'fr 10/24/2020 21:05:42'!
PASSED!

!testRun: #MarsRoverTests #test17 stamp: 'fr 10/24/2020 21:05:42'!
PASSED!

!testRun: #MarsRoverTests #test18 stamp: 'fr 10/24/2020 21:05:42'!
PASSED!

!testRun: #MarsRoverTests #test19 stamp: 'fr 10/24/2020 21:05:42'!
PASSED!
!MarsRoverTests methodsFor: 'as yet unclassified' stamp: 'fr 10/24/2020 21:06:26' prior: 50870451!
test19

	| marsRover |
	
	marsRover _ MarsRover at: 1@1 facing: #N.
	
	marsRover move: 'flf'.
	
	self assert: (marsRover isAt: 1@3 facing: #N)! !
!MarsRoverTests methodsFor: 'as yet unclassified' stamp: 'fr 10/24/2020 21:06:59' prior: 50870547!
test19

	| marsRover |
	
	marsRover _ MarsRover at: 1@1 facing: #N.
	
	marsRover move: 'flf'.
	
	self assert: (marsRover isAt: 0@2 facing: #W)! !

!testRun: #MarsRoverTests #test19 stamp: 'fr 10/24/2020 21:07:00'!
PASSED!

!testRun: #MarsRoverTests #test01 stamp: 'fr 10/24/2020 21:07:00'!
PASSED!

!testRun: #MarsRoverTests #test02 stamp: 'fr 10/24/2020 21:07:00'!
PASSED!

!testRun: #MarsRoverTests #test03 stamp: 'fr 10/24/2020 21:07:00'!
PASSED!

!testRun: #MarsRoverTests #test04 stamp: 'fr 10/24/2020 21:07:00'!
PASSED!

!testRun: #MarsRoverTests #test05 stamp: 'fr 10/24/2020 21:07:00'!
PASSED!

!testRun: #MarsRoverTests #test06 stamp: 'fr 10/24/2020 21:07:00'!
PASSED!

!testRun: #MarsRoverTests #test07 stamp: 'fr 10/24/2020 21:07:00'!
PASSED!

!testRun: #MarsRoverTests #test08 stamp: 'fr 10/24/2020 21:07:00'!
PASSED!

!testRun: #MarsRoverTests #test09 stamp: 'fr 10/24/2020 21:07:00'!
PASSED!

!testRun: #MarsRoverTests #test10 stamp: 'fr 10/24/2020 21:07:00'!
PASSED!

!testRun: #MarsRoverTests #test11 stamp: 'fr 10/24/2020 21:07:00'!
PASSED!

!testRun: #MarsRoverTests #test13 stamp: 'fr 10/24/2020 21:07:00'!
PASSED!

!testRun: #MarsRoverTests #test14 stamp: 'fr 10/24/2020 21:07:00'!
PASSED!

!testRun: #MarsRoverTests #test15 stamp: 'fr 10/24/2020 21:07:00'!
PASSED!

!testRun: #MarsRoverTests #test16 stamp: 'fr 10/24/2020 21:07:00'!
PASSED!

!testRun: #MarsRoverTests #test17 stamp: 'fr 10/24/2020 21:07:00'!
PASSED!

!testRun: #MarsRoverTests #test18 stamp: 'fr 10/24/2020 21:07:00'!
PASSED!

!testRun: #MarsRoverTests #test19 stamp: 'fr 10/24/2020 21:07:00'!
PASSED!

!testRun: #MarsRoverTests #test01 stamp: 'fr 10/24/2020 21:20:44'!
PASSED!

!testRun: #MarsRoverTests #test02 stamp: 'fr 10/24/2020 21:20:44'!
PASSED!

!testRun: #MarsRoverTests #test03 stamp: 'fr 10/24/2020 21:20:44'!
PASSED!

!testRun: #MarsRoverTests #test04 stamp: 'fr 10/24/2020 21:20:44'!
PASSED!

!testRun: #MarsRoverTests #test05 stamp: 'fr 10/24/2020 21:20:44'!
PASSED!

!testRun: #MarsRoverTests #test06 stamp: 'fr 10/24/2020 21:20:44'!
PASSED!

!testRun: #MarsRoverTests #test07 stamp: 'fr 10/24/2020 21:20:44'!
PASSED!

!testRun: #MarsRoverTests #test08 stamp: 'fr 10/24/2020 21:20:44'!
PASSED!

!testRun: #MarsRoverTests #test09 stamp: 'fr 10/24/2020 21:20:44'!
PASSED!

!testRun: #MarsRoverTests #test10 stamp: 'fr 10/24/2020 21:20:44'!
PASSED!

!testRun: #MarsRoverTests #test11 stamp: 'fr 10/24/2020 21:20:44'!
PASSED!

!testRun: #MarsRoverTests #test13 stamp: 'fr 10/24/2020 21:20:44'!
PASSED!

!testRun: #MarsRoverTests #test14 stamp: 'fr 10/24/2020 21:20:44'!
PASSED!

!testRun: #MarsRoverTests #test15 stamp: 'fr 10/24/2020 21:20:44'!
PASSED!

!testRun: #MarsRoverTests #test16 stamp: 'fr 10/24/2020 21:20:44'!
PASSED!

!testRun: #MarsRoverTests #test17 stamp: 'fr 10/24/2020 21:20:44'!
PASSED!

!testRun: #MarsRoverTests #test18 stamp: 'fr 10/24/2020 21:20:44'!
PASSED!

!testRun: #MarsRoverTests #test19 stamp: 'fr 10/24/2020 21:20:44'!
PASSED!

----SNAPSHOT----(24 October 2020 21:21:51) CuisUniversity-4384.image priorSource: 17155785!
!MarsRoverTests methodsFor: 'as yet unclassified' stamp: 'fr 10/24/2020 21:43:30'!
test20

	| marsRover |
	
	marsRover _ MarsRover at: 1@1 facing: #N.
	
	marsRover move: 'flf'.
	
	self assert: (marsRover isAt: 0@2 facing: #W)! !
!MarsRoverTests methodsFor: 'as yet unclassified' stamp: 'fr 10/24/2020 21:43:35' prior: 50870653!
test20

	| marsRover |
	
	marsRover _ MarsRover at: 1@1 facing: #X.
	
	marsRover move: 'flf'.
	
	self assert: (marsRover isAt: 0@2 facing: #W)! !
!MarsRoverTests methodsFor: 'as yet unclassified' stamp: 'fr 10/24/2020 21:43:43' prior: 50870661!
test20

	| marsRover |
	
	marsRover _ MarsRover at: 1@1 facing: #F.
	
	marsRover move: 'flf'.
	
	self assert: (marsRover isAt: 0@2 facing: #W)! !
!MarsRoverOrientation class methodsFor: 'instance creation' stamp: 'fr 10/24/2020 21:47:13' prior: 50870154!
facing: aCardinalPoint for: aMarsRover

	"^(self subclasses detect: ) for: aMarsRover."
	
	^(self subclasses detect: [:anOrientationClass | anOrientationClass canHandle: aCardinalPoint] ifFound: [:anOrientationClass | anOrientationClass for: aMarsRover] ifNone: [self error: 'Invalid cardinal point'])! !
!MarsRoverOrientation class methodsFor: 'instance creation' stamp: 'fr 10/24/2020 21:47:30' prior: 50870677!
facing: aCardinalPoint for: aMarsRover

	^(self subclasses detect: [:anOrientationClass | anOrientationClass canHandle: aCardinalPoint]) for: aMarsRover.! !
!MarsRoverOrientation class methodsFor: 'instance creation' stamp: 'fr 10/24/2020 21:47:36' prior: 50870690!
facing: aCardinalPoint for: aMarsRover

	^(self subclasses detect: [:anOrientationClass | anOrientationClass canHandle: aCardinalPoint]) for: aMarsRover 
	! !
!MarsRoverTests methodsFor: 'as yet unclassified' stamp: 'fr 10/24/2020 21:49:06' prior: 50870669!
test20

	self should: (MarsRover at: 1@1 facing: #F) raise: Error withMessageText: MarsRover invalidCardinalPoint	! !

!testRun: #MarsRoverTests #test20 stamp: 'fr 10/24/2020 21:49:08'!
ERROR!

!testRun: #MarsRoverTests #test20 stamp: 'fr 10/24/2020 21:49:21'!
ERROR!

!testRun: #MarsRoverTests #test20 stamp: 'fr 10/24/2020 21:49:39'!
ERROR!

!testRun: #MarsRoverTests #test20 stamp: 'fr 10/24/2020 21:49:50'!
ERROR!
!MarsRoverOrientation class methodsFor: 'instance creation' stamp: 'fr 10/24/2020 21:51:51' prior: 50870699!
facing: aCardinalPoint for: aMarsRover

	"^(self subclasses detect: [:anOrientationClass | anOrientationClass canHandle: aCardinalPoint]) for: aMarsRover"
	
	^self subclasses detect: [:anOrientationClass | anOrientationClass canHandle: aCardinalPoint] ifFound: [:anOrientationClass | anOrientationClass for: aMarsRover] ifNone: [self invalidOrientation] 
	! !

!testRun: #MarsRoverTests #test20 stamp: 'fr 10/24/2020 21:51:54'!
ERROR!
!MarsRoverOrientation class methodsFor: 'exceptions' stamp: 'fr 10/24/2020 21:52:12'!
invalidOrientation
	self shouldBeImplemented.! !
!MarsRoverOrientation class methodsFor: 'exceptions' stamp: 'fr 10/24/2020 21:52:32' prior: 50870742!
invalidOrientation
	
	self error: 'Invalid cardinal point'! !
!MarsRoverOrientation class methodsFor: 'exceptions' stamp: 'fr 10/24/2020 21:52:53' prior: 50870747!
invalidOrientation
	
	self error: 'Invalid cardinal point'! !

!testRun: #MarsRoverTests #test20 stamp: 'fr 10/24/2020 21:52:54'!
ERROR!
!MarsRoverTests methodsFor: 'as yet unclassified' stamp: 'fr 10/24/2020 21:53:21' prior: 50870708!
test20

	self should: [MarsRover at: 1@1 facing: #F] raise: Error withMessageText: MarsRover invalidCardinalPoint	! !

!testRun: #MarsRoverTests #test20 stamp: 'fr 10/24/2020 21:53:23'!
ERROR!
!MarsRover class methodsFor: 'exceptions' stamp: 'fr 10/24/2020 21:53:32'!
invalidCardinalPoint
	self shouldBeImplemented.! !
!MarsRover class methodsFor: 'exceptions' stamp: 'fr 10/24/2020 21:53:48' prior: 50870770!
invalidCardinalPoint
	
	MarsRoverOrientation invalidOrientation ! !

!testRun: #MarsRoverTests #test20 stamp: 'fr 10/24/2020 21:53:49'!
ERROR!

!testRun: #MarsRoverTests #test20 stamp: 'fr 10/24/2020 21:54:47'!
FAILURE!

!testRun: #MarsRoverTests #test20 stamp: 'fr 10/24/2020 21:55:18'!
ERROR!

!testRun: #MarsRoverTests #test20 stamp: 'fr 10/24/2020 21:55:24'!
ERROR!
!MarsRover class methodsFor: 'exceptions' stamp: 'fr 10/24/2020 21:55:44' prior: 50870775!
invalidCardinalPoint
	
	^MarsRoverOrientation invalidOrientation ! !

!testRun: #MarsRoverTests #test20 stamp: 'fr 10/24/2020 21:55:45'!
ERROR!
!MarsRoverTests methodsFor: 'as yet unclassified' stamp: 'fr 10/24/2020 21:56:13' prior: 50870761!
test20

	self should: [MarsRover at: 1@1 facing: #F] raise: Error withMessageText: MarsRover invalidCardinalPointErrorDescription! !

!testRun: #MarsRoverTests #test20 stamp: 'fr 10/24/2020 21:56:15'!
ERROR!
!MarsRover class methodsFor: 'as yet unclassified' stamp: 'fr 10/24/2020 21:56:26'!
invalidCardinalPointErrorDescription
	self shouldBeImplemented.! !

!testRun: #MarsRoverTests #test20 stamp: 'fr 10/24/2020 21:56:42'!
ERROR!

!methodRemoval: MarsRover class #invalidCardinalPointErrorDescription stamp: 'fr 10/24/2020 21:57:06'!
invalidCardinalPointErrorDescription
	self shouldBeImplemented.!

!testRun: #MarsRoverTests #test20 stamp: 'fr 10/24/2020 21:57:20'!
ERROR!
!MarsRover class methodsFor: 'error descriptions' stamp: 'fr 10/24/2020 21:57:40'!
invalidCardinalPointErrorDescription
	self shouldBeImplemented.! !
!MarsRover class methodsFor: 'error descriptions' stamp: 'fr 10/24/2020 21:57:54' prior: 50870823!
invalidCardinalPointErrorDescription
	
	^MarsRoverOrientation invalidCardinalPointErrorDescription! !

!testRun: #MarsRoverTests #test20 stamp: 'fr 10/24/2020 21:57:55'!
ERROR!
!MarsRoverOrientation class methodsFor: 'error descriptions' stamp: 'fr 10/24/2020 21:58:28'!
invalidCardinalPointErrorDescription
	self shouldBeImplemented.! !
!MarsRoverOrientation class methodsFor: 'error descriptions' stamp: 'fr 10/24/2020 21:58:37' prior: 50870838!
invalidCardinalPointErrorDescription
	
	^'Invalid cardinal point'! !

!testRun: #MarsRoverTests #test20 stamp: 'fr 10/24/2020 21:58:38'!
PASSED!

!testRun: #MarsRoverTests #test01 stamp: 'fr 10/24/2020 21:58:38'!
PASSED!

!testRun: #MarsRoverTests #test02 stamp: 'fr 10/24/2020 21:58:38'!
PASSED!

!testRun: #MarsRoverTests #test03 stamp: 'fr 10/24/2020 21:58:38'!
PASSED!

!testRun: #MarsRoverTests #test04 stamp: 'fr 10/24/2020 21:58:38'!
PASSED!

!testRun: #MarsRoverTests #test05 stamp: 'fr 10/24/2020 21:58:38'!
PASSED!

!testRun: #MarsRoverTests #test06 stamp: 'fr 10/24/2020 21:58:38'!
PASSED!

!testRun: #MarsRoverTests #test07 stamp: 'fr 10/24/2020 21:58:38'!
PASSED!

!testRun: #MarsRoverTests #test08 stamp: 'fr 10/24/2020 21:58:38'!
PASSED!

!testRun: #MarsRoverTests #test09 stamp: 'fr 10/24/2020 21:58:38'!
PASSED!

!testRun: #MarsRoverTests #test10 stamp: 'fr 10/24/2020 21:58:38'!
PASSED!

!testRun: #MarsRoverTests #test11 stamp: 'fr 10/24/2020 21:58:38'!
PASSED!

!testRun: #MarsRoverTests #test13 stamp: 'fr 10/24/2020 21:58:38'!
PASSED!

!testRun: #MarsRoverTests #test14 stamp: 'fr 10/24/2020 21:58:38'!
PASSED!

!testRun: #MarsRoverTests #test15 stamp: 'fr 10/24/2020 21:58:38'!
PASSED!

!testRun: #MarsRoverTests #test16 stamp: 'fr 10/24/2020 21:58:38'!
PASSED!

!testRun: #MarsRoverTests #test17 stamp: 'fr 10/24/2020 21:58:38'!
PASSED!

!testRun: #MarsRoverTests #test18 stamp: 'fr 10/24/2020 21:58:38'!
PASSED!

!testRun: #MarsRoverTests #test19 stamp: 'fr 10/24/2020 21:58:38'!
PASSED!

!testRun: #MarsRoverTests #test20 stamp: 'fr 10/24/2020 21:58:38'!
PASSED!
!MarsRoverOrientation class methodsFor: 'exceptions' stamp: 'fr 10/24/2020 21:59:17'!
invalidCardinalPoint
	
	self error: 'Invalid cardinal point'! !
!MarsRover class methodsFor: 'as yet unclassified' stamp: 'fr 10/24/2020 21:59:17' prior: 50870790!
invalidCardinalPoint
	
	^MarsRoverOrientation invalidCardinalPoint ! !
!MarsRoverOrientation class methodsFor: 'as yet unclassified' stamp: 'fr 10/24/2020 21:59:17' prior: 50870725!
facing: aCardinalPoint for: aMarsRover

	"^(self subclasses detect: [:anOrientationClass | anOrientationClass canHandle: aCardinalPoint]) for: aMarsRover"
	
	^self subclasses detect: [:anOrientationClass | anOrientationClass canHandle: aCardinalPoint] ifFound: [:anOrientationClass | anOrientationClass for: aMarsRover] ifNone: [self invalidCardinalPoint] 
	! !

!methodRemoval: MarsRoverOrientation class #invalidOrientation stamp: 'fr 10/24/2020 21:59:17'!
invalidOrientation
	
	self error: 'Invalid cardinal point'!

!testRun: #MarsRoverTests #test01 stamp: 'fr 10/24/2020 21:59:21'!
PASSED!

!testRun: #MarsRoverTests #test02 stamp: 'fr 10/24/2020 21:59:21'!
PASSED!

!testRun: #MarsRoverTests #test03 stamp: 'fr 10/24/2020 21:59:21'!
PASSED!

!testRun: #MarsRoverTests #test04 stamp: 'fr 10/24/2020 21:59:21'!
PASSED!

!testRun: #MarsRoverTests #test05 stamp: 'fr 10/24/2020 21:59:21'!
PASSED!

!testRun: #MarsRoverTests #test06 stamp: 'fr 10/24/2020 21:59:21'!
PASSED!

!testRun: #MarsRoverTests #test07 stamp: 'fr 10/24/2020 21:59:21'!
PASSED!

!testRun: #MarsRoverTests #test08 stamp: 'fr 10/24/2020 21:59:21'!
PASSED!

!testRun: #MarsRoverTests #test09 stamp: 'fr 10/24/2020 21:59:21'!
PASSED!

!testRun: #MarsRoverTests #test10 stamp: 'fr 10/24/2020 21:59:21'!
PASSED!

!testRun: #MarsRoverTests #test11 stamp: 'fr 10/24/2020 21:59:21'!
PASSED!

!testRun: #MarsRoverTests #test13 stamp: 'fr 10/24/2020 21:59:21'!
PASSED!

!testRun: #MarsRoverTests #test14 stamp: 'fr 10/24/2020 21:59:21'!
PASSED!

!testRun: #MarsRoverTests #test15 stamp: 'fr 10/24/2020 21:59:21'!
PASSED!

!testRun: #MarsRoverTests #test16 stamp: 'fr 10/24/2020 21:59:21'!
PASSED!

!testRun: #MarsRoverTests #test17 stamp: 'fr 10/24/2020 21:59:21'!
PASSED!

!testRun: #MarsRoverTests #test18 stamp: 'fr 10/24/2020 21:59:21'!
PASSED!

!testRun: #MarsRoverTests #test19 stamp: 'fr 10/24/2020 21:59:21'!
PASSED!

!testRun: #MarsRoverTests #test20 stamp: 'fr 10/24/2020 21:59:21'!
PASSED!
!MarsRoverOrientation class methodsFor: 'exceptions' stamp: 'fr 10/24/2020 21:59:40' prior: 50870897!
invalidCardinalPoint
	
	self error: self invalidCardinalPointErrorDescription ! !

!testRun: #MarsRoverTests #test20 stamp: 'fr 10/24/2020 21:59:52'!
PASSED!

!testRun: #MarsRoverTests #test01 stamp: 'fr 10/24/2020 21:59:52'!
PASSED!

!testRun: #MarsRoverTests #test02 stamp: 'fr 10/24/2020 21:59:52'!
PASSED!

!testRun: #MarsRoverTests #test03 stamp: 'fr 10/24/2020 21:59:52'!
PASSED!

!testRun: #MarsRoverTests #test04 stamp: 'fr 10/24/2020 21:59:52'!
PASSED!

!testRun: #MarsRoverTests #test05 stamp: 'fr 10/24/2020 21:59:52'!
PASSED!

!testRun: #MarsRoverTests #test06 stamp: 'fr 10/24/2020 21:59:52'!
PASSED!

!testRun: #MarsRoverTests #test07 stamp: 'fr 10/24/2020 21:59:52'!
PASSED!

!testRun: #MarsRoverTests #test08 stamp: 'fr 10/24/2020 21:59:52'!
PASSED!

!testRun: #MarsRoverTests #test09 stamp: 'fr 10/24/2020 21:59:52'!
PASSED!

!testRun: #MarsRoverTests #test10 stamp: 'fr 10/24/2020 21:59:52'!
PASSED!

!testRun: #MarsRoverTests #test11 stamp: 'fr 10/24/2020 21:59:52'!
PASSED!

!testRun: #MarsRoverTests #test13 stamp: 'fr 10/24/2020 21:59:52'!
PASSED!

!testRun: #MarsRoverTests #test14 stamp: 'fr 10/24/2020 21:59:52'!
PASSED!

!testRun: #MarsRoverTests #test15 stamp: 'fr 10/24/2020 21:59:52'!
PASSED!

!testRun: #MarsRoverTests #test16 stamp: 'fr 10/24/2020 21:59:52'!
PASSED!

!testRun: #MarsRoverTests #test17 stamp: 'fr 10/24/2020 21:59:52'!
PASSED!

!testRun: #MarsRoverTests #test18 stamp: 'fr 10/24/2020 21:59:52'!
PASSED!

!testRun: #MarsRoverTests #test19 stamp: 'fr 10/24/2020 21:59:52'!
PASSED!

!testRun: #MarsRoverTests #test20 stamp: 'fr 10/24/2020 21:59:52'!
PASSED!
!MarsRoverTests methodsFor: 'as yet unclassified' stamp: 'fr 10/24/2020 21:59:55'!
test21

	self should: [MarsRover at: 1@1 facing: #F] raise: Error withMessageText: MarsRover invalidCardinalPointErrorDescription! !
!MarsRoverTests methodsFor: 'as yet unclassified' stamp: 'fr 10/24/2020 22:01:12' prior: 50871027!
test21
	
	| marsRover |
	
	marsRover _ MarsRover at: 1@1 facing: #F.
	
	self should: [marsRover move: 'z'] raise: Error withMessageText: MarsRover inexistentTemporaryErrorDescription! !
!MarsRoverTests methodsFor: 'as yet unclassified' stamp: 'fr 10/24/2020 22:01:15' prior: 50871035!
test21
	
	| marsRover |
	
	marsRover _ MarsRover at: 1@1 facing: #F.
	
	self should: [marsRover move: 'z'] raise: Error withMessageText: MarsRover invalidCommandErrorDescription! !
!MarsRoverTests methodsFor: 'as yet unclassified' stamp: 'fr 10/24/2020 22:01:22' prior: 50871044!
test21
	
	| marsRover |
	
	marsRover _ MarsRover at: 1@1 facing: #N.
	
	self should: [marsRover move: 'z'] raise: Error withMessageText: MarsRover invalidCommandErrorDescription! !

!testRun: #MarsRoverTests #test21 stamp: 'fr 10/24/2020 22:01:24'!
ERROR!
!MarsRover class methodsFor: 'error descriptions' stamp: 'fr 10/24/2020 22:01:43'!
invalidCommandErrorDescription
	self shouldBeImplemented.! !
!MarsRover class methodsFor: 'error descriptions' stamp: 'fr 10/24/2020 22:02:27' prior: 50871064!
invalidCommandErrorDescription
	
	^'Invalid command'! !

!testRun: #MarsRoverTests #test21 stamp: 'fr 10/24/2020 22:02:29'!
FAILURE!
!MarsRover methodsFor: 'movement' stamp: 'fr 10/24/2020 22:03:41' prior: 50870491!
process: aCommandList

	aCommandList = $f ifTrue: [orientation moveForward].
	aCommandList = $b ifTrue: [orientation moveBackwards].
	aCommandList = $l ifTrue: [orientation rotateLeft].
	aCommandList = $r ifTrue: [orientation rotateRight].
	
	self invalidCommand! !

!testRun: #MarsRoverTests #test21 stamp: 'fr 10/24/2020 22:03:44'!
FAILURE!

!testRun: #MarsRoverTests #test21 stamp: 'fr 10/24/2020 22:03:59'!
FAILURE!
!MarsRover methodsFor: 'movement' stamp: 'fr 10/24/2020 22:04:55' prior: 50871076!
process: aCommandList

	aCommandList = $f ifTrue: [orientation moveForward].
	aCommandList = $b ifTrue: [orientation moveBackwards].
	aCommandList = $l ifTrue: [orientation rotateLeft].
	aCommandList = $r ifTrue: [orientation rotateRight].
	
	self error: self invalidCommandErrorDescription ! !

!testRun: #MarsRoverTests #test21 stamp: 'fr 10/24/2020 22:04:56'!
FAILURE!
!MarsRover methodsFor: 'movement' stamp: 'fr 10/24/2020 22:07:26' prior: 50871092!
process: aCommandList

	aCommandList = $f ifTrue: [orientation moveForward].
	aCommandList = $b ifTrue: [orientation moveBackwards].
	aCommandList = $l ifTrue: [orientation rotateLeft].
	aCommandList = $r ifTrue: [orientation rotateRight].
	
	self error: self invalidCommandErrorDescription ! !
!MarsRover methodsFor: 'movement' stamp: 'fr 10/24/2020 22:09:51' prior: 50871107!
process: aCommandList

	aCommandList = $f ifTrue: [^orientation moveForward].
	aCommandList = $b ifTrue: [^orientation moveBackwards].
	aCommandList = $l ifTrue: [^orientation rotateLeft].
	aCommandList = $r ifTrue: [^orientation rotateRight].
	
	self error: self invalidCommandErrorDescription ! !

!testRun: #MarsRoverTests #test21 stamp: 'fr 10/24/2020 22:09:53'!
FAILURE!

MarsRover invalidCommandErrorDescription!

marsRover move: 'z'!

!testRun: #MarsRoverTests #test21 stamp: 'fr 10/24/2020 22:10:28'!
FAILURE!

!testRun: #MarsRoverTests #test21 stamp: 'fr 10/24/2020 22:10:47'!
FAILURE!

self invalidCommandErrorDescription!
!MarsRover methodsFor: 'movement' stamp: 'fr 10/24/2020 22:11:10' prior: 50871119!
process: aCommandList

	aCommandList = $f ifTrue: [^orientation moveForward].
	aCommandList = $b ifTrue: [^orientation moveBackwards].
	aCommandList = $l ifTrue: [^orientation rotateLeft].
	aCommandList = $r ifTrue: [^orientation rotateRight].
	
	self error: self class invalidCommandErrorDescription ! !

!testRun: #MarsRoverTests #test21 stamp: 'fr 10/24/2020 22:11:11'!
PASSED!

!testRun: #MarsRoverTests #test01 stamp: 'fr 10/24/2020 22:11:11'!
PASSED!

!testRun: #MarsRoverTests #test02 stamp: 'fr 10/24/2020 22:11:11'!
PASSED!

!testRun: #MarsRoverTests #test03 stamp: 'fr 10/24/2020 22:11:11'!
PASSED!

!testRun: #MarsRoverTests #test04 stamp: 'fr 10/24/2020 22:11:11'!
PASSED!

!testRun: #MarsRoverTests #test05 stamp: 'fr 10/24/2020 22:11:11'!
PASSED!

!testRun: #MarsRoverTests #test06 stamp: 'fr 10/24/2020 22:11:11'!
PASSED!

!testRun: #MarsRoverTests #test07 stamp: 'fr 10/24/2020 22:11:11'!
PASSED!

!testRun: #MarsRoverTests #test08 stamp: 'fr 10/24/2020 22:11:11'!
PASSED!

!testRun: #MarsRoverTests #test09 stamp: 'fr 10/24/2020 22:11:11'!
PASSED!

!testRun: #MarsRoverTests #test10 stamp: 'fr 10/24/2020 22:11:11'!
PASSED!

!testRun: #MarsRoverTests #test11 stamp: 'fr 10/24/2020 22:11:11'!
PASSED!

!testRun: #MarsRoverTests #test13 stamp: 'fr 10/24/2020 22:11:11'!
PASSED!

!testRun: #MarsRoverTests #test14 stamp: 'fr 10/24/2020 22:11:11'!
PASSED!

!testRun: #MarsRoverTests #test15 stamp: 'fr 10/24/2020 22:11:11'!
PASSED!

!testRun: #MarsRoverTests #test16 stamp: 'fr 10/24/2020 22:11:11'!
PASSED!

!testRun: #MarsRoverTests #test17 stamp: 'fr 10/24/2020 22:11:11'!
PASSED!

!testRun: #MarsRoverTests #test18 stamp: 'fr 10/24/2020 22:11:11'!
PASSED!

!testRun: #MarsRoverTests #test19 stamp: 'fr 10/24/2020 22:11:11'!
PASSED!

!testRun: #MarsRoverTests #test20 stamp: 'fr 10/24/2020 22:11:11'!
PASSED!

!testRun: #MarsRoverTests #test21 stamp: 'fr 10/24/2020 22:11:12'!
PASSED!
!MarsRoverTests methodsFor: 'as yet unclassified' stamp: 'fr 10/24/2020 22:12:11' prior: 50871053!
test21
	
	| marsRover |
	
	marsRover _ MarsRover at: 1@1 facing: #N.
	
	self should: [marsRover move: 'ffblz'] raise: Error withMessageText: MarsRover invalidCommandErrorDescription! !
!MarsRoverTests methodsFor: 'as yet unclassified' stamp: 'fr 10/24/2020 22:12:17' prior: 50871205!
test21
	
	| marsRover |
	
	marsRover _ MarsRover at: 1@1 facing: #N.
	
	self should: [marsRover move: 'ffblzff'] raise: Error withMessageText: MarsRover invalidCommandErrorDescription! !
!MarsRoverTests methodsFor: 'as yet unclassified' stamp: 'fr 10/24/2020 22:12:34' prior: 50871214!
test21
	
	| marsRover |
	
	marsRover _ MarsRover at: 1@1 facing: #N.
	
	self should: [marsRover move: 'z'] raise: Error withMessageText: MarsRover invalidCommandErrorDescription! !

!testRun: #MarsRoverTests #test21 stamp: 'fr 10/24/2020 22:12:35'!
PASSED!

!testRun: #MarsRoverTests #test01 stamp: 'fr 10/24/2020 22:12:35'!
PASSED!

!testRun: #MarsRoverTests #test02 stamp: 'fr 10/24/2020 22:12:35'!
PASSED!

!testRun: #MarsRoverTests #test03 stamp: 'fr 10/24/2020 22:12:35'!
PASSED!

!testRun: #MarsRoverTests #test04 stamp: 'fr 10/24/2020 22:12:35'!
PASSED!

!testRun: #MarsRoverTests #test05 stamp: 'fr 10/24/2020 22:12:35'!
PASSED!

!testRun: #MarsRoverTests #test06 stamp: 'fr 10/24/2020 22:12:35'!
PASSED!

!testRun: #MarsRoverTests #test07 stamp: 'fr 10/24/2020 22:12:35'!
PASSED!

!testRun: #MarsRoverTests #test08 stamp: 'fr 10/24/2020 22:12:35'!
PASSED!

!testRun: #MarsRoverTests #test09 stamp: 'fr 10/24/2020 22:12:35'!
PASSED!

!testRun: #MarsRoverTests #test10 stamp: 'fr 10/24/2020 22:12:35'!
PASSED!

!testRun: #MarsRoverTests #test11 stamp: 'fr 10/24/2020 22:12:35'!
PASSED!

!testRun: #MarsRoverTests #test13 stamp: 'fr 10/24/2020 22:12:35'!
PASSED!

!testRun: #MarsRoverTests #test14 stamp: 'fr 10/24/2020 22:12:35'!
PASSED!

!testRun: #MarsRoverTests #test15 stamp: 'fr 10/24/2020 22:12:35'!
PASSED!

!testRun: #MarsRoverTests #test16 stamp: 'fr 10/24/2020 22:12:35'!
PASSED!

!testRun: #MarsRoverTests #test17 stamp: 'fr 10/24/2020 22:12:35'!
PASSED!

!testRun: #MarsRoverTests #test18 stamp: 'fr 10/24/2020 22:12:35'!
PASSED!

!testRun: #MarsRoverTests #test19 stamp: 'fr 10/24/2020 22:12:35'!
PASSED!

!testRun: #MarsRoverTests #test20 stamp: 'fr 10/24/2020 22:12:35'!
PASSED!

!testRun: #MarsRoverTests #test21 stamp: 'fr 10/24/2020 22:12:35'!
PASSED!

!testRun: #MarsRoverTests #test21 stamp: 'fr 10/24/2020 22:12:39'!
PASSED!

!testRun: #MarsRoverTests #test01 stamp: 'fr 10/24/2020 22:12:39'!
PASSED!

!testRun: #MarsRoverTests #test02 stamp: 'fr 10/24/2020 22:12:39'!
PASSED!

!testRun: #MarsRoverTests #test03 stamp: 'fr 10/24/2020 22:12:39'!
PASSED!

!testRun: #MarsRoverTests #test04 stamp: 'fr 10/24/2020 22:12:39'!
PASSED!

!testRun: #MarsRoverTests #test05 stamp: 'fr 10/24/2020 22:12:39'!
PASSED!

!testRun: #MarsRoverTests #test06 stamp: 'fr 10/24/2020 22:12:39'!
PASSED!

!testRun: #MarsRoverTests #test07 stamp: 'fr 10/24/2020 22:12:39'!
PASSED!

!testRun: #MarsRoverTests #test08 stamp: 'fr 10/24/2020 22:12:39'!
PASSED!

!testRun: #MarsRoverTests #test09 stamp: 'fr 10/24/2020 22:12:39'!
PASSED!

!testRun: #MarsRoverTests #test10 stamp: 'fr 10/24/2020 22:12:39'!
PASSED!

!testRun: #MarsRoverTests #test11 stamp: 'fr 10/24/2020 22:12:39'!
PASSED!

!testRun: #MarsRoverTests #test13 stamp: 'fr 10/24/2020 22:12:39'!
PASSED!

!testRun: #MarsRoverTests #test14 stamp: 'fr 10/24/2020 22:12:39'!
PASSED!

!testRun: #MarsRoverTests #test15 stamp: 'fr 10/24/2020 22:12:39'!
PASSED!

!testRun: #MarsRoverTests #test16 stamp: 'fr 10/24/2020 22:12:39'!
PASSED!

!testRun: #MarsRoverTests #test17 stamp: 'fr 10/24/2020 22:12:39'!
PASSED!

!testRun: #MarsRoverTests #test18 stamp: 'fr 10/24/2020 22:12:39'!
PASSED!

!testRun: #MarsRoverTests #test19 stamp: 'fr 10/24/2020 22:12:39'!
PASSED!

!testRun: #MarsRoverTests #test20 stamp: 'fr 10/24/2020 22:12:39'!
PASSED!

!testRun: #MarsRoverTests #test21 stamp: 'fr 10/24/2020 22:12:39'!
PASSED!
!MarsRoverTests methodsFor: 'as yet unclassified' stamp: 'fr 10/24/2020 22:12:43'!
test22
	
	| marsRover |
	
	marsRover _ MarsRover at: 1@1 facing: #N.
	
	self should: [marsRover move: 'z'] raise: Error withMessageText: MarsRover invalidCommandErrorDescription! !
!MarsRoverTests methodsFor: 'as yet unclassified' stamp: 'fr 10/24/2020 22:12:53' prior: 50871331!
test22
	
	| marsRover |
	
	marsRover _ MarsRover at: 1@1 facing: #N.
	
	self should: [marsRover move: 'ffblzf'] raise: Error withMessageText: MarsRover invalidCommandErrorDescription! !
!MarsRoverTests methodsFor: 'as yet unclassified' stamp: 'fr 10/24/2020 22:13:04' prior: 50871340!
test22
	
	| marsRover |
	
	marsRover _ MarsRover at: 1@1 facing: #N.
	
	self should: [marsRover move: 'flbzf'] raise: Error withMessageText: MarsRover invalidCommandErrorDescription! !
!MarsRoverTests methodsFor: 'as yet unclassified' stamp: 'fr 10/24/2020 22:13:46' prior: 50871349!
test22
	
	| marsRover |
	
	marsRover _ MarsRover at: 1@1 facing: #N.
	
	self should: [marsRover move: 'flbzf'] raise: Error withMessageText: MarsRover invalidCommandErrorDescription.
	self assert: (marsRover isAt: 2@2 facing: #W)! !
!MarsRoverTests methodsFor: 'as yet unclassified' stamp: 'fr 10/24/2020 22:14:06' prior: 50871358!
test22
	
	| marsRover |
	
	marsRover _ MarsRover at: 1@1 facing: #N.
	
	self should: [marsRover move: 'flbzfr'] raise: Error withMessageText: MarsRover invalidCommandErrorDescription.
	self assert: (marsRover isAt: 2@2 facing: #W)! !

!testRun: #MarsRoverTests #test22 stamp: 'fr 10/24/2020 22:14:21'!
PASSED!

!testRun: #MarsRoverTests #test01 stamp: 'fr 10/24/2020 22:14:21'!
PASSED!

!testRun: #MarsRoverTests #test02 stamp: 'fr 10/24/2020 22:14:21'!
PASSED!

!testRun: #MarsRoverTests #test03 stamp: 'fr 10/24/2020 22:14:21'!
PASSED!

!testRun: #MarsRoverTests #test04 stamp: 'fr 10/24/2020 22:14:21'!
PASSED!

!testRun: #MarsRoverTests #test05 stamp: 'fr 10/24/2020 22:14:21'!
PASSED!

!testRun: #MarsRoverTests #test06 stamp: 'fr 10/24/2020 22:14:21'!
PASSED!

!testRun: #MarsRoverTests #test07 stamp: 'fr 10/24/2020 22:14:21'!
PASSED!

!testRun: #MarsRoverTests #test08 stamp: 'fr 10/24/2020 22:14:21'!
PASSED!

!testRun: #MarsRoverTests #test09 stamp: 'fr 10/24/2020 22:14:21'!
PASSED!

!testRun: #MarsRoverTests #test10 stamp: 'fr 10/24/2020 22:14:21'!
PASSED!

!testRun: #MarsRoverTests #test11 stamp: 'fr 10/24/2020 22:14:21'!
PASSED!

!testRun: #MarsRoverTests #test13 stamp: 'fr 10/24/2020 22:14:22'!
PASSED!

!testRun: #MarsRoverTests #test14 stamp: 'fr 10/24/2020 22:14:22'!
PASSED!

!testRun: #MarsRoverTests #test15 stamp: 'fr 10/24/2020 22:14:22'!
PASSED!

!testRun: #MarsRoverTests #test16 stamp: 'fr 10/24/2020 22:14:22'!
PASSED!

!testRun: #MarsRoverTests #test17 stamp: 'fr 10/24/2020 22:14:22'!
PASSED!

!testRun: #MarsRoverTests #test18 stamp: 'fr 10/24/2020 22:14:22'!
PASSED!

!testRun: #MarsRoverTests #test19 stamp: 'fr 10/24/2020 22:14:22'!
PASSED!

!testRun: #MarsRoverTests #test20 stamp: 'fr 10/24/2020 22:14:22'!
PASSED!

!testRun: #MarsRoverTests #test21 stamp: 'fr 10/24/2020 22:14:22'!
PASSED!

!testRun: #MarsRoverTests #test22 stamp: 'fr 10/24/2020 22:14:22'!
PASSED!
!MarsRoverTests methodsFor: 'setUp' stamp: 'fr 10/24/2020 22:15:12'!
setup
	
	! !

!classDefinition: #MarsRoverTests category: 'MarsRover - Exercise' stamp: 'fr 10/24/2020 22:15:44'!
TestCase subclass: #MarsRoverTests
	instanceVariableNames: 'south'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover - Exercise'!

!classDefinition: #MarsRoverTests category: 'MarsRover - Exercise' stamp: 'fr 10/24/2020 22:15:45'!
TestCase subclass: #MarsRoverTests
	instanceVariableNames: 'south north'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover - Exercise'!

!classDefinition: #MarsRoverTests category: 'MarsRover - Exercise' stamp: 'fr 10/24/2020 22:15:45'!
TestCase subclass: #MarsRoverTests
	instanceVariableNames: 'south north east'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover - Exercise'!

!classDefinition: #MarsRoverTests category: 'MarsRover - Exercise' stamp: 'fr 10/24/2020 22:15:46'!
TestCase subclass: #MarsRoverTests
	instanceVariableNames: 'south north east west'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover - Exercise'!
!MarsRoverTests methodsFor: 'setUp' stamp: 'fr 10/24/2020 22:15:42' prior: 50871431!
setup
	
	south _ #S.
	north _ #N.
	east _ #E.
	west _ #W! !
!MarsRoverTests methodsFor: 'tests' stamp: 'fr 10/24/2020 22:15:58' prior: 50867791!
test01

	| marsRover |
	
	marsRover _ MarsRover at: 1@1 facing: south.
	
	marsRover move: ''.
	
	self assert: (marsRover isAt: 1@1 facing: south)! !

!testRun: #MarsRoverTests #test01 stamp: 'fr 10/24/2020 22:15:59'!
ERROR!

!testRun: #MarsRoverTests #test01 stamp: 'fr 10/24/2020 22:16:13'!
ERROR!

!testRun: #MarsRoverTests #test01 stamp: 'fr 10/24/2020 22:16:13'!
ERROR!
!MarsRoverTests methodsFor: 'tests' stamp: 'fr 10/24/2020 22:16:24' prior: 50871472!
test01

	| marsRover |
	
	marsRover _ MarsRover at: 1@1 facing: #S.
	
	marsRover move: ''.
	
	self assert: (marsRover isAt: 1@1 facing: #S)! !

!testRun: #MarsRoverTests #test01 stamp: 'fr 10/24/2020 22:16:24'!
PASSED!

!testRun: #MarsRoverTests #test01 stamp: 'fr 10/24/2020 22:16:24'!
PASSED!

!testRun: #MarsRoverTests #test02 stamp: 'fr 10/24/2020 22:16:24'!
PASSED!

!testRun: #MarsRoverTests #test03 stamp: 'fr 10/24/2020 22:16:24'!
PASSED!

!testRun: #MarsRoverTests #test04 stamp: 'fr 10/24/2020 22:16:24'!
PASSED!

!testRun: #MarsRoverTests #test05 stamp: 'fr 10/24/2020 22:16:24'!
PASSED!

!testRun: #MarsRoverTests #test06 stamp: 'fr 10/24/2020 22:16:24'!
PASSED!

!testRun: #MarsRoverTests #test07 stamp: 'fr 10/24/2020 22:16:24'!
PASSED!

!testRun: #MarsRoverTests #test08 stamp: 'fr 10/24/2020 22:16:24'!
PASSED!

!testRun: #MarsRoverTests #test09 stamp: 'fr 10/24/2020 22:16:24'!
PASSED!

!testRun: #MarsRoverTests #test10 stamp: 'fr 10/24/2020 22:16:24'!
PASSED!

!testRun: #MarsRoverTests #test11 stamp: 'fr 10/24/2020 22:16:24'!
PASSED!

!testRun: #MarsRoverTests #test13 stamp: 'fr 10/24/2020 22:16:24'!
PASSED!

!testRun: #MarsRoverTests #test14 stamp: 'fr 10/24/2020 22:16:24'!
PASSED!

!testRun: #MarsRoverTests #test15 stamp: 'fr 10/24/2020 22:16:24'!
PASSED!

!testRun: #MarsRoverTests #test16 stamp: 'fr 10/24/2020 22:16:24'!
PASSED!

!testRun: #MarsRoverTests #test17 stamp: 'fr 10/24/2020 22:16:24'!
PASSED!

!testRun: #MarsRoverTests #test18 stamp: 'fr 10/24/2020 22:16:24'!
PASSED!

!testRun: #MarsRoverTests #test19 stamp: 'fr 10/24/2020 22:16:24'!
PASSED!

!testRun: #MarsRoverTests #test20 stamp: 'fr 10/24/2020 22:16:24'!
PASSED!

!testRun: #MarsRoverTests #test21 stamp: 'fr 10/24/2020 22:16:24'!
PASSED!

!testRun: #MarsRoverTests #test22 stamp: 'fr 10/24/2020 22:16:24'!
PASSED!
!MarsRoverTests methodsFor: 'setup' stamp: 'fr 10/24/2020 22:17:16' overrides: 16927572!
setUp
	
	south _ #S.
	north _ #N.
	east _ #E.
	west _ #W! !

!methodRemoval: MarsRoverTests #setup stamp: 'fr 10/24/2020 22:17:19'!
setup
	
	south _ #S.
	north _ #N.
	east _ #E.
	west _ #W!

!testRun: #MarsRoverTests #test01 stamp: 'fr 10/24/2020 22:17:22'!
PASSED!

!testRun: #MarsRoverTests #test02 stamp: 'fr 10/24/2020 22:17:22'!
PASSED!

!testRun: #MarsRoverTests #test03 stamp: 'fr 10/24/2020 22:17:22'!
PASSED!

!testRun: #MarsRoverTests #test04 stamp: 'fr 10/24/2020 22:17:22'!
PASSED!

!testRun: #MarsRoverTests #test05 stamp: 'fr 10/24/2020 22:17:22'!
PASSED!

!testRun: #MarsRoverTests #test06 stamp: 'fr 10/24/2020 22:17:22'!
PASSED!

!testRun: #MarsRoverTests #test07 stamp: 'fr 10/24/2020 22:17:22'!
PASSED!

!testRun: #MarsRoverTests #test08 stamp: 'fr 10/24/2020 22:17:22'!
PASSED!

!testRun: #MarsRoverTests #test09 stamp: 'fr 10/24/2020 22:17:22'!
PASSED!

!testRun: #MarsRoverTests #test10 stamp: 'fr 10/24/2020 22:17:22'!
PASSED!

!testRun: #MarsRoverTests #test11 stamp: 'fr 10/24/2020 22:17:22'!
PASSED!

!testRun: #MarsRoverTests #test13 stamp: 'fr 10/24/2020 22:17:22'!
PASSED!

!testRun: #MarsRoverTests #test14 stamp: 'fr 10/24/2020 22:17:22'!
PASSED!

!testRun: #MarsRoverTests #test15 stamp: 'fr 10/24/2020 22:17:22'!
PASSED!

!testRun: #MarsRoverTests #test16 stamp: 'fr 10/24/2020 22:17:22'!
PASSED!

!testRun: #MarsRoverTests #test17 stamp: 'fr 10/24/2020 22:17:22'!
PASSED!

!testRun: #MarsRoverTests #test18 stamp: 'fr 10/24/2020 22:17:22'!
PASSED!

!testRun: #MarsRoverTests #test19 stamp: 'fr 10/24/2020 22:17:22'!
PASSED!

!testRun: #MarsRoverTests #test20 stamp: 'fr 10/24/2020 22:17:22'!
PASSED!

!testRun: #MarsRoverTests #test21 stamp: 'fr 10/24/2020 22:17:22'!
PASSED!

!testRun: #MarsRoverTests #test22 stamp: 'fr 10/24/2020 22:17:22'!
PASSED!
!MarsRoverTests methodsFor: 'tests' stamp: 'fr 10/24/2020 22:17:32' prior: 50871487!
test01

	| marsRover |
	
	marsRover _ MarsRover at: 1@1 facing: south.
	
	marsRover move: ''.
	
	self assert: (marsRover isAt: 1@1 facing: south)! !

!testRun: #MarsRoverTests #test01 stamp: 'fr 10/24/2020 22:17:32'!
PASSED!

!testRun: #MarsRoverTests #test01 stamp: 'fr 10/24/2020 22:17:32'!
PASSED!

!testRun: #MarsRoverTests #test02 stamp: 'fr 10/24/2020 22:17:32'!
PASSED!

!testRun: #MarsRoverTests #test03 stamp: 'fr 10/24/2020 22:17:32'!
PASSED!

!testRun: #MarsRoverTests #test04 stamp: 'fr 10/24/2020 22:17:32'!
PASSED!

!testRun: #MarsRoverTests #test05 stamp: 'fr 10/24/2020 22:17:32'!
PASSED!

!testRun: #MarsRoverTests #test06 stamp: 'fr 10/24/2020 22:17:32'!
PASSED!

!testRun: #MarsRoverTests #test07 stamp: 'fr 10/24/2020 22:17:32'!
PASSED!

!testRun: #MarsRoverTests #test08 stamp: 'fr 10/24/2020 22:17:32'!
PASSED!

!testRun: #MarsRoverTests #test09 stamp: 'fr 10/24/2020 22:17:32'!
PASSED!

!testRun: #MarsRoverTests #test10 stamp: 'fr 10/24/2020 22:17:32'!
PASSED!

!testRun: #MarsRoverTests #test11 stamp: 'fr 10/24/2020 22:17:32'!
PASSED!

!testRun: #MarsRoverTests #test13 stamp: 'fr 10/24/2020 22:17:32'!
PASSED!

!testRun: #MarsRoverTests #test14 stamp: 'fr 10/24/2020 22:17:32'!
PASSED!

!testRun: #MarsRoverTests #test15 stamp: 'fr 10/24/2020 22:17:32'!
PASSED!

!testRun: #MarsRoverTests #test16 stamp: 'fr 10/24/2020 22:17:32'!
PASSED!

!testRun: #MarsRoverTests #test17 stamp: 'fr 10/24/2020 22:17:32'!
PASSED!

!testRun: #MarsRoverTests #test18 stamp: 'fr 10/24/2020 22:17:32'!
PASSED!

!testRun: #MarsRoverTests #test19 stamp: 'fr 10/24/2020 22:17:32'!
PASSED!

!testRun: #MarsRoverTests #test20 stamp: 'fr 10/24/2020 22:17:32'!
PASSED!

!testRun: #MarsRoverTests #test21 stamp: 'fr 10/24/2020 22:17:32'!
PASSED!

!testRun: #MarsRoverTests #test22 stamp: 'fr 10/24/2020 22:17:32'!
PASSED!
!MarsRoverTests methodsFor: 'tests' stamp: 'fr 10/24/2020 22:17:40' prior: 50868547!
test02

	| marsRover |
	
	marsRover _ MarsRover at: 1@1 facing: south.
	
	marsRover move: 'f'.
	
	self assert: (marsRover isAt: 1@0 facing: south)! !
!MarsRoverTests methodsFor: 'tests' stamp: 'fr 10/24/2020 22:17:47' prior: 50868579!
test03

	| marsRover |
	
	marsRover _ MarsRover at: 1@1 facing: south.
	
	marsRover move: 'b'.
	
	self assert: (marsRover isAt: 1@2 facing: south)! !
!MarsRoverTests methodsFor: 'tests' stamp: 'fr 10/24/2020 22:17:51' prior: 50868611!
test04

	| marsRover |
	
	marsRover _ MarsRover at: 1@1 facing: south.
	
	marsRover move: 'r'.
	
	self assert: (marsRover isAt: 1@1 facing: #W)! !
!MarsRoverTests methodsFor: 'tests' stamp: 'fr 10/24/2020 22:17:55' prior: 50871682!
test04

	| marsRover |
	
	marsRover _ MarsRover at: 1@1 facing: south.
	
	marsRover move: 'r'.
	
	self assert: (marsRover isAt: 1@1 facing: west)! !
!MarsRoverTests methodsFor: 'tests' stamp: 'fr 10/24/2020 22:17:59' prior: 50868669!
test05

	| marsRover |
	
	marsRover _ MarsRover at: 1@1 facing: south.
	
	marsRover move: 'l'.
	
	self assert: (marsRover isAt: 1@1 facing: #E)! !
!MarsRoverTests methodsFor: 'tests' stamp: 'fr 10/24/2020 22:18:01' prior: 50871698!
test05

	| marsRover |
	
	marsRover _ MarsRover at: 1@1 facing: south.
	
	marsRover move: 'l'.
	
	self assert: (marsRover isAt: 1@1 facing: east)! !
!MarsRoverTests methodsFor: 'tests' stamp: 'fr 10/24/2020 22:18:08' prior: 50868749!
test06

	| marsRover |
	
	marsRover _ MarsRover at: 1@1 facing: north.
	
	marsRover move: 'f'.
	
	self assert: (marsRover isAt: 1@2 facing: north)! !
!MarsRoverTests methodsFor: 'tests' stamp: 'fr 10/24/2020 22:18:14' prior: 50868789!
test07

	| marsRover |
	
	marsRover _ MarsRover at: 1@1 facing: north.
	
	marsRover move: 'b'.
	
	self assert: (marsRover isAt: 1@0 facing: north)! !
!MarsRoverTests methodsFor: 'tests' stamp: 'fr 10/24/2020 22:18:23' prior: 50868832!
test08

	| marsRover |
	
	marsRover _ MarsRover at: 1@1 facing: north.
	
	marsRover move: 'l'.
	
	self assert: (marsRover isAt: 1@1 facing: west)! !
!MarsRoverTests methodsFor: 'tests' stamp: 'fr 10/24/2020 22:18:30' prior: 50868973!
test09

	| marsRover |
	
	marsRover _ MarsRover at: 1@1 facing: north.
	
	marsRover move: 'r'.
	
	self assert: (marsRover isAt: 1@1 facing: east)! !
!MarsRoverTests methodsFor: 'tests' stamp: 'fr 10/24/2020 22:18:36' prior: 50868965!
test10

	| marsRover |
	
	marsRover _ MarsRover at: 1@1 facing: east.
	
	marsRover move: 'f'.
	
	self assert: (marsRover isAt: 2@1 facing: east)! !
!MarsRoverTests methodsFor: 'tests' stamp: 'fr 10/24/2020 22:18:42' prior: 50869023!
test11

	| marsRover |
	
	marsRover _ MarsRover at: 1@1 facing: east.
	
	marsRover move: 'b'.
	
	self assert: (marsRover isAt: 0@1 facing: east)! !
!MarsRoverTests methodsFor: 'tests' stamp: 'fr 10/24/2020 22:18:48' prior: 50869148!
test13

	| marsRover |
	
	marsRover _ MarsRover at: 1@1 facing: east.
	
	marsRover move: 'l'.
	
	self assert: (marsRover isAt: 1@1 facing: north)! !
!MarsRoverTests methodsFor: 'tests' stamp: 'fr 10/24/2020 22:18:56' prior: 50869384!
test14

	| marsRover |
	
	marsRover _ MarsRover at: 1@1 facing: east.
	
	marsRover move: 'r'.
	
	self assert: (marsRover isAt: 1@1 facing: south)! !
!MarsRoverTests methodsFor: 'tests' stamp: 'fr 10/24/2020 22:19:05' prior: 50869476!
test15

	| marsRover |
	
	marsRover _ MarsRover at: 1@1 facing: west.
	
	marsRover move: 'f'.
	
	self assert: (marsRover isAt: 0@1 facing: west)! !
!MarsRoverTests methodsFor: 'tests' stamp: 'fr 10/24/2020 22:19:11' prior: 50869611!
test16

	| marsRover |
	
	marsRover _ MarsRover at: 1@1 facing: west.
	
	marsRover move: 'b'.
	
	self assert: (marsRover isAt: 2@1 facing: west)! !
!MarsRoverTests methodsFor: 'tests' stamp: 'fr 10/24/2020 22:19:15' prior: 50869712!
test17

	| marsRover |
	
	marsRover _ MarsRover at: 1@1 facing: west.
	
	marsRover move: 'l'.
	
	self assert: (marsRover isAt: 1@1 facing: #S)! !
!MarsRoverTests methodsFor: 'tests' stamp: 'fr 10/24/2020 22:19:18' prior: 50871794!
test17

	| marsRover |
	
	marsRover _ MarsRover at: 1@1 facing: west.
	
	marsRover move: 'l'.
	
	self assert: (marsRover isAt: 1@1 facing: south)! !
!MarsRoverTests methodsFor: 'tests' stamp: 'fr 10/24/2020 22:19:25' prior: 50869809!
test18

	| marsRover |
	
	marsRover _ MarsRover at: 1@1 facing: west.
	
	marsRover move: 'r'.
	
	self assert: (marsRover isAt: 1@1 facing: north)! !
!MarsRoverTests methodsFor: 'tests' stamp: 'fr 10/24/2020 22:19:31' prior: 50870555!
test19

	| marsRover |
	
	marsRover _ MarsRover at: 1@1 facing: north.
	
	marsRover move: 'flf'.
	
	self assert: (marsRover isAt: 0@2 facing: west)! !
!MarsRoverTests methodsFor: 'tests' stamp: 'fr 10/24/2020 22:19:38' prior: 50871223!
test21
	
	| marsRover |
	
	marsRover _ MarsRover at: 1@1 facing: north.
	
	self should: [marsRover move: 'z'] raise: Error withMessageText: MarsRover invalidCommandErrorDescription! !
!MarsRoverTests methodsFor: 'tests' stamp: 'fr 10/24/2020 22:19:44' prior: 50871369!
test22
	
	| marsRover |
	
	marsRover _ MarsRover at: 1@1 facing: north.
	
	self should: [marsRover move: 'flbzfr'] raise: Error withMessageText: MarsRover invalidCommandErrorDescription.
	self assert: (marsRover isAt: 2@2 facing: west)! !

!testRun: #MarsRoverTests #test22 stamp: 'fr 10/24/2020 22:19:46'!
PASSED!

!testRun: #MarsRoverTests #test01 stamp: 'fr 10/24/2020 22:19:48'!
PASSED!

!testRun: #MarsRoverTests #test02 stamp: 'fr 10/24/2020 22:19:48'!
PASSED!

!testRun: #MarsRoverTests #test03 stamp: 'fr 10/24/2020 22:19:48'!
PASSED!

!testRun: #MarsRoverTests #test04 stamp: 'fr 10/24/2020 22:19:48'!
PASSED!

!testRun: #MarsRoverTests #test05 stamp: 'fr 10/24/2020 22:19:48'!
PASSED!

!testRun: #MarsRoverTests #test06 stamp: 'fr 10/24/2020 22:19:48'!
PASSED!

!testRun: #MarsRoverTests #test07 stamp: 'fr 10/24/2020 22:19:48'!
PASSED!

!testRun: #MarsRoverTests #test08 stamp: 'fr 10/24/2020 22:19:48'!
PASSED!

!testRun: #MarsRoverTests #test09 stamp: 'fr 10/24/2020 22:19:48'!
PASSED!

!testRun: #MarsRoverTests #test10 stamp: 'fr 10/24/2020 22:19:48'!
PASSED!

!testRun: #MarsRoverTests #test11 stamp: 'fr 10/24/2020 22:19:48'!
PASSED!

!testRun: #MarsRoverTests #test13 stamp: 'fr 10/24/2020 22:19:48'!
PASSED!

!testRun: #MarsRoverTests #test14 stamp: 'fr 10/24/2020 22:19:48'!
PASSED!

!testRun: #MarsRoverTests #test15 stamp: 'fr 10/24/2020 22:19:48'!
PASSED!

!testRun: #MarsRoverTests #test16 stamp: 'fr 10/24/2020 22:19:48'!
PASSED!

!testRun: #MarsRoverTests #test17 stamp: 'fr 10/24/2020 22:19:48'!
PASSED!

!testRun: #MarsRoverTests #test18 stamp: 'fr 10/24/2020 22:19:48'!
PASSED!

!testRun: #MarsRoverTests #test19 stamp: 'fr 10/24/2020 22:19:48'!
PASSED!

!testRun: #MarsRoverTests #test20 stamp: 'fr 10/24/2020 22:19:48'!
PASSED!

!testRun: #MarsRoverTests #test21 stamp: 'fr 10/24/2020 22:19:48'!
PASSED!

!testRun: #MarsRoverTests #test22 stamp: 'fr 10/24/2020 22:19:48'!
PASSED!
!MarsRoverTests methodsFor: 'tests' stamp: 'fr 10/24/2020 22:23:58'!
test01EmptyCommandListDoesNothing

	| marsRover |
	
	marsRover _ MarsRover at: 1@1 facing: south.
	
	marsRover move: ''.
	
	self assert: (marsRover isAt: 1@1 facing: south)! !

!methodRemoval: MarsRoverTests #test01 stamp: 'fr 10/24/2020 22:23:58'!
test01

	| marsRover |
	
	marsRover _ MarsRover at: 1@1 facing: south.
	
	marsRover move: ''.
	
	self assert: (marsRover isAt: 1@1 facing: south)!
!MarsRoverTests methodsFor: 'tests' stamp: 'fr 10/24/2020 22:24:25'!
test02MovingForwardWorksProperlyOnYAxis

	| marsRover |
	
	marsRover _ MarsRover at: 1@1 facing: south.
	
	marsRover move: 'f'.
	
	self assert: (marsRover isAt: 1@0 facing: south)! !

!methodRemoval: MarsRoverTests #test02 stamp: 'fr 10/24/2020 22:24:25'!
test02

	| marsRover |
	
	marsRover _ MarsRover at: 1@1 facing: south.
	
	marsRover move: 'f'.
	
	self assert: (marsRover isAt: 1@0 facing: south)!
!MarsRoverTests methodsFor: 'tests' stamp: 'fr 10/24/2020 22:24:51'!
test03MovingBackwardsWorksProperlyOnYAxis

	| marsRover |
	
	marsRover _ MarsRover at: 1@1 facing: south.
	
	marsRover move: 'b'.
	
	self assert: (marsRover isAt: 1@2 facing: south)! !

!methodRemoval: MarsRoverTests #test03 stamp: 'fr 10/24/2020 22:24:51'!
test03

	| marsRover |
	
	marsRover _ MarsRover at: 1@1 facing: south.
	
	marsRover move: 'b'.
	
	self assert: (marsRover isAt: 1@2 facing: south)!

!testRun: #MarsRoverTests #test03MovingBackwardsWorksProperlyOnYAxis stamp: 'fr 10/24/2020 22:24:54'!
PASSED!

!testRun: #MarsRoverTests #test01EmptyCommandListDoesNothing stamp: 'fr 10/24/2020 22:24:55'!
PASSED!

!testRun: #MarsRoverTests #test02MovingForwardWorksProperlyOnYAxis stamp: 'fr 10/24/2020 22:24:55'!
PASSED!

!testRun: #MarsRoverTests #test03MovingBackwardsWorksProperlyOnYAxis stamp: 'fr 10/24/2020 22:24:55'!
PASSED!

!testRun: #MarsRoverTests #test04 stamp: 'fr 10/24/2020 22:24:55'!
PASSED!

!testRun: #MarsRoverTests #test05 stamp: 'fr 10/24/2020 22:24:55'!
PASSED!

!testRun: #MarsRoverTests #test06 stamp: 'fr 10/24/2020 22:24:55'!
PASSED!

!testRun: #MarsRoverTests #test07 stamp: 'fr 10/24/2020 22:24:55'!
PASSED!

!testRun: #MarsRoverTests #test08 stamp: 'fr 10/24/2020 22:24:55'!
PASSED!

!testRun: #MarsRoverTests #test09 stamp: 'fr 10/24/2020 22:24:55'!
PASSED!

!testRun: #MarsRoverTests #test10 stamp: 'fr 10/24/2020 22:24:55'!
PASSED!

!testRun: #MarsRoverTests #test11 stamp: 'fr 10/24/2020 22:24:55'!
PASSED!

!testRun: #MarsRoverTests #test13 stamp: 'fr 10/24/2020 22:24:55'!
PASSED!

!testRun: #MarsRoverTests #test14 stamp: 'fr 10/24/2020 22:24:55'!
PASSED!

!testRun: #MarsRoverTests #test15 stamp: 'fr 10/24/2020 22:24:55'!
PASSED!

!testRun: #MarsRoverTests #test16 stamp: 'fr 10/24/2020 22:24:55'!
PASSED!

!testRun: #MarsRoverTests #test17 stamp: 'fr 10/24/2020 22:24:55'!
PASSED!

!testRun: #MarsRoverTests #test18 stamp: 'fr 10/24/2020 22:24:55'!
PASSED!

!testRun: #MarsRoverTests #test19 stamp: 'fr 10/24/2020 22:24:55'!
PASSED!

!testRun: #MarsRoverTests #test20 stamp: 'fr 10/24/2020 22:24:55'!
PASSED!

!testRun: #MarsRoverTests #test21 stamp: 'fr 10/24/2020 22:24:55'!
PASSED!

!testRun: #MarsRoverTests #test22 stamp: 'fr 10/24/2020 22:24:55'!
PASSED!
!MarsRoverTests methodsFor: 'tests' stamp: 'fr 10/24/2020 22:25:38'!
test04RotatingRightWorksProperly

	| marsRover |
	
	marsRover _ MarsRover at: 1@1 facing: south.
	
	marsRover move: 'r'.
	
	self assert: (marsRover isAt: 1@1 facing: west)! !

!methodRemoval: MarsRoverTests #test04 stamp: 'fr 10/24/2020 22:25:38'!
test04

	| marsRover |
	
	marsRover _ MarsRover at: 1@1 facing: south.
	
	marsRover move: 'r'.
	
	self assert: (marsRover isAt: 1@1 facing: west)!
!MarsRoverTests methodsFor: 'tests' stamp: 'fr 10/24/2020 22:25:54'!
test05RotatingLeftWorksProperly

	| marsRover |
	
	marsRover _ MarsRover at: 1@1 facing: south.
	
	marsRover move: 'l'.
	
	self assert: (marsRover isAt: 1@1 facing: east)! !

!methodRemoval: MarsRoverTests #test05 stamp: 'fr 10/24/2020 22:25:54'!
test05

	| marsRover |
	
	marsRover _ MarsRover at: 1@1 facing: south.
	
	marsRover move: 'l'.
	
	self assert: (marsRover isAt: 1@1 facing: east)!

!methodRemoval: MarsRoverTests #test06 stamp: 'fr 10/24/2020 22:26:01'!
test06

	| marsRover |
	
	marsRover _ MarsRover at: 1@1 facing: north.
	
	marsRover move: 'f'.
	
	self assert: (marsRover isAt: 1@2 facing: north)!

!methodRemoval: MarsRoverTests #test07 stamp: 'fr 10/24/2020 22:26:36'!
test07

	| marsRover |
	
	marsRover _ MarsRover at: 1@1 facing: north.
	
	marsRover move: 'b'.
	
	self assert: (marsRover isAt: 1@0 facing: north)!

!methodRemoval: MarsRoverTests #test08 stamp: 'fr 10/24/2020 22:26:43'!
test08

	| marsRover |
	
	marsRover _ MarsRover at: 1@1 facing: north.
	
	marsRover move: 'l'.
	
	self assert: (marsRover isAt: 1@1 facing: west)!

!methodRemoval: MarsRoverTests #test09 stamp: 'fr 10/24/2020 22:26:45'!
test09

	| marsRover |
	
	marsRover _ MarsRover at: 1@1 facing: north.
	
	marsRover move: 'r'.
	
	self assert: (marsRover isAt: 1@1 facing: east)!
!MarsRoverTests methodsFor: 'tests' stamp: 'fr 10/24/2020 22:27:06'!
test6MovingForwardWorksProperlyOnXAxis

	| marsRover |
	
	marsRover _ MarsRover at: 1@1 facing: east.
	
	marsRover move: 'f'.
	
	self assert: (marsRover isAt: 2@1 facing: east)! !

!methodRemoval: MarsRoverTests #test10 stamp: 'fr 10/24/2020 22:27:06'!
test10

	| marsRover |
	
	marsRover _ MarsRover at: 1@1 facing: east.
	
	marsRover move: 'f'.
	
	self assert: (marsRover isAt: 2@1 facing: east)!
!MarsRoverTests methodsFor: 'tests' stamp: 'fr 10/24/2020 22:27:15'!
test06MovingForwardWorksProperlyOnXAxis

	| marsRover |
	
	marsRover _ MarsRover at: 1@1 facing: east.
	
	marsRover move: 'f'.
	
	self assert: (marsRover isAt: 2@1 facing: east)! !

!methodRemoval: MarsRoverTests #test6MovingForwardWorksProperlyOnXAxis stamp: 'fr 10/24/2020 22:27:15'!
test6MovingForwardWorksProperlyOnXAxis

	| marsRover |
	
	marsRover _ MarsRover at: 1@1 facing: east.
	
	marsRover move: 'f'.
	
	self assert: (marsRover isAt: 2@1 facing: east)!
!MarsRoverTests methodsFor: 'tests' stamp: 'fr 10/24/2020 22:27:43'!
test11MovingBackwardsWorksProperlyOnXAxis

	| marsRover |
	
	marsRover _ MarsRover at: 1@1 facing: east.
	
	marsRover move: 'b'.
	
	self assert: (marsRover isAt: 0@1 facing: east)! !

!methodRemoval: MarsRoverTests #test11 stamp: 'fr 10/24/2020 22:27:43'!
test11

	| marsRover |
	
	marsRover _ MarsRover at: 1@1 facing: east.
	
	marsRover move: 'b'.
	
	self assert: (marsRover isAt: 0@1 facing: east)!
!MarsRoverTests methodsFor: 'tests' stamp: 'fr 10/24/2020 22:27:49'!
test07MovingBackwardsWorksProperlyOnXAxis

	| marsRover |
	
	marsRover _ MarsRover at: 1@1 facing: east.
	
	marsRover move: 'b'.
	
	self assert: (marsRover isAt: 0@1 facing: east)! !

!methodRemoval: MarsRoverTests #test11MovingBackwardsWorksProperlyOnXAxis stamp: 'fr 10/24/2020 22:27:49'!
test11MovingBackwardsWorksProperlyOnXAxis

	| marsRover |
	
	marsRover _ MarsRover at: 1@1 facing: east.
	
	marsRover move: 'b'.
	
	self assert: (marsRover isAt: 0@1 facing: east)!

!methodRemoval: MarsRoverTests #test13 stamp: 'fr 10/24/2020 22:28:25'!
test13

	| marsRover |
	
	marsRover _ MarsRover at: 1@1 facing: east.
	
	marsRover move: 'l'.
	
	self assert: (marsRover isAt: 1@1 facing: north)!

!methodRemoval: MarsRoverTests #test14 stamp: 'fr 10/24/2020 22:28:27'!
test14

	| marsRover |
	
	marsRover _ MarsRover at: 1@1 facing: east.
	
	marsRover move: 'r'.
	
	self assert: (marsRover isAt: 1@1 facing: south)!

!methodRemoval: MarsRoverTests #test15 stamp: 'fr 10/24/2020 22:28:30'!
test15

	| marsRover |
	
	marsRover _ MarsRover at: 1@1 facing: west.
	
	marsRover move: 'f'.
	
	self assert: (marsRover isAt: 0@1 facing: west)!

!methodRemoval: MarsRoverTests #test16 stamp: 'fr 10/24/2020 22:28:32'!
test16

	| marsRover |
	
	marsRover _ MarsRover at: 1@1 facing: west.
	
	marsRover move: 'b'.
	
	self assert: (marsRover isAt: 2@1 facing: west)!

!methodRemoval: MarsRoverTests #test17 stamp: 'fr 10/24/2020 22:28:33'!
test17

	| marsRover |
	
	marsRover _ MarsRover at: 1@1 facing: west.
	
	marsRover move: 'l'.
	
	self assert: (marsRover isAt: 1@1 facing: south)!

!methodRemoval: MarsRoverTests #test18 stamp: 'fr 10/24/2020 22:28:35'!
test18

	| marsRover |
	
	marsRover _ MarsRover at: 1@1 facing: west.
	
	marsRover move: 'r'.
	
	self assert: (marsRover isAt: 1@1 facing: north)!
!MarsRoverTests methodsFor: 'tests' stamp: 'fr 10/24/2020 22:29:05'!
test08CommandListWithMoreThanOneCommandExecutesProperly

	| marsRover |
	
	marsRover _ MarsRover at: 1@1 facing: north.
	
	marsRover move: 'flf'.
	
	self assert: (marsRover isAt: 0@2 facing: west)! !

!methodRemoval: MarsRoverTests #test19 stamp: 'fr 10/24/2020 22:29:05'!
test19

	| marsRover |
	
	marsRover _ MarsRover at: 1@1 facing: north.
	
	marsRover move: 'flf'.
	
	self assert: (marsRover isAt: 0@2 facing: west)!
!MarsRoverTests methodsFor: 'tests' stamp: 'fr 10/24/2020 22:31:41'!
test09CreatingAMarsRoverWithAnInvalidCardinalPointFails

	self should: [MarsRover at: 1@1 facing: #F] raise: Error withMessageText: MarsRover invalidCardinalPointErrorDescription! !

!methodRemoval: MarsRoverTests #test20 stamp: 'fr 10/24/2020 22:31:41'!
test20

	self should: [MarsRover at: 1@1 facing: #F] raise: Error withMessageText: MarsRover invalidCardinalPointErrorDescription!
!MarsRoverTests methodsFor: 'tests' stamp: 'fr 10/24/2020 22:32:01'!
test09CreatingAMarsRoverWithAnInvalidCardinalPointShouldFail

	self should: [MarsRover at: 1@1 facing: #F] raise: Error withMessageText: MarsRover invalidCardinalPointErrorDescription! !

!methodRemoval: MarsRoverTests #test09CreatingAMarsRoverWithAnInvalidCardinalPointFails stamp: 'fr 10/24/2020 22:32:01'!
test09CreatingAMarsRoverWithAnInvalidCardinalPointFails

	self should: [MarsRover at: 1@1 facing: #F] raise: Error withMessageText: MarsRover invalidCardinalPointErrorDescription!

!methodRemoval: MarsRoverTests #test21 stamp: 'fr 10/24/2020 22:32:25'!
test21
	
	| marsRover |
	
	marsRover _ MarsRover at: 1@1 facing: north.
	
	self should: [marsRover move: 'z'] raise: Error withMessageText: MarsRover invalidCommandErrorDescription!
!MarsRoverTests methodsFor: 'tests' stamp: 'fr 10/24/2020 22:35:44'!
test10CommandListWithAnInvalidCommandShouldExecuteUntilItsFoundAndNoFurther
	
	| marsRover |
	
	marsRover _ MarsRover at: 1@1 facing: north.
	
	self should: [marsRover move: 'flbzfr'] raise: Error withMessageText: MarsRover invalidCommandErrorDescription.
	self assert: (marsRover isAt: 2@2 facing: west)! !

!methodRemoval: MarsRoverTests #test22 stamp: 'fr 10/24/2020 22:35:44'!
test22
	
	| marsRover |
	
	marsRover _ MarsRover at: 1@1 facing: north.
	
	self should: [marsRover move: 'flbzfr'] raise: Error withMessageText: MarsRover invalidCommandErrorDescription.
	self assert: (marsRover isAt: 2@2 facing: west)!

!testRun: #MarsRoverTests #test01EmptyCommandListDoesNothing stamp: 'fr 10/24/2020 22:35:58'!
PASSED!

!testRun: #MarsRoverTests #test02MovingForwardWorksProperlyOnYAxis stamp: 'fr 10/24/2020 22:35:58'!
PASSED!

!testRun: #MarsRoverTests #test03MovingBackwardsWorksProperlyOnYAxis stamp: 'fr 10/24/2020 22:35:58'!
PASSED!

!testRun: #MarsRoverTests #test04RotatingRightWorksProperly stamp: 'fr 10/24/2020 22:35:58'!
PASSED!

!testRun: #MarsRoverTests #test05RotatingLeftWorksProperly stamp: 'fr 10/24/2020 22:35:58'!
PASSED!

!testRun: #MarsRoverTests #test06MovingForwardWorksProperlyOnXAxis stamp: 'fr 10/24/2020 22:35:58'!
PASSED!

!testRun: #MarsRoverTests #test07MovingBackwardsWorksProperlyOnXAxis stamp: 'fr 10/24/2020 22:35:58'!
PASSED!

!testRun: #MarsRoverTests #test08CommandListWithMoreThanOneCommandExecutesProperly stamp: 'fr 10/24/2020 22:35:58'!
PASSED!

!testRun: #MarsRoverTests #test09CreatingAMarsRoverWithAnInvalidCardinalPointShouldFail stamp: 'fr 10/24/2020 22:35:58'!
PASSED!

!testRun: #MarsRoverTests #test10CommandListWithAnInvalidCommandShouldExecuteUntilItsFoundAndNoFurther stamp: 'fr 10/24/2020 22:35:58'!
PASSED!

!testRun: #MarsRoverTests #test01EmptyCommandListDoesNothing stamp: 'fr 10/24/2020 22:36:00'!
PASSED!

!testRun: #MarsRoverTests #test02MovingForwardWorksProperlyOnYAxis stamp: 'fr 10/24/2020 22:36:00'!
PASSED!

!testRun: #MarsRoverTests #test03MovingBackwardsWorksProperlyOnYAxis stamp: 'fr 10/24/2020 22:36:00'!
PASSED!

!testRun: #MarsRoverTests #test04RotatingRightWorksProperly stamp: 'fr 10/24/2020 22:36:00'!
PASSED!

!testRun: #MarsRoverTests #test05RotatingLeftWorksProperly stamp: 'fr 10/24/2020 22:36:00'!
PASSED!

!testRun: #MarsRoverTests #test06MovingForwardWorksProperlyOnXAxis stamp: 'fr 10/24/2020 22:36:00'!
PASSED!

!testRun: #MarsRoverTests #test07MovingBackwardsWorksProperlyOnXAxis stamp: 'fr 10/24/2020 22:36:00'!
PASSED!

!testRun: #MarsRoverTests #test08CommandListWithMoreThanOneCommandExecutesProperly stamp: 'fr 10/24/2020 22:36:00'!
PASSED!

!testRun: #MarsRoverTests #test09CreatingAMarsRoverWithAnInvalidCardinalPointShouldFail stamp: 'fr 10/24/2020 22:36:00'!
PASSED!

!testRun: #MarsRoverTests #test10CommandListWithAnInvalidCommandShouldExecuteUntilItsFoundAndNoFurther stamp: 'fr 10/24/2020 22:36:00'!
PASSED!

!testRun: #MarsRoverTests #test01EmptyCommandListDoesNothing stamp: 'fr 10/24/2020 22:36:01'!
PASSED!

!testRun: #MarsRoverTests #test02MovingForwardWorksProperlyOnYAxis stamp: 'fr 10/24/2020 22:36:01'!
PASSED!

!testRun: #MarsRoverTests #test03MovingBackwardsWorksProperlyOnYAxis stamp: 'fr 10/24/2020 22:36:01'!
PASSED!

!testRun: #MarsRoverTests #test04RotatingRightWorksProperly stamp: 'fr 10/24/2020 22:36:01'!
PASSED!

!testRun: #MarsRoverTests #test05RotatingLeftWorksProperly stamp: 'fr 10/24/2020 22:36:01'!
PASSED!

!testRun: #MarsRoverTests #test06MovingForwardWorksProperlyOnXAxis stamp: 'fr 10/24/2020 22:36:01'!
PASSED!

!testRun: #MarsRoverTests #test07MovingBackwardsWorksProperlyOnXAxis stamp: 'fr 10/24/2020 22:36:01'!
PASSED!

!testRun: #MarsRoverTests #test08CommandListWithMoreThanOneCommandExecutesProperly stamp: 'fr 10/24/2020 22:36:01'!
PASSED!

!testRun: #MarsRoverTests #test09CreatingAMarsRoverWithAnInvalidCardinalPointShouldFail stamp: 'fr 10/24/2020 22:36:01'!
PASSED!

!testRun: #MarsRoverTests #test10CommandListWithAnInvalidCommandShouldExecuteUntilItsFoundAndNoFurther stamp: 'fr 10/24/2020 22:36:01'!
PASSED!

!testRun: #MarsRoverTests #test01EmptyCommandListDoesNothing stamp: 'fr 10/24/2020 22:36:03'!
PASSED!

!testRun: #MarsRoverTests #test02MovingForwardWorksProperlyOnYAxis stamp: 'fr 10/24/2020 22:36:03'!
PASSED!

!testRun: #MarsRoverTests #test03MovingBackwardsWorksProperlyOnYAxis stamp: 'fr 10/24/2020 22:36:03'!
PASSED!

!testRun: #MarsRoverTests #test04RotatingRightWorksProperly stamp: 'fr 10/24/2020 22:36:03'!
PASSED!

!testRun: #MarsRoverTests #test05RotatingLeftWorksProperly stamp: 'fr 10/24/2020 22:36:03'!
PASSED!

!testRun: #MarsRoverTests #test06MovingForwardWorksProperlyOnXAxis stamp: 'fr 10/24/2020 22:36:03'!
PASSED!

!testRun: #MarsRoverTests #test07MovingBackwardsWorksProperlyOnXAxis stamp: 'fr 10/24/2020 22:36:03'!
PASSED!

!testRun: #MarsRoverTests #test08CommandListWithMoreThanOneCommandExecutesProperly stamp: 'fr 10/24/2020 22:36:03'!
PASSED!

!testRun: #MarsRoverTests #test09CreatingAMarsRoverWithAnInvalidCardinalPointShouldFail stamp: 'fr 10/24/2020 22:36:03'!
PASSED!

!testRun: #MarsRoverTests #test10CommandListWithAnInvalidCommandShouldExecuteUntilItsFoundAndNoFurther stamp: 'fr 10/24/2020 22:36:03'!
PASSED!

!testRun: #MarsRoverTests #test01EmptyCommandListDoesNothing stamp: 'fr 10/24/2020 22:36:20'!
PASSED!

!testRun: #MarsRoverTests #test02MovingForwardWorksProperlyOnYAxis stamp: 'fr 10/24/2020 22:36:20'!
PASSED!

!testRun: #MarsRoverTests #test03MovingBackwardsWorksProperlyOnYAxis stamp: 'fr 10/24/2020 22:36:20'!
PASSED!

!testRun: #MarsRoverTests #test04RotatingRightWorksProperly stamp: 'fr 10/24/2020 22:36:20'!
PASSED!

!testRun: #MarsRoverTests #test05RotatingLeftWorksProperly stamp: 'fr 10/24/2020 22:36:20'!
PASSED!

!testRun: #MarsRoverTests #test06MovingForwardWorksProperlyOnXAxis stamp: 'fr 10/24/2020 22:36:20'!
PASSED!

!testRun: #MarsRoverTests #test07MovingBackwardsWorksProperlyOnXAxis stamp: 'fr 10/24/2020 22:36:20'!
PASSED!

!testRun: #MarsRoverTests #test08CommandListWithMoreThanOneCommandExecutesProperly stamp: 'fr 10/24/2020 22:36:20'!
PASSED!

!testRun: #MarsRoverTests #test09CreatingAMarsRoverWithAnInvalidCardinalPointShouldFail stamp: 'fr 10/24/2020 22:36:20'!
PASSED!

!testRun: #MarsRoverTests #test10CommandListWithAnInvalidCommandShouldExecuteUntilItsFoundAndNoFurther stamp: 'fr 10/24/2020 22:36:20'!
PASSED!

----SNAPSHOT----(24 October 2020 22:36:49) CuisUniversity-4384.image priorSource: 17247981!

----SNAPSHOT----(24 October 2020 22:49:45) CuisUniversity-4384.image priorSource: 17304651!

----SNAPSHOT----(24 October 2020 22:49:54) CuisUniversity-4384.image priorSource: 17304744!

----QUIT----(24 October 2020 22:51:02) CuisUniversity-4384.image priorSource: 17304837!

----STARTUP---- (25 October 2020 06:12:22) as /home/fede/Documentos/Facultad/Inge1/Cuises/katas/linux64/CuisUniversity-4384.image!

!MarsRover methodsFor: 'movement' stamp: 'fr 10/25/2020 06:13:18' prior: 50871142!
process: aCommand

	aCommand = $f ifTrue: [^orientation moveForward].
	aCommand = $b ifTrue: [^orientation moveBackwards].
	aCommand = $l ifTrue: [^orientation rotateLeft].
	aCommand = $r ifTrue: [^orientation rotateRight].
	
	self error: self class invalidCommandErrorDescription ! !

----SNAPSHOT----(25 October 2020 06:13:32) CuisUniversity-4384.image priorSource: 17304930!

----QUIT----(25 October 2020 06:13:57) CuisUniversity-4384.image priorSource: 17305532!

----STARTUP---- (25 October 2020 17:18:44) as /home/fede/Documentos/Facultad/Inge1/Cuises/katas/linux64/CuisUniversity-4384.image!


!testRun: #MarsRoverTests #test06MovingForwardWorksProperlyOnXAxis stamp: 'fr 10/25/2020 17:19:40'!
PASSED!

!testRun: #MarsRoverTests #test01EmptyCommandListDoesNothing stamp: 'fr 10/25/2020 17:19:42'!
PASSED!

!testRun: #MarsRoverTests #test02MovingForwardWorksProperlyOnYAxis stamp: 'fr 10/25/2020 17:19:42'!
PASSED!

!testRun: #MarsRoverTests #test03MovingBackwardsWorksProperlyOnYAxis stamp: 'fr 10/25/2020 17:19:42'!
PASSED!

!testRun: #MarsRoverTests #test04RotatingRightWorksProperly stamp: 'fr 10/25/2020 17:19:42'!
PASSED!

!testRun: #MarsRoverTests #test05RotatingLeftWorksProperly stamp: 'fr 10/25/2020 17:19:42'!
PASSED!

!testRun: #MarsRoverTests #test06MovingForwardWorksProperlyOnXAxis stamp: 'fr 10/25/2020 17:19:42'!
PASSED!

!testRun: #MarsRoverTests #test07MovingBackwardsWorksProperlyOnXAxis stamp: 'fr 10/25/2020 17:19:42'!
PASSED!

!testRun: #MarsRoverTests #test08CommandListWithMoreThanOneCommandExecutesProperly stamp: 'fr 10/25/2020 17:19:42'!
PASSED!

!testRun: #MarsRoverTests #test09CreatingAMarsRoverWithAnInvalidCardinalPointShouldFail stamp: 'fr 10/25/2020 17:19:42'!
PASSED!

!testRun: #MarsRoverTests #test10CommandListWithAnInvalidCommandShouldExecuteUntilItsFoundAndNoFurther stamp: 'fr 10/25/2020 17:19:42'!
PASSED!

!testRun: #MarsRoverTests #test01EmptyCommandListDoesNothing stamp: 'fr 10/25/2020 17:19:46'!
PASSED!

!testRun: #MarsRoverTests #test02MovingForwardWorksProperlyOnYAxis stamp: 'fr 10/25/2020 17:19:46'!
PASSED!

!testRun: #MarsRoverTests #test03MovingBackwardsWorksProperlyOnYAxis stamp: 'fr 10/25/2020 17:19:46'!
PASSED!

!testRun: #MarsRoverTests #test04RotatingRightWorksProperly stamp: 'fr 10/25/2020 17:19:46'!
PASSED!

!testRun: #MarsRoverTests #test05RotatingLeftWorksProperly stamp: 'fr 10/25/2020 17:19:46'!
PASSED!

!testRun: #MarsRoverTests #test06MovingForwardWorksProperlyOnXAxis stamp: 'fr 10/25/2020 17:19:46'!
PASSED!

!testRun: #MarsRoverTests #test07MovingBackwardsWorksProperlyOnXAxis stamp: 'fr 10/25/2020 17:19:46'!
PASSED!

!testRun: #MarsRoverTests #test08CommandListWithMoreThanOneCommandExecutesProperly stamp: 'fr 10/25/2020 17:19:46'!
PASSED!

!testRun: #MarsRoverTests #test09CreatingAMarsRoverWithAnInvalidCardinalPointShouldFail stamp: 'fr 10/25/2020 17:19:46'!
PASSED!

!testRun: #MarsRoverTests #test10CommandListWithAnInvalidCommandShouldExecuteUntilItsFoundAndNoFurther stamp: 'fr 10/25/2020 17:19:46'!
PASSED!

----STARTUP---- (25 October 2020 17:20:00) as /home/fede/Documentos/Facultad/Inge1/Cuises/katas/linux64/CuisUniversity-4384.image!


!testRun: #MarsRoverTests #test01EmptyCommandListDoesNothing stamp: 'fr 10/25/2020 17:20:04'!
PASSED!

!testRun: #MarsRoverTests #test02MovingForwardWorksProperlyOnYAxis stamp: 'fr 10/25/2020 17:20:04'!
PASSED!

!testRun: #MarsRoverTests #test03MovingBackwardsWorksProperlyOnYAxis stamp: 'fr 10/25/2020 17:20:04'!
PASSED!

!testRun: #MarsRoverTests #test04RotatingRightWorksProperly stamp: 'fr 10/25/2020 17:20:04'!
PASSED!

!testRun: #MarsRoverTests #test05RotatingLeftWorksProperly stamp: 'fr 10/25/2020 17:20:04'!
PASSED!

!testRun: #MarsRoverTests #test06MovingForwardWorksProperlyOnXAxis stamp: 'fr 10/25/2020 17:20:04'!
PASSED!

!testRun: #MarsRoverTests #test07MovingBackwardsWorksProperlyOnXAxis stamp: 'fr 10/25/2020 17:20:04'!
PASSED!

!testRun: #MarsRoverTests #test08CommandListWithMoreThanOneCommandExecutesProperly stamp: 'fr 10/25/2020 17:20:04'!
PASSED!

!testRun: #MarsRoverTests #test09CreatingAMarsRoverWithAnInvalidCardinalPointShouldFail stamp: 'fr 10/25/2020 17:20:04'!
PASSED!

!testRun: #MarsRoverTests #test10CommandListWithAnInvalidCommandShouldExecuteUntilItsFoundAndNoFurther stamp: 'fr 10/25/2020 17:20:04'!
PASSED!

!classRemoval: #WestOrientation stamp: 'fr 10/25/2020 17:21:40'!
MarsRoverOrientation subclass: #WestOrientation
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover - Exercise'!

!classRemoval: #SouthOrientation stamp: 'fr 10/25/2020 17:21:40'!
MarsRoverOrientation subclass: #SouthOrientation
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover - Exercise'!

!classRemoval: #NorthOrientation stamp: 'fr 10/25/2020 17:21:41'!
MarsRoverOrientation subclass: #NorthOrientation
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover - Exercise'!

!classRemoval: #EastOrientation stamp: 'fr 10/25/2020 17:21:41'!
MarsRoverOrientation subclass: #EastOrientation
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover - Exercise'!

!classRemoval: #MarsRoverOrientation stamp: 'fr 10/25/2020 17:21:42'!
Object subclass: #MarsRoverOrientation
	instanceVariableNames: 'marsRover'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover - Exercise'!

!classRemoval: #MarsRover stamp: 'fr 10/25/2020 17:21:42'!
Object subclass: #MarsRover
	instanceVariableNames: 'position orientation'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover - Exercise'!

!classRemoval: #MarsRoverTests stamp: 'fr 10/25/2020 17:21:43'!
TestCase subclass: #MarsRoverTests
	instanceVariableNames: 'south north east west'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover - Exercise'!

----End fileIn of /home/fede/Documentos/Facultad/Inge1/Repositorio/Grupo-ingsoft1/16-MarsRover/MarsRover - Exercise.st----!

!testRun: #MarsRoverTests #test01EmptyCommandListDoesNothing stamp: 'fr 10/25/2020 17:21:56'!
PASSED!

!testRun: #MarsRoverTests #test02MovingForwardWorksProperlyOnYAxis stamp: 'fr 10/25/2020 17:21:56'!
PASSED!

!testRun: #MarsRoverTests #test03MovingBackwardsWorksProperlyOnYAxis stamp: 'fr 10/25/2020 17:21:56'!
PASSED!

!testRun: #MarsRoverTests #test04RotatingRightWorksProperly stamp: 'fr 10/25/2020 17:21:56'!
PASSED!

!testRun: #MarsRoverTests #test05RotatingLeftWorksProperly stamp: 'fr 10/25/2020 17:21:56'!
PASSED!

!testRun: #MarsRoverTests #test06MovingForwardWorksProperlyOnXAxis stamp: 'fr 10/25/2020 17:21:56'!
PASSED!

!testRun: #MarsRoverTests #test07MovingBackwardsWorksProperlyOnXAxis stamp: 'fr 10/25/2020 17:21:56'!
PASSED!

!testRun: #MarsRoverTests #test08CommandListWithMoreThanOneCommandExecutesProperly stamp: 'fr 10/25/2020 17:21:56'!
PASSED!

!testRun: #MarsRoverTests #test09CreatingAMarsRoverWithAnInvalidCardinalPointShouldFail stamp: 'fr 10/25/2020 17:21:56'!
PASSED!

!testRun: #MarsRoverTests #test10CommandListWithAnInvalidCommandShouldExecuteUntilItsFoundAndNoFurther stamp: 'fr 10/25/2020 17:21:56'!
PASSED!

!testRun: #MarsRoverTests #test11NegativeCoordinates stamp: 'fr 10/25/2020 17:21:56'!
PASSED!

!methodRemoval: MarsRoverTests #test11NegativeCoordinates stamp: 'fr 10/25/2020 17:23:26'!
test11NegativeCoordinates

	| marsRover |
	
	marsRover _ MarsRover at: -1@1 facing: south.
	
	marsRover move: ''.
	
	self assert: (marsRover isAt: -1@1 facing: south)!
!MarsRoverCommandHandler methodsFor: 'initialization' stamp: 'fr 10/25/2020 17:26:19' prior: 50872790!
initializeWith: aMarsRover

	marsRover _ aMarsRover.


! !
!MarsRover methodsFor: 'initialization' stamp: 'fr 10/25/2020 17:27:17' prior: 50872669!
initializeAt: aPosition facing: aCardinalPoint 
	
	position _ aPosition.
	orientation _ MarsRoverOrientation facing: aCardinalPoint for: self.
	self mapActions! !

!classDefinition: #MarsRover category: 'MarsRover - Exercise' stamp: 'fr 10/25/2020 17:27:42'!
Object subclass: #MarsRover
	instanceVariableNames: 'position orientation commandsHandler actionsForCommands'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover - Exercise'!
!MarsRover methodsFor: 'initialization' stamp: 'fr 10/25/2020 17:27:40'!
mapActions

	actionsForCommands _ Dictionary new.
	actionsForCommands at: $f put: MarsRoverCommandsMoveForward new.
	actionsForCommands at: $b put: MarsRoverCommandsMoveBackwards new.
	actionsForCommands at: $l put: MarsRoverCommandsRotateLeft new.
	actionsForCommands at: $r put: MarsRoverCommandsRotateRight new.! !

Object subclass: #MarsRover
	instanceVariableNames: 'position orientation actionsForCommands'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover - Exercise'!

!classDefinition: #MarsRover category: 'MarsRover - Exercise' stamp: 'fr 10/25/2020 17:27:48'!
Object subclass: #MarsRover
	instanceVariableNames: 'position orientation actionsForCommands'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover - Exercise'!
!MarsRoverCommandHandler methodsFor: 'execution' stamp: 'fr 10/25/2020 17:28:16' prior: 50872804!
execute: aCommand
! !
!MarsRover methodsFor: 'movement' stamp: 'fr 10/25/2020 17:29:08' prior: 50872683!
process: aCommand

	|action|
	action _ actionsForCommands at: aCommand ifAbsent: [self error: MarsRover invalidCommandErrorDescription ].
	action executeWith: orientation
	
	"
	aCommandList = $f ifTrue: [^orientation moveForward].
	aCommandList = $b ifTrue: [^orientation moveBackwards].
	aCommandList = $l ifTrue: [^orientation rotateLeft].
	aCommandList = $r ifTrue: [^orientation rotateRight].
	
	self error: self class invalidCommandErrorDescription 
	"! !

!testRun: #MarsRoverTests #test01EmptyCommandListDoesNothing stamp: 'fr 10/25/2020 17:29:24'!
PASSED!

!testRun: #MarsRoverTests #test02MovingForwardWorksProperlyOnYAxis stamp: 'fr 10/25/2020 17:29:24'!
PASSED!

!testRun: #MarsRoverTests #test03MovingBackwardsWorksProperlyOnYAxis stamp: 'fr 10/25/2020 17:29:24'!
PASSED!

!testRun: #MarsRoverTests #test04RotatingRightWorksProperly stamp: 'fr 10/25/2020 17:29:24'!
PASSED!

!testRun: #MarsRoverTests #test05RotatingLeftWorksProperly stamp: 'fr 10/25/2020 17:29:24'!
PASSED!

!testRun: #MarsRoverTests #test06MovingForwardWorksProperlyOnXAxis stamp: 'fr 10/25/2020 17:29:24'!
PASSED!

!testRun: #MarsRoverTests #test07MovingBackwardsWorksProperlyOnXAxis stamp: 'fr 10/25/2020 17:29:24'!
PASSED!

!testRun: #MarsRoverTests #test08CommandListWithMoreThanOneCommandExecutesProperly stamp: 'fr 10/25/2020 17:29:24'!
PASSED!

!testRun: #MarsRoverTests #test09CreatingAMarsRoverWithAnInvalidCardinalPointShouldFail stamp: 'fr 10/25/2020 17:29:24'!
PASSED!

!testRun: #MarsRoverTests #test10CommandListWithAnInvalidCommandShouldExecuteUntilItsFoundAndNoFurther stamp: 'fr 10/25/2020 17:29:24'!
PASSED!

!classRemoval: #MarsRoverCommandHandler stamp: 'fr 10/25/2020 17:29:29'!
Object subclass: #MarsRoverCommandHandler
	instanceVariableNames: 'commandsDictionary marsRover'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover - Exercise'!
!MarsRoverCommands methodsFor: 'execution' stamp: 'fr 10/25/2020 17:30:45' prior: 50872840!
executeWith: anOrientation

	self subclassResponsibility.! !
!MarsRoverCommandsMoveBackwards methodsFor: 'execution' stamp: 'fr 10/25/2020 17:30:56' prior: 50872860 overrides: 50873371!
executeWith: anOrientation

	^anOrientation moveBackwards.! !
!MarsRoverCommandsMoveForward methodsFor: 'execution' stamp: 'fr 10/25/2020 17:31:02' prior: 50872880 overrides: 50873371!
executeWith: anOrientation

	^anOrientation moveForward.! !
!MarsRoverCommandsRotateLeft methodsFor: 'execution' stamp: 'fr 10/25/2020 17:31:07' prior: 50872899 overrides: 50873371!
executeWith: anOrientation

	^anOrientation rotateLeft.! !
!MarsRoverCommandsRotateRight methodsFor: 'execution' stamp: 'fr 10/25/2020 17:31:13' prior: 50872919 overrides: 50873371!
executeWith: anOrientation

	^anOrientation rotateRight.! !

!classRenamed: #MarsRoverCommands as: #MarsRoverActions stamp: 'fr 10/25/2020 17:31:34'!
Smalltalk renameClassNamed: #MarsRoverCommands as: #MarsRoverActions!

!classRenamed: #MarsRoverCommandsMoveBackwards as: #MarsRoverMoveBackwards stamp: 'fr 10/25/2020 17:31:54'!
Smalltalk renameClassNamed: #MarsRoverCommandsMoveBackwards as: #MarsRoverMoveBackwards!
!MarsRover methodsFor: 'as yet unclassified' stamp: 'fr 10/25/2020 17:31:54' prior: 50873279!
mapActions

	actionsForCommands _ Dictionary new.
	actionsForCommands at: $f put: MarsRoverCommandsMoveForward new.
	actionsForCommands at: $b put: MarsRoverMoveBackwards new.
	actionsForCommands at: $l put: MarsRoverCommandsRotateLeft new.
	actionsForCommands at: $r put: MarsRoverCommandsRotateRight new.! !

!classRenamed: #MarsRoverCommandsMoveForward as: #MarsRoverMoveForward stamp: 'fr 10/25/2020 17:32:08'!
Smalltalk renameClassNamed: #MarsRoverCommandsMoveForward as: #MarsRoverMoveForward!
!MarsRover methodsFor: 'as yet unclassified' stamp: 'fr 10/25/2020 17:32:08' prior: 50873411!
mapActions

	actionsForCommands _ Dictionary new.
	actionsForCommands at: $f put: MarsRoverMoveForward new.
	actionsForCommands at: $b put: MarsRoverMoveBackwards new.
	actionsForCommands at: $l put: MarsRoverCommandsRotateLeft new.
	actionsForCommands at: $r put: MarsRoverCommandsRotateRight new.! !

!classRenamed: #MarsRoverCommandsRotateRight as: #MarsRoverRotateRight stamp: 'fr 10/25/2020 17:32:20'!
Smalltalk renameClassNamed: #MarsRoverCommandsRotateRight as: #MarsRoverRotateRight!
!MarsRover methodsFor: 'as yet unclassified' stamp: 'fr 10/25/2020 17:32:20' prior: 50873430!
mapActions

	actionsForCommands _ Dictionary new.
	actionsForCommands at: $f put: MarsRoverMoveForward new.
	actionsForCommands at: $b put: MarsRoverMoveBackwards new.
	actionsForCommands at: $l put: MarsRoverCommandsRotateLeft new.
	actionsForCommands at: $r put: MarsRoverRotateRight new.! !

!classRenamed: #MarsRoverCommandsRotateLeft as: #MarsRoverRotateLeft stamp: 'fr 10/25/2020 17:32:30'!
Smalltalk renameClassNamed: #MarsRoverCommandsRotateLeft as: #MarsRoverRotateLeft!
!MarsRover methodsFor: 'as yet unclassified' stamp: 'fr 10/25/2020 17:32:31' prior: 50873449!
mapActions

	actionsForCommands _ Dictionary new.
	actionsForCommands at: $f put: MarsRoverMoveForward new.
	actionsForCommands at: $b put: MarsRoverMoveBackwards new.
	actionsForCommands at: $l put: MarsRoverRotateLeft new.
	actionsForCommands at: $r put: MarsRoverRotateRight new.! !

!testRun: #MarsRoverTests #test01EmptyCommandListDoesNothing stamp: 'fr 10/25/2020 17:33:49'!
PASSED!

!testRun: #MarsRoverTests #test02MovingForwardWorksProperlyOnYAxis stamp: 'fr 10/25/2020 17:33:49'!
PASSED!

!testRun: #MarsRoverTests #test03MovingBackwardsWorksProperlyOnYAxis stamp: 'fr 10/25/2020 17:33:49'!
PASSED!

!testRun: #MarsRoverTests #test04RotatingRightWorksProperly stamp: 'fr 10/25/2020 17:33:49'!
PASSED!

!testRun: #MarsRoverTests #test05RotatingLeftWorksProperly stamp: 'fr 10/25/2020 17:33:49'!
PASSED!

!testRun: #MarsRoverTests #test06MovingForwardWorksProperlyOnXAxis stamp: 'fr 10/25/2020 17:33:49'!
PASSED!

!testRun: #MarsRoverTests #test07MovingBackwardsWorksProperlyOnXAxis stamp: 'fr 10/25/2020 17:33:49'!
PASSED!

!testRun: #MarsRoverTests #test08CommandListWithMoreThanOneCommandExecutesProperly stamp: 'fr 10/25/2020 17:33:49'!
PASSED!

!testRun: #MarsRoverTests #test09CreatingAMarsRoverWithAnInvalidCardinalPointShouldFail stamp: 'fr 10/25/2020 17:33:49'!
PASSED!

!testRun: #MarsRoverTests #test10CommandListWithAnInvalidCommandShouldExecuteUntilItsFoundAndNoFurther stamp: 'fr 10/25/2020 17:33:49'!
PASSED!

!methodRemoval: MarsRover #orientation stamp: 'fr 10/25/2020 17:36:37'!
orientation

	^orientation.!

----SNAPSHOT----(25 October 2020 17:36:47) CuisUniversity-4384.image priorSource: 17305625!

!testRun: #MarsRoverTests #test01EmptyCommandListDoesNothing stamp: 'fr 10/25/2020 17:36:50'!
PASSED!

!testRun: #MarsRoverTests #test02MovingForwardWorksProperlyOnYAxis stamp: 'fr 10/25/2020 17:36:50'!
PASSED!

!testRun: #MarsRoverTests #test03MovingBackwardsWorksProperlyOnYAxis stamp: 'fr 10/25/2020 17:36:50'!
PASSED!

!testRun: #MarsRoverTests #test04RotatingRightWorksProperly stamp: 'fr 10/25/2020 17:36:50'!
PASSED!

!testRun: #MarsRoverTests #test05RotatingLeftWorksProperly stamp: 'fr 10/25/2020 17:36:50'!
PASSED!

!testRun: #MarsRoverTests #test06MovingForwardWorksProperlyOnXAxis stamp: 'fr 10/25/2020 17:36:50'!
PASSED!

!testRun: #MarsRoverTests #test07MovingBackwardsWorksProperlyOnXAxis stamp: 'fr 10/25/2020 17:36:50'!
PASSED!

!testRun: #MarsRoverTests #test08CommandListWithMoreThanOneCommandExecutesProperly stamp: 'fr 10/25/2020 17:36:50'!
PASSED!

!testRun: #MarsRoverTests #test09CreatingAMarsRoverWithAnInvalidCardinalPointShouldFail stamp: 'fr 10/25/2020 17:36:50'!
PASSED!

!testRun: #MarsRoverTests #test10CommandListWithAnInvalidCommandShouldExecuteUntilItsFoundAndNoFurther stamp: 'fr 10/25/2020 17:36:50'!
PASSED!
!MarsRover methodsFor: 'movement' stamp: 'fr 10/25/2020 17:45:31' prior: 50873310!
process: aCommand

	|action|
	action _ actionsForCommands at: aCommand ifAbsent: [self error: MarsRover invalidCommandErrorDescription ].
	action executeWith: orientation! !
!MarsRover methodsFor: 'movement' stamp: 'fr 10/25/2020 17:45:36' prior: 50873557!
process: aCommand

	|action|
	
	action _ actionsForCommands at: aCommand ifAbsent: [self error: MarsRover invalidCommandErrorDescription ].
	
	action executeWith: orientation! !

----SNAPSHOT----(25 October 2020 17:45:43) CuisUniversity-4384.image priorSource: 17339741!

----SNAPSHOT----(25 October 2020 17:49:45) CuisUniversity-4384.image priorSource: 17341553!

!testRun: #MarsRoverTests #test01EmptyCommandListDoesNothing stamp: 'fr 10/25/2020 17:50:09'!
PASSED!

!testRun: #MarsRoverTests #test02MovingForwardWorksProperlyOnYAxis stamp: 'fr 10/25/2020 17:50:09'!
PASSED!

!testRun: #MarsRoverTests #test03MovingBackwardsWorksProperlyOnYAxis stamp: 'fr 10/25/2020 17:50:09'!
PASSED!

!testRun: #MarsRoverTests #test04RotatingRightWorksProperly stamp: 'fr 10/25/2020 17:50:09'!
PASSED!

!testRun: #MarsRoverTests #test05RotatingLeftWorksProperly stamp: 'fr 10/25/2020 17:50:09'!
PASSED!

!testRun: #MarsRoverTests #test06MovingForwardWorksProperlyOnXAxis stamp: 'fr 10/25/2020 17:50:09'!
PASSED!

!testRun: #MarsRoverTests #test07MovingBackwardsWorksProperlyOnXAxis stamp: 'fr 10/25/2020 17:50:09'!
PASSED!

!testRun: #MarsRoverTests #test08CommandListWithMoreThanOneCommandExecutesProperly stamp: 'fr 10/25/2020 17:50:09'!
PASSED!

!testRun: #MarsRoverTests #test09CreatingAMarsRoverWithAnInvalidCardinalPointShouldFail stamp: 'fr 10/25/2020 17:50:09'!
PASSED!

!testRun: #MarsRoverTests #test10CommandListWithAnInvalidCommandShouldExecuteUntilItsFoundAndNoFurther stamp: 'fr 10/25/2020 17:50:09'!
PASSED!

----SNAPSHOT----(25 October 2020 17:50:13) CuisUniversity-4384.image priorSource: 17341646!

----QUIT----(25 October 2020 17:50:22) CuisUniversity-4384.image priorSource: 17342885!

----STARTUP---- (25 October 2020 17:51:52) as /home/fede/Documentos/Facultad/Inge1/Cuises/katas/linux64/CuisUniversity-4384.image!


----SNAPSHOT----(25 October 2020 18:42:03) CuisUniversity-4384.image priorSource: 17342978!

----QUIT----(25 October 2020 18:42:55) CuisUniversity-4384.image priorSource: 17343200!

----STARTUP---- (25 October 2020 22:17:42) as /home/fede/Documentos/Facultad/Inge1/Cuises/katas/linux64/CuisUniversity-4384.image!

!MarsRoverTests methodsFor: 'tests' stamp: 'fr 10/25/2020 22:26:34' prior: 50872570!
test02MovingForwardWorksProperlyOnYAxis

	| marsRover |
	
	marsRover _ MarsRover at: 1@1 facing: south.
	
	marsRover move: 'f'.
	
	self assert: (marsRover isAt: 1@0 facing: south).
	
	marsRover move: 'b'.
	
	self assert: (marsRover isAt: 1@1 facing: south) ! !

!testRun: #MarsRoverTests #test02MovingForwardWorksProperlyOnYAxis stamp: 'fr 10/25/2020 22:26:36'!
PASSED!

!testRun: #MarsRoverTests #test01EmptyCommandListDoesNothing stamp: 'fr 10/25/2020 22:26:36'!
PASSED!

!testRun: #MarsRoverTests #test02MovingForwardWorksProperlyOnYAxis stamp: 'fr 10/25/2020 22:26:36'!
PASSED!

!testRun: #MarsRoverTests #test03MovingBackwardsWorksProperlyOnYAxis stamp: 'fr 10/25/2020 22:26:36'!
PASSED!

!testRun: #MarsRoverTests #test04RotatingRightWorksProperly stamp: 'fr 10/25/2020 22:26:36'!
PASSED!

!testRun: #MarsRoverTests #test05RotatingLeftWorksProperly stamp: 'fr 10/25/2020 22:26:36'!
PASSED!

!testRun: #MarsRoverTests #test06MovingForwardWorksProperlyOnXAxis stamp: 'fr 10/25/2020 22:26:36'!
PASSED!

!testRun: #MarsRoverTests #test07MovingBackwardsWorksProperlyOnXAxis stamp: 'fr 10/25/2020 22:26:36'!
PASSED!

!testRun: #MarsRoverTests #test08CommandListWithMoreThanOneCommandExecutesProperly stamp: 'fr 10/25/2020 22:26:36'!
PASSED!

!testRun: #MarsRoverTests #test09CreatingAMarsRoverWithAnInvalidCardinalPointShouldFail stamp: 'fr 10/25/2020 22:26:36'!
PASSED!

!testRun: #MarsRoverTests #test10CommandListWithAnInvalidCommandShouldExecuteUntilItsFoundAndNoFurther stamp: 'fr 10/25/2020 22:26:36'!
PASSED!
!MarsRoverTests methodsFor: 'tests' stamp: 'fr 10/25/2020 22:28:36'!
test02MovingWorksProperlyFacingSouth

	| marsRover |
	
	marsRover _ MarsRover at: 1@1 facing: south.
	
	marsRover move: 'f'.
	
	self assert: (marsRover isAt: 1@0 facing: south).
	
	marsRover move: 'b'.
	
	self assert: (marsRover isAt: 1@1 facing: south) ! !

!methodRemoval: MarsRoverTests #test02MovingForwardWorksProperlyOnYAxis stamp: 'fr 10/25/2020 22:28:58'!
test02MovingForwardWorksProperlyOnYAxis

	| marsRover |
	
	marsRover _ MarsRover at: 1@1 facing: south.
	
	marsRover move: 'f'.
	
	self assert: (marsRover isAt: 1@0 facing: south).
	
	marsRover move: 'b'.
	
	self assert: (marsRover isAt: 1@1 facing: south) !
!MarsRoverTests methodsFor: 'tests' stamp: 'fr 10/25/2020 22:31:23'!
test03MovingWorksProperlyFacingNorth

	| marsRover |
	
	marsRover _ MarsRover at: 1@1 facing: north.
	
	marsRover move: 'f'.
	
	self assert: (marsRover isAt: 1@2 facing: north).
	
	marsRover move: 'b'.
	
	self assert: (marsRover isAt: 1@1 facing: north) ! !

!testRun: #MarsRoverTests #test03MovingWorksProperlyFacingNorth stamp: 'fr 10/25/2020 22:31:24'!
PASSED!

!testRun: #MarsRoverTests #test01EmptyCommandListDoesNothing stamp: 'fr 10/25/2020 22:31:24'!
PASSED!

!testRun: #MarsRoverTests #test02MovingWorksProperlyFacingSouth stamp: 'fr 10/25/2020 22:31:24'!
PASSED!

!testRun: #MarsRoverTests #test03MovingBackwardsWorksProperlyOnYAxis stamp: 'fr 10/25/2020 22:31:24'!
PASSED!

!testRun: #MarsRoverTests #test03MovingWorksProperlyFacingNorth stamp: 'fr 10/25/2020 22:31:24'!
PASSED!

!testRun: #MarsRoverTests #test04RotatingRightWorksProperly stamp: 'fr 10/25/2020 22:31:24'!
PASSED!

!testRun: #MarsRoverTests #test05RotatingLeftWorksProperly stamp: 'fr 10/25/2020 22:31:24'!
PASSED!

!testRun: #MarsRoverTests #test06MovingForwardWorksProperlyOnXAxis stamp: 'fr 10/25/2020 22:31:24'!
PASSED!

!testRun: #MarsRoverTests #test07MovingBackwardsWorksProperlyOnXAxis stamp: 'fr 10/25/2020 22:31:24'!
PASSED!

!testRun: #MarsRoverTests #test08CommandListWithMoreThanOneCommandExecutesProperly stamp: 'fr 10/25/2020 22:31:24'!
PASSED!

!testRun: #MarsRoverTests #test09CreatingAMarsRoverWithAnInvalidCardinalPointShouldFail stamp: 'fr 10/25/2020 22:31:24'!
PASSED!

!testRun: #MarsRoverTests #test10CommandListWithAnInvalidCommandShouldExecuteUntilItsFoundAndNoFurther stamp: 'fr 10/25/2020 22:31:24'!
PASSED!
!MarsRoverTests methodsFor: 'tests' stamp: 'fr 10/25/2020 22:32:09'!
test04MovingWorksProperlyFacingEast

	| marsRover |
	
	marsRover _ MarsRover at: 1@1 facing: east.
	
	marsRover move: 'f'.
	
	self assert: (marsRover isAt: 2@1 facing: east).
	
	marsRover move: 'b'.
	
	self assert: (marsRover isAt: 1@1 facing: east) ! !

!testRun: #MarsRoverTests #test04MovingWorksProperlyFacingEast stamp: 'fr 10/25/2020 22:32:11'!
PASSED!

!testRun: #MarsRoverTests #test01EmptyCommandListDoesNothing stamp: 'fr 10/25/2020 22:32:11'!
PASSED!

!testRun: #MarsRoverTests #test02MovingWorksProperlyFacingSouth stamp: 'fr 10/25/2020 22:32:11'!
PASSED!

!testRun: #MarsRoverTests #test03MovingBackwardsWorksProperlyOnYAxis stamp: 'fr 10/25/2020 22:32:11'!
PASSED!

!testRun: #MarsRoverTests #test03MovingWorksProperlyFacingNorth stamp: 'fr 10/25/2020 22:32:11'!
PASSED!

!testRun: #MarsRoverTests #test04MovingWorksProperlyFacingEast stamp: 'fr 10/25/2020 22:32:11'!
PASSED!

!testRun: #MarsRoverTests #test04RotatingRightWorksProperly stamp: 'fr 10/25/2020 22:32:11'!
PASSED!

!testRun: #MarsRoverTests #test05RotatingLeftWorksProperly stamp: 'fr 10/25/2020 22:32:11'!
PASSED!

!testRun: #MarsRoverTests #test06MovingForwardWorksProperlyOnXAxis stamp: 'fr 10/25/2020 22:32:11'!
PASSED!

!testRun: #MarsRoverTests #test07MovingBackwardsWorksProperlyOnXAxis stamp: 'fr 10/25/2020 22:32:11'!
PASSED!

!testRun: #MarsRoverTests #test08CommandListWithMoreThanOneCommandExecutesProperly stamp: 'fr 10/25/2020 22:32:11'!
PASSED!

!testRun: #MarsRoverTests #test09CreatingAMarsRoverWithAnInvalidCardinalPointShouldFail stamp: 'fr 10/25/2020 22:32:11'!
PASSED!

!testRun: #MarsRoverTests #test10CommandListWithAnInvalidCommandShouldExecuteUntilItsFoundAndNoFurther stamp: 'fr 10/25/2020 22:32:11'!
PASSED!

!methodRemoval: MarsRoverTests #test03MovingBackwardsWorksProperlyOnYAxis stamp: 'fr 10/25/2020 22:33:17'!
test03MovingBackwardsWorksProperlyOnYAxis

	| marsRover |
	
	marsRover _ MarsRover at: 1@1 facing: south.
	
	marsRover move: 'b'.
	
	self assert: (marsRover isAt: 1@2 facing: south)!
!MarsRoverTests methodsFor: 'tests' stamp: 'fr 10/25/2020 22:35:20'!
test05MovingWorksProperlyFacingWest

	| marsRover |
	
	marsRover _ MarsRover at: 1@1 facing: west.
	
	marsRover move: 'f'.
	
	self assert: (marsRover isAt: 2@1 facing: west).
	
	marsRover move: 'b'.
	
	self assert: (marsRover isAt: 1@1 facing: west) ! !
!MarsRoverTests methodsFor: 'tests' stamp: 'fr 10/25/2020 22:35:30' prior: 50873826!
test05MovingWorksProperlyFacingWest

	| marsRover |
	
	marsRover _ MarsRover at: 1@1 facing: west.
	
	marsRover move: 'f'.
	
	self assert: (marsRover isAt: 0@1 facing: west).
	
	marsRover move: 'b'.
	
	self assert: (marsRover isAt: 1@1 facing: west) ! !

!testRun: #MarsRoverTests #test05MovingWorksProperlyFacingWest stamp: 'fr 10/25/2020 22:35:31'!
PASSED!

!testRun: #MarsRoverTests #test01EmptyCommandListDoesNothing stamp: 'fr 10/25/2020 22:35:31'!
PASSED!

!testRun: #MarsRoverTests #test02MovingWorksProperlyFacingSouth stamp: 'fr 10/25/2020 22:35:31'!
PASSED!

!testRun: #MarsRoverTests #test03MovingWorksProperlyFacingNorth stamp: 'fr 10/25/2020 22:35:31'!
PASSED!

!testRun: #MarsRoverTests #test04MovingWorksProperlyFacingEast stamp: 'fr 10/25/2020 22:35:31'!
PASSED!

!testRun: #MarsRoverTests #test04RotatingRightWorksProperly stamp: 'fr 10/25/2020 22:35:31'!
PASSED!

!testRun: #MarsRoverTests #test05MovingWorksProperlyFacingWest stamp: 'fr 10/25/2020 22:35:31'!
PASSED!

!testRun: #MarsRoverTests #test05RotatingLeftWorksProperly stamp: 'fr 10/25/2020 22:35:31'!
PASSED!

!testRun: #MarsRoverTests #test06MovingForwardWorksProperlyOnXAxis stamp: 'fr 10/25/2020 22:35:31'!
PASSED!

!testRun: #MarsRoverTests #test07MovingBackwardsWorksProperlyOnXAxis stamp: 'fr 10/25/2020 22:35:31'!
PASSED!

!testRun: #MarsRoverTests #test08CommandListWithMoreThanOneCommandExecutesProperly stamp: 'fr 10/25/2020 22:35:31'!
PASSED!

!testRun: #MarsRoverTests #test09CreatingAMarsRoverWithAnInvalidCardinalPointShouldFail stamp: 'fr 10/25/2020 22:35:31'!
PASSED!

!testRun: #MarsRoverTests #test10CommandListWithAnInvalidCommandShouldExecuteUntilItsFoundAndNoFurther stamp: 'fr 10/25/2020 22:35:31'!
PASSED!
!MarsRoverTests methodsFor: 'tests' stamp: 'fr 10/25/2020 22:36:20'!
test06RotatingWorksProperlyForAllOrientations

	| marsRover |
	
	marsRover _ MarsRover at: 1@1 facing: south.
	
	marsRover move: 'r'.
	
	self assert: (marsRover isAt: 1@1 facing: west)! !

!methodRemoval: MarsRoverTests #test06MovingForwardWorksProperlyOnXAxis stamp: 'fr 10/25/2020 22:36:28'!
test06MovingForwardWorksProperlyOnXAxis

	| marsRover |
	
	marsRover _ MarsRover at: 1@1 facing: east.
	
	marsRover move: 'f'.
	
	self assert: (marsRover isAt: 2@1 facing: east)!
!MarsRoverTests methodsFor: 'tests' stamp: 'fr 10/25/2020 22:37:48' prior: 50873893!
test06RotatingWorksProperlyForAllOrientations

	| marsRover |
	
	marsRover _ MarsRover at: 1@1 facing: south.
	
	marsRover move: 'r'.
	
	self assert: (marsRover isAt: 1@1 facing: west).
	
	marsRover move: 'r'.
	
	self assert: (marsRover isAt: 1@1 facing: north).
	
	marsRover move: 'r'.
	
	self assert: (marsRover isAt: 1@1 facing: east).
	
	marsRover move: 'r'.
	
	self assert: (marsRover isAt: 1@1 facing: south).! !

!testRun: #MarsRoverTests #test06RotatingWorksProperlyForAllOrientations stamp: 'fr 10/25/2020 22:37:50'!
PASSED!

!testRun: #MarsRoverTests #test01EmptyCommandListDoesNothing stamp: 'fr 10/25/2020 22:37:50'!
PASSED!

!testRun: #MarsRoverTests #test02MovingWorksProperlyFacingSouth stamp: 'fr 10/25/2020 22:37:50'!
PASSED!

!testRun: #MarsRoverTests #test03MovingWorksProperlyFacingNorth stamp: 'fr 10/25/2020 22:37:50'!
PASSED!

!testRun: #MarsRoverTests #test04MovingWorksProperlyFacingEast stamp: 'fr 10/25/2020 22:37:50'!
PASSED!

!testRun: #MarsRoverTests #test04RotatingRightWorksProperly stamp: 'fr 10/25/2020 22:37:50'!
PASSED!

!testRun: #MarsRoverTests #test05MovingWorksProperlyFacingWest stamp: 'fr 10/25/2020 22:37:50'!
PASSED!

!testRun: #MarsRoverTests #test05RotatingLeftWorksProperly stamp: 'fr 10/25/2020 22:37:50'!
PASSED!

!testRun: #MarsRoverTests #test06RotatingWorksProperlyForAllOrientations stamp: 'fr 10/25/2020 22:37:50'!
PASSED!

!testRun: #MarsRoverTests #test07MovingBackwardsWorksProperlyOnXAxis stamp: 'fr 10/25/2020 22:37:50'!
PASSED!

!testRun: #MarsRoverTests #test08CommandListWithMoreThanOneCommandExecutesProperly stamp: 'fr 10/25/2020 22:37:50'!
PASSED!

!testRun: #MarsRoverTests #test09CreatingAMarsRoverWithAnInvalidCardinalPointShouldFail stamp: 'fr 10/25/2020 22:37:50'!
PASSED!

!testRun: #MarsRoverTests #test10CommandListWithAnInvalidCommandShouldExecuteUntilItsFoundAndNoFurther stamp: 'fr 10/25/2020 22:37:50'!
PASSED!
!MarsRoverTests methodsFor: 'tests' stamp: 'fr 10/25/2020 22:38:00'!
test06RotatingRightWorksProperlyForAllOrientations

	| marsRover |
	
	marsRover _ MarsRover at: 1@1 facing: south.
	
	marsRover move: 'r'.
	
	self assert: (marsRover isAt: 1@1 facing: west).
	
	marsRover move: 'r'.
	
	self assert: (marsRover isAt: 1@1 facing: north).
	
	marsRover move: 'r'.
	
	self assert: (marsRover isAt: 1@1 facing: east).
	
	marsRover move: 'r'.
	
	self assert: (marsRover isAt: 1@1 facing: south).! !

!methodRemoval: MarsRoverTests #test06RotatingWorksProperlyForAllOrientations stamp: 'fr 10/25/2020 22:38:12'!
test06RotatingWorksProperlyForAllOrientations

	| marsRover |
	
	marsRover _ MarsRover at: 1@1 facing: south.
	
	marsRover move: 'r'.
	
	self assert: (marsRover isAt: 1@1 facing: west).
	
	marsRover move: 'r'.
	
	self assert: (marsRover isAt: 1@1 facing: north).
	
	marsRover move: 'r'.
	
	self assert: (marsRover isAt: 1@1 facing: east).
	
	marsRover move: 'r'.
	
	self assert: (marsRover isAt: 1@1 facing: south).!
!MarsRoverTests methodsFor: 'tests' stamp: 'fr 10/25/2020 22:39:00'!
test05RotatingLeftWorksProperlyForAllOrientations

	| marsRover |
	
	marsRover _ MarsRover at: 1@1 facing: south.
	
	marsRover move: 'l'.
	
	self assert: (marsRover isAt: 1@1 facing: east).
	
	marsRover move: 'l'.
	
	self assert: (marsRover isAt: 1@1 facing: east).
	
	marsRover move: 'l'.
	
	self assert: (marsRover isAt: 1@1 facing: east).
	
	marsRover move: 'l'.
	
	self assert: (marsRover isAt: 1@1 facing: east).! !
!MarsRoverTests methodsFor: 'tests' stamp: 'fr 10/25/2020 22:39:17' prior: 50874005!
test05RotatingLeftWorksProperlyForAllOrientations

	| marsRover |
	
	marsRover _ MarsRover at: 1@1 facing: south.
	
	marsRover move: 'l'.
	
	self assert: (marsRover isAt: 1@1 facing: east).
	
	marsRover move: 'l'.
	
	self assert: (marsRover isAt: 1@1 facing: north).
	
	marsRover move: 'l'.
	
	self assert: (marsRover isAt: 1@1 facing: west).
	
	marsRover move: 'l'.
	
	self assert: (marsRover isAt: 1@1 facing: south).! !

!methodRemoval: MarsRoverTests #test05RotatingLeftWorksProperly stamp: 'fr 10/25/2020 22:39:22'!
test05RotatingLeftWorksProperly

	| marsRover |
	
	marsRover _ MarsRover at: 1@1 facing: south.
	
	marsRover move: 'l'.
	
	self assert: (marsRover isAt: 1@1 facing: east)!

!testRun: #MarsRoverTests #test01EmptyCommandListDoesNothing stamp: 'fr 10/25/2020 22:39:27'!
PASSED!

!testRun: #MarsRoverTests #test02MovingWorksProperlyFacingSouth stamp: 'fr 10/25/2020 22:39:27'!
PASSED!

!testRun: #MarsRoverTests #test03MovingWorksProperlyFacingNorth stamp: 'fr 10/25/2020 22:39:27'!
PASSED!

!testRun: #MarsRoverTests #test04MovingWorksProperlyFacingEast stamp: 'fr 10/25/2020 22:39:27'!
PASSED!

!testRun: #MarsRoverTests #test04RotatingRightWorksProperly stamp: 'fr 10/25/2020 22:39:27'!
PASSED!

!testRun: #MarsRoverTests #test05MovingWorksProperlyFacingWest stamp: 'fr 10/25/2020 22:39:27'!
PASSED!

!testRun: #MarsRoverTests #test05RotatingLeftWorksProperlyForAllOrientations stamp: 'fr 10/25/2020 22:39:27'!
PASSED!

!testRun: #MarsRoverTests #test06RotatingRightWorksProperlyForAllOrientations stamp: 'fr 10/25/2020 22:39:27'!
PASSED!

!testRun: #MarsRoverTests #test07MovingBackwardsWorksProperlyOnXAxis stamp: 'fr 10/25/2020 22:39:27'!
PASSED!

!testRun: #MarsRoverTests #test08CommandListWithMoreThanOneCommandExecutesProperly stamp: 'fr 10/25/2020 22:39:27'!
PASSED!

!testRun: #MarsRoverTests #test09CreatingAMarsRoverWithAnInvalidCardinalPointShouldFail stamp: 'fr 10/25/2020 22:39:27'!
PASSED!

!testRun: #MarsRoverTests #test10CommandListWithAnInvalidCommandShouldExecuteUntilItsFoundAndNoFurther stamp: 'fr 10/25/2020 22:39:27'!
PASSED!

!methodRemoval: MarsRoverTests #test07MovingBackwardsWorksProperlyOnXAxis stamp: 'fr 10/25/2020 22:39:44'!
test07MovingBackwardsWorksProperlyOnXAxis

	| marsRover |
	
	marsRover _ MarsRover at: 1@1 facing: east.
	
	marsRover move: 'b'.
	
	self assert: (marsRover isAt: 0@1 facing: east)!

!testRun: #MarsRoverTests #test01EmptyCommandListDoesNothing stamp: 'fr 10/25/2020 22:39:52'!
PASSED!

!testRun: #MarsRoverTests #test02MovingWorksProperlyFacingSouth stamp: 'fr 10/25/2020 22:39:52'!
PASSED!

!testRun: #MarsRoverTests #test03MovingWorksProperlyFacingNorth stamp: 'fr 10/25/2020 22:39:52'!
PASSED!

!testRun: #MarsRoverTests #test04MovingWorksProperlyFacingEast stamp: 'fr 10/25/2020 22:39:52'!
PASSED!

!testRun: #MarsRoverTests #test04RotatingRightWorksProperly stamp: 'fr 10/25/2020 22:39:52'!
PASSED!

!testRun: #MarsRoverTests #test05MovingWorksProperlyFacingWest stamp: 'fr 10/25/2020 22:39:52'!
PASSED!

!testRun: #MarsRoverTests #test05RotatingLeftWorksProperlyForAllOrientations stamp: 'fr 10/25/2020 22:39:52'!
PASSED!

!testRun: #MarsRoverTests #test06RotatingRightWorksProperlyForAllOrientations stamp: 'fr 10/25/2020 22:39:52'!
PASSED!

!testRun: #MarsRoverTests #test08CommandListWithMoreThanOneCommandExecutesProperly stamp: 'fr 10/25/2020 22:39:52'!
PASSED!

!testRun: #MarsRoverTests #test09CreatingAMarsRoverWithAnInvalidCardinalPointShouldFail stamp: 'fr 10/25/2020 22:39:52'!
PASSED!

!testRun: #MarsRoverTests #test10CommandListWithAnInvalidCommandShouldExecuteUntilItsFoundAndNoFurther stamp: 'fr 10/25/2020 22:39:52'!
PASSED!
!MarsRoverTests methodsFor: 'tests' stamp: 'fr 10/25/2020 22:43:55'!
moveAndAssert: marsRover

	marsRover move: 'f'.
	
	self assert: (marsRover isAt: 1@0 facing: south)! !
!MarsRoverTests methodsFor: 'tests' stamp: 'fr 10/25/2020 22:43:55' prior: 50873686!
test02MovingWorksProperlyFacingSouth

	| marsRover |
	
	marsRover _ MarsRover at: 1@1 facing: south.
	
	self moveAndAssert: marsRover.
	
	marsRover move: 'b'.
	
	self assert: (marsRover isAt: 1@1 facing: south) ! !
!MarsRoverTests methodsFor: 'tests - private' stamp: 'fr 10/25/2020 22:46:45'!
execute: aCommandList assert: marsRover isAt: aPosition facing: aCardinalPoint

	marsRover move: 'f'.
	
	self assert: (marsRover isAt: 1@0 facing: south)! !
!MarsRoverTests methodsFor: 'tests - private' stamp: 'fr 10/25/2020 22:46:52' prior: 50874153!
execute: aCommandList assert: marsRover isAt: aPosition facing: aCardinalPoint

	marsRover move: aCommandList.
	
	self assert: (marsRover isAt: 1@0 facing: south)! !
!MarsRoverTests methodsFor: 'tests - private' stamp: 'fr 10/25/2020 22:47:01' prior: 50874161!
execute: aCommandList assert: marsRover isAt: aPosition facing: aCardinalPoint

	marsRover move: aCommandList.
	
	self assert: (marsRover isAt: aPosition facing: aCardinalPoint)! !

!methodRemoval: MarsRoverTests #moveAndAssert: stamp: 'fr 10/25/2020 22:47:07'!
moveAndAssert: marsRover

	marsRover move: 'f'.
	
	self assert: (marsRover isAt: 1@0 facing: south)!
!MarsRoverTests methodsFor: 'tests' stamp: 'fr 10/25/2020 22:28:36' prior: 50874143!
test02MovingWorksProperlyFacingSouth

	| marsRover |
	
	marsRover _ MarsRover at: 1@1 facing: south.
	
	marsRover move: 'f'.
	
	self assert: (marsRover isAt: 1@0 facing: south).
	
	marsRover move: 'b'.
	
	self assert: (marsRover isAt: 1@1 facing: south) ! !
!MarsRoverTests methodsFor: 'tests' stamp: 'fr 10/25/2020 22:48:06' prior: 50874184!
test02MovingWorksProperlyFacingSouth

	| marsRover |
	
	marsRover _ MarsRover at: 1@1 facing: south.
	
	self execute: 'f' assert: marsRover isAt: 1@0 facing: south.
	
	marsRover move: 'b'.
	
	self assert: (marsRover isAt: 1@1 facing: south) ! !

!testRun: #MarsRoverTests #test02MovingWorksProperlyFacingSouth stamp: 'fr 10/25/2020 22:48:17'!
PASSED!

!testRun: #MarsRoverTests #test01EmptyCommandListDoesNothing stamp: 'fr 10/25/2020 22:48:17'!
PASSED!

!testRun: #MarsRoverTests #test02MovingWorksProperlyFacingSouth stamp: 'fr 10/25/2020 22:48:17'!
PASSED!

!testRun: #MarsRoverTests #test03MovingWorksProperlyFacingNorth stamp: 'fr 10/25/2020 22:48:17'!
PASSED!

!testRun: #MarsRoverTests #test04MovingWorksProperlyFacingEast stamp: 'fr 10/25/2020 22:48:17'!
PASSED!

!testRun: #MarsRoverTests #test04RotatingRightWorksProperly stamp: 'fr 10/25/2020 22:48:17'!
PASSED!

!testRun: #MarsRoverTests #test05MovingWorksProperlyFacingWest stamp: 'fr 10/25/2020 22:48:17'!
PASSED!

!testRun: #MarsRoverTests #test05RotatingLeftWorksProperlyForAllOrientations stamp: 'fr 10/25/2020 22:48:17'!
PASSED!

!testRun: #MarsRoverTests #test06RotatingRightWorksProperlyForAllOrientations stamp: 'fr 10/25/2020 22:48:17'!
PASSED!

!testRun: #MarsRoverTests #test08CommandListWithMoreThanOneCommandExecutesProperly stamp: 'fr 10/25/2020 22:48:17'!
PASSED!

!testRun: #MarsRoverTests #test09CreatingAMarsRoverWithAnInvalidCardinalPointShouldFail stamp: 'fr 10/25/2020 22:48:17'!
PASSED!

!testRun: #MarsRoverTests #test10CommandListWithAnInvalidCommandShouldExecuteUntilItsFoundAndNoFurther stamp: 'fr 10/25/2020 22:48:17'!
PASSED!
!MarsRoverTests methodsFor: 'tests' stamp: 'fr 10/25/2020 22:48:37' prior: 50874195!
test02MovingWorksProperlyFacingSouth

	| marsRover |
	
	marsRover _ MarsRover at: 1@1 facing: south.
	
	self execute: 'f' assert: marsRover isAt: 1@0 facing: south.
	self execute: 'b' assert: marsRover isAt: 1@1 facing: south! !

!testRun: #MarsRoverTests #test02MovingWorksProperlyFacingSouth stamp: 'fr 10/25/2020 22:48:38'!
PASSED!

!testRun: #MarsRoverTests #test01EmptyCommandListDoesNothing stamp: 'fr 10/25/2020 22:48:38'!
PASSED!

!testRun: #MarsRoverTests #test02MovingWorksProperlyFacingSouth stamp: 'fr 10/25/2020 22:48:38'!
PASSED!

!testRun: #MarsRoverTests #test03MovingWorksProperlyFacingNorth stamp: 'fr 10/25/2020 22:48:38'!
PASSED!

!testRun: #MarsRoverTests #test04MovingWorksProperlyFacingEast stamp: 'fr 10/25/2020 22:48:38'!
PASSED!

!testRun: #MarsRoverTests #test04RotatingRightWorksProperly stamp: 'fr 10/25/2020 22:48:38'!
PASSED!

!testRun: #MarsRoverTests #test05MovingWorksProperlyFacingWest stamp: 'fr 10/25/2020 22:48:38'!
PASSED!

!testRun: #MarsRoverTests #test05RotatingLeftWorksProperlyForAllOrientations stamp: 'fr 10/25/2020 22:48:38'!
PASSED!

!testRun: #MarsRoverTests #test06RotatingRightWorksProperlyForAllOrientations stamp: 'fr 10/25/2020 22:48:38'!
PASSED!

!testRun: #MarsRoverTests #test08CommandListWithMoreThanOneCommandExecutesProperly stamp: 'fr 10/25/2020 22:48:38'!
PASSED!

!testRun: #MarsRoverTests #test09CreatingAMarsRoverWithAnInvalidCardinalPointShouldFail stamp: 'fr 10/25/2020 22:48:38'!
PASSED!

!testRun: #MarsRoverTests #test10CommandListWithAnInvalidCommandShouldExecuteUntilItsFoundAndNoFurther stamp: 'fr 10/25/2020 22:48:38'!
PASSED!
!MarsRoverTests methodsFor: 'tests' stamp: 'fr 10/25/2020 22:49:57' prior: 50873708!
test03MovingWorksProperlyFacingNorth

	| marsRover |
	
	marsRover _ MarsRover at: 1@1 facing: north.

	self execute: 'f' assert: marsRover isAt: 1@2 facing: north.
	self execute: 'b' assert: marsRover isAt: 1@1 facing: north.! !
!MarsRoverTests methodsFor: 'tests' stamp: 'fr 10/25/2020 22:49:58' prior: 50874302!
test03MovingWorksProperlyFacingNorth

	| marsRover |
	
	marsRover _ MarsRover at: 1@1 facing: north.

	self execute: 'f' assert: marsRover isAt: 1@2 facing: north.
	self execute: 'b' assert: marsRover isAt: 1@1 facing: north! !

!testRun: #MarsRoverTests #test03MovingWorksProperlyFacingNorth stamp: 'fr 10/25/2020 22:49:59'!
PASSED!

!testRun: #MarsRoverTests #test01EmptyCommandListDoesNothing stamp: 'fr 10/25/2020 22:49:59'!
PASSED!

!testRun: #MarsRoverTests #test02MovingWorksProperlyFacingSouth stamp: 'fr 10/25/2020 22:49:59'!
PASSED!

!testRun: #MarsRoverTests #test03MovingWorksProperlyFacingNorth stamp: 'fr 10/25/2020 22:49:59'!
PASSED!

!testRun: #MarsRoverTests #test04MovingWorksProperlyFacingEast stamp: 'fr 10/25/2020 22:49:59'!
PASSED!

!testRun: #MarsRoverTests #test04RotatingRightWorksProperly stamp: 'fr 10/25/2020 22:49:59'!
PASSED!

!testRun: #MarsRoverTests #test05MovingWorksProperlyFacingWest stamp: 'fr 10/25/2020 22:49:59'!
PASSED!

!testRun: #MarsRoverTests #test05RotatingLeftWorksProperlyForAllOrientations stamp: 'fr 10/25/2020 22:49:59'!
PASSED!

!testRun: #MarsRoverTests #test06RotatingRightWorksProperlyForAllOrientations stamp: 'fr 10/25/2020 22:49:59'!
PASSED!

!testRun: #MarsRoverTests #test08CommandListWithMoreThanOneCommandExecutesProperly stamp: 'fr 10/25/2020 22:49:59'!
PASSED!

!testRun: #MarsRoverTests #test09CreatingAMarsRoverWithAnInvalidCardinalPointShouldFail stamp: 'fr 10/25/2020 22:49:59'!
PASSED!

!testRun: #MarsRoverTests #test10CommandListWithAnInvalidCommandShouldExecuteUntilItsFoundAndNoFurther stamp: 'fr 10/25/2020 22:49:59'!
PASSED!
!MarsRoverTests methodsFor: 'tests' stamp: 'fr 10/25/2020 22:51:07' prior: 50873761!
test04MovingWorksProperlyFacingEast

	| marsRover |
	
	marsRover _ MarsRover at: 1@1 facing: east.
	
	self execute: 'f' assert: marsRover isAt: 2@1 facing: east.	
	
	marsRover move: 'f'.
	
	self assert: (marsRover isAt: 2@1 facing: east).
	
	marsRover move: 'b'.
	
	self assert: (marsRover isAt: 1@1 facing: east) ! !
!MarsRoverTests methodsFor: 'tests' stamp: 'fr 10/25/2020 22:51:30' prior: 50874365!
test04MovingWorksProperlyFacingEast

	| marsRover |
	
	marsRover _ MarsRover at: 1@1 facing: east.
	
	self execute: 'f' assert: marsRover isAt: 2@1 facing: east.	
	self execute: 'b' assert: marsRover isAt: 1@1 facing: east! !

!testRun: #MarsRoverTests #test04MovingWorksProperlyFacingEast stamp: 'fr 10/25/2020 22:51:31'!
PASSED!

!testRun: #MarsRoverTests #test01EmptyCommandListDoesNothing stamp: 'fr 10/25/2020 22:51:31'!
PASSED!

!testRun: #MarsRoverTests #test02MovingWorksProperlyFacingSouth stamp: 'fr 10/25/2020 22:51:31'!
PASSED!

!testRun: #MarsRoverTests #test03MovingWorksProperlyFacingNorth stamp: 'fr 10/25/2020 22:51:31'!
PASSED!

!testRun: #MarsRoverTests #test04MovingWorksProperlyFacingEast stamp: 'fr 10/25/2020 22:51:31'!
PASSED!

!testRun: #MarsRoverTests #test04RotatingRightWorksProperly stamp: 'fr 10/25/2020 22:51:31'!
PASSED!

!testRun: #MarsRoverTests #test05MovingWorksProperlyFacingWest stamp: 'fr 10/25/2020 22:51:31'!
PASSED!

!testRun: #MarsRoverTests #test05RotatingLeftWorksProperlyForAllOrientations stamp: 'fr 10/25/2020 22:51:31'!
PASSED!

!testRun: #MarsRoverTests #test06RotatingRightWorksProperlyForAllOrientations stamp: 'fr 10/25/2020 22:51:31'!
PASSED!

!testRun: #MarsRoverTests #test08CommandListWithMoreThanOneCommandExecutesProperly stamp: 'fr 10/25/2020 22:51:31'!
PASSED!

!testRun: #MarsRoverTests #test09CreatingAMarsRoverWithAnInvalidCardinalPointShouldFail stamp: 'fr 10/25/2020 22:51:31'!
PASSED!

!testRun: #MarsRoverTests #test10CommandListWithAnInvalidCommandShouldExecuteUntilItsFoundAndNoFurther stamp: 'fr 10/25/2020 22:51:31'!
PASSED!

!methodRemoval: MarsRoverTests #test04RotatingRightWorksProperly stamp: 'fr 10/25/2020 22:51:38'!
test04RotatingRightWorksProperly

	| marsRover |
	
	marsRover _ MarsRover at: 1@1 facing: south.
	
	marsRover move: 'r'.
	
	self assert: (marsRover isAt: 1@1 facing: west)!
!MarsRoverTests methodsFor: 'tests' stamp: 'fr 10/25/2020 22:52:59' prior: 50873837!
test05MovingWorksProperlyFacingWest

	| marsRover |
	
	marsRover _ MarsRover at: 1@1 facing: west.
	
	self execute: 'f' assert: marsRover isAt: 0@1 facing: west.

	
	marsRover move: 'f'.
	
	self assert: (marsRover isAt: 0@1 facing: west).
	
	marsRover move: 'b'.
	
	self assert: (marsRover isAt: 1@1 facing: west) ! !
!MarsRoverTests methodsFor: 'tests' stamp: 'fr 10/25/2020 22:53:14' prior: 50874440!
test05MovingWorksProperlyFacingWest

	| marsRover |
	
	marsRover _ MarsRover at: 1@1 facing: west.
	
	self execute: 'f' assert: marsRover isAt: 0@1 facing: west.
	self execute: 'b' assert: marsRover isAt: 1@1 facing: west! !

!testRun: #MarsRoverTests #test05MovingWorksProperlyFacingWest stamp: 'fr 10/25/2020 22:53:16'!
PASSED!

!testRun: #MarsRoverTests #test01EmptyCommandListDoesNothing stamp: 'fr 10/25/2020 22:53:16'!
PASSED!

!testRun: #MarsRoverTests #test02MovingWorksProperlyFacingSouth stamp: 'fr 10/25/2020 22:53:16'!
PASSED!

!testRun: #MarsRoverTests #test03MovingWorksProperlyFacingNorth stamp: 'fr 10/25/2020 22:53:16'!
PASSED!

!testRun: #MarsRoverTests #test04MovingWorksProperlyFacingEast stamp: 'fr 10/25/2020 22:53:16'!
PASSED!

!testRun: #MarsRoverTests #test05MovingWorksProperlyFacingWest stamp: 'fr 10/25/2020 22:53:16'!
PASSED!

!testRun: #MarsRoverTests #test05RotatingLeftWorksProperlyForAllOrientations stamp: 'fr 10/25/2020 22:53:16'!
PASSED!

!testRun: #MarsRoverTests #test06RotatingRightWorksProperlyForAllOrientations stamp: 'fr 10/25/2020 22:53:16'!
PASSED!

!testRun: #MarsRoverTests #test08CommandListWithMoreThanOneCommandExecutesProperly stamp: 'fr 10/25/2020 22:53:16'!
PASSED!

!testRun: #MarsRoverTests #test09CreatingAMarsRoverWithAnInvalidCardinalPointShouldFail stamp: 'fr 10/25/2020 22:53:16'!
PASSED!

!testRun: #MarsRoverTests #test10CommandListWithAnInvalidCommandShouldExecuteUntilItsFoundAndNoFurther stamp: 'fr 10/25/2020 22:53:16'!
PASSED!
!MarsRoverTests methodsFor: 'tests' stamp: 'fr 10/25/2020 23:10:06' prior: 50873973!
test06RotatingRightWorksProperlyForAllOrientations

	| marsRover |
	
	marsRover _ MarsRover at: 1@1 facing: south.
	
	self execute: 'r' assert: marsRover isAt: 1@1 facing: west.
	self execute: 'r' assert: marsRover isAt: 1@1 facing: north.
	self execute: 'r' assert: marsRover isAt: 1@1 facing: east.
	self execute: 'r' assert: marsRover isAt: 1@1 facing: south! !

!testRun: #MarsRoverTests #test06RotatingRightWorksProperlyForAllOrientations stamp: 'fr 10/25/2020 23:10:07'!
PASSED!

!testRun: #MarsRoverTests #test01EmptyCommandListDoesNothing stamp: 'fr 10/25/2020 23:10:07'!
PASSED!

!testRun: #MarsRoverTests #test02MovingWorksProperlyFacingSouth stamp: 'fr 10/25/2020 23:10:07'!
PASSED!

!testRun: #MarsRoverTests #test03MovingWorksProperlyFacingNorth stamp: 'fr 10/25/2020 23:10:07'!
PASSED!

!testRun: #MarsRoverTests #test04MovingWorksProperlyFacingEast stamp: 'fr 10/25/2020 23:10:07'!
PASSED!

!testRun: #MarsRoverTests #test05MovingWorksProperlyFacingWest stamp: 'fr 10/25/2020 23:10:07'!
PASSED!

!testRun: #MarsRoverTests #test05RotatingLeftWorksProperlyForAllOrientations stamp: 'fr 10/25/2020 23:10:07'!
PASSED!

!testRun: #MarsRoverTests #test06RotatingRightWorksProperlyForAllOrientations stamp: 'fr 10/25/2020 23:10:07'!
PASSED!

!testRun: #MarsRoverTests #test08CommandListWithMoreThanOneCommandExecutesProperly stamp: 'fr 10/25/2020 23:10:07'!
PASSED!

!testRun: #MarsRoverTests #test09CreatingAMarsRoverWithAnInvalidCardinalPointShouldFail stamp: 'fr 10/25/2020 23:10:07'!
PASSED!

!testRun: #MarsRoverTests #test10CommandListWithAnInvalidCommandShouldExecuteUntilItsFoundAndNoFurther stamp: 'fr 10/25/2020 23:10:07'!
PASSED!
!MarsRoverTests methodsFor: 'tests' stamp: 'fr 10/25/2020 23:10:48' prior: 50874021!
test05RotatingLeftWorksProperlyForAllOrientations

	| marsRover |
	
	marsRover _ MarsRover at: 1@1 facing: south.
		
	self execute: 'l' assert: marsRover isAt: 1@1 facing: east.
	self execute: 'l' assert: marsRover isAt: 1@1 facing: north.
	self execute: 'l' assert: marsRover isAt: 1@1 facing: west.
	self execute: 'l' assert: marsRover isAt: 1@1 facing: south! !

!testRun: #MarsRoverTests #test05RotatingLeftWorksProperlyForAllOrientations stamp: 'fr 10/25/2020 23:10:49'!
PASSED!

!testRun: #MarsRoverTests #test01EmptyCommandListDoesNothing stamp: 'fr 10/25/2020 23:10:49'!
PASSED!

!testRun: #MarsRoverTests #test02MovingWorksProperlyFacingSouth stamp: 'fr 10/25/2020 23:10:49'!
PASSED!

!testRun: #MarsRoverTests #test03MovingWorksProperlyFacingNorth stamp: 'fr 10/25/2020 23:10:49'!
PASSED!

!testRun: #MarsRoverTests #test04MovingWorksProperlyFacingEast stamp: 'fr 10/25/2020 23:10:49'!
PASSED!

!testRun: #MarsRoverTests #test05MovingWorksProperlyFacingWest stamp: 'fr 10/25/2020 23:10:49'!
PASSED!

!testRun: #MarsRoverTests #test05RotatingLeftWorksProperlyForAllOrientations stamp: 'fr 10/25/2020 23:10:49'!
PASSED!

!testRun: #MarsRoverTests #test06RotatingRightWorksProperlyForAllOrientations stamp: 'fr 10/25/2020 23:10:49'!
PASSED!

!testRun: #MarsRoverTests #test08CommandListWithMoreThanOneCommandExecutesProperly stamp: 'fr 10/25/2020 23:10:49'!
PASSED!

!testRun: #MarsRoverTests #test09CreatingAMarsRoverWithAnInvalidCardinalPointShouldFail stamp: 'fr 10/25/2020 23:10:49'!
PASSED!

!testRun: #MarsRoverTests #test10CommandListWithAnInvalidCommandShouldExecuteUntilItsFoundAndNoFurther stamp: 'fr 10/25/2020 23:10:49'!
PASSED!
!MarsRoverTests methodsFor: 'tests' stamp: 'fr 10/25/2020 23:11:20' prior: 50872618!
test08CommandListWithMoreThanOneCommandExecutesProperly

	| marsRover |
	
	marsRover _ MarsRover at: 1@1 facing: north.
	
	self execute: 'flf' assert: marsRover isAt: 0@2 facing: west! !

!testRun: #MarsRoverTests #test08CommandListWithMoreThanOneCommandExecutesProperly stamp: 'fr 10/25/2020 23:11:21'!
PASSED!

!testRun: #MarsRoverTests #test01EmptyCommandListDoesNothing stamp: 'fr 10/25/2020 23:11:21'!
PASSED!

!testRun: #MarsRoverTests #test02MovingWorksProperlyFacingSouth stamp: 'fr 10/25/2020 23:11:21'!
PASSED!

!testRun: #MarsRoverTests #test03MovingWorksProperlyFacingNorth stamp: 'fr 10/25/2020 23:11:21'!
PASSED!

!testRun: #MarsRoverTests #test04MovingWorksProperlyFacingEast stamp: 'fr 10/25/2020 23:11:21'!
PASSED!

!testRun: #MarsRoverTests #test05MovingWorksProperlyFacingWest stamp: 'fr 10/25/2020 23:11:21'!
PASSED!

!testRun: #MarsRoverTests #test05RotatingLeftWorksProperlyForAllOrientations stamp: 'fr 10/25/2020 23:11:21'!
PASSED!

!testRun: #MarsRoverTests #test06RotatingRightWorksProperlyForAllOrientations stamp: 'fr 10/25/2020 23:11:21'!
PASSED!

!testRun: #MarsRoverTests #test08CommandListWithMoreThanOneCommandExecutesProperly stamp: 'fr 10/25/2020 23:11:21'!
PASSED!

!testRun: #MarsRoverTests #test09CreatingAMarsRoverWithAnInvalidCardinalPointShouldFail stamp: 'fr 10/25/2020 23:11:21'!
PASSED!

!testRun: #MarsRoverTests #test10CommandListWithAnInvalidCommandShouldExecuteUntilItsFoundAndNoFurther stamp: 'fr 10/25/2020 23:11:21'!
PASSED!
!MarsRoverTests methodsFor: 'tests' stamp: 'fr 10/25/2020 23:11:33'!
test06RotatingLeftWorksProperlyForAllOrientations

	| marsRover |
	
	marsRover _ MarsRover at: 1@1 facing: south.
		
	self execute: 'l' assert: marsRover isAt: 1@1 facing: east.
	self execute: 'l' assert: marsRover isAt: 1@1 facing: north.
	self execute: 'l' assert: marsRover isAt: 1@1 facing: west.
	self execute: 'l' assert: marsRover isAt: 1@1 facing: south! !

!methodRemoval: MarsRoverTests #test05RotatingLeftWorksProperlyForAllOrientations stamp: 'fr 10/25/2020 23:11:36'!
test05RotatingLeftWorksProperlyForAllOrientations

	| marsRover |
	
	marsRover _ MarsRover at: 1@1 facing: south.
		
	self execute: 'l' assert: marsRover isAt: 1@1 facing: east.
	self execute: 'l' assert: marsRover isAt: 1@1 facing: north.
	self execute: 'l' assert: marsRover isAt: 1@1 facing: west.
	self execute: 'l' assert: marsRover isAt: 1@1 facing: south!
!MarsRoverTests methodsFor: 'tests' stamp: 'fr 10/25/2020 23:11:42'!
test07RotatingRightWorksProperlyForAllOrientations

	| marsRover |
	
	marsRover _ MarsRover at: 1@1 facing: south.
	
	self execute: 'r' assert: marsRover isAt: 1@1 facing: west.
	self execute: 'r' assert: marsRover isAt: 1@1 facing: north.
	self execute: 'r' assert: marsRover isAt: 1@1 facing: east.
	self execute: 'r' assert: marsRover isAt: 1@1 facing: south! !

!methodRemoval: MarsRoverTests #test06RotatingRightWorksProperlyForAllOrientations stamp: 'fr 10/25/2020 23:11:44'!
test06RotatingRightWorksProperlyForAllOrientations

	| marsRover |
	
	marsRover _ MarsRover at: 1@1 facing: south.
	
	self execute: 'r' assert: marsRover isAt: 1@1 facing: west.
	self execute: 'r' assert: marsRover isAt: 1@1 facing: north.
	self execute: 'r' assert: marsRover isAt: 1@1 facing: east.
	self execute: 'r' assert: marsRover isAt: 1@1 facing: south!

!testRun: #MarsRoverTests #test06RotatingLeftWorksProperlyForAllOrientations stamp: 'fr 10/25/2020 23:11:47'!
PASSED!

!testRun: #MarsRoverTests #test01EmptyCommandListDoesNothing stamp: 'fr 10/25/2020 23:11:49'!
PASSED!

!testRun: #MarsRoverTests #test02MovingWorksProperlyFacingSouth stamp: 'fr 10/25/2020 23:11:49'!
PASSED!

!testRun: #MarsRoverTests #test03MovingWorksProperlyFacingNorth stamp: 'fr 10/25/2020 23:11:49'!
PASSED!

!testRun: #MarsRoverTests #test04MovingWorksProperlyFacingEast stamp: 'fr 10/25/2020 23:11:49'!
PASSED!

!testRun: #MarsRoverTests #test05MovingWorksProperlyFacingWest stamp: 'fr 10/25/2020 23:11:49'!
PASSED!

!testRun: #MarsRoverTests #test06RotatingLeftWorksProperlyForAllOrientations stamp: 'fr 10/25/2020 23:11:49'!
PASSED!

!testRun: #MarsRoverTests #test07RotatingRightWorksProperlyForAllOrientations stamp: 'fr 10/25/2020 23:11:49'!
PASSED!

!testRun: #MarsRoverTests #test08CommandListWithMoreThanOneCommandExecutesProperly stamp: 'fr 10/25/2020 23:11:49'!
PASSED!

!testRun: #MarsRoverTests #test09CreatingAMarsRoverWithAnInvalidCardinalPointShouldFail stamp: 'fr 10/25/2020 23:11:49'!
PASSED!

!testRun: #MarsRoverTests #test10CommandListWithAnInvalidCommandShouldExecuteUntilItsFoundAndNoFurther stamp: 'fr 10/25/2020 23:11:49'!
PASSED!
!MarsRoverTests methodsFor: 'tests' stamp: 'fr 10/25/2020 23:12:21' prior: 50874453!
test05MovingWorksProperlyFacingWest

	| marsRover |
	
	marsRover _ MarsRover at: 1@1 facing: west.
	
	self execute: 'f' assert: marsRover isAt: 0@1 facing: west.
	self execute: 'b' assert: marsRover isAt: 1@1 facing: west! !
!MarsRoverTests methodsFor: 'tests' stamp: 'fr 10/25/2020 23:17:35' prior: 50872562!
test01EmptyCommandListDoesNothing

	| marsRover |
	
	marsRover _ MarsRover at: 1@1 facing: south.
	
	marsRover move: ''.
	
	self assert: (marsRover isAt: 1@1 facing: south).
	
	self execute: '' assert: marsRover isAt: 1@1 facing: south ! !
!MarsRoverTests methodsFor: 'tests' stamp: 'fr 10/25/2020 23:17:37' prior: 50874771!
test01EmptyCommandListDoesNothing

	| marsRover |
	
	marsRover _ MarsRover at: 1@1 facing: south.
	
	self execute: '' assert: marsRover isAt: 1@1 facing: south ! !

!testRun: #MarsRoverTests #test01EmptyCommandListDoesNothing stamp: 'fr 10/25/2020 23:17:38'!
PASSED!

!testRun: #MarsRoverTests #test01EmptyCommandListDoesNothing stamp: 'fr 10/25/2020 23:17:38'!
PASSED!

!testRun: #MarsRoverTests #test02MovingWorksProperlyFacingSouth stamp: 'fr 10/25/2020 23:17:38'!
PASSED!

!testRun: #MarsRoverTests #test03MovingWorksProperlyFacingNorth stamp: 'fr 10/25/2020 23:17:38'!
PASSED!

!testRun: #MarsRoverTests #test04MovingWorksProperlyFacingEast stamp: 'fr 10/25/2020 23:17:38'!
PASSED!

!testRun: #MarsRoverTests #test05MovingWorksProperlyFacingWest stamp: 'fr 10/25/2020 23:17:38'!
PASSED!

!testRun: #MarsRoverTests #test06RotatingLeftWorksProperlyForAllOrientations stamp: 'fr 10/25/2020 23:17:38'!
PASSED!

!testRun: #MarsRoverTests #test07RotatingRightWorksProperlyForAllOrientations stamp: 'fr 10/25/2020 23:17:38'!
PASSED!

!testRun: #MarsRoverTests #test08CommandListWithMoreThanOneCommandExecutesProperly stamp: 'fr 10/25/2020 23:17:38'!
PASSED!

!testRun: #MarsRoverTests #test09CreatingAMarsRoverWithAnInvalidCardinalPointShouldFail stamp: 'fr 10/25/2020 23:17:38'!
PASSED!

!testRun: #MarsRoverTests #test10CommandListWithAnInvalidCommandShouldExecuteUntilItsFoundAndNoFurther stamp: 'fr 10/25/2020 23:17:38'!
PASSED!
!MarsRoverTests methodsFor: 'tests' stamp: 'fr 10/25/2020 23:20:09'!
assertMovingTo: aPosition worksProperlyWhenFacing: aCardinalPoint

	| marsRover |
	
	marsRover _ MarsRover at: 1@1 facing: aCardinalPoint.
	
	self execute: 'f' assert: marsRover isAt: aPosition facing: aCardinalPoint.
	self execute: 'b' assert: marsRover isAt: 1@1 facing: aCardinalPoint! !
!MarsRoverTests methodsFor: 'tests' stamp: 'fr 10/25/2020 23:20:48' prior: 50874249!
test02MovingWorksProperlyFacingSouth
	
	self assertMovingTo: 1@0 worksProperlyWhenFacing: south ! !

!testRun: #MarsRoverTests #test02MovingWorksProperlyFacingSouth stamp: 'fr 10/25/2020 23:20:51'!
PASSED!

!testRun: #MarsRoverTests #test01EmptyCommandListDoesNothing stamp: 'fr 10/25/2020 23:20:51'!
PASSED!

!testRun: #MarsRoverTests #test02MovingWorksProperlyFacingSouth stamp: 'fr 10/25/2020 23:20:51'!
PASSED!

!testRun: #MarsRoverTests #test03MovingWorksProperlyFacingNorth stamp: 'fr 10/25/2020 23:20:51'!
PASSED!

!testRun: #MarsRoverTests #test04MovingWorksProperlyFacingEast stamp: 'fr 10/25/2020 23:20:51'!
PASSED!

!testRun: #MarsRoverTests #test05MovingWorksProperlyFacingWest stamp: 'fr 10/25/2020 23:20:51'!
PASSED!

!testRun: #MarsRoverTests #test06RotatingLeftWorksProperlyForAllOrientations stamp: 'fr 10/25/2020 23:20:51'!
PASSED!

!testRun: #MarsRoverTests #test07RotatingRightWorksProperlyForAllOrientations stamp: 'fr 10/25/2020 23:20:51'!
PASSED!

!testRun: #MarsRoverTests #test08CommandListWithMoreThanOneCommandExecutesProperly stamp: 'fr 10/25/2020 23:20:51'!
PASSED!

!testRun: #MarsRoverTests #test09CreatingAMarsRoverWithAnInvalidCardinalPointShouldFail stamp: 'fr 10/25/2020 23:20:51'!
PASSED!

!testRun: #MarsRoverTests #test10CommandListWithAnInvalidCommandShouldExecuteUntilItsFoundAndNoFurther stamp: 'fr 10/25/2020 23:20:51'!
PASSED!
!MarsRoverTests methodsFor: 'tests' stamp: 'fr 10/25/2020 23:21:31'!
assertGoingAndComingBackFrom: aPosition worksProperlyWhenFacing: aCardinalPoint

	| marsRover |
	
	marsRover _ MarsRover at: 1@1 facing: aCardinalPoint.
	
	self execute: 'f' assert: marsRover isAt: aPosition facing: aCardinalPoint.
	self execute: 'b' assert: marsRover isAt: 1@1 facing: aCardinalPoint! !
!MarsRoverTests methodsFor: 'as yet unclassified' stamp: 'fr 10/25/2020 23:21:31' prior: 50874841!
test02MovingWorksProperlyFacingSouth
	
	self assertGoingAndComingBackFrom: 1@0 worksProperlyWhenFacing: south ! !

!methodRemoval: MarsRoverTests #assertMovingTo:worksProperlyWhenFacing: stamp: 'fr 10/25/2020 23:21:31'!
assertMovingTo: aPosition worksProperlyWhenFacing: aCardinalPoint

	| marsRover |
	
	marsRover _ MarsRover at: 1@1 facing: aCardinalPoint.
	
	self execute: 'f' assert: marsRover isAt: aPosition facing: aCardinalPoint.
	self execute: 'b' assert: marsRover isAt: 1@1 facing: aCardinalPoint!
!MarsRoverTests methodsFor: 'tests' stamp: 'fr 10/25/2020 23:22:11' prior: 50874312!
test03MovingWorksProperlyFacingNorth

	self assertGoingAndComingBackFrom: 1@2 worksProperlyWhenFacing: north ! !

!testRun: #MarsRoverTests #test03MovingWorksProperlyFacingNorth stamp: 'fr 10/25/2020 23:22:12'!
PASSED!

!testRun: #MarsRoverTests #test01EmptyCommandListDoesNothing stamp: 'fr 10/25/2020 23:22:12'!
PASSED!

!testRun: #MarsRoverTests #test02MovingWorksProperlyFacingSouth stamp: 'fr 10/25/2020 23:22:12'!
PASSED!

!testRun: #MarsRoverTests #test03MovingWorksProperlyFacingNorth stamp: 'fr 10/25/2020 23:22:12'!
PASSED!

!testRun: #MarsRoverTests #test04MovingWorksProperlyFacingEast stamp: 'fr 10/25/2020 23:22:12'!
PASSED!

!testRun: #MarsRoverTests #test05MovingWorksProperlyFacingWest stamp: 'fr 10/25/2020 23:22:12'!
PASSED!

!testRun: #MarsRoverTests #test06RotatingLeftWorksProperlyForAllOrientations stamp: 'fr 10/25/2020 23:22:12'!
PASSED!

!testRun: #MarsRoverTests #test07RotatingRightWorksProperlyForAllOrientations stamp: 'fr 10/25/2020 23:22:12'!
PASSED!

!testRun: #MarsRoverTests #test08CommandListWithMoreThanOneCommandExecutesProperly stamp: 'fr 10/25/2020 23:22:12'!
PASSED!

!testRun: #MarsRoverTests #test09CreatingAMarsRoverWithAnInvalidCardinalPointShouldFail stamp: 'fr 10/25/2020 23:22:12'!
PASSED!

!testRun: #MarsRoverTests #test10CommandListWithAnInvalidCommandShouldExecuteUntilItsFoundAndNoFurther stamp: 'fr 10/25/2020 23:22:12'!
PASSED!
!MarsRoverTests methodsFor: 'tests' stamp: 'fr 10/25/2020 23:22:22' prior: 50874378!
test04MovingWorksProperlyFacingEast

	| marsRover |
	
	marsRover _ MarsRover at: 1@1 facing: east.
	
	self execute: 'f' assert: marsRover isAt: 2@1 facing: east.	
	self execute: 'b' assert: marsRover isAt: 1@1 facing: east.
	
	self assertGoingAndComingBackFrom: 1@0 worksProperlyWhenFacing: south ! !
!MarsRoverTests methodsFor: 'tests' stamp: 'fr 10/25/2020 23:22:39' prior: 50874964!
test04MovingWorksProperlyFacingEast
	
	self assertGoingAndComingBackFrom: 2@1 worksProperlyWhenFacing: east ! !
!MarsRoverTests methodsFor: 'tests' stamp: 'fr 10/25/2020 23:22:56' prior: 50874761!
test05MovingWorksProperlyFacingWest

	| marsRover |
	
	marsRover _ MarsRover at: 1@1 facing: west.
	
	self execute: 'f' assert: marsRover isAt: 0@1 facing: west.
	self execute: 'b' assert: marsRover isAt: 1@1 facing: west.
	
	self assertGoingAndComingBackFrom: 0@1 worksProperlyWhenFacing: west ! !

!testRun: #MarsRoverTests #test05MovingWorksProperlyFacingWest stamp: 'fr 10/25/2020 23:22:57'!
PASSED!

!testRun: #MarsRoverTests #test01EmptyCommandListDoesNothing stamp: 'fr 10/25/2020 23:22:57'!
PASSED!

!testRun: #MarsRoverTests #test02MovingWorksProperlyFacingSouth stamp: 'fr 10/25/2020 23:22:57'!
PASSED!

!testRun: #MarsRoverTests #test03MovingWorksProperlyFacingNorth stamp: 'fr 10/25/2020 23:22:57'!
PASSED!

!testRun: #MarsRoverTests #test04MovingWorksProperlyFacingEast stamp: 'fr 10/25/2020 23:22:57'!
PASSED!

!testRun: #MarsRoverTests #test05MovingWorksProperlyFacingWest stamp: 'fr 10/25/2020 23:22:57'!
PASSED!

!testRun: #MarsRoverTests #test06RotatingLeftWorksProperlyForAllOrientations stamp: 'fr 10/25/2020 23:22:57'!
PASSED!

!testRun: #MarsRoverTests #test07RotatingRightWorksProperlyForAllOrientations stamp: 'fr 10/25/2020 23:22:57'!
PASSED!

!testRun: #MarsRoverTests #test08CommandListWithMoreThanOneCommandExecutesProperly stamp: 'fr 10/25/2020 23:22:57'!
PASSED!

!testRun: #MarsRoverTests #test09CreatingAMarsRoverWithAnInvalidCardinalPointShouldFail stamp: 'fr 10/25/2020 23:22:57'!
PASSED!

!testRun: #MarsRoverTests #test10CommandListWithAnInvalidCommandShouldExecuteUntilItsFoundAndNoFurther stamp: 'fr 10/25/2020 23:22:57'!
PASSED!
!MarsRoverTests methodsFor: 'tests' stamp: 'fr 10/25/2020 23:23:02' prior: 50874984!
test05MovingWorksProperlyFacingWest
	
	self assertGoingAndComingBackFrom: 0@1 worksProperlyWhenFacing: west ! !

!testRun: #MarsRoverTests #test05MovingWorksProperlyFacingWest stamp: 'fr 10/25/2020 23:23:03'!
PASSED!

!testRun: #MarsRoverTests #test01EmptyCommandListDoesNothing stamp: 'fr 10/25/2020 23:23:03'!
PASSED!

!testRun: #MarsRoverTests #test02MovingWorksProperlyFacingSouth stamp: 'fr 10/25/2020 23:23:03'!
PASSED!

!testRun: #MarsRoverTests #test03MovingWorksProperlyFacingNorth stamp: 'fr 10/25/2020 23:23:03'!
PASSED!

!testRun: #MarsRoverTests #test04MovingWorksProperlyFacingEast stamp: 'fr 10/25/2020 23:23:03'!
PASSED!

!testRun: #MarsRoverTests #test05MovingWorksProperlyFacingWest stamp: 'fr 10/25/2020 23:23:03'!
PASSED!

!testRun: #MarsRoverTests #test06RotatingLeftWorksProperlyForAllOrientations stamp: 'fr 10/25/2020 23:23:03'!
PASSED!

!testRun: #MarsRoverTests #test07RotatingRightWorksProperlyForAllOrientations stamp: 'fr 10/25/2020 23:23:03'!
PASSED!

!testRun: #MarsRoverTests #test08CommandListWithMoreThanOneCommandExecutesProperly stamp: 'fr 10/25/2020 23:23:03'!
PASSED!

!testRun: #MarsRoverTests #test09CreatingAMarsRoverWithAnInvalidCardinalPointShouldFail stamp: 'fr 10/25/2020 23:23:03'!
PASSED!

!testRun: #MarsRoverTests #test10CommandListWithAnInvalidCommandShouldExecuteUntilItsFoundAndNoFurther stamp: 'fr 10/25/2020 23:23:03'!
PASSED!
!MarsRoverTests methodsFor: 'tests' stamp: 'fr 10/25/2020 23:27:20' prior: 50874662!
test06RotatingLeftWorksProperlyForAllOrientations

	| marsRover |
	
	marsRover _ MarsRover at: 1@1 facing: south.
		
	self execute: 'l' assert: marsRover isAt: 1@1 facing: east.
	self execute: 'l' assert: marsRover isAt: 1@1 facing: north.
	self execute: 'l' assert: marsRover isAt: 1@1 facing: west.
	self execute: 'l' assert: marsRover isAt: 1@1 facing: south.
	
	self assertRotating: 'l' worksProperlyWithLeft: east andRight: west.! !
!MarsRoverTests methodsFor: 'tests' stamp: 'fr 10/25/2020 23:28:19'!
assertRotating: aRotationCommand worksProperlyWithLeft: aLeftCardinalPoint andRight: aRightCardinalPoint

	| marsRover |
	
	marsRover _ MarsRover at: 1@1 facing: south.
		
	self execute: 'l' assert: marsRover isAt: 1@1 facing: east.
	self execute: 'l' assert: marsRover isAt: 1@1 facing: north.
	self execute: 'l' assert: marsRover isAt: 1@1 facing: west.
	self execute: 'l' assert: marsRover isAt: 1@1 facing: south.
	
! !
!MarsRoverTests methodsFor: 'tests' stamp: 'fr 10/25/2020 23:30:12'!
assertRotating: aRotationCommand worksProperlyPassingFirst: aLeftCardinalPoint andThen: aRightCardinalPoint

	| marsRover |
	
	marsRover _ MarsRover at: 1@1 facing: south.
		
	self execute: 'l' assert: marsRover isAt: 1@1 facing: east.
	self execute: 'l' assert: marsRover isAt: 1@1 facing: north.
	self execute: 'l' assert: marsRover isAt: 1@1 facing: west.
	self execute: 'l' assert: marsRover isAt: 1@1 facing: south.
	
! !
!MarsRoverTests methodsFor: 'as yet unclassified' stamp: 'fr 10/25/2020 23:30:12' prior: 50875082!
test06RotatingLeftWorksProperlyForAllOrientations

	| marsRover |
	
	marsRover _ MarsRover at: 1@1 facing: south.
		
	self execute: 'l' assert: marsRover isAt: 1@1 facing: east.
	self execute: 'l' assert: marsRover isAt: 1@1 facing: north.
	self execute: 'l' assert: marsRover isAt: 1@1 facing: west.
	self execute: 'l' assert: marsRover isAt: 1@1 facing: south.
	
	self assertRotating: 'l' worksProperlyPassingFirst: east andThen: west.! !

!methodRemoval: MarsRoverTests #assertRotating:worksProperlyWithLeft:andRight: stamp: 'fr 10/25/2020 23:30:12'!
assertRotating: aRotationCommand worksProperlyWithLeft: aLeftCardinalPoint andRight: aRightCardinalPoint

	| marsRover |
	
	marsRover _ MarsRover at: 1@1 facing: south.
		
	self execute: 'l' assert: marsRover isAt: 1@1 facing: east.
	self execute: 'l' assert: marsRover isAt: 1@1 facing: north.
	self execute: 'l' assert: marsRover isAt: 1@1 facing: west.
	self execute: 'l' assert: marsRover isAt: 1@1 facing: south.
	
!
!MarsRoverTests methodsFor: 'tests' stamp: 'fr 10/25/2020 23:31:03' prior: 50875114!
assertRotating: aRotationCommand worksProperlyPassingFirst: firstCardinalPoint andThen: secondCardinalPoint

	| marsRover |
	
	marsRover _ MarsRover at: 1@1 facing: south.
		
	self execute: aRotationCommand assert: marsRover isAt: 1@1 facing: firstCardinalPoint.
	self execute: aRotationCommand assert: marsRover isAt: 1@1 facing: north.
	self execute: aRotationCommand assert: marsRover isAt: 1@1 facing: secondCardinalPoint.
	self execute: aRotationCommand assert: marsRover isAt: 1@1 facing: south.
	
! !
!MarsRoverTests methodsFor: 'tests' stamp: 'fr 10/25/2020 23:31:11' prior: 50875131!
test06RotatingLeftWorksProperlyForAllOrientations
	
	self assertRotating: 'l' worksProperlyPassingFirst: east andThen: west.! !

!testRun: #MarsRoverTests #test06RotatingLeftWorksProperlyForAllOrientations stamp: 'fr 10/25/2020 23:31:12'!
PASSED!

!testRun: #MarsRoverTests #test01EmptyCommandListDoesNothing stamp: 'fr 10/25/2020 23:31:12'!
PASSED!

!testRun: #MarsRoverTests #test02MovingWorksProperlyFacingSouth stamp: 'fr 10/25/2020 23:31:12'!
PASSED!

!testRun: #MarsRoverTests #test03MovingWorksProperlyFacingNorth stamp: 'fr 10/25/2020 23:31:12'!
PASSED!

!testRun: #MarsRoverTests #test04MovingWorksProperlyFacingEast stamp: 'fr 10/25/2020 23:31:12'!
PASSED!

!testRun: #MarsRoverTests #test05MovingWorksProperlyFacingWest stamp: 'fr 10/25/2020 23:31:12'!
PASSED!

!testRun: #MarsRoverTests #test06RotatingLeftWorksProperlyForAllOrientations stamp: 'fr 10/25/2020 23:31:12'!
PASSED!

!testRun: #MarsRoverTests #test07RotatingRightWorksProperlyForAllOrientations stamp: 'fr 10/25/2020 23:31:12'!
PASSED!

!testRun: #MarsRoverTests #test08CommandListWithMoreThanOneCommandExecutesProperly stamp: 'fr 10/25/2020 23:31:12'!
PASSED!

!testRun: #MarsRoverTests #test09CreatingAMarsRoverWithAnInvalidCardinalPointShouldFail stamp: 'fr 10/25/2020 23:31:12'!
PASSED!

!testRun: #MarsRoverTests #test10CommandListWithAnInvalidCommandShouldExecuteUntilItsFoundAndNoFurther stamp: 'fr 10/25/2020 23:31:12'!
PASSED!
!MarsRoverTests methodsFor: 'tests' stamp: 'fr 10/25/2020 23:31:30' prior: 50874691!
test07RotatingRightWorksProperlyForAllOrientations
	
	self assertRotating: 'r' worksProperlyPassingFirst: west andThen: east.! !

!testRun: #MarsRoverTests #test07RotatingRightWorksProperlyForAllOrientations stamp: 'fr 10/25/2020 23:31:31'!
PASSED!

!testRun: #MarsRoverTests #test01EmptyCommandListDoesNothing stamp: 'fr 10/25/2020 23:31:31'!
PASSED!

!testRun: #MarsRoverTests #test02MovingWorksProperlyFacingSouth stamp: 'fr 10/25/2020 23:31:31'!
PASSED!

!testRun: #MarsRoverTests #test03MovingWorksProperlyFacingNorth stamp: 'fr 10/25/2020 23:31:31'!
PASSED!

!testRun: #MarsRoverTests #test04MovingWorksProperlyFacingEast stamp: 'fr 10/25/2020 23:31:31'!
PASSED!

!testRun: #MarsRoverTests #test05MovingWorksProperlyFacingWest stamp: 'fr 10/25/2020 23:31:31'!
PASSED!

!testRun: #MarsRoverTests #test06RotatingLeftWorksProperlyForAllOrientations stamp: 'fr 10/25/2020 23:31:31'!
PASSED!

!testRun: #MarsRoverTests #test07RotatingRightWorksProperlyForAllOrientations stamp: 'fr 10/25/2020 23:31:31'!
PASSED!

!testRun: #MarsRoverTests #test08CommandListWithMoreThanOneCommandExecutesProperly stamp: 'fr 10/25/2020 23:31:31'!
PASSED!

!testRun: #MarsRoverTests #test09CreatingAMarsRoverWithAnInvalidCardinalPointShouldFail stamp: 'fr 10/25/2020 23:31:31'!
PASSED!

!testRun: #MarsRoverTests #test10CommandListWithAnInvalidCommandShouldExecuteUntilItsFoundAndNoFurther stamp: 'fr 10/25/2020 23:31:31'!
PASSED!

!classDefinition: #MarsRoverTests category: 'MarsRover - Exercise' stamp: 'fr 10/25/2020 23:44:45'!
TestCase subclass: #MarsRoverTests
	instanceVariableNames: 'south north east west marsRoverTest'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover - Exercise'!
!MarsRoverTests methodsFor: 'tests - invalid entries' stamp: 'fr 10/25/2020 23:44:43'!
restartMarsRoverFacing: aCardinalPoint
	
	marsRoverTest _ MarsRover at: 1@1 facing: north! !
!MarsRoverTests methodsFor: 'tests - multiple and empty' stamp: 'fr 10/25/2020 23:46:08' prior: 50874613!
test08CommandListWithMoreThanOneCommandExecutesProperly

	self startMarsRoverFacing: north.
	
	self execute: 'flf' assert: marsRoverTest isAt: 0@2 facing: west! !
!MarsRoverTests methodsFor: 'tests - private' stamp: 'fr 10/25/2020 23:48:50'!
startMarsRoverFacing: aCardinalPoint
	
	marsRoverTest _ MarsRover at: 1@1 facing: north! !

!methodRemoval: MarsRoverTests #restartMarsRoverFacing: stamp: 'fr 10/25/2020 23:48:50'!
restartMarsRoverFacing: aCardinalPoint
	
	marsRoverTest _ MarsRover at: 1@1 facing: north!
!MarsRoverTests methodsFor: 'tests - private' stamp: 'fr 10/25/2020 23:49:20' prior: 50875165!
assertRotating: aRotationCommand worksProperlyPassingFirst: firstCardinalPoint andThen: secondCardinalPoint

	self startMarsRoverFacing: south.
		
	self execute: aRotationCommand assert: marsRoverTest isAt: 1@1 facing: firstCardinalPoint.
	self execute: aRotationCommand assert: marsRoverTest isAt: 1@1 facing: north.
	self execute: aRotationCommand assert: marsRoverTest isAt: 1@1 facing: secondCardinalPoint.
	self execute: aRotationCommand assert: marsRoverTest isAt: 1@1 facing: south.
	
! !
!MarsRoverTests methodsFor: 'tests - private' stamp: 'fr 10/25/2020 23:49:52' prior: 50874886!
assertGoingAndComingBackFrom: aPosition worksProperlyWhenFacing: aCardinalPoint
	
	self startMarsRoverFacing: aCardinalPoint.
	
	self execute: 'f' assert: marsRoverTest isAt: aPosition facing: aCardinalPoint.
	self execute: 'b' assert: marsRoverTest isAt: 1@1 facing: aCardinalPoint! !

!testRun: #MarsRoverTests #test06RotatingLeftWorksProperlyForAllOrientations stamp: 'fr 10/25/2020 23:50:03'!
FAILURE!

!testRun: #MarsRoverTests #test07RotatingRightWorksProperlyForAllOrientations stamp: 'fr 10/25/2020 23:50:03'!
FAILURE!

!testRun: #MarsRoverTests #test02MovingWorksProperlyFacingSouth stamp: 'fr 10/25/2020 23:50:09'!
FAILURE!

!testRun: #MarsRoverTests #test03MovingWorksProperlyFacingNorth stamp: 'fr 10/25/2020 23:50:09'!
PASSED!

!testRun: #MarsRoverTests #test04MovingWorksProperlyFacingEast stamp: 'fr 10/25/2020 23:50:09'!
FAILURE!

!testRun: #MarsRoverTests #test05MovingWorksProperlyFacingWest stamp: 'fr 10/25/2020 23:50:09'!
FAILURE!

!testRun: #MarsRoverTests #test01EmptyCommandListDoesNothing stamp: 'fr 10/25/2020 23:50:13'!
PASSED!

!testRun: #MarsRoverTests #test08CommandListWithMoreThanOneCommandExecutesProperly stamp: 'fr 10/25/2020 23:50:13'!
PASSED!

!testRun: #MarsRoverTests #test09CreatingAMarsRoverWithAnInvalidCardinalPointShouldFail stamp: 'fr 10/25/2020 23:50:16'!
PASSED!

!testRun: #MarsRoverTests #test10CommandListWithAnInvalidCommandShouldExecuteUntilItsFoundAndNoFurther stamp: 'fr 10/25/2020 23:50:16'!
PASSED!

!testRun: #MarsRoverTests #test02MovingWorksProperlyFacingSouth stamp: 'fr 10/25/2020 23:51:29'!
FAILURE!

!testRun: #MarsRoverTests #test03MovingWorksProperlyFacingNorth stamp: 'fr 10/25/2020 23:51:29'!
PASSED!

!testRun: #MarsRoverTests #test04MovingWorksProperlyFacingEast stamp: 'fr 10/25/2020 23:51:29'!
FAILURE!

!testRun: #MarsRoverTests #test05MovingWorksProperlyFacingWest stamp: 'fr 10/25/2020 23:51:29'!
FAILURE!
!MarsRoverTests methodsFor: 'tests - private' stamp: 'fr 10/25/2020 23:52:17' prior: 50875302!
startMarsRoverFacing: aCardinalPoint
	
	marsRoverTest _ MarsRover at: 1@1 facing: aCardinalPoint ! !

!testRun: #MarsRoverTests #test06RotatingLeftWorksProperlyForAllOrientations stamp: 'fr 10/25/2020 23:52:19'!
PASSED!

!testRun: #MarsRoverTests #test07RotatingRightWorksProperlyForAllOrientations stamp: 'fr 10/25/2020 23:52:19'!
PASSED!

!testRun: #MarsRoverTests #test02MovingWorksProperlyFacingSouth stamp: 'fr 10/25/2020 23:52:20'!
PASSED!

!testRun: #MarsRoverTests #test03MovingWorksProperlyFacingNorth stamp: 'fr 10/25/2020 23:52:20'!
PASSED!

!testRun: #MarsRoverTests #test04MovingWorksProperlyFacingEast stamp: 'fr 10/25/2020 23:52:20'!
PASSED!

!testRun: #MarsRoverTests #test05MovingWorksProperlyFacingWest stamp: 'fr 10/25/2020 23:52:20'!
PASSED!

!testRun: #MarsRoverTests #test01EmptyCommandListDoesNothing stamp: 'fr 10/25/2020 23:52:21'!
PASSED!

!testRun: #MarsRoverTests #test08CommandListWithMoreThanOneCommandExecutesProperly stamp: 'fr 10/25/2020 23:52:21'!
PASSED!

!testRun: #MarsRoverTests #test09CreatingAMarsRoverWithAnInvalidCardinalPointShouldFail stamp: 'fr 10/25/2020 23:52:22'!
PASSED!

!testRun: #MarsRoverTests #test10CommandListWithAnInvalidCommandShouldExecuteUntilItsFoundAndNoFurther stamp: 'fr 10/25/2020 23:52:22'!
PASSED!

!testRun: #MarsRoverTests #test01EmptyCommandListDoesNothing stamp: 'fr 10/25/2020 23:52:35'!
PASSED!

!testRun: #MarsRoverTests #test01EmptyCommandListDoesNothing stamp: 'fr 10/25/2020 23:52:38'!
PASSED!

!testRun: #MarsRoverTests #test01EmptyCommandListDoesNothing stamp: 'fr 10/25/2020 23:52:38'!
PASSED!

!testRun: #MarsRoverTests #test02MovingWorksProperlyFacingSouth stamp: 'fr 10/25/2020 23:52:38'!
PASSED!

!testRun: #MarsRoverTests #test03MovingWorksProperlyFacingNorth stamp: 'fr 10/25/2020 23:52:38'!
PASSED!

!testRun: #MarsRoverTests #test04MovingWorksProperlyFacingEast stamp: 'fr 10/25/2020 23:52:38'!
PASSED!

!testRun: #MarsRoverTests #test05MovingWorksProperlyFacingWest stamp: 'fr 10/25/2020 23:52:38'!
PASSED!

!testRun: #MarsRoverTests #test06RotatingLeftWorksProperlyForAllOrientations stamp: 'fr 10/25/2020 23:52:38'!
PASSED!

!testRun: #MarsRoverTests #test07RotatingRightWorksProperlyForAllOrientations stamp: 'fr 10/25/2020 23:52:38'!
PASSED!

!testRun: #MarsRoverTests #test08CommandListWithMoreThanOneCommandExecutesProperly stamp: 'fr 10/25/2020 23:52:38'!
PASSED!

!testRun: #MarsRoverTests #test09CreatingAMarsRoverWithAnInvalidCardinalPointShouldFail stamp: 'fr 10/25/2020 23:52:38'!
PASSED!

!testRun: #MarsRoverTests #test10CommandListWithAnInvalidCommandShouldExecuteUntilItsFoundAndNoFurther stamp: 'fr 10/25/2020 23:52:38'!
PASSED!
!MarsRoverTests methodsFor: 'tests - multiple and empty' stamp: 'fr 10/25/2020 23:55:17' prior: 50874782!
test01EmptyCommandListDoesNothing

	self startMarsRoverFacing: south.
	
	self execute: '' assert: marsRoverTest isAt: 1@1 facing: south ! !

!testRun: #MarsRoverTests #test06RotatingLeftWorksProperlyForAllOrientations stamp: 'fr 10/25/2020 23:55:25'!
PASSED!

!testRun: #MarsRoverTests #test07RotatingRightWorksProperlyForAllOrientations stamp: 'fr 10/25/2020 23:55:25'!
PASSED!

!testRun: #MarsRoverTests #test02MovingWorksProperlyFacingSouth stamp: 'fr 10/25/2020 23:55:26'!
PASSED!

!testRun: #MarsRoverTests #test03MovingWorksProperlyFacingNorth stamp: 'fr 10/25/2020 23:55:26'!
PASSED!

!testRun: #MarsRoverTests #test04MovingWorksProperlyFacingEast stamp: 'fr 10/25/2020 23:55:26'!
PASSED!

!testRun: #MarsRoverTests #test05MovingWorksProperlyFacingWest stamp: 'fr 10/25/2020 23:55:26'!
PASSED!

!testRun: #MarsRoverTests #test01EmptyCommandListDoesNothing stamp: 'fr 10/25/2020 23:55:27'!
PASSED!

!testRun: #MarsRoverTests #test08CommandListWithMoreThanOneCommandExecutesProperly stamp: 'fr 10/25/2020 23:55:27'!
PASSED!

!testRun: #MarsRoverTests #test09CreatingAMarsRoverWithAnInvalidCardinalPointShouldFail stamp: 'fr 10/25/2020 23:55:28'!
PASSED!

!testRun: #MarsRoverTests #test10CommandListWithAnInvalidCommandShouldExecuteUntilItsFoundAndNoFurther stamp: 'fr 10/25/2020 23:55:28'!
PASSED!

!testRun: #MarsRoverTests #test01EmptyCommandListDoesNothing stamp: 'fr 10/25/2020 23:55:31'!
PASSED!

!testRun: #MarsRoverTests #test02MovingWorksProperlyFacingSouth stamp: 'fr 10/25/2020 23:55:31'!
PASSED!

!testRun: #MarsRoverTests #test03MovingWorksProperlyFacingNorth stamp: 'fr 10/25/2020 23:55:31'!
PASSED!

!testRun: #MarsRoverTests #test04MovingWorksProperlyFacingEast stamp: 'fr 10/25/2020 23:55:31'!
PASSED!

!testRun: #MarsRoverTests #test05MovingWorksProperlyFacingWest stamp: 'fr 10/25/2020 23:55:31'!
PASSED!

!testRun: #MarsRoverTests #test06RotatingLeftWorksProperlyForAllOrientations stamp: 'fr 10/25/2020 23:55:31'!
PASSED!

!testRun: #MarsRoverTests #test07RotatingRightWorksProperlyForAllOrientations stamp: 'fr 10/25/2020 23:55:31'!
PASSED!

!testRun: #MarsRoverTests #test08CommandListWithMoreThanOneCommandExecutesProperly stamp: 'fr 10/25/2020 23:55:31'!
PASSED!

!testRun: #MarsRoverTests #test09CreatingAMarsRoverWithAnInvalidCardinalPointShouldFail stamp: 'fr 10/25/2020 23:55:31'!
PASSED!

!testRun: #MarsRoverTests #test10CommandListWithAnInvalidCommandShouldExecuteUntilItsFoundAndNoFurther stamp: 'fr 10/25/2020 23:55:31'!
PASSED!
!MarsRoverTests methodsFor: 'tests - private' stamp: 'fr 10/25/2020 23:58:57'!
execute: aCommandList assertMarsRoverisAt: aPosition facing: aCardinalPoint

	marsRoverTest move: aCommandList.
	
	self assert: (marsRoverTest isAt: aPosition facing: aCardinalPoint)! !
!MarsRoverTests methodsFor: 'tests - private' stamp: 'fr 10/26/2020 00:00:13' prior: 50875333!
assertGoingAndComingBackFrom: aPosition worksProperlyWhenFacing: aCardinalPoint
	
	self startMarsRoverFacing: aCardinalPoint.
	
	self execute: 'f' assertMarsRoverisAt: aPosition facing: aCardinalPoint.
	self execute: 'b' assertMarsRoverisAt: 1@1 facing: aCardinalPoint! !
!MarsRoverTests methodsFor: 'tests - private' stamp: 'fr 10/26/2020 00:00:43' prior: 50875314!
assertRotating: aRotationCommand worksProperlyPassingFirst: firstCardinalPoint andThen: secondCardinalPoint

	self startMarsRoverFacing: south.
		
	self execute: aRotationCommand assertMarsRoverisAt: 1@1 facing: firstCardinalPoint.
	self execute: aRotationCommand assertMarsRoverisAt: 1@1 facing: north.
	self execute: aRotationCommand assertMarsRoverisAt: 1@1 facing: secondCardinalPoint.
	self execute: aRotationCommand assertMarsRoverisAt: 1@1 facing: south.
	
! !
!MarsRoverTests methodsFor: 'tests - multiple and empty' stamp: 'fr 10/26/2020 00:00:51' prior: 50875481!
test01EmptyCommandListDoesNothing

	self startMarsRoverFacing: south.
	
	self execute: '' assertMarsRoverisAt: 1@1 facing: south ! !
!MarsRoverTests methodsFor: 'tests - multiple and empty' stamp: 'fr 10/26/2020 00:00:59' prior: 50875294!
test08CommandListWithMoreThanOneCommandExecutesProperly

	self startMarsRoverFacing: north.
	
	self execute: 'flf' assertMarsRoverisAt: 0@2 facing: west! !

!testRun: #MarsRoverTests #test01EmptyCommandListDoesNothing stamp: 'fr 10/26/2020 00:01:02'!
PASSED!

!testRun: #MarsRoverTests #test02MovingWorksProperlyFacingSouth stamp: 'fr 10/26/2020 00:01:02'!
PASSED!

!testRun: #MarsRoverTests #test03MovingWorksProperlyFacingNorth stamp: 'fr 10/26/2020 00:01:02'!
PASSED!

!testRun: #MarsRoverTests #test04MovingWorksProperlyFacingEast stamp: 'fr 10/26/2020 00:01:02'!
PASSED!

!testRun: #MarsRoverTests #test05MovingWorksProperlyFacingWest stamp: 'fr 10/26/2020 00:01:02'!
PASSED!

!testRun: #MarsRoverTests #test06RotatingLeftWorksProperlyForAllOrientations stamp: 'fr 10/26/2020 00:01:02'!
PASSED!

!testRun: #MarsRoverTests #test07RotatingRightWorksProperlyForAllOrientations stamp: 'fr 10/26/2020 00:01:02'!
PASSED!

!testRun: #MarsRoverTests #test08CommandListWithMoreThanOneCommandExecutesProperly stamp: 'fr 10/26/2020 00:01:02'!
PASSED!

!testRun: #MarsRoverTests #test09CreatingAMarsRoverWithAnInvalidCardinalPointShouldFail stamp: 'fr 10/26/2020 00:01:02'!
PASSED!

!testRun: #MarsRoverTests #test10CommandListWithAnInvalidCommandShouldExecuteUntilItsFoundAndNoFurther stamp: 'fr 10/26/2020 00:01:02'!
PASSED!

!methodRemoval: MarsRoverTests #execute:assert:isAt:facing: stamp: 'fr 10/26/2020 00:01:07'!
execute: aCommandList assert: marsRover isAt: aPosition facing: aCardinalPoint

	marsRover move: aCommandList.
	
	self assert: (marsRover isAt: aPosition facing: aCardinalPoint)!
!MarsRoverTests methodsFor: 'tests - invalid entries' stamp: 'fr 10/26/2020 00:02:03' prior: 50872635!
test10CommandListWithAnInvalidCommandShouldExecuteUntilItsFoundAndNoFurther
	
	self startMarsRoverFacing: north.
	
	self should: [marsRoverTest move: 'flbzfr'] raise: Error withMessageText: MarsRover invalidCommandErrorDescription.
	self assert: (marsRoverTest isAt: 2@2 facing: west)! !

!testRun: #MarsRoverTests #test01EmptyCommandListDoesNothing stamp: 'fr 10/26/2020 00:02:05'!
PASSED!

!testRun: #MarsRoverTests #test02MovingWorksProperlyFacingSouth stamp: 'fr 10/26/2020 00:02:05'!
PASSED!

!testRun: #MarsRoverTests #test03MovingWorksProperlyFacingNorth stamp: 'fr 10/26/2020 00:02:05'!
PASSED!

!testRun: #MarsRoverTests #test04MovingWorksProperlyFacingEast stamp: 'fr 10/26/2020 00:02:05'!
PASSED!

!testRun: #MarsRoverTests #test05MovingWorksProperlyFacingWest stamp: 'fr 10/26/2020 00:02:05'!
PASSED!

!testRun: #MarsRoverTests #test06RotatingLeftWorksProperlyForAllOrientations stamp: 'fr 10/26/2020 00:02:05'!
PASSED!

!testRun: #MarsRoverTests #test07RotatingRightWorksProperlyForAllOrientations stamp: 'fr 10/26/2020 00:02:05'!
PASSED!

!testRun: #MarsRoverTests #test08CommandListWithMoreThanOneCommandExecutesProperly stamp: 'fr 10/26/2020 00:02:05'!
PASSED!

!testRun: #MarsRoverTests #test09CreatingAMarsRoverWithAnInvalidCardinalPointShouldFail stamp: 'fr 10/26/2020 00:02:05'!
PASSED!

!testRun: #MarsRoverTests #test10CommandListWithAnInvalidCommandShouldExecuteUntilItsFoundAndNoFurther stamp: 'fr 10/26/2020 00:02:05'!
PASSED!

!classDefinition: #MarsRoverTests category: 'MarsRover - Exercise' stamp: 'fr 10/26/2020 00:02:21'!
TestCase subclass: #MarsRoverTests
	instanceVariableNames: 'south north east west marsRover'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover - Exercise'!
!MarsRoverTests methodsFor: 'as yet unclassified' stamp: 'fr 10/26/2020 00:02:21' prior: 50875561!
execute: aCommandList assertMarsRoverisAt: aPosition facing: aCardinalPoint

	marsRover move: aCommandList.
	
	self assert: (marsRover isAt: aPosition facing: aCardinalPoint)! !
!MarsRoverTests methodsFor: 'as yet unclassified' stamp: 'fr 10/26/2020 00:02:21' prior: 50875661!
test10CommandListWithAnInvalidCommandShouldExecuteUntilItsFoundAndNoFurther
	
	self startMarsRoverFacing: north.
	
	self should: [marsRover move: 'flbzfr'] raise: Error withMessageText: MarsRover invalidCommandErrorDescription.
	self assert: (marsRover isAt: 2@2 facing: west)! !
!MarsRoverTests methodsFor: 'as yet unclassified' stamp: 'fr 10/26/2020 00:02:21' prior: 50875395!
startMarsRoverFacing: aCardinalPoint
	
	marsRover _ MarsRover at: 1@1 facing: aCardinalPoint ! !
!MarsRoverTests methodsFor: 'tests - multiple and empty' stamp: 'fr 10/26/2020 00:04:59'!
assertRoverFacing: aCardinalPoint executes: aCommandList andFinishesAt: anEndingPosition facing: anEndingCardinalPoint

	self startMarsRoverFacing: aCardinalPoint .
	
	self execute: aCommandList assertMarsRoverisAt: anEndingPosition facing: anEndingCardinalPoint ! !
!MarsRoverTests methodsFor: 'tests - multiple and empty' stamp: 'fr 10/26/2020 00:05:08'!
assertMarsRoverFacing: aCardinalPoint executes: aCommandList andFinishesAt: anEndingPosition facing: anEndingCardinalPoint

	self startMarsRoverFacing: aCardinalPoint .
	
	self execute: aCommandList assertMarsRoverisAt: anEndingPosition facing: anEndingCardinalPoint ! !

!methodRemoval: MarsRoverTests #assertRoverFacing:executes:andFinishesAt:facing: stamp: 'fr 10/26/2020 00:05:11'!
assertRoverFacing: aCardinalPoint executes: aCommandList andFinishesAt: anEndingPosition facing: anEndingCardinalPoint

	self startMarsRoverFacing: aCardinalPoint .
	
	self execute: aCommandList assertMarsRoverisAt: anEndingPosition facing: anEndingCardinalPoint !
!MarsRoverTests methodsFor: 'tests - multiple and empty' stamp: 'fr 10/26/2020 00:05:56'!
assertMarsRoverExecutes: aCommandList andFinishesAt: anEndingPosition facing: anEndingCardinalPoint

	self startMarsRoverFacing: south .
	
	self execute: aCommandList assertMarsRoverisAt: anEndingPosition facing: anEndingCardinalPoint ! !

!methodRemoval: MarsRoverTests #assertMarsRoverFacing:executes:andFinishesAt:facing: stamp: 'fr 10/26/2020 00:05:59'!
assertMarsRoverFacing: aCardinalPoint executes: aCommandList andFinishesAt: anEndingPosition facing: anEndingCardinalPoint

	self startMarsRoverFacing: aCardinalPoint .
	
	self execute: aCommandList assertMarsRoverisAt: anEndingPosition facing: anEndingCardinalPoint !
!MarsRoverTests methodsFor: 'tests - multiple and empty' stamp: 'fr 10/26/2020 00:06:40' prior: 50875608!
test08CommandListWithMoreThanOneCommandExecutesProperly

	self startMarsRoverFacing: south.
	
	self execute: 'flf' assertMarsRoverisAt: 2@0 facing: west! !

!testRun: #MarsRoverTests #test01EmptyCommandListDoesNothing stamp: 'fr 10/26/2020 00:06:41'!
PASSED!

!testRun: #MarsRoverTests #test02MovingWorksProperlyFacingSouth stamp: 'fr 10/26/2020 00:06:41'!
PASSED!

!testRun: #MarsRoverTests #test03MovingWorksProperlyFacingNorth stamp: 'fr 10/26/2020 00:06:41'!
PASSED!

!testRun: #MarsRoverTests #test04MovingWorksProperlyFacingEast stamp: 'fr 10/26/2020 00:06:41'!
PASSED!

!testRun: #MarsRoverTests #test05MovingWorksProperlyFacingWest stamp: 'fr 10/26/2020 00:06:41'!
PASSED!

!testRun: #MarsRoverTests #test06RotatingLeftWorksProperlyForAllOrientations stamp: 'fr 10/26/2020 00:06:41'!
PASSED!

!testRun: #MarsRoverTests #test07RotatingRightWorksProperlyForAllOrientations stamp: 'fr 10/26/2020 00:06:41'!
PASSED!

!testRun: #MarsRoverTests #test08CommandListWithMoreThanOneCommandExecutesProperly stamp: 'fr 10/26/2020 00:06:41'!
FAILURE!

!testRun: #MarsRoverTests #test09CreatingAMarsRoverWithAnInvalidCardinalPointShouldFail stamp: 'fr 10/26/2020 00:06:41'!
PASSED!

!testRun: #MarsRoverTests #test10CommandListWithAnInvalidCommandShouldExecuteUntilItsFoundAndNoFurther stamp: 'fr 10/26/2020 00:06:41'!
PASSED!

!testRun: #MarsRoverTests #test08CommandListWithMoreThanOneCommandExecutesProperly stamp: 'fr 10/26/2020 00:06:41'!
FAILURE!
!MarsRoverTests methodsFor: 'tests - multiple and empty' stamp: 'fr 10/26/2020 00:07:05' prior: 50875805!
test08CommandListWithMoreThanOneCommandExecutesProperly

	self startMarsRoverFacing: south.
	
	self execute: 'flf' assertMarsRoverisAt: 2@0 facing: east! !

!testRun: #MarsRoverTests #test01EmptyCommandListDoesNothing stamp: 'fr 10/26/2020 00:07:06'!
PASSED!

!testRun: #MarsRoverTests #test02MovingWorksProperlyFacingSouth stamp: 'fr 10/26/2020 00:07:06'!
PASSED!

!testRun: #MarsRoverTests #test03MovingWorksProperlyFacingNorth stamp: 'fr 10/26/2020 00:07:06'!
PASSED!

!testRun: #MarsRoverTests #test04MovingWorksProperlyFacingEast stamp: 'fr 10/26/2020 00:07:06'!
PASSED!

!testRun: #MarsRoverTests #test05MovingWorksProperlyFacingWest stamp: 'fr 10/26/2020 00:07:06'!
PASSED!

!testRun: #MarsRoverTests #test06RotatingLeftWorksProperlyForAllOrientations stamp: 'fr 10/26/2020 00:07:06'!
PASSED!

!testRun: #MarsRoverTests #test07RotatingRightWorksProperlyForAllOrientations stamp: 'fr 10/26/2020 00:07:06'!
PASSED!

!testRun: #MarsRoverTests #test08CommandListWithMoreThanOneCommandExecutesProperly stamp: 'fr 10/26/2020 00:07:06'!
PASSED!

!testRun: #MarsRoverTests #test09CreatingAMarsRoverWithAnInvalidCardinalPointShouldFail stamp: 'fr 10/26/2020 00:07:06'!
PASSED!

!testRun: #MarsRoverTests #test10CommandListWithAnInvalidCommandShouldExecuteUntilItsFoundAndNoFurther stamp: 'fr 10/26/2020 00:07:06'!
PASSED!
!MarsRoverTests methodsFor: 'tests - multiple and empty' stamp: 'fr 10/26/2020 00:07:16' prior: 50875782!
assertMarsRoverExecutes: aCommandList andFinishesAt: anEndingPosition facing: anEndingCardinalPoint

	self startMarsRoverFacing: south.
	
	self execute: aCommandList assertMarsRoverisAt: anEndingPosition facing: anEndingCardinalPoint ! !
!MarsRoverTests methodsFor: 'tests - multiple and empty' stamp: 'fr 10/26/2020 00:07:40' prior: 50875854!
test08CommandListWithMoreThanOneCommandExecutesProperly
	
	self assertMarsRoverExecutes: 'flf' andFinishesAt: 2@0 facing: east! !

!testRun: #MarsRoverTests #test08CommandListWithMoreThanOneCommandExecutesProperly stamp: 'fr 10/26/2020 00:07:41'!
PASSED!

!testRun: #MarsRoverTests #test01EmptyCommandListDoesNothing stamp: 'fr 10/26/2020 00:07:41'!
PASSED!

!testRun: #MarsRoverTests #test02MovingWorksProperlyFacingSouth stamp: 'fr 10/26/2020 00:07:41'!
PASSED!

!testRun: #MarsRoverTests #test03MovingWorksProperlyFacingNorth stamp: 'fr 10/26/2020 00:07:41'!
PASSED!

!testRun: #MarsRoverTests #test04MovingWorksProperlyFacingEast stamp: 'fr 10/26/2020 00:07:41'!
PASSED!

!testRun: #MarsRoverTests #test05MovingWorksProperlyFacingWest stamp: 'fr 10/26/2020 00:07:41'!
PASSED!

!testRun: #MarsRoverTests #test06RotatingLeftWorksProperlyForAllOrientations stamp: 'fr 10/26/2020 00:07:41'!
PASSED!

!testRun: #MarsRoverTests #test07RotatingRightWorksProperlyForAllOrientations stamp: 'fr 10/26/2020 00:07:41'!
PASSED!

!testRun: #MarsRoverTests #test08CommandListWithMoreThanOneCommandExecutesProperly stamp: 'fr 10/26/2020 00:07:41'!
PASSED!

!testRun: #MarsRoverTests #test09CreatingAMarsRoverWithAnInvalidCardinalPointShouldFail stamp: 'fr 10/26/2020 00:07:41'!
PASSED!

!testRun: #MarsRoverTests #test10CommandListWithAnInvalidCommandShouldExecuteUntilItsFoundAndNoFurther stamp: 'fr 10/26/2020 00:07:41'!
PASSED!
!MarsRoverTests methodsFor: 'tests - multiple and empty' stamp: 'fr 10/26/2020 00:08:03' prior: 50875600!
test01EmptyCommandListDoesNothing
	
	self assertMarsRoverExecutes: '' andFinishesAt: 1@1 facing: south! !

!testRun: #MarsRoverTests #test01EmptyCommandListDoesNothing stamp: 'fr 10/26/2020 00:08:04'!
PASSED!

!testRun: #MarsRoverTests #test01EmptyCommandListDoesNothing stamp: 'fr 10/26/2020 00:08:04'!
PASSED!

!testRun: #MarsRoverTests #test02MovingWorksProperlyFacingSouth stamp: 'fr 10/26/2020 00:08:04'!
PASSED!

!testRun: #MarsRoverTests #test03MovingWorksProperlyFacingNorth stamp: 'fr 10/26/2020 00:08:04'!
PASSED!

!testRun: #MarsRoverTests #test04MovingWorksProperlyFacingEast stamp: 'fr 10/26/2020 00:08:04'!
PASSED!

!testRun: #MarsRoverTests #test05MovingWorksProperlyFacingWest stamp: 'fr 10/26/2020 00:08:04'!
PASSED!

!testRun: #MarsRoverTests #test06RotatingLeftWorksProperlyForAllOrientations stamp: 'fr 10/26/2020 00:08:04'!
PASSED!

!testRun: #MarsRoverTests #test07RotatingRightWorksProperlyForAllOrientations stamp: 'fr 10/26/2020 00:08:04'!
PASSED!

!testRun: #MarsRoverTests #test08CommandListWithMoreThanOneCommandExecutesProperly stamp: 'fr 10/26/2020 00:08:04'!
PASSED!

!testRun: #MarsRoverTests #test09CreatingAMarsRoverWithAnInvalidCardinalPointShouldFail stamp: 'fr 10/26/2020 00:08:04'!
PASSED!

!testRun: #MarsRoverTests #test10CommandListWithAnInvalidCommandShouldExecuteUntilItsFoundAndNoFurther stamp: 'fr 10/26/2020 00:08:04'!
PASSED!
!MarsRoverTests methodsFor: 'tests - private' stamp: 'fr 10/26/2020 00:08:51'!
execute: aCommandList andAssertMarsRoverisAt: aPosition facing: aCardinalPoint

	marsRover move: aCommandList.
	
	self assert: (marsRover isAt: aPosition facing: aCardinalPoint)! !
!MarsRoverTests methodsFor: 'as yet unclassified' stamp: 'fr 10/26/2020 00:08:51' prior: 50875582!
assertRotating: aRotationCommand worksProperlyPassingFirst: firstCardinalPoint andThen: secondCardinalPoint

	self startMarsRoverFacing: south.
		
	self execute: aRotationCommand andAssertMarsRoverisAt: 1@1 facing: firstCardinalPoint.
	self execute: aRotationCommand andAssertMarsRoverisAt: 1@1 facing: north.
	self execute: aRotationCommand andAssertMarsRoverisAt: 1@1 facing: secondCardinalPoint.
	self execute: aRotationCommand andAssertMarsRoverisAt: 1@1 facing: south.
	
! !
!MarsRoverTests methodsFor: 'as yet unclassified' stamp: 'fr 10/26/2020 00:08:51' prior: 50875899!
assertMarsRoverExecutes: aCommandList andFinishesAt: anEndingPosition facing: anEndingCardinalPoint

	self startMarsRoverFacing: south.
	
	self execute: aCommandList andAssertMarsRoverisAt: anEndingPosition facing: anEndingCardinalPoint ! !
!MarsRoverTests methodsFor: 'as yet unclassified' stamp: 'fr 10/26/2020 00:08:51' prior: 50875570!
assertGoingAndComingBackFrom: aPosition worksProperlyWhenFacing: aCardinalPoint
	
	self startMarsRoverFacing: aCardinalPoint.
	
	self execute: 'f' andAssertMarsRoverisAt: aPosition facing: aCardinalPoint.
	self execute: 'b' andAssertMarsRoverisAt: 1@1 facing: aCardinalPoint! !

!methodRemoval: MarsRoverTests #execute:assertMarsRoverisAt:facing: stamp: 'fr 10/26/2020 00:08:51'!
execute: aCommandList assertMarsRoverisAt: aPosition facing: aCardinalPoint

	marsRover move: aCommandList.
	
	self assert: (marsRover isAt: aPosition facing: aCardinalPoint)!

!testRun: #MarsRoverTests #test01EmptyCommandListDoesNothing stamp: 'fr 10/26/2020 00:08:52'!
PASSED!

!testRun: #MarsRoverTests #test02MovingWorksProperlyFacingSouth stamp: 'fr 10/26/2020 00:08:52'!
PASSED!

!testRun: #MarsRoverTests #test03MovingWorksProperlyFacingNorth stamp: 'fr 10/26/2020 00:08:52'!
PASSED!

!testRun: #MarsRoverTests #test04MovingWorksProperlyFacingEast stamp: 'fr 10/26/2020 00:08:52'!
PASSED!

!testRun: #MarsRoverTests #test05MovingWorksProperlyFacingWest stamp: 'fr 10/26/2020 00:08:52'!
PASSED!

!testRun: #MarsRoverTests #test06RotatingLeftWorksProperlyForAllOrientations stamp: 'fr 10/26/2020 00:08:52'!
PASSED!

!testRun: #MarsRoverTests #test07RotatingRightWorksProperlyForAllOrientations stamp: 'fr 10/26/2020 00:08:52'!
PASSED!

!testRun: #MarsRoverTests #test08CommandListWithMoreThanOneCommandExecutesProperly stamp: 'fr 10/26/2020 00:08:52'!
PASSED!

!testRun: #MarsRoverTests #test09CreatingAMarsRoverWithAnInvalidCardinalPointShouldFail stamp: 'fr 10/26/2020 00:08:52'!
PASSED!

!testRun: #MarsRoverTests #test10CommandListWithAnInvalidCommandShouldExecuteUntilItsFoundAndNoFurther stamp: 'fr 10/26/2020 00:08:52'!
PASSED!

!testRun: #MarsRoverTests #test01EmptyCommandListDoesNothing stamp: 'fr 10/26/2020 00:09:47'!
PASSED!

!testRun: #MarsRoverTests #test02MovingWorksProperlyFacingSouth stamp: 'fr 10/26/2020 00:09:47'!
PASSED!

!testRun: #MarsRoverTests #test03MovingWorksProperlyFacingNorth stamp: 'fr 10/26/2020 00:09:47'!
PASSED!

!testRun: #MarsRoverTests #test04MovingWorksProperlyFacingEast stamp: 'fr 10/26/2020 00:09:47'!
PASSED!

!testRun: #MarsRoverTests #test05MovingWorksProperlyFacingWest stamp: 'fr 10/26/2020 00:09:47'!
PASSED!

!testRun: #MarsRoverTests #test06RotatingLeftWorksProperlyForAllOrientations stamp: 'fr 10/26/2020 00:09:47'!
PASSED!

!testRun: #MarsRoverTests #test07RotatingRightWorksProperlyForAllOrientations stamp: 'fr 10/26/2020 00:09:47'!
PASSED!

!testRun: #MarsRoverTests #test08CommandListWithMoreThanOneCommandExecutesProperly stamp: 'fr 10/26/2020 00:09:47'!
PASSED!

!testRun: #MarsRoverTests #test09CreatingAMarsRoverWithAnInvalidCardinalPointShouldFail stamp: 'fr 10/26/2020 00:09:47'!
PASSED!

!testRun: #MarsRoverTests #test10CommandListWithAnInvalidCommandShouldExecuteUntilItsFoundAndNoFurther stamp: 'fr 10/26/2020 00:09:47'!
PASSED!

----SNAPSHOT----(26 October 2020 00:09:51) CuisUniversity-4384.image priorSource: 17343293!

----SNAPSHOT----(26 October 2020 00:15:19) CuisUniversity-4384.image priorSource: 17423523!

!testRun: #MarsRoverTests #test01EmptyCommandListDoesNothing stamp: 'fr 10/26/2020 00:15:22'!
PASSED!

!testRun: #MarsRoverTests #test02MovingWorksProperlyFacingSouth stamp: 'fr 10/26/2020 00:15:22'!
PASSED!

!testRun: #MarsRoverTests #test03MovingWorksProperlyFacingNorth stamp: 'fr 10/26/2020 00:15:22'!
PASSED!

!testRun: #MarsRoverTests #test04MovingWorksProperlyFacingEast stamp: 'fr 10/26/2020 00:15:22'!
PASSED!

!testRun: #MarsRoverTests #test05MovingWorksProperlyFacingWest stamp: 'fr 10/26/2020 00:15:22'!
PASSED!

!testRun: #MarsRoverTests #test06RotatingLeftWorksProperlyForAllOrientations stamp: 'fr 10/26/2020 00:15:22'!
PASSED!

!testRun: #MarsRoverTests #test07RotatingRightWorksProperlyForAllOrientations stamp: 'fr 10/26/2020 00:15:22'!
PASSED!

!testRun: #MarsRoverTests #test08CommandListWithMoreThanOneCommandExecutesProperly stamp: 'fr 10/26/2020 00:15:22'!
PASSED!

!testRun: #MarsRoverTests #test09CreatingAMarsRoverWithAnInvalidCardinalPointShouldFail stamp: 'fr 10/26/2020 00:15:22'!
PASSED!

!testRun: #MarsRoverTests #test10CommandListWithAnInvalidCommandShouldExecuteUntilItsFoundAndNoFurther stamp: 'fr 10/26/2020 00:15:22'!
PASSED!

----SNAPSHOT----(26 October 2020 00:33:58) CuisUniversity-4384.image priorSource: 17423616!

----QUIT----(26 October 2020 00:34:02) CuisUniversity-4384.image priorSource: 17424873!

----STARTUP---- (26 October 2020 15:56:19) as /home/fede/Documentos/Facultad/Inge1/Cuises/katas/linux64/CuisUniversity-4384.image!


!testRun: #MarsRoverTests #test01EmptyCommandListDoesNothing stamp: 'fr 10/26/2020 15:56:24'!
PASSED!

!testRun: #MarsRoverTests #test02MovingWorksProperlyFacingSouth stamp: 'fr 10/26/2020 15:56:24'!
PASSED!

!testRun: #MarsRoverTests #test03MovingWorksProperlyFacingNorth stamp: 'fr 10/26/2020 15:56:24'!
PASSED!

!testRun: #MarsRoverTests #test04MovingWorksProperlyFacingEast stamp: 'fr 10/26/2020 15:56:24'!
PASSED!

!testRun: #MarsRoverTests #test05MovingWorksProperlyFacingWest stamp: 'fr 10/26/2020 15:56:24'!
PASSED!

!testRun: #MarsRoverTests #test06RotatingLeftWorksProperlyForAllOrientations stamp: 'fr 10/26/2020 15:56:24'!
PASSED!

!testRun: #MarsRoverTests #test07RotatingRightWorksProperlyForAllOrientations stamp: 'fr 10/26/2020 15:56:24'!
PASSED!

!testRun: #MarsRoverTests #test08CommandListWithMoreThanOneCommandExecutesProperly stamp: 'fr 10/26/2020 15:56:24'!
PASSED!

!testRun: #MarsRoverTests #test09CreatingAMarsRoverWithAnInvalidCardinalPointShouldFail stamp: 'fr 10/26/2020 15:56:24'!
PASSED!

!testRun: #MarsRoverTests #test10CommandListWithAnInvalidCommandShouldExecuteUntilItsFoundAndNoFurther stamp: 'fr 10/26/2020 15:56:24'!
PASSED!
!MarsRoverTests methodsFor: 'tests - private' stamp: 'fr 10/26/2020 15:59:20'!
execute: aCommandList andAssertMarsRoverIsAt: aPosition facing: aCardinalPoint

	marsRover move: aCommandList.
	
	self assert: (marsRover isAt: aPosition facing: aCardinalPoint)! !
!MarsRoverTests methodsFor: 'as yet unclassified' stamp: 'fr 10/26/2020 15:59:20' prior: 50876032!
assertMarsRoverExecutes: aCommandList andFinishesAt: anEndingPosition facing: anEndingCardinalPoint

	self startMarsRoverFacing: south.
	
	self execute: aCommandList andAssertMarsRoverIsAt: anEndingPosition facing: anEndingCardinalPoint ! !
!MarsRoverTests methodsFor: 'as yet unclassified' stamp: 'fr 10/26/2020 15:59:20' prior: 50876043!
assertGoingAndComingBackFrom: aPosition worksProperlyWhenFacing: aCardinalPoint
	
	self startMarsRoverFacing: aCardinalPoint.
	
	self execute: 'f' andAssertMarsRoverIsAt: aPosition facing: aCardinalPoint.
	self execute: 'b' andAssertMarsRoverIsAt: 1@1 facing: aCardinalPoint! !
!MarsRoverTests methodsFor: 'as yet unclassified' stamp: 'fr 10/26/2020 15:59:20' prior: 50876013!
assertRotating: aRotationCommand worksProperlyPassingFirst: firstCardinalPoint andThen: secondCardinalPoint

	self startMarsRoverFacing: south.
		
	self execute: aRotationCommand andAssertMarsRoverIsAt: 1@1 facing: firstCardinalPoint.
	self execute: aRotationCommand andAssertMarsRoverIsAt: 1@1 facing: north.
	self execute: aRotationCommand andAssertMarsRoverIsAt: 1@1 facing: secondCardinalPoint.
	self execute: aRotationCommand andAssertMarsRoverIsAt: 1@1 facing: south.
	
! !

!methodRemoval: MarsRoverTests #execute:andAssertMarsRoverisAt:facing: stamp: 'fr 10/26/2020 15:59:20'!
execute: aCommandList andAssertMarsRoverisAt: aPosition facing: aCardinalPoint

	marsRover move: aCommandList.
	
	self assert: (marsRover isAt: aPosition facing: aCardinalPoint)!

!testRun: #MarsRoverTests #test01EmptyCommandListDoesNothing stamp: 'fr 10/26/2020 15:59:23'!
PASSED!

!testRun: #MarsRoverTests #test02MovingWorksProperlyFacingSouth stamp: 'fr 10/26/2020 15:59:23'!
PASSED!

!testRun: #MarsRoverTests #test03MovingWorksProperlyFacingNorth stamp: 'fr 10/26/2020 15:59:23'!
PASSED!

!testRun: #MarsRoverTests #test04MovingWorksProperlyFacingEast stamp: 'fr 10/26/2020 15:59:23'!
PASSED!

!testRun: #MarsRoverTests #test05MovingWorksProperlyFacingWest stamp: 'fr 10/26/2020 15:59:23'!
PASSED!

!testRun: #MarsRoverTests #test06RotatingLeftWorksProperlyForAllOrientations stamp: 'fr 10/26/2020 15:59:23'!
PASSED!

!testRun: #MarsRoverTests #test07RotatingRightWorksProperlyForAllOrientations stamp: 'fr 10/26/2020 15:59:23'!
PASSED!

!testRun: #MarsRoverTests #test08CommandListWithMoreThanOneCommandExecutesProperly stamp: 'fr 10/26/2020 15:59:23'!
PASSED!

!testRun: #MarsRoverTests #test09CreatingAMarsRoverWithAnInvalidCardinalPointShouldFail stamp: 'fr 10/26/2020 15:59:23'!
PASSED!

!testRun: #MarsRoverTests #test10CommandListWithAnInvalidCommandShouldExecuteUntilItsFoundAndNoFurther stamp: 'fr 10/26/2020 15:59:23'!
PASSED!

----SNAPSHOT----(26 October 2020 15:59:28) CuisUniversity-4384.image priorSource: 17424966!

rover _ MarsRover at: 1@1 facing: #S.!

cardinalPoints _ OrderedCollection new.!

cardinalPoints add: #W.
cardinalPoints add: #N.
cardinalPoints add: #E.
cardinalPoints add: #S.!

cardinalPoints !

4 timesRepeat: [[:cp | rover move: 'r'. cardinalPoints add: (rover isAt: 1@1 facing: cp)] value: (cardinalPoints removeFirst)]!

cardinalPoints !

cardinalPoints !

cardinalPoints _ OrderedCollection with: #W with: #N with: #E with: #S.!

cardinalPoints !

4 timesRepeat: [[:cp | rover move: 'r'. cardinalPoints add: (rover isAt: 1@1 facing: cp)] value: (cardinalPoints removeFirst)].!

cardinalPoints !
!MarsRoverTests methodsFor: 'tests - private' stamp: 'fr 10/26/2020 16:18:41' prior: 50876256!
assertRotating: aRotationCommand worksProperlyPassingFirst: firstCardinalPoint andThen: secondCardinalPoint

	| cardinalPoints |

	self startMarsRoverFacing: south.
	
	cardinalPoints _ OrderedCollection with: firstCardinalPoint with: north with: secondCardinalPoint with: south.
	
	4 timesRepeat: [ [:cardinalPoint | self execute: aRotationCommand andAssertMarsRoverIsAt: 1@1 facing: cardinalPoint ] value: cardinalPoints removeFirst ]
	
! !

!testRun: #MarsRoverTests #test01EmptyCommandListDoesNothing stamp: 'fr 10/26/2020 16:18:44'!
PASSED!

!testRun: #MarsRoverTests #test02MovingWorksProperlyFacingSouth stamp: 'fr 10/26/2020 16:18:44'!
PASSED!

!testRun: #MarsRoverTests #test03MovingWorksProperlyFacingNorth stamp: 'fr 10/26/2020 16:18:44'!
PASSED!

!testRun: #MarsRoverTests #test04MovingWorksProperlyFacingEast stamp: 'fr 10/26/2020 16:18:44'!
PASSED!

!testRun: #MarsRoverTests #test05MovingWorksProperlyFacingWest stamp: 'fr 10/26/2020 16:18:44'!
PASSED!

!testRun: #MarsRoverTests #test06RotatingLeftWorksProperlyForAllOrientations stamp: 'fr 10/26/2020 16:18:44'!
PASSED!

!testRun: #MarsRoverTests #test07RotatingRightWorksProperlyForAllOrientations stamp: 'fr 10/26/2020 16:18:44'!
PASSED!

!testRun: #MarsRoverTests #test08CommandListWithMoreThanOneCommandExecutesProperly stamp: 'fr 10/26/2020 16:18:44'!
PASSED!

!testRun: #MarsRoverTests #test09CreatingAMarsRoverWithAnInvalidCardinalPointShouldFail stamp: 'fr 10/26/2020 16:18:44'!
PASSED!

!testRun: #MarsRoverTests #test10CommandListWithAnInvalidCommandShouldExecuteUntilItsFoundAndNoFurther stamp: 'fr 10/26/2020 16:18:44'!
PASSED!
!MarsRoverTests methodsFor: 'tests - private' stamp: 'fr 10/26/2020 16:19:27' prior: 50876341!
assertRotating: aRotationCommand worksProperlyPassingFirst: firstCardinalPoint andThen: secondCardinalPoint

	| cardinalPoints |

	self startMarsRoverFacing: south.
	
	cardinalPoints _ OrderedCollection with: firstCardinalPoint with: north with: secondCardinalPoint with: south.
	
	4 timesRepeat: [ 
		[:cardinalPoint | self execute: aRotationCommand andAssertMarsRoverIsAt: 1@1 facing: cardinalPoint ] value: 		cardinalPoints removeFirst 
	]
	
! !

----SNAPSHOT----(26 October 2020 16:20:10) CuisUniversity-4384.image priorSource: 17429383!

!testRun: #MarsRoverTests #test01EmptyCommandListDoesNothing stamp: 'fr 10/26/2020 16:20:12'!
PASSED!

!testRun: #MarsRoverTests #test02MovingWorksProperlyFacingSouth stamp: 'fr 10/26/2020 16:20:12'!
PASSED!

!testRun: #MarsRoverTests #test03MovingWorksProperlyFacingNorth stamp: 'fr 10/26/2020 16:20:12'!
PASSED!

!testRun: #MarsRoverTests #test04MovingWorksProperlyFacingEast stamp: 'fr 10/26/2020 16:20:12'!
PASSED!

!testRun: #MarsRoverTests #test05MovingWorksProperlyFacingWest stamp: 'fr 10/26/2020 16:20:12'!
PASSED!

!testRun: #MarsRoverTests #test06RotatingLeftWorksProperlyForAllOrientations stamp: 'fr 10/26/2020 16:20:12'!
PASSED!

!testRun: #MarsRoverTests #test07RotatingRightWorksProperlyForAllOrientations stamp: 'fr 10/26/2020 16:20:12'!
PASSED!

!testRun: #MarsRoverTests #test08CommandListWithMoreThanOneCommandExecutesProperly stamp: 'fr 10/26/2020 16:20:12'!
PASSED!

!testRun: #MarsRoverTests #test09CreatingAMarsRoverWithAnInvalidCardinalPointShouldFail stamp: 'fr 10/26/2020 16:20:12'!
PASSED!

!testRun: #MarsRoverTests #test10CommandListWithAnInvalidCommandShouldExecuteUntilItsFoundAndNoFurther stamp: 'fr 10/26/2020 16:20:12'!
PASSED!

cardinalPoints!

cardinalPoints!

cardinalPoints!

!testRun: #MarsRoverTests #test06RotatingLeftWorksProperlyForAllOrientations stamp: 'fr 10/26/2020 16:22:23'!
PASSED!
!MarsRoverTests methodsFor: 'tests - private' stamp: 'fr 10/26/2020 16:23:06' prior: 50876395!
assertRotating: aRotationCommand worksProperlyPassingFirst: firstCardinalPoint andThen: secondCardinalPoint

	| cardinalPoints |

	self startMarsRoverFacing: south.
	
	cardinalPoints _ OrderedCollection with: firstCardinalPoint with: north with: secondCardinalPoint with: south.
	
	cardinalPoints do: 	[:cardinalPoint | self execute: aRotationCommand andAssertMarsRoverIsAt: 1@1 facing: cardinalPoint ] 
	
! !

!testRun: #MarsRoverTests #test01EmptyCommandListDoesNothing stamp: 'fr 10/26/2020 16:23:10'!
PASSED!

!testRun: #MarsRoverTests #test02MovingWorksProperlyFacingSouth stamp: 'fr 10/26/2020 16:23:10'!
PASSED!

!testRun: #MarsRoverTests #test03MovingWorksProperlyFacingNorth stamp: 'fr 10/26/2020 16:23:10'!
PASSED!

!testRun: #MarsRoverTests #test04MovingWorksProperlyFacingEast stamp: 'fr 10/26/2020 16:23:10'!
PASSED!

!testRun: #MarsRoverTests #test05MovingWorksProperlyFacingWest stamp: 'fr 10/26/2020 16:23:10'!
PASSED!

!testRun: #MarsRoverTests #test06RotatingLeftWorksProperlyForAllOrientations stamp: 'fr 10/26/2020 16:23:10'!
PASSED!

!testRun: #MarsRoverTests #test07RotatingRightWorksProperlyForAllOrientations stamp: 'fr 10/26/2020 16:23:10'!
PASSED!

!testRun: #MarsRoverTests #test08CommandListWithMoreThanOneCommandExecutesProperly stamp: 'fr 10/26/2020 16:23:10'!
PASSED!

!testRun: #MarsRoverTests #test09CreatingAMarsRoverWithAnInvalidCardinalPointShouldFail stamp: 'fr 10/26/2020 16:23:10'!
PASSED!

!testRun: #MarsRoverTests #test10CommandListWithAnInvalidCommandShouldExecuteUntilItsFoundAndNoFurther stamp: 'fr 10/26/2020 16:23:10'!
PASSED!
!MarsRoverTests methodsFor: 'tests - private' stamp: 'fr 10/26/2020 16:23:29' prior: 50876457!
assertRotating: aRotationCommand worksProperlyPassingFirst: firstCardinalPoint andThen: secondCardinalPoint

	| cardinalPoints |

	cardinalPoints _ OrderedCollection with: firstCardinalPoint with: north with: secondCardinalPoint with: south.

	self startMarsRoverFacing: south.
	
	cardinalPoints do: 	[:cardinalPoint | self execute: aRotationCommand andAssertMarsRoverIsAt: 1@1 facing: cardinalPoint ] 
	
! !

----SNAPSHOT----(26 October 2020 16:23:37) CuisUniversity-4384.image priorSource: 17432352!

----SNAPSHOT----(26 October 2020 16:24:28) CuisUniversity-4384.image priorSource: 17435992!
!MarsRoverOrientation class methodsFor: 'instance creation' stamp: 'fr 10/26/2020 16:29:54' prior: 50872973!
facing: aCardinalPoint for: aMarsRover
	
	^self subclasses detect: [:anOrientationClass | anOrientationClass canHandle: aCardinalPoint] ifFound: [:anOrientationClass | anOrientationClass for: aMarsRover] ifNone: [self invalidCardinalPoint] 
	! !

----SNAPSHOT----(26 October 2020 16:30:03) CuisUniversity-4384.image priorSource: 17436085!