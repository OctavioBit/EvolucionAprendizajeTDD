----STARTUP---- (16 November 2020 17:35:43) as C:\Users\Felip\Desktop\Dev\Inge 1\ST\windows64\CuisUniversity-4383.image!


!classRemoval: #Rot13Test stamp: 'FC 11/16/2020 17:36:07'!
TestCase subclass: #Rot13Test
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Rot13'!

Object subclass: #Cart
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

!classDefinition: #Cart category: 'TusLibros' stamp: 'FC 11/16/2020 17:45:31'!
Object subclass: #Cart
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

TestCase subclass: #CartTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

!classDefinition: #CartTest category: 'TusLibros' stamp: 'FC 11/16/2020 17:49:00'!
TestCase subclass: #CartTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!
!CartTest methodsFor: 'no messages' stamp: 'FC 11/16/2020 18:55:06'!
test01
	|aCart|
	
	aCart := Cart new.
	
	self assert: aCart isEmpty.! !

!testRun: #CartTest #test01 stamp: 'FC 11/16/2020 18:55:07'!
ERROR!
!Cart methodsFor: 'testing' stamp: 'FC 11/16/2020 18:55:15'!
isEmpty
	self shouldBeImplemented.! !
!Cart methodsFor: 'testing' stamp: 'FC 11/16/2020 18:55:22' prior: 50919674!
isEmpty
	^true! !

!testRun: #CartTest #test01 stamp: 'FC 11/16/2020 18:55:25'!
PASSED!

!testRun: #CartTest #test01 stamp: 'FC 11/16/2020 18:55:25'!
PASSED!
!CartTest methodsFor: 'as yet unclassified' stamp: 'FC 11/16/2020 18:55:48'!
test02
	|aCart|
	
	aCart := Cart new.
	
	aCart add: 'Librito'.
	
	self deny: aCart isEmpty.! !

!testRun: #CartTest #test02 stamp: 'FC 11/16/2020 18:55:50'!
ERROR!
!Cart methodsFor: 'adding' stamp: 'FC 11/16/2020 18:55:58'!
add: aString 
	self shouldBeImplemented.! !

!classDefinition: #Cart category: 'TusLibros' stamp: 'FC 11/16/2020 18:57:04'!
Object subclass: #Cart
	instanceVariableNames: 'contents'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!
!Cart methodsFor: 'adding' stamp: 'FC 11/16/2020 18:57:02' prior: 50919693!
add: aBook
	contents add: aBook! !

!testRun: #CartTest #test02 stamp: 'FC 11/16/2020 18:57:10'!
ERROR!
!Cart methodsFor: 'adding' stamp: 'FC 11/16/2020 18:57:26' overrides: 16896425!
initialize
	contents := OrderedCollection new.! !

!testRun: #CartTest #test01 stamp: 'FC 11/16/2020 18:57:26'!
PASSED!

!testRun: #CartTest #test02 stamp: 'FC 11/16/2020 18:57:26'!
FAILURE!

!testRun: #CartTest #test02 stamp: 'FC 11/16/2020 18:57:26'!
FAILURE!
!Cart methodsFor: 'testing' stamp: 'FC 11/16/2020 18:57:38' prior: 50919678!
isEmpty
	^contents isEmpty.! !

!testRun: #CartTest #test01 stamp: 'FC 11/16/2020 18:57:38'!
PASSED!

!testRun: #CartTest #test02 stamp: 'FC 11/16/2020 18:57:38'!
PASSED!
!CartTest methodsFor: 'as yet unclassified' stamp: 'FC 11/16/2020 18:59:32'!
test03
	|aCart|
	
	aCart := Cart new.
	
	aCart add: 'Librito'.
	aCart add: 'Falopa y Pasta Base'.
	
	self deny: aCart isEmpty.
	self assert: (aCart contains: 'Librito').
	self assert: (aCart contains: 'Falopa y Pasta Base').! !
!Cart methodsFor: 'testing' stamp: 'FC 11/16/2020 19:00:00'!
contains: aBook
	^contents includes: aBook.! !

!testRun: #CartTest #test01 stamp: 'FC 11/16/2020 19:00:01'!
PASSED!

!testRun: #CartTest #test02 stamp: 'FC 11/16/2020 19:00:01'!
PASSED!

!testRun: #CartTest #test03 stamp: 'FC 11/16/2020 19:00:01'!
PASSED!

!classDefinition: #CartTest category: 'TusLibros' stamp: 'FC 11/16/2020 19:01:55'!
TestCase subclass: #CartTest
	instanceVariableNames: 'aBook'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

!classDefinition: #CartTest category: 'TusLibros' stamp: 'FC 11/16/2020 19:01:56'!
TestCase subclass: #CartTest
	instanceVariableNames: 'aBook anotherBook'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!
!CartTest methodsFor: 'as yet unclassified' stamp: 'FC 11/16/2020 19:01:53' overrides: 16927572!
setUp
	
	aBook := 'Librito'.
	anotherBook := 'Design Patterns'.
! !
!CartTest methodsFor: 'as yet unclassified' stamp: 'FC 11/16/2020 19:02:05' prior: 50919686!
test02
	|aCart|
	
	aCart := Cart new.
	
	aCart add: aBook.
	
	self deny: aCart isEmpty.! !
!CartTest methodsFor: 'as yet unclassified' stamp: 'FC 11/16/2020 19:02:31' prior: 50919729!
test03
	|aCart|
	
	aCart := Cart new.
	
	aCart add: aBook.
	aCart add: anotherBook.
	
	self deny: aCart isEmpty.
	self assert: (aCart contains: aBook).
	self assert: (aCart contains: anotherBook).! !

Object subclass: #Cart
	instanceVariableNames: 'contents catalog'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

!classDefinition: #Cart category: 'TusLibros' stamp: 'FC 11/16/2020 19:02:59'!
Object subclass: #Cart
	instanceVariableNames: 'contents catalog'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

!classDefinition: #CartTest category: 'TusLibros' stamp: 'FC 11/16/2020 19:03:50'!
TestCase subclass: #CartTest
	instanceVariableNames: 'aBook anotherBook invalidBook'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!
!CartTest methodsFor: 'as yet unclassified' stamp: 'FC 11/16/2020 19:03:48' prior: 50919764 overrides: 16927572!
setUp
	
	aBook := 'Librito'.
	anotherBook := 'Design Patterns'.
	invalidBook := 'Computer Networks: A systems approach'.! !
!CartTest methodsFor: 'as yet unclassified' stamp: 'FC 11/16/2020 19:04:04' prior: 50919805 overrides: 16927572!
setUp
	
	aBook := 'Librito'.
	anotherBook := 'Design Patterns'.
	invalidBook   := 'Computer Networks: A systems approach'.! !
!CartTest methodsFor: 'as yet unclassified' stamp: 'FC 11/16/2020 19:04:13' prior: 50919813 overrides: 16927572!
setUp
	
	aBook := 'Librito'.
	anotherBook := 'Design Patterns'.
	invalidBook := 'Computer Networks: A systems approach'.! !
!CartTest methodsFor: 'as yet unclassified' stamp: 'FC 11/16/2020 19:05:24'!
test04
	|aCart|
	
	aCart := Cart new.
	
	self should: [ aCart add: invalidBook ] raise: Error withMessageText: Cart invalidBookMessage.
	
	self assert: aCart isEmpty. 
! !
!Cart class methodsFor: 'no messages' stamp: 'FC 11/16/2020 19:06:18'!
withCatalog: aCatalog
	self new initializeFor: aCatalog.! !
!Cart methodsFor: 'adding' stamp: 'FC 11/16/2020 19:07:07'!
initializeFor: aCatalog
	catalog := aCatalog.
	contents := OrderedCollection new.! !

!classDefinition: #CartTest category: 'TusLibros' stamp: 'FC 11/16/2020 19:07:33'!
TestCase subclass: #CartTest
	instanceVariableNames: 'aBook anotherBook invalidBook aCatalog'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!
!CartTest methodsFor: 'as yet unclassified' stamp: 'FC 11/16/2020 19:07:31' prior: 50919821 overrides: 16927572!
setUp
	
	aBook := 'Librito'.
	anotherBook := 'Design Patterns'.
	invalidBook := 'Computer Networks: A systems approach'.
	aCatalog := OrderedCollection with: aBook with: anotherBook.! !
!CartTest methodsFor: 'as yet unclassified' stamp: 'FC 11/16/2020 19:07:55' prior: 50919854 overrides: 16927572!
setUp
	
	aBook := 'Librito'.
	anotherBook := 'Design Patterns'.
	invalidBook := 'Computer Networks: A systems approach'.
	aCatalog := OrderedCollection with: aBook with: anotherBook.! !
!CartTest methodsFor: 'as yet unclassified' stamp: 'FC 11/16/2020 19:08:13' prior: 50919667!
test01
	|aCart|
	
	aCart := Cart withCatalog: aCatalog.
	
	self assert: aCart isEmpty.! !
!CartTest methodsFor: 'as yet unclassified' stamp: 'FC 11/16/2020 19:08:18' prior: 50919770!
test02
	|aCart|
	
	aCart := Cart withCatalog: aCatalog.
	
	aCart add: aBook.
	
	self deny: aCart isEmpty.! !
!CartTest methodsFor: 'as yet unclassified' stamp: 'FC 11/16/2020 19:08:22' prior: 50919776!
test03
	|aCart|
	
	aCart := Cart withCatalog: aCatalog.
	
	aCart add: aBook.
	aCart add: anotherBook.
	
	self deny: aCart isEmpty.
	self assert: (aCart contains: aBook).
	self assert: (aCart contains: anotherBook).! !
!CartTest methodsFor: 'as yet unclassified' stamp: 'FC 11/16/2020 19:08:27' prior: 50919828!
test04
	|aCart|
	
	aCart := Cart withCatalog: aCatalog.
	
	self should: [ aCart add: invalidBook ] raise: Error withMessageText: Cart invalidBookMessage.
	
	self assert: aCart isEmpty. 
! !
!Cart methodsFor: 'adding' stamp: 'FC 11/16/2020 19:09:27' prior: 50919704!
add: aBook
	(catalog includes: aBook) ifFalse:[^self error: self class invalidBookMessage].
	contents add: aBook.! !

!testRun: #CartTest #test01 stamp: 'FC 11/16/2020 19:09:28'!
ERROR!

!testRun: #CartTest #test02 stamp: 'FC 11/16/2020 19:09:28'!
ERROR!

!testRun: #CartTest #test03 stamp: 'FC 11/16/2020 19:09:28'!
ERROR!

!testRun: #CartTest #test04 stamp: 'FC 11/16/2020 19:09:28'!
ERROR!

!testRun: #CartTest #test01 stamp: 'FC 11/16/2020 19:09:32'!
ERROR!

!testRun: #CartTest #test02 stamp: 'FC 11/16/2020 19:09:32'!
ERROR!

!testRun: #CartTest #test03 stamp: 'FC 11/16/2020 19:09:32'!
ERROR!

!testRun: #CartTest #test04 stamp: 'FC 11/16/2020 19:09:32'!
ERROR!

!testRun: #CartTest #test04 stamp: 'FC 11/16/2020 19:09:34'!
ERROR!
!Cart class methodsFor: 'error' stamp: 'FC 11/16/2020 19:09:42'!
invalidBookMessage
	self shouldBeImplemented.! !
!Cart class methodsFor: 'error' stamp: 'FC 11/16/2020 19:09:50' prior: 50919931!
invalidBookMessage
	^'Book not in catalog'.! !

!testRun: #CartTest #test04 stamp: 'FC 11/16/2020 19:09:53'!
FAILURE!

!testRun: #CartTest #test04 stamp: 'FC 11/16/2020 19:09:59'!
ERROR!

!testRun: #CartTest #test04 stamp: 'FC 11/16/2020 19:10:01'!
ERROR!

!testRun: #CartTest #test04 stamp: 'FC 11/16/2020 19:10:02'!
ERROR!
!Cart class methodsFor: 'as yet unclassified' stamp: 'FC 11/16/2020 19:10:18' prior: 50919836!
withCatalog: aCatalog
	^self new initializeFor: aCatalog.! !

!testRun: #CartTest #test01 stamp: 'FC 11/16/2020 19:10:19'!
PASSED!

!testRun: #CartTest #test02 stamp: 'FC 11/16/2020 19:10:19'!
PASSED!

!testRun: #CartTest #test03 stamp: 'FC 11/16/2020 19:10:19'!
PASSED!

!testRun: #CartTest #test04 stamp: 'FC 11/16/2020 19:10:19'!
PASSED!
!Cart methodsFor: 'adding' stamp: 'FC 11/16/2020 19:20:40'!
add: aQuantity copiesOf: aBook
	(catalog includes: aBook) ifFalse:[^self error: self class invalidBookMessage].
	
	contents add: aBook.! !

!methodRemoval: Cart #initialize stamp: 'FC 11/16/2020 19:20:47'!
initialize
	contents := OrderedCollection new.!
!Cart methodsFor: 'adding' stamp: 'FC 11/16/2020 19:20:56' prior: 50919840!
initializeFor: aCatalog
	catalog := aCatalog.
	contents := Dictionary new.! !

!methodRemoval: Cart #add: stamp: 'FC 11/16/2020 19:21:25'!
add: aBook
	(catalog includes: aBook) ifFalse:[^self error: self class invalidBookMessage].
	contents add: aBook.!
!Cart methodsFor: 'adding' stamp: 'FC 11/16/2020 19:25:11' prior: 50919963!
add: aQuantity copiesOf: aBook
	(catalog includes: aBook) ifFalse:[^self error: self class invalidBookMessage].
	(contents includesKey: aBook)
	ifTrue: [
		contents at: aBook put: (contents at: aBook + aQuantity)
	] 
	ifFalse: [ 
		contents at: aBook put: aQuantity.
	]
	! !
!Cart methodsFor: 'testing' stamp: 'FC 11/16/2020 19:25:37' prior: 50919739!
contains: aBook
	^contents includesKey: aBook.! !
!Cart methodsFor: 'adding' stamp: 'FC 11/16/2020 19:25:57' prior: 50919985!
add: aQuantity copiesOf: aBook
	(catalog includes: aBook) ifFalse:[^self error: self class invalidBookMessage].
	
	(self contains: aBook)
	ifTrue: [
		contents at: aBook put: (contents at: aBook + aQuantity)
	] 
	ifFalse: [ 
		contents at: aBook put: aQuantity.
	]
	! !
!CartTest methodsFor: 'as yet unclassified' stamp: 'FC 11/16/2020 19:26:13' prior: 50919879!
test02
	|aCart|
	
	aCart := Cart withCatalog: aCatalog.
	
	aCart add: 1 copiesOf:aBook.
	
	self deny: aCart isEmpty.! !

!testRun: #CartTest #test02 stamp: 'FC 11/16/2020 19:26:14'!
PASSED!

!testRun: #CartTest #test01 stamp: 'FC 11/16/2020 19:26:14'!
PASSED!

!testRun: #CartTest #test02 stamp: 'FC 11/16/2020 19:26:14'!
PASSED!

!testRun: #CartTest #test03 stamp: 'FC 11/16/2020 19:26:14'!
ERROR!

!testRun: #CartTest #test04 stamp: 'FC 11/16/2020 19:26:14'!
FAILURE!
!CartTest methodsFor: 'as yet unclassified' stamp: 'FC 11/16/2020 19:26:37' prior: 50919886!
test03
	|aCart|
	
	aCart := Cart withCatalog: aCatalog.
	
	aCart add: 1 copiesOf: aBook.
	aCart add: 1 copiesOf: anotherBook.
	
	self deny: aCart isEmpty.
	self assert: (aCart contains: aBook).
	self assert: (aCart contains: anotherBook).! !

!testRun: #CartTest #test03 stamp: 'FC 11/16/2020 19:26:38'!
PASSED!

!testRun: #CartTest #test01 stamp: 'FC 11/16/2020 19:26:38'!
PASSED!

!testRun: #CartTest #test02 stamp: 'FC 11/16/2020 19:26:38'!
PASSED!

!testRun: #CartTest #test03 stamp: 'FC 11/16/2020 19:26:38'!
PASSED!

!testRun: #CartTest #test04 stamp: 'FC 11/16/2020 19:26:38'!
FAILURE!

!testRun: #CartTest #test04 stamp: 'FC 11/16/2020 19:26:38'!
FAILURE!
!CartTest methodsFor: 'as yet unclassified' stamp: 'FC 11/16/2020 19:26:46' prior: 50919896!
test04
	|aCart|
	
	aCart := Cart withCatalog: aCatalog.
	
	self should: [ aCart add: 1 copiesOf: invalidBook ] raise: Error withMessageText: Cart invalidBookMessage.
	
	self assert: aCart isEmpty. 
! !

!testRun: #CartTest #test04 stamp: 'FC 11/16/2020 19:26:46'!
PASSED!

!testRun: #CartTest #test01 stamp: 'FC 11/16/2020 19:26:46'!
PASSED!

!testRun: #CartTest #test02 stamp: 'FC 11/16/2020 19:26:46'!
PASSED!

!testRun: #CartTest #test03 stamp: 'FC 11/16/2020 19:26:46'!
PASSED!

!testRun: #CartTest #test04 stamp: 'FC 11/16/2020 19:26:46'!
PASSED!
!CartTest methodsFor: 'as yet unclassified' stamp: 'FC 11/16/2020 19:27:26'!
test05
	|aCart|
	
	aCart := Cart withCatalog: aCatalog.
	
	self should: [ aCart add: -1 copiesOf: aBook ] raise: Error withMessageText: Cart invalidQuantity.
	
	self assert: aCart isEmpty. 
! !
!CartTest methodsFor: 'as yet unclassified' stamp: 'FC 11/16/2020 19:27:39'!
test06
	|aCart|
	
	aCart := Cart withCatalog: aCatalog.
	
	self should: [ aCart add: 0 copiesOf: aBook ] raise: Error withMessageText: Cart invalidQuantity.
	
	self assert: aCart isEmpty. 
! !
!Cart methodsFor: 'adding' stamp: 'FC 11/16/2020 19:28:20' prior: 50920000!
add: aQuantity copiesOf: aBook
	(catalog includes: aBook) ifFalse:[self error: self class invalidBookMessage].
	(aQuantity <= 0) ifTrue: [self error: self class invalidQuantity].
	(self contains: aBook)
	ifTrue: [
		contents at: aBook put: (contents at: aBook + aQuantity)
	] 
	ifFalse: [ 
		contents at: aBook put: aQuantity.
	]
	! !

!testRun: #CartTest #test01 stamp: 'FC 11/16/2020 19:28:21'!
PASSED!

!testRun: #CartTest #test02 stamp: 'FC 11/16/2020 19:28:21'!
PASSED!

!testRun: #CartTest #test03 stamp: 'FC 11/16/2020 19:28:21'!
PASSED!

!testRun: #CartTest #test04 stamp: 'FC 11/16/2020 19:28:21'!
PASSED!

!testRun: #CartTest #test05 stamp: 'FC 11/16/2020 19:28:21'!
ERROR!

!testRun: #CartTest #test06 stamp: 'FC 11/16/2020 19:28:21'!
ERROR!
!Cart class methodsFor: 'error' stamp: 'FC 11/16/2020 19:28:39'!
invalidQuantity
	^'Book quantity must be positive'.! !

!testRun: #CartTest #test01 stamp: 'FC 11/16/2020 19:28:40'!
PASSED!

!testRun: #CartTest #test02 stamp: 'FC 11/16/2020 19:28:40'!
PASSED!

!testRun: #CartTest #test03 stamp: 'FC 11/16/2020 19:28:40'!
PASSED!

!testRun: #CartTest #test04 stamp: 'FC 11/16/2020 19:28:40'!
PASSED!

!testRun: #CartTest #test05 stamp: 'FC 11/16/2020 19:28:40'!
PASSED!

!testRun: #CartTest #test06 stamp: 'FC 11/16/2020 19:28:40'!
PASSED!
!CartTest methodsFor: 'as yet unclassified' stamp: 'FC 11/16/2020 19:29:55'!
test07
	|aCart|
	
	aCart := Cart withCatalog: aCatalog.
	
	aCart add: 2 copiesOf: aBook.

	self deny: aCart isEmpty.
	self assert: (aCart copiesOf: aBook) equals: 2.
! !
!Cart methodsFor: 'accessing' stamp: 'FC 11/16/2020 19:30:40'!
copiesOf: aBook
	^contents at: aBook ifAbsent: [0]! !

!testRun: #CartTest #test01 stamp: 'FC 11/16/2020 19:30:41'!
PASSED!

!testRun: #CartTest #test02 stamp: 'FC 11/16/2020 19:30:41'!
PASSED!

!testRun: #CartTest #test03 stamp: 'FC 11/16/2020 19:30:41'!
PASSED!

!testRun: #CartTest #test04 stamp: 'FC 11/16/2020 19:30:41'!
PASSED!

!testRun: #CartTest #test05 stamp: 'FC 11/16/2020 19:30:41'!
PASSED!

!testRun: #CartTest #test06 stamp: 'FC 11/16/2020 19:30:41'!
PASSED!

!testRun: #CartTest #test07 stamp: 'FC 11/16/2020 19:30:41'!
PASSED!
!CartTest methodsFor: 'tests' stamp: 'FC 11/16/2020 19:31:19'!
test01newCartShouldBeEmpty
	|aCart|
	
	aCart := Cart withCatalog: aCatalog.
	
	self assert: aCart isEmpty.! !

!methodRemoval: CartTest #test01 stamp: 'FC 11/16/2020 19:31:20'!
test01
	|aCart|
	
	aCart := Cart withCatalog: aCatalog.
	
	self assert: aCart isEmpty.!
!CartTest methodsFor: 'tests' stamp: 'FC 11/16/2020 19:31:34'!
test02canAddOneCopyOfValidBook
	|aCart|
	
	aCart := Cart withCatalog: aCatalog.
	
	aCart add: 1 copiesOf:aBook.
	
	self deny: aCart isEmpty.! !

!methodRemoval: CartTest #test02 stamp: 'FC 11/16/2020 19:31:37'!
test02
	|aCart|
	
	aCart := Cart withCatalog: aCatalog.
	
	aCart add: 1 copiesOf:aBook.
	
	self deny: aCart isEmpty.!
!CartTest methodsFor: 'tests' stamp: 'FC 11/16/2020 19:31:51'!
test03canAddOneCopyOfManyValidBooks
	|aCart|
	
	aCart := Cart withCatalog: aCatalog.
	
	aCart add: 1 copiesOf: aBook.
	aCart add: 1 copiesOf: anotherBook.
	
	self deny: aCart isEmpty.
	self assert: (aCart contains: aBook).
	self assert: (aCart contains: anotherBook).! !

!methodRemoval: CartTest #test03 stamp: 'FC 11/16/2020 19:31:54'!
test03
	|aCart|
	
	aCart := Cart withCatalog: aCatalog.
	
	aCart add: 1 copiesOf: aBook.
	aCart add: 1 copiesOf: anotherBook.
	
	self deny: aCart isEmpty.
	self assert: (aCart contains: aBook).
	self assert: (aCart contains: anotherBook).!
!CartTest methodsFor: 'tests' stamp: 'FC 11/16/2020 19:32:13'!
test04canNotAddCopiesOfBookNotInCatalog
	|aCart|
	
	aCart := Cart withCatalog: aCatalog.
	
	self should: [ aCart add: 1 copiesOf: invalidBook ] raise: Error withMessageText: Cart invalidBookMessage.
	
	self assert: aCart isEmpty. 
! !

!methodRemoval: CartTest #test04 stamp: 'FC 11/16/2020 19:32:15'!
test04
	|aCart|
	
	aCart := Cart withCatalog: aCatalog.
	
	self should: [ aCart add: 1 copiesOf: invalidBook ] raise: Error withMessageText: Cart invalidBookMessage.
	
	self assert: aCart isEmpty. 
!
!CartTest methodsFor: 'tests' stamp: 'FC 11/16/2020 19:32:32'!
test05canNotAddNegativeCopiesOfABook
	|aCart|
	
	aCart := Cart withCatalog: aCatalog.
	
	self should: [ aCart add: -1 copiesOf: aBook ] raise: Error withMessageText: Cart invalidQuantity.
	
	self assert: aCart isEmpty. 
! !

!methodRemoval: CartTest #test05 stamp: 'FC 11/16/2020 19:32:34'!
test05
	|aCart|
	
	aCart := Cart withCatalog: aCatalog.
	
	self should: [ aCart add: -1 copiesOf: aBook ] raise: Error withMessageText: Cart invalidQuantity.
	
	self assert: aCart isEmpty. 
!
!CartTest methodsFor: 'tests' stamp: 'FC 11/16/2020 19:32:50'!
test06canNotAddZeroCopiesOfABook
	|aCart|
	
	aCart := Cart withCatalog: aCatalog.
	
	self should: [ aCart add: 0 copiesOf: aBook ] raise: Error withMessageText: Cart invalidQuantity.
	
	self assert: aCart isEmpty. 
! !
!CartTest methodsFor: 'tests' stamp: 'FC 11/16/2020 19:33:03'!
test07canAddMultipleCopiesOfOneValidBook
	|aCart|
	
	aCart := Cart withCatalog: aCatalog.
	
	aCart add: 2 copiesOf: aBook.

	self deny: aCart isEmpty.
	self assert: (aCart copiesOf: aBook) equals: 2.
! !

!methodRemoval: CartTest #test07 stamp: 'FC 11/16/2020 19:33:05'!
test07
	|aCart|
	
	aCart := Cart withCatalog: aCatalog.
	
	aCart add: 2 copiesOf: aBook.

	self deny: aCart isEmpty.
	self assert: (aCart copiesOf: aBook) equals: 2.
!

!methodRemoval: CartTest #test06 stamp: 'FC 11/16/2020 19:33:06'!
test06
	|aCart|
	
	aCart := Cart withCatalog: aCatalog.
	
	self should: [ aCart add: 0 copiesOf: aBook ] raise: Error withMessageText: Cart invalidQuantity.
	
	self assert: aCart isEmpty. 
!

!testRun: #CartTest #test03canAddOneCopyOfManyValidBooks stamp: 'FC 11/16/2020 19:33:19'!
PASSED!

!testRun: #CartTest #test01newCartShouldBeEmpty stamp: 'FC 11/16/2020 19:33:19'!
PASSED!

!testRun: #CartTest #test02canAddOneCopyOfValidBook stamp: 'FC 11/16/2020 19:33:19'!
PASSED!

!testRun: #CartTest #test03canAddOneCopyOfManyValidBooks stamp: 'FC 11/16/2020 19:33:19'!
PASSED!

!testRun: #CartTest #test04canNotAddCopiesOfBookNotInCatalog stamp: 'FC 11/16/2020 19:33:19'!
PASSED!

!testRun: #CartTest #test05canNotAddNegativeCopiesOfABook stamp: 'FC 11/16/2020 19:33:19'!
PASSED!

!testRun: #CartTest #test06canNotAddZeroCopiesOfABook stamp: 'FC 11/16/2020 19:33:19'!
PASSED!

!testRun: #CartTest #test07canAddMultipleCopiesOfOneValidBook stamp: 'FC 11/16/2020 19:33:19'!
PASSED!

a := Bag new.!

a occurrencesOf: 122!
!Cart methodsFor: 'testing' stamp: 'FC 11/16/2020 19:38:55' prior: 50919996!
contains: aBook
	^contents includes: aBook.! !
!Cart methodsFor: 'accessing' stamp: 'FC 11/16/2020 19:39:15' prior: 50920144!
copiesOf: aBook
	^contents occurrencesOf: aBook.! !
!Cart methodsFor: 'adding' stamp: 'FC 11/16/2020 19:41:31' prior: 50920092!
add: aQuantity copiesOf: aBook
	(catalog includes: aBook) ifFalse:[self error: self class invalidBookMessage].
	(aQuantity <= 0) ifTrue: [self error: self class invalidQuantity].
	contents add: aBook withOccurrences: aQuantity.! !

!testRun: #CartTest #test01newCartShouldBeEmpty stamp: 'FC 11/16/2020 19:41:32'!
PASSED!

!testRun: #CartTest #test02canAddOneCopyOfValidBook stamp: 'FC 11/16/2020 19:41:32'!
ERROR!

!testRun: #CartTest #test03canAddOneCopyOfManyValidBooks stamp: 'FC 11/16/2020 19:41:32'!
ERROR!

!testRun: #CartTest #test04canNotAddCopiesOfBookNotInCatalog stamp: 'FC 11/16/2020 19:41:32'!
PASSED!

!testRun: #CartTest #test05canNotAddNegativeCopiesOfABook stamp: 'FC 11/16/2020 19:41:32'!
PASSED!

!testRun: #CartTest #test06canNotAddZeroCopiesOfABook stamp: 'FC 11/16/2020 19:41:32'!
PASSED!

!testRun: #CartTest #test07canAddMultipleCopiesOfOneValidBook stamp: 'FC 11/16/2020 19:41:32'!
ERROR!

!testRun: #CartTest #test02canAddOneCopyOfValidBook stamp: 'FC 11/16/2020 19:41:36'!
ERROR!

!testRun: #CartTest #test03canAddOneCopyOfManyValidBooks stamp: 'FC 11/16/2020 19:41:44'!
ERROR!
!Cart methodsFor: 'initialization' stamp: 'FC 11/16/2020 19:42:27' prior: 50919974!
initializeFor: aCatalog
	catalog := aCatalog.
	contents := Bag new.! !

!testRun: #CartTest #test01newCartShouldBeEmpty stamp: 'FC 11/16/2020 19:42:27'!
PASSED!

!testRun: #CartTest #test02canAddOneCopyOfValidBook stamp: 'FC 11/16/2020 19:42:27'!
PASSED!

!testRun: #CartTest #test03canAddOneCopyOfManyValidBooks stamp: 'FC 11/16/2020 19:42:27'!
PASSED!

!testRun: #CartTest #test04canNotAddCopiesOfBookNotInCatalog stamp: 'FC 11/16/2020 19:42:27'!
PASSED!

!testRun: #CartTest #test05canNotAddNegativeCopiesOfABook stamp: 'FC 11/16/2020 19:42:27'!
PASSED!

!testRun: #CartTest #test06canNotAddZeroCopiesOfABook stamp: 'FC 11/16/2020 19:42:27'!
PASSED!

!testRun: #CartTest #test07canAddMultipleCopiesOfOneValidBook stamp: 'FC 11/16/2020 19:42:27'!
PASSED!

----SNAPSHOT----(16 November 2020 19:42:53) CuisUniversity-4383.image priorSource: 18702785!

!testRun: #CartTest #test01newCartShouldBeEmpty stamp: 'FC 11/16/2020 19:50:21'!
PASSED!

!testRun: #CartTest #test02canAddOneCopyOfValidBook stamp: 'FC 11/16/2020 19:50:21'!
PASSED!

!testRun: #CartTest #test03canAddOneCopyOfManyValidBooks stamp: 'FC 11/16/2020 19:50:21'!
PASSED!

!testRun: #CartTest #test04canNotAddCopiesOfBookNotInCatalog stamp: 'FC 11/16/2020 19:50:21'!
PASSED!

!testRun: #CartTest #test05canNotAddNegativeCopiesOfABook stamp: 'FC 11/16/2020 19:50:21'!
PASSED!

!testRun: #CartTest #test06canNotAddZeroCopiesOfABook stamp: 'FC 11/16/2020 19:50:21'!
PASSED!

!testRun: #CartTest #test07canAddMultipleCopiesOfOneValidBook stamp: 'FC 11/16/2020 19:50:21'!
PASSED!

----SNAPSHOT----(16 November 2020 19:50:24) CuisUniversity-4383.image priorSource: 18839188!

----SNAPSHOT----(16 November 2020 22:01:44) CuisUniversity-4383.image priorSource: 18839968!

----QUIT----(16 November 2020 22:01:47) CuisUniversity-4383.image priorSource: 18840062!

----STARTUP---- (18 November 2020 16:27:14) as C:\Users\Felip\Desktop\Dev\Inge 1\ST\windows64\CuisUniversity-4383.image!


!testRun: #CartTest #test01newCartShouldBeEmpty stamp: 'FC 11/18/2020 16:27:17'!
PASSED!

!testRun: #CartTest #test02canAddOneCopyOfValidBook stamp: 'FC 11/18/2020 16:27:17'!
PASSED!

!testRun: #CartTest #test03canAddOneCopyOfManyValidBooks stamp: 'FC 11/18/2020 16:27:17'!
PASSED!

!testRun: #CartTest #test04canNotAddCopiesOfBookNotInCatalog stamp: 'FC 11/18/2020 16:27:17'!
PASSED!

!testRun: #CartTest #test05canNotAddNegativeCopiesOfABook stamp: 'FC 11/18/2020 16:27:17'!
PASSED!

!testRun: #CartTest #test06canNotAddZeroCopiesOfABook stamp: 'FC 11/18/2020 16:27:17'!
PASSED!

!testRun: #CartTest #test07canAddMultipleCopiesOfOneValidBook stamp: 'FC 11/18/2020 16:27:17'!
PASSED!