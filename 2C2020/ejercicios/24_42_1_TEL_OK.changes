

----STARTUP---- (1 November 2020 01:25:11) as /home/jadmin/Documents/Ingeniería de Software 1/Cuis University/Cuis University/CuisUniversity-4384.image!


TestCase subclass: #TerniLapilliTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TerniLapilli'!

!classDefinition: #TerniLapilliTest category: 'TerniLapilli' stamp: 'JEA 11/1/2020 01:25:49'!
TestCase subclass: #TerniLapilliTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TerniLapilli'!

----QUIT----(1 November 2020 01:27:18) CuisUniversity-4384.image priorSource: 17249806!

----STARTUP---- (1 November 2020 13:58:56) as /home/jadmin/Documents/Ingeniería de Software 1/Cuis University/Cuis University/CuisUniversity-4384.image!


!classDefinition: #TerniLapilli category: 'TerniLapilli' stamp: 'JEA 11/1/2020 14:56:12'!
Object subclass: #TerniLapilli
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TerniLapilli'!
!TerniLapilliTest methodsFor: 'tests' stamp: 'JEA 11/1/2020 14:56:03'!
test01XPlaysFirst

	self assert: TerniLapilli new isXPlaying.! !
!TerniLapilli methodsFor: 'testing' stamp: 'JEA 11/1/2020 14:56:41'!
isXPlaying

	^true.! !

!testRun: #TerniLapilliTest #test01XPlaysFirst stamp: 'JEA 11/1/2020 14:56:44'!
PASSED!

!testRun: #TerniLapilliTest #test01XPlaysFirst stamp: 'JEA 11/1/2020 14:56:44'!
PASSED!

!testRun: #TerniLapilliTest #test01XPlaysFirst stamp: 'JEA 11/1/2020 14:56:46'!
PASSED!
!TerniLapilliTest methodsFor: 'tests' stamp: 'JEA 11/1/2020 15:10:21'!
test02XCanPlayItsTurn
	| aTerniLapilliGame |
	
	aTerniLapilliGame := TerniLapilli new.
	aTerniLapilliGame putXAt: 0@0.
	
	self assert: (aTerniLapilliGame isXAt: 0@0).! !

!testRun: #TerniLapilliTest #test01XPlaysFirst stamp: 'JEA 11/1/2020 15:10:25'!
PASSED!

!testRun: #TerniLapilliTest #test02XCanPlayItsTurn stamp: 'JEA 11/1/2020 15:10:25'!
ERROR!

!testRun: #TerniLapilliTest #test02XCanPlayItsTurn stamp: 'JEA 11/1/2020 15:10:25'!
ERROR!
!TerniLapilli methodsFor: 'testing' stamp: 'JEA 11/1/2020 15:10:36'!
isXAt

	^true.! !

!testRun: #TerniLapilliTest #test02XCanPlayItsTurn stamp: 'JEA 11/1/2020 15:10:40'!
ERROR!
!TerniLapilli methodsFor: 'playing' stamp: 'JEA 11/1/2020 15:11:51'!
putXAt: aPoint! !

!testRun: #TerniLapilliTest #test01XPlaysFirst stamp: 'JEA 11/1/2020 15:11:53'!
PASSED!

!testRun: #TerniLapilliTest #test02XCanPlayItsTurn stamp: 'JEA 11/1/2020 15:11:53'!
ERROR!

!testRun: #TerniLapilliTest #test02XCanPlayItsTurn stamp: 'JEA 11/1/2020 15:11:53'!
ERROR!
!TerniLapilli methodsFor: 'testing' stamp: 'JEA 11/1/2020 15:12:03'!
isXAt: aPosition

	^true.! !

!methodRemoval: TerniLapilli #isXAt stamp: 'JEA 11/1/2020 15:12:05'!
isXAt

	^true.!
!TerniLapilli methodsFor: 'testing' stamp: 'JEA 11/1/2020 15:12:09' prior: 50870792!
isXAt: aPoint

	^true.! !

!testRun: #TerniLapilliTest #test01XPlaysFirst stamp: 'JEA 11/1/2020 15:12:10'!
PASSED!

!testRun: #TerniLapilliTest #test02XCanPlayItsTurn stamp: 'JEA 11/1/2020 15:12:10'!
PASSED!
!TerniLapilliTest methodsFor: 'tests' stamp: 'JEA 11/1/2020 15:13:58'!
test03OPlaysAfterX
	| aTerniLapilliGame |
	
	aTerniLapilliGame := TerniLapilli new.
	aTerniLapilliGame putXAt: 0@0.
	aTerniLapilliGame putOAt: 0@1.
	
	self assert: (aTerniLapilliGame isOAt: 0@1).! !

!testRun: #TerniLapilliTest #test01XPlaysFirst stamp: 'JEA 11/1/2020 15:14:06'!
PASSED!

!testRun: #TerniLapilliTest #test02XCanPlayItsTurn stamp: 'JEA 11/1/2020 15:14:06'!
PASSED!

!testRun: #TerniLapilliTest #test03OPlaysAfterX stamp: 'JEA 11/1/2020 15:14:06'!
ERROR!

!testRun: #TerniLapilliTest #test03OPlaysAfterX stamp: 'JEA 11/1/2020 15:14:06'!
ERROR!
!TerniLapilliTest methodsFor: 'tests' stamp: 'JEA 11/1/2020 15:15:20' prior: 50870808!
test03OPlaysAfterX
	| aTerniLapilliGame |
	
	aTerniLapilliGame := TerniLapilli new.
	aTerniLapilliGame putXAt: 0@0.

	self assert: aTerniLapilliGame isOPlaying.! !

!testRun: #TerniLapilliTest #test01XPlaysFirst stamp: 'JEA 11/1/2020 15:16:05'!
PASSED!

!testRun: #TerniLapilliTest #test02XCanPlayItsTurn stamp: 'JEA 11/1/2020 15:16:05'!
PASSED!

!testRun: #TerniLapilliTest #test03OPlaysAfterX stamp: 'JEA 11/1/2020 15:16:05'!
ERROR!

!testRun: #TerniLapilliTest #test03OPlaysAfterX stamp: 'JEA 11/1/2020 15:16:05'!
ERROR!
!TerniLapilli methodsFor: 'testing' stamp: 'JEA 11/1/2020 15:16:15'!
isOPlaying

	^true.! !
!TerniLapilliTest methodsFor: 'tests' stamp: 'JEA 11/1/2020 15:16:37' prior: 50870741!
test01XPlaysFirst

	self assert: TerniLapilli new isXPlaying.
	self assert: TerniLapilli new isOPlaying not.! !
!TerniLapilliTest methodsFor: 'tests' stamp: 'JEA 11/1/2020 15:17:00' prior: 50870829!
test03OPlaysAfterX
	| aTerniLapilliGame |
	
	aTerniLapilliGame := TerniLapilli new.
	aTerniLapilliGame putXAt: 0@0.

	self assert: aTerniLapilliGame isOPlaying.
	self assert: aTerniLapilliGame isXPlaying not.! !

!testRun: #TerniLapilliTest #test01XPlaysFirst stamp: 'JEA 11/1/2020 15:17:02'!
FAILURE!

!testRun: #TerniLapilliTest #test02XCanPlayItsTurn stamp: 'JEA 11/1/2020 15:17:02'!
PASSED!

!testRun: #TerniLapilliTest #test03OPlaysAfterX stamp: 'JEA 11/1/2020 15:17:02'!
FAILURE!

!testRun: #TerniLapilliTest #test01XPlaysFirst stamp: 'JEA 11/1/2020 15:21:17'!
FAILURE!

!testRun: #TerniLapilliTest #test02XCanPlayItsTurn stamp: 'JEA 11/1/2020 15:21:17'!
PASSED!

!testRun: #TerniLapilliTest #test03OPlaysAfterX stamp: 'JEA 11/1/2020 15:21:17'!
FAILURE!
!TerniLapilli methodsFor: 'testing' stamp: 'JEA 11/1/2020 15:21:25' prior: 50870848!
isOPlaying

	^false.! !

!testRun: #TerniLapilliTest #test01XPlaysFirst stamp: 'JEA 11/1/2020 15:21:26'!
PASSED!

!testRun: #TerniLapilliTest #test02XCanPlayItsTurn stamp: 'JEA 11/1/2020 15:21:26'!
PASSED!

!testRun: #TerniLapilliTest #test03OPlaysAfterX stamp: 'JEA 11/1/2020 15:21:26'!
FAILURE!

!testRun: #TerniLapilliTest #test03OPlaysAfterX stamp: 'JEA 11/1/2020 15:21:26'!
FAILURE!
!TerniLapilli class methodsFor: 'instance creation' stamp: 'JEA 11/1/2020 15:28:44' overrides: 16783533!
new

	^self basicNew.! !

!testRun: #TerniLapilliTest #test01XPlaysFirst stamp: 'JEA 11/1/2020 15:28:45'!
PASSED!

!testRun: #TerniLapilliTest #test02XCanPlayItsTurn stamp: 'JEA 11/1/2020 15:28:45'!
PASSED!

!testRun: #TerniLapilliTest #test03OPlaysAfterX stamp: 'JEA 11/1/2020 15:28:45'!
FAILURE!

!testRun: #TerniLapilliTest #test03OPlaysAfterX stamp: 'JEA 11/1/2020 15:28:45'!
FAILURE!
!TerniLapilli class methodsFor: 'instance creation' stamp: 'JEA 11/1/2020 15:31:49' prior: 50870902 overrides: 16783533!
new
	
	^self basicNew initialize.! !
!TerniLapilli methodsFor: 'initialization' stamp: 'JEA 11/1/2020 15:32:01' overrides: 16896425!
initialize! !

Object subclass: #TerniLapilli
	instanceVariableNames: 'isXPlaying'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TerniLapilli'!

!classDefinition: #TerniLapilli category: 'TerniLapilli' stamp: 'JEA 11/1/2020 15:32:17'!
Object subclass: #TerniLapilli
	instanceVariableNames: 'isXPlaying'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TerniLapilli'!
!TerniLapilli methodsFor: 'initialization' stamp: 'JEA 11/1/2020 15:32:27' prior: 50870923 overrides: 16896425!
initialize

	isXPlaying := true.! !
!TerniLapilli methodsFor: 'testing' stamp: 'JEA 11/1/2020 15:32:36' prior: 50870746!
isXPlaying

	^isXPlaying.! !
!TerniLapilli methodsFor: 'testing' stamp: 'JEA 11/1/2020 15:32:41' prior: 50870886!
isOPlaying

	^isXPlaying not.! !

!testRun: #TerniLapilliTest #test01XPlaysFirst stamp: 'JEA 11/1/2020 15:34:32'!
PASSED!

!testRun: #TerniLapilliTest #test02XCanPlayItsTurn stamp: 'JEA 11/1/2020 15:34:32'!
PASSED!

!testRun: #TerniLapilliTest #test03OPlaysAfterX stamp: 'JEA 11/1/2020 15:34:32'!
FAILURE!

!testRun: #TerniLapilliTest #test03OPlaysAfterX stamp: 'JEA 11/1/2020 15:34:32'!
FAILURE!
!TerniLapilli methodsFor: 'playing' stamp: 'JEA 11/1/2020 15:34:45' prior: 50870780!
putXAt: aPoint

	isXPlaying := false.! !

!testRun: #TerniLapilliTest #test01XPlaysFirst stamp: 'JEA 11/1/2020 15:34:48'!
PASSED!

!testRun: #TerniLapilliTest #test02XCanPlayItsTurn stamp: 'JEA 11/1/2020 15:34:48'!
PASSED!

!testRun: #TerniLapilliTest #test03OPlaysAfterX stamp: 'JEA 11/1/2020 15:34:48'!
PASSED!
!TerniLapilliTest methodsFor: 'tests' stamp: 'JEA 11/1/2020 15:37:51'!
test04OCanPlayItsTurn
	| aTerniLapilliGame |
	
	aTerniLapilliGame := TerniLapilli new.
	aTerniLapilliGame putXAt: 0@0.
	aTerniLapilliGame putOAt: 0@1.

	self assert: (aTerniLapilliGame isOAt: 0@1).! !

!testRun: #TerniLapilliTest #test01XPlaysFirst stamp: 'JEA 11/1/2020 15:37:54'!
PASSED!

!testRun: #TerniLapilliTest #test02XCanPlayItsTurn stamp: 'JEA 11/1/2020 15:37:54'!
PASSED!

!testRun: #TerniLapilliTest #test03OPlaysAfterX stamp: 'JEA 11/1/2020 15:37:54'!
PASSED!

!testRun: #TerniLapilliTest #test04OCanPlayItsTurn stamp: 'JEA 11/1/2020 15:37:54'!
ERROR!

!testRun: #TerniLapilliTest #test04OCanPlayItsTurn stamp: 'JEA 11/1/2020 15:37:54'!
ERROR!
!TerniLapilli methodsFor: 'playing' stamp: 'JEA 11/1/2020 15:38:08'!
putOAt: aPoint! !
!TerniLapilli methodsFor: 'testing' stamp: 'JEA 11/1/2020 15:38:28'!
isOAt: aPoint

	^true.! !

!testRun: #TerniLapilliTest #test01XPlaysFirst stamp: 'JEA 11/1/2020 15:38:33'!
PASSED!

!testRun: #TerniLapilliTest #test02XCanPlayItsTurn stamp: 'JEA 11/1/2020 15:38:33'!
PASSED!

!testRun: #TerniLapilliTest #test03OPlaysAfterX stamp: 'JEA 11/1/2020 15:38:33'!
PASSED!

!testRun: #TerniLapilliTest #test04OCanPlayItsTurn stamp: 'JEA 11/1/2020 15:38:33'!
PASSED!
!TerniLapilliTest methodsFor: 'tests' stamp: 'JEA 11/1/2020 15:38:56' prior: 50870758!
test02XCanPlayItsTurn
	| aTerniLapilliGame |
	
	aTerniLapilliGame := TerniLapilli new.
	aTerniLapilliGame putXAt: 0@0.
	
	self assert: (aTerniLapilliGame isXAt: 0@0).
	self assert: (aTerniLapilliGame isOAt: 0@0) not.! !
!TerniLapilliTest methodsFor: 'tests' stamp: 'JEA 11/1/2020 15:39:05' prior: 50870975!
test04OCanPlayItsTurn
	| aTerniLapilliGame |
	
	aTerniLapilliGame := TerniLapilli new.
	aTerniLapilliGame putXAt: 0@0.
	aTerniLapilliGame putOAt: 0@1.

	self assert: (aTerniLapilliGame isOAt: 0@1).
	self assert: (aTerniLapilliGame isXAt: 0@1) not.! !

!testRun: #TerniLapilliTest #test01XPlaysFirst stamp: 'JEA 11/1/2020 15:39:06'!
PASSED!

!testRun: #TerniLapilliTest #test02XCanPlayItsTurn stamp: 'JEA 11/1/2020 15:39:06'!
FAILURE!

!testRun: #TerniLapilliTest #test03OPlaysAfterX stamp: 'JEA 11/1/2020 15:39:06'!
PASSED!

!testRun: #TerniLapilliTest #test04OCanPlayItsTurn stamp: 'JEA 11/1/2020 15:39:06'!
FAILURE!

!testRun: #TerniLapilliTest #test01XPlaysFirst stamp: 'JEA 11/1/2020 15:48:15'!
PASSED!

!testRun: #TerniLapilliTest #test02XCanPlayItsTurn stamp: 'JEA 11/1/2020 15:48:15'!
FAILURE!

!testRun: #TerniLapilliTest #test03OPlaysAfterX stamp: 'JEA 11/1/2020 15:48:15'!
PASSED!

!testRun: #TerniLapilliTest #test04OCanPlayItsTurn stamp: 'JEA 11/1/2020 15:48:15'!
FAILURE!

Object subclass: #TerniLapilli
	instanceVariableNames: 'isXPlaying XPosition OPosition'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TerniLapilli'!

!classDefinition: #TerniLapilli category: 'TerniLapilli' stamp: 'JEA 11/1/2020 15:50:57'!
Object subclass: #TerniLapilli
	instanceVariableNames: 'isXPlaying XPosition OPosition'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TerniLapilli'!

!testRun: #TerniLapilliTest #test01XPlaysFirst stamp: 'JEA 11/1/2020 15:53:52'!
PASSED!

!testRun: #TerniLapilliTest #test02XCanPlayItsTurn stamp: 'JEA 11/1/2020 15:53:52'!
FAILURE!

!testRun: #TerniLapilliTest #test03OPlaysAfterX stamp: 'JEA 11/1/2020 15:53:52'!
PASSED!

!testRun: #TerniLapilliTest #test04OCanPlayItsTurn stamp: 'JEA 11/1/2020 15:53:52'!
FAILURE!
!TerniLapilliTest methodsFor: 'tests' stamp: 'JEA 11/1/2020 15:54:21' prior: 50871016!
test02XCanPlayItsTurn
	| aTerniLapilliGame |
	
	aTerniLapilliGame := TerniLapilli new.
	aTerniLapilliGame putXAt: 0@0.
	
	self assert: (aTerniLapilliGame isXAt: 0@0).! !
!TerniLapilliTest methodsFor: 'tests' stamp: 'JEA 11/1/2020 15:54:24' prior: 50871026!
test04OCanPlayItsTurn
	| aTerniLapilliGame |
	
	aTerniLapilliGame := TerniLapilli new.
	aTerniLapilliGame putXAt: 0@0.
	aTerniLapilliGame putOAt: 0@1.

	self assert: (aTerniLapilliGame isOAt: 0@1).! !

!testRun: #TerniLapilliTest #test01XPlaysFirst stamp: 'JEA 11/1/2020 15:54:26'!
PASSED!

!testRun: #TerniLapilliTest #test02XCanPlayItsTurn stamp: 'JEA 11/1/2020 15:54:26'!
PASSED!

!testRun: #TerniLapilliTest #test03OPlaysAfterX stamp: 'JEA 11/1/2020 15:54:26'!
PASSED!

!testRun: #TerniLapilliTest #test04OCanPlayItsTurn stamp: 'JEA 11/1/2020 15:54:26'!
PASSED!
!TerniLapilliTest methodsFor: 'tests' stamp: 'JEA 11/1/2020 15:54:50'!
test05OIsNotInXsPosition
	| aTerniLapilliGame |
	
	aTerniLapilliGame := TerniLapilli new.
	aTerniLapilliGame putXAt: 0@0.
	aTerniLapilliGame putOAt: 0@1.

	self assert: (aTerniLapilliGame isOAt: 0@1).! !

----SNAPSHOT----(1 November 2020 15:54:59) CuisUniversity-4384.image priorSource: 17250421!
!TerniLapilliTest methodsFor: 'tests' stamp: 'JEA 11/1/2020 15:55:35'!
test05PositionsDontOverlap
	| aTerniLapilliGame |
	
	aTerniLapilliGame := TerniLapilli new.
	aTerniLapilliGame putXAt: 0@0.
	aTerniLapilliGame putOAt: 0@1.

	self assert: (aTerniLapilliGame isOAt: 0@1).! !

!methodRemoval: TerniLapilliTest #test05OIsNotInXsPosition stamp: 'JEA 11/1/2020 15:55:35'!
test05OIsNotInXsPosition
	| aTerniLapilliGame |
	
	aTerniLapilliGame := TerniLapilli new.
	aTerniLapilliGame putXAt: 0@0.
	aTerniLapilliGame putOAt: 0@1.

	self assert: (aTerniLapilliGame isOAt: 0@1).!
!TerniLapilliTest methodsFor: 'tests' stamp: 'JEA 11/1/2020 15:58:47' prior: 50871125!
test05PositionsDontOverlap
	| aTerniLapilliGame |
	
	aTerniLapilliGame := TerniLapilli new.
	aTerniLapilliGame putXAt: 0@0.
	aTerniLapilliGame putOAt: 0@1.

	self assert: (aTerniLapilliGame isXAt: 0@0).
	self assert: (aTerniLapilliGame isOAt: 0@0) not.
	self assert: (aTerniLapilliGame isOAt: 0@1).
	self assert: (aTerniLapilliGame isXAt: 0@1) not.! !

!testRun: #TerniLapilliTest #test01XPlaysFirst stamp: 'JEA 11/1/2020 15:58:48'!
PASSED!

!testRun: #TerniLapilliTest #test02XCanPlayItsTurn stamp: 'JEA 11/1/2020 15:58:48'!
PASSED!

!testRun: #TerniLapilliTest #test03OPlaysAfterX stamp: 'JEA 11/1/2020 15:58:48'!
PASSED!

!testRun: #TerniLapilliTest #test04OCanPlayItsTurn stamp: 'JEA 11/1/2020 15:58:48'!
PASSED!

!testRun: #TerniLapilliTest #test05PositionsDontOverlap stamp: 'JEA 11/1/2020 15:58:48'!
FAILURE!

!testRun: #TerniLapilliTest #test05PositionsDontOverlap stamp: 'JEA 11/1/2020 15:58:48'!
FAILURE!
!TerniLapilli methodsFor: 'playing' stamp: 'JEA 11/1/2020 16:01:55' prior: 50870963!
putXAt: aPoint
	
	XPosition := aPoint.
	isXPlaying := false.! !
!TerniLapilli methodsFor: 'playing' stamp: 'JEA 11/1/2020 16:02:27' prior: 50870998!
putOAt: aPoint

	OPosition := aPoint.! !
!TerniLapilli methodsFor: 'testing' stamp: 'JEA 11/1/2020 16:05:33' prior: 50870799!
isXAt: aPoint

	^aPoint = XPosition.! !
!TerniLapilli methodsFor: 'testing' stamp: 'JEA 11/1/2020 16:05:41' prior: 50871001!
isOAt: aPoint

	^aPoint = OPosition.! !

!testRun: #TerniLapilliTest #test01XPlaysFirst stamp: 'JEA 11/1/2020 16:05:42'!
PASSED!

!testRun: #TerniLapilliTest #test02XCanPlayItsTurn stamp: 'JEA 11/1/2020 16:05:42'!
PASSED!

!testRun: #TerniLapilliTest #test03OPlaysAfterX stamp: 'JEA 11/1/2020 16:05:42'!
PASSED!

!testRun: #TerniLapilliTest #test04OCanPlayItsTurn stamp: 'JEA 11/1/2020 16:05:42'!
PASSED!

!testRun: #TerniLapilliTest #test05PositionsDontOverlap stamp: 'JEA 11/1/2020 16:05:42'!
PASSED!
!TerniLapilliTest methodsFor: 'tests' stamp: 'JEA 11/1/2020 16:06:18'!
test03XPlaysAfterO
	| aTerniLapilliGame |
	
	aTerniLapilliGame := TerniLapilli new.
	aTerniLapilliGame putXAt: 0@0.
	aTerniLapilliGame putOAt: 0@1.

	self assert: aTerniLapilliGame isXPlaying.
	self assert: aTerniLapilliGame isOPlaying not.! !
!TerniLapilliTest methodsFor: 'tests' stamp: 'JEA 11/1/2020 16:06:24'!
test04XPlaysAfterO
	| aTerniLapilliGame |
	
	aTerniLapilliGame := TerniLapilli new.
	aTerniLapilliGame putXAt: 0@0.
	aTerniLapilliGame putOAt: 0@1.

	self assert: aTerniLapilliGame isXPlaying.
	self assert: aTerniLapilliGame isOPlaying not.! !

!methodRemoval: TerniLapilliTest #test03XPlaysAfterO stamp: 'JEA 11/1/2020 16:06:24'!
test03XPlaysAfterO
	| aTerniLapilliGame |
	
	aTerniLapilliGame := TerniLapilli new.
	aTerniLapilliGame putXAt: 0@0.
	aTerniLapilliGame putOAt: 0@1.

	self assert: aTerniLapilliGame isXPlaying.
	self assert: aTerniLapilliGame isOPlaying not.!
!TerniLapilliTest methodsFor: 'tests' stamp: 'JEA 11/1/2020 16:06:32'!
test05XPlaysAfterO
	| aTerniLapilliGame |
	
	aTerniLapilliGame := TerniLapilli new.
	aTerniLapilliGame putXAt: 0@0.
	aTerniLapilliGame putOAt: 0@1.

	self assert: aTerniLapilliGame isXPlaying.
	self assert: aTerniLapilliGame isOPlaying not.! !

!methodRemoval: TerniLapilliTest #test04XPlaysAfterO stamp: 'JEA 11/1/2020 16:06:32'!
test04XPlaysAfterO
	| aTerniLapilliGame |
	
	aTerniLapilliGame := TerniLapilli new.
	aTerniLapilliGame putXAt: 0@0.
	aTerniLapilliGame putOAt: 0@1.

	self assert: aTerniLapilliGame isXPlaying.
	self assert: aTerniLapilliGame isOPlaying not.!
!TerniLapilliTest methodsFor: 'tests' stamp: 'JEA 11/1/2020 16:06:37'!
test06PositionsDontOverlap
	| aTerniLapilliGame |
	
	aTerniLapilliGame := TerniLapilli new.
	aTerniLapilliGame putXAt: 0@0.
	aTerniLapilliGame putOAt: 0@1.

	self assert: (aTerniLapilliGame isXAt: 0@0).
	self assert: (aTerniLapilliGame isOAt: 0@0) not.
	self assert: (aTerniLapilliGame isOAt: 0@1).
	self assert: (aTerniLapilliGame isXAt: 0@1) not.! !

!methodRemoval: TerniLapilliTest #test05PositionsDontOverlap stamp: 'JEA 11/1/2020 16:06:37'!
test05PositionsDontOverlap
	| aTerniLapilliGame |
	
	aTerniLapilliGame := TerniLapilli new.
	aTerniLapilliGame putXAt: 0@0.
	aTerniLapilliGame putOAt: 0@1.

	self assert: (aTerniLapilliGame isXAt: 0@0).
	self assert: (aTerniLapilliGame isOAt: 0@0) not.
	self assert: (aTerniLapilliGame isOAt: 0@1).
	self assert: (aTerniLapilliGame isXAt: 0@1) not.!

!testRun: #TerniLapilliTest #test01XPlaysFirst stamp: 'JEA 11/1/2020 16:06:39'!
PASSED!

!testRun: #TerniLapilliTest #test02XCanPlayItsTurn stamp: 'JEA 11/1/2020 16:06:39'!
PASSED!

!testRun: #TerniLapilliTest #test03OPlaysAfterX stamp: 'JEA 11/1/2020 16:06:39'!
PASSED!

!testRun: #TerniLapilliTest #test04OCanPlayItsTurn stamp: 'JEA 11/1/2020 16:06:39'!
PASSED!

!testRun: #TerniLapilliTest #test05XPlaysAfterO stamp: 'JEA 11/1/2020 16:06:39'!
FAILURE!

!testRun: #TerniLapilliTest #test06PositionsDontOverlap stamp: 'JEA 11/1/2020 16:06:39'!
PASSED!

!testRun: #TerniLapilliTest #test05XPlaysAfterO stamp: 'JEA 11/1/2020 16:06:39'!
FAILURE!
!TerniLapilli methodsFor: 'playing' stamp: 'JEA 11/1/2020 16:07:00' prior: 50871181!
putOAt: aPoint

	OPosition := aPoint.
	isXPlaying := true! !
!TerniLapilli methodsFor: 'playing' stamp: 'JEA 11/1/2020 16:07:01' prior: 50871307!
putOAt: aPoint

	OPosition := aPoint.
	isXPlaying := true.! !

!testRun: #TerniLapilliTest #test01XPlaysFirst stamp: 'JEA 11/1/2020 16:07:06'!
PASSED!

!testRun: #TerniLapilliTest #test02XCanPlayItsTurn stamp: 'JEA 11/1/2020 16:07:06'!
PASSED!

!testRun: #TerniLapilliTest #test03OPlaysAfterX stamp: 'JEA 11/1/2020 16:07:06'!
PASSED!

!testRun: #TerniLapilliTest #test04OCanPlayItsTurn stamp: 'JEA 11/1/2020 16:07:06'!
PASSED!

!testRun: #TerniLapilliTest #test05XPlaysAfterO stamp: 'JEA 11/1/2020 16:07:06'!
PASSED!

!testRun: #TerniLapilliTest #test06PositionsDontOverlap stamp: 'JEA 11/1/2020 16:07:06'!
PASSED!
!TerniLapilliTest methodsFor: 'tests' stamp: 'JEA 11/1/2020 16:12:07'!
test07XAndOAreAtEveryPositionPlayed
	| aTerniLapilliGame |
	
	aTerniLapilliGame := TerniLapilli new.
	aTerniLapilliGame putXAt: 0@0.
	aTerniLapilliGame putOAt: 0@1.
	aTerniLapilliGame putXAt: 1@0.
	aTerniLapilliGame putOAt: 1@1.

	self assert: (aTerniLapilliGame isXAt: 0@0).
	self assert: (aTerniLapilliGame isOAt: 0@1).! !
!TerniLapilliTest methodsFor: 'tests' stamp: 'JEA 11/1/2020 16:12:24' prior: 50871334!
test07XAndOAreAtEveryPositionPlayed
	| aTerniLapilliGame |
	
	aTerniLapilliGame := TerniLapilli new.
	aTerniLapilliGame putXAt: 0@0.
	aTerniLapilliGame putOAt: 0@1.
	aTerniLapilliGame putXAt: 1@0.
	aTerniLapilliGame putOAt: 1@1.

	self assert: (aTerniLapilliGame isXAt: 0@0).
	self assert: (aTerniLapilliGame isXAt: 1@0).
	self assert: (aTerniLapilliGame isOAt: 0@1).
	self assert: (aTerniLapilliGame isOAt: 1@1).! !

!testRun: #TerniLapilliTest #test01XPlaysFirst stamp: 'JEA 11/1/2020 16:12:25'!
PASSED!

!testRun: #TerniLapilliTest #test02XCanPlayItsTurn stamp: 'JEA 11/1/2020 16:12:25'!
PASSED!

!testRun: #TerniLapilliTest #test03OPlaysAfterX stamp: 'JEA 11/1/2020 16:12:25'!
PASSED!

!testRun: #TerniLapilliTest #test04OCanPlayItsTurn stamp: 'JEA 11/1/2020 16:12:25'!
PASSED!

!testRun: #TerniLapilliTest #test05XPlaysAfterO stamp: 'JEA 11/1/2020 16:12:25'!
PASSED!

!testRun: #TerniLapilliTest #test06PositionsDontOverlap stamp: 'JEA 11/1/2020 16:12:25'!
PASSED!

!testRun: #TerniLapilliTest #test07XAndOAreAtEveryPositionPlayed stamp: 'JEA 11/1/2020 16:12:25'!
FAILURE!

!testRun: #TerniLapilliTest #test07XAndOAreAtEveryPositionPlayed stamp: 'JEA 11/1/2020 16:12:25'!
FAILURE!

----SNAPSHOT----(1 November 2020 16:12:30) CuisUniversity-4384.image priorSource: 17263083!

!testRun: #TerniLapilliTest #test01XPlaysFirst stamp: 'JEA 11/1/2020 16:18:53'!
PASSED!

!testRun: #TerniLapilliTest #test02XCanPlayItsTurn stamp: 'JEA 11/1/2020 16:18:53'!
PASSED!

!testRun: #TerniLapilliTest #test03OPlaysAfterX stamp: 'JEA 11/1/2020 16:18:53'!
PASSED!

!testRun: #TerniLapilliTest #test04OCanPlayItsTurn stamp: 'JEA 11/1/2020 16:18:53'!
PASSED!

!testRun: #TerniLapilliTest #test05XPlaysAfterO stamp: 'JEA 11/1/2020 16:18:53'!
PASSED!

!testRun: #TerniLapilliTest #test06PositionsDontOverlap stamp: 'JEA 11/1/2020 16:18:53'!
PASSED!

!testRun: #TerniLapilliTest #test07XAndOAreAtEveryPositionPlayed stamp: 'JEA 11/1/2020 16:18:53'!
FAILURE!

!testRun: #TerniLapilliTest #test07XAndOAreAtEveryPositionPlayed stamp: 'JEA 11/1/2020 16:18:53'!
FAILURE!
!TerniLapilli methodsFor: 'initialization' stamp: 'JEA 11/1/2020 16:19:36' prior: 50870939 overrides: 16896425!
initialize

	XPosition := OrderedCollection new.
	OPosition := OrderedCollection new.
	isXPlaying := true.! !

!classDefinition: #TerniLapilli category: 'TerniLapilli' stamp: 'JEA 11/1/2020 16:19:42'!
Object subclass: #TerniLapilli
	instanceVariableNames: 'isXPlaying XPositions OPosition'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TerniLapilli'!
!TerniLapilli methodsFor: 'as yet unclassified' stamp: 'JEA 11/1/2020 16:19:42' prior: 50871185!
isXAt: aPoint

	^aPoint = XPositions.! !
!TerniLapilli methodsFor: 'as yet unclassified' stamp: 'JEA 11/1/2020 16:19:42' prior: 50871415 overrides: 16896425!
initialize

	XPositions := OrderedCollection new.
	OPosition := OrderedCollection new.
	isXPlaying := true.! !
!TerniLapilli methodsFor: 'as yet unclassified' stamp: 'JEA 11/1/2020 16:19:42' prior: 50871176!
putXAt: aPoint
	
	XPositions := aPoint.
	isXPlaying := false.! !

Object subclass: #TerniLapilli
	instanceVariableNames: 'isXPlaying XPositions OPositions'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TerniLapilli'!

!classDefinition: #TerniLapilli category: 'TerniLapilli' stamp: 'JEA 11/1/2020 16:20:01'!
Object subclass: #TerniLapilli
	instanceVariableNames: 'isXPlaying XPositions OPositions'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TerniLapilli'!
!TerniLapilli methodsFor: 'initialization' stamp: 'JEA 11/1/2020 16:20:05' prior: 50871435 overrides: 16896425!
initialize

	XPositions := OrderedCollection new.
	OPositions := OrderedCollection new.
	isXPlaying := true.! !
!TerniLapilli methodsFor: 'testing' stamp: 'JEA 11/1/2020 16:20:15' prior: 50871189!
isOAt: aPoint

	^aPoint = OPositions.! !
!TerniLapilli methodsFor: 'playing' stamp: 'JEA 11/1/2020 16:20:23' prior: 50871312!
putOAt: aPoint

	OPositions := aPoint.
	isXPlaying := true.! !
!TerniLapilli methodsFor: 'playing' stamp: 'JEA 11/1/2020 16:24:47' prior: 50871472!
putOAt: aPoint

	OPositions add: aPoint.
	isXPlaying := true.! !
!TerniLapilli methodsFor: 'playing' stamp: 'JEA 11/1/2020 16:24:53' prior: 50871442!
putXAt: aPoint
	
	XPositions add: aPoint.
	isXPlaying := false.! !
!TerniLapilli methodsFor: 'testing' stamp: 'JEA 11/1/2020 16:25:03' prior: 50871468!
isOAt: aPoint

	^aPoint includes: OPositions.! !
!TerniLapilli methodsFor: 'testing' stamp: 'JEA 11/1/2020 16:25:08' prior: 50871430!
isXAt: aPoint

	^aPoint includes: XPositions.! !

!testRun: #TerniLapilliTest #test01XPlaysFirst stamp: 'JEA 11/1/2020 16:25:14'!
PASSED!

!testRun: #TerniLapilliTest #test02XCanPlayItsTurn stamp: 'JEA 11/1/2020 16:25:14'!
ERROR!

!testRun: #TerniLapilliTest #test03OPlaysAfterX stamp: 'JEA 11/1/2020 16:25:14'!
PASSED!

!testRun: #TerniLapilliTest #test04OCanPlayItsTurn stamp: 'JEA 11/1/2020 16:25:14'!
ERROR!

!testRun: #TerniLapilliTest #test05XPlaysAfterO stamp: 'JEA 11/1/2020 16:25:14'!
PASSED!

!testRun: #TerniLapilliTest #test06PositionsDontOverlap stamp: 'JEA 11/1/2020 16:25:14'!
ERROR!

!testRun: #TerniLapilliTest #test07XAndOAreAtEveryPositionPlayed stamp: 'JEA 11/1/2020 16:25:14'!
ERROR!
!TerniLapilli methodsFor: 'testing' stamp: 'JEA 11/1/2020 16:25:33' prior: 50871492!
isXAt: aPoint

	^XPositions includes: aPoint.! !
!TerniLapilli methodsFor: 'testing' stamp: 'JEA 11/1/2020 16:25:38' prior: 50871487!
isOAt: aPoint

	^OPositions includes: aPoint.! !

!testRun: #TerniLapilliTest #test01XPlaysFirst stamp: 'JEA 11/1/2020 16:25:39'!
PASSED!

!testRun: #TerniLapilliTest #test02XCanPlayItsTurn stamp: 'JEA 11/1/2020 16:25:39'!
PASSED!

!testRun: #TerniLapilliTest #test03OPlaysAfterX stamp: 'JEA 11/1/2020 16:25:39'!
PASSED!

!testRun: #TerniLapilliTest #test04OCanPlayItsTurn stamp: 'JEA 11/1/2020 16:25:39'!
PASSED!

!testRun: #TerniLapilliTest #test05XPlaysAfterO stamp: 'JEA 11/1/2020 16:25:39'!
PASSED!

!testRun: #TerniLapilliTest #test06PositionsDontOverlap stamp: 'JEA 11/1/2020 16:25:39'!
PASSED!

!testRun: #TerniLapilliTest #test07XAndOAreAtEveryPositionPlayed stamp: 'JEA 11/1/2020 16:25:39'!
PASSED!

!testRun: #TerniLapilliTest #test01XPlaysFirst stamp: 'JEA 11/1/2020 16:28:07'!
PASSED!

!testRun: #TerniLapilliTest #test02XCanPlayItsTurn stamp: 'JEA 11/1/2020 16:28:07'!
PASSED!

!testRun: #TerniLapilliTest #test03OPlaysAfterX stamp: 'JEA 11/1/2020 16:28:07'!
PASSED!

!testRun: #TerniLapilliTest #test04OCanPlayItsTurn stamp: 'JEA 11/1/2020 16:28:07'!
PASSED!

!testRun: #TerniLapilliTest #test05XPlaysAfterO stamp: 'JEA 11/1/2020 16:28:07'!
PASSED!

!testRun: #TerniLapilliTest #test06PositionsDontOverlap stamp: 'JEA 11/1/2020 16:28:07'!
PASSED!

!testRun: #TerniLapilliTest #test07XAndOAreAtEveryPositionPlayed stamp: 'JEA 11/1/2020 16:28:07'!
PASSED!
!TerniLapilliTest methodsFor: 'tests' stamp: 'JEA 11/1/2020 16:28:55'!
test08! !
!TerniLapilliTest methodsFor: 'tests' stamp: 'JEA 11/1/2020 16:29:18'!
test08XAndOAreAtEveryPositionPlayed
	| aTerniLapilliGame |
	
	aTerniLapilliGame := TerniLapilli new.
	aTerniLapilliGame putXAt: 0@0.
	aTerniLapilliGame putOAt: 0@1.
	aTerniLapilliGame putXAt: 1@0.
	aTerniLapilliGame putOAt: 1@1.

	self assert: (aTerniLapilliGame isXAt: 0@0).
	self assert: (aTerniLapilliGame isXAt: 1@0).
	self assert: (aTerniLapilliGame isOAt: 0@1).
	self assert: (aTerniLapilliGame isOAt: 1@1).! !

!methodRemoval: TerniLapilliTest #test07XAndOAreAtEveryPositionPlayed stamp: 'JEA 11/1/2020 16:29:18'!
test07XAndOAreAtEveryPositionPlayed
	| aTerniLapilliGame |
	
	aTerniLapilliGame := TerniLapilli new.
	aTerniLapilliGame putXAt: 0@0.
	aTerniLapilliGame putOAt: 0@1.
	aTerniLapilliGame putXAt: 1@0.
	aTerniLapilliGame putOAt: 1@1.

	self assert: (aTerniLapilliGame isXAt: 0@0).
	self assert: (aTerniLapilliGame isXAt: 1@0).
	self assert: (aTerniLapilliGame isOAt: 0@1).
	self assert: (aTerniLapilliGame isOAt: 1@1).!
!TerniLapilliTest methodsFor: 'tests' stamp: 'JEA 11/1/2020 16:29:52'!
test07CantPlayInTheOtherPlayersPosition! !

!methodRemoval: TerniLapilliTest #test08 stamp: 'JEA 11/1/2020 16:29:52'!
test08!
!TerniLapilliTest methodsFor: 'tests' stamp: 'JEA 11/1/2020 16:32:21'!
test09XAndOAreAtEveryPositionPlayed
	| aTerniLapilliGame |
	
	aTerniLapilliGame := TerniLapilli new.
	aTerniLapilliGame putXAt: 0@0.
	aTerniLapilliGame putOAt: 0@1.
	aTerniLapilliGame putXAt: 1@0.
	aTerniLapilliGame putOAt: 1@1.

	self assert: (aTerniLapilliGame isXAt: 0@0).
	self assert: (aTerniLapilliGame isXAt: 1@0).
	self assert: (aTerniLapilliGame isOAt: 0@1).
	self assert: (aTerniLapilliGame isOAt: 1@1).! !

!methodRemoval: TerniLapilliTest #test08XAndOAreAtEveryPositionPlayed stamp: 'JEA 11/1/2020 16:32:21'!
test08XAndOAreAtEveryPositionPlayed
	| aTerniLapilliGame |
	
	aTerniLapilliGame := TerniLapilli new.
	aTerniLapilliGame putXAt: 0@0.
	aTerniLapilliGame putOAt: 0@1.
	aTerniLapilliGame putXAt: 1@0.
	aTerniLapilliGame putOAt: 1@1.

	self assert: (aTerniLapilliGame isXAt: 0@0).
	self assert: (aTerniLapilliGame isXAt: 1@0).
	self assert: (aTerniLapilliGame isOAt: 0@1).
	self assert: (aTerniLapilliGame isOAt: 1@1).!
!TerniLapilliTest methodsFor: 'tests' stamp: 'JEA 11/1/2020 16:32:47'!
test08XAndOAreAtEveryPositionPlayed
	| aTerniLapilliGame |
	
	aTerniLapilliGame := TerniLapilli new.
	aTerniLapilliGame putXAt: 0@0.
	aTerniLapilliGame putOAt: 0@1.
	aTerniLapilliGame putXAt: 1@0.
	aTerniLapilliGame putOAt: 1@1.

	self assert: (aTerniLapilliGame isXAt: 0@0).
	self assert: (aTerniLapilliGame isXAt: 1@0).
	self assert: (aTerniLapilliGame isOAt: 0@1).
	self assert: (aTerniLapilliGame isOAt: 1@1).! !

!methodRemoval: TerniLapilliTest #test09XAndOAreAtEveryPositionPlayed stamp: 'JEA 11/1/2020 16:32:47'!
test09XAndOAreAtEveryPositionPlayed
	| aTerniLapilliGame |
	
	aTerniLapilliGame := TerniLapilli new.
	aTerniLapilliGame putXAt: 0@0.
	aTerniLapilliGame putOAt: 0@1.
	aTerniLapilliGame putXAt: 1@0.
	aTerniLapilliGame putOAt: 1@1.

	self assert: (aTerniLapilliGame isXAt: 0@0).
	self assert: (aTerniLapilliGame isXAt: 1@0).
	self assert: (aTerniLapilliGame isOAt: 0@1).
	self assert: (aTerniLapilliGame isOAt: 1@1).!
!TerniLapilliTest methodsFor: 'tests' stamp: 'JEA 11/1/2020 16:32:55' prior: 50871602!
test07CantPlayInTheOtherPlayersPosition
	| aTerniLapilliGame |
	
	aTerniLapilliGame := TerniLapilli new.
	aTerniLapilliGame putXAt: 0@0.
	aTerniLapilliGame putOAt: 0@1.

	self assert: (aTerniLapilliGame isXAt: 0@0).
	self assert: (aTerniLapilliGame isOAt: 0@0) not.
	self assert: (aTerniLapilliGame isOAt: 0@1).
	self assert: (aTerniLapilliGame isXAt: 0@1) not.! !
!TerniLapilliTest methodsFor: 'tests' stamp: 'JEA 11/1/2020 17:02:47' prior: 50871673!
test07CantPlayInTheOtherPlayersPosition
	| aTerniLapilliGame |
	
	aTerniLapilliGame := TerniLapilli new.
	aTerniLapilliGame putXAt: 0@0.

	self should: [ aTerniLapilliGame putOAt: 0@1. ]
		raise: Error
		withExceptionDo: [ :anException | anException description = TerniLapilli positionOccupiedMessage. ].! !

!testRun: #TerniLapilliTest #test01XPlaysFirst stamp: 'JEA 11/1/2020 17:02:53'!
PASSED!

!testRun: #TerniLapilliTest #test02XCanPlayItsTurn stamp: 'JEA 11/1/2020 17:02:53'!
PASSED!

!testRun: #TerniLapilliTest #test03OPlaysAfterX stamp: 'JEA 11/1/2020 17:02:53'!
PASSED!

!testRun: #TerniLapilliTest #test04OCanPlayItsTurn stamp: 'JEA 11/1/2020 17:02:53'!
PASSED!

!testRun: #TerniLapilliTest #test05XPlaysAfterO stamp: 'JEA 11/1/2020 17:02:53'!
PASSED!

!testRun: #TerniLapilliTest #test06PositionsDontOverlap stamp: 'JEA 11/1/2020 17:02:53'!
PASSED!

!testRun: #TerniLapilliTest #test07CantPlayInTheOtherPlayersPosition stamp: 'JEA 11/1/2020 17:02:53'!
FAILURE!

!testRun: #TerniLapilliTest #test08XAndOAreAtEveryPositionPlayed stamp: 'JEA 11/1/2020 17:02:53'!
PASSED!

!testRun: #TerniLapilliTest #test07CantPlayInTheOtherPlayersPosition stamp: 'JEA 11/1/2020 17:02:53'!
FAILURE!

!testRun: #TerniLapilliTest #test01XPlaysFirst stamp: 'JEA 11/1/2020 17:04:15'!
PASSED!

!testRun: #TerniLapilliTest #test02XCanPlayItsTurn stamp: 'JEA 11/1/2020 17:04:15'!
PASSED!

!testRun: #TerniLapilliTest #test03OPlaysAfterX stamp: 'JEA 11/1/2020 17:04:15'!
PASSED!

!testRun: #TerniLapilliTest #test04OCanPlayItsTurn stamp: 'JEA 11/1/2020 17:04:15'!
PASSED!

!testRun: #TerniLapilliTest #test05XPlaysAfterO stamp: 'JEA 11/1/2020 17:04:15'!
PASSED!

!testRun: #TerniLapilliTest #test06PositionsDontOverlap stamp: 'JEA 11/1/2020 17:04:15'!
PASSED!

!testRun: #TerniLapilliTest #test07CantPlayInTheOtherPlayersPosition stamp: 'JEA 11/1/2020 17:04:15'!
FAILURE!

!testRun: #TerniLapilliTest #test08XAndOAreAtEveryPositionPlayed stamp: 'JEA 11/1/2020 17:04:15'!
PASSED!

!testRun: #TerniLapilliTest #test07CantPlayInTheOtherPlayersPosition stamp: 'JEA 11/1/2020 17:04:15'!
FAILURE!
!TerniLapilli class methodsFor: 'error descriptions' stamp: 'JEA 11/1/2020 17:05:50'!
possitionOccupiedDescription

	^'Cannot play in an already occupied possition.'! !
!TerniLapilli class methodsFor: 'error descriptions' stamp: 'JEA 11/1/2020 17:06:30'!
positionOccupiedDescription

	^'Cannot play in an already occupied possition.'! !

!methodRemoval: TerniLapilli class #possitionOccupiedDescription stamp: 'JEA 11/1/2020 17:06:30'!
possitionOccupiedDescription

	^'Cannot play in an already occupied possition.'!
!TerniLapilliTest methodsFor: 'tests' stamp: 'JEA 11/1/2020 17:06:47' prior: 50871688!
test07CantPlayInTheOtherPlayersPosition
	| aTerniLapilliGame |
	
	aTerniLapilliGame := TerniLapilli new.
	aTerniLapilliGame putXAt: 0@0.

	self should: [ aTerniLapilliGame putOAt: 0@1. ]
		raise: Error
		withExceptionDo: [ :anException | anException description = TerniLapilli positionOccupiedDescription. ].! !

!testRun: #TerniLapilliTest #test01XPlaysFirst stamp: 'JEA 11/1/2020 17:06:48'!
PASSED!

!testRun: #TerniLapilliTest #test02XCanPlayItsTurn stamp: 'JEA 11/1/2020 17:06:48'!
PASSED!

!testRun: #TerniLapilliTest #test03OPlaysAfterX stamp: 'JEA 11/1/2020 17:06:48'!
PASSED!

!testRun: #TerniLapilliTest #test04OCanPlayItsTurn stamp: 'JEA 11/1/2020 17:06:48'!
PASSED!

!testRun: #TerniLapilliTest #test05XPlaysAfterO stamp: 'JEA 11/1/2020 17:06:48'!
PASSED!

!testRun: #TerniLapilliTest #test06PositionsDontOverlap stamp: 'JEA 11/1/2020 17:06:48'!
PASSED!

!testRun: #TerniLapilliTest #test07CantPlayInTheOtherPlayersPosition stamp: 'JEA 11/1/2020 17:06:48'!
FAILURE!

!testRun: #TerniLapilliTest #test08XAndOAreAtEveryPositionPlayed stamp: 'JEA 11/1/2020 17:06:48'!
PASSED!

!testRun: #TerniLapilliTest #test07CantPlayInTheOtherPlayersPosition stamp: 'JEA 11/1/2020 17:06:48'!
FAILURE!
!TerniLapilli methodsFor: 'playing' stamp: 'JEA 11/1/2020 17:08:47' prior: 50871482!
putXAt: aPoint

	(self isXAt: aPoint) ifTrue: [self error: self class positionOccupiedDescription. ].
	
	XPositions add: aPoint.
	isXPlaying := false.! !

!testRun: #TerniLapilliTest #test01XPlaysFirst stamp: 'JEA 11/1/2020 17:09:23'!
PASSED!

!testRun: #TerniLapilliTest #test02XCanPlayItsTurn stamp: 'JEA 11/1/2020 17:09:23'!
PASSED!

!testRun: #TerniLapilliTest #test03OPlaysAfterX stamp: 'JEA 11/1/2020 17:09:23'!
PASSED!

!testRun: #TerniLapilliTest #test04OCanPlayItsTurn stamp: 'JEA 11/1/2020 17:09:23'!
PASSED!

!testRun: #TerniLapilliTest #test05XPlaysAfterO stamp: 'JEA 11/1/2020 17:09:23'!
PASSED!

!testRun: #TerniLapilliTest #test06PositionsDontOverlap stamp: 'JEA 11/1/2020 17:09:23'!
PASSED!

!testRun: #TerniLapilliTest #test07CantPlayInTheOtherPlayersPosition stamp: 'JEA 11/1/2020 17:09:23'!
FAILURE!

!testRun: #TerniLapilliTest #test08XAndOAreAtEveryPositionPlayed stamp: 'JEA 11/1/2020 17:09:23'!
PASSED!

!testRun: #TerniLapilliTest #test07CantPlayInTheOtherPlayersPosition stamp: 'JEA 11/1/2020 17:09:23'!
FAILURE!
!TerniLapilli methodsFor: 'playing' stamp: 'JEA 11/1/2020 17:10:04' prior: 50871814!
putXAt: aPoint
	
	XPositions add: aPoint.
	isXPlaying := false.! !
!TerniLapilli methodsFor: 'playing' stamp: 'JEA 11/1/2020 17:10:28' prior: 50871477!
putOAt: aPoint

	(self isOAt: aPoint) ifTrue: [self error: self class positionOccupiedDescription. ].
	(self isXAt: aPoint) ifTrue: [self error: self class positionOccupiedDescription. ].

	OPositions add: aPoint.
	isXPlaying := true.! !

!testRun: #TerniLapilliTest #test01XPlaysFirst stamp: 'JEA 11/1/2020 17:10:30'!
PASSED!

!testRun: #TerniLapilliTest #test02XCanPlayItsTurn stamp: 'JEA 11/1/2020 17:10:30'!
PASSED!

!testRun: #TerniLapilliTest #test03OPlaysAfterX stamp: 'JEA 11/1/2020 17:10:30'!
PASSED!

!testRun: #TerniLapilliTest #test04OCanPlayItsTurn stamp: 'JEA 11/1/2020 17:10:30'!
PASSED!

!testRun: #TerniLapilliTest #test05XPlaysAfterO stamp: 'JEA 11/1/2020 17:10:30'!
PASSED!

!testRun: #TerniLapilliTest #test06PositionsDontOverlap stamp: 'JEA 11/1/2020 17:10:30'!
PASSED!

!testRun: #TerniLapilliTest #test07CantPlayInTheOtherPlayersPosition stamp: 'JEA 11/1/2020 17:10:30'!
FAILURE!

!testRun: #TerniLapilliTest #test08XAndOAreAtEveryPositionPlayed stamp: 'JEA 11/1/2020 17:10:30'!
PASSED!

!testRun: #TerniLapilliTest #test07CantPlayInTheOtherPlayersPosition stamp: 'JEA 11/1/2020 17:10:30'!
FAILURE!
!TerniLapilliTest methodsFor: 'tests' stamp: 'JEA 11/1/2020 17:10:39' prior: 50871773!
test07CantPlayInTheOtherPlayersPosition
	| aTerniLapilliGame |
	
	aTerniLapilliGame := TerniLapilli new.
	aTerniLapilliGame putXAt: 0@0.

	self should: [ aTerniLapilliGame putOAt: 0@0. ]
		raise: Error
		withExceptionDo: [ :anException | anException description = TerniLapilli positionOccupiedDescription. ].! !

!testRun: #TerniLapilliTest #test01XPlaysFirst stamp: 'JEA 11/1/2020 17:10:39'!
PASSED!

!testRun: #TerniLapilliTest #test02XCanPlayItsTurn stamp: 'JEA 11/1/2020 17:10:39'!
PASSED!

!testRun: #TerniLapilliTest #test03OPlaysAfterX stamp: 'JEA 11/1/2020 17:10:39'!
PASSED!

!testRun: #TerniLapilliTest #test04OCanPlayItsTurn stamp: 'JEA 11/1/2020 17:10:39'!
PASSED!

!testRun: #TerniLapilliTest #test05XPlaysAfterO stamp: 'JEA 11/1/2020 17:10:39'!
PASSED!

!testRun: #TerniLapilliTest #test06PositionsDontOverlap stamp: 'JEA 11/1/2020 17:10:39'!
PASSED!

!testRun: #TerniLapilliTest #test07CantPlayInTheOtherPlayersPosition stamp: 'JEA 11/1/2020 17:10:39'!
PASSED!

!testRun: #TerniLapilliTest #test08XAndOAreAtEveryPositionPlayed stamp: 'JEA 11/1/2020 17:10:39'!
PASSED!
!TerniLapilliTest methodsFor: 'tests' stamp: 'JEA 11/1/2020 17:10:58'!
test07OCantPlayInXsPosition
	| aTerniLapilliGame |
	
	aTerniLapilliGame := TerniLapilli new.
	aTerniLapilliGame putXAt: 0@0.

	self should: [ aTerniLapilliGame putOAt: 0@0. ]
		raise: Error
		withExceptionDo: [ :anException | anException description = TerniLapilli positionOccupiedDescription. ].! !

!methodRemoval: TerniLapilliTest #test07CantPlayInTheOtherPlayersPosition stamp: 'JEA 11/1/2020 17:10:58'!
test07CantPlayInTheOtherPlayersPosition
	| aTerniLapilliGame |
	
	aTerniLapilliGame := TerniLapilli new.
	aTerniLapilliGame putXAt: 0@0.

	self should: [ aTerniLapilliGame putOAt: 0@0. ]
		raise: Error
		withExceptionDo: [ :anException | anException description = TerniLapilli positionOccupiedDescription. ].!
!TerniLapilliTest methodsFor: 'tests' stamp: 'JEA 11/1/2020 17:11:03'!
test09XAndOAreAtEveryPositionPlayed
	| aTerniLapilliGame |
	
	aTerniLapilliGame := TerniLapilli new.
	aTerniLapilliGame putXAt: 0@0.
	aTerniLapilliGame putOAt: 0@1.
	aTerniLapilliGame putXAt: 1@0.
	aTerniLapilliGame putOAt: 1@1.

	self assert: (aTerniLapilliGame isXAt: 0@0).
	self assert: (aTerniLapilliGame isXAt: 1@0).
	self assert: (aTerniLapilliGame isOAt: 0@1).
	self assert: (aTerniLapilliGame isOAt: 1@1).! !

!methodRemoval: TerniLapilliTest #test08XAndOAreAtEveryPositionPlayed stamp: 'JEA 11/1/2020 17:11:03'!
test08XAndOAreAtEveryPositionPlayed
	| aTerniLapilliGame |
	
	aTerniLapilliGame := TerniLapilli new.
	aTerniLapilliGame putXAt: 0@0.
	aTerniLapilliGame putOAt: 0@1.
	aTerniLapilliGame putXAt: 1@0.
	aTerniLapilliGame putOAt: 1@1.

	self assert: (aTerniLapilliGame isXAt: 0@0).
	self assert: (aTerniLapilliGame isXAt: 1@0).
	self assert: (aTerniLapilliGame isOAt: 0@1).
	self assert: (aTerniLapilliGame isOAt: 1@1).!
!TerniLapilliTest methodsFor: 'tests' stamp: 'JEA 11/1/2020 17:11:10'!
test08XCantPlayInOsPosition
	| aTerniLapilliGame |
	
	aTerniLapilliGame := TerniLapilli new.
	aTerniLapilliGame putXAt: 0@0.

	self should: [ aTerniLapilliGame putOAt: 0@0. ]
		raise: Error
		withExceptionDo: [ :anException | anException description = TerniLapilli positionOccupiedDescription. ].! !

!methodRemoval: TerniLapilliTest #test07OCantPlayInXsPosition stamp: 'JEA 11/1/2020 17:11:10'!
test07OCantPlayInXsPosition
	| aTerniLapilliGame |
	
	aTerniLapilliGame := TerniLapilli new.
	aTerniLapilliGame putXAt: 0@0.

	self should: [ aTerniLapilliGame putOAt: 0@0. ]
		raise: Error
		withExceptionDo: [ :anException | anException description = TerniLapilli positionOccupiedDescription. ].!
!TerniLapilliTest methodsFor: 'tests' stamp: 'JEA 11/1/2020 17:11:25' prior: 50871987!
test08XCantPlayInOsPosition
	| aTerniLapilliGame |
	
	aTerniLapilliGame := TerniLapilli new.
	aTerniLapilliGame putXAt: 0@0.
	aTerniLapilliGame putOAt: 0@1.

	self should: [ aTerniLapilliGame putXAt: 0@1. ]
		raise: Error
		withExceptionDo: [ :anException | anException description = TerniLapilli positionOccupiedDescription. ].! !

!testRun: #TerniLapilliTest #test01XPlaysFirst stamp: 'JEA 11/1/2020 17:11:26'!
PASSED!

!testRun: #TerniLapilliTest #test02XCanPlayItsTurn stamp: 'JEA 11/1/2020 17:11:26'!
PASSED!

!testRun: #TerniLapilliTest #test03OPlaysAfterX stamp: 'JEA 11/1/2020 17:11:26'!
PASSED!

!testRun: #TerniLapilliTest #test04OCanPlayItsTurn stamp: 'JEA 11/1/2020 17:11:26'!
PASSED!

!testRun: #TerniLapilliTest #test05XPlaysAfterO stamp: 'JEA 11/1/2020 17:11:26'!
PASSED!

!testRun: #TerniLapilliTest #test06PositionsDontOverlap stamp: 'JEA 11/1/2020 17:11:26'!
PASSED!

!testRun: #TerniLapilliTest #test08XCantPlayInOsPosition stamp: 'JEA 11/1/2020 17:11:26'!
FAILURE!

!testRun: #TerniLapilliTest #test09XAndOAreAtEveryPositionPlayed stamp: 'JEA 11/1/2020 17:11:26'!
PASSED!

!testRun: #TerniLapilliTest #test08XCantPlayInOsPosition stamp: 'JEA 11/1/2020 17:11:26'!
FAILURE!
!TerniLapilli methodsFor: 'playing' stamp: 'JEA 11/1/2020 17:11:51' prior: 50871850!
putXAt: aPoint
	(self isOAt: aPoint) ifTrue: [self error: self class positionOccupiedDescription. ].
	(self isXAt: aPoint) ifTrue: [self error: self class positionOccupiedDescription. ].
	
	XPositions add: aPoint.
	isXPlaying := false.! !

!testRun: #TerniLapilliTest #test01XPlaysFirst stamp: 'JEA 11/1/2020 17:11:54'!
PASSED!

!testRun: #TerniLapilliTest #test02XCanPlayItsTurn stamp: 'JEA 11/1/2020 17:11:54'!
PASSED!

!testRun: #TerniLapilliTest #test03OPlaysAfterX stamp: 'JEA 11/1/2020 17:11:54'!
PASSED!

!testRun: #TerniLapilliTest #test04OCanPlayItsTurn stamp: 'JEA 11/1/2020 17:11:54'!
PASSED!

!testRun: #TerniLapilliTest #test05XPlaysAfterO stamp: 'JEA 11/1/2020 17:11:54'!
PASSED!

!testRun: #TerniLapilliTest #test06PositionsDontOverlap stamp: 'JEA 11/1/2020 17:11:54'!
PASSED!

!testRun: #TerniLapilliTest #test08XCantPlayInOsPosition stamp: 'JEA 11/1/2020 17:11:54'!
PASSED!

!testRun: #TerniLapilliTest #test09XAndOAreAtEveryPositionPlayed stamp: 'JEA 11/1/2020 17:11:54'!
PASSED!
!TerniLapilli methodsFor: 'playing' stamp: 'JEA 11/1/2020 17:12:36' prior: 50871855!
putOAt: aPoint

	OPositions add: aPoint.
	isXPlaying := true.! !

!testRun: #TerniLapilliTest #test01XPlaysFirst stamp: 'JEA 11/1/2020 17:12:37'!
PASSED!

!testRun: #TerniLapilliTest #test02XCanPlayItsTurn stamp: 'JEA 11/1/2020 17:12:37'!
PASSED!

!testRun: #TerniLapilliTest #test03OPlaysAfterX stamp: 'JEA 11/1/2020 17:12:37'!
PASSED!

!testRun: #TerniLapilliTest #test04OCanPlayItsTurn stamp: 'JEA 11/1/2020 17:12:37'!
PASSED!

!testRun: #TerniLapilliTest #test05XPlaysAfterO stamp: 'JEA 11/1/2020 17:12:37'!
PASSED!

!testRun: #TerniLapilliTest #test06PositionsDontOverlap stamp: 'JEA 11/1/2020 17:12:37'!
PASSED!

!testRun: #TerniLapilliTest #test08XCantPlayInOsPosition stamp: 'JEA 11/1/2020 17:12:37'!
PASSED!

!testRun: #TerniLapilliTest #test09XAndOAreAtEveryPositionPlayed stamp: 'JEA 11/1/2020 17:12:37'!
PASSED!
!TerniLapilliTest methodsFor: 'tests' stamp: 'JEA 11/1/2020 17:12:44'!
test07OCantPlayInXsPosition
	| aTerniLapilliGame |
	
	aTerniLapilliGame := TerniLapilli new.
	aTerniLapilliGame putXAt: 0@0.

	self should: [ aTerniLapilliGame putOAt: 0@0. ]
		raise: Error
		withExceptionDo: [ :anException | anException description = TerniLapilli positionOccupiedDescription. ].! !

!testRun: #TerniLapilliTest #test01XPlaysFirst stamp: 'JEA 11/1/2020 17:12:45'!
PASSED!

!testRun: #TerniLapilliTest #test02XCanPlayItsTurn stamp: 'JEA 11/1/2020 17:12:45'!
PASSED!

!testRun: #TerniLapilliTest #test03OPlaysAfterX stamp: 'JEA 11/1/2020 17:12:45'!
PASSED!

!testRun: #TerniLapilliTest #test04OCanPlayItsTurn stamp: 'JEA 11/1/2020 17:12:45'!
PASSED!

!testRun: #TerniLapilliTest #test05XPlaysAfterO stamp: 'JEA 11/1/2020 17:12:45'!
PASSED!

!testRun: #TerniLapilliTest #test06PositionsDontOverlap stamp: 'JEA 11/1/2020 17:12:45'!
PASSED!

!testRun: #TerniLapilliTest #test07OCantPlayInXsPosition stamp: 'JEA 11/1/2020 17:12:45'!
FAILURE!

!testRun: #TerniLapilliTest #test08XCantPlayInOsPosition stamp: 'JEA 11/1/2020 17:12:45'!
PASSED!

!testRun: #TerniLapilliTest #test09XAndOAreAtEveryPositionPlayed stamp: 'JEA 11/1/2020 17:12:45'!
PASSED!

!testRun: #TerniLapilliTest #test07OCantPlayInXsPosition stamp: 'JEA 11/1/2020 17:12:45'!
FAILURE!
!TerniLapilli methodsFor: 'playing' stamp: 'JEA 11/1/2020 17:12:54' prior: 50872052!
putXAt: aPoint

	(self isOAt: aPoint) ifTrue: [self error: self class positionOccupiedDescription. ].
	(self isXAt: aPoint) ifTrue: [self error: self class positionOccupiedDescription. ].
	
	XPositions add: aPoint.
	isXPlaying := false.! !
!TerniLapilli methodsFor: 'playing' stamp: 'JEA 11/1/2020 17:12:58' prior: 50872086!
putOAt: aPoint

	(self isOAt: aPoint) ifTrue: [self error: self class positionOccupiedDescription. ].
	(self isXAt: aPoint) ifTrue: [self error: self class positionOccupiedDescription. ].

	OPositions add: aPoint.
	isXPlaying := true.! !

!testRun: #TerniLapilliTest #test01XPlaysFirst stamp: 'JEA 11/1/2020 17:12:59'!
PASSED!

!testRun: #TerniLapilliTest #test02XCanPlayItsTurn stamp: 'JEA 11/1/2020 17:12:59'!
PASSED!

!testRun: #TerniLapilliTest #test03OPlaysAfterX stamp: 'JEA 11/1/2020 17:12:59'!
PASSED!

!testRun: #TerniLapilliTest #test04OCanPlayItsTurn stamp: 'JEA 11/1/2020 17:12:59'!
PASSED!

!testRun: #TerniLapilliTest #test05XPlaysAfterO stamp: 'JEA 11/1/2020 17:12:59'!
PASSED!

!testRun: #TerniLapilliTest #test06PositionsDontOverlap stamp: 'JEA 11/1/2020 17:12:59'!
PASSED!

!testRun: #TerniLapilliTest #test07OCantPlayInXsPosition stamp: 'JEA 11/1/2020 17:12:59'!
PASSED!

!testRun: #TerniLapilliTest #test08XCantPlayInOsPosition stamp: 'JEA 11/1/2020 17:12:59'!
PASSED!

!testRun: #TerniLapilliTest #test09XAndOAreAtEveryPositionPlayed stamp: 'JEA 11/1/2020 17:12:59'!
PASSED!
!TerniLapilli methodsFor: 'playing' stamp: 'JEA 11/1/2020 17:13:25' prior: 50872167!
putOAt: aPoint

	"(self isOAt: aPoint) ifTrue: [self error: self class positionOccupiedDescription. ]."
	(self isXAt: aPoint) ifTrue: [self error: self class positionOccupiedDescription. ].

	OPositions add: aPoint.
	isXPlaying := true.! !
!TerniLapilli methodsFor: 'playing' stamp: 'JEA 11/1/2020 17:13:29' prior: 50872156!
putXAt: aPoint

	(self isOAt: aPoint) ifTrue: [self error: self class positionOccupiedDescription. ].
	"(self isXAt: aPoint) ifTrue: [self error: self class positionOccupiedDescription. ]."
	
	XPositions add: aPoint.
	isXPlaying := false.! !
!TerniLapilliTest methodsFor: 'tests' stamp: 'JEA 11/1/2020 17:13:44'!
test07OCantPlayInOccupied
	| aTerniLapilliGame |
	
	aTerniLapilliGame := TerniLapilli new.
	aTerniLapilliGame putXAt: 0@0.

	self should: [ aTerniLapilliGame putOAt: 0@0. ]
		raise: Error
		withExceptionDo: [ :anException | anException description = TerniLapilli positionOccupiedDescription. ].! !

!methodRemoval: TerniLapilliTest #test07OCantPlayInXsPosition stamp: 'JEA 11/1/2020 17:13:44'!
test07OCantPlayInXsPosition
	| aTerniLapilliGame |
	
	aTerniLapilliGame := TerniLapilli new.
	aTerniLapilliGame putXAt: 0@0.

	self should: [ aTerniLapilliGame putOAt: 0@0. ]
		raise: Error
		withExceptionDo: [ :anException | anException description = TerniLapilli positionOccupiedDescription. ].!
!TerniLapilliTest methodsFor: 'tests' stamp: 'JEA 11/1/2020 17:13:51'!
test07OCantPlayInOccupiedPosition
	| aTerniLapilliGame |
	
	aTerniLapilliGame := TerniLapilli new.
	aTerniLapilliGame putXAt: 0@0.

	self should: [ aTerniLapilliGame putOAt: 0@0. ]
		raise: Error
		withExceptionDo: [ :anException | anException description = TerniLapilli positionOccupiedDescription. ].! !

!methodRemoval: TerniLapilliTest #test07OCantPlayInOccupied stamp: 'JEA 11/1/2020 17:13:51'!
test07OCantPlayInOccupied
	| aTerniLapilliGame |
	
	aTerniLapilliGame := TerniLapilli new.
	aTerniLapilliGame putXAt: 0@0.

	self should: [ aTerniLapilliGame putOAt: 0@0. ]
		raise: Error
		withExceptionDo: [ :anException | anException description = TerniLapilli positionOccupiedDescription. ].!
!TerniLapilliTest methodsFor: 'tests' stamp: 'JEA 11/1/2020 17:13:55'!
test08XCantPlayInOccupiedPosition
	| aTerniLapilliGame |
	
	aTerniLapilliGame := TerniLapilli new.
	aTerniLapilliGame putXAt: 0@0.
	aTerniLapilliGame putOAt: 0@1.

	self should: [ aTerniLapilliGame putXAt: 0@1. ]
		raise: Error
		withExceptionDo: [ :anException | anException description = TerniLapilli positionOccupiedDescription. ].! !

!methodRemoval: TerniLapilliTest #test08XCantPlayInOsPosition stamp: 'JEA 11/1/2020 17:13:55'!
test08XCantPlayInOsPosition
	| aTerniLapilliGame |
	
	aTerniLapilliGame := TerniLapilli new.
	aTerniLapilliGame putXAt: 0@0.
	aTerniLapilliGame putOAt: 0@1.

	self should: [ aTerniLapilliGame putXAt: 0@1. ]
		raise: Error
		withExceptionDo: [ :anException | anException description = TerniLapilli positionOccupiedDescription. ].!

!testRun: #TerniLapilliTest #test01XPlaysFirst stamp: 'JEA 11/1/2020 17:34:07'!
PASSED!

!testRun: #TerniLapilliTest #test02XCanPlayItsTurn stamp: 'JEA 11/1/2020 17:34:07'!
PASSED!

!testRun: #TerniLapilliTest #test03OPlaysAfterX stamp: 'JEA 11/1/2020 17:34:07'!
PASSED!

!testRun: #TerniLapilliTest #test04OCanPlayItsTurn stamp: 'JEA 11/1/2020 17:34:07'!
PASSED!

!testRun: #TerniLapilliTest #test05XPlaysAfterO stamp: 'JEA 11/1/2020 17:34:07'!
PASSED!

!testRun: #TerniLapilliTest #test06PositionsDontOverlap stamp: 'JEA 11/1/2020 17:34:07'!
PASSED!

!testRun: #TerniLapilliTest #test07OCantPlayInOccupiedPosition stamp: 'JEA 11/1/2020 17:34:07'!
PASSED!

!testRun: #TerniLapilliTest #test08XCantPlayInOccupiedPosition stamp: 'JEA 11/1/2020 17:34:07'!
PASSED!

!testRun: #TerniLapilliTest #test09XAndOAreAtEveryPositionPlayed stamp: 'JEA 11/1/2020 17:34:07'!
PASSED!
!TerniLapilliTest methodsFor: 'tests' stamp: 'JEA 11/1/2020 17:35:38'!
test07PositionsAreOccupied
	| aTerniLapilliGame |
	
	aTerniLapilliGame := TerniLapilli new.
	aTerniLapilliGame putXAt: 0@0.
	aTerniLapilliGame putOAt: 0@1.

	self assert: (aTerniLapilliGame isOccupied: 0@0).
	self assert: (aTerniLapilliGame isOccupied: 0@1).! !
!TerniLapilliTest methodsFor: 'tests' stamp: 'JEA 11/1/2020 17:35:45'!
test10XAndOAreAtEveryPositionPlayed
	| aTerniLapilliGame |
	
	aTerniLapilliGame := TerniLapilli new.
	aTerniLapilliGame putXAt: 0@0.
	aTerniLapilliGame putOAt: 0@1.
	aTerniLapilliGame putXAt: 1@0.
	aTerniLapilliGame putOAt: 1@1.

	self assert: (aTerniLapilliGame isXAt: 0@0).
	self assert: (aTerniLapilliGame isXAt: 1@0).
	self assert: (aTerniLapilliGame isOAt: 0@1).
	self assert: (aTerniLapilliGame isOAt: 1@1).! !

!methodRemoval: TerniLapilliTest #test09XAndOAreAtEveryPositionPlayed stamp: 'JEA 11/1/2020 17:35:45'!
test09XAndOAreAtEveryPositionPlayed
	| aTerniLapilliGame |
	
	aTerniLapilliGame := TerniLapilli new.
	aTerniLapilliGame putXAt: 0@0.
	aTerniLapilliGame putOAt: 0@1.
	aTerniLapilliGame putXAt: 1@0.
	aTerniLapilliGame putOAt: 1@1.

	self assert: (aTerniLapilliGame isXAt: 0@0).
	self assert: (aTerniLapilliGame isXAt: 1@0).
	self assert: (aTerniLapilliGame isOAt: 0@1).
	self assert: (aTerniLapilliGame isOAt: 1@1).!
!TerniLapilliTest methodsFor: 'tests' stamp: 'JEA 11/1/2020 17:35:49'!
test09XCantPlayInOccupiedPosition
	| aTerniLapilliGame |
	
	aTerniLapilliGame := TerniLapilli new.
	aTerniLapilliGame putXAt: 0@0.
	aTerniLapilliGame putOAt: 0@1.

	self should: [ aTerniLapilliGame putXAt: 0@1. ]
		raise: Error
		withExceptionDo: [ :anException | anException description = TerniLapilli positionOccupiedDescription. ].! !

!methodRemoval: TerniLapilliTest #test08XCantPlayInOccupiedPosition stamp: 'JEA 11/1/2020 17:35:49'!
test08XCantPlayInOccupiedPosition
	| aTerniLapilliGame |
	
	aTerniLapilliGame := TerniLapilli new.
	aTerniLapilliGame putXAt: 0@0.
	aTerniLapilliGame putOAt: 0@1.

	self should: [ aTerniLapilliGame putXAt: 0@1. ]
		raise: Error
		withExceptionDo: [ :anException | anException description = TerniLapilli positionOccupiedDescription. ].!
!TerniLapilliTest methodsFor: 'tests' stamp: 'JEA 11/1/2020 17:36:00'!
test08OCantPlayInOccupiedPosition
	| aTerniLapilliGame |
	
	aTerniLapilliGame := TerniLapilli new.
	aTerniLapilliGame putXAt: 0@0.

	self should: [ aTerniLapilliGame putOAt: 0@0. ]
		raise: Error
		withExceptionDo: [ :anException | anException description = TerniLapilli positionOccupiedDescription. ].! !

!methodRemoval: TerniLapilliTest #test07OCantPlayInOccupiedPosition stamp: 'JEA 11/1/2020 17:36:00'!
test07OCantPlayInOccupiedPosition
	| aTerniLapilliGame |
	
	aTerniLapilliGame := TerniLapilli new.
	aTerniLapilliGame putXAt: 0@0.

	self should: [ aTerniLapilliGame putOAt: 0@0. ]
		raise: Error
		withExceptionDo: [ :anException | anException description = TerniLapilli positionOccupiedDescription. ].!

!testRun: #TerniLapilliTest #test01XPlaysFirst stamp: 'JEA 11/1/2020 17:36:01'!
PASSED!

!testRun: #TerniLapilliTest #test02XCanPlayItsTurn stamp: 'JEA 11/1/2020 17:36:01'!
PASSED!

!testRun: #TerniLapilliTest #test03OPlaysAfterX stamp: 'JEA 11/1/2020 17:36:01'!
PASSED!

!testRun: #TerniLapilliTest #test04OCanPlayItsTurn stamp: 'JEA 11/1/2020 17:36:01'!
PASSED!

!testRun: #TerniLapilliTest #test05XPlaysAfterO stamp: 'JEA 11/1/2020 17:36:01'!
PASSED!

!testRun: #TerniLapilliTest #test06PositionsDontOverlap stamp: 'JEA 11/1/2020 17:36:01'!
PASSED!

!testRun: #TerniLapilliTest #test07PositionsAreOccupied stamp: 'JEA 11/1/2020 17:36:01'!
ERROR!

!testRun: #TerniLapilliTest #test08OCantPlayInOccupiedPosition stamp: 'JEA 11/1/2020 17:36:01'!
PASSED!

!testRun: #TerniLapilliTest #test09XCantPlayInOccupiedPosition stamp: 'JEA 11/1/2020 17:36:01'!
PASSED!

!testRun: #TerniLapilliTest #test10XAndOAreAtEveryPositionPlayed stamp: 'JEA 11/1/2020 17:36:01'!
PASSED!

!testRun: #TerniLapilliTest #test07PositionsAreOccupied stamp: 'JEA 11/1/2020 17:36:01'!
ERROR!
!TerniLapilli methodsFor: 'testing' stamp: 'JEA 11/1/2020 17:36:49'!
isOccupied: aPosition

	^(XPositions includes: aPosition) or: [ OPositions includes: aPosition ].! !
!TerniLapilli methodsFor: 'testing' stamp: 'JEA 11/1/2020 17:36:55' prior: 50871517!
isXAt: aPosition

	^XPositions includes: aPosition.! !
!TerniLapilli methodsFor: 'testing' stamp: 'JEA 11/1/2020 17:37:02' prior: 50871522!
isOAt: aPosition

	^OPositions includes: aPosition.! !
!TerniLapilli methodsFor: 'playing' stamp: 'JEA 11/1/2020 17:37:06' prior: 50872204!
putOAt: aPosition

	"(self isOAt: aPoint) ifTrue: [self error: self class positionOccupiedDescription. ]."
	(self isXAt: aPosition) ifTrue: [self error: self class positionOccupiedDescription. ].

	OPositions add: aPosition.
	isXPlaying := true.! !
!TerniLapilli methodsFor: 'playing' stamp: 'JEA 11/1/2020 17:37:10' prior: 50872215!
putXAt: aPosition

	(self isOAt: aPosition) ifTrue: [self error: self class positionOccupiedDescription. ].
	"(self isXAt: aPoint) ifTrue: [self error: self class positionOccupiedDescription. ]."
	
	XPositions add: aPosition.
	isXPlaying := false.! !

!testRun: #TerniLapilliTest #test01XPlaysFirst stamp: 'JEA 11/1/2020 17:37:13'!
PASSED!

!testRun: #TerniLapilliTest #test02XCanPlayItsTurn stamp: 'JEA 11/1/2020 17:37:13'!
PASSED!

!testRun: #TerniLapilliTest #test03OPlaysAfterX stamp: 'JEA 11/1/2020 17:37:13'!
PASSED!

!testRun: #TerniLapilliTest #test04OCanPlayItsTurn stamp: 'JEA 11/1/2020 17:37:13'!
PASSED!

!testRun: #TerniLapilliTest #test05XPlaysAfterO stamp: 'JEA 11/1/2020 17:37:13'!
PASSED!

!testRun: #TerniLapilliTest #test06PositionsDontOverlap stamp: 'JEA 11/1/2020 17:37:13'!
PASSED!

!testRun: #TerniLapilliTest #test07PositionsAreOccupied stamp: 'JEA 11/1/2020 17:37:13'!
PASSED!

!testRun: #TerniLapilliTest #test08OCantPlayInOccupiedPosition stamp: 'JEA 11/1/2020 17:37:13'!
PASSED!

!testRun: #TerniLapilliTest #test09XCantPlayInOccupiedPosition stamp: 'JEA 11/1/2020 17:37:13'!
PASSED!

!testRun: #TerniLapilliTest #test10XAndOAreAtEveryPositionPlayed stamp: 'JEA 11/1/2020 17:37:13'!
PASSED!
!TerniLapilli methodsFor: 'playing' stamp: 'JEA 11/1/2020 17:37:59' prior: 50872471!
putOAt: aPosition

	(self isOccupied: aPosition) ifTrue: [self error: self class positionOccupiedDescription. ].

	OPositions add: aPosition.
	isXPlaying := true.! !
!TerniLapilli methodsFor: 'playing' stamp: 'JEA 11/1/2020 17:38:09' prior: 50872482!
putXAt: aPosition

	(self isOccupied: aPosition) ifTrue: [self error: self class positionOccupiedDescription. ].
	
	XPositions add: aPosition.
	isXPlaying := false.! !

!testRun: #TerniLapilliTest #test01XPlaysFirst stamp: 'JEA 11/1/2020 17:38:12'!
PASSED!

!testRun: #TerniLapilliTest #test02XCanPlayItsTurn stamp: 'JEA 11/1/2020 17:38:12'!
PASSED!

!testRun: #TerniLapilliTest #test03OPlaysAfterX stamp: 'JEA 11/1/2020 17:38:12'!
PASSED!

!testRun: #TerniLapilliTest #test04OCanPlayItsTurn stamp: 'JEA 11/1/2020 17:38:12'!
PASSED!

!testRun: #TerniLapilliTest #test05XPlaysAfterO stamp: 'JEA 11/1/2020 17:38:12'!
PASSED!

!testRun: #TerniLapilliTest #test06PositionsDontOverlap stamp: 'JEA 11/1/2020 17:38:12'!
PASSED!

!testRun: #TerniLapilliTest #test07PositionsAreOccupied stamp: 'JEA 11/1/2020 17:38:12'!
PASSED!

!testRun: #TerniLapilliTest #test08OCantPlayInOccupiedPosition stamp: 'JEA 11/1/2020 17:38:12'!
PASSED!

!testRun: #TerniLapilliTest #test09XCantPlayInOccupiedPosition stamp: 'JEA 11/1/2020 17:38:12'!
PASSED!

!testRun: #TerniLapilliTest #test10XAndOAreAtEveryPositionPlayed stamp: 'JEA 11/1/2020 17:38:12'!
PASSED!
!TerniLapilli methodsFor: 'testing' stamp: 'JEA 11/1/2020 17:38:27' prior: 50872455!
isOccupied: aPosition

	^(self isXAt: aPosition) or: [ self isOAt: aPosition ].! !

!testRun: #TerniLapilliTest #test01XPlaysFirst stamp: 'JEA 11/1/2020 17:38:29'!
PASSED!

!testRun: #TerniLapilliTest #test02XCanPlayItsTurn stamp: 'JEA 11/1/2020 17:38:29'!
PASSED!

!testRun: #TerniLapilliTest #test03OPlaysAfterX stamp: 'JEA 11/1/2020 17:38:29'!
PASSED!

!testRun: #TerniLapilliTest #test04OCanPlayItsTurn stamp: 'JEA 11/1/2020 17:38:29'!
PASSED!

!testRun: #TerniLapilliTest #test05XPlaysAfterO stamp: 'JEA 11/1/2020 17:38:29'!
PASSED!

!testRun: #TerniLapilliTest #test06PositionsDontOverlap stamp: 'JEA 11/1/2020 17:38:29'!
PASSED!

!testRun: #TerniLapilliTest #test07PositionsAreOccupied stamp: 'JEA 11/1/2020 17:38:29'!
PASSED!

!testRun: #TerniLapilliTest #test08OCantPlayInOccupiedPosition stamp: 'JEA 11/1/2020 17:38:29'!
PASSED!

!testRun: #TerniLapilliTest #test09XCantPlayInOccupiedPosition stamp: 'JEA 11/1/2020 17:38:29'!
PASSED!

!testRun: #TerniLapilliTest #test10XAndOAreAtEveryPositionPlayed stamp: 'JEA 11/1/2020 17:38:29'!
PASSED!
!TerniLapilliTest methodsFor: 'tests' stamp: 'JEA 11/1/2020 18:09:16'!
test11XCantPlayInInvalidPosition

	self should: [ TerniLapilli new putXAt: 3@2. ]
		raise: Error
		withExceptionDo: [ :anException | anException description = TerniLapilli invalidPositionDescription. ].! !

!testRun: #TerniLapilliTest #test01XPlaysFirst stamp: 'JEA 11/1/2020 18:09:30'!
PASSED!

!testRun: #TerniLapilliTest #test02XCanPlayItsTurn stamp: 'JEA 11/1/2020 18:09:30'!
PASSED!

!testRun: #TerniLapilliTest #test03OPlaysAfterX stamp: 'JEA 11/1/2020 18:09:30'!
PASSED!

!testRun: #TerniLapilliTest #test04OCanPlayItsTurn stamp: 'JEA 11/1/2020 18:09:30'!
PASSED!

!testRun: #TerniLapilliTest #test05XPlaysAfterO stamp: 'JEA 11/1/2020 18:09:30'!
PASSED!

!testRun: #TerniLapilliTest #test06PositionsDontOverlap stamp: 'JEA 11/1/2020 18:09:30'!
PASSED!

!testRun: #TerniLapilliTest #test07PositionsAreOccupied stamp: 'JEA 11/1/2020 18:09:30'!
PASSED!

!testRun: #TerniLapilliTest #test08OCantPlayInOccupiedPosition stamp: 'JEA 11/1/2020 18:09:30'!
PASSED!

!testRun: #TerniLapilliTest #test09XCantPlayInOccupiedPosition stamp: 'JEA 11/1/2020 18:09:30'!
PASSED!

!testRun: #TerniLapilliTest #test10XAndOAreAtEveryPositionPlayed stamp: 'JEA 11/1/2020 18:09:30'!
PASSED!

!testRun: #TerniLapilliTest #test11XCantPlayInInvalidPosition stamp: 'JEA 11/1/2020 18:09:30'!
FAILURE!

!testRun: #TerniLapilliTest #test11XCantPlayInInvalidPosition stamp: 'JEA 11/1/2020 18:09:30'!
FAILURE!
!TerniLapilli methodsFor: 'testing' stamp: 'JEA 11/1/2020 18:11:03'!
isValid: aPosition

	aPosition <= 2@2 and: [aPosition >= 0@0].! !
!TerniLapilli class methodsFor: 'testing' stamp: 'JEA 11/1/2020 18:12:16'!
isValid: aPosition

	aPosition <= 2@2 and: [aPosition >= 0@0].! !

!methodRemoval: TerniLapilli #isValid: stamp: 'JEA 11/1/2020 18:12:16'!
isValid: aPosition

	aPosition <= 2@2 and: [aPosition >= 0@0].!
!TerniLapilli methodsFor: 'playing' stamp: 'JEA 11/1/2020 18:13:14' prior: 50872531!
putXAt: aPosition

	(self class isValid: aPosition) ifFalse: [ self error: self class invalidPositionDescription. ].
	(self isOccupied: aPosition) ifTrue: [self error: self class positionOccupiedDescription. ].
	
	XPositions add: aPosition.
	isXPlaying := false.! !
!TerniLapilli class methodsFor: 'error descriptions' stamp: 'JEA 11/1/2020 18:13:46'!
invalidPositionDescription

	^'Cannot play in an invalid possition.'! !
!TerniLapilli class methodsFor: 'error descriptions' stamp: 'JEA 11/1/2020 18:13:56' prior: 50872677!
invalidPositionDescription

	^'Cannot play in an invalid possition. Positions from 0@0 to 2@2 are valid.'! !

!testRun: #TerniLapilliTest #test01XPlaysFirst stamp: 'JEA 11/1/2020 18:14:01'!
PASSED!

!testRun: #TerniLapilliTest #test02XCanPlayItsTurn stamp: 'JEA 11/1/2020 18:14:01'!
ERROR!

!testRun: #TerniLapilliTest #test03OPlaysAfterX stamp: 'JEA 11/1/2020 18:14:01'!
ERROR!

!testRun: #TerniLapilliTest #test04OCanPlayItsTurn stamp: 'JEA 11/1/2020 18:14:01'!
ERROR!

!testRun: #TerniLapilliTest #test05XPlaysAfterO stamp: 'JEA 11/1/2020 18:14:01'!
ERROR!

!testRun: #TerniLapilliTest #test06PositionsDontOverlap stamp: 'JEA 11/1/2020 18:14:01'!
ERROR!

!testRun: #TerniLapilliTest #test07PositionsAreOccupied stamp: 'JEA 11/1/2020 18:14:01'!
ERROR!

!testRun: #TerniLapilliTest #test08OCantPlayInOccupiedPosition stamp: 'JEA 11/1/2020 18:14:01'!
ERROR!

!testRun: #TerniLapilliTest #test09XCantPlayInOccupiedPosition stamp: 'JEA 11/1/2020 18:14:01'!
ERROR!

!testRun: #TerniLapilliTest #test10XAndOAreAtEveryPositionPlayed stamp: 'JEA 11/1/2020 18:14:01'!
ERROR!

!testRun: #TerniLapilliTest #test11XCantPlayInInvalidPosition stamp: 'JEA 11/1/2020 18:14:01'!
PASSED!

!testRun: #TerniLapilliTest #test01XPlaysFirst stamp: 'JEA 11/1/2020 18:14:15'!
PASSED!

!testRun: #TerniLapilliTest #test02XCanPlayItsTurn stamp: 'JEA 11/1/2020 18:14:15'!
ERROR!

!testRun: #TerniLapilliTest #test03OPlaysAfterX stamp: 'JEA 11/1/2020 18:14:15'!
ERROR!

!testRun: #TerniLapilliTest #test04OCanPlayItsTurn stamp: 'JEA 11/1/2020 18:14:15'!
ERROR!

!testRun: #TerniLapilliTest #test05XPlaysAfterO stamp: 'JEA 11/1/2020 18:14:15'!
ERROR!

!testRun: #TerniLapilliTest #test06PositionsDontOverlap stamp: 'JEA 11/1/2020 18:14:15'!
ERROR!

!testRun: #TerniLapilliTest #test07PositionsAreOccupied stamp: 'JEA 11/1/2020 18:14:15'!
ERROR!

!testRun: #TerniLapilliTest #test08OCantPlayInOccupiedPosition stamp: 'JEA 11/1/2020 18:14:15'!
ERROR!

!testRun: #TerniLapilliTest #test09XCantPlayInOccupiedPosition stamp: 'JEA 11/1/2020 18:14:15'!
ERROR!

!testRun: #TerniLapilliTest #test10XAndOAreAtEveryPositionPlayed stamp: 'JEA 11/1/2020 18:14:15'!
ERROR!

!testRun: #TerniLapilliTest #test11XCantPlayInInvalidPosition stamp: 'JEA 11/1/2020 18:14:15'!
PASSED!

!testRun: #TerniLapilliTest #test02XCanPlayItsTurn stamp: 'JEA 11/1/2020 18:14:17'!
ERROR!
!TerniLapilli class methodsFor: 'testing' stamp: 'JEA 11/1/2020 18:14:37' prior: 50872657!
isValid: aPosition

	aPosition <= (2@2) and: [aPosition >= (0@0)].! !

!testRun: #TerniLapilliTest #test01XPlaysFirst stamp: 'JEA 11/1/2020 18:14:42'!
PASSED!

!testRun: #TerniLapilliTest #test02XCanPlayItsTurn stamp: 'JEA 11/1/2020 18:14:42'!
ERROR!

!testRun: #TerniLapilliTest #test03OPlaysAfterX stamp: 'JEA 11/1/2020 18:14:42'!
ERROR!

!testRun: #TerniLapilliTest #test04OCanPlayItsTurn stamp: 'JEA 11/1/2020 18:14:42'!
ERROR!

!testRun: #TerniLapilliTest #test05XPlaysAfterO stamp: 'JEA 11/1/2020 18:14:42'!
ERROR!

!testRun: #TerniLapilliTest #test06PositionsDontOverlap stamp: 'JEA 11/1/2020 18:14:42'!
ERROR!

!testRun: #TerniLapilliTest #test07PositionsAreOccupied stamp: 'JEA 11/1/2020 18:14:42'!
ERROR!

!testRun: #TerniLapilliTest #test08OCantPlayInOccupiedPosition stamp: 'JEA 11/1/2020 18:14:42'!
ERROR!

!testRun: #TerniLapilliTest #test09XCantPlayInOccupiedPosition stamp: 'JEA 11/1/2020 18:14:42'!
ERROR!

!testRun: #TerniLapilliTest #test10XAndOAreAtEveryPositionPlayed stamp: 'JEA 11/1/2020 18:14:42'!
ERROR!

!testRun: #TerniLapilliTest #test11XCantPlayInInvalidPosition stamp: 'JEA 11/1/2020 18:14:42'!
PASSED!

!testRun: #TerniLapilliTest #test01XPlaysFirst stamp: 'JEA 11/1/2020 18:15:51'!
PASSED!

!testRun: #TerniLapilliTest #test02XCanPlayItsTurn stamp: 'JEA 11/1/2020 18:15:51'!
ERROR!

!testRun: #TerniLapilliTest #test03OPlaysAfterX stamp: 'JEA 11/1/2020 18:15:51'!
ERROR!

!testRun: #TerniLapilliTest #test04OCanPlayItsTurn stamp: 'JEA 11/1/2020 18:15:51'!
ERROR!

!testRun: #TerniLapilliTest #test05XPlaysAfterO stamp: 'JEA 11/1/2020 18:15:51'!
ERROR!

!testRun: #TerniLapilliTest #test06PositionsDontOverlap stamp: 'JEA 11/1/2020 18:15:51'!
ERROR!

!testRun: #TerniLapilliTest #test07PositionsAreOccupied stamp: 'JEA 11/1/2020 18:15:51'!
ERROR!

!testRun: #TerniLapilliTest #test08OCantPlayInOccupiedPosition stamp: 'JEA 11/1/2020 18:15:51'!
ERROR!

!testRun: #TerniLapilliTest #test09XCantPlayInOccupiedPosition stamp: 'JEA 11/1/2020 18:15:51'!
ERROR!

!testRun: #TerniLapilliTest #test10XAndOAreAtEveryPositionPlayed stamp: 'JEA 11/1/2020 18:15:51'!
ERROR!

!testRun: #TerniLapilliTest #test11XCantPlayInInvalidPosition stamp: 'JEA 11/1/2020 18:15:51'!
PASSED!

!testRun: #TerniLapilliTest #test02XCanPlayItsTurn stamp: 'JEA 11/1/2020 18:15:56'!
ERROR!

!testRun: #TerniLapilliTest #test01XPlaysFirst stamp: 'JEA 11/1/2020 18:16:06'!
PASSED!

!testRun: #TerniLapilliTest #test02XCanPlayItsTurn stamp: 'JEA 11/1/2020 18:16:06'!
ERROR!

!testRun: #TerniLapilliTest #test03OPlaysAfterX stamp: 'JEA 11/1/2020 18:16:06'!
ERROR!

!testRun: #TerniLapilliTest #test04OCanPlayItsTurn stamp: 'JEA 11/1/2020 18:16:06'!
ERROR!

!testRun: #TerniLapilliTest #test05XPlaysAfterO stamp: 'JEA 11/1/2020 18:16:06'!
ERROR!

!testRun: #TerniLapilliTest #test06PositionsDontOverlap stamp: 'JEA 11/1/2020 18:16:06'!
ERROR!

!testRun: #TerniLapilliTest #test07PositionsAreOccupied stamp: 'JEA 11/1/2020 18:16:06'!
ERROR!

!testRun: #TerniLapilliTest #test08OCantPlayInOccupiedPosition stamp: 'JEA 11/1/2020 18:16:06'!
ERROR!

!testRun: #TerniLapilliTest #test09XCantPlayInOccupiedPosition stamp: 'JEA 11/1/2020 18:16:06'!
ERROR!

!testRun: #TerniLapilliTest #test10XAndOAreAtEveryPositionPlayed stamp: 'JEA 11/1/2020 18:16:06'!
ERROR!

!testRun: #TerniLapilliTest #test11XCantPlayInInvalidPosition stamp: 'JEA 11/1/2020 18:16:06'!
PASSED!

!testRun: #TerniLapilliTest #test02XCanPlayItsTurn stamp: 'JEA 11/1/2020 18:16:08'!
ERROR!
!TerniLapilli class methodsFor: 'testing' stamp: 'JEA 11/1/2020 18:16:30' prior: 50872759!
isValid: aPosition

	^aPosition <= (2@2) and: [aPosition >= (0@0)].! !

!testRun: #TerniLapilliTest #test01XPlaysFirst stamp: 'JEA 11/1/2020 18:16:31'!
PASSED!

!testRun: #TerniLapilliTest #test02XCanPlayItsTurn stamp: 'JEA 11/1/2020 18:16:31'!
PASSED!

!testRun: #TerniLapilliTest #test03OPlaysAfterX stamp: 'JEA 11/1/2020 18:16:31'!
PASSED!

!testRun: #TerniLapilliTest #test04OCanPlayItsTurn stamp: 'JEA 11/1/2020 18:16:31'!
PASSED!

!testRun: #TerniLapilliTest #test05XPlaysAfterO stamp: 'JEA 11/1/2020 18:16:31'!
PASSED!

!testRun: #TerniLapilliTest #test06PositionsDontOverlap stamp: 'JEA 11/1/2020 18:16:31'!
PASSED!

!testRun: #TerniLapilliTest #test07PositionsAreOccupied stamp: 'JEA 11/1/2020 18:16:31'!
PASSED!

!testRun: #TerniLapilliTest #test08OCantPlayInOccupiedPosition stamp: 'JEA 11/1/2020 18:16:31'!
PASSED!

!testRun: #TerniLapilliTest #test09XCantPlayInOccupiedPosition stamp: 'JEA 11/1/2020 18:16:31'!
PASSED!

!testRun: #TerniLapilliTest #test10XAndOAreAtEveryPositionPlayed stamp: 'JEA 11/1/2020 18:16:31'!
PASSED!

!testRun: #TerniLapilliTest #test11XCantPlayInInvalidPosition stamp: 'JEA 11/1/2020 18:16:31'!
PASSED!

----SNAPSHOT----(1 November 2020 18:20:22) CuisUniversity-4384.image priorSource: 17271553!
!TerniLapilliTest methodsFor: 'tests' stamp: 'JEA 11/1/2020 18:56:04'!
test12OCantPlayInInvalidPosition
	| aTerniLapilliGame  |

	aTerniLapilliGame := TerniLapilli new.
	aTerniLapilliGame putXAt: 0@1.
	
	self should: [ aTerniLapilliGame  putOAt: 3@2. ]
		raise: Error
		withExceptionDo: [ :anException | anException description = TerniLapilli invalidPositionDescription. ].! !

!testRun: #TerniLapilliTest #test01XPlaysFirst stamp: 'JEA 11/1/2020 18:56:11'!
PASSED!

!testRun: #TerniLapilliTest #test02XCanPlayItsTurn stamp: 'JEA 11/1/2020 18:56:11'!
PASSED!

!testRun: #TerniLapilliTest #test03OPlaysAfterX stamp: 'JEA 11/1/2020 18:56:11'!
PASSED!

!testRun: #TerniLapilliTest #test04OCanPlayItsTurn stamp: 'JEA 11/1/2020 18:56:11'!
PASSED!

!testRun: #TerniLapilliTest #test05XPlaysAfterO stamp: 'JEA 11/1/2020 18:56:11'!
PASSED!

!testRun: #TerniLapilliTest #test06PositionsDontOverlap stamp: 'JEA 11/1/2020 18:56:11'!
PASSED!

!testRun: #TerniLapilliTest #test07PositionsAreOccupied stamp: 'JEA 11/1/2020 18:56:11'!
PASSED!

!testRun: #TerniLapilliTest #test08OCantPlayInOccupiedPosition stamp: 'JEA 11/1/2020 18:56:11'!
PASSED!

!testRun: #TerniLapilliTest #test09XCantPlayInOccupiedPosition stamp: 'JEA 11/1/2020 18:56:11'!
PASSED!

!testRun: #TerniLapilliTest #test10XAndOAreAtEveryPositionPlayed stamp: 'JEA 11/1/2020 18:56:11'!
PASSED!

!testRun: #TerniLapilliTest #test11XCantPlayInInvalidPosition stamp: 'JEA 11/1/2020 18:56:11'!
PASSED!

!testRun: #TerniLapilliTest #test12OCantPlayInInvalidPosition stamp: 'JEA 11/1/2020 18:56:11'!
FAILURE!

!testRun: #TerniLapilliTest #test12OCantPlayInInvalidPosition stamp: 'JEA 11/1/2020 18:56:11'!
FAILURE!
!TerniLapilli methodsFor: 'playing' stamp: 'JEA 11/1/2020 18:56:19' prior: 50872523!
putOAt: aPosition

	(self class isValid: aPosition) ifFalse: [ self error: self class invalidPositionDescription. ].
	(self isOccupied: aPosition) ifTrue: [self error: self class positionOccupiedDescription. ].

	OPositions add: aPosition.
	isXPlaying := true.! !

!testRun: #TerniLapilliTest #test01XPlaysFirst stamp: 'JEA 11/1/2020 18:56:21'!
PASSED!

!testRun: #TerniLapilliTest #test02XCanPlayItsTurn stamp: 'JEA 11/1/2020 18:56:21'!
PASSED!

!testRun: #TerniLapilliTest #test03OPlaysAfterX stamp: 'JEA 11/1/2020 18:56:21'!
PASSED!

!testRun: #TerniLapilliTest #test04OCanPlayItsTurn stamp: 'JEA 11/1/2020 18:56:21'!
PASSED!

!testRun: #TerniLapilliTest #test05XPlaysAfterO stamp: 'JEA 11/1/2020 18:56:21'!
PASSED!

!testRun: #TerniLapilliTest #test06PositionsDontOverlap stamp: 'JEA 11/1/2020 18:56:21'!
PASSED!

!testRun: #TerniLapilliTest #test07PositionsAreOccupied stamp: 'JEA 11/1/2020 18:56:21'!
PASSED!

!testRun: #TerniLapilliTest #test08OCantPlayInOccupiedPosition stamp: 'JEA 11/1/2020 18:56:21'!
PASSED!

!testRun: #TerniLapilliTest #test09XCantPlayInOccupiedPosition stamp: 'JEA 11/1/2020 18:56:21'!
PASSED!

!testRun: #TerniLapilliTest #test10XAndOAreAtEveryPositionPlayed stamp: 'JEA 11/1/2020 18:56:21'!
PASSED!

!testRun: #TerniLapilliTest #test11XCantPlayInInvalidPosition stamp: 'JEA 11/1/2020 18:56:21'!
PASSED!

!testRun: #TerniLapilliTest #test12OCantPlayInInvalidPosition stamp: 'JEA 11/1/2020 18:56:21'!
PASSED!

!testRun: #TerniLapilliTest #test01XPlaysFirst stamp: 'JEA 11/1/2020 18:59:02'!
PASSED!

!testRun: #TerniLapilliTest #test02XCanPlayItsTurn stamp: 'JEA 11/1/2020 18:59:02'!
PASSED!

!testRun: #TerniLapilliTest #test03OPlaysAfterX stamp: 'JEA 11/1/2020 18:59:02'!
PASSED!

!testRun: #TerniLapilliTest #test04OCanPlayItsTurn stamp: 'JEA 11/1/2020 18:59:02'!
PASSED!

!testRun: #TerniLapilliTest #test05XPlaysAfterO stamp: 'JEA 11/1/2020 18:59:02'!
PASSED!

!testRun: #TerniLapilliTest #test06PositionsDontOverlap stamp: 'JEA 11/1/2020 18:59:02'!
PASSED!

!testRun: #TerniLapilliTest #test07PositionsAreOccupied stamp: 'JEA 11/1/2020 18:59:02'!
PASSED!

!testRun: #TerniLapilliTest #test08OCantPlayInOccupiedPosition stamp: 'JEA 11/1/2020 18:59:02'!
PASSED!

!testRun: #TerniLapilliTest #test09XCantPlayInOccupiedPosition stamp: 'JEA 11/1/2020 18:59:02'!
PASSED!

!testRun: #TerniLapilliTest #test10XAndOAreAtEveryPositionPlayed stamp: 'JEA 11/1/2020 18:59:02'!
PASSED!

!testRun: #TerniLapilliTest #test11XCantPlayInInvalidPosition stamp: 'JEA 11/1/2020 18:59:02'!
PASSED!

!testRun: #TerniLapilliTest #test12OCantPlayInInvalidPosition stamp: 'JEA 11/1/2020 18:59:02'!
PASSED!

----SNAPSHOT----(1 November 2020 18:59:05) CuisUniversity-4384.image priorSource: 17320246!
!TerniLapilli methodsFor: 'playing' stamp: 'JEA 11/1/2020 19:04:32' prior: 50872964!
putOAt: aPosition

	(self class isValid: aPosition) ifFalse: [ self error: self class invalidPositionDescription. ].
	(self isOccupied: aPosition) ifTrue: [self error: self class positionOccupiedDescription. ].

	OPositions add: aPosition.
	isXPlaying := isXPlaying not.! !
!TerniLapilli methodsFor: 'playing' stamp: 'JEA 11/1/2020 19:04:36' prior: 50872666!
putXAt: aPosition

	(self class isValid: aPosition) ifFalse: [ self error: self class invalidPositionDescription. ].
	(self isOccupied: aPosition) ifTrue: [self error: self class positionOccupiedDescription. ].
	
	XPositions add: aPosition.
	isXPlaying := isXPlaying not.! !

!testRun: #TerniLapilliTest #test01XPlaysFirst stamp: 'JEA 11/1/2020 19:04:38'!
PASSED!

!testRun: #TerniLapilliTest #test02XCanPlayItsTurn stamp: 'JEA 11/1/2020 19:04:38'!
PASSED!

!testRun: #TerniLapilliTest #test03OPlaysAfterX stamp: 'JEA 11/1/2020 19:04:38'!
PASSED!

!testRun: #TerniLapilliTest #test04OCanPlayItsTurn stamp: 'JEA 11/1/2020 19:04:38'!
PASSED!

!testRun: #TerniLapilliTest #test05XPlaysAfterO stamp: 'JEA 11/1/2020 19:04:38'!
PASSED!

!testRun: #TerniLapilliTest #test06PositionsDontOverlap stamp: 'JEA 11/1/2020 19:04:38'!
PASSED!

!testRun: #TerniLapilliTest #test07PositionsAreOccupied stamp: 'JEA 11/1/2020 19:04:38'!
PASSED!

!testRun: #TerniLapilliTest #test08OCantPlayInOccupiedPosition stamp: 'JEA 11/1/2020 19:04:38'!
PASSED!

!testRun: #TerniLapilliTest #test09XCantPlayInOccupiedPosition stamp: 'JEA 11/1/2020 19:04:38'!
PASSED!

!testRun: #TerniLapilliTest #test10XAndOAreAtEveryPositionPlayed stamp: 'JEA 11/1/2020 19:04:38'!
PASSED!

!testRun: #TerniLapilliTest #test11XCantPlayInInvalidPosition stamp: 'JEA 11/1/2020 19:04:38'!
PASSED!

!testRun: #TerniLapilliTest #test12OCantPlayInInvalidPosition stamp: 'JEA 11/1/2020 19:04:38'!
PASSED!

----SNAPSHOT----(1 November 2020 19:08:49) CuisUniversity-4384.image priorSource: 17324727!
!TerniLapilli methodsFor: 'playing' stamp: 'JEA 11/1/2020 19:10:43'!
put: aLabeledPosition

	(self class isValid: aLabeledPosition) ifFalse: [ self error: self class invalidPositionDescription. ].
	(self isOccupied: aLabeledPosition) ifTrue: [self error: self class positionOccupiedDescription. ].
	
	isXPlaying := isXPlaying not.! !
!TerniLapilli methodsFor: 'playing' stamp: 'JEA 11/1/2020 19:11:03' prior: 50873052!
putOAt: aPosition

	(self class isValid: aPosition) ifFalse: [ self error: self class invalidPositionDescription. ].
	(self isOccupied: aPosition) ifTrue: [self error: self class positionOccupiedDescription. ].
	isXPlaying := isXPlaying not.
	OPositions add: aPosition.! !
!TerniLapilli methodsFor: 'playing' stamp: 'JEA 11/1/2020 19:11:10' prior: 50873064!
putXAt: aPosition

	(self class isValid: aPosition) ifFalse: [ self error: self class invalidPositionDescription. ].
	(self isOccupied: aPosition) ifTrue: [self error: self class positionOccupiedDescription. ].
	isXPlaying := isXPlaying not.
	XPositions add: aPosition.! !
!TerniLapilli methodsFor: 'playing' stamp: 'JEA 11/1/2020 19:11:13' prior: 50873138!
putXAt: aPosition

	(self class isValid: aPosition) ifFalse: [ self error: self class invalidPositionDescription. ].
	(self isOccupied: aPosition) ifTrue: [self error: self class positionOccupiedDescription. ].
	
	isXPlaying := isXPlaying not.
	XPositions add: aPosition.! !
!TerniLapilli methodsFor: 'playing' stamp: 'JEA 11/1/2020 19:11:16' prior: 50873126!
putOAt: aPosition

	(self class isValid: aPosition) ifFalse: [ self error: self class invalidPositionDescription. ].
	(self isOccupied: aPosition) ifTrue: [self error: self class positionOccupiedDescription. ].
	
	isXPlaying := isXPlaying not.
	OPositions add: aPosition.! !

!testRun: #TerniLapilliTest #test01XPlaysFirst stamp: 'JEA 11/1/2020 19:11:17'!
PASSED!

!testRun: #TerniLapilliTest #test02XCanPlayItsTurn stamp: 'JEA 11/1/2020 19:11:17'!
PASSED!

!testRun: #TerniLapilliTest #test03OPlaysAfterX stamp: 'JEA 11/1/2020 19:11:17'!
PASSED!

!testRun: #TerniLapilliTest #test04OCanPlayItsTurn stamp: 'JEA 11/1/2020 19:11:17'!
PASSED!

!testRun: #TerniLapilliTest #test05XPlaysAfterO stamp: 'JEA 11/1/2020 19:11:17'!
PASSED!

!testRun: #TerniLapilliTest #test06PositionsDontOverlap stamp: 'JEA 11/1/2020 19:11:17'!
PASSED!

!testRun: #TerniLapilliTest #test07PositionsAreOccupied stamp: 'JEA 11/1/2020 19:11:17'!
PASSED!

!testRun: #TerniLapilliTest #test08OCantPlayInOccupiedPosition stamp: 'JEA 11/1/2020 19:11:17'!
PASSED!

!testRun: #TerniLapilliTest #test09XCantPlayInOccupiedPosition stamp: 'JEA 11/1/2020 19:11:17'!
PASSED!

!testRun: #TerniLapilliTest #test10XAndOAreAtEveryPositionPlayed stamp: 'JEA 11/1/2020 19:11:17'!
PASSED!

!testRun: #TerniLapilliTest #test11XCantPlayInInvalidPosition stamp: 'JEA 11/1/2020 19:11:17'!
PASSED!

!testRun: #TerniLapilliTest #test12OCantPlayInInvalidPosition stamp: 'JEA 11/1/2020 19:11:17'!
PASSED!

----SNAPSHOT----(1 November 2020 19:11:20) CuisUniversity-4384.image priorSource: 17326762!
!TerniLapilli methodsFor: 'playing' stamp: 'JEA 11/1/2020 19:16:19' prior: 50873115!
put: aLabeledPosition
	| aPosition |
	aPosition := aLabeledPosition at: 1.

	(self class isValid: aPosition) ifFalse: [ self error: self class invalidPositionDescription. ].
	(self isOccupied: aPosition) ifTrue: [self error: self class positionOccupiedDescription. ].
	
	isXPlaying := isXPlaying not.! !

!testRun: #TerniLapilliTest #test01XPlaysFirst stamp: 'JEA 11/1/2020 19:16:41'!
PASSED!

!testRun: #TerniLapilliTest #test02XCanPlayItsTurn stamp: 'JEA 11/1/2020 19:16:41'!
PASSED!

!testRun: #TerniLapilliTest #test03OPlaysAfterX stamp: 'JEA 11/1/2020 19:16:41'!
PASSED!

!testRun: #TerniLapilliTest #test04OCanPlayItsTurn stamp: 'JEA 11/1/2020 19:16:41'!
PASSED!

!testRun: #TerniLapilliTest #test05XPlaysAfterO stamp: 'JEA 11/1/2020 19:16:41'!
PASSED!

!testRun: #TerniLapilliTest #test06PositionsDontOverlap stamp: 'JEA 11/1/2020 19:16:41'!
PASSED!

!testRun: #TerniLapilliTest #test07PositionsAreOccupied stamp: 'JEA 11/1/2020 19:16:41'!
PASSED!

!testRun: #TerniLapilliTest #test08OCantPlayInOccupiedPosition stamp: 'JEA 11/1/2020 19:16:41'!
PASSED!

!testRun: #TerniLapilliTest #test09XCantPlayInOccupiedPosition stamp: 'JEA 11/1/2020 19:16:41'!
PASSED!

!testRun: #TerniLapilliTest #test10XAndOAreAtEveryPositionPlayed stamp: 'JEA 11/1/2020 19:16:41'!
PASSED!

!testRun: #TerniLapilliTest #test11XCantPlayInInvalidPosition stamp: 'JEA 11/1/2020 19:16:41'!
PASSED!

!testRun: #TerniLapilliTest #test12OCantPlayInInvalidPosition stamp: 'JEA 11/1/2020 19:16:41'!
PASSED!
!TerniLapilli methodsFor: 'playing - private' stamp: 'JEA 11/1/2020 19:20:39' prior: 50873213!
put: aLabeledPosition
	| aPosition ownClass |
	aPosition := aLabeledPosition at: 1.
	ownClass := self class.

	(self class isValid: aPosition) ifFalse: [ self error: ownClass invalidPositionDescription. ].
	(self isOccupied: aPosition) ifTrue: [self error: ownClass positionOccupiedDescription. ].
	
	isXPlaying := isXPlaying not.! !

Object subclass: #TerniLapilli
	instanceVariableNames: 'isXPlaying XPositions OPositions positions'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TerniLapilli'!

!classDefinition: #TerniLapilli category: 'TerniLapilli' stamp: 'JEA 11/1/2020 19:21:32'!
Object subclass: #TerniLapilli
	instanceVariableNames: 'isXPlaying XPositions OPositions positions'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TerniLapilli'!

!testRun: #TerniLapilliTest #test01XPlaysFirst stamp: 'JEA 11/1/2020 19:21:40'!
PASSED!

!testRun: #TerniLapilliTest #test02XCanPlayItsTurn stamp: 'JEA 11/1/2020 19:21:40'!
PASSED!

!testRun: #TerniLapilliTest #test03OPlaysAfterX stamp: 'JEA 11/1/2020 19:21:40'!
PASSED!

!testRun: #TerniLapilliTest #test04OCanPlayItsTurn stamp: 'JEA 11/1/2020 19:21:40'!
PASSED!

!testRun: #TerniLapilliTest #test05XPlaysAfterO stamp: 'JEA 11/1/2020 19:21:40'!
PASSED!

!testRun: #TerniLapilliTest #test06PositionsDontOverlap stamp: 'JEA 11/1/2020 19:21:40'!
PASSED!

!testRun: #TerniLapilliTest #test07PositionsAreOccupied stamp: 'JEA 11/1/2020 19:21:40'!
PASSED!

!testRun: #TerniLapilliTest #test08OCantPlayInOccupiedPosition stamp: 'JEA 11/1/2020 19:21:40'!
PASSED!

!testRun: #TerniLapilliTest #test09XCantPlayInOccupiedPosition stamp: 'JEA 11/1/2020 19:21:40'!
PASSED!

!testRun: #TerniLapilliTest #test10XAndOAreAtEveryPositionPlayed stamp: 'JEA 11/1/2020 19:21:40'!
PASSED!

!testRun: #TerniLapilliTest #test11XCantPlayInInvalidPosition stamp: 'JEA 11/1/2020 19:21:40'!
PASSED!

!testRun: #TerniLapilliTest #test12OCantPlayInInvalidPosition stamp: 'JEA 11/1/2020 19:21:40'!
PASSED!
!TerniLapilli methodsFor: 'playing - private' stamp: 'JEA 11/1/2020 19:22:11' prior: 50873263!
put: aLabeledPosition
	| aPosition ownClass |
	aPosition := aLabeledPosition at: 1.
	ownClass := self class.

	(self class isValid: aPosition) ifFalse: [ self error: ownClass invalidPositionDescription. ].
	(self isOccupied: aPosition) ifTrue: [self error: ownClass positionOccupiedDescription. ].
	
	positions add: aLabeledPosition.
	isXPlaying := isXPlaying not.! !

!classDefinition: #TerniLapilli category: 'TerniLapilli' stamp: 'JEA 11/1/2020 19:22:21'!
Object subclass: #TerniLapilli
	instanceVariableNames: 'isXPlaying XPositions OPositions labeledPositions'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TerniLapilli'!
!TerniLapilli methodsFor: 'as yet unclassified' stamp: 'JEA 11/1/2020 19:22:21' prior: 50873327!
put: aLabeledPosition
	| aPosition ownClass |
	aPosition := aLabeledPosition at: 1.
	ownClass := self class.

	(self class isValid: aPosition) ifFalse: [ self error: ownClass invalidPositionDescription. ].
	(self isOccupied: aPosition) ifTrue: [self error: ownClass positionOccupiedDescription. ].
	
	labeledPositions add: aLabeledPosition.
	isXPlaying := isXPlaying not.! !
!TerniLapilli methodsFor: 'playing' stamp: 'JEA 11/1/2020 19:22:53' prior: 50873162!
putOAt: aPosition

	self put: #(aPosition, $O).! !
!TerniLapilli methodsFor: 'playing' stamp: 'JEA 11/1/2020 19:22:58' prior: 50873150!
putXAt: aPosition

	self put: #(aPosition, $X).! !
!TerniLapilli methodsFor: 'testing' stamp: 'JEA 11/1/2020 19:23:39' prior: 50872466!
isOAt: aPosition

	^labeledPositions includes: #(aPosition, $X).! !
!TerniLapilli methodsFor: 'testing' stamp: 'JEA 11/1/2020 19:23:47' prior: 50873375!
isOAt: aPosition

	^labeledPositions includes: #(aPosition, $O).! !
!TerniLapilli methodsFor: 'testing' stamp: 'JEA 11/1/2020 19:23:55' prior: 50872461!
isXAt: aPosition

	^labeledPositions includes: #(aPosition, $X).! !

!testRun: #TerniLapilliTest #test01XPlaysFirst stamp: 'JEA 11/1/2020 19:24:07'!
PASSED!

!testRun: #TerniLapilliTest #test02XCanPlayItsTurn stamp: 'JEA 11/1/2020 19:24:07'!
ERROR!

!testRun: #TerniLapilliTest #test03OPlaysAfterX stamp: 'JEA 11/1/2020 19:24:07'!
ERROR!

!testRun: #TerniLapilliTest #test04OCanPlayItsTurn stamp: 'JEA 11/1/2020 19:24:07'!
ERROR!

!testRun: #TerniLapilliTest #test05XPlaysAfterO stamp: 'JEA 11/1/2020 19:24:07'!
ERROR!

!testRun: #TerniLapilliTest #test06PositionsDontOverlap stamp: 'JEA 11/1/2020 19:24:07'!
ERROR!

!testRun: #TerniLapilliTest #test07PositionsAreOccupied stamp: 'JEA 11/1/2020 19:24:07'!
ERROR!

!testRun: #TerniLapilliTest #test08OCantPlayInOccupiedPosition stamp: 'JEA 11/1/2020 19:24:07'!
ERROR!

!testRun: #TerniLapilliTest #test09XCantPlayInOccupiedPosition stamp: 'JEA 11/1/2020 19:24:07'!
ERROR!

!testRun: #TerniLapilliTest #test10XAndOAreAtEveryPositionPlayed stamp: 'JEA 11/1/2020 19:24:07'!
ERROR!

!testRun: #TerniLapilliTest #test11XCantPlayInInvalidPosition stamp: 'JEA 11/1/2020 19:24:07'!
PASSED!

!testRun: #TerniLapilliTest #test12OCantPlayInInvalidPosition stamp: 'JEA 11/1/2020 19:24:07'!
ERROR!
!TerniLapilli methodsFor: 'testing' stamp: 'JEA 11/1/2020 19:24:26' prior: 50873380!
isOAt: aPosition

	^labeledPositions includes: #(aPosition $O).! !
!TerniLapilli methodsFor: 'testing' stamp: 'JEA 11/1/2020 19:24:30' prior: 50873385!
isXAt: aPosition

	^labeledPositions includes: #(aPosition $X).! !
!TerniLapilli methodsFor: 'playing' stamp: 'JEA 11/1/2020 19:24:35' prior: 50873370!
putXAt: aPosition

	self put: #(aPosition $X).! !
!TerniLapilli methodsFor: 'playing' stamp: 'JEA 11/1/2020 19:24:40' prior: 50873437!
putXAt: aPosition

	self put: #(aPosition $X).! !
!TerniLapilli methodsFor: 'playing' stamp: 'JEA 11/1/2020 19:24:45' prior: 50873365!
putOAt: aPosition

	self put: #(aPosition $O).! !

!testRun: #TerniLapilliTest #test01XPlaysFirst stamp: 'JEA 11/1/2020 19:24:48'!
PASSED!

!testRun: #TerniLapilliTest #test02XCanPlayItsTurn stamp: 'JEA 11/1/2020 19:24:48'!
ERROR!

!testRun: #TerniLapilliTest #test03OPlaysAfterX stamp: 'JEA 11/1/2020 19:24:48'!
ERROR!

!testRun: #TerniLapilliTest #test04OCanPlayItsTurn stamp: 'JEA 11/1/2020 19:24:48'!
ERROR!

!testRun: #TerniLapilliTest #test05XPlaysAfterO stamp: 'JEA 11/1/2020 19:24:48'!
ERROR!

!testRun: #TerniLapilliTest #test06PositionsDontOverlap stamp: 'JEA 11/1/2020 19:24:48'!
ERROR!

!testRun: #TerniLapilliTest #test07PositionsAreOccupied stamp: 'JEA 11/1/2020 19:24:48'!
ERROR!

!testRun: #TerniLapilliTest #test08OCantPlayInOccupiedPosition stamp: 'JEA 11/1/2020 19:24:48'!
ERROR!

!testRun: #TerniLapilliTest #test09XCantPlayInOccupiedPosition stamp: 'JEA 11/1/2020 19:24:48'!
ERROR!

!testRun: #TerniLapilliTest #test10XAndOAreAtEveryPositionPlayed stamp: 'JEA 11/1/2020 19:24:48'!
ERROR!

!testRun: #TerniLapilliTest #test11XCantPlayInInvalidPosition stamp: 'JEA 11/1/2020 19:24:48'!
PASSED!

!testRun: #TerniLapilliTest #test12OCantPlayInInvalidPosition stamp: 'JEA 11/1/2020 19:24:48'!
ERROR!

!testRun: #TerniLapilliTest #test02XCanPlayItsTurn stamp: 'JEA 11/1/2020 19:24:49'!
ERROR!

!testRun: #TerniLapilliTest #test04OCanPlayItsTurn stamp: 'JEA 11/1/2020 19:24:57'!
ERROR!

!testRun: #TerniLapilliTest #test01XPlaysFirst stamp: 'JEA 11/1/2020 19:26:47'!
PASSED!

!testRun: #TerniLapilliTest #test02XCanPlayItsTurn stamp: 'JEA 11/1/2020 19:26:47'!
ERROR!

!testRun: #TerniLapilliTest #test03OPlaysAfterX stamp: 'JEA 11/1/2020 19:26:47'!
ERROR!

!testRun: #TerniLapilliTest #test04OCanPlayItsTurn stamp: 'JEA 11/1/2020 19:26:47'!
ERROR!

!testRun: #TerniLapilliTest #test05XPlaysAfterO stamp: 'JEA 11/1/2020 19:26:47'!
ERROR!

!testRun: #TerniLapilliTest #test06PositionsDontOverlap stamp: 'JEA 11/1/2020 19:26:47'!
ERROR!

!testRun: #TerniLapilliTest #test07PositionsAreOccupied stamp: 'JEA 11/1/2020 19:26:47'!
ERROR!

!testRun: #TerniLapilliTest #test08OCantPlayInOccupiedPosition stamp: 'JEA 11/1/2020 19:26:47'!
ERROR!

!testRun: #TerniLapilliTest #test09XCantPlayInOccupiedPosition stamp: 'JEA 11/1/2020 19:26:47'!
ERROR!

!testRun: #TerniLapilliTest #test10XAndOAreAtEveryPositionPlayed stamp: 'JEA 11/1/2020 19:26:47'!
ERROR!

!testRun: #TerniLapilliTest #test11XCantPlayInInvalidPosition stamp: 'JEA 11/1/2020 19:26:47'!
PASSED!

!testRun: #TerniLapilliTest #test12OCantPlayInInvalidPosition stamp: 'JEA 11/1/2020 19:26:47'!
ERROR!

!testRun: #TerniLapilliTest #test02XCanPlayItsTurn stamp: 'JEA 11/1/2020 19:26:50'!
ERROR!
!TerniLapilli methodsFor: 'playing - private' stamp: 'JEA 11/1/2020 19:28:06' prior: 50873350!
put: aLabeledPosition
	| aPosition ownClass |
	aPosition := aLabeledPosition at: 1.
	ownClass := self class.

	(self class isValid: aPosition) ifFalse: [ self error: ownClass invalidPositionDescription. ].
	(self isOccupied: aPosition) ifTrue: [self error: ownClass positionOccupiedDescription. ].
	
	labeledPositions add: aLabeledPosition.
	isXPlaying := isXPlaying not.! !

!testRun: #TerniLapilliTest #test01XPlaysFirst stamp: 'JEA 11/1/2020 19:28:09'!
PASSED!

!testRun: #TerniLapilliTest #test02XCanPlayItsTurn stamp: 'JEA 11/1/2020 19:28:09'!
ERROR!

!testRun: #TerniLapilliTest #test03OPlaysAfterX stamp: 'JEA 11/1/2020 19:28:09'!
ERROR!

!testRun: #TerniLapilliTest #test04OCanPlayItsTurn stamp: 'JEA 11/1/2020 19:28:09'!
ERROR!

!testRun: #TerniLapilliTest #test05XPlaysAfterO stamp: 'JEA 11/1/2020 19:28:09'!
ERROR!

!testRun: #TerniLapilliTest #test06PositionsDontOverlap stamp: 'JEA 11/1/2020 19:28:09'!
ERROR!

!testRun: #TerniLapilliTest #test07PositionsAreOccupied stamp: 'JEA 11/1/2020 19:28:09'!
ERROR!

!testRun: #TerniLapilliTest #test08OCantPlayInOccupiedPosition stamp: 'JEA 11/1/2020 19:28:09'!
ERROR!

!testRun: #TerniLapilliTest #test09XCantPlayInOccupiedPosition stamp: 'JEA 11/1/2020 19:28:09'!
ERROR!

!testRun: #TerniLapilliTest #test10XAndOAreAtEveryPositionPlayed stamp: 'JEA 11/1/2020 19:28:09'!
ERROR!

!testRun: #TerniLapilliTest #test11XCantPlayInInvalidPosition stamp: 'JEA 11/1/2020 19:28:09'!
PASSED!

!testRun: #TerniLapilliTest #test12OCantPlayInInvalidPosition stamp: 'JEA 11/1/2020 19:28:09'!
ERROR!

!testRun: #TerniLapilliTest #test02XCanPlayItsTurn stamp: 'JEA 11/1/2020 19:28:10'!
ERROR!

aPosition!

aLabeledPosition!
!TerniLapilli methodsFor: 'playing' stamp: 'JEA 11/1/2020 19:29:37' prior: 50873447!
putOAt: aPosition

	self put: (Array with: aPosition with: $O).! !
!TerniLapilli methodsFor: 'playing' stamp: 'JEA 11/1/2020 19:29:46' prior: 50873442!
putXAt: aPosition

	self put: (Array with: aPosition with: $X).! !
!TerniLapilli methodsFor: 'testing' stamp: 'JEA 11/1/2020 19:30:09' prior: 50873432!
isXAt: aPosition

	^labeledPositions includes: (Array with: aPosition with: $X).! !
!TerniLapilli methodsFor: 'testing' stamp: 'JEA 11/1/2020 19:30:14' prior: 50873427!
isOAt: aPosition

	^labeledPositions includes: (Array with: aPosition with: $O).! !

!testRun: #TerniLapilliTest #test01XPlaysFirst stamp: 'JEA 11/1/2020 19:30:15'!
PASSED!

!testRun: #TerniLapilliTest #test02XCanPlayItsTurn stamp: 'JEA 11/1/2020 19:30:15'!
ERROR!

!testRun: #TerniLapilliTest #test03OPlaysAfterX stamp: 'JEA 11/1/2020 19:30:15'!
ERROR!

!testRun: #TerniLapilliTest #test04OCanPlayItsTurn stamp: 'JEA 11/1/2020 19:30:15'!
ERROR!

!testRun: #TerniLapilliTest #test05XPlaysAfterO stamp: 'JEA 11/1/2020 19:30:15'!
ERROR!

!testRun: #TerniLapilliTest #test06PositionsDontOverlap stamp: 'JEA 11/1/2020 19:30:15'!
ERROR!

!testRun: #TerniLapilliTest #test07PositionsAreOccupied stamp: 'JEA 11/1/2020 19:30:15'!
ERROR!

!testRun: #TerniLapilliTest #test08OCantPlayInOccupiedPosition stamp: 'JEA 11/1/2020 19:30:15'!
ERROR!

!testRun: #TerniLapilliTest #test09XCantPlayInOccupiedPosition stamp: 'JEA 11/1/2020 19:30:15'!
ERROR!

!testRun: #TerniLapilliTest #test10XAndOAreAtEveryPositionPlayed stamp: 'JEA 11/1/2020 19:30:15'!
ERROR!

!testRun: #TerniLapilliTest #test11XCantPlayInInvalidPosition stamp: 'JEA 11/1/2020 19:30:15'!
PASSED!

!testRun: #TerniLapilliTest #test12OCantPlayInInvalidPosition stamp: 'JEA 11/1/2020 19:30:15'!
ERROR!

!testRun: #TerniLapilliTest #test02XCanPlayItsTurn stamp: 'JEA 11/1/2020 19:30:18'!
ERROR!
!TerniLapilli methodsFor: 'initialization' stamp: 'JEA 11/1/2020 19:30:54' prior: 50871461 overrides: 16896425!
initialize

	labeledPositions := OrderedCollection new.
	XPositions := OrderedCollection new.
	OPositions := OrderedCollection new.
	isXPlaying := true.! !

!testRun: #TerniLapilliTest #test01XPlaysFirst stamp: 'JEA 11/1/2020 19:30:55'!
PASSED!

!testRun: #TerniLapilliTest #test02XCanPlayItsTurn stamp: 'JEA 11/1/2020 19:30:55'!
PASSED!

!testRun: #TerniLapilliTest #test03OPlaysAfterX stamp: 'JEA 11/1/2020 19:30:55'!
PASSED!

!testRun: #TerniLapilliTest #test04OCanPlayItsTurn stamp: 'JEA 11/1/2020 19:30:55'!
PASSED!

!testRun: #TerniLapilliTest #test05XPlaysAfterO stamp: 'JEA 11/1/2020 19:30:55'!
PASSED!

!testRun: #TerniLapilliTest #test06PositionsDontOverlap stamp: 'JEA 11/1/2020 19:30:55'!
PASSED!

!testRun: #TerniLapilliTest #test07PositionsAreOccupied stamp: 'JEA 11/1/2020 19:30:55'!
PASSED!

!testRun: #TerniLapilliTest #test08OCantPlayInOccupiedPosition stamp: 'JEA 11/1/2020 19:30:55'!
PASSED!

!testRun: #TerniLapilliTest #test09XCantPlayInOccupiedPosition stamp: 'JEA 11/1/2020 19:30:55'!
PASSED!

!testRun: #TerniLapilliTest #test10XAndOAreAtEveryPositionPlayed stamp: 'JEA 11/1/2020 19:30:55'!
PASSED!

!testRun: #TerniLapilliTest #test11XCantPlayInInvalidPosition stamp: 'JEA 11/1/2020 19:30:55'!
PASSED!

!testRun: #TerniLapilliTest #test12OCantPlayInInvalidPosition stamp: 'JEA 11/1/2020 19:30:55'!
PASSED!
!TerniLapilli methodsFor: 'initialization' stamp: 'JEA 11/1/2020 19:31:07' prior: 50873651 overrides: 16896425!
initialize

	labeledPositions := OrderedCollection new.
	isXPlaying := true.! !

!testRun: #TerniLapilliTest #test01XPlaysFirst stamp: 'JEA 11/1/2020 19:31:08'!
PASSED!

!testRun: #TerniLapilliTest #test02XCanPlayItsTurn stamp: 'JEA 11/1/2020 19:31:08'!
PASSED!

!testRun: #TerniLapilliTest #test03OPlaysAfterX stamp: 'JEA 11/1/2020 19:31:08'!
PASSED!

!testRun: #TerniLapilliTest #test04OCanPlayItsTurn stamp: 'JEA 11/1/2020 19:31:08'!
PASSED!

!testRun: #TerniLapilliTest #test05XPlaysAfterO stamp: 'JEA 11/1/2020 19:31:08'!
PASSED!

!testRun: #TerniLapilliTest #test06PositionsDontOverlap stamp: 'JEA 11/1/2020 19:31:08'!
PASSED!

!testRun: #TerniLapilliTest #test07PositionsAreOccupied stamp: 'JEA 11/1/2020 19:31:08'!
PASSED!

!testRun: #TerniLapilliTest #test08OCantPlayInOccupiedPosition stamp: 'JEA 11/1/2020 19:31:08'!
PASSED!

!testRun: #TerniLapilliTest #test09XCantPlayInOccupiedPosition stamp: 'JEA 11/1/2020 19:31:08'!
PASSED!

!testRun: #TerniLapilliTest #test10XAndOAreAtEveryPositionPlayed stamp: 'JEA 11/1/2020 19:31:08'!
PASSED!

!testRun: #TerniLapilliTest #test11XCantPlayInInvalidPosition stamp: 'JEA 11/1/2020 19:31:08'!
PASSED!

!testRun: #TerniLapilliTest #test12OCantPlayInInvalidPosition stamp: 'JEA 11/1/2020 19:31:08'!
PASSED!

Object subclass: #TerniLapilli
	instanceVariableNames: 'isXPlaying labeledPositions'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TerniLapilli'!

!classDefinition: #TerniLapilli category: 'TerniLapilli' stamp: 'JEA 11/1/2020 19:31:25'!
Object subclass: #TerniLapilli
	instanceVariableNames: 'isXPlaying labeledPositions'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TerniLapilli'!

!testRun: #TerniLapilliTest #test01XPlaysFirst stamp: 'JEA 11/1/2020 19:31:25'!
PASSED!

!testRun: #TerniLapilliTest #test02XCanPlayItsTurn stamp: 'JEA 11/1/2020 19:31:25'!
PASSED!

!testRun: #TerniLapilliTest #test03OPlaysAfterX stamp: 'JEA 11/1/2020 19:31:25'!
PASSED!

!testRun: #TerniLapilliTest #test04OCanPlayItsTurn stamp: 'JEA 11/1/2020 19:31:25'!
PASSED!

!testRun: #TerniLapilliTest #test05XPlaysAfterO stamp: 'JEA 11/1/2020 19:31:25'!
PASSED!

!testRun: #TerniLapilliTest #test06PositionsDontOverlap stamp: 'JEA 11/1/2020 19:31:25'!
PASSED!

!testRun: #TerniLapilliTest #test07PositionsAreOccupied stamp: 'JEA 11/1/2020 19:31:25'!
PASSED!

!testRun: #TerniLapilliTest #test08OCantPlayInOccupiedPosition stamp: 'JEA 11/1/2020 19:31:25'!
PASSED!

!testRun: #TerniLapilliTest #test09XCantPlayInOccupiedPosition stamp: 'JEA 11/1/2020 19:31:25'!
PASSED!

!testRun: #TerniLapilliTest #test10XAndOAreAtEveryPositionPlayed stamp: 'JEA 11/1/2020 19:31:25'!
PASSED!

!testRun: #TerniLapilliTest #test11XCantPlayInInvalidPosition stamp: 'JEA 11/1/2020 19:31:25'!
PASSED!

!testRun: #TerniLapilliTest #test12OCantPlayInInvalidPosition stamp: 'JEA 11/1/2020 19:31:25'!
PASSED!
!TerniLapilli class methodsFor: 'auxiliary - private' stamp: 'JEA 11/1/2020 19:33:26'!
labeledPositionWithOAt: aPosition

	^Array with: aPosition with: $O.! !
!TerniLapilli class methodsFor: 'auxiliary - private' stamp: 'JEA 11/1/2020 19:33:36'!
labeledPositionWithXAt: aPosition

	^Array with: aPosition with: $X.! !
!TerniLapilli methodsFor: 'playing' stamp: 'JEA 11/1/2020 19:34:33' prior: 50873589!
putOAt: aPosition

	self put: (self class labeledPositionWithOAt: aPosition).! !
!TerniLapilli methodsFor: 'playing' stamp: 'JEA 11/1/2020 19:34:43' prior: 50873594!
putXAt: aPosition

	self put: (self class labeledPositionWithOAt: aPosition).! !

!methodRemoval: TerniLapilli class #labeledPositionWithOAt: stamp: 'JEA 11/1/2020 19:35:01'!
labeledPositionWithOAt: aPosition

	^Array with: aPosition with: $O.!

!methodRemoval: TerniLapilli class #labeledPositionWithXAt: stamp: 'JEA 11/1/2020 19:35:03'!
labeledPositionWithXAt: aPosition

	^Array with: aPosition with: $X.!
!TerniLapilli methodsFor: 'playing' stamp: 'JEA 11/1/2020 19:35:38' prior: 50873805!
putXAt: aPosition

	self put: (Array with: aPosition with: $X).! !
!TerniLapilli methodsFor: 'playing' stamp: 'JEA 11/1/2020 19:35:43' prior: 50873799!
putOAt: aPosition

	self put: (Array with: aPosition with: $X).! !

Object subclass: #LabeledPosition
	instanceVariableNames: 'label position'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TerniLapilli'!

!classDefinition: #LabeledPosition category: 'TerniLapilli' stamp: 'JEA 11/1/2020 19:39:36'!
Object subclass: #LabeledPosition
	instanceVariableNames: 'label position'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TerniLapilli'!
!LabeledPosition methodsFor: 'inquiries' stamp: 'JEA 11/1/2020 19:41:08'!
label

	^label.! !
!LabeledPosition methodsFor: 'inquiries' stamp: 'JEA 11/1/2020 19:41:15'!
position

	^position.! !
!LabeledPosition class methodsFor: 'instance creation' stamp: 'JEA 11/1/2020 19:42:15' overrides: 16783533!
new

	self error: self cannotInstanceDescription.! !
!LabeledPosition class methodsFor: 'error descriptions' stamp: 'JEA 11/1/2020 19:43:05'!
cannotInstanceDescription

	^'Cannot instance LabeledPosition with new. Use its defined instantiation messages.'! !
!LabeledPosition class methodsFor: 'instance creation' stamp: 'JEA 11/1/2020 19:43:17'!
labeledOAt: aPosition! !

LabeledPosition subclass: #OLabeledPosition
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TerniLapilli'!

!classDefinition: #OLabeledPosition category: 'TerniLapilli' stamp: 'JEA 11/1/2020 19:43:57'!
LabeledPosition subclass: #OLabeledPosition
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TerniLapilli'!

LabeledPosition subclass: #XLabeledPosition
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TerniLapilli'!

!classDefinition: #XLabeledPosition category: 'TerniLapilli' stamp: 'JEA 11/1/2020 19:43:59'!
LabeledPosition subclass: #XLabeledPosition
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TerniLapilli'!
!LabeledPosition class methodsFor: 'instance creation' stamp: 'JEA 11/1/2020 19:44:35' prior: 50873863!
labeledOAt: aPosition

	^OLabeledPosition newAt: aPosition.! !
!LabeledPosition class methodsFor: 'instance creation' stamp: 'JEA 11/1/2020 19:44:44'!
labeledXAt: aPosition

	^XLabeledPosition newAt: aPosition.! !
!OLabeledPosition methodsFor: 'initialization' stamp: 'JEA 11/1/2020 19:45:19'!
newAt: aPosition! !
!LabeledPosition methodsFor: 'initialization' stamp: 'JEA 11/1/2020 19:45:25'!
newAt: aPosition! !

!methodRemoval: OLabeledPosition #newAt: stamp: 'JEA 11/1/2020 19:45:25'!
newAt: aPosition!
!LabeledPosition methodsFor: 'initialization' stamp: 'JEA 11/1/2020 19:45:37' prior: 50873906!
newAt: aPosition

	self subclassResponsibility.! !
!OLabeledPosition methodsFor: 'initialization' stamp: 'JEA 11/1/2020 19:46:56' overrides: 50873913!
newAt: aPosition

	self subclassResponsibility.! !
!XLabeledPosition methodsFor: 'initialization' stamp: 'JEA 11/1/2020 19:46:56' overrides: 50873913!
newAt: aPosition

	self subclassResponsibility.! !

!methodRemoval: LabeledPosition #newAt: stamp: 'JEA 11/1/2020 19:46:56'!
newAt: aPosition

	self subclassResponsibility.!
!LabeledPosition methodsFor: 'initialization' stamp: 'JEA 11/1/2020 19:47:06'!
newAt: aPosition

	self subclassResponsibility.! !

!methodRemoval: OLabeledPosition #newAt: stamp: 'JEA 11/1/2020 19:47:06'!
newAt: aPosition

	self subclassResponsibility.!
!OLabeledPosition methodsFor: 'initialization' stamp: 'JEA 11/1/2020 19:47:08' overrides: 50873931!
newAt: aPosition

	self subclassResponsibility.! !

!methodRemoval: OLabeledPosition #newAt: stamp: 'JEA 11/1/2020 19:47:38'!
newAt: aPosition

	self subclassResponsibility.!

!methodRemoval: XLabeledPosition #newAt: stamp: 'JEA 11/1/2020 19:47:42'!
newAt: aPosition

	self subclassResponsibility.!

!methodRemoval: LabeledPosition #newAt: stamp: 'JEA 11/1/2020 19:47:53'!
newAt: aPosition

	self subclassResponsibility.!
!LabeledPosition class methodsFor: 'instance creation' stamp: 'JEA 11/1/2020 19:48:20'!
newAt: aPosition

	self subclassResponsibility .! !
!LabeledPosition class methodsFor: 'instance creation' stamp: 'JEA 11/1/2020 19:48:22' prior: 50873956!
newAt: aPosition

	self subclassResponsibility.! !
!OLabeledPosition class methodsFor: 'instance creation' stamp: 'JEA 11/1/2020 19:48:46' overrides: 50873961!
newAt: aPosition

	self subclassResponsibility.! !
!XLabeledPosition class methodsFor: 'instance creation' stamp: 'JEA 11/1/2020 19:48:46' overrides: 50873961!
newAt: aPosition

	self subclassResponsibility.! !

!methodRemoval: LabeledPosition class #newAt: stamp: 'JEA 11/1/2020 19:48:46'!
newAt: aPosition

	self subclassResponsibility.!
!LabeledPosition class methodsFor: 'instance creation' stamp: 'JEA 11/1/2020 19:48:51'!
newAt: aPosition

	self subclassResponsibility.! !
!LabeledPosition methodsFor: 'initialization' stamp: 'JEA 11/1/2020 19:49:44' overrides: 16880774!
at: aPosition

	self subclassResponsibility.! !
!OLabeledPosition methodsFor: 'initialization' stamp: 'JEA 11/1/2020 19:49:47' overrides: 50873985!
at: aPosition

	self subclassResponsibility.! !
!XLabeledPosition methodsFor: 'initialization' stamp: 'JEA 11/1/2020 19:49:47' overrides: 50873985!
at: aPosition

	self subclassResponsibility.! !

!methodRemoval: LabeledPosition #at: stamp: 'JEA 11/1/2020 19:49:47'!
at: aPosition

	self subclassResponsibility.!
!LabeledPosition methodsFor: 'initialization' stamp: 'JEA 11/1/2020 19:49:49' overrides: 16880774!
at: aPosition

	self subclassResponsibility.! !
!OLabeledPosition class methodsFor: 'instance creation' stamp: 'JEA 11/1/2020 19:51:14' prior: 50873966 overrides: 50873980!
newAt: aPosition

	self basicNew at: aPosition.! !
!XLabeledPosition class methodsFor: 'instance creation' stamp: 'JEA 11/1/2020 19:51:18' prior: 50873971 overrides: 50873980!
newAt: aPosition

	self basicNew at: aPosition.! !
!XLabeledPosition methodsFor: 'initialization' stamp: 'JEA 11/1/2020 19:51:44' prior: 50873995 overrides: 50874004!
at: aPosition

	label := $X.
	position := aPosition.! !
!XLabeledPosition methodsFor: 'initialization' stamp: 'JEA 11/1/2020 19:52:01' prior: 50874022 overrides: 50874004!
at: aPosition

	position := aPosition.! !
!OLabeledPosition methodsFor: 'initialization' stamp: 'JEA 11/1/2020 19:52:08' prior: 50873990 overrides: 50874004!
at: aPosition

	position := aPosition.! !

Object subclass: #LabeledPosition
	instanceVariableNames: 'position'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TerniLapilli'!

!classDefinition: #LabeledPosition category: 'TerniLapilli' stamp: 'JEA 11/1/2020 19:52:22'!
Object subclass: #LabeledPosition
	instanceVariableNames: 'position'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TerniLapilli'!

!methodRemoval: LabeledPosition #label stamp: 'JEA 11/1/2020 19:52:25'!
label

	^label.!

Object subclass: #LabeledPosition
	instanceVariableNames: 'label position'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TerniLapilli'!

!classDefinition: #LabeledPosition category: 'TerniLapilli' stamp: 'JEA 11/1/2020 19:56:13'!
Object subclass: #LabeledPosition
	instanceVariableNames: 'label position'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TerniLapilli'!
!LabeledPosition methodsFor: 'inquiries' stamp: 'JEA 11/1/2020 19:56:22'!
label

	^label.! !
!OLabeledPosition methodsFor: 'initialization' stamp: 'JEA 11/1/2020 19:56:35' prior: 50874033 overrides: 50874004!
at: aPosition
	
	label := $O.
	position := aPosition.! !
!XLabeledPosition methodsFor: 'initialization' stamp: 'JEA 11/1/2020 19:56:40' prior: 50874028 overrides: 50874004!
at: aPosition

	label := $O.
	position := aPosition.! !
!XLabeledPosition methodsFor: 'initialization' stamp: 'JEA 11/1/2020 19:56:42' prior: 50874075 overrides: 50874004!
at: aPosition

	label := $X.
	position := aPosition.! !
!LabeledPosition methodsFor: 'inquiries' stamp: 'JEA 11/1/2020 19:57:17' overrides: 16881029!
= aLabeledPosition

	label = aLabeledPosition label.
	position = aLabeledPosition position.! !
!LabeledPosition methodsFor: 'inquiries' stamp: 'JEA 11/1/2020 19:57:28' prior: 50874086 overrides: 16881029!
= aLabeledPosition

	^label = aLabeledPosition label and: [position = aLabeledPosition position].! !

!testRun: #TerniLapilliTest #test01XPlaysFirst stamp: 'JEA 11/1/2020 19:58:26'!
PASSED!

!testRun: #TerniLapilliTest #test02XCanPlayItsTurn stamp: 'JEA 11/1/2020 19:58:26'!
PASSED!

!testRun: #TerniLapilliTest #test03OPlaysAfterX stamp: 'JEA 11/1/2020 19:58:26'!
PASSED!

!testRun: #TerniLapilliTest #test04OCanPlayItsTurn stamp: 'JEA 11/1/2020 19:58:26'!
FAILURE!

!testRun: #TerniLapilliTest #test05XPlaysAfterO stamp: 'JEA 11/1/2020 19:58:26'!
PASSED!

!testRun: #TerniLapilliTest #test06PositionsDontOverlap stamp: 'JEA 11/1/2020 19:58:26'!
FAILURE!

!testRun: #TerniLapilliTest #test07PositionsAreOccupied stamp: 'JEA 11/1/2020 19:58:26'!
PASSED!

!testRun: #TerniLapilliTest #test08OCantPlayInOccupiedPosition stamp: 'JEA 11/1/2020 19:58:26'!
PASSED!

!testRun: #TerniLapilliTest #test09XCantPlayInOccupiedPosition stamp: 'JEA 11/1/2020 19:58:26'!
PASSED!

!testRun: #TerniLapilliTest #test10XAndOAreAtEveryPositionPlayed stamp: 'JEA 11/1/2020 19:58:26'!
FAILURE!

!testRun: #TerniLapilliTest #test11XCantPlayInInvalidPosition stamp: 'JEA 11/1/2020 19:58:26'!
PASSED!

!testRun: #TerniLapilliTest #test12OCantPlayInInvalidPosition stamp: 'JEA 11/1/2020 19:58:26'!
PASSED!

!testRun: #TerniLapilliTest #test04OCanPlayItsTurn stamp: 'JEA 11/1/2020 19:58:32'!
FAILURE!
!TerniLapilli methodsFor: 'playing' stamp: 'JEA 11/1/2020 19:58:57' prior: 50873826!
putOAt: aPosition

	self put: (Array with: aPosition with: $O).! !

!testRun: #TerniLapilliTest #test01XPlaysFirst stamp: 'JEA 11/1/2020 19:58:58'!
PASSED!

!testRun: #TerniLapilliTest #test02XCanPlayItsTurn stamp: 'JEA 11/1/2020 19:58:58'!
PASSED!

!testRun: #TerniLapilliTest #test03OPlaysAfterX stamp: 'JEA 11/1/2020 19:58:58'!
PASSED!

!testRun: #TerniLapilliTest #test04OCanPlayItsTurn stamp: 'JEA 11/1/2020 19:58:58'!
PASSED!

!testRun: #TerniLapilliTest #test05XPlaysAfterO stamp: 'JEA 11/1/2020 19:58:58'!
PASSED!

!testRun: #TerniLapilliTest #test06PositionsDontOverlap stamp: 'JEA 11/1/2020 19:58:58'!
PASSED!

!testRun: #TerniLapilliTest #test07PositionsAreOccupied stamp: 'JEA 11/1/2020 19:58:58'!
PASSED!

!testRun: #TerniLapilliTest #test08OCantPlayInOccupiedPosition stamp: 'JEA 11/1/2020 19:58:58'!
PASSED!

!testRun: #TerniLapilliTest #test09XCantPlayInOccupiedPosition stamp: 'JEA 11/1/2020 19:58:58'!
PASSED!

!testRun: #TerniLapilliTest #test10XAndOAreAtEveryPositionPlayed stamp: 'JEA 11/1/2020 19:58:58'!
PASSED!

!testRun: #TerniLapilliTest #test11XCantPlayInInvalidPosition stamp: 'JEA 11/1/2020 19:58:58'!
PASSED!

!testRun: #TerniLapilliTest #test12OCantPlayInInvalidPosition stamp: 'JEA 11/1/2020 19:58:58'!
PASSED!
!TerniLapilli methodsFor: 'testing' stamp: 'JEA 11/1/2020 19:59:41' prior: 50873605!
isOAt: aPosition

	^labeledPositions includes: (LabeledPosition labeledOAt: aPosition).! !
!TerniLapilli methodsFor: 'testing' stamp: 'JEA 11/1/2020 19:59:51' prior: 50873599!
isXAt: aPosition

	^labeledPositions includes: (LabeledPosition labeledOAt: aPosition).! !
!TerniLapilli methodsFor: 'testing' stamp: 'JEA 11/1/2020 19:59:54' prior: 50874187!
isXAt: aPosition

	^labeledPositions includes: (LabeledPosition labeledXAt: aPosition).! !
!TerniLapilli methodsFor: 'testing' stamp: 'JEA 11/1/2020 20:00:06' prior: 50874193!
isXAt: aPosition

	^labeledPositions includes: (XLabeledPosition newAt: aPosition).! !
!TerniLapilli methodsFor: 'testing' stamp: 'JEA 11/1/2020 20:00:14' prior: 50874181!
isOAt: aPosition

	^labeledPositions includes: (OLabeledPosition newAt: aPosition).! !
!TerniLapilli methodsFor: 'playing' stamp: 'JEA 11/1/2020 20:00:42' prior: 50874139!
putOAt: aPosition

	self put: (OLabeledPosition newAt: aPosition).! !
!TerniLapilli methodsFor: 'playing' stamp: 'JEA 11/1/2020 20:00:46' prior: 50873821!
putXAt: aPosition

	self put: (XLabeledPosition newAt: aPosition).! !
!TerniLapilli methodsFor: 'playing - private' stamp: 'JEA 11/1/2020 20:01:19' prior: 50873534!
put: aLabeledPosition
	| aPosition selfClass |
	aPosition := aLabeledPosition position.
	selfClass := self class.

	(self class isValid: aPosition) ifFalse: [ self error: selfClass invalidPositionDescription. ].
	(self isOccupied: aPosition) ifTrue: [self error: selfClass positionOccupiedDescription. ].
	
	labeledPositions add: aLabeledPosition.
	isXPlaying := isXPlaying not.! !

!testRun: #TerniLapilliTest #test01XPlaysFirst stamp: 'JEA 11/1/2020 20:01:20'!
PASSED!

!testRun: #TerniLapilliTest #test02XCanPlayItsTurn stamp: 'JEA 11/1/2020 20:01:20'!
ERROR!

!testRun: #TerniLapilliTest #test03OPlaysAfterX stamp: 'JEA 11/1/2020 20:01:20'!
ERROR!

!testRun: #TerniLapilliTest #test04OCanPlayItsTurn stamp: 'JEA 11/1/2020 20:01:20'!
ERROR!

!testRun: #TerniLapilliTest #test05XPlaysAfterO stamp: 'JEA 11/1/2020 20:01:20'!
ERROR!

!testRun: #TerniLapilliTest #test06PositionsDontOverlap stamp: 'JEA 11/1/2020 20:01:20'!
ERROR!

!testRun: #TerniLapilliTest #test07PositionsAreOccupied stamp: 'JEA 11/1/2020 20:01:20'!
ERROR!

!testRun: #TerniLapilliTest #test08OCantPlayInOccupiedPosition stamp: 'JEA 11/1/2020 20:01:20'!
ERROR!

!testRun: #TerniLapilliTest #test09XCantPlayInOccupiedPosition stamp: 'JEA 11/1/2020 20:01:20'!
ERROR!

!testRun: #TerniLapilliTest #test10XAndOAreAtEveryPositionPlayed stamp: 'JEA 11/1/2020 20:01:20'!
ERROR!

!testRun: #TerniLapilliTest #test11XCantPlayInInvalidPosition stamp: 'JEA 11/1/2020 20:01:20'!
PASSED!

!testRun: #TerniLapilliTest #test12OCantPlayInInvalidPosition stamp: 'JEA 11/1/2020 20:01:20'!
ERROR!

!testRun: #TerniLapilliTest #test01XPlaysFirst stamp: 'JEA 11/1/2020 20:01:56'!
PASSED!

!testRun: #TerniLapilliTest #test02XCanPlayItsTurn stamp: 'JEA 11/1/2020 20:01:56'!
ERROR!

!testRun: #TerniLapilliTest #test03OPlaysAfterX stamp: 'JEA 11/1/2020 20:01:56'!
ERROR!

!testRun: #TerniLapilliTest #test04OCanPlayItsTurn stamp: 'JEA 11/1/2020 20:01:56'!
ERROR!

!testRun: #TerniLapilliTest #test05XPlaysAfterO stamp: 'JEA 11/1/2020 20:01:56'!
ERROR!

!testRun: #TerniLapilliTest #test06PositionsDontOverlap stamp: 'JEA 11/1/2020 20:01:56'!
ERROR!

!testRun: #TerniLapilliTest #test07PositionsAreOccupied stamp: 'JEA 11/1/2020 20:01:56'!
ERROR!

!testRun: #TerniLapilliTest #test08OCantPlayInOccupiedPosition stamp: 'JEA 11/1/2020 20:01:56'!
ERROR!

!testRun: #TerniLapilliTest #test09XCantPlayInOccupiedPosition stamp: 'JEA 11/1/2020 20:01:56'!
ERROR!

!testRun: #TerniLapilliTest #test10XAndOAreAtEveryPositionPlayed stamp: 'JEA 11/1/2020 20:01:56'!
ERROR!

!testRun: #TerniLapilliTest #test11XCantPlayInInvalidPosition stamp: 'JEA 11/1/2020 20:01:56'!
PASSED!

!testRun: #TerniLapilliTest #test12OCantPlayInInvalidPosition stamp: 'JEA 11/1/2020 20:01:56'!
ERROR!

!testRun: #TerniLapilliTest #test02XCanPlayItsTurn stamp: 'JEA 11/1/2020 20:01:58'!
ERROR!

!testRun: #TerniLapilliTest #test01XPlaysFirst stamp: 'JEA 11/1/2020 20:02:40'!
PASSED!

!testRun: #TerniLapilliTest #test02XCanPlayItsTurn stamp: 'JEA 11/1/2020 20:02:40'!
ERROR!

!testRun: #TerniLapilliTest #test03OPlaysAfterX stamp: 'JEA 11/1/2020 20:02:40'!
ERROR!

!testRun: #TerniLapilliTest #test04OCanPlayItsTurn stamp: 'JEA 11/1/2020 20:02:40'!
ERROR!

!testRun: #TerniLapilliTest #test05XPlaysAfterO stamp: 'JEA 11/1/2020 20:02:40'!
ERROR!

!testRun: #TerniLapilliTest #test06PositionsDontOverlap stamp: 'JEA 11/1/2020 20:02:40'!
ERROR!

!testRun: #TerniLapilliTest #test07PositionsAreOccupied stamp: 'JEA 11/1/2020 20:02:40'!
ERROR!

!testRun: #TerniLapilliTest #test08OCantPlayInOccupiedPosition stamp: 'JEA 11/1/2020 20:02:40'!
ERROR!

!testRun: #TerniLapilliTest #test09XCantPlayInOccupiedPosition stamp: 'JEA 11/1/2020 20:02:40'!
ERROR!

!testRun: #TerniLapilliTest #test10XAndOAreAtEveryPositionPlayed stamp: 'JEA 11/1/2020 20:02:40'!
ERROR!

!testRun: #TerniLapilliTest #test11XCantPlayInInvalidPosition stamp: 'JEA 11/1/2020 20:02:40'!
PASSED!

!testRun: #TerniLapilliTest #test12OCantPlayInInvalidPosition stamp: 'JEA 11/1/2020 20:02:40'!
ERROR!

!testRun: #TerniLapilliTest #test02XCanPlayItsTurn stamp: 'JEA 11/1/2020 20:02:43'!
ERROR!
!XLabeledPosition class methodsFor: 'instance creation' stamp: 'JEA 11/1/2020 20:03:07' prior: 50874016 overrides: 50873980!
newAt: aPosition

	^self basicNew at: aPosition.! !
!OLabeledPosition class methodsFor: 'instance creation' stamp: 'JEA 11/1/2020 20:03:12' prior: 50874010 overrides: 50873980!
newAt: aPosition

	^self basicNew at: aPosition.! !

!testRun: #TerniLapilliTest #test01XPlaysFirst stamp: 'JEA 11/1/2020 20:03:13'!
PASSED!

!testRun: #TerniLapilliTest #test02XCanPlayItsTurn stamp: 'JEA 11/1/2020 20:03:13'!
PASSED!

!testRun: #TerniLapilliTest #test03OPlaysAfterX stamp: 'JEA 11/1/2020 20:03:13'!
PASSED!

!testRun: #TerniLapilliTest #test04OCanPlayItsTurn stamp: 'JEA 11/1/2020 20:03:13'!
PASSED!

!testRun: #TerniLapilliTest #test05XPlaysAfterO stamp: 'JEA 11/1/2020 20:03:13'!
PASSED!

!testRun: #TerniLapilliTest #test06PositionsDontOverlap stamp: 'JEA 11/1/2020 20:03:13'!
PASSED!

!testRun: #TerniLapilliTest #test07PositionsAreOccupied stamp: 'JEA 11/1/2020 20:03:13'!
PASSED!

!testRun: #TerniLapilliTest #test08OCantPlayInOccupiedPosition stamp: 'JEA 11/1/2020 20:03:13'!
PASSED!

!testRun: #TerniLapilliTest #test09XCantPlayInOccupiedPosition stamp: 'JEA 11/1/2020 20:03:13'!
PASSED!

!testRun: #TerniLapilliTest #test10XAndOAreAtEveryPositionPlayed stamp: 'JEA 11/1/2020 20:03:13'!
PASSED!

!testRun: #TerniLapilliTest #test11XCantPlayInInvalidPosition stamp: 'JEA 11/1/2020 20:03:13'!
PASSED!

!testRun: #TerniLapilliTest #test12OCantPlayInInvalidPosition stamp: 'JEA 11/1/2020 20:03:13'!
PASSED!

!classRenamed: #LabeledPosition as: #TerniLapilliPosition stamp: 'JEA 11/1/2020 20:05:10'!
Smalltalk renameClassNamed: #LabeledPosition as: #TerniLapilliPosition!

!classRenamed: #OLabeledPosition as: #OTerniLapilliPosition stamp: 'JEA 11/1/2020 20:05:20'!
Smalltalk renameClassNamed: #OLabeledPosition as: #OTerniLapilliPosition!
!TerniLapilli methodsFor: 'as yet unclassified' stamp: 'JEA 11/1/2020 20:05:20' prior: 50874205!
isOAt: aPosition

	^labeledPositions includes: (OTerniLapilliPosition newAt: aPosition).! !
!TerniLapilliPosition class methodsFor: 'as yet unclassified' stamp: 'JEA 11/1/2020 20:05:20' prior: 50873892!
labeledOAt: aPosition

	^OTerniLapilliPosition newAt: aPosition.! !
!TerniLapilli methodsFor: 'as yet unclassified' stamp: 'JEA 11/1/2020 20:05:20' prior: 50874211!
putOAt: aPosition

	self put: (OTerniLapilliPosition newAt: aPosition).! !

!classRenamed: #XLabeledPosition as: #XTerniLapilliPosition stamp: 'JEA 11/1/2020 20:05:42'!
Smalltalk renameClassNamed: #XLabeledPosition as: #XTerniLapilliPosition!
!TerniLapilliPosition class methodsFor: 'as yet unclassified' stamp: 'JEA 11/1/2020 20:05:42' prior: 50873897!
labeledXAt: aPosition

	^XTerniLapilliPosition newAt: aPosition.! !
!TerniLapilli methodsFor: 'as yet unclassified' stamp: 'JEA 11/1/2020 20:05:42' prior: 50874216!
putXAt: aPosition

	self put: (XTerniLapilliPosition newAt: aPosition).! !
!TerniLapilli methodsFor: 'as yet unclassified' stamp: 'JEA 11/1/2020 20:05:42' prior: 50874199!
isXAt: aPosition

	^labeledPositions includes: (XTerniLapilliPosition newAt: aPosition).! !
!TerniLapilli methodsFor: 'playing - private' stamp: 'JEA 11/1/2020 20:05:59' prior: 50874222!
put: aTerniLapilliPosition
	| aPosition selfClass |
	aPosition := aTerniLapilliPosition position.
	selfClass := self class.

	(self class isValid: aPosition) ifFalse: [ self error: selfClass invalidPositionDescription. ].
	(self isOccupied: aPosition) ifTrue: [self error: selfClass positionOccupiedDescription. ].
	
	labeledPositions add: aTerniLapilliPosition.
	isXPlaying := isXPlaying not.! !

!testRun: #TerniLapilliTest #test01XPlaysFirst stamp: 'JEA 11/1/2020 20:06:00'!
PASSED!

!testRun: #TerniLapilliTest #test02XCanPlayItsTurn stamp: 'JEA 11/1/2020 20:06:00'!
PASSED!

!testRun: #TerniLapilliTest #test03OPlaysAfterX stamp: 'JEA 11/1/2020 20:06:00'!
PASSED!

!testRun: #TerniLapilliTest #test04OCanPlayItsTurn stamp: 'JEA 11/1/2020 20:06:00'!
PASSED!

!testRun: #TerniLapilliTest #test05XPlaysAfterO stamp: 'JEA 11/1/2020 20:06:00'!
PASSED!

!testRun: #TerniLapilliTest #test06PositionsDontOverlap stamp: 'JEA 11/1/2020 20:06:00'!
PASSED!

!testRun: #TerniLapilliTest #test07PositionsAreOccupied stamp: 'JEA 11/1/2020 20:06:00'!
PASSED!

!testRun: #TerniLapilliTest #test08OCantPlayInOccupiedPosition stamp: 'JEA 11/1/2020 20:06:00'!
PASSED!

!testRun: #TerniLapilliTest #test09XCantPlayInOccupiedPosition stamp: 'JEA 11/1/2020 20:06:00'!
PASSED!

!testRun: #TerniLapilliTest #test10XAndOAreAtEveryPositionPlayed stamp: 'JEA 11/1/2020 20:06:00'!
PASSED!

!testRun: #TerniLapilliTest #test11XCantPlayInInvalidPosition stamp: 'JEA 11/1/2020 20:06:00'!
PASSED!

!testRun: #TerniLapilliTest #test12OCantPlayInInvalidPosition stamp: 'JEA 11/1/2020 20:06:00'!
PASSED!

----SNAPSHOT----(1 November 2020 20:06:05) CuisUniversity-4384.image priorSource: 17329898!
!TerniLapilliPosition class methodsFor: 'testing' stamp: 'JEA 11/1/2020 20:06:57'!
isValid: aPosition! !
!TerniLapilliPosition class methodsFor: 'testing' stamp: 'JEA 11/1/2020 20:07:19' prior: 50874509!
isValid: aPosition

	^aPosition <= (2@2) and: [aPosition >= (0@0)].! !

!methodRemoval: TerniLapilliPosition class #isValid: stamp: 'JEA 11/1/2020 20:08:04'!
isValid: aPosition

	^aPosition <= (2@2) and: [aPosition >= (0@0)].!
!TerniLapilliPosition class methodsFor: 'nil' stamp: 'JEA 11/1/2020 20:08:24'!
isValid: aPosition

	^aPosition <= (2@2) and: [aPosition >= (0@0)].! !

!methodRemoval: TerniLapilli class #isValid: stamp: 'JEA 11/1/2020 20:08:29'!
isValid: aPosition

	^aPosition <= (2@2) and: [aPosition >= (0@0)].!
!TerniLapilli methodsFor: 'playing - private' stamp: 'JEA 11/1/2020 20:08:50' prior: 50874454!
put: aTerniLapilliPosition
	| aPosition selfClass |
	aPosition := aTerniLapilliPosition position.
	selfClass := self class.

	(self isOccupied: aPosition) ifTrue: [self error: selfClass positionOccupiedDescription. ].
	
	labeledPositions add: aTerniLapilliPosition.
	isXPlaying := isXPlaying not.! !
!OTerniLapilliPosition class methodsFor: 'instance creation' stamp: 'JEA 11/1/2020 20:09:53' prior: 50874359 overrides: 50873980!
newAt: aPosition

	self class checkIfValid: aPosition.
	^self basicNew at: aPosition.! !
!XTerniLapilliPosition class methodsFor: 'instance creation' stamp: 'JEA 11/1/2020 20:10:02' prior: 50874353 overrides: 50873980!
newAt: aPosition

	self class checkIfValid: aPosition.
	^self basicNew at: aPosition.! !
!TerniLapilliPosition class methodsFor: 'testing' stamp: 'JEA 11/1/2020 20:11:20'!
checkIfValid: aPosition

	! !

!classRenamed: #TerniLapilliPosition as: #TerniLapilliChip stamp: 'JEA 11/1/2020 20:16:52'!
Smalltalk renameClassNamed: #TerniLapilliPosition as: #TerniLapilliChip!

!classRenamed: #OTerniLapilliPosition as: #OChip stamp: 'JEA 11/1/2020 20:16:58'!
Smalltalk renameClassNamed: #OTerniLapilliPosition as: #OChip!
!TerniLapilli methodsFor: 'as yet unclassified' stamp: 'JEA 11/1/2020 20:16:58' prior: 50874411!
isOAt: aPosition

	^labeledPositions includes: (OChip newAt: aPosition).! !
!TerniLapilliChip class methodsFor: 'as yet unclassified' stamp: 'JEA 11/1/2020 20:16:58' prior: 50874418!
labeledOAt: aPosition

	^OChip newAt: aPosition.! !
!TerniLapilli methodsFor: 'as yet unclassified' stamp: 'JEA 11/1/2020 20:16:58' prior: 50874424!
putOAt: aPosition

	self put: (OChip newAt: aPosition).! !

!classRenamed: #XTerniLapilliPosition as: #XChip stamp: 'JEA 11/1/2020 20:17:09'!
Smalltalk renameClassNamed: #XTerniLapilliPosition as: #XChip!
!TerniLapilliChip class methodsFor: 'as yet unclassified' stamp: 'JEA 11/1/2020 20:17:09' prior: 50874436!
labeledXAt: aPosition

	^XChip newAt: aPosition.! !
!TerniLapilli methodsFor: 'as yet unclassified' stamp: 'JEA 11/1/2020 20:17:09' prior: 50874442!
putXAt: aPosition

	self put: (XChip newAt: aPosition).! !
!TerniLapilli methodsFor: 'as yet unclassified' stamp: 'JEA 11/1/2020 20:17:09' prior: 50874448!
isXAt: aPosition

	^labeledPositions includes: (XChip newAt: aPosition).! !
!TerniLapilli methodsFor: 'playing - private' stamp: 'JEA 11/1/2020 20:17:40' prior: 50874533!
put: aTerniLapilliChip
	| aPosition selfClass |
	aPosition := aTerniLapilliChip position.
	selfClass := self class.

	(self isOccupied: aPosition) ifTrue: [self error: selfClass positionOccupiedDescription. ].
	
	labeledPositions add: aTerniLapilliChip.
	isXPlaying := isXPlaying not.! !

!testRun: #TerniLapilliTest #test01XPlaysFirst stamp: 'JEA 11/1/2020 20:17:42'!
PASSED!

!testRun: #TerniLapilliTest #test02XCanPlayItsTurn stamp: 'JEA 11/1/2020 20:17:42'!
ERROR!

!testRun: #TerniLapilliTest #test03OPlaysAfterX stamp: 'JEA 11/1/2020 20:17:42'!
ERROR!

!testRun: #TerniLapilliTest #test04OCanPlayItsTurn stamp: 'JEA 11/1/2020 20:17:42'!
ERROR!

!testRun: #TerniLapilliTest #test05XPlaysAfterO stamp: 'JEA 11/1/2020 20:17:42'!
ERROR!

!testRun: #TerniLapilliTest #test06PositionsDontOverlap stamp: 'JEA 11/1/2020 20:17:42'!
ERROR!

!testRun: #TerniLapilliTest #test07PositionsAreOccupied stamp: 'JEA 11/1/2020 20:17:42'!
ERROR!

!testRun: #TerniLapilliTest #test08OCantPlayInOccupiedPosition stamp: 'JEA 11/1/2020 20:17:42'!
ERROR!

!testRun: #TerniLapilliTest #test09XCantPlayInOccupiedPosition stamp: 'JEA 11/1/2020 20:17:42'!
ERROR!

!testRun: #TerniLapilliTest #test10XAndOAreAtEveryPositionPlayed stamp: 'JEA 11/1/2020 20:17:42'!
ERROR!

!testRun: #TerniLapilliTest #test11XCantPlayInInvalidPosition stamp: 'JEA 11/1/2020 20:17:42'!
PASSED!

!testRun: #TerniLapilliTest #test12OCantPlayInInvalidPosition stamp: 'JEA 11/1/2020 20:17:42'!
ERROR!
!TerniLapilliChip class methodsFor: 'testing' stamp: 'JEA 11/1/2020 20:18:40' prior: 50874560!
checkIfValid: aPosition

	(self isValid: aPosition) ifFalse: [ self error: self invalidPositionDescription. ].! !
!TerniLapilliChip class methodsFor: 'error descriptions' stamp: 'JEA 11/1/2020 20:19:25'!
invalidPositionDescription

	^'Invalid position. Valid positions are between 0@0 and 2@2.'! !

!testRun: #TerniLapilliTest #test01XPlaysFirst stamp: 'JEA 11/1/2020 20:19:29'!
PASSED!

!testRun: #TerniLapilliTest #test02XCanPlayItsTurn stamp: 'JEA 11/1/2020 20:19:29'!
ERROR!

!testRun: #TerniLapilliTest #test03OPlaysAfterX stamp: 'JEA 11/1/2020 20:19:29'!
ERROR!

!testRun: #TerniLapilliTest #test04OCanPlayItsTurn stamp: 'JEA 11/1/2020 20:19:29'!
ERROR!

!testRun: #TerniLapilliTest #test05XPlaysAfterO stamp: 'JEA 11/1/2020 20:19:29'!
ERROR!

!testRun: #TerniLapilliTest #test06PositionsDontOverlap stamp: 'JEA 11/1/2020 20:19:29'!
ERROR!

!testRun: #TerniLapilliTest #test07PositionsAreOccupied stamp: 'JEA 11/1/2020 20:19:29'!
ERROR!

!testRun: #TerniLapilliTest #test08OCantPlayInOccupiedPosition stamp: 'JEA 11/1/2020 20:19:29'!
ERROR!

!testRun: #TerniLapilliTest #test09XCantPlayInOccupiedPosition stamp: 'JEA 11/1/2020 20:19:29'!
ERROR!

!testRun: #TerniLapilliTest #test10XAndOAreAtEveryPositionPlayed stamp: 'JEA 11/1/2020 20:19:29'!
ERROR!

!testRun: #TerniLapilliTest #test11XCantPlayInInvalidPosition stamp: 'JEA 11/1/2020 20:19:29'!
PASSED!

!testRun: #TerniLapilliTest #test12OCantPlayInInvalidPosition stamp: 'JEA 11/1/2020 20:19:29'!
ERROR!

!testRun: #TerniLapilliTest #test02XCanPlayItsTurn stamp: 'JEA 11/1/2020 20:19:31'!
ERROR!

!testRun: #TerniLapilliTest #test01XPlaysFirst stamp: 'JEA 11/1/2020 20:19:57'!
PASSED!

!testRun: #TerniLapilliTest #test02XCanPlayItsTurn stamp: 'JEA 11/1/2020 20:19:57'!
ERROR!

!testRun: #TerniLapilliTest #test03OPlaysAfterX stamp: 'JEA 11/1/2020 20:19:57'!
ERROR!

!testRun: #TerniLapilliTest #test04OCanPlayItsTurn stamp: 'JEA 11/1/2020 20:19:57'!
ERROR!

!testRun: #TerniLapilliTest #test05XPlaysAfterO stamp: 'JEA 11/1/2020 20:19:57'!
ERROR!

!testRun: #TerniLapilliTest #test06PositionsDontOverlap stamp: 'JEA 11/1/2020 20:19:57'!
ERROR!

!testRun: #TerniLapilliTest #test07PositionsAreOccupied stamp: 'JEA 11/1/2020 20:19:57'!
ERROR!

!testRun: #TerniLapilliTest #test08OCantPlayInOccupiedPosition stamp: 'JEA 11/1/2020 20:19:57'!
ERROR!

!testRun: #TerniLapilliTest #test09XCantPlayInOccupiedPosition stamp: 'JEA 11/1/2020 20:19:57'!
ERROR!

!testRun: #TerniLapilliTest #test10XAndOAreAtEveryPositionPlayed stamp: 'JEA 11/1/2020 20:19:57'!
ERROR!

!testRun: #TerniLapilliTest #test11XCantPlayInInvalidPosition stamp: 'JEA 11/1/2020 20:19:57'!
PASSED!

!testRun: #TerniLapilliTest #test12OCantPlayInInvalidPosition stamp: 'JEA 11/1/2020 20:19:57'!
ERROR!

!testRun: #TerniLapilliTest #test02XCanPlayItsTurn stamp: 'JEA 11/1/2020 20:19:58'!
ERROR!

self class!

XChip checkIfValid: aPosition!
!OChip class methodsFor: 'instance creation' stamp: 'JEA 11/1/2020 20:21:17' prior: 50874547 overrides: 50873980!
newAt: aPosition

	self checkIfValid: aPosition.
	^self basicNew at: aPosition.! !
!XChip class methodsFor: 'instance creation' stamp: 'JEA 11/1/2020 20:21:22' prior: 50874554 overrides: 50873980!
newAt: aPosition

	self checkIfValid: aPosition.
	^self basicNew at: aPosition.! !

!testRun: #TerniLapilliTest #test01XPlaysFirst stamp: 'JEA 11/1/2020 20:21:24'!
PASSED!

!testRun: #TerniLapilliTest #test02XCanPlayItsTurn stamp: 'JEA 11/1/2020 20:21:24'!
PASSED!

!testRun: #TerniLapilliTest #test03OPlaysAfterX stamp: 'JEA 11/1/2020 20:21:24'!
PASSED!

!testRun: #TerniLapilliTest #test04OCanPlayItsTurn stamp: 'JEA 11/1/2020 20:21:24'!
PASSED!

!testRun: #TerniLapilliTest #test05XPlaysAfterO stamp: 'JEA 11/1/2020 20:21:24'!
PASSED!

!testRun: #TerniLapilliTest #test06PositionsDontOverlap stamp: 'JEA 11/1/2020 20:21:24'!
PASSED!

!testRun: #TerniLapilliTest #test07PositionsAreOccupied stamp: 'JEA 11/1/2020 20:21:24'!
PASSED!

!testRun: #TerniLapilliTest #test08OCantPlayInOccupiedPosition stamp: 'JEA 11/1/2020 20:21:24'!
PASSED!

!testRun: #TerniLapilliTest #test09XCantPlayInOccupiedPosition stamp: 'JEA 11/1/2020 20:21:24'!
PASSED!

!testRun: #TerniLapilliTest #test10XAndOAreAtEveryPositionPlayed stamp: 'JEA 11/1/2020 20:21:24'!
PASSED!

!testRun: #TerniLapilliTest #test11XCantPlayInInvalidPosition stamp: 'JEA 11/1/2020 20:21:24'!
PASSED!

!testRun: #TerniLapilliTest #test12OCantPlayInInvalidPosition stamp: 'JEA 11/1/2020 20:21:24'!
PASSED!

!methodRemoval: TerniLapilli class #invalidPositionDescription stamp: 'JEA 11/1/2020 20:21:35'!
invalidPositionDescription

	^'Cannot play in an invalid possition. Positions from 0@0 to 2@2 are valid.'!
!TerniLapilliTest methodsFor: 'tests' stamp: 'JEA 11/1/2020 20:21:49' prior: 50872606!
test11XCantPlayInInvalidPosition

	self should: [ TerniLapilli new putXAt: 3@2. ]
		raise: Error
		withExceptionDo: [ :anException | anException description = TerniLapilliChip invalidPositionDescription. ].! !
!TerniLapilliTest methodsFor: 'tests' stamp: 'JEA 11/1/2020 20:21:52' prior: 50872911!
test12OCantPlayInInvalidPosition
	| aTerniLapilliGame  |

	aTerniLapilliGame := TerniLapilli new.
	aTerniLapilliGame putXAt: 0@1.
	
	self should: [ aTerniLapilliGame  putOAt: 3@2. ]
		raise: Error
		withExceptionDo: [ :anException | anException description = TerniLapilliChip invalidPositionDescription. ].! !

!testRun: #TerniLapilliTest #test01XPlaysFirst stamp: 'JEA 11/1/2020 20:21:53'!
PASSED!

!testRun: #TerniLapilliTest #test02XCanPlayItsTurn stamp: 'JEA 11/1/2020 20:21:53'!
PASSED!

!testRun: #TerniLapilliTest #test03OPlaysAfterX stamp: 'JEA 11/1/2020 20:21:53'!
PASSED!

!testRun: #TerniLapilliTest #test04OCanPlayItsTurn stamp: 'JEA 11/1/2020 20:21:53'!
PASSED!

!testRun: #TerniLapilliTest #test05XPlaysAfterO stamp: 'JEA 11/1/2020 20:21:53'!
PASSED!

!testRun: #TerniLapilliTest #test06PositionsDontOverlap stamp: 'JEA 11/1/2020 20:21:53'!
PASSED!

!testRun: #TerniLapilliTest #test07PositionsAreOccupied stamp: 'JEA 11/1/2020 20:21:53'!
PASSED!

!testRun: #TerniLapilliTest #test08OCantPlayInOccupiedPosition stamp: 'JEA 11/1/2020 20:21:53'!
PASSED!

!testRun: #TerniLapilliTest #test09XCantPlayInOccupiedPosition stamp: 'JEA 11/1/2020 20:21:53'!
PASSED!

!testRun: #TerniLapilliTest #test10XAndOAreAtEveryPositionPlayed stamp: 'JEA 11/1/2020 20:21:53'!
PASSED!

!testRun: #TerniLapilliTest #test11XCantPlayInInvalidPosition stamp: 'JEA 11/1/2020 20:21:53'!
PASSED!

!testRun: #TerniLapilliTest #test12OCantPlayInInvalidPosition stamp: 'JEA 11/1/2020 20:21:53'!
PASSED!

----SNAPSHOT----(1 November 2020 20:21:57) CuisUniversity-4384.image priorSource: 17371364!
!TerniLapilli methodsFor: 'playing - private' stamp: 'JEA 11/1/2020 20:22:39' prior: 50874611!
put: aTerniLapilliChip
	(self isOccupied: aTerniLapilliChip position) ifTrue: [self error: self class positionOccupiedDescription. ].
	
	labeledPositions add: aTerniLapilliChip.
	isXPlaying := isXPlaying not.! !
!TerniLapilli methodsFor: 'playing - private' stamp: 'JEA 11/1/2020 20:22:42' prior: 50874873!
put: aTerniLapilliChip

	(self isOccupied: aTerniLapilliChip position) ifTrue: [self error: self class positionOccupiedDescription. ].
	
	labeledPositions add: aTerniLapilliChip.
	isXPlaying := isXPlaying not.! !

!testRun: #TerniLapilliTest #test01XPlaysFirst stamp: 'JEA 11/1/2020 20:22:42'!
PASSED!

!testRun: #TerniLapilliTest #test02XCanPlayItsTurn stamp: 'JEA 11/1/2020 20:22:42'!
PASSED!

!testRun: #TerniLapilliTest #test03OPlaysAfterX stamp: 'JEA 11/1/2020 20:22:42'!
PASSED!

!testRun: #TerniLapilliTest #test04OCanPlayItsTurn stamp: 'JEA 11/1/2020 20:22:42'!
PASSED!

!testRun: #TerniLapilliTest #test05XPlaysAfterO stamp: 'JEA 11/1/2020 20:22:42'!
PASSED!

!testRun: #TerniLapilliTest #test06PositionsDontOverlap stamp: 'JEA 11/1/2020 20:22:42'!
PASSED!

!testRun: #TerniLapilliTest #test07PositionsAreOccupied stamp: 'JEA 11/1/2020 20:22:42'!
PASSED!

!testRun: #TerniLapilliTest #test08OCantPlayInOccupiedPosition stamp: 'JEA 11/1/2020 20:22:42'!
PASSED!

!testRun: #TerniLapilliTest #test09XCantPlayInOccupiedPosition stamp: 'JEA 11/1/2020 20:22:42'!
PASSED!

!testRun: #TerniLapilliTest #test10XAndOAreAtEveryPositionPlayed stamp: 'JEA 11/1/2020 20:22:42'!
PASSED!

!testRun: #TerniLapilliTest #test11XCantPlayInInvalidPosition stamp: 'JEA 11/1/2020 20:22:42'!
PASSED!

!testRun: #TerniLapilliTest #test12OCantPlayInInvalidPosition stamp: 'JEA 11/1/2020 20:22:42'!
PASSED!

!testRun: #TerniLapilliTest #test01XPlaysFirst stamp: 'JEA 11/1/2020 22:24:41'!
PASSED!

!testRun: #TerniLapilliTest #test02XCanPlayItsTurn stamp: 'JEA 11/1/2020 22:24:41'!
PASSED!

!testRun: #TerniLapilliTest #test03OPlaysAfterX stamp: 'JEA 11/1/2020 22:24:41'!
PASSED!

!testRun: #TerniLapilliTest #test04OCanPlayItsTurn stamp: 'JEA 11/1/2020 22:24:41'!
PASSED!

!testRun: #TerniLapilliTest #test05XPlaysAfterO stamp: 'JEA 11/1/2020 22:24:41'!
PASSED!

!testRun: #TerniLapilliTest #test06PositionsDontOverlap stamp: 'JEA 11/1/2020 22:24:41'!
PASSED!

!testRun: #TerniLapilliTest #test07PositionsAreOccupied stamp: 'JEA 11/1/2020 22:24:41'!
PASSED!

!testRun: #TerniLapilliTest #test08OCantPlayInOccupiedPosition stamp: 'JEA 11/1/2020 22:24:41'!
PASSED!

!testRun: #TerniLapilliTest #test09XCantPlayInOccupiedPosition stamp: 'JEA 11/1/2020 22:24:41'!
PASSED!

!testRun: #TerniLapilliTest #test10XAndOAreAtEveryPositionPlayed stamp: 'JEA 11/1/2020 22:24:41'!
PASSED!

!testRun: #TerniLapilliTest #test11XCantPlayInInvalidPosition stamp: 'JEA 11/1/2020 22:24:41'!
PASSED!

!testRun: #TerniLapilliTest #test12OCantPlayInInvalidPosition stamp: 'JEA 11/1/2020 22:24:41'!
PASSED!
!TerniLapilliTest methodsFor: 'tests' stamp: 'JEA 11/1/2020 22:25:21' prior: 50870852!
test01XPlaysFirst
	| aTerniLapilliGame |
	aTerniLapilliGame := TerniLapilli new.
	self assert: aTerniLapilliGame isXPlaying.
	self assert: aTerniLapilliGame isOPlaying not.! !
!TerniLapilliTest methodsFor: 'tests' stamp: 'JEA 11/1/2020 22:25:24' prior: 50874966!
test01XPlaysFirst
	| aTerniLapilliGame |

	aTerniLapilliGame := TerniLapilli new.
	self assert: aTerniLapilliGame isXPlaying.
	self assert: aTerniLapilliGame isOPlaying not.! !

!testRun: #TerniLapilliTest #test01XPlaysFirst stamp: 'JEA 11/1/2020 22:25:28'!
PASSED!

!testRun: #TerniLapilliTest #test02XCanPlayItsTurn stamp: 'JEA 11/1/2020 22:25:28'!
PASSED!

!testRun: #TerniLapilliTest #test03OPlaysAfterX stamp: 'JEA 11/1/2020 22:25:28'!
PASSED!

!testRun: #TerniLapilliTest #test04OCanPlayItsTurn stamp: 'JEA 11/1/2020 22:25:28'!
PASSED!

!testRun: #TerniLapilliTest #test05XPlaysAfterO stamp: 'JEA 11/1/2020 22:25:28'!
PASSED!

!testRun: #TerniLapilliTest #test06PositionsDontOverlap stamp: 'JEA 11/1/2020 22:25:28'!
PASSED!

!testRun: #TerniLapilliTest #test07PositionsAreOccupied stamp: 'JEA 11/1/2020 22:25:28'!
PASSED!

!testRun: #TerniLapilliTest #test08OCantPlayInOccupiedPosition stamp: 'JEA 11/1/2020 22:25:28'!
PASSED!

!testRun: #TerniLapilliTest #test09XCantPlayInOccupiedPosition stamp: 'JEA 11/1/2020 22:25:28'!
PASSED!

!testRun: #TerniLapilliTest #test10XAndOAreAtEveryPositionPlayed stamp: 'JEA 11/1/2020 22:25:28'!
PASSED!

!testRun: #TerniLapilliTest #test11XCantPlayInInvalidPosition stamp: 'JEA 11/1/2020 22:25:28'!
PASSED!

!testRun: #TerniLapilliTest #test12OCantPlayInInvalidPosition stamp: 'JEA 11/1/2020 22:25:28'!
PASSED!
!TerniLapilliTest methodsFor: 'tests' stamp: 'JEA 11/1/2020 22:25:41' prior: 50874975!
test01XPlaysFirst
	| aTerniLapilliGame |

	aTerniLapilliGame := TerniLapilli new.

	self assert: aTerniLapilliGame isXPlaying.
	self assert: aTerniLapilliGame isOPlaying not.! !
!TerniLapilliTest methodsFor: 'tests' stamp: 'JEA 11/1/2020 22:36:36'!
test13CantPlaceMoreThan3Chips
	| aTerniLapilliGame  |

	aTerniLapilliGame := TerniLapilli new.
	aTerniLapilliGame putXAt: 0@0.
	aTerniLapilliGame putOAt: 0@1.
	aTerniLapilliGame putXAt: 0@2.
	aTerniLapilliGame putOAt: 1@0.
	aTerniLapilliGame putXAt: 1@1.
	aTerniLapilliGame putOAt: 1@2.
	
	self should: [ aTerniLapilliGame  putOAt: 3@2. ]
		raise: Error
		withExceptionDo: [ :anException | anException description = TerniLapilliChip invalidPositionDescription. ].! !
!TerniLapilliTest methodsFor: 'tests' stamp: 'JEA 11/1/2020 22:37:17' prior: 50875028!
test13CantPlaceMoreThan3Chips
	| aTerniLapilliGame  |

	aTerniLapilliGame := TerniLapilli new.
	aTerniLapilliGame putXAt: 0@0.
	aTerniLapilliGame putOAt: 0@1.
	aTerniLapilliGame putXAt: 0@2.
	aTerniLapilliGame putOAt: 1@0.
	aTerniLapilliGame putXAt: 1@1.
	aTerniLapilliGame putOAt: 1@2.
	
	self should: [ aTerniLapilliGame  putXAt: 2@0. ]
		raise: Error
		withExceptionDo: [ :anException | "anException description = " ].! !

!testRun: #TerniLapilliTest #test01XPlaysFirst stamp: 'JEA 11/1/2020 22:37:19'!
PASSED!

!testRun: #TerniLapilliTest #test02XCanPlayItsTurn stamp: 'JEA 11/1/2020 22:37:19'!
PASSED!

!testRun: #TerniLapilliTest #test03OPlaysAfterX stamp: 'JEA 11/1/2020 22:37:19'!
PASSED!

!testRun: #TerniLapilliTest #test04OCanPlayItsTurn stamp: 'JEA 11/1/2020 22:37:19'!
PASSED!

!testRun: #TerniLapilliTest #test05XPlaysAfterO stamp: 'JEA 11/1/2020 22:37:19'!
PASSED!

!testRun: #TerniLapilliTest #test06PositionsDontOverlap stamp: 'JEA 11/1/2020 22:37:19'!
PASSED!

!testRun: #TerniLapilliTest #test07PositionsAreOccupied stamp: 'JEA 11/1/2020 22:37:19'!
PASSED!

!testRun: #TerniLapilliTest #test08OCantPlayInOccupiedPosition stamp: 'JEA 11/1/2020 22:37:19'!
PASSED!

!testRun: #TerniLapilliTest #test09XCantPlayInOccupiedPosition stamp: 'JEA 11/1/2020 22:37:19'!
PASSED!

!testRun: #TerniLapilliTest #test10XAndOAreAtEveryPositionPlayed stamp: 'JEA 11/1/2020 22:37:19'!
PASSED!

!testRun: #TerniLapilliTest #test11XCantPlayInInvalidPosition stamp: 'JEA 11/1/2020 22:37:19'!
PASSED!

!testRun: #TerniLapilliTest #test12OCantPlayInInvalidPosition stamp: 'JEA 11/1/2020 22:37:19'!
PASSED!

!testRun: #TerniLapilliTest #test13CantPlaceMoreThan3Chips stamp: 'JEA 11/1/2020 22:37:19'!
FAILURE!

!testRun: #TerniLapilliTest #test13CantPlaceMoreThan3Chips stamp: 'JEA 11/1/2020 22:37:19'!
FAILURE!

!classDefinition: #TerniLapilli category: 'TerniLapilli' stamp: 'JEA 11/1/2020 22:41:02'!
Object subclass: #TerniLapilli
	instanceVariableNames: 'isXPlaying chips'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TerniLapilli'!
!TerniLapilli methodsFor: 'as yet unclassified' stamp: 'JEA 11/1/2020 22:41:02' prior: 50873697 overrides: 16896425!
initialize

	chips := OrderedCollection new.
	isXPlaying := true.! !
!TerniLapilli methodsFor: 'as yet unclassified' stamp: 'JEA 11/1/2020 22:41:02' prior: 50874883!
put: aTerniLapilliChip

	(self isOccupied: aTerniLapilliChip position) ifTrue: [self error: self class positionOccupiedDescription. ].
	
	chips add: aTerniLapilliChip.
	isXPlaying := isXPlaying not.! !
!TerniLapilli methodsFor: 'as yet unclassified' stamp: 'JEA 11/1/2020 22:41:02' prior: 50874574!
isOAt: aPosition

	^chips includes: (OChip newAt: aPosition).! !
!TerniLapilli methodsFor: 'as yet unclassified' stamp: 'JEA 11/1/2020 22:41:02' prior: 50874605!
isXAt: aPosition

	^chips includes: (XChip newAt: aPosition).! !
!TerniLapilli methodsFor: 'playing - private' stamp: 'JEA 11/1/2020 22:42:05' prior: 50875120!
put: aTerniLapilliChip

	chips size = 6 
		ifTrue: [
			(self isOccupied: aTerniLapilliChip position) ifTrue: [self error: self class positionOccupiedDescription. ].
			
			chips add: aTerniLapilliChip.
			isXPlaying := isXPlaying not.
		]
		ifFalse: [
			
		]! !
!TerniLapilli class methodsFor: 'error descriptions' stamp: 'JEA 11/1/2020 22:42:30'!
noMoreChipsDescription

	^'Cannot play more than 3 chips per player.'! !
!TerniLapilliTest methodsFor: 'tests' stamp: 'JEA 11/1/2020 22:42:49' prior: 50875046!
test13CantPlaceMoreThan3Chips
	| aTerniLapilliGame  |

	aTerniLapilliGame := TerniLapilli new.
	aTerniLapilliGame putXAt: 0@0.
	aTerniLapilliGame putOAt: 0@1.
	aTerniLapilliGame putXAt: 0@2.
	aTerniLapilliGame putOAt: 1@0.
	aTerniLapilliGame putXAt: 1@1.
	aTerniLapilliGame putOAt: 1@2.
	
	self should: [ aTerniLapilliGame  putXAt: 2@0. ]
		raise: Error
		withExceptionDo: [ :anException | anException description = TerniLapilli noMoreChipsDescription. ].! !

!testRun: #TerniLapilliTest #test01XPlaysFirst stamp: 'JEA 11/1/2020 22:42:50'!
PASSED!

!testRun: #TerniLapilliTest #test02XCanPlayItsTurn stamp: 'JEA 11/1/2020 22:42:50'!
FAILURE!

!testRun: #TerniLapilliTest #test03OPlaysAfterX stamp: 'JEA 11/1/2020 22:42:50'!
FAILURE!

!testRun: #TerniLapilliTest #test04OCanPlayItsTurn stamp: 'JEA 11/1/2020 22:42:50'!
FAILURE!

!testRun: #TerniLapilliTest #test05XPlaysAfterO stamp: 'JEA 11/1/2020 22:42:50'!
PASSED!

!testRun: #TerniLapilliTest #test06PositionsDontOverlap stamp: 'JEA 11/1/2020 22:42:50'!
FAILURE!

!testRun: #TerniLapilliTest #test07PositionsAreOccupied stamp: 'JEA 11/1/2020 22:42:50'!
FAILURE!

!testRun: #TerniLapilliTest #test08OCantPlayInOccupiedPosition stamp: 'JEA 11/1/2020 22:42:50'!
FAILURE!

!testRun: #TerniLapilliTest #test09XCantPlayInOccupiedPosition stamp: 'JEA 11/1/2020 22:42:50'!
FAILURE!

!testRun: #TerniLapilliTest #test10XAndOAreAtEveryPositionPlayed stamp: 'JEA 11/1/2020 22:42:50'!
FAILURE!

!testRun: #TerniLapilliTest #test11XCantPlayInInvalidPosition stamp: 'JEA 11/1/2020 22:42:50'!
PASSED!

!testRun: #TerniLapilliTest #test12OCantPlayInInvalidPosition stamp: 'JEA 11/1/2020 22:42:50'!
PASSED!

!testRun: #TerniLapilliTest #test13CantPlaceMoreThan3Chips stamp: 'JEA 11/1/2020 22:42:50'!
FAILURE!
!TerniLapilli methodsFor: 'playing - private' stamp: 'JEA 11/1/2020 22:43:02' prior: 50875141!
put: aTerniLapilliChip

	chips size < 6 
		ifTrue: [
			(self isOccupied: aTerniLapilliChip position) ifTrue: [self error: self class positionOccupiedDescription. ].
			
			chips add: aTerniLapilliChip.
			isXPlaying := isXPlaying not.
		]
		ifFalse: [
			
		]! !

!testRun: #TerniLapilliTest #test01XPlaysFirst stamp: 'JEA 11/1/2020 22:43:03'!
PASSED!

!testRun: #TerniLapilliTest #test02XCanPlayItsTurn stamp: 'JEA 11/1/2020 22:43:03'!
PASSED!

!testRun: #TerniLapilliTest #test03OPlaysAfterX stamp: 'JEA 11/1/2020 22:43:03'!
PASSED!

!testRun: #TerniLapilliTest #test04OCanPlayItsTurn stamp: 'JEA 11/1/2020 22:43:03'!
PASSED!

!testRun: #TerniLapilliTest #test05XPlaysAfterO stamp: 'JEA 11/1/2020 22:43:03'!
PASSED!

!testRun: #TerniLapilliTest #test06PositionsDontOverlap stamp: 'JEA 11/1/2020 22:43:03'!
PASSED!

!testRun: #TerniLapilliTest #test07PositionsAreOccupied stamp: 'JEA 11/1/2020 22:43:03'!
PASSED!

!testRun: #TerniLapilliTest #test08OCantPlayInOccupiedPosition stamp: 'JEA 11/1/2020 22:43:03'!
PASSED!

!testRun: #TerniLapilliTest #test09XCantPlayInOccupiedPosition stamp: 'JEA 11/1/2020 22:43:03'!
PASSED!

!testRun: #TerniLapilliTest #test10XAndOAreAtEveryPositionPlayed stamp: 'JEA 11/1/2020 22:43:03'!
PASSED!

!testRun: #TerniLapilliTest #test11XCantPlayInInvalidPosition stamp: 'JEA 11/1/2020 22:43:03'!
PASSED!

!testRun: #TerniLapilliTest #test12OCantPlayInInvalidPosition stamp: 'JEA 11/1/2020 22:43:03'!
PASSED!

!testRun: #TerniLapilliTest #test13CantPlaceMoreThan3Chips stamp: 'JEA 11/1/2020 22:43:03'!
FAILURE!

!testRun: #TerniLapilliTest #test13CantPlaceMoreThan3Chips stamp: 'JEA 11/1/2020 22:43:03'!
FAILURE!
!TerniLapilli methodsFor: 'playing - private' stamp: 'JEA 11/1/2020 22:43:11' prior: 50875215!
put: aTerniLapilliChip

	chips size < 6 
		ifTrue: [
			(self isOccupied: aTerniLapilliChip position) ifTrue: [self error: self class positionOccupiedDescription. ].
			
			chips add: aTerniLapilliChip.
			isXPlaying := isXPlaying not.
		]
		ifFalse: [
			self error: self class noMoreChipsDescription.
		]! !

!testRun: #TerniLapilliTest #test01XPlaysFirst stamp: 'JEA 11/1/2020 22:43:11'!
PASSED!

!testRun: #TerniLapilliTest #test02XCanPlayItsTurn stamp: 'JEA 11/1/2020 22:43:11'!
PASSED!

!testRun: #TerniLapilliTest #test03OPlaysAfterX stamp: 'JEA 11/1/2020 22:43:11'!
PASSED!

!testRun: #TerniLapilliTest #test04OCanPlayItsTurn stamp: 'JEA 11/1/2020 22:43:11'!
PASSED!

!testRun: #TerniLapilliTest #test05XPlaysAfterO stamp: 'JEA 11/1/2020 22:43:11'!
PASSED!

!testRun: #TerniLapilliTest #test06PositionsDontOverlap stamp: 'JEA 11/1/2020 22:43:11'!
PASSED!

!testRun: #TerniLapilliTest #test07PositionsAreOccupied stamp: 'JEA 11/1/2020 22:43:11'!
PASSED!

!testRun: #TerniLapilliTest #test08OCantPlayInOccupiedPosition stamp: 'JEA 11/1/2020 22:43:11'!
PASSED!

!testRun: #TerniLapilliTest #test09XCantPlayInOccupiedPosition stamp: 'JEA 11/1/2020 22:43:11'!
PASSED!

!testRun: #TerniLapilliTest #test10XAndOAreAtEveryPositionPlayed stamp: 'JEA 11/1/2020 22:43:11'!
PASSED!

!testRun: #TerniLapilliTest #test11XCantPlayInInvalidPosition stamp: 'JEA 11/1/2020 22:43:11'!
PASSED!

!testRun: #TerniLapilliTest #test12OCantPlayInInvalidPosition stamp: 'JEA 11/1/2020 22:43:11'!
PASSED!

!testRun: #TerniLapilliTest #test13CantPlaceMoreThan3Chips stamp: 'JEA 11/1/2020 22:43:11'!
PASSED!

!testRun: #TerniLapilliTest #test01XPlaysFirst stamp: 'JEA 11/1/2020 23:29:07'!
PASSED!

!testRun: #TerniLapilliTest #test02XCanPlayItsTurn stamp: 'JEA 11/1/2020 23:29:07'!
PASSED!

!testRun: #TerniLapilliTest #test03OPlaysAfterX stamp: 'JEA 11/1/2020 23:29:07'!
PASSED!

!testRun: #TerniLapilliTest #test04OCanPlayItsTurn stamp: 'JEA 11/1/2020 23:29:07'!
PASSED!

!testRun: #TerniLapilliTest #test05XPlaysAfterO stamp: 'JEA 11/1/2020 23:29:07'!
PASSED!

!testRun: #TerniLapilliTest #test06PositionsDontOverlap stamp: 'JEA 11/1/2020 23:29:07'!
PASSED!

!testRun: #TerniLapilliTest #test07PositionsAreOccupied stamp: 'JEA 11/1/2020 23:29:07'!
PASSED!

!testRun: #TerniLapilliTest #test08OCantPlayInOccupiedPosition stamp: 'JEA 11/1/2020 23:29:07'!
PASSED!

!testRun: #TerniLapilliTest #test09XCantPlayInOccupiedPosition stamp: 'JEA 11/1/2020 23:29:07'!
PASSED!

!testRun: #TerniLapilliTest #test10XAndOAreAtEveryPositionPlayed stamp: 'JEA 11/1/2020 23:29:07'!
PASSED!

!testRun: #TerniLapilliTest #test11XCantPlayInInvalidPosition stamp: 'JEA 11/1/2020 23:29:07'!
PASSED!

!testRun: #TerniLapilliTest #test12OCantPlayInInvalidPosition stamp: 'JEA 11/1/2020 23:29:07'!
PASSED!

!testRun: #TerniLapilliTest #test13CantPlaceMoreThan3Chips stamp: 'JEA 11/1/2020 23:29:07'!
PASSED!
!TerniLapilliTest methodsFor: 'tests' stamp: 'JEA 11/1/2020 23:30:36'!
test14CantMoveUntilAllChipsArePlaced
	| aTerniLapilliGame  |

	aTerniLapilliGame := TerniLapilli new.
	aTerniLapilliGame putXAt: 0@0.
	aTerniLapilliGame putOAt: 0@1.
	aTerniLapilliGame putXAt: 0@2.
	aTerniLapilliGame putOAt: 1@0.
	aTerniLapilliGame putXAt: 1@1.
	
	self should: [ aTerniLapilliGame  moveOFrom: 1@0 to: 2@0. ]
		raise: Error
		withExceptionDo: [ :anException | anException description = TerniLapilli cantMoveYetDescription. ].! !

!testRun: #TerniLapilliTest #test01XPlaysFirst stamp: 'JEA 11/1/2020 23:30:41'!
PASSED!

!testRun: #TerniLapilliTest #test02XCanPlayItsTurn stamp: 'JEA 11/1/2020 23:30:41'!
PASSED!

!testRun: #TerniLapilliTest #test03OPlaysAfterX stamp: 'JEA 11/1/2020 23:30:41'!
PASSED!

!testRun: #TerniLapilliTest #test04OCanPlayItsTurn stamp: 'JEA 11/1/2020 23:30:41'!
PASSED!

!testRun: #TerniLapilliTest #test05XPlaysAfterO stamp: 'JEA 11/1/2020 23:30:41'!
PASSED!

!testRun: #TerniLapilliTest #test06PositionsDontOverlap stamp: 'JEA 11/1/2020 23:30:41'!
PASSED!

!testRun: #TerniLapilliTest #test07PositionsAreOccupied stamp: 'JEA 11/1/2020 23:30:41'!
PASSED!

!testRun: #TerniLapilliTest #test08OCantPlayInOccupiedPosition stamp: 'JEA 11/1/2020 23:30:41'!
PASSED!

!testRun: #TerniLapilliTest #test09XCantPlayInOccupiedPosition stamp: 'JEA 11/1/2020 23:30:41'!
PASSED!

!testRun: #TerniLapilliTest #test10XAndOAreAtEveryPositionPlayed stamp: 'JEA 11/1/2020 23:30:41'!
PASSED!

!testRun: #TerniLapilliTest #test11XCantPlayInInvalidPosition stamp: 'JEA 11/1/2020 23:30:41'!
PASSED!

!testRun: #TerniLapilliTest #test12OCantPlayInInvalidPosition stamp: 'JEA 11/1/2020 23:30:41'!
PASSED!

!testRun: #TerniLapilliTest #test13CantPlaceMoreThan3Chips stamp: 'JEA 11/1/2020 23:30:41'!
PASSED!

!testRun: #TerniLapilliTest #test14CantMoveUntilAllChipsArePlaced stamp: 'JEA 11/1/2020 23:30:41'!
ERROR!

!testRun: #TerniLapilliTest #test14CantMoveUntilAllChipsArePlaced stamp: 'JEA 11/1/2020 23:30:41'!
ERROR!
!TerniLapilli class methodsFor: 'error descriptions' stamp: 'JEA 11/1/2020 23:31:11'!
cantMoveYetDescription

	^'Cannot move chips until all chips are placed.'! !

!testRun: #TerniLapilliTest #test01XPlaysFirst stamp: 'JEA 11/1/2020 23:31:22'!
PASSED!

!testRun: #TerniLapilliTest #test02XCanPlayItsTurn stamp: 'JEA 11/1/2020 23:31:22'!
PASSED!

!testRun: #TerniLapilliTest #test03OPlaysAfterX stamp: 'JEA 11/1/2020 23:31:22'!
PASSED!

!testRun: #TerniLapilliTest #test04OCanPlayItsTurn stamp: 'JEA 11/1/2020 23:31:22'!
PASSED!

!testRun: #TerniLapilliTest #test05XPlaysAfterO stamp: 'JEA 11/1/2020 23:31:22'!
PASSED!

!testRun: #TerniLapilliTest #test06PositionsDontOverlap stamp: 'JEA 11/1/2020 23:31:22'!
PASSED!

!testRun: #TerniLapilliTest #test07PositionsAreOccupied stamp: 'JEA 11/1/2020 23:31:22'!
PASSED!

!testRun: #TerniLapilliTest #test08OCantPlayInOccupiedPosition stamp: 'JEA 11/1/2020 23:31:22'!
PASSED!

!testRun: #TerniLapilliTest #test09XCantPlayInOccupiedPosition stamp: 'JEA 11/1/2020 23:31:22'!
PASSED!

!testRun: #TerniLapilliTest #test10XAndOAreAtEveryPositionPlayed stamp: 'JEA 11/1/2020 23:31:22'!
PASSED!

!testRun: #TerniLapilliTest #test11XCantPlayInInvalidPosition stamp: 'JEA 11/1/2020 23:31:22'!
PASSED!

!testRun: #TerniLapilliTest #test12OCantPlayInInvalidPosition stamp: 'JEA 11/1/2020 23:31:22'!
PASSED!

!testRun: #TerniLapilliTest #test13CantPlaceMoreThan3Chips stamp: 'JEA 11/1/2020 23:31:22'!
PASSED!

!testRun: #TerniLapilliTest #test14CantMoveUntilAllChipsArePlaced stamp: 'JEA 11/1/2020 23:31:22'!
PASSED!
!TerniLapilliTest methodsFor: 'tests' stamp: 'JEA 11/1/2020 23:31:40' prior: 50875157!
test13CantPlaceMoreThan3Chips
	| aTerniLapilliGame  |

	aTerniLapilliGame := TerniLapilli new.
	aTerniLapilliGame putXAt: 0@0.
	aTerniLapilliGame putOAt: 0@1.
	aTerniLapilliGame putXAt: 0@2.
	aTerniLapilliGame putOAt: 1@0.
	aTerniLapilliGame putXAt: 1@1.
	aTerniLapilliGame putOAt: 1@2.
	
	self should: [ aTerniLapilliGame  putXAt: 2@0. ]
		raise: Error
		withExceptionDo: [ :anException | self assert: anException description = TerniLapilli noMoreChipsDescription. ].! !

!testRun: #TerniLapilliTest #test01XPlaysFirst stamp: 'JEA 11/1/2020 23:31:41'!
PASSED!

!testRun: #TerniLapilliTest #test02XCanPlayItsTurn stamp: 'JEA 11/1/2020 23:31:41'!
PASSED!

!testRun: #TerniLapilliTest #test03OPlaysAfterX stamp: 'JEA 11/1/2020 23:31:41'!
PASSED!

!testRun: #TerniLapilliTest #test04OCanPlayItsTurn stamp: 'JEA 11/1/2020 23:31:41'!
PASSED!

!testRun: #TerniLapilliTest #test05XPlaysAfterO stamp: 'JEA 11/1/2020 23:31:41'!
PASSED!

!testRun: #TerniLapilliTest #test06PositionsDontOverlap stamp: 'JEA 11/1/2020 23:31:41'!
PASSED!

!testRun: #TerniLapilliTest #test07PositionsAreOccupied stamp: 'JEA 11/1/2020 23:31:41'!
PASSED!

!testRun: #TerniLapilliTest #test08OCantPlayInOccupiedPosition stamp: 'JEA 11/1/2020 23:31:41'!
PASSED!

!testRun: #TerniLapilliTest #test09XCantPlayInOccupiedPosition stamp: 'JEA 11/1/2020 23:31:41'!
PASSED!

!testRun: #TerniLapilliTest #test10XAndOAreAtEveryPositionPlayed stamp: 'JEA 11/1/2020 23:31:41'!
PASSED!

!testRun: #TerniLapilliTest #test11XCantPlayInInvalidPosition stamp: 'JEA 11/1/2020 23:31:41'!
PASSED!

!testRun: #TerniLapilliTest #test12OCantPlayInInvalidPosition stamp: 'JEA 11/1/2020 23:31:41'!
PASSED!

!testRun: #TerniLapilliTest #test13CantPlaceMoreThan3Chips stamp: 'JEA 11/1/2020 23:31:41'!
FAILURE!

!testRun: #TerniLapilliTest #test14CantMoveUntilAllChipsArePlaced stamp: 'JEA 11/1/2020 23:31:41'!
PASSED!

!testRun: #TerniLapilliTest #test13CantPlaceMoreThan3Chips stamp: 'JEA 11/1/2020 23:31:41'!
FAILURE!
!TerniLapilliTest methodsFor: 'tests' stamp: 'JEA 11/1/2020 23:31:47' prior: 50875362!
test14CantMoveUntilAllChipsArePlaced
	| aTerniLapilliGame  |

	aTerniLapilliGame := TerniLapilli new.
	aTerniLapilliGame putXAt: 0@0.
	aTerniLapilliGame putOAt: 0@1.
	aTerniLapilliGame putXAt: 0@2.
	aTerniLapilliGame putOAt: 1@0.
	aTerniLapilliGame putXAt: 1@1.
	
	self should: [ aTerniLapilliGame  moveOFrom: 1@0 to: 2@0. ]
		raise: Error
		withExceptionDo: [ :anException | self assert: anException description = TerniLapilli cantMoveYetDescription. ].! !

!testRun: #TerniLapilliTest #test01XPlaysFirst stamp: 'JEA 11/1/2020 23:31:51'!
PASSED!

!testRun: #TerniLapilliTest #test02XCanPlayItsTurn stamp: 'JEA 11/1/2020 23:31:51'!
PASSED!

!testRun: #TerniLapilliTest #test03OPlaysAfterX stamp: 'JEA 11/1/2020 23:31:51'!
PASSED!

!testRun: #TerniLapilliTest #test04OCanPlayItsTurn stamp: 'JEA 11/1/2020 23:31:51'!
PASSED!

!testRun: #TerniLapilliTest #test05XPlaysAfterO stamp: 'JEA 11/1/2020 23:31:51'!
PASSED!

!testRun: #TerniLapilliTest #test06PositionsDontOverlap stamp: 'JEA 11/1/2020 23:31:51'!
PASSED!

!testRun: #TerniLapilliTest #test07PositionsAreOccupied stamp: 'JEA 11/1/2020 23:31:51'!
PASSED!

!testRun: #TerniLapilliTest #test08OCantPlayInOccupiedPosition stamp: 'JEA 11/1/2020 23:31:51'!
PASSED!

!testRun: #TerniLapilliTest #test09XCantPlayInOccupiedPosition stamp: 'JEA 11/1/2020 23:31:51'!
PASSED!

!testRun: #TerniLapilliTest #test10XAndOAreAtEveryPositionPlayed stamp: 'JEA 11/1/2020 23:31:51'!
PASSED!

!testRun: #TerniLapilliTest #test11XCantPlayInInvalidPosition stamp: 'JEA 11/1/2020 23:31:51'!
PASSED!

!testRun: #TerniLapilliTest #test12OCantPlayInInvalidPosition stamp: 'JEA 11/1/2020 23:31:51'!
PASSED!

!testRun: #TerniLapilliTest #test13CantPlaceMoreThan3Chips stamp: 'JEA 11/1/2020 23:31:51'!
FAILURE!

!testRun: #TerniLapilliTest #test14CantMoveUntilAllChipsArePlaced stamp: 'JEA 11/1/2020 23:31:51'!
FAILURE!

!testRun: #TerniLapilliTest #test01XPlaysFirst stamp: 'JEA 11/1/2020 23:31:55'!
PASSED!

!testRun: #TerniLapilliTest #test02XCanPlayItsTurn stamp: 'JEA 11/1/2020 23:31:55'!
PASSED!

!testRun: #TerniLapilliTest #test03OPlaysAfterX stamp: 'JEA 11/1/2020 23:31:55'!
PASSED!

!testRun: #TerniLapilliTest #test04OCanPlayItsTurn stamp: 'JEA 11/1/2020 23:31:55'!
PASSED!

!testRun: #TerniLapilliTest #test05XPlaysAfterO stamp: 'JEA 11/1/2020 23:31:55'!
PASSED!

!testRun: #TerniLapilliTest #test06PositionsDontOverlap stamp: 'JEA 11/1/2020 23:31:55'!
PASSED!

!testRun: #TerniLapilliTest #test07PositionsAreOccupied stamp: 'JEA 11/1/2020 23:31:55'!
PASSED!

!testRun: #TerniLapilliTest #test08OCantPlayInOccupiedPosition stamp: 'JEA 11/1/2020 23:31:55'!
PASSED!

!testRun: #TerniLapilliTest #test09XCantPlayInOccupiedPosition stamp: 'JEA 11/1/2020 23:31:55'!
PASSED!

!testRun: #TerniLapilliTest #test10XAndOAreAtEveryPositionPlayed stamp: 'JEA 11/1/2020 23:31:55'!
PASSED!

!testRun: #TerniLapilliTest #test11XCantPlayInInvalidPosition stamp: 'JEA 11/1/2020 23:31:55'!
PASSED!

!testRun: #TerniLapilliTest #test12OCantPlayInInvalidPosition stamp: 'JEA 11/1/2020 23:31:55'!
PASSED!

!testRun: #TerniLapilliTest #test13CantPlaceMoreThan3Chips stamp: 'JEA 11/1/2020 23:31:55'!
FAILURE!

!testRun: #TerniLapilliTest #test14CantMoveUntilAllChipsArePlaced stamp: 'JEA 11/1/2020 23:31:55'!
FAILURE!

!testRun: #TerniLapilliTest #test13CantPlaceMoreThan3Chips stamp: 'JEA 11/1/2020 23:31:57'!
FAILURE!

anException description!

TerniLapilli noMoreChipsDescription!
!TerniLapilliTest methodsFor: 'tests' stamp: 'JEA 11/1/2020 23:33:08' prior: 50875539!
test14CantMoveUntilAllChipsArePlaced
	| aTerniLapilliGame  |

	aTerniLapilliGame := TerniLapilli new.
	aTerniLapilliGame putXAt: 0@0.
	aTerniLapilliGame putOAt: 0@1.
	aTerniLapilliGame putXAt: 0@2.
	aTerniLapilliGame putOAt: 1@0.
	aTerniLapilliGame putXAt: 1@1.
	
	self should: [ aTerniLapilliGame  moveOFrom: 1@0 to: 2@0. ]
		raise: Error
		withExceptionDo: [ :anException | self assert: anException description = TerniLapilli cantMoveYetDescription. ].! !
!TerniLapilli methodsFor: 'playing - private' stamp: 'JEA 11/1/2020 23:38:29' prior: 50875270!
put: aTerniLapilliChip

	chips size < 6 
		ifTrue: [
			(self isOccupied: aTerniLapilliChip position) ifTrue: [self error: self class positionOccupiedDescription. ].
			
			chips add: aTerniLapilliChip.
			isXPlaying := isXPlaying not.
		]
		ifFalse: [
			self error: self class noMoreChipsDescription.
		]! !

!testRun: #TerniLapilliTest #test01XPlaysFirst stamp: 'JEA 11/1/2020 23:38:30'!
PASSED!

!testRun: #TerniLapilliTest #test02XCanPlayItsTurn stamp: 'JEA 11/1/2020 23:38:30'!
PASSED!

!testRun: #TerniLapilliTest #test03OPlaysAfterX stamp: 'JEA 11/1/2020 23:38:30'!
PASSED!

!testRun: #TerniLapilliTest #test04OCanPlayItsTurn stamp: 'JEA 11/1/2020 23:38:30'!
PASSED!

!testRun: #TerniLapilliTest #test05XPlaysAfterO stamp: 'JEA 11/1/2020 23:38:30'!
PASSED!

!testRun: #TerniLapilliTest #test06PositionsDontOverlap stamp: 'JEA 11/1/2020 23:38:30'!
PASSED!

!testRun: #TerniLapilliTest #test07PositionsAreOccupied stamp: 'JEA 11/1/2020 23:38:30'!
PASSED!

!testRun: #TerniLapilliTest #test08OCantPlayInOccupiedPosition stamp: 'JEA 11/1/2020 23:38:30'!
PASSED!

!testRun: #TerniLapilliTest #test09XCantPlayInOccupiedPosition stamp: 'JEA 11/1/2020 23:38:30'!
PASSED!

!testRun: #TerniLapilliTest #test10XAndOAreAtEveryPositionPlayed stamp: 'JEA 11/1/2020 23:38:30'!
PASSED!

!testRun: #TerniLapilliTest #test11XCantPlayInInvalidPosition stamp: 'JEA 11/1/2020 23:38:30'!
PASSED!

!testRun: #TerniLapilliTest #test12OCantPlayInInvalidPosition stamp: 'JEA 11/1/2020 23:38:30'!
PASSED!

!testRun: #TerniLapilliTest #test13CantPlaceMoreThan3Chips stamp: 'JEA 11/1/2020 23:38:30'!
FAILURE!

!testRun: #TerniLapilliTest #test14CantMoveUntilAllChipsArePlaced stamp: 'JEA 11/1/2020 23:38:30'!
FAILURE!

!testRun: #TerniLapilliTest #test13CantPlaceMoreThan3Chips stamp: 'JEA 11/1/2020 23:38:32'!
FAILURE!

TerniLapilli noMoreChipsDescription.!

anException!

anException description!

!testRun: #TerniLapilliTest #test14CantMoveUntilAllChipsArePlaced stamp: 'JEA 11/1/2020 23:40:18'!
FAILURE!

!testRun: #TerniLapilliTest #test01XPlaysFirst stamp: 'JEA 11/1/2020 23:40:58'!
PASSED!

!testRun: #TerniLapilliTest #test02XCanPlayItsTurn stamp: 'JEA 11/1/2020 23:40:58'!
PASSED!

!testRun: #TerniLapilliTest #test03OPlaysAfterX stamp: 'JEA 11/1/2020 23:40:58'!
PASSED!

!testRun: #TerniLapilliTest #test04OCanPlayItsTurn stamp: 'JEA 11/1/2020 23:40:58'!
PASSED!

!testRun: #TerniLapilliTest #test05XPlaysAfterO stamp: 'JEA 11/1/2020 23:40:58'!
PASSED!

!testRun: #TerniLapilliTest #test06PositionsDontOverlap stamp: 'JEA 11/1/2020 23:40:58'!
PASSED!

!testRun: #TerniLapilliTest #test07PositionsAreOccupied stamp: 'JEA 11/1/2020 23:40:58'!
PASSED!

!testRun: #TerniLapilliTest #test08OCantPlayInOccupiedPosition stamp: 'JEA 11/1/2020 23:40:58'!
PASSED!

!testRun: #TerniLapilliTest #test09XCantPlayInOccupiedPosition stamp: 'JEA 11/1/2020 23:40:58'!
PASSED!

!testRun: #TerniLapilliTest #test10XAndOAreAtEveryPositionPlayed stamp: 'JEA 11/1/2020 23:40:58'!
PASSED!

!testRun: #TerniLapilliTest #test11XCantPlayInInvalidPosition stamp: 'JEA 11/1/2020 23:40:58'!
PASSED!

!testRun: #TerniLapilliTest #test12OCantPlayInInvalidPosition stamp: 'JEA 11/1/2020 23:40:58'!
PASSED!

!testRun: #TerniLapilliTest #test13CantPlaceMoreThan3Chips stamp: 'JEA 11/1/2020 23:40:58'!
FAILURE!

!testRun: #TerniLapilliTest #test14CantMoveUntilAllChipsArePlaced stamp: 'JEA 11/1/2020 23:40:58'!
FAILURE!

!testRun: #TerniLapilliTest #test13CantPlaceMoreThan3Chips stamp: 'JEA 11/1/2020 23:41:00'!
FAILURE!

anException messageText!
!TerniLapilliTest methodsFor: 'tests' stamp: 'JEA 11/1/2020 23:41:20' prior: 50875475!
test13CantPlaceMoreThan3Chips
	| aTerniLapilliGame  |

	aTerniLapilliGame := TerniLapilli new.
	aTerniLapilliGame putXAt: 0@0.
	aTerniLapilliGame putOAt: 0@1.
	aTerniLapilliGame putXAt: 0@2.
	aTerniLapilliGame putOAt: 1@0.
	aTerniLapilliGame putXAt: 1@1.
	aTerniLapilliGame putOAt: 1@2.
	
	self should: [ aTerniLapilliGame  putXAt: 2@0. ]
		raise: Error
		withExceptionDo: [ :anException | self assert: anException messageText = TerniLapilli noMoreChipsDescription. ].! !
!TerniLapilliTest methodsFor: 'tests' stamp: 'JEA 11/1/2020 23:41:25' prior: 50875648!
test14CantMoveUntilAllChipsArePlaced
	| aTerniLapilliGame  |

	aTerniLapilliGame := TerniLapilli new.
	aTerniLapilliGame putXAt: 0@0.
	aTerniLapilliGame putOAt: 0@1.
	aTerniLapilliGame putXAt: 0@2.
	aTerniLapilliGame putOAt: 1@0.
	aTerniLapilliGame putXAt: 1@1.
	
	self should: [ aTerniLapilliGame  moveOFrom: 1@0 to: 2@0. ]
		raise: Error
		withExceptionDo: [ :anException | self assert: anException messageText = TerniLapilli cantMoveYetDescription. ].! !

!testRun: #TerniLapilliTest #test01XPlaysFirst stamp: 'JEA 11/1/2020 23:41:26'!
PASSED!

!testRun: #TerniLapilliTest #test02XCanPlayItsTurn stamp: 'JEA 11/1/2020 23:41:26'!
PASSED!

!testRun: #TerniLapilliTest #test03OPlaysAfterX stamp: 'JEA 11/1/2020 23:41:26'!
PASSED!

!testRun: #TerniLapilliTest #test04OCanPlayItsTurn stamp: 'JEA 11/1/2020 23:41:26'!
PASSED!

!testRun: #TerniLapilliTest #test05XPlaysAfterO stamp: 'JEA 11/1/2020 23:41:26'!
PASSED!

!testRun: #TerniLapilliTest #test06PositionsDontOverlap stamp: 'JEA 11/1/2020 23:41:26'!
PASSED!

!testRun: #TerniLapilliTest #test07PositionsAreOccupied stamp: 'JEA 11/1/2020 23:41:26'!
PASSED!

!testRun: #TerniLapilliTest #test08OCantPlayInOccupiedPosition stamp: 'JEA 11/1/2020 23:41:26'!
PASSED!

!testRun: #TerniLapilliTest #test09XCantPlayInOccupiedPosition stamp: 'JEA 11/1/2020 23:41:26'!
PASSED!

!testRun: #TerniLapilliTest #test10XAndOAreAtEveryPositionPlayed stamp: 'JEA 11/1/2020 23:41:26'!
PASSED!

!testRun: #TerniLapilliTest #test11XCantPlayInInvalidPosition stamp: 'JEA 11/1/2020 23:41:26'!
PASSED!

!testRun: #TerniLapilliTest #test12OCantPlayInInvalidPosition stamp: 'JEA 11/1/2020 23:41:26'!
PASSED!

!testRun: #TerniLapilliTest #test13CantPlaceMoreThan3Chips stamp: 'JEA 11/1/2020 23:41:26'!
PASSED!

!testRun: #TerniLapilliTest #test14CantMoveUntilAllChipsArePlaced stamp: 'JEA 11/1/2020 23:41:26'!
FAILURE!

!testRun: #TerniLapilliTest #test14CantMoveUntilAllChipsArePlaced stamp: 'JEA 11/1/2020 23:41:26'!
FAILURE!

!testRun: #TerniLapilliTest #test01XPlaysFirst stamp: 'JEA 11/1/2020 23:41:43'!
PASSED!

!testRun: #TerniLapilliTest #test02XCanPlayItsTurn stamp: 'JEA 11/1/2020 23:41:43'!
PASSED!

!testRun: #TerniLapilliTest #test03OPlaysAfterX stamp: 'JEA 11/1/2020 23:41:43'!
PASSED!

!testRun: #TerniLapilliTest #test04OCanPlayItsTurn stamp: 'JEA 11/1/2020 23:41:43'!
PASSED!

!testRun: #TerniLapilliTest #test05XPlaysAfterO stamp: 'JEA 11/1/2020 23:41:43'!
PASSED!

!testRun: #TerniLapilliTest #test06PositionsDontOverlap stamp: 'JEA 11/1/2020 23:41:43'!
PASSED!

!testRun: #TerniLapilliTest #test07PositionsAreOccupied stamp: 'JEA 11/1/2020 23:41:43'!
PASSED!

!testRun: #TerniLapilliTest #test08OCantPlayInOccupiedPosition stamp: 'JEA 11/1/2020 23:41:43'!
PASSED!

!testRun: #TerniLapilliTest #test09XCantPlayInOccupiedPosition stamp: 'JEA 11/1/2020 23:41:43'!
PASSED!

!testRun: #TerniLapilliTest #test10XAndOAreAtEveryPositionPlayed stamp: 'JEA 11/1/2020 23:41:43'!
PASSED!

!testRun: #TerniLapilliTest #test11XCantPlayInInvalidPosition stamp: 'JEA 11/1/2020 23:41:43'!
PASSED!

!testRun: #TerniLapilliTest #test12OCantPlayInInvalidPosition stamp: 'JEA 11/1/2020 23:41:43'!
PASSED!

!testRun: #TerniLapilliTest #test13CantPlaceMoreThan3Chips stamp: 'JEA 11/1/2020 23:41:43'!
PASSED!

!testRun: #TerniLapilliTest #test14CantMoveUntilAllChipsArePlaced stamp: 'JEA 11/1/2020 23:41:43'!
FAILURE!

!testRun: #TerniLapilliTest #test14CantMoveUntilAllChipsArePlaced stamp: 'JEA 11/1/2020 23:41:43'!
FAILURE!

anException messageText!
!TerniLapilli methodsFor: 'playing' stamp: 'JEA 11/1/2020 23:43:01'!
moveOFrom: currentPosition to: newPosition

	self error: self class cantMoveYetDescription.! !

!testRun: #TerniLapilliTest #test01XPlaysFirst stamp: 'JEA 11/1/2020 23:43:03'!
PASSED!

!testRun: #TerniLapilliTest #test02XCanPlayItsTurn stamp: 'JEA 11/1/2020 23:43:03'!
PASSED!

!testRun: #TerniLapilliTest #test03OPlaysAfterX stamp: 'JEA 11/1/2020 23:43:03'!
PASSED!

!testRun: #TerniLapilliTest #test04OCanPlayItsTurn stamp: 'JEA 11/1/2020 23:43:03'!
PASSED!

!testRun: #TerniLapilliTest #test05XPlaysAfterO stamp: 'JEA 11/1/2020 23:43:03'!
PASSED!

!testRun: #TerniLapilliTest #test06PositionsDontOverlap stamp: 'JEA 11/1/2020 23:43:03'!
PASSED!

!testRun: #TerniLapilliTest #test07PositionsAreOccupied stamp: 'JEA 11/1/2020 23:43:03'!
PASSED!

!testRun: #TerniLapilliTest #test08OCantPlayInOccupiedPosition stamp: 'JEA 11/1/2020 23:43:03'!
PASSED!

!testRun: #TerniLapilliTest #test09XCantPlayInOccupiedPosition stamp: 'JEA 11/1/2020 23:43:03'!
PASSED!

!testRun: #TerniLapilliTest #test10XAndOAreAtEveryPositionPlayed stamp: 'JEA 11/1/2020 23:43:03'!
PASSED!

!testRun: #TerniLapilliTest #test11XCantPlayInInvalidPosition stamp: 'JEA 11/1/2020 23:43:03'!
PASSED!

!testRun: #TerniLapilliTest #test12OCantPlayInInvalidPosition stamp: 'JEA 11/1/2020 23:43:03'!
PASSED!

!testRun: #TerniLapilliTest #test13CantPlaceMoreThan3Chips stamp: 'JEA 11/1/2020 23:43:03'!
PASSED!

!testRun: #TerniLapilliTest #test14CantMoveUntilAllChipsArePlaced stamp: 'JEA 11/1/2020 23:43:03'!
PASSED!

----SNAPSHOT----(1 November 2020 23:43:19) CuisUniversity-4384.image priorSource: 17382989!
!TerniLapilliTest methodsFor: 'tests' stamp: 'JEA 11/1/2020 23:46:31'!
test14XCantMoveUntilAllChipsArePlaced
	| aTerniLapilliGame  |

	aTerniLapilliGame := TerniLapilli new.
	aTerniLapilliGame putXAt: 0@0.
	aTerniLapilliGame putOAt: 0@1.
	aTerniLapilliGame putXAt: 0@2.
	aTerniLapilliGame putOAt: 1@0.
	
	self should: [ aTerniLapilliGame  moveXFrom: 0@2 to: 1@2. ]
		raise: Error
		withExceptionDo: [ :anException | self assert: anException messageText = TerniLapilli cantMoveYetDescription. ].! !
!TerniLapilliTest methodsFor: 'tests' stamp: 'JEA 11/1/2020 23:46:38'!
test15XCantMoveUntilAllChipsArePlaced
	| aTerniLapilliGame  |

	aTerniLapilliGame := TerniLapilli new.
	aTerniLapilliGame putXAt: 0@0.
	aTerniLapilliGame putOAt: 0@1.
	aTerniLapilliGame putXAt: 0@2.
	aTerniLapilliGame putOAt: 1@0.
	
	self should: [ aTerniLapilliGame  moveXFrom: 0@2 to: 1@2. ]
		raise: Error
		withExceptionDo: [ :anException | self assert: anException messageText = TerniLapilli cantMoveYetDescription. ].! !

!methodRemoval: TerniLapilliTest #test14XCantMoveUntilAllChipsArePlaced stamp: 'JEA 11/1/2020 23:46:38'!
test14XCantMoveUntilAllChipsArePlaced
	| aTerniLapilliGame  |

	aTerniLapilliGame := TerniLapilli new.
	aTerniLapilliGame putXAt: 0@0.
	aTerniLapilliGame putOAt: 0@1.
	aTerniLapilliGame putXAt: 0@2.
	aTerniLapilliGame putOAt: 1@0.
	
	self should: [ aTerniLapilliGame  moveXFrom: 0@2 to: 1@2. ]
		raise: Error
		withExceptionDo: [ :anException | self assert: anException messageText = TerniLapilli cantMoveYetDescription. ].!
!TerniLapilliTest methodsFor: 'tests' stamp: 'JEA 11/1/2020 23:46:43'!
test14OCantMoveUntilAllChipsArePlaced
	| aTerniLapilliGame  |

	aTerniLapilliGame := TerniLapilli new.
	aTerniLapilliGame putXAt: 0@0.
	aTerniLapilliGame putOAt: 0@1.
	aTerniLapilliGame putXAt: 0@2.
	aTerniLapilliGame putOAt: 1@0.
	aTerniLapilliGame putXAt: 1@1.
	
	self should: [ aTerniLapilliGame  moveOFrom: 1@0 to: 2@0. ]
		raise: Error
		withExceptionDo: [ :anException | self assert: anException messageText = TerniLapilli cantMoveYetDescription. ].! !

!methodRemoval: TerniLapilliTest #test14CantMoveUntilAllChipsArePlaced stamp: 'JEA 11/1/2020 23:46:43'!
test14CantMoveUntilAllChipsArePlaced
	| aTerniLapilliGame  |

	aTerniLapilliGame := TerniLapilli new.
	aTerniLapilliGame putXAt: 0@0.
	aTerniLapilliGame putOAt: 0@1.
	aTerniLapilliGame putXAt: 0@2.
	aTerniLapilliGame putOAt: 1@0.
	aTerniLapilliGame putXAt: 1@1.
	
	self should: [ aTerniLapilliGame  moveOFrom: 1@0 to: 2@0. ]
		raise: Error
		withExceptionDo: [ :anException | self assert: anException messageText = TerniLapilli cantMoveYetDescription. ].!

!testRun: #TerniLapilliTest #test01XPlaysFirst stamp: 'JEA 11/1/2020 23:46:51'!
PASSED!

!testRun: #TerniLapilliTest #test02XCanPlayItsTurn stamp: 'JEA 11/1/2020 23:46:51'!
PASSED!

!testRun: #TerniLapilliTest #test03OPlaysAfterX stamp: 'JEA 11/1/2020 23:46:51'!
PASSED!

!testRun: #TerniLapilliTest #test04OCanPlayItsTurn stamp: 'JEA 11/1/2020 23:46:51'!
PASSED!

!testRun: #TerniLapilliTest #test05XPlaysAfterO stamp: 'JEA 11/1/2020 23:46:51'!
PASSED!

!testRun: #TerniLapilliTest #test06PositionsDontOverlap stamp: 'JEA 11/1/2020 23:46:51'!
PASSED!

!testRun: #TerniLapilliTest #test07PositionsAreOccupied stamp: 'JEA 11/1/2020 23:46:51'!
PASSED!

!testRun: #TerniLapilliTest #test08OCantPlayInOccupiedPosition stamp: 'JEA 11/1/2020 23:46:51'!
PASSED!

!testRun: #TerniLapilliTest #test09XCantPlayInOccupiedPosition stamp: 'JEA 11/1/2020 23:46:51'!
PASSED!

!testRun: #TerniLapilliTest #test10XAndOAreAtEveryPositionPlayed stamp: 'JEA 11/1/2020 23:46:51'!
PASSED!

!testRun: #TerniLapilliTest #test11XCantPlayInInvalidPosition stamp: 'JEA 11/1/2020 23:46:51'!
PASSED!

!testRun: #TerniLapilliTest #test12OCantPlayInInvalidPosition stamp: 'JEA 11/1/2020 23:46:51'!
PASSED!

!testRun: #TerniLapilliTest #test13CantPlaceMoreThan3Chips stamp: 'JEA 11/1/2020 23:46:51'!
PASSED!

!testRun: #TerniLapilliTest #test14OCantMoveUntilAllChipsArePlaced stamp: 'JEA 11/1/2020 23:46:51'!
PASSED!

!testRun: #TerniLapilliTest #test15XCantMoveUntilAllChipsArePlaced stamp: 'JEA 11/1/2020 23:46:51'!
FAILURE!

!testRun: #TerniLapilliTest #test15XCantMoveUntilAllChipsArePlaced stamp: 'JEA 11/1/2020 23:46:51'!
FAILURE!
!TerniLapilli methodsFor: 'playing' stamp: 'JEA 11/1/2020 23:47:06'!
moveXFrom: currentPosition to: newPosition

	self error: self class cantMoveYetDescription.! !

!testRun: #TerniLapilliTest #test01XPlaysFirst stamp: 'JEA 11/1/2020 23:47:07'!
PASSED!

!testRun: #TerniLapilliTest #test02XCanPlayItsTurn stamp: 'JEA 11/1/2020 23:47:07'!
PASSED!

!testRun: #TerniLapilliTest #test03OPlaysAfterX stamp: 'JEA 11/1/2020 23:47:07'!
PASSED!

!testRun: #TerniLapilliTest #test04OCanPlayItsTurn stamp: 'JEA 11/1/2020 23:47:07'!
PASSED!

!testRun: #TerniLapilliTest #test05XPlaysAfterO stamp: 'JEA 11/1/2020 23:47:07'!
PASSED!

!testRun: #TerniLapilliTest #test06PositionsDontOverlap stamp: 'JEA 11/1/2020 23:47:07'!
PASSED!

!testRun: #TerniLapilliTest #test07PositionsAreOccupied stamp: 'JEA 11/1/2020 23:47:07'!
PASSED!

!testRun: #TerniLapilliTest #test08OCantPlayInOccupiedPosition stamp: 'JEA 11/1/2020 23:47:07'!
PASSED!

!testRun: #TerniLapilliTest #test09XCantPlayInOccupiedPosition stamp: 'JEA 11/1/2020 23:47:07'!
PASSED!

!testRun: #TerniLapilliTest #test10XAndOAreAtEveryPositionPlayed stamp: 'JEA 11/1/2020 23:47:07'!
PASSED!

!testRun: #TerniLapilliTest #test11XCantPlayInInvalidPosition stamp: 'JEA 11/1/2020 23:47:07'!
PASSED!

!testRun: #TerniLapilliTest #test12OCantPlayInInvalidPosition stamp: 'JEA 11/1/2020 23:47:07'!
PASSED!

!testRun: #TerniLapilliTest #test13CantPlaceMoreThan3Chips stamp: 'JEA 11/1/2020 23:47:07'!
PASSED!

!testRun: #TerniLapilliTest #test14OCantMoveUntilAllChipsArePlaced stamp: 'JEA 11/1/2020 23:47:07'!
PASSED!

!testRun: #TerniLapilliTest #test15XCantMoveUntilAllChipsArePlaced stamp: 'JEA 11/1/2020 23:47:07'!
PASSED!
!TerniLapilliTest methodsFor: 'tests' stamp: 'JEA 11/1/2020 23:47:25'!
test15OCantMoveUntilAllChipsArePlaced
	| aTerniLapilliGame  |

	aTerniLapilliGame := TerniLapilli new.
	aTerniLapilliGame putXAt: 0@0.
	aTerniLapilliGame putOAt: 0@1.
	aTerniLapilliGame putXAt: 0@2.
	aTerniLapilliGame putOAt: 1@0.
	aTerniLapilliGame putXAt: 1@1.
	
	self should: [ aTerniLapilliGame  moveOFrom: 1@0 to: 2@0. ]
		raise: Error
		withExceptionDo: [ :anException | self assert: anException messageText = TerniLapilli cantMoveYetDescription. ].! !

!methodRemoval: TerniLapilliTest #test14OCantMoveUntilAllChipsArePlaced stamp: 'JEA 11/1/2020 23:47:25'!
test14OCantMoveUntilAllChipsArePlaced
	| aTerniLapilliGame  |

	aTerniLapilliGame := TerniLapilli new.
	aTerniLapilliGame putXAt: 0@0.
	aTerniLapilliGame putOAt: 0@1.
	aTerniLapilliGame putXAt: 0@2.
	aTerniLapilliGame putOAt: 1@0.
	aTerniLapilliGame putXAt: 1@1.
	
	self should: [ aTerniLapilliGame  moveOFrom: 1@0 to: 2@0. ]
		raise: Error
		withExceptionDo: [ :anException | self assert: anException messageText = TerniLapilli cantMoveYetDescription. ].!
!TerniLapilliTest methodsFor: 'tests' stamp: 'JEA 11/1/2020 23:47:28'!
test14XCantMoveUntilAllChipsArePlaced
	| aTerniLapilliGame  |

	aTerniLapilliGame := TerniLapilli new.
	aTerniLapilliGame putXAt: 0@0.
	aTerniLapilliGame putOAt: 0@1.
	aTerniLapilliGame putXAt: 0@2.
	aTerniLapilliGame putOAt: 1@0.
	
	self should: [ aTerniLapilliGame  moveXFrom: 0@2 to: 1@2. ]
		raise: Error
		withExceptionDo: [ :anException | self assert: anException messageText = TerniLapilli cantMoveYetDescription. ].! !

!methodRemoval: TerniLapilliTest #test15XCantMoveUntilAllChipsArePlaced stamp: 'JEA 11/1/2020 23:47:28'!
test15XCantMoveUntilAllChipsArePlaced
	| aTerniLapilliGame  |

	aTerniLapilliGame := TerniLapilli new.
	aTerniLapilliGame putXAt: 0@0.
	aTerniLapilliGame putOAt: 0@1.
	aTerniLapilliGame putXAt: 0@2.
	aTerniLapilliGame putOAt: 1@0.
	
	self should: [ aTerniLapilliGame  moveXFrom: 0@2 to: 1@2. ]
		raise: Error
		withExceptionDo: [ :anException | self assert: anException messageText = TerniLapilli cantMoveYetDescription. ].!

!testRun: #TerniLapilliTest #test01XPlaysFirst stamp: 'JEA 11/1/2020 23:47:29'!
PASSED!

!testRun: #TerniLapilliTest #test02XCanPlayItsTurn stamp: 'JEA 11/1/2020 23:47:29'!
PASSED!

!testRun: #TerniLapilliTest #test03OPlaysAfterX stamp: 'JEA 11/1/2020 23:47:29'!
PASSED!

!testRun: #TerniLapilliTest #test04OCanPlayItsTurn stamp: 'JEA 11/1/2020 23:47:29'!
PASSED!

!testRun: #TerniLapilliTest #test05XPlaysAfterO stamp: 'JEA 11/1/2020 23:47:29'!
PASSED!

!testRun: #TerniLapilliTest #test06PositionsDontOverlap stamp: 'JEA 11/1/2020 23:47:29'!
PASSED!

!testRun: #TerniLapilliTest #test07PositionsAreOccupied stamp: 'JEA 11/1/2020 23:47:29'!
PASSED!

!testRun: #TerniLapilliTest #test08OCantPlayInOccupiedPosition stamp: 'JEA 11/1/2020 23:47:29'!
PASSED!

!testRun: #TerniLapilliTest #test09XCantPlayInOccupiedPosition stamp: 'JEA 11/1/2020 23:47:29'!
PASSED!

!testRun: #TerniLapilliTest #test10XAndOAreAtEveryPositionPlayed stamp: 'JEA 11/1/2020 23:47:29'!
PASSED!

!testRun: #TerniLapilliTest #test11XCantPlayInInvalidPosition stamp: 'JEA 11/1/2020 23:47:29'!
PASSED!

!testRun: #TerniLapilliTest #test12OCantPlayInInvalidPosition stamp: 'JEA 11/1/2020 23:47:29'!
PASSED!

!testRun: #TerniLapilliTest #test13CantPlaceMoreThan3Chips stamp: 'JEA 11/1/2020 23:47:29'!
PASSED!

!testRun: #TerniLapilliTest #test14XCantMoveUntilAllChipsArePlaced stamp: 'JEA 11/1/2020 23:47:29'!
PASSED!

!testRun: #TerniLapilliTest #test15OCantMoveUntilAllChipsArePlaced stamp: 'JEA 11/1/2020 23:47:29'!
PASSED!
!TerniLapilliTest methodsFor: 'tests' stamp: 'JEA 11/1/2020 23:47:49'!
test16XCanMoveAfterAllChipsArePlaced
	| aTerniLapilliGame |

	aTerniLapilliGame := TerniLapilli new.
	aTerniLapilliGame putXAt: 0@0.
	aTerniLapilliGame putOAt: 0@1.
	aTerniLapilliGame putXAt: 0@2.
	aTerniLapilliGame putOAt: 1@0.
	aTerniLapilliGame putXAt: 1@1.
	
	self should: [ aTerniLapilliGame  moveOFrom: 1@0 to: 2@0. ]
		raise: Error
		withExceptionDo: [ :anException | self assert: anException messageText = TerniLapilli cantMoveYetDescription. ].! !
!TerniLapilliTest methodsFor: 'tests' stamp: 'JEA 11/1/2020 23:47:53' prior: 50876146!
test15OCantMoveUntilAllChipsArePlaced
	| aTerniLapilliGame |

	aTerniLapilliGame := TerniLapilli new.
	aTerniLapilliGame putXAt: 0@0.
	aTerniLapilliGame putOAt: 0@1.
	aTerniLapilliGame putXAt: 0@2.
	aTerniLapilliGame putOAt: 1@0.
	aTerniLapilliGame putXAt: 1@1.
	
	self should: [ aTerniLapilliGame  moveOFrom: 1@0 to: 2@0. ]
		raise: Error
		withExceptionDo: [ :anException | self assert: anException messageText = TerniLapilli cantMoveYetDescription. ].! !
!TerniLapilliTest methodsFor: 'tests' stamp: 'JEA 11/1/2020 23:47:56' prior: 50876181!
test14XCantMoveUntilAllChipsArePlaced
	| aTerniLapilliGame |

	aTerniLapilliGame := TerniLapilli new.
	aTerniLapilliGame putXAt: 0@0.
	aTerniLapilliGame putOAt: 0@1.
	aTerniLapilliGame putXAt: 0@2.
	aTerniLapilliGame putOAt: 1@0.
	
	self should: [ aTerniLapilliGame  moveXFrom: 0@2 to: 1@2. ]
		raise: Error
		withExceptionDo: [ :anException | self assert: anException messageText = TerniLapilli cantMoveYetDescription. ].! !
!TerniLapilliTest methodsFor: 'tests' stamp: 'JEA 11/1/2020 23:48:00' prior: 50875779!
test13CantPlaceMoreThan3Chips
	| aTerniLapilliGame |

	aTerniLapilliGame := TerniLapilli new.
	aTerniLapilliGame putXAt: 0@0.
	aTerniLapilliGame putOAt: 0@1.
	aTerniLapilliGame putXAt: 0@2.
	aTerniLapilliGame putOAt: 1@0.
	aTerniLapilliGame putXAt: 1@1.
	aTerniLapilliGame putOAt: 1@2.
	
	self should: [ aTerniLapilliGame  putXAt: 2@0. ]
		raise: Error
		withExceptionDo: [ :anException | self assert: anException messageText = TerniLapilli noMoreChipsDescription. ].! !
!TerniLapilliTest methodsFor: 'tests' stamp: 'JEA 11/1/2020 23:48:03' prior: 50874820!
test12OCantPlayInInvalidPosition
	| aTerniLapilliGame |

	aTerniLapilliGame := TerniLapilli new.
	aTerniLapilliGame putXAt: 0@1.
	
	self should: [ aTerniLapilliGame  putOAt: 3@2. ]
		raise: Error
		withExceptionDo: [ :anException | anException description = TerniLapilliChip invalidPositionDescription. ].! !
!TerniLapilliTest methodsFor: 'tests' stamp: 'JEA 11/1/2020 23:48:23' prior: 50876330!
test12OCantPlayInInvalidPosition
	| aTerniLapilliGame |

	aTerniLapilliGame := TerniLapilli new.
	aTerniLapilliGame putXAt: 0@1.
	
	self should: [ aTerniLapilliGame putOAt: 3@2. ]
		raise: Error
		withExceptionDo: [ :anException | anException description = TerniLapilliChip invalidPositionDescription. ].! !
!TerniLapilliTest methodsFor: 'tests' stamp: 'JEA 11/1/2020 23:48:27' prior: 50876312!
test13CantPlaceMoreThan3Chips
	| aTerniLapilliGame |

	aTerniLapilliGame := TerniLapilli new.
	aTerniLapilliGame putXAt: 0@0.
	aTerniLapilliGame putOAt: 0@1.
	aTerniLapilliGame putXAt: 0@2.
	aTerniLapilliGame putOAt: 1@0.
	aTerniLapilliGame putXAt: 1@1.
	aTerniLapilliGame putOAt: 1@2.
	
	self should: [ aTerniLapilliGame putXAt: 2@0. ]
		raise: Error
		withExceptionDo: [ :anException | self assert: anException messageText = TerniLapilli noMoreChipsDescription. ].! !
!TerniLapilliTest methodsFor: 'tests' stamp: 'JEA 11/1/2020 23:48:30' prior: 50876295!
test14XCantMoveUntilAllChipsArePlaced
	| aTerniLapilliGame |

	aTerniLapilliGame := TerniLapilli new.
	aTerniLapilliGame putXAt: 0@0.
	aTerniLapilliGame putOAt: 0@1.
	aTerniLapilliGame putXAt: 0@2.
	aTerniLapilliGame putOAt: 1@0.
	
	self should: [ aTerniLapilliGame moveXFrom: 0@2 to: 1@2. ]
		raise: Error
		withExceptionDo: [ :anException | self assert: anException messageText = TerniLapilli cantMoveYetDescription. ].! !
!TerniLapilliTest methodsFor: 'tests' stamp: 'JEA 11/1/2020 23:48:33' prior: 50876277!
test15OCantMoveUntilAllChipsArePlaced
	| aTerniLapilliGame |

	aTerniLapilliGame := TerniLapilli new.
	aTerniLapilliGame putXAt: 0@0.
	aTerniLapilliGame putOAt: 0@1.
	aTerniLapilliGame putXAt: 0@2.
	aTerniLapilliGame putOAt: 1@0.
	aTerniLapilliGame putXAt: 1@1.
	
	self should: [ aTerniLapilliGame moveOFrom: 1@0 to: 2@0. ]
		raise: Error
		withExceptionDo: [ :anException | self assert: anException messageText = TerniLapilli cantMoveYetDescription. ].! !
!TerniLapilliTest methodsFor: 'tests' stamp: 'JEA 11/1/2020 23:48:37' prior: 50876260!
test16XCanMoveAfterAllChipsArePlaced
	| aTerniLapilliGame |

	aTerniLapilliGame := TerniLapilli new.
	aTerniLapilliGame putXAt: 0@0.
	aTerniLapilliGame putOAt: 0@1.
	aTerniLapilliGame putXAt: 0@2.
	aTerniLapilliGame putOAt: 1@0.
	aTerniLapilliGame putXAt: 1@1.
	
	self should: [ aTerniLapilliGame moveOFrom: 1@0 to: 2@0. ]
		raise: Error
		withExceptionDo: [ :anException | self assert: anException messageText = TerniLapilli cantMoveYetDescription. ].! !
!TerniLapilliTest methodsFor: 'tests' stamp: 'JEA 11/1/2020 23:49:07' prior: 50876407!
test16XCanMoveAfterAllChipsArePlaced
	| aTerniLapilliGame |

	aTerniLapilliGame := TerniLapilli new.
	aTerniLapilliGame putXAt: 0@0.
	aTerniLapilliGame putOAt: 0@1.
	aTerniLapilliGame putXAt: 0@2.
	aTerniLapilliGame putOAt: 1@0.
	aTerniLapilliGame putXAt: 1@1.
	aTerniLapilliGame putOAt: 1@2.
	
	aTerniLapilliGame moveXFrom: 1@0 to: 2@0.! !
!TerniLapilliTest methodsFor: 'tests' stamp: 'JEA 11/1/2020 23:49:25' prior: 50876424!
test16XCanMoveAfterAllChipsArePlaced
	| aTerniLapilliGame |

	aTerniLapilliGame := TerniLapilli new.
	aTerniLapilliGame putXAt: 0@0.
	aTerniLapilliGame putOAt: 0@1.
	aTerniLapilliGame putXAt: 0@2.
	aTerniLapilliGame putOAt: 1@0.
	aTerniLapilliGame putXAt: 1@1.
	aTerniLapilliGame putOAt: 1@2.
	
	aTerniLapilliGame moveXFrom: 1@1 to: 2@1.! !
!TerniLapilliTest methodsFor: 'tests' stamp: 'JEA 11/1/2020 23:49:28' prior: 50876438!
test16XCanMoveAfterAllChipsArePlaced
	| aTerniLapilliGame |

	aTerniLapilliGame := TerniLapilli new.
	aTerniLapilliGame putXAt: 0@0.
	aTerniLapilliGame putOAt: 0@1.
	aTerniLapilliGame putXAt: 0@2.
	aTerniLapilliGame putOAt: 1@0.
	aTerniLapilliGame putXAt: 1@1.
	aTerniLapilliGame putOAt: 1@2.

	aTerniLapilliGame moveXFrom: 1@1 to: 2@1.! !
!TerniLapilliTest methodsFor: 'tests' stamp: 'JEA 11/1/2020 23:50:00' prior: 50876452!
test16XCanMoveAfterAllChipsArePlaced
	| aTerniLapilliGame |

	aTerniLapilliGame := TerniLapilli new.
	aTerniLapilliGame putXAt: 0@0.
	aTerniLapilliGame putOAt: 0@1.
	aTerniLapilliGame putXAt: 0@2.
	aTerniLapilliGame putOAt: 1@0.
	aTerniLapilliGame putXAt: 1@1.
	aTerniLapilliGame putOAt: 1@2.

	aTerniLapilliGame moveXFrom: 1@1 to: 2@1.

	self assert: (aTerniLapilliGame isXAt: 2@1).
	self assert: (aTerniLapilliGame isXAt: 1@1) not.! !

!testRun: #TerniLapilliTest #test01XPlaysFirst stamp: 'JEA 11/1/2020 23:50:02'!
PASSED!

!testRun: #TerniLapilliTest #test02XCanPlayItsTurn stamp: 'JEA 11/1/2020 23:50:02'!
PASSED!

!testRun: #TerniLapilliTest #test03OPlaysAfterX stamp: 'JEA 11/1/2020 23:50:02'!
PASSED!

!testRun: #TerniLapilliTest #test04OCanPlayItsTurn stamp: 'JEA 11/1/2020 23:50:02'!
PASSED!

!testRun: #TerniLapilliTest #test05XPlaysAfterO stamp: 'JEA 11/1/2020 23:50:02'!
PASSED!

!testRun: #TerniLapilliTest #test06PositionsDontOverlap stamp: 'JEA 11/1/2020 23:50:02'!
PASSED!

!testRun: #TerniLapilliTest #test07PositionsAreOccupied stamp: 'JEA 11/1/2020 23:50:02'!
PASSED!

!testRun: #TerniLapilliTest #test08OCantPlayInOccupiedPosition stamp: 'JEA 11/1/2020 23:50:02'!
PASSED!

!testRun: #TerniLapilliTest #test09XCantPlayInOccupiedPosition stamp: 'JEA 11/1/2020 23:50:02'!
PASSED!

!testRun: #TerniLapilliTest #test10XAndOAreAtEveryPositionPlayed stamp: 'JEA 11/1/2020 23:50:02'!
PASSED!

!testRun: #TerniLapilliTest #test11XCantPlayInInvalidPosition stamp: 'JEA 11/1/2020 23:50:02'!
PASSED!

!testRun: #TerniLapilliTest #test12OCantPlayInInvalidPosition stamp: 'JEA 11/1/2020 23:50:02'!
PASSED!

!testRun: #TerniLapilliTest #test13CantPlaceMoreThan3Chips stamp: 'JEA 11/1/2020 23:50:02'!
PASSED!

!testRun: #TerniLapilliTest #test14XCantMoveUntilAllChipsArePlaced stamp: 'JEA 11/1/2020 23:50:02'!
PASSED!

!testRun: #TerniLapilliTest #test15OCantMoveUntilAllChipsArePlaced stamp: 'JEA 11/1/2020 23:50:02'!
PASSED!

!testRun: #TerniLapilliTest #test16XCanMoveAfterAllChipsArePlaced stamp: 'JEA 11/1/2020 23:50:02'!
ERROR!

!testRun: #TerniLapilliTest #test16XCanMoveAfterAllChipsArePlaced stamp: 'JEA 11/1/2020 23:50:02'!
ERROR!
!TerniLapilliTest methodsFor: 'tests' stamp: 'JEA 11/1/2020 23:52:01' prior: 50876466!
test16XCanMoveAfterAllChipsArePlaced
	| aTerniLapilliGame |

	aTerniLapilliGame := TerniLapilli new.
	aTerniLapilliGame putXAt: 0@0.
	aTerniLapilliGame putOAt: 0@1.
	aTerniLapilliGame putXAt: 0@2.
	aTerniLapilliGame putOAt: 1@0.
	aTerniLapilliGame putXAt: 1@1.
	aTerniLapilliGame putOAt: 1@2.

	aTerniLapilliGame moveXFrom: 1@1 to: 2@1.

	self assert: (aTerniLapilliGame isXAt: 2@1).
	self assert: (aTerniLapilliGame isXAt: 1@1) not.
	self assert: aTerniLapilliGame chipsXPlayed = 3.! !

!testRun: #TerniLapilliTest #test01XPlaysFirst stamp: 'JEA 11/1/2020 23:52:04'!
PASSED!

!testRun: #TerniLapilliTest #test02XCanPlayItsTurn stamp: 'JEA 11/1/2020 23:52:04'!
PASSED!

!testRun: #TerniLapilliTest #test03OPlaysAfterX stamp: 'JEA 11/1/2020 23:52:04'!
PASSED!

!testRun: #TerniLapilliTest #test04OCanPlayItsTurn stamp: 'JEA 11/1/2020 23:52:04'!
PASSED!

!testRun: #TerniLapilliTest #test05XPlaysAfterO stamp: 'JEA 11/1/2020 23:52:04'!
PASSED!

!testRun: #TerniLapilliTest #test06PositionsDontOverlap stamp: 'JEA 11/1/2020 23:52:04'!
PASSED!

!testRun: #TerniLapilliTest #test07PositionsAreOccupied stamp: 'JEA 11/1/2020 23:52:04'!
PASSED!

!testRun: #TerniLapilliTest #test08OCantPlayInOccupiedPosition stamp: 'JEA 11/1/2020 23:52:04'!
PASSED!

!testRun: #TerniLapilliTest #test09XCantPlayInOccupiedPosition stamp: 'JEA 11/1/2020 23:52:04'!
PASSED!

!testRun: #TerniLapilliTest #test10XAndOAreAtEveryPositionPlayed stamp: 'JEA 11/1/2020 23:52:04'!
PASSED!

!testRun: #TerniLapilliTest #test11XCantPlayInInvalidPosition stamp: 'JEA 11/1/2020 23:52:04'!
PASSED!

!testRun: #TerniLapilliTest #test12OCantPlayInInvalidPosition stamp: 'JEA 11/1/2020 23:52:04'!
PASSED!

!testRun: #TerniLapilliTest #test13CantPlaceMoreThan3Chips stamp: 'JEA 11/1/2020 23:52:04'!
PASSED!

!testRun: #TerniLapilliTest #test14XCantMoveUntilAllChipsArePlaced stamp: 'JEA 11/1/2020 23:52:04'!
PASSED!

!testRun: #TerniLapilliTest #test15OCantMoveUntilAllChipsArePlaced stamp: 'JEA 11/1/2020 23:52:04'!
PASSED!

!testRun: #TerniLapilliTest #test16XCanMoveAfterAllChipsArePlaced stamp: 'JEA 11/1/2020 23:52:04'!
ERROR!

!testRun: #TerniLapilliTest #test16XCanMoveAfterAllChipsArePlaced stamp: 'JEA 11/1/2020 23:52:04'!
ERROR!
!TerniLapilli methodsFor: 'testing' stamp: 'JEA 11/1/2020 23:52:26'!
chipsXPlayed

	^chips size.! !
!TerniLapilli methodsFor: 'testing' stamp: 'JEA 11/1/2020 23:53:06' prior: 50876607!
chipsXPlayed

	^(chips select: [ :aTerniLapilliChip | aTerniLapilliChip label = $X ]) size.! !
!TerniLapilli methodsFor: 'testing' stamp: 'JEA 11/1/2020 23:53:11'!
chipsOPlayed

	^(chips select: [ :aTerniLapilliChip | aTerniLapilliChip label = $O ]) size.! !

!testRun: #TerniLapilliTest #test01XPlaysFirst stamp: 'JEA 11/1/2020 23:53:19'!
PASSED!

!testRun: #TerniLapilliTest #test02XCanPlayItsTurn stamp: 'JEA 11/1/2020 23:53:19'!
PASSED!

!testRun: #TerniLapilliTest #test03OPlaysAfterX stamp: 'JEA 11/1/2020 23:53:19'!
PASSED!

!testRun: #TerniLapilliTest #test04OCanPlayItsTurn stamp: 'JEA 11/1/2020 23:53:19'!
PASSED!

!testRun: #TerniLapilliTest #test05XPlaysAfterO stamp: 'JEA 11/1/2020 23:53:19'!
PASSED!

!testRun: #TerniLapilliTest #test06PositionsDontOverlap stamp: 'JEA 11/1/2020 23:53:19'!
PASSED!

!testRun: #TerniLapilliTest #test07PositionsAreOccupied stamp: 'JEA 11/1/2020 23:53:19'!
PASSED!

!testRun: #TerniLapilliTest #test08OCantPlayInOccupiedPosition stamp: 'JEA 11/1/2020 23:53:19'!
PASSED!

!testRun: #TerniLapilliTest #test09XCantPlayInOccupiedPosition stamp: 'JEA 11/1/2020 23:53:19'!
PASSED!

!testRun: #TerniLapilliTest #test10XAndOAreAtEveryPositionPlayed stamp: 'JEA 11/1/2020 23:53:19'!
PASSED!

!testRun: #TerniLapilliTest #test11XCantPlayInInvalidPosition stamp: 'JEA 11/1/2020 23:53:19'!
PASSED!

!testRun: #TerniLapilliTest #test12OCantPlayInInvalidPosition stamp: 'JEA 11/1/2020 23:53:19'!
PASSED!

!testRun: #TerniLapilliTest #test13CantPlaceMoreThan3Chips stamp: 'JEA 11/1/2020 23:53:19'!
PASSED!

!testRun: #TerniLapilliTest #test14XCantMoveUntilAllChipsArePlaced stamp: 'JEA 11/1/2020 23:53:19'!
PASSED!

!testRun: #TerniLapilliTest #test15OCantMoveUntilAllChipsArePlaced stamp: 'JEA 11/1/2020 23:53:19'!
PASSED!

!testRun: #TerniLapilliTest #test16XCanMoveAfterAllChipsArePlaced stamp: 'JEA 11/1/2020 23:53:19'!
ERROR!

!testRun: #TerniLapilliTest #test16XCanMoveAfterAllChipsArePlaced stamp: 'JEA 11/1/2020 23:53:19'!
ERROR!
!TerniLapilli methodsFor: 'playing' stamp: 'JEA 11/1/2020 23:54:46' prior: 50876094!
moveXFrom: currentPosition to: newPosition

	chips size < 6
		ifTrue: [
			self error: self class cantMoveYetDescription.
		]! !

!testRun: #TerniLapilliTest #test01XPlaysFirst stamp: 'JEA 11/1/2020 23:54:47'!
PASSED!

!testRun: #TerniLapilliTest #test02XCanPlayItsTurn stamp: 'JEA 11/1/2020 23:54:47'!
PASSED!

!testRun: #TerniLapilliTest #test03OPlaysAfterX stamp: 'JEA 11/1/2020 23:54:47'!
PASSED!

!testRun: #TerniLapilliTest #test04OCanPlayItsTurn stamp: 'JEA 11/1/2020 23:54:47'!
PASSED!

!testRun: #TerniLapilliTest #test05XPlaysAfterO stamp: 'JEA 11/1/2020 23:54:47'!
PASSED!

!testRun: #TerniLapilliTest #test06PositionsDontOverlap stamp: 'JEA 11/1/2020 23:54:47'!
PASSED!

!testRun: #TerniLapilliTest #test07PositionsAreOccupied stamp: 'JEA 11/1/2020 23:54:47'!
PASSED!

!testRun: #TerniLapilliTest #test08OCantPlayInOccupiedPosition stamp: 'JEA 11/1/2020 23:54:47'!
PASSED!

!testRun: #TerniLapilliTest #test09XCantPlayInOccupiedPosition stamp: 'JEA 11/1/2020 23:54:47'!
PASSED!

!testRun: #TerniLapilliTest #test10XAndOAreAtEveryPositionPlayed stamp: 'JEA 11/1/2020 23:54:47'!
PASSED!

!testRun: #TerniLapilliTest #test11XCantPlayInInvalidPosition stamp: 'JEA 11/1/2020 23:54:47'!
PASSED!

!testRun: #TerniLapilliTest #test12OCantPlayInInvalidPosition stamp: 'JEA 11/1/2020 23:54:47'!
PASSED!

!testRun: #TerniLapilliTest #test13CantPlaceMoreThan3Chips stamp: 'JEA 11/1/2020 23:54:47'!
PASSED!

!testRun: #TerniLapilliTest #test14XCantMoveUntilAllChipsArePlaced stamp: 'JEA 11/1/2020 23:54:47'!
PASSED!

!testRun: #TerniLapilliTest #test15OCantMoveUntilAllChipsArePlaced stamp: 'JEA 11/1/2020 23:54:47'!
PASSED!

!testRun: #TerniLapilliTest #test16XCanMoveAfterAllChipsArePlaced stamp: 'JEA 11/1/2020 23:54:47'!
FAILURE!

!testRun: #TerniLapilliTest #test16XCanMoveAfterAllChipsArePlaced stamp: 'JEA 11/1/2020 23:54:47'!
FAILURE!
!TerniLapilli methodsFor: 'playing' stamp: 'JEA 11/1/2020 23:55:58' prior: 50876677!
moveXFrom: currentPosition to: newPosition

	chips size < 6
		ifTrue: [
			self error: self class cantMoveYetDescription.
		]
		ifFalse: [
			
		]! !
!TerniLapilli methodsFor: 'playing' stamp: 'JEA 11/1/2020 23:56:26' prior: 50876738!
moveXFrom: currentPosition to: newPosition

	chips size < 6
		ifTrue: [
			self error: self class cantMoveYetDescription.
		]
		ifFalse: [
			chips remove: (XChip newAt: currentPosition).
			chips add: (XChip newAt: newPosition).
		]! !

!testRun: #TerniLapilliTest #test01XPlaysFirst stamp: 'JEA 11/1/2020 23:56:28'!
PASSED!

!testRun: #TerniLapilliTest #test02XCanPlayItsTurn stamp: 'JEA 11/1/2020 23:56:28'!
PASSED!

!testRun: #TerniLapilliTest #test03OPlaysAfterX stamp: 'JEA 11/1/2020 23:56:28'!
PASSED!

!testRun: #TerniLapilliTest #test04OCanPlayItsTurn stamp: 'JEA 11/1/2020 23:56:28'!
PASSED!

!testRun: #TerniLapilliTest #test05XPlaysAfterO stamp: 'JEA 11/1/2020 23:56:28'!
PASSED!

!testRun: #TerniLapilliTest #test06PositionsDontOverlap stamp: 'JEA 11/1/2020 23:56:28'!
PASSED!

!testRun: #TerniLapilliTest #test07PositionsAreOccupied stamp: 'JEA 11/1/2020 23:56:28'!
PASSED!

!testRun: #TerniLapilliTest #test08OCantPlayInOccupiedPosition stamp: 'JEA 11/1/2020 23:56:28'!
PASSED!

!testRun: #TerniLapilliTest #test09XCantPlayInOccupiedPosition stamp: 'JEA 11/1/2020 23:56:28'!
PASSED!

!testRun: #TerniLapilliTest #test10XAndOAreAtEveryPositionPlayed stamp: 'JEA 11/1/2020 23:56:28'!
PASSED!

!testRun: #TerniLapilliTest #test11XCantPlayInInvalidPosition stamp: 'JEA 11/1/2020 23:56:28'!
PASSED!

!testRun: #TerniLapilliTest #test12OCantPlayInInvalidPosition stamp: 'JEA 11/1/2020 23:56:28'!
PASSED!

!testRun: #TerniLapilliTest #test13CantPlaceMoreThan3Chips stamp: 'JEA 11/1/2020 23:56:28'!
PASSED!

!testRun: #TerniLapilliTest #test14XCantMoveUntilAllChipsArePlaced stamp: 'JEA 11/1/2020 23:56:28'!
PASSED!

!testRun: #TerniLapilliTest #test15OCantMoveUntilAllChipsArePlaced stamp: 'JEA 11/1/2020 23:56:28'!
PASSED!

!testRun: #TerniLapilliTest #test16XCanMoveAfterAllChipsArePlaced stamp: 'JEA 11/1/2020 23:56:28'!
PASSED!
!TerniLapilliTest methodsFor: 'tests' stamp: 'JEA 11/1/2020 23:57:24'!
test17OCanMoveAfterAllChipsArePlaced
	| aTerniLapilliGame |

	aTerniLapilliGame := TerniLapilli new.
	aTerniLapilliGame putXAt: 0@0.
	aTerniLapilliGame putOAt: 0@1.
	aTerniLapilliGame putXAt: 0@2.
	aTerniLapilliGame putOAt: 1@0.
	aTerniLapilliGame putXAt: 1@1.
	aTerniLapilliGame putOAt: 1@2.
	aTerniLapilliGame moveXFrom: 1@1 to: 2@1.
	
	aTerniLapilliGame moveOFrom: 1@0 to: 2@0.

	self assert: (aTerniLapilliGame isOAt: 2@0).
	self assert: (aTerniLapilliGame isOAt: 1@0) not.
	self assert: aTerniLapilliGame chipsOPlayed = 3.! !

!testRun: #TerniLapilliTest #test01XPlaysFirst stamp: 'JEA 11/1/2020 23:57:25'!
PASSED!

!testRun: #TerniLapilliTest #test02XCanPlayItsTurn stamp: 'JEA 11/1/2020 23:57:25'!
PASSED!

!testRun: #TerniLapilliTest #test03OPlaysAfterX stamp: 'JEA 11/1/2020 23:57:25'!
PASSED!

!testRun: #TerniLapilliTest #test04OCanPlayItsTurn stamp: 'JEA 11/1/2020 23:57:25'!
PASSED!

!testRun: #TerniLapilliTest #test05XPlaysAfterO stamp: 'JEA 11/1/2020 23:57:25'!
PASSED!

!testRun: #TerniLapilliTest #test06PositionsDontOverlap stamp: 'JEA 11/1/2020 23:57:25'!
PASSED!

!testRun: #TerniLapilliTest #test07PositionsAreOccupied stamp: 'JEA 11/1/2020 23:57:25'!
PASSED!

!testRun: #TerniLapilliTest #test08OCantPlayInOccupiedPosition stamp: 'JEA 11/1/2020 23:57:25'!
PASSED!

!testRun: #TerniLapilliTest #test09XCantPlayInOccupiedPosition stamp: 'JEA 11/1/2020 23:57:25'!
PASSED!

!testRun: #TerniLapilliTest #test10XAndOAreAtEveryPositionPlayed stamp: 'JEA 11/1/2020 23:57:25'!
PASSED!

!testRun: #TerniLapilliTest #test11XCantPlayInInvalidPosition stamp: 'JEA 11/1/2020 23:57:25'!
PASSED!

!testRun: #TerniLapilliTest #test12OCantPlayInInvalidPosition stamp: 'JEA 11/1/2020 23:57:25'!
PASSED!

!testRun: #TerniLapilliTest #test13CantPlaceMoreThan3Chips stamp: 'JEA 11/1/2020 23:57:25'!
PASSED!

!testRun: #TerniLapilliTest #test14XCantMoveUntilAllChipsArePlaced stamp: 'JEA 11/1/2020 23:57:25'!
PASSED!

!testRun: #TerniLapilliTest #test15OCantMoveUntilAllChipsArePlaced stamp: 'JEA 11/1/2020 23:57:25'!
PASSED!

!testRun: #TerniLapilliTest #test16XCanMoveAfterAllChipsArePlaced stamp: 'JEA 11/1/2020 23:57:25'!
PASSED!

!testRun: #TerniLapilliTest #test17OCanMoveAfterAllChipsArePlaced stamp: 'JEA 11/1/2020 23:57:25'!
ERROR!

!testRun: #TerniLapilliTest #test17OCanMoveAfterAllChipsArePlaced stamp: 'JEA 11/1/2020 23:57:25'!
ERROR!
!TerniLapilli methodsFor: 'playing' stamp: 'JEA 11/1/2020 23:57:59' prior: 50875908!
moveOFrom: currentPosition to: newPosition

	chips size < 6
		ifTrue: [
			self error: self class cantMoveYetDescription.
		]
		ifFalse: [
			chips remove: (OChip newAt: currentPosition).
			chips add: (OChip newAt: newPosition).
		]! !

!testRun: #TerniLapilliTest #test01XPlaysFirst stamp: 'JEA 11/1/2020 23:58:00'!
PASSED!

!testRun: #TerniLapilliTest #test02XCanPlayItsTurn stamp: 'JEA 11/1/2020 23:58:00'!
PASSED!

!testRun: #TerniLapilliTest #test03OPlaysAfterX stamp: 'JEA 11/1/2020 23:58:00'!
PASSED!

!testRun: #TerniLapilliTest #test04OCanPlayItsTurn stamp: 'JEA 11/1/2020 23:58:00'!
PASSED!

!testRun: #TerniLapilliTest #test05XPlaysAfterO stamp: 'JEA 11/1/2020 23:58:00'!
PASSED!

!testRun: #TerniLapilliTest #test06PositionsDontOverlap stamp: 'JEA 11/1/2020 23:58:00'!
PASSED!

!testRun: #TerniLapilliTest #test07PositionsAreOccupied stamp: 'JEA 11/1/2020 23:58:00'!
PASSED!

!testRun: #TerniLapilliTest #test08OCantPlayInOccupiedPosition stamp: 'JEA 11/1/2020 23:58:00'!
PASSED!

!testRun: #TerniLapilliTest #test09XCantPlayInOccupiedPosition stamp: 'JEA 11/1/2020 23:58:00'!
PASSED!

!testRun: #TerniLapilliTest #test10XAndOAreAtEveryPositionPlayed stamp: 'JEA 11/1/2020 23:58:00'!
PASSED!

!testRun: #TerniLapilliTest #test11XCantPlayInInvalidPosition stamp: 'JEA 11/1/2020 23:58:00'!
PASSED!

!testRun: #TerniLapilliTest #test12OCantPlayInInvalidPosition stamp: 'JEA 11/1/2020 23:58:00'!
PASSED!

!testRun: #TerniLapilliTest #test13CantPlaceMoreThan3Chips stamp: 'JEA 11/1/2020 23:58:00'!
PASSED!

!testRun: #TerniLapilliTest #test14XCantMoveUntilAllChipsArePlaced stamp: 'JEA 11/1/2020 23:58:00'!
PASSED!

!testRun: #TerniLapilliTest #test15OCantMoveUntilAllChipsArePlaced stamp: 'JEA 11/1/2020 23:58:00'!
PASSED!

!testRun: #TerniLapilliTest #test16XCanMoveAfterAllChipsArePlaced stamp: 'JEA 11/1/2020 23:58:00'!
PASSED!

!testRun: #TerniLapilliTest #test17OCanMoveAfterAllChipsArePlaced stamp: 'JEA 11/1/2020 23:58:00'!
PASSED!
!TerniLapilli methodsFor: 'playing' stamp: 'JEA 11/1/2020 23:58:15' prior: 50876746!
moveXFrom: currentPosition to: newPosition

	chips size < 6
		ifTrue: [
			self error: self class cantMoveYetDescription.
		]
		ifFalse: [
			chips remove: (XChip newAt: currentPosition).
			self putXAt: newPosition.
		]! !
!TerniLapilli methodsFor: 'playing' stamp: 'JEA 11/1/2020 23:58:21' prior: 50876883!
moveOFrom: currentPosition to: newPosition

	chips size < 6
		ifTrue: [
			self error: self class cantMoveYetDescription.
		]
		ifFalse: [
			chips remove: (OChip newAt: currentPosition).
			self putOAt: newPosition.
		]! !

!testRun: #TerniLapilliTest #test01XPlaysFirst stamp: 'JEA 11/1/2020 23:58:22'!
PASSED!

!testRun: #TerniLapilliTest #test02XCanPlayItsTurn stamp: 'JEA 11/1/2020 23:58:22'!
PASSED!

!testRun: #TerniLapilliTest #test03OPlaysAfterX stamp: 'JEA 11/1/2020 23:58:22'!
PASSED!

!testRun: #TerniLapilliTest #test04OCanPlayItsTurn stamp: 'JEA 11/1/2020 23:58:22'!
PASSED!

!testRun: #TerniLapilliTest #test05XPlaysAfterO stamp: 'JEA 11/1/2020 23:58:22'!
PASSED!

!testRun: #TerniLapilliTest #test06PositionsDontOverlap stamp: 'JEA 11/1/2020 23:58:22'!
PASSED!

!testRun: #TerniLapilliTest #test07PositionsAreOccupied stamp: 'JEA 11/1/2020 23:58:22'!
PASSED!

!testRun: #TerniLapilliTest #test08OCantPlayInOccupiedPosition stamp: 'JEA 11/1/2020 23:58:22'!
PASSED!

!testRun: #TerniLapilliTest #test09XCantPlayInOccupiedPosition stamp: 'JEA 11/1/2020 23:58:22'!
PASSED!

!testRun: #TerniLapilliTest #test10XAndOAreAtEveryPositionPlayed stamp: 'JEA 11/1/2020 23:58:22'!
PASSED!

!testRun: #TerniLapilliTest #test11XCantPlayInInvalidPosition stamp: 'JEA 11/1/2020 23:58:22'!
PASSED!

!testRun: #TerniLapilliTest #test12OCantPlayInInvalidPosition stamp: 'JEA 11/1/2020 23:58:22'!
PASSED!

!testRun: #TerniLapilliTest #test13CantPlaceMoreThan3Chips stamp: 'JEA 11/1/2020 23:58:22'!
PASSED!

!testRun: #TerniLapilliTest #test14XCantMoveUntilAllChipsArePlaced stamp: 'JEA 11/1/2020 23:58:22'!
PASSED!

!testRun: #TerniLapilliTest #test15OCantMoveUntilAllChipsArePlaced stamp: 'JEA 11/1/2020 23:58:22'!
PASSED!

!testRun: #TerniLapilliTest #test16XCanMoveAfterAllChipsArePlaced stamp: 'JEA 11/1/2020 23:58:22'!
PASSED!

!testRun: #TerniLapilliTest #test17OCanMoveAfterAllChipsArePlaced stamp: 'JEA 11/1/2020 23:58:22'!
PASSED!
!TerniLapilliTest methodsFor: 'tests' stamp: 'JEA 11/2/2020 00:06:50'!
test06XCantPlayOsTurn
	| aTerniLapilliGame |
	
	aTerniLapilliGame := TerniLapilli new.
	aTerniLapilliGame putXAt: 0@0.
	
	self should: [ aTerniLapilliGame putXAt: 0@1. ]
		raise: Error
		withExceptionDo: [ :anException | anException messageText = TerniLapilli notYourTurnDescription. ].! !
!TerniLapilliTest methodsFor: 'tests' stamp: 'JEA 11/2/2020 00:06:59'!
test07PositionsDontOverlap
	| aTerniLapilliGame |
	
	aTerniLapilliGame := TerniLapilli new.
	aTerniLapilliGame putXAt: 0@0.
	aTerniLapilliGame putOAt: 0@1.

	self assert: (aTerniLapilliGame isXAt: 0@0).
	self assert: (aTerniLapilliGame isOAt: 0@0) not.
	self assert: (aTerniLapilliGame isOAt: 0@1).
	self assert: (aTerniLapilliGame isXAt: 0@1) not.! !

!methodRemoval: TerniLapilliTest #test06PositionsDontOverlap stamp: 'JEA 11/2/2020 00:07:00'!
test06PositionsDontOverlap
	| aTerniLapilliGame |
	
	aTerniLapilliGame := TerniLapilli new.
	aTerniLapilliGame putXAt: 0@0.
	aTerniLapilliGame putOAt: 0@1.

	self assert: (aTerniLapilliGame isXAt: 0@0).
	self assert: (aTerniLapilliGame isOAt: 0@0) not.
	self assert: (aTerniLapilliGame isOAt: 0@1).
	self assert: (aTerniLapilliGame isXAt: 0@1) not.!
!TerniLapilliTest methodsFor: 'tests' stamp: 'JEA 11/2/2020 00:07:04'!
test08PositionsAreOccupied
	| aTerniLapilliGame |
	
	aTerniLapilliGame := TerniLapilli new.
	aTerniLapilliGame putXAt: 0@0.
	aTerniLapilliGame putOAt: 0@1.

	self assert: (aTerniLapilliGame isOccupied: 0@0).
	self assert: (aTerniLapilliGame isOccupied: 0@1).! !

!methodRemoval: TerniLapilliTest #test07PositionsAreOccupied stamp: 'JEA 11/2/2020 00:07:04'!
test07PositionsAreOccupied
	| aTerniLapilliGame |
	
	aTerniLapilliGame := TerniLapilli new.
	aTerniLapilliGame putXAt: 0@0.
	aTerniLapilliGame putOAt: 0@1.

	self assert: (aTerniLapilliGame isOccupied: 0@0).
	self assert: (aTerniLapilliGame isOccupied: 0@1).!
!TerniLapilliTest methodsFor: 'tests' stamp: 'JEA 11/2/2020 00:07:08'!
test09OCantPlayInOccupiedPosition
	| aTerniLapilliGame |
	
	aTerniLapilliGame := TerniLapilli new.
	aTerniLapilliGame putXAt: 0@0.

	self should: [ aTerniLapilliGame putOAt: 0@0. ]
		raise: Error
		withExceptionDo: [ :anException | anException description = TerniLapilli positionOccupiedDescription. ].! !

!methodRemoval: TerniLapilliTest #test08OCantPlayInOccupiedPosition stamp: 'JEA 11/2/2020 00:07:08'!
test08OCantPlayInOccupiedPosition
	| aTerniLapilliGame |
	
	aTerniLapilliGame := TerniLapilli new.
	aTerniLapilliGame putXAt: 0@0.

	self should: [ aTerniLapilliGame putOAt: 0@0. ]
		raise: Error
		withExceptionDo: [ :anException | anException description = TerniLapilli positionOccupiedDescription. ].!
!TerniLapilliTest methodsFor: 'tests' stamp: 'JEA 11/2/2020 00:07:14'!
test10XCantPlayInOccupiedPosition
	| aTerniLapilliGame |
	
	aTerniLapilliGame := TerniLapilli new.
	aTerniLapilliGame putXAt: 0@0.
	aTerniLapilliGame putOAt: 0@1.

	self should: [ aTerniLapilliGame putXAt: 0@1. ]
		raise: Error
		withExceptionDo: [ :anException | anException description = TerniLapilli positionOccupiedDescription. ].! !

!methodRemoval: TerniLapilliTest #test09XCantPlayInOccupiedPosition stamp: 'JEA 11/2/2020 00:07:14'!
test09XCantPlayInOccupiedPosition
	| aTerniLapilliGame |
	
	aTerniLapilliGame := TerniLapilli new.
	aTerniLapilliGame putXAt: 0@0.
	aTerniLapilliGame putOAt: 0@1.

	self should: [ aTerniLapilliGame putXAt: 0@1. ]
		raise: Error
		withExceptionDo: [ :anException | anException description = TerniLapilli positionOccupiedDescription. ].!
!TerniLapilliTest methodsFor: 'tests' stamp: 'JEA 11/2/2020 00:07:19'!
test09XCantPlayInOccupiedPosition
	| aTerniLapilliGame |
	
	aTerniLapilliGame := TerniLapilli new.
	aTerniLapilliGame putXAt: 0@0.
	aTerniLapilliGame putOAt: 0@1.

	self should: [ aTerniLapilliGame putXAt: 0@1. ]
		raise: Error
		withExceptionDo: [ :anException | anException description = TerniLapilli positionOccupiedDescription. ].! !

!methodRemoval: TerniLapilliTest #test10XCantPlayInOccupiedPosition stamp: 'JEA 11/2/2020 00:07:19'!
test10XCantPlayInOccupiedPosition
	| aTerniLapilliGame |
	
	aTerniLapilliGame := TerniLapilli new.
	aTerniLapilliGame putXAt: 0@0.
	aTerniLapilliGame putOAt: 0@1.

	self should: [ aTerniLapilliGame putXAt: 0@1. ]
		raise: Error
		withExceptionDo: [ :anException | anException description = TerniLapilli positionOccupiedDescription. ].!

!testRun: #TerniLapilliTest #test01XPlaysFirst stamp: 'JEA 11/2/2020 00:08:02'!
PASSED!

!testRun: #TerniLapilliTest #test02XCanPlayItsTurn stamp: 'JEA 11/2/2020 00:08:02'!
PASSED!

!testRun: #TerniLapilliTest #test03OPlaysAfterX stamp: 'JEA 11/2/2020 00:08:02'!
PASSED!

!testRun: #TerniLapilliTest #test04OCanPlayItsTurn stamp: 'JEA 11/2/2020 00:08:02'!
PASSED!

!testRun: #TerniLapilliTest #test05XPlaysAfterO stamp: 'JEA 11/2/2020 00:08:02'!
PASSED!

!testRun: #TerniLapilliTest #test06XCantPlayOsTurn stamp: 'JEA 11/2/2020 00:08:02'!
FAILURE!

!testRun: #TerniLapilliTest #test07PositionsDontOverlap stamp: 'JEA 11/2/2020 00:08:02'!
PASSED!

!testRun: #TerniLapilliTest #test08PositionsAreOccupied stamp: 'JEA 11/2/2020 00:08:02'!
PASSED!

!testRun: #TerniLapilliTest #test09OCantPlayInOccupiedPosition stamp: 'JEA 11/2/2020 00:08:02'!
PASSED!

!testRun: #TerniLapilliTest #test09XCantPlayInOccupiedPosition stamp: 'JEA 11/2/2020 00:08:02'!
PASSED!

!testRun: #TerniLapilliTest #test10XAndOAreAtEveryPositionPlayed stamp: 'JEA 11/2/2020 00:08:02'!
PASSED!

!testRun: #TerniLapilliTest #test11XCantPlayInInvalidPosition stamp: 'JEA 11/2/2020 00:08:02'!
PASSED!

!testRun: #TerniLapilliTest #test12OCantPlayInInvalidPosition stamp: 'JEA 11/2/2020 00:08:02'!
PASSED!

!testRun: #TerniLapilliTest #test13CantPlaceMoreThan3Chips stamp: 'JEA 11/2/2020 00:08:02'!
PASSED!

!testRun: #TerniLapilliTest #test14XCantMoveUntilAllChipsArePlaced stamp: 'JEA 11/2/2020 00:08:02'!
PASSED!

!testRun: #TerniLapilliTest #test15OCantMoveUntilAllChipsArePlaced stamp: 'JEA 11/2/2020 00:08:02'!
PASSED!

!testRun: #TerniLapilliTest #test16XCanMoveAfterAllChipsArePlaced stamp: 'JEA 11/2/2020 00:08:02'!
PASSED!

!testRun: #TerniLapilliTest #test17OCanMoveAfterAllChipsArePlaced stamp: 'JEA 11/2/2020 00:08:02'!
PASSED!

!testRun: #TerniLapilliTest #test06XCantPlayOsTurn stamp: 'JEA 11/2/2020 00:08:02'!
FAILURE!
!TerniLapilli methodsFor: 'playing' stamp: 'JEA 11/2/2020 00:08:54' prior: 50874600!
putXAt: aPosition

	isXPlaying
		ifTrue: [
			self put: (XChip newAt: aPosition).
		]
		ifFalse: [
			self error: self class notYourTurnDescription.
		]! !
!TerniLapilli class methodsFor: 'error descriptions' stamp: 'JEA 11/2/2020 00:09:25'!
notYourTurnDescription

	^'Can only play in your turn.'! !

!testRun: #TerniLapilliTest #test01XPlaysFirst stamp: 'JEA 11/2/2020 00:09:27'!
PASSED!

!testRun: #TerniLapilliTest #test02XCanPlayItsTurn stamp: 'JEA 11/2/2020 00:09:27'!
PASSED!

!testRun: #TerniLapilliTest #test03OPlaysAfterX stamp: 'JEA 11/2/2020 00:09:27'!
PASSED!

!testRun: #TerniLapilliTest #test04OCanPlayItsTurn stamp: 'JEA 11/2/2020 00:09:27'!
PASSED!

!testRun: #TerniLapilliTest #test05XPlaysAfterO stamp: 'JEA 11/2/2020 00:09:27'!
PASSED!

!testRun: #TerniLapilliTest #test06XCantPlayOsTurn stamp: 'JEA 11/2/2020 00:09:27'!
PASSED!

!testRun: #TerniLapilliTest #test07PositionsDontOverlap stamp: 'JEA 11/2/2020 00:09:27'!
PASSED!

!testRun: #TerniLapilliTest #test08PositionsAreOccupied stamp: 'JEA 11/2/2020 00:09:27'!
PASSED!

!testRun: #TerniLapilliTest #test09OCantPlayInOccupiedPosition stamp: 'JEA 11/2/2020 00:09:27'!
PASSED!

!testRun: #TerniLapilliTest #test09XCantPlayInOccupiedPosition stamp: 'JEA 11/2/2020 00:09:27'!
PASSED!

!testRun: #TerniLapilliTest #test10XAndOAreAtEveryPositionPlayed stamp: 'JEA 11/2/2020 00:09:27'!
PASSED!

!testRun: #TerniLapilliTest #test11XCantPlayInInvalidPosition stamp: 'JEA 11/2/2020 00:09:27'!
PASSED!

!testRun: #TerniLapilliTest #test12OCantPlayInInvalidPosition stamp: 'JEA 11/2/2020 00:09:27'!
PASSED!

!testRun: #TerniLapilliTest #test13CantPlaceMoreThan3Chips stamp: 'JEA 11/2/2020 00:09:27'!
PASSED!

!testRun: #TerniLapilliTest #test14XCantMoveUntilAllChipsArePlaced stamp: 'JEA 11/2/2020 00:09:27'!
PASSED!

!testRun: #TerniLapilliTest #test15OCantMoveUntilAllChipsArePlaced stamp: 'JEA 11/2/2020 00:09:27'!
PASSED!

!testRun: #TerniLapilliTest #test16XCanMoveAfterAllChipsArePlaced stamp: 'JEA 11/2/2020 00:09:27'!
PASSED!

!testRun: #TerniLapilliTest #test17OCanMoveAfterAllChipsArePlaced stamp: 'JEA 11/2/2020 00:09:27'!
PASSED!
!TerniLapilliTest methodsFor: 'tests' stamp: 'JEA 11/2/2020 00:10:00'!
test07OCantPlayXsTurn

	self should: [ TerniLapilli new putOAt: 0@0. ]
		raise: Error
		withExceptionDo: [ :anException | anException messageText = TerniLapilli notYourTurnDescription. ].! !

!testRun: #TerniLapilliTest #test01XPlaysFirst stamp: 'JEA 11/2/2020 00:10:01'!
PASSED!

!testRun: #TerniLapilliTest #test02XCanPlayItsTurn stamp: 'JEA 11/2/2020 00:10:01'!
PASSED!

!testRun: #TerniLapilliTest #test03OPlaysAfterX stamp: 'JEA 11/2/2020 00:10:01'!
PASSED!

!testRun: #TerniLapilliTest #test04OCanPlayItsTurn stamp: 'JEA 11/2/2020 00:10:01'!
PASSED!

!testRun: #TerniLapilliTest #test05XPlaysAfterO stamp: 'JEA 11/2/2020 00:10:01'!
PASSED!

!testRun: #TerniLapilliTest #test06XCantPlayOsTurn stamp: 'JEA 11/2/2020 00:10:01'!
PASSED!

!testRun: #TerniLapilliTest #test07OCantPlayXsTurn stamp: 'JEA 11/2/2020 00:10:01'!
FAILURE!

!testRun: #TerniLapilliTest #test07PositionsDontOverlap stamp: 'JEA 11/2/2020 00:10:01'!
PASSED!

!testRun: #TerniLapilliTest #test08PositionsAreOccupied stamp: 'JEA 11/2/2020 00:10:01'!
PASSED!

!testRun: #TerniLapilliTest #test09OCantPlayInOccupiedPosition stamp: 'JEA 11/2/2020 00:10:01'!
PASSED!

!testRun: #TerniLapilliTest #test09XCantPlayInOccupiedPosition stamp: 'JEA 11/2/2020 00:10:01'!
PASSED!

!testRun: #TerniLapilliTest #test10XAndOAreAtEveryPositionPlayed stamp: 'JEA 11/2/2020 00:10:01'!
PASSED!

!testRun: #TerniLapilliTest #test11XCantPlayInInvalidPosition stamp: 'JEA 11/2/2020 00:10:01'!
PASSED!

!testRun: #TerniLapilliTest #test12OCantPlayInInvalidPosition stamp: 'JEA 11/2/2020 00:10:01'!
PASSED!

!testRun: #TerniLapilliTest #test13CantPlaceMoreThan3Chips stamp: 'JEA 11/2/2020 00:10:01'!
PASSED!

!testRun: #TerniLapilliTest #test14XCantMoveUntilAllChipsArePlaced stamp: 'JEA 11/2/2020 00:10:01'!
PASSED!

!testRun: #TerniLapilliTest #test15OCantMoveUntilAllChipsArePlaced stamp: 'JEA 11/2/2020 00:10:01'!
PASSED!

!testRun: #TerniLapilliTest #test16XCanMoveAfterAllChipsArePlaced stamp: 'JEA 11/2/2020 00:10:01'!
PASSED!

!testRun: #TerniLapilliTest #test17OCanMoveAfterAllChipsArePlaced stamp: 'JEA 11/2/2020 00:10:01'!
PASSED!

!testRun: #TerniLapilliTest #test07OCantPlayXsTurn stamp: 'JEA 11/2/2020 00:10:01'!
FAILURE!
!TerniLapilli methodsFor: 'playing' stamp: 'JEA 11/2/2020 00:10:25' prior: 50874585!
putOAt: aPosition

	isXPlaying not
		ifTrue: [
			self put: (OChip newAt: aPosition).
		]
		ifFalse: [
			self error: self class notYourTurnDescription.
		]! !

!testRun: #TerniLapilliTest #test01XPlaysFirst stamp: 'JEA 11/2/2020 00:10:32'!
PASSED!

!testRun: #TerniLapilliTest #test02XCanPlayItsTurn stamp: 'JEA 11/2/2020 00:10:32'!
PASSED!

!testRun: #TerniLapilliTest #test03OPlaysAfterX stamp: 'JEA 11/2/2020 00:10:32'!
PASSED!

!testRun: #TerniLapilliTest #test04OCanPlayItsTurn stamp: 'JEA 11/2/2020 00:10:32'!
PASSED!

!testRun: #TerniLapilliTest #test05XPlaysAfterO stamp: 'JEA 11/2/2020 00:10:32'!
PASSED!

!testRun: #TerniLapilliTest #test06XCantPlayOsTurn stamp: 'JEA 11/2/2020 00:10:32'!
PASSED!

!testRun: #TerniLapilliTest #test07OCantPlayXsTurn stamp: 'JEA 11/2/2020 00:10:32'!
PASSED!

!testRun: #TerniLapilliTest #test07PositionsDontOverlap stamp: 'JEA 11/2/2020 00:10:32'!
PASSED!

!testRun: #TerniLapilliTest #test08PositionsAreOccupied stamp: 'JEA 11/2/2020 00:10:32'!
PASSED!

!testRun: #TerniLapilliTest #test09OCantPlayInOccupiedPosition stamp: 'JEA 11/2/2020 00:10:32'!
PASSED!

!testRun: #TerniLapilliTest #test09XCantPlayInOccupiedPosition stamp: 'JEA 11/2/2020 00:10:32'!
PASSED!

!testRun: #TerniLapilliTest #test10XAndOAreAtEveryPositionPlayed stamp: 'JEA 11/2/2020 00:10:32'!
PASSED!

!testRun: #TerniLapilliTest #test11XCantPlayInInvalidPosition stamp: 'JEA 11/2/2020 00:10:32'!
PASSED!

!testRun: #TerniLapilliTest #test12OCantPlayInInvalidPosition stamp: 'JEA 11/2/2020 00:10:32'!
PASSED!

!testRun: #TerniLapilliTest #test13CantPlaceMoreThan3Chips stamp: 'JEA 11/2/2020 00:10:32'!
PASSED!

!testRun: #TerniLapilliTest #test14XCantMoveUntilAllChipsArePlaced stamp: 'JEA 11/2/2020 00:10:32'!
PASSED!

!testRun: #TerniLapilliTest #test15OCantMoveUntilAllChipsArePlaced stamp: 'JEA 11/2/2020 00:10:32'!
PASSED!

!testRun: #TerniLapilliTest #test16XCanMoveAfterAllChipsArePlaced stamp: 'JEA 11/2/2020 00:10:32'!
PASSED!

!testRun: #TerniLapilliTest #test17OCanMoveAfterAllChipsArePlaced stamp: 'JEA 11/2/2020 00:10:32'!
PASSED!
!TerniLapilliTest methodsFor: 'tests' stamp: 'JEA 11/2/2020 00:10:42'!
test08PositionsDontOverlap
	| aTerniLapilliGame |
	
	aTerniLapilliGame := TerniLapilli new.
	aTerniLapilliGame putXAt: 0@0.
	aTerniLapilliGame putOAt: 0@1.

	self assert: (aTerniLapilliGame isXAt: 0@0).
	self assert: (aTerniLapilliGame isOAt: 0@0) not.
	self assert: (aTerniLapilliGame isOAt: 0@1).
	self assert: (aTerniLapilliGame isXAt: 0@1) not.! !

!methodRemoval: TerniLapilliTest #test07PositionsDontOverlap stamp: 'JEA 11/2/2020 00:10:42'!
test07PositionsDontOverlap
	| aTerniLapilliGame |
	
	aTerniLapilliGame := TerniLapilli new.
	aTerniLapilliGame putXAt: 0@0.
	aTerniLapilliGame putOAt: 0@1.

	self assert: (aTerniLapilliGame isXAt: 0@0).
	self assert: (aTerniLapilliGame isOAt: 0@0) not.
	self assert: (aTerniLapilliGame isOAt: 0@1).
	self assert: (aTerniLapilliGame isXAt: 0@1) not.!
!TerniLapilliTest methodsFor: 'tests' stamp: 'JEA 11/2/2020 00:10:47'!
test07PositionsDontOverlap
	| aTerniLapilliGame |
	
	aTerniLapilliGame := TerniLapilli new.
	aTerniLapilliGame putXAt: 0@0.
	aTerniLapilliGame putOAt: 0@1.

	self assert: (aTerniLapilliGame isXAt: 0@0).
	self assert: (aTerniLapilliGame isOAt: 0@0) not.
	self assert: (aTerniLapilliGame isOAt: 0@1).
	self assert: (aTerniLapilliGame isXAt: 0@1) not.! !

!methodRemoval: TerniLapilliTest #test08PositionsDontOverlap stamp: 'JEA 11/2/2020 00:10:47'!
test08PositionsDontOverlap
	| aTerniLapilliGame |
	
	aTerniLapilliGame := TerniLapilli new.
	aTerniLapilliGame putXAt: 0@0.
	aTerniLapilliGame putOAt: 0@1.

	self assert: (aTerniLapilliGame isXAt: 0@0).
	self assert: (aTerniLapilliGame isOAt: 0@0) not.
	self assert: (aTerniLapilliGame isOAt: 0@1).
	self assert: (aTerniLapilliGame isXAt: 0@1) not.!
!TerniLapilliTest methodsFor: 'tests' stamp: 'JEA 11/2/2020 00:10:58'!
test19OCanMoveAfterAllChipsArePlaced
	| aTerniLapilliGame |

	aTerniLapilliGame := TerniLapilli new.
	aTerniLapilliGame putXAt: 0@0.
	aTerniLapilliGame putOAt: 0@1.
	aTerniLapilliGame putXAt: 0@2.
	aTerniLapilliGame putOAt: 1@0.
	aTerniLapilliGame putXAt: 1@1.
	aTerniLapilliGame putOAt: 1@2.
	aTerniLapilliGame moveXFrom: 1@1 to: 2@1.
	
	aTerniLapilliGame moveOFrom: 1@0 to: 2@0.

	self assert: (aTerniLapilliGame isOAt: 2@0).
	self assert: (aTerniLapilliGame isOAt: 1@0) not.
	self assert: aTerniLapilliGame chipsOPlayed = 3.! !

!methodRemoval: TerniLapilliTest #test17OCanMoveAfterAllChipsArePlaced stamp: 'JEA 11/2/2020 00:10:58'!
test17OCanMoveAfterAllChipsArePlaced
	| aTerniLapilliGame |

	aTerniLapilliGame := TerniLapilli new.
	aTerniLapilliGame putXAt: 0@0.
	aTerniLapilliGame putOAt: 0@1.
	aTerniLapilliGame putXAt: 0@2.
	aTerniLapilliGame putOAt: 1@0.
	aTerniLapilliGame putXAt: 1@1.
	aTerniLapilliGame putOAt: 1@2.
	aTerniLapilliGame moveXFrom: 1@1 to: 2@1.
	
	aTerniLapilliGame moveOFrom: 1@0 to: 2@0.

	self assert: (aTerniLapilliGame isOAt: 2@0).
	self assert: (aTerniLapilliGame isOAt: 1@0) not.
	self assert: aTerniLapilliGame chipsOPlayed = 3.!
!TerniLapilliTest methodsFor: 'tests' stamp: 'JEA 11/2/2020 00:11:02'!
test18XCanMoveAfterAllChipsArePlaced
	| aTerniLapilliGame |

	aTerniLapilliGame := TerniLapilli new.
	aTerniLapilliGame putXAt: 0@0.
	aTerniLapilliGame putOAt: 0@1.
	aTerniLapilliGame putXAt: 0@2.
	aTerniLapilliGame putOAt: 1@0.
	aTerniLapilliGame putXAt: 1@1.
	aTerniLapilliGame putOAt: 1@2.

	aTerniLapilliGame moveXFrom: 1@1 to: 2@1.

	self assert: (aTerniLapilliGame isXAt: 2@1).
	self assert: (aTerniLapilliGame isXAt: 1@1) not.
	self assert: aTerniLapilliGame chipsXPlayed = 3.! !

!methodRemoval: TerniLapilliTest #test16XCanMoveAfterAllChipsArePlaced stamp: 'JEA 11/2/2020 00:11:02'!
test16XCanMoveAfterAllChipsArePlaced
	| aTerniLapilliGame |

	aTerniLapilliGame := TerniLapilli new.
	aTerniLapilliGame putXAt: 0@0.
	aTerniLapilliGame putOAt: 0@1.
	aTerniLapilliGame putXAt: 0@2.
	aTerniLapilliGame putOAt: 1@0.
	aTerniLapilliGame putXAt: 1@1.
	aTerniLapilliGame putOAt: 1@2.

	aTerniLapilliGame moveXFrom: 1@1 to: 2@1.

	self assert: (aTerniLapilliGame isXAt: 2@1).
	self assert: (aTerniLapilliGame isXAt: 1@1) not.
	self assert: aTerniLapilliGame chipsXPlayed = 3.!
!TerniLapilliTest methodsFor: 'tests' stamp: 'JEA 11/2/2020 00:11:04'!
test17OCantMoveUntilAllChipsArePlaced
	| aTerniLapilliGame |

	aTerniLapilliGame := TerniLapilli new.
	aTerniLapilliGame putXAt: 0@0.
	aTerniLapilliGame putOAt: 0@1.
	aTerniLapilliGame putXAt: 0@2.
	aTerniLapilliGame putOAt: 1@0.
	aTerniLapilliGame putXAt: 1@1.
	
	self should: [ aTerniLapilliGame moveOFrom: 1@0 to: 2@0. ]
		raise: Error
		withExceptionDo: [ :anException | self assert: anException messageText = TerniLapilli cantMoveYetDescription. ].! !

!methodRemoval: TerniLapilliTest #test15OCantMoveUntilAllChipsArePlaced stamp: 'JEA 11/2/2020 00:11:04'!
test15OCantMoveUntilAllChipsArePlaced
	| aTerniLapilliGame |

	aTerniLapilliGame := TerniLapilli new.
	aTerniLapilliGame putXAt: 0@0.
	aTerniLapilliGame putOAt: 0@1.
	aTerniLapilliGame putXAt: 0@2.
	aTerniLapilliGame putOAt: 1@0.
	aTerniLapilliGame putXAt: 1@1.
	
	self should: [ aTerniLapilliGame moveOFrom: 1@0 to: 2@0. ]
		raise: Error
		withExceptionDo: [ :anException | self assert: anException messageText = TerniLapilli cantMoveYetDescription. ].!
!TerniLapilliTest methodsFor: 'tests' stamp: 'JEA 11/2/2020 00:11:07'!
test16XCantMoveUntilAllChipsArePlaced
	| aTerniLapilliGame |

	aTerniLapilliGame := TerniLapilli new.
	aTerniLapilliGame putXAt: 0@0.
	aTerniLapilliGame putOAt: 0@1.
	aTerniLapilliGame putXAt: 0@2.
	aTerniLapilliGame putOAt: 1@0.
	
	self should: [ aTerniLapilliGame moveXFrom: 0@2 to: 1@2. ]
		raise: Error
		withExceptionDo: [ :anException | self assert: anException messageText = TerniLapilli cantMoveYetDescription. ].! !

!methodRemoval: TerniLapilliTest #test14XCantMoveUntilAllChipsArePlaced stamp: 'JEA 11/2/2020 00:11:07'!
test14XCantMoveUntilAllChipsArePlaced
	| aTerniLapilliGame |

	aTerniLapilliGame := TerniLapilli new.
	aTerniLapilliGame putXAt: 0@0.
	aTerniLapilliGame putOAt: 0@1.
	aTerniLapilliGame putXAt: 0@2.
	aTerniLapilliGame putOAt: 1@0.
	
	self should: [ aTerniLapilliGame moveXFrom: 0@2 to: 1@2. ]
		raise: Error
		withExceptionDo: [ :anException | self assert: anException messageText = TerniLapilli cantMoveYetDescription. ].!
!TerniLapilliTest methodsFor: 'tests' stamp: 'JEA 11/2/2020 00:11:10'!
test15CantPlaceMoreThan3Chips
	| aTerniLapilliGame |

	aTerniLapilliGame := TerniLapilli new.
	aTerniLapilliGame putXAt: 0@0.
	aTerniLapilliGame putOAt: 0@1.
	aTerniLapilliGame putXAt: 0@2.
	aTerniLapilliGame putOAt: 1@0.
	aTerniLapilliGame putXAt: 1@1.
	aTerniLapilliGame putOAt: 1@2.
	
	self should: [ aTerniLapilliGame putXAt: 2@0. ]
		raise: Error
		withExceptionDo: [ :anException | self assert: anException messageText = TerniLapilli noMoreChipsDescription. ].! !

!methodRemoval: TerniLapilliTest #test13CantPlaceMoreThan3Chips stamp: 'JEA 11/2/2020 00:11:10'!
test13CantPlaceMoreThan3Chips
	| aTerniLapilliGame |

	aTerniLapilliGame := TerniLapilli new.
	aTerniLapilliGame putXAt: 0@0.
	aTerniLapilliGame putOAt: 0@1.
	aTerniLapilliGame putXAt: 0@2.
	aTerniLapilliGame putOAt: 1@0.
	aTerniLapilliGame putXAt: 1@1.
	aTerniLapilliGame putOAt: 1@2.
	
	self should: [ aTerniLapilliGame putXAt: 2@0. ]
		raise: Error
		withExceptionDo: [ :anException | self assert: anException messageText = TerniLapilli noMoreChipsDescription. ].!
!TerniLapilliTest methodsFor: 'tests' stamp: 'JEA 11/2/2020 00:11:14'!
test14OCantPlayInInvalidPosition
	| aTerniLapilliGame |

	aTerniLapilliGame := TerniLapilli new.
	aTerniLapilliGame putXAt: 0@1.
	
	self should: [ aTerniLapilliGame putOAt: 3@2. ]
		raise: Error
		withExceptionDo: [ :anException | anException description = TerniLapilliChip invalidPositionDescription. ].! !

!methodRemoval: TerniLapilliTest #test12OCantPlayInInvalidPosition stamp: 'JEA 11/2/2020 00:11:14'!
test12OCantPlayInInvalidPosition
	| aTerniLapilliGame |

	aTerniLapilliGame := TerniLapilli new.
	aTerniLapilliGame putXAt: 0@1.
	
	self should: [ aTerniLapilliGame putOAt: 3@2. ]
		raise: Error
		withExceptionDo: [ :anException | anException description = TerniLapilliChip invalidPositionDescription. ].!
!TerniLapilliTest methodsFor: 'tests' stamp: 'JEA 11/2/2020 00:11:16'!
test13XCantPlayInInvalidPosition

	self should: [ TerniLapilli new putXAt: 3@2. ]
		raise: Error
		withExceptionDo: [ :anException | anException description = TerniLapilliChip invalidPositionDescription. ].! !

!methodRemoval: TerniLapilliTest #test11XCantPlayInInvalidPosition stamp: 'JEA 11/2/2020 00:11:16'!
test11XCantPlayInInvalidPosition

	self should: [ TerniLapilli new putXAt: 3@2. ]
		raise: Error
		withExceptionDo: [ :anException | anException description = TerniLapilliChip invalidPositionDescription. ].!
!TerniLapilliTest methodsFor: 'tests' stamp: 'JEA 11/2/2020 00:11:19'!
test12XAndOAreAtEveryPositionPlayed
	| aTerniLapilliGame |
	
	aTerniLapilliGame := TerniLapilli new.
	aTerniLapilliGame putXAt: 0@0.
	aTerniLapilliGame putOAt: 0@1.
	aTerniLapilliGame putXAt: 1@0.
	aTerniLapilliGame putOAt: 1@1.

	self assert: (aTerniLapilliGame isXAt: 0@0).
	self assert: (aTerniLapilliGame isXAt: 1@0).
	self assert: (aTerniLapilliGame isOAt: 0@1).
	self assert: (aTerniLapilliGame isOAt: 1@1).! !

!methodRemoval: TerniLapilliTest #test10XAndOAreAtEveryPositionPlayed stamp: 'JEA 11/2/2020 00:11:19'!
test10XAndOAreAtEveryPositionPlayed
	| aTerniLapilliGame |
	
	aTerniLapilliGame := TerniLapilli new.
	aTerniLapilliGame putXAt: 0@0.
	aTerniLapilliGame putOAt: 0@1.
	aTerniLapilliGame putXAt: 1@0.
	aTerniLapilliGame putOAt: 1@1.

	self assert: (aTerniLapilliGame isXAt: 0@0).
	self assert: (aTerniLapilliGame isXAt: 1@0).
	self assert: (aTerniLapilliGame isOAt: 0@1).
	self assert: (aTerniLapilliGame isOAt: 1@1).!
!TerniLapilliTest methodsFor: 'tests' stamp: 'JEA 11/2/2020 00:11:23'!
test11XCantPlayInOccupiedPosition
	| aTerniLapilliGame |
	
	aTerniLapilliGame := TerniLapilli new.
	aTerniLapilliGame putXAt: 0@0.
	aTerniLapilliGame putOAt: 0@1.

	self should: [ aTerniLapilliGame putXAt: 0@1. ]
		raise: Error
		withExceptionDo: [ :anException | anException description = TerniLapilli positionOccupiedDescription. ].! !

!methodRemoval: TerniLapilliTest #test09XCantPlayInOccupiedPosition stamp: 'JEA 11/2/2020 00:11:23'!
test09XCantPlayInOccupiedPosition
	| aTerniLapilliGame |
	
	aTerniLapilliGame := TerniLapilli new.
	aTerniLapilliGame putXAt: 0@0.
	aTerniLapilliGame putOAt: 0@1.

	self should: [ aTerniLapilliGame putXAt: 0@1. ]
		raise: Error
		withExceptionDo: [ :anException | anException description = TerniLapilli positionOccupiedDescription. ].!
!TerniLapilliTest methodsFor: 'tests' stamp: 'JEA 11/2/2020 00:11:29'!
test10OCantPlayInOccupiedPosition
	| aTerniLapilliGame |
	
	aTerniLapilliGame := TerniLapilli new.
	aTerniLapilliGame putXAt: 0@0.

	self should: [ aTerniLapilliGame putOAt: 0@0. ]
		raise: Error
		withExceptionDo: [ :anException | anException description = TerniLapilli positionOccupiedDescription. ].! !

!methodRemoval: TerniLapilliTest #test09OCantPlayInOccupiedPosition stamp: 'JEA 11/2/2020 00:11:29'!
test09OCantPlayInOccupiedPosition
	| aTerniLapilliGame |
	
	aTerniLapilliGame := TerniLapilli new.
	aTerniLapilliGame putXAt: 0@0.

	self should: [ aTerniLapilliGame putOAt: 0@0. ]
		raise: Error
		withExceptionDo: [ :anException | anException description = TerniLapilli positionOccupiedDescription. ].!
!TerniLapilliTest methodsFor: 'tests' stamp: 'JEA 11/2/2020 00:11:32'!
test09PositionsAreOccupied
	| aTerniLapilliGame |
	
	aTerniLapilliGame := TerniLapilli new.
	aTerniLapilliGame putXAt: 0@0.
	aTerniLapilliGame putOAt: 0@1.

	self assert: (aTerniLapilliGame isOccupied: 0@0).
	self assert: (aTerniLapilliGame isOccupied: 0@1).! !

!methodRemoval: TerniLapilliTest #test08PositionsAreOccupied stamp: 'JEA 11/2/2020 00:11:32'!
test08PositionsAreOccupied
	| aTerniLapilliGame |
	
	aTerniLapilliGame := TerniLapilli new.
	aTerniLapilliGame putXAt: 0@0.
	aTerniLapilliGame putOAt: 0@1.

	self assert: (aTerniLapilliGame isOccupied: 0@0).
	self assert: (aTerniLapilliGame isOccupied: 0@1).!
!TerniLapilliTest methodsFor: 'tests' stamp: 'JEA 11/2/2020 00:11:35'!
test08PositionsDontOverlap
	| aTerniLapilliGame |
	
	aTerniLapilliGame := TerniLapilli new.
	aTerniLapilliGame putXAt: 0@0.
	aTerniLapilliGame putOAt: 0@1.

	self assert: (aTerniLapilliGame isXAt: 0@0).
	self assert: (aTerniLapilliGame isOAt: 0@0) not.
	self assert: (aTerniLapilliGame isOAt: 0@1).
	self assert: (aTerniLapilliGame isXAt: 0@1) not.! !

!methodRemoval: TerniLapilliTest #test07PositionsDontOverlap stamp: 'JEA 11/2/2020 00:11:35'!
test07PositionsDontOverlap
	| aTerniLapilliGame |
	
	aTerniLapilliGame := TerniLapilli new.
	aTerniLapilliGame putXAt: 0@0.
	aTerniLapilliGame putOAt: 0@1.

	self assert: (aTerniLapilliGame isXAt: 0@0).
	self assert: (aTerniLapilliGame isOAt: 0@0) not.
	self assert: (aTerniLapilliGame isOAt: 0@1).
	self assert: (aTerniLapilliGame isXAt: 0@1) not.!

!testRun: #TerniLapilliTest #test01XPlaysFirst stamp: 'JEA 11/2/2020 00:11:37'!
PASSED!

!testRun: #TerniLapilliTest #test02XCanPlayItsTurn stamp: 'JEA 11/2/2020 00:11:37'!
PASSED!

!testRun: #TerniLapilliTest #test03OPlaysAfterX stamp: 'JEA 11/2/2020 00:11:37'!
PASSED!

!testRun: #TerniLapilliTest #test04OCanPlayItsTurn stamp: 'JEA 11/2/2020 00:11:37'!
PASSED!

!testRun: #TerniLapilliTest #test05XPlaysAfterO stamp: 'JEA 11/2/2020 00:11:37'!
PASSED!

!testRun: #TerniLapilliTest #test06XCantPlayOsTurn stamp: 'JEA 11/2/2020 00:11:37'!
PASSED!

!testRun: #TerniLapilliTest #test07OCantPlayXsTurn stamp: 'JEA 11/2/2020 00:11:37'!
PASSED!

!testRun: #TerniLapilliTest #test08PositionsDontOverlap stamp: 'JEA 11/2/2020 00:11:37'!
PASSED!

!testRun: #TerniLapilliTest #test09PositionsAreOccupied stamp: 'JEA 11/2/2020 00:11:37'!
PASSED!

!testRun: #TerniLapilliTest #test10OCantPlayInOccupiedPosition stamp: 'JEA 11/2/2020 00:11:37'!
PASSED!

!testRun: #TerniLapilliTest #test11XCantPlayInOccupiedPosition stamp: 'JEA 11/2/2020 00:11:37'!
PASSED!

!testRun: #TerniLapilliTest #test12XAndOAreAtEveryPositionPlayed stamp: 'JEA 11/2/2020 00:11:37'!
PASSED!

!testRun: #TerniLapilliTest #test13XCantPlayInInvalidPosition stamp: 'JEA 11/2/2020 00:11:37'!
PASSED!

!testRun: #TerniLapilliTest #test14OCantPlayInInvalidPosition stamp: 'JEA 11/2/2020 00:11:37'!
PASSED!

!testRun: #TerniLapilliTest #test15CantPlaceMoreThan3Chips stamp: 'JEA 11/2/2020 00:11:37'!
PASSED!

!testRun: #TerniLapilliTest #test16XCantMoveUntilAllChipsArePlaced stamp: 'JEA 11/2/2020 00:11:37'!
PASSED!

!testRun: #TerniLapilliTest #test17OCantMoveUntilAllChipsArePlaced stamp: 'JEA 11/2/2020 00:11:37'!
PASSED!

!testRun: #TerniLapilliTest #test18XCanMoveAfterAllChipsArePlaced stamp: 'JEA 11/2/2020 00:11:37'!
PASSED!

!testRun: #TerniLapilliTest #test19OCanMoveAfterAllChipsArePlaced stamp: 'JEA 11/2/2020 00:11:37'!
PASSED!

----SNAPSHOT----(2 November 2020 00:11:52) CuisUniversity-4384.image priorSource: 17417799!
!TerniLapilliTest methodsFor: 'tests' stamp: 'JEA 11/2/2020 00:13:18'!
test20XCantMoveInOsTurn
	| aTerniLapilliGame |

	aTerniLapilliGame := TerniLapilli new.
	aTerniLapilliGame putXAt: 0@0.
	aTerniLapilliGame putOAt: 0@1.
	aTerniLapilliGame putXAt: 0@2.
	aTerniLapilliGame putOAt: 1@0.
	aTerniLapilliGame putXAt: 1@1.
	aTerniLapilliGame putOAt: 1@2.
	aTerniLapilliGame moveXFrom: 1@1 to: 2@1.
	
	self should: [ aTerniLapilliGame moveXFrom: 2@1 to: 1@1. ]
		raise: Error
		withExceptionDo: [ :anException | self assert: anException messageText = TerniLapilli notYourTurnDescription. ].! !
!TerniLapilliTest methodsFor: 'tests' stamp: 'JEA 11/2/2020 00:13:28' prior: 50877020!
test06XCantPlayOsTurn
	| aTerniLapilliGame |
	
	aTerniLapilliGame := TerniLapilli new.
	aTerniLapilliGame putXAt: 0@0.
	
	self should: [ aTerniLapilliGame putXAt: 0@1. ]
		raise: Error
		withExceptionDo: [ :anException | self assert: anException messageText = TerniLapilli notYourTurnDescription. ].! !
!TerniLapilliTest methodsFor: 'tests' stamp: 'JEA 11/2/2020 00:13:31' prior: 50877290!
test07OCantPlayXsTurn

	self should: [ TerniLapilli new putOAt: 0@0. ]
		raise: Error
		withExceptionDo: [ :anException | self assert: anException messageText = TerniLapilli notYourTurnDescription. ].! !

!testRun: #TerniLapilliTest #test01XPlaysFirst stamp: 'JEA 11/2/2020 00:13:31'!
PASSED!

!testRun: #TerniLapilliTest #test02XCanPlayItsTurn stamp: 'JEA 11/2/2020 00:13:31'!
PASSED!

!testRun: #TerniLapilliTest #test03OPlaysAfterX stamp: 'JEA 11/2/2020 00:13:31'!
PASSED!

!testRun: #TerniLapilliTest #test04OCanPlayItsTurn stamp: 'JEA 11/2/2020 00:13:31'!
PASSED!

!testRun: #TerniLapilliTest #test05XPlaysAfterO stamp: 'JEA 11/2/2020 00:13:31'!
PASSED!

!testRun: #TerniLapilliTest #test06XCantPlayOsTurn stamp: 'JEA 11/2/2020 00:13:31'!
PASSED!

!testRun: #TerniLapilliTest #test07OCantPlayXsTurn stamp: 'JEA 11/2/2020 00:13:31'!
PASSED!

!testRun: #TerniLapilliTest #test08PositionsDontOverlap stamp: 'JEA 11/2/2020 00:13:31'!
PASSED!

!testRun: #TerniLapilliTest #test09PositionsAreOccupied stamp: 'JEA 11/2/2020 00:13:31'!
PASSED!

!testRun: #TerniLapilliTest #test10OCantPlayInOccupiedPosition stamp: 'JEA 11/2/2020 00:13:31'!
PASSED!

!testRun: #TerniLapilliTest #test11XCantPlayInOccupiedPosition stamp: 'JEA 11/2/2020 00:13:31'!
PASSED!

!testRun: #TerniLapilliTest #test12XAndOAreAtEveryPositionPlayed stamp: 'JEA 11/2/2020 00:13:31'!
PASSED!

!testRun: #TerniLapilliTest #test13XCantPlayInInvalidPosition stamp: 'JEA 11/2/2020 00:13:31'!
PASSED!

!testRun: #TerniLapilliTest #test14OCantPlayInInvalidPosition stamp: 'JEA 11/2/2020 00:13:31'!
PASSED!

!testRun: #TerniLapilliTest #test15CantPlaceMoreThan3Chips stamp: 'JEA 11/2/2020 00:13:31'!
PASSED!

!testRun: #TerniLapilliTest #test16XCantMoveUntilAllChipsArePlaced stamp: 'JEA 11/2/2020 00:13:31'!
PASSED!

!testRun: #TerniLapilliTest #test17OCantMoveUntilAllChipsArePlaced stamp: 'JEA 11/2/2020 00:13:31'!
PASSED!

!testRun: #TerniLapilliTest #test18XCanMoveAfterAllChipsArePlaced stamp: 'JEA 11/2/2020 00:13:31'!
PASSED!

!testRun: #TerniLapilliTest #test19OCanMoveAfterAllChipsArePlaced stamp: 'JEA 11/2/2020 00:13:31'!
PASSED!

!testRun: #TerniLapilliTest #test20XCantMoveInOsTurn stamp: 'JEA 11/2/2020 00:13:31'!
PASSED!
!TerniLapilli methodsFor: 'playing' stamp: 'JEA 11/2/2020 00:13:57' prior: 50876947!
moveXFrom: currentPosition to: newPosition

	chips size < 6
		ifTrue: [
			self error: self class cantMoveYetDescription.
		]
		ifFalse: [
			self putXAt: newPosition.
			chips remove: (XChip newAt: currentPosition).
		]! !
!TerniLapilli methodsFor: 'playing' stamp: 'JEA 11/2/2020 00:14:01' prior: 50876957!
moveOFrom: currentPosition to: newPosition

	chips size < 6
		ifTrue: [
			self error: self class cantMoveYetDescription.
		]
		ifFalse: [
			self putOAt: newPosition.
			chips remove: (OChip newAt: currentPosition).
		]! !

!testRun: #TerniLapilliTest #test01XPlaysFirst stamp: 'JEA 11/2/2020 00:14:02'!
PASSED!

!testRun: #TerniLapilliTest #test02XCanPlayItsTurn stamp: 'JEA 11/2/2020 00:14:02'!
PASSED!

!testRun: #TerniLapilliTest #test03OPlaysAfterX stamp: 'JEA 11/2/2020 00:14:02'!
PASSED!

!testRun: #TerniLapilliTest #test04OCanPlayItsTurn stamp: 'JEA 11/2/2020 00:14:02'!
PASSED!

!testRun: #TerniLapilliTest #test05XPlaysAfterO stamp: 'JEA 11/2/2020 00:14:02'!
PASSED!

!testRun: #TerniLapilliTest #test06XCantPlayOsTurn stamp: 'JEA 11/2/2020 00:14:02'!
PASSED!

!testRun: #TerniLapilliTest #test07OCantPlayXsTurn stamp: 'JEA 11/2/2020 00:14:02'!
PASSED!

!testRun: #TerniLapilliTest #test08PositionsDontOverlap stamp: 'JEA 11/2/2020 00:14:02'!
PASSED!

!testRun: #TerniLapilliTest #test09PositionsAreOccupied stamp: 'JEA 11/2/2020 00:14:02'!
PASSED!

!testRun: #TerniLapilliTest #test10OCantPlayInOccupiedPosition stamp: 'JEA 11/2/2020 00:14:02'!
PASSED!

!testRun: #TerniLapilliTest #test11XCantPlayInOccupiedPosition stamp: 'JEA 11/2/2020 00:14:02'!
PASSED!

!testRun: #TerniLapilliTest #test12XAndOAreAtEveryPositionPlayed stamp: 'JEA 11/2/2020 00:14:02'!
PASSED!

!testRun: #TerniLapilliTest #test13XCantPlayInInvalidPosition stamp: 'JEA 11/2/2020 00:14:02'!
PASSED!

!testRun: #TerniLapilliTest #test14OCantPlayInInvalidPosition stamp: 'JEA 11/2/2020 00:14:02'!
PASSED!

!testRun: #TerniLapilliTest #test15CantPlaceMoreThan3Chips stamp: 'JEA 11/2/2020 00:14:02'!
PASSED!

!testRun: #TerniLapilliTest #test16XCantMoveUntilAllChipsArePlaced stamp: 'JEA 11/2/2020 00:14:02'!
PASSED!

!testRun: #TerniLapilliTest #test17OCantMoveUntilAllChipsArePlaced stamp: 'JEA 11/2/2020 00:14:02'!
PASSED!

!testRun: #TerniLapilliTest #test18XCanMoveAfterAllChipsArePlaced stamp: 'JEA 11/2/2020 00:14:02'!
ERROR!

!testRun: #TerniLapilliTest #test19OCanMoveAfterAllChipsArePlaced stamp: 'JEA 11/2/2020 00:14:02'!
ERROR!

!testRun: #TerniLapilliTest #test20XCantMoveInOsTurn stamp: 'JEA 11/2/2020 00:14:02'!
ERROR!
!TerniLapilli methodsFor: 'playing' stamp: 'JEA 11/2/2020 00:14:24' prior: 50878006!
moveXFrom: currentPosition to: newPosition

	chips size < 6
		ifTrue: [
			self error: self class cantMoveYetDescription.
		]
		ifFalse: [
			chips remove: (XChip newAt: currentPosition).
			self putXAt: newPosition.
		]! !
!TerniLapilli methodsFor: 'playing' stamp: 'JEA 11/2/2020 00:14:33' prior: 50878016!
moveOFrom: currentPosition to: newPosition

	chips size < 6
		ifTrue: [
			self error: self class cantMoveYetDescription.
		]
		ifFalse: [
			chips remove: (OChip newAt: currentPosition).
			self putOAt: newPosition.
		]! !
!TerniLapilli methodsFor: 'playing' stamp: 'JEA 11/2/2020 00:14:42' prior: 50878098!
moveOFrom: currentPosition to: newPosition

	chips size < 6
		ifTrue: [
			self error: self class cantMoveYetDescription.
		]
		ifFalse: [
			chips remove: (OChip newAt: currentPosition).
			chips add: (OChip newAt: currentPosition).
		]! !
!TerniLapilli methodsFor: 'playing' stamp: 'JEA 11/2/2020 00:14:50' prior: 50878088!
moveXFrom: currentPosition to: newPosition

	chips size < 6
		ifTrue: [
			self error: self class cantMoveYetDescription.
		]
		ifFalse: [
			chips remove: (XChip newAt: currentPosition).
			chips add: (XChip newAt: currentPosition).
		]! !

!testRun: #TerniLapilliTest #test01XPlaysFirst stamp: 'JEA 11/2/2020 00:14:51'!
PASSED!

!testRun: #TerniLapilliTest #test02XCanPlayItsTurn stamp: 'JEA 11/2/2020 00:14:51'!
PASSED!

!testRun: #TerniLapilliTest #test03OPlaysAfterX stamp: 'JEA 11/2/2020 00:14:51'!
PASSED!

!testRun: #TerniLapilliTest #test04OCanPlayItsTurn stamp: 'JEA 11/2/2020 00:14:51'!
PASSED!

!testRun: #TerniLapilliTest #test05XPlaysAfterO stamp: 'JEA 11/2/2020 00:14:51'!
PASSED!

!testRun: #TerniLapilliTest #test06XCantPlayOsTurn stamp: 'JEA 11/2/2020 00:14:51'!
PASSED!

!testRun: #TerniLapilliTest #test07OCantPlayXsTurn stamp: 'JEA 11/2/2020 00:14:51'!
PASSED!

!testRun: #TerniLapilliTest #test08PositionsDontOverlap stamp: 'JEA 11/2/2020 00:14:51'!
PASSED!

!testRun: #TerniLapilliTest #test09PositionsAreOccupied stamp: 'JEA 11/2/2020 00:14:51'!
PASSED!

!testRun: #TerniLapilliTest #test10OCantPlayInOccupiedPosition stamp: 'JEA 11/2/2020 00:14:51'!
PASSED!

!testRun: #TerniLapilliTest #test11XCantPlayInOccupiedPosition stamp: 'JEA 11/2/2020 00:14:51'!
PASSED!

!testRun: #TerniLapilliTest #test12XAndOAreAtEveryPositionPlayed stamp: 'JEA 11/2/2020 00:14:51'!
PASSED!

!testRun: #TerniLapilliTest #test13XCantPlayInInvalidPosition stamp: 'JEA 11/2/2020 00:14:51'!
PASSED!

!testRun: #TerniLapilliTest #test14OCantPlayInInvalidPosition stamp: 'JEA 11/2/2020 00:14:51'!
PASSED!

!testRun: #TerniLapilliTest #test15CantPlaceMoreThan3Chips stamp: 'JEA 11/2/2020 00:14:51'!
PASSED!

!testRun: #TerniLapilliTest #test16XCantMoveUntilAllChipsArePlaced stamp: 'JEA 11/2/2020 00:14:51'!
PASSED!

!testRun: #TerniLapilliTest #test17OCantMoveUntilAllChipsArePlaced stamp: 'JEA 11/2/2020 00:14:51'!
PASSED!

!testRun: #TerniLapilliTest #test18XCanMoveAfterAllChipsArePlaced stamp: 'JEA 11/2/2020 00:14:51'!
FAILURE!

!testRun: #TerniLapilliTest #test19OCanMoveAfterAllChipsArePlaced stamp: 'JEA 11/2/2020 00:14:51'!
FAILURE!

!testRun: #TerniLapilliTest #test20XCantMoveInOsTurn stamp: 'JEA 11/2/2020 00:14:51'!
FAILURE!

!testRun: #TerniLapilliTest #test01XPlaysFirst stamp: 'JEA 11/2/2020 00:15:17'!
PASSED!

!testRun: #TerniLapilliTest #test02XCanPlayItsTurn stamp: 'JEA 11/2/2020 00:15:17'!
PASSED!

!testRun: #TerniLapilliTest #test03OPlaysAfterX stamp: 'JEA 11/2/2020 00:15:17'!
PASSED!

!testRun: #TerniLapilliTest #test04OCanPlayItsTurn stamp: 'JEA 11/2/2020 00:15:17'!
PASSED!

!testRun: #TerniLapilliTest #test05XPlaysAfterO stamp: 'JEA 11/2/2020 00:15:17'!
PASSED!

!testRun: #TerniLapilliTest #test06XCantPlayOsTurn stamp: 'JEA 11/2/2020 00:15:17'!
PASSED!

!testRun: #TerniLapilliTest #test07OCantPlayXsTurn stamp: 'JEA 11/2/2020 00:15:17'!
PASSED!

!testRun: #TerniLapilliTest #test08PositionsDontOverlap stamp: 'JEA 11/2/2020 00:15:17'!
PASSED!

!testRun: #TerniLapilliTest #test09PositionsAreOccupied stamp: 'JEA 11/2/2020 00:15:17'!
PASSED!

!testRun: #TerniLapilliTest #test10OCantPlayInOccupiedPosition stamp: 'JEA 11/2/2020 00:15:17'!
PASSED!

!testRun: #TerniLapilliTest #test11XCantPlayInOccupiedPosition stamp: 'JEA 11/2/2020 00:15:17'!
PASSED!

!testRun: #TerniLapilliTest #test12XAndOAreAtEveryPositionPlayed stamp: 'JEA 11/2/2020 00:15:17'!
PASSED!

!testRun: #TerniLapilliTest #test13XCantPlayInInvalidPosition stamp: 'JEA 11/2/2020 00:15:17'!
PASSED!

!testRun: #TerniLapilliTest #test14OCantPlayInInvalidPosition stamp: 'JEA 11/2/2020 00:15:17'!
PASSED!

!testRun: #TerniLapilliTest #test15CantPlaceMoreThan3Chips stamp: 'JEA 11/2/2020 00:15:17'!
PASSED!

!testRun: #TerniLapilliTest #test16XCantMoveUntilAllChipsArePlaced stamp: 'JEA 11/2/2020 00:15:17'!
PASSED!

!testRun: #TerniLapilliTest #test17OCantMoveUntilAllChipsArePlaced stamp: 'JEA 11/2/2020 00:15:17'!
PASSED!

!testRun: #TerniLapilliTest #test18XCanMoveAfterAllChipsArePlaced stamp: 'JEA 11/2/2020 00:15:17'!
FAILURE!

!testRun: #TerniLapilliTest #test19OCanMoveAfterAllChipsArePlaced stamp: 'JEA 11/2/2020 00:15:17'!
FAILURE!

!testRun: #TerniLapilliTest #test20XCantMoveInOsTurn stamp: 'JEA 11/2/2020 00:15:17'!
FAILURE!

!testRun: #TerniLapilliTest #test18XCanMoveAfterAllChipsArePlaced stamp: 'JEA 11/2/2020 00:15:18'!
FAILURE!
!TerniLapilli methodsFor: 'playing' stamp: 'JEA 11/2/2020 00:15:35' prior: 50878119!
moveXFrom: currentPosition to: newPosition

	chips size < 6
		ifTrue: [
			self error: self class cantMoveYetDescription.
		]
		ifFalse: [
			chips remove: (XChip newAt: currentPosition).
			chips add: (XChip newAt: newPosition).
		]! !
!TerniLapilli methodsFor: 'playing' stamp: 'JEA 11/2/2020 00:15:37' prior: 50878108!
moveOFrom: currentPosition to: newPosition

	chips size < 6
		ifTrue: [
			self error: self class cantMoveYetDescription.
		]
		ifFalse: [
			chips remove: (OChip newAt: currentPosition).
			chips add: (OChip newAt: newPosition).
		]! !

!testRun: #TerniLapilliTest #test01XPlaysFirst stamp: 'JEA 11/2/2020 00:15:38'!
PASSED!

!testRun: #TerniLapilliTest #test02XCanPlayItsTurn stamp: 'JEA 11/2/2020 00:15:38'!
PASSED!

!testRun: #TerniLapilliTest #test03OPlaysAfterX stamp: 'JEA 11/2/2020 00:15:38'!
PASSED!

!testRun: #TerniLapilliTest #test04OCanPlayItsTurn stamp: 'JEA 11/2/2020 00:15:38'!
PASSED!

!testRun: #TerniLapilliTest #test05XPlaysAfterO stamp: 'JEA 11/2/2020 00:15:38'!
PASSED!

!testRun: #TerniLapilliTest #test06XCantPlayOsTurn stamp: 'JEA 11/2/2020 00:15:38'!
PASSED!

!testRun: #TerniLapilliTest #test07OCantPlayXsTurn stamp: 'JEA 11/2/2020 00:15:38'!
PASSED!

!testRun: #TerniLapilliTest #test08PositionsDontOverlap stamp: 'JEA 11/2/2020 00:15:38'!
PASSED!

!testRun: #TerniLapilliTest #test09PositionsAreOccupied stamp: 'JEA 11/2/2020 00:15:38'!
PASSED!

!testRun: #TerniLapilliTest #test10OCantPlayInOccupiedPosition stamp: 'JEA 11/2/2020 00:15:38'!
PASSED!

!testRun: #TerniLapilliTest #test11XCantPlayInOccupiedPosition stamp: 'JEA 11/2/2020 00:15:38'!
PASSED!

!testRun: #TerniLapilliTest #test12XAndOAreAtEveryPositionPlayed stamp: 'JEA 11/2/2020 00:15:38'!
PASSED!

!testRun: #TerniLapilliTest #test13XCantPlayInInvalidPosition stamp: 'JEA 11/2/2020 00:15:38'!
PASSED!

!testRun: #TerniLapilliTest #test14OCantPlayInInvalidPosition stamp: 'JEA 11/2/2020 00:15:38'!
PASSED!

!testRun: #TerniLapilliTest #test15CantPlaceMoreThan3Chips stamp: 'JEA 11/2/2020 00:15:38'!
PASSED!

!testRun: #TerniLapilliTest #test16XCantMoveUntilAllChipsArePlaced stamp: 'JEA 11/2/2020 00:15:38'!
PASSED!

!testRun: #TerniLapilliTest #test17OCantMoveUntilAllChipsArePlaced stamp: 'JEA 11/2/2020 00:15:38'!
PASSED!

!testRun: #TerniLapilliTest #test18XCanMoveAfterAllChipsArePlaced stamp: 'JEA 11/2/2020 00:15:38'!
PASSED!

!testRun: #TerniLapilliTest #test19OCanMoveAfterAllChipsArePlaced stamp: 'JEA 11/2/2020 00:15:38'!
PASSED!

!testRun: #TerniLapilliTest #test20XCantMoveInOsTurn stamp: 'JEA 11/2/2020 00:15:38'!
FAILURE!

!testRun: #TerniLapilliTest #test20XCantMoveInOsTurn stamp: 'JEA 11/2/2020 00:15:38'!
FAILURE!
!TerniLapilli methodsFor: 'playing' stamp: 'JEA 11/2/2020 00:16:29' prior: 50878269!
moveOFrom: currentPosition to: newPosition

	chips size < 6
		ifTrue: [
			self error: self class cantMoveYetDescription.
		].
	
	isXPlaying
		ifTrue: []
		ifFalse: [
			chips remove: (OChip newAt: currentPosition).
			chips add: (OChip newAt: newPosition).
		].! !
!TerniLapilli methodsFor: 'playing' stamp: 'JEA 11/2/2020 00:16:35' prior: 50878258!
moveXFrom: currentPosition to: newPosition

	chips size < 6
		ifTrue: [
			self error: self class cantMoveYetDescription.
		]
		ifFalse: [
			chips remove: (XChip newAt: currentPosition).
			chips add: (XChip newAt: newPosition).
		].! !
!TerniLapilli methodsFor: 'playing' stamp: 'JEA 11/2/2020 00:16:38' prior: 50877361!
putOAt: aPosition

	isXPlaying not
		ifTrue: [
			self put: (OChip newAt: aPosition).
		]
		ifFalse: [
			self error: self class notYourTurnDescription.
		].! !
!TerniLapilli methodsFor: 'playing' stamp: 'JEA 11/2/2020 00:16:41' prior: 50877221!
putXAt: aPosition

	isXPlaying
		ifTrue: [
			self put: (XChip newAt: aPosition).
		]
		ifFalse: [
			self error: self class notYourTurnDescription.
		].! !
!TerniLapilli methodsFor: 'playing' stamp: 'JEA 11/2/2020 00:17:04' prior: 50878345!
moveOFrom: currentPosition to: newPosition

	chips size < 6
		ifTrue: [
			self error: self class cantMoveYetDescription.
		].
	
	isXPlaying
		ifTrue: [
			self error: self class notYourTurnDescription.
		]
		ifFalse: [
			chips remove: (OChip newAt: currentPosition).
			chips add: (OChip newAt: newPosition).
		].! !
!TerniLapilli methodsFor: 'playing' stamp: 'JEA 11/2/2020 00:17:13' prior: 50878383!
moveOFrom: currentPosition to: newPosition

	chips size < 6
		ifTrue: [
			self error: self class cantMoveYetDescription.
		]
		ifFalse: [
			chips remove: (OChip newAt: currentPosition).
			chips add: (OChip newAt: newPosition).
		].! !
!TerniLapilli methodsFor: 'playing' stamp: 'JEA 11/2/2020 00:17:21' prior: 50878356!
moveXFrom: currentPosition to: newPosition

	chips size < 6
		ifTrue: [
			self error: self class cantMoveYetDescription.
		].
	
	isXPlaying not
		ifTrue: [
			self error: self class notYourTurnDescription.
		]
		ifFalse: [
			chips remove: (XChip newAt: currentPosition).
			chips add: (XChip newAt: newPosition).
		].! !

!testRun: #TerniLapilliTest #test01XPlaysFirst stamp: 'JEA 11/2/2020 00:17:23'!
PASSED!

!testRun: #TerniLapilliTest #test02XCanPlayItsTurn stamp: 'JEA 11/2/2020 00:17:23'!
PASSED!

!testRun: #TerniLapilliTest #test03OPlaysAfterX stamp: 'JEA 11/2/2020 00:17:23'!
PASSED!

!testRun: #TerniLapilliTest #test04OCanPlayItsTurn stamp: 'JEA 11/2/2020 00:17:23'!
PASSED!

!testRun: #TerniLapilliTest #test05XPlaysAfterO stamp: 'JEA 11/2/2020 00:17:23'!
PASSED!

!testRun: #TerniLapilliTest #test06XCantPlayOsTurn stamp: 'JEA 11/2/2020 00:17:23'!
PASSED!

!testRun: #TerniLapilliTest #test07OCantPlayXsTurn stamp: 'JEA 11/2/2020 00:17:23'!
PASSED!

!testRun: #TerniLapilliTest #test08PositionsDontOverlap stamp: 'JEA 11/2/2020 00:17:23'!
PASSED!

!testRun: #TerniLapilliTest #test09PositionsAreOccupied stamp: 'JEA 11/2/2020 00:17:23'!
PASSED!

!testRun: #TerniLapilliTest #test10OCantPlayInOccupiedPosition stamp: 'JEA 11/2/2020 00:17:23'!
PASSED!

!testRun: #TerniLapilliTest #test11XCantPlayInOccupiedPosition stamp: 'JEA 11/2/2020 00:17:23'!
PASSED!

!testRun: #TerniLapilliTest #test12XAndOAreAtEveryPositionPlayed stamp: 'JEA 11/2/2020 00:17:23'!
PASSED!

!testRun: #TerniLapilliTest #test13XCantPlayInInvalidPosition stamp: 'JEA 11/2/2020 00:17:23'!
PASSED!

!testRun: #TerniLapilliTest #test14OCantPlayInInvalidPosition stamp: 'JEA 11/2/2020 00:17:23'!
PASSED!

!testRun: #TerniLapilliTest #test15CantPlaceMoreThan3Chips stamp: 'JEA 11/2/2020 00:17:23'!
PASSED!

!testRun: #TerniLapilliTest #test16XCantMoveUntilAllChipsArePlaced stamp: 'JEA 11/2/2020 00:17:23'!
PASSED!

!testRun: #TerniLapilliTest #test17OCantMoveUntilAllChipsArePlaced stamp: 'JEA 11/2/2020 00:17:23'!
PASSED!

!testRun: #TerniLapilliTest #test18XCanMoveAfterAllChipsArePlaced stamp: 'JEA 11/2/2020 00:17:23'!
PASSED!

!testRun: #TerniLapilliTest #test19OCanMoveAfterAllChipsArePlaced stamp: 'JEA 11/2/2020 00:17:23'!
PASSED!

!testRun: #TerniLapilliTest #test20XCantMoveInOsTurn stamp: 'JEA 11/2/2020 00:17:23'!
FAILURE!

!testRun: #TerniLapilliTest #test20XCantMoveInOsTurn stamp: 'JEA 11/2/2020 00:17:23'!
FAILURE!

!testRun: #TerniLapilliTest #test01XPlaysFirst stamp: 'JEA 11/2/2020 00:17:47'!
PASSED!

!testRun: #TerniLapilliTest #test02XCanPlayItsTurn stamp: 'JEA 11/2/2020 00:17:47'!
PASSED!

!testRun: #TerniLapilliTest #test03OPlaysAfterX stamp: 'JEA 11/2/2020 00:17:47'!
PASSED!

!testRun: #TerniLapilliTest #test04OCanPlayItsTurn stamp: 'JEA 11/2/2020 00:17:47'!
PASSED!

!testRun: #TerniLapilliTest #test05XPlaysAfterO stamp: 'JEA 11/2/2020 00:17:47'!
PASSED!

!testRun: #TerniLapilliTest #test06XCantPlayOsTurn stamp: 'JEA 11/2/2020 00:17:47'!
PASSED!

!testRun: #TerniLapilliTest #test07OCantPlayXsTurn stamp: 'JEA 11/2/2020 00:17:47'!
PASSED!

!testRun: #TerniLapilliTest #test08PositionsDontOverlap stamp: 'JEA 11/2/2020 00:17:47'!
PASSED!

!testRun: #TerniLapilliTest #test09PositionsAreOccupied stamp: 'JEA 11/2/2020 00:17:47'!
PASSED!

!testRun: #TerniLapilliTest #test10OCantPlayInOccupiedPosition stamp: 'JEA 11/2/2020 00:17:47'!
PASSED!

!testRun: #TerniLapilliTest #test11XCantPlayInOccupiedPosition stamp: 'JEA 11/2/2020 00:17:47'!
PASSED!

!testRun: #TerniLapilliTest #test12XAndOAreAtEveryPositionPlayed stamp: 'JEA 11/2/2020 00:17:47'!
PASSED!

!testRun: #TerniLapilliTest #test13XCantPlayInInvalidPosition stamp: 'JEA 11/2/2020 00:17:47'!
PASSED!

!testRun: #TerniLapilliTest #test14OCantPlayInInvalidPosition stamp: 'JEA 11/2/2020 00:17:47'!
PASSED!

!testRun: #TerniLapilliTest #test15CantPlaceMoreThan3Chips stamp: 'JEA 11/2/2020 00:17:47'!
PASSED!

!testRun: #TerniLapilliTest #test16XCantMoveUntilAllChipsArePlaced stamp: 'JEA 11/2/2020 00:17:47'!
PASSED!

!testRun: #TerniLapilliTest #test17OCantMoveUntilAllChipsArePlaced stamp: 'JEA 11/2/2020 00:17:47'!
PASSED!

!testRun: #TerniLapilliTest #test18XCanMoveAfterAllChipsArePlaced stamp: 'JEA 11/2/2020 00:17:47'!
PASSED!

!testRun: #TerniLapilliTest #test19OCanMoveAfterAllChipsArePlaced stamp: 'JEA 11/2/2020 00:17:47'!
PASSED!

!testRun: #TerniLapilliTest #test20XCantMoveInOsTurn stamp: 'JEA 11/2/2020 00:17:47'!
FAILURE!

!testRun: #TerniLapilliTest #test20XCantMoveInOsTurn stamp: 'JEA 11/2/2020 00:17:47'!
FAILURE!

aTerniLapilliGame moveXFrom: 2@1 to: 1@1.!

!testRun: #TerniLapilliTest #test01XPlaysFirst stamp: 'JEA 11/2/2020 00:18:59'!
PASSED!

!testRun: #TerniLapilliTest #test02XCanPlayItsTurn stamp: 'JEA 11/2/2020 00:18:59'!
PASSED!

!testRun: #TerniLapilliTest #test03OPlaysAfterX stamp: 'JEA 11/2/2020 00:18:59'!
PASSED!

!testRun: #TerniLapilliTest #test04OCanPlayItsTurn stamp: 'JEA 11/2/2020 00:18:59'!
PASSED!

!testRun: #TerniLapilliTest #test05XPlaysAfterO stamp: 'JEA 11/2/2020 00:18:59'!
PASSED!

!testRun: #TerniLapilliTest #test06XCantPlayOsTurn stamp: 'JEA 11/2/2020 00:18:59'!
PASSED!

!testRun: #TerniLapilliTest #test07OCantPlayXsTurn stamp: 'JEA 11/2/2020 00:18:59'!
PASSED!

!testRun: #TerniLapilliTest #test08PositionsDontOverlap stamp: 'JEA 11/2/2020 00:18:59'!
PASSED!

!testRun: #TerniLapilliTest #test09PositionsAreOccupied stamp: 'JEA 11/2/2020 00:18:59'!
PASSED!

!testRun: #TerniLapilliTest #test10OCantPlayInOccupiedPosition stamp: 'JEA 11/2/2020 00:18:59'!
PASSED!

!testRun: #TerniLapilliTest #test11XCantPlayInOccupiedPosition stamp: 'JEA 11/2/2020 00:18:59'!
PASSED!

!testRun: #TerniLapilliTest #test12XAndOAreAtEveryPositionPlayed stamp: 'JEA 11/2/2020 00:18:59'!
PASSED!

!testRun: #TerniLapilliTest #test13XCantPlayInInvalidPosition stamp: 'JEA 11/2/2020 00:18:59'!
PASSED!

!testRun: #TerniLapilliTest #test14OCantPlayInInvalidPosition stamp: 'JEA 11/2/2020 00:18:59'!
PASSED!

!testRun: #TerniLapilliTest #test15CantPlaceMoreThan3Chips stamp: 'JEA 11/2/2020 00:18:59'!
PASSED!

!testRun: #TerniLapilliTest #test16XCantMoveUntilAllChipsArePlaced stamp: 'JEA 11/2/2020 00:18:59'!
PASSED!

!testRun: #TerniLapilliTest #test17OCantMoveUntilAllChipsArePlaced stamp: 'JEA 11/2/2020 00:18:59'!
PASSED!

!testRun: #TerniLapilliTest #test18XCanMoveAfterAllChipsArePlaced stamp: 'JEA 11/2/2020 00:18:59'!
PASSED!

!testRun: #TerniLapilliTest #test19OCanMoveAfterAllChipsArePlaced stamp: 'JEA 11/2/2020 00:18:59'!
PASSED!

!testRun: #TerniLapilliTest #test20XCantMoveInOsTurn stamp: 'JEA 11/2/2020 00:18:59'!
FAILURE!

!testRun: #TerniLapilliTest #test20XCantMoveInOsTurn stamp: 'JEA 11/2/2020 00:18:59'!
FAILURE!

!testRun: #TerniLapilliTest #test01XPlaysFirst stamp: 'JEA 11/2/2020 00:19:30'!
PASSED!

!testRun: #TerniLapilliTest #test02XCanPlayItsTurn stamp: 'JEA 11/2/2020 00:19:30'!
PASSED!

!testRun: #TerniLapilliTest #test03OPlaysAfterX stamp: 'JEA 11/2/2020 00:19:30'!
PASSED!

!testRun: #TerniLapilliTest #test04OCanPlayItsTurn stamp: 'JEA 11/2/2020 00:19:30'!
PASSED!

!testRun: #TerniLapilliTest #test05XPlaysAfterO stamp: 'JEA 11/2/2020 00:19:30'!
PASSED!

!testRun: #TerniLapilliTest #test06XCantPlayOsTurn stamp: 'JEA 11/2/2020 00:19:30'!
PASSED!

!testRun: #TerniLapilliTest #test07OCantPlayXsTurn stamp: 'JEA 11/2/2020 00:19:30'!
PASSED!

!testRun: #TerniLapilliTest #test08PositionsDontOverlap stamp: 'JEA 11/2/2020 00:19:30'!
PASSED!

!testRun: #TerniLapilliTest #test09PositionsAreOccupied stamp: 'JEA 11/2/2020 00:19:30'!
PASSED!

!testRun: #TerniLapilliTest #test10OCantPlayInOccupiedPosition stamp: 'JEA 11/2/2020 00:19:30'!
PASSED!

!testRun: #TerniLapilliTest #test11XCantPlayInOccupiedPosition stamp: 'JEA 11/2/2020 00:19:30'!
PASSED!

!testRun: #TerniLapilliTest #test12XAndOAreAtEveryPositionPlayed stamp: 'JEA 11/2/2020 00:19:30'!
PASSED!

!testRun: #TerniLapilliTest #test13XCantPlayInInvalidPosition stamp: 'JEA 11/2/2020 00:19:30'!
PASSED!

!testRun: #TerniLapilliTest #test14OCantPlayInInvalidPosition stamp: 'JEA 11/2/2020 00:19:30'!
PASSED!

!testRun: #TerniLapilliTest #test15CantPlaceMoreThan3Chips stamp: 'JEA 11/2/2020 00:19:30'!
PASSED!

!testRun: #TerniLapilliTest #test16XCantMoveUntilAllChipsArePlaced stamp: 'JEA 11/2/2020 00:19:30'!
PASSED!

!testRun: #TerniLapilliTest #test17OCantMoveUntilAllChipsArePlaced stamp: 'JEA 11/2/2020 00:19:30'!
PASSED!

!testRun: #TerniLapilliTest #test18XCanMoveAfterAllChipsArePlaced stamp: 'JEA 11/2/2020 00:19:30'!
PASSED!

!testRun: #TerniLapilliTest #test19OCanMoveAfterAllChipsArePlaced stamp: 'JEA 11/2/2020 00:19:30'!
PASSED!

!testRun: #TerniLapilliTest #test20XCantMoveInOsTurn stamp: 'JEA 11/2/2020 00:19:30'!
FAILURE!

!testRun: #TerniLapilliTest #test20XCantMoveInOsTurn stamp: 'JEA 11/2/2020 00:19:30'!
FAILURE!

!testRun: #TerniLapilliTest #test01XPlaysFirst stamp: 'JEA 11/2/2020 00:19:59'!
PASSED!

!testRun: #TerniLapilliTest #test02XCanPlayItsTurn stamp: 'JEA 11/2/2020 00:19:59'!
PASSED!

!testRun: #TerniLapilliTest #test03OPlaysAfterX stamp: 'JEA 11/2/2020 00:19:59'!
PASSED!

!testRun: #TerniLapilliTest #test04OCanPlayItsTurn stamp: 'JEA 11/2/2020 00:19:59'!
PASSED!

!testRun: #TerniLapilliTest #test05XPlaysAfterO stamp: 'JEA 11/2/2020 00:19:59'!
PASSED!

!testRun: #TerniLapilliTest #test06XCantPlayOsTurn stamp: 'JEA 11/2/2020 00:19:59'!
PASSED!

!testRun: #TerniLapilliTest #test07OCantPlayXsTurn stamp: 'JEA 11/2/2020 00:19:59'!
PASSED!

!testRun: #TerniLapilliTest #test08PositionsDontOverlap stamp: 'JEA 11/2/2020 00:19:59'!
PASSED!

!testRun: #TerniLapilliTest #test09PositionsAreOccupied stamp: 'JEA 11/2/2020 00:19:59'!
PASSED!

!testRun: #TerniLapilliTest #test10OCantPlayInOccupiedPosition stamp: 'JEA 11/2/2020 00:19:59'!
PASSED!

!testRun: #TerniLapilliTest #test11XCantPlayInOccupiedPosition stamp: 'JEA 11/2/2020 00:19:59'!
PASSED!

!testRun: #TerniLapilliTest #test12XAndOAreAtEveryPositionPlayed stamp: 'JEA 11/2/2020 00:19:59'!
PASSED!

!testRun: #TerniLapilliTest #test13XCantPlayInInvalidPosition stamp: 'JEA 11/2/2020 00:19:59'!
PASSED!

!testRun: #TerniLapilliTest #test14OCantPlayInInvalidPosition stamp: 'JEA 11/2/2020 00:19:59'!
PASSED!

!testRun: #TerniLapilliTest #test15CantPlaceMoreThan3Chips stamp: 'JEA 11/2/2020 00:19:59'!
PASSED!

!testRun: #TerniLapilliTest #test16XCantMoveUntilAllChipsArePlaced stamp: 'JEA 11/2/2020 00:19:59'!
PASSED!

!testRun: #TerniLapilliTest #test17OCantMoveUntilAllChipsArePlaced stamp: 'JEA 11/2/2020 00:19:59'!
PASSED!

!testRun: #TerniLapilliTest #test18XCanMoveAfterAllChipsArePlaced stamp: 'JEA 11/2/2020 00:19:59'!
PASSED!

!testRun: #TerniLapilliTest #test19OCanMoveAfterAllChipsArePlaced stamp: 'JEA 11/2/2020 00:19:59'!
PASSED!

!testRun: #TerniLapilliTest #test20XCantMoveInOsTurn stamp: 'JEA 11/2/2020 00:19:59'!
FAILURE!

!testRun: #TerniLapilliTest #test20XCantMoveInOsTurn stamp: 'JEA 11/2/2020 00:19:59'!
FAILURE!

!testRun: #TerniLapilliTest #test20XCantMoveInOsTurn stamp: 'JEA 11/2/2020 00:20:06'!
PASSED!

!testRun: #TerniLapilliTest #test01XPlaysFirst stamp: 'JEA 11/2/2020 00:20:15'!
PASSED!

!testRun: #TerniLapilliTest #test02XCanPlayItsTurn stamp: 'JEA 11/2/2020 00:20:15'!
PASSED!

!testRun: #TerniLapilliTest #test03OPlaysAfterX stamp: 'JEA 11/2/2020 00:20:15'!
PASSED!

!testRun: #TerniLapilliTest #test04OCanPlayItsTurn stamp: 'JEA 11/2/2020 00:20:15'!
PASSED!

!testRun: #TerniLapilliTest #test05XPlaysAfterO stamp: 'JEA 11/2/2020 00:20:15'!
PASSED!

!testRun: #TerniLapilliTest #test06XCantPlayOsTurn stamp: 'JEA 11/2/2020 00:20:15'!
PASSED!

!testRun: #TerniLapilliTest #test07OCantPlayXsTurn stamp: 'JEA 11/2/2020 00:20:15'!
PASSED!

!testRun: #TerniLapilliTest #test08PositionsDontOverlap stamp: 'JEA 11/2/2020 00:20:15'!
PASSED!

!testRun: #TerniLapilliTest #test09PositionsAreOccupied stamp: 'JEA 11/2/2020 00:20:15'!
PASSED!

!testRun: #TerniLapilliTest #test10OCantPlayInOccupiedPosition stamp: 'JEA 11/2/2020 00:20:15'!
PASSED!

!testRun: #TerniLapilliTest #test11XCantPlayInOccupiedPosition stamp: 'JEA 11/2/2020 00:20:15'!
PASSED!

!testRun: #TerniLapilliTest #test12XAndOAreAtEveryPositionPlayed stamp: 'JEA 11/2/2020 00:20:15'!
PASSED!

!testRun: #TerniLapilliTest #test13XCantPlayInInvalidPosition stamp: 'JEA 11/2/2020 00:20:15'!
PASSED!

!testRun: #TerniLapilliTest #test14OCantPlayInInvalidPosition stamp: 'JEA 11/2/2020 00:20:15'!
PASSED!

!testRun: #TerniLapilliTest #test15CantPlaceMoreThan3Chips stamp: 'JEA 11/2/2020 00:20:15'!
PASSED!

!testRun: #TerniLapilliTest #test16XCantMoveUntilAllChipsArePlaced stamp: 'JEA 11/2/2020 00:20:15'!
PASSED!

!testRun: #TerniLapilliTest #test17OCantMoveUntilAllChipsArePlaced stamp: 'JEA 11/2/2020 00:20:15'!
PASSED!

!testRun: #TerniLapilliTest #test18XCanMoveAfterAllChipsArePlaced stamp: 'JEA 11/2/2020 00:20:15'!
PASSED!

!testRun: #TerniLapilliTest #test19OCanMoveAfterAllChipsArePlaced stamp: 'JEA 11/2/2020 00:20:15'!
PASSED!

!testRun: #TerniLapilliTest #test20XCantMoveInOsTurn stamp: 'JEA 11/2/2020 00:20:15'!
FAILURE!

!testRun: #TerniLapilliTest #test20XCantMoveInOsTurn stamp: 'JEA 11/2/2020 00:20:15'!
FAILURE!

aBlock!

aBlock!

!testRun: #TerniLapilliTest #test01XPlaysFirst stamp: 'JEA 11/2/2020 00:21:29'!
PASSED!

!testRun: #TerniLapilliTest #test02XCanPlayItsTurn stamp: 'JEA 11/2/2020 00:21:29'!
PASSED!

!testRun: #TerniLapilliTest #test03OPlaysAfterX stamp: 'JEA 11/2/2020 00:21:29'!
PASSED!

!testRun: #TerniLapilliTest #test04OCanPlayItsTurn stamp: 'JEA 11/2/2020 00:21:29'!
PASSED!

!testRun: #TerniLapilliTest #test05XPlaysAfterO stamp: 'JEA 11/2/2020 00:21:29'!
PASSED!

!testRun: #TerniLapilliTest #test06XCantPlayOsTurn stamp: 'JEA 11/2/2020 00:21:29'!
PASSED!

!testRun: #TerniLapilliTest #test07OCantPlayXsTurn stamp: 'JEA 11/2/2020 00:21:29'!
PASSED!

!testRun: #TerniLapilliTest #test08PositionsDontOverlap stamp: 'JEA 11/2/2020 00:21:29'!
PASSED!

!testRun: #TerniLapilliTest #test09PositionsAreOccupied stamp: 'JEA 11/2/2020 00:21:29'!
PASSED!

!testRun: #TerniLapilliTest #test10OCantPlayInOccupiedPosition stamp: 'JEA 11/2/2020 00:21:29'!
PASSED!

!testRun: #TerniLapilliTest #test11XCantPlayInOccupiedPosition stamp: 'JEA 11/2/2020 00:21:29'!
PASSED!

!testRun: #TerniLapilliTest #test12XAndOAreAtEveryPositionPlayed stamp: 'JEA 11/2/2020 00:21:29'!
PASSED!

!testRun: #TerniLapilliTest #test13XCantPlayInInvalidPosition stamp: 'JEA 11/2/2020 00:21:29'!
PASSED!

!testRun: #TerniLapilliTest #test14OCantPlayInInvalidPosition stamp: 'JEA 11/2/2020 00:21:29'!
PASSED!

!testRun: #TerniLapilliTest #test15CantPlaceMoreThan3Chips stamp: 'JEA 11/2/2020 00:21:29'!
PASSED!

!testRun: #TerniLapilliTest #test16XCantMoveUntilAllChipsArePlaced stamp: 'JEA 11/2/2020 00:21:29'!
PASSED!

!testRun: #TerniLapilliTest #test17OCantMoveUntilAllChipsArePlaced stamp: 'JEA 11/2/2020 00:21:29'!
PASSED!

!testRun: #TerniLapilliTest #test18XCanMoveAfterAllChipsArePlaced stamp: 'JEA 11/2/2020 00:21:29'!
PASSED!

!testRun: #TerniLapilliTest #test19OCanMoveAfterAllChipsArePlaced stamp: 'JEA 11/2/2020 00:21:29'!
PASSED!

!testRun: #TerniLapilliTest #test20XCantMoveInOsTurn stamp: 'JEA 11/2/2020 00:21:29'!
FAILURE!

!testRun: #TerniLapilliTest #test20XCantMoveInOsTurn stamp: 'JEA 11/2/2020 00:21:29'!
FAILURE!
!TerniLapilliTest methodsFor: 'tests' stamp: 'JEA 11/2/2020 00:22:32' prior: 50877902!
test20XCantMoveInOsTurn
	| aTerniLapilliGame |

	aTerniLapilliGame := TerniLapilli new.
	aTerniLapilliGame putXAt: 2@2.
	aTerniLapilliGame putOAt: 0@1.
	aTerniLapilliGame putXAt: 0@2.
	aTerniLapilliGame putOAt: 1@0.
	aTerniLapilliGame putXAt: 1@1.
	aTerniLapilliGame putOAt: 1@2.
	aTerniLapilliGame moveXFrom: 1@1 to: 0@0.
	
	self should: [ aTerniLapilliGame moveXFrom: 2@2 to: 1@1. ]
		raise: Error
		withExceptionDo: [ :anException | self assert: anException messageText = TerniLapilli notYourTurnDescription. ].! !

!testRun: #TerniLapilliTest #test01XPlaysFirst stamp: 'JEA 11/2/2020 00:22:34'!
PASSED!

!testRun: #TerniLapilliTest #test02XCanPlayItsTurn stamp: 'JEA 11/2/2020 00:22:34'!
PASSED!

!testRun: #TerniLapilliTest #test03OPlaysAfterX stamp: 'JEA 11/2/2020 00:22:34'!
PASSED!

!testRun: #TerniLapilliTest #test04OCanPlayItsTurn stamp: 'JEA 11/2/2020 00:22:34'!
PASSED!

!testRun: #TerniLapilliTest #test05XPlaysAfterO stamp: 'JEA 11/2/2020 00:22:34'!
PASSED!

!testRun: #TerniLapilliTest #test06XCantPlayOsTurn stamp: 'JEA 11/2/2020 00:22:34'!
PASSED!

!testRun: #TerniLapilliTest #test07OCantPlayXsTurn stamp: 'JEA 11/2/2020 00:22:34'!
PASSED!

!testRun: #TerniLapilliTest #test08PositionsDontOverlap stamp: 'JEA 11/2/2020 00:22:34'!
PASSED!

!testRun: #TerniLapilliTest #test09PositionsAreOccupied stamp: 'JEA 11/2/2020 00:22:34'!
PASSED!

!testRun: #TerniLapilliTest #test10OCantPlayInOccupiedPosition stamp: 'JEA 11/2/2020 00:22:34'!
PASSED!

!testRun: #TerniLapilliTest #test11XCantPlayInOccupiedPosition stamp: 'JEA 11/2/2020 00:22:34'!
PASSED!

!testRun: #TerniLapilliTest #test12XAndOAreAtEveryPositionPlayed stamp: 'JEA 11/2/2020 00:22:34'!
PASSED!

!testRun: #TerniLapilliTest #test13XCantPlayInInvalidPosition stamp: 'JEA 11/2/2020 00:22:34'!
PASSED!

!testRun: #TerniLapilliTest #test14OCantPlayInInvalidPosition stamp: 'JEA 11/2/2020 00:22:34'!
PASSED!

!testRun: #TerniLapilliTest #test15CantPlaceMoreThan3Chips stamp: 'JEA 11/2/2020 00:22:34'!
PASSED!

!testRun: #TerniLapilliTest #test16XCantMoveUntilAllChipsArePlaced stamp: 'JEA 11/2/2020 00:22:34'!
PASSED!

!testRun: #TerniLapilliTest #test17OCantMoveUntilAllChipsArePlaced stamp: 'JEA 11/2/2020 00:22:34'!
PASSED!

!testRun: #TerniLapilliTest #test18XCanMoveAfterAllChipsArePlaced stamp: 'JEA 11/2/2020 00:22:34'!
PASSED!

!testRun: #TerniLapilliTest #test19OCanMoveAfterAllChipsArePlaced stamp: 'JEA 11/2/2020 00:22:34'!
PASSED!

!testRun: #TerniLapilliTest #test20XCantMoveInOsTurn stamp: 'JEA 11/2/2020 00:22:34'!
FAILURE!

!testRun: #TerniLapilliTest #test20XCantMoveInOsTurn stamp: 'JEA 11/2/2020 00:22:34'!
FAILURE!
!TerniLapilli methodsFor: 'playing' stamp: 'JEA 11/2/2020 00:23:12' prior: 50878396!
moveOFrom: currentPosition to: newPosition

	chips size < 6
		ifTrue: [
			self error: self class cantMoveYetDescription.
		]
		ifFalse: [
			chips remove: (OChip newAt: currentPosition).
			chips add: (OChip newAt: newPosition).
			isXPlaying := isXPlaying not.
		].! !
!TerniLapilli methodsFor: 'playing' stamp: 'JEA 11/2/2020 00:23:15' prior: 50878967!
moveOFrom: currentPosition to: newPosition

	chips size < 6
		ifTrue: [
			self error: self class cantMoveYetDescription.
		]
		ifFalse: [
			chips remove: (OChip newAt: currentPosition).
			chips add: (OChip newAt: newPosition).
			
			isXPlaying := isXPlaying not.
		].! !
!TerniLapilli methodsFor: 'playing' stamp: 'JEA 11/2/2020 00:23:19' prior: 50878407!
moveXFrom: currentPosition to: newPosition

	chips size < 6
		ifTrue: [
			self error: self class cantMoveYetDescription.
		].
	
	isXPlaying not
		ifTrue: [
			self error: self class notYourTurnDescription.
		]
		ifFalse: [
			chips remove: (XChip newAt: currentPosition).
			chips add: (XChip newAt: newPosition).
			
			isXPlaying := isXPlaying not.
		].! !

!testRun: #TerniLapilliTest #test01XPlaysFirst stamp: 'JEA 11/2/2020 00:23:21'!
PASSED!

!testRun: #TerniLapilliTest #test02XCanPlayItsTurn stamp: 'JEA 11/2/2020 00:23:21'!
PASSED!

!testRun: #TerniLapilliTest #test03OPlaysAfterX stamp: 'JEA 11/2/2020 00:23:21'!
PASSED!

!testRun: #TerniLapilliTest #test04OCanPlayItsTurn stamp: 'JEA 11/2/2020 00:23:21'!
PASSED!

!testRun: #TerniLapilliTest #test05XPlaysAfterO stamp: 'JEA 11/2/2020 00:23:21'!
PASSED!

!testRun: #TerniLapilliTest #test06XCantPlayOsTurn stamp: 'JEA 11/2/2020 00:23:21'!
PASSED!

!testRun: #TerniLapilliTest #test07OCantPlayXsTurn stamp: 'JEA 11/2/2020 00:23:21'!
PASSED!

!testRun: #TerniLapilliTest #test08PositionsDontOverlap stamp: 'JEA 11/2/2020 00:23:21'!
PASSED!

!testRun: #TerniLapilliTest #test09PositionsAreOccupied stamp: 'JEA 11/2/2020 00:23:21'!
PASSED!

!testRun: #TerniLapilliTest #test10OCantPlayInOccupiedPosition stamp: 'JEA 11/2/2020 00:23:21'!
PASSED!

!testRun: #TerniLapilliTest #test11XCantPlayInOccupiedPosition stamp: 'JEA 11/2/2020 00:23:21'!
PASSED!

!testRun: #TerniLapilliTest #test12XAndOAreAtEveryPositionPlayed stamp: 'JEA 11/2/2020 00:23:21'!
PASSED!

!testRun: #TerniLapilliTest #test13XCantPlayInInvalidPosition stamp: 'JEA 11/2/2020 00:23:21'!
PASSED!

!testRun: #TerniLapilliTest #test14OCantPlayInInvalidPosition stamp: 'JEA 11/2/2020 00:23:21'!
PASSED!

!testRun: #TerniLapilliTest #test15CantPlaceMoreThan3Chips stamp: 'JEA 11/2/2020 00:23:21'!
PASSED!

!testRun: #TerniLapilliTest #test16XCantMoveUntilAllChipsArePlaced stamp: 'JEA 11/2/2020 00:23:21'!
PASSED!

!testRun: #TerniLapilliTest #test17OCantMoveUntilAllChipsArePlaced stamp: 'JEA 11/2/2020 00:23:21'!
PASSED!

!testRun: #TerniLapilliTest #test18XCanMoveAfterAllChipsArePlaced stamp: 'JEA 11/2/2020 00:23:21'!
PASSED!

!testRun: #TerniLapilliTest #test19OCanMoveAfterAllChipsArePlaced stamp: 'JEA 11/2/2020 00:23:21'!
PASSED!

!testRun: #TerniLapilliTest #test20XCantMoveInOsTurn stamp: 'JEA 11/2/2020 00:23:21'!
PASSED!
!TerniLapilliTest methodsFor: 'tests' stamp: 'JEA 11/2/2020 00:23:41' prior: 50878882!
test20XCantMoveInOsTurn
	| aTerniLapilliGame |

	aTerniLapilliGame := TerniLapilli new.
	aTerniLapilliGame putXAt: 0@0.
	aTerniLapilliGame putOAt: 0@1.
	aTerniLapilliGame putXAt: 0@2.
	aTerniLapilliGame putOAt: 1@0.
	aTerniLapilliGame putXAt: 1@1.
	aTerniLapilliGame putOAt: 1@2.
	aTerniLapilliGame moveXFrom: 1@1 to: 2@1.
	
	self should: [ aTerniLapilliGame moveXFrom: 2@1 to: 1@1. ]
		raise: Error
		withExceptionDo: [ :anException | self assert: anException messageText = TerniLapilli notYourTurnDescription. ].! !

!testRun: #TerniLapilliTest #test01XPlaysFirst stamp: 'JEA 11/2/2020 00:23:41'!
PASSED!

!testRun: #TerniLapilliTest #test02XCanPlayItsTurn stamp: 'JEA 11/2/2020 00:23:41'!
PASSED!

!testRun: #TerniLapilliTest #test03OPlaysAfterX stamp: 'JEA 11/2/2020 00:23:41'!
PASSED!

!testRun: #TerniLapilliTest #test04OCanPlayItsTurn stamp: 'JEA 11/2/2020 00:23:41'!
PASSED!

!testRun: #TerniLapilliTest #test05XPlaysAfterO stamp: 'JEA 11/2/2020 00:23:41'!
PASSED!

!testRun: #TerniLapilliTest #test06XCantPlayOsTurn stamp: 'JEA 11/2/2020 00:23:41'!
PASSED!

!testRun: #TerniLapilliTest #test07OCantPlayXsTurn stamp: 'JEA 11/2/2020 00:23:41'!
PASSED!

!testRun: #TerniLapilliTest #test08PositionsDontOverlap stamp: 'JEA 11/2/2020 00:23:41'!
PASSED!

!testRun: #TerniLapilliTest #test09PositionsAreOccupied stamp: 'JEA 11/2/2020 00:23:41'!
PASSED!

!testRun: #TerniLapilliTest #test10OCantPlayInOccupiedPosition stamp: 'JEA 11/2/2020 00:23:41'!
PASSED!

!testRun: #TerniLapilliTest #test11XCantPlayInOccupiedPosition stamp: 'JEA 11/2/2020 00:23:41'!
PASSED!

!testRun: #TerniLapilliTest #test12XAndOAreAtEveryPositionPlayed stamp: 'JEA 11/2/2020 00:23:41'!
PASSED!

!testRun: #TerniLapilliTest #test13XCantPlayInInvalidPosition stamp: 'JEA 11/2/2020 00:23:41'!
PASSED!

!testRun: #TerniLapilliTest #test14OCantPlayInInvalidPosition stamp: 'JEA 11/2/2020 00:23:41'!
PASSED!

!testRun: #TerniLapilliTest #test15CantPlaceMoreThan3Chips stamp: 'JEA 11/2/2020 00:23:41'!
PASSED!

!testRun: #TerniLapilliTest #test16XCantMoveUntilAllChipsArePlaced stamp: 'JEA 11/2/2020 00:23:41'!
PASSED!

!testRun: #TerniLapilliTest #test17OCantMoveUntilAllChipsArePlaced stamp: 'JEA 11/2/2020 00:23:41'!
PASSED!

!testRun: #TerniLapilliTest #test18XCanMoveAfterAllChipsArePlaced stamp: 'JEA 11/2/2020 00:23:41'!
PASSED!

!testRun: #TerniLapilliTest #test19OCanMoveAfterAllChipsArePlaced stamp: 'JEA 11/2/2020 00:23:41'!
PASSED!

!testRun: #TerniLapilliTest #test20XCantMoveInOsTurn stamp: 'JEA 11/2/2020 00:23:41'!
PASSED!
!TerniLapilliTest methodsFor: 'tests' stamp: 'JEA 11/2/2020 00:23:59'!
test21OCantMoveInXsTurn
	| aTerniLapilliGame |

	aTerniLapilliGame := TerniLapilli new.
	aTerniLapilliGame putXAt: 0@0.
	aTerniLapilliGame putOAt: 0@1.
	aTerniLapilliGame putXAt: 0@2.
	aTerniLapilliGame putOAt: 1@0.
	aTerniLapilliGame putXAt: 1@1.
	aTerniLapilliGame putOAt: 1@2.
	
	self should: [ aTerniLapilliGame moveOFrom: 1@2 to: 2@2. ]
		raise: Error
		withExceptionDo: [ :anException | self assert: anException messageText = TerniLapilli notYourTurnDescription. ].! !

!testRun: #TerniLapilliTest #test01XPlaysFirst stamp: 'JEA 11/2/2020 00:24:00'!
PASSED!

!testRun: #TerniLapilliTest #test02XCanPlayItsTurn stamp: 'JEA 11/2/2020 00:24:00'!
PASSED!

!testRun: #TerniLapilliTest #test03OPlaysAfterX stamp: 'JEA 11/2/2020 00:24:00'!
PASSED!

!testRun: #TerniLapilliTest #test04OCanPlayItsTurn stamp: 'JEA 11/2/2020 00:24:00'!
PASSED!

!testRun: #TerniLapilliTest #test05XPlaysAfterO stamp: 'JEA 11/2/2020 00:24:00'!
PASSED!

!testRun: #TerniLapilliTest #test06XCantPlayOsTurn stamp: 'JEA 11/2/2020 00:24:00'!
PASSED!

!testRun: #TerniLapilliTest #test07OCantPlayXsTurn stamp: 'JEA 11/2/2020 00:24:00'!
PASSED!

!testRun: #TerniLapilliTest #test08PositionsDontOverlap stamp: 'JEA 11/2/2020 00:24:00'!
PASSED!

!testRun: #TerniLapilliTest #test09PositionsAreOccupied stamp: 'JEA 11/2/2020 00:24:00'!
PASSED!

!testRun: #TerniLapilliTest #test10OCantPlayInOccupiedPosition stamp: 'JEA 11/2/2020 00:24:00'!
PASSED!

!testRun: #TerniLapilliTest #test11XCantPlayInOccupiedPosition stamp: 'JEA 11/2/2020 00:24:00'!
PASSED!

!testRun: #TerniLapilliTest #test12XAndOAreAtEveryPositionPlayed stamp: 'JEA 11/2/2020 00:24:00'!
PASSED!

!testRun: #TerniLapilliTest #test13XCantPlayInInvalidPosition stamp: 'JEA 11/2/2020 00:24:00'!
PASSED!

!testRun: #TerniLapilliTest #test14OCantPlayInInvalidPosition stamp: 'JEA 11/2/2020 00:24:00'!
PASSED!

!testRun: #TerniLapilliTest #test15CantPlaceMoreThan3Chips stamp: 'JEA 11/2/2020 00:24:00'!
PASSED!

!testRun: #TerniLapilliTest #test16XCantMoveUntilAllChipsArePlaced stamp: 'JEA 11/2/2020 00:24:00'!
PASSED!

!testRun: #TerniLapilliTest #test17OCantMoveUntilAllChipsArePlaced stamp: 'JEA 11/2/2020 00:24:00'!
PASSED!

!testRun: #TerniLapilliTest #test18XCanMoveAfterAllChipsArePlaced stamp: 'JEA 11/2/2020 00:24:00'!
PASSED!

!testRun: #TerniLapilliTest #test19OCanMoveAfterAllChipsArePlaced stamp: 'JEA 11/2/2020 00:24:00'!
PASSED!

!testRun: #TerniLapilliTest #test20XCantMoveInOsTurn stamp: 'JEA 11/2/2020 00:24:00'!
PASSED!

!testRun: #TerniLapilliTest #test21OCantMoveInXsTurn stamp: 'JEA 11/2/2020 00:24:00'!
FAILURE!

!testRun: #TerniLapilliTest #test21OCantMoveInXsTurn stamp: 'JEA 11/2/2020 00:24:00'!
FAILURE!
!TerniLapilli methodsFor: 'playing' stamp: 'JEA 11/2/2020 00:24:29' prior: 50878979!
moveOFrom: currentPosition to: newPosition

	chips size < 6
		ifTrue: [
			self error: self class cantMoveYetDescription.
		].
	
	isXPlaying
		ifTrue: [
			self error: self class notYourTurnDescription.
		]
		ifFalse: [
			chips remove: (OChip newAt: currentPosition).
			chips add: (OChip newAt: newPosition).
			
			isXPlaying := isXPlaying not.
		].! !

!testRun: #TerniLapilliTest #test01XPlaysFirst stamp: 'JEA 11/2/2020 00:24:30'!
PASSED!

!testRun: #TerniLapilliTest #test02XCanPlayItsTurn stamp: 'JEA 11/2/2020 00:24:30'!
PASSED!

!testRun: #TerniLapilliTest #test03OPlaysAfterX stamp: 'JEA 11/2/2020 00:24:30'!
PASSED!

!testRun: #TerniLapilliTest #test04OCanPlayItsTurn stamp: 'JEA 11/2/2020 00:24:30'!
PASSED!

!testRun: #TerniLapilliTest #test05XPlaysAfterO stamp: 'JEA 11/2/2020 00:24:30'!
PASSED!

!testRun: #TerniLapilliTest #test06XCantPlayOsTurn stamp: 'JEA 11/2/2020 00:24:30'!
PASSED!

!testRun: #TerniLapilliTest #test07OCantPlayXsTurn stamp: 'JEA 11/2/2020 00:24:30'!
PASSED!

!testRun: #TerniLapilliTest #test08PositionsDontOverlap stamp: 'JEA 11/2/2020 00:24:30'!
PASSED!

!testRun: #TerniLapilliTest #test09PositionsAreOccupied stamp: 'JEA 11/2/2020 00:24:30'!
PASSED!

!testRun: #TerniLapilliTest #test10OCantPlayInOccupiedPosition stamp: 'JEA 11/2/2020 00:24:30'!
PASSED!

!testRun: #TerniLapilliTest #test11XCantPlayInOccupiedPosition stamp: 'JEA 11/2/2020 00:24:30'!
PASSED!

!testRun: #TerniLapilliTest #test12XAndOAreAtEveryPositionPlayed stamp: 'JEA 11/2/2020 00:24:30'!
PASSED!

!testRun: #TerniLapilliTest #test13XCantPlayInInvalidPosition stamp: 'JEA 11/2/2020 00:24:30'!
PASSED!

!testRun: #TerniLapilliTest #test14OCantPlayInInvalidPosition stamp: 'JEA 11/2/2020 00:24:30'!
PASSED!

!testRun: #TerniLapilliTest #test15CantPlaceMoreThan3Chips stamp: 'JEA 11/2/2020 00:24:30'!
PASSED!

!testRun: #TerniLapilliTest #test16XCantMoveUntilAllChipsArePlaced stamp: 'JEA 11/2/2020 00:24:30'!
PASSED!

!testRun: #TerniLapilliTest #test17OCantMoveUntilAllChipsArePlaced stamp: 'JEA 11/2/2020 00:24:30'!
PASSED!

!testRun: #TerniLapilliTest #test18XCanMoveAfterAllChipsArePlaced stamp: 'JEA 11/2/2020 00:24:30'!
PASSED!

!testRun: #TerniLapilliTest #test19OCanMoveAfterAllChipsArePlaced stamp: 'JEA 11/2/2020 00:24:30'!
PASSED!

!testRun: #TerniLapilliTest #test20XCantMoveInOsTurn stamp: 'JEA 11/2/2020 00:24:30'!
PASSED!

!testRun: #TerniLapilliTest #test21OCantMoveInXsTurn stamp: 'JEA 11/2/2020 00:24:30'!
PASSED!
!TerniLapilli methodsFor: 'playing - private' stamp: 'JEA 11/2/2020 00:25:21'!
move: aTerniLapilliChip to: newPosition

	chips size < 6
		ifTrue: [
			self error: self class cantMoveYetDescription.
		].
	
	isXPlaying
		ifTrue: [
			self error: self class notYourTurnDescription.
		]
		ifFalse: [
			chips remove: (OChip newAt: aTerniLapilliChip position).
			chips add: (OChip newAt: newPosition).
			
			isXPlaying := isXPlaying not.
		].! !
!TerniLapilli methodsFor: 'playing - private' stamp: 'JEA 11/2/2020 00:25:57' prior: 50879314!
move: aTerniLapilliChip to: newPosition

	chips size < 6
		ifTrue: [
			self error: self class cantMoveYetDescription.
		]
		ifFalse: [
			chips remove: (OChip newAt: aTerniLapilliChip position).
			chips add: (OChip newAt: newPosition).
			
			isXPlaying := isXPlaying not.
		].! !
!TerniLapilli methodsFor: 'playing - private' stamp: 'JEA 11/2/2020 00:26:55' prior: 50879329!
move: aTerniLapilliChip to: newPosition

	chips size < 6
		ifTrue: [
			self error: self class cantMoveYetDescription.
		]
		ifFalse: [
			chips remove: aTerniLapilliChip.
			chips add: (aTerniLapilliChip moveTo: newPosition).
			
			isXPlaying := isXPlaying not.
		].! !
!TerniLapilliChip methodsFor: 'moving' stamp: 'JEA 11/2/2020 00:27:34'!
moveTo: newPosition

	position := newPosition.! !

!testRun: #TerniLapilliTest #test01XPlaysFirst stamp: 'JEA 11/2/2020 00:27:36'!
PASSED!

!testRun: #TerniLapilliTest #test02XCanPlayItsTurn stamp: 'JEA 11/2/2020 00:27:36'!
PASSED!

!testRun: #TerniLapilliTest #test03OPlaysAfterX stamp: 'JEA 11/2/2020 00:27:36'!
PASSED!

!testRun: #TerniLapilliTest #test04OCanPlayItsTurn stamp: 'JEA 11/2/2020 00:27:36'!
PASSED!

!testRun: #TerniLapilliTest #test05XPlaysAfterO stamp: 'JEA 11/2/2020 00:27:36'!
PASSED!

!testRun: #TerniLapilliTest #test06XCantPlayOsTurn stamp: 'JEA 11/2/2020 00:27:36'!
PASSED!

!testRun: #TerniLapilliTest #test07OCantPlayXsTurn stamp: 'JEA 11/2/2020 00:27:36'!
PASSED!

!testRun: #TerniLapilliTest #test08PositionsDontOverlap stamp: 'JEA 11/2/2020 00:27:36'!
PASSED!

!testRun: #TerniLapilliTest #test09PositionsAreOccupied stamp: 'JEA 11/2/2020 00:27:36'!
PASSED!

!testRun: #TerniLapilliTest #test10OCantPlayInOccupiedPosition stamp: 'JEA 11/2/2020 00:27:36'!
PASSED!

!testRun: #TerniLapilliTest #test11XCantPlayInOccupiedPosition stamp: 'JEA 11/2/2020 00:27:36'!
PASSED!

!testRun: #TerniLapilliTest #test12XAndOAreAtEveryPositionPlayed stamp: 'JEA 11/2/2020 00:27:36'!
PASSED!

!testRun: #TerniLapilliTest #test13XCantPlayInInvalidPosition stamp: 'JEA 11/2/2020 00:27:36'!
PASSED!

!testRun: #TerniLapilliTest #test14OCantPlayInInvalidPosition stamp: 'JEA 11/2/2020 00:27:36'!
PASSED!

!testRun: #TerniLapilliTest #test15CantPlaceMoreThan3Chips stamp: 'JEA 11/2/2020 00:27:36'!
PASSED!

!testRun: #TerniLapilliTest #test16XCantMoveUntilAllChipsArePlaced stamp: 'JEA 11/2/2020 00:27:36'!
PASSED!

!testRun: #TerniLapilliTest #test17OCantMoveUntilAllChipsArePlaced stamp: 'JEA 11/2/2020 00:27:36'!
PASSED!

!testRun: #TerniLapilliTest #test18XCanMoveAfterAllChipsArePlaced stamp: 'JEA 11/2/2020 00:27:36'!
PASSED!

!testRun: #TerniLapilliTest #test19OCanMoveAfterAllChipsArePlaced stamp: 'JEA 11/2/2020 00:27:36'!
PASSED!

!testRun: #TerniLapilliTest #test20XCantMoveInOsTurn stamp: 'JEA 11/2/2020 00:27:36'!
PASSED!

!testRun: #TerniLapilliTest #test21OCantMoveInXsTurn stamp: 'JEA 11/2/2020 00:27:36'!
PASSED!
!TerniLapilli methodsFor: 'playing' stamp: 'JEA 11/2/2020 00:28:28' prior: 50879235!
moveOFrom: currentPosition to: newPosition
	
	isXPlaying
		ifTrue: [
			self error: self class notYourTurnDescription.
		]
		ifFalse: [
			self move: (OChip newAt: currentPosition) to: newPosition.
		].! !

!testRun: #TerniLapilliTest #test01XPlaysFirst stamp: 'JEA 11/2/2020 00:28:32'!
PASSED!

!testRun: #TerniLapilliTest #test02XCanPlayItsTurn stamp: 'JEA 11/2/2020 00:28:32'!
PASSED!

!testRun: #TerniLapilliTest #test03OPlaysAfterX stamp: 'JEA 11/2/2020 00:28:32'!
PASSED!

!testRun: #TerniLapilliTest #test04OCanPlayItsTurn stamp: 'JEA 11/2/2020 00:28:32'!
PASSED!

!testRun: #TerniLapilliTest #test05XPlaysAfterO stamp: 'JEA 11/2/2020 00:28:32'!
PASSED!

!testRun: #TerniLapilliTest #test06XCantPlayOsTurn stamp: 'JEA 11/2/2020 00:28:32'!
PASSED!

!testRun: #TerniLapilliTest #test07OCantPlayXsTurn stamp: 'JEA 11/2/2020 00:28:32'!
PASSED!

!testRun: #TerniLapilliTest #test08PositionsDontOverlap stamp: 'JEA 11/2/2020 00:28:32'!
PASSED!

!testRun: #TerniLapilliTest #test09PositionsAreOccupied stamp: 'JEA 11/2/2020 00:28:32'!
PASSED!

!testRun: #TerniLapilliTest #test10OCantPlayInOccupiedPosition stamp: 'JEA 11/2/2020 00:28:32'!
PASSED!

!testRun: #TerniLapilliTest #test11XCantPlayInOccupiedPosition stamp: 'JEA 11/2/2020 00:28:32'!
PASSED!

!testRun: #TerniLapilliTest #test12XAndOAreAtEveryPositionPlayed stamp: 'JEA 11/2/2020 00:28:32'!
PASSED!

!testRun: #TerniLapilliTest #test13XCantPlayInInvalidPosition stamp: 'JEA 11/2/2020 00:28:32'!
PASSED!

!testRun: #TerniLapilliTest #test14OCantPlayInInvalidPosition stamp: 'JEA 11/2/2020 00:28:32'!
PASSED!

!testRun: #TerniLapilliTest #test15CantPlaceMoreThan3Chips stamp: 'JEA 11/2/2020 00:28:32'!
PASSED!

!testRun: #TerniLapilliTest #test16XCantMoveUntilAllChipsArePlaced stamp: 'JEA 11/2/2020 00:28:32'!
PASSED!

!testRun: #TerniLapilliTest #test17OCantMoveUntilAllChipsArePlaced stamp: 'JEA 11/2/2020 00:28:32'!
PASSED!

!testRun: #TerniLapilliTest #test18XCanMoveAfterAllChipsArePlaced stamp: 'JEA 11/2/2020 00:28:32'!
PASSED!

!testRun: #TerniLapilliTest #test19OCanMoveAfterAllChipsArePlaced stamp: 'JEA 11/2/2020 00:28:32'!
PASSED!

!testRun: #TerniLapilliTest #test20XCantMoveInOsTurn stamp: 'JEA 11/2/2020 00:28:32'!
PASSED!

!testRun: #TerniLapilliTest #test21OCantMoveInXsTurn stamp: 'JEA 11/2/2020 00:28:32'!
PASSED!
!TerniLapilli methodsFor: 'playing' stamp: 'JEA 11/2/2020 00:28:42' prior: 50878991!
moveXFrom: currentPosition to: newPosition

	chips size < 6
		ifTrue: [
			self error: self class cantMoveYetDescription.
		].
	
	isXPlaying not
		ifTrue: [
			self error: self class notYourTurnDescription.
		]
		ifFalse: [
			self move: (XChip newAt: currentPosition) to: newPosition.
		].! !

!testRun: #TerniLapilliTest #test01XPlaysFirst stamp: 'JEA 11/2/2020 00:28:43'!
PASSED!

!testRun: #TerniLapilliTest #test02XCanPlayItsTurn stamp: 'JEA 11/2/2020 00:28:43'!
PASSED!

!testRun: #TerniLapilliTest #test03OPlaysAfterX stamp: 'JEA 11/2/2020 00:28:43'!
PASSED!

!testRun: #TerniLapilliTest #test04OCanPlayItsTurn stamp: 'JEA 11/2/2020 00:28:43'!
PASSED!

!testRun: #TerniLapilliTest #test05XPlaysAfterO stamp: 'JEA 11/2/2020 00:28:43'!
PASSED!

!testRun: #TerniLapilliTest #test06XCantPlayOsTurn stamp: 'JEA 11/2/2020 00:28:43'!
PASSED!

!testRun: #TerniLapilliTest #test07OCantPlayXsTurn stamp: 'JEA 11/2/2020 00:28:43'!
PASSED!

!testRun: #TerniLapilliTest #test08PositionsDontOverlap stamp: 'JEA 11/2/2020 00:28:43'!
PASSED!

!testRun: #TerniLapilliTest #test09PositionsAreOccupied stamp: 'JEA 11/2/2020 00:28:43'!
PASSED!

!testRun: #TerniLapilliTest #test10OCantPlayInOccupiedPosition stamp: 'JEA 11/2/2020 00:28:43'!
PASSED!

!testRun: #TerniLapilliTest #test11XCantPlayInOccupiedPosition stamp: 'JEA 11/2/2020 00:28:43'!
PASSED!

!testRun: #TerniLapilliTest #test12XAndOAreAtEveryPositionPlayed stamp: 'JEA 11/2/2020 00:28:43'!
PASSED!

!testRun: #TerniLapilliTest #test13XCantPlayInInvalidPosition stamp: 'JEA 11/2/2020 00:28:43'!
PASSED!

!testRun: #TerniLapilliTest #test14OCantPlayInInvalidPosition stamp: 'JEA 11/2/2020 00:28:43'!
PASSED!

!testRun: #TerniLapilliTest #test15CantPlaceMoreThan3Chips stamp: 'JEA 11/2/2020 00:28:43'!
PASSED!

!testRun: #TerniLapilliTest #test16XCantMoveUntilAllChipsArePlaced stamp: 'JEA 11/2/2020 00:28:43'!
PASSED!

!testRun: #TerniLapilliTest #test17OCantMoveUntilAllChipsArePlaced stamp: 'JEA 11/2/2020 00:28:43'!
PASSED!

!testRun: #TerniLapilliTest #test18XCanMoveAfterAllChipsArePlaced stamp: 'JEA 11/2/2020 00:28:43'!
PASSED!

!testRun: #TerniLapilliTest #test19OCanMoveAfterAllChipsArePlaced stamp: 'JEA 11/2/2020 00:28:43'!
PASSED!

!testRun: #TerniLapilliTest #test20XCantMoveInOsTurn stamp: 'JEA 11/2/2020 00:28:43'!
PASSED!

!testRun: #TerniLapilliTest #test21OCantMoveInXsTurn stamp: 'JEA 11/2/2020 00:28:43'!
PASSED!
!TerniLapilli methodsFor: 'playing' stamp: 'JEA 11/2/2020 00:28:49' prior: 50879497!
moveXFrom: currentPosition to: newPosition

	isXPlaying not
		ifTrue: [
			self error: self class notYourTurnDescription.
		]
		ifFalse: [
			self move: (XChip newAt: currentPosition) to: newPosition.
		].! !

!testRun: #TerniLapilliTest #test01XPlaysFirst stamp: 'JEA 11/2/2020 00:28:50'!
PASSED!

!testRun: #TerniLapilliTest #test02XCanPlayItsTurn stamp: 'JEA 11/2/2020 00:28:50'!
PASSED!

!testRun: #TerniLapilliTest #test03OPlaysAfterX stamp: 'JEA 11/2/2020 00:28:50'!
PASSED!

!testRun: #TerniLapilliTest #test04OCanPlayItsTurn stamp: 'JEA 11/2/2020 00:28:50'!
PASSED!

!testRun: #TerniLapilliTest #test05XPlaysAfterO stamp: 'JEA 11/2/2020 00:28:50'!
PASSED!

!testRun: #TerniLapilliTest #test06XCantPlayOsTurn stamp: 'JEA 11/2/2020 00:28:50'!
PASSED!

!testRun: #TerniLapilliTest #test07OCantPlayXsTurn stamp: 'JEA 11/2/2020 00:28:50'!
PASSED!

!testRun: #TerniLapilliTest #test08PositionsDontOverlap stamp: 'JEA 11/2/2020 00:28:50'!
PASSED!

!testRun: #TerniLapilliTest #test09PositionsAreOccupied stamp: 'JEA 11/2/2020 00:28:50'!
PASSED!

!testRun: #TerniLapilliTest #test10OCantPlayInOccupiedPosition stamp: 'JEA 11/2/2020 00:28:50'!
PASSED!

!testRun: #TerniLapilliTest #test11XCantPlayInOccupiedPosition stamp: 'JEA 11/2/2020 00:28:50'!
PASSED!

!testRun: #TerniLapilliTest #test12XAndOAreAtEveryPositionPlayed stamp: 'JEA 11/2/2020 00:28:50'!
PASSED!

!testRun: #TerniLapilliTest #test13XCantPlayInInvalidPosition stamp: 'JEA 11/2/2020 00:28:50'!
PASSED!

!testRun: #TerniLapilliTest #test14OCantPlayInInvalidPosition stamp: 'JEA 11/2/2020 00:28:50'!
PASSED!

!testRun: #TerniLapilliTest #test15CantPlaceMoreThan3Chips stamp: 'JEA 11/2/2020 00:28:50'!
PASSED!

!testRun: #TerniLapilliTest #test16XCantMoveUntilAllChipsArePlaced stamp: 'JEA 11/2/2020 00:28:50'!
PASSED!

!testRun: #TerniLapilliTest #test17OCantMoveUntilAllChipsArePlaced stamp: 'JEA 11/2/2020 00:28:50'!
PASSED!

!testRun: #TerniLapilliTest #test18XCanMoveAfterAllChipsArePlaced stamp: 'JEA 11/2/2020 00:28:50'!
PASSED!

!testRun: #TerniLapilliTest #test19OCanMoveAfterAllChipsArePlaced stamp: 'JEA 11/2/2020 00:28:50'!
PASSED!

!testRun: #TerniLapilliTest #test20XCantMoveInOsTurn stamp: 'JEA 11/2/2020 00:28:50'!
PASSED!

!testRun: #TerniLapilliTest #test21OCantMoveInXsTurn stamp: 'JEA 11/2/2020 00:28:50'!
PASSED!
!TerniLapilli methodsFor: 'playing' stamp: 'JEA 11/2/2020 00:34:28' prior: 50878367!
putOAt: aPosition

	isXPlaying
		ifTrue: [
			self error: self class notYourTurnDescription.
		]
		ifFalse: [
			self put: (OChip newAt: aPosition).
		].! !
!TerniLapilli methodsFor: 'playing' stamp: 'JEA 11/2/2020 00:34:37' prior: 50878375!
putXAt: aPosition

	isXPlaying not
		ifTrue: [
			self error: self class notYourTurnDescription.
		]
		ifFalse: [
			self put: (XChip newAt: aPosition).
		].! !

!testRun: #TerniLapilliTest #test01XPlaysFirst stamp: 'JEA 11/2/2020 00:34:39'!
PASSED!

!testRun: #TerniLapilliTest #test02XCanPlayItsTurn stamp: 'JEA 11/2/2020 00:34:39'!
PASSED!

!testRun: #TerniLapilliTest #test03OPlaysAfterX stamp: 'JEA 11/2/2020 00:34:39'!
PASSED!

!testRun: #TerniLapilliTest #test04OCanPlayItsTurn stamp: 'JEA 11/2/2020 00:34:39'!
PASSED!

!testRun: #TerniLapilliTest #test05XPlaysAfterO stamp: 'JEA 11/2/2020 00:34:39'!
PASSED!

!testRun: #TerniLapilliTest #test06XCantPlayOsTurn stamp: 'JEA 11/2/2020 00:34:39'!
PASSED!

!testRun: #TerniLapilliTest #test07OCantPlayXsTurn stamp: 'JEA 11/2/2020 00:34:39'!
PASSED!

!testRun: #TerniLapilliTest #test08PositionsDontOverlap stamp: 'JEA 11/2/2020 00:34:39'!
PASSED!

!testRun: #TerniLapilliTest #test09PositionsAreOccupied stamp: 'JEA 11/2/2020 00:34:39'!
PASSED!

!testRun: #TerniLapilliTest #test10OCantPlayInOccupiedPosition stamp: 'JEA 11/2/2020 00:34:39'!
PASSED!

!testRun: #TerniLapilliTest #test11XCantPlayInOccupiedPosition stamp: 'JEA 11/2/2020 00:34:39'!
PASSED!

!testRun: #TerniLapilliTest #test12XAndOAreAtEveryPositionPlayed stamp: 'JEA 11/2/2020 00:34:39'!
PASSED!

!testRun: #TerniLapilliTest #test13XCantPlayInInvalidPosition stamp: 'JEA 11/2/2020 00:34:39'!
PASSED!

!testRun: #TerniLapilliTest #test14OCantPlayInInvalidPosition stamp: 'JEA 11/2/2020 00:34:39'!
PASSED!

!testRun: #TerniLapilliTest #test15CantPlaceMoreThan3Chips stamp: 'JEA 11/2/2020 00:34:39'!
PASSED!

!testRun: #TerniLapilliTest #test16XCantMoveUntilAllChipsArePlaced stamp: 'JEA 11/2/2020 00:34:39'!
PASSED!

!testRun: #TerniLapilliTest #test17OCantMoveUntilAllChipsArePlaced stamp: 'JEA 11/2/2020 00:34:39'!
PASSED!

!testRun: #TerniLapilliTest #test18XCanMoveAfterAllChipsArePlaced stamp: 'JEA 11/2/2020 00:34:39'!
PASSED!

!testRun: #TerniLapilliTest #test19OCanMoveAfterAllChipsArePlaced stamp: 'JEA 11/2/2020 00:34:39'!
PASSED!

!testRun: #TerniLapilliTest #test20XCantMoveInOsTurn stamp: 'JEA 11/2/2020 00:34:39'!
PASSED!

!testRun: #TerniLapilliTest #test21OCantMoveInXsTurn stamp: 'JEA 11/2/2020 00:34:39'!
PASSED!
!TerniLapilliTest methodsFor: 'tests' stamp: 'JEA 11/2/2020 00:45:44'!
test22XCantMoveToInvalidPosition
	| aTerniLapilliGame |

	aTerniLapilliGame := TerniLapilli new.
	aTerniLapilliGame putXAt: 0@0.
	aTerniLapilliGame putOAt: 0@1.
	aTerniLapilliGame putXAt: 0@2.
	aTerniLapilliGame putOAt: 1@0.
	aTerniLapilliGame putXAt: 1@1.
	aTerniLapilliGame putOAt: 1@2.
	
	self should: [ aTerniLapilliGame moveXFrom: 1@2 to: 2@2. ]
		raise: Error
		withExceptionDo: [ :anException | self assert: anException messageText = TerniLapilli notYourTurnDescription. ].! !
!TerniLapilli class methodsFor: 'error descriptions' stamp: 'JEA 11/2/2020 00:48:09'!
invalidPositionDescription

	^'Invalid position. Valid positions are between 0@0 and 2@2.'! !

!methodRemoval: TerniLapilliChip class #invalidPositionDescription stamp: 'JEA 11/2/2020 00:48:15'!
invalidPositionDescription

	^'Invalid position. Valid positions are between 0@0 and 2@2.'!
!TerniLapilli class methodsFor: 'inquiries' stamp: 'JEA 11/2/2020 00:48:51'!
isValid: aPosition

	^aPosition <= (2@2) and: [aPosition >= (0@0)].! !

!methodRemoval: TerniLapilliChip class #isValid: stamp: 'JEA 11/2/2020 00:49:00'!
isValid: aPosition

	^aPosition <= (2@2) and: [aPosition >= (0@0)].!

!methodRemoval: TerniLapilliChip class #checkIfValid: stamp: 'JEA 11/2/2020 00:49:12'!
checkIfValid: aPosition

	(self isValid: aPosition) ifFalse: [ self error: self invalidPositionDescription. ].!
!OChip class methodsFor: 'instance creation' stamp: 'JEA 11/2/2020 00:49:20' prior: 50874754 overrides: 50873980!
newAt: aPosition

	^self basicNew at: aPosition.! !
!XChip class methodsFor: 'instance creation' stamp: 'JEA 11/2/2020 00:49:27' prior: 50874761 overrides: 50873980!
newAt: aPosition

	^self basicNew at: aPosition.! !
!TerniLapilli methodsFor: 'playing - private' stamp: 'JEA 11/2/2020 00:50:18' prior: 50875666!
put: aTerniLapilliChip
	| position |
	position := aTerniLapilliChip position.

	(self isValid: position) ifFalse: [ self error: self invalidPositionDescription. ].

	chips size < 6 
		ifTrue: [
			(self isOccupied: position) ifTrue: [self error: self class positionOccupiedDescription. ].
			
			chips add: aTerniLapilliChip.
			isXPlaying := isXPlaying not.
		]
		ifFalse: [
			self error: self class noMoreChipsDescription.
		]! !
!TerniLapilli methodsFor: 'playing - private' stamp: 'JEA 11/2/2020 00:50:42' prior: 50879341!
move: aTerniLapilliChip to: newPosition

	(self isValid: newPosition) ifFalse: [ self error: self invalidPositionDescription. ].

	chips size < 6
		ifTrue: [
			self error: self class cantMoveYetDescription.
		]
		ifFalse: [
			chips remove: aTerniLapilliChip.
			chips add: (aTerniLapilliChip moveTo: newPosition).
			
			isXPlaying := isXPlaying not.
		].! !

!testRun: #TerniLapilliTest #test01XPlaysFirst stamp: 'JEA 11/2/2020 00:50:44'!
PASSED!

!testRun: #TerniLapilliTest #test02XCanPlayItsTurn stamp: 'JEA 11/2/2020 00:50:44'!
ERROR!

!testRun: #TerniLapilliTest #test03OPlaysAfterX stamp: 'JEA 11/2/2020 00:50:44'!
ERROR!

!testRun: #TerniLapilliTest #test04OCanPlayItsTurn stamp: 'JEA 11/2/2020 00:50:44'!
ERROR!

!testRun: #TerniLapilliTest #test05XPlaysAfterO stamp: 'JEA 11/2/2020 00:50:44'!
ERROR!

!testRun: #TerniLapilliTest #test06XCantPlayOsTurn stamp: 'JEA 11/2/2020 00:50:44'!
ERROR!

!testRun: #TerniLapilliTest #test07OCantPlayXsTurn stamp: 'JEA 11/2/2020 00:50:44'!
PASSED!

!testRun: #TerniLapilliTest #test08PositionsDontOverlap stamp: 'JEA 11/2/2020 00:50:44'!
ERROR!

!testRun: #TerniLapilliTest #test09PositionsAreOccupied stamp: 'JEA 11/2/2020 00:50:44'!
ERROR!

!testRun: #TerniLapilliTest #test10OCantPlayInOccupiedPosition stamp: 'JEA 11/2/2020 00:50:44'!
ERROR!

!testRun: #TerniLapilliTest #test11XCantPlayInOccupiedPosition stamp: 'JEA 11/2/2020 00:50:44'!
ERROR!

!testRun: #TerniLapilliTest #test12XAndOAreAtEveryPositionPlayed stamp: 'JEA 11/2/2020 00:50:44'!
ERROR!

!testRun: #TerniLapilliTest #test13XCantPlayInInvalidPosition stamp: 'JEA 11/2/2020 00:50:44'!
ERROR!

!testRun: #TerniLapilliTest #test14OCantPlayInInvalidPosition stamp: 'JEA 11/2/2020 00:50:44'!
ERROR!

!testRun: #TerniLapilliTest #test15CantPlaceMoreThan3Chips stamp: 'JEA 11/2/2020 00:50:44'!
ERROR!

!testRun: #TerniLapilliTest #test16XCantMoveUntilAllChipsArePlaced stamp: 'JEA 11/2/2020 00:50:44'!
ERROR!

!testRun: #TerniLapilliTest #test17OCantMoveUntilAllChipsArePlaced stamp: 'JEA 11/2/2020 00:50:44'!
ERROR!

!testRun: #TerniLapilliTest #test18XCanMoveAfterAllChipsArePlaced stamp: 'JEA 11/2/2020 00:50:44'!
ERROR!

!testRun: #TerniLapilliTest #test19OCanMoveAfterAllChipsArePlaced stamp: 'JEA 11/2/2020 00:50:44'!
ERROR!

!testRun: #TerniLapilliTest #test20XCantMoveInOsTurn stamp: 'JEA 11/2/2020 00:50:44'!
ERROR!

!testRun: #TerniLapilliTest #test21OCantMoveInXsTurn stamp: 'JEA 11/2/2020 00:50:44'!
ERROR!

!testRun: #TerniLapilliTest #test22XCantMoveToInvalidPosition stamp: 'JEA 11/2/2020 00:50:44'!
ERROR!

!testRun: #TerniLapilliTest #test01XPlaysFirst stamp: 'JEA 11/2/2020 00:50:55'!
PASSED!

!testRun: #TerniLapilliTest #test02XCanPlayItsTurn stamp: 'JEA 11/2/2020 00:50:55'!
ERROR!

!testRun: #TerniLapilliTest #test03OPlaysAfterX stamp: 'JEA 11/2/2020 00:50:55'!
ERROR!

!testRun: #TerniLapilliTest #test04OCanPlayItsTurn stamp: 'JEA 11/2/2020 00:50:55'!
ERROR!

!testRun: #TerniLapilliTest #test05XPlaysAfterO stamp: 'JEA 11/2/2020 00:50:55'!
ERROR!

!testRun: #TerniLapilliTest #test06XCantPlayOsTurn stamp: 'JEA 11/2/2020 00:50:55'!
ERROR!

!testRun: #TerniLapilliTest #test07OCantPlayXsTurn stamp: 'JEA 11/2/2020 00:50:55'!
PASSED!

!testRun: #TerniLapilliTest #test08PositionsDontOverlap stamp: 'JEA 11/2/2020 00:50:55'!
ERROR!

!testRun: #TerniLapilliTest #test09PositionsAreOccupied stamp: 'JEA 11/2/2020 00:50:55'!
ERROR!

!testRun: #TerniLapilliTest #test10OCantPlayInOccupiedPosition stamp: 'JEA 11/2/2020 00:50:55'!
ERROR!

!testRun: #TerniLapilliTest #test11XCantPlayInOccupiedPosition stamp: 'JEA 11/2/2020 00:50:55'!
ERROR!

!testRun: #TerniLapilliTest #test12XAndOAreAtEveryPositionPlayed stamp: 'JEA 11/2/2020 00:50:55'!
ERROR!

!testRun: #TerniLapilliTest #test13XCantPlayInInvalidPosition stamp: 'JEA 11/2/2020 00:50:55'!
ERROR!

!testRun: #TerniLapilliTest #test14OCantPlayInInvalidPosition stamp: 'JEA 11/2/2020 00:50:55'!
ERROR!

!testRun: #TerniLapilliTest #test15CantPlaceMoreThan3Chips stamp: 'JEA 11/2/2020 00:50:55'!
ERROR!

!testRun: #TerniLapilliTest #test16XCantMoveUntilAllChipsArePlaced stamp: 'JEA 11/2/2020 00:50:55'!
ERROR!

!testRun: #TerniLapilliTest #test17OCantMoveUntilAllChipsArePlaced stamp: 'JEA 11/2/2020 00:50:55'!
ERROR!

!testRun: #TerniLapilliTest #test18XCanMoveAfterAllChipsArePlaced stamp: 'JEA 11/2/2020 00:50:55'!
ERROR!

!testRun: #TerniLapilliTest #test19OCanMoveAfterAllChipsArePlaced stamp: 'JEA 11/2/2020 00:50:55'!
ERROR!

!testRun: #TerniLapilliTest #test20XCantMoveInOsTurn stamp: 'JEA 11/2/2020 00:50:55'!
ERROR!

!testRun: #TerniLapilliTest #test21OCantMoveInXsTurn stamp: 'JEA 11/2/2020 00:50:55'!
ERROR!

!testRun: #TerniLapilliTest #test22XCantMoveToInvalidPosition stamp: 'JEA 11/2/2020 00:50:55'!
ERROR!

!testRun: #TerniLapilliTest #test02XCanPlayItsTurn stamp: 'JEA 11/2/2020 00:50:58'!
ERROR!
!TerniLapilli methodsFor: 'playing - private' stamp: 'JEA 11/2/2020 00:51:18' prior: 50879789!
put: aTerniLapilliChip
	| position |
	position := aTerniLapilliChip position.

	(self isValid: position) ifFalse: [ self error: self class invalidPositionDescription. ].

	chips size < 6 
		ifTrue: [
			(self isOccupied: position) ifTrue: [self error: self class positionOccupiedDescription. ].
			
			chips add: aTerniLapilliChip.
			isXPlaying := isXPlaying not.
		]
		ifFalse: [
			self error: self class noMoreChipsDescription.
		]! !
!TerniLapilli methodsFor: 'playing - private' stamp: 'JEA 11/2/2020 00:51:25' prior: 50879806!
move: aTerniLapilliChip to: newPosition

	(self isValid: newPosition) ifFalse: [ self error: self class invalidPositionDescription. ].

	chips size < 6
		ifTrue: [
			self error: self class cantMoveYetDescription.
		]
		ifFalse: [
			chips remove: aTerniLapilliChip.
			chips add: (aTerniLapilliChip moveTo: newPosition).
			
			isXPlaying := isXPlaying not.
		].! !

!testRun: #TerniLapilliTest #test01XPlaysFirst stamp: 'JEA 11/2/2020 00:51:26'!
PASSED!

!testRun: #TerniLapilliTest #test02XCanPlayItsTurn stamp: 'JEA 11/2/2020 00:51:26'!
ERROR!

!testRun: #TerniLapilliTest #test03OPlaysAfterX stamp: 'JEA 11/2/2020 00:51:26'!
ERROR!

!testRun: #TerniLapilliTest #test04OCanPlayItsTurn stamp: 'JEA 11/2/2020 00:51:26'!
ERROR!

!testRun: #TerniLapilliTest #test05XPlaysAfterO stamp: 'JEA 11/2/2020 00:51:26'!
ERROR!

!testRun: #TerniLapilliTest #test06XCantPlayOsTurn stamp: 'JEA 11/2/2020 00:51:26'!
ERROR!

!testRun: #TerniLapilliTest #test07OCantPlayXsTurn stamp: 'JEA 11/2/2020 00:51:26'!
PASSED!

!testRun: #TerniLapilliTest #test08PositionsDontOverlap stamp: 'JEA 11/2/2020 00:51:26'!
ERROR!

!testRun: #TerniLapilliTest #test09PositionsAreOccupied stamp: 'JEA 11/2/2020 00:51:26'!
ERROR!

!testRun: #TerniLapilliTest #test10OCantPlayInOccupiedPosition stamp: 'JEA 11/2/2020 00:51:26'!
ERROR!

!testRun: #TerniLapilliTest #test11XCantPlayInOccupiedPosition stamp: 'JEA 11/2/2020 00:51:26'!
ERROR!

!testRun: #TerniLapilliTest #test12XAndOAreAtEveryPositionPlayed stamp: 'JEA 11/2/2020 00:51:26'!
ERROR!

!testRun: #TerniLapilliTest #test13XCantPlayInInvalidPosition stamp: 'JEA 11/2/2020 00:51:26'!
ERROR!

!testRun: #TerniLapilliTest #test14OCantPlayInInvalidPosition stamp: 'JEA 11/2/2020 00:51:26'!
ERROR!

!testRun: #TerniLapilliTest #test15CantPlaceMoreThan3Chips stamp: 'JEA 11/2/2020 00:51:26'!
ERROR!

!testRun: #TerniLapilliTest #test16XCantMoveUntilAllChipsArePlaced stamp: 'JEA 11/2/2020 00:51:26'!
ERROR!

!testRun: #TerniLapilliTest #test17OCantMoveUntilAllChipsArePlaced stamp: 'JEA 11/2/2020 00:51:26'!
ERROR!

!testRun: #TerniLapilliTest #test18XCanMoveAfterAllChipsArePlaced stamp: 'JEA 11/2/2020 00:51:26'!
ERROR!

!testRun: #TerniLapilliTest #test19OCanMoveAfterAllChipsArePlaced stamp: 'JEA 11/2/2020 00:51:26'!
ERROR!

!testRun: #TerniLapilliTest #test20XCantMoveInOsTurn stamp: 'JEA 11/2/2020 00:51:26'!
ERROR!

!testRun: #TerniLapilliTest #test21OCantMoveInXsTurn stamp: 'JEA 11/2/2020 00:51:26'!
ERROR!

!testRun: #TerniLapilliTest #test22XCantMoveToInvalidPosition stamp: 'JEA 11/2/2020 00:51:26'!
ERROR!

!testRun: #TerniLapilliTest #test02XCanPlayItsTurn stamp: 'JEA 11/2/2020 00:51:28'!
ERROR!
!TerniLapilli methodsFor: 'playing - private' stamp: 'JEA 11/2/2020 00:52:09' prior: 50879976!
move: aTerniLapilliChip to: newPosition

	(self class isValid: newPosition) ifFalse: [ self error: self class invalidPositionDescription. ].

	chips size < 6
		ifTrue: [
			self error: self class cantMoveYetDescription.
		]
		ifFalse: [
			chips remove: aTerniLapilliChip.
			chips add: (aTerniLapilliChip moveTo: newPosition).
			
			isXPlaying := isXPlaying not.
		].! !
!TerniLapilli methodsFor: 'playing - private' stamp: 'JEA 11/2/2020 00:52:11' prior: 50879959!
put: aTerniLapilliChip
	| position |
	position := aTerniLapilliChip position.

	(self class isValid: position) ifFalse: [ self error: self class invalidPositionDescription. ].

	chips size < 6 
		ifTrue: [
			(self isOccupied: position) ifTrue: [self error: self class positionOccupiedDescription. ].
			
			chips add: aTerniLapilliChip.
			isXPlaying := isXPlaying not.
		]
		ifFalse: [
			self error: self class noMoreChipsDescription.
		]! !

!testRun: #TerniLapilliTest #test01XPlaysFirst stamp: 'JEA 11/2/2020 00:52:12'!
PASSED!

!testRun: #TerniLapilliTest #test02XCanPlayItsTurn stamp: 'JEA 11/2/2020 00:52:12'!
PASSED!

!testRun: #TerniLapilliTest #test03OPlaysAfterX stamp: 'JEA 11/2/2020 00:52:12'!
PASSED!

!testRun: #TerniLapilliTest #test04OCanPlayItsTurn stamp: 'JEA 11/2/2020 00:52:12'!
PASSED!

!testRun: #TerniLapilliTest #test05XPlaysAfterO stamp: 'JEA 11/2/2020 00:52:12'!
PASSED!

!testRun: #TerniLapilliTest #test06XCantPlayOsTurn stamp: 'JEA 11/2/2020 00:52:12'!
PASSED!

!testRun: #TerniLapilliTest #test07OCantPlayXsTurn stamp: 'JEA 11/2/2020 00:52:12'!
PASSED!

!testRun: #TerniLapilliTest #test08PositionsDontOverlap stamp: 'JEA 11/2/2020 00:52:12'!
PASSED!

!testRun: #TerniLapilliTest #test09PositionsAreOccupied stamp: 'JEA 11/2/2020 00:52:12'!
PASSED!

!testRun: #TerniLapilliTest #test10OCantPlayInOccupiedPosition stamp: 'JEA 11/2/2020 00:52:12'!
PASSED!

!testRun: #TerniLapilliTest #test11XCantPlayInOccupiedPosition stamp: 'JEA 11/2/2020 00:52:12'!
PASSED!

!testRun: #TerniLapilliTest #test12XAndOAreAtEveryPositionPlayed stamp: 'JEA 11/2/2020 00:52:12'!
PASSED!

!testRun: #TerniLapilliTest #test13XCantPlayInInvalidPosition stamp: 'JEA 11/2/2020 00:52:12'!
ERROR!

!testRun: #TerniLapilliTest #test14OCantPlayInInvalidPosition stamp: 'JEA 11/2/2020 00:52:12'!
ERROR!

!testRun: #TerniLapilliTest #test15CantPlaceMoreThan3Chips stamp: 'JEA 11/2/2020 00:52:12'!
PASSED!

!testRun: #TerniLapilliTest #test16XCantMoveUntilAllChipsArePlaced stamp: 'JEA 11/2/2020 00:52:12'!
PASSED!

!testRun: #TerniLapilliTest #test17OCantMoveUntilAllChipsArePlaced stamp: 'JEA 11/2/2020 00:52:12'!
PASSED!

!testRun: #TerniLapilliTest #test18XCanMoveAfterAllChipsArePlaced stamp: 'JEA 11/2/2020 00:52:12'!
PASSED!

!testRun: #TerniLapilliTest #test19OCanMoveAfterAllChipsArePlaced stamp: 'JEA 11/2/2020 00:52:12'!
PASSED!

!testRun: #TerniLapilliTest #test20XCantMoveInOsTurn stamp: 'JEA 11/2/2020 00:52:12'!
PASSED!

!testRun: #TerniLapilliTest #test21OCantMoveInXsTurn stamp: 'JEA 11/2/2020 00:52:12'!
PASSED!

!testRun: #TerniLapilliTest #test22XCantMoveToInvalidPosition stamp: 'JEA 11/2/2020 00:52:12'!
FAILURE!

!testRun: #TerniLapilliTest #test13XCantPlayInInvalidPosition stamp: 'JEA 11/2/2020 00:52:16'!
ERROR!
!TerniLapilliTest methodsFor: 'tests' stamp: 'JEA 11/2/2020 00:52:47' prior: 50877687!
test13XCantPlayInInvalidPosition

	self should: [ TerniLapilli new putXAt: 3@2. ]
		raise: Error
		withExceptionDo: [ :anException | anException description = TerniLapilli invalidPositionDescription. ].! !
!TerniLapilliTest methodsFor: 'tests' stamp: 'JEA 11/2/2020 00:52:50' prior: 50877662!
test14OCantPlayInInvalidPosition
	| aTerniLapilliGame |

	aTerniLapilliGame := TerniLapilli new.
	aTerniLapilliGame putXAt: 0@1.
	
	self should: [ aTerniLapilliGame putOAt: 3@2. ]
		raise: Error
		withExceptionDo: [ :anException | anException description = TerniLapilli invalidPositionDescription. ].! !

!testRun: #TerniLapilliTest #test01XPlaysFirst stamp: 'JEA 11/2/2020 00:52:51'!
PASSED!

!testRun: #TerniLapilliTest #test02XCanPlayItsTurn stamp: 'JEA 11/2/2020 00:52:51'!
PASSED!

!testRun: #TerniLapilliTest #test03OPlaysAfterX stamp: 'JEA 11/2/2020 00:52:51'!
PASSED!

!testRun: #TerniLapilliTest #test04OCanPlayItsTurn stamp: 'JEA 11/2/2020 00:52:51'!
PASSED!

!testRun: #TerniLapilliTest #test05XPlaysAfterO stamp: 'JEA 11/2/2020 00:52:51'!
PASSED!

!testRun: #TerniLapilliTest #test06XCantPlayOsTurn stamp: 'JEA 11/2/2020 00:52:51'!
PASSED!

!testRun: #TerniLapilliTest #test07OCantPlayXsTurn stamp: 'JEA 11/2/2020 00:52:51'!
PASSED!

!testRun: #TerniLapilliTest #test08PositionsDontOverlap stamp: 'JEA 11/2/2020 00:52:51'!
PASSED!

!testRun: #TerniLapilliTest #test09PositionsAreOccupied stamp: 'JEA 11/2/2020 00:52:51'!
PASSED!

!testRun: #TerniLapilliTest #test10OCantPlayInOccupiedPosition stamp: 'JEA 11/2/2020 00:52:51'!
PASSED!

!testRun: #TerniLapilliTest #test11XCantPlayInOccupiedPosition stamp: 'JEA 11/2/2020 00:52:51'!
PASSED!

!testRun: #TerniLapilliTest #test12XAndOAreAtEveryPositionPlayed stamp: 'JEA 11/2/2020 00:52:51'!
PASSED!

!testRun: #TerniLapilliTest #test13XCantPlayInInvalidPosition stamp: 'JEA 11/2/2020 00:52:51'!
PASSED!

!testRun: #TerniLapilliTest #test14OCantPlayInInvalidPosition stamp: 'JEA 11/2/2020 00:52:51'!
PASSED!

!testRun: #TerniLapilliTest #test15CantPlaceMoreThan3Chips stamp: 'JEA 11/2/2020 00:52:51'!
PASSED!

!testRun: #TerniLapilliTest #test16XCantMoveUntilAllChipsArePlaced stamp: 'JEA 11/2/2020 00:52:51'!
PASSED!

!testRun: #TerniLapilliTest #test17OCantMoveUntilAllChipsArePlaced stamp: 'JEA 11/2/2020 00:52:51'!
PASSED!

!testRun: #TerniLapilliTest #test18XCanMoveAfterAllChipsArePlaced stamp: 'JEA 11/2/2020 00:52:51'!
PASSED!

!testRun: #TerniLapilliTest #test19OCanMoveAfterAllChipsArePlaced stamp: 'JEA 11/2/2020 00:52:51'!
PASSED!

!testRun: #TerniLapilliTest #test20XCantMoveInOsTurn stamp: 'JEA 11/2/2020 00:52:51'!
PASSED!

!testRun: #TerniLapilliTest #test21OCantMoveInXsTurn stamp: 'JEA 11/2/2020 00:52:51'!
PASSED!

!testRun: #TerniLapilliTest #test22XCantMoveToInvalidPosition stamp: 'JEA 11/2/2020 00:52:51'!
FAILURE!

!testRun: #TerniLapilliTest #test22XCantMoveToInvalidPosition stamp: 'JEA 11/2/2020 00:52:51'!
FAILURE!
!TerniLapilli methodsFor: 'playing - private' stamp: 'JEA 11/2/2020 00:53:13' prior: 50880062!
move: aTerniLapilliChip to: newPosition
	(self class isValid: newPosition) ifFalse: [ self error: self class invalidPositionDescription. ].

	chips size < 6
		ifTrue: [
			self error: self class cantMoveYetDescription.
		]
		ifFalse: [
			chips remove: aTerniLapilliChip.
			chips add: (aTerniLapilliChip moveTo: newPosition).
			
			isXPlaying := isXPlaying not.
		].! !
!TerniLapilli methodsFor: 'playing - private' stamp: 'JEA 11/2/2020 00:53:15' prior: 50880261!
move: aTerniLapilliChip to: newPosition

	(self class isValid: newPosition) ifFalse: [ self error: self class invalidPositionDescription. ].

	chips size < 6
		ifTrue: [
			self error: self class cantMoveYetDescription.
		]
		ifFalse: [
			chips remove: aTerniLapilliChip.
			chips add: (aTerniLapilliChip moveTo: newPosition).
			
			isXPlaying := isXPlaying not.
		].! !
!TerniLapilliTest methodsFor: 'tests' stamp: 'JEA 11/2/2020 01:07:20' prior: 50879731!
test22XCantMoveToInvalidPosition
	! !

----SNAPSHOT----(2 November 2020 01:07:22) CuisUniversity-4384.image priorSource: 17479941!

----SNAPSHOT----(2 November 2020 01:07:33) CuisUniversity-4384.image priorSource: 17556613!

----QUIT----(2 November 2020 01:07:43) CuisUniversity-4384.image priorSource: 17556706!

----STARTUP---- (2 November 2020 12:46:01) as /home/jadmin/Documents/Ingeniería de Software 1/Cuis University/Cuis University/CuisUniversity-4384.image!


!classRemoval: #XChip stamp: 'JEA 11/2/2020 12:46:18'!
TerniLapilliChip subclass: #XChip
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TerniLapilli'!

!classRemoval: #OChip stamp: 'JEA 11/2/2020 12:46:18'!
TerniLapilliChip subclass: #OChip
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TerniLapilli'!

!classRemoval: #TerniLapilliChip stamp: 'JEA 11/2/2020 12:46:19'!
Object subclass: #TerniLapilliChip
	instanceVariableNames: 'label position'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TerniLapilli'!

!classRemoval: #TerniLapilli stamp: 'JEA 11/2/2020 12:46:19'!
Object subclass: #TerniLapilli
	instanceVariableNames: 'isXPlaying chips'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TerniLapilli'!

!classRemoval: #TerniLapilliTest stamp: 'JEA 11/2/2020 12:46:19'!
TestCase subclass: #TerniLapilliTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TerniLapilli'!

----End fileIn of /home/jadmin/Documents/GIT/IS1 Ejercicios/17-TerniLapilli/TerniLapilli.st----!

!testRun: #TerniLapilliTest #test01XPlaysFirst stamp: 'JEA 11/2/2020 12:52:27'!
PASSED!

!testRun: #TerniLapilliTest #test02XCanPlayItsTurn stamp: 'JEA 11/2/2020 12:52:27'!
PASSED!

!testRun: #TerniLapilliTest #test03OPlaysAfterX stamp: 'JEA 11/2/2020 12:52:27'!
PASSED!

!testRun: #TerniLapilliTest #test04OCanPlayItsTurn stamp: 'JEA 11/2/2020 12:52:27'!
PASSED!

!testRun: #TerniLapilliTest #test05XPlaysAfterO stamp: 'JEA 11/2/2020 12:52:27'!
PASSED!

!testRun: #TerniLapilliTest #test06XCantPlayOsTurn stamp: 'JEA 11/2/2020 12:52:27'!
PASSED!

!testRun: #TerniLapilliTest #test07OCantPlayXsTurn stamp: 'JEA 11/2/2020 12:52:27'!
PASSED!

!testRun: #TerniLapilliTest #test08PositionsDontOverlap stamp: 'JEA 11/2/2020 12:52:27'!
PASSED!

!testRun: #TerniLapilliTest #test09PositionsAreOccupied stamp: 'JEA 11/2/2020 12:52:27'!
PASSED!

!testRun: #TerniLapilliTest #test10OCantPlayInOccupiedPosition stamp: 'JEA 11/2/2020 12:52:27'!
PASSED!

!testRun: #TerniLapilliTest #test11XCantPlayInOccupiedPosition stamp: 'JEA 11/2/2020 12:52:27'!
PASSED!

!testRun: #TerniLapilliTest #test12XAndOAreAtEveryPositionPlayed stamp: 'JEA 11/2/2020 12:52:27'!
PASSED!

!testRun: #TerniLapilliTest #test13XCantPlayInInvalidPosition stamp: 'JEA 11/2/2020 12:52:27'!
PASSED!

!testRun: #TerniLapilliTest #test14OCantPlayInInvalidPosition stamp: 'JEA 11/2/2020 12:52:27'!
PASSED!

!testRun: #TerniLapilliTest #test15CantPlaceMoreThan3Chips stamp: 'JEA 11/2/2020 12:52:27'!
PASSED!

!testRun: #TerniLapilliTest #test16XCantMoveUntilAllChipsArePlaced stamp: 'JEA 11/2/2020 12:52:27'!
PASSED!

!testRun: #TerniLapilliTest #test17OCantMoveUntilAllChipsArePlaced stamp: 'JEA 11/2/2020 12:52:27'!
PASSED!

!testRun: #TerniLapilliTest #test18XCanMoveAfterAllChipsArePlaced stamp: 'JEA 11/2/2020 12:52:27'!
PASSED!

!testRun: #TerniLapilliTest #test19OCanMoveAfterAllChipsArePlaced stamp: 'JEA 11/2/2020 12:52:27'!
PASSED!

!testRun: #TerniLapilliTest #test20XCantMoveInOsTurn stamp: 'JEA 11/2/2020 12:52:27'!
PASSED!

!testRun: #TerniLapilliTest #test21OCantMoveInXsTurn stamp: 'JEA 11/2/2020 12:52:27'!
PASSED!

!testRun: #TerniLapilliTest #test22XCantMoveToOccupiedPosition stamp: 'JEA 11/2/2020 12:52:27'!
PASSED!

!testRun: #TerniLapilliTest #test23XCantMoveToInvalidPosition stamp: 'JEA 11/2/2020 12:52:27'!
PASSED!

!testRun: #TerniLapilliTest #test24XCantMoveToNotNeighborPosition stamp: 'JEA 11/2/2020 12:52:27'!
PASSED!

!testRun: #TerniLapilliTest #test25XCanWin stamp: 'JEA 11/2/2020 12:52:27'!
PASSED!

!testRun: #TerniLapilliTest #test26OCanWin stamp: 'JEA 11/2/2020 12:52:27'!
PASSED!

!testRun: #TerniLapilliTest #test27CantPlayAfterXWins stamp: 'JEA 11/2/2020 12:52:27'!
PASSED!

!testRun: #TerniLapilliTest #test28CantPlayAfterOWins stamp: 'JEA 11/2/2020 12:52:27'!
PASSED!

!testRun: #TerniLapilliTest #test29CantMoveAfterOWins stamp: 'JEA 11/2/2020 12:52:27'!
PASSED!
!TerniLapilliTest methodsFor: 'tests' stamp: 'JEA 11/2/2020 12:56:48'!
test28CantMoveAfterXWins
	| aTerniLapilliGame |

	aTerniLapilliGame := TerniLapilli new.
	aTerniLapilliGame putXAt: 0@0.
	aTerniLapilliGame putOAt: 0@1.
	aTerniLapilliGame putXAt: 1@0.
	aTerniLapilliGame putOAt: 1@1.
	aTerniLapilliGame putXAt: 2@1.
	aTerniLapilliGame putOAt: 2@2.
	aTerniLapilliGame moveXFrom: 2@1 to: 2@0.
	
	self should: [aTerniLapilliGame moveOFrom: 2@2 to: 1@2.]
		raise: Error
		withExceptionDo: [ :anException | anException description = TerniLapilli gameIsOverDescription. ]
	! !

!testRun: #TerniLapilliTest #test01XPlaysFirst stamp: 'JEA 11/2/2020 12:56:49'!
PASSED!

!testRun: #TerniLapilliTest #test02XCanPlayItsTurn stamp: 'JEA 11/2/2020 12:56:49'!
PASSED!

!testRun: #TerniLapilliTest #test03OPlaysAfterX stamp: 'JEA 11/2/2020 12:56:49'!
PASSED!

!testRun: #TerniLapilliTest #test04OCanPlayItsTurn stamp: 'JEA 11/2/2020 12:56:49'!
PASSED!

!testRun: #TerniLapilliTest #test05XPlaysAfterO stamp: 'JEA 11/2/2020 12:56:49'!
PASSED!

!testRun: #TerniLapilliTest #test06XCantPlayOsTurn stamp: 'JEA 11/2/2020 12:56:49'!
PASSED!

!testRun: #TerniLapilliTest #test07OCantPlayXsTurn stamp: 'JEA 11/2/2020 12:56:49'!
PASSED!

!testRun: #TerniLapilliTest #test08PositionsDontOverlap stamp: 'JEA 11/2/2020 12:56:49'!
PASSED!

!testRun: #TerniLapilliTest #test09PositionsAreOccupied stamp: 'JEA 11/2/2020 12:56:49'!
PASSED!

!testRun: #TerniLapilliTest #test10OCantPlayInOccupiedPosition stamp: 'JEA 11/2/2020 12:56:49'!
PASSED!

!testRun: #TerniLapilliTest #test11XCantPlayInOccupiedPosition stamp: 'JEA 11/2/2020 12:56:49'!
PASSED!

!testRun: #TerniLapilliTest #test12XAndOAreAtEveryPositionPlayed stamp: 'JEA 11/2/2020 12:56:49'!
PASSED!

!testRun: #TerniLapilliTest #test13XCantPlayInInvalidPosition stamp: 'JEA 11/2/2020 12:56:49'!
PASSED!

!testRun: #TerniLapilliTest #test14OCantPlayInInvalidPosition stamp: 'JEA 11/2/2020 12:56:49'!
PASSED!

!testRun: #TerniLapilliTest #test15CantPlaceMoreThan3Chips stamp: 'JEA 11/2/2020 12:56:49'!
PASSED!

!testRun: #TerniLapilliTest #test16XCantMoveUntilAllChipsArePlaced stamp: 'JEA 11/2/2020 12:56:49'!
PASSED!

!testRun: #TerniLapilliTest #test17OCantMoveUntilAllChipsArePlaced stamp: 'JEA 11/2/2020 12:56:49'!
PASSED!

!testRun: #TerniLapilliTest #test18XCanMoveAfterAllChipsArePlaced stamp: 'JEA 11/2/2020 12:56:49'!
PASSED!

!testRun: #TerniLapilliTest #test19OCanMoveAfterAllChipsArePlaced stamp: 'JEA 11/2/2020 12:56:49'!
PASSED!

!testRun: #TerniLapilliTest #test20XCantMoveInOsTurn stamp: 'JEA 11/2/2020 12:56:49'!
PASSED!

!testRun: #TerniLapilliTest #test21OCantMoveInXsTurn stamp: 'JEA 11/2/2020 12:56:49'!
PASSED!

!testRun: #TerniLapilliTest #test22XCantMoveToOccupiedPosition stamp: 'JEA 11/2/2020 12:56:49'!
PASSED!

!testRun: #TerniLapilliTest #test23XCantMoveToInvalidPosition stamp: 'JEA 11/2/2020 12:56:49'!
PASSED!

!testRun: #TerniLapilliTest #test24XCantMoveToNotNeighborPosition stamp: 'JEA 11/2/2020 12:56:49'!
PASSED!

!testRun: #TerniLapilliTest #test25XCanWin stamp: 'JEA 11/2/2020 12:56:49'!
PASSED!

!testRun: #TerniLapilliTest #test26OCanWin stamp: 'JEA 11/2/2020 12:56:49'!
PASSED!

!testRun: #TerniLapilliTest #test27CantPlayAfterXWins stamp: 'JEA 11/2/2020 12:56:49'!
PASSED!

!testRun: #TerniLapilliTest #test28CantMoveAfterXWins stamp: 'JEA 11/2/2020 12:56:49'!
PASSED!

!testRun: #TerniLapilliTest #test28CantPlayAfterOWins stamp: 'JEA 11/2/2020 12:56:49'!
PASSED!

!testRun: #TerniLapilliTest #test29CantMoveAfterOWins stamp: 'JEA 11/2/2020 12:56:49'!
PASSED!

!methodRemoval: TerniLapilliTest #test28CantPlayAfterOWins stamp: 'JEA 11/2/2020 12:56:52'!
test28CantPlayAfterOWins
	| aTerniLapilliGame |

	aTerniLapilliGame := TerniLapilli new.
	aTerniLapilliGame putXAt: 0@0.
	aTerniLapilliGame putOAt: 0@1.
	aTerniLapilliGame putXAt: 1@0.
	aTerniLapilliGame putOAt: 1@1.
	aTerniLapilliGame putXAt: 2@2.
	aTerniLapilliGame putOAt: 2@1.
	self should: [aTerniLapilliGame putXAt: 2@0.]
		raise: Error
		withExceptionDo: [ :anException | anException description = TerniLapilli gameIsOverDescription. ]
	!

----SNAPSHOT----(2 November 2020 12:56:58) CuisUniversity-4384.image priorSource: 17556799!
!TerniLapilli methodsFor: 'testing' stamp: 'JEA 11/2/2020 13:00:19' prior: 50880801!
isOAt: aPosition

	^self chipsOPlayed includes: aPosition.! !

!testRun: #TerniLapilliTest #test01XPlaysFirst stamp: 'JEA 11/2/2020 13:00:20'!
PASSED!

!testRun: #TerniLapilliTest #test02XCanPlayItsTurn stamp: 'JEA 11/2/2020 13:00:20'!
PASSED!

!testRun: #TerniLapilliTest #test03OPlaysAfterX stamp: 'JEA 11/2/2020 13:00:20'!
PASSED!

!testRun: #TerniLapilliTest #test04OCanPlayItsTurn stamp: 'JEA 11/2/2020 13:00:20'!
PASSED!

!testRun: #TerniLapilliTest #test05XPlaysAfterO stamp: 'JEA 11/2/2020 13:00:20'!
PASSED!

!testRun: #TerniLapilliTest #test06XCantPlayOsTurn stamp: 'JEA 11/2/2020 13:00:20'!
PASSED!

!testRun: #TerniLapilliTest #test07OCantPlayXsTurn stamp: 'JEA 11/2/2020 13:00:20'!
PASSED!

!testRun: #TerniLapilliTest #test08PositionsDontOverlap stamp: 'JEA 11/2/2020 13:00:20'!
PASSED!

!testRun: #TerniLapilliTest #test09PositionsAreOccupied stamp: 'JEA 11/2/2020 13:00:20'!
PASSED!

!testRun: #TerniLapilliTest #test10OCantPlayInOccupiedPosition stamp: 'JEA 11/2/2020 13:00:20'!
PASSED!

!testRun: #TerniLapilliTest #test11XCantPlayInOccupiedPosition stamp: 'JEA 11/2/2020 13:00:20'!
PASSED!

!testRun: #TerniLapilliTest #test12XAndOAreAtEveryPositionPlayed stamp: 'JEA 11/2/2020 13:00:20'!
PASSED!

!testRun: #TerniLapilliTest #test13XCantPlayInInvalidPosition stamp: 'JEA 11/2/2020 13:00:20'!
PASSED!

!testRun: #TerniLapilliTest #test14OCantPlayInInvalidPosition stamp: 'JEA 11/2/2020 13:00:20'!
PASSED!

!testRun: #TerniLapilliTest #test15CantPlaceMoreThan3Chips stamp: 'JEA 11/2/2020 13:00:20'!
PASSED!

!testRun: #TerniLapilliTest #test16XCantMoveUntilAllChipsArePlaced stamp: 'JEA 11/2/2020 13:00:20'!
PASSED!

!testRun: #TerniLapilliTest #test17OCantMoveUntilAllChipsArePlaced stamp: 'JEA 11/2/2020 13:00:20'!
PASSED!

!testRun: #TerniLapilliTest #test18XCanMoveAfterAllChipsArePlaced stamp: 'JEA 11/2/2020 13:00:20'!
PASSED!

!testRun: #TerniLapilliTest #test19OCanMoveAfterAllChipsArePlaced stamp: 'JEA 11/2/2020 13:00:20'!
PASSED!

!testRun: #TerniLapilliTest #test20XCantMoveInOsTurn stamp: 'JEA 11/2/2020 13:00:20'!
PASSED!

!testRun: #TerniLapilliTest #test21OCantMoveInXsTurn stamp: 'JEA 11/2/2020 13:00:20'!
PASSED!

!testRun: #TerniLapilliTest #test22XCantMoveToOccupiedPosition stamp: 'JEA 11/2/2020 13:00:20'!
PASSED!

!testRun: #TerniLapilliTest #test23XCantMoveToInvalidPosition stamp: 'JEA 11/2/2020 13:00:20'!
PASSED!

!testRun: #TerniLapilliTest #test24XCantMoveToNotNeighborPosition stamp: 'JEA 11/2/2020 13:00:20'!
PASSED!

!testRun: #TerniLapilliTest #test25XCanWin stamp: 'JEA 11/2/2020 13:00:20'!
PASSED!

!testRun: #TerniLapilliTest #test26OCanWin stamp: 'JEA 11/2/2020 13:00:20'!
PASSED!

!testRun: #TerniLapilliTest #test27CantPlayAfterXWins stamp: 'JEA 11/2/2020 13:00:20'!
PASSED!

!testRun: #TerniLapilliTest #test28CantMoveAfterXWins stamp: 'JEA 11/2/2020 13:00:20'!
PASSED!

!testRun: #TerniLapilliTest #test29CantMoveAfterOWins stamp: 'JEA 11/2/2020 13:00:20'!
PASSED!
!TerniLapilli methodsFor: 'testing' stamp: 'JEA 11/2/2020 13:00:29' prior: 50880815!
isXAt: aPosition

	^self chipsXPlayed includes: aPosition.! !

!testRun: #TerniLapilliTest #test01XPlaysFirst stamp: 'JEA 11/2/2020 13:00:30'!
PASSED!

!testRun: #TerniLapilliTest #test02XCanPlayItsTurn stamp: 'JEA 11/2/2020 13:00:30'!
PASSED!

!testRun: #TerniLapilliTest #test03OPlaysAfterX stamp: 'JEA 11/2/2020 13:00:30'!
PASSED!

!testRun: #TerniLapilliTest #test04OCanPlayItsTurn stamp: 'JEA 11/2/2020 13:00:30'!
PASSED!

!testRun: #TerniLapilliTest #test05XPlaysAfterO stamp: 'JEA 11/2/2020 13:00:30'!
PASSED!

!testRun: #TerniLapilliTest #test06XCantPlayOsTurn stamp: 'JEA 11/2/2020 13:00:30'!
PASSED!

!testRun: #TerniLapilliTest #test07OCantPlayXsTurn stamp: 'JEA 11/2/2020 13:00:30'!
PASSED!

!testRun: #TerniLapilliTest #test08PositionsDontOverlap stamp: 'JEA 11/2/2020 13:00:30'!
PASSED!

!testRun: #TerniLapilliTest #test09PositionsAreOccupied stamp: 'JEA 11/2/2020 13:00:30'!
PASSED!

!testRun: #TerniLapilliTest #test10OCantPlayInOccupiedPosition stamp: 'JEA 11/2/2020 13:00:30'!
PASSED!

!testRun: #TerniLapilliTest #test11XCantPlayInOccupiedPosition stamp: 'JEA 11/2/2020 13:00:30'!
PASSED!

!testRun: #TerniLapilliTest #test12XAndOAreAtEveryPositionPlayed stamp: 'JEA 11/2/2020 13:00:30'!
PASSED!

!testRun: #TerniLapilliTest #test13XCantPlayInInvalidPosition stamp: 'JEA 11/2/2020 13:00:30'!
PASSED!

!testRun: #TerniLapilliTest #test14OCantPlayInInvalidPosition stamp: 'JEA 11/2/2020 13:00:30'!
PASSED!

!testRun: #TerniLapilliTest #test15CantPlaceMoreThan3Chips stamp: 'JEA 11/2/2020 13:00:30'!
PASSED!

!testRun: #TerniLapilliTest #test16XCantMoveUntilAllChipsArePlaced stamp: 'JEA 11/2/2020 13:00:30'!
PASSED!

!testRun: #TerniLapilliTest #test17OCantMoveUntilAllChipsArePlaced stamp: 'JEA 11/2/2020 13:00:30'!
PASSED!

!testRun: #TerniLapilliTest #test18XCanMoveAfterAllChipsArePlaced stamp: 'JEA 11/2/2020 13:00:30'!
PASSED!

!testRun: #TerniLapilliTest #test19OCanMoveAfterAllChipsArePlaced stamp: 'JEA 11/2/2020 13:00:30'!
PASSED!

!testRun: #TerniLapilliTest #test20XCantMoveInOsTurn stamp: 'JEA 11/2/2020 13:00:30'!
PASSED!

!testRun: #TerniLapilliTest #test21OCantMoveInXsTurn stamp: 'JEA 11/2/2020 13:00:30'!
PASSED!

!testRun: #TerniLapilliTest #test22XCantMoveToOccupiedPosition stamp: 'JEA 11/2/2020 13:00:30'!
PASSED!

!testRun: #TerniLapilliTest #test23XCantMoveToInvalidPosition stamp: 'JEA 11/2/2020 13:00:30'!
PASSED!

!testRun: #TerniLapilliTest #test24XCantMoveToNotNeighborPosition stamp: 'JEA 11/2/2020 13:00:30'!
PASSED!

!testRun: #TerniLapilliTest #test25XCanWin stamp: 'JEA 11/2/2020 13:00:30'!
PASSED!

!testRun: #TerniLapilliTest #test26OCanWin stamp: 'JEA 11/2/2020 13:00:30'!
PASSED!

!testRun: #TerniLapilliTest #test27CantPlayAfterXWins stamp: 'JEA 11/2/2020 13:00:30'!
PASSED!

!testRun: #TerniLapilliTest #test28CantMoveAfterXWins stamp: 'JEA 11/2/2020 13:00:30'!
PASSED!

!testRun: #TerniLapilliTest #test29CantMoveAfterOWins stamp: 'JEA 11/2/2020 13:00:30'!
PASSED!
!TerniLapilli class methodsFor: 'inquiries' stamp: 'JEA 11/2/2020 13:09:14'!
winningCombinations
	| positionsCollection |
	positionsCollection := OrderedCollection new.
	positionsCollection add: (OrderedCollection with: 0@0 with: 0@1 with: 0@2) sort.
	positionsCollection add: (OrderedCollection with: 1@0 with: 1@1 with: 1@2) sort.
	positionsCollection add: (OrderedCollection with: 2@0 with: 2@1 with: 2@2) sort.
	positionsCollection add: (OrderedCollection with: 0@0 with: 1@0 with: 2@0) sort.
	positionsCollection add: (OrderedCollection with: 0@1 with: 1@1 with: 2@1) sort.
	positionsCollection add: (OrderedCollection with: 0@2 with: 1@2 with: 2@2) sort.
	positionsCollection add: (OrderedCollection with: 0@0 with: 1@1 with: 2@2) sort.
	positionsCollection add: (OrderedCollection with: 0@2 with: 1@1 with: 2@0) sort.
	
	^positionsCollection.
	! !
!TerniLapilli methodsFor: 'as yet unclassified' stamp: 'JEA 11/2/2020 13:09:14' prior: 50880791!
hasOWon
	^ self class winningCombinations includes: (self chipsOPlayed sort).! !
!TerniLapilli methodsFor: 'as yet unclassified' stamp: 'JEA 11/2/2020 13:09:14' prior: 50880796!
hasXWon
	^ self class winningCombinations includes: (self chipsXPlayed sort).! !

!methodRemoval: TerniLapilli class #winningPositions stamp: 'JEA 11/2/2020 13:09:14'!
winningPositions
	| positionsCollection |
	positionsCollection := OrderedCollection new.
	positionsCollection add: (OrderedCollection with: 0@0 with: 0@1 with: 0@2) sort.
	positionsCollection add: (OrderedCollection with: 1@0 with: 1@1 with: 1@2) sort.
	positionsCollection add: (OrderedCollection with: 2@0 with: 2@1 with: 2@2) sort.
	positionsCollection add: (OrderedCollection with: 0@0 with: 1@0 with: 2@0) sort.
	positionsCollection add: (OrderedCollection with: 0@1 with: 1@1 with: 2@1) sort.
	positionsCollection add: (OrderedCollection with: 0@2 with: 1@2 with: 2@2) sort.
	positionsCollection add: (OrderedCollection with: 0@0 with: 1@1 with: 2@2) sort.
	positionsCollection add: (OrderedCollection with: 0@2 with: 1@1 with: 2@0) sort.
	
	^positionsCollection.
	!
!TerniLapilli methodsFor: 'testing' stamp: 'JEA 11/2/2020 13:16:14' prior: 50881572!
hasOWon
	^ self class winningCombinations includes: (self chipsOPlayed sort).! !
!TerniLapilli methodsFor: 'testing' stamp: 'JEA 11/2/2020 13:18:14' prior: 50881611!
hasOWon
	^ self class winningCombinations includes: (self chipsOPlayed sort).! !
!TerniLapilli methodsFor: 'testing' stamp: 'JEA 11/2/2020 13:19:14' prior: 50880777!
chipsOPlayed

	^((chips select: [ :aTerniLapilliChip | aTerniLapilliChip label = $O ]) 
		collect: [ :aTerniLapilliChip | aTerniLapilliChip position]) 
		sort.! !
!TerniLapilli methodsFor: 'testing' stamp: 'JEA 11/2/2020 13:19:28' prior: 50880784!
chipsXPlayed

	^((chips select: [ :aTerniLapilliChip | aTerniLapilliChip label = $X ])
		collect: [ :aTerniLapilliChip | aTerniLapilliChip position])
		sort.! !

!testRun: #TerniLapilliTest #test01XPlaysFirst stamp: 'JEA 11/2/2020 13:20:26'!
PASSED!

!testRun: #TerniLapilliTest #test02XCanPlayItsTurn stamp: 'JEA 11/2/2020 13:20:26'!
PASSED!

!testRun: #TerniLapilliTest #test03OPlaysAfterX stamp: 'JEA 11/2/2020 13:20:26'!
PASSED!

!testRun: #TerniLapilliTest #test04OCanPlayItsTurn stamp: 'JEA 11/2/2020 13:20:26'!
PASSED!

!testRun: #TerniLapilliTest #test05XPlaysAfterO stamp: 'JEA 11/2/2020 13:20:26'!
PASSED!

!testRun: #TerniLapilliTest #test06XCantPlayOsTurn stamp: 'JEA 11/2/2020 13:20:26'!
PASSED!

!testRun: #TerniLapilliTest #test07OCantPlayXsTurn stamp: 'JEA 11/2/2020 13:20:26'!
PASSED!

!testRun: #TerniLapilliTest #test08PositionsDontOverlap stamp: 'JEA 11/2/2020 13:20:26'!
PASSED!

!testRun: #TerniLapilliTest #test09PositionsAreOccupied stamp: 'JEA 11/2/2020 13:20:26'!
PASSED!

!testRun: #TerniLapilliTest #test10OCantPlayInOccupiedPosition stamp: 'JEA 11/2/2020 13:20:26'!
PASSED!

!testRun: #TerniLapilliTest #test11XCantPlayInOccupiedPosition stamp: 'JEA 11/2/2020 13:20:26'!
PASSED!

!testRun: #TerniLapilliTest #test12XAndOAreAtEveryPositionPlayed stamp: 'JEA 11/2/2020 13:20:26'!
PASSED!

!testRun: #TerniLapilliTest #test13XCantPlayInInvalidPosition stamp: 'JEA 11/2/2020 13:20:26'!
PASSED!

!testRun: #TerniLapilliTest #test14OCantPlayInInvalidPosition stamp: 'JEA 11/2/2020 13:20:26'!
PASSED!

!testRun: #TerniLapilliTest #test15CantPlaceMoreThan3Chips stamp: 'JEA 11/2/2020 13:20:26'!
PASSED!

!testRun: #TerniLapilliTest #test16XCantMoveUntilAllChipsArePlaced stamp: 'JEA 11/2/2020 13:20:26'!
PASSED!

!testRun: #TerniLapilliTest #test17OCantMoveUntilAllChipsArePlaced stamp: 'JEA 11/2/2020 13:20:26'!
PASSED!

!testRun: #TerniLapilliTest #test18XCanMoveAfterAllChipsArePlaced stamp: 'JEA 11/2/2020 13:20:26'!
PASSED!

!testRun: #TerniLapilliTest #test19OCanMoveAfterAllChipsArePlaced stamp: 'JEA 11/2/2020 13:20:26'!
PASSED!

!testRun: #TerniLapilliTest #test20XCantMoveInOsTurn stamp: 'JEA 11/2/2020 13:20:26'!
PASSED!

!testRun: #TerniLapilliTest #test21OCantMoveInXsTurn stamp: 'JEA 11/2/2020 13:20:26'!
PASSED!

!testRun: #TerniLapilliTest #test22XCantMoveToOccupiedPosition stamp: 'JEA 11/2/2020 13:20:26'!
PASSED!

!testRun: #TerniLapilliTest #test23XCantMoveToInvalidPosition stamp: 'JEA 11/2/2020 13:20:26'!
PASSED!

!testRun: #TerniLapilliTest #test24XCantMoveToNotNeighborPosition stamp: 'JEA 11/2/2020 13:20:26'!
PASSED!

!testRun: #TerniLapilliTest #test25XCanWin stamp: 'JEA 11/2/2020 13:20:26'!
PASSED!

!testRun: #TerniLapilliTest #test26OCanWin stamp: 'JEA 11/2/2020 13:20:26'!
PASSED!

!testRun: #TerniLapilliTest #test27CantPlayAfterXWins stamp: 'JEA 11/2/2020 13:20:26'!
PASSED!

!testRun: #TerniLapilliTest #test28CantMoveAfterXWins stamp: 'JEA 11/2/2020 13:20:26'!
PASSED!

!testRun: #TerniLapilliTest #test29CantMoveAfterOWins stamp: 'JEA 11/2/2020 13:20:26'!
PASSED!
!TerniLapilli methodsFor: 'testing' stamp: 'JEA 11/2/2020 13:20:40' prior: 50881617!
hasOWon
	^ self class winningCombinations includes: (self chipsOPlayed).! !
!TerniLapilli methodsFor: 'testing' stamp: 'JEA 11/2/2020 13:20:43' prior: 50881578!
hasXWon
	^ self class winningCombinations includes: (self chipsXPlayed).! !
!TerniLapilli methodsFor: 'testing' stamp: 'JEA 11/2/2020 13:21:33' prior: 50881623!
chipsOPlayed

	^((chips select: [ :aTerniLapilliChip | aTerniLapilliChip label = $O ]) 
		collect: [ :aTerniLapilliChip | aTerniLapilliChip position]).! !
!TerniLapilli methodsFor: 'testing' stamp: 'JEA 11/2/2020 13:21:38' prior: 50881631!
chipsXPlayed

	^((chips select: [ :aTerniLapilliChip | aTerniLapilliChip label = $X ])
		collect: [ :aTerniLapilliChip | aTerniLapilliChip position]).! !
!TerniLapilli class methodsFor: 'inquiries' stamp: 'JEA 11/2/2020 13:22:45'!
isWinningCombination: aChipCollection

	^self winningCombinations includes: aChipCollection sort.! !
!TerniLapilli methodsFor: 'testing' stamp: 'JEA 11/2/2020 13:23:06' prior: 50881735!
hasXWon
	^ self class isWinningCombination: (self chipsXPlayed).! !

!testRun: #TerniLapilliTest #test01XPlaysFirst stamp: 'JEA 11/2/2020 13:23:12'!
PASSED!

!testRun: #TerniLapilliTest #test02XCanPlayItsTurn stamp: 'JEA 11/2/2020 13:23:12'!
PASSED!

!testRun: #TerniLapilliTest #test03OPlaysAfterX stamp: 'JEA 11/2/2020 13:23:12'!
PASSED!

!testRun: #TerniLapilliTest #test04OCanPlayItsTurn stamp: 'JEA 11/2/2020 13:23:12'!
PASSED!

!testRun: #TerniLapilliTest #test05XPlaysAfterO stamp: 'JEA 11/2/2020 13:23:12'!
PASSED!

!testRun: #TerniLapilliTest #test06XCantPlayOsTurn stamp: 'JEA 11/2/2020 13:23:12'!
PASSED!

!testRun: #TerniLapilliTest #test07OCantPlayXsTurn stamp: 'JEA 11/2/2020 13:23:12'!
PASSED!

!testRun: #TerniLapilliTest #test08PositionsDontOverlap stamp: 'JEA 11/2/2020 13:23:12'!
PASSED!

!testRun: #TerniLapilliTest #test09PositionsAreOccupied stamp: 'JEA 11/2/2020 13:23:12'!
PASSED!

!testRun: #TerniLapilliTest #test10OCantPlayInOccupiedPosition stamp: 'JEA 11/2/2020 13:23:12'!
PASSED!

!testRun: #TerniLapilliTest #test11XCantPlayInOccupiedPosition stamp: 'JEA 11/2/2020 13:23:12'!
PASSED!

!testRun: #TerniLapilliTest #test12XAndOAreAtEveryPositionPlayed stamp: 'JEA 11/2/2020 13:23:12'!
PASSED!

!testRun: #TerniLapilliTest #test13XCantPlayInInvalidPosition stamp: 'JEA 11/2/2020 13:23:12'!
PASSED!

!testRun: #TerniLapilliTest #test14OCantPlayInInvalidPosition stamp: 'JEA 11/2/2020 13:23:12'!
PASSED!

!testRun: #TerniLapilliTest #test15CantPlaceMoreThan3Chips stamp: 'JEA 11/2/2020 13:23:12'!
PASSED!

!testRun: #TerniLapilliTest #test16XCantMoveUntilAllChipsArePlaced stamp: 'JEA 11/2/2020 13:23:12'!
PASSED!

!testRun: #TerniLapilliTest #test17OCantMoveUntilAllChipsArePlaced stamp: 'JEA 11/2/2020 13:23:12'!
PASSED!

!testRun: #TerniLapilliTest #test18XCanMoveAfterAllChipsArePlaced stamp: 'JEA 11/2/2020 13:23:12'!
PASSED!

!testRun: #TerniLapilliTest #test19OCanMoveAfterAllChipsArePlaced stamp: 'JEA 11/2/2020 13:23:12'!
PASSED!

!testRun: #TerniLapilliTest #test20XCantMoveInOsTurn stamp: 'JEA 11/2/2020 13:23:12'!
PASSED!

!testRun: #TerniLapilliTest #test21OCantMoveInXsTurn stamp: 'JEA 11/2/2020 13:23:12'!
PASSED!

!testRun: #TerniLapilliTest #test22XCantMoveToOccupiedPosition stamp: 'JEA 11/2/2020 13:23:12'!
PASSED!

!testRun: #TerniLapilliTest #test23XCantMoveToInvalidPosition stamp: 'JEA 11/2/2020 13:23:12'!
PASSED!

!testRun: #TerniLapilliTest #test24XCantMoveToNotNeighborPosition stamp: 'JEA 11/2/2020 13:23:12'!
PASSED!

!testRun: #TerniLapilliTest #test25XCanWin stamp: 'JEA 11/2/2020 13:23:12'!
PASSED!

!testRun: #TerniLapilliTest #test26OCanWin stamp: 'JEA 11/2/2020 13:23:12'!
PASSED!

!testRun: #TerniLapilliTest #test27CantPlayAfterXWins stamp: 'JEA 11/2/2020 13:23:12'!
PASSED!

!testRun: #TerniLapilliTest #test28CantMoveAfterXWins stamp: 'JEA 11/2/2020 13:23:12'!
PASSED!

!testRun: #TerniLapilliTest #test29CantMoveAfterOWins stamp: 'JEA 11/2/2020 13:23:12'!
PASSED!

Object subclass: #TerniLapilli
	instanceVariableNames: 'isXPlaying chips chipsXPlayed chipsOPlayed'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TerniLapilli'!

!classDefinition: #TerniLapilli category: 'TerniLapilli' stamp: 'JEA 11/2/2020 13:23:35'!
Object subclass: #TerniLapilli
	instanceVariableNames: 'isXPlaying chips chipsXPlayed chipsOPlayed'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TerniLapilli'!

----SNAPSHOT----(2 November 2020 13:24:42) CuisUniversity-4384.image priorSource: 17590432!

Object subclass: #TerniLapilli
	instanceVariableNames: 'isXPlaying chips'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TerniLapilli'!

!classDefinition: #TerniLapilli category: 'TerniLapilli' stamp: 'JEA 11/2/2020 13:24:56'!
Object subclass: #TerniLapilli
	instanceVariableNames: 'isXPlaying chips'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TerniLapilli'!

----SNAPSHOT----(2 November 2020 13:24:57) CuisUniversity-4384.image priorSource: 17607047!

Object subclass: #TerniLapilli
	instanceVariableNames: 'isXPlaying chips chipsXPlayed chipsOPlayed'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TerniLapilli'!

!classDefinition: #TerniLapilli category: 'TerniLapilli' stamp: 'JEA 11/2/2020 13:25:31'!
Object subclass: #TerniLapilli
	instanceVariableNames: 'isXPlaying chips chipsXPlayed chipsOPlayed'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TerniLapilli'!
!TerniLapilli methodsFor: 'initialization' stamp: 'JEA 11/2/2020 13:26:02' prior: 50880863 overrides: 16896425!
initialize

	chips := OrderedCollection new.
	chipsOPlayed := OrderedCollection new.
	chipsXPlayed := OrderedCollection new.
	isXPlaying := true.! !
!TerniLapilli methodsFor: 'initialization' stamp: 'JEA 11/2/2020 13:27:11' prior: 50881904 overrides: 16896425!
initialize

	chips := OrderedCollection new.
	chipsOPlayed := Set new.
	chipsXPlayed := Set new.
	isXPlaying := true.! !
!TerniLapilli methodsFor: 'initialization' stamp: 'JEA 11/2/2020 13:27:16' prior: 50881913 overrides: 16896425!
initialize

	chipsOPlayed := Set new.
	chipsXPlayed := Set new.
	isXPlaying := true.! !

Object subclass: #TerniLapilli
	instanceVariableNames: 'isXPlaying chipsXPlayed chipsOPlayed'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TerniLapilli'!

!classDefinition: #TerniLapilli category: 'TerniLapilli' stamp: 'JEA 11/2/2020 13:27:22'!
Object subclass: #TerniLapilli
	instanceVariableNames: 'isXPlaying chipsXPlayed chipsOPlayed'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TerniLapilli'!

!testRun: #TerniLapilliTest #test01XPlaysFirst stamp: 'JEA 11/2/2020 13:27:23'!
PASSED!

!testRun: #TerniLapilliTest #test02XCanPlayItsTurn stamp: 'JEA 11/2/2020 13:27:23'!
ERROR!

!testRun: #TerniLapilliTest #test03OPlaysAfterX stamp: 'JEA 11/2/2020 13:27:23'!
ERROR!

!testRun: #TerniLapilliTest #test04OCanPlayItsTurn stamp: 'JEA 11/2/2020 13:27:23'!
ERROR!

!testRun: #TerniLapilliTest #test05XPlaysAfterO stamp: 'JEA 11/2/2020 13:27:23'!
ERROR!

!testRun: #TerniLapilliTest #test06XCantPlayOsTurn stamp: 'JEA 11/2/2020 13:27:23'!
ERROR!

!testRun: #TerniLapilliTest #test07OCantPlayXsTurn stamp: 'JEA 11/2/2020 13:27:23'!
PASSED!

!testRun: #TerniLapilliTest #test08PositionsDontOverlap stamp: 'JEA 11/2/2020 13:27:23'!
ERROR!

!testRun: #TerniLapilliTest #test09PositionsAreOccupied stamp: 'JEA 11/2/2020 13:27:23'!
ERROR!

!testRun: #TerniLapilliTest #test10OCantPlayInOccupiedPosition stamp: 'JEA 11/2/2020 13:27:23'!
ERROR!

!testRun: #TerniLapilliTest #test11XCantPlayInOccupiedPosition stamp: 'JEA 11/2/2020 13:27:23'!
ERROR!

!testRun: #TerniLapilliTest #test12XAndOAreAtEveryPositionPlayed stamp: 'JEA 11/2/2020 13:27:23'!
ERROR!

!testRun: #TerniLapilliTest #test13XCantPlayInInvalidPosition stamp: 'JEA 11/2/2020 13:27:23'!
PASSED!

!testRun: #TerniLapilliTest #test14OCantPlayInInvalidPosition stamp: 'JEA 11/2/2020 13:27:23'!
ERROR!

!testRun: #TerniLapilliTest #test15CantPlaceMoreThan3Chips stamp: 'JEA 11/2/2020 13:27:23'!
ERROR!

!testRun: #TerniLapilliTest #test16XCantMoveUntilAllChipsArePlaced stamp: 'JEA 11/2/2020 13:27:23'!
ERROR!

!testRun: #TerniLapilliTest #test17OCantMoveUntilAllChipsArePlaced stamp: 'JEA 11/2/2020 13:27:23'!
ERROR!

!testRun: #TerniLapilliTest #test18XCanMoveAfterAllChipsArePlaced stamp: 'JEA 11/2/2020 13:27:23'!
ERROR!

!testRun: #TerniLapilliTest #test19OCanMoveAfterAllChipsArePlaced stamp: 'JEA 11/2/2020 13:27:23'!
ERROR!

!testRun: #TerniLapilliTest #test20XCantMoveInOsTurn stamp: 'JEA 11/2/2020 13:27:23'!
ERROR!

!testRun: #TerniLapilliTest #test21OCantMoveInXsTurn stamp: 'JEA 11/2/2020 13:27:23'!
ERROR!

!testRun: #TerniLapilliTest #test22XCantMoveToOccupiedPosition stamp: 'JEA 11/2/2020 13:27:23'!
ERROR!

!testRun: #TerniLapilliTest #test23XCantMoveToInvalidPosition stamp: 'JEA 11/2/2020 13:27:23'!
ERROR!

!testRun: #TerniLapilliTest #test24XCantMoveToNotNeighborPosition stamp: 'JEA 11/2/2020 13:27:23'!
ERROR!

!testRun: #TerniLapilliTest #test25XCanWin stamp: 'JEA 11/2/2020 13:27:23'!
ERROR!

!testRun: #TerniLapilliTest #test26OCanWin stamp: 'JEA 11/2/2020 13:27:23'!
ERROR!

!testRun: #TerniLapilliTest #test27CantPlayAfterXWins stamp: 'JEA 11/2/2020 13:27:23'!
ERROR!

!testRun: #TerniLapilliTest #test28CantMoveAfterXWins stamp: 'JEA 11/2/2020 13:27:23'!
ERROR!

!testRun: #TerniLapilliTest #test29CantMoveAfterOWins stamp: 'JEA 11/2/2020 13:27:23'!
ERROR!
!TerniLapilli methodsFor: 'testing' stamp: 'JEA 11/2/2020 13:27:37' prior: 50880769!
amountOfChipsOPlayed

	^chipsOPlayed size.! !
!TerniLapilli methodsFor: 'testing' stamp: 'JEA 11/2/2020 13:27:43' prior: 50880773!
amountOfChipsXPlayed

	^chipsXPlayed size.! !

!methodRemoval: TerniLapilli #chipsOPlayed stamp: 'JEA 11/2/2020 13:27:53'!
chipsOPlayed

	^((chips select: [ :aTerniLapilliChip | aTerniLapilliChip label = $O ]) 
		collect: [ :aTerniLapilliChip | aTerniLapilliChip position]).!

!methodRemoval: TerniLapilli #chipsXPlayed stamp: 'JEA 11/2/2020 13:27:55'!
chipsXPlayed

	^((chips select: [ :aTerniLapilliChip | aTerniLapilliChip label = $X ])
		collect: [ :aTerniLapilliChip | aTerniLapilliChip position]).!
!TerniLapilli methodsFor: 'testing' stamp: 'JEA 11/2/2020 13:28:03' prior: 50881729!
hasOWon
	^ self class winningCombinations includes: chipsOPlayed.! !
!TerniLapilli methodsFor: 'testing' stamp: 'JEA 11/2/2020 13:28:10' prior: 50881763!
hasXWon
	^ self class isWinningCombination: chipsXPlayed.! !
!TerniLapilli methodsFor: 'testing' stamp: 'JEA 11/2/2020 13:28:16' prior: 50882053!
hasOWon
	^ self class isWinningCombination: chipsOPlayed.! !
!TerniLapilli class methodsFor: 'inquiries' stamp: 'JEA 11/2/2020 13:28:38' prior: 50881757!
isWinningCombination: aChipCollection

	^self winningCombinations includes: aChipCollection.! !
!TerniLapilli class methodsFor: 'inquiries' stamp: 'JEA 11/2/2020 13:29:06' prior: 50881544!
winningCombinations
	| positionsCollection |
	positionsCollection := Set new.
	positionsCollection add: (Set with: 0@0 with: 0@1 with: 0@2).
	positionsCollection add: (Set with: 1@0 with: 1@1 with: 1@2).
	positionsCollection add: (Set with: 2@0 with: 2@1 with: 2@2).
	positionsCollection add: (Set with: 0@0 with: 1@0 with: 2@0).
	positionsCollection add: (Set with: 0@1 with: 1@1 with: 2@1).
	positionsCollection add: (Set with: 0@2 with: 1@2 with: 2@2).
	positionsCollection add: (Set with: 0@0 with: 1@1 with: 2@2).
	positionsCollection add: (Set with: 0@2 with: 1@1 with: 2@0).
	
	^positionsCollection.
	! !
!TerniLapilli class methodsFor: 'inquiries' stamp: 'JEA 11/2/2020 13:29:27' prior: 50882074!
winningCombinations
	| winningSets |
	winningSets := Set new.
	winningSets add: (Set with: 0@0 with: 0@1 with: 0@2).
	winningSets add: (Set with: 1@0 with: 1@1 with: 1@2).
	winningSets add: (Set with: 2@0 with: 2@1 with: 2@2).
	winningSets add: (Set with: 0@0 with: 1@0 with: 2@0).
	winningSets add: (Set with: 0@1 with: 1@1 with: 2@1).
	winningSets add: (Set with: 0@2 with: 1@2 with: 2@2).
	winningSets add: (Set with: 0@0 with: 1@1 with: 2@2).
	winningSets add: (Set with: 0@2 with: 1@1 with: 2@0).
	
	^winningSets.
	! !
!TerniLapilli methodsFor: 'testing' stamp: 'JEA 11/2/2020 13:29:41' prior: 50882063!
hasOWon

	^ self class isWinningCombination: chipsOPlayed.! !
!TerniLapilli methodsFor: 'testing' stamp: 'JEA 11/2/2020 13:29:44' prior: 50882058!
hasXWon

	^ self class isWinningCombination: chipsXPlayed.! !
!TerniLapilli methodsFor: 'testing' stamp: 'JEA 11/2/2020 13:29:49' prior: 50881355!
isOAt: aPosition

	^chipsOPlayed includes: aPosition.! !
!TerniLapilli methodsFor: 'testing' stamp: 'JEA 11/2/2020 13:30:10' prior: 50881450!
isXAt: aPosition

	^chipsXPlayed includes: aPosition.! !
!TerniLapilli methodsFor: 'playing' stamp: 'JEA 11/2/2020 13:34:09' prior: 50880842!
putOAt: aPosition
	
	isXPlaying ifTrue: [ self error: self class notYourTurnDescription. ].
		
	self isGameOver ifTrue: [ self error: self class gameIsOverDescription. ].

	(self class isValid: aPosition) ifFalse: [ self error: self class invalidPositionDescription. ].

	self amountOfChipsOPlayed < 3 
		ifTrue: [
			(self isOccupied: aPosition) ifTrue: [self error: self class positionOccupiedDescription. ].
			
			chipsOPlayed add: aPosition.
			isXPlaying := isXPlaying not.
		]
		ifFalse: [
			self error: self class noMoreChipsDescription.
		]! !
!TerniLapilli methodsFor: 'playing' stamp: 'JEA 11/2/2020 13:34:52' prior: 50882137!
putOAt: aPosition
	
	isXPlaying ifTrue: [ self error: self class notYourTurnDescription. ].
		
	self isGameOver ifTrue: [ self error: self class gameIsOverDescription. ].

	(self class isValid: aPosition) ifFalse: [ self error: self class invalidPositionDescription. ].

	self amountOfChipsOPlayed >= 3 ifTrue: [ self error: self class noMoreChipsDescription. ].
	
	(self isOccupied: aPosition) ifTrue: [self error: self class positionOccupiedDescription. ].
	
	chipsOPlayed add: aPosition.
	isXPlaying := isXPlaying not.
		! !
!TerniLapilli methodsFor: 'playing' stamp: 'JEA 11/2/2020 13:35:32' prior: 50880852!
putXAt: aPosition
	
	isXPlaying ifFalse: [ self error: self class notYourTurnDescription. ].
		
	self isGameOver ifTrue: [ self error: self class gameIsOverDescription. ].

	(self class isValid: aPosition) ifFalse: [ self error: self class invalidPositionDescription. ].

	self amountOfChipsXPlayed >= 3 ifTrue: [ self error: self class noMoreChipsDescription. ].
	
	(self isOccupied: aPosition) ifTrue: [self error: self class positionOccupiedDescription. ].
	
	chipsXPlayed add: aPosition.
	isXPlaying := isXPlaying not.! !

!testRun: #TerniLapilliTest #test01XPlaysFirst stamp: 'JEA 11/2/2020 13:35:34'!
PASSED!

!testRun: #TerniLapilliTest #test02XCanPlayItsTurn stamp: 'JEA 11/2/2020 13:35:34'!
PASSED!

!testRun: #TerniLapilliTest #test03OPlaysAfterX stamp: 'JEA 11/2/2020 13:35:34'!
PASSED!

!testRun: #TerniLapilliTest #test04OCanPlayItsTurn stamp: 'JEA 11/2/2020 13:35:34'!
PASSED!

!testRun: #TerniLapilliTest #test05XPlaysAfterO stamp: 'JEA 11/2/2020 13:35:34'!
PASSED!

!testRun: #TerniLapilliTest #test06XCantPlayOsTurn stamp: 'JEA 11/2/2020 13:35:34'!
PASSED!

!testRun: #TerniLapilliTest #test07OCantPlayXsTurn stamp: 'JEA 11/2/2020 13:35:34'!
PASSED!

!testRun: #TerniLapilliTest #test08PositionsDontOverlap stamp: 'JEA 11/2/2020 13:35:34'!
PASSED!

!testRun: #TerniLapilliTest #test09PositionsAreOccupied stamp: 'JEA 11/2/2020 13:35:34'!
PASSED!

!testRun: #TerniLapilliTest #test10OCantPlayInOccupiedPosition stamp: 'JEA 11/2/2020 13:35:34'!
PASSED!

!testRun: #TerniLapilliTest #test11XCantPlayInOccupiedPosition stamp: 'JEA 11/2/2020 13:35:34'!
PASSED!

!testRun: #TerniLapilliTest #test12XAndOAreAtEveryPositionPlayed stamp: 'JEA 11/2/2020 13:35:34'!
PASSED!

!testRun: #TerniLapilliTest #test13XCantPlayInInvalidPosition stamp: 'JEA 11/2/2020 13:35:34'!
PASSED!

!testRun: #TerniLapilliTest #test14OCantPlayInInvalidPosition stamp: 'JEA 11/2/2020 13:35:34'!
PASSED!

!testRun: #TerniLapilliTest #test15CantPlaceMoreThan3Chips stamp: 'JEA 11/2/2020 13:35:34'!
PASSED!

!testRun: #TerniLapilliTest #test16XCantMoveUntilAllChipsArePlaced stamp: 'JEA 11/2/2020 13:35:34'!
FAILURE!

!testRun: #TerniLapilliTest #test17OCantMoveUntilAllChipsArePlaced stamp: 'JEA 11/2/2020 13:35:34'!
FAILURE!

!testRun: #TerniLapilliTest #test18XCanMoveAfterAllChipsArePlaced stamp: 'JEA 11/2/2020 13:35:34'!
ERROR!

!testRun: #TerniLapilliTest #test19OCanMoveAfterAllChipsArePlaced stamp: 'JEA 11/2/2020 13:35:34'!
ERROR!

!testRun: #TerniLapilliTest #test20XCantMoveInOsTurn stamp: 'JEA 11/2/2020 13:35:34'!
ERROR!

!testRun: #TerniLapilliTest #test21OCantMoveInXsTurn stamp: 'JEA 11/2/2020 13:35:34'!
PASSED!

!testRun: #TerniLapilliTest #test22XCantMoveToOccupiedPosition stamp: 'JEA 11/2/2020 13:35:34'!
PASSED!

!testRun: #TerniLapilliTest #test23XCantMoveToInvalidPosition stamp: 'JEA 11/2/2020 13:35:34'!
PASSED!

!testRun: #TerniLapilliTest #test24XCantMoveToNotNeighborPosition stamp: 'JEA 11/2/2020 13:35:34'!
PASSED!

!testRun: #TerniLapilliTest #test25XCanWin stamp: 'JEA 11/2/2020 13:35:34'!
PASSED!

!testRun: #TerniLapilliTest #test26OCanWin stamp: 'JEA 11/2/2020 13:35:34'!
PASSED!

!testRun: #TerniLapilliTest #test27CantPlayAfterXWins stamp: 'JEA 11/2/2020 13:35:34'!
PASSED!

!testRun: #TerniLapilliTest #test28CantMoveAfterXWins stamp: 'JEA 11/2/2020 13:35:34'!
ERROR!

!testRun: #TerniLapilliTest #test29CantMoveAfterOWins stamp: 'JEA 11/2/2020 13:35:34'!
PASSED!
!TerniLapilli methodsFor: 'playing - private' stamp: 'JEA 11/2/2020 13:37:32' prior: 50880897!
put: aTerniLapilliChip
	"| position |
	position := aTerniLapilliChip position.

	(self class isValid: position) ifFalse: [ self error: self class invalidPositionDescription. ].

	chips size < 6 
		ifTrue: [
			(self isOccupied: position) ifTrue: [self error: self class positionOccupiedDescription. ].
			
			chips add: aTerniLapilliChip.
			isXPlaying := isXPlaying not.
		]
		ifFalse: [
			self error: self class noMoreChipsDescription.
		]"! !

!testRun: #TerniLapilliTest #test01XPlaysFirst stamp: 'JEA 11/2/2020 13:37:33'!
PASSED!

!testRun: #TerniLapilliTest #test02XCanPlayItsTurn stamp: 'JEA 11/2/2020 13:37:33'!
PASSED!

!testRun: #TerniLapilliTest #test03OPlaysAfterX stamp: 'JEA 11/2/2020 13:37:33'!
PASSED!

!testRun: #TerniLapilliTest #test04OCanPlayItsTurn stamp: 'JEA 11/2/2020 13:37:33'!
PASSED!

!testRun: #TerniLapilliTest #test05XPlaysAfterO stamp: 'JEA 11/2/2020 13:37:33'!
PASSED!

!testRun: #TerniLapilliTest #test06XCantPlayOsTurn stamp: 'JEA 11/2/2020 13:37:33'!
PASSED!

!testRun: #TerniLapilliTest #test07OCantPlayXsTurn stamp: 'JEA 11/2/2020 13:37:33'!
PASSED!

!testRun: #TerniLapilliTest #test08PositionsDontOverlap stamp: 'JEA 11/2/2020 13:37:33'!
PASSED!

!testRun: #TerniLapilliTest #test09PositionsAreOccupied stamp: 'JEA 11/2/2020 13:37:33'!
PASSED!

!testRun: #TerniLapilliTest #test10OCantPlayInOccupiedPosition stamp: 'JEA 11/2/2020 13:37:33'!
PASSED!

!testRun: #TerniLapilliTest #test11XCantPlayInOccupiedPosition stamp: 'JEA 11/2/2020 13:37:33'!
PASSED!

!testRun: #TerniLapilliTest #test12XAndOAreAtEveryPositionPlayed stamp: 'JEA 11/2/2020 13:37:33'!
PASSED!

!testRun: #TerniLapilliTest #test13XCantPlayInInvalidPosition stamp: 'JEA 11/2/2020 13:37:33'!
PASSED!

!testRun: #TerniLapilliTest #test14OCantPlayInInvalidPosition stamp: 'JEA 11/2/2020 13:37:33'!
PASSED!

!testRun: #TerniLapilliTest #test15CantPlaceMoreThan3Chips stamp: 'JEA 11/2/2020 13:37:33'!
PASSED!

!testRun: #TerniLapilliTest #test16XCantMoveUntilAllChipsArePlaced stamp: 'JEA 11/2/2020 13:37:33'!
FAILURE!

!testRun: #TerniLapilliTest #test17OCantMoveUntilAllChipsArePlaced stamp: 'JEA 11/2/2020 13:37:33'!
FAILURE!

!testRun: #TerniLapilliTest #test18XCanMoveAfterAllChipsArePlaced stamp: 'JEA 11/2/2020 13:37:33'!
ERROR!

!testRun: #TerniLapilliTest #test19OCanMoveAfterAllChipsArePlaced stamp: 'JEA 11/2/2020 13:37:33'!
ERROR!

!testRun: #TerniLapilliTest #test20XCantMoveInOsTurn stamp: 'JEA 11/2/2020 13:37:33'!
ERROR!

!testRun: #TerniLapilliTest #test21OCantMoveInXsTurn stamp: 'JEA 11/2/2020 13:37:33'!
PASSED!

!testRun: #TerniLapilliTest #test22XCantMoveToOccupiedPosition stamp: 'JEA 11/2/2020 13:37:33'!
PASSED!

!testRun: #TerniLapilliTest #test23XCantMoveToInvalidPosition stamp: 'JEA 11/2/2020 13:37:33'!
PASSED!

!testRun: #TerniLapilliTest #test24XCantMoveToNotNeighborPosition stamp: 'JEA 11/2/2020 13:37:33'!
PASSED!

!testRun: #TerniLapilliTest #test25XCanWin stamp: 'JEA 11/2/2020 13:37:33'!
PASSED!

!testRun: #TerniLapilliTest #test26OCanWin stamp: 'JEA 11/2/2020 13:37:33'!
PASSED!

!testRun: #TerniLapilliTest #test27CantPlayAfterXWins stamp: 'JEA 11/2/2020 13:37:33'!
PASSED!

!testRun: #TerniLapilliTest #test28CantMoveAfterXWins stamp: 'JEA 11/2/2020 13:37:33'!
ERROR!

!testRun: #TerniLapilliTest #test29CantMoveAfterOWins stamp: 'JEA 11/2/2020 13:37:33'!
PASSED!

!methodRemoval: TerniLapilli #put: stamp: 'JEA 11/2/2020 13:37:40'!
put: aTerniLapilliChip
	"| position |
	position := aTerniLapilliChip position.

	(self class isValid: position) ifFalse: [ self error: self class invalidPositionDescription. ].

	chips size < 6 
		ifTrue: [
			(self isOccupied: position) ifTrue: [self error: self class positionOccupiedDescription. ].
			
			chips add: aTerniLapilliChip.
			isXPlaying := isXPlaying not.
		]
		ifFalse: [
			self error: self class noMoreChipsDescription.
		]"!
!TerniLapilli methodsFor: 'playing' stamp: 'JEA 11/2/2020 13:38:55' prior: 50880824!
moveOFrom: currentPosition to: newPosition
	
	isXPlaying ifTrue: [ self error: self class notYourTurnDescription. ].

	self isGameOver ifTrue: [self error: self class gameIsOverDescription.].
	
	(self isOccupied: newPosition) ifTrue: [self error: self class positionOccupiedDescription].
	"
	((aTerniLapilliChip position eightNeighbors includes: newPosition) not ) ifTrue: [self error: self class cantMoveToNotNeighborPositionDescription.].
	
	(self class isValid: newPosition) ifFalse: [ self error: self class invalidPositionDescription. ].

	chips size < 6
		ifTrue: [
			self error: self class cantMoveYetDescription.
		]
		ifFalse: [
			chips remove: aTerniLapilliChip.
			chips add: (aTerniLapilliChip moveTo: newPosition).
			
			isXPlaying := isXPlaying not.
		]."! !
!TerniLapilli methodsFor: 'playing' stamp: 'JEA 11/2/2020 13:39:12' prior: 50882409!
moveOFrom: currentPosition to: newPosition
	
	isXPlaying ifTrue: [ self error: self class notYourTurnDescription. ].

	self isGameOver ifTrue: [self error: self class gameIsOverDescription.].
	
	(self class isValid: newPosition) ifFalse: [ self error: self class invalidPositionDescription. ].
	
	(self isOccupied: newPosition) ifTrue: [self error: self class positionOccupiedDescription].
	"
	((aTerniLapilliChip position eightNeighbors includes: newPosition) not ) ifTrue: [self error: self class cantMoveToNotNeighborPositionDescription.].

	chips size < 6
		ifTrue: [
			self error: self class cantMoveYetDescription.
		]
		ifFalse: [
			chips remove: aTerniLapilliChip.
			chips add: (aTerniLapilliChip moveTo: newPosition).
			
			isXPlaying := isXPlaying not.
		]."! !
!TerniLapilli methodsFor: 'playing' stamp: 'JEA 11/2/2020 13:39:22' prior: 50882436!
moveOFrom: currentPosition to: newPosition
	
	isXPlaying ifTrue: [ self error: self class notYourTurnDescription. ].

	self isGameOver ifTrue: [self error: self class gameIsOverDescription.].
	
	(self class isValid: newPosition) ifFalse: [ self error: self class invalidPositionDescription. ].
	
	(self isOccupied: newPosition) ifTrue: [ self error: self class positionOccupiedDescription ].
	"
	((aTerniLapilliChip position eightNeighbors includes: newPosition) not ) ifTrue: [self error: self class cantMoveToNotNeighborPositionDescription.].

	chips size < 6
		ifTrue: [
			self error: self class cantMoveYetDescription.
		]
		ifFalse: [
			chips remove: aTerniLapilliChip.
			chips add: (aTerniLapilliChip moveTo: newPosition).
			
			isXPlaying := isXPlaying not.
		]."! !
!TerniLapilli methodsFor: 'playing' stamp: 'JEA 11/2/2020 13:39:33' prior: 50882157!
putOAt: aPosition
	
	isXPlaying ifTrue: [ self error: self class notYourTurnDescription. ].
		
	self isGameOver ifTrue: [ self error: self class gameIsOverDescription. ].
	
	self amountOfChipsOPlayed >= 3 ifTrue: [ self error: self class noMoreChipsDescription. ].

	(self class isValid: aPosition) ifFalse: [ self error: self class invalidPositionDescription. ].
	
	(self isOccupied: aPosition) ifTrue: [self error: self class positionOccupiedDescription. ].
	
	chipsOPlayed add: aPosition.
	isXPlaying := isXPlaying not.
		! !
!TerniLapilli methodsFor: 'playing' stamp: 'JEA 11/2/2020 13:43:15' prior: 50882463!
moveOFrom: currentPosition to: newPosition

	self isGameOver ifTrue: [self error: self class gameIsOverDescription.].

	isXPlaying ifTrue: [ self error: self class notYourTurnDescription. ].

	self amountOfChipsOPlayed < 3 ifTrue: [ self error: self class cantMoveYetDescription. ].

	(self class isValid: newPosition) ifFalse: [ self error: self class invalidPositionDescription. ].

	(self isOccupied: newPosition) ifTrue: [ self error: self class positionOccupiedDescription ].

	(currentPosition eightNeighbors includes: newPosition)
		ifFalse: [ self error: self class cantMoveToNotNeighborPositionDescription. ].
		
	chipsOPlayed remove: currentPosition.
	chipsOPlayed add: newPosition.
	
	isXPlaying := isXPlaying not.! !
!TerniLapilli methodsFor: 'playing' stamp: 'JEA 11/2/2020 13:43:19' prior: 50882510!
moveOFrom: currentPosition to: newPosition

	self isGameOver ifTrue: [self error: self class gameIsOverDescription.].

	isXPlaying ifTrue: [ self error: self class notYourTurnDescription. ].

	self amountOfChipsOPlayed < 3 ifTrue: [ self error: self class cantMoveYetDescription. ].

	(self class isValid: newPosition) ifFalse: [ self error: self class invalidPositionDescription. ].

	(self isOccupied: newPosition) ifTrue: [ self error: self class positionOccupiedDescription ].

	(currentPosition eightNeighbors includes: newPosition)
		ifFalse: [ self error: self class cantMoveToNotNeighborPositionDescription. ].
		
	chipsOPlayed remove: currentPosition.
	chipsOPlayed add: newPosition.
	isXPlaying := isXPlaying not.! !
!TerniLapilli methodsFor: 'playing' stamp: 'JEA 11/2/2020 13:43:48' prior: 50880833!
moveXFrom: currentPosition to: newPosition

	self isGameOver ifTrue: [self error: self class gameIsOverDescription.].

	isXPlaying ifFalse: [ self error: self class notYourTurnDescription. ].

	self amountOfChipsXPlayed < 3 ifTrue: [ self error: self class cantMoveYetDescription. ].

	(self class isValid: newPosition) ifFalse: [ self error: self class invalidPositionDescription. ].

	(self isOccupied: newPosition) ifTrue: [ self error: self class positionOccupiedDescription ].

	(currentPosition eightNeighbors includes: newPosition)
		ifFalse: [ self error: self class cantMoveToNotNeighborPositionDescription. ].
		
	chipsOPlayed remove: currentPosition.
	chipsOPlayed add: newPosition.
	isXPlaying := isXPlaying not.! !
!TerniLapilli methodsFor: 'playing' stamp: 'JEA 11/2/2020 13:43:53' prior: 50882562!
moveXFrom: currentPosition to: newPosition

	self isGameOver ifTrue: [ self error: self class gameIsOverDescription. ].

	isXPlaying ifFalse: [ self error: self class notYourTurnDescription. ].

	self amountOfChipsXPlayed < 3 ifTrue: [ self error: self class cantMoveYetDescription. ].

	(self class isValid: newPosition) ifFalse: [ self error: self class invalidPositionDescription. ].

	(self isOccupied: newPosition) ifTrue: [ self error: self class positionOccupiedDescription ].

	(currentPosition eightNeighbors includes: newPosition)
		ifFalse: [ self error: self class cantMoveToNotNeighborPositionDescription. ].
		
	chipsOPlayed remove: currentPosition.
	chipsOPlayed add: newPosition.
	isXPlaying := isXPlaying not.! !
!TerniLapilli methodsFor: 'playing' stamp: 'JEA 11/2/2020 13:44:00' prior: 50882536!
moveOFrom: currentPosition to: newPosition

	self isGameOver ifTrue: [ self error: self class gameIsOverDescription. ].

	isXPlaying ifTrue: [ self error: self class notYourTurnDescription. ].

	self amountOfChipsOPlayed < 3 ifTrue: [ self error: self class cantMoveYetDescription. ].

	(self class isValid: newPosition) ifFalse: [ self error: self class invalidPositionDescription. ].

	(self isOccupied: newPosition) ifTrue: [ self error: self class positionOccupiedDescription ].

	(currentPosition eightNeighbors includes: newPosition)
		ifFalse: [ self error: self class cantMoveToNotNeighborPositionDescription. ].
		
	chipsOPlayed remove: currentPosition.
	chipsOPlayed add: newPosition.
	isXPlaying := isXPlaying not.! !
!TerniLapilli methodsFor: 'playing' stamp: 'JEA 11/2/2020 13:44:19' prior: 50882588!
moveXFrom: currentPosition to: newPosition

	self isGameOver ifTrue: [ self error: self class gameIsOverDescription. ].

	isXPlaying ifFalse: [ self error: self class notYourTurnDescription. ].

	self amountOfChipsXPlayed < 3 ifTrue: [ self error: self class cantMoveYetDescription. ].

	(self class isValid: newPosition) ifFalse: [ self error: self class invalidPositionDescription. ].

	(self isOccupied: newPosition) ifTrue: [ self error: self class positionOccupiedDescription ].

	(currentPosition eightNeighbors includes: newPosition)
		ifFalse: [ self error: self class cantMoveToNotNeighborPositionDescription. ].
		
	chipsXPlayed remove: currentPosition.
	chipsXPlayed add: newPosition.
	isXPlaying := isXPlaying not.! !

!testRun: #TerniLapilliTest #test01XPlaysFirst stamp: 'JEA 11/2/2020 13:44:20'!
PASSED!

!testRun: #TerniLapilliTest #test02XCanPlayItsTurn stamp: 'JEA 11/2/2020 13:44:20'!
PASSED!

!testRun: #TerniLapilliTest #test03OPlaysAfterX stamp: 'JEA 11/2/2020 13:44:20'!
PASSED!

!testRun: #TerniLapilliTest #test04OCanPlayItsTurn stamp: 'JEA 11/2/2020 13:44:20'!
PASSED!

!testRun: #TerniLapilliTest #test05XPlaysAfterO stamp: 'JEA 11/2/2020 13:44:20'!
PASSED!

!testRun: #TerniLapilliTest #test06XCantPlayOsTurn stamp: 'JEA 11/2/2020 13:44:20'!
PASSED!

!testRun: #TerniLapilliTest #test07OCantPlayXsTurn stamp: 'JEA 11/2/2020 13:44:20'!
PASSED!

!testRun: #TerniLapilliTest #test08PositionsDontOverlap stamp: 'JEA 11/2/2020 13:44:20'!
PASSED!

!testRun: #TerniLapilliTest #test09PositionsAreOccupied stamp: 'JEA 11/2/2020 13:44:20'!
PASSED!

!testRun: #TerniLapilliTest #test10OCantPlayInOccupiedPosition stamp: 'JEA 11/2/2020 13:44:20'!
PASSED!

!testRun: #TerniLapilliTest #test11XCantPlayInOccupiedPosition stamp: 'JEA 11/2/2020 13:44:20'!
PASSED!

!testRun: #TerniLapilliTest #test12XAndOAreAtEveryPositionPlayed stamp: 'JEA 11/2/2020 13:44:20'!
PASSED!

!testRun: #TerniLapilliTest #test13XCantPlayInInvalidPosition stamp: 'JEA 11/2/2020 13:44:20'!
PASSED!

!testRun: #TerniLapilliTest #test14OCantPlayInInvalidPosition stamp: 'JEA 11/2/2020 13:44:20'!
PASSED!

!testRun: #TerniLapilliTest #test15CantPlaceMoreThan3Chips stamp: 'JEA 11/2/2020 13:44:20'!
PASSED!

!testRun: #TerniLapilliTest #test16XCantMoveUntilAllChipsArePlaced stamp: 'JEA 11/2/2020 13:44:20'!
PASSED!

!testRun: #TerniLapilliTest #test17OCantMoveUntilAllChipsArePlaced stamp: 'JEA 11/2/2020 13:44:20'!
PASSED!

!testRun: #TerniLapilliTest #test18XCanMoveAfterAllChipsArePlaced stamp: 'JEA 11/2/2020 13:44:20'!
PASSED!

!testRun: #TerniLapilliTest #test19OCanMoveAfterAllChipsArePlaced stamp: 'JEA 11/2/2020 13:44:20'!
PASSED!

!testRun: #TerniLapilliTest #test20XCantMoveInOsTurn stamp: 'JEA 11/2/2020 13:44:20'!
PASSED!

!testRun: #TerniLapilliTest #test21OCantMoveInXsTurn stamp: 'JEA 11/2/2020 13:44:20'!
PASSED!

!testRun: #TerniLapilliTest #test22XCantMoveToOccupiedPosition stamp: 'JEA 11/2/2020 13:44:20'!
PASSED!

!testRun: #TerniLapilliTest #test23XCantMoveToInvalidPosition stamp: 'JEA 11/2/2020 13:44:20'!
PASSED!

!testRun: #TerniLapilliTest #test24XCantMoveToNotNeighborPosition stamp: 'JEA 11/2/2020 13:44:20'!
PASSED!

!testRun: #TerniLapilliTest #test25XCanWin stamp: 'JEA 11/2/2020 13:44:20'!
PASSED!

!testRun: #TerniLapilliTest #test26OCanWin stamp: 'JEA 11/2/2020 13:44:20'!
PASSED!

!testRun: #TerniLapilliTest #test27CantPlayAfterXWins stamp: 'JEA 11/2/2020 13:44:20'!
PASSED!

!testRun: #TerniLapilliTest #test28CantMoveAfterXWins stamp: 'JEA 11/2/2020 13:44:20'!
PASSED!

!testRun: #TerniLapilliTest #test29CantMoveAfterOWins stamp: 'JEA 11/2/2020 13:44:20'!
PASSED!

!methodRemoval: TerniLapilli #move:to: stamp: 'JEA 11/2/2020 13:44:29'!
move: aTerniLapilliChip to: newPosition
	
	self isGameOver ifTrue: [self error: self class gameIsOverDescription.].
	
	(self isOccupied: newPosition) ifTrue: [self error: self class positionOccupiedDescription].
	
	((aTerniLapilliChip position eightNeighbors includes: newPosition) not ) ifTrue: [self error: self class cantMoveToNotNeighborPositionDescription.].
	
	(self class isValid: newPosition) ifFalse: [ self error: self class invalidPositionDescription. ].

	chips size < 6
		ifTrue: [
			self error: self class cantMoveYetDescription.
		]
		ifFalse: [
			chips remove: aTerniLapilliChip.
			chips add: (aTerniLapilliChip moveTo: newPosition).
			
			isXPlaying := isXPlaying not.
		].!

!classRemoval: #OChip stamp: 'JEA 11/2/2020 13:44:49'!
TerniLapilliChip subclass: #OChip
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TerniLapilli'!

!classRemoval: #XChip stamp: 'JEA 11/2/2020 13:44:49'!
TerniLapilliChip subclass: #XChip
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TerniLapilli'!

!classRemoval: #TerniLapilliChip stamp: 'JEA 11/2/2020 13:44:50'!
Object subclass: #TerniLapilliChip
	instanceVariableNames: 'label position'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TerniLapilli'!

!testRun: #TerniLapilliTest #test01XPlaysFirst stamp: 'JEA 11/2/2020 13:44:52'!
PASSED!

!testRun: #TerniLapilliTest #test02XCanPlayItsTurn stamp: 'JEA 11/2/2020 13:44:52'!
PASSED!

!testRun: #TerniLapilliTest #test03OPlaysAfterX stamp: 'JEA 11/2/2020 13:44:52'!
PASSED!

!testRun: #TerniLapilliTest #test04OCanPlayItsTurn stamp: 'JEA 11/2/2020 13:44:52'!
PASSED!

!testRun: #TerniLapilliTest #test05XPlaysAfterO stamp: 'JEA 11/2/2020 13:44:52'!
PASSED!

!testRun: #TerniLapilliTest #test06XCantPlayOsTurn stamp: 'JEA 11/2/2020 13:44:52'!
PASSED!

!testRun: #TerniLapilliTest #test07OCantPlayXsTurn stamp: 'JEA 11/2/2020 13:44:52'!
PASSED!

!testRun: #TerniLapilliTest #test08PositionsDontOverlap stamp: 'JEA 11/2/2020 13:44:52'!
PASSED!

!testRun: #TerniLapilliTest #test09PositionsAreOccupied stamp: 'JEA 11/2/2020 13:44:52'!
PASSED!

!testRun: #TerniLapilliTest #test10OCantPlayInOccupiedPosition stamp: 'JEA 11/2/2020 13:44:52'!
PASSED!

!testRun: #TerniLapilliTest #test11XCantPlayInOccupiedPosition stamp: 'JEA 11/2/2020 13:44:52'!
PASSED!

!testRun: #TerniLapilliTest #test12XAndOAreAtEveryPositionPlayed stamp: 'JEA 11/2/2020 13:44:52'!
PASSED!

!testRun: #TerniLapilliTest #test13XCantPlayInInvalidPosition stamp: 'JEA 11/2/2020 13:44:52'!
PASSED!

!testRun: #TerniLapilliTest #test14OCantPlayInInvalidPosition stamp: 'JEA 11/2/2020 13:44:52'!
PASSED!

!testRun: #TerniLapilliTest #test15CantPlaceMoreThan3Chips stamp: 'JEA 11/2/2020 13:44:52'!
PASSED!

!testRun: #TerniLapilliTest #test16XCantMoveUntilAllChipsArePlaced stamp: 'JEA 11/2/2020 13:44:52'!
PASSED!

!testRun: #TerniLapilliTest #test17OCantMoveUntilAllChipsArePlaced stamp: 'JEA 11/2/2020 13:44:52'!
PASSED!

!testRun: #TerniLapilliTest #test18XCanMoveAfterAllChipsArePlaced stamp: 'JEA 11/2/2020 13:44:52'!
PASSED!

!testRun: #TerniLapilliTest #test19OCanMoveAfterAllChipsArePlaced stamp: 'JEA 11/2/2020 13:44:52'!
PASSED!

!testRun: #TerniLapilliTest #test20XCantMoveInOsTurn stamp: 'JEA 11/2/2020 13:44:52'!
PASSED!

!testRun: #TerniLapilliTest #test21OCantMoveInXsTurn stamp: 'JEA 11/2/2020 13:44:52'!
PASSED!

!testRun: #TerniLapilliTest #test22XCantMoveToOccupiedPosition stamp: 'JEA 11/2/2020 13:44:52'!
PASSED!

!testRun: #TerniLapilliTest #test23XCantMoveToInvalidPosition stamp: 'JEA 11/2/2020 13:44:52'!
PASSED!

!testRun: #TerniLapilliTest #test24XCantMoveToNotNeighborPosition stamp: 'JEA 11/2/2020 13:44:52'!
PASSED!

!testRun: #TerniLapilliTest #test25XCanWin stamp: 'JEA 11/2/2020 13:44:52'!
PASSED!

!testRun: #TerniLapilliTest #test26OCanWin stamp: 'JEA 11/2/2020 13:44:52'!
PASSED!

!testRun: #TerniLapilliTest #test27CantPlayAfterXWins stamp: 'JEA 11/2/2020 13:44:52'!
PASSED!

!testRun: #TerniLapilliTest #test28CantMoveAfterXWins stamp: 'JEA 11/2/2020 13:44:52'!
PASSED!

!testRun: #TerniLapilliTest #test29CantMoveAfterOWins stamp: 'JEA 11/2/2020 13:44:52'!
PASSED!
!TerniLapilli methodsFor: 'playing' stamp: 'JEA 11/2/2020 13:45:45' prior: 50882490!
putOAt: aPosition
	
	self isGameOver ifTrue: [ self error: self class gameIsOverDescription. ].

	isXPlaying ifTrue: [ self error: self class notYourTurnDescription. ].
	
	self amountOfChipsOPlayed >= 3 ifTrue: [ self error: self class noMoreChipsDescription. ].

	(self class isValid: aPosition) ifFalse: [ self error: self class invalidPositionDescription. ].
	
	(self isOccupied: aPosition) ifTrue: [self error: self class positionOccupiedDescription. ].
	
	chipsOPlayed add: aPosition.
	isXPlaying := isXPlaying not.
		! !
!TerniLapilli methodsFor: 'playing' stamp: 'JEA 11/2/2020 13:45:52' prior: 50882177!
putXAt: aPosition
		
	self isGameOver ifTrue: [ self error: self class gameIsOverDescription. ].
	
	isXPlaying ifFalse: [ self error: self class notYourTurnDescription. ].

	(self class isValid: aPosition) ifFalse: [ self error: self class invalidPositionDescription. ].

	self amountOfChipsXPlayed >= 3 ifTrue: [ self error: self class noMoreChipsDescription. ].
	
	(self isOccupied: aPosition) ifTrue: [self error: self class positionOccupiedDescription. ].
	
	chipsXPlayed add: aPosition.
	isXPlaying := isXPlaying not.! !
!TerniLapilli methodsFor: 'playing' stamp: 'JEA 11/2/2020 13:46:04' prior: 50882907!
putXAt: aPosition
		
	self isGameOver ifTrue: [ self error: self class gameIsOverDescription. ].
	
	isXPlaying ifFalse: [ self error: self class notYourTurnDescription. ].

	self amountOfChipsXPlayed >= 3 ifTrue: [ self error: self class noMoreChipsDescription. ].

	(self class isValid: aPosition) ifFalse: [ self error: self class invalidPositionDescription. ].
	
	(self isOccupied: aPosition) ifTrue: [self error: self class positionOccupiedDescription. ].
	
	chipsXPlayed add: aPosition.
	isXPlaying := isXPlaying not.! !
!TerniLapilli methodsFor: 'playing' stamp: 'JEA 11/2/2020 13:47:34' prior: 50882887!
putOAt: aPosition
	
	self isGameOver ifTrue: [ self error: self class gameIsOverDescription. ].

	isXPlaying ifTrue: [ self error: self class notYourTurnDescription. ].

	(self class isValid: aPosition) ifFalse: [ self error: self class invalidPositionDescription. ].
	
	(self isOccupied: aPosition) ifTrue: [self error: self class positionOccupiedDescription. ].
	
	self amountOfChipsOPlayed >= 3 ifTrue: [ self error: self class noMoreChipsDescription. ].
	
	chipsOPlayed add: aPosition.
	isXPlaying := isXPlaying not.
		! !
!TerniLapilli methodsFor: 'playing' stamp: 'JEA 11/2/2020 13:47:39' prior: 50882927!
putXAt: aPosition
		
	self isGameOver ifTrue: [ self error: self class gameIsOverDescription. ].
	
	isXPlaying ifFalse: [ self error: self class notYourTurnDescription. ].

	(self class isValid: aPosition) ifFalse: [ self error: self class invalidPositionDescription. ].
	
	(self isOccupied: aPosition) ifTrue: [self error: self class positionOccupiedDescription. ].

	self amountOfChipsXPlayed >= 3 ifTrue: [ self error: self class noMoreChipsDescription. ].
	
	chipsXPlayed add: aPosition.
	isXPlaying := isXPlaying not.! !
!TerniLapilli methodsFor: 'playing' stamp: 'JEA 11/2/2020 13:47:44' prior: 50882640!
moveXFrom: currentPosition to: newPosition

	self isGameOver ifTrue: [ self error: self class gameIsOverDescription. ].

	isXPlaying ifFalse: [ self error: self class notYourTurnDescription. ].

	(self class isValid: newPosition) ifFalse: [ self error: self class invalidPositionDescription. ].

	(self isOccupied: newPosition) ifTrue: [ self error: self class positionOccupiedDescription ].

	self amountOfChipsXPlayed < 3 ifTrue: [ self error: self class cantMoveYetDescription. ].

	(currentPosition eightNeighbors includes: newPosition)
		ifFalse: [ self error: self class cantMoveToNotNeighborPositionDescription. ].
		
	chipsXPlayed remove: currentPosition.
	chipsXPlayed add: newPosition.
	isXPlaying := isXPlaying not.! !
!TerniLapilli methodsFor: 'playing' stamp: 'JEA 11/2/2020 13:47:48' prior: 50882614!
moveOFrom: currentPosition to: newPosition

	self isGameOver ifTrue: [ self error: self class gameIsOverDescription. ].

	isXPlaying ifTrue: [ self error: self class notYourTurnDescription. ].

	(self class isValid: newPosition) ifFalse: [ self error: self class invalidPositionDescription. ].

	(self isOccupied: newPosition) ifTrue: [ self error: self class positionOccupiedDescription ].

	self amountOfChipsOPlayed < 3 ifTrue: [ self error: self class cantMoveYetDescription. ].

	(currentPosition eightNeighbors includes: newPosition)
		ifFalse: [ self error: self class cantMoveToNotNeighborPositionDescription. ].
		
	chipsOPlayed remove: currentPosition.
	chipsOPlayed add: newPosition.
	isXPlaying := isXPlaying not.! !
!TerniLapilli methodsFor: 'playing - private' stamp: 'JEA 11/2/2020 13:50:18'!
canPlay: aPosition

	self isGameOver ifTrue: [ self error: self class gameIsOverDescription. ].

	(self class isValid: aPosition) ifFalse: [ self error: self class invalidPositionDescription. ].
	
	(self isOccupied: aPosition) ifTrue: [ self error: self class positionOccupiedDescription. ].! !
!TerniLapilli methodsFor: 'playing' stamp: 'JEA 11/2/2020 13:50:50' prior: 50882987!
moveXFrom: currentPosition to: newPosition

	self canPlay: newPosition.

	isXPlaying ifFalse: [ self error: self class notYourTurnDescription. ].

	self amountOfChipsXPlayed < 3 ifTrue: [ self error: self class cantMoveYetDescription. ].

	(currentPosition eightNeighbors includes: newPosition)
		ifFalse: [ self error: self class cantMoveToNotNeighborPositionDescription. ].
		
	chipsXPlayed remove: currentPosition.
	chipsXPlayed add: newPosition.
	isXPlaying := isXPlaying not.! !
!TerniLapilli methodsFor: 'playing' stamp: 'JEA 11/2/2020 13:51:09' prior: 50883013!
moveOFrom: currentPosition to: newPosition

	self canPlay: newPosition.
	
	

	isXPlaying ifTrue: [ self error: self class notYourTurnDescription. ].

	self amountOfChipsOPlayed < 3 ifTrue: [ self error: self class cantMoveYetDescription. ].

	(currentPosition eightNeighbors includes: newPosition)
		ifFalse: [ self error: self class cantMoveToNotNeighborPositionDescription. ].
		
	chipsOPlayed remove: currentPosition.
	chipsOPlayed add: newPosition.
	isXPlaying := isXPlaying not.! !
!TerniLapilli methodsFor: 'playing' stamp: 'JEA 11/2/2020 13:51:12' prior: 50883069!
moveOFrom: currentPosition to: newPosition

	self canPlay: newPosition.

	isXPlaying ifTrue: [ self error: self class notYourTurnDescription. ].

	self amountOfChipsOPlayed < 3 ifTrue: [ self error: self class cantMoveYetDescription. ].

	(currentPosition eightNeighbors includes: newPosition)
		ifFalse: [ self error: self class cantMoveToNotNeighborPositionDescription. ].
		
	chipsOPlayed remove: currentPosition.
	chipsOPlayed add: newPosition.
	isXPlaying := isXPlaying not.! !

!testRun: #TerniLapilliTest #test01XPlaysFirst stamp: 'JEA 11/2/2020 13:51:26'!
PASSED!

!testRun: #TerniLapilliTest #test02XCanPlayItsTurn stamp: 'JEA 11/2/2020 13:51:26'!
PASSED!

!testRun: #TerniLapilliTest #test03OPlaysAfterX stamp: 'JEA 11/2/2020 13:51:26'!
PASSED!

!testRun: #TerniLapilliTest #test04OCanPlayItsTurn stamp: 'JEA 11/2/2020 13:51:26'!
PASSED!

!testRun: #TerniLapilliTest #test05XPlaysAfterO stamp: 'JEA 11/2/2020 13:51:26'!
PASSED!

!testRun: #TerniLapilliTest #test06XCantPlayOsTurn stamp: 'JEA 11/2/2020 13:51:26'!
PASSED!

!testRun: #TerniLapilliTest #test07OCantPlayXsTurn stamp: 'JEA 11/2/2020 13:51:26'!
PASSED!

!testRun: #TerniLapilliTest #test08PositionsDontOverlap stamp: 'JEA 11/2/2020 13:51:26'!
PASSED!

!testRun: #TerniLapilliTest #test09PositionsAreOccupied stamp: 'JEA 11/2/2020 13:51:26'!
PASSED!

!testRun: #TerniLapilliTest #test10OCantPlayInOccupiedPosition stamp: 'JEA 11/2/2020 13:51:26'!
PASSED!

!testRun: #TerniLapilliTest #test11XCantPlayInOccupiedPosition stamp: 'JEA 11/2/2020 13:51:26'!
PASSED!

!testRun: #TerniLapilliTest #test12XAndOAreAtEveryPositionPlayed stamp: 'JEA 11/2/2020 13:51:26'!
PASSED!

!testRun: #TerniLapilliTest #test13XCantPlayInInvalidPosition stamp: 'JEA 11/2/2020 13:51:26'!
PASSED!

!testRun: #TerniLapilliTest #test14OCantPlayInInvalidPosition stamp: 'JEA 11/2/2020 13:51:26'!
PASSED!

!testRun: #TerniLapilliTest #test15CantPlaceMoreThan3Chips stamp: 'JEA 11/2/2020 13:51:26'!
PASSED!

!testRun: #TerniLapilliTest #test16XCantMoveUntilAllChipsArePlaced stamp: 'JEA 11/2/2020 13:51:26'!
PASSED!

!testRun: #TerniLapilliTest #test17OCantMoveUntilAllChipsArePlaced stamp: 'JEA 11/2/2020 13:51:26'!
PASSED!

!testRun: #TerniLapilliTest #test18XCanMoveAfterAllChipsArePlaced stamp: 'JEA 11/2/2020 13:51:26'!
PASSED!

!testRun: #TerniLapilliTest #test19OCanMoveAfterAllChipsArePlaced stamp: 'JEA 11/2/2020 13:51:26'!
PASSED!

!testRun: #TerniLapilliTest #test20XCantMoveInOsTurn stamp: 'JEA 11/2/2020 13:51:26'!
PASSED!

!testRun: #TerniLapilliTest #test21OCantMoveInXsTurn stamp: 'JEA 11/2/2020 13:51:26'!
PASSED!

!testRun: #TerniLapilliTest #test22XCantMoveToOccupiedPosition stamp: 'JEA 11/2/2020 13:51:26'!
PASSED!

!testRun: #TerniLapilliTest #test23XCantMoveToInvalidPosition stamp: 'JEA 11/2/2020 13:51:26'!
PASSED!

!testRun: #TerniLapilliTest #test24XCantMoveToNotNeighborPosition stamp: 'JEA 11/2/2020 13:51:26'!
PASSED!

!testRun: #TerniLapilliTest #test25XCanWin stamp: 'JEA 11/2/2020 13:51:26'!
PASSED!

!testRun: #TerniLapilliTest #test26OCanWin stamp: 'JEA 11/2/2020 13:51:26'!
PASSED!

!testRun: #TerniLapilliTest #test27CantPlayAfterXWins stamp: 'JEA 11/2/2020 13:51:26'!
PASSED!

!testRun: #TerniLapilliTest #test28CantMoveAfterXWins stamp: 'JEA 11/2/2020 13:51:26'!
PASSED!

!testRun: #TerniLapilliTest #test29CantMoveAfterOWins stamp: 'JEA 11/2/2020 13:51:26'!
PASSED!
!TerniLapilli methodsFor: 'playing' stamp: 'JEA 11/2/2020 13:54:03' prior: 50882947!
putOAt: aPosition

	self canPlay: aPosition.

	isXPlaying ifTrue: [ self error: self class notYourTurnDescription. ].
	
	self amountOfChipsOPlayed >= 3 ifTrue: [ self error: self class noMoreChipsDescription. ].
	
	chipsOPlayed add: aPosition.
	isXPlaying := isXPlaying not.
		! !
!TerniLapilli methodsFor: 'playing' stamp: 'JEA 11/2/2020 13:54:12' prior: 50882967!
putXAt: aPosition

	self canPlay: aPosition.
	
	isXPlaying ifFalse: [ self error: self class notYourTurnDescription. ].

	self amountOfChipsXPlayed >= 3 ifTrue: [ self error: self class noMoreChipsDescription. ].
	
	chipsXPlayed add: aPosition.
	isXPlaying := isXPlaying not.! !

!testRun: #TerniLapilliTest #test01XPlaysFirst stamp: 'JEA 11/2/2020 13:54:12'!
PASSED!

!testRun: #TerniLapilliTest #test02XCanPlayItsTurn stamp: 'JEA 11/2/2020 13:54:12'!
PASSED!

!testRun: #TerniLapilliTest #test03OPlaysAfterX stamp: 'JEA 11/2/2020 13:54:12'!
PASSED!

!testRun: #TerniLapilliTest #test04OCanPlayItsTurn stamp: 'JEA 11/2/2020 13:54:12'!
PASSED!

!testRun: #TerniLapilliTest #test05XPlaysAfterO stamp: 'JEA 11/2/2020 13:54:12'!
PASSED!

!testRun: #TerniLapilliTest #test06XCantPlayOsTurn stamp: 'JEA 11/2/2020 13:54:12'!
PASSED!

!testRun: #TerniLapilliTest #test07OCantPlayXsTurn stamp: 'JEA 11/2/2020 13:54:12'!
PASSED!

!testRun: #TerniLapilliTest #test08PositionsDontOverlap stamp: 'JEA 11/2/2020 13:54:12'!
PASSED!

!testRun: #TerniLapilliTest #test09PositionsAreOccupied stamp: 'JEA 11/2/2020 13:54:12'!
PASSED!

!testRun: #TerniLapilliTest #test10OCantPlayInOccupiedPosition stamp: 'JEA 11/2/2020 13:54:12'!
PASSED!

!testRun: #TerniLapilliTest #test11XCantPlayInOccupiedPosition stamp: 'JEA 11/2/2020 13:54:12'!
PASSED!

!testRun: #TerniLapilliTest #test12XAndOAreAtEveryPositionPlayed stamp: 'JEA 11/2/2020 13:54:12'!
PASSED!

!testRun: #TerniLapilliTest #test13XCantPlayInInvalidPosition stamp: 'JEA 11/2/2020 13:54:12'!
PASSED!

!testRun: #TerniLapilliTest #test14OCantPlayInInvalidPosition stamp: 'JEA 11/2/2020 13:54:12'!
PASSED!

!testRun: #TerniLapilliTest #test15CantPlaceMoreThan3Chips stamp: 'JEA 11/2/2020 13:54:12'!
PASSED!

!testRun: #TerniLapilliTest #test16XCantMoveUntilAllChipsArePlaced stamp: 'JEA 11/2/2020 13:54:12'!
PASSED!

!testRun: #TerniLapilliTest #test17OCantMoveUntilAllChipsArePlaced stamp: 'JEA 11/2/2020 13:54:12'!
PASSED!

!testRun: #TerniLapilliTest #test18XCanMoveAfterAllChipsArePlaced stamp: 'JEA 11/2/2020 13:54:12'!
PASSED!

!testRun: #TerniLapilliTest #test19OCanMoveAfterAllChipsArePlaced stamp: 'JEA 11/2/2020 13:54:12'!
PASSED!

!testRun: #TerniLapilliTest #test20XCantMoveInOsTurn stamp: 'JEA 11/2/2020 13:54:12'!
PASSED!

!testRun: #TerniLapilliTest #test21OCantMoveInXsTurn stamp: 'JEA 11/2/2020 13:54:12'!
PASSED!

!testRun: #TerniLapilliTest #test22XCantMoveToOccupiedPosition stamp: 'JEA 11/2/2020 13:54:12'!
PASSED!

!testRun: #TerniLapilliTest #test23XCantMoveToInvalidPosition stamp: 'JEA 11/2/2020 13:54:12'!
PASSED!

!testRun: #TerniLapilliTest #test24XCantMoveToNotNeighborPosition stamp: 'JEA 11/2/2020 13:54:12'!
PASSED!

!testRun: #TerniLapilliTest #test25XCanWin stamp: 'JEA 11/2/2020 13:54:12'!
PASSED!

!testRun: #TerniLapilliTest #test26OCanWin stamp: 'JEA 11/2/2020 13:54:12'!
PASSED!

!testRun: #TerniLapilliTest #test27CantPlayAfterXWins stamp: 'JEA 11/2/2020 13:54:12'!
PASSED!

!testRun: #TerniLapilliTest #test28CantMoveAfterXWins stamp: 'JEA 11/2/2020 13:54:12'!
PASSED!

!testRun: #TerniLapilliTest #test29CantMoveAfterOWins stamp: 'JEA 11/2/2020 13:54:12'!
PASSED!

----SNAPSHOT----(2 November 2020 13:55:26) CuisUniversity-4384.image priorSource: 17607526!

Object subclass: #TerniLapilliState
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TerniLapilli'!

!classDefinition: #TerniLapilliState category: 'TerniLapilli' stamp: 'JEA 11/2/2020 13:55:43'!
Object subclass: #TerniLapilliState
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TerniLapilli'!

TerniLapilliState subclass: #GameOver
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TerniLapilli'!

!classDefinition: #GameOver category: 'TerniLapilli' stamp: 'JEA 11/2/2020 13:58:23'!
TerniLapilliState subclass: #GameOver
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TerniLapilli'!

TerniLapilliState subclass: #PlacingChips
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TerniLapilli'!

!classDefinition: #PlacingChips category: 'TerniLapilli' stamp: 'JEA 11/2/2020 13:58:31'!
TerniLapilliState subclass: #PlacingChips
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TerniLapilli'!

!classRemoval: #GameOver stamp: 'JEA 11/2/2020 13:58:44'!
TerniLapilliState subclass: #GameOver
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TerniLapilli'!

!classRemoval: #PlacingChips stamp: 'JEA 11/2/2020 13:58:46'!
TerniLapilliState subclass: #PlacingChips
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TerniLapilli'!
!TerniLapilli methodsFor: 'testing' stamp: 'JEA 11/2/2020 13:59:09' prior: 50880868!
isGameOver

	^ self hasXWon or: self hasOWon.! !

TerniLapilliState subclass: #PlacingChips
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TerniLapilli'!

!classDefinition: #PlacingChips category: 'TerniLapilli' stamp: 'JEA 11/2/2020 14:06:08'!
TerniLapilliState subclass: #PlacingChips
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TerniLapilli'!

TerniLapilliState subclass: #MovingChips
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TerniLapilli'!

!classDefinition: #MovingChips category: 'TerniLapilli' stamp: 'JEA 11/2/2020 14:06:12'!
TerniLapilliState subclass: #MovingChips
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TerniLapilli'!

TerniLapilliState subclass: #GameOver
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TerniLapilli'!

!classDefinition: #GameOver category: 'TerniLapilli' stamp: 'JEA 11/2/2020 14:06:16'!
TerniLapilliState subclass: #GameOver
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TerniLapilli'!

!classRemoval: #GameOver stamp: 'JEA 11/2/2020 14:06:48'!
TerniLapilliState subclass: #GameOver
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TerniLapilli'!

!classRemoval: #MovingChips stamp: 'JEA 11/2/2020 14:06:49'!
TerniLapilliState subclass: #MovingChips
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TerniLapilli'!

!classRemoval: #PlacingChips stamp: 'JEA 11/2/2020 14:06:51'!
TerniLapilliState subclass: #PlacingChips
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TerniLapilli'!
!TerniLapilli methodsFor: 'testing' stamp: 'JEA 11/2/2020 14:07:26' prior: 50882117!
hasOWon

	^self class isWinningCombination: chipsOPlayed.! !
!TerniLapilli methodsFor: 'testing' stamp: 'JEA 11/2/2020 14:07:29' prior: 50882122!
hasXWon

	^self class isWinningCombination: chipsXPlayed.! !
!TerniLapilli methodsFor: 'testing' stamp: 'JEA 11/2/2020 14:07:33' prior: 50883358!
isGameOver

	^self hasXWon or: self hasOWon.! !
!TerniLapilliState methodsFor: 'testing' stamp: 'JEA 11/2/2020 14:10:00'!
hasOWon! !
!TerniLapilliState methodsFor: 'testing' stamp: 'JEA 11/2/2020 14:10:04'!
hasXWon! !
!TerniLapilliState methodsFor: 'testing' stamp: 'JEA 11/2/2020 14:10:11' prior: 50883430!
hasOWon

	self subclassRsponsibility.! !
!TerniLapilliState methodsFor: 'testing' stamp: 'JEA 11/2/2020 14:10:14' prior: 50883437!
hasOWon

	self subclassResponsibility.! !
!TerniLapilliState methodsFor: 'testing' stamp: 'JEA 11/2/2020 14:11:36' prior: 50883433!
hasXWon

	self subclassResponsibility.! !
!TerniLapilliState methodsFor: 'testing' stamp: 'JEA 11/2/2020 14:11:43'!
isGameOver

	self subclassResponsibility.! !
!TerniLapilliState methodsFor: 'playing' stamp: 'JEA 11/2/2020 14:12:33'!
moveOFrom: currentPosition to: newPosition
	
	self subclassResponsibility.! !
!TerniLapilliState methodsFor: 'playing' stamp: 'JEA 11/2/2020 14:12:35'!
moveXFrom: currentPosition to: newPosition
	
	self subclassResponsibility.! !
!TerniLapilliState methodsFor: 'playing' stamp: 'JEA 11/2/2020 14:12:42'!
putXAt: aPosition
	
	self subclassResponsibility.! !
!TerniLapilliState methodsFor: 'playing' stamp: 'JEA 11/2/2020 14:12:44'!
putOAt: aPosition
	
	self subclassResponsibility.! !
!TerniLapilli class methodsFor: 'inquiries' stamp: 'JEA 11/2/2020 14:13:22' prior: 50882068!
isWinningCombination: aChipSet

	^self winningCombinations includes: aChipSet.! !

TerniLapilliState subclass: #PlacingChips
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TerniLapilli'!

!classDefinition: #PlacingChips category: 'TerniLapilli' stamp: 'JEA 11/2/2020 14:14:33'!
TerniLapilliState subclass: #PlacingChips
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TerniLapilli'!

TerniLapilliState subclass: #MovingChips
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TerniLapilli'!

!classDefinition: #MovingChips category: 'TerniLapilli' stamp: 'JEA 11/2/2020 14:14:39'!
TerniLapilliState subclass: #MovingChips
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TerniLapilli'!

TerniLapilliState subclass: #GameOver
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TerniLapilli'!

!classDefinition: #GameOver category: 'TerniLapilli' stamp: 'JEA 11/2/2020 14:14:45'!
TerniLapilliState subclass: #GameOver
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TerniLapilli'!
!PlacingChips methodsFor: 'testing' stamp: 'JEA 11/2/2020 14:15:05' overrides: 50883442!
hasOWon

	self subclassResponsibility.! !
!MovingChips methodsFor: 'testing' stamp: 'JEA 11/2/2020 14:15:05' overrides: 50883442!
hasOWon

	self subclassResponsibility.! !
!GameOver methodsFor: 'testing' stamp: 'JEA 11/2/2020 14:15:05' overrides: 50883442!
hasOWon

	self subclassResponsibility.! !

!methodRemoval: TerniLapilliState #hasOWon stamp: 'JEA 11/2/2020 14:15:05'!
hasOWon

	self subclassResponsibility.!
!TerniLapilliState methodsFor: 'testing' stamp: 'JEA 11/2/2020 14:15:09'!
hasOWon

	self subclassResponsibility.! !
!PlacingChips methodsFor: 'testing' stamp: 'JEA 11/2/2020 14:15:13' overrides: 50883447!
hasXWon

	self subclassResponsibility.! !
!MovingChips methodsFor: 'testing' stamp: 'JEA 11/2/2020 14:15:13' overrides: 50883447!
hasXWon

	self subclassResponsibility.! !
!GameOver methodsFor: 'testing' stamp: 'JEA 11/2/2020 14:15:13' overrides: 50883447!
hasXWon

	self subclassResponsibility.! !

!methodRemoval: TerniLapilliState #hasXWon stamp: 'JEA 11/2/2020 14:15:13'!
hasXWon

	self subclassResponsibility.!
!TerniLapilliState methodsFor: 'testing' stamp: 'JEA 11/2/2020 14:15:17'!
hasXWon

	self subclassResponsibility.! !
!PlacingChips methodsFor: 'testing' stamp: 'JEA 11/2/2020 14:15:31' overrides: 50883451!
isGameOver

	self subclassResponsibility.! !
!MovingChips methodsFor: 'testing' stamp: 'JEA 11/2/2020 14:15:31' overrides: 50883451!
isGameOver

	self subclassResponsibility.! !
!GameOver methodsFor: 'testing' stamp: 'JEA 11/2/2020 14:15:31' overrides: 50883451!
isGameOver

	self subclassResponsibility.! !

!methodRemoval: TerniLapilliState #isGameOver stamp: 'JEA 11/2/2020 14:15:31'!
isGameOver

	self subclassResponsibility.!
!TerniLapilliState methodsFor: 'testing' stamp: 'JEA 11/2/2020 14:15:32'!
isGameOver

	self subclassResponsibility.! !
!PlacingChips methodsFor: 'playing' stamp: 'JEA 11/2/2020 14:15:38' overrides: 50883455!
moveOFrom: currentPosition to: newPosition
	
	self subclassResponsibility.! !
!MovingChips methodsFor: 'playing' stamp: 'JEA 11/2/2020 14:15:38' overrides: 50883455!
moveOFrom: currentPosition to: newPosition
	
	self subclassResponsibility.! !
!GameOver methodsFor: 'playing' stamp: 'JEA 11/2/2020 14:15:38' overrides: 50883455!
moveOFrom: currentPosition to: newPosition
	
	self subclassResponsibility.! !

!methodRemoval: TerniLapilliState #moveOFrom:to: stamp: 'JEA 11/2/2020 14:15:38'!
moveOFrom: currentPosition to: newPosition
	
	self subclassResponsibility.!
!TerniLapilliState methodsFor: 'playing' stamp: 'JEA 11/2/2020 14:15:39'!
moveOFrom: currentPosition to: newPosition
	
	self subclassResponsibility.! !
!PlacingChips methodsFor: 'playing' stamp: 'JEA 11/2/2020 14:15:45' overrides: 50883460!
moveXFrom: currentPosition to: newPosition
	
	self subclassResponsibility.! !
!MovingChips methodsFor: 'playing' stamp: 'JEA 11/2/2020 14:15:45' overrides: 50883460!
moveXFrom: currentPosition to: newPosition
	
	self subclassResponsibility.! !
!GameOver methodsFor: 'playing' stamp: 'JEA 11/2/2020 14:15:45' overrides: 50883460!
moveXFrom: currentPosition to: newPosition
	
	self subclassResponsibility.! !

!methodRemoval: TerniLapilliState #moveXFrom:to: stamp: 'JEA 11/2/2020 14:15:45'!
moveXFrom: currentPosition to: newPosition
	
	self subclassResponsibility.!
!TerniLapilliState methodsFor: 'playing' stamp: 'JEA 11/2/2020 14:15:47'!
moveXFrom: currentPosition to: newPosition
	
	self subclassResponsibility.! !
!PlacingChips methodsFor: 'playing' stamp: 'JEA 11/2/2020 14:15:54' overrides: 50883469!
putOAt: aPosition
	
	self subclassResponsibility.! !
!MovingChips methodsFor: 'playing' stamp: 'JEA 11/2/2020 14:15:54' overrides: 50883469!
putOAt: aPosition
	
	self subclassResponsibility.! !
!GameOver methodsFor: 'playing' stamp: 'JEA 11/2/2020 14:15:54' overrides: 50883469!
putOAt: aPosition
	
	self subclassResponsibility.! !

!methodRemoval: TerniLapilliState #putOAt: stamp: 'JEA 11/2/2020 14:15:54'!
putOAt: aPosition
	
	self subclassResponsibility.!
!TerniLapilliState methodsFor: 'playing' stamp: 'JEA 11/2/2020 14:15:55'!
putOAt: aPosition
	
	self subclassResponsibility.! !
!PlacingChips methodsFor: 'playing' stamp: 'JEA 11/2/2020 14:16:01' overrides: 50883465!
putXAt: aPosition
	
	self subclassResponsibility.! !
!MovingChips methodsFor: 'playing' stamp: 'JEA 11/2/2020 14:16:01' overrides: 50883465!
putXAt: aPosition
	
	self subclassResponsibility.! !
!GameOver methodsFor: 'playing' stamp: 'JEA 11/2/2020 14:16:01' overrides: 50883465!
putXAt: aPosition
	
	self subclassResponsibility.! !

!methodRemoval: TerniLapilliState #putXAt: stamp: 'JEA 11/2/2020 14:16:01'!
putXAt: aPosition
	
	self subclassResponsibility.!
!TerniLapilliState methodsFor: 'playing' stamp: 'JEA 11/2/2020 14:16:02'!
putXAt: aPosition
	
	self subclassResponsibility.! !
!GameOver methodsFor: 'testing' stamp: 'JEA 11/2/2020 14:16:19' prior: 50883569 overrides: 50883577!
isGameOver

	^true.! !
!MovingChips methodsFor: 'testing' stamp: 'JEA 11/2/2020 14:16:35' prior: 50883564 overrides: 50883577!
isGameOver

	^false.! !
!PlacingChips methodsFor: 'testing' stamp: 'JEA 11/2/2020 14:16:45' prior: 50883559 overrides: 50883577!
isGameOver

	^false.! !
!PlacingChips methodsFor: 'testing' stamp: 'JEA 11/2/2020 14:16:48' prior: 50883537 overrides: 50883554!
hasXWon

	^false.! !
!PlacingChips methodsFor: 'testing' stamp: 'JEA 11/2/2020 14:16:51' prior: 50883515 overrides: 50883532!
hasOWon

	^false.! !
!MovingChips methodsFor: 'testing' stamp: 'JEA 11/2/2020 14:16:58' prior: 50883520 overrides: 50883532!
hasOWon

	^false.! !
!MovingChips methodsFor: 'testing' stamp: 'JEA 11/2/2020 14:17:01' prior: 50883542 overrides: 50883554!
hasXWon

	^false.! !
!GameOver methodsFor: 'playing' stamp: 'JEA 11/2/2020 14:20:28' prior: 50883594 overrides: 50883604!
moveOFrom: currentPosition to: newPosition
	
	self error: self class gameIsOverDescription.! !
!GameOver methodsFor: 'playing' stamp: 'JEA 11/2/2020 14:20:32' prior: 50883622 overrides: 50883632!
moveXFrom: currentPosition to: newPosition
	
	self error: self class gameIsOverDescription.! !
!GameOver methodsFor: 'playing' stamp: 'JEA 11/2/2020 14:20:35' prior: 50883648 overrides: 50883656!
putOAt: aPosition
	
	self error: self class gameIsOverDescription.! !
!GameOver methodsFor: 'playing' stamp: 'JEA 11/2/2020 14:20:39' prior: 50883671 overrides: 50883679!
putXAt: aPosition
	
	self error: self class gameIsOverDescription.! !

----SNAPSHOT----(2 November 2020 14:20:40) CuisUniversity-4384.image priorSource: 17653028!
!GameOver methodsFor: 'playing' stamp: 'JEA 11/2/2020 14:21:00' prior: 50883734 overrides: 50883679!
putXAt: aPosition
	
	self error: TerniLapilli gameIsOverDescription.! !
!GameOver methodsFor: 'playing' stamp: 'JEA 11/2/2020 14:21:04' prior: 50883728 overrides: 50883656!
putOAt: aPosition
	
	self error: TerniLapilli gameIsOverDescription.! !
!GameOver methodsFor: 'playing' stamp: 'JEA 11/2/2020 14:21:07' prior: 50883721 overrides: 50883632!
moveXFrom: currentPosition to: newPosition
	
	self error: TerniLapilli gameIsOverDescription.! !
!GameOver methodsFor: 'playing' stamp: 'JEA 11/2/2020 14:21:10' prior: 50883714 overrides: 50883604!
moveOFrom: currentPosition to: newPosition
	
	self error: TerniLapilli gameIsOverDescription.! !
!PlacingChips methodsFor: 'playing' stamp: 'JEA 11/2/2020 14:21:45' prior: 50883610 overrides: 50883632!
moveXFrom: currentPosition to: newPosition
	
	self error: TerniLapilli cantMoveYetDescription.! !
!PlacingChips methodsFor: 'playing' stamp: 'JEA 11/2/2020 14:21:53' prior: 50883582 overrides: 50883604!
moveOFrom: currentPosition to: newPosition
	
	self error: TerniLapilli cantMoveYetDescription.! !
!MovingChips methodsFor: 'playing' stamp: 'JEA 11/2/2020 14:22:08' prior: 50883643 overrides: 50883656!
putOAt: aPosition
	
	self error: self class noMoreChipsDescription.! !
!MovingChips methodsFor: 'playing' stamp: 'JEA 11/2/2020 14:22:14' prior: 50883783 overrides: 50883656!
putOAt: aPosition
	
	self error: TerniLapilli noMoreChipsDescription.! !
!MovingChips methodsFor: 'playing' stamp: 'JEA 11/2/2020 14:22:16' prior: 50883666 overrides: 50883679!
putXAt: aPosition
	
	self error: TerniLapilli noMoreChipsDescription.! !

Object subclass: #TerniLapilli
	instanceVariableNames: 'state isXPlaying chipsXPlayed chipsOPlayed'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TerniLapilli'!

!classDefinition: #TerniLapilli category: 'TerniLapilli' stamp: 'JEA 11/2/2020 14:22:40'!
Object subclass: #TerniLapilli
	instanceVariableNames: 'state isXPlaying chipsXPlayed chipsOPlayed'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TerniLapilli'!
!TerniLapilli methodsFor: 'initialization' stamp: 'JEA 11/2/2020 14:22:58' prior: 50881921 overrides: 16896425!
initialize

	state := MovingChips new.
	chipsOPlayed := Set new.
	chipsXPlayed := Set new.
	isXPlaying := true.! !
!TerniLapilli methodsFor: 'initialization' stamp: 'JEA 11/2/2020 14:23:06' prior: 50883815 overrides: 16896425!
initialize

	state := PlacingChips new.
	chipsOPlayed := Set new.
	chipsXPlayed := Set new.
	isXPlaying := true.! !
!TerniLapilli methodsFor: 'testing' stamp: 'JEA 11/2/2020 14:23:24' prior: 50883426!
isGameOver

	^state isGameOver.! !

!testRun: #TerniLapilliTest #test01XPlaysFirst stamp: 'JEA 11/2/2020 14:23:26'!
PASSED!

!testRun: #TerniLapilliTest #test02XCanPlayItsTurn stamp: 'JEA 11/2/2020 14:23:26'!
PASSED!

!testRun: #TerniLapilliTest #test03OPlaysAfterX stamp: 'JEA 11/2/2020 14:23:26'!
PASSED!

!testRun: #TerniLapilliTest #test04OCanPlayItsTurn stamp: 'JEA 11/2/2020 14:23:26'!
PASSED!

!testRun: #TerniLapilliTest #test05XPlaysAfterO stamp: 'JEA 11/2/2020 14:23:26'!
PASSED!

!testRun: #TerniLapilliTest #test06XCantPlayOsTurn stamp: 'JEA 11/2/2020 14:23:26'!
PASSED!

!testRun: #TerniLapilliTest #test07OCantPlayXsTurn stamp: 'JEA 11/2/2020 14:23:26'!
PASSED!

!testRun: #TerniLapilliTest #test08PositionsDontOverlap stamp: 'JEA 11/2/2020 14:23:26'!
PASSED!

!testRun: #TerniLapilliTest #test09PositionsAreOccupied stamp: 'JEA 11/2/2020 14:23:26'!
PASSED!

!testRun: #TerniLapilliTest #test10OCantPlayInOccupiedPosition stamp: 'JEA 11/2/2020 14:23:26'!
PASSED!

!testRun: #TerniLapilliTest #test11XCantPlayInOccupiedPosition stamp: 'JEA 11/2/2020 14:23:26'!
PASSED!

!testRun: #TerniLapilliTest #test12XAndOAreAtEveryPositionPlayed stamp: 'JEA 11/2/2020 14:23:26'!
PASSED!

!testRun: #TerniLapilliTest #test13XCantPlayInInvalidPosition stamp: 'JEA 11/2/2020 14:23:26'!
PASSED!

!testRun: #TerniLapilliTest #test14OCantPlayInInvalidPosition stamp: 'JEA 11/2/2020 14:23:26'!
PASSED!

!testRun: #TerniLapilliTest #test15CantPlaceMoreThan3Chips stamp: 'JEA 11/2/2020 14:23:26'!
PASSED!

!testRun: #TerniLapilliTest #test16XCantMoveUntilAllChipsArePlaced stamp: 'JEA 11/2/2020 14:23:26'!
PASSED!

!testRun: #TerniLapilliTest #test17OCantMoveUntilAllChipsArePlaced stamp: 'JEA 11/2/2020 14:23:26'!
PASSED!

!testRun: #TerniLapilliTest #test18XCanMoveAfterAllChipsArePlaced stamp: 'JEA 11/2/2020 14:23:26'!
PASSED!

!testRun: #TerniLapilliTest #test19OCanMoveAfterAllChipsArePlaced stamp: 'JEA 11/2/2020 14:23:26'!
PASSED!

!testRun: #TerniLapilliTest #test20XCantMoveInOsTurn stamp: 'JEA 11/2/2020 14:23:26'!
PASSED!

!testRun: #TerniLapilliTest #test21OCantMoveInXsTurn stamp: 'JEA 11/2/2020 14:23:26'!
PASSED!

!testRun: #TerniLapilliTest #test22XCantMoveToOccupiedPosition stamp: 'JEA 11/2/2020 14:23:26'!
PASSED!

!testRun: #TerniLapilliTest #test23XCantMoveToInvalidPosition stamp: 'JEA 11/2/2020 14:23:26'!
PASSED!

!testRun: #TerniLapilliTest #test24XCantMoveToNotNeighborPosition stamp: 'JEA 11/2/2020 14:23:26'!
PASSED!

!testRun: #TerniLapilliTest #test25XCanWin stamp: 'JEA 11/2/2020 14:23:26'!
PASSED!

!testRun: #TerniLapilliTest #test26OCanWin stamp: 'JEA 11/2/2020 14:23:26'!
PASSED!

!testRun: #TerniLapilliTest #test27CantPlayAfterXWins stamp: 'JEA 11/2/2020 14:23:26'!
FAILURE!

!testRun: #TerniLapilliTest #test28CantMoveAfterXWins stamp: 'JEA 11/2/2020 14:23:26'!
FAILURE!

!testRun: #TerniLapilliTest #test29CantMoveAfterOWins stamp: 'JEA 11/2/2020 14:23:26'!
FAILURE!
!TerniLapilli methodsFor: 'testing' stamp: 'JEA 11/2/2020 14:23:44' prior: 50883830!
isGameOver

	^self hasXWon or: self hasOWon.! !

!testRun: #TerniLapilliTest #test01XPlaysFirst stamp: 'JEA 11/2/2020 14:23:46'!
PASSED!

!testRun: #TerniLapilliTest #test02XCanPlayItsTurn stamp: 'JEA 11/2/2020 14:23:46'!
PASSED!

!testRun: #TerniLapilliTest #test03OPlaysAfterX stamp: 'JEA 11/2/2020 14:23:46'!
PASSED!

!testRun: #TerniLapilliTest #test04OCanPlayItsTurn stamp: 'JEA 11/2/2020 14:23:46'!
PASSED!

!testRun: #TerniLapilliTest #test05XPlaysAfterO stamp: 'JEA 11/2/2020 14:23:46'!
PASSED!

!testRun: #TerniLapilliTest #test06XCantPlayOsTurn stamp: 'JEA 11/2/2020 14:23:46'!
PASSED!

!testRun: #TerniLapilliTest #test07OCantPlayXsTurn stamp: 'JEA 11/2/2020 14:23:46'!
PASSED!

!testRun: #TerniLapilliTest #test08PositionsDontOverlap stamp: 'JEA 11/2/2020 14:23:46'!
PASSED!

!testRun: #TerniLapilliTest #test09PositionsAreOccupied stamp: 'JEA 11/2/2020 14:23:46'!
PASSED!

!testRun: #TerniLapilliTest #test10OCantPlayInOccupiedPosition stamp: 'JEA 11/2/2020 14:23:46'!
PASSED!

!testRun: #TerniLapilliTest #test11XCantPlayInOccupiedPosition stamp: 'JEA 11/2/2020 14:23:46'!
PASSED!

!testRun: #TerniLapilliTest #test12XAndOAreAtEveryPositionPlayed stamp: 'JEA 11/2/2020 14:23:46'!
PASSED!

!testRun: #TerniLapilliTest #test13XCantPlayInInvalidPosition stamp: 'JEA 11/2/2020 14:23:46'!
PASSED!

!testRun: #TerniLapilliTest #test14OCantPlayInInvalidPosition stamp: 'JEA 11/2/2020 14:23:46'!
PASSED!

!testRun: #TerniLapilliTest #test15CantPlaceMoreThan3Chips stamp: 'JEA 11/2/2020 14:23:46'!
PASSED!

!testRun: #TerniLapilliTest #test16XCantMoveUntilAllChipsArePlaced stamp: 'JEA 11/2/2020 14:23:46'!
PASSED!

!testRun: #TerniLapilliTest #test17OCantMoveUntilAllChipsArePlaced stamp: 'JEA 11/2/2020 14:23:46'!
PASSED!

!testRun: #TerniLapilliTest #test18XCanMoveAfterAllChipsArePlaced stamp: 'JEA 11/2/2020 14:23:46'!
PASSED!

!testRun: #TerniLapilliTest #test19OCanMoveAfterAllChipsArePlaced stamp: 'JEA 11/2/2020 14:23:46'!
PASSED!

!testRun: #TerniLapilliTest #test20XCantMoveInOsTurn stamp: 'JEA 11/2/2020 14:23:46'!
PASSED!

!testRun: #TerniLapilliTest #test21OCantMoveInXsTurn stamp: 'JEA 11/2/2020 14:23:46'!
PASSED!

!testRun: #TerniLapilliTest #test22XCantMoveToOccupiedPosition stamp: 'JEA 11/2/2020 14:23:46'!
PASSED!

!testRun: #TerniLapilliTest #test23XCantMoveToInvalidPosition stamp: 'JEA 11/2/2020 14:23:46'!
PASSED!

!testRun: #TerniLapilliTest #test24XCantMoveToNotNeighborPosition stamp: 'JEA 11/2/2020 14:23:46'!
PASSED!

!testRun: #TerniLapilliTest #test25XCanWin stamp: 'JEA 11/2/2020 14:23:46'!
PASSED!

!testRun: #TerniLapilliTest #test26OCanWin stamp: 'JEA 11/2/2020 14:23:46'!
PASSED!

!testRun: #TerniLapilliTest #test27CantPlayAfterXWins stamp: 'JEA 11/2/2020 14:23:46'!
PASSED!

!testRun: #TerniLapilliTest #test28CantMoveAfterXWins stamp: 'JEA 11/2/2020 14:23:46'!
PASSED!

!testRun: #TerniLapilliTest #test29CantMoveAfterOWins stamp: 'JEA 11/2/2020 14:23:46'!
PASSED!
!TerniLapilli methodsFor: 'testing' stamp: 'JEA 11/2/2020 14:24:30' prior: 50883924!
isGameOver

	^state isGameOver.! !
!TerniLapilli methodsFor: 'testing' stamp: 'JEA 11/2/2020 14:26:33' prior: 50884018!
isGameOver

	^state isGameOver.! !

!methodRemoval: GameOver #hasOWon stamp: 'JEA 11/2/2020 14:26:44'!
hasOWon

	self subclassResponsibility.!

!methodRemoval: GameOver #hasXWon stamp: 'JEA 11/2/2020 14:26:46'!
hasXWon

	self subclassResponsibility.!

!methodRemoval: MovingChips #hasOWon stamp: 'JEA 11/2/2020 14:26:49'!
hasOWon

	^false.!

!methodRemoval: MovingChips #hasXWon stamp: 'JEA 11/2/2020 14:26:51'!
hasXWon

	^false.!

!methodRemoval: PlacingChips #hasOWon stamp: 'JEA 11/2/2020 14:26:53'!
hasOWon

	^false.!

!methodRemoval: PlacingChips #hasXWon stamp: 'JEA 11/2/2020 14:26:55'!
hasXWon

	^false.!

!methodRemoval: TerniLapilliState #hasOWon stamp: 'JEA 11/2/2020 14:26:57'!
hasOWon

	self subclassResponsibility.!

!methodRemoval: TerniLapilliState #hasXWon stamp: 'JEA 11/2/2020 14:26:59'!
hasXWon

	self subclassResponsibility.!
!TerniLapilli methodsFor: 'playing - private' stamp: 'JEA 11/2/2020 14:27:34' prior: 50883039!
canPlay: aPosition

	(self class isValid: aPosition) ifFalse: [ self error: self class invalidPositionDescription. ].
	
	(self isOccupied: aPosition) ifTrue: [ self error: self class positionOccupiedDescription. ].! !
!TerniLapilli methodsFor: 'playing - private' stamp: 'JEA 11/2/2020 14:27:58'!
canPlayAt: aPosition

	(self class isValid: aPosition) ifFalse: [ self error: self class invalidPositionDescription. ].
	
	(self isOccupied: aPosition) ifTrue: [ self error: self class positionOccupiedDescription. ].! !
!TerniLapilli methodsFor: 'as yet unclassified' stamp: 'JEA 11/2/2020 14:27:58' prior: 50883087!
moveOFrom: currentPosition to: newPosition

	self canPlayAt: newPosition.

	isXPlaying ifTrue: [ self error: self class notYourTurnDescription. ].

	self amountOfChipsOPlayed < 3 ifTrue: [ self error: self class cantMoveYetDescription. ].

	(currentPosition eightNeighbors includes: newPosition)
		ifFalse: [ self error: self class cantMoveToNotNeighborPositionDescription. ].
		
	chipsOPlayed remove: currentPosition.
	chipsOPlayed add: newPosition.
	isXPlaying := isXPlaying not.! !
!TerniLapilli methodsFor: 'as yet unclassified' stamp: 'JEA 11/2/2020 14:27:58' prior: 50883195!
putOAt: aPosition

	self canPlayAt: aPosition.

	isXPlaying ifTrue: [ self error: self class notYourTurnDescription. ].
	
	self amountOfChipsOPlayed >= 3 ifTrue: [ self error: self class noMoreChipsDescription. ].
	
	chipsOPlayed add: aPosition.
	isXPlaying := isXPlaying not.
		! !
!TerniLapilli methodsFor: 'as yet unclassified' stamp: 'JEA 11/2/2020 14:27:58' prior: 50883207!
putXAt: aPosition

	self canPlayAt: aPosition.
	
	isXPlaying ifFalse: [ self error: self class notYourTurnDescription. ].

	self amountOfChipsXPlayed >= 3 ifTrue: [ self error: self class noMoreChipsDescription. ].
	
	chipsXPlayed add: aPosition.
	isXPlaying := isXPlaying not.! !
!TerniLapilli methodsFor: 'as yet unclassified' stamp: 'JEA 11/2/2020 14:27:58' prior: 50883051!
moveXFrom: currentPosition to: newPosition

	self canPlayAt: newPosition.

	isXPlaying ifFalse: [ self error: self class notYourTurnDescription. ].

	self amountOfChipsXPlayed < 3 ifTrue: [ self error: self class cantMoveYetDescription. ].

	(currentPosition eightNeighbors includes: newPosition)
		ifFalse: [ self error: self class cantMoveToNotNeighborPositionDescription. ].
		
	chipsXPlayed remove: currentPosition.
	chipsXPlayed add: newPosition.
	isXPlaying := isXPlaying not.! !

!methodRemoval: TerniLapilli #canPlay: stamp: 'JEA 11/2/2020 14:27:58'!
canPlay: aPosition

	(self class isValid: aPosition) ifFalse: [ self error: self class invalidPositionDescription. ].
	
	(self isOccupied: aPosition) ifTrue: [ self error: self class positionOccupiedDescription. ].!
!TerniLapilli methodsFor: 'playing' stamp: 'JEA 11/2/2020 14:29:27' prior: 50884072!
moveOFrom: currentPosition to: newPosition

	state moveOFrom: currentPosition to: newPosition.

	self canPlayAt: newPosition.

	isXPlaying ifTrue: [ self error: self class notYourTurnDescription. ].

	self amountOfChipsOPlayed < 3 ifTrue: [ self error: self class cantMoveYetDescription. ].

	(currentPosition eightNeighbors includes: newPosition)
		ifFalse: [ self error: self class cantMoveToNotNeighborPositionDescription. ].
		
	chipsOPlayed remove: currentPosition.
	chipsOPlayed add: newPosition.
	isXPlaying := isXPlaying not.! !
!TerniLapilli methodsFor: 'playing' stamp: 'JEA 11/2/2020 14:29:38' prior: 50884142!
moveOFrom: currentPosition to: newPosition

	state moveOFrom: currentPosition to: newPosition.
"
	self canPlayAt: newPosition.

	isXPlaying ifTrue: [ self error: self class notYourTurnDescription. ].

	self amountOfChipsOPlayed < 3 ifTrue: [ self error: self class cantMoveYetDescription. ].

	(currentPosition eightNeighbors includes: newPosition)
		ifFalse: [ self error: self class cantMoveToNotNeighborPositionDescription. ].
		
	chipsOPlayed remove: currentPosition.
	chipsOPlayed add: newPosition.
	isXPlaying := isXPlaying not."! !
!TerniLapilli methodsFor: 'playing' stamp: 'JEA 11/2/2020 14:29:45' prior: 50884162!
moveOFrom: currentPosition to: newPosition

	"state moveOFrom: currentPosition to: newPosition."

	self canPlayAt: newPosition.

	isXPlaying ifTrue: [ self error: self class notYourTurnDescription. ].

	self amountOfChipsOPlayed < 3 ifTrue: [ self error: self class cantMoveYetDescription. ].

	(currentPosition eightNeighbors includes: newPosition)
		ifFalse: [ self error: self class cantMoveToNotNeighborPositionDescription. ].
		
	chipsOPlayed remove: currentPosition.
	chipsOPlayed add: newPosition.
	isXPlaying := isXPlaying not.! !
!TerniLapilli methodsFor: 'playing' stamp: 'JEA 11/2/2020 14:30:13' prior: 50884091!
putOAt: aPosition

	state putOAt: aPosition.

	"
	self canPlayAt: aPosition.

	isXPlaying ifTrue: [ self error: self class notYourTurnDescription. ].
	
	self amountOfChipsOPlayed >= 3 ifTrue: [ self error: self class noMoreChipsDescription. ].
	
	chipsOPlayed add: aPosition.
	isXPlaying := isXPlaying not.
	"
		! !
!PlacingChips methodsFor: 'playing' stamp: 'JEA 11/2/2020 14:31:40' prior: 50883638 overrides: 50883656!
putOAt: aPosition
	
	"self canPlayAt: aPosition.

	isXPlaying ifTrue: [ self error: self class notYourTurnDescription. ].
	
	chipsOPlayed add: aPosition.
	isXPlaying := isXPlaying not."! !

Object subclass: #TerniLapilli
	instanceVariableNames: 'state'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TerniLapilli'!

!classDefinition: #TerniLapilli category: 'TerniLapilli' stamp: 'JEA 11/2/2020 14:31:52'!
Object subclass: #TerniLapilli
	instanceVariableNames: 'state'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TerniLapilli'!

Object subclass: #TerniLapilliState
	instanceVariableNames: 'isXPlaying chipsXPlayed chipsOPlayed'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TerniLapilli'!

!classDefinition: #TerniLapilliState category: 'TerniLapilli' stamp: 'JEA 11/2/2020 14:31:58'!
Object subclass: #TerniLapilliState
	instanceVariableNames: 'isXPlaying chipsXPlayed chipsOPlayed'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TerniLapilli'!
!TerniLapilliState class methodsFor: 'instance creation' stamp: 'JEA 11/2/2020 14:32:55' overrides: 16783533!
new

	PlacingChips new.! !
!TerniLapilliState class methodsFor: 'instance creation' stamp: 'JEA 11/2/2020 14:32:57' prior: 50884251 overrides: 16783533!
new

	^PlacingChips new.! !
!PlacingChips class methodsFor: 'instance creation' stamp: 'JEA 11/2/2020 14:33:19' overrides: 50884256!
new

	^self basicNew initialize.! !
!PlacingChips methodsFor: 'initialization' stamp: 'JEA 11/2/2020 14:33:38' overrides: 16896425!
initialize

	isXPlaying := true.
	! !
!TerniLapilli methodsFor: 'initialization' stamp: 'JEA 11/2/2020 14:33:48' prior: 50883823 overrides: 16896425!
initialize

	state := PlacingChips new.! !
!PlacingChips methodsFor: 'initialization' stamp: 'JEA 11/2/2020 14:34:00' prior: 50884266 overrides: 16896425!
initialize

	chipsOPlayed := Set new.
	chipsXPlayed := Set new.
	isXPlaying := true.! !
!PlacingChips methodsFor: 'playing' stamp: 'JEA 11/2/2020 14:34:26' prior: 50884216 overrides: 50883656!
putOAt: aPosition
	
	self canPlayAt: aPosition.

	isXPlaying ifTrue: [ self error: self class notYourTurnDescription. ].
	
	chipsOPlayed add: aPosition.
	isXPlaying := isXPlaying not.! !
!TerniLapilliState methodsFor: 'testing' stamp: 'JEA 11/2/2020 14:35:46'!
amountOfChipsOPlayed

	^chipsOPlayed size.! !
!TerniLapilliState methodsFor: 'testing' stamp: 'JEA 11/2/2020 14:35:54'!
amountOfChipsXPlayed

	^chipsXPlayed size.! !
!TerniLapilliState methodsFor: 'testing' stamp: 'JEA 11/2/2020 14:36:56'!
hasOWon

	^TerniLapilli isWinningCombination: chipsOPlayed.! !
!TerniLapilliState methodsFor: 'testing' stamp: 'JEA 11/2/2020 14:37:29'!
hasXWon

	^TerniLapilli isWinningCombination: chipsXPlayed.! !
!TerniLapilliState methodsFor: 'testing' stamp: 'JEA 11/2/2020 14:37:55'!
isOAt: aPosition

	^chipsOPlayed includes: aPosition.! !
!TerniLapilliState methodsFor: 'testing' stamp: 'JEA 11/2/2020 14:37:58'!
isXAt: aPosition

	^chipsOPlayed includes: aPosition.! !
!TerniLapilliState methodsFor: 'testing' stamp: 'JEA 11/2/2020 14:38:15'!
isOPlaying

	^isXPlaying not.! !
!TerniLapilliState methodsFor: 'testing' stamp: 'JEA 11/2/2020 14:38:19'!
isXPlaying

	^isXPlaying.! !
!TerniLapilliState methodsFor: 'testing' stamp: 'JEA 11/2/2020 14:38:23' prior: 50884315!
isXAt: aPosition

	^chipsXPlayed includes: aPosition.! !
!TerniLapilliState methodsFor: 'testing' stamp: 'JEA 11/2/2020 14:39:14'!
isOccupied: aPosition

	^(self isXAt: aPosition) or: [ self isOAt: aPosition ].! !
!TerniLapilliState methodsFor: 'playing - private' stamp: 'JEA 11/2/2020 14:39:38'!
canPlayAt: aPosition

	(self class isValid: aPosition) ifFalse: [ self error: self class invalidPositionDescription. ].
	
	(self isOccupied: aPosition) ifTrue: [ self error: self class positionOccupiedDescription. ].! !
!TerniLapilliState class methodsFor: 'inquiries' stamp: 'JEA 11/2/2020 14:40:44'!
isValid: aPosition

	^aPosition <= (2@2) and: [aPosition >= (0@0)].! !

!methodRemoval: TerniLapilliState class #isValid: stamp: 'JEA 11/2/2020 14:41:09'!
isValid: aPosition

	^aPosition <= (2@2) and: [aPosition >= (0@0)].!
!TerniLapilliState methodsFor: 'playing - private' stamp: 'JEA 11/2/2020 14:41:34' prior: 50884339!
canPlayAt: aPosition

	(TerniLapilli isValid: aPosition) ifFalse: [ self error: self class invalidPositionDescription. ].
	
	(self isOccupied: aPosition) ifTrue: [ self error: self class positionOccupiedDescription. ].! !

!methodRemoval: PlacingChips #putXAt: stamp: 'JEA 11/2/2020 14:43:18'!
putXAt: aPosition
	
	self subclassResponsibility.!
!PlacingChips methodsFor: 'playing' stamp: 'JEA 11/2/2020 14:43:29' overrides: 50883679!
putXAt: aPosition
	
	self canPlayAt: aPosition.

	isXPlaying ifFalse: [ self error: self class notYourTurnDescription. ].
	
	chipsXPlayed add: aPosition.
	isXPlaying := isXPlaying not.! !
!PlacingChips methodsFor: 'playing' stamp: 'JEA 11/2/2020 14:44:21' prior: 50884283 overrides: 50883656!
putOAt: aPosition
	
	self canPlayAt: aPosition.

	isXPlaying ifTrue: [ self error: self class notYourTurnDescription. ].
	
	chipsOPlayed add: aPosition.
	
	isXPlaying := isXPlaying not.! !
!PlacingChips methodsFor: 'playing' stamp: 'JEA 11/2/2020 14:44:43' prior: 50884384 overrides: 50883656!
putOAt: aPosition
	
	self canPlayAt: aPosition.

	isXPlaying ifTrue: [ self error: self class notYourTurnDescription. ].
	
	chipsOPlayed add: aPosition.
	isXPlaying := isXPlaying not.! !
!PlacingChips methodsFor: 'playing' stamp: 'JEA 11/2/2020 14:45:37' prior: 50884374 overrides: 50883679!
putXAt: aPosition
	
	self canPlayAt: aPosition.

	isXPlaying ifFalse: [ self error: self class notYourTurnDescription. ].
	
	chipsXPlayed add: aPosition.
	isXPlaying := isXPlaying not.
	
	"chequear si gana"
	
	^self.! !
!PlacingChips methodsFor: 'playing' stamp: 'JEA 11/2/2020 14:46:13' prior: 50884404 overrides: 50883679!
putXAt: aPosition
	
	self canPlayAt: aPosition.

	isXPlaying ifFalse: [ self error: self class notYourTurnDescription. ].
	
	chipsXPlayed add: aPosition.
	isXPlaying := isXPlaying not.
	
	
	
	^self.! !
!PlacingChips methodsFor: 'playing' stamp: 'JEA 11/2/2020 14:46:57' prior: 50884415 overrides: 50883679!
putXAt: aPosition
	
	self canPlayAt: aPosition.

	isXPlaying ifFalse: [ self error: self class notYourTurnDescription. ].
	
	chipsXPlayed add: aPosition.
	isXPlaying := isXPlaying not.
	
	self hasXWon ifTrue: [^GameOver new].
	
	^self.! !
!PlacingChips methodsFor: 'playing' stamp: 'JEA 11/2/2020 14:46:59' prior: 50884425 overrides: 50883679!
putXAt: aPosition
	
	self canPlayAt: aPosition.

	isXPlaying ifFalse: [ self error: self class notYourTurnDescription. ].
	
	chipsXPlayed add: aPosition.
	isXPlaying := isXPlaying not.
	
	self hasXWon ifTrue: [^GameOver new].
	^self.! !
!PlacingChips methodsFor: 'playing' stamp: 'JEA 11/2/2020 14:48:03' prior: 50884436 overrides: 50883679!
putXAt: aPosition
	
	self canPlayAt: aPosition.

	isXPlaying ifFalse: [ self error: self class notYourTurnDescription. ].
	
	chipsXPlayed add: aPosition.
	isXPlaying := isXPlaying not.
	
	self hasXWon ifTrue: [ ^GameOver chipsX: chipsXPlayed chipsO: chipsOPlayed turn: isXPlaying ].
	^self.! !
!PlacingChips methodsFor: 'playing' stamp: 'JEA 11/2/2020 14:48:12' prior: 50884447 overrides: 50883679!
putXAt: aPosition
	
	self canPlayAt: aPosition.

	isXPlaying ifFalse: [ self error: self class notYourTurnDescription. ].
	
	chipsXPlayed add: aPosition.
	isXPlaying := isXPlaying not.
	
	self hasXWon ifTrue: [ ^GameOver withChipsX: chipsXPlayed chipsO: chipsOPlayed turn: isXPlaying ].
	^self.! !
!PlacingChips methodsFor: 'playing' stamp: 'JEA 11/2/2020 14:50:11' prior: 50884394 overrides: 50883656!
putOAt: aPosition
	
	self canPlayAt: aPosition.

	isXPlaying ifTrue: [ self error: self class notYourTurnDescription. ].
	
	chipsOPlayed add: aPosition.
	isXPlaying := isXPlaying not.
	
	self hasOWon ifTrue: [ ^GameOver withChipsX: chipsXPlayed chipsO: chipsOPlayed turn: isXPlaying ].
	self amountOfChipsOPlayed > 3 ifTrue: [ ^self nextMovingChips ].
	^self.! !
!PlacingChips methodsFor: 'playing' stamp: 'JEA 11/2/2020 14:50:32' prior: 50884473 overrides: 50883656!
putOAt: aPosition
	
	self canPlayAt: aPosition.

	isXPlaying ifTrue: [ self error: self class notYourTurnDescription. ].
	
	chipsOPlayed add: aPosition.
	isXPlaying := isXPlaying not.
	
	self hasOWon ifTrue: [ ^self gameOver ].
	self amountOfChipsOPlayed > 3 ifTrue: [ ^self nextMovingChips ].
	^self.! !
!PlacingChips methodsFor: 'playing' stamp: 'JEA 11/2/2020 14:50:40' prior: 50884488 overrides: 50883656!
putOAt: aPosition
	
	self canPlayAt: aPosition.

	isXPlaying ifTrue: [ self error: self class notYourTurnDescription. ].
	
	chipsOPlayed add: aPosition.
	isXPlaying := isXPlaying not.
	
	self hasOWon ifTrue: [ ^self gameOver. ].
	self amountOfChipsOPlayed > 3 ifTrue: [ ^self movingChips. ].
	^self.! !
!PlacingChips methodsFor: 'playing' stamp: 'JEA 11/2/2020 14:51:23' prior: 50884501 overrides: 50883656!
putOAt: aPosition
	
	self canPlayAt: aPosition.

	isXPlaying ifTrue: [ self error: self class notYourTurnDescription. ].
	
	chipsOPlayed add: aPosition.
	isXPlaying := isXPlaying not.
	
	self hasOWon ifTrue: [ ^self changeState: GameOver. ].
	self amountOfChipsOPlayed > 3 ifTrue: [ ^self changeState: MovingChips. ].
	^self.! !
!TerniLapilliState methodsFor: 'state changes' stamp: 'JEA 11/2/2020 14:53:04'!
changeState: aKindOfState

	^aKindOfState newWithXChips: chipsXPlayed OChips: chipsOPlayed turn: isXPlaying.! !
!TerniLapilliState methodsFor: 'state changes' stamp: 'JEA 11/2/2020 14:53:21' prior: 50884527!
changeState: aKindOfState

	^aKindOfState newWithXChips: chipsXPlayed OChips: chipsOPlayed turn: isXPlaying.! !
!TerniLapilliState methodsFor: 'state changes' stamp: 'JEA 11/2/2020 14:53:53' prior: 50884534!
changeState: aKindOfState

	^aKindOfState new newWithXChips: chipsXPlayed OChips: chipsOPlayed turn: isXPlaying.! !
!TerniLapilliState methodsFor: 'state changes' stamp: 'JEA 11/2/2020 14:53:57' prior: 50884541!
changeState: aKindOfState

	^aKindOfState newWithXChips: chipsXPlayed OChips: chipsOPlayed turn: isXPlaying.! !
!TerniLapilliState class methodsFor: 'instance creation' stamp: 'JEA 11/2/2020 14:54:26'!
 newWithXChips: chipsXPlayed OChips: chipsOPlayed turn: isXPlaying.

	^self basicNew initializeWithXChips: chipsXPlayed OChips: chipsOPlayed turn: isXPlaying.! !
!TerniLapilliState methodsFor: 'nil' stamp: 'JEA 11/2/2020 14:55:06'!
initializeWithXChips: chipsPlayedX OChips: chipsPlayedO turn: isPlayingX.

	! !
!TerniLapilliState methodsFor: 'as yet unclassified' stamp: 'JEA 11/2/2020 14:55:11' prior: 50884563!
initializeWithXChips: chipsPlayedX OChips: chipsPlayedO turn: isPlayingX.

	

	! !
!TerniLapilliState methodsFor: 'initialization' stamp: 'JEA 11/2/2020 14:55:57' prior: 50884569!
initializeWithXChips: chipsPlayedX OChips: chipsPlayedO turn: isPlayingX.

	chipsXPlayed := chipsPlayedX.
	chipsXPlayed := chipsPlayedO.
	chipsXPlayed := isPlayingX.
	! !
!TerniLapilliState methodsFor: 'initialization' stamp: 'JEA 11/2/2020 14:56:01' prior: 50884575!
initializeWithXChips: chipsPlayedX OChips: chipsPlayedO turn: isPlayingX.

	chipsXPlayed := chipsPlayedX.
	chipsXPlayed := chipsPlayedO.
	chipsXPlayed := isPlayingX.! !
!TerniLapilliState methodsFor: 'initialization' stamp: 'JEA 11/2/2020 14:56:29' prior: 50884584!
initializeWithXChips: chipsPlayedX OChips: chipsPlayedO turn: isPlayingX.

	chipsXPlayed := chipsPlayedX.
	chipsOPlayed := chipsPlayedO.
	isXPlaying := isPlayingX.! !
!TerniLapilliState methodsFor: 'initialization' stamp: 'JEA 11/2/2020 14:56:42' prior: 50884593!
initializeWithXChips: chipsPlayedX OChips: chipsPlayedO turn: isPlayingX.

	self subclassResponsibility.! !
!TerniLapilliState methodsFor: 'initialization' stamp: 'JEA 11/2/2020 14:57:07' prior: 50884602!
initializeWithXChips: chipsPlayedX OChips: chipsPlayedO turn: isPlayingX.

	chipsXPlayed := chipsPlayedX.
	chipsOPlayed := chipsPlayedO.
	isXPlaying := isPlayingX.! !

!methodRemoval: TerniLapilliState class #newWithXChips:OChips:turn: stamp: 'JEA 11/2/2020 14:57:31'!
newWithXChips: chipsXPlayed OChips: chipsOPlayed turn: isXPlaying.

	^self basicNew initializeWithXChips: chipsXPlayed OChips: chipsOPlayed turn: isXPlaying.!
!GameOver class methodsFor: 'instance creation' stamp: 'JEA 11/2/2020 14:57:40'!
newWithXChips: chipsXPlayed OChips: chipsOPlayed turn: isXPlaying.

	^self basicNew initializeWithXChips: chipsXPlayed OChips: chipsOPlayed turn: isXPlaying.! !
!MovingChips class methodsFor: 'instance creation' stamp: 'JEA 11/2/2020 14:57:46'!
newWithXChips: chipsXPlayed OChips: chipsOPlayed turn: isXPlaying.

	^self basicNew initializeWithXChips: chipsXPlayed OChips: chipsOPlayed turn: isXPlaying.! !
!PlacingChips methodsFor: 'playing' stamp: 'JEA 11/2/2020 14:58:27' prior: 50884460 overrides: 50883679!
putXAt: aPosition
	
	self canPlayAt: aPosition.

	isXPlaying ifFalse: [ self error: self class notYourTurnDescription. ].
	
	chipsXPlayed add: aPosition.
	isXPlaying := isXPlaying not.
	
	self hasXWon ifTrue: [ ^GameOver newWithXChips: chipsXPlayed OChips: chipsOPlayed turn: isXPlaying. ].
	^self.! !
!PlacingChips methodsFor: 'playing' stamp: 'JEA 11/2/2020 14:58:49' prior: 50884642 overrides: 50883679!
putXAt: aPosition
	
	self canPlayAt: aPosition.

	isXPlaying ifFalse: [ self error: self class notYourTurnDescription. ].
	
	chipsXPlayed add: aPosition.
	isXPlaying := isXPlaying not.
	
	self hasXWon ifTrue: [ ^self changeState: GameOver. ].
	^self.! !
!MovingChips methodsFor: 'playing' stamp: 'JEA 11/2/2020 15:01:19' prior: 50883588 overrides: 50883604!
moveOFrom: currentPosition to: newPosition

	self canPlayAt: newPosition.

	isXPlaying ifTrue: [ self error: self class notYourTurnDescription. ].

	(currentPosition eightNeighbors includes: newPosition)
		ifFalse: [ self error: self class cantMoveToNotNeighborPositionDescription. ].
		
	chipsOPlayed remove: currentPosition.
	chipsOPlayed add: newPosition.
	isXPlaying := isXPlaying not.! !
!MovingChips methodsFor: 'playing' stamp: 'JEA 11/2/2020 15:01:35' prior: 50884667 overrides: 50883604!
moveOFrom: currentPosition to: newPosition

	self canPlayAt: newPosition.

	isXPlaying ifTrue: [ self error: self class notYourTurnDescription. ].

	(currentPosition eightNeighbors includes: newPosition)
		ifFalse: [ self error: self class cantMoveToNotNeighborPositionDescription. ].
		
	chipsOPlayed remove: currentPosition.
	chipsOPlayed add: newPosition.
	isXPlaying := isXPlaying not.
	
	
	^self.! !
!MovingChips methodsFor: 'playing' stamp: 'JEA 11/2/2020 15:01:53' prior: 50884683 overrides: 50883604!
moveOFrom: currentPosition to: newPosition

	self canPlayAt: newPosition.

	isXPlaying ifTrue: [ self error: self class notYourTurnDescription. ].

	(currentPosition eightNeighbors includes: newPosition)
		ifFalse: [ self error: self class cantMoveToNotNeighborPositionDescription. ].
		
	chipsOPlayed remove: currentPosition.
	chipsOPlayed add: newPosition.
	isXPlaying := isXPlaying not.
	
	self hasXWon ifTrue: [ ^self changeState: GameOver. ].
	^self.! !
!MovingChips methodsFor: 'playing' stamp: 'JEA 11/2/2020 15:02:14' prior: 50883616 overrides: 50883632!
moveXFrom: currentPosition to: newPosition

	self canPlayAt: newPosition.

	isXPlaying ifTrue: [ self error: self class notYourTurnDescription. ].

	(currentPosition eightNeighbors includes: newPosition)
		ifFalse: [ self error: self class cantMoveToNotNeighborPositionDescription. ].
		
	chipsOPlayed remove: currentPosition.
	chipsOPlayed add: newPosition.
	isXPlaying := isXPlaying not.
	
	self hasXWon ifTrue: [ ^self changeState: GameOver. ].
	^self.! !
!MovingChips methodsFor: 'playing' stamp: 'JEA 11/2/2020 15:02:20' prior: 50884699 overrides: 50883604!
moveOFrom: currentPosition to: newPosition

	self canPlayAt: newPosition.

	isXPlaying ifTrue: [ self error: self class notYourTurnDescription. ].

	(currentPosition eightNeighbors includes: newPosition)
		ifFalse: [ self error: self class cantMoveToNotNeighborPositionDescription. ].
		
	chipsOPlayed remove: currentPosition.
	chipsOPlayed add: newPosition.
	isXPlaying := isXPlaying not.
	
	self hasOWon ifTrue: [ ^self changeState: GameOver. ].
	^self.! !
!MovingChips methodsFor: 'playing' stamp: 'JEA 11/2/2020 15:02:29' prior: 50884717 overrides: 50883632!
moveXFrom: currentPosition to: newPosition

	self canPlayAt: newPosition.

	isXPlaying ifFalse: [ self error: self class notYourTurnDescription. ].

	(currentPosition eightNeighbors includes: newPosition)
		ifFalse: [ self error: self class cantMoveToNotNeighborPositionDescription. ].
		
	chipsOPlayed remove: currentPosition.
	chipsOPlayed add: newPosition.
	isXPlaying := isXPlaying not.
	
	self hasXWon ifTrue: [ ^self changeState: GameOver. ].
	^self.! !
!MovingChips methodsFor: 'playing' stamp: 'JEA 11/2/2020 15:02:35' prior: 50884753 overrides: 50883632!
moveXFrom: currentPosition to: newPosition

	self canPlayAt: newPosition.

	isXPlaying ifFalse: [ self error: self class notYourTurnDescription. ].

	(currentPosition eightNeighbors includes: newPosition)
		ifFalse: [ self error: self class cantMoveToNotNeighborPositionDescription. ].
		
	chipsXPlayed remove: currentPosition.
	chipsXPlayed add: newPosition.
	isXPlaying := isXPlaying not.
	
	self hasXWon ifTrue: [ ^self changeState: GameOver. ].
	^self.! !
!TerniLapilli methodsFor: 'testing' stamp: 'JEA 11/2/2020 15:03:14' prior: 50882029!
amountOfChipsOPlayed

	^state amountOfChipsOPlayed.! !
!TerniLapilli methodsFor: 'testing' stamp: 'JEA 11/2/2020 15:03:20' prior: 50882034!
amountOfChipsXPlayed

	^state amountOfChipsXPlayed.! !
!TerniLapilli methodsFor: 'testing' stamp: 'JEA 11/2/2020 15:03:25' prior: 50883416!
hasOWon

	^state hasOWon.! !
!TerniLapilli methodsFor: 'testing' stamp: 'JEA 11/2/2020 15:03:32' prior: 50883421!
hasXWon

	^state hasXWon.! !
!TerniLapilli methodsFor: 'testing' stamp: 'JEA 11/2/2020 15:03:42' prior: 50882127!
isOAt: aPosition

	^state isOAt: aPosition.! !
!TerniLapilli methodsFor: 'testing' stamp: 'JEA 11/2/2020 15:03:48' prior: 50882132!
isXAt: aPosition

	^state isXAt: aPosition.! !
!TerniLapilli methodsFor: 'testing' stamp: 'JEA 11/2/2020 15:03:57' prior: 50880806!
isOPlaying

	^state isOPlaying.! !
!TerniLapilli methodsFor: 'testing' stamp: 'JEA 11/2/2020 15:04:03' prior: 50880820!
isXPlaying

	^state isXPlaying.! !

!methodRemoval: TerniLapilli #isOccupied: stamp: 'JEA 11/2/2020 15:04:18'!
isOccupied: aPosition

	^(self isXAt: aPosition) or: [ self isOAt: aPosition ].!

!methodRemoval: TerniLapilli #canPlayAt: stamp: 'JEA 11/2/2020 15:04:50'!
canPlayAt: aPosition

	(self class isValid: aPosition) ifFalse: [ self error: self class invalidPositionDescription. ].
	
	(self isOccupied: aPosition) ifTrue: [ self error: self class positionOccupiedDescription. ].!
!TerniLapilli methodsFor: 'playing' stamp: 'JEA 11/2/2020 15:05:05' prior: 50884182!
moveOFrom: currentPosition to: newPosition

	state moveOFrom: currentPosition to: newPosition.! !
!TerniLapilli methodsFor: 'playing' stamp: 'JEA 11/2/2020 15:05:11' prior: 50884115!
moveXFrom: currentPosition to: newPosition

	state moveXFrom: currentPosition to: newPosition.! !
!TerniLapilli methodsFor: 'playing' stamp: 'JEA 11/2/2020 15:05:17' prior: 50884202!
putOAt: aPosition

	state putOAt: aPosition.
		! !
!TerniLapilli methodsFor: 'playing' stamp: 'JEA 11/2/2020 15:05:20' prior: 50884103!
putXAt: aPosition

	state putOAt: aPosition.! !
!TerniLapilli methodsFor: 'playing' stamp: 'JEA 11/2/2020 15:05:22' prior: 50884856!
putXAt: aPosition

	state putXAt: aPosition.! !

!testRun: #TerniLapilliTest #test01XPlaysFirst stamp: 'JEA 11/2/2020 15:05:23'!
PASSED!

!testRun: #TerniLapilliTest #test02XCanPlayItsTurn stamp: 'JEA 11/2/2020 15:05:23'!
PASSED!

!testRun: #TerniLapilliTest #test03OPlaysAfterX stamp: 'JEA 11/2/2020 15:05:23'!
PASSED!

!testRun: #TerniLapilliTest #test04OCanPlayItsTurn stamp: 'JEA 11/2/2020 15:05:23'!
PASSED!

!testRun: #TerniLapilliTest #test05XPlaysAfterO stamp: 'JEA 11/2/2020 15:05:23'!
PASSED!

!testRun: #TerniLapilliTest #test06XCantPlayOsTurn stamp: 'JEA 11/2/2020 15:05:23'!
FAILURE!

!testRun: #TerniLapilliTest #test07OCantPlayXsTurn stamp: 'JEA 11/2/2020 15:05:23'!
FAILURE!

!testRun: #TerniLapilliTest #test08PositionsDontOverlap stamp: 'JEA 11/2/2020 15:05:23'!
PASSED!

!testRun: #TerniLapilliTest #test09PositionsAreOccupied stamp: 'JEA 11/2/2020 15:05:23'!
ERROR!

!testRun: #TerniLapilliTest #test10OCantPlayInOccupiedPosition stamp: 'JEA 11/2/2020 15:05:23'!
PASSED!

!testRun: #TerniLapilliTest #test11XCantPlayInOccupiedPosition stamp: 'JEA 11/2/2020 15:05:23'!
PASSED!

!testRun: #TerniLapilliTest #test12XAndOAreAtEveryPositionPlayed stamp: 'JEA 11/2/2020 15:05:23'!
PASSED!

!testRun: #TerniLapilliTest #test13XCantPlayInInvalidPosition stamp: 'JEA 11/2/2020 15:05:23'!
PASSED!

!testRun: #TerniLapilliTest #test14OCantPlayInInvalidPosition stamp: 'JEA 11/2/2020 15:05:23'!
PASSED!

!testRun: #TerniLapilliTest #test15CantPlaceMoreThan3Chips stamp: 'JEA 11/2/2020 15:05:23'!
FAILURE!

!testRun: #TerniLapilliTest #test16XCantMoveUntilAllChipsArePlaced stamp: 'JEA 11/2/2020 15:05:23'!
PASSED!

!testRun: #TerniLapilliTest #test17OCantMoveUntilAllChipsArePlaced stamp: 'JEA 11/2/2020 15:05:23'!
PASSED!

!testRun: #TerniLapilliTest #test18XCanMoveAfterAllChipsArePlaced stamp: 'JEA 11/2/2020 15:05:23'!
ERROR!

!testRun: #TerniLapilliTest #test19OCanMoveAfterAllChipsArePlaced stamp: 'JEA 11/2/2020 15:05:23'!
ERROR!

!testRun: #TerniLapilliTest #test20XCantMoveInOsTurn stamp: 'JEA 11/2/2020 15:05:23'!
ERROR!

!testRun: #TerniLapilliTest #test21OCantMoveInXsTurn stamp: 'JEA 11/2/2020 15:05:23'!
FAILURE!

!testRun: #TerniLapilliTest #test22XCantMoveToOccupiedPosition stamp: 'JEA 11/2/2020 15:05:23'!
PASSED!

!testRun: #TerniLapilliTest #test23XCantMoveToInvalidPosition stamp: 'JEA 11/2/2020 15:05:23'!
PASSED!

!testRun: #TerniLapilliTest #test24XCantMoveToNotNeighborPosition stamp: 'JEA 11/2/2020 15:05:23'!
PASSED!

!testRun: #TerniLapilliTest #test25XCanWin stamp: 'JEA 11/2/2020 15:05:23'!
PASSED!

!testRun: #TerniLapilliTest #test26OCanWin stamp: 'JEA 11/2/2020 15:05:23'!
PASSED!

!testRun: #TerniLapilliTest #test27CantPlayAfterXWins stamp: 'JEA 11/2/2020 15:05:23'!
FAILURE!

!testRun: #TerniLapilliTest #test28CantMoveAfterXWins stamp: 'JEA 11/2/2020 15:05:23'!
ERROR!

!testRun: #TerniLapilliTest #test29CantMoveAfterOWins stamp: 'JEA 11/2/2020 15:05:23'!
PASSED!

!testRun: #TerniLapilliTest #test01XPlaysFirst stamp: 'JEA 11/2/2020 15:05:32'!
PASSED!

!testRun: #TerniLapilliTest #test02XCanPlayItsTurn stamp: 'JEA 11/2/2020 15:05:32'!
PASSED!

!testRun: #TerniLapilliTest #test03OPlaysAfterX stamp: 'JEA 11/2/2020 15:05:32'!
PASSED!

!testRun: #TerniLapilliTest #test04OCanPlayItsTurn stamp: 'JEA 11/2/2020 15:05:32'!
PASSED!

!testRun: #TerniLapilliTest #test05XPlaysAfterO stamp: 'JEA 11/2/2020 15:05:33'!
PASSED!

!testRun: #TerniLapilliTest #test06XCantPlayOsTurn stamp: 'JEA 11/2/2020 15:05:33'!
FAILURE!

!testRun: #TerniLapilliTest #test07OCantPlayXsTurn stamp: 'JEA 11/2/2020 15:05:33'!
FAILURE!

!testRun: #TerniLapilliTest #test08PositionsDontOverlap stamp: 'JEA 11/2/2020 15:05:33'!
PASSED!

!testRun: #TerniLapilliTest #test09PositionsAreOccupied stamp: 'JEA 11/2/2020 15:05:33'!
ERROR!

!testRun: #TerniLapilliTest #test10OCantPlayInOccupiedPosition stamp: 'JEA 11/2/2020 15:05:33'!
PASSED!

!testRun: #TerniLapilliTest #test11XCantPlayInOccupiedPosition stamp: 'JEA 11/2/2020 15:05:33'!
PASSED!

!testRun: #TerniLapilliTest #test12XAndOAreAtEveryPositionPlayed stamp: 'JEA 11/2/2020 15:05:33'!
PASSED!

!testRun: #TerniLapilliTest #test13XCantPlayInInvalidPosition stamp: 'JEA 11/2/2020 15:05:33'!
PASSED!

!testRun: #TerniLapilliTest #test14OCantPlayInInvalidPosition stamp: 'JEA 11/2/2020 15:05:33'!
PASSED!

!testRun: #TerniLapilliTest #test15CantPlaceMoreThan3Chips stamp: 'JEA 11/2/2020 15:05:33'!
FAILURE!

!testRun: #TerniLapilliTest #test16XCantMoveUntilAllChipsArePlaced stamp: 'JEA 11/2/2020 15:05:33'!
PASSED!

!testRun: #TerniLapilliTest #test17OCantMoveUntilAllChipsArePlaced stamp: 'JEA 11/2/2020 15:05:33'!
PASSED!

!testRun: #TerniLapilliTest #test18XCanMoveAfterAllChipsArePlaced stamp: 'JEA 11/2/2020 15:05:33'!
ERROR!

!testRun: #TerniLapilliTest #test19OCanMoveAfterAllChipsArePlaced stamp: 'JEA 11/2/2020 15:05:33'!
ERROR!

!testRun: #TerniLapilliTest #test20XCantMoveInOsTurn stamp: 'JEA 11/2/2020 15:05:33'!
ERROR!

!testRun: #TerniLapilliTest #test21OCantMoveInXsTurn stamp: 'JEA 11/2/2020 15:05:33'!
FAILURE!

!testRun: #TerniLapilliTest #test22XCantMoveToOccupiedPosition stamp: 'JEA 11/2/2020 15:05:33'!
PASSED!

!testRun: #TerniLapilliTest #test23XCantMoveToInvalidPosition stamp: 'JEA 11/2/2020 15:05:33'!
PASSED!

!testRun: #TerniLapilliTest #test24XCantMoveToNotNeighborPosition stamp: 'JEA 11/2/2020 15:05:33'!
PASSED!

!testRun: #TerniLapilliTest #test25XCanWin stamp: 'JEA 11/2/2020 15:05:33'!
PASSED!

!testRun: #TerniLapilliTest #test26OCanWin stamp: 'JEA 11/2/2020 15:05:33'!
PASSED!

!testRun: #TerniLapilliTest #test27CantPlayAfterXWins stamp: 'JEA 11/2/2020 15:05:33'!
FAILURE!

!testRun: #TerniLapilliTest #test28CantMoveAfterXWins stamp: 'JEA 11/2/2020 15:05:33'!
ERROR!

!testRun: #TerniLapilliTest #test29CantMoveAfterOWins stamp: 'JEA 11/2/2020 15:05:33'!
PASSED!
!TerniLapilli methodsFor: 'testing' stamp: 'JEA 11/2/2020 15:05:57'!
isOccupied: aPosition

	^state isOccupied.! !
!TerniLapilli methodsFor: 'testing' stamp: 'JEA 11/2/2020 15:06:08' prior: 50885044!
isOccupied: aPosition

	^state isOccupied: aPosition.! !

!testRun: #TerniLapilliTest #test01XPlaysFirst stamp: 'JEA 11/2/2020 15:06:09'!
PASSED!

!testRun: #TerniLapilliTest #test02XCanPlayItsTurn stamp: 'JEA 11/2/2020 15:06:09'!
PASSED!

!testRun: #TerniLapilliTest #test03OPlaysAfterX stamp: 'JEA 11/2/2020 15:06:09'!
PASSED!

!testRun: #TerniLapilliTest #test04OCanPlayItsTurn stamp: 'JEA 11/2/2020 15:06:09'!
PASSED!

!testRun: #TerniLapilliTest #test05XPlaysAfterO stamp: 'JEA 11/2/2020 15:06:09'!
PASSED!

!testRun: #TerniLapilliTest #test06XCantPlayOsTurn stamp: 'JEA 11/2/2020 15:06:09'!
FAILURE!

!testRun: #TerniLapilliTest #test07OCantPlayXsTurn stamp: 'JEA 11/2/2020 15:06:09'!
FAILURE!

!testRun: #TerniLapilliTest #test08PositionsDontOverlap stamp: 'JEA 11/2/2020 15:06:09'!
PASSED!

!testRun: #TerniLapilliTest #test09PositionsAreOccupied stamp: 'JEA 11/2/2020 15:06:09'!
PASSED!

!testRun: #TerniLapilliTest #test10OCantPlayInOccupiedPosition stamp: 'JEA 11/2/2020 15:06:09'!
PASSED!

!testRun: #TerniLapilliTest #test11XCantPlayInOccupiedPosition stamp: 'JEA 11/2/2020 15:06:09'!
PASSED!

!testRun: #TerniLapilliTest #test12XAndOAreAtEveryPositionPlayed stamp: 'JEA 11/2/2020 15:06:09'!
PASSED!

!testRun: #TerniLapilliTest #test13XCantPlayInInvalidPosition stamp: 'JEA 11/2/2020 15:06:09'!
PASSED!

!testRun: #TerniLapilliTest #test14OCantPlayInInvalidPosition stamp: 'JEA 11/2/2020 15:06:09'!
PASSED!

!testRun: #TerniLapilliTest #test15CantPlaceMoreThan3Chips stamp: 'JEA 11/2/2020 15:06:09'!
FAILURE!

!testRun: #TerniLapilliTest #test16XCantMoveUntilAllChipsArePlaced stamp: 'JEA 11/2/2020 15:06:09'!
PASSED!

!testRun: #TerniLapilliTest #test17OCantMoveUntilAllChipsArePlaced stamp: 'JEA 11/2/2020 15:06:09'!
PASSED!

!testRun: #TerniLapilliTest #test18XCanMoveAfterAllChipsArePlaced stamp: 'JEA 11/2/2020 15:06:09'!
ERROR!

!testRun: #TerniLapilliTest #test19OCanMoveAfterAllChipsArePlaced stamp: 'JEA 11/2/2020 15:06:09'!
ERROR!

!testRun: #TerniLapilliTest #test20XCantMoveInOsTurn stamp: 'JEA 11/2/2020 15:06:09'!
ERROR!

!testRun: #TerniLapilliTest #test21OCantMoveInXsTurn stamp: 'JEA 11/2/2020 15:06:09'!
FAILURE!

!testRun: #TerniLapilliTest #test22XCantMoveToOccupiedPosition stamp: 'JEA 11/2/2020 15:06:09'!
PASSED!

!testRun: #TerniLapilliTest #test23XCantMoveToInvalidPosition stamp: 'JEA 11/2/2020 15:06:09'!
PASSED!

!testRun: #TerniLapilliTest #test24XCantMoveToNotNeighborPosition stamp: 'JEA 11/2/2020 15:06:09'!
PASSED!

!testRun: #TerniLapilliTest #test25XCanWin stamp: 'JEA 11/2/2020 15:06:09'!
PASSED!

!testRun: #TerniLapilliTest #test26OCanWin stamp: 'JEA 11/2/2020 15:06:09'!
PASSED!

!testRun: #TerniLapilliTest #test27CantPlayAfterXWins stamp: 'JEA 11/2/2020 15:06:09'!
FAILURE!

!testRun: #TerniLapilliTest #test28CantMoveAfterXWins stamp: 'JEA 11/2/2020 15:06:09'!
ERROR!

!testRun: #TerniLapilliTest #test29CantMoveAfterOWins stamp: 'JEA 11/2/2020 15:06:09'!
PASSED!

!testRun: #TerniLapilliTest #test18XCanMoveAfterAllChipsArePlaced stamp: 'JEA 11/2/2020 15:06:21'!
ERROR!
!PlacingChips methodsFor: 'playing' stamp: 'JEA 11/2/2020 15:07:21' prior: 50884514 overrides: 50883656!
putOAt: aPosition
	
	self canPlayAt: aPosition.

	isXPlaying ifTrue: [ self error: self class notYourTurnDescription. ].
	
	chipsOPlayed add: aPosition.
	isXPlaying := isXPlaying not.
	
	self hasOWon ifTrue: [ ^self changeState: GameOver. ].
	self amountOfChipsOPlayed = 3 ifTrue: [ ^self changeState: MovingChips. ].
	^self.! !

!testRun: #TerniLapilliTest #test01XPlaysFirst stamp: 'JEA 11/2/2020 15:07:25'!
PASSED!

!testRun: #TerniLapilliTest #test02XCanPlayItsTurn stamp: 'JEA 11/2/2020 15:07:25'!
PASSED!

!testRun: #TerniLapilliTest #test03OPlaysAfterX stamp: 'JEA 11/2/2020 15:07:25'!
PASSED!

!testRun: #TerniLapilliTest #test04OCanPlayItsTurn stamp: 'JEA 11/2/2020 15:07:25'!
PASSED!

!testRun: #TerniLapilliTest #test05XPlaysAfterO stamp: 'JEA 11/2/2020 15:07:25'!
PASSED!

!testRun: #TerniLapilliTest #test06XCantPlayOsTurn stamp: 'JEA 11/2/2020 15:07:25'!
FAILURE!

!testRun: #TerniLapilliTest #test07OCantPlayXsTurn stamp: 'JEA 11/2/2020 15:07:25'!
FAILURE!

!testRun: #TerniLapilliTest #test08PositionsDontOverlap stamp: 'JEA 11/2/2020 15:07:25'!
PASSED!

!testRun: #TerniLapilliTest #test09PositionsAreOccupied stamp: 'JEA 11/2/2020 15:07:25'!
PASSED!

!testRun: #TerniLapilliTest #test10OCantPlayInOccupiedPosition stamp: 'JEA 11/2/2020 15:07:25'!
PASSED!

!testRun: #TerniLapilliTest #test11XCantPlayInOccupiedPosition stamp: 'JEA 11/2/2020 15:07:25'!
PASSED!

!testRun: #TerniLapilliTest #test12XAndOAreAtEveryPositionPlayed stamp: 'JEA 11/2/2020 15:07:25'!
PASSED!

!testRun: #TerniLapilliTest #test13XCantPlayInInvalidPosition stamp: 'JEA 11/2/2020 15:07:25'!
PASSED!

!testRun: #TerniLapilliTest #test14OCantPlayInInvalidPosition stamp: 'JEA 11/2/2020 15:07:25'!
PASSED!

!testRun: #TerniLapilliTest #test15CantPlaceMoreThan3Chips stamp: 'JEA 11/2/2020 15:07:25'!
FAILURE!

!testRun: #TerniLapilliTest #test16XCantMoveUntilAllChipsArePlaced stamp: 'JEA 11/2/2020 15:07:25'!
PASSED!

!testRun: #TerniLapilliTest #test17OCantMoveUntilAllChipsArePlaced stamp: 'JEA 11/2/2020 15:07:25'!
PASSED!

!testRun: #TerniLapilliTest #test18XCanMoveAfterAllChipsArePlaced stamp: 'JEA 11/2/2020 15:07:25'!
ERROR!

!testRun: #TerniLapilliTest #test19OCanMoveAfterAllChipsArePlaced stamp: 'JEA 11/2/2020 15:07:25'!
ERROR!

!testRun: #TerniLapilliTest #test20XCantMoveInOsTurn stamp: 'JEA 11/2/2020 15:07:25'!
ERROR!

!testRun: #TerniLapilliTest #test21OCantMoveInXsTurn stamp: 'JEA 11/2/2020 15:07:25'!
FAILURE!

!testRun: #TerniLapilliTest #test22XCantMoveToOccupiedPosition stamp: 'JEA 11/2/2020 15:07:25'!
PASSED!

!testRun: #TerniLapilliTest #test23XCantMoveToInvalidPosition stamp: 'JEA 11/2/2020 15:07:25'!
PASSED!

!testRun: #TerniLapilliTest #test24XCantMoveToNotNeighborPosition stamp: 'JEA 11/2/2020 15:07:25'!
PASSED!

!testRun: #TerniLapilliTest #test25XCanWin stamp: 'JEA 11/2/2020 15:07:25'!
PASSED!

!testRun: #TerniLapilliTest #test26OCanWin stamp: 'JEA 11/2/2020 15:07:25'!
PASSED!

!testRun: #TerniLapilliTest #test27CantPlayAfterXWins stamp: 'JEA 11/2/2020 15:07:25'!
FAILURE!

!testRun: #TerniLapilliTest #test28CantMoveAfterXWins stamp: 'JEA 11/2/2020 15:07:25'!
ERROR!

!testRun: #TerniLapilliTest #test29CantMoveAfterOWins stamp: 'JEA 11/2/2020 15:07:25'!
PASSED!

!testRun: #TerniLapilliTest #test18XCanMoveAfterAllChipsArePlaced stamp: 'JEA 11/2/2020 15:07:28'!
ERROR!

aTerniLapilliGame!

TerniLapilli isWinningCombination: chipsOPlayed.!

self hasOWon!

self amountOfChipsOPlayed !
!TerniLapilli methodsFor: 'playing' stamp: 'JEA 11/2/2020 15:09:28' prior: 50884839!
moveOFrom: currentPosition to: newPosition

	state := state moveOFrom: currentPosition to: newPosition.! !
!TerniLapilli methodsFor: 'playing' stamp: 'JEA 11/2/2020 15:09:31' prior: 50884845!
moveXFrom: currentPosition to: newPosition

	state := state moveXFrom: currentPosition to: newPosition.! !
!TerniLapilli methodsFor: 'playing' stamp: 'JEA 11/2/2020 15:09:38' prior: 50884851!
putOAt: aPosition

	state := state putOAt: aPosition.
		! !
!TerniLapilli methodsFor: 'playing' stamp: 'JEA 11/2/2020 15:09:40' prior: 50884861!
putXAt: aPosition

	state := state putXAt: aPosition.! !

!testRun: #TerniLapilliTest #test01XPlaysFirst stamp: 'JEA 11/2/2020 15:09:42'!
PASSED!

!testRun: #TerniLapilliTest #test02XCanPlayItsTurn stamp: 'JEA 11/2/2020 15:09:42'!
PASSED!

!testRun: #TerniLapilliTest #test03OPlaysAfterX stamp: 'JEA 11/2/2020 15:09:42'!
PASSED!

!testRun: #TerniLapilliTest #test04OCanPlayItsTurn stamp: 'JEA 11/2/2020 15:09:42'!
PASSED!

!testRun: #TerniLapilliTest #test05XPlaysAfterO stamp: 'JEA 11/2/2020 15:09:42'!
PASSED!

!testRun: #TerniLapilliTest #test06XCantPlayOsTurn stamp: 'JEA 11/2/2020 15:09:42'!
FAILURE!

!testRun: #TerniLapilliTest #test07OCantPlayXsTurn stamp: 'JEA 11/2/2020 15:09:42'!
FAILURE!

!testRun: #TerniLapilliTest #test08PositionsDontOverlap stamp: 'JEA 11/2/2020 15:09:42'!
PASSED!

!testRun: #TerniLapilliTest #test09PositionsAreOccupied stamp: 'JEA 11/2/2020 15:09:42'!
PASSED!

!testRun: #TerniLapilliTest #test10OCantPlayInOccupiedPosition stamp: 'JEA 11/2/2020 15:09:42'!
PASSED!

!testRun: #TerniLapilliTest #test11XCantPlayInOccupiedPosition stamp: 'JEA 11/2/2020 15:09:42'!
PASSED!

!testRun: #TerniLapilliTest #test12XAndOAreAtEveryPositionPlayed stamp: 'JEA 11/2/2020 15:09:42'!
PASSED!

!testRun: #TerniLapilliTest #test13XCantPlayInInvalidPosition stamp: 'JEA 11/2/2020 15:09:42'!
PASSED!

!testRun: #TerniLapilliTest #test14OCantPlayInInvalidPosition stamp: 'JEA 11/2/2020 15:09:42'!
PASSED!

!testRun: #TerniLapilliTest #test15CantPlaceMoreThan3Chips stamp: 'JEA 11/2/2020 15:09:42'!
PASSED!

!testRun: #TerniLapilliTest #test16XCantMoveUntilAllChipsArePlaced stamp: 'JEA 11/2/2020 15:09:42'!
PASSED!

!testRun: #TerniLapilliTest #test17OCantMoveUntilAllChipsArePlaced stamp: 'JEA 11/2/2020 15:09:42'!
PASSED!

!testRun: #TerniLapilliTest #test18XCanMoveAfterAllChipsArePlaced stamp: 'JEA 11/2/2020 15:09:42'!
PASSED!

!testRun: #TerniLapilliTest #test19OCanMoveAfterAllChipsArePlaced stamp: 'JEA 11/2/2020 15:09:42'!
PASSED!

!testRun: #TerniLapilliTest #test20XCantMoveInOsTurn stamp: 'JEA 11/2/2020 15:09:42'!
FAILURE!

!testRun: #TerniLapilliTest #test21OCantMoveInXsTurn stamp: 'JEA 11/2/2020 15:09:42'!
FAILURE!

!testRun: #TerniLapilliTest #test22XCantMoveToOccupiedPosition stamp: 'JEA 11/2/2020 15:09:42'!
PASSED!

!testRun: #TerniLapilliTest #test23XCantMoveToInvalidPosition stamp: 'JEA 11/2/2020 15:09:42'!
PASSED!

!testRun: #TerniLapilliTest #test24XCantMoveToNotNeighborPosition stamp: 'JEA 11/2/2020 15:09:42'!
PASSED!

!testRun: #TerniLapilliTest #test25XCanWin stamp: 'JEA 11/2/2020 15:09:42'!
PASSED!

!testRun: #TerniLapilliTest #test26OCanWin stamp: 'JEA 11/2/2020 15:09:42'!
PASSED!

!testRun: #TerniLapilliTest #test27CantPlayAfterXWins stamp: 'JEA 11/2/2020 15:09:42'!
PASSED!

!testRun: #TerniLapilliTest #test28CantMoveAfterXWins stamp: 'JEA 11/2/2020 15:09:42'!
PASSED!

!testRun: #TerniLapilliTest #test29CantMoveAfterOWins stamp: 'JEA 11/2/2020 15:09:42'!
PASSED!

!testRun: #TerniLapilliTest #test06XCantPlayOsTurn stamp: 'JEA 11/2/2020 15:10:23'!
FAILURE!
!PlacingChips methodsFor: 'playing' stamp: 'JEA 11/2/2020 15:10:53' prior: 50885147 overrides: 50883656!
putOAt: aPosition
	
	self canPlayAt: aPosition.

	isXPlaying ifTrue: [ self error: TerniLapilli notYourTurnDescription. ].
	
	chipsOPlayed add: aPosition.
	isXPlaying := isXPlaying not.
	
	self hasOWon ifTrue: [ ^self changeState: GameOver. ].
	self amountOfChipsOPlayed = 3 ifTrue: [ ^self changeState: MovingChips. ].
	^self.! !
!PlacingChips methodsFor: 'playing' stamp: 'JEA 11/2/2020 15:11:00' prior: 50884655 overrides: 50883679!
putXAt: aPosition
	
	self canPlayAt: aPosition.

	isXPlaying ifFalse: [ self error: TerniLapilli notYourTurnDescription. ].
	
	chipsXPlayed add: aPosition.
	isXPlaying := isXPlaying not.
	
	self hasXWon ifTrue: [ ^self changeState: GameOver. ].
	^self.! !
!MovingChips methodsFor: 'playing' stamp: 'JEA 11/2/2020 15:11:05' prior: 50884735 overrides: 50883604!
moveOFrom: currentPosition to: newPosition

	self canPlayAt: newPosition.

	isXPlaying ifTrue: [ self error: TerniLapilli notYourTurnDescription. ].

	(currentPosition eightNeighbors includes: newPosition)
		ifFalse: [ self error: self class cantMoveToNotNeighborPositionDescription. ].
		
	chipsOPlayed remove: currentPosition.
	chipsOPlayed add: newPosition.
	isXPlaying := isXPlaying not.
	
	self hasOWon ifTrue: [ ^self changeState: GameOver. ].
	^self.! !
!MovingChips methodsFor: 'playing' stamp: 'JEA 11/2/2020 15:11:10' prior: 50884771 overrides: 50883632!
moveXFrom: currentPosition to: newPosition

	self canPlayAt: newPosition.

	isXPlaying ifFalse: [ self error: TerniLapilli notYourTurnDescription. ].

	(currentPosition eightNeighbors includes: newPosition)
		ifFalse: [ self error: self class cantMoveToNotNeighborPositionDescription. ].
		
	chipsXPlayed remove: currentPosition.
	chipsXPlayed add: newPosition.
	isXPlaying := isXPlaying not.
	
	self hasXWon ifTrue: [ ^self changeState: GameOver. ].
	^self.! !
!MovingChips methodsFor: 'playing' stamp: 'JEA 11/2/2020 15:11:15' prior: 50885416 overrides: 50883632!
moveXFrom: currentPosition to: newPosition

	self canPlayAt: newPosition.

	isXPlaying ifFalse: [ self error: TerniLapilli notYourTurnDescription. ].

	(currentPosition eightNeighbors includes: newPosition)
		ifFalse: [ self error: TerniLapilli cantMoveToNotNeighborPositionDescription. ].
		
	chipsXPlayed remove: currentPosition.
	chipsXPlayed add: newPosition.
	isXPlaying := isXPlaying not.
	
	self hasXWon ifTrue: [ ^self changeState: GameOver. ].
	^self.! !
!MovingChips methodsFor: 'playing' stamp: 'JEA 11/2/2020 15:11:22' prior: 50885398 overrides: 50883604!
moveOFrom: currentPosition to: newPosition

	self canPlayAt: newPosition.

	isXPlaying ifTrue: [ self error: TerniLapilli notYourTurnDescription. ].

	(currentPosition eightNeighbors includes: newPosition)
		ifFalse: [ self error: TerniLapilli cantMoveToNotNeighborPositionDescription. ].
		
	chipsOPlayed remove: currentPosition.
	chipsOPlayed add: newPosition.
	isXPlaying := isXPlaying not.
	
	self hasOWon ifTrue: [ ^self changeState: GameOver. ].
	^self.! !

!testRun: #TerniLapilliTest #test01XPlaysFirst stamp: 'JEA 11/2/2020 15:11:31'!
PASSED!

!testRun: #TerniLapilliTest #test02XCanPlayItsTurn stamp: 'JEA 11/2/2020 15:11:31'!
PASSED!

!testRun: #TerniLapilliTest #test03OPlaysAfterX stamp: 'JEA 11/2/2020 15:11:31'!
PASSED!

!testRun: #TerniLapilliTest #test04OCanPlayItsTurn stamp: 'JEA 11/2/2020 15:11:31'!
PASSED!

!testRun: #TerniLapilliTest #test05XPlaysAfterO stamp: 'JEA 11/2/2020 15:11:31'!
PASSED!

!testRun: #TerniLapilliTest #test06XCantPlayOsTurn stamp: 'JEA 11/2/2020 15:11:31'!
PASSED!

!testRun: #TerniLapilliTest #test07OCantPlayXsTurn stamp: 'JEA 11/2/2020 15:11:31'!
PASSED!

!testRun: #TerniLapilliTest #test08PositionsDontOverlap stamp: 'JEA 11/2/2020 15:11:31'!
PASSED!

!testRun: #TerniLapilliTest #test09PositionsAreOccupied stamp: 'JEA 11/2/2020 15:11:31'!
PASSED!

!testRun: #TerniLapilliTest #test10OCantPlayInOccupiedPosition stamp: 'JEA 11/2/2020 15:11:31'!
PASSED!

!testRun: #TerniLapilliTest #test11XCantPlayInOccupiedPosition stamp: 'JEA 11/2/2020 15:11:31'!
PASSED!

!testRun: #TerniLapilliTest #test12XAndOAreAtEveryPositionPlayed stamp: 'JEA 11/2/2020 15:11:31'!
PASSED!

!testRun: #TerniLapilliTest #test13XCantPlayInInvalidPosition stamp: 'JEA 11/2/2020 15:11:31'!
PASSED!

!testRun: #TerniLapilliTest #test14OCantPlayInInvalidPosition stamp: 'JEA 11/2/2020 15:11:31'!
PASSED!

!testRun: #TerniLapilliTest #test15CantPlaceMoreThan3Chips stamp: 'JEA 11/2/2020 15:11:31'!
PASSED!

!testRun: #TerniLapilliTest #test16XCantMoveUntilAllChipsArePlaced stamp: 'JEA 11/2/2020 15:11:31'!
PASSED!

!testRun: #TerniLapilliTest #test17OCantMoveUntilAllChipsArePlaced stamp: 'JEA 11/2/2020 15:11:31'!
PASSED!

!testRun: #TerniLapilliTest #test18XCanMoveAfterAllChipsArePlaced stamp: 'JEA 11/2/2020 15:11:31'!
PASSED!

!testRun: #TerniLapilliTest #test19OCanMoveAfterAllChipsArePlaced stamp: 'JEA 11/2/2020 15:11:31'!
PASSED!

!testRun: #TerniLapilliTest #test20XCantMoveInOsTurn stamp: 'JEA 11/2/2020 15:11:31'!
PASSED!

!testRun: #TerniLapilliTest #test21OCantMoveInXsTurn stamp: 'JEA 11/2/2020 15:11:31'!
PASSED!

!testRun: #TerniLapilliTest #test22XCantMoveToOccupiedPosition stamp: 'JEA 11/2/2020 15:11:31'!
PASSED!

!testRun: #TerniLapilliTest #test23XCantMoveToInvalidPosition stamp: 'JEA 11/2/2020 15:11:31'!
PASSED!

!testRun: #TerniLapilliTest #test24XCantMoveToNotNeighborPosition stamp: 'JEA 11/2/2020 15:11:31'!
PASSED!

!testRun: #TerniLapilliTest #test25XCanWin stamp: 'JEA 11/2/2020 15:11:31'!
PASSED!

!testRun: #TerniLapilliTest #test26OCanWin stamp: 'JEA 11/2/2020 15:11:31'!
PASSED!

!testRun: #TerniLapilliTest #test27CantPlayAfterXWins stamp: 'JEA 11/2/2020 15:11:31'!
PASSED!

!testRun: #TerniLapilliTest #test28CantMoveAfterXWins stamp: 'JEA 11/2/2020 15:11:31'!
PASSED!

!testRun: #TerniLapilliTest #test29CantMoveAfterOWins stamp: 'JEA 11/2/2020 15:11:31'!
PASSED!
!TerniLapilli class methodsFor: 'inquiries' stamp: 'JEA 11/2/2020 15:13:41'!
isPositionValid: aPosition

	^aPosition <= (2@2) and: [aPosition >= (0@0)].! !
!TerniLapilliState methodsFor: 'as yet unclassified' stamp: 'JEA 11/2/2020 15:13:41' prior: 50884360!
canPlayAt: aPosition

	(TerniLapilli isPositionValid: aPosition) ifFalse: [ self error: self class invalidPositionDescription. ].
	
	(self isOccupied: aPosition) ifTrue: [ self error: self class positionOccupiedDescription. ].! !

!methodRemoval: TerniLapilli class #isValid: stamp: 'JEA 11/2/2020 15:13:41'!
isValid: aPosition

	^aPosition <= (2@2) and: [aPosition >= (0@0)].!

----SNAPSHOT----(2 November 2020 15:15:34) CuisUniversity-4384.image priorSource: 17666821!

Object subclass: #TerniLapilliStateDecorator
	instanceVariableNames: 'isXPlaying'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TerniLapilli'!

!classDefinition: #TerniLapilliStateDecorator category: 'TerniLapilli' stamp: 'JEA 11/2/2020 15:17:37'!
Object subclass: #TerniLapilliStateDecorator
	instanceVariableNames: 'isXPlaying'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TerniLapilli'!

TerniLapilliState subclass: #TerniLapilliStateDecorator
	instanceVariableNames: 'isXPlaying'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TerniLapilli'!

!classRemoval: #TerniLapilliStateDecorator stamp: 'JEA 11/2/2020 15:17:52'!
Object subclass: #TerniLapilliStateDecorator
	instanceVariableNames: 'isXPlaying'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TerniLapilli'!

TerniLapilliState subclass: #TerniLapilliStateDecorator
	instanceVariableNames: 'isXPlaying'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TerniLapilli'!

!classRemoval: #TerniLapilliTest stamp: 'JEA 11/2/2020 15:18:04'!
TestCase subclass: #TerniLapilliTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TerniLapilli'!

!classRemoval: #PlacingChips stamp: 'JEA 11/2/2020 15:18:28'!
TerniLapilliState subclass: #PlacingChips
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TerniLapilli'!

!classRemoval: #MovingChips stamp: 'JEA 11/2/2020 15:18:28'!
TerniLapilliState subclass: #MovingChips
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TerniLapilli'!

!classRemoval: #GameOver stamp: 'JEA 11/2/2020 15:18:28'!
TerniLapilliState subclass: #GameOver
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TerniLapilli'!

!classRemoval: #TerniLapilliState stamp: 'JEA 11/2/2020 15:18:29'!
Object subclass: #TerniLapilliState
	instanceVariableNames: 'isXPlaying chipsXPlayed chipsOPlayed'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TerniLapilli'!

!classRemoval: #TerniLapilli stamp: 'JEA 11/2/2020 15:18:29'!
Object subclass: #TerniLapilli
	instanceVariableNames: 'state'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TerniLapilli'!

----End fileIn of /home/jadmin/Documents/TerniLapilli-PreStatePattern.st----!

TerniLapilliState subclass: #TerniLapilliStateDecorator
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TerniLapilli'!

!classDefinition: #TerniLapilliStateDecorator category: 'TerniLapilli' stamp: 'JEA 11/2/2020 15:18:50'!
TerniLapilliState subclass: #TerniLapilliStateDecorator
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TerniLapilli'!

!classRemoval: #TerniLapilliStateDecorator stamp: 'JEA 11/2/2020 15:19:20'!
TerniLapilliState subclass: #TerniLapilliStateDecorator
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TerniLapilli'!

!classRemoval: #PlacingChips stamp: 'JEA 11/2/2020 15:19:21'!
TerniLapilliState subclass: #PlacingChips
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TerniLapilli'!

!classRemoval: #MovingChips stamp: 'JEA 11/2/2020 15:19:21'!
TerniLapilliState subclass: #MovingChips
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TerniLapilli'!

!classRemoval: #GameOver stamp: 'JEA 11/2/2020 15:19:21'!
TerniLapilliState subclass: #GameOver
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TerniLapilli'!

!classRemoval: #TerniLapilliState stamp: 'JEA 11/2/2020 15:19:21'!
Object subclass: #TerniLapilliState
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TerniLapilli'!

!classRemoval: #TerniLapilli stamp: 'JEA 11/2/2020 15:19:22'!
Object subclass: #TerniLapilli
	instanceVariableNames: 'state isXPlaying chipsXPlayed chipsOPlayed'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TerniLapilli'!

!classRemoval: #TerniLapilliTest stamp: 'JEA 11/2/2020 15:19:22'!
TestCase subclass: #TerniLapilliTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TerniLapilli'!

----End fileIn of /home/jadmin/Documents/TerniLapilli-PreDecoratorPattern.st----!

TerniLapilliState subclass: #TerniLapilliStateDecorator
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TerniLapilli'!

!classDefinition: #TerniLapilliStateDecorator category: 'TerniLapilli' stamp: 'JEA 11/2/2020 15:19:42'!
TerniLapilliState subclass: #TerniLapilliStateDecorator
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TerniLapilli'!

TerniLapilliStateDecorator subclass: #TurnX
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TerniLapilli'!

!classDefinition: #TurnX category: 'TerniLapilli' stamp: 'JEA 11/2/2020 15:19:56'!
TerniLapilliStateDecorator subclass: #TurnX
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TerniLapilli'!

TerniLapilliStateDecorator subclass: #TurnO
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TerniLapilli'!

!classDefinition: #TurnO category: 'TerniLapilli' stamp: 'JEA 11/2/2020 15:19:58'!
TerniLapilliStateDecorator subclass: #TurnO
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TerniLapilli'!

TerniLapilliState subclass: #TerniLapilliStateDecorator
	instanceVariableNames: 'decoratee'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TerniLapilli'!

!classDefinition: #TerniLapilliStateDecorator category: 'TerniLapilli' stamp: 'JEA 11/2/2020 15:21:17'!
TerniLapilliState subclass: #TerniLapilliStateDecorator
	instanceVariableNames: 'decoratee'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TerniLapilli'!

TerniLapilliState subclass: #TerniLapilliStateDecorator
	instanceVariableNames: 'decorateeState'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TerniLapilli'!

!classDefinition: #TerniLapilliStateDecorator category: 'TerniLapilli' stamp: 'JEA 11/2/2020 15:22:59'!
TerniLapilliState subclass: #TerniLapilliStateDecorator
	instanceVariableNames: 'decorateeState'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TerniLapilli'!

TerniLapilliState subclass: #TerniLapilliStateDecorator
	instanceVariableNames: 'decoratedState'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TerniLapilli'!

!classDefinition: #TerniLapilliStateDecorator category: 'TerniLapilli' stamp: 'JEA 11/2/2020 15:23:04'!
TerniLapilliState subclass: #TerniLapilliStateDecorator
	instanceVariableNames: 'decoratedState'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TerniLapilli'!

TerniLapilliState subclass: #TerniLapilliStateDecorator
	instanceVariableNames: 'decoratee'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TerniLapilli'!

!classDefinition: #TerniLapilliStateDecorator category: 'TerniLapilli' stamp: 'JEA 11/2/2020 15:23:14'!
TerniLapilliState subclass: #TerniLapilliStateDecorator
	instanceVariableNames: 'decoratee'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TerniLapilli'!
!TerniLapilliStateDecorator methodsFor: 'playing' stamp: 'JEA 11/2/2020 15:25:11' overrides: 50887128!
moveOFrom: currentPosition to: newPosition
	
	self subclassResponsibility.! !
!TerniLapilliStateDecorator methodsFor: 'playing' stamp: 'JEA 11/2/2020 15:25:22' overrides: 50887133!
moveXFrom: currentPosition to: newPosition
	
	self subclassResponsibility.! !
!TerniLapilliStateDecorator methodsFor: 'playing' stamp: 'JEA 11/2/2020 15:25:30' overrides: 50887138!
putOAt: aPosition
	
	self subclassResponsibility.! !
!TerniLapilliStateDecorator methodsFor: 'playing' stamp: 'JEA 11/2/2020 15:25:32' overrides: 50887142!
putXAt: aPosition
	
	self subclassResponsibility.! !
!TerniLapilliStateDecorator methodsFor: 'state changes' stamp: 'JEA 11/2/2020 15:25:51' overrides: 50887191!
changeState: aKindOfState

	^aKindOfState newWithXChips: chipsXPlayed OChips: chipsOPlayed turn: isXPlaying.! !
!TerniLapilliStateDecorator methodsFor: 'initialization' stamp: 'JEA 11/2/2020 15:26:08' overrides: 50887198!
initializeWithXChips: chipsPlayedX OChips: chipsPlayedO turn: isPlayingX.

	chipsXPlayed := chipsPlayedX.
	chipsOPlayed := chipsPlayedO.
	isXPlaying := isPlayingX.! !
!TerniLapilliStateDecorator methodsFor: 'testing' stamp: 'JEA 11/2/2020 15:26:27' overrides: 50887146!
amountOfChipsOPlayed

	^chipsOPlayed size.! !
!TerniLapilliStateDecorator methodsFor: 'testing' stamp: 'JEA 11/2/2020 15:26:40' overrides: 50887150!
amountOfChipsXPlayed

	self subclassResponsibility.! !
!TerniLapilliStateDecorator methodsFor: 'testing' stamp: 'JEA 11/2/2020 15:26:47' prior: 50887556 overrides: 50887146!
amountOfChipsOPlayed

	self subclassResponsibility.! !
!TerniLapilliStateDecorator methodsFor: 'testing' stamp: 'JEA 11/2/2020 15:27:41' overrides: 50887118!
canPlayAt: aPosition

	self subclassResponsibility.! !

!methodRemoval: TerniLapilliStateDecorator #canPlayAt: stamp: 'JEA 11/2/2020 15:27:54'!
canPlayAt: aPosition

	self subclassResponsibility.!
!TerniLapilliStateDecorator methodsFor: 'testing' stamp: 'JEA 11/2/2020 15:28:11' overrides: 50887154!
hasOWon

	self subclassResponsibility.! !
!TerniLapilliStateDecorator methodsFor: 'testing' stamp: 'JEA 11/2/2020 15:28:14' overrides: 50887159!
hasXWon

	self subclassResponsibility.! !
!TerniLapilliStateDecorator methodsFor: 'testing' stamp: 'JEA 11/2/2020 15:29:10' overrides: 50887164!
isGameOver

	self subclassResponsibility.! !
!TerniLapilliStateDecorator methodsFor: 'testing' stamp: 'JEA 11/2/2020 15:29:27' overrides: 50887168!
isOAt: aPosition

	self subclassResponsibility.! !
!TerniLapilliStateDecorator methodsFor: 'testing' stamp: 'JEA 11/2/2020 15:29:30' overrides: 50887182!
isXAt: aPosition

	self subclassResponsibility.! !
!TerniLapilliStateDecorator methodsFor: 'testing' stamp: 'JEA 11/2/2020 15:29:33' overrides: 50887177!
isOccupied: aPosition

	self subclassResponsibility.! !
!TerniLapilliStateDecorator methodsFor: 'testing' stamp: 'JEA 11/2/2020 15:29:39' overrides: 50887173!
isOPlaying

	self subclassResponsibility.! !
!TerniLapilliStateDecorator methodsFor: 'testing' stamp: 'JEA 11/2/2020 15:29:41' overrides: 50887187!
isXPlaying

	self subclassResponsibility.! !

----SNAPSHOT----(2 November 2020 15:30:16) CuisUniversity-4384.image priorSource: 17725721!

----SNAPSHOT----(2 November 2020 15:33:52) CuisUniversity-4384.image priorSource: 17791052!
!TerniLapilliStateDecorator methodsFor: 'state changes' stamp: 'JEA 11/2/2020 15:35:01' prior: 50887540 overrides: 50887191!
changeState: aKindOfState

	^decoratee changeState: aKindOfState.! !
!TerniLapilliStateDecorator methodsFor: 'testing' stamp: 'JEA 11/2/2020 15:35:28' prior: 50887567 overrides: 50887146!
amountOfChipsOPlayed

	^decoratee amountOfChipsOPlayed.! !
!TerniLapilliStateDecorator methodsFor: 'testing' stamp: 'JEA 11/2/2020 15:35:35' prior: 50887561 overrides: 50887150!
amountOfChipsXPlayed

	^decoratee amountOfChipsXPlayed.! !
!TerniLapilliStateDecorator methodsFor: 'testing' stamp: 'JEA 11/2/2020 15:35:42' prior: 50887582 overrides: 50887154!
hasOWon

	^decoratee amountOfChipsXPlayed.! !
!TerniLapilliStateDecorator methodsFor: 'testing' stamp: 'JEA 11/2/2020 15:35:48' prior: 50887587 overrides: 50887159!
hasXWon

	^decoratee amountOfChipsXPlayed.! !
!TerniLapilliStateDecorator methodsFor: 'testing' stamp: 'JEA 11/2/2020 15:35:55' prior: 50887592 overrides: 50887164!
isGameOver

	^decoratee amountOfChipsXPlayed.! !
!TerniLapilliStateDecorator methodsFor: 'testing' stamp: 'JEA 11/2/2020 15:36:04' prior: 50887597 overrides: 50887168!
isOAt: aPosition

	^decoratee amountOfChipsXPlayed.! !
!TerniLapilliStateDecorator methodsFor: 'testing' stamp: 'JEA 11/2/2020 15:36:16' prior: 50887607 overrides: 50887177!
isOccupied: aPosition

	^decoratee amountOfChipsXPlayed.! !
!TerniLapilliStateDecorator methodsFor: 'testing' stamp: 'JEA 11/2/2020 15:36:39' prior: 50887647 overrides: 50887154!
hasOWon

	^decoratee hasOWon.! !
!TerniLapilliStateDecorator methodsFor: 'testing' stamp: 'JEA 11/2/2020 15:36:44' prior: 50887653 overrides: 50887159!
hasXWon

	^decoratee hasXWon.! !
!TerniLapilliStateDecorator methodsFor: 'testing' stamp: 'JEA 11/2/2020 15:36:47' prior: 50887659 overrides: 50887164!
isGameOver

	^decoratee isGameOver.! !
!TerniLapilliStateDecorator methodsFor: 'testing' stamp: 'JEA 11/2/2020 15:36:56' prior: 50887665 overrides: 50887168!
isOAt: aPosition

	^decoratee isOAt: aPosition.! !
!TerniLapilliStateDecorator methodsFor: 'testing' stamp: 'JEA 11/2/2020 15:37:09' prior: 50887671 overrides: 50887177!
isOccupied: aPosition

	^decoratee isOccupied: aPosition.! !
!TerniLapilliStateDecorator methodsFor: 'testing' stamp: 'JEA 11/2/2020 15:37:22' prior: 50887602 overrides: 50887182!
isXAt: aPosition

	^decoratee isXAt: aPosition.! !
!TurnX methodsFor: 'testing' stamp: 'JEA 11/2/2020 15:37:51' overrides: 50887612!
isOPlaying

	self subclassResponsibility.! !
!TurnO methodsFor: 'testing' stamp: 'JEA 11/2/2020 15:37:51' overrides: 50887612!
isOPlaying

	self subclassResponsibility.! !

!methodRemoval: TerniLapilliStateDecorator #isOPlaying stamp: 'JEA 11/2/2020 15:37:51'!
isOPlaying

	self subclassResponsibility.!
!TerniLapilliStateDecorator methodsFor: 'testing' stamp: 'JEA 11/2/2020 15:37:53' overrides: 50887173!
isOPlaying

	self subclassResponsibility.! !
!TurnX methodsFor: 'testing' stamp: 'JEA 11/2/2020 15:38:01' overrides: 50887617!
isXPlaying

	self subclassResponsibility.! !
!TurnO methodsFor: 'testing' stamp: 'JEA 11/2/2020 15:38:01' overrides: 50887617!
isXPlaying

	self subclassResponsibility.! !

!methodRemoval: TerniLapilliStateDecorator #isXPlaying stamp: 'JEA 11/2/2020 15:38:01'!
isXPlaying

	self subclassResponsibility.!
!TerniLapilliStateDecorator methodsFor: 'testing' stamp: 'JEA 11/2/2020 15:38:02' overrides: 50887187!
isXPlaying

	self subclassResponsibility.! !
!TerniLapilliStateDecorator methodsFor: 'initialization' stamp: 'JEA 11/2/2020 15:38:26' prior: 50887547 overrides: 50887198!
initializeWithXChips: chipsPlayedX OChips: chipsPlayedO turn: isPlayingX.

	self subclassResponsibility .! !
!TerniLapilliStateDecorator methodsFor: 'initialization' stamp: 'JEA 11/2/2020 15:38:27' prior: 50887745 overrides: 50887198!
initializeWithXChips: chipsPlayedX OChips: chipsPlayedO turn: isPlayingX.

	self subclassResponsibility.! !
!TerniLapilliStateDecorator methodsFor: 'initialization' stamp: 'JEA 11/2/2020 15:38:38' prior: 50887753 overrides: 50887198!
initializeWithXChips: chipsPlayedX OChips: chipsPlayedO turn: isPlayingX.

	self subclassResponsibility.
	
	"initializeWithXChips: chipsPlayedX OChips: chipsPlayedO turn: isPlayingX.

	chipsXPlayed := chipsPlayedX.
	chipsOPlayed := chipsPlayedO.
	isXPlaying := isPlayingX."! !
!TerniLapilliStateDecorator methodsFor: 'initialization' stamp: 'JEA 11/2/2020 15:38:45' prior: 50887761 overrides: 50887198!
initializeWithXChips: chipsPlayedX OChips: chipsPlayedO turn: isPlayingX.

	self subclassResponsibility.! !
!TurnX methodsFor: 'initialization' stamp: 'JEA 11/2/2020 15:38:48' overrides: 50887774!
initializeWithXChips: chipsPlayedX OChips: chipsPlayedO turn: isPlayingX.

	self subclassResponsibility.! !
!TurnO methodsFor: 'initialization' stamp: 'JEA 11/2/2020 15:38:48' overrides: 50887774!
initializeWithXChips: chipsPlayedX OChips: chipsPlayedO turn: isPlayingX.

	self subclassResponsibility.! !

!methodRemoval: TerniLapilliStateDecorator #initializeWithXChips:OChips:turn: stamp: 'JEA 11/2/2020 15:38:48'!
initializeWithXChips: chipsPlayedX OChips: chipsPlayedO turn: isPlayingX.

	self subclassResponsibility.!
!TerniLapilliStateDecorator methodsFor: 'initialization' stamp: 'JEA 11/2/2020 15:38:50' overrides: 50887198!
initializeWithXChips: chipsPlayedX OChips: chipsPlayedO turn: isPlayingX.

	self subclassResponsibility.! !
!TurnX methodsFor: 'playing' stamp: 'JEA 11/2/2020 15:39:22' overrides: 50887517!
moveOFrom: currentPosition to: newPosition
	
	self subclassResponsibility.! !
!TurnO methodsFor: 'playing' stamp: 'JEA 11/2/2020 15:39:22' overrides: 50887517!
moveOFrom: currentPosition to: newPosition
	
	self subclassResponsibility.! !

!methodRemoval: TerniLapilliStateDecorator #moveOFrom:to: stamp: 'JEA 11/2/2020 15:39:22'!
moveOFrom: currentPosition to: newPosition
	
	self subclassResponsibility.!
!TerniLapilliStateDecorator methodsFor: 'playing' stamp: 'JEA 11/2/2020 15:39:23' overrides: 50887128!
moveOFrom: currentPosition to: newPosition
	
	self subclassResponsibility.! !
!TurnX methodsFor: 'playing' stamp: 'JEA 11/2/2020 15:39:31' overrides: 50887523!
moveXFrom: currentPosition to: newPosition
	
	self subclassResponsibility.! !
!TurnO methodsFor: 'playing' stamp: 'JEA 11/2/2020 15:39:31' overrides: 50887523!
moveXFrom: currentPosition to: newPosition
	
	self subclassResponsibility.! !

!methodRemoval: TerniLapilliStateDecorator #moveXFrom:to: stamp: 'JEA 11/2/2020 15:39:31'!
moveXFrom: currentPosition to: newPosition
	
	self subclassResponsibility.!
!TerniLapilliStateDecorator methodsFor: 'playing' stamp: 'JEA 11/2/2020 15:39:32' overrides: 50887133!
moveXFrom: currentPosition to: newPosition
	
	self subclassResponsibility.! !
!TurnX methodsFor: 'playing' stamp: 'JEA 11/2/2020 15:39:38' overrides: 50887529!
putOAt: aPosition
	
	self subclassResponsibility.! !
!TurnO methodsFor: 'playing' stamp: 'JEA 11/2/2020 15:39:38' overrides: 50887529!
putOAt: aPosition
	
	self subclassResponsibility.! !

!methodRemoval: TerniLapilliStateDecorator #putOAt: stamp: 'JEA 11/2/2020 15:39:38'!
putOAt: aPosition
	
	self subclassResponsibility.!
!TerniLapilliStateDecorator methodsFor: 'playing' stamp: 'JEA 11/2/2020 15:39:39' overrides: 50887138!
putOAt: aPosition
	
	self subclassResponsibility.! !
!TurnX methodsFor: 'playing' stamp: 'JEA 11/2/2020 15:39:45' overrides: 50887534!
putXAt: aPosition
	
	self subclassResponsibility.! !
!TurnO methodsFor: 'playing' stamp: 'JEA 11/2/2020 15:39:45' overrides: 50887534!
putXAt: aPosition
	
	self subclassResponsibility.! !

!methodRemoval: TerniLapilliStateDecorator #putXAt: stamp: 'JEA 11/2/2020 15:39:45'!
putXAt: aPosition
	
	self subclassResponsibility.!
!TerniLapilliStateDecorator methodsFor: 'playing' stamp: 'JEA 11/2/2020 15:39:45' overrides: 50887142!
putXAt: aPosition
	
	self subclassResponsibility.! !
!TurnO methodsFor: 'testing' stamp: 'JEA 11/2/2020 15:40:36' prior: 50887713 overrides: 50887722!
isOPlaying

	^true.! !
!TurnO methodsFor: 'testing' stamp: 'JEA 11/2/2020 15:40:41' prior: 50887730 overrides: 50887739!
isXPlaying

	^false.! !
!TurnO methodsFor: 'playing' stamp: 'JEA 11/2/2020 15:40:58' prior: 50887875 overrides: 50887885!
putXAt: aPosition
	
	self error: TerniLapilli notYourTurnDescription.! !
!TurnO methodsFor: 'playing' stamp: 'JEA 11/2/2020 15:41:01' prior: 50887834 overrides: 50887845!
moveXFrom: currentPosition to: newPosition
	
	self error: TerniLapilli notYourTurnDescription.! !
!TurnO methodsFor: 'playing' stamp: 'JEA 11/2/2020 15:41:08' prior: 50887813 overrides: 50887824!
moveOFrom: currentPosition to: newPosition
	
	! !
!TurnO methodsFor: 'playing' stamp: 'JEA 11/2/2020 15:41:11' prior: 50887855 overrides: 50887865!
putOAt: aPosition
	
	! !
!TurnO methodsFor: 'initialization' stamp: 'JEA 11/2/2020 15:41:16' prior: 50887788 overrides: 50887802!
initializeWithXChips: chipsPlayedX OChips: chipsPlayedO turn: isPlayingX.

	! !
!TurnX methodsFor: 'testing' stamp: 'JEA 11/2/2020 15:41:30' prior: 50887709 overrides: 50887722!
isOPlaying

	^false.! !
!TurnX methodsFor: 'testing' stamp: 'JEA 11/2/2020 15:41:35' prior: 50887726 overrides: 50887739!
isXPlaying

	^false.! !
!TurnX methodsFor: 'initialization' stamp: 'JEA 11/2/2020 15:41:52' prior: 50887781 overrides: 50887802!
initializeWithXChips: chipsPlayedX OChips: chipsPlayedO turn: isPlayingX.

	! !
!TurnX methodsFor: 'playing' stamp: 'JEA 11/2/2020 15:41:57' prior: 50887808 overrides: 50887824!
moveOFrom: currentPosition to: newPosition
	
	self error: TerniLapilli notYourTurnDescription.! !
!TurnX methodsFor: 'playing' stamp: 'JEA 11/2/2020 15:42:00' prior: 50887850 overrides: 50887865!
putOAt: aPosition
	
	self error: TerniLapilli notYourTurnDescription.! !
!TurnX methodsFor: 'playing' stamp: 'JEA 11/2/2020 15:42:04' prior: 50887829 overrides: 50887845!
moveXFrom: currentPosition to: newPosition
	
	! !
!TurnX methodsFor: 'playing' stamp: 'JEA 11/2/2020 15:42:08' prior: 50887870 overrides: 50887885!
putXAt: aPosition
	
	! !
!TurnX methodsFor: 'playing' stamp: 'JEA 11/2/2020 15:42:18' prior: 50887960 overrides: 50887885!
putXAt: aPosition
	
	! !
!PlacingChips methodsFor: 'playing' stamp: 'JEA 11/2/2020 15:42:36' prior: 50887393 overrides: 50887142!
putXAt: aPosition
	
	self canPlayAt: aPosition.
	
	chipsXPlayed add: aPosition.
	isXPlaying := isXPlaying not.
	
	self hasXWon ifTrue: [ ^self changeState: GameOver. ].
	^self.! !
!PlacingChips methodsFor: 'playing' stamp: 'JEA 11/2/2020 15:42:39' prior: 50887379 overrides: 50887138!
putOAt: aPosition
	
	self canPlayAt: aPosition.
	
	chipsOPlayed add: aPosition.
	isXPlaying := isXPlaying not.
	
	self hasOWon ifTrue: [ ^self changeState: GameOver. ].
	self amountOfChipsOPlayed = 3 ifTrue: [ ^self changeState: MovingChips. ].
	^self.! !
!MovingChips methodsFor: 'playing' stamp: 'JEA 11/2/2020 15:42:58' prior: 50887288 overrides: 50887128!
moveOFrom: currentPosition to: newPosition

	self canPlayAt: newPosition.

	(currentPosition eightNeighbors includes: newPosition)
		ifFalse: [ self error: TerniLapilli cantMoveToNotNeighborPositionDescription. ].
		
	chipsOPlayed remove: currentPosition.
	chipsOPlayed add: newPosition.
	isXPlaying := isXPlaying not.
	
	self hasOWon ifTrue: [ ^self changeState: GameOver. ].
	^self.! !
!MovingChips methodsFor: 'playing' stamp: 'JEA 11/2/2020 15:43:02' prior: 50887306 overrides: 50887133!
moveXFrom: currentPosition to: newPosition

	self canPlayAt: newPosition.

	(currentPosition eightNeighbors includes: newPosition)
		ifFalse: [ self error: TerniLapilli cantMoveToNotNeighborPositionDescription. ].
		
	chipsXPlayed remove: currentPosition.
	chipsXPlayed add: newPosition.
	isXPlaying := isXPlaying not.
	
	self hasXWon ifTrue: [ ^self changeState: GameOver. ].
	^self.! !
!TurnO methodsFor: 'playing' stamp: 'JEA 11/2/2020 15:43:56' prior: 50887911 overrides: 50887824!
moveOFrom: currentPosition to: newPosition
	
	^decoratee moveOFrom: currentPosition to: newPosition.
	! !
!TurnO methodsFor: 'playing' stamp: 'JEA 11/2/2020 15:44:16' prior: 50887916 overrides: 50887865!
putOAt: aPosition
	
	^decoratee putOAt: aPosition.! !
!TurnX methodsFor: 'playing' stamp: 'JEA 11/2/2020 15:44:29' prior: 50887955 overrides: 50887845!
moveXFrom: currentPosition to: newPosition
	
	^decoratee moveXFrom: currentPosition to: newPosition.! !
!TurnX methodsFor: 'playing' stamp: 'JEA 11/2/2020 15:44:41' prior: 50887964 overrides: 50887885!
putXAt: aPosition
	
	^decoratee putXAt: aPosition.! !

!methodRemoval: TurnO #initializeWithXChips:OChips:turn: stamp: 'JEA 11/2/2020 15:45:44'!
initializeWithXChips: chipsPlayedX OChips: chipsPlayedO turn: isPlayingX.

	!

!methodRemoval: TurnX #initializeWithXChips:OChips:turn: stamp: 'JEA 11/2/2020 15:45:50'!
initializeWithXChips: chipsPlayedX OChips: chipsPlayedO turn: isPlayingX.

	!
!TerniLapilliStateDecorator methodsFor: 'initialization' stamp: 'JEA 11/2/2020 15:45:59' prior: 50887802 overrides: 50887198!
initializeWithXChips: chipsPlayedX OChips: chipsPlayedO turn: isPlayingX.

	decoratee initializeWithXChips: chipsPlayedX OChips: chipsPlayedO turn: isPlayingX.! !
!TerniLapilliStateDecorator methodsFor: 'initialization' stamp: 'JEA 11/2/2020 15:46:49'!
initializeWithState: aState XChips: chipsPlayedX OChips: chipsPlayedO turn: isPlayingX.

	decoratee := aState.
	decoratee initializeWithXChips: chipsPlayedX OChips: chipsPlayedO turn: isPlayingX.! !

!methodRemoval: TerniLapilliStateDecorator #initializeWithXChips:OChips:turn: stamp: 'JEA 11/2/2020 15:46:53'!
initializeWithXChips: chipsPlayedX OChips: chipsPlayedO turn: isPlayingX.

	decoratee initializeWithXChips: chipsPlayedX OChips: chipsPlayedO turn: isPlayingX.!
!TerniLapilliStateDecorator class methodsFor: 'instance creation' stamp: 'JEA 11/2/2020 15:47:17' overrides: 50887215!
new

	self subclassResponsibility.! !
!TurnO class methodsFor: 'instance creation' stamp: 'JEA 11/2/2020 15:48:58'!
newWith: aState XChips: chipsPlayedX OChips: chipsPlayedO turn: isPlayingX

	^self basicNew initializeWithState: aState XChips: chipsPlayedX OChips: chipsPlayedO turn: isPlayingX.! !
!TurnX class methodsFor: 'instance creation' stamp: 'JEA 11/2/2020 15:49:08'!
newWith: aState XChips: chipsPlayedX OChips: chipsPlayedO turn: isPlayingX

	^self basicNew initializeWithState: aState XChips: chipsPlayedX OChips: chipsPlayedO turn: isPlayingX.! !
!TerniLapilli methodsFor: 'initialization' stamp: 'JEA 11/2/2020 15:50:26' prior: 50887020 overrides: 16896425!
initialize

	state := TurnX 
		newWith: PlacingChips new 
		XChips:  Set new
		OChips:  Set new
		! !
!TerniLapilli methodsFor: 'initialization' stamp: 'JEA 11/2/2020 15:50:30' prior: 50888108 overrides: 16896425!
initialize

	state := TurnX 
		newWith: PlacingChips new 
		XChips:  Set new
		OChips:  Set new.
		! !
!TurnO class methodsFor: 'instance creation' stamp: 'JEA 11/2/2020 15:51:01'!
newWith: aState XChips: chipsPlayedX OChips: chipsPlayedO

	^self basicNew initializeWithState: aState XChips: chipsPlayedX OChips: chipsPlayedO.! !

!methodRemoval: TurnO class #newWith:XChips:OChips:turn: stamp: 'JEA 11/2/2020 15:51:02'!
newWith: aState XChips: chipsPlayedX OChips: chipsPlayedO turn: isPlayingX

	^self basicNew initializeWithState: aState XChips: chipsPlayedX OChips: chipsPlayedO turn: isPlayingX.!
!TurnX class methodsFor: 'instance creation' stamp: 'JEA 11/2/2020 15:51:10'!
newWith: aState XChips: chipsPlayedX OChips: chipsPlayedO

	^self basicNew initializeWithState: aState XChips: chipsPlayedX OChips: chipsPlayedO.! !

!methodRemoval: TurnX class #newWith:XChips:OChips:turn: stamp: 'JEA 11/2/2020 15:51:12'!
newWith: aState XChips: chipsPlayedX OChips: chipsPlayedO turn: isPlayingX

	^self basicNew initializeWithState: aState XChips: chipsPlayedX OChips: chipsPlayedO turn: isPlayingX.!
!TerniLapilliStateDecorator methodsFor: 'initialization' stamp: 'JEA 11/2/2020 15:51:30'!
initializeWithState: aState XChips: chipsPlayedX OChips: chipsPlayedO

	decoratee := aState.
	decoratee initializeWithXChips: chipsPlayedX OChips: chipsPlayedO.! !

!methodRemoval: TerniLapilliStateDecorator #initializeWithState:XChips:OChips:turn: stamp: 'JEA 11/2/2020 15:51:33'!
initializeWithState: aState XChips: chipsPlayedX OChips: chipsPlayedO turn: isPlayingX.

	decoratee := aState.
	decoratee initializeWithXChips: chipsPlayedX OChips: chipsPlayedO turn: isPlayingX.!
!TerniLapilliState methodsFor: 'initialization' stamp: 'JEA 11/2/2020 15:51:54'!
initializeWithXChips: chipsPlayedX OChips: chipsPlayedO

	chipsXPlayed := chipsPlayedX.
	chipsOPlayed := chipsPlayedO.! !

!methodRemoval: TerniLapilliState #initializeWithXChips:OChips:turn: stamp: 'JEA 11/2/2020 15:51:59'!
initializeWithXChips: chipsPlayedX OChips: chipsPlayedO turn: isPlayingX.

	chipsXPlayed := chipsPlayedX.
	chipsOPlayed := chipsPlayedO.
	isXPlaying := isPlayingX.!
!PlacingChips methodsFor: 'initialization' stamp: 'JEA 11/2/2020 15:52:10' prior: 50887404 overrides: 16896425!
initialize

	chipsOPlayed := Set new.
	chipsXPlayed := Set new.! !
!GameOver class methodsFor: 'instance creation' stamp: 'JEA 11/2/2020 15:52:45' prior: 50887264!
newWithXChips: chipsXPlayed OChips: chipsOPlayed turn: isXPlaying.

	^self basicNew initializeWithXChips: chipsXPlayed OChips: chipsOPlayed.! !
!GameOver class methodsFor: 'instance creation' stamp: 'JEA 11/2/2020 15:53:24'!
newWithXChips: chipsXPlayed OChips: chipsOPlayed

	^self basicNew initializeWithXChips: chipsXPlayed OChips: chipsOPlayed.! !

!methodRemoval: GameOver class #newWithXChips:OChips:turn: stamp: 'JEA 11/2/2020 15:53:28'!
newWithXChips: chipsXPlayed OChips: chipsOPlayed turn: isXPlaying.

	^self basicNew initializeWithXChips: chipsXPlayed OChips: chipsOPlayed.!
!MovingChips class methodsFor: 'instance creation' stamp: 'JEA 11/2/2020 15:53:35'!
newWithXChips: chipsXPlayed OChips: chipsOPlayed

	^self basicNew initializeWithXChips: chipsXPlayed OChips: chipsOPlayed! !

!methodRemoval: MovingChips class #newWithXChips:OChips:turn: stamp: 'JEA 11/2/2020 15:53:37'!
newWithXChips: chipsXPlayed OChips: chipsOPlayed turn: isXPlaying.

	^self basicNew initializeWithXChips: chipsXPlayed OChips: chipsOPlayed turn: isXPlaying.!
!TerniLapilliState methodsFor: 'state changes' stamp: 'JEA 11/2/2020 15:53:50' prior: 50887191!
changeState: aKindOfState

	^aKindOfState newWithXChips: chipsXPlayed OChips: chipsOPlayed.! !

!testRun: #TerniLapilliTest #test01XPlaysFirst stamp: 'JEA 11/2/2020 15:53:52'!
FAILURE!

!testRun: #TerniLapilliTest #test02XCanPlayItsTurn stamp: 'JEA 11/2/2020 15:53:52'!
ERROR!

!testRun: #TerniLapilliTest #test03OPlaysAfterX stamp: 'JEA 11/2/2020 15:53:52'!
ERROR!

!testRun: #TerniLapilliTest #test04OCanPlayItsTurn stamp: 'JEA 11/2/2020 15:53:52'!
ERROR!

!testRun: #TerniLapilliTest #test05XPlaysAfterO stamp: 'JEA 11/2/2020 15:53:52'!
ERROR!

!testRun: #TerniLapilliTest #test06XCantPlayOsTurn stamp: 'JEA 11/2/2020 15:53:52'!
ERROR!

!testRun: #TerniLapilliTest #test07OCantPlayXsTurn stamp: 'JEA 11/2/2020 15:53:52'!
PASSED!

!testRun: #TerniLapilliTest #test08PositionsDontOverlap stamp: 'JEA 11/2/2020 15:53:52'!
ERROR!

!testRun: #TerniLapilliTest #test09PositionsAreOccupied stamp: 'JEA 11/2/2020 15:53:52'!
ERROR!

!testRun: #TerniLapilliTest #test10OCantPlayInOccupiedPosition stamp: 'JEA 11/2/2020 15:53:52'!
ERROR!

!testRun: #TerniLapilliTest #test11XCantPlayInOccupiedPosition stamp: 'JEA 11/2/2020 15:53:52'!
ERROR!

!testRun: #TerniLapilliTest #test12XAndOAreAtEveryPositionPlayed stamp: 'JEA 11/2/2020 15:53:52'!
ERROR!

!testRun: #TerniLapilliTest #test13XCantPlayInInvalidPosition stamp: 'JEA 11/2/2020 15:53:52'!
PASSED!

!testRun: #TerniLapilliTest #test14OCantPlayInInvalidPosition stamp: 'JEA 11/2/2020 15:53:52'!
ERROR!

!testRun: #TerniLapilliTest #test15CantPlaceMoreThan3Chips stamp: 'JEA 11/2/2020 15:53:52'!
ERROR!

!testRun: #TerniLapilliTest #test16XCantMoveUntilAllChipsArePlaced stamp: 'JEA 11/2/2020 15:53:52'!
ERROR!

!testRun: #TerniLapilliTest #test17OCantMoveUntilAllChipsArePlaced stamp: 'JEA 11/2/2020 15:53:52'!
ERROR!

!testRun: #TerniLapilliTest #test18XCanMoveAfterAllChipsArePlaced stamp: 'JEA 11/2/2020 15:53:52'!
ERROR!

!testRun: #TerniLapilliTest #test19OCanMoveAfterAllChipsArePlaced stamp: 'JEA 11/2/2020 15:53:52'!
ERROR!

!testRun: #TerniLapilliTest #test20XCantMoveInOsTurn stamp: 'JEA 11/2/2020 15:53:52'!
ERROR!

!testRun: #TerniLapilliTest #test21OCantMoveInXsTurn stamp: 'JEA 11/2/2020 15:53:52'!
ERROR!

!testRun: #TerniLapilliTest #test22XCantMoveToOccupiedPosition stamp: 'JEA 11/2/2020 15:53:52'!
ERROR!

!testRun: #TerniLapilliTest #test23XCantMoveToInvalidPosition stamp: 'JEA 11/2/2020 15:53:52'!
ERROR!

!testRun: #TerniLapilliTest #test24XCantMoveToNotNeighborPosition stamp: 'JEA 11/2/2020 15:53:52'!
ERROR!

!testRun: #TerniLapilliTest #test25XCanWin stamp: 'JEA 11/2/2020 15:53:52'!
ERROR!

!testRun: #TerniLapilliTest #test26OCanWin stamp: 'JEA 11/2/2020 15:53:52'!
ERROR!

!testRun: #TerniLapilliTest #test27CantPlayAfterXWins stamp: 'JEA 11/2/2020 15:53:52'!
ERROR!

!testRun: #TerniLapilliTest #test28CantMoveAfterXWins stamp: 'JEA 11/2/2020 15:53:52'!
ERROR!

!testRun: #TerniLapilliTest #test29CantMoveAfterOWins stamp: 'JEA 11/2/2020 15:53:52'!
ERROR!
!TerniLapilli methodsFor: 'initialization' stamp: 'JEA 11/2/2020 15:54:29' prior: 50888115 overrides: 16896425!
initialize

	state := TurnX new.
		! !
!TurnX class methodsFor: 'instance creation' stamp: 'JEA 11/2/2020 15:55:05' overrides: 50888085!
new

	^self
		newWith: PlacingChips new
		XChips:  Set new
		OChips:  Set new.! !

!methodRemoval: PlacingChips #initialize stamp: 'JEA 11/2/2020 15:55:27'!
initialize

	chipsOPlayed := Set new.
	chipsXPlayed := Set new.!
!TurnX class methodsFor: 'instance creation' stamp: 'JEA 11/2/2020 15:55:51' prior: 50888331 overrides: 50888085!
new

	^self
		newWith: PlacingChips
		XChips:  Set new
		OChips:  Set new.! !
!TerniLapilliStateDecorator methodsFor: 'initialization' stamp: 'JEA 11/2/2020 15:56:22' prior: 50888153!
initializeWithState: aState XChips: chipsPlayedX OChips: chipsPlayedO

	decoratee := aState newWithXChips: chipsPlayedX OChips: chipsPlayedO.! !

!testRun: #TerniLapilliTest #test01XPlaysFirst stamp: 'JEA 11/2/2020 15:56:25'!
ERROR!

!testRun: #TerniLapilliTest #test02XCanPlayItsTurn stamp: 'JEA 11/2/2020 15:56:25'!
ERROR!

!testRun: #TerniLapilliTest #test03OPlaysAfterX stamp: 'JEA 11/2/2020 15:56:25'!
ERROR!

!testRun: #TerniLapilliTest #test04OCanPlayItsTurn stamp: 'JEA 11/2/2020 15:56:25'!
ERROR!

!testRun: #TerniLapilliTest #test05XPlaysAfterO stamp: 'JEA 11/2/2020 15:56:25'!
ERROR!

!testRun: #TerniLapilliTest #test06XCantPlayOsTurn stamp: 'JEA 11/2/2020 15:56:25'!
ERROR!

!testRun: #TerniLapilliTest #test07OCantPlayXsTurn stamp: 'JEA 11/2/2020 15:56:25'!
FAILURE!

!testRun: #TerniLapilliTest #test08PositionsDontOverlap stamp: 'JEA 11/2/2020 15:56:25'!
ERROR!

!testRun: #TerniLapilliTest #test09PositionsAreOccupied stamp: 'JEA 11/2/2020 15:56:25'!
ERROR!

!testRun: #TerniLapilliTest #test10OCantPlayInOccupiedPosition stamp: 'JEA 11/2/2020 15:56:25'!
ERROR!

!testRun: #TerniLapilliTest #test11XCantPlayInOccupiedPosition stamp: 'JEA 11/2/2020 15:56:25'!
ERROR!

!testRun: #TerniLapilliTest #test12XAndOAreAtEveryPositionPlayed stamp: 'JEA 11/2/2020 15:56:25'!
ERROR!

!testRun: #TerniLapilliTest #test13XCantPlayInInvalidPosition stamp: 'JEA 11/2/2020 15:56:25'!
PASSED!

!testRun: #TerniLapilliTest #test14OCantPlayInInvalidPosition stamp: 'JEA 11/2/2020 15:56:25'!
ERROR!

!testRun: #TerniLapilliTest #test15CantPlaceMoreThan3Chips stamp: 'JEA 11/2/2020 15:56:25'!
ERROR!

!testRun: #TerniLapilliTest #test16XCantMoveUntilAllChipsArePlaced stamp: 'JEA 11/2/2020 15:56:25'!
ERROR!

!testRun: #TerniLapilliTest #test17OCantMoveUntilAllChipsArePlaced stamp: 'JEA 11/2/2020 15:56:25'!
ERROR!

!testRun: #TerniLapilliTest #test18XCanMoveAfterAllChipsArePlaced stamp: 'JEA 11/2/2020 15:56:25'!
ERROR!

!testRun: #TerniLapilliTest #test19OCanMoveAfterAllChipsArePlaced stamp: 'JEA 11/2/2020 15:56:25'!
ERROR!

!testRun: #TerniLapilliTest #test20XCantMoveInOsTurn stamp: 'JEA 11/2/2020 15:56:25'!
ERROR!

!testRun: #TerniLapilliTest #test21OCantMoveInXsTurn stamp: 'JEA 11/2/2020 15:56:25'!
ERROR!

!testRun: #TerniLapilliTest #test22XCantMoveToOccupiedPosition stamp: 'JEA 11/2/2020 15:56:25'!
ERROR!

!testRun: #TerniLapilliTest #test23XCantMoveToInvalidPosition stamp: 'JEA 11/2/2020 15:56:25'!
ERROR!

!testRun: #TerniLapilliTest #test24XCantMoveToNotNeighborPosition stamp: 'JEA 11/2/2020 15:56:25'!
ERROR!

!testRun: #TerniLapilliTest #test25XCanWin stamp: 'JEA 11/2/2020 15:56:25'!
ERROR!

!testRun: #TerniLapilliTest #test26OCanWin stamp: 'JEA 11/2/2020 15:56:25'!
ERROR!

!testRun: #TerniLapilliTest #test27CantPlayAfterXWins stamp: 'JEA 11/2/2020 15:56:25'!
ERROR!

!testRun: #TerniLapilliTest #test28CantMoveAfterXWins stamp: 'JEA 11/2/2020 15:56:25'!
ERROR!

!testRun: #TerniLapilliTest #test29CantMoveAfterOWins stamp: 'JEA 11/2/2020 15:56:25'!
ERROR!

!methodRemoval: PlacingChips class #new stamp: 'JEA 11/2/2020 15:57:49'!
new

	^self basicNew initialize.!
!PlacingChips class methodsFor: 'instance creation' stamp: 'JEA 11/2/2020 15:57:53'!
newWithXChips: chipsXPlayed OChips: chipsOPlayed

	^self basicNew initializeWithXChips: chipsXPlayed OChips: chipsOPlayed.! !

!testRun: #TerniLapilliTest #test01XPlaysFirst stamp: 'JEA 11/2/2020 15:57:55'!
FAILURE!

!testRun: #TerniLapilliTest #test02XCanPlayItsTurn stamp: 'JEA 11/2/2020 15:57:55'!
ERROR!

!testRun: #TerniLapilliTest #test03OPlaysAfterX stamp: 'JEA 11/2/2020 15:57:55'!
ERROR!

!testRun: #TerniLapilliTest #test04OCanPlayItsTurn stamp: 'JEA 11/2/2020 15:57:55'!
ERROR!

!testRun: #TerniLapilliTest #test05XPlaysAfterO stamp: 'JEA 11/2/2020 15:57:55'!
ERROR!

!testRun: #TerniLapilliTest #test06XCantPlayOsTurn stamp: 'JEA 11/2/2020 15:57:55'!
ERROR!

!testRun: #TerniLapilliTest #test07OCantPlayXsTurn stamp: 'JEA 11/2/2020 15:57:55'!
PASSED!

!testRun: #TerniLapilliTest #test08PositionsDontOverlap stamp: 'JEA 11/2/2020 15:57:55'!
ERROR!

!testRun: #TerniLapilliTest #test09PositionsAreOccupied stamp: 'JEA 11/2/2020 15:57:55'!
ERROR!

!testRun: #TerniLapilliTest #test10OCantPlayInOccupiedPosition stamp: 'JEA 11/2/2020 15:57:55'!
ERROR!

!testRun: #TerniLapilliTest #test11XCantPlayInOccupiedPosition stamp: 'JEA 11/2/2020 15:57:55'!
ERROR!

!testRun: #TerniLapilliTest #test12XAndOAreAtEveryPositionPlayed stamp: 'JEA 11/2/2020 15:57:55'!
ERROR!

!testRun: #TerniLapilliTest #test13XCantPlayInInvalidPosition stamp: 'JEA 11/2/2020 15:57:55'!
PASSED!

!testRun: #TerniLapilliTest #test14OCantPlayInInvalidPosition stamp: 'JEA 11/2/2020 15:57:55'!
ERROR!

!testRun: #TerniLapilliTest #test15CantPlaceMoreThan3Chips stamp: 'JEA 11/2/2020 15:57:55'!
ERROR!

!testRun: #TerniLapilliTest #test16XCantMoveUntilAllChipsArePlaced stamp: 'JEA 11/2/2020 15:57:55'!
ERROR!

!testRun: #TerniLapilliTest #test17OCantMoveUntilAllChipsArePlaced stamp: 'JEA 11/2/2020 15:57:55'!
ERROR!

!testRun: #TerniLapilliTest #test18XCanMoveAfterAllChipsArePlaced stamp: 'JEA 11/2/2020 15:57:55'!
ERROR!

!testRun: #TerniLapilliTest #test19OCanMoveAfterAllChipsArePlaced stamp: 'JEA 11/2/2020 15:57:55'!
ERROR!

!testRun: #TerniLapilliTest #test20XCantMoveInOsTurn stamp: 'JEA 11/2/2020 15:57:55'!
ERROR!

!testRun: #TerniLapilliTest #test21OCantMoveInXsTurn stamp: 'JEA 11/2/2020 15:57:55'!
ERROR!

!testRun: #TerniLapilliTest #test22XCantMoveToOccupiedPosition stamp: 'JEA 11/2/2020 15:57:55'!
ERROR!

!testRun: #TerniLapilliTest #test23XCantMoveToInvalidPosition stamp: 'JEA 11/2/2020 15:57:55'!
ERROR!

!testRun: #TerniLapilliTest #test24XCantMoveToNotNeighborPosition stamp: 'JEA 11/2/2020 15:57:55'!
ERROR!

!testRun: #TerniLapilliTest #test25XCanWin stamp: 'JEA 11/2/2020 15:57:55'!
ERROR!

!testRun: #TerniLapilliTest #test26OCanWin stamp: 'JEA 11/2/2020 15:57:55'!
ERROR!

!testRun: #TerniLapilliTest #test27CantPlayAfterXWins stamp: 'JEA 11/2/2020 15:57:55'!
ERROR!

!testRun: #TerniLapilliTest #test28CantMoveAfterXWins stamp: 'JEA 11/2/2020 15:57:55'!
ERROR!

!testRun: #TerniLapilliTest #test29CantMoveAfterOWins stamp: 'JEA 11/2/2020 15:57:55'!
ERROR!

!testRun: #TerniLapilliTest #test02XCanPlayItsTurn stamp: 'JEA 11/2/2020 15:57:59'!
ERROR!
!TurnX methodsFor: 'playing' stamp: 'JEA 11/2/2020 16:00:43' prior: 50888041 overrides: 50887885!
putXAt: aPosition
	
	^TurnO newWith: (decoratee putXAt: aPosition).! !
!TurnX class methodsFor: 'instance creation' stamp: 'JEA 11/2/2020 16:01:26' prior: 50888342 overrides: 50888085!
new

	^self newWith: PlacingChips.! !
!TurnX class methodsFor: 'instance creation' stamp: 'JEA 11/2/2020 16:01:39'!
newWith: aState

	^self basicNew initializeWithState: aState XChips: Set new OChips: Set new.! !
!TurnX class methodsFor: 'instance creation' stamp: 'JEA 11/2/2020 16:01:51' prior: 50888557!
newWith: aState

	^self basicNew 
		initializeWithState: aState
		XChips: Set new
		OChips: Set new.! !

!methodRemoval: TurnX class #newWith:XChips:OChips: stamp: 'JEA 11/2/2020 16:02:22'!
newWith: aState XChips: chipsPlayedX OChips: chipsPlayedO

	^self basicNew initializeWithState: aState XChips: chipsPlayedX OChips: chipsPlayedO.!
!TurnX class methodsFor: 'instance creation' stamp: 'JEA 11/2/2020 16:03:03' prior: 50888563!
newWith: aState

	^self basicNew 
		initializeWithState: aState.! !
!TurnX class methodsFor: 'instance creation' stamp: 'JEA 11/2/2020 16:03:08' prior: 50888577!
newWith: aState

	^self basicNew initializeWithState: aState.! !
!TurnO class methodsFor: 'instance creation' stamp: 'JEA 11/2/2020 16:03:27'!
newWith: aState

	^self basicNew initializeWithState: aState.! !

!methodRemoval: TurnO class #newWith:XChips:OChips: stamp: 'JEA 11/2/2020 16:03:29'!
newWith: aState XChips: chipsPlayedX OChips: chipsPlayedO

	^self basicNew initializeWithState: aState XChips: chipsPlayedX OChips: chipsPlayedO.!
!TurnX methodsFor: 'playing' stamp: 'JEA 11/2/2020 16:04:28' prior: 50888034 overrides: 50887845!
moveXFrom: currentPosition to: newPosition
	
	^TurnO newWith: (decoratee moveXFrom: currentPosition to: newPosition).! !
!TurnO methodsFor: 'playing' stamp: 'JEA 11/2/2020 16:04:41' prior: 50888029 overrides: 50887865!
putOAt: aPosition
	
	^TurnX newWith: (decoratee putOAt: aPosition).! !
!TurnO methodsFor: 'playing' stamp: 'JEA 11/2/2020 16:04:53' prior: 50888022 overrides: 50887824!
moveOFrom: currentPosition to: newPosition
	
	^TurnX newWith: (decoratee moveOFrom: currentPosition to: newPosition).
	! !

----SNAPSHOT----(2 November 2020 16:04:56) CuisUniversity-4384.image priorSource: 17791145!
!TerniLapilliStateDecorator methodsFor: 'initialization' stamp: 'JEA 11/2/2020 16:06:56'!
initializeWithState: aState

	decoratee := aState.! !

!methodRemoval: TerniLapilliStateDecorator #initializeWithState:XChips:OChips: stamp: 'JEA 11/2/2020 16:07:03'!
initializeWithState: aState XChips: chipsPlayedX OChips: chipsPlayedO

	decoratee := aState newWithXChips: chipsPlayedX OChips: chipsPlayedO.!
!TurnX class methodsFor: 'instance creation' stamp: 'JEA 11/2/2020 16:07:19' prior: 50888553 overrides: 50888085!
new

	^self newWith: PlacingChips new.! !
!TurnX class methodsFor: 'instance creation' stamp: 'JEA 11/2/2020 16:07:44' prior: 50888638 overrides: 50888085!
new

	^self newWith: 
		(PlacingChips newWithXChips: Set new OChips: Set new).! !

!testRun: #TerniLapilliTest #test01XPlaysFirst stamp: 'JEA 11/2/2020 16:09:14'!
FAILURE!

!testRun: #TerniLapilliTest #test02XCanPlayItsTurn stamp: 'JEA 11/2/2020 16:09:14'!
ERROR!

!testRun: #TerniLapilliTest #test03OPlaysAfterX stamp: 'JEA 11/2/2020 16:09:14'!
ERROR!

!testRun: #TerniLapilliTest #test04OCanPlayItsTurn stamp: 'JEA 11/2/2020 16:09:14'!
ERROR!

!testRun: #TerniLapilliTest #test05XPlaysAfterO stamp: 'JEA 11/2/2020 16:09:14'!
ERROR!

!testRun: #TerniLapilliTest #test06XCantPlayOsTurn stamp: 'JEA 11/2/2020 16:09:14'!
ERROR!

!testRun: #TerniLapilliTest #test07OCantPlayXsTurn stamp: 'JEA 11/2/2020 16:09:14'!
PASSED!

!testRun: #TerniLapilliTest #test08PositionsDontOverlap stamp: 'JEA 11/2/2020 16:09:14'!
ERROR!

!testRun: #TerniLapilliTest #test09PositionsAreOccupied stamp: 'JEA 11/2/2020 16:09:14'!
ERROR!

!testRun: #TerniLapilliTest #test10OCantPlayInOccupiedPosition stamp: 'JEA 11/2/2020 16:09:14'!
ERROR!

!testRun: #TerniLapilliTest #test11XCantPlayInOccupiedPosition stamp: 'JEA 11/2/2020 16:09:14'!
ERROR!

!testRun: #TerniLapilliTest #test12XAndOAreAtEveryPositionPlayed stamp: 'JEA 11/2/2020 16:09:14'!
ERROR!

!testRun: #TerniLapilliTest #test13XCantPlayInInvalidPosition stamp: 'JEA 11/2/2020 16:09:14'!
PASSED!

!testRun: #TerniLapilliTest #test14OCantPlayInInvalidPosition stamp: 'JEA 11/2/2020 16:09:14'!
ERROR!

!testRun: #TerniLapilliTest #test15CantPlaceMoreThan3Chips stamp: 'JEA 11/2/2020 16:09:14'!
ERROR!

!testRun: #TerniLapilliTest #test16XCantMoveUntilAllChipsArePlaced stamp: 'JEA 11/2/2020 16:09:14'!
ERROR!

!testRun: #TerniLapilliTest #test17OCantMoveUntilAllChipsArePlaced stamp: 'JEA 11/2/2020 16:09:14'!
ERROR!

!testRun: #TerniLapilliTest #test18XCanMoveAfterAllChipsArePlaced stamp: 'JEA 11/2/2020 16:09:14'!
ERROR!

!testRun: #TerniLapilliTest #test19OCanMoveAfterAllChipsArePlaced stamp: 'JEA 11/2/2020 16:09:14'!
ERROR!

!testRun: #TerniLapilliTest #test20XCantMoveInOsTurn stamp: 'JEA 11/2/2020 16:09:14'!
ERROR!

!testRun: #TerniLapilliTest #test21OCantMoveInXsTurn stamp: 'JEA 11/2/2020 16:09:14'!
ERROR!

!testRun: #TerniLapilliTest #test22XCantMoveToOccupiedPosition stamp: 'JEA 11/2/2020 16:09:14'!
ERROR!

!testRun: #TerniLapilliTest #test23XCantMoveToInvalidPosition stamp: 'JEA 11/2/2020 16:09:14'!
ERROR!

!testRun: #TerniLapilliTest #test24XCantMoveToNotNeighborPosition stamp: 'JEA 11/2/2020 16:09:14'!
ERROR!

!testRun: #TerniLapilliTest #test25XCanWin stamp: 'JEA 11/2/2020 16:09:14'!
ERROR!

!testRun: #TerniLapilliTest #test26OCanWin stamp: 'JEA 11/2/2020 16:09:14'!
ERROR!

!testRun: #TerniLapilliTest #test27CantPlayAfterXWins stamp: 'JEA 11/2/2020 16:09:14'!
ERROR!

!testRun: #TerniLapilliTest #test28CantMoveAfterXWins stamp: 'JEA 11/2/2020 16:09:14'!
ERROR!

!testRun: #TerniLapilliTest #test29CantMoveAfterOWins stamp: 'JEA 11/2/2020 16:09:14'!
ERROR!

!testRun: #TerniLapilliTest #test02XCanPlayItsTurn stamp: 'JEA 11/2/2020 16:09:16'!
ERROR!
!MovingChips methodsFor: 'playing' stamp: 'JEA 11/2/2020 16:09:35' prior: 50888006 overrides: 50887133!
moveXFrom: currentPosition to: newPosition

	self canPlayAt: newPosition.

	(currentPosition eightNeighbors includes: newPosition)
		ifFalse: [ self error: TerniLapilli cantMoveToNotNeighborPositionDescription. ].
		
	chipsXPlayed remove: currentPosition.
	chipsXPlayed add: newPosition.
	
	self hasXWon ifTrue: [ ^self changeState: GameOver. ].
	^self.! !

Object subclass: #TerniLapilliState
	instanceVariableNames: 'chipsXPlayed chipsOPlayed'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TerniLapilli'!

!classDefinition: #TerniLapilliState category: 'TerniLapilli' stamp: 'JEA 11/2/2020 16:09:41'!
Object subclass: #TerniLapilliState
	instanceVariableNames: 'chipsXPlayed chipsOPlayed'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TerniLapilli'!
!TerniLapilliState class methodsFor: 'instance creation' stamp: 'JEA 11/2/2020 16:10:13' prior: 50887215 overrides: 16783533!
new

	^PlacingChips newWithXChips: Set new OChips: Set new.! !

!methodRemoval: TerniLapilliState #isOPlaying stamp: 'JEA 11/2/2020 16:10:48'!
isOPlaying

	^isXPlaying not.!

!methodRemoval: TerniLapilliState #isXPlaying stamp: 'JEA 11/2/2020 16:10:50'!
isXPlaying

	^isXPlaying.!
!TurnX methodsFor: 'testing' stamp: 'JEA 11/2/2020 16:11:12' prior: 50887931 overrides: 50887739!
isXPlaying

	^true.! !
!MovingChips methodsFor: 'playing' stamp: 'JEA 11/2/2020 16:11:55' prior: 50887990 overrides: 50887128!
moveOFrom: currentPosition to: newPosition

	self canPlayAt: newPosition.

	(currentPosition eightNeighbors includes: newPosition)
		ifFalse: [ self error: TerniLapilli cantMoveToNotNeighborPositionDescription. ].
		
	chipsOPlayed remove: currentPosition.
	chipsOPlayed add: newPosition.
	
	self hasOWon ifTrue: [ ^self changeState: GameOver. ].
	^self.! !
!PlacingChips methodsFor: 'playing' stamp: 'JEA 11/2/2020 16:12:06' prior: 50887978 overrides: 50887138!
putOAt: aPosition
	
	self canPlayAt: aPosition.
	
	chipsOPlayed add: aPosition.
	
	self hasOWon ifTrue: [ ^self changeState: GameOver. ].
	self amountOfChipsOPlayed = 3 ifTrue: [ ^self changeState: MovingChips. ].
	^self.! !
!PlacingChips methodsFor: 'playing' stamp: 'JEA 11/2/2020 16:12:09' prior: 50887969 overrides: 50887142!
putXAt: aPosition
	
	self canPlayAt: aPosition.
	
	chipsXPlayed add: aPosition.
	
	self hasXWon ifTrue: [ ^self changeState: GameOver. ].
	^self.! !

!testRun: #TerniLapilliTest #test01XPlaysFirst stamp: 'JEA 11/2/2020 16:12:10'!
PASSED!

!testRun: #TerniLapilliTest #test02XCanPlayItsTurn stamp: 'JEA 11/2/2020 16:12:10'!
PASSED!

!testRun: #TerniLapilliTest #test03OPlaysAfterX stamp: 'JEA 11/2/2020 16:12:10'!
PASSED!

!testRun: #TerniLapilliTest #test04OCanPlayItsTurn stamp: 'JEA 11/2/2020 16:12:10'!
PASSED!

!testRun: #TerniLapilliTest #test05XPlaysAfterO stamp: 'JEA 11/2/2020 16:12:10'!
PASSED!

!testRun: #TerniLapilliTest #test06XCantPlayOsTurn stamp: 'JEA 11/2/2020 16:12:10'!
PASSED!

!testRun: #TerniLapilliTest #test07OCantPlayXsTurn stamp: 'JEA 11/2/2020 16:12:10'!
PASSED!

!testRun: #TerniLapilliTest #test08PositionsDontOverlap stamp: 'JEA 11/2/2020 16:12:10'!
PASSED!

!testRun: #TerniLapilliTest #test09PositionsAreOccupied stamp: 'JEA 11/2/2020 16:12:10'!
PASSED!

!testRun: #TerniLapilliTest #test10OCantPlayInOccupiedPosition stamp: 'JEA 11/2/2020 16:12:10'!
PASSED!

!testRun: #TerniLapilliTest #test11XCantPlayInOccupiedPosition stamp: 'JEA 11/2/2020 16:12:10'!
PASSED!

!testRun: #TerniLapilliTest #test12XAndOAreAtEveryPositionPlayed stamp: 'JEA 11/2/2020 16:12:10'!
PASSED!

!testRun: #TerniLapilliTest #test13XCantPlayInInvalidPosition stamp: 'JEA 11/2/2020 16:12:10'!
PASSED!

!testRun: #TerniLapilliTest #test14OCantPlayInInvalidPosition stamp: 'JEA 11/2/2020 16:12:10'!
PASSED!

!testRun: #TerniLapilliTest #test15CantPlaceMoreThan3Chips stamp: 'JEA 11/2/2020 16:12:10'!
PASSED!

!testRun: #TerniLapilliTest #test16XCantMoveUntilAllChipsArePlaced stamp: 'JEA 11/2/2020 16:12:10'!
PASSED!

!testRun: #TerniLapilliTest #test17OCantMoveUntilAllChipsArePlaced stamp: 'JEA 11/2/2020 16:12:10'!
PASSED!

!testRun: #TerniLapilliTest #test18XCanMoveAfterAllChipsArePlaced stamp: 'JEA 11/2/2020 16:12:10'!
PASSED!

!testRun: #TerniLapilliTest #test19OCanMoveAfterAllChipsArePlaced stamp: 'JEA 11/2/2020 16:12:10'!
PASSED!

!testRun: #TerniLapilliTest #test20XCantMoveInOsTurn stamp: 'JEA 11/2/2020 16:12:10'!
PASSED!

!testRun: #TerniLapilliTest #test21OCantMoveInXsTurn stamp: 'JEA 11/2/2020 16:12:10'!
PASSED!

!testRun: #TerniLapilliTest #test22XCantMoveToOccupiedPosition stamp: 'JEA 11/2/2020 16:12:10'!
PASSED!

!testRun: #TerniLapilliTest #test23XCantMoveToInvalidPosition stamp: 'JEA 11/2/2020 16:12:10'!
PASSED!

!testRun: #TerniLapilliTest #test24XCantMoveToNotNeighborPosition stamp: 'JEA 11/2/2020 16:12:10'!
PASSED!

!testRun: #TerniLapilliTest #test25XCanWin stamp: 'JEA 11/2/2020 16:12:10'!
PASSED!

!testRun: #TerniLapilliTest #test26OCanWin stamp: 'JEA 11/2/2020 16:12:10'!
PASSED!

!testRun: #TerniLapilliTest #test27CantPlayAfterXWins stamp: 'JEA 11/2/2020 16:12:10'!
PASSED!

!testRun: #TerniLapilliTest #test28CantMoveAfterXWins stamp: 'JEA 11/2/2020 16:12:10'!
PASSED!

!testRun: #TerniLapilliTest #test29CantMoveAfterOWins stamp: 'JEA 11/2/2020 16:12:10'!
PASSED!
!PlacingChips methodsFor: 'playing' stamp: 'JEA 11/2/2020 16:14:19' prior: 50888801 overrides: 50887138!
putOAt: aPosition
	
	self canPlayAt: aPosition.
	
	chipsOPlayed add: aPosition.
	
	self hasOWon ifTrue: [ ^self changeState: GameOver. ].
	self amountOfChipsOPlayed = self class chipsPerPlayer ifTrue: [ ^self changeState: MovingChips. ].
	^self.! !
!PlacingChips methodsFor: 'playing' stamp: 'JEA 11/2/2020 16:14:33' prior: 50888910 overrides: 50887138!
putOAt: aPosition
	
	self canPlayAt: aPosition.
	
	chipsOPlayed add: aPosition.
	
	self hasOWon ifTrue: [ ^self changeState: GameOver. ].
	self amountOfChipsOPlayed = TerniLapilli chipsPerPlayer ifTrue: [ ^self changeState: MovingChips. ].
	^self.! !
!TerniLapilli class methodsFor: 'inquiries' stamp: 'JEA 11/2/2020 16:14:43'!
chipsPerPlayer
	^3.! !
!TerniLapilli class methodsFor: 'inquiries' stamp: 'JEA 11/2/2020 16:14:45' prior: 50888933!
chipsPerPlayer

	^3.! !

!testRun: #TerniLapilliTest #test01XPlaysFirst stamp: 'JEA 11/2/2020 16:14:47'!
PASSED!

!testRun: #TerniLapilliTest #test02XCanPlayItsTurn stamp: 'JEA 11/2/2020 16:14:47'!
PASSED!

!testRun: #TerniLapilliTest #test03OPlaysAfterX stamp: 'JEA 11/2/2020 16:14:47'!
PASSED!

!testRun: #TerniLapilliTest #test04OCanPlayItsTurn stamp: 'JEA 11/2/2020 16:14:47'!
PASSED!

!testRun: #TerniLapilliTest #test05XPlaysAfterO stamp: 'JEA 11/2/2020 16:14:47'!
PASSED!

!testRun: #TerniLapilliTest #test06XCantPlayOsTurn stamp: 'JEA 11/2/2020 16:14:47'!
PASSED!

!testRun: #TerniLapilliTest #test07OCantPlayXsTurn stamp: 'JEA 11/2/2020 16:14:47'!
PASSED!

!testRun: #TerniLapilliTest #test08PositionsDontOverlap stamp: 'JEA 11/2/2020 16:14:47'!
PASSED!

!testRun: #TerniLapilliTest #test09PositionsAreOccupied stamp: 'JEA 11/2/2020 16:14:47'!
PASSED!

!testRun: #TerniLapilliTest #test10OCantPlayInOccupiedPosition stamp: 'JEA 11/2/2020 16:14:47'!
PASSED!

!testRun: #TerniLapilliTest #test11XCantPlayInOccupiedPosition stamp: 'JEA 11/2/2020 16:14:47'!
PASSED!

!testRun: #TerniLapilliTest #test12XAndOAreAtEveryPositionPlayed stamp: 'JEA 11/2/2020 16:14:47'!
PASSED!

!testRun: #TerniLapilliTest #test13XCantPlayInInvalidPosition stamp: 'JEA 11/2/2020 16:14:47'!
PASSED!

!testRun: #TerniLapilliTest #test14OCantPlayInInvalidPosition stamp: 'JEA 11/2/2020 16:14:47'!
PASSED!

!testRun: #TerniLapilliTest #test15CantPlaceMoreThan3Chips stamp: 'JEA 11/2/2020 16:14:47'!
PASSED!

!testRun: #TerniLapilliTest #test16XCantMoveUntilAllChipsArePlaced stamp: 'JEA 11/2/2020 16:14:47'!
PASSED!

!testRun: #TerniLapilliTest #test17OCantMoveUntilAllChipsArePlaced stamp: 'JEA 11/2/2020 16:14:47'!
PASSED!

!testRun: #TerniLapilliTest #test18XCanMoveAfterAllChipsArePlaced stamp: 'JEA 11/2/2020 16:14:47'!
PASSED!

!testRun: #TerniLapilliTest #test19OCanMoveAfterAllChipsArePlaced stamp: 'JEA 11/2/2020 16:14:47'!
PASSED!

!testRun: #TerniLapilliTest #test20XCantMoveInOsTurn stamp: 'JEA 11/2/2020 16:14:47'!
PASSED!

!testRun: #TerniLapilliTest #test21OCantMoveInXsTurn stamp: 'JEA 11/2/2020 16:14:47'!
PASSED!

!testRun: #TerniLapilliTest #test22XCantMoveToOccupiedPosition stamp: 'JEA 11/2/2020 16:14:47'!
PASSED!

!testRun: #TerniLapilliTest #test23XCantMoveToInvalidPosition stamp: 'JEA 11/2/2020 16:14:47'!
PASSED!

!testRun: #TerniLapilliTest #test24XCantMoveToNotNeighborPosition stamp: 'JEA 11/2/2020 16:14:47'!
PASSED!

!testRun: #TerniLapilliTest #test25XCanWin stamp: 'JEA 11/2/2020 16:14:47'!
PASSED!

!testRun: #TerniLapilliTest #test26OCanWin stamp: 'JEA 11/2/2020 16:14:47'!
PASSED!

!testRun: #TerniLapilliTest #test27CantPlayAfterXWins stamp: 'JEA 11/2/2020 16:14:47'!
PASSED!

!testRun: #TerniLapilliTest #test28CantMoveAfterXWins stamp: 'JEA 11/2/2020 16:14:47'!
PASSED!

!testRun: #TerniLapilliTest #test29CantMoveAfterOWins stamp: 'JEA 11/2/2020 16:14:47'!
PASSED!

----SNAPSHOT----(2 November 2020 16:15:12) CuisUniversity-4384.image priorSource: 17823034!

----SNAPSHOT----(2 November 2020 16:15:59) CuisUniversity-4384.image priorSource: 17836133!
!TerniLapilli class methodsFor: 'inquiries' stamp: 'JEA 11/2/2020 16:18:02' prior: 50887085!
winningCombinations
	| winningSets |

	winningSets := Set new.
	winningSets add: (Set with: 0@0 with: 0@1 with: 0@2).
	winningSets add: (Set with: 1@0 with: 1@1 with: 1@2).
	winningSets add: (Set with: 2@0 with: 2@1 with: 2@2).
	winningSets add: (Set with: 0@0 with: 1@0 with: 2@0).
	winningSets add: (Set with: 0@1 with: 1@1 with: 2@1).
	winningSets add: (Set with: 0@2 with: 1@2 with: 2@2).
	winningSets add: (Set with: 0@0 with: 1@1 with: 2@2).
	winningSets add: (Set with: 0@2 with: 1@1 with: 2@0).
	
	^winningSets.
	! !
!TerniLapilliState class methodsFor: 'instance creation' stamp: 'JEA 11/2/2020 16:18:55'!
newWithXChips: chipsXPlayed OChips: chipsOPlayed

	self subclassResponsibility.! !

!methodRemoval: TerniLapilliStateDecorator class #new stamp: 'JEA 11/2/2020 16:19:34'!
new

	self subclassResponsibility.!
!TerniLapilliStateDecorator class methodsFor: 'instance creation' stamp: 'JEA 11/2/2020 16:19:44'!
newWith: aState

	self subclassResponsibility.! !

!testRun: #TerniLapilliTest #test01XPlaysFirst stamp: 'JEA 11/2/2020 16:19:46'!
PASSED!

!testRun: #TerniLapilliTest #test02XCanPlayItsTurn stamp: 'JEA 11/2/2020 16:19:46'!
PASSED!

!testRun: #TerniLapilliTest #test03OPlaysAfterX stamp: 'JEA 11/2/2020 16:19:46'!
PASSED!

!testRun: #TerniLapilliTest #test04OCanPlayItsTurn stamp: 'JEA 11/2/2020 16:19:46'!
PASSED!

!testRun: #TerniLapilliTest #test05XPlaysAfterO stamp: 'JEA 11/2/2020 16:19:46'!
PASSED!

!testRun: #TerniLapilliTest #test06XCantPlayOsTurn stamp: 'JEA 11/2/2020 16:19:46'!
PASSED!

!testRun: #TerniLapilliTest #test07OCantPlayXsTurn stamp: 'JEA 11/2/2020 16:19:46'!
PASSED!

!testRun: #TerniLapilliTest #test08PositionsDontOverlap stamp: 'JEA 11/2/2020 16:19:46'!
PASSED!

!testRun: #TerniLapilliTest #test09PositionsAreOccupied stamp: 'JEA 11/2/2020 16:19:46'!
PASSED!

!testRun: #TerniLapilliTest #test10OCantPlayInOccupiedPosition stamp: 'JEA 11/2/2020 16:19:46'!
PASSED!

!testRun: #TerniLapilliTest #test11XCantPlayInOccupiedPosition stamp: 'JEA 11/2/2020 16:19:46'!
PASSED!

!testRun: #TerniLapilliTest #test12XAndOAreAtEveryPositionPlayed stamp: 'JEA 11/2/2020 16:19:46'!
PASSED!

!testRun: #TerniLapilliTest #test13XCantPlayInInvalidPosition stamp: 'JEA 11/2/2020 16:19:46'!
PASSED!

!testRun: #TerniLapilliTest #test14OCantPlayInInvalidPosition stamp: 'JEA 11/2/2020 16:19:46'!
PASSED!

!testRun: #TerniLapilliTest #test15CantPlaceMoreThan3Chips stamp: 'JEA 11/2/2020 16:19:46'!
PASSED!

!testRun: #TerniLapilliTest #test16XCantMoveUntilAllChipsArePlaced stamp: 'JEA 11/2/2020 16:19:46'!
PASSED!

!testRun: #TerniLapilliTest #test17OCantMoveUntilAllChipsArePlaced stamp: 'JEA 11/2/2020 16:19:46'!
PASSED!

!testRun: #TerniLapilliTest #test18XCanMoveAfterAllChipsArePlaced stamp: 'JEA 11/2/2020 16:19:46'!
PASSED!

!testRun: #TerniLapilliTest #test19OCanMoveAfterAllChipsArePlaced stamp: 'JEA 11/2/2020 16:19:46'!
PASSED!

!testRun: #TerniLapilliTest #test20XCantMoveInOsTurn stamp: 'JEA 11/2/2020 16:19:46'!
PASSED!

!testRun: #TerniLapilliTest #test21OCantMoveInXsTurn stamp: 'JEA 11/2/2020 16:19:46'!
PASSED!

!testRun: #TerniLapilliTest #test22XCantMoveToOccupiedPosition stamp: 'JEA 11/2/2020 16:19:46'!
PASSED!

!testRun: #TerniLapilliTest #test23XCantMoveToInvalidPosition stamp: 'JEA 11/2/2020 16:19:46'!
PASSED!

!testRun: #TerniLapilliTest #test24XCantMoveToNotNeighborPosition stamp: 'JEA 11/2/2020 16:19:46'!
PASSED!

!testRun: #TerniLapilliTest #test25XCanWin stamp: 'JEA 11/2/2020 16:19:46'!
PASSED!

!testRun: #TerniLapilliTest #test26OCanWin stamp: 'JEA 11/2/2020 16:19:46'!
PASSED!

!testRun: #TerniLapilliTest #test27CantPlayAfterXWins stamp: 'JEA 11/2/2020 16:19:46'!
PASSED!

!testRun: #TerniLapilliTest #test28CantMoveAfterXWins stamp: 'JEA 11/2/2020 16:19:46'!
PASSED!

!testRun: #TerniLapilliTest #test29CantMoveAfterOWins stamp: 'JEA 11/2/2020 16:19:46'!
PASSED!
!TerniLapilliState methodsFor: 'playing - private' stamp: 'JEA 11/2/2020 16:20:23' prior: 50887118!
canPlayAt: aPosition

	(TerniLapilli isPositionValid: aPosition) ifFalse: [ self error: TerniLapilli invalidPositionDescription. ].
	
	(self isOccupied: aPosition) ifTrue: [ self error: TerniLapilli positionOccupiedDescription. ].! !

!testRun: #TerniLapilliTest #test01XPlaysFirst stamp: 'JEA 11/2/2020 16:20:56'!
PASSED!

!testRun: #TerniLapilliTest #test02XCanPlayItsTurn stamp: 'JEA 11/2/2020 16:20:56'!
PASSED!

!testRun: #TerniLapilliTest #test03OPlaysAfterX stamp: 'JEA 11/2/2020 16:20:56'!
PASSED!

!testRun: #TerniLapilliTest #test04OCanPlayItsTurn stamp: 'JEA 11/2/2020 16:20:56'!
PASSED!

!testRun: #TerniLapilliTest #test05XPlaysAfterO stamp: 'JEA 11/2/2020 16:20:56'!
PASSED!

!testRun: #TerniLapilliTest #test06XCantPlayOsTurn stamp: 'JEA 11/2/2020 16:20:56'!
PASSED!

!testRun: #TerniLapilliTest #test07OCantPlayXsTurn stamp: 'JEA 11/2/2020 16:20:56'!
PASSED!

!testRun: #TerniLapilliTest #test08PositionsDontOverlap stamp: 'JEA 11/2/2020 16:20:56'!
PASSED!

!testRun: #TerniLapilliTest #test09PositionsAreOccupied stamp: 'JEA 11/2/2020 16:20:56'!
PASSED!

!testRun: #TerniLapilliTest #test10OCantPlayInOccupiedPosition stamp: 'JEA 11/2/2020 16:20:56'!
PASSED!

!testRun: #TerniLapilliTest #test11XCantPlayInOccupiedPosition stamp: 'JEA 11/2/2020 16:20:56'!
PASSED!

!testRun: #TerniLapilliTest #test12XAndOAreAtEveryPositionPlayed stamp: 'JEA 11/2/2020 16:20:56'!
PASSED!

!testRun: #TerniLapilliTest #test13XCantPlayInInvalidPosition stamp: 'JEA 11/2/2020 16:20:56'!
PASSED!

!testRun: #TerniLapilliTest #test14OCantPlayInInvalidPosition stamp: 'JEA 11/2/2020 16:20:56'!
PASSED!

!testRun: #TerniLapilliTest #test15CantPlaceMoreThan3Chips stamp: 'JEA 11/2/2020 16:20:56'!
PASSED!

!testRun: #TerniLapilliTest #test16XCantMoveUntilAllChipsArePlaced stamp: 'JEA 11/2/2020 16:20:56'!
PASSED!

!testRun: #TerniLapilliTest #test17OCantMoveUntilAllChipsArePlaced stamp: 'JEA 11/2/2020 16:20:56'!
PASSED!

!testRun: #TerniLapilliTest #test18XCanMoveAfterAllChipsArePlaced stamp: 'JEA 11/2/2020 16:20:56'!
PASSED!

!testRun: #TerniLapilliTest #test19OCanMoveAfterAllChipsArePlaced stamp: 'JEA 11/2/2020 16:20:56'!
PASSED!

!testRun: #TerniLapilliTest #test20XCantMoveInOsTurn stamp: 'JEA 11/2/2020 16:20:56'!
PASSED!

!testRun: #TerniLapilliTest #test21OCantMoveInXsTurn stamp: 'JEA 11/2/2020 16:20:56'!
PASSED!

!testRun: #TerniLapilliTest #test22XCantMoveToOccupiedPosition stamp: 'JEA 11/2/2020 16:20:56'!
PASSED!

!testRun: #TerniLapilliTest #test23XCantMoveToInvalidPosition stamp: 'JEA 11/2/2020 16:20:56'!
PASSED!

!testRun: #TerniLapilliTest #test24XCantMoveToNotNeighborPosition stamp: 'JEA 11/2/2020 16:20:56'!
PASSED!

!testRun: #TerniLapilliTest #test25XCanWin stamp: 'JEA 11/2/2020 16:20:56'!
PASSED!

!testRun: #TerniLapilliTest #test26OCanWin stamp: 'JEA 11/2/2020 16:20:56'!
PASSED!

!testRun: #TerniLapilliTest #test27CantPlayAfterXWins stamp: 'JEA 11/2/2020 16:20:56'!
PASSED!

!testRun: #TerniLapilliTest #test28CantMoveAfterXWins stamp: 'JEA 11/2/2020 16:20:56'!
PASSED!

!testRun: #TerniLapilliTest #test29CantMoveAfterOWins stamp: 'JEA 11/2/2020 16:20:56'!
PASSED!
!GameOver methodsFor: 'errors' stamp: 'JEA 11/2/2020 16:22:09'!
gameIsOverError

	self error: TerniLapilli gameIsOverDescription.! !
!GameOver methodsFor: 'errors' stamp: 'JEA 11/2/2020 16:22:28' prior: 50889260!
gameIsOverError

	self error: TerniLapilli gameIsOverDescription.! !
!GameOver methodsFor: 'playing' stamp: 'JEA 11/2/2020 16:22:41' prior: 50887234 overrides: 50887128!
moveOFrom: currentPosition to: newPosition
	
	self gameIsOverError.! !
!GameOver methodsFor: 'playing' stamp: 'JEA 11/2/2020 16:22:44' prior: 50887240 overrides: 50887133!
moveXFrom: currentPosition to: newPosition
	
	self gameIsOverError.! !
!GameOver methodsFor: 'playing' stamp: 'JEA 11/2/2020 16:22:47' prior: 50887251 overrides: 50887142!
putXAt: aPosition
	
	self gameIsOverError.! !
!GameOver methodsFor: 'playing' stamp: 'JEA 11/2/2020 16:22:49' prior: 50887246 overrides: 50887138!
putOAt: aPosition
	
	self gameIsOverError.! !

----SNAPSHOT----(2 November 2020 16:22:58) CuisUniversity-4384.image priorSource: 17836226!
!MovingChips methodsFor: 'errors' stamp: 'JEA 11/2/2020 16:23:32'!
noMoreChipsError

	self error: TerniLapilli noMoreChipsDescription.! !
!MovingChips methodsFor: 'playing' stamp: 'JEA 11/2/2020 16:23:43' prior: 50887324 overrides: 50887138!
putOAt: aPosition
	
	self noMoreChipsError.! !
!MovingChips methodsFor: 'playing' stamp: 'JEA 11/2/2020 16:23:47' prior: 50887330 overrides: 50887142!
putXAt: aPosition
	
	self noMoreChipsError.! !

!testRun: #TerniLapilliTest #test01XPlaysFirst stamp: 'JEA 11/2/2020 16:23:50'!
PASSED!

!testRun: #TerniLapilliTest #test02XCanPlayItsTurn stamp: 'JEA 11/2/2020 16:23:50'!
PASSED!

!testRun: #TerniLapilliTest #test03OPlaysAfterX stamp: 'JEA 11/2/2020 16:23:50'!
PASSED!

!testRun: #TerniLapilliTest #test04OCanPlayItsTurn stamp: 'JEA 11/2/2020 16:23:50'!
PASSED!

!testRun: #TerniLapilliTest #test05XPlaysAfterO stamp: 'JEA 11/2/2020 16:23:50'!
PASSED!

!testRun: #TerniLapilliTest #test06XCantPlayOsTurn stamp: 'JEA 11/2/2020 16:23:50'!
PASSED!

!testRun: #TerniLapilliTest #test07OCantPlayXsTurn stamp: 'JEA 11/2/2020 16:23:50'!
PASSED!

!testRun: #TerniLapilliTest #test08PositionsDontOverlap stamp: 'JEA 11/2/2020 16:23:50'!
PASSED!

!testRun: #TerniLapilliTest #test09PositionsAreOccupied stamp: 'JEA 11/2/2020 16:23:50'!
PASSED!

!testRun: #TerniLapilliTest #test10OCantPlayInOccupiedPosition stamp: 'JEA 11/2/2020 16:23:50'!
PASSED!

!testRun: #TerniLapilliTest #test11XCantPlayInOccupiedPosition stamp: 'JEA 11/2/2020 16:23:50'!
PASSED!

!testRun: #TerniLapilliTest #test12XAndOAreAtEveryPositionPlayed stamp: 'JEA 11/2/2020 16:23:50'!
PASSED!

!testRun: #TerniLapilliTest #test13XCantPlayInInvalidPosition stamp: 'JEA 11/2/2020 16:23:50'!
PASSED!

!testRun: #TerniLapilliTest #test14OCantPlayInInvalidPosition stamp: 'JEA 11/2/2020 16:23:50'!
PASSED!

!testRun: #TerniLapilliTest #test15CantPlaceMoreThan3Chips stamp: 'JEA 11/2/2020 16:23:50'!
PASSED!

!testRun: #TerniLapilliTest #test16XCantMoveUntilAllChipsArePlaced stamp: 'JEA 11/2/2020 16:23:50'!
PASSED!

!testRun: #TerniLapilliTest #test17OCantMoveUntilAllChipsArePlaced stamp: 'JEA 11/2/2020 16:23:50'!
PASSED!

!testRun: #TerniLapilliTest #test18XCanMoveAfterAllChipsArePlaced stamp: 'JEA 11/2/2020 16:23:50'!
PASSED!

!testRun: #TerniLapilliTest #test19OCanMoveAfterAllChipsArePlaced stamp: 'JEA 11/2/2020 16:23:50'!
PASSED!

!testRun: #TerniLapilliTest #test20XCantMoveInOsTurn stamp: 'JEA 11/2/2020 16:23:50'!
PASSED!

!testRun: #TerniLapilliTest #test21OCantMoveInXsTurn stamp: 'JEA 11/2/2020 16:23:50'!
PASSED!

!testRun: #TerniLapilliTest #test22XCantMoveToOccupiedPosition stamp: 'JEA 11/2/2020 16:23:50'!
PASSED!

!testRun: #TerniLapilliTest #test23XCantMoveToInvalidPosition stamp: 'JEA 11/2/2020 16:23:50'!
PASSED!

!testRun: #TerniLapilliTest #test24XCantMoveToNotNeighborPosition stamp: 'JEA 11/2/2020 16:23:50'!
PASSED!

!testRun: #TerniLapilliTest #test25XCanWin stamp: 'JEA 11/2/2020 16:23:50'!
PASSED!

!testRun: #TerniLapilliTest #test26OCanWin stamp: 'JEA 11/2/2020 16:23:50'!
PASSED!

!testRun: #TerniLapilliTest #test27CantPlayAfterXWins stamp: 'JEA 11/2/2020 16:23:50'!
PASSED!

!testRun: #TerniLapilliTest #test28CantMoveAfterXWins stamp: 'JEA 11/2/2020 16:23:50'!
PASSED!

!testRun: #TerniLapilliTest #test29CantMoveAfterOWins stamp: 'JEA 11/2/2020 16:23:50'!
PASSED!
!PlacingChips methodsFor: 'playing' stamp: 'JEA 11/2/2020 16:24:05' prior: 50887367 overrides: 50887128!
moveOFrom: currentPosition to: newPosition
	
	self cantMoveYetError.! !
!PlacingChips methodsFor: 'playing' stamp: 'JEA 11/2/2020 16:24:17' prior: 50887373 overrides: 50887133!
moveXFrom: currentPosition to: newPosition

	self cantMoveYetError.! !
!PlacingChips methodsFor: 'errors' stamp: 'JEA 11/2/2020 16:24:30'!
cantMoveYetError

	self error: TerniLapilli cantMoveYetDescription.! !

!testRun: #TerniLapilliTest #test01XPlaysFirst stamp: 'JEA 11/2/2020 16:24:32'!
PASSED!

!testRun: #TerniLapilliTest #test02XCanPlayItsTurn stamp: 'JEA 11/2/2020 16:24:32'!
PASSED!

!testRun: #TerniLapilliTest #test03OPlaysAfterX stamp: 'JEA 11/2/2020 16:24:32'!
PASSED!

!testRun: #TerniLapilliTest #test04OCanPlayItsTurn stamp: 'JEA 11/2/2020 16:24:32'!
PASSED!

!testRun: #TerniLapilliTest #test05XPlaysAfterO stamp: 'JEA 11/2/2020 16:24:32'!
PASSED!

!testRun: #TerniLapilliTest #test06XCantPlayOsTurn stamp: 'JEA 11/2/2020 16:24:32'!
PASSED!

!testRun: #TerniLapilliTest #test07OCantPlayXsTurn stamp: 'JEA 11/2/2020 16:24:32'!
PASSED!

!testRun: #TerniLapilliTest #test08PositionsDontOverlap stamp: 'JEA 11/2/2020 16:24:32'!
PASSED!

!testRun: #TerniLapilliTest #test09PositionsAreOccupied stamp: 'JEA 11/2/2020 16:24:32'!
PASSED!

!testRun: #TerniLapilliTest #test10OCantPlayInOccupiedPosition stamp: 'JEA 11/2/2020 16:24:32'!
PASSED!

!testRun: #TerniLapilliTest #test11XCantPlayInOccupiedPosition stamp: 'JEA 11/2/2020 16:24:32'!
PASSED!

!testRun: #TerniLapilliTest #test12XAndOAreAtEveryPositionPlayed stamp: 'JEA 11/2/2020 16:24:32'!
PASSED!

!testRun: #TerniLapilliTest #test13XCantPlayInInvalidPosition stamp: 'JEA 11/2/2020 16:24:32'!
PASSED!

!testRun: #TerniLapilliTest #test14OCantPlayInInvalidPosition stamp: 'JEA 11/2/2020 16:24:32'!
PASSED!

!testRun: #TerniLapilliTest #test15CantPlaceMoreThan3Chips stamp: 'JEA 11/2/2020 16:24:32'!
PASSED!

!testRun: #TerniLapilliTest #test16XCantMoveUntilAllChipsArePlaced stamp: 'JEA 11/2/2020 16:24:32'!
PASSED!

!testRun: #TerniLapilliTest #test17OCantMoveUntilAllChipsArePlaced stamp: 'JEA 11/2/2020 16:24:32'!
PASSED!

!testRun: #TerniLapilliTest #test18XCanMoveAfterAllChipsArePlaced stamp: 'JEA 11/2/2020 16:24:32'!
PASSED!

!testRun: #TerniLapilliTest #test19OCanMoveAfterAllChipsArePlaced stamp: 'JEA 11/2/2020 16:24:32'!
PASSED!

!testRun: #TerniLapilliTest #test20XCantMoveInOsTurn stamp: 'JEA 11/2/2020 16:24:32'!
PASSED!

!testRun: #TerniLapilliTest #test21OCantMoveInXsTurn stamp: 'JEA 11/2/2020 16:24:32'!
PASSED!

!testRun: #TerniLapilliTest #test22XCantMoveToOccupiedPosition stamp: 'JEA 11/2/2020 16:24:32'!
PASSED!

!testRun: #TerniLapilliTest #test23XCantMoveToInvalidPosition stamp: 'JEA 11/2/2020 16:24:32'!
PASSED!

!testRun: #TerniLapilliTest #test24XCantMoveToNotNeighborPosition stamp: 'JEA 11/2/2020 16:24:32'!
PASSED!

!testRun: #TerniLapilliTest #test25XCanWin stamp: 'JEA 11/2/2020 16:24:32'!
PASSED!

!testRun: #TerniLapilliTest #test26OCanWin stamp: 'JEA 11/2/2020 16:24:32'!
PASSED!

!testRun: #TerniLapilliTest #test27CantPlayAfterXWins stamp: 'JEA 11/2/2020 16:24:32'!
PASSED!

!testRun: #TerniLapilliTest #test28CantMoveAfterXWins stamp: 'JEA 11/2/2020 16:24:32'!
PASSED!

!testRun: #TerniLapilliTest #test29CantMoveAfterOWins stamp: 'JEA 11/2/2020 16:24:32'!
PASSED!
!TerniLapilliStateDecorator methodsFor: 'errors' stamp: 'JEA 11/2/2020 16:26:19'!
notYourTurnError

	self error: TerniLapilli notYourTurnDescription! !
!TurnO methodsFor: 'playing' stamp: 'JEA 11/2/2020 16:26:33' prior: 50887898 overrides: 50887885!
putXAt: aPosition
	
	! !
!TurnO methodsFor: 'playing' stamp: 'JEA 11/2/2020 16:26:34' prior: 50889513 overrides: 50887885!
putXAt: aPosition
	
	self notYourTurnError.! !
!TurnO methodsFor: 'playing' stamp: 'JEA 11/2/2020 16:26:38' prior: 50887904 overrides: 50887845!
moveXFrom: currentPosition to: newPosition
	
	self notYourTurnError.! !
!TurnX methodsFor: 'playing' stamp: 'JEA 11/2/2020 16:26:42' prior: 50887942 overrides: 50887824!
moveOFrom: currentPosition to: newPosition
	
	self notYourTurnError.! !
!TurnX methodsFor: 'playing' stamp: 'JEA 11/2/2020 16:26:45' prior: 50887949 overrides: 50887865!
putOAt: aPosition
	
	self notYourTurnError.! !

!testRun: #TerniLapilliTest #test01XPlaysFirst stamp: 'JEA 11/2/2020 16:26:47'!
PASSED!

!testRun: #TerniLapilliTest #test02XCanPlayItsTurn stamp: 'JEA 11/2/2020 16:26:47'!
PASSED!

!testRun: #TerniLapilliTest #test03OPlaysAfterX stamp: 'JEA 11/2/2020 16:26:47'!
PASSED!

!testRun: #TerniLapilliTest #test04OCanPlayItsTurn stamp: 'JEA 11/2/2020 16:26:47'!
PASSED!

!testRun: #TerniLapilliTest #test05XPlaysAfterO stamp: 'JEA 11/2/2020 16:26:47'!
PASSED!

!testRun: #TerniLapilliTest #test06XCantPlayOsTurn stamp: 'JEA 11/2/2020 16:26:47'!
PASSED!

!testRun: #TerniLapilliTest #test07OCantPlayXsTurn stamp: 'JEA 11/2/2020 16:26:47'!
PASSED!

!testRun: #TerniLapilliTest #test08PositionsDontOverlap stamp: 'JEA 11/2/2020 16:26:47'!
PASSED!

!testRun: #TerniLapilliTest #test09PositionsAreOccupied stamp: 'JEA 11/2/2020 16:26:47'!
PASSED!

!testRun: #TerniLapilliTest #test10OCantPlayInOccupiedPosition stamp: 'JEA 11/2/2020 16:26:47'!
PASSED!

!testRun: #TerniLapilliTest #test11XCantPlayInOccupiedPosition stamp: 'JEA 11/2/2020 16:26:47'!
PASSED!

!testRun: #TerniLapilliTest #test12XAndOAreAtEveryPositionPlayed stamp: 'JEA 11/2/2020 16:26:47'!
PASSED!

!testRun: #TerniLapilliTest #test13XCantPlayInInvalidPosition stamp: 'JEA 11/2/2020 16:26:47'!
PASSED!

!testRun: #TerniLapilliTest #test14OCantPlayInInvalidPosition stamp: 'JEA 11/2/2020 16:26:47'!
PASSED!

!testRun: #TerniLapilliTest #test15CantPlaceMoreThan3Chips stamp: 'JEA 11/2/2020 16:26:47'!
PASSED!

!testRun: #TerniLapilliTest #test16XCantMoveUntilAllChipsArePlaced stamp: 'JEA 11/2/2020 16:26:47'!
PASSED!

!testRun: #TerniLapilliTest #test17OCantMoveUntilAllChipsArePlaced stamp: 'JEA 11/2/2020 16:26:47'!
PASSED!

!testRun: #TerniLapilliTest #test18XCanMoveAfterAllChipsArePlaced stamp: 'JEA 11/2/2020 16:26:47'!
PASSED!

!testRun: #TerniLapilliTest #test19OCanMoveAfterAllChipsArePlaced stamp: 'JEA 11/2/2020 16:26:47'!
PASSED!

!testRun: #TerniLapilliTest #test20XCantMoveInOsTurn stamp: 'JEA 11/2/2020 16:26:47'!
PASSED!

!testRun: #TerniLapilliTest #test21OCantMoveInXsTurn stamp: 'JEA 11/2/2020 16:26:47'!
PASSED!

!testRun: #TerniLapilliTest #test22XCantMoveToOccupiedPosition stamp: 'JEA 11/2/2020 16:26:47'!
PASSED!

!testRun: #TerniLapilliTest #test23XCantMoveToInvalidPosition stamp: 'JEA 11/2/2020 16:26:47'!
PASSED!

!testRun: #TerniLapilliTest #test24XCantMoveToNotNeighborPosition stamp: 'JEA 11/2/2020 16:26:47'!
PASSED!

!testRun: #TerniLapilliTest #test25XCanWin stamp: 'JEA 11/2/2020 16:26:47'!
PASSED!

!testRun: #TerniLapilliTest #test26OCanWin stamp: 'JEA 11/2/2020 16:26:47'!
PASSED!

!testRun: #TerniLapilliTest #test27CantPlayAfterXWins stamp: 'JEA 11/2/2020 16:26:47'!
PASSED!

!testRun: #TerniLapilliTest #test28CantMoveAfterXWins stamp: 'JEA 11/2/2020 16:26:47'!
PASSED!

!testRun: #TerniLapilliTest #test29CantMoveAfterOWins stamp: 'JEA 11/2/2020 16:26:47'!
PASSED!

----SNAPSHOT----(2 November 2020 16:26:52) CuisUniversity-4384.image priorSource: 17844525!
!MovingChips methodsFor: 'playing' stamp: 'JEA 11/2/2020 16:30:21' prior: 50888786 overrides: 50887128!
moveOFrom: currentPosition to: newPosition

	self canPlayAt: newPosition.

	self asssureThatCanMoveFrom: currentPosition to: newPosition.
		
	chipsOPlayed remove: currentPosition.
	chipsOPlayed add: newPosition.
	
	self hasOWon ifTrue: [ ^self changeState: GameOver. ].
	^self.! !
!MovingChips methodsFor: 'playing' stamp: 'JEA 11/2/2020 16:30:40' prior: 50889632 overrides: 50887128!
moveOFrom: currentPosition to: newPosition

	self canPlayAt: newPosition.

	self asssureThatCanMoveFrom: currentPosition to: newPosition.
		
	chipsOPlayed remove: currentPosition.
	chipsOPlayed add: newPosition.
	
	self hasOWon ifTrue: [ ^self changeState: GameOver. ].
	^self.! !
!TerniLapilliState methodsFor: 'playing - private' stamp: 'JEA 11/2/2020 16:31:03'!
assureThatCanMoveFrom: currentPosition to: newPosition

	(currentPosition eightNeighbors includes: newPosition)
		ifFalse: [ self error: TerniLapilli cantMoveToNotNeighborPositionDescription. ].! !
!TerniLapilliState methodsFor: 'playing - private' stamp: 'JEA 11/2/2020 16:31:15'!
assureThatCanPlayAt: aPosition

	(TerniLapilli isPositionValid: aPosition) ifFalse: [ self error: TerniLapilli invalidPositionDescription. ].
	
	(self isOccupied: aPosition) ifTrue: [ self error: TerniLapilli positionOccupiedDescription. ].! !
!MovingChips methodsFor: 'as yet unclassified' stamp: 'JEA 11/2/2020 16:31:15' prior: 50888741 overrides: 50887133!
moveXFrom: currentPosition to: newPosition

	self assureThatCanPlayAt: newPosition.

	(currentPosition eightNeighbors includes: newPosition)
		ifFalse: [ self error: TerniLapilli cantMoveToNotNeighborPositionDescription. ].
		
	chipsXPlayed remove: currentPosition.
	chipsXPlayed add: newPosition.
	
	self hasXWon ifTrue: [ ^self changeState: GameOver. ].
	^self.! !
!MovingChips methodsFor: 'as yet unclassified' stamp: 'JEA 11/2/2020 16:31:15' prior: 50889645 overrides: 50887128!
moveOFrom: currentPosition to: newPosition

	self assureThatCanPlayAt: newPosition.

	self asssureThatCanMoveFrom: currentPosition to: newPosition.
		
	chipsOPlayed remove: currentPosition.
	chipsOPlayed add: newPosition.
	
	self hasOWon ifTrue: [ ^self changeState: GameOver. ].
	^self.! !
!PlacingChips methodsFor: 'as yet unclassified' stamp: 'JEA 11/2/2020 16:31:15' prior: 50888812 overrides: 50887142!
putXAt: aPosition
	
	self assureThatCanPlayAt: aPosition.
	
	chipsXPlayed add: aPosition.
	
	self hasXWon ifTrue: [ ^self changeState: GameOver. ].
	^self.! !
!PlacingChips methodsFor: 'as yet unclassified' stamp: 'JEA 11/2/2020 16:31:15' prior: 50888922 overrides: 50887138!
putOAt: aPosition
	
	self assureThatCanPlayAt: aPosition.
	
	chipsOPlayed add: aPosition.
	
	self hasOWon ifTrue: [ ^self changeState: GameOver. ].
	self amountOfChipsOPlayed = TerniLapilli chipsPerPlayer ifTrue: [ ^self changeState: MovingChips. ].
	^self.! !

!methodRemoval: TerniLapilliState #canPlayAt: stamp: 'JEA 11/2/2020 16:31:15'!
canPlayAt: aPosition

	(TerniLapilli isPositionValid: aPosition) ifFalse: [ self error: TerniLapilli invalidPositionDescription. ].
	
	(self isOccupied: aPosition) ifTrue: [ self error: TerniLapilli positionOccupiedDescription. ].!

!testRun: #TerniLapilliTest #test01XPlaysFirst stamp: 'JEA 11/2/2020 16:31:19'!
PASSED!

!testRun: #TerniLapilliTest #test02XCanPlayItsTurn stamp: 'JEA 11/2/2020 16:31:19'!
PASSED!

!testRun: #TerniLapilliTest #test03OPlaysAfterX stamp: 'JEA 11/2/2020 16:31:19'!
PASSED!

!testRun: #TerniLapilliTest #test04OCanPlayItsTurn stamp: 'JEA 11/2/2020 16:31:19'!
PASSED!

!testRun: #TerniLapilliTest #test05XPlaysAfterO stamp: 'JEA 11/2/2020 16:31:19'!
PASSED!

!testRun: #TerniLapilliTest #test06XCantPlayOsTurn stamp: 'JEA 11/2/2020 16:31:19'!
PASSED!

!testRun: #TerniLapilliTest #test07OCantPlayXsTurn stamp: 'JEA 11/2/2020 16:31:19'!
PASSED!

!testRun: #TerniLapilliTest #test08PositionsDontOverlap stamp: 'JEA 11/2/2020 16:31:19'!
PASSED!

!testRun: #TerniLapilliTest #test09PositionsAreOccupied stamp: 'JEA 11/2/2020 16:31:19'!
PASSED!

!testRun: #TerniLapilliTest #test10OCantPlayInOccupiedPosition stamp: 'JEA 11/2/2020 16:31:19'!
PASSED!

!testRun: #TerniLapilliTest #test11XCantPlayInOccupiedPosition stamp: 'JEA 11/2/2020 16:31:19'!
PASSED!

!testRun: #TerniLapilliTest #test12XAndOAreAtEveryPositionPlayed stamp: 'JEA 11/2/2020 16:31:19'!
PASSED!

!testRun: #TerniLapilliTest #test13XCantPlayInInvalidPosition stamp: 'JEA 11/2/2020 16:31:19'!
PASSED!

!testRun: #TerniLapilliTest #test14OCantPlayInInvalidPosition stamp: 'JEA 11/2/2020 16:31:19'!
PASSED!

!testRun: #TerniLapilliTest #test15CantPlaceMoreThan3Chips stamp: 'JEA 11/2/2020 16:31:19'!
PASSED!

!testRun: #TerniLapilliTest #test16XCantMoveUntilAllChipsArePlaced stamp: 'JEA 11/2/2020 16:31:19'!
PASSED!

!testRun: #TerniLapilliTest #test17OCantMoveUntilAllChipsArePlaced stamp: 'JEA 11/2/2020 16:31:19'!
PASSED!

!testRun: #TerniLapilliTest #test18XCanMoveAfterAllChipsArePlaced stamp: 'JEA 11/2/2020 16:31:19'!
PASSED!

!testRun: #TerniLapilliTest #test19OCanMoveAfterAllChipsArePlaced stamp: 'JEA 11/2/2020 16:31:19'!
ERROR!

!testRun: #TerniLapilliTest #test20XCantMoveInOsTurn stamp: 'JEA 11/2/2020 16:31:19'!
PASSED!

!testRun: #TerniLapilliTest #test21OCantMoveInXsTurn stamp: 'JEA 11/2/2020 16:31:19'!
PASSED!

!testRun: #TerniLapilliTest #test22XCantMoveToOccupiedPosition stamp: 'JEA 11/2/2020 16:31:19'!
PASSED!

!testRun: #TerniLapilliTest #test23XCantMoveToInvalidPosition stamp: 'JEA 11/2/2020 16:31:19'!
PASSED!

!testRun: #TerniLapilliTest #test24XCantMoveToNotNeighborPosition stamp: 'JEA 11/2/2020 16:31:19'!
PASSED!

!testRun: #TerniLapilliTest #test25XCanWin stamp: 'JEA 11/2/2020 16:31:19'!
PASSED!

!testRun: #TerniLapilliTest #test26OCanWin stamp: 'JEA 11/2/2020 16:31:19'!
PASSED!

!testRun: #TerniLapilliTest #test27CantPlayAfterXWins stamp: 'JEA 11/2/2020 16:31:19'!
PASSED!

!testRun: #TerniLapilliTest #test28CantMoveAfterXWins stamp: 'JEA 11/2/2020 16:31:19'!
PASSED!

!testRun: #TerniLapilliTest #test29CantMoveAfterOWins stamp: 'JEA 11/2/2020 16:31:19'!
PASSED!

!testRun: #TerniLapilliTest #test19OCanMoveAfterAllChipsArePlaced stamp: 'JEA 11/2/2020 16:31:19'!
ERROR!
!MovingChips methodsFor: 'playing' stamp: 'JEA 11/2/2020 16:31:34' prior: 50889694 overrides: 50887128!
moveOFrom: currentPosition to: newPosition

	self assureThatCanPlayAt: newPosition.

	self assureThatCanMoveFrom: currentPosition to: newPosition.
		
	chipsOPlayed remove: currentPosition.
	chipsOPlayed add: newPosition.
	
	self hasOWon ifTrue: [ ^self changeState: GameOver. ].
	^self.! !
!MovingChips methodsFor: 'playing' stamp: 'JEA 11/2/2020 16:31:42' prior: 50889678 overrides: 50887133!
moveXFrom: currentPosition to: newPosition

	self assureThatCanPlayAt: newPosition.

	self assureThatCanMoveFrom: currentPosition to: newPosition.
		
	chipsXPlayed remove: currentPosition.
	chipsXPlayed add: newPosition.
	
	self hasXWon ifTrue: [ ^self changeState: GameOver. ].
	^self.! !
!TerniLapilliState methodsFor: 'playing - private' stamp: 'JEA 11/2/2020 16:32:08' prior: 50889657!
assureThatCanMoveFrom: currentPosition to: newPosition

self assureThatCanPlayAt: newPosition.

	(currentPosition eightNeighbors includes: newPosition)
		ifFalse: [ self error: TerniLapilli cantMoveToNotNeighborPositionDescription. ].! !
!TerniLapilliState methodsFor: 'playing - private' stamp: 'JEA 11/2/2020 16:32:09' prior: 50889856!
assureThatCanMoveFrom: currentPosition to: newPosition

	self assureThatCanPlayAt: newPosition.

	(currentPosition eightNeighbors includes: newPosition)
		ifFalse: [ self error: TerniLapilli cantMoveToNotNeighborPositionDescription. ].! !
!MovingChips methodsFor: 'playing' stamp: 'JEA 11/2/2020 16:32:18' prior: 50889830 overrides: 50887128!
moveOFrom: currentPosition to: newPosition

	self assureThatCanMoveFrom: currentPosition to: newPosition.
		
	chipsOPlayed remove: currentPosition.
	chipsOPlayed add: newPosition.
	
	self hasOWon ifTrue: [ ^self changeState: GameOver. ].
	^self.! !
!MovingChips methodsFor: 'playing' stamp: 'JEA 11/2/2020 16:32:21' prior: 50889843 overrides: 50887133!
moveXFrom: currentPosition to: newPosition

	self assureThatCanMoveFrom: currentPosition to: newPosition.
		
	chipsXPlayed remove: currentPosition.
	chipsXPlayed add: newPosition.
	
	self hasXWon ifTrue: [ ^self changeState: GameOver. ].
	^self.! !

!testRun: #TerniLapilliTest #test01XPlaysFirst stamp: 'JEA 11/2/2020 16:32:23'!
PASSED!

!testRun: #TerniLapilliTest #test02XCanPlayItsTurn stamp: 'JEA 11/2/2020 16:32:23'!
PASSED!

!testRun: #TerniLapilliTest #test03OPlaysAfterX stamp: 'JEA 11/2/2020 16:32:23'!
PASSED!

!testRun: #TerniLapilliTest #test04OCanPlayItsTurn stamp: 'JEA 11/2/2020 16:32:23'!
PASSED!

!testRun: #TerniLapilliTest #test05XPlaysAfterO stamp: 'JEA 11/2/2020 16:32:23'!
PASSED!

!testRun: #TerniLapilliTest #test06XCantPlayOsTurn stamp: 'JEA 11/2/2020 16:32:23'!
PASSED!

!testRun: #TerniLapilliTest #test07OCantPlayXsTurn stamp: 'JEA 11/2/2020 16:32:23'!
PASSED!

!testRun: #TerniLapilliTest #test08PositionsDontOverlap stamp: 'JEA 11/2/2020 16:32:23'!
PASSED!

!testRun: #TerniLapilliTest #test09PositionsAreOccupied stamp: 'JEA 11/2/2020 16:32:23'!
PASSED!

!testRun: #TerniLapilliTest #test10OCantPlayInOccupiedPosition stamp: 'JEA 11/2/2020 16:32:23'!
PASSED!

!testRun: #TerniLapilliTest #test11XCantPlayInOccupiedPosition stamp: 'JEA 11/2/2020 16:32:23'!
PASSED!

!testRun: #TerniLapilliTest #test12XAndOAreAtEveryPositionPlayed stamp: 'JEA 11/2/2020 16:32:23'!
PASSED!

!testRun: #TerniLapilliTest #test13XCantPlayInInvalidPosition stamp: 'JEA 11/2/2020 16:32:23'!
PASSED!

!testRun: #TerniLapilliTest #test14OCantPlayInInvalidPosition stamp: 'JEA 11/2/2020 16:32:23'!
PASSED!

!testRun: #TerniLapilliTest #test15CantPlaceMoreThan3Chips stamp: 'JEA 11/2/2020 16:32:23'!
PASSED!

!testRun: #TerniLapilliTest #test16XCantMoveUntilAllChipsArePlaced stamp: 'JEA 11/2/2020 16:32:23'!
PASSED!

!testRun: #TerniLapilliTest #test17OCantMoveUntilAllChipsArePlaced stamp: 'JEA 11/2/2020 16:32:23'!
PASSED!

!testRun: #TerniLapilliTest #test18XCanMoveAfterAllChipsArePlaced stamp: 'JEA 11/2/2020 16:32:23'!
PASSED!

!testRun: #TerniLapilliTest #test19OCanMoveAfterAllChipsArePlaced stamp: 'JEA 11/2/2020 16:32:23'!
PASSED!

!testRun: #TerniLapilliTest #test20XCantMoveInOsTurn stamp: 'JEA 11/2/2020 16:32:23'!
PASSED!

!testRun: #TerniLapilliTest #test21OCantMoveInXsTurn stamp: 'JEA 11/2/2020 16:32:23'!
PASSED!

!testRun: #TerniLapilliTest #test22XCantMoveToOccupiedPosition stamp: 'JEA 11/2/2020 16:32:23'!
PASSED!

!testRun: #TerniLapilliTest #test23XCantMoveToInvalidPosition stamp: 'JEA 11/2/2020 16:32:23'!
PASSED!

!testRun: #TerniLapilliTest #test24XCantMoveToNotNeighborPosition stamp: 'JEA 11/2/2020 16:32:23'!
PASSED!

!testRun: #TerniLapilliTest #test25XCanWin stamp: 'JEA 11/2/2020 16:32:23'!
PASSED!

!testRun: #TerniLapilliTest #test26OCanWin stamp: 'JEA 11/2/2020 16:32:23'!
PASSED!

!testRun: #TerniLapilliTest #test27CantPlayAfterXWins stamp: 'JEA 11/2/2020 16:32:23'!
PASSED!

!testRun: #TerniLapilliTest #test28CantMoveAfterXWins stamp: 'JEA 11/2/2020 16:32:23'!
PASSED!

!testRun: #TerniLapilliTest #test29CantMoveAfterOWins stamp: 'JEA 11/2/2020 16:32:23'!
PASSED!

----SNAPSHOT----(2 November 2020 16:33:01) CuisUniversity-4384.image priorSource: 17855260!

----SNAPSHOT----(2 November 2020 16:33:31) CuisUniversity-4384.image priorSource: 17866854!
!TerniLapilliTest methodsFor: 'tests - auxiliary' stamp: 'JEA 11/2/2020 16:34:42'!
assertOnlyOIsPlayingIn: aTerniLapilliGame
	
	self assert: aTerniLapilliGame isOPlaying.
	self assert: aTerniLapilliGame isXPlaying not.! !
!TerniLapilliTest methodsFor: 'tests - auxiliary' stamp: 'JEA 11/2/2020 16:34:53'!
assertOnlyXIsPlayingIn: aTerniLapilliGame

	self assert: aTerniLapilliGame isXPlaying.
	self assert: aTerniLapilliGame isOPlaying not.! !
!TerniLapilliTest methodsFor: 'tests' stamp: 'JEA 11/2/2020 16:35:22' prior: 50886540!
test01XPlaysFirst
	| aTerniLapilliGame |

	aTerniLapilliGame := TerniLapilli new.

	self assertOnlyXIsPlayingIn: aTerniLapilliGame.! !
!TerniLapilliTest methodsFor: 'tests' stamp: 'JEA 11/2/2020 16:35:33' prior: 50890011!
test01XPlaysFirst

	self assertOnlyXIsPlayingIn: TerniLapilli new.! !
!TerniLapilliTest methodsFor: 'tests' stamp: 'JEA 11/2/2020 16:36:02' prior: 50886556!
test03OPlaysAfterX
	| aTerniLapilliGame |
	
	aTerniLapilliGame := TerniLapilli new.
	aTerniLapilliGame putXAt: 0@0.

	self assertOnlyOIsPlayingIn: aTerniLapilliGame.! !

!methodRemoval: TerniLapilliTest #test29CantMoveAfterOWins stamp: 'JEA 11/2/2020 16:37:49'!
test29CantMoveAfterOWins
	| aTerniLapilliGame |

	aTerniLapilliGame := TerniLapilli new.
	aTerniLapilliGame putXAt: 0@0.
	aTerniLapilliGame putOAt: 0@1.
	aTerniLapilliGame putXAt: 1@0.
	aTerniLapilliGame putOAt: 1@1.
	aTerniLapilliGame putXAt: 2@2.
	aTerniLapilliGame putOAt: 2@1.
	self should: [aTerniLapilliGame moveXFrom: 2@2 to: 1@2.]
		raise: Error
		withExceptionDo: [ :anException | anException description = TerniLapilli gameIsOverDescription. ]
	!

!methodRemoval: TerniLapilliTest #test28CantMoveAfterXWins stamp: 'JEA 11/2/2020 16:37:52'!
test28CantMoveAfterXWins
	| aTerniLapilliGame |

	aTerniLapilliGame := TerniLapilli new.
	aTerniLapilliGame putXAt: 0@0.
	aTerniLapilliGame putOAt: 0@1.
	aTerniLapilliGame putXAt: 1@0.
	aTerniLapilliGame putOAt: 1@1.
	aTerniLapilliGame putXAt: 2@1.
	aTerniLapilliGame putOAt: 2@2.
	aTerniLapilliGame moveXFrom: 2@1 to: 2@0.
	
	self should: [aTerniLapilliGame moveOFrom: 2@2 to: 1@2.]
		raise: Error
		withExceptionDo: [ :anException | anException description = TerniLapilli gameIsOverDescription. ]
	!
!TerniLapilliTest methodsFor: 'tests' stamp: 'JEA 11/2/2020 16:38:02'!
test27CantPlayAfterGameIsOver
	| aTerniLapilliGame |

	aTerniLapilliGame := TerniLapilli new.
	aTerniLapilliGame putXAt: 0@0.
	aTerniLapilliGame putOAt: 0@1.
	aTerniLapilliGame putXAt: 1@1.
	aTerniLapilliGame putOAt: 1@0.
	aTerniLapilliGame putXAt: 2@2.
	self should: [aTerniLapilliGame putOAt: 2@1.]
		raise: Error
		withExceptionDo: [ :anException | anException description = TerniLapilli gameIsOverDescription. ]
	! !

!methodRemoval: TerniLapilliTest #test27CantPlayAfterXWins stamp: 'JEA 11/2/2020 16:38:04'!
test27CantPlayAfterXWins
	| aTerniLapilliGame |

	aTerniLapilliGame := TerniLapilli new.
	aTerniLapilliGame putXAt: 0@0.
	aTerniLapilliGame putOAt: 0@1.
	aTerniLapilliGame putXAt: 1@1.
	aTerniLapilliGame putOAt: 1@0.
	aTerniLapilliGame putXAt: 2@2.
	self should: [aTerniLapilliGame putOAt: 2@1.]
		raise: Error
		withExceptionDo: [ :anException | anException description = TerniLapilli gameIsOverDescription. ]
	!

!testRun: #TerniLapilliTest #test01XPlaysFirst stamp: 'JEA 11/2/2020 16:38:05'!
PASSED!

!testRun: #TerniLapilliTest #test02XCanPlayItsTurn stamp: 'JEA 11/2/2020 16:38:05'!
PASSED!

!testRun: #TerniLapilliTest #test03OPlaysAfterX stamp: 'JEA 11/2/2020 16:38:05'!
PASSED!

!testRun: #TerniLapilliTest #test04OCanPlayItsTurn stamp: 'JEA 11/2/2020 16:38:05'!
PASSED!

!testRun: #TerniLapilliTest #test05XPlaysAfterO stamp: 'JEA 11/2/2020 16:38:05'!
PASSED!

!testRun: #TerniLapilliTest #test06XCantPlayOsTurn stamp: 'JEA 11/2/2020 16:38:05'!
PASSED!

!testRun: #TerniLapilliTest #test07OCantPlayXsTurn stamp: 'JEA 11/2/2020 16:38:05'!
PASSED!

!testRun: #TerniLapilliTest #test08PositionsDontOverlap stamp: 'JEA 11/2/2020 16:38:05'!
PASSED!

!testRun: #TerniLapilliTest #test09PositionsAreOccupied stamp: 'JEA 11/2/2020 16:38:05'!
PASSED!

!testRun: #TerniLapilliTest #test10OCantPlayInOccupiedPosition stamp: 'JEA 11/2/2020 16:38:05'!
PASSED!

!testRun: #TerniLapilliTest #test11XCantPlayInOccupiedPosition stamp: 'JEA 11/2/2020 16:38:05'!
PASSED!

!testRun: #TerniLapilliTest #test12XAndOAreAtEveryPositionPlayed stamp: 'JEA 11/2/2020 16:38:05'!
PASSED!

!testRun: #TerniLapilliTest #test13XCantPlayInInvalidPosition stamp: 'JEA 11/2/2020 16:38:05'!
PASSED!

!testRun: #TerniLapilliTest #test14OCantPlayInInvalidPosition stamp: 'JEA 11/2/2020 16:38:05'!
PASSED!

!testRun: #TerniLapilliTest #test15CantPlaceMoreThan3Chips stamp: 'JEA 11/2/2020 16:38:05'!
PASSED!

!testRun: #TerniLapilliTest #test16XCantMoveUntilAllChipsArePlaced stamp: 'JEA 11/2/2020 16:38:05'!
PASSED!

!testRun: #TerniLapilliTest #test17OCantMoveUntilAllChipsArePlaced stamp: 'JEA 11/2/2020 16:38:05'!
PASSED!

!testRun: #TerniLapilliTest #test18XCanMoveAfterAllChipsArePlaced stamp: 'JEA 11/2/2020 16:38:05'!
PASSED!

!testRun: #TerniLapilliTest #test19OCanMoveAfterAllChipsArePlaced stamp: 'JEA 11/2/2020 16:38:05'!
PASSED!

!testRun: #TerniLapilliTest #test20XCantMoveInOsTurn stamp: 'JEA 11/2/2020 16:38:05'!
PASSED!

!testRun: #TerniLapilliTest #test21OCantMoveInXsTurn stamp: 'JEA 11/2/2020 16:38:05'!
PASSED!

!testRun: #TerniLapilliTest #test22XCantMoveToOccupiedPosition stamp: 'JEA 11/2/2020 16:38:05'!
PASSED!

!testRun: #TerniLapilliTest #test23XCantMoveToInvalidPosition stamp: 'JEA 11/2/2020 16:38:05'!
PASSED!

!testRun: #TerniLapilliTest #test24XCantMoveToNotNeighborPosition stamp: 'JEA 11/2/2020 16:38:05'!
PASSED!

!testRun: #TerniLapilliTest #test25XCanWin stamp: 'JEA 11/2/2020 16:38:05'!
PASSED!

!testRun: #TerniLapilliTest #test26OCanWin stamp: 'JEA 11/2/2020 16:38:05'!
PASSED!

!testRun: #TerniLapilliTest #test27CantPlayAfterGameIsOver stamp: 'JEA 11/2/2020 16:38:05'!
PASSED!
!TerniLapilliTest methodsFor: 'tests' stamp: 'JEA 11/2/2020 16:38:15' prior: 50890067!
test27CantPlayAfterGameIsOver
	| aTerniLapilliGame |

	aTerniLapilliGame := TerniLapilli new.
	aTerniLapilliGame putXAt: 0@0.
	aTerniLapilliGame putOAt: 0@1.
	aTerniLapilliGame putXAt: 1@1.
	aTerniLapilliGame putOAt: 1@0.
	aTerniLapilliGame putXAt: 2@2.

	self should: [aTerniLapilliGame putOAt: 2@1.]
		raise: Error
		withExceptionDo: [ :anException | anException description = TerniLapilli gameIsOverDescription. ]
	! !

!methodRemoval: TerniLapilliTest #test09PositionsAreOccupied stamp: 'JEA 11/2/2020 16:40:25'!
test09PositionsAreOccupied
	| aTerniLapilliGame |
	
	aTerniLapilliGame := TerniLapilli new.
	aTerniLapilliGame putXAt: 0@0.
	aTerniLapilliGame putOAt: 0@1.

	self assert: (aTerniLapilliGame isOccupied: 0@0).
	self assert: (aTerniLapilliGame isOccupied: 0@1).!

!methodRemoval: TerniLapilliTest #test08PositionsDontOverlap stamp: 'JEA 11/2/2020 16:40:36'!
test08PositionsDontOverlap
	| aTerniLapilliGame |
	
	aTerniLapilliGame := TerniLapilli new.
	aTerniLapilliGame putXAt: 0@0.
	aTerniLapilliGame putOAt: 0@1.

	self assert: (aTerniLapilliGame isXAt: 0@0).
	self assert: (aTerniLapilliGame isOAt: 0@0) not.
	self assert: (aTerniLapilliGame isOAt: 0@1).
	self assert: (aTerniLapilliGame isXAt: 0@1) not.!

!testRun: #TerniLapilliTest #test01XPlaysFirst stamp: 'JEA 11/2/2020 16:40:44'!
PASSED!

!testRun: #TerniLapilliTest #test02XCanPlayItsTurn stamp: 'JEA 11/2/2020 16:40:44'!
PASSED!

!testRun: #TerniLapilliTest #test03OPlaysAfterX stamp: 'JEA 11/2/2020 16:40:44'!
PASSED!

!testRun: #TerniLapilliTest #test04OCanPlayItsTurn stamp: 'JEA 11/2/2020 16:40:44'!
PASSED!

!testRun: #TerniLapilliTest #test05XPlaysAfterO stamp: 'JEA 11/2/2020 16:40:44'!
PASSED!

!testRun: #TerniLapilliTest #test06XCantPlayOsTurn stamp: 'JEA 11/2/2020 16:40:44'!
PASSED!

!testRun: #TerniLapilliTest #test07OCantPlayXsTurn stamp: 'JEA 11/2/2020 16:40:44'!
PASSED!

!testRun: #TerniLapilliTest #test10OCantPlayInOccupiedPosition stamp: 'JEA 11/2/2020 16:40:44'!
PASSED!

!testRun: #TerniLapilliTest #test11XCantPlayInOccupiedPosition stamp: 'JEA 11/2/2020 16:40:44'!
PASSED!

!testRun: #TerniLapilliTest #test12XAndOAreAtEveryPositionPlayed stamp: 'JEA 11/2/2020 16:40:44'!
PASSED!

!testRun: #TerniLapilliTest #test13XCantPlayInInvalidPosition stamp: 'JEA 11/2/2020 16:40:44'!
PASSED!

!testRun: #TerniLapilliTest #test14OCantPlayInInvalidPosition stamp: 'JEA 11/2/2020 16:40:44'!
PASSED!

!testRun: #TerniLapilliTest #test15CantPlaceMoreThan3Chips stamp: 'JEA 11/2/2020 16:40:44'!
PASSED!

!testRun: #TerniLapilliTest #test16XCantMoveUntilAllChipsArePlaced stamp: 'JEA 11/2/2020 16:40:44'!
PASSED!

!testRun: #TerniLapilliTest #test17OCantMoveUntilAllChipsArePlaced stamp: 'JEA 11/2/2020 16:40:44'!
PASSED!

!testRun: #TerniLapilliTest #test18XCanMoveAfterAllChipsArePlaced stamp: 'JEA 11/2/2020 16:40:44'!
PASSED!

!testRun: #TerniLapilliTest #test19OCanMoveAfterAllChipsArePlaced stamp: 'JEA 11/2/2020 16:40:44'!
PASSED!

!testRun: #TerniLapilliTest #test20XCantMoveInOsTurn stamp: 'JEA 11/2/2020 16:40:44'!
PASSED!

!testRun: #TerniLapilliTest #test21OCantMoveInXsTurn stamp: 'JEA 11/2/2020 16:40:44'!
PASSED!

!testRun: #TerniLapilliTest #test22XCantMoveToOccupiedPosition stamp: 'JEA 11/2/2020 16:40:44'!
PASSED!

!testRun: #TerniLapilliTest #test23XCantMoveToInvalidPosition stamp: 'JEA 11/2/2020 16:40:44'!
PASSED!

!testRun: #TerniLapilliTest #test24XCantMoveToNotNeighborPosition stamp: 'JEA 11/2/2020 16:40:44'!
PASSED!

!testRun: #TerniLapilliTest #test25XCanWin stamp: 'JEA 11/2/2020 16:40:44'!
PASSED!

!testRun: #TerniLapilliTest #test26OCanWin stamp: 'JEA 11/2/2020 16:40:44'!
PASSED!

!testRun: #TerniLapilliTest #test27CantPlayAfterGameIsOver stamp: 'JEA 11/2/2020 16:40:44'!
PASSED!
!TerniLapilliTest methodsFor: 'tests' stamp: 'JEA 11/2/2020 16:41:33'!
test12XAndOAreAtMoreThanOnePositionPlayed
	| aTerniLapilliGame |
	
	aTerniLapilliGame := TerniLapilli new.
	aTerniLapilliGame putXAt: 0@0.
	aTerniLapilliGame putOAt: 0@1.
	aTerniLapilliGame putXAt: 1@0.
	aTerniLapilliGame putOAt: 1@1.

	self assert: (aTerniLapilliGame isXAt: 0@0).
	self assert: (aTerniLapilliGame isXAt: 1@0).
	self assert: (aTerniLapilliGame isOAt: 0@1).
	self assert: (aTerniLapilliGame isOAt: 1@1).! !

!methodRemoval: TerniLapilliTest #test12XAndOAreAtEveryPositionPlayed stamp: 'JEA 11/2/2020 16:41:34'!
test12XAndOAreAtEveryPositionPlayed
	| aTerniLapilliGame |
	
	aTerniLapilliGame := TerniLapilli new.
	aTerniLapilliGame putXAt: 0@0.
	aTerniLapilliGame putOAt: 0@1.
	aTerniLapilliGame putXAt: 1@0.
	aTerniLapilliGame putOAt: 1@1.

	self assert: (aTerniLapilliGame isXAt: 0@0).
	self assert: (aTerniLapilliGame isXAt: 1@0).
	self assert: (aTerniLapilliGame isOAt: 0@1).
	self assert: (aTerniLapilliGame isOAt: 1@1).!
!TerniLapilliTest methodsFor: 'tests' stamp: 'JEA 11/2/2020 16:42:07' prior: 50890301!
test12XAndOAreAtMoreThanOnePositionPlayed
	| aTerniLapilliGame |
	
	aTerniLapilliGame := TerniLapilli new.
	aTerniLapilliGame putXAt: 0@0.
	aTerniLapilliGame putOAt: 0@1.
	aTerniLapilliGame putOAt: 0@2.
	aTerniLapilliGame putXAt: 1@0.
	aTerniLapilliGame putOAt: 1@1.
	aTerniLapilliGame putOAt: 1@2.

	self assert: (aTerniLapilliGame isXAt: 0@0).
	self assert: (aTerniLapilliGame isXAt: 0@1).
	self assert: (aTerniLapilliGame isOAt: 0@2).
	self assert: (aTerniLapilliGame isOAt: 1@0).
	self assert: (aTerniLapilliGame isOAt: 1@1).
	self assert: (aTerniLapilliGame isOAt: 1@2).! !

!testRun: #TerniLapilliTest #test01XPlaysFirst stamp: 'JEA 11/2/2020 16:42:08'!
PASSED!

!testRun: #TerniLapilliTest #test02XCanPlayItsTurn stamp: 'JEA 11/2/2020 16:42:08'!
PASSED!

!testRun: #TerniLapilliTest #test03OPlaysAfterX stamp: 'JEA 11/2/2020 16:42:08'!
PASSED!

!testRun: #TerniLapilliTest #test04OCanPlayItsTurn stamp: 'JEA 11/2/2020 16:42:08'!
PASSED!

!testRun: #TerniLapilliTest #test05XPlaysAfterO stamp: 'JEA 11/2/2020 16:42:08'!
PASSED!

!testRun: #TerniLapilliTest #test06XCantPlayOsTurn stamp: 'JEA 11/2/2020 16:42:08'!
PASSED!

!testRun: #TerniLapilliTest #test07OCantPlayXsTurn stamp: 'JEA 11/2/2020 16:42:08'!
PASSED!

!testRun: #TerniLapilliTest #test10OCantPlayInOccupiedPosition stamp: 'JEA 11/2/2020 16:42:08'!
PASSED!

!testRun: #TerniLapilliTest #test11XCantPlayInOccupiedPosition stamp: 'JEA 11/2/2020 16:42:08'!
PASSED!

!testRun: #TerniLapilliTest #test12XAndOAreAtMoreThanOnePositionPlayed stamp: 'JEA 11/2/2020 16:42:08'!
ERROR!

!testRun: #TerniLapilliTest #test13XCantPlayInInvalidPosition stamp: 'JEA 11/2/2020 16:42:08'!
PASSED!

!testRun: #TerniLapilliTest #test14OCantPlayInInvalidPosition stamp: 'JEA 11/2/2020 16:42:08'!
PASSED!

!testRun: #TerniLapilliTest #test15CantPlaceMoreThan3Chips stamp: 'JEA 11/2/2020 16:42:08'!
PASSED!

!testRun: #TerniLapilliTest #test16XCantMoveUntilAllChipsArePlaced stamp: 'JEA 11/2/2020 16:42:08'!
PASSED!

!testRun: #TerniLapilliTest #test17OCantMoveUntilAllChipsArePlaced stamp: 'JEA 11/2/2020 16:42:08'!
PASSED!

!testRun: #TerniLapilliTest #test18XCanMoveAfterAllChipsArePlaced stamp: 'JEA 11/2/2020 16:42:08'!
PASSED!

!testRun: #TerniLapilliTest #test19OCanMoveAfterAllChipsArePlaced stamp: 'JEA 11/2/2020 16:42:08'!
PASSED!

!testRun: #TerniLapilliTest #test20XCantMoveInOsTurn stamp: 'JEA 11/2/2020 16:42:08'!
PASSED!

!testRun: #TerniLapilliTest #test21OCantMoveInXsTurn stamp: 'JEA 11/2/2020 16:42:08'!
PASSED!

!testRun: #TerniLapilliTest #test22XCantMoveToOccupiedPosition stamp: 'JEA 11/2/2020 16:42:08'!
PASSED!

!testRun: #TerniLapilliTest #test23XCantMoveToInvalidPosition stamp: 'JEA 11/2/2020 16:42:08'!
PASSED!

!testRun: #TerniLapilliTest #test24XCantMoveToNotNeighborPosition stamp: 'JEA 11/2/2020 16:42:08'!
PASSED!

!testRun: #TerniLapilliTest #test25XCanWin stamp: 'JEA 11/2/2020 16:42:08'!
PASSED!

!testRun: #TerniLapilliTest #test26OCanWin stamp: 'JEA 11/2/2020 16:42:08'!
PASSED!

!testRun: #TerniLapilliTest #test27CantPlayAfterGameIsOver stamp: 'JEA 11/2/2020 16:42:08'!
PASSED!

!testRun: #TerniLapilliTest #test12XAndOAreAtMoreThanOnePositionPlayed stamp: 'JEA 11/2/2020 16:42:08'!
ERROR!
!TerniLapilliTest methodsFor: 'tests' stamp: 'JEA 11/2/2020 16:42:35' prior: 50890334!
test12XAndOAreAtMoreThanOnePositionPlayed
	| aTerniLapilliGame |
	
	aTerniLapilliGame := TerniLapilli new.
	aTerniLapilliGame putXAt: 0@0.
	aTerniLapilliGame putOAt: 1@0.
	aTerniLapilliGame putXAt: 0@1.
	aTerniLapilliGame putOAt: 1@1.
	aTerniLapilliGame putXAt: 0@2.
	aTerniLapilliGame putOAt: 1@2.

	self assert: (aTerniLapilliGame isXAt: 0@0).
	self assert: (aTerniLapilliGame isXAt: 0@1).
	self assert: (aTerniLapilliGame isOAt: 0@2).
	self assert: (aTerniLapilliGame isOAt: 1@0).
	self assert: (aTerniLapilliGame isOAt: 1@1).
	self assert: (aTerniLapilliGame isOAt: 1@2).! !

!testRun: #TerniLapilliTest #test01XPlaysFirst stamp: 'JEA 11/2/2020 16:42:36'!
PASSED!

!testRun: #TerniLapilliTest #test02XCanPlayItsTurn stamp: 'JEA 11/2/2020 16:42:36'!
PASSED!

!testRun: #TerniLapilliTest #test03OPlaysAfterX stamp: 'JEA 11/2/2020 16:42:36'!
PASSED!

!testRun: #TerniLapilliTest #test04OCanPlayItsTurn stamp: 'JEA 11/2/2020 16:42:36'!
PASSED!

!testRun: #TerniLapilliTest #test05XPlaysAfterO stamp: 'JEA 11/2/2020 16:42:36'!
PASSED!

!testRun: #TerniLapilliTest #test06XCantPlayOsTurn stamp: 'JEA 11/2/2020 16:42:36'!
PASSED!

!testRun: #TerniLapilliTest #test07OCantPlayXsTurn stamp: 'JEA 11/2/2020 16:42:36'!
PASSED!

!testRun: #TerniLapilliTest #test10OCantPlayInOccupiedPosition stamp: 'JEA 11/2/2020 16:42:36'!
PASSED!

!testRun: #TerniLapilliTest #test11XCantPlayInOccupiedPosition stamp: 'JEA 11/2/2020 16:42:36'!
PASSED!

!testRun: #TerniLapilliTest #test12XAndOAreAtMoreThanOnePositionPlayed stamp: 'JEA 11/2/2020 16:42:36'!
ERROR!

!testRun: #TerniLapilliTest #test13XCantPlayInInvalidPosition stamp: 'JEA 11/2/2020 16:42:36'!
PASSED!

!testRun: #TerniLapilliTest #test14OCantPlayInInvalidPosition stamp: 'JEA 11/2/2020 16:42:36'!
PASSED!

!testRun: #TerniLapilliTest #test15CantPlaceMoreThan3Chips stamp: 'JEA 11/2/2020 16:42:36'!
PASSED!

!testRun: #TerniLapilliTest #test16XCantMoveUntilAllChipsArePlaced stamp: 'JEA 11/2/2020 16:42:36'!
PASSED!

!testRun: #TerniLapilliTest #test17OCantMoveUntilAllChipsArePlaced stamp: 'JEA 11/2/2020 16:42:36'!
PASSED!

!testRun: #TerniLapilliTest #test18XCanMoveAfterAllChipsArePlaced stamp: 'JEA 11/2/2020 16:42:36'!
PASSED!

!testRun: #TerniLapilliTest #test19OCanMoveAfterAllChipsArePlaced stamp: 'JEA 11/2/2020 16:42:36'!
PASSED!

!testRun: #TerniLapilliTest #test20XCantMoveInOsTurn stamp: 'JEA 11/2/2020 16:42:36'!
PASSED!

!testRun: #TerniLapilliTest #test21OCantMoveInXsTurn stamp: 'JEA 11/2/2020 16:42:36'!
PASSED!

!testRun: #TerniLapilliTest #test22XCantMoveToOccupiedPosition stamp: 'JEA 11/2/2020 16:42:36'!
PASSED!

!testRun: #TerniLapilliTest #test23XCantMoveToInvalidPosition stamp: 'JEA 11/2/2020 16:42:36'!
PASSED!

!testRun: #TerniLapilliTest #test24XCantMoveToNotNeighborPosition stamp: 'JEA 11/2/2020 16:42:36'!
PASSED!

!testRun: #TerniLapilliTest #test25XCanWin stamp: 'JEA 11/2/2020 16:42:36'!
PASSED!

!testRun: #TerniLapilliTest #test26OCanWin stamp: 'JEA 11/2/2020 16:42:36'!
PASSED!

!testRun: #TerniLapilliTest #test27CantPlayAfterGameIsOver stamp: 'JEA 11/2/2020 16:42:36'!
PASSED!

!testRun: #TerniLapilliTest #test12XAndOAreAtMoreThanOnePositionPlayed stamp: 'JEA 11/2/2020 16:42:36'!
ERROR!
!TerniLapilliTest methodsFor: 'tests' stamp: 'JEA 11/2/2020 16:43:22' prior: 50890436!
test12XAndOAreAtMoreThanOnePositionPlayed
	| aTerniLapilliGame |
	
	aTerniLapilliGame := TerniLapilli new.
	aTerniLapilliGame putXAt: 0@0.
	aTerniLapilliGame putOAt: 0@1.
	aTerniLapilliGame putXAt: 1@1.
	aTerniLapilliGame putOAt: 1@1.
	aTerniLapilliGame putXAt: 0@2.
	aTerniLapilliGame putOAt: 1@2.

	self assert: (aTerniLapilliGame isXAt: 0@0).
	self assert: (aTerniLapilliGame isXAt: 0@1).
	self assert: (aTerniLapilliGame isOAt: 0@2).
	self assert: (aTerniLapilliGame isOAt: 1@0).
	self assert: (aTerniLapilliGame isOAt: 1@1).
	self assert: (aTerniLapilliGame isOAt: 1@2).! !

!testRun: #TerniLapilliTest #test01XPlaysFirst stamp: 'JEA 11/2/2020 16:43:23'!
PASSED!

!testRun: #TerniLapilliTest #test02XCanPlayItsTurn stamp: 'JEA 11/2/2020 16:43:23'!
PASSED!

!testRun: #TerniLapilliTest #test03OPlaysAfterX stamp: 'JEA 11/2/2020 16:43:23'!
PASSED!

!testRun: #TerniLapilliTest #test04OCanPlayItsTurn stamp: 'JEA 11/2/2020 16:43:23'!
PASSED!

!testRun: #TerniLapilliTest #test05XPlaysAfterO stamp: 'JEA 11/2/2020 16:43:23'!
PASSED!

!testRun: #TerniLapilliTest #test06XCantPlayOsTurn stamp: 'JEA 11/2/2020 16:43:23'!
PASSED!

!testRun: #TerniLapilliTest #test07OCantPlayXsTurn stamp: 'JEA 11/2/2020 16:43:23'!
PASSED!

!testRun: #TerniLapilliTest #test10OCantPlayInOccupiedPosition stamp: 'JEA 11/2/2020 16:43:23'!
PASSED!

!testRun: #TerniLapilliTest #test11XCantPlayInOccupiedPosition stamp: 'JEA 11/2/2020 16:43:23'!
PASSED!

!testRun: #TerniLapilliTest #test12XAndOAreAtMoreThanOnePositionPlayed stamp: 'JEA 11/2/2020 16:43:23'!
ERROR!

!testRun: #TerniLapilliTest #test13XCantPlayInInvalidPosition stamp: 'JEA 11/2/2020 16:43:23'!
PASSED!

!testRun: #TerniLapilliTest #test14OCantPlayInInvalidPosition stamp: 'JEA 11/2/2020 16:43:23'!
PASSED!

!testRun: #TerniLapilliTest #test15CantPlaceMoreThan3Chips stamp: 'JEA 11/2/2020 16:43:23'!
PASSED!

!testRun: #TerniLapilliTest #test16XCantMoveUntilAllChipsArePlaced stamp: 'JEA 11/2/2020 16:43:23'!
PASSED!

!testRun: #TerniLapilliTest #test17OCantMoveUntilAllChipsArePlaced stamp: 'JEA 11/2/2020 16:43:23'!
PASSED!

!testRun: #TerniLapilliTest #test18XCanMoveAfterAllChipsArePlaced stamp: 'JEA 11/2/2020 16:43:23'!
PASSED!

!testRun: #TerniLapilliTest #test19OCanMoveAfterAllChipsArePlaced stamp: 'JEA 11/2/2020 16:43:23'!
PASSED!

!testRun: #TerniLapilliTest #test20XCantMoveInOsTurn stamp: 'JEA 11/2/2020 16:43:23'!
PASSED!

!testRun: #TerniLapilliTest #test21OCantMoveInXsTurn stamp: 'JEA 11/2/2020 16:43:23'!
PASSED!

!testRun: #TerniLapilliTest #test22XCantMoveToOccupiedPosition stamp: 'JEA 11/2/2020 16:43:23'!
PASSED!

!testRun: #TerniLapilliTest #test23XCantMoveToInvalidPosition stamp: 'JEA 11/2/2020 16:43:23'!
PASSED!

!testRun: #TerniLapilliTest #test24XCantMoveToNotNeighborPosition stamp: 'JEA 11/2/2020 16:43:23'!
PASSED!

!testRun: #TerniLapilliTest #test25XCanWin stamp: 'JEA 11/2/2020 16:43:23'!
PASSED!

!testRun: #TerniLapilliTest #test26OCanWin stamp: 'JEA 11/2/2020 16:43:23'!
PASSED!

!testRun: #TerniLapilliTest #test27CantPlayAfterGameIsOver stamp: 'JEA 11/2/2020 16:43:23'!
PASSED!

!testRun: #TerniLapilliTest #test12XAndOAreAtMoreThanOnePositionPlayed stamp: 'JEA 11/2/2020 16:43:23'!
ERROR!
!TerniLapilliTest methodsFor: 'tests' stamp: 'JEA 11/2/2020 16:43:53' prior: 50890538!
test12XAndOAreAtMoreThanOnePositionPlayed
	| aTerniLapilliGame |
	
	aTerniLapilliGame := TerniLapilli new.
	aTerniLapilliGame putXAt: 0@0.
	aTerniLapilliGame putOAt: 0@1.
	aTerniLapilliGame putXAt: 1@1.
	aTerniLapilliGame putOAt: 1@0.
	aTerniLapilliGame putXAt: 0@2.
	aTerniLapilliGame putOAt: 1@2.

	self assert: (aTerniLapilliGame isXAt: 0@0).
	self assert: (aTerniLapilliGame isXAt: 0@1).
	self assert: (aTerniLapilliGame isOAt: 0@2).
	self assert: (aTerniLapilliGame isOAt: 1@0).
	self assert: (aTerniLapilliGame isOAt: 1@1).
	self assert: (aTerniLapilliGame isOAt: 1@2).! !
!TerniLapilliTest methodsFor: 'tests' stamp: 'JEA 11/2/2020 16:44:22' prior: 50890640!
test12XAndOAreAtMoreThanOnePositionPlayed
	| aTerniLapilliGame |
	
	aTerniLapilliGame := TerniLapilli new.
	aTerniLapilliGame putXAt: 0@0.
	aTerniLapilliGame putOAt: 0@1.
	aTerniLapilliGame putXAt: 1@1.
	aTerniLapilliGame putOAt: 1@0.
	aTerniLapilliGame putXAt: 2@0.
	aTerniLapilliGame putOAt: 2@1.

	self assert: (aTerniLapilliGame isXAt: 0@0).
	self assert: (aTerniLapilliGame isXAt: 0@1).
	self assert: (aTerniLapilliGame isOAt: 0@2).
	self assert: (aTerniLapilliGame isOAt: 1@0).
	self assert: (aTerniLapilliGame isOAt: 1@1).
	self assert: (aTerniLapilliGame isOAt: 1@2).! !

!testRun: #TerniLapilliTest #test01XPlaysFirst stamp: 'JEA 11/2/2020 16:44:22'!
PASSED!

!testRun: #TerniLapilliTest #test02XCanPlayItsTurn stamp: 'JEA 11/2/2020 16:44:22'!
PASSED!

!testRun: #TerniLapilliTest #test03OPlaysAfterX stamp: 'JEA 11/2/2020 16:44:22'!
PASSED!

!testRun: #TerniLapilliTest #test04OCanPlayItsTurn stamp: 'JEA 11/2/2020 16:44:22'!
PASSED!

!testRun: #TerniLapilliTest #test05XPlaysAfterO stamp: 'JEA 11/2/2020 16:44:22'!
PASSED!

!testRun: #TerniLapilliTest #test06XCantPlayOsTurn stamp: 'JEA 11/2/2020 16:44:22'!
PASSED!

!testRun: #TerniLapilliTest #test07OCantPlayXsTurn stamp: 'JEA 11/2/2020 16:44:22'!
PASSED!

!testRun: #TerniLapilliTest #test10OCantPlayInOccupiedPosition stamp: 'JEA 11/2/2020 16:44:22'!
PASSED!

!testRun: #TerniLapilliTest #test11XCantPlayInOccupiedPosition stamp: 'JEA 11/2/2020 16:44:22'!
PASSED!

!testRun: #TerniLapilliTest #test12XAndOAreAtMoreThanOnePositionPlayed stamp: 'JEA 11/2/2020 16:44:22'!
FAILURE!

!testRun: #TerniLapilliTest #test13XCantPlayInInvalidPosition stamp: 'JEA 11/2/2020 16:44:22'!
PASSED!

!testRun: #TerniLapilliTest #test14OCantPlayInInvalidPosition stamp: 'JEA 11/2/2020 16:44:22'!
PASSED!

!testRun: #TerniLapilliTest #test15CantPlaceMoreThan3Chips stamp: 'JEA 11/2/2020 16:44:22'!
PASSED!

!testRun: #TerniLapilliTest #test16XCantMoveUntilAllChipsArePlaced stamp: 'JEA 11/2/2020 16:44:22'!
PASSED!

!testRun: #TerniLapilliTest #test17OCantMoveUntilAllChipsArePlaced stamp: 'JEA 11/2/2020 16:44:22'!
PASSED!

!testRun: #TerniLapilliTest #test18XCanMoveAfterAllChipsArePlaced stamp: 'JEA 11/2/2020 16:44:22'!
PASSED!

!testRun: #TerniLapilliTest #test19OCanMoveAfterAllChipsArePlaced stamp: 'JEA 11/2/2020 16:44:22'!
PASSED!

!testRun: #TerniLapilliTest #test20XCantMoveInOsTurn stamp: 'JEA 11/2/2020 16:44:22'!
PASSED!

!testRun: #TerniLapilliTest #test21OCantMoveInXsTurn stamp: 'JEA 11/2/2020 16:44:22'!
PASSED!

!testRun: #TerniLapilliTest #test22XCantMoveToOccupiedPosition stamp: 'JEA 11/2/2020 16:44:22'!
PASSED!

!testRun: #TerniLapilliTest #test23XCantMoveToInvalidPosition stamp: 'JEA 11/2/2020 16:44:22'!
PASSED!

!testRun: #TerniLapilliTest #test24XCantMoveToNotNeighborPosition stamp: 'JEA 11/2/2020 16:44:22'!
PASSED!

!testRun: #TerniLapilliTest #test25XCanWin stamp: 'JEA 11/2/2020 16:44:22'!
PASSED!

!testRun: #TerniLapilliTest #test26OCanWin stamp: 'JEA 11/2/2020 16:44:22'!
PASSED!

!testRun: #TerniLapilliTest #test27CantPlayAfterGameIsOver stamp: 'JEA 11/2/2020 16:44:22'!
PASSED!

!testRun: #TerniLapilliTest #test12XAndOAreAtMoreThanOnePositionPlayed stamp: 'JEA 11/2/2020 16:44:22'!
FAILURE!
!TerniLapilliTest methodsFor: 'tests' stamp: 'JEA 11/2/2020 16:44:43' prior: 50890661!
test12XAndOAreAtMoreThanOnePositionPlayed
	| aTerniLapilliGame |
	
	aTerniLapilliGame := TerniLapilli new.
	aTerniLapilliGame putXAt: 0@0.
	aTerniLapilliGame putOAt: 0@1.
	aTerniLapilliGame putXAt: 1@1.
	aTerniLapilliGame putOAt: 1@0.
	aTerniLapilliGame putXAt: 2@0.
	aTerniLapilliGame putOAt: 2@1.

	self assert: (aTerniLapilliGame isXAt: 0@0).
	self assert: (aTerniLapilliGame isOAt: 0@2).
	self assert: (aTerniLapilliGame isXAt: 0@0).
	self assert: (aTerniLapilliGame isOAt: 0@2).
	self assert: (aTerniLapilliGame isXAt: 0@0).
	self assert: (aTerniLapilliGame isOAt: 0@2).! !
!TerniLapilliTest methodsFor: 'tests' stamp: 'JEA 11/2/2020 16:44:53' prior: 50890764!
test12XAndOAreAtMoreThanOnePositionPlayed
	| aTerniLapilliGame |
	
	aTerniLapilliGame := TerniLapilli new.
	aTerniLapilliGame putXAt: 0@0.
	aTerniLapilliGame putOAt: 0@1.
	aTerniLapilliGame putXAt: 1@1.
	aTerniLapilliGame putOAt: 1@0.
	aTerniLapilliGame putXAt: 2@0.
	aTerniLapilliGame putOAt: 2@1.

	self assert: (aTerniLapilliGame isXAt: 0@0).
	self assert: (aTerniLapilliGame isOAt: 0@1).
	self assert: (aTerniLapilliGame isXAt: 1@1).
	self assert: (aTerniLapilliGame isOAt: 1@0).
	self assert: (aTerniLapilliGame isXAt: 2@0).
	self assert: (aTerniLapilliGame isOAt: 2@1).! !

!testRun: #TerniLapilliTest #test01XPlaysFirst stamp: 'JEA 11/2/2020 16:44:53'!
PASSED!

!testRun: #TerniLapilliTest #test02XCanPlayItsTurn stamp: 'JEA 11/2/2020 16:44:53'!
PASSED!

!testRun: #TerniLapilliTest #test03OPlaysAfterX stamp: 'JEA 11/2/2020 16:44:53'!
PASSED!

!testRun: #TerniLapilliTest #test04OCanPlayItsTurn stamp: 'JEA 11/2/2020 16:44:53'!
PASSED!

!testRun: #TerniLapilliTest #test05XPlaysAfterO stamp: 'JEA 11/2/2020 16:44:53'!
PASSED!

!testRun: #TerniLapilliTest #test06XCantPlayOsTurn stamp: 'JEA 11/2/2020 16:44:53'!
PASSED!

!testRun: #TerniLapilliTest #test07OCantPlayXsTurn stamp: 'JEA 11/2/2020 16:44:53'!
PASSED!

!testRun: #TerniLapilliTest #test10OCantPlayInOccupiedPosition stamp: 'JEA 11/2/2020 16:44:53'!
PASSED!

!testRun: #TerniLapilliTest #test11XCantPlayInOccupiedPosition stamp: 'JEA 11/2/2020 16:44:53'!
PASSED!

!testRun: #TerniLapilliTest #test12XAndOAreAtMoreThanOnePositionPlayed stamp: 'JEA 11/2/2020 16:44:53'!
PASSED!

!testRun: #TerniLapilliTest #test13XCantPlayInInvalidPosition stamp: 'JEA 11/2/2020 16:44:53'!
PASSED!

!testRun: #TerniLapilliTest #test14OCantPlayInInvalidPosition stamp: 'JEA 11/2/2020 16:44:53'!
PASSED!

!testRun: #TerniLapilliTest #test15CantPlaceMoreThan3Chips stamp: 'JEA 11/2/2020 16:44:53'!
PASSED!

!testRun: #TerniLapilliTest #test16XCantMoveUntilAllChipsArePlaced stamp: 'JEA 11/2/2020 16:44:53'!
PASSED!

!testRun: #TerniLapilliTest #test17OCantMoveUntilAllChipsArePlaced stamp: 'JEA 11/2/2020 16:44:53'!
PASSED!

!testRun: #TerniLapilliTest #test18XCanMoveAfterAllChipsArePlaced stamp: 'JEA 11/2/2020 16:44:53'!
PASSED!

!testRun: #TerniLapilliTest #test19OCanMoveAfterAllChipsArePlaced stamp: 'JEA 11/2/2020 16:44:53'!
PASSED!

!testRun: #TerniLapilliTest #test20XCantMoveInOsTurn stamp: 'JEA 11/2/2020 16:44:53'!
PASSED!

!testRun: #TerniLapilliTest #test21OCantMoveInXsTurn stamp: 'JEA 11/2/2020 16:44:53'!
PASSED!

!testRun: #TerniLapilliTest #test22XCantMoveToOccupiedPosition stamp: 'JEA 11/2/2020 16:44:53'!
PASSED!

!testRun: #TerniLapilliTest #test23XCantMoveToInvalidPosition stamp: 'JEA 11/2/2020 16:44:54'!
PASSED!

!testRun: #TerniLapilliTest #test24XCantMoveToNotNeighborPosition stamp: 'JEA 11/2/2020 16:44:54'!
PASSED!

!testRun: #TerniLapilliTest #test25XCanWin stamp: 'JEA 11/2/2020 16:44:54'!
PASSED!

!testRun: #TerniLapilliTest #test26OCanWin stamp: 'JEA 11/2/2020 16:44:54'!
PASSED!

!testRun: #TerniLapilliTest #test27CantPlayAfterGameIsOver stamp: 'JEA 11/2/2020 16:44:54'!
PASSED!
!TerniLapilliTest methodsFor: 'tests - auxiliary' stamp: 'JEA 11/2/2020 16:45:24'!
isXAtAll: aPositionsCollection

	aPositionsCollection do: []! !
!TerniLapilliTest methodsFor: 'tests - auxiliary' stamp: 'JEA 11/2/2020 16:45:25' prior: 50890884!
isXAtAll: aPositionsCollection

	aPositionsCollection do: [].! !
!TerniLapilliTest methodsFor: 'tests - auxiliary' stamp: 'JEA 11/2/2020 16:45:30'!
assertisXAtAll: aPositionsCollection

	aPositionsCollection do: [].! !
!TerniLapilliTest methodsFor: 'tests - auxiliary' stamp: 'JEA 11/2/2020 16:45:31'!
assertIsXAtAll: aPositionsCollection

	aPositionsCollection do: [].! !

!methodRemoval: TerniLapilliTest #isXAtAll: stamp: 'JEA 11/2/2020 16:45:37'!
isXAtAll: aPositionsCollection

	aPositionsCollection do: [].!

!methodRemoval: TerniLapilliTest #assertisXAtAll: stamp: 'JEA 11/2/2020 16:45:38'!
assertisXAtAll: aPositionsCollection

	aPositionsCollection do: [].!
!TerniLapilliTest methodsFor: 'tests - auxiliary' stamp: 'JEA 11/2/2020 16:46:07'!
assertIsXAtAll: aPositionsCollection in: aTerniLapilliGame

	aPositionsCollection do: [self assert: (aTerniLapilliGame isXAt: 0@0).].
	
	self assert: (aTerniLapilliGame isXAt: 0@0).
	self assert: (aTerniLapilliGame isOAt: 0@1).
	self assert: (aTerniLapilliGame isXAt: 1@1).
	self assert: (aTerniLapilliGame isOAt: 1@0).
	self assert: (aTerniLapilliGame isXAt: 2@0).
	self assert: (aTerniLapilliGame isOAt: 2@1).! !
!TerniLapilliTest methodsFor: 'tests - auxiliary' stamp: 'JEA 11/2/2020 16:46:25' prior: 50890914!
assertIsXAtAll: aPositionsCollection in: aTerniLapilliGame

	aPositionsCollection do: [ :aPosition | self assert: (aTerniLapilliGame isXAt: aPosition).].! !

!methodRemoval: TerniLapilliTest #assertIsXAtAll: stamp: 'JEA 11/2/2020 16:46:29'!
assertIsXAtAll: aPositionsCollection

	aPositionsCollection do: [].!
!TerniLapilliTest methodsFor: 'tests - auxiliary' stamp: 'JEA 11/2/2020 16:46:36'!
assertIsOAtAll: aPositionsCollection in: aTerniLapilliGame

	aPositionsCollection do: [ :aPosition | self assert: (aTerniLapilliGame isOAt: aPosition).].! !
!TerniLapilliTest methodsFor: 'tests - auxiliary' stamp: 'JEA 11/2/2020 16:47:23'!
putOAtAll: aPositionsCollection in: aTerniLapilliGame

	aPositionsCollection do: [ :aPosition | aTerniLapilliGame putOAt: aPosition.].! !
!TerniLapilliTest methodsFor: 'tests - auxiliary' stamp: 'JEA 11/2/2020 16:47:30'!
putXAtAll: aPositionsCollection in: aTerniLapilliGame

	aPositionsCollection do: [ :aPosition | aTerniLapilliGame putXAt: aPosition.].! !

!testRun: #TerniLapilliTest #test01XPlaysFirst stamp: 'JEA 11/2/2020 16:49:00'!
PASSED!

!testRun: #TerniLapilliTest #test02XCanPlayItsTurn stamp: 'JEA 11/2/2020 16:49:00'!
PASSED!

!testRun: #TerniLapilliTest #test03OPlaysAfterX stamp: 'JEA 11/2/2020 16:49:00'!
PASSED!

!testRun: #TerniLapilliTest #test04OCanPlayItsTurn stamp: 'JEA 11/2/2020 16:49:00'!
PASSED!

!testRun: #TerniLapilliTest #test05XPlaysAfterO stamp: 'JEA 11/2/2020 16:49:00'!
PASSED!

!testRun: #TerniLapilliTest #test06XCantPlayOsTurn stamp: 'JEA 11/2/2020 16:49:00'!
PASSED!

!testRun: #TerniLapilliTest #test07OCantPlayXsTurn stamp: 'JEA 11/2/2020 16:49:00'!
PASSED!

!testRun: #TerniLapilliTest #test10OCantPlayInOccupiedPosition stamp: 'JEA 11/2/2020 16:49:00'!
PASSED!

!testRun: #TerniLapilliTest #test11XCantPlayInOccupiedPosition stamp: 'JEA 11/2/2020 16:49:00'!
PASSED!

!testRun: #TerniLapilliTest #test12XAndOAreAtMoreThanOnePositionPlayed stamp: 'JEA 11/2/2020 16:49:00'!
PASSED!

!testRun: #TerniLapilliTest #test13XCantPlayInInvalidPosition stamp: 'JEA 11/2/2020 16:49:00'!
PASSED!

!testRun: #TerniLapilliTest #test14OCantPlayInInvalidPosition stamp: 'JEA 11/2/2020 16:49:00'!
PASSED!

!testRun: #TerniLapilliTest #test15CantPlaceMoreThan3Chips stamp: 'JEA 11/2/2020 16:49:00'!
PASSED!

!testRun: #TerniLapilliTest #test16XCantMoveUntilAllChipsArePlaced stamp: 'JEA 11/2/2020 16:49:00'!
PASSED!

!testRun: #TerniLapilliTest #test17OCantMoveUntilAllChipsArePlaced stamp: 'JEA 11/2/2020 16:49:00'!
PASSED!

!testRun: #TerniLapilliTest #test18XCanMoveAfterAllChipsArePlaced stamp: 'JEA 11/2/2020 16:49:00'!
PASSED!

!testRun: #TerniLapilliTest #test19OCanMoveAfterAllChipsArePlaced stamp: 'JEA 11/2/2020 16:49:00'!
PASSED!

!testRun: #TerniLapilliTest #test20XCantMoveInOsTurn stamp: 'JEA 11/2/2020 16:49:00'!
PASSED!

!testRun: #TerniLapilliTest #test21OCantMoveInXsTurn stamp: 'JEA 11/2/2020 16:49:00'!
PASSED!

!testRun: #TerniLapilliTest #test22XCantMoveToOccupiedPosition stamp: 'JEA 11/2/2020 16:49:00'!
PASSED!

!testRun: #TerniLapilliTest #test23XCantMoveToInvalidPosition stamp: 'JEA 11/2/2020 16:49:00'!
PASSED!

!testRun: #TerniLapilliTest #test24XCantMoveToNotNeighborPosition stamp: 'JEA 11/2/2020 16:49:00'!
PASSED!

!testRun: #TerniLapilliTest #test25XCanWin stamp: 'JEA 11/2/2020 16:49:00'!
PASSED!

!testRun: #TerniLapilliTest #test26OCanWin stamp: 'JEA 11/2/2020 16:49:00'!
PASSED!

!testRun: #TerniLapilliTest #test27CantPlayAfterGameIsOver stamp: 'JEA 11/2/2020 16:49:00'!
PASSED!
!TerniLapilliTest methodsFor: 'tests - auxiliary' stamp: 'JEA 11/2/2020 16:49:56'!
placeAllChipsIn: aTerniLapilliGame

	aTerniLapilliGame putXAt: 0@0.
	aTerniLapilliGame putOAt: 0@1.
	aTerniLapilliGame putXAt: 0@2.
	aTerniLapilliGame putOAt: 1@0.
	aTerniLapilliGame putXAt: 1@1.
	aTerniLapilliGame putOAt: 1@2.! !

!methodRemoval: TerniLapilliTest #putOAtAll:in: stamp: 'JEA 11/2/2020 16:50:00'!
putOAtAll: aPositionsCollection in: aTerniLapilliGame

	aPositionsCollection do: [ :aPosition | aTerniLapilliGame putOAt: aPosition.].!

!methodRemoval: TerniLapilliTest #putXAtAll:in: stamp: 'JEA 11/2/2020 16:50:02'!
putXAtAll: aPositionsCollection in: aTerniLapilliGame

	aPositionsCollection do: [ :aPosition | aTerniLapilliGame putXAt: aPosition.].!
!TerniLapilliTest methodsFor: 'tests' stamp: 'JEA 11/2/2020 16:50:28' prior: 50890785!
test12XAndOAreAtMoreThanOnePositionPlayed
	| aTerniLapilliGame |
	
	aTerniLapilliGame := TerniLapilli new.
	self placeAllChipsIn: aTerniLapilliGame.

	self assert: (aTerniLapilliGame isXAt: 0@0).
	self assert: (aTerniLapilliGame isOAt: 0@1).
	self assert: (aTerniLapilliGame isXAt: 1@1).
	self assert: (aTerniLapilliGame isOAt: 1@0).
	self assert: (aTerniLapilliGame isXAt: 2@0).
	self assert: (aTerniLapilliGame isOAt: 2@1).! !

!testRun: #TerniLapilliTest #test01XPlaysFirst stamp: 'JEA 11/2/2020 16:50:29'!
PASSED!

!testRun: #TerniLapilliTest #test02XCanPlayItsTurn stamp: 'JEA 11/2/2020 16:50:29'!
PASSED!

!testRun: #TerniLapilliTest #test03OPlaysAfterX stamp: 'JEA 11/2/2020 16:50:29'!
PASSED!

!testRun: #TerniLapilliTest #test04OCanPlayItsTurn stamp: 'JEA 11/2/2020 16:50:29'!
PASSED!

!testRun: #TerniLapilliTest #test05XPlaysAfterO stamp: 'JEA 11/2/2020 16:50:29'!
PASSED!

!testRun: #TerniLapilliTest #test06XCantPlayOsTurn stamp: 'JEA 11/2/2020 16:50:29'!
PASSED!

!testRun: #TerniLapilliTest #test07OCantPlayXsTurn stamp: 'JEA 11/2/2020 16:50:29'!
PASSED!

!testRun: #TerniLapilliTest #test10OCantPlayInOccupiedPosition stamp: 'JEA 11/2/2020 16:50:29'!
PASSED!

!testRun: #TerniLapilliTest #test11XCantPlayInOccupiedPosition stamp: 'JEA 11/2/2020 16:50:29'!
PASSED!

!testRun: #TerniLapilliTest #test12XAndOAreAtMoreThanOnePositionPlayed stamp: 'JEA 11/2/2020 16:50:29'!
FAILURE!

!testRun: #TerniLapilliTest #test13XCantPlayInInvalidPosition stamp: 'JEA 11/2/2020 16:50:29'!
PASSED!

!testRun: #TerniLapilliTest #test14OCantPlayInInvalidPosition stamp: 'JEA 11/2/2020 16:50:29'!
PASSED!

!testRun: #TerniLapilliTest #test15CantPlaceMoreThan3Chips stamp: 'JEA 11/2/2020 16:50:29'!
PASSED!

!testRun: #TerniLapilliTest #test16XCantMoveUntilAllChipsArePlaced stamp: 'JEA 11/2/2020 16:50:29'!
PASSED!

!testRun: #TerniLapilliTest #test17OCantMoveUntilAllChipsArePlaced stamp: 'JEA 11/2/2020 16:50:29'!
PASSED!

!testRun: #TerniLapilliTest #test18XCanMoveAfterAllChipsArePlaced stamp: 'JEA 11/2/2020 16:50:29'!
PASSED!

!testRun: #TerniLapilliTest #test19OCanMoveAfterAllChipsArePlaced stamp: 'JEA 11/2/2020 16:50:29'!
PASSED!

!testRun: #TerniLapilliTest #test20XCantMoveInOsTurn stamp: 'JEA 11/2/2020 16:50:29'!
PASSED!

!testRun: #TerniLapilliTest #test21OCantMoveInXsTurn stamp: 'JEA 11/2/2020 16:50:29'!
PASSED!

!testRun: #TerniLapilliTest #test22XCantMoveToOccupiedPosition stamp: 'JEA 11/2/2020 16:50:29'!
PASSED!

!testRun: #TerniLapilliTest #test23XCantMoveToInvalidPosition stamp: 'JEA 11/2/2020 16:50:29'!
PASSED!

!testRun: #TerniLapilliTest #test24XCantMoveToNotNeighborPosition stamp: 'JEA 11/2/2020 16:50:29'!
PASSED!

!testRun: #TerniLapilliTest #test25XCanWin stamp: 'JEA 11/2/2020 16:50:29'!
PASSED!

!testRun: #TerniLapilliTest #test26OCanWin stamp: 'JEA 11/2/2020 16:50:29'!
PASSED!

!testRun: #TerniLapilliTest #test27CantPlayAfterGameIsOver stamp: 'JEA 11/2/2020 16:50:29'!
PASSED!

!testRun: #TerniLapilliTest #test12XAndOAreAtMoreThanOnePositionPlayed stamp: 'JEA 11/2/2020 16:50:29'!
FAILURE!
!TerniLapilliTest methodsFor: 'tests' stamp: 'JEA 11/2/2020 16:50:37' prior: 50891068!
test12XAndOAreAtMoreThanOnePositionPlayed
	| aTerniLapilliGame |
	
	aTerniLapilliGame := TerniLapilli new.
	aTerniLapilliGame putXAt: 0@0.
	aTerniLapilliGame putOAt: 0@1.
	aTerniLapilliGame putXAt: 1@1.
	aTerniLapilliGame putOAt: 1@0.
	aTerniLapilliGame putXAt: 2@0.
	aTerniLapilliGame putOAt: 2@1.

	self assert: (aTerniLapilliGame isXAt: 0@0).
	self assert: (aTerniLapilliGame isOAt: 0@1).
	self assert: (aTerniLapilliGame isXAt: 1@1).
	self assert: (aTerniLapilliGame isOAt: 1@0).
	self assert: (aTerniLapilliGame isXAt: 2@0).
	self assert: (aTerniLapilliGame isOAt: 2@1).! !

!methodRemoval: TerniLapilliTest #placeAllChipsIn: stamp: 'JEA 11/2/2020 16:50:41'!
placeAllChipsIn: aTerniLapilliGame

	aTerniLapilliGame putXAt: 0@0.
	aTerniLapilliGame putOAt: 0@1.
	aTerniLapilliGame putXAt: 0@2.
	aTerniLapilliGame putOAt: 1@0.
	aTerniLapilliGame putXAt: 1@1.
	aTerniLapilliGame putOAt: 1@2.!

!methodRemoval: TerniLapilliTest #assertIsOAtAll:in: stamp: 'JEA 11/2/2020 16:50:50'!
assertIsOAtAll: aPositionsCollection in: aTerniLapilliGame

	aPositionsCollection do: [ :aPosition | self assert: (aTerniLapilliGame isOAt: aPosition).].!

!methodRemoval: TerniLapilliTest #assertIsXAtAll:in: stamp: 'JEA 11/2/2020 16:50:51'!
assertIsXAtAll: aPositionsCollection in: aTerniLapilliGame

	aPositionsCollection do: [ :aPosition | self assert: (aTerniLapilliGame isXAt: aPosition).].!

!testRun: #TerniLapilliTest #test01XPlaysFirst stamp: 'JEA 11/2/2020 16:50:56'!
PASSED!

!testRun: #TerniLapilliTest #test02XCanPlayItsTurn stamp: 'JEA 11/2/2020 16:50:56'!
PASSED!

!testRun: #TerniLapilliTest #test03OPlaysAfterX stamp: 'JEA 11/2/2020 16:50:56'!
PASSED!

!testRun: #TerniLapilliTest #test04OCanPlayItsTurn stamp: 'JEA 11/2/2020 16:50:56'!
PASSED!

!testRun: #TerniLapilliTest #test05XPlaysAfterO stamp: 'JEA 11/2/2020 16:50:56'!
PASSED!

!testRun: #TerniLapilliTest #test06XCantPlayOsTurn stamp: 'JEA 11/2/2020 16:50:56'!
PASSED!

!testRun: #TerniLapilliTest #test07OCantPlayXsTurn stamp: 'JEA 11/2/2020 16:50:56'!
PASSED!

!testRun: #TerniLapilliTest #test10OCantPlayInOccupiedPosition stamp: 'JEA 11/2/2020 16:50:56'!
PASSED!

!testRun: #TerniLapilliTest #test11XCantPlayInOccupiedPosition stamp: 'JEA 11/2/2020 16:50:56'!
PASSED!

!testRun: #TerniLapilliTest #test12XAndOAreAtMoreThanOnePositionPlayed stamp: 'JEA 11/2/2020 16:50:56'!
PASSED!

!testRun: #TerniLapilliTest #test13XCantPlayInInvalidPosition stamp: 'JEA 11/2/2020 16:50:56'!
PASSED!

!testRun: #TerniLapilliTest #test14OCantPlayInInvalidPosition stamp: 'JEA 11/2/2020 16:50:56'!
PASSED!

!testRun: #TerniLapilliTest #test15CantPlaceMoreThan3Chips stamp: 'JEA 11/2/2020 16:50:56'!
PASSED!

!testRun: #TerniLapilliTest #test16XCantMoveUntilAllChipsArePlaced stamp: 'JEA 11/2/2020 16:50:56'!
PASSED!

!testRun: #TerniLapilliTest #test17OCantMoveUntilAllChipsArePlaced stamp: 'JEA 11/2/2020 16:50:56'!
PASSED!

!testRun: #TerniLapilliTest #test18XCanMoveAfterAllChipsArePlaced stamp: 'JEA 11/2/2020 16:50:56'!
PASSED!

!testRun: #TerniLapilliTest #test19OCanMoveAfterAllChipsArePlaced stamp: 'JEA 11/2/2020 16:50:56'!
PASSED!

!testRun: #TerniLapilliTest #test20XCantMoveInOsTurn stamp: 'JEA 11/2/2020 16:50:56'!
PASSED!

!testRun: #TerniLapilliTest #test21OCantMoveInXsTurn stamp: 'JEA 11/2/2020 16:50:56'!
PASSED!

!testRun: #TerniLapilliTest #test22XCantMoveToOccupiedPosition stamp: 'JEA 11/2/2020 16:50:56'!
PASSED!

!testRun: #TerniLapilliTest #test23XCantMoveToInvalidPosition stamp: 'JEA 11/2/2020 16:50:56'!
PASSED!

!testRun: #TerniLapilliTest #test24XCantMoveToNotNeighborPosition stamp: 'JEA 11/2/2020 16:50:56'!
PASSED!

!testRun: #TerniLapilliTest #test25XCanWin stamp: 'JEA 11/2/2020 16:50:56'!
PASSED!

!testRun: #TerniLapilliTest #test26OCanWin stamp: 'JEA 11/2/2020 16:50:56'!
PASSED!

!testRun: #TerniLapilliTest #test27CantPlayAfterGameIsOver stamp: 'JEA 11/2/2020 16:50:56'!
PASSED!
!TerniLapilliTest methodsFor: 'tests' stamp: 'JEA 11/2/2020 16:51:43'!
test28CantMoveFromPositionWithoutPlayersChip
	| aTerniLapilliGame |

	aTerniLapilliGame := TerniLapilli new.
	aTerniLapilliGame putXAt: 0@0.
	aTerniLapilliGame putOAt: 0@1.
	aTerniLapilliGame putXAt: 1@1.
	aTerniLapilliGame putOAt: 1@0.
	aTerniLapilliGame putXAt: 2@2.

	self should: [aTerniLapilliGame putOAt: 2@1.]
		raise: Error
		withExceptionDo: [ :anException | anException description = TerniLapilli gameIsOverDescription. ]
	! !
!TerniLapilliTest methodsFor: 'tests' stamp: 'JEA 11/2/2020 16:52:00' prior: 50891289!
test28CantMoveFromPositionWithoutPlayersChip
	| aTerniLapilliGame |

	aTerniLapilliGame := TerniLapilli new.
	aTerniLapilliGame putXAt: 0@0.
	aTerniLapilliGame putOAt: 0@1.
	aTerniLapilliGame putXAt: 1@1.
	aTerniLapilliGame putOAt: 1@0.
	aTerniLapilliGame putXAt: 2@0.
	aTerniLapilliGame putOAt: 2@1.

	self should: [aTerniLapilliGame putOAt: 2@1.]
		raise: Error
		withExceptionDo: [ :anException | anException description = TerniLapilli gameIsOverDescription. ]
	! !
!TerniLapilliTest methodsFor: 'tests' stamp: 'JEA 11/2/2020 16:52:51' prior: 50891306!
test28CantMoveFromPositionWithoutPlayersChip
	| aTerniLapilliGame |

	aTerniLapilliGame := TerniLapilli new.
	aTerniLapilliGame putXAt: 0@0.
	aTerniLapilliGame putOAt: 0@1.
	aTerniLapilliGame putXAt: 1@1.
	aTerniLapilliGame putOAt: 1@0.
	aTerniLapilliGame putXAt: 2@0.
	aTerniLapilliGame putOAt: 2@1.

	self should: [aTerniLapilliGame moveOFrom: 1@1 to: 2@2.]
		raise: Error
		withExceptionDo: [ :anException | anException description = TerniLapilli dontHaveChipThereDescription. ]
	! !
!TerniLapilliTest methodsFor: 'tests' stamp: 'JEA 11/2/2020 16:53:02' prior: 50891324!
test28CantMoveFromPositionWithoutPlayersChip
	| aTerniLapilliGame |

	aTerniLapilliGame := TerniLapilli new.
	aTerniLapilliGame putXAt: 0@0.
	aTerniLapilliGame putOAt: 0@1.
	aTerniLapilliGame putXAt: 1@1.
	aTerniLapilliGame putOAt: 1@0.
	aTerniLapilliGame putXAt: 2@0.
	aTerniLapilliGame putOAt: 2@1.

	self should: [aTerniLapilliGame moveOFrom: 1@1 to: 2@2.]
		raise: Error
		withExceptionDo: [ :anException | anException description = TerniLapilli noChipToMoveThereDescription. ]
	! !

!testRun: #TerniLapilliTest #test01XPlaysFirst stamp: 'JEA 11/2/2020 16:53:04'!
PASSED!

!testRun: #TerniLapilliTest #test02XCanPlayItsTurn stamp: 'JEA 11/2/2020 16:53:04'!
PASSED!

!testRun: #TerniLapilliTest #test03OPlaysAfterX stamp: 'JEA 11/2/2020 16:53:04'!
PASSED!

!testRun: #TerniLapilliTest #test04OCanPlayItsTurn stamp: 'JEA 11/2/2020 16:53:04'!
PASSED!

!testRun: #TerniLapilliTest #test05XPlaysAfterO stamp: 'JEA 11/2/2020 16:53:04'!
PASSED!

!testRun: #TerniLapilliTest #test06XCantPlayOsTurn stamp: 'JEA 11/2/2020 16:53:04'!
PASSED!

!testRun: #TerniLapilliTest #test07OCantPlayXsTurn stamp: 'JEA 11/2/2020 16:53:04'!
PASSED!

!testRun: #TerniLapilliTest #test10OCantPlayInOccupiedPosition stamp: 'JEA 11/2/2020 16:53:04'!
PASSED!

!testRun: #TerniLapilliTest #test11XCantPlayInOccupiedPosition stamp: 'JEA 11/2/2020 16:53:04'!
PASSED!

!testRun: #TerniLapilliTest #test12XAndOAreAtMoreThanOnePositionPlayed stamp: 'JEA 11/2/2020 16:53:04'!
PASSED!

!testRun: #TerniLapilliTest #test13XCantPlayInInvalidPosition stamp: 'JEA 11/2/2020 16:53:04'!
PASSED!

!testRun: #TerniLapilliTest #test14OCantPlayInInvalidPosition stamp: 'JEA 11/2/2020 16:53:04'!
PASSED!

!testRun: #TerniLapilliTest #test15CantPlaceMoreThan3Chips stamp: 'JEA 11/2/2020 16:53:04'!
PASSED!

!testRun: #TerniLapilliTest #test16XCantMoveUntilAllChipsArePlaced stamp: 'JEA 11/2/2020 16:53:04'!
PASSED!

!testRun: #TerniLapilliTest #test17OCantMoveUntilAllChipsArePlaced stamp: 'JEA 11/2/2020 16:53:04'!
PASSED!

!testRun: #TerniLapilliTest #test18XCanMoveAfterAllChipsArePlaced stamp: 'JEA 11/2/2020 16:53:04'!
PASSED!

!testRun: #TerniLapilliTest #test19OCanMoveAfterAllChipsArePlaced stamp: 'JEA 11/2/2020 16:53:04'!
PASSED!

!testRun: #TerniLapilliTest #test20XCantMoveInOsTurn stamp: 'JEA 11/2/2020 16:53:04'!
PASSED!

!testRun: #TerniLapilliTest #test21OCantMoveInXsTurn stamp: 'JEA 11/2/2020 16:53:04'!
PASSED!

!testRun: #TerniLapilliTest #test22XCantMoveToOccupiedPosition stamp: 'JEA 11/2/2020 16:53:04'!
PASSED!

!testRun: #TerniLapilliTest #test23XCantMoveToInvalidPosition stamp: 'JEA 11/2/2020 16:53:04'!
PASSED!

!testRun: #TerniLapilliTest #test24XCantMoveToNotNeighborPosition stamp: 'JEA 11/2/2020 16:53:04'!
PASSED!

!testRun: #TerniLapilliTest #test25XCanWin stamp: 'JEA 11/2/2020 16:53:04'!
PASSED!

!testRun: #TerniLapilliTest #test26OCanWin stamp: 'JEA 11/2/2020 16:53:04'!
PASSED!

!testRun: #TerniLapilliTest #test27CantPlayAfterGameIsOver stamp: 'JEA 11/2/2020 16:53:04'!
PASSED!

!testRun: #TerniLapilliTest #test28CantMoveFromPositionWithoutPlayersChip stamp: 'JEA 11/2/2020 16:53:04'!
ERROR!

!testRun: #TerniLapilliTest #test28CantMoveFromPositionWithoutPlayersChip stamp: 'JEA 11/2/2020 16:53:04'!
ERROR!
!TerniLapilli class methodsFor: 'error descriptions' stamp: 'JEA 11/2/2020 16:53:20'!
noChipToMoveThereDescription
	
	^'Do not have a chip to move there.' ! !
!TerniLapilli class methodsFor: 'error descriptions' stamp: 'JEA 11/2/2020 16:53:23' prior: 50891445!
noChipToMoveThereDescription
	
	^'Do not have a chip to move there.'! !
!MovingChips methodsFor: 'playing' stamp: 'JEA 11/2/2020 16:53:41' prior: 50889890 overrides: 50887133!
moveXFrom: currentPosition to: newPosition

	self assureThatCanMoveFrom: currentPosition to: newPosition.
	
	chipsXPlayed remove: currentPosition.
	chipsXPlayed add: newPosition.
	
	self hasXWon ifTrue: [ ^self changeState: GameOver. ].
	^self.! !
!TerniLapilliState methodsFor: 'playing - private' stamp: 'JEA 11/2/2020 16:54:06' prior: 50889867!
assureThatCanMoveFrom: currentPosition to: newPosition

	self assureThatCanPlayAt: newPosition.

	(currentPosition eightNeighbors includes: newPosition)
		ifFalse: [ self error: TerniLapilli cantMoveToNotNeighborPositionDescription. ].! !
!MovingChips methodsFor: 'playing' stamp: 'JEA 11/2/2020 16:54:14' prior: 50891457 overrides: 50887133!
moveXFrom: currentPosition to: newPosition

	self assureThatCanMoveFrom: currentPosition to: newPosition.
	
	self isXAt: currentPosition.
	
	chipsXPlayed remove: currentPosition.
	chipsXPlayed add: newPosition.
	
	self hasXWon ifTrue: [ ^self changeState: GameOver. ].
	^self.! !
!MovingChips methodsFor: 'playing' stamp: 'JEA 11/2/2020 16:54:36' prior: 50891479 overrides: 50887133!
moveXFrom: currentPosition to: newPosition

	self assureThatCanMoveFrom: currentPosition to: newPosition.
	
	(self isXAt: currentPosition) ifFalse: [self error: TerniLapilli noChipToMoveThereDescription. ].
	
	chipsXPlayed remove: currentPosition.
	chipsXPlayed add: newPosition.
	
	self hasXWon ifTrue: [ ^self changeState: GameOver. ].
	^self.! !
!MovingChips methodsFor: 'playing' stamp: 'JEA 11/2/2020 16:54:43' prior: 50889878 overrides: 50887128!
moveOFrom: currentPosition to: newPosition

	self assureThatCanMoveFrom: currentPosition to: newPosition.
	
	(self isOAt: currentPosition) ifFalse: [self error: TerniLapilli noChipToMoveThereDescription. ].
		
	chipsOPlayed remove: currentPosition.
	chipsOPlayed add: newPosition.
	
	self hasOWon ifTrue: [ ^self changeState: GameOver. ].
	^self.! !

!testRun: #TerniLapilliTest #test01XPlaysFirst stamp: 'JEA 11/2/2020 16:54:44'!
PASSED!

!testRun: #TerniLapilliTest #test02XCanPlayItsTurn stamp: 'JEA 11/2/2020 16:54:44'!
PASSED!

!testRun: #TerniLapilliTest #test03OPlaysAfterX stamp: 'JEA 11/2/2020 16:54:44'!
PASSED!

!testRun: #TerniLapilliTest #test04OCanPlayItsTurn stamp: 'JEA 11/2/2020 16:54:44'!
PASSED!

!testRun: #TerniLapilliTest #test05XPlaysAfterO stamp: 'JEA 11/2/2020 16:54:44'!
PASSED!

!testRun: #TerniLapilliTest #test06XCantPlayOsTurn stamp: 'JEA 11/2/2020 16:54:44'!
PASSED!

!testRun: #TerniLapilliTest #test07OCantPlayXsTurn stamp: 'JEA 11/2/2020 16:54:44'!
PASSED!

!testRun: #TerniLapilliTest #test10OCantPlayInOccupiedPosition stamp: 'JEA 11/2/2020 16:54:44'!
PASSED!

!testRun: #TerniLapilliTest #test11XCantPlayInOccupiedPosition stamp: 'JEA 11/2/2020 16:54:44'!
PASSED!

!testRun: #TerniLapilliTest #test12XAndOAreAtMoreThanOnePositionPlayed stamp: 'JEA 11/2/2020 16:54:44'!
PASSED!

!testRun: #TerniLapilliTest #test13XCantPlayInInvalidPosition stamp: 'JEA 11/2/2020 16:54:44'!
PASSED!

!testRun: #TerniLapilliTest #test14OCantPlayInInvalidPosition stamp: 'JEA 11/2/2020 16:54:44'!
PASSED!

!testRun: #TerniLapilliTest #test15CantPlaceMoreThan3Chips stamp: 'JEA 11/2/2020 16:54:44'!
PASSED!

!testRun: #TerniLapilliTest #test16XCantMoveUntilAllChipsArePlaced stamp: 'JEA 11/2/2020 16:54:44'!
PASSED!

!testRun: #TerniLapilliTest #test17OCantMoveUntilAllChipsArePlaced stamp: 'JEA 11/2/2020 16:54:44'!
PASSED!

!testRun: #TerniLapilliTest #test18XCanMoveAfterAllChipsArePlaced stamp: 'JEA 11/2/2020 16:54:44'!
PASSED!

!testRun: #TerniLapilliTest #test19OCanMoveAfterAllChipsArePlaced stamp: 'JEA 11/2/2020 16:54:44'!
PASSED!

!testRun: #TerniLapilliTest #test20XCantMoveInOsTurn stamp: 'JEA 11/2/2020 16:54:44'!
PASSED!

!testRun: #TerniLapilliTest #test21OCantMoveInXsTurn stamp: 'JEA 11/2/2020 16:54:44'!
PASSED!

!testRun: #TerniLapilliTest #test22XCantMoveToOccupiedPosition stamp: 'JEA 11/2/2020 16:54:44'!
PASSED!

!testRun: #TerniLapilliTest #test23XCantMoveToInvalidPosition stamp: 'JEA 11/2/2020 16:54:44'!
PASSED!

!testRun: #TerniLapilliTest #test24XCantMoveToNotNeighborPosition stamp: 'JEA 11/2/2020 16:54:44'!
PASSED!

!testRun: #TerniLapilliTest #test25XCanWin stamp: 'JEA 11/2/2020 16:54:44'!
PASSED!

!testRun: #TerniLapilliTest #test26OCanWin stamp: 'JEA 11/2/2020 16:54:44'!
PASSED!

!testRun: #TerniLapilliTest #test27CantPlayAfterGameIsOver stamp: 'JEA 11/2/2020 16:54:44'!
PASSED!

!testRun: #TerniLapilliTest #test28CantMoveFromPositionWithoutPlayersChip stamp: 'JEA 11/2/2020 16:54:44'!
PASSED!

----SNAPSHOT----(2 November 2020 16:54:47) CuisUniversity-4384.image priorSource: 17866947!

----QUIT----(2 November 2020 16:54:52) CuisUniversity-4384.image priorSource: 17918406!