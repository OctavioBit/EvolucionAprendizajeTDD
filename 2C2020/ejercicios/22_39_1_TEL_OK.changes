

----STARTUP---- (29 October 2020 21:31:10) as /home/fede/Documentos/Facultad/Inge1/Cuises/katas/linux64/CuisUniversity-4384.image!


----End fileIn of /home/fede/terni.st----!

----STARTUP---- (30 October 2020 20:19:55) as /home/fede/Documentos/Facultad/Inge1/Cuises/katas/linux64/CuisUniversity-4384.image!


TestCase subclass: #TerniLapilliTests
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Cuis-University-Tests'!

!classDefinition: #TerniLapilliTests category: 'Cuis-University-Tests' stamp: 'fr 10/30/2020 20:20:30'!
TestCase subclass: #TerniLapilliTests
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Cuis-University-Tests'!

TestCase subclass: #TerniLapilliTests
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TerniLapilli - Exercise'!

!classDefinition: #TerniLapilliTests category: 'TerniLapilli - Exercise' stamp: 'fr 10/30/2020 20:20:49'!
TestCase subclass: #TerniLapilliTests
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TerniLapilli - Exercise'!

!classDefinition: #TerniLapilli category: 'TerniLapilli - Exercise' stamp: 'fr 10/30/2020 20:21:55'!
Object subclass: #TerniLapilli
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TerniLapilli - Exercise'!
!TerniLapilliTests methodsFor: 'no messages' stamp: 'fr 10/30/2020 20:21:46'!
test01

	| terniLapilli |
	terniLapilli _ TerniLapilli new.
	terniLapilli putXAt: 1 @ 1.
	self assert:
		[terniLapilli isOMoving and: [ terniLapilli isXMoving not ]].! !

!testRun: #TerniLapilliTests #test01 stamp: 'fr 10/30/2020 20:22:00'!
ERROR!
!TerniLapilli methodsFor: 'actions' stamp: 'fr 10/30/2020 20:22:23'!
putXAt: aPoint 
	self shouldBeImplemented.! !

!classDefinition: #TerniLapilli category: 'TerniLapilli - Exercise' stamp: 'fr 10/30/2020 20:22:49'!
Object subclass: #TerniLapilli
	instanceVariableNames: 'xposition'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TerniLapilli - Exercise'!
!TerniLapilli methodsFor: 'actions' stamp: 'fr 10/30/2020 20:22:45' prior: 50867812!
putXAt: aPosition 
	
	xposition _ 1@1! !

!testRun: #TerniLapilliTests #test01 stamp: 'fr 10/30/2020 20:22:51'!
ERROR!
!TerniLapilli methodsFor: 'game state' stamp: 'fr 10/30/2020 20:23:04'!
isOMoving
	self shouldBeImplemented.! !
!TerniLapilli methodsFor: 'game state' stamp: 'fr 10/30/2020 20:23:12' prior: 50867830!
isOMoving
	
	^true! !

!testRun: #TerniLapilliTests #test01 stamp: 'fr 10/30/2020 20:23:14'!
ERROR!
!TerniLapilli methodsFor: 'game state' stamp: 'fr 10/30/2020 20:23:28'!
isXMoving
	self shouldBeImplemented.! !
!TerniLapilli methodsFor: 'game state' stamp: 'fr 10/30/2020 20:23:32' prior: 50867840!
isXMoving
	
	^false! !

!testRun: #TerniLapilliTests #test01 stamp: 'fr 10/30/2020 20:23:34'!
PASSED!

!testRun: #TerniLapilliTests #test01 stamp: 'fr 10/30/2020 20:23:34'!
PASSED!
!TerniLapilliTests methodsFor: 'as yet unclassified' stamp: 'fr 10/30/2020 20:24:09'!
test02

	| terniLapilli |
	terniLapilli _ TerniLapilli new.
	terniLapilli putXAt: 1 @ 1.
	self assert:
		[terniLapilli isOMoving and: [ terniLapilli isXMoving not ]].! !
!TerniLapilliTests methodsFor: 'as yet unclassified' stamp: 'fr 10/30/2020 20:24:21' prior: 50867853!
test02

	| terniLapilli |
	terniLapilli _ TerniLapilli new.
	terniLapilli putXAt: 1 @ 1.
	terniLapilli putOAt: 1 @ 2.
	self assert:
		[terniLapilli isXMoving and: [ terniLapilli isOMoving not ]].! !

!testRun: #TerniLapilliTests #test02 stamp: 'fr 10/30/2020 20:24:22'!
ERROR!
!TerniLapilli methodsFor: 'actions' stamp: 'fr 10/30/2020 20:24:30'!
putOAt: aPoint 
	self shouldBeImplemented.! !

!classDefinition: #TerniLapilli category: 'TerniLapilli - Exercise' stamp: 'fr 10/30/2020 20:24:45'!
Object subclass: #TerniLapilli
	instanceVariableNames: 'xposition opositions'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TerniLapilli - Exercise'!
!TerniLapilli methodsFor: 'actions' stamp: 'fr 10/30/2020 20:24:43' prior: 50867873!
putOAt: aPosition 
	
	opositions _ 1@2! !

!testRun: #TerniLapilliTests #test02 stamp: 'fr 10/30/2020 20:24:46'!
FAILURE!

!classDefinition: #TerniLapilli category: 'TerniLapilli - Exercise' stamp: 'fr 10/30/2020 20:27:48'!
Object subclass: #TerniLapilli
	instanceVariableNames: 'xposition opositions playerTurn'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TerniLapilli - Exercise'!
!TerniLapilli methodsFor: 'game state' stamp: 'fr 10/30/2020 20:27:43' prior: 50867844!
isXMoving
	
	^playerTurn = #X! !
!TerniLapilli methodsFor: 'game state' stamp: 'fr 10/30/2020 20:28:14' prior: 50867834!
isOMoving
	
	^playerTurn = #O! !

!testRun: #TerniLapilliTests #test02 stamp: 'fr 10/30/2020 20:28:34'!
FAILURE!

!testRun: #TerniLapilliTests #test02 stamp: 'fr 10/30/2020 20:29:57'!
FAILURE!
!TerniLapilli methodsFor: 'actions' stamp: 'fr 10/30/2020 20:30:22' prior: 50867824!
putXAt: aPosition 
	
	xposition _ 1@1.
	playerTurn _ #O! !

!testRun: #TerniLapilliTests #test02 stamp: 'fr 10/30/2020 20:30:24'!
FAILURE!
!TerniLapilli methodsFor: 'actions' stamp: 'fr 10/30/2020 20:30:37' prior: 50867886!
putOAt: aPosition 
	
	opositions _ 1@2.
	playerTurn _ #X! !

!testRun: #TerniLapilliTests #test02 stamp: 'fr 10/30/2020 20:30:38'!
PASSED!

!testRun: #TerniLapilliTests #test01 stamp: 'fr 10/30/2020 20:30:38'!
PASSED!

!testRun: #TerniLapilliTests #test02 stamp: 'fr 10/30/2020 20:30:38'!
PASSED!
!TerniLapilliTests methodsFor: 'as yet unclassified' stamp: 'fr 10/30/2020 20:30:44'!
test03

	| terniLapilli |
	terniLapilli _ TerniLapilli new.
	terniLapilli putXAt: 1 @ 1.
	terniLapilli putOAt: 1 @ 2.
	self assert:
		[terniLapilli isXMoving and: [ terniLapilli isOMoving not ]].! !
!TerniLapilliTests methodsFor: 'as yet unclassified' stamp: 'fr 10/30/2020 20:32:35' prior: 50867934!
test03

	| terniLapilli |
	terniLapilli _ TerniLapilli new.
	terniLapilli putXAt: 1 @ 1.
	terniLapilli putOAt: 1 @ 2.
	terniLapilli putOAt: 1 @ 3.
	self assert:
		[terniLapilli isXMoving and: [ terniLapilli isOMoving not ]].! !
!TerniLapilliTests methodsFor: 'as yet unclassified' stamp: 'fr 10/30/2020 20:33:52' prior: 50867944!
test03

	| terniLapilli |
	terniLapilli _ TerniLapilli new.
	self should: 		[	terniLapilli putXAt: 1 @ 1.
				terniLapilli putOAt: 1 @ 2.
				terniLapilli putOAt: 1 @ 3.] 
		raise: Error  
		withMessageText: TerniLapilli playerXTurnErrorDescription! !

!testRun: #TerniLapilliTests #test03 stamp: 'fr 10/30/2020 20:33:55'!
ERROR!
!TerniLapilli class methodsFor: 'error message descriptions' stamp: 'fr 10/30/2020 20:34:14'!
playerXTurnErrorDescription
	self shouldBeImplemented.! !
!TerniLapilli class methodsFor: 'error message descriptions' stamp: 'fr 10/30/2020 20:34:30' prior: 50867969!
playerXTurnErrorDescription
	
	^'It is player X turn'! !
!TerniLapilli class methodsFor: 'error message descriptions' stamp: 'fr 10/30/2020 20:34:36' prior: 50867975!
playerXTurnErrorDescription
	
	^'It is player Xs turn'! !

!testRun: #TerniLapilliTests #test03 stamp: 'fr 10/30/2020 20:34:41'!
FAILURE!
!TerniLapilli methodsFor: 'actions' stamp: 'fr 10/30/2020 20:36:06' prior: 50867915!
putXAt: aPosition 
	
	(playerTurn = #X) ifFalse: [self notPlayerXTurn].
	xposition _ 1@1.
	playerTurn _ #O! !

!testRun: #TerniLapilliTests #test03 stamp: 'fr 10/30/2020 20:36:11'!
FAILURE!

!testRun: #TerniLapilliTests #test03 stamp: 'fr 10/30/2020 20:36:28'!
FAILURE!

!testRun: #TerniLapilliTests #test03 stamp: 'fr 10/30/2020 20:36:34'!
FAILURE!

!testRun: #TerniLapilliTests #test03 stamp: 'fr 10/30/2020 20:36:43'!
FAILURE!

!testRun: #TerniLapilliTests #test03 stamp: 'fr 10/30/2020 20:36:52'!
FAILURE!
!TerniLapilli methodsFor: 'actions' stamp: 'fr 10/30/2020 20:37:26' prior: 50867988!
putXAt: aPosition 
	
	(playerTurn = #X) ifFalse: [self error: self class playerOTurnErrorDescription].
	xposition _ 1@1.
	playerTurn _ #O! !

!testRun: #TerniLapilliTests #test03 stamp: 'fr 10/30/2020 20:37:30'!
FAILURE!

!testRun: #TerniLapilliTests #test03 stamp: 'fr 10/30/2020 20:37:42'!
FAILURE!

	xposition _ 1@1.!
!TerniLapilli methodsFor: 'actions' stamp: 'fr 10/30/2020 20:37:59' prior: 50868007!
putXAt: aPosition 
	
	xposition _ 1@1.
	playerTurn _ #O! !
!TerniLapilli methodsFor: 'actions' stamp: 'fr 10/30/2020 20:38:14' prior: 50867922!
putOAt: aPosition 
	
	(playerTurn = #O) ifFalse: [self error: self class playerXTurnErrorDescription].
	opositions _ 1@2.
	playerTurn _ #X! !

!testRun: #TerniLapilliTests #test03 stamp: 'fr 10/30/2020 20:38:15'!
PASSED!

!testRun: #TerniLapilliTests #test01 stamp: 'fr 10/30/2020 20:38:15'!
PASSED!

!testRun: #TerniLapilliTests #test02 stamp: 'fr 10/30/2020 20:38:15'!
PASSED!

!testRun: #TerniLapilliTests #test03 stamp: 'fr 10/30/2020 20:38:15'!
PASSED!
!TerniLapilliTests methodsFor: 'as yet unclassified' stamp: 'fr 10/30/2020 20:38:22'!
test04

	| terniLapilli |
	terniLapilli _ TerniLapilli new.
	self should: 		[	terniLapilli putXAt: 1 @ 1.
				terniLapilli putOAt: 1 @ 2.
				terniLapilli putOAt: 1 @ 3.] 
		raise: Error  
		withMessageText: TerniLapilli playerXTurnErrorDescription! !
!TerniLapilliTests methodsFor: 'as yet unclassified' stamp: 'fr 10/30/2020 20:38:40' prior: 50868042!
test04

	| terniLapilli |
	terniLapilli _ TerniLapilli new.
	self should: 		[ terniLapilli putOAt: 1 @ 2.] 
		raise: Error  
		withMessageText: TerniLapilli playerXTurnErrorDescription! !

!methodRemoval: TerniLapilliTests #test03 stamp: 'fr 10/30/2020 20:38:46'!
test03

	| terniLapilli |
	terniLapilli _ TerniLapilli new.
	self should: 		[	terniLapilli putXAt: 1 @ 1.
				terniLapilli putOAt: 1 @ 2.
				terniLapilli putOAt: 1 @ 3.] 
		raise: Error  
		withMessageText: TerniLapilli playerXTurnErrorDescription!
!TerniLapilliTests methodsFor: 'as yet unclassified' stamp: 'fr 10/30/2020 20:38:49'!
test03

	| terniLapilli |
	terniLapilli _ TerniLapilli new.
	self should: 		[ terniLapilli putOAt: 1 @ 2.] 
		raise: Error  
		withMessageText: TerniLapilli playerXTurnErrorDescription! !

!methodRemoval: TerniLapilliTests #test04 stamp: 'fr 10/30/2020 20:39:03'!
test04

	| terniLapilli |
	terniLapilli _ TerniLapilli new.
	self should: 		[ terniLapilli putOAt: 1 @ 2.] 
		raise: Error  
		withMessageText: TerniLapilli playerXTurnErrorDescription!

!testRun: #TerniLapilliTests #test03 stamp: 'fr 10/30/2020 20:39:06'!
PASSED!

!testRun: #TerniLapilliTests #test01 stamp: 'fr 10/30/2020 20:39:06'!
PASSED!

!testRun: #TerniLapilliTests #test02 stamp: 'fr 10/30/2020 20:39:06'!
PASSED!

!testRun: #TerniLapilliTests #test03 stamp: 'fr 10/30/2020 20:39:06'!
PASSED!

!testRun: #TerniLapilliTests #test03 stamp: 'fr 10/30/2020 20:39:12'!
PASSED!

!testRun: #TerniLapilliTests #test01 stamp: 'fr 10/30/2020 20:39:12'!
PASSED!

!testRun: #TerniLapilliTests #test02 stamp: 'fr 10/30/2020 20:39:12'!
PASSED!

!testRun: #TerniLapilliTests #test03 stamp: 'fr 10/30/2020 20:39:12'!
PASSED!
!TerniLapilliTests methodsFor: 'as yet unclassified' stamp: 'fr 10/30/2020 20:39:53'!
test04

	| terniLapilli |
	terniLapilli _ TerniLapilli new.
	self should: 		[ terniLapilli putOAt: 1 @ 2.] 
		raise: Error  
		withMessageText: TerniLapilli playerXTurnErrorDescription! !
!TerniLapilliTests methodsFor: 'as yet unclassified' stamp: 'fr 10/30/2020 20:40:50' prior: 50868110!
test04

	| terniLapilli |
	terniLapilli _ TerniLapilli new.
	self should: 		[ 	terniLapilli putXAt: 1 @ 2.
				terniLapilli putXAt: 1 @ 1.] 
		raise: Error  
		withMessageText: TerniLapilli playerXTurnErrorDescription! !
!TerniLapilliTests methodsFor: 'as yet unclassified' stamp: 'fr 10/30/2020 20:40:54' prior: 50868120!
test04

	| terniLapilli |
	terniLapilli _ TerniLapilli new.
	self should: 		[ 	terniLapilli putXAt: 1 @ 2.
				terniLapilli putXAt: 1 @ 1.] 
		raise: Error  
		withMessageText: TerniLapilli playerOTurnErrorDescription! !

!testRun: #TerniLapilliTests #test04 stamp: 'fr 10/30/2020 20:41:23'!
ERROR!
!TerniLapilli class methodsFor: 'error message descriptions' stamp: 'fr 10/30/2020 20:41:44'!
playerOTurnErrorDescription
	self shouldBeImplemented.! !
!TerniLapilli class methodsFor: 'error message descriptions' stamp: 'fr 10/30/2020 20:41:56' prior: 50868144!
playerOTurnErrorDescription
	
	^'It is player Os turn'! !

!testRun: #TerniLapilliTests #test04 stamp: 'fr 10/30/2020 20:41:59'!
FAILURE!
!TerniLapilli methodsFor: 'actions' stamp: 'fr 10/30/2020 20:43:07' prior: 50868020!
putXAt: aPosition 
	
	(playerTurn = #X) ifFalse: [self error: self class playerOTurnErrorDescription].
	xposition _ 1@1.
	playerTurn _ #O! !

!testRun: #TerniLapilliTests #test04 stamp: 'fr 10/30/2020 20:43:11'!
PASSED!

!testRun: #TerniLapilliTests #test01 stamp: 'fr 10/30/2020 20:43:11'!
ERROR!

!testRun: #TerniLapilliTests #test02 stamp: 'fr 10/30/2020 20:43:11'!
ERROR!

!testRun: #TerniLapilliTests #test03 stamp: 'fr 10/30/2020 20:43:11'!
PASSED!

!testRun: #TerniLapilliTests #test04 stamp: 'fr 10/30/2020 20:43:11'!
PASSED!
!TerniLapilliTests methodsFor: 'as yet unclassified' stamp: 'fr 10/30/2020 20:43:32' prior: 50867802!
test01

	| terniLapilli |
	terniLapilli _ TerniLapilli starting: #X.
	terniLapilli putXAt: 1 @ 1.
	self assert:
		[terniLapilli isOMoving and: [ terniLapilli isXMoving not ]].! !
!TerniLapilliTests methodsFor: 'as yet unclassified' stamp: 'fr 10/30/2020 20:43:56' prior: 50867862!
test02

	| terniLapilli |
	terniLapilli _ TerniLapilli new.
	terniLapilli putXAt: 1 @ 1.
	terniLapilli putOAt: 1 @ 2.
	self assert:
		[terniLapilli isXMoving and: [ terniLapilli isOMoving not ]].! !
!TerniLapilliTests methodsFor: 'as yet unclassified' stamp: 'fr 10/30/2020 20:44:02' prior: 50868186!
test02

	| terniLapilli |
	terniLapilli _ TerniLapilli starting: #X.
	terniLapilli putXAt: 1 @ 1.
	terniLapilli putOAt: 1 @ 2.
	self assert:
		[terniLapilli isXMoving and: [ terniLapilli isOMoving not ]].! !
!TerniLapilliTests methodsFor: 'as yet unclassified' stamp: 'fr 10/30/2020 20:44:10' prior: 50868073!
test03

	| terniLapilli |
	terniLapilli _ TerniLapilli starting: #X.
	self should: 		[ terniLapilli putOAt: 1 @ 2.] 
		raise: Error  
		withMessageText: TerniLapilli playerXTurnErrorDescription! !
!TerniLapilliTests methodsFor: 'as yet unclassified' stamp: 'fr 10/30/2020 20:44:18' prior: 50868131!
test04

	| terniLapilli |
	terniLapilli _ TerniLapilli starting: #X.
	self should: 		[ 	terniLapilli putXAt: 1 @ 2.
				terniLapilli putXAt: 1 @ 1.] 
		raise: Error  
		withMessageText: TerniLapilli playerOTurnErrorDescription! !

!testRun: #TerniLapilliTests #test01 stamp: 'fr 10/30/2020 20:44:21'!
ERROR!
!TerniLapilli class methodsFor: 'instance creation' stamp: 'fr 10/30/2020 20:44:33'!
starting: aSymbol 
	"DO NOT FORGET TO RENAME COLLABORATORS AND REMOVE THIS COMMENT!!!!"
	self shouldBeImplemented.
	^self new initializeStarting: aSymbol ! !
!TerniLapilli class methodsFor: 'instance creation' stamp: 'fr 10/30/2020 20:44:52' prior: 50868229!
starting: aPlayerId 
	
	^self new initializeStarting: aPlayerId ! !

!testRun: #TerniLapilliTests #test01 stamp: 'fr 10/30/2020 20:44:54'!
ERROR!

!classDefinition: #TerniLapilli category: 'TerniLapilli - Exercise' stamp: 'fr 10/30/2020 20:45:03'!
Object subclass: #TerniLapilli
	instanceVariableNames: 'xposition opositions playerTurn playerId'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TerniLapilli - Exercise'!
!TerniLapilli methodsFor: 'initialization' stamp: 'fr 10/30/2020 20:45:03'!
initializeStarting: aPlayerId 
	self shouldBeImplemented.
	playerId := aPlayerId.! !
!TerniLapilli methodsFor: 'initialization' stamp: 'fr 10/30/2020 20:45:10' prior: 50868254!
initializeStarting: aPlayerId 
	
	playerTurn _ aPlayerId.! !

!testRun: #TerniLapilliTests #test01 stamp: 'fr 10/30/2020 20:45:11'!
PASSED!

!testRun: #TerniLapilliTests #test01 stamp: 'fr 10/30/2020 20:45:11'!
PASSED!

!testRun: #TerniLapilliTests #test02 stamp: 'fr 10/30/2020 20:45:11'!
PASSED!

!testRun: #TerniLapilliTests #test03 stamp: 'fr 10/30/2020 20:45:11'!
PASSED!

!testRun: #TerniLapilliTests #test04 stamp: 'fr 10/30/2020 20:45:11'!
PASSED!
!TerniLapilliTests methodsFor: 'as yet unclassified' stamp: 'fr 10/30/2020 20:45:18'!
test05

	| terniLapilli |
	terniLapilli _ TerniLapilli starting: #X.
	self should: 		[ 	terniLapilli putXAt: 1 @ 2.
				terniLapilli putXAt: 1 @ 1.] 
		raise: Error  
		withMessageText: TerniLapilli playerOTurnErrorDescription! !
!TerniLapilliTests methodsFor: 'as yet unclassified' stamp: 'fr 10/30/2020 20:45:51' prior: 50868277!
test05

	| terniLapilli |
	terniLapilli _ TerniLapilli starting: #X.
	terniLapilli putXAt: 1 @ 1.
	
	self assert: [terniLapilli hasXPieceAt: 1@1]! !

----SNAPSHOT----(30 October 2020 20:46:04) CuisUniversity-4384.image priorSource: 17155564!
!TerniLapilliTests methodsFor: 'as yet unclassified' stamp: 'fr 10/30/2020 20:46:24' prior: 50868288!
test05

	| terniLapilli |
	terniLapilli _ TerniLapilli starting: #X.
	terniLapilli putXAt: 1 @ 1.
	
	self assert: [terniLapilli hasPieceAt: 1@1 forPlayer: #X]! !

!testRun: #TerniLapilliTests #test05 stamp: 'fr 10/30/2020 20:46:51'!
ERROR!
!TerniLapilli methodsFor: 'state' stamp: 'fr 10/30/2020 20:47:22'!
hasPieceAt: aPoint forPlayer: aSymbol 
	self shouldBeImplemented.! !

!methodRemoval: TerniLapilli #hasPieceAt:forPlayer: stamp: 'fr 10/30/2020 20:47:46'!
hasPieceAt: aPoint forPlayer: aSymbol 
	self shouldBeImplemented.!
!TerniLapilliTests methodsFor: 'as yet unclassified' stamp: 'fr 10/30/2020 20:48:15' prior: 50868299!
test05

	| terniLapilli |
	terniLapilli _ TerniLapilli starting: #X.
	terniLapilli putXAt: 1 @ 1.
	
	self assert: [terniLapilli hasXPieceAt: 1@1]! !

!testRun: #TerniLapilliTests #test05 stamp: 'fr 10/30/2020 20:48:17'!
ERROR!

!testRun: #TerniLapilliTests #test05 stamp: 'fr 10/30/2020 20:48:26'!
ERROR!
!TerniLapilli methodsFor: 'state' stamp: 'fr 10/30/2020 20:48:34'!
hasXPieceAt: aPoint 
	self shouldBeImplemented.! !
!TerniLapilli methodsFor: 'state' stamp: 'fr 10/30/2020 20:48:53' prior: 50868332!
hasXPieceAt: aPosition

	^xposition = 1@1
	
	! !

!testRun: #TerniLapilliTests #test05 stamp: 'fr 10/30/2020 20:48:54'!
ERROR!

!testRun: #TerniLapilliTests #test05 stamp: 'fr 10/30/2020 20:48:58'!
ERROR!
!TerniLapilli methodsFor: 'state' stamp: 'fr 10/30/2020 20:49:14' prior: 50868337!
hasXPieceAt: aPosition

	^xposition = (1@1)	
	! !

!testRun: #TerniLapilliTests #test05 stamp: 'fr 10/30/2020 20:49:15'!
PASSED!

!testRun: #TerniLapilliTests #test01 stamp: 'fr 10/30/2020 20:49:15'!
PASSED!

!testRun: #TerniLapilliTests #test02 stamp: 'fr 10/30/2020 20:49:15'!
PASSED!

!testRun: #TerniLapilliTests #test03 stamp: 'fr 10/30/2020 20:49:15'!
PASSED!

!testRun: #TerniLapilliTests #test04 stamp: 'fr 10/30/2020 20:49:15'!
PASSED!

!testRun: #TerniLapilliTests #test05 stamp: 'fr 10/30/2020 20:49:15'!
PASSED!
!TerniLapilliTests methodsFor: 'as yet unclassified' stamp: 'fr 10/30/2020 20:49:32'!
test06

	| terniLapilli |
	terniLapilli _ TerniLapilli starting: #X.
	terniLapilli putXAt: 1 @ 1.
	terniLapilli putOAt: 1 @ 1.
	
	self assert: [terniLapilli hasXPieceAt: 1@1]! !
!TerniLapilliTests methodsFor: 'as yet unclassified' stamp: 'fr 10/30/2020 20:49:42' prior: 50868366!
test06

	| terniLapilli |
	terniLapilli _ TerniLapilli starting: #X.
	terniLapilli putXAt: 1 @ 1.
	terniLapilli putOAt: 1 @ 1.
	
	self assert: [terniLapilli hasOPieceAt: 1@1]! !
!TerniLapilliTests methodsFor: 'as yet unclassified' stamp: 'fr 10/30/2020 20:49:53' prior: 50868375!
test06

	| terniLapilli |
	terniLapilli _ TerniLapilli starting: #X.
	terniLapilli putXAt: 1 @ 1.
	terniLapilli putOAt: 1 @ 2.
	
	self assert: [terniLapilli hasOPieceAt: 1@1]! !
!TerniLapilliTests methodsFor: 'as yet unclassified' stamp: 'fr 10/30/2020 20:50:20' prior: 50868384!
test06

	| terniLapilli |
	terniLapilli _ TerniLapilli starting: #X.
	terniLapilli putXAt: 1 @ 1.
	terniLapilli putOAt: 1 @ 2.
	
	self assert: [terniLapilli hasOPieceAt: 1@1]! !
!TerniLapilliTests methodsFor: 'as yet unclassified' stamp: 'fr 10/30/2020 20:50:21' prior: 50868393!
test06

	| terniLapilli |
	terniLapilli _ TerniLapilli starting: #X.
	terniLapilli putXAt: 1 @ 1.
	terniLapilli putOAt: 1 @ 2.
	
	self assert: [terniLapilli hasOPieceAt: 1@2]! !

!testRun: #TerniLapilliTests #test06 stamp: 'fr 10/30/2020 20:50:22'!
ERROR!
!TerniLapilli methodsFor: 'state' stamp: 'fr 10/30/2020 20:50:42'!
hasOPieceAt: aPoint 
	self shouldBeImplemented.! !
!TerniLapilli methodsFor: 'state' stamp: 'fr 10/30/2020 20:50:56' prior: 50868413!
hasOPieceAt: aPoint 
	
	^opositions = (1@2)! !

!testRun: #TerniLapilliTests #test06 stamp: 'fr 10/30/2020 20:50:56'!
PASSED!

!testRun: #TerniLapilliTests #test01 stamp: 'fr 10/30/2020 20:50:56'!
PASSED!

!testRun: #TerniLapilliTests #test02 stamp: 'fr 10/30/2020 20:50:56'!
PASSED!

!testRun: #TerniLapilliTests #test03 stamp: 'fr 10/30/2020 20:50:56'!
PASSED!

!testRun: #TerniLapilliTests #test04 stamp: 'fr 10/30/2020 20:50:56'!
PASSED!

!testRun: #TerniLapilliTests #test05 stamp: 'fr 10/30/2020 20:50:56'!
PASSED!

!testRun: #TerniLapilliTests #test06 stamp: 'fr 10/30/2020 20:50:56'!
PASSED!
!TerniLapilliTests methodsFor: 'as yet unclassified' stamp: 'fr 10/30/2020 20:51:06'!
test07

	| terniLapilli |
	terniLapilli _ TerniLapilli starting: #X.
	terniLapilli putXAt: 1 @ 1.
	terniLapilli putXAt: 1 @ 2.
	
	self assert: [terniLapilli hasXPieceAt: 1@1]! !
!TerniLapilliTests methodsFor: 'as yet unclassified' stamp: 'fr 10/30/2020 20:51:27' prior: 50868440!
test07

	| terniLapilli |
	terniLapilli _ TerniLapilli starting: #X.
	terniLapilli putXAt: 1 @ 1.
	terniLapilli putXAt: 1 @ 2.
	
	self assert: [(terniLapilli hasXPieceAt: 1@1) and: [terniLapilli hasXPieceAt: 1@2]]! !

!testRun: #TerniLapilliTests #test07 stamp: 'fr 10/30/2020 20:51:31'!
ERROR!
!TerniLapilliTests methodsFor: 'as yet unclassified' stamp: 'fr 10/30/2020 20:51:45' prior: 50868449!
test07

	| terniLapilli |
	terniLapilli _ TerniLapilli starting: #X.
	terniLapilli putXAt: 1 @ 1.
	terniLapilli putOAt: 1 @ 3.
	terniLapilli putXAt: 1 @ 2.
	
	self assert: [(terniLapilli hasXPieceAt: 1@1) and: [terniLapilli hasXPieceAt: 1@2]]! !

!testRun: #TerniLapilliTests #test07 stamp: 'fr 10/30/2020 20:51:45'!
PASSED!

!testRun: #TerniLapilliTests #test01 stamp: 'fr 10/30/2020 20:51:45'!
PASSED!

!testRun: #TerniLapilliTests #test02 stamp: 'fr 10/30/2020 20:51:45'!
PASSED!

!testRun: #TerniLapilliTests #test03 stamp: 'fr 10/30/2020 20:51:45'!
PASSED!

!testRun: #TerniLapilliTests #test04 stamp: 'fr 10/30/2020 20:51:45'!
PASSED!

!testRun: #TerniLapilliTests #test05 stamp: 'fr 10/30/2020 20:51:45'!
PASSED!

!testRun: #TerniLapilliTests #test06 stamp: 'fr 10/30/2020 20:51:45'!
PASSED!

!testRun: #TerniLapilliTests #test07 stamp: 'fr 10/30/2020 20:51:45'!
PASSED!
!TerniLapilliTests methodsFor: 'as yet unclassified' stamp: 'fr 10/30/2020 20:54:15' prior: 50868320!
test05

	| terniLapilli |
	terniLapilli _ TerniLapilli starting: #X.
	terniLapilli putXAt: 1 @ 2.
	
	self assert: [terniLapilli hasXPieceAt: 1@1]! !

!testRun: #TerniLapilliTests #test05 stamp: 'fr 10/30/2020 20:54:17'!
PASSED!

!testRun: #TerniLapilliTests #test01 stamp: 'fr 10/30/2020 20:54:17'!
PASSED!

!testRun: #TerniLapilliTests #test02 stamp: 'fr 10/30/2020 20:54:17'!
PASSED!

!testRun: #TerniLapilliTests #test03 stamp: 'fr 10/30/2020 20:54:17'!
PASSED!

!testRun: #TerniLapilliTests #test04 stamp: 'fr 10/30/2020 20:54:17'!
PASSED!

!testRun: #TerniLapilliTests #test05 stamp: 'fr 10/30/2020 20:54:17'!
PASSED!

!testRun: #TerniLapilliTests #test06 stamp: 'fr 10/30/2020 20:54:17'!
PASSED!

!testRun: #TerniLapilliTests #test07 stamp: 'fr 10/30/2020 20:54:17'!
PASSED!
!TerniLapilliTests methodsFor: 'as yet unclassified' stamp: 'fr 10/30/2020 20:54:20' prior: 50868493!
test05

	| terniLapilli |
	terniLapilli _ TerniLapilli starting: #X.
	terniLapilli putXAt: 1 @ 1.
	
	self assert: [terniLapilli hasXPieceAt: 1@1]! !

!methodRemoval: TerniLapilliTests #test07 stamp: 'fr 10/30/2020 20:56:54'!
test07

	| terniLapilli |
	terniLapilli _ TerniLapilli starting: #X.
	terniLapilli putXAt: 1 @ 1.
	terniLapilli putOAt: 1 @ 3.
	terniLapilli putXAt: 1 @ 2.
	
	self assert: [(terniLapilli hasXPieceAt: 1@1) and: [terniLapilli hasXPieceAt: 1@2]]!
!TerniLapilliTests methodsFor: 'as yet unclassified' stamp: 'fr 10/30/2020 20:57:08'!
test07

	| terniLapilli |
	terniLapilli _ TerniLapilli starting: #X.
	terniLapilli putXAt: 1 @ 1.
	terniLapilli putOAt: 1 @ 2.
	
	self assert: [terniLapilli hasOPieceAt: 1@2]! !
!TerniLapilliTests methodsFor: 'as yet unclassified' stamp: 'fr 10/30/2020 20:57:13' prior: 50868539!
test07

	| terniLapilli |
	terniLapilli _ TerniLapilli starting: #X.
	terniLapilli putXAt: 1 @ 2.
	
	self assert: [terniLapilli hasOPieceAt: 1@2]! !
!TerniLapilliTests methodsFor: 'as yet unclassified' stamp: 'fr 10/30/2020 20:57:16' prior: 50868548!
test07

	| terniLapilli |
	terniLapilli _ TerniLapilli starting: #X.
	terniLapilli putXAt: 1 @ 2.
	
	self assert: [terniLapilli hasOPieceAt: 1@1]! !
!TerniLapilliTests methodsFor: 'as yet unclassified' stamp: 'fr 10/30/2020 20:57:45' prior: 50868556!
test07

	| terniLapilli |
	terniLapilli _ TerniLapilli starting: #X.
	terniLapilli putXAt: 1 @ 2.
	
	self assert: [(terniLapilli hasOPieceAt: 1@1) not]! !
!TerniLapilliTests methodsFor: 'as yet unclassified' stamp: 'fr 10/30/2020 20:59:56' prior: 50868564!
test07

	| terniLapilli |
	terniLapilli _ TerniLapilli starting: #X.
	terniLapilli putXAt: 1 @ 2.
	
	self assert: [(terniLapilli hasXPieceAt: 1@1) not]! !

!testRun: #TerniLapilliTests #test07 stamp: 'fr 10/30/2020 21:02:42'!
FAILURE!
!TerniLapilli methodsFor: 'state' stamp: 'fr 10/30/2020 21:03:09' prior: 50868346!
hasXPieceAt: aPosition

	^xposition = aPosition
	! !

!testRun: #TerniLapilliTests #test07 stamp: 'fr 10/30/2020 21:03:30'!
FAILURE!
!TerniLapilli methodsFor: 'actions' stamp: 'fr 10/30/2020 21:03:51' prior: 50868157!
putXAt: aPosition 
	
	(playerTurn = #X) ifFalse: [self error: self class playerOTurnErrorDescription].
	xposition _ aPosition .
	playerTurn _ #O! !
!TerniLapilli methodsFor: 'actions' stamp: 'fr 10/30/2020 21:03:52' prior: 50868590!
putXAt: aPosition 
	
	(playerTurn = #X) ifFalse: [self error: self class playerOTurnErrorDescription].
	xposition _ aPosition.
	playerTurn _ #O! !

!testRun: #TerniLapilliTests #test07 stamp: 'fr 10/30/2020 21:03:55'!
PASSED!

!testRun: #TerniLapilliTests #test01 stamp: 'fr 10/30/2020 21:03:55'!
PASSED!

!testRun: #TerniLapilliTests #test02 stamp: 'fr 10/30/2020 21:03:55'!
PASSED!

!testRun: #TerniLapilliTests #test03 stamp: 'fr 10/30/2020 21:03:55'!
PASSED!

!testRun: #TerniLapilliTests #test04 stamp: 'fr 10/30/2020 21:03:55'!
PASSED!

!testRun: #TerniLapilliTests #test05 stamp: 'fr 10/30/2020 21:03:55'!
PASSED!

!testRun: #TerniLapilliTests #test06 stamp: 'fr 10/30/2020 21:03:55'!
PASSED!

!testRun: #TerniLapilliTests #test07 stamp: 'fr 10/30/2020 21:03:55'!
PASSED!
!TerniLapilliTests methodsFor: 'as yet unclassified' stamp: 'fr 10/30/2020 21:04:00'!
test08

	| terniLapilli |
	terniLapilli _ TerniLapilli starting: #X.
	terniLapilli putXAt: 1 @ 2.
	
	self assert: [(terniLapilli hasXPieceAt: 1@1) not]! !
!TerniLapilliTests methodsFor: 'as yet unclassified' stamp: 'fr 10/30/2020 21:04:05' prior: 50868626!
test08

	| terniLapilli |
	terniLapilli _ TerniLapilli starting: #X.
	terniLapilli putXAt: 1 @ 2.
	terniLapilli putOAt: 1 @ 2.
	
	self assert: [(terniLapilli hasXPieceAt: 1@1) not]! !
!TerniLapilliTests methodsFor: 'as yet unclassified' stamp: 'fr 10/30/2020 21:04:09' prior: 50868635!
test08

	| terniLapilli |
	terniLapilli _ TerniLapilli starting: #X.
	terniLapilli putXAt: 1 @ 2.
	terniLapilli putOAt: 1 @ 2.
	
	self assert: [(terniLapilli hasOPieceAt: 1@1) not]! !
!TerniLapilliTests methodsFor: 'as yet unclassified' stamp: 'fr 10/30/2020 21:04:11' prior: 50868644!
test08

	| terniLapilli |
	terniLapilli _ TerniLapilli starting: #X.
	terniLapilli putXAt: 1 @ 1.
	terniLapilli putOAt: 1 @ 2.
	
	self assert: [(terniLapilli hasOPieceAt: 1@1) not]! !

!testRun: #TerniLapilliTests #test08 stamp: 'fr 10/30/2020 21:04:17'!
FAILURE!
!TerniLapilli methodsFor: 'actions' stamp: 'fr 10/30/2020 21:04:39' prior: 50868025!
putOAt: aPosition 
	
	(playerTurn = #O) ifFalse: [self error: self class playerXTurnErrorDescription].
	opositions _ aPosition .
	playerTurn _ #X! !
!TerniLapilli methodsFor: 'actions' stamp: 'fr 10/30/2020 21:04:40' prior: 50868664!
putOAt: aPosition 
	
	(playerTurn = #O) ifFalse: [self error: self class playerXTurnErrorDescription].
	opositions _ aPosition.
	playerTurn _ #X! !
!TerniLapilli methodsFor: 'state' stamp: 'fr 10/30/2020 21:05:03' prior: 50868418!
hasOPieceAt: aPosition 
	
	^opositions = aPosition! !

!testRun: #TerniLapilliTests #test08 stamp: 'fr 10/30/2020 21:05:04'!
PASSED!

!testRun: #TerniLapilliTests #test01 stamp: 'fr 10/30/2020 21:05:04'!
PASSED!

!testRun: #TerniLapilliTests #test02 stamp: 'fr 10/30/2020 21:05:04'!
PASSED!

!testRun: #TerniLapilliTests #test03 stamp: 'fr 10/30/2020 21:05:04'!
PASSED!

!testRun: #TerniLapilliTests #test04 stamp: 'fr 10/30/2020 21:05:04'!
PASSED!

!testRun: #TerniLapilliTests #test05 stamp: 'fr 10/30/2020 21:05:04'!
PASSED!

!testRun: #TerniLapilliTests #test06 stamp: 'fr 10/30/2020 21:05:04'!
PASSED!

!testRun: #TerniLapilliTests #test07 stamp: 'fr 10/30/2020 21:05:04'!
PASSED!

!testRun: #TerniLapilliTests #test08 stamp: 'fr 10/30/2020 21:05:04'!
PASSED!
!TerniLapilliTests methodsFor: 'as yet unclassified' stamp: 'fr 10/30/2020 21:05:16'!
test09

	| terniLapilli |
	terniLapilli _ TerniLapilli starting: #X.
	terniLapilli putXAt: 1 @ 1.
	
	self assert: [terniLapilli hasXPieceAt: 1@1]! !
!TerniLapilliTests methodsFor: 'as yet unclassified' stamp: 'fr 10/30/2020 21:06:01' prior: 50868707!
test09

	| terniLapilli |
	terniLapilli _ TerniLapilli starting: #X.
	terniLapilli putXAt: 1 @ 1.
	terniLapilli putOAt: 1 @ 2.
	terniLapilli putXAt: 1 @ 3.
	
	self assert: [(terniLapilli hasXPieceAt: 1@1) and: [terniLapilli hasXPieceAt: 1@3]]! !

!testRun: #TerniLapilliTests #test09 stamp: 'fr 10/30/2020 21:06:02'!
FAILURE!
!TerniLapilli methodsFor: 'actions' stamp: 'fr 10/30/2020 21:06:27' prior: 50868598!
putXAt: aPosition 
	
	(playerTurn = #X) ifFalse: [self error: self class playerOTurnErrorDescription].
	xposition add: aPosition.
	playerTurn _ #O! !

!classDefinition: #TerniLapilli category: 'TerniLapilli - Exercise' stamp: 'fr 10/30/2020 21:06:41'!
Object subclass: #TerniLapilli
	instanceVariableNames: 'Xpositions opositions playerTurn playerId'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TerniLapilli - Exercise'!
!TerniLapilli methodsFor: 'as yet unclassified' stamp: 'fr 10/30/2020 21:06:41' prior: 50868728!
putXAt: aPosition 
	
	(playerTurn = #X) ifFalse: [self error: self class playerOTurnErrorDescription].
	Xpositions add: aPosition.
	playerTurn _ #O! !
!TerniLapilli methodsFor: 'as yet unclassified' stamp: 'fr 10/30/2020 21:06:41' prior: 50868583!
hasXPieceAt: aPosition

	^Xpositions = aPosition
	! !

!testRun: #TerniLapilliTests #test09 stamp: 'fr 10/30/2020 21:06:53'!
ERROR!
!TerniLapilli methodsFor: 'initialization' stamp: 'fr 10/30/2020 21:07:16' prior: 50868260!
initializeStarting: aPlayerId 
	
	playerTurn _ aPlayerId.
	Xpositions _ Set new! !

!testRun: #TerniLapilliTests #test09 stamp: 'fr 10/30/2020 21:07:17'!
FAILURE!
!TerniLapilli methodsFor: 'state' stamp: 'fr 10/30/2020 21:07:39' prior: 50868753!
hasXPieceAt: aPosition

	^Xpositions includes: aPosition
	! !

!testRun: #TerniLapilliTests #test09 stamp: 'fr 10/30/2020 21:07:40'!
PASSED!

!testRun: #TerniLapilliTests #test01 stamp: 'fr 10/30/2020 21:07:40'!
PASSED!

!testRun: #TerniLapilliTests #test02 stamp: 'fr 10/30/2020 21:07:40'!
PASSED!

!testRun: #TerniLapilliTests #test03 stamp: 'fr 10/30/2020 21:07:40'!
PASSED!

!testRun: #TerniLapilliTests #test04 stamp: 'fr 10/30/2020 21:07:40'!
PASSED!

!testRun: #TerniLapilliTests #test05 stamp: 'fr 10/30/2020 21:07:40'!
PASSED!

!testRun: #TerniLapilliTests #test06 stamp: 'fr 10/30/2020 21:07:40'!
PASSED!

!testRun: #TerniLapilliTests #test07 stamp: 'fr 10/30/2020 21:07:40'!
PASSED!

!testRun: #TerniLapilliTests #test08 stamp: 'fr 10/30/2020 21:07:40'!
PASSED!

!testRun: #TerniLapilliTests #test09 stamp: 'fr 10/30/2020 21:07:40'!
PASSED!
!TerniLapilliTests methodsFor: 'as yet unclassified' stamp: 'fr 10/30/2020 21:07:46'!
test10

	| terniLapilli |
	terniLapilli _ TerniLapilli starting: #X.
	terniLapilli putXAt: 1 @ 1.
	terniLapilli putOAt: 1 @ 2.
	terniLapilli putXAt: 1 @ 3.
	
	self assert: [(terniLapilli hasXPieceAt: 1@1) and: [terniLapilli hasXPieceAt: 1@3]]! !
!TerniLapilliTests methodsFor: 'as yet unclassified' stamp: 'fr 10/30/2020 21:07:55' prior: 50868798!
test10

	| terniLapilli |
	terniLapilli _ TerniLapilli starting: #X.
	terniLapilli putXAt: 1 @ 1.
	terniLapilli putOAt: 1 @ 2.
	terniLapilli putXAt: 1 @ 3.
	terniLapilli putOAt: 2 @ 1.
	
	self assert: [(terniLapilli hasXPieceAt: 1@1) and: [terniLapilli hasXPieceAt: 1@3]]! !
!TerniLapilliTests methodsFor: 'as yet unclassified' stamp: 'fr 10/30/2020 21:08:11' prior: 50868809!
test10

	| terniLapilli |
	terniLapilli _ TerniLapilli starting: #X.
	terniLapilli putXAt: 1 @ 1.
	terniLapilli putOAt: 1 @ 2.
	terniLapilli putXAt: 1 @ 3.
	terniLapilli putOAt: 2 @ 1.
	
	self assert: [(terniLapilli hasOPieceAt: 1@2) and: [terniLapilli hasOPieceAt: 2@1]]! !

!testRun: #TerniLapilliTests #test10 stamp: 'fr 10/30/2020 21:08:13'!
FAILURE!
!TerniLapilli methodsFor: 'actions' stamp: 'fr 10/30/2020 21:08:30' prior: 50868672!
putOAt: aPosition 
	
	(playerTurn = #O) ifFalse: [self error: self class playerXTurnErrorDescription].
	opositions add: aPosition .
	playerTurn _ #X! !
!TerniLapilli methodsFor: 'actions' stamp: 'fr 10/30/2020 21:08:31' prior: 50868835!
putOAt: aPosition 
	
	(playerTurn = #O) ifFalse: [self error: self class playerXTurnErrorDescription].
	opositions add: aPosition.
	playerTurn _ #X! !

!testRun: #TerniLapilliTests #test10 stamp: 'fr 10/30/2020 21:08:33'!
ERROR!
!TerniLapilli methodsFor: 'actions' stamp: 'fr 10/30/2020 21:09:08' prior: 50868843!
putOAt: aPosition 
	
	(playerTurn = #O) ifFalse: [self error: self class playerXTurnErrorDescription].
	opositions add: aPosition.
	playerTurn _ #X! !

!classDefinition: #TerniLapilli category: 'TerniLapilli - Exercise' stamp: 'fr 10/30/2020 21:09:15'!
Object subclass: #TerniLapilli
	instanceVariableNames: 'Xpositions Opositions playerTurn playerId'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TerniLapilli - Exercise'!
!TerniLapilli methodsFor: 'as yet unclassified' stamp: 'fr 10/30/2020 21:09:15' prior: 50868680!
hasOPieceAt: aPosition 
	
	^Opositions = aPosition! !
!TerniLapilli methodsFor: 'as yet unclassified' stamp: 'fr 10/30/2020 21:09:15' prior: 50868853!
putOAt: aPosition 
	
	(playerTurn = #O) ifFalse: [self error: self class playerXTurnErrorDescription].
	Opositions add: aPosition.
	playerTurn _ #X! !

!testRun: #TerniLapilliTests #test10 stamp: 'fr 10/30/2020 21:09:17'!
ERROR!
!TerniLapilli methodsFor: 'initialization' stamp: 'fr 10/30/2020 21:09:31' prior: 50868760!
initializeStarting: aPlayerId 
	
	playerTurn _ aPlayerId.
	Xpositions _ Set new.	
	Opositions _ Set new.! !

!testRun: #TerniLapilliTests #test10 stamp: 'fr 10/30/2020 21:09:32'!
FAILURE!
!TerniLapilli methodsFor: 'state' stamp: 'fr 10/30/2020 21:09:45' prior: 50868870!
hasOPieceAt: aPosition 
	
	^Opositions includes: aPosition! !

!testRun: #TerniLapilliTests #test10 stamp: 'fr 10/30/2020 21:09:46'!
PASSED!

!testRun: #TerniLapilliTests #test01 stamp: 'fr 10/30/2020 21:09:46'!
PASSED!

!testRun: #TerniLapilliTests #test02 stamp: 'fr 10/30/2020 21:09:46'!
PASSED!

!testRun: #TerniLapilliTests #test03 stamp: 'fr 10/30/2020 21:09:46'!
PASSED!

!testRun: #TerniLapilliTests #test04 stamp: 'fr 10/30/2020 21:09:46'!
PASSED!

!testRun: #TerniLapilliTests #test05 stamp: 'fr 10/30/2020 21:09:46'!
PASSED!

!testRun: #TerniLapilliTests #test06 stamp: 'fr 10/30/2020 21:09:46'!
PASSED!

!testRun: #TerniLapilliTests #test07 stamp: 'fr 10/30/2020 21:09:46'!
PASSED!

!testRun: #TerniLapilliTests #test08 stamp: 'fr 10/30/2020 21:09:46'!
PASSED!

!testRun: #TerniLapilliTests #test09 stamp: 'fr 10/30/2020 21:09:46'!
PASSED!

!testRun: #TerniLapilliTests #test10 stamp: 'fr 10/30/2020 21:09:46'!
PASSED!

----SNAPSHOT----(30 October 2020 21:09:53) CuisUniversity-4384.image priorSource: 17172628!
!TerniLapilliTests methodsFor: 'as yet unclassified' stamp: 'fr 10/30/2020 21:10:10'!
test11

	| terniLapilli |
	terniLapilli _ TerniLapilli starting: #X.
	terniLapilli putXAt: 1 @ 1.
	terniLapilli putOAt: 1 @ 2.
	terniLapilli putXAt: 1 @ 3.
	terniLapilli putOAt: 2 @ 1.
	
	self assert: [(terniLapilli hasOPieceAt: 1@2) and: [terniLapilli hasOPieceAt: 2@1]]! !
!TerniLapilliTests methodsFor: 'as yet unclassified' stamp: 'fr 10/30/2020 21:10:12' prior: 50868930!
test11

	| terniLapilli |
	terniLapilli _ TerniLapilli starting: #X.
	terniLapilli putXAt: 1 @ 1.
	terniLapilli putOAt: 1 @ 1.
	
	self assert: [(terniLapilli hasOPieceAt: 1@2) and: [terniLapilli hasOPieceAt: 2@1]]! !
!TerniLapilliTests methodsFor: 'as yet unclassified' stamp: 'fr 10/30/2020 21:10:15' prior: 50868942!
test11

	| terniLapilli |
	terniLapilli _ TerniLapilli starting: #X.
	terniLapilli putXAt: 1 @ 1.
	terniLapilli putOAt: 1 @ 1.
	

	! !
!TerniLapilliTests methodsFor: 'as yet unclassified' stamp: 'fr 10/30/2020 21:11:14' prior: 50868952!
test11

	| terniLapilli |
	terniLapilli _ TerniLapilli starting: #X.

	

	self should: [			terniLapilli putXAt: 1 @ 1.
				terniLapilli putOAt: 1 @ 1.]
		raise: Error
		withMessageText: TerniLapilli positionAlreadyHoldsAPieceErrorDescription! !
!TerniLapilliTests methodsFor: 'as yet unclassified' stamp: 'fr 10/30/2020 21:11:19' prior: 50868960!
test11

	| terniLapilli |
	terniLapilli _ TerniLapilli starting: #X.	

	self should: [			terniLapilli putXAt: 1 @ 1.
				terniLapilli putOAt: 1 @ 1.]
		raise: Error
		withMessageText: TerniLapilli positionAlreadyHoldsAPieceErrorDescription! !

!testRun: #TerniLapilliTests #test11 stamp: 'fr 10/30/2020 21:11:20'!
ERROR!
!TerniLapilli class methodsFor: 'error message descriptions' stamp: 'fr 10/30/2020 21:11:30'!
positionAlreadyHoldsAPieceErrorDescription
	self shouldBeImplemented.! !
!TerniLapilli class methodsFor: 'error message descriptions' stamp: 'fr 10/30/2020 21:11:43' prior: 50868984!
positionAlreadyHoldsAPieceErrorDescription
	
	^'Position already holds a piece'! !

!testRun: #TerniLapilliTests #test11 stamp: 'fr 10/30/2020 21:11:44'!
FAILURE!
!TerniLapilli methodsFor: 'actions' stamp: 'fr 10/30/2020 21:12:33' prior: 50868745!
putXAt: aPosition 
	
	self failIfPositionIsNotFree: aPosition.
	(playerTurn = #X) ifFalse: [self error: self class playerOTurnErrorDescription].
	Xpositions add: aPosition.
	playerTurn _ #O! !

!testRun: #TerniLapilliTests #test11 stamp: 'fr 10/30/2020 21:12:37'!
FAILURE!

!testRun: #TerniLapilliTests #test11 stamp: 'fr 10/30/2020 21:12:41'!
FAILURE!
!TerniLapilli methodsFor: 'actions' stamp: 'fr 10/30/2020 21:13:15' prior: 50868998!
putXAt: aPosition 
	
	(playerTurn = #X) ifFalse: [self error: self class playerOTurnErrorDescription].
	Xpositions add: aPosition.
	playerTurn _ #O! !
!TerniLapilli methodsFor: 'actions' stamp: 'fr 10/30/2020 21:14:09' prior: 50868875!
putOAt: aPosition 
	
	((Xpositions includes: aPosition) or: [Opositions includes: aPosition]) IfTrue: [self error: self class positionAlreadyHoldsAPieceErrorDescription ].
	(playerTurn = #O) ifFalse: [self error: self class playerXTurnErrorDescription].
	Opositions add: aPosition.
	playerTurn _ #X! !
!TerniLapilli methodsFor: 'actions' stamp: 'fr 10/30/2020 21:14:12' prior: 50869020!
putOAt: aPosition 
	
	((Xpositions includes: aPosition) or: [Opositions includes: aPosition]) IfTrue: [self error: self class positionAlreadyHoldsAPieceErrorDescription].
	(playerTurn = #O) ifFalse: [self error: self class playerXTurnErrorDescription].
	Opositions add: aPosition.
	playerTurn _ #X! !
!TerniLapilli methodsFor: 'actions' stamp: 'fr 10/30/2020 21:14:33'!
itIsPlayerXTurn

	^ self error: self class playerXTurnErrorDescription! !
!TerniLapilli methodsFor: 'actions' stamp: 'fr 10/30/2020 21:14:33' prior: 50869033!
putOAt: aPosition 
	
	((Xpositions includes: aPosition) or: [Opositions includes: aPosition]) IfTrue: [self error: self class positionAlreadyHoldsAPieceErrorDescription].
	(playerTurn = #O) ifFalse: [self itIsPlayerXTurn].
	Opositions add: aPosition.
	playerTurn _ #X! !
!TerniLapilli methodsFor: 'actions' stamp: 'fr 10/30/2020 21:14:51'!
failIfWrongTUrn

	^ (playerTurn = #O) ifFalse: [self itIsPlayerXTurn]! !
!TerniLapilli methodsFor: 'actions' stamp: 'fr 10/30/2020 21:14:51' prior: 50869050!
putOAt: aPosition 
	
	((Xpositions includes: aPosition) or: [Opositions includes: aPosition]) IfTrue: [self error: self class positionAlreadyHoldsAPieceErrorDescription].
	self failIfWrongTUrn.
	Opositions add: aPosition.
	playerTurn _ #X! !
!TerniLapilli methodsFor: 'actions' stamp: 'fr 10/30/2020 21:15:21'!
positionAlreadyHoldsAPiece

	^ self error: self class positionAlreadyHoldsAPieceErrorDescription! !
!TerniLapilli methodsFor: 'actions' stamp: 'fr 10/30/2020 21:15:21' prior: 50869066!
putOAt: aPosition 
	
	((Xpositions includes: aPosition) or: [Opositions includes: aPosition]) IfTrue: [self positionAlreadyHoldsAPiece].
	self failIfWrongTUrn.
	Opositions add: aPosition.
	playerTurn _ #X! !
!TerniLapilli methodsFor: 'actions' stamp: 'fr 10/30/2020 21:15:49'!
failIfPositionAlreadyHoldsAPiece: aPosition

	^ ((Xpositions includes: aPosition) or: [Opositions includes: aPosition]) IfTrue: [self positionAlreadyHoldsAPiece]! !
!TerniLapilli methodsFor: 'actions' stamp: 'fr 10/30/2020 21:15:49' prior: 50869082!
putOAt: aPosition 
	
	self failIfPositionAlreadyHoldsAPiece: aPosition.
	self failIfWrongTUrn.
	Opositions add: aPosition.
	playerTurn _ #X! !

!testRun: #TerniLapilliTests #test11 stamp: 'fr 10/30/2020 21:15:55'!
FAILURE!

!testRun: #TerniLapilliTests #test11 stamp: 'fr 10/30/2020 21:16:10'!
FAILURE!

!testRun: #TerniLapilliTests #test11 stamp: 'fr 10/30/2020 21:16:22'!
FAILURE!

!testRun: #TerniLapilliTests #test11 stamp: 'fr 10/30/2020 21:16:34'!
FAILURE!

!testRun: #TerniLapilliTests #test11 stamp: 'fr 10/30/2020 21:16:49'!
FAILURE!

terniLapilli!
!TerniLapilli methodsFor: 'actions' stamp: 'fr 10/30/2020 21:18:51' prior: 50869091!
failIfPositionAlreadyHoldsAPiece: aPosition

	"^ ((Xpositions includes: aPosition) or: [Opositions includes: aPosition]) IfTrue: [self positionAlreadyHoldsAPiece]"
	((Xpositions includes: aPosition) or: [Opositions includes: aPosition ]) ifTrue: [self positionAlreadyHoldsAPiece]! !

!testRun: #TerniLapilliTests #test11 stamp: 'fr 10/30/2020 21:18:52'!
PASSED!

!testRun: #TerniLapilliTests #test01 stamp: 'fr 10/30/2020 21:18:52'!
PASSED!

!testRun: #TerniLapilliTests #test02 stamp: 'fr 10/30/2020 21:18:52'!
PASSED!

!testRun: #TerniLapilliTests #test03 stamp: 'fr 10/30/2020 21:18:52'!
PASSED!

!testRun: #TerniLapilliTests #test04 stamp: 'fr 10/30/2020 21:18:52'!
PASSED!

!testRun: #TerniLapilliTests #test05 stamp: 'fr 10/30/2020 21:18:52'!
PASSED!

!testRun: #TerniLapilliTests #test06 stamp: 'fr 10/30/2020 21:18:52'!
PASSED!

!testRun: #TerniLapilliTests #test07 stamp: 'fr 10/30/2020 21:18:52'!
PASSED!

!testRun: #TerniLapilliTests #test08 stamp: 'fr 10/30/2020 21:18:52'!
PASSED!

!testRun: #TerniLapilliTests #test09 stamp: 'fr 10/30/2020 21:18:52'!
PASSED!

!testRun: #TerniLapilliTests #test10 stamp: 'fr 10/30/2020 21:18:52'!
PASSED!

!testRun: #TerniLapilliTests #test11 stamp: 'fr 10/30/2020 21:18:52'!
PASSED!
!TerniLapilliTests methodsFor: 'as yet unclassified' stamp: 'fr 10/30/2020 21:19:36' prior: 50868971!
test11

	| terniLapilli |
	terniLapilli _ TerniLapilli starting: #X.	

	self should: [			terniLapilli putXAt: 1 @ 1.
				terniLapilli putOAt: 1 @ 2.
				terniLapilli putXAt: 1 @ 2. ]
		raise: Error
		withMessageText: TerniLapilli positionAlreadyHoldsAPieceErrorDescription! !

!testRun: #TerniLapilliTests #test11 stamp: 'fr 10/30/2020 21:19:37'!
FAILURE!
!TerniLapilli methodsFor: 'actions' stamp: 'fr 10/30/2020 21:20:34'!
failIfWrongTurn

	^ (playerTurn = #O) ifFalse: [self itIsPlayerXTurn]! !
!TerniLapilli methodsFor: 'as yet unclassified' stamp: 'fr 10/30/2020 21:20:34' prior: 50869099!
putOAt: aPosition 
	
	self failIfPositionAlreadyHoldsAPiece: aPosition.
	self failIfWrongTurn.
	Opositions add: aPosition.
	playerTurn _ #X! !

!methodRemoval: TerniLapilli #failIfWrongTUrn stamp: 'fr 10/30/2020 21:20:34'!
failIfWrongTUrn

	^ (playerTurn = #O) ifFalse: [self itIsPlayerXTurn]!

----SNAPSHOT----(30 October 2020 21:20:46) CuisUniversity-4384.image priorSource: 17192834!
!TerniLapilli methodsFor: 'actions' stamp: 'fr 10/30/2020 21:21:29'!
failIfWrongTurnForOMove

	^ (playerTurn = #O) ifFalse: [self itIsPlayerXTurn]! !
!TerniLapilli methodsFor: 'as yet unclassified' stamp: 'fr 10/30/2020 21:21:29' prior: 50869182!
putOAt: aPosition 
	
	self failIfPositionAlreadyHoldsAPiece: aPosition.
	self failIfWrongTurnForOMove.
	Opositions add: aPosition.
	playerTurn _ #X! !

!methodRemoval: TerniLapilli #failIfWrongTurn stamp: 'fr 10/30/2020 21:21:29'!
failIfWrongTurn

	^ (playerTurn = #O) ifFalse: [self itIsPlayerXTurn]!
!TerniLapilli methodsFor: 'actions' stamp: 'fr 10/30/2020 21:21:59'!
itIsPlayersOTurn

	^ self error: self class playerOTurnErrorDescription! !
!TerniLapilli methodsFor: 'actions' stamp: 'fr 10/30/2020 21:21:59' prior: 50869012!
putXAt: aPosition 
	
	(playerTurn = #X) ifFalse: [self itIsPlayersOTurn].
	Xpositions add: aPosition.
	playerTurn _ #O! !
!TerniLapilli methodsFor: 'actions' stamp: 'fr 10/30/2020 21:22:16'!
itIsPlayerXsTurn

	^ self error: self class playerXTurnErrorDescription! !
!TerniLapilli methodsFor: 'as yet unclassified' stamp: 'fr 10/30/2020 21:22:16' prior: 50869197!
failIfWrongTurnForOMove

	^ (playerTurn = #O) ifFalse: [self itIsPlayerXsTurn]! !

!methodRemoval: TerniLapilli #itIsPlayerXTurn stamp: 'fr 10/30/2020 21:22:17'!
itIsPlayerXTurn

	^ self error: self class playerXTurnErrorDescription!
!TerniLapilli methodsFor: 'actions' stamp: 'fr 10/30/2020 21:22:28'!
itIsPlayerOsTurn

	^ self error: self class playerOTurnErrorDescription! !
!TerniLapilli methodsFor: 'as yet unclassified' stamp: 'fr 10/30/2020 21:22:28' prior: 50869220!
putXAt: aPosition 
	
	(playerTurn = #X) ifFalse: [self itIsPlayerOsTurn].
	Xpositions add: aPosition.
	playerTurn _ #O! !

!methodRemoval: TerniLapilli #itIsPlayersOTurn stamp: 'fr 10/30/2020 21:22:28'!
itIsPlayersOTurn

	^ self error: self class playerOTurnErrorDescription!
!TerniLapilli methodsFor: 'actions' stamp: 'fr 10/30/2020 21:22:42' prior: 50869248!
putXAt: aPosition 
	
	(playerTurn = #X) ifFalse: [self itIsPlayerOsTurn].
	Xpositions add: aPosition.
	playerTurn _ #O! !
!TerniLapilli methodsFor: 'actions' stamp: 'fr 10/30/2020 21:23:16'!
failIfWrongTurnForXMove

	^ (playerTurn = #X) ifFalse: [self itIsPlayerOsTurn]! !
!TerniLapilli methodsFor: 'actions' stamp: 'fr 10/30/2020 21:23:16' prior: 50869260!
putXAt: aPosition 
	
	self failIfWrongTurnForXMove.
	Xpositions add: aPosition.
	playerTurn _ #O! !
!TerniLapilli methodsFor: 'actions' stamp: 'fr 10/30/2020 21:24:04' prior: 50869272!
putXAt: aPosition 
	
	self failIfPositionAlreadyHoldsAPiece: aPosition.
	self failIfWrongTurnForXMove.
	Xpositions add: aPosition.
	playerTurn _ #O! !

!testRun: #TerniLapilliTests #test11 stamp: 'fr 10/30/2020 21:24:06'!
PASSED!

!testRun: #TerniLapilliTests #test01 stamp: 'fr 10/30/2020 21:24:06'!
PASSED!

!testRun: #TerniLapilliTests #test02 stamp: 'fr 10/30/2020 21:24:06'!
PASSED!

!testRun: #TerniLapilliTests #test03 stamp: 'fr 10/30/2020 21:24:06'!
PASSED!

!testRun: #TerniLapilliTests #test04 stamp: 'fr 10/30/2020 21:24:06'!
PASSED!

!testRun: #TerniLapilliTests #test05 stamp: 'fr 10/30/2020 21:24:06'!
PASSED!

!testRun: #TerniLapilliTests #test06 stamp: 'fr 10/30/2020 21:24:06'!
PASSED!

!testRun: #TerniLapilliTests #test07 stamp: 'fr 10/30/2020 21:24:06'!
PASSED!

!testRun: #TerniLapilliTests #test08 stamp: 'fr 10/30/2020 21:24:06'!
PASSED!

!testRun: #TerniLapilliTests #test09 stamp: 'fr 10/30/2020 21:24:06'!
PASSED!

!testRun: #TerniLapilliTests #test10 stamp: 'fr 10/30/2020 21:24:06'!
PASSED!

!testRun: #TerniLapilliTests #test11 stamp: 'fr 10/30/2020 21:24:06'!
PASSED!
!TerniLapilliTests methodsFor: 'as yet unclassified' stamp: 'fr 10/30/2020 21:24:25'!
test12

	| terniLapilli |
	terniLapilli _ TerniLapilli starting: #X.	

	self should: [			terniLapilli putXAt: 1 @ 1.
				terniLapilli putOAt: 1 @ 2.
				terniLapilli putXAt: 1 @ 2. ]
		raise: Error
		withMessageText: TerniLapilli positionAlreadyHoldsAPieceErrorDescription! !
!TerniLapilliTests methodsFor: 'as yet unclassified' stamp: 'fr 10/30/2020 21:24:33' prior: 50869316!
test12

	| terniLapilli |
	terniLapilli _ TerniLapilli starting: #X.	

	self should: [			terniLapilli putXAt: 1 @ 1.
				terniLapilli putOAt: 1 @ 1. ]
		raise: Error
		withMessageText: TerniLapilli positionAlreadyHoldsAPieceErrorDescription! !

!testRun: #TerniLapilliTests #test12 stamp: 'fr 10/30/2020 21:24:34'!
PASSED!

!testRun: #TerniLapilliTests #test01 stamp: 'fr 10/30/2020 21:24:34'!
PASSED!

!testRun: #TerniLapilliTests #test02 stamp: 'fr 10/30/2020 21:24:34'!
PASSED!

!testRun: #TerniLapilliTests #test03 stamp: 'fr 10/30/2020 21:24:34'!
PASSED!

!testRun: #TerniLapilliTests #test04 stamp: 'fr 10/30/2020 21:24:34'!
PASSED!

!testRun: #TerniLapilliTests #test05 stamp: 'fr 10/30/2020 21:24:34'!
PASSED!

!testRun: #TerniLapilliTests #test06 stamp: 'fr 10/30/2020 21:24:34'!
PASSED!

!testRun: #TerniLapilliTests #test07 stamp: 'fr 10/30/2020 21:24:34'!
PASSED!

!testRun: #TerniLapilliTests #test08 stamp: 'fr 10/30/2020 21:24:34'!
PASSED!

!testRun: #TerniLapilliTests #test09 stamp: 'fr 10/30/2020 21:24:34'!
PASSED!

!testRun: #TerniLapilliTests #test10 stamp: 'fr 10/30/2020 21:24:34'!
PASSED!

!testRun: #TerniLapilliTests #test11 stamp: 'fr 10/30/2020 21:24:34'!
PASSED!

!testRun: #TerniLapilliTests #test12 stamp: 'fr 10/30/2020 21:24:34'!
PASSED!
!TerniLapilliTests methodsFor: 'as yet unclassified' stamp: 'fr 10/30/2020 21:25:02'!
test122

	| terniLapilli |
	terniLapilli _ TerniLapilli starting: #X.	

	self should: [			terniLapilli putXAt: 1 @ 1.
				terniLapilli putOAt: 1 @ 1. ]
		raise: Error
		withMessageText: TerniLapilli positionAlreadyHoldsAPieceErrorDescription! !
!TerniLapilliTests methodsFor: 'as yet unclassified' stamp: 'fr 10/30/2020 21:25:09'!
test115465

	| terniLapilli |
	terniLapilli _ TerniLapilli starting: #X.	

	self should: [			terniLapilli putXAt: 1 @ 1.
				terniLapilli putOAt: 1 @ 2.
				terniLapilli putXAt: 1 @ 2. ]
		raise: Error
		withMessageText: TerniLapilli positionAlreadyHoldsAPieceErrorDescription! !

!methodRemoval: TerniLapilliTests #test11 stamp: 'fr 10/30/2020 21:25:12'!
test11

	| terniLapilli |
	terniLapilli _ TerniLapilli starting: #X.	

	self should: [			terniLapilli putXAt: 1 @ 1.
				terniLapilli putOAt: 1 @ 2.
				terniLapilli putXAt: 1 @ 2. ]
		raise: Error
		withMessageText: TerniLapilli positionAlreadyHoldsAPieceErrorDescription!

!methodRemoval: TerniLapilliTests #test12 stamp: 'fr 10/30/2020 21:25:13'!
test12

	| terniLapilli |
	terniLapilli _ TerniLapilli starting: #X.	

	self should: [			terniLapilli putXAt: 1 @ 1.
				terniLapilli putOAt: 1 @ 1. ]
		raise: Error
		withMessageText: TerniLapilli positionAlreadyHoldsAPieceErrorDescription!
!TerniLapilliTests methodsFor: 'as yet unclassified' stamp: 'fr 10/30/2020 21:25:18'!
test12

	| terniLapilli |
	terniLapilli _ TerniLapilli starting: #X.	

	self should: [			terniLapilli putXAt: 1 @ 1.
				terniLapilli putOAt: 1 @ 2.
				terniLapilli putXAt: 1 @ 2. ]
		raise: Error
		withMessageText: TerniLapilli positionAlreadyHoldsAPieceErrorDescription! !
!TerniLapilliTests methodsFor: 'as yet unclassified' stamp: 'fr 10/30/2020 21:25:26'!
test11

	| terniLapilli |
	terniLapilli _ TerniLapilli starting: #X.	

	self should: [			terniLapilli putXAt: 1 @ 1.
				terniLapilli putOAt: 1 @ 1. ]
		raise: Error
		withMessageText: TerniLapilli positionAlreadyHoldsAPieceErrorDescription! !

!methodRemoval: TerniLapilliTests #test115465 stamp: 'fr 10/30/2020 21:25:27'!
test115465

	| terniLapilli |
	terniLapilli _ TerniLapilli starting: #X.	

	self should: [			terniLapilli putXAt: 1 @ 1.
				terniLapilli putOAt: 1 @ 2.
				terniLapilli putXAt: 1 @ 2. ]
		raise: Error
		withMessageText: TerniLapilli positionAlreadyHoldsAPieceErrorDescription!

!methodRemoval: TerniLapilliTests #test122 stamp: 'fr 10/30/2020 21:25:28'!
test122

	| terniLapilli |
	terniLapilli _ TerniLapilli starting: #X.	

	self should: [			terniLapilli putXAt: 1 @ 1.
				terniLapilli putOAt: 1 @ 1. ]
		raise: Error
		withMessageText: TerniLapilli positionAlreadyHoldsAPieceErrorDescription!

!testRun: #TerniLapilliTests #test12 stamp: 'fr 10/30/2020 21:25:38'!
PASSED!

!testRun: #TerniLapilliTests #test12 stamp: 'fr 10/30/2020 21:25:40'!
PASSED!

!testRun: #TerniLapilliTests #test01 stamp: 'fr 10/30/2020 21:25:40'!
PASSED!

!testRun: #TerniLapilliTests #test02 stamp: 'fr 10/30/2020 21:25:40'!
PASSED!

!testRun: #TerniLapilliTests #test03 stamp: 'fr 10/30/2020 21:25:40'!
PASSED!

!testRun: #TerniLapilliTests #test04 stamp: 'fr 10/30/2020 21:25:40'!
PASSED!

!testRun: #TerniLapilliTests #test05 stamp: 'fr 10/30/2020 21:25:40'!
PASSED!

!testRun: #TerniLapilliTests #test06 stamp: 'fr 10/30/2020 21:25:40'!
PASSED!

!testRun: #TerniLapilliTests #test07 stamp: 'fr 10/30/2020 21:25:40'!
PASSED!

!testRun: #TerniLapilliTests #test08 stamp: 'fr 10/30/2020 21:25:40'!
PASSED!

!testRun: #TerniLapilliTests #test09 stamp: 'fr 10/30/2020 21:25:40'!
PASSED!

!testRun: #TerniLapilliTests #test10 stamp: 'fr 10/30/2020 21:25:40'!
PASSED!

!testRun: #TerniLapilliTests #test11 stamp: 'fr 10/30/2020 21:25:40'!
PASSED!

!testRun: #TerniLapilliTests #test12 stamp: 'fr 10/30/2020 21:25:40'!
PASSED!
!TerniLapilliTests methodsFor: 'as yet unclassified' stamp: 'fr 10/30/2020 21:26:40'!
test13

	| terniLapilli |
	terniLapilli _ TerniLapilli starting: #X.	

	self should: [			terniLapilli putXAt: 1 @ 1.
				terniLapilli putOAt: 1 @ 2.
				terniLapilli putXAt: 1 @ 2. ]
		raise: Error
		withMessageText: TerniLapilli positionAlreadyHoldsAPieceErrorDescription! !
!TerniLapilliTests methodsFor: 'as yet unclassified' stamp: 'fr 10/30/2020 21:27:07' prior: 50869494!
test13

	| terniLapilli |
	terniLapilli _ TerniLapilli new.
	self
		should: [ terniLapilli putXAt: 1 @ 5 ]
		raise: Error
		withMessageText: TerniLapilli positionOutOfBounds.! !

----SNAPSHOT----(30 October 2020 21:27:13) CuisUniversity-4384.image priorSource: 17201381!

!testRun: #TerniLapilliTests #test13 stamp: 'fr 10/30/2020 21:27:23'!
ERROR!
!TerniLapilli class methodsFor: 'as yet unclassified' stamp: 'fr 10/30/2020 21:27:36'!
positionOutOfBounds
	self shouldBeImplemented.! !

!testRun: #TerniLapilliTests #test13 stamp: 'fr 10/30/2020 21:27:41'!
ERROR!
!TerniLapilliTests methodsFor: 'as yet unclassified' stamp: 'fr 10/30/2020 21:27:49' prior: 50869506!
test13

	| terniLapilli |
	terniLapilli _ TerniLapilli new.
	self
		should: [ terniLapilli putXAt: 1 @ 5 ]
		raise: Error
		withMessageText: TerniLapilli positionOutOfBoundsErrorDescription.! !

!testRun: #TerniLapilliTests #test13 stamp: 'fr 10/30/2020 21:27:53'!
ERROR!
!TerniLapilli class methodsFor: 'error message descriptions' stamp: 'fr 10/30/2020 21:28:03'!
positionOutOfBoundsErrorDescription
	self shouldBeImplemented.! !
!TerniLapilli class methodsFor: 'error message descriptions' stamp: 'fr 10/30/2020 21:28:11' prior: 50869540!
positionOutOfBoundsErrorDescription
	
	^'Position out of bounds'! !

!testRun: #TerniLapilliTests #test13 stamp: 'fr 10/30/2020 21:28:13'!
FAILURE!
!TerniLapilli methodsFor: 'actions' stamp: 'fr 10/30/2020 21:29:58' prior: 50869278!
putXAt: aPosition 
	
	((aPosition x between: 1 and: 3) and: [aPosition y between: 1 and: 3]) ifFalse: [self error: self class positionOutOfBoundsErrorDescription ].
	self failIfPositionAlreadyHoldsAPiece: aPosition.
	self failIfWrongTurnForXMove.
	Xpositions add: aPosition.
	playerTurn _ #O! !

!testRun: #TerniLapilliTests #test13 stamp: 'fr 10/30/2020 21:29:59'!
PASSED!

!testRun: #TerniLapilliTests #test01 stamp: 'fr 10/30/2020 21:29:59'!
PASSED!

!testRun: #TerniLapilliTests #test02 stamp: 'fr 10/30/2020 21:29:59'!
PASSED!

!testRun: #TerniLapilliTests #test03 stamp: 'fr 10/30/2020 21:29:59'!
PASSED!

!testRun: #TerniLapilliTests #test04 stamp: 'fr 10/30/2020 21:29:59'!
PASSED!

!testRun: #TerniLapilliTests #test05 stamp: 'fr 10/30/2020 21:29:59'!
PASSED!

!testRun: #TerniLapilliTests #test06 stamp: 'fr 10/30/2020 21:29:59'!
PASSED!

!testRun: #TerniLapilliTests #test07 stamp: 'fr 10/30/2020 21:29:59'!
PASSED!

!testRun: #TerniLapilliTests #test08 stamp: 'fr 10/30/2020 21:29:59'!
PASSED!

!testRun: #TerniLapilliTests #test09 stamp: 'fr 10/30/2020 21:29:59'!
PASSED!

!testRun: #TerniLapilliTests #test10 stamp: 'fr 10/30/2020 21:29:59'!
PASSED!

!testRun: #TerniLapilliTests #test11 stamp: 'fr 10/30/2020 21:29:59'!
PASSED!

!testRun: #TerniLapilliTests #test12 stamp: 'fr 10/30/2020 21:29:59'!
PASSED!

!testRun: #TerniLapilliTests #test13 stamp: 'fr 10/30/2020 21:29:59'!
PASSED!
!TerniLapilliTests methodsFor: 'as yet unclassified' stamp: 'fr 10/30/2020 21:30:54' prior: 50869528!
test13

	| terniLapilli |
	terniLapilli _ TerniLapilli new.
	self
		should: [ 		terniLapilli putXAt: 1 @ 1.
				terniLapilli putOAt: 1 @ 5. ]
		raise: Error
		withMessageText: TerniLapilli positionOutOfBoundsErrorDescription.! !

!testRun: #TerniLapilliTests #test13 stamp: 'fr 10/30/2020 21:30:55'!
FAILURE!
!TerniLapilliTests methodsFor: 'as yet unclassified' stamp: 'fr 10/30/2020 21:31:05' prior: 50869601!
test13

	| terniLapilli |
	terniLapilli _ TerniLapilli new.
	self
		should: [ terniLapilli putXAt: 1 @ 5 ]
		raise: Error
		withMessageText: TerniLapilli positionOutOfBoundsErrorDescription.! !
!TerniLapilliTests methodsFor: 'as yet unclassified' stamp: 'fr 10/30/2020 21:31:11'!
test14

	| terniLapilli |
	terniLapilli _ TerniLapilli new.
	self
		should: [ 		terniLapilli putXAt: 1 @ 1.
				terniLapilli putOAt: 1 @ 5. ]
		raise: Error
		withMessageText: TerniLapilli positionOutOfBoundsErrorDescription.! !

!testRun: #TerniLapilliTests #test14 stamp: 'fr 10/30/2020 21:31:14'!
FAILURE!

!testRun: #TerniLapilliTests #test14 stamp: 'fr 10/30/2020 21:31:28'!
FAILURE!

!testRun: #TerniLapilliTests #test14 stamp: 'fr 10/30/2020 21:31:40'!
FAILURE!

!testRun: #TerniLapilliTests #test14 stamp: 'fr 10/30/2020 21:32:02'!
FAILURE!

!testRun: #TerniLapilliTests #test14 stamp: 'fr 10/30/2020 21:32:10'!
FAILURE!

!testRun: #TerniLapilliTests #test14 stamp: 'fr 10/30/2020 21:32:25'!
FAILURE!

!testRun: #TerniLapilliTests #test14 stamp: 'fr 10/30/2020 21:32:35'!
FAILURE!

!testRun: #TerniLapilliTests #test14 stamp: 'fr 10/30/2020 21:33:12'!
FAILURE!
!TerniLapilliTests methodsFor: 'as yet unclassified' stamp: 'fr 10/30/2020 21:33:35' prior: 50869623!
test14
! !

!testRun: #TerniLapilliTests #test14 stamp: 'fr 10/30/2020 21:33:36'!
PASSED!

!testRun: #TerniLapilliTests #test01 stamp: 'fr 10/30/2020 21:33:36'!
PASSED!

!testRun: #TerniLapilliTests #test02 stamp: 'fr 10/30/2020 21:33:36'!
PASSED!

!testRun: #TerniLapilliTests #test03 stamp: 'fr 10/30/2020 21:33:36'!
PASSED!

!testRun: #TerniLapilliTests #test04 stamp: 'fr 10/30/2020 21:33:36'!
PASSED!

!testRun: #TerniLapilliTests #test05 stamp: 'fr 10/30/2020 21:33:36'!
PASSED!

!testRun: #TerniLapilliTests #test06 stamp: 'fr 10/30/2020 21:33:36'!
PASSED!

!testRun: #TerniLapilliTests #test07 stamp: 'fr 10/30/2020 21:33:36'!
PASSED!

!testRun: #TerniLapilliTests #test08 stamp: 'fr 10/30/2020 21:33:36'!
PASSED!

!testRun: #TerniLapilliTests #test09 stamp: 'fr 10/30/2020 21:33:36'!
PASSED!

!testRun: #TerniLapilliTests #test10 stamp: 'fr 10/30/2020 21:33:36'!
PASSED!

!testRun: #TerniLapilliTests #test11 stamp: 'fr 10/30/2020 21:33:36'!
PASSED!

!testRun: #TerniLapilliTests #test12 stamp: 'fr 10/30/2020 21:33:36'!
PASSED!

!testRun: #TerniLapilliTests #test13 stamp: 'fr 10/30/2020 21:33:36'!
PASSED!

!testRun: #TerniLapilliTests #test14 stamp: 'fr 10/30/2020 21:33:36'!
PASSED!
!TerniLapilliTests methodsFor: 'as yet unclassified' stamp: 'fr 10/30/2020 21:33:38' prior: 50869654!
test14

	| terniLapilli |
	terniLapilli _ TerniLapilli new.
	self
		should: [ 		terniLapilli putXAt: 1 @ 1.
				terniLapilli putOAt: 1 @ 5. ]
		raise: Error
		withMessageText: TerniLapilli positionOutOfBoundsErrorDescription.! !
!TerniLapilliTests methodsFor: 'as yet unclassified' stamp: 'fr 10/30/2020 21:33:53' prior: 50869614!
test13

	| terniLapilli |
	terniLapilli _ TerniLapilli starting: #X.
	self
		should: [ terniLapilli putXAt: 1 @ 5 ]
		raise: Error
		withMessageText: TerniLapilli positionOutOfBoundsErrorDescription.! !
!TerniLapilliTests methodsFor: 'as yet unclassified' stamp: 'fr 10/30/2020 21:34:00' prior: 50869695!
test14

	| terniLapilli |
	terniLapilli _ TerniLapilli starting: #X.
	self
		should: [ 		terniLapilli putXAt: 1 @ 1.
				terniLapilli putOAt: 1 @ 5. ]
		raise: Error
		withMessageText: TerniLapilli positionOutOfBoundsErrorDescription.! !

!testRun: #TerniLapilliTests #test14 stamp: 'fr 10/30/2020 21:34:07'!
FAILURE!
!TerniLapilli methodsFor: 'actions' stamp: 'fr 10/30/2020 21:34:31' prior: 50869203!
putOAt: aPosition 

	((aPosition x between: 1 and: 3) and: [aPosition y between: 1 and: 3]) ifFalse: [self error: self class positionOutOfBoundsErrorDescription ].
	self failIfPositionAlreadyHoldsAPiece: aPosition.
	self failIfWrongTurnForOMove.
	Opositions add: aPosition.
	playerTurn _ #X! !

!testRun: #TerniLapilliTests #test14 stamp: 'fr 10/30/2020 21:34:32'!
PASSED!

!testRun: #TerniLapilliTests #test01 stamp: 'fr 10/30/2020 21:34:32'!
PASSED!

!testRun: #TerniLapilliTests #test02 stamp: 'fr 10/30/2020 21:34:32'!
PASSED!

!testRun: #TerniLapilliTests #test03 stamp: 'fr 10/30/2020 21:34:32'!
PASSED!

!testRun: #TerniLapilliTests #test04 stamp: 'fr 10/30/2020 21:34:32'!
PASSED!

!testRun: #TerniLapilliTests #test05 stamp: 'fr 10/30/2020 21:34:32'!
PASSED!

!testRun: #TerniLapilliTests #test06 stamp: 'fr 10/30/2020 21:34:32'!
PASSED!

!testRun: #TerniLapilliTests #test07 stamp: 'fr 10/30/2020 21:34:32'!
PASSED!

!testRun: #TerniLapilliTests #test08 stamp: 'fr 10/30/2020 21:34:32'!
PASSED!

!testRun: #TerniLapilliTests #test09 stamp: 'fr 10/30/2020 21:34:32'!
PASSED!

!testRun: #TerniLapilliTests #test10 stamp: 'fr 10/30/2020 21:34:32'!
PASSED!

!testRun: #TerniLapilliTests #test11 stamp: 'fr 10/30/2020 21:34:32'!
PASSED!

!testRun: #TerniLapilliTests #test12 stamp: 'fr 10/30/2020 21:34:32'!
PASSED!

!testRun: #TerniLapilliTests #test13 stamp: 'fr 10/30/2020 21:34:32'!
PASSED!

!testRun: #TerniLapilliTests #test14 stamp: 'fr 10/30/2020 21:34:32'!
PASSED!
!TerniLapilliTests methodsFor: 'as yet unclassified' stamp: 'fr 10/30/2020 21:34:46'!
test15

	| terniLapilli |
	terniLapilli _ TerniLapilli starting: #X.
	self
		should: [ 		terniLapilli putXAt: 1 @ 1.
				terniLapilli putOAt: 1 @ 5. ]
		raise: Error
		withMessageText: TerniLapilli positionOutOfBoundsErrorDescription.! !
!TerniLapilliTests methodsFor: 'as yet unclassified' stamp: 'fr 10/30/2020 21:35:51' prior: 50869778!
test15

	| terniLapilli |
	terniLapilli _ TerniLapilli starting: #X.
	self
		should: [ 		terniLapilli putXAt: 1 @ 1.
				terniLapilli putOAt: 1 @ 2.
				terniLapilli putXAt: 1 @ 3.
				terniLapilli putOAt: 2 @ 1.
				terniLapilli putXAt: 2 @ 2.
				terniLapilli putOAt: 2 @ 3.
				terniLapilli putXAt: 3 @ 2.
				 ]
		raise: Error
		withMessageText: TerniLapilli positionOutOfBoundsErrorDescription.! !
!TerniLapilliTests methodsFor: 'as yet unclassified' stamp: 'fr 10/30/2020 21:36:08' prior: 50869789!
test15

	| terniLapilli |
	terniLapilli _ TerniLapilli starting: #X.
	self
		should: [ 		terniLapilli putXAt: 1 @ 1.
				terniLapilli putOAt: 1 @ 2.
				terniLapilli putXAt: 1 @ 3.
				terniLapilli putOAt: 2 @ 1.
				terniLapilli putXAt: 2 @ 2.
				terniLapilli putOAt: 2 @ 3.
				terniLapilli putXAt: 3 @ 2.
				 ]
		raise: Error
		withMessageText: TerniLapilli piecesLimitExceededErrorDescription.! !

!testRun: #TerniLapilliTests #test15 stamp: 'fr 10/30/2020 21:36:11'!
ERROR!

!testRun: #TerniLapilliTests #test15 stamp: 'fr 10/30/2020 21:36:24'!
ERROR!
!TerniLapilli class methodsFor: 'error message descriptions' stamp: 'fr 10/30/2020 21:36:37'!
piecesLimitExceededErrorDescription
	self shouldBeImplemented.! !
!TerniLapilli class methodsFor: 'error message descriptions' stamp: 'fr 10/30/2020 21:36:48' prior: 50869826!
piecesLimitExceededErrorDescription
	
	^'Can not add more than three pieces'! !

!testRun: #TerniLapilliTests #test15 stamp: 'fr 10/30/2020 21:36:49'!
FAILURE!

!testRun: #TerniLapilliTests #test15 stamp: 'fr 10/30/2020 21:37:01'!
FAILURE!

!testRun: #TerniLapilliTests #test15 stamp: 'fr 10/30/2020 21:37:04'!
FAILURE!
!TerniLapilli methodsFor: 'actions' stamp: 'fr 10/30/2020 21:38:16' prior: 50869554!
putXAt: aPosition 
	
	(Xpositions size = 3) ifTrue: [self error: self piecesLimitExceededErrorDescription].
	((aPosition x between: 1 and: 3) and: [aPosition y between: 1 and: 3]) ifFalse: [self error: self class positionOutOfBoundsErrorDescription ].
	self failIfPositionAlreadyHoldsAPiece: aPosition.
	self failIfWrongTurnForXMove.
	Xpositions add: aPosition.
	playerTurn _ #O! !

!testRun: #TerniLapilliTests #test15 stamp: 'fr 10/30/2020 21:38:17'!
FAILURE!

!testRun: #TerniLapilliTests #test15 stamp: 'fr 10/30/2020 21:38:26'!
FAILURE!
!TerniLapilli methodsFor: 'actions' stamp: 'fr 10/30/2020 21:38:48' prior: 50869845!
putXAt: aPosition 
	
	(Xpositions size = 3) ifTrue: [self error: self class piecesLimitExceededErrorDescription].
	((aPosition x between: 1 and: 3) and: [aPosition y between: 1 and: 3]) ifFalse: [self error: self class positionOutOfBoundsErrorDescription ].
	self failIfPositionAlreadyHoldsAPiece: aPosition.
	self failIfWrongTurnForXMove.
	Xpositions add: aPosition.
	playerTurn _ #O! !

!testRun: #TerniLapilliTests #test15 stamp: 'fr 10/30/2020 21:38:49'!
PASSED!

!testRun: #TerniLapilliTests #test01 stamp: 'fr 10/30/2020 21:38:49'!
PASSED!

!testRun: #TerniLapilliTests #test02 stamp: 'fr 10/30/2020 21:38:49'!
PASSED!

!testRun: #TerniLapilliTests #test03 stamp: 'fr 10/30/2020 21:38:49'!
PASSED!

!testRun: #TerniLapilliTests #test04 stamp: 'fr 10/30/2020 21:38:49'!
PASSED!

!testRun: #TerniLapilliTests #test05 stamp: 'fr 10/30/2020 21:38:49'!
PASSED!

!testRun: #TerniLapilliTests #test06 stamp: 'fr 10/30/2020 21:38:49'!
PASSED!

!testRun: #TerniLapilliTests #test07 stamp: 'fr 10/30/2020 21:38:49'!
PASSED!

!testRun: #TerniLapilliTests #test08 stamp: 'fr 10/30/2020 21:38:49'!
PASSED!

!testRun: #TerniLapilliTests #test09 stamp: 'fr 10/30/2020 21:38:49'!
PASSED!

!testRun: #TerniLapilliTests #test10 stamp: 'fr 10/30/2020 21:38:49'!
PASSED!

!testRun: #TerniLapilliTests #test11 stamp: 'fr 10/30/2020 21:38:49'!
PASSED!

!testRun: #TerniLapilliTests #test12 stamp: 'fr 10/30/2020 21:38:49'!
PASSED!

!testRun: #TerniLapilliTests #test13 stamp: 'fr 10/30/2020 21:38:49'!
PASSED!

!testRun: #TerniLapilliTests #test14 stamp: 'fr 10/30/2020 21:38:49'!
PASSED!

!testRun: #TerniLapilliTests #test15 stamp: 'fr 10/30/2020 21:38:49'!
PASSED!
!TerniLapilliTests methodsFor: 'as yet unclassified' stamp: 'fr 10/30/2020 21:40:33' prior: 50869805!
test15

	| terniLapilli |
	terniLapilli _ TerniLapilli starting: #X.
	self
		should: [ 		terniLapilli putXAt: 1 @ 1.
				terniLapilli putOAt: 1 @ 2.
				terniLapilli putXAt: 1 @ 3.
				terniLapilli putOAt: 2 @ 1.
				terniLapilli putXAt: 2 @ 2.
				terniLapilli putOAt: 2 @ 3.
				terniLapilli putXAt: 3 @ 2.
				 ]
		raise: Error
		withMessageText: TerniLapilli piecesLimitExceededErrorDescription.! !
!TerniLapilliTests methodsFor: 'as yet unclassified' stamp: 'fr 10/30/2020 21:40:36'!
test16

	| terniLapilli |
	terniLapilli _ TerniLapilli starting: #X.
	self
		should: [ 		terniLapilli putXAt: 1 @ 1.
				terniLapilli putOAt: 1 @ 2.
				terniLapilli putXAt: 1 @ 3.
				terniLapilli putOAt: 2 @ 1.
				terniLapilli putXAt: 2 @ 2.
				terniLapilli putOAt: 2 @ 3.
				terniLapilli putXAt: 3 @ 2.
				 ]
		raise: Error
		withMessageText: TerniLapilli piecesLimitExceededErrorDescription.! !

!testRun: #TerniLapilliTests #test16 stamp: 'fr 10/30/2020 21:40:37'!
PASSED!

!testRun: #TerniLapilliTests #test01 stamp: 'fr 10/30/2020 21:40:37'!
PASSED!

!testRun: #TerniLapilliTests #test02 stamp: 'fr 10/30/2020 21:40:37'!
PASSED!

!testRun: #TerniLapilliTests #test03 stamp: 'fr 10/30/2020 21:40:37'!
PASSED!

!testRun: #TerniLapilliTests #test04 stamp: 'fr 10/30/2020 21:40:37'!
PASSED!

!testRun: #TerniLapilliTests #test05 stamp: 'fr 10/30/2020 21:40:37'!
PASSED!

!testRun: #TerniLapilliTests #test06 stamp: 'fr 10/30/2020 21:40:37'!
PASSED!

!testRun: #TerniLapilliTests #test07 stamp: 'fr 10/30/2020 21:40:37'!
PASSED!

!testRun: #TerniLapilliTests #test08 stamp: 'fr 10/30/2020 21:40:37'!
PASSED!

!testRun: #TerniLapilliTests #test09 stamp: 'fr 10/30/2020 21:40:37'!
PASSED!

!testRun: #TerniLapilliTests #test10 stamp: 'fr 10/30/2020 21:40:37'!
PASSED!

!testRun: #TerniLapilliTests #test11 stamp: 'fr 10/30/2020 21:40:37'!
PASSED!

!testRun: #TerniLapilliTests #test12 stamp: 'fr 10/30/2020 21:40:37'!
PASSED!

!testRun: #TerniLapilliTests #test13 stamp: 'fr 10/30/2020 21:40:37'!
PASSED!

!testRun: #TerniLapilliTests #test14 stamp: 'fr 10/30/2020 21:40:37'!
PASSED!

!testRun: #TerniLapilliTests #test15 stamp: 'fr 10/30/2020 21:40:37'!
PASSED!

!testRun: #TerniLapilliTests #test16 stamp: 'fr 10/30/2020 21:40:37'!
PASSED!
!TerniLapilliTests methodsFor: 'as yet unclassified' stamp: 'fr 10/30/2020 21:40:43' prior: 50869920!
test15

	| terniLapilli |
	terniLapilli _ TerniLapilli starting: #X.
	self
		should: [ 		terniLapilli putXAt: 1 @ 1.
				terniLapilli putOAt: 1 @ 2.
				terniLapilli putXAt: 1 @ 3.
				terniLapilli putOAt: 2 @ 1.
				terniLapilli putXAt: 2 @ 2.
				terniLapilli putOAt: 2 @ 3.
				terniLapilli moveXFrom: 1@1 to: 3@3.
				terniLapilli putOAt: 2 @ 3.
				 ]
		raise: Error
		withMessageText: TerniLapilli piecesLimitExceededErrorDescription.! !
!TerniLapilliTests methodsFor: 'as yet unclassified' stamp: 'fr 10/30/2020 21:42:06' prior: 50869994!
test15

	| terniLapilli |
	terniLapilli _ TerniLapilli starting: #X.
	self
		should: [ 		terniLapilli putXAt: 1 @ 1.
				terniLapilli putOAt: 1 @ 2.
				terniLapilli putXAt: 1 @ 3.
				terniLapilli putOAt: 2 @ 1.
				terniLapilli putXAt: 2 @ 2.
				terniLapilli putOAt: 2 @ 3.
				terniLapilli moveXFrom: 1@1 to: 3@3.
				terniLapilli putOAt: 3 @ 2.
				 ]
		raise: Error
		withMessageText: TerniLapilli piecesLimitExceededErrorDescription.! !

!testRun: #TerniLapilliTests #test15 stamp: 'fr 10/30/2020 21:42:15'!
FAILURE!

!testRun: #TerniLapilliTests #test15 stamp: 'fr 10/30/2020 21:46:32'!
FAILURE!

!testRun: #TerniLapilliTests #test15 stamp: 'fr 10/30/2020 21:47:02'!
FAILURE!

!testRun: #TerniLapilliTests #test15 stamp: 'fr 10/30/2020 21:47:09'!
FAILURE!
!TerniLapilli methodsFor: 'actions' stamp: 'fr 10/30/2020 21:47:41'!
moveXFrom: aPoint to: aPoint2 
	self shouldBeImplemented.! !
!TerniLapilli methodsFor: 'actions' stamp: 'fr 10/30/2020 21:47:44' prior: 50870039!
moveXFrom: aPoint to: aPoint2 
	
	! !
!TerniLapilli methodsFor: 'actions' stamp: 'fr 10/30/2020 21:48:10' prior: 50870044!
moveXFrom: aPositionToTake to: aPositionToPut

	playerTurn _ #O
	
	! !

!testRun: #TerniLapilliTests #test15 stamp: 'fr 10/30/2020 21:48:19'!
FAILURE!
!TerniLapilli methodsFor: 'actions' stamp: 'fr 10/30/2020 21:48:49' prior: 50869729!
putOAt: aPosition 

	(Opositions size = 3) ifTrue: [self error: self class piecesLimitExceededErrorDescription].
	((aPosition x between: 1 and: 3) and: [aPosition y between: 1 and: 3]) ifFalse: [self error: self class positionOutOfBoundsErrorDescription ].
	self failIfPositionAlreadyHoldsAPiece: aPosition.
	self failIfWrongTurnForOMove.
	Opositions add: aPosition.
	playerTurn _ #X! !

!testRun: #TerniLapilliTests #test15 stamp: 'fr 10/30/2020 21:48:50'!
PASSED!

!testRun: #TerniLapilliTests #test01 stamp: 'fr 10/30/2020 21:48:50'!
PASSED!

!testRun: #TerniLapilliTests #test02 stamp: 'fr 10/30/2020 21:48:50'!
PASSED!

!testRun: #TerniLapilliTests #test03 stamp: 'fr 10/30/2020 21:48:50'!
PASSED!

!testRun: #TerniLapilliTests #test04 stamp: 'fr 10/30/2020 21:48:50'!
PASSED!

!testRun: #TerniLapilliTests #test05 stamp: 'fr 10/30/2020 21:48:50'!
PASSED!

!testRun: #TerniLapilliTests #test06 stamp: 'fr 10/30/2020 21:48:50'!
PASSED!

!testRun: #TerniLapilliTests #test07 stamp: 'fr 10/30/2020 21:48:50'!
PASSED!

!testRun: #TerniLapilliTests #test08 stamp: 'fr 10/30/2020 21:48:50'!
PASSED!

!testRun: #TerniLapilliTests #test09 stamp: 'fr 10/30/2020 21:48:50'!
PASSED!

!testRun: #TerniLapilliTests #test10 stamp: 'fr 10/30/2020 21:48:50'!
PASSED!

!testRun: #TerniLapilliTests #test11 stamp: 'fr 10/30/2020 21:48:50'!
PASSED!

!testRun: #TerniLapilliTests #test12 stamp: 'fr 10/30/2020 21:48:50'!
PASSED!

!testRun: #TerniLapilliTests #test13 stamp: 'fr 10/30/2020 21:48:50'!
PASSED!

!testRun: #TerniLapilliTests #test14 stamp: 'fr 10/30/2020 21:48:50'!
PASSED!

!testRun: #TerniLapilliTests #test15 stamp: 'fr 10/30/2020 21:48:50'!
PASSED!

!testRun: #TerniLapilliTests #test16 stamp: 'fr 10/30/2020 21:48:50'!
PASSED!
!TerniLapilliTests methodsFor: 'as yet unclassified' stamp: 'fr 10/30/2020 21:49:06'!
test17

	| terniLapilli |
	terniLapilli _ TerniLapilli starting: #X.
	self
		should: [ 		terniLapilli putXAt: 1 @ 1.
				terniLapilli putOAt: 1 @ 2.
				terniLapilli putXAt: 1 @ 3.
				terniLapilli putOAt: 2 @ 1.
				terniLapilli putXAt: 2 @ 2.
				terniLapilli putOAt: 2 @ 3.
				terniLapilli putXAt: 3 @ 2.
				 ]
		raise: Error
		withMessageText: TerniLapilli piecesLimitExceededErrorDescription.! !
!TerniLapilliTests methodsFor: 'as yet unclassified' stamp: 'fr 10/30/2020 21:52:00' prior: 50870012!
test15

	| terniLapilli |
	terniLapilli _ TerniLapilli starting: #X.
	terniLapilli putXAt: 1 @ 1 
			 ;putOAt: 1 @ 3
			 ;putXAt: 2 @ 1
			 ;putOAt: 2 @ 2
			 ;putXAt: 2 @ 3
			 ;putOAt: 3 @ 1
			 ;moveXFrom: 1@1 to: 3@2.
			
	self assert: [(terniLapilli hasXPieceAt: 3@3) and: [(terniLapilli hasXPieceAt: 1@1) not]]! !
!TerniLapilliTests methodsFor: 'as yet unclassified' stamp: 'fr 10/30/2020 21:42:06' prior: 50870129!
test15

	| terniLapilli |
	terniLapilli _ TerniLapilli starting: #X.
	self
		should: [ 		terniLapilli putXAt: 1 @ 1.
				terniLapilli putOAt: 1 @ 2.
				terniLapilli putXAt: 1 @ 3.
				terniLapilli putOAt: 2 @ 1.
				terniLapilli putXAt: 2 @ 2.
				terniLapilli putOAt: 2 @ 3.
				terniLapilli moveXFrom: 1@1 to: 3@3.
				terniLapilli putOAt: 3 @ 2.
				 ]
		raise: Error
		withMessageText: TerniLapilli piecesLimitExceededErrorDescription.! !
!TerniLapilliTests methodsFor: 'as yet unclassified' stamp: 'fr 10/30/2020 21:53:09' prior: 50870113!
test17

	| terniLapilli |
	terniLapilli _ TerniLapilli starting: #X.
	terniLapilli putXAt: 1 @ 1 
			 ;putOAt: 1 @ 3
			 ;putXAt: 2 @ 1
			 ;putOAt: 2 @ 2
			 ;putXAt: 2 @ 3
			 ;putOAt: 3 @ 1
			 ;moveXFrom: 1@1 to: 3@2.
			
	self assert: [(terniLapilli hasXPieceAt: 3@3) and: [(terniLapilli hasXPieceAt: 1@1) not]]! !

!testRun: #TerniLapilliTests #test15 stamp: 'fr 10/30/2020 21:53:12'!
PASSED!
!TerniLapilliTests methodsFor: 'as yet unclassified' stamp: 'fr 10/30/2020 21:54:13' prior: 50870143!
test15

	| terniLapilli |
	terniLapilli _ TerniLapilli starting: #X.
	self
		should: [ 		terniLapilli putXAt: 1 @ 1.
				terniLapilli putOAt: 1 @ 3.
				terniLapilli putXAt: 2 @ 1.
				terniLapilli putOAt: 2 @ 2.
				terniLapilli putXAt: 2 @ 3.
				terniLapilli putOAt: 3 @ 1.
				terniLapilli moveXFrom: 1@1 to: 1 @ 2.
				terniLapilli putOAt: 3 @ 2.
				 ]
		raise: Error
		withMessageText: TerniLapilli piecesLimitExceededErrorDescription.! !

!testRun: #TerniLapilliTests #test15 stamp: 'fr 10/30/2020 21:54:15'!
PASSED!
!TerniLapilliTests methodsFor: 'as yet unclassified' stamp: 'fr 10/30/2020 21:54:21' prior: 50870177!
test15

	| terniLapilli |
	terniLapilli _ TerniLapilli starting: #X.
	self
		should: [ 		terniLapilli putXAt: 1 @ 1.
				terniLapilli putOAt: 1 @ 3.
				terniLapilli putXAt: 2 @ 1.
				terniLapilli putOAt: 2 @ 2.
				terniLapilli putXAt: 2 @ 3.
				terniLapilli putOAt: 3 @ 1.
				terniLapilli moveXFrom: 1@1 to: 1@2.
				terniLapilli putOAt: 3 @ 2.
				 ]
		raise: Error
		withMessageText: TerniLapilli piecesLimitExceededErrorDescription.! !
!TerniLapilliTests methodsFor: 'as yet unclassified' stamp: 'fr 10/30/2020 21:55:11' prior: 50870161!
test17

	| terniLapilli |
	terniLapilli _ TerniLapilli starting: #X.
	terniLapilli putXAt: 1 @ 1 
			 ;putOAt: 1 @ 3
			 ;putXAt: 2 @ 1
			 ;putOAt: 2 @ 2
			 ;putXAt: 2 @ 3
			 ;putOAt: 3 @ 2
			 ;moveXFrom: 1@1 to: 3@2.
			
	self assert: [(terniLapilli hasXPieceAt: 3@3) and: [(terniLapilli hasXPieceAt: 1@1) not]]! !
!TerniLapilliTests methodsFor: 'as yet unclassified' stamp: 'fr 10/30/2020 21:55:17' prior: 50870215!
test17

	| terniLapilli |
	terniLapilli _ TerniLapilli starting: #X.
	terniLapilli putXAt: 1 @ 1 
			 ;putOAt: 1 @ 3
			 ;putXAt: 2 @ 1
			 ;putOAt: 2 @ 2
			 ;putXAt: 2 @ 3
			 ;putOAt: 3 @ 2
			 ;moveXFrom: 1@1 to: 2@1.
			
	self assert: [(terniLapilli hasXPieceAt: 3@3) and: [(terniLapilli hasXPieceAt: 1@1) not]]! !
!TerniLapilliTests methodsFor: 'as yet unclassified' stamp: 'fr 10/30/2020 21:55:26' prior: 50870229!
test17

	| terniLapilli |
	terniLapilli _ TerniLapilli starting: #X.
	terniLapilli putXAt: 1 @ 1 
			 ;putOAt: 1 @ 3
			 ;putXAt: 2 @ 1
			 ;putOAt: 2 @ 2
			 ;putXAt: 2 @ 3
			 ;putOAt: 3 @ 2
			 ;moveXFrom: 1@1 to: 1@2.
			
	self assert: [(terniLapilli hasXPieceAt: 3@3) and: [(terniLapilli hasXPieceAt: 1@1) not]]! !
!TerniLapilliTests methodsFor: 'as yet unclassified' stamp: 'fr 10/30/2020 21:55:47' prior: 50870243!
test17

	| terniLapilli |
	terniLapilli _ TerniLapilli starting: #X.
	terniLapilli putXAt: 1 @ 1 
			 ;putOAt: 1 @ 3
			 ;putXAt: 2 @ 1
			 ;putOAt: 2 @ 2
			 ;putXAt: 2 @ 3
			 ;putOAt: 3 @ 2
			 ;moveXFrom: 1@1 to: 1@2.
			
	self assert: [(terniLapilli hasXPieceAt: 1@2) and: [(terniLapilli hasXPieceAt: 1@1) not]]! !

!testRun: #TerniLapilliTests #test17 stamp: 'fr 10/30/2020 21:55:48'!
FAILURE!

Object subclass: #TerniLapilliState
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TerniLapilli - Exercise'!

!classDefinition: #TerniLapilliState category: 'TerniLapilli - Exercise' stamp: 'fr 10/30/2020 21:56:15'!
Object subclass: #TerniLapilliState
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TerniLapilli - Exercise'!

TerniLapilliState subclass: #XAdding
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TerniLapilli - Exercise'!

!classDefinition: #XAdding category: 'TerniLapilli - Exercise' stamp: 'fr 10/30/2020 21:56:27'!
TerniLapilliState subclass: #XAdding
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TerniLapilli - Exercise'!

TerniLapilliState subclass: #OAdding
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TerniLapilli - Exercise'!

!classDefinition: #OAdding category: 'TerniLapilli - Exercise' stamp: 'fr 10/30/2020 21:56:30'!
TerniLapilliState subclass: #OAdding
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TerniLapilli - Exercise'!

Object subclass: #TerniLapilliState
	instanceVariableNames: 'terniLapilliGame'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TerniLapilli - Exercise'!

!classDefinition: #TerniLapilliState category: 'TerniLapilli - Exercise' stamp: 'fr 10/30/2020 21:56:45'!
Object subclass: #TerniLapilliState
	instanceVariableNames: 'terniLapilliGame'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TerniLapilli - Exercise'!
!TerniLapilliState class methodsFor: 'no messages' stamp: 'fr 10/30/2020 21:57:07'!
for: aTerniLapilli
	
	^self new initializeFor: aTerniLapilli ! !
!TerniLapilliState methodsFor: 'no messages' stamp: 'fr 10/30/2020 21:58:19'!
initializeFor: aTerniLapilli
	
	terniLapilliGame _ aTerniLapilli ! !

!testRun: #TerniLapilliTests #test01 stamp: 'fr 10/30/2020 23:44:41'!
PASSED!

!testRun: #TerniLapilliTests #test02 stamp: 'fr 10/30/2020 23:44:41'!
PASSED!

!testRun: #TerniLapilliTests #test03 stamp: 'fr 10/30/2020 23:44:41'!
PASSED!

!testRun: #TerniLapilliTests #test04 stamp: 'fr 10/30/2020 23:44:41'!
PASSED!

!testRun: #TerniLapilliTests #test05 stamp: 'fr 10/30/2020 23:44:41'!
PASSED!

!testRun: #TerniLapilliTests #test06 stamp: 'fr 10/30/2020 23:44:41'!
PASSED!

!testRun: #TerniLapilliTests #test07 stamp: 'fr 10/30/2020 23:44:41'!
PASSED!

!testRun: #TerniLapilliTests #test08 stamp: 'fr 10/30/2020 23:44:41'!
PASSED!

!testRun: #TerniLapilliTests #test09 stamp: 'fr 10/30/2020 23:44:41'!
PASSED!

!testRun: #TerniLapilliTests #test10 stamp: 'fr 10/30/2020 23:44:41'!
PASSED!

!testRun: #TerniLapilliTests #test11 stamp: 'fr 10/30/2020 23:44:41'!
PASSED!

!testRun: #TerniLapilliTests #test12 stamp: 'fr 10/30/2020 23:44:41'!
PASSED!

!testRun: #TerniLapilliTests #test13 stamp: 'fr 10/30/2020 23:44:41'!
PASSED!

!testRun: #TerniLapilliTests #test14 stamp: 'fr 10/30/2020 23:44:41'!
PASSED!

!testRun: #TerniLapilliTests #test15 stamp: 'fr 10/30/2020 23:44:41'!
PASSED!

!testRun: #TerniLapilliTests #test16 stamp: 'fr 10/30/2020 23:44:41'!
PASSED!

!testRun: #TerniLapilliTests #test17 stamp: 'fr 10/30/2020 23:44:41'!
FAILURE!

!testRun: #TerniLapilliTests #test17 stamp: 'fr 10/30/2020 23:44:41'!
FAILURE!
!TerniLapilliTests methodsFor: 'as yet unclassified' stamp: 'fr 10/30/2020 23:44:53' prior: 50870257!
test17

	"| terniLapilli |
	terniLapilli _ TerniLapilli starting: #X.
	terniLapilli putXAt: 1 @ 1 
			 ;putOAt: 1 @ 3
			 ;putXAt: 2 @ 1
			 ;putOAt: 2 @ 2
			 ;putXAt: 2 @ 3
			 ;putOAt: 3 @ 2
			 ;moveXFrom: 1@1 to: 1@2.
			
	self assert: [(terniLapilli hasXPieceAt: 1@2) and: [(terniLapilli hasXPieceAt: 1@1) not]]"! !

!testRun: #TerniLapilliTests #test17 stamp: 'fr 10/30/2020 23:44:53'!
PASSED!

!testRun: #TerniLapilliTests #test01 stamp: 'fr 10/30/2020 23:44:53'!
PASSED!

!testRun: #TerniLapilliTests #test02 stamp: 'fr 10/30/2020 23:44:53'!
PASSED!

!testRun: #TerniLapilliTests #test03 stamp: 'fr 10/30/2020 23:44:53'!
PASSED!

!testRun: #TerniLapilliTests #test04 stamp: 'fr 10/30/2020 23:44:53'!
PASSED!

!testRun: #TerniLapilliTests #test05 stamp: 'fr 10/30/2020 23:44:53'!
PASSED!

!testRun: #TerniLapilliTests #test06 stamp: 'fr 10/30/2020 23:44:53'!
PASSED!

!testRun: #TerniLapilliTests #test07 stamp: 'fr 10/30/2020 23:44:53'!
PASSED!

!testRun: #TerniLapilliTests #test08 stamp: 'fr 10/30/2020 23:44:53'!
PASSED!

!testRun: #TerniLapilliTests #test09 stamp: 'fr 10/30/2020 23:44:53'!
PASSED!

!testRun: #TerniLapilliTests #test10 stamp: 'fr 10/30/2020 23:44:53'!
PASSED!

!testRun: #TerniLapilliTests #test11 stamp: 'fr 10/30/2020 23:44:53'!
PASSED!

!testRun: #TerniLapilliTests #test12 stamp: 'fr 10/30/2020 23:44:53'!
PASSED!

!testRun: #TerniLapilliTests #test13 stamp: 'fr 10/30/2020 23:44:53'!
PASSED!

!testRun: #TerniLapilliTests #test14 stamp: 'fr 10/30/2020 23:44:53'!
PASSED!

!testRun: #TerniLapilliTests #test15 stamp: 'fr 10/30/2020 23:44:53'!
PASSED!

!testRun: #TerniLapilliTests #test16 stamp: 'fr 10/30/2020 23:44:53'!
PASSED!

!testRun: #TerniLapilliTests #test17 stamp: 'fr 10/30/2020 23:44:53'!
PASSED!
!TerniLapilli methodsFor: 'actions' stamp: 'fr 10/30/2020 23:56:33' prior: 50870056!
putOAt: aPosition 

	(Opositions size = 3) ifTrue: [self error: self class piecesLimitExceededErrorDescription].
	((aPosition x between: 1 and: 3) and: [aPosition y between: 1 and: 3]) ifFalse: [self error: self class positionOutOfBoundsErrorDescription ].
	self failIfPositionAlreadyHoldsAPiece: aPosition.
	self failIfWrongTurnForOMove.
	Opositions add: aPosition.
	playerTurn _ #X! !
!TerniLapilli methodsFor: 'actions' stamp: 'fr 10/31/2020 01:58:53' prior: 50870436!
putOAt: aPosition 

	(Opositions size = 3) ifTrue: [self error: self class piecesLimitExceededErrorDescription].
	((aPosition x between: 1 and: 3) and: [aPosition y between: 1 and: 3]) ifFalse: [self error: self class positionOutOfBoundsErrorDescription ].
	self failIfPositionAlreadyHoldsAPiece: aPosition.
	self failIfWrongTurnForOMove.
	Opositions add: aPosition.
	playerTurn _ #X! !
!TerniLapilli methodsFor: 'initialization' stamp: 'fr 10/31/2020 01:59:09' prior: 50868886!
initializeStarting: aPlayerId 
	
	playerTurn _ XAdding for: self.
	Xpositions _ Set new.	
	Opositions _ Set new.! !

Object subclass: #TerniLapilli
	instanceVariableNames: 'Xpositions Opositions playerTurn'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TerniLapilli - Exercise'!

!classDefinition: #TerniLapilli category: 'TerniLapilli - Exercise' stamp: 'fr 10/31/2020 02:00:43'!
Object subclass: #TerniLapilli
	instanceVariableNames: 'Xpositions Opositions playerTurn'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TerniLapilli - Exercise'!

!classDefinition: #TerniLapilli category: 'TerniLapilli - Exercise' stamp: 'fr 10/31/2020 02:00:53'!
Object subclass: #TerniLapilli
	instanceVariableNames: 'Xpositions Opositions state'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TerniLapilli - Exercise'!
!TerniLapilli methodsFor: 'as yet unclassified' stamp: 'fr 10/31/2020 02:00:53' prior: 50870466!
initializeStarting: aPlayerId 
	
	state _ XAdding for: self.
	Xpositions _ Set new.	
	Opositions _ Set new.! !
!TerniLapilli methodsFor: 'as yet unclassified' stamp: 'fr 10/31/2020 02:00:53' prior: 50869865!
putXAt: aPosition 
	
	(Xpositions size = 3) ifTrue: [self error: self class piecesLimitExceededErrorDescription].
	((aPosition x between: 1 and: 3) and: [aPosition y between: 1 and: 3]) ifFalse: [self error: self class positionOutOfBoundsErrorDescription ].
	self failIfPositionAlreadyHoldsAPiece: aPosition.
	self failIfWrongTurnForXMove.
	Xpositions add: aPosition.
	state _ #O! !
!TerniLapilli methodsFor: 'as yet unclassified' stamp: 'fr 10/31/2020 02:00:53' prior: 50869266!
failIfWrongTurnForXMove

	^ (state = #X) ifFalse: [self itIsPlayerOsTurn]! !
!TerniLapilli methodsFor: 'as yet unclassified' stamp: 'fr 10/31/2020 02:00:53' prior: 50867906!
isOMoving
	
	^state = #O! !
!TerniLapilli methodsFor: 'as yet unclassified' stamp: 'fr 10/31/2020 02:00:53' prior: 50867902!
isXMoving
	
	^state = #X! !
!TerniLapilli methodsFor: 'as yet unclassified' stamp: 'fr 10/31/2020 02:00:53' prior: 50869232!
failIfWrongTurnForOMove

	^ (state = #O) ifFalse: [self itIsPlayerXsTurn]! !
!TerniLapilli methodsFor: 'as yet unclassified' stamp: 'fr 10/31/2020 02:00:53' prior: 50870048!
moveXFrom: aPositionToTake to: aPositionToPut

	state _ #O
	
	! !
!TerniLapilli methodsFor: 'as yet unclassified' stamp: 'fr 10/31/2020 02:00:53' prior: 50870451!
putOAt: aPosition 

	(Opositions size = 3) ifTrue: [self error: self class piecesLimitExceededErrorDescription].
	((aPosition x between: 1 and: 3) and: [aPosition y between: 1 and: 3]) ifFalse: [self error: self class positionOutOfBoundsErrorDescription ].
	self failIfPositionAlreadyHoldsAPiece: aPosition.
	self failIfWrongTurnForOMove.
	Opositions add: aPosition.
	state _ #X! !
!TerniLapilli methodsFor: 'actions' stamp: 'fr 10/31/2020 02:01:18' prior: 50870544!
putOAt: aPosition 

	"(Opositions size = 3) ifTrue: [self error: self class piecesLimitExceededErrorDescription].
	((aPosition x between: 1 and: 3) and: [aPosition y between: 1 and: 3]) ifFalse: [self error: self class positionOutOfBoundsErrorDescription ].
	self failIfPositionAlreadyHoldsAPiece: aPosition.
	self failIfWrongTurnForOMove.
	Opositions add: aPosition.
	state _ #X"
	
	state putOAt: aPosition ! !
!TerniLapilli methodsFor: 'actions' stamp: 'fr 10/31/2020 02:01:31' prior: 50870503!
putXAt: aPosition 
	
	"(Xpositions size = 3) ifTrue: [self error: self class piecesLimitExceededErrorDescription].
	((aPosition x between: 1 and: 3) and: [aPosition y between: 1 and: 3]) ifFalse: [self error: self class positionOutOfBoundsErrorDescription ].
	self failIfPositionAlreadyHoldsAPiece: aPosition.
	self failIfWrongTurnForXMove.
	Xpositions add: aPosition.
	state _ #O"
	
	state putXAt: aPosition ! !
!TerniLapilliState methodsFor: 'nil' stamp: 'fr 10/31/2020 02:01:53'!
putOAt: aPosition
	
	self subclassResponsibility ! !
!TerniLapilliState methodsFor: 'as yet unclassified' stamp: 'fr 10/31/2020 02:01:57'!
putXAt: aPosition
	
	self subclassResponsibility ! !
!OAdding methodsFor: 'no messages' stamp: 'fr 10/31/2020 02:03:13' overrides: 50870591!
putOAt: aPosition

	terniLapilliGame safePutOAt: aPosition! !
!TerniLapilli methodsFor: 'actions' stamp: 'fr 10/31/2020 02:03:37' prior: 50870559!
putOAt: aPosition 

	(Opositions size = 3) ifTrue: [self error: self class piecesLimitExceededErrorDescription].
	((aPosition x between: 1 and: 3) and: [aPosition y between: 1 and: 3]) ifFalse: [self error: self class positionOutOfBoundsErrorDescription ].
	self failIfPositionAlreadyHoldsAPiece: aPosition.
	self failIfWrongTurnForOMove.
	Opositions add: aPosition.
	state _ #X.
	
	state putOAt: aPosition ! !
!XAdding methodsFor: 'no messages' stamp: 'fr 10/31/2020 02:04:08' overrides: 50870591!
putOAt: aPosition

	terniLapilliGame failIfWrongTurnForOMove! !
!TerniLapilli methodsFor: 'actions' stamp: 'fr 10/31/2020 04:43:40' prior: 50870606!
putOAt: aPosition 

	"(Opositions size = 3) ifTrue: [self error: self class piecesLimitExceededErrorDescription].
	((aPosition x between: 1 and: 3) and: [aPosition y between: 1 and: 3]) ifFalse: [self error: self class positionOutOfBoundsErrorDescription ].
	self failIfPositionAlreadyHoldsAPiece: aPosition.
	self failIfWrongTurnForOMove.
	Opositions add: aPosition.
	state _ #X."
	
	state putOAt: aPosition ! !
!XAdding methodsFor: 'as yet unclassified' stamp: 'fr 10/31/2020 04:44:38' prior: 50870622 overrides: 50870591!
putOAt: aPosition

	terniLapilliGame itIsPlayerXsTurn! !
!OAdding methodsFor: 'as yet unclassified' stamp: 'fr 10/31/2020 04:46:28' overrides: 50870596!
putXAt: aPosition

	terniLapilliGame itIsPlayerOsTurn ! !
!XAdding methodsFor: 'as yet unclassified' stamp: 'fr 10/31/2020 04:46:53' overrides: 50870596!
putXAt: aPosition

	terniLapilliGame safePutXAt: aPosition ! !
!TerniLapilli methodsFor: 'actions' stamp: 'fr 10/31/2020 04:48:57'!
safePutXAt: aPosition 
	
	"(Xpositions size = 3) ifTrue: [self error: self class piecesLimitExceededErrorDescription].
	((aPosition x between: 1 and: 3) and: [aPosition y between: 1 and: 3]) ifFalse: [self error: self class positionOutOfBoundsErrorDescription ].
	self failIfPositionAlreadyHoldsAPiece: aPosition.
	self failIfWrongTurnForXMove.
	Xpositions add: aPosition.
	state _ #O"
	
	state putXAt: aPosition ! !
!TerniLapilli methodsFor: 'actions' stamp: 'fr 10/31/2020 04:49:02'!
safePutOAt: aPosition 
	
	"(Xpositions size = 3) ifTrue: [self error: self class piecesLimitExceededErrorDescription].
	((aPosition x between: 1 and: 3) and: [aPosition y between: 1 and: 3]) ifFalse: [self error: self class positionOutOfBoundsErrorDescription ].
	self failIfPositionAlreadyHoldsAPiece: aPosition.
	self failIfWrongTurnForXMove.
	Xpositions add: aPosition.
	state _ #O"
	
	state putXAt: aPosition ! !
!TerniLapilli methodsFor: 'actions' stamp: 'fr 10/31/2020 04:49:26' prior: 50870675!
safePutOAt: aPosition 
	
	"(Xpositions size = 3) ifTrue: [self error: self class piecesLimitExceededErrorDescription].
	((aPosition x between: 1 and: 3) and: [aPosition y between: 1 and: 3]) ifFalse: [self error: self class positionOutOfBoundsErrorDescription ].
	self failIfPositionAlreadyHoldsAPiece: aPosition.
	Xpositions add: aPosition.
	state _ #O"
	
	state putXAt: aPosition ! !
!TerniLapilli methodsFor: 'actions' stamp: 'fr 10/31/2020 04:50:59' prior: 50870691!
safePutOAt: aPosition 
	
	(Xpositions size = 3) ifTrue: [self error: self class piecesLimitExceededErrorDescription].
	((aPosition x between: 1 and: 3) and: [aPosition y between: 1 and: 3]) ifFalse: [self error: self class positionOutOfBoundsErrorDescription ].
	self failIfPositionAlreadyHoldsAPiece: aPosition.
	Xpositions add: aPosition.
	state _ #O ! !
!TerniLapilli methodsFor: 'actions' stamp: 'fr 10/31/2020 04:51:04' prior: 50870659!
safePutXAt: aPosition 
	
	(Xpositions size = 3) ifTrue: [self error: self class piecesLimitExceededErrorDescription].
	((aPosition x between: 1 and: 3) and: [aPosition y between: 1 and: 3]) ifFalse: [self error: self class positionOutOfBoundsErrorDescription ].
	self failIfPositionAlreadyHoldsAPiece: aPosition.
	self failIfWrongTurnForXMove.
	Xpositions add: aPosition.
	state _ #O ! !
!TerniLapilli methodsFor: 'actions' stamp: 'fr 10/31/2020 04:51:08' prior: 50870720!
safePutXAt: aPosition 
	
	(Xpositions size = 3) ifTrue: [self error: self class piecesLimitExceededErrorDescription].
	((aPosition x between: 1 and: 3) and: [aPosition y between: 1 and: 3]) ifFalse: [self error: self class positionOutOfBoundsErrorDescription ].
	self failIfPositionAlreadyHoldsAPiece: aPosition.
	Xpositions add: aPosition.
	state _ #O ! !

!methodRemoval: TerniLapilli #safePutOAt: stamp: 'fr 10/31/2020 04:55:23'!
safePutOAt: aPosition 
	
	(Xpositions size = 3) ifTrue: [self error: self class piecesLimitExceededErrorDescription].
	((aPosition x between: 1 and: 3) and: [aPosition y between: 1 and: 3]) ifFalse: [self error: self class positionOutOfBoundsErrorDescription ].
	self failIfPositionAlreadyHoldsAPiece: aPosition.
	Xpositions add: aPosition.
	state _ #O !
!TerniLapilli methodsFor: 'actions' stamp: 'fr 10/31/2020 04:55:32'!
safePutOAt: aPosition 

	"(Opositions size = 3) ifTrue: [self error: self class piecesLimitExceededErrorDescription].
	((aPosition x between: 1 and: 3) and: [aPosition y between: 1 and: 3]) ifFalse: [self error: self class positionOutOfBoundsErrorDescription ].
	self failIfPositionAlreadyHoldsAPiece: aPosition.
	self failIfWrongTurnForOMove.
	Opositions add: aPosition.
	state _ #X."
	
	state putOAt: aPosition ! !
!TerniLapilli methodsFor: 'actions' stamp: 'fr 10/31/2020 04:55:39' prior: 50870762!
safePutOAt: aPosition 

	(Opositions size = 3) ifTrue: [self error: self class piecesLimitExceededErrorDescription].
	((aPosition x between: 1 and: 3) and: [aPosition y between: 1 and: 3]) ifFalse: [self error: self class positionOutOfBoundsErrorDescription ].
	self failIfPositionAlreadyHoldsAPiece: aPosition.
	self failIfWrongTurnForOMove.
	Opositions add: aPosition.
	state _ #X.
	! !
!TerniLapilli methodsFor: 'actions' stamp: 'fr 10/31/2020 04:55:43' prior: 50870778!
safePutOAt: aPosition 

	(Opositions size = 3) ifTrue: [self error: self class piecesLimitExceededErrorDescription].
	((aPosition x between: 1 and: 3) and: [aPosition y between: 1 and: 3]) ifFalse: [self error: self class positionOutOfBoundsErrorDescription ].
	self failIfPositionAlreadyHoldsAPiece: aPosition.
	Opositions add: aPosition.
	state _ #X.
	! !
!TerniLapilli methodsFor: 'actions' stamp: 'fr 10/31/2020 04:56:14' prior: 50870735!
safePutXAt: aPosition 
	
	(Xpositions size = 3) ifTrue: [self error: self class piecesLimitExceededErrorDescription].
	((aPosition x between: 1 and: 3) and: [aPosition y between: 1 and: 3]) ifFalse: [self error: self class positionOutOfBoundsErrorDescription ].
	self failIfPositionAlreadyHoldsAPiece: aPosition.
	Xpositions add: aPosition.
	state _ OAdding new.! !
!TerniLapilli methodsFor: 'actions' stamp: 'fr 10/31/2020 04:56:25' prior: 50870793!
safePutOAt: aPosition 

	(Opositions size = 3) ifTrue: [self error: self class piecesLimitExceededErrorDescription].
	((aPosition x between: 1 and: 3) and: [aPosition y between: 1 and: 3]) ifFalse: [self error: self class positionOutOfBoundsErrorDescription ].
	self failIfPositionAlreadyHoldsAPiece: aPosition.
	Opositions add: aPosition.
	state _ XAdding for: self
	! !
!TerniLapilli methodsFor: 'actions' stamp: 'fr 10/31/2020 04:56:30' prior: 50870807!
safePutXAt: aPosition 
	
	(Xpositions size = 3) ifTrue: [self error: self class piecesLimitExceededErrorDescription].
	((aPosition x between: 1 and: 3) and: [aPosition y between: 1 and: 3]) ifFalse: [self error: self class positionOutOfBoundsErrorDescription ].
	self failIfPositionAlreadyHoldsAPiece: aPosition.
	Xpositions add: aPosition.
	state _ OAdding for: self.! !
!TerniLapilli methodsFor: 'actions' stamp: 'fr 10/31/2020 04:57:28' prior: 50870837!
safePutXAt: aPosition 
	
	(Xpositions size = 3) ifTrue: [self error: self class piecesLimitExceededErrorDescription].
	((aPosition x between: 1 and: 3) and: [aPosition y between: 1 and: 3]) ifFalse: [self error: self class positionOutOfBoundsErrorDescription ].
	self failIfPositionAlreadyHoldsAPiece: aPosition.
	Xpositions add: aPosition.
	state _ OAdding for: self! !
!TerniLapilli methodsFor: 'actions' stamp: 'fr 10/31/2020 04:57:41' prior: 50870627!
putOAt: aPosition 
	
	state putOAt: aPosition ! !
!TerniLapilli methodsFor: 'actions' stamp: 'fr 10/31/2020 04:57:47' prior: 50870575!
putXAt: aPosition
	
	state putXAt: aPosition ! !
!TerniLapilli methodsFor: 'actions' stamp: 'fr 10/31/2020 05:02:41' prior: 50870867!
putOAt: aPosition 
	
	state putOAt: aPosition! !
!TerniLapilli methodsFor: 'game state' stamp: 'fr 10/31/2020 05:06:24' prior: 50870524!
isOMoving
	
	^state isOMoving ! !
!TerniLapilli methodsFor: 'game state' stamp: 'fr 10/31/2020 05:06:32' prior: 50870528!
isXMoving
	
	^state isXMoving! !
!TerniLapilli methodsFor: 'game state' stamp: 'fr 10/31/2020 05:06:48'!
isXTurn
	
	^state isXMoving! !
!TerniLapilli methodsFor: 'as yet unclassified' stamp: 'fr 10/31/2020 05:06:48' prior: 50870886!
isXMoving
	
	^state isXTurn! !
!TerniLapilliTests methodsFor: 'as yet unclassified' stamp: 'fr 10/31/2020 05:06:48' prior: 50868196!
test02

	| terniLapilli |
	terniLapilli _ TerniLapilli starting: #X.
	terniLapilli putXAt: 1 @ 1.
	terniLapilli putOAt: 1 @ 2.
	self assert:
		[terniLapilli isXTurn and: [ terniLapilli isOMoving not ]].! !
!TerniLapilliTests methodsFor: 'as yet unclassified' stamp: 'fr 10/31/2020 05:06:48' prior: 50868177!
test01

	| terniLapilli |
	terniLapilli _ TerniLapilli starting: #X.
	terniLapilli putXAt: 1 @ 1.
	self assert:
		[terniLapilli isOMoving and: [ terniLapilli isXTurn not ]].! !
!TerniLapilli methodsFor: 'as yet unclassified' stamp: 'fr 10/31/2020 05:06:48' prior: 50870890!
isXTurn
	
	^state isXTurn! !

!methodRemoval: TerniLapilli #isXMoving stamp: 'fr 10/31/2020 05:06:48'!
isXMoving
	
	^state isXTurn!
!TerniLapilli methodsFor: 'game state' stamp: 'fr 10/31/2020 05:07:01'!
isOsTurn
	
	^state isOMoving ! !
!TerniLapilli methodsFor: 'as yet unclassified' stamp: 'fr 10/31/2020 05:07:01' prior: 50870882!
isOMoving
	
	^state isOsTurn ! !
!TerniLapilliTests methodsFor: 'as yet unclassified' stamp: 'fr 10/31/2020 05:07:01' prior: 50870899!
test02

	| terniLapilli |
	terniLapilli _ TerniLapilli starting: #X.
	terniLapilli putXAt: 1 @ 1.
	terniLapilli putOAt: 1 @ 2.
	self assert:
		[terniLapilli isXTurn and: [ terniLapilli isOsTurn not ]].! !
!TerniLapilliTests methodsFor: 'as yet unclassified' stamp: 'fr 10/31/2020 05:07:01' prior: 50870909!
test01

	| terniLapilli |
	terniLapilli _ TerniLapilli starting: #X.
	terniLapilli putXAt: 1 @ 1.
	self assert:
		[terniLapilli isOsTurn and: [ terniLapilli isXTurn not ]].! !
!TerniLapilli methodsFor: 'as yet unclassified' stamp: 'fr 10/31/2020 05:07:01' prior: 50870925!
isOsTurn
	
	^state isOsTurn ! !

!methodRemoval: TerniLapilli #isOMoving stamp: 'fr 10/31/2020 05:07:01'!
isOMoving
	
	^state isOsTurn !
!TerniLapilli methodsFor: 'game state' stamp: 'fr 10/31/2020 05:07:07'!
isXsTurn
	
	^state isXTurn! !
!TerniLapilli methodsFor: 'as yet unclassified' stamp: 'fr 10/31/2020 05:07:07' prior: 50870918!
isXTurn
	
	^state isXsTurn! !
!TerniLapilliTests methodsFor: 'as yet unclassified' stamp: 'fr 10/31/2020 05:07:07' prior: 50870935!
test02

	| terniLapilli |
	terniLapilli _ TerniLapilli starting: #X.
	terniLapilli putXAt: 1 @ 1.
	terniLapilli putOAt: 1 @ 2.
	self assert:
		[terniLapilli isXsTurn and: [ terniLapilli isOsTurn not ]].! !
!TerniLapilliTests methodsFor: 'as yet unclassified' stamp: 'fr 10/31/2020 05:07:07' prior: 50870945!
test01

	| terniLapilli |
	terniLapilli _ TerniLapilli starting: #X.
	terniLapilli putXAt: 1 @ 1.
	self assert:
		[terniLapilli isOsTurn and: [ terniLapilli isXsTurn not ]].! !
!TerniLapilli methodsFor: 'as yet unclassified' stamp: 'fr 10/31/2020 05:07:07' prior: 50870961!
isXsTurn
	
	^state isXsTurn! !

!methodRemoval: TerniLapilli #isXTurn stamp: 'fr 10/31/2020 05:07:07'!
isXTurn
	
	^state isXsTurn!
!TerniLapilliState methodsFor: 'nil' stamp: 'fr 10/31/2020 05:07:24'!
isOsTurn

	self subclassResponsibility ! !
!TerniLapilliState methodsFor: 'as yet unclassified' stamp: 'fr 10/31/2020 05:07:27'!
isXsTurn

	self subclassResponsibility ! !
!OAdding methodsFor: 'as yet unclassified' stamp: 'fr 10/31/2020 05:07:39' overrides: 50871001!
isXsTurn

	^false! !
!OAdding methodsFor: 'as yet unclassified' stamp: 'fr 10/31/2020 05:07:47' overrides: 50870996!
isOsTurn

	^true! !
!XAdding methodsFor: 'as yet unclassified' stamp: 'fr 10/31/2020 05:07:56' overrides: 50871001!
isXsTurn

	^true ! !
!XAdding methodsFor: 'as yet unclassified' stamp: 'fr 10/31/2020 05:08:00' overrides: 50870996!
isOsTurn

	^false ! !

----SNAPSHOT----(31 October 2020 05:08:52) CuisUniversity-4384.image priorSource: 17211633!
!TerniLapilli methodsFor: 'actions' stamp: 'fr 10/31/2020 05:19:18' prior: 50870538!
moveXFrom: aPositionToTake to: aPositionToPut

	state _ OAdding for: self
	
	! !

!methodRemoval: TerniLapilli #failIfWrongTurnForOMove stamp: 'fr 10/31/2020 05:19:48'!
failIfWrongTurnForOMove

	^ (state = #O) ifFalse: [self itIsPlayerXsTurn]!

!methodRemoval: TerniLapilli #failIfWrongTurnForXMove stamp: 'fr 10/31/2020 05:19:50'!
failIfWrongTurnForXMove

	^ (state = #X) ifFalse: [self itIsPlayerOsTurn]!

!classDefinition: #TerniLapilli category: 'TerniLapilli - Exercise' stamp: 'fr 10/31/2020 05:22:26'!
Object subclass: #TerniLapilli
	instanceVariableNames: 'Xpositions Opositions state positions'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TerniLapilli - Exercise'!
!TerniLapilli methodsFor: 'initialization' stamp: 'fr 10/31/2020 05:22:24' prior: 50870496!
initializeStarting: aPlayerId 
	
	state _ XAdding for: self.
	positions _ Dictionary new.
	positions add: (#X -> Set new).	
	positions add: (#O -> Set new).	
! !
!TerniLapilli methodsFor: 'game state' stamp: 'fr 10/31/2020 05:23:44' prior: 50868895!
hasOPieceAt: aPosition 
	
	"^Opositions includes: aPosition"
	
	^self player: #O hasPieceAt: aPosition! !
!TerniLapilli methodsFor: 'game state' stamp: 'fr 10/31/2020 05:23:53' prior: 50868768!
hasXPieceAt: aPosition

	^self player: #X hasPieceAt: aPosition	! !
!TerniLapilli methodsFor: 'game state' stamp: 'fr 10/31/2020 05:24:26'!
player: aPlayer hasPieceAt: aPosition	
	
	^(positions at: aPlayer) includes: aPosition! !
!TerniLapilli methodsFor: 'game state' stamp: 'fr 10/31/2020 05:24:34' prior: 50871058!
hasOPieceAt: aPosition 
		
	^self player: #O hasPieceAt: aPosition! !
!TerniLapilli methodsFor: 'state checking' stamp: 'fr 10/31/2020 05:24:46' prior: 50869120!
failIfPositionAlreadyHoldsAPiece: aPosition

	((Xpositions includes: aPosition) or: [Opositions includes: aPosition ]) ifTrue: [self positionAlreadyHoldsAPiece]! !

!testRun: #TerniLapilliTests #test01 stamp: 'fr 10/31/2020 05:24:53'!
ERROR!

!testRun: #TerniLapilliTests #test02 stamp: 'fr 10/31/2020 05:24:53'!
ERROR!

!testRun: #TerniLapilliTests #test03 stamp: 'fr 10/31/2020 05:24:53'!
PASSED!

!testRun: #TerniLapilliTests #test04 stamp: 'fr 10/31/2020 05:24:53'!
FAILURE!

!testRun: #TerniLapilliTests #test05 stamp: 'fr 10/31/2020 05:24:53'!
ERROR!

!testRun: #TerniLapilliTests #test06 stamp: 'fr 10/31/2020 05:24:53'!
ERROR!

!testRun: #TerniLapilliTests #test07 stamp: 'fr 10/31/2020 05:24:53'!
ERROR!

!testRun: #TerniLapilliTests #test08 stamp: 'fr 10/31/2020 05:24:53'!
ERROR!

!testRun: #TerniLapilliTests #test09 stamp: 'fr 10/31/2020 05:24:53'!
ERROR!

!testRun: #TerniLapilliTests #test10 stamp: 'fr 10/31/2020 05:24:53'!
ERROR!

!testRun: #TerniLapilliTests #test11 stamp: 'fr 10/31/2020 05:24:53'!
FAILURE!

!testRun: #TerniLapilliTests #test12 stamp: 'fr 10/31/2020 05:24:53'!
FAILURE!

!testRun: #TerniLapilliTests #test13 stamp: 'fr 10/31/2020 05:24:53'!
FAILURE!

!testRun: #TerniLapilliTests #test14 stamp: 'fr 10/31/2020 05:24:53'!
FAILURE!

!testRun: #TerniLapilliTests #test15 stamp: 'fr 10/31/2020 05:24:53'!
FAILURE!

!testRun: #TerniLapilliTests #test16 stamp: 'fr 10/31/2020 05:24:53'!
FAILURE!

!testRun: #TerniLapilliTests #test17 stamp: 'fr 10/31/2020 05:24:53'!
PASSED!
!TerniLapilli methodsFor: 'initialization' stamp: 'fr 10/31/2020 05:25:18' overrides: 16896425!
initialize 
	
	state _ XAdding for: self.
	positions _ Dictionary new.
	positions add: (#X -> Set new).	
	positions add: (#O -> Set new).	
! !

!methodRemoval: TerniLapilli #initializeStarting: stamp: 'fr 10/31/2020 05:25:23'!
initializeStarting: aPlayerId 
	
	state _ XAdding for: self.
	positions _ Dictionary new.
	positions add: (#X -> Set new).	
	positions add: (#O -> Set new).	
!

!methodRemoval: TerniLapilli class #starting: stamp: 'fr 10/31/2020 05:25:45'!
starting: aPlayerId 
	
	^self new initializeStarting: aPlayerId !
!TerniLapilliTests methodsFor: 'as yet unclassified' stamp: 'fr 10/31/2020 05:25:50' prior: 50870980!
test01

	| terniLapilli |
	terniLapilli _ TerniLapilli new..
	terniLapilli putXAt: 1 @ 1.
	self assert:
		[terniLapilli isOsTurn and: [ terniLapilli isXsTurn not ]].! !
!TerniLapilliTests methodsFor: 'as yet unclassified' stamp: 'fr 10/31/2020 05:25:54' prior: 50870970!
test02

	| terniLapilli |
	terniLapilli _ TerniLapilli new.
	terniLapilli putXAt: 1 @ 1.
	terniLapilli putOAt: 1 @ 2.
	self assert:
		[terniLapilli isXsTurn and: [ terniLapilli isOsTurn not ]].! !
!TerniLapilliTests methodsFor: 'as yet unclassified' stamp: 'fr 10/31/2020 05:25:57' prior: 50871153!
test01

	| terniLapilli |
	terniLapilli _ TerniLapilli new.
	terniLapilli putXAt: 1 @ 1.
	self assert:
		[terniLapilli isOsTurn and: [ terniLapilli isXsTurn not ]].! !
!TerniLapilliTests methodsFor: 'as yet unclassified' stamp: 'fr 10/31/2020 05:26:02' prior: 50868206!
test03

	| terniLapilli |
	terniLapilli _ TerniLapilli new.
	self should: 		[ terniLapilli putOAt: 1 @ 2.] 
		raise: Error  
		withMessageText: TerniLapilli playerXTurnErrorDescription! !
!TerniLapilliTests methodsFor: 'as yet unclassified' stamp: 'fr 10/31/2020 05:26:06' prior: 50868216!
test04

	| terniLapilli |
	terniLapilli _ TerniLapilli new.
	self should: 		[ 	terniLapilli putXAt: 1 @ 2.
				terniLapilli putXAt: 1 @ 1.] 
		raise: Error  
		withMessageText: TerniLapilli playerOTurnErrorDescription! !
!TerniLapilliTests methodsFor: 'as yet unclassified' stamp: 'fr 10/31/2020 05:26:08' prior: 50868521!
test05

	| terniLapilli |
	terniLapilli _ TerniLapilli new.
	terniLapilli putXAt: 1 @ 1.
	
	self assert: [terniLapilli hasXPieceAt: 1@1]! !
!TerniLapilliTests methodsFor: 'as yet unclassified' stamp: 'fr 10/31/2020 05:26:11' prior: 50868402!
test06

	| terniLapilli |
	terniLapilli _ TerniLapilli new.
	terniLapilli putXAt: 1 @ 1.
	terniLapilli putOAt: 1 @ 2.
	
	self assert: [terniLapilli hasOPieceAt: 1@2]! !
!TerniLapilliTests methodsFor: 'as yet unclassified' stamp: 'fr 10/31/2020 05:26:16' prior: 50868573!
test07

	| terniLapilli |
	terniLapilli _ TerniLapilli new.
	terniLapilli putXAt: 1 @ 2.
	
	self assert: [(terniLapilli hasXPieceAt: 1@1) not]! !
!TerniLapilliTests methodsFor: 'as yet unclassified' stamp: 'fr 10/31/2020 05:26:18' prior: 50868653!
test08

	| terniLapilli |
	terniLapilli _ TerniLapilli new.
	terniLapilli putXAt: 1 @ 1.
	terniLapilli putOAt: 1 @ 2.
	
	self assert: [(terniLapilli hasOPieceAt: 1@1) not]! !
!TerniLapilliTests methodsFor: 'as yet unclassified' stamp: 'fr 10/31/2020 05:26:21' prior: 50868715!
test09

	| terniLapilli |
	terniLapilli _ TerniLapilli new.
	terniLapilli putXAt: 1 @ 1.
	terniLapilli putOAt: 1 @ 2.
	terniLapilli putXAt: 1 @ 3.
	
	self assert: [(terniLapilli hasXPieceAt: 1@1) and: [terniLapilli hasXPieceAt: 1@3]]! !
!TerniLapilliTests methodsFor: 'as yet unclassified' stamp: 'fr 10/31/2020 05:26:25' prior: 50868821!
test10

	| terniLapilli |
	terniLapilli _ TerniLapilli new.
	terniLapilli putXAt: 1 @ 1.
	terniLapilli putOAt: 1 @ 2.
	terniLapilli putXAt: 1 @ 3.
	terniLapilli putOAt: 2 @ 1.
	
	self assert: [(terniLapilli hasOPieceAt: 1@2) and: [terniLapilli hasOPieceAt: 2@1]]! !
!TerniLapilliTests methodsFor: 'as yet unclassified' stamp: 'fr 10/31/2020 05:26:28' prior: 50869427!
test11

	| terniLapilli |
	terniLapilli _ TerniLapilli new.	

	self should: [			terniLapilli putXAt: 1 @ 1.
				terniLapilli putOAt: 1 @ 1. ]
		raise: Error
		withMessageText: TerniLapilli positionAlreadyHoldsAPieceErrorDescription! !
!TerniLapilliTests methodsFor: 'as yet unclassified' stamp: 'fr 10/31/2020 05:26:30' prior: 50869415!
test12

	| terniLapilli |
	terniLapilli _ TerniLapilli new.	

	self should: [			terniLapilli putXAt: 1 @ 1.
				terniLapilli putOAt: 1 @ 2.
				terniLapilli putXAt: 1 @ 2. ]
		raise: Error
		withMessageText: TerniLapilli positionAlreadyHoldsAPieceErrorDescription! !
!TerniLapilliTests methodsFor: 'as yet unclassified' stamp: 'fr 10/31/2020 05:26:34' prior: 50869706!
test13

	| terniLapilli |
	terniLapilli _ TerniLapilli new.
	self
		should: [ terniLapilli putXAt: 1 @ 5 ]
		raise: Error
		withMessageText: TerniLapilli positionOutOfBoundsErrorDescription.! !
!TerniLapilliTests methodsFor: 'as yet unclassified' stamp: 'fr 10/31/2020 05:26:36' prior: 50869716!
test14

	| terniLapilli |
	terniLapilli _ TerniLapilli new.
	self
		should: [ 		terniLapilli putXAt: 1 @ 1.
				terniLapilli putOAt: 1 @ 5. ]
		raise: Error
		withMessageText: TerniLapilli positionOutOfBoundsErrorDescription.! !
!TerniLapilliTests methodsFor: 'as yet unclassified' stamp: 'fr 10/31/2020 05:26:39' prior: 50870197!
test15

	| terniLapilli |
	terniLapilli _ TerniLapilli new.
	self
		should: [ 		terniLapilli putXAt: 1 @ 1.
				terniLapilli putOAt: 1 @ 3.
				terniLapilli putXAt: 2 @ 1.
				terniLapilli putOAt: 2 @ 2.
				terniLapilli putXAt: 2 @ 3.
				terniLapilli putOAt: 3 @ 1.
				terniLapilli moveXFrom: 1@1 to: 1@2.
				terniLapilli putOAt: 3 @ 2.
				 ]
		raise: Error
		withMessageText: TerniLapilli piecesLimitExceededErrorDescription.! !
!TerniLapilliTests methodsFor: 'as yet unclassified' stamp: 'fr 10/31/2020 05:26:42' prior: 50869936!
test16

	| terniLapilli |
	terniLapilli _ TerniLapilli new.
	self
		should: [ 		terniLapilli putXAt: 1 @ 1.
				terniLapilli putOAt: 1 @ 2.
				terniLapilli putXAt: 1 @ 3.
				terniLapilli putOAt: 2 @ 1.
				terniLapilli putXAt: 2 @ 2.
				terniLapilli putOAt: 2 @ 3.
				terniLapilli putXAt: 3 @ 2.
				 ]
		raise: Error
		withMessageText: TerniLapilli piecesLimitExceededErrorDescription.! !

!testRun: #TerniLapilliTests #test01 stamp: 'fr 10/31/2020 05:26:49'!
ERROR!

!testRun: #TerniLapilliTests #test02 stamp: 'fr 10/31/2020 05:26:49'!
ERROR!

!testRun: #TerniLapilliTests #test03 stamp: 'fr 10/31/2020 05:26:49'!
PASSED!

!testRun: #TerniLapilliTests #test04 stamp: 'fr 10/31/2020 05:26:49'!
FAILURE!

!testRun: #TerniLapilliTests #test05 stamp: 'fr 10/31/2020 05:26:49'!
ERROR!

!testRun: #TerniLapilliTests #test06 stamp: 'fr 10/31/2020 05:26:49'!
ERROR!

!testRun: #TerniLapilliTests #test07 stamp: 'fr 10/31/2020 05:26:49'!
ERROR!

!testRun: #TerniLapilliTests #test08 stamp: 'fr 10/31/2020 05:26:49'!
ERROR!

!testRun: #TerniLapilliTests #test09 stamp: 'fr 10/31/2020 05:26:49'!
ERROR!

!testRun: #TerniLapilliTests #test10 stamp: 'fr 10/31/2020 05:26:49'!
ERROR!

!testRun: #TerniLapilliTests #test11 stamp: 'fr 10/31/2020 05:26:49'!
FAILURE!

!testRun: #TerniLapilliTests #test12 stamp: 'fr 10/31/2020 05:26:49'!
FAILURE!

!testRun: #TerniLapilliTests #test13 stamp: 'fr 10/31/2020 05:26:49'!
FAILURE!

!testRun: #TerniLapilliTests #test14 stamp: 'fr 10/31/2020 05:26:49'!
FAILURE!

!testRun: #TerniLapilliTests #test15 stamp: 'fr 10/31/2020 05:26:49'!
FAILURE!

!testRun: #TerniLapilliTests #test16 stamp: 'fr 10/31/2020 05:26:49'!
FAILURE!

!testRun: #TerniLapilliTests #test17 stamp: 'fr 10/31/2020 05:26:49'!
PASSED!

!testRun: #TerniLapilliTests #test01 stamp: 'fr 10/31/2020 05:26:55'!
ERROR!

!testRun: #TerniLapilliTests #test01 stamp: 'fr 10/31/2020 05:26:55'!
ERROR!
!TerniLapilli methodsFor: 'actions' stamp: 'fr 10/31/2020 05:27:29' prior: 50870822!
safePutOAt: aPosition 

	(Opositions size = 3) ifTrue: [self error: self class piecesLimitExceededErrorDescription].
	((aPosition x between: 1 and: 3) and: [aPosition y between: 1 and: 3]) ifFalse: [self error: self class positionOutOfBoundsErrorDescription ].
	self failIfPositionAlreadyHoldsAPiece: aPosition.
	(positions at: #O) add: aPosition.
	state _ XAdding for: self
	! !
!TerniLapilli methodsFor: 'actions' stamp: 'fr 10/31/2020 05:27:36' prior: 50870852!
safePutXAt: aPosition 
	
	(Xpositions size = 3) ifTrue: [self error: self class piecesLimitExceededErrorDescription].
	((aPosition x between: 1 and: 3) and: [aPosition y between: 1 and: 3]) ifFalse: [self error: self class positionOutOfBoundsErrorDescription ].
	self failIfPositionAlreadyHoldsAPiece: aPosition.
	(positions at: #X) add: aPosition.
	state _ OAdding for: self! !

!testRun: #TerniLapilliTests #test01 stamp: 'fr 10/31/2020 05:27:38'!
ERROR!

!testRun: #TerniLapilliTests #test02 stamp: 'fr 10/31/2020 05:27:38'!
ERROR!

!testRun: #TerniLapilliTests #test03 stamp: 'fr 10/31/2020 05:27:38'!
PASSED!

!testRun: #TerniLapilliTests #test04 stamp: 'fr 10/31/2020 05:27:38'!
FAILURE!

!testRun: #TerniLapilliTests #test05 stamp: 'fr 10/31/2020 05:27:38'!
ERROR!

!testRun: #TerniLapilliTests #test06 stamp: 'fr 10/31/2020 05:27:38'!
ERROR!

!testRun: #TerniLapilliTests #test07 stamp: 'fr 10/31/2020 05:27:38'!
ERROR!

!testRun: #TerniLapilliTests #test08 stamp: 'fr 10/31/2020 05:27:38'!
ERROR!

!testRun: #TerniLapilliTests #test09 stamp: 'fr 10/31/2020 05:27:38'!
ERROR!

!testRun: #TerniLapilliTests #test10 stamp: 'fr 10/31/2020 05:27:38'!
ERROR!

!testRun: #TerniLapilliTests #test11 stamp: 'fr 10/31/2020 05:27:38'!
FAILURE!

!testRun: #TerniLapilliTests #test12 stamp: 'fr 10/31/2020 05:27:38'!
FAILURE!

!testRun: #TerniLapilliTests #test13 stamp: 'fr 10/31/2020 05:27:38'!
FAILURE!

!testRun: #TerniLapilliTests #test14 stamp: 'fr 10/31/2020 05:27:38'!
FAILURE!

!testRun: #TerniLapilliTests #test15 stamp: 'fr 10/31/2020 05:27:38'!
FAILURE!

!testRun: #TerniLapilliTests #test16 stamp: 'fr 10/31/2020 05:27:38'!
FAILURE!

!testRun: #TerniLapilliTests #test17 stamp: 'fr 10/31/2020 05:27:38'!
PASSED!

!testRun: #TerniLapilliTests #test01 stamp: 'fr 10/31/2020 05:27:41'!
ERROR!

!testRun: #TerniLapilliTests #test01 stamp: 'fr 10/31/2020 05:27:41'!
ERROR!
!TerniLapilli methodsFor: 'actions' stamp: 'fr 10/31/2020 05:28:39' prior: 50871382!
safePutOAt: aPosition 

	(Opositions size = 3) ifTrue: [self error: self class piecesLimitExceededErrorDescription].
	((aPosition x between: 1 and: 3) and: [aPosition y between: 1 and: 3]) ifFalse: [self error: self class positionOutOfBoundsErrorDescription ].
	self failIfPositionAlreadyHoldsAPiece: aPosition.
	(positions at: #O) add: aPosition.
	state _ XAdding for: self
	! !
!TerniLapilli methodsFor: 'game state' stamp: 'fr 10/31/2020 05:29:29'!
positionsFor: aPlayerId! !
!TerniLapilli methodsFor: 'game state' stamp: 'fr 10/31/2020 05:29:37' prior: 50871474!
positionsFor: aPlayerId
	
	^positions at: aPlayerId ! !
!TerniLapilli methodsFor: 'game state' stamp: 'fr 10/31/2020 05:29:57' prior: 50871070!
player: aPlayer hasPieceAt: aPosition	
	
	^(self positionsFor: aPlayer) includes: aPosition! !
!TerniLapilli methodsFor: 'actions' stamp: 'fr 10/31/2020 05:30:30' prior: 50871459!
safePutOAt: aPosition 

	((self positionsFor: #O) size = 3) ifTrue: [self error: self class piecesLimitExceededErrorDescription].
	((aPosition x between: 1 and: 3) and: [aPosition y between: 1 and: 3]) ifFalse: [self error: self class positionOutOfBoundsErrorDescription ].
	self failIfPositionAlreadyHoldsAPiece: aPosition.
	(self positionsFor: #O) add: aPosition.
	state _ XAdding for: self
	! !
!TerniLapilli methodsFor: 'actions' stamp: 'fr 10/31/2020 05:30:46' prior: 50871397!
safePutXAt: aPosition 
	
	((self positionsFor: #X) size = 3) ifTrue: [self error: self class piecesLimitExceededErrorDescription].
	((aPosition x between: 1 and: 3) and: [aPosition y between: 1 and: 3]) ifFalse: [self error: self class positionOutOfBoundsErrorDescription ].
	self failIfPositionAlreadyHoldsAPiece: aPosition.
	(self positionsFor: #X) add: aPosition.
	state _ OAdding for: self! !

!testRun: #TerniLapilliTests #test01 stamp: 'fr 10/31/2020 05:30:53'!
ERROR!

!testRun: #TerniLapilliTests #test02 stamp: 'fr 10/31/2020 05:30:53'!
ERROR!

!testRun: #TerniLapilliTests #test03 stamp: 'fr 10/31/2020 05:30:53'!
PASSED!

!testRun: #TerniLapilliTests #test04 stamp: 'fr 10/31/2020 05:30:53'!
FAILURE!

!testRun: #TerniLapilliTests #test05 stamp: 'fr 10/31/2020 05:30:53'!
ERROR!

!testRun: #TerniLapilliTests #test06 stamp: 'fr 10/31/2020 05:30:53'!
ERROR!

!testRun: #TerniLapilliTests #test07 stamp: 'fr 10/31/2020 05:30:53'!
ERROR!

!testRun: #TerniLapilliTests #test08 stamp: 'fr 10/31/2020 05:30:53'!
ERROR!

!testRun: #TerniLapilliTests #test09 stamp: 'fr 10/31/2020 05:30:53'!
ERROR!

!testRun: #TerniLapilliTests #test10 stamp: 'fr 10/31/2020 05:30:53'!
ERROR!

!testRun: #TerniLapilliTests #test11 stamp: 'fr 10/31/2020 05:30:53'!
FAILURE!

!testRun: #TerniLapilliTests #test12 stamp: 'fr 10/31/2020 05:30:53'!
FAILURE!

!testRun: #TerniLapilliTests #test13 stamp: 'fr 10/31/2020 05:30:53'!
PASSED!

!testRun: #TerniLapilliTests #test14 stamp: 'fr 10/31/2020 05:30:53'!
FAILURE!

!testRun: #TerniLapilliTests #test15 stamp: 'fr 10/31/2020 05:30:53'!
FAILURE!

!testRun: #TerniLapilliTests #test16 stamp: 'fr 10/31/2020 05:30:53'!
FAILURE!

!testRun: #TerniLapilliTests #test17 stamp: 'fr 10/31/2020 05:30:53'!
PASSED!

!testRun: #TerniLapilliTests #test01 stamp: 'fr 10/31/2020 05:30:56'!
ERROR!

!testRun: #TerniLapilliTests #test01 stamp: 'fr 10/31/2020 05:30:56'!
ERROR!
!TerniLapilli methodsFor: 'state checking' stamp: 'fr 10/31/2020 05:31:29' prior: 50871082!
failIfPositionAlreadyHoldsAPiece: aPosition

	(((self positionsFor: #X) includes: aPosition) or: [Opositions includes: aPosition ]) ifTrue: [self positionAlreadyHoldsAPiece]! !
!TerniLapilli methodsFor: 'state checking' stamp: 'fr 10/31/2020 05:31:38' prior: 50871568!
failIfPositionAlreadyHoldsAPiece: aPosition

	(((self positionsFor: #X) includes: aPosition) or: [(self positionsFor: #O) includes: aPosition ]) ifTrue: [self positionAlreadyHoldsAPiece]! !

!testRun: #TerniLapilliTests #test01 stamp: 'fr 10/31/2020 05:31:47'!
PASSED!

!testRun: #TerniLapilliTests #test01 stamp: 'fr 10/31/2020 05:31:49'!
PASSED!

!testRun: #TerniLapilliTests #test02 stamp: 'fr 10/31/2020 05:31:49'!
PASSED!

!testRun: #TerniLapilliTests #test03 stamp: 'fr 10/31/2020 05:31:49'!
PASSED!

!testRun: #TerniLapilliTests #test04 stamp: 'fr 10/31/2020 05:31:49'!
PASSED!

!testRun: #TerniLapilliTests #test05 stamp: 'fr 10/31/2020 05:31:49'!
PASSED!

!testRun: #TerniLapilliTests #test06 stamp: 'fr 10/31/2020 05:31:49'!
PASSED!

!testRun: #TerniLapilliTests #test07 stamp: 'fr 10/31/2020 05:31:49'!
PASSED!

!testRun: #TerniLapilliTests #test08 stamp: 'fr 10/31/2020 05:31:49'!
PASSED!

!testRun: #TerniLapilliTests #test09 stamp: 'fr 10/31/2020 05:31:49'!
PASSED!

!testRun: #TerniLapilliTests #test10 stamp: 'fr 10/31/2020 05:31:49'!
PASSED!

!testRun: #TerniLapilliTests #test11 stamp: 'fr 10/31/2020 05:31:49'!
PASSED!

!testRun: #TerniLapilliTests #test12 stamp: 'fr 10/31/2020 05:31:49'!
PASSED!

!testRun: #TerniLapilliTests #test13 stamp: 'fr 10/31/2020 05:31:49'!
PASSED!

!testRun: #TerniLapilliTests #test14 stamp: 'fr 10/31/2020 05:31:49'!
PASSED!

!testRun: #TerniLapilliTests #test15 stamp: 'fr 10/31/2020 05:31:49'!
PASSED!

!testRun: #TerniLapilliTests #test16 stamp: 'fr 10/31/2020 05:31:49'!
PASSED!

!testRun: #TerniLapilliTests #test17 stamp: 'fr 10/31/2020 05:31:49'!
PASSED!

----SNAPSHOT----(31 October 2020 05:35:32) CuisUniversity-4384.image priorSource: 17259861!
!TerniLapilliTests methodsFor: 'as yet unclassified' stamp: 'fr 10/31/2020 05:38:42' prior: 50870378!
test17

	| terniLapilli |
	terniLapilli _ TerniLapilli starting: #X.
	terniLapilli putXAt: 1 @ 1 
			 ;putOAt: 1 @ 3
			 ;putXAt: 2 @ 1
			 ;putOAt: 2 @ 2
			 ;putXAt: 2 @ 3
			 ;putOAt: 3 @ 2
			 ;moveXFrom: 1@1 to: 1@2.
			
	self assert: [(terniLapilli hasXPieceAt: 1@2) and: [(terniLapilli hasXPieceAt: 1@1) not]]! !

!testRun: #TerniLapilliTests #test17 stamp: 'fr 10/31/2020 05:38:44'!
ERROR!
!TerniLapilliTests methodsFor: 'as yet unclassified' stamp: 'fr 10/31/2020 05:38:51' prior: 50871634!
test17

	| terniLapilli |
	terniLapilli _ TerniLapilli new.
	terniLapilli putXAt: 1 @ 1 
			 ;putOAt: 1 @ 3
			 ;putXAt: 2 @ 1
			 ;putOAt: 2 @ 2
			 ;putXAt: 2 @ 3
			 ;putOAt: 3 @ 2
			 ;moveXFrom: 1@1 to: 1@2.
			
	self assert: [(terniLapilli hasXPieceAt: 1@2) and: [(terniLapilli hasXPieceAt: 1@1) not]]! !

!testRun: #TerniLapilliTests #test17 stamp: 'fr 10/31/2020 05:38:52'!
FAILURE!
!TerniLapilli methodsFor: 'actions' stamp: 'fr 10/31/2020 05:39:34' prior: 50871025!
moveXFrom: currentPosition to: newPosition
	
	
	state _ OAdding for: self
	
	! !
!TerniLapilli methodsFor: 'actions' stamp: 'fr 10/31/2020 05:42:26' prior: 50871665!
moveXFrom: currentPosition to: newPosition
	
	(self positionsFor: #X) remove: currentPosition ifAbsent: [self error: self class positionIsNotUnderPlayerDomination].
	state _ OAdding for: self
	
	! !
!TerniLapilli methodsFor: 'actions' stamp: 'fr 10/31/2020 05:42:57' prior: 50871671!
moveXFrom: currentPosition to: newPosition
	
	(self positionsFor: #X) remove: currentPosition ifAbsent: [self error: self class positionIsNotUnderPlayerDomination].
	(self positionsFor: #X) add: newPosition.
	state _ OAdding for: self
	
	! !

!testRun: #TerniLapilliTests #test17 stamp: 'fr 10/31/2020 05:43:01'!
PASSED!

!testRun: #TerniLapilliTests #test01 stamp: 'fr 10/31/2020 05:43:01'!
PASSED!

!testRun: #TerniLapilliTests #test02 stamp: 'fr 10/31/2020 05:43:01'!
PASSED!

!testRun: #TerniLapilliTests #test03 stamp: 'fr 10/31/2020 05:43:01'!
PASSED!

!testRun: #TerniLapilliTests #test04 stamp: 'fr 10/31/2020 05:43:01'!
PASSED!

!testRun: #TerniLapilliTests #test05 stamp: 'fr 10/31/2020 05:43:01'!
PASSED!

!testRun: #TerniLapilliTests #test06 stamp: 'fr 10/31/2020 05:43:01'!
PASSED!

!testRun: #TerniLapilliTests #test07 stamp: 'fr 10/31/2020 05:43:01'!
PASSED!

!testRun: #TerniLapilliTests #test08 stamp: 'fr 10/31/2020 05:43:01'!
PASSED!

!testRun: #TerniLapilliTests #test09 stamp: 'fr 10/31/2020 05:43:01'!
PASSED!

!testRun: #TerniLapilliTests #test10 stamp: 'fr 10/31/2020 05:43:01'!
PASSED!

!testRun: #TerniLapilliTests #test11 stamp: 'fr 10/31/2020 05:43:01'!
PASSED!

!testRun: #TerniLapilliTests #test12 stamp: 'fr 10/31/2020 05:43:01'!
PASSED!

!testRun: #TerniLapilliTests #test13 stamp: 'fr 10/31/2020 05:43:01'!
PASSED!

!testRun: #TerniLapilliTests #test14 stamp: 'fr 10/31/2020 05:43:01'!
PASSED!

!testRun: #TerniLapilliTests #test15 stamp: 'fr 10/31/2020 05:43:01'!
PASSED!

!testRun: #TerniLapilliTests #test16 stamp: 'fr 10/31/2020 05:43:01'!
PASSED!

!testRun: #TerniLapilliTests #test17 stamp: 'fr 10/31/2020 05:43:01'!
PASSED!

!testRun: #TerniLapilliTests #test17 stamp: 'fr 10/31/2020 05:43:04'!
PASSED!

!testRun: #TerniLapilliTests #test01 stamp: 'fr 10/31/2020 05:43:04'!
PASSED!

!testRun: #TerniLapilliTests #test02 stamp: 'fr 10/31/2020 05:43:04'!
PASSED!

!testRun: #TerniLapilliTests #test03 stamp: 'fr 10/31/2020 05:43:04'!
PASSED!

!testRun: #TerniLapilliTests #test04 stamp: 'fr 10/31/2020 05:43:04'!
PASSED!

!testRun: #TerniLapilliTests #test05 stamp: 'fr 10/31/2020 05:43:04'!
PASSED!

!testRun: #TerniLapilliTests #test06 stamp: 'fr 10/31/2020 05:43:04'!
PASSED!

!testRun: #TerniLapilliTests #test07 stamp: 'fr 10/31/2020 05:43:04'!
PASSED!

!testRun: #TerniLapilliTests #test08 stamp: 'fr 10/31/2020 05:43:05'!
PASSED!

!testRun: #TerniLapilliTests #test09 stamp: 'fr 10/31/2020 05:43:05'!
PASSED!

!testRun: #TerniLapilliTests #test10 stamp: 'fr 10/31/2020 05:43:05'!
PASSED!

!testRun: #TerniLapilliTests #test11 stamp: 'fr 10/31/2020 05:43:05'!
PASSED!

!testRun: #TerniLapilliTests #test12 stamp: 'fr 10/31/2020 05:43:05'!
PASSED!

!testRun: #TerniLapilliTests #test13 stamp: 'fr 10/31/2020 05:43:05'!
PASSED!

!testRun: #TerniLapilliTests #test14 stamp: 'fr 10/31/2020 05:43:05'!
PASSED!

!testRun: #TerniLapilliTests #test15 stamp: 'fr 10/31/2020 05:43:05'!
PASSED!

!testRun: #TerniLapilliTests #test16 stamp: 'fr 10/31/2020 05:43:05'!
PASSED!

!testRun: #TerniLapilliTests #test17 stamp: 'fr 10/31/2020 05:43:05'!
PASSED!
!TerniLapilliTests methodsFor: 'as yet unclassified' stamp: 'fr 10/31/2020 11:59:14'!
test18

	| terniLapilli |
	terniLapilli _ TerniLapilli new.
	terniLapilli putXAt: 1 @ 1 
			 ;putOAt: 1 @ 3
			 ;putXAt: 2 @ 1
			 ;putOAt: 2 @ 2
			 ;putXAt: 2 @ 3
			 ;putOAt: 3 @ 2
			 ;moveXFrom: 1@1 to: 1@2.
			
	self assert: [(terniLapilli hasXPieceAt: 1@2) and: [(terniLapilli hasXPieceAt: 1@1) not]]! !
!TerniLapilliTests methodsFor: 'as yet unclassified' stamp: 'fr 10/31/2020 12:00:17' prior: 50871780!
test18

	| terniLapilli |
	terniLapilli _ TerniLapilli new.
	terniLapilli putXAt: 1 @ 1 
			 ;putOAt: 1 @ 3
			 ;putXAt: 2 @ 1
			 ;putOAt: 2 @ 2
			 ;putXAt: 2 @ 3
			 ;putOAt: 3 @ 2
			 ;moveXFrom: 1@1 to: 1@2
			 ;moveOFrom: 1@3 to: 2@3.
			
	self assert: [(terniLapilli hasOPieceAt: 2@3) and: [(terniLapilli hasXPieceAt: 1@3) not]]! !

!testRun: #TerniLapilliTests #test18 stamp: 'fr 10/31/2020 12:00:22'!
ERROR!
!TerniLapilli methodsFor: 'game state' stamp: 'fr 10/31/2020 12:00:37'!
moveOFrom: aPoint to: aPoint2 
	self shouldBeImplemented.! !
!TerniLapilli methodsFor: 'game state' stamp: 'fr 10/31/2020 12:01:58' prior: 50871809!
moveOFrom: currentPosition to: newPosition 
	
	(self positionsFor: #X) remove: currentPosition ifAbsent: [self error: self class positionIsNotUnderPlayerDomination].
	(self positionsFor: #X) add: newPosition.
	state _ OAdding for: self	
! !
!TerniLapilli methodsFor: 'game state' stamp: 'fr 10/31/2020 12:02:09' prior: 50871814!
moveOFrom: currentPosition to: newPosition 
	
	(self positionsFor: #O) remove: currentPosition ifAbsent: [self error: self class positionIsNotUnderPlayerDomination].
	(self positionsFor: #O) add: newPosition.
	state _ OAdding for: self	
! !
!TerniLapilli methodsFor: 'game state' stamp: 'fr 10/31/2020 12:02:13' prior: 50871825!
moveOFrom: currentPosition to: newPosition 
	
	(self positionsFor: #O) remove: currentPosition ifAbsent: [self error: self class positionIsNotUnderPlayerDomination].
	(self positionsFor: #O) add: newPosition.
	state _ XAdding for: self	
! !

!testRun: #TerniLapilliTests #test18 stamp: 'fr 10/31/2020 12:02:21'!
PASSED!

!testRun: #TerniLapilliTests #test01 stamp: 'fr 10/31/2020 12:02:21'!
PASSED!

!testRun: #TerniLapilliTests #test02 stamp: 'fr 10/31/2020 12:02:21'!
PASSED!

!testRun: #TerniLapilliTests #test03 stamp: 'fr 10/31/2020 12:02:21'!
PASSED!

!testRun: #TerniLapilliTests #test04 stamp: 'fr 10/31/2020 12:02:21'!
PASSED!

!testRun: #TerniLapilliTests #test05 stamp: 'fr 10/31/2020 12:02:21'!
PASSED!

!testRun: #TerniLapilliTests #test06 stamp: 'fr 10/31/2020 12:02:21'!
PASSED!

!testRun: #TerniLapilliTests #test07 stamp: 'fr 10/31/2020 12:02:21'!
PASSED!

!testRun: #TerniLapilliTests #test08 stamp: 'fr 10/31/2020 12:02:21'!
PASSED!

!testRun: #TerniLapilliTests #test09 stamp: 'fr 10/31/2020 12:02:21'!
PASSED!

!testRun: #TerniLapilliTests #test10 stamp: 'fr 10/31/2020 12:02:21'!
PASSED!

!testRun: #TerniLapilliTests #test11 stamp: 'fr 10/31/2020 12:02:21'!
PASSED!

!testRun: #TerniLapilliTests #test12 stamp: 'fr 10/31/2020 12:02:21'!
PASSED!

!testRun: #TerniLapilliTests #test13 stamp: 'fr 10/31/2020 12:02:21'!
PASSED!

!testRun: #TerniLapilliTests #test14 stamp: 'fr 10/31/2020 12:02:21'!
PASSED!

!testRun: #TerniLapilliTests #test15 stamp: 'fr 10/31/2020 12:02:21'!
PASSED!

!testRun: #TerniLapilliTests #test16 stamp: 'fr 10/31/2020 12:02:21'!
PASSED!

!testRun: #TerniLapilliTests #test17 stamp: 'fr 10/31/2020 12:02:21'!
PASSED!

!testRun: #TerniLapilliTests #test18 stamp: 'fr 10/31/2020 12:02:21'!
PASSED!
!TerniLapilliTests methodsFor: 'as yet unclassified' stamp: 'fr 10/31/2020 12:02:30'!
test19

	| terniLapilli |
	terniLapilli _ TerniLapilli new.
	terniLapilli putXAt: 1 @ 1 
			 ;putOAt: 1 @ 3
			 ;putXAt: 2 @ 1
			 ;putOAt: 2 @ 2
			 ;putXAt: 2 @ 3
			 ;putOAt: 3 @ 2
			 ;moveXFrom: 1@1 to: 1@2
			 ;moveOFrom: 1@3 to: 2@3.
			
	self assert: [(terniLapilli hasOPieceAt: 2@3) and: [(terniLapilli hasXPieceAt: 1@3) not]]! !
!TerniLapilliTests methodsFor: 'as yet unclassified' stamp: 'fr 10/31/2020 12:04:01' prior: 50871894!
test19

	| terniLapilli |
	terniLapilli _ TerniLapilli new.
		
	self  should: [terniLapilli moveXFrom: 1@1 to: 1@2.] 
		raise: Error 
		withMessageText: TerniLapilli ! !
!TerniLapilliTests methodsFor: 'as yet unclassified' stamp: 'fr 10/31/2020 12:04:48' prior: 50871908!
test19

	| terniLapilli |
	terniLapilli _ TerniLapilli new.
		
	self  should: [terniLapilli moveXFrom: 1@1 to: 1@2.] 
		raise: Error 
		withMessageText: TerniLapilli canNotMoveBeforeAddingThreePiecesErrorDescription! !

!testRun: #TerniLapilliTests #test19 stamp: 'fr 10/31/2020 12:04:57'!
ERROR!
!TerniLapilli class methodsFor: 'error message descriptions' stamp: 'fr 10/31/2020 12:05:08'!
canNotMoveBeforeAddingThreePiecesErrorDescription
	self shouldBeImplemented.! !
!TerniLapilli class methodsFor: 'error message descriptions' stamp: 'fr 10/31/2020 12:05:40' prior: 50871930!
canNotMoveBeforeAddingThreePiecesErrorDescription
	
	^'Can not move before adding three pieces'! !

!testRun: #TerniLapilliTests #test19 stamp: 'fr 10/31/2020 12:05:42'!
FAILURE!
!TerniLapilli methodsFor: 'actions' stamp: 'fr 10/31/2020 12:07:07' prior: 50871680!
moveXFrom: currentPosition to: newPosition
	
	((self positionsFor: #X) size = 3) ifFalse: [self canNotMoveBeforeAddingThreePieces].
	(self positionsFor: #X) remove: currentPosition ifAbsent: [self error: self class positionIsNotUnderPlayerDomination].
	(self positionsFor: #X) add: newPosition.
	state _ OAdding for: self
	
	! !

!testRun: #TerniLapilliTests #test19 stamp: 'fr 10/31/2020 12:07:10'!
FAILURE!
!TerniLapilli methodsFor: 'actions' stamp: 'fr 10/31/2020 12:07:36' prior: 50871945!
moveXFrom: currentPosition to: newPosition
	
	((self positionsFor: #X) size = 3) ifFalse: [self error: self class canNotMoveBeforeAddingThreePiecesErrorDescription ].
	(self positionsFor: #X) remove: currentPosition ifAbsent: [self error: self class positionIsNotUnderPlayerDomination].
	(self positionsFor: #X) add: newPosition.
	state _ OAdding for: self
	
	! !

!testRun: #TerniLapilliTests #test19 stamp: 'fr 10/31/2020 12:07:37'!
PASSED!

!testRun: #TerniLapilliTests #test01 stamp: 'fr 10/31/2020 12:07:37'!
PASSED!

!testRun: #TerniLapilliTests #test02 stamp: 'fr 10/31/2020 12:07:38'!
PASSED!

!testRun: #TerniLapilliTests #test03 stamp: 'fr 10/31/2020 12:07:38'!
PASSED!

!testRun: #TerniLapilliTests #test04 stamp: 'fr 10/31/2020 12:07:38'!
PASSED!

!testRun: #TerniLapilliTests #test05 stamp: 'fr 10/31/2020 12:07:38'!
PASSED!

!testRun: #TerniLapilliTests #test06 stamp: 'fr 10/31/2020 12:07:38'!
PASSED!

!testRun: #TerniLapilliTests #test07 stamp: 'fr 10/31/2020 12:07:38'!
PASSED!

!testRun: #TerniLapilliTests #test08 stamp: 'fr 10/31/2020 12:07:38'!
PASSED!

!testRun: #TerniLapilliTests #test09 stamp: 'fr 10/31/2020 12:07:38'!
PASSED!

!testRun: #TerniLapilliTests #test10 stamp: 'fr 10/31/2020 12:07:38'!
PASSED!

!testRun: #TerniLapilliTests #test11 stamp: 'fr 10/31/2020 12:07:38'!
PASSED!

!testRun: #TerniLapilliTests #test12 stamp: 'fr 10/31/2020 12:07:38'!
PASSED!

!testRun: #TerniLapilliTests #test13 stamp: 'fr 10/31/2020 12:07:38'!
PASSED!

!testRun: #TerniLapilliTests #test14 stamp: 'fr 10/31/2020 12:07:38'!
PASSED!

!testRun: #TerniLapilliTests #test15 stamp: 'fr 10/31/2020 12:07:38'!
PASSED!

!testRun: #TerniLapilliTests #test16 stamp: 'fr 10/31/2020 12:07:38'!
PASSED!

!testRun: #TerniLapilliTests #test17 stamp: 'fr 10/31/2020 12:07:38'!
PASSED!

!testRun: #TerniLapilliTests #test18 stamp: 'fr 10/31/2020 12:07:38'!
PASSED!

!testRun: #TerniLapilliTests #test19 stamp: 'fr 10/31/2020 12:07:38'!
PASSED!
!TerniLapilliTests methodsFor: 'as yet unclassified' stamp: 'fr 10/31/2020 12:07:56'!
test20

	| terniLapilli |
	terniLapilli _ TerniLapilli new.
		
	self  should: [terniLapilli moveXFrom: 1@1 to: 1@2.] 
		raise: Error 
		withMessageText: TerniLapilli canNotMoveBeforeAddingThreePiecesErrorDescription! !
!TerniLapilliTests methodsFor: 'as yet unclassified' stamp: 'fr 10/31/2020 12:08:27' prior: 50872025!
test20

	| terniLapilli |
	terniLapilli _ TerniLapilli new.
		
	self  should: [terniLapilli putXAt: 1@1 ;moveOFrom: 1@1 to: 1@2.] 
		raise: Error 
		withMessageText: TerniLapilli canNotMoveBeforeAddingThreePiecesErrorDescription! !

!testRun: #TerniLapilliTests #test20 stamp: 'fr 10/31/2020 12:08:29'!
FAILURE!
!TerniLapilli methodsFor: 'game state' stamp: 'fr 10/31/2020 12:09:19' prior: 50871836!
moveOFrom: currentPosition to: newPosition 
	
	((self positionsFor: #O) size = 3) ifFalse: [self error: self class canNotMoveBeforeAddingThreePiecesErrorDescription].
	(self positionsFor: #O) remove: currentPosition ifAbsent: [self error: self class positionIsNotUnderPlayerDomination].
	(self positionsFor: #O) add: newPosition.
	state _ XAdding for: self	
! !

!testRun: #TerniLapilliTests #test20 stamp: 'fr 10/31/2020 12:09:44'!
PASSED!

!testRun: #TerniLapilliTests #test01 stamp: 'fr 10/31/2020 12:09:44'!
PASSED!

!testRun: #TerniLapilliTests #test02 stamp: 'fr 10/31/2020 12:09:44'!
PASSED!

!testRun: #TerniLapilliTests #test03 stamp: 'fr 10/31/2020 12:09:44'!
PASSED!

!testRun: #TerniLapilliTests #test04 stamp: 'fr 10/31/2020 12:09:44'!
PASSED!

!testRun: #TerniLapilliTests #test05 stamp: 'fr 10/31/2020 12:09:44'!
PASSED!

!testRun: #TerniLapilliTests #test06 stamp: 'fr 10/31/2020 12:09:44'!
PASSED!

!testRun: #TerniLapilliTests #test07 stamp: 'fr 10/31/2020 12:09:44'!
PASSED!

!testRun: #TerniLapilliTests #test08 stamp: 'fr 10/31/2020 12:09:44'!
PASSED!

!testRun: #TerniLapilliTests #test09 stamp: 'fr 10/31/2020 12:09:44'!
PASSED!

!testRun: #TerniLapilliTests #test10 stamp: 'fr 10/31/2020 12:09:44'!
PASSED!

!testRun: #TerniLapilliTests #test11 stamp: 'fr 10/31/2020 12:09:44'!
PASSED!

!testRun: #TerniLapilliTests #test12 stamp: 'fr 10/31/2020 12:09:44'!
PASSED!

!testRun: #TerniLapilliTests #test13 stamp: 'fr 10/31/2020 12:09:44'!
PASSED!

!testRun: #TerniLapilliTests #test14 stamp: 'fr 10/31/2020 12:09:44'!
PASSED!

!testRun: #TerniLapilliTests #test15 stamp: 'fr 10/31/2020 12:09:44'!
PASSED!

!testRun: #TerniLapilliTests #test16 stamp: 'fr 10/31/2020 12:09:44'!
PASSED!

!testRun: #TerniLapilliTests #test17 stamp: 'fr 10/31/2020 12:09:44'!
PASSED!

!testRun: #TerniLapilliTests #test18 stamp: 'fr 10/31/2020 12:09:44'!
PASSED!

!testRun: #TerniLapilliTests #test19 stamp: 'fr 10/31/2020 12:09:44'!
PASSED!

!testRun: #TerniLapilliTests #test20 stamp: 'fr 10/31/2020 12:09:44'!
PASSED!
!TerniLapilliTests methodsFor: 'as yet unclassified' stamp: 'fr 10/31/2020 12:09:48'!
test21

	| terniLapilli |
	terniLapilli _ TerniLapilli new.
		
	self  should: [terniLapilli putXAt: 1@1 ;moveOFrom: 1@1 to: 1@2.] 
		raise: Error 
		withMessageText: TerniLapilli canNotMoveBeforeAddingThreePiecesErrorDescription! !
!TerniLapilliTests methodsFor: 'as yet unclassified' stamp: 'fr 10/31/2020 12:10:40' prior: 50872115!
test21

	| terniLapilli |
	terniLapilli _ TerniLapilli new.
		
	self  should: [			terniLapilli putXAt: 1 @ 1 
						 ;putOAt: 1 @ 3
						 ;putXAt: 2 @ 1
						 ;putOAt: 2 @ 2
						 ;putXAt: 2 @ 3
						 ;putOAt: 3 @ 2
						 ;moveXFrom: 1@1 to: 1@2.] 
		raise: Error 
		withMessageText: TerniLapilli canNotMoveBeforeAddingThreePiecesErrorDescription! !
!TerniLapilliTests methodsFor: 'as yet unclassified' stamp: 'fr 10/31/2020 12:12:13' prior: 50872126!
test21

	| terniLapilli |
	terniLapilli _ TerniLapilli new.
		
	self  should: [			terniLapilli putXAt: 1 @ 1 
						 ;putOAt: 1 @ 3
						 ;putXAt: 2 @ 1
						 ;putOAt: 2 @ 2
						 ;putXAt: 2 @ 3
						 ;putOAt: 3 @ 2
						 ;moveXFrom: 3@3 to: 3@2.] 
		raise: Error 
		withMessageText: TerniLapilli canNotMoveBeforeAddingThreePiecesErrorDescription! !
!TerniLapilliTests methodsFor: 'as yet unclassified' stamp: 'fr 10/31/2020 12:13:06' prior: 50872141!
test21

	| terniLapilli |
	terniLapilli _ TerniLapilli new.
		
	self  should: [			terniLapilli putXAt: 1 @ 1 
						 ;putOAt: 1 @ 3
						 ;putXAt: 2 @ 1
						 ;putOAt: 2 @ 2
						 ;putXAt: 2 @ 3
						 ;putOAt: 3 @ 2
						 ;moveXFrom: 3@3 to: 3@2.] 
		raise: Error 
		withMessageText: TerniLapilli positionIsNotUnderPlayersControlErrorDescription! !

!testRun: #TerniLapilliTests #test21 stamp: 'fr 10/31/2020 12:13:13'!
ERROR!
!TerniLapilli class methodsFor: 'error message descriptions' stamp: 'fr 10/31/2020 12:13:22'!
positionIsNotUnderPlayersControlErrorDescription
	self shouldBeImplemented.! !
!TerniLapilli class methodsFor: 'error message descriptions' stamp: 'fr 10/31/2020 12:13:41' prior: 50872173!
positionIsNotUnderPlayersControlErrorDescription
	
	^'Position is not under players control'! !

!testRun: #TerniLapilliTests #test21 stamp: 'fr 10/31/2020 12:13:42'!
FAILURE!
!TerniLapilli methodsFor: 'actions' stamp: 'fr 10/31/2020 12:14:27' prior: 50871961!
moveXFrom: currentPosition to: newPosition
	
	((self positionsFor: #X) size = 3) ifFalse: [self error: self class canNotMoveBeforeAddingThreePiecesErrorDescription ].
	(self positionsFor: #X) remove: currentPosition ifAbsent: [self error: self class positionIsNotUnderPlayersControlErrorDescription].
	(self positionsFor: #X) add: newPosition.
	state _ OAdding for: self
	
	! !

!testRun: #TerniLapilliTests #test21 stamp: 'fr 10/31/2020 12:14:29'!
PASSED!

!testRun: #TerniLapilliTests #test01 stamp: 'fr 10/31/2020 12:14:29'!
PASSED!

!testRun: #TerniLapilliTests #test02 stamp: 'fr 10/31/2020 12:14:29'!
PASSED!

!testRun: #TerniLapilliTests #test03 stamp: 'fr 10/31/2020 12:14:29'!
PASSED!

!testRun: #TerniLapilliTests #test04 stamp: 'fr 10/31/2020 12:14:29'!
PASSED!

!testRun: #TerniLapilliTests #test05 stamp: 'fr 10/31/2020 12:14:29'!
PASSED!

!testRun: #TerniLapilliTests #test06 stamp: 'fr 10/31/2020 12:14:29'!
PASSED!

!testRun: #TerniLapilliTests #test07 stamp: 'fr 10/31/2020 12:14:29'!
PASSED!

!testRun: #TerniLapilliTests #test08 stamp: 'fr 10/31/2020 12:14:29'!
PASSED!

!testRun: #TerniLapilliTests #test09 stamp: 'fr 10/31/2020 12:14:29'!
PASSED!

!testRun: #TerniLapilliTests #test10 stamp: 'fr 10/31/2020 12:14:29'!
PASSED!

!testRun: #TerniLapilliTests #test11 stamp: 'fr 10/31/2020 12:14:29'!
PASSED!

!testRun: #TerniLapilliTests #test12 stamp: 'fr 10/31/2020 12:14:29'!
PASSED!

!testRun: #TerniLapilliTests #test13 stamp: 'fr 10/31/2020 12:14:29'!
PASSED!

!testRun: #TerniLapilliTests #test14 stamp: 'fr 10/31/2020 12:14:29'!
PASSED!

!testRun: #TerniLapilliTests #test15 stamp: 'fr 10/31/2020 12:14:29'!
PASSED!

!testRun: #TerniLapilliTests #test16 stamp: 'fr 10/31/2020 12:14:29'!
PASSED!

!testRun: #TerniLapilliTests #test17 stamp: 'fr 10/31/2020 12:14:29'!
PASSED!

!testRun: #TerniLapilliTests #test18 stamp: 'fr 10/31/2020 12:14:29'!
PASSED!

!testRun: #TerniLapilliTests #test19 stamp: 'fr 10/31/2020 12:14:29'!
PASSED!

!testRun: #TerniLapilliTests #test20 stamp: 'fr 10/31/2020 12:14:29'!
PASSED!

!testRun: #TerniLapilliTests #test21 stamp: 'fr 10/31/2020 12:14:29'!
PASSED!
!TerniLapilliTests methodsFor: 'as yet unclassified' stamp: 'fr 10/31/2020 12:15:19' prior: 50872156!
test21

	| terniLapilli |
	terniLapilli _ TerniLapilli new.
		
	self  should: [			terniLapilli putXAt: 1 @ 1 
						 ;putOAt: 1 @ 3
						 ;putXAt: 2 @ 1
						 ;putOAt: 2 @ 2
						 ;putXAt: 2 @ 3
						 ;putOAt: 3 @ 2
						 ;moveXFrom: 1@1 to: 1@2
						 ;moveXFrom: 3@3 to: 3@2.] 
		raise: Error 
		withMessageText: TerniLapilli positionIsNotUnderPlayersControlErrorDescription! !
!TerniLapilliTests methodsFor: 'as yet unclassified' stamp: 'fr 10/31/2020 12:15:37' prior: 50872258!
test21

	| terniLapilli |
	terniLapilli _ TerniLapilli new.
		
	self  should: [			terniLapilli putXAt: 1 @ 1 
						 ;putOAt: 1 @ 3
						 ;putXAt: 2 @ 1
						 ;putOAt: 2 @ 2
						 ;putXAt: 2 @ 3
						 ;putOAt: 3 @ 2
						 ;moveXFrom: 1@1 to: 1@2
						 ;moveOFrom: 3@3 to: 3@2.] 
		raise: Error 
		withMessageText: TerniLapilli positionIsNotUnderPlayersControlErrorDescription! !

!testRun: #TerniLapilliTests #test21 stamp: 'fr 10/31/2020 12:15:50'!
FAILURE!
!TerniLapilli methodsFor: 'game state' stamp: 'fr 10/31/2020 12:16:31' prior: 50872049!
moveOFrom: currentPosition to: newPosition 
	
	((self positionsFor: #O) size = 3) ifFalse: [self error: self class canNotMoveBeforeAddingThreePiecesErrorDescription].
	(self positionsFor: #O) remove: currentPosition ifAbsent: [self error: self class positionIsNotUnderPlayersControlErrorDescription].
	(self positionsFor: #O) add: newPosition.
	state _ XAdding for: self	
! !

!testRun: #TerniLapilliTests #test21 stamp: 'fr 10/31/2020 12:16:33'!
PASSED!

!testRun: #TerniLapilliTests #test01 stamp: 'fr 10/31/2020 12:16:33'!
PASSED!

!testRun: #TerniLapilliTests #test02 stamp: 'fr 10/31/2020 12:16:33'!
PASSED!

!testRun: #TerniLapilliTests #test03 stamp: 'fr 10/31/2020 12:16:33'!
PASSED!

!testRun: #TerniLapilliTests #test04 stamp: 'fr 10/31/2020 12:16:33'!
PASSED!

!testRun: #TerniLapilliTests #test05 stamp: 'fr 10/31/2020 12:16:33'!
PASSED!

!testRun: #TerniLapilliTests #test06 stamp: 'fr 10/31/2020 12:16:33'!
PASSED!

!testRun: #TerniLapilliTests #test07 stamp: 'fr 10/31/2020 12:16:33'!
PASSED!

!testRun: #TerniLapilliTests #test08 stamp: 'fr 10/31/2020 12:16:33'!
PASSED!

!testRun: #TerniLapilliTests #test09 stamp: 'fr 10/31/2020 12:16:33'!
PASSED!

!testRun: #TerniLapilliTests #test10 stamp: 'fr 10/31/2020 12:16:33'!
PASSED!

!testRun: #TerniLapilliTests #test11 stamp: 'fr 10/31/2020 12:16:33'!
PASSED!

!testRun: #TerniLapilliTests #test12 stamp: 'fr 10/31/2020 12:16:33'!
PASSED!

!testRun: #TerniLapilliTests #test13 stamp: 'fr 10/31/2020 12:16:33'!
PASSED!

!testRun: #TerniLapilliTests #test14 stamp: 'fr 10/31/2020 12:16:33'!
PASSED!

!testRun: #TerniLapilliTests #test15 stamp: 'fr 10/31/2020 12:16:33'!
PASSED!

!testRun: #TerniLapilliTests #test16 stamp: 'fr 10/31/2020 12:16:33'!
PASSED!

!testRun: #TerniLapilliTests #test17 stamp: 'fr 10/31/2020 12:16:33'!
PASSED!

!testRun: #TerniLapilliTests #test18 stamp: 'fr 10/31/2020 12:16:33'!
PASSED!

!testRun: #TerniLapilliTests #test19 stamp: 'fr 10/31/2020 12:16:33'!
PASSED!

!testRun: #TerniLapilliTests #test20 stamp: 'fr 10/31/2020 12:16:33'!
PASSED!

!testRun: #TerniLapilliTests #test21 stamp: 'fr 10/31/2020 12:16:33'!
PASSED!
!TerniLapilliTests methodsFor: 'as yet unclassified' stamp: 'fr 10/31/2020 12:16:48' prior: 50872274!
test21

	| terniLapilli |
	terniLapilli _ TerniLapilli new.
		
	self  should: [			terniLapilli putXAt: 1 @ 1 
						 ;putOAt: 1 @ 3
						 ;putXAt: 2 @ 1
						 ;putOAt: 2 @ 2
						 ;putXAt: 2 @ 3
						 ;putOAt: 3 @ 2
						 ;moveXFrom: 3@3 to: 3@2.] 
		raise: Error 
		withMessageText: TerniLapilli positionIsNotUnderPlayersControlErrorDescription ! !
!TerniLapilliTests methodsFor: 'as yet unclassified' stamp: 'fr 10/31/2020 12:16:54'!
test22

	| terniLapilli |
	terniLapilli _ TerniLapilli new.
		
	self  should: [			terniLapilli putXAt: 1 @ 1 
						 ;putOAt: 1 @ 3
						 ;putXAt: 2 @ 1
						 ;putOAt: 2 @ 2
						 ;putXAt: 2 @ 3
						 ;putOAt: 3 @ 2
						 ;moveXFrom: 1@1 to: 1@2
						 ;moveOFrom: 3@3 to: 3@2.] 
		raise: Error 
		withMessageText: TerniLapilli positionIsNotUnderPlayersControlErrorDescription! !

!testRun: #TerniLapilliTests #test22 stamp: 'fr 10/31/2020 12:17:04'!
PASSED!

!testRun: #TerniLapilliTests #test01 stamp: 'fr 10/31/2020 12:17:04'!
PASSED!

!testRun: #TerniLapilliTests #test02 stamp: 'fr 10/31/2020 12:17:04'!
PASSED!

!testRun: #TerniLapilliTests #test03 stamp: 'fr 10/31/2020 12:17:04'!
PASSED!

!testRun: #TerniLapilliTests #test04 stamp: 'fr 10/31/2020 12:17:04'!
PASSED!

!testRun: #TerniLapilliTests #test05 stamp: 'fr 10/31/2020 12:17:04'!
PASSED!

!testRun: #TerniLapilliTests #test06 stamp: 'fr 10/31/2020 12:17:04'!
PASSED!

!testRun: #TerniLapilliTests #test07 stamp: 'fr 10/31/2020 12:17:04'!
PASSED!

!testRun: #TerniLapilliTests #test08 stamp: 'fr 10/31/2020 12:17:04'!
PASSED!

!testRun: #TerniLapilliTests #test09 stamp: 'fr 10/31/2020 12:17:04'!
PASSED!

!testRun: #TerniLapilliTests #test10 stamp: 'fr 10/31/2020 12:17:04'!
PASSED!

!testRun: #TerniLapilliTests #test11 stamp: 'fr 10/31/2020 12:17:04'!
PASSED!

!testRun: #TerniLapilliTests #test12 stamp: 'fr 10/31/2020 12:17:04'!
PASSED!

!testRun: #TerniLapilliTests #test13 stamp: 'fr 10/31/2020 12:17:04'!
PASSED!

!testRun: #TerniLapilliTests #test14 stamp: 'fr 10/31/2020 12:17:04'!
PASSED!

!testRun: #TerniLapilliTests #test15 stamp: 'fr 10/31/2020 12:17:04'!
PASSED!

!testRun: #TerniLapilliTests #test16 stamp: 'fr 10/31/2020 12:17:04'!
PASSED!

!testRun: #TerniLapilliTests #test17 stamp: 'fr 10/31/2020 12:17:04'!
PASSED!

!testRun: #TerniLapilliTests #test18 stamp: 'fr 10/31/2020 12:17:04'!
PASSED!

!testRun: #TerniLapilliTests #test19 stamp: 'fr 10/31/2020 12:17:04'!
PASSED!

!testRun: #TerniLapilliTests #test20 stamp: 'fr 10/31/2020 12:17:04'!
PASSED!

!testRun: #TerniLapilliTests #test21 stamp: 'fr 10/31/2020 12:17:04'!
PASSED!

!testRun: #TerniLapilliTests #test22 stamp: 'fr 10/31/2020 12:17:04'!
PASSED!
!TerniLapilliTests methodsFor: 'as yet unclassified' stamp: 'fr 10/31/2020 12:17:22'!
test23

	| terniLapilli |
	terniLapilli _ TerniLapilli new.
		
	self  should: [			terniLapilli putXAt: 1 @ 1 
						 ;putOAt: 1 @ 3
						 ;putXAt: 2 @ 1
						 ;putOAt: 2 @ 2
						 ;putXAt: 2 @ 3
						 ;putOAt: 3 @ 2
						 ;moveXFrom: 1@1 to: 1@2
						 ;moveOFrom: 3@3 to: 3@2.] 
		raise: Error 
		withMessageText: TerniLapilli positionIsNotUnderPlayersControlErrorDescription! !

----SNAPSHOT----(31 October 2020 12:21:32) CuisUniversity-4384.image priorSource: 17279339!

!testRun: #TerniLapilliTests #test01 stamp: 'fr 10/31/2020 12:24:29'!
PASSED!

!testRun: #TerniLapilliTests #test02 stamp: 'fr 10/31/2020 12:24:29'!
PASSED!

!testRun: #TerniLapilliTests #test03 stamp: 'fr 10/31/2020 12:24:29'!
PASSED!

!testRun: #TerniLapilliTests #test04 stamp: 'fr 10/31/2020 12:24:29'!
PASSED!

!testRun: #TerniLapilliTests #test05 stamp: 'fr 10/31/2020 12:24:29'!
PASSED!

!testRun: #TerniLapilliTests #test06 stamp: 'fr 10/31/2020 12:24:29'!
PASSED!

!testRun: #TerniLapilliTests #test07 stamp: 'fr 10/31/2020 12:24:29'!
PASSED!

!testRun: #TerniLapilliTests #test08 stamp: 'fr 10/31/2020 12:24:29'!
PASSED!

!testRun: #TerniLapilliTests #test09 stamp: 'fr 10/31/2020 12:24:29'!
PASSED!

!testRun: #TerniLapilliTests #test10 stamp: 'fr 10/31/2020 12:24:29'!
PASSED!

!testRun: #TerniLapilliTests #test11 stamp: 'fr 10/31/2020 12:24:29'!
PASSED!

!testRun: #TerniLapilliTests #test12 stamp: 'fr 10/31/2020 12:24:29'!
PASSED!

!testRun: #TerniLapilliTests #test13 stamp: 'fr 10/31/2020 12:24:29'!
PASSED!

!testRun: #TerniLapilliTests #test14 stamp: 'fr 10/31/2020 12:24:29'!
PASSED!

!testRun: #TerniLapilliTests #test15 stamp: 'fr 10/31/2020 12:24:29'!
PASSED!

!testRun: #TerniLapilliTests #test16 stamp: 'fr 10/31/2020 12:24:29'!
PASSED!

!testRun: #TerniLapilliTests #test17 stamp: 'fr 10/31/2020 12:24:29'!
PASSED!

!testRun: #TerniLapilliTests #test18 stamp: 'fr 10/31/2020 12:24:29'!
PASSED!

!testRun: #TerniLapilliTests #test19 stamp: 'fr 10/31/2020 12:24:29'!
PASSED!

!testRun: #TerniLapilliTests #test20 stamp: 'fr 10/31/2020 12:24:29'!
PASSED!

!testRun: #TerniLapilliTests #test21 stamp: 'fr 10/31/2020 12:24:29'!
PASSED!

!testRun: #TerniLapilliTests #test22 stamp: 'fr 10/31/2020 12:24:29'!
PASSED!

!testRun: #TerniLapilliTests #test23 stamp: 'fr 10/31/2020 12:24:29'!
PASSED!
!TerniLapilliTests methodsFor: 'as yet unclassified' stamp: 'fr 10/31/2020 12:24:41'!
test24

	| terniLapilli |
	terniLapilli _ TerniLapilli new.
		
	self  should: [			terniLapilli putXAt: 1 @ 1 
						 ;putOAt: 1 @ 3
						 ;putXAt: 2 @ 1
						 ;putOAt: 2 @ 2
						 ;putXAt: 2 @ 3
						 ;putOAt: 3 @ 2
						 ;moveXFrom: 1@1 to: 1@2
						 ;moveOFrom: 3@3 to: 3@2.] 
		raise: Error 
		withMessageText: TerniLapilli positionIsNotUnderPlayersControlErrorDescription! !
!TerniLapilliTests methodsFor: 'as yet unclassified' stamp: 'fr 10/31/2020 12:24:49' prior: 50872523!
test24

	| terniLapilli |
	terniLapilli _ TerniLapilli new.
		
	self  should: [			terniLapilli putXAt: 1 @ 1 
						 ;putOAt: 1 @ 3
						 ;putXAt: 2 @ 1
						 ;putOAt: 2 @ 2
						 ;putXAt: 2 @ 3
						 ;putOAt: 3 @ 2
						 ;moveXFrom: 1@5 to: 1@2.] 
		raise: Error 
		withMessageText: TerniLapilli positionIsNotUnderPlayersControlErrorDescription! !

!methodRemoval: TerniLapilli class #positionOutOfBounds stamp: 'fr 10/31/2020 12:25:07'!
positionOutOfBounds
	self shouldBeImplemented.!
!TerniLapilliTests methodsFor: 'as yet unclassified' stamp: 'fr 10/31/2020 12:26:22' prior: 50872539!
test24

	| terniLapilli |
	terniLapilli _ TerniLapilli new.
		
	self  should: [			terniLapilli putXAt: 1 @ 1 
						 ;putOAt: 1 @ 3
						 ;putXAt: 2 @ 1
						 ;putOAt: 2 @ 2
						 ;putXAt: 2 @ 3
						 ;putOAt: 3 @ 2
						 ;moveXFrom: 1@5 to: 1@2.] 
		raise: Error 
		withMessageText: TerniLapilli positionOutOfBoundsErrorDescription ! !

!testRun: #TerniLapilliTests #test24 stamp: 'fr 10/31/2020 12:26:34'!
FAILURE!
!TerniLapilli methodsFor: 'actions' stamp: 'fr 10/31/2020 12:27:38' prior: 50872188!
moveXFrom: currentPosition to: newPosition
	
	((self positionsFor: #X) size = 3) ifFalse: [self error: self class canNotMoveBeforeAddingThreePiecesErrorDescription ].
	((currentPosition x between: 1 and: 3) and: [newPosition y between: 1 and: 3]) ifFalse: [self error: self class positionOutOfBoundsErrorDescription ].
	(self positionsFor: #X) remove: currentPosition ifAbsent: [self error: self class positionIsNotUnderPlayersControlErrorDescription].
	(self positionsFor: #X) add: newPosition.
	state _ OAdding for: self
	
	! !

!testRun: #TerniLapilliTests #test24 stamp: 'fr 10/31/2020 12:27:51'!
FAILURE!

!testRun: #TerniLapilliTests #test24 stamp: 'fr 10/31/2020 12:28:07'!
FAILURE!

newPosition y !

currentPosition!
!TerniLapilli methodsFor: 'actions' stamp: 'fr 10/31/2020 12:29:01' prior: 50872574!
moveXFrom: currentPosition to: newPosition
	
	((self positionsFor: #X) size = 3) ifFalse: [self error: self class canNotMoveBeforeAddingThreePiecesErrorDescription ].
	((currentPosition x between: 1 and: 3) and: [currentPosition y between: 1 and: 3]) ifFalse: [self error: self class positionOutOfBoundsErrorDescription ].
	(self positionsFor: #X) remove: currentPosition ifAbsent: [self error: self class positionIsNotUnderPlayersControlErrorDescription].
	(self positionsFor: #X) add: newPosition.
	state _ OAdding for: self
	
	! !

!testRun: #TerniLapilliTests #test24 stamp: 'fr 10/31/2020 12:29:03'!
PASSED!

!testRun: #TerniLapilliTests #test01 stamp: 'fr 10/31/2020 12:29:03'!
PASSED!

!testRun: #TerniLapilliTests #test02 stamp: 'fr 10/31/2020 12:29:03'!
PASSED!

!testRun: #TerniLapilliTests #test03 stamp: 'fr 10/31/2020 12:29:03'!
PASSED!

!testRun: #TerniLapilliTests #test04 stamp: 'fr 10/31/2020 12:29:03'!
PASSED!

!testRun: #TerniLapilliTests #test05 stamp: 'fr 10/31/2020 12:29:03'!
PASSED!

!testRun: #TerniLapilliTests #test06 stamp: 'fr 10/31/2020 12:29:03'!
PASSED!

!testRun: #TerniLapilliTests #test07 stamp: 'fr 10/31/2020 12:29:03'!
PASSED!

!testRun: #TerniLapilliTests #test08 stamp: 'fr 10/31/2020 12:29:03'!
PASSED!

!testRun: #TerniLapilliTests #test09 stamp: 'fr 10/31/2020 12:29:03'!
PASSED!

!testRun: #TerniLapilliTests #test10 stamp: 'fr 10/31/2020 12:29:03'!
PASSED!

!testRun: #TerniLapilliTests #test11 stamp: 'fr 10/31/2020 12:29:03'!
PASSED!

!testRun: #TerniLapilliTests #test12 stamp: 'fr 10/31/2020 12:29:03'!
PASSED!

!testRun: #TerniLapilliTests #test13 stamp: 'fr 10/31/2020 12:29:03'!
PASSED!

!testRun: #TerniLapilliTests #test14 stamp: 'fr 10/31/2020 12:29:03'!
PASSED!

!testRun: #TerniLapilliTests #test15 stamp: 'fr 10/31/2020 12:29:03'!
PASSED!

!testRun: #TerniLapilliTests #test16 stamp: 'fr 10/31/2020 12:29:03'!
PASSED!

!testRun: #TerniLapilliTests #test17 stamp: 'fr 10/31/2020 12:29:03'!
PASSED!

!testRun: #TerniLapilliTests #test18 stamp: 'fr 10/31/2020 12:29:03'!
PASSED!

!testRun: #TerniLapilliTests #test19 stamp: 'fr 10/31/2020 12:29:03'!
PASSED!

!testRun: #TerniLapilliTests #test20 stamp: 'fr 10/31/2020 12:29:03'!
PASSED!

!testRun: #TerniLapilliTests #test21 stamp: 'fr 10/31/2020 12:29:03'!
PASSED!

!testRun: #TerniLapilliTests #test22 stamp: 'fr 10/31/2020 12:29:03'!
PASSED!

!testRun: #TerniLapilliTests #test23 stamp: 'fr 10/31/2020 12:29:03'!
PASSED!

!testRun: #TerniLapilliTests #test24 stamp: 'fr 10/31/2020 12:29:03'!
PASSED!
!TerniLapilliTests methodsFor: 'as yet unclassified' stamp: 'fr 10/31/2020 12:29:08' prior: 50872558!
test24

	| terniLapilli |
	terniLapilli _ TerniLapilli new.
		
	self  should: [			terniLapilli putXAt: 1 @ 1 
						 ;putOAt: 1 @ 3
						 ;putXAt: 2 @ 1
						 ;putOAt: 2 @ 2
						 ;putXAt: 2 @ 3
						 ;putOAt: 3 @ 2
						 ;moveXFrom: 1@1 to: 1@2.] 
		raise: Error 
		withMessageText: TerniLapilli positionOutOfBoundsErrorDescription ! !
!TerniLapilliTests methodsFor: 'as yet unclassified' stamp: 'fr 10/31/2020 12:30:03' prior: 50872682!
test24

	| terniLapilli |
	terniLapilli _ TerniLapilli new.
		
	self  should: [			terniLapilli putXAt: 1 @ 1 
						 ;putOAt: 1 @ 3
						 ;putXAt: 2 @ 1
						 ;putOAt: 2 @ 2
						 ;putXAt: 2 @ 3
						 ;putOAt: 3 @ 2
						 ;moveXFrom: 1@1 to: 1@2
						 ;moveOFrom: 2@6 to: 3@3.] 
		raise: Error 
		withMessageText: TerniLapilli positionOutOfBoundsErrorDescription ! !

!testRun: #TerniLapilliTests #test24 stamp: 'fr 10/31/2020 12:30:07'!
FAILURE!
!TerniLapilli methodsFor: 'actions' stamp: 'fr 10/31/2020 12:30:49' prior: 50872292!
moveOFrom: currentPosition to: newPosition 
	
	((self positionsFor: #O) size = 3) ifFalse: [self error: self class canNotMoveBeforeAddingThreePiecesErrorDescription].
	((currentPosition x between: 1 and: 3) and: [currentPosition y between: 1 and: 3]) ifFalse: [self error: self class positionOutOfBoundsErrorDescription ].
	(self positionsFor: #O) remove: currentPosition ifAbsent: [self error: self class positionIsNotUnderPlayersControlErrorDescription].
	(self positionsFor: #O) add: newPosition.
	state _ XAdding for: self	
! !

!testRun: #TerniLapilliTests #test24 stamp: 'fr 10/31/2020 12:30:50'!
PASSED!

!testRun: #TerniLapilliTests #test01 stamp: 'fr 10/31/2020 12:30:50'!
PASSED!

!testRun: #TerniLapilliTests #test02 stamp: 'fr 10/31/2020 12:30:50'!
PASSED!

!testRun: #TerniLapilliTests #test03 stamp: 'fr 10/31/2020 12:30:50'!
PASSED!

!testRun: #TerniLapilliTests #test04 stamp: 'fr 10/31/2020 12:30:50'!
PASSED!

!testRun: #TerniLapilliTests #test05 stamp: 'fr 10/31/2020 12:30:50'!
PASSED!

!testRun: #TerniLapilliTests #test06 stamp: 'fr 10/31/2020 12:30:50'!
PASSED!

!testRun: #TerniLapilliTests #test07 stamp: 'fr 10/31/2020 12:30:50'!
PASSED!

!testRun: #TerniLapilliTests #test08 stamp: 'fr 10/31/2020 12:30:50'!
PASSED!

!testRun: #TerniLapilliTests #test09 stamp: 'fr 10/31/2020 12:30:50'!
PASSED!

!testRun: #TerniLapilliTests #test10 stamp: 'fr 10/31/2020 12:30:50'!
PASSED!

!testRun: #TerniLapilliTests #test11 stamp: 'fr 10/31/2020 12:30:50'!
PASSED!

!testRun: #TerniLapilliTests #test12 stamp: 'fr 10/31/2020 12:30:50'!
PASSED!

!testRun: #TerniLapilliTests #test13 stamp: 'fr 10/31/2020 12:30:50'!
PASSED!

!testRun: #TerniLapilliTests #test14 stamp: 'fr 10/31/2020 12:30:50'!
PASSED!

!testRun: #TerniLapilliTests #test15 stamp: 'fr 10/31/2020 12:30:50'!
PASSED!

!testRun: #TerniLapilliTests #test16 stamp: 'fr 10/31/2020 12:30:50'!
PASSED!

!testRun: #TerniLapilliTests #test17 stamp: 'fr 10/31/2020 12:30:50'!
PASSED!

!testRun: #TerniLapilliTests #test18 stamp: 'fr 10/31/2020 12:30:50'!
PASSED!

!testRun: #TerniLapilliTests #test19 stamp: 'fr 10/31/2020 12:30:50'!
PASSED!

!testRun: #TerniLapilliTests #test20 stamp: 'fr 10/31/2020 12:30:50'!
PASSED!

!testRun: #TerniLapilliTests #test21 stamp: 'fr 10/31/2020 12:30:50'!
PASSED!

!testRun: #TerniLapilliTests #test22 stamp: 'fr 10/31/2020 12:30:50'!
PASSED!

!testRun: #TerniLapilliTests #test23 stamp: 'fr 10/31/2020 12:30:50'!
PASSED!

!testRun: #TerniLapilliTests #test24 stamp: 'fr 10/31/2020 12:30:50'!
PASSED!
!TerniLapilliTests methodsFor: 'as yet unclassified' stamp: 'fr 10/31/2020 12:31:23' prior: 50872696!
test24

	| terniLapilli |
	terniLapilli _ TerniLapilli new.
		
	self  should: [			terniLapilli putXAt: 1 @ 1 
						 ;putOAt: 1 @ 3
						 ;putXAt: 2 @ 1
						 ;putOAt: 2 @ 2
						 ;putXAt: 2 @ 3
						 ;putOAt: 3 @ 2
						 ;moveXFrom: 3@4 to: 3@3.] 
		raise: Error 
		withMessageText: TerniLapilli positionOutOfBoundsErrorDescription ! !

!testRun: #TerniLapilliTests #test24 stamp: 'fr 10/31/2020 12:31:24'!
PASSED!

!testRun: #TerniLapilliTests #test01 stamp: 'fr 10/31/2020 12:31:24'!
PASSED!

!testRun: #TerniLapilliTests #test02 stamp: 'fr 10/31/2020 12:31:24'!
PASSED!

!testRun: #TerniLapilliTests #test03 stamp: 'fr 10/31/2020 12:31:24'!
PASSED!

!testRun: #TerniLapilliTests #test04 stamp: 'fr 10/31/2020 12:31:24'!
PASSED!

!testRun: #TerniLapilliTests #test05 stamp: 'fr 10/31/2020 12:31:24'!
PASSED!

!testRun: #TerniLapilliTests #test06 stamp: 'fr 10/31/2020 12:31:24'!
PASSED!

!testRun: #TerniLapilliTests #test07 stamp: 'fr 10/31/2020 12:31:24'!
PASSED!

!testRun: #TerniLapilliTests #test08 stamp: 'fr 10/31/2020 12:31:24'!
PASSED!

!testRun: #TerniLapilliTests #test09 stamp: 'fr 10/31/2020 12:31:24'!
PASSED!

!testRun: #TerniLapilliTests #test10 stamp: 'fr 10/31/2020 12:31:24'!
PASSED!

!testRun: #TerniLapilliTests #test11 stamp: 'fr 10/31/2020 12:31:24'!
PASSED!

!testRun: #TerniLapilliTests #test12 stamp: 'fr 10/31/2020 12:31:24'!
PASSED!

!testRun: #TerniLapilliTests #test13 stamp: 'fr 10/31/2020 12:31:24'!
PASSED!

!testRun: #TerniLapilliTests #test14 stamp: 'fr 10/31/2020 12:31:24'!
PASSED!

!testRun: #TerniLapilliTests #test15 stamp: 'fr 10/31/2020 12:31:24'!
PASSED!

!testRun: #TerniLapilliTests #test16 stamp: 'fr 10/31/2020 12:31:24'!
PASSED!

!testRun: #TerniLapilliTests #test17 stamp: 'fr 10/31/2020 12:31:24'!
PASSED!

!testRun: #TerniLapilliTests #test18 stamp: 'fr 10/31/2020 12:31:24'!
PASSED!

!testRun: #TerniLapilliTests #test19 stamp: 'fr 10/31/2020 12:31:24'!
PASSED!

!testRun: #TerniLapilliTests #test20 stamp: 'fr 10/31/2020 12:31:24'!
PASSED!

!testRun: #TerniLapilliTests #test21 stamp: 'fr 10/31/2020 12:31:24'!
PASSED!

!testRun: #TerniLapilliTests #test22 stamp: 'fr 10/31/2020 12:31:24'!
PASSED!

!testRun: #TerniLapilliTests #test23 stamp: 'fr 10/31/2020 12:31:24'!
PASSED!

!testRun: #TerniLapilliTests #test24 stamp: 'fr 10/31/2020 12:31:24'!
PASSED!
!TerniLapilliTests methodsFor: 'as yet unclassified' stamp: 'fr 10/31/2020 12:31:36'!
test25

	| terniLapilli |
	terniLapilli _ TerniLapilli new.
		
	self  should: [			terniLapilli putXAt: 1 @ 1 
						 ;putOAt: 1 @ 3
						 ;putXAt: 2 @ 1
						 ;putOAt: 2 @ 2
						 ;putXAt: 2 @ 3
						 ;putOAt: 3 @ 2
						 ;moveXFrom: 1@1 to: 1@2
						 ;moveOFrom: 2@6 to: 3@3.] 
		raise: Error 
		withMessageText: TerniLapilli positionOutOfBoundsErrorDescription ! !

!testRun: #TerniLapilliTests #test25 stamp: 'fr 10/31/2020 12:31:37'!
PASSED!

!testRun: #TerniLapilliTests #test01 stamp: 'fr 10/31/2020 12:31:37'!
PASSED!

!testRun: #TerniLapilliTests #test02 stamp: 'fr 10/31/2020 12:31:37'!
PASSED!

!testRun: #TerniLapilliTests #test03 stamp: 'fr 10/31/2020 12:31:37'!
PASSED!

!testRun: #TerniLapilliTests #test04 stamp: 'fr 10/31/2020 12:31:37'!
PASSED!

!testRun: #TerniLapilliTests #test05 stamp: 'fr 10/31/2020 12:31:37'!
PASSED!

!testRun: #TerniLapilliTests #test06 stamp: 'fr 10/31/2020 12:31:37'!
PASSED!

!testRun: #TerniLapilliTests #test07 stamp: 'fr 10/31/2020 12:31:37'!
PASSED!

!testRun: #TerniLapilliTests #test08 stamp: 'fr 10/31/2020 12:31:37'!
PASSED!

!testRun: #TerniLapilliTests #test09 stamp: 'fr 10/31/2020 12:31:37'!
PASSED!

!testRun: #TerniLapilliTests #test10 stamp: 'fr 10/31/2020 12:31:37'!
PASSED!

!testRun: #TerniLapilliTests #test11 stamp: 'fr 10/31/2020 12:31:37'!
PASSED!

!testRun: #TerniLapilliTests #test12 stamp: 'fr 10/31/2020 12:31:37'!
PASSED!

!testRun: #TerniLapilliTests #test13 stamp: 'fr 10/31/2020 12:31:37'!
PASSED!

!testRun: #TerniLapilliTests #test14 stamp: 'fr 10/31/2020 12:31:37'!
PASSED!

!testRun: #TerniLapilliTests #test15 stamp: 'fr 10/31/2020 12:31:37'!
PASSED!

!testRun: #TerniLapilliTests #test16 stamp: 'fr 10/31/2020 12:31:37'!
PASSED!

!testRun: #TerniLapilliTests #test17 stamp: 'fr 10/31/2020 12:31:37'!
PASSED!

!testRun: #TerniLapilliTests #test18 stamp: 'fr 10/31/2020 12:31:37'!
PASSED!

!testRun: #TerniLapilliTests #test19 stamp: 'fr 10/31/2020 12:31:37'!
PASSED!

!testRun: #TerniLapilliTests #test20 stamp: 'fr 10/31/2020 12:31:37'!
PASSED!

!testRun: #TerniLapilliTests #test21 stamp: 'fr 10/31/2020 12:31:37'!
PASSED!

!testRun: #TerniLapilliTests #test22 stamp: 'fr 10/31/2020 12:31:37'!
PASSED!

!testRun: #TerniLapilliTests #test23 stamp: 'fr 10/31/2020 12:31:37'!
PASSED!

!testRun: #TerniLapilliTests #test24 stamp: 'fr 10/31/2020 12:31:37'!
PASSED!

!testRun: #TerniLapilliTests #test25 stamp: 'fr 10/31/2020 12:31:37'!
PASSED!
!TerniLapilliTests methodsFor: 'as yet unclassified' stamp: 'fr 10/31/2020 12:33:39'!
test26

	| terniLapilli |
	terniLapilli _ TerniLapilli new.
		
	self  should: [			terniLapilli putXAt: 1 @ 1 
						 ;putOAt: 1 @ 3
						 ;putXAt: 2 @ 1
						 ;putOAt: 2 @ 2
						 ;putXAt: 2 @ 3
						 ;putOAt: 3 @ 2
						 ;moveXFrom: 3@4 to: 3@3.] 
		raise: Error 
		withMessageText: TerniLapilli positionOutOfBoundsErrorDescription ! !
!TerniLapilliTests methodsFor: 'as yet unclassified' stamp: 'fr 10/31/2020 12:33:49' prior: 50872950!
test26

	| terniLapilli |
	terniLapilli _ TerniLapilli new.
		
	self  should: [			terniLapilli putXAt: 1 @ 1 
						 ;putOAt: 1 @ 3
						 ;putXAt: 2 @ 1
						 ;putOAt: 2 @ 2
						 ;putXAt: 2 @ 3
						 ;putOAt: 3 @ 2
						 ;moveXFrom: 1@1 to: 0@1.] 
		raise: Error 
		withMessageText: TerniLapilli positionOutOfBoundsErrorDescription ! !

!testRun: #TerniLapilliTests #test26 stamp: 'fr 10/31/2020 12:33:50'!
FAILURE!
!TerniLapilli methodsFor: 'actions' stamp: 'fr 10/31/2020 12:34:21' prior: 50872600!
moveXFrom: currentPosition to: newPosition
	
	((self positionsFor: #X) size = 3) ifFalse: [self error: self class canNotMoveBeforeAddingThreePiecesErrorDescription ].
	((currentPosition x between: 1 and: 3) and: [currentPosition y between: 1 and: 3]) ifFalse: [self error: self class positionOutOfBoundsErrorDescription ].
	((newPosition x between: 1 and: 3) and: [newPosition y between: 1 and: 3]) ifFalse: [self error: self class positionOutOfBoundsErrorDescription ].
	(self positionsFor: #X) remove: currentPosition ifAbsent: [self error: self class positionIsNotUnderPlayersControlErrorDescription].
	(self positionsFor: #X) add: newPosition.
	state _ OAdding for: self
	
	! !

!testRun: #TerniLapilliTests #test26 stamp: 'fr 10/31/2020 12:34:24'!
PASSED!

!testRun: #TerniLapilliTests #test01 stamp: 'fr 10/31/2020 12:34:24'!
PASSED!

!testRun: #TerniLapilliTests #test02 stamp: 'fr 10/31/2020 12:34:24'!
PASSED!

!testRun: #TerniLapilliTests #test03 stamp: 'fr 10/31/2020 12:34:24'!
PASSED!

!testRun: #TerniLapilliTests #test04 stamp: 'fr 10/31/2020 12:34:24'!
PASSED!

!testRun: #TerniLapilliTests #test05 stamp: 'fr 10/31/2020 12:34:24'!
PASSED!

!testRun: #TerniLapilliTests #test06 stamp: 'fr 10/31/2020 12:34:24'!
PASSED!

!testRun: #TerniLapilliTests #test07 stamp: 'fr 10/31/2020 12:34:24'!
PASSED!

!testRun: #TerniLapilliTests #test08 stamp: 'fr 10/31/2020 12:34:24'!
PASSED!

!testRun: #TerniLapilliTests #test09 stamp: 'fr 10/31/2020 12:34:24'!
PASSED!

!testRun: #TerniLapilliTests #test10 stamp: 'fr 10/31/2020 12:34:24'!
PASSED!

!testRun: #TerniLapilliTests #test11 stamp: 'fr 10/31/2020 12:34:24'!
PASSED!

!testRun: #TerniLapilliTests #test12 stamp: 'fr 10/31/2020 12:34:24'!
PASSED!

!testRun: #TerniLapilliTests #test13 stamp: 'fr 10/31/2020 12:34:24'!
PASSED!

!testRun: #TerniLapilliTests #test14 stamp: 'fr 10/31/2020 12:34:24'!
PASSED!

!testRun: #TerniLapilliTests #test15 stamp: 'fr 10/31/2020 12:34:24'!
PASSED!

!testRun: #TerniLapilliTests #test16 stamp: 'fr 10/31/2020 12:34:24'!
PASSED!

!testRun: #TerniLapilliTests #test17 stamp: 'fr 10/31/2020 12:34:24'!
PASSED!

!testRun: #TerniLapilliTests #test18 stamp: 'fr 10/31/2020 12:34:24'!
PASSED!

!testRun: #TerniLapilliTests #test19 stamp: 'fr 10/31/2020 12:34:24'!
PASSED!

!testRun: #TerniLapilliTests #test20 stamp: 'fr 10/31/2020 12:34:24'!
PASSED!

!testRun: #TerniLapilliTests #test21 stamp: 'fr 10/31/2020 12:34:24'!
PASSED!

!testRun: #TerniLapilliTests #test22 stamp: 'fr 10/31/2020 12:34:24'!
PASSED!

!testRun: #TerniLapilliTests #test23 stamp: 'fr 10/31/2020 12:34:24'!
PASSED!

!testRun: #TerniLapilliTests #test24 stamp: 'fr 10/31/2020 12:34:24'!
PASSED!

!testRun: #TerniLapilliTests #test25 stamp: 'fr 10/31/2020 12:34:24'!
PASSED!

!testRun: #TerniLapilliTests #test26 stamp: 'fr 10/31/2020 12:34:24'!
PASSED!
!TerniLapilliTests methodsFor: 'as yet unclassified' stamp: 'fr 10/31/2020 12:34:34'!
test27

	| terniLapilli |
	terniLapilli _ TerniLapilli new.
		
	self  should: [			terniLapilli putXAt: 1 @ 1 
						 ;putOAt: 1 @ 3
						 ;putXAt: 2 @ 1
						 ;putOAt: 2 @ 2
						 ;putXAt: 2 @ 3
						 ;putOAt: 3 @ 2
						 ;moveXFrom: 1@1 to: 1@2
						 ;moveOFrom: 2@6 to: 3@3.] 
		raise: Error 
		withMessageText: TerniLapilli positionOutOfBoundsErrorDescription ! !
!TerniLapilliTests methodsFor: 'as yet unclassified' stamp: 'fr 10/31/2020 12:36:18' prior: 50873071!
test27

	| terniLapilli |
	terniLapilli _ TerniLapilli new.
		
	self  should: [			terniLapilli putXAt: 1 @ 1 
						 ;putOAt: 1 @ 3
						 ;putXAt: 2 @ 1
						 ;putOAt: 2 @ 2
						 ;putXAt: 2 @ 3
						 ;putOAt: 3 @ 2
						 ;moveXFrom: 1@1 to: 1@2
						 ;moveOFrom: 3@2 to: 4@2.] 
		raise: Error 
		withMessageText: TerniLapilli positionOutOfBoundsErrorDescription ! !

!testRun: #TerniLapilliTests #test27 stamp: 'fr 10/31/2020 12:36:19'!
FAILURE!
!TerniLapilli methodsFor: 'actions' stamp: 'fr 10/31/2020 12:36:47' prior: 50872713!
moveOFrom: currentPosition to: newPosition 
	
	((self positionsFor: #O) size = 3) ifFalse: [self error: self class canNotMoveBeforeAddingThreePiecesErrorDescription].
	((currentPosition x between: 1 and: 3) and: [currentPosition y between: 1 and: 3]) ifFalse: [self error: self class positionOutOfBoundsErrorDescription ].
	((newPosition x between: 1 and: 3) and: [newPosition y between: 1 and: 3]) ifFalse: [self error: self class positionOutOfBoundsErrorDescription ].

	(self positionsFor: #O) remove: currentPosition ifAbsent: [self error: self class positionIsNotUnderPlayersControlErrorDescription].
	(self positionsFor: #O) add: newPosition.
	state _ XAdding for: self	
! !
!TerniLapilli methodsFor: 'actions' stamp: 'fr 10/31/2020 12:36:51' prior: 50873103!
moveOFrom: currentPosition to: newPosition 
	
	((self positionsFor: #O) size = 3) ifFalse: [self error: self class canNotMoveBeforeAddingThreePiecesErrorDescription].
	((currentPosition x between: 1 and: 3) and: [currentPosition y between: 1 and: 3]) ifFalse: [self error: self class positionOutOfBoundsErrorDescription ].
	((newPosition x between: 1 and: 3) and: [newPosition y between: 1 and: 3]) ifFalse: [self error: self class positionOutOfBoundsErrorDescription ].
	(self positionsFor: #O) remove: currentPosition ifAbsent: [self error: self class positionIsNotUnderPlayersControlErrorDescription].
	(self positionsFor: #O) add: newPosition.
	state _ XAdding for: self	
! !

!testRun: #TerniLapilliTests #test27 stamp: 'fr 10/31/2020 12:36:52'!
PASSED!

!testRun: #TerniLapilliTests #test01 stamp: 'fr 10/31/2020 12:36:52'!
PASSED!

!testRun: #TerniLapilliTests #test02 stamp: 'fr 10/31/2020 12:36:52'!
PASSED!

!testRun: #TerniLapilliTests #test03 stamp: 'fr 10/31/2020 12:36:52'!
PASSED!

!testRun: #TerniLapilliTests #test04 stamp: 'fr 10/31/2020 12:36:52'!
PASSED!

!testRun: #TerniLapilliTests #test05 stamp: 'fr 10/31/2020 12:36:52'!
PASSED!

!testRun: #TerniLapilliTests #test06 stamp: 'fr 10/31/2020 12:36:52'!
PASSED!

!testRun: #TerniLapilliTests #test07 stamp: 'fr 10/31/2020 12:36:52'!
PASSED!

!testRun: #TerniLapilliTests #test08 stamp: 'fr 10/31/2020 12:36:52'!
PASSED!

!testRun: #TerniLapilliTests #test09 stamp: 'fr 10/31/2020 12:36:52'!
PASSED!

!testRun: #TerniLapilliTests #test10 stamp: 'fr 10/31/2020 12:36:52'!
PASSED!

!testRun: #TerniLapilliTests #test11 stamp: 'fr 10/31/2020 12:36:52'!
PASSED!

!testRun: #TerniLapilliTests #test12 stamp: 'fr 10/31/2020 12:36:52'!
PASSED!

!testRun: #TerniLapilliTests #test13 stamp: 'fr 10/31/2020 12:36:52'!
PASSED!

!testRun: #TerniLapilliTests #test14 stamp: 'fr 10/31/2020 12:36:52'!
PASSED!

!testRun: #TerniLapilliTests #test15 stamp: 'fr 10/31/2020 12:36:52'!
PASSED!

!testRun: #TerniLapilliTests #test16 stamp: 'fr 10/31/2020 12:36:52'!
PASSED!

!testRun: #TerniLapilliTests #test17 stamp: 'fr 10/31/2020 12:36:52'!
PASSED!

!testRun: #TerniLapilliTests #test18 stamp: 'fr 10/31/2020 12:36:52'!
PASSED!

!testRun: #TerniLapilliTests #test19 stamp: 'fr 10/31/2020 12:36:52'!
PASSED!

!testRun: #TerniLapilliTests #test20 stamp: 'fr 10/31/2020 12:36:52'!
PASSED!

!testRun: #TerniLapilliTests #test21 stamp: 'fr 10/31/2020 12:36:52'!
PASSED!

!testRun: #TerniLapilliTests #test22 stamp: 'fr 10/31/2020 12:36:52'!
PASSED!

!testRun: #TerniLapilliTests #test23 stamp: 'fr 10/31/2020 12:36:52'!
PASSED!

!testRun: #TerniLapilliTests #test24 stamp: 'fr 10/31/2020 12:36:52'!
PASSED!

!testRun: #TerniLapilliTests #test25 stamp: 'fr 10/31/2020 12:36:52'!
PASSED!

!testRun: #TerniLapilliTests #test26 stamp: 'fr 10/31/2020 12:36:52'!
PASSED!

!testRun: #TerniLapilliTests #test27 stamp: 'fr 10/31/2020 12:36:52'!
PASSED!
!TerniLapilliTests methodsFor: 'as yet unclassified' stamp: 'fr 10/31/2020 12:38:03'!
test28

	| terniLapilli |
	terniLapilli _ TerniLapilli new.
		
	self  should: [			terniLapilli putXAt: 1 @ 1 
						 ;putOAt: 1 @ 3
						 ;putXAt: 2 @ 1
						 ;putOAt: 2 @ 2
						 ;putXAt: 2 @ 3
						 ;putOAt: 3 @ 2
						 ;moveXFrom: 1@1 to: 0@1.] 
		raise: Error 
		withMessageText: TerniLapilli positionOutOfBoundsErrorDescription ! !
!TerniLapilliTests methodsFor: 'as yet unclassified' stamp: 'fr 10/31/2020 12:39:29' prior: 50873221!
test28

	| terniLapilli |
	terniLapilli _ TerniLapilli new.
		
	self  should: [			terniLapilli putXAt: 1 @ 1 
						 ;putOAt: 1 @ 3
						 ;putXAt: 2 @ 1
						 ;putOAt: 2 @ 2
						 ;putXAt: 2 @ 3
						 ;putOAt: 3 @ 2
						 ;moveXFrom: 1@1 to: 2@2.] 
		raise: Error 
		withMessageText: TerniLapilli positionOutOfBoundsErrorDescription ! !
!TerniLapilliTests methodsFor: 'as yet unclassified' stamp: 'fr 10/31/2020 12:39:52' prior: 50873235!
test28

	| terniLapilli |
	terniLapilli _ TerniLapilli new.
		
	self  should: [			terniLapilli putXAt: 1 @ 1 
						 ;putOAt: 1 @ 3
						 ;putXAt: 2 @ 1
						 ;putOAt: 2 @ 2
						 ;putXAt: 2 @ 3
						 ;putOAt: 3 @ 2
						 ;moveXFrom: 1@1 to: 2@2.] 
		raise: Error 
		withMessageText: TerniLapilli positionAlreadyHoldsAPieceErrorDescription ! !

!testRun: #TerniLapilliTests #test28 stamp: 'fr 10/31/2020 12:39:54'!
FAILURE!

!testRun: #TerniLapilliTests #test28 stamp: 'fr 10/31/2020 14:50:22'!
FAILURE!

!testRun: #TerniLapilliTests #test28 stamp: 'fr 10/31/2020 14:50:33'!
FAILURE!
!TerniLapilli methodsFor: 'actions' stamp: 'fr 10/31/2020 14:51:33' prior: 50872980!
moveXFrom: currentPosition to: newPosition
	
	((self positionsFor: #X) size = 3) ifFalse: [self error: self class canNotMoveBeforeAddingThreePiecesErrorDescription ].
	((currentPosition x between: 1 and: 3) and: [currentPosition y between: 1 and: 3]) ifFalse: [self error: self class positionOutOfBoundsErrorDescription ].
	((newPosition x between: 1 and: 3) and: [newPosition y between: 1 and: 3]) ifFalse: [self error: self class positionOutOfBoundsErrorDescription ].
	self failIfPositionAlreadyHoldsAPiece: newPosition.
	(self positionsFor: #X) remove: currentPosition ifAbsent: [self error: self class positionIsNotUnderPlayersControlErrorDescription].
	(self positionsFor: #X) add: newPosition.
	state _ OAdding for: self
	
	! !

!testRun: #TerniLapilliTests #test28 stamp: 'fr 10/31/2020 14:51:35'!
PASSED!

!testRun: #TerniLapilliTests #test01 stamp: 'fr 10/31/2020 14:51:35'!
PASSED!

!testRun: #TerniLapilliTests #test02 stamp: 'fr 10/31/2020 14:51:35'!
PASSED!

!testRun: #TerniLapilliTests #test03 stamp: 'fr 10/31/2020 14:51:35'!
PASSED!

!testRun: #TerniLapilliTests #test04 stamp: 'fr 10/31/2020 14:51:35'!
PASSED!

!testRun: #TerniLapilliTests #test05 stamp: 'fr 10/31/2020 14:51:35'!
PASSED!

!testRun: #TerniLapilliTests #test06 stamp: 'fr 10/31/2020 14:51:35'!
PASSED!

!testRun: #TerniLapilliTests #test07 stamp: 'fr 10/31/2020 14:51:35'!
PASSED!

!testRun: #TerniLapilliTests #test08 stamp: 'fr 10/31/2020 14:51:35'!
PASSED!

!testRun: #TerniLapilliTests #test09 stamp: 'fr 10/31/2020 14:51:35'!
PASSED!

!testRun: #TerniLapilliTests #test10 stamp: 'fr 10/31/2020 14:51:35'!
PASSED!

!testRun: #TerniLapilliTests #test11 stamp: 'fr 10/31/2020 14:51:35'!
PASSED!

!testRun: #TerniLapilliTests #test12 stamp: 'fr 10/31/2020 14:51:35'!
PASSED!

!testRun: #TerniLapilliTests #test13 stamp: 'fr 10/31/2020 14:51:35'!
PASSED!

!testRun: #TerniLapilliTests #test14 stamp: 'fr 10/31/2020 14:51:35'!
PASSED!

!testRun: #TerniLapilliTests #test15 stamp: 'fr 10/31/2020 14:51:35'!
PASSED!

!testRun: #TerniLapilliTests #test16 stamp: 'fr 10/31/2020 14:51:35'!
PASSED!

!testRun: #TerniLapilliTests #test17 stamp: 'fr 10/31/2020 14:51:35'!
PASSED!

!testRun: #TerniLapilliTests #test18 stamp: 'fr 10/31/2020 14:51:35'!
PASSED!

!testRun: #TerniLapilliTests #test19 stamp: 'fr 10/31/2020 14:51:35'!
PASSED!

!testRun: #TerniLapilliTests #test20 stamp: 'fr 10/31/2020 14:51:35'!
PASSED!

!testRun: #TerniLapilliTests #test21 stamp: 'fr 10/31/2020 14:51:35'!
FAILURE!

!testRun: #TerniLapilliTests #test22 stamp: 'fr 10/31/2020 14:51:35'!
PASSED!

!testRun: #TerniLapilliTests #test23 stamp: 'fr 10/31/2020 14:51:35'!
PASSED!

!testRun: #TerniLapilliTests #test24 stamp: 'fr 10/31/2020 14:51:35'!
PASSED!

!testRun: #TerniLapilliTests #test25 stamp: 'fr 10/31/2020 14:51:35'!
PASSED!

!testRun: #TerniLapilliTests #test26 stamp: 'fr 10/31/2020 14:51:35'!
PASSED!

!testRun: #TerniLapilliTests #test27 stamp: 'fr 10/31/2020 14:51:35'!
PASSED!

!testRun: #TerniLapilliTests #test28 stamp: 'fr 10/31/2020 14:51:35'!
PASSED!

!testRun: #TerniLapilliTests #test21 stamp: 'fr 10/31/2020 14:51:35'!
FAILURE!

!testRun: #TerniLapilliTests #test28 stamp: 'fr 10/31/2020 14:52:03'!
PASSED!

!testRun: #TerniLapilliTests #test01 stamp: 'fr 10/31/2020 14:52:03'!
PASSED!

!testRun: #TerniLapilliTests #test02 stamp: 'fr 10/31/2020 14:52:03'!
PASSED!

!testRun: #TerniLapilliTests #test03 stamp: 'fr 10/31/2020 14:52:03'!
PASSED!

!testRun: #TerniLapilliTests #test04 stamp: 'fr 10/31/2020 14:52:03'!
PASSED!

!testRun: #TerniLapilliTests #test05 stamp: 'fr 10/31/2020 14:52:03'!
PASSED!

!testRun: #TerniLapilliTests #test06 stamp: 'fr 10/31/2020 14:52:03'!
PASSED!

!testRun: #TerniLapilliTests #test07 stamp: 'fr 10/31/2020 14:52:03'!
PASSED!

!testRun: #TerniLapilliTests #test08 stamp: 'fr 10/31/2020 14:52:03'!
PASSED!

!testRun: #TerniLapilliTests #test09 stamp: 'fr 10/31/2020 14:52:03'!
PASSED!

!testRun: #TerniLapilliTests #test10 stamp: 'fr 10/31/2020 14:52:03'!
PASSED!

!testRun: #TerniLapilliTests #test11 stamp: 'fr 10/31/2020 14:52:03'!
PASSED!

!testRun: #TerniLapilliTests #test12 stamp: 'fr 10/31/2020 14:52:03'!
PASSED!

!testRun: #TerniLapilliTests #test13 stamp: 'fr 10/31/2020 14:52:03'!
PASSED!

!testRun: #TerniLapilliTests #test14 stamp: 'fr 10/31/2020 14:52:03'!
PASSED!

!testRun: #TerniLapilliTests #test15 stamp: 'fr 10/31/2020 14:52:03'!
PASSED!

!testRun: #TerniLapilliTests #test16 stamp: 'fr 10/31/2020 14:52:03'!
PASSED!

!testRun: #TerniLapilliTests #test17 stamp: 'fr 10/31/2020 14:52:03'!
PASSED!

!testRun: #TerniLapilliTests #test18 stamp: 'fr 10/31/2020 14:52:03'!
PASSED!

!testRun: #TerniLapilliTests #test19 stamp: 'fr 10/31/2020 14:52:03'!
PASSED!

!testRun: #TerniLapilliTests #test20 stamp: 'fr 10/31/2020 14:52:03'!
PASSED!

!testRun: #TerniLapilliTests #test21 stamp: 'fr 10/31/2020 14:52:03'!
FAILURE!

!testRun: #TerniLapilliTests #test22 stamp: 'fr 10/31/2020 14:52:03'!
PASSED!

!testRun: #TerniLapilliTests #test23 stamp: 'fr 10/31/2020 14:52:03'!
PASSED!

!testRun: #TerniLapilliTests #test24 stamp: 'fr 10/31/2020 14:52:03'!
PASSED!

!testRun: #TerniLapilliTests #test25 stamp: 'fr 10/31/2020 14:52:03'!
PASSED!

!testRun: #TerniLapilliTests #test26 stamp: 'fr 10/31/2020 14:52:03'!
PASSED!

!testRun: #TerniLapilliTests #test27 stamp: 'fr 10/31/2020 14:52:03'!
PASSED!

!testRun: #TerniLapilliTests #test28 stamp: 'fr 10/31/2020 14:52:03'!
PASSED!

!testRun: #TerniLapilliTests #test21 stamp: 'fr 10/31/2020 14:52:03'!
FAILURE!
!TerniLapilliTests methodsFor: 'as yet unclassified' stamp: 'fr 10/31/2020 14:52:28' prior: 50872362!
test21

	| terniLapilli |
	terniLapilli _ TerniLapilli new.
		
	self  should: [			terniLapilli putXAt: 1 @ 1 
						 ;putOAt: 1 @ 3
						 ;putXAt: 2 @ 1
						 ;putOAt: 2 @ 2
						 ;putXAt: 2 @ 3
						 ;putOAt: 3 @ 2
						 ;moveXFrom: 3@3 to: 3@1.] 
		raise: Error 
		withMessageText: TerniLapilli positionIsNotUnderPlayersControlErrorDescription ! !

!testRun: #TerniLapilliTests #test21 stamp: 'fr 10/31/2020 14:52:29'!
PASSED!

!testRun: #TerniLapilliTests #test01 stamp: 'fr 10/31/2020 14:52:29'!
PASSED!

!testRun: #TerniLapilliTests #test02 stamp: 'fr 10/31/2020 14:52:29'!
PASSED!

!testRun: #TerniLapilliTests #test03 stamp: 'fr 10/31/2020 14:52:29'!
PASSED!

!testRun: #TerniLapilliTests #test04 stamp: 'fr 10/31/2020 14:52:29'!
PASSED!

!testRun: #TerniLapilliTests #test05 stamp: 'fr 10/31/2020 14:52:29'!
PASSED!

!testRun: #TerniLapilliTests #test06 stamp: 'fr 10/31/2020 14:52:29'!
PASSED!

!testRun: #TerniLapilliTests #test07 stamp: 'fr 10/31/2020 14:52:29'!
PASSED!

!testRun: #TerniLapilliTests #test08 stamp: 'fr 10/31/2020 14:52:29'!
PASSED!

!testRun: #TerniLapilliTests #test09 stamp: 'fr 10/31/2020 14:52:29'!
PASSED!

!testRun: #TerniLapilliTests #test10 stamp: 'fr 10/31/2020 14:52:29'!
PASSED!

!testRun: #TerniLapilliTests #test11 stamp: 'fr 10/31/2020 14:52:29'!
PASSED!

!testRun: #TerniLapilliTests #test12 stamp: 'fr 10/31/2020 14:52:29'!
PASSED!

!testRun: #TerniLapilliTests #test13 stamp: 'fr 10/31/2020 14:52:29'!
PASSED!

!testRun: #TerniLapilliTests #test14 stamp: 'fr 10/31/2020 14:52:29'!
PASSED!

!testRun: #TerniLapilliTests #test15 stamp: 'fr 10/31/2020 14:52:29'!
PASSED!

!testRun: #TerniLapilliTests #test16 stamp: 'fr 10/31/2020 14:52:29'!
PASSED!

!testRun: #TerniLapilliTests #test17 stamp: 'fr 10/31/2020 14:52:29'!
PASSED!

!testRun: #TerniLapilliTests #test18 stamp: 'fr 10/31/2020 14:52:29'!
PASSED!

!testRun: #TerniLapilliTests #test19 stamp: 'fr 10/31/2020 14:52:29'!
PASSED!

!testRun: #TerniLapilliTests #test20 stamp: 'fr 10/31/2020 14:52:29'!
PASSED!

!testRun: #TerniLapilliTests #test21 stamp: 'fr 10/31/2020 14:52:29'!
PASSED!

!testRun: #TerniLapilliTests #test22 stamp: 'fr 10/31/2020 14:52:29'!
PASSED!

!testRun: #TerniLapilliTests #test23 stamp: 'fr 10/31/2020 14:52:29'!
PASSED!

!testRun: #TerniLapilliTests #test24 stamp: 'fr 10/31/2020 14:52:29'!
PASSED!

!testRun: #TerniLapilliTests #test25 stamp: 'fr 10/31/2020 14:52:29'!
PASSED!

!testRun: #TerniLapilliTests #test26 stamp: 'fr 10/31/2020 14:52:29'!
PASSED!

!testRun: #TerniLapilliTests #test27 stamp: 'fr 10/31/2020 14:52:29'!
PASSED!

!testRun: #TerniLapilliTests #test28 stamp: 'fr 10/31/2020 14:52:29'!
PASSED!
!TerniLapilliTests methodsFor: 'as yet unclassified' stamp: 'fr 10/31/2020 14:52:45' prior: 50873446!
test21

	| terniLapilli |
	terniLapilli _ TerniLapilli new.
		
	self  should: [			terniLapilli putXAt: 1 @ 1 
						 ;putOAt: 1 @ 3
						 ;putXAt: 2 @ 1
						 ;putOAt: 2 @ 2
						 ;putXAt: 2 @ 3
						 ;putOAt: 3 @ 2
						 ;moveXFrom: 3@2 to: 3@1.] 
		raise: Error 
		withMessageText: TerniLapilli positionIsNotUnderPlayersControlErrorDescription ! !

!testRun: #TerniLapilliTests #test21 stamp: 'fr 10/31/2020 14:52:47'!
PASSED!

!testRun: #TerniLapilliTests #test01 stamp: 'fr 10/31/2020 14:52:47'!
PASSED!

!testRun: #TerniLapilliTests #test02 stamp: 'fr 10/31/2020 14:52:47'!
PASSED!

!testRun: #TerniLapilliTests #test03 stamp: 'fr 10/31/2020 14:52:47'!
PASSED!

!testRun: #TerniLapilliTests #test04 stamp: 'fr 10/31/2020 14:52:47'!
PASSED!

!testRun: #TerniLapilliTests #test05 stamp: 'fr 10/31/2020 14:52:47'!
PASSED!

!testRun: #TerniLapilliTests #test06 stamp: 'fr 10/31/2020 14:52:47'!
PASSED!

!testRun: #TerniLapilliTests #test07 stamp: 'fr 10/31/2020 14:52:47'!
PASSED!

!testRun: #TerniLapilliTests #test08 stamp: 'fr 10/31/2020 14:52:47'!
PASSED!

!testRun: #TerniLapilliTests #test09 stamp: 'fr 10/31/2020 14:52:47'!
PASSED!

!testRun: #TerniLapilliTests #test10 stamp: 'fr 10/31/2020 14:52:47'!
PASSED!

!testRun: #TerniLapilliTests #test11 stamp: 'fr 10/31/2020 14:52:47'!
PASSED!

!testRun: #TerniLapilliTests #test12 stamp: 'fr 10/31/2020 14:52:47'!
PASSED!

!testRun: #TerniLapilliTests #test13 stamp: 'fr 10/31/2020 14:52:47'!
PASSED!

!testRun: #TerniLapilliTests #test14 stamp: 'fr 10/31/2020 14:52:47'!
PASSED!

!testRun: #TerniLapilliTests #test15 stamp: 'fr 10/31/2020 14:52:47'!
PASSED!

!testRun: #TerniLapilliTests #test16 stamp: 'fr 10/31/2020 14:52:47'!
PASSED!

!testRun: #TerniLapilliTests #test17 stamp: 'fr 10/31/2020 14:52:47'!
PASSED!

!testRun: #TerniLapilliTests #test18 stamp: 'fr 10/31/2020 14:52:47'!
PASSED!

!testRun: #TerniLapilliTests #test19 stamp: 'fr 10/31/2020 14:52:47'!
PASSED!

!testRun: #TerniLapilliTests #test20 stamp: 'fr 10/31/2020 14:52:47'!
PASSED!

!testRun: #TerniLapilliTests #test21 stamp: 'fr 10/31/2020 14:52:47'!
PASSED!

!testRun: #TerniLapilliTests #test22 stamp: 'fr 10/31/2020 14:52:47'!
PASSED!

!testRun: #TerniLapilliTests #test23 stamp: 'fr 10/31/2020 14:52:47'!
PASSED!

!testRun: #TerniLapilliTests #test24 stamp: 'fr 10/31/2020 14:52:47'!
PASSED!

!testRun: #TerniLapilliTests #test25 stamp: 'fr 10/31/2020 14:52:47'!
PASSED!

!testRun: #TerniLapilliTests #test26 stamp: 'fr 10/31/2020 14:52:47'!
PASSED!

!testRun: #TerniLapilliTests #test27 stamp: 'fr 10/31/2020 14:52:47'!
PASSED!

!testRun: #TerniLapilliTests #test28 stamp: 'fr 10/31/2020 14:52:47'!
PASSED!

!methodRemoval: TerniLapilliTests #test23 stamp: 'fr 10/31/2020 15:05:29'!
test23

	| terniLapilli |
	terniLapilli _ TerniLapilli new.
		
	self  should: [			terniLapilli putXAt: 1 @ 1 
						 ;putOAt: 1 @ 3
						 ;putXAt: 2 @ 1
						 ;putOAt: 2 @ 2
						 ;putXAt: 2 @ 3
						 ;putOAt: 3 @ 2
						 ;moveXFrom: 1@1 to: 1@2
						 ;moveOFrom: 3@3 to: 3@2.] 
		raise: Error 
		withMessageText: TerniLapilli positionIsNotUnderPlayersControlErrorDescription!
!TerniLapilliTests methodsFor: 'as yet unclassified' stamp: 'fr 10/31/2020 15:06:27' prior: 50873249!
test28

	| terniLapilli |
	terniLapilli _ TerniLapilli new.
		
	self  should: [			terniLapilli putXAt: 1 @ 1 
						 ;putOAt: 1 @ 3
						 ;putXAt: 2 @ 1
						 ;putOAt: 2 @ 2
						 ;putXAt: 2 @ 3
						 ;putOAt: 3 @ 2
						 ;moveXFrom: 1@1 to: 1@2.] 
		raise: Error 
		withMessageText: TerniLapilli positionAlreadyHoldsAPieceErrorDescription ! !
!TerniLapilliTests methodsFor: 'as yet unclassified' stamp: 'fr 10/31/2020 15:10:23'!
test29

	| terniLapilli |
	terniLapilli _ TerniLapilli new.
		
	self  should: [			terniLapilli putXAt: 1 @ 1 
						 ;putOAt: 1 @ 3
						 ;putXAt: 2 @ 1
						 ;putOAt: 2 @ 2
						 ;putXAt: 2 @ 3
						 ;putOAt: 3 @ 2
						 ;moveXFrom: 1@1 to: 1@2.] 
		raise: Error 
		withMessageText: TerniLapilli positionAlreadyHoldsAPieceErrorDescription ! !
!TerniLapilliTests methodsFor: 'as yet unclassified' stamp: 'fr 10/31/2020 15:10:39' prior: 50873633!
test28

	| terniLapilli |
	terniLapilli _ TerniLapilli new.
		
	self  should: [			terniLapilli putXAt: 1 @ 1 
						 ;putOAt: 1 @ 3
						 ;putXAt: 2 @ 1
						 ;putOAt: 2 @ 2
						 ;putXAt: 2 @ 3
						 ;putOAt: 3 @ 2
						 ;moveXFrom: 1@1 to: 2@2.] 
		raise: Error 
		withMessageText: TerniLapilli positionAlreadyHoldsAPieceErrorDescription ! !
!TerniLapilliTests methodsFor: 'as yet unclassified' stamp: 'fr 10/31/2020 15:11:50' prior: 50873647!
test29

	| terniLapilli |
	terniLapilli _ TerniLapilli new.
		
	self  should: [			terniLapilli putXAt: 1 @ 1 
						 ;putOAt: 1 @ 3
						 ;putXAt: 2 @ 1
						 ;putOAt: 2 @ 2
						 ;putXAt: 2 @ 3
						 ;putOAt: 3 @ 2
						 ;moveXFrom: 1@1 to: 1@2
						 ;moveOFrom: 1@3 to: 1@2.] 
		raise: Error 
		withMessageText: TerniLapilli positionAlreadyHoldsAPieceErrorDescription ! !

!testRun: #TerniLapilliTests #test29 stamp: 'fr 10/31/2020 15:11:50'!
FAILURE!
!TerniLapilli methodsFor: 'actions' stamp: 'fr 10/31/2020 15:14:30' prior: 50873127!
moveOFrom: currentPosition to: newPosition 
	
	((self positionsFor: #O) size = 3) ifFalse: [self error: self class canNotMoveBeforeAddingThreePiecesErrorDescription].
	((currentPosition x between: 1 and: 3) and: [currentPosition y between: 1 and: 3]) ifFalse: [self error: self class positionOutOfBoundsErrorDescription ].
	((newPosition x between: 1 and: 3) and: [newPosition y between: 1 and: 3]) ifFalse: [self error: self class positionOutOfBoundsErrorDescription ].
	self failIfPositionAlreadyHoldsAPiece: newPosition.
	(self positionsFor: #O) remove: currentPosition ifAbsent: [self error: self class positionIsNotUnderPlayersControlErrorDescription].
	(self positionsFor: #O) add: newPosition.
	state _ XAdding for: self	
! !

!testRun: #TerniLapilliTests #test29 stamp: 'fr 10/31/2020 15:14:32'!
PASSED!

!testRun: #TerniLapilliTests #test01 stamp: 'fr 10/31/2020 15:14:32'!
PASSED!

!testRun: #TerniLapilliTests #test02 stamp: 'fr 10/31/2020 15:14:32'!
PASSED!

!testRun: #TerniLapilliTests #test03 stamp: 'fr 10/31/2020 15:14:32'!
PASSED!

!testRun: #TerniLapilliTests #test04 stamp: 'fr 10/31/2020 15:14:32'!
PASSED!

!testRun: #TerniLapilliTests #test05 stamp: 'fr 10/31/2020 15:14:32'!
PASSED!

!testRun: #TerniLapilliTests #test06 stamp: 'fr 10/31/2020 15:14:32'!
PASSED!

!testRun: #TerniLapilliTests #test07 stamp: 'fr 10/31/2020 15:14:32'!
PASSED!

!testRun: #TerniLapilliTests #test08 stamp: 'fr 10/31/2020 15:14:32'!
PASSED!

!testRun: #TerniLapilliTests #test09 stamp: 'fr 10/31/2020 15:14:32'!
PASSED!

!testRun: #TerniLapilliTests #test10 stamp: 'fr 10/31/2020 15:14:32'!
PASSED!

!testRun: #TerniLapilliTests #test11 stamp: 'fr 10/31/2020 15:14:32'!
PASSED!

!testRun: #TerniLapilliTests #test12 stamp: 'fr 10/31/2020 15:14:32'!
PASSED!

!testRun: #TerniLapilliTests #test13 stamp: 'fr 10/31/2020 15:14:32'!
PASSED!

!testRun: #TerniLapilliTests #test14 stamp: 'fr 10/31/2020 15:14:32'!
PASSED!

!testRun: #TerniLapilliTests #test15 stamp: 'fr 10/31/2020 15:14:32'!
PASSED!

!testRun: #TerniLapilliTests #test16 stamp: 'fr 10/31/2020 15:14:32'!
PASSED!

!testRun: #TerniLapilliTests #test17 stamp: 'fr 10/31/2020 15:14:32'!
PASSED!

!testRun: #TerniLapilliTests #test18 stamp: 'fr 10/31/2020 15:14:32'!
ERROR!

!testRun: #TerniLapilliTests #test19 stamp: 'fr 10/31/2020 15:14:32'!
PASSED!

!testRun: #TerniLapilliTests #test20 stamp: 'fr 10/31/2020 15:14:32'!
PASSED!

!testRun: #TerniLapilliTests #test21 stamp: 'fr 10/31/2020 15:14:32'!
PASSED!

!testRun: #TerniLapilliTests #test22 stamp: 'fr 10/31/2020 15:14:32'!
FAILURE!

!testRun: #TerniLapilliTests #test24 stamp: 'fr 10/31/2020 15:14:32'!
PASSED!

!testRun: #TerniLapilliTests #test25 stamp: 'fr 10/31/2020 15:14:32'!
PASSED!

!testRun: #TerniLapilliTests #test26 stamp: 'fr 10/31/2020 15:14:32'!
PASSED!

!testRun: #TerniLapilliTests #test27 stamp: 'fr 10/31/2020 15:14:32'!
PASSED!

!testRun: #TerniLapilliTests #test28 stamp: 'fr 10/31/2020 15:14:32'!
PASSED!

!testRun: #TerniLapilliTests #test29 stamp: 'fr 10/31/2020 15:14:32'!
PASSED!

!testRun: #TerniLapilliTests #test22 stamp: 'fr 10/31/2020 15:14:59'!
FAILURE!
!TerniLapilliTests methodsFor: 'as yet unclassified' stamp: 'fr 10/31/2020 15:17:25' prior: 50872376!
test22

	| terniLapilli |
	terniLapilli _ TerniLapilli new.
		
	self  should: [			terniLapilli putXAt: 1 @ 1 
						 ;putOAt: 1 @ 3
						 ;putXAt: 2 @ 1
						 ;putOAt: 2 @ 2
						 ;putXAt: 2 @ 3
						 ;putOAt: 3 @ 3
						 ;moveXFrom: 1@1 to: 1@2
						 ;moveOFrom: 3@3 to: 3@2.] 
		raise: Error 
		withMessageText: TerniLapilli positionIsNotUnderPlayersControlErrorDescription! !
!TerniLapilliTests methodsFor: 'as yet unclassified' stamp: 'fr 10/31/2020 15:17:29' prior: 50873796!
test22

	| terniLapilli |
	terniLapilli _ TerniLapilli new.
		
	self  should: [			terniLapilli putXAt: 1 @ 1 
						 ;putOAt: 1 @ 3
						 ;putXAt: 2 @ 1
						 ;putOAt: 2 @ 2
						 ;putXAt: 2 @ 3
						 ;putOAt: 3 @ 3
						 ;moveXFrom: 1@1 to: 1@2
						 ;moveOFrom: 3@2 to: 3@1.] 
		raise: Error 
		withMessageText: TerniLapilli positionIsNotUnderPlayersControlErrorDescription! !
!TerniLapilliTests methodsFor: 'as yet unclassified' stamp: 'fr 10/31/2020 15:18:09' prior: 50871793!
test18

	| terniLapilli |
	terniLapilli _ TerniLapilli new.
	terniLapilli putXAt: 1 @ 1 
			 ;putOAt: 1 @ 3
			 ;putXAt: 2 @ 1
			 ;putOAt: 2 @ 2
			 ;putXAt: 2 @ 3
			 ;putOAt: 3 @ 2
			 ;moveXFrom: 1@1 to: 1@2
			 ;moveOFrom: 3@2 to: 3@3.
			
	self assert: [(terniLapilli hasOPieceAt: 2@3) and: [(terniLapilli hasXPieceAt: 1@3) not]]! !

!testRun: #TerniLapilliTests #test18 stamp: 'fr 10/31/2020 15:18:10'!
FAILURE!
!TerniLapilliTests methodsFor: 'as yet unclassified' stamp: 'fr 10/31/2020 15:18:25' prior: 50873828!
test18

	| terniLapilli |
	terniLapilli _ TerniLapilli new.
	terniLapilli putXAt: 1 @ 1 
			 ;putOAt: 1 @ 3
			 ;putXAt: 2 @ 1
			 ;putOAt: 2 @ 2
			 ;putXAt: 2 @ 3
			 ;putOAt: 3 @ 2
			 ;moveXFrom: 1@1 to: 1@2
			 ;moveOFrom: 3@2 to: 3@3.
			
	self assert: [(terniLapilli hasOPieceAt: 3@3) and: [(terniLapilli hasXPieceAt: 3@2) not]]! !

!testRun: #TerniLapilliTests #test18 stamp: 'fr 10/31/2020 15:18:26'!
PASSED!

!testRun: #TerniLapilliTests #test01 stamp: 'fr 10/31/2020 15:18:26'!
PASSED!

!testRun: #TerniLapilliTests #test02 stamp: 'fr 10/31/2020 15:18:26'!
PASSED!

!testRun: #TerniLapilliTests #test03 stamp: 'fr 10/31/2020 15:18:26'!
PASSED!

!testRun: #TerniLapilliTests #test04 stamp: 'fr 10/31/2020 15:18:26'!
PASSED!

!testRun: #TerniLapilliTests #test05 stamp: 'fr 10/31/2020 15:18:26'!
PASSED!

!testRun: #TerniLapilliTests #test06 stamp: 'fr 10/31/2020 15:18:26'!
PASSED!

!testRun: #TerniLapilliTests #test07 stamp: 'fr 10/31/2020 15:18:26'!
PASSED!

!testRun: #TerniLapilliTests #test08 stamp: 'fr 10/31/2020 15:18:26'!
PASSED!

!testRun: #TerniLapilliTests #test09 stamp: 'fr 10/31/2020 15:18:26'!
PASSED!

!testRun: #TerniLapilliTests #test10 stamp: 'fr 10/31/2020 15:18:26'!
PASSED!

!testRun: #TerniLapilliTests #test11 stamp: 'fr 10/31/2020 15:18:26'!
PASSED!

!testRun: #TerniLapilliTests #test12 stamp: 'fr 10/31/2020 15:18:26'!
PASSED!

!testRun: #TerniLapilliTests #test13 stamp: 'fr 10/31/2020 15:18:26'!
PASSED!

!testRun: #TerniLapilliTests #test14 stamp: 'fr 10/31/2020 15:18:26'!
PASSED!

!testRun: #TerniLapilliTests #test15 stamp: 'fr 10/31/2020 15:18:26'!
PASSED!

!testRun: #TerniLapilliTests #test16 stamp: 'fr 10/31/2020 15:18:26'!
PASSED!

!testRun: #TerniLapilliTests #test17 stamp: 'fr 10/31/2020 15:18:26'!
PASSED!

!testRun: #TerniLapilliTests #test18 stamp: 'fr 10/31/2020 15:18:26'!
PASSED!

!testRun: #TerniLapilliTests #test19 stamp: 'fr 10/31/2020 15:18:26'!
PASSED!

!testRun: #TerniLapilliTests #test20 stamp: 'fr 10/31/2020 15:18:26'!
PASSED!

!testRun: #TerniLapilliTests #test21 stamp: 'fr 10/31/2020 15:18:26'!
PASSED!

!testRun: #TerniLapilliTests #test22 stamp: 'fr 10/31/2020 15:18:26'!
PASSED!

!testRun: #TerniLapilliTests #test24 stamp: 'fr 10/31/2020 15:18:26'!
PASSED!

!testRun: #TerniLapilliTests #test25 stamp: 'fr 10/31/2020 15:18:26'!
PASSED!

!testRun: #TerniLapilliTests #test26 stamp: 'fr 10/31/2020 15:18:26'!
PASSED!

!testRun: #TerniLapilliTests #test27 stamp: 'fr 10/31/2020 15:18:26'!
PASSED!

!testRun: #TerniLapilliTests #test28 stamp: 'fr 10/31/2020 15:18:26'!
PASSED!

!testRun: #TerniLapilliTests #test29 stamp: 'fr 10/31/2020 15:18:26'!
PASSED!
!TerniLapilliTests methodsFor: 'as yet unclassified' stamp: 'fr 10/31/2020 15:21:48'!
test30

	| terniLapilli |
	terniLapilli _ TerniLapilli new.
		
	self  should: [			terniLapilli putXAt: 1 @ 1 
						 ;putOAt: 1 @ 3
						 ;putXAt: 2 @ 1
						 ;putOAt: 2 @ 2
						 ;putXAt: 2 @ 3
						 ;putOAt: 3 @ 2
						 ;moveXFrom: 1@1 to: 1@2
						 ;moveOFrom: 1@3 to: 1@2.] 
		raise: Error 
		withMessageText: TerniLapilli positionAlreadyHoldsAPieceErrorDescription ! !
!TerniLapilliTests methodsFor: 'as yet unclassified' stamp: 'fr 10/31/2020 15:23:04' prior: 50873930!
test30

	| terniLapilli |
	terniLapilli _ TerniLapilli new.
		
	self  should: [			terniLapilli putXAt: 1 @ 1 
						 ;putOAt: 2 @ 1
						 ;putXAt: 1 @ 2
						 ;putOAt: 2 @ 2
						 ;putXAt: 3 @ 1
						 ;putOAt: 1 @ 3
						 ;moveXFrom: 1@1 to: 1@2.] 
		raise: Error 
		withMessageText: TerniLapilli positionAlreadyHoldsAPieceErrorDescription ! !
!TerniLapilliTests methodsFor: 'as yet unclassified' stamp: 'fr 10/31/2020 15:23:22' prior: 50873946!
test30

	| terniLapilli |
	terniLapilli _ TerniLapilli new.
		
	self  should: [			terniLapilli putXAt: 1 @ 1 
						 ;putOAt: 2 @ 1
						 ;putXAt: 1 @ 2
						 ;putOAt: 2 @ 2
						 ;putXAt: 3 @ 1
						 ;putOAt: 1 @ 3
						 ;moveXFrom: 3@1 to: 3@3.] 
		raise: Error 
		withMessageText: TerniLapilli positionAlreadyHoldsAPieceErrorDescription ! !
!TerniLapilliTests methodsFor: 'as yet unclassified' stamp: 'fr 10/31/2020 15:24:09' prior: 50873961!
test30

	| terniLapilli |
	terniLapilli _ TerniLapilli new.
		
	self  should: [			terniLapilli putXAt: 1 @ 1 
						 ;putOAt: 2 @ 1
						 ;putXAt: 1 @ 2
						 ;putOAt: 2 @ 2
						 ;putXAt: 3 @ 1
						 ;putOAt: 1 @ 3
						 ;moveXFrom: 3@1 to: 3@3.] 
		raise: Error 
		withMessageText: TerniLapilli canNotMoveToPositionMoreThanOnePlaceAfarErrorDescription ! !

!testRun: #TerniLapilliTests #test30 stamp: 'fr 10/31/2020 15:24:31'!
ERROR!
!TerniLapilli class methodsFor: 'error message descriptions' stamp: 'fr 10/31/2020 15:24:41'!
canNotMoveToPositionMoreThanOnePlaceAfarErrorDescription
	self shouldBeImplemented.! !
!TerniLapilli class methodsFor: 'error message descriptions' stamp: 'fr 10/31/2020 15:24:56' prior: 50873993!
canNotMoveToPositionMoreThanOnePlaceAfarErrorDescription
	
	^'Destination is more than one place afar'! !

!testRun: #TerniLapilliTests #test30 stamp: 'fr 10/31/2020 15:24:59'!
FAILURE!
!TerniLapilli methodsFor: 'actions' stamp: 'fr 10/31/2020 15:27:32' prior: 50873271!
moveXFrom: currentPosition to: newPosition
	
	((self positionsFor: #X) size = 3) ifFalse: [self error: self class canNotMoveBeforeAddingThreePiecesErrorDescription ].
	((currentPosition x between: 1 and: 3) and: [currentPosition y between: 1 and: 3]) ifFalse: [self error: self class positionOutOfBoundsErrorDescription ].
	((newPosition x between: 1 and: 3) and: [newPosition y between: 1 and: 3]) ifFalse: [self error: self class positionOutOfBoundsErrorDescription ].
	self failIfPositionAlreadyHoldsAPiece: newPosition.
	((currentPosition dist: newPosition) > 1) ifTrue: [self error: self class canNotMoveToPositionMoreThanOnePlaceAfarErrorDescription].
	(self positionsFor: #X) remove: currentPosition ifAbsent: [self error: self class positionIsNotUnderPlayersControlErrorDescription].
	(self positionsFor: #X) add: newPosition.
	state _ OAdding for: self
	
	! !

!testRun: #TerniLapilliTests #test30 stamp: 'fr 10/31/2020 15:27:34'!
PASSED!

!testRun: #TerniLapilliTests #test01 stamp: 'fr 10/31/2020 15:27:34'!
PASSED!

!testRun: #TerniLapilliTests #test02 stamp: 'fr 10/31/2020 15:27:34'!
PASSED!

!testRun: #TerniLapilliTests #test03 stamp: 'fr 10/31/2020 15:27:34'!
PASSED!

!testRun: #TerniLapilliTests #test04 stamp: 'fr 10/31/2020 15:27:34'!
PASSED!

!testRun: #TerniLapilliTests #test05 stamp: 'fr 10/31/2020 15:27:34'!
PASSED!

!testRun: #TerniLapilliTests #test06 stamp: 'fr 10/31/2020 15:27:34'!
PASSED!

!testRun: #TerniLapilliTests #test07 stamp: 'fr 10/31/2020 15:27:34'!
PASSED!

!testRun: #TerniLapilliTests #test08 stamp: 'fr 10/31/2020 15:27:34'!
PASSED!

!testRun: #TerniLapilliTests #test09 stamp: 'fr 10/31/2020 15:27:34'!
PASSED!

!testRun: #TerniLapilliTests #test10 stamp: 'fr 10/31/2020 15:27:34'!
PASSED!

!testRun: #TerniLapilliTests #test11 stamp: 'fr 10/31/2020 15:27:34'!
PASSED!

!testRun: #TerniLapilliTests #test12 stamp: 'fr 10/31/2020 15:27:34'!
PASSED!

!testRun: #TerniLapilliTests #test13 stamp: 'fr 10/31/2020 15:27:34'!
PASSED!

!testRun: #TerniLapilliTests #test14 stamp: 'fr 10/31/2020 15:27:34'!
PASSED!

!testRun: #TerniLapilliTests #test15 stamp: 'fr 10/31/2020 15:27:34'!
PASSED!

!testRun: #TerniLapilliTests #test16 stamp: 'fr 10/31/2020 15:27:34'!
PASSED!

!testRun: #TerniLapilliTests #test17 stamp: 'fr 10/31/2020 15:27:34'!
PASSED!

!testRun: #TerniLapilliTests #test18 stamp: 'fr 10/31/2020 15:27:34'!
PASSED!

!testRun: #TerniLapilliTests #test19 stamp: 'fr 10/31/2020 15:27:34'!
PASSED!

!testRun: #TerniLapilliTests #test20 stamp: 'fr 10/31/2020 15:27:34'!
PASSED!

!testRun: #TerniLapilliTests #test21 stamp: 'fr 10/31/2020 15:27:34'!
PASSED!

!testRun: #TerniLapilliTests #test22 stamp: 'fr 10/31/2020 15:27:34'!
PASSED!

!testRun: #TerniLapilliTests #test24 stamp: 'fr 10/31/2020 15:27:34'!
PASSED!

!testRun: #TerniLapilliTests #test25 stamp: 'fr 10/31/2020 15:27:34'!
PASSED!

!testRun: #TerniLapilliTests #test26 stamp: 'fr 10/31/2020 15:27:34'!
PASSED!

!testRun: #TerniLapilliTests #test27 stamp: 'fr 10/31/2020 15:27:34'!
PASSED!

!testRun: #TerniLapilliTests #test28 stamp: 'fr 10/31/2020 15:27:34'!
PASSED!

!testRun: #TerniLapilliTests #test29 stamp: 'fr 10/31/2020 15:27:34'!
PASSED!

!testRun: #TerniLapilliTests #test30 stamp: 'fr 10/31/2020 15:27:34'!
PASSED!
!TerniLapilliTests methodsFor: 'as yet unclassified' stamp: 'fr 10/31/2020 15:27:57'!
test31

	| terniLapilli |
	terniLapilli _ TerniLapilli new.
		
	self  should: [			terniLapilli putXAt: 1 @ 1 
						 ;putOAt: 2 @ 1
						 ;putXAt: 1 @ 2
						 ;putOAt: 2 @ 2
						 ;putXAt: 3 @ 1
						 ;putOAt: 1 @ 3
						 ;moveXFrom: 3@1 to: 3@3.] 
		raise: Error 
		withMessageText: TerniLapilli canNotMoveToPositionMoreThanOnePlaceAfarErrorDescription ! !
!TerniLapilliTests methodsFor: 'as yet unclassified' stamp: 'fr 10/31/2020 15:28:02' prior: 50874113!
test31

	| terniLapilli |
	terniLapilli _ TerniLapilli new.
		
	self  should: [			terniLapilli putXAt: 1 @ 1 
						 ;putOAt: 2 @ 1
						 ;putXAt: 1 @ 2
						 ;putOAt: 2 @ 2
						 ;putXAt: 3 @ 1
						 ;putOAt: 1 @ 3
						 ;moveXFrom: 3@1 to: 3@2.] 
		raise: Error 
		withMessageText: TerniLapilli canNotMoveToPositionMoreThanOnePlaceAfarErrorDescription ! !
!TerniLapilliTests methodsFor: 'as yet unclassified' stamp: 'fr 10/31/2020 15:28:30' prior: 50874128!
test31

	| terniLapilli |
	terniLapilli _ TerniLapilli new.
		
	self  should: [			terniLapilli putXAt: 1 @ 1 
						 ;putOAt: 2 @ 1
						 ;putXAt: 1 @ 2
						 ;putOAt: 2 @ 2
						 ;putXAt: 3 @ 1
						 ;putOAt: 1 @ 3
						 ;moveXFrom: 3@1 to: 3@2
						 ;moveOFrom: 1@3 to: 3@3.] 
		raise: Error 
		withMessageText: TerniLapilli canNotMoveToPositionMoreThanOnePlaceAfarErrorDescription ! !

!testRun: #TerniLapilliTests #test31 stamp: 'fr 10/31/2020 15:28:33'!
FAILURE!
!TerniLapilli methodsFor: 'actions' stamp: 'fr 10/31/2020 15:29:22' prior: 50873695!
moveOFrom: currentPosition to: newPosition 
	
	((self positionsFor: #O) size = 3) ifFalse: [self error: self class canNotMoveBeforeAddingThreePiecesErrorDescription].
	((currentPosition x between: 1 and: 3) and: [currentPosition y between: 1 and: 3]) ifFalse: [self error: self class positionOutOfBoundsErrorDescription ].
	((newPosition x between: 1 and: 3) and: [newPosition y between: 1 and: 3]) ifFalse: [self error: self class positionOutOfBoundsErrorDescription ].
	self failIfPositionAlreadyHoldsAPiece: newPosition.
	((currentPosition dist: newPosition) > 1) ifTrue: [self error: self class canNotMoveToPositionMoreThanOnePlaceAfarErrorDescription].
	(self positionsFor: #O) remove: currentPosition ifAbsent: [self error: self class positionIsNotUnderPlayersControlErrorDescription].
	(self positionsFor: #O) add: newPosition.
	state _ XAdding for: self	
! !

!testRun: #TerniLapilliTests #test31 stamp: 'fr 10/31/2020 15:29:23'!
PASSED!

!testRun: #TerniLapilliTests #test01 stamp: 'fr 10/31/2020 15:29:23'!
PASSED!

!testRun: #TerniLapilliTests #test02 stamp: 'fr 10/31/2020 15:29:23'!
PASSED!

!testRun: #TerniLapilliTests #test03 stamp: 'fr 10/31/2020 15:29:23'!
PASSED!

!testRun: #TerniLapilliTests #test04 stamp: 'fr 10/31/2020 15:29:23'!
PASSED!

!testRun: #TerniLapilliTests #test05 stamp: 'fr 10/31/2020 15:29:23'!
PASSED!

!testRun: #TerniLapilliTests #test06 stamp: 'fr 10/31/2020 15:29:23'!
PASSED!

!testRun: #TerniLapilliTests #test07 stamp: 'fr 10/31/2020 15:29:23'!
PASSED!

!testRun: #TerniLapilliTests #test08 stamp: 'fr 10/31/2020 15:29:23'!
PASSED!

!testRun: #TerniLapilliTests #test09 stamp: 'fr 10/31/2020 15:29:23'!
PASSED!

!testRun: #TerniLapilliTests #test10 stamp: 'fr 10/31/2020 15:29:23'!
PASSED!

!testRun: #TerniLapilliTests #test11 stamp: 'fr 10/31/2020 15:29:23'!
PASSED!

!testRun: #TerniLapilliTests #test12 stamp: 'fr 10/31/2020 15:29:23'!
PASSED!

!testRun: #TerniLapilliTests #test13 stamp: 'fr 10/31/2020 15:29:23'!
PASSED!

!testRun: #TerniLapilliTests #test14 stamp: 'fr 10/31/2020 15:29:23'!
PASSED!

!testRun: #TerniLapilliTests #test15 stamp: 'fr 10/31/2020 15:29:23'!
PASSED!

!testRun: #TerniLapilliTests #test16 stamp: 'fr 10/31/2020 15:29:23'!
PASSED!

!testRun: #TerniLapilliTests #test17 stamp: 'fr 10/31/2020 15:29:23'!
PASSED!

!testRun: #TerniLapilliTests #test18 stamp: 'fr 10/31/2020 15:29:23'!
PASSED!

!testRun: #TerniLapilliTests #test19 stamp: 'fr 10/31/2020 15:29:23'!
PASSED!

!testRun: #TerniLapilliTests #test20 stamp: 'fr 10/31/2020 15:29:23'!
PASSED!

!testRun: #TerniLapilliTests #test21 stamp: 'fr 10/31/2020 15:29:23'!
PASSED!

!testRun: #TerniLapilliTests #test22 stamp: 'fr 10/31/2020 15:29:23'!
PASSED!

!testRun: #TerniLapilliTests #test24 stamp: 'fr 10/31/2020 15:29:23'!
PASSED!

!testRun: #TerniLapilliTests #test25 stamp: 'fr 10/31/2020 15:29:23'!
PASSED!

!testRun: #TerniLapilliTests #test26 stamp: 'fr 10/31/2020 15:29:23'!
PASSED!

!testRun: #TerniLapilliTests #test27 stamp: 'fr 10/31/2020 15:29:23'!
PASSED!

!testRun: #TerniLapilliTests #test28 stamp: 'fr 10/31/2020 15:29:23'!
PASSED!

!testRun: #TerniLapilliTests #test29 stamp: 'fr 10/31/2020 15:29:23'!
PASSED!

!testRun: #TerniLapilliTests #test30 stamp: 'fr 10/31/2020 15:29:23'!
PASSED!

!testRun: #TerniLapilliTests #test31 stamp: 'fr 10/31/2020 15:29:23'!
PASSED!
!TerniLapilliTests methodsFor: 'as yet unclassified' stamp: 'fr 10/31/2020 15:32:03'!
test32

	| terniLapilli |
	terniLapilli _ TerniLapilli new.
		
	self  should: [			terniLapilli putXAt: 1 @ 1 
						 ;putOAt: 2 @ 1
						 ;putXAt: 1 @ 2
						 ;putOAt: 2 @ 2
						 ;putXAt: 3 @ 1
						 ;putOAt: 1 @ 3
						 ;moveXFrom: 3@1 to: 3@2
						 ;moveOFrom: 1@3 to: 3@3.] 
		raise: Error 
		withMessageText: TerniLapilli canNotMoveToPositionMoreThanOnePlaceAfarErrorDescription ! !
!TerniLapilliTests methodsFor: 'as yet unclassified' stamp: 'fr 10/31/2020 15:32:10' prior: 50874268!
test32

	| terniLapilli |
	terniLapilli _ TerniLapilli new.
		
	self  should: [			terniLapilli putXAt: 1 @ 1 
						 ;putOAt: 2 @ 1
						 ;putXAt: 1 @ 2
						 ;putOAt: 2 @ 2
						 ;putXAt: 3 @ 1
						 ;putOAt: 1 @ 3
						 ;moveXFrom: 3@1 to: 3@2.] 
		raise: Error 
		withMessageText: TerniLapilli canNotMoveToPositionMoreThanOnePlaceAfarErrorDescription ! !
!TerniLapilliTests methodsFor: 'as yet unclassified' stamp: 'fr 10/31/2020 15:32:30' prior: 50874284!
test32

	| terniLapilli |
	terniLapilli _ TerniLapilli new.
		
	self  should: [			terniLapilli putXAt: 1 @ 1 
						 ;putOAt: 2 @ 1
						 ;putXAt: 1 @ 2
						 ;putOAt: 2 @ 2
						 ;putXAt: 3 @ 2
						 ;putOAt: 1 @ 3
						 ;moveXFrom: 3@1 to: 3@2.] 
		raise: Error 
		withMessageText: TerniLapilli canNotMoveToPositionMoreThanOnePlaceAfarErrorDescription ! !
!TerniLapilliTests methodsFor: 'as yet unclassified' stamp: 'fr 10/31/2020 15:32:32' prior: 50874299!
test32

	| terniLapilli |
	terniLapilli _ TerniLapilli new.
		
	self  should: [			terniLapilli putXAt: 1 @ 1 
						 ;putOAt: 2 @ 1
						 ;putXAt: 1 @ 2
						 ;putOAt: 2 @ 2
						 ;putXAt: 3 @ 2
						 ;putOAt: 1 @ 3
						 ;moveXFrom: 3@2 to: 3@2.] 
		raise: Error 
		withMessageText: TerniLapilli canNotMoveToPositionMoreThanOnePlaceAfarErrorDescription ! !
!TerniLapilliTests methodsFor: 'as yet unclassified' stamp: 'fr 10/31/2020 15:32:36' prior: 50874314!
test32

	| terniLapilli |
	terniLapilli _ TerniLapilli new.
		
	self  should: [			terniLapilli putXAt: 1 @ 1 
						 ;putOAt: 2 @ 1
						 ;putXAt: 1 @ 2
						 ;putOAt: 2 @ 2
						 ;putXAt: 3 @ 2
						 ;putOAt: 1 @ 3
						 ;moveXFrom: 3@2 to: 2@3.] 
		raise: Error 
		withMessageText: TerniLapilli canNotMoveToPositionMoreThanOnePlaceAfarErrorDescription ! !
!TerniLapilliTests methodsFor: 'as yet unclassified' stamp: 'fr 10/31/2020 15:32:57' prior: 50874329!
test32

	| terniLapilli |
	terniLapilli _ TerniLapilli new.
		
	self  should: [			terniLapilli putXAt: 1 @ 1 
						 ;putOAt: 2 @ 1
						 ;putXAt: 1 @ 2
						 ;putOAt: 2 @ 2
						 ;putXAt: 3 @ 2
						 ;putOAt: 1 @ 3
						 ;moveXFrom: 3@2 to: 2@3.] 
		raise: Error 
		withMessageText: TerniLapilli canNotMoveThroughSecondaryDiagonalErrorDescription ! !
!TerniLapilliTests methodsFor: 'as yet unclassified' stamp: 'fr 10/31/2020 15:33:40' prior: 50874344!
test32

	| terniLapilli |
	terniLapilli _ TerniLapilli new.
		
	self  should: [			terniLapilli putXAt: 1 @ 1 
						 ;putOAt: 2 @ 1
						 ;putXAt: 1 @ 2
						 ;putOAt: 2 @ 2
						 ;putXAt: 3 @ 2
						 ;putOAt: 1 @ 3
						 ;moveXFrom: 3@2 to: 2@3.] 
		raise: Error 
		withMessageText: TerniLapilli canNotMoveThroughThisDiagonal ! !
!TerniLapilliTests methodsFor: 'as yet unclassified' stamp: 'fr 10/31/2020 15:33:50' prior: 50874359!
test32

	| terniLapilli |
	terniLapilli _ TerniLapilli new.
		
	self  should: [			terniLapilli putXAt: 1 @ 1 
						 ;putOAt: 2 @ 1
						 ;putXAt: 1 @ 2
						 ;putOAt: 2 @ 2
						 ;putXAt: 3 @ 2
						 ;putOAt: 1 @ 3
						 ;moveXFrom: 3@2 to: 2@3.] 
		raise: Error 
		withMessageText: TerniLapilli canNotMoveThroughThisDiagonalErrorDescription ! !

!testRun: #TerniLapilliTests #test32 stamp: 'fr 10/31/2020 15:33:54'!
ERROR!
!TerniLapilli class methodsFor: 'error message descriptions' stamp: 'fr 10/31/2020 15:34:08'!
canNotMoveThroughThisDiagonalErrorDescription
	self shouldBeImplemented.! !
!TerniLapilli class methodsFor: 'error message descriptions' stamp: 'fr 10/31/2020 15:34:22' prior: 50874390!
canNotMoveThroughThisDiagonalErrorDescription
	
	^'Can not move through this diagonal'! !

!testRun: #TerniLapilliTests #test32 stamp: 'fr 10/31/2020 15:34:23'!
FAILURE!

!methodRemoval: TerniLapilliTests #test32 stamp: 'fr 10/31/2020 15:35:59'!
test32

	| terniLapilli |
	terniLapilli _ TerniLapilli new.
		
	self  should: [			terniLapilli putXAt: 1 @ 1 
						 ;putOAt: 2 @ 1
						 ;putXAt: 1 @ 2
						 ;putOAt: 2 @ 2
						 ;putXAt: 3 @ 2
						 ;putOAt: 1 @ 3
						 ;moveXFrom: 3@2 to: 2@3.] 
		raise: Error 
		withMessageText: TerniLapilli canNotMoveThroughThisDiagonalErrorDescription !

!methodRemoval: TerniLapilli class #canNotMoveThroughThisDiagonalErrorDescription stamp: 'fr 10/31/2020 15:36:15'!
canNotMoveThroughThisDiagonalErrorDescription
	
	^'Can not move through this diagonal'!

TerniLapilliState subclass: #OMoving
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TerniLapilli - Exercise'!

!classDefinition: #OMoving category: 'TerniLapilli - Exercise' stamp: 'fr 10/31/2020 15:37:16'!
TerniLapilliState subclass: #OMoving
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TerniLapilli - Exercise'!

TerniLapilliState subclass: #XMoving
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TerniLapilli - Exercise'!

!classDefinition: #XMoving category: 'TerniLapilli - Exercise' stamp: 'fr 10/31/2020 15:37:19'!
TerniLapilliState subclass: #XMoving
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TerniLapilli - Exercise'!
!XMoving methodsFor: 'no messages' stamp: 'fr 10/31/2020 15:37:47' overrides: 50870596!
putXAt: aPosition

	! !
!XMoving methodsFor: 'as yet unclassified' stamp: 'fr 10/31/2020 15:37:53' overrides: 50870591!
putOAt: aPosition

	! !
!XMoving methodsFor: 'as yet unclassified' stamp: 'fr 10/31/2020 15:38:09' overrides: 50870996!
isOsTurn

	^false! !
!XMoving methodsFor: 'as yet unclassified' stamp: 'fr 10/31/2020 15:38:13' overrides: 50871001!
isXsTurn

	^true! !
!TerniLapilli methodsFor: 'actions' stamp: 'fr 10/31/2020 15:45:16'!
piecesLimitExceeded

	^ self error: self class piecesLimitExceededErrorDescription! !
!TerniLapilli methodsFor: 'actions' stamp: 'fr 10/31/2020 15:45:16' prior: 50871489!
safePutOAt: aPosition 

	((self positionsFor: #O) size = 3) ifTrue: [self piecesLimitExceeded].
	((aPosition x between: 1 and: 3) and: [aPosition y between: 1 and: 3]) ifFalse: [self error: self class positionOutOfBoundsErrorDescription ].
	self failIfPositionAlreadyHoldsAPiece: aPosition.
	(self positionsFor: #O) add: aPosition.
	state _ XAdding for: self
	! !
!XMoving methodsFor: 'as yet unclassified' stamp: 'fr 10/31/2020 15:45:35' prior: 50874449 overrides: 50870596!
putXAt: aPosition
	
	^terniLapilliGame piecesLimitExceeded
	! !
!OMoving methodsFor: 'no messages' stamp: 'fr 10/31/2020 15:45:54' overrides: 50870591!
putOAt: aPosition

	^terniLapilliGame piecesLimitExceeded! !
!OMoving methodsFor: 'as yet unclassified' stamp: 'fr 10/31/2020 15:46:01' overrides: 50870596!
putXAt: aPosition

! !
!OMoving methodsFor: 'as yet unclassified' stamp: 'fr 10/31/2020 15:46:26' prior: 50874495 overrides: 50870596!
putXAt: aPosition

	terniLapilliGame itIsPlayerOsTurn 
! !
!XMoving methodsFor: 'as yet unclassified' stamp: 'fr 10/31/2020 15:46:37' prior: 50874453 overrides: 50870591!
putOAt: aPosition

	terniLapilliGame itIsPlayerXsTurn

	! !
!TerniLapilli methodsFor: 'actions' stamp: 'fr 10/31/2020 15:47:02' prior: 50874470!
safePutOAt: aPosition 

	((aPosition x between: 1 and: 3) and: [aPosition y between: 1 and: 3]) ifFalse: [self error: self class positionOutOfBoundsErrorDescription ].
	self failIfPositionAlreadyHoldsAPiece: aPosition.
	(self positionsFor: #O) add: aPosition.
	state _ XAdding for: self
	! !
!TerniLapilli methodsFor: 'actions' stamp: 'fr 10/31/2020 15:47:06' prior: 50871505!
safePutXAt: aPosition 
	
	((aPosition x between: 1 and: 3) and: [aPosition y between: 1 and: 3]) ifFalse: [self error: self class positionOutOfBoundsErrorDescription ].
	self failIfPositionAlreadyHoldsAPiece: aPosition.
	(self positionsFor: #X) add: aPosition.
	state _ OAdding for: self! !
!TerniLapilli methodsFor: 'actions' stamp: 'fr 10/31/2020 15:47:30' prior: 50874161!
moveOFrom: currentPosition to: newPosition 
	
	((self positionsFor: #O) size = 3) ifFalse: [self error: self class canNotMoveBeforeAddingThreePiecesErrorDescription].
	((currentPosition x between: 1 and: 3) and: [currentPosition y between: 1 and: 3]) ifFalse: [self error: self class positionOutOfBoundsErrorDescription ].
	((newPosition x between: 1 and: 3) and: [newPosition y between: 1 and: 3]) ifFalse: [self error: self class positionOutOfBoundsErrorDescription ].
	self failIfPositionAlreadyHoldsAPiece: newPosition.
	((currentPosition dist: newPosition) > 1) ifTrue: [self error: self class canNotMoveToPositionMoreThanOnePlaceAfarErrorDescription].
	(self positionsFor: #O) remove: currentPosition ifAbsent: [self error: self class positionIsNotUnderPlayersControlErrorDescription].
	(self positionsFor: #O) add: newPosition.
	state _ XAdding for: self	
! !
!TerniLapilli methodsFor: 'actions' stamp: 'fr 10/31/2020 15:47:58'!
failIfPositionOutOfBounds: aPosition

	^ ((aPosition x between: 1 and: 3) and: [aPosition y between: 1 and: 3]) ifFalse: [self error: self class positionOutOfBoundsErrorDescription ]! !
!TerniLapilli methodsFor: 'actions' stamp: 'fr 10/31/2020 15:47:58' prior: 50874511!
safePutOAt: aPosition 

	self failIfPositionOutOfBounds: aPosition.
	self failIfPositionAlreadyHoldsAPiece: aPosition.
	(self positionsFor: #O) add: aPosition.
	state _ XAdding for: self
	! !
!TerniLapilli methodsFor: 'actions' stamp: 'fr 10/31/2020 15:48:09' prior: 50874523!
safePutXAt: aPosition 
	
	self failIfPositionOutOfBounds: aPosition.
	self failIfPositionAlreadyHoldsAPiece: aPosition.
	(self positionsFor: #X) add: aPosition.
	state _ OAdding for: self! !
!TerniLapilli methodsFor: 'actions' stamp: 'fr 10/31/2020 15:48:47' prior: 50874009!
moveXFrom: currentPosition to: newPosition
	
	((self positionsFor: #X) size = 3) ifFalse: [self error: self class canNotMoveBeforeAddingThreePiecesErrorDescription ].
	self failIfPositionOutOfBounds: currentPosition.
	self failIfPositionOutOfBounds: newPosition.
	self failIfPositionAlreadyHoldsAPiece: newPosition.
	((currentPosition dist: newPosition) > 1) ifTrue: [self error: self class canNotMoveToPositionMoreThanOnePlaceAfarErrorDescription].
	(self positionsFor: #X) remove: currentPosition ifAbsent: [self error: self class positionIsNotUnderPlayersControlErrorDescription].
	(self positionsFor: #X) add: newPosition.
	state _ OAdding for: self
	
	! !
!TerniLapilliState methodsFor: 'actions' stamp: 'fr 10/31/2020 15:49:24'!
moveFrom: currentPosition to: newPosition! !
!TerniLapilliState methodsFor: 'actions' stamp: 'fr 10/31/2020 15:49:27' prior: 50874615!
moveFrom: currentPosition to: newPosition

	self subclassResponsibility ! !
!TerniLapilliState methodsFor: 'actions' stamp: 'fr 10/31/2020 15:49:51'!
moveXFrom: currentPosition to: newPosition

	self subclassResponsibility ! !

!methodRemoval: TerniLapilliState #moveFrom:to: stamp: 'fr 10/31/2020 15:50:05'!
moveFrom: currentPosition to: newPosition

	self subclassResponsibility !
!OAdding methodsFor: 'as yet unclassified' stamp: 'fr 10/31/2020 15:51:17' overrides: 50874625!
moveXFrom: currentPosition to: newPosition

	terniLapilliGame itIsPlayerOsTurn ! !
!OAdding methodsFor: 'as yet unclassified' stamp: 'fr 10/31/2020 15:51:43' prior: 50874636 overrides: 50874625!
moveXFrom: currentPosition to: newPosition

	terniLapilliGame itIsPlayerOsTurn! !

	terniLapilli _ TerniLapilli new.!

	terniLapilli putXAt: 1 @ 1 !

terniLapilli putXAt: 1 @ 1 
						 ;putOAt: 2 @ 1
						 ;putXAt: 1 @ 2
						 ;putOAt: 2 @ 2
						 ;putXAt: 3 @ 1
						 ;putOAt: 1 @ 3
						 ;moveXFrom: 3@1 to: 3@2
						 ;moveOFrom: 1@3 to: 3@3.!

	terniLapilli _ TerniLapilli new.!

terniLapilli putXAt: 1 @ 1 
						 ;putOAt: 2 @ 1
						 ;putXAt: 1 @ 2
						 ;putOAt: 2 @ 2
						 ;putXAt: 3 @ 1
						 ;putOAt: 1 @ 3
						 ;moveXFrom: 3@1 to: 3@2
						 ;moveOFrom: 2@2 to: 3@3.!

	terniLapilli _ TerniLapilli new.!

	terniLapilli putXAt: 1 @ 1 
						 ;putOAt: 2 @ 1
						 ;putXAt: 1 @ 2
						 ;putOAt: 2 @ 2
						 ;putXAt: 3 @ 1
						 ;putOAt: 1 @ 3
						 ;moveXFrom: 3@1 to: 3@2
						 ;moveOFrom: 2@2 to: 2@3.!

	(2@2) squaredDistanceTo: (3@3). !

	(3@2) squaredDistanceTo: (2@3).  !

!testRun: #TerniLapilliTests #test31 stamp: 'fr 10/31/2020 16:01:31'!
PASSED!

!testRun: #TerniLapilliTests #test01 stamp: 'fr 10/31/2020 16:01:31'!
PASSED!

!testRun: #TerniLapilliTests #test02 stamp: 'fr 10/31/2020 16:01:31'!
PASSED!

!testRun: #TerniLapilliTests #test03 stamp: 'fr 10/31/2020 16:01:31'!
PASSED!

!testRun: #TerniLapilliTests #test04 stamp: 'fr 10/31/2020 16:01:31'!
PASSED!

!testRun: #TerniLapilliTests #test05 stamp: 'fr 10/31/2020 16:01:31'!
PASSED!

!testRun: #TerniLapilliTests #test06 stamp: 'fr 10/31/2020 16:01:31'!
PASSED!

!testRun: #TerniLapilliTests #test07 stamp: 'fr 10/31/2020 16:01:31'!
PASSED!

!testRun: #TerniLapilliTests #test08 stamp: 'fr 10/31/2020 16:01:31'!
PASSED!

!testRun: #TerniLapilliTests #test09 stamp: 'fr 10/31/2020 16:01:31'!
PASSED!

!testRun: #TerniLapilliTests #test10 stamp: 'fr 10/31/2020 16:01:31'!
PASSED!

!testRun: #TerniLapilliTests #test11 stamp: 'fr 10/31/2020 16:01:31'!
PASSED!

!testRun: #TerniLapilliTests #test12 stamp: 'fr 10/31/2020 16:01:31'!
PASSED!

!testRun: #TerniLapilliTests #test13 stamp: 'fr 10/31/2020 16:01:31'!
PASSED!

!testRun: #TerniLapilliTests #test14 stamp: 'fr 10/31/2020 16:01:31'!
PASSED!

!testRun: #TerniLapilliTests #test15 stamp: 'fr 10/31/2020 16:01:31'!
FAILURE!

!testRun: #TerniLapilliTests #test16 stamp: 'fr 10/31/2020 16:01:31'!
FAILURE!

!testRun: #TerniLapilliTests #test17 stamp: 'fr 10/31/2020 16:01:31'!
PASSED!

!testRun: #TerniLapilliTests #test18 stamp: 'fr 10/31/2020 16:01:31'!
PASSED!

!testRun: #TerniLapilliTests #test19 stamp: 'fr 10/31/2020 16:01:31'!
PASSED!

!testRun: #TerniLapilliTests #test20 stamp: 'fr 10/31/2020 16:01:31'!
PASSED!

!testRun: #TerniLapilliTests #test21 stamp: 'fr 10/31/2020 16:01:31'!
PASSED!

!testRun: #TerniLapilliTests #test22 stamp: 'fr 10/31/2020 16:01:31'!
PASSED!

!testRun: #TerniLapilliTests #test24 stamp: 'fr 10/31/2020 16:01:31'!
PASSED!

!testRun: #TerniLapilliTests #test25 stamp: 'fr 10/31/2020 16:01:31'!
PASSED!

!testRun: #TerniLapilliTests #test26 stamp: 'fr 10/31/2020 16:01:31'!
PASSED!

!testRun: #TerniLapilliTests #test27 stamp: 'fr 10/31/2020 16:01:31'!
PASSED!

!testRun: #TerniLapilliTests #test28 stamp: 'fr 10/31/2020 16:01:31'!
PASSED!

!testRun: #TerniLapilliTests #test29 stamp: 'fr 10/31/2020 16:01:31'!
PASSED!

!testRun: #TerniLapilliTests #test30 stamp: 'fr 10/31/2020 16:01:31'!
PASSED!

!testRun: #TerniLapilliTests #test31 stamp: 'fr 10/31/2020 16:01:31'!
PASSED!
!OMoving methodsFor: 'as yet unclassified' stamp: 'fr 10/31/2020 16:02:16' overrides: 50870996!
isOsTurn

	^true! !
!OMoving methodsFor: 'as yet unclassified' stamp: 'fr 10/31/2020 16:02:20' overrides: 50871001!
isXsTurn

	^false! !
!OAdding methodsFor: 'as yet unclassified' stamp: 'fr 10/31/2020 16:03:08'!
moveOFrom: currentPosition to: newPosition

	terniLapilliGame itIsPlayerOsTurn! !
!OAdding methodsFor: 'as yet unclassified' stamp: 'fr 10/31/2020 16:03:10' prior: 50874759!
moveOFrom: currentPosition to: newPosition

! !
!TerniLapilli methodsFor: 'actions' stamp: 'fr 10/31/2020 16:04:30'!
canNotMoveBeforeAddingThreePieces

	^ self error: self class canNotMoveBeforeAddingThreePiecesErrorDescription! !
!TerniLapilli methodsFor: 'actions' stamp: 'fr 10/31/2020 16:04:30' prior: 50874535!
moveOFrom: currentPosition to: newPosition 
	
	((self positionsFor: #O) size = 3) ifFalse: [self canNotMoveBeforeAddingThreePieces].
	((currentPosition x between: 1 and: 3) and: [currentPosition y between: 1 and: 3]) ifFalse: [self error: self class positionOutOfBoundsErrorDescription ].
	((newPosition x between: 1 and: 3) and: [newPosition y between: 1 and: 3]) ifFalse: [self error: self class positionOutOfBoundsErrorDescription ].
	self failIfPositionAlreadyHoldsAPiece: newPosition.
	((currentPosition dist: newPosition) > 1) ifTrue: [self error: self class canNotMoveToPositionMoreThanOnePlaceAfarErrorDescription].
	(self positionsFor: #O) remove: currentPosition ifAbsent: [self error: self class positionIsNotUnderPlayersControlErrorDescription].
	(self positionsFor: #O) add: newPosition.
	state _ XAdding for: self	
! !
!OAdding methodsFor: 'as yet unclassified' stamp: 'fr 10/31/2020 16:04:40' prior: 50874765!
moveOFrom: currentPosition to: newPosition

	terniLapilliGame canNotMoveBeforeAddingThreePieces
! !
!XAdding methodsFor: 'as yet unclassified' stamp: 'fr 10/31/2020 16:05:12' overrides: 50874625!
moveXFrom: currentPosition to: newPosition

	! !
!XAdding methodsFor: 'as yet unclassified' stamp: 'fr 10/31/2020 16:05:20' prior: 50874812 overrides: 50874625!
moveXFrom: currentPosition to: newPosition

	terniLapilliGame canNotMoveBeforeAddingThreePieces ! !
!XAdding methodsFor: 'as yet unclassified' stamp: 'fr 10/31/2020 16:05:29'!
moveOFrom: currentPosition to: newPosition

	terniLapilliGame isXsTurn ! !
!XAdding methodsFor: 'as yet unclassified' stamp: 'fr 10/31/2020 16:05:48' prior: 50874824!
moveOFrom: currentPosition to: newPosition

	terniLapilliGame itIsPlayerXsTurn ! !
!TerniLapilli methodsFor: 'actions' stamp: 'fr 10/31/2020 16:06:04' prior: 50874776!
moveOFrom: currentPosition to: newPosition 
	
	((currentPosition x between: 1 and: 3) and: [currentPosition y between: 1 and: 3]) ifFalse: [self error: self class positionOutOfBoundsErrorDescription ].
	((newPosition x between: 1 and: 3) and: [newPosition y between: 1 and: 3]) ifFalse: [self error: self class positionOutOfBoundsErrorDescription ].
	self failIfPositionAlreadyHoldsAPiece: newPosition.
	((currentPosition dist: newPosition) > 1) ifTrue: [self error: self class canNotMoveToPositionMoreThanOnePlaceAfarErrorDescription].
	(self positionsFor: #O) remove: currentPosition ifAbsent: [self error: self class positionIsNotUnderPlayersControlErrorDescription].
	(self positionsFor: #O) add: newPosition.
	state _ XAdding for: self	
! !
!TerniLapilli methodsFor: 'actions' stamp: 'fr 10/31/2020 16:06:14' prior: 50874592!
moveXFrom: currentPosition to: newPosition
	
	"((self positionsFor: #X) size = 3) ifFalse: [self error: self class canNotMoveBeforeAddingThreePiecesErrorDescription ]."
	self failIfPositionOutOfBounds: currentPosition.
	self failIfPositionOutOfBounds: newPosition.
	self failIfPositionAlreadyHoldsAPiece: newPosition.
	((currentPosition dist: newPosition) > 1) ifTrue: [self error: self class canNotMoveToPositionMoreThanOnePlaceAfarErrorDescription].
	(self positionsFor: #X) remove: currentPosition ifAbsent: [self error: self class positionIsNotUnderPlayersControlErrorDescription].
	(self positionsFor: #X) add: newPosition.
	state _ OAdding for: self
	
	! !
!TerniLapilli methodsFor: 'actions' stamp: 'fr 10/31/2020 16:06:35' prior: 50874836!
moveOFrom: currentPosition to: newPosition 
	
	self failIfPositionOutOfBounds: currentPosition.
	self failIfPositionOutOfBounds: newPosition.
	self failIfPositionAlreadyHoldsAPiece: newPosition.
	((currentPosition dist: newPosition) > 1) ifTrue: [self error: self class canNotMoveToPositionMoreThanOnePlaceAfarErrorDescription].
	(self positionsFor: #O) remove: currentPosition ifAbsent: [self error: self class positionIsNotUnderPlayersControlErrorDescription].
	(self positionsFor: #O) add: newPosition.
	state _ XAdding for: self	
! !
!TerniLapilli methodsFor: 'actions' stamp: 'fr 10/31/2020 16:08:17' prior: 50874862!
moveXFrom: currentPosition to: newPosition
	
	"((self positionsFor: #X) size = 3) ifFalse: [self error: self class canNotMoveBeforeAddingThreePiecesErrorDescription ]."
	self failIfPositionOutOfBounds: currentPosition.
	((currentPosition dist: newPosition) > 1) ifTrue: [self error: self class canNotMoveToPositionMoreThanOnePlaceAfarErrorDescription].
	(self positionsFor: #X) remove: currentPosition ifAbsent: [self error: self class positionIsNotUnderPlayersControlErrorDescription].

	self failIfPositionOutOfBounds: newPosition.
	self failIfPositionAlreadyHoldsAPiece: newPosition.
	(self positionsFor: #X) add: newPosition.
	state _ OAdding for: self
	
	! !
!TerniLapilli methodsFor: 'actions' stamp: 'fr 10/31/2020 16:08:55' prior: 50874886!
moveOFrom: currentPosition to: newPosition 
	
	self failIfPositionOutOfBounds: currentPosition.
	((currentPosition dist: newPosition) > 1) ifTrue: [self error: self class canNotMoveToPositionMoreThanOnePlaceAfarErrorDescription].
	(self positionsFor: #O) remove: currentPosition ifAbsent: [self error: self class positionIsNotUnderPlayersControlErrorDescription].

	self failIfPositionOutOfBounds: newPosition.
	self failIfPositionAlreadyHoldsAPiece: newPosition.
	(self positionsFor: #O) add: newPosition.
	state _ XAdding for: self	
! !
!TerniLapilli methodsFor: 'actions' stamp: 'fr 10/31/2020 16:09:12'!
safeMoveOFrom: currentPosition to: newPosition 
	
	self failIfPositionOutOfBounds: currentPosition.
	((currentPosition dist: newPosition) > 1) ifTrue: [self error: self class canNotMoveToPositionMoreThanOnePlaceAfarErrorDescription].
	(self positionsFor: #O) remove: currentPosition ifAbsent: [self error: self class positionIsNotUnderPlayersControlErrorDescription].

	self failIfPositionOutOfBounds: newPosition.
	self failIfPositionAlreadyHoldsAPiece: newPosition.
	(self positionsFor: #O) add: newPosition.
	state _ XAdding for: self	
! !
!TerniLapilli methodsFor: 'actions' stamp: 'fr 10/31/2020 16:09:21'!
safeMoveXFrom: currentPosition to: newPosition
	
	"((self positionsFor: #X) size = 3) ifFalse: [self error: self class canNotMoveBeforeAddingThreePiecesErrorDescription ]."
	self failIfPositionOutOfBounds: currentPosition.
	((currentPosition dist: newPosition) > 1) ifTrue: [self error: self class canNotMoveToPositionMoreThanOnePlaceAfarErrorDescription].
	(self positionsFor: #X) remove: currentPosition ifAbsent: [self error: self class positionIsNotUnderPlayersControlErrorDescription].

	self failIfPositionOutOfBounds: newPosition.
	self failIfPositionAlreadyHoldsAPiece: newPosition.
	(self positionsFor: #X) add: newPosition.
	state _ OAdding for: self
	
	! !
!TerniLapilli methodsFor: 'actions' stamp: 'fr 10/31/2020 16:09:54' prior: 50874930!
moveOFrom: currentPosition to: newPosition 
	
	"self failIfPositionOutOfBounds: currentPosition.
	((currentPosition dist: newPosition) > 1) ifTrue: [self error: self class canNotMoveToPositionMoreThanOnePlaceAfarErrorDescription].
	(self positionsFor: #O) remove: currentPosition ifAbsent: [self error: self class positionIsNotUnderPlayersControlErrorDescription].

	self failIfPositionOutOfBounds: newPosition.
	self failIfPositionAlreadyHoldsAPiece: newPosition.
	(self positionsFor: #O) add: newPosition.
	state _ XAdding for: self	"
	
	state moveOFrom: currentPosition to: newPosition 
! !
!TerniLapilli methodsFor: 'actions' stamp: 'fr 10/31/2020 16:10:21' prior: 50874906!
moveXFrom: currentPosition to: newPosition
	
	"((self positionsFor: #X) size = 3) ifFalse: [self error: self class canNotMoveBeforeAddingThreePiecesErrorDescription ]."
	"self failIfPositionOutOfBounds: currentPosition.
	((currentPosition dist: newPosition) > 1) ifTrue: [self error: self class canNotMoveToPositionMoreThanOnePlaceAfarErrorDescription].
	(self positionsFor: #X) remove: currentPosition ifAbsent: [self error: self class positionIsNotUnderPlayersControlErrorDescription].

	self failIfPositionOutOfBounds: newPosition.
	self failIfPositionAlreadyHoldsAPiece: newPosition.
	(self positionsFor: #X) add: newPosition.
	state _ OAdding for: self"
	
	state moveXFrom: currentPosition to: newPosition 
	
	! !
!TerniLapilliState methodsFor: 'actions' stamp: 'fr 10/31/2020 16:10:29'!
moveOFrom: currentPosition to: newPosition

	self subclassResponsibility ! !
!XMoving methodsFor: 'as yet unclassified' stamp: 'fr 10/31/2020 16:10:48' overrides: 50875040!
moveOFrom: currentPosition to: newPosition

	terniLapilliGame itIsPlayerXsTurn ! !
!OMoving methodsFor: 'as yet unclassified' stamp: 'fr 10/31/2020 16:10:58' overrides: 50874625!
moveXFrom: currentPosition to: newPosition

	self subclassResponsibility ! !
!OMoving methodsFor: 'as yet unclassified' stamp: 'fr 10/31/2020 16:11:06' prior: 50875052 overrides: 50874625!
moveXFrom: currentPosition to: newPosition

	terniLapilliGame itIsPlayerOsTurn ! !
!OMoving methodsFor: 'as yet unclassified' stamp: 'fr 10/31/2020 16:11:22' overrides: 50875040!
moveOFrom: currentPosition to: newPosition

	terniLapilliGame safeMoveOFrom: currentPosition to: newPosition ! !
!XMoving methodsFor: 'as yet unclassified' stamp: 'fr 10/31/2020 16:11:30' overrides: 50874625!
moveXFrom: currentPosition to: newPosition

	terniLapilliGame itIsPlayerXsTurn ! !
!XMoving methodsFor: 'as yet unclassified' stamp: 'fr 10/31/2020 16:11:48' prior: 50875071 overrides: 50874625!
moveXFrom: currentPosition to: newPosition

	terniLapilliGame safeMoveXFrom: currentPosition to: newPosition ! !

!testRun: #TerniLapilliTests #test01 stamp: 'fr 10/31/2020 16:11:51'!
PASSED!

!testRun: #TerniLapilliTests #test02 stamp: 'fr 10/31/2020 16:11:51'!
PASSED!

!testRun: #TerniLapilliTests #test03 stamp: 'fr 10/31/2020 16:11:51'!
PASSED!

!testRun: #TerniLapilliTests #test04 stamp: 'fr 10/31/2020 16:11:51'!
PASSED!

!testRun: #TerniLapilliTests #test05 stamp: 'fr 10/31/2020 16:11:51'!
PASSED!

!testRun: #TerniLapilliTests #test06 stamp: 'fr 10/31/2020 16:11:51'!
PASSED!

!testRun: #TerniLapilliTests #test07 stamp: 'fr 10/31/2020 16:11:51'!
PASSED!

!testRun: #TerniLapilliTests #test08 stamp: 'fr 10/31/2020 16:11:51'!
PASSED!

!testRun: #TerniLapilliTests #test09 stamp: 'fr 10/31/2020 16:11:51'!
PASSED!

!testRun: #TerniLapilliTests #test10 stamp: 'fr 10/31/2020 16:11:51'!
PASSED!

!testRun: #TerniLapilliTests #test11 stamp: 'fr 10/31/2020 16:11:51'!
PASSED!

!testRun: #TerniLapilliTests #test12 stamp: 'fr 10/31/2020 16:11:51'!
PASSED!

!testRun: #TerniLapilliTests #test13 stamp: 'fr 10/31/2020 16:11:51'!
PASSED!

!testRun: #TerniLapilliTests #test14 stamp: 'fr 10/31/2020 16:11:51'!
PASSED!

!testRun: #TerniLapilliTests #test15 stamp: 'fr 10/31/2020 16:11:51'!
FAILURE!

!testRun: #TerniLapilliTests #test16 stamp: 'fr 10/31/2020 16:11:51'!
FAILURE!

!testRun: #TerniLapilliTests #test17 stamp: 'fr 10/31/2020 16:11:51'!
ERROR!

!testRun: #TerniLapilliTests #test18 stamp: 'fr 10/31/2020 16:11:51'!
ERROR!

!testRun: #TerniLapilliTests #test19 stamp: 'fr 10/31/2020 16:11:51'!
PASSED!

!testRun: #TerniLapilliTests #test20 stamp: 'fr 10/31/2020 16:11:51'!
PASSED!

!testRun: #TerniLapilliTests #test21 stamp: 'fr 10/31/2020 16:11:51'!
FAILURE!

!testRun: #TerniLapilliTests #test22 stamp: 'fr 10/31/2020 16:11:51'!
FAILURE!

!testRun: #TerniLapilliTests #test24 stamp: 'fr 10/31/2020 16:11:51'!
FAILURE!

!testRun: #TerniLapilliTests #test25 stamp: 'fr 10/31/2020 16:11:51'!
FAILURE!

!testRun: #TerniLapilliTests #test26 stamp: 'fr 10/31/2020 16:11:51'!
FAILURE!

!testRun: #TerniLapilliTests #test27 stamp: 'fr 10/31/2020 16:11:51'!
FAILURE!

!testRun: #TerniLapilliTests #test28 stamp: 'fr 10/31/2020 16:11:51'!
FAILURE!

!testRun: #TerniLapilliTests #test29 stamp: 'fr 10/31/2020 16:11:51'!
FAILURE!

!testRun: #TerniLapilliTests #test30 stamp: 'fr 10/31/2020 16:11:51'!
FAILURE!

!testRun: #TerniLapilliTests #test31 stamp: 'fr 10/31/2020 16:11:51'!
FAILURE!
!TerniLapilli methodsFor: 'actions' stamp: 'fr 10/31/2020 16:13:07' prior: 50874949!
safeMoveOFrom: currentPosition to: newPosition 
	
	self failIfPositionOutOfBounds: currentPosition.
	((currentPosition dist: newPosition) > 1) ifTrue: [self error: self class canNotMoveToPositionMoreThanOnePlaceAfarErrorDescription].
	(self positionsFor: #O) remove: currentPosition ifAbsent: [self error: self class positionIsNotUnderPlayersControlErrorDescription].

	self safePutOAt: newPosition 
! !
!TerniLapilli methodsFor: 'actions' stamp: 'fr 10/31/2020 16:13:17' prior: 50874969!
safeMoveXFrom: currentPosition to: newPosition
	
	"((self positionsFor: #X) size = 3) ifFalse: [self error: self class canNotMoveBeforeAddingThreePiecesErrorDescription ]."
	self failIfPositionOutOfBounds: currentPosition.
	((currentPosition dist: newPosition) > 1) ifTrue: [self error: self class canNotMoveToPositionMoreThanOnePlaceAfarErrorDescription].
	(self positionsFor: #X) remove: currentPosition ifAbsent: [self error: self class positionIsNotUnderPlayersControlErrorDescription].

	self safePutXAt: newPosition 
	
	! !
!TerniLapilli methodsFor: 'actions' stamp: 'fr 10/31/2020 16:13:50' prior: 50874583!
safePutXAt: aPosition 
	
	self failIfPositionOutOfBounds: aPosition.
	self failIfPositionAlreadyHoldsAPiece: aPosition.
	(self positionsFor: #X) add: aPosition.
	state _ TerniLapilliState for: self! !
!TerniLapilli methodsFor: 'actions' stamp: 'fr 10/31/2020 16:13:59' prior: 50874574!
safePutOAt: aPosition 

	self failIfPositionOutOfBounds: aPosition.
	self failIfPositionAlreadyHoldsAPiece: aPosition.
	(self positionsFor: #O) add: aPosition.
	state _ TerniLapilliState for: self
	! !
!TerniLapilliState class methodsFor: 'instance creation' stamp: 'fr 10/31/2020 16:14:55' prior: 50870323!
for: aTerniLapilli
	
	^(self subclasses detect: [:aTerniLapilliState | aTerniLapilliState canHandle: aTerniLapilli]) new initializeFor: aTerniLapilli! !
!OAdding class methodsFor: 'no messages' stamp: 'fr 10/31/2020 16:15:15'!
canHandle: aTerniLapilli

	! !
!TerniLapilli methodsFor: 'actions' stamp: 'fr 10/31/2020 16:15:55' prior: 50875175!
safeMoveXFrom: currentPosition to: newPosition
	
	"((self positionsFor: #X) size = 3) ifFalse: [self error: self class canNotMoveBeforeAddingThreePiecesErrorDescription ]."
	self failIfPositionOutOfBounds: currentPosition.
	((currentPosition dist: newPosition) > 1) ifTrue: [self error: self class canNotMoveToPositionMoreThanOnePlaceAfarErrorDescription].
	(self positionsFor: #X) remove: currentPosition ifAbsent: [self error: self class positionIsNotUnderPlayersControlErrorDescription].

	self safePutXAt: newPosition 
	
	! !
!TerniLapilli methodsFor: 'actions' stamp: 'fr 10/31/2020 16:16:00' prior: 50875226!
safeMoveXFrom: currentPosition to: newPosition
	
	((self positionsFor: #X) size = 3) ifFalse: [self error: self class canNotMoveBeforeAddingThreePiecesErrorDescription ].
	self failIfPositionOutOfBounds: currentPosition.
	((currentPosition dist: newPosition) > 1) ifTrue: [self error: self class canNotMoveToPositionMoreThanOnePlaceAfarErrorDescription].
	(self positionsFor: #X) remove: currentPosition ifAbsent: [self error: self class positionIsNotUnderPlayersControlErrorDescription].

	self safePutXAt: newPosition 
	
	! !
!TerniLapilli methodsFor: 'actions' stamp: 'fr 10/31/2020 16:16:24'!
hasPiecesToAdd

	^ (self positionsFor: #X) size = 3! !
!TerniLapilli methodsFor: 'actions' stamp: 'fr 10/31/2020 16:16:24' prior: 50875246!
safeMoveXFrom: currentPosition to: newPosition
	
	(self hasPiecesToAdd) ifFalse: [self error: self class canNotMoveBeforeAddingThreePiecesErrorDescription ].
	self failIfPositionOutOfBounds: currentPosition.
	((currentPosition dist: newPosition) > 1) ifTrue: [self error: self class canNotMoveToPositionMoreThanOnePlaceAfarErrorDescription].
	(self positionsFor: #X) remove: currentPosition ifAbsent: [self error: self class positionIsNotUnderPlayersControlErrorDescription].

	self safePutXAt: newPosition 
	
	! !
!TerniLapilli methodsFor: 'actions' stamp: 'fr 10/31/2020 16:16:30' prior: 50875270!
safeMoveXFrom: currentPosition to: newPosition
	
	"(self hasPiecesToAdd) ifFalse: [self error: self class canNotMoveBeforeAddingThreePiecesErrorDescription ]."
	self failIfPositionOutOfBounds: currentPosition.
	((currentPosition dist: newPosition) > 1) ifTrue: [self error: self class canNotMoveToPositionMoreThanOnePlaceAfarErrorDescription].
	(self positionsFor: #X) remove: currentPosition ifAbsent: [self error: self class positionIsNotUnderPlayersControlErrorDescription].

	self safePutXAt: newPosition 
	
	! !
!TerniLapilli methodsFor: 'actions' stamp: 'fr 10/31/2020 16:16:41'!
hasPiecesToAdd: aPlayer

	^ (self positionsFor: aPlayer ) size = 3! !

!methodRemoval: TerniLapilli #hasPiecesToAdd stamp: 'fr 10/31/2020 16:16:44'!
hasPiecesToAdd

	^ (self positionsFor: #X) size = 3!
!TerniLapilli methodsFor: 'actions' stamp: 'fr 10/31/2020 16:16:48' prior: 50875308!
hasPiecesToAdd: aPlayer

	^(self positionsFor: aPlayer ) size = 3! !

2 ~= 3!

3 ~= 3 !
!TerniLapilli methodsFor: 'actions' stamp: 'fr 10/31/2020 16:17:55' prior: 50875317!
hasPiecesToAdd: aPlayer

	^(self positionsFor: aPlayer ) size < 3! !
!OAdding class methodsFor: 'as yet unclassified' stamp: 'fr 10/31/2020 16:18:48' prior: 50875222!
canHandle: aTerniLapilli

	

	! !
!OAdding class methodsFor: 'as yet unclassified' stamp: 'fr 10/31/2020 16:21:00' prior: 50875329!
canHandle: aTerniLapilli

	^(aTerniLapilli hasPiecesToAdd: #O) and: [aTerniLapilli itIsPlayerXsTurn]

	! !

----SNAPSHOT----(31 October 2020 16:24:16) CuisUniversity-4384.image priorSource: 17305984!
!OMoving class methodsFor: 'no messages' stamp: 'fr 10/31/2020 16:27:29'!
canHandle: aTerniLapilli

	^(aTerniLapilli hasPiecesToAdd: #O) not and: [aTerniLapilli itIsPlayerXsTurn]

	! !
!XAdding class methodsFor: 'no messages' stamp: 'fr 10/31/2020 16:27:37'!
canHandle: aTerniLapilli

	^(aTerniLapilli hasPiecesToAdd: #X) and: [aTerniLapilli itIsPlayerXsTurn]

	! !
!XAdding class methodsFor: 'as yet unclassified' stamp: 'fr 10/31/2020 16:27:39' prior: 50875349!
canHandle: aTerniLapilli

	^(aTerniLapilli hasPiecesToAdd: #X) and: [aTerniLapilli itIsPlayerOsTurn]

	! !
!XMoving class methodsFor: 'no messages' stamp: 'fr 10/31/2020 16:27:49'!
canHandle: aTerniLapilli

	^(aTerniLapilli hasPiecesToAdd: #X) and: [aTerniLapilli itIsPlayerOsTurn]

	! !

!testRun: #TerniLapilliTests #test01 stamp: 'fr 10/31/2020 16:27:54'!
ERROR!

!testRun: #TerniLapilliTests #test02 stamp: 'fr 10/31/2020 16:27:54'!
ERROR!

!testRun: #TerniLapilliTests #test03 stamp: 'fr 10/31/2020 16:27:54'!
ERROR!

!testRun: #TerniLapilliTests #test04 stamp: 'fr 10/31/2020 16:27:54'!
ERROR!

!testRun: #TerniLapilliTests #test05 stamp: 'fr 10/31/2020 16:27:54'!
ERROR!

!testRun: #TerniLapilliTests #test06 stamp: 'fr 10/31/2020 16:27:54'!
ERROR!

!testRun: #TerniLapilliTests #test07 stamp: 'fr 10/31/2020 16:27:54'!
ERROR!

!testRun: #TerniLapilliTests #test08 stamp: 'fr 10/31/2020 16:27:54'!
ERROR!

!testRun: #TerniLapilliTests #test09 stamp: 'fr 10/31/2020 16:27:54'!
ERROR!

!testRun: #TerniLapilliTests #test10 stamp: 'fr 10/31/2020 16:27:54'!
ERROR!

!testRun: #TerniLapilliTests #test11 stamp: 'fr 10/31/2020 16:27:54'!
ERROR!

!testRun: #TerniLapilliTests #test12 stamp: 'fr 10/31/2020 16:27:54'!
ERROR!

!testRun: #TerniLapilliTests #test13 stamp: 'fr 10/31/2020 16:27:54'!
ERROR!

!testRun: #TerniLapilliTests #test14 stamp: 'fr 10/31/2020 16:27:54'!
ERROR!

!testRun: #TerniLapilliTests #test15 stamp: 'fr 10/31/2020 16:27:54'!
ERROR!

!testRun: #TerniLapilliTests #test16 stamp: 'fr 10/31/2020 16:27:54'!
ERROR!

!testRun: #TerniLapilliTests #test17 stamp: 'fr 10/31/2020 16:27:54'!
ERROR!

!testRun: #TerniLapilliTests #test18 stamp: 'fr 10/31/2020 16:27:54'!
ERROR!

!testRun: #TerniLapilliTests #test19 stamp: 'fr 10/31/2020 16:27:54'!
ERROR!

!testRun: #TerniLapilliTests #test20 stamp: 'fr 10/31/2020 16:27:54'!
ERROR!

!testRun: #TerniLapilliTests #test21 stamp: 'fr 10/31/2020 16:27:54'!
ERROR!

!testRun: #TerniLapilliTests #test22 stamp: 'fr 10/31/2020 16:27:54'!
ERROR!

!testRun: #TerniLapilliTests #test24 stamp: 'fr 10/31/2020 16:27:54'!
ERROR!

!testRun: #TerniLapilliTests #test25 stamp: 'fr 10/31/2020 16:27:54'!
ERROR!

!testRun: #TerniLapilliTests #test26 stamp: 'fr 10/31/2020 16:27:54'!
ERROR!

!testRun: #TerniLapilliTests #test27 stamp: 'fr 10/31/2020 16:27:54'!
ERROR!

!testRun: #TerniLapilliTests #test28 stamp: 'fr 10/31/2020 16:27:54'!
ERROR!

!testRun: #TerniLapilliTests #test29 stamp: 'fr 10/31/2020 16:27:54'!
ERROR!

!testRun: #TerniLapilliTests #test30 stamp: 'fr 10/31/2020 16:27:54'!
ERROR!

!testRun: #TerniLapilliTests #test31 stamp: 'fr 10/31/2020 16:27:54'!
ERROR!

!testRun: #TerniLapilliTests #test01 stamp: 'fr 10/31/2020 16:28:03'!
ERROR!

!testRun: #TerniLapilliTests #test01 stamp: 'fr 10/31/2020 16:28:03'!
ERROR!

!testRun: #TerniLapilliTests #test01 stamp: 'fr 10/31/2020 16:28:19'!
ERROR!

!testRun: #TerniLapilliTests #test01 stamp: 'fr 10/31/2020 16:28:49'!
ERROR!
!TerniLapilliState class methodsFor: 'instance creation' stamp: 'fr 10/31/2020 16:29:12'!
isFor: aTerniLapilli
	
	^(self subclasses detect: [:aTerniLapilliState | aTerniLapilliState canHandle: aTerniLapilli]) new initializeFor: aTerniLapilli! !
!TerniLapilliState class methodsFor: 'instance creation' stamp: 'fr 10/30/2020 21:57:07' prior: 50875214!
for: aTerniLapilli
	
	^self new initializeFor: aTerniLapilli ! !
!TerniLapilliState class methodsFor: 'instance creation' stamp: 'fr 10/31/2020 16:29:42' prior: 50875452!
isFor: aTerniLapilli
	
	^(self subclasses detect: [:aTerniLapilliState | aTerniLapilliState canHandle: aTerniLapilli]) for: aTerniLapilli! !
!TerniLapilli methodsFor: 'actions' stamp: 'fr 10/31/2020 16:30:03' prior: 50875204!
safePutOAt: aPosition 

	self failIfPositionOutOfBounds: aPosition.
	self failIfPositionAlreadyHoldsAPiece: aPosition.
	(self positionsFor: #O) add: aPosition.
	state _ TerniLapilliState isFor: self
	! !
!TerniLapilli methodsFor: 'actions' stamp: 'fr 10/31/2020 16:30:07' prior: 50875195!
safePutXAt: aPosition 
	
	self failIfPositionOutOfBounds: aPosition.
	self failIfPositionAlreadyHoldsAPiece: aPosition.
	(self positionsFor: #X) add: aPosition.
	state _ TerniLapilliState isFor: self! !

!testRun: #TerniLapilliTests #test01 stamp: 'fr 10/31/2020 16:30:16'!
ERROR!

!testRun: #TerniLapilliTests #test02 stamp: 'fr 10/31/2020 16:30:16'!
ERROR!

!testRun: #TerniLapilliTests #test03 stamp: 'fr 10/31/2020 16:30:16'!
PASSED!

!testRun: #TerniLapilliTests #test04 stamp: 'fr 10/31/2020 16:30:16'!
PASSED!

!testRun: #TerniLapilliTests #test05 stamp: 'fr 10/31/2020 16:30:16'!
ERROR!

!testRun: #TerniLapilliTests #test06 stamp: 'fr 10/31/2020 16:30:16'!
ERROR!

!testRun: #TerniLapilliTests #test07 stamp: 'fr 10/31/2020 16:30:16'!
ERROR!

!testRun: #TerniLapilliTests #test08 stamp: 'fr 10/31/2020 16:30:16'!
ERROR!

!testRun: #TerniLapilliTests #test09 stamp: 'fr 10/31/2020 16:30:16'!
ERROR!

!testRun: #TerniLapilliTests #test10 stamp: 'fr 10/31/2020 16:30:16'!
ERROR!

!testRun: #TerniLapilliTests #test11 stamp: 'fr 10/31/2020 16:30:16'!
FAILURE!

!testRun: #TerniLapilliTests #test12 stamp: 'fr 10/31/2020 16:30:16'!
FAILURE!

!testRun: #TerniLapilliTests #test13 stamp: 'fr 10/31/2020 16:30:16'!
PASSED!

!testRun: #TerniLapilliTests #test14 stamp: 'fr 10/31/2020 16:30:16'!
FAILURE!

!testRun: #TerniLapilliTests #test15 stamp: 'fr 10/31/2020 16:30:16'!
FAILURE!

!testRun: #TerniLapilliTests #test16 stamp: 'fr 10/31/2020 16:30:16'!
FAILURE!

!testRun: #TerniLapilliTests #test17 stamp: 'fr 10/31/2020 16:30:16'!
ERROR!

!testRun: #TerniLapilliTests #test18 stamp: 'fr 10/31/2020 16:30:16'!
ERROR!

!testRun: #TerniLapilliTests #test19 stamp: 'fr 10/31/2020 16:30:16'!
PASSED!

!testRun: #TerniLapilliTests #test20 stamp: 'fr 10/31/2020 16:30:16'!
FAILURE!

!testRun: #TerniLapilliTests #test21 stamp: 'fr 10/31/2020 16:30:16'!
FAILURE!

!testRun: #TerniLapilliTests #test22 stamp: 'fr 10/31/2020 16:30:16'!
FAILURE!

!testRun: #TerniLapilliTests #test24 stamp: 'fr 10/31/2020 16:30:16'!
FAILURE!

!testRun: #TerniLapilliTests #test25 stamp: 'fr 10/31/2020 16:30:16'!
FAILURE!

!testRun: #TerniLapilliTests #test26 stamp: 'fr 10/31/2020 16:30:16'!
FAILURE!

!testRun: #TerniLapilliTests #test27 stamp: 'fr 10/31/2020 16:30:16'!
FAILURE!

!testRun: #TerniLapilliTests #test28 stamp: 'fr 10/31/2020 16:30:16'!
FAILURE!

!testRun: #TerniLapilliTests #test29 stamp: 'fr 10/31/2020 16:30:16'!
FAILURE!

!testRun: #TerniLapilliTests #test30 stamp: 'fr 10/31/2020 16:30:16'!
FAILURE!

!testRun: #TerniLapilliTests #test31 stamp: 'fr 10/31/2020 16:30:16'!
FAILURE!

!testRun: #TerniLapilliTests #test01 stamp: 'fr 10/31/2020 16:30:21'!
ERROR!

!testRun: #TerniLapilliTests #test01 stamp: 'fr 10/31/2020 16:30:21'!
ERROR!

TerniLapilli!

terniLapilli!

state isOsTurn !

state isXsTurn !
!OAdding class methodsFor: 'as yet unclassified' stamp: 'fr 10/31/2020 16:32:47' prior: 50875334!
canHandle: aTerniLapilli

	^(aTerniLapilli hasPiecesToAdd: #O) and: [aTerniLapilli isXsTurn]

	! !
!OMoving class methodsFor: 'as yet unclassified' stamp: 'fr 10/31/2020 16:32:57' prior: 50875343!
canHandle: aTerniLapilli

	^(aTerniLapilli hasPiecesToAdd: #O) not and: [aTerniLapilli isXsTurn]

	! !
!XAdding class methodsFor: 'as yet unclassified' stamp: 'fr 10/31/2020 16:33:03' prior: 50875356!
canHandle: aTerniLapilli

	^(aTerniLapilli hasPiecesToAdd: #X) and: [aTerniLapilli isOsTurn]

	! !
!XMoving class methodsFor: 'as yet unclassified' stamp: 'fr 10/31/2020 16:33:09' prior: 50875362!
canHandle: aTerniLapilli

	^(aTerniLapilli hasPiecesToAdd: #X) and: [aTerniLapilli isOsTurn]

	! !

!testRun: #TerniLapilliTests #test01 stamp: 'fr 10/31/2020 16:33:18'!
PASSED!

!testRun: #TerniLapilliTests #test02 stamp: 'fr 10/31/2020 16:33:18'!
PASSED!

!testRun: #TerniLapilliTests #test03 stamp: 'fr 10/31/2020 16:33:18'!
PASSED!

!testRun: #TerniLapilliTests #test04 stamp: 'fr 10/31/2020 16:33:18'!
PASSED!

!testRun: #TerniLapilliTests #test05 stamp: 'fr 10/31/2020 16:33:18'!
PASSED!

!testRun: #TerniLapilliTests #test06 stamp: 'fr 10/31/2020 16:33:18'!
PASSED!

!testRun: #TerniLapilliTests #test07 stamp: 'fr 10/31/2020 16:33:18'!
PASSED!

!testRun: #TerniLapilliTests #test08 stamp: 'fr 10/31/2020 16:33:18'!
PASSED!

!testRun: #TerniLapilliTests #test09 stamp: 'fr 10/31/2020 16:33:18'!
PASSED!

!testRun: #TerniLapilliTests #test10 stamp: 'fr 10/31/2020 16:33:18'!
PASSED!

!testRun: #TerniLapilliTests #test11 stamp: 'fr 10/31/2020 16:33:18'!
PASSED!

!testRun: #TerniLapilliTests #test12 stamp: 'fr 10/31/2020 16:33:18'!
PASSED!

!testRun: #TerniLapilliTests #test13 stamp: 'fr 10/31/2020 16:33:18'!
PASSED!

!testRun: #TerniLapilliTests #test14 stamp: 'fr 10/31/2020 16:33:18'!
PASSED!

!testRun: #TerniLapilliTests #test15 stamp: 'fr 10/31/2020 16:33:18'!
FAILURE!

!testRun: #TerniLapilliTests #test16 stamp: 'fr 10/31/2020 16:33:18'!
FAILURE!

!testRun: #TerniLapilliTests #test17 stamp: 'fr 10/31/2020 16:33:18'!
ERROR!

!testRun: #TerniLapilliTests #test18 stamp: 'fr 10/31/2020 16:33:18'!
ERROR!

!testRun: #TerniLapilliTests #test19 stamp: 'fr 10/31/2020 16:33:18'!
PASSED!

!testRun: #TerniLapilliTests #test20 stamp: 'fr 10/31/2020 16:33:18'!
PASSED!

!testRun: #TerniLapilliTests #test21 stamp: 'fr 10/31/2020 16:33:18'!
FAILURE!

!testRun: #TerniLapilliTests #test22 stamp: 'fr 10/31/2020 16:33:18'!
FAILURE!

!testRun: #TerniLapilliTests #test24 stamp: 'fr 10/31/2020 16:33:18'!
FAILURE!

!testRun: #TerniLapilliTests #test25 stamp: 'fr 10/31/2020 16:33:18'!
FAILURE!

!testRun: #TerniLapilliTests #test26 stamp: 'fr 10/31/2020 16:33:18'!
FAILURE!

!testRun: #TerniLapilliTests #test27 stamp: 'fr 10/31/2020 16:33:18'!
FAILURE!

!testRun: #TerniLapilliTests #test28 stamp: 'fr 10/31/2020 16:33:18'!
FAILURE!

!testRun: #TerniLapilliTests #test29 stamp: 'fr 10/31/2020 16:33:18'!
FAILURE!

!testRun: #TerniLapilliTests #test30 stamp: 'fr 10/31/2020 16:33:18'!
FAILURE!

!testRun: #TerniLapilliTests #test31 stamp: 'fr 10/31/2020 16:33:18'!
FAILURE!

!testRun: #TerniLapilliTests #test17 stamp: 'fr 10/31/2020 16:33:34'!
ERROR!

!testRun: #TerniLapilliTests #test17 stamp: 'fr 10/31/2020 16:33:34'!
ERROR!

!testRun: #TerniLapilliTests #test17 stamp: 'fr 10/31/2020 16:33:58'!
ERROR!

!testRun: #TerniLapilliTests #test17 stamp: 'fr 10/31/2020 16:34:08'!
ERROR!

!testRun: #TerniLapilliTests #test17 stamp: 'fr 10/31/2020 16:34:08'!
ERROR!

!testRun: #TerniLapilliTests #test17 stamp: 'fr 10/31/2020 16:34:26'!
ERROR!
!XMoving class methodsFor: 'as yet unclassified' stamp: 'fr 10/31/2020 16:35:03' prior: 50875597!
canHandle: aTerniLapilli

	^(aTerniLapilli hasPiecesToAdd: #X)not and: [aTerniLapilli isOsTurn]

	! !
!XMoving class methodsFor: 'as yet unclassified' stamp: 'fr 10/31/2020 16:35:04' prior: 50875693!
canHandle: aTerniLapilli

	^(aTerniLapilli hasPiecesToAdd: #X) not and: [aTerniLapilli isOsTurn]

	! !

!testRun: #TerniLapilliTests #test01 stamp: 'fr 10/31/2020 16:35:20'!
PASSED!

!testRun: #TerniLapilliTests #test02 stamp: 'fr 10/31/2020 16:35:20'!
PASSED!

!testRun: #TerniLapilliTests #test03 stamp: 'fr 10/31/2020 16:35:20'!
PASSED!

!testRun: #TerniLapilliTests #test04 stamp: 'fr 10/31/2020 16:35:20'!
PASSED!

!testRun: #TerniLapilliTests #test05 stamp: 'fr 10/31/2020 16:35:20'!
PASSED!

!testRun: #TerniLapilliTests #test06 stamp: 'fr 10/31/2020 16:35:20'!
PASSED!

!testRun: #TerniLapilliTests #test07 stamp: 'fr 10/31/2020 16:35:20'!
PASSED!

!testRun: #TerniLapilliTests #test08 stamp: 'fr 10/31/2020 16:35:20'!
PASSED!

!testRun: #TerniLapilliTests #test09 stamp: 'fr 10/31/2020 16:35:20'!
PASSED!

!testRun: #TerniLapilliTests #test10 stamp: 'fr 10/31/2020 16:35:20'!
PASSED!

!testRun: #TerniLapilliTests #test11 stamp: 'fr 10/31/2020 16:35:20'!
PASSED!

!testRun: #TerniLapilliTests #test12 stamp: 'fr 10/31/2020 16:35:20'!
PASSED!

!testRun: #TerniLapilliTests #test13 stamp: 'fr 10/31/2020 16:35:20'!
PASSED!

!testRun: #TerniLapilliTests #test14 stamp: 'fr 10/31/2020 16:35:20'!
PASSED!

!testRun: #TerniLapilliTests #test15 stamp: 'fr 10/31/2020 16:35:20'!
PASSED!

!testRun: #TerniLapilliTests #test16 stamp: 'fr 10/31/2020 16:35:20'!
PASSED!

!testRun: #TerniLapilliTests #test17 stamp: 'fr 10/31/2020 16:35:20'!
PASSED!

!testRun: #TerniLapilliTests #test18 stamp: 'fr 10/31/2020 16:35:20'!
PASSED!

!testRun: #TerniLapilliTests #test19 stamp: 'fr 10/31/2020 16:35:20'!
PASSED!

!testRun: #TerniLapilliTests #test20 stamp: 'fr 10/31/2020 16:35:20'!
PASSED!

!testRun: #TerniLapilliTests #test21 stamp: 'fr 10/31/2020 16:35:20'!
PASSED!

!testRun: #TerniLapilliTests #test22 stamp: 'fr 10/31/2020 16:35:20'!
PASSED!

!testRun: #TerniLapilliTests #test24 stamp: 'fr 10/31/2020 16:35:20'!
PASSED!

!testRun: #TerniLapilliTests #test25 stamp: 'fr 10/31/2020 16:35:20'!
PASSED!

!testRun: #TerniLapilliTests #test26 stamp: 'fr 10/31/2020 16:35:20'!
PASSED!

!testRun: #TerniLapilliTests #test27 stamp: 'fr 10/31/2020 16:35:20'!
PASSED!

!testRun: #TerniLapilliTests #test28 stamp: 'fr 10/31/2020 16:35:20'!
FAILURE!

!testRun: #TerniLapilliTests #test29 stamp: 'fr 10/31/2020 16:35:20'!
PASSED!

!testRun: #TerniLapilliTests #test30 stamp: 'fr 10/31/2020 16:35:20'!
PASSED!

!testRun: #TerniLapilliTests #test31 stamp: 'fr 10/31/2020 16:35:20'!
PASSED!

!testRun: #TerniLapilliTests #test28 stamp: 'fr 10/31/2020 16:35:20'!
FAILURE!

!testRun: #TerniLapilliTests #test28 stamp: 'fr 10/31/2020 16:35:41'!
FAILURE!

!testRun: #TerniLapilliTests #test28 stamp: 'fr 10/31/2020 16:35:41'!
FAILURE!

!testRun: #TerniLapilliTests #test28 stamp: 'fr 10/31/2020 16:36:32'!
FAILURE!

!testRun: #TerniLapilliTests #test28 stamp: 'fr 10/31/2020 16:36:39'!
FAILURE!

!testRun: #TerniLapilliTests #test28 stamp: 'fr 10/31/2020 16:36:48'!
FAILURE!

(currentPosition dist: newPosition) > 1!
!TerniLapilli methodsFor: 'actions' stamp: 'fr 10/31/2020 16:40:43' prior: 50875289!
safeMoveXFrom: currentPosition to: newPosition
	
	"(self hasPiecesToAdd) ifFalse: [self error: self class canNotMoveBeforeAddingThreePiecesErrorDescription ]."
	self failIfPositionOutOfBounds: currentPosition.
	((((currentPosition x + currentPosition y) even) and: [currentPosition eightNeighbors includes: newPosition] ) or: [( (currentPosition x + currentPosition y) odd ) and: [currentPosition fourNeighbors includes: newPosition ]]) ifFalse: [self error: self class canNotMoveToPositionMoreThanOnePlaceAfarErrorDescription].
	(self positionsFor: #X) remove: currentPosition ifAbsent: [self error: self class positionIsNotUnderPlayersControlErrorDescription].

	self safePutXAt: newPosition 
	
	! !

!testRun: #TerniLapilliTests #test28 stamp: 'fr 10/31/2020 16:40:45'!
PASSED!

!testRun: #TerniLapilliTests #test01 stamp: 'fr 10/31/2020 16:40:45'!
PASSED!

!testRun: #TerniLapilliTests #test02 stamp: 'fr 10/31/2020 16:40:45'!
PASSED!

!testRun: #TerniLapilliTests #test03 stamp: 'fr 10/31/2020 16:40:45'!
PASSED!

!testRun: #TerniLapilliTests #test04 stamp: 'fr 10/31/2020 16:40:45'!
PASSED!

!testRun: #TerniLapilliTests #test05 stamp: 'fr 10/31/2020 16:40:45'!
PASSED!

!testRun: #TerniLapilliTests #test06 stamp: 'fr 10/31/2020 16:40:45'!
PASSED!

!testRun: #TerniLapilliTests #test07 stamp: 'fr 10/31/2020 16:40:45'!
PASSED!

!testRun: #TerniLapilliTests #test08 stamp: 'fr 10/31/2020 16:40:45'!
PASSED!

!testRun: #TerniLapilliTests #test09 stamp: 'fr 10/31/2020 16:40:45'!
PASSED!

!testRun: #TerniLapilliTests #test10 stamp: 'fr 10/31/2020 16:40:45'!
PASSED!

!testRun: #TerniLapilliTests #test11 stamp: 'fr 10/31/2020 16:40:45'!
PASSED!

!testRun: #TerniLapilliTests #test12 stamp: 'fr 10/31/2020 16:40:45'!
PASSED!

!testRun: #TerniLapilliTests #test13 stamp: 'fr 10/31/2020 16:40:45'!
PASSED!

!testRun: #TerniLapilliTests #test14 stamp: 'fr 10/31/2020 16:40:45'!
PASSED!

!testRun: #TerniLapilliTests #test15 stamp: 'fr 10/31/2020 16:40:45'!
PASSED!

!testRun: #TerniLapilliTests #test16 stamp: 'fr 10/31/2020 16:40:45'!
PASSED!

!testRun: #TerniLapilliTests #test17 stamp: 'fr 10/31/2020 16:40:45'!
PASSED!

!testRun: #TerniLapilliTests #test18 stamp: 'fr 10/31/2020 16:40:45'!
PASSED!

!testRun: #TerniLapilliTests #test19 stamp: 'fr 10/31/2020 16:40:45'!
PASSED!

!testRun: #TerniLapilliTests #test20 stamp: 'fr 10/31/2020 16:40:45'!
PASSED!

!testRun: #TerniLapilliTests #test21 stamp: 'fr 10/31/2020 16:40:45'!
PASSED!

!testRun: #TerniLapilliTests #test22 stamp: 'fr 10/31/2020 16:40:45'!
PASSED!

!testRun: #TerniLapilliTests #test24 stamp: 'fr 10/31/2020 16:40:45'!
PASSED!

!testRun: #TerniLapilliTests #test25 stamp: 'fr 10/31/2020 16:40:45'!
PASSED!

!testRun: #TerniLapilliTests #test26 stamp: 'fr 10/31/2020 16:40:45'!
PASSED!

!testRun: #TerniLapilliTests #test27 stamp: 'fr 10/31/2020 16:40:45'!
PASSED!

!testRun: #TerniLapilliTests #test28 stamp: 'fr 10/31/2020 16:40:45'!
PASSED!

!testRun: #TerniLapilliTests #test29 stamp: 'fr 10/31/2020 16:40:45'!
PASSED!

!testRun: #TerniLapilliTests #test30 stamp: 'fr 10/31/2020 16:40:45'!
PASSED!

!testRun: #TerniLapilliTests #test31 stamp: 'fr 10/31/2020 16:40:45'!
PASSED!
!TerniLapilli methodsFor: 'actions' stamp: 'fr 10/31/2020 16:41:21' prior: 50875159!
safeMoveOFrom: currentPosition to: newPosition 
	
	self failIfPositionOutOfBounds: currentPosition.
	((((currentPosition x + currentPosition y) even) and: [currentPosition eightNeighbors includes: newPosition] ) or: [( (currentPosition x + currentPosition y) odd ) and: [currentPosition fourNeighbors includes: newPosition ]]) ifFalse: [self error: self class canNotMoveToPositionMoreThanOnePlaceAfarErrorDescription].
	(self positionsFor: #O) remove: currentPosition ifAbsent: [self error: self class positionIsNotUnderPlayersControlErrorDescription].

	self safePutOAt: newPosition 
! !
!TerniLapilli methodsFor: 'actions' stamp: 'fr 10/31/2020 16:42:00' prior: 50875797!
safeMoveXFrom: currentPosition to: newPosition
	
	"(self hasPiecesToAdd) ifFalse: [self error: self class canNotMoveBeforeAddingThreePiecesErrorDescription ]."
	self failIfPositionOutOfBounds: currentPosition.
	
	((((currentPosition x + currentPosition y) even) and: [currentPosition eightNeighbors includes: newPosition] ) or: [( (currentPosition x + currentPosition y) odd ) and: [currentPosition fourNeighbors includes: newPosition ]]) ifFalse: [self error: self class canNotMoveToPositionMoreThanOnePlaceAfarErrorDescription].
	
	(self positionsFor: #X) remove: currentPosition ifAbsent: [self error: self class positionIsNotUnderPlayersControlErrorDescription].

	self safePutXAt: newPosition 
	
	! !
!TerniLapilli methodsFor: 'actions' stamp: 'fr 10/31/2020 16:42:39'!
canNotMoveMoreThanOnePlaceAfar

	^ self error: self class canNotMoveToPositionMoreThanOnePlaceAfarErrorDescription! !
!TerniLapilli methodsFor: 'actions' stamp: 'fr 10/31/2020 16:42:39' prior: 50875921!
safeMoveXFrom: currentPosition to: newPosition
	
	"(self hasPiecesToAdd) ifFalse: [self error: self class canNotMoveBeforeAddingThreePiecesErrorDescription ]."
	self failIfPositionOutOfBounds: currentPosition.
	
	((((currentPosition x + currentPosition y) even) and: [currentPosition eightNeighbors includes: newPosition] ) or: [( (currentPosition x + currentPosition y) odd ) and: [currentPosition fourNeighbors includes: newPosition ]]) ifFalse: [self canNotMoveMoreThanOnePlaceAfar].
	
	(self positionsFor: #X) remove: currentPosition ifAbsent: [self error: self class positionIsNotUnderPlayersControlErrorDescription].

	self safePutXAt: newPosition 
	
	! !
!TerniLapilli methodsFor: 'actions' stamp: 'fr 10/31/2020 16:45:04'!
failIfItIsNotPossibleToMoveFrom: currentPosition to: newPosition

	((((currentPosition x + currentPosition y) even) and: [currentPosition eightNeighbors includes: newPosition] ) or: [( (currentPosition x + currentPosition y) odd ) and: [currentPosition fourNeighbors includes: newPosition ]]) ifFalse: [self canNotMoveMoreThanOnePlaceAfar].
	
	! !
!TerniLapilli methodsFor: 'actions' stamp: 'fr 10/31/2020 16:45:41' prior: 50875953!
safeMoveXFrom: currentPosition to: newPosition
	
	"(self hasPiecesToAdd) ifFalse: [self error: self class canNotMoveBeforeAddingThreePiecesErrorDescription ]."
	self failIfPositionOutOfBounds: currentPosition.
	
	self failIfItIsNotPossibleToMoveFrom: currentPosition to: newPosition.
	
	(self positionsFor: #X) remove: currentPosition ifAbsent: [self error: self class positionIsNotUnderPlayersControlErrorDescription].

	self safePutXAt: newPosition 
	
	! !
!TerniLapilli methodsFor: 'actions' stamp: 'fr 10/31/2020 16:45:51' prior: 50875899!
safeMoveOFrom: currentPosition to: newPosition 
	
	self failIfPositionOutOfBounds: currentPosition.
	self 	self failIfItIsNotPossibleToMoveFrom: currentPosition to: newPosition.
	(self positionsFor: #O) remove: currentPosition ifAbsent: [self error: self class positionIsNotUnderPlayersControlErrorDescription].

	self safePutOAt: newPosition 
! !
!TerniLapilli methodsFor: 'actions' stamp: 'fr 10/31/2020 16:45:55' prior: 50876007!
safeMoveOFrom: currentPosition to: newPosition 
	
	self failIfPositionOutOfBounds: currentPosition.
	self failIfItIsNotPossibleToMoveFrom: currentPosition to: newPosition.
	(self positionsFor: #O) remove: currentPosition ifAbsent: [self error: self class positionIsNotUnderPlayersControlErrorDescription].

	self safePutOAt: newPosition 
! !
!TerniLapilli methodsFor: 'actions' stamp: 'fr 10/31/2020 16:46:04' prior: 50875990!
safeMoveXFrom: currentPosition to: newPosition
	
	self failIfPositionOutOfBounds: currentPosition.	
	self failIfItIsNotPossibleToMoveFrom: currentPosition to: newPosition.
	(self positionsFor: #X) remove: currentPosition ifAbsent: [self error: self class positionIsNotUnderPlayersControlErrorDescription].

	self safePutXAt: newPosition 
	
	! !

!testRun: #TerniLapilliTests #test01 stamp: 'fr 10/31/2020 16:46:28'!
PASSED!

!testRun: #TerniLapilliTests #test02 stamp: 'fr 10/31/2020 16:46:28'!
PASSED!

!testRun: #TerniLapilliTests #test03 stamp: 'fr 10/31/2020 16:46:28'!
PASSED!

!testRun: #TerniLapilliTests #test04 stamp: 'fr 10/31/2020 16:46:28'!
PASSED!

!testRun: #TerniLapilliTests #test05 stamp: 'fr 10/31/2020 16:46:28'!
PASSED!

!testRun: #TerniLapilliTests #test06 stamp: 'fr 10/31/2020 16:46:28'!
PASSED!

!testRun: #TerniLapilliTests #test07 stamp: 'fr 10/31/2020 16:46:28'!
PASSED!

!testRun: #TerniLapilliTests #test08 stamp: 'fr 10/31/2020 16:46:28'!
PASSED!

!testRun: #TerniLapilliTests #test09 stamp: 'fr 10/31/2020 16:46:28'!
PASSED!

!testRun: #TerniLapilliTests #test10 stamp: 'fr 10/31/2020 16:46:28'!
PASSED!

!testRun: #TerniLapilliTests #test11 stamp: 'fr 10/31/2020 16:46:28'!
PASSED!

!testRun: #TerniLapilliTests #test12 stamp: 'fr 10/31/2020 16:46:28'!
PASSED!

!testRun: #TerniLapilliTests #test13 stamp: 'fr 10/31/2020 16:46:28'!
PASSED!

!testRun: #TerniLapilliTests #test14 stamp: 'fr 10/31/2020 16:46:28'!
PASSED!

!testRun: #TerniLapilliTests #test15 stamp: 'fr 10/31/2020 16:46:28'!
PASSED!

!testRun: #TerniLapilliTests #test16 stamp: 'fr 10/31/2020 16:46:28'!
PASSED!

!testRun: #TerniLapilliTests #test17 stamp: 'fr 10/31/2020 16:46:28'!
PASSED!

!testRun: #TerniLapilliTests #test18 stamp: 'fr 10/31/2020 16:46:28'!
PASSED!

!testRun: #TerniLapilliTests #test19 stamp: 'fr 10/31/2020 16:46:28'!
PASSED!

!testRun: #TerniLapilliTests #test20 stamp: 'fr 10/31/2020 16:46:28'!
PASSED!

!testRun: #TerniLapilliTests #test21 stamp: 'fr 10/31/2020 16:46:28'!
PASSED!

!testRun: #TerniLapilliTests #test22 stamp: 'fr 10/31/2020 16:46:28'!
PASSED!

!testRun: #TerniLapilliTests #test24 stamp: 'fr 10/31/2020 16:46:28'!
PASSED!

!testRun: #TerniLapilliTests #test25 stamp: 'fr 10/31/2020 16:46:28'!
PASSED!

!testRun: #TerniLapilliTests #test26 stamp: 'fr 10/31/2020 16:46:28'!
PASSED!

!testRun: #TerniLapilliTests #test27 stamp: 'fr 10/31/2020 16:46:28'!
PASSED!

!testRun: #TerniLapilliTests #test28 stamp: 'fr 10/31/2020 16:46:28'!
PASSED!

!testRun: #TerniLapilliTests #test29 stamp: 'fr 10/31/2020 16:46:28'!
PASSED!

!testRun: #TerniLapilliTests #test30 stamp: 'fr 10/31/2020 16:46:28'!
PASSED!

!testRun: #TerniLapilliTests #test31 stamp: 'fr 10/31/2020 16:46:28'!
PASSED!
!TerniLapilli methodsFor: 'actions' stamp: 'fr 10/31/2020 16:49:34' prior: 50874993!
moveOFrom: currentPosition to: newPosition 
	
	state moveOFrom: currentPosition to: newPosition 
! !
!TerniLapilli methodsFor: 'actions' stamp: 'fr 10/31/2020 16:49:41' prior: 50875015!
moveXFrom: currentPosition to: newPosition

	state moveXFrom: currentPosition to: newPosition 
	
	! !
!TerniLapilliTests methodsFor: 'as yet unclassified' stamp: 'fr 10/31/2020 17:02:41'!
test32

	| terniLapilli |
	terniLapilli _ TerniLapilli new.
	terniLapilli putXAt: 1 @ 1.
	terniLapilli putOAt: 2 @ 3.
	terniLapilli putXAt: 1 @ 2.
	self assert: [ (terniLapilli hasPlayerWon: #X) not].! !
!TerniLapilliTests methodsFor: 'as yet unclassified' stamp: 'fr 10/31/2020 17:03:02' prior: 50876135!
test32

	| terniLapilli |
	terniLapilli _ TerniLapilli new.
	terniLapilli putXAt: 1 @ 1.
	terniLapilli putOAt: 2 @ 3.
	terniLapilli putXAt: 1 @ 2.
	self assert: [ terniLapilli hasPlayerXWon not].! !

!testRun: #TerniLapilliTests #test32 stamp: 'fr 10/31/2020 17:03:05'!
ERROR!

!testRun: #TerniLapilliTests #test32 stamp: 'fr 10/31/2020 17:03:19'!
ERROR!
!TerniLapilli methodsFor: 'game state' stamp: 'fr 10/31/2020 17:03:27'!
hasPlayerXWon
	self shouldBeImplemented.! !
!TerniLapilli methodsFor: 'game state' stamp: 'fr 10/31/2020 17:03:37' prior: 50876159!
hasPlayerXWon
	
	^false! !

!testRun: #TerniLapilliTests #test32 stamp: 'fr 10/31/2020 17:03:39'!
PASSED!

!testRun: #TerniLapilliTests #test01 stamp: 'fr 10/31/2020 17:03:39'!
PASSED!

!testRun: #TerniLapilliTests #test02 stamp: 'fr 10/31/2020 17:03:39'!
PASSED!

!testRun: #TerniLapilliTests #test03 stamp: 'fr 10/31/2020 17:03:39'!
PASSED!

!testRun: #TerniLapilliTests #test04 stamp: 'fr 10/31/2020 17:03:39'!
PASSED!

!testRun: #TerniLapilliTests #test05 stamp: 'fr 10/31/2020 17:03:39'!
PASSED!

!testRun: #TerniLapilliTests #test06 stamp: 'fr 10/31/2020 17:03:39'!
PASSED!

!testRun: #TerniLapilliTests #test07 stamp: 'fr 10/31/2020 17:03:39'!
PASSED!

!testRun: #TerniLapilliTests #test08 stamp: 'fr 10/31/2020 17:03:39'!
PASSED!

!testRun: #TerniLapilliTests #test09 stamp: 'fr 10/31/2020 17:03:39'!
PASSED!

!testRun: #TerniLapilliTests #test10 stamp: 'fr 10/31/2020 17:03:39'!
PASSED!

!testRun: #TerniLapilliTests #test11 stamp: 'fr 10/31/2020 17:03:39'!
PASSED!

!testRun: #TerniLapilliTests #test12 stamp: 'fr 10/31/2020 17:03:39'!
PASSED!

!testRun: #TerniLapilliTests #test13 stamp: 'fr 10/31/2020 17:03:39'!
PASSED!

!testRun: #TerniLapilliTests #test14 stamp: 'fr 10/31/2020 17:03:39'!
PASSED!

!testRun: #TerniLapilliTests #test15 stamp: 'fr 10/31/2020 17:03:39'!
PASSED!

!testRun: #TerniLapilliTests #test16 stamp: 'fr 10/31/2020 17:03:39'!
PASSED!

!testRun: #TerniLapilliTests #test17 stamp: 'fr 10/31/2020 17:03:39'!
PASSED!

!testRun: #TerniLapilliTests #test18 stamp: 'fr 10/31/2020 17:03:39'!
PASSED!

!testRun: #TerniLapilliTests #test19 stamp: 'fr 10/31/2020 17:03:39'!
PASSED!

!testRun: #TerniLapilliTests #test20 stamp: 'fr 10/31/2020 17:03:39'!
PASSED!

!testRun: #TerniLapilliTests #test21 stamp: 'fr 10/31/2020 17:03:40'!
PASSED!

!testRun: #TerniLapilliTests #test22 stamp: 'fr 10/31/2020 17:03:40'!
PASSED!

!testRun: #TerniLapilliTests #test24 stamp: 'fr 10/31/2020 17:03:40'!
PASSED!

!testRun: #TerniLapilliTests #test25 stamp: 'fr 10/31/2020 17:03:40'!
PASSED!

!testRun: #TerniLapilliTests #test26 stamp: 'fr 10/31/2020 17:03:40'!
PASSED!

!testRun: #TerniLapilliTests #test27 stamp: 'fr 10/31/2020 17:03:40'!
PASSED!

!testRun: #TerniLapilliTests #test28 stamp: 'fr 10/31/2020 17:03:40'!
PASSED!

!testRun: #TerniLapilliTests #test29 stamp: 'fr 10/31/2020 17:03:40'!
PASSED!

!testRun: #TerniLapilliTests #test30 stamp: 'fr 10/31/2020 17:03:40'!
PASSED!

!testRun: #TerniLapilliTests #test31 stamp: 'fr 10/31/2020 17:03:40'!
PASSED!

!testRun: #TerniLapilliTests #test32 stamp: 'fr 10/31/2020 17:03:40'!
PASSED!
!TerniLapilliTests methodsFor: 'as yet unclassified' stamp: 'fr 10/31/2020 17:04:28' prior: 50876145!
test32

	| terniLapilli |
	terniLapilli _ TerniLapilli new.
	terniLapilli putXAt: 1 @ 1.
	terniLapilli putOAt: 2 @ 3.
	terniLapilli putXAt: 1 @ 2.
	self assert: [ terniLapilli hasPlayerXWon not and: [terniLapilli hasPlayerOWon not]].! !

!testRun: #TerniLapilliTests #test32 stamp: 'fr 10/31/2020 17:04:32'!
ERROR!
!TerniLapilli methodsFor: 'game state' stamp: 'fr 10/31/2020 17:04:47'!
hasPlayerOWon
	self shouldBeImplemented.! !
!TerniLapilli methodsFor: 'game state' stamp: 'fr 10/31/2020 17:04:53' prior: 50876261!
hasPlayerOWon
	
	^false! !

!testRun: #TerniLapilliTests #test32 stamp: 'fr 10/31/2020 17:04:55'!
PASSED!

!testRun: #TerniLapilliTests #test01 stamp: 'fr 10/31/2020 17:04:55'!
PASSED!

!testRun: #TerniLapilliTests #test02 stamp: 'fr 10/31/2020 17:04:55'!
PASSED!

!testRun: #TerniLapilliTests #test03 stamp: 'fr 10/31/2020 17:04:55'!
PASSED!

!testRun: #TerniLapilliTests #test04 stamp: 'fr 10/31/2020 17:04:55'!
PASSED!

!testRun: #TerniLapilliTests #test05 stamp: 'fr 10/31/2020 17:04:55'!
PASSED!

!testRun: #TerniLapilliTests #test06 stamp: 'fr 10/31/2020 17:04:55'!
PASSED!

!testRun: #TerniLapilliTests #test07 stamp: 'fr 10/31/2020 17:04:55'!
PASSED!

!testRun: #TerniLapilliTests #test08 stamp: 'fr 10/31/2020 17:04:55'!
PASSED!

!testRun: #TerniLapilliTests #test09 stamp: 'fr 10/31/2020 17:04:55'!
PASSED!

!testRun: #TerniLapilliTests #test10 stamp: 'fr 10/31/2020 17:04:55'!
PASSED!

!testRun: #TerniLapilliTests #test11 stamp: 'fr 10/31/2020 17:04:55'!
PASSED!

!testRun: #TerniLapilliTests #test12 stamp: 'fr 10/31/2020 17:04:55'!
PASSED!

!testRun: #TerniLapilliTests #test13 stamp: 'fr 10/31/2020 17:04:55'!
PASSED!

!testRun: #TerniLapilliTests #test14 stamp: 'fr 10/31/2020 17:04:55'!
PASSED!

!testRun: #TerniLapilliTests #test15 stamp: 'fr 10/31/2020 17:04:55'!
PASSED!

!testRun: #TerniLapilliTests #test16 stamp: 'fr 10/31/2020 17:04:55'!
PASSED!

!testRun: #TerniLapilliTests #test17 stamp: 'fr 10/31/2020 17:04:55'!
PASSED!

!testRun: #TerniLapilliTests #test18 stamp: 'fr 10/31/2020 17:04:55'!
PASSED!

!testRun: #TerniLapilliTests #test19 stamp: 'fr 10/31/2020 17:04:55'!
PASSED!

!testRun: #TerniLapilliTests #test20 stamp: 'fr 10/31/2020 17:04:55'!
PASSED!

!testRun: #TerniLapilliTests #test21 stamp: 'fr 10/31/2020 17:04:55'!
PASSED!

!testRun: #TerniLapilliTests #test22 stamp: 'fr 10/31/2020 17:04:55'!
PASSED!

!testRun: #TerniLapilliTests #test24 stamp: 'fr 10/31/2020 17:04:55'!
PASSED!

!testRun: #TerniLapilliTests #test25 stamp: 'fr 10/31/2020 17:04:55'!
PASSED!

!testRun: #TerniLapilliTests #test26 stamp: 'fr 10/31/2020 17:04:55'!
PASSED!

!testRun: #TerniLapilliTests #test27 stamp: 'fr 10/31/2020 17:04:55'!
PASSED!

!testRun: #TerniLapilliTests #test28 stamp: 'fr 10/31/2020 17:04:55'!
PASSED!

!testRun: #TerniLapilliTests #test29 stamp: 'fr 10/31/2020 17:04:55'!
PASSED!

!testRun: #TerniLapilliTests #test30 stamp: 'fr 10/31/2020 17:04:55'!
PASSED!

!testRun: #TerniLapilliTests #test31 stamp: 'fr 10/31/2020 17:04:55'!
PASSED!

!testRun: #TerniLapilliTests #test32 stamp: 'fr 10/31/2020 17:04:55'!
PASSED!
!TerniLapilliTests methodsFor: 'as yet unclassified' stamp: 'fr 10/31/2020 17:05:01'!
test33

	| terniLapilli |
	terniLapilli _ TerniLapilli new.
	terniLapilli putXAt: 1 @ 1.
	terniLapilli putOAt: 2 @ 3.
	terniLapilli putXAt: 1 @ 2.
	self assert: [ terniLapilli hasPlayerXWon not and: [terniLapilli hasPlayerOWon not]].! !
!TerniLapilliTests methodsFor: 'as yet unclassified' stamp: 'fr 10/31/2020 17:05:20' prior: 50876349!
test33

	| temp1 |
	temp1 _ TerniLapilli new.
	temp1 putXAt: 1 @ 1.
	temp1 putOAt: 2 @ 3.
	temp1 putXAt: 1 @ 2.
	temp1 putOAt: 2 @ 2.
	temp1 putXAt: 1 @ 3.
	self assert: [ temp1 hasPlayerXWon ].! !
!TerniLapilliTests methodsFor: 'as yet unclassified' stamp: 'fr 10/31/2020 17:05:28' prior: 50876360!
test33

	| terniLapilli |
	terniLapilli _ TerniLapilli new.
	terniLapilli putXAt: 1 @ 1.
	terniLapilli putOAt: 2 @ 3.
	terniLapilli putXAt: 1 @ 2.
	terniLapilli putOAt: 2 @ 2.
	terniLapilli putXAt: 1 @ 3.
	self assert: [ terniLapilli hasPlayerXWon ].! !

!testRun: #TerniLapilliTests #test33 stamp: 'fr 10/31/2020 17:05:34'!
FAILURE!
!TerniLapilli methodsFor: 'game state' stamp: 'fr 10/31/2020 17:10:34' prior: 50876164!
hasPlayerXWon
	
	| row |
	
	row _ 1.
	
	^(self positionsFor: #X) allSatisfy: [:aPosition | aPosition x = row]! !
!TerniLapilli methodsFor: 'game state' stamp: 'fr 10/31/2020 17:11:07' prior: 50876384!
hasPlayerXWon
	
	| row |
	
	row _ 1.
	
	^((self positionsFor: #X) allSatisfy: [:aPosition | aPosition x = row]) and: [(self positionsFor: #X) size = 3]! !

!testRun: #TerniLapilliTests #test33 stamp: 'fr 10/31/2020 17:11:12'!
FAILURE!

!testRun: #TerniLapilliTests #test33 stamp: 'fr 10/31/2020 17:11:17'!
PASSED!

!testRun: #TerniLapilliTests #test01 stamp: 'fr 10/31/2020 17:11:17'!
PASSED!

!testRun: #TerniLapilliTests #test02 stamp: 'fr 10/31/2020 17:11:17'!
PASSED!

!testRun: #TerniLapilliTests #test03 stamp: 'fr 10/31/2020 17:11:17'!
PASSED!

!testRun: #TerniLapilliTests #test04 stamp: 'fr 10/31/2020 17:11:17'!
PASSED!

!testRun: #TerniLapilliTests #test05 stamp: 'fr 10/31/2020 17:11:17'!
PASSED!

!testRun: #TerniLapilliTests #test06 stamp: 'fr 10/31/2020 17:11:17'!
PASSED!

!testRun: #TerniLapilliTests #test07 stamp: 'fr 10/31/2020 17:11:17'!
PASSED!

!testRun: #TerniLapilliTests #test08 stamp: 'fr 10/31/2020 17:11:17'!
PASSED!

!testRun: #TerniLapilliTests #test09 stamp: 'fr 10/31/2020 17:11:17'!
PASSED!

!testRun: #TerniLapilliTests #test10 stamp: 'fr 10/31/2020 17:11:17'!
PASSED!

!testRun: #TerniLapilliTests #test11 stamp: 'fr 10/31/2020 17:11:17'!
PASSED!

!testRun: #TerniLapilliTests #test12 stamp: 'fr 10/31/2020 17:11:17'!
PASSED!

!testRun: #TerniLapilliTests #test13 stamp: 'fr 10/31/2020 17:11:17'!
PASSED!

!testRun: #TerniLapilliTests #test14 stamp: 'fr 10/31/2020 17:11:17'!
PASSED!

!testRun: #TerniLapilliTests #test15 stamp: 'fr 10/31/2020 17:11:17'!
PASSED!

!testRun: #TerniLapilliTests #test16 stamp: 'fr 10/31/2020 17:11:17'!
PASSED!

!testRun: #TerniLapilliTests #test17 stamp: 'fr 10/31/2020 17:11:17'!
PASSED!

!testRun: #TerniLapilliTests #test18 stamp: 'fr 10/31/2020 17:11:17'!
PASSED!

!testRun: #TerniLapilliTests #test19 stamp: 'fr 10/31/2020 17:11:17'!
PASSED!

!testRun: #TerniLapilliTests #test20 stamp: 'fr 10/31/2020 17:11:17'!
PASSED!

!testRun: #TerniLapilliTests #test21 stamp: 'fr 10/31/2020 17:11:17'!
PASSED!

!testRun: #TerniLapilliTests #test22 stamp: 'fr 10/31/2020 17:11:17'!
PASSED!

!testRun: #TerniLapilliTests #test24 stamp: 'fr 10/31/2020 17:11:17'!
PASSED!

!testRun: #TerniLapilliTests #test25 stamp: 'fr 10/31/2020 17:11:17'!
PASSED!

!testRun: #TerniLapilliTests #test26 stamp: 'fr 10/31/2020 17:11:17'!
PASSED!

!testRun: #TerniLapilliTests #test27 stamp: 'fr 10/31/2020 17:11:17'!
PASSED!

!testRun: #TerniLapilliTests #test28 stamp: 'fr 10/31/2020 17:11:17'!
PASSED!

!testRun: #TerniLapilliTests #test29 stamp: 'fr 10/31/2020 17:11:17'!
PASSED!

!testRun: #TerniLapilliTests #test30 stamp: 'fr 10/31/2020 17:11:17'!
PASSED!

!testRun: #TerniLapilliTests #test31 stamp: 'fr 10/31/2020 17:11:17'!
PASSED!

!testRun: #TerniLapilliTests #test32 stamp: 'fr 10/31/2020 17:11:17'!
PASSED!

!testRun: #TerniLapilliTests #test33 stamp: 'fr 10/31/2020 17:11:17'!
PASSED!
!TerniLapilliTests methodsFor: 'as yet unclassified' stamp: 'fr 10/31/2020 17:11:30'!
test34

	| terniLapilli |
	terniLapilli _ TerniLapilli new.
	terniLapilli putXAt: 1 @ 1.
	terniLapilli putOAt: 2 @ 3.
	terniLapilli putXAt: 1 @ 2.
	terniLapilli putOAt: 2 @ 2.
	terniLapilli putXAt: 1 @ 3.
	self assert: [ terniLapilli hasPlayerXWon ].! !
!TerniLapilliTests methodsFor: 'as yet unclassified' stamp: 'fr 10/31/2020 17:11:48' prior: 50876483!
test34

	| terniLapilli |
	terniLapilli _ TerniLapilli new.
	terniLapilli putXAt: 2 @ 1.
	terniLapilli putOAt: 1 @ 3.
	terniLapilli putXAt: 2 @ 2.
	terniLapilli putOAt: 1 @ 2.
	terniLapilli putXAt: 2 @ 3.
	self assert: [ terniLapilli hasPlayerXWon ].! !

!testRun: #TerniLapilliTests #test34 stamp: 'fr 10/31/2020 17:11:53'!
FAILURE!
!TerniLapilli methodsFor: 'game state' stamp: 'fr 10/31/2020 17:13:30' prior: 50876391!
hasPlayerXWon
	
	| randomPosition positionsX|
	positionsX _ self positionsFor: #X.
	randomPosition _ positionsX atRandom.
	
	^(positionsX allSatisfy: [:aPosition | aPosition x = randomPosition x]) and: [(self positionsFor: #X) size = 3]! !
!TerniLapilli methodsFor: 'game state' stamp: 'fr 10/31/2020 17:13:40' prior: 50876509!
hasPlayerXWon
	
	| randomPosition positionsX|
	positionsX _ self positionsFor: #X.
	randomPosition _ positionsX atRandom.
	
	^(positionsX allSatisfy: [:aPosition | aPosition x = randomPosition x]) and: [positionsX size = 3]! !

!testRun: #TerniLapilliTests #test34 stamp: 'fr 10/31/2020 17:13:42'!
PASSED!

!testRun: #TerniLapilliTests #test01 stamp: 'fr 10/31/2020 17:13:42'!
PASSED!

!testRun: #TerniLapilliTests #test02 stamp: 'fr 10/31/2020 17:13:42'!
PASSED!

!testRun: #TerniLapilliTests #test03 stamp: 'fr 10/31/2020 17:13:42'!
PASSED!

!testRun: #TerniLapilliTests #test04 stamp: 'fr 10/31/2020 17:13:42'!
PASSED!

!testRun: #TerniLapilliTests #test05 stamp: 'fr 10/31/2020 17:13:42'!
PASSED!

!testRun: #TerniLapilliTests #test06 stamp: 'fr 10/31/2020 17:13:42'!
PASSED!

!testRun: #TerniLapilliTests #test07 stamp: 'fr 10/31/2020 17:13:42'!
PASSED!

!testRun: #TerniLapilliTests #test08 stamp: 'fr 10/31/2020 17:13:42'!
PASSED!

!testRun: #TerniLapilliTests #test09 stamp: 'fr 10/31/2020 17:13:42'!
PASSED!

!testRun: #TerniLapilliTests #test10 stamp: 'fr 10/31/2020 17:13:42'!
PASSED!

!testRun: #TerniLapilliTests #test11 stamp: 'fr 10/31/2020 17:13:42'!
PASSED!

!testRun: #TerniLapilliTests #test12 stamp: 'fr 10/31/2020 17:13:42'!
PASSED!

!testRun: #TerniLapilliTests #test13 stamp: 'fr 10/31/2020 17:13:42'!
PASSED!

!testRun: #TerniLapilliTests #test14 stamp: 'fr 10/31/2020 17:13:42'!
PASSED!

!testRun: #TerniLapilliTests #test15 stamp: 'fr 10/31/2020 17:13:42'!
PASSED!

!testRun: #TerniLapilliTests #test16 stamp: 'fr 10/31/2020 17:13:42'!
PASSED!

!testRun: #TerniLapilliTests #test17 stamp: 'fr 10/31/2020 17:13:42'!
PASSED!

!testRun: #TerniLapilliTests #test18 stamp: 'fr 10/31/2020 17:13:42'!
PASSED!

!testRun: #TerniLapilliTests #test19 stamp: 'fr 10/31/2020 17:13:42'!
PASSED!

!testRun: #TerniLapilliTests #test20 stamp: 'fr 10/31/2020 17:13:42'!
PASSED!

!testRun: #TerniLapilliTests #test21 stamp: 'fr 10/31/2020 17:13:42'!
PASSED!

!testRun: #TerniLapilliTests #test22 stamp: 'fr 10/31/2020 17:13:42'!
PASSED!

!testRun: #TerniLapilliTests #test24 stamp: 'fr 10/31/2020 17:13:42'!
PASSED!

!testRun: #TerniLapilliTests #test25 stamp: 'fr 10/31/2020 17:13:42'!
PASSED!

!testRun: #TerniLapilliTests #test26 stamp: 'fr 10/31/2020 17:13:42'!
PASSED!

!testRun: #TerniLapilliTests #test27 stamp: 'fr 10/31/2020 17:13:42'!
PASSED!

!testRun: #TerniLapilliTests #test28 stamp: 'fr 10/31/2020 17:13:42'!
PASSED!

!testRun: #TerniLapilliTests #test29 stamp: 'fr 10/31/2020 17:13:42'!
PASSED!

!testRun: #TerniLapilliTests #test30 stamp: 'fr 10/31/2020 17:13:42'!
PASSED!

!testRun: #TerniLapilliTests #test31 stamp: 'fr 10/31/2020 17:13:42'!
PASSED!

!testRun: #TerniLapilliTests #test32 stamp: 'fr 10/31/2020 17:13:42'!
PASSED!

!testRun: #TerniLapilliTests #test33 stamp: 'fr 10/31/2020 17:13:42'!
PASSED!

!testRun: #TerniLapilliTests #test34 stamp: 'fr 10/31/2020 17:13:42'!
PASSED!
!TerniLapilliTests methodsFor: 'as yet unclassified' stamp: 'fr 10/31/2020 17:13:45'!
test35

	| terniLapilli |
	terniLapilli _ TerniLapilli new.
	terniLapilli putXAt: 2 @ 1.
	terniLapilli putOAt: 1 @ 3.
	terniLapilli putXAt: 2 @ 2.
	terniLapilli putOAt: 1 @ 2.
	terniLapilli putXAt: 2 @ 3.
	self assert: [ terniLapilli hasPlayerXWon ].! !
!TerniLapilliTests methodsFor: 'as yet unclassified' stamp: 'fr 10/31/2020 17:14:01' prior: 50876614!
test35

	| terniLapilli |
	terniLapilli _ TerniLapilli new.
	terniLapilli putXAt: 1 @ 1.
	terniLapilli putOAt: 1 @ 3.
	terniLapilli putXAt: 2 @ 1.
	terniLapilli putOAt: 1 @ 2.
	terniLapilli putXAt: 3 @ 1.
	self assert: [ terniLapilli hasPlayerXWon ].! !

!testRun: #TerniLapilliTests #test35 stamp: 'fr 10/31/2020 17:14:09'!
FAILURE!
!TerniLapilli methodsFor: 'game state' stamp: 'fr 10/31/2020 17:15:09' prior: 50876520!
hasPlayerXWon
	
	| randomPosition positionsX|
	positionsX _ self positionsFor: #X.
	randomPosition _ positionsX atRandom.
	
	^((positionsX allSatisfy: [:aPosition | aPosition x = randomPosition x]) and: [positionsX size = 3]) 
	  or: [(positionsX allSatisfy: [:aPosition | aPosition x = randomPosition y]) and: [positionsX size = 3]]! !

!testRun: #TerniLapilliTests #test35 stamp: 'fr 10/31/2020 17:15:11'!
FAILURE!
!TerniLapilli methodsFor: 'game state' stamp: 'fr 10/31/2020 17:15:33' prior: 50876640!
hasPlayerXWon
	
	| randomPosition positionsX|
	positionsX _ self positionsFor: #X.
	randomPosition _ positionsX atRandom.
	
	^((positionsX allSatisfy: [:aPosition | aPosition x = randomPosition x]) and: [positionsX size = 3]) 
	  or: [(positionsX allSatisfy: [:aPosition | aPosition y = randomPosition y]) and: [positionsX size = 3]]! !

!testRun: #TerniLapilliTests #test35 stamp: 'fr 10/31/2020 17:15:35'!
PASSED!

!testRun: #TerniLapilliTests #test01 stamp: 'fr 10/31/2020 17:15:35'!
PASSED!

!testRun: #TerniLapilliTests #test02 stamp: 'fr 10/31/2020 17:15:35'!
PASSED!

!testRun: #TerniLapilliTests #test03 stamp: 'fr 10/31/2020 17:15:35'!
PASSED!

!testRun: #TerniLapilliTests #test04 stamp: 'fr 10/31/2020 17:15:35'!
PASSED!

!testRun: #TerniLapilliTests #test05 stamp: 'fr 10/31/2020 17:15:35'!
PASSED!

!testRun: #TerniLapilliTests #test06 stamp: 'fr 10/31/2020 17:15:35'!
PASSED!

!testRun: #TerniLapilliTests #test07 stamp: 'fr 10/31/2020 17:15:35'!
PASSED!

!testRun: #TerniLapilliTests #test08 stamp: 'fr 10/31/2020 17:15:35'!
PASSED!

!testRun: #TerniLapilliTests #test09 stamp: 'fr 10/31/2020 17:15:35'!
PASSED!

!testRun: #TerniLapilliTests #test10 stamp: 'fr 10/31/2020 17:15:35'!
PASSED!

!testRun: #TerniLapilliTests #test11 stamp: 'fr 10/31/2020 17:15:35'!
PASSED!

!testRun: #TerniLapilliTests #test12 stamp: 'fr 10/31/2020 17:15:35'!
PASSED!

!testRun: #TerniLapilliTests #test13 stamp: 'fr 10/31/2020 17:15:35'!
PASSED!

!testRun: #TerniLapilliTests #test14 stamp: 'fr 10/31/2020 17:15:35'!
PASSED!

!testRun: #TerniLapilliTests #test15 stamp: 'fr 10/31/2020 17:15:35'!
PASSED!

!testRun: #TerniLapilliTests #test16 stamp: 'fr 10/31/2020 17:15:35'!
PASSED!

!testRun: #TerniLapilliTests #test17 stamp: 'fr 10/31/2020 17:15:35'!
PASSED!

!testRun: #TerniLapilliTests #test18 stamp: 'fr 10/31/2020 17:15:35'!
PASSED!

!testRun: #TerniLapilliTests #test19 stamp: 'fr 10/31/2020 17:15:35'!
PASSED!

!testRun: #TerniLapilliTests #test20 stamp: 'fr 10/31/2020 17:15:35'!
PASSED!

!testRun: #TerniLapilliTests #test21 stamp: 'fr 10/31/2020 17:15:35'!
PASSED!

!testRun: #TerniLapilliTests #test22 stamp: 'fr 10/31/2020 17:15:35'!
PASSED!

!testRun: #TerniLapilliTests #test24 stamp: 'fr 10/31/2020 17:15:35'!
PASSED!

!testRun: #TerniLapilliTests #test25 stamp: 'fr 10/31/2020 17:15:35'!
PASSED!

!testRun: #TerniLapilliTests #test26 stamp: 'fr 10/31/2020 17:15:35'!
PASSED!

!testRun: #TerniLapilliTests #test27 stamp: 'fr 10/31/2020 17:15:35'!
PASSED!

!testRun: #TerniLapilliTests #test28 stamp: 'fr 10/31/2020 17:15:35'!
PASSED!

!testRun: #TerniLapilliTests #test29 stamp: 'fr 10/31/2020 17:15:35'!
PASSED!

!testRun: #TerniLapilliTests #test30 stamp: 'fr 10/31/2020 17:15:35'!
PASSED!

!testRun: #TerniLapilliTests #test31 stamp: 'fr 10/31/2020 17:15:35'!
PASSED!

!testRun: #TerniLapilliTests #test32 stamp: 'fr 10/31/2020 17:15:35'!
PASSED!

!testRun: #TerniLapilliTests #test33 stamp: 'fr 10/31/2020 17:15:35'!
PASSED!

!testRun: #TerniLapilliTests #test34 stamp: 'fr 10/31/2020 17:15:35'!
PASSED!

!testRun: #TerniLapilliTests #test35 stamp: 'fr 10/31/2020 17:15:35'!
PASSED!
!TerniLapilliTests methodsFor: 'as yet unclassified' stamp: 'fr 10/31/2020 17:15:43'!
test36

	| terniLapilli |
	terniLapilli _ TerniLapilli new.
	terniLapilli putXAt: 1 @ 1.
	terniLapilli putOAt: 1 @ 3.
	terniLapilli putXAt: 2 @ 1.
	terniLapilli putOAt: 1 @ 2.
	terniLapilli putXAt: 3 @ 1.
	self assert: [ terniLapilli hasPlayerXWon ].! !
!TerniLapilliTests methodsFor: 'as yet unclassified' stamp: 'fr 10/31/2020 17:16:30' prior: 50876756!
test36

	| terniLapilli |
	terniLapilli _ TerniLapilli new.
	terniLapilli putXAt: 1 @ 1.
	terniLapilli putOAt: 1 @ 3.
	terniLapilli putXAt: 2 @ 2.
	terniLapilli putOAt: 1 @ 2.
	terniLapilli putXAt: 3 @ 3.
	self assert: [ terniLapilli hasPlayerXWon ].! !

!testRun: #TerniLapilliTests #test36 stamp: 'fr 10/31/2020 17:16:36'!
FAILURE!
!TerniLapilli methodsFor: 'game state' stamp: 'fr 10/31/2020 17:18:13' prior: 50876656!
hasPlayerXWon
	
	| randomPosition positionsX|
	positionsX _ self positionsFor: #X.
	randomPosition _ positionsX atRandom.
	
	^((positionsX allSatisfy: [:aPosition | aPosition x = randomPosition x]) and: [positionsX size = 3]) 
	  or: [(positionsX allSatisfy: [:aPosition | aPosition y = randomPosition y]) and: [positionsX size = 3]]
	  or: [positionsX allSatisfy: [:aPosition | aPosition y = aPosition x]]! !
!TerniLapilli methodsFor: 'game state' stamp: 'fr 10/31/2020 17:18:40' prior: 50876782!
hasPlayerXWon
	
	| randomPosition positionsX|
	positionsX _ self positionsFor: #X.
	randomPosition _ positionsX atRandom.
	
	^((positionsX allSatisfy: [:aPosition | aPosition x = randomPosition x]) and: [positionsX size = 3]) 
	  or: [(positionsX allSatisfy: [:aPosition | aPosition y = randomPosition y]) and: [positionsX size = 3]]
	  or: [(positionsX allSatisfy: [:aPosition | aPosition y = aPosition x]) and: [positionsX size = 3]]! !

!testRun: #TerniLapilliTests #test36 stamp: 'fr 10/31/2020 17:18:41'!
PASSED!

!testRun: #TerniLapilliTests #test01 stamp: 'fr 10/31/2020 17:18:41'!
PASSED!

!testRun: #TerniLapilliTests #test02 stamp: 'fr 10/31/2020 17:18:41'!
PASSED!

!testRun: #TerniLapilliTests #test03 stamp: 'fr 10/31/2020 17:18:41'!
PASSED!

!testRun: #TerniLapilliTests #test04 stamp: 'fr 10/31/2020 17:18:41'!
PASSED!

!testRun: #TerniLapilliTests #test05 stamp: 'fr 10/31/2020 17:18:41'!
PASSED!

!testRun: #TerniLapilliTests #test06 stamp: 'fr 10/31/2020 17:18:41'!
PASSED!

!testRun: #TerniLapilliTests #test07 stamp: 'fr 10/31/2020 17:18:41'!
PASSED!

!testRun: #TerniLapilliTests #test08 stamp: 'fr 10/31/2020 17:18:41'!
PASSED!

!testRun: #TerniLapilliTests #test09 stamp: 'fr 10/31/2020 17:18:41'!
PASSED!

!testRun: #TerniLapilliTests #test10 stamp: 'fr 10/31/2020 17:18:41'!
PASSED!

!testRun: #TerniLapilliTests #test11 stamp: 'fr 10/31/2020 17:18:41'!
PASSED!

!testRun: #TerniLapilliTests #test12 stamp: 'fr 10/31/2020 17:18:41'!
PASSED!

!testRun: #TerniLapilliTests #test13 stamp: 'fr 10/31/2020 17:18:41'!
PASSED!

!testRun: #TerniLapilliTests #test14 stamp: 'fr 10/31/2020 17:18:41'!
PASSED!

!testRun: #TerniLapilliTests #test15 stamp: 'fr 10/31/2020 17:18:41'!
PASSED!

!testRun: #TerniLapilliTests #test16 stamp: 'fr 10/31/2020 17:18:41'!
PASSED!

!testRun: #TerniLapilliTests #test17 stamp: 'fr 10/31/2020 17:18:41'!
PASSED!

!testRun: #TerniLapilliTests #test18 stamp: 'fr 10/31/2020 17:18:41'!
PASSED!

!testRun: #TerniLapilliTests #test19 stamp: 'fr 10/31/2020 17:18:41'!
PASSED!

!testRun: #TerniLapilliTests #test20 stamp: 'fr 10/31/2020 17:18:41'!
PASSED!

!testRun: #TerniLapilliTests #test21 stamp: 'fr 10/31/2020 17:18:41'!
PASSED!

!testRun: #TerniLapilliTests #test22 stamp: 'fr 10/31/2020 17:18:41'!
PASSED!

!testRun: #TerniLapilliTests #test24 stamp: 'fr 10/31/2020 17:18:41'!
PASSED!

!testRun: #TerniLapilliTests #test25 stamp: 'fr 10/31/2020 17:18:41'!
PASSED!

!testRun: #TerniLapilliTests #test26 stamp: 'fr 10/31/2020 17:18:41'!
PASSED!

!testRun: #TerniLapilliTests #test27 stamp: 'fr 10/31/2020 17:18:41'!
PASSED!

!testRun: #TerniLapilliTests #test28 stamp: 'fr 10/31/2020 17:18:41'!
PASSED!

!testRun: #TerniLapilliTests #test29 stamp: 'fr 10/31/2020 17:18:41'!
PASSED!

!testRun: #TerniLapilliTests #test30 stamp: 'fr 10/31/2020 17:18:41'!
PASSED!

!testRun: #TerniLapilliTests #test31 stamp: 'fr 10/31/2020 17:18:41'!
PASSED!

!testRun: #TerniLapilliTests #test32 stamp: 'fr 10/31/2020 17:18:41'!
PASSED!

!testRun: #TerniLapilliTests #test33 stamp: 'fr 10/31/2020 17:18:41'!
PASSED!

!testRun: #TerniLapilliTests #test34 stamp: 'fr 10/31/2020 17:18:41'!
PASSED!

!testRun: #TerniLapilliTests #test35 stamp: 'fr 10/31/2020 17:18:41'!
PASSED!

!testRun: #TerniLapilliTests #test36 stamp: 'fr 10/31/2020 17:18:41'!
PASSED!
!TerniLapilliTests methodsFor: 'as yet unclassified' stamp: 'fr 10/31/2020 17:18:45'!
test37

	| terniLapilli |
	terniLapilli _ TerniLapilli new.
	terniLapilli putXAt: 1 @ 1.
	terniLapilli putOAt: 1 @ 3.
	terniLapilli putXAt: 2 @ 2.
	terniLapilli putOAt: 1 @ 2.
	terniLapilli putXAt: 3 @ 3.
	self assert: [ terniLapilli hasPlayerXWon ].! !
!TerniLapilliTests methodsFor: 'as yet unclassified' stamp: 'fr 10/31/2020 17:18:52' prior: 50876904!
test37

	| terniLapilli |
	terniLapilli _ TerniLapilli new.
	terniLapilli putXAt: 1 @ 3.
	terniLapilli putOAt: 1 @ 1.
	terniLapilli putXAt: 2 @ 2.
	terniLapilli putOAt: 1 @ 2.
	terniLapilli putXAt: 3 @ 3.
	self assert: [ terniLapilli hasPlayerXWon ].! !
!TerniLapilliTests methodsFor: 'as yet unclassified' stamp: 'fr 10/31/2020 17:18:56' prior: 50876916!
test37

	| terniLapilli |
	terniLapilli _ TerniLapilli new.
	terniLapilli putXAt: 1 @ 3.
	terniLapilli putOAt: 1 @ 1.
	terniLapilli putXAt: 2 @ 2.
	terniLapilli putOAt: 1 @ 2.
	terniLapilli putXAt: 3 @ 1.
	self assert: [ terniLapilli hasPlayerXWon ].! !

!testRun: #TerniLapilliTests #test37 stamp: 'fr 10/31/2020 17:19:09'!
FAILURE!
!TerniLapilli methodsFor: 'game state' stamp: 'fr 10/31/2020 17:20:19' prior: 50876798!
hasPlayerXWon
	
	| randomPosition positionsX|
	positionsX _ self positionsFor: #X.
	randomPosition _ positionsX atRandom.
	
	^((positionsX allSatisfy: [:aPosition | aPosition x = randomPosition x]) and: [positionsX size = 3]) 
	  or: [(positionsX allSatisfy: [:aPosition | aPosition y = randomPosition y]) and: [positionsX size = 3]]
	  or: [(positionsX allSatisfy: [:aPosition | aPosition y = aPosition x]) and: [positionsX size = 3]]
	  or: [(positionsX allSatisfy: [:aPosition | aPosition y + aPosition x = 4]) and: [positionsX size = 3]]! !

!testRun: #TerniLapilliTests #test37 stamp: 'fr 10/31/2020 17:20:22'!
PASSED!

!testRun: #TerniLapilliTests #test01 stamp: 'fr 10/31/2020 17:20:22'!
PASSED!

!testRun: #TerniLapilliTests #test02 stamp: 'fr 10/31/2020 17:20:22'!
PASSED!

!testRun: #TerniLapilliTests #test03 stamp: 'fr 10/31/2020 17:20:22'!
PASSED!

!testRun: #TerniLapilliTests #test04 stamp: 'fr 10/31/2020 17:20:22'!
PASSED!

!testRun: #TerniLapilliTests #test05 stamp: 'fr 10/31/2020 17:20:22'!
PASSED!

!testRun: #TerniLapilliTests #test06 stamp: 'fr 10/31/2020 17:20:22'!
PASSED!

!testRun: #TerniLapilliTests #test07 stamp: 'fr 10/31/2020 17:20:22'!
PASSED!

!testRun: #TerniLapilliTests #test08 stamp: 'fr 10/31/2020 17:20:22'!
PASSED!

!testRun: #TerniLapilliTests #test09 stamp: 'fr 10/31/2020 17:20:22'!
PASSED!

!testRun: #TerniLapilliTests #test10 stamp: 'fr 10/31/2020 17:20:22'!
PASSED!

!testRun: #TerniLapilliTests #test11 stamp: 'fr 10/31/2020 17:20:22'!
PASSED!

!testRun: #TerniLapilliTests #test12 stamp: 'fr 10/31/2020 17:20:22'!
PASSED!

!testRun: #TerniLapilliTests #test13 stamp: 'fr 10/31/2020 17:20:22'!
PASSED!

!testRun: #TerniLapilliTests #test14 stamp: 'fr 10/31/2020 17:20:22'!
PASSED!

!testRun: #TerniLapilliTests #test15 stamp: 'fr 10/31/2020 17:20:22'!
PASSED!

!testRun: #TerniLapilliTests #test16 stamp: 'fr 10/31/2020 17:20:22'!
PASSED!

!testRun: #TerniLapilliTests #test17 stamp: 'fr 10/31/2020 17:20:22'!
PASSED!

!testRun: #TerniLapilliTests #test18 stamp: 'fr 10/31/2020 17:20:22'!
PASSED!

!testRun: #TerniLapilliTests #test19 stamp: 'fr 10/31/2020 17:20:22'!
PASSED!

!testRun: #TerniLapilliTests #test20 stamp: 'fr 10/31/2020 17:20:22'!
PASSED!

!testRun: #TerniLapilliTests #test21 stamp: 'fr 10/31/2020 17:20:22'!
PASSED!

!testRun: #TerniLapilliTests #test22 stamp: 'fr 10/31/2020 17:20:22'!
PASSED!

!testRun: #TerniLapilliTests #test24 stamp: 'fr 10/31/2020 17:20:22'!
PASSED!

!testRun: #TerniLapilliTests #test25 stamp: 'fr 10/31/2020 17:20:22'!
PASSED!

!testRun: #TerniLapilliTests #test26 stamp: 'fr 10/31/2020 17:20:22'!
PASSED!

!testRun: #TerniLapilliTests #test27 stamp: 'fr 10/31/2020 17:20:22'!
PASSED!

!testRun: #TerniLapilliTests #test28 stamp: 'fr 10/31/2020 17:20:22'!
PASSED!

!testRun: #TerniLapilliTests #test29 stamp: 'fr 10/31/2020 17:20:22'!
PASSED!

!testRun: #TerniLapilliTests #test30 stamp: 'fr 10/31/2020 17:20:22'!
PASSED!

!testRun: #TerniLapilliTests #test31 stamp: 'fr 10/31/2020 17:20:22'!
PASSED!

!testRun: #TerniLapilliTests #test32 stamp: 'fr 10/31/2020 17:20:22'!
PASSED!

!testRun: #TerniLapilliTests #test33 stamp: 'fr 10/31/2020 17:20:22'!
PASSED!

!testRun: #TerniLapilliTests #test34 stamp: 'fr 10/31/2020 17:20:22'!
PASSED!

!testRun: #TerniLapilliTests #test35 stamp: 'fr 10/31/2020 17:20:22'!
PASSED!

!testRun: #TerniLapilliTests #test36 stamp: 'fr 10/31/2020 17:20:22'!
PASSED!

!testRun: #TerniLapilliTests #test37 stamp: 'fr 10/31/2020 17:20:22'!
PASSED!
!TerniLapilliTests methodsFor: 'as yet unclassified' stamp: 'fr 10/31/2020 17:21:01'!
test38

	| terniLapilli |
	terniLapilli _ TerniLapilli new.
	terniLapilli putXAt: 1 @ 3.
	terniLapilli putOAt: 1 @ 1.
	terniLapilli putXAt: 2 @ 2.
	terniLapilli putOAt: 1 @ 2.
	terniLapilli putXAt: 3 @ 1.
	self assert: [ terniLapilli hasPlayerXWon ].! !
!TerniLapilliTests methodsFor: 'as yet unclassified' stamp: 'fr 10/31/2020 17:21:57' prior: 50877054!
test38

	| terniLapilli |
	terniLapilli _ TerniLapilli new.
	terniLapilli putXAt: 1 @ 3.
	terniLapilli putOAt: 2 @ 1.
	terniLapilli putXAt: 3 @ 1.
	terniLapilli putOAt: 2 @ 2.
	terniLapilli putXAt: 3 @ 2.
	terniLapilli putOAt: 2 @ 3.
	self assert: [ terniLapilli hasPlayerXWon ].! !
!TerniLapilliTests methodsFor: 'as yet unclassified' stamp: 'fr 10/31/2020 17:22:00' prior: 50877066!
test38

	| terniLapilli |
	terniLapilli _ TerniLapilli new.
	terniLapilli putXAt: 1 @ 3.
	terniLapilli putOAt: 2 @ 1.
	terniLapilli putXAt: 3 @ 1.
	terniLapilli putOAt: 2 @ 2.
	terniLapilli putXAt: 3 @ 2.
	terniLapilli putOAt: 2 @ 3.
	self assert: [ terniLapilli hasPlayerOWon ].! !

!testRun: #TerniLapilliTests #test38 stamp: 'fr 10/31/2020 17:22:02'!
FAILURE!
!TerniLapilli methodsFor: 'game state' stamp: 'fr 10/31/2020 17:23:25' prior: 50876266!
hasPlayerOWon
	| randomPosition positionsO|
	positionsO _ self positionsFor: #O.
	randomPosition _ positionsO atRandom.
	
	^((positionsO allSatisfy: [:aPosition | aPosition x = randomPosition x]) and: [positionsO size = 3]) 
	  or: [(positionsO allSatisfy: [:aPosition | aPosition y = randomPosition y]) and: [positionsO size = 3]]
	  or: [(positionsO allSatisfy: [:aPosition | aPosition y = aPosition x]) and: [positionsO size = 3]]
	  or: [(positionsO allSatisfy: [:aPosition | aPosition y + aPosition x = 4]) and: [positionsO size = 3]]! !

!testRun: #TerniLapilliTests #test38 stamp: 'fr 10/31/2020 17:23:29'!
FAILURE!

!testRun: #TerniLapilliTests #test38 stamp: 'fr 10/31/2020 17:23:31'!
PASSED!

!testRun: #TerniLapilliTests #test01 stamp: 'fr 10/31/2020 17:23:31'!
PASSED!

!testRun: #TerniLapilliTests #test02 stamp: 'fr 10/31/2020 17:23:31'!
PASSED!

!testRun: #TerniLapilliTests #test03 stamp: 'fr 10/31/2020 17:23:31'!
PASSED!

!testRun: #TerniLapilliTests #test04 stamp: 'fr 10/31/2020 17:23:31'!
PASSED!

!testRun: #TerniLapilliTests #test05 stamp: 'fr 10/31/2020 17:23:31'!
PASSED!

!testRun: #TerniLapilliTests #test06 stamp: 'fr 10/31/2020 17:23:31'!
PASSED!

!testRun: #TerniLapilliTests #test07 stamp: 'fr 10/31/2020 17:23:31'!
PASSED!

!testRun: #TerniLapilliTests #test08 stamp: 'fr 10/31/2020 17:23:31'!
PASSED!

!testRun: #TerniLapilliTests #test09 stamp: 'fr 10/31/2020 17:23:31'!
PASSED!

!testRun: #TerniLapilliTests #test10 stamp: 'fr 10/31/2020 17:23:31'!
PASSED!

!testRun: #TerniLapilliTests #test11 stamp: 'fr 10/31/2020 17:23:31'!
PASSED!

!testRun: #TerniLapilliTests #test12 stamp: 'fr 10/31/2020 17:23:31'!
PASSED!

!testRun: #TerniLapilliTests #test13 stamp: 'fr 10/31/2020 17:23:31'!
PASSED!

!testRun: #TerniLapilliTests #test14 stamp: 'fr 10/31/2020 17:23:31'!
PASSED!

!testRun: #TerniLapilliTests #test15 stamp: 'fr 10/31/2020 17:23:31'!
PASSED!

!testRun: #TerniLapilliTests #test16 stamp: 'fr 10/31/2020 17:23:31'!
PASSED!

!testRun: #TerniLapilliTests #test17 stamp: 'fr 10/31/2020 17:23:31'!
PASSED!

!testRun: #TerniLapilliTests #test18 stamp: 'fr 10/31/2020 17:23:31'!
PASSED!

!testRun: #TerniLapilliTests #test19 stamp: 'fr 10/31/2020 17:23:31'!
PASSED!

!testRun: #TerniLapilliTests #test20 stamp: 'fr 10/31/2020 17:23:31'!
PASSED!

!testRun: #TerniLapilliTests #test21 stamp: 'fr 10/31/2020 17:23:31'!
PASSED!

!testRun: #TerniLapilliTests #test22 stamp: 'fr 10/31/2020 17:23:31'!
PASSED!

!testRun: #TerniLapilliTests #test24 stamp: 'fr 10/31/2020 17:23:31'!
PASSED!

!testRun: #TerniLapilliTests #test25 stamp: 'fr 10/31/2020 17:23:31'!
PASSED!

!testRun: #TerniLapilliTests #test26 stamp: 'fr 10/31/2020 17:23:31'!
PASSED!

!testRun: #TerniLapilliTests #test27 stamp: 'fr 10/31/2020 17:23:31'!
PASSED!

!testRun: #TerniLapilliTests #test28 stamp: 'fr 10/31/2020 17:23:31'!
PASSED!

!testRun: #TerniLapilliTests #test29 stamp: 'fr 10/31/2020 17:23:31'!
PASSED!

!testRun: #TerniLapilliTests #test30 stamp: 'fr 10/31/2020 17:23:31'!
PASSED!

!testRun: #TerniLapilliTests #test31 stamp: 'fr 10/31/2020 17:23:31'!
PASSED!

!testRun: #TerniLapilliTests #test32 stamp: 'fr 10/31/2020 17:23:31'!
PASSED!

!testRun: #TerniLapilliTests #test33 stamp: 'fr 10/31/2020 17:23:31'!
PASSED!

!testRun: #TerniLapilliTests #test34 stamp: 'fr 10/31/2020 17:23:31'!
PASSED!

!testRun: #TerniLapilliTests #test35 stamp: 'fr 10/31/2020 17:23:31'!
PASSED!

!testRun: #TerniLapilliTests #test36 stamp: 'fr 10/31/2020 17:23:31'!
PASSED!

!testRun: #TerniLapilliTests #test37 stamp: 'fr 10/31/2020 17:23:31'!
PASSED!

!testRun: #TerniLapilliTests #test38 stamp: 'fr 10/31/2020 17:23:31'!
PASSED!

----SNAPSHOT----(31 October 2020 17:23:46) CuisUniversity-4384.image priorSource: 17398058!

!testRun: #TerniLapilliTests #test01 stamp: 'fr 10/31/2020 17:24:03'!
PASSED!

!testRun: #TerniLapilliTests #test02 stamp: 'fr 10/31/2020 17:24:03'!
PASSED!

!testRun: #TerniLapilliTests #test03 stamp: 'fr 10/31/2020 17:24:03'!
PASSED!

!testRun: #TerniLapilliTests #test04 stamp: 'fr 10/31/2020 17:24:03'!
PASSED!

!testRun: #TerniLapilliTests #test05 stamp: 'fr 10/31/2020 17:24:03'!
PASSED!

!testRun: #TerniLapilliTests #test06 stamp: 'fr 10/31/2020 17:24:03'!
PASSED!

!testRun: #TerniLapilliTests #test07 stamp: 'fr 10/31/2020 17:24:03'!
PASSED!

!testRun: #TerniLapilliTests #test08 stamp: 'fr 10/31/2020 17:24:03'!
PASSED!

!testRun: #TerniLapilliTests #test09 stamp: 'fr 10/31/2020 17:24:03'!
PASSED!

!testRun: #TerniLapilliTests #test10 stamp: 'fr 10/31/2020 17:24:03'!
PASSED!

!testRun: #TerniLapilliTests #test11 stamp: 'fr 10/31/2020 17:24:03'!
PASSED!

!testRun: #TerniLapilliTests #test12 stamp: 'fr 10/31/2020 17:24:03'!
PASSED!

!testRun: #TerniLapilliTests #test13 stamp: 'fr 10/31/2020 17:24:03'!
PASSED!

!testRun: #TerniLapilliTests #test14 stamp: 'fr 10/31/2020 17:24:03'!
PASSED!

!testRun: #TerniLapilliTests #test15 stamp: 'fr 10/31/2020 17:24:03'!
PASSED!

!testRun: #TerniLapilliTests #test16 stamp: 'fr 10/31/2020 17:24:03'!
PASSED!

!testRun: #TerniLapilliTests #test17 stamp: 'fr 10/31/2020 17:24:03'!
PASSED!

!testRun: #TerniLapilliTests #test18 stamp: 'fr 10/31/2020 17:24:03'!
PASSED!

!testRun: #TerniLapilliTests #test19 stamp: 'fr 10/31/2020 17:24:03'!
PASSED!

!testRun: #TerniLapilliTests #test20 stamp: 'fr 10/31/2020 17:24:03'!
PASSED!

!testRun: #TerniLapilliTests #test21 stamp: 'fr 10/31/2020 17:24:03'!
PASSED!

!testRun: #TerniLapilliTests #test22 stamp: 'fr 10/31/2020 17:24:03'!
PASSED!

!testRun: #TerniLapilliTests #test24 stamp: 'fr 10/31/2020 17:24:03'!
PASSED!

!testRun: #TerniLapilliTests #test25 stamp: 'fr 10/31/2020 17:24:03'!
PASSED!

!testRun: #TerniLapilliTests #test26 stamp: 'fr 10/31/2020 17:24:03'!
PASSED!

!testRun: #TerniLapilliTests #test27 stamp: 'fr 10/31/2020 17:24:03'!
PASSED!

!testRun: #TerniLapilliTests #test28 stamp: 'fr 10/31/2020 17:24:03'!
PASSED!

!testRun: #TerniLapilliTests #test29 stamp: 'fr 10/31/2020 17:24:03'!
PASSED!

!testRun: #TerniLapilliTests #test30 stamp: 'fr 10/31/2020 17:24:03'!
PASSED!

!testRun: #TerniLapilliTests #test31 stamp: 'fr 10/31/2020 17:24:03'!
PASSED!

!testRun: #TerniLapilliTests #test32 stamp: 'fr 10/31/2020 17:24:03'!
PASSED!

!testRun: #TerniLapilliTests #test33 stamp: 'fr 10/31/2020 17:24:03'!
PASSED!

!testRun: #TerniLapilliTests #test34 stamp: 'fr 10/31/2020 17:24:03'!
PASSED!

!testRun: #TerniLapilliTests #test35 stamp: 'fr 10/31/2020 17:24:03'!
PASSED!

!testRun: #TerniLapilliTests #test36 stamp: 'fr 10/31/2020 17:24:03'!
PASSED!

!testRun: #TerniLapilliTests #test37 stamp: 'fr 10/31/2020 17:24:03'!
PASSED!

!testRun: #TerniLapilliTests #test38 stamp: 'fr 10/31/2020 17:24:03'!
PASSED!
!TerniLapilliTests methodsFor: 'as yet unclassified' stamp: 'fr 10/31/2020 17:27:49'!
test39

	| terniLapilli |
	terniLapilli _ TerniLapilli new.
	terniLapilli putXAt: 1 @ 3.
	terniLapilli putOAt: 2 @ 1.
	terniLapilli putXAt: 3 @ 1.
	terniLapilli putOAt: 2 @ 2.
	terniLapilli putXAt: 3 @ 2.
	terniLapilli putOAt: 2 @ 3.
	self assert: [ terniLapilli hasPlayerOWon ].! !
!TerniLapilliTests methodsFor: 'as yet unclassified' stamp: 'fr 10/31/2020 17:28:30' prior: 50877305!
test39

	| terniLapilli |
	terniLapilli _ TerniLapilli new.
	terniLapilli putXAt: 1 @ 1.
	terniLapilli putOAt: 2 @ 1.
	terniLapilli putXAt: 2 @ 1.
	terniLapilli putOAt: 2 @ 2.
	terniLapilli putXAt: 3 @ 1.
	terniLapilli putOAt: 2 @ 3.
	self assert: [ terniLapilli hasPlayerOWon ].! !
!TerniLapilliTests methodsFor: 'as yet unclassified' stamp: 'fr 10/31/2020 17:28:52' prior: 50877318!
test39

	| terniLapilli |
	terniLapilli _ TerniLapilli new.
	terniLapilli putXAt: 1 @ 1.
	terniLapilli putOAt: 2 @ 2.
	terniLapilli putXAt: 2 @ 1.
	terniLapilli putOAt: 2 @ 3.
	terniLapilli putXAt: 3 @ 1.
	terniLapilli putOAt: 3 @ 3.
	self assert: [ terniLapilli hasPlayerOWon ].! !
!TerniLapilliTests methodsFor: 'as yet unclassified' stamp: 'fr 10/31/2020 17:30:44' prior: 50877331!
test39

	| terniLapilli |
	terniLapilli _ TerniLapilli new.
	
	self should: [			terniLapilli putXAt: 1 @ 1.
				terniLapilli putOAt: 2 @ 2.
				terniLapilli putXAt: 2 @ 1.
				terniLapilli putOAt: 2 @ 3.
				terniLapilli putXAt: 3 @ 1.
				terniLapilli putOAt: 3 @ 3.]  
		raise: Error
		withMessageText: TerniLapilli canNotAddPieceAfterPlayerHasWonErrorMessage! !

!testRun: #TerniLapilliTests #test39 stamp: 'fr 10/31/2020 17:31:03'!
ERROR!

!testRun: #TerniLapilliTests #test39 stamp: 'fr 10/31/2020 17:31:19'!
ERROR!

!testRun: #TerniLapilliTests #test39 stamp: 'fr 10/31/2020 17:31:22'!
ERROR!
!TerniLapilli class methodsFor: 'error message descriptions' stamp: 'fr 10/31/2020 17:31:32'!
canNotAddPieceAfterPlayerHasWonErrorMessage
	self shouldBeImplemented.! !
!TerniLapilli class methodsFor: 'error message descriptions' stamp: 'fr 10/31/2020 17:31:48' prior: 50877366!
canNotAddPieceAfterPlayerHasWonErrorMessage
	
	^'Game is already over'! !

!testRun: #TerniLapilliTests #test39 stamp: 'fr 10/31/2020 17:31:51'!
FAILURE!
!TerniLapilli methodsFor: 'actions' stamp: 'fr 10/31/2020 17:33:12' prior: 50870877!
putOAt: aPosition 
	
	self hasPlayerXWon ifTrue: [self error: self class canNotAddPieceAfterPlayerHasWonErrorMessage].
	state putOAt: aPosition! !

!testRun: #TerniLapilliTests #test39 stamp: 'fr 10/31/2020 17:33:19'!
PASSED!

!testRun: #TerniLapilliTests #test01 stamp: 'fr 10/31/2020 17:33:19'!
PASSED!

!testRun: #TerniLapilliTests #test02 stamp: 'fr 10/31/2020 17:33:19'!
PASSED!

!testRun: #TerniLapilliTests #test03 stamp: 'fr 10/31/2020 17:33:19'!
FAILURE!

!testRun: #TerniLapilliTests #test04 stamp: 'fr 10/31/2020 17:33:19'!
PASSED!

!testRun: #TerniLapilliTests #test05 stamp: 'fr 10/31/2020 17:33:19'!
PASSED!

!testRun: #TerniLapilliTests #test06 stamp: 'fr 10/31/2020 17:33:19'!
PASSED!

!testRun: #TerniLapilliTests #test07 stamp: 'fr 10/31/2020 17:33:19'!
PASSED!

!testRun: #TerniLapilliTests #test08 stamp: 'fr 10/31/2020 17:33:19'!
PASSED!

!testRun: #TerniLapilliTests #test09 stamp: 'fr 10/31/2020 17:33:19'!
PASSED!

!testRun: #TerniLapilliTests #test10 stamp: 'fr 10/31/2020 17:33:19'!
PASSED!

!testRun: #TerniLapilliTests #test11 stamp: 'fr 10/31/2020 17:33:19'!
PASSED!

!testRun: #TerniLapilliTests #test12 stamp: 'fr 10/31/2020 17:33:19'!
PASSED!

!testRun: #TerniLapilliTests #test13 stamp: 'fr 10/31/2020 17:33:19'!
PASSED!

!testRun: #TerniLapilliTests #test14 stamp: 'fr 10/31/2020 17:33:20'!
PASSED!

!testRun: #TerniLapilliTests #test15 stamp: 'fr 10/31/2020 17:33:20'!
PASSED!

!testRun: #TerniLapilliTests #test16 stamp: 'fr 10/31/2020 17:33:20'!
PASSED!

!testRun: #TerniLapilliTests #test17 stamp: 'fr 10/31/2020 17:33:20'!
PASSED!

!testRun: #TerniLapilliTests #test18 stamp: 'fr 10/31/2020 17:33:20'!
PASSED!

!testRun: #TerniLapilliTests #test19 stamp: 'fr 10/31/2020 17:33:20'!
PASSED!

!testRun: #TerniLapilliTests #test20 stamp: 'fr 10/31/2020 17:33:20'!
PASSED!

!testRun: #TerniLapilliTests #test21 stamp: 'fr 10/31/2020 17:33:20'!
PASSED!

!testRun: #TerniLapilliTests #test22 stamp: 'fr 10/31/2020 17:33:20'!
PASSED!

!testRun: #TerniLapilliTests #test24 stamp: 'fr 10/31/2020 17:33:20'!
PASSED!

!testRun: #TerniLapilliTests #test25 stamp: 'fr 10/31/2020 17:33:20'!
PASSED!

!testRun: #TerniLapilliTests #test26 stamp: 'fr 10/31/2020 17:33:20'!
PASSED!

!testRun: #TerniLapilliTests #test27 stamp: 'fr 10/31/2020 17:33:20'!
PASSED!

!testRun: #TerniLapilliTests #test28 stamp: 'fr 10/31/2020 17:33:20'!
PASSED!

!testRun: #TerniLapilliTests #test29 stamp: 'fr 10/31/2020 17:33:20'!
PASSED!

!testRun: #TerniLapilliTests #test30 stamp: 'fr 10/31/2020 17:33:20'!
PASSED!

!testRun: #TerniLapilliTests #test31 stamp: 'fr 10/31/2020 17:33:20'!
PASSED!

!testRun: #TerniLapilliTests #test32 stamp: 'fr 10/31/2020 17:33:20'!
PASSED!

!testRun: #TerniLapilliTests #test33 stamp: 'fr 10/31/2020 17:33:20'!
PASSED!

!testRun: #TerniLapilliTests #test34 stamp: 'fr 10/31/2020 17:33:20'!
PASSED!

!testRun: #TerniLapilliTests #test35 stamp: 'fr 10/31/2020 17:33:20'!
PASSED!

!testRun: #TerniLapilliTests #test36 stamp: 'fr 10/31/2020 17:33:20'!
PASSED!

!testRun: #TerniLapilliTests #test37 stamp: 'fr 10/31/2020 17:33:20'!
PASSED!

!testRun: #TerniLapilliTests #test38 stamp: 'fr 10/31/2020 17:33:20'!
PASSED!

!testRun: #TerniLapilliTests #test39 stamp: 'fr 10/31/2020 17:33:20'!
PASSED!

!testRun: #TerniLapilliTests #test03 stamp: 'fr 10/31/2020 17:33:20'!
FAILURE!

!testRun: #TerniLapilliTests #test39 stamp: 'fr 10/31/2020 17:33:41'!
PASSED!

!testRun: #TerniLapilliTests #test01 stamp: 'fr 10/31/2020 17:33:41'!
PASSED!

!testRun: #TerniLapilliTests #test02 stamp: 'fr 10/31/2020 17:33:41'!
PASSED!

!testRun: #TerniLapilliTests #test03 stamp: 'fr 10/31/2020 17:33:41'!
FAILURE!

!testRun: #TerniLapilliTests #test04 stamp: 'fr 10/31/2020 17:33:41'!
PASSED!

!testRun: #TerniLapilliTests #test05 stamp: 'fr 10/31/2020 17:33:41'!
PASSED!

!testRun: #TerniLapilliTests #test06 stamp: 'fr 10/31/2020 17:33:41'!
PASSED!

!testRun: #TerniLapilliTests #test07 stamp: 'fr 10/31/2020 17:33:41'!
PASSED!

!testRun: #TerniLapilliTests #test08 stamp: 'fr 10/31/2020 17:33:41'!
PASSED!

!testRun: #TerniLapilliTests #test09 stamp: 'fr 10/31/2020 17:33:41'!
PASSED!

!testRun: #TerniLapilliTests #test10 stamp: 'fr 10/31/2020 17:33:41'!
PASSED!

!testRun: #TerniLapilliTests #test11 stamp: 'fr 10/31/2020 17:33:41'!
PASSED!

!testRun: #TerniLapilliTests #test12 stamp: 'fr 10/31/2020 17:33:41'!
PASSED!

!testRun: #TerniLapilliTests #test13 stamp: 'fr 10/31/2020 17:33:41'!
PASSED!

!testRun: #TerniLapilliTests #test14 stamp: 'fr 10/31/2020 17:33:41'!
PASSED!

!testRun: #TerniLapilliTests #test15 stamp: 'fr 10/31/2020 17:33:41'!
PASSED!

!testRun: #TerniLapilliTests #test16 stamp: 'fr 10/31/2020 17:33:41'!
PASSED!

!testRun: #TerniLapilliTests #test17 stamp: 'fr 10/31/2020 17:33:41'!
PASSED!

!testRun: #TerniLapilliTests #test18 stamp: 'fr 10/31/2020 17:33:41'!
PASSED!

!testRun: #TerniLapilliTests #test19 stamp: 'fr 10/31/2020 17:33:41'!
PASSED!

!testRun: #TerniLapilliTests #test20 stamp: 'fr 10/31/2020 17:33:41'!
PASSED!

!testRun: #TerniLapilliTests #test21 stamp: 'fr 10/31/2020 17:33:41'!
PASSED!

!testRun: #TerniLapilliTests #test22 stamp: 'fr 10/31/2020 17:33:41'!
PASSED!

!testRun: #TerniLapilliTests #test24 stamp: 'fr 10/31/2020 17:33:41'!
PASSED!

!testRun: #TerniLapilliTests #test25 stamp: 'fr 10/31/2020 17:33:41'!
PASSED!

!testRun: #TerniLapilliTests #test26 stamp: 'fr 10/31/2020 17:33:41'!
PASSED!

!testRun: #TerniLapilliTests #test27 stamp: 'fr 10/31/2020 17:33:41'!
PASSED!

!testRun: #TerniLapilliTests #test28 stamp: 'fr 10/31/2020 17:33:41'!
PASSED!

!testRun: #TerniLapilliTests #test29 stamp: 'fr 10/31/2020 17:33:41'!
PASSED!

!testRun: #TerniLapilliTests #test30 stamp: 'fr 10/31/2020 17:33:41'!
PASSED!

!testRun: #TerniLapilliTests #test31 stamp: 'fr 10/31/2020 17:33:41'!
PASSED!

!testRun: #TerniLapilliTests #test32 stamp: 'fr 10/31/2020 17:33:41'!
PASSED!

!testRun: #TerniLapilliTests #test33 stamp: 'fr 10/31/2020 17:33:41'!
PASSED!

!testRun: #TerniLapilliTests #test34 stamp: 'fr 10/31/2020 17:33:41'!
PASSED!

!testRun: #TerniLapilliTests #test35 stamp: 'fr 10/31/2020 17:33:41'!
PASSED!

!testRun: #TerniLapilliTests #test36 stamp: 'fr 10/31/2020 17:33:41'!
PASSED!

!testRun: #TerniLapilliTests #test37 stamp: 'fr 10/31/2020 17:33:41'!
PASSED!

!testRun: #TerniLapilliTests #test38 stamp: 'fr 10/31/2020 17:33:41'!
PASSED!

!testRun: #TerniLapilliTests #test39 stamp: 'fr 10/31/2020 17:33:41'!
PASSED!

!testRun: #TerniLapilliTests #test03 stamp: 'fr 10/31/2020 17:33:41'!
FAILURE!

!testRun: #TerniLapilliTests #test03 stamp: 'fr 10/31/2020 17:34:06'!
FAILURE!

!testRun: #TerniLapilliTests #test03 stamp: 'fr 10/31/2020 17:34:06'!
FAILURE!

!testRun: #TerniLapilliTests #test03 stamp: 'fr 10/31/2020 17:34:44'!
FAILURE!

!testRun: #TerniLapilliTests #test03 stamp: 'fr 10/31/2020 17:35:48'!
FAILURE!
!TerniLapilli methodsFor: 'game state' stamp: 'fr 10/31/2020 17:36:56' prior: 50876942!
hasPlayerXWon
	
	| randomPosition positionsX|
	positionsX _ self positionsFor: #X.
	
	^positionsX isEmpty not or: [
	randomPosition _ positionsX atRandom.((positionsX allSatisfy: [:aPosition | aPosition x = randomPosition x]) and: [positionsX size = 3]) 
	  or: [(positionsX allSatisfy: [:aPosition | aPosition y = randomPosition y]) and: [positionsX size = 3]]
	  or: [(positionsX allSatisfy: [:aPosition | aPosition y = aPosition x]) and: [positionsX size = 3]]]
	  or: [(positionsX allSatisfy: [:aPosition | aPosition y + aPosition x = 4]) and: [positionsX size = 3]]! !

!testRun: #TerniLapilliTests #test03 stamp: 'fr 10/31/2020 17:37:01'!
FAILURE!

!testRun: #TerniLapilliTests #test03 stamp: 'fr 10/31/2020 17:37:06'!
FAILURE!
!TerniLapilli methodsFor: 'game state' stamp: 'fr 10/31/2020 17:20:19' prior: 50877595!
hasPlayerXWon
	
	| randomPosition positionsX|
	positionsX _ self positionsFor: #X.
	randomPosition _ positionsX atRandom.
	
	^((positionsX allSatisfy: [:aPosition | aPosition x = randomPosition x]) and: [positionsX size = 3]) 
	  or: [(positionsX allSatisfy: [:aPosition | aPosition y = randomPosition y]) and: [positionsX size = 3]]
	  or: [(positionsX allSatisfy: [:aPosition | aPosition y = aPosition x]) and: [positionsX size = 3]]
	  or: [(positionsX allSatisfy: [:aPosition | aPosition y + aPosition x = 4]) and: [positionsX size = 3]]! !
!TerniLapilli methodsFor: 'game state' stamp: 'fr 10/31/2020 17:20:19' prior: 50877621!
hasPlayerXWon
	
	| randomPosition positionsX|
	positionsX _ self positionsFor: #X.
	randomPosition _ positionsX atRandom.
	
	^((positionsX allSatisfy: [:aPosition | aPosition x = randomPosition x]) and: [positionsX size = 3]) 
	  or: [(positionsX allSatisfy: [:aPosition | aPosition y = randomPosition y]) and: [positionsX size = 3]]
	  or: [(positionsX allSatisfy: [:aPosition | aPosition y = aPosition x]) and: [positionsX size = 3]]
	  or: [(positionsX allSatisfy: [:aPosition | aPosition y + aPosition x = 4]) and: [positionsX size = 3]]! !
!TerniLapilli methodsFor: 'game state' stamp: 'fr 10/31/2020 17:20:19' prior: 50877641!
hasPlayerXWon
	
	| randomPosition positionsX|
	positionsX _ self positionsFor: #X.
	randomPosition _ positionsX atRandom.
	
	^((positionsX allSatisfy: [:aPosition | aPosition x = randomPosition x]) and: [positionsX size = 3]) 
	  or: [(positionsX allSatisfy: [:aPosition | aPosition y = randomPosition y]) and: [positionsX size = 3]]
	  or: [(positionsX allSatisfy: [:aPosition | aPosition y = aPosition x]) and: [positionsX size = 3]]
	  or: [(positionsX allSatisfy: [:aPosition | aPosition y + aPosition x = 4]) and: [positionsX size = 3]]! !

!testRun: #TerniLapilliTests #test03 stamp: 'fr 10/31/2020 17:39:23'!
FAILURE!

!testRun: #TerniLapilliTests #test03 stamp: 'fr 10/31/2020 17:39:23'!
FAILURE!
!TerniLapilli methodsFor: 'game state' stamp: 'fr 10/31/2020 17:40:52' prior: 50877661!
hasPlayerXWon
	
	| randomPosition positionsX|
	positionsX _ self positionsFor: #X.
	positionsX isEmpty ifFalse: [
	randomPosition _ positionsX atRandom.
	^((positionsX allSatisfy: [:aPosition | aPosition x = randomPosition x]) and: [positionsX size = 3]) 
	  or: [(positionsX allSatisfy: [:aPosition | aPosition y = randomPosition y]) and: [positionsX size = 3]]
	  or: [(positionsX allSatisfy: [:aPosition | aPosition y = aPosition x]) and: [positionsX size = 3]]
	  or: [(positionsX allSatisfy: [:aPosition | aPosition y + aPosition x = 4]) and: [positionsX size = 3]]
	] ifTrue: [^false]! !

!testRun: #TerniLapilliTests #test03 stamp: 'fr 10/31/2020 17:40:53'!
PASSED!

!testRun: #TerniLapilliTests #test03 stamp: 'fr 10/31/2020 17:40:55'!
PASSED!

!testRun: #TerniLapilliTests #test01 stamp: 'fr 10/31/2020 17:40:55'!
PASSED!

!testRun: #TerniLapilliTests #test02 stamp: 'fr 10/31/2020 17:40:55'!
PASSED!

!testRun: #TerniLapilliTests #test03 stamp: 'fr 10/31/2020 17:40:55'!
PASSED!

!testRun: #TerniLapilliTests #test04 stamp: 'fr 10/31/2020 17:40:55'!
PASSED!

!testRun: #TerniLapilliTests #test05 stamp: 'fr 10/31/2020 17:40:55'!
PASSED!

!testRun: #TerniLapilliTests #test06 stamp: 'fr 10/31/2020 17:40:55'!
PASSED!

!testRun: #TerniLapilliTests #test07 stamp: 'fr 10/31/2020 17:40:55'!
PASSED!

!testRun: #TerniLapilliTests #test08 stamp: 'fr 10/31/2020 17:40:55'!
PASSED!

!testRun: #TerniLapilliTests #test09 stamp: 'fr 10/31/2020 17:40:55'!
PASSED!

!testRun: #TerniLapilliTests #test10 stamp: 'fr 10/31/2020 17:40:55'!
PASSED!

!testRun: #TerniLapilliTests #test11 stamp: 'fr 10/31/2020 17:40:55'!
PASSED!

!testRun: #TerniLapilliTests #test12 stamp: 'fr 10/31/2020 17:40:55'!
PASSED!

!testRun: #TerniLapilliTests #test13 stamp: 'fr 10/31/2020 17:40:55'!
PASSED!

!testRun: #TerniLapilliTests #test14 stamp: 'fr 10/31/2020 17:40:55'!
PASSED!

!testRun: #TerniLapilliTests #test15 stamp: 'fr 10/31/2020 17:40:55'!
PASSED!

!testRun: #TerniLapilliTests #test16 stamp: 'fr 10/31/2020 17:40:55'!
PASSED!

!testRun: #TerniLapilliTests #test17 stamp: 'fr 10/31/2020 17:40:55'!
PASSED!

!testRun: #TerniLapilliTests #test18 stamp: 'fr 10/31/2020 17:40:55'!
PASSED!

!testRun: #TerniLapilliTests #test19 stamp: 'fr 10/31/2020 17:40:55'!
PASSED!

!testRun: #TerniLapilliTests #test20 stamp: 'fr 10/31/2020 17:40:55'!
PASSED!

!testRun: #TerniLapilliTests #test21 stamp: 'fr 10/31/2020 17:40:55'!
PASSED!

!testRun: #TerniLapilliTests #test22 stamp: 'fr 10/31/2020 17:40:55'!
PASSED!

!testRun: #TerniLapilliTests #test24 stamp: 'fr 10/31/2020 17:40:55'!
PASSED!

!testRun: #TerniLapilliTests #test25 stamp: 'fr 10/31/2020 17:40:55'!
PASSED!

!testRun: #TerniLapilliTests #test26 stamp: 'fr 10/31/2020 17:40:55'!
PASSED!

!testRun: #TerniLapilliTests #test27 stamp: 'fr 10/31/2020 17:40:55'!
PASSED!

!testRun: #TerniLapilliTests #test28 stamp: 'fr 10/31/2020 17:40:55'!
PASSED!

!testRun: #TerniLapilliTests #test29 stamp: 'fr 10/31/2020 17:40:55'!
PASSED!

!testRun: #TerniLapilliTests #test30 stamp: 'fr 10/31/2020 17:40:55'!
PASSED!

!testRun: #TerniLapilliTests #test31 stamp: 'fr 10/31/2020 17:40:55'!
PASSED!

!testRun: #TerniLapilliTests #test32 stamp: 'fr 10/31/2020 17:40:55'!
PASSED!

!testRun: #TerniLapilliTests #test33 stamp: 'fr 10/31/2020 17:40:55'!
PASSED!

!testRun: #TerniLapilliTests #test34 stamp: 'fr 10/31/2020 17:40:55'!
PASSED!

!testRun: #TerniLapilliTests #test35 stamp: 'fr 10/31/2020 17:40:55'!
PASSED!

!testRun: #TerniLapilliTests #test36 stamp: 'fr 10/31/2020 17:40:55'!
PASSED!

!testRun: #TerniLapilliTests #test37 stamp: 'fr 10/31/2020 17:40:55'!
PASSED!

!testRun: #TerniLapilliTests #test38 stamp: 'fr 10/31/2020 17:40:55'!
PASSED!

!testRun: #TerniLapilliTests #test39 stamp: 'fr 10/31/2020 17:40:55'!
PASSED!

----SNAPSHOT----(31 October 2020 17:41:18) CuisUniversity-4384.image priorSource: 17457896!
!TerniLapilliTests methodsFor: 'as yet unclassified' stamp: 'fr 10/31/2020 17:49:06' prior: 50877344!
test39

	| terniLapilli |
	terniLapilli _ TerniLapilli new.
	
	self should: [			terniLapilli putXAt: 1 @ 1.
				terniLapilli putOAt: 1 @ 2.
				terniLapilli putXAt: 2 @ 1.
				terniLapilli putOAt: 2 @ 2.
				terniLapilli putXAt: 2 @ 3.
				terniLapilli putOAt: 3 @ 2.]  
		raise: Error
		withMessageText: TerniLapilli canNotAddPieceAfterPlayerHasWonErrorMessage! !
!TerniLapilliTests methodsFor: 'as yet unclassified' stamp: 'fr 10/31/2020 17:49:33' prior: 50877810!
test39

	| terniLapilli |
	terniLapilli _ TerniLapilli new.
	
	self should: [			terniLapilli putXAt: 1 @ 1.
				terniLapilli putOAt: 1 @ 2.
				terniLapilli putXAt: 2 @ 1.
				terniLapilli putOAt: 2 @ 2.
				terniLapilli putXAt: 2 @ 3.
				terniLapilli putOAt: 3 @ 2.
				terniLapilli moveXFrom: 2@3 to: 3@3.]  
		raise: Error
		withMessageText: TerniLapilli canNotAddPieceAfterPlayerHasWonErrorMessage! !
!TerniLapilliTests methodsFor: 'as yet unclassified' stamp: 'fr 10/31/2020 17:49:45' prior: 50877825!
test39

	| terniLapilli |
	terniLapilli _ TerniLapilli new.
	
	self should: [			terniLapilli putXAt: 1 @ 1.
				terniLapilli putOAt: 1 @ 2.
				terniLapilli putXAt: 2 @ 1.
				terniLapilli putOAt: 2 @ 2.
				terniLapilli putXAt: 2 @ 3.
				terniLapilli putOAt: 3 @ 2.
				terniLapilli moveXFrom: 2@3 to: 3@3.]  
		raise: Error
		withMessageText: TerniLapilli canNotMoveAPieceAfterPlayerHasWonErrorMessage! !
!TerniLapilliTests methodsFor: 'as yet unclassified' stamp: 'fr 10/31/2020 17:49:54' prior: 50877841!
test39

	| terniLapilli |
	terniLapilli _ TerniLapilli new.
	
	self should: [			terniLapilli putXAt: 1 @ 1.
				terniLapilli putOAt: 1 @ 2.
				terniLapilli putXAt: 2 @ 1.
				terniLapilli putOAt: 2 @ 2.
				terniLapilli putXAt: 2 @ 3.
				terniLapilli putOAt: 3 @ 2.
				terniLapilli moveXFrom: 2@3 to: 3@3.]  
		raise: Error
		withMessageText: TerniLapilli canNotMoveAPieceAfterPlayerHasWonErrorDescription! !
!TerniLapilli class methodsFor: 'error message descriptions' stamp: 'fr 10/31/2020 17:50:20'!
canNotAddAPieceAfterPlayerHasWonErrorDescription
	
	^'Game is already over'! !
!TerniLapilli methodsFor: 'as yet unclassified' stamp: 'fr 10/31/2020 17:50:20' prior: 50877380!
putOAt: aPosition 
	
	self hasPlayerXWon ifTrue: [self error: self class canNotAddAPieceAfterPlayerHasWonErrorDescription].
	state putOAt: aPosition! !

!methodRemoval: TerniLapilli class #canNotAddPieceAfterPlayerHasWonErrorMessage stamp: 'fr 10/31/2020 17:50:20'!
canNotAddPieceAfterPlayerHasWonErrorMessage
	
	^'Game is already over'!
!TerniLapilliTests methodsFor: 'as yet unclassified' stamp: 'fr 10/31/2020 17:30:44' prior: 50877857!
test39

	| terniLapilli |
	terniLapilli _ TerniLapilli new.
	
	self should: [			terniLapilli putXAt: 1 @ 1.
				terniLapilli putOAt: 2 @ 2.
				terniLapilli putXAt: 2 @ 1.
				terniLapilli putOAt: 2 @ 3.
				terniLapilli putXAt: 3 @ 1.
				terniLapilli putOAt: 3 @ 3.]  
		raise: Error
		withMessageText: TerniLapilli canNotAddPieceAfterPlayerHasWonErrorMessage! !
!TerniLapilliTests methodsFor: 'as yet unclassified' stamp: 'fr 10/31/2020 17:51:20' prior: 50877893!
test39

	| terniLapilli |
	terniLapilli _ TerniLapilli new.
	
	self should: [			terniLapilli putXAt: 1 @ 1.
				terniLapilli putOAt: 2 @ 2.
				terniLapilli putXAt: 2 @ 1.
				terniLapilli putOAt: 2 @ 3.
				terniLapilli putXAt: 3 @ 1.
				terniLapilli putOAt: 3 @ 3.]  
		raise: Error
		withMessageText: TerniLapilli canNotAddAPieceAfterPlayerHasWonErrorDescription ! !

!testRun: #TerniLapilliTests #test39 stamp: 'fr 10/31/2020 17:51:21'!
PASSED!

!testRun: #TerniLapilliTests #test01 stamp: 'fr 10/31/2020 17:51:21'!
PASSED!

!testRun: #TerniLapilliTests #test02 stamp: 'fr 10/31/2020 17:51:21'!
PASSED!

!testRun: #TerniLapilliTests #test03 stamp: 'fr 10/31/2020 17:51:21'!
PASSED!

!testRun: #TerniLapilliTests #test04 stamp: 'fr 10/31/2020 17:51:21'!
PASSED!

!testRun: #TerniLapilliTests #test05 stamp: 'fr 10/31/2020 17:51:21'!
PASSED!

!testRun: #TerniLapilliTests #test06 stamp: 'fr 10/31/2020 17:51:21'!
PASSED!

!testRun: #TerniLapilliTests #test07 stamp: 'fr 10/31/2020 17:51:21'!
PASSED!

!testRun: #TerniLapilliTests #test08 stamp: 'fr 10/31/2020 17:51:21'!
PASSED!

!testRun: #TerniLapilliTests #test09 stamp: 'fr 10/31/2020 17:51:21'!
PASSED!

!testRun: #TerniLapilliTests #test10 stamp: 'fr 10/31/2020 17:51:21'!
PASSED!

!testRun: #TerniLapilliTests #test11 stamp: 'fr 10/31/2020 17:51:21'!
PASSED!

!testRun: #TerniLapilliTests #test12 stamp: 'fr 10/31/2020 17:51:21'!
PASSED!

!testRun: #TerniLapilliTests #test13 stamp: 'fr 10/31/2020 17:51:21'!
PASSED!

!testRun: #TerniLapilliTests #test14 stamp: 'fr 10/31/2020 17:51:21'!
PASSED!

!testRun: #TerniLapilliTests #test15 stamp: 'fr 10/31/2020 17:51:21'!
PASSED!

!testRun: #TerniLapilliTests #test16 stamp: 'fr 10/31/2020 17:51:21'!
PASSED!

!testRun: #TerniLapilliTests #test17 stamp: 'fr 10/31/2020 17:51:21'!
PASSED!

!testRun: #TerniLapilliTests #test18 stamp: 'fr 10/31/2020 17:51:21'!
PASSED!

!testRun: #TerniLapilliTests #test19 stamp: 'fr 10/31/2020 17:51:21'!
PASSED!

!testRun: #TerniLapilliTests #test20 stamp: 'fr 10/31/2020 17:51:21'!
PASSED!

!testRun: #TerniLapilliTests #test21 stamp: 'fr 10/31/2020 17:51:21'!
PASSED!

!testRun: #TerniLapilliTests #test22 stamp: 'fr 10/31/2020 17:51:21'!
PASSED!

!testRun: #TerniLapilliTests #test24 stamp: 'fr 10/31/2020 17:51:21'!
PASSED!

!testRun: #TerniLapilliTests #test25 stamp: 'fr 10/31/2020 17:51:21'!
PASSED!

!testRun: #TerniLapilliTests #test26 stamp: 'fr 10/31/2020 17:51:21'!
PASSED!

!testRun: #TerniLapilliTests #test27 stamp: 'fr 10/31/2020 17:51:21'!
PASSED!

!testRun: #TerniLapilliTests #test28 stamp: 'fr 10/31/2020 17:51:21'!
PASSED!

!testRun: #TerniLapilliTests #test29 stamp: 'fr 10/31/2020 17:51:21'!
PASSED!

!testRun: #TerniLapilliTests #test30 stamp: 'fr 10/31/2020 17:51:22'!
PASSED!

!testRun: #TerniLapilliTests #test31 stamp: 'fr 10/31/2020 17:51:22'!
PASSED!

!testRun: #TerniLapilliTests #test32 stamp: 'fr 10/31/2020 17:51:22'!
PASSED!

!testRun: #TerniLapilliTests #test33 stamp: 'fr 10/31/2020 17:51:22'!
PASSED!

!testRun: #TerniLapilliTests #test34 stamp: 'fr 10/31/2020 17:51:22'!
PASSED!

!testRun: #TerniLapilliTests #test35 stamp: 'fr 10/31/2020 17:51:22'!
PASSED!

!testRun: #TerniLapilliTests #test36 stamp: 'fr 10/31/2020 17:51:22'!
PASSED!

!testRun: #TerniLapilliTests #test37 stamp: 'fr 10/31/2020 17:51:22'!
PASSED!

!testRun: #TerniLapilliTests #test38 stamp: 'fr 10/31/2020 17:51:22'!
PASSED!

!testRun: #TerniLapilliTests #test39 stamp: 'fr 10/31/2020 17:51:22'!
PASSED!
!TerniLapilliTests methodsFor: 'as yet unclassified' stamp: 'fr 10/31/2020 17:51:25'!
test40

	| terniLapilli |
	terniLapilli _ TerniLapilli new.
	
	self should: [			terniLapilli putXAt: 1 @ 1.
				terniLapilli putOAt: 2 @ 2.
				terniLapilli putXAt: 2 @ 1.
				terniLapilli putOAt: 2 @ 3.
				terniLapilli putXAt: 3 @ 1.
				terniLapilli putOAt: 3 @ 3.]  
		raise: Error
		withMessageText: TerniLapilli canNotAddAPieceAfterPlayerHasWonErrorDescription ! !
!TerniLapilliTests methodsFor: 'as yet unclassified' stamp: 'fr 10/31/2020 17:51:31' prior: 50878019!
test40 

	| terniLapilli |
	terniLapilli _ TerniLapilli new.
	
	self should: [			terniLapilli putXAt: 1 @ 1.
				terniLapilli putOAt: 1 @ 2.
				terniLapilli putXAt: 2 @ 1.
				terniLapilli putOAt: 2 @ 2.
				terniLapilli putXAt: 2 @ 3.
				terniLapilli putOAt: 3 @ 2.
				terniLapilli moveXFrom: 2@3 to: 3@3.]  
		raise: Error
		withMessageText: TerniLapilli canNotMoveAPieceAfterPlayerHasWonErrorDescription! !

!testRun: #TerniLapilliTests #test40 stamp: 'fr 10/31/2020 17:51:36'!
ERROR!
!TerniLapilli class methodsFor: 'error message descriptions' stamp: 'fr 10/31/2020 17:51:47'!
canNotMoveAPieceAfterPlayerHasWonErrorDescription
	self shouldBeImplemented.! !
!TerniLapilli class methodsFor: 'error message descriptions' stamp: 'fr 10/31/2020 17:52:11' prior: 50878053!
canNotMoveAPieceAfterPlayerHasWonErrorDescription
	
	^'Can not move a piece after game is over'! !

!testRun: #TerniLapilliTests #test40 stamp: 'fr 10/31/2020 17:52:26'!
FAILURE!
!TerniLapilli methodsFor: 'actions' stamp: 'fr 10/31/2020 17:53:42' prior: 50875485!
safePutXAt: aPosition 
	
	self hasPlayerOWon ifTrue: [self error: self class canNotAddAPieceAfterPlayerHasWonErrorDescription].	
	self failIfPositionOutOfBounds: aPosition.
	self failIfPositionAlreadyHoldsAPiece: aPosition.
	(self positionsFor: #X) add: aPosition.
	state _ TerniLapilliState isFor: self! !
!TerniLapilli methodsFor: 'actions' stamp: 'fr 10/31/2020 17:53:57' prior: 50878068!
safePutXAt: aPosition 
	
	self hasPlayerOWon ifTrue: [self error: self class canNotMoveAPieceAfterPlayerHasWonErrorDescription ].	
	self failIfPositionOutOfBounds: aPosition.
	self failIfPositionAlreadyHoldsAPiece: aPosition.
	(self positionsFor: #X) add: aPosition.
	state _ TerniLapilliState isFor: self! !

!testRun: #TerniLapilliTests #test40 stamp: 'fr 10/31/2020 17:53:58'!
PASSED!

!testRun: #TerniLapilliTests #test01 stamp: 'fr 10/31/2020 17:53:58'!
ERROR!

!testRun: #TerniLapilliTests #test02 stamp: 'fr 10/31/2020 17:53:58'!
ERROR!

!testRun: #TerniLapilliTests #test03 stamp: 'fr 10/31/2020 17:53:58'!
PASSED!

!testRun: #TerniLapilliTests #test04 stamp: 'fr 10/31/2020 17:53:58'!
FAILURE!

!testRun: #TerniLapilliTests #test05 stamp: 'fr 10/31/2020 17:53:58'!
ERROR!

!testRun: #TerniLapilliTests #test06 stamp: 'fr 10/31/2020 17:53:58'!
ERROR!

!testRun: #TerniLapilliTests #test07 stamp: 'fr 10/31/2020 17:53:58'!
ERROR!

!testRun: #TerniLapilliTests #test08 stamp: 'fr 10/31/2020 17:53:58'!
ERROR!

!testRun: #TerniLapilliTests #test09 stamp: 'fr 10/31/2020 17:53:58'!
ERROR!

!testRun: #TerniLapilliTests #test10 stamp: 'fr 10/31/2020 17:53:58'!
ERROR!

!testRun: #TerniLapilliTests #test11 stamp: 'fr 10/31/2020 17:53:58'!
FAILURE!

!testRun: #TerniLapilliTests #test12 stamp: 'fr 10/31/2020 17:53:58'!
FAILURE!

!testRun: #TerniLapilliTests #test13 stamp: 'fr 10/31/2020 17:53:58'!
FAILURE!

!testRun: #TerniLapilliTests #test14 stamp: 'fr 10/31/2020 17:53:58'!
FAILURE!

!testRun: #TerniLapilliTests #test15 stamp: 'fr 10/31/2020 17:53:58'!
FAILURE!

!testRun: #TerniLapilliTests #test16 stamp: 'fr 10/31/2020 17:53:58'!
FAILURE!

!testRun: #TerniLapilliTests #test17 stamp: 'fr 10/31/2020 17:53:58'!
ERROR!

!testRun: #TerniLapilliTests #test18 stamp: 'fr 10/31/2020 17:53:58'!
ERROR!

!testRun: #TerniLapilliTests #test19 stamp: 'fr 10/31/2020 17:53:58'!
PASSED!

!testRun: #TerniLapilliTests #test20 stamp: 'fr 10/31/2020 17:53:58'!
FAILURE!

!testRun: #TerniLapilliTests #test21 stamp: 'fr 10/31/2020 17:53:58'!
FAILURE!

!testRun: #TerniLapilliTests #test22 stamp: 'fr 10/31/2020 17:53:58'!
FAILURE!

!testRun: #TerniLapilliTests #test24 stamp: 'fr 10/31/2020 17:53:58'!
FAILURE!

!testRun: #TerniLapilliTests #test25 stamp: 'fr 10/31/2020 17:53:58'!
FAILURE!

!testRun: #TerniLapilliTests #test26 stamp: 'fr 10/31/2020 17:53:58'!
FAILURE!

!testRun: #TerniLapilliTests #test27 stamp: 'fr 10/31/2020 17:53:58'!
FAILURE!

!testRun: #TerniLapilliTests #test28 stamp: 'fr 10/31/2020 17:53:58'!
FAILURE!

!testRun: #TerniLapilliTests #test29 stamp: 'fr 10/31/2020 17:53:58'!
FAILURE!

!testRun: #TerniLapilliTests #test30 stamp: 'fr 10/31/2020 17:53:58'!
FAILURE!

!testRun: #TerniLapilliTests #test31 stamp: 'fr 10/31/2020 17:53:58'!
FAILURE!

!testRun: #TerniLapilliTests #test32 stamp: 'fr 10/31/2020 17:53:58'!
ERROR!

!testRun: #TerniLapilliTests #test33 stamp: 'fr 10/31/2020 17:53:58'!
ERROR!

!testRun: #TerniLapilliTests #test34 stamp: 'fr 10/31/2020 17:53:58'!
ERROR!

!testRun: #TerniLapilliTests #test35 stamp: 'fr 10/31/2020 17:53:58'!
ERROR!

!testRun: #TerniLapilliTests #test36 stamp: 'fr 10/31/2020 17:53:58'!
ERROR!

!testRun: #TerniLapilliTests #test37 stamp: 'fr 10/31/2020 17:53:58'!
ERROR!

!testRun: #TerniLapilliTests #test38 stamp: 'fr 10/31/2020 17:53:58'!
ERROR!

!testRun: #TerniLapilliTests #test39 stamp: 'fr 10/31/2020 17:53:58'!
FAILURE!

!testRun: #TerniLapilliTests #test40 stamp: 'fr 10/31/2020 17:53:58'!
FAILURE!

!testRun: #TerniLapilliTests #test01 stamp: 'fr 10/31/2020 17:54:46'!
ERROR!

!testRun: #TerniLapilliTests #test01 stamp: 'fr 10/31/2020 17:54:46'!
ERROR!

!testRun: #TerniLapilliTests #test01 stamp: 'fr 10/31/2020 17:54:52'!
ERROR!

!testRun: #TerniLapilliTests #test01 stamp: 'fr 10/31/2020 17:54:52'!
ERROR!
!TerniLapilli methodsFor: 'game state' stamp: 'fr 10/31/2020 17:55:49' prior: 50877094!
hasPlayerOWon
	| randomPosition positionsO|
	positionsO _ self positionsFor: #O.
	positionsO isEmpty ifFalse: [
	randomPosition _ positionsO atRandom.
	^((positionsO allSatisfy: [:aPosition | aPosition x = randomPosition x]) and: [positionsO size = 3]) 
	  or: [(positionsO allSatisfy: [:aPosition | aPosition y = randomPosition y]) and: [positionsO size = 3]]
	  or: [(positionsO allSatisfy: [:aPosition | aPosition y = aPosition x]) and: [positionsO size = 3]]
	  or: [(positionsO allSatisfy: [:aPosition | aPosition y + aPosition x = 4]) and: [positionsO size = 3]]
	] ifTrue: [^false]! !

!testRun: #TerniLapilliTests #test01 stamp: 'fr 10/31/2020 17:55:53'!
PASSED!

!testRun: #TerniLapilliTests #test01 stamp: 'fr 10/31/2020 17:55:56'!
PASSED!

!testRun: #TerniLapilliTests #test02 stamp: 'fr 10/31/2020 17:55:56'!
PASSED!

!testRun: #TerniLapilliTests #test03 stamp: 'fr 10/31/2020 17:55:56'!
PASSED!

!testRun: #TerniLapilliTests #test04 stamp: 'fr 10/31/2020 17:55:56'!
PASSED!

!testRun: #TerniLapilliTests #test05 stamp: 'fr 10/31/2020 17:55:56'!
PASSED!

!testRun: #TerniLapilliTests #test06 stamp: 'fr 10/31/2020 17:55:56'!
PASSED!

!testRun: #TerniLapilliTests #test07 stamp: 'fr 10/31/2020 17:55:56'!
PASSED!

!testRun: #TerniLapilliTests #test08 stamp: 'fr 10/31/2020 17:55:56'!
PASSED!

!testRun: #TerniLapilliTests #test09 stamp: 'fr 10/31/2020 17:55:56'!
PASSED!

!testRun: #TerniLapilliTests #test10 stamp: 'fr 10/31/2020 17:55:56'!
PASSED!

!testRun: #TerniLapilliTests #test11 stamp: 'fr 10/31/2020 17:55:56'!
PASSED!

!testRun: #TerniLapilliTests #test12 stamp: 'fr 10/31/2020 17:55:56'!
PASSED!

!testRun: #TerniLapilliTests #test13 stamp: 'fr 10/31/2020 17:55:56'!
PASSED!

!testRun: #TerniLapilliTests #test14 stamp: 'fr 10/31/2020 17:55:56'!
PASSED!

!testRun: #TerniLapilliTests #test15 stamp: 'fr 10/31/2020 17:55:56'!
FAILURE!

!testRun: #TerniLapilliTests #test16 stamp: 'fr 10/31/2020 17:55:56'!
PASSED!

!testRun: #TerniLapilliTests #test17 stamp: 'fr 10/31/2020 17:55:56'!
PASSED!

!testRun: #TerniLapilliTests #test18 stamp: 'fr 10/31/2020 17:55:56'!
PASSED!

!testRun: #TerniLapilliTests #test19 stamp: 'fr 10/31/2020 17:55:56'!
PASSED!

!testRun: #TerniLapilliTests #test20 stamp: 'fr 10/31/2020 17:55:56'!
PASSED!

!testRun: #TerniLapilliTests #test21 stamp: 'fr 10/31/2020 17:55:56'!
PASSED!

!testRun: #TerniLapilliTests #test22 stamp: 'fr 10/31/2020 17:55:56'!
PASSED!

!testRun: #TerniLapilliTests #test24 stamp: 'fr 10/31/2020 17:55:56'!
PASSED!

!testRun: #TerniLapilliTests #test25 stamp: 'fr 10/31/2020 17:55:56'!
PASSED!

!testRun: #TerniLapilliTests #test26 stamp: 'fr 10/31/2020 17:55:56'!
PASSED!

!testRun: #TerniLapilliTests #test27 stamp: 'fr 10/31/2020 17:55:56'!
PASSED!

!testRun: #TerniLapilliTests #test28 stamp: 'fr 10/31/2020 17:55:56'!
PASSED!

!testRun: #TerniLapilliTests #test29 stamp: 'fr 10/31/2020 17:55:56'!
PASSED!

!testRun: #TerniLapilliTests #test30 stamp: 'fr 10/31/2020 17:55:56'!
PASSED!

!testRun: #TerniLapilliTests #test31 stamp: 'fr 10/31/2020 17:55:56'!
PASSED!

!testRun: #TerniLapilliTests #test32 stamp: 'fr 10/31/2020 17:55:56'!
PASSED!

!testRun: #TerniLapilliTests #test33 stamp: 'fr 10/31/2020 17:55:56'!
PASSED!

!testRun: #TerniLapilliTests #test34 stamp: 'fr 10/31/2020 17:55:56'!
PASSED!

!testRun: #TerniLapilliTests #test35 stamp: 'fr 10/31/2020 17:55:56'!
PASSED!

!testRun: #TerniLapilliTests #test36 stamp: 'fr 10/31/2020 17:55:56'!
PASSED!

!testRun: #TerniLapilliTests #test37 stamp: 'fr 10/31/2020 17:55:56'!
PASSED!

!testRun: #TerniLapilliTests #test38 stamp: 'fr 10/31/2020 17:55:56'!
PASSED!

!testRun: #TerniLapilliTests #test39 stamp: 'fr 10/31/2020 17:55:56'!
PASSED!

!testRun: #TerniLapilliTests #test40 stamp: 'fr 10/31/2020 17:55:56'!
PASSED!

!testRun: #TerniLapilliTests #test15 stamp: 'fr 10/31/2020 17:55:56'!
FAILURE!
!TerniLapilliTests methodsFor: 'as yet unclassified' stamp: 'fr 10/31/2020 17:57:34' prior: 50871303!
test15

	| terniLapilli |
	terniLapilli _ TerniLapilli new.
	self
		should: [ 		terniLapilli putXAt: 1 @ 1.
				terniLapilli putOAt: 1 @ 3.
				terniLapilli putXAt: 2 @ 1.
				terniLapilli putOAt: 2 @ 2.
				terniLapilli putXAt: 2 @ 3.
				terniLapilli putOAt: 3 @ 2.
				terniLapilli moveXFrom: 1@1 to: 1@2.
				terniLapilli putOAt: 3 @ 3.
				 ]
		raise: Error
		withMessageText: TerniLapilli piecesLimitExceededErrorDescription.! !

!testRun: #TerniLapilliTests #test01 stamp: 'fr 10/31/2020 17:57:37'!
PASSED!

!testRun: #TerniLapilliTests #test02 stamp: 'fr 10/31/2020 17:57:37'!
PASSED!

!testRun: #TerniLapilliTests #test03 stamp: 'fr 10/31/2020 17:57:37'!
PASSED!

!testRun: #TerniLapilliTests #test04 stamp: 'fr 10/31/2020 17:57:37'!
PASSED!

!testRun: #TerniLapilliTests #test05 stamp: 'fr 10/31/2020 17:57:37'!
PASSED!

!testRun: #TerniLapilliTests #test06 stamp: 'fr 10/31/2020 17:57:37'!
PASSED!

!testRun: #TerniLapilliTests #test07 stamp: 'fr 10/31/2020 17:57:37'!
PASSED!

!testRun: #TerniLapilliTests #test08 stamp: 'fr 10/31/2020 17:57:37'!
PASSED!

!testRun: #TerniLapilliTests #test09 stamp: 'fr 10/31/2020 17:57:37'!
PASSED!

!testRun: #TerniLapilliTests #test10 stamp: 'fr 10/31/2020 17:57:37'!
PASSED!

!testRun: #TerniLapilliTests #test11 stamp: 'fr 10/31/2020 17:57:37'!
PASSED!

!testRun: #TerniLapilliTests #test12 stamp: 'fr 10/31/2020 17:57:37'!
PASSED!

!testRun: #TerniLapilliTests #test13 stamp: 'fr 10/31/2020 17:57:37'!
PASSED!

!testRun: #TerniLapilliTests #test14 stamp: 'fr 10/31/2020 17:57:37'!
PASSED!

!testRun: #TerniLapilliTests #test15 stamp: 'fr 10/31/2020 17:57:37'!
PASSED!

!testRun: #TerniLapilliTests #test16 stamp: 'fr 10/31/2020 17:57:37'!
PASSED!

!testRun: #TerniLapilliTests #test17 stamp: 'fr 10/31/2020 17:57:37'!
PASSED!

!testRun: #TerniLapilliTests #test18 stamp: 'fr 10/31/2020 17:57:37'!
PASSED!

!testRun: #TerniLapilliTests #test19 stamp: 'fr 10/31/2020 17:57:37'!
PASSED!

!testRun: #TerniLapilliTests #test20 stamp: 'fr 10/31/2020 17:57:37'!
PASSED!

!testRun: #TerniLapilliTests #test21 stamp: 'fr 10/31/2020 17:57:37'!
PASSED!

!testRun: #TerniLapilliTests #test22 stamp: 'fr 10/31/2020 17:57:37'!
PASSED!

!testRun: #TerniLapilliTests #test24 stamp: 'fr 10/31/2020 17:57:37'!
PASSED!

!testRun: #TerniLapilliTests #test25 stamp: 'fr 10/31/2020 17:57:37'!
PASSED!

!testRun: #TerniLapilliTests #test26 stamp: 'fr 10/31/2020 17:57:37'!
PASSED!

!testRun: #TerniLapilliTests #test27 stamp: 'fr 10/31/2020 17:57:37'!
PASSED!

!testRun: #TerniLapilliTests #test28 stamp: 'fr 10/31/2020 17:57:37'!
PASSED!

!testRun: #TerniLapilliTests #test29 stamp: 'fr 10/31/2020 17:57:37'!
PASSED!

!testRun: #TerniLapilliTests #test30 stamp: 'fr 10/31/2020 17:57:37'!
PASSED!

!testRun: #TerniLapilliTests #test31 stamp: 'fr 10/31/2020 17:57:37'!
PASSED!

!testRun: #TerniLapilliTests #test32 stamp: 'fr 10/31/2020 17:57:37'!
PASSED!

!testRun: #TerniLapilliTests #test33 stamp: 'fr 10/31/2020 17:57:37'!
PASSED!

!testRun: #TerniLapilliTests #test34 stamp: 'fr 10/31/2020 17:57:37'!
PASSED!

!testRun: #TerniLapilliTests #test35 stamp: 'fr 10/31/2020 17:57:37'!
PASSED!

!testRun: #TerniLapilliTests #test36 stamp: 'fr 10/31/2020 17:57:37'!
PASSED!

!testRun: #TerniLapilliTests #test37 stamp: 'fr 10/31/2020 17:57:37'!
PASSED!

!testRun: #TerniLapilliTests #test38 stamp: 'fr 10/31/2020 17:57:37'!
PASSED!

!testRun: #TerniLapilliTests #test39 stamp: 'fr 10/31/2020 17:57:37'!
PASSED!

!testRun: #TerniLapilliTests #test40 stamp: 'fr 10/31/2020 17:57:37'!
PASSED!
!TerniLapilliTests methodsFor: 'as yet unclassified' stamp: 'fr 10/31/2020 19:12:39'!
test41

	| terniLapilli |
	terniLapilli _ TerniLapilli new.
	
	self should: [			terniLapilli putXAt: 1 @ 1.
				terniLapilli putOAt: 1 @ 2.
				terniLapilli putXAt: 2 @ 1.
				terniLapilli putOAt: 2 @ 2.
				terniLapilli putXAt: 2 @ 3.
				terniLapilli putOAt: 3 @ 2.
				terniLapilli moveXFrom: 2@3 to: 3@3.]  
		raise: Error
		withMessageText: TerniLapilli canNotMoveAPieceAfterPlayerHasWonErrorDescription! !
!TerniLapilliTests methodsFor: 'as yet unclassified' stamp: 'fr 10/31/2020 19:14:12' prior: 50878438!
test41

	| terniLapilli |
	terniLapilli _ TerniLapilli new.
	
	self should: [			terniLapilli putXAt: 1 @ 1.
				terniLapilli putOAt: 1 @ 2.
				terniLapilli putXAt: 2 @ 1.
				terniLapilli putOAt: 2 @ 2.
				terniLapilli putXAt: 3 @ 2.
				terniLapilli putOAt: 3 @ 3.
				terniLapilli moveXFrom: 2@3 to: 3@3.]  
		raise: Error
		withMessageText: TerniLapilli canNotMoveAPieceAfterPlayerHasWonErrorDescription! !
!TerniLapilliTests methodsFor: 'as yet unclassified' stamp: 'fr 10/31/2020 19:15:05' prior: 50878455!
test41

	| terniLapilli |
	terniLapilli _ TerniLapilli new.
	
	self should: [			terniLapilli putXAt: 1 @ 1.
				terniLapilli putOAt: 1 @ 2.
				terniLapilli putXAt: 2 @ 1.
				terniLapilli putOAt: 2 @ 2.
				terniLapilli putXAt: 3 @ 2.
				terniLapilli putOAt: 3 @ 3.
				terniLapilli moveXFrom: 3@2 to: 3@1.
				terniLapilli moveOFrom: 3@3 to: 3@2.]  
		raise: Error
		withMessageText: TerniLapilli canNotMoveAPieceAfterPlayerHasWonErrorDescription! !

!testRun: #TerniLapilliTests #test41 stamp: 'fr 10/31/2020 19:15:06'!
FAILURE!

!testRun: #TerniLapilliTests #test41 stamp: 'fr 10/31/2020 19:15:30'!
FAILURE!

!testRun: #TerniLapilliTests #test41 stamp: 'fr 10/31/2020 19:15:37'!
FAILURE!
!TerniLapilli methodsFor: 'actions' stamp: 'fr 10/31/2020 19:15:49' prior: 50877879!
putOAt: aPosition 
	
	state putOAt: aPosition! !
!TerniLapilli methodsFor: 'actions' stamp: 'fr 10/31/2020 19:16:27' prior: 50875475!
safePutOAt: aPosition 

	self hasPlayerXWon ifTrue: [self error: self class canNotAddAPieceAfterPlayerHasWonErrorDescription].
	self failIfPositionOutOfBounds: aPosition.
	self failIfPositionAlreadyHoldsAPiece: aPosition.
	(self positionsFor: #O) add: aPosition.
	state _ TerniLapilliState isFor: self
	! !

!testRun: #TerniLapilliTests #test41 stamp: 'fr 10/31/2020 19:16:28'!
FAILURE!
!TerniLapilliTests methodsFor: 'as yet unclassified' stamp: 'fr 10/31/2020 19:17:13' prior: 50877908!
test39

	| terniLapilli |
	terniLapilli _ TerniLapilli new.
	
	self should: [			terniLapilli putXAt: 1 @ 1.
				terniLapilli putOAt: 2 @ 2.
				terniLapilli putXAt: 2 @ 1.
				terniLapilli putOAt: 2 @ 3.
				terniLapilli putXAt: 3 @ 1.
				terniLapilli putOAt: 3 @ 3.]  
		raise: Error
		withMessageText: TerniLapilli gameIsOverErrorDescription ! !
!TerniLapilli class methodsFor: 'error message descriptions' stamp: 'fr 10/31/2020 19:17:35'!
gameIsOverErrorDescription
	
	^'Game is already over'! !
!TerniLapilli methodsFor: 'as yet unclassified' stamp: 'fr 10/31/2020 19:17:35' prior: 50878502!
safePutOAt: aPosition 

	self hasPlayerXWon ifTrue: [self error: self class gameIsOverErrorDescription].
	self failIfPositionOutOfBounds: aPosition.
	self failIfPositionAlreadyHoldsAPiece: aPosition.
	(self positionsFor: #O) add: aPosition.
	state _ TerniLapilliState isFor: self
	! !

!methodRemoval: TerniLapilli class #canNotAddAPieceAfterPlayerHasWonErrorDescription stamp: 'fr 10/31/2020 19:17:35'!
canNotAddAPieceAfterPlayerHasWonErrorDescription
	
	^'Game is already over'!

!methodRemoval: TerniLapilli class #canNotMoveAPieceAfterPlayerHasWonErrorDescription stamp: 'fr 10/31/2020 19:17:56'!
canNotMoveAPieceAfterPlayerHasWonErrorDescription
	
	^'Can not move a piece after game is over'!
!TerniLapilli methodsFor: 'actions' stamp: 'fr 10/31/2020 19:18:08' prior: 50878081!
safePutXAt: aPosition 
	
	self hasPlayerOWon ifTrue: [self error: self class gameIsOverErrorDescription].	
	self failIfPositionOutOfBounds: aPosition.
	self failIfPositionAlreadyHoldsAPiece: aPosition.
	(self positionsFor: #X) add: aPosition.
	state _ TerniLapilliState isFor: self! !
!TerniLapilliTests methodsFor: 'as yet unclassified' stamp: 'fr 10/31/2020 19:18:13' prior: 50878034!
test40 

	| terniLapilli |
	terniLapilli _ TerniLapilli new.
	
	self should: [			terniLapilli putXAt: 1 @ 1.
				terniLapilli putOAt: 1 @ 2.
				terniLapilli putXAt: 2 @ 1.
				terniLapilli putOAt: 2 @ 2.
				terniLapilli putXAt: 2 @ 3.
				terniLapilli putOAt: 3 @ 2.
				terniLapilli moveXFrom: 2@3 to: 3@3.]  
		raise: Error
		withMessageText: TerniLapilli gameIsOverErrorDescription ! !
!TerniLapilliTests methodsFor: 'as yet unclassified' stamp: 'fr 10/31/2020 19:18:18' prior: 50878472!
test41

	| terniLapilli |
	terniLapilli _ TerniLapilli new.
	
	self should: [			terniLapilli putXAt: 1 @ 1.
				terniLapilli putOAt: 1 @ 2.
				terniLapilli putXAt: 2 @ 1.
				terniLapilli putOAt: 2 @ 2.
				terniLapilli putXAt: 3 @ 2.
				terniLapilli putOAt: 3 @ 3.
				terniLapilli moveXFrom: 3@2 to: 3@1.
				terniLapilli moveOFrom: 3@3 to: 3@2.]  
		raise: Error
		withMessageText: TerniLapilli gameIsOverErrorDescription ! !

!testRun: #TerniLapilliTests #test01 stamp: 'fr 10/31/2020 19:18:22'!
PASSED!

!testRun: #TerniLapilliTests #test02 stamp: 'fr 10/31/2020 19:18:22'!
PASSED!

!testRun: #TerniLapilliTests #test03 stamp: 'fr 10/31/2020 19:18:22'!
PASSED!

!testRun: #TerniLapilliTests #test04 stamp: 'fr 10/31/2020 19:18:22'!
PASSED!

!testRun: #TerniLapilliTests #test05 stamp: 'fr 10/31/2020 19:18:22'!
PASSED!

!testRun: #TerniLapilliTests #test06 stamp: 'fr 10/31/2020 19:18:22'!
PASSED!

!testRun: #TerniLapilliTests #test07 stamp: 'fr 10/31/2020 19:18:22'!
PASSED!

!testRun: #TerniLapilliTests #test08 stamp: 'fr 10/31/2020 19:18:22'!
PASSED!

!testRun: #TerniLapilliTests #test09 stamp: 'fr 10/31/2020 19:18:22'!
PASSED!

!testRun: #TerniLapilliTests #test10 stamp: 'fr 10/31/2020 19:18:22'!
PASSED!

!testRun: #TerniLapilliTests #test11 stamp: 'fr 10/31/2020 19:18:22'!
PASSED!

!testRun: #TerniLapilliTests #test12 stamp: 'fr 10/31/2020 19:18:22'!
PASSED!

!testRun: #TerniLapilliTests #test13 stamp: 'fr 10/31/2020 19:18:22'!
PASSED!

!testRun: #TerniLapilliTests #test14 stamp: 'fr 10/31/2020 19:18:22'!
PASSED!

!testRun: #TerniLapilliTests #test15 stamp: 'fr 10/31/2020 19:18:22'!
PASSED!

!testRun: #TerniLapilliTests #test16 stamp: 'fr 10/31/2020 19:18:22'!
PASSED!

!testRun: #TerniLapilliTests #test17 stamp: 'fr 10/31/2020 19:18:22'!
PASSED!

!testRun: #TerniLapilliTests #test18 stamp: 'fr 10/31/2020 19:18:22'!
PASSED!

!testRun: #TerniLapilliTests #test19 stamp: 'fr 10/31/2020 19:18:22'!
PASSED!

!testRun: #TerniLapilliTests #test20 stamp: 'fr 10/31/2020 19:18:22'!
PASSED!

!testRun: #TerniLapilliTests #test21 stamp: 'fr 10/31/2020 19:18:22'!
PASSED!

!testRun: #TerniLapilliTests #test22 stamp: 'fr 10/31/2020 19:18:22'!
PASSED!

!testRun: #TerniLapilliTests #test24 stamp: 'fr 10/31/2020 19:18:22'!
PASSED!

!testRun: #TerniLapilliTests #test25 stamp: 'fr 10/31/2020 19:18:22'!
PASSED!

!testRun: #TerniLapilliTests #test26 stamp: 'fr 10/31/2020 19:18:22'!
PASSED!

!testRun: #TerniLapilliTests #test27 stamp: 'fr 10/31/2020 19:18:22'!
PASSED!

!testRun: #TerniLapilliTests #test28 stamp: 'fr 10/31/2020 19:18:22'!
PASSED!

!testRun: #TerniLapilliTests #test29 stamp: 'fr 10/31/2020 19:18:22'!
PASSED!

!testRun: #TerniLapilliTests #test30 stamp: 'fr 10/31/2020 19:18:22'!
PASSED!

!testRun: #TerniLapilliTests #test31 stamp: 'fr 10/31/2020 19:18:22'!
PASSED!

!testRun: #TerniLapilliTests #test32 stamp: 'fr 10/31/2020 19:18:22'!
PASSED!

!testRun: #TerniLapilliTests #test33 stamp: 'fr 10/31/2020 19:18:22'!
PASSED!

!testRun: #TerniLapilliTests #test34 stamp: 'fr 10/31/2020 19:18:22'!
PASSED!

!testRun: #TerniLapilliTests #test35 stamp: 'fr 10/31/2020 19:18:22'!
PASSED!

!testRun: #TerniLapilliTests #test36 stamp: 'fr 10/31/2020 19:18:22'!
PASSED!

!testRun: #TerniLapilliTests #test37 stamp: 'fr 10/31/2020 19:18:22'!
PASSED!

!testRun: #TerniLapilliTests #test38 stamp: 'fr 10/31/2020 19:18:22'!
PASSED!

!testRun: #TerniLapilliTests #test39 stamp: 'fr 10/31/2020 19:18:22'!
PASSED!

!testRun: #TerniLapilliTests #test40 stamp: 'fr 10/31/2020 19:18:22'!
PASSED!

!testRun: #TerniLapilliTests #test41 stamp: 'fr 10/31/2020 19:18:22'!
PASSED!

TerniLapilliState subclass: #OWon
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TerniLapilli - Exercise'!

!classDefinition: #OWon category: 'TerniLapilli - Exercise' stamp: 'fr 10/31/2020 19:23:45'!
TerniLapilliState subclass: #OWon
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TerniLapilli - Exercise'!

TerniLapilliState subclass: #XWon
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TerniLapilli - Exercise'!

!classDefinition: #XWon category: 'TerniLapilli - Exercise' stamp: 'fr 10/31/2020 19:23:48'!
TerniLapilliState subclass: #XWon
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TerniLapilli - Exercise'!

----SNAPSHOT----(31 October 2020 19:47:36) CuisUniversity-4384.image priorSource: 17476969!

!testRun: #TerniLapilliTests #test01 stamp: 'fr 10/31/2020 20:15:09'!
PASSED!

!testRun: #TerniLapilliTests #test02 stamp: 'fr 10/31/2020 20:15:09'!
PASSED!

!testRun: #TerniLapilliTests #test03 stamp: 'fr 10/31/2020 20:15:09'!
PASSED!

!testRun: #TerniLapilliTests #test04 stamp: 'fr 10/31/2020 20:15:09'!
PASSED!

!testRun: #TerniLapilliTests #test05 stamp: 'fr 10/31/2020 20:15:09'!
PASSED!

!testRun: #TerniLapilliTests #test06 stamp: 'fr 10/31/2020 20:15:09'!
PASSED!

!testRun: #TerniLapilliTests #test07 stamp: 'fr 10/31/2020 20:15:09'!
PASSED!

!testRun: #TerniLapilliTests #test08 stamp: 'fr 10/31/2020 20:15:09'!
PASSED!

!testRun: #TerniLapilliTests #test09 stamp: 'fr 10/31/2020 20:15:09'!
PASSED!

!testRun: #TerniLapilliTests #test10 stamp: 'fr 10/31/2020 20:15:09'!
PASSED!

!testRun: #TerniLapilliTests #test11 stamp: 'fr 10/31/2020 20:15:09'!
PASSED!

!testRun: #TerniLapilliTests #test12 stamp: 'fr 10/31/2020 20:15:09'!
PASSED!

!testRun: #TerniLapilliTests #test13 stamp: 'fr 10/31/2020 20:15:09'!
PASSED!

!testRun: #TerniLapilliTests #test14 stamp: 'fr 10/31/2020 20:15:09'!
PASSED!

!testRun: #TerniLapilliTests #test15 stamp: 'fr 10/31/2020 20:15:09'!
PASSED!

!testRun: #TerniLapilliTests #test16 stamp: 'fr 10/31/2020 20:15:09'!
PASSED!

!testRun: #TerniLapilliTests #test17 stamp: 'fr 10/31/2020 20:15:09'!
PASSED!

!testRun: #TerniLapilliTests #test18 stamp: 'fr 10/31/2020 20:15:09'!
PASSED!

!testRun: #TerniLapilliTests #test19 stamp: 'fr 10/31/2020 20:15:09'!
PASSED!

!testRun: #TerniLapilliTests #test20 stamp: 'fr 10/31/2020 20:15:09'!
PASSED!

!testRun: #TerniLapilliTests #test21 stamp: 'fr 10/31/2020 20:15:09'!
PASSED!

!testRun: #TerniLapilliTests #test22 stamp: 'fr 10/31/2020 20:15:09'!
PASSED!

!testRun: #TerniLapilliTests #test24 stamp: 'fr 10/31/2020 20:15:09'!
PASSED!

!testRun: #TerniLapilliTests #test25 stamp: 'fr 10/31/2020 20:15:09'!
PASSED!

!testRun: #TerniLapilliTests #test26 stamp: 'fr 10/31/2020 20:15:09'!
PASSED!

!testRun: #TerniLapilliTests #test27 stamp: 'fr 10/31/2020 20:15:09'!
PASSED!

!testRun: #TerniLapilliTests #test28 stamp: 'fr 10/31/2020 20:15:09'!
PASSED!

!testRun: #TerniLapilliTests #test29 stamp: 'fr 10/31/2020 20:15:09'!
PASSED!

!testRun: #TerniLapilliTests #test30 stamp: 'fr 10/31/2020 20:15:09'!
PASSED!

!testRun: #TerniLapilliTests #test31 stamp: 'fr 10/31/2020 20:15:09'!
PASSED!

!testRun: #TerniLapilliTests #test32 stamp: 'fr 10/31/2020 20:15:09'!
PASSED!

!testRun: #TerniLapilliTests #test33 stamp: 'fr 10/31/2020 20:15:09'!
PASSED!

!testRun: #TerniLapilliTests #test34 stamp: 'fr 10/31/2020 20:15:09'!
PASSED!

!testRun: #TerniLapilliTests #test35 stamp: 'fr 10/31/2020 20:15:09'!
PASSED!

!testRun: #TerniLapilliTests #test36 stamp: 'fr 10/31/2020 20:15:09'!
PASSED!

!testRun: #TerniLapilliTests #test37 stamp: 'fr 10/31/2020 20:15:09'!
PASSED!

!testRun: #TerniLapilliTests #test38 stamp: 'fr 10/31/2020 20:15:09'!
PASSED!

!testRun: #TerniLapilliTests #test39 stamp: 'fr 10/31/2020 20:15:09'!
PASSED!

!testRun: #TerniLapilliTests #test40 stamp: 'fr 10/31/2020 20:15:09'!
PASSED!

!testRun: #TerniLapilliTests #test41 stamp: 'fr 10/31/2020 20:15:09'!
PASSED!
!XWon methodsFor: 'no messages' stamp: 'fr 10/31/2020 20:19:08' overrides: 50870596!
putXAt: aPosition

	terniLapilliGame ! !
!TerniLapilli methodsFor: 'actions' stamp: 'fr 10/31/2020 20:19:37'!
gameIsOver

	^ self error: self class gameIsOverErrorDescription! !
!TerniLapilli methodsFor: 'actions' stamp: 'fr 10/31/2020 20:19:37' prior: 50878537!
safePutOAt: aPosition 

	self hasPlayerXWon ifTrue: [self gameIsOver].
	self failIfPositionOutOfBounds: aPosition.
	self failIfPositionAlreadyHoldsAPiece: aPosition.
	(self positionsFor: #O) add: aPosition.
	state _ TerniLapilliState isFor: self
	! !
!TerniLapilli methodsFor: 'actions' stamp: 'fr 10/31/2020 20:19:50' prior: 50878562!
safePutXAt: aPosition 
	
	self hasPlayerOWon ifTrue: [self gameIsOver].	
	self failIfPositionOutOfBounds: aPosition.
	self failIfPositionAlreadyHoldsAPiece: aPosition.
	(self positionsFor: #X) add: aPosition.
	state _ TerniLapilliState isFor: self! !
!XWon methodsFor: 'as yet unclassified' stamp: 'fr 10/31/2020 20:20:06' prior: 50878832 overrides: 50870596!
putXAt: aPosition

	terniLapilliGame gameIsOver! !
!XWon methodsFor: 'as yet unclassified' stamp: 'fr 10/31/2020 20:20:11' overrides: 50870591!
putOAt: aPosition

	terniLapilliGame gameIsOver! !
!XWon methodsFor: 'as yet unclassified' stamp: 'fr 10/31/2020 20:20:31' overrides: 50874625!
moveXFrom: currentPosition to: newPosition

	terniLapilliGame gameIsOver! !
!XWon methodsFor: 'as yet unclassified' stamp: 'fr 10/31/2020 20:20:33' overrides: 50875040!
moveOFrom: currentPosition to: newPosition

	terniLapilliGame gameIsOver! !
!OWon methodsFor: 'no messages' stamp: 'fr 10/31/2020 20:21:56' overrides: 50870596!
putXAt: aPosition

	terniLapilliGame gameIsOver ! !
!OWon methodsFor: 'as yet unclassified' stamp: 'fr 10/31/2020 20:22:00' overrides: 50870591!
putOAt: aPosition

	terniLapilliGame gameIsOver ! !
!OWon methodsFor: 'as yet unclassified' stamp: 'fr 10/31/2020 20:22:15' overrides: 50874625!
moveXFrom: currentPosition to: newPosition

	terniLapilliGame gameIsOver ! !
!OWon methodsFor: 'as yet unclassified' stamp: 'fr 10/31/2020 20:22:17' overrides: 50875040!
moveOFrom: currentPosition to: newPosition

	terniLapilliGame gameIsOver ! !
!TerniLapilli methodsFor: 'game state' stamp: 'fr 10/31/2020 20:25:59' prior: 50878202!
hasPlayerOWon
	| randomPosition positionsO|
	positionsO _ self positionsFor: #O.
	positionsO isEmpty ifFalse: [
	randomPosition _ positionsO atRandom.
	^((positionsO allSatisfy: [:aPosition | aPosition x = randomPosition x]) and: [positionsO size = 3]) 
	  or: [(positionsO allSatisfy: [:aPosition | aPosition y = randomPosition y]) and: [positionsO size = 3]]
	  or: [(positionsO allSatisfy: [:aPosition | aPosition y = aPosition x]) and: [positionsO size = 3]]
	  or: [(positionsO allSatisfy: [:aPosition | aPosition y + aPosition x = 4]) and: [positionsO size = 3]]
	] ifTrue: [^false]! !
!OAdding class methodsFor: 'as yet unclassified' stamp: 'fr 10/31/2020 20:28:17' prior: 50875576!
canHandle: aTerniLapilli

	^(aTerniLapilli hasPiecesToAdd: #O) and: [aTerniLapilli isXsTurn] and: [aTerniLapilli hasPlayerOWon not] and: [aTerniLapilli hasPlayerXWon not]

	! !
!OMoving class methodsFor: 'as yet unclassified' stamp: 'fr 10/31/2020 20:28:55' prior: 50875583!
canHandle: aTerniLapilli

	^(aTerniLapilli hasPiecesToAdd: #O) not and: [aTerniLapilli isXsTurn] and: [aTerniLapilli hasPlayerOWon not] and: [aTerniLapilli hasPlayerXWon not]

	! !
!XAdding class methodsFor: 'as yet unclassified' stamp: 'fr 10/31/2020 20:29:06' prior: 50875590!
canHandle: aTerniLapilli

	^(aTerniLapilli hasPiecesToAdd: #X) and: [aTerniLapilli isOsTurn] and: [aTerniLapilli hasPlayerOWon not] and: [aTerniLapilli hasPlayerXWon not]

	! !
!XMoving class methodsFor: 'as yet unclassified' stamp: 'fr 10/31/2020 20:29:14' prior: 50875700!
canHandle: aTerniLapilli

	^(aTerniLapilli hasPiecesToAdd: #X) not and: [aTerniLapilli isOsTurn] and: [aTerniLapilli hasPlayerOWon not] and: [aTerniLapilli hasPlayerXWon not]

	! !
!OWon class methodsFor: 'no messages' stamp: 'fr 10/31/2020 20:29:39'!
canHandle: aTerniLapilli

	! !
!XWon class methodsFor: 'no messages' stamp: 'fr 10/31/2020 20:29:52'!
canHandle: aTerniLapilli

! !
!XWon class methodsFor: 'as yet unclassified' stamp: 'fr 10/31/2020 20:31:01' prior: 50878969!
canHandle: aTerniLapilli

	^aTerniLapilli hasPlayerXWon ! !
!OWon class methodsFor: 'as yet unclassified' stamp: 'fr 10/31/2020 20:31:13' prior: 50878965!
canHandle: aTerniLapilli

	^aTerniLapilli hasPlayerOWon 

	! !
!TerniLapilli methodsFor: 'actions' stamp: 'fr 10/31/2020 20:31:31' prior: 50878841!
safePutOAt: aPosition 

	self failIfPositionOutOfBounds: aPosition.
	self failIfPositionAlreadyHoldsAPiece: aPosition.
	(self positionsFor: #O) add: aPosition.
	state _ TerniLapilliState isFor: self
	! !
!TerniLapilli methodsFor: 'actions' stamp: 'fr 10/31/2020 20:31:36' prior: 50878852!
safePutXAt: aPosition 
	
	self failIfPositionOutOfBounds: aPosition.
	self failIfPositionAlreadyHoldsAPiece: aPosition.
	(self positionsFor: #X) add: aPosition.
	state _ TerniLapilliState isFor: self! !

!testRun: #TerniLapilliTests #test01 stamp: 'fr 10/31/2020 20:38:21'!
PASSED!

!testRun: #TerniLapilliTests #test02 stamp: 'fr 10/31/2020 20:38:21'!
PASSED!

!testRun: #TerniLapilliTests #test03 stamp: 'fr 10/31/2020 20:38:21'!
PASSED!

!testRun: #TerniLapilliTests #test04 stamp: 'fr 10/31/2020 20:38:21'!
PASSED!

!testRun: #TerniLapilliTests #test05 stamp: 'fr 10/31/2020 20:38:21'!
PASSED!

!testRun: #TerniLapilliTests #test06 stamp: 'fr 10/31/2020 20:38:21'!
PASSED!

!testRun: #TerniLapilliTests #test07 stamp: 'fr 10/31/2020 20:38:21'!
PASSED!

!testRun: #TerniLapilliTests #test08 stamp: 'fr 10/31/2020 20:38:21'!
PASSED!

!testRun: #TerniLapilliTests #test09 stamp: 'fr 10/31/2020 20:38:21'!
PASSED!

!testRun: #TerniLapilliTests #test10 stamp: 'fr 10/31/2020 20:38:21'!
PASSED!

!testRun: #TerniLapilliTests #test11 stamp: 'fr 10/31/2020 20:38:21'!
PASSED!

!testRun: #TerniLapilliTests #test12 stamp: 'fr 10/31/2020 20:38:21'!
PASSED!

!testRun: #TerniLapilliTests #test13 stamp: 'fr 10/31/2020 20:38:21'!
PASSED!

!testRun: #TerniLapilliTests #test14 stamp: 'fr 10/31/2020 20:38:21'!
PASSED!

!testRun: #TerniLapilliTests #test15 stamp: 'fr 10/31/2020 20:38:21'!
PASSED!

!testRun: #TerniLapilliTests #test16 stamp: 'fr 10/31/2020 20:38:21'!
PASSED!

!testRun: #TerniLapilliTests #test17 stamp: 'fr 10/31/2020 20:38:21'!
PASSED!

!testRun: #TerniLapilliTests #test18 stamp: 'fr 10/31/2020 20:38:21'!
PASSED!

!testRun: #TerniLapilliTests #test19 stamp: 'fr 10/31/2020 20:38:21'!
PASSED!

!testRun: #TerniLapilliTests #test20 stamp: 'fr 10/31/2020 20:38:21'!
PASSED!

!testRun: #TerniLapilliTests #test21 stamp: 'fr 10/31/2020 20:38:21'!
PASSED!

!testRun: #TerniLapilliTests #test22 stamp: 'fr 10/31/2020 20:38:21'!
PASSED!

!testRun: #TerniLapilliTests #test24 stamp: 'fr 10/31/2020 20:38:21'!
PASSED!

!testRun: #TerniLapilliTests #test25 stamp: 'fr 10/31/2020 20:38:21'!
PASSED!

!testRun: #TerniLapilliTests #test26 stamp: 'fr 10/31/2020 20:38:21'!
PASSED!

!testRun: #TerniLapilliTests #test27 stamp: 'fr 10/31/2020 20:38:21'!
PASSED!

!testRun: #TerniLapilliTests #test28 stamp: 'fr 10/31/2020 20:38:21'!
PASSED!

!testRun: #TerniLapilliTests #test29 stamp: 'fr 10/31/2020 20:38:21'!
PASSED!

!testRun: #TerniLapilliTests #test30 stamp: 'fr 10/31/2020 20:38:21'!
PASSED!

!testRun: #TerniLapilliTests #test31 stamp: 'fr 10/31/2020 20:38:21'!
PASSED!

!testRun: #TerniLapilliTests #test32 stamp: 'fr 10/31/2020 20:38:21'!
PASSED!

!testRun: #TerniLapilliTests #test33 stamp: 'fr 10/31/2020 20:38:21'!
PASSED!

!testRun: #TerniLapilliTests #test34 stamp: 'fr 10/31/2020 20:38:21'!
PASSED!

!testRun: #TerniLapilliTests #test35 stamp: 'fr 10/31/2020 20:38:21'!
PASSED!

!testRun: #TerniLapilliTests #test36 stamp: 'fr 10/31/2020 20:38:21'!
PASSED!

!testRun: #TerniLapilliTests #test37 stamp: 'fr 10/31/2020 20:38:21'!
PASSED!

!testRun: #TerniLapilliTests #test38 stamp: 'fr 10/31/2020 20:38:21'!
PASSED!

!testRun: #TerniLapilliTests #test39 stamp: 'fr 10/31/2020 20:38:21'!
PASSED!

!testRun: #TerniLapilliTests #test40 stamp: 'fr 10/31/2020 20:38:21'!
PASSED!

!testRun: #TerniLapilliTests #test41 stamp: 'fr 10/31/2020 20:38:21'!
PASSED!
!TerniLapilli methodsFor: 'game state' stamp: 'fr 10/31/2020 20:39:22'!
hasOWon
	| randomPosition positionsO|
	positionsO _ self positionsFor: #O.
	positionsO isEmpty ifFalse: [
	randomPosition _ positionsO atRandom.
	^((positionsO allSatisfy: [:aPosition | aPosition x = randomPosition x]) and: [positionsO size = 3]) 
	  or: [(positionsO allSatisfy: [:aPosition | aPosition y = randomPosition y]) and: [positionsO size = 3]]
	  or: [(positionsO allSatisfy: [:aPosition | aPosition y = aPosition x]) and: [positionsO size = 3]]
	  or: [(positionsO allSatisfy: [:aPosition | aPosition y + aPosition x = 4]) and: [positionsO size = 3]]
	] ifTrue: [^false]! !
!XAdding class methodsFor: 'as yet unclassified' stamp: 'fr 10/31/2020 20:39:22' prior: 50878948!
canHandle: aTerniLapilli

	^(aTerniLapilli hasPiecesToAdd: #X) and: [aTerniLapilli isOsTurn] and: [aTerniLapilli hasOWon not] and: [aTerniLapilli hasPlayerXWon not]

	! !
!TerniLapilliTests methodsFor: 'as yet unclassified' stamp: 'fr 10/31/2020 20:39:22' prior: 50876248!
test32

	| terniLapilli |
	terniLapilli _ TerniLapilli new.
	terniLapilli putXAt: 1 @ 1.
	terniLapilli putOAt: 2 @ 3.
	terniLapilli putXAt: 1 @ 2.
	self assert: [ terniLapilli hasPlayerXWon not and: [terniLapilli hasOWon not]].! !
!XMoving class methodsFor: 'as yet unclassified' stamp: 'fr 10/31/2020 20:39:22' prior: 50878957!
canHandle: aTerniLapilli

	^(aTerniLapilli hasPiecesToAdd: #X) not and: [aTerniLapilli isOsTurn] and: [aTerniLapilli hasOWon not] and: [aTerniLapilli hasPlayerXWon not]

	! !
!OAdding class methodsFor: 'as yet unclassified' stamp: 'fr 10/31/2020 20:39:22' prior: 50878930!
canHandle: aTerniLapilli

	^(aTerniLapilli hasPiecesToAdd: #O) and: [aTerniLapilli isXsTurn] and: [aTerniLapilli hasOWon not] and: [aTerniLapilli hasPlayerXWon not]

	! !
!OWon class methodsFor: 'as yet unclassified' stamp: 'fr 10/31/2020 20:39:22' prior: 50878978!
canHandle: aTerniLapilli

	^aTerniLapilli hasOWon 

	! !
!OMoving class methodsFor: 'as yet unclassified' stamp: 'fr 10/31/2020 20:39:22' prior: 50878939!
canHandle: aTerniLapilli

	^(aTerniLapilli hasPiecesToAdd: #O) not and: [aTerniLapilli isXsTurn] and: [aTerniLapilli hasOWon not] and: [aTerniLapilli hasPlayerXWon not]

	! !
!TerniLapilliTests methodsFor: 'as yet unclassified' stamp: 'fr 10/31/2020 20:39:22' prior: 50877079!
test38

	| terniLapilli |
	terniLapilli _ TerniLapilli new.
	terniLapilli putXAt: 1 @ 3.
	terniLapilli putOAt: 2 @ 1.
	terniLapilli putXAt: 3 @ 1.
	terniLapilli putOAt: 2 @ 2.
	terniLapilli putXAt: 3 @ 2.
	terniLapilli putOAt: 2 @ 3.
	self assert: [ terniLapilli hasOWon ].! !

!methodRemoval: TerniLapilli #hasPlayerOWon stamp: 'fr 10/31/2020 20:39:22'!
hasPlayerOWon
	| randomPosition positionsO|
	positionsO _ self positionsFor: #O.
	positionsO isEmpty ifFalse: [
	randomPosition _ positionsO atRandom.
	^((positionsO allSatisfy: [:aPosition | aPosition x = randomPosition x]) and: [positionsO size = 3]) 
	  or: [(positionsO allSatisfy: [:aPosition | aPosition y = randomPosition y]) and: [positionsO size = 3]]
	  or: [(positionsO allSatisfy: [:aPosition | aPosition y = aPosition x]) and: [positionsO size = 3]]
	  or: [(positionsO allSatisfy: [:aPosition | aPosition y + aPosition x = 4]) and: [positionsO size = 3]]
	] ifTrue: [^false]!

!testRun: #TerniLapilliTests #test01 stamp: 'fr 10/31/2020 20:39:24'!
PASSED!

!testRun: #TerniLapilliTests #test02 stamp: 'fr 10/31/2020 20:39:24'!
PASSED!

!testRun: #TerniLapilliTests #test03 stamp: 'fr 10/31/2020 20:39:24'!
PASSED!

!testRun: #TerniLapilliTests #test04 stamp: 'fr 10/31/2020 20:39:24'!
PASSED!

!testRun: #TerniLapilliTests #test05 stamp: 'fr 10/31/2020 20:39:24'!
PASSED!

!testRun: #TerniLapilliTests #test06 stamp: 'fr 10/31/2020 20:39:24'!
PASSED!

!testRun: #TerniLapilliTests #test07 stamp: 'fr 10/31/2020 20:39:24'!
PASSED!

!testRun: #TerniLapilliTests #test08 stamp: 'fr 10/31/2020 20:39:24'!
PASSED!

!testRun: #TerniLapilliTests #test09 stamp: 'fr 10/31/2020 20:39:24'!
PASSED!

!testRun: #TerniLapilliTests #test10 stamp: 'fr 10/31/2020 20:39:24'!
PASSED!

!testRun: #TerniLapilliTests #test11 stamp: 'fr 10/31/2020 20:39:24'!
PASSED!

!testRun: #TerniLapilliTests #test12 stamp: 'fr 10/31/2020 20:39:24'!
PASSED!

!testRun: #TerniLapilliTests #test13 stamp: 'fr 10/31/2020 20:39:24'!
PASSED!

!testRun: #TerniLapilliTests #test14 stamp: 'fr 10/31/2020 20:39:24'!
PASSED!

!testRun: #TerniLapilliTests #test15 stamp: 'fr 10/31/2020 20:39:24'!
PASSED!

!testRun: #TerniLapilliTests #test16 stamp: 'fr 10/31/2020 20:39:24'!
PASSED!

!testRun: #TerniLapilliTests #test17 stamp: 'fr 10/31/2020 20:39:24'!
PASSED!

!testRun: #TerniLapilliTests #test18 stamp: 'fr 10/31/2020 20:39:24'!
PASSED!

!testRun: #TerniLapilliTests #test19 stamp: 'fr 10/31/2020 20:39:24'!
PASSED!

!testRun: #TerniLapilliTests #test20 stamp: 'fr 10/31/2020 20:39:24'!
PASSED!

!testRun: #TerniLapilliTests #test21 stamp: 'fr 10/31/2020 20:39:24'!
PASSED!

!testRun: #TerniLapilliTests #test22 stamp: 'fr 10/31/2020 20:39:24'!
PASSED!

!testRun: #TerniLapilliTests #test24 stamp: 'fr 10/31/2020 20:39:24'!
PASSED!

!testRun: #TerniLapilliTests #test25 stamp: 'fr 10/31/2020 20:39:24'!
PASSED!

!testRun: #TerniLapilliTests #test26 stamp: 'fr 10/31/2020 20:39:24'!
PASSED!

!testRun: #TerniLapilliTests #test27 stamp: 'fr 10/31/2020 20:39:24'!
PASSED!

!testRun: #TerniLapilliTests #test28 stamp: 'fr 10/31/2020 20:39:24'!
PASSED!

!testRun: #TerniLapilliTests #test29 stamp: 'fr 10/31/2020 20:39:24'!
PASSED!

!testRun: #TerniLapilliTests #test30 stamp: 'fr 10/31/2020 20:39:24'!
PASSED!

!testRun: #TerniLapilliTests #test31 stamp: 'fr 10/31/2020 20:39:24'!
PASSED!

!testRun: #TerniLapilliTests #test32 stamp: 'fr 10/31/2020 20:39:24'!
PASSED!

!testRun: #TerniLapilliTests #test33 stamp: 'fr 10/31/2020 20:39:24'!
PASSED!

!testRun: #TerniLapilliTests #test34 stamp: 'fr 10/31/2020 20:39:24'!
PASSED!

!testRun: #TerniLapilliTests #test35 stamp: 'fr 10/31/2020 20:39:24'!
PASSED!

!testRun: #TerniLapilliTests #test36 stamp: 'fr 10/31/2020 20:39:24'!
PASSED!

!testRun: #TerniLapilliTests #test37 stamp: 'fr 10/31/2020 20:39:24'!
PASSED!

!testRun: #TerniLapilliTests #test38 stamp: 'fr 10/31/2020 20:39:24'!
PASSED!

!testRun: #TerniLapilliTests #test39 stamp: 'fr 10/31/2020 20:39:24'!
PASSED!

!testRun: #TerniLapilliTests #test40 stamp: 'fr 10/31/2020 20:39:24'!
PASSED!

!testRun: #TerniLapilliTests #test41 stamp: 'fr 10/31/2020 20:39:24'!
PASSED!
!TerniLapilli methodsFor: 'game state' stamp: 'fr 10/31/2020 20:42:58'!
hasXWon
	
	| randomPosition positionsX|
	positionsX _ self positionsFor: #X.
	positionsX isEmpty ifFalse: [
	randomPosition _ positionsX atRandom.
	^((positionsX allSatisfy: [:aPosition | aPosition x = randomPosition x]) and: [positionsX size = 3]) 
	  or: [(positionsX allSatisfy: [:aPosition | aPosition y = randomPosition y]) and: [positionsX size = 3]]
	  or: [(positionsX allSatisfy: [:aPosition | aPosition y = aPosition x]) and: [positionsX size = 3]]
	  or: [(positionsX allSatisfy: [:aPosition | aPosition y + aPosition x = 4]) and: [positionsX size = 3]]
	] ifTrue: [^false]! !
!XMoving class methodsFor: 'as yet unclassified' stamp: 'fr 10/31/2020 20:42:58' prior: 50879143!
canHandle: aTerniLapilli

	^(aTerniLapilli hasPiecesToAdd: #X) not and: [aTerniLapilli isOsTurn] and: [aTerniLapilli hasOWon not] and: [aTerniLapilli hasXWon not]

	! !
!TerniLapilliTests methodsFor: 'as yet unclassified' stamp: 'fr 10/31/2020 20:42:58' prior: 50876928!
test37

	| terniLapilli |
	terniLapilli _ TerniLapilli new.
	terniLapilli putXAt: 1 @ 3.
	terniLapilli putOAt: 1 @ 1.
	terniLapilli putXAt: 2 @ 2.
	terniLapilli putOAt: 1 @ 2.
	terniLapilli putXAt: 3 @ 1.
	self assert: [ terniLapilli hasXWon ].! !
!TerniLapilliTests methodsFor: 'as yet unclassified' stamp: 'fr 10/31/2020 20:42:58' prior: 50876626!
test35

	| terniLapilli |
	terniLapilli _ TerniLapilli new.
	terniLapilli putXAt: 1 @ 1.
	terniLapilli putOAt: 1 @ 3.
	terniLapilli putXAt: 2 @ 1.
	terniLapilli putOAt: 1 @ 2.
	terniLapilli putXAt: 3 @ 1.
	self assert: [ terniLapilli hasXWon ].! !
!TerniLapilliTests methodsFor: 'as yet unclassified' stamp: 'fr 10/31/2020 20:42:58' prior: 50879132!
test32

	| terniLapilli |
	terniLapilli _ TerniLapilli new.
	terniLapilli putXAt: 1 @ 1.
	terniLapilli putOAt: 2 @ 3.
	terniLapilli putXAt: 1 @ 2.
	self assert: [ terniLapilli hasXWon not and: [terniLapilli hasOWon not]].! !
!XAdding class methodsFor: 'as yet unclassified' stamp: 'fr 10/31/2020 20:42:58' prior: 50879123!
canHandle: aTerniLapilli

	^(aTerniLapilli hasPiecesToAdd: #X) and: [aTerniLapilli isOsTurn] and: [aTerniLapilli hasOWon not] and: [aTerniLapilli hasXWon not]

	! !
!TerniLapilliTests methodsFor: 'as yet unclassified' stamp: 'fr 10/31/2020 20:42:58' prior: 50876370!
test33

	| terniLapilli |
	terniLapilli _ TerniLapilli new.
	terniLapilli putXAt: 1 @ 1.
	terniLapilli putOAt: 2 @ 3.
	terniLapilli putXAt: 1 @ 2.
	terniLapilli putOAt: 2 @ 2.
	terniLapilli putXAt: 1 @ 3.
	self assert: [ terniLapilli hasXWon ].! !
!TerniLapilliTests methodsFor: 'as yet unclassified' stamp: 'fr 10/31/2020 20:42:58' prior: 50876768!
test36

	| terniLapilli |
	terniLapilli _ TerniLapilli new.
	terniLapilli putXAt: 1 @ 1.
	terniLapilli putOAt: 1 @ 3.
	terniLapilli putXAt: 2 @ 2.
	terniLapilli putOAt: 1 @ 2.
	terniLapilli putXAt: 3 @ 3.
	self assert: [ terniLapilli hasXWon ].! !
!OAdding class methodsFor: 'as yet unclassified' stamp: 'fr 10/31/2020 20:42:58' prior: 50879152!
canHandle: aTerniLapilli

	^(aTerniLapilli hasPiecesToAdd: #O) and: [aTerniLapilli isXsTurn] and: [aTerniLapilli hasOWon not] and: [aTerniLapilli hasXWon not]

	! !
!OMoving class methodsFor: 'as yet unclassified' stamp: 'fr 10/31/2020 20:42:58' prior: 50879166!
canHandle: aTerniLapilli

	^(aTerniLapilli hasPiecesToAdd: #O) not and: [aTerniLapilli isXsTurn] and: [aTerniLapilli hasOWon not] and: [aTerniLapilli hasXWon not]

	! !
!XWon class methodsFor: 'as yet unclassified' stamp: 'fr 10/31/2020 20:42:58' prior: 50878973!
canHandle: aTerniLapilli

	^aTerniLapilli hasXWon ! !
!TerniLapilliTests methodsFor: 'as yet unclassified' stamp: 'fr 10/31/2020 20:42:58' prior: 50876495!
test34

	| terniLapilli |
	terniLapilli _ TerniLapilli new.
	terniLapilli putXAt: 2 @ 1.
	terniLapilli putOAt: 1 @ 3.
	terniLapilli putXAt: 2 @ 2.
	terniLapilli putOAt: 1 @ 2.
	terniLapilli putXAt: 2 @ 3.
	self assert: [ terniLapilli hasXWon ].! !

!methodRemoval: TerniLapilli #hasPlayerXWon stamp: 'fr 10/31/2020 20:42:58'!
hasPlayerXWon
	
	| randomPosition positionsX|
	positionsX _ self positionsFor: #X.
	positionsX isEmpty ifFalse: [
	randomPosition _ positionsX atRandom.
	^((positionsX allSatisfy: [:aPosition | aPosition x = randomPosition x]) and: [positionsX size = 3]) 
	  or: [(positionsX allSatisfy: [:aPosition | aPosition y = randomPosition y]) and: [positionsX size = 3]]
	  or: [(positionsX allSatisfy: [:aPosition | aPosition y = aPosition x]) and: [positionsX size = 3]]
	  or: [(positionsX allSatisfy: [:aPosition | aPosition y + aPosition x = 4]) and: [positionsX size = 3]]
	] ifTrue: [^false]!
!TerniLapilli methodsFor: 'error' stamp: 'fr 10/31/2020 20:45:37'!
gameIsOverError

	^ self error: self class gameIsOverErrorDescription! !
!XWon methodsFor: 'as yet unclassified' stamp: 'fr 10/31/2020 20:45:37' prior: 50878869 overrides: 50870591!
putOAt: aPosition

	terniLapilliGame gameIsOverError! !
!XWon methodsFor: 'as yet unclassified' stamp: 'fr 10/31/2020 20:45:37' prior: 50878874 overrides: 50874625!
moveXFrom: currentPosition to: newPosition

	terniLapilliGame gameIsOverError! !
!OWon methodsFor: 'as yet unclassified' stamp: 'fr 10/31/2020 20:45:37' prior: 50878896 overrides: 50874625!
moveXFrom: currentPosition to: newPosition

	terniLapilliGame gameIsOverError ! !
!XWon methodsFor: 'as yet unclassified' stamp: 'fr 10/31/2020 20:45:37' prior: 50878864 overrides: 50870596!
putXAt: aPosition

	terniLapilliGame gameIsOverError! !
!XWon methodsFor: 'as yet unclassified' stamp: 'fr 10/31/2020 20:45:37' prior: 50878880 overrides: 50875040!
moveOFrom: currentPosition to: newPosition

	terniLapilliGame gameIsOverError! !
!OWon methodsFor: 'as yet unclassified' stamp: 'fr 10/31/2020 20:45:37' prior: 50878886 overrides: 50870596!
putXAt: aPosition

	terniLapilliGame gameIsOverError ! !
!OWon methodsFor: 'as yet unclassified' stamp: 'fr 10/31/2020 20:45:37' prior: 50878891 overrides: 50870591!
putOAt: aPosition

	terniLapilliGame gameIsOverError ! !
!OWon methodsFor: 'as yet unclassified' stamp: 'fr 10/31/2020 20:45:37' prior: 50878902 overrides: 50875040!
moveOFrom: currentPosition to: newPosition

	terniLapilliGame gameIsOverError ! !

!methodRemoval: TerniLapilli #gameIsOver stamp: 'fr 10/31/2020 20:45:37'!
gameIsOver

	^ self error: self class gameIsOverErrorDescription!
!TerniLapilli methodsFor: 'error' stamp: 'fr 10/31/2020 20:45:46'!
piecesLimitExceededError

	^ self error: self class piecesLimitExceededErrorDescription! !
!OMoving methodsFor: 'as yet unclassified' stamp: 'fr 10/31/2020 20:45:46' prior: 50874490 overrides: 50870591!
putOAt: aPosition

	^terniLapilliGame piecesLimitExceededError! !
!XMoving methodsFor: 'as yet unclassified' stamp: 'fr 10/31/2020 20:45:46' prior: 50874485 overrides: 50870596!
putXAt: aPosition
	
	^terniLapilliGame piecesLimitExceededError
	! !

!methodRemoval: TerniLapilli #piecesLimitExceeded stamp: 'fr 10/31/2020 20:45:46'!
piecesLimitExceeded

	^ self error: self class piecesLimitExceededErrorDescription!

!testRun: #TerniLapilliTests #test01 stamp: 'fr 10/31/2020 20:45:49'!
PASSED!

!testRun: #TerniLapilliTests #test02 stamp: 'fr 10/31/2020 20:45:49'!
PASSED!

!testRun: #TerniLapilliTests #test03 stamp: 'fr 10/31/2020 20:45:49'!
PASSED!

!testRun: #TerniLapilliTests #test04 stamp: 'fr 10/31/2020 20:45:49'!
PASSED!

!testRun: #TerniLapilliTests #test05 stamp: 'fr 10/31/2020 20:45:49'!
PASSED!

!testRun: #TerniLapilliTests #test06 stamp: 'fr 10/31/2020 20:45:49'!
PASSED!

!testRun: #TerniLapilliTests #test07 stamp: 'fr 10/31/2020 20:45:49'!
PASSED!

!testRun: #TerniLapilliTests #test08 stamp: 'fr 10/31/2020 20:45:49'!
PASSED!

!testRun: #TerniLapilliTests #test09 stamp: 'fr 10/31/2020 20:45:49'!
PASSED!

!testRun: #TerniLapilliTests #test10 stamp: 'fr 10/31/2020 20:45:49'!
PASSED!

!testRun: #TerniLapilliTests #test11 stamp: 'fr 10/31/2020 20:45:49'!
PASSED!

!testRun: #TerniLapilliTests #test12 stamp: 'fr 10/31/2020 20:45:49'!
PASSED!

!testRun: #TerniLapilliTests #test13 stamp: 'fr 10/31/2020 20:45:49'!
PASSED!

!testRun: #TerniLapilliTests #test14 stamp: 'fr 10/31/2020 20:45:49'!
PASSED!

!testRun: #TerniLapilliTests #test15 stamp: 'fr 10/31/2020 20:45:49'!
PASSED!

!testRun: #TerniLapilliTests #test16 stamp: 'fr 10/31/2020 20:45:49'!
PASSED!

!testRun: #TerniLapilliTests #test17 stamp: 'fr 10/31/2020 20:45:49'!
PASSED!

!testRun: #TerniLapilliTests #test18 stamp: 'fr 10/31/2020 20:45:49'!
PASSED!

!testRun: #TerniLapilliTests #test19 stamp: 'fr 10/31/2020 20:45:49'!
PASSED!

!testRun: #TerniLapilliTests #test20 stamp: 'fr 10/31/2020 20:45:49'!
PASSED!

!testRun: #TerniLapilliTests #test21 stamp: 'fr 10/31/2020 20:45:49'!
PASSED!

!testRun: #TerniLapilliTests #test22 stamp: 'fr 10/31/2020 20:45:49'!
PASSED!

!testRun: #TerniLapilliTests #test24 stamp: 'fr 10/31/2020 20:45:49'!
PASSED!

!testRun: #TerniLapilliTests #test25 stamp: 'fr 10/31/2020 20:45:49'!
PASSED!

!testRun: #TerniLapilliTests #test26 stamp: 'fr 10/31/2020 20:45:49'!
PASSED!

!testRun: #TerniLapilliTests #test27 stamp: 'fr 10/31/2020 20:45:49'!
PASSED!

!testRun: #TerniLapilliTests #test28 stamp: 'fr 10/31/2020 20:45:49'!
PASSED!

!testRun: #TerniLapilliTests #test29 stamp: 'fr 10/31/2020 20:45:49'!
PASSED!

!testRun: #TerniLapilliTests #test30 stamp: 'fr 10/31/2020 20:45:49'!
PASSED!

!testRun: #TerniLapilliTests #test31 stamp: 'fr 10/31/2020 20:45:49'!
PASSED!

!testRun: #TerniLapilliTests #test32 stamp: 'fr 10/31/2020 20:45:49'!
PASSED!

!testRun: #TerniLapilliTests #test33 stamp: 'fr 10/31/2020 20:45:49'!
PASSED!

!testRun: #TerniLapilliTests #test34 stamp: 'fr 10/31/2020 20:45:49'!
PASSED!

!testRun: #TerniLapilliTests #test35 stamp: 'fr 10/31/2020 20:45:49'!
PASSED!

!testRun: #TerniLapilliTests #test36 stamp: 'fr 10/31/2020 20:45:49'!
PASSED!

!testRun: #TerniLapilliTests #test37 stamp: 'fr 10/31/2020 20:45:49'!
PASSED!

!testRun: #TerniLapilliTests #test38 stamp: 'fr 10/31/2020 20:45:49'!
PASSED!

!testRun: #TerniLapilliTests #test39 stamp: 'fr 10/31/2020 20:45:49'!
PASSED!

!testRun: #TerniLapilliTests #test40 stamp: 'fr 10/31/2020 20:45:49'!
PASSED!

!testRun: #TerniLapilliTests #test41 stamp: 'fr 10/31/2020 20:45:49'!
PASSED!
!TerniLapilli methodsFor: 'error' stamp: 'fr 10/31/2020 20:46:05'!
positionAlreadyHoldsAPieceError

	^ self error: self class positionAlreadyHoldsAPieceErrorDescription! !
!TerniLapilli methodsFor: 'as yet unclassified' stamp: 'fr 10/31/2020 20:46:05' prior: 50871577!
failIfPositionAlreadyHoldsAPiece: aPosition

	(((self positionsFor: #X) includes: aPosition) or: [(self positionsFor: #O) includes: aPosition ]) ifTrue: [self positionAlreadyHoldsAPieceError]! !

!methodRemoval: TerniLapilli #positionAlreadyHoldsAPiece stamp: 'fr 10/31/2020 20:46:05'!
positionAlreadyHoldsAPiece

	^ self error: self class positionAlreadyHoldsAPieceErrorDescription!
!TerniLapilli methodsFor: 'error' stamp: 'fr 10/31/2020 20:46:16'!
canNotMoveBeforeAddingThreePiecesError

	^ self error: self class canNotMoveBeforeAddingThreePiecesErrorDescription! !
!XAdding methodsFor: 'as yet unclassified' stamp: 'fr 10/31/2020 20:46:16' prior: 50874818 overrides: 50874625!
moveXFrom: currentPosition to: newPosition

	terniLapilliGame canNotMoveBeforeAddingThreePiecesError ! !
!OAdding methodsFor: 'as yet unclassified' stamp: 'fr 10/31/2020 20:46:16' prior: 50874805 overrides: 50875040!
moveOFrom: currentPosition to: newPosition

	terniLapilliGame canNotMoveBeforeAddingThreePiecesError
! !

!methodRemoval: TerniLapilli #canNotMoveBeforeAddingThreePieces stamp: 'fr 10/31/2020 20:46:16'!
canNotMoveBeforeAddingThreePieces

	^ self error: self class canNotMoveBeforeAddingThreePiecesErrorDescription!

!testRun: #TerniLapilliTests #test01 stamp: 'fr 10/31/2020 20:46:18'!
PASSED!

!testRun: #TerniLapilliTests #test02 stamp: 'fr 10/31/2020 20:46:18'!
PASSED!

!testRun: #TerniLapilliTests #test03 stamp: 'fr 10/31/2020 20:46:18'!
PASSED!

!testRun: #TerniLapilliTests #test04 stamp: 'fr 10/31/2020 20:46:18'!
PASSED!

!testRun: #TerniLapilliTests #test05 stamp: 'fr 10/31/2020 20:46:18'!
PASSED!

!testRun: #TerniLapilliTests #test06 stamp: 'fr 10/31/2020 20:46:18'!
PASSED!

!testRun: #TerniLapilliTests #test07 stamp: 'fr 10/31/2020 20:46:18'!
PASSED!

!testRun: #TerniLapilliTests #test08 stamp: 'fr 10/31/2020 20:46:18'!
PASSED!

!testRun: #TerniLapilliTests #test09 stamp: 'fr 10/31/2020 20:46:18'!
PASSED!

!testRun: #TerniLapilliTests #test10 stamp: 'fr 10/31/2020 20:46:18'!
PASSED!

!testRun: #TerniLapilliTests #test11 stamp: 'fr 10/31/2020 20:46:18'!
PASSED!

!testRun: #TerniLapilliTests #test12 stamp: 'fr 10/31/2020 20:46:18'!
PASSED!

!testRun: #TerniLapilliTests #test13 stamp: 'fr 10/31/2020 20:46:18'!
PASSED!

!testRun: #TerniLapilliTests #test14 stamp: 'fr 10/31/2020 20:46:18'!
PASSED!

!testRun: #TerniLapilliTests #test15 stamp: 'fr 10/31/2020 20:46:18'!
PASSED!

!testRun: #TerniLapilliTests #test16 stamp: 'fr 10/31/2020 20:46:18'!
PASSED!

!testRun: #TerniLapilliTests #test17 stamp: 'fr 10/31/2020 20:46:18'!
PASSED!

!testRun: #TerniLapilliTests #test18 stamp: 'fr 10/31/2020 20:46:18'!
PASSED!

!testRun: #TerniLapilliTests #test19 stamp: 'fr 10/31/2020 20:46:18'!
PASSED!

!testRun: #TerniLapilliTests #test20 stamp: 'fr 10/31/2020 20:46:18'!
PASSED!

!testRun: #TerniLapilliTests #test21 stamp: 'fr 10/31/2020 20:46:18'!
PASSED!

!testRun: #TerniLapilliTests #test22 stamp: 'fr 10/31/2020 20:46:18'!
PASSED!

!testRun: #TerniLapilliTests #test24 stamp: 'fr 10/31/2020 20:46:18'!
PASSED!

!testRun: #TerniLapilliTests #test25 stamp: 'fr 10/31/2020 20:46:18'!
PASSED!

!testRun: #TerniLapilliTests #test26 stamp: 'fr 10/31/2020 20:46:18'!
PASSED!

!testRun: #TerniLapilliTests #test27 stamp: 'fr 10/31/2020 20:46:18'!
PASSED!

!testRun: #TerniLapilliTests #test28 stamp: 'fr 10/31/2020 20:46:18'!
PASSED!

!testRun: #TerniLapilliTests #test29 stamp: 'fr 10/31/2020 20:46:18'!
PASSED!

!testRun: #TerniLapilliTests #test30 stamp: 'fr 10/31/2020 20:46:18'!
PASSED!

!testRun: #TerniLapilliTests #test31 stamp: 'fr 10/31/2020 20:46:18'!
PASSED!

!testRun: #TerniLapilliTests #test32 stamp: 'fr 10/31/2020 20:46:18'!
PASSED!

!testRun: #TerniLapilliTests #test33 stamp: 'fr 10/31/2020 20:46:18'!
PASSED!

!testRun: #TerniLapilliTests #test34 stamp: 'fr 10/31/2020 20:46:18'!
PASSED!

!testRun: #TerniLapilliTests #test35 stamp: 'fr 10/31/2020 20:46:18'!
PASSED!

!testRun: #TerniLapilliTests #test36 stamp: 'fr 10/31/2020 20:46:18'!
PASSED!

!testRun: #TerniLapilliTests #test37 stamp: 'fr 10/31/2020 20:46:18'!
PASSED!

!testRun: #TerniLapilliTests #test38 stamp: 'fr 10/31/2020 20:46:18'!
PASSED!

!testRun: #TerniLapilliTests #test39 stamp: 'fr 10/31/2020 20:46:18'!
PASSED!

!testRun: #TerniLapilliTests #test40 stamp: 'fr 10/31/2020 20:46:18'!
PASSED!

!testRun: #TerniLapilliTests #test41 stamp: 'fr 10/31/2020 20:46:18'!
PASSED!
!TerniLapilli methodsFor: 'game state' stamp: 'fr 10/31/2020 20:56:14' prior: 50879101!
hasOWon
	"| randomPosition positionsO|
	positionsO _ self positionsFor: #O.
	positionsO isEmpty ifFalse: [
	randomPosition _ positionsO atRandom.
	^((positionsO allSatisfy: [:aPosition | aPosition x = randomPosition x]) and: [positionsO size = 3]) 
	  or: [(positionsO allSatisfy: [:aPosition | aPosition y = randomPosition y]) and: [positionsO size = 3]]
	  or: [(positionsO allSatisfy: [:aPosition | aPosition y = aPosition x]) and: [positionsO size = 3]]
	  or: [(positionsO allSatisfy: [:aPosition | aPosition y + aPosition x = 4]) and: [positionsO size = 3]]
	] ifTrue: [^false]"

	| positionsO |
	
	positionsO _ self positionsFor: #O.
	
	^   ((1 to: 3) anySatisfy: [:x | (positionsO count: [:aPosition | aPosition x = x]) = 3 ] ) 
	or: [(1 to: 3) anySatisfy: [:y | (positionsO count: [:aPosition | aPosition y = y]) = 3 ] ] 
	or: [(1 to: 3) allSatisfy: [:p | positionsO includes: p@p]] 
	or: []! !
!TerniLapilli methodsFor: 'game state' stamp: 'fr 10/31/2020 20:56:48' prior: 50879784!
hasOWon
	"| randomPosition positionsO|
	positionsO _ self positionsFor: #O.
	positionsO isEmpty ifFalse: [
	randomPosition _ positionsO atRandom.
	^((positionsO allSatisfy: [:aPosition | aPosition x = randomPosition x]) and: [positionsO size = 3]) 
	  or: [(positionsO allSatisfy: [:aPosition | aPosition y = randomPosition y]) and: [positionsO size = 3]]
	  or: [(positionsO allSatisfy: [:aPosition | aPosition y = aPosition x]) and: [positionsO size = 3]]
	  or: [(positionsO allSatisfy: [:aPosition | aPosition y + aPosition x = 4]) and: [positionsO size = 3]]
	] ifTrue: [^false]"

	| positionsO |
	
	positionsO _ self positionsFor: #O.
	
	^   ((1 to: 3) anySatisfy: [:x | (positionsO count: [:aPosition | aPosition x = x]) = 3 ] ) 
	or: [(1 to: 3) anySatisfy: [:y | (positionsO count: [:aPosition | aPosition y = y]) = 3 ] ] 
	or: [(1 to: 3) allSatisfy: [:p | positionsO includes: p@p]] 
	or: [(1 to: 3) allSatisfy: [:p | positionsO includes: p@(4-p)]]! !

!testRun: #TerniLapilliTests #test01 stamp: 'fr 10/31/2020 20:56:55'!
PASSED!

!testRun: #TerniLapilliTests #test02 stamp: 'fr 10/31/2020 20:56:55'!
PASSED!

!testRun: #TerniLapilliTests #test03 stamp: 'fr 10/31/2020 20:56:55'!
PASSED!

!testRun: #TerniLapilliTests #test04 stamp: 'fr 10/31/2020 20:56:55'!
PASSED!

!testRun: #TerniLapilliTests #test05 stamp: 'fr 10/31/2020 20:56:55'!
PASSED!

!testRun: #TerniLapilliTests #test06 stamp: 'fr 10/31/2020 20:56:55'!
PASSED!

!testRun: #TerniLapilliTests #test07 stamp: 'fr 10/31/2020 20:56:55'!
PASSED!

!testRun: #TerniLapilliTests #test08 stamp: 'fr 10/31/2020 20:56:55'!
PASSED!

!testRun: #TerniLapilliTests #test09 stamp: 'fr 10/31/2020 20:56:55'!
PASSED!

!testRun: #TerniLapilliTests #test10 stamp: 'fr 10/31/2020 20:56:55'!
PASSED!

!testRun: #TerniLapilliTests #test11 stamp: 'fr 10/31/2020 20:56:55'!
PASSED!

!testRun: #TerniLapilliTests #test12 stamp: 'fr 10/31/2020 20:56:55'!
PASSED!

!testRun: #TerniLapilliTests #test13 stamp: 'fr 10/31/2020 20:56:55'!
PASSED!

!testRun: #TerniLapilliTests #test14 stamp: 'fr 10/31/2020 20:56:55'!
PASSED!

!testRun: #TerniLapilliTests #test15 stamp: 'fr 10/31/2020 20:56:55'!
PASSED!

!testRun: #TerniLapilliTests #test16 stamp: 'fr 10/31/2020 20:56:55'!
PASSED!

!testRun: #TerniLapilliTests #test17 stamp: 'fr 10/31/2020 20:56:55'!
PASSED!

!testRun: #TerniLapilliTests #test18 stamp: 'fr 10/31/2020 20:56:55'!
PASSED!

!testRun: #TerniLapilliTests #test19 stamp: 'fr 10/31/2020 20:56:55'!
PASSED!

!testRun: #TerniLapilliTests #test20 stamp: 'fr 10/31/2020 20:56:55'!
PASSED!

!testRun: #TerniLapilliTests #test21 stamp: 'fr 10/31/2020 20:56:55'!
PASSED!

!testRun: #TerniLapilliTests #test22 stamp: 'fr 10/31/2020 20:56:55'!
PASSED!

!testRun: #TerniLapilliTests #test24 stamp: 'fr 10/31/2020 20:56:55'!
PASSED!

!testRun: #TerniLapilliTests #test25 stamp: 'fr 10/31/2020 20:56:55'!
PASSED!

!testRun: #TerniLapilliTests #test26 stamp: 'fr 10/31/2020 20:56:55'!
PASSED!

!testRun: #TerniLapilliTests #test27 stamp: 'fr 10/31/2020 20:56:55'!
PASSED!

!testRun: #TerniLapilliTests #test28 stamp: 'fr 10/31/2020 20:56:55'!
PASSED!

!testRun: #TerniLapilliTests #test29 stamp: 'fr 10/31/2020 20:56:55'!
PASSED!

!testRun: #TerniLapilliTests #test30 stamp: 'fr 10/31/2020 20:56:55'!
PASSED!

!testRun: #TerniLapilliTests #test31 stamp: 'fr 10/31/2020 20:56:55'!
PASSED!

!testRun: #TerniLapilliTests #test32 stamp: 'fr 10/31/2020 20:56:55'!
PASSED!

!testRun: #TerniLapilliTests #test33 stamp: 'fr 10/31/2020 20:56:55'!
PASSED!

!testRun: #TerniLapilliTests #test34 stamp: 'fr 10/31/2020 20:56:55'!
PASSED!

!testRun: #TerniLapilliTests #test35 stamp: 'fr 10/31/2020 20:56:55'!
PASSED!

!testRun: #TerniLapilliTests #test36 stamp: 'fr 10/31/2020 20:56:55'!
PASSED!

!testRun: #TerniLapilliTests #test37 stamp: 'fr 10/31/2020 20:56:55'!
PASSED!

!testRun: #TerniLapilliTests #test38 stamp: 'fr 10/31/2020 20:56:55'!
PASSED!

!testRun: #TerniLapilliTests #test39 stamp: 'fr 10/31/2020 20:56:55'!
PASSED!

!testRun: #TerniLapilliTests #test40 stamp: 'fr 10/31/2020 20:56:55'!
PASSED!

!testRun: #TerniLapilliTests #test41 stamp: 'fr 10/31/2020 20:56:55'!
PASSED!
!TerniLapilli methodsFor: 'game state' stamp: 'fr 10/31/2020 20:57:08' prior: 50879815!
hasOWon

	| positionsO |
	
	positionsO _ self positionsFor: #O.
	
	^   ((1 to: 3) anySatisfy: [:x | (positionsO count: [:aPosition | aPosition x = x]) = 3 ] ) 
	or: [(1 to: 3) anySatisfy: [:y | (positionsO count: [:aPosition | aPosition y = y]) = 3 ] ] 
	or: [(1 to: 3) allSatisfy: [:p | positionsO includes: p@p]] 
	or: [(1 to: 3) allSatisfy: [:p | positionsO includes: p@(4-p)]]! !
!TerniLapilli methodsFor: 'game state' stamp: 'fr 10/31/2020 20:57:10' prior: 50879947!
hasOWon

	| positionsO |
	
	positionsO _ self positionsFor: #O.
	
	^   ((1 to: 3) anySatisfy: [:x | (positionsO count: [:aPosition | aPosition x = x]) = 3 ] ) 
	or: [(1 to: 3) anySatisfy: [:y | (positionsO count: [:aPosition | aPosition y = y]) = 3 ] ] 
	or: [(1 to: 3) allSatisfy: [:p | positionsO includes: p@p]] 
	or: [(1 to: 3) allSatisfy: [:p | positionsO includes: p@(4-p)]]! !
!TerniLapilli methodsFor: 'game state' stamp: 'fr 10/31/2020 20:57:21' prior: 50879306!
hasXWon
	
	| positionsO |
	
	positionsO _ self positionsFor: #O.
	
	^   ((1 to: 3) anySatisfy: [:x | (positionsO count: [:aPosition | aPosition x = x]) = 3 ] ) 
	or: [(1 to: 3) anySatisfy: [:y | (positionsO count: [:aPosition | aPosition y = y]) = 3 ] ] 
	or: [(1 to: 3) allSatisfy: [:p | positionsO includes: p@p]] 
	or: [(1 to: 3) allSatisfy: [:p | positionsO includes: p@(4-p)]]! !
!TerniLapilli methodsFor: 'game state' stamp: 'fr 10/31/2020 20:57:24' prior: 50879977!
hasXWon
	
	| positionsO |
	
	positionsO _ self positionsFor: #X.
	
	^   ((1 to: 3) anySatisfy: [:x | (positionsO count: [:aPosition | aPosition x = x]) = 3 ] ) 
	or: [(1 to: 3) anySatisfy: [:y | (positionsO count: [:aPosition | aPosition y = y]) = 3 ] ] 
	or: [(1 to: 3) allSatisfy: [:p | positionsO includes: p@p]] 
	or: [(1 to: 3) allSatisfy: [:p | positionsO includes: p@(4-p)]]! !
!TerniLapilli methodsFor: 'game state' stamp: 'fr 10/31/2020 21:00:52'!
threeInARow: positionsO

	^ (1 to: 3) anySatisfy: [:x | (positionsO count: [:aPosition | aPosition x = x]) = 3 ]! !
!TerniLapilli methodsFor: 'game state' stamp: 'fr 10/31/2020 21:00:52' prior: 50879992!
hasXWon
	
	| positionsO |
	
	positionsO _ self positionsFor: #X.
	
	^   (self threeInARow: positionsO ) 
	or: [(1 to: 3) anySatisfy: [:y | (positionsO count: [:aPosition | aPosition y = y]) = 3 ] ] 
	or: [(1 to: 3) allSatisfy: [:p | positionsO includes: p@p]] 
	or: [(1 to: 3) allSatisfy: [:p | positionsO includes: p@(4-p)]]! !
!TerniLapilli methodsFor: 'game state' stamp: 'fr 10/31/2020 21:01:13'!
threeInAColumn: positionsO

	^ (1 to: 3) anySatisfy: [:y | (positionsO count: [:aPosition | aPosition y = y]) = 3 ]! !
!TerniLapilli methodsFor: 'game state' stamp: 'fr 10/31/2020 21:01:13' prior: 50880014!
hasXWon
	
	| positionsO |
	
	positionsO _ self positionsFor: #X.
	
	^   (self threeInARow: positionsO ) 
	or: [self threeInAColumn: positionsO ] 
	or: [(1 to: 3) allSatisfy: [:p | positionsO includes: p@p]] 
	or: [(1 to: 3) allSatisfy: [:p | positionsO includes: p@(4-p)]]! !
!TerniLapilli methodsFor: 'game state' stamp: 'fr 10/31/2020 21:01:55'!
threeInMainDiagonal: positionsO

	^ (1 to: 3) allSatisfy: [:p | positionsO includes: p@p]! !
!TerniLapilli methodsFor: 'game state' stamp: 'fr 10/31/2020 21:01:55' prior: 50880034!
hasXWon
	
	| positionsO |
	
	positionsO _ self positionsFor: #X.
	
	^   (self threeInARow: positionsO ) 
	or: [self threeInAColumn: positionsO ] 
	or: [self threeInMainDiagonal: positionsO] 
	or: [(1 to: 3) allSatisfy: [:p | positionsO includes: p@(4-p)]]! !
!TerniLapilli methodsFor: 'game state' stamp: 'fr 10/31/2020 21:02:11'!
threeInSecondaryDiagonal: positionsO

	^ (1 to: 3) allSatisfy: [:p | positionsO includes: p@(4-p)]! !
!TerniLapilli methodsFor: 'game state' stamp: 'fr 10/31/2020 21:02:11' prior: 50880051!
hasXWon
	
	| positionsO |
	
	positionsO _ self positionsFor: #X.
	
	^   (self threeInARow: positionsO ) 
	or: [self threeInAColumn: positionsO ] 
	or: [self threeInMainDiagonal: positionsO] 
	or: [self threeInSecondaryDiagonal: positionsO]! !
!TerniLapilli methodsFor: 'game state' stamp: 'fr 10/31/2020 21:03:02'!
hasThreeInLine: playerPositions
	
	^   (self threeInARow: playerPositions ) 
	or: [self threeInAColumn: playerPositions ] 
	or: [self threeInMainDiagonal: playerPositions] 
	or: [self threeInSecondaryDiagonal: playerPositions]! !
!TerniLapilli methodsFor: 'game state' stamp: 'fr 10/31/2020 21:03:29' prior: 50879962!
hasOWon
	
	^self hasThreeInLine: (self positionsFor: #O).! !
!TerniLapilli methodsFor: 'game state' stamp: 'fr 10/31/2020 21:03:55' prior: 50880068!
hasXWon
	
	^self hasThreeInLine: (self positionsFor: #X)! !

!testRun: #TerniLapilliTests #test01 stamp: 'fr 10/31/2020 21:03:58'!
PASSED!

!testRun: #TerniLapilliTests #test02 stamp: 'fr 10/31/2020 21:03:58'!
PASSED!

!testRun: #TerniLapilliTests #test03 stamp: 'fr 10/31/2020 21:03:58'!
PASSED!

!testRun: #TerniLapilliTests #test04 stamp: 'fr 10/31/2020 21:03:58'!
PASSED!

!testRun: #TerniLapilliTests #test05 stamp: 'fr 10/31/2020 21:03:58'!
PASSED!

!testRun: #TerniLapilliTests #test06 stamp: 'fr 10/31/2020 21:03:58'!
PASSED!

!testRun: #TerniLapilliTests #test07 stamp: 'fr 10/31/2020 21:03:58'!
PASSED!

!testRun: #TerniLapilliTests #test08 stamp: 'fr 10/31/2020 21:03:58'!
PASSED!

!testRun: #TerniLapilliTests #test09 stamp: 'fr 10/31/2020 21:03:58'!
PASSED!

!testRun: #TerniLapilliTests #test10 stamp: 'fr 10/31/2020 21:03:58'!
PASSED!

!testRun: #TerniLapilliTests #test11 stamp: 'fr 10/31/2020 21:03:58'!
PASSED!

!testRun: #TerniLapilliTests #test12 stamp: 'fr 10/31/2020 21:03:58'!
PASSED!

!testRun: #TerniLapilliTests #test13 stamp: 'fr 10/31/2020 21:03:58'!
PASSED!

!testRun: #TerniLapilliTests #test14 stamp: 'fr 10/31/2020 21:03:58'!
PASSED!

!testRun: #TerniLapilliTests #test15 stamp: 'fr 10/31/2020 21:03:58'!
PASSED!

!testRun: #TerniLapilliTests #test16 stamp: 'fr 10/31/2020 21:03:58'!
PASSED!

!testRun: #TerniLapilliTests #test17 stamp: 'fr 10/31/2020 21:03:58'!
PASSED!

!testRun: #TerniLapilliTests #test18 stamp: 'fr 10/31/2020 21:03:58'!
PASSED!

!testRun: #TerniLapilliTests #test19 stamp: 'fr 10/31/2020 21:03:58'!
PASSED!

!testRun: #TerniLapilliTests #test20 stamp: 'fr 10/31/2020 21:03:58'!
PASSED!

!testRun: #TerniLapilliTests #test21 stamp: 'fr 10/31/2020 21:03:58'!
PASSED!

!testRun: #TerniLapilliTests #test22 stamp: 'fr 10/31/2020 21:03:58'!
PASSED!

!testRun: #TerniLapilliTests #test24 stamp: 'fr 10/31/2020 21:03:58'!
PASSED!

!testRun: #TerniLapilliTests #test25 stamp: 'fr 10/31/2020 21:03:58'!
PASSED!

!testRun: #TerniLapilliTests #test26 stamp: 'fr 10/31/2020 21:03:58'!
PASSED!

!testRun: #TerniLapilliTests #test27 stamp: 'fr 10/31/2020 21:03:58'!
PASSED!

!testRun: #TerniLapilliTests #test28 stamp: 'fr 10/31/2020 21:03:58'!
PASSED!

!testRun: #TerniLapilliTests #test29 stamp: 'fr 10/31/2020 21:03:58'!
PASSED!

!testRun: #TerniLapilliTests #test30 stamp: 'fr 10/31/2020 21:03:58'!
PASSED!

!testRun: #TerniLapilliTests #test31 stamp: 'fr 10/31/2020 21:03:58'!
PASSED!

!testRun: #TerniLapilliTests #test32 stamp: 'fr 10/31/2020 21:03:58'!
PASSED!

!testRun: #TerniLapilliTests #test33 stamp: 'fr 10/31/2020 21:03:58'!
PASSED!

!testRun: #TerniLapilliTests #test34 stamp: 'fr 10/31/2020 21:03:58'!
PASSED!

!testRun: #TerniLapilliTests #test35 stamp: 'fr 10/31/2020 21:03:58'!
PASSED!

!testRun: #TerniLapilliTests #test36 stamp: 'fr 10/31/2020 21:03:58'!
PASSED!

!testRun: #TerniLapilliTests #test37 stamp: 'fr 10/31/2020 21:03:58'!
PASSED!

!testRun: #TerniLapilliTests #test38 stamp: 'fr 10/31/2020 21:03:58'!
PASSED!

!testRun: #TerniLapilliTests #test39 stamp: 'fr 10/31/2020 21:03:58'!
PASSED!

!testRun: #TerniLapilliTests #test40 stamp: 'fr 10/31/2020 21:03:58'!
PASSED!

!testRun: #TerniLapilliTests #test41 stamp: 'fr 10/31/2020 21:03:58'!
PASSED!
!TerniLapilli methodsFor: 'player state' stamp: 'fr 10/31/2020 21:07:01' prior: 50875323!
hasPiecesToAdd: aPlayerId

	^(self positionsFor: aPlayerId ) size < 3! !
!TerniLapilli methodsFor: 'player state' stamp: 'fr 10/31/2020 21:07:12' prior: 50871483!
player: aPlayerId hasPieceAt: aPosition	
	
	^(self positionsFor: aPlayerId) includes: aPosition! !

!testRun: #TerniLapilliTests #test01 stamp: 'fr 10/31/2020 21:08:35'!
PASSED!

!testRun: #TerniLapilliTests #test02 stamp: 'fr 10/31/2020 21:08:35'!
PASSED!

!testRun: #TerniLapilliTests #test03 stamp: 'fr 10/31/2020 21:08:35'!
PASSED!

!testRun: #TerniLapilliTests #test04 stamp: 'fr 10/31/2020 21:08:35'!
PASSED!

!testRun: #TerniLapilliTests #test05 stamp: 'fr 10/31/2020 21:08:35'!
PASSED!

!testRun: #TerniLapilliTests #test06 stamp: 'fr 10/31/2020 21:08:35'!
PASSED!

!testRun: #TerniLapilliTests #test07 stamp: 'fr 10/31/2020 21:08:35'!
PASSED!

!testRun: #TerniLapilliTests #test08 stamp: 'fr 10/31/2020 21:08:35'!
PASSED!

!testRun: #TerniLapilliTests #test09 stamp: 'fr 10/31/2020 21:08:35'!
PASSED!

!testRun: #TerniLapilliTests #test10 stamp: 'fr 10/31/2020 21:08:35'!
PASSED!

!testRun: #TerniLapilliTests #test11 stamp: 'fr 10/31/2020 21:08:35'!
PASSED!

!testRun: #TerniLapilliTests #test12 stamp: 'fr 10/31/2020 21:08:35'!
PASSED!

!testRun: #TerniLapilliTests #test13 stamp: 'fr 10/31/2020 21:08:35'!
PASSED!

!testRun: #TerniLapilliTests #test14 stamp: 'fr 10/31/2020 21:08:35'!
PASSED!

!testRun: #TerniLapilliTests #test15 stamp: 'fr 10/31/2020 21:08:35'!
PASSED!

!testRun: #TerniLapilliTests #test16 stamp: 'fr 10/31/2020 21:08:35'!
PASSED!

!testRun: #TerniLapilliTests #test17 stamp: 'fr 10/31/2020 21:08:35'!
PASSED!

!testRun: #TerniLapilliTests #test18 stamp: 'fr 10/31/2020 21:08:35'!
PASSED!

!testRun: #TerniLapilliTests #test19 stamp: 'fr 10/31/2020 21:08:35'!
PASSED!

!testRun: #TerniLapilliTests #test20 stamp: 'fr 10/31/2020 21:08:35'!
PASSED!

!testRun: #TerniLapilliTests #test21 stamp: 'fr 10/31/2020 21:08:35'!
PASSED!

!testRun: #TerniLapilliTests #test22 stamp: 'fr 10/31/2020 21:08:35'!
PASSED!

!testRun: #TerniLapilliTests #test24 stamp: 'fr 10/31/2020 21:08:35'!
PASSED!

!testRun: #TerniLapilliTests #test25 stamp: 'fr 10/31/2020 21:08:35'!
PASSED!

!testRun: #TerniLapilliTests #test26 stamp: 'fr 10/31/2020 21:08:35'!
PASSED!

!testRun: #TerniLapilliTests #test27 stamp: 'fr 10/31/2020 21:08:35'!
PASSED!

!testRun: #TerniLapilliTests #test28 stamp: 'fr 10/31/2020 21:08:35'!
PASSED!

!testRun: #TerniLapilliTests #test29 stamp: 'fr 10/31/2020 21:08:35'!
PASSED!

!testRun: #TerniLapilliTests #test30 stamp: 'fr 10/31/2020 21:08:35'!
PASSED!

!testRun: #TerniLapilliTests #test31 stamp: 'fr 10/31/2020 21:08:35'!
PASSED!

!testRun: #TerniLapilliTests #test32 stamp: 'fr 10/31/2020 21:08:35'!
PASSED!

!testRun: #TerniLapilliTests #test33 stamp: 'fr 10/31/2020 21:08:35'!
PASSED!

!testRun: #TerniLapilliTests #test34 stamp: 'fr 10/31/2020 21:08:35'!
PASSED!

!testRun: #TerniLapilliTests #test35 stamp: 'fr 10/31/2020 21:08:35'!
PASSED!

!testRun: #TerniLapilliTests #test36 stamp: 'fr 10/31/2020 21:08:35'!
PASSED!

!testRun: #TerniLapilliTests #test37 stamp: 'fr 10/31/2020 21:08:35'!
PASSED!

!testRun: #TerniLapilliTests #test38 stamp: 'fr 10/31/2020 21:08:35'!
PASSED!

!testRun: #TerniLapilliTests #test39 stamp: 'fr 10/31/2020 21:08:35'!
PASSED!

!testRun: #TerniLapilliTests #test40 stamp: 'fr 10/31/2020 21:08:35'!
PASSED!

!testRun: #TerniLapilliTests #test41 stamp: 'fr 10/31/2020 21:08:35'!
PASSED!

----SNAPSHOT----(31 October 2020 21:08:52) CuisUniversity-4384.image priorSource: 17506536!
!TerniLapilli methodsFor: 'error' stamp: 'fr 10/31/2020 21:09:35'!
canNotMoveMoreThanOnePlaceAfarError

	^ self error: self class canNotMoveToPositionMoreThanOnePlaceAfarErrorDescription! !
!TerniLapilli methodsFor: 'as yet unclassified' stamp: 'fr 10/31/2020 21:09:35' prior: 50875976!
failIfItIsNotPossibleToMoveFrom: currentPosition to: newPosition

	((((currentPosition x + currentPosition y) even) and: [currentPosition eightNeighbors includes: newPosition] ) or: [( (currentPosition x + currentPosition y) odd ) and: [currentPosition fourNeighbors includes: newPosition ]]) ifFalse: [self canNotMoveMoreThanOnePlaceAfarError].
	
	! !

!methodRemoval: TerniLapilli #canNotMoveMoreThanOnePlaceAfar stamp: 'fr 10/31/2020 21:09:35'!
canNotMoveMoreThanOnePlaceAfar

	^ self error: self class canNotMoveToPositionMoreThanOnePlaceAfarErrorDescription!
!TerniLapilli methodsFor: 'game checks' stamp: 'fr 10/31/2020 21:13:17'!
firstCoordinateIsValid: aPosition

	^ aPosition x between: 1 and: 3! !
!TerniLapilli methodsFor: 'game checks' stamp: 'fr 10/31/2020 21:13:17' prior: 50874565!
failIfPositionOutOfBounds: aPosition

	^ ((self firstCoordinateIsValid: aPosition) and: [aPosition y between: 1 and: 3]) ifFalse: [self error: self class positionOutOfBoundsErrorDescription ]! !
!TerniLapilli methodsFor: 'game checks' stamp: 'fr 10/31/2020 21:13:37'!
secondCoordinateIsValid: aPosition

	^ aPosition y between: 1 and: 3! !
!TerniLapilli methodsFor: 'game checks' stamp: 'fr 10/31/2020 21:13:37' prior: 50880342!
failIfPositionOutOfBounds: aPosition

	^ ((self firstCoordinateIsValid: aPosition) and: [self secondCoordinateIsValid: aPosition]) ifFalse: [self error: self class positionOutOfBoundsErrorDescription ]! !
!TerniLapilli methodsFor: 'game checks' stamp: 'fr 10/31/2020 21:13:58'!
positionOutOfBoundsError

	^ self error: self class positionOutOfBoundsErrorDescription! !
!TerniLapilli methodsFor: 'game checks' stamp: 'fr 10/31/2020 21:13:58' prior: 50880357!
failIfPositionOutOfBounds: aPosition

	^ ((self firstCoordinateIsValid: aPosition) and: [self secondCoordinateIsValid: aPosition]) ifFalse: [self positionOutOfBoundsError ]! !
!TerniLapilli methodsFor: 'game checks' stamp: 'fr 10/31/2020 21:14:01' prior: 50880372!
failIfPositionOutOfBounds: aPosition

	^ ((self firstCoordinateIsValid: aPosition) and: [self secondCoordinateIsValid: aPosition]) ifFalse: [self positionOutOfBoundsError]! !
!TerniLapilli methodsFor: 'game checks' stamp: 'fr 10/31/2020 21:16:23' prior: 50879642!
failIfPositionAlreadyHoldsAPiece: aPosition
	
	|playerX playerO|
	
	playerX _ #X.
	playerO _ #O.	
	
	(((self positionsFor: #X) includes: aPosition) or: [(self positionsFor: #O) includes: aPosition ]) ifTrue: [self positionAlreadyHoldsAPieceError]! !
!TerniLapilli methodsFor: 'game checks' stamp: 'fr 10/31/2020 21:16:37' prior: 50880390!
failIfPositionAlreadyHoldsAPiece: aPosition
	
	|playerX playerO|
	
	playerX _ #X.
	playerO _ #O.	
	
	(((self positionsFor: playerX ) includes: aPosition) or: [(self positionsFor: playerO ) includes: aPosition ]) ifTrue: [self positionAlreadyHoldsAPieceError]! !
!TerniLapilli methodsFor: 'game checks' stamp: 'fr 10/31/2020 21:18:33' prior: 50880401!
failIfPositionAlreadyHoldsAPiece: aPosition

	(((self positionsFor: #X) includes: aPosition) or: [(self positionsFor: #O) includes: aPosition ]) ifTrue: [self positionAlreadyHoldsAPieceError]! !
!TerniLapilli methodsFor: 'game checks' stamp: 'fr 10/31/2020 21:19:08'!
positionsFor: aPlayerId includes: aPosition

	^(self positionsFor: aPlayerId) includes: aPosition ! !
!TerniLapilli methodsFor: 'game checks' stamp: 'fr 10/31/2020 21:19:44' prior: 50880412!
failIfPositionAlreadyHoldsAPiece: aPosition

	((self positionsFor: #X includes: aPosition) or: [self positionsFor: #O includes: aPosition ]) ifTrue: [self positionAlreadyHoldsAPieceError]! !
!TerniLapilli methodsFor: 'game checks' stamp: 'fr 10/31/2020 21:20:47'!
positionHoldsAPieceOfAnyPlayer: aPosition

	^ (self positionsFor: #X includes: aPosition) or: [self positionsFor: #O includes: aPosition ]! !
!TerniLapilli methodsFor: 'game checks' stamp: 'fr 10/31/2020 21:20:47' prior: 50880427!
failIfPositionAlreadyHoldsAPiece: aPosition

	(self positionHoldsAPieceOfAnyPlayer: aPosition) ifTrue: [self positionAlreadyHoldsAPieceError]! !
!TerniLapilli methodsFor: 'game checks' stamp: 'fr 10/31/2020 21:31:34'!
itIsValidToGoFrom: currentPosition to: newPosition

	^(((currentPosition x + currentPosition y) even) and: [currentPosition eightNeighbors includes: newPosition] ) or: [( (currentPosition x + currentPosition y) odd ) and: [currentPosition fourNeighbors includes: newPosition ]]
	! !
!TerniLapilli methodsFor: 'game checks' stamp: 'fr 10/31/2020 21:33:11'!
goFromCornerOrCenter: currentPosition to: newPosition

	^(((currentPosition x + currentPosition y) even) and: [currentPosition eightNeighbors includes: newPosition] ) or: [( (currentPosition x + currentPosition y) odd ) and: [currentPosition fourNeighbors includes: newPosition ]]
	! !
!TerniLapilli methodsFor: 'game checks' stamp: 'fr 10/31/2020 21:33:22' prior: 50880463!
goFromCornerOrCenter: currentPosition to: newPosition

	^((currentPosition x + currentPosition y) even) and: [currentPosition eightNeighbors includes: newPosition] 
	! !
!TerniLapilli methodsFor: 'game checks' stamp: 'fr 10/31/2020 21:34:21'!
goFromEdge: currentPosition to: newPosition

	^((currentPosition x + currentPosition y) odd ) and: [currentPosition fourNeighbors includes: newPosition ]
	! !
!TerniLapilli methodsFor: 'game checks' stamp: 'fr 10/31/2020 21:34:46' prior: 50880451!
itIsValidToGoFrom: currentPosition to: newPosition

	^(self goFromCornerOrCenter: currentPosition to: newPosition) or: [( (currentPosition x + currentPosition y) odd ) and: [currentPosition fourNeighbors includes: newPosition ]]
	! !
!TerniLapilli methodsFor: 'game checks' stamp: 'fr 10/31/2020 21:35:07' prior: 50880491!
itIsValidToGoFrom: currentPosition to: newPosition

	^(self goFromCornerOrCenter: currentPosition to: newPosition) or: [self goFromEdge: currentPosition to: newPosition]
	! !
!TerniLapilli methodsFor: 'game checks' stamp: 'fr 10/31/2020 21:35:40' prior: 50880317!
failIfItIsNotPossibleToMoveFrom: currentPosition to: newPosition

	(self itIsValidToGoFrom: currentPosition to: newPosition) ifFalse: [self canNotMoveMoreThanOnePlaceAfarError].
	
	! !

!testRun: #TerniLapilliTests #test01 stamp: 'fr 10/31/2020 21:35:44'!
PASSED!

!testRun: #TerniLapilliTests #test02 stamp: 'fr 10/31/2020 21:35:44'!
PASSED!

!testRun: #TerniLapilliTests #test03 stamp: 'fr 10/31/2020 21:35:44'!
PASSED!

!testRun: #TerniLapilliTests #test04 stamp: 'fr 10/31/2020 21:35:44'!
PASSED!

!testRun: #TerniLapilliTests #test05 stamp: 'fr 10/31/2020 21:35:44'!
PASSED!

!testRun: #TerniLapilliTests #test06 stamp: 'fr 10/31/2020 21:35:44'!
PASSED!

!testRun: #TerniLapilliTests #test07 stamp: 'fr 10/31/2020 21:35:44'!
PASSED!

!testRun: #TerniLapilliTests #test08 stamp: 'fr 10/31/2020 21:35:44'!
PASSED!

!testRun: #TerniLapilliTests #test09 stamp: 'fr 10/31/2020 21:35:44'!
PASSED!

!testRun: #TerniLapilliTests #test10 stamp: 'fr 10/31/2020 21:35:44'!
PASSED!

!testRun: #TerniLapilliTests #test11 stamp: 'fr 10/31/2020 21:35:44'!
PASSED!

!testRun: #TerniLapilliTests #test12 stamp: 'fr 10/31/2020 21:35:44'!
PASSED!

!testRun: #TerniLapilliTests #test13 stamp: 'fr 10/31/2020 21:35:44'!
PASSED!

!testRun: #TerniLapilliTests #test14 stamp: 'fr 10/31/2020 21:35:44'!
PASSED!

!testRun: #TerniLapilliTests #test15 stamp: 'fr 10/31/2020 21:35:44'!
PASSED!

!testRun: #TerniLapilliTests #test16 stamp: 'fr 10/31/2020 21:35:44'!
PASSED!

!testRun: #TerniLapilliTests #test17 stamp: 'fr 10/31/2020 21:35:44'!
PASSED!

!testRun: #TerniLapilliTests #test18 stamp: 'fr 10/31/2020 21:35:44'!
PASSED!

!testRun: #TerniLapilliTests #test19 stamp: 'fr 10/31/2020 21:35:44'!
PASSED!

!testRun: #TerniLapilliTests #test20 stamp: 'fr 10/31/2020 21:35:44'!
PASSED!

!testRun: #TerniLapilliTests #test21 stamp: 'fr 10/31/2020 21:35:44'!
PASSED!

!testRun: #TerniLapilliTests #test22 stamp: 'fr 10/31/2020 21:35:44'!
PASSED!

!testRun: #TerniLapilliTests #test24 stamp: 'fr 10/31/2020 21:35:44'!
PASSED!

!testRun: #TerniLapilliTests #test25 stamp: 'fr 10/31/2020 21:35:44'!
PASSED!

!testRun: #TerniLapilliTests #test26 stamp: 'fr 10/31/2020 21:35:44'!
PASSED!

!testRun: #TerniLapilliTests #test27 stamp: 'fr 10/31/2020 21:35:44'!
PASSED!

!testRun: #TerniLapilliTests #test28 stamp: 'fr 10/31/2020 21:35:44'!
PASSED!

!testRun: #TerniLapilliTests #test29 stamp: 'fr 10/31/2020 21:35:44'!
PASSED!

!testRun: #TerniLapilliTests #test30 stamp: 'fr 10/31/2020 21:35:44'!
PASSED!

!testRun: #TerniLapilliTests #test31 stamp: 'fr 10/31/2020 21:35:44'!
PASSED!

!testRun: #TerniLapilliTests #test32 stamp: 'fr 10/31/2020 21:35:44'!
PASSED!

!testRun: #TerniLapilliTests #test33 stamp: 'fr 10/31/2020 21:35:44'!
PASSED!

!testRun: #TerniLapilliTests #test34 stamp: 'fr 10/31/2020 21:35:44'!
PASSED!

!testRun: #TerniLapilliTests #test35 stamp: 'fr 10/31/2020 21:35:44'!
PASSED!

!testRun: #TerniLapilliTests #test36 stamp: 'fr 10/31/2020 21:35:44'!
PASSED!

!testRun: #TerniLapilliTests #test37 stamp: 'fr 10/31/2020 21:35:44'!
PASSED!

!testRun: #TerniLapilliTests #test38 stamp: 'fr 10/31/2020 21:35:44'!
PASSED!

!testRun: #TerniLapilliTests #test39 stamp: 'fr 10/31/2020 21:35:44'!
PASSED!

!testRun: #TerniLapilliTests #test40 stamp: 'fr 10/31/2020 21:35:44'!
PASSED!

!testRun: #TerniLapilliTests #test41 stamp: 'fr 10/31/2020 21:35:44'!
PASSED!

----SNAPSHOT----(31 October 2020 21:40:02) CuisUniversity-4384.image priorSource: 17557018!
!TerniLapilli methodsFor: 'state safe actions' stamp: 'fr 10/31/2020 21:43:11'!
removeOPosition: currentPosition

	^ (self positionsFor: #O) remove: currentPosition ifAbsent: [self error: self class positionIsNotUnderPlayersControlErrorDescription]! !
!TerniLapilli methodsFor: 'state safe actions' stamp: 'fr 10/31/2020 21:43:11' prior: 50876021!
safeMoveOFrom: currentPosition to: newPosition 
	
	self failIfPositionOutOfBounds: currentPosition.
	self failIfItIsNotPossibleToMoveFrom: currentPosition to: newPosition.
	self removeOPosition: currentPosition.

	self safePutOAt: newPosition 
! !
!TerniLapilli methodsFor: 'state safe actions' stamp: 'fr 10/31/2020 21:43:25'!
removeXPosition: currentPosition

	^ (self positionsFor: #X) remove: currentPosition ifAbsent: [self error: self class positionIsNotUnderPlayersControlErrorDescription]! !
!TerniLapilli methodsFor: 'state safe actions' stamp: 'fr 10/31/2020 21:43:25' prior: 50876035!
safeMoveXFrom: currentPosition to: newPosition
	
	self failIfPositionOutOfBounds: currentPosition.	
	self failIfItIsNotPossibleToMoveFrom: currentPosition to: newPosition.
	self removeXPosition: currentPosition.

	self safePutXAt: newPosition 
	
	! !
!TerniLapilli methodsFor: 'state safe actions' stamp: 'fr 10/31/2020 21:43:35' prior: 50880630!
safeMoveOFrom: currentPosition to: newPosition 
	
	self failIfPositionOutOfBounds: currentPosition.
	self failIfItIsNotPossibleToMoveFrom: currentPosition to: newPosition.

	self removeOPosition: currentPosition.
	self safePutOAt: newPosition 
! !
!TerniLapilli methodsFor: 'state safe actions' stamp: 'fr 10/31/2020 21:43:41' prior: 50880650!
safeMoveXFrom: currentPosition to: newPosition
	
	self failIfPositionOutOfBounds: currentPosition.	
	self failIfItIsNotPossibleToMoveFrom: currentPosition to: newPosition.

	self removeXPosition: currentPosition.
	self safePutXAt: newPosition 
	
	! !

!testRun: #TerniLapilliTests #test01 stamp: 'fr 10/31/2020 21:43:52'!
PASSED!

!testRun: #TerniLapilliTests #test02 stamp: 'fr 10/31/2020 21:43:52'!
PASSED!

!testRun: #TerniLapilliTests #test03 stamp: 'fr 10/31/2020 21:43:52'!
PASSED!

!testRun: #TerniLapilliTests #test04 stamp: 'fr 10/31/2020 21:43:52'!
PASSED!

!testRun: #TerniLapilliTests #test05 stamp: 'fr 10/31/2020 21:43:52'!
PASSED!

!testRun: #TerniLapilliTests #test06 stamp: 'fr 10/31/2020 21:43:52'!
PASSED!

!testRun: #TerniLapilliTests #test07 stamp: 'fr 10/31/2020 21:43:52'!
PASSED!

!testRun: #TerniLapilliTests #test08 stamp: 'fr 10/31/2020 21:43:52'!
PASSED!

!testRun: #TerniLapilliTests #test09 stamp: 'fr 10/31/2020 21:43:52'!
PASSED!

!testRun: #TerniLapilliTests #test10 stamp: 'fr 10/31/2020 21:43:52'!
PASSED!

!testRun: #TerniLapilliTests #test11 stamp: 'fr 10/31/2020 21:43:52'!
PASSED!

!testRun: #TerniLapilliTests #test12 stamp: 'fr 10/31/2020 21:43:52'!
PASSED!

!testRun: #TerniLapilliTests #test13 stamp: 'fr 10/31/2020 21:43:52'!
PASSED!

!testRun: #TerniLapilliTests #test14 stamp: 'fr 10/31/2020 21:43:52'!
PASSED!

!testRun: #TerniLapilliTests #test15 stamp: 'fr 10/31/2020 21:43:52'!
PASSED!

!testRun: #TerniLapilliTests #test16 stamp: 'fr 10/31/2020 21:43:52'!
PASSED!

!testRun: #TerniLapilliTests #test17 stamp: 'fr 10/31/2020 21:43:52'!
PASSED!

!testRun: #TerniLapilliTests #test18 stamp: 'fr 10/31/2020 21:43:52'!
PASSED!

!testRun: #TerniLapilliTests #test19 stamp: 'fr 10/31/2020 21:43:52'!
PASSED!

!testRun: #TerniLapilliTests #test20 stamp: 'fr 10/31/2020 21:43:52'!
PASSED!

!testRun: #TerniLapilliTests #test21 stamp: 'fr 10/31/2020 21:43:52'!
PASSED!

!testRun: #TerniLapilliTests #test22 stamp: 'fr 10/31/2020 21:43:52'!
PASSED!

!testRun: #TerniLapilliTests #test24 stamp: 'fr 10/31/2020 21:43:52'!
PASSED!

!testRun: #TerniLapilliTests #test25 stamp: 'fr 10/31/2020 21:43:52'!
PASSED!

!testRun: #TerniLapilliTests #test26 stamp: 'fr 10/31/2020 21:43:52'!
PASSED!

!testRun: #TerniLapilliTests #test27 stamp: 'fr 10/31/2020 21:43:52'!
PASSED!

!testRun: #TerniLapilliTests #test28 stamp: 'fr 10/31/2020 21:43:52'!
PASSED!

!testRun: #TerniLapilliTests #test29 stamp: 'fr 10/31/2020 21:43:52'!
PASSED!

!testRun: #TerniLapilliTests #test30 stamp: 'fr 10/31/2020 21:43:52'!
PASSED!

!testRun: #TerniLapilliTests #test31 stamp: 'fr 10/31/2020 21:43:52'!
PASSED!

!testRun: #TerniLapilliTests #test32 stamp: 'fr 10/31/2020 21:43:52'!
PASSED!

!testRun: #TerniLapilliTests #test33 stamp: 'fr 10/31/2020 21:43:52'!
PASSED!

!testRun: #TerniLapilliTests #test34 stamp: 'fr 10/31/2020 21:43:52'!
PASSED!

!testRun: #TerniLapilliTests #test35 stamp: 'fr 10/31/2020 21:43:52'!
PASSED!

!testRun: #TerniLapilliTests #test36 stamp: 'fr 10/31/2020 21:43:52'!
PASSED!

!testRun: #TerniLapilliTests #test37 stamp: 'fr 10/31/2020 21:43:52'!
PASSED!

!testRun: #TerniLapilliTests #test38 stamp: 'fr 10/31/2020 21:43:52'!
PASSED!

!testRun: #TerniLapilliTests #test39 stamp: 'fr 10/31/2020 21:43:52'!
PASSED!

!testRun: #TerniLapilliTests #test40 stamp: 'fr 10/31/2020 21:43:52'!
PASSED!

!testRun: #TerniLapilliTests #test41 stamp: 'fr 10/31/2020 21:43:52'!
PASSED!

!testRun: #TerniLapilliTests #test01 stamp: 'fr 10/31/2020 21:43:54'!
PASSED!

!testRun: #TerniLapilliTests #test02 stamp: 'fr 10/31/2020 21:43:54'!
PASSED!

!testRun: #TerniLapilliTests #test03 stamp: 'fr 10/31/2020 21:43:54'!
PASSED!

!testRun: #TerniLapilliTests #test04 stamp: 'fr 10/31/2020 21:43:54'!
PASSED!

!testRun: #TerniLapilliTests #test05 stamp: 'fr 10/31/2020 21:43:54'!
PASSED!

!testRun: #TerniLapilliTests #test06 stamp: 'fr 10/31/2020 21:43:54'!
PASSED!

!testRun: #TerniLapilliTests #test07 stamp: 'fr 10/31/2020 21:43:54'!
PASSED!

!testRun: #TerniLapilliTests #test08 stamp: 'fr 10/31/2020 21:43:54'!
PASSED!

!testRun: #TerniLapilliTests #test09 stamp: 'fr 10/31/2020 21:43:54'!
PASSED!

!testRun: #TerniLapilliTests #test10 stamp: 'fr 10/31/2020 21:43:54'!
PASSED!

!testRun: #TerniLapilliTests #test11 stamp: 'fr 10/31/2020 21:43:54'!
PASSED!

!testRun: #TerniLapilliTests #test12 stamp: 'fr 10/31/2020 21:43:54'!
PASSED!

!testRun: #TerniLapilliTests #test13 stamp: 'fr 10/31/2020 21:43:54'!
PASSED!

!testRun: #TerniLapilliTests #test14 stamp: 'fr 10/31/2020 21:43:54'!
PASSED!

!testRun: #TerniLapilliTests #test15 stamp: 'fr 10/31/2020 21:43:54'!
PASSED!

!testRun: #TerniLapilliTests #test16 stamp: 'fr 10/31/2020 21:43:54'!
PASSED!

!testRun: #TerniLapilliTests #test17 stamp: 'fr 10/31/2020 21:43:54'!
PASSED!

!testRun: #TerniLapilliTests #test18 stamp: 'fr 10/31/2020 21:43:54'!
PASSED!

!testRun: #TerniLapilliTests #test19 stamp: 'fr 10/31/2020 21:43:54'!
PASSED!

!testRun: #TerniLapilliTests #test20 stamp: 'fr 10/31/2020 21:43:54'!
PASSED!

!testRun: #TerniLapilliTests #test21 stamp: 'fr 10/31/2020 21:43:54'!
PASSED!

!testRun: #TerniLapilliTests #test22 stamp: 'fr 10/31/2020 21:43:54'!
PASSED!

!testRun: #TerniLapilliTests #test24 stamp: 'fr 10/31/2020 21:43:54'!
PASSED!

!testRun: #TerniLapilliTests #test25 stamp: 'fr 10/31/2020 21:43:54'!
PASSED!

!testRun: #TerniLapilliTests #test26 stamp: 'fr 10/31/2020 21:43:54'!
PASSED!

!testRun: #TerniLapilliTests #test27 stamp: 'fr 10/31/2020 21:43:54'!
PASSED!

!testRun: #TerniLapilliTests #test28 stamp: 'fr 10/31/2020 21:43:54'!
PASSED!

!testRun: #TerniLapilliTests #test29 stamp: 'fr 10/31/2020 21:43:54'!
PASSED!

!testRun: #TerniLapilliTests #test30 stamp: 'fr 10/31/2020 21:43:54'!
PASSED!

!testRun: #TerniLapilliTests #test31 stamp: 'fr 10/31/2020 21:43:54'!
PASSED!

!testRun: #TerniLapilliTests #test32 stamp: 'fr 10/31/2020 21:43:54'!
PASSED!

!testRun: #TerniLapilliTests #test33 stamp: 'fr 10/31/2020 21:43:54'!
PASSED!

!testRun: #TerniLapilliTests #test34 stamp: 'fr 10/31/2020 21:43:54'!
PASSED!

!testRun: #TerniLapilliTests #test35 stamp: 'fr 10/31/2020 21:43:54'!
PASSED!

!testRun: #TerniLapilliTests #test36 stamp: 'fr 10/31/2020 21:43:54'!
PASSED!

!testRun: #TerniLapilliTests #test37 stamp: 'fr 10/31/2020 21:43:54'!
PASSED!

!testRun: #TerniLapilliTests #test38 stamp: 'fr 10/31/2020 21:43:54'!
PASSED!

!testRun: #TerniLapilliTests #test39 stamp: 'fr 10/31/2020 21:43:54'!
PASSED!

!testRun: #TerniLapilliTests #test40 stamp: 'fr 10/31/2020 21:43:54'!
PASSED!

!testRun: #TerniLapilliTests #test41 stamp: 'fr 10/31/2020 21:43:54'!
PASSED!

!testRun: #TerniLapilliTests #test01 stamp: 'fr 10/31/2020 21:43:56'!
PASSED!

!testRun: #TerniLapilliTests #test02 stamp: 'fr 10/31/2020 21:43:56'!
PASSED!

!testRun: #TerniLapilliTests #test03 stamp: 'fr 10/31/2020 21:43:56'!
PASSED!

!testRun: #TerniLapilliTests #test04 stamp: 'fr 10/31/2020 21:43:56'!
PASSED!

!testRun: #TerniLapilliTests #test05 stamp: 'fr 10/31/2020 21:43:56'!
PASSED!

!testRun: #TerniLapilliTests #test06 stamp: 'fr 10/31/2020 21:43:56'!
PASSED!

!testRun: #TerniLapilliTests #test07 stamp: 'fr 10/31/2020 21:43:56'!
PASSED!

!testRun: #TerniLapilliTests #test08 stamp: 'fr 10/31/2020 21:43:56'!
PASSED!

!testRun: #TerniLapilliTests #test09 stamp: 'fr 10/31/2020 21:43:56'!
PASSED!

!testRun: #TerniLapilliTests #test10 stamp: 'fr 10/31/2020 21:43:56'!
PASSED!

!testRun: #TerniLapilliTests #test11 stamp: 'fr 10/31/2020 21:43:56'!
PASSED!

!testRun: #TerniLapilliTests #test12 stamp: 'fr 10/31/2020 21:43:56'!
PASSED!

!testRun: #TerniLapilliTests #test13 stamp: 'fr 10/31/2020 21:43:56'!
PASSED!

!testRun: #TerniLapilliTests #test14 stamp: 'fr 10/31/2020 21:43:56'!
PASSED!

!testRun: #TerniLapilliTests #test15 stamp: 'fr 10/31/2020 21:43:56'!
PASSED!

!testRun: #TerniLapilliTests #test16 stamp: 'fr 10/31/2020 21:43:56'!
PASSED!

!testRun: #TerniLapilliTests #test17 stamp: 'fr 10/31/2020 21:43:56'!
PASSED!

!testRun: #TerniLapilliTests #test18 stamp: 'fr 10/31/2020 21:43:56'!
PASSED!

!testRun: #TerniLapilliTests #test19 stamp: 'fr 10/31/2020 21:43:56'!
PASSED!

!testRun: #TerniLapilliTests #test20 stamp: 'fr 10/31/2020 21:43:56'!
PASSED!

!testRun: #TerniLapilliTests #test21 stamp: 'fr 10/31/2020 21:43:56'!
PASSED!

!testRun: #TerniLapilliTests #test22 stamp: 'fr 10/31/2020 21:43:56'!
PASSED!

!testRun: #TerniLapilliTests #test24 stamp: 'fr 10/31/2020 21:43:56'!
PASSED!

!testRun: #TerniLapilliTests #test25 stamp: 'fr 10/31/2020 21:43:56'!
PASSED!

!testRun: #TerniLapilliTests #test26 stamp: 'fr 10/31/2020 21:43:56'!
PASSED!

!testRun: #TerniLapilliTests #test27 stamp: 'fr 10/31/2020 21:43:56'!
PASSED!

!testRun: #TerniLapilliTests #test28 stamp: 'fr 10/31/2020 21:43:56'!
PASSED!

!testRun: #TerniLapilliTests #test29 stamp: 'fr 10/31/2020 21:43:56'!
PASSED!

!testRun: #TerniLapilliTests #test30 stamp: 'fr 10/31/2020 21:43:56'!
PASSED!

!testRun: #TerniLapilliTests #test31 stamp: 'fr 10/31/2020 21:43:56'!
PASSED!

!testRun: #TerniLapilliTests #test32 stamp: 'fr 10/31/2020 21:43:56'!
PASSED!

!testRun: #TerniLapilliTests #test33 stamp: 'fr 10/31/2020 21:43:56'!
PASSED!

!testRun: #TerniLapilliTests #test34 stamp: 'fr 10/31/2020 21:43:56'!
PASSED!

!testRun: #TerniLapilliTests #test35 stamp: 'fr 10/31/2020 21:43:56'!
PASSED!

!testRun: #TerniLapilliTests #test36 stamp: 'fr 10/31/2020 21:43:56'!
PASSED!

!testRun: #TerniLapilliTests #test37 stamp: 'fr 10/31/2020 21:43:56'!
PASSED!

!testRun: #TerniLapilliTests #test38 stamp: 'fr 10/31/2020 21:43:56'!
PASSED!

!testRun: #TerniLapilliTests #test39 stamp: 'fr 10/31/2020 21:43:56'!
PASSED!

!testRun: #TerniLapilliTests #test40 stamp: 'fr 10/31/2020 21:43:56'!
PASSED!

!testRun: #TerniLapilliTests #test41 stamp: 'fr 10/31/2020 21:43:56'!
PASSED!

!testRun: #TerniLapilliTests #test01 stamp: 'fr 10/31/2020 21:44:08'!
PASSED!

!testRun: #TerniLapilliTests #test02 stamp: 'fr 10/31/2020 21:44:08'!
PASSED!

!testRun: #TerniLapilliTests #test03 stamp: 'fr 10/31/2020 21:44:08'!
PASSED!

!testRun: #TerniLapilliTests #test04 stamp: 'fr 10/31/2020 21:44:08'!
PASSED!

!testRun: #TerniLapilliTests #test05 stamp: 'fr 10/31/2020 21:44:08'!
PASSED!

!testRun: #TerniLapilliTests #test06 stamp: 'fr 10/31/2020 21:44:08'!
PASSED!

!testRun: #TerniLapilliTests #test07 stamp: 'fr 10/31/2020 21:44:08'!
PASSED!

!testRun: #TerniLapilliTests #test08 stamp: 'fr 10/31/2020 21:44:08'!
PASSED!

!testRun: #TerniLapilliTests #test09 stamp: 'fr 10/31/2020 21:44:08'!
PASSED!

!testRun: #TerniLapilliTests #test10 stamp: 'fr 10/31/2020 21:44:08'!
PASSED!

!testRun: #TerniLapilliTests #test11 stamp: 'fr 10/31/2020 21:44:08'!
PASSED!

!testRun: #TerniLapilliTests #test12 stamp: 'fr 10/31/2020 21:44:08'!
PASSED!

!testRun: #TerniLapilliTests #test13 stamp: 'fr 10/31/2020 21:44:08'!
PASSED!

!testRun: #TerniLapilliTests #test14 stamp: 'fr 10/31/2020 21:44:08'!
PASSED!

!testRun: #TerniLapilliTests #test15 stamp: 'fr 10/31/2020 21:44:08'!
PASSED!

!testRun: #TerniLapilliTests #test16 stamp: 'fr 10/31/2020 21:44:08'!
PASSED!

!testRun: #TerniLapilliTests #test17 stamp: 'fr 10/31/2020 21:44:08'!
PASSED!

!testRun: #TerniLapilliTests #test18 stamp: 'fr 10/31/2020 21:44:08'!
PASSED!

!testRun: #TerniLapilliTests #test19 stamp: 'fr 10/31/2020 21:44:08'!
PASSED!

!testRun: #TerniLapilliTests #test20 stamp: 'fr 10/31/2020 21:44:08'!
PASSED!

!testRun: #TerniLapilliTests #test21 stamp: 'fr 10/31/2020 21:44:08'!
PASSED!

!testRun: #TerniLapilliTests #test22 stamp: 'fr 10/31/2020 21:44:08'!
PASSED!

!testRun: #TerniLapilliTests #test24 stamp: 'fr 10/31/2020 21:44:08'!
PASSED!

!testRun: #TerniLapilliTests #test25 stamp: 'fr 10/31/2020 21:44:08'!
PASSED!

!testRun: #TerniLapilliTests #test26 stamp: 'fr 10/31/2020 21:44:08'!
PASSED!

!testRun: #TerniLapilliTests #test27 stamp: 'fr 10/31/2020 21:44:08'!
PASSED!

!testRun: #TerniLapilliTests #test28 stamp: 'fr 10/31/2020 21:44:08'!
PASSED!

!testRun: #TerniLapilliTests #test29 stamp: 'fr 10/31/2020 21:44:08'!
PASSED!

!testRun: #TerniLapilliTests #test30 stamp: 'fr 10/31/2020 21:44:08'!
PASSED!

!testRun: #TerniLapilliTests #test31 stamp: 'fr 10/31/2020 21:44:08'!
PASSED!

!testRun: #TerniLapilliTests #test32 stamp: 'fr 10/31/2020 21:44:08'!
PASSED!

!testRun: #TerniLapilliTests #test33 stamp: 'fr 10/31/2020 21:44:08'!
PASSED!

!testRun: #TerniLapilliTests #test34 stamp: 'fr 10/31/2020 21:44:08'!
PASSED!

!testRun: #TerniLapilliTests #test35 stamp: 'fr 10/31/2020 21:44:08'!
PASSED!

!testRun: #TerniLapilliTests #test36 stamp: 'fr 10/31/2020 21:44:08'!
PASSED!

!testRun: #TerniLapilliTests #test37 stamp: 'fr 10/31/2020 21:44:08'!
PASSED!

!testRun: #TerniLapilliTests #test38 stamp: 'fr 10/31/2020 21:44:08'!
PASSED!

!testRun: #TerniLapilliTests #test39 stamp: 'fr 10/31/2020 21:44:08'!
PASSED!

!testRun: #TerniLapilliTests #test40 stamp: 'fr 10/31/2020 21:44:08'!
PASSED!

!testRun: #TerniLapilliTests #test41 stamp: 'fr 10/31/2020 21:44:08'!
PASSED!

----SNAPSHOT----(31 October 2020 21:45:24) CuisUniversity-4384.image priorSource: 17566960!

!testRun: #TerniLapilliTests #test01 stamp: 'fr 11/1/2020 00:39:22'!
PASSED!

!testRun: #TerniLapilliTests #test02 stamp: 'fr 11/1/2020 00:39:22'!
PASSED!

!testRun: #TerniLapilliTests #test03 stamp: 'fr 11/1/2020 00:39:22'!
PASSED!

!testRun: #TerniLapilliTests #test04 stamp: 'fr 11/1/2020 00:39:22'!
PASSED!

!testRun: #TerniLapilliTests #test05 stamp: 'fr 11/1/2020 00:39:22'!
PASSED!

!testRun: #TerniLapilliTests #test06 stamp: 'fr 11/1/2020 00:39:22'!
PASSED!

!testRun: #TerniLapilliTests #test07 stamp: 'fr 11/1/2020 00:39:22'!
PASSED!

!testRun: #TerniLapilliTests #test08 stamp: 'fr 11/1/2020 00:39:22'!
PASSED!

!testRun: #TerniLapilliTests #test09 stamp: 'fr 11/1/2020 00:39:22'!
PASSED!

!testRun: #TerniLapilliTests #test10 stamp: 'fr 11/1/2020 00:39:22'!
PASSED!

!testRun: #TerniLapilliTests #test11 stamp: 'fr 11/1/2020 00:39:22'!
PASSED!

!testRun: #TerniLapilliTests #test12 stamp: 'fr 11/1/2020 00:39:22'!
PASSED!

!testRun: #TerniLapilliTests #test13 stamp: 'fr 11/1/2020 00:39:22'!
PASSED!

!testRun: #TerniLapilliTests #test14 stamp: 'fr 11/1/2020 00:39:22'!
PASSED!

!testRun: #TerniLapilliTests #test15 stamp: 'fr 11/1/2020 00:39:22'!
PASSED!

!testRun: #TerniLapilliTests #test16 stamp: 'fr 11/1/2020 00:39:22'!
PASSED!

!testRun: #TerniLapilliTests #test17 stamp: 'fr 11/1/2020 00:39:22'!
PASSED!

!testRun: #TerniLapilliTests #test18 stamp: 'fr 11/1/2020 00:39:22'!
PASSED!

!testRun: #TerniLapilliTests #test19 stamp: 'fr 11/1/2020 00:39:22'!
PASSED!

!testRun: #TerniLapilliTests #test20 stamp: 'fr 11/1/2020 00:39:22'!
PASSED!

!testRun: #TerniLapilliTests #test21 stamp: 'fr 11/1/2020 00:39:22'!
PASSED!

!testRun: #TerniLapilliTests #test22 stamp: 'fr 11/1/2020 00:39:22'!
PASSED!

!testRun: #TerniLapilliTests #test24 stamp: 'fr 11/1/2020 00:39:22'!
PASSED!

!testRun: #TerniLapilliTests #test25 stamp: 'fr 11/1/2020 00:39:22'!
PASSED!

!testRun: #TerniLapilliTests #test26 stamp: 'fr 11/1/2020 00:39:22'!
PASSED!

!testRun: #TerniLapilliTests #test27 stamp: 'fr 11/1/2020 00:39:22'!
PASSED!

!testRun: #TerniLapilliTests #test28 stamp: 'fr 11/1/2020 00:39:22'!
PASSED!

!testRun: #TerniLapilliTests #test29 stamp: 'fr 11/1/2020 00:39:22'!
PASSED!

!testRun: #TerniLapilliTests #test30 stamp: 'fr 11/1/2020 00:39:22'!
PASSED!

!testRun: #TerniLapilliTests #test31 stamp: 'fr 11/1/2020 00:39:22'!
PASSED!

!testRun: #TerniLapilliTests #test32 stamp: 'fr 11/1/2020 00:39:22'!
PASSED!

!testRun: #TerniLapilliTests #test33 stamp: 'fr 11/1/2020 00:39:22'!
PASSED!

!testRun: #TerniLapilliTests #test34 stamp: 'fr 11/1/2020 00:39:22'!
PASSED!

!testRun: #TerniLapilliTests #test35 stamp: 'fr 11/1/2020 00:39:22'!
PASSED!

!testRun: #TerniLapilliTests #test36 stamp: 'fr 11/1/2020 00:39:22'!
PASSED!

!testRun: #TerniLapilliTests #test37 stamp: 'fr 11/1/2020 00:39:22'!
PASSED!

!testRun: #TerniLapilliTests #test38 stamp: 'fr 11/1/2020 00:39:22'!
PASSED!

!testRun: #TerniLapilliTests #test39 stamp: 'fr 11/1/2020 00:39:22'!
PASSED!

!testRun: #TerniLapilliTests #test40 stamp: 'fr 11/1/2020 00:39:22'!
PASSED!

!testRun: #TerniLapilliTests #test41 stamp: 'fr 11/1/2020 00:39:22'!
PASSED!

----SNAPSHOT----(1 November 2020 00:39:45) CuisUniversity-4384.image priorSource: 17581658!
!TerniLapilli methodsFor: 'game state' stamp: 'fr 11/1/2020 00:42:02' prior: 50880088!
hasOWon
	
	^state hasOWon.! !
!TerniLapilli methodsFor: 'game state' stamp: 'fr 11/1/2020 00:42:13' prior: 50880093!
hasXWon
	
	^state hasXWon ! !
!TerniLapilliState methodsFor: 'as yet unclassified' stamp: 'fr 11/1/2020 01:30:06'!
hasXWon

	self subclassResponsibility ! !
!TerniLapilliState methodsFor: 'as yet unclassified' stamp: 'fr 11/1/2020 01:30:08'!
hasOWon

	self subclassResponsibility ! !
!OAdding methodsFor: 'as yet unclassified' stamp: 'fr 11/1/2020 01:30:31' overrides: 50881189!
hasXWon

	^false! !
!OAdding methodsFor: 'as yet unclassified' stamp: 'fr 11/1/2020 01:30:33' overrides: 50881193!
hasOWon

	^false! !
!OMoving methodsFor: 'as yet unclassified' stamp: 'fr 11/1/2020 01:30:41' overrides: 50881193!
hasOWon

	^false! !
!OMoving methodsFor: 'as yet unclassified' stamp: 'fr 11/1/2020 01:30:44' overrides: 50881189!
hasXWon

	^false! !
!OWon methodsFor: 'as yet unclassified' stamp: 'fr 11/1/2020 01:30:53' overrides: 50881193!
hasOWon

	^true! !
!OWon methodsFor: 'as yet unclassified' stamp: 'fr 11/1/2020 01:31:10' overrides: 50881189!
hasXWon

	^true! !
!XAdding methodsFor: 'as yet unclassified' stamp: 'fr 11/1/2020 01:31:18' overrides: 50881193!
hasOWon

	^false! !
!XAdding methodsFor: 'as yet unclassified' stamp: 'fr 11/1/2020 01:31:20' overrides: 50881189!
hasXWon

	^false! !
!XMoving methodsFor: 'as yet unclassified' stamp: 'fr 11/1/2020 01:31:26' overrides: 50881193!
hasOWon

	^false! !
!XMoving methodsFor: 'as yet unclassified' stamp: 'fr 11/1/2020 01:31:29' overrides: 50881189!
hasXWon

	^false! !
!XWon methodsFor: 'as yet unclassified' stamp: 'fr 11/1/2020 01:31:34' overrides: 50881193!
hasOWon

	^false! !
!XWon methodsFor: 'as yet unclassified' stamp: 'fr 11/1/2020 01:31:36' overrides: 50881189!
hasXWon

	^false! !
!XWon methodsFor: 'as yet unclassified' stamp: 'fr 11/1/2020 01:31:38' prior: 50881242 overrides: 50881189!
hasXWon

	^true! !
!OWon class methodsFor: 'as yet unclassified' stamp: 'fr 11/1/2020 01:32:18' prior: 50879161!
canHandle: aTerniLapilli

	^aTerniLapilli OHasThreeInLine 

	! !
!XWon class methodsFor: 'as yet unclassified' stamp: 'fr 11/1/2020 01:32:32' prior: 50879419!
canHandle: aTerniLapilli

	^aTerniLapilli XHasThreeInLine ! !
!TerniLapilli methodsFor: 'private' stamp: 'fr 11/1/2020 01:33:19'!
XHasThreeInLine

	^self hasThreeInLine: (self positionsFor: #X)! !
!TerniLapilli methodsFor: 'private' stamp: 'fr 11/1/2020 01:33:24'!
OHasThreeInLine

	^self hasThreeInLine: (self positionsFor: #O)! !

!testRun: #TerniLapilliTests #test01 stamp: 'fr 11/1/2020 01:33:27'!
PASSED!

!testRun: #TerniLapilliTests #test02 stamp: 'fr 11/1/2020 01:33:27'!
PASSED!

!testRun: #TerniLapilliTests #test03 stamp: 'fr 11/1/2020 01:33:27'!
PASSED!

!testRun: #TerniLapilliTests #test04 stamp: 'fr 11/1/2020 01:33:27'!
PASSED!

!testRun: #TerniLapilliTests #test05 stamp: 'fr 11/1/2020 01:33:27'!
PASSED!

!testRun: #TerniLapilliTests #test06 stamp: 'fr 11/1/2020 01:33:27'!
PASSED!

!testRun: #TerniLapilliTests #test07 stamp: 'fr 11/1/2020 01:33:27'!
PASSED!

!testRun: #TerniLapilliTests #test08 stamp: 'fr 11/1/2020 01:33:27'!
PASSED!

!testRun: #TerniLapilliTests #test09 stamp: 'fr 11/1/2020 01:33:27'!
PASSED!

!testRun: #TerniLapilliTests #test10 stamp: 'fr 11/1/2020 01:33:27'!
PASSED!

!testRun: #TerniLapilliTests #test11 stamp: 'fr 11/1/2020 01:33:27'!
PASSED!

!testRun: #TerniLapilliTests #test12 stamp: 'fr 11/1/2020 01:33:27'!
PASSED!

!testRun: #TerniLapilliTests #test13 stamp: 'fr 11/1/2020 01:33:27'!
PASSED!

!testRun: #TerniLapilliTests #test14 stamp: 'fr 11/1/2020 01:33:27'!
PASSED!

!testRun: #TerniLapilliTests #test15 stamp: 'fr 11/1/2020 01:33:27'!
PASSED!

!testRun: #TerniLapilliTests #test16 stamp: 'fr 11/1/2020 01:33:27'!
PASSED!

!testRun: #TerniLapilliTests #test17 stamp: 'fr 11/1/2020 01:33:27'!
PASSED!

!testRun: #TerniLapilliTests #test18 stamp: 'fr 11/1/2020 01:33:27'!
PASSED!

!testRun: #TerniLapilliTests #test19 stamp: 'fr 11/1/2020 01:33:27'!
PASSED!

!testRun: #TerniLapilliTests #test20 stamp: 'fr 11/1/2020 01:33:27'!
PASSED!

!testRun: #TerniLapilliTests #test21 stamp: 'fr 11/1/2020 01:33:27'!
PASSED!

!testRun: #TerniLapilliTests #test22 stamp: 'fr 11/1/2020 01:33:27'!
PASSED!

!testRun: #TerniLapilliTests #test24 stamp: 'fr 11/1/2020 01:33:27'!
PASSED!

!testRun: #TerniLapilliTests #test25 stamp: 'fr 11/1/2020 01:33:27'!
PASSED!

!testRun: #TerniLapilliTests #test26 stamp: 'fr 11/1/2020 01:33:27'!
PASSED!

!testRun: #TerniLapilliTests #test27 stamp: 'fr 11/1/2020 01:33:27'!
PASSED!

!testRun: #TerniLapilliTests #test28 stamp: 'fr 11/1/2020 01:33:27'!
PASSED!

!testRun: #TerniLapilliTests #test29 stamp: 'fr 11/1/2020 01:33:27'!
PASSED!

!testRun: #TerniLapilliTests #test30 stamp: 'fr 11/1/2020 01:33:27'!
PASSED!

!testRun: #TerniLapilliTests #test31 stamp: 'fr 11/1/2020 01:33:27'!
PASSED!

!testRun: #TerniLapilliTests #test32 stamp: 'fr 11/1/2020 01:33:27'!
PASSED!

!testRun: #TerniLapilliTests #test33 stamp: 'fr 11/1/2020 01:33:27'!
FAILURE!

!testRun: #TerniLapilliTests #test34 stamp: 'fr 11/1/2020 01:33:27'!
FAILURE!

!testRun: #TerniLapilliTests #test35 stamp: 'fr 11/1/2020 01:33:27'!
FAILURE!

!testRun: #TerniLapilliTests #test36 stamp: 'fr 11/1/2020 01:33:27'!
FAILURE!

!testRun: #TerniLapilliTests #test37 stamp: 'fr 11/1/2020 01:33:27'!
FAILURE!

!testRun: #TerniLapilliTests #test38 stamp: 'fr 11/1/2020 01:33:27'!
FAILURE!

!testRun: #TerniLapilliTests #test39 stamp: 'fr 11/1/2020 01:33:27'!
FAILURE!

!testRun: #TerniLapilliTests #test40 stamp: 'fr 11/1/2020 01:33:27'!
FAILURE!

!testRun: #TerniLapilliTests #test41 stamp: 'fr 11/1/2020 01:33:27'!
FAILURE!

!testRun: #TerniLapilliTests #test33 stamp: 'fr 11/1/2020 01:33:43'!
FAILURE!

!testRun: #TerniLapilliTests #test33 stamp: 'fr 11/1/2020 01:33:43'!
FAILURE!

terniLapilli!

terniLapilli!

terniLapilli!
!XMoving class methodsFor: 'as yet unclassified' stamp: 'fr 11/1/2020 01:34:58' prior: 50879328!
canHandle: aTerniLapilli

	^(aTerniLapilli hasPiecesToAdd: #X) not and: [aTerniLapilli isOsTurn] and: [aTerniLapilli OHasThreeInLine not] and: [aTerniLapilli hasXWon not]

	! !
!XMoving class methodsFor: 'as yet unclassified' stamp: 'fr 11/1/2020 01:35:02' prior: 50881375!
canHandle: aTerniLapilli

	^(aTerniLapilli hasPiecesToAdd: #X) not and: [aTerniLapilli isOsTurn] and: [aTerniLapilli OHasThreeInLine not] and: [aTerniLapilli XHasThreeInLine not]

	! !
!XAdding class methodsFor: 'as yet unclassified' stamp: 'fr 11/1/2020 01:35:11' prior: 50879370!
canHandle: aTerniLapilli

	^(aTerniLapilli hasPiecesToAdd: #X) and: [aTerniLapilli isOsTurn] and: [aTerniLapilli OHasThreeInLine not] and: [aTerniLapilli XHasThreeInLine not]

	! !
!OMoving class methodsFor: 'as yet unclassified' stamp: 'fr 11/1/2020 01:35:25' prior: 50879410!
canHandle: aTerniLapilli

	^(aTerniLapilli hasPiecesToAdd: #O) not and: [aTerniLapilli isXsTurn] and: [aTerniLapilli OHasThreeInLine not] and: [aTerniLapilli XHasThreeInLine not]

	! !
!OAdding class methodsFor: 'as yet unclassified' stamp: 'fr 11/1/2020 01:35:31' prior: 50879401!
canHandle: aTerniLapilli

	^(aTerniLapilli hasPiecesToAdd: #O) and: [aTerniLapilli isXsTurn] and: [aTerniLapilli OHasThreeInLine not] and: [aTerniLapilli XHasThreeInLine not]

	! !

!testRun: #TerniLapilliTests #test01 stamp: 'fr 11/1/2020 01:35:34'!
PASSED!

!testRun: #TerniLapilliTests #test02 stamp: 'fr 11/1/2020 01:35:34'!
PASSED!

!testRun: #TerniLapilliTests #test03 stamp: 'fr 11/1/2020 01:35:34'!
PASSED!

!testRun: #TerniLapilliTests #test04 stamp: 'fr 11/1/2020 01:35:34'!
PASSED!

!testRun: #TerniLapilliTests #test05 stamp: 'fr 11/1/2020 01:35:34'!
PASSED!

!testRun: #TerniLapilliTests #test06 stamp: 'fr 11/1/2020 01:35:34'!
PASSED!

!testRun: #TerniLapilliTests #test07 stamp: 'fr 11/1/2020 01:35:34'!
PASSED!

!testRun: #TerniLapilliTests #test08 stamp: 'fr 11/1/2020 01:35:34'!
PASSED!

!testRun: #TerniLapilliTests #test09 stamp: 'fr 11/1/2020 01:35:34'!
PASSED!

!testRun: #TerniLapilliTests #test10 stamp: 'fr 11/1/2020 01:35:34'!
PASSED!

!testRun: #TerniLapilliTests #test11 stamp: 'fr 11/1/2020 01:35:34'!
PASSED!

!testRun: #TerniLapilliTests #test12 stamp: 'fr 11/1/2020 01:35:34'!
PASSED!

!testRun: #TerniLapilliTests #test13 stamp: 'fr 11/1/2020 01:35:34'!
PASSED!

!testRun: #TerniLapilliTests #test14 stamp: 'fr 11/1/2020 01:35:34'!
PASSED!

!testRun: #TerniLapilliTests #test15 stamp: 'fr 11/1/2020 01:35:34'!
PASSED!

!testRun: #TerniLapilliTests #test16 stamp: 'fr 11/1/2020 01:35:34'!
PASSED!

!testRun: #TerniLapilliTests #test17 stamp: 'fr 11/1/2020 01:35:34'!
PASSED!

!testRun: #TerniLapilliTests #test18 stamp: 'fr 11/1/2020 01:35:34'!
PASSED!

!testRun: #TerniLapilliTests #test19 stamp: 'fr 11/1/2020 01:35:34'!
PASSED!

!testRun: #TerniLapilliTests #test20 stamp: 'fr 11/1/2020 01:35:34'!
PASSED!

!testRun: #TerniLapilliTests #test21 stamp: 'fr 11/1/2020 01:35:34'!
PASSED!

!testRun: #TerniLapilliTests #test22 stamp: 'fr 11/1/2020 01:35:34'!
PASSED!

!testRun: #TerniLapilliTests #test24 stamp: 'fr 11/1/2020 01:35:34'!
PASSED!

!testRun: #TerniLapilliTests #test25 stamp: 'fr 11/1/2020 01:35:34'!
PASSED!

!testRun: #TerniLapilliTests #test26 stamp: 'fr 11/1/2020 01:35:34'!
PASSED!

!testRun: #TerniLapilliTests #test27 stamp: 'fr 11/1/2020 01:35:34'!
PASSED!

!testRun: #TerniLapilliTests #test28 stamp: 'fr 11/1/2020 01:35:34'!
PASSED!

!testRun: #TerniLapilliTests #test29 stamp: 'fr 11/1/2020 01:35:34'!
PASSED!

!testRun: #TerniLapilliTests #test30 stamp: 'fr 11/1/2020 01:35:34'!
PASSED!

!testRun: #TerniLapilliTests #test31 stamp: 'fr 11/1/2020 01:35:34'!
PASSED!

!testRun: #TerniLapilliTests #test32 stamp: 'fr 11/1/2020 01:35:34'!
PASSED!

!testRun: #TerniLapilliTests #test33 stamp: 'fr 11/1/2020 01:35:34'!
PASSED!

!testRun: #TerniLapilliTests #test34 stamp: 'fr 11/1/2020 01:35:34'!
PASSED!

!testRun: #TerniLapilliTests #test35 stamp: 'fr 11/1/2020 01:35:34'!
PASSED!

!testRun: #TerniLapilliTests #test36 stamp: 'fr 11/1/2020 01:35:34'!
PASSED!

!testRun: #TerniLapilliTests #test37 stamp: 'fr 11/1/2020 01:35:34'!
PASSED!

!testRun: #TerniLapilliTests #test38 stamp: 'fr 11/1/2020 01:35:34'!
PASSED!

!testRun: #TerniLapilliTests #test39 stamp: 'fr 11/1/2020 01:35:34'!
PASSED!

!testRun: #TerniLapilliTests #test40 stamp: 'fr 11/1/2020 01:35:34'!
PASSED!

!testRun: #TerniLapilliTests #test41 stamp: 'fr 11/1/2020 01:35:34'!
PASSED!

----SNAPSHOT----(1 November 2020 01:36:22) CuisUniversity-4384.image priorSource: 17584871!
!TerniLapilliTests methodsFor: 'as yet unclassified' stamp: 'fr 11/1/2020 01:46:06'!
test42

	| terniLapilli |
	terniLapilli _ TerniLapilli new.
	
	self should: [			terniLapilli putXAt: 1 @ 1.
				terniLapilli putOAt: 1 @ 2.
				terniLapilli putXAt: 2 @ 1.
				terniLapilli putOAt: 2 @ 2.
				terniLapilli putXAt: 3 @ 2.
				terniLapilli putOAt: 3 @ 3.
				terniLapilli moveXFrom: 3@2 to: 3@1.
				terniLapilli moveOFrom: 3@3 to: 3@2.]  
		raise: Error
		withMessageText: TerniLapilli gameIsOverErrorDescription ! !
!TerniLapilliTests methodsFor: 'as yet unclassified' stamp: 'fr 11/1/2020 01:47:02' prior: 50881520!
test42

	| terniLapilli |
	terniLapilli _ TerniLapilli new.
	
	terniLapilli putXAt: 1 @ 1.
	terniLapilli putOAt: 1 @ 2.
	terniLapilli putXAt: 2 @ 1.
	terniLapilli putOAt: 2 @ 2.
	terniLapilli putXAt: 3 @ 2.
	terniLapilli putOAt: 3 @ 3.
	terniLapilli moveXFrom: 3@2 to: 3@1.
	
	self assert: (terniLapilli isXsTurn not and: [terniLapilli isOsTurn not])! !

!testRun: #TerniLapilliTests #test42 stamp: 'fr 11/1/2020 01:47:03'!
ERROR!

!testRun: #TerniLapilliTests #test42 stamp: 'fr 11/1/2020 01:47:47'!
ERROR!
!TerniLapilli methodsFor: 'game state' stamp: 'fr 11/1/2020 01:48:27' prior: 50870989!
isXsTurn
	(self hasOWon or: [self hasXWon]) ifTrue: [^false].
	^state isXsTurn! !
!TerniLapilli methodsFor: 'game state' stamp: 'fr 11/1/2020 01:48:31' prior: 50881556!
isXsTurn

	(self hasOWon or: [self hasXWon]) ifTrue: [^false].
	^state isXsTurn! !
!TerniLapilli methodsFor: 'game state' stamp: 'fr 11/1/2020 01:48:48' prior: 50870954!
isOsTurn

	(self hasOWon or: [self hasXWon]) ifTrue: [^false].
	^state isOsTurn ! !

!testRun: #TerniLapilliTests #test42 stamp: 'fr 11/1/2020 01:48:50'!
PASSED!

!testRun: #TerniLapilliTests #test01 stamp: 'fr 11/1/2020 01:48:50'!
PASSED!

!testRun: #TerniLapilliTests #test02 stamp: 'fr 11/1/2020 01:48:50'!
PASSED!

!testRun: #TerniLapilliTests #test03 stamp: 'fr 11/1/2020 01:48:50'!
PASSED!

!testRun: #TerniLapilliTests #test04 stamp: 'fr 11/1/2020 01:48:50'!
PASSED!

!testRun: #TerniLapilliTests #test05 stamp: 'fr 11/1/2020 01:48:50'!
PASSED!

!testRun: #TerniLapilliTests #test06 stamp: 'fr 11/1/2020 01:48:50'!
PASSED!

!testRun: #TerniLapilliTests #test07 stamp: 'fr 11/1/2020 01:48:50'!
PASSED!

!testRun: #TerniLapilliTests #test08 stamp: 'fr 11/1/2020 01:48:50'!
PASSED!

!testRun: #TerniLapilliTests #test09 stamp: 'fr 11/1/2020 01:48:50'!
PASSED!

!testRun: #TerniLapilliTests #test10 stamp: 'fr 11/1/2020 01:48:50'!
PASSED!

!testRun: #TerniLapilliTests #test11 stamp: 'fr 11/1/2020 01:48:50'!
PASSED!

!testRun: #TerniLapilliTests #test12 stamp: 'fr 11/1/2020 01:48:50'!
PASSED!

!testRun: #TerniLapilliTests #test13 stamp: 'fr 11/1/2020 01:48:50'!
PASSED!

!testRun: #TerniLapilliTests #test14 stamp: 'fr 11/1/2020 01:48:50'!
PASSED!

!testRun: #TerniLapilliTests #test15 stamp: 'fr 11/1/2020 01:48:50'!
PASSED!

!testRun: #TerniLapilliTests #test16 stamp: 'fr 11/1/2020 01:48:50'!
PASSED!

!testRun: #TerniLapilliTests #test17 stamp: 'fr 11/1/2020 01:48:50'!
PASSED!

!testRun: #TerniLapilliTests #test18 stamp: 'fr 11/1/2020 01:48:50'!
PASSED!

!testRun: #TerniLapilliTests #test19 stamp: 'fr 11/1/2020 01:48:50'!
PASSED!

!testRun: #TerniLapilliTests #test20 stamp: 'fr 11/1/2020 01:48:50'!
PASSED!

!testRun: #TerniLapilliTests #test21 stamp: 'fr 11/1/2020 01:48:50'!
PASSED!

!testRun: #TerniLapilliTests #test22 stamp: 'fr 11/1/2020 01:48:50'!
PASSED!

!testRun: #TerniLapilliTests #test24 stamp: 'fr 11/1/2020 01:48:50'!
PASSED!

!testRun: #TerniLapilliTests #test25 stamp: 'fr 11/1/2020 01:48:50'!
PASSED!

!testRun: #TerniLapilliTests #test26 stamp: 'fr 11/1/2020 01:48:50'!
PASSED!

!testRun: #TerniLapilliTests #test27 stamp: 'fr 11/1/2020 01:48:50'!
PASSED!

!testRun: #TerniLapilliTests #test28 stamp: 'fr 11/1/2020 01:48:50'!
PASSED!

!testRun: #TerniLapilliTests #test29 stamp: 'fr 11/1/2020 01:48:50'!
PASSED!

!testRun: #TerniLapilliTests #test30 stamp: 'fr 11/1/2020 01:48:50'!
PASSED!

!testRun: #TerniLapilliTests #test31 stamp: 'fr 11/1/2020 01:48:50'!
PASSED!

!testRun: #TerniLapilliTests #test32 stamp: 'fr 11/1/2020 01:48:50'!
PASSED!

!testRun: #TerniLapilliTests #test33 stamp: 'fr 11/1/2020 01:48:50'!
PASSED!

!testRun: #TerniLapilliTests #test34 stamp: 'fr 11/1/2020 01:48:50'!
PASSED!

!testRun: #TerniLapilliTests #test35 stamp: 'fr 11/1/2020 01:48:50'!
PASSED!

!testRun: #TerniLapilliTests #test36 stamp: 'fr 11/1/2020 01:48:50'!
PASSED!

!testRun: #TerniLapilliTests #test37 stamp: 'fr 11/1/2020 01:48:50'!
PASSED!

!testRun: #TerniLapilliTests #test38 stamp: 'fr 11/1/2020 01:48:50'!
PASSED!

!testRun: #TerniLapilliTests #test39 stamp: 'fr 11/1/2020 01:48:50'!
PASSED!

!testRun: #TerniLapilliTests #test40 stamp: 'fr 11/1/2020 01:48:50'!
PASSED!

!testRun: #TerniLapilliTests #test41 stamp: 'fr 11/1/2020 01:48:50'!
PASSED!

!testRun: #TerniLapilliTests #test42 stamp: 'fr 11/1/2020 01:48:50'!
PASSED!
!OWon methodsFor: 'as yet unclassified' stamp: 'fr 11/1/2020 01:49:09' overrides: 50871001!
isXsTurn

	^false! !
!OWon methodsFor: 'as yet unclassified' stamp: 'fr 11/1/2020 01:49:12' overrides: 50870996!
isOsTurn

	^false! !
!XWon methodsFor: 'as yet unclassified' stamp: 'fr 11/1/2020 01:49:24' overrides: 50871001!
isXsTurn

	^false! !
!XWon methodsFor: 'as yet unclassified' stamp: 'fr 11/1/2020 01:49:26' overrides: 50870996!
isOsTurn

	^false! !
!TerniLapilli methodsFor: 'game state' stamp: 'fr 11/1/2020 01:49:34' prior: 50881562!
isXsTurn

	^state isXsTurn! !
!TerniLapilli methodsFor: 'game state' stamp: 'fr 11/1/2020 01:49:37' prior: 50881568!
isOsTurn

	^state isOsTurn ! !

!testRun: #TerniLapilliTests #test01 stamp: 'fr 11/1/2020 01:49:42'!
PASSED!

!testRun: #TerniLapilliTests #test02 stamp: 'fr 11/1/2020 01:49:43'!
PASSED!

!testRun: #TerniLapilliTests #test03 stamp: 'fr 11/1/2020 01:49:43'!
PASSED!

!testRun: #TerniLapilliTests #test04 stamp: 'fr 11/1/2020 01:49:43'!
PASSED!

!testRun: #TerniLapilliTests #test05 stamp: 'fr 11/1/2020 01:49:43'!
PASSED!

!testRun: #TerniLapilliTests #test06 stamp: 'fr 11/1/2020 01:49:43'!
PASSED!

!testRun: #TerniLapilliTests #test07 stamp: 'fr 11/1/2020 01:49:43'!
PASSED!

!testRun: #TerniLapilliTests #test08 stamp: 'fr 11/1/2020 01:49:43'!
PASSED!

!testRun: #TerniLapilliTests #test09 stamp: 'fr 11/1/2020 01:49:43'!
PASSED!

!testRun: #TerniLapilliTests #test10 stamp: 'fr 11/1/2020 01:49:43'!
PASSED!

!testRun: #TerniLapilliTests #test11 stamp: 'fr 11/1/2020 01:49:43'!
PASSED!

!testRun: #TerniLapilliTests #test12 stamp: 'fr 11/1/2020 01:49:43'!
PASSED!

!testRun: #TerniLapilliTests #test13 stamp: 'fr 11/1/2020 01:49:43'!
PASSED!

!testRun: #TerniLapilliTests #test14 stamp: 'fr 11/1/2020 01:49:43'!
PASSED!

!testRun: #TerniLapilliTests #test15 stamp: 'fr 11/1/2020 01:49:43'!
PASSED!

!testRun: #TerniLapilliTests #test16 stamp: 'fr 11/1/2020 01:49:43'!
PASSED!

!testRun: #TerniLapilliTests #test17 stamp: 'fr 11/1/2020 01:49:43'!
PASSED!

!testRun: #TerniLapilliTests #test18 stamp: 'fr 11/1/2020 01:49:43'!
PASSED!

!testRun: #TerniLapilliTests #test19 stamp: 'fr 11/1/2020 01:49:43'!
PASSED!

!testRun: #TerniLapilliTests #test20 stamp: 'fr 11/1/2020 01:49:43'!
PASSED!

!testRun: #TerniLapilliTests #test21 stamp: 'fr 11/1/2020 01:49:43'!
PASSED!

!testRun: #TerniLapilliTests #test22 stamp: 'fr 11/1/2020 01:49:43'!
PASSED!

!testRun: #TerniLapilliTests #test24 stamp: 'fr 11/1/2020 01:49:43'!
PASSED!

!testRun: #TerniLapilliTests #test25 stamp: 'fr 11/1/2020 01:49:43'!
PASSED!

!testRun: #TerniLapilliTests #test26 stamp: 'fr 11/1/2020 01:49:43'!
PASSED!

!testRun: #TerniLapilliTests #test27 stamp: 'fr 11/1/2020 01:49:43'!
PASSED!

!testRun: #TerniLapilliTests #test28 stamp: 'fr 11/1/2020 01:49:43'!
PASSED!

!testRun: #TerniLapilliTests #test29 stamp: 'fr 11/1/2020 01:49:43'!
PASSED!

!testRun: #TerniLapilliTests #test30 stamp: 'fr 11/1/2020 01:49:43'!
PASSED!

!testRun: #TerniLapilliTests #test31 stamp: 'fr 11/1/2020 01:49:43'!
PASSED!

!testRun: #TerniLapilliTests #test32 stamp: 'fr 11/1/2020 01:49:43'!
PASSED!

!testRun: #TerniLapilliTests #test33 stamp: 'fr 11/1/2020 01:49:43'!
PASSED!

!testRun: #TerniLapilliTests #test34 stamp: 'fr 11/1/2020 01:49:43'!
PASSED!

!testRun: #TerniLapilliTests #test35 stamp: 'fr 11/1/2020 01:49:43'!
PASSED!

!testRun: #TerniLapilliTests #test36 stamp: 'fr 11/1/2020 01:49:43'!
PASSED!

!testRun: #TerniLapilliTests #test37 stamp: 'fr 11/1/2020 01:49:43'!
PASSED!

!testRun: #TerniLapilliTests #test38 stamp: 'fr 11/1/2020 01:49:43'!
PASSED!

!testRun: #TerniLapilliTests #test39 stamp: 'fr 11/1/2020 01:49:43'!
PASSED!

!testRun: #TerniLapilliTests #test40 stamp: 'fr 11/1/2020 01:49:43'!
PASSED!

!testRun: #TerniLapilliTests #test41 stamp: 'fr 11/1/2020 01:49:43'!
PASSED!

!testRun: #TerniLapilliTests #test42 stamp: 'fr 11/1/2020 01:49:43'!
PASSED!

----SNAPSHOT----(1 November 2020 01:49:59) CuisUniversity-4384.image priorSource: 17595716!

----QUIT----(1 November 2020 01:52:59) CuisUniversity-4384.image priorSource: 17604764!

----STARTUP---- (1 November 2020 05:04:41) as /home/fede/Documentos/Facultad/Inge1/Cuises/katas/linux64/CuisUniversity-4384.image!

!TerniLapilliTests methodsFor: 'as yet unclassified' stamp: 'fr 11/1/2020 19:47:14'!
test01XMovesFirstAndOSecond

	| terniLapilli |
	terniLapilli _ TerniLapilli new.
	terniLapilli putXAt: 1 @ 1.
	self assert:
		[terniLapilli isOsTurn and: [ terniLapilli isXsTurn not ]].! !

!methodRemoval: TerniLapilliTests #test01 stamp: 'fr 11/1/2020 19:47:14'!
test01

	| terniLapilli |
	terniLapilli _ TerniLapilli new.
	terniLapilli putXAt: 1 @ 1.
	self assert:
		[terniLapilli isOsTurn and: [ terniLapilli isXsTurn not ]].!
!TerniLapilliTests methodsFor: 'as yet unclassified' stamp: 'fr 11/1/2020 19:47:30'!
test01XMovesFirstAndOAfter

	| terniLapilli |
	terniLapilli _ TerniLapilli new.
	terniLapilli putXAt: 1 @ 1.
	self assert:
		[terniLapilli isOsTurn and: [ terniLapilli isXsTurn not ]].! !

!methodRemoval: TerniLapilliTests #test01XMovesFirstAndOSecond stamp: 'fr 11/1/2020 19:47:30'!
test01XMovesFirstAndOSecond

	| terniLapilli |
	terniLapilli _ TerniLapilli new.
	terniLapilli putXAt: 1 @ 1.
	self assert:
		[terniLapilli isOsTurn and: [ terniLapilli isXsTurn not ]].!
!TerniLapilliTests methodsFor: 'as yet unclassified' stamp: 'fr 11/1/2020 19:47:46'!
test02OMovesSecondAndXAfter

	| terniLapilli |
	terniLapilli _ TerniLapilli new.
	terniLapilli putXAt: 1 @ 1.
	terniLapilli putOAt: 1 @ 2.
	self assert:
		[terniLapilli isXsTurn and: [ terniLapilli isOsTurn not ]].! !

!methodRemoval: TerniLapilliTests #test02 stamp: 'fr 11/1/2020 19:47:46'!
test02

	| terniLapilli |
	terniLapilli _ TerniLapilli new.
	terniLapilli putXAt: 1 @ 1.
	terniLapilli putOAt: 1 @ 2.
	self assert:
		[terniLapilli isXsTurn and: [ terniLapilli isOsTurn not ]].!
!TerniLapilliTests methodsFor: 'as yet unclassified' stamp: 'fr 11/1/2020 19:48:15'!
test03ODoesNotMoveFirst

	| terniLapilli |
	terniLapilli _ TerniLapilli new.
	self should: 		[ terniLapilli putOAt: 1 @ 2.] 
		raise: Error  
		withMessageText: TerniLapilli playerXTurnErrorDescription! !

!methodRemoval: TerniLapilliTests #test03 stamp: 'fr 11/1/2020 19:48:15'!
test03

	| terniLapilli |
	terniLapilli _ TerniLapilli new.
	self should: 		[ terniLapilli putOAt: 1 @ 2.] 
		raise: Error  
		withMessageText: TerniLapilli playerXTurnErrorDescription!
!TerniLapilliTests methodsFor: 'as yet unclassified' stamp: 'fr 11/1/2020 19:48:42'!
test04APlayerCanNotMoveTwoTimesInARow

	| terniLapilli |
	terniLapilli _ TerniLapilli new.
	self should: 		[ 	terniLapilli putXAt: 1 @ 2.
				terniLapilli putXAt: 1 @ 1.] 
		raise: Error  
		withMessageText: TerniLapilli playerOTurnErrorDescription! !

!methodRemoval: TerniLapilliTests #test04 stamp: 'fr 11/1/2020 19:48:42'!
test04

	| terniLapilli |
	terniLapilli _ TerniLapilli new.
	self should: 		[ 	terniLapilli putXAt: 1 @ 2.
				terniLapilli putXAt: 1 @ 1.] 
		raise: Error  
		withMessageText: TerniLapilli playerOTurnErrorDescription!
!TerniLapilliTests methodsFor: 'as yet unclassified' stamp: 'fr 11/1/2020 19:49:11'!
test05XCanPlaceOnePieceCorrectly

	| terniLapilli |
	terniLapilli _ TerniLapilli new.
	terniLapilli putXAt: 1 @ 1.
	
	self assert: [terniLapilli hasXPieceAt: 1@1]! !

!methodRemoval: TerniLapilliTests #test05 stamp: 'fr 11/1/2020 19:49:11'!
test05

	| terniLapilli |
	terniLapilli _ TerniLapilli new.
	terniLapilli putXAt: 1 @ 1.
	
	self assert: [terniLapilli hasXPieceAt: 1@1]!
!TerniLapilliTests methodsFor: 'as yet unclassified' stamp: 'fr 11/1/2020 19:49:25'!
test06OCanPutOnePieceCorrectly

	| terniLapilli |
	terniLapilli _ TerniLapilli new.
	terniLapilli putXAt: 1 @ 1.
	terniLapilli putOAt: 1 @ 2.
	
	self assert: [terniLapilli hasOPieceAt: 1@2]! !

!methodRemoval: TerniLapilliTests #test06 stamp: 'fr 11/1/2020 19:49:25'!
test06

	| terniLapilli |
	terniLapilli _ TerniLapilli new.
	terniLapilli putXAt: 1 @ 1.
	terniLapilli putOAt: 1 @ 2.
	
	self assert: [terniLapilli hasOPieceAt: 1@2]!
!TerniLapilliTests methodsFor: 'as yet unclassified' stamp: 'fr 11/1/2020 19:49:32'!
test05XCanPutOnePieceCorrectly

	| terniLapilli |
	terniLapilli _ TerniLapilli new.
	terniLapilli putXAt: 1 @ 1.
	
	self assert: [terniLapilli hasXPieceAt: 1@1]! !

!methodRemoval: TerniLapilliTests #test05XCanPlaceOnePieceCorrectly stamp: 'fr 11/1/2020 19:49:32'!
test05XCanPlaceOnePieceCorrectly

	| terniLapilli |
	terniLapilli _ TerniLapilli new.
	terniLapilli putXAt: 1 @ 1.
	
	self assert: [terniLapilli hasXPieceAt: 1@1]!
!TerniLapilliTests methodsFor: 'as yet unclassified' stamp: 'fr 11/1/2020 19:50:46'!
test05PiecesAreFoundWhereXPutsThem

	| terniLapilli |
	terniLapilli _ TerniLapilli new.
	terniLapilli putXAt: 1 @ 1.
	
	self assert: [terniLapilli hasXPieceAt: 1@1]! !

!methodRemoval: TerniLapilliTests #test05XCanPutOnePieceCorrectly stamp: 'fr 11/1/2020 19:50:46'!
test05XCanPutOnePieceCorrectly

	| terniLapilli |
	terniLapilli _ TerniLapilli new.
	terniLapilli putXAt: 1 @ 1.
	
	self assert: [terniLapilli hasXPieceAt: 1@1]!
!TerniLapilliTests methodsFor: 'as yet unclassified' stamp: 'fr 11/1/2020 19:51:03'!
test06PiecesAreFoundWhereOPutsThem

	| terniLapilli |
	terniLapilli _ TerniLapilli new.
	terniLapilli putXAt: 1 @ 1.
	terniLapilli putOAt: 1 @ 2.
	
	self assert: [terniLapilli hasOPieceAt: 1@2]! !

!methodRemoval: TerniLapilliTests #test06OCanPutOnePieceCorrectly stamp: 'fr 11/1/2020 19:51:03'!
test06OCanPutOnePieceCorrectly

	| terniLapilli |
	terniLapilli _ TerniLapilli new.
	terniLapilli putXAt: 1 @ 1.
	terniLapilli putOAt: 1 @ 2.
	
	self assert: [terniLapilli hasOPieceAt: 1@2]!
!TerniLapilliTests methodsFor: 'as yet unclassified' stamp: 'fr 11/1/2020 19:51:39'!
test05XPieceIsWhereHePutsIt

	| terniLapilli |
	terniLapilli _ TerniLapilli new.
	terniLapilli putXAt: 1 @ 1.
	
	self assert: [terniLapilli hasXPieceAt: 1@1]! !

!methodRemoval: TerniLapilliTests #test05PiecesAreFoundWhereXPutsThem stamp: 'fr 11/1/2020 19:51:39'!
test05PiecesAreFoundWhereXPutsThem

	| terniLapilli |
	terniLapilli _ TerniLapilli new.
	terniLapilli putXAt: 1 @ 1.
	
	self assert: [terniLapilli hasXPieceAt: 1@1]!
!TerniLapilliTests methodsFor: 'as yet unclassified' stamp: 'fr 11/1/2020 19:51:56'!
test06OPieceIsWhereHePutsIt

	| terniLapilli |
	terniLapilli _ TerniLapilli new.
	terniLapilli putXAt: 1 @ 1.
	terniLapilli putOAt: 1 @ 2.
	
	self assert: [terniLapilli hasOPieceAt: 1@2]! !

!methodRemoval: TerniLapilliTests #test06PiecesAreFoundWhereOPutsThem stamp: 'fr 11/1/2020 19:51:56'!
test06PiecesAreFoundWhereOPutsThem

	| terniLapilli |
	terniLapilli _ TerniLapilli new.
	terniLapilli putXAt: 1 @ 1.
	terniLapilli putOAt: 1 @ 2.
	
	self assert: [terniLapilli hasOPieceAt: 1@2]!
!TerniLapilliTests methodsFor: 'as yet unclassified' stamp: 'fr 11/1/2020 19:52:11'!
test07XPieceIsNotWhereHeDoesNotPutIt

	| terniLapilli |
	terniLapilli _ TerniLapilli new.
	terniLapilli putXAt: 1 @ 2.
	
	self assert: [(terniLapilli hasXPieceAt: 1@1) not]! !

!methodRemoval: TerniLapilliTests #test07 stamp: 'fr 11/1/2020 19:52:11'!
test07

	| terniLapilli |
	terniLapilli _ TerniLapilli new.
	terniLapilli putXAt: 1 @ 2.
	
	self assert: [(terniLapilli hasXPieceAt: 1@1) not]!
!TerniLapilliTests methodsFor: 'as yet unclassified' stamp: 'fr 11/1/2020 19:52:28'!
test08OPieceIsNotWhereHeDoesNotPutIt

	| terniLapilli |
	terniLapilli _ TerniLapilli new.
	terniLapilli putXAt: 1 @ 1.
	terniLapilli putOAt: 1 @ 2.
	
	self assert: [(terniLapilli hasOPieceAt: 1@1) not]! !

!methodRemoval: TerniLapilliTests #test08 stamp: 'fr 11/1/2020 19:52:28'!
test08

	| terniLapilli |
	terniLapilli _ TerniLapilli new.
	terniLapilli putXAt: 1 @ 1.
	terniLapilli putOAt: 1 @ 2.
	
	self assert: [(terniLapilli hasOPieceAt: 1@1) not]!
!TerniLapilliTests methodsFor: 'as yet unclassified' stamp: 'fr 11/1/2020 19:52:56'!
test09XCanPlaceMoreThanOnePieceCorrectly

	| terniLapilli |
	terniLapilli _ TerniLapilli new.
	terniLapilli putXAt: 1 @ 1.
	terniLapilli putOAt: 1 @ 2.
	terniLapilli putXAt: 1 @ 3.
	
	self assert: [(terniLapilli hasXPieceAt: 1@1) and: [terniLapilli hasXPieceAt: 1@3]]! !

!methodRemoval: TerniLapilliTests #test09 stamp: 'fr 11/1/2020 19:52:56'!
test09

	| terniLapilli |
	terniLapilli _ TerniLapilli new.
	terniLapilli putXAt: 1 @ 1.
	terniLapilli putOAt: 1 @ 2.
	terniLapilli putXAt: 1 @ 3.
	
	self assert: [(terniLapilli hasXPieceAt: 1@1) and: [terniLapilli hasXPieceAt: 1@3]]!
!TerniLapilliTests methodsFor: 'as yet unclassified' stamp: 'fr 11/1/2020 19:53:08'!
test10OCanPlaceMoreThanOnePieceCorrectly

	| terniLapilli |
	terniLapilli _ TerniLapilli new.
	terniLapilli putXAt: 1 @ 1.
	terniLapilli putOAt: 1 @ 2.
	terniLapilli putXAt: 1 @ 3.
	terniLapilli putOAt: 2 @ 1.
	
	self assert: [(terniLapilli hasOPieceAt: 1@2) and: [terniLapilli hasOPieceAt: 2@1]]! !

!methodRemoval: TerniLapilliTests #test10 stamp: 'fr 11/1/2020 19:53:08'!
test10

	| terniLapilli |
	terniLapilli _ TerniLapilli new.
	terniLapilli putXAt: 1 @ 1.
	terniLapilli putOAt: 1 @ 2.
	terniLapilli putXAt: 1 @ 3.
	terniLapilli putOAt: 2 @ 1.
	
	self assert: [(terniLapilli hasOPieceAt: 1@2) and: [terniLapilli hasOPieceAt: 2@1]]!
!TerniLapilliTests methodsFor: 'as yet unclassified' stamp: 'fr 11/1/2020 19:54:06'!
test11OCanNotPutAPieceInAnOccupiedPosition

	| terniLapilli |
	terniLapilli _ TerniLapilli new.	

	self should: [			terniLapilli putXAt: 1 @ 1.
				terniLapilli putOAt: 1 @ 1. ]
		raise: Error
		withMessageText: TerniLapilli positionAlreadyHoldsAPieceErrorDescription! !

!methodRemoval: TerniLapilliTests #test11 stamp: 'fr 11/1/2020 19:54:06'!
test11

	| terniLapilli |
	terniLapilli _ TerniLapilli new.	

	self should: [			terniLapilli putXAt: 1 @ 1.
				terniLapilli putOAt: 1 @ 1. ]
		raise: Error
		withMessageText: TerniLapilli positionAlreadyHoldsAPieceErrorDescription!
!TerniLapilliTests methodsFor: 'as yet unclassified' stamp: 'fr 11/1/2020 19:54:24'!
test12XCanNotPutAPieceInAnOccupiedPosition

	| terniLapilli |
	terniLapilli _ TerniLapilli new.	

	self should: [			terniLapilli putXAt: 1 @ 1.
				terniLapilli putOAt: 1 @ 2.
				terniLapilli putXAt: 1 @ 2. ]
		raise: Error
		withMessageText: TerniLapilli positionAlreadyHoldsAPieceErrorDescription! !

!methodRemoval: TerniLapilliTests #test12 stamp: 'fr 11/1/2020 19:54:24'!
test12

	| terniLapilli |
	terniLapilli _ TerniLapilli new.	

	self should: [			terniLapilli putXAt: 1 @ 1.
				terniLapilli putOAt: 1 @ 2.
				terniLapilli putXAt: 1 @ 2. ]
		raise: Error
		withMessageText: TerniLapilli positionAlreadyHoldsAPieceErrorDescription!
!TerniLapilliTests methodsFor: 'as yet unclassified' stamp: 'fr 11/1/2020 19:54:57'!
test13XCanNotPutAPieceOutOfBounds

	| terniLapilli |
	terniLapilli _ TerniLapilli new.
	self
		should: [ terniLapilli putXAt: 1 @ 5 ]
		raise: Error
		withMessageText: TerniLapilli positionOutOfBoundsErrorDescription.! !

!methodRemoval: TerniLapilliTests #test13 stamp: 'fr 11/1/2020 19:54:57'!
test13

	| terniLapilli |
	terniLapilli _ TerniLapilli new.
	self
		should: [ terniLapilli putXAt: 1 @ 5 ]
		raise: Error
		withMessageText: TerniLapilli positionOutOfBoundsErrorDescription.!
!TerniLapilliTests methodsFor: 'as yet unclassified' stamp: 'fr 11/1/2020 19:55:11'!
test14OCanNotPutAPieceOutOfBounds

	| terniLapilli |
	terniLapilli _ TerniLapilli new.
	self
		should: [ 		terniLapilli putXAt: 1 @ 1.
				terniLapilli putOAt: 1 @ 5. ]
		raise: Error
		withMessageText: TerniLapilli positionOutOfBoundsErrorDescription.! !

!methodRemoval: TerniLapilliTests #test14 stamp: 'fr 11/1/2020 19:55:11'!
test14

	| terniLapilli |
	terniLapilli _ TerniLapilli new.
	self
		should: [ 		terniLapilli putXAt: 1 @ 1.
				terniLapilli putOAt: 1 @ 5. ]
		raise: Error
		withMessageText: TerniLapilli positionOutOfBoundsErrorDescription.!
!TerniLapilliTests methodsFor: 'as yet unclassified' stamp: 'fr 11/1/2020 19:55:47'!
test15XCanNotPutMoreThanThreePieces

	| terniLapilli |
	terniLapilli _ TerniLapilli new.
	self
		should: [ 		terniLapilli putXAt: 1 @ 1.
				terniLapilli putOAt: 1 @ 2.
				terniLapilli putXAt: 1 @ 3.
				terniLapilli putOAt: 2 @ 1.
				terniLapilli putXAt: 2 @ 2.
				terniLapilli putOAt: 2 @ 3.
				terniLapilli putXAt: 3 @ 2.
				 ]
		raise: Error
		withMessageText: TerniLapilli piecesLimitExceededErrorDescription.! !

!methodRemoval: TerniLapilliTests #test16 stamp: 'fr 11/1/2020 19:55:47'!
test16

	| terniLapilli |
	terniLapilli _ TerniLapilli new.
	self
		should: [ 		terniLapilli putXAt: 1 @ 1.
				terniLapilli putOAt: 1 @ 2.
				terniLapilli putXAt: 1 @ 3.
				terniLapilli putOAt: 2 @ 1.
				terniLapilli putXAt: 2 @ 2.
				terniLapilli putOAt: 2 @ 3.
				terniLapilli putXAt: 3 @ 2.
				 ]
		raise: Error
		withMessageText: TerniLapilli piecesLimitExceededErrorDescription.!
!TerniLapilliTests methodsFor: 'as yet unclassified' stamp: 'fr 11/1/2020 19:56:02'!
test16OCanNotPutMoreThanThreePieces

	| terniLapilli |
	terniLapilli _ TerniLapilli new.
	self
		should: [ 		terniLapilli putXAt: 1 @ 1.
				terniLapilli putOAt: 1 @ 3.
				terniLapilli putXAt: 2 @ 1.
				terniLapilli putOAt: 2 @ 2.
				terniLapilli putXAt: 2 @ 3.
				terniLapilli putOAt: 3 @ 2.
				terniLapilli moveXFrom: 1@1 to: 1@2.
				terniLapilli putOAt: 3 @ 3.
				 ]
		raise: Error
		withMessageText: TerniLapilli piecesLimitExceededErrorDescription.! !

!methodRemoval: TerniLapilliTests #test15 stamp: 'fr 11/1/2020 19:56:02'!
test15

	| terniLapilli |
	terniLapilli _ TerniLapilli new.
	self
		should: [ 		terniLapilli putXAt: 1 @ 1.
				terniLapilli putOAt: 1 @ 3.
				terniLapilli putXAt: 2 @ 1.
				terniLapilli putOAt: 2 @ 2.
				terniLapilli putXAt: 2 @ 3.
				terniLapilli putOAt: 3 @ 2.
				terniLapilli moveXFrom: 1@1 to: 1@2.
				terniLapilli putOAt: 3 @ 3.
				 ]
		raise: Error
		withMessageText: TerniLapilli piecesLimitExceededErrorDescription.!
!TerniLapilliTests methodsFor: 'as yet unclassified' stamp: 'fr 11/1/2020 20:00:13'!
test17WhenXMovesAPieceItIsAtTheNewPositionAndNotAtThePreviousOne

	| terniLapilli |
	terniLapilli _ TerniLapilli new.
	terniLapilli putXAt: 1 @ 1 
			 ;putOAt: 1 @ 3
			 ;putXAt: 2 @ 1
			 ;putOAt: 2 @ 2
			 ;putXAt: 2 @ 3
			 ;putOAt: 3 @ 2
			 ;moveXFrom: 1@1 to: 1@2.
			
	self assert: [(terniLapilli hasXPieceAt: 1@2) and: [(terniLapilli hasXPieceAt: 1@1) not]]! !

!methodRemoval: TerniLapilliTests #test17 stamp: 'fr 11/1/2020 20:00:13'!
test17

	| terniLapilli |
	terniLapilli _ TerniLapilli new.
	terniLapilli putXAt: 1 @ 1 
			 ;putOAt: 1 @ 3
			 ;putXAt: 2 @ 1
			 ;putOAt: 2 @ 2
			 ;putXAt: 2 @ 3
			 ;putOAt: 3 @ 2
			 ;moveXFrom: 1@1 to: 1@2.
			
	self assert: [(terniLapilli hasXPieceAt: 1@2) and: [(terniLapilli hasXPieceAt: 1@1) not]]!
!TerniLapilliTests methodsFor: 'as yet unclassified' stamp: 'fr 11/1/2020 20:00:46'!
test18WhenOMovesAPieceItIsAtTheNewPositionAndNotAtThePreviousOne

	| terniLapilli |
	terniLapilli _ TerniLapilli new.
	terniLapilli putXAt: 1 @ 1 
			 ;putOAt: 1 @ 3
			 ;putXAt: 2 @ 1
			 ;putOAt: 2 @ 2
			 ;putXAt: 2 @ 3
			 ;putOAt: 3 @ 2
			 ;moveXFrom: 1@1 to: 1@2
			 ;moveOFrom: 3@2 to: 3@3.
			
	self assert: [(terniLapilli hasOPieceAt: 3@3) and: [(terniLapilli hasXPieceAt: 3@2) not]]! !

!methodRemoval: TerniLapilliTests #test18 stamp: 'fr 11/1/2020 20:00:46'!
test18

	| terniLapilli |
	terniLapilli _ TerniLapilli new.
	terniLapilli putXAt: 1 @ 1 
			 ;putOAt: 1 @ 3
			 ;putXAt: 2 @ 1
			 ;putOAt: 2 @ 2
			 ;putXAt: 2 @ 3
			 ;putOAt: 3 @ 2
			 ;moveXFrom: 1@1 to: 1@2
			 ;moveOFrom: 3@2 to: 3@3.
			
	self assert: [(terniLapilli hasOPieceAt: 3@3) and: [(terniLapilli hasXPieceAt: 3@2) not]]!
!TerniLapilliTests methodsFor: 'as yet unclassified' stamp: 'fr 11/1/2020 20:01:08'!
test19XCanNotMoveBeforeAddingThreePieces

	| terniLapilli |
	terniLapilli _ TerniLapilli new.
		
	self  should: [terniLapilli moveXFrom: 1@1 to: 1@2.] 
		raise: Error 
		withMessageText: TerniLapilli canNotMoveBeforeAddingThreePiecesErrorDescription! !

!methodRemoval: TerniLapilliTests #test19 stamp: 'fr 11/1/2020 20:01:08'!
test19

	| terniLapilli |
	terniLapilli _ TerniLapilli new.
		
	self  should: [terniLapilli moveXFrom: 1@1 to: 1@2.] 
		raise: Error 
		withMessageText: TerniLapilli canNotMoveBeforeAddingThreePiecesErrorDescription!
!TerniLapilliTests methodsFor: 'as yet unclassified' stamp: 'fr 11/1/2020 20:01:21'!
test20OCanNotMoveBeforeAddingThreePieces

	| terniLapilli |
	terniLapilli _ TerniLapilli new.
		
	self  should: [terniLapilli putXAt: 1@1 ;moveOFrom: 1@1 to: 1@2.] 
		raise: Error 
		withMessageText: TerniLapilli canNotMoveBeforeAddingThreePiecesErrorDescription! !

!methodRemoval: TerniLapilliTests #test20 stamp: 'fr 11/1/2020 20:01:21'!
test20

	| terniLapilli |
	terniLapilli _ TerniLapilli new.
		
	self  should: [terniLapilli putXAt: 1@1 ;moveOFrom: 1@1 to: 1@2.] 
		raise: Error 
		withMessageText: TerniLapilli canNotMoveBeforeAddingThreePiecesErrorDescription!
!TerniLapilliTests methodsFor: 'as yet unclassified' stamp: 'fr 11/1/2020 20:01:50'!
test21XCanNotMoveFromAPositionThatIsNotUnderHisControl

	| terniLapilli |
	terniLapilli _ TerniLapilli new.
		
	self  should: [			terniLapilli putXAt: 1 @ 1 
						 ;putOAt: 1 @ 3
						 ;putXAt: 2 @ 1
						 ;putOAt: 2 @ 2
						 ;putXAt: 2 @ 3
						 ;putOAt: 3 @ 2
						 ;moveXFrom: 3@2 to: 3@1.] 
		raise: Error 
		withMessageText: TerniLapilli positionIsNotUnderPlayersControlErrorDescription ! !

!methodRemoval: TerniLapilliTests #test21 stamp: 'fr 11/1/2020 20:01:50'!
test21

	| terniLapilli |
	terniLapilli _ TerniLapilli new.
		
	self  should: [			terniLapilli putXAt: 1 @ 1 
						 ;putOAt: 1 @ 3
						 ;putXAt: 2 @ 1
						 ;putOAt: 2 @ 2
						 ;putXAt: 2 @ 3
						 ;putOAt: 3 @ 2
						 ;moveXFrom: 3@2 to: 3@1.] 
		raise: Error 
		withMessageText: TerniLapilli positionIsNotUnderPlayersControlErrorDescription !
!TerniLapilliTests methodsFor: 'as yet unclassified' stamp: 'fr 11/1/2020 20:02:12'!
test22OCanNotMoveFromAPositionThatIsNotUnderHisControl

	| terniLapilli |
	terniLapilli _ TerniLapilli new.
		
	self  should: [			terniLapilli putXAt: 1 @ 1 
						 ;putOAt: 1 @ 3
						 ;putXAt: 2 @ 1
						 ;putOAt: 2 @ 2
						 ;putXAt: 2 @ 3
						 ;putOAt: 3 @ 3
						 ;moveXFrom: 1@1 to: 1@2
						 ;moveOFrom: 3@2 to: 3@1.] 
		raise: Error 
		withMessageText: TerniLapilli positionIsNotUnderPlayersControlErrorDescription! !

!methodRemoval: TerniLapilliTests #test22 stamp: 'fr 11/1/2020 20:02:12'!
test22

	| terniLapilli |
	terniLapilli _ TerniLapilli new.
		
	self  should: [			terniLapilli putXAt: 1 @ 1 
						 ;putOAt: 1 @ 3
						 ;putXAt: 2 @ 1
						 ;putOAt: 2 @ 2
						 ;putXAt: 2 @ 3
						 ;putOAt: 3 @ 3
						 ;moveXFrom: 1@1 to: 1@2
						 ;moveOFrom: 3@2 to: 3@1.] 
		raise: Error 
		withMessageText: TerniLapilli positionIsNotUnderPlayersControlErrorDescription!
!TerniLapilliTests methodsFor: 'as yet unclassified' stamp: 'fr 11/1/2020 20:03:08'!
test24XCanNotMoveFromAnOutOfBoundsPosition

	| terniLapilli |
	terniLapilli _ TerniLapilli new.
		
	self  should: [			terniLapilli putXAt: 1 @ 1 
						 ;putOAt: 1 @ 3
						 ;putXAt: 2 @ 1
						 ;putOAt: 2 @ 2
						 ;putXAt: 2 @ 3
						 ;putOAt: 3 @ 2
						 ;moveXFrom: 3@4 to: 3@3.] 
		raise: Error 
		withMessageText: TerniLapilli positionOutOfBoundsErrorDescription ! !

!methodRemoval: TerniLapilliTests #test24 stamp: 'fr 11/1/2020 20:03:08'!
test24

	| terniLapilli |
	terniLapilli _ TerniLapilli new.
		
	self  should: [			terniLapilli putXAt: 1 @ 1 
						 ;putOAt: 1 @ 3
						 ;putXAt: 2 @ 1
						 ;putOAt: 2 @ 2
						 ;putXAt: 2 @ 3
						 ;putOAt: 3 @ 2
						 ;moveXFrom: 3@4 to: 3@3.] 
		raise: Error 
		withMessageText: TerniLapilli positionOutOfBoundsErrorDescription !
!TerniLapilliTests methodsFor: 'as yet unclassified' stamp: 'fr 11/1/2020 20:03:36'!
test25OCanNotMoveFromAnOutOfBoundsPosition

	| terniLapilli |
	terniLapilli _ TerniLapilli new.
		
	self  should: [			terniLapilli putXAt: 1 @ 1 
						 ;putOAt: 1 @ 3
						 ;putXAt: 2 @ 1
						 ;putOAt: 2 @ 2
						 ;putXAt: 2 @ 3
						 ;putOAt: 3 @ 2
						 ;moveXFrom: 1@1 to: 1@2
						 ;moveOFrom: 2@6 to: 3@3.] 
		raise: Error 
		withMessageText: TerniLapilli positionOutOfBoundsErrorDescription ! !

!methodRemoval: TerniLapilliTests #test25 stamp: 'fr 11/1/2020 20:03:36'!
test25

	| terniLapilli |
	terniLapilli _ TerniLapilli new.
		
	self  should: [			terniLapilli putXAt: 1 @ 1 
						 ;putOAt: 1 @ 3
						 ;putXAt: 2 @ 1
						 ;putOAt: 2 @ 2
						 ;putXAt: 2 @ 3
						 ;putOAt: 3 @ 2
						 ;moveXFrom: 1@1 to: 1@2
						 ;moveOFrom: 2@6 to: 3@3.] 
		raise: Error 
		withMessageText: TerniLapilli positionOutOfBoundsErrorDescription !
!TerniLapilliTests methodsFor: 'as yet unclassified' stamp: 'fr 11/1/2020 20:03:52'!
test26XCanNotMoveToAnOutOfBoundsPosition

	| terniLapilli |
	terniLapilli _ TerniLapilli new.
		
	self  should: [			terniLapilli putXAt: 1 @ 1 
						 ;putOAt: 1 @ 3
						 ;putXAt: 2 @ 1
						 ;putOAt: 2 @ 2
						 ;putXAt: 2 @ 3
						 ;putOAt: 3 @ 2
						 ;moveXFrom: 1@1 to: 0@1.] 
		raise: Error 
		withMessageText: TerniLapilli positionOutOfBoundsErrorDescription ! !

!methodRemoval: TerniLapilliTests #test26 stamp: 'fr 11/1/2020 20:03:52'!
test26

	| terniLapilli |
	terniLapilli _ TerniLapilli new.
		
	self  should: [			terniLapilli putXAt: 1 @ 1 
						 ;putOAt: 1 @ 3
						 ;putXAt: 2 @ 1
						 ;putOAt: 2 @ 2
						 ;putXAt: 2 @ 3
						 ;putOAt: 3 @ 2
						 ;moveXFrom: 1@1 to: 0@1.] 
		raise: Error 
		withMessageText: TerniLapilli positionOutOfBoundsErrorDescription !
!TerniLapilliTests methodsFor: 'as yet unclassified' stamp: 'fr 11/1/2020 20:04:00'!
test23XCanNotMoveFromAnOutOfBoundsPosition

	| terniLapilli |
	terniLapilli _ TerniLapilli new.
		
	self  should: [			terniLapilli putXAt: 1 @ 1 
						 ;putOAt: 1 @ 3
						 ;putXAt: 2 @ 1
						 ;putOAt: 2 @ 2
						 ;putXAt: 2 @ 3
						 ;putOAt: 3 @ 2
						 ;moveXFrom: 3@4 to: 3@3.] 
		raise: Error 
		withMessageText: TerniLapilli positionOutOfBoundsErrorDescription ! !

!methodRemoval: TerniLapilliTests #test24XCanNotMoveFromAnOutOfBoundsPosition stamp: 'fr 11/1/2020 20:04:00'!
test24XCanNotMoveFromAnOutOfBoundsPosition

	| terniLapilli |
	terniLapilli _ TerniLapilli new.
		
	self  should: [			terniLapilli putXAt: 1 @ 1 
						 ;putOAt: 1 @ 3
						 ;putXAt: 2 @ 1
						 ;putOAt: 2 @ 2
						 ;putXAt: 2 @ 3
						 ;putOAt: 3 @ 2
						 ;moveXFrom: 3@4 to: 3@3.] 
		raise: Error 
		withMessageText: TerniLapilli positionOutOfBoundsErrorDescription !
!TerniLapilliTests methodsFor: 'as yet unclassified' stamp: 'fr 11/1/2020 20:04:04'!
test24OCanNotMoveFromAnOutOfBoundsPosition

	| terniLapilli |
	terniLapilli _ TerniLapilli new.
		
	self  should: [			terniLapilli putXAt: 1 @ 1 
						 ;putOAt: 1 @ 3
						 ;putXAt: 2 @ 1
						 ;putOAt: 2 @ 2
						 ;putXAt: 2 @ 3
						 ;putOAt: 3 @ 2
						 ;moveXFrom: 1@1 to: 1@2
						 ;moveOFrom: 2@6 to: 3@3.] 
		raise: Error 
		withMessageText: TerniLapilli positionOutOfBoundsErrorDescription ! !

!methodRemoval: TerniLapilliTests #test25OCanNotMoveFromAnOutOfBoundsPosition stamp: 'fr 11/1/2020 20:04:04'!
test25OCanNotMoveFromAnOutOfBoundsPosition

	| terniLapilli |
	terniLapilli _ TerniLapilli new.
		
	self  should: [			terniLapilli putXAt: 1 @ 1 
						 ;putOAt: 1 @ 3
						 ;putXAt: 2 @ 1
						 ;putOAt: 2 @ 2
						 ;putXAt: 2 @ 3
						 ;putOAt: 3 @ 2
						 ;moveXFrom: 1@1 to: 1@2
						 ;moveOFrom: 2@6 to: 3@3.] 
		raise: Error 
		withMessageText: TerniLapilli positionOutOfBoundsErrorDescription !
!TerniLapilliTests methodsFor: 'as yet unclassified' stamp: 'fr 11/1/2020 20:04:08'!
test25XCanNotMoveToAnOutOfBoundsPosition

	| terniLapilli |
	terniLapilli _ TerniLapilli new.
		
	self  should: [			terniLapilli putXAt: 1 @ 1 
						 ;putOAt: 1 @ 3
						 ;putXAt: 2 @ 1
						 ;putOAt: 2 @ 2
						 ;putXAt: 2 @ 3
						 ;putOAt: 3 @ 2
						 ;moveXFrom: 1@1 to: 0@1.] 
		raise: Error 
		withMessageText: TerniLapilli positionOutOfBoundsErrorDescription ! !

!methodRemoval: TerniLapilliTests #test26XCanNotMoveToAnOutOfBoundsPosition stamp: 'fr 11/1/2020 20:04:08'!
test26XCanNotMoveToAnOutOfBoundsPosition

	| terniLapilli |
	terniLapilli _ TerniLapilli new.
		
	self  should: [			terniLapilli putXAt: 1 @ 1 
						 ;putOAt: 1 @ 3
						 ;putXAt: 2 @ 1
						 ;putOAt: 2 @ 2
						 ;putXAt: 2 @ 3
						 ;putOAt: 3 @ 2
						 ;moveXFrom: 1@1 to: 0@1.] 
		raise: Error 
		withMessageText: TerniLapilli positionOutOfBoundsErrorDescription !
!TerniLapilliTests methodsFor: 'as yet unclassified' stamp: 'fr 11/1/2020 20:04:22'!
test27OCanNotMoveToAnOutOfBoundsPosition

	| terniLapilli |
	terniLapilli _ TerniLapilli new.
		
	self  should: [			terniLapilli putXAt: 1 @ 1 
						 ;putOAt: 1 @ 3
						 ;putXAt: 2 @ 1
						 ;putOAt: 2 @ 2
						 ;putXAt: 2 @ 3
						 ;putOAt: 3 @ 2
						 ;moveXFrom: 1@1 to: 1@2
						 ;moveOFrom: 3@2 to: 4@2.] 
		raise: Error 
		withMessageText: TerniLapilli positionOutOfBoundsErrorDescription ! !

!methodRemoval: TerniLapilliTests #test27 stamp: 'fr 11/1/2020 20:04:22'!
test27

	| terniLapilli |
	terniLapilli _ TerniLapilli new.
		
	self  should: [			terniLapilli putXAt: 1 @ 1 
						 ;putOAt: 1 @ 3
						 ;putXAt: 2 @ 1
						 ;putOAt: 2 @ 2
						 ;putXAt: 2 @ 3
						 ;putOAt: 3 @ 2
						 ;moveXFrom: 1@1 to: 1@2
						 ;moveOFrom: 3@2 to: 4@2.] 
		raise: Error 
		withMessageText: TerniLapilli positionOutOfBoundsErrorDescription !
!TerniLapilliTests methodsFor: 'as yet unclassified' stamp: 'fr 11/1/2020 20:04:40'!
test28XCanNotMoveToAnOccupiedPosition

	| terniLapilli |
	terniLapilli _ TerniLapilli new.
		
	self  should: [			terniLapilli putXAt: 1 @ 1 
						 ;putOAt: 1 @ 3
						 ;putXAt: 2 @ 1
						 ;putOAt: 2 @ 2
						 ;putXAt: 2 @ 3
						 ;putOAt: 3 @ 2
						 ;moveXFrom: 1@1 to: 2@2.] 
		raise: Error 
		withMessageText: TerniLapilli positionAlreadyHoldsAPieceErrorDescription ! !

!methodRemoval: TerniLapilliTests #test28 stamp: 'fr 11/1/2020 20:04:40'!
test28

	| terniLapilli |
	terniLapilli _ TerniLapilli new.
		
	self  should: [			terniLapilli putXAt: 1 @ 1 
						 ;putOAt: 1 @ 3
						 ;putXAt: 2 @ 1
						 ;putOAt: 2 @ 2
						 ;putXAt: 2 @ 3
						 ;putOAt: 3 @ 2
						 ;moveXFrom: 1@1 to: 2@2.] 
		raise: Error 
		withMessageText: TerniLapilli positionAlreadyHoldsAPieceErrorDescription !
!TerniLapilliTests methodsFor: 'as yet unclassified' stamp: 'fr 11/1/2020 20:05:01'!
test28OCanNotMoveToAnOccupiedPosition

	| terniLapilli |
	terniLapilli _ TerniLapilli new.
		
	self  should: [			terniLapilli putXAt: 1 @ 1 
						 ;putOAt: 1 @ 3
						 ;putXAt: 2 @ 1
						 ;putOAt: 2 @ 2
						 ;putXAt: 2 @ 3
						 ;putOAt: 3 @ 2
						 ;moveXFrom: 1@1 to: 1@2
						 ;moveOFrom: 1@3 to: 1@2.] 
		raise: Error 
		withMessageText: TerniLapilli positionAlreadyHoldsAPieceErrorDescription ! !

!methodRemoval: TerniLapilliTests #test29 stamp: 'fr 11/1/2020 20:05:01'!
test29

	| terniLapilli |
	terniLapilli _ TerniLapilli new.
		
	self  should: [			terniLapilli putXAt: 1 @ 1 
						 ;putOAt: 1 @ 3
						 ;putXAt: 2 @ 1
						 ;putOAt: 2 @ 2
						 ;putXAt: 2 @ 3
						 ;putOAt: 3 @ 2
						 ;moveXFrom: 1@1 to: 1@2
						 ;moveOFrom: 1@3 to: 1@2.] 
		raise: Error 
		withMessageText: TerniLapilli positionAlreadyHoldsAPieceErrorDescription !
!TerniLapilliTests methodsFor: 'as yet unclassified' stamp: 'fr 11/1/2020 20:05:10'!
test26OCanNotMoveToAnOutOfBoundsPosition

	| terniLapilli |
	terniLapilli _ TerniLapilli new.
		
	self  should: [			terniLapilli putXAt: 1 @ 1 
						 ;putOAt: 1 @ 3
						 ;putXAt: 2 @ 1
						 ;putOAt: 2 @ 2
						 ;putXAt: 2 @ 3
						 ;putOAt: 3 @ 2
						 ;moveXFrom: 1@1 to: 1@2
						 ;moveOFrom: 3@2 to: 4@2.] 
		raise: Error 
		withMessageText: TerniLapilli positionOutOfBoundsErrorDescription ! !

!methodRemoval: TerniLapilliTests #test27OCanNotMoveToAnOutOfBoundsPosition stamp: 'fr 11/1/2020 20:05:10'!
test27OCanNotMoveToAnOutOfBoundsPosition

	| terniLapilli |
	terniLapilli _ TerniLapilli new.
		
	self  should: [			terniLapilli putXAt: 1 @ 1 
						 ;putOAt: 1 @ 3
						 ;putXAt: 2 @ 1
						 ;putOAt: 2 @ 2
						 ;putXAt: 2 @ 3
						 ;putOAt: 3 @ 2
						 ;moveXFrom: 1@1 to: 1@2
						 ;moveOFrom: 3@2 to: 4@2.] 
		raise: Error 
		withMessageText: TerniLapilli positionOutOfBoundsErrorDescription !
!TerniLapilliTests methodsFor: 'as yet unclassified' stamp: 'fr 11/1/2020 20:05:18'!
test27XCanNotMoveToAnOccupiedPosition

	| terniLapilli |
	terniLapilli _ TerniLapilli new.
		
	self  should: [			terniLapilli putXAt: 1 @ 1 
						 ;putOAt: 1 @ 3
						 ;putXAt: 2 @ 1
						 ;putOAt: 2 @ 2
						 ;putXAt: 2 @ 3
						 ;putOAt: 3 @ 2
						 ;moveXFrom: 1@1 to: 2@2.] 
		raise: Error 
		withMessageText: TerniLapilli positionAlreadyHoldsAPieceErrorDescription ! !

!methodRemoval: TerniLapilliTests #test28XCanNotMoveToAnOccupiedPosition stamp: 'fr 11/1/2020 20:05:18'!
test28XCanNotMoveToAnOccupiedPosition

	| terniLapilli |
	terniLapilli _ TerniLapilli new.
		
	self  should: [			terniLapilli putXAt: 1 @ 1 
						 ;putOAt: 1 @ 3
						 ;putXAt: 2 @ 1
						 ;putOAt: 2 @ 2
						 ;putXAt: 2 @ 3
						 ;putOAt: 3 @ 2
						 ;moveXFrom: 1@1 to: 2@2.] 
		raise: Error 
		withMessageText: TerniLapilli positionAlreadyHoldsAPieceErrorDescription !

!testRun: #TerniLapilliTests #test30 stamp: 'fr 11/1/2020 20:05:39'!
PASSED!
!TerniLapilli methodsFor: 'game checks' stamp: 'fr 11/1/2020 20:06:49'!
failIfItIsTooFarToMoveFrom: currentPosition to: newPosition

	(self itIsValidToGoFrom: currentPosition to: newPosition) ifFalse: [self canNotMoveMoreThanOnePlaceAfarError].
	
	! !
!TerniLapilli methodsFor: 'as yet unclassified' stamp: 'fr 11/1/2020 20:06:49' prior: 50880672!
safeMoveXFrom: currentPosition to: newPosition
	
	self failIfPositionOutOfBounds: currentPosition.	
	self failIfItIsTooFarToMoveFrom: currentPosition to: newPosition.

	self removeXPosition: currentPosition.
	self safePutXAt: newPosition 
	
	! !
!TerniLapilli methodsFor: 'as yet unclassified' stamp: 'fr 11/1/2020 20:06:49' prior: 50880661!
safeMoveOFrom: currentPosition to: newPosition 
	
	self failIfPositionOutOfBounds: currentPosition.
	self failIfItIsTooFarToMoveFrom: currentPosition to: newPosition.

	self removeOPosition: currentPosition.
	self safePutOAt: newPosition 
! !

!methodRemoval: TerniLapilli #failIfItIsNotPossibleToMoveFrom:to: stamp: 'fr 11/1/2020 20:06:49'!
failIfItIsNotPossibleToMoveFrom: currentPosition to: newPosition

	(self itIsValidToGoFrom: currentPosition to: newPosition) ifFalse: [self canNotMoveMoreThanOnePlaceAfarError].
	
	!

!testRun: #TerniLapilliTests #test01XMovesFirstAndOAfter stamp: 'fr 11/1/2020 20:06:51'!
PASSED!

!testRun: #TerniLapilliTests #test02OMovesSecondAndXAfter stamp: 'fr 11/1/2020 20:06:51'!
PASSED!

!testRun: #TerniLapilliTests #test03ODoesNotMoveFirst stamp: 'fr 11/1/2020 20:06:51'!
PASSED!

!testRun: #TerniLapilliTests #test04APlayerCanNotMoveTwoTimesInARow stamp: 'fr 11/1/2020 20:06:51'!
PASSED!

!testRun: #TerniLapilliTests #test05XPieceIsWhereHePutsIt stamp: 'fr 11/1/2020 20:06:51'!
PASSED!

!testRun: #TerniLapilliTests #test06OPieceIsWhereHePutsIt stamp: 'fr 11/1/2020 20:06:51'!
PASSED!

!testRun: #TerniLapilliTests #test07XPieceIsNotWhereHeDoesNotPutIt stamp: 'fr 11/1/2020 20:06:51'!
PASSED!

!testRun: #TerniLapilliTests #test08OPieceIsNotWhereHeDoesNotPutIt stamp: 'fr 11/1/2020 20:06:51'!
PASSED!

!testRun: #TerniLapilliTests #test09XCanPlaceMoreThanOnePieceCorrectly stamp: 'fr 11/1/2020 20:06:51'!
PASSED!

!testRun: #TerniLapilliTests #test10OCanPlaceMoreThanOnePieceCorrectly stamp: 'fr 11/1/2020 20:06:51'!
PASSED!

!testRun: #TerniLapilliTests #test11OCanNotPutAPieceInAnOccupiedPosition stamp: 'fr 11/1/2020 20:06:51'!
PASSED!

!testRun: #TerniLapilliTests #test12XCanNotPutAPieceInAnOccupiedPosition stamp: 'fr 11/1/2020 20:06:51'!
PASSED!

!testRun: #TerniLapilliTests #test13XCanNotPutAPieceOutOfBounds stamp: 'fr 11/1/2020 20:06:51'!
PASSED!

!testRun: #TerniLapilliTests #test14OCanNotPutAPieceOutOfBounds stamp: 'fr 11/1/2020 20:06:51'!
PASSED!

!testRun: #TerniLapilliTests #test15XCanNotPutMoreThanThreePieces stamp: 'fr 11/1/2020 20:06:51'!
PASSED!

!testRun: #TerniLapilliTests #test16OCanNotPutMoreThanThreePieces stamp: 'fr 11/1/2020 20:06:51'!
PASSED!

!testRun: #TerniLapilliTests #test17WhenXMovesAPieceItIsAtTheNewPositionAndNotAtThePreviousOne stamp: 'fr 11/1/2020 20:06:51'!
PASSED!

!testRun: #TerniLapilliTests #test18WhenOMovesAPieceItIsAtTheNewPositionAndNotAtThePreviousOne stamp: 'fr 11/1/2020 20:06:51'!
PASSED!

!testRun: #TerniLapilliTests #test19XCanNotMoveBeforeAddingThreePieces stamp: 'fr 11/1/2020 20:06:51'!
PASSED!

!testRun: #TerniLapilliTests #test20OCanNotMoveBeforeAddingThreePieces stamp: 'fr 11/1/2020 20:06:51'!
PASSED!

!testRun: #TerniLapilliTests #test21XCanNotMoveFromAPositionThatIsNotUnderHisControl stamp: 'fr 11/1/2020 20:06:51'!
PASSED!

!testRun: #TerniLapilliTests #test22OCanNotMoveFromAPositionThatIsNotUnderHisControl stamp: 'fr 11/1/2020 20:06:51'!
PASSED!

!testRun: #TerniLapilliTests #test23XCanNotMoveFromAnOutOfBoundsPosition stamp: 'fr 11/1/2020 20:06:51'!
PASSED!

!testRun: #TerniLapilliTests #test24OCanNotMoveFromAnOutOfBoundsPosition stamp: 'fr 11/1/2020 20:06:51'!
PASSED!

!testRun: #TerniLapilliTests #test25XCanNotMoveToAnOutOfBoundsPosition stamp: 'fr 11/1/2020 20:06:51'!
PASSED!

!testRun: #TerniLapilliTests #test26OCanNotMoveToAnOutOfBoundsPosition stamp: 'fr 11/1/2020 20:06:51'!
PASSED!

!testRun: #TerniLapilliTests #test27XCanNotMoveToAnOccupiedPosition stamp: 'fr 11/1/2020 20:06:51'!
PASSED!

!testRun: #TerniLapilliTests #test28OCanNotMoveToAnOccupiedPosition stamp: 'fr 11/1/2020 20:06:51'!
PASSED!

!testRun: #TerniLapilliTests #test30 stamp: 'fr 11/1/2020 20:06:51'!
PASSED!

!testRun: #TerniLapilliTests #test31 stamp: 'fr 11/1/2020 20:06:51'!
PASSED!

!testRun: #TerniLapilliTests #test32 stamp: 'fr 11/1/2020 20:06:51'!
PASSED!

!testRun: #TerniLapilliTests #test33 stamp: 'fr 11/1/2020 20:06:51'!
PASSED!

!testRun: #TerniLapilliTests #test34 stamp: 'fr 11/1/2020 20:06:51'!
PASSED!

!testRun: #TerniLapilliTests #test35 stamp: 'fr 11/1/2020 20:06:51'!
PASSED!

!testRun: #TerniLapilliTests #test36 stamp: 'fr 11/1/2020 20:06:51'!
PASSED!

!testRun: #TerniLapilliTests #test37 stamp: 'fr 11/1/2020 20:06:51'!
PASSED!

!testRun: #TerniLapilliTests #test38 stamp: 'fr 11/1/2020 20:06:51'!
PASSED!

!testRun: #TerniLapilliTests #test39 stamp: 'fr 11/1/2020 20:06:51'!
PASSED!

!testRun: #TerniLapilliTests #test40 stamp: 'fr 11/1/2020 20:06:51'!
PASSED!

!testRun: #TerniLapilliTests #test41 stamp: 'fr 11/1/2020 20:06:51'!
PASSED!

!testRun: #TerniLapilliTests #test42 stamp: 'fr 11/1/2020 20:06:51'!
PASSED!
!TerniLapilliTests methodsFor: 'as yet unclassified' stamp: 'fr 11/1/2020 20:07:38'!
test29XCanNotMoveBetweenPositionsThatAreMoreThanOneUnitAfar

	| terniLapilli |
	terniLapilli _ TerniLapilli new.
		
	self  should: [			terniLapilli putXAt: 1 @ 1 
						 ;putOAt: 2 @ 1
						 ;putXAt: 1 @ 2
						 ;putOAt: 2 @ 2
						 ;putXAt: 3 @ 1
						 ;putOAt: 1 @ 3
						 ;moveXFrom: 3@1 to: 3@3.] 
		raise: Error 
		withMessageText: TerniLapilli canNotMoveToPositionMoreThanOnePlaceAfarErrorDescription ! !

!methodRemoval: TerniLapilliTests #test30 stamp: 'fr 11/1/2020 20:07:38'!
test30

	| terniLapilli |
	terniLapilli _ TerniLapilli new.
		
	self  should: [			terniLapilli putXAt: 1 @ 1 
						 ;putOAt: 2 @ 1
						 ;putXAt: 1 @ 2
						 ;putOAt: 2 @ 2
						 ;putXAt: 3 @ 1
						 ;putOAt: 1 @ 3
						 ;moveXFrom: 3@1 to: 3@3.] 
		raise: Error 
		withMessageText: TerniLapilli canNotMoveToPositionMoreThanOnePlaceAfarErrorDescription !
!TerniLapilliTests methodsFor: 'as yet unclassified' stamp: 'fr 11/1/2020 20:08:00'!
test29XCanNotMoveBetweenPositionsThatAreMoreThanOnePlaceAfar

	| terniLapilli |
	terniLapilli _ TerniLapilli new.
		
	self  should: [			terniLapilli putXAt: 1 @ 1 
						 ;putOAt: 2 @ 1
						 ;putXAt: 1 @ 2
						 ;putOAt: 2 @ 2
						 ;putXAt: 3 @ 1
						 ;putOAt: 1 @ 3
						 ;moveXFrom: 3@1 to: 3@3.] 
		raise: Error 
		withMessageText: TerniLapilli canNotMoveToPositionMoreThanOnePlaceAfarErrorDescription ! !

!methodRemoval: TerniLapilliTests #test29XCanNotMoveBetweenPositionsThatAreMoreThanOneUnitAfar stamp: 'fr 11/1/2020 20:08:01'!
test29XCanNotMoveBetweenPositionsThatAreMoreThanOneUnitAfar

	| terniLapilli |
	terniLapilli _ TerniLapilli new.
		
	self  should: [			terniLapilli putXAt: 1 @ 1 
						 ;putOAt: 2 @ 1
						 ;putXAt: 1 @ 2
						 ;putOAt: 2 @ 2
						 ;putXAt: 3 @ 1
						 ;putOAt: 1 @ 3
						 ;moveXFrom: 3@1 to: 3@3.] 
		raise: Error 
		withMessageText: TerniLapilli canNotMoveToPositionMoreThanOnePlaceAfarErrorDescription !
!TerniLapilliTests methodsFor: 'as yet unclassified' stamp: 'fr 11/1/2020 20:08:27'!
test30OCanNotMoveBetweenPositionsThatAreMoreThanOnePlaceAfar

	| terniLapilli |
	terniLapilli _ TerniLapilli new.
		
	self  should: [			terniLapilli putXAt: 1 @ 1 
						 ;putOAt: 2 @ 1
						 ;putXAt: 1 @ 2
						 ;putOAt: 2 @ 2
						 ;putXAt: 3 @ 1
						 ;putOAt: 1 @ 3
						 ;moveXFrom: 3@1 to: 3@2
						 ;moveOFrom: 1@3 to: 3@3.] 
		raise: Error 
		withMessageText: TerniLapilli canNotMoveToPositionMoreThanOnePlaceAfarErrorDescription ! !

!methodRemoval: TerniLapilliTests #test31 stamp: 'fr 11/1/2020 20:08:27'!
test31

	| terniLapilli |
	terniLapilli _ TerniLapilli new.
		
	self  should: [			terniLapilli putXAt: 1 @ 1 
						 ;putOAt: 2 @ 1
						 ;putXAt: 1 @ 2
						 ;putOAt: 2 @ 2
						 ;putXAt: 3 @ 1
						 ;putOAt: 1 @ 3
						 ;moveXFrom: 3@1 to: 3@2
						 ;moveOFrom: 1@3 to: 3@3.] 
		raise: Error 
		withMessageText: TerniLapilli canNotMoveToPositionMoreThanOnePlaceAfarErrorDescription !
!TerniLapilliTests methodsFor: 'as yet unclassified' stamp: 'fr 11/1/2020 20:09:05'!
test31NoPlayerHasWonIfAnyOfThemHaveThreePiecesInLine

	| terniLapilli |
	terniLapilli _ TerniLapilli new.
	terniLapilli putXAt: 1 @ 1.
	terniLapilli putOAt: 2 @ 3.
	terniLapilli putXAt: 1 @ 2.
	self assert: [ terniLapilli hasXWon not and: [terniLapilli hasOWon not]].! !

!methodRemoval: TerniLapilliTests #test32 stamp: 'fr 11/1/2020 20:09:05'!
test32

	| terniLapilli |
	terniLapilli _ TerniLapilli new.
	terniLapilli putXAt: 1 @ 1.
	terniLapilli putOAt: 2 @ 3.
	terniLapilli putXAt: 1 @ 2.
	self assert: [ terniLapilli hasXWon not and: [terniLapilli hasOWon not]].!
!TerniLapilliTests methodsFor: 'as yet unclassified' stamp: 'fr 11/1/2020 20:09:14'!
test31NoPlayerHasWonIfNoneOfThemHaveThreePiecesInLine

	| terniLapilli |
	terniLapilli _ TerniLapilli new.
	terniLapilli putXAt: 1 @ 1.
	terniLapilli putOAt: 2 @ 3.
	terniLapilli putXAt: 1 @ 2.
	self assert: [ terniLapilli hasXWon not and: [terniLapilli hasOWon not]].! !

!methodRemoval: TerniLapilliTests #test31NoPlayerHasWonIfAnyOfThemHaveThreePiecesInLine stamp: 'fr 11/1/2020 20:09:14'!
test31NoPlayerHasWonIfAnyOfThemHaveThreePiecesInLine

	| terniLapilli |
	terniLapilli _ TerniLapilli new.
	terniLapilli putXAt: 1 @ 1.
	terniLapilli putOAt: 2 @ 3.
	terniLapilli putXAt: 1 @ 2.
	self assert: [ terniLapilli hasXWon not and: [terniLapilli hasOWon not]].!
!TerniLapilliTests methodsFor: 'as yet unclassified' stamp: 'fr 11/1/2020 20:09:33'!
test31NoPlayerHasWonIfNoneOfThemHasThreePiecesInLine

	| terniLapilli |
	terniLapilli _ TerniLapilli new.
	terniLapilli putXAt: 1 @ 1.
	terniLapilli putOAt: 2 @ 3.
	terniLapilli putXAt: 1 @ 2.
	self assert: [ terniLapilli hasXWon not and: [terniLapilli hasOWon not]].! !

!methodRemoval: TerniLapilliTests #test31NoPlayerHasWonIfNoneOfThemHaveThreePiecesInLine stamp: 'fr 11/1/2020 20:09:34'!
test31NoPlayerHasWonIfNoneOfThemHaveThreePiecesInLine

	| terniLapilli |
	terniLapilli _ TerniLapilli new.
	terniLapilli putXAt: 1 @ 1.
	terniLapilli putOAt: 2 @ 3.
	terniLapilli putXAt: 1 @ 2.
	self assert: [ terniLapilli hasXWon not and: [terniLapilli hasOWon not]].!
!TerniLapilliTests methodsFor: 'as yet unclassified' stamp: 'fr 11/1/2020 20:10:36'!
test32XWinsWhenHeGetsThreePiecesInLine

	| terniLapilli |
	terniLapilli _ TerniLapilli new.
	terniLapilli putXAt: 1 @ 1.
	terniLapilli putOAt: 2 @ 3.
	terniLapilli putXAt: 1 @ 2.
	terniLapilli putOAt: 2 @ 2.
	terniLapilli putXAt: 1 @ 3.
	self assert: [ terniLapilli hasXWon ].! !

!methodRemoval: TerniLapilliTests #test33 stamp: 'fr 11/1/2020 20:10:36'!
test33

	| terniLapilli |
	terniLapilli _ TerniLapilli new.
	terniLapilli putXAt: 1 @ 1.
	terniLapilli putOAt: 2 @ 3.
	terniLapilli putXAt: 1 @ 2.
	terniLapilli putOAt: 2 @ 2.
	terniLapilli putXAt: 1 @ 3.
	self assert: [ terniLapilli hasXWon ].!
!TerniLapilliTests methodsFor: 'as yet unclassified' stamp: 'fr 11/1/2020 20:11:20'!
test32XWinsWhenHeGetsThreePiecesInTheSameRow

	| terniLapilli |
	terniLapilli _ TerniLapilli new.
	terniLapilli putXAt: 1 @ 1.
	terniLapilli putOAt: 2 @ 3.
	terniLapilli putXAt: 1 @ 2.
	terniLapilli putOAt: 2 @ 2.
	terniLapilli putXAt: 1 @ 3.
	self assert: [ terniLapilli hasXWon ].! !

!methodRemoval: TerniLapilliTests #test32XWinsWhenHeGetsThreePiecesInLine stamp: 'fr 11/1/2020 20:11:20'!
test32XWinsWhenHeGetsThreePiecesInLine

	| terniLapilli |
	terniLapilli _ TerniLapilli new.
	terniLapilli putXAt: 1 @ 1.
	terniLapilli putOAt: 2 @ 3.
	terniLapilli putXAt: 1 @ 2.
	terniLapilli putOAt: 2 @ 2.
	terniLapilli putXAt: 1 @ 3.
	self assert: [ terniLapilli hasXWon ].!
!TerniLapilliTests methodsFor: 'as yet unclassified' stamp: 'fr 11/1/2020 20:12:38'!
test33XWinsWhenHeGetsThreePiecesInTheSameColumn

	| terniLapilli |
	terniLapilli _ TerniLapilli new.
	terniLapilli putXAt: 1 @ 1.
	terniLapilli putOAt: 1 @ 3.
	terniLapilli putXAt: 2 @ 1.
	terniLapilli putOAt: 1 @ 2.
	terniLapilli putXAt: 3 @ 1.
	self assert: [ terniLapilli hasXWon ].! !

!methodRemoval: TerniLapilliTests #test35 stamp: 'fr 11/1/2020 20:12:38'!
test35

	| terniLapilli |
	terniLapilli _ TerniLapilli new.
	terniLapilli putXAt: 1 @ 1.
	terniLapilli putOAt: 1 @ 3.
	terniLapilli putXAt: 2 @ 1.
	terniLapilli putOAt: 1 @ 2.
	terniLapilli putXAt: 3 @ 1.
	self assert: [ terniLapilli hasXWon ].!
!TerniLapilliTests methodsFor: 'as yet unclassified' stamp: 'fr 11/1/2020 20:13:02'!
test34XWinsWhenHeGetsThreePiecesInTheMainDiagonal

	| terniLapilli |
	terniLapilli _ TerniLapilli new.
	terniLapilli putXAt: 1 @ 1.
	terniLapilli putOAt: 1 @ 3.
	terniLapilli putXAt: 2 @ 2.
	terniLapilli putOAt: 1 @ 2.
	terniLapilli putXAt: 3 @ 3.
	self assert: [ terniLapilli hasXWon ].! !

!methodRemoval: TerniLapilliTests #test36 stamp: 'fr 11/1/2020 20:13:02'!
test36

	| terniLapilli |
	terniLapilli _ TerniLapilli new.
	terniLapilli putXAt: 1 @ 1.
	terniLapilli putOAt: 1 @ 3.
	terniLapilli putXAt: 2 @ 2.
	terniLapilli putOAt: 1 @ 2.
	terniLapilli putXAt: 3 @ 3.
	self assert: [ terniLapilli hasXWon ].!
!TerniLapilliTests methodsFor: 'as yet unclassified' stamp: 'fr 11/1/2020 20:13:31'!
test35XWinsWhenHeGetsThreePiecesInTheSecondaryDiagonal

	| terniLapilli |
	terniLapilli _ TerniLapilli new.
	terniLapilli putXAt: 1 @ 3.
	terniLapilli putOAt: 1 @ 1.
	terniLapilli putXAt: 2 @ 2.
	terniLapilli putOAt: 1 @ 2.
	terniLapilli putXAt: 3 @ 1.
	self assert: [ terniLapilli hasXWon ].! !

!methodRemoval: TerniLapilliTests #test37 stamp: 'fr 11/1/2020 20:13:31'!
test37

	| terniLapilli |
	terniLapilli _ TerniLapilli new.
	terniLapilli putXAt: 1 @ 3.
	terniLapilli putOAt: 1 @ 1.
	terniLapilli putXAt: 2 @ 2.
	terniLapilli putOAt: 1 @ 2.
	terniLapilli putXAt: 3 @ 1.
	self assert: [ terniLapilli hasXWon ].!
!TerniLapilliTests methodsFor: 'as yet unclassified' stamp: 'fr 11/1/2020 20:14:13'!
test36OWinsWhenHeGetsThreePiecesInLine

	| terniLapilli |
	terniLapilli _ TerniLapilli new.
	terniLapilli putXAt: 1 @ 3.
	terniLapilli putOAt: 2 @ 1.
	terniLapilli putXAt: 3 @ 1.
	terniLapilli putOAt: 2 @ 2.
	terniLapilli putXAt: 3 @ 2.
	terniLapilli putOAt: 2 @ 3.
	self assert: [ terniLapilli hasOWon ].! !

!methodRemoval: TerniLapilliTests #test38 stamp: 'fr 11/1/2020 20:14:13'!
test38

	| terniLapilli |
	terniLapilli _ TerniLapilli new.
	terniLapilli putXAt: 1 @ 3.
	terniLapilli putOAt: 2 @ 1.
	terniLapilli putXAt: 3 @ 1.
	terniLapilli putOAt: 2 @ 2.
	terniLapilli putXAt: 3 @ 2.
	terniLapilli putOAt: 2 @ 3.
	self assert: [ terniLapilli hasOWon ].!
!TerniLapilliTests methodsFor: 'as yet unclassified' stamp: 'fr 11/1/2020 20:15:11'!
test37OCanNotPutAfterGameIsOver

	| terniLapilli |
	terniLapilli _ TerniLapilli new.
	
	self should: [			terniLapilli putXAt: 1 @ 1.
				terniLapilli putOAt: 2 @ 2.
				terniLapilli putXAt: 2 @ 1.
				terniLapilli putOAt: 2 @ 3.
				terniLapilli putXAt: 3 @ 1.
				terniLapilli putOAt: 3 @ 3.]  
		raise: Error
		withMessageText: TerniLapilli gameIsOverErrorDescription ! !

!methodRemoval: TerniLapilliTests #test39 stamp: 'fr 11/1/2020 20:15:11'!
test39

	| terniLapilli |
	terniLapilli _ TerniLapilli new.
	
	self should: [			terniLapilli putXAt: 1 @ 1.
				terniLapilli putOAt: 2 @ 2.
				terniLapilli putXAt: 2 @ 1.
				terniLapilli putOAt: 2 @ 3.
				terniLapilli putXAt: 3 @ 1.
				terniLapilli putOAt: 3 @ 3.]  
		raise: Error
		withMessageText: TerniLapilli gameIsOverErrorDescription !
!TerniLapilliTests methodsFor: 'as yet unclassified' stamp: 'fr 11/1/2020 20:15:34'!
test38XCanNotMoveAfterGameIsOver 

	| terniLapilli |
	terniLapilli _ TerniLapilli new.
	
	self should: [			terniLapilli putXAt: 1 @ 1.
				terniLapilli putOAt: 1 @ 2.
				terniLapilli putXAt: 2 @ 1.
				terniLapilli putOAt: 2 @ 2.
				terniLapilli putXAt: 2 @ 3.
				terniLapilli putOAt: 3 @ 2.
				terniLapilli moveXFrom: 2@3 to: 3@3.]  
		raise: Error
		withMessageText: TerniLapilli gameIsOverErrorDescription ! !

!methodRemoval: TerniLapilliTests #test40 stamp: 'fr 11/1/2020 20:15:34'!
test40 

	| terniLapilli |
	terniLapilli _ TerniLapilli new.
	
	self should: [			terniLapilli putXAt: 1 @ 1.
				terniLapilli putOAt: 1 @ 2.
				terniLapilli putXAt: 2 @ 1.
				terniLapilli putOAt: 2 @ 2.
				terniLapilli putXAt: 2 @ 3.
				terniLapilli putOAt: 3 @ 2.
				terniLapilli moveXFrom: 2@3 to: 3@3.]  
		raise: Error
		withMessageText: TerniLapilli gameIsOverErrorDescription !
!TerniLapilliTests methodsFor: 'as yet unclassified' stamp: 'fr 11/1/2020 20:15:48'!
test39OCanNotMoveAfterGameIsOver

	| terniLapilli |
	terniLapilli _ TerniLapilli new.
	
	self should: [			terniLapilli putXAt: 1 @ 1.
				terniLapilli putOAt: 1 @ 2.
				terniLapilli putXAt: 2 @ 1.
				terniLapilli putOAt: 2 @ 2.
				terniLapilli putXAt: 3 @ 2.
				terniLapilli putOAt: 3 @ 3.
				terniLapilli moveXFrom: 3@2 to: 3@1.
				terniLapilli moveOFrom: 3@3 to: 3@2.]  
		raise: Error
		withMessageText: TerniLapilli gameIsOverErrorDescription ! !

!methodRemoval: TerniLapilliTests #test41 stamp: 'fr 11/1/2020 20:15:48'!
test41

	| terniLapilli |
	terniLapilli _ TerniLapilli new.
	
	self should: [			terniLapilli putXAt: 1 @ 1.
				terniLapilli putOAt: 1 @ 2.
				terniLapilli putXAt: 2 @ 1.
				terniLapilli putOAt: 2 @ 2.
				terniLapilli putXAt: 3 @ 2.
				terniLapilli putOAt: 3 @ 3.
				terniLapilli moveXFrom: 3@2 to: 3@1.
				terniLapilli moveOFrom: 3@3 to: 3@2.]  
		raise: Error
		withMessageText: TerniLapilli gameIsOverErrorDescription !
!TerniLapilliTests methodsFor: 'as yet unclassified' stamp: 'fr 11/1/2020 20:16:29'!
test40ItIsNoOnesTurnAfterGameIsOver

	| terniLapilli |
	terniLapilli _ TerniLapilli new.
	
	terniLapilli putXAt: 1 @ 1.
	terniLapilli putOAt: 1 @ 2.
	terniLapilli putXAt: 2 @ 1.
	terniLapilli putOAt: 2 @ 2.
	terniLapilli putXAt: 3 @ 2.
	terniLapilli putOAt: 3 @ 3.
	terniLapilli moveXFrom: 3@2 to: 3@1.
	
	self assert: (terniLapilli isXsTurn not and: [terniLapilli isOsTurn not])! !

!methodRemoval: TerniLapilliTests #test42 stamp: 'fr 11/1/2020 20:16:29'!
test42

	| terniLapilli |
	terniLapilli _ TerniLapilli new.
	
	terniLapilli putXAt: 1 @ 1.
	terniLapilli putOAt: 1 @ 2.
	terniLapilli putXAt: 2 @ 1.
	terniLapilli putOAt: 2 @ 2.
	terniLapilli putXAt: 3 @ 2.
	terniLapilli putOAt: 3 @ 3.
	terniLapilli moveXFrom: 3@2 to: 3@1.
	
	self assert: (terniLapilli isXsTurn not and: [terniLapilli isOsTurn not])!

!methodRemoval: TerniLapilliTests #test34 stamp: 'fr 11/1/2020 20:16:43'!
test34

	| terniLapilli |
	terniLapilli _ TerniLapilli new.
	terniLapilli putXAt: 2 @ 1.
	terniLapilli putOAt: 1 @ 3.
	terniLapilli putXAt: 2 @ 2.
	terniLapilli putOAt: 1 @ 2.
	terniLapilli putXAt: 2 @ 3.
	self assert: [ terniLapilli hasXWon ].!
!TerniLapilliTests methodsFor: 'tests - turn' stamp: 'fr 11/1/2020 20:18:28'!
test01XPlaysFirstAndOAfter

	| terniLapilli |
	terniLapilli _ TerniLapilli new.
	terniLapilli putXAt: 1 @ 1.
	self assert:
		[terniLapilli isOsTurn and: [ terniLapilli isXsTurn not ]].! !

!methodRemoval: TerniLapilliTests #test01XMovesFirstAndOAfter stamp: 'fr 11/1/2020 20:18:28'!
test01XMovesFirstAndOAfter

	| terniLapilli |
	terniLapilli _ TerniLapilli new.
	terniLapilli putXAt: 1 @ 1.
	self assert:
		[terniLapilli isOsTurn and: [ terniLapilli isXsTurn not ]].!
!TerniLapilliTests methodsFor: 'tests - turn' stamp: 'fr 11/1/2020 20:18:34'!
test02OPlaysSecondAndXAfter

	| terniLapilli |
	terniLapilli _ TerniLapilli new.
	terniLapilli putXAt: 1 @ 1.
	terniLapilli putOAt: 1 @ 2.
	self assert:
		[terniLapilli isXsTurn and: [ terniLapilli isOsTurn not ]].! !

!methodRemoval: TerniLapilliTests #test02OMovesSecondAndXAfter stamp: 'fr 11/1/2020 20:18:35'!
test02OMovesSecondAndXAfter

	| terniLapilli |
	terniLapilli _ TerniLapilli new.
	terniLapilli putXAt: 1 @ 1.
	terniLapilli putOAt: 1 @ 2.
	self assert:
		[terniLapilli isXsTurn and: [ terniLapilli isOsTurn not ]].!
!TerniLapilliTests methodsFor: 'tests - turn' stamp: 'fr 11/1/2020 20:18:41'!
test03ODoesNotPlayFirst

	| terniLapilli |
	terniLapilli _ TerniLapilli new.
	self should: 		[ terniLapilli putOAt: 1 @ 2.] 
		raise: Error  
		withMessageText: TerniLapilli playerXTurnErrorDescription! !

!methodRemoval: TerniLapilliTests #test03ODoesNotMoveFirst stamp: 'fr 11/1/2020 20:18:41'!
test03ODoesNotMoveFirst

	| terniLapilli |
	terniLapilli _ TerniLapilli new.
	self should: 		[ terniLapilli putOAt: 1 @ 2.] 
		raise: Error  
		withMessageText: TerniLapilli playerXTurnErrorDescription!
!TerniLapilliTests methodsFor: 'tests - turn' stamp: 'fr 11/1/2020 20:18:48'!
test04APlayerCanNotPlayTwoTimesInARow

	| terniLapilli |
	terniLapilli _ TerniLapilli new.
	self should: 		[ 	terniLapilli putXAt: 1 @ 2.
				terniLapilli putXAt: 1 @ 1.] 
		raise: Error  
		withMessageText: TerniLapilli playerOTurnErrorDescription! !

!methodRemoval: TerniLapilliTests #test04APlayerCanNotMoveTwoTimesInARow stamp: 'fr 11/1/2020 20:18:48'!
test04APlayerCanNotMoveTwoTimesInARow

	| terniLapilli |
	terniLapilli _ TerniLapilli new.
	self should: 		[ 	terniLapilli putXAt: 1 @ 2.
				terniLapilli putXAt: 1 @ 1.] 
		raise: Error  
		withMessageText: TerniLapilli playerOTurnErrorDescription!
!TerniLapilliTests methodsFor: 'tests - put' stamp: 'fr 11/1/2020 20:20:33'!
test09XCanPutMoreThanOnePieceCorrectly

	| terniLapilli |
	terniLapilli _ TerniLapilli new.
	terniLapilli putXAt: 1 @ 1.
	terniLapilli putOAt: 1 @ 2.
	terniLapilli putXAt: 1 @ 3.
	
	self assert: [(terniLapilli hasXPieceAt: 1@1) and: [terniLapilli hasXPieceAt: 1@3]]! !

!methodRemoval: TerniLapilliTests #test09XCanPlaceMoreThanOnePieceCorrectly stamp: 'fr 11/1/2020 20:20:33'!
test09XCanPlaceMoreThanOnePieceCorrectly

	| terniLapilli |
	terniLapilli _ TerniLapilli new.
	terniLapilli putXAt: 1 @ 1.
	terniLapilli putOAt: 1 @ 2.
	terniLapilli putXAt: 1 @ 3.
	
	self assert: [(terniLapilli hasXPieceAt: 1@1) and: [terniLapilli hasXPieceAt: 1@3]]!
!TerniLapilliTests methodsFor: 'tests - put' stamp: 'fr 11/1/2020 20:20:39'!
test10OCanPutMoreThanOnePieceCorrectly

	| terniLapilli |
	terniLapilli _ TerniLapilli new.
	terniLapilli putXAt: 1 @ 1.
	terniLapilli putOAt: 1 @ 2.
	terniLapilli putXAt: 1 @ 3.
	terniLapilli putOAt: 2 @ 1.
	
	self assert: [(terniLapilli hasOPieceAt: 1@2) and: [terniLapilli hasOPieceAt: 2@1]]! !

!methodRemoval: TerniLapilliTests #test10OCanPlaceMoreThanOnePieceCorrectly stamp: 'fr 11/1/2020 20:20:39'!
test10OCanPlaceMoreThanOnePieceCorrectly

	| terniLapilli |
	terniLapilli _ TerniLapilli new.
	terniLapilli putXAt: 1 @ 1.
	terniLapilli putOAt: 1 @ 2.
	terniLapilli putXAt: 1 @ 3.
	terniLapilli putOAt: 2 @ 1.
	
	self assert: [(terniLapilli hasOPieceAt: 1@2) and: [terniLapilli hasOPieceAt: 2@1]]!
!TerniLapilliTests methodsFor: 'tests - turn' stamp: 'fr 11/1/2020 20:21:57' prior: 50883346!
test02OPlaysSecondAndXAfter

	| terniLapilli |
	terniLapilli _ TerniLapilli new.
	terniLapilli putXAt: 1 @ 1
			 ;putOAt: 1 @ 2.
	self assert:
		[terniLapilli isXsTurn and: [ terniLapilli isOsTurn not ]].! !
!TerniLapilliTests methodsFor: 'tests - turn' stamp: 'fr 11/1/2020 20:22:09' prior: 50883384!
test04APlayerCanNotPlayTwoTimesInARow

	| terniLapilli |
	terniLapilli _ TerniLapilli new.
	self should: 		[ 	terniLapilli putXAt: 1 @ 2
					        ;putXAt: 1 @ 1.] 
		raise: Error  
		withMessageText: TerniLapilli playerOTurnErrorDescription! !
!TerniLapilliTests methodsFor: 'tests - put' stamp: 'fr 11/1/2020 20:22:25' prior: 50882002!
test06OPieceIsWhereHePutsIt

	| terniLapilli |
	terniLapilli _ TerniLapilli new.
	terniLapilli putXAt: 1 @ 1
			 ;putOAt: 1 @ 2.
	
	self assert: [terniLapilli hasOPieceAt: 1@2]! !
!TerniLapilliTests methodsFor: 'tests - put' stamp: 'fr 11/1/2020 20:22:35' prior: 50882035!
test08OPieceIsNotWhereHeDoesNotPutIt

	| terniLapilli |
	terniLapilli _ TerniLapilli new.
	terniLapilli putXAt: 1 @ 1
			 ;putOAt: 1 @ 2.
	
	self assert: [(terniLapilli hasOPieceAt: 1@1) not]! !
!TerniLapilliTests methodsFor: 'tests - put' stamp: 'fr 11/1/2020 20:22:53' prior: 50883406!
test09XCanPutMoreThanOnePieceCorrectly

	| terniLapilli |
	terniLapilli _ TerniLapilli new.
	terniLapilli putXAt: 1 @ 1
			 ;putOAt: 1 @ 2
		        ;putXAt: 1 @ 3.
	
	self assert: [(terniLapilli hasXPieceAt: 1@1) and: [terniLapilli hasXPieceAt: 1@3]]! !
!TerniLapilliTests methodsFor: 'tests - put' stamp: 'fr 11/1/2020 20:23:19' prior: 50883429!
test10OCanPutMoreThanOnePieceCorrectly

	| terniLapilli |
	terniLapilli _ TerniLapilli new.
	terniLapilli putXAt: 1 @ 1
			 ;putOAt: 1 @ 2
			 ;putXAt: 1 @ 3
			 ;putOAt: 2 @ 1.
	
	self assert: [(terniLapilli hasOPieceAt: 1@2) and: [terniLapilli hasOPieceAt: 2@1]]! !
!TerniLapilliTests methodsFor: 'tests - put' stamp: 'fr 11/1/2020 20:23:27' prior: 50882096!
test11OCanNotPutAPieceInAnOccupiedPosition

	| terniLapilli |
	terniLapilli _ TerniLapilli new.	

	self should: [			terniLapilli putXAt: 1 @ 1
						 ;putOAt: 1 @ 1. ]
		raise: Error
		withMessageText: TerniLapilli positionAlreadyHoldsAPieceErrorDescription! !
!TerniLapilliTests methodsFor: 'tests - put' stamp: 'fr 11/1/2020 20:23:31' prior: 50883516!
test11OCanNotPutAPieceInAnOccupiedPosition

	| terniLapilli |
	terniLapilli _ TerniLapilli new.	

	self should: [			terniLapilli putXAt: 1 @ 1
						 ;putOAt: 1 @ 1. ]
		raise: Error
		withMessageText: TerniLapilli positionAlreadyHoldsAPieceErrorDescription! !
!TerniLapilliTests methodsFor: 'tests - put' stamp: 'fr 11/1/2020 20:23:50' prior: 50882117!
test12XCanNotPutAPieceInAnOccupiedPosition

	| terniLapilli |
	terniLapilli _ TerniLapilli new.	

	self should: [			terniLapilli putXAt: 1 @ 1
						 ;putOAt: 1 @ 2
						 ;putXAt: 1 @ 2. ]
		raise: Error
		withMessageText: TerniLapilli positionAlreadyHoldsAPieceErrorDescription! !
!TerniLapilliTests methodsFor: 'tests - put' stamp: 'fr 11/1/2020 20:24:02' prior: 50882158!
test14OCanNotPutAPieceOutOfBounds

	| terniLapilli |
	terniLapilli _ TerniLapilli new.
	self
		should: [ 		terniLapilli putXAt: 1 @ 1
						 ;putOAt: 1 @ 5. ]
		raise: Error
		withMessageText: TerniLapilli positionOutOfBoundsErrorDescription.! !
!TerniLapilliTests methodsFor: 'tests - put' stamp: 'fr 11/1/2020 20:25:02' prior: 50882179!
test15XCanNotPutMoreThanThreePieces

	| terniLapilli |
	terniLapilli _ TerniLapilli new.
	self
		should: [ 		terniLapilli putXAt: 1 @ 1
						 ;putOAt: 1 @ 2
					        ;putXAt: 1 @ 3
						 ;putOAt: 2 @ 1
						 ;putXAt: 2 @ 2
						 ;putOAt: 2 @ 3
						 ;putXAt: 3 @ 2.
				 ]
		raise: Error
		withMessageText: TerniLapilli piecesLimitExceededErrorDescription.! !
!TerniLapilliTests methodsFor: 'tests - put' stamp: 'fr 11/1/2020 20:25:13' prior: 50883563!
test15XCanNotPutMoreThanThreePieces

	| terniLapilli |
	terniLapilli _ TerniLapilli new.
	self
		should: [ 		terniLapilli putXAt: 1 @ 1
						 ;putOAt: 1 @ 2
					        ;putXAt: 1 @ 3
						 ;putOAt: 2 @ 1
						 ;putXAt: 2 @ 2
						 ;putOAt: 2 @ 3
						 ;putXAt: 3 @ 2.
				 ]
		raise: Error
		withMessageText: TerniLapilli piecesLimitExceededErrorDescription.! !
!TerniLapilliTests methodsFor: 'tests - put' stamp: 'fr 11/1/2020 20:26:01' prior: 50882210!
test16OCanNotPutMoreThanThreePieces

	| terniLapilli |
	terniLapilli _ TerniLapilli new.
	self
		should: [ 		terniLapilli putXAt: 1 @ 1
						 ;putOAt: 1 @ 3
						 ;putXAt: 2 @ 1
						 ;putOAt: 2 @ 2
						 ;putXAt: 2 @ 3
						 ;putOAt: 3 @ 2
						 ;moveXFrom: 1@1 to: 1@2
						 ;putOAt: 3 @ 3.
				 ]
		raise: Error
		withMessageText: TerniLapilli piecesLimitExceededErrorDescription.! !
!TerniLapilliTests methodsFor: 'tests - win' stamp: 'fr 11/1/2020 20:26:52' prior: 50883038!
test31NoPlayerHasWonIfNoneOfThemHasThreePiecesInLine

	| terniLapilli |
	terniLapilli _ TerniLapilli new.
	terniLapilli putXAt: 1 @ 1
		 	;putOAt: 2 @ 3
			;putXAt: 1 @ 2.
	self assert: [ terniLapilli hasXWon not and: [terniLapilli hasOWon not]].! !
!TerniLapilliTests methodsFor: 'tests - win' stamp: 'fr 11/1/2020 20:26:57' prior: 50883609!
test31NoPlayerHasWonIfNoneOfThemHasThreePiecesInLine

	| terniLapilli |
	terniLapilli _ TerniLapilli new.
	terniLapilli putXAt: 1 @ 1
		 	 ;putOAt: 2 @ 3
			 ;putXAt: 1 @ 2.
	self assert: [ terniLapilli hasXWon not and: [terniLapilli hasOWon not]].! !
!TerniLapilliTests methodsFor: 'tests - win' stamp: 'fr 11/1/2020 20:27:25' prior: 50883084!
test32XWinsWhenHeGetsThreePiecesInTheSameRow

	| terniLapilli |
	terniLapilli _ TerniLapilli new.
	terniLapilli putXAt: 1 @ 1
			 ;putOAt: 2 @ 3
			 ;putXAt: 1 @ 2
			 ;putOAt: 2 @ 2
			 ;putXAt: 1 @ 3.
	self assert: [ terniLapilli hasXWon ].! !
!TerniLapilliTests methodsFor: 'tests - win' stamp: 'fr 11/1/2020 20:28:05' prior: 50883108!
test33XWinsWhenHeGetsThreePiecesInTheSameColumn

	| terniLapilli |
	terniLapilli _ TerniLapilli new.
	terniLapilli putXAt: 1 @ 1
			 ;putOAt: 1 @ 3
			 ;putXAt: 2 @ 1
			 ;putOAt: 1 @ 2
			 ;putXAt: 3 @ 1.
	self assert: [ terniLapilli hasXWon ].! !
!TerniLapilliTests methodsFor: 'tests - win' stamp: 'fr 11/1/2020 20:28:33' prior: 50883130!
test34XWinsWhenHeGetsThreePiecesInTheMainDiagonal

	| terniLapilli |
	terniLapilli _ TerniLapilli new.
	terniLapilli putXAt: 1 @ 1
			 ;putOAt: 1 @ 3
			 ;putXAt: 2 @ 2
			 ;putOAt: 1 @ 2
			 ;putXAt: 3 @ 3.
	self assert: [ terniLapilli hasXWon ].! !
!TerniLapilliTests methodsFor: 'tests - win' stamp: 'fr 11/1/2020 20:29:05' prior: 50883152!
test35XWinsWhenHeGetsThreePiecesInTheSecondaryDiagonal

	| terniLapilli |
	terniLapilli _ TerniLapilli new.
	terniLapilli putXAt: 1 @ 3
			 ;putOAt: 1 @ 1
			 ;putXAt: 2 @ 2
			 ;putOAt: 1 @ 2
			 ;putXAt: 3 @ 1.
	self assert: [ terniLapilli hasXWon ].! !
!TerniLapilliTests methodsFor: 'tests - win' stamp: 'fr 11/1/2020 20:29:45' prior: 50883174!
test36OWinsWhenHeGetsThreePiecesInLine

	| terniLapilli |
	terniLapilli _ TerniLapilli new.
	terniLapilli putXAt: 1 @ 3
			 ;putOAt: 2 @ 1
			 ;putXAt: 3 @ 1
			 ;putOAt: 2 @ 2
			 ;putXAt: 3 @ 2
			 ;putOAt: 2 @ 3.
	self assert: [ terniLapilli hasOWon ].! !
!TerniLapilliTests methodsFor: 'tests - win' stamp: 'fr 11/1/2020 20:30:18' prior: 50883198!
test37OCanNotPutAfterGameIsOver

	| terniLapilli |
	terniLapilli _ TerniLapilli new.
	
	self should: [			terniLapilli putXAt: 1 @ 1
						 ;putOAt: 2 @ 2
						 ;putXAt: 2 @ 1
						 ;putOAt: 2 @ 3
						 ;putXAt: 3 @ 1
						 ;putOAt: 3 @ 3.]  
		raise: Error
		withMessageText: TerniLapilli gameIsOverErrorDescription ! !
!TerniLapilliTests methodsFor: 'tests - win' stamp: 'fr 11/1/2020 20:30:49' prior: 50883226!
test38XCanNotMoveAfterGameIsOver 

	| terniLapilli |
	terniLapilli _ TerniLapilli new.
	
	self should: [			terniLapilli putXAt: 1 @ 1
						 ;putOAt: 1 @ 2
						 ;putXAt: 2 @ 1
						 ;putOAt: 2 @ 2
						 ;putXAt: 2 @ 3
						 ;putOAt: 3 @ 2
						 ;moveXFrom: 2@3 to: 3@3.]  
		raise: Error
		withMessageText: TerniLapilli gameIsOverErrorDescription ! !

!testRun: #TerniLapilliTests #test01XPlaysFirstAndOAfter stamp: 'fr 11/1/2020 20:30:54'!
PASSED!

!testRun: #TerniLapilliTests #test02OPlaysSecondAndXAfter stamp: 'fr 11/1/2020 20:30:54'!
PASSED!

!testRun: #TerniLapilliTests #test03ODoesNotPlayFirst stamp: 'fr 11/1/2020 20:30:54'!
PASSED!

!testRun: #TerniLapilliTests #test04APlayerCanNotPlayTwoTimesInARow stamp: 'fr 11/1/2020 20:30:54'!
PASSED!

!testRun: #TerniLapilliTests #test05XPieceIsWhereHePutsIt stamp: 'fr 11/1/2020 20:30:54'!
PASSED!

!testRun: #TerniLapilliTests #test06OPieceIsWhereHePutsIt stamp: 'fr 11/1/2020 20:30:54'!
PASSED!

!testRun: #TerniLapilliTests #test07XPieceIsNotWhereHeDoesNotPutIt stamp: 'fr 11/1/2020 20:30:54'!
PASSED!

!testRun: #TerniLapilliTests #test08OPieceIsNotWhereHeDoesNotPutIt stamp: 'fr 11/1/2020 20:30:54'!
PASSED!

!testRun: #TerniLapilliTests #test09XCanPutMoreThanOnePieceCorrectly stamp: 'fr 11/1/2020 20:30:54'!
PASSED!

!testRun: #TerniLapilliTests #test10OCanPutMoreThanOnePieceCorrectly stamp: 'fr 11/1/2020 20:30:54'!
PASSED!

!testRun: #TerniLapilliTests #test11OCanNotPutAPieceInAnOccupiedPosition stamp: 'fr 11/1/2020 20:30:54'!
PASSED!

!testRun: #TerniLapilliTests #test12XCanNotPutAPieceInAnOccupiedPosition stamp: 'fr 11/1/2020 20:30:54'!
PASSED!

!testRun: #TerniLapilliTests #test13XCanNotPutAPieceOutOfBounds stamp: 'fr 11/1/2020 20:30:54'!
PASSED!

!testRun: #TerniLapilliTests #test14OCanNotPutAPieceOutOfBounds stamp: 'fr 11/1/2020 20:30:54'!
PASSED!

!testRun: #TerniLapilliTests #test15XCanNotPutMoreThanThreePieces stamp: 'fr 11/1/2020 20:30:54'!
PASSED!

!testRun: #TerniLapilliTests #test16OCanNotPutMoreThanThreePieces stamp: 'fr 11/1/2020 20:30:54'!
PASSED!

!testRun: #TerniLapilliTests #test17WhenXMovesAPieceItIsAtTheNewPositionAndNotAtThePreviousOne stamp: 'fr 11/1/2020 20:30:54'!
PASSED!

!testRun: #TerniLapilliTests #test18WhenOMovesAPieceItIsAtTheNewPositionAndNotAtThePreviousOne stamp: 'fr 11/1/2020 20:30:54'!
PASSED!

!testRun: #TerniLapilliTests #test19XCanNotMoveBeforeAddingThreePieces stamp: 'fr 11/1/2020 20:30:54'!
PASSED!

!testRun: #TerniLapilliTests #test20OCanNotMoveBeforeAddingThreePieces stamp: 'fr 11/1/2020 20:30:54'!
PASSED!

!testRun: #TerniLapilliTests #test21XCanNotMoveFromAPositionThatIsNotUnderHisControl stamp: 'fr 11/1/2020 20:30:54'!
PASSED!

!testRun: #TerniLapilliTests #test22OCanNotMoveFromAPositionThatIsNotUnderHisControl stamp: 'fr 11/1/2020 20:30:54'!
PASSED!

!testRun: #TerniLapilliTests #test23XCanNotMoveFromAnOutOfBoundsPosition stamp: 'fr 11/1/2020 20:30:54'!
PASSED!

!testRun: #TerniLapilliTests #test24OCanNotMoveFromAnOutOfBoundsPosition stamp: 'fr 11/1/2020 20:30:54'!
PASSED!

!testRun: #TerniLapilliTests #test25XCanNotMoveToAnOutOfBoundsPosition stamp: 'fr 11/1/2020 20:30:54'!
PASSED!

!testRun: #TerniLapilliTests #test26OCanNotMoveToAnOutOfBoundsPosition stamp: 'fr 11/1/2020 20:30:54'!
PASSED!

!testRun: #TerniLapilliTests #test27XCanNotMoveToAnOccupiedPosition stamp: 'fr 11/1/2020 20:30:54'!
PASSED!

!testRun: #TerniLapilliTests #test28OCanNotMoveToAnOccupiedPosition stamp: 'fr 11/1/2020 20:30:54'!
PASSED!

!testRun: #TerniLapilliTests #test29XCanNotMoveBetweenPositionsThatAreMoreThanOnePlaceAfar stamp: 'fr 11/1/2020 20:30:54'!
PASSED!

!testRun: #TerniLapilliTests #test30OCanNotMoveBetweenPositionsThatAreMoreThanOnePlaceAfar stamp: 'fr 11/1/2020 20:30:54'!
PASSED!

!testRun: #TerniLapilliTests #test31NoPlayerHasWonIfNoneOfThemHasThreePiecesInLine stamp: 'fr 11/1/2020 20:30:54'!
PASSED!

!testRun: #TerniLapilliTests #test32XWinsWhenHeGetsThreePiecesInTheSameRow stamp: 'fr 11/1/2020 20:30:54'!
PASSED!

!testRun: #TerniLapilliTests #test33XWinsWhenHeGetsThreePiecesInTheSameColumn stamp: 'fr 11/1/2020 20:30:54'!
PASSED!

!testRun: #TerniLapilliTests #test34XWinsWhenHeGetsThreePiecesInTheMainDiagonal stamp: 'fr 11/1/2020 20:30:54'!
PASSED!

!testRun: #TerniLapilliTests #test35XWinsWhenHeGetsThreePiecesInTheSecondaryDiagonal stamp: 'fr 11/1/2020 20:30:54'!
PASSED!

!testRun: #TerniLapilliTests #test36OWinsWhenHeGetsThreePiecesInLine stamp: 'fr 11/1/2020 20:30:54'!
PASSED!

!testRun: #TerniLapilliTests #test37OCanNotPutAfterGameIsOver stamp: 'fr 11/1/2020 20:30:54'!
PASSED!

!testRun: #TerniLapilliTests #test38XCanNotMoveAfterGameIsOver stamp: 'fr 11/1/2020 20:30:54'!
PASSED!

!testRun: #TerniLapilliTests #test39OCanNotMoveAfterGameIsOver stamp: 'fr 11/1/2020 20:30:54'!
PASSED!

!testRun: #TerniLapilliTests #test40ItIsNoOnesTurnAfterGameIsOver stamp: 'fr 11/1/2020 20:30:54'!
PASSED!
!TerniLapilliTests methodsFor: 'tests - win' stamp: 'fr 11/1/2020 20:31:48' prior: 50883257!
test39OCanNotMoveAfterGameIsOver

	| terniLapilli |
	terniLapilli _ TerniLapilli new.
	
	self should: [			terniLapilli putXAt: 1 @ 1
						 ;putOAt: 1 @ 2
						 ;putXAt: 2 @ 1
						 ;putOAt: 2 @ 2
						 ;putXAt: 3 @ 2
						 ;putOAt: 3 @ 3
						 ;moveXFrom: 3@2 to: 3@1
						 ;moveOFrom: 3@3 to: 3@2.]  
		raise: Error
		withMessageText: TerniLapilli gameIsOverErrorDescription ! !

----SNAPSHOT----(1 November 2020 20:31:57) CuisUniversity-4384.image priorSource: 17604857!
!TerniLapilliTests methodsFor: 'tests - win' stamp: 'fr 11/1/2020 20:32:27' prior: 50883290!
test40ItIsNoOnesTurnAfterGameIsOver

	| terniLapilli |
	terniLapilli _ TerniLapilli new.
	
	terniLapilli putXAt: 1 @ 1
			 ;putOAt: 1 @ 2
			 ;putXAt: 2 @ 1
			 ;putOAt: 2 @ 2
			 ;putXAt: 3 @ 2
			 ;putOAt: 3 @ 3
			 ;moveXFrom: 3@2 to: 3@1.
	
	self assert: (terniLapilli isXsTurn not and: [terniLapilli isOsTurn not])! !

----SNAPSHOT----(1 November 2020 20:32:36) CuisUniversity-4384.image priorSource: 17671010!
!TerniLapilli methodsFor: 'private' stamp: 'fr 11/1/2020 20:40:59'!
isItgoingFromCornerOrCenter: currentPosition to: newPosition

	^((currentPosition x + currentPosition y) even) and: [currentPosition eightNeighbors includes: newPosition] 
	! !
!TerniLapilli methodsFor: 'as yet unclassified' stamp: 'fr 11/1/2020 20:40:59' prior: 50880502!
itIsValidToGoFrom: currentPosition to: newPosition

	^(self isItgoingFromCornerOrCenter: currentPosition to: newPosition) or: [self goFromEdge: currentPosition to: newPosition]
	! !

!methodRemoval: TerniLapilli #goFromCornerOrCenter:to: stamp: 'fr 11/1/2020 20:40:59'!
goFromCornerOrCenter: currentPosition to: newPosition

	^((currentPosition x + currentPosition y) even) and: [currentPosition eightNeighbors includes: newPosition] 
	!
!TerniLapilli methodsFor: 'private' stamp: 'fr 11/1/2020 20:41:20'!
isItGoingFromEdge: currentPosition to: newPosition

	^((currentPosition x + currentPosition y) odd ) and: [currentPosition fourNeighbors includes: newPosition ]
	! !
!TerniLapilli methodsFor: 'as yet unclassified' stamp: 'fr 11/1/2020 20:41:20' prior: 50883898!
itIsValidToGoFrom: currentPosition to: newPosition

	^(self isItgoingFromCornerOrCenter: currentPosition to: newPosition) or: [self isItGoingFromEdge: currentPosition to: newPosition]
	! !

!methodRemoval: TerniLapilli #goFromEdge:to: stamp: 'fr 11/1/2020 20:41:20'!
goFromEdge: currentPosition to: newPosition

	^((currentPosition x + currentPosition y) odd ) and: [currentPosition fourNeighbors includes: newPosition ]
	!
!TerniLapilli methodsFor: 'private' stamp: 'fr 11/1/2020 20:42:46' prior: 50880436!
positionHoldsAPieceOfAnyPlayer: aPosition

	^ (self player: #X hasPieceAt: aPosition) or: [self player: #O hasPieceAt: aPosition ]! !

!testRun: #TerniLapilliTests #test01XPlaysFirstAndOAfter stamp: 'fr 11/1/2020 20:42:49'!
PASSED!

!testRun: #TerniLapilliTests #test02OPlaysSecondAndXAfter stamp: 'fr 11/1/2020 20:42:49'!
PASSED!

!testRun: #TerniLapilliTests #test03ODoesNotPlayFirst stamp: 'fr 11/1/2020 20:42:49'!
PASSED!

!testRun: #TerniLapilliTests #test04APlayerCanNotPlayTwoTimesInARow stamp: 'fr 11/1/2020 20:42:49'!
PASSED!

!testRun: #TerniLapilliTests #test05XPieceIsWhereHePutsIt stamp: 'fr 11/1/2020 20:42:49'!
PASSED!

!testRun: #TerniLapilliTests #test06OPieceIsWhereHePutsIt stamp: 'fr 11/1/2020 20:42:49'!
PASSED!

!testRun: #TerniLapilliTests #test07XPieceIsNotWhereHeDoesNotPutIt stamp: 'fr 11/1/2020 20:42:49'!
PASSED!

!testRun: #TerniLapilliTests #test08OPieceIsNotWhereHeDoesNotPutIt stamp: 'fr 11/1/2020 20:42:49'!
PASSED!

!testRun: #TerniLapilliTests #test09XCanPutMoreThanOnePieceCorrectly stamp: 'fr 11/1/2020 20:42:49'!
PASSED!

!testRun: #TerniLapilliTests #test10OCanPutMoreThanOnePieceCorrectly stamp: 'fr 11/1/2020 20:42:49'!
PASSED!

!testRun: #TerniLapilliTests #test11OCanNotPutAPieceInAnOccupiedPosition stamp: 'fr 11/1/2020 20:42:49'!
PASSED!

!testRun: #TerniLapilliTests #test12XCanNotPutAPieceInAnOccupiedPosition stamp: 'fr 11/1/2020 20:42:49'!
PASSED!

!testRun: #TerniLapilliTests #test13XCanNotPutAPieceOutOfBounds stamp: 'fr 11/1/2020 20:42:49'!
PASSED!

!testRun: #TerniLapilliTests #test14OCanNotPutAPieceOutOfBounds stamp: 'fr 11/1/2020 20:42:49'!
PASSED!

!testRun: #TerniLapilliTests #test15XCanNotPutMoreThanThreePieces stamp: 'fr 11/1/2020 20:42:49'!
PASSED!

!testRun: #TerniLapilliTests #test16OCanNotPutMoreThanThreePieces stamp: 'fr 11/1/2020 20:42:49'!
PASSED!

!testRun: #TerniLapilliTests #test17WhenXMovesAPieceItIsAtTheNewPositionAndNotAtThePreviousOne stamp: 'fr 11/1/2020 20:42:49'!
PASSED!

!testRun: #TerniLapilliTests #test18WhenOMovesAPieceItIsAtTheNewPositionAndNotAtThePreviousOne stamp: 'fr 11/1/2020 20:42:49'!
PASSED!

!testRun: #TerniLapilliTests #test19XCanNotMoveBeforeAddingThreePieces stamp: 'fr 11/1/2020 20:42:49'!
PASSED!

!testRun: #TerniLapilliTests #test20OCanNotMoveBeforeAddingThreePieces stamp: 'fr 11/1/2020 20:42:49'!
PASSED!

!testRun: #TerniLapilliTests #test21XCanNotMoveFromAPositionThatIsNotUnderHisControl stamp: 'fr 11/1/2020 20:42:49'!
PASSED!

!testRun: #TerniLapilliTests #test22OCanNotMoveFromAPositionThatIsNotUnderHisControl stamp: 'fr 11/1/2020 20:42:49'!
PASSED!

!testRun: #TerniLapilliTests #test23XCanNotMoveFromAnOutOfBoundsPosition stamp: 'fr 11/1/2020 20:42:49'!
PASSED!

!testRun: #TerniLapilliTests #test24OCanNotMoveFromAnOutOfBoundsPosition stamp: 'fr 11/1/2020 20:42:49'!
PASSED!

!testRun: #TerniLapilliTests #test25XCanNotMoveToAnOutOfBoundsPosition stamp: 'fr 11/1/2020 20:42:49'!
PASSED!

!testRun: #TerniLapilliTests #test26OCanNotMoveToAnOutOfBoundsPosition stamp: 'fr 11/1/2020 20:42:49'!
PASSED!

!testRun: #TerniLapilliTests #test27XCanNotMoveToAnOccupiedPosition stamp: 'fr 11/1/2020 20:42:49'!
PASSED!

!testRun: #TerniLapilliTests #test28OCanNotMoveToAnOccupiedPosition stamp: 'fr 11/1/2020 20:42:49'!
PASSED!

!testRun: #TerniLapilliTests #test29XCanNotMoveBetweenPositionsThatAreMoreThanOnePlaceAfar stamp: 'fr 11/1/2020 20:42:49'!
PASSED!

!testRun: #TerniLapilliTests #test30OCanNotMoveBetweenPositionsThatAreMoreThanOnePlaceAfar stamp: 'fr 11/1/2020 20:42:49'!
PASSED!

!testRun: #TerniLapilliTests #test31NoPlayerHasWonIfNoneOfThemHasThreePiecesInLine stamp: 'fr 11/1/2020 20:42:49'!
PASSED!

!testRun: #TerniLapilliTests #test32XWinsWhenHeGetsThreePiecesInTheSameRow stamp: 'fr 11/1/2020 20:42:49'!
PASSED!

!testRun: #TerniLapilliTests #test33XWinsWhenHeGetsThreePiecesInTheSameColumn stamp: 'fr 11/1/2020 20:42:49'!
PASSED!

!testRun: #TerniLapilliTests #test34XWinsWhenHeGetsThreePiecesInTheMainDiagonal stamp: 'fr 11/1/2020 20:42:49'!
PASSED!

!testRun: #TerniLapilliTests #test35XWinsWhenHeGetsThreePiecesInTheSecondaryDiagonal stamp: 'fr 11/1/2020 20:42:49'!
PASSED!

!testRun: #TerniLapilliTests #test36OWinsWhenHeGetsThreePiecesInLine stamp: 'fr 11/1/2020 20:42:49'!
PASSED!

!testRun: #TerniLapilliTests #test37OCanNotPutAfterGameIsOver stamp: 'fr 11/1/2020 20:42:49'!
PASSED!

!testRun: #TerniLapilliTests #test38XCanNotMoveAfterGameIsOver stamp: 'fr 11/1/2020 20:42:49'!
PASSED!

!testRun: #TerniLapilliTests #test39OCanNotMoveAfterGameIsOver stamp: 'fr 11/1/2020 20:42:49'!
PASSED!

!testRun: #TerniLapilliTests #test40ItIsNoOnesTurnAfterGameIsOver stamp: 'fr 11/1/2020 20:42:49'!
PASSED!

!methodRemoval: TerniLapilli #positionsFor:includes: stamp: 'fr 11/1/2020 20:42:52'!
positionsFor: aPlayerId includes: aPosition

	^(self positionsFor: aPlayerId) includes: aPosition !
!TerniLapilli methodsFor: 'private' stamp: 'fr 11/1/2020 20:43:14'!
player: aPlayerId hasAPieceAt: aPosition	
	
	^(self positionsFor: aPlayerId) includes: aPosition! !
!TerniLapilli methodsFor: 'as yet unclassified' stamp: 'fr 11/1/2020 20:43:14' prior: 50871065!
hasXPieceAt: aPosition

	^self player: #X hasAPieceAt: aPosition	! !
!TerniLapilli methodsFor: 'as yet unclassified' stamp: 'fr 11/1/2020 20:43:14' prior: 50871076!
hasOPieceAt: aPosition 
		
	^self player: #O hasAPieceAt: aPosition! !
!TerniLapilli methodsFor: 'as yet unclassified' stamp: 'fr 11/1/2020 20:43:14' prior: 50883939!
positionHoldsAPieceOfAnyPlayer: aPosition

	^ (self player: #X hasAPieceAt: aPosition) or: [self player: #O hasAPieceAt: aPosition ]! !

!methodRemoval: TerniLapilli #player:hasPieceAt: stamp: 'fr 11/1/2020 20:43:14'!
player: aPlayerId hasPieceAt: aPosition	
	
	^(self positionsFor: aPlayerId) includes: aPosition!
!TerniLapilli methodsFor: 'private' stamp: 'fr 11/1/2020 20:45:08' prior: 50880062!
threeInSecondaryDiagonal: playerPositions

	^ (1 to: 3) allSatisfy: [:p | playerPositions includes: p@(4-p)]! !
!TerniLapilli methodsFor: 'private' stamp: 'fr 11/1/2020 20:45:14' prior: 50880045!
threeInMainDiagonal: playerPositions

	^ (1 to: 3) allSatisfy: [:p | playerPositions includes: p@p]! !
!TerniLapilli methodsFor: 'private' stamp: 'fr 11/1/2020 20:45:23' prior: 50880007!
threeInARow: playerPositions

	^ (1 to: 3) anySatisfy: [:x | (playerPositions count: [:aPosition | aPosition x = x]) = 3 ]! !
!TerniLapilli methodsFor: 'private' stamp: 'fr 11/1/2020 20:45:29' prior: 50880027!
threeInAColumn: playerPositions

	^ (1 to: 3) anySatisfy: [:y | (playerPositions count: [:aPosition | aPosition y = y]) = 3 ]! !

set _ Set new. !

set add: 1@2; add: 2@3; add: 2@2; add: 1@1!

set!

set count: [:element | [:value | element x = value] value: 1]!

set count: [:element | [:value | element y = value] value: 1]!

set count: [:element | [:value | element y = value] value: 2] !

set add: 2@2; add: 3@3; add: 2@2; add: 1@1!

set count: [:element | [:value | element y = value] value: 2].!

(1 to: 3) allSatisfy: [:p | set includes: (p@[:value | value] value: p)] !

(1 to: 3) allSatisfy: [:p | set includes: p@([:value | value] value: p)]  !

(1 to: 3) allSatisfy: [:p | set includes: p@([:value | 4-value] value: p)]!

set add: 2@2; add: 1@3; add: 3@1!

(1 to: 3) allSatisfy: [:p | set includes: p@([:value | 4-value] value: p)]!
!TerniLapilli methodsFor: 'private' stamp: 'fr 11/1/2020 20:57:48'!
hasThreeIn: playerPositions thatFulfill: aCoordinatesBlock

	^ (1 to: 3) anySatisfy: [:x | (playerPositions count: [:aPosition | aPosition x = x]) = 3 ]! !
!TerniLapilli methodsFor: 'private' stamp: 'fr 11/1/2020 21:00:32' prior: 50884173!
hasThreeIn: playerPositions thatFulfill: aCoordinatesBlock

	^ (1 to: 3) anySatisfy: [:coordinate | (playerPositions count: (aCoordinatesBlock value: coordinate)) = 3 ]! !

block _ [:aPosition :value | aPosition y = value]. !

(1 to: 3) anySatisfy: [:coordinate | set count: [:aPosition | block value: aPosition; value: 2]].!

(1 to: 3) anySatisfy: [:coordinate | set count: [:aPosition | block value: aPosition value: 2]].!

block _ [:aPosition :coordinate | aPosition y = coordinate] value: 1. !

block _ [:aPosition :coordinate | aPosition y = coordinate] value: 2@2 value: 2.  !

	[:coordinate | 		(set count: 	[:aPosition | [:position | position y = 2] value: aPosition]) = 3]. !


(1 to: 3) anySatisfy: 
	[:coordinate | 		(set count: 	[:aPosition | block value: aPosition value: coordinate ]) = 3]. !

block _ [:aPosition :coordinate | aPosition y = coordinate]. !


(1 to: 3) anySatisfy: 
	[:coordinate | 		(set count: 	[:aPosition | block value: aPosition value: coordinate ]) = 3]. !

block _ [:aPosition :coordinate | aPosition y = coordinate].!

(1 to: 3) anySatisfy: [:coordinate | 		(set count: 	[:aPosition | block value: aPosition value: coordinate ]) = 3].!

set add: 2@2; add: 1@3; add: 3@1!

(1 to: 3) anySatisfy: [:coordinate | 		(set count: 	[:aPosition | block value: aPosition value: coordinate ]) = 3].!

c!

set!

set _ Set new.!

set add: 2@2; add: 1@3; add: 3@1!

(1 to: 3) anySatisfy: [:c | 		(set count: 	[:aPosition | block value: aPosition value: c ]) = 3].!

set _ Set new.!

set add: 2@2; add: 1@2; add: 3@2!

set _ Set new.!

set add: 2@2; add: 1@2; add: 3@2!

(1 to: 3) anySatisfy: [:c | 		(set count: 	[:aPosition | block value: aPosition value: c ]) = 3].!
!TerniLapilli methodsFor: 'private' stamp: 'fr 11/1/2020 21:13:16' prior: 50884144!
threeInAColumn: playerPositions

	"^ (1 to: 3) anySatisfy: [:y | (playerPositions count: [:aPosition | aPosition y = y]) = 3 ]"
	
	^self hasThreeIn: playerPositions thatFulfill: [:aPosition :aCoordinate | aPosition y = aCoordinate]! !
!TerniLapilli methodsFor: 'private' stamp: 'fr 11/1/2020 21:14:14' prior: 50884181!
hasThreeIn: playerPositions thatFulfill: aCoordinatesBlock

	^ (1 to: 3) anySatisfy: [:coordinate | (playerPositions count: [:aPosition | aCoordinatesBlock value: aPosition value: coordinate]) = 3 ]! !

!testRun: #TerniLapilliTests #test01XPlaysFirstAndOAfter stamp: 'fr 11/1/2020 21:14:18'!
PASSED!

!testRun: #TerniLapilliTests #test02OPlaysSecondAndXAfter stamp: 'fr 11/1/2020 21:14:18'!
PASSED!

!testRun: #TerniLapilliTests #test03ODoesNotPlayFirst stamp: 'fr 11/1/2020 21:14:18'!
PASSED!

!testRun: #TerniLapilliTests #test04APlayerCanNotPlayTwoTimesInARow stamp: 'fr 11/1/2020 21:14:18'!
PASSED!

!testRun: #TerniLapilliTests #test05XPieceIsWhereHePutsIt stamp: 'fr 11/1/2020 21:14:18'!
PASSED!

!testRun: #TerniLapilliTests #test06OPieceIsWhereHePutsIt stamp: 'fr 11/1/2020 21:14:18'!
PASSED!

!testRun: #TerniLapilliTests #test07XPieceIsNotWhereHeDoesNotPutIt stamp: 'fr 11/1/2020 21:14:18'!
PASSED!

!testRun: #TerniLapilliTests #test08OPieceIsNotWhereHeDoesNotPutIt stamp: 'fr 11/1/2020 21:14:18'!
PASSED!

!testRun: #TerniLapilliTests #test09XCanPutMoreThanOnePieceCorrectly stamp: 'fr 11/1/2020 21:14:18'!
PASSED!

!testRun: #TerniLapilliTests #test10OCanPutMoreThanOnePieceCorrectly stamp: 'fr 11/1/2020 21:14:18'!
PASSED!

!testRun: #TerniLapilliTests #test11OCanNotPutAPieceInAnOccupiedPosition stamp: 'fr 11/1/2020 21:14:18'!
PASSED!

!testRun: #TerniLapilliTests #test12XCanNotPutAPieceInAnOccupiedPosition stamp: 'fr 11/1/2020 21:14:18'!
PASSED!

!testRun: #TerniLapilliTests #test13XCanNotPutAPieceOutOfBounds stamp: 'fr 11/1/2020 21:14:18'!
PASSED!

!testRun: #TerniLapilliTests #test14OCanNotPutAPieceOutOfBounds stamp: 'fr 11/1/2020 21:14:18'!
PASSED!

!testRun: #TerniLapilliTests #test15XCanNotPutMoreThanThreePieces stamp: 'fr 11/1/2020 21:14:18'!
PASSED!

!testRun: #TerniLapilliTests #test16OCanNotPutMoreThanThreePieces stamp: 'fr 11/1/2020 21:14:18'!
PASSED!

!testRun: #TerniLapilliTests #test17WhenXMovesAPieceItIsAtTheNewPositionAndNotAtThePreviousOne stamp: 'fr 11/1/2020 21:14:18'!
PASSED!

!testRun: #TerniLapilliTests #test18WhenOMovesAPieceItIsAtTheNewPositionAndNotAtThePreviousOne stamp: 'fr 11/1/2020 21:14:18'!
PASSED!

!testRun: #TerniLapilliTests #test19XCanNotMoveBeforeAddingThreePieces stamp: 'fr 11/1/2020 21:14:18'!
PASSED!

!testRun: #TerniLapilliTests #test20OCanNotMoveBeforeAddingThreePieces stamp: 'fr 11/1/2020 21:14:18'!
PASSED!

!testRun: #TerniLapilliTests #test21XCanNotMoveFromAPositionThatIsNotUnderHisControl stamp: 'fr 11/1/2020 21:14:18'!
PASSED!

!testRun: #TerniLapilliTests #test22OCanNotMoveFromAPositionThatIsNotUnderHisControl stamp: 'fr 11/1/2020 21:14:18'!
PASSED!

!testRun: #TerniLapilliTests #test23XCanNotMoveFromAnOutOfBoundsPosition stamp: 'fr 11/1/2020 21:14:18'!
PASSED!

!testRun: #TerniLapilliTests #test24OCanNotMoveFromAnOutOfBoundsPosition stamp: 'fr 11/1/2020 21:14:18'!
PASSED!

!testRun: #TerniLapilliTests #test25XCanNotMoveToAnOutOfBoundsPosition stamp: 'fr 11/1/2020 21:14:18'!
PASSED!

!testRun: #TerniLapilliTests #test26OCanNotMoveToAnOutOfBoundsPosition stamp: 'fr 11/1/2020 21:14:18'!
PASSED!

!testRun: #TerniLapilliTests #test27XCanNotMoveToAnOccupiedPosition stamp: 'fr 11/1/2020 21:14:18'!
PASSED!

!testRun: #TerniLapilliTests #test28OCanNotMoveToAnOccupiedPosition stamp: 'fr 11/1/2020 21:14:18'!
PASSED!

!testRun: #TerniLapilliTests #test29XCanNotMoveBetweenPositionsThatAreMoreThanOnePlaceAfar stamp: 'fr 11/1/2020 21:14:18'!
PASSED!

!testRun: #TerniLapilliTests #test30OCanNotMoveBetweenPositionsThatAreMoreThanOnePlaceAfar stamp: 'fr 11/1/2020 21:14:18'!
PASSED!

!testRun: #TerniLapilliTests #test31NoPlayerHasWonIfNoneOfThemHasThreePiecesInLine stamp: 'fr 11/1/2020 21:14:18'!
PASSED!

!testRun: #TerniLapilliTests #test32XWinsWhenHeGetsThreePiecesInTheSameRow stamp: 'fr 11/1/2020 21:14:18'!
PASSED!

!testRun: #TerniLapilliTests #test33XWinsWhenHeGetsThreePiecesInTheSameColumn stamp: 'fr 11/1/2020 21:14:18'!
PASSED!

!testRun: #TerniLapilliTests #test34XWinsWhenHeGetsThreePiecesInTheMainDiagonal stamp: 'fr 11/1/2020 21:14:18'!
PASSED!

!testRun: #TerniLapilliTests #test35XWinsWhenHeGetsThreePiecesInTheSecondaryDiagonal stamp: 'fr 11/1/2020 21:14:18'!
PASSED!

!testRun: #TerniLapilliTests #test36OWinsWhenHeGetsThreePiecesInLine stamp: 'fr 11/1/2020 21:14:18'!
PASSED!

!testRun: #TerniLapilliTests #test37OCanNotPutAfterGameIsOver stamp: 'fr 11/1/2020 21:14:18'!
PASSED!

!testRun: #TerniLapilliTests #test38XCanNotMoveAfterGameIsOver stamp: 'fr 11/1/2020 21:14:18'!
PASSED!

!testRun: #TerniLapilliTests #test39OCanNotMoveAfterGameIsOver stamp: 'fr 11/1/2020 21:14:18'!
PASSED!

!testRun: #TerniLapilliTests #test40ItIsNoOnesTurnAfterGameIsOver stamp: 'fr 11/1/2020 21:14:18'!
PASSED!
!TerniLapilli methodsFor: 'private' stamp: 'fr 11/1/2020 21:14:38' prior: 50884237!
threeInAColumn: playerPositions
	
	^self hasThreeIn: playerPositions thatFulfill: [:aPosition :aCoordinate | aPosition y = aCoordinate]! !
!TerniLapilli methodsFor: 'private' stamp: 'fr 11/1/2020 21:14:58' prior: 50884137!
threeInARow: playerPositions

	^self hasThreeIn: playerPositions thatFulfill: [:aPosition :aCoordinate | aPosition x = aCoordinate]! !

!testRun: #TerniLapilliTests #test01XPlaysFirstAndOAfter stamp: 'fr 11/1/2020 21:15:00'!
PASSED!

!testRun: #TerniLapilliTests #test02OPlaysSecondAndXAfter stamp: 'fr 11/1/2020 21:15:00'!
PASSED!

!testRun: #TerniLapilliTests #test03ODoesNotPlayFirst stamp: 'fr 11/1/2020 21:15:00'!
PASSED!

!testRun: #TerniLapilliTests #test04APlayerCanNotPlayTwoTimesInARow stamp: 'fr 11/1/2020 21:15:00'!
PASSED!

!testRun: #TerniLapilliTests #test05XPieceIsWhereHePutsIt stamp: 'fr 11/1/2020 21:15:00'!
PASSED!

!testRun: #TerniLapilliTests #test06OPieceIsWhereHePutsIt stamp: 'fr 11/1/2020 21:15:00'!
PASSED!

!testRun: #TerniLapilliTests #test07XPieceIsNotWhereHeDoesNotPutIt stamp: 'fr 11/1/2020 21:15:00'!
PASSED!

!testRun: #TerniLapilliTests #test08OPieceIsNotWhereHeDoesNotPutIt stamp: 'fr 11/1/2020 21:15:00'!
PASSED!

!testRun: #TerniLapilliTests #test09XCanPutMoreThanOnePieceCorrectly stamp: 'fr 11/1/2020 21:15:00'!
PASSED!

!testRun: #TerniLapilliTests #test10OCanPutMoreThanOnePieceCorrectly stamp: 'fr 11/1/2020 21:15:00'!
PASSED!

!testRun: #TerniLapilliTests #test11OCanNotPutAPieceInAnOccupiedPosition stamp: 'fr 11/1/2020 21:15:00'!
PASSED!

!testRun: #TerniLapilliTests #test12XCanNotPutAPieceInAnOccupiedPosition stamp: 'fr 11/1/2020 21:15:00'!
PASSED!

!testRun: #TerniLapilliTests #test13XCanNotPutAPieceOutOfBounds stamp: 'fr 11/1/2020 21:15:00'!
PASSED!

!testRun: #TerniLapilliTests #test14OCanNotPutAPieceOutOfBounds stamp: 'fr 11/1/2020 21:15:00'!
PASSED!

!testRun: #TerniLapilliTests #test15XCanNotPutMoreThanThreePieces stamp: 'fr 11/1/2020 21:15:00'!
PASSED!

!testRun: #TerniLapilliTests #test16OCanNotPutMoreThanThreePieces stamp: 'fr 11/1/2020 21:15:00'!
PASSED!

!testRun: #TerniLapilliTests #test17WhenXMovesAPieceItIsAtTheNewPositionAndNotAtThePreviousOne stamp: 'fr 11/1/2020 21:15:00'!
PASSED!

!testRun: #TerniLapilliTests #test18WhenOMovesAPieceItIsAtTheNewPositionAndNotAtThePreviousOne stamp: 'fr 11/1/2020 21:15:00'!
PASSED!

!testRun: #TerniLapilliTests #test19XCanNotMoveBeforeAddingThreePieces stamp: 'fr 11/1/2020 21:15:00'!
PASSED!

!testRun: #TerniLapilliTests #test20OCanNotMoveBeforeAddingThreePieces stamp: 'fr 11/1/2020 21:15:00'!
PASSED!

!testRun: #TerniLapilliTests #test21XCanNotMoveFromAPositionThatIsNotUnderHisControl stamp: 'fr 11/1/2020 21:15:00'!
PASSED!

!testRun: #TerniLapilliTests #test22OCanNotMoveFromAPositionThatIsNotUnderHisControl stamp: 'fr 11/1/2020 21:15:00'!
PASSED!

!testRun: #TerniLapilliTests #test23XCanNotMoveFromAnOutOfBoundsPosition stamp: 'fr 11/1/2020 21:15:00'!
PASSED!

!testRun: #TerniLapilliTests #test24OCanNotMoveFromAnOutOfBoundsPosition stamp: 'fr 11/1/2020 21:15:00'!
PASSED!

!testRun: #TerniLapilliTests #test25XCanNotMoveToAnOutOfBoundsPosition stamp: 'fr 11/1/2020 21:15:00'!
PASSED!

!testRun: #TerniLapilliTests #test26OCanNotMoveToAnOutOfBoundsPosition stamp: 'fr 11/1/2020 21:15:00'!
PASSED!

!testRun: #TerniLapilliTests #test27XCanNotMoveToAnOccupiedPosition stamp: 'fr 11/1/2020 21:15:00'!
PASSED!

!testRun: #TerniLapilliTests #test28OCanNotMoveToAnOccupiedPosition stamp: 'fr 11/1/2020 21:15:00'!
PASSED!

!testRun: #TerniLapilliTests #test29XCanNotMoveBetweenPositionsThatAreMoreThanOnePlaceAfar stamp: 'fr 11/1/2020 21:15:00'!
PASSED!

!testRun: #TerniLapilliTests #test30OCanNotMoveBetweenPositionsThatAreMoreThanOnePlaceAfar stamp: 'fr 11/1/2020 21:15:00'!
PASSED!

!testRun: #TerniLapilliTests #test31NoPlayerHasWonIfNoneOfThemHasThreePiecesInLine stamp: 'fr 11/1/2020 21:15:00'!
PASSED!

!testRun: #TerniLapilliTests #test32XWinsWhenHeGetsThreePiecesInTheSameRow stamp: 'fr 11/1/2020 21:15:00'!
PASSED!

!testRun: #TerniLapilliTests #test33XWinsWhenHeGetsThreePiecesInTheSameColumn stamp: 'fr 11/1/2020 21:15:00'!
PASSED!

!testRun: #TerniLapilliTests #test34XWinsWhenHeGetsThreePiecesInTheMainDiagonal stamp: 'fr 11/1/2020 21:15:00'!
PASSED!

!testRun: #TerniLapilliTests #test35XWinsWhenHeGetsThreePiecesInTheSecondaryDiagonal stamp: 'fr 11/1/2020 21:15:00'!
PASSED!

!testRun: #TerniLapilliTests #test36OWinsWhenHeGetsThreePiecesInLine stamp: 'fr 11/1/2020 21:15:00'!
PASSED!

!testRun: #TerniLapilliTests #test37OCanNotPutAfterGameIsOver stamp: 'fr 11/1/2020 21:15:00'!
PASSED!

!testRun: #TerniLapilliTests #test38XCanNotMoveAfterGameIsOver stamp: 'fr 11/1/2020 21:15:00'!
PASSED!

!testRun: #TerniLapilliTests #test39OCanNotMoveAfterGameIsOver stamp: 'fr 11/1/2020 21:15:00'!
PASSED!

!testRun: #TerniLapilliTests #test40ItIsNoOnesTurnAfterGameIsOver stamp: 'fr 11/1/2020 21:15:00'!
PASSED!
!TerniLapilli methodsFor: 'private' stamp: 'fr 11/1/2020 21:18:45'!
hasThreeInADiagonal: playerPositions thatFulfill: aCoordinatesBlock

	^ (1 to: 3) allSatisfy: [:p | playerPositions includes: p@p]! !
!TerniLapilli methodsFor: 'private' stamp: 'fr 11/1/2020 21:20:45' prior: 50884552!
hasThreeInADiagonal: playerPositions thatFulfill: aCoordinatesBlock

	^ (1 to: 3) allSatisfy: [:p | playerPositions includes: p@(aCoordinatesBlock value: p)]! !
!TerniLapilli methodsFor: 'private' stamp: 'fr 11/1/2020 21:21:00' prior: 50884559!
hasThreeInADiagonal: playerPositions thatFulfill: aCoordinatesBlock

	^ (1 to: 3) allSatisfy: [:coordinate | playerPositions includes: coordinate@(aCoordinatesBlock value: coordinate )]! !
!TerniLapilli methodsFor: 'private' stamp: 'fr 11/1/2020 21:21:01' prior: 50884567!
hasThreeInADiagonal: playerPositions thatFulfill: aCoordinatesBlock

	^ (1 to: 3) allSatisfy: [:coordinate | playerPositions includes: coordinate@(aCoordinatesBlock value: coordinate)]! !
!TerniLapilli methodsFor: 'private' stamp: 'fr 11/1/2020 21:21:43' prior: 50884131!
threeInMainDiagonal: playerPositions

	"^ (1 to: 3) allSatisfy: [:p | playerPositions includes: p@p]"
	
	^self hasThreeInADiagonal: playerPositions thatFulfill: [:coordinate | coordinate] ! !

!testRun: #TerniLapilliTests #test01XPlaysFirstAndOAfter stamp: 'fr 11/1/2020 21:21:45'!
PASSED!

!testRun: #TerniLapilliTests #test02OPlaysSecondAndXAfter stamp: 'fr 11/1/2020 21:21:45'!
PASSED!

!testRun: #TerniLapilliTests #test03ODoesNotPlayFirst stamp: 'fr 11/1/2020 21:21:45'!
PASSED!

!testRun: #TerniLapilliTests #test04APlayerCanNotPlayTwoTimesInARow stamp: 'fr 11/1/2020 21:21:45'!
PASSED!

!testRun: #TerniLapilliTests #test05XPieceIsWhereHePutsIt stamp: 'fr 11/1/2020 21:21:45'!
PASSED!

!testRun: #TerniLapilliTests #test06OPieceIsWhereHePutsIt stamp: 'fr 11/1/2020 21:21:45'!
PASSED!

!testRun: #TerniLapilliTests #test07XPieceIsNotWhereHeDoesNotPutIt stamp: 'fr 11/1/2020 21:21:45'!
PASSED!

!testRun: #TerniLapilliTests #test08OPieceIsNotWhereHeDoesNotPutIt stamp: 'fr 11/1/2020 21:21:45'!
PASSED!

!testRun: #TerniLapilliTests #test09XCanPutMoreThanOnePieceCorrectly stamp: 'fr 11/1/2020 21:21:45'!
PASSED!

!testRun: #TerniLapilliTests #test10OCanPutMoreThanOnePieceCorrectly stamp: 'fr 11/1/2020 21:21:45'!
PASSED!

!testRun: #TerniLapilliTests #test11OCanNotPutAPieceInAnOccupiedPosition stamp: 'fr 11/1/2020 21:21:45'!
PASSED!

!testRun: #TerniLapilliTests #test12XCanNotPutAPieceInAnOccupiedPosition stamp: 'fr 11/1/2020 21:21:45'!
PASSED!

!testRun: #TerniLapilliTests #test13XCanNotPutAPieceOutOfBounds stamp: 'fr 11/1/2020 21:21:45'!
PASSED!

!testRun: #TerniLapilliTests #test14OCanNotPutAPieceOutOfBounds stamp: 'fr 11/1/2020 21:21:45'!
PASSED!

!testRun: #TerniLapilliTests #test15XCanNotPutMoreThanThreePieces stamp: 'fr 11/1/2020 21:21:45'!
PASSED!

!testRun: #TerniLapilliTests #test16OCanNotPutMoreThanThreePieces stamp: 'fr 11/1/2020 21:21:45'!
PASSED!

!testRun: #TerniLapilliTests #test17WhenXMovesAPieceItIsAtTheNewPositionAndNotAtThePreviousOne stamp: 'fr 11/1/2020 21:21:45'!
PASSED!

!testRun: #TerniLapilliTests #test18WhenOMovesAPieceItIsAtTheNewPositionAndNotAtThePreviousOne stamp: 'fr 11/1/2020 21:21:45'!
PASSED!

!testRun: #TerniLapilliTests #test19XCanNotMoveBeforeAddingThreePieces stamp: 'fr 11/1/2020 21:21:45'!
PASSED!

!testRun: #TerniLapilliTests #test20OCanNotMoveBeforeAddingThreePieces stamp: 'fr 11/1/2020 21:21:45'!
PASSED!

!testRun: #TerniLapilliTests #test21XCanNotMoveFromAPositionThatIsNotUnderHisControl stamp: 'fr 11/1/2020 21:21:45'!
PASSED!

!testRun: #TerniLapilliTests #test22OCanNotMoveFromAPositionThatIsNotUnderHisControl stamp: 'fr 11/1/2020 21:21:45'!
PASSED!

!testRun: #TerniLapilliTests #test23XCanNotMoveFromAnOutOfBoundsPosition stamp: 'fr 11/1/2020 21:21:45'!
PASSED!

!testRun: #TerniLapilliTests #test24OCanNotMoveFromAnOutOfBoundsPosition stamp: 'fr 11/1/2020 21:21:45'!
PASSED!

!testRun: #TerniLapilliTests #test25XCanNotMoveToAnOutOfBoundsPosition stamp: 'fr 11/1/2020 21:21:45'!
PASSED!

!testRun: #TerniLapilliTests #test26OCanNotMoveToAnOutOfBoundsPosition stamp: 'fr 11/1/2020 21:21:45'!
PASSED!

!testRun: #TerniLapilliTests #test27XCanNotMoveToAnOccupiedPosition stamp: 'fr 11/1/2020 21:21:45'!
PASSED!

!testRun: #TerniLapilliTests #test28OCanNotMoveToAnOccupiedPosition stamp: 'fr 11/1/2020 21:21:45'!
PASSED!

!testRun: #TerniLapilliTests #test29XCanNotMoveBetweenPositionsThatAreMoreThanOnePlaceAfar stamp: 'fr 11/1/2020 21:21:45'!
PASSED!

!testRun: #TerniLapilliTests #test30OCanNotMoveBetweenPositionsThatAreMoreThanOnePlaceAfar stamp: 'fr 11/1/2020 21:21:45'!
PASSED!

!testRun: #TerniLapilliTests #test31NoPlayerHasWonIfNoneOfThemHasThreePiecesInLine stamp: 'fr 11/1/2020 21:21:45'!
PASSED!

!testRun: #TerniLapilliTests #test32XWinsWhenHeGetsThreePiecesInTheSameRow stamp: 'fr 11/1/2020 21:21:45'!
PASSED!

!testRun: #TerniLapilliTests #test33XWinsWhenHeGetsThreePiecesInTheSameColumn stamp: 'fr 11/1/2020 21:21:45'!
PASSED!

!testRun: #TerniLapilliTests #test34XWinsWhenHeGetsThreePiecesInTheMainDiagonal stamp: 'fr 11/1/2020 21:21:45'!
PASSED!

!testRun: #TerniLapilliTests #test35XWinsWhenHeGetsThreePiecesInTheSecondaryDiagonal stamp: 'fr 11/1/2020 21:21:45'!
PASSED!

!testRun: #TerniLapilliTests #test36OWinsWhenHeGetsThreePiecesInLine stamp: 'fr 11/1/2020 21:21:45'!
PASSED!

!testRun: #TerniLapilliTests #test37OCanNotPutAfterGameIsOver stamp: 'fr 11/1/2020 21:21:45'!
PASSED!

!testRun: #TerniLapilliTests #test38XCanNotMoveAfterGameIsOver stamp: 'fr 11/1/2020 21:21:45'!
PASSED!

!testRun: #TerniLapilliTests #test39OCanNotMoveAfterGameIsOver stamp: 'fr 11/1/2020 21:21:45'!
PASSED!

!testRun: #TerniLapilliTests #test40ItIsNoOnesTurnAfterGameIsOver stamp: 'fr 11/1/2020 21:21:45'!
PASSED!
!TerniLapilli methodsFor: 'private' stamp: 'fr 11/1/2020 21:22:13' prior: 50884124!
threeInSecondaryDiagonal: playerPositions

	"^ (1 to: 3) allSatisfy: [:p | playerPositions includes: p@(4-p)]"
	
	^self hasThreeInADiagonal: playerPositions thatFulfill: [:coordinate | 4-coordinate]! !
!TerniLapilli methodsFor: 'private' stamp: 'fr 11/1/2020 21:22:16' prior: 50884735!
threeInSecondaryDiagonal: playerPositions
	
	^self hasThreeInADiagonal: playerPositions thatFulfill: [:coordinate | 4-coordinate]! !

!testRun: #TerniLapilliTests #test01XPlaysFirstAndOAfter stamp: 'fr 11/1/2020 21:22:20'!
PASSED!

!testRun: #TerniLapilliTests #test02OPlaysSecondAndXAfter stamp: 'fr 11/1/2020 21:22:20'!
PASSED!

!testRun: #TerniLapilliTests #test03ODoesNotPlayFirst stamp: 'fr 11/1/2020 21:22:20'!
PASSED!

!testRun: #TerniLapilliTests #test04APlayerCanNotPlayTwoTimesInARow stamp: 'fr 11/1/2020 21:22:20'!
PASSED!

!testRun: #TerniLapilliTests #test05XPieceIsWhereHePutsIt stamp: 'fr 11/1/2020 21:22:20'!
PASSED!

!testRun: #TerniLapilliTests #test06OPieceIsWhereHePutsIt stamp: 'fr 11/1/2020 21:22:20'!
PASSED!

!testRun: #TerniLapilliTests #test07XPieceIsNotWhereHeDoesNotPutIt stamp: 'fr 11/1/2020 21:22:20'!
PASSED!

!testRun: #TerniLapilliTests #test08OPieceIsNotWhereHeDoesNotPutIt stamp: 'fr 11/1/2020 21:22:20'!
PASSED!

!testRun: #TerniLapilliTests #test09XCanPutMoreThanOnePieceCorrectly stamp: 'fr 11/1/2020 21:22:20'!
PASSED!

!testRun: #TerniLapilliTests #test10OCanPutMoreThanOnePieceCorrectly stamp: 'fr 11/1/2020 21:22:20'!
PASSED!

!testRun: #TerniLapilliTests #test11OCanNotPutAPieceInAnOccupiedPosition stamp: 'fr 11/1/2020 21:22:20'!
PASSED!

!testRun: #TerniLapilliTests #test12XCanNotPutAPieceInAnOccupiedPosition stamp: 'fr 11/1/2020 21:22:20'!
PASSED!

!testRun: #TerniLapilliTests #test13XCanNotPutAPieceOutOfBounds stamp: 'fr 11/1/2020 21:22:20'!
PASSED!

!testRun: #TerniLapilliTests #test14OCanNotPutAPieceOutOfBounds stamp: 'fr 11/1/2020 21:22:20'!
PASSED!

!testRun: #TerniLapilliTests #test15XCanNotPutMoreThanThreePieces stamp: 'fr 11/1/2020 21:22:20'!
PASSED!

!testRun: #TerniLapilliTests #test16OCanNotPutMoreThanThreePieces stamp: 'fr 11/1/2020 21:22:20'!
PASSED!

!testRun: #TerniLapilliTests #test17WhenXMovesAPieceItIsAtTheNewPositionAndNotAtThePreviousOne stamp: 'fr 11/1/2020 21:22:20'!
PASSED!

!testRun: #TerniLapilliTests #test18WhenOMovesAPieceItIsAtTheNewPositionAndNotAtThePreviousOne stamp: 'fr 11/1/2020 21:22:20'!
PASSED!

!testRun: #TerniLapilliTests #test19XCanNotMoveBeforeAddingThreePieces stamp: 'fr 11/1/2020 21:22:20'!
PASSED!

!testRun: #TerniLapilliTests #test20OCanNotMoveBeforeAddingThreePieces stamp: 'fr 11/1/2020 21:22:20'!
PASSED!

!testRun: #TerniLapilliTests #test21XCanNotMoveFromAPositionThatIsNotUnderHisControl stamp: 'fr 11/1/2020 21:22:20'!
PASSED!

!testRun: #TerniLapilliTests #test22OCanNotMoveFromAPositionThatIsNotUnderHisControl stamp: 'fr 11/1/2020 21:22:20'!
PASSED!

!testRun: #TerniLapilliTests #test23XCanNotMoveFromAnOutOfBoundsPosition stamp: 'fr 11/1/2020 21:22:20'!
PASSED!

!testRun: #TerniLapilliTests #test24OCanNotMoveFromAnOutOfBoundsPosition stamp: 'fr 11/1/2020 21:22:20'!
PASSED!

!testRun: #TerniLapilliTests #test25XCanNotMoveToAnOutOfBoundsPosition stamp: 'fr 11/1/2020 21:22:20'!
PASSED!

!testRun: #TerniLapilliTests #test26OCanNotMoveToAnOutOfBoundsPosition stamp: 'fr 11/1/2020 21:22:20'!
PASSED!

!testRun: #TerniLapilliTests #test27XCanNotMoveToAnOccupiedPosition stamp: 'fr 11/1/2020 21:22:20'!
PASSED!

!testRun: #TerniLapilliTests #test28OCanNotMoveToAnOccupiedPosition stamp: 'fr 11/1/2020 21:22:20'!
PASSED!

!testRun: #TerniLapilliTests #test29XCanNotMoveBetweenPositionsThatAreMoreThanOnePlaceAfar stamp: 'fr 11/1/2020 21:22:20'!
PASSED!

!testRun: #TerniLapilliTests #test30OCanNotMoveBetweenPositionsThatAreMoreThanOnePlaceAfar stamp: 'fr 11/1/2020 21:22:20'!
PASSED!

!testRun: #TerniLapilliTests #test31NoPlayerHasWonIfNoneOfThemHasThreePiecesInLine stamp: 'fr 11/1/2020 21:22:20'!
PASSED!

!testRun: #TerniLapilliTests #test32XWinsWhenHeGetsThreePiecesInTheSameRow stamp: 'fr 11/1/2020 21:22:20'!
PASSED!

!testRun: #TerniLapilliTests #test33XWinsWhenHeGetsThreePiecesInTheSameColumn stamp: 'fr 11/1/2020 21:22:20'!
PASSED!

!testRun: #TerniLapilliTests #test34XWinsWhenHeGetsThreePiecesInTheMainDiagonal stamp: 'fr 11/1/2020 21:22:20'!
PASSED!

!testRun: #TerniLapilliTests #test35XWinsWhenHeGetsThreePiecesInTheSecondaryDiagonal stamp: 'fr 11/1/2020 21:22:20'!
PASSED!

!testRun: #TerniLapilliTests #test36OWinsWhenHeGetsThreePiecesInLine stamp: 'fr 11/1/2020 21:22:20'!
PASSED!

!testRun: #TerniLapilliTests #test37OCanNotPutAfterGameIsOver stamp: 'fr 11/1/2020 21:22:20'!
PASSED!

!testRun: #TerniLapilliTests #test38XCanNotMoveAfterGameIsOver stamp: 'fr 11/1/2020 21:22:20'!
PASSED!

!testRun: #TerniLapilliTests #test39OCanNotMoveAfterGameIsOver stamp: 'fr 11/1/2020 21:22:20'!
PASSED!

!testRun: #TerniLapilliTests #test40ItIsNoOnesTurnAfterGameIsOver stamp: 'fr 11/1/2020 21:22:20'!
PASSED!
!TerniLapilli methodsFor: 'private' stamp: 'fr 11/1/2020 21:22:28' prior: 50884585!
threeInMainDiagonal: playerPositions

	^self hasThreeInADiagonal: playerPositions thatFulfill: [:coordinate | coordinate] ! !
!TerniLapilli methodsFor: 'state' stamp: 'fr 11/1/2020 21:23:30'!
itIsPlayerOsTurnError

	^ self error: self class playerOTurnErrorDescription! !
!OMoving methodsFor: 'as yet unclassified' stamp: 'fr 11/1/2020 21:23:30' prior: 50874500 overrides: 50870596!
putXAt: aPosition

	terniLapilliGame itIsPlayerOsTurnError 
! !
!OMoving methodsFor: 'as yet unclassified' stamp: 'fr 11/1/2020 21:23:30' prior: 50875058 overrides: 50874625!
moveXFrom: currentPosition to: newPosition

	terniLapilliGame itIsPlayerOsTurnError ! !
!OAdding methodsFor: 'as yet unclassified' stamp: 'fr 11/1/2020 21:23:30' prior: 50870649 overrides: 50870596!
putXAt: aPosition

	terniLapilliGame itIsPlayerOsTurnError ! !
!OAdding methodsFor: 'as yet unclassified' stamp: 'fr 11/1/2020 21:23:30' prior: 50874643 overrides: 50874625!
moveXFrom: currentPosition to: newPosition

	terniLapilliGame itIsPlayerOsTurnError! !

!methodRemoval: TerniLapilli #itIsPlayerOsTurn stamp: 'fr 11/1/2020 21:23:30'!
itIsPlayerOsTurn

	^ self error: self class playerOTurnErrorDescription!
!TerniLapilli methodsFor: 'state' stamp: 'fr 11/1/2020 21:23:37'!
itIsPlayerXsTurnError

	^ self error: self class playerXTurnErrorDescription! !
!XMoving methodsFor: 'as yet unclassified' stamp: 'fr 11/1/2020 21:23:37' prior: 50875046 overrides: 50875040!
moveOFrom: currentPosition to: newPosition

	terniLapilliGame itIsPlayerXsTurnError ! !
!XAdding methodsFor: 'as yet unclassified' stamp: 'fr 11/1/2020 21:23:37' prior: 50870644 overrides: 50870591!
putOAt: aPosition

	terniLapilliGame itIsPlayerXsTurnError! !
!XMoving methodsFor: 'as yet unclassified' stamp: 'fr 11/1/2020 21:23:37' prior: 50874506 overrides: 50870591!
putOAt: aPosition

	terniLapilliGame itIsPlayerXsTurnError

	! !
!XAdding methodsFor: 'as yet unclassified' stamp: 'fr 11/1/2020 21:23:37' prior: 50874830 overrides: 50875040!
moveOFrom: currentPosition to: newPosition

	terniLapilliGame itIsPlayerXsTurnError ! !

!methodRemoval: TerniLapilli #itIsPlayerXsTurn stamp: 'fr 11/1/2020 21:23:37'!
itIsPlayerXsTurn

	^ self error: self class playerXTurnErrorDescription!

!testRun: #TerniLapilliTests #test01XPlaysFirstAndOAfter stamp: 'fr 11/1/2020 21:24:09'!
PASSED!

!testRun: #TerniLapilliTests #test02OPlaysSecondAndXAfter stamp: 'fr 11/1/2020 21:24:09'!
PASSED!

!testRun: #TerniLapilliTests #test03ODoesNotPlayFirst stamp: 'fr 11/1/2020 21:24:09'!
PASSED!

!testRun: #TerniLapilliTests #test04APlayerCanNotPlayTwoTimesInARow stamp: 'fr 11/1/2020 21:24:09'!
PASSED!

!testRun: #TerniLapilliTests #test05XPieceIsWhereHePutsIt stamp: 'fr 11/1/2020 21:24:09'!
PASSED!

!testRun: #TerniLapilliTests #test06OPieceIsWhereHePutsIt stamp: 'fr 11/1/2020 21:24:09'!
PASSED!

!testRun: #TerniLapilliTests #test07XPieceIsNotWhereHeDoesNotPutIt stamp: 'fr 11/1/2020 21:24:09'!
PASSED!

!testRun: #TerniLapilliTests #test08OPieceIsNotWhereHeDoesNotPutIt stamp: 'fr 11/1/2020 21:24:09'!
PASSED!

!testRun: #TerniLapilliTests #test09XCanPutMoreThanOnePieceCorrectly stamp: 'fr 11/1/2020 21:24:09'!
PASSED!

!testRun: #TerniLapilliTests #test10OCanPutMoreThanOnePieceCorrectly stamp: 'fr 11/1/2020 21:24:09'!
PASSED!

!testRun: #TerniLapilliTests #test11OCanNotPutAPieceInAnOccupiedPosition stamp: 'fr 11/1/2020 21:24:09'!
PASSED!

!testRun: #TerniLapilliTests #test12XCanNotPutAPieceInAnOccupiedPosition stamp: 'fr 11/1/2020 21:24:09'!
PASSED!

!testRun: #TerniLapilliTests #test13XCanNotPutAPieceOutOfBounds stamp: 'fr 11/1/2020 21:24:09'!
PASSED!

!testRun: #TerniLapilliTests #test14OCanNotPutAPieceOutOfBounds stamp: 'fr 11/1/2020 21:24:09'!
PASSED!

!testRun: #TerniLapilliTests #test15XCanNotPutMoreThanThreePieces stamp: 'fr 11/1/2020 21:24:09'!
PASSED!

!testRun: #TerniLapilliTests #test16OCanNotPutMoreThanThreePieces stamp: 'fr 11/1/2020 21:24:09'!
PASSED!

!testRun: #TerniLapilliTests #test17WhenXMovesAPieceItIsAtTheNewPositionAndNotAtThePreviousOne stamp: 'fr 11/1/2020 21:24:09'!
PASSED!

!testRun: #TerniLapilliTests #test18WhenOMovesAPieceItIsAtTheNewPositionAndNotAtThePreviousOne stamp: 'fr 11/1/2020 21:24:09'!
PASSED!

!testRun: #TerniLapilliTests #test19XCanNotMoveBeforeAddingThreePieces stamp: 'fr 11/1/2020 21:24:09'!
PASSED!

!testRun: #TerniLapilliTests #test20OCanNotMoveBeforeAddingThreePieces stamp: 'fr 11/1/2020 21:24:09'!
PASSED!

!testRun: #TerniLapilliTests #test21XCanNotMoveFromAPositionThatIsNotUnderHisControl stamp: 'fr 11/1/2020 21:24:09'!
PASSED!

!testRun: #TerniLapilliTests #test22OCanNotMoveFromAPositionThatIsNotUnderHisControl stamp: 'fr 11/1/2020 21:24:09'!
PASSED!

!testRun: #TerniLapilliTests #test23XCanNotMoveFromAnOutOfBoundsPosition stamp: 'fr 11/1/2020 21:24:09'!
PASSED!

!testRun: #TerniLapilliTests #test24OCanNotMoveFromAnOutOfBoundsPosition stamp: 'fr 11/1/2020 21:24:09'!
PASSED!

!testRun: #TerniLapilliTests #test25XCanNotMoveToAnOutOfBoundsPosition stamp: 'fr 11/1/2020 21:24:09'!
PASSED!

!testRun: #TerniLapilliTests #test26OCanNotMoveToAnOutOfBoundsPosition stamp: 'fr 11/1/2020 21:24:09'!
PASSED!

!testRun: #TerniLapilliTests #test27XCanNotMoveToAnOccupiedPosition stamp: 'fr 11/1/2020 21:24:09'!
PASSED!

!testRun: #TerniLapilliTests #test28OCanNotMoveToAnOccupiedPosition stamp: 'fr 11/1/2020 21:24:09'!
PASSED!

!testRun: #TerniLapilliTests #test29XCanNotMoveBetweenPositionsThatAreMoreThanOnePlaceAfar stamp: 'fr 11/1/2020 21:24:09'!
PASSED!

!testRun: #TerniLapilliTests #test30OCanNotMoveBetweenPositionsThatAreMoreThanOnePlaceAfar stamp: 'fr 11/1/2020 21:24:09'!
PASSED!

!testRun: #TerniLapilliTests #test31NoPlayerHasWonIfNoneOfThemHasThreePiecesInLine stamp: 'fr 11/1/2020 21:24:09'!
PASSED!

!testRun: #TerniLapilliTests #test32XWinsWhenHeGetsThreePiecesInTheSameRow stamp: 'fr 11/1/2020 21:24:09'!
PASSED!

!testRun: #TerniLapilliTests #test33XWinsWhenHeGetsThreePiecesInTheSameColumn stamp: 'fr 11/1/2020 21:24:09'!
PASSED!

!testRun: #TerniLapilliTests #test34XWinsWhenHeGetsThreePiecesInTheMainDiagonal stamp: 'fr 11/1/2020 21:24:09'!
PASSED!

!testRun: #TerniLapilliTests #test35XWinsWhenHeGetsThreePiecesInTheSecondaryDiagonal stamp: 'fr 11/1/2020 21:24:09'!
PASSED!

!testRun: #TerniLapilliTests #test36OWinsWhenHeGetsThreePiecesInLine stamp: 'fr 11/1/2020 21:24:09'!
PASSED!

!testRun: #TerniLapilliTests #test37OCanNotPutAfterGameIsOver stamp: 'fr 11/1/2020 21:24:09'!
PASSED!

!testRun: #TerniLapilliTests #test38XCanNotMoveAfterGameIsOver stamp: 'fr 11/1/2020 21:24:09'!
PASSED!

!testRun: #TerniLapilliTests #test39OCanNotMoveAfterGameIsOver stamp: 'fr 11/1/2020 21:24:09'!
PASSED!

!testRun: #TerniLapilliTests #test40ItIsNoOnesTurnAfterGameIsOver stamp: 'fr 11/1/2020 21:24:09'!
PASSED!
!TerniLapilli methodsFor: 'private' stamp: 'fr 11/1/2020 21:29:18'!
isAnEdge: currentPosition

	^ (currentPosition x + currentPosition y) odd! !
!TerniLapilli methodsFor: 'private' stamp: 'fr 11/1/2020 21:29:18' prior: 50883914!
isItGoingFromEdge: currentPosition to: newPosition

	^((self isAnEdge: currentPosition) ) and: [currentPosition fourNeighbors includes: newPosition ]
	! !
!TerniLapilli methodsFor: 'private' stamp: 'fr 11/1/2020 21:29:25' prior: 50885115!
isItGoingFromEdge: currentPosition to: newPosition

	^(self isAnEdge: currentPosition) and: [currentPosition fourNeighbors includes: newPosition ]
	! !
!TerniLapilli methodsFor: 'private' stamp: 'fr 11/1/2020 21:29:30' prior: 50885123!
isItGoingFromEdge: currentPosition to: newPosition

	^(self isAnEdge: currentPosition) and: [currentPosition fourNeighbors includes: newPosition]
	! !
!TerniLapilli methodsFor: 'private' stamp: 'fr 11/1/2020 21:30:43'!
isACornerOrCenter: currentPosition

	^ (currentPosition x + currentPosition y) even! !
!TerniLapilli methodsFor: 'private' stamp: 'fr 11/1/2020 21:30:55' prior: 50883889!
isItgoingFromCornerOrCenter: currentPosition to: newPosition

	^(self isACornerOrCenter: currentPosition) and: [currentPosition eightNeighbors includes: newPosition] 
	! !

!testRun: #TerniLapilliTests #test01XPlaysFirstAndOAfter stamp: 'fr 11/1/2020 21:30:57'!
PASSED!

!testRun: #TerniLapilliTests #test02OPlaysSecondAndXAfter stamp: 'fr 11/1/2020 21:30:57'!
PASSED!

!testRun: #TerniLapilliTests #test03ODoesNotPlayFirst stamp: 'fr 11/1/2020 21:30:57'!
PASSED!

!testRun: #TerniLapilliTests #test04APlayerCanNotPlayTwoTimesInARow stamp: 'fr 11/1/2020 21:30:57'!
PASSED!

!testRun: #TerniLapilliTests #test05XPieceIsWhereHePutsIt stamp: 'fr 11/1/2020 21:30:57'!
PASSED!

!testRun: #TerniLapilliTests #test06OPieceIsWhereHePutsIt stamp: 'fr 11/1/2020 21:30:57'!
PASSED!

!testRun: #TerniLapilliTests #test07XPieceIsNotWhereHeDoesNotPutIt stamp: 'fr 11/1/2020 21:30:57'!
PASSED!

!testRun: #TerniLapilliTests #test08OPieceIsNotWhereHeDoesNotPutIt stamp: 'fr 11/1/2020 21:30:57'!
PASSED!

!testRun: #TerniLapilliTests #test09XCanPutMoreThanOnePieceCorrectly stamp: 'fr 11/1/2020 21:30:57'!
PASSED!

!testRun: #TerniLapilliTests #test10OCanPutMoreThanOnePieceCorrectly stamp: 'fr 11/1/2020 21:30:57'!
PASSED!

!testRun: #TerniLapilliTests #test11OCanNotPutAPieceInAnOccupiedPosition stamp: 'fr 11/1/2020 21:30:57'!
PASSED!

!testRun: #TerniLapilliTests #test12XCanNotPutAPieceInAnOccupiedPosition stamp: 'fr 11/1/2020 21:30:57'!
PASSED!

!testRun: #TerniLapilliTests #test13XCanNotPutAPieceOutOfBounds stamp: 'fr 11/1/2020 21:30:57'!
PASSED!

!testRun: #TerniLapilliTests #test14OCanNotPutAPieceOutOfBounds stamp: 'fr 11/1/2020 21:30:57'!
PASSED!

!testRun: #TerniLapilliTests #test15XCanNotPutMoreThanThreePieces stamp: 'fr 11/1/2020 21:30:57'!
PASSED!

!testRun: #TerniLapilliTests #test16OCanNotPutMoreThanThreePieces stamp: 'fr 11/1/2020 21:30:57'!
PASSED!

!testRun: #TerniLapilliTests #test17WhenXMovesAPieceItIsAtTheNewPositionAndNotAtThePreviousOne stamp: 'fr 11/1/2020 21:30:57'!
PASSED!

!testRun: #TerniLapilliTests #test18WhenOMovesAPieceItIsAtTheNewPositionAndNotAtThePreviousOne stamp: 'fr 11/1/2020 21:30:57'!
PASSED!

!testRun: #TerniLapilliTests #test19XCanNotMoveBeforeAddingThreePieces stamp: 'fr 11/1/2020 21:30:57'!
PASSED!

!testRun: #TerniLapilliTests #test20OCanNotMoveBeforeAddingThreePieces stamp: 'fr 11/1/2020 21:30:57'!
PASSED!

!testRun: #TerniLapilliTests #test21XCanNotMoveFromAPositionThatIsNotUnderHisControl stamp: 'fr 11/1/2020 21:30:57'!
PASSED!

!testRun: #TerniLapilliTests #test22OCanNotMoveFromAPositionThatIsNotUnderHisControl stamp: 'fr 11/1/2020 21:30:57'!
PASSED!

!testRun: #TerniLapilliTests #test23XCanNotMoveFromAnOutOfBoundsPosition stamp: 'fr 11/1/2020 21:30:57'!
PASSED!

!testRun: #TerniLapilliTests #test24OCanNotMoveFromAnOutOfBoundsPosition stamp: 'fr 11/1/2020 21:30:57'!
PASSED!

!testRun: #TerniLapilliTests #test25XCanNotMoveToAnOutOfBoundsPosition stamp: 'fr 11/1/2020 21:30:57'!
PASSED!

!testRun: #TerniLapilliTests #test26OCanNotMoveToAnOutOfBoundsPosition stamp: 'fr 11/1/2020 21:30:57'!
PASSED!

!testRun: #TerniLapilliTests #test27XCanNotMoveToAnOccupiedPosition stamp: 'fr 11/1/2020 21:30:57'!
PASSED!

!testRun: #TerniLapilliTests #test28OCanNotMoveToAnOccupiedPosition stamp: 'fr 11/1/2020 21:30:57'!
PASSED!

!testRun: #TerniLapilliTests #test29XCanNotMoveBetweenPositionsThatAreMoreThanOnePlaceAfar stamp: 'fr 11/1/2020 21:30:57'!
PASSED!

!testRun: #TerniLapilliTests #test30OCanNotMoveBetweenPositionsThatAreMoreThanOnePlaceAfar stamp: 'fr 11/1/2020 21:30:57'!
PASSED!

!testRun: #TerniLapilliTests #test31NoPlayerHasWonIfNoneOfThemHasThreePiecesInLine stamp: 'fr 11/1/2020 21:30:57'!
PASSED!

!testRun: #TerniLapilliTests #test32XWinsWhenHeGetsThreePiecesInTheSameRow stamp: 'fr 11/1/2020 21:30:57'!
PASSED!

!testRun: #TerniLapilliTests #test33XWinsWhenHeGetsThreePiecesInTheSameColumn stamp: 'fr 11/1/2020 21:30:57'!
PASSED!

!testRun: #TerniLapilliTests #test34XWinsWhenHeGetsThreePiecesInTheMainDiagonal stamp: 'fr 11/1/2020 21:30:57'!
PASSED!

!testRun: #TerniLapilliTests #test35XWinsWhenHeGetsThreePiecesInTheSecondaryDiagonal stamp: 'fr 11/1/2020 21:30:57'!
PASSED!

!testRun: #TerniLapilliTests #test36OWinsWhenHeGetsThreePiecesInLine stamp: 'fr 11/1/2020 21:30:57'!
PASSED!

!testRun: #TerniLapilliTests #test37OCanNotPutAfterGameIsOver stamp: 'fr 11/1/2020 21:30:57'!
PASSED!

!testRun: #TerniLapilliTests #test38XCanNotMoveAfterGameIsOver stamp: 'fr 11/1/2020 21:30:57'!
PASSED!

!testRun: #TerniLapilliTests #test39OCanNotMoveAfterGameIsOver stamp: 'fr 11/1/2020 21:30:57'!
PASSED!

!testRun: #TerniLapilliTests #test40ItIsNoOnesTurnAfterGameIsOver stamp: 'fr 11/1/2020 21:30:57'!
PASSED!
!TerniLapilli methodsFor: 'private - state safe actions' stamp: 'fr 11/1/2020 21:44:42' prior: 50882739!
safeMoveXFrom: currentPosition to: newPosition
	
	self failIfPositionOutOfBounds: currentPosition.	
	self failIfItIsTooFarToMoveFrom: currentPosition to: newPosition.
	self removeXPosition: currentPosition.
	self safePutXAt: newPosition 
	
	! !
!TerniLapilli methodsFor: 'private - state safe actions' stamp: 'fr 11/1/2020 21:44:53' prior: 50882750!
safeMoveOFrom: currentPosition to: newPosition 
	
	self failIfPositionOutOfBounds: currentPosition.
	self failIfItIsTooFarToMoveFrom: currentPosition to: newPosition.
	self removeOPosition: currentPosition.
	self safePutOAt: newPosition 
! !
!TerniLapilli methodsFor: 'private - state safe actions' stamp: 'fr 11/1/2020 21:44:54' prior: 50885305!
safeMoveOFrom: currentPosition to: newPosition 
	
	self failIfPositionOutOfBounds: currentPosition.
	self failIfItIsTooFarToMoveFrom: currentPosition to: newPosition.
	self removeOPosition: currentPosition.
	
	self safePutOAt: newPosition 
! !
!TerniLapilli methodsFor: 'private - state safe actions' stamp: 'fr 11/1/2020 21:44:57' prior: 50885294!
safeMoveXFrom: currentPosition to: newPosition
	
	self failIfPositionOutOfBounds: currentPosition.	
	self failIfItIsTooFarToMoveFrom: currentPosition to: newPosition.
	self removeXPosition: currentPosition.
	
	self safePutXAt: newPosition 
	
	! !
!TerniLapilli methodsFor: 'private - state safe actions' stamp: 'fr 11/1/2020 21:46:07' prior: 50885327!
safeMoveXFrom: currentPosition to: newPosition
	
	self failIfPositionOutOfBounds: currentPosition.	
	self failIfItIsTooFarToMoveFrom: currentPosition to: newPosition.
	(self positionsFor: #X) remove: currentPosition ifAbsent: [self error: self class positionIsNotUnderPlayersControlErrorDescription]	.
	
	self safePutXAt: newPosition 
	
	! !
!TerniLapilli methodsFor: 'private - state safe actions' stamp: 'fr 11/1/2020 21:46:23' prior: 50885316!
safeMoveOFrom: currentPosition to: newPosition 
	
	self failIfPositionOutOfBounds: currentPosition.
	self failIfItIsTooFarToMoveFrom: currentPosition to: newPosition.
	(self positionsFor: #O) remove: currentPosition ifAbsent: [self error: self class positionIsNotUnderPlayersControlErrorDescription].
		
	self safePutOAt: newPosition 
! !
!TerniLapilli methodsFor: 'private - state safe actions' stamp: 'fr 11/1/2020 21:49:05'!
failIfInvalidDestination: aPosition

	self failIfPositionOutOfBounds: aPosition.
	self failIfPositionAlreadyHoldsAPiece: aPosition! !
!TerniLapilli methodsFor: 'private - state safe actions' stamp: 'fr 11/1/2020 21:49:05' prior: 50878983!
safePutOAt: aPosition 

	self failIfInvalidDestination: aPosition.
	(self positionsFor: #O) add: aPosition.
	state _ TerniLapilliState isFor: self
	! !
!TerniLapilli methodsFor: 'private - state safe actions' stamp: 'fr 11/1/2020 21:49:13' prior: 50878993!
safePutXAt: aPosition 
	
	self failIfInvalidDestination: aPosition.
	(self positionsFor: #X) add: aPosition.
	state _ TerniLapilliState isFor: self! !

!testRun: #TerniLapilliTests #test01XPlaysFirstAndOAfter stamp: 'fr 11/1/2020 21:49:15'!
PASSED!

!testRun: #TerniLapilliTests #test02OPlaysSecondAndXAfter stamp: 'fr 11/1/2020 21:49:15'!
PASSED!

!testRun: #TerniLapilliTests #test03ODoesNotPlayFirst stamp: 'fr 11/1/2020 21:49:15'!
PASSED!

!testRun: #TerniLapilliTests #test04APlayerCanNotPlayTwoTimesInARow stamp: 'fr 11/1/2020 21:49:15'!
PASSED!

!testRun: #TerniLapilliTests #test05XPieceIsWhereHePutsIt stamp: 'fr 11/1/2020 21:49:15'!
PASSED!

!testRun: #TerniLapilliTests #test06OPieceIsWhereHePutsIt stamp: 'fr 11/1/2020 21:49:15'!
PASSED!

!testRun: #TerniLapilliTests #test07XPieceIsNotWhereHeDoesNotPutIt stamp: 'fr 11/1/2020 21:49:15'!
PASSED!

!testRun: #TerniLapilliTests #test08OPieceIsNotWhereHeDoesNotPutIt stamp: 'fr 11/1/2020 21:49:15'!
PASSED!

!testRun: #TerniLapilliTests #test09XCanPutMoreThanOnePieceCorrectly stamp: 'fr 11/1/2020 21:49:15'!
PASSED!

!testRun: #TerniLapilliTests #test10OCanPutMoreThanOnePieceCorrectly stamp: 'fr 11/1/2020 21:49:15'!
PASSED!

!testRun: #TerniLapilliTests #test11OCanNotPutAPieceInAnOccupiedPosition stamp: 'fr 11/1/2020 21:49:15'!
PASSED!

!testRun: #TerniLapilliTests #test12XCanNotPutAPieceInAnOccupiedPosition stamp: 'fr 11/1/2020 21:49:15'!
PASSED!

!testRun: #TerniLapilliTests #test13XCanNotPutAPieceOutOfBounds stamp: 'fr 11/1/2020 21:49:15'!
PASSED!

!testRun: #TerniLapilliTests #test14OCanNotPutAPieceOutOfBounds stamp: 'fr 11/1/2020 21:49:15'!
PASSED!

!testRun: #TerniLapilliTests #test15XCanNotPutMoreThanThreePieces stamp: 'fr 11/1/2020 21:49:15'!
PASSED!

!testRun: #TerniLapilliTests #test16OCanNotPutMoreThanThreePieces stamp: 'fr 11/1/2020 21:49:15'!
PASSED!

!testRun: #TerniLapilliTests #test17WhenXMovesAPieceItIsAtTheNewPositionAndNotAtThePreviousOne stamp: 'fr 11/1/2020 21:49:15'!
PASSED!

!testRun: #TerniLapilliTests #test18WhenOMovesAPieceItIsAtTheNewPositionAndNotAtThePreviousOne stamp: 'fr 11/1/2020 21:49:15'!
PASSED!

!testRun: #TerniLapilliTests #test19XCanNotMoveBeforeAddingThreePieces stamp: 'fr 11/1/2020 21:49:15'!
PASSED!

!testRun: #TerniLapilliTests #test20OCanNotMoveBeforeAddingThreePieces stamp: 'fr 11/1/2020 21:49:15'!
PASSED!

!testRun: #TerniLapilliTests #test21XCanNotMoveFromAPositionThatIsNotUnderHisControl stamp: 'fr 11/1/2020 21:49:15'!
PASSED!

!testRun: #TerniLapilliTests #test22OCanNotMoveFromAPositionThatIsNotUnderHisControl stamp: 'fr 11/1/2020 21:49:15'!
PASSED!

!testRun: #TerniLapilliTests #test23XCanNotMoveFromAnOutOfBoundsPosition stamp: 'fr 11/1/2020 21:49:15'!
PASSED!

!testRun: #TerniLapilliTests #test24OCanNotMoveFromAnOutOfBoundsPosition stamp: 'fr 11/1/2020 21:49:15'!
PASSED!

!testRun: #TerniLapilliTests #test25XCanNotMoveToAnOutOfBoundsPosition stamp: 'fr 11/1/2020 21:49:15'!
PASSED!

!testRun: #TerniLapilliTests #test26OCanNotMoveToAnOutOfBoundsPosition stamp: 'fr 11/1/2020 21:49:15'!
PASSED!

!testRun: #TerniLapilliTests #test27XCanNotMoveToAnOccupiedPosition stamp: 'fr 11/1/2020 21:49:15'!
PASSED!

!testRun: #TerniLapilliTests #test28OCanNotMoveToAnOccupiedPosition stamp: 'fr 11/1/2020 21:49:15'!
PASSED!

!testRun: #TerniLapilliTests #test29XCanNotMoveBetweenPositionsThatAreMoreThanOnePlaceAfar stamp: 'fr 11/1/2020 21:49:15'!
PASSED!

!testRun: #TerniLapilliTests #test30OCanNotMoveBetweenPositionsThatAreMoreThanOnePlaceAfar stamp: 'fr 11/1/2020 21:49:15'!
PASSED!

!testRun: #TerniLapilliTests #test31NoPlayerHasWonIfNoneOfThemHasThreePiecesInLine stamp: 'fr 11/1/2020 21:49:15'!
PASSED!

!testRun: #TerniLapilliTests #test32XWinsWhenHeGetsThreePiecesInTheSameRow stamp: 'fr 11/1/2020 21:49:15'!
PASSED!

!testRun: #TerniLapilliTests #test33XWinsWhenHeGetsThreePiecesInTheSameColumn stamp: 'fr 11/1/2020 21:49:15'!
PASSED!

!testRun: #TerniLapilliTests #test34XWinsWhenHeGetsThreePiecesInTheMainDiagonal stamp: 'fr 11/1/2020 21:49:15'!
PASSED!

!testRun: #TerniLapilliTests #test35XWinsWhenHeGetsThreePiecesInTheSecondaryDiagonal stamp: 'fr 11/1/2020 21:49:15'!
PASSED!

!testRun: #TerniLapilliTests #test36OWinsWhenHeGetsThreePiecesInLine stamp: 'fr 11/1/2020 21:49:15'!
PASSED!

!testRun: #TerniLapilliTests #test37OCanNotPutAfterGameIsOver stamp: 'fr 11/1/2020 21:49:15'!
PASSED!

!testRun: #TerniLapilliTests #test38XCanNotMoveAfterGameIsOver stamp: 'fr 11/1/2020 21:49:15'!
PASSED!

!testRun: #TerniLapilliTests #test39OCanNotMoveAfterGameIsOver stamp: 'fr 11/1/2020 21:49:15'!
PASSED!

!testRun: #TerniLapilliTests #test40ItIsNoOnesTurnAfterGameIsOver stamp: 'fr 11/1/2020 21:49:15'!
PASSED!
!TerniLapilli methodsFor: 'private - state safe actions' stamp: 'fr 11/1/2020 21:50:30'!
check: aPosition andAddForPlayer: aPlayerId
	
	self failIfInvalidDestination: aPosition.
	(self positionsFor: aPlayerId) add: aPosition.
	state _ TerniLapilliState isFor: self! !
!TerniLapilli methodsFor: 'private - state safe actions' stamp: 'fr 11/1/2020 21:50:53' prior: 50885374!
safePutOAt: aPosition 

	self check: aPosition andAddForPlayer: #O
	! !
!TerniLapilli methodsFor: 'private - state safe actions' stamp: 'fr 11/1/2020 21:51:03' prior: 50885383!
safePutXAt: aPosition 
	
	self check: aPosition andAddForPlayer: #O
! !
!TerniLapilli methodsFor: 'private - state safe actions' stamp: 'fr 11/1/2020 21:52:27'!
positionNotUnderPlayerControl

	^ self error: self class positionIsNotUnderPlayersControlErrorDescription! !
!TerniLapilli methodsFor: 'private - state safe actions' stamp: 'fr 11/1/2020 21:52:27' prior: 50885338!
safeMoveXFrom: currentPosition to: newPosition
	
	self failIfPositionOutOfBounds: currentPosition.	
	self failIfItIsTooFarToMoveFrom: currentPosition to: newPosition.
	(self positionsFor: #X) remove: currentPosition ifAbsent: [self positionNotUnderPlayerControl]	.
	
	self safePutXAt: newPosition 
	
	! !
!TerniLapilli methodsFor: 'private - state safe actions' stamp: 'fr 11/1/2020 21:52:43' prior: 50885352!
safeMoveOFrom: currentPosition to: newPosition 
	
	self failIfPositionOutOfBounds: currentPosition.
	self failIfItIsTooFarToMoveFrom: currentPosition to: newPosition.
	(self positionsFor: #O) remove: currentPosition ifAbsent: [self positionNotUnderPlayerControl].
		
	self safePutOAt: newPosition 
! !
!TerniLapilli methodsFor: 'private - state safe actions' stamp: 'fr 11/1/2020 21:54:47'!
validate: aPosition andAddForPlayer: aPlayerId
	
	self failIfInvalidDestination: aPosition.
	(self positionsFor: aPlayerId) add: aPosition.
	state _ TerniLapilliState isFor: self! !
!TerniLapilli methodsFor: 'as yet unclassified' stamp: 'fr 11/1/2020 21:54:47' prior: 50885547!
safePutXAt: aPosition 
	
	self validate: aPosition andAddForPlayer: #O
! !
!TerniLapilli methodsFor: 'as yet unclassified' stamp: 'fr 11/1/2020 21:54:47' prior: 50885541!
safePutOAt: aPosition 

	self validate: aPosition andAddForPlayer: #O
	! !

!methodRemoval: TerniLapilli #check:andAddForPlayer: stamp: 'fr 11/1/2020 21:54:47'!
check: aPosition andAddForPlayer: aPlayerId
	
	self failIfInvalidDestination: aPosition.
	(self positionsFor: aPlayerId) add: aPosition.
	state _ TerniLapilliState isFor: self!
!TerniLapilli methodsFor: 'private - state safe actions' stamp: 'fr 11/1/2020 21:55:42' prior: 50885573!
safeMoveOFrom: currentPosition to: newPosition 
	
	self failIfPositionOutOfBounds: currentPosition.
	self failIfItIsTooFarToMoveFrom: currentPosition to: newPosition.
	(self positionsFor: #O) remove: currentPosition ifAbsent: [self positionNotUnderPlayerControl].
	
	self validatePositions: newPosition andRemoveX: currentPosition.
		
	self safePutOAt: newPosition 
! !
!TerniLapilli methodsFor: 'private - state safe actions' stamp: 'fr 11/1/2020 21:56:05'!
validatePositions: newPosition andRemoveX: currentPosition.
		
	self failIfPositionOutOfBounds: currentPosition.
	self failIfItIsTooFarToMoveFrom: currentPosition to: newPosition.
	(self positionsFor: #O) remove: currentPosition ifAbsent: [self positionNotUnderPlayerControl].! !
!TerniLapilli methodsFor: 'private - state safe actions' stamp: 'fr 11/1/2020 21:56:22' prior: 50885615!
safeMoveOFrom: currentPosition to: newPosition 
	
	self validatePositions: newPosition andRemoveX: currentPosition.
		
	self safePutOAt: newPosition 
! !

!testRun: #TerniLapilliTests #test01XPlaysFirstAndOAfter stamp: 'fr 11/1/2020 21:56:24'!
PASSED!

!testRun: #TerniLapilliTests #test02OPlaysSecondAndXAfter stamp: 'fr 11/1/2020 21:56:24'!
PASSED!

!testRun: #TerniLapilliTests #test03ODoesNotPlayFirst stamp: 'fr 11/1/2020 21:56:24'!
PASSED!

!testRun: #TerniLapilliTests #test04APlayerCanNotPlayTwoTimesInARow stamp: 'fr 11/1/2020 21:56:24'!
PASSED!

!testRun: #TerniLapilliTests #test05XPieceIsWhereHePutsIt stamp: 'fr 11/1/2020 21:56:24'!
FAILURE!

!testRun: #TerniLapilliTests #test06OPieceIsWhereHePutsIt stamp: 'fr 11/1/2020 21:56:24'!
PASSED!

!testRun: #TerniLapilliTests #test07XPieceIsNotWhereHeDoesNotPutIt stamp: 'fr 11/1/2020 21:56:24'!
PASSED!

!testRun: #TerniLapilliTests #test08OPieceIsNotWhereHeDoesNotPutIt stamp: 'fr 11/1/2020 21:56:24'!
FAILURE!

!testRun: #TerniLapilliTests #test09XCanPutMoreThanOnePieceCorrectly stamp: 'fr 11/1/2020 21:56:24'!
FAILURE!

!testRun: #TerniLapilliTests #test10OCanPutMoreThanOnePieceCorrectly stamp: 'fr 11/1/2020 21:56:24'!
ERROR!

!testRun: #TerniLapilliTests #test11OCanNotPutAPieceInAnOccupiedPosition stamp: 'fr 11/1/2020 21:56:24'!
PASSED!

!testRun: #TerniLapilliTests #test12XCanNotPutAPieceInAnOccupiedPosition stamp: 'fr 11/1/2020 21:56:24'!
PASSED!

!testRun: #TerniLapilliTests #test13XCanNotPutAPieceOutOfBounds stamp: 'fr 11/1/2020 21:56:24'!
PASSED!

!testRun: #TerniLapilliTests #test14OCanNotPutAPieceOutOfBounds stamp: 'fr 11/1/2020 21:56:24'!
PASSED!

!testRun: #TerniLapilliTests #test15XCanNotPutMoreThanThreePieces stamp: 'fr 11/1/2020 21:56:24'!
FAILURE!

!testRun: #TerniLapilliTests #test16OCanNotPutMoreThanThreePieces stamp: 'fr 11/1/2020 21:56:24'!
PASSED!

!testRun: #TerniLapilliTests #test17WhenXMovesAPieceItIsAtTheNewPositionAndNotAtThePreviousOne stamp: 'fr 11/1/2020 21:56:24'!
ERROR!

!testRun: #TerniLapilliTests #test18WhenOMovesAPieceItIsAtTheNewPositionAndNotAtThePreviousOne stamp: 'fr 11/1/2020 21:56:24'!
ERROR!

!testRun: #TerniLapilliTests #test19XCanNotMoveBeforeAddingThreePieces stamp: 'fr 11/1/2020 21:56:24'!
PASSED!

!testRun: #TerniLapilliTests #test20OCanNotMoveBeforeAddingThreePieces stamp: 'fr 11/1/2020 21:56:24'!
PASSED!

!testRun: #TerniLapilliTests #test21XCanNotMoveFromAPositionThatIsNotUnderHisControl stamp: 'fr 11/1/2020 21:56:24'!
FAILURE!

!testRun: #TerniLapilliTests #test22OCanNotMoveFromAPositionThatIsNotUnderHisControl stamp: 'fr 11/1/2020 21:56:24'!
FAILURE!

!testRun: #TerniLapilliTests #test23XCanNotMoveFromAnOutOfBoundsPosition stamp: 'fr 11/1/2020 21:56:24'!
FAILURE!

!testRun: #TerniLapilliTests #test24OCanNotMoveFromAnOutOfBoundsPosition stamp: 'fr 11/1/2020 21:56:24'!
FAILURE!

!testRun: #TerniLapilliTests #test25XCanNotMoveToAnOutOfBoundsPosition stamp: 'fr 11/1/2020 21:56:24'!
FAILURE!

!testRun: #TerniLapilliTests #test26OCanNotMoveToAnOutOfBoundsPosition stamp: 'fr 11/1/2020 21:56:24'!
FAILURE!

!testRun: #TerniLapilliTests #test27XCanNotMoveToAnOccupiedPosition stamp: 'fr 11/1/2020 21:56:24'!
FAILURE!

!testRun: #TerniLapilliTests #test28OCanNotMoveToAnOccupiedPosition stamp: 'fr 11/1/2020 21:56:24'!
FAILURE!

!testRun: #TerniLapilliTests #test29XCanNotMoveBetweenPositionsThatAreMoreThanOnePlaceAfar stamp: 'fr 11/1/2020 21:56:24'!
FAILURE!

!testRun: #TerniLapilliTests #test30OCanNotMoveBetweenPositionsThatAreMoreThanOnePlaceAfar stamp: 'fr 11/1/2020 21:56:24'!
FAILURE!

!testRun: #TerniLapilliTests #test31NoPlayerHasWonIfNoneOfThemHasThreePiecesInLine stamp: 'fr 11/1/2020 21:56:24'!
PASSED!

!testRun: #TerniLapilliTests #test32XWinsWhenHeGetsThreePiecesInTheSameRow stamp: 'fr 11/1/2020 21:56:24'!
ERROR!

!testRun: #TerniLapilliTests #test33XWinsWhenHeGetsThreePiecesInTheSameColumn stamp: 'fr 11/1/2020 21:56:24'!
ERROR!

!testRun: #TerniLapilliTests #test34XWinsWhenHeGetsThreePiecesInTheMainDiagonal stamp: 'fr 11/1/2020 21:56:24'!
ERROR!

!testRun: #TerniLapilliTests #test35XWinsWhenHeGetsThreePiecesInTheSecondaryDiagonal stamp: 'fr 11/1/2020 21:56:24'!
ERROR!

!testRun: #TerniLapilliTests #test36OWinsWhenHeGetsThreePiecesInLine stamp: 'fr 11/1/2020 21:56:24'!
ERROR!

!testRun: #TerniLapilliTests #test37OCanNotPutAfterGameIsOver stamp: 'fr 11/1/2020 21:56:24'!
FAILURE!

!testRun: #TerniLapilliTests #test38XCanNotMoveAfterGameIsOver stamp: 'fr 11/1/2020 21:56:24'!
FAILURE!

!testRun: #TerniLapilliTests #test39OCanNotMoveAfterGameIsOver stamp: 'fr 11/1/2020 21:56:24'!
FAILURE!

!testRun: #TerniLapilliTests #test40ItIsNoOnesTurnAfterGameIsOver stamp: 'fr 11/1/2020 21:56:24'!
ERROR!
!TerniLapilli methodsFor: 'private - state safe actions' stamp: 'fr 11/1/2020 21:46:07' prior: 50885560!
safeMoveXFrom: currentPosition to: newPosition
	
	self failIfPositionOutOfBounds: currentPosition.	
	self failIfItIsTooFarToMoveFrom: currentPosition to: newPosition.
	(self positionsFor: #X) remove: currentPosition ifAbsent: [self error: self class positionIsNotUnderPlayersControlErrorDescription]	.
	
	self safePutXAt: newPosition 
	
	! !

!testRun: #TerniLapilliTests #test01XPlaysFirstAndOAfter stamp: 'fr 11/1/2020 21:57:06'!
PASSED!

!testRun: #TerniLapilliTests #test02OPlaysSecondAndXAfter stamp: 'fr 11/1/2020 21:57:06'!
PASSED!

!testRun: #TerniLapilliTests #test03ODoesNotPlayFirst stamp: 'fr 11/1/2020 21:57:06'!
PASSED!

!testRun: #TerniLapilliTests #test04APlayerCanNotPlayTwoTimesInARow stamp: 'fr 11/1/2020 21:57:06'!
PASSED!

!testRun: #TerniLapilliTests #test05XPieceIsWhereHePutsIt stamp: 'fr 11/1/2020 21:57:06'!
FAILURE!

!testRun: #TerniLapilliTests #test06OPieceIsWhereHePutsIt stamp: 'fr 11/1/2020 21:57:06'!
PASSED!

!testRun: #TerniLapilliTests #test07XPieceIsNotWhereHeDoesNotPutIt stamp: 'fr 11/1/2020 21:57:06'!
PASSED!

!testRun: #TerniLapilliTests #test08OPieceIsNotWhereHeDoesNotPutIt stamp: 'fr 11/1/2020 21:57:06'!
FAILURE!

!testRun: #TerniLapilliTests #test09XCanPutMoreThanOnePieceCorrectly stamp: 'fr 11/1/2020 21:57:06'!
FAILURE!

!testRun: #TerniLapilliTests #test10OCanPutMoreThanOnePieceCorrectly stamp: 'fr 11/1/2020 21:57:06'!
ERROR!

!testRun: #TerniLapilliTests #test11OCanNotPutAPieceInAnOccupiedPosition stamp: 'fr 11/1/2020 21:57:06'!
PASSED!

!testRun: #TerniLapilliTests #test12XCanNotPutAPieceInAnOccupiedPosition stamp: 'fr 11/1/2020 21:57:06'!
PASSED!

!testRun: #TerniLapilliTests #test13XCanNotPutAPieceOutOfBounds stamp: 'fr 11/1/2020 21:57:06'!
PASSED!

!testRun: #TerniLapilliTests #test14OCanNotPutAPieceOutOfBounds stamp: 'fr 11/1/2020 21:57:06'!
PASSED!

!testRun: #TerniLapilliTests #test15XCanNotPutMoreThanThreePieces stamp: 'fr 11/1/2020 21:57:06'!
FAILURE!

!testRun: #TerniLapilliTests #test16OCanNotPutMoreThanThreePieces stamp: 'fr 11/1/2020 21:57:06'!
PASSED!

!testRun: #TerniLapilliTests #test17WhenXMovesAPieceItIsAtTheNewPositionAndNotAtThePreviousOne stamp: 'fr 11/1/2020 21:57:06'!
ERROR!

!testRun: #TerniLapilliTests #test18WhenOMovesAPieceItIsAtTheNewPositionAndNotAtThePreviousOne stamp: 'fr 11/1/2020 21:57:06'!
ERROR!

!testRun: #TerniLapilliTests #test19XCanNotMoveBeforeAddingThreePieces stamp: 'fr 11/1/2020 21:57:06'!
PASSED!

!testRun: #TerniLapilliTests #test20OCanNotMoveBeforeAddingThreePieces stamp: 'fr 11/1/2020 21:57:06'!
PASSED!

!testRun: #TerniLapilliTests #test21XCanNotMoveFromAPositionThatIsNotUnderHisControl stamp: 'fr 11/1/2020 21:57:06'!
FAILURE!

!testRun: #TerniLapilliTests #test22OCanNotMoveFromAPositionThatIsNotUnderHisControl stamp: 'fr 11/1/2020 21:57:06'!
FAILURE!

!testRun: #TerniLapilliTests #test23XCanNotMoveFromAnOutOfBoundsPosition stamp: 'fr 11/1/2020 21:57:06'!
FAILURE!

!testRun: #TerniLapilliTests #test24OCanNotMoveFromAnOutOfBoundsPosition stamp: 'fr 11/1/2020 21:57:06'!
FAILURE!

!testRun: #TerniLapilliTests #test25XCanNotMoveToAnOutOfBoundsPosition stamp: 'fr 11/1/2020 21:57:06'!
FAILURE!

!testRun: #TerniLapilliTests #test26OCanNotMoveToAnOutOfBoundsPosition stamp: 'fr 11/1/2020 21:57:06'!
FAILURE!

!testRun: #TerniLapilliTests #test27XCanNotMoveToAnOccupiedPosition stamp: 'fr 11/1/2020 21:57:06'!
FAILURE!

!testRun: #TerniLapilliTests #test28OCanNotMoveToAnOccupiedPosition stamp: 'fr 11/1/2020 21:57:06'!
FAILURE!

!testRun: #TerniLapilliTests #test29XCanNotMoveBetweenPositionsThatAreMoreThanOnePlaceAfar stamp: 'fr 11/1/2020 21:57:06'!
FAILURE!

!testRun: #TerniLapilliTests #test30OCanNotMoveBetweenPositionsThatAreMoreThanOnePlaceAfar stamp: 'fr 11/1/2020 21:57:06'!
FAILURE!

!testRun: #TerniLapilliTests #test31NoPlayerHasWonIfNoneOfThemHasThreePiecesInLine stamp: 'fr 11/1/2020 21:57:06'!
PASSED!

!testRun: #TerniLapilliTests #test32XWinsWhenHeGetsThreePiecesInTheSameRow stamp: 'fr 11/1/2020 21:57:06'!
ERROR!

!testRun: #TerniLapilliTests #test33XWinsWhenHeGetsThreePiecesInTheSameColumn stamp: 'fr 11/1/2020 21:57:06'!
ERROR!

!testRun: #TerniLapilliTests #test34XWinsWhenHeGetsThreePiecesInTheMainDiagonal stamp: 'fr 11/1/2020 21:57:06'!
ERROR!

!testRun: #TerniLapilliTests #test35XWinsWhenHeGetsThreePiecesInTheSecondaryDiagonal stamp: 'fr 11/1/2020 21:57:06'!
ERROR!

!testRun: #TerniLapilliTests #test36OWinsWhenHeGetsThreePiecesInLine stamp: 'fr 11/1/2020 21:57:06'!
ERROR!

!testRun: #TerniLapilliTests #test37OCanNotPutAfterGameIsOver stamp: 'fr 11/1/2020 21:57:06'!
FAILURE!

!testRun: #TerniLapilliTests #test38XCanNotMoveAfterGameIsOver stamp: 'fr 11/1/2020 21:57:06'!
FAILURE!

!testRun: #TerniLapilliTests #test39OCanNotMoveAfterGameIsOver stamp: 'fr 11/1/2020 21:57:06'!
FAILURE!

!testRun: #TerniLapilliTests #test40ItIsNoOnesTurnAfterGameIsOver stamp: 'fr 11/1/2020 21:57:06'!
ERROR!

!methodRemoval: TerniLapilli #validatePositions:andRemoveX: stamp: 'fr 11/1/2020 21:57:44'!
validatePositions: newPosition andRemoveX: currentPosition.
		
	self failIfPositionOutOfBounds: currentPosition.
	self failIfItIsTooFarToMoveFrom: currentPosition to: newPosition.
	(self positionsFor: #O) remove: currentPosition ifAbsent: [self positionNotUnderPlayerControl].!
!TerniLapilli methodsFor: 'private - state safe actions' stamp: 'fr 11/1/2020 21:52:43' prior: 50885643!
safeMoveOFrom: currentPosition to: newPosition 
	
	self failIfPositionOutOfBounds: currentPosition.
	self failIfItIsTooFarToMoveFrom: currentPosition to: newPosition.
	(self positionsFor: #O) remove: currentPosition ifAbsent: [self positionNotUnderPlayerControl].
		
	self safePutOAt: newPosition 
! !

!testRun: #TerniLapilliTests #test01XPlaysFirstAndOAfter stamp: 'fr 11/1/2020 21:58:20'!
PASSED!

!testRun: #TerniLapilliTests #test02OPlaysSecondAndXAfter stamp: 'fr 11/1/2020 21:58:20'!
PASSED!

!testRun: #TerniLapilliTests #test03ODoesNotPlayFirst stamp: 'fr 11/1/2020 21:58:20'!
PASSED!

!testRun: #TerniLapilliTests #test04APlayerCanNotPlayTwoTimesInARow stamp: 'fr 11/1/2020 21:58:20'!
PASSED!

!testRun: #TerniLapilliTests #test05XPieceIsWhereHePutsIt stamp: 'fr 11/1/2020 21:58:20'!
FAILURE!

!testRun: #TerniLapilliTests #test06OPieceIsWhereHePutsIt stamp: 'fr 11/1/2020 21:58:20'!
PASSED!

!testRun: #TerniLapilliTests #test07XPieceIsNotWhereHeDoesNotPutIt stamp: 'fr 11/1/2020 21:58:20'!
PASSED!

!testRun: #TerniLapilliTests #test08OPieceIsNotWhereHeDoesNotPutIt stamp: 'fr 11/1/2020 21:58:20'!
FAILURE!

!testRun: #TerniLapilliTests #test09XCanPutMoreThanOnePieceCorrectly stamp: 'fr 11/1/2020 21:58:20'!
FAILURE!

!testRun: #TerniLapilliTests #test10OCanPutMoreThanOnePieceCorrectly stamp: 'fr 11/1/2020 21:58:20'!
ERROR!

!testRun: #TerniLapilliTests #test11OCanNotPutAPieceInAnOccupiedPosition stamp: 'fr 11/1/2020 21:58:20'!
PASSED!

!testRun: #TerniLapilliTests #test12XCanNotPutAPieceInAnOccupiedPosition stamp: 'fr 11/1/2020 21:58:20'!
PASSED!

!testRun: #TerniLapilliTests #test13XCanNotPutAPieceOutOfBounds stamp: 'fr 11/1/2020 21:58:20'!
PASSED!

!testRun: #TerniLapilliTests #test14OCanNotPutAPieceOutOfBounds stamp: 'fr 11/1/2020 21:58:20'!
PASSED!

!testRun: #TerniLapilliTests #test15XCanNotPutMoreThanThreePieces stamp: 'fr 11/1/2020 21:58:20'!
FAILURE!

!testRun: #TerniLapilliTests #test16OCanNotPutMoreThanThreePieces stamp: 'fr 11/1/2020 21:58:20'!
PASSED!

!testRun: #TerniLapilliTests #test17WhenXMovesAPieceItIsAtTheNewPositionAndNotAtThePreviousOne stamp: 'fr 11/1/2020 21:58:20'!
ERROR!

!testRun: #TerniLapilliTests #test18WhenOMovesAPieceItIsAtTheNewPositionAndNotAtThePreviousOne stamp: 'fr 11/1/2020 21:58:20'!
ERROR!

!testRun: #TerniLapilliTests #test19XCanNotMoveBeforeAddingThreePieces stamp: 'fr 11/1/2020 21:58:20'!
PASSED!

!testRun: #TerniLapilliTests #test20OCanNotMoveBeforeAddingThreePieces stamp: 'fr 11/1/2020 21:58:20'!
PASSED!

!testRun: #TerniLapilliTests #test21XCanNotMoveFromAPositionThatIsNotUnderHisControl stamp: 'fr 11/1/2020 21:58:20'!
FAILURE!

!testRun: #TerniLapilliTests #test22OCanNotMoveFromAPositionThatIsNotUnderHisControl stamp: 'fr 11/1/2020 21:58:20'!
FAILURE!

!testRun: #TerniLapilliTests #test23XCanNotMoveFromAnOutOfBoundsPosition stamp: 'fr 11/1/2020 21:58:20'!
FAILURE!

!testRun: #TerniLapilliTests #test24OCanNotMoveFromAnOutOfBoundsPosition stamp: 'fr 11/1/2020 21:58:20'!
FAILURE!

!testRun: #TerniLapilliTests #test25XCanNotMoveToAnOutOfBoundsPosition stamp: 'fr 11/1/2020 21:58:20'!
FAILURE!

!testRun: #TerniLapilliTests #test26OCanNotMoveToAnOutOfBoundsPosition stamp: 'fr 11/1/2020 21:58:20'!
FAILURE!

!testRun: #TerniLapilliTests #test27XCanNotMoveToAnOccupiedPosition stamp: 'fr 11/1/2020 21:58:20'!
FAILURE!

!testRun: #TerniLapilliTests #test28OCanNotMoveToAnOccupiedPosition stamp: 'fr 11/1/2020 21:58:20'!
FAILURE!

!testRun: #TerniLapilliTests #test29XCanNotMoveBetweenPositionsThatAreMoreThanOnePlaceAfar stamp: 'fr 11/1/2020 21:58:20'!
FAILURE!

!testRun: #TerniLapilliTests #test30OCanNotMoveBetweenPositionsThatAreMoreThanOnePlaceAfar stamp: 'fr 11/1/2020 21:58:20'!
FAILURE!

!testRun: #TerniLapilliTests #test31NoPlayerHasWonIfNoneOfThemHasThreePiecesInLine stamp: 'fr 11/1/2020 21:58:20'!
PASSED!

!testRun: #TerniLapilliTests #test32XWinsWhenHeGetsThreePiecesInTheSameRow stamp: 'fr 11/1/2020 21:58:20'!
ERROR!

!testRun: #TerniLapilliTests #test33XWinsWhenHeGetsThreePiecesInTheSameColumn stamp: 'fr 11/1/2020 21:58:20'!
ERROR!

!testRun: #TerniLapilliTests #test34XWinsWhenHeGetsThreePiecesInTheMainDiagonal stamp: 'fr 11/1/2020 21:58:20'!
ERROR!

!testRun: #TerniLapilliTests #test35XWinsWhenHeGetsThreePiecesInTheSecondaryDiagonal stamp: 'fr 11/1/2020 21:58:20'!
ERROR!

!testRun: #TerniLapilliTests #test36OWinsWhenHeGetsThreePiecesInLine stamp: 'fr 11/1/2020 21:58:20'!
ERROR!

!testRun: #TerniLapilliTests #test37OCanNotPutAfterGameIsOver stamp: 'fr 11/1/2020 21:58:20'!
FAILURE!

!testRun: #TerniLapilliTests #test38XCanNotMoveAfterGameIsOver stamp: 'fr 11/1/2020 21:58:20'!
FAILURE!

!testRun: #TerniLapilliTests #test39OCanNotMoveAfterGameIsOver stamp: 'fr 11/1/2020 21:58:20'!
FAILURE!

!testRun: #TerniLapilliTests #test40ItIsNoOnesTurnAfterGameIsOver stamp: 'fr 11/1/2020 21:58:20'!
ERROR!
!TerniLapilli methodsFor: 'private - state safe actions' stamp: 'fr 11/1/2020 21:44:53' prior: 50885960!
safeMoveOFrom: currentPosition to: newPosition 
	
	self failIfPositionOutOfBounds: currentPosition.
	self failIfItIsTooFarToMoveFrom: currentPosition to: newPosition.
	self removeOPosition: currentPosition.
	self safePutOAt: newPosition 
! !
!TerniLapilli methodsFor: 'private - state safe actions' stamp: 'fr 11/1/2020 21:44:57' prior: 50885793!
safeMoveXFrom: currentPosition to: newPosition
	
	self failIfPositionOutOfBounds: currentPosition.	
	self failIfItIsTooFarToMoveFrom: currentPosition to: newPosition.
	self removeXPosition: currentPosition.
	
	self safePutXAt: newPosition 
	
	! !

!testRun: #TerniLapilliTests #test01XPlaysFirstAndOAfter stamp: 'fr 11/1/2020 21:59:34'!
PASSED!

!testRun: #TerniLapilliTests #test02OPlaysSecondAndXAfter stamp: 'fr 11/1/2020 21:59:34'!
PASSED!

!testRun: #TerniLapilliTests #test03ODoesNotPlayFirst stamp: 'fr 11/1/2020 21:59:34'!
PASSED!

!testRun: #TerniLapilliTests #test04APlayerCanNotPlayTwoTimesInARow stamp: 'fr 11/1/2020 21:59:34'!
PASSED!

!testRun: #TerniLapilliTests #test05XPieceIsWhereHePutsIt stamp: 'fr 11/1/2020 21:59:34'!
FAILURE!

!testRun: #TerniLapilliTests #test06OPieceIsWhereHePutsIt stamp: 'fr 11/1/2020 21:59:34'!
PASSED!

!testRun: #TerniLapilliTests #test07XPieceIsNotWhereHeDoesNotPutIt stamp: 'fr 11/1/2020 21:59:34'!
PASSED!

!testRun: #TerniLapilliTests #test08OPieceIsNotWhereHeDoesNotPutIt stamp: 'fr 11/1/2020 21:59:34'!
FAILURE!

!testRun: #TerniLapilliTests #test09XCanPutMoreThanOnePieceCorrectly stamp: 'fr 11/1/2020 21:59:34'!
FAILURE!

!testRun: #TerniLapilliTests #test10OCanPutMoreThanOnePieceCorrectly stamp: 'fr 11/1/2020 21:59:34'!
ERROR!

!testRun: #TerniLapilliTests #test11OCanNotPutAPieceInAnOccupiedPosition stamp: 'fr 11/1/2020 21:59:34'!
PASSED!

!testRun: #TerniLapilliTests #test12XCanNotPutAPieceInAnOccupiedPosition stamp: 'fr 11/1/2020 21:59:34'!
PASSED!

!testRun: #TerniLapilliTests #test13XCanNotPutAPieceOutOfBounds stamp: 'fr 11/1/2020 21:59:34'!
PASSED!

!testRun: #TerniLapilliTests #test14OCanNotPutAPieceOutOfBounds stamp: 'fr 11/1/2020 21:59:34'!
PASSED!

!testRun: #TerniLapilliTests #test15XCanNotPutMoreThanThreePieces stamp: 'fr 11/1/2020 21:59:34'!
FAILURE!

!testRun: #TerniLapilliTests #test16OCanNotPutMoreThanThreePieces stamp: 'fr 11/1/2020 21:59:34'!
PASSED!

!testRun: #TerniLapilliTests #test17WhenXMovesAPieceItIsAtTheNewPositionAndNotAtThePreviousOne stamp: 'fr 11/1/2020 21:59:34'!
ERROR!

!testRun: #TerniLapilliTests #test18WhenOMovesAPieceItIsAtTheNewPositionAndNotAtThePreviousOne stamp: 'fr 11/1/2020 21:59:34'!
ERROR!

!testRun: #TerniLapilliTests #test19XCanNotMoveBeforeAddingThreePieces stamp: 'fr 11/1/2020 21:59:34'!
PASSED!

!testRun: #TerniLapilliTests #test20OCanNotMoveBeforeAddingThreePieces stamp: 'fr 11/1/2020 21:59:34'!
PASSED!

!testRun: #TerniLapilliTests #test21XCanNotMoveFromAPositionThatIsNotUnderHisControl stamp: 'fr 11/1/2020 21:59:34'!
FAILURE!

!testRun: #TerniLapilliTests #test22OCanNotMoveFromAPositionThatIsNotUnderHisControl stamp: 'fr 11/1/2020 21:59:34'!
FAILURE!

!testRun: #TerniLapilliTests #test23XCanNotMoveFromAnOutOfBoundsPosition stamp: 'fr 11/1/2020 21:59:34'!
FAILURE!

!testRun: #TerniLapilliTests #test24OCanNotMoveFromAnOutOfBoundsPosition stamp: 'fr 11/1/2020 21:59:34'!
FAILURE!

!testRun: #TerniLapilliTests #test25XCanNotMoveToAnOutOfBoundsPosition stamp: 'fr 11/1/2020 21:59:34'!
FAILURE!

!testRun: #TerniLapilliTests #test26OCanNotMoveToAnOutOfBoundsPosition stamp: 'fr 11/1/2020 21:59:34'!
FAILURE!

!testRun: #TerniLapilliTests #test27XCanNotMoveToAnOccupiedPosition stamp: 'fr 11/1/2020 21:59:34'!
FAILURE!

!testRun: #TerniLapilliTests #test28OCanNotMoveToAnOccupiedPosition stamp: 'fr 11/1/2020 21:59:34'!
FAILURE!

!testRun: #TerniLapilliTests #test29XCanNotMoveBetweenPositionsThatAreMoreThanOnePlaceAfar stamp: 'fr 11/1/2020 21:59:35'!
FAILURE!

!testRun: #TerniLapilliTests #test30OCanNotMoveBetweenPositionsThatAreMoreThanOnePlaceAfar stamp: 'fr 11/1/2020 21:59:35'!
FAILURE!

!testRun: #TerniLapilliTests #test31NoPlayerHasWonIfNoneOfThemHasThreePiecesInLine stamp: 'fr 11/1/2020 21:59:35'!
PASSED!

!testRun: #TerniLapilliTests #test32XWinsWhenHeGetsThreePiecesInTheSameRow stamp: 'fr 11/1/2020 21:59:35'!
ERROR!

!testRun: #TerniLapilliTests #test33XWinsWhenHeGetsThreePiecesInTheSameColumn stamp: 'fr 11/1/2020 21:59:35'!
ERROR!

!testRun: #TerniLapilliTests #test34XWinsWhenHeGetsThreePiecesInTheMainDiagonal stamp: 'fr 11/1/2020 21:59:35'!
ERROR!

!testRun: #TerniLapilliTests #test35XWinsWhenHeGetsThreePiecesInTheSecondaryDiagonal stamp: 'fr 11/1/2020 21:59:35'!
ERROR!

!testRun: #TerniLapilliTests #test36OWinsWhenHeGetsThreePiecesInLine stamp: 'fr 11/1/2020 21:59:35'!
ERROR!

!testRun: #TerniLapilliTests #test37OCanNotPutAfterGameIsOver stamp: 'fr 11/1/2020 21:59:35'!
FAILURE!

!testRun: #TerniLapilliTests #test38XCanNotMoveAfterGameIsOver stamp: 'fr 11/1/2020 21:59:35'!
FAILURE!

!testRun: #TerniLapilliTests #test39OCanNotMoveAfterGameIsOver stamp: 'fr 11/1/2020 21:59:35'!
FAILURE!

!testRun: #TerniLapilliTests #test40ItIsNoOnesTurnAfterGameIsOver stamp: 'fr 11/1/2020 21:59:35'!
ERROR!
!TerniLapilli methodsFor: 'private - state safe actions' stamp: 'fr 11/1/2020 21:49:05' prior: 50885601!
safePutOAt: aPosition 

	self failIfInvalidDestination: aPosition.
	(self positionsFor: #O) add: aPosition.
	state _ TerniLapilliState isFor: self
	! !
!TerniLapilli methodsFor: 'private - state safe actions' stamp: 'fr 11/1/2020 21:49:13' prior: 50885595!
safePutXAt: aPosition 
	
	self failIfInvalidDestination: aPosition.
	(self positionsFor: #X) add: aPosition.
	state _ TerniLapilliState isFor: self! !

!testRun: #TerniLapilliTests #test01XPlaysFirstAndOAfter stamp: 'fr 11/1/2020 22:00:16'!
PASSED!

!testRun: #TerniLapilliTests #test02OPlaysSecondAndXAfter stamp: 'fr 11/1/2020 22:00:16'!
PASSED!

!testRun: #TerniLapilliTests #test03ODoesNotPlayFirst stamp: 'fr 11/1/2020 22:00:16'!
PASSED!

!testRun: #TerniLapilliTests #test04APlayerCanNotPlayTwoTimesInARow stamp: 'fr 11/1/2020 22:00:16'!
PASSED!

!testRun: #TerniLapilliTests #test05XPieceIsWhereHePutsIt stamp: 'fr 11/1/2020 22:00:16'!
PASSED!

!testRun: #TerniLapilliTests #test06OPieceIsWhereHePutsIt stamp: 'fr 11/1/2020 22:00:16'!
PASSED!

!testRun: #TerniLapilliTests #test07XPieceIsNotWhereHeDoesNotPutIt stamp: 'fr 11/1/2020 22:00:16'!
PASSED!

!testRun: #TerniLapilliTests #test08OPieceIsNotWhereHeDoesNotPutIt stamp: 'fr 11/1/2020 22:00:16'!
PASSED!

!testRun: #TerniLapilliTests #test09XCanPutMoreThanOnePieceCorrectly stamp: 'fr 11/1/2020 22:00:16'!
PASSED!

!testRun: #TerniLapilliTests #test10OCanPutMoreThanOnePieceCorrectly stamp: 'fr 11/1/2020 22:00:16'!
PASSED!

!testRun: #TerniLapilliTests #test11OCanNotPutAPieceInAnOccupiedPosition stamp: 'fr 11/1/2020 22:00:16'!
PASSED!

!testRun: #TerniLapilliTests #test12XCanNotPutAPieceInAnOccupiedPosition stamp: 'fr 11/1/2020 22:00:16'!
PASSED!

!testRun: #TerniLapilliTests #test13XCanNotPutAPieceOutOfBounds stamp: 'fr 11/1/2020 22:00:17'!
PASSED!

!testRun: #TerniLapilliTests #test14OCanNotPutAPieceOutOfBounds stamp: 'fr 11/1/2020 22:00:17'!
PASSED!

!testRun: #TerniLapilliTests #test15XCanNotPutMoreThanThreePieces stamp: 'fr 11/1/2020 22:00:17'!
PASSED!

!testRun: #TerniLapilliTests #test16OCanNotPutMoreThanThreePieces stamp: 'fr 11/1/2020 22:00:17'!
PASSED!

!testRun: #TerniLapilliTests #test17WhenXMovesAPieceItIsAtTheNewPositionAndNotAtThePreviousOne stamp: 'fr 11/1/2020 22:00:17'!
PASSED!

!testRun: #TerniLapilliTests #test18WhenOMovesAPieceItIsAtTheNewPositionAndNotAtThePreviousOne stamp: 'fr 11/1/2020 22:00:17'!
PASSED!

!testRun: #TerniLapilliTests #test19XCanNotMoveBeforeAddingThreePieces stamp: 'fr 11/1/2020 22:00:17'!
PASSED!

!testRun: #TerniLapilliTests #test20OCanNotMoveBeforeAddingThreePieces stamp: 'fr 11/1/2020 22:00:17'!
PASSED!

!testRun: #TerniLapilliTests #test21XCanNotMoveFromAPositionThatIsNotUnderHisControl stamp: 'fr 11/1/2020 22:00:17'!
PASSED!

!testRun: #TerniLapilliTests #test22OCanNotMoveFromAPositionThatIsNotUnderHisControl stamp: 'fr 11/1/2020 22:00:17'!
PASSED!

!testRun: #TerniLapilliTests #test23XCanNotMoveFromAnOutOfBoundsPosition stamp: 'fr 11/1/2020 22:00:17'!
PASSED!

!testRun: #TerniLapilliTests #test24OCanNotMoveFromAnOutOfBoundsPosition stamp: 'fr 11/1/2020 22:00:17'!
PASSED!

!testRun: #TerniLapilliTests #test25XCanNotMoveToAnOutOfBoundsPosition stamp: 'fr 11/1/2020 22:00:17'!
PASSED!

!testRun: #TerniLapilliTests #test26OCanNotMoveToAnOutOfBoundsPosition stamp: 'fr 11/1/2020 22:00:17'!
PASSED!

!testRun: #TerniLapilliTests #test27XCanNotMoveToAnOccupiedPosition stamp: 'fr 11/1/2020 22:00:17'!
PASSED!

!testRun: #TerniLapilliTests #test28OCanNotMoveToAnOccupiedPosition stamp: 'fr 11/1/2020 22:00:17'!
PASSED!

!testRun: #TerniLapilliTests #test29XCanNotMoveBetweenPositionsThatAreMoreThanOnePlaceAfar stamp: 'fr 11/1/2020 22:00:17'!
PASSED!

!testRun: #TerniLapilliTests #test30OCanNotMoveBetweenPositionsThatAreMoreThanOnePlaceAfar stamp: 'fr 11/1/2020 22:00:17'!
PASSED!

!testRun: #TerniLapilliTests #test31NoPlayerHasWonIfNoneOfThemHasThreePiecesInLine stamp: 'fr 11/1/2020 22:00:17'!
PASSED!

!testRun: #TerniLapilliTests #test32XWinsWhenHeGetsThreePiecesInTheSameRow stamp: 'fr 11/1/2020 22:00:17'!
PASSED!

!testRun: #TerniLapilliTests #test33XWinsWhenHeGetsThreePiecesInTheSameColumn stamp: 'fr 11/1/2020 22:00:17'!
PASSED!

!testRun: #TerniLapilliTests #test34XWinsWhenHeGetsThreePiecesInTheMainDiagonal stamp: 'fr 11/1/2020 22:00:17'!
PASSED!

!testRun: #TerniLapilliTests #test35XWinsWhenHeGetsThreePiecesInTheSecondaryDiagonal stamp: 'fr 11/1/2020 22:00:17'!
PASSED!

!testRun: #TerniLapilliTests #test36OWinsWhenHeGetsThreePiecesInLine stamp: 'fr 11/1/2020 22:00:17'!
PASSED!

!testRun: #TerniLapilliTests #test37OCanNotPutAfterGameIsOver stamp: 'fr 11/1/2020 22:00:17'!
PASSED!

!testRun: #TerniLapilliTests #test38XCanNotMoveAfterGameIsOver stamp: 'fr 11/1/2020 22:00:17'!
PASSED!

!testRun: #TerniLapilliTests #test39OCanNotMoveAfterGameIsOver stamp: 'fr 11/1/2020 22:00:17'!
PASSED!

!testRun: #TerniLapilliTests #test40ItIsNoOnesTurnAfterGameIsOver stamp: 'fr 11/1/2020 22:00:17'!
PASSED!

!methodRemoval: TerniLapilli #validate:andAddForPlayer: stamp: 'fr 11/1/2020 22:00:35'!
validate: aPosition andAddForPlayer: aPlayerId
	
	self failIfInvalidDestination: aPosition.
	(self positionsFor: aPlayerId) add: aPosition.
	state _ TerniLapilliState isFor: self!
!TerniLapilli methodsFor: 'private - state safe actions' stamp: 'fr 11/1/2020 22:01:04' prior: 50880621!
removeOPosition: currentPosition

	^ (self positionsFor: #O) remove: currentPosition ifAbsent: [self positionNotUnderPlayerControl]! !

!testRun: #TerniLapilliTests #test01XPlaysFirstAndOAfter stamp: 'fr 11/1/2020 22:01:05'!
PASSED!

!testRun: #TerniLapilliTests #test02OPlaysSecondAndXAfter stamp: 'fr 11/1/2020 22:01:05'!
PASSED!

!testRun: #TerniLapilliTests #test03ODoesNotPlayFirst stamp: 'fr 11/1/2020 22:01:05'!
PASSED!

!testRun: #TerniLapilliTests #test04APlayerCanNotPlayTwoTimesInARow stamp: 'fr 11/1/2020 22:01:05'!
PASSED!

!testRun: #TerniLapilliTests #test05XPieceIsWhereHePutsIt stamp: 'fr 11/1/2020 22:01:05'!
PASSED!

!testRun: #TerniLapilliTests #test06OPieceIsWhereHePutsIt stamp: 'fr 11/1/2020 22:01:05'!
PASSED!

!testRun: #TerniLapilliTests #test07XPieceIsNotWhereHeDoesNotPutIt stamp: 'fr 11/1/2020 22:01:05'!
PASSED!

!testRun: #TerniLapilliTests #test08OPieceIsNotWhereHeDoesNotPutIt stamp: 'fr 11/1/2020 22:01:05'!
PASSED!

!testRun: #TerniLapilliTests #test09XCanPutMoreThanOnePieceCorrectly stamp: 'fr 11/1/2020 22:01:05'!
PASSED!

!testRun: #TerniLapilliTests #test10OCanPutMoreThanOnePieceCorrectly stamp: 'fr 11/1/2020 22:01:05'!
PASSED!

!testRun: #TerniLapilliTests #test11OCanNotPutAPieceInAnOccupiedPosition stamp: 'fr 11/1/2020 22:01:05'!
PASSED!

!testRun: #TerniLapilliTests #test12XCanNotPutAPieceInAnOccupiedPosition stamp: 'fr 11/1/2020 22:01:05'!
PASSED!

!testRun: #TerniLapilliTests #test13XCanNotPutAPieceOutOfBounds stamp: 'fr 11/1/2020 22:01:05'!
PASSED!

!testRun: #TerniLapilliTests #test14OCanNotPutAPieceOutOfBounds stamp: 'fr 11/1/2020 22:01:05'!
PASSED!

!testRun: #TerniLapilliTests #test15XCanNotPutMoreThanThreePieces stamp: 'fr 11/1/2020 22:01:05'!
PASSED!

!testRun: #TerniLapilliTests #test16OCanNotPutMoreThanThreePieces stamp: 'fr 11/1/2020 22:01:05'!
PASSED!

!testRun: #TerniLapilliTests #test17WhenXMovesAPieceItIsAtTheNewPositionAndNotAtThePreviousOne stamp: 'fr 11/1/2020 22:01:05'!
PASSED!

!testRun: #TerniLapilliTests #test18WhenOMovesAPieceItIsAtTheNewPositionAndNotAtThePreviousOne stamp: 'fr 11/1/2020 22:01:05'!
PASSED!

!testRun: #TerniLapilliTests #test19XCanNotMoveBeforeAddingThreePieces stamp: 'fr 11/1/2020 22:01:05'!
PASSED!

!testRun: #TerniLapilliTests #test20OCanNotMoveBeforeAddingThreePieces stamp: 'fr 11/1/2020 22:01:05'!
PASSED!

!testRun: #TerniLapilliTests #test21XCanNotMoveFromAPositionThatIsNotUnderHisControl stamp: 'fr 11/1/2020 22:01:05'!
PASSED!

!testRun: #TerniLapilliTests #test22OCanNotMoveFromAPositionThatIsNotUnderHisControl stamp: 'fr 11/1/2020 22:01:05'!
PASSED!

!testRun: #TerniLapilliTests #test23XCanNotMoveFromAnOutOfBoundsPosition stamp: 'fr 11/1/2020 22:01:05'!
PASSED!

!testRun: #TerniLapilliTests #test24OCanNotMoveFromAnOutOfBoundsPosition stamp: 'fr 11/1/2020 22:01:05'!
PASSED!

!testRun: #TerniLapilliTests #test25XCanNotMoveToAnOutOfBoundsPosition stamp: 'fr 11/1/2020 22:01:05'!
PASSED!

!testRun: #TerniLapilliTests #test26OCanNotMoveToAnOutOfBoundsPosition stamp: 'fr 11/1/2020 22:01:05'!
PASSED!

!testRun: #TerniLapilliTests #test27XCanNotMoveToAnOccupiedPosition stamp: 'fr 11/1/2020 22:01:05'!
PASSED!

!testRun: #TerniLapilliTests #test28OCanNotMoveToAnOccupiedPosition stamp: 'fr 11/1/2020 22:01:05'!
PASSED!

!testRun: #TerniLapilliTests #test29XCanNotMoveBetweenPositionsThatAreMoreThanOnePlaceAfar stamp: 'fr 11/1/2020 22:01:05'!
PASSED!

!testRun: #TerniLapilliTests #test30OCanNotMoveBetweenPositionsThatAreMoreThanOnePlaceAfar stamp: 'fr 11/1/2020 22:01:05'!
PASSED!

!testRun: #TerniLapilliTests #test31NoPlayerHasWonIfNoneOfThemHasThreePiecesInLine stamp: 'fr 11/1/2020 22:01:05'!
PASSED!

!testRun: #TerniLapilliTests #test32XWinsWhenHeGetsThreePiecesInTheSameRow stamp: 'fr 11/1/2020 22:01:05'!
PASSED!

!testRun: #TerniLapilliTests #test33XWinsWhenHeGetsThreePiecesInTheSameColumn stamp: 'fr 11/1/2020 22:01:05'!
PASSED!

!testRun: #TerniLapilliTests #test34XWinsWhenHeGetsThreePiecesInTheMainDiagonal stamp: 'fr 11/1/2020 22:01:05'!
PASSED!

!testRun: #TerniLapilliTests #test35XWinsWhenHeGetsThreePiecesInTheSecondaryDiagonal stamp: 'fr 11/1/2020 22:01:05'!
PASSED!

!testRun: #TerniLapilliTests #test36OWinsWhenHeGetsThreePiecesInLine stamp: 'fr 11/1/2020 22:01:05'!
PASSED!

!testRun: #TerniLapilliTests #test37OCanNotPutAfterGameIsOver stamp: 'fr 11/1/2020 22:01:05'!
PASSED!

!testRun: #TerniLapilliTests #test38XCanNotMoveAfterGameIsOver stamp: 'fr 11/1/2020 22:01:05'!
PASSED!

!testRun: #TerniLapilliTests #test39OCanNotMoveAfterGameIsOver stamp: 'fr 11/1/2020 22:01:05'!
PASSED!

!testRun: #TerniLapilliTests #test40ItIsNoOnesTurnAfterGameIsOver stamp: 'fr 11/1/2020 22:01:05'!
PASSED!
!TerniLapilli methodsFor: 'private - state safe actions' stamp: 'fr 11/1/2020 22:01:23' prior: 50880641!
removeXPosition: currentPosition

	^ (self positionsFor: #X) remove: currentPosition ifAbsent: [self positionNotUnderPlayerControl]! !
!TerniLapilli methodsFor: 'private - state safe actions' stamp: 'fr 11/1/2020 22:02:03' prior: 50886286!
safePutXAt: aPosition 
	
	"self failIfInvalidDestination: aPosition.
	(self positionsFor: #X) add: aPosition.
	state _ TerniLapilliState isFor: self"
	
	self validate: aPosition andAddFor: #X! !
!TerniLapilli methodsFor: 'private - state safe actions' stamp: 'fr 11/1/2020 22:02:28'!
validate: aPosition andAddFor: aPlayerId

	self failIfInvalidDestination: aPosition.
	(self positionsFor: aPlayerId) add: aPosition.
	state _ TerniLapilliState isFor: self
	
! !

!testRun: #TerniLapilliTests #test01XPlaysFirstAndOAfter stamp: 'fr 11/1/2020 22:02:45'!
PASSED!

!testRun: #TerniLapilliTests #test02OPlaysSecondAndXAfter stamp: 'fr 11/1/2020 22:02:45'!
PASSED!

!testRun: #TerniLapilliTests #test03ODoesNotPlayFirst stamp: 'fr 11/1/2020 22:02:45'!
PASSED!

!testRun: #TerniLapilliTests #test04APlayerCanNotPlayTwoTimesInARow stamp: 'fr 11/1/2020 22:02:45'!
PASSED!

!testRun: #TerniLapilliTests #test05XPieceIsWhereHePutsIt stamp: 'fr 11/1/2020 22:02:45'!
PASSED!

!testRun: #TerniLapilliTests #test06OPieceIsWhereHePutsIt stamp: 'fr 11/1/2020 22:02:45'!
PASSED!

!testRun: #TerniLapilliTests #test07XPieceIsNotWhereHeDoesNotPutIt stamp: 'fr 11/1/2020 22:02:45'!
PASSED!

!testRun: #TerniLapilliTests #test08OPieceIsNotWhereHeDoesNotPutIt stamp: 'fr 11/1/2020 22:02:45'!
PASSED!

!testRun: #TerniLapilliTests #test09XCanPutMoreThanOnePieceCorrectly stamp: 'fr 11/1/2020 22:02:45'!
PASSED!

!testRun: #TerniLapilliTests #test10OCanPutMoreThanOnePieceCorrectly stamp: 'fr 11/1/2020 22:02:45'!
PASSED!

!testRun: #TerniLapilliTests #test11OCanNotPutAPieceInAnOccupiedPosition stamp: 'fr 11/1/2020 22:02:45'!
PASSED!

!testRun: #TerniLapilliTests #test12XCanNotPutAPieceInAnOccupiedPosition stamp: 'fr 11/1/2020 22:02:45'!
PASSED!

!testRun: #TerniLapilliTests #test13XCanNotPutAPieceOutOfBounds stamp: 'fr 11/1/2020 22:02:45'!
PASSED!

!testRun: #TerniLapilliTests #test14OCanNotPutAPieceOutOfBounds stamp: 'fr 11/1/2020 22:02:45'!
PASSED!

!testRun: #TerniLapilliTests #test15XCanNotPutMoreThanThreePieces stamp: 'fr 11/1/2020 22:02:45'!
PASSED!

!testRun: #TerniLapilliTests #test16OCanNotPutMoreThanThreePieces stamp: 'fr 11/1/2020 22:02:45'!
PASSED!

!testRun: #TerniLapilliTests #test17WhenXMovesAPieceItIsAtTheNewPositionAndNotAtThePreviousOne stamp: 'fr 11/1/2020 22:02:45'!
PASSED!

!testRun: #TerniLapilliTests #test18WhenOMovesAPieceItIsAtTheNewPositionAndNotAtThePreviousOne stamp: 'fr 11/1/2020 22:02:45'!
PASSED!

!testRun: #TerniLapilliTests #test19XCanNotMoveBeforeAddingThreePieces stamp: 'fr 11/1/2020 22:02:45'!
PASSED!

!testRun: #TerniLapilliTests #test20OCanNotMoveBeforeAddingThreePieces stamp: 'fr 11/1/2020 22:02:45'!
PASSED!

!testRun: #TerniLapilliTests #test21XCanNotMoveFromAPositionThatIsNotUnderHisControl stamp: 'fr 11/1/2020 22:02:45'!
PASSED!

!testRun: #TerniLapilliTests #test22OCanNotMoveFromAPositionThatIsNotUnderHisControl stamp: 'fr 11/1/2020 22:02:45'!
PASSED!

!testRun: #TerniLapilliTests #test23XCanNotMoveFromAnOutOfBoundsPosition stamp: 'fr 11/1/2020 22:02:45'!
PASSED!

!testRun: #TerniLapilliTests #test24OCanNotMoveFromAnOutOfBoundsPosition stamp: 'fr 11/1/2020 22:02:45'!
PASSED!

!testRun: #TerniLapilliTests #test25XCanNotMoveToAnOutOfBoundsPosition stamp: 'fr 11/1/2020 22:02:45'!
PASSED!

!testRun: #TerniLapilliTests #test26OCanNotMoveToAnOutOfBoundsPosition stamp: 'fr 11/1/2020 22:02:45'!
PASSED!

!testRun: #TerniLapilliTests #test27XCanNotMoveToAnOccupiedPosition stamp: 'fr 11/1/2020 22:02:45'!
PASSED!

!testRun: #TerniLapilliTests #test28OCanNotMoveToAnOccupiedPosition stamp: 'fr 11/1/2020 22:02:45'!
PASSED!

!testRun: #TerniLapilliTests #test29XCanNotMoveBetweenPositionsThatAreMoreThanOnePlaceAfar stamp: 'fr 11/1/2020 22:02:45'!
PASSED!

!testRun: #TerniLapilliTests #test30OCanNotMoveBetweenPositionsThatAreMoreThanOnePlaceAfar stamp: 'fr 11/1/2020 22:02:45'!
PASSED!

!testRun: #TerniLapilliTests #test31NoPlayerHasWonIfNoneOfThemHasThreePiecesInLine stamp: 'fr 11/1/2020 22:02:45'!
PASSED!

!testRun: #TerniLapilliTests #test32XWinsWhenHeGetsThreePiecesInTheSameRow stamp: 'fr 11/1/2020 22:02:45'!
PASSED!

!testRun: #TerniLapilliTests #test33XWinsWhenHeGetsThreePiecesInTheSameColumn stamp: 'fr 11/1/2020 22:02:45'!
PASSED!

!testRun: #TerniLapilliTests #test34XWinsWhenHeGetsThreePiecesInTheMainDiagonal stamp: 'fr 11/1/2020 22:02:45'!
PASSED!

!testRun: #TerniLapilliTests #test35XWinsWhenHeGetsThreePiecesInTheSecondaryDiagonal stamp: 'fr 11/1/2020 22:02:45'!
PASSED!

!testRun: #TerniLapilliTests #test36OWinsWhenHeGetsThreePiecesInLine stamp: 'fr 11/1/2020 22:02:45'!
PASSED!

!testRun: #TerniLapilliTests #test37OCanNotPutAfterGameIsOver stamp: 'fr 11/1/2020 22:02:45'!
PASSED!

!testRun: #TerniLapilliTests #test38XCanNotMoveAfterGameIsOver stamp: 'fr 11/1/2020 22:02:45'!
PASSED!

!testRun: #TerniLapilliTests #test39OCanNotMoveAfterGameIsOver stamp: 'fr 11/1/2020 22:02:45'!
PASSED!

!testRun: #TerniLapilliTests #test40ItIsNoOnesTurnAfterGameIsOver stamp: 'fr 11/1/2020 22:02:45'!
PASSED!
!TerniLapilli methodsFor: 'private - state safe actions' stamp: 'fr 11/1/2020 22:02:55' prior: 50886601!
safePutXAt: aPosition 
	
	self validate: aPosition andAddFor: #X! !
!TerniLapilli methodsFor: 'private - state safe actions' stamp: 'fr 11/1/2020 22:03:09' prior: 50886277!
safePutOAt: aPosition 

	self validate: aPosition andAddFor: #O
	! !

!testRun: #TerniLapilliTests #test01XPlaysFirstAndOAfter stamp: 'fr 11/1/2020 22:03:11'!
PASSED!

!testRun: #TerniLapilliTests #test02OPlaysSecondAndXAfter stamp: 'fr 11/1/2020 22:03:11'!
PASSED!

!testRun: #TerniLapilliTests #test03ODoesNotPlayFirst stamp: 'fr 11/1/2020 22:03:11'!
PASSED!

!testRun: #TerniLapilliTests #test04APlayerCanNotPlayTwoTimesInARow stamp: 'fr 11/1/2020 22:03:11'!
PASSED!

!testRun: #TerniLapilliTests #test05XPieceIsWhereHePutsIt stamp: 'fr 11/1/2020 22:03:11'!
PASSED!

!testRun: #TerniLapilliTests #test06OPieceIsWhereHePutsIt stamp: 'fr 11/1/2020 22:03:11'!
PASSED!

!testRun: #TerniLapilliTests #test07XPieceIsNotWhereHeDoesNotPutIt stamp: 'fr 11/1/2020 22:03:11'!
PASSED!

!testRun: #TerniLapilliTests #test08OPieceIsNotWhereHeDoesNotPutIt stamp: 'fr 11/1/2020 22:03:11'!
PASSED!

!testRun: #TerniLapilliTests #test09XCanPutMoreThanOnePieceCorrectly stamp: 'fr 11/1/2020 22:03:11'!
PASSED!

!testRun: #TerniLapilliTests #test10OCanPutMoreThanOnePieceCorrectly stamp: 'fr 11/1/2020 22:03:11'!
PASSED!

!testRun: #TerniLapilliTests #test11OCanNotPutAPieceInAnOccupiedPosition stamp: 'fr 11/1/2020 22:03:11'!
PASSED!

!testRun: #TerniLapilliTests #test12XCanNotPutAPieceInAnOccupiedPosition stamp: 'fr 11/1/2020 22:03:11'!
PASSED!

!testRun: #TerniLapilliTests #test13XCanNotPutAPieceOutOfBounds stamp: 'fr 11/1/2020 22:03:11'!
PASSED!

!testRun: #TerniLapilliTests #test14OCanNotPutAPieceOutOfBounds stamp: 'fr 11/1/2020 22:03:11'!
PASSED!

!testRun: #TerniLapilliTests #test15XCanNotPutMoreThanThreePieces stamp: 'fr 11/1/2020 22:03:11'!
PASSED!

!testRun: #TerniLapilliTests #test16OCanNotPutMoreThanThreePieces stamp: 'fr 11/1/2020 22:03:11'!
PASSED!

!testRun: #TerniLapilliTests #test17WhenXMovesAPieceItIsAtTheNewPositionAndNotAtThePreviousOne stamp: 'fr 11/1/2020 22:03:11'!
PASSED!

!testRun: #TerniLapilliTests #test18WhenOMovesAPieceItIsAtTheNewPositionAndNotAtThePreviousOne stamp: 'fr 11/1/2020 22:03:11'!
PASSED!

!testRun: #TerniLapilliTests #test19XCanNotMoveBeforeAddingThreePieces stamp: 'fr 11/1/2020 22:03:11'!
PASSED!

!testRun: #TerniLapilliTests #test20OCanNotMoveBeforeAddingThreePieces stamp: 'fr 11/1/2020 22:03:11'!
PASSED!

!testRun: #TerniLapilliTests #test21XCanNotMoveFromAPositionThatIsNotUnderHisControl stamp: 'fr 11/1/2020 22:03:11'!
PASSED!

!testRun: #TerniLapilliTests #test22OCanNotMoveFromAPositionThatIsNotUnderHisControl stamp: 'fr 11/1/2020 22:03:11'!
PASSED!

!testRun: #TerniLapilliTests #test23XCanNotMoveFromAnOutOfBoundsPosition stamp: 'fr 11/1/2020 22:03:11'!
PASSED!

!testRun: #TerniLapilliTests #test24OCanNotMoveFromAnOutOfBoundsPosition stamp: 'fr 11/1/2020 22:03:11'!
PASSED!

!testRun: #TerniLapilliTests #test25XCanNotMoveToAnOutOfBoundsPosition stamp: 'fr 11/1/2020 22:03:11'!
PASSED!

!testRun: #TerniLapilliTests #test26OCanNotMoveToAnOutOfBoundsPosition stamp: 'fr 11/1/2020 22:03:11'!
PASSED!

!testRun: #TerniLapilliTests #test27XCanNotMoveToAnOccupiedPosition stamp: 'fr 11/1/2020 22:03:11'!
PASSED!

!testRun: #TerniLapilliTests #test28OCanNotMoveToAnOccupiedPosition stamp: 'fr 11/1/2020 22:03:11'!
PASSED!

!testRun: #TerniLapilliTests #test29XCanNotMoveBetweenPositionsThatAreMoreThanOnePlaceAfar stamp: 'fr 11/1/2020 22:03:11'!
PASSED!

!testRun: #TerniLapilliTests #test30OCanNotMoveBetweenPositionsThatAreMoreThanOnePlaceAfar stamp: 'fr 11/1/2020 22:03:11'!
PASSED!

!testRun: #TerniLapilliTests #test31NoPlayerHasWonIfNoneOfThemHasThreePiecesInLine stamp: 'fr 11/1/2020 22:03:11'!
PASSED!

!testRun: #TerniLapilliTests #test32XWinsWhenHeGetsThreePiecesInTheSameRow stamp: 'fr 11/1/2020 22:03:11'!
PASSED!

!testRun: #TerniLapilliTests #test33XWinsWhenHeGetsThreePiecesInTheSameColumn stamp: 'fr 11/1/2020 22:03:11'!
PASSED!

!testRun: #TerniLapilliTests #test34XWinsWhenHeGetsThreePiecesInTheMainDiagonal stamp: 'fr 11/1/2020 22:03:11'!
PASSED!

!testRun: #TerniLapilliTests #test35XWinsWhenHeGetsThreePiecesInTheSecondaryDiagonal stamp: 'fr 11/1/2020 22:03:11'!
PASSED!

!testRun: #TerniLapilliTests #test36OWinsWhenHeGetsThreePiecesInLine stamp: 'fr 11/1/2020 22:03:11'!
PASSED!

!testRun: #TerniLapilliTests #test37OCanNotPutAfterGameIsOver stamp: 'fr 11/1/2020 22:03:11'!
PASSED!

!testRun: #TerniLapilliTests #test38XCanNotMoveAfterGameIsOver stamp: 'fr 11/1/2020 22:03:11'!
PASSED!

!testRun: #TerniLapilliTests #test39OCanNotMoveAfterGameIsOver stamp: 'fr 11/1/2020 22:03:11'!
PASSED!

!testRun: #TerniLapilliTests #test40ItIsNoOnesTurnAfterGameIsOver stamp: 'fr 11/1/2020 22:03:11'!
PASSED!
!TerniLapilli methodsFor: 'private - state safe actions' stamp: 'fr 11/1/2020 22:03:31' prior: 50886125!
safeMoveXFrom: currentPosition to: newPosition
	
	self failIfPositionOutOfBounds: currentPosition.	
	self failIfItIsTooFarToMoveFrom: currentPosition to: newPosition.
	
	self removeXPosition: currentPosition.
	self safePutXAt: newPosition 
	
	! !
!TerniLapilli methodsFor: 'private - state safe actions' stamp: 'fr 11/1/2020 22:03:36' prior: 50886114!
safeMoveOFrom: currentPosition to: newPosition 
	
	self failIfPositionOutOfBounds: currentPosition.
	self failIfItIsTooFarToMoveFrom: currentPosition to: newPosition.
	
	self removeOPosition: currentPosition.
	self safePutOAt: newPosition 
! !
!TerniLapilli methodsFor: 'private - state safe actions' stamp: 'fr 11/1/2020 22:03:46' prior: 50886924!
safeMoveOFrom: currentPosition to: newPosition 
	
	self failIfPositionOutOfBounds: currentPosition.
	self failIfItIsTooFarToMoveFrom: currentPosition to: newPosition.
	self removeOPosition: currentPosition.
	
	self safePutOAt: newPosition 
! !
!TerniLapilli methodsFor: 'private - state safe actions' stamp: 'fr 11/1/2020 22:04:17' prior: 50886935!
safeMoveOFrom: currentPosition to: newPosition 
	
	"self failIfPositionOutOfBounds: currentPosition.
	self failIfItIsTooFarToMoveFrom: currentPosition to: newPosition.
	self removeOPosition: currentPosition."
	
	self validatePositions: newPosition andRemoveO: currentPosition.
	
	self safePutOAt: newPosition 
! !
!TerniLapilli methodsFor: 'private - state safe actions' stamp: 'fr 11/1/2020 22:04:33'!
validatePositions: newPosition andRemoveO: currentPosition.
	
	self failIfPositionOutOfBounds: currentPosition.
	self failIfItIsTooFarToMoveFrom: currentPosition to: newPosition.
	self removeOPosition: currentPosition.! !
!TerniLapilli methodsFor: 'private - state safe actions' stamp: 'fr 11/1/2020 22:04:38'!
validatePositions: newPosition andRemoveX: currentPosition.
	
	self failIfPositionOutOfBounds: currentPosition.
	self failIfItIsTooFarToMoveFrom: currentPosition to: newPosition.
	self removeOPosition: currentPosition.! !
!TerniLapilli methodsFor: 'private - state safe actions' stamp: 'fr 11/1/2020 22:04:40' prior: 50886969!
validatePositions: newPosition andRemoveX: currentPosition.
	
	self failIfPositionOutOfBounds: currentPosition.
	self failIfItIsTooFarToMoveFrom: currentPosition to: newPosition.
	self removeXPosition: currentPosition.! !
!TerniLapilli methodsFor: 'private - state safe actions' stamp: 'fr 11/1/2020 22:05:07' prior: 50886913!
safeMoveXFrom: currentPosition to: newPosition
	
	self validatePositions: newPosition andRemoveX: currentPosition 
	self safePutXAt: newPosition 
	
	! !
!TerniLapilli methodsFor: 'private - state safe actions' stamp: 'fr 11/1/2020 22:05:11' prior: 50886991!
safeMoveXFrom: currentPosition to: newPosition
	
	self validatePositions: newPosition andRemoveX: currentPosition.
	self safePutXAt: newPosition 
	
	! !
!TerniLapilli methodsFor: 'private - state safe actions' stamp: 'fr 11/1/2020 22:05:18' prior: 50886946!
safeMoveOFrom: currentPosition to: newPosition 
		
	self validatePositions: newPosition andRemoveO: currentPosition.
	
	self safePutOAt: newPosition 
! !
!TerniLapilli methodsFor: 'private - state safe actions' stamp: 'fr 11/1/2020 22:05:20' prior: 50887009!
safeMoveOFrom: currentPosition to: newPosition 
		
	self validatePositions: newPosition andRemoveO: currentPosition.
	self safePutOAt: newPosition 
! !

!testRun: #TerniLapilliTests #test01XPlaysFirstAndOAfter stamp: 'fr 11/1/2020 22:05:29'!
PASSED!

!testRun: #TerniLapilliTests #test02OPlaysSecondAndXAfter stamp: 'fr 11/1/2020 22:05:29'!
PASSED!

!testRun: #TerniLapilliTests #test03ODoesNotPlayFirst stamp: 'fr 11/1/2020 22:05:29'!
PASSED!

!testRun: #TerniLapilliTests #test04APlayerCanNotPlayTwoTimesInARow stamp: 'fr 11/1/2020 22:05:29'!
PASSED!

!testRun: #TerniLapilliTests #test05XPieceIsWhereHePutsIt stamp: 'fr 11/1/2020 22:05:29'!
PASSED!

!testRun: #TerniLapilliTests #test06OPieceIsWhereHePutsIt stamp: 'fr 11/1/2020 22:05:29'!
PASSED!

!testRun: #TerniLapilliTests #test07XPieceIsNotWhereHeDoesNotPutIt stamp: 'fr 11/1/2020 22:05:29'!
PASSED!

!testRun: #TerniLapilliTests #test08OPieceIsNotWhereHeDoesNotPutIt stamp: 'fr 11/1/2020 22:05:29'!
PASSED!

!testRun: #TerniLapilliTests #test09XCanPutMoreThanOnePieceCorrectly stamp: 'fr 11/1/2020 22:05:29'!
PASSED!

!testRun: #TerniLapilliTests #test10OCanPutMoreThanOnePieceCorrectly stamp: 'fr 11/1/2020 22:05:29'!
PASSED!

!testRun: #TerniLapilliTests #test11OCanNotPutAPieceInAnOccupiedPosition stamp: 'fr 11/1/2020 22:05:29'!
PASSED!

!testRun: #TerniLapilliTests #test12XCanNotPutAPieceInAnOccupiedPosition stamp: 'fr 11/1/2020 22:05:29'!
PASSED!

!testRun: #TerniLapilliTests #test13XCanNotPutAPieceOutOfBounds stamp: 'fr 11/1/2020 22:05:29'!
PASSED!

!testRun: #TerniLapilliTests #test14OCanNotPutAPieceOutOfBounds stamp: 'fr 11/1/2020 22:05:29'!
PASSED!

!testRun: #TerniLapilliTests #test15XCanNotPutMoreThanThreePieces stamp: 'fr 11/1/2020 22:05:29'!
PASSED!

!testRun: #TerniLapilliTests #test16OCanNotPutMoreThanThreePieces stamp: 'fr 11/1/2020 22:05:29'!
PASSED!

!testRun: #TerniLapilliTests #test17WhenXMovesAPieceItIsAtTheNewPositionAndNotAtThePreviousOne stamp: 'fr 11/1/2020 22:05:29'!
PASSED!

!testRun: #TerniLapilliTests #test18WhenOMovesAPieceItIsAtTheNewPositionAndNotAtThePreviousOne stamp: 'fr 11/1/2020 22:05:29'!
PASSED!

!testRun: #TerniLapilliTests #test19XCanNotMoveBeforeAddingThreePieces stamp: 'fr 11/1/2020 22:05:29'!
PASSED!

!testRun: #TerniLapilliTests #test20OCanNotMoveBeforeAddingThreePieces stamp: 'fr 11/1/2020 22:05:29'!
PASSED!

!testRun: #TerniLapilliTests #test21XCanNotMoveFromAPositionThatIsNotUnderHisControl stamp: 'fr 11/1/2020 22:05:29'!
PASSED!

!testRun: #TerniLapilliTests #test22OCanNotMoveFromAPositionThatIsNotUnderHisControl stamp: 'fr 11/1/2020 22:05:29'!
PASSED!

!testRun: #TerniLapilliTests #test23XCanNotMoveFromAnOutOfBoundsPosition stamp: 'fr 11/1/2020 22:05:29'!
PASSED!

!testRun: #TerniLapilliTests #test24OCanNotMoveFromAnOutOfBoundsPosition stamp: 'fr 11/1/2020 22:05:29'!
PASSED!

!testRun: #TerniLapilliTests #test25XCanNotMoveToAnOutOfBoundsPosition stamp: 'fr 11/1/2020 22:05:29'!
PASSED!

!testRun: #TerniLapilliTests #test26OCanNotMoveToAnOutOfBoundsPosition stamp: 'fr 11/1/2020 22:05:29'!
PASSED!

!testRun: #TerniLapilliTests #test27XCanNotMoveToAnOccupiedPosition stamp: 'fr 11/1/2020 22:05:29'!
PASSED!

!testRun: #TerniLapilliTests #test28OCanNotMoveToAnOccupiedPosition stamp: 'fr 11/1/2020 22:05:29'!
PASSED!

!testRun: #TerniLapilliTests #test29XCanNotMoveBetweenPositionsThatAreMoreThanOnePlaceAfar stamp: 'fr 11/1/2020 22:05:29'!
PASSED!

!testRun: #TerniLapilliTests #test30OCanNotMoveBetweenPositionsThatAreMoreThanOnePlaceAfar stamp: 'fr 11/1/2020 22:05:30'!
PASSED!

!testRun: #TerniLapilliTests #test31NoPlayerHasWonIfNoneOfThemHasThreePiecesInLine stamp: 'fr 11/1/2020 22:05:30'!
PASSED!

!testRun: #TerniLapilliTests #test32XWinsWhenHeGetsThreePiecesInTheSameRow stamp: 'fr 11/1/2020 22:05:30'!
PASSED!

!testRun: #TerniLapilliTests #test33XWinsWhenHeGetsThreePiecesInTheSameColumn stamp: 'fr 11/1/2020 22:05:30'!
PASSED!

!testRun: #TerniLapilliTests #test34XWinsWhenHeGetsThreePiecesInTheMainDiagonal stamp: 'fr 11/1/2020 22:05:30'!
PASSED!

!testRun: #TerniLapilliTests #test35XWinsWhenHeGetsThreePiecesInTheSecondaryDiagonal stamp: 'fr 11/1/2020 22:05:30'!
PASSED!

!testRun: #TerniLapilliTests #test36OWinsWhenHeGetsThreePiecesInLine stamp: 'fr 11/1/2020 22:05:30'!
PASSED!

!testRun: #TerniLapilliTests #test37OCanNotPutAfterGameIsOver stamp: 'fr 11/1/2020 22:05:30'!
PASSED!

!testRun: #TerniLapilliTests #test38XCanNotMoveAfterGameIsOver stamp: 'fr 11/1/2020 22:05:30'!
PASSED!

!testRun: #TerniLapilliTests #test39OCanNotMoveAfterGameIsOver stamp: 'fr 11/1/2020 22:05:30'!
PASSED!

!testRun: #TerniLapilliTests #test40ItIsNoOnesTurnAfterGameIsOver stamp: 'fr 11/1/2020 22:05:30'!
PASSED!
!TerniLapilli methodsFor: 'private - state safe actions' stamp: 'fr 11/1/2020 22:06:04' prior: 50886959!
validatePositions: newPosition andRemoveO: currentPosition.
	
	"self failIfPositionOutOfBounds: currentPosition.
	self failIfItIsTooFarToMoveFrom: currentPosition to: newPosition."
	self validate: newPosition and: currentPosition.
	self removeOPosition: currentPosition.! !
!TerniLapilli methodsFor: 'private - state safe actions' stamp: 'fr 11/1/2020 22:06:28'!
validate: newPosition and: currentPosition.
	
	self failIfPositionOutOfBounds: currentPosition.
	self failIfItIsTooFarToMoveFrom: currentPosition to: newPosition.
! !
!TerniLapilli methodsFor: 'private - state safe actions' stamp: 'fr 11/1/2020 22:07:37'!
failIfTooFar: newPosition orOutOfBounds: currentPosition.
	
	self failIfPositionOutOfBounds: currentPosition.
	self failIfItIsTooFarToMoveFrom: currentPosition to: newPosition.
! !
!TerniLapilli methodsFor: 'as yet unclassified' stamp: 'fr 11/1/2020 22:07:37' prior: 50887167!
validatePositions: newPosition andRemoveO: currentPosition.
	
	"self failIfPositionOutOfBounds: currentPosition.
	self failIfItIsTooFarToMoveFrom: currentPosition to: newPosition."
	self failIfTooFar: newPosition orOutOfBounds: currentPosition.
	self removeOPosition: currentPosition.! !

!methodRemoval: TerniLapilli #validate:and: stamp: 'fr 11/1/2020 22:07:37'!
validate: newPosition and: currentPosition.
	
	self failIfPositionOutOfBounds: currentPosition.
	self failIfItIsTooFarToMoveFrom: currentPosition to: newPosition.
!

!testRun: #TerniLapilliTests #test01XPlaysFirstAndOAfter stamp: 'fr 11/1/2020 22:07:39'!
PASSED!

!testRun: #TerniLapilliTests #test02OPlaysSecondAndXAfter stamp: 'fr 11/1/2020 22:07:39'!
PASSED!

!testRun: #TerniLapilliTests #test03ODoesNotPlayFirst stamp: 'fr 11/1/2020 22:07:39'!
PASSED!

!testRun: #TerniLapilliTests #test04APlayerCanNotPlayTwoTimesInARow stamp: 'fr 11/1/2020 22:07:39'!
PASSED!

!testRun: #TerniLapilliTests #test05XPieceIsWhereHePutsIt stamp: 'fr 11/1/2020 22:07:39'!
PASSED!

!testRun: #TerniLapilliTests #test06OPieceIsWhereHePutsIt stamp: 'fr 11/1/2020 22:07:39'!
PASSED!

!testRun: #TerniLapilliTests #test07XPieceIsNotWhereHeDoesNotPutIt stamp: 'fr 11/1/2020 22:07:39'!
PASSED!

!testRun: #TerniLapilliTests #test08OPieceIsNotWhereHeDoesNotPutIt stamp: 'fr 11/1/2020 22:07:39'!
PASSED!

!testRun: #TerniLapilliTests #test09XCanPutMoreThanOnePieceCorrectly stamp: 'fr 11/1/2020 22:07:39'!
PASSED!

!testRun: #TerniLapilliTests #test10OCanPutMoreThanOnePieceCorrectly stamp: 'fr 11/1/2020 22:07:39'!
PASSED!

!testRun: #TerniLapilliTests #test11OCanNotPutAPieceInAnOccupiedPosition stamp: 'fr 11/1/2020 22:07:39'!
PASSED!

!testRun: #TerniLapilliTests #test12XCanNotPutAPieceInAnOccupiedPosition stamp: 'fr 11/1/2020 22:07:39'!
PASSED!

!testRun: #TerniLapilliTests #test13XCanNotPutAPieceOutOfBounds stamp: 'fr 11/1/2020 22:07:39'!
PASSED!

!testRun: #TerniLapilliTests #test14OCanNotPutAPieceOutOfBounds stamp: 'fr 11/1/2020 22:07:39'!
PASSED!

!testRun: #TerniLapilliTests #test15XCanNotPutMoreThanThreePieces stamp: 'fr 11/1/2020 22:07:39'!
PASSED!

!testRun: #TerniLapilliTests #test16OCanNotPutMoreThanThreePieces stamp: 'fr 11/1/2020 22:07:39'!
PASSED!

!testRun: #TerniLapilliTests #test17WhenXMovesAPieceItIsAtTheNewPositionAndNotAtThePreviousOne stamp: 'fr 11/1/2020 22:07:39'!
PASSED!

!testRun: #TerniLapilliTests #test18WhenOMovesAPieceItIsAtTheNewPositionAndNotAtThePreviousOne stamp: 'fr 11/1/2020 22:07:39'!
PASSED!

!testRun: #TerniLapilliTests #test19XCanNotMoveBeforeAddingThreePieces stamp: 'fr 11/1/2020 22:07:39'!
PASSED!

!testRun: #TerniLapilliTests #test20OCanNotMoveBeforeAddingThreePieces stamp: 'fr 11/1/2020 22:07:39'!
PASSED!

!testRun: #TerniLapilliTests #test21XCanNotMoveFromAPositionThatIsNotUnderHisControl stamp: 'fr 11/1/2020 22:07:39'!
PASSED!

!testRun: #TerniLapilliTests #test22OCanNotMoveFromAPositionThatIsNotUnderHisControl stamp: 'fr 11/1/2020 22:07:39'!
PASSED!

!testRun: #TerniLapilliTests #test23XCanNotMoveFromAnOutOfBoundsPosition stamp: 'fr 11/1/2020 22:07:39'!
PASSED!

!testRun: #TerniLapilliTests #test24OCanNotMoveFromAnOutOfBoundsPosition stamp: 'fr 11/1/2020 22:07:39'!
PASSED!

!testRun: #TerniLapilliTests #test25XCanNotMoveToAnOutOfBoundsPosition stamp: 'fr 11/1/2020 22:07:39'!
PASSED!

!testRun: #TerniLapilliTests #test26OCanNotMoveToAnOutOfBoundsPosition stamp: 'fr 11/1/2020 22:07:39'!
PASSED!

!testRun: #TerniLapilliTests #test27XCanNotMoveToAnOccupiedPosition stamp: 'fr 11/1/2020 22:07:39'!
PASSED!

!testRun: #TerniLapilliTests #test28OCanNotMoveToAnOccupiedPosition stamp: 'fr 11/1/2020 22:07:39'!
PASSED!

!testRun: #TerniLapilliTests #test29XCanNotMoveBetweenPositionsThatAreMoreThanOnePlaceAfar stamp: 'fr 11/1/2020 22:07:39'!
PASSED!

!testRun: #TerniLapilliTests #test30OCanNotMoveBetweenPositionsThatAreMoreThanOnePlaceAfar stamp: 'fr 11/1/2020 22:07:39'!
PASSED!

!testRun: #TerniLapilliTests #test31NoPlayerHasWonIfNoneOfThemHasThreePiecesInLine stamp: 'fr 11/1/2020 22:07:39'!
PASSED!

!testRun: #TerniLapilliTests #test32XWinsWhenHeGetsThreePiecesInTheSameRow stamp: 'fr 11/1/2020 22:07:39'!
PASSED!

!testRun: #TerniLapilliTests #test33XWinsWhenHeGetsThreePiecesInTheSameColumn stamp: 'fr 11/1/2020 22:07:39'!
PASSED!

!testRun: #TerniLapilliTests #test34XWinsWhenHeGetsThreePiecesInTheMainDiagonal stamp: 'fr 11/1/2020 22:07:39'!
PASSED!

!testRun: #TerniLapilliTests #test35XWinsWhenHeGetsThreePiecesInTheSecondaryDiagonal stamp: 'fr 11/1/2020 22:07:39'!
PASSED!

!testRun: #TerniLapilliTests #test36OWinsWhenHeGetsThreePiecesInLine stamp: 'fr 11/1/2020 22:07:39'!
PASSED!

!testRun: #TerniLapilliTests #test37OCanNotPutAfterGameIsOver stamp: 'fr 11/1/2020 22:07:39'!
PASSED!

!testRun: #TerniLapilliTests #test38XCanNotMoveAfterGameIsOver stamp: 'fr 11/1/2020 22:07:39'!
PASSED!

!testRun: #TerniLapilliTests #test39OCanNotMoveAfterGameIsOver stamp: 'fr 11/1/2020 22:07:39'!
PASSED!

!testRun: #TerniLapilliTests #test40ItIsNoOnesTurnAfterGameIsOver stamp: 'fr 11/1/2020 22:07:39'!
PASSED!
!TerniLapilli methodsFor: 'private - state safe actions' stamp: 'fr 11/1/2020 22:08:20' prior: 50887196!
validatePositions: newPosition andRemoveO: currentPosition.
	
	self failIfTooFar: newPosition orOutOfBounds: currentPosition.
	self removeOPosition: currentPosition.! !
!TerniLapilli methodsFor: 'private - state safe actions' stamp: 'fr 11/1/2020 22:08:40' prior: 50886980!
validatePositions: newPosition andRemoveX: currentPosition.
	
	self failIfTooFar: newPosition orOutOfBounds: currentPosition.
	self removeXPosition: currentPosition.! !
!TerniLapilli methodsFor: 'private - state safe actions' stamp: 'fr 11/1/2020 22:09:36'!
validatePositions: newPosition andRemove: currentPosition for: aPlayerId
	
	self failIfTooFar: newPosition orOutOfBounds: currentPosition.
	(self positionsFor: aPlayerId) remove: currentPosition ifAbsent: [self positionNotUnderPlayerControl]! !
!TerniLapilli methodsFor: 'private - state safe actions' stamp: 'fr 11/1/2020 22:10:18' prior: 50887000!
safeMoveXFrom: currentPosition to: newPosition
	
	self validatePositions: newPosition andRemove: currentPosition for: #X.
	self safePutXAt: newPosition 
	
	! !
!TerniLapilli methodsFor: 'private - state safe actions' stamp: 'fr 11/1/2020 22:10:24' prior: 50887018!
safeMoveOFrom: currentPosition to: newPosition 
		
	self validatePositions: newPosition andRemove: currentPosition for: #O.
	self safePutOAt: newPosition 
! !

!testRun: #TerniLapilliTests #test01XPlaysFirstAndOAfter stamp: 'fr 11/1/2020 22:10:26'!
PASSED!

!testRun: #TerniLapilliTests #test02OPlaysSecondAndXAfter stamp: 'fr 11/1/2020 22:10:26'!
PASSED!

!testRun: #TerniLapilliTests #test03ODoesNotPlayFirst stamp: 'fr 11/1/2020 22:10:26'!
PASSED!

!testRun: #TerniLapilliTests #test04APlayerCanNotPlayTwoTimesInARow stamp: 'fr 11/1/2020 22:10:26'!
PASSED!

!testRun: #TerniLapilliTests #test05XPieceIsWhereHePutsIt stamp: 'fr 11/1/2020 22:10:26'!
PASSED!

!testRun: #TerniLapilliTests #test06OPieceIsWhereHePutsIt stamp: 'fr 11/1/2020 22:10:26'!
PASSED!

!testRun: #TerniLapilliTests #test07XPieceIsNotWhereHeDoesNotPutIt stamp: 'fr 11/1/2020 22:10:26'!
PASSED!

!testRun: #TerniLapilliTests #test08OPieceIsNotWhereHeDoesNotPutIt stamp: 'fr 11/1/2020 22:10:26'!
PASSED!

!testRun: #TerniLapilliTests #test09XCanPutMoreThanOnePieceCorrectly stamp: 'fr 11/1/2020 22:10:26'!
PASSED!

!testRun: #TerniLapilliTests #test10OCanPutMoreThanOnePieceCorrectly stamp: 'fr 11/1/2020 22:10:26'!
PASSED!

!testRun: #TerniLapilliTests #test11OCanNotPutAPieceInAnOccupiedPosition stamp: 'fr 11/1/2020 22:10:26'!
PASSED!

!testRun: #TerniLapilliTests #test12XCanNotPutAPieceInAnOccupiedPosition stamp: 'fr 11/1/2020 22:10:26'!
PASSED!

!testRun: #TerniLapilliTests #test13XCanNotPutAPieceOutOfBounds stamp: 'fr 11/1/2020 22:10:26'!
PASSED!

!testRun: #TerniLapilliTests #test14OCanNotPutAPieceOutOfBounds stamp: 'fr 11/1/2020 22:10:26'!
PASSED!

!testRun: #TerniLapilliTests #test15XCanNotPutMoreThanThreePieces stamp: 'fr 11/1/2020 22:10:26'!
PASSED!

!testRun: #TerniLapilliTests #test16OCanNotPutMoreThanThreePieces stamp: 'fr 11/1/2020 22:10:26'!
PASSED!

!testRun: #TerniLapilliTests #test17WhenXMovesAPieceItIsAtTheNewPositionAndNotAtThePreviousOne stamp: 'fr 11/1/2020 22:10:26'!
PASSED!

!testRun: #TerniLapilliTests #test18WhenOMovesAPieceItIsAtTheNewPositionAndNotAtThePreviousOne stamp: 'fr 11/1/2020 22:10:26'!
PASSED!

!testRun: #TerniLapilliTests #test19XCanNotMoveBeforeAddingThreePieces stamp: 'fr 11/1/2020 22:10:26'!
PASSED!

!testRun: #TerniLapilliTests #test20OCanNotMoveBeforeAddingThreePieces stamp: 'fr 11/1/2020 22:10:26'!
PASSED!

!testRun: #TerniLapilliTests #test21XCanNotMoveFromAPositionThatIsNotUnderHisControl stamp: 'fr 11/1/2020 22:10:26'!
PASSED!

!testRun: #TerniLapilliTests #test22OCanNotMoveFromAPositionThatIsNotUnderHisControl stamp: 'fr 11/1/2020 22:10:26'!
PASSED!

!testRun: #TerniLapilliTests #test23XCanNotMoveFromAnOutOfBoundsPosition stamp: 'fr 11/1/2020 22:10:26'!
PASSED!

!testRun: #TerniLapilliTests #test24OCanNotMoveFromAnOutOfBoundsPosition stamp: 'fr 11/1/2020 22:10:26'!
PASSED!

!testRun: #TerniLapilliTests #test25XCanNotMoveToAnOutOfBoundsPosition stamp: 'fr 11/1/2020 22:10:26'!
PASSED!

!testRun: #TerniLapilliTests #test26OCanNotMoveToAnOutOfBoundsPosition stamp: 'fr 11/1/2020 22:10:26'!
PASSED!

!testRun: #TerniLapilliTests #test27XCanNotMoveToAnOccupiedPosition stamp: 'fr 11/1/2020 22:10:26'!
PASSED!

!testRun: #TerniLapilliTests #test28OCanNotMoveToAnOccupiedPosition stamp: 'fr 11/1/2020 22:10:26'!
PASSED!

!testRun: #TerniLapilliTests #test29XCanNotMoveBetweenPositionsThatAreMoreThanOnePlaceAfar stamp: 'fr 11/1/2020 22:10:26'!
PASSED!

!testRun: #TerniLapilliTests #test30OCanNotMoveBetweenPositionsThatAreMoreThanOnePlaceAfar stamp: 'fr 11/1/2020 22:10:26'!
PASSED!

!testRun: #TerniLapilliTests #test31NoPlayerHasWonIfNoneOfThemHasThreePiecesInLine stamp: 'fr 11/1/2020 22:10:26'!
PASSED!

!testRun: #TerniLapilliTests #test32XWinsWhenHeGetsThreePiecesInTheSameRow stamp: 'fr 11/1/2020 22:10:26'!
PASSED!

!testRun: #TerniLapilliTests #test33XWinsWhenHeGetsThreePiecesInTheSameColumn stamp: 'fr 11/1/2020 22:10:26'!
PASSED!

!testRun: #TerniLapilliTests #test34XWinsWhenHeGetsThreePiecesInTheMainDiagonal stamp: 'fr 11/1/2020 22:10:26'!
PASSED!

!testRun: #TerniLapilliTests #test35XWinsWhenHeGetsThreePiecesInTheSecondaryDiagonal stamp: 'fr 11/1/2020 22:10:26'!
PASSED!

!testRun: #TerniLapilliTests #test36OWinsWhenHeGetsThreePiecesInLine stamp: 'fr 11/1/2020 22:10:26'!
PASSED!

!testRun: #TerniLapilliTests #test37OCanNotPutAfterGameIsOver stamp: 'fr 11/1/2020 22:10:26'!
PASSED!

!testRun: #TerniLapilliTests #test38XCanNotMoveAfterGameIsOver stamp: 'fr 11/1/2020 22:10:26'!
PASSED!

!testRun: #TerniLapilliTests #test39OCanNotMoveAfterGameIsOver stamp: 'fr 11/1/2020 22:10:26'!
PASSED!

!testRun: #TerniLapilliTests #test40ItIsNoOnesTurnAfterGameIsOver stamp: 'fr 11/1/2020 22:10:26'!
PASSED!

!methodRemoval: TerniLapilli #validatePositions:andRemoveO: stamp: 'fr 11/1/2020 22:10:32'!
validatePositions: newPosition andRemoveO: currentPosition.
	
	self failIfTooFar: newPosition orOutOfBounds: currentPosition.
	self removeOPosition: currentPosition.!

!methodRemoval: TerniLapilli #validatePositions:andRemoveX: stamp: 'fr 11/1/2020 22:10:34'!
validatePositions: newPosition andRemoveX: currentPosition.
	
	self failIfTooFar: newPosition orOutOfBounds: currentPosition.
	self removeXPosition: currentPosition.!
!TerniLapilli methodsFor: 'private - state safe actions' stamp: 'fr 11/1/2020 22:11:38'!
updateState

	^ state _ TerniLapilliState isFor: self! !
!TerniLapilli methodsFor: 'private - state safe actions' stamp: 'fr 11/1/2020 22:11:38' prior: 50886610!
validate: aPosition andAddFor: aPlayerId

	self failIfInvalidDestination: aPosition.
	(self positionsFor: aPlayerId) add: aPosition.
	self updateState
	
! !

!methodRemoval: TerniLapilli #removeOPosition: stamp: 'fr 11/1/2020 22:11:53'!
removeOPosition: currentPosition

	^ (self positionsFor: #O) remove: currentPosition ifAbsent: [self positionNotUnderPlayerControl]!

!methodRemoval: TerniLapilli #removeXPosition: stamp: 'fr 11/1/2020 22:11:55'!
removeXPosition: currentPosition

	^ (self positionsFor: #X) remove: currentPosition ifAbsent: [self positionNotUnderPlayerControl]!

!testRun: #TerniLapilliTests #test01XPlaysFirstAndOAfter stamp: 'fr 11/1/2020 22:12:15'!
PASSED!

!testRun: #TerniLapilliTests #test02OPlaysSecondAndXAfter stamp: 'fr 11/1/2020 22:12:15'!
PASSED!

!testRun: #TerniLapilliTests #test03ODoesNotPlayFirst stamp: 'fr 11/1/2020 22:12:15'!
PASSED!

!testRun: #TerniLapilliTests #test04APlayerCanNotPlayTwoTimesInARow stamp: 'fr 11/1/2020 22:12:15'!
PASSED!

!testRun: #TerniLapilliTests #test05XPieceIsWhereHePutsIt stamp: 'fr 11/1/2020 22:12:15'!
PASSED!

!testRun: #TerniLapilliTests #test06OPieceIsWhereHePutsIt stamp: 'fr 11/1/2020 22:12:15'!
PASSED!

!testRun: #TerniLapilliTests #test07XPieceIsNotWhereHeDoesNotPutIt stamp: 'fr 11/1/2020 22:12:15'!
PASSED!

!testRun: #TerniLapilliTests #test08OPieceIsNotWhereHeDoesNotPutIt stamp: 'fr 11/1/2020 22:12:15'!
PASSED!

!testRun: #TerniLapilliTests #test09XCanPutMoreThanOnePieceCorrectly stamp: 'fr 11/1/2020 22:12:15'!
PASSED!

!testRun: #TerniLapilliTests #test10OCanPutMoreThanOnePieceCorrectly stamp: 'fr 11/1/2020 22:12:15'!
PASSED!

!testRun: #TerniLapilliTests #test11OCanNotPutAPieceInAnOccupiedPosition stamp: 'fr 11/1/2020 22:12:15'!
PASSED!

!testRun: #TerniLapilliTests #test12XCanNotPutAPieceInAnOccupiedPosition stamp: 'fr 11/1/2020 22:12:15'!
PASSED!

!testRun: #TerniLapilliTests #test13XCanNotPutAPieceOutOfBounds stamp: 'fr 11/1/2020 22:12:15'!
PASSED!

!testRun: #TerniLapilliTests #test14OCanNotPutAPieceOutOfBounds stamp: 'fr 11/1/2020 22:12:15'!
PASSED!

!testRun: #TerniLapilliTests #test15XCanNotPutMoreThanThreePieces stamp: 'fr 11/1/2020 22:12:15'!
PASSED!

!testRun: #TerniLapilliTests #test16OCanNotPutMoreThanThreePieces stamp: 'fr 11/1/2020 22:12:15'!
PASSED!

!testRun: #TerniLapilliTests #test17WhenXMovesAPieceItIsAtTheNewPositionAndNotAtThePreviousOne stamp: 'fr 11/1/2020 22:12:15'!
PASSED!

!testRun: #TerniLapilliTests #test18WhenOMovesAPieceItIsAtTheNewPositionAndNotAtThePreviousOne stamp: 'fr 11/1/2020 22:12:15'!
PASSED!

!testRun: #TerniLapilliTests #test19XCanNotMoveBeforeAddingThreePieces stamp: 'fr 11/1/2020 22:12:15'!
PASSED!

!testRun: #TerniLapilliTests #test20OCanNotMoveBeforeAddingThreePieces stamp: 'fr 11/1/2020 22:12:15'!
PASSED!

!testRun: #TerniLapilliTests #test21XCanNotMoveFromAPositionThatIsNotUnderHisControl stamp: 'fr 11/1/2020 22:12:15'!
PASSED!

!testRun: #TerniLapilliTests #test22OCanNotMoveFromAPositionThatIsNotUnderHisControl stamp: 'fr 11/1/2020 22:12:15'!
PASSED!

!testRun: #TerniLapilliTests #test23XCanNotMoveFromAnOutOfBoundsPosition stamp: 'fr 11/1/2020 22:12:15'!
PASSED!

!testRun: #TerniLapilliTests #test24OCanNotMoveFromAnOutOfBoundsPosition stamp: 'fr 11/1/2020 22:12:15'!
PASSED!

!testRun: #TerniLapilliTests #test25XCanNotMoveToAnOutOfBoundsPosition stamp: 'fr 11/1/2020 22:12:15'!
PASSED!

!testRun: #TerniLapilliTests #test26OCanNotMoveToAnOutOfBoundsPosition stamp: 'fr 11/1/2020 22:12:15'!
PASSED!

!testRun: #TerniLapilliTests #test27XCanNotMoveToAnOccupiedPosition stamp: 'fr 11/1/2020 22:12:15'!
PASSED!

!testRun: #TerniLapilliTests #test28OCanNotMoveToAnOccupiedPosition stamp: 'fr 11/1/2020 22:12:15'!
PASSED!

!testRun: #TerniLapilliTests #test29XCanNotMoveBetweenPositionsThatAreMoreThanOnePlaceAfar stamp: 'fr 11/1/2020 22:12:15'!
PASSED!

!testRun: #TerniLapilliTests #test30OCanNotMoveBetweenPositionsThatAreMoreThanOnePlaceAfar stamp: 'fr 11/1/2020 22:12:15'!
PASSED!

!testRun: #TerniLapilliTests #test31NoPlayerHasWonIfNoneOfThemHasThreePiecesInLine stamp: 'fr 11/1/2020 22:12:15'!
PASSED!

!testRun: #TerniLapilliTests #test32XWinsWhenHeGetsThreePiecesInTheSameRow stamp: 'fr 11/1/2020 22:12:15'!
PASSED!

!testRun: #TerniLapilliTests #test33XWinsWhenHeGetsThreePiecesInTheSameColumn stamp: 'fr 11/1/2020 22:12:15'!
PASSED!

!testRun: #TerniLapilliTests #test34XWinsWhenHeGetsThreePiecesInTheMainDiagonal stamp: 'fr 11/1/2020 22:12:15'!
PASSED!

!testRun: #TerniLapilliTests #test35XWinsWhenHeGetsThreePiecesInTheSecondaryDiagonal stamp: 'fr 11/1/2020 22:12:15'!
PASSED!

!testRun: #TerniLapilliTests #test36OWinsWhenHeGetsThreePiecesInLine stamp: 'fr 11/1/2020 22:12:15'!
PASSED!

!testRun: #TerniLapilliTests #test37OCanNotPutAfterGameIsOver stamp: 'fr 11/1/2020 22:12:15'!
PASSED!

!testRun: #TerniLapilliTests #test38XCanNotMoveAfterGameIsOver stamp: 'fr 11/1/2020 22:12:15'!
PASSED!

!testRun: #TerniLapilliTests #test39OCanNotMoveAfterGameIsOver stamp: 'fr 11/1/2020 22:12:15'!
PASSED!

!testRun: #TerniLapilliTests #test40ItIsNoOnesTurnAfterGameIsOver stamp: 'fr 11/1/2020 22:12:15'!
PASSED!
!TerniLapilli methodsFor: 'private - game state' stamp: 'fr 11/1/2020 22:12:28' prior: 50887560!
updateState

	state _ TerniLapilliState isFor: self! !
!TerniLapilli methodsFor: 'private' stamp: 'fr 11/1/2020 22:13:32'!
coordinateIsValid: aCoordinate

	^ aCoordinate between: 1 and: 3! !
!TerniLapilli methodsFor: 'private' stamp: 'fr 11/1/2020 22:13:46' prior: 50880337!
firstCoordinateIsValid: aPosition

	^ self coordinateIsValid: aPosition x! !
!TerniLapilli methodsFor: 'private' stamp: 'fr 11/1/2020 22:13:55' prior: 50880351!
secondCoordinateIsValid: aPosition

	^ self coordinateIsValid: aPosition y! !

----SNAPSHOT----(1 November 2020 22:14:30) CuisUniversity-4384.image priorSource: 17671522!
!TerniLapilliState class methodsFor: 'instance creation' stamp: 'fr 11/2/2020 02:32:09'!
fork: aTerniLapilli
	
	^self new initializeFor: aTerniLapilli ! !
!TerniLapilli methodsFor: 'as yet unclassified' stamp: 'fr 11/2/2020 02:32:09' prior: 50871133 overrides: 16896425!
initialize 
	
	state _ XAdding fork: self.
	positions _ Dictionary new.
	positions add: (#X -> Set new).	
	positions add: (#O -> Set new).	
! !
!TerniLapilliState class methodsFor: 'as yet unclassified' stamp: 'fr 11/2/2020 02:32:09' prior: 50875467!
isFor: aTerniLapilli
	
	^(self subclasses detect: [:aTerniLapilliState | aTerniLapilliState canHandle: aTerniLapilli]) fork: aTerniLapilli! !

!methodRemoval: TerniLapilliState class #for: stamp: 'fr 11/2/2020 02:32:09'!
for: aTerniLapilli
	
	^self new initializeFor: aTerniLapilli !

!testRun: #TerniLapilliTests #test01XPlaysFirstAndOAfter stamp: 'fr 11/2/2020 02:32:11'!
PASSED!

!testRun: #TerniLapilliTests #test02OPlaysSecondAndXAfter stamp: 'fr 11/2/2020 02:32:11'!
PASSED!

!testRun: #TerniLapilliTests #test03ODoesNotPlayFirst stamp: 'fr 11/2/2020 02:32:11'!
PASSED!

!testRun: #TerniLapilliTests #test04APlayerCanNotPlayTwoTimesInARow stamp: 'fr 11/2/2020 02:32:11'!
PASSED!

!testRun: #TerniLapilliTests #test05XPieceIsWhereHePutsIt stamp: 'fr 11/2/2020 02:32:11'!
PASSED!

!testRun: #TerniLapilliTests #test06OPieceIsWhereHePutsIt stamp: 'fr 11/2/2020 02:32:11'!
PASSED!

!testRun: #TerniLapilliTests #test07XPieceIsNotWhereHeDoesNotPutIt stamp: 'fr 11/2/2020 02:32:11'!
PASSED!

!testRun: #TerniLapilliTests #test08OPieceIsNotWhereHeDoesNotPutIt stamp: 'fr 11/2/2020 02:32:11'!
PASSED!

!testRun: #TerniLapilliTests #test09XCanPutMoreThanOnePieceCorrectly stamp: 'fr 11/2/2020 02:32:11'!
PASSED!

!testRun: #TerniLapilliTests #test10OCanPutMoreThanOnePieceCorrectly stamp: 'fr 11/2/2020 02:32:11'!
PASSED!

!testRun: #TerniLapilliTests #test11OCanNotPutAPieceInAnOccupiedPosition stamp: 'fr 11/2/2020 02:32:11'!
PASSED!

!testRun: #TerniLapilliTests #test12XCanNotPutAPieceInAnOccupiedPosition stamp: 'fr 11/2/2020 02:32:11'!
PASSED!

!testRun: #TerniLapilliTests #test13XCanNotPutAPieceOutOfBounds stamp: 'fr 11/2/2020 02:32:11'!
PASSED!

!testRun: #TerniLapilliTests #test14OCanNotPutAPieceOutOfBounds stamp: 'fr 11/2/2020 02:32:11'!
PASSED!

!testRun: #TerniLapilliTests #test15XCanNotPutMoreThanThreePieces stamp: 'fr 11/2/2020 02:32:11'!
PASSED!

!testRun: #TerniLapilliTests #test16OCanNotPutMoreThanThreePieces stamp: 'fr 11/2/2020 02:32:11'!
PASSED!

!testRun: #TerniLapilliTests #test17WhenXMovesAPieceItIsAtTheNewPositionAndNotAtThePreviousOne stamp: 'fr 11/2/2020 02:32:11'!
PASSED!

!testRun: #TerniLapilliTests #test18WhenOMovesAPieceItIsAtTheNewPositionAndNotAtThePreviousOne stamp: 'fr 11/2/2020 02:32:11'!
PASSED!

!testRun: #TerniLapilliTests #test19XCanNotMoveBeforeAddingThreePieces stamp: 'fr 11/2/2020 02:32:11'!
PASSED!

!testRun: #TerniLapilliTests #test20OCanNotMoveBeforeAddingThreePieces stamp: 'fr 11/2/2020 02:32:11'!
PASSED!

!testRun: #TerniLapilliTests #test21XCanNotMoveFromAPositionThatIsNotUnderHisControl stamp: 'fr 11/2/2020 02:32:11'!
PASSED!

!testRun: #TerniLapilliTests #test22OCanNotMoveFromAPositionThatIsNotUnderHisControl stamp: 'fr 11/2/2020 02:32:11'!
PASSED!

!testRun: #TerniLapilliTests #test23XCanNotMoveFromAnOutOfBoundsPosition stamp: 'fr 11/2/2020 02:32:11'!
PASSED!

!testRun: #TerniLapilliTests #test24OCanNotMoveFromAnOutOfBoundsPosition stamp: 'fr 11/2/2020 02:32:11'!
PASSED!

!testRun: #TerniLapilliTests #test25XCanNotMoveToAnOutOfBoundsPosition stamp: 'fr 11/2/2020 02:32:11'!
PASSED!

!testRun: #TerniLapilliTests #test26OCanNotMoveToAnOutOfBoundsPosition stamp: 'fr 11/2/2020 02:32:11'!
PASSED!

!testRun: #TerniLapilliTests #test27XCanNotMoveToAnOccupiedPosition stamp: 'fr 11/2/2020 02:32:11'!
PASSED!

!testRun: #TerniLapilliTests #test28OCanNotMoveToAnOccupiedPosition stamp: 'fr 11/2/2020 02:32:11'!
PASSED!

!testRun: #TerniLapilliTests #test29XCanNotMoveBetweenPositionsThatAreMoreThanOnePlaceAfar stamp: 'fr 11/2/2020 02:32:11'!
PASSED!

!testRun: #TerniLapilliTests #test30OCanNotMoveBetweenPositionsThatAreMoreThanOnePlaceAfar stamp: 'fr 11/2/2020 02:32:11'!
PASSED!

!testRun: #TerniLapilliTests #test31NoPlayerHasWonIfNoneOfThemHasThreePiecesInLine stamp: 'fr 11/2/2020 02:32:11'!
PASSED!

!testRun: #TerniLapilliTests #test32XWinsWhenHeGetsThreePiecesInTheSameRow stamp: 'fr 11/2/2020 02:32:11'!
PASSED!

!testRun: #TerniLapilliTests #test33XWinsWhenHeGetsThreePiecesInTheSameColumn stamp: 'fr 11/2/2020 02:32:11'!
PASSED!

!testRun: #TerniLapilliTests #test34XWinsWhenHeGetsThreePiecesInTheMainDiagonal stamp: 'fr 11/2/2020 02:32:11'!
PASSED!

!testRun: #TerniLapilliTests #test35XWinsWhenHeGetsThreePiecesInTheSecondaryDiagonal stamp: 'fr 11/2/2020 02:32:11'!
PASSED!

!testRun: #TerniLapilliTests #test36OWinsWhenHeGetsThreePiecesInLine stamp: 'fr 11/2/2020 02:32:11'!
PASSED!

!testRun: #TerniLapilliTests #test37OCanNotPutAfterGameIsOver stamp: 'fr 11/2/2020 02:32:11'!
PASSED!

!testRun: #TerniLapilliTests #test38XCanNotMoveAfterGameIsOver stamp: 'fr 11/2/2020 02:32:11'!
PASSED!

!testRun: #TerniLapilliTests #test39OCanNotMoveAfterGameIsOver stamp: 'fr 11/2/2020 02:32:11'!
PASSED!

!testRun: #TerniLapilliTests #test40ItIsNoOnesTurnAfterGameIsOver stamp: 'fr 11/2/2020 02:32:11'!
PASSED!
!TerniLapilliState class methodsFor: 'instance creation' stamp: 'fr 11/2/2020 02:32:23'!
for: aTerniLapilli
	
	^(self subclasses detect: [:aTerniLapilliState | aTerniLapilliState canHandle: aTerniLapilli]) fork: aTerniLapilli! !
!TerniLapilli methodsFor: 'as yet unclassified' stamp: 'fr 11/2/2020 02:32:23' prior: 50887728!
updateState

	state _ TerniLapilliState for: self! !

!methodRemoval: TerniLapilliState class #isFor: stamp: 'fr 11/2/2020 02:32:23'!
isFor: aTerniLapilli
	
	^(self subclasses detect: [:aTerniLapilliState | aTerniLapilliState canHandle: aTerniLapilli]) fork: aTerniLapilli!
!TerniLapilliState class methodsFor: 'instance creation' stamp: 'fr 11/2/2020 02:32:35'!
isFor: aTerniLapilli
	
	^self new initializeFor: aTerniLapilli ! !
!TerniLapilliState class methodsFor: 'as yet unclassified' stamp: 'fr 11/2/2020 02:32:35' prior: 50887919!
for: aTerniLapilli
	
	^(self subclasses detect: [:aTerniLapilliState | aTerniLapilliState canHandle: aTerniLapilli]) isFor: aTerniLapilli! !
!TerniLapilli methodsFor: 'as yet unclassified' stamp: 'fr 11/2/2020 02:32:35' prior: 50887758 overrides: 16896425!
initialize 
	
	state _ XAdding isFor: self.
	positions _ Dictionary new.
	positions add: (#X -> Set new).	
	positions add: (#O -> Set new).	
! !

!methodRemoval: TerniLapilliState class #fork: stamp: 'fr 11/2/2020 02:32:35'!
fork: aTerniLapilli
	
	^self new initializeFor: aTerniLapilli !

game _ TerniLapilli new.!

game putXAt: 1@1. !

game putOAt: 2@1. !

game putXAt: 1@2. !

game putOAt: 2@2.!

game putXAt: 3@3.!

game putOAt: 3@1.!

game moveXFrom: 3@3 to: 1@3. !

game moveXFrom: 3@3 to: 2@3. !

game putXAt: 1@1. 
game putOAt: 2@1. 
game putXAt: 1@2. 
game putOAt: 2@2.
game putXAt: 3@3.
game putOAt: 3@1.!

game _ TerniLapilli new.

game putXAt: 1@1. 
game putOAt: 2@1. 
game putXAt: 1@2. 
game putOAt: 2@2.
game putXAt: 3@3.
game putOAt: 3@1.!

game _ TerniLapilli new.

game putXAt: 1@1. 
game putOAt: 2@1. 
game putXAt: 1@2. 
game putOAt: 2@2.
game putXAt: 2@3.
game putOAt: 3@1.!

game moveXFrom: 3@3 to: 2@3. !

game moveXFrom: 2@3 to: 2@3. !

game _ TerniLapilli new.

game putXAt: 1@1. 
game putOAt: 2@1. 
game putXAt: 1@2. 
game putOAt: 2@2.
game putXAt: 2@3.
game putOAt: 3@1.!

game moveXFrom: 2@3 to: 1@3. !

game moveXFrom: 1@3 to: 2@3. !

game _ TerniLapilli new.

game putXAt: 1@1. 
game putOAt: 2@1. 
game putXAt: 1@2. 
game putOAt: 2@2.
game putXAt: 2@3.
game putOAt: 3@1.
game moveXFrom: 2@3 to: 3@3.!

game moveXFrom: 3@3 to: 2@3. !

game moveXFrom: 3@3 to: 2@3. !

game _ TerniLapilli new.

game putXAt: 1@1. 
game putOAt: 2@1. 
game putXAt: 1@2. 
game putOAt: 2@2.
game putXAt: 2@3.
game putOAt: 3@1.
game moveXFrom: 2@3 to: 3@3. !

game moveXFrom: 3@3 to: 2@3. !

game _ TerniLapilli new.

game putXAt: 1@1. 
game putOAt: 2@1. 
game putXAt: 1@2. 
game putOAt: 2@2.
game putXAt: 2@3.
game putOAt: 3@1.
game moveXFrom: 2@3 to: 2@3. 
!
!TerniLapilli class methodsFor: 'error message descriptions' stamp: 'fr 11/2/2020 02:45:03'!
positionIsNotOnePlaceAfarErrorDescription
	
	^'Destination is more than one place afar'! !
!TerniLapilliTests methodsFor: 'as yet unclassified' stamp: 'fr 11/2/2020 02:45:03' prior: 50882961!
test30OCanNotMoveBetweenPositionsThatAreMoreThanOnePlaceAfar

	| terniLapilli |
	terniLapilli _ TerniLapilli new.
		
	self  should: [			terniLapilli putXAt: 1 @ 1 
						 ;putOAt: 2 @ 1
						 ;putXAt: 1 @ 2
						 ;putOAt: 2 @ 2
						 ;putXAt: 3 @ 1
						 ;putOAt: 1 @ 3
						 ;moveXFrom: 3@1 to: 3@2
						 ;moveOFrom: 1@3 to: 3@3.] 
		raise: Error 
		withMessageText: TerniLapilli positionIsNotOnePlaceAfarErrorDescription ! !
!TerniLapilliTests methodsFor: 'as yet unclassified' stamp: 'fr 11/2/2020 02:45:03' prior: 50882928!
test29XCanNotMoveBetweenPositionsThatAreMoreThanOnePlaceAfar

	| terniLapilli |
	terniLapilli _ TerniLapilli new.
		
	self  should: [			terniLapilli putXAt: 1 @ 1 
						 ;putOAt: 2 @ 1
						 ;putXAt: 1 @ 2
						 ;putOAt: 2 @ 2
						 ;putXAt: 3 @ 1
						 ;putOAt: 1 @ 3
						 ;moveXFrom: 3@1 to: 3@3.] 
		raise: Error 
		withMessageText: TerniLapilli positionIsNotOnePlaceAfarErrorDescription ! !
!TerniLapilli methodsFor: 'as yet unclassified' stamp: 'fr 11/2/2020 02:45:03' prior: 50880310!
canNotMoveMoreThanOnePlaceAfarError

	^ self error: self class positionIsNotOnePlaceAfarErrorDescription! !

!methodRemoval: TerniLapilli class #canNotMoveToPositionMoreThanOnePlaceAfarErrorDescription stamp: 'fr 11/2/2020 02:45:03'!
canNotMoveToPositionMoreThanOnePlaceAfarErrorDescription
	
	^'Destination is more than one place afar'!
!TerniLapilli class methodsFor: 'error message descriptions' stamp: 'fr 11/2/2020 02:45:31' prior: 50888013!
positionIsNotOnePlaceAfarErrorDescription
	
	^'Destination is not one place afar'! !

game _ TerniLapilli new.

game putXAt: 1@1. 
game putOAt: 2@1. 
game putXAt: 1@2. 
game putOAt: 2@2.
game putXAt: 2@3.
game putOAt: 3@1.
game moveXFrom: 2@3 to: 2@3. !
!TerniLapilli class methodsFor: 'error message descriptions' stamp: 'fr 11/2/2020 02:49:10' prior: 50888066!
positionIsNotOnePlaceAfarErrorDescription
	
	^'Destination is not reachable from this departure position'! !

!testRun: #TerniLapilliTests #test01XPlaysFirstAndOAfter stamp: 'fr 11/2/2020 02:49:15'!
PASSED!

!testRun: #TerniLapilliTests #test02OPlaysSecondAndXAfter stamp: 'fr 11/2/2020 02:49:15'!
PASSED!

!testRun: #TerniLapilliTests #test03ODoesNotPlayFirst stamp: 'fr 11/2/2020 02:49:15'!
PASSED!

!testRun: #TerniLapilliTests #test04APlayerCanNotPlayTwoTimesInARow stamp: 'fr 11/2/2020 02:49:15'!
PASSED!

!testRun: #TerniLapilliTests #test05XPieceIsWhereHePutsIt stamp: 'fr 11/2/2020 02:49:15'!
PASSED!

!testRun: #TerniLapilliTests #test06OPieceIsWhereHePutsIt stamp: 'fr 11/2/2020 02:49:15'!
PASSED!

!testRun: #TerniLapilliTests #test07XPieceIsNotWhereHeDoesNotPutIt stamp: 'fr 11/2/2020 02:49:15'!
PASSED!

!testRun: #TerniLapilliTests #test08OPieceIsNotWhereHeDoesNotPutIt stamp: 'fr 11/2/2020 02:49:15'!
PASSED!

!testRun: #TerniLapilliTests #test09XCanPutMoreThanOnePieceCorrectly stamp: 'fr 11/2/2020 02:49:15'!
PASSED!

!testRun: #TerniLapilliTests #test10OCanPutMoreThanOnePieceCorrectly stamp: 'fr 11/2/2020 02:49:15'!
PASSED!

!testRun: #TerniLapilliTests #test11OCanNotPutAPieceInAnOccupiedPosition stamp: 'fr 11/2/2020 02:49:15'!
PASSED!

!testRun: #TerniLapilliTests #test12XCanNotPutAPieceInAnOccupiedPosition stamp: 'fr 11/2/2020 02:49:15'!
PASSED!

!testRun: #TerniLapilliTests #test13XCanNotPutAPieceOutOfBounds stamp: 'fr 11/2/2020 02:49:15'!
PASSED!

!testRun: #TerniLapilliTests #test14OCanNotPutAPieceOutOfBounds stamp: 'fr 11/2/2020 02:49:15'!
PASSED!

!testRun: #TerniLapilliTests #test15XCanNotPutMoreThanThreePieces stamp: 'fr 11/2/2020 02:49:15'!
PASSED!

!testRun: #TerniLapilliTests #test16OCanNotPutMoreThanThreePieces stamp: 'fr 11/2/2020 02:49:15'!
PASSED!

!testRun: #TerniLapilliTests #test17WhenXMovesAPieceItIsAtTheNewPositionAndNotAtThePreviousOne stamp: 'fr 11/2/2020 02:49:15'!
PASSED!

!testRun: #TerniLapilliTests #test18WhenOMovesAPieceItIsAtTheNewPositionAndNotAtThePreviousOne stamp: 'fr 11/2/2020 02:49:15'!
PASSED!

!testRun: #TerniLapilliTests #test19XCanNotMoveBeforeAddingThreePieces stamp: 'fr 11/2/2020 02:49:15'!
PASSED!

!testRun: #TerniLapilliTests #test20OCanNotMoveBeforeAddingThreePieces stamp: 'fr 11/2/2020 02:49:15'!
PASSED!

!testRun: #TerniLapilliTests #test21XCanNotMoveFromAPositionThatIsNotUnderHisControl stamp: 'fr 11/2/2020 02:49:15'!
PASSED!

!testRun: #TerniLapilliTests #test22OCanNotMoveFromAPositionThatIsNotUnderHisControl stamp: 'fr 11/2/2020 02:49:15'!
PASSED!

!testRun: #TerniLapilliTests #test23XCanNotMoveFromAnOutOfBoundsPosition stamp: 'fr 11/2/2020 02:49:15'!
PASSED!

!testRun: #TerniLapilliTests #test24OCanNotMoveFromAnOutOfBoundsPosition stamp: 'fr 11/2/2020 02:49:15'!
PASSED!

!testRun: #TerniLapilliTests #test25XCanNotMoveToAnOutOfBoundsPosition stamp: 'fr 11/2/2020 02:49:15'!
PASSED!

!testRun: #TerniLapilliTests #test26OCanNotMoveToAnOutOfBoundsPosition stamp: 'fr 11/2/2020 02:49:15'!
PASSED!

!testRun: #TerniLapilliTests #test27XCanNotMoveToAnOccupiedPosition stamp: 'fr 11/2/2020 02:49:15'!
PASSED!

!testRun: #TerniLapilliTests #test28OCanNotMoveToAnOccupiedPosition stamp: 'fr 11/2/2020 02:49:15'!
PASSED!

!testRun: #TerniLapilliTests #test29XCanNotMoveBetweenPositionsThatAreMoreThanOnePlaceAfar stamp: 'fr 11/2/2020 02:49:15'!
PASSED!

!testRun: #TerniLapilliTests #test30OCanNotMoveBetweenPositionsThatAreMoreThanOnePlaceAfar stamp: 'fr 11/2/2020 02:49:15'!
PASSED!

!testRun: #TerniLapilliTests #test31NoPlayerHasWonIfNoneOfThemHasThreePiecesInLine stamp: 'fr 11/2/2020 02:49:15'!
PASSED!

!testRun: #TerniLapilliTests #test32XWinsWhenHeGetsThreePiecesInTheSameRow stamp: 'fr 11/2/2020 02:49:15'!
PASSED!

!testRun: #TerniLapilliTests #test33XWinsWhenHeGetsThreePiecesInTheSameColumn stamp: 'fr 11/2/2020 02:49:15'!
PASSED!

!testRun: #TerniLapilliTests #test34XWinsWhenHeGetsThreePiecesInTheMainDiagonal stamp: 'fr 11/2/2020 02:49:15'!
PASSED!

!testRun: #TerniLapilliTests #test35XWinsWhenHeGetsThreePiecesInTheSecondaryDiagonal stamp: 'fr 11/2/2020 02:49:15'!
PASSED!

!testRun: #TerniLapilliTests #test36OWinsWhenHeGetsThreePiecesInLine stamp: 'fr 11/2/2020 02:49:15'!
PASSED!

!testRun: #TerniLapilliTests #test37OCanNotPutAfterGameIsOver stamp: 'fr 11/2/2020 02:49:15'!
PASSED!

!testRun: #TerniLapilliTests #test38XCanNotMoveAfterGameIsOver stamp: 'fr 11/2/2020 02:49:15'!
PASSED!

!testRun: #TerniLapilliTests #test39OCanNotMoveAfterGameIsOver stamp: 'fr 11/2/2020 02:49:15'!
PASSED!

!testRun: #TerniLapilliTests #test40ItIsNoOnesTurnAfterGameIsOver stamp: 'fr 11/2/2020 02:49:15'!
PASSED!

!testRun: #TerniLapilliTests #test01XPlaysFirstAndOAfter stamp: 'fr 11/2/2020 02:49:16'!
PASSED!

!testRun: #TerniLapilliTests #test02OPlaysSecondAndXAfter stamp: 'fr 11/2/2020 02:49:16'!
PASSED!

!testRun: #TerniLapilliTests #test03ODoesNotPlayFirst stamp: 'fr 11/2/2020 02:49:16'!
PASSED!

!testRun: #TerniLapilliTests #test04APlayerCanNotPlayTwoTimesInARow stamp: 'fr 11/2/2020 02:49:16'!
PASSED!

!testRun: #TerniLapilliTests #test05XPieceIsWhereHePutsIt stamp: 'fr 11/2/2020 02:49:16'!
PASSED!

!testRun: #TerniLapilliTests #test06OPieceIsWhereHePutsIt stamp: 'fr 11/2/2020 02:49:16'!
PASSED!

!testRun: #TerniLapilliTests #test07XPieceIsNotWhereHeDoesNotPutIt stamp: 'fr 11/2/2020 02:49:16'!
PASSED!

!testRun: #TerniLapilliTests #test08OPieceIsNotWhereHeDoesNotPutIt stamp: 'fr 11/2/2020 02:49:16'!
PASSED!

!testRun: #TerniLapilliTests #test09XCanPutMoreThanOnePieceCorrectly stamp: 'fr 11/2/2020 02:49:16'!
PASSED!

!testRun: #TerniLapilliTests #test10OCanPutMoreThanOnePieceCorrectly stamp: 'fr 11/2/2020 02:49:16'!
PASSED!

!testRun: #TerniLapilliTests #test11OCanNotPutAPieceInAnOccupiedPosition stamp: 'fr 11/2/2020 02:49:16'!
PASSED!

!testRun: #TerniLapilliTests #test12XCanNotPutAPieceInAnOccupiedPosition stamp: 'fr 11/2/2020 02:49:16'!
PASSED!

!testRun: #TerniLapilliTests #test13XCanNotPutAPieceOutOfBounds stamp: 'fr 11/2/2020 02:49:16'!
PASSED!

!testRun: #TerniLapilliTests #test14OCanNotPutAPieceOutOfBounds stamp: 'fr 11/2/2020 02:49:16'!
PASSED!

!testRun: #TerniLapilliTests #test15XCanNotPutMoreThanThreePieces stamp: 'fr 11/2/2020 02:49:16'!
PASSED!

!testRun: #TerniLapilliTests #test16OCanNotPutMoreThanThreePieces stamp: 'fr 11/2/2020 02:49:16'!
PASSED!

!testRun: #TerniLapilliTests #test17WhenXMovesAPieceItIsAtTheNewPositionAndNotAtThePreviousOne stamp: 'fr 11/2/2020 02:49:16'!
PASSED!

!testRun: #TerniLapilliTests #test18WhenOMovesAPieceItIsAtTheNewPositionAndNotAtThePreviousOne stamp: 'fr 11/2/2020 02:49:16'!
PASSED!

!testRun: #TerniLapilliTests #test19XCanNotMoveBeforeAddingThreePieces stamp: 'fr 11/2/2020 02:49:16'!
PASSED!

!testRun: #TerniLapilliTests #test20OCanNotMoveBeforeAddingThreePieces stamp: 'fr 11/2/2020 02:49:16'!
PASSED!

!testRun: #TerniLapilliTests #test21XCanNotMoveFromAPositionThatIsNotUnderHisControl stamp: 'fr 11/2/2020 02:49:16'!
PASSED!

!testRun: #TerniLapilliTests #test22OCanNotMoveFromAPositionThatIsNotUnderHisControl stamp: 'fr 11/2/2020 02:49:16'!
PASSED!

!testRun: #TerniLapilliTests #test23XCanNotMoveFromAnOutOfBoundsPosition stamp: 'fr 11/2/2020 02:49:16'!
PASSED!

!testRun: #TerniLapilliTests #test24OCanNotMoveFromAnOutOfBoundsPosition stamp: 'fr 11/2/2020 02:49:16'!
PASSED!

!testRun: #TerniLapilliTests #test25XCanNotMoveToAnOutOfBoundsPosition stamp: 'fr 11/2/2020 02:49:16'!
PASSED!

!testRun: #TerniLapilliTests #test26OCanNotMoveToAnOutOfBoundsPosition stamp: 'fr 11/2/2020 02:49:16'!
PASSED!

!testRun: #TerniLapilliTests #test27XCanNotMoveToAnOccupiedPosition stamp: 'fr 11/2/2020 02:49:16'!
PASSED!

!testRun: #TerniLapilliTests #test28OCanNotMoveToAnOccupiedPosition stamp: 'fr 11/2/2020 02:49:16'!
PASSED!

!testRun: #TerniLapilliTests #test29XCanNotMoveBetweenPositionsThatAreMoreThanOnePlaceAfar stamp: 'fr 11/2/2020 02:49:16'!
PASSED!

!testRun: #TerniLapilliTests #test30OCanNotMoveBetweenPositionsThatAreMoreThanOnePlaceAfar stamp: 'fr 11/2/2020 02:49:16'!
PASSED!

!testRun: #TerniLapilliTests #test31NoPlayerHasWonIfNoneOfThemHasThreePiecesInLine stamp: 'fr 11/2/2020 02:49:16'!
PASSED!

!testRun: #TerniLapilliTests #test32XWinsWhenHeGetsThreePiecesInTheSameRow stamp: 'fr 11/2/2020 02:49:16'!
PASSED!

!testRun: #TerniLapilliTests #test33XWinsWhenHeGetsThreePiecesInTheSameColumn stamp: 'fr 11/2/2020 02:49:16'!
PASSED!

!testRun: #TerniLapilliTests #test34XWinsWhenHeGetsThreePiecesInTheMainDiagonal stamp: 'fr 11/2/2020 02:49:16'!
PASSED!

!testRun: #TerniLapilliTests #test35XWinsWhenHeGetsThreePiecesInTheSecondaryDiagonal stamp: 'fr 11/2/2020 02:49:16'!
PASSED!

!testRun: #TerniLapilliTests #test36OWinsWhenHeGetsThreePiecesInLine stamp: 'fr 11/2/2020 02:49:16'!
PASSED!

!testRun: #TerniLapilliTests #test37OCanNotPutAfterGameIsOver stamp: 'fr 11/2/2020 02:49:16'!
PASSED!

!testRun: #TerniLapilliTests #test38XCanNotMoveAfterGameIsOver stamp: 'fr 11/2/2020 02:49:16'!
PASSED!

!testRun: #TerniLapilliTests #test39OCanNotMoveAfterGameIsOver stamp: 'fr 11/2/2020 02:49:16'!
PASSED!

!testRun: #TerniLapilliTests #test40ItIsNoOnesTurnAfterGameIsOver stamp: 'fr 11/2/2020 02:49:16'!
PASSED!

!testRun: #TerniLapilliTests #test01XPlaysFirstAndOAfter stamp: 'fr 11/2/2020 02:49:18'!
PASSED!

!testRun: #TerniLapilliTests #test02OPlaysSecondAndXAfter stamp: 'fr 11/2/2020 02:49:18'!
PASSED!

!testRun: #TerniLapilliTests #test03ODoesNotPlayFirst stamp: 'fr 11/2/2020 02:49:18'!
PASSED!

!testRun: #TerniLapilliTests #test04APlayerCanNotPlayTwoTimesInARow stamp: 'fr 11/2/2020 02:49:18'!
PASSED!

!testRun: #TerniLapilliTests #test05XPieceIsWhereHePutsIt stamp: 'fr 11/2/2020 02:49:18'!
PASSED!

!testRun: #TerniLapilliTests #test06OPieceIsWhereHePutsIt stamp: 'fr 11/2/2020 02:49:18'!
PASSED!

!testRun: #TerniLapilliTests #test07XPieceIsNotWhereHeDoesNotPutIt stamp: 'fr 11/2/2020 02:49:18'!
PASSED!

!testRun: #TerniLapilliTests #test08OPieceIsNotWhereHeDoesNotPutIt stamp: 'fr 11/2/2020 02:49:18'!
PASSED!

!testRun: #TerniLapilliTests #test09XCanPutMoreThanOnePieceCorrectly stamp: 'fr 11/2/2020 02:49:18'!
PASSED!

!testRun: #TerniLapilliTests #test10OCanPutMoreThanOnePieceCorrectly stamp: 'fr 11/2/2020 02:49:18'!
PASSED!

!testRun: #TerniLapilliTests #test11OCanNotPutAPieceInAnOccupiedPosition stamp: 'fr 11/2/2020 02:49:18'!
PASSED!

!testRun: #TerniLapilliTests #test12XCanNotPutAPieceInAnOccupiedPosition stamp: 'fr 11/2/2020 02:49:18'!
PASSED!

!testRun: #TerniLapilliTests #test13XCanNotPutAPieceOutOfBounds stamp: 'fr 11/2/2020 02:49:18'!
PASSED!

!testRun: #TerniLapilliTests #test14OCanNotPutAPieceOutOfBounds stamp: 'fr 11/2/2020 02:49:18'!
PASSED!

!testRun: #TerniLapilliTests #test15XCanNotPutMoreThanThreePieces stamp: 'fr 11/2/2020 02:49:18'!
PASSED!

!testRun: #TerniLapilliTests #test16OCanNotPutMoreThanThreePieces stamp: 'fr 11/2/2020 02:49:18'!
PASSED!

!testRun: #TerniLapilliTests #test17WhenXMovesAPieceItIsAtTheNewPositionAndNotAtThePreviousOne stamp: 'fr 11/2/2020 02:49:18'!
PASSED!

!testRun: #TerniLapilliTests #test18WhenOMovesAPieceItIsAtTheNewPositionAndNotAtThePreviousOne stamp: 'fr 11/2/2020 02:49:18'!
PASSED!

!testRun: #TerniLapilliTests #test19XCanNotMoveBeforeAddingThreePieces stamp: 'fr 11/2/2020 02:49:18'!
PASSED!

!testRun: #TerniLapilliTests #test20OCanNotMoveBeforeAddingThreePieces stamp: 'fr 11/2/2020 02:49:18'!
PASSED!

!testRun: #TerniLapilliTests #test21XCanNotMoveFromAPositionThatIsNotUnderHisControl stamp: 'fr 11/2/2020 02:49:18'!
PASSED!

!testRun: #TerniLapilliTests #test22OCanNotMoveFromAPositionThatIsNotUnderHisControl stamp: 'fr 11/2/2020 02:49:18'!
PASSED!

!testRun: #TerniLapilliTests #test23XCanNotMoveFromAnOutOfBoundsPosition stamp: 'fr 11/2/2020 02:49:18'!
PASSED!

!testRun: #TerniLapilliTests #test24OCanNotMoveFromAnOutOfBoundsPosition stamp: 'fr 11/2/2020 02:49:18'!
PASSED!

!testRun: #TerniLapilliTests #test25XCanNotMoveToAnOutOfBoundsPosition stamp: 'fr 11/2/2020 02:49:18'!
PASSED!

!testRun: #TerniLapilliTests #test26OCanNotMoveToAnOutOfBoundsPosition stamp: 'fr 11/2/2020 02:49:18'!
PASSED!

!testRun: #TerniLapilliTests #test27XCanNotMoveToAnOccupiedPosition stamp: 'fr 11/2/2020 02:49:18'!
PASSED!

!testRun: #TerniLapilliTests #test28OCanNotMoveToAnOccupiedPosition stamp: 'fr 11/2/2020 02:49:18'!
PASSED!

!testRun: #TerniLapilliTests #test29XCanNotMoveBetweenPositionsThatAreMoreThanOnePlaceAfar stamp: 'fr 11/2/2020 02:49:18'!
PASSED!

!testRun: #TerniLapilliTests #test30OCanNotMoveBetweenPositionsThatAreMoreThanOnePlaceAfar stamp: 'fr 11/2/2020 02:49:18'!
PASSED!

!testRun: #TerniLapilliTests #test31NoPlayerHasWonIfNoneOfThemHasThreePiecesInLine stamp: 'fr 11/2/2020 02:49:18'!
PASSED!

!testRun: #TerniLapilliTests #test32XWinsWhenHeGetsThreePiecesInTheSameRow stamp: 'fr 11/2/2020 02:49:18'!
PASSED!

!testRun: #TerniLapilliTests #test33XWinsWhenHeGetsThreePiecesInTheSameColumn stamp: 'fr 11/2/2020 02:49:18'!
PASSED!

!testRun: #TerniLapilliTests #test34XWinsWhenHeGetsThreePiecesInTheMainDiagonal stamp: 'fr 11/2/2020 02:49:18'!
PASSED!

!testRun: #TerniLapilliTests #test35XWinsWhenHeGetsThreePiecesInTheSecondaryDiagonal stamp: 'fr 11/2/2020 02:49:18'!
PASSED!

!testRun: #TerniLapilliTests #test36OWinsWhenHeGetsThreePiecesInLine stamp: 'fr 11/2/2020 02:49:18'!
PASSED!

!testRun: #TerniLapilliTests #test37OCanNotPutAfterGameIsOver stamp: 'fr 11/2/2020 02:49:18'!
PASSED!

!testRun: #TerniLapilliTests #test38XCanNotMoveAfterGameIsOver stamp: 'fr 11/2/2020 02:49:18'!
PASSED!

!testRun: #TerniLapilliTests #test39OCanNotMoveAfterGameIsOver stamp: 'fr 11/2/2020 02:49:18'!
PASSED!

!testRun: #TerniLapilliTests #test40ItIsNoOnesTurnAfterGameIsOver stamp: 'fr 11/2/2020 02:49:18'!
PASSED!
!TerniLapilli class methodsFor: 'error message descriptions' stamp: 'fr 11/2/2020 02:49:51'!
positionIsNotReachableErrorDescription
	
	^'Destination is not reachable from this departure position'! !
!TerniLapilli methodsFor: 'as yet unclassified' stamp: 'fr 11/2/2020 02:49:51' prior: 50888052!
canNotMoveMoreThanOnePlaceAfarError

	^ self error: self class positionIsNotReachableErrorDescription! !
!TerniLapilliTests methodsFor: 'as yet unclassified' stamp: 'fr 11/2/2020 02:49:51' prior: 50888036!
test29XCanNotMoveBetweenPositionsThatAreMoreThanOnePlaceAfar

	| terniLapilli |
	terniLapilli _ TerniLapilli new.
		
	self  should: [			terniLapilli putXAt: 1 @ 1 
						 ;putOAt: 2 @ 1
						 ;putXAt: 1 @ 2
						 ;putOAt: 2 @ 2
						 ;putXAt: 3 @ 1
						 ;putOAt: 1 @ 3
						 ;moveXFrom: 3@1 to: 3@3.] 
		raise: Error 
		withMessageText: TerniLapilli positionIsNotReachableErrorDescription ! !
!TerniLapilliTests methodsFor: 'as yet unclassified' stamp: 'fr 11/2/2020 02:49:51' prior: 50888019!
test30OCanNotMoveBetweenPositionsThatAreMoreThanOnePlaceAfar

	| terniLapilli |
	terniLapilli _ TerniLapilli new.
		
	self  should: [			terniLapilli putXAt: 1 @ 1 
						 ;putOAt: 2 @ 1
						 ;putXAt: 1 @ 2
						 ;putOAt: 2 @ 2
						 ;putXAt: 3 @ 1
						 ;putOAt: 1 @ 3
						 ;moveXFrom: 3@1 to: 3@2
						 ;moveOFrom: 1@3 to: 3@3.] 
		raise: Error 
		withMessageText: TerniLapilli positionIsNotReachableErrorDescription ! !

!methodRemoval: TerniLapilli class #positionIsNotOnePlaceAfarErrorDescription stamp: 'fr 11/2/2020 02:49:51'!
positionIsNotOnePlaceAfarErrorDescription
	
	^'Destination is not reachable from this departure position'!

!testRun: #TerniLapilliTests #test01XPlaysFirstAndOAfter stamp: 'fr 11/2/2020 02:49:54'!
PASSED!

!testRun: #TerniLapilliTests #test02OPlaysSecondAndXAfter stamp: 'fr 11/2/2020 02:49:54'!
PASSED!

!testRun: #TerniLapilliTests #test03ODoesNotPlayFirst stamp: 'fr 11/2/2020 02:49:54'!
PASSED!

!testRun: #TerniLapilliTests #test04APlayerCanNotPlayTwoTimesInARow stamp: 'fr 11/2/2020 02:49:54'!
PASSED!

!testRun: #TerniLapilliTests #test05XPieceIsWhereHePutsIt stamp: 'fr 11/2/2020 02:49:54'!
PASSED!

!testRun: #TerniLapilliTests #test06OPieceIsWhereHePutsIt stamp: 'fr 11/2/2020 02:49:54'!
PASSED!

!testRun: #TerniLapilliTests #test07XPieceIsNotWhereHeDoesNotPutIt stamp: 'fr 11/2/2020 02:49:54'!
PASSED!

!testRun: #TerniLapilliTests #test08OPieceIsNotWhereHeDoesNotPutIt stamp: 'fr 11/2/2020 02:49:54'!
PASSED!

!testRun: #TerniLapilliTests #test09XCanPutMoreThanOnePieceCorrectly stamp: 'fr 11/2/2020 02:49:54'!
PASSED!

!testRun: #TerniLapilliTests #test10OCanPutMoreThanOnePieceCorrectly stamp: 'fr 11/2/2020 02:49:54'!
PASSED!

!testRun: #TerniLapilliTests #test11OCanNotPutAPieceInAnOccupiedPosition stamp: 'fr 11/2/2020 02:49:54'!
PASSED!

!testRun: #TerniLapilliTests #test12XCanNotPutAPieceInAnOccupiedPosition stamp: 'fr 11/2/2020 02:49:54'!
PASSED!

!testRun: #TerniLapilliTests #test13XCanNotPutAPieceOutOfBounds stamp: 'fr 11/2/2020 02:49:54'!
PASSED!

!testRun: #TerniLapilliTests #test14OCanNotPutAPieceOutOfBounds stamp: 'fr 11/2/2020 02:49:54'!
PASSED!

!testRun: #TerniLapilliTests #test15XCanNotPutMoreThanThreePieces stamp: 'fr 11/2/2020 02:49:54'!
PASSED!

!testRun: #TerniLapilliTests #test16OCanNotPutMoreThanThreePieces stamp: 'fr 11/2/2020 02:49:54'!
PASSED!

!testRun: #TerniLapilliTests #test17WhenXMovesAPieceItIsAtTheNewPositionAndNotAtThePreviousOne stamp: 'fr 11/2/2020 02:49:54'!
PASSED!

!testRun: #TerniLapilliTests #test18WhenOMovesAPieceItIsAtTheNewPositionAndNotAtThePreviousOne stamp: 'fr 11/2/2020 02:49:54'!
PASSED!

!testRun: #TerniLapilliTests #test19XCanNotMoveBeforeAddingThreePieces stamp: 'fr 11/2/2020 02:49:54'!
PASSED!

!testRun: #TerniLapilliTests #test20OCanNotMoveBeforeAddingThreePieces stamp: 'fr 11/2/2020 02:49:54'!
PASSED!

!testRun: #TerniLapilliTests #test21XCanNotMoveFromAPositionThatIsNotUnderHisControl stamp: 'fr 11/2/2020 02:49:54'!
PASSED!

!testRun: #TerniLapilliTests #test22OCanNotMoveFromAPositionThatIsNotUnderHisControl stamp: 'fr 11/2/2020 02:49:54'!
PASSED!

!testRun: #TerniLapilliTests #test23XCanNotMoveFromAnOutOfBoundsPosition stamp: 'fr 11/2/2020 02:49:54'!
PASSED!

!testRun: #TerniLapilliTests #test24OCanNotMoveFromAnOutOfBoundsPosition stamp: 'fr 11/2/2020 02:49:54'!
PASSED!

!testRun: #TerniLapilliTests #test25XCanNotMoveToAnOutOfBoundsPosition stamp: 'fr 11/2/2020 02:49:54'!
PASSED!

!testRun: #TerniLapilliTests #test26OCanNotMoveToAnOutOfBoundsPosition stamp: 'fr 11/2/2020 02:49:54'!
PASSED!

!testRun: #TerniLapilliTests #test27XCanNotMoveToAnOccupiedPosition stamp: 'fr 11/2/2020 02:49:54'!
PASSED!

!testRun: #TerniLapilliTests #test28OCanNotMoveToAnOccupiedPosition stamp: 'fr 11/2/2020 02:49:54'!
PASSED!

!testRun: #TerniLapilliTests #test29XCanNotMoveBetweenPositionsThatAreMoreThanOnePlaceAfar stamp: 'fr 11/2/2020 02:49:54'!
PASSED!

!testRun: #TerniLapilliTests #test30OCanNotMoveBetweenPositionsThatAreMoreThanOnePlaceAfar stamp: 'fr 11/2/2020 02:49:54'!
PASSED!

!testRun: #TerniLapilliTests #test31NoPlayerHasWonIfNoneOfThemHasThreePiecesInLine stamp: 'fr 11/2/2020 02:49:54'!
PASSED!

!testRun: #TerniLapilliTests #test32XWinsWhenHeGetsThreePiecesInTheSameRow stamp: 'fr 11/2/2020 02:49:54'!
PASSED!

!testRun: #TerniLapilliTests #test33XWinsWhenHeGetsThreePiecesInTheSameColumn stamp: 'fr 11/2/2020 02:49:54'!
PASSED!

!testRun: #TerniLapilliTests #test34XWinsWhenHeGetsThreePiecesInTheMainDiagonal stamp: 'fr 11/2/2020 02:49:54'!
PASSED!

!testRun: #TerniLapilliTests #test35XWinsWhenHeGetsThreePiecesInTheSecondaryDiagonal stamp: 'fr 11/2/2020 02:49:54'!
PASSED!

!testRun: #TerniLapilliTests #test36OWinsWhenHeGetsThreePiecesInLine stamp: 'fr 11/2/2020 02:49:54'!
PASSED!

!testRun: #TerniLapilliTests #test37OCanNotPutAfterGameIsOver stamp: 'fr 11/2/2020 02:49:54'!
PASSED!

!testRun: #TerniLapilliTests #test38XCanNotMoveAfterGameIsOver stamp: 'fr 11/2/2020 02:49:54'!
PASSED!

!testRun: #TerniLapilliTests #test39OCanNotMoveAfterGameIsOver stamp: 'fr 11/2/2020 02:49:54'!
PASSED!

!testRun: #TerniLapilliTests #test40ItIsNoOnesTurnAfterGameIsOver stamp: 'fr 11/2/2020 02:49:54'!
PASSED!

game _ TerniLapilli new.

game putXAt: 1@1. 
game putOAt: 2@1. 
game putXAt: 1@2. 
game putOAt: 2@2.
game putXAt: 2@3.
game putOAt: 3@1.
game moveXFrom: 2@3 to: 2@3. !

game putXAt: 2@3.!

game moveXFrom: 2@3 to: 1@3. !

game hasXWon !

game hasOWon.!

----SNAPSHOT----(2 November 2020 02:52:57) CuisUniversity-4384.image priorSource: 17795117!

game hasOWon.!
!TerniLapilli methodsFor: 'private - error' stamp: 'fr 11/2/2020 02:55:41'!
failIfDestinationIsOutOfBoundsOrOccupied: aPosition

	self failIfPositionOutOfBounds: aPosition.
	self failIfPositionAlreadyHoldsAPiece: aPosition! !
!TerniLapilli methodsFor: 'as yet unclassified' stamp: 'fr 11/2/2020 02:55:41' prior: 50887566!
validate: aPosition andAddFor: aPlayerId

	self failIfDestinationIsOutOfBoundsOrOccupied: aPosition.
	(self positionsFor: aPlayerId) add: aPosition.
	self updateState
	
! !

!methodRemoval: TerniLapilli #failIfInvalidDestination: stamp: 'fr 11/2/2020 02:55:41'!
failIfInvalidDestination: aPosition

	self failIfPositionOutOfBounds: aPosition.
	self failIfPositionAlreadyHoldsAPiece: aPosition!
!TerniLapilli methodsFor: 'private - error' stamp: 'fr 11/2/2020 02:57:31'!
positionIsNotReachable

	^ self error: self class positionIsNotReachableErrorDescription! !
!TerniLapilli methodsFor: 'as yet unclassified' stamp: 'fr 11/2/2020 02:57:31' prior: 50882730!
failIfItIsTooFarToMoveFrom: currentPosition to: newPosition

	(self itIsValidToGoFrom: currentPosition to: newPosition) ifFalse: [self positionIsNotReachable].
	
	! !

!methodRemoval: TerniLapilli #canNotMoveMoreThanOnePlaceAfarError stamp: 'fr 11/2/2020 02:57:31'!
canNotMoveMoreThanOnePlaceAfarError

	^ self error: self class positionIsNotReachableErrorDescription!
!TerniLapilli methodsFor: 'private - error' stamp: 'fr 11/2/2020 02:58:06'!
failIfItIsNotPossibleToMoveFrom: currentPosition to: newPosition

	(self itIsValidToGoFrom: currentPosition to: newPosition) ifFalse: [self positionIsNotReachable].
	
	! !
!TerniLapilli methodsFor: 'as yet unclassified' stamp: 'fr 11/2/2020 02:58:06' prior: 50887187!
failIfTooFar: newPosition orOutOfBounds: currentPosition.
	
	self failIfPositionOutOfBounds: currentPosition.
	self failIfItIsNotPossibleToMoveFrom: currentPosition to: newPosition.
! !

!methodRemoval: TerniLapilli #failIfItIsTooFarToMoveFrom:to: stamp: 'fr 11/2/2020 02:58:06'!
failIfItIsTooFarToMoveFrom: currentPosition to: newPosition

	(self itIsValidToGoFrom: currentPosition to: newPosition) ifFalse: [self positionIsNotReachable].
	
	!

!testRun: #TerniLapilliTests #test01XPlaysFirstAndOAfter stamp: 'fr 11/2/2020 02:58:10'!
PASSED!

!testRun: #TerniLapilliTests #test02OPlaysSecondAndXAfter stamp: 'fr 11/2/2020 02:58:10'!
PASSED!

!testRun: #TerniLapilliTests #test03ODoesNotPlayFirst stamp: 'fr 11/2/2020 02:58:10'!
PASSED!

!testRun: #TerniLapilliTests #test04APlayerCanNotPlayTwoTimesInARow stamp: 'fr 11/2/2020 02:58:10'!
PASSED!

!testRun: #TerniLapilliTests #test05XPieceIsWhereHePutsIt stamp: 'fr 11/2/2020 02:58:10'!
PASSED!

!testRun: #TerniLapilliTests #test06OPieceIsWhereHePutsIt stamp: 'fr 11/2/2020 02:58:10'!
PASSED!

!testRun: #TerniLapilliTests #test07XPieceIsNotWhereHeDoesNotPutIt stamp: 'fr 11/2/2020 02:58:10'!
PASSED!

!testRun: #TerniLapilliTests #test08OPieceIsNotWhereHeDoesNotPutIt stamp: 'fr 11/2/2020 02:58:10'!
PASSED!

!testRun: #TerniLapilliTests #test09XCanPutMoreThanOnePieceCorrectly stamp: 'fr 11/2/2020 02:58:10'!
PASSED!

!testRun: #TerniLapilliTests #test10OCanPutMoreThanOnePieceCorrectly stamp: 'fr 11/2/2020 02:58:10'!
PASSED!

!testRun: #TerniLapilliTests #test11OCanNotPutAPieceInAnOccupiedPosition stamp: 'fr 11/2/2020 02:58:10'!
PASSED!

!testRun: #TerniLapilliTests #test12XCanNotPutAPieceInAnOccupiedPosition stamp: 'fr 11/2/2020 02:58:10'!
PASSED!

!testRun: #TerniLapilliTests #test13XCanNotPutAPieceOutOfBounds stamp: 'fr 11/2/2020 02:58:10'!
PASSED!

!testRun: #TerniLapilliTests #test14OCanNotPutAPieceOutOfBounds stamp: 'fr 11/2/2020 02:58:10'!
PASSED!

!testRun: #TerniLapilliTests #test15XCanNotPutMoreThanThreePieces stamp: 'fr 11/2/2020 02:58:10'!
PASSED!

!testRun: #TerniLapilliTests #test16OCanNotPutMoreThanThreePieces stamp: 'fr 11/2/2020 02:58:10'!
PASSED!

!testRun: #TerniLapilliTests #test17WhenXMovesAPieceItIsAtTheNewPositionAndNotAtThePreviousOne stamp: 'fr 11/2/2020 02:58:10'!
PASSED!

!testRun: #TerniLapilliTests #test18WhenOMovesAPieceItIsAtTheNewPositionAndNotAtThePreviousOne stamp: 'fr 11/2/2020 02:58:10'!
PASSED!

!testRun: #TerniLapilliTests #test19XCanNotMoveBeforeAddingThreePieces stamp: 'fr 11/2/2020 02:58:10'!
PASSED!

!testRun: #TerniLapilliTests #test20OCanNotMoveBeforeAddingThreePieces stamp: 'fr 11/2/2020 02:58:10'!
PASSED!

!testRun: #TerniLapilliTests #test21XCanNotMoveFromAPositionThatIsNotUnderHisControl stamp: 'fr 11/2/2020 02:58:10'!
PASSED!

!testRun: #TerniLapilliTests #test22OCanNotMoveFromAPositionThatIsNotUnderHisControl stamp: 'fr 11/2/2020 02:58:10'!
PASSED!

!testRun: #TerniLapilliTests #test23XCanNotMoveFromAnOutOfBoundsPosition stamp: 'fr 11/2/2020 02:58:10'!
PASSED!

!testRun: #TerniLapilliTests #test24OCanNotMoveFromAnOutOfBoundsPosition stamp: 'fr 11/2/2020 02:58:10'!
PASSED!

!testRun: #TerniLapilliTests #test25XCanNotMoveToAnOutOfBoundsPosition stamp: 'fr 11/2/2020 02:58:10'!
PASSED!

!testRun: #TerniLapilliTests #test26OCanNotMoveToAnOutOfBoundsPosition stamp: 'fr 11/2/2020 02:58:10'!
PASSED!

!testRun: #TerniLapilliTests #test27XCanNotMoveToAnOccupiedPosition stamp: 'fr 11/2/2020 02:58:10'!
PASSED!

!testRun: #TerniLapilliTests #test28OCanNotMoveToAnOccupiedPosition stamp: 'fr 11/2/2020 02:58:10'!
PASSED!

!testRun: #TerniLapilliTests #test29XCanNotMoveBetweenPositionsThatAreMoreThanOnePlaceAfar stamp: 'fr 11/2/2020 02:58:10'!
PASSED!

!testRun: #TerniLapilliTests #test30OCanNotMoveBetweenPositionsThatAreMoreThanOnePlaceAfar stamp: 'fr 11/2/2020 02:58:10'!
PASSED!

!testRun: #TerniLapilliTests #test31NoPlayerHasWonIfNoneOfThemHasThreePiecesInLine stamp: 'fr 11/2/2020 02:58:10'!
PASSED!

!testRun: #TerniLapilliTests #test32XWinsWhenHeGetsThreePiecesInTheSameRow stamp: 'fr 11/2/2020 02:58:10'!
PASSED!

!testRun: #TerniLapilliTests #test33XWinsWhenHeGetsThreePiecesInTheSameColumn stamp: 'fr 11/2/2020 02:58:10'!
PASSED!

!testRun: #TerniLapilliTests #test34XWinsWhenHeGetsThreePiecesInTheMainDiagonal stamp: 'fr 11/2/2020 02:58:10'!
PASSED!

!testRun: #TerniLapilliTests #test35XWinsWhenHeGetsThreePiecesInTheSecondaryDiagonal stamp: 'fr 11/2/2020 02:58:10'!
PASSED!

!testRun: #TerniLapilliTests #test36OWinsWhenHeGetsThreePiecesInLine stamp: 'fr 11/2/2020 02:58:10'!
PASSED!

!testRun: #TerniLapilliTests #test37OCanNotPutAfterGameIsOver stamp: 'fr 11/2/2020 02:58:10'!
PASSED!

!testRun: #TerniLapilliTests #test38XCanNotMoveAfterGameIsOver stamp: 'fr 11/2/2020 02:58:10'!
PASSED!

!testRun: #TerniLapilliTests #test39OCanNotMoveAfterGameIsOver stamp: 'fr 11/2/2020 02:58:10'!
PASSED!

!testRun: #TerniLapilliTests #test40ItIsNoOnesTurnAfterGameIsOver stamp: 'fr 11/2/2020 02:58:10'!
PASSED!
!TerniLapilli methodsFor: 'private - game state' stamp: 'fr 11/2/2020 02:58:54' prior: 50884111!
positionHoldsAPieceOfAnyPlayer: aPosition

	^(self player: #X hasAPieceAt: aPosition) or: [self player: #O hasAPieceAt: aPosition ]! !
!TerniLapilli methodsFor: 'private - win' stamp: 'fr 11/2/2020 02:59:29' prior: 50884247!
hasThreeIn: playerPositions thatFulfill: aCoordinatesBlock

	^(1 to: 3) anySatisfy: [:coordinate | (playerPositions count: [:aPosition | aCoordinatesBlock value: aPosition value: coordinate]) = 3 ]! !
!TerniLapilli methodsFor: 'private - win' stamp: 'fr 11/2/2020 03:02:21'!
numberOf: playerPositions thatFulfill: aCoordinatesBlock using: aCoordinate


	^playerPositions count: [:aPosition | aCoordinatesBlock value: aPosition value: aCoordinate]! !
!TerniLapilli methodsFor: 'private - win' stamp: 'fr 11/2/2020 03:03:29' prior: 50888930!
hasThreeIn: playerPositions thatFulfill: aCoordinatesBlock

	"^(1 to: 3) anySatisfy: [:coordinate | (playerPositions count: [:aPosition | aCoordinatesBlock value: aPosition value: coordinate]) = 3 ]"
	
	^(1 to: 3) anySatisfy: [:aCoordinate | (self numberOf: playerPositions thatFulfill: aCoordinatesBlock using: aCoordinate) = 3 ]! !

!testRun: #TerniLapilliTests #test01XPlaysFirstAndOAfter stamp: 'fr 11/2/2020 03:03:31'!
PASSED!

!testRun: #TerniLapilliTests #test02OPlaysSecondAndXAfter stamp: 'fr 11/2/2020 03:03:31'!
PASSED!

!testRun: #TerniLapilliTests #test03ODoesNotPlayFirst stamp: 'fr 11/2/2020 03:03:31'!
PASSED!

!testRun: #TerniLapilliTests #test04APlayerCanNotPlayTwoTimesInARow stamp: 'fr 11/2/2020 03:03:31'!
PASSED!

!testRun: #TerniLapilliTests #test05XPieceIsWhereHePutsIt stamp: 'fr 11/2/2020 03:03:31'!
PASSED!

!testRun: #TerniLapilliTests #test06OPieceIsWhereHePutsIt stamp: 'fr 11/2/2020 03:03:31'!
PASSED!

!testRun: #TerniLapilliTests #test07XPieceIsNotWhereHeDoesNotPutIt stamp: 'fr 11/2/2020 03:03:31'!
PASSED!

!testRun: #TerniLapilliTests #test08OPieceIsNotWhereHeDoesNotPutIt stamp: 'fr 11/2/2020 03:03:31'!
PASSED!

!testRun: #TerniLapilliTests #test09XCanPutMoreThanOnePieceCorrectly stamp: 'fr 11/2/2020 03:03:31'!
PASSED!

!testRun: #TerniLapilliTests #test10OCanPutMoreThanOnePieceCorrectly stamp: 'fr 11/2/2020 03:03:31'!
PASSED!

!testRun: #TerniLapilliTests #test11OCanNotPutAPieceInAnOccupiedPosition stamp: 'fr 11/2/2020 03:03:31'!
PASSED!

!testRun: #TerniLapilliTests #test12XCanNotPutAPieceInAnOccupiedPosition stamp: 'fr 11/2/2020 03:03:31'!
PASSED!

!testRun: #TerniLapilliTests #test13XCanNotPutAPieceOutOfBounds stamp: 'fr 11/2/2020 03:03:31'!
PASSED!

!testRun: #TerniLapilliTests #test14OCanNotPutAPieceOutOfBounds stamp: 'fr 11/2/2020 03:03:31'!
PASSED!

!testRun: #TerniLapilliTests #test15XCanNotPutMoreThanThreePieces stamp: 'fr 11/2/2020 03:03:31'!
PASSED!

!testRun: #TerniLapilliTests #test16OCanNotPutMoreThanThreePieces stamp: 'fr 11/2/2020 03:03:31'!
PASSED!

!testRun: #TerniLapilliTests #test17WhenXMovesAPieceItIsAtTheNewPositionAndNotAtThePreviousOne stamp: 'fr 11/2/2020 03:03:31'!
PASSED!

!testRun: #TerniLapilliTests #test18WhenOMovesAPieceItIsAtTheNewPositionAndNotAtThePreviousOne stamp: 'fr 11/2/2020 03:03:31'!
PASSED!

!testRun: #TerniLapilliTests #test19XCanNotMoveBeforeAddingThreePieces stamp: 'fr 11/2/2020 03:03:31'!
PASSED!

!testRun: #TerniLapilliTests #test20OCanNotMoveBeforeAddingThreePieces stamp: 'fr 11/2/2020 03:03:31'!
PASSED!

!testRun: #TerniLapilliTests #test21XCanNotMoveFromAPositionThatIsNotUnderHisControl stamp: 'fr 11/2/2020 03:03:31'!
PASSED!

!testRun: #TerniLapilliTests #test22OCanNotMoveFromAPositionThatIsNotUnderHisControl stamp: 'fr 11/2/2020 03:03:31'!
PASSED!

!testRun: #TerniLapilliTests #test23XCanNotMoveFromAnOutOfBoundsPosition stamp: 'fr 11/2/2020 03:03:31'!
PASSED!

!testRun: #TerniLapilliTests #test24OCanNotMoveFromAnOutOfBoundsPosition stamp: 'fr 11/2/2020 03:03:31'!
PASSED!

!testRun: #TerniLapilliTests #test25XCanNotMoveToAnOutOfBoundsPosition stamp: 'fr 11/2/2020 03:03:31'!
PASSED!

!testRun: #TerniLapilliTests #test26OCanNotMoveToAnOutOfBoundsPosition stamp: 'fr 11/2/2020 03:03:31'!
PASSED!

!testRun: #TerniLapilliTests #test27XCanNotMoveToAnOccupiedPosition stamp: 'fr 11/2/2020 03:03:31'!
PASSED!

!testRun: #TerniLapilliTests #test28OCanNotMoveToAnOccupiedPosition stamp: 'fr 11/2/2020 03:03:31'!
PASSED!

!testRun: #TerniLapilliTests #test29XCanNotMoveBetweenPositionsThatAreMoreThanOnePlaceAfar stamp: 'fr 11/2/2020 03:03:31'!
PASSED!

!testRun: #TerniLapilliTests #test30OCanNotMoveBetweenPositionsThatAreMoreThanOnePlaceAfar stamp: 'fr 11/2/2020 03:03:31'!
PASSED!

!testRun: #TerniLapilliTests #test31NoPlayerHasWonIfNoneOfThemHasThreePiecesInLine stamp: 'fr 11/2/2020 03:03:31'!
PASSED!

!testRun: #TerniLapilliTests #test32XWinsWhenHeGetsThreePiecesInTheSameRow stamp: 'fr 11/2/2020 03:03:31'!
PASSED!

!testRun: #TerniLapilliTests #test33XWinsWhenHeGetsThreePiecesInTheSameColumn stamp: 'fr 11/2/2020 03:03:31'!
PASSED!

!testRun: #TerniLapilliTests #test34XWinsWhenHeGetsThreePiecesInTheMainDiagonal stamp: 'fr 11/2/2020 03:03:31'!
PASSED!

!testRun: #TerniLapilliTests #test35XWinsWhenHeGetsThreePiecesInTheSecondaryDiagonal stamp: 'fr 11/2/2020 03:03:31'!
PASSED!

!testRun: #TerniLapilliTests #test36OWinsWhenHeGetsThreePiecesInLine stamp: 'fr 11/2/2020 03:03:31'!
PASSED!

!testRun: #TerniLapilliTests #test37OCanNotPutAfterGameIsOver stamp: 'fr 11/2/2020 03:03:31'!
PASSED!

!testRun: #TerniLapilliTests #test38XCanNotMoveAfterGameIsOver stamp: 'fr 11/2/2020 03:03:31'!
PASSED!

!testRun: #TerniLapilliTests #test39OCanNotMoveAfterGameIsOver stamp: 'fr 11/2/2020 03:03:31'!
PASSED!

!testRun: #TerniLapilliTests #test40ItIsNoOnesTurnAfterGameIsOver stamp: 'fr 11/2/2020 03:03:31'!
PASSED!
!TerniLapilli methodsFor: 'private - win' stamp: 'fr 11/2/2020 03:03:57' prior: 50888948!
hasThreeIn: playerPositions thatFulfill: aCoordinatesBlock
	
	^(1 to: 3) anySatisfy: [:aCoordinate | (self numberOf: playerPositions thatFulfill: aCoordinatesBlock using: aCoordinate) = 3 ]! !
!TerniLapilli methodsFor: 'private - win' stamp: 'fr 11/2/2020 03:04:13' prior: 50884576!
hasThreeInADiagonal: playerPositions thatFulfill: aCoordinatesBlock

	^ (1 to: 3) allSatisfy: [:aCoordinate | playerPositions includes: aCoordinate@(aCoordinatesBlock value: aCoordinate)]! !
!TerniLapilli methodsFor: 'private - win' stamp: 'fr 11/2/2020 03:05:08'!
hasThreeInARowOrColumn: playerPositions thatFulfill: aCoordinatesBlock
	
	^(1 to: 3) anySatisfy: [:aCoordinate | (self numberOf: playerPositions thatFulfill: aCoordinatesBlock using: aCoordinate) = 3 ]! !
!TerniLapilli methodsFor: 'as yet unclassified' stamp: 'fr 11/2/2020 03:05:08' prior: 50884397!
threeInAColumn: playerPositions
	
	^self hasThreeInARowOrColumn: playerPositions thatFulfill: [:aPosition :aCoordinate | aPosition y = aCoordinate]! !
!TerniLapilli methodsFor: 'as yet unclassified' stamp: 'fr 11/2/2020 03:05:08' prior: 50884404!
threeInARow: playerPositions

	^self hasThreeInARowOrColumn: playerPositions thatFulfill: [:aPosition :aCoordinate | aPosition x = aCoordinate]! !

!methodRemoval: TerniLapilli #hasThreeIn:thatFulfill: stamp: 'fr 11/2/2020 03:05:08'!
hasThreeIn: playerPositions thatFulfill: aCoordinatesBlock
	
	^(1 to: 3) anySatisfy: [:aCoordinate | (self numberOf: playerPositions thatFulfill: aCoordinatesBlock using: aCoordinate) = 3 ]!

!testRun: #TerniLapilliTests #test01XPlaysFirstAndOAfter stamp: 'fr 11/2/2020 03:05:13'!
PASSED!

!testRun: #TerniLapilliTests #test02OPlaysSecondAndXAfter stamp: 'fr 11/2/2020 03:05:13'!
PASSED!

!testRun: #TerniLapilliTests #test03ODoesNotPlayFirst stamp: 'fr 11/2/2020 03:05:13'!
PASSED!

!testRun: #TerniLapilliTests #test04APlayerCanNotPlayTwoTimesInARow stamp: 'fr 11/2/2020 03:05:13'!
PASSED!

!testRun: #TerniLapilliTests #test05XPieceIsWhereHePutsIt stamp: 'fr 11/2/2020 03:05:13'!
PASSED!

!testRun: #TerniLapilliTests #test06OPieceIsWhereHePutsIt stamp: 'fr 11/2/2020 03:05:13'!
PASSED!

!testRun: #TerniLapilliTests #test07XPieceIsNotWhereHeDoesNotPutIt stamp: 'fr 11/2/2020 03:05:13'!
PASSED!

!testRun: #TerniLapilliTests #test08OPieceIsNotWhereHeDoesNotPutIt stamp: 'fr 11/2/2020 03:05:13'!
PASSED!

!testRun: #TerniLapilliTests #test09XCanPutMoreThanOnePieceCorrectly stamp: 'fr 11/2/2020 03:05:13'!
PASSED!

!testRun: #TerniLapilliTests #test10OCanPutMoreThanOnePieceCorrectly stamp: 'fr 11/2/2020 03:05:13'!
PASSED!

!testRun: #TerniLapilliTests #test11OCanNotPutAPieceInAnOccupiedPosition stamp: 'fr 11/2/2020 03:05:13'!
PASSED!

!testRun: #TerniLapilliTests #test12XCanNotPutAPieceInAnOccupiedPosition stamp: 'fr 11/2/2020 03:05:13'!
PASSED!

!testRun: #TerniLapilliTests #test13XCanNotPutAPieceOutOfBounds stamp: 'fr 11/2/2020 03:05:13'!
PASSED!

!testRun: #TerniLapilliTests #test14OCanNotPutAPieceOutOfBounds stamp: 'fr 11/2/2020 03:05:13'!
PASSED!

!testRun: #TerniLapilliTests #test15XCanNotPutMoreThanThreePieces stamp: 'fr 11/2/2020 03:05:13'!
PASSED!

!testRun: #TerniLapilliTests #test16OCanNotPutMoreThanThreePieces stamp: 'fr 11/2/2020 03:05:13'!
PASSED!

!testRun: #TerniLapilliTests #test17WhenXMovesAPieceItIsAtTheNewPositionAndNotAtThePreviousOne stamp: 'fr 11/2/2020 03:05:13'!
PASSED!

!testRun: #TerniLapilliTests #test18WhenOMovesAPieceItIsAtTheNewPositionAndNotAtThePreviousOne stamp: 'fr 11/2/2020 03:05:13'!
PASSED!

!testRun: #TerniLapilliTests #test19XCanNotMoveBeforeAddingThreePieces stamp: 'fr 11/2/2020 03:05:13'!
PASSED!

!testRun: #TerniLapilliTests #test20OCanNotMoveBeforeAddingThreePieces stamp: 'fr 11/2/2020 03:05:13'!
PASSED!

!testRun: #TerniLapilliTests #test21XCanNotMoveFromAPositionThatIsNotUnderHisControl stamp: 'fr 11/2/2020 03:05:13'!
PASSED!

!testRun: #TerniLapilliTests #test22OCanNotMoveFromAPositionThatIsNotUnderHisControl stamp: 'fr 11/2/2020 03:05:13'!
PASSED!

!testRun: #TerniLapilliTests #test23XCanNotMoveFromAnOutOfBoundsPosition stamp: 'fr 11/2/2020 03:05:13'!
PASSED!

!testRun: #TerniLapilliTests #test24OCanNotMoveFromAnOutOfBoundsPosition stamp: 'fr 11/2/2020 03:05:13'!
PASSED!

!testRun: #TerniLapilliTests #test25XCanNotMoveToAnOutOfBoundsPosition stamp: 'fr 11/2/2020 03:05:13'!
PASSED!

!testRun: #TerniLapilliTests #test26OCanNotMoveToAnOutOfBoundsPosition stamp: 'fr 11/2/2020 03:05:13'!
PASSED!

!testRun: #TerniLapilliTests #test27XCanNotMoveToAnOccupiedPosition stamp: 'fr 11/2/2020 03:05:13'!
PASSED!

!testRun: #TerniLapilliTests #test28OCanNotMoveToAnOccupiedPosition stamp: 'fr 11/2/2020 03:05:13'!
PASSED!

!testRun: #TerniLapilliTests #test29XCanNotMoveBetweenPositionsThatAreMoreThanOnePlaceAfar stamp: 'fr 11/2/2020 03:05:13'!
PASSED!

!testRun: #TerniLapilliTests #test30OCanNotMoveBetweenPositionsThatAreMoreThanOnePlaceAfar stamp: 'fr 11/2/2020 03:05:13'!
PASSED!

!testRun: #TerniLapilliTests #test31NoPlayerHasWonIfNoneOfThemHasThreePiecesInLine stamp: 'fr 11/2/2020 03:05:13'!
PASSED!

!testRun: #TerniLapilliTests #test32XWinsWhenHeGetsThreePiecesInTheSameRow stamp: 'fr 11/2/2020 03:05:13'!
PASSED!

!testRun: #TerniLapilliTests #test33XWinsWhenHeGetsThreePiecesInTheSameColumn stamp: 'fr 11/2/2020 03:05:13'!
PASSED!

!testRun: #TerniLapilliTests #test34XWinsWhenHeGetsThreePiecesInTheMainDiagonal stamp: 'fr 11/2/2020 03:05:13'!
PASSED!

!testRun: #TerniLapilliTests #test35XWinsWhenHeGetsThreePiecesInTheSecondaryDiagonal stamp: 'fr 11/2/2020 03:05:13'!
PASSED!

!testRun: #TerniLapilliTests #test36OWinsWhenHeGetsThreePiecesInLine stamp: 'fr 11/2/2020 03:05:13'!
PASSED!

!testRun: #TerniLapilliTests #test37OCanNotPutAfterGameIsOver stamp: 'fr 11/2/2020 03:05:13'!
PASSED!

!testRun: #TerniLapilliTests #test38XCanNotMoveAfterGameIsOver stamp: 'fr 11/2/2020 03:05:13'!
PASSED!

!testRun: #TerniLapilliTests #test39OCanNotMoveAfterGameIsOver stamp: 'fr 11/2/2020 03:05:13'!
PASSED!

!testRun: #TerniLapilliTests #test40ItIsNoOnesTurnAfterGameIsOver stamp: 'fr 11/2/2020 03:05:13'!
PASSED!
!TerniLapilli methodsFor: 'private - win' stamp: 'fr 11/2/2020 03:08:06'!
hasThreeInARowOrColumn: playerPositions thatCoincide: aCoordinatesBlock
	
	^(1 to: 3) anySatisfy: [:aCoordinate | (self numberOf: playerPositions thatFulfill: aCoordinatesBlock using: aCoordinate) = 3 ]! !
!TerniLapilli methodsFor: 'as yet unclassified' stamp: 'fr 11/2/2020 03:08:06' prior: 50889130!
threeInAColumn: playerPositions
	
	^self hasThreeInARowOrColumn: playerPositions thatCoincide: [:aPosition :aCoordinate | aPosition y = aCoordinate]! !
!TerniLapilli methodsFor: 'as yet unclassified' stamp: 'fr 11/2/2020 03:08:06' prior: 50889138!
threeInARow: playerPositions

	^self hasThreeInARowOrColumn: playerPositions thatCoincide: [:aPosition :aCoordinate | aPosition x = aCoordinate]! !

!methodRemoval: TerniLapilli #hasThreeInARowOrColumn:thatFulfill: stamp: 'fr 11/2/2020 03:08:06'!
hasThreeInARowOrColumn: playerPositions thatFulfill: aCoordinatesBlock
	
	^(1 to: 3) anySatisfy: [:aCoordinate | (self numberOf: playerPositions thatFulfill: aCoordinatesBlock using: aCoordinate) = 3 ]!
!TerniLapilli methodsFor: 'private - win' stamp: 'fr 11/2/2020 03:08:31'!
hasThreeInADiagonal: playerPositions thatHaveSecondCoordinate: aCoordinatesBlock

	^ (1 to: 3) allSatisfy: [:aCoordinate | playerPositions includes: aCoordinate@(aCoordinatesBlock value: aCoordinate)]! !
!TerniLapilli methodsFor: 'as yet unclassified' stamp: 'fr 11/2/2020 03:08:31' prior: 50884892!
threeInMainDiagonal: playerPositions

	^self hasThreeInADiagonal: playerPositions thatHaveSecondCoordinate: [:coordinate | coordinate] ! !
!TerniLapilli methodsFor: 'as yet unclassified' stamp: 'fr 11/2/2020 03:08:31' prior: 50884744!
threeInSecondaryDiagonal: playerPositions
	
	^self hasThreeInADiagonal: playerPositions thatHaveSecondCoordinate: [:coordinate | 4-coordinate]! !

!methodRemoval: TerniLapilli #hasThreeInADiagonal:thatFulfill: stamp: 'fr 11/2/2020 03:08:31'!
hasThreeInADiagonal: playerPositions thatFulfill: aCoordinatesBlock

	^ (1 to: 3) allSatisfy: [:aCoordinate | playerPositions includes: aCoordinate@(aCoordinatesBlock value: aCoordinate)]!
!TerniLapilli methodsFor: 'private - win' stamp: 'fr 11/2/2020 03:09:15' prior: 50889330!
hasThreeInADiagonal: playerPositions thatHaveSecondCoordinate: aCoordinatesBlock

	^(1 to: 3) allSatisfy: [:aCoordinate | playerPositions includes: aCoordinate@(aCoordinatesBlock value: aCoordinate)]! !
!TerniLapilli methodsFor: 'private - win' stamp: 'fr 11/2/2020 03:12:21'!
positions: playerPositions includeOneWithFirstCoordinate: aCoordinate andSecond: aCoordinatesBlock

	^playerPositions includes: aCoordinate@(aCoordinatesBlock value: aCoordinate)! !
!TerniLapilli methodsFor: 'private - win' stamp: 'fr 11/2/2020 03:13:38' prior: 50889365!
hasThreeInADiagonal: playerPositions thatHaveSecondCoordinate: aCoordinatesBlock

	"^(1 to: 3) allSatisfy: [:aCoordinate | playerPositions includes: aCoordinate@(aCoordinatesBlock value: aCoordinate)]"
	
	(1 to: 3) allSatisfy: [:aCoordinate | self positions: playerPositions includeOneWithFirstCoordinate: aCoordinate andSecond: aCoordinatesBlock]
! !
!TerniLapilli methodsFor: 'private - win' stamp: 'fr 11/2/2020 03:13:41' prior: 50889383!
hasThreeInADiagonal: playerPositions thatHaveSecondCoordinate: aCoordinatesBlock

	"^(1 to: 3) allSatisfy: [:aCoordinate | playerPositions includes: aCoordinate@(aCoordinatesBlock value: aCoordinate)]"
	
	^(1 to: 3) allSatisfy: [:aCoordinate | self positions: playerPositions includeOneWithFirstCoordinate: aCoordinate andSecond: aCoordinatesBlock]
! !

!testRun: #TerniLapilliTests #test01XPlaysFirstAndOAfter stamp: 'fr 11/2/2020 03:13:44'!
PASSED!

!testRun: #TerniLapilliTests #test02OPlaysSecondAndXAfter stamp: 'fr 11/2/2020 03:13:44'!
PASSED!

!testRun: #TerniLapilliTests #test03ODoesNotPlayFirst stamp: 'fr 11/2/2020 03:13:44'!
PASSED!

!testRun: #TerniLapilliTests #test04APlayerCanNotPlayTwoTimesInARow stamp: 'fr 11/2/2020 03:13:44'!
PASSED!

!testRun: #TerniLapilliTests #test05XPieceIsWhereHePutsIt stamp: 'fr 11/2/2020 03:13:44'!
PASSED!

!testRun: #TerniLapilliTests #test06OPieceIsWhereHePutsIt stamp: 'fr 11/2/2020 03:13:44'!
PASSED!

!testRun: #TerniLapilliTests #test07XPieceIsNotWhereHeDoesNotPutIt stamp: 'fr 11/2/2020 03:13:44'!
PASSED!

!testRun: #TerniLapilliTests #test08OPieceIsNotWhereHeDoesNotPutIt stamp: 'fr 11/2/2020 03:13:44'!
PASSED!

!testRun: #TerniLapilliTests #test09XCanPutMoreThanOnePieceCorrectly stamp: 'fr 11/2/2020 03:13:44'!
PASSED!

!testRun: #TerniLapilliTests #test10OCanPutMoreThanOnePieceCorrectly stamp: 'fr 11/2/2020 03:13:44'!
PASSED!

!testRun: #TerniLapilliTests #test11OCanNotPutAPieceInAnOccupiedPosition stamp: 'fr 11/2/2020 03:13:44'!
PASSED!

!testRun: #TerniLapilliTests #test12XCanNotPutAPieceInAnOccupiedPosition stamp: 'fr 11/2/2020 03:13:44'!
PASSED!

!testRun: #TerniLapilliTests #test13XCanNotPutAPieceOutOfBounds stamp: 'fr 11/2/2020 03:13:44'!
PASSED!

!testRun: #TerniLapilliTests #test14OCanNotPutAPieceOutOfBounds stamp: 'fr 11/2/2020 03:13:44'!
PASSED!

!testRun: #TerniLapilliTests #test15XCanNotPutMoreThanThreePieces stamp: 'fr 11/2/2020 03:13:44'!
PASSED!

!testRun: #TerniLapilliTests #test16OCanNotPutMoreThanThreePieces stamp: 'fr 11/2/2020 03:13:44'!
PASSED!

!testRun: #TerniLapilliTests #test17WhenXMovesAPieceItIsAtTheNewPositionAndNotAtThePreviousOne stamp: 'fr 11/2/2020 03:13:44'!
PASSED!

!testRun: #TerniLapilliTests #test18WhenOMovesAPieceItIsAtTheNewPositionAndNotAtThePreviousOne stamp: 'fr 11/2/2020 03:13:44'!
PASSED!

!testRun: #TerniLapilliTests #test19XCanNotMoveBeforeAddingThreePieces stamp: 'fr 11/2/2020 03:13:44'!
PASSED!

!testRun: #TerniLapilliTests #test20OCanNotMoveBeforeAddingThreePieces stamp: 'fr 11/2/2020 03:13:44'!
PASSED!

!testRun: #TerniLapilliTests #test21XCanNotMoveFromAPositionThatIsNotUnderHisControl stamp: 'fr 11/2/2020 03:13:44'!
PASSED!

!testRun: #TerniLapilliTests #test22OCanNotMoveFromAPositionThatIsNotUnderHisControl stamp: 'fr 11/2/2020 03:13:44'!
PASSED!

!testRun: #TerniLapilliTests #test23XCanNotMoveFromAnOutOfBoundsPosition stamp: 'fr 11/2/2020 03:13:44'!
PASSED!

!testRun: #TerniLapilliTests #test24OCanNotMoveFromAnOutOfBoundsPosition stamp: 'fr 11/2/2020 03:13:44'!
PASSED!

!testRun: #TerniLapilliTests #test25XCanNotMoveToAnOutOfBoundsPosition stamp: 'fr 11/2/2020 03:13:44'!
PASSED!

!testRun: #TerniLapilliTests #test26OCanNotMoveToAnOutOfBoundsPosition stamp: 'fr 11/2/2020 03:13:44'!
PASSED!

!testRun: #TerniLapilliTests #test27XCanNotMoveToAnOccupiedPosition stamp: 'fr 11/2/2020 03:13:44'!
PASSED!

!testRun: #TerniLapilliTests #test28OCanNotMoveToAnOccupiedPosition stamp: 'fr 11/2/2020 03:13:44'!
PASSED!

!testRun: #TerniLapilliTests #test29XCanNotMoveBetweenPositionsThatAreMoreThanOnePlaceAfar stamp: 'fr 11/2/2020 03:13:44'!
PASSED!

!testRun: #TerniLapilliTests #test30OCanNotMoveBetweenPositionsThatAreMoreThanOnePlaceAfar stamp: 'fr 11/2/2020 03:13:44'!
PASSED!

!testRun: #TerniLapilliTests #test31NoPlayerHasWonIfNoneOfThemHasThreePiecesInLine stamp: 'fr 11/2/2020 03:13:44'!
PASSED!

!testRun: #TerniLapilliTests #test32XWinsWhenHeGetsThreePiecesInTheSameRow stamp: 'fr 11/2/2020 03:13:44'!
PASSED!

!testRun: #TerniLapilliTests #test33XWinsWhenHeGetsThreePiecesInTheSameColumn stamp: 'fr 11/2/2020 03:13:44'!
PASSED!

!testRun: #TerniLapilliTests #test34XWinsWhenHeGetsThreePiecesInTheMainDiagonal stamp: 'fr 11/2/2020 03:13:44'!
PASSED!

!testRun: #TerniLapilliTests #test35XWinsWhenHeGetsThreePiecesInTheSecondaryDiagonal stamp: 'fr 11/2/2020 03:13:44'!
PASSED!

!testRun: #TerniLapilliTests #test36OWinsWhenHeGetsThreePiecesInLine stamp: 'fr 11/2/2020 03:13:44'!
PASSED!

!testRun: #TerniLapilliTests #test37OCanNotPutAfterGameIsOver stamp: 'fr 11/2/2020 03:13:44'!
PASSED!

!testRun: #TerniLapilliTests #test38XCanNotMoveAfterGameIsOver stamp: 'fr 11/2/2020 03:13:44'!
PASSED!

!testRun: #TerniLapilliTests #test39OCanNotMoveAfterGameIsOver stamp: 'fr 11/2/2020 03:13:44'!
PASSED!

!testRun: #TerniLapilliTests #test40ItIsNoOnesTurnAfterGameIsOver stamp: 'fr 11/2/2020 03:13:44'!
PASSED!
!TerniLapilli methodsFor: 'private - win' stamp: 'fr 11/2/2020 03:14:10' prior: 50889397!
hasThreeInADiagonal: playerPositions thatHaveSecondCoordinate: aCoordinatesBlock
	
	^(1 to: 3) allSatisfy: [:aCoordinate | self positions: playerPositions includeOneWithFirstCoordinate: aCoordinate andSecond: aCoordinatesBlock]
! !
!TerniLapilli methodsFor: 'private - coordinates validation' stamp: 'fr 11/2/2020 03:16:41'!
position: newPosition isReachableFrom: currentPosition
	
	^currentPosition fourNeighbors includes: newPosition
	! !
!TerniLapilli methodsFor: 'private - coordinates validation' stamp: 'fr 11/2/2020 03:16:55'!
position: newPosition isReachableFromEdge: currentPosition
	
	^currentPosition fourNeighbors includes: newPosition
	! !

!methodRemoval: TerniLapilli #position:isReachableFrom: stamp: 'fr 11/2/2020 03:16:56'!
position: newPosition isReachableFrom: currentPosition
	
	^currentPosition fourNeighbors includes: newPosition
	!
!TerniLapilli methodsFor: 'private - coordinates validation' stamp: 'fr 11/2/2020 03:17:23' prior: 50885131!
isItGoingFromEdge: currentPosition to: newPosition

	^(self isAnEdge: currentPosition) and: [self position: newPosition isReachableFromEdge: currentPosition]
	! !

!testRun: #TerniLapilliTests #test01XPlaysFirstAndOAfter stamp: 'fr 11/2/2020 03:17:25'!
PASSED!

!testRun: #TerniLapilliTests #test02OPlaysSecondAndXAfter stamp: 'fr 11/2/2020 03:17:25'!
PASSED!

!testRun: #TerniLapilliTests #test03ODoesNotPlayFirst stamp: 'fr 11/2/2020 03:17:25'!
PASSED!

!testRun: #TerniLapilliTests #test04APlayerCanNotPlayTwoTimesInARow stamp: 'fr 11/2/2020 03:17:25'!
PASSED!

!testRun: #TerniLapilliTests #test05XPieceIsWhereHePutsIt stamp: 'fr 11/2/2020 03:17:25'!
PASSED!

!testRun: #TerniLapilliTests #test06OPieceIsWhereHePutsIt stamp: 'fr 11/2/2020 03:17:25'!
PASSED!

!testRun: #TerniLapilliTests #test07XPieceIsNotWhereHeDoesNotPutIt stamp: 'fr 11/2/2020 03:17:25'!
PASSED!

!testRun: #TerniLapilliTests #test08OPieceIsNotWhereHeDoesNotPutIt stamp: 'fr 11/2/2020 03:17:25'!
PASSED!

!testRun: #TerniLapilliTests #test09XCanPutMoreThanOnePieceCorrectly stamp: 'fr 11/2/2020 03:17:25'!
PASSED!

!testRun: #TerniLapilliTests #test10OCanPutMoreThanOnePieceCorrectly stamp: 'fr 11/2/2020 03:17:25'!
PASSED!

!testRun: #TerniLapilliTests #test11OCanNotPutAPieceInAnOccupiedPosition stamp: 'fr 11/2/2020 03:17:25'!
PASSED!

!testRun: #TerniLapilliTests #test12XCanNotPutAPieceInAnOccupiedPosition stamp: 'fr 11/2/2020 03:17:25'!
PASSED!

!testRun: #TerniLapilliTests #test13XCanNotPutAPieceOutOfBounds stamp: 'fr 11/2/2020 03:17:25'!
PASSED!

!testRun: #TerniLapilliTests #test14OCanNotPutAPieceOutOfBounds stamp: 'fr 11/2/2020 03:17:25'!
PASSED!

!testRun: #TerniLapilliTests #test15XCanNotPutMoreThanThreePieces stamp: 'fr 11/2/2020 03:17:25'!
PASSED!

!testRun: #TerniLapilliTests #test16OCanNotPutMoreThanThreePieces stamp: 'fr 11/2/2020 03:17:25'!
PASSED!

!testRun: #TerniLapilliTests #test17WhenXMovesAPieceItIsAtTheNewPositionAndNotAtThePreviousOne stamp: 'fr 11/2/2020 03:17:25'!
PASSED!

!testRun: #TerniLapilliTests #test18WhenOMovesAPieceItIsAtTheNewPositionAndNotAtThePreviousOne stamp: 'fr 11/2/2020 03:17:25'!
PASSED!

!testRun: #TerniLapilliTests #test19XCanNotMoveBeforeAddingThreePieces stamp: 'fr 11/2/2020 03:17:25'!
PASSED!

!testRun: #TerniLapilliTests #test20OCanNotMoveBeforeAddingThreePieces stamp: 'fr 11/2/2020 03:17:25'!
PASSED!

!testRun: #TerniLapilliTests #test21XCanNotMoveFromAPositionThatIsNotUnderHisControl stamp: 'fr 11/2/2020 03:17:25'!
PASSED!

!testRun: #TerniLapilliTests #test22OCanNotMoveFromAPositionThatIsNotUnderHisControl stamp: 'fr 11/2/2020 03:17:25'!
PASSED!

!testRun: #TerniLapilliTests #test23XCanNotMoveFromAnOutOfBoundsPosition stamp: 'fr 11/2/2020 03:17:25'!
PASSED!

!testRun: #TerniLapilliTests #test24OCanNotMoveFromAnOutOfBoundsPosition stamp: 'fr 11/2/2020 03:17:25'!
PASSED!

!testRun: #TerniLapilliTests #test25XCanNotMoveToAnOutOfBoundsPosition stamp: 'fr 11/2/2020 03:17:25'!
PASSED!

!testRun: #TerniLapilliTests #test26OCanNotMoveToAnOutOfBoundsPosition stamp: 'fr 11/2/2020 03:17:25'!
PASSED!

!testRun: #TerniLapilliTests #test27XCanNotMoveToAnOccupiedPosition stamp: 'fr 11/2/2020 03:17:25'!
PASSED!

!testRun: #TerniLapilliTests #test28OCanNotMoveToAnOccupiedPosition stamp: 'fr 11/2/2020 03:17:25'!
PASSED!

!testRun: #TerniLapilliTests #test29XCanNotMoveBetweenPositionsThatAreMoreThanOnePlaceAfar stamp: 'fr 11/2/2020 03:17:25'!
PASSED!

!testRun: #TerniLapilliTests #test30OCanNotMoveBetweenPositionsThatAreMoreThanOnePlaceAfar stamp: 'fr 11/2/2020 03:17:25'!
PASSED!

!testRun: #TerniLapilliTests #test31NoPlayerHasWonIfNoneOfThemHasThreePiecesInLine stamp: 'fr 11/2/2020 03:17:25'!
PASSED!

!testRun: #TerniLapilliTests #test32XWinsWhenHeGetsThreePiecesInTheSameRow stamp: 'fr 11/2/2020 03:17:25'!
PASSED!

!testRun: #TerniLapilliTests #test33XWinsWhenHeGetsThreePiecesInTheSameColumn stamp: 'fr 11/2/2020 03:17:25'!
PASSED!

!testRun: #TerniLapilliTests #test34XWinsWhenHeGetsThreePiecesInTheMainDiagonal stamp: 'fr 11/2/2020 03:17:25'!
PASSED!

!testRun: #TerniLapilliTests #test35XWinsWhenHeGetsThreePiecesInTheSecondaryDiagonal stamp: 'fr 11/2/2020 03:17:25'!
PASSED!

!testRun: #TerniLapilliTests #test36OWinsWhenHeGetsThreePiecesInLine stamp: 'fr 11/2/2020 03:17:25'!
PASSED!

!testRun: #TerniLapilliTests #test37OCanNotPutAfterGameIsOver stamp: 'fr 11/2/2020 03:17:25'!
PASSED!

!testRun: #TerniLapilliTests #test38XCanNotMoveAfterGameIsOver stamp: 'fr 11/2/2020 03:17:25'!
PASSED!

!testRun: #TerniLapilliTests #test39OCanNotMoveAfterGameIsOver stamp: 'fr 11/2/2020 03:17:25'!
PASSED!

!testRun: #TerniLapilliTests #test40ItIsNoOnesTurnAfterGameIsOver stamp: 'fr 11/2/2020 03:17:25'!
PASSED!
!TerniLapilli methodsFor: 'private - coordinates validation' stamp: 'fr 11/2/2020 03:18:01'!
position: newPosition isReachableFromCornerOrCenter: currentPosition

	^currentPosition eightNeighbors includes: newPosition
	! !
!TerniLapilli methodsFor: 'private - coordinates validation' stamp: 'fr 11/2/2020 03:18:27' prior: 50885144!
isItgoingFromCornerOrCenter: currentPosition to: newPosition

	^(self isACornerOrCenter: currentPosition) and: [self position: newPosition isReachableFromCornerOrCenter: currentPosition] 
	! !

!testRun: #TerniLapilliTests #test01XPlaysFirstAndOAfter stamp: 'fr 11/2/2020 03:18:30'!
PASSED!

!testRun: #TerniLapilliTests #test02OPlaysSecondAndXAfter stamp: 'fr 11/2/2020 03:18:30'!
PASSED!

!testRun: #TerniLapilliTests #test03ODoesNotPlayFirst stamp: 'fr 11/2/2020 03:18:30'!
PASSED!

!testRun: #TerniLapilliTests #test04APlayerCanNotPlayTwoTimesInARow stamp: 'fr 11/2/2020 03:18:30'!
PASSED!

!testRun: #TerniLapilliTests #test05XPieceIsWhereHePutsIt stamp: 'fr 11/2/2020 03:18:30'!
PASSED!

!testRun: #TerniLapilliTests #test06OPieceIsWhereHePutsIt stamp: 'fr 11/2/2020 03:18:30'!
PASSED!

!testRun: #TerniLapilliTests #test07XPieceIsNotWhereHeDoesNotPutIt stamp: 'fr 11/2/2020 03:18:30'!
PASSED!

!testRun: #TerniLapilliTests #test08OPieceIsNotWhereHeDoesNotPutIt stamp: 'fr 11/2/2020 03:18:30'!
PASSED!

!testRun: #TerniLapilliTests #test09XCanPutMoreThanOnePieceCorrectly stamp: 'fr 11/2/2020 03:18:30'!
PASSED!

!testRun: #TerniLapilliTests #test10OCanPutMoreThanOnePieceCorrectly stamp: 'fr 11/2/2020 03:18:30'!
PASSED!

!testRun: #TerniLapilliTests #test11OCanNotPutAPieceInAnOccupiedPosition stamp: 'fr 11/2/2020 03:18:30'!
PASSED!

!testRun: #TerniLapilliTests #test12XCanNotPutAPieceInAnOccupiedPosition stamp: 'fr 11/2/2020 03:18:30'!
PASSED!

!testRun: #TerniLapilliTests #test13XCanNotPutAPieceOutOfBounds stamp: 'fr 11/2/2020 03:18:30'!
PASSED!

!testRun: #TerniLapilliTests #test14OCanNotPutAPieceOutOfBounds stamp: 'fr 11/2/2020 03:18:30'!
PASSED!

!testRun: #TerniLapilliTests #test15XCanNotPutMoreThanThreePieces stamp: 'fr 11/2/2020 03:18:30'!
PASSED!

!testRun: #TerniLapilliTests #test16OCanNotPutMoreThanThreePieces stamp: 'fr 11/2/2020 03:18:30'!
PASSED!

!testRun: #TerniLapilliTests #test17WhenXMovesAPieceItIsAtTheNewPositionAndNotAtThePreviousOne stamp: 'fr 11/2/2020 03:18:30'!
PASSED!

!testRun: #TerniLapilliTests #test18WhenOMovesAPieceItIsAtTheNewPositionAndNotAtThePreviousOne stamp: 'fr 11/2/2020 03:18:30'!
PASSED!

!testRun: #TerniLapilliTests #test19XCanNotMoveBeforeAddingThreePieces stamp: 'fr 11/2/2020 03:18:30'!
PASSED!

!testRun: #TerniLapilliTests #test20OCanNotMoveBeforeAddingThreePieces stamp: 'fr 11/2/2020 03:18:30'!
PASSED!

!testRun: #TerniLapilliTests #test21XCanNotMoveFromAPositionThatIsNotUnderHisControl stamp: 'fr 11/2/2020 03:18:30'!
PASSED!

!testRun: #TerniLapilliTests #test22OCanNotMoveFromAPositionThatIsNotUnderHisControl stamp: 'fr 11/2/2020 03:18:30'!
PASSED!

!testRun: #TerniLapilliTests #test23XCanNotMoveFromAnOutOfBoundsPosition stamp: 'fr 11/2/2020 03:18:30'!
PASSED!

!testRun: #TerniLapilliTests #test24OCanNotMoveFromAnOutOfBoundsPosition stamp: 'fr 11/2/2020 03:18:30'!
PASSED!

!testRun: #TerniLapilliTests #test25XCanNotMoveToAnOutOfBoundsPosition stamp: 'fr 11/2/2020 03:18:30'!
PASSED!

!testRun: #TerniLapilliTests #test26OCanNotMoveToAnOutOfBoundsPosition stamp: 'fr 11/2/2020 03:18:30'!
PASSED!

!testRun: #TerniLapilliTests #test27XCanNotMoveToAnOccupiedPosition stamp: 'fr 11/2/2020 03:18:30'!
PASSED!

!testRun: #TerniLapilliTests #test28OCanNotMoveToAnOccupiedPosition stamp: 'fr 11/2/2020 03:18:30'!
PASSED!

!testRun: #TerniLapilliTests #test29XCanNotMoveBetweenPositionsThatAreMoreThanOnePlaceAfar stamp: 'fr 11/2/2020 03:18:30'!
PASSED!

!testRun: #TerniLapilliTests #test30OCanNotMoveBetweenPositionsThatAreMoreThanOnePlaceAfar stamp: 'fr 11/2/2020 03:18:30'!
PASSED!

!testRun: #TerniLapilliTests #test31NoPlayerHasWonIfNoneOfThemHasThreePiecesInLine stamp: 'fr 11/2/2020 03:18:30'!
PASSED!

!testRun: #TerniLapilliTests #test32XWinsWhenHeGetsThreePiecesInTheSameRow stamp: 'fr 11/2/2020 03:18:30'!
PASSED!

!testRun: #TerniLapilliTests #test33XWinsWhenHeGetsThreePiecesInTheSameColumn stamp: 'fr 11/2/2020 03:18:30'!
PASSED!

!testRun: #TerniLapilliTests #test34XWinsWhenHeGetsThreePiecesInTheMainDiagonal stamp: 'fr 11/2/2020 03:18:30'!
PASSED!

!testRun: #TerniLapilliTests #test35XWinsWhenHeGetsThreePiecesInTheSecondaryDiagonal stamp: 'fr 11/2/2020 03:18:30'!
PASSED!

!testRun: #TerniLapilliTests #test36OWinsWhenHeGetsThreePiecesInLine stamp: 'fr 11/2/2020 03:18:30'!
PASSED!

!testRun: #TerniLapilliTests #test37OCanNotPutAfterGameIsOver stamp: 'fr 11/2/2020 03:18:30'!
PASSED!

!testRun: #TerniLapilliTests #test38XCanNotMoveAfterGameIsOver stamp: 'fr 11/2/2020 03:18:30'!
PASSED!

!testRun: #TerniLapilliTests #test39OCanNotMoveAfterGameIsOver stamp: 'fr 11/2/2020 03:18:30'!
PASSED!

!testRun: #TerniLapilliTests #test40ItIsNoOnesTurnAfterGameIsOver stamp: 'fr 11/2/2020 03:18:30'!
PASSED!

----SNAPSHOT----(2 November 2020 03:18:39) CuisUniversity-4384.image priorSource: 17825851!
!TerniLapilli methodsFor: 'private - coordinates validation' stamp: 'fr 11/2/2020 03:19:39'!
isAnEdge: currentPosition andIsReachable: newPosition

	^(self isAnEdge: currentPosition) and: [self position: newPosition isReachableFromEdge: currentPosition]
	! !
!TerniLapilli methodsFor: 'as yet unclassified' stamp: 'fr 11/2/2020 03:19:39' prior: 50883923!
itIsValidToGoFrom: currentPosition to: newPosition

	^(self isItgoingFromCornerOrCenter: currentPosition to: newPosition) or: [self isAnEdge: currentPosition andIsReachable: newPosition]
	! !

!methodRemoval: TerniLapilli #isItGoingFromEdge:to: stamp: 'fr 11/2/2020 03:19:39'!
isItGoingFromEdge: currentPosition to: newPosition

	^(self isAnEdge: currentPosition) and: [self position: newPosition isReachableFromEdge: currentPosition]
	!
!TerniLapilli methodsFor: 'private - coordinates validation' stamp: 'fr 11/2/2020 03:20:02'!
isaCornerOrCenter: currentPosition andIsReachable: newPosition

	^(self isACornerOrCenter: currentPosition) and: [self position: newPosition isReachableFromCornerOrCenter: currentPosition] 
	! !
!TerniLapilli methodsFor: 'as yet unclassified' stamp: 'fr 11/2/2020 03:20:02' prior: 50889903!
itIsValidToGoFrom: currentPosition to: newPosition

	^(self isaCornerOrCenter: currentPosition andIsReachable: newPosition) or: [self isAnEdge: currentPosition andIsReachable: newPosition]
	! !

!methodRemoval: TerniLapilli #isItgoingFromCornerOrCenter:to: stamp: 'fr 11/2/2020 03:20:02'!
isItgoingFromCornerOrCenter: currentPosition to: newPosition

	^(self isACornerOrCenter: currentPosition) and: [self position: newPosition isReachableFromCornerOrCenter: currentPosition] 
	!

!testRun: #TerniLapilliTests #test01XPlaysFirstAndOAfter stamp: 'fr 11/2/2020 03:20:04'!
PASSED!

!testRun: #TerniLapilliTests #test02OPlaysSecondAndXAfter stamp: 'fr 11/2/2020 03:20:04'!
PASSED!

!testRun: #TerniLapilliTests #test03ODoesNotPlayFirst stamp: 'fr 11/2/2020 03:20:04'!
PASSED!

!testRun: #TerniLapilliTests #test04APlayerCanNotPlayTwoTimesInARow stamp: 'fr 11/2/2020 03:20:04'!
PASSED!

!testRun: #TerniLapilliTests #test05XPieceIsWhereHePutsIt stamp: 'fr 11/2/2020 03:20:04'!
PASSED!

!testRun: #TerniLapilliTests #test06OPieceIsWhereHePutsIt stamp: 'fr 11/2/2020 03:20:04'!
PASSED!

!testRun: #TerniLapilliTests #test07XPieceIsNotWhereHeDoesNotPutIt stamp: 'fr 11/2/2020 03:20:04'!
PASSED!

!testRun: #TerniLapilliTests #test08OPieceIsNotWhereHeDoesNotPutIt stamp: 'fr 11/2/2020 03:20:04'!
PASSED!

!testRun: #TerniLapilliTests #test09XCanPutMoreThanOnePieceCorrectly stamp: 'fr 11/2/2020 03:20:04'!
PASSED!

!testRun: #TerniLapilliTests #test10OCanPutMoreThanOnePieceCorrectly stamp: 'fr 11/2/2020 03:20:04'!
PASSED!

!testRun: #TerniLapilliTests #test11OCanNotPutAPieceInAnOccupiedPosition stamp: 'fr 11/2/2020 03:20:04'!
PASSED!

!testRun: #TerniLapilliTests #test12XCanNotPutAPieceInAnOccupiedPosition stamp: 'fr 11/2/2020 03:20:04'!
PASSED!

!testRun: #TerniLapilliTests #test13XCanNotPutAPieceOutOfBounds stamp: 'fr 11/2/2020 03:20:04'!
PASSED!

!testRun: #TerniLapilliTests #test14OCanNotPutAPieceOutOfBounds stamp: 'fr 11/2/2020 03:20:04'!
PASSED!

!testRun: #TerniLapilliTests #test15XCanNotPutMoreThanThreePieces stamp: 'fr 11/2/2020 03:20:04'!
PASSED!

!testRun: #TerniLapilliTests #test16OCanNotPutMoreThanThreePieces stamp: 'fr 11/2/2020 03:20:04'!
PASSED!

!testRun: #TerniLapilliTests #test17WhenXMovesAPieceItIsAtTheNewPositionAndNotAtThePreviousOne stamp: 'fr 11/2/2020 03:20:04'!
PASSED!

!testRun: #TerniLapilliTests #test18WhenOMovesAPieceItIsAtTheNewPositionAndNotAtThePreviousOne stamp: 'fr 11/2/2020 03:20:04'!
PASSED!

!testRun: #TerniLapilliTests #test19XCanNotMoveBeforeAddingThreePieces stamp: 'fr 11/2/2020 03:20:04'!
PASSED!

!testRun: #TerniLapilliTests #test20OCanNotMoveBeforeAddingThreePieces stamp: 'fr 11/2/2020 03:20:04'!
PASSED!

!testRun: #TerniLapilliTests #test21XCanNotMoveFromAPositionThatIsNotUnderHisControl stamp: 'fr 11/2/2020 03:20:04'!
PASSED!

!testRun: #TerniLapilliTests #test22OCanNotMoveFromAPositionThatIsNotUnderHisControl stamp: 'fr 11/2/2020 03:20:04'!
PASSED!

!testRun: #TerniLapilliTests #test23XCanNotMoveFromAnOutOfBoundsPosition stamp: 'fr 11/2/2020 03:20:04'!
PASSED!

!testRun: #TerniLapilliTests #test24OCanNotMoveFromAnOutOfBoundsPosition stamp: 'fr 11/2/2020 03:20:04'!
PASSED!

!testRun: #TerniLapilliTests #test25XCanNotMoveToAnOutOfBoundsPosition stamp: 'fr 11/2/2020 03:20:04'!
PASSED!

!testRun: #TerniLapilliTests #test26OCanNotMoveToAnOutOfBoundsPosition stamp: 'fr 11/2/2020 03:20:04'!
PASSED!

!testRun: #TerniLapilliTests #test27XCanNotMoveToAnOccupiedPosition stamp: 'fr 11/2/2020 03:20:04'!
PASSED!

!testRun: #TerniLapilliTests #test28OCanNotMoveToAnOccupiedPosition stamp: 'fr 11/2/2020 03:20:04'!
PASSED!

!testRun: #TerniLapilliTests #test29XCanNotMoveBetweenPositionsThatAreMoreThanOnePlaceAfar stamp: 'fr 11/2/2020 03:20:04'!
PASSED!

!testRun: #TerniLapilliTests #test30OCanNotMoveBetweenPositionsThatAreMoreThanOnePlaceAfar stamp: 'fr 11/2/2020 03:20:04'!
PASSED!

!testRun: #TerniLapilliTests #test31NoPlayerHasWonIfNoneOfThemHasThreePiecesInLine stamp: 'fr 11/2/2020 03:20:04'!
PASSED!

!testRun: #TerniLapilliTests #test32XWinsWhenHeGetsThreePiecesInTheSameRow stamp: 'fr 11/2/2020 03:20:04'!
PASSED!

!testRun: #TerniLapilliTests #test33XWinsWhenHeGetsThreePiecesInTheSameColumn stamp: 'fr 11/2/2020 03:20:04'!
PASSED!

!testRun: #TerniLapilliTests #test34XWinsWhenHeGetsThreePiecesInTheMainDiagonal stamp: 'fr 11/2/2020 03:20:04'!
PASSED!

!testRun: #TerniLapilliTests #test35XWinsWhenHeGetsThreePiecesInTheSecondaryDiagonal stamp: 'fr 11/2/2020 03:20:04'!
PASSED!

!testRun: #TerniLapilliTests #test36OWinsWhenHeGetsThreePiecesInLine stamp: 'fr 11/2/2020 03:20:04'!
PASSED!

!testRun: #TerniLapilliTests #test37OCanNotPutAfterGameIsOver stamp: 'fr 11/2/2020 03:20:04'!
PASSED!

!testRun: #TerniLapilliTests #test38XCanNotMoveAfterGameIsOver stamp: 'fr 11/2/2020 03:20:04'!
PASSED!

!testRun: #TerniLapilliTests #test39OCanNotMoveAfterGameIsOver stamp: 'fr 11/2/2020 03:20:04'!
PASSED!

!testRun: #TerniLapilliTests #test40ItIsNoOnesTurnAfterGameIsOver stamp: 'fr 11/2/2020 03:20:04'!
PASSED!

game _ TerniLapilli new.

game putXAt: 1@1. 
game putOAt: 2@1. 
game putXAt: 1@2. 
game putOAt: 2@2.
game putXAt: 2@3.
game putOAt: 3@1.
game moveXFrom: 2@3 to: 3@2. !

game _ TerniLapilli new.

game putXAt: 1@1. 
game putOAt: 2@1. 
game putXAt: 1@2. 
game putOAt: 2@2.
game putXAt: 2@3.
game putOAt: 3@1.
game moveXFrom: 2@3 to: 3@3.!

game _ TerniLapilli new.

game putXAt: 1@1. 
game putOAt: 2@1. 
game putXAt: 1@2. 
game putOAt: 2@3.
game putXAt: 2@3.
game putOAt: 3@1.
game moveXFrom: 2@3 to: 2@2. !

game _ TerniLapilli new.!

game putXAt: 1@1. !

game putOAt: 2@1. !

game putXAt: 1@2. !

game putOAt: 2@3.!

game putXAt: 2@3.!

game _ TerniLapilli new.

game putXAt: 1@1. 
game putOAt: 2@1. 
game putXAt: 1@2. 
game putOAt: 2@3.
game putXAt: 2@2.
game putOAt: 3@1.
game moveXFrom: 2@2 to: 3@3. !

game _ TerniLapilli new.

game putXAt: 1@1. 
game putOAt: 2@1. 
game putXAt: 1@2. 
game putOAt: 2@3.
game putXAt: 2@2.
game putOAt: 3@1.
game moveXFrom: 2@2 to: 1@3. !

game hasXWon !

game hasOWon !
!TerniLapilliTests methodsFor: 'tests - turn' stamp: 'fr 11/2/2020 03:24:28' prior: 50883464!
test04APlayerCanNotPlayTwoTimesInARow

	| terniLapilli |
	terniLapilli _ TerniLapilli new.
	self should: 		[ terniLapilli putXAt: 1 @ 2
					      ;putXAt: 1 @ 1.] 
		raise: Error  
		withMessageText: TerniLapilli playerOTurnErrorDescription! !
!OAdding class methodsFor: 'handle' stamp: 'fr 11/2/2020 03:31:22' prior: 50881411!
canHandle: aTerniLapilli

	^(aTerniLapilli OhasPiecesToAdd) and: [aTerniLapilli isXsTurn] and: [aTerniLapilli OHasThreeInLine not] and: [aTerniLapilli XHasThreeInLine not]

	! !
!OMoving class methodsFor: 'handle' stamp: 'fr 11/2/2020 03:31:35' prior: 50881402!
canHandle: aTerniLapilli

	^(aTerniLapilli OhasPiecesToAdd) not and: [aTerniLapilli isXsTurn] and: [aTerniLapilli OHasThreeInLine not] and: [aTerniLapilli XHasThreeInLine not]

	! !
!OMoving class methodsFor: 'handle' stamp: 'fr 11/2/2020 03:31:44' prior: 50890141!
canHandle: aTerniLapilli

	^(aTerniLapilli hasPiecesToAdd: #O) not and: [aTerniLapilli isXsTurn] and: [aTerniLapilli OHasThreeInLine not] and: [aTerniLapilli XHasThreeInLine not]

	! !
!OAdding class methodsFor: 'handle' stamp: 'fr 11/2/2020 03:31:58' prior: 50890132!
canHandle: aTerniLapilli

	^(aTerniLapilli hasPiecesToAdd: #O) and: [aTerniLapilli isXsTurn] and: [aTerniLapilli OHasThreeInLine not] and: [aTerniLapilli XHasThreeInLine not]

	! !
!TerniLapilli methodsFor: 'private - win' stamp: 'fr 11/2/2020 03:36:39' prior: 50880078!
hasThreeInLine: playerId

	| playerPositions |
	
	playerPositions _ self positionsFor: playerId.
	
	^   (self threeInARow: playerPositions ) 
	or: [self threeInAColumn: playerPositions ] 
	or: [self threeInMainDiagonal: playerPositions] 
	or: [self threeInSecondaryDiagonal: playerPositions]! !
!TerniLapilli methodsFor: 'private - win' stamp: 'fr 11/2/2020 03:36:49' prior: 50881260!
XHasThreeInLine

	^self hasThreeInLine: #X! !
!TerniLapilli methodsFor: 'private - win' stamp: 'fr 11/2/2020 03:36:54' prior: 50881265!
OHasThreeInLine

	^self hasThreeInLine: #O! !

!methodRemoval: TerniLapilli #OHasThreeInLine stamp: 'fr 11/2/2020 03:37:30'!
OHasThreeInLine

	^self hasThreeInLine: #O!
!OAdding class methodsFor: 'handle' stamp: 'fr 11/2/2020 03:37:54' prior: 50890159!
canHandle: aTerniLapilli

	^(aTerniLapilli hasPiecesToAdd: #O) and: [aTerniLapilli isXsTurn] and: [(aTerniLapilli hasThreeInLine: #O) not] and: [aTerniLapilli XHasThreeInLine not]

	! !
!OAdding class methodsFor: 'handle' stamp: 'fr 11/2/2020 03:38:17' prior: 50890194!
canHandle: aTerniLapilli

	^(aTerniLapilli hasPiecesToAdd: #O) and: [aTerniLapilli isXsTurn] and: [aTerniLapilli OHasThreeInLine not] and: [aTerniLapilli XHasThreeInLine not]

	! !
!TerniLapilli methodsFor: 'private - win' stamp: 'fr 11/2/2020 03:38:25'!
OHasThreeInLine

	^self hasThreeInLine: #O! !
!OAdding class methodsFor: 'handle' stamp: 'fr 11/2/2020 03:38:39' prior: 50890203!
canHandle: aTerniLapilli

	^(aTerniLapilli OhasPiecesToAdd) and: [aTerniLapilli isXsTurn] and: [aTerniLapilli OHasThreeInLine not] and: [aTerniLapilli XHasThreeInLine not]

	! !
!OMoving class methodsFor: 'handle' stamp: 'fr 11/2/2020 03:38:55' prior: 50890150!
canHandle: aTerniLapilli

	^(aTerniLapilli OhasPiecesToAdd) not and: [aTerniLapilli isXsTurn] and: [aTerniLapilli OHasThreeInLine not] and: [aTerniLapilli XHasThreeInLine not]

	! !
!XAdding class methodsFor: 'handle' stamp: 'fr 11/2/2020 03:39:09' prior: 50881393!
canHandle: aTerniLapilli

	^(aTerniLapilli XhasPiecesToAdd) and: [aTerniLapilli isOsTurn] and: [aTerniLapilli OHasThreeInLine not] and: [aTerniLapilli XHasThreeInLine not]

	! !
!XMoving class methodsFor: 'handle' stamp: 'fr 11/2/2020 03:39:18' prior: 50881384!
canHandle: aTerniLapilli

	^(aTerniLapilli XhasPiecesToAdd) not and: [aTerniLapilli isOsTurn] and: [aTerniLapilli OHasThreeInLine not] and: [aTerniLapilli XHasThreeInLine not]

	! !
!TerniLapilli methodsFor: 'private - game state' stamp: 'fr 11/2/2020 03:40:09'!
OHasPiecesToAdd

	 ^self hasPiecesToAdd: #O
! !
!OAdding class methodsFor: 'handle' stamp: 'fr 11/2/2020 03:40:15' prior: 50890216!
canHandle: aTerniLapilli

	^(aTerniLapilli OHasPiecesToAdd) and: [aTerniLapilli isXsTurn] and: [aTerniLapilli OHasThreeInLine not] and: [aTerniLapilli XHasThreeInLine not]

	! !
!OMoving class methodsFor: 'handle' stamp: 'fr 11/2/2020 03:40:20' prior: 50890225!
canHandle: aTerniLapilli

	^(aTerniLapilli OHasPiecesToAdd) not and: [aTerniLapilli isXsTurn] and: [aTerniLapilli OHasThreeInLine not] and: [aTerniLapilli XHasThreeInLine not]

	! !
!XAdding class methodsFor: 'handle' stamp: 'fr 11/2/2020 03:40:29' prior: 50890234!
canHandle: aTerniLapilli

	^(aTerniLapilli XHasPiecesToAdd) and: [aTerniLapilli isOsTurn] and: [aTerniLapilli OHasThreeInLine not] and: [aTerniLapilli XHasThreeInLine not]

	! !
!XMoving class methodsFor: 'handle' stamp: 'fr 11/2/2020 03:40:33' prior: 50890243!
canHandle: aTerniLapilli

	^(aTerniLapilli XHasPiecesToAdd) not and: [aTerniLapilli isOsTurn] and: [aTerniLapilli OHasThreeInLine not] and: [aTerniLapilli XHasThreeInLine not]

	! !
!TerniLapilli methodsFor: 'private - game state' stamp: 'fr 11/2/2020 03:40:44'!
XHasPiecesToAdd

	 ^self hasPiecesToAdd: #X
! !
!OAdding class methodsFor: 'handle' stamp: 'fr 11/2/2020 03:44:51'!
isTimeForOToPlay: aTerniLapilli and: aBlockAboutPiecesToAdd

	^(aBlockAboutPiecesToAdd value: (aTerniLapilli OHasPiecesToAdd)) and: [aTerniLapilli isXsTurn] and: [aTerniLapilli OHasThreeInLine not] and: [aTerniLapilli XHasThreeInLine not]

	! !
!TerniLapilliState class methodsFor: 'nil' stamp: 'fr 11/2/2020 03:45:49'!
isTimeForOToPlay: aTerniLapilli and: aBlockAboutPiecesToAdd

	^(aBlockAboutPiecesToAdd value: (aTerniLapilli OHasPiecesToAdd)) and: [aTerniLapilli isXsTurn] and: [aTerniLapilli OHasThreeInLine not] and: [aTerniLapilli XHasThreeInLine not]! !
!OAdding class methodsFor: 'handle' stamp: 'fr 11/2/2020 03:46:23'!
isOsTimeToPlay: aTerniLapilli and: aBlockAboutPiecesToAdd

	^(aBlockAboutPiecesToAdd value: (aTerniLapilli OHasPiecesToAdd)) and: [aTerniLapilli isXsTurn] and: [aTerniLapilli OHasThreeInLine not] and: [aTerniLapilli XHasThreeInLine not]

	! !
!TerniLapilliState class methodsFor: 'handling conditions' stamp: 'fr 11/2/2020 03:46:23'!
isOsTimeToPlay: aTerniLapilli and: aBlockAboutPiecesToAdd

	^(aBlockAboutPiecesToAdd value: (aTerniLapilli OHasPiecesToAdd)) and: [aTerniLapilli isXsTurn] and: [aTerniLapilli OHasThreeInLine not] and: [aTerniLapilli XHasThreeInLine not]! !

!methodRemoval: OAdding class #isTimeForOToPlay:and: stamp: 'fr 11/2/2020 03:46:23'!
isTimeForOToPlay: aTerniLapilli and: aBlockAboutPiecesToAdd

	^(aBlockAboutPiecesToAdd value: (aTerniLapilli OHasPiecesToAdd)) and: [aTerniLapilli isXsTurn] and: [aTerniLapilli OHasThreeInLine not] and: [aTerniLapilli XHasThreeInLine not]

	!

!methodRemoval: TerniLapilliState class #isTimeForOToPlay:and: stamp: 'fr 11/2/2020 03:46:23'!
isTimeForOToPlay: aTerniLapilli and: aBlockAboutPiecesToAdd

	^(aBlockAboutPiecesToAdd value: (aTerniLapilli OHasPiecesToAdd)) and: [aTerniLapilli isXsTurn] and: [aTerniLapilli OHasThreeInLine not] and: [aTerniLapilli XHasThreeInLine not]!

!methodRemoval: OAdding class #isOsTimeToPlay:and: stamp: 'fr 11/2/2020 03:46:29'!
isOsTimeToPlay: aTerniLapilli and: aBlockAboutPiecesToAdd

	^(aBlockAboutPiecesToAdd value: (aTerniLapilli OHasPiecesToAdd)) and: [aTerniLapilli isXsTurn] and: [aTerniLapilli OHasThreeInLine not] and: [aTerniLapilli XHasThreeInLine not]

	!
!OAdding class methodsFor: 'handle' stamp: 'fr 11/2/2020 03:47:19' prior: 50890257!
canHandle: aTerniLapilli

	^self isOsTimeToPlay: aTerniLapilli and: [:hasPiecesToAdd | hasPiecesToAdd ] 

	! !

!testRun: #TerniLapilliTests #test01XPlaysFirstAndOAfter stamp: 'fr 11/2/2020 03:47:30'!
PASSED!

!testRun: #TerniLapilliTests #test02OPlaysSecondAndXAfter stamp: 'fr 11/2/2020 03:47:30'!
PASSED!

!testRun: #TerniLapilliTests #test03ODoesNotPlayFirst stamp: 'fr 11/2/2020 03:47:30'!
PASSED!

!testRun: #TerniLapilliTests #test04APlayerCanNotPlayTwoTimesInARow stamp: 'fr 11/2/2020 03:47:30'!
PASSED!

!testRun: #TerniLapilliTests #test05XPieceIsWhereHePutsIt stamp: 'fr 11/2/2020 03:47:30'!
PASSED!

!testRun: #TerniLapilliTests #test06OPieceIsWhereHePutsIt stamp: 'fr 11/2/2020 03:47:30'!
PASSED!

!testRun: #TerniLapilliTests #test07XPieceIsNotWhereHeDoesNotPutIt stamp: 'fr 11/2/2020 03:47:30'!
PASSED!

!testRun: #TerniLapilliTests #test08OPieceIsNotWhereHeDoesNotPutIt stamp: 'fr 11/2/2020 03:47:30'!
PASSED!

!testRun: #TerniLapilliTests #test09XCanPutMoreThanOnePieceCorrectly stamp: 'fr 11/2/2020 03:47:30'!
PASSED!

!testRun: #TerniLapilliTests #test10OCanPutMoreThanOnePieceCorrectly stamp: 'fr 11/2/2020 03:47:30'!
PASSED!

!testRun: #TerniLapilliTests #test11OCanNotPutAPieceInAnOccupiedPosition stamp: 'fr 11/2/2020 03:47:30'!
PASSED!

!testRun: #TerniLapilliTests #test12XCanNotPutAPieceInAnOccupiedPosition stamp: 'fr 11/2/2020 03:47:30'!
PASSED!

!testRun: #TerniLapilliTests #test13XCanNotPutAPieceOutOfBounds stamp: 'fr 11/2/2020 03:47:30'!
PASSED!

!testRun: #TerniLapilliTests #test14OCanNotPutAPieceOutOfBounds stamp: 'fr 11/2/2020 03:47:30'!
PASSED!

!testRun: #TerniLapilliTests #test15XCanNotPutMoreThanThreePieces stamp: 'fr 11/2/2020 03:47:30'!
PASSED!

!testRun: #TerniLapilliTests #test16OCanNotPutMoreThanThreePieces stamp: 'fr 11/2/2020 03:47:30'!
PASSED!

!testRun: #TerniLapilliTests #test17WhenXMovesAPieceItIsAtTheNewPositionAndNotAtThePreviousOne stamp: 'fr 11/2/2020 03:47:30'!
PASSED!

!testRun: #TerniLapilliTests #test18WhenOMovesAPieceItIsAtTheNewPositionAndNotAtThePreviousOne stamp: 'fr 11/2/2020 03:47:30'!
PASSED!

!testRun: #TerniLapilliTests #test19XCanNotMoveBeforeAddingThreePieces stamp: 'fr 11/2/2020 03:47:30'!
PASSED!

!testRun: #TerniLapilliTests #test20OCanNotMoveBeforeAddingThreePieces stamp: 'fr 11/2/2020 03:47:30'!
PASSED!

!testRun: #TerniLapilliTests #test21XCanNotMoveFromAPositionThatIsNotUnderHisControl stamp: 'fr 11/2/2020 03:47:30'!
PASSED!

!testRun: #TerniLapilliTests #test22OCanNotMoveFromAPositionThatIsNotUnderHisControl stamp: 'fr 11/2/2020 03:47:30'!
PASSED!

!testRun: #TerniLapilliTests #test23XCanNotMoveFromAnOutOfBoundsPosition stamp: 'fr 11/2/2020 03:47:30'!
PASSED!

!testRun: #TerniLapilliTests #test24OCanNotMoveFromAnOutOfBoundsPosition stamp: 'fr 11/2/2020 03:47:30'!
PASSED!

!testRun: #TerniLapilliTests #test25XCanNotMoveToAnOutOfBoundsPosition stamp: 'fr 11/2/2020 03:47:30'!
PASSED!

!testRun: #TerniLapilliTests #test26OCanNotMoveToAnOutOfBoundsPosition stamp: 'fr 11/2/2020 03:47:30'!
PASSED!

!testRun: #TerniLapilliTests #test27XCanNotMoveToAnOccupiedPosition stamp: 'fr 11/2/2020 03:47:30'!
PASSED!

!testRun: #TerniLapilliTests #test28OCanNotMoveToAnOccupiedPosition stamp: 'fr 11/2/2020 03:47:30'!
PASSED!

!testRun: #TerniLapilliTests #test29XCanNotMoveBetweenPositionsThatAreMoreThanOnePlaceAfar stamp: 'fr 11/2/2020 03:47:30'!
PASSED!

!testRun: #TerniLapilliTests #test30OCanNotMoveBetweenPositionsThatAreMoreThanOnePlaceAfar stamp: 'fr 11/2/2020 03:47:30'!
PASSED!

!testRun: #TerniLapilliTests #test31NoPlayerHasWonIfNoneOfThemHasThreePiecesInLine stamp: 'fr 11/2/2020 03:47:30'!
PASSED!

!testRun: #TerniLapilliTests #test32XWinsWhenHeGetsThreePiecesInTheSameRow stamp: 'fr 11/2/2020 03:47:30'!
PASSED!

!testRun: #TerniLapilliTests #test33XWinsWhenHeGetsThreePiecesInTheSameColumn stamp: 'fr 11/2/2020 03:47:30'!
PASSED!

!testRun: #TerniLapilliTests #test34XWinsWhenHeGetsThreePiecesInTheMainDiagonal stamp: 'fr 11/2/2020 03:47:30'!
PASSED!

!testRun: #TerniLapilliTests #test35XWinsWhenHeGetsThreePiecesInTheSecondaryDiagonal stamp: 'fr 11/2/2020 03:47:30'!
PASSED!

!testRun: #TerniLapilliTests #test36OWinsWhenHeGetsThreePiecesInLine stamp: 'fr 11/2/2020 03:47:30'!
PASSED!

!testRun: #TerniLapilliTests #test37OCanNotPutAfterGameIsOver stamp: 'fr 11/2/2020 03:47:30'!
PASSED!

!testRun: #TerniLapilliTests #test38XCanNotMoveAfterGameIsOver stamp: 'fr 11/2/2020 03:47:30'!
PASSED!

!testRun: #TerniLapilliTests #test39OCanNotMoveAfterGameIsOver stamp: 'fr 11/2/2020 03:47:30'!
PASSED!

!testRun: #TerniLapilliTests #test40ItIsNoOnesTurnAfterGameIsOver stamp: 'fr 11/2/2020 03:47:30'!
PASSED!
!OMoving class methodsFor: 'handle' stamp: 'fr 11/2/2020 03:47:43' prior: 50890266!
canHandle: aTerniLapilli

	^self isOsTimeToPlay: aTerniLapilli and: [:hasPiecesToAdd | hasPiecesToAdd not] 


	! !

!testRun: #TerniLapilliTests #test01XPlaysFirstAndOAfter stamp: 'fr 11/2/2020 03:47:44'!
PASSED!

!testRun: #TerniLapilliTests #test02OPlaysSecondAndXAfter stamp: 'fr 11/2/2020 03:47:44'!
PASSED!

!testRun: #TerniLapilliTests #test03ODoesNotPlayFirst stamp: 'fr 11/2/2020 03:47:44'!
PASSED!

!testRun: #TerniLapilliTests #test04APlayerCanNotPlayTwoTimesInARow stamp: 'fr 11/2/2020 03:47:44'!
PASSED!

!testRun: #TerniLapilliTests #test05XPieceIsWhereHePutsIt stamp: 'fr 11/2/2020 03:47:44'!
PASSED!

!testRun: #TerniLapilliTests #test06OPieceIsWhereHePutsIt stamp: 'fr 11/2/2020 03:47:44'!
PASSED!

!testRun: #TerniLapilliTests #test07XPieceIsNotWhereHeDoesNotPutIt stamp: 'fr 11/2/2020 03:47:44'!
PASSED!

!testRun: #TerniLapilliTests #test08OPieceIsNotWhereHeDoesNotPutIt stamp: 'fr 11/2/2020 03:47:44'!
PASSED!

!testRun: #TerniLapilliTests #test09XCanPutMoreThanOnePieceCorrectly stamp: 'fr 11/2/2020 03:47:44'!
PASSED!

!testRun: #TerniLapilliTests #test10OCanPutMoreThanOnePieceCorrectly stamp: 'fr 11/2/2020 03:47:44'!
PASSED!

!testRun: #TerniLapilliTests #test11OCanNotPutAPieceInAnOccupiedPosition stamp: 'fr 11/2/2020 03:47:44'!
PASSED!

!testRun: #TerniLapilliTests #test12XCanNotPutAPieceInAnOccupiedPosition stamp: 'fr 11/2/2020 03:47:44'!
PASSED!

!testRun: #TerniLapilliTests #test13XCanNotPutAPieceOutOfBounds stamp: 'fr 11/2/2020 03:47:44'!
PASSED!

!testRun: #TerniLapilliTests #test14OCanNotPutAPieceOutOfBounds stamp: 'fr 11/2/2020 03:47:44'!
PASSED!

!testRun: #TerniLapilliTests #test15XCanNotPutMoreThanThreePieces stamp: 'fr 11/2/2020 03:47:44'!
PASSED!

!testRun: #TerniLapilliTests #test16OCanNotPutMoreThanThreePieces stamp: 'fr 11/2/2020 03:47:44'!
PASSED!

!testRun: #TerniLapilliTests #test17WhenXMovesAPieceItIsAtTheNewPositionAndNotAtThePreviousOne stamp: 'fr 11/2/2020 03:47:44'!
PASSED!

!testRun: #TerniLapilliTests #test18WhenOMovesAPieceItIsAtTheNewPositionAndNotAtThePreviousOne stamp: 'fr 11/2/2020 03:47:44'!
PASSED!

!testRun: #TerniLapilliTests #test19XCanNotMoveBeforeAddingThreePieces stamp: 'fr 11/2/2020 03:47:44'!
PASSED!

!testRun: #TerniLapilliTests #test20OCanNotMoveBeforeAddingThreePieces stamp: 'fr 11/2/2020 03:47:44'!
PASSED!

!testRun: #TerniLapilliTests #test21XCanNotMoveFromAPositionThatIsNotUnderHisControl stamp: 'fr 11/2/2020 03:47:44'!
PASSED!

!testRun: #TerniLapilliTests #test22OCanNotMoveFromAPositionThatIsNotUnderHisControl stamp: 'fr 11/2/2020 03:47:44'!
PASSED!

!testRun: #TerniLapilliTests #test23XCanNotMoveFromAnOutOfBoundsPosition stamp: 'fr 11/2/2020 03:47:44'!
PASSED!

!testRun: #TerniLapilliTests #test24OCanNotMoveFromAnOutOfBoundsPosition stamp: 'fr 11/2/2020 03:47:44'!
PASSED!

!testRun: #TerniLapilliTests #test25XCanNotMoveToAnOutOfBoundsPosition stamp: 'fr 11/2/2020 03:47:44'!
PASSED!

!testRun: #TerniLapilliTests #test26OCanNotMoveToAnOutOfBoundsPosition stamp: 'fr 11/2/2020 03:47:44'!
PASSED!

!testRun: #TerniLapilliTests #test27XCanNotMoveToAnOccupiedPosition stamp: 'fr 11/2/2020 03:47:44'!
PASSED!

!testRun: #TerniLapilliTests #test28OCanNotMoveToAnOccupiedPosition stamp: 'fr 11/2/2020 03:47:44'!
PASSED!

!testRun: #TerniLapilliTests #test29XCanNotMoveBetweenPositionsThatAreMoreThanOnePlaceAfar stamp: 'fr 11/2/2020 03:47:44'!
PASSED!

!testRun: #TerniLapilliTests #test30OCanNotMoveBetweenPositionsThatAreMoreThanOnePlaceAfar stamp: 'fr 11/2/2020 03:47:44'!
PASSED!

!testRun: #TerniLapilliTests #test31NoPlayerHasWonIfNoneOfThemHasThreePiecesInLine stamp: 'fr 11/2/2020 03:47:44'!
PASSED!

!testRun: #TerniLapilliTests #test32XWinsWhenHeGetsThreePiecesInTheSameRow stamp: 'fr 11/2/2020 03:47:44'!
PASSED!

!testRun: #TerniLapilliTests #test33XWinsWhenHeGetsThreePiecesInTheSameColumn stamp: 'fr 11/2/2020 03:47:44'!
PASSED!

!testRun: #TerniLapilliTests #test34XWinsWhenHeGetsThreePiecesInTheMainDiagonal stamp: 'fr 11/2/2020 03:47:44'!
PASSED!

!testRun: #TerniLapilliTests #test35XWinsWhenHeGetsThreePiecesInTheSecondaryDiagonal stamp: 'fr 11/2/2020 03:47:44'!
PASSED!

!testRun: #TerniLapilliTests #test36OWinsWhenHeGetsThreePiecesInLine stamp: 'fr 11/2/2020 03:47:44'!
PASSED!

!testRun: #TerniLapilliTests #test37OCanNotPutAfterGameIsOver stamp: 'fr 11/2/2020 03:47:44'!
PASSED!

!testRun: #TerniLapilliTests #test38XCanNotMoveAfterGameIsOver stamp: 'fr 11/2/2020 03:47:44'!
PASSED!

!testRun: #TerniLapilliTests #test39OCanNotMoveAfterGameIsOver stamp: 'fr 11/2/2020 03:47:44'!
PASSED!

!testRun: #TerniLapilliTests #test40ItIsNoOnesTurnAfterGameIsOver stamp: 'fr 11/2/2020 03:47:44'!
PASSED!
!TerniLapilliState class methodsFor: 'handling conditions' stamp: 'fr 11/2/2020 03:47:52'!
isXsTimeToPlay: aTerniLapilli and: aBlockAboutPiecesToAdd

	^(aBlockAboutPiecesToAdd value: (aTerniLapilli OHasPiecesToAdd)) and: [aTerniLapilli isXsTurn] and: [aTerniLapilli OHasThreeInLine not] and: [aTerniLapilli XHasThreeInLine not]! !
!TerniLapilliState class methodsFor: 'handling conditions' stamp: 'fr 11/2/2020 03:48:02' prior: 50890665!
isXsTimeToPlay: aTerniLapilli and: aBlockAboutPiecesToAdd

	^(aBlockAboutPiecesToAdd value: (aTerniLapilli XHasPiecesToAdd)) and: [aTerniLapilli isOsTurn] and: [aTerniLapilli OHasThreeInLine not] and: [aTerniLapilli XHasThreeInLine not]! !
!XAdding class methodsFor: 'handle' stamp: 'fr 11/2/2020 03:48:38' prior: 50890275!
canHandle: aTerniLapilli

	^self isXsTimeToPlay: aTerniLapilli and: [:hasPiecesToAdd | hasPiecesToAdd]

	! !
!XMoving class methodsFor: 'handle' stamp: 'fr 11/2/2020 03:48:49' prior: 50890284!
canHandle: aTerniLapilli

	^self isXsTimeToPlay: aTerniLapilli and: [:hasPiecesToAdd | hasPiecesToAdd not]

	! !

!testRun: #TerniLapilliTests #test01XPlaysFirstAndOAfter stamp: 'fr 11/2/2020 03:49:03'!
PASSED!

!testRun: #TerniLapilliTests #test02OPlaysSecondAndXAfter stamp: 'fr 11/2/2020 03:49:03'!
PASSED!

!testRun: #TerniLapilliTests #test03ODoesNotPlayFirst stamp: 'fr 11/2/2020 03:49:03'!
PASSED!

!testRun: #TerniLapilliTests #test04APlayerCanNotPlayTwoTimesInARow stamp: 'fr 11/2/2020 03:49:03'!
PASSED!

!testRun: #TerniLapilliTests #test05XPieceIsWhereHePutsIt stamp: 'fr 11/2/2020 03:49:03'!
PASSED!

!testRun: #TerniLapilliTests #test06OPieceIsWhereHePutsIt stamp: 'fr 11/2/2020 03:49:03'!
PASSED!

!testRun: #TerniLapilliTests #test07XPieceIsNotWhereHeDoesNotPutIt stamp: 'fr 11/2/2020 03:49:03'!
PASSED!

!testRun: #TerniLapilliTests #test08OPieceIsNotWhereHeDoesNotPutIt stamp: 'fr 11/2/2020 03:49:03'!
PASSED!

!testRun: #TerniLapilliTests #test09XCanPutMoreThanOnePieceCorrectly stamp: 'fr 11/2/2020 03:49:03'!
PASSED!

!testRun: #TerniLapilliTests #test10OCanPutMoreThanOnePieceCorrectly stamp: 'fr 11/2/2020 03:49:03'!
PASSED!

!testRun: #TerniLapilliTests #test11OCanNotPutAPieceInAnOccupiedPosition stamp: 'fr 11/2/2020 03:49:03'!
PASSED!

!testRun: #TerniLapilliTests #test12XCanNotPutAPieceInAnOccupiedPosition stamp: 'fr 11/2/2020 03:49:03'!
PASSED!

!testRun: #TerniLapilliTests #test13XCanNotPutAPieceOutOfBounds stamp: 'fr 11/2/2020 03:49:03'!
PASSED!

!testRun: #TerniLapilliTests #test14OCanNotPutAPieceOutOfBounds stamp: 'fr 11/2/2020 03:49:03'!
PASSED!

!testRun: #TerniLapilliTests #test15XCanNotPutMoreThanThreePieces stamp: 'fr 11/2/2020 03:49:03'!
PASSED!

!testRun: #TerniLapilliTests #test16OCanNotPutMoreThanThreePieces stamp: 'fr 11/2/2020 03:49:03'!
PASSED!

!testRun: #TerniLapilliTests #test17WhenXMovesAPieceItIsAtTheNewPositionAndNotAtThePreviousOne stamp: 'fr 11/2/2020 03:49:03'!
PASSED!

!testRun: #TerniLapilliTests #test18WhenOMovesAPieceItIsAtTheNewPositionAndNotAtThePreviousOne stamp: 'fr 11/2/2020 03:49:03'!
PASSED!

!testRun: #TerniLapilliTests #test19XCanNotMoveBeforeAddingThreePieces stamp: 'fr 11/2/2020 03:49:03'!
PASSED!

!testRun: #TerniLapilliTests #test20OCanNotMoveBeforeAddingThreePieces stamp: 'fr 11/2/2020 03:49:03'!
PASSED!

!testRun: #TerniLapilliTests #test21XCanNotMoveFromAPositionThatIsNotUnderHisControl stamp: 'fr 11/2/2020 03:49:03'!
PASSED!

!testRun: #TerniLapilliTests #test22OCanNotMoveFromAPositionThatIsNotUnderHisControl stamp: 'fr 11/2/2020 03:49:03'!
PASSED!

!testRun: #TerniLapilliTests #test23XCanNotMoveFromAnOutOfBoundsPosition stamp: 'fr 11/2/2020 03:49:03'!
PASSED!

!testRun: #TerniLapilliTests #test24OCanNotMoveFromAnOutOfBoundsPosition stamp: 'fr 11/2/2020 03:49:03'!
PASSED!

!testRun: #TerniLapilliTests #test25XCanNotMoveToAnOutOfBoundsPosition stamp: 'fr 11/2/2020 03:49:03'!
PASSED!

!testRun: #TerniLapilliTests #test26OCanNotMoveToAnOutOfBoundsPosition stamp: 'fr 11/2/2020 03:49:03'!
PASSED!

!testRun: #TerniLapilliTests #test27XCanNotMoveToAnOccupiedPosition stamp: 'fr 11/2/2020 03:49:03'!
PASSED!

!testRun: #TerniLapilliTests #test28OCanNotMoveToAnOccupiedPosition stamp: 'fr 11/2/2020 03:49:03'!
PASSED!

!testRun: #TerniLapilliTests #test29XCanNotMoveBetweenPositionsThatAreMoreThanOnePlaceAfar stamp: 'fr 11/2/2020 03:49:03'!
PASSED!

!testRun: #TerniLapilliTests #test30OCanNotMoveBetweenPositionsThatAreMoreThanOnePlaceAfar stamp: 'fr 11/2/2020 03:49:03'!
PASSED!

!testRun: #TerniLapilliTests #test31NoPlayerHasWonIfNoneOfThemHasThreePiecesInLine stamp: 'fr 11/2/2020 03:49:03'!
PASSED!

!testRun: #TerniLapilliTests #test32XWinsWhenHeGetsThreePiecesInTheSameRow stamp: 'fr 11/2/2020 03:49:03'!
PASSED!

!testRun: #TerniLapilliTests #test33XWinsWhenHeGetsThreePiecesInTheSameColumn stamp: 'fr 11/2/2020 03:49:03'!
PASSED!

!testRun: #TerniLapilliTests #test34XWinsWhenHeGetsThreePiecesInTheMainDiagonal stamp: 'fr 11/2/2020 03:49:03'!
PASSED!

!testRun: #TerniLapilliTests #test35XWinsWhenHeGetsThreePiecesInTheSecondaryDiagonal stamp: 'fr 11/2/2020 03:49:03'!
PASSED!

!testRun: #TerniLapilliTests #test36OWinsWhenHeGetsThreePiecesInLine stamp: 'fr 11/2/2020 03:49:03'!
PASSED!

!testRun: #TerniLapilliTests #test37OCanNotPutAfterGameIsOver stamp: 'fr 11/2/2020 03:49:03'!
PASSED!

!testRun: #TerniLapilliTests #test38XCanNotMoveAfterGameIsOver stamp: 'fr 11/2/2020 03:49:03'!
PASSED!

!testRun: #TerniLapilliTests #test39OCanNotMoveAfterGameIsOver stamp: 'fr 11/2/2020 03:49:03'!
PASSED!

!testRun: #TerniLapilliTests #test40ItIsNoOnesTurnAfterGameIsOver stamp: 'fr 11/2/2020 03:49:03'!
PASSED!

oneBlock _ [1]. !

anotherBlock _ [:number | 1+number]. !

anotherBlock value: oneBlock. !

anotherBlock value: oneBlock value. !
!TerniLapilliState class methodsFor: 'handling conditions' stamp: 'fr 11/2/2020 03:53:03'!
noOneHasWonYet: aTerniLapilli

	^(aTerniLapilli OHasThreeInLine not) and: [aTerniLapilli XHasThreeInLine not]! !
!TerniLapilliState class methodsFor: 'handling conditions' stamp: 'fr 11/2/2020 03:53:24' prior: 50890676!
isXsTimeToPlay: aTerniLapilli and: aBlockAboutPiecesToAdd

	^(aBlockAboutPiecesToAdd value: (aTerniLapilli XHasPiecesToAdd)) and: [aTerniLapilli isOsTurn] and: (self noOneHasWonYet: aTerniLapilli)! !
!TerniLapilliState class methodsFor: 'handling conditions' stamp: 'fr 11/2/2020 03:53:37' prior: 50890328!
isOsTimeToPlay: aTerniLapilli and: aBlockAboutPiecesToAdd

	^(aBlockAboutPiecesToAdd value: (aTerniLapilli OHasPiecesToAdd)) and: [aTerniLapilli isXsTurn] and: (self noOneHasWonYet: aTerniLapilli)! !

!testRun: #TerniLapilliTests #test01XPlaysFirstAndOAfter stamp: 'fr 11/2/2020 03:53:42'!
PASSED!

!testRun: #TerniLapilliTests #test02OPlaysSecondAndXAfter stamp: 'fr 11/2/2020 03:53:42'!
PASSED!

!testRun: #TerniLapilliTests #test03ODoesNotPlayFirst stamp: 'fr 11/2/2020 03:53:42'!
PASSED!

!testRun: #TerniLapilliTests #test04APlayerCanNotPlayTwoTimesInARow stamp: 'fr 11/2/2020 03:53:42'!
PASSED!

!testRun: #TerniLapilliTests #test05XPieceIsWhereHePutsIt stamp: 'fr 11/2/2020 03:53:42'!
PASSED!

!testRun: #TerniLapilliTests #test06OPieceIsWhereHePutsIt stamp: 'fr 11/2/2020 03:53:42'!
PASSED!

!testRun: #TerniLapilliTests #test07XPieceIsNotWhereHeDoesNotPutIt stamp: 'fr 11/2/2020 03:53:42'!
PASSED!

!testRun: #TerniLapilliTests #test08OPieceIsNotWhereHeDoesNotPutIt stamp: 'fr 11/2/2020 03:53:42'!
PASSED!

!testRun: #TerniLapilliTests #test09XCanPutMoreThanOnePieceCorrectly stamp: 'fr 11/2/2020 03:53:42'!
PASSED!

!testRun: #TerniLapilliTests #test10OCanPutMoreThanOnePieceCorrectly stamp: 'fr 11/2/2020 03:53:42'!
PASSED!

!testRun: #TerniLapilliTests #test11OCanNotPutAPieceInAnOccupiedPosition stamp: 'fr 11/2/2020 03:53:42'!
PASSED!

!testRun: #TerniLapilliTests #test12XCanNotPutAPieceInAnOccupiedPosition stamp: 'fr 11/2/2020 03:53:42'!
PASSED!

!testRun: #TerniLapilliTests #test13XCanNotPutAPieceOutOfBounds stamp: 'fr 11/2/2020 03:53:42'!
PASSED!

!testRun: #TerniLapilliTests #test14OCanNotPutAPieceOutOfBounds stamp: 'fr 11/2/2020 03:53:42'!
PASSED!

!testRun: #TerniLapilliTests #test15XCanNotPutMoreThanThreePieces stamp: 'fr 11/2/2020 03:53:42'!
PASSED!

!testRun: #TerniLapilliTests #test16OCanNotPutMoreThanThreePieces stamp: 'fr 11/2/2020 03:53:42'!
PASSED!

!testRun: #TerniLapilliTests #test17WhenXMovesAPieceItIsAtTheNewPositionAndNotAtThePreviousOne stamp: 'fr 11/2/2020 03:53:42'!
PASSED!

!testRun: #TerniLapilliTests #test18WhenOMovesAPieceItIsAtTheNewPositionAndNotAtThePreviousOne stamp: 'fr 11/2/2020 03:53:42'!
PASSED!

!testRun: #TerniLapilliTests #test19XCanNotMoveBeforeAddingThreePieces stamp: 'fr 11/2/2020 03:53:42'!
PASSED!

!testRun: #TerniLapilliTests #test20OCanNotMoveBeforeAddingThreePieces stamp: 'fr 11/2/2020 03:53:42'!
PASSED!

!testRun: #TerniLapilliTests #test21XCanNotMoveFromAPositionThatIsNotUnderHisControl stamp: 'fr 11/2/2020 03:53:42'!
PASSED!

!testRun: #TerniLapilliTests #test22OCanNotMoveFromAPositionThatIsNotUnderHisControl stamp: 'fr 11/2/2020 03:53:42'!
PASSED!

!testRun: #TerniLapilliTests #test23XCanNotMoveFromAnOutOfBoundsPosition stamp: 'fr 11/2/2020 03:53:42'!
PASSED!

!testRun: #TerniLapilliTests #test24OCanNotMoveFromAnOutOfBoundsPosition stamp: 'fr 11/2/2020 03:53:42'!
PASSED!

!testRun: #TerniLapilliTests #test25XCanNotMoveToAnOutOfBoundsPosition stamp: 'fr 11/2/2020 03:53:42'!
PASSED!

!testRun: #TerniLapilliTests #test26OCanNotMoveToAnOutOfBoundsPosition stamp: 'fr 11/2/2020 03:53:42'!
PASSED!

!testRun: #TerniLapilliTests #test27XCanNotMoveToAnOccupiedPosition stamp: 'fr 11/2/2020 03:53:42'!
PASSED!

!testRun: #TerniLapilliTests #test28OCanNotMoveToAnOccupiedPosition stamp: 'fr 11/2/2020 03:53:42'!
PASSED!

!testRun: #TerniLapilliTests #test29XCanNotMoveBetweenPositionsThatAreMoreThanOnePlaceAfar stamp: 'fr 11/2/2020 03:53:42'!
PASSED!

!testRun: #TerniLapilliTests #test30OCanNotMoveBetweenPositionsThatAreMoreThanOnePlaceAfar stamp: 'fr 11/2/2020 03:53:42'!
PASSED!

!testRun: #TerniLapilliTests #test31NoPlayerHasWonIfNoneOfThemHasThreePiecesInLine stamp: 'fr 11/2/2020 03:53:42'!
PASSED!

!testRun: #TerniLapilliTests #test32XWinsWhenHeGetsThreePiecesInTheSameRow stamp: 'fr 11/2/2020 03:53:42'!
PASSED!

!testRun: #TerniLapilliTests #test33XWinsWhenHeGetsThreePiecesInTheSameColumn stamp: 'fr 11/2/2020 03:53:42'!
PASSED!

!testRun: #TerniLapilliTests #test34XWinsWhenHeGetsThreePiecesInTheMainDiagonal stamp: 'fr 11/2/2020 03:53:42'!
PASSED!

!testRun: #TerniLapilliTests #test35XWinsWhenHeGetsThreePiecesInTheSecondaryDiagonal stamp: 'fr 11/2/2020 03:53:42'!
PASSED!

!testRun: #TerniLapilliTests #test36OWinsWhenHeGetsThreePiecesInLine stamp: 'fr 11/2/2020 03:53:42'!
PASSED!

!testRun: #TerniLapilliTests #test37OCanNotPutAfterGameIsOver stamp: 'fr 11/2/2020 03:53:42'!
PASSED!

!testRun: #TerniLapilliTests #test38XCanNotMoveAfterGameIsOver stamp: 'fr 11/2/2020 03:53:42'!
PASSED!

!testRun: #TerniLapilliTests #test39OCanNotMoveAfterGameIsOver stamp: 'fr 11/2/2020 03:53:42'!
PASSED!

!testRun: #TerniLapilliTests #test40ItIsNoOnesTurnAfterGameIsOver stamp: 'fr 11/2/2020 03:53:42'!
PASSED!
!TerniLapilliState class methodsFor: 'handling conditions' stamp: 'fr 11/2/2020 03:57:00'!
obtainPlayerPiecesToAddStatusFrom: aBlockAboutPieces and: anotherBlockAboutPieces andCheckTurn: aBlockAboutCurrentTurn 

	^(aBlockAboutPieces value: anotherBlockAboutPieces value) and: aBlockAboutCurrentTurn value! !
!TerniLapilliState class methodsFor: 'handling conditions' stamp: 'fr 11/2/2020 03:57:17'!
playerPiecesToAddStatusFrom: aBlockAboutPieces and: anotherBlockAboutPieces andCheckTurn: aBlockAboutCurrentTurn 

	^(aBlockAboutPieces value: anotherBlockAboutPieces value) and: aBlockAboutCurrentTurn value! !
!TerniLapilliState class methodsFor: 'handling conditions' stamp: 'fr 11/2/2020 03:57:26'!
playerPiecesToAddStatusFrom: aBlockAboutPieces and: anotherBlockAboutPieces andTurn: aBlockAboutCurrentTurn 

	^(aBlockAboutPieces value: anotherBlockAboutPieces value) and: aBlockAboutCurrentTurn value! !

!methodRemoval: TerniLapilliState class #playerPiecesToAddStatusFrom:and:andCheckTurn: stamp: 'fr 11/2/2020 03:57:27'!
playerPiecesToAddStatusFrom: aBlockAboutPieces and: anotherBlockAboutPieces andCheckTurn: aBlockAboutCurrentTurn 

	^(aBlockAboutPieces value: anotherBlockAboutPieces value) and: aBlockAboutCurrentTurn value!

!methodRemoval: TerniLapilliState class #obtainPlayerPiecesToAddStatusFrom:and:andCheckTurn: stamp: 'fr 11/2/2020 03:57:29'!
obtainPlayerPiecesToAddStatusFrom: aBlockAboutPieces and: anotherBlockAboutPieces andCheckTurn: aBlockAboutCurrentTurn 

	^(aBlockAboutPieces value: anotherBlockAboutPieces value) and: aBlockAboutCurrentTurn value!
!TerniLapilliState class methodsFor: 'handling conditions' stamp: 'fr 11/2/2020 03:57:45'!
piecesToAddStatusFrom: aBlockAboutPieces and: anotherBlockAboutPieces andTurn: aBlockAboutCurrentTurn 

	^(aBlockAboutPieces value: anotherBlockAboutPieces value) and: aBlockAboutCurrentTurn value! !

!methodRemoval: TerniLapilliState class #playerPiecesToAddStatusFrom:and:andTurn: stamp: 'fr 11/2/2020 03:57:48'!
playerPiecesToAddStatusFrom: aBlockAboutPieces and: anotherBlockAboutPieces andTurn: aBlockAboutCurrentTurn 

	^(aBlockAboutPieces value: anotherBlockAboutPieces value) and: aBlockAboutCurrentTurn value!
!TerniLapilliState class methodsFor: 'handling conditions' stamp: 'fr 11/2/2020 03:58:33' prior: 50890853!
isXsTimeToPlay: aTerniLapilli and: aBlockAboutPiecesToAdd

	"^(aBlockAboutPiecesToAdd value: (aTerniLapilli XHasPiecesToAdd)) and: [aTerniLapilli isOsTurn] and: (self noOneHasWonYet: aTerniLapilli)"! !
!TerniLapilliState class methodsFor: 'handling conditions' stamp: 'fr 11/2/2020 03:59:01' prior: 50891064!
piecesToAddStatusFrom: aBlockAboutPieces and: anotherBlockAboutPieces andTurn: aBlockAboutCurrentTurn 

	^(aBlockAboutPieces value: anotherBlockAboutPieces value) and: aBlockAboutCurrentTurn value! !
!TerniLapilliState class methodsFor: 'handling conditions' stamp: 'fr 11/2/2020 03:59:08' prior: 50891084!
isXsTimeToPlay: aTerniLapilli and: aBlockAboutPiecesToAdd

	^(aBlockAboutPiecesToAdd value: (aTerniLapilli XHasPiecesToAdd)) and: [aTerniLapilli isOsTurn] and: (self noOneHasWonYet: aTerniLapilli)! !

!methodRemoval: TerniLapilliState class #piecesToAddStatusFrom:and:andTurn: stamp: 'fr 11/2/2020 03:59:45'!
piecesToAddStatusFrom: aBlockAboutPieces and: anotherBlockAboutPieces andTurn: aBlockAboutCurrentTurn 

	^(aBlockAboutPieces value: anotherBlockAboutPieces value) and: aBlockAboutCurrentTurn value!
!TerniLapilliState class methodsFor: 'handling conditions' stamp: 'fr 11/2/2020 04:00:51'!
handlingConditionForPieces: aBlockAboutPieces turn: aBlockAboutTurn for: aTerniLapilli

	^aBlockAboutPieces value and: aBlockAboutTurn value and: (self noOneHasWonYet: aTerniLapilli)! !
!TerniLapilliState class methodsFor: 'handling conditions' stamp: 'fr 11/2/2020 04:01:38' prior: 50891104!
isXsTimeToPlay: aTerniLapilli and: aBlockAboutPiecesToAdd

	"^(aBlockAboutPiecesToAdd value: (aTerniLapilli XHasPiecesToAdd)) and: [aTerniLapilli isOsTurn] and: (self noOneHasWonYet: aTerniLapilli)"
	
	^self handlingConditionForPieces: [aBlockAboutPiecesToAdd value: (aTerniLapilli XHasPiecesToAdd)] 
		turn: [aTerniLapilli isOsTurn]
		for: aTerniLapilli ! !
!TerniLapilliState class methodsFor: 'handling conditions' stamp: 'fr 11/2/2020 04:01:42' prior: 50891133!
isXsTimeToPlay: aTerniLapilli and: aBlockAboutPiecesToAdd
	
	^self handlingConditionForPieces: [aBlockAboutPiecesToAdd value: (aTerniLapilli XHasPiecesToAdd)] 
		turn: [aTerniLapilli isOsTurn]
		for: aTerniLapilli ! !
!TerniLapilliState class methodsFor: 'handling conditions' stamp: 'fr 11/2/2020 04:02:09' prior: 50890863!
isOsTimeToPlay: aTerniLapilli and: aBlockAboutPiecesToAdd

	"^(aBlockAboutPiecesToAdd value: (aTerniLapilli OHasPiecesToAdd)) and: [aTerniLapilli isXsTurn] and: (self noOneHasWonYet: aTerniLapilli)"
	
	^self handlingConditionForPieces: [aBlockAboutPiecesToAdd value: (aTerniLapilli OHasPiecesToAdd)] 
		turn: [aTerniLapilli isXsTurn]
		for: aTerniLapilli ! !
!TerniLapilliState class methodsFor: 'handling conditions' stamp: 'fr 11/2/2020 04:02:14' prior: 50891159!
isOsTimeToPlay: aTerniLapilli and: aBlockAboutPiecesToAdd
	
	^self handlingConditionForPieces: [aBlockAboutPiecesToAdd value: (aTerniLapilli OHasPiecesToAdd)] 
		turn: [aTerniLapilli isXsTurn]
		for: aTerniLapilli ! !

!testRun: #TerniLapilliTests #test01XPlaysFirstAndOAfter stamp: 'fr 11/2/2020 04:02:15'!
PASSED!

!testRun: #TerniLapilliTests #test02OPlaysSecondAndXAfter stamp: 'fr 11/2/2020 04:02:15'!
PASSED!

!testRun: #TerniLapilliTests #test03ODoesNotPlayFirst stamp: 'fr 11/2/2020 04:02:15'!
PASSED!

!testRun: #TerniLapilliTests #test04APlayerCanNotPlayTwoTimesInARow stamp: 'fr 11/2/2020 04:02:15'!
PASSED!

!testRun: #TerniLapilliTests #test05XPieceIsWhereHePutsIt stamp: 'fr 11/2/2020 04:02:15'!
PASSED!

!testRun: #TerniLapilliTests #test06OPieceIsWhereHePutsIt stamp: 'fr 11/2/2020 04:02:15'!
PASSED!

!testRun: #TerniLapilliTests #test07XPieceIsNotWhereHeDoesNotPutIt stamp: 'fr 11/2/2020 04:02:15'!
PASSED!

!testRun: #TerniLapilliTests #test08OPieceIsNotWhereHeDoesNotPutIt stamp: 'fr 11/2/2020 04:02:15'!
PASSED!

!testRun: #TerniLapilliTests #test09XCanPutMoreThanOnePieceCorrectly stamp: 'fr 11/2/2020 04:02:15'!
PASSED!

!testRun: #TerniLapilliTests #test10OCanPutMoreThanOnePieceCorrectly stamp: 'fr 11/2/2020 04:02:15'!
PASSED!

!testRun: #TerniLapilliTests #test11OCanNotPutAPieceInAnOccupiedPosition stamp: 'fr 11/2/2020 04:02:15'!
PASSED!

!testRun: #TerniLapilliTests #test12XCanNotPutAPieceInAnOccupiedPosition stamp: 'fr 11/2/2020 04:02:15'!
PASSED!

!testRun: #TerniLapilliTests #test13XCanNotPutAPieceOutOfBounds stamp: 'fr 11/2/2020 04:02:15'!
PASSED!

!testRun: #TerniLapilliTests #test14OCanNotPutAPieceOutOfBounds stamp: 'fr 11/2/2020 04:02:15'!
PASSED!

!testRun: #TerniLapilliTests #test15XCanNotPutMoreThanThreePieces stamp: 'fr 11/2/2020 04:02:15'!
PASSED!

!testRun: #TerniLapilliTests #test16OCanNotPutMoreThanThreePieces stamp: 'fr 11/2/2020 04:02:15'!
PASSED!

!testRun: #TerniLapilliTests #test17WhenXMovesAPieceItIsAtTheNewPositionAndNotAtThePreviousOne stamp: 'fr 11/2/2020 04:02:15'!
PASSED!

!testRun: #TerniLapilliTests #test18WhenOMovesAPieceItIsAtTheNewPositionAndNotAtThePreviousOne stamp: 'fr 11/2/2020 04:02:15'!
PASSED!

!testRun: #TerniLapilliTests #test19XCanNotMoveBeforeAddingThreePieces stamp: 'fr 11/2/2020 04:02:15'!
PASSED!

!testRun: #TerniLapilliTests #test20OCanNotMoveBeforeAddingThreePieces stamp: 'fr 11/2/2020 04:02:15'!
PASSED!

!testRun: #TerniLapilliTests #test21XCanNotMoveFromAPositionThatIsNotUnderHisControl stamp: 'fr 11/2/2020 04:02:15'!
PASSED!

!testRun: #TerniLapilliTests #test22OCanNotMoveFromAPositionThatIsNotUnderHisControl stamp: 'fr 11/2/2020 04:02:15'!
PASSED!

!testRun: #TerniLapilliTests #test23XCanNotMoveFromAnOutOfBoundsPosition stamp: 'fr 11/2/2020 04:02:15'!
PASSED!

!testRun: #TerniLapilliTests #test24OCanNotMoveFromAnOutOfBoundsPosition stamp: 'fr 11/2/2020 04:02:15'!
PASSED!

!testRun: #TerniLapilliTests #test25XCanNotMoveToAnOutOfBoundsPosition stamp: 'fr 11/2/2020 04:02:15'!
PASSED!

!testRun: #TerniLapilliTests #test26OCanNotMoveToAnOutOfBoundsPosition stamp: 'fr 11/2/2020 04:02:15'!
PASSED!

!testRun: #TerniLapilliTests #test27XCanNotMoveToAnOccupiedPosition stamp: 'fr 11/2/2020 04:02:15'!
PASSED!

!testRun: #TerniLapilliTests #test28OCanNotMoveToAnOccupiedPosition stamp: 'fr 11/2/2020 04:02:15'!
PASSED!

!testRun: #TerniLapilliTests #test29XCanNotMoveBetweenPositionsThatAreMoreThanOnePlaceAfar stamp: 'fr 11/2/2020 04:02:15'!
PASSED!

!testRun: #TerniLapilliTests #test30OCanNotMoveBetweenPositionsThatAreMoreThanOnePlaceAfar stamp: 'fr 11/2/2020 04:02:15'!
PASSED!

!testRun: #TerniLapilliTests #test31NoPlayerHasWonIfNoneOfThemHasThreePiecesInLine stamp: 'fr 11/2/2020 04:02:15'!
PASSED!

!testRun: #TerniLapilliTests #test32XWinsWhenHeGetsThreePiecesInTheSameRow stamp: 'fr 11/2/2020 04:02:15'!
PASSED!

!testRun: #TerniLapilliTests #test33XWinsWhenHeGetsThreePiecesInTheSameColumn stamp: 'fr 11/2/2020 04:02:15'!
PASSED!

!testRun: #TerniLapilliTests #test34XWinsWhenHeGetsThreePiecesInTheMainDiagonal stamp: 'fr 11/2/2020 04:02:15'!
PASSED!

!testRun: #TerniLapilliTests #test35XWinsWhenHeGetsThreePiecesInTheSecondaryDiagonal stamp: 'fr 11/2/2020 04:02:15'!
PASSED!

!testRun: #TerniLapilliTests #test36OWinsWhenHeGetsThreePiecesInLine stamp: 'fr 11/2/2020 04:02:15'!
PASSED!

!testRun: #TerniLapilliTests #test37OCanNotPutAfterGameIsOver stamp: 'fr 11/2/2020 04:02:15'!
PASSED!

!testRun: #TerniLapilliTests #test38XCanNotMoveAfterGameIsOver stamp: 'fr 11/2/2020 04:02:15'!
PASSED!

!testRun: #TerniLapilliTests #test39OCanNotMoveAfterGameIsOver stamp: 'fr 11/2/2020 04:02:15'!
PASSED!

!testRun: #TerniLapilliTests #test40ItIsNoOnesTurnAfterGameIsOver stamp: 'fr 11/2/2020 04:02:15'!
PASSED!

----SNAPSHOT----(2 November 2020 04:04:59) CuisUniversity-4384.image priorSource: 17863671!

----SNAPSHOT----(2 November 2020 04:09:51) CuisUniversity-4384.image priorSource: 17909552!

----SNAPSHOT----(2 November 2020 04:17:26) CuisUniversity-4384.image priorSource: 17909645!

!methodRemoval: TerniLapilliTests #test06OPieceIsWhereHePutsIt stamp: 'fr 11/2/2020 04:21:48'!
test06OPieceIsWhereHePutsIt

	| terniLapilli |
	terniLapilli _ TerniLapilli new.
	terniLapilli putXAt: 1 @ 1
			 ;putOAt: 1 @ 2.
	
	self assert: [terniLapilli hasOPieceAt: 1@2]!

!methodRemoval: TerniLapilliTests #test08OPieceIsNotWhereHeDoesNotPutIt stamp: 'fr 11/2/2020 04:21:50'!
test08OPieceIsNotWhereHeDoesNotPutIt

	| terniLapilli |
	terniLapilli _ TerniLapilli new.
	terniLapilli putXAt: 1 @ 1
			 ;putOAt: 1 @ 2.
	
	self assert: [(terniLapilli hasOPieceAt: 1@1) not]!

!methodRemoval: TerniLapilliTests #test10OCanPutMoreThanOnePieceCorrectly stamp: 'fr 11/2/2020 04:21:54'!
test10OCanPutMoreThanOnePieceCorrectly

	| terniLapilli |
	terniLapilli _ TerniLapilli new.
	terniLapilli putXAt: 1 @ 1
			 ;putOAt: 1 @ 2
			 ;putXAt: 1 @ 3
			 ;putOAt: 2 @ 1.
	
	self assert: [(terniLapilli hasOPieceAt: 1@2) and: [terniLapilli hasOPieceAt: 2@1]]!

!methodRemoval: TerniLapilliTests #test11OCanNotPutAPieceInAnOccupiedPosition stamp: 'fr 11/2/2020 04:22:02'!
test11OCanNotPutAPieceInAnOccupiedPosition

	| terniLapilli |
	terniLapilli _ TerniLapilli new.	

	self should: [			terniLapilli putXAt: 1 @ 1
						 ;putOAt: 1 @ 1. ]
		raise: Error
		withMessageText: TerniLapilli positionAlreadyHoldsAPieceErrorDescription!

!methodRemoval: TerniLapilliTests #test14OCanNotPutAPieceOutOfBounds stamp: 'fr 11/2/2020 04:22:09'!
test14OCanNotPutAPieceOutOfBounds

	| terniLapilli |
	terniLapilli _ TerniLapilli new.
	self
		should: [ 		terniLapilli putXAt: 1 @ 1
						 ;putOAt: 1 @ 5. ]
		raise: Error
		withMessageText: TerniLapilli positionOutOfBoundsErrorDescription.!

!methodRemoval: TerniLapilliTests #test16OCanNotPutMoreThanThreePieces stamp: 'fr 11/2/2020 04:22:14'!
test16OCanNotPutMoreThanThreePieces

	| terniLapilli |
	terniLapilli _ TerniLapilli new.
	self
		should: [ 		terniLapilli putXAt: 1 @ 1
						 ;putOAt: 1 @ 3
						 ;putXAt: 2 @ 1
						 ;putOAt: 2 @ 2
						 ;putXAt: 2 @ 3
						 ;putOAt: 3 @ 2
						 ;moveXFrom: 1@1 to: 1@2
						 ;putOAt: 3 @ 3.
				 ]
		raise: Error
		withMessageText: TerniLapilli piecesLimitExceededErrorDescription.!
!TerniLapilliTests methodsFor: 'tests - put' stamp: 'fr 11/2/2020 04:22:34'!
test05APlayerPieceIsWhereHePutsIt

	| terniLapilli |
	terniLapilli _ TerniLapilli new.
	terniLapilli putXAt: 1 @ 1.
	
	self assert: [terniLapilli hasXPieceAt: 1@1]! !

!methodRemoval: TerniLapilliTests #test05XPieceIsWhereHePutsIt stamp: 'fr 11/2/2020 04:22:34'!
test05XPieceIsWhereHePutsIt

	| terniLapilli |
	terniLapilli _ TerniLapilli new.
	terniLapilli putXAt: 1 @ 1.
	
	self assert: [terniLapilli hasXPieceAt: 1@1]!
!TerniLapilliTests methodsFor: 'tests - put' stamp: 'fr 11/2/2020 04:22:57'!
test06APlayerPieceIsNotWhereHeDoesNotPutIt

	| terniLapilli |
	terniLapilli _ TerniLapilli new.
	terniLapilli putXAt: 1 @ 2.
	
	self assert: [(terniLapilli hasXPieceAt: 1@1) not]! !

!methodRemoval: TerniLapilliTests #test07XPieceIsNotWhereHeDoesNotPutIt stamp: 'fr 11/2/2020 04:22:57'!
test07XPieceIsNotWhereHeDoesNotPutIt

	| terniLapilli |
	terniLapilli _ TerniLapilli new.
	terniLapilli putXAt: 1 @ 2.
	
	self assert: [(terniLapilli hasXPieceAt: 1@1) not]!
!TerniLapilliTests methodsFor: 'tests - put' stamp: 'fr 11/2/2020 04:23:11'!
test07APlayerCanPutMoreThanOnePieceCorrectly

	| terniLapilli |
	terniLapilli _ TerniLapilli new.
	terniLapilli putXAt: 1 @ 1
			 ;putOAt: 1 @ 2
		        ;putXAt: 1 @ 3.
	
	self assert: [(terniLapilli hasXPieceAt: 1@1) and: [terniLapilli hasXPieceAt: 1@3]]! !

!methodRemoval: TerniLapilliTests #test09XCanPutMoreThanOnePieceCorrectly stamp: 'fr 11/2/2020 04:23:11'!
test09XCanPutMoreThanOnePieceCorrectly

	| terniLapilli |
	terniLapilli _ TerniLapilli new.
	terniLapilli putXAt: 1 @ 1
			 ;putOAt: 1 @ 2
		        ;putXAt: 1 @ 3.
	
	self assert: [(terniLapilli hasXPieceAt: 1@1) and: [terniLapilli hasXPieceAt: 1@3]]!
!TerniLapilliTests methodsFor: 'tests - put' stamp: 'fr 11/2/2020 04:23:21'!
test08APlayerCanNotPutAPieceInAnOccupiedPosition

	| terniLapilli |
	terniLapilli _ TerniLapilli new.	

	self should: [			terniLapilli putXAt: 1 @ 1
						 ;putOAt: 1 @ 2
						 ;putXAt: 1 @ 2. ]
		raise: Error
		withMessageText: TerniLapilli positionAlreadyHoldsAPieceErrorDescription! !

!methodRemoval: TerniLapilliTests #test12XCanNotPutAPieceInAnOccupiedPosition stamp: 'fr 11/2/2020 04:23:21'!
test12XCanNotPutAPieceInAnOccupiedPosition

	| terniLapilli |
	terniLapilli _ TerniLapilli new.	

	self should: [			terniLapilli putXAt: 1 @ 1
						 ;putOAt: 1 @ 2
						 ;putXAt: 1 @ 2. ]
		raise: Error
		withMessageText: TerniLapilli positionAlreadyHoldsAPieceErrorDescription!
!TerniLapilliTests methodsFor: 'tests - put' stamp: 'fr 11/2/2020 04:23:46'!
test09APlayerCanNotPutAPieceOutOfBounds

	| terniLapilli |
	terniLapilli _ TerniLapilli new.
	self
		should: [ terniLapilli putXAt: 1 @ 5 ]
		raise: Error
		withMessageText: TerniLapilli positionOutOfBoundsErrorDescription.! !

!methodRemoval: TerniLapilliTests #test13XCanNotPutAPieceOutOfBounds stamp: 'fr 11/2/2020 04:23:46'!
test13XCanNotPutAPieceOutOfBounds

	| terniLapilli |
	terniLapilli _ TerniLapilli new.
	self
		should: [ terniLapilli putXAt: 1 @ 5 ]
		raise: Error
		withMessageText: TerniLapilli positionOutOfBoundsErrorDescription.!
!TerniLapilliTests methodsFor: 'tests - put' stamp: 'fr 11/2/2020 04:24:01'!
test10APlayerCanNotPutMoreThanThreePieces

	| terniLapilli |
	terniLapilli _ TerniLapilli new.
	self
		should: [ 		terniLapilli putXAt: 1 @ 1
						 ;putOAt: 1 @ 2
					        ;putXAt: 1 @ 3
						 ;putOAt: 2 @ 1
						 ;putXAt: 2 @ 2
						 ;putOAt: 2 @ 3
						 ;putXAt: 3 @ 2.
				 ]
		raise: Error
		withMessageText: TerniLapilli piecesLimitExceededErrorDescription.! !

!methodRemoval: TerniLapilliTests #test15XCanNotPutMoreThanThreePieces stamp: 'fr 11/2/2020 04:24:01'!
test15XCanNotPutMoreThanThreePieces

	| terniLapilli |
	terniLapilli _ TerniLapilli new.
	self
		should: [ 		terniLapilli putXAt: 1 @ 1
						 ;putOAt: 1 @ 2
					        ;putXAt: 1 @ 3
						 ;putOAt: 2 @ 1
						 ;putXAt: 2 @ 2
						 ;putOAt: 2 @ 3
						 ;putXAt: 3 @ 2.
				 ]
		raise: Error
		withMessageText: TerniLapilli piecesLimitExceededErrorDescription.!

!methodRemoval: TerniLapilliTests #test18WhenOMovesAPieceItIsAtTheNewPositionAndNotAtThePreviousOne stamp: 'fr 11/2/2020 04:24:23'!
test18WhenOMovesAPieceItIsAtTheNewPositionAndNotAtThePreviousOne

	| terniLapilli |
	terniLapilli _ TerniLapilli new.
	terniLapilli putXAt: 1 @ 1 
			 ;putOAt: 1 @ 3
			 ;putXAt: 2 @ 1
			 ;putOAt: 2 @ 2
			 ;putXAt: 2 @ 3
			 ;putOAt: 3 @ 2
			 ;moveXFrom: 1@1 to: 1@2
			 ;moveOFrom: 3@2 to: 3@3.
			
	self assert: [(terniLapilli hasOPieceAt: 3@3) and: [(terniLapilli hasXPieceAt: 3@2) not]]!

!methodRemoval: TerniLapilliTests #test20OCanNotMoveBeforeAddingThreePieces stamp: 'fr 11/2/2020 04:24:27'!
test20OCanNotMoveBeforeAddingThreePieces

	| terniLapilli |
	terniLapilli _ TerniLapilli new.
		
	self  should: [terniLapilli putXAt: 1@1 ;moveOFrom: 1@1 to: 1@2.] 
		raise: Error 
		withMessageText: TerniLapilli canNotMoveBeforeAddingThreePiecesErrorDescription!

----STARTUP---- (2 November 2020 04:26:38) as /home/fede/Documentos/Facultad/Inge1/Cuises/katas/linux64/CuisUniversity-4384.image!


!testRun: #TerniLapilliTests #test01XPlaysFirstAndOAfter stamp: 'fr 11/2/2020 04:26:45'!
PASSED!

!testRun: #TerniLapilliTests #test02OPlaysSecondAndXAfter stamp: 'fr 11/2/2020 04:26:45'!
PASSED!

!testRun: #TerniLapilliTests #test03ODoesNotPlayFirst stamp: 'fr 11/2/2020 04:26:45'!
PASSED!

!testRun: #TerniLapilliTests #test04APlayerCanNotPlayTwoTimesInARow stamp: 'fr 11/2/2020 04:26:45'!
PASSED!

!testRun: #TerniLapilliTests #test05XPieceIsWhereHePutsIt stamp: 'fr 11/2/2020 04:26:45'!
PASSED!

!testRun: #TerniLapilliTests #test06OPieceIsWhereHePutsIt stamp: 'fr 11/2/2020 04:26:45'!
PASSED!

!testRun: #TerniLapilliTests #test07XPieceIsNotWhereHeDoesNotPutIt stamp: 'fr 11/2/2020 04:26:45'!
PASSED!

!testRun: #TerniLapilliTests #test08OPieceIsNotWhereHeDoesNotPutIt stamp: 'fr 11/2/2020 04:26:45'!
PASSED!

!testRun: #TerniLapilliTests #test09XCanPutMoreThanOnePieceCorrectly stamp: 'fr 11/2/2020 04:26:45'!
PASSED!

!testRun: #TerniLapilliTests #test10OCanPutMoreThanOnePieceCorrectly stamp: 'fr 11/2/2020 04:26:45'!
PASSED!

!testRun: #TerniLapilliTests #test11OCanNotPutAPieceInAnOccupiedPosition stamp: 'fr 11/2/2020 04:26:45'!
PASSED!

!testRun: #TerniLapilliTests #test12XCanNotPutAPieceInAnOccupiedPosition stamp: 'fr 11/2/2020 04:26:45'!
PASSED!

!testRun: #TerniLapilliTests #test13XCanNotPutAPieceOutOfBounds stamp: 'fr 11/2/2020 04:26:45'!
PASSED!

!testRun: #TerniLapilliTests #test14OCanNotPutAPieceOutOfBounds stamp: 'fr 11/2/2020 04:26:45'!
PASSED!

!testRun: #TerniLapilliTests #test15XCanNotPutMoreThanThreePieces stamp: 'fr 11/2/2020 04:26:45'!
PASSED!

!testRun: #TerniLapilliTests #test16OCanNotPutMoreThanThreePieces stamp: 'fr 11/2/2020 04:26:45'!
PASSED!

!testRun: #TerniLapilliTests #test17WhenXMovesAPieceItIsAtTheNewPositionAndNotAtThePreviousOne stamp: 'fr 11/2/2020 04:26:45'!
PASSED!

!testRun: #TerniLapilliTests #test18WhenOMovesAPieceItIsAtTheNewPositionAndNotAtThePreviousOne stamp: 'fr 11/2/2020 04:26:45'!
PASSED!

!testRun: #TerniLapilliTests #test19XCanNotMoveBeforeAddingThreePieces stamp: 'fr 11/2/2020 04:26:45'!
PASSED!

!testRun: #TerniLapilliTests #test20OCanNotMoveBeforeAddingThreePieces stamp: 'fr 11/2/2020 04:26:45'!
PASSED!

!testRun: #TerniLapilliTests #test21XCanNotMoveFromAPositionThatIsNotUnderHisControl stamp: 'fr 11/2/2020 04:26:45'!
PASSED!

!testRun: #TerniLapilliTests #test22OCanNotMoveFromAPositionThatIsNotUnderHisControl stamp: 'fr 11/2/2020 04:26:45'!
PASSED!

!testRun: #TerniLapilliTests #test23XCanNotMoveFromAnOutOfBoundsPosition stamp: 'fr 11/2/2020 04:26:45'!
PASSED!

!testRun: #TerniLapilliTests #test24OCanNotMoveFromAnOutOfBoundsPosition stamp: 'fr 11/2/2020 04:26:45'!
PASSED!

!testRun: #TerniLapilliTests #test25XCanNotMoveToAnOutOfBoundsPosition stamp: 'fr 11/2/2020 04:26:45'!
PASSED!

!testRun: #TerniLapilliTests #test26OCanNotMoveToAnOutOfBoundsPosition stamp: 'fr 11/2/2020 04:26:45'!
PASSED!

!testRun: #TerniLapilliTests #test27XCanNotMoveToAnOccupiedPosition stamp: 'fr 11/2/2020 04:26:45'!
PASSED!

!testRun: #TerniLapilliTests #test28OCanNotMoveToAnOccupiedPosition stamp: 'fr 11/2/2020 04:26:45'!
PASSED!

!testRun: #TerniLapilliTests #test29XCanNotMoveBetweenPositionsThatAreMoreThanOnePlaceAfar stamp: 'fr 11/2/2020 04:26:45'!
PASSED!

!testRun: #TerniLapilliTests #test30OCanNotMoveBetweenPositionsThatAreMoreThanOnePlaceAfar stamp: 'fr 11/2/2020 04:26:45'!
PASSED!

!testRun: #TerniLapilliTests #test31NoPlayerHasWonIfNoneOfThemHasThreePiecesInLine stamp: 'fr 11/2/2020 04:26:45'!
PASSED!

!testRun: #TerniLapilliTests #test32XWinsWhenHeGetsThreePiecesInTheSameRow stamp: 'fr 11/2/2020 04:26:45'!
PASSED!

!testRun: #TerniLapilliTests #test33XWinsWhenHeGetsThreePiecesInTheSameColumn stamp: 'fr 11/2/2020 04:26:45'!
PASSED!

!testRun: #TerniLapilliTests #test34XWinsWhenHeGetsThreePiecesInTheMainDiagonal stamp: 'fr 11/2/2020 04:26:45'!
PASSED!

!testRun: #TerniLapilliTests #test35XWinsWhenHeGetsThreePiecesInTheSecondaryDiagonal stamp: 'fr 11/2/2020 04:26:45'!
PASSED!

!testRun: #TerniLapilliTests #test36OWinsWhenHeGetsThreePiecesInLine stamp: 'fr 11/2/2020 04:26:45'!
PASSED!

!testRun: #TerniLapilliTests #test37OCanNotPutAfterGameIsOver stamp: 'fr 11/2/2020 04:26:45'!
PASSED!

!testRun: #TerniLapilliTests #test38XCanNotMoveAfterGameIsOver stamp: 'fr 11/2/2020 04:26:45'!
PASSED!

!testRun: #TerniLapilliTests #test39OCanNotMoveAfterGameIsOver stamp: 'fr 11/2/2020 04:26:45'!
PASSED!

!testRun: #TerniLapilliTests #test40ItIsNoOnesTurnAfterGameIsOver stamp: 'fr 11/2/2020 04:26:45'!
PASSED!

!methodRemoval: TerniLapilliTests #test06OPieceIsWhereHePutsIt stamp: 'fr 11/2/2020 04:32:34'!
test06OPieceIsWhereHePutsIt

	| terniLapilli |
	terniLapilli _ TerniLapilli new.
	terniLapilli putXAt: 1 @ 1
			 ;putOAt: 1 @ 2.
	
	self assert: [terniLapilli hasOPieceAt: 1@2]!

!methodRemoval: TerniLapilliTests #test08OPieceIsNotWhereHeDoesNotPutIt stamp: 'fr 11/2/2020 04:32:37'!
test08OPieceIsNotWhereHeDoesNotPutIt

	| terniLapilli |
	terniLapilli _ TerniLapilli new.
	terniLapilli putXAt: 1 @ 1
			 ;putOAt: 1 @ 2.
	
	self assert: [(terniLapilli hasOPieceAt: 1@1) not]!

!methodRemoval: TerniLapilliTests #test10OCanPutMoreThanOnePieceCorrectly stamp: 'fr 11/2/2020 04:32:56'!
test10OCanPutMoreThanOnePieceCorrectly

	| terniLapilli |
	terniLapilli _ TerniLapilli new.
	terniLapilli putXAt: 1 @ 1
			 ;putOAt: 1 @ 2
			 ;putXAt: 1 @ 3
			 ;putOAt: 2 @ 1.
	
	self assert: [(terniLapilli hasOPieceAt: 1@2) and: [terniLapilli hasOPieceAt: 2@1]]!

!methodRemoval: TerniLapilliTests #test11OCanNotPutAPieceInAnOccupiedPosition stamp: 'fr 11/2/2020 04:33:00'!
test11OCanNotPutAPieceInAnOccupiedPosition

	| terniLapilli |
	terniLapilli _ TerniLapilli new.	

	self should: [			terniLapilli putXAt: 1 @ 1
						 ;putOAt: 1 @ 1. ]
		raise: Error
		withMessageText: TerniLapilli positionAlreadyHoldsAPieceErrorDescription!

!methodRemoval: TerniLapilliTests #test14OCanNotPutAPieceOutOfBounds stamp: 'fr 11/2/2020 04:33:05'!
test14OCanNotPutAPieceOutOfBounds

	| terniLapilli |
	terniLapilli _ TerniLapilli new.
	self
		should: [ 		terniLapilli putXAt: 1 @ 1
						 ;putOAt: 1 @ 5. ]
		raise: Error
		withMessageText: TerniLapilli positionOutOfBoundsErrorDescription.!

!methodRemoval: TerniLapilliTests #test16OCanNotPutMoreThanThreePieces stamp: 'fr 11/2/2020 04:33:14'!
test16OCanNotPutMoreThanThreePieces

	| terniLapilli |
	terniLapilli _ TerniLapilli new.
	self
		should: [ 		terniLapilli putXAt: 1 @ 1
						 ;putOAt: 1 @ 3
						 ;putXAt: 2 @ 1
						 ;putOAt: 2 @ 2
						 ;putXAt: 2 @ 3
						 ;putOAt: 3 @ 2
						 ;moveXFrom: 1@1 to: 1@2
						 ;putOAt: 3 @ 3.
				 ]
		raise: Error
		withMessageText: TerniLapilli piecesLimitExceededErrorDescription.!
!TerniLapilliTests methodsFor: 'tests - put' stamp: 'fr 11/2/2020 04:33:22'!
test05APlayerPieceIsWhereHePutsIt

	| terniLapilli |
	terniLapilli _ TerniLapilli new.
	terniLapilli putXAt: 1 @ 1.
	
	self assert: [terniLapilli hasXPieceAt: 1@1]! !

!methodRemoval: TerniLapilliTests #test05XPieceIsWhereHePutsIt stamp: 'fr 11/2/2020 04:33:22'!
test05XPieceIsWhereHePutsIt

	| terniLapilli |
	terniLapilli _ TerniLapilli new.
	terniLapilli putXAt: 1 @ 1.
	
	self assert: [terniLapilli hasXPieceAt: 1@1]!
!TerniLapilliTests methodsFor: 'tests - put' stamp: 'fr 11/2/2020 04:33:31'!
test07APlayerPieceIsNotWhereHeDoesNotPutIt

	| terniLapilli |
	terniLapilli _ TerniLapilli new.
	terniLapilli putXAt: 1 @ 2.
	
	self assert: [(terniLapilli hasXPieceAt: 1@1) not]! !

!methodRemoval: TerniLapilliTests #test07XPieceIsNotWhereHeDoesNotPutIt stamp: 'fr 11/2/2020 04:33:31'!
test07XPieceIsNotWhereHeDoesNotPutIt

	| terniLapilli |
	terniLapilli _ TerniLapilli new.
	terniLapilli putXAt: 1 @ 2.
	
	self assert: [(terniLapilli hasXPieceAt: 1@1) not]!
!TerniLapilliTests methodsFor: 'tests - put' stamp: 'fr 11/2/2020 04:33:38'!
test06APlayerPieceIsNotWhereHeDoesNotPutIt

	| terniLapilli |
	terniLapilli _ TerniLapilli new.
	terniLapilli putXAt: 1 @ 2.
	
	self assert: [(terniLapilli hasXPieceAt: 1@1) not]! !

!methodRemoval: TerniLapilliTests #test07APlayerPieceIsNotWhereHeDoesNotPutIt stamp: 'fr 11/2/2020 04:33:38'!
test07APlayerPieceIsNotWhereHeDoesNotPutIt

	| terniLapilli |
	terniLapilli _ TerniLapilli new.
	terniLapilli putXAt: 1 @ 2.
	
	self assert: [(terniLapilli hasXPieceAt: 1@1) not]!
!TerniLapilliTests methodsFor: 'tests - put' stamp: 'fr 11/2/2020 04:33:46'!
test07APlayerCanPutMoreThanOnePieceCorrectly

	| terniLapilli |
	terniLapilli _ TerniLapilli new.
	terniLapilli putXAt: 1 @ 1
			 ;putOAt: 1 @ 2
		        ;putXAt: 1 @ 3.
	
	self assert: [(terniLapilli hasXPieceAt: 1@1) and: [terniLapilli hasXPieceAt: 1@3]]! !

!methodRemoval: TerniLapilliTests #test09XCanPutMoreThanOnePieceCorrectly stamp: 'fr 11/2/2020 04:33:46'!
test09XCanPutMoreThanOnePieceCorrectly

	| terniLapilli |
	terniLapilli _ TerniLapilli new.
	terniLapilli putXAt: 1 @ 1
			 ;putOAt: 1 @ 2
		        ;putXAt: 1 @ 3.
	
	self assert: [(terniLapilli hasXPieceAt: 1@1) and: [terniLapilli hasXPieceAt: 1@3]]!
!TerniLapilliTests methodsFor: 'tests - put' stamp: 'fr 11/2/2020 04:33:58'!
test07APlayerCanNotPutAPieceInAnOccupiedPosition

	| terniLapilli |
	terniLapilli _ TerniLapilli new.	

	self should: [			terniLapilli putXAt: 1 @ 1
						 ;putOAt: 1 @ 2
						 ;putXAt: 1 @ 2. ]
		raise: Error
		withMessageText: TerniLapilli positionAlreadyHoldsAPieceErrorDescription! !

!methodRemoval: TerniLapilliTests #test12XCanNotPutAPieceInAnOccupiedPosition stamp: 'fr 11/2/2020 04:33:58'!
test12XCanNotPutAPieceInAnOccupiedPosition

	| terniLapilli |
	terniLapilli _ TerniLapilli new.	

	self should: [			terniLapilli putXAt: 1 @ 1
						 ;putOAt: 1 @ 2
						 ;putXAt: 1 @ 2. ]
		raise: Error
		withMessageText: TerniLapilli positionAlreadyHoldsAPieceErrorDescription!
!TerniLapilliTests methodsFor: 'tests - put' stamp: 'fr 11/2/2020 04:34:04'!
test08APlayerCanNotPutAPieceInAnOccupiedPosition

	| terniLapilli |
	terniLapilli _ TerniLapilli new.	

	self should: [			terniLapilli putXAt: 1 @ 1
						 ;putOAt: 1 @ 2
						 ;putXAt: 1 @ 2. ]
		raise: Error
		withMessageText: TerniLapilli positionAlreadyHoldsAPieceErrorDescription! !

!methodRemoval: TerniLapilliTests #test07APlayerCanNotPutAPieceInAnOccupiedPosition stamp: 'fr 11/2/2020 04:34:04'!
test07APlayerCanNotPutAPieceInAnOccupiedPosition

	| terniLapilli |
	terniLapilli _ TerniLapilli new.	

	self should: [			terniLapilli putXAt: 1 @ 1
						 ;putOAt: 1 @ 2
						 ;putXAt: 1 @ 2. ]
		raise: Error
		withMessageText: TerniLapilli positionAlreadyHoldsAPieceErrorDescription!
!TerniLapilliTests methodsFor: 'tests - put' stamp: 'fr 11/2/2020 04:34:19'!
test09APlayerCanNotPutAPieceOutOfBounds

	| terniLapilli |
	terniLapilli _ TerniLapilli new.
	self
		should: [ terniLapilli putXAt: 1 @ 5 ]
		raise: Error
		withMessageText: TerniLapilli positionOutOfBoundsErrorDescription.! !

!methodRemoval: TerniLapilliTests #test13XCanNotPutAPieceOutOfBounds stamp: 'fr 11/2/2020 04:34:19'!
test13XCanNotPutAPieceOutOfBounds

	| terniLapilli |
	terniLapilli _ TerniLapilli new.
	self
		should: [ terniLapilli putXAt: 1 @ 5 ]
		raise: Error
		withMessageText: TerniLapilli positionOutOfBoundsErrorDescription.!
!TerniLapilliTests methodsFor: 'tests - put' stamp: 'fr 11/2/2020 04:34:30'!
test10APlayerCanNotPutMoreThanThreePieces

	| terniLapilli |
	terniLapilli _ TerniLapilli new.
	self
		should: [ 		terniLapilli putXAt: 1 @ 1
						 ;putOAt: 1 @ 2
					        ;putXAt: 1 @ 3
						 ;putOAt: 2 @ 1
						 ;putXAt: 2 @ 2
						 ;putOAt: 2 @ 3
						 ;putXAt: 3 @ 2.
				 ]
		raise: Error
		withMessageText: TerniLapilli piecesLimitExceededErrorDescription.! !

!methodRemoval: TerniLapilliTests #test15XCanNotPutMoreThanThreePieces stamp: 'fr 11/2/2020 04:34:30'!
test15XCanNotPutMoreThanThreePieces

	| terniLapilli |
	terniLapilli _ TerniLapilli new.
	self
		should: [ 		terniLapilli putXAt: 1 @ 1
						 ;putOAt: 1 @ 2
					        ;putXAt: 1 @ 3
						 ;putOAt: 2 @ 1
						 ;putXAt: 2 @ 2
						 ;putOAt: 2 @ 3
						 ;putXAt: 3 @ 2.
				 ]
		raise: Error
		withMessageText: TerniLapilli piecesLimitExceededErrorDescription.!

!methodRemoval: TerniLapilliTests #test18WhenOMovesAPieceItIsAtTheNewPositionAndNotAtThePreviousOne stamp: 'fr 11/2/2020 04:34:41'!
test18WhenOMovesAPieceItIsAtTheNewPositionAndNotAtThePreviousOne

	| terniLapilli |
	terniLapilli _ TerniLapilli new.
	terniLapilli putXAt: 1 @ 1 
			 ;putOAt: 1 @ 3
			 ;putXAt: 2 @ 1
			 ;putOAt: 2 @ 2
			 ;putXAt: 2 @ 3
			 ;putOAt: 3 @ 2
			 ;moveXFrom: 1@1 to: 1@2
			 ;moveOFrom: 3@2 to: 3@3.
			
	self assert: [(terniLapilli hasOPieceAt: 3@3) and: [(terniLapilli hasXPieceAt: 3@2) not]]!
!TerniLapilliTests methodsFor: 'tests - move' stamp: 'fr 11/2/2020 04:35:04'!
test11WhenAPlayerMovesAPieceItIsAtTheNewPositionAndNotAtThePreviousOne

	| terniLapilli |
	terniLapilli _ TerniLapilli new.
	terniLapilli putXAt: 1 @ 1 
			 ;putOAt: 1 @ 3
			 ;putXAt: 2 @ 1
			 ;putOAt: 2 @ 2
			 ;putXAt: 2 @ 3
			 ;putOAt: 3 @ 2
			 ;moveXFrom: 1@1 to: 1@2.
			
	self assert: [(terniLapilli hasXPieceAt: 1@2) and: [(terniLapilli hasXPieceAt: 1@1) not]]! !

!methodRemoval: TerniLapilliTests #test17WhenXMovesAPieceItIsAtTheNewPositionAndNotAtThePreviousOne stamp: 'fr 11/2/2020 04:35:04'!
test17WhenXMovesAPieceItIsAtTheNewPositionAndNotAtThePreviousOne

	| terniLapilli |
	terniLapilli _ TerniLapilli new.
	terniLapilli putXAt: 1 @ 1 
			 ;putOAt: 1 @ 3
			 ;putXAt: 2 @ 1
			 ;putOAt: 2 @ 2
			 ;putXAt: 2 @ 3
			 ;putOAt: 3 @ 2
			 ;moveXFrom: 1@1 to: 1@2.
			
	self assert: [(terniLapilli hasXPieceAt: 1@2) and: [(terniLapilli hasXPieceAt: 1@1) not]]!

!methodRemoval: TerniLapilliTests #test20OCanNotMoveBeforeAddingThreePieces stamp: 'fr 11/2/2020 04:35:13'!
test20OCanNotMoveBeforeAddingThreePieces

	| terniLapilli |
	terniLapilli _ TerniLapilli new.
		
	self  should: [terniLapilli putXAt: 1@1 ;moveOFrom: 1@1 to: 1@2.] 
		raise: Error 
		withMessageText: TerniLapilli canNotMoveBeforeAddingThreePiecesErrorDescription!
!TerniLapilliTests methodsFor: 'tests - move' stamp: 'fr 11/2/2020 04:35:19'!
test12APlayerCanNotMoveBeforeAddingThreePieces

	| terniLapilli |
	terniLapilli _ TerniLapilli new.
		
	self  should: [terniLapilli moveXFrom: 1@1 to: 1@2.] 
		raise: Error 
		withMessageText: TerniLapilli canNotMoveBeforeAddingThreePiecesErrorDescription! !

!methodRemoval: TerniLapilliTests #test19XCanNotMoveBeforeAddingThreePieces stamp: 'fr 11/2/2020 04:35:19'!
test19XCanNotMoveBeforeAddingThreePieces

	| terniLapilli |
	terniLapilli _ TerniLapilli new.
		
	self  should: [terniLapilli moveXFrom: 1@1 to: 1@2.] 
		raise: Error 
		withMessageText: TerniLapilli canNotMoveBeforeAddingThreePiecesErrorDescription!

!methodRemoval: TerniLapilliTests #test22OCanNotMoveFromAPositionThatIsNotUnderHisControl stamp: 'fr 11/2/2020 04:35:38'!
test22OCanNotMoveFromAPositionThatIsNotUnderHisControl

	| terniLapilli |
	terniLapilli _ TerniLapilli new.
		
	self  should: [			terniLapilli putXAt: 1 @ 1 
						 ;putOAt: 1 @ 3
						 ;putXAt: 2 @ 1
						 ;putOAt: 2 @ 2
						 ;putXAt: 2 @ 3
						 ;putOAt: 3 @ 3
						 ;moveXFrom: 1@1 to: 1@2
						 ;moveOFrom: 3@2 to: 3@1.] 
		raise: Error 
		withMessageText: TerniLapilli positionIsNotUnderPlayersControlErrorDescription!
!TerniLapilliTests methodsFor: 'tests - move' stamp: 'fr 11/2/2020 04:35:45'!
test13APlayerCanNotMoveFromAPositionThatIsNotUnderHisControl

	| terniLapilli |
	terniLapilli _ TerniLapilli new.
		
	self  should: [			terniLapilli putXAt: 1 @ 1 
						 ;putOAt: 1 @ 3
						 ;putXAt: 2 @ 1
						 ;putOAt: 2 @ 2
						 ;putXAt: 2 @ 3
						 ;putOAt: 3 @ 2
						 ;moveXFrom: 3@2 to: 3@1.] 
		raise: Error 
		withMessageText: TerniLapilli positionIsNotUnderPlayersControlErrorDescription ! !

!methodRemoval: TerniLapilliTests #test21XCanNotMoveFromAPositionThatIsNotUnderHisControl stamp: 'fr 11/2/2020 04:35:45'!
test21XCanNotMoveFromAPositionThatIsNotUnderHisControl

	| terniLapilli |
	terniLapilli _ TerniLapilli new.
		
	self  should: [			terniLapilli putXAt: 1 @ 1 
						 ;putOAt: 1 @ 3
						 ;putXAt: 2 @ 1
						 ;putOAt: 2 @ 2
						 ;putXAt: 2 @ 3
						 ;putOAt: 3 @ 2
						 ;moveXFrom: 3@2 to: 3@1.] 
		raise: Error 
		withMessageText: TerniLapilli positionIsNotUnderPlayersControlErrorDescription !

!methodRemoval: TerniLapilliTests #test24OCanNotMoveFromAnOutOfBoundsPosition stamp: 'fr 11/2/2020 04:35:50'!
test24OCanNotMoveFromAnOutOfBoundsPosition

	| terniLapilli |
	terniLapilli _ TerniLapilli new.
		
	self  should: [			terniLapilli putXAt: 1 @ 1 
						 ;putOAt: 1 @ 3
						 ;putXAt: 2 @ 1
						 ;putOAt: 2 @ 2
						 ;putXAt: 2 @ 3
						 ;putOAt: 3 @ 2
						 ;moveXFrom: 1@1 to: 1@2
						 ;moveOFrom: 2@6 to: 3@3.] 
		raise: Error 
		withMessageText: TerniLapilli positionOutOfBoundsErrorDescription !
!TerniLapilliTests methodsFor: 'tests - move' stamp: 'fr 11/2/2020 04:36:00'!
test14APlayerCanNotMoveFromAnOutOfBoundsPosition

	| terniLapilli |
	terniLapilli _ TerniLapilli new.
		
	self  should: [			terniLapilli putXAt: 1 @ 1 
						 ;putOAt: 1 @ 3
						 ;putXAt: 2 @ 1
						 ;putOAt: 2 @ 2
						 ;putXAt: 2 @ 3
						 ;putOAt: 3 @ 2
						 ;moveXFrom: 3@4 to: 3@3.] 
		raise: Error 
		withMessageText: TerniLapilli positionOutOfBoundsErrorDescription ! !

!methodRemoval: TerniLapilliTests #test23XCanNotMoveFromAnOutOfBoundsPosition stamp: 'fr 11/2/2020 04:36:00'!
test23XCanNotMoveFromAnOutOfBoundsPosition

	| terniLapilli |
	terniLapilli _ TerniLapilli new.
		
	self  should: [			terniLapilli putXAt: 1 @ 1 
						 ;putOAt: 1 @ 3
						 ;putXAt: 2 @ 1
						 ;putOAt: 2 @ 2
						 ;putXAt: 2 @ 3
						 ;putOAt: 3 @ 2
						 ;moveXFrom: 3@4 to: 3@3.] 
		raise: Error 
		withMessageText: TerniLapilli positionOutOfBoundsErrorDescription !

!methodRemoval: TerniLapilliTests #test26OCanNotMoveToAnOutOfBoundsPosition stamp: 'fr 11/2/2020 04:36:31'!
test26OCanNotMoveToAnOutOfBoundsPosition

	| terniLapilli |
	terniLapilli _ TerniLapilli new.
		
	self  should: [			terniLapilli putXAt: 1 @ 1 
						 ;putOAt: 1 @ 3
						 ;putXAt: 2 @ 1
						 ;putOAt: 2 @ 2
						 ;putXAt: 2 @ 3
						 ;putOAt: 3 @ 2
						 ;moveXFrom: 1@1 to: 1@2
						 ;moveOFrom: 3@2 to: 4@2.] 
		raise: Error 
		withMessageText: TerniLapilli positionOutOfBoundsErrorDescription !
!TerniLapilliTests methodsFor: 'tests - move' stamp: 'fr 11/2/2020 04:36:38'!
test15APlayerCanNotMoveToAnOutOfBoundsPosition

	| terniLapilli |
	terniLapilli _ TerniLapilli new.
		
	self  should: [			terniLapilli putXAt: 1 @ 1 
						 ;putOAt: 1 @ 3
						 ;putXAt: 2 @ 1
						 ;putOAt: 2 @ 2
						 ;putXAt: 2 @ 3
						 ;putOAt: 3 @ 2
						 ;moveXFrom: 1@1 to: 0@1.] 
		raise: Error 
		withMessageText: TerniLapilli positionOutOfBoundsErrorDescription ! !

!methodRemoval: TerniLapilliTests #test25XCanNotMoveToAnOutOfBoundsPosition stamp: 'fr 11/2/2020 04:36:38'!
test25XCanNotMoveToAnOutOfBoundsPosition

	| terniLapilli |
	terniLapilli _ TerniLapilli new.
		
	self  should: [			terniLapilli putXAt: 1 @ 1 
						 ;putOAt: 1 @ 3
						 ;putXAt: 2 @ 1
						 ;putOAt: 2 @ 2
						 ;putXAt: 2 @ 3
						 ;putOAt: 3 @ 2
						 ;moveXFrom: 1@1 to: 0@1.] 
		raise: Error 
		withMessageText: TerniLapilli positionOutOfBoundsErrorDescription !

!methodRemoval: TerniLapilliTests #test28OCanNotMoveToAnOccupiedPosition stamp: 'fr 11/2/2020 04:36:48'!
test28OCanNotMoveToAnOccupiedPosition

	| terniLapilli |
	terniLapilli _ TerniLapilli new.
		
	self  should: [			terniLapilli putXAt: 1 @ 1 
						 ;putOAt: 1 @ 3
						 ;putXAt: 2 @ 1
						 ;putOAt: 2 @ 2
						 ;putXAt: 2 @ 3
						 ;putOAt: 3 @ 2
						 ;moveXFrom: 1@1 to: 1@2
						 ;moveOFrom: 1@3 to: 1@2.] 
		raise: Error 
		withMessageText: TerniLapilli positionAlreadyHoldsAPieceErrorDescription !

!methodRemoval: TerniLapilliTests #test30OCanNotMoveBetweenPositionsThatAreMoreThanOnePlaceAfar stamp: 'fr 11/2/2020 04:36:55'!
test30OCanNotMoveBetweenPositionsThatAreMoreThanOnePlaceAfar

	| terniLapilli |
	terniLapilli _ TerniLapilli new.
		
	self  should: [			terniLapilli putXAt: 1 @ 1 
						 ;putOAt: 2 @ 1
						 ;putXAt: 1 @ 2
						 ;putOAt: 2 @ 2
						 ;putXAt: 3 @ 1
						 ;putOAt: 1 @ 3
						 ;moveXFrom: 3@1 to: 3@2
						 ;moveOFrom: 1@3 to: 3@3.] 
		raise: Error 
		withMessageText: TerniLapilli positionIsNotReachableErrorDescription !
!TerniLapilliTests methodsFor: 'tests - move' stamp: 'fr 11/2/2020 04:37:12'!
test16APlayerCanNotMoveToAnOccupiedPosition

	| terniLapilli |
	terniLapilli _ TerniLapilli new.
		
	self  should: [			terniLapilli putXAt: 1 @ 1 
						 ;putOAt: 1 @ 3
						 ;putXAt: 2 @ 1
						 ;putOAt: 2 @ 2
						 ;putXAt: 2 @ 3
						 ;putOAt: 3 @ 2
						 ;moveXFrom: 1@1 to: 2@2.] 
		raise: Error 
		withMessageText: TerniLapilli positionAlreadyHoldsAPieceErrorDescription ! !

!methodRemoval: TerniLapilliTests #test27XCanNotMoveToAnOccupiedPosition stamp: 'fr 11/2/2020 04:37:12'!
test27XCanNotMoveToAnOccupiedPosition

	| terniLapilli |
	terniLapilli _ TerniLapilli new.
		
	self  should: [			terniLapilli putXAt: 1 @ 1 
						 ;putOAt: 1 @ 3
						 ;putXAt: 2 @ 1
						 ;putOAt: 2 @ 2
						 ;putXAt: 2 @ 3
						 ;putOAt: 3 @ 2
						 ;moveXFrom: 1@1 to: 2@2.] 
		raise: Error 
		withMessageText: TerniLapilli positionAlreadyHoldsAPieceErrorDescription !
!TerniLapilliTests methodsFor: 'tests - move' stamp: 'fr 11/2/2020 04:37:46'!
test17APlayerCanNotMoveToAnUnreachablePosition

	| terniLapilli |
	terniLapilli _ TerniLapilli new.
		
	self  should: [			terniLapilli putXAt: 1 @ 1 
						 ;putOAt: 2 @ 1
						 ;putXAt: 1 @ 2
						 ;putOAt: 2 @ 2
						 ;putXAt: 3 @ 1
						 ;putOAt: 1 @ 3
						 ;moveXFrom: 3@1 to: 3@3.] 
		raise: Error 
		withMessageText: TerniLapilli positionIsNotReachableErrorDescription ! !

!methodRemoval: TerniLapilliTests #test29XCanNotMoveBetweenPositionsThatAreMoreThanOnePlaceAfar stamp: 'fr 11/2/2020 04:37:46'!
test29XCanNotMoveBetweenPositionsThatAreMoreThanOnePlaceAfar

	| terniLapilli |
	terniLapilli _ TerniLapilli new.
		
	self  should: [			terniLapilli putXAt: 1 @ 1 
						 ;putOAt: 2 @ 1
						 ;putXAt: 1 @ 2
						 ;putOAt: 2 @ 2
						 ;putXAt: 3 @ 1
						 ;putOAt: 1 @ 3
						 ;moveXFrom: 3@1 to: 3@3.] 
		raise: Error 
		withMessageText: TerniLapilli positionIsNotReachableErrorDescription !

!methodRemoval: TerniLapilliTests #test39OCanNotMoveAfterGameIsOver stamp: 'fr 11/2/2020 04:38:32'!
test39OCanNotMoveAfterGameIsOver

	| terniLapilli |
	terniLapilli _ TerniLapilli new.
	
	self should: [			terniLapilli putXAt: 1 @ 1
						 ;putOAt: 1 @ 2
						 ;putXAt: 2 @ 1
						 ;putOAt: 2 @ 2
						 ;putXAt: 3 @ 2
						 ;putOAt: 3 @ 3
						 ;moveXFrom: 3@2 to: 3@1
						 ;moveOFrom: 3@3 to: 3@2.]  
		raise: Error
		withMessageText: TerniLapilli gameIsOverErrorDescription !
!TerniLapilliTests methodsFor: 'tests - win' stamp: 'fr 11/2/2020 04:38:39'!
test38APlayerCanNotMoveAfterGameIsOver 

	| terniLapilli |
	terniLapilli _ TerniLapilli new.
	
	self should: [			terniLapilli putXAt: 1 @ 1
						 ;putOAt: 1 @ 2
						 ;putXAt: 2 @ 1
						 ;putOAt: 2 @ 2
						 ;putXAt: 2 @ 3
						 ;putOAt: 3 @ 2
						 ;moveXFrom: 2@3 to: 3@3.]  
		raise: Error
		withMessageText: TerniLapilli gameIsOverErrorDescription ! !

!methodRemoval: TerniLapilliTests #test38XCanNotMoveAfterGameIsOver stamp: 'fr 11/2/2020 04:38:39'!
test38XCanNotMoveAfterGameIsOver 

	| terniLapilli |
	terniLapilli _ TerniLapilli new.
	
	self should: [			terniLapilli putXAt: 1 @ 1
						 ;putOAt: 1 @ 2
						 ;putXAt: 2 @ 1
						 ;putOAt: 2 @ 2
						 ;putXAt: 2 @ 3
						 ;putOAt: 3 @ 2
						 ;moveXFrom: 2@3 to: 3@3.]  
		raise: Error
		withMessageText: TerniLapilli gameIsOverErrorDescription !
!TerniLapilliTests methodsFor: 'tests - win' stamp: 'fr 11/2/2020 04:38:52'!
test18NoPlayerHasWonIfNoneOfThemHasThreePiecesInLine

	| terniLapilli |
	terniLapilli _ TerniLapilli new.
	terniLapilli putXAt: 1 @ 1
		 	 ;putOAt: 2 @ 3
			 ;putXAt: 1 @ 2.
	self assert: [ terniLapilli hasXWon not and: [terniLapilli hasOWon not]].! !

!methodRemoval: TerniLapilliTests #test31NoPlayerHasWonIfNoneOfThemHasThreePiecesInLine stamp: 'fr 11/2/2020 04:38:52'!
test31NoPlayerHasWonIfNoneOfThemHasThreePiecesInLine

	| terniLapilli |
	terniLapilli _ TerniLapilli new.
	terniLapilli putXAt: 1 @ 1
		 	 ;putOAt: 2 @ 3
			 ;putXAt: 1 @ 2.
	self assert: [ terniLapilli hasXWon not and: [terniLapilli hasOWon not]].!
!TerniLapilliTests methodsFor: 'tests - win' stamp: 'fr 11/2/2020 04:39:10'!
test19XWinsWhenHeGetsThreePiecesInTheSameRow

	| terniLapilli |
	terniLapilli _ TerniLapilli new.
	terniLapilli putXAt: 1 @ 1
			 ;putOAt: 2 @ 3
			 ;putXAt: 1 @ 2
			 ;putOAt: 2 @ 2
			 ;putXAt: 1 @ 3.
	self assert: [ terniLapilli hasXWon ].! !

!methodRemoval: TerniLapilliTests #test32XWinsWhenHeGetsThreePiecesInTheSameRow stamp: 'fr 11/2/2020 04:39:10'!
test32XWinsWhenHeGetsThreePiecesInTheSameRow

	| terniLapilli |
	terniLapilli _ TerniLapilli new.
	terniLapilli putXAt: 1 @ 1
			 ;putOAt: 2 @ 3
			 ;putXAt: 1 @ 2
			 ;putOAt: 2 @ 2
			 ;putXAt: 1 @ 3.
	self assert: [ terniLapilli hasXWon ].!
!TerniLapilliTests methodsFor: 'tests - win' stamp: 'fr 11/2/2020 04:39:17'!
test20XWinsWhenHeGetsThreePiecesInTheSameColumn

	| terniLapilli |
	terniLapilli _ TerniLapilli new.
	terniLapilli putXAt: 1 @ 1
			 ;putOAt: 1 @ 3
			 ;putXAt: 2 @ 1
			 ;putOAt: 1 @ 2
			 ;putXAt: 3 @ 1.
	self assert: [ terniLapilli hasXWon ].! !

!methodRemoval: TerniLapilliTests #test33XWinsWhenHeGetsThreePiecesInTheSameColumn stamp: 'fr 11/2/2020 04:39:17'!
test33XWinsWhenHeGetsThreePiecesInTheSameColumn

	| terniLapilli |
	terniLapilli _ TerniLapilli new.
	terniLapilli putXAt: 1 @ 1
			 ;putOAt: 1 @ 3
			 ;putXAt: 2 @ 1
			 ;putOAt: 1 @ 2
			 ;putXAt: 3 @ 1.
	self assert: [ terniLapilli hasXWon ].!
!TerniLapilliTests methodsFor: 'tests - win' stamp: 'fr 11/2/2020 04:39:25'!
test21XWinsWhenHeGetsThreePiecesInTheMainDiagonal

	| terniLapilli |
	terniLapilli _ TerniLapilli new.
	terniLapilli putXAt: 1 @ 1
			 ;putOAt: 1 @ 3
			 ;putXAt: 2 @ 2
			 ;putOAt: 1 @ 2
			 ;putXAt: 3 @ 3.
	self assert: [ terniLapilli hasXWon ].! !

!methodRemoval: TerniLapilliTests #test34XWinsWhenHeGetsThreePiecesInTheMainDiagonal stamp: 'fr 11/2/2020 04:39:25'!
test34XWinsWhenHeGetsThreePiecesInTheMainDiagonal

	| terniLapilli |
	terniLapilli _ TerniLapilli new.
	terniLapilli putXAt: 1 @ 1
			 ;putOAt: 1 @ 3
			 ;putXAt: 2 @ 2
			 ;putOAt: 1 @ 2
			 ;putXAt: 3 @ 3.
	self assert: [ terniLapilli hasXWon ].!
!TerniLapilliTests methodsFor: 'tests - win' stamp: 'fr 11/2/2020 04:39:30'!
test22XWinsWhenHeGetsThreePiecesInTheSecondaryDiagonal

	| terniLapilli |
	terniLapilli _ TerniLapilli new.
	terniLapilli putXAt: 1 @ 3
			 ;putOAt: 1 @ 1
			 ;putXAt: 2 @ 2
			 ;putOAt: 1 @ 2
			 ;putXAt: 3 @ 1.
	self assert: [ terniLapilli hasXWon ].! !

!methodRemoval: TerniLapilliTests #test35XWinsWhenHeGetsThreePiecesInTheSecondaryDiagonal stamp: 'fr 11/2/2020 04:39:30'!
test35XWinsWhenHeGetsThreePiecesInTheSecondaryDiagonal

	| terniLapilli |
	terniLapilli _ TerniLapilli new.
	terniLapilli putXAt: 1 @ 3
			 ;putOAt: 1 @ 1
			 ;putXAt: 2 @ 2
			 ;putOAt: 1 @ 2
			 ;putXAt: 3 @ 1.
	self assert: [ terniLapilli hasXWon ].!
!TerniLapilliTests methodsFor: 'tests - win' stamp: 'fr 11/2/2020 04:39:37'!
test23OWinsWhenHeGetsThreePiecesInLine

	| terniLapilli |
	terniLapilli _ TerniLapilli new.
	terniLapilli putXAt: 1 @ 3
			 ;putOAt: 2 @ 1
			 ;putXAt: 3 @ 1
			 ;putOAt: 2 @ 2
			 ;putXAt: 3 @ 2
			 ;putOAt: 2 @ 3.
	self assert: [ terniLapilli hasOWon ].! !

!methodRemoval: TerniLapilliTests #test36OWinsWhenHeGetsThreePiecesInLine stamp: 'fr 11/2/2020 04:39:37'!
test36OWinsWhenHeGetsThreePiecesInLine

	| terniLapilli |
	terniLapilli _ TerniLapilli new.
	terniLapilli putXAt: 1 @ 3
			 ;putOAt: 2 @ 1
			 ;putXAt: 3 @ 1
			 ;putOAt: 2 @ 2
			 ;putXAt: 3 @ 2
			 ;putOAt: 2 @ 3.
	self assert: [ terniLapilli hasOWon ].!
!TerniLapilliTests methodsFor: 'tests - win' stamp: 'fr 11/2/2020 04:39:45'!
test24OCanNotPutAfterGameIsOver

	| terniLapilli |
	terniLapilli _ TerniLapilli new.
	
	self should: [			terniLapilli putXAt: 1 @ 1
						 ;putOAt: 2 @ 2
						 ;putXAt: 2 @ 1
						 ;putOAt: 2 @ 3
						 ;putXAt: 3 @ 1
						 ;putOAt: 3 @ 3.]  
		raise: Error
		withMessageText: TerniLapilli gameIsOverErrorDescription ! !

!methodRemoval: TerniLapilliTests #test37OCanNotPutAfterGameIsOver stamp: 'fr 11/2/2020 04:39:45'!
test37OCanNotPutAfterGameIsOver

	| terniLapilli |
	terniLapilli _ TerniLapilli new.
	
	self should: [			terniLapilli putXAt: 1 @ 1
						 ;putOAt: 2 @ 2
						 ;putXAt: 2 @ 1
						 ;putOAt: 2 @ 3
						 ;putXAt: 3 @ 1
						 ;putOAt: 3 @ 3.]  
		raise: Error
		withMessageText: TerniLapilli gameIsOverErrorDescription !
!TerniLapilliTests methodsFor: 'tests - win' stamp: 'fr 11/2/2020 04:39:50'!
test25APlayerCanNotMoveAfterGameIsOver 

	| terniLapilli |
	terniLapilli _ TerniLapilli new.
	
	self should: [			terniLapilli putXAt: 1 @ 1
						 ;putOAt: 1 @ 2
						 ;putXAt: 2 @ 1
						 ;putOAt: 2 @ 2
						 ;putXAt: 2 @ 3
						 ;putOAt: 3 @ 2
						 ;moveXFrom: 2@3 to: 3@3.]  
		raise: Error
		withMessageText: TerniLapilli gameIsOverErrorDescription ! !

!methodRemoval: TerniLapilliTests #test38APlayerCanNotMoveAfterGameIsOver stamp: 'fr 11/2/2020 04:39:50'!
test38APlayerCanNotMoveAfterGameIsOver 

	| terniLapilli |
	terniLapilli _ TerniLapilli new.
	
	self should: [			terniLapilli putXAt: 1 @ 1
						 ;putOAt: 1 @ 2
						 ;putXAt: 2 @ 1
						 ;putOAt: 2 @ 2
						 ;putXAt: 2 @ 3
						 ;putOAt: 3 @ 2
						 ;moveXFrom: 2@3 to: 3@3.]  
		raise: Error
		withMessageText: TerniLapilli gameIsOverErrorDescription !
!TerniLapilliTests methodsFor: 'tests - win' stamp: 'fr 11/2/2020 04:39:54'!
test26ItIsNoOnesTurnAfterGameIsOver

	| terniLapilli |
	terniLapilli _ TerniLapilli new.
	
	terniLapilli putXAt: 1 @ 1
			 ;putOAt: 1 @ 2
			 ;putXAt: 2 @ 1
			 ;putOAt: 2 @ 2
			 ;putXAt: 3 @ 2
			 ;putOAt: 3 @ 3
			 ;moveXFrom: 3@2 to: 3@1.
	
	self assert: (terniLapilli isXsTurn not and: [terniLapilli isOsTurn not])! !

!methodRemoval: TerniLapilliTests #test40ItIsNoOnesTurnAfterGameIsOver stamp: 'fr 11/2/2020 04:39:54'!
test40ItIsNoOnesTurnAfterGameIsOver

	| terniLapilli |
	terniLapilli _ TerniLapilli new.
	
	terniLapilli putXAt: 1 @ 1
			 ;putOAt: 1 @ 2
			 ;putXAt: 2 @ 1
			 ;putOAt: 2 @ 2
			 ;putXAt: 3 @ 2
			 ;putOAt: 3 @ 3
			 ;moveXFrom: 3@2 to: 3@1.
	
	self assert: (terniLapilli isXsTurn not and: [terniLapilli isOsTurn not])!

!methodRemoval: TerniLapilliTests #test23OWinsWhenHeGetsThreePiecesInLine stamp: 'fr 11/2/2020 04:40:10'!
test23OWinsWhenHeGetsThreePiecesInLine

	| terniLapilli |
	terniLapilli _ TerniLapilli new.
	terniLapilli putXAt: 1 @ 3
			 ;putOAt: 2 @ 1
			 ;putXAt: 3 @ 1
			 ;putOAt: 2 @ 2
			 ;putXAt: 3 @ 2
			 ;putOAt: 2 @ 3.
	self assert: [ terniLapilli hasOWon ].!
!TerniLapilliTests methodsFor: 'tests - win' stamp: 'fr 11/2/2020 04:40:15'!
test19APlayerWinsWhenHeGetsThreePiecesInTheSameRow

	| terniLapilli |
	terniLapilli _ TerniLapilli new.
	terniLapilli putXAt: 1 @ 1
			 ;putOAt: 2 @ 3
			 ;putXAt: 1 @ 2
			 ;putOAt: 2 @ 2
			 ;putXAt: 1 @ 3.
	self assert: [ terniLapilli hasXWon ].! !

!methodRemoval: TerniLapilliTests #test19XWinsWhenHeGetsThreePiecesInTheSameRow stamp: 'fr 11/2/2020 04:40:15'!
test19XWinsWhenHeGetsThreePiecesInTheSameRow

	| terniLapilli |
	terniLapilli _ TerniLapilli new.
	terniLapilli putXAt: 1 @ 1
			 ;putOAt: 2 @ 3
			 ;putXAt: 1 @ 2
			 ;putOAt: 2 @ 2
			 ;putXAt: 1 @ 3.
	self assert: [ terniLapilli hasXWon ].!
!TerniLapilliTests methodsFor: 'tests - win' stamp: 'fr 11/2/2020 04:40:19'!
test20APlayerWinsWhenHeGetsThreePiecesInTheSameColumn

	| terniLapilli |
	terniLapilli _ TerniLapilli new.
	terniLapilli putXAt: 1 @ 1
			 ;putOAt: 1 @ 3
			 ;putXAt: 2 @ 1
			 ;putOAt: 1 @ 2
			 ;putXAt: 3 @ 1.
	self assert: [ terniLapilli hasXWon ].! !

!methodRemoval: TerniLapilliTests #test20XWinsWhenHeGetsThreePiecesInTheSameColumn stamp: 'fr 11/2/2020 04:40:19'!
test20XWinsWhenHeGetsThreePiecesInTheSameColumn

	| terniLapilli |
	terniLapilli _ TerniLapilli new.
	terniLapilli putXAt: 1 @ 1
			 ;putOAt: 1 @ 3
			 ;putXAt: 2 @ 1
			 ;putOAt: 1 @ 2
			 ;putXAt: 3 @ 1.
	self assert: [ terniLapilli hasXWon ].!
!TerniLapilliTests methodsFor: 'tests - win' stamp: 'fr 11/2/2020 04:40:24'!
test21APlayerWinsWhenHeGetsThreePiecesInTheMainDiagonal

	| terniLapilli |
	terniLapilli _ TerniLapilli new.
	terniLapilli putXAt: 1 @ 1
			 ;putOAt: 1 @ 3
			 ;putXAt: 2 @ 2
			 ;putOAt: 1 @ 2
			 ;putXAt: 3 @ 3.
	self assert: [ terniLapilli hasXWon ].! !

!methodRemoval: TerniLapilliTests #test21XWinsWhenHeGetsThreePiecesInTheMainDiagonal stamp: 'fr 11/2/2020 04:40:24'!
test21XWinsWhenHeGetsThreePiecesInTheMainDiagonal

	| terniLapilli |
	terniLapilli _ TerniLapilli new.
	terniLapilli putXAt: 1 @ 1
			 ;putOAt: 1 @ 3
			 ;putXAt: 2 @ 2
			 ;putOAt: 1 @ 2
			 ;putXAt: 3 @ 3.
	self assert: [ terniLapilli hasXWon ].!
!TerniLapilliTests methodsFor: 'tests - win' stamp: 'fr 11/2/2020 04:40:29'!
test22APlayerWinsWhenHeGetsThreePiecesInTheSecondaryDiagonal

	| terniLapilli |
	terniLapilli _ TerniLapilli new.
	terniLapilli putXAt: 1 @ 3
			 ;putOAt: 1 @ 1
			 ;putXAt: 2 @ 2
			 ;putOAt: 1 @ 2
			 ;putXAt: 3 @ 1.
	self assert: [ terniLapilli hasXWon ].! !

!methodRemoval: TerniLapilliTests #test22XWinsWhenHeGetsThreePiecesInTheSecondaryDiagonal stamp: 'fr 11/2/2020 04:40:29'!
test22XWinsWhenHeGetsThreePiecesInTheSecondaryDiagonal

	| terniLapilli |
	terniLapilli _ TerniLapilli new.
	terniLapilli putXAt: 1 @ 3
			 ;putOAt: 1 @ 1
			 ;putXAt: 2 @ 2
			 ;putOAt: 1 @ 2
			 ;putXAt: 3 @ 1.
	self assert: [ terniLapilli hasXWon ].!
!TerniLapilliTests methodsFor: 'tests - win' stamp: 'fr 11/2/2020 04:40:57'!
test24OCanNotPutAfterXHasWon

	| terniLapilli |
	terniLapilli _ TerniLapilli new.
	
	self should: [			terniLapilli putXAt: 1 @ 1
						 ;putOAt: 2 @ 2
						 ;putXAt: 2 @ 1
						 ;putOAt: 2 @ 3
						 ;putXAt: 3 @ 1
						 ;putOAt: 3 @ 3.]  
		raise: Error
		withMessageText: TerniLapilli gameIsOverErrorDescription ! !

!methodRemoval: TerniLapilliTests #test24OCanNotPutAfterGameIsOver stamp: 'fr 11/2/2020 04:40:57'!
test24OCanNotPutAfterGameIsOver

	| terniLapilli |
	terniLapilli _ TerniLapilli new.
	
	self should: [			terniLapilli putXAt: 1 @ 1
						 ;putOAt: 2 @ 2
						 ;putXAt: 2 @ 1
						 ;putOAt: 2 @ 3
						 ;putXAt: 3 @ 1
						 ;putOAt: 3 @ 3.]  
		raise: Error
		withMessageText: TerniLapilli gameIsOverErrorDescription !
!TerniLapilliTests methodsFor: 'tests - win' stamp: 'fr 11/2/2020 04:41:19'!
test25APlayerCanNotMoveAfterTheOtherPlayerWon 

	| terniLapilli |
	terniLapilli _ TerniLapilli new.
	
	self should: [			terniLapilli putXAt: 1 @ 1
						 ;putOAt: 1 @ 2
						 ;putXAt: 2 @ 1
						 ;putOAt: 2 @ 2
						 ;putXAt: 2 @ 3
						 ;putOAt: 3 @ 2
						 ;moveXFrom: 2@3 to: 3@3.]  
		raise: Error
		withMessageText: TerniLapilli gameIsOverErrorDescription ! !

!methodRemoval: TerniLapilliTests #test25APlayerCanNotMoveAfterGameIsOver stamp: 'fr 11/2/2020 04:41:19'!
test25APlayerCanNotMoveAfterGameIsOver 

	| terniLapilli |
	terniLapilli _ TerniLapilli new.
	
	self should: [			terniLapilli putXAt: 1 @ 1
						 ;putOAt: 1 @ 2
						 ;putXAt: 2 @ 1
						 ;putOAt: 2 @ 2
						 ;putXAt: 2 @ 3
						 ;putOAt: 3 @ 2
						 ;moveXFrom: 2@3 to: 3@3.]  
		raise: Error
		withMessageText: TerniLapilli gameIsOverErrorDescription !
!TerniLapilliTests methodsFor: 'tests - win' stamp: 'fr 11/2/2020 04:41:33'!
test25APlayerCanNotMoveAfterTheOtherPlayerHasWon 

	| terniLapilli |
	terniLapilli _ TerniLapilli new.
	
	self should: [			terniLapilli putXAt: 1 @ 1
						 ;putOAt: 1 @ 2
						 ;putXAt: 2 @ 1
						 ;putOAt: 2 @ 2
						 ;putXAt: 2 @ 3
						 ;putOAt: 3 @ 2
						 ;moveXFrom: 2@3 to: 3@3.]  
		raise: Error
		withMessageText: TerniLapilli gameIsOverErrorDescription ! !

!methodRemoval: TerniLapilliTests #test25APlayerCanNotMoveAfterTheOtherPlayerWon stamp: 'fr 11/2/2020 04:41:33'!
test25APlayerCanNotMoveAfterTheOtherPlayerWon 

	| terniLapilli |
	terniLapilli _ TerniLapilli new.
	
	self should: [			terniLapilli putXAt: 1 @ 1
						 ;putOAt: 1 @ 2
						 ;putXAt: 2 @ 1
						 ;putOAt: 2 @ 2
						 ;putXAt: 2 @ 3
						 ;putOAt: 3 @ 2
						 ;moveXFrom: 2@3 to: 3@3.]  
		raise: Error
		withMessageText: TerniLapilli gameIsOverErrorDescription !
!TerniLapilliTests methodsFor: 'tests - win' stamp: 'fr 11/2/2020 04:41:49'!
test26ItIsNoOnesTurnAfterAnyOfThePlayersHasWon

	| terniLapilli |
	terniLapilli _ TerniLapilli new.
	
	terniLapilli putXAt: 1 @ 1
			 ;putOAt: 1 @ 2
			 ;putXAt: 2 @ 1
			 ;putOAt: 2 @ 2
			 ;putXAt: 3 @ 2
			 ;putOAt: 3 @ 3
			 ;moveXFrom: 3@2 to: 3@1.
	
	self assert: (terniLapilli isXsTurn not and: [terniLapilli isOsTurn not])! !

!methodRemoval: TerniLapilliTests #test26ItIsNoOnesTurnAfterGameIsOver stamp: 'fr 11/2/2020 04:41:49'!
test26ItIsNoOnesTurnAfterGameIsOver

	| terniLapilli |
	terniLapilli _ TerniLapilli new.
	
	terniLapilli putXAt: 1 @ 1
			 ;putOAt: 1 @ 2
			 ;putXAt: 2 @ 1
			 ;putOAt: 2 @ 2
			 ;putXAt: 3 @ 2
			 ;putOAt: 3 @ 3
			 ;moveXFrom: 3@2 to: 3@1.
	
	self assert: (terniLapilli isXsTurn not and: [terniLapilli isOsTurn not])!
!TerniLapilli methodsFor: 'private - state safe actions' stamp: 'fr 11/2/2020 04:46:07' prior: 50886760!
safePutXAt: aPosition 
	
	self validate: aPosition andAddFor: #O! !

!testRun: #TerniLapilliTests #test01XPlaysFirstAndOAfter stamp: 'fr 11/2/2020 04:46:08'!
PASSED!

!testRun: #TerniLapilliTests #test02OPlaysSecondAndXAfter stamp: 'fr 11/2/2020 04:46:08'!
PASSED!

!testRun: #TerniLapilliTests #test03ODoesNotPlayFirst stamp: 'fr 11/2/2020 04:46:08'!
PASSED!

!testRun: #TerniLapilliTests #test04APlayerCanNotPlayTwoTimesInARow stamp: 'fr 11/2/2020 04:46:08'!
PASSED!

!testRun: #TerniLapilliTests #test05APlayerPieceIsWhereHePutsIt stamp: 'fr 11/2/2020 04:46:08'!
FAILURE!

!testRun: #TerniLapilliTests #test06APlayerPieceIsNotWhereHeDoesNotPutIt stamp: 'fr 11/2/2020 04:46:08'!
PASSED!

!testRun: #TerniLapilliTests #test07APlayerCanPutMoreThanOnePieceCorrectly stamp: 'fr 11/2/2020 04:46:08'!
FAILURE!

!testRun: #TerniLapilliTests #test08APlayerCanNotPutAPieceInAnOccupiedPosition stamp: 'fr 11/2/2020 04:46:08'!
PASSED!

!testRun: #TerniLapilliTests #test09APlayerCanNotPutAPieceOutOfBounds stamp: 'fr 11/2/2020 04:46:08'!
PASSED!

!testRun: #TerniLapilliTests #test10APlayerCanNotPutMoreThanThreePieces stamp: 'fr 11/2/2020 04:46:08'!
FAILURE!

!testRun: #TerniLapilliTests #test11WhenAPlayerMovesAPieceItIsAtTheNewPositionAndNotAtThePreviousOne stamp: 'fr 11/2/2020 04:46:08'!
ERROR!

!testRun: #TerniLapilliTests #test12APlayerCanNotMoveBeforeAddingThreePieces stamp: 'fr 11/2/2020 04:46:08'!
PASSED!

!testRun: #TerniLapilliTests #test13APlayerCanNotMoveFromAPositionThatIsNotUnderHisControl stamp: 'fr 11/2/2020 04:46:08'!
FAILURE!

!testRun: #TerniLapilliTests #test14APlayerCanNotMoveFromAnOutOfBoundsPosition stamp: 'fr 11/2/2020 04:46:08'!
FAILURE!

!testRun: #TerniLapilliTests #test15APlayerCanNotMoveToAnOutOfBoundsPosition stamp: 'fr 11/2/2020 04:46:08'!
FAILURE!

!testRun: #TerniLapilliTests #test16APlayerCanNotMoveToAnOccupiedPosition stamp: 'fr 11/2/2020 04:46:08'!
FAILURE!

!testRun: #TerniLapilliTests #test17APlayerCanNotMoveToAnUnreachablePosition stamp: 'fr 11/2/2020 04:46:08'!
FAILURE!

!testRun: #TerniLapilliTests #test18NoPlayerHasWonIfNoneOfThemHasThreePiecesInLine stamp: 'fr 11/2/2020 04:46:08'!
PASSED!

!testRun: #TerniLapilliTests #test19APlayerWinsWhenHeGetsThreePiecesInTheSameRow stamp: 'fr 11/2/2020 04:46:08'!
ERROR!

!testRun: #TerniLapilliTests #test20APlayerWinsWhenHeGetsThreePiecesInTheSameColumn stamp: 'fr 11/2/2020 04:46:08'!
ERROR!

!testRun: #TerniLapilliTests #test21APlayerWinsWhenHeGetsThreePiecesInTheMainDiagonal stamp: 'fr 11/2/2020 04:46:08'!
ERROR!

!testRun: #TerniLapilliTests #test22APlayerWinsWhenHeGetsThreePiecesInTheSecondaryDiagonal stamp: 'fr 11/2/2020 04:46:08'!
ERROR!

!testRun: #TerniLapilliTests #test24OCanNotPutAfterXHasWon stamp: 'fr 11/2/2020 04:46:08'!
FAILURE!

!testRun: #TerniLapilliTests #test25APlayerCanNotMoveAfterTheOtherPlayerHasWon stamp: 'fr 11/2/2020 04:46:08'!
FAILURE!

!testRun: #TerniLapilliTests #test26ItIsNoOnesTurnAfterAnyOfThePlayersHasWon stamp: 'fr 11/2/2020 04:46:08'!
ERROR!
!TerniLapilli methodsFor: 'private - state safe actions' stamp: 'fr 11/2/2020 04:46:14' prior: 50892504!
safePutXAt: aPosition 
	
	self validate: aPosition andAddFor: #X! !

!testRun: #TerniLapilliTests #test01XPlaysFirstAndOAfter stamp: 'fr 11/2/2020 04:46:15'!
PASSED!

!testRun: #TerniLapilliTests #test02OPlaysSecondAndXAfter stamp: 'fr 11/2/2020 04:46:15'!
PASSED!

!testRun: #TerniLapilliTests #test03ODoesNotPlayFirst stamp: 'fr 11/2/2020 04:46:15'!
PASSED!

!testRun: #TerniLapilliTests #test04APlayerCanNotPlayTwoTimesInARow stamp: 'fr 11/2/2020 04:46:15'!
PASSED!

!testRun: #TerniLapilliTests #test05APlayerPieceIsWhereHePutsIt stamp: 'fr 11/2/2020 04:46:15'!
PASSED!

!testRun: #TerniLapilliTests #test06APlayerPieceIsNotWhereHeDoesNotPutIt stamp: 'fr 11/2/2020 04:46:15'!
PASSED!

!testRun: #TerniLapilliTests #test07APlayerCanPutMoreThanOnePieceCorrectly stamp: 'fr 11/2/2020 04:46:15'!
PASSED!

!testRun: #TerniLapilliTests #test08APlayerCanNotPutAPieceInAnOccupiedPosition stamp: 'fr 11/2/2020 04:46:15'!
PASSED!

!testRun: #TerniLapilliTests #test09APlayerCanNotPutAPieceOutOfBounds stamp: 'fr 11/2/2020 04:46:15'!
PASSED!

!testRun: #TerniLapilliTests #test10APlayerCanNotPutMoreThanThreePieces stamp: 'fr 11/2/2020 04:46:15'!
PASSED!

!testRun: #TerniLapilliTests #test11WhenAPlayerMovesAPieceItIsAtTheNewPositionAndNotAtThePreviousOne stamp: 'fr 11/2/2020 04:46:15'!
PASSED!

!testRun: #TerniLapilliTests #test12APlayerCanNotMoveBeforeAddingThreePieces stamp: 'fr 11/2/2020 04:46:15'!
PASSED!

!testRun: #TerniLapilliTests #test13APlayerCanNotMoveFromAPositionThatIsNotUnderHisControl stamp: 'fr 11/2/2020 04:46:15'!
PASSED!

!testRun: #TerniLapilliTests #test14APlayerCanNotMoveFromAnOutOfBoundsPosition stamp: 'fr 11/2/2020 04:46:15'!
PASSED!

!testRun: #TerniLapilliTests #test15APlayerCanNotMoveToAnOutOfBoundsPosition stamp: 'fr 11/2/2020 04:46:15'!
PASSED!

!testRun: #TerniLapilliTests #test16APlayerCanNotMoveToAnOccupiedPosition stamp: 'fr 11/2/2020 04:46:15'!
PASSED!

!testRun: #TerniLapilliTests #test17APlayerCanNotMoveToAnUnreachablePosition stamp: 'fr 11/2/2020 04:46:15'!
PASSED!

!testRun: #TerniLapilliTests #test18NoPlayerHasWonIfNoneOfThemHasThreePiecesInLine stamp: 'fr 11/2/2020 04:46:15'!
PASSED!

!testRun: #TerniLapilliTests #test19APlayerWinsWhenHeGetsThreePiecesInTheSameRow stamp: 'fr 11/2/2020 04:46:15'!
PASSED!

!testRun: #TerniLapilliTests #test20APlayerWinsWhenHeGetsThreePiecesInTheSameColumn stamp: 'fr 11/2/2020 04:46:15'!
PASSED!

!testRun: #TerniLapilliTests #test21APlayerWinsWhenHeGetsThreePiecesInTheMainDiagonal stamp: 'fr 11/2/2020 04:46:15'!
PASSED!

!testRun: #TerniLapilliTests #test22APlayerWinsWhenHeGetsThreePiecesInTheSecondaryDiagonal stamp: 'fr 11/2/2020 04:46:15'!
PASSED!

!testRun: #TerniLapilliTests #test24OCanNotPutAfterXHasWon stamp: 'fr 11/2/2020 04:46:15'!
PASSED!

!testRun: #TerniLapilliTests #test25APlayerCanNotMoveAfterTheOtherPlayerHasWon stamp: 'fr 11/2/2020 04:46:15'!
PASSED!

!testRun: #TerniLapilliTests #test26ItIsNoOnesTurnAfterAnyOfThePlayersHasWon stamp: 'fr 11/2/2020 04:46:15'!
PASSED!
!TerniLapilliTests methodsFor: 'tests - win' stamp: 'fr 11/2/2020 04:46:30'!
test23OCanNotPutAfterXHasWon

	| terniLapilli |
	terniLapilli _ TerniLapilli new.
	
	self should: [			terniLapilli putXAt: 1 @ 1
						 ;putOAt: 2 @ 2
						 ;putXAt: 2 @ 1
						 ;putOAt: 2 @ 3
						 ;putXAt: 3 @ 1
						 ;putOAt: 3 @ 3.]  
		raise: Error
		withMessageText: TerniLapilli gameIsOverErrorDescription ! !

!methodRemoval: TerniLapilliTests #test24OCanNotPutAfterXHasWon stamp: 'fr 11/2/2020 04:46:30'!
test24OCanNotPutAfterXHasWon

	| terniLapilli |
	terniLapilli _ TerniLapilli new.
	
	self should: [			terniLapilli putXAt: 1 @ 1
						 ;putOAt: 2 @ 2
						 ;putXAt: 2 @ 1
						 ;putOAt: 2 @ 3
						 ;putXAt: 3 @ 1
						 ;putOAt: 3 @ 3.]  
		raise: Error
		withMessageText: TerniLapilli gameIsOverErrorDescription !
!TerniLapilliTests methodsFor: 'tests - win' stamp: 'fr 11/2/2020 04:46:33'!
test24APlayerCanNotMoveAfterTheOtherPlayerHasWon 

	| terniLapilli |
	terniLapilli _ TerniLapilli new.
	
	self should: [			terniLapilli putXAt: 1 @ 1
						 ;putOAt: 1 @ 2
						 ;putXAt: 2 @ 1
						 ;putOAt: 2 @ 2
						 ;putXAt: 2 @ 3
						 ;putOAt: 3 @ 2
						 ;moveXFrom: 2@3 to: 3@3.]  
		raise: Error
		withMessageText: TerniLapilli gameIsOverErrorDescription ! !

!methodRemoval: TerniLapilliTests #test25APlayerCanNotMoveAfterTheOtherPlayerHasWon stamp: 'fr 11/2/2020 04:46:33'!
test25APlayerCanNotMoveAfterTheOtherPlayerHasWon 

	| terniLapilli |
	terniLapilli _ TerniLapilli new.
	
	self should: [			terniLapilli putXAt: 1 @ 1
						 ;putOAt: 1 @ 2
						 ;putXAt: 2 @ 1
						 ;putOAt: 2 @ 2
						 ;putXAt: 2 @ 3
						 ;putOAt: 3 @ 2
						 ;moveXFrom: 2@3 to: 3@3.]  
		raise: Error
		withMessageText: TerniLapilli gameIsOverErrorDescription !
!TerniLapilliTests methodsFor: 'tests - win' stamp: 'fr 11/2/2020 04:46:38'!
test25ItIsNoOnesTurnAfterAnyOfThePlayersHasWon

	| terniLapilli |
	terniLapilli _ TerniLapilli new.
	
	terniLapilli putXAt: 1 @ 1
			 ;putOAt: 1 @ 2
			 ;putXAt: 2 @ 1
			 ;putOAt: 2 @ 2
			 ;putXAt: 3 @ 2
			 ;putOAt: 3 @ 3
			 ;moveXFrom: 3@2 to: 3@1.
	
	self assert: (terniLapilli isXsTurn not and: [terniLapilli isOsTurn not])! !

!methodRemoval: TerniLapilliTests #test26ItIsNoOnesTurnAfterAnyOfThePlayersHasWon stamp: 'fr 11/2/2020 04:46:38'!
test26ItIsNoOnesTurnAfterAnyOfThePlayersHasWon

	| terniLapilli |
	terniLapilli _ TerniLapilli new.
	
	terniLapilli putXAt: 1 @ 1
			 ;putOAt: 1 @ 2
			 ;putXAt: 2 @ 1
			 ;putOAt: 2 @ 2
			 ;putXAt: 3 @ 2
			 ;putOAt: 3 @ 3
			 ;moveXFrom: 3@2 to: 3@1.
	
	self assert: (terniLapilli isXsTurn not and: [terniLapilli isOsTurn not])!

----SNAPSHOT----(2 November 2020 04:49:38) CuisUniversity-4384.image priorSource: 17909738!

----SNAPSHOT----(2 November 2020 04:49:59) CuisUniversity-4384.image priorSource: 17956140!