

----End fileIn of /home/guille/Desktop/Ingeniería 1/isw1-ejercicios/18-Portfolio1/Portfolio-Ejercicio.st----!

!testRun: #PortfolioTest #test01APortfolioHaveZeroAsBalanceWhenCreated stamp: 'G. B. 11/7/2020 00:01:42'!
PASSED!

!testRun: #PortfolioTest #test02APortfolioWithOnePortfolioWithNonZeroBalanceHasTheBalanceOfTheAccount stamp: 'G. B. 11/7/2020 00:01:42'!
PASSED!

!testRun: #PortfolioTest #test03APortfolioWithManyAccountWithNonZeroBalanceHasTheSumOfBalance stamp: 'G. B. 11/7/2020 00:01:42'!
PASSED!

!testRun: #PortfolioTest #test04AnEmptyPortfolioDontKnowAnyTransaction stamp: 'G. B. 11/7/2020 00:01:42'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioKnowsRegisteredTransactions stamp: 'G. B. 11/7/2020 00:01:42'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioWithManyAccountsKnowsRegisteredTransactions stamp: 'G. B. 11/7/2020 00:01:42'!
PASSED!

!testRun: #PortfolioTest #test07AnEmptyPortfolioHasZeroTransaction stamp: 'G. B. 11/7/2020 00:01:42'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioWithOneAccountKnewTheAccountTransactions stamp: 'G. B. 11/7/2020 00:01:42'!
PASSED!

----QUIT----(7 November 2020 00:01:54) CuisUniversity-4383.image priorSource: 19168957!

----STARTUP---- (7 November 2020 18:23:01) as /mnt/6750e462-c385-4872-92cc-c2b6e5c52075/Documents/UBA/1er cuatri 2020/Ingeniería 1/VM CUIS/CuisUniversity-4383.image!


!classRemoval: #ReceptiveAccount stamp: 'G. B. 11/7/2020 18:23:27'!
Object subclass: #ReceptiveAccount
	instanceVariableNames: 'transactions'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classRemoval: #Portfolio stamp: 'G. B. 11/7/2020 18:23:29'!
Object subclass: #Portfolio
	instanceVariableNames: 'accounts'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classRemoval: #Withdraw stamp: 'G. B. 11/7/2020 18:23:30'!
AccountTransaction subclass: #Withdraw
	instanceVariableNames: 'value'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classRemoval: #Deposit stamp: 'G. B. 11/7/2020 18:23:31'!
AccountTransaction subclass: #Deposit
	instanceVariableNames: 'value'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classRemoval: #AccountTransaction stamp: 'G. B. 11/7/2020 18:23:32'!
Object subclass: #AccountTransaction
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classRemoval: #ReceptiveAccountTest stamp: 'G. B. 11/7/2020 18:23:33'!
TestCase subclass: #ReceptiveAccountTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classRemoval: #PortfolioTest stamp: 'G. B. 11/7/2020 18:23:34'!
TestCase subclass: #PortfolioTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

----End fileIn of /home/guille/Desktop/Ingeniería 1/isw1-ejercicios/18-Portfolio1/Portfolio-Ejercicio.st----!

!testRun: #PortfolioTest #test01APortfolioHaveZeroAsBalanceWhenCreated stamp: 'G. B. 11/7/2020 18:23:47'!
PASSED!

!testRun: #PortfolioTest #test02APortfolioWithOnePortfolioWithNonZeroBalanceHasTheBalanceOfTheAccount stamp: 'G. B. 11/7/2020 18:23:47'!
PASSED!

!testRun: #PortfolioTest #test03APortfolioWithManyAccountWithNonZeroBalanceHasTheSumOfBalance stamp: 'G. B. 11/7/2020 18:23:47'!
PASSED!

!testRun: #PortfolioTest #test04AnEmptyPortfolioDontKnowAnyTransaction stamp: 'G. B. 11/7/2020 18:23:47'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioKnowsRegisteredTransactions stamp: 'G. B. 11/7/2020 18:23:47'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioWithManyAccountsKnowsRegisteredTransactions stamp: 'G. B. 11/7/2020 18:23:47'!
PASSED!

!testRun: #PortfolioTest #test07AnEmptyPortfolioHasZeroTransaction stamp: 'G. B. 11/7/2020 18:23:47'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioWithOneAccountKnewTheAccountTransactions stamp: 'G. B. 11/7/2020 18:23:47'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'G. B. 11/7/2020 18:23:47'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'G. B. 11/7/2020 18:23:47'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'G. B. 11/7/2020 18:23:47'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'G. B. 11/7/2020 18:23:47'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'G. B. 11/7/2020 18:23:47'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'G. B. 11/7/2020 18:23:47'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'G. B. 11/7/2020 18:23:47'!
PASSED!
!PortfolioTest methodsFor: 'test - transactions' stamp: 'G. B. 11/7/2020 18:31:55' prior: 50931405!
test07AnEmptyPortfolioHasZeroTransaction

	|  portfolio expectedResult |
	
	portfolio := Portfolio new.
	expectedResult := Set new. 

	
	self assert: expectedResult equals:  portfolio transactions.
! !

!testRun: #PortfolioTest #test07AnEmptyPortfolioHasZeroTransaction stamp: 'G. B. 11/7/2020 18:31:58'!
PASSED!

!testRun: #PortfolioTest #test01APortfolioHaveZeroAsBalanceWhenCreated stamp: 'G. B. 11/7/2020 18:31:58'!
PASSED!

!testRun: #PortfolioTest #test02APortfolioWithOnePortfolioWithNonZeroBalanceHasTheBalanceOfTheAccount stamp: 'G. B. 11/7/2020 18:31:58'!
PASSED!

!testRun: #PortfolioTest #test03APortfolioWithManyAccountWithNonZeroBalanceHasTheSumOfBalance stamp: 'G. B. 11/7/2020 18:31:58'!
PASSED!

!testRun: #PortfolioTest #test04AnEmptyPortfolioDontKnowAnyTransaction stamp: 'G. B. 11/7/2020 18:31:58'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioKnowsRegisteredTransactions stamp: 'G. B. 11/7/2020 18:31:58'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioWithManyAccountsKnowsRegisteredTransactions stamp: 'G. B. 11/7/2020 18:31:58'!
PASSED!

!testRun: #PortfolioTest #test07AnEmptyPortfolioHasZeroTransaction stamp: 'G. B. 11/7/2020 18:31:58'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioWithOneAccountKnewTheAccountTransactions stamp: 'G. B. 11/7/2020 18:31:58'!
PASSED!
!PortfolioTest methodsFor: 'test - transactions' stamp: 'G. B. 11/7/2020 18:32:32' prior: 50931413!
test08PortfolioWithOneAccountKnewTheAccountTransactions

	|  portfolio anAccount expectedResult aDeposit aWithdraw portfolio2 portfolio3 |
	
	anAccount := ReceptiveAccount new.
	aDeposit := Deposit register: 100 on: anAccount.
	aWithdraw := Withdraw register: 50 on: anAccount. 
	
	portfolio3 := Portfolio with: anAccount. 
	portfolio2 := Portfolio with: portfolio3. 
	portfolio := Portfolio with: portfolio2.  
	
	expectedResult := Set with: aDeposit with: aWithdraw. 
	
	self assert: expectedResult equals:  portfolio2 transactions.

	! !

!testRun: #PortfolioTest #test08PortfolioWithOneAccountKnewTheAccountTransactions stamp: 'G. B. 11/7/2020 18:32:36'!
PASSED!

!testRun: #PortfolioTest #test01APortfolioHaveZeroAsBalanceWhenCreated stamp: 'G. B. 11/7/2020 18:32:36'!
PASSED!

!testRun: #PortfolioTest #test02APortfolioWithOnePortfolioWithNonZeroBalanceHasTheBalanceOfTheAccount stamp: 'G. B. 11/7/2020 18:32:36'!
PASSED!

!testRun: #PortfolioTest #test03APortfolioWithManyAccountWithNonZeroBalanceHasTheSumOfBalance stamp: 'G. B. 11/7/2020 18:32:36'!
PASSED!

!testRun: #PortfolioTest #test04AnEmptyPortfolioDontKnowAnyTransaction stamp: 'G. B. 11/7/2020 18:32:36'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioKnowsRegisteredTransactions stamp: 'G. B. 11/7/2020 18:32:36'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioWithManyAccountsKnowsRegisteredTransactions stamp: 'G. B. 11/7/2020 18:32:36'!
PASSED!

!testRun: #PortfolioTest #test07AnEmptyPortfolioHasZeroTransaction stamp: 'G. B. 11/7/2020 18:32:36'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioWithOneAccountKnewTheAccountTransactions stamp: 'G. B. 11/7/2020 18:32:36'!
PASSED!
!PortfolioTest methodsFor: 'test - transactions' stamp: 'G. B. 11/7/2020 18:32:41' prior: 50931848!
test08PortfolioWithOneAccountKnewTheAccountTransactions

	|  portfolio anAccount expectedResult aDeposit aWithdraw portfolio2 portfolio3 |
	
	anAccount := ReceptiveAccount new.
	aDeposit := Deposit register: 100 on: anAccount.
	aWithdraw := Withdraw register: 50 on: anAccount. 
	
	portfolio3 := Portfolio with: anAccount. 
	portfolio2 := Portfolio with: portfolio3. 
	portfolio := Portfolio with: portfolio2.  
	
	expectedResult := Set with: aDeposit with: aWithdraw. 
	
	self assert: expectedResult equals:  portfolio3 transactions.

	! !

!testRun: #PortfolioTest #test08PortfolioWithOneAccountKnewTheAccountTransactions stamp: 'G. B. 11/7/2020 18:32:43'!
PASSED!

!testRun: #PortfolioTest #test01APortfolioHaveZeroAsBalanceWhenCreated stamp: 'G. B. 11/7/2020 18:32:43'!
PASSED!

!testRun: #PortfolioTest #test02APortfolioWithOnePortfolioWithNonZeroBalanceHasTheBalanceOfTheAccount stamp: 'G. B. 11/7/2020 18:32:43'!
PASSED!

!testRun: #PortfolioTest #test03APortfolioWithManyAccountWithNonZeroBalanceHasTheSumOfBalance stamp: 'G. B. 11/7/2020 18:32:43'!
PASSED!

!testRun: #PortfolioTest #test04AnEmptyPortfolioDontKnowAnyTransaction stamp: 'G. B. 11/7/2020 18:32:43'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioKnowsRegisteredTransactions stamp: 'G. B. 11/7/2020 18:32:43'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioWithManyAccountsKnowsRegisteredTransactions stamp: 'G. B. 11/7/2020 18:32:43'!
PASSED!

!testRun: #PortfolioTest #test07AnEmptyPortfolioHasZeroTransaction stamp: 'G. B. 11/7/2020 18:32:43'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioWithOneAccountKnewTheAccountTransactions stamp: 'G. B. 11/7/2020 18:32:44'!
PASSED!
!PortfolioTest methodsFor: 'test - transactions' stamp: 'G. B. 11/7/2020 18:32:46' prior: 50931903!
test08PortfolioWithOneAccountKnewTheAccountTransactions

	|  portfolio anAccount expectedResult aDeposit aWithdraw portfolio2 portfolio3 |
	
	anAccount := ReceptiveAccount new.
	aDeposit := Deposit register: 100 on: anAccount.
	aWithdraw := Withdraw register: 50 on: anAccount. 
	
	portfolio3 := Portfolio with: anAccount. 
	portfolio2 := Portfolio with: portfolio3. 
	portfolio := Portfolio with: portfolio2.  
	
	expectedResult := Set with: aDeposit with: aWithdraw. 
	
	self assert: expectedResult equals:  portfolio transactions.

	! !

!testRun: #PortfolioTest #test08PortfolioWithOneAccountKnewTheAccountTransactions stamp: 'G. B. 11/7/2020 18:32:47'!
PASSED!

!testRun: #PortfolioTest #test01APortfolioHaveZeroAsBalanceWhenCreated stamp: 'G. B. 11/7/2020 18:32:47'!
PASSED!

!testRun: #PortfolioTest #test02APortfolioWithOnePortfolioWithNonZeroBalanceHasTheBalanceOfTheAccount stamp: 'G. B. 11/7/2020 18:32:47'!
PASSED!

!testRun: #PortfolioTest #test03APortfolioWithManyAccountWithNonZeroBalanceHasTheSumOfBalance stamp: 'G. B. 11/7/2020 18:32:47'!
PASSED!

!testRun: #PortfolioTest #test04AnEmptyPortfolioDontKnowAnyTransaction stamp: 'G. B. 11/7/2020 18:32:47'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioKnowsRegisteredTransactions stamp: 'G. B. 11/7/2020 18:32:47'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioWithManyAccountsKnowsRegisteredTransactions stamp: 'G. B. 11/7/2020 18:32:47'!
PASSED!

!testRun: #PortfolioTest #test07AnEmptyPortfolioHasZeroTransaction stamp: 'G. B. 11/7/2020 18:32:47'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioWithOneAccountKnewTheAccountTransactions stamp: 'G. B. 11/7/2020 18:32:47'!
PASSED!
!PortfolioTest methodsFor: 'test - transactions' stamp: 'G. B. 11/7/2020 18:33:50'!
test09PortfolioWithManyAccountsKnowsTheAccountsTransactions

	|  portfolio anAccount expectedResult aDeposit aWithdraw portfolio2 portfolio3 |
	
	anAccount := ReceptiveAccount new.
	aDeposit := Deposit register: 100 on: anAccount.
	aWithdraw := Withdraw register: 50 on: anAccount. 
	
	portfolio3 := Portfolio with: anAccount. 
	portfolio2 := Portfolio with: portfolio3. 
	portfolio := Portfolio with: portfolio2.  
	
	expectedResult := Set with: aDeposit with: aWithdraw. 
	
	self assert: expectedResult equals:  portfolio transactions.

	! !
!PortfolioTest methodsFor: 'test - transactions' stamp: 'G. B. 11/7/2020 18:35:28' prior: 50932013!
test09PortfolioWithManyAccountsKnowsTheAccountsTransactions

	|  portfolio account1 account2 expectedResult aDeposit aWithdraw portfolio2 portfolio3 |
	
	account1 := ReceptiveAccount new.
	aDeposit := Deposit register: 100 on: account1.
	aWithdraw := Withdraw register: 50 on: account1. 
	
	account2 := ReceptiveAccount new.
	aDeposit := Deposit register: 34 on: account2.
	aWithdraw := Withdraw register: 55 on: account2. 
	
	portfolio3 := Portfolio with: account1. 
	portfolio2 := Portfolio with: portfolio3. 
	portfolio := Portfolio with: portfolio2. 
	
	portfolio add: account2.
	
	expectedResult := Set with: aDeposit with: aWithdraw. 
	
	self assert: expectedResult equals:  portfolio transactions.

	! !
!PortfolioTest methodsFor: 'test - transactions' stamp: 'G. B. 11/7/2020 18:36:24' prior: 50932034!
test09PortfolioWithManyAccountsKnowsTheAccountsTransactions

	|  portfolio account1 account2 expectedResult aDeposit aWithdraw portfolio2 portfolio3 deposit2 withdraw2 |
	
	account1 := ReceptiveAccount new.
	aDeposit := Deposit register: 100 on: account1.
	aWithdraw := Withdraw register: 50 on: account1. 
	
	account2 := ReceptiveAccount new.
	deposit2 := Deposit register: 34 on: account2.
	withdraw2 := Withdraw register: 55 on: account2. 
	
	portfolio3 := Portfolio with: account1. 
	portfolio2 := Portfolio with: portfolio3. 
	portfolio := Portfolio with: portfolio2. 
	
	portfolio add: account2.
	
	expectedResult := Set with: aDeposit with: aWithdraw. 
	
	self assert: expectedResult equals:  portfolio transactions.

	! !
!PortfolioTest methodsFor: 'test - transactions' stamp: 'G. B. 11/7/2020 18:36:47' prior: 50932060!
test09PortfolioWithManyAccountsKnowsTheAccountsTransactions

	|  portfolio account1 account2 expectedResult aDeposit aWithdraw portfolio2 portfolio3 deposit2 withdraw2 |
	
	account1 := ReceptiveAccount new.
	aDeposit := Deposit register: 100 on: account1.
	aWithdraw := Withdraw register: 50 on: account1. 
	
	account2 := ReceptiveAccount new.
	deposit2 := Deposit register: 34 on: account2.
	withdraw2 := Withdraw register: 55 on: account2. 
	
	portfolio3 := Portfolio with: account1. 
	portfolio2 := Portfolio with: portfolio3. 
	portfolio := Portfolio with: portfolio2. 
	
	portfolio add: account2.
	
	expectedResult := Set with: aDeposit with: aWithdraw with: deposit2 with: withdraw2. 
	
	self assert: expectedResult equals:  portfolio transactions.

	! !

!testRun: #PortfolioTest #test09PortfolioWithManyAccountsKnowsTheAccountsTransactions stamp: 'G. B. 11/7/2020 18:36:49'!
PASSED!

!testRun: #PortfolioTest #test01APortfolioHaveZeroAsBalanceWhenCreated stamp: 'G. B. 11/7/2020 18:36:49'!
PASSED!

!testRun: #PortfolioTest #test02APortfolioWithOnePortfolioWithNonZeroBalanceHasTheBalanceOfTheAccount stamp: 'G. B. 11/7/2020 18:36:49'!
PASSED!

!testRun: #PortfolioTest #test03APortfolioWithManyAccountWithNonZeroBalanceHasTheSumOfBalance stamp: 'G. B. 11/7/2020 18:36:49'!
PASSED!

!testRun: #PortfolioTest #test04AnEmptyPortfolioDontKnowAnyTransaction stamp: 'G. B. 11/7/2020 18:36:49'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioKnowsRegisteredTransactions stamp: 'G. B. 11/7/2020 18:36:49'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioWithManyAccountsKnowsRegisteredTransactions stamp: 'G. B. 11/7/2020 18:36:49'!
PASSED!

!testRun: #PortfolioTest #test07AnEmptyPortfolioHasZeroTransaction stamp: 'G. B. 11/7/2020 18:36:49'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioWithOneAccountKnewTheAccountTransactions stamp: 'G. B. 11/7/2020 18:36:49'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithManyAccountsKnowsTheAccountsTransactions stamp: 'G. B. 11/7/2020 18:36:49'!
PASSED!
!PortfolioTest methodsFor: 'test - transactions' stamp: 'G. B. 11/7/2020 18:42:31'!
test10

	|  portfolio account1 account2 expectedResult aDeposit aWithdraw portfolio2 portfolio3 deposit2 withdraw2 |
	
	account1 := ReceptiveAccount new.
	aDeposit := Deposit register: 100 on: account1.
	aWithdraw := Withdraw register: 50 on: account1. 
	
	account2 := ReceptiveAccount new.
	deposit2 := Deposit register: 34 on: account2.
	withdraw2 := Withdraw register: 55 on: account2. 
	
	portfolio3 := Portfolio with: account1. 
	portfolio2 := Portfolio with: portfolio3. 
	portfolio := Portfolio with: portfolio2. 
	
	portfolio add: account2.
	
	expectedResult := Set with: aDeposit with: aWithdraw with: deposit2 with: withdraw2. 
	
	self assert: expectedResult equals:  portfolio transactions.

	! !

Object subclass: #Portfolio
	instanceVariableNames: 'accounts'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classDefinition: #Portfolio category: 'Portfolio-Ejercicio' stamp: 'G. B. 11/7/2020 18:53:17'!
Object subclass: #Portfolio
	instanceVariableNames: 'accounts'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!
!Portfolio methodsFor: 'initialize' stamp: 'G. B. 11/7/2020 19:16:11' prior: 50931677!
initializeWith: anAccount 
	
	accounts := OrderedCollection with: anAccount.
	! !
!PortfolioTest methodsFor: 'test - add' stamp: 'G. B. 11/7/2020 19:21:51'!
test10shouldRaiseErrorIfAPort

	|  portfolio2 portfolio1 |
	
	
	portfolio2 := Portfolio new. 
	portfolio1 := Portfolio with: portfolio2. 
	
	portfolio2 add: portfolio1.
	
	

	! !

!methodRemoval: PortfolioTest #test10 stamp: 'G. B. 11/7/2020 19:22:33'!
test10

	|  portfolio account1 account2 expectedResult aDeposit aWithdraw portfolio2 portfolio3 deposit2 withdraw2 |
	
	account1 := ReceptiveAccount new.
	aDeposit := Deposit register: 100 on: account1.
	aWithdraw := Withdraw register: 50 on: account1. 
	
	account2 := ReceptiveAccount new.
	deposit2 := Deposit register: 34 on: account2.
	withdraw2 := Withdraw register: 55 on: account2. 
	
	portfolio3 := Portfolio with: account1. 
	portfolio2 := Portfolio with: portfolio3. 
	portfolio := Portfolio with: portfolio2. 
	
	portfolio add: account2.
	
	expectedResult := Set with: aDeposit with: aWithdraw with: deposit2 with: withdraw2. 
	
	self assert: expectedResult equals:  portfolio transactions.

	!
!PortfolioTest methodsFor: 'test - add' stamp: 'G. B. 11/7/2020 19:24:00' prior: 50932194!
test10shouldRaiseErrorIfAPort

	|  portfolio2 portfolio1 |
	
	
	portfolio2 := Portfolio new. 
	portfolio1 := Portfolio with: portfolio2. 
	
	
	self
	should: [ portfolio2 add: portfolio1. ]
	raise: Error
	withMessageText: Portfolio cantAddPortfolioErrorDescripcion. 


	

	! !
!Portfolio class methodsFor: 'initialization' stamp: 'G. B. 11/7/2020 19:24:36'!
cantAddPortfolioErrorDescripcion
	^ 'Cant add portfolio'.! !
!Portfolio class methodsFor: 'initialization' stamp: 'G. B. 11/7/2020 19:29:01' prior: 50932239!
cantAddPortfolioErrorDescripcion
	^ 'Cant add portfolio, the porfolio you are trying to add is already present or is a parent'.! !
!PortfolioTest methodsFor: 'test - add' stamp: 'G. B. 11/7/2020 19:30:17' prior: 50932227!
test10shouldRaiseErrorIfAPort

	|  portfolio2 portfolio1 |
	
	
	portfolio2 := Portfolio new. 
	portfolio1 := Portfolio with: portfolio2. 
	
	
	self
	should: [ portfolio1 add: portfolio2. ]
	raise: Error
	withMessageText: Portfolio cantAddPortfolioErrorDescripcion. 


	

	! !

!testRun: #PortfolioTest #test10shouldRaiseErrorIfAPort stamp: 'G. B. 11/7/2020 19:30:19'!
FAILURE!
!Portfolio methodsFor: 'accessing' stamp: 'G. B. 11/7/2020 19:31:12' prior: 50931649!
add: anAccount

	
	accounts add: anAccount. ! !
!Portfolio methodsFor: 'accessing' stamp: 'G. B. 11/7/2020 19:31:50' prior: 50932266!
add: anAccount

	(accounts includes: anAccount) ifTrue: [^self error: self class cantAddPortfolioErrorDescripcion ].
	accounts add: anAccount. ! !

!testRun: #PortfolioTest #test01APortfolioHaveZeroAsBalanceWhenCreated stamp: 'G. B. 11/7/2020 19:31:54'!
PASSED!

!testRun: #PortfolioTest #test02APortfolioWithOnePortfolioWithNonZeroBalanceHasTheBalanceOfTheAccount stamp: 'G. B. 11/7/2020 19:31:54'!
PASSED!

!testRun: #PortfolioTest #test03APortfolioWithManyAccountWithNonZeroBalanceHasTheSumOfBalance stamp: 'G. B. 11/7/2020 19:31:54'!
PASSED!

!testRun: #PortfolioTest #test04AnEmptyPortfolioDontKnowAnyTransaction stamp: 'G. B. 11/7/2020 19:31:54'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioKnowsRegisteredTransactions stamp: 'G. B. 11/7/2020 19:31:54'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioWithManyAccountsKnowsRegisteredTransactions stamp: 'G. B. 11/7/2020 19:31:54'!
PASSED!

!testRun: #PortfolioTest #test07AnEmptyPortfolioHasZeroTransaction stamp: 'G. B. 11/7/2020 19:31:54'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioWithOneAccountKnewTheAccountTransactions stamp: 'G. B. 11/7/2020 19:31:54'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithManyAccountsKnowsTheAccountsTransactions stamp: 'G. B. 11/7/2020 19:31:54'!
PASSED!

!testRun: #PortfolioTest #test10shouldRaiseErrorIfAPort stamp: 'G. B. 11/7/2020 19:31:54'!
PASSED!
!PortfolioTest methodsFor: 'test - add' stamp: 'G. B. 11/7/2020 19:32:25'!
test10shouldRaiseErrorIfAPortfolioTriesToAddAPortfolio2Times

	|  portfolio2 portfolio1 |
	
	
	portfolio2 := Portfolio new. 
	portfolio1 := Portfolio with: portfolio2. 
	
	
	self
	should: [ portfolio1 add: portfolio2. ]
	raise: Error
	withMessageText: Portfolio cantAddPortfolioErrorDescripcion. 


	

	! !

!methodRemoval: PortfolioTest #test10shouldRaiseErrorIfAPort stamp: 'G. B. 11/7/2020 19:32:25'!
test10shouldRaiseErrorIfAPort

	|  portfolio2 portfolio1 |
	
	
	portfolio2 := Portfolio new. 
	portfolio1 := Portfolio with: portfolio2. 
	
	
	self
	should: [ portfolio1 add: portfolio2. ]
	raise: Error
	withMessageText: Portfolio cantAddPortfolioErrorDescripcion. 


	

	!
!PortfolioTest methodsFor: 'test - add' stamp: 'G. B. 11/7/2020 19:33:35'!
test11shouldRaiseErrorIfAPortfolioTriesToAddAParentPortfolio

	|  portfolio2 portfolio1 |
	
	
	portfolio2 := Portfolio new. 
	portfolio1 := Portfolio with: portfolio2. 
	
	
	self
	should: [ portfolio1 add: portfolio2. ]
	raise: Error
	withMessageText: Portfolio cantAddPortfolioErrorDescripcion. 


	

	! !
!PortfolioTest methodsFor: 'test - add' stamp: 'G. B. 11/7/2020 19:34:23' prior: 50932341!
test11shouldRaiseErrorIfAPortfolioTriesToAddAParentPortfolio

	|  portfolio2 portfolio1 |
	
	
	portfolio2 := Portfolio new. 
	portfolio1 := Portfolio with: portfolio2. 
	
	
	self
	should: [ portfolio2 add: portfolio1. ]
	raise: Error
	withMessageText: Portfolio cantAddPortfolioErrorDescripcion. 


	

	! !

!testRun: #PortfolioTest #test01APortfolioHaveZeroAsBalanceWhenCreated stamp: 'G. B. 11/7/2020 19:35:35'!
PASSED!

!testRun: #PortfolioTest #test02APortfolioWithOnePortfolioWithNonZeroBalanceHasTheBalanceOfTheAccount stamp: 'G. B. 11/7/2020 19:35:35'!
PASSED!

!testRun: #PortfolioTest #test03APortfolioWithManyAccountWithNonZeroBalanceHasTheSumOfBalance stamp: 'G. B. 11/7/2020 19:35:35'!
PASSED!

!testRun: #PortfolioTest #test04AnEmptyPortfolioDontKnowAnyTransaction stamp: 'G. B. 11/7/2020 19:35:35'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioKnowsRegisteredTransactions stamp: 'G. B. 11/7/2020 19:35:35'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioWithManyAccountsKnowsRegisteredTransactions stamp: 'G. B. 11/7/2020 19:35:35'!
PASSED!

!testRun: #PortfolioTest #test07AnEmptyPortfolioHasZeroTransaction stamp: 'G. B. 11/7/2020 19:35:35'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioWithOneAccountKnewTheAccountTransactions stamp: 'G. B. 11/7/2020 19:35:35'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithManyAccountsKnowsTheAccountsTransactions stamp: 'G. B. 11/7/2020 19:35:35'!
PASSED!

!testRun: #PortfolioTest #test10shouldRaiseErrorIfAPortfolioTriesToAddAPortfolio2Times stamp: 'G. B. 11/7/2020 19:35:35'!
PASSED!

!testRun: #PortfolioTest #test11shouldRaiseErrorIfAPortfolioTriesToAddAParentPortfolio stamp: 'G. B. 11/7/2020 19:35:35'!
FAILURE!

!testRun: #PortfolioTest #test11shouldRaiseErrorIfAPortfolioTriesToAddAParentPortfolio stamp: 'G. B. 11/7/2020 19:35:35'!
FAILURE!

!testRun: #PortfolioTest #test01APortfolioHaveZeroAsBalanceWhenCreated stamp: 'G. B. 11/7/2020 19:35:37'!
PASSED!

!testRun: #PortfolioTest #test02APortfolioWithOnePortfolioWithNonZeroBalanceHasTheBalanceOfTheAccount stamp: 'G. B. 11/7/2020 19:35:37'!
PASSED!

!testRun: #PortfolioTest #test03APortfolioWithManyAccountWithNonZeroBalanceHasTheSumOfBalance stamp: 'G. B. 11/7/2020 19:35:37'!
PASSED!

!testRun: #PortfolioTest #test04AnEmptyPortfolioDontKnowAnyTransaction stamp: 'G. B. 11/7/2020 19:35:37'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioKnowsRegisteredTransactions stamp: 'G. B. 11/7/2020 19:35:37'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioWithManyAccountsKnowsRegisteredTransactions stamp: 'G. B. 11/7/2020 19:35:37'!
PASSED!

!testRun: #PortfolioTest #test07AnEmptyPortfolioHasZeroTransaction stamp: 'G. B. 11/7/2020 19:35:37'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioWithOneAccountKnewTheAccountTransactions stamp: 'G. B. 11/7/2020 19:35:37'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithManyAccountsKnowsTheAccountsTransactions stamp: 'G. B. 11/7/2020 19:35:37'!
PASSED!

!testRun: #PortfolioTest #test10shouldRaiseErrorIfAPortfolioTriesToAddAPortfolio2Times stamp: 'G. B. 11/7/2020 19:35:37'!
PASSED!

!testRun: #PortfolioTest #test11shouldRaiseErrorIfAPortfolioTriesToAddAParentPortfolio stamp: 'G. B. 11/7/2020 19:35:37'!
FAILURE!

!testRun: #PortfolioTest #test11shouldRaiseErrorIfAPortfolioTriesToAddAParentPortfolio stamp: 'G. B. 11/7/2020 19:35:37'!
FAILURE!

!testRun: #PortfolioTest #test01APortfolioHaveZeroAsBalanceWhenCreated stamp: 'G. B. 11/7/2020 19:35:39'!
PASSED!

!testRun: #PortfolioTest #test02APortfolioWithOnePortfolioWithNonZeroBalanceHasTheBalanceOfTheAccount stamp: 'G. B. 11/7/2020 19:35:39'!
PASSED!

!testRun: #PortfolioTest #test03APortfolioWithManyAccountWithNonZeroBalanceHasTheSumOfBalance stamp: 'G. B. 11/7/2020 19:35:39'!
PASSED!

!testRun: #PortfolioTest #test04AnEmptyPortfolioDontKnowAnyTransaction stamp: 'G. B. 11/7/2020 19:35:39'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioKnowsRegisteredTransactions stamp: 'G. B. 11/7/2020 19:35:39'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioWithManyAccountsKnowsRegisteredTransactions stamp: 'G. B. 11/7/2020 19:35:39'!
PASSED!

!testRun: #PortfolioTest #test07AnEmptyPortfolioHasZeroTransaction stamp: 'G. B. 11/7/2020 19:35:39'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioWithOneAccountKnewTheAccountTransactions stamp: 'G. B. 11/7/2020 19:35:39'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithManyAccountsKnowsTheAccountsTransactions stamp: 'G. B. 11/7/2020 19:35:39'!
PASSED!

!testRun: #PortfolioTest #test10shouldRaiseErrorIfAPortfolioTriesToAddAPortfolio2Times stamp: 'G. B. 11/7/2020 19:35:39'!
PASSED!

!testRun: #PortfolioTest #test11shouldRaiseErrorIfAPortfolioTriesToAddAParentPortfolio stamp: 'G. B. 11/7/2020 19:35:39'!
FAILURE!

!testRun: #PortfolioTest #test11shouldRaiseErrorIfAPortfolioTriesToAddAParentPortfolio stamp: 'G. B. 11/7/2020 19:35:39'!
FAILURE!

!testRun: #PortfolioTest #test01APortfolioHaveZeroAsBalanceWhenCreated stamp: 'G. B. 11/7/2020 19:35:45'!
PASSED!

!testRun: #PortfolioTest #test02APortfolioWithOnePortfolioWithNonZeroBalanceHasTheBalanceOfTheAccount stamp: 'G. B. 11/7/2020 19:35:45'!
PASSED!

!testRun: #PortfolioTest #test03APortfolioWithManyAccountWithNonZeroBalanceHasTheSumOfBalance stamp: 'G. B. 11/7/2020 19:35:45'!
PASSED!

!testRun: #PortfolioTest #test04AnEmptyPortfolioDontKnowAnyTransaction stamp: 'G. B. 11/7/2020 19:35:45'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioKnowsRegisteredTransactions stamp: 'G. B. 11/7/2020 19:35:45'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioWithManyAccountsKnowsRegisteredTransactions stamp: 'G. B. 11/7/2020 19:35:45'!
PASSED!

!testRun: #PortfolioTest #test07AnEmptyPortfolioHasZeroTransaction stamp: 'G. B. 11/7/2020 19:35:45'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioWithOneAccountKnewTheAccountTransactions stamp: 'G. B. 11/7/2020 19:35:45'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithManyAccountsKnowsTheAccountsTransactions stamp: 'G. B. 11/7/2020 19:35:45'!
PASSED!

!testRun: #PortfolioTest #test10shouldRaiseErrorIfAPortfolioTriesToAddAPortfolio2Times stamp: 'G. B. 11/7/2020 19:35:45'!
PASSED!

!testRun: #PortfolioTest #test11shouldRaiseErrorIfAPortfolioTriesToAddAParentPortfolio stamp: 'G. B. 11/7/2020 19:35:45'!
FAILURE!

!testRun: #PortfolioTest #test11shouldRaiseErrorIfAPortfolioTriesToAddAParentPortfolio stamp: 'G. B. 11/7/2020 19:35:45'!
FAILURE!
!PortfolioTest methodsFor: 'test - add' stamp: 'G. B. 11/7/2020 19:36:18' prior: 50932354!
test11shouldRaiseErrorIfAPortfolioTriesToAddAParentPortfolio

	|  portfolio2 portfolio1 |
	
	
	"portfolio2 := Portfolio new. 
	portfolio1 := Portfolio with: portfolio2. 
	
	
	self
	should: [ portfolio2 add: portfolio1. ]
	raise: Error
	withMessageText: Portfolio cantAddPortfolioErrorDescripcion. 


	

	"! !

!testRun: #PortfolioTest #test11shouldRaiseErrorIfAPortfolioTriesToAddAParentPortfolio stamp: 'G. B. 11/7/2020 19:36:22'!
PASSED!

!testRun: #PortfolioTest #test01APortfolioHaveZeroAsBalanceWhenCreated stamp: 'G. B. 11/7/2020 19:36:22'!
PASSED!

!testRun: #PortfolioTest #test02APortfolioWithOnePortfolioWithNonZeroBalanceHasTheBalanceOfTheAccount stamp: 'G. B. 11/7/2020 19:36:22'!
PASSED!

!testRun: #PortfolioTest #test03APortfolioWithManyAccountWithNonZeroBalanceHasTheSumOfBalance stamp: 'G. B. 11/7/2020 19:36:22'!
PASSED!

!testRun: #PortfolioTest #test04AnEmptyPortfolioDontKnowAnyTransaction stamp: 'G. B. 11/7/2020 19:36:22'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioKnowsRegisteredTransactions stamp: 'G. B. 11/7/2020 19:36:22'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioWithManyAccountsKnowsRegisteredTransactions stamp: 'G. B. 11/7/2020 19:36:22'!
PASSED!

!testRun: #PortfolioTest #test07AnEmptyPortfolioHasZeroTransaction stamp: 'G. B. 11/7/2020 19:36:22'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioWithOneAccountKnewTheAccountTransactions stamp: 'G. B. 11/7/2020 19:36:22'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithManyAccountsKnowsTheAccountsTransactions stamp: 'G. B. 11/7/2020 19:36:22'!
PASSED!

!testRun: #PortfolioTest #test10shouldRaiseErrorIfAPortfolioTriesToAddAPortfolio2Times stamp: 'G. B. 11/7/2020 19:36:22'!
PASSED!

!testRun: #PortfolioTest #test11shouldRaiseErrorIfAPortfolioTriesToAddAParentPortfolio stamp: 'G. B. 11/7/2020 19:36:22'!
PASSED!
!Portfolio methodsFor: 'accessing' stamp: 'G. B. 11/7/2020 19:36:29' prior: 50931664 overrides: 16896425!
initialize
"	
	accounts := OrderedCollection new. "! !

!testRun: #PortfolioTest #test01APortfolioHaveZeroAsBalanceWhenCreated stamp: 'G. B. 11/7/2020 19:36:31'!
ERROR!

!testRun: #PortfolioTest #test02APortfolioWithOnePortfolioWithNonZeroBalanceHasTheBalanceOfTheAccount stamp: 'G. B. 11/7/2020 19:36:31'!
PASSED!

!testRun: #PortfolioTest #test03APortfolioWithManyAccountWithNonZeroBalanceHasTheSumOfBalance stamp: 'G. B. 11/7/2020 19:36:31'!
PASSED!

!testRun: #PortfolioTest #test04AnEmptyPortfolioDontKnowAnyTransaction stamp: 'G. B. 11/7/2020 19:36:31'!
ERROR!

!testRun: #PortfolioTest #test05PortfolioKnowsRegisteredTransactions stamp: 'G. B. 11/7/2020 19:36:31'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioWithManyAccountsKnowsRegisteredTransactions stamp: 'G. B. 11/7/2020 19:36:31'!
PASSED!

!testRun: #PortfolioTest #test07AnEmptyPortfolioHasZeroTransaction stamp: 'G. B. 11/7/2020 19:36:31'!
ERROR!

!testRun: #PortfolioTest #test08PortfolioWithOneAccountKnewTheAccountTransactions stamp: 'G. B. 11/7/2020 19:36:31'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithManyAccountsKnowsTheAccountsTransactions stamp: 'G. B. 11/7/2020 19:36:31'!
PASSED!

!testRun: #PortfolioTest #test10shouldRaiseErrorIfAPortfolioTriesToAddAPortfolio2Times stamp: 'G. B. 11/7/2020 19:36:31'!
PASSED!

!testRun: #PortfolioTest #test11shouldRaiseErrorIfAPortfolioTriesToAddAParentPortfolio stamp: 'G. B. 11/7/2020 19:36:31'!
PASSED!
!Portfolio methodsFor: 'accessing' stamp: 'G. B. 11/7/2020 19:36:38' prior: 50932618 overrides: 16896425!
initialize
	
	accounts := OrderedCollection new. ! !

!testRun: #PortfolioTest #test01APortfolioHaveZeroAsBalanceWhenCreated stamp: 'G. B. 11/7/2020 19:36:39'!
PASSED!

!testRun: #PortfolioTest #test02APortfolioWithOnePortfolioWithNonZeroBalanceHasTheBalanceOfTheAccount stamp: 'G. B. 11/7/2020 19:36:39'!
PASSED!

!testRun: #PortfolioTest #test03APortfolioWithManyAccountWithNonZeroBalanceHasTheSumOfBalance stamp: 'G. B. 11/7/2020 19:36:39'!
PASSED!

!testRun: #PortfolioTest #test04AnEmptyPortfolioDontKnowAnyTransaction stamp: 'G. B. 11/7/2020 19:36:39'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioKnowsRegisteredTransactions stamp: 'G. B. 11/7/2020 19:36:39'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioWithManyAccountsKnowsRegisteredTransactions stamp: 'G. B. 11/7/2020 19:36:39'!
PASSED!

!testRun: #PortfolioTest #test07AnEmptyPortfolioHasZeroTransaction stamp: 'G. B. 11/7/2020 19:36:39'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioWithOneAccountKnewTheAccountTransactions stamp: 'G. B. 11/7/2020 19:36:39'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithManyAccountsKnowsTheAccountsTransactions stamp: 'G. B. 11/7/2020 19:36:39'!
PASSED!

!testRun: #PortfolioTest #test10shouldRaiseErrorIfAPortfolioTriesToAddAPortfolio2Times stamp: 'G. B. 11/7/2020 19:36:39'!
PASSED!

!testRun: #PortfolioTest #test11shouldRaiseErrorIfAPortfolioTriesToAddAParentPortfolio stamp: 'G. B. 11/7/2020 19:36:39'!
PASSED!

!testRun: #PortfolioTest #test01APortfolioHaveZeroAsBalanceWhenCreated stamp: 'G. B. 11/7/2020 19:36:42'!
PASSED!

!testRun: #PortfolioTest #test02APortfolioWithOnePortfolioWithNonZeroBalanceHasTheBalanceOfTheAccount stamp: 'G. B. 11/7/2020 19:36:42'!
PASSED!

!testRun: #PortfolioTest #test03APortfolioWithManyAccountWithNonZeroBalanceHasTheSumOfBalance stamp: 'G. B. 11/7/2020 19:36:42'!
PASSED!

!testRun: #PortfolioTest #test04AnEmptyPortfolioDontKnowAnyTransaction stamp: 'G. B. 11/7/2020 19:36:42'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioKnowsRegisteredTransactions stamp: 'G. B. 11/7/2020 19:36:42'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioWithManyAccountsKnowsRegisteredTransactions stamp: 'G. B. 11/7/2020 19:36:42'!
PASSED!

!testRun: #PortfolioTest #test07AnEmptyPortfolioHasZeroTransaction stamp: 'G. B. 11/7/2020 19:36:42'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioWithOneAccountKnewTheAccountTransactions stamp: 'G. B. 11/7/2020 19:36:42'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithManyAccountsKnowsTheAccountsTransactions stamp: 'G. B. 11/7/2020 19:36:42'!
PASSED!

!testRun: #PortfolioTest #test10shouldRaiseErrorIfAPortfolioTriesToAddAPortfolio2Times stamp: 'G. B. 11/7/2020 19:36:42'!
PASSED!

!testRun: #PortfolioTest #test11shouldRaiseErrorIfAPortfolioTriesToAddAParentPortfolio stamp: 'G. B. 11/7/2020 19:36:42'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'G. B. 11/7/2020 19:36:42'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'G. B. 11/7/2020 19:36:42'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'G. B. 11/7/2020 19:36:42'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'G. B. 11/7/2020 19:36:42'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'G. B. 11/7/2020 19:36:42'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'G. B. 11/7/2020 19:36:42'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'G. B. 11/7/2020 19:36:42'!
PASSED!
!PortfolioTest methodsFor: 'test - add' stamp: 'G. B. 11/7/2020 19:36:57' prior: 50932557!
test11shouldRaiseErrorIfAPortfolioTriesToAddAParentPortfolio

	|  portfolio2 portfolio1 |
	
	
	portfolio2 := Portfolio new. 
	portfolio1 := Portfolio with: portfolio2. 
	
	
	self
	should: [ portfolio2 add: portfolio1. ]
	raise: Error
	withMessageText: Portfolio cantAddPortfolioErrorDescripcion. 


	

	! !
!Portfolio methodsFor: 'initialize' stamp: 'G. B. 11/7/2020 19:38:37' prior: 50932189!
initializeWith: anAccount 
	
	accounts := OrderedCollection with: anAccount.
	
	(anAccount class = Portfolio) ifTrue: [anAccount addParent: self.].! !
!Portfolio methodsFor: 'accessing' stamp: 'G. B. 11/7/2020 19:38:55' prior: 50932271!
add: anAccount

	(accounts includes: anAccount) ifTrue: [^self error: self class cantAddPortfolioErrorDescripcion ].
	(anAccount class = Portfolio) ifTrue: [anAccount addParent: self.].
	accounts add: anAccount. ! !

!classDefinition: #Portfolio category: 'Portfolio-Ejercicio' stamp: 'G. B. 11/7/2020 19:39:54'!
Object subclass: #Portfolio
	instanceVariableNames: 'accounts parents'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!
!Portfolio methodsFor: 'accessing' stamp: 'G. B. 11/7/2020 19:39:52'!
addParent: aParentPorfolio 
	
	parents add: aParentPorfolio.! !
!Portfolio methodsFor: 'initialize' stamp: 'G. B. 11/7/2020 19:40:47' prior: 50932798!
initializeWith: anAccount 
	
	accounts := OrderedCollection with: anAccount.
	
	(anAccount class = Portfolio) ifTrue: [anAccount addParent: self.].! !
!Portfolio methodsFor: 'initialize' stamp: 'G. B. 11/7/2020 19:42:07' prior: 50932828!
initializeWith: anAccount 
	parents := OrderedCollection new.

	accounts := OrderedCollection with: anAccount.
	
	(anAccount class = Portfolio) ifTrue: [anAccount addParent: self.].! !
!Portfolio methodsFor: 'accessing' stamp: 'G. B. 11/7/2020 19:42:21' prior: 50932667 overrides: 16896425!
initialize
	parents := OrderedCollection new.
	accounts := OrderedCollection new. ! !

!testRun: #PortfolioTest #test01APortfolioHaveZeroAsBalanceWhenCreated stamp: 'G. B. 11/7/2020 19:43:04'!
PASSED!

!testRun: #PortfolioTest #test02APortfolioWithOnePortfolioWithNonZeroBalanceHasTheBalanceOfTheAccount stamp: 'G. B. 11/7/2020 19:43:04'!
PASSED!

!testRun: #PortfolioTest #test03APortfolioWithManyAccountWithNonZeroBalanceHasTheSumOfBalance stamp: 'G. B. 11/7/2020 19:43:04'!
PASSED!

!testRun: #PortfolioTest #test04AnEmptyPortfolioDontKnowAnyTransaction stamp: 'G. B. 11/7/2020 19:43:04'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioKnowsRegisteredTransactions stamp: 'G. B. 11/7/2020 19:43:04'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioWithManyAccountsKnowsRegisteredTransactions stamp: 'G. B. 11/7/2020 19:43:04'!
PASSED!

!testRun: #PortfolioTest #test07AnEmptyPortfolioHasZeroTransaction stamp: 'G. B. 11/7/2020 19:43:04'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioWithOneAccountKnewTheAccountTransactions stamp: 'G. B. 11/7/2020 19:43:04'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithManyAccountsKnowsTheAccountsTransactions stamp: 'G. B. 11/7/2020 19:43:04'!
PASSED!

!testRun: #PortfolioTest #test10shouldRaiseErrorIfAPortfolioTriesToAddAPortfolio2Times stamp: 'G. B. 11/7/2020 19:43:04'!
PASSED!

!testRun: #PortfolioTest #test11shouldRaiseErrorIfAPortfolioTriesToAddAParentPortfolio stamp: 'G. B. 11/7/2020 19:43:04'!
FAILURE!

!testRun: #PortfolioTest #test11shouldRaiseErrorIfAPortfolioTriesToAddAParentPortfolio stamp: 'G. B. 11/7/2020 19:43:04'!
FAILURE!
!Portfolio methodsFor: 'accessing' stamp: 'G. B. 11/7/2020 19:43:49' prior: 50932806!
add: anAccount

	((accounts includes: anAccount) or: [parents includes: anAccount]) ifTrue: [^self error: self class cantAddPortfolioErrorDescripcion ].
	(anAccount class = Portfolio) ifTrue: [anAccount addParent: self.].
	accounts add: anAccount. ! !

!testRun: #PortfolioTest #test01APortfolioHaveZeroAsBalanceWhenCreated stamp: 'G. B. 11/7/2020 19:43:51'!
PASSED!

!testRun: #PortfolioTest #test02APortfolioWithOnePortfolioWithNonZeroBalanceHasTheBalanceOfTheAccount stamp: 'G. B. 11/7/2020 19:43:51'!
PASSED!

!testRun: #PortfolioTest #test03APortfolioWithManyAccountWithNonZeroBalanceHasTheSumOfBalance stamp: 'G. B. 11/7/2020 19:43:51'!
PASSED!

!testRun: #PortfolioTest #test04AnEmptyPortfolioDontKnowAnyTransaction stamp: 'G. B. 11/7/2020 19:43:51'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioKnowsRegisteredTransactions stamp: 'G. B. 11/7/2020 19:43:51'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioWithManyAccountsKnowsRegisteredTransactions stamp: 'G. B. 11/7/2020 19:43:51'!
PASSED!

!testRun: #PortfolioTest #test07AnEmptyPortfolioHasZeroTransaction stamp: 'G. B. 11/7/2020 19:43:51'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioWithOneAccountKnewTheAccountTransactions stamp: 'G. B. 11/7/2020 19:43:51'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithManyAccountsKnowsTheAccountsTransactions stamp: 'G. B. 11/7/2020 19:43:51'!
PASSED!

!testRun: #PortfolioTest #test10shouldRaiseErrorIfAPortfolioTriesToAddAPortfolio2Times stamp: 'G. B. 11/7/2020 19:43:51'!
PASSED!

!testRun: #PortfolioTest #test11shouldRaiseErrorIfAPortfolioTriesToAddAParentPortfolio stamp: 'G. B. 11/7/2020 19:43:51'!
PASSED!

!testRun: #PortfolioTest #test01APortfolioHaveZeroAsBalanceWhenCreated stamp: 'G. B. 11/7/2020 19:43:59'!
PASSED!

!testRun: #PortfolioTest #test02APortfolioWithOnePortfolioWithNonZeroBalanceHasTheBalanceOfTheAccount stamp: 'G. B. 11/7/2020 19:43:59'!
PASSED!

!testRun: #PortfolioTest #test03APortfolioWithManyAccountWithNonZeroBalanceHasTheSumOfBalance stamp: 'G. B. 11/7/2020 19:43:59'!
PASSED!

!testRun: #PortfolioTest #test04AnEmptyPortfolioDontKnowAnyTransaction stamp: 'G. B. 11/7/2020 19:43:59'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioKnowsRegisteredTransactions stamp: 'G. B. 11/7/2020 19:43:59'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioWithManyAccountsKnowsRegisteredTransactions stamp: 'G. B. 11/7/2020 19:43:59'!
PASSED!

!testRun: #PortfolioTest #test07AnEmptyPortfolioHasZeroTransaction stamp: 'G. B. 11/7/2020 19:43:59'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioWithOneAccountKnewTheAccountTransactions stamp: 'G. B. 11/7/2020 19:43:59'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithManyAccountsKnowsTheAccountsTransactions stamp: 'G. B. 11/7/2020 19:43:59'!
PASSED!

!testRun: #PortfolioTest #test10shouldRaiseErrorIfAPortfolioTriesToAddAPortfolio2Times stamp: 'G. B. 11/7/2020 19:43:59'!
PASSED!

!testRun: #PortfolioTest #test11shouldRaiseErrorIfAPortfolioTriesToAddAParentPortfolio stamp: 'G. B. 11/7/2020 19:43:59'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'G. B. 11/7/2020 19:43:59'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'G. B. 11/7/2020 19:43:59'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'G. B. 11/7/2020 19:43:59'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'G. B. 11/7/2020 19:43:59'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'G. B. 11/7/2020 19:43:59'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'G. B. 11/7/2020 19:43:59'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'G. B. 11/7/2020 19:43:59'!
PASSED!
!PortfolioTest methodsFor: 'test - add' stamp: 'G. B. 11/7/2020 19:45:31'!
test12shouldRaiseErrorIfAPortfolioTriesToAddAParentofAParentPortfolio

	|  portfolio2 portfolio1 |
	
	
	portfolio2 := Portfolio new. 
	portfolio1 := Portfolio with: portfolio2. 
	
	
	self
	should: [ portfolio2 add: portfolio1. ]
	raise: Error
	withMessageText: Portfolio cantAddPortfolioErrorDescripcion. 


	

	! !
!PortfolioTest methodsFor: 'test - add' stamp: 'G. B. 11/7/2020 19:45:51'!
test12shouldRaiseErrorIfAPortfolioTriesToAddAParentOfAParentPortfolio

	|  portfolio2 portfolio1 |
	
	
	portfolio2 := Portfolio new. 
	portfolio1 := Portfolio with: portfolio2. 
	
	
	self
	should: [ portfolio2 add: portfolio1. ]
	raise: Error
	withMessageText: Portfolio cantAddPortfolioErrorDescripcion. 


	

	! !

!methodRemoval: PortfolioTest #test12shouldRaiseErrorIfAPortfolioTriesToAddAParentofAParentPortfolio stamp: 'G. B. 11/7/2020 19:45:51'!
test12shouldRaiseErrorIfAPortfolioTriesToAddAParentofAParentPortfolio

	|  portfolio2 portfolio1 |
	
	
	portfolio2 := Portfolio new. 
	portfolio1 := Portfolio with: portfolio2. 
	
	
	self
	should: [ portfolio2 add: portfolio1. ]
	raise: Error
	withMessageText: Portfolio cantAddPortfolioErrorDescripcion. 


	

	!
!PortfolioTest methodsFor: 'test - add' stamp: 'G. B. 11/7/2020 19:47:01' prior: 50933036!
test12shouldRaiseErrorIfAPortfolioTriesToAddAParentOfAParentPortfolio

	|  portfolio2 portfolio1 portfolio3 |
	
	
	portfolio2 := Portfolio new. 
	portfolio1 := Portfolio with: portfolio2. 
	portfolio3 := Portfolio new.
	portfolio2 add: portfolio3.
	
	
	self
	should: [ portfolio2 add: portfolio1. ]
	raise: Error
	withMessageText: Portfolio cantAddPortfolioErrorDescripcion. 


	

	! !
!PortfolioTest methodsFor: 'test - add' stamp: 'G. B. 11/7/2020 19:47:15' prior: 50933063!
test12shouldRaiseErrorIfAPortfolioTriesToAddAParentOfAParentPortfolio

	|  portfolio2 portfolio1 portfolio3 |
	
	
	portfolio2 := Portfolio new. 
	portfolio1 := Portfolio with: portfolio2. 
	portfolio3 := Portfolio new.
	portfolio2 add: portfolio3.
	
	
	self
	should: [ portfolio3 add: portfolio1. ]
	raise: Error
	withMessageText: Portfolio cantAddPortfolioErrorDescripcion. 


	

	! !

!testRun: #PortfolioTest #test12shouldRaiseErrorIfAPortfolioTriesToAddAParentOfAParentPortfolio stamp: 'G. B. 11/7/2020 19:47:16'!
FAILURE!
!Portfolio methodsFor: 'accessing' stamp: 'G. B. 11/7/2020 19:52:16' prior: 50932899!
add: anAccount

	(accounts includes: anAccount) ifTrue: [^self error: self class cantAddPortfolioErrorDescripcion ].
	
	parents do: [:aParentPortfolio | (aParentPortfolio parents) includes: anAccount].
		
	
	
	(anAccount class = Portfolio) ifTrue: [anAccount addParent: self.].
	accounts add: anAccount. ! !
!Portfolio methodsFor: 'accessing' stamp: 'G. B. 11/7/2020 19:52:29'!
parents
	
	^parents.
	! !
!Portfolio methodsFor: 'accessing' stamp: 'G. B. 11/7/2020 19:53:01' prior: 50933098!
add: anAccount

	(accounts includes: anAccount) ifTrue: [^self error: self class cantAddPortfolioErrorDescripcion ].
	
	parents do: [:aParentPortfolio | (aParentPortfolio parents) includes: anAccount].
		
	
	(anAccount class = Portfolio) ifTrue: [anAccount addParent: self.].
	accounts add: anAccount. ! !
!Portfolio methodsFor: 'accessing' stamp: 'G. B. 11/7/2020 19:53:15' prior: 50933114!
add: anAccount

	(accounts includes: anAccount) ifTrue: [^self error: self class cantAddPortfolioErrorDescripcion ].
	
	parents do: [:aParentPortfolio | ((aParentPortfolio parents) includes: anAccount) ifTrue: [].].
		
	
	(anAccount class = Portfolio) ifTrue: [anAccount addParent: self.].
	accounts add: anAccount. ! !
!Portfolio methodsFor: 'accessing' stamp: 'G. B. 11/7/2020 19:53:22' prior: 50933127!
add: anAccount

	(accounts includes: anAccount) ifTrue: [^self error: self class cantAddPortfolioErrorDescripcion ].
	
	parents do: [:aParentPortfolio | ((aParentPortfolio parents) includes: anAccount) ifTrue: [^self error: self class cantAddPortfolioErrorDescripcion ].].
		
	
	(anAccount class = Portfolio) ifTrue: [anAccount addParent: self.].
	accounts add: anAccount. ! !

!testRun: #PortfolioTest #test01APortfolioHaveZeroAsBalanceWhenCreated stamp: 'G. B. 11/7/2020 19:53:23'!
PASSED!

!testRun: #PortfolioTest #test02APortfolioWithOnePortfolioWithNonZeroBalanceHasTheBalanceOfTheAccount stamp: 'G. B. 11/7/2020 19:53:23'!
PASSED!

!testRun: #PortfolioTest #test03APortfolioWithManyAccountWithNonZeroBalanceHasTheSumOfBalance stamp: 'G. B. 11/7/2020 19:53:23'!
PASSED!

!testRun: #PortfolioTest #test04AnEmptyPortfolioDontKnowAnyTransaction stamp: 'G. B. 11/7/2020 19:53:23'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioKnowsRegisteredTransactions stamp: 'G. B. 11/7/2020 19:53:23'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioWithManyAccountsKnowsRegisteredTransactions stamp: 'G. B. 11/7/2020 19:53:23'!
PASSED!

!testRun: #PortfolioTest #test07AnEmptyPortfolioHasZeroTransaction stamp: 'G. B. 11/7/2020 19:53:23'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioWithOneAccountKnewTheAccountTransactions stamp: 'G. B. 11/7/2020 19:53:23'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithManyAccountsKnowsTheAccountsTransactions stamp: 'G. B. 11/7/2020 19:53:23'!
PASSED!

!testRun: #PortfolioTest #test10shouldRaiseErrorIfAPortfolioTriesToAddAPortfolio2Times stamp: 'G. B. 11/7/2020 19:53:23'!
PASSED!

!testRun: #PortfolioTest #test11shouldRaiseErrorIfAPortfolioTriesToAddAParentPortfolio stamp: 'G. B. 11/7/2020 19:53:23'!
FAILURE!

!testRun: #PortfolioTest #test12shouldRaiseErrorIfAPortfolioTriesToAddAParentOfAParentPortfolio stamp: 'G. B. 11/7/2020 19:53:23'!
PASSED!

!testRun: #PortfolioTest #test11shouldRaiseErrorIfAPortfolioTriesToAddAParentPortfolio stamp: 'G. B. 11/7/2020 19:53:23'!
FAILURE!

!testRun: #PortfolioTest #test11shouldRaiseErrorIfAPortfolioTriesToAddAParentPortfolio stamp: 'G. B. 11/7/2020 19:54:43'!
FAILURE!

!testRun: #PortfolioTest #test11shouldRaiseErrorIfAPortfolioTriesToAddAParentPortfolio stamp: 'G. B. 11/7/2020 19:54:43'!
FAILURE!

!testRun: #PortfolioTest #test12shouldRaiseErrorIfAPortfolioTriesToAddAParentOfAParentPortfolio stamp: 'G. B. 11/7/2020 19:54:48'!
PASSED!
!Portfolio methodsFor: 'accessing' stamp: 'G. B. 11/7/2020 19:55:25' prior: 50933140!
add: anAccount

	(accounts includes: anAccount) ifTrue: [^self error: self class cantAddPortfolioErrorDescripcion ].
	
	parents do: [:aParentPortfolio | ((aParentPortfolio parents) includes: anAccount) ifTrue: [^self error: self class cantAddPortfolioErrorDescripcion ].].
	
	(anAccount class = Portfolio) ifTrue: [anAccount addParent: self.].
	accounts add: anAccount. ! !
!PortfolioTest methodsFor: 'test - transactions' stamp: 'G. B. 11/7/2020 20:12:40' prior: 50932086!
test09PortfolioWithManyAccountsKnowsTheAccountsTransactions

	|  portfolio account1 account2 expectedResult aDeposit aWithdraw portfolio2 portfolio3 deposit2 withdraw2 |
	
	account1 := ReceptiveAccount new.
	aDeposit := Deposit register: 100 on: account1.
	aWithdraw := Withdraw register: 50 on: account1. 
	
	account2 := ReceptiveAccount new.
	deposit2 := Deposit register: 34 on: account2.
	withdraw2 := Withdraw register: 55 on: account2. 
	
	portfolio3 := Portfolio with: account1. 
	portfolio2 := Portfolio with: portfolio3. 
	portfolio := Portfolio with: portfolio2. 
	
	portfolio2 add: account2.
	
	expectedResult := Set with: aDeposit with: aWithdraw with: deposit2 with: withdraw2. 
	
	self assert: expectedResult equals:  portfolio transactions.

	! !

!testRun: #PortfolioTest #test09PortfolioWithManyAccountsKnowsTheAccountsTransactions stamp: 'G. B. 11/7/2020 20:12:41'!
PASSED!

!testRun: #PortfolioTest #test01APortfolioHaveZeroAsBalanceWhenCreated stamp: 'G. B. 11/7/2020 20:12:41'!
PASSED!

!testRun: #PortfolioTest #test02APortfolioWithOnePortfolioWithNonZeroBalanceHasTheBalanceOfTheAccount stamp: 'G. B. 11/7/2020 20:12:41'!
PASSED!

!testRun: #PortfolioTest #test03APortfolioWithManyAccountWithNonZeroBalanceHasTheSumOfBalance stamp: 'G. B. 11/7/2020 20:12:41'!
PASSED!

!testRun: #PortfolioTest #test04AnEmptyPortfolioDontKnowAnyTransaction stamp: 'G. B. 11/7/2020 20:12:41'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioKnowsRegisteredTransactions stamp: 'G. B. 11/7/2020 20:12:41'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioWithManyAccountsKnowsRegisteredTransactions stamp: 'G. B. 11/7/2020 20:12:41'!
PASSED!

!testRun: #PortfolioTest #test07AnEmptyPortfolioHasZeroTransaction stamp: 'G. B. 11/7/2020 20:12:41'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioWithOneAccountKnewTheAccountTransactions stamp: 'G. B. 11/7/2020 20:12:41'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithManyAccountsKnowsTheAccountsTransactions stamp: 'G. B. 11/7/2020 20:12:41'!
PASSED!

!testRun: #PortfolioTest #test10shouldRaiseErrorIfAPortfolioTriesToAddAPortfolio2Times stamp: 'G. B. 11/7/2020 20:12:41'!
PASSED!

!testRun: #PortfolioTest #test11shouldRaiseErrorIfAPortfolioTriesToAddAParentPortfolio stamp: 'G. B. 11/7/2020 20:12:41'!
FAILURE!

!testRun: #PortfolioTest #test12shouldRaiseErrorIfAPortfolioTriesToAddAParentOfAParentPortfolio stamp: 'G. B. 11/7/2020 20:12:41'!
PASSED!

!testRun: #PortfolioTest #test11shouldRaiseErrorIfAPortfolioTriesToAddAParentPortfolio stamp: 'G. B. 11/7/2020 20:12:41'!
FAILURE!
!PortfolioTest methodsFor: 'test - transactions' stamp: 'G. B. 11/7/2020 20:13:04' prior: 50933234!
test09PortfolioWithManyAccountsKnowsTheAccountsTransactions

	|  portfolio account1 account2 expectedResult aDeposit aWithdraw portfolio2 portfolio3 deposit2 withdraw2 |
	
	account1 := ReceptiveAccount new.
	aDeposit := Deposit register: 100 on: account1.
	aWithdraw := Withdraw register: 50 on: account1. 
	
	account2 := ReceptiveAccount new.
	deposit2 := Deposit register: 34 on: account2.
	withdraw2 := Withdraw register: 55 on: account2. 
	
	portfolio3 := Portfolio with: account1. 
	portfolio2 := Portfolio with: portfolio3. 
	portfolio2 add: account2.


	portfolio := Portfolio with: portfolio2. 
	
	
	expectedResult := Set with: aDeposit with: aWithdraw with: deposit2 with: withdraw2. 
	
	self assert: expectedResult equals:  portfolio transactions.

	! !

!testRun: #PortfolioTest #test09PortfolioWithManyAccountsKnowsTheAccountsTransactions stamp: 'G. B. 11/7/2020 20:13:05'!
PASSED!

!testRun: #PortfolioTest #test01APortfolioHaveZeroAsBalanceWhenCreated stamp: 'G. B. 11/7/2020 20:13:05'!
PASSED!

!testRun: #PortfolioTest #test02APortfolioWithOnePortfolioWithNonZeroBalanceHasTheBalanceOfTheAccount stamp: 'G. B. 11/7/2020 20:13:05'!
PASSED!

!testRun: #PortfolioTest #test03APortfolioWithManyAccountWithNonZeroBalanceHasTheSumOfBalance stamp: 'G. B. 11/7/2020 20:13:05'!
PASSED!

!testRun: #PortfolioTest #test04AnEmptyPortfolioDontKnowAnyTransaction stamp: 'G. B. 11/7/2020 20:13:05'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioKnowsRegisteredTransactions stamp: 'G. B. 11/7/2020 20:13:05'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioWithManyAccountsKnowsRegisteredTransactions stamp: 'G. B. 11/7/2020 20:13:05'!
PASSED!

!testRun: #PortfolioTest #test07AnEmptyPortfolioHasZeroTransaction stamp: 'G. B. 11/7/2020 20:13:05'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioWithOneAccountKnewTheAccountTransactions stamp: 'G. B. 11/7/2020 20:13:05'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithManyAccountsKnowsTheAccountsTransactions stamp: 'G. B. 11/7/2020 20:13:05'!
PASSED!

!testRun: #PortfolioTest #test10shouldRaiseErrorIfAPortfolioTriesToAddAPortfolio2Times stamp: 'G. B. 11/7/2020 20:13:05'!
PASSED!

!testRun: #PortfolioTest #test11shouldRaiseErrorIfAPortfolioTriesToAddAParentPortfolio stamp: 'G. B. 11/7/2020 20:13:05'!
FAILURE!

!testRun: #PortfolioTest #test12shouldRaiseErrorIfAPortfolioTriesToAddAParentOfAParentPortfolio stamp: 'G. B. 11/7/2020 20:13:05'!
PASSED!

!testRun: #PortfolioTest #test11shouldRaiseErrorIfAPortfolioTriesToAddAParentPortfolio stamp: 'G. B. 11/7/2020 20:13:05'!
FAILURE!

!testRun: #PortfolioTest #test09PortfolioWithManyAccountsKnowsTheAccountsTransactions stamp: 'G. B. 11/7/2020 20:13:25'!
PASSED!
!PortfolioTest methodsFor: 'test - transactions' stamp: 'G. B. 11/7/2020 20:13:41' prior: 50933317!
test09PortfolioWithManyAccountsKnowsTheAccountsTransactions

	|  portfolio account1 account2 expectedResult aDeposit aWithdraw portfolio2 portfolio3 deposit2 withdraw2 |
	
	account1 := ReceptiveAccount new.
	aDeposit := Deposit register: 100 on: account1.
	aWithdraw := Withdraw register: 50 on: account1. 
	
	account2 := ReceptiveAccount new.
	deposit2 := Deposit register: 34 on: account2.
	withdraw2 := Withdraw register: 55 on: account2. 
	
	portfolio3 := Portfolio with: account1. 
	portfolio2 := Portfolio with: portfolio3. 
	portfolio2 add: account2.

	portfolio := Portfolio with: portfolio2. 
	
	
	expectedResult := Set with: aDeposit with: aWithdraw with: deposit2 with: withdraw2. 
	
	self assert: expectedResult equals:  portfolio transactions.

	! !

!testRun: #PortfolioTest #test09PortfolioWithManyAccountsKnowsTheAccountsTransactions stamp: 'G. B. 11/7/2020 20:13:49'!
PASSED!
!PortfolioTest methodsFor: 'test - add' stamp: 'G. B. 11/7/2020 20:20:05'!
test13shouldRaiseErrorIfAPortfolioTriesToAddAnAlreadyPresentAccount

	|  portfolio2 portfolio1 |
	
	
	portfolio2 := Portfolio new. 
	portfolio1 := Portfolio with: portfolio2. 
	
	
	self
	should: [ portfolio2 add: portfolio1. ]
	raise: Error
	withMessageText: Portfolio cantAddPortfolioErrorDescripcion. 


	

	! !
!PortfolioTest methodsFor: 'test - add' stamp: 'G. B. 11/7/2020 20:21:03' prior: 50933435!
test13shouldRaiseErrorIfAPortfolioTriesToAddAnAlreadyPresentAccount

	|  portfolio2 portfolio1 aDeposit aWithdraw anAccount |
	
	anAccount := ReceptiveAccount new.
	aDeposit := Deposit register: 100 on: anAccount.
	aWithdraw := Withdraw register: 50 on: anAccount. 
	
	portfolio2 := Portfolio with: anAccount. 
	portfolio1 := Portfolio with: portfolio2. 
	
	
	self
	should: [ portfolio1 add: anAccount. ]
	raise: Error
	withMessageText: Portfolio cantAddPortfolioErrorDescripcion. 


	

	! !
!PortfolioTest methodsFor: 'test - add' stamp: 'G. B. 11/7/2020 20:21:29' prior: 50933448!
test13shouldRaiseErrorIfAPortfolioTriesToAddAnAlreadyPresentAccount

	|  portfolio2 portfolio1 anAccount |
	
	anAccount := ReceptiveAccount new.
	Deposit register: 100 on: anAccount.
	Withdraw register: 50 on: anAccount. 
	
	portfolio2 := Portfolio with: anAccount. 
	portfolio1 := Portfolio with: portfolio2. 
	
	
	self
	should: [ portfolio1 add: anAccount. ]
	raise: Error
	withMessageText: Portfolio cantAddPortfolioErrorDescripcion. 


	

	! !

!testRun: #PortfolioTest #test13shouldRaiseErrorIfAPortfolioTriesToAddAnAlreadyPresentAccount stamp: 'G. B. 11/7/2020 20:21:34'!
FAILURE!
!Portfolio class methodsFor: 'initialization' stamp: 'G. B. 11/7/2020 20:22:19'!
cantAddAccountErrorDescripcion
	^ 'Cant add portfolio, the porfolio you are trying to add is already present or is a parent'.! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'G. B. 11/7/2020 20:22:19' prior: 50933467!
test13shouldRaiseErrorIfAPortfolioTriesToAddAnAlreadyPresentAccount

	|  portfolio2 portfolio1 anAccount |
	
	anAccount := ReceptiveAccount new.
	Deposit register: 100 on: anAccount.
	Withdraw register: 50 on: anAccount. 
	
	portfolio2 := Portfolio with: anAccount. 
	portfolio1 := Portfolio with: portfolio2. 
	
	
	self
	should: [ portfolio1 add: anAccount. ]
	raise: Error
	withMessageText: Portfolio cantAddAccountErrorDescripcion. 


	

	! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'G. B. 11/7/2020 20:22:19' prior: 50933078!
test12shouldRaiseErrorIfAPortfolioTriesToAddAParentOfAParentPortfolio

	|  portfolio2 portfolio1 portfolio3 |
	
	
	portfolio2 := Portfolio new. 
	portfolio1 := Portfolio with: portfolio2. 
	portfolio3 := Portfolio new.
	portfolio2 add: portfolio3.
	
	
	self
	should: [ portfolio3 add: portfolio1. ]
	raise: Error
	withMessageText: Portfolio cantAddAccountErrorDescripcion. 


	

	! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'G. B. 11/7/2020 20:22:19' prior: 50932317!
test10shouldRaiseErrorIfAPortfolioTriesToAddAPortfolio2Times

	|  portfolio2 portfolio1 |
	
	
	portfolio2 := Portfolio new. 
	portfolio1 := Portfolio with: portfolio2. 
	
	
	self
	should: [ portfolio1 add: portfolio2. ]
	raise: Error
	withMessageText: Portfolio cantAddAccountErrorDescripcion. 


	

	! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'G. B. 11/7/2020 20:22:19' prior: 50932785!
test11shouldRaiseErrorIfAPortfolioTriesToAddAParentPortfolio

	|  portfolio2 portfolio1 |
	
	
	portfolio2 := Portfolio new. 
	portfolio1 := Portfolio with: portfolio2. 
	
	
	self
	should: [ portfolio2 add: portfolio1. ]
	raise: Error
	withMessageText: Portfolio cantAddAccountErrorDescripcion. 


	

	! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'G. B. 11/7/2020 20:22:19' prior: 50933219!
add: anAccount

	(accounts includes: anAccount) ifTrue: [^self error: self class cantAddAccountErrorDescripcion ].
	
	parents do: [:aParentPortfolio | ((aParentPortfolio parents) includes: anAccount) ifTrue: [^self error: self class cantAddAccountErrorDescripcion ].].
	
	(anAccount class = Portfolio) ifTrue: [anAccount addParent: self.].
	accounts add: anAccount. ! !

!methodRemoval: Portfolio class #cantAddPortfolioErrorDescripcion stamp: 'G. B. 11/7/2020 20:22:19'!
cantAddPortfolioErrorDescripcion
	^ 'Cant add portfolio, the porfolio you are trying to add is already present or is a parent'.!
!Portfolio class methodsFor: 'initialization' stamp: 'G. B. 11/7/2020 20:22:45' prior: 50933488!
cantAddAccountErrorDescripcion
	^ 'Cant add the account, the account you are trying to add is already present or is a parent portfolio'.! !

!testRun: #PortfolioTest #test13shouldRaiseErrorIfAPortfolioTriesToAddAnAlreadyPresentAccount stamp: 'G. B. 11/7/2020 20:23:41'!
FAILURE!

!methodRemoval: Portfolio #addAccount: stamp: 'G. B. 11/7/2020 20:24:24'!
addAccount: aReceptiveAccount 
	
	accounts add: aReceptiveAccount.!
!Portfolio methodsFor: 'accessing' stamp: 'G. B. 11/7/2020 20:34:00' prior: 50933556!
add: anAccountToAdd

	(accounts includes: anAccountToAdd) ifTrue: [^self error: self class cantAddAccountErrorDescripcion ].
	
	
	accounts do: [:account | (account class = AccountTransaction) ifTrue: [   
															(account = anAccountToAdd) ifTrue: [^self error: self class cantAddAccountErrorDescripcion].
															
			
			
			]. ].
	
	
	
	parents do: [:aParentPortfolio | ((aParentPortfolio parents) includes: anAccountToAdd) ifTrue: [^self error: self class cantAddAccountErrorDescripcion ].].
	
	(anAccountToAdd class = Portfolio) ifTrue: [anAccountToAdd addParent: self.].
	accounts add: anAccountToAdd. ! !
!Portfolio methodsFor: 'accesing' stamp: 'G. B. 11/7/2020 20:34:24'!
accounts
	
	^accounts.
	! !
!Portfolio methodsFor: 'accessing' stamp: 'G. B. 11/7/2020 20:41:10' prior: 50933594!
add: anAccountToAdd

	(accounts includes: anAccountToAdd) ifTrue: [^self error: self class cantAddAccountErrorDescripcion ].
	
	
	self isSafeToAddAccount: anAccountToAdd.
	
	
	
	parents do: [:aParentPortfolio | ((aParentPortfolio parents) includes: anAccountToAdd) ifTrue: [^self error: self class cantAddAccountErrorDescripcion ].].
	
	(anAccountToAdd class = Portfolio) ifTrue: [anAccountToAdd addParent: self.].
	accounts add: anAccountToAdd. ! !
!Portfolio methodsFor: 'accessing' stamp: 'G. B. 11/7/2020 20:44:49'!
isSafeToAddAccount: anAccountToAdd.

accounts do: [:account | (account class = AccountTransaction) ifTrue: [(account = anAccountToAdd) ifTrue: [^false]]
	                                                                     	                ifFalse: [account isSafeToAddAccount: anAccountToAdd.]
	 ].! !
!Portfolio methodsFor: 'accessing' stamp: 'G. B. 11/7/2020 20:45:00' prior: 50933637!
isSafeToAddAccount: anAccountToAdd.

accounts do: [:account | (account class = AccountTransaction) ifTrue: [(account = anAccountToAdd) ifTrue: [^false]]
	                                                                     	                ifFalse: [account isSafeToAddAccount: anAccountToAdd.]].! !
!Portfolio methodsFor: 'accessing' stamp: 'G. B. 11/7/2020 20:45:09' prior: 50933650!
isSafeToAddAccount: anAccountToAdd.

accounts do: [:account | (account class = AccountTransaction) ifTrue: [(account = anAccountToAdd) ifTrue: [^false]]
	                                                                     	                ifFalse: [account isSafeToAddAccount: anAccountToAdd.]].
	^true.! !
!Portfolio methodsFor: 'accessing' stamp: 'G. B. 11/7/2020 20:45:40' prior: 50933620!
add: anAccountToAdd

	(accounts includes: anAccountToAdd) ifTrue: [^self error: self class cantAddAccountErrorDescripcion ].
	
	
	(self isSafeToAddAccount: anAccountToAdd) ifFalse: [^self error: self class cantAddAccountErrorDescripcion].
	
	
	parents do: [:aParentPortfolio | ((aParentPortfolio parents) includes: anAccountToAdd) ifTrue: [^self error: self class cantAddAccountErrorDescripcion ].].
	
	(anAccountToAdd class = Portfolio) ifTrue: [anAccountToAdd addParent: self.].
	accounts add: anAccountToAdd. ! !

!testRun: #PortfolioTest #test01APortfolioHaveZeroAsBalanceWhenCreated stamp: 'G. B. 11/7/2020 20:45:54'!
PASSED!

!testRun: #PortfolioTest #test02APortfolioWithOnePortfolioWithNonZeroBalanceHasTheBalanceOfTheAccount stamp: 'G. B. 11/7/2020 20:45:54'!
PASSED!

!testRun: #PortfolioTest #test03APortfolioWithManyAccountWithNonZeroBalanceHasTheSumOfBalance stamp: 'G. B. 11/7/2020 20:45:54'!
ERROR!

!testRun: #PortfolioTest #test04AnEmptyPortfolioDontKnowAnyTransaction stamp: 'G. B. 11/7/2020 20:45:54'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioKnowsRegisteredTransactions stamp: 'G. B. 11/7/2020 20:45:54'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioWithManyAccountsKnowsRegisteredTransactions stamp: 'G. B. 11/7/2020 20:45:54'!
ERROR!

!testRun: #PortfolioTest #test07AnEmptyPortfolioHasZeroTransaction stamp: 'G. B. 11/7/2020 20:45:54'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioWithOneAccountKnewTheAccountTransactions stamp: 'G. B. 11/7/2020 20:45:54'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithManyAccountsKnowsTheAccountsTransactions stamp: 'G. B. 11/7/2020 20:45:54'!
ERROR!

!testRun: #PortfolioTest #test10shouldRaiseErrorIfAPortfolioTriesToAddAPortfolio2Times stamp: 'G. B. 11/7/2020 20:45:54'!
PASSED!

!testRun: #PortfolioTest #test11shouldRaiseErrorIfAPortfolioTriesToAddAParentPortfolio stamp: 'G. B. 11/7/2020 20:45:54'!
FAILURE!

!testRun: #PortfolioTest #test12shouldRaiseErrorIfAPortfolioTriesToAddAParentOfAParentPortfolio stamp: 'G. B. 11/7/2020 20:45:54'!
PASSED!

!testRun: #PortfolioTest #test13shouldRaiseErrorIfAPortfolioTriesToAddAnAlreadyPresentAccount stamp: 'G. B. 11/7/2020 20:45:54'!
FAILURE!

!testRun: #PortfolioTest #test03APortfolioWithManyAccountWithNonZeroBalanceHasTheSumOfBalance stamp: 'G. B. 11/7/2020 20:46:01'!
ERROR!
!Portfolio methodsFor: 'accessing' stamp: 'G. B. 11/7/2020 20:46:27' prior: 50933663!
isSafeToAddAccount: anAccountToAdd.

accounts do: [:account | (account class = ReceptiveAccount) ifTrue: [(account = anAccountToAdd) ifTrue: [^false]]
	                                                                     	                ifFalse: [account isSafeToAddAccount: anAccountToAdd.]].
	^true.! !

!testRun: #PortfolioTest #test01APortfolioHaveZeroAsBalanceWhenCreated stamp: 'G. B. 11/7/2020 20:46:37'!
PASSED!

!testRun: #PortfolioTest #test02APortfolioWithOnePortfolioWithNonZeroBalanceHasTheBalanceOfTheAccount stamp: 'G. B. 11/7/2020 20:46:37'!
PASSED!

!testRun: #PortfolioTest #test03APortfolioWithManyAccountWithNonZeroBalanceHasTheSumOfBalance stamp: 'G. B. 11/7/2020 20:46:37'!
PASSED!

!testRun: #PortfolioTest #test04AnEmptyPortfolioDontKnowAnyTransaction stamp: 'G. B. 11/7/2020 20:46:37'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioKnowsRegisteredTransactions stamp: 'G. B. 11/7/2020 20:46:37'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioWithManyAccountsKnowsRegisteredTransactions stamp: 'G. B. 11/7/2020 20:46:37'!
PASSED!

!testRun: #PortfolioTest #test07AnEmptyPortfolioHasZeroTransaction stamp: 'G. B. 11/7/2020 20:46:37'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioWithOneAccountKnewTheAccountTransactions stamp: 'G. B. 11/7/2020 20:46:37'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithManyAccountsKnowsTheAccountsTransactions stamp: 'G. B. 11/7/2020 20:46:37'!
PASSED!

!testRun: #PortfolioTest #test10shouldRaiseErrorIfAPortfolioTriesToAddAPortfolio2Times stamp: 'G. B. 11/7/2020 20:46:37'!
PASSED!

!testRun: #PortfolioTest #test11shouldRaiseErrorIfAPortfolioTriesToAddAParentPortfolio stamp: 'G. B. 11/7/2020 20:46:37'!
FAILURE!

!testRun: #PortfolioTest #test12shouldRaiseErrorIfAPortfolioTriesToAddAParentOfAParentPortfolio stamp: 'G. B. 11/7/2020 20:46:37'!
PASSED!

!testRun: #PortfolioTest #test13shouldRaiseErrorIfAPortfolioTriesToAddAnAlreadyPresentAccount stamp: 'G. B. 11/7/2020 20:46:37'!
FAILURE!

!testRun: #PortfolioTest #test11shouldRaiseErrorIfAPortfolioTriesToAddAParentPortfolio stamp: 'G. B. 11/7/2020 20:46:40'!
FAILURE!

!testRun: #PortfolioTest #test11shouldRaiseErrorIfAPortfolioTriesToAddAParentPortfolio stamp: 'G. B. 11/7/2020 20:47:18'!
FAILURE!

!testRun: #PortfolioTest #test11shouldRaiseErrorIfAPortfolioTriesToAddAParentPortfolio stamp: 'G. B. 11/7/2020 20:47:34'!
FAILURE!

!testRun: #PortfolioTest #test13shouldRaiseErrorIfAPortfolioTriesToAddAnAlreadyPresentAccount stamp: 'G. B. 11/7/2020 20:47:48'!
FAILURE!
!Portfolio methodsFor: 'accessing' stamp: 'G. B. 11/7/2020 20:54:13' prior: 50933752!
isSafeToAddAccount: anAccountToAdd.

accounts do: [:account | (account class = ReceptiveAccount) ifTrue: [(account = anAccountToAdd) ifTrue: [^false]]
	                                                                     	                ifFalse: [(account isSafeToAddAccount: anAccountToAdd) ifFalse: [^false].]].
	^true.! !

!testRun: #PortfolioTest #test13shouldRaiseErrorIfAPortfolioTriesToAddAnAlreadyPresentAccount stamp: 'G. B. 11/7/2020 20:54:34'!
PASSED!
!PortfolioTest methodsFor: 'test - add' stamp: 'G. B. 11/7/2020 20:55:19' prior: 50933496!
test13shouldRaiseErrorIfAPortfolioTriesToAddAnAlreadyPresentAccount

	|  portfolio2 portfolio1 anAccount |
	
	anAccount := ReceptiveAccount new.
	Deposit register: 100 on: anAccount.
	Withdraw register: 50 on: anAccount. 
	
	portfolio2 := Portfolio with: anAccount. 
	portfolio1 := Portfolio with: portfolio2. 
	
	self
	should: [ portfolio1 add: anAccount. ]
	raise: Error
	withMessageText: Portfolio cantAddAccountErrorDescripcion. 


	

	! !

!testRun: #PortfolioTest #test01APortfolioHaveZeroAsBalanceWhenCreated stamp: 'G. B. 11/7/2020 20:55:20'!
PASSED!

!testRun: #PortfolioTest #test02APortfolioWithOnePortfolioWithNonZeroBalanceHasTheBalanceOfTheAccount stamp: 'G. B. 11/7/2020 20:55:20'!
PASSED!

!testRun: #PortfolioTest #test03APortfolioWithManyAccountWithNonZeroBalanceHasTheSumOfBalance stamp: 'G. B. 11/7/2020 20:55:20'!
PASSED!

!testRun: #PortfolioTest #test04AnEmptyPortfolioDontKnowAnyTransaction stamp: 'G. B. 11/7/2020 20:55:20'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioKnowsRegisteredTransactions stamp: 'G. B. 11/7/2020 20:55:20'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioWithManyAccountsKnowsRegisteredTransactions stamp: 'G. B. 11/7/2020 20:55:20'!
PASSED!

!testRun: #PortfolioTest #test07AnEmptyPortfolioHasZeroTransaction stamp: 'G. B. 11/7/2020 20:55:20'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioWithOneAccountKnewTheAccountTransactions stamp: 'G. B. 11/7/2020 20:55:20'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithManyAccountsKnowsTheAccountsTransactions stamp: 'G. B. 11/7/2020 20:55:20'!
PASSED!

!testRun: #PortfolioTest #test10shouldRaiseErrorIfAPortfolioTriesToAddAPortfolio2Times stamp: 'G. B. 11/7/2020 20:55:20'!
PASSED!

!testRun: #PortfolioTest #test11shouldRaiseErrorIfAPortfolioTriesToAddAParentPortfolio stamp: 'G. B. 11/7/2020 20:55:20'!
FAILURE!

!testRun: #PortfolioTest #test12shouldRaiseErrorIfAPortfolioTriesToAddAParentOfAParentPortfolio stamp: 'G. B. 11/7/2020 20:55:20'!
PASSED!

!testRun: #PortfolioTest #test13shouldRaiseErrorIfAPortfolioTriesToAddAnAlreadyPresentAccount stamp: 'G. B. 11/7/2020 20:55:20'!
PASSED!

!testRun: #PortfolioTest #test11shouldRaiseErrorIfAPortfolioTriesToAddAParentPortfolio stamp: 'G. B. 11/7/2020 20:55:20'!
FAILURE!

!testRun: #PortfolioTest #test11shouldRaiseErrorIfAPortfolioTriesToAddAParentPortfolio stamp: 'G. B. 11/7/2020 20:55:40'!
FAILURE!

!testRun: #PortfolioTest #test11shouldRaiseErrorIfAPortfolioTriesToAddAParentPortfolio stamp: 'G. B. 11/7/2020 20:56:11'!
FAILURE!
!Portfolio methodsFor: 'initialize' stamp: 'G. B. 11/7/2020 21:00:33' prior: 50932836!
initializeWith: anAccount 
	parents := OrderedCollection new.

	accounts := OrderedCollection with: anAccount.
	
	(anAccount class = Portfolio) ifTrue: [anAccount addParent: self.].! !

!testRun: #PortfolioTest #test13shouldRaiseErrorIfAPortfolioTriesToAddAnAlreadyPresentAccount stamp: 'G. B. 11/7/2020 21:01:51'!
PASSED!

!testRun: #PortfolioTest #test01APortfolioHaveZeroAsBalanceWhenCreated stamp: 'G. B. 11/7/2020 21:01:54'!
PASSED!

!testRun: #PortfolioTest #test02APortfolioWithOnePortfolioWithNonZeroBalanceHasTheBalanceOfTheAccount stamp: 'G. B. 11/7/2020 21:01:54'!
PASSED!

!testRun: #PortfolioTest #test03APortfolioWithManyAccountWithNonZeroBalanceHasTheSumOfBalance stamp: 'G. B. 11/7/2020 21:01:54'!
PASSED!

!testRun: #PortfolioTest #test04AnEmptyPortfolioDontKnowAnyTransaction stamp: 'G. B. 11/7/2020 21:01:54'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioKnowsRegisteredTransactions stamp: 'G. B. 11/7/2020 21:01:54'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioWithManyAccountsKnowsRegisteredTransactions stamp: 'G. B. 11/7/2020 21:01:54'!
PASSED!

!testRun: #PortfolioTest #test07AnEmptyPortfolioHasZeroTransaction stamp: 'G. B. 11/7/2020 21:01:54'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioWithOneAccountKnewTheAccountTransactions stamp: 'G. B. 11/7/2020 21:01:54'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithManyAccountsKnowsTheAccountsTransactions stamp: 'G. B. 11/7/2020 21:01:54'!
PASSED!

!testRun: #PortfolioTest #test10shouldRaiseErrorIfAPortfolioTriesToAddAPortfolio2Times stamp: 'G. B. 11/7/2020 21:01:54'!
PASSED!

!testRun: #PortfolioTest #test11shouldRaiseErrorIfAPortfolioTriesToAddAParentPortfolio stamp: 'G. B. 11/7/2020 21:01:54'!
FAILURE!

!testRun: #PortfolioTest #test12shouldRaiseErrorIfAPortfolioTriesToAddAParentOfAParentPortfolio stamp: 'G. B. 11/7/2020 21:01:54'!
PASSED!

!testRun: #PortfolioTest #test13shouldRaiseErrorIfAPortfolioTriesToAddAnAlreadyPresentAccount stamp: 'G. B. 11/7/2020 21:01:54'!
PASSED!

!testRun: #PortfolioTest #test11shouldRaiseErrorIfAPortfolioTriesToAddAParentPortfolio stamp: 'G. B. 11/7/2020 21:01:54'!
FAILURE!
!Portfolio methodsFor: 'accessing' stamp: 'G. B. 11/7/2020 21:03:38' prior: 50933676!
add: anAccountToAdd

	(accounts includes: anAccountToAdd) ifTrue: [^self error: self class cantAddAccountErrorDescripcion ].
	
	
	(self isSafeToAddAccount: anAccountToAdd) ifFalse: [^self error: self class cantAddAccountErrorDescripcion].
	
	
	parents do: [:aParentPortfolio | (aParentPortfolio = anAccountToAdd) ifTrue: [^self error: self class cantAddAccountErrorDescripcion ].].
	
	(anAccountToAdd class = Portfolio) ifTrue: [anAccountToAdd addParent: self.].
	accounts add: anAccountToAdd. ! !

!testRun: #PortfolioTest #test01APortfolioHaveZeroAsBalanceWhenCreated stamp: 'G. B. 11/7/2020 21:03:46'!
PASSED!

!testRun: #PortfolioTest #test02APortfolioWithOnePortfolioWithNonZeroBalanceHasTheBalanceOfTheAccount stamp: 'G. B. 11/7/2020 21:03:46'!
PASSED!

!testRun: #PortfolioTest #test03APortfolioWithManyAccountWithNonZeroBalanceHasTheSumOfBalance stamp: 'G. B. 11/7/2020 21:03:46'!
PASSED!

!testRun: #PortfolioTest #test04AnEmptyPortfolioDontKnowAnyTransaction stamp: 'G. B. 11/7/2020 21:03:46'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioKnowsRegisteredTransactions stamp: 'G. B. 11/7/2020 21:03:46'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioWithManyAccountsKnowsRegisteredTransactions stamp: 'G. B. 11/7/2020 21:03:46'!
PASSED!

!testRun: #PortfolioTest #test07AnEmptyPortfolioHasZeroTransaction stamp: 'G. B. 11/7/2020 21:03:46'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioWithOneAccountKnewTheAccountTransactions stamp: 'G. B. 11/7/2020 21:03:46'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithManyAccountsKnowsTheAccountsTransactions stamp: 'G. B. 11/7/2020 21:03:46'!
PASSED!

!testRun: #PortfolioTest #test10shouldRaiseErrorIfAPortfolioTriesToAddAPortfolio2Times stamp: 'G. B. 11/7/2020 21:03:46'!
PASSED!

!testRun: #PortfolioTest #test11shouldRaiseErrorIfAPortfolioTriesToAddAParentPortfolio stamp: 'G. B. 11/7/2020 21:03:46'!
PASSED!

!testRun: #PortfolioTest #test12shouldRaiseErrorIfAPortfolioTriesToAddAParentOfAParentPortfolio stamp: 'G. B. 11/7/2020 21:03:46'!
FAILURE!

!testRun: #PortfolioTest #test13shouldRaiseErrorIfAPortfolioTriesToAddAnAlreadyPresentAccount stamp: 'G. B. 11/7/2020 21:03:46'!
PASSED!

!testRun: #PortfolioTest #test12shouldRaiseErrorIfAPortfolioTriesToAddAParentOfAParentPortfolio stamp: 'G. B. 11/7/2020 21:03:46'!
FAILURE!
!Portfolio methodsFor: 'accessing' stamp: 'G. B. 11/7/2020 21:05:11' prior: 50934001!
add: anAccountToAdd

	(accounts includes: anAccountToAdd) ifTrue: [^self error: self class cantAddAccountErrorDescripcion ].
	
	
	(self isSafeToAddAccount: anAccountToAdd) ifFalse: [^self error: self class cantAddAccountErrorDescripcion].
	
	(self hasAsParent: anAccountToAdd) ifTrue: [^self error: self class cantAddAccountErrorDescripcion].
	
	(anAccountToAdd class = Portfolio) ifTrue: [anAccountToAdd addParent: self.].
	accounts add: anAccountToAdd. ! !
!Portfolio methodsFor: 'accessing' stamp: 'G. B. 11/7/2020 21:08:06'!
hasAsParent: anAccountToAdd.

parents do: [:account | (account class = Portfolio) ifTrue: [(account = anAccountToAdd) ifTrue: [^true]  ifFalse: [(account hasAsParent: anAccountToAdd) ifTrue: [^true] ]]
	
	
	                                                                     	                ]
	^false.! !
!Portfolio methodsFor: 'accessing' stamp: 'G. B. 11/7/2020 21:08:12' prior: 50934093!
hasAsParent: anAccountToAdd.

parents do: [:account | (account class = Portfolio) ifTrue: [(account = anAccountToAdd) ifTrue: [^true]  ifFalse: [(account hasAsParent: anAccountToAdd) ifTrue: [^true] ]]
	
	
	                                                                     	                ]
	^false.! !
!Portfolio methodsFor: 'accessing' stamp: 'G. B. 11/7/2020 21:11:13' prior: 50934106!
hasAsParent: anAccountToAdd.

parents do: [:account | (account class = Portfolio) ifTrue: [(account = anAccountToAdd or: [account hasAsParent: anAccountToAdd]) ifTrue: [^true] ] ]
	^false.! !
!Portfolio methodsFor: 'accessing' stamp: 'G. B. 11/7/2020 21:11:17' prior: 50934119!
hasAsParent: anAccountToAdd.

parents do: [:account | (account class = Portfolio) ifTrue: [(account = anAccountToAdd or: [account hasAsParent: anAccountToAdd]) ifTrue: [^true] ] ].
	^false.! !

!testRun: #PortfolioTest #test01APortfolioHaveZeroAsBalanceWhenCreated stamp: 'G. B. 11/7/2020 21:11:20'!
PASSED!

!testRun: #PortfolioTest #test02APortfolioWithOnePortfolioWithNonZeroBalanceHasTheBalanceOfTheAccount stamp: 'G. B. 11/7/2020 21:11:20'!
PASSED!

!testRun: #PortfolioTest #test03APortfolioWithManyAccountWithNonZeroBalanceHasTheSumOfBalance stamp: 'G. B. 11/7/2020 21:11:20'!
PASSED!

!testRun: #PortfolioTest #test04AnEmptyPortfolioDontKnowAnyTransaction stamp: 'G. B. 11/7/2020 21:11:20'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioKnowsRegisteredTransactions stamp: 'G. B. 11/7/2020 21:11:20'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioWithManyAccountsKnowsRegisteredTransactions stamp: 'G. B. 11/7/2020 21:11:20'!
PASSED!

!testRun: #PortfolioTest #test07AnEmptyPortfolioHasZeroTransaction stamp: 'G. B. 11/7/2020 21:11:20'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioWithOneAccountKnewTheAccountTransactions stamp: 'G. B. 11/7/2020 21:11:20'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithManyAccountsKnowsTheAccountsTransactions stamp: 'G. B. 11/7/2020 21:11:20'!
PASSED!

!testRun: #PortfolioTest #test10shouldRaiseErrorIfAPortfolioTriesToAddAPortfolio2Times stamp: 'G. B. 11/7/2020 21:11:20'!
PASSED!

!testRun: #PortfolioTest #test11shouldRaiseErrorIfAPortfolioTriesToAddAParentPortfolio stamp: 'G. B. 11/7/2020 21:11:20'!
PASSED!

!testRun: #PortfolioTest #test12shouldRaiseErrorIfAPortfolioTriesToAddAParentOfAParentPortfolio stamp: 'G. B. 11/7/2020 21:11:20'!
PASSED!

!testRun: #PortfolioTest #test13shouldRaiseErrorIfAPortfolioTriesToAddAnAlreadyPresentAccount stamp: 'G. B. 11/7/2020 21:11:20'!
PASSED!

!testRun: #PortfolioTest #test01APortfolioHaveZeroAsBalanceWhenCreated stamp: 'G. B. 11/7/2020 21:15:17'!
PASSED!

!testRun: #PortfolioTest #test02APortfolioWithOnePortfolioWithNonZeroBalanceHasTheBalanceOfTheAccount stamp: 'G. B. 11/7/2020 21:15:17'!
PASSED!

!testRun: #PortfolioTest #test03APortfolioWithManyAccountWithNonZeroBalanceHasTheSumOfBalance stamp: 'G. B. 11/7/2020 21:15:17'!
PASSED!

!testRun: #PortfolioTest #test04AnEmptyPortfolioDontKnowAnyTransaction stamp: 'G. B. 11/7/2020 21:15:17'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioKnowsRegisteredTransactions stamp: 'G. B. 11/7/2020 21:15:17'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioWithManyAccountsKnowsRegisteredTransactions stamp: 'G. B. 11/7/2020 21:15:17'!
PASSED!

!testRun: #PortfolioTest #test07AnEmptyPortfolioHasZeroTransaction stamp: 'G. B. 11/7/2020 21:15:17'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioWithOneAccountKnewTheAccountTransactions stamp: 'G. B. 11/7/2020 21:15:17'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithManyAccountsKnowsTheAccountsTransactions stamp: 'G. B. 11/7/2020 21:15:17'!
PASSED!

!testRun: #PortfolioTest #test10shouldRaiseErrorIfAPortfolioTriesToAddAPortfolio2Times stamp: 'G. B. 11/7/2020 21:15:17'!
PASSED!

!testRun: #PortfolioTest #test11shouldRaiseErrorIfAPortfolioTriesToAddAParentPortfolio stamp: 'G. B. 11/7/2020 21:15:17'!
PASSED!

!testRun: #PortfolioTest #test12shouldRaiseErrorIfAPortfolioTriesToAddAParentOfAParentPortfolio stamp: 'G. B. 11/7/2020 21:15:17'!
PASSED!

!testRun: #PortfolioTest #test13shouldRaiseErrorIfAPortfolioTriesToAddAnAlreadyPresentAccount stamp: 'G. B. 11/7/2020 21:15:17'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'G. B. 11/7/2020 21:15:17'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'G. B. 11/7/2020 21:15:17'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'G. B. 11/7/2020 21:15:17'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'G. B. 11/7/2020 21:15:17'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'G. B. 11/7/2020 21:15:17'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'G. B. 11/7/2020 21:15:17'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'G. B. 11/7/2020 21:15:17'!
PASSED!
!PortfolioTest methodsFor: 'test - add' stamp: 'G. B. 11/7/2020 21:21:47'!
test10shouldRaiseErrorIfAPortfolioTriesToAddItself

	|  portfolio2 portfolio1 |
	
	
	portfolio2 := Portfolio new. 
	portfolio1 := Portfolio with: portfolio2. 
	
	
	self
	should: [ portfolio1 add: portfolio2. ]
	raise: Error
	withMessageText: Portfolio cantAddAccountErrorDescripcion. 


	

	! !
!PortfolioTest methodsFor: 'test - add' stamp: 'G. B. 11/7/2020 21:22:15' prior: 50934268!
test10shouldRaiseErrorIfAPortfolioTriesToAddItself

	|  portfolio |
	
	
	portfolio := Portfolio new. 
	
	
	self
	should: [ portfolio add: portfolio. ]
	raise: Error
	withMessageText: Portfolio cantAddAccountErrorDescripcion. 


	

	! !

!testRun: #PortfolioTest #test10shouldRaiseErrorIfAPortfolioTriesToAddItself stamp: 'G. B. 11/7/2020 21:22:23'!
FAILURE!
!Portfolio methodsFor: 'accessing' stamp: 'G. B. 11/7/2020 21:25:47' prior: 50933833!
isSafeToAddAccount: anAccountToAdd.

accounts do: [:account | (account class = ReceptiveAccount) ifTrue: [(account = anAccountToAdd) ifTrue: [^false]]
	                                                                     	                ifFalse: [(account isSafeToAddAccount: anAccountToAdd) ifFalse: [^false].]].
	
	^(self = anAccountToAdd).! !
!Portfolio methodsFor: 'accessing' stamp: 'G. B. 11/7/2020 21:26:56' prior: 50934295!
isSafeToAddAccount: anAccountToAdd.

accounts do: [:account | (account class = ReceptiveAccount) ifTrue: [(account = anAccountToAdd) ifTrue: [^false]]
	                                                                     	                ifFalse: [(account isSafeToAddAccount: anAccountToAdd) ifFalse: [^false].]].
	
	^ (self = anAccountToAdd) not.! !

!testRun: #PortfolioTest #test10shouldRaiseErrorIfAPortfolioTriesToAddItself stamp: 'G. B. 11/7/2020 21:27:10'!
PASSED!

!testRun: #PortfolioTest #test01APortfolioHaveZeroAsBalanceWhenCreated stamp: 'G. B. 11/7/2020 21:27:12'!
PASSED!

!testRun: #PortfolioTest #test02APortfolioWithOnePortfolioWithNonZeroBalanceHasTheBalanceOfTheAccount stamp: 'G. B. 11/7/2020 21:27:12'!
PASSED!

!testRun: #PortfolioTest #test03APortfolioWithManyAccountWithNonZeroBalanceHasTheSumOfBalance stamp: 'G. B. 11/7/2020 21:27:12'!
PASSED!

!testRun: #PortfolioTest #test04AnEmptyPortfolioDontKnowAnyTransaction stamp: 'G. B. 11/7/2020 21:27:12'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioKnowsRegisteredTransactions stamp: 'G. B. 11/7/2020 21:27:12'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioWithManyAccountsKnowsRegisteredTransactions stamp: 'G. B. 11/7/2020 21:27:12'!
PASSED!

!testRun: #PortfolioTest #test07AnEmptyPortfolioHasZeroTransaction stamp: 'G. B. 11/7/2020 21:27:12'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioWithOneAccountKnewTheAccountTransactions stamp: 'G. B. 11/7/2020 21:27:12'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithManyAccountsKnowsTheAccountsTransactions stamp: 'G. B. 11/7/2020 21:27:12'!
PASSED!

!testRun: #PortfolioTest #test10shouldRaiseErrorIfAPortfolioTriesToAddAPortfolio2Times stamp: 'G. B. 11/7/2020 21:27:12'!
PASSED!

!testRun: #PortfolioTest #test10shouldRaiseErrorIfAPortfolioTriesToAddItself stamp: 'G. B. 11/7/2020 21:27:12'!
PASSED!

!testRun: #PortfolioTest #test11shouldRaiseErrorIfAPortfolioTriesToAddAParentPortfolio stamp: 'G. B. 11/7/2020 21:27:12'!
PASSED!

!testRun: #PortfolioTest #test12shouldRaiseErrorIfAPortfolioTriesToAddAParentOfAParentPortfolio stamp: 'G. B. 11/7/2020 21:27:12'!
PASSED!

!testRun: #PortfolioTest #test13shouldRaiseErrorIfAPortfolioTriesToAddAnAlreadyPresentAccount stamp: 'G. B. 11/7/2020 21:27:12'!
PASSED!
!PortfolioTest methodsFor: 'test - add' stamp: 'G. B. 11/7/2020 21:34:14'!
test14shouldRaiseErrorIfAPortfolioTriesToAnAccountPresentInAParent

	|  portfolio2 portfolio1 anAccount |
	
	anAccount := ReceptiveAccount new.
	Deposit register: 100 on: anAccount.
	Withdraw register: 50 on: anAccount. 
	
	portfolio2 := Portfolio new.
	portfolio1 := Portfolio with: portfolio2. 
	portfolio1 add: anAccount.
	
	self
	should: [ portfolio2 add: anAccount. ]
	raise: Error
	withMessageText: Portfolio cantAddAccountErrorDescripcion. 


	

	! !

!testRun: #PortfolioTest #test14shouldRaiseErrorIfAPortfolioTriesToAnAccountPresentInAParent stamp: 'G. B. 11/7/2020 21:34:34'!
FAILURE!
!Portfolio methodsFor: 'accessing' stamp: 'G. B. 11/7/2020 21:42:00' prior: 50934309!
isSafeToAddAccount: anAccountToAdd.

	accounts do: [:account | (account class = ReceptiveAccount) ifTrue: [(account = anAccountToAdd) ifTrue: [^false]]
	                                                                     	                ifFalse: [(account isSafeToAddAccount: anAccountToAdd) ifFalse: [^false].]].


	parents do: [:aParent | (aParent class = Portfolio) ifTrue: [((aParent accounts includes: anAccountToAdd)  or: [aParent isSafeToAddAccount: anAccountToAdd.]) ifTrue: [^true] ] ].

	
	^ (self = anAccountToAdd) not.
	
	
	
	
	
	
! !

!testRun: #PortfolioTest #test01APortfolioHaveZeroAsBalanceWhenCreated stamp: 'G. B. 11/7/2020 21:42:03'!
PASSED!

!testRun: #PortfolioTest #test02APortfolioWithOnePortfolioWithNonZeroBalanceHasTheBalanceOfTheAccount stamp: 'G. B. 11/7/2020 21:42:03'!
PASSED!
!Portfolio methodsFor: 'accessing' stamp: 'G. B. 11/7/2020 21:42:57' prior: 50934404!
isSafeToAddAccount: anAccountToAdd.

	accounts do: [:account | (account class = ReceptiveAccount) ifTrue: [(account = anAccountToAdd) ifTrue: [^false]]
	                                                                     	                ifFalse: [(account isSafeToAddAccount: anAccountToAdd) ifFalse: [^false].]].


	parents do: [:aParent | (aParent class = Portfolio) ifTrue: [((aParent accounts includes: anAccountToAdd)  or: [aParent isSafeToAddAccount: anAccountToAdd.]) ifTrue: [^false] ] ].

	
	^ (self = anAccountToAdd) not.
	
	
	
	
	
	
! !

!testRun: #PortfolioTest #test01APortfolioHaveZeroAsBalanceWhenCreated stamp: 'G. B. 11/7/2020 21:42:59'!
PASSED!

!testRun: #PortfolioTest #test02APortfolioWithOnePortfolioWithNonZeroBalanceHasTheBalanceOfTheAccount stamp: 'G. B. 11/7/2020 21:42:59'!
PASSED!
!Portfolio methodsFor: 'accessing' stamp: 'G. B. 11/7/2020 21:43:24' prior: 50934432!
isSafeToAddAccount: anAccountToAdd.

	accounts do: [:account | (account class = ReceptiveAccount) ifTrue: [(account = anAccountToAdd) ifTrue: [^false]]
	                                                                     	                ifFalse: [(account isSafeToAddAccount: anAccountToAdd) ifFalse: [^false].]].


	parents do: [:aParent | (aParent class = Portfolio) ifTrue: [(((aParent accounts) includes: anAccountToAdd)  or: [aParent isSafeToAddAccount: anAccountToAdd.]) ifTrue: [^false] ] ].

	
	^ (self = anAccountToAdd) not.
	
	
	
	
	
	
! !

!testRun: #PortfolioTest #test01APortfolioHaveZeroAsBalanceWhenCreated stamp: 'G. B. 11/7/2020 21:43:26'!
PASSED!

!testRun: #PortfolioTest #test02APortfolioWithOnePortfolioWithNonZeroBalanceHasTheBalanceOfTheAccount stamp: 'G. B. 11/7/2020 21:43:26'!
PASSED!
!Portfolio methodsFor: 'accessing' stamp: 'G. B. 11/7/2020 21:44:43' prior: 50934461!
isSafeToAddAccount: anAccountToAdd.

	accounts do: [:account | (account class = ReceptiveAccount) ifTrue: [(account = anAccountToAdd) ifTrue: [^false]]
	                                                                     	                ifFalse: [(account isSafeToAddAccount: anAccountToAdd) ifFalse: [^false].]].

	
	^ (self = anAccountToAdd) not.
	
	
	
	
	
	
! !
!Portfolio methodsFor: 'accessing' stamp: 'G. B. 11/7/2020 21:45:37' prior: 50934490!
isSafeToAddAccount: anAccountToAdd.

	accounts do: [:account | (account class = ReceptiveAccount) ifTrue: [(account = anAccountToAdd) ifTrue: [^false]]
	                                                                     	                ifFalse: [(account isSafeToAddAccount: anAccountToAdd) ifFalse: [^false].]].

	
	(self isAccountPresentInAParent: anAccountToAdd) ifTrue: [^false].
	
	^ (self = anAccountToAdd) not.
	
	
	
	
	
	
! !
!Portfolio methodsFor: 'accessing' stamp: 'G. B. 11/7/2020 21:45:51'!
isAccountPresentInAParent: anAccountToAdd.

	accounts do: [:account | (account class = ReceptiveAccount) ifTrue: [(account = anAccountToAdd) ifTrue: [^false]]
	                                                                     	                ifFalse: [(account isSafeToAddAccount: anAccountToAdd) ifFalse: [^false].]].

	
	(self isAccountPresentInAParent: anAccountToAdd) ifTrue: [^false].
	
	^ (self = anAccountToAdd) not.
	
	
	
	
	
	
! !
!Portfolio methodsFor: 'accessing' stamp: 'G. B. 11/7/2020 21:48:29' prior: 50934521!
isAccountPresentInAParent: anAccountToAdd.

	parents do: [:aParent | (((aParent accounts) includes: anAccountToAdd) or: [aParent isAccountPresentInAParent: anAccountToAdd]) ifTrue: [^true]  ].

	^false.
	
	
! !

!testRun: #PortfolioTest #test01APortfolioHaveZeroAsBalanceWhenCreated stamp: 'G. B. 11/7/2020 21:48:34'!
PASSED!

!testRun: #PortfolioTest #test02APortfolioWithOnePortfolioWithNonZeroBalanceHasTheBalanceOfTheAccount stamp: 'G. B. 11/7/2020 21:48:34'!
PASSED!

!testRun: #PortfolioTest #test03APortfolioWithManyAccountWithNonZeroBalanceHasTheSumOfBalance stamp: 'G. B. 11/7/2020 21:48:34'!
PASSED!

!testRun: #PortfolioTest #test04AnEmptyPortfolioDontKnowAnyTransaction stamp: 'G. B. 11/7/2020 21:48:34'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioKnowsRegisteredTransactions stamp: 'G. B. 11/7/2020 21:48:34'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioWithManyAccountsKnowsRegisteredTransactions stamp: 'G. B. 11/7/2020 21:48:34'!
PASSED!

!testRun: #PortfolioTest #test07AnEmptyPortfolioHasZeroTransaction stamp: 'G. B. 11/7/2020 21:48:34'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioWithOneAccountKnewTheAccountTransactions stamp: 'G. B. 11/7/2020 21:48:34'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithManyAccountsKnowsTheAccountsTransactions stamp: 'G. B. 11/7/2020 21:48:34'!
PASSED!

!testRun: #PortfolioTest #test10shouldRaiseErrorIfAPortfolioTriesToAddAPortfolio2Times stamp: 'G. B. 11/7/2020 21:48:34'!
PASSED!

!testRun: #PortfolioTest #test10shouldRaiseErrorIfAPortfolioTriesToAddItself stamp: 'G. B. 11/7/2020 21:48:34'!
PASSED!

!testRun: #PortfolioTest #test11shouldRaiseErrorIfAPortfolioTriesToAddAParentPortfolio stamp: 'G. B. 11/7/2020 21:48:34'!
PASSED!

!testRun: #PortfolioTest #test12shouldRaiseErrorIfAPortfolioTriesToAddAParentOfAParentPortfolio stamp: 'G. B. 11/7/2020 21:48:34'!
PASSED!

!testRun: #PortfolioTest #test13shouldRaiseErrorIfAPortfolioTriesToAddAnAlreadyPresentAccount stamp: 'G. B. 11/7/2020 21:48:34'!
PASSED!

!testRun: #PortfolioTest #test14shouldRaiseErrorIfAPortfolioTriesToAnAccountPresentInAParent stamp: 'G. B. 11/7/2020 21:48:34'!
PASSED!
!PortfolioTest methodsFor: 'test - add' stamp: 'G. B. 11/7/2020 21:57:23'!
test15shouldRaiseErrorIfAPortfolioTriesToAddAPortfolioWithAnAccountPresentOnItsTree

	|  portfolio2 portfolio1 anAccount |
	
	anAccount := ReceptiveAccount new.
	Deposit register: 100 on: anAccount.
	Withdraw register: 50 on: anAccount. 
	
	portfolio2 := Portfolio new.
	portfolio1 := Portfolio with: portfolio2. 
	portfolio1 add: anAccount.
	
	self
	should: [ portfolio2 add: anAccount. ]
	raise: Error
	withMessageText: Portfolio cantAddAccountErrorDescripcion. 


	

	! !
!PortfolioTest methodsFor: 'test - add' stamp: 'G. B. 11/7/2020 21:59:50' prior: 50934607!
test15shouldRaiseErrorIfAPortfolioTriesToAddAPortfolioWithAnAccountPresentOnItsTree

	|  portfolio2 portfolio1 anAccount portfolio3 |
	
	anAccount := ReceptiveAccount new.
	Deposit register: 100 on: anAccount.
	Withdraw register: 50 on: anAccount. 
	
	portfolio2 := Portfolio new.
	portfolio1 := Portfolio with: portfolio2. 
	portfolio1 add: anAccount.
	portfolio3 := Portfolio with: anAccount.
	
	
	self
	should: [ portfolio2 add: portfolio3. ]
	raise: Error
	withMessageText: Portfolio cantAddAccountErrorDescripcion. 


	

	! !

!testRun: #PortfolioTest #test15shouldRaiseErrorIfAPortfolioTriesToAddAPortfolioWithAnAccountPresentOnItsTree stamp: 'G. B. 11/7/2020 22:00:40'!
FAILURE!
!Portfolio methodsFor: 'accessing' stamp: 'G. B. 11/7/2020 22:02:40' prior: 50934505!
isSafeToAddAccount: anAccountToAdd.

	accounts do: [:account | (account class = ReceptiveAccount) ifTrue: [(account = anAccountToAdd) ifTrue: [^false]]
	                                                                     	                ifFalse: [(account isSafeToAddAccount: anAccountToAdd) ifFalse: [^false].]].

	
	(self isAccountPresentInAParent: anAccountToAdd) ifTrue: [^false].
		
	(self isAccountChildrenPresentInAParent: anAccountToAdd) ifTrue: [^false].

	^ (self = anAccountToAdd) not.
	
	
	
	
	
	
! !
!Portfolio methodsFor: 'accessing' stamp: 'G. B. 11/7/2020 22:04:48' prior: 50934650!
isSafeToAddAccount: anAccountToAdd.

	accounts do: [:account | (account class = ReceptiveAccount) ifTrue: [(account = anAccountToAdd) ifTrue: [^false]]
	                                                                     	                ifFalse: [(account isSafeToAddAccount: anAccountToAdd) ifFalse: [^false].]].

	
	(self isAccountPresentInAParent: anAccountToAdd) ifTrue: [^false].
		
	(anAccountToAdd class = Portfolio) ifTrue: [(self isAccountChildrenPresentInAParent: anAccountToAdd) ifTrue: [^false].].

	^ (self = anAccountToAdd) not.
	
	
	
	
	
	
! !
!Portfolio methodsFor: 'accessing' stamp: 'G. B. 11/7/2020 22:05:04'!
isAccountChildrenPresentInAParent: anAccountToAdd.

	parents do: [:aParent | (((aParent accounts) includes: anAccountToAdd) or: [aParent isAccountPresentInAParent: anAccountToAdd]) ifTrue: [^true]  ].

	^false.
	
	
! !
!PortfolioTest methodsFor: 'test - add' stamp: 'G. B. 11/7/2020 22:09:35' prior: 50934625!
test15shouldRaiseErrorIfAPortfolioTriesToAddAPortfolioWithAnAccountPresentOnItsTree

	"|  portfolio2 portfolio1 anAccount portfolio3 |
	
	anAccount := ReceptiveAccount new.
	Deposit register: 100 on: anAccount.
	Withdraw register: 50 on: anAccount. 
	
	portfolio2 := Portfolio new.
	portfolio1 := Portfolio with: portfolio2. 
	portfolio1 add: anAccount.
	portfolio3 := Portfolio with: anAccount.
	
	
	self
	should: [ portfolio2 add: portfolio3. ]
	raise: Error
	withMessageText: Portfolio cantAddAccountErrorDescripcion. 


	

	"! !

!testRun: #PortfolioTest #test01APortfolioHaveZeroAsBalanceWhenCreated stamp: 'G. B. 11/7/2020 22:09:37'!
PASSED!

!testRun: #PortfolioTest #test02APortfolioWithOnePortfolioWithNonZeroBalanceHasTheBalanceOfTheAccount stamp: 'G. B. 11/7/2020 22:09:37'!
PASSED!

!testRun: #PortfolioTest #test03APortfolioWithManyAccountWithNonZeroBalanceHasTheSumOfBalance stamp: 'G. B. 11/7/2020 22:09:37'!
PASSED!

!testRun: #PortfolioTest #test04AnEmptyPortfolioDontKnowAnyTransaction stamp: 'G. B. 11/7/2020 22:09:37'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioKnowsRegisteredTransactions stamp: 'G. B. 11/7/2020 22:09:37'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioWithManyAccountsKnowsRegisteredTransactions stamp: 'G. B. 11/7/2020 22:09:37'!
PASSED!

!testRun: #PortfolioTest #test07AnEmptyPortfolioHasZeroTransaction stamp: 'G. B. 11/7/2020 22:09:37'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioWithOneAccountKnewTheAccountTransactions stamp: 'G. B. 11/7/2020 22:09:37'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithManyAccountsKnowsTheAccountsTransactions stamp: 'G. B. 11/7/2020 22:09:37'!
PASSED!

!testRun: #PortfolioTest #test10shouldRaiseErrorIfAPortfolioTriesToAddAPortfolio2Times stamp: 'G. B. 11/7/2020 22:09:37'!
PASSED!

!testRun: #PortfolioTest #test10shouldRaiseErrorIfAPortfolioTriesToAddItself stamp: 'G. B. 11/7/2020 22:09:37'!
PASSED!

!testRun: #PortfolioTest #test11shouldRaiseErrorIfAPortfolioTriesToAddAParentPortfolio stamp: 'G. B. 11/7/2020 22:09:37'!
PASSED!

!testRun: #PortfolioTest #test12shouldRaiseErrorIfAPortfolioTriesToAddAParentOfAParentPortfolio stamp: 'G. B. 11/7/2020 22:09:37'!
PASSED!

!testRun: #PortfolioTest #test13shouldRaiseErrorIfAPortfolioTriesToAddAnAlreadyPresentAccount stamp: 'G. B. 11/7/2020 22:09:37'!
PASSED!

!testRun: #PortfolioTest #test14shouldRaiseErrorIfAPortfolioTriesToAnAccountPresentInAParent stamp: 'G. B. 11/7/2020 22:09:37'!
PASSED!

!testRun: #PortfolioTest #test15shouldRaiseErrorIfAPortfolioTriesToAddAPortfolioWithAnAccountPresentOnItsTree stamp: 'G. B. 11/7/2020 22:09:37'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'G. B. 11/7/2020 22:09:37'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'G. B. 11/7/2020 22:09:37'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'G. B. 11/7/2020 22:09:37'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'G. B. 11/7/2020 22:09:37'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'G. B. 11/7/2020 22:09:37'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'G. B. 11/7/2020 22:09:37'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'G. B. 11/7/2020 22:09:37'!
PASSED!

!testRun: #PortfolioTest #test01APortfolioHaveZeroAsBalanceWhenCreated stamp: 'G. B. 11/7/2020 22:14:39'!
PASSED!

!testRun: #PortfolioTest #test02APortfolioWithOnePortfolioWithNonZeroBalanceHasTheBalanceOfTheAccount stamp: 'G. B. 11/7/2020 22:14:39'!
PASSED!

!testRun: #PortfolioTest #test03APortfolioWithManyAccountWithNonZeroBalanceHasTheSumOfBalance stamp: 'G. B. 11/7/2020 22:14:39'!
PASSED!

!testRun: #PortfolioTest #test04AnEmptyPortfolioDontKnowAnyTransaction stamp: 'G. B. 11/7/2020 22:14:39'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioKnowsRegisteredTransactions stamp: 'G. B. 11/7/2020 22:14:39'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioWithManyAccountsKnowsRegisteredTransactions stamp: 'G. B. 11/7/2020 22:14:39'!
PASSED!

!testRun: #PortfolioTest #test07AnEmptyPortfolioHasZeroTransaction stamp: 'G. B. 11/7/2020 22:14:39'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioWithOneAccountKnewTheAccountTransactions stamp: 'G. B. 11/7/2020 22:14:39'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithManyAccountsKnowsTheAccountsTransactions stamp: 'G. B. 11/7/2020 22:14:39'!
PASSED!

!testRun: #PortfolioTest #test10shouldRaiseErrorIfAPortfolioTriesToAddAPortfolio2Times stamp: 'G. B. 11/7/2020 22:14:39'!
PASSED!

!testRun: #PortfolioTest #test10shouldRaiseErrorIfAPortfolioTriesToAddItself stamp: 'G. B. 11/7/2020 22:14:39'!
PASSED!

!testRun: #PortfolioTest #test11shouldRaiseErrorIfAPortfolioTriesToAddAParentPortfolio stamp: 'G. B. 11/7/2020 22:14:39'!
PASSED!

!testRun: #PortfolioTest #test12shouldRaiseErrorIfAPortfolioTriesToAddAParentOfAParentPortfolio stamp: 'G. B. 11/7/2020 22:14:39'!
PASSED!

!testRun: #PortfolioTest #test13shouldRaiseErrorIfAPortfolioTriesToAddAnAlreadyPresentAccount stamp: 'G. B. 11/7/2020 22:14:39'!
PASSED!

!testRun: #PortfolioTest #test14shouldRaiseErrorIfAPortfolioTriesToAnAccountPresentInAParent stamp: 'G. B. 11/7/2020 22:14:39'!
PASSED!

!testRun: #PortfolioTest #test15shouldRaiseErrorIfAPortfolioTriesToAddAPortfolioWithAnAccountPresentOnItsTree stamp: 'G. B. 11/7/2020 22:14:39'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'G. B. 11/7/2020 22:14:39'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'G. B. 11/7/2020 22:14:39'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'G. B. 11/7/2020 22:14:39'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'G. B. 11/7/2020 22:14:39'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'G. B. 11/7/2020 22:14:39'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'G. B. 11/7/2020 22:14:39'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'G. B. 11/7/2020 22:14:39'!
PASSED!

----QUIT----(8 November 2020 00:24:12) CuisUniversity-4383.image priorSource: 19187353!

----STARTUP---- (8 November 2020 15:51:55) as /mnt/6750e462-c385-4872-92cc-c2b6e5c52075/Documents/UBA/1er cuatri 2020/Ingeniería 1/VM CUIS/CuisUniversity-4383.image!


!testRun: #PortfolioTest #test01APortfolioHaveZeroAsBalanceWhenCreated stamp: 'G. B. 11/8/2020 15:52:05'!
PASSED!

!testRun: #PortfolioTest #test02APortfolioWithOnePortfolioWithNonZeroBalanceHasTheBalanceOfTheAccount stamp: 'G. B. 11/8/2020 15:52:05'!
PASSED!

!testRun: #PortfolioTest #test03APortfolioWithManyAccountWithNonZeroBalanceHasTheSumOfBalance stamp: 'G. B. 11/8/2020 15:52:05'!
PASSED!

!testRun: #PortfolioTest #test04AnEmptyPortfolioDontKnowAnyTransaction stamp: 'G. B. 11/8/2020 15:52:05'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioKnowsRegisteredTransactions stamp: 'G. B. 11/8/2020 15:52:05'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioWithManyAccountsKnowsRegisteredTransactions stamp: 'G. B. 11/8/2020 15:52:05'!
PASSED!

!testRun: #PortfolioTest #test07AnEmptyPortfolioHasZeroTransaction stamp: 'G. B. 11/8/2020 15:52:05'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioWithOneAccountKnewTheAccountTransactions stamp: 'G. B. 11/8/2020 15:52:05'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithManyAccountsKnowsTheAccountsTransactions stamp: 'G. B. 11/8/2020 15:52:05'!
PASSED!

!testRun: #PortfolioTest #test10shouldRaiseErrorIfAPortfolioTriesToAddAPortfolio2Times stamp: 'G. B. 11/8/2020 15:52:05'!
PASSED!

!testRun: #PortfolioTest #test10shouldRaiseErrorIfAPortfolioTriesToAddItself stamp: 'G. B. 11/8/2020 15:52:05'!
PASSED!

!testRun: #PortfolioTest #test11shouldRaiseErrorIfAPortfolioTriesToAddAParentPortfolio stamp: 'G. B. 11/8/2020 15:52:05'!
PASSED!

!testRun: #PortfolioTest #test12shouldRaiseErrorIfAPortfolioTriesToAddAParentOfAParentPortfolio stamp: 'G. B. 11/8/2020 15:52:05'!
PASSED!

!testRun: #PortfolioTest #test13shouldRaiseErrorIfAPortfolioTriesToAddAnAlreadyPresentAccount stamp: 'G. B. 11/8/2020 15:52:05'!
PASSED!

!testRun: #PortfolioTest #test14shouldRaiseErrorIfAPortfolioTriesToAnAccountPresentInAParent stamp: 'G. B. 11/8/2020 15:52:05'!
PASSED!

!testRun: #PortfolioTest #test15shouldRaiseErrorIfAPortfolioTriesToAddAPortfolioWithAnAccountPresentOnItsTree stamp: 'G. B. 11/8/2020 15:52:05'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'G. B. 11/8/2020 15:52:05'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'G. B. 11/8/2020 15:52:05'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'G. B. 11/8/2020 15:52:05'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'G. B. 11/8/2020 15:52:05'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'G. B. 11/8/2020 15:52:05'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'G. B. 11/8/2020 15:52:05'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'G. B. 11/8/2020 15:52:05'!
PASSED!

Object subclass: #BankAccount
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classDefinition: #BankAccount category: 'Portfolio-Ejercicio' stamp: 'G. B. 11/8/2020 16:04:26'!
Object subclass: #BankAccount
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

BankAccount subclass: #ReceptiveAccount
	instanceVariableNames: 'transactions'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classDefinition: #ReceptiveAccount category: 'Portfolio-Ejercicio' stamp: 'G. B. 11/8/2020 16:04:40'!
BankAccount subclass: #ReceptiveAccount
	instanceVariableNames: 'transactions'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

BankAccount subclass: #Portfolio
	instanceVariableNames: 'accounts parents'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classDefinition: #Portfolio category: 'Portfolio-Ejercicio' stamp: 'G. B. 11/8/2020 16:04:48'!
BankAccount subclass: #Portfolio
	instanceVariableNames: 'accounts parents'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!testRun: #PortfolioTest #test01APortfolioHaveZeroAsBalanceWhenCreated stamp: 'G. B. 11/8/2020 16:04:53'!
PASSED!

!testRun: #PortfolioTest #test02APortfolioWithOnePortfolioWithNonZeroBalanceHasTheBalanceOfTheAccount stamp: 'G. B. 11/8/2020 16:04:53'!
PASSED!

!testRun: #PortfolioTest #test03APortfolioWithManyAccountWithNonZeroBalanceHasTheSumOfBalance stamp: 'G. B. 11/8/2020 16:04:53'!
PASSED!

!testRun: #PortfolioTest #test04AnEmptyPortfolioDontKnowAnyTransaction stamp: 'G. B. 11/8/2020 16:04:53'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioKnowsRegisteredTransactions stamp: 'G. B. 11/8/2020 16:04:53'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioWithManyAccountsKnowsRegisteredTransactions stamp: 'G. B. 11/8/2020 16:04:53'!
PASSED!

!testRun: #PortfolioTest #test07AnEmptyPortfolioHasZeroTransaction stamp: 'G. B. 11/8/2020 16:04:53'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioWithOneAccountKnewTheAccountTransactions stamp: 'G. B. 11/8/2020 16:04:53'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithManyAccountsKnowsTheAccountsTransactions stamp: 'G. B. 11/8/2020 16:04:53'!
PASSED!

!testRun: #PortfolioTest #test10shouldRaiseErrorIfAPortfolioTriesToAddAPortfolio2Times stamp: 'G. B. 11/8/2020 16:04:53'!
PASSED!

!testRun: #PortfolioTest #test10shouldRaiseErrorIfAPortfolioTriesToAddItself stamp: 'G. B. 11/8/2020 16:04:53'!
PASSED!

!testRun: #PortfolioTest #test11shouldRaiseErrorIfAPortfolioTriesToAddAParentPortfolio stamp: 'G. B. 11/8/2020 16:04:53'!
PASSED!

!testRun: #PortfolioTest #test12shouldRaiseErrorIfAPortfolioTriesToAddAParentOfAParentPortfolio stamp: 'G. B. 11/8/2020 16:04:53'!
PASSED!

!testRun: #PortfolioTest #test13shouldRaiseErrorIfAPortfolioTriesToAddAnAlreadyPresentAccount stamp: 'G. B. 11/8/2020 16:04:53'!
PASSED!

!testRun: #PortfolioTest #test14shouldRaiseErrorIfAPortfolioTriesToAnAccountPresentInAParent stamp: 'G. B. 11/8/2020 16:04:53'!
PASSED!

!testRun: #PortfolioTest #test15shouldRaiseErrorIfAPortfolioTriesToAddAPortfolioWithAnAccountPresentOnItsTree stamp: 'G. B. 11/8/2020 16:04:53'!
PASSED!

!testRun: #PortfolioTest #test01APortfolioHaveZeroAsBalanceWhenCreated stamp: 'G. B. 11/8/2020 16:12:09'!
PASSED!

!testRun: #PortfolioTest #test02APortfolioWithOnePortfolioWithNonZeroBalanceHasTheBalanceOfTheAccount stamp: 'G. B. 11/8/2020 16:12:09'!
PASSED!

!testRun: #PortfolioTest #test03APortfolioWithManyAccountWithNonZeroBalanceHasTheSumOfBalance stamp: 'G. B. 11/8/2020 16:12:09'!
PASSED!

!testRun: #PortfolioTest #test04AnEmptyPortfolioDontKnowAnyTransaction stamp: 'G. B. 11/8/2020 16:12:09'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioKnowsRegisteredTransactions stamp: 'G. B. 11/8/2020 16:12:09'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioWithManyAccountsKnowsRegisteredTransactions stamp: 'G. B. 11/8/2020 16:12:09'!
PASSED!

!testRun: #PortfolioTest #test07AnEmptyPortfolioHasZeroTransaction stamp: 'G. B. 11/8/2020 16:12:09'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioWithOneAccountKnewTheAccountTransactions stamp: 'G. B. 11/8/2020 16:12:09'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithManyAccountsKnowsTheAccountsTransactions stamp: 'G. B. 11/8/2020 16:12:09'!
PASSED!

!testRun: #PortfolioTest #test10shouldRaiseErrorIfAPortfolioTriesToAddAPortfolio2Times stamp: 'G. B. 11/8/2020 16:12:09'!
PASSED!

!testRun: #PortfolioTest #test10shouldRaiseErrorIfAPortfolioTriesToAddItself stamp: 'G. B. 11/8/2020 16:12:09'!
PASSED!

!testRun: #PortfolioTest #test11shouldRaiseErrorIfAPortfolioTriesToAddAParentPortfolio stamp: 'G. B. 11/8/2020 16:12:09'!
PASSED!

!testRun: #PortfolioTest #test12shouldRaiseErrorIfAPortfolioTriesToAddAParentOfAParentPortfolio stamp: 'G. B. 11/8/2020 16:12:10'!
PASSED!

!testRun: #PortfolioTest #test13shouldRaiseErrorIfAPortfolioTriesToAddAnAlreadyPresentAccount stamp: 'G. B. 11/8/2020 16:12:10'!
PASSED!

!testRun: #PortfolioTest #test14shouldRaiseErrorIfAPortfolioTriesToAnAccountPresentInAParent stamp: 'G. B. 11/8/2020 16:12:10'!
PASSED!

!testRun: #PortfolioTest #test15shouldRaiseErrorIfAPortfolioTriesToAddAPortfolioWithAnAccountPresentOnItsTree stamp: 'G. B. 11/8/2020 16:12:10'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'G. B. 11/8/2020 16:12:10'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'G. B. 11/8/2020 16:12:10'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'G. B. 11/8/2020 16:12:10'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'G. B. 11/8/2020 16:12:10'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'G. B. 11/8/2020 16:12:10'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'G. B. 11/8/2020 16:12:10'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'G. B. 11/8/2020 16:12:10'!
PASSED!
!Portfolio methodsFor: 'accessing' stamp: 'G. B. 11/8/2020 16:13:38' prior: 50934669!
isSafeToAddAccount: anAccountToAdd.

	(accounts includes: anAccountToAdd) ifTrue: [^self error: self class cantAddAccountErrorDescripcion ].
	
	
	(self isSafeToAddAccount: anAccountToAdd) ifFalse: [^self error: self class cantAddAccountErrorDescripcion].
	
	(self hasAsParent: anAccountToAdd) ifTrue: [^self error: self class cantAddAccountErrorDescripcion].
	


	accounts do: [:account | (account class = ReceptiveAccount) ifTrue: [(account = anAccountToAdd) ifTrue: [^self error: self class cantAddAccountErrorDescripcion]]
	                                                                     	                ifFalse: [(account isSafeToAddAccount: anAccountToAdd) ifFalse: [^self error: self class cantAddAccountErrorDescripcion].]].

	
	(self isAccountPresentInAParent: anAccountToAdd) ifTrue: [^self error: self class cantAddAccountErrorDescripcion].
		
	(anAccountToAdd class = Portfolio) ifTrue: [(self isAccountChildrenPresentInAParent: anAccountToAdd) ifTrue: [^self error: self class cantAddAccountErrorDescripcion].].

	^ (self = anAccountToAdd) ifTrue: [^self error: self class cantAddAccountErrorDescripcion].
	
	
	
	
	
	
! !
!Portfolio methodsFor: 'accessing' stamp: 'G. B. 11/8/2020 16:13:56' prior: 50935197!
isSafeToAddAccount: anAccountToAdd.

	(accounts includes: anAccountToAdd) ifTrue: [^self error: self class cantAddAccountErrorDescripcion ].
	
	
	(self hasAsParent: anAccountToAdd) ifTrue: [^self error: self class cantAddAccountErrorDescripcion].
	

	accounts do: [:account | (account class = ReceptiveAccount) ifTrue: [(account = anAccountToAdd) ifTrue: [^self error: self class cantAddAccountErrorDescripcion]]
	                                                                     	                ifFalse: [(account isSafeToAddAccount: anAccountToAdd) ifFalse: [^self error: self class cantAddAccountErrorDescripcion].]].

	
	(self isAccountPresentInAParent: anAccountToAdd) ifTrue: [^self error: self class cantAddAccountErrorDescripcion].
		
	(anAccountToAdd class = Portfolio) ifTrue: [(self isAccountChildrenPresentInAParent: anAccountToAdd) ifTrue: [^self error: self class cantAddAccountErrorDescripcion].].

	^ (self = anAccountToAdd) ifTrue: [^self error: self class cantAddAccountErrorDescripcion].
	
	
	
	
	
	
! !

!testRun: #PortfolioTest #test01APortfolioHaveZeroAsBalanceWhenCreated stamp: 'G. B. 11/8/2020 16:13:58'!
PASSED!

!testRun: #PortfolioTest #test02APortfolioWithOnePortfolioWithNonZeroBalanceHasTheBalanceOfTheAccount stamp: 'G. B. 11/8/2020 16:13:58'!
PASSED!

!testRun: #PortfolioTest #test03APortfolioWithManyAccountWithNonZeroBalanceHasTheSumOfBalance stamp: 'G. B. 11/8/2020 16:13:58'!
ERROR!

!testRun: #PortfolioTest #test04AnEmptyPortfolioDontKnowAnyTransaction stamp: 'G. B. 11/8/2020 16:13:58'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioKnowsRegisteredTransactions stamp: 'G. B. 11/8/2020 16:13:58'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioWithManyAccountsKnowsRegisteredTransactions stamp: 'G. B. 11/8/2020 16:13:58'!
ERROR!

!testRun: #PortfolioTest #test07AnEmptyPortfolioHasZeroTransaction stamp: 'G. B. 11/8/2020 16:13:58'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioWithOneAccountKnewTheAccountTransactions stamp: 'G. B. 11/8/2020 16:13:58'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithManyAccountsKnowsTheAccountsTransactions stamp: 'G. B. 11/8/2020 16:13:58'!
ERROR!

!testRun: #PortfolioTest #test10shouldRaiseErrorIfAPortfolioTriesToAddAPortfolio2Times stamp: 'G. B. 11/8/2020 16:13:58'!
PASSED!

!testRun: #PortfolioTest #test10shouldRaiseErrorIfAPortfolioTriesToAddItself stamp: 'G. B. 11/8/2020 16:13:58'!
PASSED!

!testRun: #PortfolioTest #test11shouldRaiseErrorIfAPortfolioTriesToAddAParentPortfolio stamp: 'G. B. 11/8/2020 16:13:58'!
PASSED!

!testRun: #PortfolioTest #test12shouldRaiseErrorIfAPortfolioTriesToAddAParentOfAParentPortfolio stamp: 'G. B. 11/8/2020 16:13:58'!
ERROR!

!testRun: #PortfolioTest #test13shouldRaiseErrorIfAPortfolioTriesToAddAnAlreadyPresentAccount stamp: 'G. B. 11/8/2020 16:13:58'!
PASSED!

!testRun: #PortfolioTest #test14shouldRaiseErrorIfAPortfolioTriesToAnAccountPresentInAParent stamp: 'G. B. 11/8/2020 16:13:58'!
ERROR!

!testRun: #PortfolioTest #test15shouldRaiseErrorIfAPortfolioTriesToAddAPortfolioWithAnAccountPresentOnItsTree stamp: 'G. B. 11/8/2020 16:13:58'!
PASSED!

!testRun: #PortfolioTest #test03APortfolioWithManyAccountWithNonZeroBalanceHasTheSumOfBalance stamp: 'G. B. 11/8/2020 16:14:04'!
ERROR!
!Portfolio methodsFor: 'accessing' stamp: 'G. B. 11/8/2020 16:14:32' prior: 50935236!
isSafeToAddAccount: anAccountToAdd.

	(accounts includes: anAccountToAdd) ifTrue: [^self error: self class cantAddAccountErrorDescripcion ].
	
	
	(self hasAsParent: anAccountToAdd) ifTrue: [^self error: self class cantAddAccountErrorDescripcion].
	

	accounts do: [:account | (account class = ReceptiveAccount) ifTrue: [(account = anAccountToAdd) ifTrue: [^self error: self class cantAddAccountErrorDescripcion]]
	                                                                     	                ifFalse: [(account isSafeToAddAccount: anAccountToAdd) ifFalse: [^self error: self class cantAddAccountErrorDescripcion].]].

	
	(self isAccountPresentInAParent: anAccountToAdd) ifTrue: [^self error: self class cantAddAccountErrorDescripcion].
		
	(anAccountToAdd class = Portfolio) ifTrue: [(self isAccountChildrenPresentInAParent: anAccountToAdd) ifTrue: [^self error: self class cantAddAccountErrorDescripcion].].

	(self = anAccountToAdd) ifTrue: [^self error: self class cantAddAccountErrorDescripcion].
	
	^true.
	
	
	
	
	
! !

!testRun: #PortfolioTest #test01APortfolioHaveZeroAsBalanceWhenCreated stamp: 'G. B. 11/8/2020 16:14:33'!
PASSED!

!testRun: #PortfolioTest #test02APortfolioWithOnePortfolioWithNonZeroBalanceHasTheBalanceOfTheAccount stamp: 'G. B. 11/8/2020 16:14:33'!
PASSED!

!testRun: #PortfolioTest #test03APortfolioWithManyAccountWithNonZeroBalanceHasTheSumOfBalance stamp: 'G. B. 11/8/2020 16:14:33'!
PASSED!

!testRun: #PortfolioTest #test04AnEmptyPortfolioDontKnowAnyTransaction stamp: 'G. B. 11/8/2020 16:14:33'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioKnowsRegisteredTransactions stamp: 'G. B. 11/8/2020 16:14:33'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioWithManyAccountsKnowsRegisteredTransactions stamp: 'G. B. 11/8/2020 16:14:33'!
PASSED!

!testRun: #PortfolioTest #test07AnEmptyPortfolioHasZeroTransaction stamp: 'G. B. 11/8/2020 16:14:33'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioWithOneAccountKnewTheAccountTransactions stamp: 'G. B. 11/8/2020 16:14:33'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithManyAccountsKnowsTheAccountsTransactions stamp: 'G. B. 11/8/2020 16:14:33'!
PASSED!

!testRun: #PortfolioTest #test10shouldRaiseErrorIfAPortfolioTriesToAddAPortfolio2Times stamp: 'G. B. 11/8/2020 16:14:33'!
PASSED!

!testRun: #PortfolioTest #test10shouldRaiseErrorIfAPortfolioTriesToAddItself stamp: 'G. B. 11/8/2020 16:14:33'!
PASSED!

!testRun: #PortfolioTest #test11shouldRaiseErrorIfAPortfolioTriesToAddAParentPortfolio stamp: 'G. B. 11/8/2020 16:14:33'!
PASSED!

!testRun: #PortfolioTest #test12shouldRaiseErrorIfAPortfolioTriesToAddAParentOfAParentPortfolio stamp: 'G. B. 11/8/2020 16:14:33'!
PASSED!

!testRun: #PortfolioTest #test13shouldRaiseErrorIfAPortfolioTriesToAddAnAlreadyPresentAccount stamp: 'G. B. 11/8/2020 16:14:33'!
PASSED!

!testRun: #PortfolioTest #test14shouldRaiseErrorIfAPortfolioTriesToAnAccountPresentInAParent stamp: 'G. B. 11/8/2020 16:14:33'!
PASSED!

!testRun: #PortfolioTest #test15shouldRaiseErrorIfAPortfolioTriesToAddAPortfolioWithAnAccountPresentOnItsTree stamp: 'G. B. 11/8/2020 16:14:33'!
PASSED!
!Portfolio methodsFor: 'accessing' stamp: 'G. B. 11/8/2020 16:15:13' prior: 50934076!
add: anAccountToAdd

	"(accounts includes: anAccountToAdd) ifTrue: [^self error: self class cantAddAccountErrorDescripcion ]."
	
	
	(self isSafeToAddAccount: anAccountToAdd). 
	
	"(self hasAsParent: anAccountToAdd) ifTrue: [^self error: self class cantAddAccountErrorDescripcion]."
	
	(anAccountToAdd class = Portfolio) ifTrue: [anAccountToAdd addParent: self.].
	accounts add: anAccountToAdd. ! !

!testRun: #PortfolioTest #test01APortfolioHaveZeroAsBalanceWhenCreated stamp: 'G. B. 11/8/2020 16:15:14'!
PASSED!

!testRun: #PortfolioTest #test02APortfolioWithOnePortfolioWithNonZeroBalanceHasTheBalanceOfTheAccount stamp: 'G. B. 11/8/2020 16:15:14'!
PASSED!

!testRun: #PortfolioTest #test03APortfolioWithManyAccountWithNonZeroBalanceHasTheSumOfBalance stamp: 'G. B. 11/8/2020 16:15:14'!
PASSED!

!testRun: #PortfolioTest #test04AnEmptyPortfolioDontKnowAnyTransaction stamp: 'G. B. 11/8/2020 16:15:14'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioKnowsRegisteredTransactions stamp: 'G. B. 11/8/2020 16:15:14'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioWithManyAccountsKnowsRegisteredTransactions stamp: 'G. B. 11/8/2020 16:15:14'!
PASSED!

!testRun: #PortfolioTest #test07AnEmptyPortfolioHasZeroTransaction stamp: 'G. B. 11/8/2020 16:15:14'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioWithOneAccountKnewTheAccountTransactions stamp: 'G. B. 11/8/2020 16:15:14'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithManyAccountsKnowsTheAccountsTransactions stamp: 'G. B. 11/8/2020 16:15:14'!
PASSED!

!testRun: #PortfolioTest #test10shouldRaiseErrorIfAPortfolioTriesToAddAPortfolio2Times stamp: 'G. B. 11/8/2020 16:15:14'!
PASSED!

!testRun: #PortfolioTest #test10shouldRaiseErrorIfAPortfolioTriesToAddItself stamp: 'G. B. 11/8/2020 16:15:14'!
PASSED!

!testRun: #PortfolioTest #test11shouldRaiseErrorIfAPortfolioTriesToAddAParentPortfolio stamp: 'G. B. 11/8/2020 16:15:14'!
PASSED!

!testRun: #PortfolioTest #test12shouldRaiseErrorIfAPortfolioTriesToAddAParentOfAParentPortfolio stamp: 'G. B. 11/8/2020 16:15:14'!
PASSED!

!testRun: #PortfolioTest #test13shouldRaiseErrorIfAPortfolioTriesToAddAnAlreadyPresentAccount stamp: 'G. B. 11/8/2020 16:15:14'!
PASSED!

!testRun: #PortfolioTest #test14shouldRaiseErrorIfAPortfolioTriesToAnAccountPresentInAParent stamp: 'G. B. 11/8/2020 16:15:14'!
PASSED!

!testRun: #PortfolioTest #test15shouldRaiseErrorIfAPortfolioTriesToAddAPortfolioWithAnAccountPresentOnItsTree stamp: 'G. B. 11/8/2020 16:15:14'!
PASSED!
!Portfolio methodsFor: 'accessing' stamp: 'G. B. 11/8/2020 16:15:24' prior: 50935440!
add: anAccountToAdd

	(self isSafeToAddAccount: anAccountToAdd). 
		
	(anAccountToAdd class = Portfolio) ifTrue: [anAccountToAdd addParent: self.].
	accounts add: anAccountToAdd. ! !
!Portfolio methodsFor: 'accessing' stamp: 'G. B. 11/8/2020 16:15:27' prior: 50935520!
add: anAccountToAdd

	self isSafeToAddAccount: anAccountToAdd. 
		
	(anAccountToAdd class = Portfolio) ifTrue: [anAccountToAdd addParent: self.].
	accounts add: anAccountToAdd. ! !
!Portfolio methodsFor: 'accessing' stamp: 'G. B. 11/8/2020 16:21:27' prior: 50935340!
isSafeToAddAccount: anAccountToAdd.

	(accounts includes: anAccountToAdd) ifTrue: [^self error: self class cantAddAccountErrorDescripcion ].
	(self = anAccountToAdd) ifTrue: [^self error: self class cantAddAccountErrorDescripcion].

	
	(self hasAsParent: anAccountToAdd) ifTrue: [^self error: self class cantAddAccountErrorDescripcion].
	

	accounts do: [:account | (account class = ReceptiveAccount) ifTrue: [(account = anAccountToAdd) ifTrue: [^self error: self class cantAddAccountErrorDescripcion]]
	                                                                     	                ifFalse: [(account isSafeToAddAccount: anAccountToAdd) ifFalse: [^self error: self class cantAddAccountErrorDescripcion].]].

	
	(self isAccountPresentInAParent: anAccountToAdd) ifTrue: [^self error: self class cantAddAccountErrorDescripcion].
		
	(anAccountToAdd class = Portfolio) ifTrue: [(self isAccountChildrenPresentInAParent: anAccountToAdd) ifTrue: [^self error: self class cantAddAccountErrorDescripcion].].

	
	^true.
	
	
	
	
	
! !

!testRun: #PortfolioTest #test01APortfolioHaveZeroAsBalanceWhenCreated stamp: 'G. B. 11/8/2020 16:21:28'!
PASSED!

!testRun: #PortfolioTest #test02APortfolioWithOnePortfolioWithNonZeroBalanceHasTheBalanceOfTheAccount stamp: 'G. B. 11/8/2020 16:21:28'!
PASSED!

!testRun: #PortfolioTest #test03APortfolioWithManyAccountWithNonZeroBalanceHasTheSumOfBalance stamp: 'G. B. 11/8/2020 16:21:28'!
PASSED!

!testRun: #PortfolioTest #test04AnEmptyPortfolioDontKnowAnyTransaction stamp: 'G. B. 11/8/2020 16:21:28'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioKnowsRegisteredTransactions stamp: 'G. B. 11/8/2020 16:21:28'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioWithManyAccountsKnowsRegisteredTransactions stamp: 'G. B. 11/8/2020 16:21:28'!
PASSED!

!testRun: #PortfolioTest #test07AnEmptyPortfolioHasZeroTransaction stamp: 'G. B. 11/8/2020 16:21:28'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioWithOneAccountKnewTheAccountTransactions stamp: 'G. B. 11/8/2020 16:21:28'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithManyAccountsKnowsTheAccountsTransactions stamp: 'G. B. 11/8/2020 16:21:28'!
PASSED!

!testRun: #PortfolioTest #test10shouldRaiseErrorIfAPortfolioTriesToAddAPortfolio2Times stamp: 'G. B. 11/8/2020 16:21:28'!
PASSED!

!testRun: #PortfolioTest #test10shouldRaiseErrorIfAPortfolioTriesToAddItself stamp: 'G. B. 11/8/2020 16:21:28'!
PASSED!

!testRun: #PortfolioTest #test11shouldRaiseErrorIfAPortfolioTriesToAddAParentPortfolio stamp: 'G. B. 11/8/2020 16:21:28'!
PASSED!

!testRun: #PortfolioTest #test12shouldRaiseErrorIfAPortfolioTriesToAddAParentOfAParentPortfolio stamp: 'G. B. 11/8/2020 16:21:28'!
PASSED!

!testRun: #PortfolioTest #test13shouldRaiseErrorIfAPortfolioTriesToAddAnAlreadyPresentAccount stamp: 'G. B. 11/8/2020 16:21:28'!
PASSED!

!testRun: #PortfolioTest #test14shouldRaiseErrorIfAPortfolioTriesToAnAccountPresentInAParent stamp: 'G. B. 11/8/2020 16:21:28'!
PASSED!

!testRun: #PortfolioTest #test15shouldRaiseErrorIfAPortfolioTriesToAddAPortfolioWithAnAccountPresentOnItsTree stamp: 'G. B. 11/8/2020 16:21:28'!
PASSED!
!Portfolio methodsFor: 'accessing' stamp: 'G. B. 11/8/2020 16:22:03' prior: 50935538!
isSafeToAddAccount: anAccountToAdd.

	((self = anAccountToAdd) or: [accounts includes: anAccountToAdd]) ifTrue: [^self error: self class cantAddAccountErrorDescripcion ].

	
	(self hasAsParent: anAccountToAdd) ifTrue: [^self error: self class cantAddAccountErrorDescripcion].
	

	accounts do: [:account | (account class = ReceptiveAccount) ifTrue: [(account = anAccountToAdd) ifTrue: [^self error: self class cantAddAccountErrorDescripcion]]
	                                                                     	                ifFalse: [(account isSafeToAddAccount: anAccountToAdd) ifFalse: [^self error: self class cantAddAccountErrorDescripcion].]].

	
	(self isAccountPresentInAParent: anAccountToAdd) ifTrue: [^self error: self class cantAddAccountErrorDescripcion].
		
	(anAccountToAdd class = Portfolio) ifTrue: [(self isAccountChildrenPresentInAParent: anAccountToAdd) ifTrue: [^self error: self class cantAddAccountErrorDescripcion].].

	
	^true.
	
	
	
	
	
! !

!testRun: #PortfolioTest #test01APortfolioHaveZeroAsBalanceWhenCreated stamp: 'G. B. 11/8/2020 16:22:04'!
PASSED!

!testRun: #PortfolioTest #test02APortfolioWithOnePortfolioWithNonZeroBalanceHasTheBalanceOfTheAccount stamp: 'G. B. 11/8/2020 16:22:04'!
PASSED!

!testRun: #PortfolioTest #test03APortfolioWithManyAccountWithNonZeroBalanceHasTheSumOfBalance stamp: 'G. B. 11/8/2020 16:22:04'!
PASSED!

!testRun: #PortfolioTest #test04AnEmptyPortfolioDontKnowAnyTransaction stamp: 'G. B. 11/8/2020 16:22:04'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioKnowsRegisteredTransactions stamp: 'G. B. 11/8/2020 16:22:04'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioWithManyAccountsKnowsRegisteredTransactions stamp: 'G. B. 11/8/2020 16:22:04'!
PASSED!

!testRun: #PortfolioTest #test07AnEmptyPortfolioHasZeroTransaction stamp: 'G. B. 11/8/2020 16:22:04'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioWithOneAccountKnewTheAccountTransactions stamp: 'G. B. 11/8/2020 16:22:04'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithManyAccountsKnowsTheAccountsTransactions stamp: 'G. B. 11/8/2020 16:22:04'!
PASSED!

!testRun: #PortfolioTest #test10shouldRaiseErrorIfAPortfolioTriesToAddAPortfolio2Times stamp: 'G. B. 11/8/2020 16:22:04'!
PASSED!

!testRun: #PortfolioTest #test10shouldRaiseErrorIfAPortfolioTriesToAddItself stamp: 'G. B. 11/8/2020 16:22:04'!
PASSED!

!testRun: #PortfolioTest #test11shouldRaiseErrorIfAPortfolioTriesToAddAParentPortfolio stamp: 'G. B. 11/8/2020 16:22:04'!
PASSED!

!testRun: #PortfolioTest #test12shouldRaiseErrorIfAPortfolioTriesToAddAParentOfAParentPortfolio stamp: 'G. B. 11/8/2020 16:22:04'!
PASSED!

!testRun: #PortfolioTest #test13shouldRaiseErrorIfAPortfolioTriesToAddAnAlreadyPresentAccount stamp: 'G. B. 11/8/2020 16:22:04'!
PASSED!

!testRun: #PortfolioTest #test14shouldRaiseErrorIfAPortfolioTriesToAnAccountPresentInAParent stamp: 'G. B. 11/8/2020 16:22:04'!
PASSED!

!testRun: #PortfolioTest #test15shouldRaiseErrorIfAPortfolioTriesToAddAPortfolioWithAnAccountPresentOnItsTree stamp: 'G. B. 11/8/2020 16:22:04'!
PASSED!
!Portfolio methodsFor: 'accessing' stamp: 'G. B. 11/8/2020 16:23:14' prior: 50935638!
isSafeToAddAccount: anAccountToAdd.

	((self = anAccountToAdd) or: [accounts includes: anAccountToAdd]) ifTrue: [^self error: self class cantAddAccountErrorDescripcion ].

	
	((self hasAsParent: anAccountToAdd) or: [self isAccountPresentInAParent: anAccountToAdd]) ifTrue: [^self error: self class cantAddAccountErrorDescripcion].
	

	accounts do: [:account | (account class = ReceptiveAccount) ifTrue: [(account = anAccountToAdd) ifTrue: [^self error: self class cantAddAccountErrorDescripcion]]
	                                                                     	                ifFalse: [(account isSafeToAddAccount: anAccountToAdd) ifFalse: [^self error: self class cantAddAccountErrorDescripcion].]].

	
		
	(anAccountToAdd class = Portfolio) ifTrue: [(self isAccountChildrenPresentInAParent: anAccountToAdd) ifTrue: [^self error: self class cantAddAccountErrorDescripcion].].

	
	^true.
	
	
	
	
	
! !

!testRun: #PortfolioTest #test01APortfolioHaveZeroAsBalanceWhenCreated stamp: 'G. B. 11/8/2020 16:23:16'!
PASSED!

!testRun: #PortfolioTest #test02APortfolioWithOnePortfolioWithNonZeroBalanceHasTheBalanceOfTheAccount stamp: 'G. B. 11/8/2020 16:23:16'!
PASSED!

!testRun: #PortfolioTest #test03APortfolioWithManyAccountWithNonZeroBalanceHasTheSumOfBalance stamp: 'G. B. 11/8/2020 16:23:16'!
PASSED!

!testRun: #PortfolioTest #test04AnEmptyPortfolioDontKnowAnyTransaction stamp: 'G. B. 11/8/2020 16:23:16'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioKnowsRegisteredTransactions stamp: 'G. B. 11/8/2020 16:23:16'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioWithManyAccountsKnowsRegisteredTransactions stamp: 'G. B. 11/8/2020 16:23:16'!
PASSED!

!testRun: #PortfolioTest #test07AnEmptyPortfolioHasZeroTransaction stamp: 'G. B. 11/8/2020 16:23:16'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioWithOneAccountKnewTheAccountTransactions stamp: 'G. B. 11/8/2020 16:23:16'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithManyAccountsKnowsTheAccountsTransactions stamp: 'G. B. 11/8/2020 16:23:16'!
PASSED!

!testRun: #PortfolioTest #test10shouldRaiseErrorIfAPortfolioTriesToAddAPortfolio2Times stamp: 'G. B. 11/8/2020 16:23:16'!
PASSED!

!testRun: #PortfolioTest #test10shouldRaiseErrorIfAPortfolioTriesToAddItself stamp: 'G. B. 11/8/2020 16:23:16'!
PASSED!

!testRun: #PortfolioTest #test11shouldRaiseErrorIfAPortfolioTriesToAddAParentPortfolio stamp: 'G. B. 11/8/2020 16:23:16'!
PASSED!

!testRun: #PortfolioTest #test12shouldRaiseErrorIfAPortfolioTriesToAddAParentOfAParentPortfolio stamp: 'G. B. 11/8/2020 16:23:16'!
PASSED!

!testRun: #PortfolioTest #test13shouldRaiseErrorIfAPortfolioTriesToAddAnAlreadyPresentAccount stamp: 'G. B. 11/8/2020 16:23:16'!
PASSED!

!testRun: #PortfolioTest #test14shouldRaiseErrorIfAPortfolioTriesToAnAccountPresentInAParent stamp: 'G. B. 11/8/2020 16:23:16'!
PASSED!

!testRun: #PortfolioTest #test15shouldRaiseErrorIfAPortfolioTriesToAddAPortfolioWithAnAccountPresentOnItsTree stamp: 'G. B. 11/8/2020 16:23:16'!
PASSED!
!Portfolio methodsFor: 'accessing' stamp: 'G. B. 11/8/2020 16:23:28' prior: 50935736!
isSafeToAddAccount: anAccountToAdd.

	((self = anAccountToAdd) or: [accounts includes: anAccountToAdd]) ifTrue: [^self error: self class cantAddAccountErrorDescripcion ].

	
	((self hasAsParent: anAccountToAdd) or: [self isAccountPresentInAParent: anAccountToAdd]) ifTrue: [^self error: self class cantAddAccountErrorDescripcion].
	

"	accounts do: [:account | (account class = ReceptiveAccount) ifTrue: [(account = anAccountToAdd) ifTrue: [^self error: self class cantAddAccountErrorDescripcion]]
	                                                                     	                ifFalse: [(account isSafeToAddAccount: anAccountToAdd) ifFalse: [^self error: self class cantAddAccountErrorDescripcion].]].

"	
		
	(anAccountToAdd class = Portfolio) ifTrue: [(self isAccountChildrenPresentInAParent: anAccountToAdd) ifTrue: [^self error: self class cantAddAccountErrorDescripcion].].

	
	^true.
	
	
	
	
	
! !

!testRun: #PortfolioTest #test01APortfolioHaveZeroAsBalanceWhenCreated stamp: 'G. B. 11/8/2020 16:23:29'!
PASSED!

!testRun: #PortfolioTest #test02APortfolioWithOnePortfolioWithNonZeroBalanceHasTheBalanceOfTheAccount stamp: 'G. B. 11/8/2020 16:23:29'!
PASSED!

!testRun: #PortfolioTest #test03APortfolioWithManyAccountWithNonZeroBalanceHasTheSumOfBalance stamp: 'G. B. 11/8/2020 16:23:29'!
PASSED!

!testRun: #PortfolioTest #test04AnEmptyPortfolioDontKnowAnyTransaction stamp: 'G. B. 11/8/2020 16:23:29'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioKnowsRegisteredTransactions stamp: 'G. B. 11/8/2020 16:23:29'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioWithManyAccountsKnowsRegisteredTransactions stamp: 'G. B. 11/8/2020 16:23:29'!
PASSED!

!testRun: #PortfolioTest #test07AnEmptyPortfolioHasZeroTransaction stamp: 'G. B. 11/8/2020 16:23:29'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioWithOneAccountKnewTheAccountTransactions stamp: 'G. B. 11/8/2020 16:23:29'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithManyAccountsKnowsTheAccountsTransactions stamp: 'G. B. 11/8/2020 16:23:29'!
PASSED!

!testRun: #PortfolioTest #test10shouldRaiseErrorIfAPortfolioTriesToAddAPortfolio2Times stamp: 'G. B. 11/8/2020 16:23:29'!
PASSED!

!testRun: #PortfolioTest #test10shouldRaiseErrorIfAPortfolioTriesToAddItself stamp: 'G. B. 11/8/2020 16:23:29'!
PASSED!

!testRun: #PortfolioTest #test11shouldRaiseErrorIfAPortfolioTriesToAddAParentPortfolio stamp: 'G. B. 11/8/2020 16:23:29'!
PASSED!

!testRun: #PortfolioTest #test12shouldRaiseErrorIfAPortfolioTriesToAddAParentOfAParentPortfolio stamp: 'G. B. 11/8/2020 16:23:29'!
PASSED!

!testRun: #PortfolioTest #test13shouldRaiseErrorIfAPortfolioTriesToAddAnAlreadyPresentAccount stamp: 'G. B. 11/8/2020 16:23:29'!
FAILURE!

!testRun: #PortfolioTest #test14shouldRaiseErrorIfAPortfolioTriesToAnAccountPresentInAParent stamp: 'G. B. 11/8/2020 16:23:29'!
PASSED!

!testRun: #PortfolioTest #test15shouldRaiseErrorIfAPortfolioTriesToAddAPortfolioWithAnAccountPresentOnItsTree stamp: 'G. B. 11/8/2020 16:23:29'!
PASSED!

!testRun: #PortfolioTest #test13shouldRaiseErrorIfAPortfolioTriesToAddAnAlreadyPresentAccount stamp: 'G. B. 11/8/2020 16:23:29'!
FAILURE!
!Portfolio methodsFor: 'accessing' stamp: 'G. B. 11/8/2020 16:23:42' prior: 50935832!
isSafeToAddAccount: anAccountToAdd.

	((self = anAccountToAdd) or: [accounts includes: anAccountToAdd]) ifTrue: [^self error: self class cantAddAccountErrorDescripcion ].

	
	((self hasAsParent: anAccountToAdd) or: [self isAccountPresentInAParent: anAccountToAdd]) ifTrue: [^self error: self class cantAddAccountErrorDescripcion].
	

	accounts do: [:account | (account class = ReceptiveAccount) ifTrue: [(account = anAccountToAdd) ifTrue: [^self error: self class cantAddAccountErrorDescripcion]]
	                                                                     	                ifFalse: [(account isSafeToAddAccount: anAccountToAdd) ifFalse: [^self error: self class cantAddAccountErrorDescripcion].]].

	
		
	(anAccountToAdd class = Portfolio) ifTrue: [(self isAccountChildrenPresentInAParent: anAccountToAdd) ifTrue: [^self error: self class cantAddAccountErrorDescripcion].].

	
	^true.
	
	
	
	
	
! !

!testRun: #PortfolioTest #test01APortfolioHaveZeroAsBalanceWhenCreated stamp: 'G. B. 11/8/2020 16:23:43'!
PASSED!

!testRun: #PortfolioTest #test02APortfolioWithOnePortfolioWithNonZeroBalanceHasTheBalanceOfTheAccount stamp: 'G. B. 11/8/2020 16:23:43'!
PASSED!

!testRun: #PortfolioTest #test03APortfolioWithManyAccountWithNonZeroBalanceHasTheSumOfBalance stamp: 'G. B. 11/8/2020 16:23:43'!
PASSED!

!testRun: #PortfolioTest #test04AnEmptyPortfolioDontKnowAnyTransaction stamp: 'G. B. 11/8/2020 16:23:43'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioKnowsRegisteredTransactions stamp: 'G. B. 11/8/2020 16:23:43'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioWithManyAccountsKnowsRegisteredTransactions stamp: 'G. B. 11/8/2020 16:23:43'!
PASSED!

!testRun: #PortfolioTest #test07AnEmptyPortfolioHasZeroTransaction stamp: 'G. B. 11/8/2020 16:23:43'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioWithOneAccountKnewTheAccountTransactions stamp: 'G. B. 11/8/2020 16:23:43'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithManyAccountsKnowsTheAccountsTransactions stamp: 'G. B. 11/8/2020 16:23:43'!
PASSED!

!testRun: #PortfolioTest #test10shouldRaiseErrorIfAPortfolioTriesToAddAPortfolio2Times stamp: 'G. B. 11/8/2020 16:23:43'!
PASSED!

!testRun: #PortfolioTest #test10shouldRaiseErrorIfAPortfolioTriesToAddItself stamp: 'G. B. 11/8/2020 16:23:43'!
PASSED!

!testRun: #PortfolioTest #test11shouldRaiseErrorIfAPortfolioTriesToAddAParentPortfolio stamp: 'G. B. 11/8/2020 16:23:43'!
PASSED!

!testRun: #PortfolioTest #test12shouldRaiseErrorIfAPortfolioTriesToAddAParentOfAParentPortfolio stamp: 'G. B. 11/8/2020 16:23:43'!
PASSED!

!testRun: #PortfolioTest #test13shouldRaiseErrorIfAPortfolioTriesToAddAnAlreadyPresentAccount stamp: 'G. B. 11/8/2020 16:23:43'!
PASSED!

!testRun: #PortfolioTest #test14shouldRaiseErrorIfAPortfolioTriesToAnAccountPresentInAParent stamp: 'G. B. 11/8/2020 16:23:43'!
PASSED!

!testRun: #PortfolioTest #test15shouldRaiseErrorIfAPortfolioTriesToAddAPortfolioWithAnAccountPresentOnItsTree stamp: 'G. B. 11/8/2020 16:23:43'!
PASSED!
!Portfolio methodsFor: 'accessing' stamp: 'G. B. 11/8/2020 16:26:10' prior: 50935933!
isSafeToAddAccount: anAccountToAdd.

"	((self = anAccountToAdd) or: [accounts includes: anAccountToAdd]) ifTrue: [^self error: self class cantAddAccountErrorDescripcion ]."

	
	((self hasAsParent: anAccountToAdd) or: [self isAccountPresentInAParent: anAccountToAdd]) ifTrue: [^self error: self class cantAddAccountErrorDescripcion].
	

	accounts do: [:account | (account class = ReceptiveAccount) ifTrue: [(account = anAccountToAdd) ifTrue: [^self error: self class cantAddAccountErrorDescripcion]]
	                                                                     	                ifFalse: [(account isSafeToAddAccount: anAccountToAdd) ifFalse: [^self error: self class cantAddAccountErrorDescripcion].]].

	
		
	(anAccountToAdd class = Portfolio) ifTrue: [(self isAccountChildrenPresentInAParent: anAccountToAdd) ifTrue: [^self error: self class cantAddAccountErrorDescripcion].].

	
	^true.
	
	
	
	
	
! !

!testRun: #PortfolioTest #test01APortfolioHaveZeroAsBalanceWhenCreated stamp: 'G. B. 11/8/2020 16:26:11'!
PASSED!

!testRun: #PortfolioTest #test02APortfolioWithOnePortfolioWithNonZeroBalanceHasTheBalanceOfTheAccount stamp: 'G. B. 11/8/2020 16:26:11'!
PASSED!

!testRun: #PortfolioTest #test03APortfolioWithManyAccountWithNonZeroBalanceHasTheSumOfBalance stamp: 'G. B. 11/8/2020 16:26:11'!
PASSED!

!testRun: #PortfolioTest #test04AnEmptyPortfolioDontKnowAnyTransaction stamp: 'G. B. 11/8/2020 16:26:11'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioKnowsRegisteredTransactions stamp: 'G. B. 11/8/2020 16:26:11'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioWithManyAccountsKnowsRegisteredTransactions stamp: 'G. B. 11/8/2020 16:26:11'!
PASSED!

!testRun: #PortfolioTest #test07AnEmptyPortfolioHasZeroTransaction stamp: 'G. B. 11/8/2020 16:26:11'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioWithOneAccountKnewTheAccountTransactions stamp: 'G. B. 11/8/2020 16:26:11'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithManyAccountsKnowsTheAccountsTransactions stamp: 'G. B. 11/8/2020 16:26:11'!
PASSED!

!testRun: #PortfolioTest #test10shouldRaiseErrorIfAPortfolioTriesToAddAPortfolio2Times stamp: 'G. B. 11/8/2020 16:26:11'!
PASSED!

!testRun: #PortfolioTest #test10shouldRaiseErrorIfAPortfolioTriesToAddItself stamp: 'G. B. 11/8/2020 16:26:11'!
FAILURE!

!testRun: #PortfolioTest #test11shouldRaiseErrorIfAPortfolioTriesToAddAParentPortfolio stamp: 'G. B. 11/8/2020 16:26:11'!
PASSED!

!testRun: #PortfolioTest #test12shouldRaiseErrorIfAPortfolioTriesToAddAParentOfAParentPortfolio stamp: 'G. B. 11/8/2020 16:26:11'!
PASSED!

!testRun: #PortfolioTest #test13shouldRaiseErrorIfAPortfolioTriesToAddAnAlreadyPresentAccount stamp: 'G. B. 11/8/2020 16:26:11'!
PASSED!

!testRun: #PortfolioTest #test14shouldRaiseErrorIfAPortfolioTriesToAnAccountPresentInAParent stamp: 'G. B. 11/8/2020 16:26:11'!
PASSED!

!testRun: #PortfolioTest #test15shouldRaiseErrorIfAPortfolioTriesToAddAPortfolioWithAnAccountPresentOnItsTree stamp: 'G. B. 11/8/2020 16:26:11'!
PASSED!

!testRun: #PortfolioTest #test10shouldRaiseErrorIfAPortfolioTriesToAddItself stamp: 'G. B. 11/8/2020 16:26:11'!
FAILURE!

!testRun: #PortfolioTest #test01APortfolioHaveZeroAsBalanceWhenCreated stamp: 'G. B. 11/8/2020 16:26:17'!
PASSED!

!testRun: #PortfolioTest #test02APortfolioWithOnePortfolioWithNonZeroBalanceHasTheBalanceOfTheAccount stamp: 'G. B. 11/8/2020 16:26:17'!
PASSED!

!testRun: #PortfolioTest #test03APortfolioWithManyAccountWithNonZeroBalanceHasTheSumOfBalance stamp: 'G. B. 11/8/2020 16:26:17'!
PASSED!

!testRun: #PortfolioTest #test04AnEmptyPortfolioDontKnowAnyTransaction stamp: 'G. B. 11/8/2020 16:26:17'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioKnowsRegisteredTransactions stamp: 'G. B. 11/8/2020 16:26:17'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioWithManyAccountsKnowsRegisteredTransactions stamp: 'G. B. 11/8/2020 16:26:17'!
PASSED!

!testRun: #PortfolioTest #test07AnEmptyPortfolioHasZeroTransaction stamp: 'G. B. 11/8/2020 16:26:17'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioWithOneAccountKnewTheAccountTransactions stamp: 'G. B. 11/8/2020 16:26:17'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithManyAccountsKnowsTheAccountsTransactions stamp: 'G. B. 11/8/2020 16:26:18'!
PASSED!

!testRun: #PortfolioTest #test10shouldRaiseErrorIfAPortfolioTriesToAddAPortfolio2Times stamp: 'G. B. 11/8/2020 16:26:18'!
PASSED!

!testRun: #PortfolioTest #test10shouldRaiseErrorIfAPortfolioTriesToAddItself stamp: 'G. B. 11/8/2020 16:26:18'!
FAILURE!

!testRun: #PortfolioTest #test11shouldRaiseErrorIfAPortfolioTriesToAddAParentPortfolio stamp: 'G. B. 11/8/2020 16:26:18'!
PASSED!

!testRun: #PortfolioTest #test12shouldRaiseErrorIfAPortfolioTriesToAddAParentOfAParentPortfolio stamp: 'G. B. 11/8/2020 16:26:18'!
PASSED!

!testRun: #PortfolioTest #test13shouldRaiseErrorIfAPortfolioTriesToAddAnAlreadyPresentAccount stamp: 'G. B. 11/8/2020 16:26:18'!
PASSED!

!testRun: #PortfolioTest #test14shouldRaiseErrorIfAPortfolioTriesToAnAccountPresentInAParent stamp: 'G. B. 11/8/2020 16:26:18'!
PASSED!

!testRun: #PortfolioTest #test15shouldRaiseErrorIfAPortfolioTriesToAddAPortfolioWithAnAccountPresentOnItsTree stamp: 'G. B. 11/8/2020 16:26:18'!
PASSED!

!testRun: #PortfolioTest #test10shouldRaiseErrorIfAPortfolioTriesToAddItself stamp: 'G. B. 11/8/2020 16:26:18'!
FAILURE!
!Portfolio methodsFor: 'accessing' stamp: 'G. B. 11/8/2020 16:26:38' prior: 50936029!
isSafeToAddAccount: anAccountToAdd.

	((self = anAccountToAdd)) ifTrue: [^self error: self class cantAddAccountErrorDescripcion ].

	
	((self hasAsParent: anAccountToAdd) or: [self isAccountPresentInAParent: anAccountToAdd]) ifTrue: [^self error: self class cantAddAccountErrorDescripcion].
	

	accounts do: [:account | (account class = ReceptiveAccount) ifTrue: [(account = anAccountToAdd) ifTrue: [^self error: self class cantAddAccountErrorDescripcion]]
	                                                                     	                ifFalse: [(account isSafeToAddAccount: anAccountToAdd) ifFalse: [^self error: self class cantAddAccountErrorDescripcion].]].

	
		
	(anAccountToAdd class = Portfolio) ifTrue: [(self isAccountChildrenPresentInAParent: anAccountToAdd) ifTrue: [^self error: self class cantAddAccountErrorDescripcion].].

	
	^true.
	
	
	
	
	
! !

!testRun: #PortfolioTest #test01APortfolioHaveZeroAsBalanceWhenCreated stamp: 'G. B. 11/8/2020 16:26:39'!
PASSED!

!testRun: #PortfolioTest #test02APortfolioWithOnePortfolioWithNonZeroBalanceHasTheBalanceOfTheAccount stamp: 'G. B. 11/8/2020 16:26:39'!
PASSED!

!testRun: #PortfolioTest #test03APortfolioWithManyAccountWithNonZeroBalanceHasTheSumOfBalance stamp: 'G. B. 11/8/2020 16:26:39'!
PASSED!

!testRun: #PortfolioTest #test04AnEmptyPortfolioDontKnowAnyTransaction stamp: 'G. B. 11/8/2020 16:26:39'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioKnowsRegisteredTransactions stamp: 'G. B. 11/8/2020 16:26:39'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioWithManyAccountsKnowsRegisteredTransactions stamp: 'G. B. 11/8/2020 16:26:39'!
PASSED!

!testRun: #PortfolioTest #test07AnEmptyPortfolioHasZeroTransaction stamp: 'G. B. 11/8/2020 16:26:39'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioWithOneAccountKnewTheAccountTransactions stamp: 'G. B. 11/8/2020 16:26:39'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithManyAccountsKnowsTheAccountsTransactions stamp: 'G. B. 11/8/2020 16:26:39'!
PASSED!

!testRun: #PortfolioTest #test10shouldRaiseErrorIfAPortfolioTriesToAddAPortfolio2Times stamp: 'G. B. 11/8/2020 16:26:39'!
PASSED!

!testRun: #PortfolioTest #test10shouldRaiseErrorIfAPortfolioTriesToAddItself stamp: 'G. B. 11/8/2020 16:26:39'!
PASSED!

!testRun: #PortfolioTest #test11shouldRaiseErrorIfAPortfolioTriesToAddAParentPortfolio stamp: 'G. B. 11/8/2020 16:26:39'!
PASSED!

!testRun: #PortfolioTest #test12shouldRaiseErrorIfAPortfolioTriesToAddAParentOfAParentPortfolio stamp: 'G. B. 11/8/2020 16:26:39'!
PASSED!

!testRun: #PortfolioTest #test13shouldRaiseErrorIfAPortfolioTriesToAddAnAlreadyPresentAccount stamp: 'G. B. 11/8/2020 16:26:39'!
PASSED!

!testRun: #PortfolioTest #test14shouldRaiseErrorIfAPortfolioTriesToAnAccountPresentInAParent stamp: 'G. B. 11/8/2020 16:26:39'!
PASSED!

!testRun: #PortfolioTest #test15shouldRaiseErrorIfAPortfolioTriesToAddAPortfolioWithAnAccountPresentOnItsTree stamp: 'G. B. 11/8/2020 16:26:39'!
PASSED!
!Portfolio methodsFor: 'accessing' stamp: 'G. B. 11/8/2020 16:31:52' prior: 50936198!
isSafeToAddAccount: anAccountToAdd.

	((self = anAccountToAdd) or: [self hasAsParent: anAccountToAdd] or: [self isAccountPresentInAParent: anAccountToAdd]) ifTrue: [^self error: self class cantAddAccountErrorDescripcion ].
		

	accounts do: [:account | (account class = ReceptiveAccount) ifTrue: [(account = anAccountToAdd) ifTrue: [^self error: self class cantAddAccountErrorDescripcion]]
	                                                                     	                ifFalse: [(account isSafeToAddAccount: anAccountToAdd) ifFalse: [^self error: self class cantAddAccountErrorDescripcion].]].

	
		
	(anAccountToAdd class = Portfolio) ifTrue: [(self isAccountChildrenPresentInAParent: anAccountToAdd) ifTrue: [^self error: self class cantAddAccountErrorDescripcion].].

	
	^true.
	
	
	
	
	
! !

!testRun: #PortfolioTest #test01APortfolioHaveZeroAsBalanceWhenCreated stamp: 'G. B. 11/8/2020 16:31:53'!
PASSED!

!testRun: #PortfolioTest #test02APortfolioWithOnePortfolioWithNonZeroBalanceHasTheBalanceOfTheAccount stamp: 'G. B. 11/8/2020 16:31:53'!
PASSED!

!testRun: #PortfolioTest #test03APortfolioWithManyAccountWithNonZeroBalanceHasTheSumOfBalance stamp: 'G. B. 11/8/2020 16:31:53'!
PASSED!

!testRun: #PortfolioTest #test04AnEmptyPortfolioDontKnowAnyTransaction stamp: 'G. B. 11/8/2020 16:31:53'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioKnowsRegisteredTransactions stamp: 'G. B. 11/8/2020 16:31:53'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioWithManyAccountsKnowsRegisteredTransactions stamp: 'G. B. 11/8/2020 16:31:53'!
PASSED!

!testRun: #PortfolioTest #test07AnEmptyPortfolioHasZeroTransaction stamp: 'G. B. 11/8/2020 16:31:53'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioWithOneAccountKnewTheAccountTransactions stamp: 'G. B. 11/8/2020 16:31:53'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithManyAccountsKnowsTheAccountsTransactions stamp: 'G. B. 11/8/2020 16:31:53'!
PASSED!

!testRun: #PortfolioTest #test10shouldRaiseErrorIfAPortfolioTriesToAddAPortfolio2Times stamp: 'G. B. 11/8/2020 16:31:53'!
PASSED!

!testRun: #PortfolioTest #test10shouldRaiseErrorIfAPortfolioTriesToAddItself stamp: 'G. B. 11/8/2020 16:31:53'!
PASSED!

!testRun: #PortfolioTest #test11shouldRaiseErrorIfAPortfolioTriesToAddAParentPortfolio stamp: 'G. B. 11/8/2020 16:31:53'!
PASSED!

!testRun: #PortfolioTest #test12shouldRaiseErrorIfAPortfolioTriesToAddAParentOfAParentPortfolio stamp: 'G. B. 11/8/2020 16:31:53'!
PASSED!

!testRun: #PortfolioTest #test13shouldRaiseErrorIfAPortfolioTriesToAddAnAlreadyPresentAccount stamp: 'G. B. 11/8/2020 16:31:53'!
PASSED!

!testRun: #PortfolioTest #test14shouldRaiseErrorIfAPortfolioTriesToAnAccountPresentInAParent stamp: 'G. B. 11/8/2020 16:31:53'!
PASSED!

!testRun: #PortfolioTest #test15shouldRaiseErrorIfAPortfolioTriesToAddAPortfolioWithAnAccountPresentOnItsTree stamp: 'G. B. 11/8/2020 16:31:53'!
PASSED!
!Portfolio methodsFor: 'accessing' stamp: 'G. B. 11/8/2020 16:32:27' prior: 50936293!
isSafeToAddAccount: anAccountToAdd.

	(self madeOf: anAccountToAdd) ifTrue: [^self error: self class cantAddAccountErrorDescripcion ].
		

	accounts do: [:account | (account class = ReceptiveAccount) ifTrue: [(account = anAccountToAdd) ifTrue: [^self error: self class cantAddAccountErrorDescripcion]]
	                                                                     	                ifFalse: [(account isSafeToAddAccount: anAccountToAdd) ifFalse: [^self error: self class cantAddAccountErrorDescripcion].]].

	
		
	(anAccountToAdd class = Portfolio) ifTrue: [(self isAccountChildrenPresentInAParent: anAccountToAdd) ifTrue: [^self error: self class cantAddAccountErrorDescripcion].].

	
	^true.
	
	
	
	
	
! !
!Portfolio methodsFor: 'accessing' stamp: 'G. B. 11/8/2020 16:32:58'!
madeOf: anAccountToAdd.

	^ (self = anAccountToAdd) or: [self hasAsParent: anAccountToAdd] or: [self isAccountPresentInAParent: anAccountToAdd]
	
	
	
	
! !
!ReceptiveAccount methodsFor: 'transactions' stamp: 'G. B. 11/8/2020 16:34:56'!
madeOf: anAccountToAdd.

	^ (self = anAccountToAdd) or: [self hasAsParent: anAccountToAdd] or: [self isAccountPresentInAParent: anAccountToAdd]
	
	
	! !

!testRun: #PortfolioTest #test01APortfolioHaveZeroAsBalanceWhenCreated stamp: 'G. B. 11/8/2020 16:35:07'!
PASSED!

!testRun: #PortfolioTest #test02APortfolioWithOnePortfolioWithNonZeroBalanceHasTheBalanceOfTheAccount stamp: 'G. B. 11/8/2020 16:35:07'!
PASSED!

!testRun: #PortfolioTest #test03APortfolioWithManyAccountWithNonZeroBalanceHasTheSumOfBalance stamp: 'G. B. 11/8/2020 16:35:07'!
PASSED!

!testRun: #PortfolioTest #test04AnEmptyPortfolioDontKnowAnyTransaction stamp: 'G. B. 11/8/2020 16:35:07'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioKnowsRegisteredTransactions stamp: 'G. B. 11/8/2020 16:35:07'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioWithManyAccountsKnowsRegisteredTransactions stamp: 'G. B. 11/8/2020 16:35:07'!
PASSED!

!testRun: #PortfolioTest #test07AnEmptyPortfolioHasZeroTransaction stamp: 'G. B. 11/8/2020 16:35:07'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioWithOneAccountKnewTheAccountTransactions stamp: 'G. B. 11/8/2020 16:35:07'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithManyAccountsKnowsTheAccountsTransactions stamp: 'G. B. 11/8/2020 16:35:07'!
PASSED!

!testRun: #PortfolioTest #test10shouldRaiseErrorIfAPortfolioTriesToAddAPortfolio2Times stamp: 'G. B. 11/8/2020 16:35:07'!
PASSED!

!testRun: #PortfolioTest #test10shouldRaiseErrorIfAPortfolioTriesToAddItself stamp: 'G. B. 11/8/2020 16:35:07'!
PASSED!

!testRun: #PortfolioTest #test11shouldRaiseErrorIfAPortfolioTriesToAddAParentPortfolio stamp: 'G. B. 11/8/2020 16:35:07'!
PASSED!

!testRun: #PortfolioTest #test12shouldRaiseErrorIfAPortfolioTriesToAddAParentOfAParentPortfolio stamp: 'G. B. 11/8/2020 16:35:07'!
PASSED!

!testRun: #PortfolioTest #test13shouldRaiseErrorIfAPortfolioTriesToAddAnAlreadyPresentAccount stamp: 'G. B. 11/8/2020 16:35:07'!
PASSED!

!testRun: #PortfolioTest #test14shouldRaiseErrorIfAPortfolioTriesToAnAccountPresentInAParent stamp: 'G. B. 11/8/2020 16:35:07'!
PASSED!

!testRun: #PortfolioTest #test15shouldRaiseErrorIfAPortfolioTriesToAddAPortfolioWithAnAccountPresentOnItsTree stamp: 'G. B. 11/8/2020 16:35:07'!
PASSED!
!ReceptiveAccount methodsFor: 'transactions' stamp: 'G. B. 11/8/2020 16:35:17' prior: 50936419!
madeOf: anAccountToAdd.

	^ (self = anAccountToAdd).
	
	
	! !

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'G. B. 11/8/2020 16:35:18'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'G. B. 11/8/2020 16:35:18'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'G. B. 11/8/2020 16:35:18'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'G. B. 11/8/2020 16:35:18'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'G. B. 11/8/2020 16:35:18'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'G. B. 11/8/2020 16:35:18'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'G. B. 11/8/2020 16:35:18'!
PASSED!

!testRun: #PortfolioTest #test01APortfolioHaveZeroAsBalanceWhenCreated stamp: 'G. B. 11/8/2020 16:35:20'!
PASSED!

!testRun: #PortfolioTest #test02APortfolioWithOnePortfolioWithNonZeroBalanceHasTheBalanceOfTheAccount stamp: 'G. B. 11/8/2020 16:35:20'!
PASSED!

!testRun: #PortfolioTest #test03APortfolioWithManyAccountWithNonZeroBalanceHasTheSumOfBalance stamp: 'G. B. 11/8/2020 16:35:20'!
PASSED!

!testRun: #PortfolioTest #test04AnEmptyPortfolioDontKnowAnyTransaction stamp: 'G. B. 11/8/2020 16:35:20'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioKnowsRegisteredTransactions stamp: 'G. B. 11/8/2020 16:35:20'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioWithManyAccountsKnowsRegisteredTransactions stamp: 'G. B. 11/8/2020 16:35:20'!
PASSED!

!testRun: #PortfolioTest #test07AnEmptyPortfolioHasZeroTransaction stamp: 'G. B. 11/8/2020 16:35:20'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioWithOneAccountKnewTheAccountTransactions stamp: 'G. B. 11/8/2020 16:35:20'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithManyAccountsKnowsTheAccountsTransactions stamp: 'G. B. 11/8/2020 16:35:20'!
PASSED!

!testRun: #PortfolioTest #test10shouldRaiseErrorIfAPortfolioTriesToAddAPortfolio2Times stamp: 'G. B. 11/8/2020 16:35:20'!
PASSED!

!testRun: #PortfolioTest #test10shouldRaiseErrorIfAPortfolioTriesToAddItself stamp: 'G. B. 11/8/2020 16:35:20'!
PASSED!

!testRun: #PortfolioTest #test11shouldRaiseErrorIfAPortfolioTriesToAddAParentPortfolio stamp: 'G. B. 11/8/2020 16:35:20'!
PASSED!

!testRun: #PortfolioTest #test12shouldRaiseErrorIfAPortfolioTriesToAddAParentOfAParentPortfolio stamp: 'G. B. 11/8/2020 16:35:20'!
PASSED!

!testRun: #PortfolioTest #test13shouldRaiseErrorIfAPortfolioTriesToAddAnAlreadyPresentAccount stamp: 'G. B. 11/8/2020 16:35:20'!
PASSED!

!testRun: #PortfolioTest #test14shouldRaiseErrorIfAPortfolioTriesToAnAccountPresentInAParent stamp: 'G. B. 11/8/2020 16:35:20'!
PASSED!

!testRun: #PortfolioTest #test15shouldRaiseErrorIfAPortfolioTriesToAddAPortfolioWithAnAccountPresentOnItsTree stamp: 'G. B. 11/8/2020 16:35:20'!
PASSED!
!ReceptiveAccount methodsFor: 'transactions' stamp: 'G. B. 11/8/2020 16:35:56' prior: 50936492!
madeOf: anAccountToAdd.

	^ (self = anAccountToAdd) or: [self hasAsParent: anAccountToAdd] or: [self isAccountPresentInAParent: anAccountToAdd].
	
	
	! !
!Portfolio methodsFor: 'accessing' stamp: 'G. B. 11/8/2020 16:38:18' prior: 50936386!
isSafeToAddAccount: anAccountToAdd.

	(self madeOf: anAccountToAdd) ifTrue: [^self error: self class cantAddAccountErrorDescripcion ].
		

	accounts do: [:account | (account isSafeToAddAccount: anAccountToAdd) ifFalse: [^self error: self class cantAddAccountErrorDescripcion].].

	
		
	(anAccountToAdd class = Portfolio) ifTrue: [(self isAccountChildrenPresentInAParent: anAccountToAdd) ifTrue: [^self error: self class cantAddAccountErrorDescripcion].].

	
	^true.
	
	
	
	
	
! !

!testRun: #PortfolioTest #test01APortfolioHaveZeroAsBalanceWhenCreated stamp: 'G. B. 11/8/2020 16:38:19'!
PASSED!

!testRun: #PortfolioTest #test02APortfolioWithOnePortfolioWithNonZeroBalanceHasTheBalanceOfTheAccount stamp: 'G. B. 11/8/2020 16:38:19'!
PASSED!

!testRun: #PortfolioTest #test03APortfolioWithManyAccountWithNonZeroBalanceHasTheSumOfBalance stamp: 'G. B. 11/8/2020 16:38:19'!
ERROR!

!testRun: #PortfolioTest #test04AnEmptyPortfolioDontKnowAnyTransaction stamp: 'G. B. 11/8/2020 16:38:19'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioKnowsRegisteredTransactions stamp: 'G. B. 11/8/2020 16:38:19'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioWithManyAccountsKnowsRegisteredTransactions stamp: 'G. B. 11/8/2020 16:38:19'!
ERROR!

!testRun: #PortfolioTest #test07AnEmptyPortfolioHasZeroTransaction stamp: 'G. B. 11/8/2020 16:38:19'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioWithOneAccountKnewTheAccountTransactions stamp: 'G. B. 11/8/2020 16:38:19'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithManyAccountsKnowsTheAccountsTransactions stamp: 'G. B. 11/8/2020 16:38:19'!
ERROR!

!testRun: #PortfolioTest #test10shouldRaiseErrorIfAPortfolioTriesToAddAPortfolio2Times stamp: 'G. B. 11/8/2020 16:38:19'!
PASSED!

!testRun: #PortfolioTest #test10shouldRaiseErrorIfAPortfolioTriesToAddItself stamp: 'G. B. 11/8/2020 16:38:19'!
PASSED!

!testRun: #PortfolioTest #test11shouldRaiseErrorIfAPortfolioTriesToAddAParentPortfolio stamp: 'G. B. 11/8/2020 16:38:19'!
PASSED!

!testRun: #PortfolioTest #test12shouldRaiseErrorIfAPortfolioTriesToAddAParentOfAParentPortfolio stamp: 'G. B. 11/8/2020 16:38:19'!
PASSED!

!testRun: #PortfolioTest #test13shouldRaiseErrorIfAPortfolioTriesToAddAnAlreadyPresentAccount stamp: 'G. B. 11/8/2020 16:38:19'!
FAILURE!

!testRun: #PortfolioTest #test14shouldRaiseErrorIfAPortfolioTriesToAnAccountPresentInAParent stamp: 'G. B. 11/8/2020 16:38:19'!
PASSED!

!testRun: #PortfolioTest #test15shouldRaiseErrorIfAPortfolioTriesToAddAPortfolioWithAnAccountPresentOnItsTree stamp: 'G. B. 11/8/2020 16:38:19'!
PASSED!
!Portfolio methodsFor: 'accessing' stamp: 'G. B. 11/8/2020 16:38:48' prior: 50936597!
isSafeToAddAccount: anAccountToAdd.

	(self madeOf: anAccountToAdd) ifTrue: [^self error: self class cantAddAccountErrorDescripcion ].
		

	accounts do: [:account | (account isSafeToAddAccount: anAccountToAdd)].

	
		
	(anAccountToAdd class = Portfolio) ifTrue: [(self isAccountChildrenPresentInAParent: anAccountToAdd) ifTrue: [^self error: self class cantAddAccountErrorDescripcion].].

	
	^true.
	
	
	
	
	
! !

!testRun: #PortfolioTest #test01APortfolioHaveZeroAsBalanceWhenCreated stamp: 'G. B. 11/8/2020 16:38:49'!
PASSED!

!testRun: #PortfolioTest #test02APortfolioWithOnePortfolioWithNonZeroBalanceHasTheBalanceOfTheAccount stamp: 'G. B. 11/8/2020 16:38:49'!
PASSED!

!testRun: #PortfolioTest #test03APortfolioWithManyAccountWithNonZeroBalanceHasTheSumOfBalance stamp: 'G. B. 11/8/2020 16:38:49'!
ERROR!

!testRun: #PortfolioTest #test04AnEmptyPortfolioDontKnowAnyTransaction stamp: 'G. B. 11/8/2020 16:38:49'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioKnowsRegisteredTransactions stamp: 'G. B. 11/8/2020 16:38:49'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioWithManyAccountsKnowsRegisteredTransactions stamp: 'G. B. 11/8/2020 16:38:49'!
ERROR!

!testRun: #PortfolioTest #test07AnEmptyPortfolioHasZeroTransaction stamp: 'G. B. 11/8/2020 16:38:49'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioWithOneAccountKnewTheAccountTransactions stamp: 'G. B. 11/8/2020 16:38:49'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithManyAccountsKnowsTheAccountsTransactions stamp: 'G. B. 11/8/2020 16:38:49'!
ERROR!

!testRun: #PortfolioTest #test10shouldRaiseErrorIfAPortfolioTriesToAddAPortfolio2Times stamp: 'G. B. 11/8/2020 16:38:49'!
PASSED!

!testRun: #PortfolioTest #test10shouldRaiseErrorIfAPortfolioTriesToAddItself stamp: 'G. B. 11/8/2020 16:38:49'!
PASSED!

!testRun: #PortfolioTest #test11shouldRaiseErrorIfAPortfolioTriesToAddAParentPortfolio stamp: 'G. B. 11/8/2020 16:38:49'!
PASSED!

!testRun: #PortfolioTest #test12shouldRaiseErrorIfAPortfolioTriesToAddAParentOfAParentPortfolio stamp: 'G. B. 11/8/2020 16:38:49'!
PASSED!

!testRun: #PortfolioTest #test13shouldRaiseErrorIfAPortfolioTriesToAddAnAlreadyPresentAccount stamp: 'G. B. 11/8/2020 16:38:49'!
FAILURE!

!testRun: #PortfolioTest #test14shouldRaiseErrorIfAPortfolioTriesToAnAccountPresentInAParent stamp: 'G. B. 11/8/2020 16:38:49'!
PASSED!

!testRun: #PortfolioTest #test15shouldRaiseErrorIfAPortfolioTriesToAddAPortfolioWithAnAccountPresentOnItsTree stamp: 'G. B. 11/8/2020 16:38:49'!
PASSED!
!Portfolio methodsFor: 'accessing' stamp: 'G. B. 11/8/2020 16:38:56' prior: 50936680!
isSafeToAddAccount: anAccountToAdd.

	(self madeOf: anAccountToAdd) ifTrue: [^self error: self class cantAddAccountErrorDescripcion ].
		

	accounts do: [:account | (account class = ReceptiveAccount) ifTrue: [(account = anAccountToAdd) ifTrue: [^self error: self class cantAddAccountErrorDescripcion]]
	                                                                     	                ifFalse: [(account isSafeToAddAccount: anAccountToAdd) ifFalse: [^self error: self class cantAddAccountErrorDescripcion].]].

	
		
	(anAccountToAdd class = Portfolio) ifTrue: [(self isAccountChildrenPresentInAParent: anAccountToAdd) ifTrue: [^self error: self class cantAddAccountErrorDescripcion].].

	
	^true.
	
	
	
	
	
! !

!testRun: #PortfolioTest #test01APortfolioHaveZeroAsBalanceWhenCreated stamp: 'G. B. 11/8/2020 16:38:57'!
PASSED!

!testRun: #PortfolioTest #test02APortfolioWithOnePortfolioWithNonZeroBalanceHasTheBalanceOfTheAccount stamp: 'G. B. 11/8/2020 16:38:57'!
PASSED!

!testRun: #PortfolioTest #test03APortfolioWithManyAccountWithNonZeroBalanceHasTheSumOfBalance stamp: 'G. B. 11/8/2020 16:38:57'!
PASSED!

!testRun: #PortfolioTest #test04AnEmptyPortfolioDontKnowAnyTransaction stamp: 'G. B. 11/8/2020 16:38:57'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioKnowsRegisteredTransactions stamp: 'G. B. 11/8/2020 16:38:57'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioWithManyAccountsKnowsRegisteredTransactions stamp: 'G. B. 11/8/2020 16:38:57'!
PASSED!

!testRun: #PortfolioTest #test07AnEmptyPortfolioHasZeroTransaction stamp: 'G. B. 11/8/2020 16:38:57'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioWithOneAccountKnewTheAccountTransactions stamp: 'G. B. 11/8/2020 16:38:57'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithManyAccountsKnowsTheAccountsTransactions stamp: 'G. B. 11/8/2020 16:38:57'!
PASSED!

!testRun: #PortfolioTest #test10shouldRaiseErrorIfAPortfolioTriesToAddAPortfolio2Times stamp: 'G. B. 11/8/2020 16:38:57'!
PASSED!

!testRun: #PortfolioTest #test10shouldRaiseErrorIfAPortfolioTriesToAddItself stamp: 'G. B. 11/8/2020 16:38:57'!
PASSED!

!testRun: #PortfolioTest #test11shouldRaiseErrorIfAPortfolioTriesToAddAParentPortfolio stamp: 'G. B. 11/8/2020 16:38:57'!
PASSED!

!testRun: #PortfolioTest #test12shouldRaiseErrorIfAPortfolioTriesToAddAParentOfAParentPortfolio stamp: 'G. B. 11/8/2020 16:38:57'!
PASSED!

!testRun: #PortfolioTest #test13shouldRaiseErrorIfAPortfolioTriesToAddAnAlreadyPresentAccount stamp: 'G. B. 11/8/2020 16:38:57'!
PASSED!

!testRun: #PortfolioTest #test14shouldRaiseErrorIfAPortfolioTriesToAnAccountPresentInAParent stamp: 'G. B. 11/8/2020 16:38:57'!
PASSED!

!testRun: #PortfolioTest #test15shouldRaiseErrorIfAPortfolioTriesToAddAPortfolioWithAnAccountPresentOnItsTree stamp: 'G. B. 11/8/2020 16:38:57'!
PASSED!
!Portfolio methodsFor: 'accessing' stamp: 'G. B. 11/8/2020 16:45:44' prior: 50936761!
isSafeToAddAccount: anAccountToAdd.

	(self madeOf: anAccountToAdd) ifTrue: [^self error: self class cantAddAccountErrorDescripcion ].
		

	accounts do: [:account | 	(account madeOf: anAccountToAdd) ifTrue: [^self error: self class cantAddAccountErrorDescripcion ].].

	
		
	(anAccountToAdd class = Portfolio) ifTrue: [(self isAccountChildrenPresentInAParent: anAccountToAdd) ifTrue: [^self error: self class cantAddAccountErrorDescripcion].].

	
	^true.
	
	
	
	
	
! !

!testRun: #PortfolioTest #test01APortfolioHaveZeroAsBalanceWhenCreated stamp: 'G. B. 11/8/2020 16:45:46'!
PASSED!

!testRun: #PortfolioTest #test02APortfolioWithOnePortfolioWithNonZeroBalanceHasTheBalanceOfTheAccount stamp: 'G. B. 11/8/2020 16:45:46'!
PASSED!

!testRun: #PortfolioTest #test03APortfolioWithManyAccountWithNonZeroBalanceHasTheSumOfBalance stamp: 'G. B. 11/8/2020 16:45:46'!
PASSED!

!testRun: #PortfolioTest #test04AnEmptyPortfolioDontKnowAnyTransaction stamp: 'G. B. 11/8/2020 16:45:46'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioKnowsRegisteredTransactions stamp: 'G. B. 11/8/2020 16:45:46'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioWithManyAccountsKnowsRegisteredTransactions stamp: 'G. B. 11/8/2020 16:45:46'!
ERROR!

!testRun: #PortfolioTest #test07AnEmptyPortfolioHasZeroTransaction stamp: 'G. B. 11/8/2020 16:45:46'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioWithOneAccountKnewTheAccountTransactions stamp: 'G. B. 11/8/2020 16:45:46'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithManyAccountsKnowsTheAccountsTransactions stamp: 'G. B. 11/8/2020 16:45:46'!
PASSED!

!testRun: #PortfolioTest #test10shouldRaiseErrorIfAPortfolioTriesToAddAPortfolio2Times stamp: 'G. B. 11/8/2020 16:45:46'!
PASSED!

!testRun: #PortfolioTest #test10shouldRaiseErrorIfAPortfolioTriesToAddItself stamp: 'G. B. 11/8/2020 16:45:46'!
PASSED!

!testRun: #PortfolioTest #test11shouldRaiseErrorIfAPortfolioTriesToAddAParentPortfolio stamp: 'G. B. 11/8/2020 16:45:46'!
PASSED!

!testRun: #PortfolioTest #test12shouldRaiseErrorIfAPortfolioTriesToAddAParentOfAParentPortfolio stamp: 'G. B. 11/8/2020 16:45:46'!
PASSED!

!testRun: #PortfolioTest #test13shouldRaiseErrorIfAPortfolioTriesToAddAnAlreadyPresentAccount stamp: 'G. B. 11/8/2020 16:45:46'!
FAILURE!

!testRun: #PortfolioTest #test14shouldRaiseErrorIfAPortfolioTriesToAnAccountPresentInAParent stamp: 'G. B. 11/8/2020 16:45:46'!
PASSED!

!testRun: #PortfolioTest #test15shouldRaiseErrorIfAPortfolioTriesToAddAPortfolioWithAnAccountPresentOnItsTree stamp: 'G. B. 11/8/2020 16:45:46'!
PASSED!
!Portfolio methodsFor: 'accessing' stamp: 'G. B. 11/8/2020 16:45:59' prior: 50936851!
isSafeToAddAccount: anAccountToAdd.

	"(self madeOf: anAccountToAdd) ifTrue: [^self error: self class cantAddAccountErrorDescripcion ]."
		

	accounts do: [:account | 	(account madeOf: anAccountToAdd) ifTrue: [^self error: self class cantAddAccountErrorDescripcion ].].

	
		
	(anAccountToAdd class = Portfolio) ifTrue: [(self isAccountChildrenPresentInAParent: anAccountToAdd) ifTrue: [^self error: self class cantAddAccountErrorDescripcion].].

	
	^true.
	
	
	
	
	
! !

!testRun: #PortfolioTest #test01APortfolioHaveZeroAsBalanceWhenCreated stamp: 'G. B. 11/8/2020 16:46:00'!
PASSED!

!testRun: #PortfolioTest #test02APortfolioWithOnePortfolioWithNonZeroBalanceHasTheBalanceOfTheAccount stamp: 'G. B. 11/8/2020 16:46:00'!
PASSED!

!testRun: #PortfolioTest #test03APortfolioWithManyAccountWithNonZeroBalanceHasTheSumOfBalance stamp: 'G. B. 11/8/2020 16:46:00'!
PASSED!

!testRun: #PortfolioTest #test04AnEmptyPortfolioDontKnowAnyTransaction stamp: 'G. B. 11/8/2020 16:46:00'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioKnowsRegisteredTransactions stamp: 'G. B. 11/8/2020 16:46:00'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioWithManyAccountsKnowsRegisteredTransactions stamp: 'G. B. 11/8/2020 16:46:00'!
ERROR!

!testRun: #PortfolioTest #test07AnEmptyPortfolioHasZeroTransaction stamp: 'G. B. 11/8/2020 16:46:00'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioWithOneAccountKnewTheAccountTransactions stamp: 'G. B. 11/8/2020 16:46:00'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithManyAccountsKnowsTheAccountsTransactions stamp: 'G. B. 11/8/2020 16:46:00'!
PASSED!

!testRun: #PortfolioTest #test10shouldRaiseErrorIfAPortfolioTriesToAddAPortfolio2Times stamp: 'G. B. 11/8/2020 16:46:00'!
PASSED!

!testRun: #PortfolioTest #test10shouldRaiseErrorIfAPortfolioTriesToAddItself stamp: 'G. B. 11/8/2020 16:46:00'!
FAILURE!

!testRun: #PortfolioTest #test11shouldRaiseErrorIfAPortfolioTriesToAddAParentPortfolio stamp: 'G. B. 11/8/2020 16:46:00'!
FAILURE!

!testRun: #PortfolioTest #test12shouldRaiseErrorIfAPortfolioTriesToAddAParentOfAParentPortfolio stamp: 'G. B. 11/8/2020 16:46:00'!
FAILURE!

!testRun: #PortfolioTest #test13shouldRaiseErrorIfAPortfolioTriesToAddAnAlreadyPresentAccount stamp: 'G. B. 11/8/2020 16:46:00'!
FAILURE!

!testRun: #PortfolioTest #test14shouldRaiseErrorIfAPortfolioTriesToAnAccountPresentInAParent stamp: 'G. B. 11/8/2020 16:46:00'!
FAILURE!

!testRun: #PortfolioTest #test15shouldRaiseErrorIfAPortfolioTriesToAddAPortfolioWithAnAccountPresentOnItsTree stamp: 'G. B. 11/8/2020 16:46:00'!
PASSED!
!Portfolio methodsFor: 'accessing' stamp: 'G. B. 11/8/2020 16:47:38' prior: 50936934!
isSafeToAddAccount: anAccountToAdd.

	"(self madeOf: anAccountToAdd) ifTrue: [^self error: self class cantAddAccountErrorDescripcion ]."
		

	accounts do: [:account | 	(account madeOf: anAccountToAdd) ifTrue: [^self error: self class cantAddAccountErrorDescripcion ] ifFalse: [account isSafeToAddAccount: anAccountToAdd]].

	
		
	(anAccountToAdd class = Portfolio) ifTrue: [(self isAccountChildrenPresentInAParent: anAccountToAdd) ifTrue: [^self error: self class cantAddAccountErrorDescripcion].].

	
	^true.
	
	
	
	
	
! !
!Portfolio methodsFor: 'accessing' stamp: 'G. B. 11/8/2020 16:47:48' prior: 50937017!
isSafeToAddAccount: anAccountToAdd.

	"(self madeOf: anAccountToAdd) ifTrue: [^self error: self class cantAddAccountErrorDescripcion ]."
		

	accounts do: [:account | 	(account madeOf: anAccountToAdd) ifTrue: [^self error: self class cantAddAccountErrorDescripcion ] ifFalse: [account isSafeToAddAccount: anAccountToAdd]].

	
		
	(anAccountToAdd class = Portfolio) ifTrue: [(self isAccountChildrenPresentInAParent: anAccountToAdd) ifTrue: [^self error: self class cantAddAccountErrorDescripcion].].

	
	^true.
	
	
	
	
	
! !

!testRun: #PortfolioTest #test01APortfolioHaveZeroAsBalanceWhenCreated stamp: 'G. B. 11/8/2020 16:47:49'!
PASSED!

!testRun: #PortfolioTest #test02APortfolioWithOnePortfolioWithNonZeroBalanceHasTheBalanceOfTheAccount stamp: 'G. B. 11/8/2020 16:47:49'!
PASSED!

!testRun: #PortfolioTest #test03APortfolioWithManyAccountWithNonZeroBalanceHasTheSumOfBalance stamp: 'G. B. 11/8/2020 16:47:49'!
ERROR!

!testRun: #PortfolioTest #test04AnEmptyPortfolioDontKnowAnyTransaction stamp: 'G. B. 11/8/2020 16:47:49'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioKnowsRegisteredTransactions stamp: 'G. B. 11/8/2020 16:47:49'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioWithManyAccountsKnowsRegisteredTransactions stamp: 'G. B. 11/8/2020 16:47:49'!
ERROR!

!testRun: #PortfolioTest #test07AnEmptyPortfolioHasZeroTransaction stamp: 'G. B. 11/8/2020 16:47:49'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioWithOneAccountKnewTheAccountTransactions stamp: 'G. B. 11/8/2020 16:47:49'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithManyAccountsKnowsTheAccountsTransactions stamp: 'G. B. 11/8/2020 16:47:49'!
ERROR!

!testRun: #PortfolioTest #test10shouldRaiseErrorIfAPortfolioTriesToAddAPortfolio2Times stamp: 'G. B. 11/8/2020 16:47:49'!
PASSED!

!testRun: #PortfolioTest #test10shouldRaiseErrorIfAPortfolioTriesToAddItself stamp: 'G. B. 11/8/2020 16:47:49'!
FAILURE!

!testRun: #PortfolioTest #test11shouldRaiseErrorIfAPortfolioTriesToAddAParentPortfolio stamp: 'G. B. 11/8/2020 16:47:49'!
FAILURE!

!testRun: #PortfolioTest #test12shouldRaiseErrorIfAPortfolioTriesToAddAParentOfAParentPortfolio stamp: 'G. B. 11/8/2020 16:47:49'!
FAILURE!

!testRun: #PortfolioTest #test13shouldRaiseErrorIfAPortfolioTriesToAddAnAlreadyPresentAccount stamp: 'G. B. 11/8/2020 16:47:49'!
PASSED!

!testRun: #PortfolioTest #test14shouldRaiseErrorIfAPortfolioTriesToAnAccountPresentInAParent stamp: 'G. B. 11/8/2020 16:47:49'!
FAILURE!

!testRun: #PortfolioTest #test15shouldRaiseErrorIfAPortfolioTriesToAddAPortfolioWithAnAccountPresentOnItsTree stamp: 'G. B. 11/8/2020 16:47:49'!
PASSED!
!Portfolio methodsFor: 'accessing' stamp: 'G. B. 11/8/2020 16:48:47' prior: 50937037!
isSafeToAddAccount: anAccountToAdd.

	(self madeOf: anAccountToAdd) ifTrue: [^self error: self class cantAddAccountErrorDescripcion ].
		


	
		
	(anAccountToAdd class = Portfolio) ifTrue: [(self isAccountChildrenPresentInAParent: anAccountToAdd) ifTrue: [^self error: self class cantAddAccountErrorDescripcion].].

	
	^true.
	
	
	
	
	
! !
!Portfolio methodsFor: 'accessing' stamp: 'G. B. 11/8/2020 16:49:38' prior: 50936411!
madeOf: anAccountToAdd.

	^ (self = anAccountToAdd) or: [
	accounts do: [:account | 	(account madeOf: anAccountToAdd) ifTrue: [^self error: self class cantAddAccountErrorDescripcion ] ifFalse: [account isSafeToAddAccount: anAccountToAdd]].]
	
	
	
	
	
	or: [self hasAsParent: anAccountToAdd] or: [self isAccountPresentInAParent: anAccountToAdd]
	
	
	
	
! !
!Portfolio methodsFor: 'accessing' stamp: 'G. B. 11/8/2020 16:51:58' prior: 50937135!
madeOf: anAccountToAdd.

	^ (self = anAccountToAdd) or: [
	
	accounts anySatisfy: [:account | account madeOf: anAccountToAdd]]

	
	or: [self hasAsParent: anAccountToAdd] or: [self isAccountPresentInAParent: anAccountToAdd]
	
	
	
	
! !

!testRun: #PortfolioTest #test01APortfolioHaveZeroAsBalanceWhenCreated stamp: 'G. B. 11/8/2020 16:51:59'!
PASSED!

!testRun: #PortfolioTest #test02APortfolioWithOnePortfolioWithNonZeroBalanceHasTheBalanceOfTheAccount stamp: 'G. B. 11/8/2020 16:51:59'!
PASSED!

!testRun: #PortfolioTest #test03APortfolioWithManyAccountWithNonZeroBalanceHasTheSumOfBalance stamp: 'G. B. 11/8/2020 16:51:59'!
ERROR!

!testRun: #PortfolioTest #test04AnEmptyPortfolioDontKnowAnyTransaction stamp: 'G. B. 11/8/2020 16:51:59'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioKnowsRegisteredTransactions stamp: 'G. B. 11/8/2020 16:51:59'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioWithManyAccountsKnowsRegisteredTransactions stamp: 'G. B. 11/8/2020 16:51:59'!
ERROR!

!testRun: #PortfolioTest #test07AnEmptyPortfolioHasZeroTransaction stamp: 'G. B. 11/8/2020 16:51:59'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioWithOneAccountKnewTheAccountTransactions stamp: 'G. B. 11/8/2020 16:51:59'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithManyAccountsKnowsTheAccountsTransactions stamp: 'G. B. 11/8/2020 16:51:59'!
ERROR!

!testRun: #PortfolioTest #test10shouldRaiseErrorIfAPortfolioTriesToAddAPortfolio2Times stamp: 'G. B. 11/8/2020 16:51:59'!
PASSED!

!testRun: #PortfolioTest #test10shouldRaiseErrorIfAPortfolioTriesToAddItself stamp: 'G. B. 11/8/2020 16:51:59'!
PASSED!

!testRun: #PortfolioTest #test11shouldRaiseErrorIfAPortfolioTriesToAddAParentPortfolio stamp: 'G. B. 11/8/2020 16:51:59'!
PASSED!

!testRun: #PortfolioTest #test12shouldRaiseErrorIfAPortfolioTriesToAddAParentOfAParentPortfolio stamp: 'G. B. 11/8/2020 16:51:59'!
PASSED!

!testRun: #PortfolioTest #test13shouldRaiseErrorIfAPortfolioTriesToAddAnAlreadyPresentAccount stamp: 'G. B. 11/8/2020 16:51:59'!
PASSED!

!testRun: #PortfolioTest #test14shouldRaiseErrorIfAPortfolioTriesToAnAccountPresentInAParent stamp: 'G. B. 11/8/2020 16:51:59'!
PASSED!

!testRun: #PortfolioTest #test15shouldRaiseErrorIfAPortfolioTriesToAddAPortfolioWithAnAccountPresentOnItsTree stamp: 'G. B. 11/8/2020 16:51:59'!
PASSED!
!ReceptiveAccount methodsFor: 'transactions' stamp: 'G. B. 11/8/2020 16:53:15' prior: 50936589!
madeOf: anAccountToAdd.

	^ (self = anAccountToAdd).
	! !

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'G. B. 11/8/2020 16:53:16'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'G. B. 11/8/2020 16:53:16'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'G. B. 11/8/2020 16:53:16'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'G. B. 11/8/2020 16:53:16'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'G. B. 11/8/2020 16:53:16'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'G. B. 11/8/2020 16:53:16'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'G. B. 11/8/2020 16:53:16'!
PASSED!
!Portfolio methodsFor: 'accessing' stamp: 'G. B. 11/8/2020 16:54:07' prior: 50937149!
madeOf: anAccountToAdd.

	^ (self = anAccountToAdd) or: [
	
	accounts anySatisfy: [:account | (account madeOf: anAccountToAdd) or: [anAccountToAdd madeOf: account]]]

	
	or: [self hasAsParent: anAccountToAdd] or: [self isAccountPresentInAParent: anAccountToAdd]
	
	
	
	
! !

!testRun: #PortfolioTest #test01APortfolioHaveZeroAsBalanceWhenCreated stamp: 'G. B. 11/8/2020 16:54:08'!
PASSED!

!testRun: #PortfolioTest #test02APortfolioWithOnePortfolioWithNonZeroBalanceHasTheBalanceOfTheAccount stamp: 'G. B. 11/8/2020 16:54:08'!
PASSED!

!testRun: #PortfolioTest #test03APortfolioWithManyAccountWithNonZeroBalanceHasTheSumOfBalance stamp: 'G. B. 11/8/2020 16:54:08'!
PASSED!

!testRun: #PortfolioTest #test04AnEmptyPortfolioDontKnowAnyTransaction stamp: 'G. B. 11/8/2020 16:54:08'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioKnowsRegisteredTransactions stamp: 'G. B. 11/8/2020 16:54:08'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioWithManyAccountsKnowsRegisteredTransactions stamp: 'G. B. 11/8/2020 16:54:08'!
PASSED!

!testRun: #PortfolioTest #test07AnEmptyPortfolioHasZeroTransaction stamp: 'G. B. 11/8/2020 16:54:08'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioWithOneAccountKnewTheAccountTransactions stamp: 'G. B. 11/8/2020 16:54:08'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithManyAccountsKnowsTheAccountsTransactions stamp: 'G. B. 11/8/2020 16:54:08'!
PASSED!

!testRun: #PortfolioTest #test10shouldRaiseErrorIfAPortfolioTriesToAddAPortfolio2Times stamp: 'G. B. 11/8/2020 16:54:08'!
PASSED!

!testRun: #PortfolioTest #test10shouldRaiseErrorIfAPortfolioTriesToAddItself stamp: 'G. B. 11/8/2020 16:54:08'!
PASSED!

!testRun: #PortfolioTest #test11shouldRaiseErrorIfAPortfolioTriesToAddAParentPortfolio stamp: 'G. B. 11/8/2020 16:54:08'!
PASSED!

!testRun: #PortfolioTest #test12shouldRaiseErrorIfAPortfolioTriesToAddAParentOfAParentPortfolio stamp: 'G. B. 11/8/2020 16:54:08'!
PASSED!

!testRun: #PortfolioTest #test13shouldRaiseErrorIfAPortfolioTriesToAddAnAlreadyPresentAccount stamp: 'G. B. 11/8/2020 16:54:08'!
PASSED!

!testRun: #PortfolioTest #test14shouldRaiseErrorIfAPortfolioTriesToAnAccountPresentInAParent stamp: 'G. B. 11/8/2020 16:54:08'!
PASSED!

!testRun: #PortfolioTest #test15shouldRaiseErrorIfAPortfolioTriesToAddAPortfolioWithAnAccountPresentOnItsTree stamp: 'G. B. 11/8/2020 16:54:08'!
PASSED!
!Portfolio methodsFor: 'accessing' stamp: 'G. B. 11/8/2020 16:54:34' prior: 50937121!
isSafeToAddAccount: anAccountToAdd.

	(self madeOf: anAccountToAdd) ifTrue: [^self error: self class cantAddAccountErrorDescripcion ].
		
	(anAccountToAdd class = Portfolio) ifTrue: [(self isAccountChildrenPresentInAParent: anAccountToAdd) ifTrue: [^self error: self class cantAddAccountErrorDescripcion].].

	
	^true.
	
	
	
	
	
! !
!Portfolio methodsFor: 'accessing' stamp: 'G. B. 11/8/2020 16:55:09' prior: 50937257!
madeOf: anAccountToAdd.

	^ (self = anAccountToAdd) or: [
	
	accounts anySatisfy: [:account | (account madeOf: anAccountToAdd) or: [anAccountToAdd madeOf: account]]]

	
	"or: [self hasAsParent: anAccountToAdd] or: [self isAccountPresentInAParent: anAccountToAdd]"
	
	
	
	
! !

!testRun: #PortfolioTest #test01APortfolioHaveZeroAsBalanceWhenCreated stamp: 'G. B. 11/8/2020 16:55:10'!
PASSED!

!testRun: #PortfolioTest #test02APortfolioWithOnePortfolioWithNonZeroBalanceHasTheBalanceOfTheAccount stamp: 'G. B. 11/8/2020 16:55:10'!
PASSED!

!testRun: #PortfolioTest #test03APortfolioWithManyAccountWithNonZeroBalanceHasTheSumOfBalance stamp: 'G. B. 11/8/2020 16:55:10'!
PASSED!

!testRun: #PortfolioTest #test04AnEmptyPortfolioDontKnowAnyTransaction stamp: 'G. B. 11/8/2020 16:55:10'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioKnowsRegisteredTransactions stamp: 'G. B. 11/8/2020 16:55:10'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioWithManyAccountsKnowsRegisteredTransactions stamp: 'G. B. 11/8/2020 16:55:10'!
PASSED!

!testRun: #PortfolioTest #test07AnEmptyPortfolioHasZeroTransaction stamp: 'G. B. 11/8/2020 16:55:10'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioWithOneAccountKnewTheAccountTransactions stamp: 'G. B. 11/8/2020 16:55:10'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithManyAccountsKnowsTheAccountsTransactions stamp: 'G. B. 11/8/2020 16:55:10'!
PASSED!

!testRun: #PortfolioTest #test10shouldRaiseErrorIfAPortfolioTriesToAddAPortfolio2Times stamp: 'G. B. 11/8/2020 16:55:10'!
PASSED!

!testRun: #PortfolioTest #test10shouldRaiseErrorIfAPortfolioTriesToAddItself stamp: 'G. B. 11/8/2020 16:55:10'!
PASSED!

!testRun: #PortfolioTest #test11shouldRaiseErrorIfAPortfolioTriesToAddAParentPortfolio stamp: 'G. B. 11/8/2020 16:55:10'!
FAILURE!

!testRun: #PortfolioTest #test12shouldRaiseErrorIfAPortfolioTriesToAddAParentOfAParentPortfolio stamp: 'G. B. 11/8/2020 16:55:10'!
FAILURE!

!testRun: #PortfolioTest #test13shouldRaiseErrorIfAPortfolioTriesToAddAnAlreadyPresentAccount stamp: 'G. B. 11/8/2020 16:55:10'!
PASSED!

!testRun: #PortfolioTest #test14shouldRaiseErrorIfAPortfolioTriesToAnAccountPresentInAParent stamp: 'G. B. 11/8/2020 16:55:10'!
FAILURE!

!testRun: #PortfolioTest #test15shouldRaiseErrorIfAPortfolioTriesToAddAPortfolioWithAnAccountPresentOnItsTree stamp: 'G. B. 11/8/2020 16:55:10'!
PASSED!
!Portfolio methodsFor: 'accessing' stamp: 'G. B. 11/8/2020 16:55:34' prior: 50937348!
madeOf: anAccountToAdd.

	^ (self = anAccountToAdd) or: [
	
	accounts anySatisfy: [:account | (account madeOf: anAccountToAdd) or: [anAccountToAdd madeOf: account]]] 


	or: [self hasAsParent: anAccountToAdd] or: [self isAccountPresentInAParent: anAccountToAdd].
	
	
	
	
! !
!Portfolio methodsFor: 'accessing' stamp: 'G. B. 11/8/2020 16:57:30' prior: 50934538!
isAccountPresentInAParent: anAccountToAdd.

	parents do: [:aParent | ((aParent accounts) includes: anAccountToAdd) or: [^aParent isAccountPresentInAParent: anAccountToAdd]].

	^false.
	
	
! !

!testRun: #PortfolioTest #test01APortfolioHaveZeroAsBalanceWhenCreated stamp: 'G. B. 11/8/2020 16:57:30'!
PASSED!

!testRun: #PortfolioTest #test02APortfolioWithOnePortfolioWithNonZeroBalanceHasTheBalanceOfTheAccount stamp: 'G. B. 11/8/2020 16:57:30'!
PASSED!

!testRun: #PortfolioTest #test03APortfolioWithManyAccountWithNonZeroBalanceHasTheSumOfBalance stamp: 'G. B. 11/8/2020 16:57:30'!
PASSED!

!testRun: #PortfolioTest #test04AnEmptyPortfolioDontKnowAnyTransaction stamp: 'G. B. 11/8/2020 16:57:30'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioKnowsRegisteredTransactions stamp: 'G. B. 11/8/2020 16:57:30'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioWithManyAccountsKnowsRegisteredTransactions stamp: 'G. B. 11/8/2020 16:57:30'!
PASSED!

!testRun: #PortfolioTest #test07AnEmptyPortfolioHasZeroTransaction stamp: 'G. B. 11/8/2020 16:57:30'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioWithOneAccountKnewTheAccountTransactions stamp: 'G. B. 11/8/2020 16:57:30'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithManyAccountsKnowsTheAccountsTransactions stamp: 'G. B. 11/8/2020 16:57:30'!
PASSED!

!testRun: #PortfolioTest #test10shouldRaiseErrorIfAPortfolioTriesToAddAPortfolio2Times stamp: 'G. B. 11/8/2020 16:57:31'!
PASSED!

!testRun: #PortfolioTest #test10shouldRaiseErrorIfAPortfolioTriesToAddItself stamp: 'G. B. 11/8/2020 16:57:31'!
PASSED!

!testRun: #PortfolioTest #test11shouldRaiseErrorIfAPortfolioTriesToAddAParentPortfolio stamp: 'G. B. 11/8/2020 16:57:31'!
PASSED!

!testRun: #PortfolioTest #test12shouldRaiseErrorIfAPortfolioTriesToAddAParentOfAParentPortfolio stamp: 'G. B. 11/8/2020 16:57:31'!
PASSED!

!testRun: #PortfolioTest #test13shouldRaiseErrorIfAPortfolioTriesToAddAnAlreadyPresentAccount stamp: 'G. B. 11/8/2020 16:57:31'!
PASSED!

!testRun: #PortfolioTest #test14shouldRaiseErrorIfAPortfolioTriesToAnAccountPresentInAParent stamp: 'G. B. 11/8/2020 16:57:31'!
FAILURE!

!testRun: #PortfolioTest #test15shouldRaiseErrorIfAPortfolioTriesToAddAPortfolioWithAnAccountPresentOnItsTree stamp: 'G. B. 11/8/2020 16:57:31'!
PASSED!

!testRun: #PortfolioTest #test14shouldRaiseErrorIfAPortfolioTriesToAnAccountPresentInAParent stamp: 'G. B. 11/8/2020 16:57:31'!
FAILURE!
!Portfolio methodsFor: 'accessing' stamp: 'G. B. 11/8/2020 16:58:52' prior: 50937437!
isAccountPresentInAParent: anAccountToAdd.

	parents do: [:aParent | (((aParent accounts) includes: anAccountToAdd) or: [^aParent isAccountPresentInAParent: anAccountToAdd]) ifTrue: [^true]  ].

	^false.
	
	
! !

!testRun: #PortfolioTest #test01APortfolioHaveZeroAsBalanceWhenCreated stamp: 'G. B. 11/8/2020 16:58:53'!
PASSED!

!testRun: #PortfolioTest #test02APortfolioWithOnePortfolioWithNonZeroBalanceHasTheBalanceOfTheAccount stamp: 'G. B. 11/8/2020 16:58:53'!
PASSED!

!testRun: #PortfolioTest #test03APortfolioWithManyAccountWithNonZeroBalanceHasTheSumOfBalance stamp: 'G. B. 11/8/2020 16:58:53'!
PASSED!

!testRun: #PortfolioTest #test04AnEmptyPortfolioDontKnowAnyTransaction stamp: 'G. B. 11/8/2020 16:58:53'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioKnowsRegisteredTransactions stamp: 'G. B. 11/8/2020 16:58:53'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioWithManyAccountsKnowsRegisteredTransactions stamp: 'G. B. 11/8/2020 16:58:53'!
PASSED!

!testRun: #PortfolioTest #test07AnEmptyPortfolioHasZeroTransaction stamp: 'G. B. 11/8/2020 16:58:53'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioWithOneAccountKnewTheAccountTransactions stamp: 'G. B. 11/8/2020 16:58:53'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithManyAccountsKnowsTheAccountsTransactions stamp: 'G. B. 11/8/2020 16:58:53'!
PASSED!

!testRun: #PortfolioTest #test10shouldRaiseErrorIfAPortfolioTriesToAddAPortfolio2Times stamp: 'G. B. 11/8/2020 16:58:53'!
PASSED!

!testRun: #PortfolioTest #test10shouldRaiseErrorIfAPortfolioTriesToAddItself stamp: 'G. B. 11/8/2020 16:58:53'!
PASSED!

!testRun: #PortfolioTest #test11shouldRaiseErrorIfAPortfolioTriesToAddAParentPortfolio stamp: 'G. B. 11/8/2020 16:58:53'!
PASSED!

!testRun: #PortfolioTest #test12shouldRaiseErrorIfAPortfolioTriesToAddAParentOfAParentPortfolio stamp: 'G. B. 11/8/2020 16:58:53'!
PASSED!

!testRun: #PortfolioTest #test13shouldRaiseErrorIfAPortfolioTriesToAddAnAlreadyPresentAccount stamp: 'G. B. 11/8/2020 16:58:53'!
PASSED!

!testRun: #PortfolioTest #test14shouldRaiseErrorIfAPortfolioTriesToAnAccountPresentInAParent stamp: 'G. B. 11/8/2020 16:58:53'!
PASSED!

!testRun: #PortfolioTest #test15shouldRaiseErrorIfAPortfolioTriesToAddAPortfolioWithAnAccountPresentOnItsTree stamp: 'G. B. 11/8/2020 16:58:53'!
PASSED!
!Portfolio methodsFor: 'accessing' stamp: 'G. B. 11/8/2020 17:00:00' prior: 50937334!
isSafeToAddAccount: anAccountToAdd.

	(self madeOf: anAccountToAdd) ifTrue: [^self error: self class cantAddAccountErrorDescripcion ].
		
	(self isAccountChildrenPresentInAParent: anAccountToAdd) ifTrue: [^self error: self class cantAddAccountErrorDescripcion].

	
	^true.
	
	
	
	
	
! !

!testRun: #PortfolioTest #test01APortfolioHaveZeroAsBalanceWhenCreated stamp: 'G. B. 11/8/2020 17:00:00'!
PASSED!

!testRun: #PortfolioTest #test02APortfolioWithOnePortfolioWithNonZeroBalanceHasTheBalanceOfTheAccount stamp: 'G. B. 11/8/2020 17:00:00'!
PASSED!

!testRun: #PortfolioTest #test03APortfolioWithManyAccountWithNonZeroBalanceHasTheSumOfBalance stamp: 'G. B. 11/8/2020 17:00:00'!
PASSED!

!testRun: #PortfolioTest #test04AnEmptyPortfolioDontKnowAnyTransaction stamp: 'G. B. 11/8/2020 17:00:00'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioKnowsRegisteredTransactions stamp: 'G. B. 11/8/2020 17:00:00'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioWithManyAccountsKnowsRegisteredTransactions stamp: 'G. B. 11/8/2020 17:00:00'!
PASSED!

!testRun: #PortfolioTest #test07AnEmptyPortfolioHasZeroTransaction stamp: 'G. B. 11/8/2020 17:00:00'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioWithOneAccountKnewTheAccountTransactions stamp: 'G. B. 11/8/2020 17:00:00'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithManyAccountsKnowsTheAccountsTransactions stamp: 'G. B. 11/8/2020 17:00:00'!
PASSED!

!testRun: #PortfolioTest #test10shouldRaiseErrorIfAPortfolioTriesToAddAPortfolio2Times stamp: 'G. B. 11/8/2020 17:00:00'!
PASSED!

!testRun: #PortfolioTest #test10shouldRaiseErrorIfAPortfolioTriesToAddItself stamp: 'G. B. 11/8/2020 17:00:00'!
PASSED!

!testRun: #PortfolioTest #test11shouldRaiseErrorIfAPortfolioTriesToAddAParentPortfolio stamp: 'G. B. 11/8/2020 17:00:00'!
PASSED!

!testRun: #PortfolioTest #test12shouldRaiseErrorIfAPortfolioTriesToAddAParentOfAParentPortfolio stamp: 'G. B. 11/8/2020 17:00:00'!
PASSED!

!testRun: #PortfolioTest #test13shouldRaiseErrorIfAPortfolioTriesToAddAnAlreadyPresentAccount stamp: 'G. B. 11/8/2020 17:00:00'!
PASSED!

!testRun: #PortfolioTest #test14shouldRaiseErrorIfAPortfolioTriesToAnAccountPresentInAParent stamp: 'G. B. 11/8/2020 17:00:00'!
PASSED!

!testRun: #PortfolioTest #test15shouldRaiseErrorIfAPortfolioTriesToAddAPortfolioWithAnAccountPresentOnItsTree stamp: 'G. B. 11/8/2020 17:00:00'!
PASSED!
!ReceptiveAccount methodsFor: 'transactions' stamp: 'G. B. 11/8/2020 17:03:18'!
addParent: anAccountToAdd	! !
!Portfolio methodsFor: 'initialize' stamp: 'G. B. 11/8/2020 17:03:34' prior: 50933932!
initializeWith: anAccount 
	parents := OrderedCollection new.

	accounts := OrderedCollection with: anAccount.
	
	anAccount addParent: self.! !

!testRun: #PortfolioTest #test01APortfolioHaveZeroAsBalanceWhenCreated stamp: 'G. B. 11/8/2020 17:03:37'!
PASSED!

!testRun: #PortfolioTest #test02APortfolioWithOnePortfolioWithNonZeroBalanceHasTheBalanceOfTheAccount stamp: 'G. B. 11/8/2020 17:03:37'!
PASSED!

!testRun: #PortfolioTest #test03APortfolioWithManyAccountWithNonZeroBalanceHasTheSumOfBalance stamp: 'G. B. 11/8/2020 17:03:37'!
PASSED!

!testRun: #PortfolioTest #test04AnEmptyPortfolioDontKnowAnyTransaction stamp: 'G. B. 11/8/2020 17:03:37'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioKnowsRegisteredTransactions stamp: 'G. B. 11/8/2020 17:03:37'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioWithManyAccountsKnowsRegisteredTransactions stamp: 'G. B. 11/8/2020 17:03:37'!
PASSED!

!testRun: #PortfolioTest #test07AnEmptyPortfolioHasZeroTransaction stamp: 'G. B. 11/8/2020 17:03:37'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioWithOneAccountKnewTheAccountTransactions stamp: 'G. B. 11/8/2020 17:03:37'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithManyAccountsKnowsTheAccountsTransactions stamp: 'G. B. 11/8/2020 17:03:37'!
PASSED!

!testRun: #PortfolioTest #test10shouldRaiseErrorIfAPortfolioTriesToAddAPortfolio2Times stamp: 'G. B. 11/8/2020 17:03:37'!
PASSED!

!testRun: #PortfolioTest #test10shouldRaiseErrorIfAPortfolioTriesToAddItself stamp: 'G. B. 11/8/2020 17:03:37'!
PASSED!

!testRun: #PortfolioTest #test11shouldRaiseErrorIfAPortfolioTriesToAddAParentPortfolio stamp: 'G. B. 11/8/2020 17:03:37'!
PASSED!

!testRun: #PortfolioTest #test12shouldRaiseErrorIfAPortfolioTriesToAddAParentOfAParentPortfolio stamp: 'G. B. 11/8/2020 17:03:37'!
PASSED!

!testRun: #PortfolioTest #test13shouldRaiseErrorIfAPortfolioTriesToAddAnAlreadyPresentAccount stamp: 'G. B. 11/8/2020 17:03:37'!
PASSED!

!testRun: #PortfolioTest #test14shouldRaiseErrorIfAPortfolioTriesToAnAccountPresentInAParent stamp: 'G. B. 11/8/2020 17:03:37'!
PASSED!

!testRun: #PortfolioTest #test15shouldRaiseErrorIfAPortfolioTriesToAddAPortfolioWithAnAccountPresentOnItsTree stamp: 'G. B. 11/8/2020 17:03:37'!
PASSED!

!testRun: #PortfolioTest #test01APortfolioHaveZeroAsBalanceWhenCreated stamp: 'G. B. 11/8/2020 17:03:41'!
PASSED!

!testRun: #PortfolioTest #test02APortfolioWithOnePortfolioWithNonZeroBalanceHasTheBalanceOfTheAccount stamp: 'G. B. 11/8/2020 17:03:41'!
PASSED!

!testRun: #PortfolioTest #test03APortfolioWithManyAccountWithNonZeroBalanceHasTheSumOfBalance stamp: 'G. B. 11/8/2020 17:03:41'!
PASSED!

!testRun: #PortfolioTest #test04AnEmptyPortfolioDontKnowAnyTransaction stamp: 'G. B. 11/8/2020 17:03:41'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioKnowsRegisteredTransactions stamp: 'G. B. 11/8/2020 17:03:41'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioWithManyAccountsKnowsRegisteredTransactions stamp: 'G. B. 11/8/2020 17:03:41'!
PASSED!

!testRun: #PortfolioTest #test07AnEmptyPortfolioHasZeroTransaction stamp: 'G. B. 11/8/2020 17:03:41'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioWithOneAccountKnewTheAccountTransactions stamp: 'G. B. 11/8/2020 17:03:41'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithManyAccountsKnowsTheAccountsTransactions stamp: 'G. B. 11/8/2020 17:03:41'!
PASSED!

!testRun: #PortfolioTest #test10shouldRaiseErrorIfAPortfolioTriesToAddAPortfolio2Times stamp: 'G. B. 11/8/2020 17:03:41'!
PASSED!

!testRun: #PortfolioTest #test10shouldRaiseErrorIfAPortfolioTriesToAddItself stamp: 'G. B. 11/8/2020 17:03:41'!
PASSED!

!testRun: #PortfolioTest #test11shouldRaiseErrorIfAPortfolioTriesToAddAParentPortfolio stamp: 'G. B. 11/8/2020 17:03:41'!
PASSED!

!testRun: #PortfolioTest #test12shouldRaiseErrorIfAPortfolioTriesToAddAParentOfAParentPortfolio stamp: 'G. B. 11/8/2020 17:03:41'!
PASSED!

!testRun: #PortfolioTest #test13shouldRaiseErrorIfAPortfolioTriesToAddAnAlreadyPresentAccount stamp: 'G. B. 11/8/2020 17:03:41'!
PASSED!

!testRun: #PortfolioTest #test14shouldRaiseErrorIfAPortfolioTriesToAnAccountPresentInAParent stamp: 'G. B. 11/8/2020 17:03:41'!
PASSED!

!testRun: #PortfolioTest #test15shouldRaiseErrorIfAPortfolioTriesToAddAPortfolioWithAnAccountPresentOnItsTree stamp: 'G. B. 11/8/2020 17:03:41'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'G. B. 11/8/2020 17:03:41'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'G. B. 11/8/2020 17:03:41'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'G. B. 11/8/2020 17:03:41'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'G. B. 11/8/2020 17:03:41'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'G. B. 11/8/2020 17:03:41'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'G. B. 11/8/2020 17:03:41'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'G. B. 11/8/2020 17:03:41'!
PASSED!
!Portfolio methodsFor: 'accessing' stamp: 'G. B. 11/8/2020 17:03:59' prior: 50935529!
add: anAccountToAdd

	self isSafeToAddAccount: anAccountToAdd. 
		
	anAccountToAdd addParent: self.
	accounts add: anAccountToAdd. ! !
!Portfolio methodsFor: 'accessing' stamp: 'G. B. 11/8/2020 17:07:12' prior: 50934128!
hasAsParent: anAccountToAdd.

parents do: [:account | (account = anAccountToAdd or: [account hasAsParent: anAccountToAdd]) ifTrue: [^true] ].
	^false.! !

!testRun: #PortfolioTest #test01APortfolioHaveZeroAsBalanceWhenCreated stamp: 'G. B. 11/8/2020 17:07:13'!
PASSED!

!testRun: #PortfolioTest #test02APortfolioWithOnePortfolioWithNonZeroBalanceHasTheBalanceOfTheAccount stamp: 'G. B. 11/8/2020 17:07:13'!
PASSED!

!testRun: #PortfolioTest #test03APortfolioWithManyAccountWithNonZeroBalanceHasTheSumOfBalance stamp: 'G. B. 11/8/2020 17:07:13'!
PASSED!

!testRun: #PortfolioTest #test04AnEmptyPortfolioDontKnowAnyTransaction stamp: 'G. B. 11/8/2020 17:07:13'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioKnowsRegisteredTransactions stamp: 'G. B. 11/8/2020 17:07:13'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioWithManyAccountsKnowsRegisteredTransactions stamp: 'G. B. 11/8/2020 17:07:13'!
PASSED!

!testRun: #PortfolioTest #test07AnEmptyPortfolioHasZeroTransaction stamp: 'G. B. 11/8/2020 17:07:13'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioWithOneAccountKnewTheAccountTransactions stamp: 'G. B. 11/8/2020 17:07:13'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithManyAccountsKnowsTheAccountsTransactions stamp: 'G. B. 11/8/2020 17:07:13'!
PASSED!

!testRun: #PortfolioTest #test10shouldRaiseErrorIfAPortfolioTriesToAddAPortfolio2Times stamp: 'G. B. 11/8/2020 17:07:13'!
PASSED!

!testRun: #PortfolioTest #test10shouldRaiseErrorIfAPortfolioTriesToAddItself stamp: 'G. B. 11/8/2020 17:07:13'!
PASSED!

!testRun: #PortfolioTest #test11shouldRaiseErrorIfAPortfolioTriesToAddAParentPortfolio stamp: 'G. B. 11/8/2020 17:07:13'!
PASSED!

!testRun: #PortfolioTest #test12shouldRaiseErrorIfAPortfolioTriesToAddAParentOfAParentPortfolio stamp: 'G. B. 11/8/2020 17:07:13'!
PASSED!

!testRun: #PortfolioTest #test13shouldRaiseErrorIfAPortfolioTriesToAddAnAlreadyPresentAccount stamp: 'G. B. 11/8/2020 17:07:13'!
PASSED!

!testRun: #PortfolioTest #test14shouldRaiseErrorIfAPortfolioTriesToAnAccountPresentInAParent stamp: 'G. B. 11/8/2020 17:07:13'!
PASSED!

!testRun: #PortfolioTest #test15shouldRaiseErrorIfAPortfolioTriesToAddAPortfolioWithAnAccountPresentOnItsTree stamp: 'G. B. 11/8/2020 17:07:13'!
PASSED!

!testRun: #PortfolioTest #test01APortfolioHaveZeroAsBalanceWhenCreated stamp: 'G. B. 11/8/2020 17:07:18'!
PASSED!

!testRun: #PortfolioTest #test02APortfolioWithOnePortfolioWithNonZeroBalanceHasTheBalanceOfTheAccount stamp: 'G. B. 11/8/2020 17:07:18'!
PASSED!

!testRun: #PortfolioTest #test03APortfolioWithManyAccountWithNonZeroBalanceHasTheSumOfBalance stamp: 'G. B. 11/8/2020 17:07:18'!
PASSED!

!testRun: #PortfolioTest #test04AnEmptyPortfolioDontKnowAnyTransaction stamp: 'G. B. 11/8/2020 17:07:18'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioKnowsRegisteredTransactions stamp: 'G. B. 11/8/2020 17:07:18'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioWithManyAccountsKnowsRegisteredTransactions stamp: 'G. B. 11/8/2020 17:07:18'!
PASSED!

!testRun: #PortfolioTest #test07AnEmptyPortfolioHasZeroTransaction stamp: 'G. B. 11/8/2020 17:07:18'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioWithOneAccountKnewTheAccountTransactions stamp: 'G. B. 11/8/2020 17:07:18'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithManyAccountsKnowsTheAccountsTransactions stamp: 'G. B. 11/8/2020 17:07:18'!
PASSED!

!testRun: #PortfolioTest #test10shouldRaiseErrorIfAPortfolioTriesToAddAPortfolio2Times stamp: 'G. B. 11/8/2020 17:07:18'!
PASSED!

!testRun: #PortfolioTest #test10shouldRaiseErrorIfAPortfolioTriesToAddItself stamp: 'G. B. 11/8/2020 17:07:18'!
PASSED!

!testRun: #PortfolioTest #test11shouldRaiseErrorIfAPortfolioTriesToAddAParentPortfolio stamp: 'G. B. 11/8/2020 17:07:18'!
PASSED!

!testRun: #PortfolioTest #test12shouldRaiseErrorIfAPortfolioTriesToAddAParentOfAParentPortfolio stamp: 'G. B. 11/8/2020 17:07:18'!
PASSED!

!testRun: #PortfolioTest #test13shouldRaiseErrorIfAPortfolioTriesToAddAnAlreadyPresentAccount stamp: 'G. B. 11/8/2020 17:07:18'!
PASSED!

!testRun: #PortfolioTest #test14shouldRaiseErrorIfAPortfolioTriesToAnAccountPresentInAParent stamp: 'G. B. 11/8/2020 17:07:18'!
PASSED!

!testRun: #PortfolioTest #test15shouldRaiseErrorIfAPortfolioTriesToAddAPortfolioWithAnAccountPresentOnItsTree stamp: 'G. B. 11/8/2020 17:07:18'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'G. B. 11/8/2020 17:07:18'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'G. B. 11/8/2020 17:07:18'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'G. B. 11/8/2020 17:07:18'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'G. B. 11/8/2020 17:07:18'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'G. B. 11/8/2020 17:07:18'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'G. B. 11/8/2020 17:07:18'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'G. B. 11/8/2020 17:07:18'!
PASSED!
!Portfolio methodsFor: 'accessing' stamp: 'G. B. 11/8/2020 17:07:34' prior: 50937842!
hasAsParent: anAccountToAdd.

	parents do: [:account | (account = anAccountToAdd or: [account hasAsParent: anAccountToAdd]) ifTrue: [^true] ].
	^false.! !
!Portfolio methodsFor: 'accessing' stamp: 'G. B. 11/8/2020 17:07:47' prior: 50938007!
hasAsParent: anAccountToAdd.

	parents do: [:account | (account = anAccountToAdd or: [account hasAsParent: anAccountToAdd]) ifTrue: [^true] ].
	^false.! !
!Portfolio methodsFor: 'accessing' stamp: 'G. B. 11/8/2020 17:08:30' prior: 50937425!
madeOf: anAccountToAdd.

	^ (self = anAccountToAdd) or: [
	
	accounts anySatisfy: [:account | (account madeOf: anAccountToAdd) or: [anAccountToAdd madeOf: account]]] 


	or: [self hasAsParent: anAccountToAdd] 
	
	
	
! !

!testRun: #PortfolioTest #test01APortfolioHaveZeroAsBalanceWhenCreated stamp: 'G. B. 11/8/2020 17:08:30'!
PASSED!

!testRun: #PortfolioTest #test02APortfolioWithOnePortfolioWithNonZeroBalanceHasTheBalanceOfTheAccount stamp: 'G. B. 11/8/2020 17:08:30'!
PASSED!

!testRun: #PortfolioTest #test03APortfolioWithManyAccountWithNonZeroBalanceHasTheSumOfBalance stamp: 'G. B. 11/8/2020 17:08:30'!
PASSED!

!testRun: #PortfolioTest #test04AnEmptyPortfolioDontKnowAnyTransaction stamp: 'G. B. 11/8/2020 17:08:30'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioKnowsRegisteredTransactions stamp: 'G. B. 11/8/2020 17:08:30'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioWithManyAccountsKnowsRegisteredTransactions stamp: 'G. B. 11/8/2020 17:08:30'!
PASSED!

!testRun: #PortfolioTest #test07AnEmptyPortfolioHasZeroTransaction stamp: 'G. B. 11/8/2020 17:08:30'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioWithOneAccountKnewTheAccountTransactions stamp: 'G. B. 11/8/2020 17:08:30'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithManyAccountsKnowsTheAccountsTransactions stamp: 'G. B. 11/8/2020 17:08:30'!
PASSED!

!testRun: #PortfolioTest #test10shouldRaiseErrorIfAPortfolioTriesToAddAPortfolio2Times stamp: 'G. B. 11/8/2020 17:08:30'!
PASSED!

!testRun: #PortfolioTest #test10shouldRaiseErrorIfAPortfolioTriesToAddItself stamp: 'G. B. 11/8/2020 17:08:30'!
PASSED!

!testRun: #PortfolioTest #test11shouldRaiseErrorIfAPortfolioTriesToAddAParentPortfolio stamp: 'G. B. 11/8/2020 17:08:30'!
PASSED!

!testRun: #PortfolioTest #test12shouldRaiseErrorIfAPortfolioTriesToAddAParentOfAParentPortfolio stamp: 'G. B. 11/8/2020 17:08:30'!
PASSED!

!testRun: #PortfolioTest #test13shouldRaiseErrorIfAPortfolioTriesToAddAnAlreadyPresentAccount stamp: 'G. B. 11/8/2020 17:08:30'!
PASSED!

!testRun: #PortfolioTest #test14shouldRaiseErrorIfAPortfolioTriesToAnAccountPresentInAParent stamp: 'G. B. 11/8/2020 17:08:30'!
PASSED!

!testRun: #PortfolioTest #test15shouldRaiseErrorIfAPortfolioTriesToAddAPortfolioWithAnAccountPresentOnItsTree stamp: 'G. B. 11/8/2020 17:08:30'!
PASSED!

!testRun: #PortfolioTest #test01APortfolioHaveZeroAsBalanceWhenCreated stamp: 'G. B. 11/8/2020 17:08:34'!
PASSED!

!testRun: #PortfolioTest #test02APortfolioWithOnePortfolioWithNonZeroBalanceHasTheBalanceOfTheAccount stamp: 'G. B. 11/8/2020 17:08:34'!
PASSED!

!testRun: #PortfolioTest #test03APortfolioWithManyAccountWithNonZeroBalanceHasTheSumOfBalance stamp: 'G. B. 11/8/2020 17:08:34'!
PASSED!

!testRun: #PortfolioTest #test04AnEmptyPortfolioDontKnowAnyTransaction stamp: 'G. B. 11/8/2020 17:08:34'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioKnowsRegisteredTransactions stamp: 'G. B. 11/8/2020 17:08:34'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioWithManyAccountsKnowsRegisteredTransactions stamp: 'G. B. 11/8/2020 17:08:34'!
PASSED!

!testRun: #PortfolioTest #test07AnEmptyPortfolioHasZeroTransaction stamp: 'G. B. 11/8/2020 17:08:34'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioWithOneAccountKnewTheAccountTransactions stamp: 'G. B. 11/8/2020 17:08:34'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithManyAccountsKnowsTheAccountsTransactions stamp: 'G. B. 11/8/2020 17:08:34'!
PASSED!

!testRun: #PortfolioTest #test10shouldRaiseErrorIfAPortfolioTriesToAddAPortfolio2Times stamp: 'G. B. 11/8/2020 17:08:34'!
PASSED!

!testRun: #PortfolioTest #test10shouldRaiseErrorIfAPortfolioTriesToAddItself stamp: 'G. B. 11/8/2020 17:08:34'!
PASSED!

!testRun: #PortfolioTest #test11shouldRaiseErrorIfAPortfolioTriesToAddAParentPortfolio stamp: 'G. B. 11/8/2020 17:08:34'!
PASSED!

!testRun: #PortfolioTest #test12shouldRaiseErrorIfAPortfolioTriesToAddAParentOfAParentPortfolio stamp: 'G. B. 11/8/2020 17:08:34'!
PASSED!

!testRun: #PortfolioTest #test13shouldRaiseErrorIfAPortfolioTriesToAddAnAlreadyPresentAccount stamp: 'G. B. 11/8/2020 17:08:34'!
PASSED!

!testRun: #PortfolioTest #test14shouldRaiseErrorIfAPortfolioTriesToAnAccountPresentInAParent stamp: 'G. B. 11/8/2020 17:08:34'!
PASSED!

!testRun: #PortfolioTest #test15shouldRaiseErrorIfAPortfolioTriesToAddAPortfolioWithAnAccountPresentOnItsTree stamp: 'G. B. 11/8/2020 17:08:34'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'G. B. 11/8/2020 17:08:34'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'G. B. 11/8/2020 17:08:34'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'G. B. 11/8/2020 17:08:34'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'G. B. 11/8/2020 17:08:34'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'G. B. 11/8/2020 17:08:34'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'G. B. 11/8/2020 17:08:34'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'G. B. 11/8/2020 17:08:34'!
PASSED!
!Portfolio methodsFor: 'accessing' stamp: 'G. B. 11/8/2020 17:09:02' prior: 50938023!
madeOf: anAccountToAdd.

	^ (self = anAccountToAdd) or: [
	
	accounts anySatisfy: [:account | (account madeOf: anAccountToAdd) or: [anAccountToAdd madeOf: account]]] 


	or: [self hasAsParent: anAccountToAdd] or: [self isAccountPresentInAParent: anAccountToAdd].
	
	
	
! !

!testRun: #PortfolioTest #test01APortfolioHaveZeroAsBalanceWhenCreated stamp: 'G. B. 11/8/2020 17:09:03'!
PASSED!

!testRun: #PortfolioTest #test02APortfolioWithOnePortfolioWithNonZeroBalanceHasTheBalanceOfTheAccount stamp: 'G. B. 11/8/2020 17:09:03'!
PASSED!

!testRun: #PortfolioTest #test03APortfolioWithManyAccountWithNonZeroBalanceHasTheSumOfBalance stamp: 'G. B. 11/8/2020 17:09:03'!
PASSED!

!testRun: #PortfolioTest #test04AnEmptyPortfolioDontKnowAnyTransaction stamp: 'G. B. 11/8/2020 17:09:03'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioKnowsRegisteredTransactions stamp: 'G. B. 11/8/2020 17:09:03'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioWithManyAccountsKnowsRegisteredTransactions stamp: 'G. B. 11/8/2020 17:09:03'!
PASSED!

!testRun: #PortfolioTest #test07AnEmptyPortfolioHasZeroTransaction stamp: 'G. B. 11/8/2020 17:09:03'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioWithOneAccountKnewTheAccountTransactions stamp: 'G. B. 11/8/2020 17:09:03'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithManyAccountsKnowsTheAccountsTransactions stamp: 'G. B. 11/8/2020 17:09:03'!
PASSED!

!testRun: #PortfolioTest #test10shouldRaiseErrorIfAPortfolioTriesToAddAPortfolio2Times stamp: 'G. B. 11/8/2020 17:09:03'!
PASSED!

!testRun: #PortfolioTest #test10shouldRaiseErrorIfAPortfolioTriesToAddItself stamp: 'G. B. 11/8/2020 17:09:03'!
PASSED!

!testRun: #PortfolioTest #test11shouldRaiseErrorIfAPortfolioTriesToAddAParentPortfolio stamp: 'G. B. 11/8/2020 17:09:03'!
PASSED!

!testRun: #PortfolioTest #test12shouldRaiseErrorIfAPortfolioTriesToAddAParentOfAParentPortfolio stamp: 'G. B. 11/8/2020 17:09:03'!
PASSED!

!testRun: #PortfolioTest #test13shouldRaiseErrorIfAPortfolioTriesToAddAnAlreadyPresentAccount stamp: 'G. B. 11/8/2020 17:09:03'!
PASSED!

!testRun: #PortfolioTest #test14shouldRaiseErrorIfAPortfolioTriesToAnAccountPresentInAParent stamp: 'G. B. 11/8/2020 17:09:03'!
PASSED!

!testRun: #PortfolioTest #test15shouldRaiseErrorIfAPortfolioTriesToAddAPortfolioWithAnAccountPresentOnItsTree stamp: 'G. B. 11/8/2020 17:09:03'!
PASSED!
!Portfolio methodsFor: 'accessing' stamp: 'G. B. 11/8/2020 17:16:57' prior: 50937515!
isAccountPresentInAParent: anAccountToAdd.

	parents do: [:aParent | (((aParent accounts) includes: anAccountToAdd) or: [aParent isAccountPresentInAParent: anAccountToAdd]) ifTrue: [^true]  ].

	^false.
	
	
! !

!testRun: #PortfolioTest #test01APortfolioHaveZeroAsBalanceWhenCreated stamp: 'G. B. 11/8/2020 17:17:00'!
PASSED!

!testRun: #PortfolioTest #test02APortfolioWithOnePortfolioWithNonZeroBalanceHasTheBalanceOfTheAccount stamp: 'G. B. 11/8/2020 17:17:00'!
PASSED!

!testRun: #PortfolioTest #test03APortfolioWithManyAccountWithNonZeroBalanceHasTheSumOfBalance stamp: 'G. B. 11/8/2020 17:17:00'!
PASSED!

!testRun: #PortfolioTest #test04AnEmptyPortfolioDontKnowAnyTransaction stamp: 'G. B. 11/8/2020 17:17:00'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioKnowsRegisteredTransactions stamp: 'G. B. 11/8/2020 17:17:00'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioWithManyAccountsKnowsRegisteredTransactions stamp: 'G. B. 11/8/2020 17:17:00'!
PASSED!

!testRun: #PortfolioTest #test07AnEmptyPortfolioHasZeroTransaction stamp: 'G. B. 11/8/2020 17:17:00'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioWithOneAccountKnewTheAccountTransactions stamp: 'G. B. 11/8/2020 17:17:00'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithManyAccountsKnowsTheAccountsTransactions stamp: 'G. B. 11/8/2020 17:17:00'!
PASSED!

!testRun: #PortfolioTest #test10shouldRaiseErrorIfAPortfolioTriesToAddAPortfolio2Times stamp: 'G. B. 11/8/2020 17:17:00'!
PASSED!

!testRun: #PortfolioTest #test10shouldRaiseErrorIfAPortfolioTriesToAddItself stamp: 'G. B. 11/8/2020 17:17:00'!
PASSED!

!testRun: #PortfolioTest #test11shouldRaiseErrorIfAPortfolioTriesToAddAParentPortfolio stamp: 'G. B. 11/8/2020 17:17:00'!
PASSED!

!testRun: #PortfolioTest #test12shouldRaiseErrorIfAPortfolioTriesToAddAParentOfAParentPortfolio stamp: 'G. B. 11/8/2020 17:17:00'!
PASSED!

!testRun: #PortfolioTest #test13shouldRaiseErrorIfAPortfolioTriesToAddAnAlreadyPresentAccount stamp: 'G. B. 11/8/2020 17:17:00'!
PASSED!

!testRun: #PortfolioTest #test14shouldRaiseErrorIfAPortfolioTriesToAnAccountPresentInAParent stamp: 'G. B. 11/8/2020 17:17:00'!
PASSED!

!testRun: #PortfolioTest #test15shouldRaiseErrorIfAPortfolioTriesToAddAPortfolioWithAnAccountPresentOnItsTree stamp: 'G. B. 11/8/2020 17:17:00'!
PASSED!

!testRun: #PortfolioTest #test01APortfolioHaveZeroAsBalanceWhenCreated stamp: 'G. B. 11/8/2020 17:17:02'!
PASSED!

!testRun: #PortfolioTest #test02APortfolioWithOnePortfolioWithNonZeroBalanceHasTheBalanceOfTheAccount stamp: 'G. B. 11/8/2020 17:17:02'!
PASSED!

!testRun: #PortfolioTest #test03APortfolioWithManyAccountWithNonZeroBalanceHasTheSumOfBalance stamp: 'G. B. 11/8/2020 17:17:02'!
PASSED!

!testRun: #PortfolioTest #test04AnEmptyPortfolioDontKnowAnyTransaction stamp: 'G. B. 11/8/2020 17:17:02'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioKnowsRegisteredTransactions stamp: 'G. B. 11/8/2020 17:17:02'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioWithManyAccountsKnowsRegisteredTransactions stamp: 'G. B. 11/8/2020 17:17:02'!
PASSED!

!testRun: #PortfolioTest #test07AnEmptyPortfolioHasZeroTransaction stamp: 'G. B. 11/8/2020 17:17:02'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioWithOneAccountKnewTheAccountTransactions stamp: 'G. B. 11/8/2020 17:17:02'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithManyAccountsKnowsTheAccountsTransactions stamp: 'G. B. 11/8/2020 17:17:02'!
PASSED!

!testRun: #PortfolioTest #test10shouldRaiseErrorIfAPortfolioTriesToAddAPortfolio2Times stamp: 'G. B. 11/8/2020 17:17:02'!
PASSED!

!testRun: #PortfolioTest #test10shouldRaiseErrorIfAPortfolioTriesToAddItself stamp: 'G. B. 11/8/2020 17:17:02'!
PASSED!

!testRun: #PortfolioTest #test11shouldRaiseErrorIfAPortfolioTriesToAddAParentPortfolio stamp: 'G. B. 11/8/2020 17:17:02'!
PASSED!

!testRun: #PortfolioTest #test12shouldRaiseErrorIfAPortfolioTriesToAddAParentOfAParentPortfolio stamp: 'G. B. 11/8/2020 17:17:02'!
PASSED!

!testRun: #PortfolioTest #test13shouldRaiseErrorIfAPortfolioTriesToAddAnAlreadyPresentAccount stamp: 'G. B. 11/8/2020 17:17:02'!
PASSED!

!testRun: #PortfolioTest #test14shouldRaiseErrorIfAPortfolioTriesToAnAccountPresentInAParent stamp: 'G. B. 11/8/2020 17:17:02'!
PASSED!

!testRun: #PortfolioTest #test15shouldRaiseErrorIfAPortfolioTriesToAddAPortfolioWithAnAccountPresentOnItsTree stamp: 'G. B. 11/8/2020 17:17:02'!
PASSED!
!Portfolio methodsFor: 'accessing' stamp: 'G. B. 11/8/2020 17:18:38' prior: 50937590!
isSafeToAddAccount: anAccountToAdd.

	(self madeOf: anAccountToAdd) ifTrue: [^self error: self class cantAddAccountErrorDescripcion ].
	
	^true.
	
	
	
	
	
! !

!testRun: #PortfolioTest #test01APortfolioHaveZeroAsBalanceWhenCreated stamp: 'G. B. 11/8/2020 17:18:40'!
PASSED!

!testRun: #PortfolioTest #test02APortfolioWithOnePortfolioWithNonZeroBalanceHasTheBalanceOfTheAccount stamp: 'G. B. 11/8/2020 17:18:40'!
PASSED!

!testRun: #PortfolioTest #test03APortfolioWithManyAccountWithNonZeroBalanceHasTheSumOfBalance stamp: 'G. B. 11/8/2020 17:18:40'!
PASSED!

!testRun: #PortfolioTest #test04AnEmptyPortfolioDontKnowAnyTransaction stamp: 'G. B. 11/8/2020 17:18:40'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioKnowsRegisteredTransactions stamp: 'G. B. 11/8/2020 17:18:40'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioWithManyAccountsKnowsRegisteredTransactions stamp: 'G. B. 11/8/2020 17:18:40'!
PASSED!

!testRun: #PortfolioTest #test07AnEmptyPortfolioHasZeroTransaction stamp: 'G. B. 11/8/2020 17:18:40'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioWithOneAccountKnewTheAccountTransactions stamp: 'G. B. 11/8/2020 17:18:40'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithManyAccountsKnowsTheAccountsTransactions stamp: 'G. B. 11/8/2020 17:18:40'!
PASSED!

!testRun: #PortfolioTest #test10shouldRaiseErrorIfAPortfolioTriesToAddAPortfolio2Times stamp: 'G. B. 11/8/2020 17:18:40'!
PASSED!

!testRun: #PortfolioTest #test10shouldRaiseErrorIfAPortfolioTriesToAddItself stamp: 'G. B. 11/8/2020 17:18:40'!
PASSED!

!testRun: #PortfolioTest #test11shouldRaiseErrorIfAPortfolioTriesToAddAParentPortfolio stamp: 'G. B. 11/8/2020 17:18:40'!
PASSED!

!testRun: #PortfolioTest #test12shouldRaiseErrorIfAPortfolioTriesToAddAParentOfAParentPortfolio stamp: 'G. B. 11/8/2020 17:18:40'!
PASSED!

!testRun: #PortfolioTest #test13shouldRaiseErrorIfAPortfolioTriesToAddAnAlreadyPresentAccount stamp: 'G. B. 11/8/2020 17:18:40'!
PASSED!

!testRun: #PortfolioTest #test14shouldRaiseErrorIfAPortfolioTriesToAnAccountPresentInAParent stamp: 'G. B. 11/8/2020 17:18:40'!
PASSED!

!testRun: #PortfolioTest #test15shouldRaiseErrorIfAPortfolioTriesToAddAPortfolioWithAnAccountPresentOnItsTree stamp: 'G. B. 11/8/2020 17:18:40'!
PASSED!

!testRun: #PortfolioTest #test01APortfolioHaveZeroAsBalanceWhenCreated stamp: 'G. B. 11/8/2020 17:18:43'!
PASSED!

!testRun: #PortfolioTest #test02APortfolioWithOnePortfolioWithNonZeroBalanceHasTheBalanceOfTheAccount stamp: 'G. B. 11/8/2020 17:18:43'!
PASSED!

!testRun: #PortfolioTest #test03APortfolioWithManyAccountWithNonZeroBalanceHasTheSumOfBalance stamp: 'G. B. 11/8/2020 17:18:43'!
PASSED!

!testRun: #PortfolioTest #test04AnEmptyPortfolioDontKnowAnyTransaction stamp: 'G. B. 11/8/2020 17:18:43'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioKnowsRegisteredTransactions stamp: 'G. B. 11/8/2020 17:18:43'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioWithManyAccountsKnowsRegisteredTransactions stamp: 'G. B. 11/8/2020 17:18:43'!
PASSED!

!testRun: #PortfolioTest #test07AnEmptyPortfolioHasZeroTransaction stamp: 'G. B. 11/8/2020 17:18:43'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioWithOneAccountKnewTheAccountTransactions stamp: 'G. B. 11/8/2020 17:18:43'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithManyAccountsKnowsTheAccountsTransactions stamp: 'G. B. 11/8/2020 17:18:43'!
PASSED!

!testRun: #PortfolioTest #test10shouldRaiseErrorIfAPortfolioTriesToAddAPortfolio2Times stamp: 'G. B. 11/8/2020 17:18:43'!
PASSED!

!testRun: #PortfolioTest #test10shouldRaiseErrorIfAPortfolioTriesToAddItself stamp: 'G. B. 11/8/2020 17:18:43'!
PASSED!

!testRun: #PortfolioTest #test11shouldRaiseErrorIfAPortfolioTriesToAddAParentPortfolio stamp: 'G. B. 11/8/2020 17:18:43'!
PASSED!

!testRun: #PortfolioTest #test12shouldRaiseErrorIfAPortfolioTriesToAddAParentOfAParentPortfolio stamp: 'G. B. 11/8/2020 17:18:43'!
PASSED!

!testRun: #PortfolioTest #test13shouldRaiseErrorIfAPortfolioTriesToAddAnAlreadyPresentAccount stamp: 'G. B. 11/8/2020 17:18:43'!
PASSED!

!testRun: #PortfolioTest #test14shouldRaiseErrorIfAPortfolioTriesToAnAccountPresentInAParent stamp: 'G. B. 11/8/2020 17:18:43'!
PASSED!

!testRun: #PortfolioTest #test15shouldRaiseErrorIfAPortfolioTriesToAddAPortfolioWithAnAccountPresentOnItsTree stamp: 'G. B. 11/8/2020 17:18:43'!
PASSED!

!methodRemoval: Portfolio #isAccountChildrenPresentInAParent: stamp: 'G. B. 11/8/2020 17:18:50'!
isAccountChildrenPresentInAParent: anAccountToAdd.

	parents do: [:aParent | (((aParent accounts) includes: anAccountToAdd) or: [aParent isAccountPresentInAParent: anAccountToAdd]) ifTrue: [^true]  ].

	^false.
	
	
!

!testRun: #PortfolioTest #test01APortfolioHaveZeroAsBalanceWhenCreated stamp: 'G. B. 11/8/2020 17:18:52'!
PASSED!

!testRun: #PortfolioTest #test02APortfolioWithOnePortfolioWithNonZeroBalanceHasTheBalanceOfTheAccount stamp: 'G. B. 11/8/2020 17:18:52'!
PASSED!

!testRun: #PortfolioTest #test03APortfolioWithManyAccountWithNonZeroBalanceHasTheSumOfBalance stamp: 'G. B. 11/8/2020 17:18:52'!
PASSED!

!testRun: #PortfolioTest #test04AnEmptyPortfolioDontKnowAnyTransaction stamp: 'G. B. 11/8/2020 17:18:52'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioKnowsRegisteredTransactions stamp: 'G. B. 11/8/2020 17:18:52'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioWithManyAccountsKnowsRegisteredTransactions stamp: 'G. B. 11/8/2020 17:18:52'!
PASSED!

!testRun: #PortfolioTest #test07AnEmptyPortfolioHasZeroTransaction stamp: 'G. B. 11/8/2020 17:18:52'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioWithOneAccountKnewTheAccountTransactions stamp: 'G. B. 11/8/2020 17:18:52'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithManyAccountsKnowsTheAccountsTransactions stamp: 'G. B. 11/8/2020 17:18:52'!
PASSED!

!testRun: #PortfolioTest #test10shouldRaiseErrorIfAPortfolioTriesToAddAPortfolio2Times stamp: 'G. B. 11/8/2020 17:18:52'!
PASSED!

!testRun: #PortfolioTest #test10shouldRaiseErrorIfAPortfolioTriesToAddItself stamp: 'G. B. 11/8/2020 17:18:52'!
PASSED!

!testRun: #PortfolioTest #test11shouldRaiseErrorIfAPortfolioTriesToAddAParentPortfolio stamp: 'G. B. 11/8/2020 17:18:52'!
PASSED!

!testRun: #PortfolioTest #test12shouldRaiseErrorIfAPortfolioTriesToAddAParentOfAParentPortfolio stamp: 'G. B. 11/8/2020 17:18:52'!
PASSED!

!testRun: #PortfolioTest #test13shouldRaiseErrorIfAPortfolioTriesToAddAnAlreadyPresentAccount stamp: 'G. B. 11/8/2020 17:18:52'!
PASSED!

!testRun: #PortfolioTest #test14shouldRaiseErrorIfAPortfolioTriesToAnAccountPresentInAParent stamp: 'G. B. 11/8/2020 17:18:52'!
PASSED!

!testRun: #PortfolioTest #test15shouldRaiseErrorIfAPortfolioTriesToAddAPortfolioWithAnAccountPresentOnItsTree stamp: 'G. B. 11/8/2020 17:18:52'!
PASSED!
!Portfolio methodsFor: 'accessing' stamp: 'G. B. 11/8/2020 17:21:25' prior: 50938015!
hasAsParent: anAccountToAdd.

	parents anySatisfy: [:account | account = anAccountToAdd or: [account hasAsParent: anAccountToAdd]]! !

!testRun: #PortfolioTest #test01APortfolioHaveZeroAsBalanceWhenCreated stamp: 'G. B. 11/8/2020 17:21:25'!
PASSED!

!testRun: #PortfolioTest #test02APortfolioWithOnePortfolioWithNonZeroBalanceHasTheBalanceOfTheAccount stamp: 'G. B. 11/8/2020 17:21:25'!
PASSED!

!testRun: #PortfolioTest #test03APortfolioWithManyAccountWithNonZeroBalanceHasTheSumOfBalance stamp: 'G. B. 11/8/2020 17:21:25'!
ERROR!

!testRun: #PortfolioTest #test04AnEmptyPortfolioDontKnowAnyTransaction stamp: 'G. B. 11/8/2020 17:21:25'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioKnowsRegisteredTransactions stamp: 'G. B. 11/8/2020 17:21:25'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioWithManyAccountsKnowsRegisteredTransactions stamp: 'G. B. 11/8/2020 17:21:25'!
ERROR!

!testRun: #PortfolioTest #test07AnEmptyPortfolioHasZeroTransaction stamp: 'G. B. 11/8/2020 17:21:25'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioWithOneAccountKnewTheAccountTransactions stamp: 'G. B. 11/8/2020 17:21:25'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithManyAccountsKnowsTheAccountsTransactions stamp: 'G. B. 11/8/2020 17:21:25'!
ERROR!

!testRun: #PortfolioTest #test10shouldRaiseErrorIfAPortfolioTriesToAddAPortfolio2Times stamp: 'G. B. 11/8/2020 17:21:25'!
PASSED!

!testRun: #PortfolioTest #test10shouldRaiseErrorIfAPortfolioTriesToAddItself stamp: 'G. B. 11/8/2020 17:21:25'!
PASSED!

!testRun: #PortfolioTest #test11shouldRaiseErrorIfAPortfolioTriesToAddAParentPortfolio stamp: 'G. B. 11/8/2020 17:21:25'!
FAILURE!

!testRun: #PortfolioTest #test12shouldRaiseErrorIfAPortfolioTriesToAddAParentOfAParentPortfolio stamp: 'G. B. 11/8/2020 17:21:25'!
ERROR!

!testRun: #PortfolioTest #test13shouldRaiseErrorIfAPortfolioTriesToAddAnAlreadyPresentAccount stamp: 'G. B. 11/8/2020 17:21:25'!
PASSED!

!testRun: #PortfolioTest #test14shouldRaiseErrorIfAPortfolioTriesToAnAccountPresentInAParent stamp: 'G. B. 11/8/2020 17:21:25'!
ERROR!

!testRun: #PortfolioTest #test15shouldRaiseErrorIfAPortfolioTriesToAddAPortfolioWithAnAccountPresentOnItsTree stamp: 'G. B. 11/8/2020 17:21:25'!
PASSED!
!Portfolio methodsFor: 'accessing' stamp: 'G. B. 11/8/2020 17:22:15' prior: 50938619!
hasAsParent: anAccountToAdd.

	parents anySatisfy: [:account | account = anAccountToAdd or: [^account hasAsParent: anAccountToAdd]]! !

!testRun: #PortfolioTest #test01APortfolioHaveZeroAsBalanceWhenCreated stamp: 'G. B. 11/8/2020 17:22:16'!
PASSED!

!testRun: #PortfolioTest #test02APortfolioWithOnePortfolioWithNonZeroBalanceHasTheBalanceOfTheAccount stamp: 'G. B. 11/8/2020 17:22:16'!
PASSED!

!testRun: #PortfolioTest #test03APortfolioWithManyAccountWithNonZeroBalanceHasTheSumOfBalance stamp: 'G. B. 11/8/2020 17:22:16'!
ERROR!

!testRun: #PortfolioTest #test04AnEmptyPortfolioDontKnowAnyTransaction stamp: 'G. B. 11/8/2020 17:22:16'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioKnowsRegisteredTransactions stamp: 'G. B. 11/8/2020 17:22:16'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioWithManyAccountsKnowsRegisteredTransactions stamp: 'G. B. 11/8/2020 17:22:16'!
ERROR!

!testRun: #PortfolioTest #test07AnEmptyPortfolioHasZeroTransaction stamp: 'G. B. 11/8/2020 17:22:16'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioWithOneAccountKnewTheAccountTransactions stamp: 'G. B. 11/8/2020 17:22:16'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithManyAccountsKnowsTheAccountsTransactions stamp: 'G. B. 11/8/2020 17:22:16'!
ERROR!

!testRun: #PortfolioTest #test10shouldRaiseErrorIfAPortfolioTriesToAddAPortfolio2Times stamp: 'G. B. 11/8/2020 17:22:16'!
PASSED!

!testRun: #PortfolioTest #test10shouldRaiseErrorIfAPortfolioTriesToAddItself stamp: 'G. B. 11/8/2020 17:22:16'!
PASSED!

!testRun: #PortfolioTest #test11shouldRaiseErrorIfAPortfolioTriesToAddAParentPortfolio stamp: 'G. B. 11/8/2020 17:22:16'!
FAILURE!

!testRun: #PortfolioTest #test12shouldRaiseErrorIfAPortfolioTriesToAddAParentOfAParentPortfolio stamp: 'G. B. 11/8/2020 17:22:16'!
ERROR!

!testRun: #PortfolioTest #test13shouldRaiseErrorIfAPortfolioTriesToAddAnAlreadyPresentAccount stamp: 'G. B. 11/8/2020 17:22:16'!
PASSED!

!testRun: #PortfolioTest #test14shouldRaiseErrorIfAPortfolioTriesToAnAccountPresentInAParent stamp: 'G. B. 11/8/2020 17:22:16'!
ERROR!

!testRun: #PortfolioTest #test15shouldRaiseErrorIfAPortfolioTriesToAddAPortfolioWithAnAccountPresentOnItsTree stamp: 'G. B. 11/8/2020 17:22:16'!
PASSED!
!Portfolio methodsFor: 'accessing' stamp: 'G. B. 11/8/2020 17:22:38' prior: 50938691!
hasAsParent: anAccountToAdd.

	parents do: [:account | (account = anAccountToAdd or: [account hasAsParent: anAccountToAdd]) ifTrue: [^true] ].
	^false.! !

!testRun: #PortfolioTest #test01APortfolioHaveZeroAsBalanceWhenCreated stamp: 'G. B. 11/8/2020 17:22:39'!
PASSED!

!testRun: #PortfolioTest #test02APortfolioWithOnePortfolioWithNonZeroBalanceHasTheBalanceOfTheAccount stamp: 'G. B. 11/8/2020 17:22:39'!
PASSED!

!testRun: #PortfolioTest #test03APortfolioWithManyAccountWithNonZeroBalanceHasTheSumOfBalance stamp: 'G. B. 11/8/2020 17:22:39'!
PASSED!

!testRun: #PortfolioTest #test04AnEmptyPortfolioDontKnowAnyTransaction stamp: 'G. B. 11/8/2020 17:22:39'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioKnowsRegisteredTransactions stamp: 'G. B. 11/8/2020 17:22:39'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioWithManyAccountsKnowsRegisteredTransactions stamp: 'G. B. 11/8/2020 17:22:39'!
PASSED!

!testRun: #PortfolioTest #test07AnEmptyPortfolioHasZeroTransaction stamp: 'G. B. 11/8/2020 17:22:39'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioWithOneAccountKnewTheAccountTransactions stamp: 'G. B. 11/8/2020 17:22:39'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithManyAccountsKnowsTheAccountsTransactions stamp: 'G. B. 11/8/2020 17:22:39'!
PASSED!

!testRun: #PortfolioTest #test10shouldRaiseErrorIfAPortfolioTriesToAddAPortfolio2Times stamp: 'G. B. 11/8/2020 17:22:39'!
PASSED!

!testRun: #PortfolioTest #test10shouldRaiseErrorIfAPortfolioTriesToAddItself stamp: 'G. B. 11/8/2020 17:22:39'!
PASSED!

!testRun: #PortfolioTest #test11shouldRaiseErrorIfAPortfolioTriesToAddAParentPortfolio stamp: 'G. B. 11/8/2020 17:22:39'!
PASSED!

!testRun: #PortfolioTest #test12shouldRaiseErrorIfAPortfolioTriesToAddAParentOfAParentPortfolio stamp: 'G. B. 11/8/2020 17:22:39'!
PASSED!

!testRun: #PortfolioTest #test13shouldRaiseErrorIfAPortfolioTriesToAddAnAlreadyPresentAccount stamp: 'G. B. 11/8/2020 17:22:39'!
PASSED!

!testRun: #PortfolioTest #test14shouldRaiseErrorIfAPortfolioTriesToAnAccountPresentInAParent stamp: 'G. B. 11/8/2020 17:22:39'!
PASSED!

!testRun: #PortfolioTest #test15shouldRaiseErrorIfAPortfolioTriesToAddAPortfolioWithAnAccountPresentOnItsTree stamp: 'G. B. 11/8/2020 17:22:39'!
PASSED!
!Portfolio methodsFor: 'accessing' stamp: 'G. B. 11/8/2020 17:24:44' prior: 50938763!
hasAsParent: anAccountToAdd.

	parents anySatisfy: [:account | account = anAccountToAdd or: [account hasAsParent: anAccountToAdd]]! !

!testRun: #PortfolioTest #test01APortfolioHaveZeroAsBalanceWhenCreated stamp: 'G. B. 11/8/2020 17:24:45'!
PASSED!

!testRun: #PortfolioTest #test02APortfolioWithOnePortfolioWithNonZeroBalanceHasTheBalanceOfTheAccount stamp: 'G. B. 11/8/2020 17:24:45'!
PASSED!

!testRun: #PortfolioTest #test03APortfolioWithManyAccountWithNonZeroBalanceHasTheSumOfBalance stamp: 'G. B. 11/8/2020 17:24:45'!
ERROR!

!testRun: #PortfolioTest #test04AnEmptyPortfolioDontKnowAnyTransaction stamp: 'G. B. 11/8/2020 17:24:45'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioKnowsRegisteredTransactions stamp: 'G. B. 11/8/2020 17:24:45'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioWithManyAccountsKnowsRegisteredTransactions stamp: 'G. B. 11/8/2020 17:24:45'!
ERROR!

!testRun: #PortfolioTest #test07AnEmptyPortfolioHasZeroTransaction stamp: 'G. B. 11/8/2020 17:24:45'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioWithOneAccountKnewTheAccountTransactions stamp: 'G. B. 11/8/2020 17:24:45'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithManyAccountsKnowsTheAccountsTransactions stamp: 'G. B. 11/8/2020 17:24:45'!
ERROR!

!testRun: #PortfolioTest #test10shouldRaiseErrorIfAPortfolioTriesToAddAPortfolio2Times stamp: 'G. B. 11/8/2020 17:24:45'!
PASSED!

!testRun: #PortfolioTest #test10shouldRaiseErrorIfAPortfolioTriesToAddItself stamp: 'G. B. 11/8/2020 17:24:45'!
PASSED!

!testRun: #PortfolioTest #test11shouldRaiseErrorIfAPortfolioTriesToAddAParentPortfolio stamp: 'G. B. 11/8/2020 17:24:45'!
FAILURE!

!testRun: #PortfolioTest #test12shouldRaiseErrorIfAPortfolioTriesToAddAParentOfAParentPortfolio stamp: 'G. B. 11/8/2020 17:24:45'!
ERROR!

!testRun: #PortfolioTest #test13shouldRaiseErrorIfAPortfolioTriesToAddAnAlreadyPresentAccount stamp: 'G. B. 11/8/2020 17:24:45'!
PASSED!

!testRun: #PortfolioTest #test14shouldRaiseErrorIfAPortfolioTriesToAnAccountPresentInAParent stamp: 'G. B. 11/8/2020 17:24:45'!
ERROR!

!testRun: #PortfolioTest #test15shouldRaiseErrorIfAPortfolioTriesToAddAPortfolioWithAnAccountPresentOnItsTree stamp: 'G. B. 11/8/2020 17:24:45'!
PASSED!

!testRun: #PortfolioTest #test03APortfolioWithManyAccountWithNonZeroBalanceHasTheSumOfBalance stamp: 'G. B. 11/8/2020 17:24:47'!
ERROR!
!Portfolio methodsFor: 'accessing' stamp: 'G. B. 11/8/2020 17:25:11' prior: 50938836!
hasAsParent: anAccountToAdd.

	^parents anySatisfy: [:account | account = anAccountToAdd or: [account hasAsParent: anAccountToAdd]]! !

!testRun: #PortfolioTest #test01APortfolioHaveZeroAsBalanceWhenCreated stamp: 'G. B. 11/8/2020 17:25:12'!
PASSED!

!testRun: #PortfolioTest #test02APortfolioWithOnePortfolioWithNonZeroBalanceHasTheBalanceOfTheAccount stamp: 'G. B. 11/8/2020 17:25:12'!
PASSED!

!testRun: #PortfolioTest #test03APortfolioWithManyAccountWithNonZeroBalanceHasTheSumOfBalance stamp: 'G. B. 11/8/2020 17:25:12'!
PASSED!

!testRun: #PortfolioTest #test04AnEmptyPortfolioDontKnowAnyTransaction stamp: 'G. B. 11/8/2020 17:25:12'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioKnowsRegisteredTransactions stamp: 'G. B. 11/8/2020 17:25:12'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioWithManyAccountsKnowsRegisteredTransactions stamp: 'G. B. 11/8/2020 17:25:12'!
PASSED!

!testRun: #PortfolioTest #test07AnEmptyPortfolioHasZeroTransaction stamp: 'G. B. 11/8/2020 17:25:12'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioWithOneAccountKnewTheAccountTransactions stamp: 'G. B. 11/8/2020 17:25:12'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithManyAccountsKnowsTheAccountsTransactions stamp: 'G. B. 11/8/2020 17:25:12'!
PASSED!

!testRun: #PortfolioTest #test10shouldRaiseErrorIfAPortfolioTriesToAddAPortfolio2Times stamp: 'G. B. 11/8/2020 17:25:12'!
PASSED!

!testRun: #PortfolioTest #test10shouldRaiseErrorIfAPortfolioTriesToAddItself stamp: 'G. B. 11/8/2020 17:25:12'!
PASSED!

!testRun: #PortfolioTest #test11shouldRaiseErrorIfAPortfolioTriesToAddAParentPortfolio stamp: 'G. B. 11/8/2020 17:25:12'!
PASSED!

!testRun: #PortfolioTest #test12shouldRaiseErrorIfAPortfolioTriesToAddAParentOfAParentPortfolio stamp: 'G. B. 11/8/2020 17:25:12'!
PASSED!

!testRun: #PortfolioTest #test13shouldRaiseErrorIfAPortfolioTriesToAddAnAlreadyPresentAccount stamp: 'G. B. 11/8/2020 17:25:12'!
PASSED!

!testRun: #PortfolioTest #test14shouldRaiseErrorIfAPortfolioTriesToAnAccountPresentInAParent stamp: 'G. B. 11/8/2020 17:25:12'!
PASSED!

!testRun: #PortfolioTest #test15shouldRaiseErrorIfAPortfolioTriesToAddAPortfolioWithAnAccountPresentOnItsTree stamp: 'G. B. 11/8/2020 17:25:12'!
PASSED!

!testRun: #PortfolioTest #test01APortfolioHaveZeroAsBalanceWhenCreated stamp: 'G. B. 11/8/2020 17:25:14'!
PASSED!

!testRun: #PortfolioTest #test02APortfolioWithOnePortfolioWithNonZeroBalanceHasTheBalanceOfTheAccount stamp: 'G. B. 11/8/2020 17:25:14'!
PASSED!

!testRun: #PortfolioTest #test03APortfolioWithManyAccountWithNonZeroBalanceHasTheSumOfBalance stamp: 'G. B. 11/8/2020 17:25:14'!
PASSED!

!testRun: #PortfolioTest #test04AnEmptyPortfolioDontKnowAnyTransaction stamp: 'G. B. 11/8/2020 17:25:14'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioKnowsRegisteredTransactions stamp: 'G. B. 11/8/2020 17:25:14'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioWithManyAccountsKnowsRegisteredTransactions stamp: 'G. B. 11/8/2020 17:25:14'!
PASSED!

!testRun: #PortfolioTest #test07AnEmptyPortfolioHasZeroTransaction stamp: 'G. B. 11/8/2020 17:25:14'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioWithOneAccountKnewTheAccountTransactions stamp: 'G. B. 11/8/2020 17:25:14'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithManyAccountsKnowsTheAccountsTransactions stamp: 'G. B. 11/8/2020 17:25:14'!
PASSED!

!testRun: #PortfolioTest #test10shouldRaiseErrorIfAPortfolioTriesToAddAPortfolio2Times stamp: 'G. B. 11/8/2020 17:25:14'!
PASSED!

!testRun: #PortfolioTest #test10shouldRaiseErrorIfAPortfolioTriesToAddItself stamp: 'G. B. 11/8/2020 17:25:14'!
PASSED!

!testRun: #PortfolioTest #test11shouldRaiseErrorIfAPortfolioTriesToAddAParentPortfolio stamp: 'G. B. 11/8/2020 17:25:14'!
PASSED!

!testRun: #PortfolioTest #test12shouldRaiseErrorIfAPortfolioTriesToAddAParentOfAParentPortfolio stamp: 'G. B. 11/8/2020 17:25:14'!
PASSED!

!testRun: #PortfolioTest #test13shouldRaiseErrorIfAPortfolioTriesToAddAnAlreadyPresentAccount stamp: 'G. B. 11/8/2020 17:25:14'!
PASSED!

!testRun: #PortfolioTest #test14shouldRaiseErrorIfAPortfolioTriesToAnAccountPresentInAParent stamp: 'G. B. 11/8/2020 17:25:14'!
PASSED!

!testRun: #PortfolioTest #test15shouldRaiseErrorIfAPortfolioTriesToAddAPortfolioWithAnAccountPresentOnItsTree stamp: 'G. B. 11/8/2020 17:25:14'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'G. B. 11/8/2020 17:25:14'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'G. B. 11/8/2020 17:25:14'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'G. B. 11/8/2020 17:25:14'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'G. B. 11/8/2020 17:25:14'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'G. B. 11/8/2020 17:25:14'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'G. B. 11/8/2020 17:25:14'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'G. B. 11/8/2020 17:25:14'!
PASSED!
!Portfolio methodsFor: 'accessing' stamp: 'G. B. 11/8/2020 17:26:33' prior: 50938267!
isAccountPresentInAParent: anAccountToAdd.

	^parents do: [:aParent | ((aParent accounts) includes: anAccountToAdd) or: [aParent isAccountPresentInAParent: anAccountToAdd] ].	
	
! !

!testRun: #PortfolioTest #test01APortfolioHaveZeroAsBalanceWhenCreated stamp: 'G. B. 11/8/2020 17:26:34'!
PASSED!

!testRun: #PortfolioTest #test02APortfolioWithOnePortfolioWithNonZeroBalanceHasTheBalanceOfTheAccount stamp: 'G. B. 11/8/2020 17:26:34'!
PASSED!

!testRun: #PortfolioTest #test03APortfolioWithManyAccountWithNonZeroBalanceHasTheSumOfBalance stamp: 'G. B. 11/8/2020 17:26:34'!
ERROR!

!testRun: #PortfolioTest #test04AnEmptyPortfolioDontKnowAnyTransaction stamp: 'G. B. 11/8/2020 17:26:34'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioKnowsRegisteredTransactions stamp: 'G. B. 11/8/2020 17:26:34'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioWithManyAccountsKnowsRegisteredTransactions stamp: 'G. B. 11/8/2020 17:26:34'!
ERROR!

!testRun: #PortfolioTest #test07AnEmptyPortfolioHasZeroTransaction stamp: 'G. B. 11/8/2020 17:26:34'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioWithOneAccountKnewTheAccountTransactions stamp: 'G. B. 11/8/2020 17:26:34'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithManyAccountsKnowsTheAccountsTransactions stamp: 'G. B. 11/8/2020 17:26:34'!
ERROR!

!testRun: #PortfolioTest #test10shouldRaiseErrorIfAPortfolioTriesToAddAPortfolio2Times stamp: 'G. B. 11/8/2020 17:26:34'!
PASSED!

!testRun: #PortfolioTest #test10shouldRaiseErrorIfAPortfolioTriesToAddItself stamp: 'G. B. 11/8/2020 17:26:34'!
PASSED!

!testRun: #PortfolioTest #test11shouldRaiseErrorIfAPortfolioTriesToAddAParentPortfolio stamp: 'G. B. 11/8/2020 17:26:34'!
PASSED!

!testRun: #PortfolioTest #test12shouldRaiseErrorIfAPortfolioTriesToAddAParentOfAParentPortfolio stamp: 'G. B. 11/8/2020 17:26:34'!
ERROR!

!testRun: #PortfolioTest #test13shouldRaiseErrorIfAPortfolioTriesToAddAnAlreadyPresentAccount stamp: 'G. B. 11/8/2020 17:26:34'!
PASSED!

!testRun: #PortfolioTest #test14shouldRaiseErrorIfAPortfolioTriesToAnAccountPresentInAParent stamp: 'G. B. 11/8/2020 17:26:34'!
ERROR!

!testRun: #PortfolioTest #test15shouldRaiseErrorIfAPortfolioTriesToAddAPortfolioWithAnAccountPresentOnItsTree stamp: 'G. B. 11/8/2020 17:26:34'!
PASSED!
!Portfolio methodsFor: 'accessing' stamp: 'G. B. 11/8/2020 17:26:46' prior: 50939076!
isAccountPresentInAParent: anAccountToAdd.

	^parents anySatisfy: [:aParent | ((aParent accounts) includes: anAccountToAdd) or: [aParent isAccountPresentInAParent: anAccountToAdd] ].	
	
! !

!testRun: #PortfolioTest #test01APortfolioHaveZeroAsBalanceWhenCreated stamp: 'G. B. 11/8/2020 17:26:47'!
PASSED!

!testRun: #PortfolioTest #test02APortfolioWithOnePortfolioWithNonZeroBalanceHasTheBalanceOfTheAccount stamp: 'G. B. 11/8/2020 17:26:47'!
PASSED!

!testRun: #PortfolioTest #test03APortfolioWithManyAccountWithNonZeroBalanceHasTheSumOfBalance stamp: 'G. B. 11/8/2020 17:26:47'!
PASSED!

!testRun: #PortfolioTest #test04AnEmptyPortfolioDontKnowAnyTransaction stamp: 'G. B. 11/8/2020 17:26:47'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioKnowsRegisteredTransactions stamp: 'G. B. 11/8/2020 17:26:47'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioWithManyAccountsKnowsRegisteredTransactions stamp: 'G. B. 11/8/2020 17:26:47'!
PASSED!

!testRun: #PortfolioTest #test07AnEmptyPortfolioHasZeroTransaction stamp: 'G. B. 11/8/2020 17:26:47'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioWithOneAccountKnewTheAccountTransactions stamp: 'G. B. 11/8/2020 17:26:47'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithManyAccountsKnowsTheAccountsTransactions stamp: 'G. B. 11/8/2020 17:26:47'!
PASSED!

!testRun: #PortfolioTest #test10shouldRaiseErrorIfAPortfolioTriesToAddAPortfolio2Times stamp: 'G. B. 11/8/2020 17:26:47'!
PASSED!

!testRun: #PortfolioTest #test10shouldRaiseErrorIfAPortfolioTriesToAddItself stamp: 'G. B. 11/8/2020 17:26:47'!
PASSED!

!testRun: #PortfolioTest #test11shouldRaiseErrorIfAPortfolioTriesToAddAParentPortfolio stamp: 'G. B. 11/8/2020 17:26:47'!
PASSED!

!testRun: #PortfolioTest #test12shouldRaiseErrorIfAPortfolioTriesToAddAParentOfAParentPortfolio stamp: 'G. B. 11/8/2020 17:26:47'!
PASSED!

!testRun: #PortfolioTest #test13shouldRaiseErrorIfAPortfolioTriesToAddAnAlreadyPresentAccount stamp: 'G. B. 11/8/2020 17:26:47'!
PASSED!

!testRun: #PortfolioTest #test14shouldRaiseErrorIfAPortfolioTriesToAnAccountPresentInAParent stamp: 'G. B. 11/8/2020 17:26:47'!
PASSED!

!testRun: #PortfolioTest #test15shouldRaiseErrorIfAPortfolioTriesToAddAPortfolioWithAnAccountPresentOnItsTree stamp: 'G. B. 11/8/2020 17:26:47'!
PASSED!

!testRun: #PortfolioTest #test01APortfolioHaveZeroAsBalanceWhenCreated stamp: 'G. B. 11/8/2020 17:26:49'!
PASSED!

!testRun: #PortfolioTest #test02APortfolioWithOnePortfolioWithNonZeroBalanceHasTheBalanceOfTheAccount stamp: 'G. B. 11/8/2020 17:26:49'!
PASSED!

!testRun: #PortfolioTest #test03APortfolioWithManyAccountWithNonZeroBalanceHasTheSumOfBalance stamp: 'G. B. 11/8/2020 17:26:49'!
PASSED!

!testRun: #PortfolioTest #test04AnEmptyPortfolioDontKnowAnyTransaction stamp: 'G. B. 11/8/2020 17:26:49'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioKnowsRegisteredTransactions stamp: 'G. B. 11/8/2020 17:26:49'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioWithManyAccountsKnowsRegisteredTransactions stamp: 'G. B. 11/8/2020 17:26:49'!
PASSED!

!testRun: #PortfolioTest #test07AnEmptyPortfolioHasZeroTransaction stamp: 'G. B. 11/8/2020 17:26:49'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioWithOneAccountKnewTheAccountTransactions stamp: 'G. B. 11/8/2020 17:26:49'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithManyAccountsKnowsTheAccountsTransactions stamp: 'G. B. 11/8/2020 17:26:49'!
PASSED!

!testRun: #PortfolioTest #test10shouldRaiseErrorIfAPortfolioTriesToAddAPortfolio2Times stamp: 'G. B. 11/8/2020 17:26:49'!
PASSED!

!testRun: #PortfolioTest #test10shouldRaiseErrorIfAPortfolioTriesToAddItself stamp: 'G. B. 11/8/2020 17:26:49'!
PASSED!

!testRun: #PortfolioTest #test11shouldRaiseErrorIfAPortfolioTriesToAddAParentPortfolio stamp: 'G. B. 11/8/2020 17:26:49'!
PASSED!

!testRun: #PortfolioTest #test12shouldRaiseErrorIfAPortfolioTriesToAddAParentOfAParentPortfolio stamp: 'G. B. 11/8/2020 17:26:49'!
PASSED!

!testRun: #PortfolioTest #test13shouldRaiseErrorIfAPortfolioTriesToAddAnAlreadyPresentAccount stamp: 'G. B. 11/8/2020 17:26:49'!
PASSED!

!testRun: #PortfolioTest #test14shouldRaiseErrorIfAPortfolioTriesToAnAccountPresentInAParent stamp: 'G. B. 11/8/2020 17:26:49'!
PASSED!

!testRun: #PortfolioTest #test15shouldRaiseErrorIfAPortfolioTriesToAddAPortfolioWithAnAccountPresentOnItsTree stamp: 'G. B. 11/8/2020 17:26:49'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'G. B. 11/8/2020 17:26:49'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'G. B. 11/8/2020 17:26:49'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'G. B. 11/8/2020 17:26:49'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'G. B. 11/8/2020 17:26:49'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'G. B. 11/8/2020 17:26:49'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'G. B. 11/8/2020 17:26:49'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'G. B. 11/8/2020 17:26:49'!
PASSED!
!Portfolio methodsFor: 'accessing' stamp: 'G. B. 11/8/2020 17:30:19' prior: 50937835!
add: anAccountToAdd

	self isSafeToAddAccount: anAccountToAdd. 
		
	anAccountToAdd addParent: self.
	accounts add: anAccountToAdd. ! !

!testRun: #PortfolioTest #test01APortfolioHaveZeroAsBalanceWhenCreated stamp: 'G. B. 11/8/2020 17:34:47'!
PASSED!

!testRun: #PortfolioTest #test02APortfolioWithOnePortfolioWithNonZeroBalanceHasTheBalanceOfTheAccount stamp: 'G. B. 11/8/2020 17:34:47'!
PASSED!

!testRun: #PortfolioTest #test03APortfolioWithManyAccountWithNonZeroBalanceHasTheSumOfBalance stamp: 'G. B. 11/8/2020 17:34:47'!
PASSED!

!testRun: #PortfolioTest #test04AnEmptyPortfolioDontKnowAnyTransaction stamp: 'G. B. 11/8/2020 17:34:47'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioKnowsRegisteredTransactions stamp: 'G. B. 11/8/2020 17:34:47'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioWithManyAccountsKnowsRegisteredTransactions stamp: 'G. B. 11/8/2020 17:34:47'!
PASSED!

!testRun: #PortfolioTest #test07AnEmptyPortfolioHasZeroTransaction stamp: 'G. B. 11/8/2020 17:34:47'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioWithOneAccountKnewTheAccountTransactions stamp: 'G. B. 11/8/2020 17:34:47'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithManyAccountsKnowsTheAccountsTransactions stamp: 'G. B. 11/8/2020 17:34:47'!
PASSED!

!testRun: #PortfolioTest #test10shouldRaiseErrorIfAPortfolioTriesToAddAPortfolio2Times stamp: 'G. B. 11/8/2020 17:34:47'!
PASSED!

!testRun: #PortfolioTest #test10shouldRaiseErrorIfAPortfolioTriesToAddItself stamp: 'G. B. 11/8/2020 17:34:47'!
PASSED!

!testRun: #PortfolioTest #test11shouldRaiseErrorIfAPortfolioTriesToAddAParentPortfolio stamp: 'G. B. 11/8/2020 17:34:47'!
PASSED!

!testRun: #PortfolioTest #test12shouldRaiseErrorIfAPortfolioTriesToAddAParentOfAParentPortfolio stamp: 'G. B. 11/8/2020 17:34:47'!
PASSED!

!testRun: #PortfolioTest #test13shouldRaiseErrorIfAPortfolioTriesToAddAnAlreadyPresentAccount stamp: 'G. B. 11/8/2020 17:34:47'!
PASSED!

!testRun: #PortfolioTest #test14shouldRaiseErrorIfAPortfolioTriesToAnAccountPresentInAParent stamp: 'G. B. 11/8/2020 17:34:47'!
PASSED!

!testRun: #PortfolioTest #test15shouldRaiseErrorIfAPortfolioTriesToAddAPortfolioWithAnAccountPresentOnItsTree stamp: 'G. B. 11/8/2020 17:34:47'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'G. B. 11/8/2020 17:34:47'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'G. B. 11/8/2020 17:34:47'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'G. B. 11/8/2020 17:34:47'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'G. B. 11/8/2020 17:34:47'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'G. B. 11/8/2020 17:34:47'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'G. B. 11/8/2020 17:34:47'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'G. B. 11/8/2020 17:34:47'!
PASSED!
!BankAccount methodsFor: 'nil' stamp: 'G. B. 11/8/2020 17:36:15'!
addParent
	self subclassResponsibility.! !
!BankAccount methodsFor: 'as yet unclassified' stamp: 'G. B. 11/8/2020 17:36:22'!
addParent: anAccount
	self subclassResponsibility.! !

!methodRemoval: BankAccount #addParent stamp: 'G. B. 11/8/2020 17:36:26'!
addParent
	self subclassResponsibility.!
!BankAccount methodsFor: 'as yet unclassified' stamp: 'G. B. 11/8/2020 17:37:32'!
balance
	self subclassResponsibility.! !
!BankAccount methodsFor: 'as yet unclassified' stamp: 'G. B. 11/8/2020 17:37:47'!
hasRegistered: anAccount
	self subclassResponsibility.! !
!BankAccount methodsFor: 'as yet unclassified' stamp: 'G. B. 11/8/2020 17:37:52' prior: 50939431!
hasRegistered: aTransaction
	self subclassResponsibility.! !
!BankAccount methodsFor: 'as yet unclassified' stamp: 'G. B. 11/8/2020 17:38:16'!
madeOf: aTransaction
	self subclassResponsibility.! !
!BankAccount methodsFor: 'as yet unclassified' stamp: 'G. B. 11/8/2020 17:38:23'!
transaction
	self subclassResponsibility.! !

!testRun: #PortfolioTest #test01APortfolioHaveZeroAsBalanceWhenCreated stamp: 'G. B. 11/8/2020 17:40:32'!
PASSED!

!testRun: #PortfolioTest #test02APortfolioWithOnePortfolioWithNonZeroBalanceHasTheBalanceOfTheAccount stamp: 'G. B. 11/8/2020 17:40:32'!
PASSED!

!testRun: #PortfolioTest #test03APortfolioWithManyAccountWithNonZeroBalanceHasTheSumOfBalance stamp: 'G. B. 11/8/2020 17:40:32'!
PASSED!

!testRun: #PortfolioTest #test04AnEmptyPortfolioDontKnowAnyTransaction stamp: 'G. B. 11/8/2020 17:40:32'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioKnowsRegisteredTransactions stamp: 'G. B. 11/8/2020 17:40:32'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioWithManyAccountsKnowsRegisteredTransactions stamp: 'G. B. 11/8/2020 17:40:32'!
PASSED!

!testRun: #PortfolioTest #test07AnEmptyPortfolioHasZeroTransaction stamp: 'G. B. 11/8/2020 17:40:32'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioWithOneAccountKnewTheAccountTransactions stamp: 'G. B. 11/8/2020 17:40:32'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithManyAccountsKnowsTheAccountsTransactions stamp: 'G. B. 11/8/2020 17:40:32'!
PASSED!

!testRun: #PortfolioTest #test10shouldRaiseErrorIfAPortfolioTriesToAddAPortfolio2Times stamp: 'G. B. 11/8/2020 17:40:32'!
PASSED!

!testRun: #PortfolioTest #test10shouldRaiseErrorIfAPortfolioTriesToAddItself stamp: 'G. B. 11/8/2020 17:40:32'!
PASSED!

!testRun: #PortfolioTest #test11shouldRaiseErrorIfAPortfolioTriesToAddAParentPortfolio stamp: 'G. B. 11/8/2020 17:40:32'!
PASSED!

!testRun: #PortfolioTest #test12shouldRaiseErrorIfAPortfolioTriesToAddAParentOfAParentPortfolio stamp: 'G. B. 11/8/2020 17:40:32'!
PASSED!

!testRun: #PortfolioTest #test13shouldRaiseErrorIfAPortfolioTriesToAddAnAlreadyPresentAccount stamp: 'G. B. 11/8/2020 17:40:32'!
PASSED!

!testRun: #PortfolioTest #test14shouldRaiseErrorIfAPortfolioTriesToAnAccountPresentInAParent stamp: 'G. B. 11/8/2020 17:40:32'!
PASSED!

!testRun: #PortfolioTest #test15shouldRaiseErrorIfAPortfolioTriesToAddAPortfolioWithAnAccountPresentOnItsTree stamp: 'G. B. 11/8/2020 17:40:32'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'G. B. 11/8/2020 17:40:32'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'G. B. 11/8/2020 17:40:32'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'G. B. 11/8/2020 17:40:32'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'G. B. 11/8/2020 17:40:32'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'G. B. 11/8/2020 17:40:32'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'G. B. 11/8/2020 17:40:32'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'G. B. 11/8/2020 17:40:32'!
PASSED!
!PortfolioTest methodsFor: 'test - add' stamp: 'G. B. 11/8/2020 17:42:32'!
test10shouldRaiseErrorIfAPortfolioTriesToAddAnAccount2Times

	|  portfolio2 portfolio1 |
	
	
	portfolio2 := Portfolio new. 
	portfolio1 := Portfolio with: portfolio2. 
	
	
	self
	should: [ portfolio1 add: portfolio2. ]
	raise: Error
	withMessageText: Portfolio cantAddAccountErrorDescripcion. 


	

	! !

!methodRemoval: PortfolioTest #test10shouldRaiseErrorIfAPortfolioTriesToAddAPortfolio2Times stamp: 'G. B. 11/8/2020 17:42:37'!
test10shouldRaiseErrorIfAPortfolioTriesToAddAPortfolio2Times

	|  portfolio2 portfolio1 |
	
	
	portfolio2 := Portfolio new. 
	portfolio1 := Portfolio with: portfolio2. 
	
	
	self
	should: [ portfolio1 add: portfolio2. ]
	raise: Error
	withMessageText: Portfolio cantAddAccountErrorDescripcion. 


	

	!
!PortfolioTest methodsFor: 'test - add' stamp: 'G. B. 11/8/2020 17:43:35'!
test14shouldRaiseErrorIfAPortfolioTriesToAddAnAccountPresentInAParent

	|  portfolio2 portfolio1 anAccount |
	
	anAccount := ReceptiveAccount new.
	Deposit register: 100 on: anAccount.
	Withdraw register: 50 on: anAccount. 
	
	portfolio2 := Portfolio new.
	portfolio1 := Portfolio with: portfolio2. 
	portfolio1 add: anAccount.
	
	self
	should: [ portfolio2 add: anAccount. ]
	raise: Error
	withMessageText: Portfolio cantAddAccountErrorDescripcion. 


	

	! !

!methodRemoval: PortfolioTest #test14shouldRaiseErrorIfAPortfolioTriesToAnAccountPresentInAParent stamp: 'G. B. 11/8/2020 17:43:35'!
test14shouldRaiseErrorIfAPortfolioTriesToAnAccountPresentInAParent

	|  portfolio2 portfolio1 anAccount |
	
	anAccount := ReceptiveAccount new.
	Deposit register: 100 on: anAccount.
	Withdraw register: 50 on: anAccount. 
	
	portfolio2 := Portfolio new.
	portfolio1 := Portfolio with: portfolio2. 
	portfolio1 add: anAccount.
	
	self
	should: [ portfolio2 add: anAccount. ]
	raise: Error
	withMessageText: Portfolio cantAddAccountErrorDescripcion. 


	

	!

!testRun: #PortfolioTest #test01APortfolioHaveZeroAsBalanceWhenCreated stamp: 'G. B. 11/8/2020 17:52:51'!
PASSED!

!testRun: #PortfolioTest #test02APortfolioWithOnePortfolioWithNonZeroBalanceHasTheBalanceOfTheAccount stamp: 'G. B. 11/8/2020 17:52:51'!
PASSED!

!testRun: #PortfolioTest #test03APortfolioWithManyAccountWithNonZeroBalanceHasTheSumOfBalance stamp: 'G. B. 11/8/2020 17:52:51'!
PASSED!

!testRun: #PortfolioTest #test04AnEmptyPortfolioDontKnowAnyTransaction stamp: 'G. B. 11/8/2020 17:52:51'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioKnowsRegisteredTransactions stamp: 'G. B. 11/8/2020 17:52:51'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioWithManyAccountsKnowsRegisteredTransactions stamp: 'G. B. 11/8/2020 17:52:51'!
PASSED!

!testRun: #PortfolioTest #test07AnEmptyPortfolioHasZeroTransaction stamp: 'G. B. 11/8/2020 17:52:51'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioWithOneAccountKnewTheAccountTransactions stamp: 'G. B. 11/8/2020 17:52:51'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithManyAccountsKnowsTheAccountsTransactions stamp: 'G. B. 11/8/2020 17:52:51'!
PASSED!

!testRun: #PortfolioTest #test10shouldRaiseErrorIfAPortfolioTriesToAddAnAccount2Times stamp: 'G. B. 11/8/2020 17:52:51'!
PASSED!

!testRun: #PortfolioTest #test10shouldRaiseErrorIfAPortfolioTriesToAddItself stamp: 'G. B. 11/8/2020 17:52:51'!
PASSED!

!testRun: #PortfolioTest #test11shouldRaiseErrorIfAPortfolioTriesToAddAParentPortfolio stamp: 'G. B. 11/8/2020 17:52:51'!
PASSED!

!testRun: #PortfolioTest #test12shouldRaiseErrorIfAPortfolioTriesToAddAParentOfAParentPortfolio stamp: 'G. B. 11/8/2020 17:52:51'!
PASSED!

!testRun: #PortfolioTest #test13shouldRaiseErrorIfAPortfolioTriesToAddAnAlreadyPresentAccount stamp: 'G. B. 11/8/2020 17:52:51'!
PASSED!

!testRun: #PortfolioTest #test14shouldRaiseErrorIfAPortfolioTriesToAddAnAccountPresentInAParent stamp: 'G. B. 11/8/2020 17:52:51'!
PASSED!

!testRun: #PortfolioTest #test15shouldRaiseErrorIfAPortfolioTriesToAddAPortfolioWithAnAccountPresentOnItsTree stamp: 'G. B. 11/8/2020 17:52:51'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'G. B. 11/8/2020 17:52:51'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'G. B. 11/8/2020 17:52:51'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'G. B. 11/8/2020 17:52:51'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'G. B. 11/8/2020 17:52:51'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'G. B. 11/8/2020 17:52:51'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'G. B. 11/8/2020 17:52:51'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'G. B. 11/8/2020 17:52:51'!
PASSED!