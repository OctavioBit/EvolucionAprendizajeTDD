

----STARTUP---- (2 November 2020 19:19:54) as /home/nahuel/Documents/cuisuniversity/CuisUniversity-4384.image!


----End fileIn of /home/nahuel/git/2020-2c/18-Portfolio1/Portfolio-Ejercicio.st----!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'NNH 11/2/2020 19:21:32'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'NNH 11/2/2020 19:21:32'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'NNH 11/2/2020 19:21:32'!
FAILURE!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'NNH 11/2/2020 19:21:32'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'NNH 11/2/2020 19:21:32'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'NNH 11/2/2020 19:21:32'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'NNH 11/2/2020 19:21:32'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'NNH 11/2/2020 19:21:32'!
FAILURE!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'NNH 11/2/2020 19:22:04'!
FAILURE!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'NNH 11/2/2020 19:22:04'!
FAILURE!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'NNH 11/2/2020 19:23:15'!
FAILURE!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'NNH 11/2/2020 19:23:15'!
FAILURE!
!ReceptiveAccount methodsFor: 'balance' stamp: 'NNH 11/2/2020 19:26:51' prior: 50867981!
balance

	^ transactions sum: [ :aTransaction | (aTransaction isKindOf: Deposit) ifTrue: [aTransaction value] ifFalse: [aTransaction value * -1 ]] ifEmpty: [ 0 ]
! !

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'NNH 11/2/2020 19:26:59'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'NNH 11/2/2020 19:27:03'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'NNH 11/2/2020 19:27:03'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'NNH 11/2/2020 19:27:03'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'NNH 11/2/2020 19:27:03'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'NNH 11/2/2020 19:27:03'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'NNH 11/2/2020 19:27:03'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'NNH 11/2/2020 19:27:03'!
PASSED!
!ReceptiveAccount methodsFor: 'balance' stamp: 'NNH 11/2/2020 19:31:38' prior: 50868040!
balance

	| deposits withdrawals |
	deposits := transactions select: [:aTransaction | aTransaction isKindOf: Deposit].
	withdrawals := transactions select: [:aTransaction | aTransaction isKindOf: Withdraw].

	
	
	^ deposits sum - withdrawals sum
! !
!ReceptiveAccount methodsFor: 'balance' stamp: 'NNH 11/2/2020 19:31:46' prior: 50868079!
balance

	| deposits withdrawals |

	deposits := transactions select: [:aTransaction | aTransaction isKindOf: Deposit].
	withdrawals := transactions select: [:aTransaction | aTransaction isKindOf: Withdraw].
	
	^ deposits sum - withdrawals sum
! !
!ReceptiveAccount methodsFor: 'balance' stamp: 'NNH 11/2/2020 19:31:49' prior: 50868090!
balance

	| deposits withdrawals |

	deposits := transactions select: [:aTransaction | aTransaction isKindOf: Deposit].
	withdrawals := transactions select: [:aTransaction | aTransaction isKindOf: Withdraw].
	
	^ deposits sum - withdrawals sum.
! !

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'NNH 11/2/2020 19:32:01'!
ERROR!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'NNH 11/2/2020 19:32:01'!
ERROR!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'NNH 11/2/2020 19:32:01'!
ERROR!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'NNH 11/2/2020 19:32:01'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'NNH 11/2/2020 19:32:01'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'NNH 11/2/2020 19:32:01'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'NNH 11/2/2020 19:32:01'!
PASSED!
!ReceptiveAccount methodsFor: 'balance' stamp: 'NNH 11/2/2020 19:35:46' prior: 50868101!
balance

	| deposits withdrawals |

	deposits := transactions select: [:aTransaction | aTransaction isKindOf: Deposit].
	withdrawals := transactions select: [:aTransaction | aTransaction isKindOf: Withdraw].
	
	^ deposits sum - withdrawals sum.
! !

----End fileIn of /home/nahuel/Documents/cuisuniversity/Packages/TerseGuide.pck.st----!
!ReceptiveAccount methodsFor: 'balance' stamp: 'NNH 11/2/2020 19:38:57' prior: 50868138!
balance

	| deposits withdrawals |

	deposits := (transactions select: [:aTransaction | aTransaction isKindOf: Deposit]) sum: [:aTransaction | aTransaction value] ifEmpty: [0].
	withdrawals := (transactions select: [:aTransaction | aTransaction isKindOf: Withdraw]) sum: [:aTransaction | aTransaction value] ifEmpty: [0].
	
	^ deposits - withdrawals.
! !

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'NNH 11/2/2020 19:39:00'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'NNH 11/2/2020 19:39:00'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'NNH 11/2/2020 19:39:00'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'NNH 11/2/2020 19:39:00'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'NNH 11/2/2020 19:39:00'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'NNH 11/2/2020 19:39:00'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'NNH 11/2/2020 19:39:00'!
PASSED!
!ReceptiveAccount methodsFor: 'balance' stamp: 'NNH 11/2/2020 19:40:45'!
sumOfTransactionValuesOfKind

	^ (transactions select: [:aTransaction | aTransaction isKindOf: Deposit]) sum: [:aTransaction | aTransaction value] ifEmpty: [0]! !
!ReceptiveAccount methodsFor: 'balance' stamp: 'NNH 11/2/2020 19:40:45' prior: 50871084!
balance

	| deposits withdrawals |

	deposits := self sumOfTransactionValuesOfKind.
	withdrawals := (transactions select: [:aTransaction | aTransaction isKindOf: Withdraw]) sum: [:aTransaction | aTransaction value] ifEmpty: [0].
	
	^ deposits - withdrawals.
! !
!ReceptiveAccount methodsFor: 'balance' stamp: 'NNH 11/2/2020 19:41:03'!
sumOfTransactionValuesOfKind: aKindOfTransaction

	^ (transactions select: [:aTransaction | aTransaction isKindOf: aKindOfTransaction]) sum: [:aTransaction | aTransaction value] ifEmpty: [0]! !
!ReceptiveAccount methodsFor: 'balance' stamp: 'NNH 11/2/2020 19:41:23' prior: 50871132!
balance

	| deposits withdrawals |

	deposits := self sumOfTransactionValuesOfKind: Deposit.
	withdrawals := self sumOfTransactionValuesOfKind: Withdraw.
	
	^ deposits - withdrawals.
! !

!methodRemoval: ReceptiveAccount #sumOfTransactionValuesOfKind stamp: 'NNH 11/2/2020 19:41:27'!
sumOfTransactionValuesOfKind

	^ (transactions select: [:aTransaction | aTransaction isKindOf: Deposit]) sum: [:aTransaction | aTransaction value] ifEmpty: [0]!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'NNH 11/2/2020 19:41:33'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'NNH 11/2/2020 19:41:33'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'NNH 11/2/2020 19:41:33'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'NNH 11/2/2020 19:41:33'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'NNH 11/2/2020 19:41:33'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'NNH 11/2/2020 19:41:33'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'NNH 11/2/2020 19:41:33'!
PASSED!

TestCase subclass: #PortfolioTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classDefinition: #PortfolioTest category: 'Portfolio-Ejercicio' stamp: 'NNH 11/2/2020 19:44:55'!
TestCase subclass: #PortfolioTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!
!PortfolioTest methodsFor: 'nil' stamp: 'NNH 11/2/2020 19:45:20'!
test01
	
	! !

!classDefinition: #Portfolio category: 'Portfolio-Ejercicio' stamp: 'NNH 11/2/2020 19:49:18'!
Object subclass: #Portfolio
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'NNH 11/2/2020 19:49:30' prior: 50871207!
test01

	| portfolio |
	portfolio := Portfolio new.
	
	self assert: 0 equals: portfolio balance.
	
	! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'NNH 11/2/2020 19:49:35' prior: 50871218!
test01

	| portfolio |

	portfolio := Portfolio new.
	
	self assert: 0 equals: portfolio balance.
	
	! !

!testRun: #PortfolioTest #test01 stamp: 'NNH 11/2/2020 19:49:39'!
ERROR!

!testRun: #PortfolioTest #test01 stamp: 'NNH 11/2/2020 19:49:39'!
ERROR!

!testRun: #PortfolioTest #test01 stamp: 'NNH 11/2/2020 19:49:52'!
ERROR!

!testRun: #PortfolioTest #test01 stamp: 'NNH 11/2/2020 19:49:52'!
ERROR!
!Portfolio methodsFor: 'xxx' stamp: 'NNH 11/2/2020 19:50:11'!
balance
	self shouldBeImplemented.! !
!Portfolio methodsFor: 'xxx' stamp: 'NNH 11/2/2020 19:50:22' prior: 50871240!
balance
	^0.! !

!testRun: #PortfolioTest #test01 stamp: 'NNH 11/2/2020 19:50:26'!
PASSED!

!testRun: #PortfolioTest #test01 stamp: 'NNH 11/2/2020 19:50:29'!
PASSED!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'NNH 11/2/2020 19:52:47'!
test02

	| portfolio account |

	account := ReceptiveAccount new.
	portfolio := Portfolio new.
	portfolio add: account.
	
	self assert: 0 equals: portfolio balance.
	
	! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'NNH 11/2/2020 19:53:30' prior: 50871252!
test02

	| portfolio account |

	account := ReceptiveAccount new.

	portfolio := Portfolio new.
	portfolio add: account.
	
	self assert: 0 equals: portfolio balance.
	
	! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'NNH 11/2/2020 19:54:08' prior: 50871261!
test02

	| portfolio account |

	account := ReceptiveAccount new.
	Deposit register: 100 on: account.
	
	portfolio := Portfolio new.
	portfolio add: account.
	
	self assert: 100 equals: portfolio balance.
	
	! !

!testRun: #PortfolioTest #test02 stamp: 'NNH 11/2/2020 19:55:23'!
ERROR!

!testRun: #PortfolioTest #test02 stamp: 'NNH 11/2/2020 19:55:23'!
ERROR!

!testRun: #PortfolioTest #test02 stamp: 'NNH 11/2/2020 19:55:34'!
ERROR!

!testRun: #PortfolioTest #test02 stamp: 'NNH 11/2/2020 19:55:34'!
ERROR!
!Portfolio methodsFor: 'yyy' stamp: 'NNH 11/2/2020 19:55:41'!
add: aReceptiveAccount 
	self shouldBeImplemented.! !

!classDefinition: #Portfolio category: 'Portfolio-Ejercicio' stamp: 'NNH 11/2/2020 19:56:15'!
Object subclass: #Portfolio
	instanceVariableNames: 'account'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!
!Portfolio methodsFor: 'yyy' stamp: 'NNH 11/2/2020 19:56:13' prior: 50871288!
add: aReceptiveAccount 
	
	account := aReceptiveAccount.! !

!testRun: #PortfolioTest #test02 stamp: 'NNH 11/2/2020 19:56:24'!
FAILURE!

!testRun: #PortfolioTest #test02 stamp: 'NNH 11/2/2020 19:56:24'!
FAILURE!

!testRun: #PortfolioTest #test02 stamp: 'NNH 11/2/2020 19:56:45'!
FAILURE!

!testRun: #PortfolioTest #test02 stamp: 'NNH 11/2/2020 19:56:45'!
FAILURE!
!Portfolio methodsFor: 'xxx' stamp: 'NNH 11/2/2020 19:57:04' prior: 50871244!
balance
	^ account balance.! !

!testRun: #PortfolioTest #test02 stamp: 'NNH 11/2/2020 19:57:10'!
PASSED!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'NNH 11/2/2020 19:58:19'!
test03

	| portfolio account |

	account := ReceptiveAccount new.
	Deposit register: 100 on: account.
	Withdraw register: 50 on: account.
	
	portfolio := Portfolio new.
	portfolio add: account.
	
	self assert: 100 equals: portfolio balance.
	
	! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'NNH 11/2/2020 19:59:32' prior: 50871320!
test03

	| portfolio anAccount anotherAccount |

	anAccount := ReceptiveAccount new.
	Deposit register: 100 on: anAccount.
	anotherAccount := ReceptiveAccount new.
	
	portfolio := Portfolio new.
	portfolio add: anAccount.
	portfolio add: anotherAccount.

	self assert: 100 equals: portfolio balance.
	
	! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'NNH 11/2/2020 20:00:06' prior: 50871331!
test03

	| portfolio anAccount anotherAccount |

	anAccount := ReceptiveAccount new.
	Deposit register: 100 on: anAccount.
	anotherAccount := ReceptiveAccount new.
	
	portfolio := Portfolio new.
	portfolio add: anAccount.
	portfolio add: anotherAccount.

	self assert: 100 equals: portfolio balance.
	
	! !

!testRun: #PortfolioTest #test03 stamp: 'NNH 11/2/2020 20:00:23'!
FAILURE!

!testRun: #PortfolioTest #test03 stamp: 'NNH 11/2/2020 20:00:23'!
FAILURE!

!testRun: #PortfolioTest #test03 stamp: 'NNH 11/2/2020 20:00:50'!
FAILURE!

!testRun: #PortfolioTest #test03 stamp: 'NNH 11/2/2020 20:00:50'!
FAILURE!

!classDefinition: #Portfolio category: 'Portfolio-Ejercicio' stamp: 'NNH 11/2/2020 20:01:25'!
Object subclass: #Portfolio
	instanceVariableNames: 'account accounts'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!
!Portfolio methodsFor: 'yyy' stamp: 'NNH 11/2/2020 20:01:23' prior: 50871300!
add: aReceptiveAccount 
	
	accounts add: aReceptiveAccount.! !

!testRun: #PortfolioTest #test03 stamp: 'NNH 11/2/2020 20:01:37'!
ERROR!

!testRun: #PortfolioTest #test03 stamp: 'NNH 11/2/2020 20:01:44'!
ERROR!

!testRun: #PortfolioTest #test03 stamp: 'NNH 11/2/2020 20:01:44'!
ERROR!

!testRun: #PortfolioTest #test03 stamp: 'NNH 11/2/2020 20:01:54'!
ERROR!

!testRun: #PortfolioTest #test03 stamp: 'NNH 11/2/2020 20:02:05'!
ERROR!
!Portfolio methodsFor: 'xxx' stamp: 'NNH 11/2/2020 20:03:54' overrides: 16896425!
initialize
	^ accounts := OrderedCollection new.! !
!Portfolio class methodsFor: 'nil' stamp: 'NNH 11/2/2020 20:04:20' overrides: 16783533!
new
	^ self initialize.! !

!testRun: #PortfolioTest #test03 stamp: 'NNH 11/2/2020 20:04:43'!
ERROR!

!testRun: #PortfolioTest #test03 stamp: 'NNH 11/2/2020 20:04:43'!
ERROR!

!testRun: #PortfolioTest #test03 stamp: 'NNH 11/2/2020 20:05:00'!
ERROR!
!Portfolio methodsFor: 'xxx' stamp: 'NNH 11/2/2020 20:05:19' prior: 50871391 overrides: 16896425!
initialize
	
	accounts := OrderedCollection new.! !

!testRun: #PortfolioTest #test03 stamp: 'NNH 11/2/2020 20:05:28'!
ERROR!

!testRun: #PortfolioTest #test03 stamp: 'NNH 11/2/2020 20:05:28'!
ERROR!
!Portfolio class methodsFor: 'as yet unclassified' stamp: 'NNH 11/2/2020 20:06:17' prior: 50871396 overrides: 16783533!
new
	| portfolio |
	portfolio := self new initialize.
	^ portfolio.! !
!Portfolio class methodsFor: 'as yet unclassified' stamp: 'NNH 11/2/2020 20:07:19' prior: 50871417 overrides: 16783533!
new
	| portfolio |
	portfolio := self initialize.
	^ portfolio.! !
!Portfolio class methodsFor: 'as yet unclassified' stamp: 'NNH 11/2/2020 20:07:53' prior: 50871423 overrides: 16783533!
new
	
	self initialize.
	^ self.! !

!testRun: #PortfolioTest #test03 stamp: 'NNH 11/2/2020 20:08:05'!
ERROR!

!testRun: #PortfolioTest #test03 stamp: 'NNH 11/2/2020 20:08:05'!
ERROR!
!Portfolio class methodsFor: 'as yet unclassified' stamp: 'NNH 11/2/2020 20:09:28' prior: 50871429 overrides: 16783533!
new
	
	| portfolio |
	portfolio := self basicNew.
	portfolio initialize.
	^ portfolio.! !

!testRun: #PortfolioTest #test01 stamp: 'NNH 11/2/2020 20:09:37'!
ERROR!

!testRun: #PortfolioTest #test02 stamp: 'NNH 11/2/2020 20:09:37'!
ERROR!

!testRun: #PortfolioTest #test03 stamp: 'NNH 11/2/2020 20:09:37'!
ERROR!
!Portfolio class methodsFor: 'as yet unclassified' stamp: 'NNH 11/2/2020 20:10:05' prior: 50871439 overrides: 16783533!
new
	
	^ self initialize.! !
!Portfolio methodsFor: 'xxx' stamp: 'NNH 11/2/2020 20:10:16' prior: 50871407 overrides: 16896425!
initialize
	
	accounts := OrderedCollection new.
	^self.! !

!testRun: #PortfolioTest #test03 stamp: 'NNH 11/2/2020 20:10:24'!
ERROR!

!testRun: #PortfolioTest #test03 stamp: 'NNH 11/2/2020 20:10:24'!
ERROR!

!testRun: #PortfolioTest #test01 stamp: 'NNH 11/2/2020 20:10:47'!
ERROR!

!testRun: #PortfolioTest #test02 stamp: 'NNH 11/2/2020 20:10:47'!
ERROR!

!testRun: #PortfolioTest #test03 stamp: 'NNH 11/2/2020 20:10:47'!
ERROR!
!Portfolio methodsFor: 'xxx' stamp: 'NNH 11/2/2020 20:11:33' prior: 50871457 overrides: 16896425!
initialize
	
	accounts := OrderedCollection new.! !

!methodRemoval: Portfolio class #new stamp: 'NNH 11/2/2020 20:13:04'!
new
	
	^ self initialize.!
!Portfolio class methodsFor: 'nil' stamp: 'NNH 11/2/2020 20:13:57' overrides: 16783533!
new
	
	^ self basicNew initialize.! !

!testRun: #PortfolioTest #test01 stamp: 'NNH 11/2/2020 20:14:09'!
ERROR!

!testRun: #PortfolioTest #test02 stamp: 'NNH 11/2/2020 20:14:09'!
ERROR!

!testRun: #PortfolioTest #test03 stamp: 'NNH 11/2/2020 20:14:09'!
ERROR!

!testRun: #PortfolioTest #test01 stamp: 'NNH 11/2/2020 20:14:22'!
ERROR!

!testRun: #PortfolioTest #test01 stamp: 'NNH 11/2/2020 20:14:22'!
ERROR!
!Portfolio class methodsFor: 'as yet unclassified' stamp: 'NNH 11/2/2020 20:15:08' prior: 50871482 overrides: 16783533!
new
	
	| portfolio |
	portfolio := self basicNew
	portfolio initialize.
	^portfolio.! !
!Portfolio class methodsFor: 'as yet unclassified' stamp: 'NNH 11/2/2020 20:15:15' prior: 50871499 overrides: 16783533!
new
	
	| portfolio |
	portfolio := self basicNew.
	portfolio initialize.
	^portfolio.! !

!testRun: #PortfolioTest #test01 stamp: 'NNH 11/2/2020 20:15:21'!
ERROR!

!testRun: #PortfolioTest #test02 stamp: 'NNH 11/2/2020 20:15:21'!
ERROR!

!testRun: #PortfolioTest #test03 stamp: 'NNH 11/2/2020 20:15:21'!
ERROR!

!testRun: #PortfolioTest #test01 stamp: 'NNH 11/2/2020 20:15:35'!
ERROR!

!testRun: #PortfolioTest #test01 stamp: 'NNH 11/2/2020 20:15:35'!
ERROR!
!Portfolio class methodsFor: 'as yet unclassified' stamp: 'NNH 11/2/2020 20:16:15' prior: 50871506 overrides: 16783533!
new
	
	^ self basicNew initialize.! !

!testRun: #PortfolioTest #test01 stamp: 'NNH 11/2/2020 20:16:29'!
ERROR!

!testRun: #PortfolioTest #test01 stamp: 'NNH 11/2/2020 20:16:29'!
ERROR!

Object subclass: #Portfolio
	instanceVariableNames: 'accounts'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classDefinition: #Portfolio category: 'Portfolio-Ejercicio' stamp: 'NNH 11/2/2020 20:16:47'!
Object subclass: #Portfolio
	instanceVariableNames: 'accounts'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!
!Portfolio methodsFor: 'xxx' stamp: 'NNH 11/2/2020 20:16:52' prior: 50871314!
balance
	^ accounts balance.! !
!Portfolio methodsFor: 'xxx' stamp: 'NNH 11/2/2020 20:17:42' prior: 50871546!
balance
	^ accounts sum: [:anAccount | anAccount balance] ifEmpty: [0].! !

!testRun: #PortfolioTest #test01 stamp: 'NNH 11/2/2020 20:17:48'!
PASSED!

!testRun: #PortfolioTest #test02 stamp: 'NNH 11/2/2020 20:17:48'!
PASSED!

!testRun: #PortfolioTest #test03 stamp: 'NNH 11/2/2020 20:17:48'!
PASSED!

!testRun: #PortfolioTest #test01 stamp: 'NNH 11/2/2020 20:29:41'!
PASSED!

!testRun: #PortfolioTest #test02 stamp: 'NNH 11/2/2020 20:29:41'!
PASSED!

!testRun: #PortfolioTest #test03 stamp: 'NNH 11/2/2020 20:29:41'!
PASSED!
!ReceptiveAccount methodsFor: 'balance' stamp: 'NNH 11/2/2020 20:33:32' prior: 50871152!
balance

	^ transactions inject: 0 into: [:aTransaction :balance | aTransaction addToBalance: balance].

! !

!methodRemoval: ReceptiveAccount #sumOfTransactionValuesOfKind: stamp: 'NNH 11/2/2020 20:33:39'!
sumOfTransactionValuesOfKind: aKindOfTransaction

	^ (transactions select: [:aTransaction | aTransaction isKindOf: aKindOfTransaction]) sum: [:aTransaction | aTransaction value] ifEmpty: [0]!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'NNH 11/2/2020 20:33:57'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'NNH 11/2/2020 20:34:02'!
ERROR!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'NNH 11/2/2020 20:34:02'!
ERROR!
!ReceptiveAccount methodsFor: 'balance' stamp: 'NNH 11/2/2020 20:34:42' prior: 50871570!
balance

	^ transactions inject: 0 into: [:balance :aTransaction | aTransaction addToBalance: balance].

! !

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'NNH 11/2/2020 20:34:49'!
ERROR!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'NNH 11/2/2020 20:34:49'!
ERROR!
!AccountTransaction methodsFor: 'accessing' stamp: 'NNH 11/2/2020 20:35:10'!
addToBalance: aSmallInteger 
	self shouldBeImplemented.! !
!AccountTransaction methodsFor: 'accessing' stamp: 'NNH 11/2/2020 20:35:19' prior: 50871611!
addToBalance: aSmallInteger 
	self subclassResponsibility.! !
!AccountTransaction methodsFor: 'accessing' stamp: 'NNH 11/2/2020 20:35:23' prior: 50871616!
addToBalance: aBalance
	self subclassResponsibility.! !

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'NNH 11/2/2020 20:35:31'!
ERROR!
!Deposit methodsFor: 'accessing' stamp: 'NNH 11/2/2020 20:35:45' overrides: 50871621!
addToBalance: aSmallInteger 
	self shouldBeImplemented.! !
!Deposit methodsFor: 'accessing' stamp: 'NNH 11/2/2020 20:36:05' prior: 50871630 overrides: 50871621!
addToBalance: aBalance
	^ aBalance + value.! !

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'NNH 11/2/2020 20:36:07'!
ERROR!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'NNH 11/2/2020 20:36:25'!
ERROR!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'NNH 11/2/2020 20:36:25'!
ERROR!
!Withdraw methodsFor: 'accessing' stamp: 'NNH 11/2/2020 20:36:42' overrides: 50871621!
addToBalance: aSmallInteger 
	self shouldBeImplemented.! !
!Withdraw methodsFor: 'accessing' stamp: 'NNH 11/2/2020 20:36:55' prior: 50871652 overrides: 50871621!
addToBalance: aBalance 
	^ aBalance - value.! !

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'NNH 11/2/2020 20:36:57'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'NNH 11/2/2020 20:37:01'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'NNH 11/2/2020 20:37:01'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'NNH 11/2/2020 20:37:01'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'NNH 11/2/2020 20:37:01'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'NNH 11/2/2020 20:37:01'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'NNH 11/2/2020 20:37:01'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'NNH 11/2/2020 20:37:01'!
PASSED!

!testRun: #PortfolioTest #test01 stamp: 'NNH 11/2/2020 20:37:49'!
PASSED!

!testRun: #PortfolioTest #test02 stamp: 'NNH 11/2/2020 20:37:49'!
PASSED!

!testRun: #PortfolioTest #test03 stamp: 'NNH 11/2/2020 20:37:49'!
PASSED!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'NNH 11/2/2020 20:40:33'!
test04

	| portfolio account aTransaction |

	account := ReceptiveAccount new.
	aTransaction := Deposit register: 100 on: account.
	
	portfolio := Portfolio new.

	self deny: (portfolio hasRegistered: aTransaction).
	
	! !

!testRun: #PortfolioTest #test04 stamp: 'NNH 11/2/2020 20:40:39'!
ERROR!

!testRun: #PortfolioTest #test04 stamp: 'NNH 11/2/2020 20:40:39'!
ERROR!
!Portfolio methodsFor: 'xxx' stamp: 'NNH 11/2/2020 20:40:55'!
hasRegistered: aDeposit 
	self shouldBeImplemented.! !
!Portfolio methodsFor: 'xxx' stamp: 'NNH 11/2/2020 20:41:03' prior: 50871714!
hasRegistered: aDeposit 
	^ false.! !
!Portfolio methodsFor: 'xxx' stamp: 'NNH 11/2/2020 20:41:12' prior: 50871719!
hasRegistered: aTransaction
	^ false.! !

!testRun: #PortfolioTest #test04 stamp: 'NNH 11/2/2020 20:41:20'!
PASSED!

!testRun: #PortfolioTest #test04 stamp: 'NNH 11/2/2020 20:41:23'!
PASSED!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'NNH 11/2/2020 20:41:49' prior: 50871700!
test04

	| portfolio account aTransaction |

	account := ReceptiveAccount new.
	aTransaction := Deposit register: 100 on: account.
	
	portfolio := Portfolio new.
	portfolio add: account.

	self assert: (portfolio hasRegistered: aTransaction).
	
	! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'NNH 11/2/2020 20:41:56'!
test05

	| portfolio account aTransaction |

	account := ReceptiveAccount new.
	aTransaction := Deposit register: 100 on: account.
	
	portfolio := Portfolio new.
	portfolio add: account.

	self assert: (portfolio hasRegistered: aTransaction).
	
	! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'NNH 11/2/2020 20:40:33' prior: 50871733!
test04

	| portfolio account aTransaction |

	account := ReceptiveAccount new.
	aTransaction := Deposit register: 100 on: account.
	
	portfolio := Portfolio new.

	self deny: (portfolio hasRegistered: aTransaction).
	
	! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'NNH 11/2/2020 20:42:24' prior: 50871755!
test04

	| portfolio account aTransaction |

	account := ReceptiveAccount new.
	aTransaction := Deposit register: 100 on: account.
	
	portfolio := Portfolio new.

	self deny: (portfolio hasRegistered: aTransaction).
	
	! !

!testRun: #PortfolioTest #test04 stamp: 'NNH 11/2/2020 20:42:29'!
PASSED!

!testRun: #PortfolioTest #test05 stamp: 'NNH 11/2/2020 20:42:34'!
FAILURE!

!testRun: #PortfolioTest #test05 stamp: 'NNH 11/2/2020 20:42:34'!
FAILURE!
!Portfolio methodsFor: 'xxx' stamp: 'NNH 11/2/2020 20:43:38' prior: 50871723!
hasRegistered: aTransaction
	^ accounts first hasRegistered: aTransaction.! !

!testRun: #PortfolioTest #test05 stamp: 'NNH 11/2/2020 20:43:42'!
PASSED!

!testRun: #PortfolioTest #test05 stamp: 'NNH 11/2/2020 20:43:45'!
PASSED!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'NNH 11/2/2020 20:44:36'!
test06

	| portfolio anAccount anotherAccount aTransaction |

	anAccount := ReceptiveAccount new.
	aTransaction := Deposit register: 100 on: anAccount.
	anotherAccount := ReceptiveAccount new.
	
	portfolio := Portfolio new.
	portfolio add: anAccount.
	portfolio add: anotherAccount.

	self assert: (portfolio hasRegistered: aTransaction).
	
	! !

!testRun: #PortfolioTest #test06 stamp: 'NNH 11/2/2020 20:44:43'!
PASSED!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'NNH 11/2/2020 20:45:04' prior: 50871793!
test06

	| portfolio anAccount anotherAccount aTransaction |

	anAccount := ReceptiveAccount new.
	anotherAccount := ReceptiveAccount new.
	aTransaction := Deposit register: 100 on: anotherAccount.
	
	portfolio := Portfolio new.
	portfolio add: anAccount.
	portfolio add: anotherAccount.

	self assert: (portfolio hasRegistered: aTransaction).
	
	! !

!testRun: #PortfolioTest #test06 stamp: 'NNH 11/2/2020 20:45:07'!
FAILURE!

!testRun: #PortfolioTest #test06 stamp: 'NNH 11/2/2020 20:45:07'!
FAILURE!
!Portfolio methodsFor: 'xxx' stamp: 'NNH 11/2/2020 20:45:46' prior: 50871783!
hasRegistered: aTransaction
	^ accounts anySatisfy: [:anAccount | anAccount hasRegistered: aTransaction].! !

!testRun: #PortfolioTest #test06 stamp: 'NNH 11/2/2020 20:45:49'!
PASSED!

!testRun: #PortfolioTest #test06 stamp: 'NNH 11/2/2020 20:45:52'!
PASSED!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'NNH 11/2/2020 20:47:19'!
test07

	| portfolio account |

	account := ReceptiveAccount new.
	
	portfolio := Portfolio new.

	self assert: portfolio transactions isEmpty.
	
	! !

!testRun: #PortfolioTest #test07 stamp: 'NNH 11/2/2020 20:47:38'!
ERROR!

!testRun: #PortfolioTest #test07 stamp: 'NNH 11/2/2020 20:47:38'!
ERROR!
!Portfolio methodsFor: 'sdasdasd' stamp: 'NNH 11/2/2020 20:47:53'!
transactions
	self shouldBeImplemented.! !
!Portfolio methodsFor: 'sdasdasd' stamp: 'NNH 11/2/2020 20:48:06' prior: 50871852!
transactions
	
	^ OrderedCollection new.! !

!testRun: #PortfolioTest #test07 stamp: 'NNH 11/2/2020 20:48:07'!
PASSED!

!testRun: #PortfolioTest #test07 stamp: 'NNH 11/2/2020 20:48:10'!
PASSED!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'NNH 11/2/2020 20:50:21'!
test08

	| portfolio account aTransaction |

	account := ReceptiveAccount new.
	aTransaction := Deposit register: 100 on: account.
	
	portfolio := Portfolio new.
	portfolio add: account.

	self assert: 1 equals: portfolio transactions size.
	self assert: portfolio transactions includes: aTransaction.
	
	! !

!testRun: #PortfolioTest #test08 stamp: 'NNH 11/2/2020 20:50:27'!
FAILURE!

!testRun: #PortfolioTest #test08 stamp: 'NNH 11/2/2020 20:50:27'!
FAILURE!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'NNH 11/2/2020 20:50:39' prior: 50871865!
test08

	| portfolio account aTransaction |

	account := ReceptiveAccount new.
	aTransaction := Deposit register: 100 on: account.
	
	portfolio := Portfolio new.
	portfolio add: account.

	self assert: 1 equals: portfolio transactions size.
	self assert: (portfolio transactions includes: aTransaction).
	
	! !
!Portfolio methodsFor: 'sdasdasd' stamp: 'NNH 11/2/2020 20:51:31' prior: 50871856!
transactions
	
	^ accounts first transactions.! !

!testRun: #PortfolioTest #test08 stamp: 'NNH 11/2/2020 20:51:36'!
PASSED!

!testRun: #PortfolioTest #test08 stamp: 'NNH 11/2/2020 20:51:44'!
PASSED!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'NNH 11/2/2020 20:51:49' prior: 50871883!
test08

	| portfolio account aTransaction |

	account := ReceptiveAccount new.
	aTransaction := Deposit register: 100 on: account.
	
	portfolio := Portfolio new.
	portfolio add: account.

	self assert: 1 equals: portfolio transactions size.
	self assert: portfolio transactions includes: aTransaction.
	
	! !

!testRun: #PortfolioTest #test08 stamp: 'NNH 11/2/2020 20:51:51'!
PASSED!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'NNH 11/2/2020 20:52:15' prior: 50871906!
test08

	| portfolio account aTransaction |

	account := ReceptiveAccount new.
	aTransaction := Deposit register: 100 on: account.
	
	portfolio := Portfolio new.
	portfolio add: account.

	self assert: 1 equals: portfolio transactions size.
	self assert: portfolio transactions includes: aTransaction.
	
	! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'NNH 11/2/2020 20:53:29'!
test09

	| portfolio anAccount anotherAccount aTransaction |

	anAccount := ReceptiveAccount new.
	anotherAccount := ReceptiveAccount new.
	aTransaction := Deposit register: 100 on: anotherAccount.
	
	portfolio := Portfolio new.
	portfolio add: anAccount.
	portfolio add: anotherAccount.

	self assert: 1 equals: portfolio transactions size.
	self assert: portfolio transactions includes: aTransaction.
	
	! !

!testRun: #PortfolioTest #test09 stamp: 'NNH 11/2/2020 20:53:34'!
FAILURE!

!testRun: #PortfolioTest #test09 stamp: 'NNH 11/2/2020 20:53:34'!
FAILURE!
!Portfolio methodsFor: 'sdasdasd' stamp: 'NNH 11/2/2020 20:55:18' prior: 50871896!
transactions
	
	^ accounts inject: OrderedCollection new into: [:aCollectionOfTransactions :anAccount | aCollectionOfTransactions union: anAccount transactions].! !

!testRun: #PortfolioTest #test09 stamp: 'NNH 11/2/2020 20:55:23'!
PASSED!

!testRun: #PortfolioTest #test09 stamp: 'NNH 11/2/2020 20:55:28'!
PASSED!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'NNH 11/2/2020 21:00:12'!
test01EmptyPortfolioHasZeroBalance

	| portfolio |

	portfolio := Portfolio new.
	
	self assert: 0 equals: portfolio balance.
	
	! !

!methodRemoval: PortfolioTest #test01 stamp: 'NNH 11/2/2020 21:00:12'!
test01

	| portfolio |

	portfolio := Portfolio new.
	
	self assert: 0 equals: portfolio balance.
	
	!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'NNH 11/2/2020 21:00:57'!
test02PortfolioWithOneAccountRetrievesBalanceOfThatAccount

	| portfolio account |

	account := ReceptiveAccount new.
	Deposit register: 100 on: account.
	
	portfolio := Portfolio new.
	portfolio add: account.
	
	self assert: 100 equals: portfolio balance.
	
	! !

!methodRemoval: PortfolioTest #test02 stamp: 'NNH 11/2/2020 21:00:57'!
test02

	| portfolio account |

	account := ReceptiveAccount new.
	Deposit register: 100 on: account.
	
	portfolio := Portfolio new.
	portfolio add: account.
	
	self assert: 100 equals: portfolio balance.
	
	!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'NNH 11/2/2020 21:01:49'!
test02BalanceOfPortfolioWithOneAccountRetrievesBalanceOfThatAccount

	| portfolio account |

	account := ReceptiveAccount new.
	Deposit register: 100 on: account.
	
	portfolio := Portfolio new.
	portfolio add: account.
	
	self assert: 100 equals: portfolio balance.
	
	! !

!methodRemoval: PortfolioTest #test02PortfolioWithOneAccountRetrievesBalanceOfThatAccount stamp: 'NNH 11/2/2020 21:01:49'!
test02PortfolioWithOneAccountRetrievesBalanceOfThatAccount

	| portfolio account |

	account := ReceptiveAccount new.
	Deposit register: 100 on: account.
	
	portfolio := Portfolio new.
	portfolio add: account.
	
	self assert: 100 equals: portfolio balance.
	
	!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'NNH 11/2/2020 21:02:08'!
test01BalanceOfEmptyPortfolioIsZero

	| portfolio |

	portfolio := Portfolio new.
	
	self assert: 0 equals: portfolio balance.
	
	! !

!methodRemoval: PortfolioTest #test01EmptyPortfolioHasZeroBalance stamp: 'NNH 11/2/2020 21:02:08'!
test01EmptyPortfolioHasZeroBalance

	| portfolio |

	portfolio := Portfolio new.
	
	self assert: 0 equals: portfolio balance.
	
	!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'NNH 11/2/2020 21:02:22'!
test02BalanceOfPortfolioWithOneAccountIsBalanceOfThatAccount

	| portfolio account |

	account := ReceptiveAccount new.
	Deposit register: 100 on: account.
	
	portfolio := Portfolio new.
	portfolio add: account.
	
	self assert: 100 equals: portfolio balance.
	
	! !

!methodRemoval: PortfolioTest #test02BalanceOfPortfolioWithOneAccountRetrievesBalanceOfThatAccount stamp: 'NNH 11/2/2020 21:02:22'!
test02BalanceOfPortfolioWithOneAccountRetrievesBalanceOfThatAccount

	| portfolio account |

	account := ReceptiveAccount new.
	Deposit register: 100 on: account.
	
	portfolio := Portfolio new.
	portfolio add: account.
	
	self assert: 100 equals: portfolio balance.
	
	!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'NNH 11/2/2020 21:02:57'!
test03BalanceOfPortfolioWithMoreThanOneAccountIsSumOfBalances

	| portfolio anAccount anotherAccount |

	anAccount := ReceptiveAccount new.
	Deposit register: 100 on: anAccount.
	anotherAccount := ReceptiveAccount new.
	
	portfolio := Portfolio new.
	portfolio add: anAccount.
	portfolio add: anotherAccount.

	self assert: 100 equals: portfolio balance.
	
	! !

!methodRemoval: PortfolioTest #test03 stamp: 'NNH 11/2/2020 21:02:57'!
test03

	| portfolio anAccount anotherAccount |

	anAccount := ReceptiveAccount new.
	Deposit register: 100 on: anAccount.
	anotherAccount := ReceptiveAccount new.
	
	portfolio := Portfolio new.
	portfolio add: anAccount.
	portfolio add: anotherAccount.

	self assert: 100 equals: portfolio balance.
	
	!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'NNH 11/2/2020 21:03:26'!
test04EmptyPortfolioHasNoTransactions

	| portfolio account aTransaction |

	account := ReceptiveAccount new.
	aTransaction := Deposit register: 100 on: account.
	
	portfolio := Portfolio new.

	self deny: (portfolio hasRegistered: aTransaction).
	
	! !

!methodRemoval: PortfolioTest #test04 stamp: 'NNH 11/2/2020 21:03:26'!
test04

	| portfolio account aTransaction |

	account := ReceptiveAccount new.
	aTransaction := Deposit register: 100 on: account.
	
	portfolio := Portfolio new.

	self deny: (portfolio hasRegistered: aTransaction).
	
	!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'NNH 11/2/2020 21:03:53'!
test05PortfolioWithOneAccountRegistersATransactionOfThatAccount

	| portfolio account aTransaction |

	account := ReceptiveAccount new.
	aTransaction := Deposit register: 100 on: account.
	
	portfolio := Portfolio new.
	portfolio add: account.

	self assert: (portfolio hasRegistered: aTransaction).
	
	! !

!methodRemoval: PortfolioTest #test05 stamp: 'NNH 11/2/2020 21:03:53'!
test05

	| portfolio account aTransaction |

	account := ReceptiveAccount new.
	aTransaction := Deposit register: 100 on: account.
	
	portfolio := Portfolio new.
	portfolio add: account.

	self assert: (portfolio hasRegistered: aTransaction).
	
	!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'NNH 11/2/2020 21:05:39'!
test06APortfolioWithMoreThanOneAccountRegistersATransactionThatIsNotFromTheFirstAccount

	| portfolio anAccount anotherAccount aTransaction |

	anAccount := ReceptiveAccount new.
	anotherAccount := ReceptiveAccount new.
	aTransaction := Deposit register: 100 on: anotherAccount.
	
	portfolio := Portfolio new.
	portfolio add: anAccount.
	portfolio add: anotherAccount.

	self assert: (portfolio hasRegistered: aTransaction).
	
	! !

!methodRemoval: PortfolioTest #test06 stamp: 'NNH 11/2/2020 21:05:39'!
test06

	| portfolio anAccount anotherAccount aTransaction |

	anAccount := ReceptiveAccount new.
	anotherAccount := ReceptiveAccount new.
	aTransaction := Deposit register: 100 on: anotherAccount.
	
	portfolio := Portfolio new.
	portfolio add: anAccount.
	portfolio add: anotherAccount.

	self assert: (portfolio hasRegistered: aTransaction).
	
	!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'NNH 11/2/2020 21:06:42'!
test04EmptyPortfolioHasRegisteredNoTransactions

	| portfolio account aTransaction |

	account := ReceptiveAccount new.
	aTransaction := Deposit register: 100 on: account.
	
	portfolio := Portfolio new.

	self deny: (portfolio hasRegistered: aTransaction).
	
	! !

!methodRemoval: PortfolioTest #test04EmptyPortfolioHasNoTransactions stamp: 'NNH 11/2/2020 21:06:42'!
test04EmptyPortfolioHasNoTransactions

	| portfolio account aTransaction |

	account := ReceptiveAccount new.
	aTransaction := Deposit register: 100 on: account.
	
	portfolio := Portfolio new.

	self deny: (portfolio hasRegistered: aTransaction).
	
	!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'NNH 11/2/2020 21:07:10'!
test07EmptyPortfolioHasNoTransactions

	| portfolio account |

	account := ReceptiveAccount new.
	
	portfolio := Portfolio new.

	self assert: portfolio transactions isEmpty.
	
	! !

!methodRemoval: PortfolioTest #test07 stamp: 'NNH 11/2/2020 21:07:10'!
test07

	| portfolio account |

	account := ReceptiveAccount new.
	
	portfolio := Portfolio new.

	self assert: portfolio transactions isEmpty.
	
	!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'NNH 11/2/2020 21:08:28'!
test08PortfolioWithOneAccountHasTheTransactionsOfThatAccount

	| portfolio account aTransaction |

	account := ReceptiveAccount new.
	aTransaction := Deposit register: 100 on: account.
	
	portfolio := Portfolio new.
	portfolio add: account.

	self assert: 1 equals: portfolio transactions size.
	self assert: portfolio transactions includes: aTransaction.
	
	! !

!methodRemoval: PortfolioTest #test08 stamp: 'NNH 11/2/2020 21:08:28'!
test08

	| portfolio account aTransaction |

	account := ReceptiveAccount new.
	aTransaction := Deposit register: 100 on: account.
	
	portfolio := Portfolio new.
	portfolio add: account.

	self assert: 1 equals: portfolio transactions size.
	self assert: portfolio transactions includes: aTransaction.
	
	!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'NNH 11/2/2020 21:09:10'!
test09APortfolioWithMoreThanOneAccountHasTheTransactionsOfItsAccounts

	| portfolio anAccount anotherAccount aTransaction |

	anAccount := ReceptiveAccount new.
	anotherAccount := ReceptiveAccount new.
	aTransaction := Deposit register: 100 on: anotherAccount.
	
	portfolio := Portfolio new.
	portfolio add: anAccount.
	portfolio add: anotherAccount.

	self assert: 1 equals: portfolio transactions size.
	self assert: portfolio transactions includes: aTransaction.
	
	! !

!methodRemoval: PortfolioTest #test09 stamp: 'NNH 11/2/2020 21:09:10'!
test09

	| portfolio anAccount anotherAccount aTransaction |

	anAccount := ReceptiveAccount new.
	anotherAccount := ReceptiveAccount new.
	aTransaction := Deposit register: 100 on: anotherAccount.
	
	portfolio := Portfolio new.
	portfolio add: anAccount.
	portfolio add: anotherAccount.

	self assert: 1 equals: portfolio transactions size.
	self assert: portfolio transactions includes: aTransaction.
	
	!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'NNH 11/2/2020 21:10:01'!
test10
	
	| portfolio |
	portfolio := Portfolio new.! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'NNH 11/2/2020 21:13:55' prior: 50872260!
test10
	
	| portfolio |
	
	portfolio := Portfolio new.

	self should: [portfolio add: portfolio]
	raise: Error
	withMessageText: Portfolio cannotIncludeItselfErrorDescription.! !

!testRun: #PortfolioTest #test10 stamp: 'NNH 11/2/2020 21:14:02'!
ERROR!

!testRun: #PortfolioTest #test10 stamp: 'NNH 11/2/2020 21:14:02'!
ERROR!
!Portfolio class methodsFor: 'error descriptions' stamp: 'NNH 11/2/2020 21:14:42'!
cannotIncludeItselfErrorDescription
	self shouldBeImplemented.! !
!Portfolio class methodsFor: 'error descriptions' stamp: 'NNH 11/2/2020 21:15:01' prior: 50872278!
cannotIncludeItselfErrorDescription
	^ 'A portfolio cannot include itself'.! !

!testRun: #PortfolioTest #test10 stamp: 'NNH 11/2/2020 21:15:11'!
FAILURE!

!testRun: #PortfolioTest #test10 stamp: 'NNH 11/2/2020 21:15:11'!
FAILURE!

!testRun: #PortfolioTest #test10 stamp: 'NNH 11/2/2020 21:19:55'!
FAILURE!
!Portfolio methodsFor: 'yyy' stamp: 'NNH 11/2/2020 21:21:44' prior: 50871374!
add: anAccountOrPortfolio 
	
	accounts add: anAccountOrPortfolio.
	(anAccountOrPortfolio == self) ifTrue: [self error: self accounts].! !
!Portfolio methodsFor: 'yyy' stamp: 'NNH 11/2/2020 21:22:02' prior: 50872297!
add: anAccountOrPortfolio 
	
	accounts add: anAccountOrPortfolio.
	(anAccountOrPortfolio == self) ifTrue: [self error: self class cannotIncludeItselfErrorDescription].! !

!testRun: #PortfolioTest #test10 stamp: 'NNH 11/2/2020 21:22:15'!
PASSED!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'NNH 11/2/2020 21:23:57'!
test11
	
	| aPortfolio anotherPortfolio |
	
	aPortfolio := Portfolio new.
	anotherPortfolio := Portfolio new.
	anotherPortfolio add: aPortfolio.

	self should: [aPortfolio add: anotherPortfolio]
	raise: Error
	withMessageText: Portfolio cannotIncludeItselfErrorDescription.! !

!testRun: #PortfolioTest #test11 stamp: 'NNH 11/2/2020 21:24:03'!
FAILURE!

!testRun: #PortfolioTest #test11 stamp: 'NNH 11/2/2020 21:24:03'!
FAILURE!
!Portfolio methodsFor: 'yyy' stamp: 'NNH 11/2/2020 21:27:03' prior: 50872304!
add: anAccountOrPortfolio 
	
	accounts add: anAccountOrPortfolio.
	((anAccountOrPortfolio isKindOf: Portfolio) 
	and: [anAccountOrPortfolio containsPortfolio: anAccountOrPortfolio])
	ifTrue: [self error: self class cannotIncludeItselfErrorDescription].! !

!testRun: #PortfolioTest #test11 stamp: 'NNH 11/2/2020 21:27:09'!
ERROR!
!Portfolio methodsFor: 'dsdasd' stamp: 'NNH 11/2/2020 21:27:17'!
containsPortfolio: aPortfolio 
	self shouldBeImplemented.! !
!Portfolio methodsFor: 'dsdasd' stamp: 'NNH 11/2/2020 21:29:29' prior: 50872344!
containsPortfolio: aPortfolio 
	
	(aPortfolio == self) ifTrue: [^true].
	accounts do: [:anAccountOrPortfolio | 
		(anAccountOrPortfolio isKindOf: anAccountOrPortfolio) and: [
				]
		]! !
!Portfolio methodsFor: 'dsdasd' stamp: 'NNH 11/2/2020 21:30:49' prior: 50872349!
containsPortfolio: aPortfolio 
	
	(aPortfolio == self) ifTrue: [^true].
	accounts do: [:anAccountOrPortfolio | 
		((anAccountOrPortfolio isKindOf: anAccountOrPortfolio) and: [
				anAccountOrPortfolio containsPortfolio: aPortfolio]) ifTrue: [^true]
		].
	^false.! !
!Portfolio methodsFor: 'dsdasd' stamp: 'NNH 11/2/2020 21:31:06' prior: 50872358!
containsPortfolio: aPortfolio 
	
	(aPortfolio == self) ifTrue: [^true].
	accounts do: [:anAccountOrPortfolio | 
		((anAccountOrPortfolio isKindOf: anAccountOrPortfolio) 
		and: [anAccountOrPortfolio containsPortfolio: aPortfolio]) 
		ifTrue: [^true]
		].
	^false.! !

!testRun: #PortfolioTest #test11 stamp: 'NNH 11/2/2020 21:31:10'!
ERROR!

!testRun: #PortfolioTest #test11 stamp: 'NNH 11/2/2020 21:31:18'!
ERROR!

!testRun: #PortfolioTest #test11 stamp: 'NNH 11/2/2020 21:31:18'!
ERROR!

!testRun: #PortfolioTest #test11 stamp: 'NNH 11/2/2020 21:31:58'!
ERROR!

!testRun: #PortfolioTest #test11 stamp: 'NNH 11/2/2020 21:31:58'!
ERROR!
!Portfolio methodsFor: 'dsdasd' stamp: 'NNH 11/2/2020 21:35:18' prior: 50872369!
containsPortfolio: aPortfolio 
	
	(accounts includes: self) ifTrue: [^true].
	accounts do: [:anAccountOrPortfolio | 
		((anAccountOrPortfolio isKindOf: anAccountOrPortfolio) 
		and: [anAccountOrPortfolio containsPortfolio: aPortfolio]) 
		ifTrue: [^true]
		].
	^false.! !

!testRun: #PortfolioTest #test11 stamp: 'NNH 11/2/2020 21:35:20'!
FAILURE!

!testRun: #PortfolioTest #test10 stamp: 'NNH 11/2/2020 21:35:36'!
PASSED!

!testRun: #PortfolioTest #test11 stamp: 'NNH 11/2/2020 21:35:41'!
FAILURE!

!testRun: #PortfolioTest #test11 stamp: 'NNH 11/2/2020 21:35:41'!
FAILURE!

!testRun: #PortfolioTest #test11 stamp: 'NNH 11/2/2020 21:35:49'!
FAILURE!

!testRun: #PortfolioTest #test11 stamp: 'NNH 11/2/2020 21:35:49'!
FAILURE!
!Portfolio methodsFor: 'dsdasd' stamp: 'NNH 11/2/2020 21:39:27' prior: 50872392!
containsPortfolio: aPortfolio 
	
	(accounts includes: self) ifTrue: [^true].
	accounts do: [:anAccountOrPortfolio | 
		((anAccountOrPortfolio isKindOf: Portfolio) 
		and: [anAccountOrPortfolio containsPortfolio: aPortfolio]) 
		ifTrue: [^true]
		].
	^false.! !
!Portfolio methodsFor: 'dsdasd' stamp: 'NNH 11/2/2020 21:40:58' prior: 50872418!
containsPortfolio: aPortfolio 
	
	(accounts anySatisfy: [:anAccountOrPortfolio | anAccountOrPortfolio == aPortfolio]) ifTrue: [^true].
	accounts do: [:anAccountOrPortfolio | 
		((anAccountOrPortfolio isKindOf: Portfolio) 
		and: [anAccountOrPortfolio containsPortfolio: aPortfolio]) 
		ifTrue: [^true]
		].
	^false.! !

!testRun: #PortfolioTest #test11 stamp: 'NNH 11/2/2020 21:41:19'!
PASSED!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'NNH 11/2/2020 21:41:54'!
test12
	
	| aPortfolio anotherPortfolio |
	
	aPortfolio := Portfolio new.
	anotherPortfolio := Portfolio new.
	anotherPortfolio add: aPortfolio.

	self should: [aPortfolio add: anotherPortfolio]
	raise: Error
	withMessageText: Portfolio cannotIncludeItselfErrorDescription.! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'NNH 11/2/2020 21:42:14' prior: 50872444!
test12
	
	| aPortfolio anotherPortfolio |
	
	aPortfolio := Portfolio new.
	anotherPortfolio := Portfolio new.
	aPortfolio add: anotherPortfolio.

	self should: [anotherPortfolio add: aPortfolio]
	raise: Error
	withMessageText: Portfolio cannotIncludeItselfErrorDescription.! !

!testRun: #PortfolioTest #test12 stamp: 'NNH 11/2/2020 21:42:18'!
PASSED!

!methodRemoval: PortfolioTest #test12 stamp: 'NNH 11/2/2020 21:42:24'!
test12
	
	| aPortfolio anotherPortfolio |
	
	aPortfolio := Portfolio new.
	anotherPortfolio := Portfolio new.
	aPortfolio add: anotherPortfolio.

	self should: [anotherPortfolio add: aPortfolio]
	raise: Error
	withMessageText: Portfolio cannotIncludeItselfErrorDescription.!

----SNAPSHOT----(2 November 2020 21:47:22) CuisUniversity-4384.image priorSource: 17155564!

----QUIT----(2 November 2020 21:47:25) CuisUniversity-4384.image priorSource: 17306554!

----STARTUP---- (4 November 2020 18:40:15) as /home/nahuel/Documents/cuisuniversity/CuisUniversity-4384.image!

!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'NNH 11/4/2020 18:58:26'!
test12
	
	| p1 p2 p3 |
	
	p1 := Portfolio new.
	p2 := Portfolio new.
	p3 := Portfolio new.

	p1 add: p2.
	p1 add: p3.


	self should: [p2 add: p3]
	raise: Error
	withMessageText: Portfolio cannotIncludeItselfErrorDescription.! !

!testRun: #PortfolioTest #test12 stamp: 'NNH 11/4/2020 18:58:37'!
FAILURE!

!testRun: #PortfolioTest #test12 stamp: 'NNH 11/4/2020 18:58:37'!
FAILURE!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'NNH 11/4/2020 18:59:54' prior: 50872490!
test12
	
	| p1 p2 p3 |
	
	p1 := Portfolio new.
	p2 := Portfolio new.
	p3 := Portfolio new.

	p1 add: p2.
	p1 add: p3.

	self should: [p2 add: p3]
	raise: Error
	withMessageText: Portfolio cannotIncludeItselfErrorDescription.! !
!Portfolio methodsFor: 'sdasdasd' stamp: 'NNH 11/4/2020 19:05:17'!
addTransactionsTo: aCollectionOfTransactions
	
	^ accounts do: [ :anAccount | anAccount addTransactionsTo: aCollectionOfTransactions ].! !
!ReceptiveAccount methodsFor: 'transactions' stamp: 'NNH 11/4/2020 19:07:22'!
addTransactionsTo: aCollectionOfTransactions
	
	^ aCollectionOfTransactions union: self transactions.! !
!Portfolio methodsFor: 'sdasdasd' stamp: 'NNH 11/4/2020 19:08:04' prior: 50871956!
transactions
	
	self addTransactionsTo: OrderedCollection new.! !
!Portfolio methodsFor: 'sdasdasd' stamp: 'NNH 11/4/2020 19:08:33' prior: 50872528!
transactions
	
	| anOrderedCollection |
	anOrderedCollection := OrderedCollection new.
	self addTransactionsTo: anOrderedCollection.
	^anOrderedCollection.! !
!Portfolio methodsFor: 'sdasdasd' stamp: 'NNH 11/4/2020 19:08:37' prior: 50872533!
transactions
	
	| anOrderedCollection |
	
	anOrderedCollection := OrderedCollection new.
	self addTransactionsTo: anOrderedCollection.
	^anOrderedCollection.! !
!Portfolio methodsFor: 'sdasdasd' stamp: 'NNH 11/4/2020 19:08:56' prior: 50872541!
transactions
	
	| aCollectionOfTransactions |
	
	aCollectionOfTransactions := OrderedCollection new.
	self addTransactionsTo: aCollectionOfTransactions.
	^aCollectionOfTransactions.! !
!Portfolio methodsFor: 'sdasdasd' stamp: 'NNH 11/4/2020 19:09:03' prior: 50872549!
transactions
	
	| aCollectionOfTransactions |
	
	aCollectionOfTransactions := OrderedCollection new.
	self addTransactionsTo: aCollectionOfTransactions.
	
	^aCollectionOfTransactions.! !

!testRun: #PortfolioTest #test01BalanceOfEmptyPortfolioIsZero stamp: 'NNH 11/4/2020 19:09:16'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithOneAccountIsBalanceOfThatAccount stamp: 'NNH 11/4/2020 19:09:16'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioWithMoreThanOneAccountIsSumOfBalances stamp: 'NNH 11/4/2020 19:09:16'!
PASSED!

!testRun: #PortfolioTest #test04EmptyPortfolioHasRegisteredNoTransactions stamp: 'NNH 11/4/2020 19:09:16'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioWithOneAccountRegistersATransactionOfThatAccount stamp: 'NNH 11/4/2020 19:09:16'!
PASSED!

!testRun: #PortfolioTest #test06APortfolioWithMoreThanOneAccountRegistersATransactionThatIsNotFromTheFirstAccount stamp: 'NNH 11/4/2020 19:09:16'!
PASSED!

!testRun: #PortfolioTest #test07EmptyPortfolioHasNoTransactions stamp: 'NNH 11/4/2020 19:09:16'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioWithOneAccountHasTheTransactionsOfThatAccount stamp: 'NNH 11/4/2020 19:09:16'!
FAILURE!

!testRun: #PortfolioTest #test09APortfolioWithMoreThanOneAccountHasTheTransactionsOfItsAccounts stamp: 'NNH 11/4/2020 19:09:16'!
FAILURE!

!testRun: #PortfolioTest #test10 stamp: 'NNH 11/4/2020 19:09:16'!
PASSED!

!testRun: #PortfolioTest #test11 stamp: 'NNH 11/4/2020 19:09:16'!
PASSED!

!testRun: #PortfolioTest #test12 stamp: 'NNH 11/4/2020 19:09:16'!
FAILURE!

^aCollectionOfTransactions!
!ReceptiveAccount methodsFor: 'transactions' stamp: 'NNH 11/4/2020 19:17:57' prior: 50872522!
addTransactionsTo: aCollectionOfTransactions
	
	self transactions do: [:aTransaction | aCollectionOfTransactions add: aTransaction ].! !
!ReceptiveAccount methodsFor: 'transactions' stamp: 'NNH 11/4/2020 19:18:40' prior: 50872611!
addTransactionsTo: aCollectionOfTransactions
	
	self transactions do: [:aTransaction | aCollectionOfTransactions add: aTransaction].! !

!testRun: #PortfolioTest #test01BalanceOfEmptyPortfolioIsZero stamp: 'NNH 11/4/2020 19:18:59'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithOneAccountIsBalanceOfThatAccount stamp: 'NNH 11/4/2020 19:18:59'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioWithMoreThanOneAccountIsSumOfBalances stamp: 'NNH 11/4/2020 19:18:59'!
PASSED!

!testRun: #PortfolioTest #test04EmptyPortfolioHasRegisteredNoTransactions stamp: 'NNH 11/4/2020 19:18:59'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioWithOneAccountRegistersATransactionOfThatAccount stamp: 'NNH 11/4/2020 19:18:59'!
PASSED!

!testRun: #PortfolioTest #test06APortfolioWithMoreThanOneAccountRegistersATransactionThatIsNotFromTheFirstAccount stamp: 'NNH 11/4/2020 19:18:59'!
PASSED!

!testRun: #PortfolioTest #test07EmptyPortfolioHasNoTransactions stamp: 'NNH 11/4/2020 19:18:59'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioWithOneAccountHasTheTransactionsOfThatAccount stamp: 'NNH 11/4/2020 19:18:59'!
PASSED!

!testRun: #PortfolioTest #test09APortfolioWithMoreThanOneAccountHasTheTransactionsOfItsAccounts stamp: 'NNH 11/4/2020 19:18:59'!
PASSED!

!testRun: #PortfolioTest #test10 stamp: 'NNH 11/4/2020 19:18:59'!
PASSED!

!testRun: #PortfolioTest #test11 stamp: 'NNH 11/4/2020 19:18:59'!
PASSED!

!testRun: #PortfolioTest #test12 stamp: 'NNH 11/4/2020 19:18:59'!
FAILURE!

!testRun: #PortfolioTest #test12 stamp: 'NNH 11/4/2020 19:18:59'!
FAILURE!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'NNH 11/4/2020 19:20:03'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'NNH 11/4/2020 19:20:03'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'NNH 11/4/2020 19:20:03'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'NNH 11/4/2020 19:20:03'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'NNH 11/4/2020 19:20:03'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'NNH 11/4/2020 19:20:03'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'NNH 11/4/2020 19:20:03'!
PASSED!
!Portfolio methodsFor: 'yyy' stamp: 'NNH 11/4/2020 19:21:25' prior: 50872331!
add: anAccountOrPortfolio 
	
	((anAccountOrPortfolio isKindOf: Portfolio) 
	and: [anAccountOrPortfolio containsPortfolio: anAccountOrPortfolio])
	ifTrue: [self error: self class cannotIncludeItselfErrorDescription].
	accounts add: anAccountOrPortfolio.! !
!Portfolio methodsFor: 'yyy' stamp: 'NNH 11/4/2020 19:33:34' prior: 50872698!
add: anAccountOrPortfolio 
	
	((anAccountOrPortfolio isKindOf: Portfolio) 
	and: [anAccountOrPortfolio containsPortfolio: anAccountOrPortfolio])
	ifTrue: [self error: self class cannotIncludeItselfErrorDescription].
	(anAccountOrPortfolio parent = self parent) ifTrue: [self error: self class cannotIncludeItselfErrorDescription ].
	
	anAccountOrPortfolio addParent: self.

	
	
	accounts add: anAccountOrPortfolio.! !
!Portfolio methodsFor: 'yyy' stamp: 'NNH 11/4/2020 19:33:49' prior: 50872709!
add: anAccountOrPortfolio 
	
	((anAccountOrPortfolio isKindOf: Portfolio) 
	and: [anAccountOrPortfolio containsPortfolio: anAccountOrPortfolio])
	ifTrue: [self error: self class cannotIncludeItselfErrorDescription].
	anAccountOrPortfolio parent = self parent ifTrue: [self error: self class cannotIncludeItselfErrorDescription ].
	
	anAccountOrPortfolio addParent: self.

	
	
	accounts add: anAccountOrPortfolio.! !

!testRun: #PortfolioTest #test01BalanceOfEmptyPortfolioIsZero stamp: 'NNH 11/4/2020 19:33:54'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithOneAccountIsBalanceOfThatAccount stamp: 'NNH 11/4/2020 19:33:54'!
ERROR!

!testRun: #PortfolioTest #test03BalanceOfPortfolioWithMoreThanOneAccountIsSumOfBalances stamp: 'NNH 11/4/2020 19:33:54'!
ERROR!

!testRun: #PortfolioTest #test04EmptyPortfolioHasRegisteredNoTransactions stamp: 'NNH 11/4/2020 19:33:54'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioWithOneAccountRegistersATransactionOfThatAccount stamp: 'NNH 11/4/2020 19:33:54'!
ERROR!

!testRun: #PortfolioTest #test06APortfolioWithMoreThanOneAccountRegistersATransactionThatIsNotFromTheFirstAccount stamp: 'NNH 11/4/2020 19:33:54'!
ERROR!

!testRun: #PortfolioTest #test07EmptyPortfolioHasNoTransactions stamp: 'NNH 11/4/2020 19:33:54'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioWithOneAccountHasTheTransactionsOfThatAccount stamp: 'NNH 11/4/2020 19:33:54'!
ERROR!

!testRun: #PortfolioTest #test09APortfolioWithMoreThanOneAccountHasTheTransactionsOfItsAccounts stamp: 'NNH 11/4/2020 19:33:54'!
ERROR!

!testRun: #PortfolioTest #test10 stamp: 'NNH 11/4/2020 19:33:54'!
FAILURE!

!testRun: #PortfolioTest #test11 stamp: 'NNH 11/4/2020 19:33:54'!
ERROR!

!testRun: #PortfolioTest #test12 stamp: 'NNH 11/4/2020 19:33:54'!
ERROR!

!testRun: #PortfolioTest #test12 stamp: 'NNH 11/4/2020 19:34:02'!
ERROR!

!testRun: #PortfolioTest #test12 stamp: 'NNH 11/4/2020 19:34:02'!
ERROR!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'NNH 11/4/2020 19:34:16'!
parent
	self shouldBeImplemented.! !

!testRun: #PortfolioTest #test12 stamp: 'NNH 11/4/2020 19:34:31'!
ERROR!

!testRun: #PortfolioTest #test12 stamp: 'NNH 11/4/2020 19:34:31'!
ERROR!

!classDefinition: #Portfolio category: 'Portfolio-Ejercicio' stamp: 'NNH 11/4/2020 19:34:47'!
Object subclass: #Portfolio
	instanceVariableNames: 'accounts parent'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'NNH 11/4/2020 19:34:45' prior: 50872788!
parent
	^ parent.! !

!testRun: #PortfolioTest #test12 stamp: 'NNH 11/4/2020 19:34:54'!
ERROR!

!testRun: #PortfolioTest #test12 stamp: 'NNH 11/4/2020 19:34:54'!
ERROR!

!testRun: #PortfolioTest #test01BalanceOfEmptyPortfolioIsZero stamp: 'NNH 11/4/2020 19:35:33'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithOneAccountIsBalanceOfThatAccount stamp: 'NNH 11/4/2020 19:35:33'!
ERROR!

!testRun: #PortfolioTest #test03BalanceOfPortfolioWithMoreThanOneAccountIsSumOfBalances stamp: 'NNH 11/4/2020 19:35:33'!
ERROR!

!testRun: #PortfolioTest #test04EmptyPortfolioHasRegisteredNoTransactions stamp: 'NNH 11/4/2020 19:35:33'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioWithOneAccountRegistersATransactionOfThatAccount stamp: 'NNH 11/4/2020 19:35:33'!
ERROR!

!testRun: #PortfolioTest #test06APortfolioWithMoreThanOneAccountRegistersATransactionThatIsNotFromTheFirstAccount stamp: 'NNH 11/4/2020 19:35:33'!
ERROR!

!testRun: #PortfolioTest #test07EmptyPortfolioHasNoTransactions stamp: 'NNH 11/4/2020 19:35:33'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioWithOneAccountHasTheTransactionsOfThatAccount stamp: 'NNH 11/4/2020 19:35:33'!
ERROR!

!testRun: #PortfolioTest #test09APortfolioWithMoreThanOneAccountHasTheTransactionsOfItsAccounts stamp: 'NNH 11/4/2020 19:35:33'!
ERROR!

!testRun: #PortfolioTest #test10 stamp: 'NNH 11/4/2020 19:35:33'!
PASSED!

!testRun: #PortfolioTest #test11 stamp: 'NNH 11/4/2020 19:35:33'!
ERROR!

!testRun: #PortfolioTest #test12 stamp: 'NNH 11/4/2020 19:35:33'!
ERROR!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithOneAccountIsBalanceOfThatAccount stamp: 'NNH 11/4/2020 19:35:55'!
ERROR!
!ReceptiveAccount methodsFor: 'fdsfsdf' stamp: 'NNH 11/4/2020 19:36:19'!
parent
	self shouldBeImplemented.! !

!classDefinition: #ReceptiveAccount category: 'Portfolio-Ejercicio' stamp: 'NNH 11/4/2020 19:36:30'!
Object subclass: #ReceptiveAccount
	instanceVariableNames: 'transactions parent'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!
!ReceptiveAccount methodsFor: 'fdsfsdf' stamp: 'NNH 11/4/2020 19:36:28' prior: 50872859!
parent
	^ parent.! !

!testRun: #PortfolioTest #test01BalanceOfEmptyPortfolioIsZero stamp: 'NNH 11/4/2020 19:36:37'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithOneAccountIsBalanceOfThatAccount stamp: 'NNH 11/4/2020 19:36:37'!
ERROR!

!testRun: #PortfolioTest #test03BalanceOfPortfolioWithMoreThanOneAccountIsSumOfBalances stamp: 'NNH 11/4/2020 19:36:37'!
ERROR!

!testRun: #PortfolioTest #test04EmptyPortfolioHasRegisteredNoTransactions stamp: 'NNH 11/4/2020 19:36:37'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioWithOneAccountRegistersATransactionOfThatAccount stamp: 'NNH 11/4/2020 19:36:37'!
ERROR!

!testRun: #PortfolioTest #test06APortfolioWithMoreThanOneAccountRegistersATransactionThatIsNotFromTheFirstAccount stamp: 'NNH 11/4/2020 19:36:37'!
ERROR!

!testRun: #PortfolioTest #test07EmptyPortfolioHasNoTransactions stamp: 'NNH 11/4/2020 19:36:37'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioWithOneAccountHasTheTransactionsOfThatAccount stamp: 'NNH 11/4/2020 19:36:37'!
ERROR!

!testRun: #PortfolioTest #test09APortfolioWithMoreThanOneAccountHasTheTransactionsOfItsAccounts stamp: 'NNH 11/4/2020 19:36:37'!
ERROR!

!testRun: #PortfolioTest #test10 stamp: 'NNH 11/4/2020 19:36:37'!
PASSED!

!testRun: #PortfolioTest #test11 stamp: 'NNH 11/4/2020 19:36:37'!
ERROR!

!testRun: #PortfolioTest #test12 stamp: 'NNH 11/4/2020 19:36:37'!
ERROR!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithOneAccountIsBalanceOfThatAccount stamp: 'NNH 11/4/2020 19:36:54'!
ERROR!

!testRun: #PortfolioTest #test12 stamp: 'NNH 11/4/2020 19:37:23'!
ERROR!

!testRun: #PortfolioTest #test12 stamp: 'NNH 11/4/2020 19:37:23'!
ERROR!
!Portfolio methodsFor: 'yyy' stamp: 'NNH 11/4/2020 19:38:52' prior: 50872725!
add: anAccountOrPortfolio 
	
	((anAccountOrPortfolio isKindOf: Portfolio) 
	and: [anAccountOrPortfolio containsPortfolio: anAccountOrPortfolio])
	ifTrue: [self error: self class cannotIncludeItselfErrorDescription].
	(anAccountOrPortfolio parent = self parent and: [self parent notNil]) ifTrue: [self error: self class cannotIncludeItselfErrorDescription ].
	
	anAccountOrPortfolio addParent: self.

	
	
	accounts add: anAccountOrPortfolio.! !

!testRun: #PortfolioTest #test01BalanceOfEmptyPortfolioIsZero stamp: 'NNH 11/4/2020 19:38:57'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithOneAccountIsBalanceOfThatAccount stamp: 'NNH 11/4/2020 19:38:57'!
ERROR!

!testRun: #PortfolioTest #test03BalanceOfPortfolioWithMoreThanOneAccountIsSumOfBalances stamp: 'NNH 11/4/2020 19:38:57'!
ERROR!

!testRun: #PortfolioTest #test04EmptyPortfolioHasRegisteredNoTransactions stamp: 'NNH 11/4/2020 19:38:57'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioWithOneAccountRegistersATransactionOfThatAccount stamp: 'NNH 11/4/2020 19:38:57'!
ERROR!

!testRun: #PortfolioTest #test06APortfolioWithMoreThanOneAccountRegistersATransactionThatIsNotFromTheFirstAccount stamp: 'NNH 11/4/2020 19:38:57'!
ERROR!

!testRun: #PortfolioTest #test07EmptyPortfolioHasNoTransactions stamp: 'NNH 11/4/2020 19:38:57'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioWithOneAccountHasTheTransactionsOfThatAccount stamp: 'NNH 11/4/2020 19:38:57'!
ERROR!

!testRun: #PortfolioTest #test09APortfolioWithMoreThanOneAccountHasTheTransactionsOfItsAccounts stamp: 'NNH 11/4/2020 19:38:57'!
ERROR!

!testRun: #PortfolioTest #test10 stamp: 'NNH 11/4/2020 19:38:57'!
FAILURE!

!testRun: #PortfolioTest #test11 stamp: 'NNH 11/4/2020 19:38:57'!
ERROR!

!testRun: #PortfolioTest #test12 stamp: 'NNH 11/4/2020 19:38:57'!
ERROR!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithOneAccountIsBalanceOfThatAccount stamp: 'NNH 11/4/2020 19:39:03'!
ERROR!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithOneAccountIsBalanceOfThatAccount stamp: 'NNH 11/4/2020 19:39:03'!
ERROR!
!ReceptiveAccount methodsFor: 'fsdfs' stamp: 'NNH 11/4/2020 19:39:14'!
addParent: aPortfolio 
	self shouldBeImplemented.! !
!ReceptiveAccount methodsFor: 'fsdfs' stamp: 'NNH 11/4/2020 19:39:36' prior: 50872994!
addParent: aPortfolio 
	parent := aPortfolio.! !

!testRun: #PortfolioTest #test01BalanceOfEmptyPortfolioIsZero stamp: 'NNH 11/4/2020 19:39:43'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithOneAccountIsBalanceOfThatAccount stamp: 'NNH 11/4/2020 19:39:43'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioWithMoreThanOneAccountIsSumOfBalances stamp: 'NNH 11/4/2020 19:39:43'!
PASSED!

!testRun: #PortfolioTest #test04EmptyPortfolioHasRegisteredNoTransactions stamp: 'NNH 11/4/2020 19:39:43'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioWithOneAccountRegistersATransactionOfThatAccount stamp: 'NNH 11/4/2020 19:39:43'!
PASSED!

!testRun: #PortfolioTest #test06APortfolioWithMoreThanOneAccountRegistersATransactionThatIsNotFromTheFirstAccount stamp: 'NNH 11/4/2020 19:39:43'!
PASSED!

!testRun: #PortfolioTest #test07EmptyPortfolioHasNoTransactions stamp: 'NNH 11/4/2020 19:39:43'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioWithOneAccountHasTheTransactionsOfThatAccount stamp: 'NNH 11/4/2020 19:39:43'!
PASSED!

!testRun: #PortfolioTest #test09APortfolioWithMoreThanOneAccountHasTheTransactionsOfItsAccounts stamp: 'NNH 11/4/2020 19:39:43'!
PASSED!

!testRun: #PortfolioTest #test10 stamp: 'NNH 11/4/2020 19:39:43'!
FAILURE!

!testRun: #PortfolioTest #test11 stamp: 'NNH 11/4/2020 19:39:43'!
ERROR!

!testRun: #PortfolioTest #test12 stamp: 'NNH 11/4/2020 19:39:43'!
ERROR!

!testRun: #PortfolioTest #test11 stamp: 'NNH 11/4/2020 19:39:48'!
ERROR!

!testRun: #PortfolioTest #test11 stamp: 'NNH 11/4/2020 19:39:48'!
ERROR!
!Portfolio methodsFor: 'fdssdfsdf' stamp: 'NNH 11/4/2020 19:39:58'!
addParent: aPortfolio 
	self shouldBeImplemented.! !

!testRun: #PortfolioTest #test11 stamp: 'NNH 11/4/2020 19:40:12'!
ERROR!

!testRun: #PortfolioTest #test11 stamp: 'NNH 11/4/2020 19:40:12'!
ERROR!
!Portfolio methodsFor: 'error handling' stamp: 'NNH 11/4/2020 19:40:16' overrides: 16881409!
error: aString 
	self shouldBeImplemented.! !

!methodRemoval: Portfolio #error: stamp: 'NNH 11/4/2020 19:40:38'!
error: aString 
	self shouldBeImplemented.!

!testRun: #PortfolioTest #test01BalanceOfEmptyPortfolioIsZero stamp: 'NNH 11/4/2020 19:40:46'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithOneAccountIsBalanceOfThatAccount stamp: 'NNH 11/4/2020 19:40:46'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioWithMoreThanOneAccountIsSumOfBalances stamp: 'NNH 11/4/2020 19:40:46'!
PASSED!

!testRun: #PortfolioTest #test04EmptyPortfolioHasRegisteredNoTransactions stamp: 'NNH 11/4/2020 19:40:46'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioWithOneAccountRegistersATransactionOfThatAccount stamp: 'NNH 11/4/2020 19:40:46'!
PASSED!

!testRun: #PortfolioTest #test06APortfolioWithMoreThanOneAccountRegistersATransactionThatIsNotFromTheFirstAccount stamp: 'NNH 11/4/2020 19:40:46'!
PASSED!

!testRun: #PortfolioTest #test07EmptyPortfolioHasNoTransactions stamp: 'NNH 11/4/2020 19:40:46'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioWithOneAccountHasTheTransactionsOfThatAccount stamp: 'NNH 11/4/2020 19:40:46'!
PASSED!

!testRun: #PortfolioTest #test09APortfolioWithMoreThanOneAccountHasTheTransactionsOfItsAccounts stamp: 'NNH 11/4/2020 19:40:46'!
PASSED!

!testRun: #PortfolioTest #test10 stamp: 'NNH 11/4/2020 19:40:46'!
FAILURE!

!testRun: #PortfolioTest #test11 stamp: 'NNH 11/4/2020 19:40:46'!
ERROR!

!testRun: #PortfolioTest #test12 stamp: 'NNH 11/4/2020 19:40:46'!
ERROR!
!Portfolio methodsFor: 'fdssdfsdf' stamp: 'NNH 11/4/2020 19:41:30' prior: 50873050!
addParent: aPortfolio 
	^ parent := aPortfolio.! !

!testRun: #PortfolioTest #test01BalanceOfEmptyPortfolioIsZero stamp: 'NNH 11/4/2020 19:41:36'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithOneAccountIsBalanceOfThatAccount stamp: 'NNH 11/4/2020 19:41:36'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioWithMoreThanOneAccountIsSumOfBalances stamp: 'NNH 11/4/2020 19:41:36'!
PASSED!

!testRun: #PortfolioTest #test04EmptyPortfolioHasRegisteredNoTransactions stamp: 'NNH 11/4/2020 19:41:36'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioWithOneAccountRegistersATransactionOfThatAccount stamp: 'NNH 11/4/2020 19:41:36'!
PASSED!

!testRun: #PortfolioTest #test06APortfolioWithMoreThanOneAccountRegistersATransactionThatIsNotFromTheFirstAccount stamp: 'NNH 11/4/2020 19:41:36'!
PASSED!

!testRun: #PortfolioTest #test07EmptyPortfolioHasNoTransactions stamp: 'NNH 11/4/2020 19:41:36'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioWithOneAccountHasTheTransactionsOfThatAccount stamp: 'NNH 11/4/2020 19:41:36'!
PASSED!

!testRun: #PortfolioTest #test09APortfolioWithMoreThanOneAccountHasTheTransactionsOfItsAccounts stamp: 'NNH 11/4/2020 19:41:36'!
PASSED!

!testRun: #PortfolioTest #test10 stamp: 'NNH 11/4/2020 19:41:36'!
FAILURE!

!testRun: #PortfolioTest #test11 stamp: 'NNH 11/4/2020 19:41:36'!
FAILURE!

!testRun: #PortfolioTest #test12 stamp: 'NNH 11/4/2020 19:41:36'!
PASSED!

!testRun: #PortfolioTest #test10 stamp: 'NNH 11/4/2020 19:41:43'!
FAILURE!

!testRun: #PortfolioTest #test10 stamp: 'NNH 11/4/2020 19:41:43'!
FAILURE!
!Portfolio methodsFor: 'dsdasd' stamp: 'NNH 11/2/2020 21:35:18' prior: 50872429!
containsPortfolio: aPortfolio 
	
	(accounts includes: self) ifTrue: [^true].
	accounts do: [:anAccountOrPortfolio | 
		((anAccountOrPortfolio isKindOf: anAccountOrPortfolio) 
		and: [anAccountOrPortfolio containsPortfolio: aPortfolio]) 
		ifTrue: [^true]
		].
	^false.! !
!Portfolio methodsFor: 'dsdasd' stamp: 'NNH 11/4/2020 19:45:33' prior: 50873163!
containsPortfolio: aPortfolio 
	
	aPortfolio == self ifTrue: [^true].
	accounts do: [:anAccountOrPortfolio | 
		((anAccountOrPortfolio isKindOf: anAccountOrPortfolio) 
		and: [anAccountOrPortfolio containsPortfolio: aPortfolio]) 
		ifTrue: [^true]
		].
	^false.! !
!Portfolio methodsFor: 'dsdasd' stamp: 'NNH 11/4/2020 19:46:16' prior: 50873175!
containsPortfolio: aPortfolio 
	
	aPortfolio == self ifTrue: [^true].
	accounts do: [:anAccountOrPortfolio | 
		((anAccountOrPortfolio isKindOf: Portfolio) 
		and: [anAccountOrPortfolio containsPortfolio: aPortfolio]) 
		ifTrue: [^true]
		].
	^false.! !
!Portfolio methodsFor: 'dsdasd' stamp: 'NNH 11/4/2020 19:47:16' prior: 50873186!
containsPortfolio: aPortfolio 
	
	aPortfolio == self ifTrue: [^true].
	accounts do: [:anAccountOrPortfolio | (anAccountOrPortfolio containsAccount: aPortfolio) ifTrue: [^true]
		].
	^false.! !
!Portfolio methodsFor: 'dsdasd' stamp: 'NNH 11/4/2020 19:48:08' prior: 50873197!
containsPortfolio: aPortfolio 
	
	aPortfolio == self ifTrue: [^true].
	^ accounts anySatisfy: [:anAccountOrPortfolio | (anAccountOrPortfolio containsAccount: aPortfolio) ]! !
!Portfolio methodsFor: 'dsdasd' stamp: 'NNH 11/4/2020 19:48:15'!
containsAccount: aPortfolio 
	
	aPortfolio == self ifTrue: [^true].
	^ accounts anySatisfy: [:anAccountOrPortfolio | (anAccountOrPortfolio containsAccount: aPortfolio) ]! !
!ReceptiveAccount methodsFor: 'fsdfs' stamp: 'NNH 11/4/2020 19:48:50'!
containsAccount: anAccount 
	
	^ self == anAccount.! !

!methodRemoval: Portfolio #containsPortfolio: stamp: 'NNH 11/4/2020 19:49:01'!
containsPortfolio: aPortfolio 
	
	aPortfolio == self ifTrue: [^true].
	^ accounts anySatisfy: [:anAccountOrPortfolio | (anAccountOrPortfolio containsAccount: aPortfolio) ]!
!Portfolio methodsFor: 'yyy' stamp: 'NNH 11/4/2020 19:49:52' prior: 50872927!
add: anAccountOrPortfolio 
	
	(anAccountOrPortfolio containsAccount: self) ifTrue: [self error: self class cannotIncludeItselfErrorDescription].
	(anAccountOrPortfolio parent = self parent and: [self parent notNil]) ifTrue: [self error: self class cannotIncludeItselfErrorDescription ].
	
	anAccountOrPortfolio addParent: self.

	
	
	accounts add: anAccountOrPortfolio.! !
!Portfolio methodsFor: 'yyy' stamp: 'NNH 11/4/2020 19:49:58' prior: 50873235!
add: anAccountOrPortfolio 
	
	(anAccountOrPortfolio containsAccount: self) ifTrue: [self error: self class cannotIncludeItselfErrorDescription].
	(anAccountOrPortfolio parent = self parent and: [self parent notNil]) ifTrue: [self error: self class cannotIncludeItselfErrorDescription ].
	
	anAccountOrPortfolio addParent: self.	
	accounts add: anAccountOrPortfolio.! !

!testRun: #PortfolioTest #test01BalanceOfEmptyPortfolioIsZero stamp: 'NNH 11/4/2020 19:50:03'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithOneAccountIsBalanceOfThatAccount stamp: 'NNH 11/4/2020 19:50:03'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioWithMoreThanOneAccountIsSumOfBalances stamp: 'NNH 11/4/2020 19:50:03'!
PASSED!

!testRun: #PortfolioTest #test04EmptyPortfolioHasRegisteredNoTransactions stamp: 'NNH 11/4/2020 19:50:03'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioWithOneAccountRegistersATransactionOfThatAccount stamp: 'NNH 11/4/2020 19:50:03'!
PASSED!

!testRun: #PortfolioTest #test06APortfolioWithMoreThanOneAccountRegistersATransactionThatIsNotFromTheFirstAccount stamp: 'NNH 11/4/2020 19:50:03'!
PASSED!

!testRun: #PortfolioTest #test07EmptyPortfolioHasNoTransactions stamp: 'NNH 11/4/2020 19:50:03'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioWithOneAccountHasTheTransactionsOfThatAccount stamp: 'NNH 11/4/2020 19:50:03'!
PASSED!

!testRun: #PortfolioTest #test09APortfolioWithMoreThanOneAccountHasTheTransactionsOfItsAccounts stamp: 'NNH 11/4/2020 19:50:03'!
PASSED!

!testRun: #PortfolioTest #test10 stamp: 'NNH 11/4/2020 19:50:03'!
PASSED!

!testRun: #PortfolioTest #test11 stamp: 'NNH 11/4/2020 19:50:03'!
PASSED!

!testRun: #PortfolioTest #test12 stamp: 'NNH 11/4/2020 19:50:03'!
PASSED!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'NNH 11/4/2020 19:50:42' prior: 50872505!
test12
	
	| p1 p2 p3 |
	
	p1 := Portfolio new.
	p2 := Portfolio new.
	p3 := Portfolio new.

	p1 add: p2.
	p1 add: p3.

	self should: [p1 add: p2]
	raise: Error
	withMessageText: Portfolio cannotIncludeItselfErrorDescription.! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'NNH 11/4/2020 19:51:01'!
test13
	
	| p1 p2 p3 |
	
	p1 := Portfolio new.
	p2 := Portfolio new.
	p3 := Portfolio new.

	p1 add: p3.
	p2 add: p3.

	self should: [p1 add: p2]
	raise: Error
	withMessageText: Portfolio cannotIncludeItselfErrorDescription.! !

!testRun: #PortfolioTest #test13 stamp: 'NNH 11/4/2020 19:51:07'!
FAILURE!

!testRun: #PortfolioTest #test13 stamp: 'NNH 11/4/2020 19:51:07'!
FAILURE!

anAccountOrPortfolio containsAccount: self!

(anAccountOrPortfolio parent = self parent and: [self parent notNil])!
!Portfolio methodsFor: 'sdasdasd' stamp: 'NNH 11/4/2020 20:11:17'!
descendants
	
	| aCollectionOfDescendants |
	
	aCollectionOfDescendants := OrderedCollection new.
	self addDescandantTo: aCollectionOfDescendants.
	
	^aCollectionOfDescendants.! !
!Portfolio methodsFor: 'sdasdasd' stamp: 'NNH 11/4/2020 20:11:35'!
addDescendantTo: aCollectionOfDescendant
	
	^ accounts do: [ :anAccount | anAccount addTransactionsTo: aCollectionOfDescendant ].! !
!Portfolio methodsFor: 'sdasdasd' stamp: 'NNH 11/4/2020 20:11:48' prior: 50873344!
addDescendantTo: aCollectionOfDescendant
	
	^ accounts do: [ :anAccount | anAccount addDescendantTo: aCollectionOfDescendant ].! !
!Portfolio methodsFor: 'sdasdasd' stamp: 'NNH 11/4/2020 20:12:03' prior: 50873351!
addDescendantTo: aCollectionOfDescendant
	
	^ accounts do: [ :anAccount | anAccount addDescendantTo: aCollectionOfDescendant ].! !
!Portfolio methodsFor: 'sdasdasd' stamp: 'NNH 11/4/2020 20:12:36' prior: 50873358!
addDescendantTo: aCollectionOfDescendants
	
	aCollectionOfDescendants add: self.
	^ accounts do: [ :anAccount | anAccount addDescendantTo: aCollectionOfDescendants ].! !
!ReceptiveAccount methodsFor: 'transactions' stamp: 'NNH 11/4/2020 20:13:06'!
addDescendantTo: aCollectionOfDescendants
	
	aCollectionOfDescendants add: self.! !
!Portfolio methodsFor: 'sdasdasd' stamp: 'NNH 11/4/2020 20:13:40' prior: 50873365!
addDescendantTo: aCollectionOfDescendants
	
	aCollectionOfDescendants add: self.
	accounts do: [ :anAccount | anAccount addDescendantTo: aCollectionOfDescendants ].! !
!Portfolio methodsFor: 'sdasdasd' stamp: 'NNH 11/4/2020 20:13:45' prior: 50872515!
addTransactionsTo: aCollectionOfTransactions
	
	accounts do: [ :anAccount | anAccount addTransactionsTo: aCollectionOfTransactions ].! !
!Portfolio methodsFor: 'yyy' stamp: 'NNH 11/4/2020 20:15:02' prior: 50873250!
add: anAccountOrPortfolio 
	
	(anAccountOrPortfolio containsAccount: self) ifTrue: [self error: self class cannotIncludeItselfErrorDescription].
	(anAccountOrPortfolio parent = self parent and: [self parent notNil]) ifTrue: [self error: self class cannotIncludeItselfErrorDescription ].
	(self descendants intersection: anAccountOrPortfolio descendants) ifNotEmpty: [self error: self class cannotIncludeItselfErrorDescription ].
	
	anAccountOrPortfolio addParent: self.	
	accounts add: anAccountOrPortfolio.! !

!testRun: #PortfolioTest #test01BalanceOfEmptyPortfolioIsZero stamp: 'NNH 11/4/2020 20:15:40'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithOneAccountIsBalanceOfThatAccount stamp: 'NNH 11/4/2020 20:15:40'!
ERROR!

!testRun: #PortfolioTest #test03BalanceOfPortfolioWithMoreThanOneAccountIsSumOfBalances stamp: 'NNH 11/4/2020 20:15:40'!
ERROR!

!testRun: #PortfolioTest #test04EmptyPortfolioHasRegisteredNoTransactions stamp: 'NNH 11/4/2020 20:15:40'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioWithOneAccountRegistersATransactionOfThatAccount stamp: 'NNH 11/4/2020 20:15:40'!
ERROR!

!testRun: #PortfolioTest #test06APortfolioWithMoreThanOneAccountRegistersATransactionThatIsNotFromTheFirstAccount stamp: 'NNH 11/4/2020 20:15:40'!
ERROR!

!testRun: #PortfolioTest #test07EmptyPortfolioHasNoTransactions stamp: 'NNH 11/4/2020 20:15:40'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioWithOneAccountHasTheTransactionsOfThatAccount stamp: 'NNH 11/4/2020 20:15:40'!
ERROR!

!testRun: #PortfolioTest #test09APortfolioWithMoreThanOneAccountHasTheTransactionsOfItsAccounts stamp: 'NNH 11/4/2020 20:15:40'!
ERROR!

!testRun: #PortfolioTest #test10 stamp: 'NNH 11/4/2020 20:15:40'!
PASSED!

!testRun: #PortfolioTest #test11 stamp: 'NNH 11/4/2020 20:15:40'!
ERROR!

!testRun: #PortfolioTest #test12 stamp: 'NNH 11/4/2020 20:15:40'!
ERROR!

!testRun: #PortfolioTest #test13 stamp: 'NNH 11/4/2020 20:15:40'!
ERROR!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithOneAccountIsBalanceOfThatAccount stamp: 'NNH 11/4/2020 20:15:51'!
ERROR!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithOneAccountIsBalanceOfThatAccount stamp: 'NNH 11/4/2020 20:15:51'!
ERROR!
!Portfolio methodsFor: 'sdasdasd' stamp: 'NNH 11/4/2020 20:16:13' prior: 50873336!
descendants
	
	| aCollectionOfDescendants |
	
	aCollectionOfDescendants := OrderedCollection new.
	self addDescendantTo: aCollectionOfDescendants.
	
	^aCollectionOfDescendants.! !
!Portfolio methodsFor: 'sdasdasd' stamp: 'NNH 11/4/2020 20:16:30'!
addDescendantsTo: aCollectionOfDescendants
	
	aCollectionOfDescendants add: self.
	accounts do: [ :anAccount | anAccount addDescendantTo: aCollectionOfDescendants ].! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'NNH 11/4/2020 20:16:30' prior: 50873466!
descendants
	
	| aCollectionOfDescendants |
	
	aCollectionOfDescendants := OrderedCollection new.
	self addDescendantsTo: aCollectionOfDescendants.
	
	^aCollectionOfDescendants.! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'NNH 11/4/2020 20:16:30' prior: 50873379!
addDescendantTo: aCollectionOfDescendants
	
	aCollectionOfDescendants add: self.
	accounts do: [ :anAccount | anAccount addDescendantsTo: aCollectionOfDescendants ].! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'NNH 11/4/2020 20:16:30' prior: 50873474!
addDescendantsTo: aCollectionOfDescendants
	
	aCollectionOfDescendants add: self.
	accounts do: [ :anAccount | anAccount addDescendantsTo: aCollectionOfDescendants ].! !

!methodRemoval: Portfolio #addDescendantTo: stamp: 'NNH 11/4/2020 20:16:30'!
addDescendantTo: aCollectionOfDescendants
	
	aCollectionOfDescendants add: self.
	accounts do: [ :anAccount | anAccount addDescendantsTo: aCollectionOfDescendants ].!
!ReceptiveAccount methodsFor: 'transactions' stamp: 'NNH 11/4/2020 20:16:39'!
addDescendantsTo: aCollectionOfDescendants
	
	aCollectionOfDescendants add: self.! !

!methodRemoval: ReceptiveAccount #addDescendantTo: stamp: 'NNH 11/4/2020 20:16:39'!
addDescendantTo: aCollectionOfDescendants
	
	aCollectionOfDescendants add: self.!

!testRun: #PortfolioTest #test01BalanceOfEmptyPortfolioIsZero stamp: 'NNH 11/4/2020 20:16:45'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithOneAccountIsBalanceOfThatAccount stamp: 'NNH 11/4/2020 20:16:45'!
ERROR!

!testRun: #PortfolioTest #test03BalanceOfPortfolioWithMoreThanOneAccountIsSumOfBalances stamp: 'NNH 11/4/2020 20:16:45'!
ERROR!

!testRun: #PortfolioTest #test04EmptyPortfolioHasRegisteredNoTransactions stamp: 'NNH 11/4/2020 20:16:45'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioWithOneAccountRegistersATransactionOfThatAccount stamp: 'NNH 11/4/2020 20:16:45'!
ERROR!

!testRun: #PortfolioTest #test06APortfolioWithMoreThanOneAccountRegistersATransactionThatIsNotFromTheFirstAccount stamp: 'NNH 11/4/2020 20:16:45'!
ERROR!

!testRun: #PortfolioTest #test07EmptyPortfolioHasNoTransactions stamp: 'NNH 11/4/2020 20:16:45'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioWithOneAccountHasTheTransactionsOfThatAccount stamp: 'NNH 11/4/2020 20:16:45'!
ERROR!

!testRun: #PortfolioTest #test09APortfolioWithMoreThanOneAccountHasTheTransactionsOfItsAccounts stamp: 'NNH 11/4/2020 20:16:45'!
ERROR!

!testRun: #PortfolioTest #test10 stamp: 'NNH 11/4/2020 20:16:45'!
PASSED!

!testRun: #PortfolioTest #test11 stamp: 'NNH 11/4/2020 20:16:45'!
PASSED!

!testRun: #PortfolioTest #test12 stamp: 'NNH 11/4/2020 20:16:45'!
PASSED!

!testRun: #PortfolioTest #test13 stamp: 'NNH 11/4/2020 20:16:45'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithOneAccountIsBalanceOfThatAccount stamp: 'NNH 11/4/2020 20:16:53'!
ERROR!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithOneAccountIsBalanceOfThatAccount stamp: 'NNH 11/4/2020 20:16:53'!
ERROR!
!ReceptiveAccount methodsFor: 'transactions' stamp: 'NNH 11/4/2020 20:17:33'!
descendants
	
	^ OrderedCollection new.! !
!ReceptiveAccount methodsFor: 'transactions' stamp: 'NNH 11/4/2020 20:18:19' prior: 50873581!
descendants
	
	^ {self}.! !

!testRun: #PortfolioTest #test01BalanceOfEmptyPortfolioIsZero stamp: 'NNH 11/4/2020 20:18:52'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithOneAccountIsBalanceOfThatAccount stamp: 'NNH 11/4/2020 20:18:52'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioWithMoreThanOneAccountIsSumOfBalances stamp: 'NNH 11/4/2020 20:18:52'!
PASSED!

!testRun: #PortfolioTest #test04EmptyPortfolioHasRegisteredNoTransactions stamp: 'NNH 11/4/2020 20:18:52'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioWithOneAccountRegistersATransactionOfThatAccount stamp: 'NNH 11/4/2020 20:18:52'!
PASSED!

!testRun: #PortfolioTest #test06APortfolioWithMoreThanOneAccountRegistersATransactionThatIsNotFromTheFirstAccount stamp: 'NNH 11/4/2020 20:18:52'!
PASSED!

!testRun: #PortfolioTest #test07EmptyPortfolioHasNoTransactions stamp: 'NNH 11/4/2020 20:18:52'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioWithOneAccountHasTheTransactionsOfThatAccount stamp: 'NNH 11/4/2020 20:18:52'!
PASSED!

!testRun: #PortfolioTest #test09APortfolioWithMoreThanOneAccountHasTheTransactionsOfItsAccounts stamp: 'NNH 11/4/2020 20:18:52'!
PASSED!

!testRun: #PortfolioTest #test10 stamp: 'NNH 11/4/2020 20:18:52'!
PASSED!

!testRun: #PortfolioTest #test11 stamp: 'NNH 11/4/2020 20:18:52'!
PASSED!

!testRun: #PortfolioTest #test12 stamp: 'NNH 11/4/2020 20:18:52'!
PASSED!

!testRun: #PortfolioTest #test13 stamp: 'NNH 11/4/2020 20:18:52'!
PASSED!

!testRun: #PortfolioTest #test01BalanceOfEmptyPortfolioIsZero stamp: 'NNH 11/4/2020 20:19:03'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithOneAccountIsBalanceOfThatAccount stamp: 'NNH 11/4/2020 20:19:03'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioWithMoreThanOneAccountIsSumOfBalances stamp: 'NNH 11/4/2020 20:19:03'!
PASSED!

!testRun: #PortfolioTest #test04EmptyPortfolioHasRegisteredNoTransactions stamp: 'NNH 11/4/2020 20:19:03'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioWithOneAccountRegistersATransactionOfThatAccount stamp: 'NNH 11/4/2020 20:19:03'!
PASSED!

!testRun: #PortfolioTest #test06APortfolioWithMoreThanOneAccountRegistersATransactionThatIsNotFromTheFirstAccount stamp: 'NNH 11/4/2020 20:19:03'!
PASSED!

!testRun: #PortfolioTest #test07EmptyPortfolioHasNoTransactions stamp: 'NNH 11/4/2020 20:19:03'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioWithOneAccountHasTheTransactionsOfThatAccount stamp: 'NNH 11/4/2020 20:19:03'!
PASSED!

!testRun: #PortfolioTest #test09APortfolioWithMoreThanOneAccountHasTheTransactionsOfItsAccounts stamp: 'NNH 11/4/2020 20:19:03'!
PASSED!

!testRun: #PortfolioTest #test10 stamp: 'NNH 11/4/2020 20:19:03'!
PASSED!

!testRun: #PortfolioTest #test11 stamp: 'NNH 11/4/2020 20:19:03'!
PASSED!

!testRun: #PortfolioTest #test12 stamp: 'NNH 11/4/2020 20:19:03'!
PASSED!

!testRun: #PortfolioTest #test13 stamp: 'NNH 11/4/2020 20:19:03'!
PASSED!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'NNH 11/4/2020 20:21:50'!
test14
	
	| p1 p2 p3 p4 |
	
	p1 := Portfolio new.
	p2 := Portfolio new.
	p3 := Portfolio new.
	p4 := Portfolio new.

	p1 add: p2.
	p3 add: p2.
	p3 add: p4.

	self should: [p1 add: p4]
	raise: Error
	withMessageText: Portfolio cannotIncludeItselfErrorDescription.! !

!testRun: #PortfolioTest #test14 stamp: 'NNH 11/4/2020 20:21:57'!
FAILURE!

!testRun: #PortfolioTest #test14 stamp: 'NNH 11/4/2020 20:21:58'!
FAILURE!

!classDefinition: #Portfolio category: 'Portfolio-Ejercicio' stamp: 'NNH 11/4/2020 20:22:26'!
Object subclass: #Portfolio
	instanceVariableNames: 'accounts parent parents'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!
!Portfolio methodsFor: 'xxx' stamp: 'NNH 11/4/2020 20:22:24' prior: 50871474 overrides: 16896425!
initialize
	
	accounts := OrderedCollection new.
	parents := OrderedCollection new.! !

Object subclass: #Portfolio
	instanceVariableNames: 'accounts parents'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classDefinition: #Portfolio category: 'Portfolio-Ejercicio' stamp: 'NNH 11/4/2020 20:22:36'!
Object subclass: #Portfolio
	instanceVariableNames: 'accounts parents'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!
!Portfolio methodsFor: 'fdssdfsdf' stamp: 'NNH 11/4/2020 20:22:47' prior: 50873111!
addParent: aPortfolio 
	
	parents add: aPortfolio.! !
!Portfolio methodsFor: 'yyy' stamp: 'NNH 11/4/2020 20:23:42' prior: 50873394!
add: anAccountOrPortfolio 
	
	(anAccountOrPortfolio containsAccount: self) ifTrue: [self error: self class cannotIncludeItselfErrorDescription].
	(self parents intersection: anAccountOrPortfolio parents) ifNotEmpty: [self error: self class cannotIncludeItselfErrorDescription ].
	(self descendants intersection: anAccountOrPortfolio descendants) ifNotEmpty: [self error: self class cannotIncludeItselfErrorDescription ].
	
	anAccountOrPortfolio addParent: self.	
	accounts add: anAccountOrPortfolio.! !

!classDefinition: #ReceptiveAccount category: 'Portfolio-Ejercicio' stamp: 'NNH 11/4/2020 20:23:56'!
Object subclass: #ReceptiveAccount
	instanceVariableNames: 'transactions parent parents'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!
!ReceptiveAccount methodsFor: 'fsdfs' stamp: 'NNH 11/4/2020 20:23:55' prior: 50872999!
addParent: aPortfolio 
	parents add: aPortfolio.! !

Object subclass: #ReceptiveAccount
	instanceVariableNames: 'transactions parents'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classDefinition: #ReceptiveAccount category: 'Portfolio-Ejercicio' stamp: 'NNH 11/4/2020 20:24:03'!
Object subclass: #ReceptiveAccount
	instanceVariableNames: 'transactions parents'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!
!ReceptiveAccount methodsFor: 'initialization' stamp: 'NNH 11/4/2020 20:24:19' prior: 50867967 overrides: 16896425!
initialize

	transactions := OrderedCollection new.
	parents := OrderedCollection new.! !

!testRun: #PortfolioTest #test01BalanceOfEmptyPortfolioIsZero stamp: 'NNH 11/4/2020 20:24:25'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithOneAccountIsBalanceOfThatAccount stamp: 'NNH 11/4/2020 20:24:25'!
ERROR!

!testRun: #PortfolioTest #test03BalanceOfPortfolioWithMoreThanOneAccountIsSumOfBalances stamp: 'NNH 11/4/2020 20:24:25'!
ERROR!

!testRun: #PortfolioTest #test04EmptyPortfolioHasRegisteredNoTransactions stamp: 'NNH 11/4/2020 20:24:25'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioWithOneAccountRegistersATransactionOfThatAccount stamp: 'NNH 11/4/2020 20:24:25'!
ERROR!

!testRun: #PortfolioTest #test06APortfolioWithMoreThanOneAccountRegistersATransactionThatIsNotFromTheFirstAccount stamp: 'NNH 11/4/2020 20:24:25'!
ERROR!

!testRun: #PortfolioTest #test07EmptyPortfolioHasNoTransactions stamp: 'NNH 11/4/2020 20:24:25'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioWithOneAccountHasTheTransactionsOfThatAccount stamp: 'NNH 11/4/2020 20:24:25'!
ERROR!

!testRun: #PortfolioTest #test09APortfolioWithMoreThanOneAccountHasTheTransactionsOfItsAccounts stamp: 'NNH 11/4/2020 20:24:25'!
ERROR!

!testRun: #PortfolioTest #test10 stamp: 'NNH 11/4/2020 20:24:25'!
PASSED!

!testRun: #PortfolioTest #test11 stamp: 'NNH 11/4/2020 20:24:25'!
ERROR!

!testRun: #PortfolioTest #test12 stamp: 'NNH 11/4/2020 20:24:25'!
ERROR!

!testRun: #PortfolioTest #test13 stamp: 'NNH 11/4/2020 20:24:25'!
ERROR!

!testRun: #PortfolioTest #test14 stamp: 'NNH 11/4/2020 20:24:25'!
ERROR!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithOneAccountIsBalanceOfThatAccount stamp: 'NNH 11/4/2020 20:24:32'!
ERROR!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithOneAccountIsBalanceOfThatAccount stamp: 'NNH 11/4/2020 20:24:32'!
ERROR!
!ReceptiveAccount methodsFor: 'fdsfsdf' stamp: 'NNH 11/4/2020 20:24:59'!
parents
	^ parent.! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'NNH 11/4/2020 20:24:59'!
parents
	^ parent.! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'NNH 11/4/2020 20:24:59' prior: 50872805!
parent
	^ parent.! !
!ReceptiveAccount methodsFor: 'as yet unclassified' stamp: 'NNH 11/4/2020 20:24:59' prior: 50872872!
parent
	^ parent.! !
!ReceptiveAccount methodsFor: 'as yet unclassified' stamp: 'NNH 11/4/2020 20:24:59' prior: 50873835!
parents
	^ parent.! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'NNH 11/4/2020 20:24:59' prior: 50873839!
parents
	^ parent.! !

!methodRemoval: ReceptiveAccount #parent stamp: 'NNH 11/4/2020 20:24:59'!
parent
	^ parent.!

!methodRemoval: Portfolio #parent stamp: 'NNH 11/4/2020 20:24:59'!
parent
	^ parent.!
!ReceptiveAccount methodsFor: 'fdsfsdf' stamp: 'NNH 11/4/2020 20:25:11' prior: 50873851!
parents
	^ parents.! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'NNH 11/4/2020 20:25:15' prior: 50873855!
parents
	^ parents.! !

!testRun: #PortfolioTest #test01BalanceOfEmptyPortfolioIsZero stamp: 'NNH 11/4/2020 20:25:18'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithOneAccountIsBalanceOfThatAccount stamp: 'NNH 11/4/2020 20:25:18'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioWithMoreThanOneAccountIsSumOfBalances stamp: 'NNH 11/4/2020 20:25:18'!
PASSED!

!testRun: #PortfolioTest #test04EmptyPortfolioHasRegisteredNoTransactions stamp: 'NNH 11/4/2020 20:25:18'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioWithOneAccountRegistersATransactionOfThatAccount stamp: 'NNH 11/4/2020 20:25:18'!
PASSED!

!testRun: #PortfolioTest #test06APortfolioWithMoreThanOneAccountRegistersATransactionThatIsNotFromTheFirstAccount stamp: 'NNH 11/4/2020 20:25:18'!
PASSED!

!testRun: #PortfolioTest #test07EmptyPortfolioHasNoTransactions stamp: 'NNH 11/4/2020 20:25:18'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioWithOneAccountHasTheTransactionsOfThatAccount stamp: 'NNH 11/4/2020 20:25:18'!
PASSED!

!testRun: #PortfolioTest #test09APortfolioWithMoreThanOneAccountHasTheTransactionsOfItsAccounts stamp: 'NNH 11/4/2020 20:25:18'!
PASSED!

!testRun: #PortfolioTest #test10 stamp: 'NNH 11/4/2020 20:25:18'!
PASSED!

!testRun: #PortfolioTest #test11 stamp: 'NNH 11/4/2020 20:25:18'!
PASSED!

!testRun: #PortfolioTest #test12 stamp: 'NNH 11/4/2020 20:25:18'!
PASSED!

!testRun: #PortfolioTest #test13 stamp: 'NNH 11/4/2020 20:25:18'!
PASSED!

!testRun: #PortfolioTest #test14 stamp: 'NNH 11/4/2020 20:25:18'!
FAILURE!

!testRun: #PortfolioTest #test14 stamp: 'NNH 11/4/2020 20:25:18'!
FAILURE!

!testRun: #PortfolioTest #test14 stamp: 'NNH 11/4/2020 20:25:28'!
FAILURE!

!testRun: #PortfolioTest #test14 stamp: 'NNH 11/4/2020 20:25:28'!
FAILURE!
!Portfolio methodsFor: 'yyy' stamp: 'NNH 11/4/2020 20:29:59' prior: 50873728!
add: anAccountOrPortfolio 
	
	(anAccountOrPortfolio containsAccount: self) ifTrue: [self error: self class cannotIncludeItselfErrorDescription].
	(self parents intersection: anAccountOrPortfolio parents) ifNotEmpty: [self error: self class cannotIncludeItselfErrorDescription ].
	(self descendants intersection: anAccountOrPortfolio descendants) ifNotEmpty: [self error: self class cannotIncludeItselfErrorDescription ].
	
	(self buscarEnTodosLosNodos: anAccountOrPortfolio) ifTrue: [self error: self class cannotIncludeItselfErrorDescription ].
	
	anAccountOrPortfolio addParent: self.	
	accounts add: anAccountOrPortfolio.! !
!Portfolio methodsFor: 'sdasdasd' stamp: 'NNH 11/4/2020 20:39:39'!
buscarEnTodosLosNodos: unChabon empezandoPor: yo
	
	| vecinos |
	unChabon == self ifTrue: [^true].
	
	vecinos := (parents union: accounts) remove: yo.
	
	^ vecinos anySatisfy: [:unVecino | unVecino buscarEnTodosLosNodos: unChabon empezandoPor: self ] .
! !
!Portfolio methodsFor: 'sdasdasd' stamp: 'NNH 11/4/2020 20:39:43' prior: 50873949!
buscarEnTodosLosNodos: unChabon empezandoPor: yo
	
	| vecinos |
	
	unChabon == self ifTrue: [^true].
	
	vecinos := (parents union: accounts) remove: yo.
	
	^ vecinos anySatisfy: [:unVecino | unVecino buscarEnTodosLosNodos: unChabon empezandoPor: self ] .
! !
!ReceptiveAccount methodsFor: 'transactions' stamp: 'NNH 11/4/2020 20:41:18'!
buscarEnTodosLosNodos: unChabon empezandoPor: yo
	
	| vecinos |
	
	unChabon == self ifTrue: [^true].
	
	vecinos := parents copy remove: yo.
	
	^ vecinos anySatisfy: [:unVecino | unVecino buscarEnTodosLosNodos: unChabon empezandoPor: self ] .! !
!Portfolio methodsFor: 'yyy' stamp: 'NNH 11/4/2020 20:42:51' prior: 50873927!
add: anAccountOrPortfolio 
	
	(anAccountOrPortfolio containsAccount: self) ifTrue: [self error: self class cannotIncludeItselfErrorDescription].
	(self parents intersection: anAccountOrPortfolio parents) ifNotEmpty: [self error: self class cannotIncludeItselfErrorDescription ].
	(self descendants intersection: anAccountOrPortfolio descendants) ifNotEmpty: [self error: self class cannotIncludeItselfErrorDescription ].
	
	(self buscarEnTodosLosNodos: anAccountOrPortfolio empezandoPor: self) ifTrue: [self error: self class cannotIncludeItselfErrorDescription ].
	
	anAccountOrPortfolio addParent: self.	
	accounts add: anAccountOrPortfolio.! !

!testRun: #PortfolioTest #test01BalanceOfEmptyPortfolioIsZero stamp: 'NNH 11/4/2020 20:42:56'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithOneAccountIsBalanceOfThatAccount stamp: 'NNH 11/4/2020 20:42:56'!
ERROR!

!testRun: #PortfolioTest #test03BalanceOfPortfolioWithMoreThanOneAccountIsSumOfBalances stamp: 'NNH 11/4/2020 20:42:56'!
ERROR!

!testRun: #PortfolioTest #test04EmptyPortfolioHasRegisteredNoTransactions stamp: 'NNH 11/4/2020 20:42:56'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioWithOneAccountRegistersATransactionOfThatAccount stamp: 'NNH 11/4/2020 20:42:56'!
ERROR!

!testRun: #PortfolioTest #test06APortfolioWithMoreThanOneAccountRegistersATransactionThatIsNotFromTheFirstAccount stamp: 'NNH 11/4/2020 20:42:56'!
ERROR!

!testRun: #PortfolioTest #test07EmptyPortfolioHasNoTransactions stamp: 'NNH 11/4/2020 20:42:56'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioWithOneAccountHasTheTransactionsOfThatAccount stamp: 'NNH 11/4/2020 20:42:56'!
ERROR!

!testRun: #PortfolioTest #test09APortfolioWithMoreThanOneAccountHasTheTransactionsOfItsAccounts stamp: 'NNH 11/4/2020 20:42:56'!
ERROR!

!testRun: #PortfolioTest #test10 stamp: 'NNH 11/4/2020 20:42:56'!
PASSED!

!testRun: #PortfolioTest #test11 stamp: 'NNH 11/4/2020 20:42:56'!
ERROR!

!testRun: #PortfolioTest #test12 stamp: 'NNH 11/4/2020 20:42:56'!
ERROR!

!testRun: #PortfolioTest #test13 stamp: 'NNH 11/4/2020 20:42:57'!
ERROR!

!testRun: #PortfolioTest #test14 stamp: 'NNH 11/4/2020 20:42:57'!
ERROR!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithOneAccountIsBalanceOfThatAccount stamp: 'NNH 11/4/2020 20:43:12'!
ERROR!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithOneAccountIsBalanceOfThatAccount stamp: 'NNH 11/4/2020 20:43:12'!
ERROR!
!Portfolio methodsFor: 'sdasdasd' stamp: 'NNH 11/4/2020 20:44:03' prior: 50873960!
buscarEnTodosLosNodos: unChabon empezandoPor: yo
	
	| vecinos |
	
	unChabon == self ifTrue: [^true].
	
	vecinos := (parents union: accounts) remove: yo ifAbsent: [].
	
	^ vecinos anySatisfy: [:unVecino | unVecino buscarEnTodosLosNodos: unChabon empezandoPor: self ] .
! !
!ReceptiveAccount methodsFor: 'transactions' stamp: 'NNH 11/4/2020 20:44:18' prior: 50873971!
buscarEnTodosLosNodos: unChabon empezandoPor: yo
	
	| vecinos |
	
	unChabon == self ifTrue: [^true].
	
	vecinos := parents copy remove: yo ifAbsent: [].
	
	^ vecinos anySatisfy: [:unVecino | unVecino buscarEnTodosLosNodos: unChabon empezandoPor: self ] .! !
!ReceptiveAccount methodsFor: 'transactions' stamp: 'NNH 11/4/2020 20:44:22' prior: 50874072!
buscarEnTodosLosNodos: unChabon empezandoPor: yo
	
	| vecinos |
	
	unChabon == self ifTrue: [^true].
	
	vecinos := parents copy remove: yo.
	
	^ vecinos anySatisfy: [:unVecino | unVecino buscarEnTodosLosNodos: unChabon empezandoPor: self ] .! !

!testRun: #PortfolioTest #test01BalanceOfEmptyPortfolioIsZero stamp: 'NNH 11/4/2020 20:44:26'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithOneAccountIsBalanceOfThatAccount stamp: 'NNH 11/4/2020 20:44:26'!
ERROR!

!testRun: #PortfolioTest #test03BalanceOfPortfolioWithMoreThanOneAccountIsSumOfBalances stamp: 'NNH 11/4/2020 20:44:26'!
ERROR!

!testRun: #PortfolioTest #test04EmptyPortfolioHasRegisteredNoTransactions stamp: 'NNH 11/4/2020 20:44:26'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioWithOneAccountRegistersATransactionOfThatAccount stamp: 'NNH 11/4/2020 20:44:26'!
ERROR!

!testRun: #PortfolioTest #test06APortfolioWithMoreThanOneAccountRegistersATransactionThatIsNotFromTheFirstAccount stamp: 'NNH 11/4/2020 20:44:26'!
ERROR!

!testRun: #PortfolioTest #test07EmptyPortfolioHasNoTransactions stamp: 'NNH 11/4/2020 20:44:26'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioWithOneAccountHasTheTransactionsOfThatAccount stamp: 'NNH 11/4/2020 20:44:26'!
ERROR!

!testRun: #PortfolioTest #test09APortfolioWithMoreThanOneAccountHasTheTransactionsOfItsAccounts stamp: 'NNH 11/4/2020 20:44:26'!
ERROR!

!testRun: #PortfolioTest #test10 stamp: 'NNH 11/4/2020 20:44:26'!
PASSED!

!testRun: #PortfolioTest #test11 stamp: 'NNH 11/4/2020 20:44:26'!
ERROR!

!testRun: #PortfolioTest #test12 stamp: 'NNH 11/4/2020 20:44:26'!
ERROR!

!testRun: #PortfolioTest #test13 stamp: 'NNH 11/4/2020 20:44:26'!
ERROR!

!testRun: #PortfolioTest #test14 stamp: 'NNH 11/4/2020 20:44:26'!
ERROR!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithOneAccountIsBalanceOfThatAccount stamp: 'NNH 11/4/2020 20:44:32'!
ERROR!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithOneAccountIsBalanceOfThatAccount stamp: 'NNH 11/4/2020 20:44:32'!
ERROR!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithOneAccountIsBalanceOfThatAccount stamp: 'NNH 11/4/2020 20:44:45'!
ERROR!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithOneAccountIsBalanceOfThatAccount stamp: 'NNH 11/4/2020 20:44:45'!
ERROR!

vecinos!
!Portfolio methodsFor: 'sdasdasd' stamp: 'NNH 11/4/2020 20:45:35' prior: 50874060!
buscarEnTodosLosNodos: unChabon empezandoPor: yo
	
	| vecinos |
	
	unChabon == self ifTrue: [^true].
	
	vecinos := (parents union: accounts).
	vecinos remove: yo ifAbsent: [].
	
	^ vecinos anySatisfy: [:unVecino | unVecino buscarEnTodosLosNodos: unChabon empezandoPor: self ] .
! !

!testRun: #PortfolioTest #test01BalanceOfEmptyPortfolioIsZero stamp: 'NNH 11/4/2020 20:45:44'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithOneAccountIsBalanceOfThatAccount stamp: 'NNH 11/4/2020 20:45:44'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioWithMoreThanOneAccountIsSumOfBalances stamp: 'NNH 11/4/2020 20:45:44'!
ERROR!

!testRun: #PortfolioTest #test04EmptyPortfolioHasRegisteredNoTransactions stamp: 'NNH 11/4/2020 20:45:44'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioWithOneAccountRegistersATransactionOfThatAccount stamp: 'NNH 11/4/2020 20:45:44'!
PASSED!

!testRun: #PortfolioTest #test06APortfolioWithMoreThanOneAccountRegistersATransactionThatIsNotFromTheFirstAccount stamp: 'NNH 11/4/2020 20:45:44'!
ERROR!

!testRun: #PortfolioTest #test07EmptyPortfolioHasNoTransactions stamp: 'NNH 11/4/2020 20:45:44'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioWithOneAccountHasTheTransactionsOfThatAccount stamp: 'NNH 11/4/2020 20:45:44'!
PASSED!

!testRun: #PortfolioTest #test09APortfolioWithMoreThanOneAccountHasTheTransactionsOfItsAccounts stamp: 'NNH 11/4/2020 20:45:44'!
ERROR!

!testRun: #PortfolioTest #test10 stamp: 'NNH 11/4/2020 20:45:44'!
PASSED!

!testRun: #PortfolioTest #test11 stamp: 'NNH 11/4/2020 20:45:44'!
PASSED!

!testRun: #PortfolioTest #test12 stamp: 'NNH 11/4/2020 20:45:44'!
PASSED!

!testRun: #PortfolioTest #test13 stamp: 'NNH 11/4/2020 20:45:44'!
PASSED!

!testRun: #PortfolioTest #test14 stamp: 'NNH 11/4/2020 20:45:44'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioWithMoreThanOneAccountIsSumOfBalances stamp: 'NNH 11/4/2020 20:45:51'!
ERROR!

!testRun: #PortfolioTest #test03BalanceOfPortfolioWithMoreThanOneAccountIsSumOfBalances stamp: 'NNH 11/4/2020 20:45:51'!
ERROR!
!ReceptiveAccount methodsFor: 'transactions' stamp: 'NNH 11/4/2020 20:46:07' prior: 50874083!
buscarEnTodosLosNodos: unChabon empezandoPor: yo
	
	| vecinos |
	
	unChabon == self ifTrue: [^true].
	
	vecinos := parents copy.
	vecinos remove: yo.
	
	^ vecinos anySatisfy: [:unVecino | unVecino buscarEnTodosLosNodos: unChabon empezandoPor: self ] .! !

!testRun: #PortfolioTest #test01BalanceOfEmptyPortfolioIsZero stamp: 'NNH 11/4/2020 20:46:25'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithOneAccountIsBalanceOfThatAccount stamp: 'NNH 11/4/2020 20:46:25'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioWithMoreThanOneAccountIsSumOfBalances stamp: 'NNH 11/4/2020 20:46:25'!
PASSED!

!testRun: #PortfolioTest #test04EmptyPortfolioHasRegisteredNoTransactions stamp: 'NNH 11/4/2020 20:46:25'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioWithOneAccountRegistersATransactionOfThatAccount stamp: 'NNH 11/4/2020 20:46:25'!
PASSED!

!testRun: #PortfolioTest #test06APortfolioWithMoreThanOneAccountRegistersATransactionThatIsNotFromTheFirstAccount stamp: 'NNH 11/4/2020 20:46:25'!
PASSED!

!testRun: #PortfolioTest #test07EmptyPortfolioHasNoTransactions stamp: 'NNH 11/4/2020 20:46:25'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioWithOneAccountHasTheTransactionsOfThatAccount stamp: 'NNH 11/4/2020 20:46:25'!
PASSED!

!testRun: #PortfolioTest #test09APortfolioWithMoreThanOneAccountHasTheTransactionsOfItsAccounts stamp: 'NNH 11/4/2020 20:46:25'!
PASSED!

!testRun: #PortfolioTest #test10 stamp: 'NNH 11/4/2020 20:46:25'!
PASSED!

!testRun: #PortfolioTest #test11 stamp: 'NNH 11/4/2020 20:46:25'!
PASSED!

!testRun: #PortfolioTest #test12 stamp: 'NNH 11/4/2020 20:46:25'!
PASSED!

!testRun: #PortfolioTest #test13 stamp: 'NNH 11/4/2020 20:46:25'!
PASSED!

!testRun: #PortfolioTest #test14 stamp: 'NNH 11/4/2020 20:46:25'!
PASSED!
!Portfolio methodsFor: 'yyy' stamp: 'NNH 11/4/2020 20:48:08' prior: 50873982!
add: anAccountOrPortfolio 
	
	(anAccountOrPortfolio containsAccount: self) ifTrue: [self error: self class cannotIncludeItselfErrorDescription].
	
	(self buscarEnTodosLosNodos: anAccountOrPortfolio empezandoPor: self) ifTrue: [self error: self class cannotIncludeItselfErrorDescription ].
	
	anAccountOrPortfolio addParent: self.	
	accounts add: anAccountOrPortfolio.! !
!Portfolio methodsFor: 'yyy' stamp: 'NNH 11/4/2020 20:48:19' prior: 50874283!
add: anAccountOrPortfolio 
	
	
	
	(self buscarEnTodosLosNodos: anAccountOrPortfolio empezandoPor: self) ifTrue: [self error: self class cannotIncludeItselfErrorDescription ].
	
	anAccountOrPortfolio addParent: self.	
	accounts add: anAccountOrPortfolio.! !

!testRun: #PortfolioTest #test01BalanceOfEmptyPortfolioIsZero stamp: 'NNH 11/4/2020 20:48:24'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithOneAccountIsBalanceOfThatAccount stamp: 'NNH 11/4/2020 20:48:24'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioWithMoreThanOneAccountIsSumOfBalances stamp: 'NNH 11/4/2020 20:48:24'!
PASSED!

!testRun: #PortfolioTest #test04EmptyPortfolioHasRegisteredNoTransactions stamp: 'NNH 11/4/2020 20:48:24'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioWithOneAccountRegistersATransactionOfThatAccount stamp: 'NNH 11/4/2020 20:48:24'!
PASSED!

!testRun: #PortfolioTest #test06APortfolioWithMoreThanOneAccountRegistersATransactionThatIsNotFromTheFirstAccount stamp: 'NNH 11/4/2020 20:48:24'!
PASSED!

!testRun: #PortfolioTest #test07EmptyPortfolioHasNoTransactions stamp: 'NNH 11/4/2020 20:48:24'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioWithOneAccountHasTheTransactionsOfThatAccount stamp: 'NNH 11/4/2020 20:48:24'!
PASSED!

!testRun: #PortfolioTest #test09APortfolioWithMoreThanOneAccountHasTheTransactionsOfItsAccounts stamp: 'NNH 11/4/2020 20:48:24'!
PASSED!

!testRun: #PortfolioTest #test10 stamp: 'NNH 11/4/2020 20:48:24'!
PASSED!

!testRun: #PortfolioTest #test11 stamp: 'NNH 11/4/2020 20:48:24'!
PASSED!

!testRun: #PortfolioTest #test12 stamp: 'NNH 11/4/2020 20:48:24'!
PASSED!

!testRun: #PortfolioTest #test13 stamp: 'NNH 11/4/2020 20:48:24'!
PASSED!

!testRun: #PortfolioTest #test14 stamp: 'NNH 11/4/2020 20:48:24'!
PASSED!

!methodRemoval: Portfolio #addDescendantsTo: stamp: 'NNH 11/4/2020 20:48:42'!
addDescendantsTo: aCollectionOfDescendants
	
	aCollectionOfDescendants add: self.
	accounts do: [ :anAccount | anAccount addDescendantsTo: aCollectionOfDescendants ].!

!methodRemoval: Portfolio #descendants stamp: 'NNH 11/4/2020 20:48:55'!
descendants
	
	| aCollectionOfDescendants |
	
	aCollectionOfDescendants := OrderedCollection new.
	self addDescendantsTo: aCollectionOfDescendants.
	
	^aCollectionOfDescendants.!

!methodRemoval: ReceptiveAccount #addDescendantsTo: stamp: 'NNH 11/4/2020 20:49:08'!
addDescendantsTo: aCollectionOfDescendants
	
	aCollectionOfDescendants add: self.!

!methodRemoval: ReceptiveAccount #descendants stamp: 'NNH 11/4/2020 20:49:13'!
descendants
	
	^ {self}.!

!testRun: #PortfolioTest #test01BalanceOfEmptyPortfolioIsZero stamp: 'NNH 11/4/2020 20:49:18'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithOneAccountIsBalanceOfThatAccount stamp: 'NNH 11/4/2020 20:49:18'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioWithMoreThanOneAccountIsSumOfBalances stamp: 'NNH 11/4/2020 20:49:18'!
PASSED!

!testRun: #PortfolioTest #test04EmptyPortfolioHasRegisteredNoTransactions stamp: 'NNH 11/4/2020 20:49:18'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioWithOneAccountRegistersATransactionOfThatAccount stamp: 'NNH 11/4/2020 20:49:18'!
PASSED!

!testRun: #PortfolioTest #test06APortfolioWithMoreThanOneAccountRegistersATransactionThatIsNotFromTheFirstAccount stamp: 'NNH 11/4/2020 20:49:18'!
PASSED!

!testRun: #PortfolioTest #test07EmptyPortfolioHasNoTransactions stamp: 'NNH 11/4/2020 20:49:18'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioWithOneAccountHasTheTransactionsOfThatAccount stamp: 'NNH 11/4/2020 20:49:18'!
PASSED!

!testRun: #PortfolioTest #test09APortfolioWithMoreThanOneAccountHasTheTransactionsOfItsAccounts stamp: 'NNH 11/4/2020 20:49:18'!
PASSED!

!testRun: #PortfolioTest #test10 stamp: 'NNH 11/4/2020 20:49:18'!
PASSED!

!testRun: #PortfolioTest #test11 stamp: 'NNH 11/4/2020 20:49:18'!
PASSED!

!testRun: #PortfolioTest #test12 stamp: 'NNH 11/4/2020 20:49:18'!
PASSED!

!testRun: #PortfolioTest #test13 stamp: 'NNH 11/4/2020 20:49:18'!
PASSED!

!testRun: #PortfolioTest #test14 stamp: 'NNH 11/4/2020 20:49:18'!
PASSED!

!methodRemoval: Portfolio #parents stamp: 'NNH 11/4/2020 20:50:14'!
parents
	^ parents.!

!methodRemoval: ReceptiveAccount #parents stamp: 'NNH 11/4/2020 20:50:20'!
parents
	^ parents.!

!testRun: #PortfolioTest #test01BalanceOfEmptyPortfolioIsZero stamp: 'NNH 11/4/2020 20:50:25'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithOneAccountIsBalanceOfThatAccount stamp: 'NNH 11/4/2020 20:50:25'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioWithMoreThanOneAccountIsSumOfBalances stamp: 'NNH 11/4/2020 20:50:25'!
PASSED!

!testRun: #PortfolioTest #test04EmptyPortfolioHasRegisteredNoTransactions stamp: 'NNH 11/4/2020 20:50:25'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioWithOneAccountRegistersATransactionOfThatAccount stamp: 'NNH 11/4/2020 20:50:25'!
PASSED!

!testRun: #PortfolioTest #test06APortfolioWithMoreThanOneAccountRegistersATransactionThatIsNotFromTheFirstAccount stamp: 'NNH 11/4/2020 20:50:25'!
PASSED!

!testRun: #PortfolioTest #test07EmptyPortfolioHasNoTransactions stamp: 'NNH 11/4/2020 20:50:25'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioWithOneAccountHasTheTransactionsOfThatAccount stamp: 'NNH 11/4/2020 20:50:25'!
PASSED!

!testRun: #PortfolioTest #test09APortfolioWithMoreThanOneAccountHasTheTransactionsOfItsAccounts stamp: 'NNH 11/4/2020 20:50:25'!
PASSED!

!testRun: #PortfolioTest #test10 stamp: 'NNH 11/4/2020 20:50:25'!
PASSED!

!testRun: #PortfolioTest #test11 stamp: 'NNH 11/4/2020 20:50:25'!
PASSED!

!testRun: #PortfolioTest #test12 stamp: 'NNH 11/4/2020 20:50:25'!
PASSED!

!testRun: #PortfolioTest #test13 stamp: 'NNH 11/4/2020 20:50:25'!
PASSED!

!testRun: #PortfolioTest #test14 stamp: 'NNH 11/4/2020 20:50:25'!
PASSED!

!methodRemoval: Portfolio #containsAccount: stamp: 'NNH 11/4/2020 20:51:22'!
containsAccount: aPortfolio 
	
	aPortfolio == self ifTrue: [^true].
	^ accounts anySatisfy: [:anAccountOrPortfolio | (anAccountOrPortfolio containsAccount: aPortfolio) ]!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'NNH 11/4/2020 20:51:36'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'NNH 11/4/2020 20:51:36'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'NNH 11/4/2020 20:51:36'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'NNH 11/4/2020 20:51:36'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'NNH 11/4/2020 20:51:36'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'NNH 11/4/2020 20:51:36'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'NNH 11/4/2020 20:51:36'!
PASSED!

!methodRemoval: ReceptiveAccount #containsAccount: stamp: 'NNH 11/4/2020 20:51:40'!
containsAccount: anAccount 
	
	^ self == anAccount.!

!testRun: #PortfolioTest #test01BalanceOfEmptyPortfolioIsZero stamp: 'NNH 11/4/2020 20:51:44'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithOneAccountIsBalanceOfThatAccount stamp: 'NNH 11/4/2020 20:51:44'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioWithMoreThanOneAccountIsSumOfBalances stamp: 'NNH 11/4/2020 20:51:44'!
PASSED!

!testRun: #PortfolioTest #test04EmptyPortfolioHasRegisteredNoTransactions stamp: 'NNH 11/4/2020 20:51:44'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioWithOneAccountRegistersATransactionOfThatAccount stamp: 'NNH 11/4/2020 20:51:44'!
PASSED!

!testRun: #PortfolioTest #test06APortfolioWithMoreThanOneAccountRegistersATransactionThatIsNotFromTheFirstAccount stamp: 'NNH 11/4/2020 20:51:44'!
PASSED!

!testRun: #PortfolioTest #test07EmptyPortfolioHasNoTransactions stamp: 'NNH 11/4/2020 20:51:44'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioWithOneAccountHasTheTransactionsOfThatAccount stamp: 'NNH 11/4/2020 20:51:44'!
PASSED!

!testRun: #PortfolioTest #test09APortfolioWithMoreThanOneAccountHasTheTransactionsOfItsAccounts stamp: 'NNH 11/4/2020 20:51:44'!
PASSED!

!testRun: #PortfolioTest #test10 stamp: 'NNH 11/4/2020 20:51:44'!
PASSED!

!testRun: #PortfolioTest #test11 stamp: 'NNH 11/4/2020 20:51:44'!
PASSED!

!testRun: #PortfolioTest #test12 stamp: 'NNH 11/4/2020 20:51:44'!
PASSED!

!testRun: #PortfolioTest #test13 stamp: 'NNH 11/4/2020 20:51:44'!
PASSED!

!testRun: #PortfolioTest #test14 stamp: 'NNH 11/4/2020 20:51:44'!
PASSED!
!Portfolio methodsFor: 'yyy' stamp: 'NNH 11/4/2020 20:52:24' prior: 50874298!
add: anAccountOrPortfolio 
	
	(self buscarEnTodosLosNodos: anAccountOrPortfolio empezandoPor: self) ifTrue: [self error: self class cannotIncludeItselfErrorDescription ].
	
	anAccountOrPortfolio addParent: self.	
	accounts add: anAccountOrPortfolio.! !
!Portfolio methodsFor: 'yyy' stamp: 'NNH 11/4/2020 20:53:00' prior: 50874567!
add: anAccountOrPortfolio 
	
	(self buscarEnTodosLosNodos: anAccountOrPortfolio empezandoPor: self) ifTrue: [self error: self class cannotIncludeItselfErrorDescription ].
	
	anAccountOrPortfolio addParent: self.	
	accounts add: anAccountOrPortfolio.! !
!Portfolio methodsFor: 'yyy' stamp: 'NNH 11/4/2020 20:53:15'!
xxx: anAccountOrPortfolio

	^ (self buscarEnTodosLosNodos: anAccountOrPortfolio empezandoPor: self) ifTrue: [self error: self class cannotIncludeItselfErrorDescription ]! !
!Portfolio methodsFor: 'yyy' stamp: 'NNH 11/4/2020 20:53:15' prior: 50874578!
add: anAccountOrPortfolio 
	
	self xxx: anAccountOrPortfolio.
	
	anAccountOrPortfolio addParent: self.	
	accounts add: anAccountOrPortfolio.! !
!Portfolio methodsFor: 'sdasdasd' stamp: 'NNH 11/4/2020 20:54:40' prior: 50874157!
buscarEnTodosLosNodos: unChabon empezandoPor: yo
	
	| vecinos |
		
	vecinos := (parents union: accounts).
	vecinos remove: yo ifAbsent: [].
	
	^ unChabon == self or: [
		vecinos anySatisfy: [:unVecino | unVecino buscarEnTodosLosNodos: unChabon empezandoPor: self ] 
		].
! !
!Portfolio methodsFor: 'assertions' stamp: 'NNH 11/4/2020 21:08:03'!
assertThatCanBeAdded: anAccountOrPortfolio

	^ (self buscarEnTodosLosNodos: anAccountOrPortfolio empezandoPor: self) ifTrue: [self error: self class cannotIncludeItselfErrorDescription ]! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'NNH 11/4/2020 21:08:03' prior: 50874596!
add: anAccountOrPortfolio 
	
	self assertThatCanBeAdded: anAccountOrPortfolio.
	
	anAccountOrPortfolio addParent: self.	
	accounts add: anAccountOrPortfolio.! !

!methodRemoval: Portfolio #xxx: stamp: 'NNH 11/4/2020 21:08:03'!
xxx: anAccountOrPortfolio

	^ (self buscarEnTodosLosNodos: anAccountOrPortfolio empezandoPor: self) ifTrue: [self error: self class cannotIncludeItselfErrorDescription ]!
!Portfolio methodsFor: 'assertions' stamp: 'NNH 11/4/2020 21:11:26'!
assertThatIsIndependentFrom: anAccountOrPortfolio

	^ (self buscarEnTodosLosNodos: anAccountOrPortfolio empezandoPor: self) ifTrue: [self error: self class cannotIncludeItselfErrorDescription ]! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'NNH 11/4/2020 21:11:26' prior: 50874624!
add: anAccountOrPortfolio 
	
	self assertThatIsIndependentFrom: anAccountOrPortfolio.
	
	anAccountOrPortfolio addParent: self.	
	accounts add: anAccountOrPortfolio.! !

!methodRemoval: Portfolio #assertThatCanBeAdded: stamp: 'NNH 11/4/2020 21:11:26'!
assertThatCanBeAdded: anAccountOrPortfolio

	^ (self buscarEnTodosLosNodos: anAccountOrPortfolio empezandoPor: self) ifTrue: [self error: self class cannotIncludeItselfErrorDescription ]!
!Portfolio methodsFor: 'assertions' stamp: 'NNH 11/4/2020 21:12:35'!
assertThatIsIndependentOf: anAccountOrPortfolio

	^ (self buscarEnTodosLosNodos: anAccountOrPortfolio empezandoPor: self) ifTrue: [self error: self class cannotIncludeItselfErrorDescription ]! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'NNH 11/4/2020 21:12:35' prior: 50874649!
add: anAccountOrPortfolio 
	
	self assertThatIsIndependentOf: anAccountOrPortfolio.
	
	anAccountOrPortfolio addParent: self.	
	accounts add: anAccountOrPortfolio.! !

!methodRemoval: Portfolio #assertThatIsIndependentFrom: stamp: 'NNH 11/4/2020 21:12:35'!
assertThatIsIndependentFrom: anAccountOrPortfolio

	^ (self buscarEnTodosLosNodos: anAccountOrPortfolio empezandoPor: self) ifTrue: [self error: self class cannotIncludeItselfErrorDescription ]!
!Portfolio methodsFor: 'testing dependencies' stamp: 'NNH 11/4/2020 21:13:12' prior: 50874604!
buscarEnTodosLosNodos: unChabon empezandoPor: yo
	
	| neighbors |
		
	neighbors := (parents union: accounts).
	neighbors remove: yo ifAbsent: [].
	
	^ unChabon == self or: [
		neighbors anySatisfy: [:unVecino | unVecino buscarEnTodosLosNodos: unChabon empezandoPor: self ] 
		].
! !
!Portfolio methodsFor: 'testing dependencies' stamp: 'NNH 11/4/2020 21:15:46'!
isRelatedTo: unChabon excluding: yo
	
	| neighbors |
		
	neighbors := (parents union: accounts).
	neighbors remove: yo ifAbsent: [].
	
	^ unChabon == self or: [
		neighbors anySatisfy: [:unVecino | unVecino buscarEnTodosLosNodos: unChabon empezandoPor: self ] 
		].
! !
!ReceptiveAccount methodsFor: 'transactions' stamp: 'NNH 11/4/2020 21:15:46'!
isRelatedTo: unChabon excluding: yo
	
	| vecinos |
	
	unChabon == self ifTrue: [^true].
	
	vecinos := parents copy.
	vecinos remove: yo.
	
	^ vecinos anySatisfy: [:unVecino | unVecino buscarEnTodosLosNodos: unChabon empezandoPor: self ] .! !
!ReceptiveAccount methodsFor: 'as yet unclassified' stamp: 'NNH 11/4/2020 21:15:46' prior: 50874225!
buscarEnTodosLosNodos: unChabon empezandoPor: yo
	
	| vecinos |
	
	unChabon == self ifTrue: [^true].
	
	vecinos := parents copy.
	vecinos remove: yo.
	
	^ vecinos anySatisfy: [:unVecino | unVecino isRelatedTo: unChabon excluding: self ] .! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'NNH 11/4/2020 21:15:46' prior: 50874665!
assertThatIsIndependentOf: anAccountOrPortfolio

	^ (self isRelatedTo: anAccountOrPortfolio excluding: self) ifTrue: [self error: self class cannotIncludeItselfErrorDescription ]! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'NNH 11/4/2020 21:15:46' prior: 50874693!
buscarEnTodosLosNodos: unChabon empezandoPor: yo
	
	| neighbors |
		
	neighbors := (parents union: accounts).
	neighbors remove: yo ifAbsent: [].
	
	^ unChabon == self or: [
		neighbors anySatisfy: [:unVecino | unVecino isRelatedTo: unChabon excluding: self ] 
		].
! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'NNH 11/4/2020 21:15:46' prior: 50874705!
isRelatedTo: unChabon excluding: yo
	
	| neighbors |
		
	neighbors := (parents union: accounts).
	neighbors remove: yo ifAbsent: [].
	
	^ unChabon == self or: [
		neighbors anySatisfy: [:unVecino | unVecino isRelatedTo: unChabon excluding: self ] 
		].
! !
!ReceptiveAccount methodsFor: 'as yet unclassified' stamp: 'NNH 11/4/2020 21:15:46' prior: 50874716!
isRelatedTo: unChabon excluding: yo
	
	| vecinos |
	
	unChabon == self ifTrue: [^true].
	
	vecinos := parents copy.
	vecinos remove: yo.
	
	^ vecinos anySatisfy: [:unVecino | unVecino isRelatedTo: unChabon excluding: self ] .! !

!methodRemoval: Portfolio #buscarEnTodosLosNodos:empezandoPor: stamp: 'NNH 11/4/2020 21:15:46'!
buscarEnTodosLosNodos: unChabon empezandoPor: yo
	
	| neighbors |
		
	neighbors := (parents union: accounts).
	neighbors remove: yo ifAbsent: [].
	
	^ unChabon == self or: [
		neighbors anySatisfy: [:unVecino | unVecino isRelatedTo: unChabon excluding: self ] 
		].
!

!methodRemoval: ReceptiveAccount #buscarEnTodosLosNodos:empezandoPor: stamp: 'NNH 11/4/2020 21:15:46'!
buscarEnTodosLosNodos: unChabon empezandoPor: yo
	
	| vecinos |
	
	unChabon == self ifTrue: [^true].
	
	vecinos := parents copy.
	vecinos remove: yo.
	
	^ vecinos anySatisfy: [:unVecino | unVecino isRelatedTo: unChabon excluding: self ] .!

!testRun: #PortfolioTest #test01BalanceOfEmptyPortfolioIsZero stamp: 'NNH 11/4/2020 21:15:57'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithOneAccountIsBalanceOfThatAccount stamp: 'NNH 11/4/2020 21:15:57'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioWithMoreThanOneAccountIsSumOfBalances stamp: 'NNH 11/4/2020 21:15:57'!
PASSED!

!testRun: #PortfolioTest #test04EmptyPortfolioHasRegisteredNoTransactions stamp: 'NNH 11/4/2020 21:15:57'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioWithOneAccountRegistersATransactionOfThatAccount stamp: 'NNH 11/4/2020 21:15:57'!
PASSED!

!testRun: #PortfolioTest #test06APortfolioWithMoreThanOneAccountRegistersATransactionThatIsNotFromTheFirstAccount stamp: 'NNH 11/4/2020 21:15:57'!
PASSED!

!testRun: #PortfolioTest #test07EmptyPortfolioHasNoTransactions stamp: 'NNH 11/4/2020 21:15:57'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioWithOneAccountHasTheTransactionsOfThatAccount stamp: 'NNH 11/4/2020 21:15:57'!
PASSED!

!testRun: #PortfolioTest #test09APortfolioWithMoreThanOneAccountHasTheTransactionsOfItsAccounts stamp: 'NNH 11/4/2020 21:15:57'!
PASSED!

!testRun: #PortfolioTest #test10 stamp: 'NNH 11/4/2020 21:15:57'!
PASSED!

!testRun: #PortfolioTest #test11 stamp: 'NNH 11/4/2020 21:15:57'!
PASSED!

!testRun: #PortfolioTest #test12 stamp: 'NNH 11/4/2020 21:15:57'!
PASSED!

!testRun: #PortfolioTest #test13 stamp: 'NNH 11/4/2020 21:15:57'!
PASSED!

!testRun: #PortfolioTest #test14 stamp: 'NNH 11/4/2020 21:15:57'!
PASSED!
!Portfolio methodsFor: 'testing dependencies' stamp: 'NNH 11/4/2020 21:17:23' prior: 50874759!
isRelatedTo: anAccount excluding: anAccountToExclude
	
	| neighbors |
		
	neighbors := (parents union: accounts).
	neighbors remove: anAccountToExclude ifAbsent: [].
	
	^ anAccount == self or: [
		neighbors anySatisfy: [:aNeighbor | aNeighbor isRelatedTo: anAccount excluding: self ] 
		].
! !
!ReceptiveAccount methodsFor: 'transactions' stamp: 'NNH 11/4/2020 21:18:11' prior: 50874771!
isRelatedTo: anAccount excluding: anAccountToExclude
	
	| neighbors |
		
	neighbors := parents copy.
	neighbors remove: anAccountToExclude ifAbsent: [].
	
	^ anAccount == self or: [
		neighbors anySatisfy: [:aNeighbor | aNeighbor isRelatedTo: anAccount excluding: self ] 
		].! !

!testRun: #PortfolioTest #test01BalanceOfEmptyPortfolioIsZero stamp: 'NNH 11/4/2020 21:18:31'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithOneAccountIsBalanceOfThatAccount stamp: 'NNH 11/4/2020 21:18:31'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioWithMoreThanOneAccountIsSumOfBalances stamp: 'NNH 11/4/2020 21:18:31'!
PASSED!

!testRun: #PortfolioTest #test04EmptyPortfolioHasRegisteredNoTransactions stamp: 'NNH 11/4/2020 21:18:31'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioWithOneAccountRegistersATransactionOfThatAccount stamp: 'NNH 11/4/2020 21:18:31'!
PASSED!

!testRun: #PortfolioTest #test06APortfolioWithMoreThanOneAccountRegistersATransactionThatIsNotFromTheFirstAccount stamp: 'NNH 11/4/2020 21:18:31'!
PASSED!

!testRun: #PortfolioTest #test07EmptyPortfolioHasNoTransactions stamp: 'NNH 11/4/2020 21:18:31'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioWithOneAccountHasTheTransactionsOfThatAccount stamp: 'NNH 11/4/2020 21:18:31'!
PASSED!

!testRun: #PortfolioTest #test09APortfolioWithMoreThanOneAccountHasTheTransactionsOfItsAccounts stamp: 'NNH 11/4/2020 21:18:31'!
PASSED!

!testRun: #PortfolioTest #test10 stamp: 'NNH 11/4/2020 21:18:31'!
PASSED!

!testRun: #PortfolioTest #test11 stamp: 'NNH 11/4/2020 21:18:31'!
PASSED!

!testRun: #PortfolioTest #test12 stamp: 'NNH 11/4/2020 21:18:31'!
PASSED!

!testRun: #PortfolioTest #test13 stamp: 'NNH 11/4/2020 21:18:31'!
PASSED!

!testRun: #PortfolioTest #test14 stamp: 'NNH 11/4/2020 21:18:31'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'NNH 11/4/2020 21:18:36'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'NNH 11/4/2020 21:18:36'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'NNH 11/4/2020 21:18:36'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'NNH 11/4/2020 21:18:36'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'NNH 11/4/2020 21:18:36'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'NNH 11/4/2020 21:18:36'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'NNH 11/4/2020 21:18:36'!
PASSED!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'NNH 11/4/2020 21:28:29'!
test10PortfolioShouldNotAddItself
	
	| portfolio |
	
	portfolio := Portfolio new.

	self should: [portfolio add: portfolio]
	raise: Error
	withMessageText: Portfolio cannotIncludeItselfErrorDescription.! !

!methodRemoval: PortfolioTest #test10 stamp: 'NNH 11/4/2020 21:28:29'!
test10
	
	| portfolio |
	
	portfolio := Portfolio new.

	self should: [portfolio add: portfolio]
	raise: Error
	withMessageText: Portfolio cannotIncludeItselfErrorDescription.!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'NNH 11/4/2020 21:29:42'!
test11PortfolioShouldNotAddParentPortfolio
	
	| aPortfolio anotherPortfolio |
	
	aPortfolio := Portfolio new.
	anotherPortfolio := Portfolio new.
	anotherPortfolio add: aPortfolio.

	self should: [aPortfolio add: anotherPortfolio]
	raise: Error
	withMessageText: Portfolio cannotIncludeItselfErrorDescription.! !

!methodRemoval: PortfolioTest #test11 stamp: 'NNH 11/4/2020 21:29:42'!
test11
	
	| aPortfolio anotherPortfolio |
	
	aPortfolio := Portfolio new.
	anotherPortfolio := Portfolio new.
	anotherPortfolio add: aPortfolio.

	self should: [aPortfolio add: anotherPortfolio]
	raise: Error
	withMessageText: Portfolio cannotIncludeItselfErrorDescription.!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'NNH 11/4/2020 21:31:50'!
test12PortfoliosShouldNotAddAnotherPortfolioWhenTheyShareAnAccount
	
	| p1 p2 p3 |
	
	p1 := Portfolio new.
	p2 := Portfolio new.
	p3 := Portfolio new.

	p1 add: p2.
	p1 add: p3.

	self should: [p1 add: p2]
	raise: Error
	withMessageText: Portfolio cannotIncludeItselfErrorDescription.! !

!methodRemoval: PortfolioTest #test12 stamp: 'NNH 11/4/2020 21:31:50'!
test12
	
	| p1 p2 p3 |
	
	p1 := Portfolio new.
	p2 := Portfolio new.
	p3 := Portfolio new.

	p1 add: p2.
	p1 add: p3.

	self should: [p1 add: p2]
	raise: Error
	withMessageText: Portfolio cannotIncludeItselfErrorDescription.!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'NNH 11/4/2020 21:33:03'!
test13PortfolioShouldNotAddAnotherPortfolioWhenTheyShareAnAccount
	
	| p1 p2 p3 |
	
	p1 := Portfolio new.
	p2 := Portfolio new.
	p3 := Portfolio new.

	p1 add: p3.
	p2 add: p3.

	self should: [p1 add: p2]
	raise: Error
	withMessageText: Portfolio cannotIncludeItselfErrorDescription.! !

!methodRemoval: PortfolioTest #test13 stamp: 'NNH 11/4/2020 21:33:03'!
test13
	
	| p1 p2 p3 |
	
	p1 := Portfolio new.
	p2 := Portfolio new.
	p3 := Portfolio new.

	p1 add: p3.
	p2 add: p3.

	self should: [p1 add: p2]
	raise: Error
	withMessageText: Portfolio cannotIncludeItselfErrorDescription.!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'NNH 11/4/2020 21:34:11' prior: 50874991!
test12PortfoliosShouldNotAddAnotherPortfolioWhenTheyShareAnAccount
	
	| p1 p2 p3 |
	
	p1 := Portfolio new.
	p2 := Portfolio new.
	p3 := Portfolio new.

	p1 add: p2.
	p1 add: p3.

	self should: [p3 add: p2]
	raise: Error
	withMessageText: Portfolio cannotIncludeItselfErrorDescription.! !

!testRun: #PortfolioTest #test01BalanceOfEmptyPortfolioIsZero stamp: 'NNH 11/4/2020 21:34:24'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithOneAccountIsBalanceOfThatAccount stamp: 'NNH 11/4/2020 21:34:24'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioWithMoreThanOneAccountIsSumOfBalances stamp: 'NNH 11/4/2020 21:34:24'!
PASSED!

!testRun: #PortfolioTest #test04EmptyPortfolioHasRegisteredNoTransactions stamp: 'NNH 11/4/2020 21:34:24'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioWithOneAccountRegistersATransactionOfThatAccount stamp: 'NNH 11/4/2020 21:34:24'!
PASSED!

!testRun: #PortfolioTest #test06APortfolioWithMoreThanOneAccountRegistersATransactionThatIsNotFromTheFirstAccount stamp: 'NNH 11/4/2020 21:34:24'!
PASSED!

!testRun: #PortfolioTest #test07EmptyPortfolioHasNoTransactions stamp: 'NNH 11/4/2020 21:34:24'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioWithOneAccountHasTheTransactionsOfThatAccount stamp: 'NNH 11/4/2020 21:34:24'!
PASSED!

!testRun: #PortfolioTest #test09APortfolioWithMoreThanOneAccountHasTheTransactionsOfItsAccounts stamp: 'NNH 11/4/2020 21:34:24'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioShouldNotAddItself stamp: 'NNH 11/4/2020 21:34:24'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioShouldNotAddParentPortfolio stamp: 'NNH 11/4/2020 21:34:24'!
PASSED!

!testRun: #PortfolioTest #test12PortfoliosShouldNotAddAnotherPortfolioWhenTheyShareAnAccount stamp: 'NNH 11/4/2020 21:34:25'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioShouldNotAddAnotherPortfolioWhenTheyShareAnAccount stamp: 'NNH 11/4/2020 21:34:25'!
PASSED!

!testRun: #PortfolioTest #test14 stamp: 'NNH 11/4/2020 21:34:25'!
PASSED!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'NNH 11/4/2020 21:35:01'!
test12PortfolioShouldNotAddAccountIfTheyBothBelongToAnotherPortfolio
	
	| p1 p2 p3 |
	
	p1 := Portfolio new.
	p2 := Portfolio new.
	p3 := Portfolio new.

	p1 add: p2.
	p1 add: p3.

	self should: [p3 add: p2]
	raise: Error
	withMessageText: Portfolio cannotIncludeItselfErrorDescription.! !

!methodRemoval: PortfolioTest #test12PortfoliosShouldNotAddAnotherPortfolioWhenTheyShareAnAccount stamp: 'NNH 11/4/2020 21:35:01'!
test12PortfoliosShouldNotAddAnotherPortfolioWhenTheyShareAnAccount
	
	| p1 p2 p3 |
	
	p1 := Portfolio new.
	p2 := Portfolio new.
	p3 := Portfolio new.

	p1 add: p2.
	p1 add: p3.

	self should: [p3 add: p2]
	raise: Error
	withMessageText: Portfolio cannotIncludeItselfErrorDescription.!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'NNH 11/4/2020 21:43:44'!
test14TwoPortfolioShouldNotHaveTheSamePortfolios
	
	| p1 p2 p3 p4 |
	
	p1 := Portfolio new.
	p2 := Portfolio new.
	p3 := Portfolio new.
	p4 := Portfolio new.

	p1 add: p2.
	p3 add: p2.
	p3 add: p4.

	self should: [p1 add: p4]
	raise: Error
	withMessageText: Portfolio cannotIncludeItselfErrorDescription.! !

!methodRemoval: PortfolioTest #test14 stamp: 'NNH 11/4/2020 21:43:44'!
test14
	
	| p1 p2 p3 p4 |
	
	p1 := Portfolio new.
	p2 := Portfolio new.
	p3 := Portfolio new.
	p4 := Portfolio new.

	p1 add: p2.
	p3 add: p2.
	p3 add: p4.

	self should: [p1 add: p4]
	raise: Error
	withMessageText: Portfolio cannotIncludeItselfErrorDescription.!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'NNH 11/4/2020 21:43:58'!
test14TwoPortfoliosShouldNotHaveTheSamePortfolios
	
	| p1 p2 p3 p4 |
	
	p1 := Portfolio new.
	p2 := Portfolio new.
	p3 := Portfolio new.
	p4 := Portfolio new.

	p1 add: p2.
	p3 add: p2.
	p3 add: p4.

	self should: [p1 add: p4]
	raise: Error
	withMessageText: Portfolio cannotIncludeItselfErrorDescription.! !

!methodRemoval: PortfolioTest #test14TwoPortfolioShouldNotHaveTheSamePortfolios stamp: 'NNH 11/4/2020 21:43:58'!
test14TwoPortfolioShouldNotHaveTheSamePortfolios
	
	| p1 p2 p3 p4 |
	
	p1 := Portfolio new.
	p2 := Portfolio new.
	p3 := Portfolio new.
	p4 := Portfolio new.

	p1 add: p2.
	p3 add: p2.
	p3 add: p4.

	self should: [p1 add: p4]
	raise: Error
	withMessageText: Portfolio cannotIncludeItselfErrorDescription.!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'NNH 11/4/2020 22:44:50' prior: 50875147!
test14TwoPortfoliosShouldNotHaveTheSamePortfolios
	
	| p1 p2 p3 p4 |
	
	p1 := Portfolio new.
	p2 := Portfolio new.
	p3 := Portfolio new.
	p4 := Portfolio new.

	p1 add: p2.
	p1 add: p3.
	p3 add: p4.

	self should: [p2 add: p4]
	raise: Error
	withMessageText: Portfolio cannotIncludeItselfErrorDescription.! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'NNH 11/4/2020 22:44:58'!
test14Rombo
	
	| p1 p2 p3 p4 |
	
	p1 := Portfolio new.
	p2 := Portfolio new.
	p3 := Portfolio new.
	p4 := Portfolio new.

	p1 add: p2.
	p1 add: p3.
	p3 add: p4.

	self should: [p2 add: p4]
	raise: Error
	withMessageText: Portfolio cannotIncludeItselfErrorDescription.! !

!methodRemoval: PortfolioTest #test14TwoPortfoliosShouldNotHaveTheSamePortfolios stamp: 'NNH 11/4/2020 22:45:03'!
test14TwoPortfoliosShouldNotHaveTheSamePortfolios
	
	| p1 p2 p3 p4 |
	
	p1 := Portfolio new.
	p2 := Portfolio new.
	p3 := Portfolio new.
	p4 := Portfolio new.

	p1 add: p2.
	p1 add: p3.
	p3 add: p4.

	self should: [p2 add: p4]
	raise: Error
	withMessageText: Portfolio cannotIncludeItselfErrorDescription.!

!testRun: #PortfolioTest #test01BalanceOfEmptyPortfolioIsZero stamp: 'NNH 11/4/2020 22:45:48'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithOneAccountIsBalanceOfThatAccount stamp: 'NNH 11/4/2020 22:45:48'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioWithMoreThanOneAccountIsSumOfBalances stamp: 'NNH 11/4/2020 22:45:48'!
PASSED!

!testRun: #PortfolioTest #test04EmptyPortfolioHasRegisteredNoTransactions stamp: 'NNH 11/4/2020 22:45:48'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioWithOneAccountRegistersATransactionOfThatAccount stamp: 'NNH 11/4/2020 22:45:48'!
PASSED!

!testRun: #PortfolioTest #test06APortfolioWithMoreThanOneAccountRegistersATransactionThatIsNotFromTheFirstAccount stamp: 'NNH 11/4/2020 22:45:48'!
PASSED!

!testRun: #PortfolioTest #test07EmptyPortfolioHasNoTransactions stamp: 'NNH 11/4/2020 22:45:48'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioWithOneAccountHasTheTransactionsOfThatAccount stamp: 'NNH 11/4/2020 22:45:48'!
PASSED!

!testRun: #PortfolioTest #test09APortfolioWithMoreThanOneAccountHasTheTransactionsOfItsAccounts stamp: 'NNH 11/4/2020 22:45:48'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioShouldNotAddItself stamp: 'NNH 11/4/2020 22:45:48'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioShouldNotAddParentPortfolio stamp: 'NNH 11/4/2020 22:45:48'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioShouldNotAddAccountIfTheyBothBelongToAnotherPortfolio stamp: 'NNH 11/4/2020 22:45:48'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioShouldNotAddAnotherPortfolioWhenTheyShareAnAccount stamp: 'NNH 11/4/2020 22:45:48'!
PASSED!

!testRun: #PortfolioTest #test14Rombo stamp: 'NNH 11/4/2020 22:45:48'!
PASSED!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'NNH 11/4/2020 22:48:17'!
test15
	
	| p1 p2 p3 p4 |
	
	p1 := Portfolio new.
	p2 := Portfolio new.
	p3 := Portfolio new.
	p4 := Portfolio new.

	p1 add: p3.
	p1 add: p4.
	p2 add: p3.

	self shouldnt: [p2 add: p4] raise: Error.
! !

!testRun: #PortfolioTest #test01BalanceOfEmptyPortfolioIsZero stamp: 'NNH 11/4/2020 22:48:20'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithOneAccountIsBalanceOfThatAccount stamp: 'NNH 11/4/2020 22:48:20'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioWithMoreThanOneAccountIsSumOfBalances stamp: 'NNH 11/4/2020 22:48:20'!
PASSED!

!testRun: #PortfolioTest #test04EmptyPortfolioHasRegisteredNoTransactions stamp: 'NNH 11/4/2020 22:48:20'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioWithOneAccountRegistersATransactionOfThatAccount stamp: 'NNH 11/4/2020 22:48:20'!
PASSED!

!testRun: #PortfolioTest #test06APortfolioWithMoreThanOneAccountRegistersATransactionThatIsNotFromTheFirstAccount stamp: 'NNH 11/4/2020 22:48:20'!
PASSED!

!testRun: #PortfolioTest #test07EmptyPortfolioHasNoTransactions stamp: 'NNH 11/4/2020 22:48:20'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioWithOneAccountHasTheTransactionsOfThatAccount stamp: 'NNH 11/4/2020 22:48:20'!
PASSED!

!testRun: #PortfolioTest #test09APortfolioWithMoreThanOneAccountHasTheTransactionsOfItsAccounts stamp: 'NNH 11/4/2020 22:48:20'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioShouldNotAddItself stamp: 'NNH 11/4/2020 22:48:20'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioShouldNotAddParentPortfolio stamp: 'NNH 11/4/2020 22:48:20'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioShouldNotAddAccountIfTheyBothBelongToAnotherPortfolio stamp: 'NNH 11/4/2020 22:48:20'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioShouldNotAddAnotherPortfolioWhenTheyShareAnAccount stamp: 'NNH 11/4/2020 22:48:20'!
PASSED!

!testRun: #PortfolioTest #test14Rombo stamp: 'NNH 11/4/2020 22:48:20'!
PASSED!

!testRun: #PortfolioTest #test15 stamp: 'NNH 11/4/2020 22:48:20'!
FAILURE!

!testRun: #PortfolioTest #test15 stamp: 'NNH 11/4/2020 22:48:20'!
FAILURE!
!Portfolio methodsFor: 'testing dependencies' stamp: 'NNH 11/4/2020 23:06:17'!
isRelatedTo: anAccount
	
	^ (self tieneComoDescendienteA: anAccount) or: [
		parents anySatisfy: [:aParent | aParent isRelatedTo: anAccount ]
		].
	
	
! !
!Portfolio methodsFor: 'testing dependencies' stamp: 'NNH 11/4/2020 23:09:04' prior: 50875331!
isRelatedTo: anAccount
	
	^ (parents anySatisfy: [:aParent | aParent isRelatedTo: anAccount ]) or: [
		self tieneComoDescendienteA: anAccount
		].
	
	
! !
!Portfolio methodsFor: 'testing dependencies' stamp: 'NNH 11/4/2020 23:19:52'!
isInAPortfolioWith: anAccount
	
	^ (parents anySatisfy: [:aParent | aParent isRelatedTo: anAccount ]) or: [
		self includes: anAccount
		].
	
	
! !
!Portfolio methodsFor: 'testing dependencies' stamp: 'NNH 11/4/2020 23:20:08'!
belongsToAPortfolioWith: anAccount
	
	^ (parents anySatisfy: [:aParent | aParent isRelatedTo: anAccount ]) or: [
		self includes: anAccount
		].
	
	
! !

!methodRemoval: Portfolio #belongsToAPortfolioWith: stamp: 'NNH 11/4/2020 23:20:29'!
belongsToAPortfolioWith: anAccount
	
	^ (parents anySatisfy: [:aParent | aParent isRelatedTo: anAccount ]) or: [
		self includes: anAccount
		].
	
	
!
!Portfolio methodsFor: 'testing dependencies' stamp: 'NNH 11/4/2020 23:20:44' prior: 50875347!
isInAPortfolioWith: anAccount
	
	^ (parents anySatisfy: [:aParent | aParent isInAPortfolioWith: anAccount ]) or: [
		self includes: anAccount
		].
	
	
! !

!methodRemoval: Portfolio #isRelatedTo: stamp: 'NNH 11/4/2020 23:20:48'!
isRelatedTo: anAccount
	
	^ (parents anySatisfy: [:aParent | aParent isRelatedTo: anAccount ]) or: [
		self tieneComoDescendienteA: anAccount
		].
	
	
!
!Portfolio methodsFor: 'testing dependencies' stamp: 'NNH 11/4/2020 23:22:27'!
includes: anAccountToSearch
	
	
	^ (anAccountToSearch == self) or: [
		accounts anySatisfy: [:anAccount | anAccount includes: anAccountToSearch]
		].
	
	
! !
!ReceptiveAccount methodsFor: 'testing dependencies' stamp: 'NNH 11/4/2020 23:23:47'!
includes: anAccountToSearch
	
	^ anAccountToSearch == self.! !

!testRun: #PortfolioTest #test01BalanceOfEmptyPortfolioIsZero stamp: 'NNH 11/4/2020 23:23:56'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithOneAccountIsBalanceOfThatAccount stamp: 'NNH 11/4/2020 23:23:56'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioWithMoreThanOneAccountIsSumOfBalances stamp: 'NNH 11/4/2020 23:23:56'!
PASSED!

!testRun: #PortfolioTest #test04EmptyPortfolioHasRegisteredNoTransactions stamp: 'NNH 11/4/2020 23:23:56'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioWithOneAccountRegistersATransactionOfThatAccount stamp: 'NNH 11/4/2020 23:23:56'!
PASSED!

!testRun: #PortfolioTest #test06APortfolioWithMoreThanOneAccountRegistersATransactionThatIsNotFromTheFirstAccount stamp: 'NNH 11/4/2020 23:23:56'!
PASSED!

!testRun: #PortfolioTest #test07EmptyPortfolioHasNoTransactions stamp: 'NNH 11/4/2020 23:23:56'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioWithOneAccountHasTheTransactionsOfThatAccount stamp: 'NNH 11/4/2020 23:23:56'!
PASSED!

!testRun: #PortfolioTest #test09APortfolioWithMoreThanOneAccountHasTheTransactionsOfItsAccounts stamp: 'NNH 11/4/2020 23:23:56'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioShouldNotAddItself stamp: 'NNH 11/4/2020 23:23:56'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioShouldNotAddParentPortfolio stamp: 'NNH 11/4/2020 23:23:56'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioShouldNotAddAccountIfTheyBothBelongToAnotherPortfolio stamp: 'NNH 11/4/2020 23:23:56'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioShouldNotAddAnotherPortfolioWhenTheyShareAnAccount stamp: 'NNH 11/4/2020 23:23:56'!
PASSED!

!testRun: #PortfolioTest #test14Rombo stamp: 'NNH 11/4/2020 23:23:56'!
PASSED!

!testRun: #PortfolioTest #test15 stamp: 'NNH 11/4/2020 23:23:56'!
FAILURE!

!testRun: #PortfolioTest #test15 stamp: 'NNH 11/4/2020 23:23:56'!
FAILURE!
!Portfolio methodsFor: 'assertions' stamp: 'NNH 11/4/2020 23:24:37' prior: 50874738!
assertThatIsIndependentOf: anAccountOrPortfolio

	^ (self isInAPortfolioWith: anAccountOrPortfolio) ifTrue: [self error: self class cannotIncludeItselfErrorDescription ]! !

!methodRemoval: Portfolio #isRelatedTo:excluding: stamp: 'NNH 11/4/2020 23:24:59'!
isRelatedTo: anAccount excluding: anAccountToExclude
	
	| neighbors |
		
	neighbors := (parents union: accounts).
	neighbors remove: anAccountToExclude ifAbsent: [].
	
	^ anAccount == self or: [
		neighbors anySatisfy: [:aNeighbor | aNeighbor isRelatedTo: anAccount excluding: self ] 
		].
!

!testRun: #PortfolioTest #test01BalanceOfEmptyPortfolioIsZero stamp: 'NNH 11/4/2020 23:25:12'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithOneAccountIsBalanceOfThatAccount stamp: 'NNH 11/4/2020 23:25:12'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioWithMoreThanOneAccountIsSumOfBalances stamp: 'NNH 11/4/2020 23:25:12'!
PASSED!

!testRun: #PortfolioTest #test04EmptyPortfolioHasRegisteredNoTransactions stamp: 'NNH 11/4/2020 23:25:12'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioWithOneAccountRegistersATransactionOfThatAccount stamp: 'NNH 11/4/2020 23:25:12'!
PASSED!

!testRun: #PortfolioTest #test06APortfolioWithMoreThanOneAccountRegistersATransactionThatIsNotFromTheFirstAccount stamp: 'NNH 11/4/2020 23:25:12'!
PASSED!

!testRun: #PortfolioTest #test07EmptyPortfolioHasNoTransactions stamp: 'NNH 11/4/2020 23:25:12'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioWithOneAccountHasTheTransactionsOfThatAccount stamp: 'NNH 11/4/2020 23:25:12'!
PASSED!

!testRun: #PortfolioTest #test09APortfolioWithMoreThanOneAccountHasTheTransactionsOfItsAccounts stamp: 'NNH 11/4/2020 23:25:12'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioShouldNotAddItself stamp: 'NNH 11/4/2020 23:25:12'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioShouldNotAddParentPortfolio stamp: 'NNH 11/4/2020 23:25:12'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioShouldNotAddAccountIfTheyBothBelongToAnotherPortfolio stamp: 'NNH 11/4/2020 23:25:12'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioShouldNotAddAnotherPortfolioWhenTheyShareAnAccount stamp: 'NNH 11/4/2020 23:25:12'!
FAILURE!

!testRun: #PortfolioTest #test14Rombo stamp: 'NNH 11/4/2020 23:25:12'!
PASSED!

!testRun: #PortfolioTest #test15 stamp: 'NNH 11/4/2020 23:25:12'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioShouldNotAddAnotherPortfolioWhenTheyShareAnAccount stamp: 'NNH 11/4/2020 23:25:12'!
FAILURE!

!testRun: #PortfolioTest #test15 stamp: 'NNH 11/4/2020 23:25:20'!
PASSED!

!testRun: #PortfolioTest #test01BalanceOfEmptyPortfolioIsZero stamp: 'NNH 11/4/2020 23:25:26'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithOneAccountIsBalanceOfThatAccount stamp: 'NNH 11/4/2020 23:25:26'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioWithMoreThanOneAccountIsSumOfBalances stamp: 'NNH 11/4/2020 23:25:26'!
PASSED!

!testRun: #PortfolioTest #test04EmptyPortfolioHasRegisteredNoTransactions stamp: 'NNH 11/4/2020 23:25:26'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioWithOneAccountRegistersATransactionOfThatAccount stamp: 'NNH 11/4/2020 23:25:26'!
PASSED!

!testRun: #PortfolioTest #test06APortfolioWithMoreThanOneAccountRegistersATransactionThatIsNotFromTheFirstAccount stamp: 'NNH 11/4/2020 23:25:26'!
PASSED!

!testRun: #PortfolioTest #test07EmptyPortfolioHasNoTransactions stamp: 'NNH 11/4/2020 23:25:26'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioWithOneAccountHasTheTransactionsOfThatAccount stamp: 'NNH 11/4/2020 23:25:26'!
PASSED!

!testRun: #PortfolioTest #test09APortfolioWithMoreThanOneAccountHasTheTransactionsOfItsAccounts stamp: 'NNH 11/4/2020 23:25:26'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioShouldNotAddItself stamp: 'NNH 11/4/2020 23:25:26'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioShouldNotAddParentPortfolio stamp: 'NNH 11/4/2020 23:25:26'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioShouldNotAddAccountIfTheyBothBelongToAnotherPortfolio stamp: 'NNH 11/4/2020 23:25:26'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioShouldNotAddAnotherPortfolioWhenTheyShareAnAccount stamp: 'NNH 11/4/2020 23:25:26'!
FAILURE!

!testRun: #PortfolioTest #test14Rombo stamp: 'NNH 11/4/2020 23:25:26'!
PASSED!

!testRun: #PortfolioTest #test15 stamp: 'NNH 11/4/2020 23:25:26'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioShouldNotAddAnotherPortfolioWhenTheyShareAnAccount stamp: 'NNH 11/4/2020 23:25:26'!
FAILURE!

!testRun: #PortfolioTest #test13PortfolioShouldNotAddAnotherPortfolioWhenTheyShareAnAccount stamp: 'NNH 11/4/2020 23:25:35'!
FAILURE!

!testRun: #PortfolioTest #test13PortfolioShouldNotAddAnotherPortfolioWhenTheyShareAnAccount stamp: 'NNH 11/4/2020 23:25:35'!
FAILURE!

!testRun: #PortfolioTest #test13PortfolioShouldNotAddAnotherPortfolioWhenTheyShareAnAccount stamp: 'NNH 11/4/2020 23:25:47'!
FAILURE!

!testRun: #PortfolioTest #test13PortfolioShouldNotAddAnotherPortfolioWhenTheyShareAnAccount stamp: 'NNH 11/4/2020 23:25:47'!
FAILURE!
!Portfolio methodsFor: 'assertions' stamp: 'NNH 11/4/2020 23:29:49' prior: 50875457!
assertThatIsIndependentOf: anAccountOrPortfolio

	^ (self isInAPortfolioWith: anAccountOrPortfolio) ifTrue: [self error: self class cannotIncludeItselfErrorDescription ]! !
!Portfolio methodsFor: 'testing dependencies' stamp: 'NNH 11/4/2020 23:38:36'!
accountsInPortfolio
	
	| accountsInPortfolio |
	accountsInPortfolio := OrderedCollection new.
	
	
	
! !
!Portfolio methodsFor: 'testing dependencies' stamp: 'NNH 11/4/2020 23:39:40' prior: 50875624!
accountsInPortfolio
	
	| accountsInPortfolio |
	accountsInPortfolio := OrderedCollection new.
	self addAccountsInPortfolioTo: accountsInPortfolio.
	^ accountsInPortfolio.
	
	
	
! !
!Portfolio methodsFor: 'testing dependencies' stamp: 'NNH 11/4/2020 23:42:03'!
addAccountsInPortfolioTo: aCollectionOfAccounts
	
	
	
	aCollectionOfAccounts add: self.
	accounts do: [:anAccount | anAccount addAccountsInPortfolioTo: aCollectionOfAccounts].
	
	
	
! !
!Portfolio methodsFor: 'testing dependencies' stamp: 'NNH 11/4/2020 23:42:08' prior: 50875640!
addAccountsInPortfolioTo: aCollectionOfAccounts
		
	aCollectionOfAccounts add: self.
	accounts do: [:anAccount | anAccount addAccountsInPortfolioTo: aCollectionOfAccounts].
	
	
	
! !
!ReceptiveAccount methodsFor: 'testing dependencies' stamp: 'NNH 11/4/2020 23:42:32'!
addAccountsInPortfolioTo: aCollectionOfAccounts
		
	aCollectionOfAccounts add: self.! !
!ReceptiveAccount methodsFor: 'testing dependencies' stamp: 'NNH 11/4/2020 23:43:35'!
accountsInPortfolio
	
	| accountsInPortfolio |
	accountsInPortfolio := OrderedCollection new.
	self addAccountsInPortfolioTo: accountsInPortfolio.
	^ accountsInPortfolio.! !

!testRun: #PortfolioTest #test01BalanceOfEmptyPortfolioIsZero stamp: 'NNH 11/4/2020 23:43:40'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithOneAccountIsBalanceOfThatAccount stamp: 'NNH 11/4/2020 23:43:40'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioWithMoreThanOneAccountIsSumOfBalances stamp: 'NNH 11/4/2020 23:43:40'!
PASSED!

!testRun: #PortfolioTest #test04EmptyPortfolioHasRegisteredNoTransactions stamp: 'NNH 11/4/2020 23:43:40'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioWithOneAccountRegistersATransactionOfThatAccount stamp: 'NNH 11/4/2020 23:43:40'!
PASSED!

!testRun: #PortfolioTest #test06APortfolioWithMoreThanOneAccountRegistersATransactionThatIsNotFromTheFirstAccount stamp: 'NNH 11/4/2020 23:43:40'!
PASSED!

!testRun: #PortfolioTest #test07EmptyPortfolioHasNoTransactions stamp: 'NNH 11/4/2020 23:43:40'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioWithOneAccountHasTheTransactionsOfThatAccount stamp: 'NNH 11/4/2020 23:43:40'!
PASSED!

!testRun: #PortfolioTest #test09APortfolioWithMoreThanOneAccountHasTheTransactionsOfItsAccounts stamp: 'NNH 11/4/2020 23:43:40'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioShouldNotAddItself stamp: 'NNH 11/4/2020 23:43:40'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioShouldNotAddParentPortfolio stamp: 'NNH 11/4/2020 23:43:40'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioShouldNotAddAccountIfTheyBothBelongToAnotherPortfolio stamp: 'NNH 11/4/2020 23:43:40'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioShouldNotAddAnotherPortfolioWhenTheyShareAnAccount stamp: 'NNH 11/4/2020 23:43:40'!
FAILURE!

!testRun: #PortfolioTest #test14Rombo stamp: 'NNH 11/4/2020 23:43:40'!
PASSED!

!testRun: #PortfolioTest #test15 stamp: 'NNH 11/4/2020 23:43:40'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioShouldNotAddAnotherPortfolioWhenTheyShareAnAccount stamp: 'NNH 11/4/2020 23:43:40'!
FAILURE!
!Portfolio methodsFor: 'assertions' stamp: 'NNH 11/4/2020 23:46:17' prior: 50875616!
assertThatIsIndependentOf: anAccountOrPortfolio

	^ ((self isInAPortfolioWith: anAccountOrPortfolio) or: [
			(self accountsInPortfolio intersection: anAccountOrPortfolio accountsInPortfolio) isEmpty not
		]	
	) ifTrue: [self error: self class cannotIncludeItselfErrorDescription ]! !

!testRun: #PortfolioTest #test01BalanceOfEmptyPortfolioIsZero stamp: 'NNH 11/4/2020 23:46:23'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithOneAccountIsBalanceOfThatAccount stamp: 'NNH 11/4/2020 23:46:23'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioWithMoreThanOneAccountIsSumOfBalances stamp: 'NNH 11/4/2020 23:46:23'!
PASSED!

!testRun: #PortfolioTest #test04EmptyPortfolioHasRegisteredNoTransactions stamp: 'NNH 11/4/2020 23:46:23'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioWithOneAccountRegistersATransactionOfThatAccount stamp: 'NNH 11/4/2020 23:46:23'!
PASSED!

!testRun: #PortfolioTest #test06APortfolioWithMoreThanOneAccountRegistersATransactionThatIsNotFromTheFirstAccount stamp: 'NNH 11/4/2020 23:46:23'!
PASSED!

!testRun: #PortfolioTest #test07EmptyPortfolioHasNoTransactions stamp: 'NNH 11/4/2020 23:46:23'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioWithOneAccountHasTheTransactionsOfThatAccount stamp: 'NNH 11/4/2020 23:46:23'!
PASSED!

!testRun: #PortfolioTest #test09APortfolioWithMoreThanOneAccountHasTheTransactionsOfItsAccounts stamp: 'NNH 11/4/2020 23:46:23'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioShouldNotAddItself stamp: 'NNH 11/4/2020 23:46:23'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioShouldNotAddParentPortfolio stamp: 'NNH 11/4/2020 23:46:23'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioShouldNotAddAccountIfTheyBothBelongToAnotherPortfolio stamp: 'NNH 11/4/2020 23:46:23'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioShouldNotAddAnotherPortfolioWhenTheyShareAnAccount stamp: 'NNH 11/4/2020 23:46:23'!
PASSED!

!testRun: #PortfolioTest #test14Rombo stamp: 'NNH 11/4/2020 23:46:23'!
PASSED!

!testRun: #PortfolioTest #test15 stamp: 'NNH 11/4/2020 23:46:23'!
PASSED!
!Portfolio methodsFor: 'assertions' stamp: 'NNH 11/4/2020 23:47:23'!
hasAccountsInCommonWith: anAccountOrPortfolio

	^ (self accountsInPortfolio intersection: anAccountOrPortfolio accountsInPortfolio) isEmpty not! !
!Portfolio methodsFor: 'assertions' stamp: 'NNH 11/4/2020 23:47:23' prior: 50875732!
assertThatIsIndependentOf: anAccountOrPortfolio

	^ ((self isInAPortfolioWith: anAccountOrPortfolio) or: [
			self hasAccountsInCommonWith: anAccountOrPortfolio
		]	
	) ifTrue: [self error: self class cannotIncludeItselfErrorDescription ]! !
!Portfolio methodsFor: 'assertions' stamp: 'NNH 11/4/2020 23:48:40' prior: 50875807!
assertThatIsIndependentOf: anAccountOrPortfolio

	(self isInAPortfolioWith: anAccountOrPortfolio) ifTrue: [self error: self class cannotIncludeItselfErrorDescription ].
	(self hasAccountsInCommonWith: anAccountOrPortfolio)	 ifTrue: [self error: self class cannotIncludeItselfErrorDescription]! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'NNH 11/4/2020 23:51:09' prior: 50874950!
test10PortfolioShouldNotAddItself
	
	| portfolio |
	
	portfolio := Portfolio new.

	self should: [portfolio add: portfolio] raise: Error.! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'NNH 11/4/2020 23:51:53' prior: 50874967!
test11PortfolioShouldNotAddParentPortfolio
	
	| aPortfolio anotherPortfolio |
	
	aPortfolio := Portfolio new.
	anotherPortfolio := Portfolio new.
	anotherPortfolio add: aPortfolio.

	self should: [aPortfolio add: anotherPortfolio] raise: Error.! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'NNH 11/4/2020 23:52:53' prior: 50875099!
test12PortfolioShouldNotAddAccountIfTheyBothBelongToAnotherPortfolio
	
	| p1 p2 p3 |
	
	p1 := Portfolio new.
	p2 := Portfolio new.
	p3 := Portfolio new.

	p1 add: p2.
	p1 add: p3.

	self should: [p3 add: p2]
	raise: Error
	withMessageText: Portfolio canNotBelongToACommonPortfolioErrorDescription.! !

!testRun: #PortfolioTest #test12PortfolioShouldNotAddAccountIfTheyBothBelongToAnotherPortfolio stamp: 'NNH 11/4/2020 23:52:58'!
ERROR!

!testRun: #PortfolioTest #test12PortfolioShouldNotAddAccountIfTheyBothBelongToAnotherPortfolio stamp: 'NNH 11/4/2020 23:52:58'!
ERROR!
!Portfolio class methodsFor: 'error descriptions' stamp: 'NNH 11/4/2020 23:53:14'!
canNotBelongToACommonPortfolioErrorDescription
	self shouldBeImplemented.! !
!Portfolio class methodsFor: 'error descriptions' stamp: 'NNH 11/4/2020 23:54:30' prior: 50875871!
canNotBelongToACommonPortfolioErrorDescription
	^ 'There is a portfolio containing both portfolios'! !

!testRun: #PortfolioTest #test12PortfolioShouldNotAddAccountIfTheyBothBelongToAnotherPortfolio stamp: 'NNH 11/4/2020 23:54:38'!
FAILURE!

!testRun: #PortfolioTest #test12PortfolioShouldNotAddAccountIfTheyBothBelongToAnotherPortfolio stamp: 'NNH 11/4/2020 23:54:38'!
FAILURE!

!testRun: #PortfolioTest #test12PortfolioShouldNotAddAccountIfTheyBothBelongToAnotherPortfolio stamp: 'NNH 11/4/2020 23:54:49'!
FAILURE!

!testRun: #PortfolioTest #test12PortfolioShouldNotAddAccountIfTheyBothBelongToAnotherPortfolio stamp: 'NNH 11/4/2020 23:54:49'!
FAILURE!

!testRun: #PortfolioTest #test12PortfolioShouldNotAddAccountIfTheyBothBelongToAnotherPortfolio stamp: 'NNH 11/4/2020 23:54:57'!
FAILURE!
!Portfolio methodsFor: 'assertions' stamp: 'NNH 11/4/2020 23:57:24' prior: 50875818!
assertThatIsIndependentOf: anAccountOrPortfolio

	(self isInAPortfolioWith: anAccountOrPortfolio) ifTrue: [self error: self class canNotBelongToACommonPortfolioErrorDescription].
	(self hasAccountsInCommonWith: anAccountOrPortfolio)	 ifTrue: [self error: self class cannotIncludeItselfErrorDescription]! !

!testRun: #PortfolioTest #test12PortfolioShouldNotAddAccountIfTheyBothBelongToAnotherPortfolio stamp: 'NNH 11/4/2020 23:57:32'!
PASSED!

!testRun: #PortfolioTest #test01BalanceOfEmptyPortfolioIsZero stamp: 'NNH 11/4/2020 23:57:43'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithOneAccountIsBalanceOfThatAccount stamp: 'NNH 11/4/2020 23:57:43'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioWithMoreThanOneAccountIsSumOfBalances stamp: 'NNH 11/4/2020 23:57:43'!
PASSED!

!testRun: #PortfolioTest #test04EmptyPortfolioHasRegisteredNoTransactions stamp: 'NNH 11/4/2020 23:57:43'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioWithOneAccountRegistersATransactionOfThatAccount stamp: 'NNH 11/4/2020 23:57:43'!
PASSED!

!testRun: #PortfolioTest #test06APortfolioWithMoreThanOneAccountRegistersATransactionThatIsNotFromTheFirstAccount stamp: 'NNH 11/4/2020 23:57:43'!
PASSED!

!testRun: #PortfolioTest #test07EmptyPortfolioHasNoTransactions stamp: 'NNH 11/4/2020 23:57:43'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioWithOneAccountHasTheTransactionsOfThatAccount stamp: 'NNH 11/4/2020 23:57:43'!
PASSED!

!testRun: #PortfolioTest #test09APortfolioWithMoreThanOneAccountHasTheTransactionsOfItsAccounts stamp: 'NNH 11/4/2020 23:57:43'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioShouldNotAddItself stamp: 'NNH 11/4/2020 23:57:43'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioShouldNotAddParentPortfolio stamp: 'NNH 11/4/2020 23:57:43'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioShouldNotAddAccountIfTheyBothBelongToAnotherPortfolio stamp: 'NNH 11/4/2020 23:57:43'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioShouldNotAddAnotherPortfolioWhenTheyShareAnAccount stamp: 'NNH 11/4/2020 23:57:43'!
PASSED!

!testRun: #PortfolioTest #test14Rombo stamp: 'NNH 11/4/2020 23:57:43'!
FAILURE!

!testRun: #PortfolioTest #test15 stamp: 'NNH 11/4/2020 23:57:43'!
PASSED!

!testRun: #PortfolioTest #test14Rombo stamp: 'NNH 11/4/2020 23:57:43'!
FAILURE!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'NNH 11/4/2020 23:58:20' prior: 50875012!
test13PortfolioShouldNotAddAnotherPortfolioWhenTheyShareAnAccount
	
	| p1 p2 p3 |
	
	p1 := Portfolio new.
	p2 := Portfolio new.
	p3 := Portfolio new.

	p1 add: p3.
	p2 add: p3.

	self should: [p1 add: p2]
	raise: Error
	withMessageText: Portfolio canNotHaveAnAccountInCommonErrorDescription.! !

!testRun: #PortfolioTest #test13PortfolioShouldNotAddAnotherPortfolioWhenTheyShareAnAccount stamp: 'NNH 11/4/2020 23:58:26'!
ERROR!

!testRun: #PortfolioTest #test13PortfolioShouldNotAddAnotherPortfolioWhenTheyShareAnAccount stamp: 'NNH 11/4/2020 23:58:26'!
ERROR!
!Portfolio class methodsFor: 'error descriptions' stamp: 'NNH 11/4/2020 23:58:36'!
canNotHaveAnAccountInCommonErrorDescription
	self shouldBeImplemented.! !
!Portfolio class methodsFor: 'error descriptions' stamp: 'NNH 11/4/2020 23:58:51' prior: 50876002!
canNotHaveAnAccountInCommonErrorDescription
	^ 'Portfolios should not share an account'! !

!testRun: #PortfolioTest #test13PortfolioShouldNotAddAnotherPortfolioWhenTheyShareAnAccount stamp: 'NNH 11/4/2020 23:58:59'!
FAILURE!
!Portfolio methodsFor: 'assertions' stamp: 'NNH 11/4/2020 23:59:29' prior: 50875905!
assertThatIsIndependentOf: anAccountOrPortfolio

	(self isInAPortfolioWith: anAccountOrPortfolio) ifTrue: [self error: self class canNotBelongToACommonPortfolioErrorDescription].
	(self hasAccountsInCommonWith: anAccountOrPortfolio)	 ifTrue: [self error: self class canNotHaveAnAccountInCommonErrorDescription ]! !
!Portfolio methodsFor: 'assertions' stamp: 'NNH 11/4/2020 23:59:36' prior: 50876018!
assertThatIsIndependentOf: anAccountOrPortfolio

	(self isInAPortfolioWith: anAccountOrPortfolio) ifTrue: [self error: self class canNotBelongToACommonPortfolioErrorDescription ].
	(self hasAccountsInCommonWith: anAccountOrPortfolio)	 ifTrue: [self error: self class canNotHaveAnAccountInCommonErrorDescription ].! !

!testRun: #PortfolioTest #test13PortfolioShouldNotAddAnotherPortfolioWhenTheyShareAnAccount stamp: 'NNH 11/4/2020 23:59:38'!
PASSED!

!testRun: #PortfolioTest #test01BalanceOfEmptyPortfolioIsZero stamp: 'NNH 11/4/2020 23:59:42'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithOneAccountIsBalanceOfThatAccount stamp: 'NNH 11/4/2020 23:59:42'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioWithMoreThanOneAccountIsSumOfBalances stamp: 'NNH 11/4/2020 23:59:42'!
PASSED!

!testRun: #PortfolioTest #test04EmptyPortfolioHasRegisteredNoTransactions stamp: 'NNH 11/4/2020 23:59:42'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioWithOneAccountRegistersATransactionOfThatAccount stamp: 'NNH 11/4/2020 23:59:42'!
PASSED!

!testRun: #PortfolioTest #test06APortfolioWithMoreThanOneAccountRegistersATransactionThatIsNotFromTheFirstAccount stamp: 'NNH 11/4/2020 23:59:42'!
PASSED!

!testRun: #PortfolioTest #test07EmptyPortfolioHasNoTransactions stamp: 'NNH 11/4/2020 23:59:42'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioWithOneAccountHasTheTransactionsOfThatAccount stamp: 'NNH 11/4/2020 23:59:42'!
PASSED!

!testRun: #PortfolioTest #test09APortfolioWithMoreThanOneAccountHasTheTransactionsOfItsAccounts stamp: 'NNH 11/4/2020 23:59:42'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioShouldNotAddItself stamp: 'NNH 11/4/2020 23:59:42'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioShouldNotAddParentPortfolio stamp: 'NNH 11/4/2020 23:59:42'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioShouldNotAddAccountIfTheyBothBelongToAnotherPortfolio stamp: 'NNH 11/4/2020 23:59:42'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioShouldNotAddAnotherPortfolioWhenTheyShareAnAccount stamp: 'NNH 11/4/2020 23:59:42'!
PASSED!

!testRun: #PortfolioTest #test14Rombo stamp: 'NNH 11/4/2020 23:59:42'!
FAILURE!

!testRun: #PortfolioTest #test15 stamp: 'NNH 11/4/2020 23:59:42'!
PASSED!

!testRun: #PortfolioTest #test14Rombo stamp: 'NNH 11/4/2020 23:59:42'!
FAILURE!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'NNH 11/5/2020 00:00:08' prior: 50875186!
test14Rombo
	
	| p1 p2 p3 p4 |
	
	p1 := Portfolio new.
	p2 := Portfolio new.
	p3 := Portfolio new.
	p4 := Portfolio new.

	p1 add: p2.
	p1 add: p3.
	p3 add: p4.

	self should: [p2 add: p4]
	raise: Error
	withMessageText: Portfolio canNotHaveAnAccountInCommonErrorDescription.! !

!testRun: #PortfolioTest #test01BalanceOfEmptyPortfolioIsZero stamp: 'NNH 11/5/2020 00:00:16'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithOneAccountIsBalanceOfThatAccount stamp: 'NNH 11/5/2020 00:00:16'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioWithMoreThanOneAccountIsSumOfBalances stamp: 'NNH 11/5/2020 00:00:16'!
PASSED!

!testRun: #PortfolioTest #test04EmptyPortfolioHasRegisteredNoTransactions stamp: 'NNH 11/5/2020 00:00:16'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioWithOneAccountRegistersATransactionOfThatAccount stamp: 'NNH 11/5/2020 00:00:16'!
PASSED!

!testRun: #PortfolioTest #test06APortfolioWithMoreThanOneAccountRegistersATransactionThatIsNotFromTheFirstAccount stamp: 'NNH 11/5/2020 00:00:16'!
PASSED!

!testRun: #PortfolioTest #test07EmptyPortfolioHasNoTransactions stamp: 'NNH 11/5/2020 00:00:16'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioWithOneAccountHasTheTransactionsOfThatAccount stamp: 'NNH 11/5/2020 00:00:16'!
PASSED!

!testRun: #PortfolioTest #test09APortfolioWithMoreThanOneAccountHasTheTransactionsOfItsAccounts stamp: 'NNH 11/5/2020 00:00:16'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioShouldNotAddItself stamp: 'NNH 11/5/2020 00:00:16'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioShouldNotAddParentPortfolio stamp: 'NNH 11/5/2020 00:00:16'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioShouldNotAddAccountIfTheyBothBelongToAnotherPortfolio stamp: 'NNH 11/5/2020 00:00:16'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioShouldNotAddAnotherPortfolioWhenTheyShareAnAccount stamp: 'NNH 11/5/2020 00:00:16'!
PASSED!

!testRun: #PortfolioTest #test14Rombo stamp: 'NNH 11/5/2020 00:00:16'!
FAILURE!

!testRun: #PortfolioTest #test15 stamp: 'NNH 11/5/2020 00:00:16'!
PASSED!

!testRun: #PortfolioTest #test14Rombo stamp: 'NNH 11/5/2020 00:00:16'!
FAILURE!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'NNH 11/5/2020 00:00:30' prior: 50876107!
test14Rombo
	
	| p1 p2 p3 p4 |
	
	p1 := Portfolio new.
	p2 := Portfolio new.
	p3 := Portfolio new.
	p4 := Portfolio new.

	p1 add: p2.
	p1 add: p3.
	p3 add: p4.

	self should: [p2 add: p4]
	raise: Error
	withMessageText: Portfolio canNotBelongToACommonPortfolioErrorDescription.! !

!testRun: #PortfolioTest #test01BalanceOfEmptyPortfolioIsZero stamp: 'NNH 11/5/2020 00:00:32'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithOneAccountIsBalanceOfThatAccount stamp: 'NNH 11/5/2020 00:00:32'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioWithMoreThanOneAccountIsSumOfBalances stamp: 'NNH 11/5/2020 00:00:32'!
PASSED!

!testRun: #PortfolioTest #test04EmptyPortfolioHasRegisteredNoTransactions stamp: 'NNH 11/5/2020 00:00:32'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioWithOneAccountRegistersATransactionOfThatAccount stamp: 'NNH 11/5/2020 00:00:32'!
PASSED!

!testRun: #PortfolioTest #test06APortfolioWithMoreThanOneAccountRegistersATransactionThatIsNotFromTheFirstAccount stamp: 'NNH 11/5/2020 00:00:32'!
PASSED!

!testRun: #PortfolioTest #test07EmptyPortfolioHasNoTransactions stamp: 'NNH 11/5/2020 00:00:32'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioWithOneAccountHasTheTransactionsOfThatAccount stamp: 'NNH 11/5/2020 00:00:32'!
PASSED!

!testRun: #PortfolioTest #test09APortfolioWithMoreThanOneAccountHasTheTransactionsOfItsAccounts stamp: 'NNH 11/5/2020 00:00:32'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioShouldNotAddItself stamp: 'NNH 11/5/2020 00:00:32'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioShouldNotAddParentPortfolio stamp: 'NNH 11/5/2020 00:00:32'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioShouldNotAddAccountIfTheyBothBelongToAnotherPortfolio stamp: 'NNH 11/5/2020 00:00:32'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioShouldNotAddAnotherPortfolioWhenTheyShareAnAccount stamp: 'NNH 11/5/2020 00:00:32'!
PASSED!

!testRun: #PortfolioTest #test14Rombo stamp: 'NNH 11/5/2020 00:00:32'!
PASSED!

!testRun: #PortfolioTest #test15 stamp: 'NNH 11/5/2020 00:00:32'!
PASSED!

!testRun: #PortfolioTest #test01BalanceOfEmptyPortfolioIsZero stamp: 'NNH 11/5/2020 00:01:24'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithOneAccountIsBalanceOfThatAccount stamp: 'NNH 11/5/2020 00:01:24'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioWithMoreThanOneAccountIsSumOfBalances stamp: 'NNH 11/5/2020 00:01:24'!
PASSED!

!testRun: #PortfolioTest #test04EmptyPortfolioHasRegisteredNoTransactions stamp: 'NNH 11/5/2020 00:01:24'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioWithOneAccountRegistersATransactionOfThatAccount stamp: 'NNH 11/5/2020 00:01:24'!
PASSED!

!testRun: #PortfolioTest #test06APortfolioWithMoreThanOneAccountRegistersATransactionThatIsNotFromTheFirstAccount stamp: 'NNH 11/5/2020 00:01:24'!
PASSED!

!testRun: #PortfolioTest #test07EmptyPortfolioHasNoTransactions stamp: 'NNH 11/5/2020 00:01:24'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioWithOneAccountHasTheTransactionsOfThatAccount stamp: 'NNH 11/5/2020 00:01:24'!
PASSED!

!testRun: #PortfolioTest #test09APortfolioWithMoreThanOneAccountHasTheTransactionsOfItsAccounts stamp: 'NNH 11/5/2020 00:01:24'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioShouldNotAddItself stamp: 'NNH 11/5/2020 00:01:24'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioShouldNotAddParentPortfolio stamp: 'NNH 11/5/2020 00:01:24'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioShouldNotAddAccountIfTheyBothBelongToAnotherPortfolio stamp: 'NNH 11/5/2020 00:01:24'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioShouldNotAddAnotherPortfolioWhenTheyShareAnAccount stamp: 'NNH 11/5/2020 00:01:24'!
PASSED!

!testRun: #PortfolioTest #test14Rombo stamp: 'NNH 11/5/2020 00:01:24'!
PASSED!

!testRun: #PortfolioTest #test15 stamp: 'NNH 11/5/2020 00:01:24'!
PASSED!

----SNAPSHOT----(5 November 2020 00:04:01) CuisUniversity-4384.image priorSource: 17306647!

----SNAPSHOT----(5 November 2020 00:04:06) CuisUniversity-4384.image priorSource: 17428767!

----QUIT----(5 November 2020 00:04:10) CuisUniversity-4384.image priorSource: 17428860!

----STARTUP---- (5 November 2020 00:06:16) as /home/nahuel/Documents/cuisuniversity/CuisUniversity-4384.image!


----SNAPSHOT----(5 November 2020 00:07:14) CuisUniversity-4384.image priorSource: 17428953!

----QUIT----(5 November 2020 00:07:17) CuisUniversity-4384.image priorSource: 17429155!

----STARTUP---- (5 November 2020 22:29:43) as /home/nahuel/Documents/cuisuniversity/CuisUniversity-4384.image!


!methodRemoval: ReceptiveAccount #isRelatedTo:excluding: stamp: 'NNH 11/5/2020 22:35:26'!
isRelatedTo: anAccount excluding: anAccountToExclude
	
	| neighbors |
		
	neighbors := parents copy.
	neighbors remove: anAccountToExclude ifAbsent: [].
	
	^ anAccount == self or: [
		neighbors anySatisfy: [:aNeighbor | aNeighbor isRelatedTo: anAccount excluding: self ] 
		].!

Object subclass: #ProductoFinanciero
	instanceVariableNames: 'accounts parents'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classDefinition: #ProductoFinanciero category: 'Portfolio-Ejercicio' stamp: 'NNH 11/5/2020 22:43:51'!
Object subclass: #ProductoFinanciero
	instanceVariableNames: 'accounts parents'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

ProductoFinanciero subclass: #Portfolio
	instanceVariableNames: 'accounts parents'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

Portfolio superclass: ProductoFinanciero !

ReceptiveAccount superclass: ProductoFinanciero !

Object subclass: #ProductoFinanciero
	instanceVariableNames: 'parents'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classDefinition: #ProductoFinanciero category: 'Portfolio-Ejercicio' stamp: 'NNH 11/5/2020 23:09:41'!
Object subclass: #ProductoFinanciero
	instanceVariableNames: 'parents'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

ProductoFinanciero subclass: #Portfolio
	instanceVariableNames: 'accounts'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classDefinition: #Portfolio category: 'Portfolio-Ejercicio' stamp: 'NNH 11/5/2020 23:09:50'!
ProductoFinanciero subclass: #Portfolio
	instanceVariableNames: 'accounts'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!
!ProductoFinanciero methodsFor: 'inserting - private' stamp: 'NNH 11/5/2020 23:10:08'!
addParent: aPortfolio 
	
	parents add: aPortfolio.! !

!methodRemoval: Portfolio #addParent: stamp: 'NNH 11/5/2020 23:10:08'!
addParent: aPortfolio 
	
	parents add: aPortfolio.!
!ProductoFinanciero methodsFor: 'nil' stamp: 'NNH 11/5/2020 23:11:23'!
balance
	self subclassResponsibility.! !
!ProductoFinanciero methodsFor: 'as yet unclassified' stamp: 'NNH 11/5/2020 23:11:30'!
transactions
	self subclassResponsibility.! !
!ProductoFinanciero methodsFor: 'as yet unclassified' stamp: 'NNH 11/5/2020 23:11:39'!
hasRegistered: aTransaction
	self subclassResponsibility.! !
!ReceptiveAccount methodsFor: 'transactions - private' stamp: 'NNH 11/5/2020 23:14:22' prior: 50872619!
addTransactionsTo: aCollectionOfTransactions
	
	aCollectionOfTransactions addAllLast: self transactions.! !

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'NNH 11/5/2020 23:14:28'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'NNH 11/5/2020 23:14:28'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'NNH 11/5/2020 23:14:28'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'NNH 11/5/2020 23:14:28'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'NNH 11/5/2020 23:14:28'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'NNH 11/5/2020 23:14:28'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'NNH 11/5/2020 23:14:28'!
PASSED!

!testRun: #PortfolioTest #test01BalanceOfEmptyPortfolioIsZero stamp: 'NNH 11/5/2020 23:14:32'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithOneAccountIsBalanceOfThatAccount stamp: 'NNH 11/5/2020 23:14:32'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioWithMoreThanOneAccountIsSumOfBalances stamp: 'NNH 11/5/2020 23:14:32'!
PASSED!

!testRun: #PortfolioTest #test04EmptyPortfolioHasRegisteredNoTransactions stamp: 'NNH 11/5/2020 23:14:32'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioWithOneAccountRegistersATransactionOfThatAccount stamp: 'NNH 11/5/2020 23:14:32'!
PASSED!

!testRun: #PortfolioTest #test06APortfolioWithMoreThanOneAccountRegistersATransactionThatIsNotFromTheFirstAccount stamp: 'NNH 11/5/2020 23:14:32'!
PASSED!

!testRun: #PortfolioTest #test07EmptyPortfolioHasNoTransactions stamp: 'NNH 11/5/2020 23:14:32'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioWithOneAccountHasTheTransactionsOfThatAccount stamp: 'NNH 11/5/2020 23:14:32'!
PASSED!

!testRun: #PortfolioTest #test09APortfolioWithMoreThanOneAccountHasTheTransactionsOfItsAccounts stamp: 'NNH 11/5/2020 23:14:32'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioShouldNotAddItself stamp: 'NNH 11/5/2020 23:14:32'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioShouldNotAddParentPortfolio stamp: 'NNH 11/5/2020 23:14:32'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioShouldNotAddAccountIfTheyBothBelongToAnotherPortfolio stamp: 'NNH 11/5/2020 23:14:32'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioShouldNotAddAnotherPortfolioWhenTheyShareAnAccount stamp: 'NNH 11/5/2020 23:14:32'!
PASSED!

!testRun: #PortfolioTest #test14Rombo stamp: 'NNH 11/5/2020 23:14:32'!
PASSED!

!testRun: #PortfolioTest #test15 stamp: 'NNH 11/5/2020 23:14:32'!
PASSED!
!ProductoFinanciero methodsFor: 'testing dependencies' stamp: 'NNH 11/5/2020 23:17:00'!
accountsInPortfolio
	
	| accountsInPortfolio |
	accountsInPortfolio := OrderedCollection new.
	self addAccountsInPortfolioTo: accountsInPortfolio.
	^ accountsInPortfolio.! !

!methodRemoval: ReceptiveAccount #accountsInPortfolio stamp: 'NNH 11/5/2020 23:17:00'!
accountsInPortfolio
	
	| accountsInPortfolio |
	accountsInPortfolio := OrderedCollection new.
	self addAccountsInPortfolioTo: accountsInPortfolio.
	^ accountsInPortfolio.!
!ProductoFinanciero methodsFor: 'testing dependencies' stamp: 'NNH 11/5/2020 23:17:37'!
addAccountsInPortfolioTo: aCollectionOfAccounts
		
	self subclassResponsibility.! !
!ProductoFinanciero methodsFor: 'testing dependencies' stamp: 'NNH 11/5/2020 23:19:01'!
includes: anAccountToSearch
	
	self subclassResponsibility.! !
!Portfolio methodsFor: 'assertions' stamp: 'NNH 11/5/2020 23:21:11'!
assertFinancialProductCanBeAdded: anAccountOrPortfolio

	(self isInAPortfolioWith: anAccountOrPortfolio) ifTrue: [self error: self class canNotBelongToACommonPortfolioErrorDescription ].
	(self hasAccountsInCommonWith: anAccountOrPortfolio)	 ifTrue: [self error: self class canNotHaveAnAccountInCommonErrorDescription ].! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'NNH 11/5/2020 23:21:11' prior: 50874675!
add: anAccountOrPortfolio 
	
	self assertFinancialProductCanBeAdded: anAccountOrPortfolio.
	
	anAccountOrPortfolio addParent: self.	
	accounts add: anAccountOrPortfolio.! !

!methodRemoval: Portfolio #assertThatIsIndependentOf: stamp: 'NNH 11/5/2020 23:21:11'!
assertThatIsIndependentOf: anAccountOrPortfolio

	(self isInAPortfolioWith: anAccountOrPortfolio) ifTrue: [self error: self class canNotBelongToACommonPortfolioErrorDescription ].
	(self hasAccountsInCommonWith: anAccountOrPortfolio)	 ifTrue: [self error: self class canNotHaveAnAccountInCommonErrorDescription ].!

!classRenamed: #ProductoFinanciero as: #FinancialProduct stamp: 'NNH 11/5/2020 23:24:09'!
Smalltalk renameClassNamed: #ProductoFinanciero as: #FinancialProduct!

Object subclass: #PortfolioArbol
	instanceVariableNames: 'parents'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classDefinition: #PortfolioArbol category: 'Portfolio-Ejercicio' stamp: 'NNH 11/5/2020 23:35:08'!
Object subclass: #PortfolioArbol
	instanceVariableNames: 'parents'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

PortfolioArbol subclass: #PortfolioNodo
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classDefinition: #PortfolioNodo category: 'Portfolio-Ejercicio' stamp: 'NNH 11/5/2020 23:35:35'!
PortfolioArbol subclass: #PortfolioNodo
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

PortfolioArbol subclass: #PortfolioHoja
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classDefinition: #PortfolioHoja category: 'Portfolio-Ejercicio' stamp: 'NNH 11/5/2020 23:35:40'!
PortfolioArbol subclass: #PortfolioHoja
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

PortfolioArbol subclass: #PortfolioHoja
	instanceVariableNames: 'receptiveAccount'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classDefinition: #PortfolioHoja category: 'Portfolio-Ejercicio' stamp: 'NNH 11/5/2020 23:36:12'!
PortfolioArbol subclass: #PortfolioHoja
	instanceVariableNames: 'receptiveAccount'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

PortfolioArbol subclass: #PortfolioNodo
	instanceVariableNames: 'financialProducts'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classDefinition: #PortfolioNodo category: 'Portfolio-Ejercicio' stamp: 'NNH 11/5/2020 23:36:24'!
PortfolioArbol subclass: #PortfolioNodo
	instanceVariableNames: 'financialProducts'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!
!PortfolioArbol methodsFor: 'nil' stamp: 'NNH 11/5/2020 23:37:32'!
includes: anAccountToSearch
	
	self subclassResponsibility.! !
!PortfolioArbol methodsFor: 'as yet unclassified' stamp: 'NNH 11/5/2020 23:37:52'!
accountsInPortfolio
	
	| accountsInPortfolio |
	accountsInPortfolio := OrderedCollection new.
	self addAccountsInPortfolioTo: accountsInPortfolio.
	^ accountsInPortfolio.! !
!PortfolioArbol methodsFor: 'as yet unclassified' stamp: 'NNH 11/5/2020 23:38:06'!
addAccountsInPortfolioTo: aCollectionOfAccounts
		
	self subclassResponsibility.! !
!PortfolioArbol methodsFor: 'as yet unclassified' stamp: 'NNH 11/5/2020 23:38:29'!
addParent: aPortfolio 
	
	parents add: aPortfolio.! !
!PortfolioArbol methodsFor: 'as yet unclassified' stamp: 'NNH 11/5/2020 23:39:13'!
balance
	
	self subclassResponsibility.! !
!PortfolioArbol methodsFor: 'as yet unclassified' stamp: 'NNH 11/5/2020 23:39:19'!
transactions
	
	self subclassResponsibility.! !
!PortfolioArbol methodsFor: 'as yet unclassified' stamp: 'NNH 11/5/2020 23:39:32'!
hasRegistered: aTransaction
	
	self subclassResponsibility.! !

!classRenamed: #PortfolioArbol as: #PortfolioTipoDeNodo stamp: 'NNH 11/5/2020 23:44:48'!
Smalltalk renameClassNamed: #PortfolioArbol as: #PortfolioTipoDeNodo!
!PortfolioHoja methodsFor: 'nil' stamp: 'NNH 11/5/2020 23:47:14' overrides: 50876648!
balance
	
	^ receptiveAccount balance.! !
!PortfolioHoja methodsFor: 'as yet unclassified' stamp: 'NNH 11/5/2020 23:47:22' overrides: 50876652!
transactions
	
	^ receptiveAccount transactions.! !
!PortfolioHoja methodsFor: 'as yet unclassified' stamp: 'NNH 11/5/2020 23:47:39' overrides: 50876657!
hasRegistered: aTransaction
	
	^ receptiveAccount hasRegistered: aTransaction.! !
!PortfolioHoja methodsFor: 'as yet unclassified' stamp: 'NNH 11/5/2020 23:48:16' overrides: 50876623!
includes: anAccountToSearch
	
	^ anAccountToSearch == self.! !
!PortfolioHoja methodsFor: 'as yet unclassified' stamp: 'NNH 11/5/2020 23:48:37'!
addTransactionsTo: aCollectionOfTransactions
	
	aCollectionOfTransactions addAllLast: self transactions.! !
!PortfolioNodo methodsFor: 'nil' stamp: 'NNH 11/5/2020 23:50:23' overrides: 50876648!
balance
	^ financialProducts sum: [:anAccount | anAccount balance] ifEmpty: [0].
	
	! !
!PortfolioNodo methodsFor: 'as yet unclassified' stamp: 'NNH 11/5/2020 23:50:44' overrides: 50876657!
hasRegistered: aTransaction
	^ financialProducts anySatisfy: [:anAccount | anAccount hasRegistered: aTransaction].
	
	! !
!PortfolioNodo methodsFor: 'as yet unclassified' stamp: 'NNH 11/5/2020 23:51:14' overrides: 50876652!
transactions
	
	| aCollectionOfTransactions |
	
	aCollectionOfTransactions := OrderedCollection new.
	self addTransactionsTo: aCollectionOfTransactions.
	
	^aCollectionOfTransactions.
	
	! !
!PortfolioNodo methodsFor: 'as yet unclassified' stamp: 'NNH 11/5/2020 23:52:29' overrides: 50876623!
includes: anAccountToSearch
	
	
	^ (anAccountToSearch == self) or: [
		financialProducts anySatisfy: [:anAccount | anAccount includes: anAccountToSearch]
		].
	
	! !
!PortfolioNodo methodsFor: 'as yet unclassified' stamp: 'NNH 11/5/2020 23:52:46'!
addTransactionsTo: aCollectionOfTransactions
	
	financialProducts do: [ :anAccount | anAccount addTransactionsTo: aCollectionOfTransactions ].
	
	! !
!PortfolioNodo methodsFor: 'as yet unclassified' stamp: 'NNH 11/5/2020 23:54:01'!
add: anAccountOrPortfolio 
	
	self assertFinancialProductCanBeAdded: anAccountOrPortfolio.
	
	anAccountOrPortfolio addParent: self.	
	financialProducts add: anAccountOrPortfolio.
	
	! !
!PortfolioNodo methodsFor: 'as yet unclassified' stamp: 'NNH 11/5/2020 23:54:24'!
assertFinancialProductCanBeAdded: anAccountOrPortfolio

	(self isInAPortfolioWith: anAccountOrPortfolio) ifTrue: [self error: self class canNotBelongToACommonPortfolioErrorDescription ].
	(self hasAccountsInCommonWith: anAccountOrPortfolio)	 ifTrue: [self error: self class canNotHaveAnAccountInCommonErrorDescription ].
	
	! !

----SNAPSHOT----(6 November 2020 00:14:54) CuisUniversity-4384.image priorSource: 17429248!

----QUIT----(6 November 2020 00:15:01) CuisUniversity-4384.image priorSource: 17443367!

----STARTUP---- (6 November 2020 14:55:55) as /home/nahuel/Documents/cuisuniversity/CuisUniversity-4384.image!


!classRemoval: #PortfolioHoja stamp: 'NNH 11/6/2020 14:56:16'!
PortfolioTipoDeNodo subclass: #PortfolioHoja
	instanceVariableNames: 'receptiveAccount'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classRemoval: #PortfolioNodo stamp: 'NNH 11/6/2020 14:56:16'!
PortfolioTipoDeNodo subclass: #PortfolioNodo
	instanceVariableNames: 'financialProducts'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classRemoval: #PortfolioTipoDeNodo stamp: 'NNH 11/6/2020 14:56:17'!
Object subclass: #PortfolioTipoDeNodo
	instanceVariableNames: 'parents'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!methodRemoval: Portfolio #accountsInPortfolio stamp: 'NNH 11/6/2020 14:56:47'!
accountsInPortfolio
	
	| accountsInPortfolio |
	accountsInPortfolio := OrderedCollection new.
	self addAccountsInPortfolioTo: accountsInPortfolio.
	^ accountsInPortfolio.
	
	
	
!
!Portfolio methodsFor: 'inserting' stamp: 'NNH 11/6/2020 14:57:43'!
addFinancialProduct: anAccountOrPortfolio 
	
	self assertFinancialProductCanBeAdded: anAccountOrPortfolio.
	
	anAccountOrPortfolio addParent: self.	
	accounts add: anAccountOrPortfolio.! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'NNH 11/6/2020 14:57:43' prior: 50872110!
test05PortfolioWithOneAccountRegistersATransactionOfThatAccount

	| portfolio account aTransaction |

	account := ReceptiveAccount new.
	aTransaction := Deposit register: 100 on: account.
	
	portfolio := Portfolio new.
	portfolio addFinancialProduct: account.

	self assert: (portfolio hasRegistered: aTransaction).
	
	! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'NNH 11/6/2020 14:57:43' prior: 50872040!
test02BalanceOfPortfolioWithOneAccountIsBalanceOfThatAccount

	| portfolio account |

	account := ReceptiveAccount new.
	Deposit register: 100 on: account.
	
	portfolio := Portfolio new.
	portfolio addFinancialProduct: account.
	
	self assert: 100 equals: portfolio balance.
	
	! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'NNH 11/6/2020 14:57:43' prior: 50875831!
test10PortfolioShouldNotAddItself
	
	| portfolio |
	
	portfolio := Portfolio new.

	self should: [portfolio addFinancialProduct: portfolio] raise: Error.! !
!ReceptiveAccount methodsFor: 'as yet unclassified' stamp: 'NNH 11/6/2020 14:57:43' prior: 50873755 overrides: 50876380!
addParent: aPortfolio 
	parents addFinancialProduct: aPortfolio.! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'NNH 11/6/2020 14:57:43' prior: 50872133!
test06APortfolioWithMoreThanOneAccountRegistersATransactionThatIsNotFromTheFirstAccount

	| portfolio anAccount anotherAccount aTransaction |

	anAccount := ReceptiveAccount new.
	anotherAccount := ReceptiveAccount new.
	aTransaction := Deposit register: 100 on: anotherAccount.
	
	portfolio := Portfolio new.
	portfolio addFinancialProduct: anAccount.
	portfolio addFinancialProduct: anotherAccount.

	self assert: (portfolio hasRegistered: aTransaction).
	
	! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'NNH 11/6/2020 14:57:43' prior: 50875839!
test11PortfolioShouldNotAddParentPortfolio
	
	| aPortfolio anotherPortfolio |
	
	aPortfolio := Portfolio new.
	anotherPortfolio := Portfolio new.
	anotherPortfolio addFinancialProduct: aPortfolio.

	self should: [aPortfolio addFinancialProduct: anotherPortfolio] raise: Error.! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'NNH 11/6/2020 14:57:43' prior: 50876177!
test14Rombo
	
	| p1 p2 p3 p4 |
	
	p1 := Portfolio new.
	p2 := Portfolio new.
	p3 := Portfolio new.
	p4 := Portfolio new.

	p1 addFinancialProduct: p2.
	p1 addFinancialProduct: p3.
	p3 addFinancialProduct: p4.

	self should: [p2 addFinancialProduct: p4]
	raise: Error
	withMessageText: Portfolio canNotBelongToACommonPortfolioErrorDescription.! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'NNH 11/6/2020 14:57:43' prior: 50875981!
test13PortfolioShouldNotAddAnotherPortfolioWhenTheyShareAnAccount
	
	| p1 p2 p3 |
	
	p1 := Portfolio new.
	p2 := Portfolio new.
	p3 := Portfolio new.

	p1 addFinancialProduct: p3.
	p2 addFinancialProduct: p3.

	self should: [p1 addFinancialProduct: p2]
	raise: Error
	withMessageText: Portfolio canNotHaveAnAccountInCommonErrorDescription.! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'NNH 11/6/2020 14:57:43' prior: 50876534!
add: anAccountOrPortfolio 
	
	self assertFinancialProductCanBeAdded: anAccountOrPortfolio.
	
	anAccountOrPortfolio addParent: self.	
	accounts addFinancialProduct: anAccountOrPortfolio.! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'NNH 11/6/2020 14:57:43' prior: 50872064!
test03BalanceOfPortfolioWithMoreThanOneAccountIsSumOfBalances

	| portfolio anAccount anotherAccount |

	anAccount := ReceptiveAccount new.
	Deposit register: 100 on: anAccount.
	anotherAccount := ReceptiveAccount new.
	
	portfolio := Portfolio new.
	portfolio addFinancialProduct: anAccount.
	portfolio addFinancialProduct: anotherAccount.

	self assert: 100 equals: portfolio balance.
	
	! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'NNH 11/6/2020 14:57:43' prior: 50872201!
test08PortfolioWithOneAccountHasTheTransactionsOfThatAccount

	| portfolio account aTransaction |

	account := ReceptiveAccount new.
	aTransaction := Deposit register: 100 on: account.
	
	portfolio := Portfolio new.
	portfolio addFinancialProduct: account.

	self assert: 1 equals: portfolio transactions size.
	self assert: portfolio transactions includes: aTransaction.
	
	! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'NNH 11/6/2020 14:57:43' prior: 50875649 overrides: 50876509!
addAccountsInPortfolioTo: aCollectionOfAccounts
		
	aCollectionOfAccounts addFinancialProduct: self.
	accounts do: [:anAccount | anAccount addAccountsInPortfolioTo: aCollectionOfAccounts].
	
	
	
! !
!ReceptiveAccount methodsFor: 'as yet unclassified' stamp: 'NNH 11/6/2020 14:57:43' prior: 50867972!
register: aTransaction

	transactions addFinancialProduct: aTransaction 
! !
!FinancialProduct methodsFor: 'as yet unclassified' stamp: 'NNH 11/6/2020 14:57:43' prior: 50876380!
addParent: aPortfolio 
	
	parents addFinancialProduct: aPortfolio.! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'NNH 11/6/2020 14:57:43' prior: 50875264!
test15
	
	| p1 p2 p3 p4 |
	
	p1 := Portfolio new.
	p2 := Portfolio new.
	p3 := Portfolio new.
	p4 := Portfolio new.

	p1 addFinancialProduct: p3.
	p1 addFinancialProduct: p4.
	p2 addFinancialProduct: p3.

	self shouldnt: [p2 addFinancialProduct: p4] raise: Error.
! !
!ReceptiveAccount methodsFor: 'as yet unclassified' stamp: 'NNH 11/6/2020 14:57:43' prior: 50875658 overrides: 50876509!
addAccountsInPortfolioTo: aCollectionOfAccounts
		
	aCollectionOfAccounts addFinancialProduct: self.! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'NNH 11/6/2020 14:57:43' prior: 50872227!
test09APortfolioWithMoreThanOneAccountHasTheTransactionsOfItsAccounts

	| portfolio anAccount anotherAccount aTransaction |

	anAccount := ReceptiveAccount new.
	anotherAccount := ReceptiveAccount new.
	aTransaction := Deposit register: 100 on: anotherAccount.
	
	portfolio := Portfolio new.
	portfolio addFinancialProduct: anAccount.
	portfolio addFinancialProduct: anotherAccount.

	self assert: 1 equals: portfolio transactions size.
	self assert: portfolio transactions includes: aTransaction.
	
	! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'NNH 11/6/2020 14:57:43' prior: 50875850!
test12PortfolioShouldNotAddAccountIfTheyBothBelongToAnotherPortfolio
	
	| p1 p2 p3 |
	
	p1 := Portfolio new.
	p2 := Portfolio new.
	p3 := Portfolio new.

	p1 addFinancialProduct: p2.
	p1 addFinancialProduct: p3.

	self should: [p3 addFinancialProduct: p2]
	raise: Error
	withMessageText: Portfolio canNotBelongToACommonPortfolioErrorDescription.! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'NNH 11/6/2020 14:57:43' prior: 50876795!
addFinancialProduct: anAccountOrPortfolio 
	
	self assertFinancialProductCanBeAdded: anAccountOrPortfolio.
	
	anAccountOrPortfolio addParent: self.	
	accounts addFinancialProduct: anAccountOrPortfolio.! !

!methodRemoval: Portfolio #add: stamp: 'NNH 11/6/2020 14:57:43'!
add: anAccountOrPortfolio 
	
	self assertFinancialProductCanBeAdded: anAccountOrPortfolio.
	
	anAccountOrPortfolio addParent: self.	
	accounts addFinancialProduct: anAccountOrPortfolio.!
!Portfolio methodsFor: 'inserting' stamp: 'NNH 11/6/2020 14:58:09' prior: 50877019!
addFinancialProduct: anAccountOrPortfolio 
	
	self assertFinancialProductCanBeAdded: anAccountOrPortfolio.
	
	anAccountOrPortfolio addParent: self.	
	accounts add: anAccountOrPortfolio.! !

!testRun: #PortfolioTest #test01BalanceOfEmptyPortfolioIsZero stamp: 'NNH 11/6/2020 14:58:18'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithOneAccountIsBalanceOfThatAccount stamp: 'NNH 11/6/2020 14:58:18'!
ERROR!

!testRun: #PortfolioTest #test03BalanceOfPortfolioWithMoreThanOneAccountIsSumOfBalances stamp: 'NNH 11/6/2020 14:58:18'!
ERROR!

!testRun: #PortfolioTest #test04EmptyPortfolioHasRegisteredNoTransactions stamp: 'NNH 11/6/2020 14:58:18'!
ERROR!

!testRun: #PortfolioTest #test05PortfolioWithOneAccountRegistersATransactionOfThatAccount stamp: 'NNH 11/6/2020 14:58:18'!
ERROR!

!testRun: #PortfolioTest #test06APortfolioWithMoreThanOneAccountRegistersATransactionThatIsNotFromTheFirstAccount stamp: 'NNH 11/6/2020 14:58:18'!
ERROR!

!testRun: #PortfolioTest #test07EmptyPortfolioHasNoTransactions stamp: 'NNH 11/6/2020 14:58:18'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioWithOneAccountHasTheTransactionsOfThatAccount stamp: 'NNH 11/6/2020 14:58:18'!
ERROR!

!testRun: #PortfolioTest #test09APortfolioWithMoreThanOneAccountHasTheTransactionsOfItsAccounts stamp: 'NNH 11/6/2020 14:58:18'!
ERROR!

!testRun: #PortfolioTest #test10PortfolioShouldNotAddItself stamp: 'NNH 11/6/2020 14:58:18'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioShouldNotAddParentPortfolio stamp: 'NNH 11/6/2020 14:58:18'!
ERROR!

!testRun: #PortfolioTest #test12PortfolioShouldNotAddAccountIfTheyBothBelongToAnotherPortfolio stamp: 'NNH 11/6/2020 14:58:18'!
ERROR!

!testRun: #PortfolioTest #test13PortfolioShouldNotAddAnotherPortfolioWhenTheyShareAnAccount stamp: 'NNH 11/6/2020 14:58:18'!
ERROR!

!testRun: #PortfolioTest #test14Rombo stamp: 'NNH 11/6/2020 14:58:18'!
ERROR!

!testRun: #PortfolioTest #test15 stamp: 'NNH 11/6/2020 14:58:18'!
ERROR!

!testRun: #PortfolioTest #test01BalanceOfEmptyPortfolioIsZero stamp: 'NNH 11/6/2020 14:58:29'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithOneAccountIsBalanceOfThatAccount stamp: 'NNH 11/6/2020 14:58:29'!
ERROR!

!testRun: #PortfolioTest #test03BalanceOfPortfolioWithMoreThanOneAccountIsSumOfBalances stamp: 'NNH 11/6/2020 14:58:29'!
ERROR!

!testRun: #PortfolioTest #test04EmptyPortfolioHasRegisteredNoTransactions stamp: 'NNH 11/6/2020 14:58:29'!
ERROR!

!testRun: #PortfolioTest #test05PortfolioWithOneAccountRegistersATransactionOfThatAccount stamp: 'NNH 11/6/2020 14:58:29'!
ERROR!

!testRun: #PortfolioTest #test06APortfolioWithMoreThanOneAccountRegistersATransactionThatIsNotFromTheFirstAccount stamp: 'NNH 11/6/2020 14:58:29'!
ERROR!

!testRun: #PortfolioTest #test07EmptyPortfolioHasNoTransactions stamp: 'NNH 11/6/2020 14:58:29'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioWithOneAccountHasTheTransactionsOfThatAccount stamp: 'NNH 11/6/2020 14:58:29'!
ERROR!

!testRun: #PortfolioTest #test09APortfolioWithMoreThanOneAccountHasTheTransactionsOfItsAccounts stamp: 'NNH 11/6/2020 14:58:29'!
ERROR!

!testRun: #PortfolioTest #test10PortfolioShouldNotAddItself stamp: 'NNH 11/6/2020 14:58:29'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioShouldNotAddParentPortfolio stamp: 'NNH 11/6/2020 14:58:29'!
ERROR!

!testRun: #PortfolioTest #test12PortfolioShouldNotAddAccountIfTheyBothBelongToAnotherPortfolio stamp: 'NNH 11/6/2020 14:58:29'!
ERROR!

!testRun: #PortfolioTest #test13PortfolioShouldNotAddAnotherPortfolioWhenTheyShareAnAccount stamp: 'NNH 11/6/2020 14:58:29'!
ERROR!

!testRun: #PortfolioTest #test14Rombo stamp: 'NNH 11/6/2020 14:58:29'!
ERROR!

!testRun: #PortfolioTest #test15 stamp: 'NNH 11/6/2020 14:58:29'!
ERROR!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithOneAccountIsBalanceOfThatAccount stamp: 'NNH 11/6/2020 14:58:35'!
ERROR!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithOneAccountIsBalanceOfThatAccount stamp: 'NNH 11/6/2020 14:58:35'!
ERROR!
!ReceptiveAccount methodsFor: 'transactions' stamp: 'NNH 11/6/2020 14:58:51' prior: 50876954!
register: aTransaction

	transactions add: aTransaction 
! !

!testRun: #PortfolioTest #test01BalanceOfEmptyPortfolioIsZero stamp: 'NNH 11/6/2020 14:58:55'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithOneAccountIsBalanceOfThatAccount stamp: 'NNH 11/6/2020 14:58:55'!
ERROR!

!testRun: #PortfolioTest #test03BalanceOfPortfolioWithMoreThanOneAccountIsSumOfBalances stamp: 'NNH 11/6/2020 14:58:55'!
ERROR!

!testRun: #PortfolioTest #test04EmptyPortfolioHasRegisteredNoTransactions stamp: 'NNH 11/6/2020 14:58:55'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioWithOneAccountRegistersATransactionOfThatAccount stamp: 'NNH 11/6/2020 14:58:55'!
ERROR!

!testRun: #PortfolioTest #test06APortfolioWithMoreThanOneAccountRegistersATransactionThatIsNotFromTheFirstAccount stamp: 'NNH 11/6/2020 14:58:55'!
ERROR!

!testRun: #PortfolioTest #test07EmptyPortfolioHasNoTransactions stamp: 'NNH 11/6/2020 14:58:55'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioWithOneAccountHasTheTransactionsOfThatAccount stamp: 'NNH 11/6/2020 14:58:55'!
ERROR!

!testRun: #PortfolioTest #test09APortfolioWithMoreThanOneAccountHasTheTransactionsOfItsAccounts stamp: 'NNH 11/6/2020 14:58:55'!
ERROR!

!testRun: #PortfolioTest #test10PortfolioShouldNotAddItself stamp: 'NNH 11/6/2020 14:58:55'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioShouldNotAddParentPortfolio stamp: 'NNH 11/6/2020 14:58:55'!
ERROR!

!testRun: #PortfolioTest #test12PortfolioShouldNotAddAccountIfTheyBothBelongToAnotherPortfolio stamp: 'NNH 11/6/2020 14:58:55'!
ERROR!

!testRun: #PortfolioTest #test13PortfolioShouldNotAddAnotherPortfolioWhenTheyShareAnAccount stamp: 'NNH 11/6/2020 14:58:55'!
ERROR!

!testRun: #PortfolioTest #test14Rombo stamp: 'NNH 11/6/2020 14:58:55'!
ERROR!

!testRun: #PortfolioTest #test15 stamp: 'NNH 11/6/2020 14:58:55'!
ERROR!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithOneAccountIsBalanceOfThatAccount stamp: 'NNH 11/6/2020 14:59:00'!
ERROR!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithOneAccountIsBalanceOfThatAccount stamp: 'NNH 11/6/2020 14:59:00'!
ERROR!
!Portfolio methodsFor: 'testing dependencies' stamp: 'NNH 11/6/2020 14:59:19' prior: 50876944 overrides: 50876509!
addAccountsInPortfolioTo: aCollectionOfAccounts
		
	aCollectionOfAccounts addFinancialProduct: self.
	accounts do: [:anAccount | anAccount add: aCollectionOfAccounts].
	
	
	
! !
!ReceptiveAccount methodsFor: 'testing dependencies' stamp: 'NNH 11/6/2020 14:59:49' prior: 50876979 overrides: 50876509!
addAccountsInPortfolioTo: aCollectionOfAccounts
		
	aCollectionOfAccounts add: self.! !
!ReceptiveAccount methodsFor: 'inserting - private' stamp: 'NNH 11/6/2020 14:59:55' prior: 50876839 overrides: 50876960!
addParent: aPortfolio 
	parents add: aPortfolio.! !

!testRun: #PortfolioTest #test01BalanceOfEmptyPortfolioIsZero stamp: 'NNH 11/6/2020 15:00:09'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithOneAccountIsBalanceOfThatAccount stamp: 'NNH 11/6/2020 15:00:09'!
ERROR!

!testRun: #PortfolioTest #test03BalanceOfPortfolioWithMoreThanOneAccountIsSumOfBalances stamp: 'NNH 11/6/2020 15:00:09'!
ERROR!

!testRun: #PortfolioTest #test04EmptyPortfolioHasRegisteredNoTransactions stamp: 'NNH 11/6/2020 15:00:09'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioWithOneAccountRegistersATransactionOfThatAccount stamp: 'NNH 11/6/2020 15:00:09'!
ERROR!

!testRun: #PortfolioTest #test06APortfolioWithMoreThanOneAccountRegistersATransactionThatIsNotFromTheFirstAccount stamp: 'NNH 11/6/2020 15:00:09'!
ERROR!

!testRun: #PortfolioTest #test07EmptyPortfolioHasNoTransactions stamp: 'NNH 11/6/2020 15:00:09'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioWithOneAccountHasTheTransactionsOfThatAccount stamp: 'NNH 11/6/2020 15:00:09'!
ERROR!

!testRun: #PortfolioTest #test09APortfolioWithMoreThanOneAccountHasTheTransactionsOfItsAccounts stamp: 'NNH 11/6/2020 15:00:09'!
ERROR!

!testRun: #PortfolioTest #test10PortfolioShouldNotAddItself stamp: 'NNH 11/6/2020 15:00:09'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioShouldNotAddParentPortfolio stamp: 'NNH 11/6/2020 15:00:09'!
ERROR!

!testRun: #PortfolioTest #test12PortfolioShouldNotAddAccountIfTheyBothBelongToAnotherPortfolio stamp: 'NNH 11/6/2020 15:00:09'!
ERROR!

!testRun: #PortfolioTest #test13PortfolioShouldNotAddAnotherPortfolioWhenTheyShareAnAccount stamp: 'NNH 11/6/2020 15:00:09'!
ERROR!

!testRun: #PortfolioTest #test14Rombo stamp: 'NNH 11/6/2020 15:00:09'!
ERROR!

!testRun: #PortfolioTest #test15 stamp: 'NNH 11/6/2020 15:00:09'!
ERROR!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithOneAccountIsBalanceOfThatAccount stamp: 'NNH 11/6/2020 15:00:16'!
ERROR!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithOneAccountIsBalanceOfThatAccount stamp: 'NNH 11/6/2020 15:00:16'!
ERROR!
!FinancialProduct methodsFor: 'inserting - private' stamp: 'NNH 11/6/2020 15:00:43' prior: 50876960!
addParent: aPortfolio 
	
	parents add: aPortfolio.! !

!testRun: #PortfolioTest #test01BalanceOfEmptyPortfolioIsZero stamp: 'NNH 11/6/2020 15:00:54'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithOneAccountIsBalanceOfThatAccount stamp: 'NNH 11/6/2020 15:00:54'!
ERROR!

!testRun: #PortfolioTest #test03BalanceOfPortfolioWithMoreThanOneAccountIsSumOfBalances stamp: 'NNH 11/6/2020 15:00:54'!
ERROR!

!testRun: #PortfolioTest #test04EmptyPortfolioHasRegisteredNoTransactions stamp: 'NNH 11/6/2020 15:00:54'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioWithOneAccountRegistersATransactionOfThatAccount stamp: 'NNH 11/6/2020 15:00:54'!
ERROR!

!testRun: #PortfolioTest #test06APortfolioWithMoreThanOneAccountRegistersATransactionThatIsNotFromTheFirstAccount stamp: 'NNH 11/6/2020 15:00:54'!
ERROR!

!testRun: #PortfolioTest #test07EmptyPortfolioHasNoTransactions stamp: 'NNH 11/6/2020 15:00:54'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioWithOneAccountHasTheTransactionsOfThatAccount stamp: 'NNH 11/6/2020 15:00:54'!
ERROR!

!testRun: #PortfolioTest #test09APortfolioWithMoreThanOneAccountHasTheTransactionsOfItsAccounts stamp: 'NNH 11/6/2020 15:00:54'!
ERROR!

!testRun: #PortfolioTest #test10PortfolioShouldNotAddItself stamp: 'NNH 11/6/2020 15:00:54'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioShouldNotAddParentPortfolio stamp: 'NNH 11/6/2020 15:00:54'!
ERROR!

!testRun: #PortfolioTest #test12PortfolioShouldNotAddAccountIfTheyBothBelongToAnotherPortfolio stamp: 'NNH 11/6/2020 15:00:54'!
ERROR!

!testRun: #PortfolioTest #test13PortfolioShouldNotAddAnotherPortfolioWhenTheyShareAnAccount stamp: 'NNH 11/6/2020 15:00:54'!
ERROR!

!testRun: #PortfolioTest #test14Rombo stamp: 'NNH 11/6/2020 15:00:54'!
ERROR!

!testRun: #PortfolioTest #test15 stamp: 'NNH 11/6/2020 15:00:54'!
ERROR!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithOneAccountIsBalanceOfThatAccount stamp: 'NNH 11/6/2020 15:01:00'!
ERROR!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithOneAccountIsBalanceOfThatAccount stamp: 'NNH 11/6/2020 15:01:00'!
ERROR!
!Portfolio methodsFor: 'testing dependencies' stamp: 'NNH 11/6/2020 15:01:22' prior: 50877233 overrides: 50876509!
addAccountsInPortfolioTo: aCollectionOfAccounts
		
	aCollectionOfAccounts add: self.
	accounts do: [:anAccount | anAccount add: aCollectionOfAccounts].
	
	
	
! !

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithOneAccountIsBalanceOfThatAccount stamp: 'NNH 11/6/2020 15:01:26'!
ERROR!

!testRun: #PortfolioTest #test01BalanceOfEmptyPortfolioIsZero stamp: 'NNH 11/6/2020 15:01:34'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithOneAccountIsBalanceOfThatAccount stamp: 'NNH 11/6/2020 15:01:34'!
ERROR!

!testRun: #PortfolioTest #test03BalanceOfPortfolioWithMoreThanOneAccountIsSumOfBalances stamp: 'NNH 11/6/2020 15:01:34'!
ERROR!

!testRun: #PortfolioTest #test04EmptyPortfolioHasRegisteredNoTransactions stamp: 'NNH 11/6/2020 15:01:34'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioWithOneAccountRegistersATransactionOfThatAccount stamp: 'NNH 11/6/2020 15:01:34'!
FAILURE!

!testRun: #PortfolioTest #test06APortfolioWithMoreThanOneAccountRegistersATransactionThatIsNotFromTheFirstAccount stamp: 'NNH 11/6/2020 15:01:34'!
ERROR!

!testRun: #PortfolioTest #test07EmptyPortfolioHasNoTransactions stamp: 'NNH 11/6/2020 15:01:34'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioWithOneAccountHasTheTransactionsOfThatAccount stamp: 'NNH 11/6/2020 15:01:34'!
FAILURE!

!testRun: #PortfolioTest #test09APortfolioWithMoreThanOneAccountHasTheTransactionsOfItsAccounts stamp: 'NNH 11/6/2020 15:01:34'!
ERROR!

!testRun: #PortfolioTest #test10PortfolioShouldNotAddItself stamp: 'NNH 11/6/2020 15:01:34'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioShouldNotAddParentPortfolio stamp: 'NNH 11/6/2020 15:01:34'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioShouldNotAddAccountIfTheyBothBelongToAnotherPortfolio stamp: 'NNH 11/6/2020 15:01:34'!
ERROR!

!testRun: #PortfolioTest #test13PortfolioShouldNotAddAnotherPortfolioWhenTheyShareAnAccount stamp: 'NNH 11/6/2020 15:01:34'!
FAILURE!

!testRun: #PortfolioTest #test14Rombo stamp: 'NNH 11/6/2020 15:01:34'!
ERROR!

!testRun: #PortfolioTest #test15 stamp: 'NNH 11/6/2020 15:01:34'!
ERROR!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithOneAccountIsBalanceOfThatAccount stamp: 'NNH 11/6/2020 15:02:08'!
ERROR!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithOneAccountIsBalanceOfThatAccount stamp: 'NNH 11/6/2020 15:02:08'!
ERROR!

!methodRemoval: ReceptiveAccount #addParent: stamp: 'NNH 11/6/2020 15:03:49'!
addParent: aPortfolio 
	parents add: aPortfolio.!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithOneAccountIsBalanceOfThatAccount stamp: 'NNH 11/6/2020 15:06:07'!
ERROR!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithOneAccountIsBalanceOfThatAccount stamp: 'NNH 11/6/2020 15:06:07'!
ERROR!

----STARTUP---- (6 November 2020 15:07:44) as /home/nahuel/Documents/cuisuniversity/CuisUniversity-4384.image!


!testRun: #PortfolioTest #test01BalanceOfEmptyPortfolioIsZero stamp: 'NNH 11/6/2020 15:08:00'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithOneAccountIsBalanceOfThatAccount stamp: 'NNH 11/6/2020 15:08:00'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioWithMoreThanOneAccountIsSumOfBalances stamp: 'NNH 11/6/2020 15:08:00'!
PASSED!

!testRun: #PortfolioTest #test04EmptyPortfolioHasRegisteredNoTransactions stamp: 'NNH 11/6/2020 15:08:00'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioWithOneAccountRegistersATransactionOfThatAccount stamp: 'NNH 11/6/2020 15:08:00'!
PASSED!

!testRun: #PortfolioTest #test06APortfolioWithMoreThanOneAccountRegistersATransactionThatIsNotFromTheFirstAccount stamp: 'NNH 11/6/2020 15:08:00'!
PASSED!

!testRun: #PortfolioTest #test07EmptyPortfolioHasNoTransactions stamp: 'NNH 11/6/2020 15:08:00'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioWithOneAccountHasTheTransactionsOfThatAccount stamp: 'NNH 11/6/2020 15:08:00'!
PASSED!

!testRun: #PortfolioTest #test09APortfolioWithMoreThanOneAccountHasTheTransactionsOfItsAccounts stamp: 'NNH 11/6/2020 15:08:00'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioShouldNotAddItself stamp: 'NNH 11/6/2020 15:08:00'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioShouldNotAddParentPortfolio stamp: 'NNH 11/6/2020 15:08:00'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioShouldNotAddAccountIfTheyBothBelongToAnotherPortfolio stamp: 'NNH 11/6/2020 15:08:00'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioShouldNotAddAnotherPortfolioWhenTheyShareAnAccount stamp: 'NNH 11/6/2020 15:08:00'!
PASSED!

!testRun: #PortfolioTest #test14Rombo stamp: 'NNH 11/6/2020 15:08:00'!
PASSED!

!testRun: #PortfolioTest #test15 stamp: 'NNH 11/6/2020 15:08:00'!
PASSED!

!classRemoval: #PortfolioHoja stamp: 'NNH 11/6/2020 15:08:10'!
PortfolioTipoDeNodo subclass: #PortfolioHoja
	instanceVariableNames: 'receptiveAccount'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classRemoval: #PortfolioNodo stamp: 'NNH 11/6/2020 15:08:10'!
PortfolioTipoDeNodo subclass: #PortfolioNodo
	instanceVariableNames: 'financialProducts'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classRemoval: #PortfolioTipoDeNodo stamp: 'NNH 11/6/2020 15:08:10'!
Object subclass: #PortfolioTipoDeNodo
	instanceVariableNames: 'parents'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!testRun: #PortfolioTest #test01BalanceOfEmptyPortfolioIsZero stamp: 'NNH 11/6/2020 15:08:13'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithOneAccountIsBalanceOfThatAccount stamp: 'NNH 11/6/2020 15:08:13'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioWithMoreThanOneAccountIsSumOfBalances stamp: 'NNH 11/6/2020 15:08:13'!
PASSED!

!testRun: #PortfolioTest #test04EmptyPortfolioHasRegisteredNoTransactions stamp: 'NNH 11/6/2020 15:08:13'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioWithOneAccountRegistersATransactionOfThatAccount stamp: 'NNH 11/6/2020 15:08:13'!
PASSED!

!testRun: #PortfolioTest #test06APortfolioWithMoreThanOneAccountRegistersATransactionThatIsNotFromTheFirstAccount stamp: 'NNH 11/6/2020 15:08:13'!
PASSED!

!testRun: #PortfolioTest #test07EmptyPortfolioHasNoTransactions stamp: 'NNH 11/6/2020 15:08:13'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioWithOneAccountHasTheTransactionsOfThatAccount stamp: 'NNH 11/6/2020 15:08:13'!
PASSED!

!testRun: #PortfolioTest #test09APortfolioWithMoreThanOneAccountHasTheTransactionsOfItsAccounts stamp: 'NNH 11/6/2020 15:08:13'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioShouldNotAddItself stamp: 'NNH 11/6/2020 15:08:13'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioShouldNotAddParentPortfolio stamp: 'NNH 11/6/2020 15:08:13'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioShouldNotAddAccountIfTheyBothBelongToAnotherPortfolio stamp: 'NNH 11/6/2020 15:08:13'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioShouldNotAddAnotherPortfolioWhenTheyShareAnAccount stamp: 'NNH 11/6/2020 15:08:13'!
PASSED!

!testRun: #PortfolioTest #test14Rombo stamp: 'NNH 11/6/2020 15:08:13'!
PASSED!

!testRun: #PortfolioTest #test15 stamp: 'NNH 11/6/2020 15:08:13'!
PASSED!
!Portfolio methodsFor: 'inserting' stamp: 'NNH 11/6/2020 15:08:43'!
addFinancialProduct: anAccountOrPortfolio 
	
	self assertFinancialProductCanBeAdded: anAccountOrPortfolio.
	
	anAccountOrPortfolio addParent: self.	
	accounts add: anAccountOrPortfolio.! !

!methodRemoval: Portfolio #add: stamp: 'NNH 11/6/2020 15:09:09'!
add: anAccountOrPortfolio 
	
	self assertFinancialProductCanBeAdded: anAccountOrPortfolio.
	
	anAccountOrPortfolio addParent: self.	
	accounts add: anAccountOrPortfolio.!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'NNH 11/6/2020 15:09:31' prior: 50872040!
test02BalanceOfPortfolioWithOneAccountIsBalanceOfThatAccount

	| portfolio account |

	account := ReceptiveAccount new.
	Deposit register: 100 on: account.
	
	portfolio := Portfolio new.
	portfolio addFinancialProduct: account.
	
	self assert: 100 equals: portfolio balance.
	
	! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'NNH 11/6/2020 15:09:37' prior: 50872064!
test03BalanceOfPortfolioWithMoreThanOneAccountIsSumOfBalances

	| portfolio anAccount anotherAccount |

	anAccount := ReceptiveAccount new.
	Deposit register: 100 on: anAccount.
	anotherAccount := ReceptiveAccount new.
	
	portfolio := Portfolio new.
	portfolio addFinancialProduct: anAccount.
	portfolio addFinancialProduct: anotherAccount.

	self assert: 100 equals: portfolio balance.
	
	! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'NNH 11/6/2020 15:09:40' prior: 50872110!
test05PortfolioWithOneAccountRegistersATransactionOfThatAccount

	| portfolio account aTransaction |

	account := ReceptiveAccount new.
	aTransaction := Deposit register: 100 on: account.
	
	portfolio := Portfolio new.
	portfolio addFinancialProduct: account.

	self assert: (portfolio hasRegistered: aTransaction).
	
	! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'NNH 11/6/2020 15:09:45' prior: 50872133!
test06APortfolioWithMoreThanOneAccountRegistersATransactionThatIsNotFromTheFirstAccount

	| portfolio anAccount anotherAccount aTransaction |

	anAccount := ReceptiveAccount new.
	anotherAccount := ReceptiveAccount new.
	aTransaction := Deposit register: 100 on: anotherAccount.
	
	portfolio := Portfolio new.
	portfolio addFinancialProduct: anAccount.
	portfolio addFinancialProduct: anotherAccount.

	self assert: (portfolio hasRegistered: aTransaction).
	
	! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'NNH 11/6/2020 15:09:48' prior: 50872201!
test08PortfolioWithOneAccountHasTheTransactionsOfThatAccount

	| portfolio account aTransaction |

	account := ReceptiveAccount new.
	aTransaction := Deposit register: 100 on: account.
	
	portfolio := Portfolio new.
	portfolio addFinancialProduct: account.

	self assert: 1 equals: portfolio transactions size.
	self assert: portfolio transactions includes: aTransaction.
	
	! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'NNH 11/6/2020 15:09:53' prior: 50872227!
test09APortfolioWithMoreThanOneAccountHasTheTransactionsOfItsAccounts

	| portfolio anAccount anotherAccount aTransaction |

	anAccount := ReceptiveAccount new.
	anotherAccount := ReceptiveAccount new.
	aTransaction := Deposit register: 100 on: anotherAccount.
	
	portfolio := Portfolio new.
	portfolio addFinancialProduct: anAccount.
	portfolio addFinancialProduct: anotherAccount.

	self assert: 1 equals: portfolio transactions size.
	self assert: portfolio transactions includes: aTransaction.
	
	! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'NNH 11/6/2020 15:09:56' prior: 50875831!
test10PortfolioShouldNotAddItself
	
	| portfolio |
	
	portfolio := Portfolio new.

	self should: [portfolio addFinancialProduct: portfolio] raise: Error.! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'NNH 11/6/2020 15:10:00' prior: 50875839!
test11PortfolioShouldNotAddParentPortfolio
	
	| aPortfolio anotherPortfolio |
	
	aPortfolio := Portfolio new.
	anotherPortfolio := Portfolio new.
	anotherPortfolio addFinancialProduct: aPortfolio.

	self should: [aPortfolio addFinancialProduct: anotherPortfolio] raise: Error.! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'NNH 11/6/2020 15:10:07' prior: 50875850!
test12PortfolioShouldNotAddAccountIfTheyBothBelongToAnotherPortfolio
	
	| p1 p2 p3 |
	
	p1 := Portfolio new.
	p2 := Portfolio new.
	p3 := Portfolio new.

	p1 addFinancialProduct: p2.
	p1 addFinancialProduct: p3.

	self should: [p3 addFinancialProduct: p2]
	raise: Error
	withMessageText: Portfolio canNotBelongToACommonPortfolioErrorDescription.! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'NNH 11/6/2020 15:10:12' prior: 50875981!
test13PortfolioShouldNotAddAnotherPortfolioWhenTheyShareAnAccount
	
	| p1 p2 p3 |
	
	p1 := Portfolio new.
	p2 := Portfolio new.
	p3 := Portfolio new.

	p1 addFinancialProduct: p3.
	p2 addFinancialProduct: p3.

	self should: [p1 addFinancialProduct: p2]
	raise: Error
	withMessageText: Portfolio canNotHaveAnAccountInCommonErrorDescription.! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'NNH 11/6/2020 15:10:19' prior: 50876177!
test14Rombo
	
	| p1 p2 p3 p4 |
	
	p1 := Portfolio new.
	p2 := Portfolio new.
	p3 := Portfolio new.
	p4 := Portfolio new.

	p1 addFinancialProduct: p2.
	p1 addFinancialProduct: p3.
	p3 addFinancialProduct: p4.

	self should: [p2 addFinancialProduct: p4]
	raise: Error
	withMessageText: Portfolio canNotBelongToACommonPortfolioErrorDescription.! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'NNH 11/6/2020 15:10:25' prior: 50875264!
test15
	
	| p1 p2 p3 p4 |
	
	p1 := Portfolio new.
	p2 := Portfolio new.
	p3 := Portfolio new.
	p4 := Portfolio new.

	p1 addFinancialProduct: p3.
	p1 addFinancialProduct: p4.
	p2 addFinancialProduct: p3.

	self shouldnt: [p2 addFinancialProduct: p4] raise: Error.
! !

!testRun: #PortfolioTest #test01BalanceOfEmptyPortfolioIsZero stamp: 'NNH 11/6/2020 15:10:53'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithOneAccountIsBalanceOfThatAccount stamp: 'NNH 11/6/2020 15:10:53'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioWithMoreThanOneAccountIsSumOfBalances stamp: 'NNH 11/6/2020 15:10:53'!
PASSED!

!testRun: #PortfolioTest #test04EmptyPortfolioHasRegisteredNoTransactions stamp: 'NNH 11/6/2020 15:10:53'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioWithOneAccountRegistersATransactionOfThatAccount stamp: 'NNH 11/6/2020 15:10:53'!
PASSED!

!testRun: #PortfolioTest #test06APortfolioWithMoreThanOneAccountRegistersATransactionThatIsNotFromTheFirstAccount stamp: 'NNH 11/6/2020 15:10:53'!
PASSED!

!testRun: #PortfolioTest #test07EmptyPortfolioHasNoTransactions stamp: 'NNH 11/6/2020 15:10:53'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioWithOneAccountHasTheTransactionsOfThatAccount stamp: 'NNH 11/6/2020 15:10:53'!
PASSED!

!testRun: #PortfolioTest #test09APortfolioWithMoreThanOneAccountHasTheTransactionsOfItsAccounts stamp: 'NNH 11/6/2020 15:10:53'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioShouldNotAddItself stamp: 'NNH 11/6/2020 15:10:53'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioShouldNotAddParentPortfolio stamp: 'NNH 11/6/2020 15:10:53'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioShouldNotAddAccountIfTheyBothBelongToAnotherPortfolio stamp: 'NNH 11/6/2020 15:10:53'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioShouldNotAddAnotherPortfolioWhenTheyShareAnAccount stamp: 'NNH 11/6/2020 15:10:53'!
PASSED!

!testRun: #PortfolioTest #test14Rombo stamp: 'NNH 11/6/2020 15:10:53'!
PASSED!

!testRun: #PortfolioTest #test15 stamp: 'NNH 11/6/2020 15:10:53'!
PASSED!

!methodRemoval: Portfolio #accountsInPortfolio stamp: 'NNH 11/6/2020 15:11:10'!
accountsInPortfolio
	
	| accountsInPortfolio |
	accountsInPortfolio := OrderedCollection new.
	self addAccountsInPortfolioTo: accountsInPortfolio.
	^ accountsInPortfolio.
	
	
	
!

!methodRemoval: ReceptiveAccount #addParent: stamp: 'NNH 11/6/2020 15:12:10'!
addParent: aPortfolio 
	parents add: aPortfolio.!

!testRun: #PortfolioTest #test01BalanceOfEmptyPortfolioIsZero stamp: 'NNH 11/6/2020 15:12:27'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithOneAccountIsBalanceOfThatAccount stamp: 'NNH 11/6/2020 15:12:27'!
ERROR!

!testRun: #PortfolioTest #test03BalanceOfPortfolioWithMoreThanOneAccountIsSumOfBalances stamp: 'NNH 11/6/2020 15:12:27'!
ERROR!

!testRun: #PortfolioTest #test04EmptyPortfolioHasRegisteredNoTransactions stamp: 'NNH 11/6/2020 15:12:27'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioWithOneAccountRegistersATransactionOfThatAccount stamp: 'NNH 11/6/2020 15:12:27'!
PASSED!

!testRun: #PortfolioTest #test06APortfolioWithMoreThanOneAccountRegistersATransactionThatIsNotFromTheFirstAccount stamp: 'NNH 11/6/2020 15:12:27'!
PASSED!

!testRun: #PortfolioTest #test07EmptyPortfolioHasNoTransactions stamp: 'NNH 11/6/2020 15:12:27'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioWithOneAccountHasTheTransactionsOfThatAccount stamp: 'NNH 11/6/2020 15:12:27'!
FAILURE!

!testRun: #PortfolioTest #test09APortfolioWithMoreThanOneAccountHasTheTransactionsOfItsAccounts stamp: 'NNH 11/6/2020 15:12:27'!
FAILURE!

!testRun: #PortfolioTest #test10PortfolioShouldNotAddItself stamp: 'NNH 11/6/2020 15:12:27'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioShouldNotAddParentPortfolio stamp: 'NNH 11/6/2020 15:12:27'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioShouldNotAddAccountIfTheyBothBelongToAnotherPortfolio stamp: 'NNH 11/6/2020 15:12:27'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioShouldNotAddAnotherPortfolioWhenTheyShareAnAccount stamp: 'NNH 11/6/2020 15:12:27'!
PASSED!

!testRun: #PortfolioTest #test14Rombo stamp: 'NNH 11/6/2020 15:12:27'!
PASSED!

!testRun: #PortfolioTest #test15 stamp: 'NNH 11/6/2020 15:12:27'!
PASSED!

!testRun: #PortfolioTest #test01BalanceOfEmptyPortfolioIsZero stamp: 'NNH 11/6/2020 15:12:38'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithOneAccountIsBalanceOfThatAccount stamp: 'NNH 11/6/2020 15:12:38'!
ERROR!

!testRun: #PortfolioTest #test03BalanceOfPortfolioWithMoreThanOneAccountIsSumOfBalances stamp: 'NNH 11/6/2020 15:12:38'!
ERROR!

!testRun: #PortfolioTest #test04EmptyPortfolioHasRegisteredNoTransactions stamp: 'NNH 11/6/2020 15:12:38'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioWithOneAccountRegistersATransactionOfThatAccount stamp: 'NNH 11/6/2020 15:12:38'!
PASSED!

!testRun: #PortfolioTest #test06APortfolioWithMoreThanOneAccountRegistersATransactionThatIsNotFromTheFirstAccount stamp: 'NNH 11/6/2020 15:12:38'!
PASSED!

!testRun: #PortfolioTest #test07EmptyPortfolioHasNoTransactions stamp: 'NNH 11/6/2020 15:12:38'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioWithOneAccountHasTheTransactionsOfThatAccount stamp: 'NNH 11/6/2020 15:12:38'!
FAILURE!

!testRun: #PortfolioTest #test09APortfolioWithMoreThanOneAccountHasTheTransactionsOfItsAccounts stamp: 'NNH 11/6/2020 15:12:38'!
FAILURE!

!testRun: #PortfolioTest #test10PortfolioShouldNotAddItself stamp: 'NNH 11/6/2020 15:12:38'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioShouldNotAddParentPortfolio stamp: 'NNH 11/6/2020 15:12:38'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioShouldNotAddAccountIfTheyBothBelongToAnotherPortfolio stamp: 'NNH 11/6/2020 15:12:38'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioShouldNotAddAnotherPortfolioWhenTheyShareAnAccount stamp: 'NNH 11/6/2020 15:12:38'!
PASSED!

!testRun: #PortfolioTest #test14Rombo stamp: 'NNH 11/6/2020 15:12:38'!
PASSED!

!testRun: #PortfolioTest #test15 stamp: 'NNH 11/6/2020 15:12:38'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithOneAccountIsBalanceOfThatAccount stamp: 'NNH 11/6/2020 15:12:43'!
ERROR!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithOneAccountIsBalanceOfThatAccount stamp: 'NNH 11/6/2020 15:12:43'!
ERROR!

!testRun: #PortfolioTest #test03BalanceOfPortfolioWithMoreThanOneAccountIsSumOfBalances stamp: 'NNH 11/6/2020 15:13:11'!
ERROR!

!testRun: #PortfolioTest #test03BalanceOfPortfolioWithMoreThanOneAccountIsSumOfBalances stamp: 'NNH 11/6/2020 15:13:11'!
ERROR!

FinancialProduct subclass: #ReceptiveAccount
	instanceVariableNames: 'transactions'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classDefinition: #ReceptiveAccount category: 'Portfolio-Ejercicio' stamp: 'NNH 11/6/2020 15:14:16'!
FinancialProduct subclass: #ReceptiveAccount
	instanceVariableNames: 'transactions'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!testRun: #PortfolioTest #test01BalanceOfEmptyPortfolioIsZero stamp: 'NNH 11/6/2020 15:14:19'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithOneAccountIsBalanceOfThatAccount stamp: 'NNH 11/6/2020 15:14:19'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioWithMoreThanOneAccountIsSumOfBalances stamp: 'NNH 11/6/2020 15:14:19'!
PASSED!

!testRun: #PortfolioTest #test04EmptyPortfolioHasRegisteredNoTransactions stamp: 'NNH 11/6/2020 15:14:19'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioWithOneAccountRegistersATransactionOfThatAccount stamp: 'NNH 11/6/2020 15:14:19'!
PASSED!

!testRun: #PortfolioTest #test06APortfolioWithMoreThanOneAccountRegistersATransactionThatIsNotFromTheFirstAccount stamp: 'NNH 11/6/2020 15:14:19'!
PASSED!

!testRun: #PortfolioTest #test07EmptyPortfolioHasNoTransactions stamp: 'NNH 11/6/2020 15:14:19'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioWithOneAccountHasTheTransactionsOfThatAccount stamp: 'NNH 11/6/2020 15:14:19'!
PASSED!

!testRun: #PortfolioTest #test09APortfolioWithMoreThanOneAccountHasTheTransactionsOfItsAccounts stamp: 'NNH 11/6/2020 15:14:19'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioShouldNotAddItself stamp: 'NNH 11/6/2020 15:14:19'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioShouldNotAddParentPortfolio stamp: 'NNH 11/6/2020 15:14:19'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioShouldNotAddAccountIfTheyBothBelongToAnotherPortfolio stamp: 'NNH 11/6/2020 15:14:19'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioShouldNotAddAnotherPortfolioWhenTheyShareAnAccount stamp: 'NNH 11/6/2020 15:14:19'!
PASSED!

!testRun: #PortfolioTest #test14Rombo stamp: 'NNH 11/6/2020 15:14:19'!
PASSED!

!testRun: #PortfolioTest #test15 stamp: 'NNH 11/6/2020 15:14:19'!
PASSED!

!classDefinition: #Portfolio category: 'Portfolio-Ejercicio' stamp: 'NNH 11/6/2020 15:14:38'!
FinancialProduct subclass: #Portfolio
	instanceVariableNames: 'financialProducts'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'NNH 11/6/2020 15:14:38' prior: 50873387!
addTransactionsTo: aCollectionOfTransactions
	
	financialProducts do: [ :anAccount | anAccount addTransactionsTo: aCollectionOfTransactions ].! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'NNH 11/6/2020 15:14:38' prior: 50871829 overrides: 50876397!
hasRegistered: aTransaction
	^ financialProducts anySatisfy: [:anAccount | anAccount hasRegistered: aTransaction].! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'NNH 11/6/2020 15:14:38' prior: 50875649 overrides: 50876509!
addAccountsInPortfolioTo: aCollectionOfAccounts
		
	aCollectionOfAccounts add: self.
	financialProducts do: [:anAccount | anAccount addAccountsInPortfolioTo: aCollectionOfAccounts].
	
	
	
! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'NNH 11/6/2020 15:14:38' prior: 50876898!
addFinancialProduct: anAccountOrPortfolio 
	
	self assertFinancialProductCanBeAdded: anAccountOrPortfolio.
	
	anAccountOrPortfolio addParent: self.	
	financialProducts add: anAccountOrPortfolio.! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'NNH 11/6/2020 15:14:38' prior: 50875386 overrides: 50876515!
includes: anAccountToSearch
	
	
	^ (anAccountToSearch == self) or: [
		financialProducts anySatisfy: [:anAccount | anAccount includes: anAccountToSearch]
		].
	
	
! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'NNH 11/6/2020 15:14:38' prior: 50873705 overrides: 16896425!
initialize
	
	financialProducts := OrderedCollection new.
	parents := OrderedCollection new.! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'NNH 11/6/2020 15:14:38' prior: 50871550 overrides: 50876388!
balance
	^ financialProducts sum: [:anAccount | anAccount balance] ifEmpty: [0].! !

!testRun: #PortfolioTest #test01BalanceOfEmptyPortfolioIsZero stamp: 'NNH 11/6/2020 15:14:44'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithOneAccountIsBalanceOfThatAccount stamp: 'NNH 11/6/2020 15:14:44'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioWithMoreThanOneAccountIsSumOfBalances stamp: 'NNH 11/6/2020 15:14:44'!
PASSED!

!testRun: #PortfolioTest #test04EmptyPortfolioHasRegisteredNoTransactions stamp: 'NNH 11/6/2020 15:14:44'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioWithOneAccountRegistersATransactionOfThatAccount stamp: 'NNH 11/6/2020 15:14:44'!
PASSED!

!testRun: #PortfolioTest #test06APortfolioWithMoreThanOneAccountRegistersATransactionThatIsNotFromTheFirstAccount stamp: 'NNH 11/6/2020 15:14:44'!
PASSED!

!testRun: #PortfolioTest #test07EmptyPortfolioHasNoTransactions stamp: 'NNH 11/6/2020 15:14:44'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioWithOneAccountHasTheTransactionsOfThatAccount stamp: 'NNH 11/6/2020 15:14:44'!
PASSED!

!testRun: #PortfolioTest #test09APortfolioWithMoreThanOneAccountHasTheTransactionsOfItsAccounts stamp: 'NNH 11/6/2020 15:14:44'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioShouldNotAddItself stamp: 'NNH 11/6/2020 15:14:44'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioShouldNotAddParentPortfolio stamp: 'NNH 11/6/2020 15:14:44'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioShouldNotAddAccountIfTheyBothBelongToAnotherPortfolio stamp: 'NNH 11/6/2020 15:14:44'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioShouldNotAddAnotherPortfolioWhenTheyShareAnAccount stamp: 'NNH 11/6/2020 15:14:44'!
PASSED!

!testRun: #PortfolioTest #test14Rombo stamp: 'NNH 11/6/2020 15:14:44'!
PASSED!

!testRun: #PortfolioTest #test15 stamp: 'NNH 11/6/2020 15:14:44'!
PASSED!
!FinancialProduct methodsFor: 'testing dependencies' stamp: 'NNH 11/6/2020 15:18:10'!
includesFinancialProduct: anAccountToSearch
	
	self subclassResponsibility.! !

!methodRemoval: FinancialProduct #includes: stamp: 'NNH 11/6/2020 15:18:24'!
includes: anAccountToSearch
	
	self subclassResponsibility.!
!Portfolio methodsFor: 'testing dependencies' stamp: 'NNH 11/6/2020 15:18:59' overrides: 50877468!
includesFinancialProduct: anAccountToSearch
	
	
	^ (anAccountToSearch == self) or: [
		financialProducts anySatisfy: [:anAccount | anAccount includes: anAccountToSearch]
		].
	
	
! !

!methodRemoval: Portfolio #includes: stamp: 'NNH 11/6/2020 15:19:03'!
includes: anAccountToSearch
	
	
	^ (anAccountToSearch == self) or: [
		financialProducts anySatisfy: [:anAccount | anAccount includes: anAccountToSearch]
		].
	
	
!
!ReceptiveAccount methodsFor: 'testing dependencies' stamp: 'NNH 11/6/2020 15:19:13' overrides: 50877468!
includesFinancialProduct: anAccountToSearch
	
	^ anAccountToSearch == self.! !

!methodRemoval: ReceptiveAccount #includes: stamp: 'NNH 11/6/2020 15:19:19'!
includes: anAccountToSearch
	
	^ anAccountToSearch == self.!

!testRun: #PortfolioTest #test01BalanceOfEmptyPortfolioIsZero stamp: 'NNH 11/6/2020 15:19:23'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithOneAccountIsBalanceOfThatAccount stamp: 'NNH 11/6/2020 15:19:23'!
ERROR!

!testRun: #PortfolioTest #test03BalanceOfPortfolioWithMoreThanOneAccountIsSumOfBalances stamp: 'NNH 11/6/2020 15:19:23'!
ERROR!

!testRun: #PortfolioTest #test04EmptyPortfolioHasRegisteredNoTransactions stamp: 'NNH 11/6/2020 15:19:23'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioWithOneAccountRegistersATransactionOfThatAccount stamp: 'NNH 11/6/2020 15:19:23'!
ERROR!

!testRun: #PortfolioTest #test06APortfolioWithMoreThanOneAccountRegistersATransactionThatIsNotFromTheFirstAccount stamp: 'NNH 11/6/2020 15:19:23'!
ERROR!

!testRun: #PortfolioTest #test07EmptyPortfolioHasNoTransactions stamp: 'NNH 11/6/2020 15:19:23'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioWithOneAccountHasTheTransactionsOfThatAccount stamp: 'NNH 11/6/2020 15:19:23'!
ERROR!

!testRun: #PortfolioTest #test09APortfolioWithMoreThanOneAccountHasTheTransactionsOfItsAccounts stamp: 'NNH 11/6/2020 15:19:23'!
ERROR!

!testRun: #PortfolioTest #test10PortfolioShouldNotAddItself stamp: 'NNH 11/6/2020 15:19:23'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioShouldNotAddParentPortfolio stamp: 'NNH 11/6/2020 15:19:23'!
ERROR!

!testRun: #PortfolioTest #test12PortfolioShouldNotAddAccountIfTheyBothBelongToAnotherPortfolio stamp: 'NNH 11/6/2020 15:19:23'!
ERROR!

!testRun: #PortfolioTest #test13PortfolioShouldNotAddAnotherPortfolioWhenTheyShareAnAccount stamp: 'NNH 11/6/2020 15:19:23'!
ERROR!

!testRun: #PortfolioTest #test14Rombo stamp: 'NNH 11/6/2020 15:19:23'!
ERROR!

!testRun: #PortfolioTest #test15 stamp: 'NNH 11/6/2020 15:19:23'!
ERROR!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithOneAccountIsBalanceOfThatAccount stamp: 'NNH 11/6/2020 15:19:28'!
ERROR!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithOneAccountIsBalanceOfThatAccount stamp: 'NNH 11/6/2020 15:19:28'!
ERROR!
!Portfolio methodsFor: 'testing dependencies' stamp: 'NNH 11/6/2020 15:19:41' prior: 50875371!
isInAPortfolioWith: anAccount
	
	^ (parents anySatisfy: [:aParent | aParent isInAPortfolioWith: anAccount ]) or: [
		self includesFinancialProduct: anAccount
		].
	
	
! !

!testRun: #PortfolioTest #test01BalanceOfEmptyPortfolioIsZero stamp: 'NNH 11/6/2020 15:19:46'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithOneAccountIsBalanceOfThatAccount stamp: 'NNH 11/6/2020 15:19:46'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioWithMoreThanOneAccountIsSumOfBalances stamp: 'NNH 11/6/2020 15:19:46'!
ERROR!

!testRun: #PortfolioTest #test04EmptyPortfolioHasRegisteredNoTransactions stamp: 'NNH 11/6/2020 15:19:46'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioWithOneAccountRegistersATransactionOfThatAccount stamp: 'NNH 11/6/2020 15:19:46'!
PASSED!

!testRun: #PortfolioTest #test06APortfolioWithMoreThanOneAccountRegistersATransactionThatIsNotFromTheFirstAccount stamp: 'NNH 11/6/2020 15:19:46'!
ERROR!

!testRun: #PortfolioTest #test07EmptyPortfolioHasNoTransactions stamp: 'NNH 11/6/2020 15:19:46'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioWithOneAccountHasTheTransactionsOfThatAccount stamp: 'NNH 11/6/2020 15:19:46'!
PASSED!

!testRun: #PortfolioTest #test09APortfolioWithMoreThanOneAccountHasTheTransactionsOfItsAccounts stamp: 'NNH 11/6/2020 15:19:46'!
ERROR!

!testRun: #PortfolioTest #test10PortfolioShouldNotAddItself stamp: 'NNH 11/6/2020 15:19:46'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioShouldNotAddParentPortfolio stamp: 'NNH 11/6/2020 15:19:46'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioShouldNotAddAccountIfTheyBothBelongToAnotherPortfolio stamp: 'NNH 11/6/2020 15:19:46'!
ERROR!

!testRun: #PortfolioTest #test13PortfolioShouldNotAddAnotherPortfolioWhenTheyShareAnAccount stamp: 'NNH 11/6/2020 15:19:46'!
FAILURE!

!testRun: #PortfolioTest #test14Rombo stamp: 'NNH 11/6/2020 15:19:46'!
ERROR!

!testRun: #PortfolioTest #test15 stamp: 'NNH 11/6/2020 15:19:46'!
ERROR!

!testRun: #PortfolioTest #test03BalanceOfPortfolioWithMoreThanOneAccountIsSumOfBalances stamp: 'NNH 11/6/2020 15:19:51'!
ERROR!

!testRun: #PortfolioTest #test03BalanceOfPortfolioWithMoreThanOneAccountIsSumOfBalances stamp: 'NNH 11/6/2020 15:19:51'!
ERROR!
!Portfolio methodsFor: 'testing dependencies' stamp: 'NNH 11/6/2020 15:20:18' prior: 50877478 overrides: 50877468!
includesFinancialProduct: anAccountToSearch
	
	
	^ (anAccountToSearch == self) or: [
		financialProducts anySatisfy: [:anAccount | anAccount includesFinancialProduct: anAccountToSearch]
		].
	
	
! !

!testRun: #PortfolioTest #test01BalanceOfEmptyPortfolioIsZero stamp: 'NNH 11/6/2020 15:20:26'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithOneAccountIsBalanceOfThatAccount stamp: 'NNH 11/6/2020 15:20:26'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioWithMoreThanOneAccountIsSumOfBalances stamp: 'NNH 11/6/2020 15:20:26'!
PASSED!

!testRun: #PortfolioTest #test04EmptyPortfolioHasRegisteredNoTransactions stamp: 'NNH 11/6/2020 15:20:26'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioWithOneAccountRegistersATransactionOfThatAccount stamp: 'NNH 11/6/2020 15:20:26'!
PASSED!

!testRun: #PortfolioTest #test06APortfolioWithMoreThanOneAccountRegistersATransactionThatIsNotFromTheFirstAccount stamp: 'NNH 11/6/2020 15:20:26'!
PASSED!

!testRun: #PortfolioTest #test07EmptyPortfolioHasNoTransactions stamp: 'NNH 11/6/2020 15:20:26'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioWithOneAccountHasTheTransactionsOfThatAccount stamp: 'NNH 11/6/2020 15:20:26'!
PASSED!

!testRun: #PortfolioTest #test09APortfolioWithMoreThanOneAccountHasTheTransactionsOfItsAccounts stamp: 'NNH 11/6/2020 15:20:26'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioShouldNotAddItself stamp: 'NNH 11/6/2020 15:20:26'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioShouldNotAddParentPortfolio stamp: 'NNH 11/6/2020 15:20:26'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioShouldNotAddAccountIfTheyBothBelongToAnotherPortfolio stamp: 'NNH 11/6/2020 15:20:26'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioShouldNotAddAnotherPortfolioWhenTheyShareAnAccount stamp: 'NNH 11/6/2020 15:20:26'!
PASSED!

!testRun: #PortfolioTest #test14Rombo stamp: 'NNH 11/6/2020 15:20:26'!
PASSED!

!testRun: #PortfolioTest #test15 stamp: 'NNH 11/6/2020 15:20:26'!
PASSED!
!FinancialProduct methodsFor: 'testing dependencies' stamp: 'NNH 11/6/2020 15:21:08'!
financialProducts
	
	| accountsInPortfolio |
	accountsInPortfolio := OrderedCollection new.
	self addAccountsInPortfolioTo: accountsInPortfolio.
	^ accountsInPortfolio.! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'NNH 11/6/2020 15:21:08' prior: 50875799!
hasAccountsInCommonWith: anAccountOrPortfolio

	^ (self financialProducts intersection: anAccountOrPortfolio financialProducts) isEmpty not! !

!methodRemoval: FinancialProduct #accountsInPortfolio stamp: 'NNH 11/6/2020 15:21:08'!
accountsInPortfolio
	
	| accountsInPortfolio |
	accountsInPortfolio := OrderedCollection new.
	self addAccountsInPortfolioTo: accountsInPortfolio.
	^ accountsInPortfolio.!
!Portfolio methodsFor: 'testing dependencies' stamp: 'NNH 11/6/2020 15:22:31'!
addFinancialProductTo: aCollectionOfAccounts
		
	aCollectionOfAccounts add: self.
	financialProducts do: [:anAccount | anAccount addAccountsInPortfolioTo: aCollectionOfAccounts].
	
	
	
! !
!FinancialProduct methodsFor: 'testing dependencies' stamp: 'NNH 11/6/2020 15:22:31'!
addFinancialProductTo: aCollectionOfAccounts
		
	self subclassResponsibility.! !
!ReceptiveAccount methodsFor: 'testing dependencies' stamp: 'NNH 11/6/2020 15:22:31' overrides: 50877741!
addFinancialProductTo: aCollectionOfAccounts
		
	aCollectionOfAccounts add: self.! !
!FinancialProduct methodsFor: 'as yet unclassified' stamp: 'NNH 11/6/2020 15:22:31' prior: 50877707!
financialProducts
	
	| accountsInPortfolio |
	accountsInPortfolio := OrderedCollection new.
	self addFinancialProductTo: accountsInPortfolio.
	^ accountsInPortfolio.! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'NNH 11/6/2020 15:22:31' prior: 50877372 overrides: 50876509!
addAccountsInPortfolioTo: aCollectionOfAccounts
		
	aCollectionOfAccounts add: self.
	financialProducts do: [:anAccount | anAccount addFinancialProductTo: aCollectionOfAccounts].
	
	
	
! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'NNH 11/6/2020 15:22:31' prior: 50877732 overrides: 50877741!
addFinancialProductTo: aCollectionOfAccounts
		
	aCollectionOfAccounts add: self.
	financialProducts do: [:anAccount | anAccount addFinancialProductTo: aCollectionOfAccounts].
	
	
	
! !

!methodRemoval: Portfolio #addAccountsInPortfolioTo: stamp: 'NNH 11/6/2020 15:22:31'!
addAccountsInPortfolioTo: aCollectionOfAccounts
		
	aCollectionOfAccounts add: self.
	financialProducts do: [:anAccount | anAccount addFinancialProductTo: aCollectionOfAccounts].
	
	
	
!

!methodRemoval: FinancialProduct #addAccountsInPortfolioTo: stamp: 'NNH 11/6/2020 15:22:31'!
addAccountsInPortfolioTo: aCollectionOfAccounts
		
	self subclassResponsibility.!

!methodRemoval: ReceptiveAccount #addAccountsInPortfolioTo: stamp: 'NNH 11/6/2020 15:22:31'!
addAccountsInPortfolioTo: aCollectionOfAccounts
		
	aCollectionOfAccounts add: self.!
!Portfolio methodsFor: 'assertions' stamp: 'NNH 11/6/2020 15:23:20'!
hasProductsInCommonWith: anAccountOrPortfolio

	^ (self financialProducts intersection: anAccountOrPortfolio financialProducts) isEmpty not! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'NNH 11/6/2020 15:23:20' prior: 50876520!
assertFinancialProductCanBeAdded: anAccountOrPortfolio

	(self isInAPortfolioWith: anAccountOrPortfolio) ifTrue: [self error: self class canNotBelongToACommonPortfolioErrorDescription ].
	(self hasProductsInCommonWith: anAccountOrPortfolio)	 ifTrue: [self error: self class canNotHaveAnAccountInCommonErrorDescription ].! !

!methodRemoval: Portfolio #hasAccountsInCommonWith: stamp: 'NNH 11/6/2020 15:23:20'!
hasAccountsInCommonWith: anAccountOrPortfolio

	^ (self financialProducts intersection: anAccountOrPortfolio financialProducts) isEmpty not!
!Portfolio methodsFor: 'testing dependencies' stamp: 'NNH 11/6/2020 15:29:49'!
isInAProductWith: anAccount
	
	^ (parents anySatisfy: [:aParent | aParent isInAPortfolioWith: anAccount ]) or: [
		self includesFinancialProduct: anAccount
		].
	
	
! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'NNH 11/6/2020 15:29:49' prior: 50877569!
isInAPortfolioWith: anAccount
	
	^ (parents anySatisfy: [:aParent | aParent isInAProductWith: anAccount ]) or: [
		self includesFinancialProduct: anAccount
		].
	
	
! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'NNH 11/6/2020 15:29:49' prior: 50877808!
assertFinancialProductCanBeAdded: anAccountOrPortfolio

	(self isInAProductWith: anAccountOrPortfolio) ifTrue: [self error: self class canNotBelongToACommonPortfolioErrorDescription ].
	(self hasProductsInCommonWith: anAccountOrPortfolio)	 ifTrue: [self error: self class canNotHaveAnAccountInCommonErrorDescription ].! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'NNH 11/6/2020 15:29:49' prior: 50877828!
isInAProductWith: anAccount
	
	^ (parents anySatisfy: [:aParent | aParent isInAProductWith: anAccount ]) or: [
		self includesFinancialProduct: anAccount
		].
	
	
! !

!methodRemoval: Portfolio #isInAPortfolioWith: stamp: 'NNH 11/6/2020 15:29:49'!
isInAPortfolioWith: anAccount
	
	^ (parents anySatisfy: [:aParent | aParent isInAProductWith: anAccount ]) or: [
		self includesFinancialProduct: anAccount
		].
	
	
!
!FinancialProduct methodsFor: 'assertions' stamp: 'NNH 11/6/2020 15:30:16'!
hasProductsInCommonWith: anAccountOrPortfolio

	^ (self financialProducts intersection: anAccountOrPortfolio financialProducts) isEmpty not! !

!methodRemoval: Portfolio #hasProductsInCommonWith: stamp: 'NNH 11/6/2020 15:30:16'!
hasProductsInCommonWith: anAccountOrPortfolio

	^ (self financialProducts intersection: anAccountOrPortfolio financialProducts) isEmpty not!
!FinancialProduct methodsFor: 'testing dependencies' stamp: 'NNH 11/6/2020 15:30:22'!
isInAProductWith: anAccount
	
	^ (parents anySatisfy: [:aParent | aParent isInAProductWith: anAccount ]) or: [
		self includesFinancialProduct: anAccount
		].
	
	
! !

!methodRemoval: Portfolio #isInAProductWith: stamp: 'NNH 11/6/2020 15:30:22'!
isInAProductWith: anAccount
	
	^ (parents anySatisfy: [:aParent | aParent isInAProductWith: anAccount ]) or: [
		self includesFinancialProduct: anAccount
		].
	
	
!
!Portfolio methodsFor: 'testing dependencies' stamp: 'NNH 11/6/2020 15:30:36' prior: 50877642 overrides: 50877468!
includesFinancialProduct: anAccountToSearch
	
	^ (anAccountToSearch == self) or: [
		financialProducts anySatisfy: [:anAccount | anAccount includesFinancialProduct: anAccountToSearch]
		].
	
	
! !

!testRun: #PortfolioTest #test01BalanceOfEmptyPortfolioIsZero stamp: 'NNH 11/6/2020 15:30:56'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithOneAccountIsBalanceOfThatAccount stamp: 'NNH 11/6/2020 15:30:56'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioWithMoreThanOneAccountIsSumOfBalances stamp: 'NNH 11/6/2020 15:30:56'!
PASSED!

!testRun: #PortfolioTest #test04EmptyPortfolioHasRegisteredNoTransactions stamp: 'NNH 11/6/2020 15:30:56'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioWithOneAccountRegistersATransactionOfThatAccount stamp: 'NNH 11/6/2020 15:30:56'!
PASSED!

!testRun: #PortfolioTest #test06APortfolioWithMoreThanOneAccountRegistersATransactionThatIsNotFromTheFirstAccount stamp: 'NNH 11/6/2020 15:30:56'!
PASSED!

!testRun: #PortfolioTest #test07EmptyPortfolioHasNoTransactions stamp: 'NNH 11/6/2020 15:30:56'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioWithOneAccountHasTheTransactionsOfThatAccount stamp: 'NNH 11/6/2020 15:30:56'!
PASSED!

!testRun: #PortfolioTest #test09APortfolioWithMoreThanOneAccountHasTheTransactionsOfItsAccounts stamp: 'NNH 11/6/2020 15:30:56'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioShouldNotAddItself stamp: 'NNH 11/6/2020 15:30:56'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioShouldNotAddParentPortfolio stamp: 'NNH 11/6/2020 15:30:56'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioShouldNotAddAccountIfTheyBothBelongToAnotherPortfolio stamp: 'NNH 11/6/2020 15:30:56'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioShouldNotAddAnotherPortfolioWhenTheyShareAnAccount stamp: 'NNH 11/6/2020 15:30:56'!
PASSED!

!testRun: #PortfolioTest #test14Rombo stamp: 'NNH 11/6/2020 15:30:56'!
PASSED!

!testRun: #PortfolioTest #test15 stamp: 'NNH 11/6/2020 15:30:56'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'NNH 11/6/2020 15:31:01'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'NNH 11/6/2020 15:31:01'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'NNH 11/6/2020 15:31:01'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'NNH 11/6/2020 15:31:01'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'NNH 11/6/2020 15:31:01'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'NNH 11/6/2020 15:31:01'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'NNH 11/6/2020 15:31:01'!
PASSED!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'NNH 11/6/2020 15:32:12'!
test15MoreThanOnePortfolioWithTheSameAccountsShouldNotRaise
	
	| p1 p2 p3 p4 |
	
	p1 := Portfolio new.
	p2 := Portfolio new.
	p3 := Portfolio new.
	p4 := Portfolio new.

	p1 addFinancialProduct: p3.
	p1 addFinancialProduct: p4.
	p2 addFinancialProduct: p3.

	self shouldnt: [p2 addFinancialProduct: p4] raise: Error.
! !

!methodRemoval: PortfolioTest #test15 stamp: 'NNH 11/6/2020 15:32:12'!
test15
	
	| p1 p2 p3 p4 |
	
	p1 := Portfolio new.
	p2 := Portfolio new.
	p3 := Portfolio new.
	p4 := Portfolio new.

	p1 addFinancialProduct: p3.
	p1 addFinancialProduct: p4.
	p2 addFinancialProduct: p3.

	self shouldnt: [p2 addFinancialProduct: p4] raise: Error.
!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'NNH 11/6/2020 15:33:39'!
test14PortfolioShouldNotContainAccountTwice
	
	| p1 p2 p3 p4 |
	
	p1 := Portfolio new.
	p2 := Portfolio new.
	p3 := Portfolio new.
	p4 := Portfolio new.

	p1 addFinancialProduct: p2.
	p1 addFinancialProduct: p3.
	p3 addFinancialProduct: p4.

	self should: [p2 addFinancialProduct: p4]
	raise: Error
	withMessageText: Portfolio canNotBelongToACommonPortfolioErrorDescription.! !

!methodRemoval: PortfolioTest #test14Rombo stamp: 'NNH 11/6/2020 15:33:39'!
test14Rombo
	
	| p1 p2 p3 p4 |
	
	p1 := Portfolio new.
	p2 := Portfolio new.
	p3 := Portfolio new.
	p4 := Portfolio new.

	p1 addFinancialProduct: p2.
	p1 addFinancialProduct: p3.
	p3 addFinancialProduct: p4.

	self should: [p2 addFinancialProduct: p4]
	raise: Error
	withMessageText: Portfolio canNotBelongToACommonPortfolioErrorDescription.!

!testRun: #PortfolioTest #test01BalanceOfEmptyPortfolioIsZero stamp: 'NNH 11/6/2020 15:33:48'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithOneAccountIsBalanceOfThatAccount stamp: 'NNH 11/6/2020 15:33:48'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioWithMoreThanOneAccountIsSumOfBalances stamp: 'NNH 11/6/2020 15:33:48'!
PASSED!

!testRun: #PortfolioTest #test04EmptyPortfolioHasRegisteredNoTransactions stamp: 'NNH 11/6/2020 15:33:48'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioWithOneAccountRegistersATransactionOfThatAccount stamp: 'NNH 11/6/2020 15:33:48'!
PASSED!

!testRun: #PortfolioTest #test06APortfolioWithMoreThanOneAccountRegistersATransactionThatIsNotFromTheFirstAccount stamp: 'NNH 11/6/2020 15:33:48'!
PASSED!

!testRun: #PortfolioTest #test07EmptyPortfolioHasNoTransactions stamp: 'NNH 11/6/2020 15:33:48'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioWithOneAccountHasTheTransactionsOfThatAccount stamp: 'NNH 11/6/2020 15:33:48'!
PASSED!

!testRun: #PortfolioTest #test09APortfolioWithMoreThanOneAccountHasTheTransactionsOfItsAccounts stamp: 'NNH 11/6/2020 15:33:48'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioShouldNotAddItself stamp: 'NNH 11/6/2020 15:33:48'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioShouldNotAddParentPortfolio stamp: 'NNH 11/6/2020 15:33:48'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioShouldNotAddAccountIfTheyBothBelongToAnotherPortfolio stamp: 'NNH 11/6/2020 15:33:48'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioShouldNotAddAnotherPortfolioWhenTheyShareAnAccount stamp: 'NNH 11/6/2020 15:33:48'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioShouldNotContainAccountTwice stamp: 'NNH 11/6/2020 15:33:48'!
PASSED!

!testRun: #PortfolioTest #test15MoreThanOnePortfolioWithTheSameAccountsShouldNotRaise stamp: 'NNH 11/6/2020 15:33:48'!
PASSED!
!Portfolio methodsFor: 'assertions' stamp: 'NNH 11/6/2020 15:34:32'!
signalCanNotBelongToACommonPortfolio

	^ self error: self class canNotBelongToACommonPortfolioErrorDescription! !
!Portfolio methodsFor: 'assertions' stamp: 'NNH 11/6/2020 15:34:32' prior: 50877846!
assertFinancialProductCanBeAdded: anAccountOrPortfolio

	(self isInAProductWith: anAccountOrPortfolio) ifTrue: [self signalCanNotBelongToACommonPortfolio ].
	(self hasProductsInCommonWith: anAccountOrPortfolio)	 ifTrue: [self error: self class canNotHaveAnAccountInCommonErrorDescription ].! !
!Portfolio methodsFor: 'assertions' stamp: 'NNH 11/6/2020 15:34:54'!
signalCanNotHaveAnAccountInCommon

	^ self error: self class canNotHaveAnAccountInCommonErrorDescription! !
!Portfolio methodsFor: 'assertions' stamp: 'NNH 11/6/2020 15:34:54' prior: 50878115!
assertFinancialProductCanBeAdded: anAccountOrPortfolio

	(self isInAProductWith: anAccountOrPortfolio) ifTrue: [self signalCanNotBelongToACommonPortfolio ].
	(self hasProductsInCommonWith: anAccountOrPortfolio)	 ifTrue: [self signalCanNotHaveAnAccountInCommon ].! !
!Portfolio methodsFor: 'inserting' stamp: 'NNH 11/6/2020 15:35:10' prior: 50877381!
addFinancialProduct: aFinancialProduct 
	
	self assertFinancialProductCanBeAdded: aFinancialProduct.
	
	aFinancialProduct addParent: self.	
	financialProducts add: aFinancialProduct.! !
!Portfolio methodsFor: 'testing dependencies' stamp: 'NNH 11/6/2020 15:35:30' prior: 50877772 overrides: 50877741!
addFinancialProductTo: aCollectionOfFinancialProducts
		
	aCollectionOfFinancialProducts add: self.
	financialProducts do: [:anAccount | anAccount addFinancialProductTo: aCollectionOfFinancialProducts].
	
	
	
! !
!Portfolio methodsFor: 'testing dependencies' stamp: 'NNH 11/6/2020 15:35:41' prior: 50878155 overrides: 50877741!
addFinancialProductTo: aCollectionOfFinancialProducts
		
	aCollectionOfFinancialProducts add: self.
	financialProducts do: [:aFinancialProduct | aFinancialProduct addFinancialProductTo: aCollectionOfFinancialProducts].
	
	
	
! !
!Portfolio methodsFor: 'transactions - private' stamp: 'NNH 11/6/2020 15:35:57' prior: 50877355!
addTransactionsTo: aCollectionOfTransactions
	
	financialProducts do: [ :aFinancialProduct | aFinancialProduct addTransactionsTo: aCollectionOfTransactions ].! !
!Portfolio methodsFor: 'assertions' stamp: 'NNH 11/6/2020 15:36:07' prior: 50878134!
assertFinancialProductCanBeAdded: aFinancialProduct

	(self isInAProductWith: aFinancialProduct) ifTrue: [self signalCanNotBelongToACommonPortfolio ].
	(self hasProductsInCommonWith: aFinancialProduct)	 ifTrue: [self signalCanNotHaveAnAccountInCommon ].! !
!Portfolio methodsFor: 'balance' stamp: 'NNH 11/6/2020 15:36:21' prior: 50877407 overrides: 50876388!
balance
	^ financialProducts sum: [:aFinancialProduct | aFinancialProduct balance] ifEmpty: [0].! !
!Portfolio methodsFor: 'testing' stamp: 'NNH 11/6/2020 15:36:35' prior: 50877364 overrides: 50876397!
hasRegistered: aTransaction
	^ financialProducts anySatisfy: [:aFinancialProduct | aFinancialProduct hasRegistered: aTransaction].! !
!Portfolio methodsFor: 'testing dependencies' stamp: 'NNH 11/6/2020 15:36:50' prior: 50877907 overrides: 50877468!
includesFinancialProduct: aFinancialProductToSearch
	
	^ (aFinancialProductToSearch == self) or: [
		financialProducts anySatisfy: [:anAccount | anAccount includesFinancialProduct: aFinancialProductToSearch]
		].
	
	
! !
!Portfolio methodsFor: 'testing dependencies' stamp: 'NNH 11/6/2020 15:36:58' prior: 50878212 overrides: 50877468!
includesFinancialProduct: aFinancialProductToSearch
	
	^ (aFinancialProductToSearch == self) or: [
		financialProducts anySatisfy: [:aFinancialProduct | aFinancialProduct includesFinancialProduct: aFinancialProductToSearch]
		].
	
	
! !
!ReceptiveAccount methodsFor: 'testing dependencies' stamp: 'NNH 11/6/2020 15:38:47' prior: 50877747 overrides: 50877741!
addFinancialProductTo: aCollectionOfFinancialProducts
		
	aCollectionOfFinancialProducts add: self.! !
!ReceptiveAccount methodsFor: 'testing dependencies' stamp: 'NNH 11/6/2020 15:39:07' prior: 50877495 overrides: 50877468!
includesFinancialProduct: aFinancialProductToSearch
	
	^ aFinancialProductToSearch == self.! !
!FinancialProduct methodsFor: 'testing dependencies' stamp: 'NNH 11/6/2020 15:39:25' prior: 50877741!
addFinancialProductTo: aCollectionOfFinancialProducts
		
	self subclassResponsibility.! !
!FinancialProduct methodsFor: 'testing dependencies' stamp: 'NNH 11/6/2020 15:39:45' prior: 50877753!
financialProducts
	
	| accountsInPortfolio |
	
	accountsInPortfolio := OrderedCollection new.
	self addFinancialProductTo: accountsInPortfolio.
	
	^ accountsInPortfolio.! !
!FinancialProduct methodsFor: 'balance' stamp: 'NNH 11/6/2020 15:39:55' prior: 50876388!
balance

	self subclassResponsibility.! !
!FinancialProduct methodsFor: 'assertions' stamp: 'NNH 11/6/2020 15:40:11' prior: 50877875!
hasProductsInCommonWith: aFinancialProduct

	^ (self financialProducts intersection: aFinancialProduct financialProducts) isEmpty not! !
!FinancialProduct methodsFor: 'testing' stamp: 'NNH 11/6/2020 15:40:19' prior: 50876397!
hasRegistered: aTransaction

	self subclassResponsibility.! !
!FinancialProduct methodsFor: 'testing dependencies' stamp: 'NNH 11/6/2020 15:40:34' prior: 50877890!
isInAProductWith: aFinancialProduct
	
	^ (parents anySatisfy: [:aParent | aParent isInAProductWith: aFinancialProduct ]) or: [
		self includesFinancialProduct: aFinancialProduct
		].
	
	
! !
!FinancialProduct methodsFor: 'transactions' stamp: 'NNH 11/6/2020 15:40:48' prior: 50876392!
transactions

	self subclassResponsibility.! !

!testRun: #PortfolioTest #test01BalanceOfEmptyPortfolioIsZero stamp: 'NNH 11/6/2020 15:41:46'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithOneAccountIsBalanceOfThatAccount stamp: 'NNH 11/6/2020 15:41:46'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioWithMoreThanOneAccountIsSumOfBalances stamp: 'NNH 11/6/2020 15:41:46'!
PASSED!

!testRun: #PortfolioTest #test04EmptyPortfolioHasRegisteredNoTransactions stamp: 'NNH 11/6/2020 15:41:46'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioWithOneAccountRegistersATransactionOfThatAccount stamp: 'NNH 11/6/2020 15:41:46'!
PASSED!

!testRun: #PortfolioTest #test06APortfolioWithMoreThanOneAccountRegistersATransactionThatIsNotFromTheFirstAccount stamp: 'NNH 11/6/2020 15:41:46'!
PASSED!

!testRun: #PortfolioTest #test07EmptyPortfolioHasNoTransactions stamp: 'NNH 11/6/2020 15:41:46'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioWithOneAccountHasTheTransactionsOfThatAccount stamp: 'NNH 11/6/2020 15:41:46'!
PASSED!

!testRun: #PortfolioTest #test09APortfolioWithMoreThanOneAccountHasTheTransactionsOfItsAccounts stamp: 'NNH 11/6/2020 15:41:46'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioShouldNotAddItself stamp: 'NNH 11/6/2020 15:41:46'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioShouldNotAddParentPortfolio stamp: 'NNH 11/6/2020 15:41:46'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioShouldNotAddAccountIfTheyBothBelongToAnotherPortfolio stamp: 'NNH 11/6/2020 15:41:46'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioShouldNotAddAnotherPortfolioWhenTheyShareAnAccount stamp: 'NNH 11/6/2020 15:41:46'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioShouldNotContainAccountTwice stamp: 'NNH 11/6/2020 15:41:46'!
PASSED!

!testRun: #PortfolioTest #test15MoreThanOnePortfolioWithTheSameAccountsShouldNotRaise stamp: 'NNH 11/6/2020 15:41:46'!
PASSED!

!testRun: #PortfolioTest #test01BalanceOfEmptyPortfolioIsZero stamp: 'NNH 11/6/2020 15:41:49'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithOneAccountIsBalanceOfThatAccount stamp: 'NNH 11/6/2020 15:41:49'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioWithMoreThanOneAccountIsSumOfBalances stamp: 'NNH 11/6/2020 15:41:49'!
PASSED!

!testRun: #PortfolioTest #test04EmptyPortfolioHasRegisteredNoTransactions stamp: 'NNH 11/6/2020 15:41:49'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioWithOneAccountRegistersATransactionOfThatAccount stamp: 'NNH 11/6/2020 15:41:49'!
PASSED!

!testRun: #PortfolioTest #test06APortfolioWithMoreThanOneAccountRegistersATransactionThatIsNotFromTheFirstAccount stamp: 'NNH 11/6/2020 15:41:49'!
PASSED!

!testRun: #PortfolioTest #test07EmptyPortfolioHasNoTransactions stamp: 'NNH 11/6/2020 15:41:49'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioWithOneAccountHasTheTransactionsOfThatAccount stamp: 'NNH 11/6/2020 15:41:49'!
PASSED!

!testRun: #PortfolioTest #test09APortfolioWithMoreThanOneAccountHasTheTransactionsOfItsAccounts stamp: 'NNH 11/6/2020 15:41:49'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioShouldNotAddItself stamp: 'NNH 11/6/2020 15:41:49'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioShouldNotAddParentPortfolio stamp: 'NNH 11/6/2020 15:41:49'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioShouldNotAddAccountIfTheyBothBelongToAnotherPortfolio stamp: 'NNH 11/6/2020 15:41:49'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioShouldNotAddAnotherPortfolioWhenTheyShareAnAccount stamp: 'NNH 11/6/2020 15:41:49'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioShouldNotContainAccountTwice stamp: 'NNH 11/6/2020 15:41:49'!
PASSED!

!testRun: #PortfolioTest #test15MoreThanOnePortfolioWithTheSameAccountsShouldNotRaise stamp: 'NNH 11/6/2020 15:41:49'!
PASSED!

!testRun: #PortfolioTest #test01BalanceOfEmptyPortfolioIsZero stamp: 'NNH 11/6/2020 15:42:32'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithOneAccountIsBalanceOfThatAccount stamp: 'NNH 11/6/2020 15:42:32'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioWithMoreThanOneAccountIsSumOfBalances stamp: 'NNH 11/6/2020 15:42:32'!
PASSED!

!testRun: #PortfolioTest #test04EmptyPortfolioHasRegisteredNoTransactions stamp: 'NNH 11/6/2020 15:42:32'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioWithOneAccountRegistersATransactionOfThatAccount stamp: 'NNH 11/6/2020 15:42:32'!
PASSED!

!testRun: #PortfolioTest #test06APortfolioWithMoreThanOneAccountRegistersATransactionThatIsNotFromTheFirstAccount stamp: 'NNH 11/6/2020 15:42:32'!
PASSED!

!testRun: #PortfolioTest #test07EmptyPortfolioHasNoTransactions stamp: 'NNH 11/6/2020 15:42:32'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioWithOneAccountHasTheTransactionsOfThatAccount stamp: 'NNH 11/6/2020 15:42:32'!
PASSED!

!testRun: #PortfolioTest #test09APortfolioWithMoreThanOneAccountHasTheTransactionsOfItsAccounts stamp: 'NNH 11/6/2020 15:42:32'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioShouldNotAddItself stamp: 'NNH 11/6/2020 15:42:32'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioShouldNotAddParentPortfolio stamp: 'NNH 11/6/2020 15:42:32'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioShouldNotAddAccountIfTheyBothBelongToAnotherPortfolio stamp: 'NNH 11/6/2020 15:42:32'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioShouldNotAddAnotherPortfolioWhenTheyShareAnAccount stamp: 'NNH 11/6/2020 15:42:32'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioShouldNotContainAccountTwice stamp: 'NNH 11/6/2020 15:42:32'!
PASSED!

!testRun: #PortfolioTest #test15MoreThanOnePortfolioWithTheSameAccountsShouldNotRaise stamp: 'NNH 11/6/2020 15:42:32'!
PASSED!

!classDefinition: #PortfolioTest category: 'Portfolio-Ejercicio' stamp: 'NNH 11/6/2020 15:51:31'!
TestCase subclass: #PortfolioTest
	instanceVariableNames: 'emptPortfolio'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!
!PortfolioTest methodsFor: 'testing balance' stamp: 'NNH 11/6/2020 15:51:29' overrides: 16927572!
setUp

	emptPortfolio := Portfolio new.
	! !

!classDefinition: #PortfolioTest category: 'Portfolio-Ejercicio' stamp: 'NNH 11/6/2020 15:54:06'!
TestCase subclass: #PortfolioTest
	instanceVariableNames: 'emptPortfolio hundredDollarsAccount'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classDefinition: #PortfolioTest category: 'Portfolio-Ejercicio' stamp: 'NNH 11/6/2020 15:54:34'!
TestCase subclass: #PortfolioTest
	instanceVariableNames: 'emptPortfolio hundredDollarsAccount aDeposit'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classDefinition: #PortfolioTest category: 'Portfolio-Ejercicio' stamp: 'NNH 11/6/2020 15:54:36'!
TestCase subclass: #PortfolioTest
	instanceVariableNames: 'emptPortfolio hundredDollarsAccount aDeposit hundredDollarsPortfolio'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!
!PortfolioTest methodsFor: 'setUp / tearDown' stamp: 'NNH 11/6/2020 15:54:32' prior: 50878481 overrides: 16927572!
setUp

	emptPortfolio := Portfolio new.
	
	hundredDollarsAccount := ReceptiveAccount new.
	aDeposit := Deposit register: 100 on: hundredDollarsAccount.
	
	hundredDollarsPortfolio := Portfolio new.
	hundredDollarsPortfolio addFinancialProduct: hundredDollarsAccount.! !

!classDefinition: #PortfolioTest category: 'Portfolio-Ejercicio' stamp: 'NNH 11/6/2020 15:54:42'!
TestCase subclass: #PortfolioTest
	instanceVariableNames: 'emptyPortfolio hundredDollarsAccount aDeposit hundredDollarsPortfolio'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'NNH 11/6/2020 15:54:42' prior: 50878514 overrides: 16927572!
setUp

	emptyPortfolio := Portfolio new.
	
	hundredDollarsAccount := ReceptiveAccount new.
	aDeposit := Deposit register: 100 on: hundredDollarsAccount.
	
	hundredDollarsPortfolio := Portfolio new.
	hundredDollarsPortfolio addFinancialProduct: hundredDollarsAccount.! !

!classDefinition: #PortfolioTest category: 'Portfolio-Ejercicio' stamp: 'NNH 11/6/2020 15:55:20'!
TestCase subclass: #PortfolioTest
	instanceVariableNames: 'emptyPortfolio hundredDollarsAccount aDeposit hundredDollarsPortfolio emptyAccount'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!
!PortfolioTest methodsFor: 'setUp / tearDown' stamp: 'NNH 11/6/2020 15:55:19' prior: 50878536 overrides: 16927572!
setUp

	emptyPortfolio := Portfolio new.
	
	hundredDollarsAccount := ReceptiveAccount new.
	aDeposit := Deposit register: 100 on: hundredDollarsAccount.
	emptyAccount := ReceptiveAccount new.

	hundredDollarsPortfolio := Portfolio new.
	hundredDollarsPortfolio addFinancialProduct: hundredDollarsAccount.! !

!classDefinition: #PortfolioTest category: 'Portfolio-Ejercicio' stamp: 'NNH 11/6/2020 15:57:25'!
TestCase subclass: #PortfolioTest
	instanceVariableNames: 'emptyPortfolio hundredDollarsAccount aDeposit hundredDollarsPortfolio emptyAccount zeroBalancePortfolio'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!
!PortfolioTest methodsFor: 'setUp / tearDown' stamp: 'NNH 11/6/2020 15:57:23' prior: 50878559 overrides: 16927572!
setUp

	emptyAccount := ReceptiveAccount new.
	hundredDollarsAccount := ReceptiveAccount new.
	
	aDeposit := Deposit register: 100 on: hundredDollarsAccount.
	
	emptyPortfolio := Portfolio new.
	hundredDollarsPortfolio := Portfolio new.
	hundredDollarsPortfolio addFinancialProduct: hundredDollarsAccount.
	zeroBalancePortfolio := Portfolio new.
	
	! !

!classDefinition: #PortfolioTest category: 'Portfolio-Ejercicio' stamp: 'NNH 11/6/2020 15:58:08'!
TestCase subclass: #PortfolioTest
	instanceVariableNames: 'emptyPortfolio hundredDollarsAccount aDeposit hundredDollarsPortfolio emptyAccount zeroBalancePortfolio twoAccountsPortfolio'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!
!PortfolioTest methodsFor: 'setUp / tearDown' stamp: 'NNH 11/6/2020 15:58:06' prior: 50878583 overrides: 16927572!
setUp

	emptyAccount := ReceptiveAccount new.
	hundredDollarsAccount := ReceptiveAccount new.
	
	aDeposit := Deposit register: 100 on: hundredDollarsAccount.
	
	emptyPortfolio := Portfolio new.
	hundredDollarsPortfolio := Portfolio new.
	hundredDollarsPortfolio addFinancialProduct: hundredDollarsAccount.
	zeroBalancePortfolio := Portfolio new.
	zeroBalancePortfolio addFinancialProduct: emptyAccount.
	twoAccountsPortfolio := Portfolio new.	
	! !
!PortfolioTest methodsFor: 'setUp / tearDown' stamp: 'NNH 11/6/2020 15:58:41' prior: 50878609 overrides: 16927572!
setUp

	emptyAccount := ReceptiveAccount new.
	hundredDollarsAccount := ReceptiveAccount new.
	
	aDeposit := Deposit register: 100 on: hundredDollarsAccount.
	
	emptyPortfolio := Portfolio new.
	hundredDollarsPortfolio := Portfolio new.
	hundredDollarsPortfolio addFinancialProduct: hundredDollarsAccount.
	zeroBalancePortfolio := Portfolio new.
	zeroBalancePortfolio addFinancialProduct: emptyAccount.
	twoAccountsPortfolio := Portfolio new.
	twoAccountsPortfolio addFinancialProduct: hundredDollarsAccount.
	twoAccountsPortfolio addFinancialProduct: emptyAccount.	
	! !
!PortfolioTest methodsFor: 'testing balance' stamp: 'NNH 11/6/2020 15:58:59' prior: 50872026!
test01BalanceOfEmptyPortfolioIsZero
	
	self assert: 0 equals: emptyPortfolio balance.
	
	! !

!testRun: #PortfolioTest #test01BalanceOfEmptyPortfolioIsZero stamp: 'NNH 11/6/2020 15:59:02'!
PASSED!
!PortfolioTest methodsFor: 'testing balance' stamp: 'NNH 11/6/2020 15:59:24' prior: 50876915!
test02BalanceOfPortfolioWithOneAccountIsBalanceOfThatAccount
	
	self assert: 100 equals: hundredDollarsPortfolio balance.
	
	! !

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithOneAccountIsBalanceOfThatAccount stamp: 'NNH 11/6/2020 15:59:28'!
PASSED!
!PortfolioTest methodsFor: 'setUp / tearDown' stamp: 'NNH 11/6/2020 16:00:51' prior: 50878627 overrides: 16927572!
setUp

	emptyAccount := ReceptiveAccount new.
	hundredDollarsAccount := ReceptiveAccount new.
	
	aDeposit := Deposit register: 100 on: hundredDollarsAccount.
	
	emptyPortfolio := Portfolio new.
	hundredDollarsPortfolio := Portfolio new.
	hundredDollarsPortfolio addFinancialProduct: hundredDollarsAccount.
	zeroBalancePortfolio := Portfolio new.
	zeroBalancePortfolio addFinancialProduct: emptyAccount.
	twoAccountsPortfolio := Portfolio new.
	twoAccountsPortfolio addFinancialProduct: emptyAccount.	
	twoAccountsPortfolio addFinancialProduct: hundredDollarsAccount.
	
	! !
!PortfolioTest methodsFor: 'testing balance' stamp: 'NNH 11/6/2020 16:01:11' prior: 50876927!
test03BalanceOfPortfolioWithMoreThanOneAccountIsSumOfBalances

	self assert: 100 equals: twoAccountsPortfolio balance.
	
	! !

!testRun: #PortfolioTest #test03BalanceOfPortfolioWithMoreThanOneAccountIsSumOfBalances stamp: 'NNH 11/6/2020 16:01:14'!
PASSED!
!PortfolioTest methodsFor: 'testing register operations' stamp: 'NNH 11/6/2020 16:01:33' prior: 50872163!
test04EmptyPortfolioHasRegisteredNoTransactions

	self deny: (hundredDollarsPortfolio hasRegistered: aDeposit ).
	
	! !

!testRun: #PortfolioTest #test04EmptyPortfolioHasRegisteredNoTransactions stamp: 'NNH 11/6/2020 16:01:35'!
FAILURE!

!testRun: #PortfolioTest #test04EmptyPortfolioHasRegisteredNoTransactions stamp: 'NNH 11/6/2020 16:01:35'!
FAILURE!
!PortfolioTest methodsFor: 'testing register operations' stamp: 'NNH 11/6/2020 16:01:42' prior: 50878703!
test04EmptyPortfolioHasRegisteredNoTransactions

	self deny: (emptyPortfolio hasRegistered: aDeposit ).
	
	! !

!testRun: #PortfolioTest #test04EmptyPortfolioHasRegisteredNoTransactions stamp: 'NNH 11/6/2020 16:01:45'!
PASSED!
!PortfolioTest methodsFor: 'testing register operations' stamp: 'NNH 11/6/2020 16:02:06' prior: 50876943!
test05PortfolioWithOneAccountRegistersATransactionOfThatAccount

	self assert: (hundredDollarsPortfolio hasRegistered: aDeposit ).
	
	! !

!testRun: #PortfolioTest #test05PortfolioWithOneAccountRegistersATransactionOfThatAccount stamp: 'NNH 11/6/2020 16:02:09'!
PASSED!
!PortfolioTest methodsFor: 'testing register operations' stamp: 'NNH 11/6/2020 16:02:27' prior: 50876957!
test06APortfolioWithMoreThanOneAccountRegistersATransactionThatIsNotFromTheFirstAccount

	self assert: (twoAccountsPortfolio hasRegistered: aDeposit).
	
	! !

!testRun: #PortfolioTest #test06APortfolioWithMoreThanOneAccountRegistersATransactionThatIsNotFromTheFirstAccount stamp: 'NNH 11/6/2020 16:02:30'!
PASSED!
!PortfolioTest methodsFor: 'testing transactions' stamp: 'NNH 11/6/2020 16:03:03' prior: 50872185!
test07EmptyPortfolioHasNoTransactions

	self assert: emptyPortfolio transactions isEmpty.
	
	! !
!PortfolioTest methodsFor: 'testing transactions' stamp: 'NNH 11/6/2020 16:03:27' prior: 50876975!
test08PortfolioWithOneAccountHasTheTransactionsOfThatAccount

	self assert: 1 equals: hundredDollarsPortfolio transactions size.
	self assert: hundredDollarsPortfolio transactions includes: aDeposit.
	
	! !

!testRun: #PortfolioTest #test08PortfolioWithOneAccountHasTheTransactionsOfThatAccount stamp: 'NNH 11/6/2020 16:03:32'!
PASSED!
!PortfolioTest methodsFor: 'testing transactions' stamp: 'NNH 11/6/2020 16:04:04' prior: 50876990!
test09APortfolioWithMoreThanOneAccountHasTheTransactionsOfItsAccounts

	self assert: 1 equals: twoAccountsPortfolio transactions size.
	self assert: twoAccountsPortfolio transactions includes: aDeposit.
	
	! !

!testRun: #PortfolioTest #test01BalanceOfEmptyPortfolioIsZero stamp: 'NNH 11/6/2020 16:04:07'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithOneAccountIsBalanceOfThatAccount stamp: 'NNH 11/6/2020 16:04:07'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioWithMoreThanOneAccountIsSumOfBalances stamp: 'NNH 11/6/2020 16:04:07'!
PASSED!

!testRun: #PortfolioTest #test04EmptyPortfolioHasRegisteredNoTransactions stamp: 'NNH 11/6/2020 16:04:07'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioWithOneAccountRegistersATransactionOfThatAccount stamp: 'NNH 11/6/2020 16:04:07'!
PASSED!

!testRun: #PortfolioTest #test06APortfolioWithMoreThanOneAccountRegistersATransactionThatIsNotFromTheFirstAccount stamp: 'NNH 11/6/2020 16:04:07'!
PASSED!

!testRun: #PortfolioTest #test07EmptyPortfolioHasNoTransactions stamp: 'NNH 11/6/2020 16:04:07'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioWithOneAccountHasTheTransactionsOfThatAccount stamp: 'NNH 11/6/2020 16:04:07'!
PASSED!

!testRun: #PortfolioTest #test09APortfolioWithMoreThanOneAccountHasTheTransactionsOfItsAccounts stamp: 'NNH 11/6/2020 16:04:07'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioShouldNotAddItself stamp: 'NNH 11/6/2020 16:04:07'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioShouldNotAddParentPortfolio stamp: 'NNH 11/6/2020 16:04:07'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioShouldNotAddAccountIfTheyBothBelongToAnotherPortfolio stamp: 'NNH 11/6/2020 16:04:07'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioShouldNotAddAnotherPortfolioWhenTheyShareAnAccount stamp: 'NNH 11/6/2020 16:04:07'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioShouldNotContainAccountTwice stamp: 'NNH 11/6/2020 16:04:07'!
PASSED!

!testRun: #PortfolioTest #test15MoreThanOnePortfolioWithTheSameAccountsShouldNotRaise stamp: 'NNH 11/6/2020 16:04:07'!
PASSED!
!PortfolioTest methodsFor: 'testing dependencies' stamp: 'NNH 11/6/2020 16:04:45' prior: 50877009!
test10PortfolioShouldNotAddItself

	self should: [emptyPortfolio addFinancialProduct: emptyPortfolio] raise: Error.! !

!testRun: #PortfolioTest #test10PortfolioShouldNotAddItself stamp: 'NNH 11/6/2020 16:04:48'!
PASSED!
!PortfolioTest methodsFor: 'testing dependencies' stamp: 'NNH 11/6/2020 16:05:11' prior: 50877017!
test11PortfolioShouldNotAddParentPortfolio
	
	self should: [emptyPortfolio addFinancialProduct: hundredDollarsPortfolio] raise: Error.! !

!testRun: #PortfolioTest #test11PortfolioShouldNotAddParentPortfolio stamp: 'NNH 11/6/2020 16:05:13'!
FAILURE!

!testRun: #PortfolioTest #test11PortfolioShouldNotAddParentPortfolio stamp: 'NNH 11/6/2020 16:05:13'!
FAILURE!
!PortfolioTest methodsFor: 'testing dependencies' stamp: 'NNH 11/6/2020 16:05:42' prior: 50878853!
test11PortfolioShouldNotAddParentPortfolio
	
	emptyPortfolio addFinancialProduct: hundredDollarsPortfolio .

	self should: [hundredDollarsPortfolio addFinancialProduct: emptyPortfolio] raise: Error.! !

!testRun: #PortfolioTest #test11PortfolioShouldNotAddParentPortfolio stamp: 'NNH 11/6/2020 16:05:45'!
PASSED!
!PortfolioTest methodsFor: 'testing register operations' stamp: 'NNH 11/6/2020 16:07:07' prior: 50878718!
test04EmptyPortfolioHasRegisteredNoTransactions

	self deny: (zeroBalancePortfolio hasRegistered: aDeposit).
	
	! !
!PortfolioTest methodsFor: 'testing dependencies' stamp: 'NNH 11/6/2020 16:07:41' prior: 50877029!
test12PortfolioShouldNotAddAccountIfTheyBothBelongToAnotherPortfolio

	emptyPortfolio addFinancialProduct: zeroBalancePortfolio.
	emptyPortfolio addFinancialProduct: hundredDollarsPortfolio .

	self should: [zeroBalancePortfolio addFinancialProduct: hundredDollarsPortfolio ]
	raise: Error
	withMessageText: Portfolio canNotBelongToACommonPortfolioErrorDescription.! !

!testRun: #PortfolioTest #test12PortfolioShouldNotAddAccountIfTheyBothBelongToAnotherPortfolio stamp: 'NNH 11/6/2020 16:07:44'!
PASSED!
!PortfolioTest methodsFor: 'testing dependencies' stamp: 'NNH 11/6/2020 16:08:59' prior: 50877043!
test13PortfolioShouldNotAddAnotherPortfolioWhenTheyShareAnAccount
	
	emptyPortfolio addFinancialProduct: hundredDollarsPortfolio.
	zeroBalancePortfolio addFinancialProduct: hundredDollarsPortfolio.

	self should: [emptyPortfolio addFinancialProduct: zeroBalancePortfolio]
	raise: Error
	withMessageText: Portfolio canNotHaveAnAccountInCommonErrorDescription.! !

!testRun: #PortfolioTest #test13PortfolioShouldNotAddAnotherPortfolioWhenTheyShareAnAccount stamp: 'NNH 11/6/2020 16:09:01'!
PASSED!
!PortfolioTest methodsFor: 'testing dependencies' stamp: 'NNH 11/6/2020 16:09:36' prior: 50878022!
test14PortfolioShouldNotContainAccountTwice
	
	| p1 p2 p3 p4 |
	
	p1 := Portfolio new.
	p2 := Portfolio new.
	p3 := Portfolio new.
	p4 := Portfolio new.

	emptyPortfolio addFinancialProduct: zeroBalancePortfolio .
	emptyPortfolio addFinancialProduct: hundredDollarsPortfolio .
	hundredDollarsPortfolio addFinancialProduct: twoAccountsPortfolio .

	self should: [zeroBalancePortfolio addFinancialProduct: twoAccountsPortfolio]
	raise: Error
	withMessageText: Portfolio canNotBelongToACommonPortfolioErrorDescription.! !
!PortfolioTest methodsFor: 'testing dependencies' stamp: 'NNH 11/6/2020 16:09:45' prior: 50878927!
test14PortfolioShouldNotContainAccountTwice

	emptyPortfolio addFinancialProduct: zeroBalancePortfolio .
	emptyPortfolio addFinancialProduct: hundredDollarsPortfolio .
	hundredDollarsPortfolio addFinancialProduct: twoAccountsPortfolio .

	self should: [zeroBalancePortfolio addFinancialProduct: twoAccountsPortfolio]
	raise: Error
	withMessageText: Portfolio canNotBelongToACommonPortfolioErrorDescription.! !

!testRun: #PortfolioTest #test14PortfolioShouldNotContainAccountTwice stamp: 'NNH 11/6/2020 16:09:48'!
ERROR!

!testRun: #PortfolioTest #test14PortfolioShouldNotContainAccountTwice stamp: 'NNH 11/6/2020 16:09:48'!
ERROR!
!PortfolioTest methodsFor: 'testing dependencies' stamp: 'NNH 11/6/2020 16:10:10' prior: 50878947!
test14PortfolioShouldNotContainAccountTwice

	emptyPortfolio addFinancialProduct: zeroBalancePortfolio .
	emptyPortfolio addFinancialProduct: hundredDollarsPortfolio .
	hundredDollarsPortfolio addFinancialProduct: twoAccountsPortfolio .

	self should: [zeroBalancePortfolio addFinancialProduct: twoAccountsPortfolio]
	raise: Error
	withMessageText: Portfolio canNotHaveAnAccountInCommonErrorDescription ! !

!testRun: #PortfolioTest #test14PortfolioShouldNotContainAccountTwice stamp: 'NNH 11/6/2020 16:10:13'!
ERROR!

!testRun: #PortfolioTest #test14PortfolioShouldNotContainAccountTwice stamp: 'NNH 11/6/2020 16:10:13'!
ERROR!
!PortfolioTest methodsFor: 'testing dependencies' stamp: 'NNH 11/6/2020 16:10:22' prior: 50878970!
test14PortfolioShouldNotContainAccountTwice

	emptyPortfolio addFinancialProduct: zeroBalancePortfolio .
	emptyPortfolio addFinancialProduct: hundredDollarsPortfolio .
	hundredDollarsPortfolio addFinancialProduct: twoAccountsPortfolio .

	self should: [zeroBalancePortfolio addFinancialProduct: twoAccountsPortfolio]
	raise: Error
	withMessageText: Portfolio canNotBelongToACommonPortfolioErrorDescription ! !

!testRun: #PortfolioTest #test14PortfolioShouldNotContainAccountTwice stamp: 'NNH 11/6/2020 16:10:25'!
ERROR!

!testRun: #PortfolioTest #test14PortfolioShouldNotContainAccountTwice stamp: 'NNH 11/6/2020 16:10:25'!
ERROR!
!PortfolioTest methodsFor: 'testing dependencies' stamp: 'NNH 11/6/2020 16:10:39' prior: 50878993!
test14PortfolioShouldNotContainAccountTwice

	emptyPortfolio addFinancialProduct: zeroBalancePortfolio .
	emptyPortfolio addFinancialProduct: hundredDollarsPortfolio .
	hundredDollarsPortfolio addFinancialProduct: twoAccountsPortfolio .

	self should: [zeroBalancePortfolio addFinancialProduct: twoAccountsPortfolio]
	raise: Error
	withMessageText: Portfolio canNotHaveAnAccountInCommonErrorDescription.! !

!testRun: #PortfolioTest #test14PortfolioShouldNotContainAccountTwice stamp: 'NNH 11/6/2020 16:10:44'!
ERROR!

!testRun: #PortfolioTest #test14PortfolioShouldNotContainAccountTwice stamp: 'NNH 11/6/2020 16:10:44'!
ERROR!
!PortfolioTest methodsFor: 'testing dependencies' stamp: 'NNH 11/6/2020 16:11:03' prior: 50879016!
test14PortfolioShouldNotContainAccountTwice

	emptyPortfolio addFinancialProduct: zeroBalancePortfolio .
	emptyPortfolio addFinancialProduct: hundredDollarsPortfolio .
	hundredDollarsPortfolio addFinancialProduct: twoAccountsPortfolio .

	self should: [zeroBalancePortfolio addFinancialProduct: twoAccountsPortfolio]
	raise: Error
	withMessageText: Portfolio canNotHaveAnAccountInCommonErrorDescription.! !

!testRun: #PortfolioTest #test14PortfolioShouldNotContainAccountTwice stamp: 'NNH 11/6/2020 16:11:13'!
ERROR!

!testRun: #PortfolioTest #test14PortfolioShouldNotContainAccountTwice stamp: 'NNH 11/6/2020 16:11:13'!
ERROR!
!PortfolioTest methodsFor: 'setUp / tearDown' stamp: 'NNH 11/6/2020 16:15:36' prior: 50878670 overrides: 16927572!
setUp

	| anotherAccount yetAnotherAccount |
	emptyAccount := ReceptiveAccount new.
	hundredDollarsAccount := ReceptiveAccount new.
	anotherAccount := ReceptiveAccount new.
	yetAnotherAccount := ReceptiveAccount new.
	
	
	aDeposit := Deposit register: 100 on: hundredDollarsAccount.
	
	emptyPortfolio := Portfolio new.
	hundredDollarsPortfolio := Portfolio new.
	hundredDollarsPortfolio addFinancialProduct: hundredDollarsAccount.
	zeroBalancePortfolio := Portfolio new.
	zeroBalancePortfolio addFinancialProduct: emptyAccount.
	twoAccountsPortfolio := Portfolio new.
	twoAccountsPortfolio addFinancialProduct: anotherAccount.	
	twoAccountsPortfolio addFinancialProduct: yetAnotherAccount.
	
	! !
!PortfolioTest methodsFor: 'setUp / tearDown' stamp: 'NNH 11/6/2020 16:15:43' prior: 50879063 overrides: 16927572!
setUp

	| anotherAccount yetAnotherAccount |
	
	emptyAccount := ReceptiveAccount new.
	hundredDollarsAccount := ReceptiveAccount new.
	anotherAccount := ReceptiveAccount new.
	yetAnotherAccount := ReceptiveAccount new.
	
	
	aDeposit := Deposit register: 100 on: hundredDollarsAccount.
	
	emptyPortfolio := Portfolio new.
	hundredDollarsPortfolio := Portfolio new.
	hundredDollarsPortfolio addFinancialProduct: hundredDollarsAccount.
	zeroBalancePortfolio := Portfolio new.
	zeroBalancePortfolio addFinancialProduct: emptyAccount.
	twoAccountsPortfolio := Portfolio new.
	twoAccountsPortfolio addFinancialProduct: anotherAccount.	
	twoAccountsPortfolio addFinancialProduct: yetAnotherAccount.
	
	! !

!testRun: #PortfolioTest #test14PortfolioShouldNotContainAccountTwice stamp: 'NNH 11/6/2020 16:15:57'!
FAILURE!

!testRun: #PortfolioTest #test14PortfolioShouldNotContainAccountTwice stamp: 'NNH 11/6/2020 16:15:57'!
FAILURE!

!testRun: #PortfolioTest #test14PortfolioShouldNotContainAccountTwice stamp: 'NNH 11/6/2020 16:16:14'!
FAILURE!

!testRun: #PortfolioTest #test14PortfolioShouldNotContainAccountTwice stamp: 'NNH 11/6/2020 16:16:14'!
FAILURE!
!PortfolioTest methodsFor: 'testing dependencies' stamp: 'NNH 11/6/2020 16:16:51' prior: 50879039!
test14PortfolioShouldNotContainAccountTwice

	emptyPortfolio addFinancialProduct: zeroBalancePortfolio .
	emptyPortfolio addFinancialProduct: hundredDollarsPortfolio .
	hundredDollarsPortfolio addFinancialProduct: twoAccountsPortfolio .

	self should: [zeroBalancePortfolio addFinancialProduct: twoAccountsPortfolio]
	raise: Error
	withMessageText: Portfolio canNotBelongToACommonPortfolioErrorDescription.! !

!testRun: #PortfolioTest #test14PortfolioShouldNotContainAccountTwice stamp: 'NNH 11/6/2020 16:16:54'!
PASSED!
!PortfolioTest methodsFor: 'testing dependencies' stamp: 'NNH 11/6/2020 16:17:29' prior: 50877998!
test15MoreThanOnePortfolioWithTheSameAccountsShouldNotRaise
	
	| p1 p2 p3 p4 |
	
	p1 := Portfolio new.
	p2 := Portfolio new.
	p3 := Portfolio new.
	p4 := Portfolio new.

	emptyPortfolio addFinancialProduct: hundredDollarsPortfolio .
	emptyPortfolio addFinancialProduct: twoAccountsPortfolio.
	zeroBalancePortfolio addFinancialProduct: hundredDollarsPortfolio.

	self shouldnt: [zeroBalancePortfolio addFinancialProduct: twoAccountsPortfolio] raise: Error.
! !
!PortfolioTest methodsFor: 'testing dependencies' stamp: 'NNH 11/6/2020 16:17:43' prior: 50879149!
test15MoreThanOnePortfolioWithTheSameAccountsShouldNotRaise
	
	emptyPortfolio addFinancialProduct: hundredDollarsPortfolio .
	emptyPortfolio addFinancialProduct: twoAccountsPortfolio.
	zeroBalancePortfolio addFinancialProduct: hundredDollarsPortfolio.

	self shouldnt: [zeroBalancePortfolio addFinancialProduct: twoAccountsPortfolio] raise: Error.
! !

!testRun: #PortfolioTest #test15MoreThanOnePortfolioWithTheSameAccountsShouldNotRaise stamp: 'NNH 11/6/2020 16:17:47'!
PASSED!

!testRun: #PortfolioTest #test01BalanceOfEmptyPortfolioIsZero stamp: 'NNH 11/6/2020 16:17:51'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithOneAccountIsBalanceOfThatAccount stamp: 'NNH 11/6/2020 16:17:51'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioWithMoreThanOneAccountIsSumOfBalances stamp: 'NNH 11/6/2020 16:17:51'!
FAILURE!

!testRun: #PortfolioTest #test04EmptyPortfolioHasRegisteredNoTransactions stamp: 'NNH 11/6/2020 16:17:51'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioWithOneAccountRegistersATransactionOfThatAccount stamp: 'NNH 11/6/2020 16:17:51'!
PASSED!

!testRun: #PortfolioTest #test06APortfolioWithMoreThanOneAccountRegistersATransactionThatIsNotFromTheFirstAccount stamp: 'NNH 11/6/2020 16:17:51'!
FAILURE!

!testRun: #PortfolioTest #test07EmptyPortfolioHasNoTransactions stamp: 'NNH 11/6/2020 16:17:51'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioWithOneAccountHasTheTransactionsOfThatAccount stamp: 'NNH 11/6/2020 16:17:51'!
PASSED!

!testRun: #PortfolioTest #test09APortfolioWithMoreThanOneAccountHasTheTransactionsOfItsAccounts stamp: 'NNH 11/6/2020 16:17:51'!
FAILURE!

!testRun: #PortfolioTest #test10PortfolioShouldNotAddItself stamp: 'NNH 11/6/2020 16:17:51'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioShouldNotAddParentPortfolio stamp: 'NNH 11/6/2020 16:17:51'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioShouldNotAddAccountIfTheyBothBelongToAnotherPortfolio stamp: 'NNH 11/6/2020 16:17:51'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioShouldNotAddAnotherPortfolioWhenTheyShareAnAccount stamp: 'NNH 11/6/2020 16:17:51'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioShouldNotContainAccountTwice stamp: 'NNH 11/6/2020 16:17:51'!
PASSED!

!testRun: #PortfolioTest #test15MoreThanOnePortfolioWithTheSameAccountsShouldNotRaise stamp: 'NNH 11/6/2020 16:17:51'!
PASSED!

!classDefinition: #PortfolioTest category: 'Portfolio-Ejercicio' stamp: 'NNH 11/6/2020 16:19:03'!
TestCase subclass: #PortfolioTest
	instanceVariableNames: 'emptyPortfolio hundredDollarsAccount aDeposit hundredDollarsPortfolio emptyAccount zeroBalancePortfolio twoAccountsPortfolio anotherEmptyAccount'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classDefinition: #PortfolioTest category: 'Portfolio-Ejercicio' stamp: 'NNH 11/6/2020 16:19:11'!
TestCase subclass: #PortfolioTest
	instanceVariableNames: 'emptyPortfolio hundredDollarsAccount aDeposit hundredDollarsPortfolio emptyAccount zeroBalancePortfolio twoAccountsPortfolio anotherEmptyAccount anotherHundredDollarsAccount'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classDefinition: #PortfolioTest category: 'Portfolio-Ejercicio' stamp: 'NNH 11/6/2020 16:19:12'!
TestCase subclass: #PortfolioTest
	instanceVariableNames: 'emptyPortfolio hundredDollarsAccount aDeposit hundredDollarsPortfolio emptyAccount zeroBalancePortfolio twoAccountsPortfolio anotherEmptyAccount anotherHundredDollarsAccount anotherDeposit'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!
!PortfolioTest methodsFor: 'setUp / tearDown' stamp: 'NNH 11/6/2020 16:19:01' prior: 50879089 overrides: 16927572!
setUp

	
	
	emptyAccount := ReceptiveAccount new.
	hundredDollarsAccount := ReceptiveAccount new.
	anotherEmptyAccount := ReceptiveAccount new.
	anotherHundredDollarsAccount := ReceptiveAccount new.
	
	aDeposit := Deposit register: 100 on: hundredDollarsAccount.
	anotherDeposit := Deposit register: 100 on: anotherHundredDollarsAccount.
	
	emptyPortfolio := Portfolio new.
	hundredDollarsPortfolio := Portfolio new.
	hundredDollarsPortfolio addFinancialProduct: hundredDollarsAccount.
	zeroBalancePortfolio := Portfolio new.
	zeroBalancePortfolio addFinancialProduct: emptyAccount.
	twoAccountsPortfolio := Portfolio new.
	twoAccountsPortfolio addFinancialProduct: anotherEmptyAccount.	
	twoAccountsPortfolio addFinancialProduct: anotherHundredDollarsAccount.
	
	! !
!PortfolioTest methodsFor: 'setUp / tearDown' stamp: 'NNH 11/6/2020 16:19:20' prior: 50879283 overrides: 16927572!
setUp
	
	emptyAccount := ReceptiveAccount new.
	hundredDollarsAccount := ReceptiveAccount new.
	anotherEmptyAccount := ReceptiveAccount new.
	anotherHundredDollarsAccount := ReceptiveAccount new.
	
	aDeposit := Deposit register: 100 on: hundredDollarsAccount.
	anotherDeposit := Deposit register: 100 on: anotherHundredDollarsAccount.
	
	emptyPortfolio := Portfolio new.
	hundredDollarsPortfolio := Portfolio new.
	hundredDollarsPortfolio addFinancialProduct: hundredDollarsAccount.
	zeroBalancePortfolio := Portfolio new.
	zeroBalancePortfolio addFinancialProduct: emptyAccount.
	twoAccountsPortfolio := Portfolio new.
	twoAccountsPortfolio addFinancialProduct: anotherEmptyAccount.	
	twoAccountsPortfolio addFinancialProduct: anotherHundredDollarsAccount.
	
	! !

TestCase subclass: #PortfolioTest
	instanceVariableNames: 'emptyPortfolio hundredDollarsAccount aDeposit hundredDollarsPortfolio emptyAccount zeroBalancePortfolio twoAccountsPortfolio'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classDefinition: #PortfolioTest category: 'Portfolio-Ejercicio' stamp: 'NNH 11/6/2020 16:19:52'!
TestCase subclass: #PortfolioTest
	instanceVariableNames: 'emptyPortfolio hundredDollarsAccount aDeposit hundredDollarsPortfolio emptyAccount zeroBalancePortfolio twoAccountsPortfolio'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!
!PortfolioTest methodsFor: 'setUp / tearDown' stamp: 'NNH 11/6/2020 16:20:19' prior: 50879311 overrides: 16927572!
setUp
	
	| anotherEmptyAccount anotherHundredDollarsAccount anotherDeposit |
	
	emptyAccount := ReceptiveAccount new.
	hundredDollarsAccount := ReceptiveAccount new.
	anotherEmptyAccount := ReceptiveAccount new.
	anotherHundredDollarsAccount := ReceptiveAccount new.
	
	aDeposit := Deposit register: 100 on: hundredDollarsAccount.
	anotherDeposit := Deposit register: 100 on: anotherHundredDollarsAccount.
	
	emptyPortfolio := Portfolio new.
	hundredDollarsPortfolio := Portfolio new.
	hundredDollarsPortfolio addFinancialProduct: hundredDollarsAccount.
	zeroBalancePortfolio := Portfolio new.
	zeroBalancePortfolio addFinancialProduct: emptyAccount.
	twoAccountsPortfolio := Portfolio new.
	twoAccountsPortfolio addFinancialProduct: anotherEmptyAccount.	
	twoAccountsPortfolio addFinancialProduct: anotherHundredDollarsAccount.
	
	! !
!PortfolioTest methodsFor: 'setUp / tearDown' stamp: 'NNH 11/6/2020 16:20:40' prior: 50879359 overrides: 16927572!
setUp
	
	| anotherEmptyAccount anotherHundredDollarsAccount |
	
	emptyAccount := ReceptiveAccount new.
	hundredDollarsAccount := ReceptiveAccount new.
	anotherEmptyAccount := ReceptiveAccount new.
	anotherHundredDollarsAccount := ReceptiveAccount new.
	
	aDeposit := Deposit register: 100 on: hundredDollarsAccount.
	Deposit register: 100 on: anotherHundredDollarsAccount.
	
	emptyPortfolio := Portfolio new.
	hundredDollarsPortfolio := Portfolio new.
	hundredDollarsPortfolio addFinancialProduct: hundredDollarsAccount.
	zeroBalancePortfolio := Portfolio new.
	zeroBalancePortfolio addFinancialProduct: emptyAccount.
	twoAccountsPortfolio := Portfolio new.
	twoAccountsPortfolio addFinancialProduct: anotherEmptyAccount.	
	twoAccountsPortfolio addFinancialProduct: anotherHundredDollarsAccount.
	
	! !

!testRun: #PortfolioTest #test01BalanceOfEmptyPortfolioIsZero stamp: 'NNH 11/6/2020 16:20:43'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithOneAccountIsBalanceOfThatAccount stamp: 'NNH 11/6/2020 16:20:43'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioWithMoreThanOneAccountIsSumOfBalances stamp: 'NNH 11/6/2020 16:20:43'!
PASSED!

!testRun: #PortfolioTest #test04EmptyPortfolioHasRegisteredNoTransactions stamp: 'NNH 11/6/2020 16:20:43'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioWithOneAccountRegistersATransactionOfThatAccount stamp: 'NNH 11/6/2020 16:20:43'!
PASSED!

!testRun: #PortfolioTest #test06APortfolioWithMoreThanOneAccountRegistersATransactionThatIsNotFromTheFirstAccount stamp: 'NNH 11/6/2020 16:20:43'!
FAILURE!

!testRun: #PortfolioTest #test07EmptyPortfolioHasNoTransactions stamp: 'NNH 11/6/2020 16:20:43'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioWithOneAccountHasTheTransactionsOfThatAccount stamp: 'NNH 11/6/2020 16:20:43'!
PASSED!

!testRun: #PortfolioTest #test09APortfolioWithMoreThanOneAccountHasTheTransactionsOfItsAccounts stamp: 'NNH 11/6/2020 16:20:43'!
FAILURE!

!testRun: #PortfolioTest #test10PortfolioShouldNotAddItself stamp: 'NNH 11/6/2020 16:20:43'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioShouldNotAddParentPortfolio stamp: 'NNH 11/6/2020 16:20:43'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioShouldNotAddAccountIfTheyBothBelongToAnotherPortfolio stamp: 'NNH 11/6/2020 16:20:43'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioShouldNotAddAnotherPortfolioWhenTheyShareAnAccount stamp: 'NNH 11/6/2020 16:20:44'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioShouldNotContainAccountTwice stamp: 'NNH 11/6/2020 16:20:44'!
PASSED!

!testRun: #PortfolioTest #test15MoreThanOnePortfolioWithTheSameAccountsShouldNotRaise stamp: 'NNH 11/6/2020 16:20:44'!
PASSED!
!PortfolioTest methodsFor: 'setUp / tearDown' stamp: 'NNH 11/6/2020 16:21:43' prior: 50879389 overrides: 16927572!
setUp
	
	| anotherEmptyAccount anotherHundredDollarsAccount |
	
	emptyAccount := ReceptiveAccount new.
	hundredDollarsAccount := ReceptiveAccount new.
	anotherEmptyAccount := ReceptiveAccount new.
	anotherHundredDollarsAccount := ReceptiveAccount new.
	
	Deposit register: 100 on: hundredDollarsAccount.
	aDeposit := Deposit register: 100 on: anotherHundredDollarsAccount.
	
	emptyPortfolio := Portfolio new.
	hundredDollarsPortfolio := Portfolio new.
	hundredDollarsPortfolio addFinancialProduct: hundredDollarsAccount.
	zeroBalancePortfolio := Portfolio new.
	zeroBalancePortfolio addFinancialProduct: emptyAccount.
	twoAccountsPortfolio := Portfolio new.
	twoAccountsPortfolio addFinancialProduct: anotherEmptyAccount.	
	twoAccountsPortfolio addFinancialProduct: anotherHundredDollarsAccount.
	
	! !

!testRun: #PortfolioTest #test01BalanceOfEmptyPortfolioIsZero stamp: 'NNH 11/6/2020 16:21:56'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithOneAccountIsBalanceOfThatAccount stamp: 'NNH 11/6/2020 16:21:56'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioWithMoreThanOneAccountIsSumOfBalances stamp: 'NNH 11/6/2020 16:21:56'!
PASSED!

!testRun: #PortfolioTest #test04EmptyPortfolioHasRegisteredNoTransactions stamp: 'NNH 11/6/2020 16:21:56'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioWithOneAccountRegistersATransactionOfThatAccount stamp: 'NNH 11/6/2020 16:21:56'!
FAILURE!

!testRun: #PortfolioTest #test06APortfolioWithMoreThanOneAccountRegistersATransactionThatIsNotFromTheFirstAccount stamp: 'NNH 11/6/2020 16:21:56'!
PASSED!

!testRun: #PortfolioTest #test07EmptyPortfolioHasNoTransactions stamp: 'NNH 11/6/2020 16:21:56'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioWithOneAccountHasTheTransactionsOfThatAccount stamp: 'NNH 11/6/2020 16:21:56'!
FAILURE!

!testRun: #PortfolioTest #test09APortfolioWithMoreThanOneAccountHasTheTransactionsOfItsAccounts stamp: 'NNH 11/6/2020 16:21:56'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioShouldNotAddItself stamp: 'NNH 11/6/2020 16:21:56'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioShouldNotAddParentPortfolio stamp: 'NNH 11/6/2020 16:21:56'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioShouldNotAddAccountIfTheyBothBelongToAnotherPortfolio stamp: 'NNH 11/6/2020 16:21:56'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioShouldNotAddAnotherPortfolioWhenTheyShareAnAccount stamp: 'NNH 11/6/2020 16:21:56'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioShouldNotContainAccountTwice stamp: 'NNH 11/6/2020 16:21:56'!
PASSED!

!testRun: #PortfolioTest #test15MoreThanOnePortfolioWithTheSameAccountsShouldNotRaise stamp: 'NNH 11/6/2020 16:21:56'!
PASSED!

!classDefinition: #PortfolioTest category: 'Portfolio-Ejercicio' stamp: 'NNH 11/6/2020 16:23:08'!
TestCase subclass: #PortfolioTest
	instanceVariableNames: 'emptyPortfolio hundredDollarsAccount aDeposit hundredDollarsPortfolio emptyAccount zeroBalancePortfolio twoAccountsPortfolio anotherPortfolio'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!
!PortfolioTest methodsFor: 'setUp / tearDown' stamp: 'NNH 11/6/2020 16:23:02' prior: 50879476 overrides: 16927572!
setUp
		
	emptyAccount := ReceptiveAccount new.
	hundredDollarsAccount := ReceptiveAccount new.
	
	aDeposit := Deposit register: 100 on: hundredDollarsAccount.
	
	emptyPortfolio := Portfolio new.
	hundredDollarsPortfolio := Portfolio new.
	hundredDollarsPortfolio addFinancialProduct: hundredDollarsAccount.
	zeroBalancePortfolio := Portfolio new.
	zeroBalancePortfolio addFinancialProduct: emptyAccount.
	anotherPortfolio := Portfolio new.
	
	twoAccountsPortfolio := Portfolio new.
	twoAccountsPortfolio addFinancialProduct: emptyAccount.	
	twoAccountsPortfolio addFinancialProduct: hundredDollarsAccount.
	
	! !
!PortfolioTest methodsFor: 'setUp / tearDown' stamp: 'NNH 11/6/2020 16:23:24' prior: 50879575 overrides: 16927572!
setUp
		
	emptyAccount := ReceptiveAccount new.
	hundredDollarsAccount := ReceptiveAccount new.
	
	aDeposit := Deposit register: 100 on: hundredDollarsAccount.
	
	emptyPortfolio := Portfolio new.
	hundredDollarsPortfolio := Portfolio new.
	hundredDollarsPortfolio addFinancialProduct: hundredDollarsAccount.
	zeroBalancePortfolio := Portfolio new.
	zeroBalancePortfolio addFinancialProduct: emptyAccount.
	anotherPortfolio := Portfolio new.
	twoAccountsPortfolio := Portfolio new.
	twoAccountsPortfolio addFinancialProduct: emptyAccount.	
	twoAccountsPortfolio addFinancialProduct: hundredDollarsAccount.
	
	! !

!testRun: #PortfolioTest #test01BalanceOfEmptyPortfolioIsZero stamp: 'NNH 11/6/2020 16:23:29'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithOneAccountIsBalanceOfThatAccount stamp: 'NNH 11/6/2020 16:23:29'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioWithMoreThanOneAccountIsSumOfBalances stamp: 'NNH 11/6/2020 16:23:29'!
PASSED!

!testRun: #PortfolioTest #test04EmptyPortfolioHasRegisteredNoTransactions stamp: 'NNH 11/6/2020 16:23:29'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioWithOneAccountRegistersATransactionOfThatAccount stamp: 'NNH 11/6/2020 16:23:29'!
PASSED!

!testRun: #PortfolioTest #test06APortfolioWithMoreThanOneAccountRegistersATransactionThatIsNotFromTheFirstAccount stamp: 'NNH 11/6/2020 16:23:29'!
PASSED!

!testRun: #PortfolioTest #test07EmptyPortfolioHasNoTransactions stamp: 'NNH 11/6/2020 16:23:29'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioWithOneAccountHasTheTransactionsOfThatAccount stamp: 'NNH 11/6/2020 16:23:29'!
PASSED!

!testRun: #PortfolioTest #test09APortfolioWithMoreThanOneAccountHasTheTransactionsOfItsAccounts stamp: 'NNH 11/6/2020 16:23:29'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioShouldNotAddItself stamp: 'NNH 11/6/2020 16:23:29'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioShouldNotAddParentPortfolio stamp: 'NNH 11/6/2020 16:23:29'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioShouldNotAddAccountIfTheyBothBelongToAnotherPortfolio stamp: 'NNH 11/6/2020 16:23:29'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioShouldNotAddAnotherPortfolioWhenTheyShareAnAccount stamp: 'NNH 11/6/2020 16:23:29'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioShouldNotContainAccountTwice stamp: 'NNH 11/6/2020 16:23:29'!
ERROR!

!testRun: #PortfolioTest #test15MoreThanOnePortfolioWithTheSameAccountsShouldNotRaise stamp: 'NNH 11/6/2020 16:23:29'!
ERROR!
!PortfolioTest methodsFor: 'testing dependencies' stamp: 'NNH 11/6/2020 16:23:45' prior: 50879129!
test14PortfolioShouldNotContainAccountTwice

	emptyPortfolio addFinancialProduct: zeroBalancePortfolio .
	emptyPortfolio addFinancialProduct: hundredDollarsPortfolio .
	hundredDollarsPortfolio addFinancialProduct: anotherPortfolio .

	self should: [zeroBalancePortfolio addFinancialProduct: anotherPortfolio]
	raise: Error
	withMessageText: Portfolio canNotBelongToACommonPortfolioErrorDescription.! !

!testRun: #PortfolioTest #test14PortfolioShouldNotContainAccountTwice stamp: 'NNH 11/6/2020 16:23:48'!
PASSED!
!PortfolioTest methodsFor: 'testing dependencies' stamp: 'NNH 11/6/2020 16:23:57' prior: 50879167!
test15MoreThanOnePortfolioWithTheSameAccountsShouldNotRaise
	
	emptyPortfolio addFinancialProduct: hundredDollarsPortfolio .
	emptyPortfolio addFinancialProduct: anotherPortfolio .
	zeroBalancePortfolio addFinancialProduct: hundredDollarsPortfolio.

	self shouldnt: [zeroBalancePortfolio addFinancialProduct: anotherPortfolio] raise: Error.
! !

!testRun: #PortfolioTest #test15MoreThanOnePortfolioWithTheSameAccountsShouldNotRaise stamp: 'NNH 11/6/2020 16:24:08'!
PASSED!

!testRun: #PortfolioTest #test01BalanceOfEmptyPortfolioIsZero stamp: 'NNH 11/6/2020 16:24:12'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithOneAccountIsBalanceOfThatAccount stamp: 'NNH 11/6/2020 16:24:12'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioWithMoreThanOneAccountIsSumOfBalances stamp: 'NNH 11/6/2020 16:24:12'!
PASSED!

!testRun: #PortfolioTest #test04EmptyPortfolioHasRegisteredNoTransactions stamp: 'NNH 11/6/2020 16:24:12'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioWithOneAccountRegistersATransactionOfThatAccount stamp: 'NNH 11/6/2020 16:24:12'!
PASSED!

!testRun: #PortfolioTest #test06APortfolioWithMoreThanOneAccountRegistersATransactionThatIsNotFromTheFirstAccount stamp: 'NNH 11/6/2020 16:24:12'!
PASSED!

!testRun: #PortfolioTest #test07EmptyPortfolioHasNoTransactions stamp: 'NNH 11/6/2020 16:24:12'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioWithOneAccountHasTheTransactionsOfThatAccount stamp: 'NNH 11/6/2020 16:24:12'!
PASSED!

!testRun: #PortfolioTest #test09APortfolioWithMoreThanOneAccountHasTheTransactionsOfItsAccounts stamp: 'NNH 11/6/2020 16:24:12'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioShouldNotAddItself stamp: 'NNH 11/6/2020 16:24:12'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioShouldNotAddParentPortfolio stamp: 'NNH 11/6/2020 16:24:12'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioShouldNotAddAccountIfTheyBothBelongToAnotherPortfolio stamp: 'NNH 11/6/2020 16:24:12'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioShouldNotAddAnotherPortfolioWhenTheyShareAnAccount stamp: 'NNH 11/6/2020 16:24:12'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioShouldNotContainAccountTwice stamp: 'NNH 11/6/2020 16:24:12'!
PASSED!

!testRun: #PortfolioTest #test15MoreThanOnePortfolioWithTheSameAccountsShouldNotRaise stamp: 'NNH 11/6/2020 16:24:12'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'NNH 11/6/2020 16:24:16'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'NNH 11/6/2020 16:24:16'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'NNH 11/6/2020 16:24:16'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'NNH 11/6/2020 16:24:16'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'NNH 11/6/2020 16:24:16'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'NNH 11/6/2020 16:24:16'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'NNH 11/6/2020 16:24:16'!
PASSED!

----SNAPSHOT----(6 November 2020 16:24:26) CuisUniversity-4384.image priorSource: 17443460!

----QUIT----(6 November 2020 16:24:29) CuisUniversity-4384.image priorSource: 17540816!

----STARTUP---- (6 November 2020 19:13:26) as /home/nahuel/Documents/cuisuniversity/CuisUniversity-4384.image!


!testRun: #PortfolioTest #test01BalanceOfEmptyPortfolioIsZero stamp: 'NNH 11/6/2020 19:14:29'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithOneAccountIsBalanceOfThatAccount stamp: 'NNH 11/6/2020 19:14:29'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioWithMoreThanOneAccountIsSumOfBalances stamp: 'NNH 11/6/2020 19:14:29'!
PASSED!

!testRun: #PortfolioTest #test04EmptyPortfolioHasRegisteredNoTransactions stamp: 'NNH 11/6/2020 19:14:29'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioWithOneAccountRegistersATransactionOfThatAccount stamp: 'NNH 11/6/2020 19:14:29'!
PASSED!

!testRun: #PortfolioTest #test06APortfolioWithMoreThanOneAccountRegistersATransactionThatIsNotFromTheFirstAccount stamp: 'NNH 11/6/2020 19:14:29'!
PASSED!

!testRun: #PortfolioTest #test07EmptyPortfolioHasNoTransactions stamp: 'NNH 11/6/2020 19:14:29'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioWithOneAccountHasTheTransactionsOfThatAccount stamp: 'NNH 11/6/2020 19:14:29'!
PASSED!

!testRun: #PortfolioTest #test09APortfolioWithMoreThanOneAccountHasTheTransactionsOfItsAccounts stamp: 'NNH 11/6/2020 19:14:29'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioShouldNotAddItself stamp: 'NNH 11/6/2020 19:14:29'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioShouldNotAddParentPortfolio stamp: 'NNH 11/6/2020 19:14:29'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioShouldNotAddAccountIfTheyBothBelongToAnotherPortfolio stamp: 'NNH 11/6/2020 19:14:29'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioShouldNotAddAnotherPortfolioWhenTheyShareAnAccount stamp: 'NNH 11/6/2020 19:14:29'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioShouldNotContainAccountTwice stamp: 'NNH 11/6/2020 19:14:29'!
PASSED!

!testRun: #PortfolioTest #test15MoreThanOnePortfolioWithTheSameAccountsShouldNotRaise stamp: 'NNH 11/6/2020 19:14:29'!
PASSED!

!classDefinition: #FinancialProduct category: 'Portfolio-Ejercicio' stamp: 'NNH 11/6/2020 19:19:23'!
Object subclass: #FinancialProduct
	instanceVariableNames: 'owners'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!
!FinancialProduct methodsFor: 'as yet unclassified' stamp: 'NNH 11/6/2020 19:19:23' prior: 50876380!
addParent: aPortfolio 
	
	owners add: aPortfolio.! !
!FinancialProduct methodsFor: 'as yet unclassified' stamp: 'NNH 11/6/2020 19:19:23' prior: 50878284!
isInAProductWith: aFinancialProduct
	
	^ (owners anySatisfy: [:aParent | aParent isInAProductWith: aFinancialProduct ]) or: [
		self includesFinancialProduct: aFinancialProduct
		].
	
	
! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'NNH 11/6/2020 19:19:23' prior: 50877400 overrides: 16896425!
initialize
	
	financialProducts := OrderedCollection new.
	owners := OrderedCollection new.! !
!ReceptiveAccount methodsFor: 'as yet unclassified' stamp: 'NNH 11/6/2020 19:19:23' prior: 50873774 overrides: 16896425!
initialize

	transactions := OrderedCollection new.
	owners := OrderedCollection new.! !
!FinancialProduct methodsFor: 'inserting - private' stamp: 'NNH 11/6/2020 19:19:42'!
addOwner: aPortfolio 
	
	owners add: aPortfolio.! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'NNH 11/6/2020 19:19:42' prior: 50878145!
addFinancialProduct: aFinancialProduct 
	
	self assertFinancialProductCanBeAdded: aFinancialProduct.
	
	aFinancialProduct addOwner: self.	
	financialProducts add: aFinancialProduct.! !

!methodRemoval: FinancialProduct #addParent: stamp: 'NNH 11/6/2020 19:19:42'!
addParent: aPortfolio 
	
	owners add: aPortfolio.!

!testRun: #PortfolioTest #test01BalanceOfEmptyPortfolioIsZero stamp: 'NNH 11/6/2020 19:19:48'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithOneAccountIsBalanceOfThatAccount stamp: 'NNH 11/6/2020 19:19:48'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioWithMoreThanOneAccountIsSumOfBalances stamp: 'NNH 11/6/2020 19:19:48'!
PASSED!

!testRun: #PortfolioTest #test04EmptyPortfolioHasRegisteredNoTransactions stamp: 'NNH 11/6/2020 19:19:48'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioWithOneAccountRegistersATransactionOfThatAccount stamp: 'NNH 11/6/2020 19:19:48'!
PASSED!

!testRun: #PortfolioTest #test06APortfolioWithMoreThanOneAccountRegistersATransactionThatIsNotFromTheFirstAccount stamp: 'NNH 11/6/2020 19:19:48'!
PASSED!

!testRun: #PortfolioTest #test07EmptyPortfolioHasNoTransactions stamp: 'NNH 11/6/2020 19:19:48'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioWithOneAccountHasTheTransactionsOfThatAccount stamp: 'NNH 11/6/2020 19:19:48'!
PASSED!

!testRun: #PortfolioTest #test09APortfolioWithMoreThanOneAccountHasTheTransactionsOfItsAccounts stamp: 'NNH 11/6/2020 19:19:48'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioShouldNotAddItself stamp: 'NNH 11/6/2020 19:19:48'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioShouldNotAddParentPortfolio stamp: 'NNH 11/6/2020 19:19:48'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioShouldNotAddAccountIfTheyBothBelongToAnotherPortfolio stamp: 'NNH 11/6/2020 19:19:48'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioShouldNotAddAnotherPortfolioWhenTheyShareAnAccount stamp: 'NNH 11/6/2020 19:19:48'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioShouldNotContainAccountTwice stamp: 'NNH 11/6/2020 19:19:48'!
PASSED!

!testRun: #PortfolioTest #test15MoreThanOnePortfolioWithTheSameAccountsShouldNotRaise stamp: 'NNH 11/6/2020 19:19:48'!
PASSED!
!Portfolio methodsFor: 'inserting' stamp: 'NNH 11/6/2020 19:21:44'!
add: aFinancialProduct 
	
	self assertFinancialProductCanBeAdded: aFinancialProduct.
	
	aFinancialProduct addOwner: self.	
	financialProducts add: aFinancialProduct.! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'NNH 11/6/2020 19:21:44' prior: 50879679!
test14PortfolioShouldNotContainAccountTwice

	emptyPortfolio add: zeroBalancePortfolio .
	emptyPortfolio add: hundredDollarsPortfolio .
	hundredDollarsPortfolio add: anotherPortfolio .

	self should: [zeroBalancePortfolio add: anotherPortfolio]
	raise: Error
	withMessageText: Portfolio canNotBelongToACommonPortfolioErrorDescription.! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'NNH 11/6/2020 19:21:44' prior: 50878868!
test11PortfolioShouldNotAddParentPortfolio
	
	emptyPortfolio add: hundredDollarsPortfolio .

	self should: [hundredDollarsPortfolio add: emptyPortfolio] raise: Error.! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'NNH 11/6/2020 19:21:44' prior: 50878889!
test12PortfolioShouldNotAddAccountIfTheyBothBelongToAnotherPortfolio

	emptyPortfolio add: zeroBalancePortfolio.
	emptyPortfolio add: hundredDollarsPortfolio .

	self should: [zeroBalancePortfolio add: hundredDollarsPortfolio ]
	raise: Error
	withMessageText: Portfolio canNotBelongToACommonPortfolioErrorDescription.! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'NNH 11/6/2020 19:21:44' prior: 50879699!
test15MoreThanOnePortfolioWithTheSameAccountsShouldNotRaise
	
	emptyPortfolio add: hundredDollarsPortfolio .
	emptyPortfolio add: anotherPortfolio .
	zeroBalancePortfolio add: hundredDollarsPortfolio.

	self shouldnt: [zeroBalancePortfolio add: anotherPortfolio] raise: Error.
! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'NNH 11/6/2020 19:21:44' prior: 50878908!
test13PortfolioShouldNotAddAnotherPortfolioWhenTheyShareAnAccount
	
	emptyPortfolio add: hundredDollarsPortfolio.
	zeroBalancePortfolio add: hundredDollarsPortfolio.

	self should: [emptyPortfolio add: zeroBalancePortfolio]
	raise: Error
	withMessageText: Portfolio canNotHaveAnAccountInCommonErrorDescription.! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'NNH 11/6/2020 19:21:44' prior: 50878843!
test10PortfolioShouldNotAddItself

	self should: [emptyPortfolio add: emptyPortfolio] raise: Error.! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'NNH 11/6/2020 19:21:44' prior: 50879598 overrides: 16927572!
setUp
		
	emptyAccount := ReceptiveAccount new.
	hundredDollarsAccount := ReceptiveAccount new.
	
	aDeposit := Deposit register: 100 on: hundredDollarsAccount.
	
	emptyPortfolio := Portfolio new.
	hundredDollarsPortfolio := Portfolio new.
	hundredDollarsPortfolio add: hundredDollarsAccount.
	zeroBalancePortfolio := Portfolio new.
	zeroBalancePortfolio add: emptyAccount.
	anotherPortfolio := Portfolio new.
	twoAccountsPortfolio := Portfolio new.
	twoAccountsPortfolio add: emptyAccount.	
	twoAccountsPortfolio add: hundredDollarsAccount.
	
	! !

!methodRemoval: Portfolio #addFinancialProduct: stamp: 'NNH 11/6/2020 19:21:44'!
addFinancialProduct: aFinancialProduct 
	
	self assertFinancialProductCanBeAdded: aFinancialProduct.
	
	aFinancialProduct addOwner: self.	
	financialProducts add: aFinancialProduct.!

!testRun: #PortfolioTest #test01BalanceOfEmptyPortfolioIsZero stamp: 'NNH 11/6/2020 19:21:47'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithOneAccountIsBalanceOfThatAccount stamp: 'NNH 11/6/2020 19:21:47'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioWithMoreThanOneAccountIsSumOfBalances stamp: 'NNH 11/6/2020 19:21:47'!
PASSED!

!testRun: #PortfolioTest #test04EmptyPortfolioHasRegisteredNoTransactions stamp: 'NNH 11/6/2020 19:21:47'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioWithOneAccountRegistersATransactionOfThatAccount stamp: 'NNH 11/6/2020 19:21:47'!
PASSED!

!testRun: #PortfolioTest #test06APortfolioWithMoreThanOneAccountRegistersATransactionThatIsNotFromTheFirstAccount stamp: 'NNH 11/6/2020 19:21:47'!
PASSED!

!testRun: #PortfolioTest #test07EmptyPortfolioHasNoTransactions stamp: 'NNH 11/6/2020 19:21:47'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioWithOneAccountHasTheTransactionsOfThatAccount stamp: 'NNH 11/6/2020 19:21:47'!
PASSED!

!testRun: #PortfolioTest #test09APortfolioWithMoreThanOneAccountHasTheTransactionsOfItsAccounts stamp: 'NNH 11/6/2020 19:21:47'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioShouldNotAddItself stamp: 'NNH 11/6/2020 19:21:47'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioShouldNotAddParentPortfolio stamp: 'NNH 11/6/2020 19:21:47'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioShouldNotAddAccountIfTheyBothBelongToAnotherPortfolio stamp: 'NNH 11/6/2020 19:21:47'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioShouldNotAddAnotherPortfolioWhenTheyShareAnAccount stamp: 'NNH 11/6/2020 19:21:47'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioShouldNotContainAccountTwice stamp: 'NNH 11/6/2020 19:21:47'!
PASSED!

!testRun: #PortfolioTest #test15MoreThanOnePortfolioWithTheSameAccountsShouldNotRaise stamp: 'NNH 11/6/2020 19:21:47'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'NNH 11/6/2020 19:21:51'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'NNH 11/6/2020 19:21:51'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'NNH 11/6/2020 19:21:51'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'NNH 11/6/2020 19:21:51'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'NNH 11/6/2020 19:21:51'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'NNH 11/6/2020 19:21:51'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'NNH 11/6/2020 19:21:51'!
PASSED!
!FinancialProduct methodsFor: 'testing dependencies' stamp: 'NNH 11/6/2020 19:22:39'!
addFinancialProductsTo: aCollectionOfFinancialProducts
		
	self subclassResponsibility.! !
!ReceptiveAccount methodsFor: 'testing dependencies' stamp: 'NNH 11/6/2020 19:22:39' overrides: 50880172!
addFinancialProductsTo: aCollectionOfFinancialProducts
		
	aCollectionOfFinancialProducts add: self.! !
!Portfolio methodsFor: 'testing dependencies' stamp: 'NNH 11/6/2020 19:22:39' overrides: 50880172!
addFinancialProductsTo: aCollectionOfFinancialProducts
		
	aCollectionOfFinancialProducts add: self.
	financialProducts do: [:aFinancialProduct | aFinancialProduct addFinancialProductTo: aCollectionOfFinancialProducts].
	
	
	
! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'NNH 11/6/2020 19:22:39' prior: 50878166 overrides: 50878250!
addFinancialProductTo: aCollectionOfFinancialProducts
		
	aCollectionOfFinancialProducts add: self.
	financialProducts do: [:aFinancialProduct | aFinancialProduct addFinancialProductsTo: aCollectionOfFinancialProducts].
	
	
	
! !
!FinancialProduct methodsFor: 'as yet unclassified' stamp: 'NNH 11/6/2020 19:22:39' prior: 50878256!
financialProducts
	
	| accountsInPortfolio |
	
	accountsInPortfolio := OrderedCollection new.
	self addFinancialProductsTo: accountsInPortfolio.
	
	^ accountsInPortfolio.! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'NNH 11/6/2020 19:22:39' prior: 50880186 overrides: 50880172!
addFinancialProductsTo: aCollectionOfFinancialProducts
		
	aCollectionOfFinancialProducts add: self.
	financialProducts do: [:aFinancialProduct | aFinancialProduct addFinancialProductsTo: aCollectionOfFinancialProducts].
	
	
	
! !

!methodRemoval: FinancialProduct #addFinancialProductTo: stamp: 'NNH 11/6/2020 19:22:39'!
addFinancialProductTo: aCollectionOfFinancialProducts
		
	self subclassResponsibility.!

!methodRemoval: ReceptiveAccount #addFinancialProductTo: stamp: 'NNH 11/6/2020 19:22:39'!
addFinancialProductTo: aCollectionOfFinancialProducts
		
	aCollectionOfFinancialProducts add: self.!

!methodRemoval: Portfolio #addFinancialProductTo: stamp: 'NNH 11/6/2020 19:22:39'!
addFinancialProductTo: aCollectionOfFinancialProducts
		
	aCollectionOfFinancialProducts add: self.
	financialProducts do: [:aFinancialProduct | aFinancialProduct addFinancialProductsTo: aCollectionOfFinancialProducts].
	
	
	
!
!FinancialProduct methodsFor: 'testing dependencies' stamp: 'NNH 11/6/2020 19:24:33' prior: 50877468!
includesFinancialProduct: aFinancialProductToSearch
	
	self subclassResponsibility.! !

!methodRemoval: Portfolio class #new stamp: 'NNH 11/6/2020 19:24:53'!
new
	
	^ self basicNew initialize.!
!Portfolio class methodsFor: 'error descriptions' stamp: 'NNH 11/6/2020 19:25:18'!
canNotIncludeItselfErrorDescription
	^ 'A portfolio cannot include itself'.! !

!methodRemoval: Portfolio class #cannotIncludeItselfErrorDescription stamp: 'NNH 11/6/2020 19:25:18'!
cannotIncludeItselfErrorDescription
	^ 'A portfolio cannot include itself'.!
!Portfolio methodsFor: 'assertions' stamp: 'NNH 11/6/2020 19:25:56'!
signalCanNotIncludeItself

	^ self error: self class canNotIncludeItselfErrorDescription ! !
!Portfolio class methodsFor: 'error descriptions' stamp: 'NNH 11/6/2020 19:28:24'!
canNotAddAPortfolioThatIncludesThePortfolio
	^ 'The portfolio cannot include a portfolio that includes the portfolio'.! !
!Portfolio class methodsFor: 'error descriptions' stamp: 'NNH 11/6/2020 19:29:21'!
canNotAddAPortfolioThatIncludesThePortfolioErrorDescription
	^ 'The portfolio cannot include a portfolio that includes the portfolio'.! !

!methodRemoval: Portfolio class #canNotAddAPortfolioThatIncludesThePortfolio stamp: 'NNH 11/6/2020 19:29:21'!
canNotAddAPortfolioThatIncludesThePortfolio
	^ 'The portfolio cannot include a portfolio that includes the portfolio'.!
!Portfolio methodsFor: 'error signaling' stamp: 'NNH 11/6/2020 19:30:00'!
signalCanNotAddAPortfolioThatIncludesThePortfolio

	^ self error: self class canNotAddAPortfolioThatIncludesThePortfolioErrorDescription.! !
!Portfolio methodsFor: 'assertions' stamp: 'NNH 11/6/2020 19:32:16' prior: 50878185!
assertFinancialProductCanBeAdded: aFinancialProduct

	(self = aFinancialProduct) ifTrue: [self signalCanNotIncludeItself ].
	(aFinancialProduct includesFinancialProduct: self) ifTrue: [self signalCanNotAddAPortfolioThatIncludesThePortfolio ].
	(self isInAProductWith: aFinancialProduct) ifTrue: [self signalCanNotBelongToACommonPortfolio ].
	(self hasProductsInCommonWith: aFinancialProduct)	 ifTrue: [self signalCanNotHaveAnAccountInCommon ].! !

!testRun: #PortfolioTest #test01BalanceOfEmptyPortfolioIsZero stamp: 'NNH 11/6/2020 19:32:23'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithOneAccountIsBalanceOfThatAccount stamp: 'NNH 11/6/2020 19:32:23'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioWithMoreThanOneAccountIsSumOfBalances stamp: 'NNH 11/6/2020 19:32:23'!
PASSED!

!testRun: #PortfolioTest #test04EmptyPortfolioHasRegisteredNoTransactions stamp: 'NNH 11/6/2020 19:32:23'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioWithOneAccountRegistersATransactionOfThatAccount stamp: 'NNH 11/6/2020 19:32:23'!
PASSED!

!testRun: #PortfolioTest #test06APortfolioWithMoreThanOneAccountRegistersATransactionThatIsNotFromTheFirstAccount stamp: 'NNH 11/6/2020 19:32:23'!
PASSED!

!testRun: #PortfolioTest #test07EmptyPortfolioHasNoTransactions stamp: 'NNH 11/6/2020 19:32:23'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioWithOneAccountHasTheTransactionsOfThatAccount stamp: 'NNH 11/6/2020 19:32:23'!
PASSED!

!testRun: #PortfolioTest #test09APortfolioWithMoreThanOneAccountHasTheTransactionsOfItsAccounts stamp: 'NNH 11/6/2020 19:32:23'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioShouldNotAddItself stamp: 'NNH 11/6/2020 19:32:23'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioShouldNotAddParentPortfolio stamp: 'NNH 11/6/2020 19:32:23'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioShouldNotAddAccountIfTheyBothBelongToAnotherPortfolio stamp: 'NNH 11/6/2020 19:32:23'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioShouldNotAddAnotherPortfolioWhenTheyShareAnAccount stamp: 'NNH 11/6/2020 19:32:23'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioShouldNotContainAccountTwice stamp: 'NNH 11/6/2020 19:32:23'!
PASSED!

!testRun: #PortfolioTest #test15MoreThanOnePortfolioWithTheSameAccountsShouldNotRaise stamp: 'NNH 11/6/2020 19:32:23'!
PASSED!
!PortfolioTest methodsFor: 'testing dependencies' stamp: 'NNH 11/6/2020 19:32:54' prior: 50880052!
test10PortfolioShouldNotAddItself

	self should: [emptyPortfolio add: emptyPortfolio] 
	raise: Error
	withMessageText: Portfolio canNotIncludeItselfErrorDescription.! !

!testRun: #PortfolioTest #test10PortfolioShouldNotAddItself stamp: 'NNH 11/6/2020 19:32:56'!
PASSED!
!PortfolioTest methodsFor: 'testing dependencies' stamp: 'NNH 11/6/2020 19:33:27' prior: 50880004!
test11PortfolioShouldNotAddParentPortfolio
	
	emptyPortfolio add: hundredDollarsPortfolio .

	self should: [hundredDollarsPortfolio add: emptyPortfolio] 
	raise: Error
	withMessageText: Portfolio canNotAddAPortfolioThatIncludesThePortfolioErrorDescription.! !

!testRun: #PortfolioTest #test11PortfolioShouldNotAddParentPortfolio stamp: 'NNH 11/6/2020 19:33:29'!
PASSED!

!methodRemoval: PortfolioTest #test15MoreThanOnePortfolioWithTheSameAccountsShouldNotRaise stamp: 'NNH 11/6/2020 19:34:51'!
test15MoreThanOnePortfolioWithTheSameAccountsShouldNotRaise
	
	emptyPortfolio add: hundredDollarsPortfolio .
	emptyPortfolio add: anotherPortfolio .
	zeroBalancePortfolio add: hundredDollarsPortfolio.

	self shouldnt: [zeroBalancePortfolio add: anotherPortfolio] raise: Error.
!

!testRun: #PortfolioTest #test01BalanceOfEmptyPortfolioIsZero stamp: 'NNH 11/6/2020 19:34:54'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithOneAccountIsBalanceOfThatAccount stamp: 'NNH 11/6/2020 19:34:54'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioWithMoreThanOneAccountIsSumOfBalances stamp: 'NNH 11/6/2020 19:34:54'!
PASSED!

!testRun: #PortfolioTest #test04EmptyPortfolioHasRegisteredNoTransactions stamp: 'NNH 11/6/2020 19:34:54'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioWithOneAccountRegistersATransactionOfThatAccount stamp: 'NNH 11/6/2020 19:34:54'!
PASSED!

!testRun: #PortfolioTest #test06APortfolioWithMoreThanOneAccountRegistersATransactionThatIsNotFromTheFirstAccount stamp: 'NNH 11/6/2020 19:34:54'!
PASSED!

!testRun: #PortfolioTest #test07EmptyPortfolioHasNoTransactions stamp: 'NNH 11/6/2020 19:34:54'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioWithOneAccountHasTheTransactionsOfThatAccount stamp: 'NNH 11/6/2020 19:34:54'!
PASSED!

!testRun: #PortfolioTest #test09APortfolioWithMoreThanOneAccountHasTheTransactionsOfItsAccounts stamp: 'NNH 11/6/2020 19:34:54'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioShouldNotAddItself stamp: 'NNH 11/6/2020 19:34:54'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioShouldNotAddParentPortfolio stamp: 'NNH 11/6/2020 19:34:54'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioShouldNotAddAccountIfTheyBothBelongToAnotherPortfolio stamp: 'NNH 11/6/2020 19:34:54'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioShouldNotAddAnotherPortfolioWhenTheyShareAnAccount stamp: 'NNH 11/6/2020 19:34:54'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioShouldNotContainAccountTwice stamp: 'NNH 11/6/2020 19:34:54'!
PASSED!

!methodRemoval: PortfolioTest #test14PortfolioShouldNotContainAccountTwice stamp: 'NNH 11/6/2020 19:37:17'!
test14PortfolioShouldNotContainAccountTwice

	emptyPortfolio add: zeroBalancePortfolio .
	emptyPortfolio add: hundredDollarsPortfolio .
	hundredDollarsPortfolio add: anotherPortfolio .

	self should: [zeroBalancePortfolio add: anotherPortfolio]
	raise: Error
	withMessageText: Portfolio canNotBelongToACommonPortfolioErrorDescription.!
!FinancialProduct methodsFor: 'testing dependencies' stamp: 'NNH 11/6/2020 19:41:33'!
isInAPortfolioWith: aFinancialProduct
	
	^ (owners anySatisfy: [:aParent | aParent isInAProductWith: aFinancialProduct ]) or: [
		self includesFinancialProduct: aFinancialProduct
		].
	
	
! !
!FinancialProduct methodsFor: 'as yet unclassified' stamp: 'NNH 11/6/2020 19:41:33' prior: 50879882!
isInAProductWith: aFinancialProduct
	
	^ (owners anySatisfy: [:aParent | aParent isInAPortfolioWith: aFinancialProduct ]) or: [
		self includesFinancialProduct: aFinancialProduct
		].
	
	
! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'NNH 11/6/2020 19:41:33' prior: 50880304!
assertFinancialProductCanBeAdded: aFinancialProduct

	(self = aFinancialProduct) ifTrue: [self signalCanNotIncludeItself ].
	(aFinancialProduct includesFinancialProduct: self) ifTrue: [self signalCanNotAddAPortfolioThatIncludesThePortfolio ].
	(self isInAPortfolioWith: aFinancialProduct) ifTrue: [self signalCanNotBelongToACommonPortfolio ].
	(self hasProductsInCommonWith: aFinancialProduct)	 ifTrue: [self signalCanNotHaveAnAccountInCommon ].! !
!FinancialProduct methodsFor: 'as yet unclassified' stamp: 'NNH 11/6/2020 19:41:33' prior: 50880488!
isInAPortfolioWith: aFinancialProduct
	
	^ (owners anySatisfy: [:aParent | aParent isInAPortfolioWith: aFinancialProduct ]) or: [
		self includesFinancialProduct: aFinancialProduct
		].
	
	
! !

!methodRemoval: FinancialProduct #isInAProductWith: stamp: 'NNH 11/6/2020 19:41:33'!
isInAProductWith: aFinancialProduct
	
	^ (owners anySatisfy: [:aParent | aParent isInAPortfolioWith: aFinancialProduct ]) or: [
		self includesFinancialProduct: aFinancialProduct
		].
	
	
!
!FinancialProduct methodsFor: 'testing dependencies' stamp: 'NNH 11/6/2020 19:43:58'!
ownedFinancialProducts
	
	| accountsInPortfolio |
	
	accountsInPortfolio := OrderedCollection new.
	self addFinancialProductsTo: accountsInPortfolio.
	
	^ accountsInPortfolio.! !
!FinancialProduct methodsFor: 'as yet unclassified' stamp: 'NNH 11/6/2020 19:43:58' prior: 50878270!
hasProductsInCommonWith: aFinancialProduct

	^ (self ownedFinancialProducts intersection: aFinancialProduct ownedFinancialProducts) isEmpty not! !

!methodRemoval: FinancialProduct #financialProducts stamp: 'NNH 11/6/2020 19:43:58'!
financialProducts
	
	| accountsInPortfolio |
	
	accountsInPortfolio := OrderedCollection new.
	self addFinancialProductsTo: accountsInPortfolio.
	
	^ accountsInPortfolio.!
!FinancialProduct methodsFor: 'testing dependencies' stamp: 'NNH 11/6/2020 19:44:40' prior: 50880543!
ownedFinancialProducts
	
	| ownedFinancialProducts |
	
	ownedFinancialProducts := OrderedCollection new.
	self addFinancialProductsTo: ownedFinancialProducts.
	
	^ ownedFinancialProducts.! !
!FinancialProduct methodsFor: 'testing dependencies' stamp: 'NNH 11/6/2020 19:44:58' prior: 50880525!
isInAPortfolioWith: aFinancialProduct
	
	^ (owners anySatisfy: [:anOwner | anOwner isInAPortfolioWith: aFinancialProduct ]) or: [
		self includesFinancialProduct: aFinancialProduct
		].
	
	
! !
!FinancialProduct methodsFor: 'testing dependencies' stamp: 'NNH 11/6/2020 19:48:05'!
hasFinancialProductsInCommonWith: aFinancialProduct

	^ (self ownedFinancialProducts intersection: aFinancialProduct ownedFinancialProducts) isEmpty not! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'NNH 11/6/2020 19:48:05' prior: 50880507!
assertFinancialProductCanBeAdded: aFinancialProduct

	(self = aFinancialProduct) ifTrue: [self signalCanNotIncludeItself ].
	(aFinancialProduct includesFinancialProduct: self) ifTrue: [self signalCanNotAddAPortfolioThatIncludesThePortfolio ].
	(self isInAPortfolioWith: aFinancialProduct) ifTrue: [self signalCanNotBelongToACommonPortfolio ].
	(self hasFinancialProductsInCommonWith: aFinancialProduct)	 ifTrue: [self signalCanNotHaveAnAccountInCommon ].! !

!methodRemoval: FinancialProduct #hasProductsInCommonWith: stamp: 'NNH 11/6/2020 19:48:05'!
hasProductsInCommonWith: aFinancialProduct

	^ (self ownedFinancialProducts intersection: aFinancialProduct ownedFinancialProducts) isEmpty not!
!Portfolio methodsFor: 'balance' stamp: 'NNH 11/6/2020 19:49:04' prior: 50878197 overrides: 50878265!
balance

	^ financialProducts sum: [:aFinancialProduct | aFinancialProduct balance] ifEmpty: [0].! !
!Portfolio methodsFor: 'testing' stamp: 'NNH 11/6/2020 19:49:13' prior: 50878204 overrides: 50878278!
hasRegistered: aTransaction

	^ financialProducts anySatisfy: [:aFinancialProduct | aFinancialProduct hasRegistered: aTransaction].! !
!PortfolioTest methodsFor: 'testing register operations' stamp: 'NNH 11/6/2020 20:04:33' prior: 50878882!
test04EmptyPortfolioHasRegisteredNoTransactions

	self deny: (emptyPortfolio hasRegistered: aDeposit).
	
	! !
!PortfolioTest methodsFor: 'setUp / tearDown' stamp: 'NNH 11/6/2020 20:08:28'!
newPortfolioWith: aCollectionOfFinancialProducts
		
	| portfolio |
	portfolio := Portfolio new.
	
	aCollectionOfFinancialProducts do: [:aFinancialProduct | portfolio add: aFinancialProduct ].
	
	^ portfolio.
	! !
!PortfolioTest methodsFor: 'setUp / tearDown' stamp: 'NNH 11/6/2020 20:08:34' prior: 50880641!
newPortfolioWith: aCollectionOfFinancialProducts
		
	| portfolio |

	portfolio := Portfolio new.
	
	aCollectionOfFinancialProducts do: [:aFinancialProduct | portfolio add: aFinancialProduct ].
	
	^ portfolio.
	! !
!PortfolioTest methodsFor: 'setUp / tearDown' stamp: 'NNH 11/6/2020 20:09:53' prior: 50880059 overrides: 16927572!
setUp
		
	emptyAccount := ReceptiveAccount new.
	hundredDollarsAccount := ReceptiveAccount new.
	
	aDeposit := Deposit register: 100 on: hundredDollarsAccount.
	
	emptyPortfolio := Portfolio new.
	hundredDollarsPortfolio := self newPortfolioWith: {hundredDollarsAccount}.
	twoAccountsPortfolio := self newPortfolioWith: {emptyAccount. hundredDollarsAccount}.


	zeroBalancePortfolio := Portfolio new.
	zeroBalancePortfolio add: emptyAccount.
	anotherPortfolio := Portfolio new.
	
	twoAccountsPortfolio add: emptyAccount.	
	twoAccountsPortfolio add: hundredDollarsAccount.
	
	! !
!PortfolioTest methodsFor: 'setUp / tearDown' stamp: 'NNH 11/6/2020 20:11:15' prior: 50880662 overrides: 16927572!
setUp
		
	emptyAccount := ReceptiveAccount new.
	hundredDollarsAccount := ReceptiveAccount new.
	
	aDeposit := Deposit register: 100 on: hundredDollarsAccount.
	
	emptyPortfolio := Portfolio new.
	hundredDollarsPortfolio := self newPortfolioWith: {hundredDollarsAccount}.
	twoAccountsPortfolio := self newPortfolioWith: {emptyAccount. hundredDollarsAccount}.


	zeroBalancePortfolio := Portfolio new.
	zeroBalancePortfolio add: emptyAccount.
	anotherPortfolio := Portfolio new.
	
	! !

!testRun: #PortfolioTest #test01BalanceOfEmptyPortfolioIsZero stamp: 'NNH 11/6/2020 20:11:19'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithOneAccountIsBalanceOfThatAccount stamp: 'NNH 11/6/2020 20:11:19'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioWithMoreThanOneAccountIsSumOfBalances stamp: 'NNH 11/6/2020 20:11:19'!
PASSED!

!testRun: #PortfolioTest #test04EmptyPortfolioHasRegisteredNoTransactions stamp: 'NNH 11/6/2020 20:11:19'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioWithOneAccountRegistersATransactionOfThatAccount stamp: 'NNH 11/6/2020 20:11:19'!
PASSED!

!testRun: #PortfolioTest #test06APortfolioWithMoreThanOneAccountRegistersATransactionThatIsNotFromTheFirstAccount stamp: 'NNH 11/6/2020 20:11:19'!
PASSED!

!testRun: #PortfolioTest #test07EmptyPortfolioHasNoTransactions stamp: 'NNH 11/6/2020 20:11:19'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioWithOneAccountHasTheTransactionsOfThatAccount stamp: 'NNH 11/6/2020 20:11:19'!
PASSED!

!testRun: #PortfolioTest #test09APortfolioWithMoreThanOneAccountHasTheTransactionsOfItsAccounts stamp: 'NNH 11/6/2020 20:11:19'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioShouldNotAddItself stamp: 'NNH 11/6/2020 20:11:19'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioShouldNotAddParentPortfolio stamp: 'NNH 11/6/2020 20:11:19'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioShouldNotAddAccountIfTheyBothBelongToAnotherPortfolio stamp: 'NNH 11/6/2020 20:11:19'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioShouldNotAddAnotherPortfolioWhenTheyShareAnAccount stamp: 'NNH 11/6/2020 20:11:19'!
PASSED!
!PortfolioTest methodsFor: 'setUp / tearDown' stamp: 'NNH 11/6/2020 20:11:29' prior: 50880684 overrides: 16927572!
setUp
		
	emptyAccount := ReceptiveAccount new.
	hundredDollarsAccount := ReceptiveAccount new.
	
	aDeposit := Deposit register: 100 on: hundredDollarsAccount.
	
	emptyPortfolio := Portfolio new.
	hundredDollarsPortfolio := self newPortfolioWith: {hundredDollarsAccount}.
	twoAccountsPortfolio := self newPortfolioWith: {emptyAccount. hundredDollarsAccount}.

	
	! !

!testRun: #PortfolioTest #test01BalanceOfEmptyPortfolioIsZero stamp: 'NNH 11/6/2020 20:11:34'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithOneAccountIsBalanceOfThatAccount stamp: 'NNH 11/6/2020 20:11:34'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioWithMoreThanOneAccountIsSumOfBalances stamp: 'NNH 11/6/2020 20:11:34'!
PASSED!

!testRun: #PortfolioTest #test04EmptyPortfolioHasRegisteredNoTransactions stamp: 'NNH 11/6/2020 20:11:34'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioWithOneAccountRegistersATransactionOfThatAccount stamp: 'NNH 11/6/2020 20:11:34'!
PASSED!

!testRun: #PortfolioTest #test06APortfolioWithMoreThanOneAccountRegistersATransactionThatIsNotFromTheFirstAccount stamp: 'NNH 11/6/2020 20:11:34'!
PASSED!

!testRun: #PortfolioTest #test07EmptyPortfolioHasNoTransactions stamp: 'NNH 11/6/2020 20:11:34'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioWithOneAccountHasTheTransactionsOfThatAccount stamp: 'NNH 11/6/2020 20:11:34'!
PASSED!

!testRun: #PortfolioTest #test09APortfolioWithMoreThanOneAccountHasTheTransactionsOfItsAccounts stamp: 'NNH 11/6/2020 20:11:34'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioShouldNotAddItself stamp: 'NNH 11/6/2020 20:11:34'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioShouldNotAddParentPortfolio stamp: 'NNH 11/6/2020 20:11:34'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioShouldNotAddAccountIfTheyBothBelongToAnotherPortfolio stamp: 'NNH 11/6/2020 20:11:34'!
ERROR!

!testRun: #PortfolioTest #test13PortfolioShouldNotAddAnotherPortfolioWhenTheyShareAnAccount stamp: 'NNH 11/6/2020 20:11:34'!
ERROR!
!PortfolioTest methodsFor: 'testing dependencies' stamp: 'NNH 11/6/2020 20:12:18' prior: 50880013!
test12PortfolioShouldNotAddAccountIfTheyBothBelongToAnotherPortfolio


	| aPortfolio |
	aPortfolio := Portfolio new.
		
	emptyPortfolio add: aPortfolio.
	emptyPortfolio add: hundredDollarsPortfolio .

	self should: [aPortfolio add: hundredDollarsPortfolio ]
	raise: Error
	withMessageText: Portfolio canNotBelongToACommonPortfolioErrorDescription.! !
!PortfolioTest methodsFor: 'testing dependencies' stamp: 'NNH 11/6/2020 20:12:25' prior: 50880820!
test12PortfolioShouldNotAddAccountIfTheyBothBelongToAnotherPortfolio

	| aPortfolio |

	aPortfolio := Portfolio new.
		
	emptyPortfolio add: aPortfolio.
	emptyPortfolio add: hundredDollarsPortfolio .

	self should: [aPortfolio add: hundredDollarsPortfolio ]
	raise: Error
	withMessageText: Portfolio canNotBelongToACommonPortfolioErrorDescription.! !

!testRun: #PortfolioTest #test12PortfolioShouldNotAddAccountIfTheyBothBelongToAnotherPortfolio stamp: 'NNH 11/6/2020 20:12:28'!
PASSED!
!PortfolioTest methodsFor: 'testing dependencies' stamp: 'NNH 11/6/2020 20:13:02' prior: 50880039!
test13PortfolioShouldNotAddAnotherPortfolioWhenTheyShareAnAccount
	
	| aPortfolio |

	aPortfolio := Portfolio new.

	emptyPortfolio add: hundredDollarsPortfolio.
	aPortfolio add: hundredDollarsPortfolio.

	self should: [emptyPortfolio add: aPortfolio]
	raise: Error
	withMessageText: Portfolio canNotHaveAnAccountInCommonErrorDescription.! !

!testRun: #PortfolioTest #test13PortfolioShouldNotAddAnotherPortfolioWhenTheyShareAnAccount stamp: 'NNH 11/6/2020 20:13:05'!
PASSED!

!testRun: #PortfolioTest #test01BalanceOfEmptyPortfolioIsZero stamp: 'NNH 11/6/2020 20:13:08'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithOneAccountIsBalanceOfThatAccount stamp: 'NNH 11/6/2020 20:13:08'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioWithMoreThanOneAccountIsSumOfBalances stamp: 'NNH 11/6/2020 20:13:08'!
PASSED!

!testRun: #PortfolioTest #test04EmptyPortfolioHasRegisteredNoTransactions stamp: 'NNH 11/6/2020 20:13:08'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioWithOneAccountRegistersATransactionOfThatAccount stamp: 'NNH 11/6/2020 20:13:08'!
PASSED!

!testRun: #PortfolioTest #test06APortfolioWithMoreThanOneAccountRegistersATransactionThatIsNotFromTheFirstAccount stamp: 'NNH 11/6/2020 20:13:08'!
PASSED!

!testRun: #PortfolioTest #test07EmptyPortfolioHasNoTransactions stamp: 'NNH 11/6/2020 20:13:08'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioWithOneAccountHasTheTransactionsOfThatAccount stamp: 'NNH 11/6/2020 20:13:08'!
PASSED!

!testRun: #PortfolioTest #test09APortfolioWithMoreThanOneAccountHasTheTransactionsOfItsAccounts stamp: 'NNH 11/6/2020 20:13:08'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioShouldNotAddItself stamp: 'NNH 11/6/2020 20:13:08'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioShouldNotAddParentPortfolio stamp: 'NNH 11/6/2020 20:13:08'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioShouldNotAddAccountIfTheyBothBelongToAnotherPortfolio stamp: 'NNH 11/6/2020 20:13:08'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioShouldNotAddAnotherPortfolioWhenTheyShareAnAccount stamp: 'NNH 11/6/2020 20:13:08'!
PASSED!

!classDefinition: #PortfolioTest category: 'Portfolio-Ejercicio' stamp: 'NNH 11/6/2020 20:14:02'!
TestCase subclass: #PortfolioTest
	instanceVariableNames: 'emptyPortfolio anAccountWithHundredDollarsBalance aDeposit hundredDollarsPortfolio emptyAccount zeroBalancePortfolio twoAccountsPortfolio anotherPortfolio'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'NNH 11/6/2020 20:14:02' prior: 50880754 overrides: 16927572!
setUp
		
	emptyAccount := ReceptiveAccount new.
	anAccountWithHundredDollarsBalance := ReceptiveAccount new.
	
	aDeposit := Deposit register: 100 on: anAccountWithHundredDollarsBalance.
	
	emptyPortfolio := Portfolio new.
	hundredDollarsPortfolio := self newPortfolioWith: {anAccountWithHundredDollarsBalance}.
	twoAccountsPortfolio := self newPortfolioWith: {emptyAccount. anAccountWithHundredDollarsBalance}.

	
	! !

!classDefinition: #PortfolioTest category: 'Portfolio-Ejercicio' stamp: 'NNH 11/6/2020 20:14:41'!
TestCase subclass: #PortfolioTest
	instanceVariableNames: 'emptyPortfolio anAccountWithAHundredDollarsBalance aDeposit hundredDollarsPortfolio emptyAccount zeroBalancePortfolio twoAccountsPortfolio anotherPortfolio'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'NNH 11/6/2020 20:14:41' prior: 50880936 overrides: 16927572!
setUp
		
	emptyAccount := ReceptiveAccount new.
	anAccountWithAHundredDollarsBalance := ReceptiveAccount new.
	
	aDeposit := Deposit register: 100 on: anAccountWithAHundredDollarsBalance.
	
	emptyPortfolio := Portfolio new.
	hundredDollarsPortfolio := self newPortfolioWith: {anAccountWithAHundredDollarsBalance}.
	twoAccountsPortfolio := self newPortfolioWith: {emptyAccount. anAccountWithAHundredDollarsBalance}.

	
	! !

!classDefinition: #PortfolioTest category: 'Portfolio-Ejercicio' stamp: 'NNH 11/6/2020 20:14:54'!
TestCase subclass: #PortfolioTest
	instanceVariableNames: 'emptyPortfolio anAccountWithAHundredDollarsBalance aHundredDollarsDeposit hundredDollarsPortfolio emptyAccount zeroBalancePortfolio twoAccountsPortfolio anotherPortfolio'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'NNH 11/6/2020 20:14:54' prior: 50878761!
test08PortfolioWithOneAccountHasTheTransactionsOfThatAccount

	self assert: 1 equals: hundredDollarsPortfolio transactions size.
	self assert: hundredDollarsPortfolio transactions includes: aHundredDollarsDeposit.
	
	! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'NNH 11/6/2020 20:14:54' prior: 50880966 overrides: 16927572!
setUp
		
	emptyAccount := ReceptiveAccount new.
	anAccountWithAHundredDollarsBalance := ReceptiveAccount new.
	
	aHundredDollarsDeposit := Deposit register: 100 on: anAccountWithAHundredDollarsBalance.
	
	emptyPortfolio := Portfolio new.
	hundredDollarsPortfolio := self newPortfolioWith: {anAccountWithAHundredDollarsBalance}.
	twoAccountsPortfolio := self newPortfolioWith: {emptyAccount. anAccountWithAHundredDollarsBalance}.

	
	! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'NNH 11/6/2020 20:14:54' prior: 50878775!
test09APortfolioWithMoreThanOneAccountHasTheTransactionsOfItsAccounts

	self assert: 1 equals: twoAccountsPortfolio transactions size.
	self assert: twoAccountsPortfolio transactions includes: aHundredDollarsDeposit.
	
	! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'NNH 11/6/2020 20:14:54' prior: 50878741!
test06APortfolioWithMoreThanOneAccountRegistersATransactionThatIsNotFromTheFirstAccount

	self assert: (twoAccountsPortfolio hasRegistered: aHundredDollarsDeposit).
	
	! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'NNH 11/6/2020 20:14:54' prior: 50878729!
test05PortfolioWithOneAccountRegistersATransactionOfThatAccount

	self assert: (hundredDollarsPortfolio hasRegistered: aHundredDollarsDeposit ).
	
	! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'NNH 11/6/2020 20:14:54' prior: 50880635!
test04EmptyPortfolioHasRegisteredNoTransactions

	self deny: (emptyPortfolio hasRegistered: aHundredDollarsDeposit).
	
	! !

!classDefinition: #PortfolioTest category: 'Portfolio-Ejercicio' stamp: 'NNH 11/6/2020 20:15:30'!
TestCase subclass: #PortfolioTest
	instanceVariableNames: 'emptyPortfolio anAccountWithAHundredDollarsBalance aHundredDollarsDeposit aPortfolioWithAHundredDollarsAccount emptyAccount zeroBalancePortfolio twoAccountsPortfolio anotherPortfolio'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'NNH 11/6/2020 20:15:30' prior: 50880392!
test11PortfolioShouldNotAddParentPortfolio
	
	emptyPortfolio add: aPortfolioWithAHundredDollarsAccount .

	self should: [aPortfolioWithAHundredDollarsAccount add: emptyPortfolio] 
	raise: Error
	withMessageText: Portfolio canNotAddAPortfolioThatIncludesThePortfolioErrorDescription.! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'NNH 11/6/2020 20:15:30' prior: 50880854!
test13PortfolioShouldNotAddAnotherPortfolioWhenTheyShareAnAccount
	
	| aPortfolio |

	aPortfolio := Portfolio new.

	emptyPortfolio add: aPortfolioWithAHundredDollarsAccount.
	aPortfolio add: aPortfolioWithAHundredDollarsAccount.

	self should: [emptyPortfolio add: aPortfolio]
	raise: Error
	withMessageText: Portfolio canNotHaveAnAccountInCommonErrorDescription.! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'NNH 11/6/2020 20:15:30' prior: 50880835!
test12PortfolioShouldNotAddAccountIfTheyBothBelongToAnotherPortfolio

	| aPortfolio |

	aPortfolio := Portfolio new.
		
	emptyPortfolio add: aPortfolio.
	emptyPortfolio add: aPortfolioWithAHundredDollarsAccount .

	self should: [aPortfolio add: aPortfolioWithAHundredDollarsAccount ]
	raise: Error
	withMessageText: Portfolio canNotBelongToACommonPortfolioErrorDescription.! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'NNH 11/6/2020 20:15:30' prior: 50878658!
test02BalanceOfPortfolioWithOneAccountIsBalanceOfThatAccount
	
	self assert: 100 equals: aPortfolioWithAHundredDollarsAccount balance.
	
	! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'NNH 11/6/2020 20:15:30' prior: 50881007 overrides: 16927572!
setUp
		
	emptyAccount := ReceptiveAccount new.
	anAccountWithAHundredDollarsBalance := ReceptiveAccount new.
	
	aHundredDollarsDeposit := Deposit register: 100 on: anAccountWithAHundredDollarsBalance.
	
	emptyPortfolio := Portfolio new.
	aPortfolioWithAHundredDollarsAccount := self newPortfolioWith: {anAccountWithAHundredDollarsBalance}.
	twoAccountsPortfolio := self newPortfolioWith: {emptyAccount. anAccountWithAHundredDollarsBalance}.

	
	! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'NNH 11/6/2020 20:15:30' prior: 50881044!
test05PortfolioWithOneAccountRegistersATransactionOfThatAccount

	self assert: (aPortfolioWithAHundredDollarsAccount hasRegistered: aHundredDollarsDeposit ).
	
	! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'NNH 11/6/2020 20:15:30' prior: 50880996!
test08PortfolioWithOneAccountHasTheTransactionsOfThatAccount

	self assert: 1 equals: aPortfolioWithAHundredDollarsAccount transactions size.
	self assert: aPortfolioWithAHundredDollarsAccount transactions includes: aHundredDollarsDeposit.
	
	! !

!classDefinition: #PortfolioTest category: 'Portfolio-Ejercicio' stamp: 'NNH 11/6/2020 20:16:21'!
TestCase subclass: #PortfolioTest
	instanceVariableNames: 'emptyPortfolio anAccountWithAHundredDollarsBalance aHundredDollarsDeposit aPortfolioWithAHundredDollarsAccount emptyAccount zeroBalancePortfolio aPortfolioWithAZeroAndAHundredDollarsAccounts anotherPortfolio'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'NNH 11/6/2020 20:16:21' prior: 50878691!
test03BalanceOfPortfolioWithMoreThanOneAccountIsSumOfBalances

	self assert: 100 equals: aPortfolioWithAZeroAndAHundredDollarsAccounts balance.
	
	! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'NNH 11/6/2020 20:16:21' prior: 50881124 overrides: 16927572!
setUp
		
	emptyAccount := ReceptiveAccount new.
	anAccountWithAHundredDollarsBalance := ReceptiveAccount new.
	
	aHundredDollarsDeposit := Deposit register: 100 on: anAccountWithAHundredDollarsBalance.
	
	emptyPortfolio := Portfolio new.
	aPortfolioWithAHundredDollarsAccount := self newPortfolioWith: {anAccountWithAHundredDollarsBalance}.
	aPortfolioWithAZeroAndAHundredDollarsAccounts := self newPortfolioWith: {emptyAccount. anAccountWithAHundredDollarsBalance}.

	
	! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'NNH 11/6/2020 20:16:21' prior: 50881024!
test09APortfolioWithMoreThanOneAccountHasTheTransactionsOfItsAccounts

	self assert: 1 equals: aPortfolioWithAZeroAndAHundredDollarsAccounts transactions size.
	self assert: aPortfolioWithAZeroAndAHundredDollarsAccounts transactions includes: aHundredDollarsDeposit.
	
	! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'NNH 11/6/2020 20:16:21' prior: 50881035!
test06APortfolioWithMoreThanOneAccountRegistersATransactionThatIsNotFromTheFirstAccount

	self assert: (aPortfolioWithAZeroAndAHundredDollarsAccounts hasRegistered: aHundredDollarsDeposit).
	
	! !
!PortfolioTest methodsFor: 'testing balance' stamp: 'NNH 11/6/2020 20:17:26'!
test03BalanceOfPortfolioWithMoreThanOneFinancialProductIsSumOfBalances

	self assert: 100 equals: aPortfolioWithAZeroAndAHundredDollarsAccounts balance.
	
	! !

!methodRemoval: PortfolioTest #test03BalanceOfPortfolioWithMoreThanOneAccountIsSumOfBalances stamp: 'NNH 11/6/2020 20:17:26'!
test03BalanceOfPortfolioWithMoreThanOneAccountIsSumOfBalances

	self assert: 100 equals: aPortfolioWithAZeroAndAHundredDollarsAccounts balance.
	
	!
!PortfolioTest methodsFor: 'testing balance' stamp: 'NNH 11/6/2020 20:17:49'!
test02BalanceOfPortfolioWithOneFinancialProductIsBalanceOfThatAccount
	
	self assert: 100 equals: aPortfolioWithAHundredDollarsAccount balance.
	
	! !

!methodRemoval: PortfolioTest #test02BalanceOfPortfolioWithOneAccountIsBalanceOfThatAccount stamp: 'NNH 11/6/2020 20:17:49'!
test02BalanceOfPortfolioWithOneAccountIsBalanceOfThatAccount
	
	self assert: 100 equals: aPortfolioWithAHundredDollarsAccount balance.
	
	!
!PortfolioTest methodsFor: 'testing register operations' stamp: 'NNH 11/6/2020 20:18:36'!
test05PortfolioWithOneFinancialProductRegistersATransactionOfThatAccount

	self assert: (aPortfolioWithAHundredDollarsAccount hasRegistered: aHundredDollarsDeposit ).
	
	! !

!methodRemoval: PortfolioTest #test05PortfolioWithOneAccountRegistersATransactionOfThatAccount stamp: 'NNH 11/6/2020 20:18:36'!
test05PortfolioWithOneAccountRegistersATransactionOfThatAccount

	self assert: (aPortfolioWithAHundredDollarsAccount hasRegistered: aHundredDollarsDeposit ).
	
	!
!PortfolioTest methodsFor: 'testing register operations' stamp: 'NNH 11/6/2020 20:19:21'!
test06APortfolioWithMoreThanOneFinancialProductRegistersAllTransactions

	self assert: (aPortfolioWithAZeroAndAHundredDollarsAccounts hasRegistered: aHundredDollarsDeposit).
	
	! !

!methodRemoval: PortfolioTest #test06APortfolioWithMoreThanOneAccountRegistersATransactionThatIsNotFromTheFirstAccount stamp: 'NNH 11/6/2020 20:19:21'!
test06APortfolioWithMoreThanOneAccountRegistersATransactionThatIsNotFromTheFirstAccount

	self assert: (aPortfolioWithAZeroAndAHundredDollarsAccounts hasRegistered: aHundredDollarsDeposit).
	
	!

!classDefinition: #PortfolioTest category: 'Portfolio-Ejercicio' stamp: 'NNH 11/6/2020 20:20:19'!
TestCase subclass: #PortfolioTest
	instanceVariableNames: 'emptyPortfolio anAccountWithAHundredDollarsBalance aHundredDollarsDeposit aPortfolioWithAHundredDollarsAccount emptyAccount zeroBalancePortfolio aPortfolioWithAZeroAndAHundredDollarsAccounts anotherPortfolio anAccountWithAFiftyDollarsBalance'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!
!PortfolioTest methodsFor: 'setUp / tearDown' stamp: 'NNH 11/6/2020 20:20:17' prior: 50881185 overrides: 16927572!
setUp
		
	emptyAccount := ReceptiveAccount new.
	anAccountWithAHundredDollarsBalance := ReceptiveAccount new.
	anAccountWithAFiftyDollarsBalance := ReceptiveAccount new.

	
	aHundredDollarsDeposit := Deposit register: 100 on: anAccountWithAHundredDollarsBalance.
	
	emptyPortfolio := Portfolio new.
	aPortfolioWithAHundredDollarsAccount := self newPortfolioWith: {anAccountWithAHundredDollarsBalance}.
	aPortfolioWithAZeroAndAHundredDollarsAccounts := self newPortfolioWith: {emptyAccount. anAccountWithAHundredDollarsBalance}.

	
	! !
!PortfolioTest methodsFor: 'setUp / tearDown' stamp: 'NNH 11/6/2020 20:20:46' prior: 50881311 overrides: 16927572!
setUp
		
	emptyAccount := ReceptiveAccount new.
	anAccountWithAHundredDollarsBalance := ReceptiveAccount new.
	anAccountWithAFiftyDollarsBalance := ReceptiveAccount new.
	
	aHundredDollarsDeposit := Deposit register: 100 on: anAccountWithAHundredDollarsBalance.
	Deposit register: 50 on: anAccountWithAFiftyDollarsBalance.
	
	emptyPortfolio := Portfolio new.
	aPortfolioWithAHundredDollarsAccount := self newPortfolioWith: {anAccountWithAHundredDollarsBalance}.
	aPortfolioWithAZeroAndAHundredDollarsAccounts := self newPortfolioWith: {anAccountWithAFiftyDollarsBalance. anAccountWithAHundredDollarsBalance}.

	
	! !

!testRun: #PortfolioTest #test01BalanceOfEmptyPortfolioIsZero stamp: 'NNH 11/6/2020 20:20:50'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithOneFinancialProductIsBalanceOfThatAccount stamp: 'NNH 11/6/2020 20:20:50'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioWithMoreThanOneFinancialProductIsSumOfBalances stamp: 'NNH 11/6/2020 20:20:50'!
FAILURE!

!testRun: #PortfolioTest #test04EmptyPortfolioHasRegisteredNoTransactions stamp: 'NNH 11/6/2020 20:20:50'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioWithOneFinancialProductRegistersATransactionOfThatAccount stamp: 'NNH 11/6/2020 20:20:50'!
PASSED!

!testRun: #PortfolioTest #test06APortfolioWithMoreThanOneFinancialProductRegistersAllTransactions stamp: 'NNH 11/6/2020 20:20:50'!
PASSED!

!testRun: #PortfolioTest #test07EmptyPortfolioHasNoTransactions stamp: 'NNH 11/6/2020 20:20:50'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioWithOneAccountHasTheTransactionsOfThatAccount stamp: 'NNH 11/6/2020 20:20:50'!
PASSED!

!testRun: #PortfolioTest #test09APortfolioWithMoreThanOneAccountHasTheTransactionsOfItsAccounts stamp: 'NNH 11/6/2020 20:20:50'!
FAILURE!

!testRun: #PortfolioTest #test10PortfolioShouldNotAddItself stamp: 'NNH 11/6/2020 20:20:50'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioShouldNotAddParentPortfolio stamp: 'NNH 11/6/2020 20:20:50'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioShouldNotAddAccountIfTheyBothBelongToAnotherPortfolio stamp: 'NNH 11/6/2020 20:20:50'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioShouldNotAddAnotherPortfolioWhenTheyShareAnAccount stamp: 'NNH 11/6/2020 20:20:50'!
PASSED!
!PortfolioTest methodsFor: 'testing balance' stamp: 'NNH 11/6/2020 20:20:59' prior: 50881224!
test03BalanceOfPortfolioWithMoreThanOneFinancialProductIsSumOfBalances

	self assert: 150 equals: aPortfolioWithAZeroAndAHundredDollarsAccounts balance.
	
	! !

!classDefinition: #PortfolioTest category: 'Portfolio-Ejercicio' stamp: 'NNH 11/6/2020 20:21:32'!
TestCase subclass: #PortfolioTest
	instanceVariableNames: 'emptyPortfolio anAccountWithAHundredDollarsBalance aHundredDollarsDeposit aPortfolioWithAHundredDollarsAccount emptyAccount zeroBalancePortfolio aPortfolioWithAZeroAndAHundredDollarsAccounts anotherPortfolio anAccountWithAFiftyDollarsBalance aFiftyDollarsDeposit'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!
!PortfolioTest methodsFor: 'setUp / tearDown' stamp: 'NNH 11/6/2020 20:21:30' prior: 50881332 overrides: 16927572!
setUp
		
	emptyAccount := ReceptiveAccount new.
	anAccountWithAHundredDollarsBalance := ReceptiveAccount new.
	anAccountWithAFiftyDollarsBalance := ReceptiveAccount new.
	
	aHundredDollarsDeposit := Deposit register: 100 on: anAccountWithAHundredDollarsBalance.
	aFiftyDollarsDeposit := Deposit register: 50 on: anAccountWithAFiftyDollarsBalance.
	
	emptyPortfolio := Portfolio new.
	aPortfolioWithAHundredDollarsAccount := self newPortfolioWith: {anAccountWithAHundredDollarsBalance}.
	aPortfolioWithAZeroAndAHundredDollarsAccounts := self newPortfolioWith: {anAccountWithAFiftyDollarsBalance. anAccountWithAHundredDollarsBalance}.

	
	! !
!PortfolioTest methodsFor: 'testing transactions' stamp: 'NNH 11/6/2020 20:21:55' prior: 50881203!
test09APortfolioWithMoreThanOneAccountHasTheTransactionsOfItsAccounts

	self assert: 2 equals: aPortfolioWithAZeroAndAHundredDollarsAccounts transactions size.
	self assert: aPortfolioWithAZeroAndAHundredDollarsAccounts transactions includes: aFiftyDollarsDeposit .
	self assert: aPortfolioWithAZeroAndAHundredDollarsAccounts transactions includes: aHundredDollarsDeposit.

	
	! !

!testRun: #PortfolioTest #test01BalanceOfEmptyPortfolioIsZero stamp: 'NNH 11/6/2020 20:21:58'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithOneFinancialProductIsBalanceOfThatAccount stamp: 'NNH 11/6/2020 20:21:58'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioWithMoreThanOneFinancialProductIsSumOfBalances stamp: 'NNH 11/6/2020 20:21:58'!
PASSED!

!testRun: #PortfolioTest #test04EmptyPortfolioHasRegisteredNoTransactions stamp: 'NNH 11/6/2020 20:21:58'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioWithOneFinancialProductRegistersATransactionOfThatAccount stamp: 'NNH 11/6/2020 20:21:58'!
PASSED!

!testRun: #PortfolioTest #test06APortfolioWithMoreThanOneFinancialProductRegistersAllTransactions stamp: 'NNH 11/6/2020 20:21:58'!
PASSED!

!testRun: #PortfolioTest #test07EmptyPortfolioHasNoTransactions stamp: 'NNH 11/6/2020 20:21:58'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioWithOneAccountHasTheTransactionsOfThatAccount stamp: 'NNH 11/6/2020 20:21:58'!
PASSED!

!testRun: #PortfolioTest #test09APortfolioWithMoreThanOneAccountHasTheTransactionsOfItsAccounts stamp: 'NNH 11/6/2020 20:21:58'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioShouldNotAddItself stamp: 'NNH 11/6/2020 20:21:58'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioShouldNotAddParentPortfolio stamp: 'NNH 11/6/2020 20:21:58'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioShouldNotAddAccountIfTheyBothBelongToAnotherPortfolio stamp: 'NNH 11/6/2020 20:21:58'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioShouldNotAddAnotherPortfolioWhenTheyShareAnAccount stamp: 'NNH 11/6/2020 20:21:58'!
PASSED!

!classDefinition: #PortfolioTest category: 'Portfolio-Ejercicio' stamp: 'NNH 11/6/2020 20:22:25'!
TestCase subclass: #PortfolioTest
	instanceVariableNames: 'emptyPortfolio anAccountWithAHundredDollarsBalance aHundredDollarsDeposit aPortfolioWithAHundredDollarsAccount emptyAccount zeroBalancePortfolio aPortfolioWithAFiftyAndAHundredDollarsAccounts anotherPortfolio anAccountWithAFiftyDollarsBalance aFiftyDollarsDeposit'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'NNH 11/6/2020 20:22:25' prior: 50881275!
test06APortfolioWithMoreThanOneFinancialProductRegistersAllTransactions

	self assert: (aPortfolioWithAFiftyAndAHundredDollarsAccounts hasRegistered: aHundredDollarsDeposit).
	
	! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'NNH 11/6/2020 20:22:25' prior: 50881431 overrides: 16927572!
setUp
		
	emptyAccount := ReceptiveAccount new.
	anAccountWithAHundredDollarsBalance := ReceptiveAccount new.
	anAccountWithAFiftyDollarsBalance := ReceptiveAccount new.
	
	aHundredDollarsDeposit := Deposit register: 100 on: anAccountWithAHundredDollarsBalance.
	aFiftyDollarsDeposit := Deposit register: 50 on: anAccountWithAFiftyDollarsBalance.
	
	emptyPortfolio := Portfolio new.
	aPortfolioWithAHundredDollarsAccount := self newPortfolioWith: {anAccountWithAHundredDollarsBalance}.
	aPortfolioWithAFiftyAndAHundredDollarsAccounts := self newPortfolioWith: {anAccountWithAFiftyDollarsBalance. anAccountWithAHundredDollarsBalance}.

	
	! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'NNH 11/6/2020 20:22:25' prior: 50881455!
test09APortfolioWithMoreThanOneAccountHasTheTransactionsOfItsAccounts

	self assert: 2 equals: aPortfolioWithAFiftyAndAHundredDollarsAccounts transactions size.
	self assert: aPortfolioWithAFiftyAndAHundredDollarsAccounts transactions includes: aFiftyDollarsDeposit .
	self assert: aPortfolioWithAFiftyAndAHundredDollarsAccounts transactions includes: aHundredDollarsDeposit.

	
	! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'NNH 11/6/2020 20:22:25' prior: 50881406!
test03BalanceOfPortfolioWithMoreThanOneFinancialProductIsSumOfBalances

	self assert: 150 equals: aPortfolioWithAFiftyAndAHundredDollarsAccounts balance.
	
	! !
!PortfolioTest methodsFor: 'testing register operations' stamp: 'NNH 11/6/2020 20:22:47' prior: 50881537!
test06APortfolioWithMoreThanOneFinancialProductRegistersAllTransactions

	self assert: (aPortfolioWithAFiftyAndAHundredDollarsAccounts hasRegistered: aFiftyDollarsDeposit).
	self assert: (aPortfolioWithAFiftyAndAHundredDollarsAccounts hasRegistered: aHundredDollarsDeposit).

	
	! !

!testRun: #PortfolioTest #test01BalanceOfEmptyPortfolioIsZero stamp: 'NNH 11/6/2020 20:22:50'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithOneFinancialProductIsBalanceOfThatAccount stamp: 'NNH 11/6/2020 20:22:50'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioWithMoreThanOneFinancialProductIsSumOfBalances stamp: 'NNH 11/6/2020 20:22:50'!
PASSED!

!testRun: #PortfolioTest #test04EmptyPortfolioHasRegisteredNoTransactions stamp: 'NNH 11/6/2020 20:22:50'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioWithOneFinancialProductRegistersATransactionOfThatAccount stamp: 'NNH 11/6/2020 20:22:50'!
PASSED!

!testRun: #PortfolioTest #test06APortfolioWithMoreThanOneFinancialProductRegistersAllTransactions stamp: 'NNH 11/6/2020 20:22:50'!
PASSED!

!testRun: #PortfolioTest #test07EmptyPortfolioHasNoTransactions stamp: 'NNH 11/6/2020 20:22:50'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioWithOneAccountHasTheTransactionsOfThatAccount stamp: 'NNH 11/6/2020 20:22:50'!
PASSED!

!testRun: #PortfolioTest #test09APortfolioWithMoreThanOneAccountHasTheTransactionsOfItsAccounts stamp: 'NNH 11/6/2020 20:22:50'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioShouldNotAddItself stamp: 'NNH 11/6/2020 20:22:50'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioShouldNotAddParentPortfolio stamp: 'NNH 11/6/2020 20:22:50'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioShouldNotAddAccountIfTheyBothBelongToAnotherPortfolio stamp: 'NNH 11/6/2020 20:22:50'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioShouldNotAddAnotherPortfolioWhenTheyShareAnAccount stamp: 'NNH 11/6/2020 20:22:50'!
PASSED!
!PortfolioTest methodsFor: 'testing transactions' stamp: 'NNH 11/6/2020 20:23:16'!
test08PortfolioWithOneFinancialProductHasTheTransactionsOfThatAccount

	self assert: 1 equals: aPortfolioWithAHundredDollarsAccount transactions size.
	self assert: aPortfolioWithAHundredDollarsAccount transactions includes: aHundredDollarsDeposit.
	
	! !

!methodRemoval: PortfolioTest #test08PortfolioWithOneAccountHasTheTransactionsOfThatAccount stamp: 'NNH 11/6/2020 20:23:16'!
test08PortfolioWithOneAccountHasTheTransactionsOfThatAccount

	self assert: 1 equals: aPortfolioWithAHundredDollarsAccount transactions size.
	self assert: aPortfolioWithAHundredDollarsAccount transactions includes: aHundredDollarsDeposit.
	
	!
!PortfolioTest methodsFor: 'testing transactions' stamp: 'NNH 11/6/2020 20:23:28'!
test09APortfolioWithMoreThanOneFinancialProductHasTheTransactionsOfItsAccounts

	self assert: 2 equals: aPortfolioWithAFiftyAndAHundredDollarsAccounts transactions size.
	self assert: aPortfolioWithAFiftyAndAHundredDollarsAccounts transactions includes: aFiftyDollarsDeposit .
	self assert: aPortfolioWithAFiftyAndAHundredDollarsAccounts transactions includes: aHundredDollarsDeposit.

	
	! !

!methodRemoval: PortfolioTest #test09APortfolioWithMoreThanOneAccountHasTheTransactionsOfItsAccounts stamp: 'NNH 11/6/2020 20:23:28'!
test09APortfolioWithMoreThanOneAccountHasTheTransactionsOfItsAccounts

	self assert: 2 equals: aPortfolioWithAFiftyAndAHundredDollarsAccounts transactions size.
	self assert: aPortfolioWithAFiftyAndAHundredDollarsAccounts transactions includes: aFiftyDollarsDeposit .
	self assert: aPortfolioWithAFiftyAndAHundredDollarsAccounts transactions includes: aHundredDollarsDeposit.

	
	!
!PortfolioTest methodsFor: 'testing dependencies' stamp: 'NNH 11/6/2020 20:24:19'!
test11PortfolioShouldNotAddOwnerPortfolio
	
	emptyPortfolio add: aPortfolioWithAHundredDollarsAccount .

	self should: [aPortfolioWithAHundredDollarsAccount add: emptyPortfolio] 
	raise: Error
	withMessageText: Portfolio canNotAddAPortfolioThatIncludesThePortfolioErrorDescription.! !

!methodRemoval: PortfolioTest #test11PortfolioShouldNotAddParentPortfolio stamp: 'NNH 11/6/2020 20:24:19'!
test11PortfolioShouldNotAddParentPortfolio
	
	emptyPortfolio add: aPortfolioWithAHundredDollarsAccount .

	self should: [aPortfolioWithAHundredDollarsAccount add: emptyPortfolio] 
	raise: Error
	withMessageText: Portfolio canNotAddAPortfolioThatIncludesThePortfolioErrorDescription.!
!PortfolioTest methodsFor: 'testing dependencies' stamp: 'NNH 11/6/2020 20:24:27'!
test11PortfolioShouldNotAddAnOwnerPortfolio
	
	emptyPortfolio add: aPortfolioWithAHundredDollarsAccount .

	self should: [aPortfolioWithAHundredDollarsAccount add: emptyPortfolio] 
	raise: Error
	withMessageText: Portfolio canNotAddAPortfolioThatIncludesThePortfolioErrorDescription.! !

!methodRemoval: PortfolioTest #test11PortfolioShouldNotAddOwnerPortfolio stamp: 'NNH 11/6/2020 20:24:27'!
test11PortfolioShouldNotAddOwnerPortfolio
	
	emptyPortfolio add: aPortfolioWithAHundredDollarsAccount .

	self should: [aPortfolioWithAHundredDollarsAccount add: emptyPortfolio] 
	raise: Error
	withMessageText: Portfolio canNotAddAPortfolioThatIncludesThePortfolioErrorDescription.!
!PortfolioTest methodsFor: 'testing dependencies' stamp: 'NNH 11/6/2020 20:24:46'!
test12PortfolioShouldNotAddFinancialProductIfTheyBothBelongToAnotherPortfolio

	| aPortfolio |

	aPortfolio := Portfolio new.
		
	emptyPortfolio add: aPortfolio.
	emptyPortfolio add: aPortfolioWithAHundredDollarsAccount .

	self should: [aPortfolio add: aPortfolioWithAHundredDollarsAccount ]
	raise: Error
	withMessageText: Portfolio canNotBelongToACommonPortfolioErrorDescription.! !

!methodRemoval: PortfolioTest #test12PortfolioShouldNotAddAccountIfTheyBothBelongToAnotherPortfolio stamp: 'NNH 11/6/2020 20:24:46'!
test12PortfolioShouldNotAddAccountIfTheyBothBelongToAnotherPortfolio

	| aPortfolio |

	aPortfolio := Portfolio new.
		
	emptyPortfolio add: aPortfolio.
	emptyPortfolio add: aPortfolioWithAHundredDollarsAccount .

	self should: [aPortfolio add: aPortfolioWithAHundredDollarsAccount ]
	raise: Error
	withMessageText: Portfolio canNotBelongToACommonPortfolioErrorDescription.!
!PortfolioTest methodsFor: 'testing dependencies' stamp: 'NNH 11/6/2020 20:25:27'!
test13PortfolioShouldNotAddAnotherPortfolioWhenTheyBothOwnAFinancialProduct
	
	| aPortfolio |

	aPortfolio := Portfolio new.

	emptyPortfolio add: aPortfolioWithAHundredDollarsAccount.
	aPortfolio add: aPortfolioWithAHundredDollarsAccount.

	self should: [emptyPortfolio add: aPortfolio]
	raise: Error
	withMessageText: Portfolio canNotHaveAnAccountInCommonErrorDescription.! !

!methodRemoval: PortfolioTest #test13PortfolioShouldNotAddAnotherPortfolioWhenTheyShareAnAccount stamp: 'NNH 11/6/2020 20:25:27'!
test13PortfolioShouldNotAddAnotherPortfolioWhenTheyShareAnAccount
	
	| aPortfolio |

	aPortfolio := Portfolio new.

	emptyPortfolio add: aPortfolioWithAHundredDollarsAccount.
	aPortfolio add: aPortfolioWithAHundredDollarsAccount.

	self should: [emptyPortfolio add: aPortfolio]
	raise: Error
	withMessageText: Portfolio canNotHaveAnAccountInCommonErrorDescription.!
!Portfolio class methodsFor: 'error descriptions' stamp: 'NNH 11/6/2020 20:27:33'!
canNotAddAPortfolioWhenTheyOwnACommonFinancialProductErrorDescription
	^ 'Portfolios should not share an account'! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'NNH 11/6/2020 20:27:33' prior: 50878127!
signalCanNotHaveAnAccountInCommon

	^ self error: self class canNotAddAPortfolioWhenTheyOwnACommonFinancialProductErrorDescription! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'NNH 11/6/2020 20:27:33' prior: 50881793!
test13PortfolioShouldNotAddAnotherPortfolioWhenTheyBothOwnAFinancialProduct
	
	| aPortfolio |

	aPortfolio := Portfolio new.

	emptyPortfolio add: aPortfolioWithAHundredDollarsAccount.
	aPortfolio add: aPortfolioWithAHundredDollarsAccount.

	self should: [emptyPortfolio add: aPortfolio]
	raise: Error
	withMessageText: Portfolio canNotAddAPortfolioWhenTheyOwnACommonFinancialProductErrorDescription.! !

!methodRemoval: Portfolio class #canNotHaveAnAccountInCommonErrorDescription stamp: 'NNH 11/6/2020 20:27:33'!
canNotHaveAnAccountInCommonErrorDescription
	^ 'Portfolios should not share an account'!
!Portfolio class methodsFor: 'error descriptions' stamp: 'NNH 11/6/2020 20:28:32'!
canNotAddAPortfolioWhenTheyAreOwnedByACommonPortfolioErrorDescription
	^ 'There is a portfolio containing both portfolios'! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'NNH 11/6/2020 20:28:32' prior: 50881762!
test12PortfolioShouldNotAddFinancialProductIfTheyBothBelongToAnotherPortfolio

	| aPortfolio |

	aPortfolio := Portfolio new.
		
	emptyPortfolio add: aPortfolio.
	emptyPortfolio add: aPortfolioWithAHundredDollarsAccount .

	self should: [aPortfolio add: aPortfolioWithAHundredDollarsAccount ]
	raise: Error
	withMessageText: Portfolio canNotAddAPortfolioWhenTheyAreOwnedByACommonPortfolioErrorDescription.! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'NNH 11/6/2020 20:28:32' prior: 50878108!
signalCanNotBelongToACommonPortfolio

	^ self error: self class canNotAddAPortfolioWhenTheyAreOwnedByACommonPortfolioErrorDescription! !

!methodRemoval: Portfolio class #canNotBelongToACommonPortfolioErrorDescription stamp: 'NNH 11/6/2020 20:28:32'!
canNotBelongToACommonPortfolioErrorDescription
	^ 'There is a portfolio containing both portfolios'!
!Portfolio class methodsFor: 'error descriptions' stamp: 'NNH 11/6/2020 20:29:07'!
canNotAddAPortfolioToItselfErrorDescription
	^ 'A portfolio cannot include itself'.! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'NNH 11/6/2020 20:29:07' prior: 50880380!
test10PortfolioShouldNotAddItself

	self should: [emptyPortfolio add: emptyPortfolio] 
	raise: Error
	withMessageText: Portfolio canNotAddAPortfolioToItselfErrorDescription.! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'NNH 11/6/2020 20:29:07' prior: 50880269!
signalCanNotIncludeItself

	^ self error: self class canNotAddAPortfolioToItselfErrorDescription ! !

!methodRemoval: Portfolio class #canNotIncludeItselfErrorDescription stamp: 'NNH 11/6/2020 20:29:07'!
canNotIncludeItselfErrorDescription
	^ 'A portfolio cannot include itself'.!
!Portfolio methodsFor: 'error signaling' stamp: 'NNH 11/6/2020 20:30:59'!
signalCanNotAddAPortfolioWhenTheyAreOwnedByACommonPortfolio

	^ self error: self class canNotAddAPortfolioWhenTheyAreOwnedByACommonPortfolioErrorDescription! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'NNH 11/6/2020 20:30:59' prior: 50880595!
assertFinancialProductCanBeAdded: aFinancialProduct

	(self = aFinancialProduct) ifTrue: [self signalCanNotIncludeItself ].
	(aFinancialProduct includesFinancialProduct: self) ifTrue: [self signalCanNotAddAPortfolioThatIncludesThePortfolio ].
	(self isInAPortfolioWith: aFinancialProduct) ifTrue: [self signalCanNotAddAPortfolioWhenTheyAreOwnedByACommonPortfolio ].
	(self hasFinancialProductsInCommonWith: aFinancialProduct)	 ifTrue: [self signalCanNotHaveAnAccountInCommon ].! !

!methodRemoval: Portfolio #signalCanNotBelongToACommonPortfolio stamp: 'NNH 11/6/2020 20:30:59'!
signalCanNotBelongToACommonPortfolio

	^ self error: self class canNotAddAPortfolioWhenTheyAreOwnedByACommonPortfolioErrorDescription!
!Portfolio methodsFor: 'error signaling' stamp: 'NNH 11/6/2020 20:31:25'!
signalCanNotAddAPortfolioWhenTheyOwnACommonFinancialProduct

	^ self error: self class canNotAddAPortfolioWhenTheyOwnACommonFinancialProductErrorDescription! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'NNH 11/6/2020 20:31:25' prior: 50881932!
assertFinancialProductCanBeAdded: aFinancialProduct

	(self = aFinancialProduct) ifTrue: [self signalCanNotIncludeItself ].
	(aFinancialProduct includesFinancialProduct: self) ifTrue: [self signalCanNotAddAPortfolioThatIncludesThePortfolio ].
	(self isInAPortfolioWith: aFinancialProduct) ifTrue: [self signalCanNotAddAPortfolioWhenTheyAreOwnedByACommonPortfolio ].
	(self hasFinancialProductsInCommonWith: aFinancialProduct)	 ifTrue: [self signalCanNotAddAPortfolioWhenTheyOwnACommonFinancialProduct ].! !

!methodRemoval: Portfolio #signalCanNotHaveAnAccountInCommon stamp: 'NNH 11/6/2020 20:31:25'!
signalCanNotHaveAnAccountInCommon

	^ self error: self class canNotAddAPortfolioWhenTheyOwnACommonFinancialProductErrorDescription!
!Portfolio methodsFor: 'error signaling' stamp: 'NNH 11/6/2020 20:31:46'!
signalCanNotAddAPortfolioToItself

	^ self error: self class canNotAddAPortfolioToItselfErrorDescription ! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'NNH 11/6/2020 20:31:46' prior: 50881965!
assertFinancialProductCanBeAdded: aFinancialProduct

	(self = aFinancialProduct) ifTrue: [self signalCanNotAddAPortfolioToItself ].
	(aFinancialProduct includesFinancialProduct: self) ifTrue: [self signalCanNotAddAPortfolioThatIncludesThePortfolio ].
	(self isInAPortfolioWith: aFinancialProduct) ifTrue: [self signalCanNotAddAPortfolioWhenTheyAreOwnedByACommonPortfolio ].
	(self hasFinancialProductsInCommonWith: aFinancialProduct)	 ifTrue: [self signalCanNotAddAPortfolioWhenTheyOwnACommonFinancialProduct ].! !

!methodRemoval: Portfolio #signalCanNotIncludeItself stamp: 'NNH 11/6/2020 20:31:46'!
signalCanNotIncludeItself

	^ self error: self class canNotAddAPortfolioToItselfErrorDescription !

!testRun: #PortfolioTest #test01BalanceOfEmptyPortfolioIsZero stamp: 'NNH 11/6/2020 20:31:50'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithOneFinancialProductIsBalanceOfThatAccount stamp: 'NNH 11/6/2020 20:31:50'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioWithMoreThanOneFinancialProductIsSumOfBalances stamp: 'NNH 11/6/2020 20:31:50'!
PASSED!

!testRun: #PortfolioTest #test04EmptyPortfolioHasRegisteredNoTransactions stamp: 'NNH 11/6/2020 20:31:50'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioWithOneFinancialProductRegistersATransactionOfThatAccount stamp: 'NNH 11/6/2020 20:31:50'!
PASSED!

!testRun: #PortfolioTest #test06APortfolioWithMoreThanOneFinancialProductRegistersAllTransactions stamp: 'NNH 11/6/2020 20:31:50'!
PASSED!

!testRun: #PortfolioTest #test07EmptyPortfolioHasNoTransactions stamp: 'NNH 11/6/2020 20:31:50'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioWithOneFinancialProductHasTheTransactionsOfThatAccount stamp: 'NNH 11/6/2020 20:31:50'!
PASSED!

!testRun: #PortfolioTest #test09APortfolioWithMoreThanOneFinancialProductHasTheTransactionsOfItsAccounts stamp: 'NNH 11/6/2020 20:31:50'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioShouldNotAddItself stamp: 'NNH 11/6/2020 20:31:50'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioShouldNotAddAnOwnerPortfolio stamp: 'NNH 11/6/2020 20:31:50'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioShouldNotAddFinancialProductIfTheyBothBelongToAnotherPortfolio stamp: 'NNH 11/6/2020 20:31:50'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioShouldNotAddAnotherPortfolioWhenTheyBothOwnAFinancialProduct stamp: 'NNH 11/6/2020 20:31:50'!
PASSED!

TestCase subclass: #PortfolioTest
	instanceVariableNames: 'emptyPortfolio anAccountWithAHundredDollarsBalance aHundredDollarsDeposit aPortfolioWithAHundredDollarsAccount emptyAccount aPortfolioWithAFiftyAndAHundredDollarsAccounts anAccountWithAFiftyDollarsBalance aFiftyDollarsDeposit'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classDefinition: #PortfolioTest category: 'Portfolio-Ejercicio' stamp: 'NNH 11/6/2020 20:32:32'!
TestCase subclass: #PortfolioTest
	instanceVariableNames: 'emptyPortfolio anAccountWithAHundredDollarsBalance aHundredDollarsDeposit aPortfolioWithAHundredDollarsAccount emptyAccount aPortfolioWithAFiftyAndAHundredDollarsAccounts anAccountWithAFiftyDollarsBalance aFiftyDollarsDeposit'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!testRun: #PortfolioTest #test01BalanceOfEmptyPortfolioIsZero stamp: 'NNH 11/6/2020 20:32:36'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithOneFinancialProductIsBalanceOfThatAccount stamp: 'NNH 11/6/2020 20:32:36'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioWithMoreThanOneFinancialProductIsSumOfBalances stamp: 'NNH 11/6/2020 20:32:36'!
PASSED!

!testRun: #PortfolioTest #test04EmptyPortfolioHasRegisteredNoTransactions stamp: 'NNH 11/6/2020 20:32:36'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioWithOneFinancialProductRegistersATransactionOfThatAccount stamp: 'NNH 11/6/2020 20:32:36'!
PASSED!

!testRun: #PortfolioTest #test06APortfolioWithMoreThanOneFinancialProductRegistersAllTransactions stamp: 'NNH 11/6/2020 20:32:36'!
PASSED!

!testRun: #PortfolioTest #test07EmptyPortfolioHasNoTransactions stamp: 'NNH 11/6/2020 20:32:36'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioWithOneFinancialProductHasTheTransactionsOfThatAccount stamp: 'NNH 11/6/2020 20:32:36'!
PASSED!

!testRun: #PortfolioTest #test09APortfolioWithMoreThanOneFinancialProductHasTheTransactionsOfItsAccounts stamp: 'NNH 11/6/2020 20:32:36'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioShouldNotAddItself stamp: 'NNH 11/6/2020 20:32:36'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioShouldNotAddAnOwnerPortfolio stamp: 'NNH 11/6/2020 20:32:36'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioShouldNotAddFinancialProductIfTheyBothBelongToAnotherPortfolio stamp: 'NNH 11/6/2020 20:32:36'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioShouldNotAddAnotherPortfolioWhenTheyBothOwnAFinancialProduct stamp: 'NNH 11/6/2020 20:32:36'!
PASSED!
!PortfolioTest methodsFor: 'testing dependencies' stamp: 'NNH 11/6/2020 20:36:51'!
test14APortfolioShouldNotHaveTheSameFInancialProductMoreThanOnce
	
	| p1 p2 p3 p4 |
	
	p1 := Portfolio new.
	p2 := Portfolio new.
	p3 := Portfolio new.
	p4 := Portfolio new.

	p1 add: p2.
	p1 add: p3.
	p3 add: p4.

	self should: [p2 add: p4]
	raise: Error
	withMessageText: Portfolio canNotBelongToACommonPortfolioErrorDescription! !
!PortfolioTest methodsFor: 'testing dependencies' stamp: 'NNH 11/6/2020 20:37:59' prior: 50882154!
test14APortfolioShouldNotHaveTheSameFInancialProductMoreThanOnce
		
	| aPortfolio anotherPortfolio |
	aPortfolio := Portfolio new.
	anotherPortfolio := Portfolio new.

	emptyPortfolio add: aPortfolioWithAHundredDollarsAccount .
	emptyPortfolio add: aPortfolio.
	aPortfolio add: anotherPortfolio.

	self should: [aPortfolioWithAHundredDollarsAccount add: anotherPortfolio]
	raise: Error
	withMessageText: Portfolio canNotBelongToACommonPortfolioErrorDescription! !
!PortfolioTest methodsFor: 'testing dependencies' stamp: 'NNH 11/6/2020 20:38:05' prior: 50882168!
test14APortfolioShouldNotHaveTheSameFInancialProductMoreThanOnce
		
	| aPortfolio anotherPortfolio |
	
	aPortfolio := Portfolio new.
	anotherPortfolio := Portfolio new.

	emptyPortfolio add: aPortfolioWithAHundredDollarsAccount .
	emptyPortfolio add: aPortfolio.
	aPortfolio add: anotherPortfolio.

	self should: [aPortfolioWithAHundredDollarsAccount add: anotherPortfolio]
	raise: Error
	withMessageText: Portfolio canNotBelongToACommonPortfolioErrorDescription! !

!testRun: #PortfolioTest #test01BalanceOfEmptyPortfolioIsZero stamp: 'NNH 11/6/2020 20:38:07'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithOneFinancialProductIsBalanceOfThatAccount stamp: 'NNH 11/6/2020 20:38:07'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioWithMoreThanOneFinancialProductIsSumOfBalances stamp: 'NNH 11/6/2020 20:38:07'!
PASSED!

!testRun: #PortfolioTest #test04EmptyPortfolioHasRegisteredNoTransactions stamp: 'NNH 11/6/2020 20:38:07'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioWithOneFinancialProductRegistersATransactionOfThatAccount stamp: 'NNH 11/6/2020 20:38:07'!
PASSED!

!testRun: #PortfolioTest #test06APortfolioWithMoreThanOneFinancialProductRegistersAllTransactions stamp: 'NNH 11/6/2020 20:38:07'!
PASSED!

!testRun: #PortfolioTest #test07EmptyPortfolioHasNoTransactions stamp: 'NNH 11/6/2020 20:38:07'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioWithOneFinancialProductHasTheTransactionsOfThatAccount stamp: 'NNH 11/6/2020 20:38:07'!
PASSED!

!testRun: #PortfolioTest #test09APortfolioWithMoreThanOneFinancialProductHasTheTransactionsOfItsAccounts stamp: 'NNH 11/6/2020 20:38:07'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioShouldNotAddItself stamp: 'NNH 11/6/2020 20:38:08'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioShouldNotAddAnOwnerPortfolio stamp: 'NNH 11/6/2020 20:38:08'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioShouldNotAddFinancialProductIfTheyBothBelongToAnotherPortfolio stamp: 'NNH 11/6/2020 20:38:08'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioShouldNotAddAnotherPortfolioWhenTheyBothOwnAFinancialProduct stamp: 'NNH 11/6/2020 20:38:08'!
PASSED!

!testRun: #PortfolioTest #test14APortfolioShouldNotHaveTheSameFInancialProductMoreThanOnce stamp: 'NNH 11/6/2020 20:38:08'!
ERROR!

!testRun: #PortfolioTest #test14APortfolioShouldNotHaveTheSameFInancialProductMoreThanOnce stamp: 'NNH 11/6/2020 20:38:08'!
ERROR!
!PortfolioTest methodsFor: 'testing dependencies' stamp: 'NNH 11/6/2020 20:38:21' prior: 50882186!
test14APortfolioShouldNotHaveTheSameFInancialProductMoreThanOnce
		
	| aPortfolio anotherPortfolio |
	
	aPortfolio := Portfolio new.
	anotherPortfolio := Portfolio new.

	emptyPortfolio add: aPortfolioWithAHundredDollarsAccount .
	emptyPortfolio add: aPortfolio.
	aPortfolio add: anotherPortfolio.

	self should: [aPortfolioWithAHundredDollarsAccount add: anotherPortfolio]
	raise: Error
	withMessageText: Portfolio canNotAddAPortfolioWhenTheyAreOwnedByACommonPortfolioErrorDescription.! !

!testRun: #PortfolioTest #test01BalanceOfEmptyPortfolioIsZero stamp: 'NNH 11/6/2020 20:38:25'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithOneFinancialProductIsBalanceOfThatAccount stamp: 'NNH 11/6/2020 20:38:25'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioWithMoreThanOneFinancialProductIsSumOfBalances stamp: 'NNH 11/6/2020 20:38:25'!
PASSED!

!testRun: #PortfolioTest #test04EmptyPortfolioHasRegisteredNoTransactions stamp: 'NNH 11/6/2020 20:38:25'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioWithOneFinancialProductRegistersATransactionOfThatAccount stamp: 'NNH 11/6/2020 20:38:25'!
PASSED!

!testRun: #PortfolioTest #test06APortfolioWithMoreThanOneFinancialProductRegistersAllTransactions stamp: 'NNH 11/6/2020 20:38:25'!
PASSED!

!testRun: #PortfolioTest #test07EmptyPortfolioHasNoTransactions stamp: 'NNH 11/6/2020 20:38:25'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioWithOneFinancialProductHasTheTransactionsOfThatAccount stamp: 'NNH 11/6/2020 20:38:25'!
PASSED!

!testRun: #PortfolioTest #test09APortfolioWithMoreThanOneFinancialProductHasTheTransactionsOfItsAccounts stamp: 'NNH 11/6/2020 20:38:25'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioShouldNotAddItself stamp: 'NNH 11/6/2020 20:38:25'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioShouldNotAddAnOwnerPortfolio stamp: 'NNH 11/6/2020 20:38:25'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioShouldNotAddFinancialProductIfTheyBothBelongToAnotherPortfolio stamp: 'NNH 11/6/2020 20:38:25'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioShouldNotAddAnotherPortfolioWhenTheyBothOwnAFinancialProduct stamp: 'NNH 11/6/2020 20:38:25'!
PASSED!

!testRun: #PortfolioTest #test14APortfolioShouldNotHaveTheSameFInancialProductMoreThanOnce stamp: 'NNH 11/6/2020 20:38:25'!
PASSED!
!PortfolioTest methodsFor: 'testing dependencies' stamp: 'NNH 11/6/2020 20:40:39'!
test15APortfolioShouldNotHaveTheSameFInancialProductMoreThanOnce
		
	| aPortfolio anotherPortfolio |
	
	aPortfolio := Portfolio new.
	anotherPortfolio := Portfolio new.

	emptyPortfolio add: aPortfolioWithAHundredDollarsAccount.
	aPortfolioWithAHundredDollarsAccount add: anotherPortfolio.
	aPortfolio add: anotherPortfolio.

	self should: [emptyPortfolio add: aPortfolio]
	raise: Error
	withMessageText: Portfolio canNotAddAPortfolioWhenTheyAreOwnedByACommonPortfolioErrorDescription ! !
!PortfolioTest methodsFor: 'testing dependencies' stamp: 'NNH 11/6/2020 20:41:00' prior: 50882340!
test15APortfolioShouldNotHaveTheSameFInancialProductMoreThanOnce
		
	| aPortfolio anotherPortfolio |
	
	aPortfolio := Portfolio new.
	anotherPortfolio := Portfolio new.

	emptyPortfolio add: aPortfolioWithAHundredDollarsAccount.
	aPortfolioWithAHundredDollarsAccount add: anotherPortfolio.
	aPortfolio add: anotherPortfolio.

	self should: [emptyPortfolio add: aPortfolio]
	raise: Error
	withMessageText: Portfolio canNotAddAPortfolioWhenTheyOwnACommonFinancialProductErrorDescription.! !

!testRun: #PortfolioTest #test15APortfolioShouldNotHaveTheSameFInancialProductMoreThanOnce stamp: 'NNH 11/6/2020 20:41:02'!
PASSED!

!testRun: #PortfolioTest #test01BalanceOfEmptyPortfolioIsZero stamp: 'NNH 11/6/2020 20:41:06'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithOneFinancialProductIsBalanceOfThatAccount stamp: 'NNH 11/6/2020 20:41:06'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioWithMoreThanOneFinancialProductIsSumOfBalances stamp: 'NNH 11/6/2020 20:41:06'!
PASSED!

!testRun: #PortfolioTest #test04EmptyPortfolioHasRegisteredNoTransactions stamp: 'NNH 11/6/2020 20:41:06'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioWithOneFinancialProductRegistersATransactionOfThatAccount stamp: 'NNH 11/6/2020 20:41:06'!
PASSED!

!testRun: #PortfolioTest #test06APortfolioWithMoreThanOneFinancialProductRegistersAllTransactions stamp: 'NNH 11/6/2020 20:41:06'!
PASSED!

!testRun: #PortfolioTest #test07EmptyPortfolioHasNoTransactions stamp: 'NNH 11/6/2020 20:41:06'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioWithOneFinancialProductHasTheTransactionsOfThatAccount stamp: 'NNH 11/6/2020 20:41:06'!
PASSED!

!testRun: #PortfolioTest #test09APortfolioWithMoreThanOneFinancialProductHasTheTransactionsOfItsAccounts stamp: 'NNH 11/6/2020 20:41:06'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioShouldNotAddItself stamp: 'NNH 11/6/2020 20:41:06'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioShouldNotAddAnOwnerPortfolio stamp: 'NNH 11/6/2020 20:41:06'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioShouldNotAddFinancialProductIfTheyBothBelongToAnotherPortfolio stamp: 'NNH 11/6/2020 20:41:06'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioShouldNotAddAnotherPortfolioWhenTheyBothOwnAFinancialProduct stamp: 'NNH 11/6/2020 20:41:06'!
PASSED!

!testRun: #PortfolioTest #test14APortfolioShouldNotHaveTheSameFInancialProductMoreThanOnce stamp: 'NNH 11/6/2020 20:41:06'!
PASSED!

!testRun: #PortfolioTest #test15APortfolioShouldNotHaveTheSameFInancialProductMoreThanOnce stamp: 'NNH 11/6/2020 20:41:06'!
PASSED!
!PortfolioTest methodsFor: 'testing dependencies' stamp: 'NNH 11/6/2020 20:44:34'!
test15APortfolioShouldNotAddAPortfolioWhenTheyBothOwnTheSameFinancialProductIndirectly
		
	| aPortfolio anotherPortfolio |
	
	aPortfolio := Portfolio new.
	anotherPortfolio := Portfolio new.

	emptyPortfolio add: aPortfolioWithAHundredDollarsAccount.
	aPortfolioWithAHundredDollarsAccount add: anotherPortfolio.
	aPortfolio add: anotherPortfolio.

	self should: [emptyPortfolio add: aPortfolio]
	raise: Error
	withMessageText: Portfolio canNotAddAPortfolioWhenTheyOwnACommonFinancialProductErrorDescription.! !

!methodRemoval: PortfolioTest #test15APortfolioShouldNotHaveTheSameFInancialProductMoreThanOnce stamp: 'NNH 11/6/2020 20:44:34'!
test15APortfolioShouldNotHaveTheSameFInancialProductMoreThanOnce
		
	| aPortfolio anotherPortfolio |
	
	aPortfolio := Portfolio new.
	anotherPortfolio := Portfolio new.

	emptyPortfolio add: aPortfolioWithAHundredDollarsAccount.
	aPortfolioWithAHundredDollarsAccount add: anotherPortfolio.
	aPortfolio add: anotherPortfolio.

	self should: [emptyPortfolio add: aPortfolio]
	raise: Error
	withMessageText: Portfolio canNotAddAPortfolioWhenTheyOwnACommonFinancialProductErrorDescription.!
!PortfolioTest methodsFor: 'testing dependencies' stamp: 'NNH 11/6/2020 20:44:42'!
test14APortfolioShouldNotHaveTheSameFinancialProductMoreThanOnce
		
	| aPortfolio anotherPortfolio |
	
	aPortfolio := Portfolio new.
	anotherPortfolio := Portfolio new.

	emptyPortfolio add: aPortfolioWithAHundredDollarsAccount .
	emptyPortfolio add: aPortfolio.
	aPortfolio add: anotherPortfolio.

	self should: [aPortfolioWithAHundredDollarsAccount add: anotherPortfolio]
	raise: Error
	withMessageText: Portfolio canNotAddAPortfolioWhenTheyAreOwnedByACommonPortfolioErrorDescription.! !

!methodRemoval: PortfolioTest #test14APortfolioShouldNotHaveTheSameFInancialProductMoreThanOnce stamp: 'NNH 11/6/2020 20:44:42'!
test14APortfolioShouldNotHaveTheSameFInancialProductMoreThanOnce
		
	| aPortfolio anotherPortfolio |
	
	aPortfolio := Portfolio new.
	anotherPortfolio := Portfolio new.

	emptyPortfolio add: aPortfolioWithAHundredDollarsAccount .
	emptyPortfolio add: aPortfolio.
	aPortfolio add: anotherPortfolio.

	self should: [aPortfolioWithAHundredDollarsAccount add: anotherPortfolio]
	raise: Error
	withMessageText: Portfolio canNotAddAPortfolioWhenTheyAreOwnedByACommonPortfolioErrorDescription.!
!PortfolioTest methodsFor: 'testing dependencies' stamp: 'NNH 11/6/2020 20:45:54'!
test14APortfolioShouldNotAddAnotherPortfolioWhenTheyAreOwnedIndirectlyByAnotherPortfolio
		
	| aPortfolio anotherPortfolio |
	
	aPortfolio := Portfolio new.
	anotherPortfolio := Portfolio new.

	emptyPortfolio add: aPortfolioWithAHundredDollarsAccount .
	emptyPortfolio add: aPortfolio.
	aPortfolio add: anotherPortfolio.

	self should: [aPortfolioWithAHundredDollarsAccount add: anotherPortfolio]
	raise: Error
	withMessageText: Portfolio canNotAddAPortfolioWhenTheyAreOwnedByACommonPortfolioErrorDescription.! !

!methodRemoval: PortfolioTest #test14APortfolioShouldNotHaveTheSameFinancialProductMoreThanOnce stamp: 'NNH 11/6/2020 20:45:54'!
test14APortfolioShouldNotHaveTheSameFinancialProductMoreThanOnce
		
	| aPortfolio anotherPortfolio |
	
	aPortfolio := Portfolio new.
	anotherPortfolio := Portfolio new.

	emptyPortfolio add: aPortfolioWithAHundredDollarsAccount .
	emptyPortfolio add: aPortfolio.
	aPortfolio add: anotherPortfolio.

	self should: [aPortfolioWithAHundredDollarsAccount add: anotherPortfolio]
	raise: Error
	withMessageText: Portfolio canNotAddAPortfolioWhenTheyAreOwnedByACommonPortfolioErrorDescription.!
!PortfolioTest methodsFor: 'testing dependencies' stamp: 'NNH 11/6/2020 20:46:10'!
test14APortfolioShouldNotAddAnotherFinancialProductWhenTheyAreOwnedIndirectlyByAnotherPortfolio
		
	| aPortfolio anotherPortfolio |
	
	aPortfolio := Portfolio new.
	anotherPortfolio := Portfolio new.

	emptyPortfolio add: aPortfolioWithAHundredDollarsAccount .
	emptyPortfolio add: aPortfolio.
	aPortfolio add: anotherPortfolio.

	self should: [aPortfolioWithAHundredDollarsAccount add: anotherPortfolio]
	raise: Error
	withMessageText: Portfolio canNotAddAPortfolioWhenTheyAreOwnedByACommonPortfolioErrorDescription.! !

!methodRemoval: PortfolioTest #test14APortfolioShouldNotAddAnotherPortfolioWhenTheyAreOwnedIndirectlyByAnotherPortfolio stamp: 'NNH 11/6/2020 20:46:10'!
test14APortfolioShouldNotAddAnotherPortfolioWhenTheyAreOwnedIndirectlyByAnotherPortfolio
		
	| aPortfolio anotherPortfolio |
	
	aPortfolio := Portfolio new.
	anotherPortfolio := Portfolio new.

	emptyPortfolio add: aPortfolioWithAHundredDollarsAccount .
	emptyPortfolio add: aPortfolio.
	aPortfolio add: anotherPortfolio.

	self should: [aPortfolioWithAHundredDollarsAccount add: anotherPortfolio]
	raise: Error
	withMessageText: Portfolio canNotAddAPortfolioWhenTheyAreOwnedByACommonPortfolioErrorDescription.!

!testRun: #PortfolioTest #test01BalanceOfEmptyPortfolioIsZero stamp: 'NNH 11/6/2020 20:46:21'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithOneFinancialProductIsBalanceOfThatAccount stamp: 'NNH 11/6/2020 20:46:21'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioWithMoreThanOneFinancialProductIsSumOfBalances stamp: 'NNH 11/6/2020 20:46:21'!
PASSED!

!testRun: #PortfolioTest #test04EmptyPortfolioHasRegisteredNoTransactions stamp: 'NNH 11/6/2020 20:46:21'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioWithOneFinancialProductRegistersATransactionOfThatAccount stamp: 'NNH 11/6/2020 20:46:21'!
PASSED!

!testRun: #PortfolioTest #test06APortfolioWithMoreThanOneFinancialProductRegistersAllTransactions stamp: 'NNH 11/6/2020 20:46:21'!
PASSED!

!testRun: #PortfolioTest #test07EmptyPortfolioHasNoTransactions stamp: 'NNH 11/6/2020 20:46:21'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioWithOneFinancialProductHasTheTransactionsOfThatAccount stamp: 'NNH 11/6/2020 20:46:21'!
PASSED!

!testRun: #PortfolioTest #test09APortfolioWithMoreThanOneFinancialProductHasTheTransactionsOfItsAccounts stamp: 'NNH 11/6/2020 20:46:21'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioShouldNotAddItself stamp: 'NNH 11/6/2020 20:46:21'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioShouldNotAddAnOwnerPortfolio stamp: 'NNH 11/6/2020 20:46:21'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioShouldNotAddFinancialProductIfTheyBothBelongToAnotherPortfolio stamp: 'NNH 11/6/2020 20:46:21'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioShouldNotAddAnotherPortfolioWhenTheyBothOwnAFinancialProduct stamp: 'NNH 11/6/2020 20:46:21'!
PASSED!

!testRun: #PortfolioTest #test14APortfolioShouldNotAddAnotherFinancialProductWhenTheyAreOwnedIndirectlyByAnotherPortfolio stamp: 'NNH 11/6/2020 20:46:21'!
PASSED!

!testRun: #PortfolioTest #test15APortfolioShouldNotAddAPortfolioWhenTheyBothOwnTheSameFinancialProductIndirectly stamp: 'NNH 11/6/2020 20:46:21'!
PASSED!

----SNAPSHOT----(6 November 2020 20:46:34) CuisUniversity-4384.image priorSource: 17540909!

----QUIT----(6 November 2020 20:46:37) CuisUniversity-4384.image priorSource: 17632234!