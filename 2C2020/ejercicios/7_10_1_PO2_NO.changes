----STARTUP---- (9 November 2020 16:16:52) as /home/jampuero/Documentos/isw1/linux64/CuisUniversity-4365.image!


!classRemoval: #RootPortfolio stamp: 'ja 11/9/2020 16:17:15'!
PortfolioState subclass: #RootPortfolio
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classRemoval: #NotRootPortfolio stamp: 'ja 11/9/2020 16:17:16'!
PortfolioState subclass: #NotRootPortfolio
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classRemoval: #PortfolioState stamp: 'ja 11/9/2020 16:17:16'!
Object subclass: #PortfolioState
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classRemoval: #ReceptiveAccount stamp: 'ja 11/9/2020 16:17:17'!
FinancialInvestment subclass: #ReceptiveAccount
	instanceVariableNames: 'transactions'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classRemoval: #Portfolio stamp: 'ja 11/9/2020 16:17:17'!
FinancialInvestment subclass: #Portfolio
	instanceVariableNames: 'accounts childrenPortfolios parentsPortfolios state'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classRemoval: #FinancialInvestment stamp: 'ja 11/9/2020 16:17:18'!
Object subclass: #FinancialInvestment
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classRemoval: #Withdraw stamp: 'ja 11/9/2020 16:17:19'!
AccountTransaction subclass: #Withdraw
	instanceVariableNames: 'value'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classRemoval: #Deposit stamp: 'ja 11/9/2020 16:17:19'!
AccountTransaction subclass: #Deposit
	instanceVariableNames: 'value'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classRemoval: #AccountTransaction stamp: 'ja 11/9/2020 16:17:20'!
Object subclass: #AccountTransaction
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classRemoval: #ReceptiveAccountTest stamp: 'ja 11/9/2020 16:17:20'!
TestCase subclass: #ReceptiveAccountTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classRemoval: #PortfolioTest stamp: 'ja 11/9/2020 16:17:21'!
TestCase subclass: #PortfolioTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

----End fileIn of /home/jampuero/Documentos/isw1/linux64/Portfolio-Ejercicio.st----!

!testRun: #PortfolioTest #test01PortfolioHasNotAccountsWhenCreated stamp: 'ja 11/9/2020 16:18:06'!
PASSED!

!testRun: #PortfolioTest #test02EmptyAccountCanBeAddedToPortfolio stamp: 'ja 11/9/2020 16:18:06'!
PASSED!

!testRun: #PortfolioTest #test03DepositeOnlyAccountCanBeAddedToPortfolio stamp: 'ja 11/9/2020 16:18:06'!
PASSED!

!testRun: #PortfolioTest #test04WithdrawOnlyAccountCanBeAddedToPortfolio stamp: 'ja 11/9/2020 16:18:06'!
PASSED!

!testRun: #PortfolioTest #test05MultipleTransactionsAccountCanBeAddedToPortfolio stamp: 'ja 11/9/2020 16:18:06'!
PASSED!

!testRun: #PortfolioTest #test06MultipleAccountsCanBeAddedToPortfolio stamp: 'ja 11/9/2020 16:18:06'!
PASSED!

!testRun: #PortfolioTest #test07EmptyPortfolioCanBeAddedToPortfolio stamp: 'ja 11/9/2020 16:18:06'!
PASSED!

!testRun: #PortfolioTest #test08NotEmptyPortfolioCanBeAddedToPortfolio stamp: 'ja 11/9/2020 16:18:06'!
PASSED!

!testRun: #PortfolioTest #test09MultiplePortfoliosCanBeAddedToPortfolio stamp: 'ja 11/9/2020 16:18:06'!
PASSED!

!testRun: #PortfolioTest #test10ChildCouldHaveManyParents stamp: 'ja 11/9/2020 16:18:06'!
PASSED!

!testRun: #PortfolioTest #test11ChildrenCouldHaveManyParents stamp: 'ja 11/9/2020 16:18:06'!
PASSED!

!testRun: #PortfolioTest #test12PortofolioCantAddItself stamp: 'ja 11/9/2020 16:18:06'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioCantBeAddedTwiceToSameParent stamp: 'ja 11/9/2020 16:18:06'!
PASSED!

!testRun: #PortfolioTest #test14CyclesWithParentOnSingleParentNodeAreForbidden stamp: 'ja 11/9/2020 16:18:06'!
PASSED!

!testRun: #PortfolioTest #test15CyclesWithOtherNodeOnSingleParentNodeAreForbidden stamp: 'ja 11/9/2020 16:18:06'!
PASSED!

!testRun: #PortfolioTest #test16CyclesWithParentOnMultipleParentNodeAreForbidden stamp: 'ja 11/9/2020 16:18:06'!
PASSED!

!testRun: #PortfolioTest #test17CyclesWithOtherNodeOnMultipleParentNodeAreForbidden stamp: 'ja 11/9/2020 16:18:06'!
PASSED!

!testRun: #PortfolioTest #test18AccountAlreadyInPortfolioCantBeAddedToAnotherPortfolioOfSameTree stamp: 'ja 11/9/2020 16:18:06'!
PASSED!

!testRun: #PortfolioTest #test19MultilevelBalance stamp: 'ja 11/9/2020 16:18:06'!
PASSED!

!testRun: #PortfolioTest #test20MultilevelTransactions stamp: 'ja 11/9/2020 16:18:06'!
PASSED!

!testRun: #PortfolioTest #test21MultilevelHasRegistered stamp: 'ja 11/9/2020 16:18:06'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'ja 11/9/2020 16:18:09'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'ja 11/9/2020 16:18:09'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'ja 11/9/2020 16:18:09'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'ja 11/9/2020 16:18:09'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'ja 11/9/2020 16:18:09'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'ja 11/9/2020 16:18:09'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'ja 11/9/2020 16:18:09'!
PASSED!
!PortfolioTest methodsFor: 'creation' stamp: 'ja 11/9/2020 16:18:30' prior: 50959295!
test01PortfolioHasNotAccountsWhenCreated
	| portfolio |
	portfolio _ Portfolio new.
	self assert: portfolio isEmpty.
	self assert: 0 equals: portfolio balance.! !
!PortfolioTest methodsFor: 'accounts-adding' stamp: 'ja 11/9/2020 16:18:52' prior: 50959303!
test02EmptyAccountCanBeAddedToPortfolio
	| portfolio account |
	portfolio _ Portfolio new.
	account  _ ReceptiveAccount new.
	portfolio register: account.
	self deny: portfolio isEmpty.
	self assert: 1 equals: portfolio amountOfAccounts.
	self assert: 0 equals: portfolio balance.! !
!PortfolioTest methodsFor: 'accounts-adding' stamp: 'ja 11/9/2020 16:19:14' prior: 50959316!
test03DepositeOnlyAccountCanBeAddedToPortfolio
	| portfolio account |
	portfolio _ Portfolio new.
	account  _ ReceptiveAccount new.
	Deposit register: 100 on: account.
	Deposit register: 100 on: account.
	Deposit register: 100 on: account.
	portfolio register: account.
	self deny: portfolio isEmpty.
	self assert: 1 equals: portfolio amountOfAccounts.
	self assert: 300 equals: portfolio balance.! !
!PortfolioTest methodsFor: 'accounts-adding' stamp: 'ja 11/9/2020 16:19:40' prior: 50959332!
test04WithdrawOnlyAccountCanBeAddedToPortfolio
	| portfolio account |
	portfolio _ Portfolio new.
	account  _ ReceptiveAccount new.
	Deposit register: 1000 on: account.
	Withdraw register: 50 on: account.
	Withdraw register: 50 on: account.
	Withdraw register: 50 on: account.
	portfolio register: account.
	self deny: portfolio isEmpty.
	self assert: 1 equals: portfolio amountOfAccounts.
	self assert: 850 equals: portfolio balance.! !

!testRun: #PortfolioTest #test01PortfolioHasNotAccountsWhenCreated stamp: 'ja 11/9/2020 16:19:43'!
PASSED!

!testRun: #PortfolioTest #test02EmptyAccountCanBeAddedToPortfolio stamp: 'ja 11/9/2020 16:19:45'!
PASSED!

!testRun: #PortfolioTest #test03DepositeOnlyAccountCanBeAddedToPortfolio stamp: 'ja 11/9/2020 16:19:45'!
PASSED!

!testRun: #PortfolioTest #test04WithdrawOnlyAccountCanBeAddedToPortfolio stamp: 'ja 11/9/2020 16:19:45'!
PASSED!

!testRun: #PortfolioTest #test05MultipleTransactionsAccountCanBeAddedToPortfolio stamp: 'ja 11/9/2020 16:19:45'!
PASSED!

!testRun: #PortfolioTest #test06MultipleAccountsCanBeAddedToPortfolio stamp: 'ja 11/9/2020 16:19:45'!
PASSED!
!PortfolioTest methodsFor: 'accounts-adding' stamp: 'ja 11/9/2020 16:20:11' prior: 50959349!
test05MultipleTransactionsAccountCanBeAddedToPortfolio
	| portfolio account |
	portfolio _ Portfolio new.
	account  _ ReceptiveAccount new.
	Deposit register: 100 on: account.
	Withdraw register: 50 on: account.
	Deposit register: 100 on: account.
	Withdraw register: 50 on: account.
	Deposit register: 100 on: account.
	Withdraw register: 50 on: account.	
	portfolio register: account.
	self deny: portfolio isEmpty.
	self assert: 1 equals: portfolio amountOfAccounts.
	self assert: 150 equals: portfolio balance.! !
!PortfolioTest methodsFor: 'accounts-adding' stamp: 'ja 11/9/2020 16:20:46' prior: 50959369!
test06MultipleAccountsCanBeAddedToPortfolio
	| portfolio account1 account2 account3 totalBalance |
	portfolio _ Portfolio new.
	account1  _ ReceptiveAccount new.
	Deposit register: 100 on: account1.
	Withdraw register: 50 on: account1.
	account2  _ ReceptiveAccount new.
	Deposit register: 100 on: account2.
	Withdraw register: 50 on: account2.
	account3  _ ReceptiveAccount new.
	Deposit register: 100 on: account3.
	Withdraw register: 50 on: account3.
	portfolio register: account1.
	portfolio register: account2.
	portfolio register: account3.
	totalBalance _ account1 balance + account2 balance + account3 balance.
	self deny: portfolio isEmpty.
	self assert: 3 equals: portfolio amountOfAccounts.
	self assert: totalBalance equals: portfolio balance.! !

!testRun: #PortfolioTest #test02EmptyAccountCanBeAddedToPortfolio stamp: 'ja 11/9/2020 16:20:49'!
PASSED!

!testRun: #PortfolioTest #test03DepositeOnlyAccountCanBeAddedToPortfolio stamp: 'ja 11/9/2020 16:20:49'!
PASSED!

!testRun: #PortfolioTest #test04WithdrawOnlyAccountCanBeAddedToPortfolio stamp: 'ja 11/9/2020 16:20:49'!
PASSED!

!testRun: #PortfolioTest #test05MultipleTransactionsAccountCanBeAddedToPortfolio stamp: 'ja 11/9/2020 16:20:49'!
PASSED!

!testRun: #PortfolioTest #test06MultipleAccountsCanBeAddedToPortfolio stamp: 'ja 11/9/2020 16:20:49'!
PASSED!
!PortfolioTest methodsFor: 'portfolios-adding' stamp: 'ja 11/9/2020 16:21:12' prior: 50959397!
test07EmptyPortfolioCanBeAddedToPortfolio
	| portfolio1 portfolio2 |
	portfolio1 _ Portfolio new.
	portfolio2  _ Portfolio new.
	portfolio1 register: portfolio2.
	self deny: portfolio1 isEmpty.
	self assert: 1 equals: portfolio1 amountOfPortfolios.
	self assert: 0 equals: portfolio1 balance .! !
!PortfolioTest methodsFor: 'portfolios-adding' stamp: 'ja 11/9/2020 16:21:54' prior: 50959432!
test09MultiplePortfoliosCanBeAddedToPortfolio
	| portfolioRoot portfolioChild1 portfolioChild2 account1 account2|
	portfolioRoot _ Portfolio new.
	portfolioChild1 _ Portfolio new.
	portfolioChild2 _ Portfolio new.
	account1  _ ReceptiveAccount new.
	Deposit register: 100 on: account1.
	Withdraw register: 50 on: account1.
	account2  _ ReceptiveAccount new.
	Deposit register: 100 on: account2.
	Withdraw register: 50 on: account2.
	portfolioChild1 register: account1.
	portfolioChild2  register: account2.
	portfolioRoot register: portfolioChild1.
	portfolioRoot register: portfolioChild2.
	self deny: portfolioRoot isEmpty.
	self assert: 2 equals: portfolioRoot amountOfPortfolios.
	self assert: 100 equals: portfolioRoot balance.
	
	! !

!testRun: #PortfolioTest #test07EmptyPortfolioCanBeAddedToPortfolio stamp: 'ja 11/9/2020 16:21:57'!
PASSED!

!testRun: #PortfolioTest #test08NotEmptyPortfolioCanBeAddedToPortfolio stamp: 'ja 11/9/2020 16:21:57'!
PASSED!

!testRun: #PortfolioTest #test09MultiplePortfoliosCanBeAddedToPortfolio stamp: 'ja 11/9/2020 16:21:57'!
PASSED!
!PortfolioTest methodsFor: 'portfolios-adding policies' stamp: 'ja 11/9/2020 16:22:55' prior: 50959460!
test10ChildCouldHaveManyParents
	| portfolioRoot1 portfolioRoot2 portfolioChild1 portfolioChild2 account1 account2 |
	portfolioRoot1 _ Portfolio new.
	portfolioRoot2 _ Portfolio new.
	portfolioChild1 _ Portfolio new.
	portfolioChild2 _ Portfolio new.
	account1  _ ReceptiveAccount new.
	Deposit register: 100 on: account1.
	Withdraw register: 50 on: account1.
	account2  _ ReceptiveAccount new.
	Deposit register: 100 on: account2.
	Withdraw register: 50 on: account2.
	portfolioChild1 register: account1.
	portfolioChild2  register: account2.
	portfolioRoot1 register: portfolioChild1.
	portfolioRoot1 register: portfolioChild2.
	portfolioRoot2 register: portfolioChild1.
	portfolioRoot2 register: portfolioChild2.
	self deny: portfolioRoot1 isEmpty.
	self deny: portfolioRoot2 isEmpty.
	self assert: 2 equals: portfolioRoot1 amountOfPortfolios.
	self assert: 2 equals: portfolioRoot2 amountOfPortfolios.
	self assert: 100 equals: portfolioRoot1 balance.
	self assert: 100 equals: portfolioRoot2 balance.	
	! !
!PortfolioTest methodsFor: 'portfolios-adding policies' stamp: 'ja 11/9/2020 16:23:55' prior: 50959497!
test11ChildrenCouldHaveManyParents
	| portfolioRoot1 portfolioRoot2 portfolioRoot3 
	 portfolioChild1 portfolioChild2  portfolioChild3 
	 account1 account2 account3 |
	portfolioRoot1 _ Portfolio new.
	portfolioRoot2 _ Portfolio new.
	portfolioRoot3 _ Portfolio new.
	portfolioChild1 _ Portfolio new.
	portfolioChild2 _ Portfolio new.
	portfolioChild3 _ Portfolio new.
	account1  _ ReceptiveAccount new.
	Deposit register: 200 on: account1.
	Withdraw register: 50 on: account1.
	account2  _ ReceptiveAccount new.
	Deposit register: 150 on: account2.
	Withdraw register: 50 on: account2.
	account3  _ ReceptiveAccount new.
	Deposit register: 100 on: account3.
	Withdraw register: 50 on: account3.
	portfolioChild1 register: account1.
	portfolioChild1  register: portfolioChild3. 
	portfolioChild2  register: account2.
	portfolioChild3 register: account3.
	portfolioRoot1 register: portfolioChild1.
	portfolioRoot1 register: portfolioChild2.
	portfolioRoot2 register: portfolioChild2.
	portfolioRoot3 register: portfolioChild3 .
	self deny: portfolioRoot1 isEmpty.
	self deny: portfolioRoot2 isEmpty.
	self deny: portfolioRoot3 isEmpty.
	self assert: 2 equals: portfolioRoot1 amountOfPortfolios.
	self assert: 1 equals: portfolioRoot2 amountOfPortfolios.
	self assert: 1 equals: portfolioRoot3 amountOfPortfolios.
	self assert: 300 equals: portfolioRoot1 balance.
	self assert: 100 equals: portfolioRoot2 balance.	
	self assert: 50 equals: portfolioRoot3 balance.		! !
!PortfolioTest methodsFor: 'portfolios-adding policies' stamp: 'ja 11/9/2020 16:24:24' prior: 50959548!
test12PortofolioCantAddItself
	| portfolioRoot |
	portfolioRoot _ Portfolio new.
	self should: [ portfolioRoot register: portfolioRoot . self fail]  
		raise: Error
		withMessageText: Portfolio cantAddPortfolioErrorDescription .
	self assert: 0 equals: portfolioRoot amountOfAccounts.
	self assert: 0 equals: portfolioRoot balance.! !
!PortfolioTest methodsFor: 'portfolios-adding policies' stamp: 'ja 11/9/2020 16:24:55' prior: 50959562!
test13PortfolioCantBeAddedTwiceToSameParent
	| portfolioRoot1 portfolioChild1 account1 |
	portfolioRoot1 _ Portfolio new.
	portfolioChild1 _ Portfolio new.
	account1  _ ReceptiveAccount new.
	Deposit register: 200 on: account1.
	Withdraw register: 50 on: account1.
	portfolioRoot1 register: account1.
	portfolioRoot1 register: portfolioChild1.
	self should: [ portfolioRoot1 register: portfolioChild1 . self fail]  
		raise: Error
		withMessageText: Portfolio cantAddPortfolioErrorDescription .
	self deny: portfolioRoot1 isEmpty.
	self assert: 1 equals: portfolioRoot1 amountOfPortfolios.
	self assert: 1 equals: portfolioRoot1 amountOfAccounts.
	self assert: 150 equals: portfolioRoot1 balance.
	self assert: 0 equals: portfolioChild1 balance.! !
!PortfolioTest methodsFor: 'portfolios-adding policies' stamp: 'ja 11/9/2020 16:25:21' prior: 50959590!
test14CyclesWithParentOnSingleParentNodeAreForbidden
	
	| portfolioRoot1 portfolioChild1 portfolioChild2 account1 |
	
	portfolioRoot1 _ Portfolio new.
	
	portfolioChild1 _ Portfolio new.
	
	portfolioChild2 _ Portfolio new.
	
	account1  _ ReceptiveAccount new.
	
	Deposit register: 200 on: account1.
	
	Withdraw register: 50 on: account1.
	
	portfolioRoot1 register: account1 .
	
	portfolioRoot1 register: portfolioChild1.
	
	portfolioChild1 register: portfolioChild2.
	
	self should: [ portfolioChild2 register: portfolioRoot1. self fail]  
		raise: Error
		withMessageText: Portfolio cantAddPortfolioErrorDescription. .! !
!PortfolioTest methodsFor: 'portfolios-adding policies' stamp: 'ja 11/9/2020 16:25:51' prior: 50959612!
test15CyclesWithOtherNodeOnSingleParentNodeAreForbidden
	| portfolioRoot1 portfolioChild1 portfolioChild2 portfolioChild3 portfolioChild4 |
	portfolioRoot1 _ Portfolio new.
	portfolioChild1 _ Portfolio new.
	portfolioChild2 _ Portfolio new.
	portfolioChild3 _ Portfolio new.
	portfolioChild4 _ Portfolio new.
	portfolioRoot1 register: portfolioChild1.
	portfolioChild1 register: portfolioChild2.
	portfolioChild1 register: portfolioChild3.
	portfolioChild3 register: portfolioChild4.
	self should: [ portfolioChild4 register: portfolioChild2 . self fail]  
		raise: Error
		withMessageText: Portfolio cantAddPortfolioErrorDescription .
! !
!PortfolioTest methodsFor: 'portfolios-adding policies' stamp: 'ja 11/9/2020 16:26:22' prior: 50959636!
test16CyclesWithParentOnMultipleParentNodeAreForbidden
	| portfolioRoot1 portfolioRoot2 portfolioRoot3 portfolioChild1 portfolioChild2 portfolioChild3 portfolioChild4 |
	portfolioRoot1 _ Portfolio new.
	portfolioRoot2 _ Portfolio new.
	portfolioRoot3 _ Portfolio new.
	portfolioChild1 _ Portfolio new.
	portfolioChild2 _ Portfolio new.
	portfolioChild3 _ Portfolio new.
	portfolioChild4 _ Portfolio new.
	portfolioRoot1 register: portfolioChild1.
	portfolioRoot2 register: portfolioChild4.
	portfolioRoot3 register: portfolioChild4.
	portfolioChild1 register: portfolioChild2.
	portfolioChild1 register: portfolioChild3.
	portfolioChild3 register: portfolioChild4.
	self should: [ portfolioChild4 register: portfolioRoot1 . self fail]  
		raise: Error
		withMessageText: Portfolio cantAddPortfolioErrorDescription .! !
!PortfolioTest methodsFor: 'portfolios-adding policies' stamp: 'ja 11/9/2020 16:26:35' prior: 50959666!
test17CyclesWithOtherNodeOnMultipleParentNodeAreForbidden
	| portfolioRoot1 portfolioRoot2 portfolioRoot3 portfolioChild1 portfolioChild2 portfolioChild3 portfolioChild4 |
	portfolioRoot1 _ Portfolio new.
	portfolioRoot2 _ Portfolio new.
	portfolioRoot3 _ Portfolio new.
	portfolioChild1 _ Portfolio new.
	portfolioChild2 _ Portfolio new.
	portfolioChild3 _ Portfolio new.
	portfolioChild4 _ Portfolio new.
	portfolioRoot1 register: portfolioChild1.
	portfolioRoot2 register: portfolioChild4.
	portfolioRoot3 register: portfolioChild4.

	portfolioChild1 register: portfolioChild2.
	portfolioChild1 register: portfolioChild3.
	
	portfolioChild3 register: portfolioChild4.
	
	self should: [ portfolioChild4 register: portfolioChild2 . self fail]  
		raise: Error
		withMessageText: Portfolio cantAddPortfolioErrorDescription .! !

!testRun: #PortfolioTest #test10ChildCouldHaveManyParents stamp: 'ja 11/9/2020 16:26:38'!
PASSED!

!testRun: #PortfolioTest #test11ChildrenCouldHaveManyParents stamp: 'ja 11/9/2020 16:26:38'!
PASSED!

!testRun: #PortfolioTest #test12PortofolioCantAddItself stamp: 'ja 11/9/2020 16:26:38'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioCantBeAddedTwiceToSameParent stamp: 'ja 11/9/2020 16:26:38'!
PASSED!

!testRun: #PortfolioTest #test14CyclesWithParentOnSingleParentNodeAreForbidden stamp: 'ja 11/9/2020 16:26:38'!
PASSED!

!testRun: #PortfolioTest #test15CyclesWithOtherNodeOnSingleParentNodeAreForbidden stamp: 'ja 11/9/2020 16:26:38'!
PASSED!

!testRun: #PortfolioTest #test16CyclesWithParentOnMultipleParentNodeAreForbidden stamp: 'ja 11/9/2020 16:26:38'!
PASSED!

!testRun: #PortfolioTest #test17CyclesWithOtherNodeOnMultipleParentNodeAreForbidden stamp: 'ja 11/9/2020 16:26:38'!
PASSED!
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'ja 11/9/2020 16:27:08' prior: 50959824!
test01ReceptiveAccountHaveZeroAsBalanceWhenCreated 
	| account |
	account := ReceptiveAccount new.
	self assert: 0 equals: account balance.
! !

!testRun: #PortfolioTest #test01PortfolioHasNotAccountsWhenCreated stamp: 'ja 11/9/2020 16:27:10'!
PASSED!

!testRun: #PortfolioTest #test02EmptyAccountCanBeAddedToPortfolio stamp: 'ja 11/9/2020 16:27:10'!
PASSED!

!testRun: #PortfolioTest #test03DepositeOnlyAccountCanBeAddedToPortfolio stamp: 'ja 11/9/2020 16:27:10'!
PASSED!

!testRun: #PortfolioTest #test04WithdrawOnlyAccountCanBeAddedToPortfolio stamp: 'ja 11/9/2020 16:27:10'!
PASSED!

!testRun: #PortfolioTest #test05MultipleTransactionsAccountCanBeAddedToPortfolio stamp: 'ja 11/9/2020 16:27:10'!
PASSED!

!testRun: #PortfolioTest #test06MultipleAccountsCanBeAddedToPortfolio stamp: 'ja 11/9/2020 16:27:10'!
PASSED!

!testRun: #PortfolioTest #test07EmptyPortfolioCanBeAddedToPortfolio stamp: 'ja 11/9/2020 16:27:10'!
PASSED!

!testRun: #PortfolioTest #test08NotEmptyPortfolioCanBeAddedToPortfolio stamp: 'ja 11/9/2020 16:27:10'!
PASSED!

!testRun: #PortfolioTest #test09MultiplePortfoliosCanBeAddedToPortfolio stamp: 'ja 11/9/2020 16:27:10'!
PASSED!

!testRun: #PortfolioTest #test10ChildCouldHaveManyParents stamp: 'ja 11/9/2020 16:27:10'!
PASSED!

!testRun: #PortfolioTest #test11ChildrenCouldHaveManyParents stamp: 'ja 11/9/2020 16:27:10'!
PASSED!

!testRun: #PortfolioTest #test12PortofolioCantAddItself stamp: 'ja 11/9/2020 16:27:10'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioCantBeAddedTwiceToSameParent stamp: 'ja 11/9/2020 16:27:10'!
PASSED!

!testRun: #PortfolioTest #test14CyclesWithParentOnSingleParentNodeAreForbidden stamp: 'ja 11/9/2020 16:27:10'!
PASSED!

!testRun: #PortfolioTest #test15CyclesWithOtherNodeOnSingleParentNodeAreForbidden stamp: 'ja 11/9/2020 16:27:10'!
PASSED!

!testRun: #PortfolioTest #test16CyclesWithParentOnMultipleParentNodeAreForbidden stamp: 'ja 11/9/2020 16:27:10'!
PASSED!

!testRun: #PortfolioTest #test17CyclesWithOtherNodeOnMultipleParentNodeAreForbidden stamp: 'ja 11/9/2020 16:27:10'!
PASSED!

!testRun: #PortfolioTest #test18AccountAlreadyInPortfolioCantBeAddedToAnotherPortfolioOfSameTree stamp: 'ja 11/9/2020 16:27:10'!
PASSED!

!testRun: #PortfolioTest #test19MultilevelBalance stamp: 'ja 11/9/2020 16:27:10'!
PASSED!

!testRun: #PortfolioTest #test20MultilevelTransactions stamp: 'ja 11/9/2020 16:27:10'!
PASSED!

!testRun: #PortfolioTest #test21MultilevelHasRegistered stamp: 'ja 11/9/2020 16:27:10'!
PASSED!
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'ja 11/9/2020 16:27:24' prior: 50959832!
test02DepositIncreasesBalanceOnTransactionValue 
	| account |
	account := ReceptiveAccount  new.
	Deposit register: 100 on: account.
	self assert: 100 equals: account balance.
! !
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'ja 11/9/2020 16:27:35' prior: 50959841!
test03WithdrawDecreasesBalanceOnTransactionValue 
	| account |
	account := ReceptiveAccount new.
	Deposit register: 100 on: account.
	Withdraw register: 50 on: account.
	self assert: 50 equals: account balance.
! !
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'ja 11/9/2020 16:27:44' prior: 50959851!
test04WithdrawValueMustBePositive 
	| account withdrawValue |
	account := ReceptiveAccount new.
	withdrawValue := 50.
	self assert: withdrawValue equals: (Withdraw register: withdrawValue on: account) value
! !
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'ja 11/9/2020 16:27:55' prior: 50959861!
test05ReceptiveAccountKnowsRegisteredTransactions 
	| account deposit withdraw |
	account := ReceptiveAccount new.
	deposit := Deposit register: 100 on: account.
	withdraw := Withdraw register: 50 on: account.
	self assert: (account hasRegistered: deposit).
	self assert: (account hasRegistered: withdraw).
! !
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'ja 11/9/2020 16:28:04' prior: 50959874!
test06ReceptiveAccountDoNotKnowNotRegisteredTransactions
	| deposit withdraw account |
	account := ReceptiveAccount new.
	deposit :=  Deposit for: 100.
	withdraw := Withdraw for: 50.
	self deny: (account hasRegistered: deposit).
	self deny: (account hasRegistered:withdraw).
! !
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'ja 11/9/2020 16:28:14' prior: 50959886!
test07AccountKnowsItsTransactions 
	| account1 deposit1 |
	account1 := ReceptiveAccount new.
	deposit1 := Deposit register: 50 on: account1.
	self assert: 1 equals: account1 transactions size.
	self assert: (account1 transactions includes: deposit1).
! !

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'ja 11/9/2020 16:28:17'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'ja 11/9/2020 16:28:17'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'ja 11/9/2020 16:28:17'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'ja 11/9/2020 16:28:17'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'ja 11/9/2020 16:28:17'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'ja 11/9/2020 16:28:17'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'ja 11/9/2020 16:28:17'!
PASSED!

!testRun: #PortfolioTest #test01PortfolioHasNotAccountsWhenCreated stamp: 'ja 11/9/2020 16:28:19'!
PASSED!

!testRun: #PortfolioTest #test02EmptyAccountCanBeAddedToPortfolio stamp: 'ja 11/9/2020 16:28:19'!
PASSED!

!testRun: #PortfolioTest #test03DepositeOnlyAccountCanBeAddedToPortfolio stamp: 'ja 11/9/2020 16:28:19'!
PASSED!

!testRun: #PortfolioTest #test04WithdrawOnlyAccountCanBeAddedToPortfolio stamp: 'ja 11/9/2020 16:28:19'!
PASSED!

!testRun: #PortfolioTest #test05MultipleTransactionsAccountCanBeAddedToPortfolio stamp: 'ja 11/9/2020 16:28:19'!
PASSED!

!testRun: #PortfolioTest #test06MultipleAccountsCanBeAddedToPortfolio stamp: 'ja 11/9/2020 16:28:19'!
PASSED!

!testRun: #PortfolioTest #test07EmptyPortfolioCanBeAddedToPortfolio stamp: 'ja 11/9/2020 16:28:19'!
PASSED!

!testRun: #PortfolioTest #test08NotEmptyPortfolioCanBeAddedToPortfolio stamp: 'ja 11/9/2020 16:28:19'!
PASSED!

!testRun: #PortfolioTest #test09MultiplePortfoliosCanBeAddedToPortfolio stamp: 'ja 11/9/2020 16:28:19'!
PASSED!

!testRun: #PortfolioTest #test10ChildCouldHaveManyParents stamp: 'ja 11/9/2020 16:28:19'!
PASSED!

!testRun: #PortfolioTest #test11ChildrenCouldHaveManyParents stamp: 'ja 11/9/2020 16:28:19'!
PASSED!

!testRun: #PortfolioTest #test12PortofolioCantAddItself stamp: 'ja 11/9/2020 16:28:19'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioCantBeAddedTwiceToSameParent stamp: 'ja 11/9/2020 16:28:19'!
PASSED!

!testRun: #PortfolioTest #test14CyclesWithParentOnSingleParentNodeAreForbidden stamp: 'ja 11/9/2020 16:28:19'!
PASSED!

!testRun: #PortfolioTest #test15CyclesWithOtherNodeOnSingleParentNodeAreForbidden stamp: 'ja 11/9/2020 16:28:19'!
PASSED!

!testRun: #PortfolioTest #test16CyclesWithParentOnMultipleParentNodeAreForbidden stamp: 'ja 11/9/2020 16:28:19'!
PASSED!

!testRun: #PortfolioTest #test17CyclesWithOtherNodeOnMultipleParentNodeAreForbidden stamp: 'ja 11/9/2020 16:28:19'!
PASSED!

!testRun: #PortfolioTest #test18AccountAlreadyInPortfolioCantBeAddedToAnotherPortfolioOfSameTree stamp: 'ja 11/9/2020 16:28:19'!
PASSED!

!testRun: #PortfolioTest #test19MultilevelBalance stamp: 'ja 11/9/2020 16:28:19'!
PASSED!

!testRun: #PortfolioTest #test20MultilevelTransactions stamp: 'ja 11/9/2020 16:28:19'!
PASSED!

!testRun: #PortfolioTest #test21MultilevelHasRegistered stamp: 'ja 11/9/2020 16:28:19'!
PASSED!
!ReceptiveAccount methodsFor: 'initialization' stamp: 'ja 11/9/2020 16:28:37' prior: 50960232 overrides: 16896425!
initialize
	transactions := OrderedCollection new.! !
!FinancialInvestment methodsFor: 'register-private' stamp: 'ja 11/9/2020 16:29:08' prior: 50960036!
registerAsChildOf: aPortfolio
	self subclassResponsibility .! !
!FinancialInvestment methodsFor: 'management' stamp: 'ja 11/9/2020 16:29:16' prior: 50960017!
balance
	self subclassResponsibility ! !
!FinancialInvestment methodsFor: 'management' stamp: 'ja 11/9/2020 16:29:24' prior: 50960026!
register: aFinancialInvestment
	self subclassResponsibility ! !
!PortfolioTest methodsFor: 'accounts-adding' stamp: 'ja 11/9/2020 16:32:09' prior: 50960562!
test06MultipleAccountsCanBeAddedToPortfolio
	| portfolio account1 account2 account3 totalBalance |
	portfolio _ Portfolio new.
	account1  _ self accountWithBalanceOf50 .
	account2  _ self accountWithBalanceOf50 .
	account3  _ self accountWithBalanceOf50 .
	portfolio register: account1.
	portfolio register: account2.
	portfolio register: account3.
	totalBalance _ account1 balance + account2 balance + account3 balance.
	self deny: portfolio isEmpty.
	self assert: 3 equals: portfolio amountOfAccounts.
	self assert: totalBalance equals: portfolio balance.! !

!testRun: #PortfolioTest #test06MultipleAccountsCanBeAddedToPortfolio stamp: 'ja 11/9/2020 16:32:13'!
PASSED!
!PortfolioTest methodsFor: 'portfolios-adding' stamp: 'ja 11/9/2020 16:32:35' prior: 50960620!
test09MultiplePortfoliosCanBeAddedToPortfolio
	| portfolioRoot portfolioChild1 portfolioChild2 account1 account2|
	portfolioRoot _ Portfolio new.
	portfolioChild1 _ Portfolio new.
	portfolioChild2 _ Portfolio new.
	account1  _ self accountWithBalanceOf50 .
	account2  _ self accountWithBalanceOf50 .
	portfolioChild1 register: account1.
	portfolioChild2  register: account2.
	portfolioRoot register: portfolioChild1.
	portfolioRoot register: portfolioChild2.
	self deny: portfolioRoot isEmpty.
	self assert: 2 equals: portfolioRoot amountOfPortfolios.
	self assert: 100 equals: portfolioRoot balance.
	
	! !

!testRun: #PortfolioTest #test09MultiplePortfoliosCanBeAddedToPortfolio stamp: 'ja 11/9/2020 16:32:37'!
PASSED!
!PortfolioTest methodsFor: 'portfolios-adding policies' stamp: 'ja 11/9/2020 16:32:59' prior: 50960658!
test10ChildCouldHaveManyParents
	| portfolioRoot1 portfolioRoot2 portfolioChild1 portfolioChild2 account1 account2 |
	portfolioRoot1 _ Portfolio new.
	portfolioRoot2 _ Portfolio new.
	portfolioChild1 _ Portfolio new.
	portfolioChild2 _ Portfolio new.
	account1  _ self accountWithBalanceOf50 .
	account2  _ self accountWithBalanceOf50 .
	portfolioChild1 register: account1.
	portfolioChild2  register: account2.
	portfolioRoot1 register: portfolioChild1.
	portfolioRoot1 register: portfolioChild2.
	portfolioRoot2 register: portfolioChild1.
	portfolioRoot2 register: portfolioChild2.
	self deny: portfolioRoot1 isEmpty.
	self deny: portfolioRoot2 isEmpty.
	self assert: 2 equals: portfolioRoot1 amountOfPortfolios.
	self assert: 2 equals: portfolioRoot2 amountOfPortfolios.
	self assert: 100 equals: portfolioRoot1 balance.
	self assert: 100 equals: portfolioRoot2 balance.	
	! !

!testRun: #PortfolioTest #test10ChildCouldHaveManyParents stamp: 'ja 11/9/2020 16:33:02'!
PASSED!
!PortfolioTest methodsFor: 'portfolios-adding policies' stamp: 'ja 11/9/2020 16:33:28' prior: 50960694!
test11ChildrenCouldHaveManyParents
	| portfolioRoot1 portfolioRoot2 portfolioRoot3 
	 portfolioChild1 portfolioChild2  portfolioChild3 
	 account1 account2 account3 |
	portfolioRoot1 _ Portfolio new.
	portfolioRoot2 _ Portfolio new.
	portfolioRoot3 _ Portfolio new.
	portfolioChild1 _ Portfolio new.
	portfolioChild2 _ Portfolio new.
	portfolioChild3 _ Portfolio new.
	account1  _ ReceptiveAccount new.
	Deposit register: 200 on: account1.
	Withdraw register: 50 on: account1.
	account2  _ self accountWithBalanceOf50 .
	account3  _ self accountWithBalanceOf50 .
	portfolioChild1 register: account1.
	portfolioChild1  register: portfolioChild3. 
	portfolioChild2  register: account2.
	portfolioChild3 register: account3.
	portfolioRoot1 register: portfolioChild1.
	portfolioRoot1 register: portfolioChild2.
	portfolioRoot2 register: portfolioChild2.
	portfolioRoot3 register: portfolioChild3 .
	self deny: portfolioRoot1 isEmpty.
	self deny: portfolioRoot2 isEmpty.
	self deny: portfolioRoot3 isEmpty.
	self assert: 2 equals: portfolioRoot1 amountOfPortfolios.
	self assert: 1 equals: portfolioRoot2 amountOfPortfolios.
	self assert: 1 equals: portfolioRoot3 amountOfPortfolios.
	self assert: 300 equals: portfolioRoot1 balance.
	self assert: 100 equals: portfolioRoot2 balance.	
	self assert: 50 equals: portfolioRoot3 balance.		! !

!testRun: #PortfolioTest #test11ChildrenCouldHaveManyParents stamp: 'ja 11/9/2020 16:33:31'!
FAILURE!

!testRun: #PortfolioTest #test11ChildrenCouldHaveManyParents stamp: 'ja 11/9/2020 16:33:31'!
FAILURE!
!PortfolioTest methodsFor: 'portfolios-adding policies' stamp: 'ja 11/9/2020 16:33:48' prior: 50961275!
test11ChildrenCouldHaveManyParents
	| portfolioRoot1 portfolioRoot2 portfolioRoot3 
	 portfolioChild1 portfolioChild2  portfolioChild3 
	 account1 account2 account3 |
	portfolioRoot1 _ Portfolio new.
	portfolioRoot2 _ Portfolio new.
	portfolioRoot3 _ Portfolio new.
	portfolioChild1 _ Portfolio new.
	portfolioChild2 _ Portfolio new.
	portfolioChild3 _ Portfolio new.
	account1  _ ReceptiveAccount new.
	Deposit register: 200 on: account1.
	Withdraw register: 50 on: account1.
	account2  _ ReceptiveAccount new.
	Deposit register: 150 on: account2.
	Withdraw register: 50 on: account2.
	account3  _ self accountWithBalanceOf50 .
	portfolioChild1 register: account1.
	portfolioChild1  register: portfolioChild3. 
	portfolioChild2  register: account2.
	portfolioChild3 register: account3.
	portfolioRoot1 register: portfolioChild1.
	portfolioRoot1 register: portfolioChild2.
	portfolioRoot2 register: portfolioChild2.
	portfolioRoot3 register: portfolioChild3 .
	self deny: portfolioRoot1 isEmpty.
	self deny: portfolioRoot2 isEmpty.
	self deny: portfolioRoot3 isEmpty.
	self assert: 2 equals: portfolioRoot1 amountOfPortfolios.
	self assert: 1 equals: portfolioRoot2 amountOfPortfolios.
	self assert: 1 equals: portfolioRoot3 amountOfPortfolios.
	self assert: 300 equals: portfolioRoot1 balance.
	self assert: 100 equals: portfolioRoot2 balance.	
	self assert: 50 equals: portfolioRoot3 balance.		! !

!testRun: #PortfolioTest #test11ChildrenCouldHaveManyParents stamp: 'ja 11/9/2020 16:33:53'!
PASSED!
!PortfolioTest methodsFor: 'portfolios-adding policies' stamp: 'ja 11/9/2020 16:34:13' prior: 50960864!
test17CyclesWithOtherNodeOnMultipleParentNodeAreForbidden
	| portfolioRoot1 portfolioRoot2 portfolioRoot3 portfolioChild1 portfolioChild2 portfolioChild3 portfolioChild4 |
	portfolioRoot1 _ Portfolio new.
	portfolioRoot2 _ Portfolio new.
	portfolioRoot3 _ Portfolio new.
	portfolioChild1 _ Portfolio new.
	portfolioChild2 _ Portfolio new.
	portfolioChild3 _ Portfolio new.
	portfolioChild4 _ Portfolio new.
	portfolioRoot1 register: portfolioChild1.
	portfolioRoot2 register: portfolioChild4.
	portfolioRoot3 register: portfolioChild4.
	portfolioChild1 register: portfolioChild2.
	portfolioChild1 register: portfolioChild3.
	portfolioChild3 register: portfolioChild4.
	self should: [ portfolioChild4 register: portfolioChild2 . self fail]  
		raise: Error
		withMessageText: Portfolio cantAddPortfolioErrorDescription .! !
!PortfolioTest methodsFor: 'portfolios-adding policies' stamp: 'ja 11/9/2020 16:34:25' prior: 50961380!
test17CyclesWithOtherNodeOnMultipleParentNodeAreForbidden
	| portfolioRoot1 portfolioRoot2 portfolioRoot3 portfolioChild1 portfolioChild2 portfolioChild3 portfolioChild4 |
	portfolioRoot1 _ Portfolio new.
	portfolioRoot2 _ Portfolio new.
	portfolioRoot3 _ Portfolio new.
	portfolioChild1 _ Portfolio new.
	portfolioChild2 _ Portfolio new.
	portfolioChild3 _ Portfolio new.
	portfolioChild4 _ Portfolio new.
	portfolioRoot1 register: portfolioChild1.
	portfolioRoot2 register: portfolioChild4.
	portfolioRoot3 register: portfolioChild4.
	portfolioChild1 register: portfolioChild2.
	portfolioChild1 register: portfolioChild3.
	portfolioChild3 register: portfolioChild4.
	self should: [ portfolioChild4 register: portfolioChild2 . self fail]  
		raise: Error
		withMessageText: Portfolio cantAddPortfolioErrorDescription .! !

!testRun: #PortfolioTest #test10ChildCouldHaveManyParents stamp: 'ja 11/9/2020 16:34:28'!
PASSED!

!testRun: #PortfolioTest #test11ChildrenCouldHaveManyParents stamp: 'ja 11/9/2020 16:34:28'!
PASSED!

!testRun: #PortfolioTest #test12PortofolioCantAddItself stamp: 'ja 11/9/2020 16:34:28'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioCantBeAddedTwiceToSameParent stamp: 'ja 11/9/2020 16:34:28'!
PASSED!

!testRun: #PortfolioTest #test14CyclesWithParentOnSingleParentNodeAreForbidden stamp: 'ja 11/9/2020 16:34:28'!
PASSED!

!testRun: #PortfolioTest #test15CyclesWithOtherNodeOnSingleParentNodeAreForbidden stamp: 'ja 11/9/2020 16:34:28'!
PASSED!

!testRun: #PortfolioTest #test16CyclesWithParentOnMultipleParentNodeAreForbidden stamp: 'ja 11/9/2020 16:34:28'!
PASSED!

!testRun: #PortfolioTest #test17CyclesWithOtherNodeOnMultipleParentNodeAreForbidden stamp: 'ja 11/9/2020 16:34:28'!
PASSED!
!PortfolioTest methodsFor: 'accounts-adding' stamp: 'ja 11/9/2020 16:36:45' prior: 50960475!
test02EmptyAccountCanBeAddedToPortfolio
	| portfolio account |
	portfolio _ Portfolio new.
	account  _ ReceptiveAccount new.
	portfolio register: account.
	self deny: portfolio isEmpty.
	self assert: 1 equals: portfolio amountOfAccounts.
	self assert: 0 equals: portfolio balance.! !
!PortfolioTest methodsFor: 'accounts-adding' stamp: 'ja 11/9/2020 16:38:27'!
xxx: aPortfolio yyy: amountOfAccounts zzz: valueBalance
	
	self deny: aPortfolio isEmpty.
	self assert: amountOfAccounts equals: aPortfolio amountOfAccounts.
	self assert: valueBalance equals: aPortfolio balance.! !
!PortfolioTest methodsFor: 'private' stamp: 'ja 11/9/2020 16:39:51'!
assertWhenAPortfolio: aPortfolio hasAmountOfAccounts: amountOfAccounts andBalance: valueBalance
	
	self deny: aPortfolio isEmpty.
	self assert: amountOfAccounts equals: aPortfolio amountOfAccounts.
	self assert: valueBalance equals: aPortfolio balance.! !

!methodRemoval: PortfolioTest #xxx:yyy:zzz: stamp: 'ja 11/9/2020 16:39:51'!
xxx: aPortfolio yyy: amountOfAccounts zzz: valueBalance
	
	self deny: aPortfolio isEmpty.
	self assert: amountOfAccounts equals: aPortfolio amountOfAccounts.
	self assert: valueBalance equals: aPortfolio balance.!
!PortfolioTest methodsFor: 'accounts-adding' stamp: 'ja 11/9/2020 16:40:29' prior: 50961468!
test02EmptyAccountCanBeAddedToPortfolio
	| portfolio account |
	portfolio _ Portfolio new.
	account  _ ReceptiveAccount new.
	portfolio register: account.
	
	self assertWhenAPortfolio: portfolio hasAmountOfAccounts: 1 andBalance: 0.! !

!testRun: #PortfolioTest #test02EmptyAccountCanBeAddedToPortfolio stamp: 'ja 11/9/2020 16:40:31'!
PASSED!
!PortfolioTest methodsFor: 'private' stamp: 'ja 11/9/2020 16:41:43'!
assertWhenAPortfolio: aPortfolio hasAmountOfPortfolios: amountOfPortfolios andBalance: valueBalance
	
	self deny: aPortfolio isEmpty.
	self assert: amountOfPortfolios equals: aPortfolio amountOfAccounts.
	self assert: valueBalance equals: aPortfolio balance.! !
!PortfolioTest methodsFor: 'portfolios-adding' stamp: 'ja 11/9/2020 16:43:03' prior: 50960607!
test07EmptyPortfolioCanBeAddedToPortfolio
	| portfolio1 portfolio2 |
	portfolio1 _ Portfolio new.
	portfolio2  _ Portfolio new.
	portfolio1 register: portfolio2.
	
	self assertWhenAPortfolio: portfolio1 hasAmountOfPortfolios: 1 andBalance: 0.! !

!testRun: #PortfolioTest #test07EmptyPortfolioCanBeAddedToPortfolio stamp: 'ja 11/9/2020 16:43:09'!
FAILURE!

!testRun: #PortfolioTest #test07EmptyPortfolioCanBeAddedToPortfolio stamp: 'ja 11/9/2020 16:43:09'!
FAILURE!
!PortfolioTest methodsFor: 'portfolios-adding' stamp: 'ja 11/9/2020 16:43:28' prior: 50961535!
test07EmptyPortfolioCanBeAddedToPortfolio
	| portfolio1 portfolio2 |
	portfolio1 _ Portfolio new.
	portfolio2  _ Portfolio new.
	portfolio1 register: portfolio2.
	self deny: portfolio1 isEmpty.
	self assert: 1 equals: portfolio1 amountOfPortfolios.
	self assert: 0 equals: portfolio1 balance .
	
	self assertWhenAPortfolio: portfolio1 hasAmountOfPortfolios: 1 andBalance: 0.! !
!PortfolioTest methodsFor: 'portfolios-adding' stamp: 'ja 11/9/2020 16:45:18' prior: 50961553!
test07EmptyPortfolioCanBeAddedToPortfolio
	| portfolio1 portfolio2 |
	portfolio1 _ Portfolio new.
	portfolio2  _ Portfolio new.
	portfolio1 register: portfolio2.

	
	self assertWhenAPortfolio: portfolio1 hasAmountOfPortfolios: 1 andBalance: 0.! !

!testRun: #PortfolioTest #test07EmptyPortfolioCanBeAddedToPortfolio stamp: 'ja 11/9/2020 16:45:20'!
FAILURE!

!testRun: #PortfolioTest #test07EmptyPortfolioCanBeAddedToPortfolio stamp: 'ja 11/9/2020 16:45:20'!
FAILURE!
!PortfolioTest methodsFor: 'private' stamp: 'ja 11/9/2020 16:46:29' prior: 50961523!
assertWhenAPortfolio: aPortfolio hasAmountOfPortfolios: amountOfPortfolios andBalance: valueBalance
	
	self deny: aPortfolio isEmpty.
	self assert: amountOfPortfolios equals: aPortfolio amountOfPortfolios .
	self assert: valueBalance equals: aPortfolio balance.! !

!testRun: #PortfolioTest #test07EmptyPortfolioCanBeAddedToPortfolio stamp: 'ja 11/9/2020 16:46:36'!
PASSED!
!PortfolioTest methodsFor: 'portfolios-adding' stamp: 'ja 11/9/2020 16:46:40' prior: 50961568!
test07EmptyPortfolioCanBeAddedToPortfolio
	| portfolio1 portfolio2 |
	portfolio1 _ Portfolio new.
	portfolio2  _ Portfolio new.
	portfolio1 register: portfolio2.
	
	self assertWhenAPortfolio: portfolio1 hasAmountOfPortfolios: 1 andBalance: 0.! !
!PortfolioTest methodsFor: 'accounts-adding' stamp: 'ja 11/9/2020 16:47:20' prior: 50960487!
test03DepositeOnlyAccountCanBeAddedToPortfolio
	| portfolio account |
	portfolio _ Portfolio new.
	account  _ ReceptiveAccount new.
	Deposit register: 100 on: account.
	Deposit register: 100 on: account.
	Deposit register: 100 on: account.
	portfolio register: account.
	
	self assertWhenAPortfolio: portfolio hasAmountOfAccounts: 1 andBalance: 300.! !

!testRun: #PortfolioTest #test03DepositeOnlyAccountCanBeAddedToPortfolio stamp: 'ja 11/9/2020 16:47:23'!
PASSED!
!PortfolioTest methodsFor: 'accounts-adding' stamp: 'ja 11/9/2020 16:47:49' prior: 50960503!
test04WithdrawOnlyAccountCanBeAddedToPortfolio
	| portfolio account |
	portfolio _ Portfolio new.
	account  _ ReceptiveAccount new.
	Deposit register: 1000 on: account.
	Withdraw register: 50 on: account.
	Withdraw register: 50 on: account.
	Withdraw register: 50 on: account.
	portfolio register: account.
	self assertWhenAPortfolio: portfolio hasAmountOfAccounts: 1 andBalance: 850.! !

!testRun: #PortfolioTest #test04WithdrawOnlyAccountCanBeAddedToPortfolio stamp: 'ja 11/9/2020 16:47:51'!
PASSED!
!PortfolioTest methodsFor: 'accounts-adding' stamp: 'ja 11/9/2020 16:48:12' prior: 50960542!
test05MultipleTransactionsAccountCanBeAddedToPortfolio
	| portfolio account |
	portfolio _ Portfolio new.
	account  _ ReceptiveAccount new.
	Deposit register: 100 on: account.
	Withdraw register: 50 on: account.
	Deposit register: 100 on: account.
	Withdraw register: 50 on: account.
	Deposit register: 100 on: account.
	Withdraw register: 50 on: account.	
	portfolio register: account.
	self assertWhenAPortfolio: portfolio hasAmountOfAccounts: 1  andBalance: 150.! !

!testRun: #PortfolioTest #test05MultipleTransactionsAccountCanBeAddedToPortfolio stamp: 'ja 11/9/2020 16:48:15'!
PASSED!
!PortfolioTest methodsFor: 'accounts-adding' stamp: 'ja 11/9/2020 16:48:38' prior: 50961188!
test06MultipleAccountsCanBeAddedToPortfolio
	| portfolio account1 account2 account3 totalBalance |
	portfolio _ Portfolio new.
	account1  _ self accountWithBalanceOf50 .
	account2  _ self accountWithBalanceOf50 .
	account3  _ self accountWithBalanceOf50 .
	portfolio register: account1.
	portfolio register: account2.
	portfolio register: account3.
	totalBalance _ account1 balance + account2 balance + account3 balance.
	
	self assertWhenAPortfolio: portfolio hasAmountOfAccounts: 3 andBalance: totalBalance .! !

!testRun: #PortfolioTest #test02EmptyAccountCanBeAddedToPortfolio stamp: 'ja 11/9/2020 16:48:40'!
PASSED!

!testRun: #PortfolioTest #test03DepositeOnlyAccountCanBeAddedToPortfolio stamp: 'ja 11/9/2020 16:48:40'!
PASSED!

!testRun: #PortfolioTest #test04WithdrawOnlyAccountCanBeAddedToPortfolio stamp: 'ja 11/9/2020 16:48:40'!
PASSED!

!testRun: #PortfolioTest #test05MultipleTransactionsAccountCanBeAddedToPortfolio stamp: 'ja 11/9/2020 16:48:40'!
PASSED!

!testRun: #PortfolioTest #test06MultipleAccountsCanBeAddedToPortfolio stamp: 'ja 11/9/2020 16:48:40'!
PASSED!
!PortfolioTest methodsFor: 'portfolios-adding' stamp: 'ja 11/9/2020 16:49:11' prior: 50959410!
test08NotEmptyPortfolioCanBeAddedToPortfolio
	| rootPortfolio childPortfolio account1 account2 account3 |
	
	rootPortfolio _ Portfolio new.
	childPortfolio  _ Portfolio new.
	account1  _ self accountWithBalanceOf50 .
	account2  _ self accountWithBalanceOf50 .
	account3  _ self accountWithBalanceOf50 .
	
	childPortfolio register: account1.
	childPortfolio register: account2.
	childPortfolio register: account3.
	rootPortfolio register: childPortfolio.
	self assertWhenAPortfolio: rootPortfolio hasAmountOfPortfolios: 1 andBalance: 150.
	
	! !

!testRun: #PortfolioTest #test08NotEmptyPortfolioCanBeAddedToPortfolio stamp: 'ja 11/9/2020 16:49:14'!
PASSED!
!PortfolioTest methodsFor: 'portfolios-adding' stamp: 'ja 11/9/2020 16:49:35' prior: 50961213!
test09MultiplePortfoliosCanBeAddedToPortfolio
	| portfolioRoot portfolioChild1 portfolioChild2 account1 account2|
	portfolioRoot _ Portfolio new.
	portfolioChild1 _ Portfolio new.
	portfolioChild2 _ Portfolio new.
	account1  _ self accountWithBalanceOf50 .
	account2  _ self accountWithBalanceOf50 .
	portfolioChild1 register: account1.
	portfolioChild2  register: account2.
	portfolioRoot register: portfolioChild1.
	portfolioRoot register: portfolioChild2.
	self assertWhenAPortfolio: portfolioRoot hasAmountOfPortfolios: 2 andBalance: 100.
	
	! !

!testRun: #PortfolioTest #test09MultiplePortfoliosCanBeAddedToPortfolio stamp: 'ja 11/9/2020 16:49:39'!
PASSED!

!testRun: #PortfolioTest #test09MultiplePortfoliosCanBeAddedToPortfolio stamp: 'ja 11/9/2020 16:49:42'!
PASSED!

!testRun: #PortfolioTest #test07EmptyPortfolioCanBeAddedToPortfolio stamp: 'ja 11/9/2020 16:49:46'!
PASSED!

!testRun: #PortfolioTest #test08NotEmptyPortfolioCanBeAddedToPortfolio stamp: 'ja 11/9/2020 16:49:46'!
PASSED!

!testRun: #PortfolioTest #test09MultiplePortfoliosCanBeAddedToPortfolio stamp: 'ja 11/9/2020 16:49:46'!
PASSED!

!testRun: #PortfolioTest #test02EmptyAccountCanBeAddedToPortfolio stamp: 'ja 11/9/2020 16:49:48'!
PASSED!

!testRun: #PortfolioTest #test03DepositeOnlyAccountCanBeAddedToPortfolio stamp: 'ja 11/9/2020 16:49:48'!
PASSED!

!testRun: #PortfolioTest #test04WithdrawOnlyAccountCanBeAddedToPortfolio stamp: 'ja 11/9/2020 16:49:48'!
PASSED!

!testRun: #PortfolioTest #test05MultipleTransactionsAccountCanBeAddedToPortfolio stamp: 'ja 11/9/2020 16:49:48'!
PASSED!

!testRun: #PortfolioTest #test06MultipleAccountsCanBeAddedToPortfolio stamp: 'ja 11/9/2020 16:49:48'!
PASSED!

!testRun: #PortfolioTest #test01PortfolioHasNotAccountsWhenCreated stamp: 'ja 11/9/2020 16:49:50'!
PASSED!
!PortfolioTest methodsFor: 'portfolios-adding policies' stamp: 'ja 11/9/2020 16:50:41' prior: 50960810!
test15CyclesWithOtherNodeOnSingleParentNodeAreForbidden
	| portfolioRoot1 portfolioChild1 portfolioChild2 portfolioChild3 portfolioChild4 |
	portfolioRoot1 _ Portfolio new.
	portfolioChild1 _ Portfolio new.
	portfolioChild2 _ Portfolio new.
	portfolioChild3 _ Portfolio new.
	portfolioChild4 _ Portfolio new.
	portfolioRoot1 register: portfolioChild1.
	portfolioChild1 register: portfolioChild2.
	portfolioChild1 register: portfolioChild3.
	portfolioChild3 register: portfolioChild4.
	self should: [ portfolioChild4 register: portfolioChild2 . self fail]  
		raise: Error
		withMessageText: Portfolio cantAddPortfolioErrorDescription .
! !
!PortfolioTest methodsFor: 'portfolios-adding policies' stamp: 'ja 11/9/2020 16:51:35' prior: 50960745!
test12PortofolioCantAddItself
	| portfolioRoot |
	portfolioRoot _ Portfolio new.
	self should: [ portfolioRoot register: portfolioRoot . self fail]  
		raise: Error
		withMessageText: Portfolio cantAddPortfolioErrorDescription .
	self assert: 0 equals: portfolioRoot amountOfAccounts.
	self assert: 0 equals: portfolioRoot balance.! !
!PortfolioTest methodsFor: 'portfolios-adding policies' stamp: 'ja 11/9/2020 16:51:44' prior: 50960759!
test13PortfolioCantBeAddedTwiceToSameParent
	| portfolioRoot1 portfolioChild1 account1 |
	portfolioRoot1 _ Portfolio new.
	portfolioChild1 _ Portfolio new.
	account1  _ ReceptiveAccount new.
	Deposit register: 200 on: account1.
	Withdraw register: 50 on: account1.
	portfolioRoot1 register: account1.
	portfolioRoot1 register: portfolioChild1.
	self should: [ portfolioRoot1 register: portfolioChild1 . self fail]  
		raise: Error
		withMessageText: Portfolio cantAddPortfolioErrorDescription .
	self deny: portfolioRoot1 isEmpty.
	self assert: 1 equals: portfolioRoot1 amountOfPortfolios.
	self assert: 1 equals: portfolioRoot1 amountOfAccounts.
	self assert: 150 equals: portfolioRoot1 balance.
	self assert: 0 equals: portfolioChild1 balance.! !

!testRun: #PortfolioTest #test01PortfolioHasNotAccountsWhenCreated stamp: 'ja 11/9/2020 16:53:02'!
PASSED!

!testRun: #PortfolioTest #test02EmptyAccountCanBeAddedToPortfolio stamp: 'ja 11/9/2020 16:53:02'!
PASSED!

!testRun: #PortfolioTest #test03DepositeOnlyAccountCanBeAddedToPortfolio stamp: 'ja 11/9/2020 16:53:02'!
PASSED!

!testRun: #PortfolioTest #test04WithdrawOnlyAccountCanBeAddedToPortfolio stamp: 'ja 11/9/2020 16:53:02'!
PASSED!

!testRun: #PortfolioTest #test05MultipleTransactionsAccountCanBeAddedToPortfolio stamp: 'ja 11/9/2020 16:53:02'!
PASSED!

!testRun: #PortfolioTest #test06MultipleAccountsCanBeAddedToPortfolio stamp: 'ja 11/9/2020 16:53:02'!
PASSED!

!testRun: #PortfolioTest #test07EmptyPortfolioCanBeAddedToPortfolio stamp: 'ja 11/9/2020 16:53:02'!
PASSED!

!testRun: #PortfolioTest #test08NotEmptyPortfolioCanBeAddedToPortfolio stamp: 'ja 11/9/2020 16:53:02'!
PASSED!

!testRun: #PortfolioTest #test09MultiplePortfoliosCanBeAddedToPortfolio stamp: 'ja 11/9/2020 16:53:02'!
PASSED!

!testRun: #PortfolioTest #test10ChildCouldHaveManyParents stamp: 'ja 11/9/2020 16:53:02'!
PASSED!

!testRun: #PortfolioTest #test11ChildrenCouldHaveManyParents stamp: 'ja 11/9/2020 16:53:02'!
PASSED!

!testRun: #PortfolioTest #test12PortofolioCantAddItself stamp: 'ja 11/9/2020 16:53:02'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioCantBeAddedTwiceToSameParent stamp: 'ja 11/9/2020 16:53:02'!
PASSED!

!testRun: #PortfolioTest #test14CyclesWithParentOnSingleParentNodeAreForbidden stamp: 'ja 11/9/2020 16:53:02'!
PASSED!

!testRun: #PortfolioTest #test15CyclesWithOtherNodeOnSingleParentNodeAreForbidden stamp: 'ja 11/9/2020 16:53:02'!
PASSED!

!testRun: #PortfolioTest #test16CyclesWithParentOnMultipleParentNodeAreForbidden stamp: 'ja 11/9/2020 16:53:02'!
PASSED!

!testRun: #PortfolioTest #test17CyclesWithOtherNodeOnMultipleParentNodeAreForbidden stamp: 'ja 11/9/2020 16:53:02'!
PASSED!

!testRun: #PortfolioTest #test18AccountAlreadyInPortfolioCantBeAddedToAnotherPortfolioOfSameTree stamp: 'ja 11/9/2020 16:53:02'!
PASSED!

!testRun: #PortfolioTest #test19MultilevelBalance stamp: 'ja 11/9/2020 16:53:02'!
PASSED!

!testRun: #PortfolioTest #test20MultilevelTransactions stamp: 'ja 11/9/2020 16:53:02'!
PASSED!

!testRun: #PortfolioTest #test21MultilevelHasRegistered stamp: 'ja 11/9/2020 16:53:02'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'ja 11/9/2020 16:53:06'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'ja 11/9/2020 16:53:06'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'ja 11/9/2020 16:53:06'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'ja 11/9/2020 16:53:06'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'ja 11/9/2020 16:53:06'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'ja 11/9/2020 16:53:06'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'ja 11/9/2020 16:53:06'!
PASSED!
!PortfolioTest methodsFor: 'accounts-adding policies' stamp: 'ja 11/9/2020 17:06:09' prior: 50959696!
test18AccountAlreadyInPortfolioCantBeAddedToAnotherPortfolioOfSameTree
	| portfolioRoot1 portfolioChild1 account1 |
	portfolioRoot1 _ Portfolio new.
	portfolioChild1 _ Portfolio new.			
	account1  _ self accountWithSingleDepositOf: 200 andSingleWithdrawOf: 50.
	portfolioRoot1 register: account1.
	portfolioRoot1 register: portfolioChild1.
	self should: [ portfolioChild1 register: account1 . self fail]  
		raise: Error
		withMessageText: ReceptiveAccount cantAddAccountErrorDescription .! !

!testRun: #PortfolioTest #test18AccountAlreadyInPortfolioCantBeAddedToAnotherPortfolioOfSameTree stamp: 'ja 11/9/2020 17:06:12'!
PASSED!
!PortfolioTest methodsFor: 'portfolios-adding policies' stamp: 'ja 11/9/2020 17:07:56' prior: 50961328!
test11ChildrenCouldHaveManyParents
	| portfolioRoot1 portfolioRoot2 portfolioRoot3 
	 portfolioChild1 portfolioChild2  portfolioChild3 
	 account1 account2 account3 |
	portfolioRoot1 _ Portfolio new.
	portfolioRoot2 _ Portfolio new.
	portfolioRoot3 _ Portfolio new.
	portfolioChild1 _ Portfolio new.
	portfolioChild2 _ Portfolio new.
	portfolioChild3 _ Portfolio new.
	account1  _ self accountWithSingleDepositOf: 200 andSingleWithdrawOf: 50.
	account2  _ self accountWithSingleDepositOf: 150 andSingleWithdrawOf: 50.
	account3  _ self accountWithBalanceOf50 .
	portfolioChild1 register: account1.
	portfolioChild1  register: portfolioChild3. 
	portfolioChild2  register: account2.
	portfolioChild3 register: account3.
	portfolioRoot1 register: portfolioChild1.
	portfolioRoot1 register: portfolioChild2.
	portfolioRoot2 register: portfolioChild2.
	portfolioRoot3 register: portfolioChild3 .
	self deny: portfolioRoot1 isEmpty.
	self deny: portfolioRoot2 isEmpty.
	self deny: portfolioRoot3 isEmpty.
	self assert: 2 equals: portfolioRoot1 amountOfPortfolios.
	self assert: 1 equals: portfolioRoot2 amountOfPortfolios.
	self assert: 1 equals: portfolioRoot3 amountOfPortfolios.
	self assert: 300 equals: portfolioRoot1 balance.
	self assert: 100 equals: portfolioRoot2 balance.	
	self assert: 50 equals: portfolioRoot3 balance.		! !

!testRun: #PortfolioTest #test11ChildrenCouldHaveManyParents stamp: 'ja 11/9/2020 17:07:59'!
PASSED!
!PortfolioTest methodsFor: 'portfolios-adding policies' stamp: 'ja 11/9/2020 17:09:03' prior: 50960787!
test14CyclesWithParentOnSingleParentNodeAreForbidden
	
	| portfolioRoot1 portfolioChild1 portfolioChild2 account1 |
	
	portfolioRoot1 _ Portfolio new.
	
	portfolioChild1 _ Portfolio new.
	
	portfolioChild2 _ Portfolio new.
	
	account1  _ self accountWithSingleDepositOf: 200 andSingleWithdrawOf: 50.
	
	portfolioRoot1 register: account1 .
	
	portfolioRoot1 register: portfolioChild1.
	
	portfolioChild1 register: portfolioChild2.
	
	self should: [ portfolioChild2 register: portfolioRoot1. self fail]  
		raise: Error
		withMessageText: Portfolio cantAddPortfolioErrorDescription. .! !

!testRun: #PortfolioTest #test14CyclesWithParentOnSingleParentNodeAreForbidden stamp: 'ja 11/9/2020 17:09:05'!
PASSED!

!testRun: #PortfolioTest #test10ChildCouldHaveManyParents stamp: 'ja 11/9/2020 17:09:09'!
PASSED!

!testRun: #PortfolioTest #test11ChildrenCouldHaveManyParents stamp: 'ja 11/9/2020 17:09:09'!
PASSED!

!testRun: #PortfolioTest #test12PortofolioCantAddItself stamp: 'ja 11/9/2020 17:09:09'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioCantBeAddedTwiceToSameParent stamp: 'ja 11/9/2020 17:09:09'!
PASSED!

!testRun: #PortfolioTest #test14CyclesWithParentOnSingleParentNodeAreForbidden stamp: 'ja 11/9/2020 17:09:09'!
PASSED!

!testRun: #PortfolioTest #test15CyclesWithOtherNodeOnSingleParentNodeAreForbidden stamp: 'ja 11/9/2020 17:09:09'!
PASSED!

!testRun: #PortfolioTest #test16CyclesWithParentOnMultipleParentNodeAreForbidden stamp: 'ja 11/9/2020 17:09:09'!
PASSED!

!testRun: #PortfolioTest #test17CyclesWithOtherNodeOnMultipleParentNodeAreForbidden stamp: 'ja 11/9/2020 17:09:09'!
PASSED!
!PortfolioTest methodsFor: 'portfolios-adding policies' stamp: 'ja 11/9/2020 17:09:39' prior: 50961831!
test13PortfolioCantBeAddedTwiceToSameParent
	| portfolioRoot1 portfolioChild1 account1 |
	portfolioRoot1 _ Portfolio new.
	portfolioChild1 _ Portfolio new.
	account1  _ self accountWithSingleDepositOf: 200 andSingleWithdrawOf: 50.
	portfolioRoot1 register: account1.
	portfolioRoot1 register: portfolioChild1.
	self should: [ portfolioRoot1 register: portfolioChild1 . self fail]  
		raise: Error
		withMessageText: Portfolio cantAddPortfolioErrorDescription .
	self deny: portfolioRoot1 isEmpty.
	self assert: 1 equals: portfolioRoot1 amountOfPortfolios.
	self assert: 1 equals: portfolioRoot1 amountOfAccounts.
	self assert: 150 equals: portfolioRoot1 balance.
	self assert: 0 equals: portfolioChild1 balance.! !

!testRun: #PortfolioTest #test13PortfolioCantBeAddedTwiceToSameParent stamp: 'ja 11/9/2020 17:09:41'!
PASSED!

!testRun: #PortfolioTest #test01PortfolioHasNotAccountsWhenCreated stamp: 'ja 11/9/2020 17:10:35'!
PASSED!

!testRun: #PortfolioTest #test02EmptyAccountCanBeAddedToPortfolio stamp: 'ja 11/9/2020 17:10:35'!
PASSED!

!testRun: #PortfolioTest #test03DepositeOnlyAccountCanBeAddedToPortfolio stamp: 'ja 11/9/2020 17:10:35'!
PASSED!

!testRun: #PortfolioTest #test04WithdrawOnlyAccountCanBeAddedToPortfolio stamp: 'ja 11/9/2020 17:10:35'!
PASSED!

!testRun: #PortfolioTest #test05MultipleTransactionsAccountCanBeAddedToPortfolio stamp: 'ja 11/9/2020 17:10:35'!
PASSED!

!testRun: #PortfolioTest #test06MultipleAccountsCanBeAddedToPortfolio stamp: 'ja 11/9/2020 17:10:35'!
PASSED!

!testRun: #PortfolioTest #test07EmptyPortfolioCanBeAddedToPortfolio stamp: 'ja 11/9/2020 17:10:35'!
PASSED!

!testRun: #PortfolioTest #test08NotEmptyPortfolioCanBeAddedToPortfolio stamp: 'ja 11/9/2020 17:10:35'!
PASSED!

!testRun: #PortfolioTest #test09MultiplePortfoliosCanBeAddedToPortfolio stamp: 'ja 11/9/2020 17:10:35'!
PASSED!

!testRun: #PortfolioTest #test10ChildCouldHaveManyParents stamp: 'ja 11/9/2020 17:10:35'!
PASSED!

!testRun: #PortfolioTest #test11ChildrenCouldHaveManyParents stamp: 'ja 11/9/2020 17:10:35'!
PASSED!

!testRun: #PortfolioTest #test12PortofolioCantAddItself stamp: 'ja 11/9/2020 17:10:35'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioCantBeAddedTwiceToSameParent stamp: 'ja 11/9/2020 17:10:35'!
PASSED!

!testRun: #PortfolioTest #test14CyclesWithParentOnSingleParentNodeAreForbidden stamp: 'ja 11/9/2020 17:10:35'!
PASSED!

!testRun: #PortfolioTest #test15CyclesWithOtherNodeOnSingleParentNodeAreForbidden stamp: 'ja 11/9/2020 17:10:35'!
PASSED!

!testRun: #PortfolioTest #test16CyclesWithParentOnMultipleParentNodeAreForbidden stamp: 'ja 11/9/2020 17:10:35'!
PASSED!

!testRun: #PortfolioTest #test17CyclesWithOtherNodeOnMultipleParentNodeAreForbidden stamp: 'ja 11/9/2020 17:10:35'!
PASSED!

!testRun: #PortfolioTest #test18AccountAlreadyInPortfolioCantBeAddedToAnotherPortfolioOfSameTree stamp: 'ja 11/9/2020 17:10:35'!
PASSED!

!testRun: #PortfolioTest #test19MultilevelBalance stamp: 'ja 11/9/2020 17:10:35'!
PASSED!

!testRun: #PortfolioTest #test20MultilevelTransactions stamp: 'ja 11/9/2020 17:10:35'!
PASSED!

!testRun: #PortfolioTest #test21MultilevelHasRegistered stamp: 'ja 11/9/2020 17:10:35'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'ja 11/9/2020 17:10:38'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'ja 11/9/2020 17:10:38'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'ja 11/9/2020 17:10:38'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'ja 11/9/2020 17:10:38'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'ja 11/9/2020 17:10:38'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'ja 11/9/2020 17:10:38'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'ja 11/9/2020 17:10:38'!
PASSED!

!classRemoval: #RootPortfolio stamp: 'ja 11/9/2020 19:47:11'!
PortfolioState subclass: #RootPortfolio
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classRemoval: #NotRootPortfolio stamp: 'ja 11/9/2020 19:47:12'!
PortfolioState subclass: #NotRootPortfolio
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classRemoval: #PortfolioState stamp: 'ja 11/9/2020 19:47:12'!
Object subclass: #PortfolioState
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classRemoval: #ReceptiveAccount stamp: 'ja 11/9/2020 19:47:13'!
FinancialInvestment subclass: #ReceptiveAccount
	instanceVariableNames: 'transactions'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classRemoval: #Portfolio stamp: 'ja 11/9/2020 19:47:13'!
FinancialInvestment subclass: #Portfolio
	instanceVariableNames: 'accounts childrenPortfolios parentsPortfolios state'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classRemoval: #FinancialInvestment stamp: 'ja 11/9/2020 19:47:14'!
Object subclass: #FinancialInvestment
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classRemoval: #Withdraw stamp: 'ja 11/9/2020 19:47:14'!
AccountTransaction subclass: #Withdraw
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classRemoval: #Deposit stamp: 'ja 11/9/2020 19:47:15'!
AccountTransaction subclass: #Deposit
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classRemoval: #AccountTransaction stamp: 'ja 11/9/2020 19:47:15'!
Object subclass: #AccountTransaction
	instanceVariableNames: 'value'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classRemoval: #ReceptiveAccountTest stamp: 'ja 11/9/2020 19:47:16'!
TestCase subclass: #ReceptiveAccountTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classRemoval: #PortfolioTest stamp: 'ja 11/9/2020 19:47:16'!
TestCase subclass: #PortfolioTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

----End fileIn of /home/jampuero/Documentos/isw1/linux64/Portfolio2-Ejercicio.st----!

!testRun: #TransferTest #test01TransferHasSourceDestinyAndValueWhenCreated stamp: 'ja 11/9/2020 19:52:51'!
ERROR!

!testRun: #TransferTest #test01TransferHasSourceDestinyAndValueWhenCreated stamp: 'ja 11/9/2020 19:52:51'!
ERROR!
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ja 11/9/2020 19:53:02'!
from: aReceptiveAccount to: aReceptiveAccount2 anAmountOf: aSmallInteger 
	self shouldBeImplemented.! !
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ja 11/9/2020 20:01:28' prior: 50963103!
from: aSourceAccount to: aDestinyAccount anAmountOf: amountToTransfer 
	
	(aSourceAccount isKindOf: ReceptiveAccount) ifFalse:[ self error: self inputErrorDescription] .
	
	(aDestinyAccount isKindOf: ReceptiveAccount) ifFalse:[ self error: self inputErrorDescription] .
	
	(amountToTransfer isKindOf: Integer) ifFalse:[ self error: self inputErrorDescription] .
	
	^ self new initialzeFrom: aSourceAccount to: aDestinyAccount anAmountOf: amountToTransfer .! !

!testRun: #TransferTest #test01TransferHasSourceDestinyAndValueWhenCreated stamp: 'ja 11/9/2020 20:01:38'!
ERROR!
!Transfer methodsFor: 'initialize' stamp: 'ja 11/9/2020 20:01:56'!
initialzeFrom: aReceptiveAccount to: aReceptiveAccount2 anAmountOf: aSmallInteger 
	self shouldBeImplemented.! !

!classDefinition: #Transfer category: #'Portfolio-Solucion' stamp: 'ja 11/9/2020 20:03:24'!
Object subclass: #Transfer
	instanceVariableNames: 'source'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #Transfer category: #'Portfolio-Solucion' stamp: 'ja 11/9/2020 20:03:26'!
Object subclass: #Transfer
	instanceVariableNames: 'source destiny'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #Transfer category: #'Portfolio-Solucion' stamp: 'ja 11/9/2020 20:03:30'!
Object subclass: #Transfer
	instanceVariableNames: 'source destiny value'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!
!Transfer methodsFor: 'initialize' stamp: 'ja 11/9/2020 20:03:21' prior: 50963131!
initialzeFrom: aSourceAccount to: aDestinyAccount anAmountOf: amountToTransfer 
	
	source _ aSourceAccount .
	
	destiny _ aDestinyAccount .
	
	value _ amountToTransfer .! !

!testRun: #TransferTest #test01TransferHasSourceDestinyAndValueWhenCreated stamp: 'ja 11/9/2020 20:03:34'!
ERROR!

!testRun: #TransferTest #test01TransferHasSourceDestinyAndValueWhenCreated stamp: 'ja 11/9/2020 20:04:25'!
ERROR!

!testRun: #TransferTest #test01TransferHasSourceDestinyAndValueWhenCreated stamp: 'ja 11/9/2020 20:04:25'!
ERROR!
!Transfer methodsFor: 'testing' stamp: 'ja 11/9/2020 20:04:34'!
hasSource
	self shouldBeImplemented.! !
!Transfer methodsFor: 'testing' stamp: 'ja 11/9/2020 20:04:50' prior: 50963179!
hasSource
	
	^ source isNil not! !

!testRun: #TransferTest #test01TransferHasSourceDestinyAndValueWhenCreated stamp: 'ja 11/9/2020 20:05:01'!
ERROR!
!Transfer methodsFor: 'testing' stamp: 'ja 11/9/2020 20:05:16'!
hasDestiny
	self shouldBeImplemented.! !
!Transfer methodsFor: 'testing' stamp: 'ja 11/9/2020 20:05:31' prior: 50963190!
hasDestiny
	
	^ destiny isNil not! !

!testRun: #TransferTest #test01TransferHasSourceDestinyAndValueWhenCreated stamp: 'ja 11/9/2020 20:05:34'!
ERROR!
!Transfer methodsFor: 'testing' stamp: 'ja 11/9/2020 20:05:47'!
hasValue
	self shouldBeImplemented.! !
!Transfer methodsFor: 'testing' stamp: 'ja 11/9/2020 20:06:03' prior: 50963201!
hasValue
	
	^ value isNil not! !

!testRun: #TransferTest #test01TransferHasSourceDestinyAndValueWhenCreated stamp: 'ja 11/9/2020 20:06:05'!
PASSED!

!testRun: #TransferTest #test01TransferHasSourceDestinyAndValueWhenCreated stamp: 'ja 11/9/2020 20:06:15'!
PASSED!
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ja 11/9/2020 20:08:27'!
inputErrorDescription

	
	^ 'input not valid'! !

!testRun: #TransferTest #test01TransferHasSourceDestinyAndValueWhenCreated stamp: 'ja 11/9/2020 20:08:43'!
PASSED!

Account subclass: #ReceptiveAccount
	instanceVariableNames: 'transactions transfers'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #ReceptiveAccount category: #'Portfolio-Solucion' stamp: 'ja 11/9/2020 20:09:31'!
Account subclass: #ReceptiveAccount
	instanceVariableNames: 'transactions transfers'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!
!ReceptiveAccount methodsFor: 'initialization' stamp: 'ja 11/9/2020 20:09:53' prior: 50962923 overrides: 16896425!
initialize

	super initialize.
	transactions := OrderedCollection new.
	
	transfers _ OrderedCollection new.! !
!Transfer methodsFor: 'testing' stamp: 'ja 11/9/2020 20:12:34'!
source

	^ source .! !

!testRun: #TransferTest #test02IsPossibleGettingSourceAccountFromTransfer stamp: 'ja 11/9/2020 20:12:55'!
PASSED!

!testRun: #TransferTest #test03IsPossibleGettingDestinyAccountFromTransfer stamp: 'ja 11/9/2020 20:13:00'!
ERROR!

!testRun: #TransferTest #test03IsPossibleGettingDestinyAccountFromTransfer stamp: 'ja 11/9/2020 20:13:00'!
ERROR!
!Transfer methodsFor: 'as yet unclassified' stamp: 'ja 11/9/2020 20:13:09'!
destiny
	self shouldBeImplemented.
	^destiny! !
!Transfer methodsFor: 'as yet unclassified' stamp: 'ja 11/9/2020 20:13:13' prior: 50963259!
destiny
	
	^destiny! !

!testRun: #TransferTest #test03IsPossibleGettingDestinyAccountFromTransfer stamp: 'ja 11/9/2020 20:13:15'!
PASSED!

!testRun: #TransferTest #test03IsPossibleGettingDestinyAccountFromTransfer stamp: 'ja 11/9/2020 20:13:17'!
PASSED!

!testRun: #TransferTest #test04IsPossibleGettingTransferFromSourceAccount stamp: 'ja 11/9/2020 20:13:39'!
ERROR!

!testRun: #TransferTest #test04IsPossibleGettingTransferFromSourceAccount stamp: 'ja 11/9/2020 20:13:39'!
ERROR!
!ReceptiveAccount methodsFor: 'as yet unclassified' stamp: 'ja 11/9/2020 20:13:54'!
transfers
	self shouldBeImplemented.
	^transfers! !
!ReceptiveAccount methodsFor: 'as yet unclassified' stamp: 'ja 11/9/2020 20:14:09' prior: 50963282!
transfers
	
	^transfers! !

!testRun: #TransferTest #test04IsPossibleGettingTransferFromSourceAccount stamp: 'ja 11/9/2020 20:14:16'!
FAILURE!
!Transfer methodsFor: 'initialization' stamp: 'ja 11/9/2020 20:14:49' prior: 50963160!
initialzeFrom: aSourceAccount to: aDestinyAccount anAmountOf: amountToTransfer 
	
	source _ aSourceAccount .
	
	destiny _ aDestinyAccount .
	
	value _ amountToTransfer .
	
	aSourceAccount addTransfer: self.! !

!testRun: #TransferTest #test04IsPossibleGettingTransferFromSourceAccount stamp: 'ja 11/9/2020 20:15:26'!
ERROR!

!testRun: #TransferTest #test04IsPossibleGettingTransferFromSourceAccount stamp: 'ja 11/9/2020 20:15:26'!
ERROR!
!ReceptiveAccount methodsFor: 'as yet unclassified' stamp: 'ja 11/9/2020 20:15:35'!
addTransfer: aTransfer 
	self shouldBeImplemented.! !
!ReceptiveAccount methodsFor: 'as yet unclassified' stamp: 'ja 11/9/2020 20:15:54' prior: 50963312!
addTransfer: aTransfer 
	
	transfers add: aTransfer .! !

!testRun: #TransferTest #test04IsPossibleGettingTransferFromSourceAccount stamp: 'ja 11/9/2020 20:15:56'!
PASSED!

!testRun: #TransferTest #test04IsPossibleGettingTransferFromSourceAccount stamp: 'ja 11/9/2020 20:15:58'!
PASSED!

!testRun: #TransferTest #test05IsPossibleGettingTransferFromDestinyAccount stamp: 'ja 11/9/2020 20:16:28'!
FAILURE!

!testRun: #TransferTest #test05IsPossibleGettingTransferFromDestinyAccount stamp: 'ja 11/9/2020 20:16:28'!
FAILURE!
!Transfer methodsFor: 'initialization' stamp: 'ja 11/9/2020 20:16:48' prior: 50963295!
initialzeFrom: aSourceAccount to: aDestinyAccount anAmountOf: amountToTransfer 
	
	source _ aSourceAccount .
	
	destiny _ aDestinyAccount .
	
	value _ amountToTransfer .
	
	aSourceAccount addTransfer: self.
	
	aDestinyAccount addTransfer: self.! !

!testRun: #TransferTest #test05IsPossibleGettingTransferFromDestinyAccount stamp: 'ja 11/9/2020 20:16:52'!
PASSED!

!testRun: #TransferTest #test01TransferHasSourceDestinyAndValueWhenCreated stamp: 'ja 11/9/2020 20:16:55'!
PASSED!

!testRun: #TransferTest #test02IsPossibleGettingSourceAccountFromTransfer stamp: 'ja 11/9/2020 20:16:55'!
PASSED!

!testRun: #TransferTest #test03IsPossibleGettingDestinyAccountFromTransfer stamp: 'ja 11/9/2020 20:16:55'!
PASSED!

!testRun: #TransferTest #test04IsPossibleGettingTransferFromSourceAccount stamp: 'ja 11/9/2020 20:16:55'!
PASSED!

!testRun: #TransferTest #test05IsPossibleGettingTransferFromDestinyAccount stamp: 'ja 11/9/2020 20:16:55'!
PASSED!
!Transfer methodsFor: 'initialization' stamp: 'ja 11/9/2020 20:48:32' prior: 50963336!
initialzeFrom: aSourceAccount to: aDestinyAccount anAmountOf: amountToTransfer 
	
	source _ aSourceAccount .
	
	destiny _ aDestinyAccount .
	
	value _ amountToTransfer .
	
	aSourceAccount addBeginning: self.
	
	aDestinyAccount addComming: self.! !

Object subclass: #Reports
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #Reports category: #'Portfolio-Solucion' stamp: 'ja 11/9/2020 20:55:43'!
Object subclass: #Reports
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

TestCase subclass: #ReportsTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #ReportsTest category: #'Portfolio-Solucion' stamp: 'ja 11/9/2020 20:56:00'!
TestCase subclass: #ReportsTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!
!ReportsTest methodsFor: 'no messages' stamp: 'ja 11/9/2020 20:56:29'!
test01

	! !

AccountTransaction subclass: #ByTransferDecorator
	instanceVariableNames: 'value'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #ByTransferDecorator category: #'Portfolio-Solucion' stamp: 'ja 11/9/2020 21:03:11'!
AccountTransaction subclass: #ByTransferDecorator
	instanceVariableNames: 'value'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!
!AccountTransaction methodsFor: 'value' stamp: 'ja 11/9/2020 21:09:12'!
isFromTransfer

	self subclassResponsibility .! !
!ByTransferDecorator class methodsFor: 'no messages' stamp: 'ja 11/9/2020 21:11:42'!
for: anAccount

	^ self new initalizeFor: anAccount.! !

!classDefinition: #ByTransferDecorator category: #'Portfolio-Solucion' stamp: 'ja 11/9/2020 21:12:09'!
AccountTransaction subclass: #ByTransferDecorator
	instanceVariableNames: 'value decoratee'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!
!ByTransferDecorator methodsFor: 'no messages' stamp: 'ja 11/9/2020 21:12:07'!
initializeFor: anAccount

	decoratee _ anAccount .! !
!ByTransferDecorator methodsFor: 'as yet unclassified' stamp: 'ja 11/9/2020 21:13:16' overrides: 50962985!
affectBalance: aBalance

	^ decoratee affectBalance: aBalance .! !
!ByTransferDecorator methodsFor: 'as yet unclassified' stamp: 'ja 11/9/2020 21:13:51' overrides: 50962981!
value 

	^ decoratee value! !
!ByTransferDecorator methodsFor: 'as yet unclassified' stamp: 'ja 11/9/2020 21:13:53' prior: 50963448 overrides: 50962981!
value 

	^ decoratee value.! !
!ByTransferDecorator methodsFor: 'as yet unclassified' stamp: 'ja 11/9/2020 21:14:23' overrides: 50963418!
isFromTransfer

	^ true.! !

!classDefinition: #ReceptiveAccount category: #'Portfolio-Solucion' stamp: 'ja 11/9/2020 21:17:02'!
Account subclass: #ReceptiveAccount
	instanceVariableNames: 'transactions transfers byTransferTrasactions'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!
!ReceptiveAccount methodsFor: 'as yet unclassified' stamp: 'ja 11/9/2020 21:17:00'!
report

	byTransferTrasactions _ transfers select: [ :transfer |  transfer isFromTransfer]! !
!ReceptiveAccount class methodsFor: 'no messages' stamp: 'ja 11/9/2020 21:18:46'!
withTransactions: aTransactionsCollection
	
	^ self new initiallizeWithTrasactions: aTransactionsCollection 

	! !
!ReceptiveAccount methodsFor: 'as yet unclassified' stamp: 'ja 11/9/2020 21:19:38'!
initiallizeWithTrasactions: aTransactionsCollection 

	transactions _ aTransactionsCollection .! !
!ReceptiveAccount methodsFor: 'as yet unclassified' stamp: 'ja 11/9/2020 21:20:25' prior: 50963471!
report

	byTransferTrasactions _ transfers select: [ :transfer |  transfer isFromTransfer].
	
	^ ReceptiveAccount  withTransactions: transactions .! !
!ReceptiveAccount methodsFor: 'as yet unclassified' stamp: 'ja 11/9/2020 21:23:02' prior: 50963491!
report

	byTransferTrasactions _ transfers select: [ :transfer |  transfer isFromTransfer].
	
	^ ReceptiveAccount  withTransactions: byTransferTrasactions balance .! !
!ReceptiveAccount methodsFor: 'as yet unclassified' stamp: 'ja 11/9/2020 21:23:36' prior: 50963499!
report

	

	byTransferTrasactions _ transfers select: [ :transfer |  transfer isFromTransfer].
	
	^ ReceptiveAccount  withTransactions: byTransferTrasactions balance .! !

Account subclass: #ReceptiveAccount
	instanceVariableNames: 'transactions transfers'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #ReceptiveAccount category: #'Portfolio-Solucion' stamp: 'ja 11/9/2020 21:23:54'!
Account subclass: #ReceptiveAccount
	instanceVariableNames: 'transactions transfers'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!
!ReceptiveAccount methodsFor: 'as yet unclassified' stamp: 'ja 11/9/2020 21:24:05' prior: 50963508!
report

	| byTransferTrasactions |

	byTransferTrasactions _ transfers select: [ :transfer |  transfer isFromTransfer].
	
	^ ReceptiveAccount  withTransactions: byTransferTrasactions balance .! !
!Deposit methodsFor: 'value' stamp: 'ja 11/9/2020 21:24:30' overrides: 50963418!
isFromTransfer

	^ false.! !
!Withdraw methodsFor: 'value' stamp: 'ja 11/9/2020 21:24:37' overrides: 50963418!
isFromTransfer

	^ false.! !
!Transfer methodsFor: 'initialization' stamp: 'ja 11/9/2020 21:26:50' prior: 50963369!
initialzeFrom: aSourceAccount to: aDestinyAccount anAmountOf: amountToTransfer 
	
	source _ aSourceAccount .
	
	destiny _ aDestinyAccount .
	
	value _ amountToTransfer .
	
	! !

Object subclass: #Transfer
	instanceVariableNames: 'source destiny value'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #Transfer category: #'Portfolio-Solucion' stamp: 'ja 11/9/2020 21:27:06'!
Object subclass: #Transfer
	instanceVariableNames: 'source destiny value'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!
!Transfer methodsFor: 'initialization' stamp: 'ja 11/9/2020 21:29:28' prior: 50963547!
initialzeFrom: aSourceAccount to: aDestinyAccount anAmountOf: amountToTransfer 
	
	| deposit withdraw |
	
	source _ aSourceAccount .
	
	destiny _ aDestinyAccount .
	
	value _ amountToTransfer .
	
	deposit _ Deposit register: amountToTransfer on: aDestinyAccount .
	
	withdraw _ Deposit register: amountToTransfer on: aSourceAccount .! !
!Transfer methodsFor: 'initialization' stamp: 'ja 11/9/2020 21:29:42' prior: 50963568!
initialzeFrom: aSourceAccount to: aDestinyAccount anAmountOf: amountToTransfer 
	
	| deposit withdraw |
	
	source _ aSourceAccount .
	
	destiny _ aDestinyAccount .
	
	value _ amountToTransfer .
	
	deposit _ Deposit register: amountToTransfer on: aDestinyAccount .
	
	withdraw _ Withdraw register: amountToTransfer on: aSourceAccount .! !
!Transfer methodsFor: 'initialization' stamp: 'ja 11/9/2020 21:32:15' prior: 50963582!
initialzeFrom: aSourceAccount to: aDestinyAccount anAmountOf: amountToTransfer 
	
	| deposit withdraw |
	
	source _ aSourceAccount .
	
	destiny _ aDestinyAccount .
	
	value _ amountToTransfer .
	
	deposit _ Deposit register: amountToTransfer on: aDestinyAccount .
	
	withdraw _ Withdraw register: amountToTransfer on: aSourceAccount .
	
	deposit _ ByTransferDecorator for: deposit .
	
	withdraw _ ByTransferDecorator for: withdraw .
	! !

!classRemoval: #Transfer stamp: 'ja 11/9/2020 21:36:40'!
Object subclass: #Transfer
	instanceVariableNames: 'source destiny value'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classRemoval: #Reports stamp: 'ja 11/9/2020 21:36:41'!
Object subclass: #Reports
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classRemoval: #Withdraw stamp: 'ja 11/9/2020 21:36:42'!
AccountTransaction subclass: #Withdraw
	instanceVariableNames: 'value'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classRemoval: #Deposit stamp: 'ja 11/9/2020 21:36:42'!
AccountTransaction subclass: #Deposit
	instanceVariableNames: 'value'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classRemoval: #ByTransferDecorator stamp: 'ja 11/9/2020 21:36:43'!
AccountTransaction subclass: #ByTransferDecorator
	instanceVariableNames: 'value decoratee'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classRemoval: #AccountTransaction stamp: 'ja 11/9/2020 21:36:44'!
Object subclass: #AccountTransaction
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classRemoval: #ReceptiveAccount stamp: 'ja 11/9/2020 21:36:44'!
Account subclass: #ReceptiveAccount
	instanceVariableNames: 'transactions transfers'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classRemoval: #Portfolio stamp: 'ja 11/9/2020 21:36:45'!
Account subclass: #Portfolio
	instanceVariableNames: 'accounts parents'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classRemoval: #Account stamp: 'ja 11/9/2020 21:36:46'!
Object subclass: #Account
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classRemoval: #TransferTest stamp: 'ja 11/9/2020 21:36:47'!
TestCase subclass: #TransferTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classRemoval: #ReportsTest stamp: 'ja 11/9/2020 21:36:47'!
TestCase subclass: #ReportsTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classRemoval: #ReceptiveAccountTest stamp: 'ja 11/9/2020 21:36:48'!
TestCase subclass: #ReceptiveAccountTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classRemoval: #PortfolioTest stamp: 'ja 11/9/2020 21:36:49'!
TestCase subclass: #PortfolioTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

----End fileIn of /home/jampuero/Documentos/isw1/linux64/Portfolio2-Ejercicio.st----!

AccountTransaction subclass: #xxx
	instanceVariableNames: 'value'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

AccountTransaction subclass: #Xxxx
	instanceVariableNames: 'value'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #Xxxx category: #'Portfolio-Solucion' stamp: 'ja 11/9/2020 21:45:05'!
AccountTransaction subclass: #Xxxx
	instanceVariableNames: 'value'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classRenamed: #Xxxx as: #TransferColaborators stamp: 'ja 11/9/2020 21:51:19'!
Smalltalk renameClassNamed: #Xxxx as: #TransferColaborators!

!classRenamed: #TransferColaborators as: #TransferCollaborators stamp: 'ja 11/9/2020 21:52:24'!
Smalltalk renameClassNamed: #TransferColaborators as: #TransferCollaborators!

----QUIT----(9 November 2020 22:52:42) CuisUniversity-4365.image priorSource: 20081657!

----STARTUP---- (12 November 2020 17:12:50) as /home/jampuero/Documentos/isw1/linux64/CuisUniversity-4365.image!


Object subclass: #Manzana
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Ensalada-De-Frutas'!

!classDefinition: #Manzana category: #'Ensalada-De-Frutas' stamp: 'ja 11/12/2020 17:17:10'!
Object subclass: #Manzana
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Ensalada-De-Frutas'!

TestCase subclass: #ManzanaTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Ensalada-De-Frutas'!

!classDefinition: #ManzanaTest category: #'Ensalada-De-Frutas' stamp: 'ja 11/12/2020 17:18:02'!
TestCase subclass: #ManzanaTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Ensalada-De-Frutas'!
!ManzanaTest methodsFor: 'no messages' stamp: 'ja 11/12/2020 17:18:45'!
test01! !
!ManzanaTest methodsFor: 'as yet unclassified' stamp: 'ja 11/12/2020 17:20:46' prior: 50964561!
test01

	| manzana |
	
	manzana _ Manzana new.
	
	manzana comprar.
	
	self assert: 1 equals: manzana compradas. ! !

!testRun: #ManzanaTest #test01 stamp: 'ja 11/12/2020 17:20:53'!
ERROR!

!testRun: #ManzanaTest #test01 stamp: 'ja 11/12/2020 17:20:53'!
ERROR!
!Manzana methodsFor: 'as yet unclassified' stamp: 'ja 11/12/2020 17:21:03'!
comprar
	self shouldBeImplemented.! !

!classDefinition: #Manzana category: #'Ensalada-De-Frutas' stamp: 'ja 11/12/2020 17:21:31'!
Object subclass: #Manzana
	instanceVariableNames: 'cantidad'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Ensalada-De-Frutas'!
!Manzana methodsFor: 'as yet unclassified' stamp: 'ja 11/12/2020 17:21:29' prior: 50964576!
comprar
	
	cantidad _ cantidad + 1! !

!testRun: #ManzanaTest #test01 stamp: 'ja 11/12/2020 17:21:34'!
ERROR!
!Manzana methodsFor: 'as yet unclassified' stamp: 'ja 11/12/2020 17:22:11' overrides: 16896425!
initialize 

	cantidad _ 0.! !

!testRun: #ManzanaTest #test01 stamp: 'ja 11/12/2020 17:22:14'!
ERROR!

!testRun: #ManzanaTest #test01 stamp: 'ja 11/12/2020 17:22:14'!
ERROR!
!Manzana methodsFor: 'as yet unclassified' stamp: 'ja 11/12/2020 17:22:24'!
compradas
	self shouldBeImplemented.! !
!Manzana methodsFor: 'as yet unclassified' stamp: 'ja 11/12/2020 17:22:30' prior: 50964603!
compradas
	
	^ cantidad ! !

!testRun: #ManzanaTest #test01 stamp: 'ja 11/12/2020 17:22:32'!
PASSED!

!testRun: #ManzanaTest #test01 stamp: 'ja 11/12/2020 17:22:35'!
PASSED!

!classDefinition: #Banana category: #'Ensalada-De-Frutas' stamp: 'ja 11/12/2020 17:34:25'!
Object subclass: #Banana
	instanceVariableNames: 'cantidad'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Ensalada-De-Frutas'!
!ManzanaTest methodsFor: 'as yet unclassified' stamp: 'ja 11/12/2020 17:34:09'!
test02

	| banana |
	
	banana _ Banana new.
	
	banana comprar.
	
	self assert: 1 equals: banana compradas. ! !

!testRun: #ManzanaTest #test02 stamp: 'ja 11/12/2020 17:34:30'!
ERROR!
!Banana methodsFor: 'as yet unclassified' stamp: 'ja 11/12/2020 17:34:51'!
comprar
	self shouldBeImplemented.! !
!Banana methodsFor: 'as yet unclassified' stamp: 'ja 11/12/2020 17:35:01' prior: 50964633!
comprar
	
	cantidad _ cantidad + 1! !

!testRun: #ManzanaTest #test02 stamp: 'ja 11/12/2020 17:35:04'!
ERROR!
!Banana methodsFor: 'as yet unclassified' stamp: 'ja 11/12/2020 17:35:35' overrides: 16896425!
initialize

	cantidad _ 0! !
!Banana methodsFor: 'as yet unclassified' stamp: 'ja 11/12/2020 17:35:51'!
compradas 

	^ cantidad ! !

!testRun: #ManzanaTest #test01 stamp: 'ja 11/12/2020 17:35:53'!
PASSED!

!testRun: #ManzanaTest #test02 stamp: 'ja 11/12/2020 17:35:53'!
PASSED!

!classDefinition: #Ensalada category: #'Ensalada-De-Frutas' stamp: 'ja 11/12/2020 17:40:58'!
Object subclass: #Ensalada
	instanceVariableNames: 'frutas'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Ensalada-De-Frutas'!
!ManzanaTest methodsFor: 'as yet unclassified' stamp: 'ja 11/12/2020 17:40:45'!
test03

	| ensalada banana manzana |
	
	ensalada _ Ensalada new.
	
	manzana _ Manzana new.
	
	banana _ Banana new.
	
	ensalada _ manzana mezclar: banana.
	
	self assert: 1 equals: ensalada compradas. ! !
!ManzanaTest methodsFor: 'as yet unclassified' stamp: 'ja 11/12/2020 17:41:42' prior: 50964665!
test03

	| ensalada banana manzana |
	
	ensalada _ Ensalada new.
	
	manzana _ Manzana new.
	
	banana _ Banana new.
	
	ensalada _ manzana mezclar: banana.
	
	self assert: (banana , manzana) equals: ensalada frutas. ! !

!testRun: #ManzanaTest #test03 stamp: 'ja 11/12/2020 17:45:58'!
ERROR!
!Manzana methodsFor: 'as yet unclassified' stamp: 'ja 11/12/2020 17:46:16'!
mezclar: aBanana 
	self shouldBeImplemented.! !
!Manzana methodsFor: 'as yet unclassified' stamp: 'ja 11/12/2020 17:46:31' prior: 50964687!
mezclar: aFruit 
	self shouldBeImplemented.! !
!ManzanaTest methodsFor: 'as yet unclassified' stamp: 'ja 11/12/2020 17:46:51' prior: 50964675!
test03

	| ensalada banana manzana |
	
	ensalada _ Ensalada new.
	
	manzana _ Manzana new.
	
	banana _ Banana new.
	
	ensalada _ ensalada with: manzana with: banana.
	
	self assert: (banana , manzana) equals: ensalada frutas. ! !

----QUIT----(12 November 2020 21:31:17) CuisUniversity-4365.image priorSource: 20252189!

----STARTUP---- (14 November 2020 14:56:46) as /home/jampuero/Documentos/isw1/linux64/CuisUniversity-4365.image!


TransferCollaborators subclass: #TransferDeposit
	instanceVariableNames: 'value'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

TransferCollaborators subclass: #TransferDeposit
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #TransferDeposit category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 15:13:02'!
TransferCollaborators subclass: #TransferDeposit
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

TransferCollaborators subclass: #TransferWithdraw
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #TransferWithdraw category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 15:13:18'!
TransferCollaborators subclass: #TransferWithdraw
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!
!ReceptiveAccount methodsFor: 'transactions' stamp: 'ja 11/14/2020 15:30:39' prior: 50964345!
register: aTransaction

	transactions add: aTransaction 
! !

!testRun: #PortfolioTest #test01BalanceOfPortfolioWithoutAccountsIsZero stamp: 'ja 11/14/2020 16:11:43'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithOneAccountIsAccountBalance stamp: 'ja 11/14/2020 16:11:43'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioIsCalculatedRecursivelyOnPortfolios stamp: 'ja 11/14/2020 16:11:43'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithoutAccountsHasNoRegisteredTransaction stamp: 'ja 11/14/2020 16:11:43'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredItsAccountsTransactions stamp: 'ja 11/14/2020 16:11:43'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioLooksForRegisteredTransactionsRecursively stamp: 'ja 11/14/2020 16:11:43'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioHasNoTransactionWhenHasNoAccounts stamp: 'ja 11/14/2020 16:11:43'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTransactionsIncludesAllItsAccountsTransactions stamp: 'ja 11/14/2020 16:11:43'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioTransactionsAreCalculatedRecursively stamp: 'ja 11/14/2020 16:11:43'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCanNotIncludeTheSameAccountMoreThanOnce stamp: 'ja 11/14/2020 16:11:43'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCanNotIncludeAccountOfItsPortfolios stamp: 'ja 11/14/2020 16:11:43'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioCanNotIncludeItself stamp: 'ja 11/14/2020 16:11:43'!
PASSED!

!testRun: #PortfolioTest #test13ComposedPortfolioCanNotHaveParentPortfolioAccount stamp: 'ja 11/14/2020 16:11:43'!
PASSED!

!testRun: #PortfolioTest #test14ComposedPortfolioCanNotHaveAccountOfAnyRootParentRecursively stamp: 'ja 11/14/2020 16:11:43'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotIncludeAnyOfTheComposedAccountOfPortfolioToAdd stamp: 'ja 11/14/2020 16:11:43'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'ja 11/14/2020 16:12:40'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'ja 11/14/2020 16:12:40'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'ja 11/14/2020 16:12:40'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'ja 11/14/2020 16:12:40'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'ja 11/14/2020 16:12:40'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'ja 11/14/2020 16:12:40'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'ja 11/14/2020 16:12:40'!
PASSED!

!testRun: #PortfolioTest #test01BalanceOfPortfolioWithoutAccountsIsZero stamp: 'ja 11/14/2020 16:12:41'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithOneAccountIsAccountBalance stamp: 'ja 11/14/2020 16:12:41'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioIsCalculatedRecursivelyOnPortfolios stamp: 'ja 11/14/2020 16:12:41'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithoutAccountsHasNoRegisteredTransaction stamp: 'ja 11/14/2020 16:12:41'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredItsAccountsTransactions stamp: 'ja 11/14/2020 16:12:41'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioLooksForRegisteredTransactionsRecursively stamp: 'ja 11/14/2020 16:12:41'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioHasNoTransactionWhenHasNoAccounts stamp: 'ja 11/14/2020 16:12:41'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTransactionsIncludesAllItsAccountsTransactions stamp: 'ja 11/14/2020 16:12:41'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioTransactionsAreCalculatedRecursively stamp: 'ja 11/14/2020 16:12:42'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCanNotIncludeTheSameAccountMoreThanOnce stamp: 'ja 11/14/2020 16:12:42'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCanNotIncludeAccountOfItsPortfolios stamp: 'ja 11/14/2020 16:12:42'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioCanNotIncludeItself stamp: 'ja 11/14/2020 16:12:42'!
PASSED!

!testRun: #PortfolioTest #test13ComposedPortfolioCanNotHaveParentPortfolioAccount stamp: 'ja 11/14/2020 16:12:42'!
PASSED!

!testRun: #PortfolioTest #test14ComposedPortfolioCanNotHaveAccountOfAnyRootParentRecursively stamp: 'ja 11/14/2020 16:12:42'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotIncludeAnyOfTheComposedAccountOfPortfolioToAdd stamp: 'ja 11/14/2020 16:12:42'!
PASSED!
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:24:43' prior: 50964075!
test01TransferHasSourceDestinyAndValueWhenCreated
	
	| transfer sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	transfer  _ Transfer from: sourceAccount to: destinyAccount anAmountOf: 2.
	
	self assert: transfer hasSource.

	
	! !

!classRenamed: #TransferCollaborators as: #TransferType stamp: 'ja 11/14/2020 16:25:05'!
Smalltalk renameClassNamed: #TransferCollaborators as: #TransferType!

AccountTransaction subclass: #TransferType
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #TransferType category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 16:25:20'!
AccountTransaction subclass: #TransferType
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:29:11'!
test01TransferAffectsSourceAndDestinyBalance
	
	| transfer sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	transfer  _ Transfer from: sourceAccount to: destinyAccount anAmountOf: 100.
	
	self assert: sourceAccount balance 

	
	! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:31:05' prior: 50964922!
test01TransferAffectsSourceAndDestinyBalance
	
	| transfer sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self assert: 0 equals: (sourceAccount balance).
	self assert: 0 equals: (destinyAccount balance).
	
	transfer  _ Transfer from: sourceAccount to: destinyAccount anAmountOf: 100.
	
	self assert: -100 equals: (sourceAccount balance).
	self assert: 100 equals: (destinyAccount balance).
	self assert: 100 equals: transfer value.	
	! !

!methodRemoval: TransferTest #test01TransferHasSourceDestinyAndValueWhenCreated stamp: 'ja 11/14/2020 16:31:11'!
test01TransferHasSourceDestinyAndValueWhenCreated
	
	| transfer sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	transfer  _ Transfer from: sourceAccount to: destinyAccount anAmountOf: 2.
	
	self assert: transfer hasSource.

	
	!
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:31:42' prior: 50964935!
test01TransferAffectsSourceAndDestinyBalance
	
	| transfer sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self assert: 0 equals: sourceAccount balance.
	self assert: 0 equals: destinyAccount balance.
	
	transfer  _ Transfer from: sourceAccount to: destinyAccount anAmountOf: 100.
	
	self assert: -100 equals: sourceAccount balance.
	self assert: 100 equals: destinyAccount balance.
	self assert: 100 equals: transfer value.	
	! !

!testRun: #TransferTest #test01TransferAffectsSourceAndDestinyBalance stamp: 'ja 11/14/2020 16:31:46'!
ERROR!

!testRun: #TransferTest #test01TransferAffectsSourceAndDestinyBalance stamp: 'ja 11/14/2020 16:31:46'!
ERROR!
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:31:57'!
from: aReceptiveAccount to: aReceptiveAccount2 anAmountOf: aSmallInteger 
	self shouldBeImplemented.! !

!classDefinition: 'Transfer class' category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 16:34:33'!
Transfer class
	instanceVariableNames: 'value'!
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:34:30' prior: 50964993!
from: aReceptiveAccount to: aReceptiveAccount2 anAmountOf: aSmallInteger 
	
	Deposit register: aSmallInteger on: aReceptiveAccount2 .
	Withdraw register: aSmallInteger on: aReceptiveAccount .
	value _ aSmallInteger .! !
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:34:50' prior: 50965004!
from: aSourceAccount to: aReceptiveAccount2 anAmountOf: aSmallInteger 
	
	Deposit register: aSmallInteger on: aReceptiveAccount2 .
	Withdraw register: aSmallInteger on: aSourceAccount .
	value _ aSmallInteger .! !
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:35:04' prior: 50965014!
from: aSourceAccount to: aDestinyAccount anAmountOf: aSmallInteger 
	
	Deposit register: aSmallInteger on: aDestinyAccount .
	Withdraw register: aSmallInteger on: aSourceAccount .
	value _ aSmallInteger .! !
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:35:29' prior: 50965024!
from: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer 
	
	Deposit register: valueToTransfer on: aDestinyAccount .
	Withdraw register: valueToTransfer on: aSourceAccount .
	value _ valueToTransfer .! !

!testRun: #TransferTest #test01TransferAffectsSourceAndDestinyBalance stamp: 'ja 11/14/2020 16:35:33'!
FAILURE!

!classDefinition: #Transfer category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 16:36:19'!
Object subclass: #Transfer
	instanceVariableNames: 'value'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!
!Transfer methodsFor: 'no messages' stamp: 'ja 11/14/2020 16:36:17' overrides: 16896425!
initialize

	value _ 0! !

!testRun: #TransferTest #test01TransferAffectsSourceAndDestinyBalance stamp: 'ja 11/14/2020 16:36:27'!
FAILURE!

!testRun: #TransferTest #test01TransferAffectsSourceAndDestinyBalance stamp: 'ja 11/14/2020 16:36:27'!
FAILURE!
!Transfer methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:36:58' overrides: 16881508!
value 

	^ value ! !

!testRun: #TransferTest #test01TransferAffectsSourceAndDestinyBalance stamp: 'ja 11/14/2020 16:37:02'!
FAILURE!

!testRun: #TransferTest #test01TransferAffectsSourceAndDestinyBalance stamp: 'ja 11/14/2020 16:37:02'!
FAILURE!

!methodRemoval: Transfer class #from:to:anAmountOf: stamp: 'ja 11/14/2020 16:37:52'!
from: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer 
	
	Deposit register: valueToTransfer on: aDestinyAccount .
	Withdraw register: valueToTransfer on: aSourceAccount .
	value _ valueToTransfer .!
!Transfer methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:38:06'!
from: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer 
	
	Deposit register: valueToTransfer on: aDestinyAccount .
	Withdraw register: valueToTransfer on: aSourceAccount .
	value _ valueToTransfer .! !

Transfer class
	instanceVariableNames: ''!

!classDefinition: 'Transfer class' category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 16:38:13'!
Transfer class
	instanceVariableNames: ''!

!testRun: #TransferTest #test01TransferAffectsSourceAndDestinyBalance stamp: 'ja 11/14/2020 16:38:19'!
ERROR!

!testRun: #TransferTest #test01TransferAffectsSourceAndDestinyBalance stamp: 'ja 11/14/2020 16:38:19'!
ERROR!
!Transfer class methodsFor: 'no messages' stamp: 'ja 11/14/2020 16:40:54'!
from: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer 

	Transfer new initializeFrom: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer .! !
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:41:02' prior: 50965108!
from: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer 

	^ Transfer new initializeFrom: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer .! !
!Transfer methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:41:20'!
initializeFrom: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer 

	Deposit register: valueToTransfer on: aDestinyAccount .
	Withdraw register: valueToTransfer on: aSourceAccount .
	value _ valueToTransfer .! !

!methodRemoval: Transfer #from:to:anAmountOf: stamp: 'ja 11/14/2020 16:41:25'!
from: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer 
	
	Deposit register: valueToTransfer on: aDestinyAccount .
	Withdraw register: valueToTransfer on: aSourceAccount .
	value _ valueToTransfer .!

!methodRemoval: Transfer #initialize stamp: 'ja 11/14/2020 16:41:54'!
initialize

	value _ 0!

!testRun: #TransferTest #test01TransferAffectsSourceAndDestinyBalance stamp: 'ja 11/14/2020 16:42:00'!
PASSED!
!Transfer methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:42:09' prior: 50965125!
initializeFrom: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer 

	Deposit register: valueToTransfer on: aDestinyAccount .
	Withdraw register: valueToTransfer on: aSourceAccount .
	
	value _ valueToTransfer .! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:42:27' prior: 50964967!
test01TransferAffectsSourceAndDestinyBalance
	
	| transfer sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self assert: 0 equals: sourceAccount balance.
	self assert: 0 equals: destinyAccount balance.
	
	transfer  _ Transfer from: sourceAccount to: destinyAccount anAmountOf: 100.
	
	self assert: -100 equals: sourceAccount balance.
	self assert: 100 equals: destinyAccount balance.
! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:42:57' prior: 50965162!
test01TransferAffectsSourceAndDestinyBalance
	
	| sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self assert: 0 equals: sourceAccount balance.
	self assert: 0 equals: destinyAccount balance.
	
	Transfer from: sourceAccount to: destinyAccount anAmountOf: 100.
	
	self assert: -100 equals: sourceAccount balance.
	self assert: 100 equals: destinyAccount balance.
! !

!testRun: #TransferTest #test01TransferAffectsSourceAndDestinyBalance stamp: 'ja 11/14/2020 16:43:01'!
PASSED!
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:46:53' prior: 50964090!
test02IsPossibleGettingSourceAccountFromTransfer
	
	| sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self assert: 0 equals: sourceAccount balance.
	self assert: 0 equals: destinyAccount balance.
	
	self should: [Transfer from: sourceAccount to: destinyAccount anAmountOf: 0. self fail] 
		raise:  Error
		withMessageText: Transfer canNotTransferAnAmountOfZeroErrorDescription.! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:47:27'!
test02CanNotTransferAnAmountOfZero
	
	| sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self assert: 0 equals: sourceAccount balance.
	self assert: 0 equals: destinyAccount balance.
	
	self should: [Transfer from: sourceAccount to: destinyAccount anAmountOf: 0. self fail] 
		raise:  Error
		withMessageText: Transfer canNotTransferAnAmountOfZeroErrorDescription.! !

!methodRemoval: TransferTest #test02IsPossibleGettingSourceAccountFromTransfer stamp: 'ja 11/14/2020 16:47:27'!
test02IsPossibleGettingSourceAccountFromTransfer
	
	| sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self assert: 0 equals: sourceAccount balance.
	self assert: 0 equals: destinyAccount balance.
	
	self should: [Transfer from: sourceAccount to: destinyAccount anAmountOf: 0. self fail] 
		raise:  Error
		withMessageText: Transfer canNotTransferAnAmountOfZeroErrorDescription.!

!testRun: #TransferTest #test02CanNotTransferAnAmountOfZero stamp: 'ja 11/14/2020 16:47:33'!
ERROR!

!testRun: #TransferTest #test02CanNotTransferAnAmountOfZero stamp: 'ja 11/14/2020 16:47:33'!
ERROR!
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:47:42'!
canNotTransferAnAmountOfZeroErrorDescription
	self shouldBeImplemented.! !
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:48:16' prior: 50965259!
canNotTransferAnAmountOfZeroErrorDescription
	
	^ 'Can not transfer an amount of zero'! !

!testRun: #TransferTest #test02CanNotTransferAnAmountOfZero stamp: 'ja 11/14/2020 16:48:18'!
FAILURE!
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:49:41' prior: 50965117!
from: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer 

	(valueToTransfer = 0) ifTrue: [ self error: self canNotTransferAnAmountOfZeroErrorDescription ].
		
	^ Transfer new initializeFrom: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer .! !

!methodRemoval: TransferTest #test02CanNotTransferAnAmountOfZero stamp: 'ja 11/14/2020 16:49:48'!
test02CanNotTransferAnAmountOfZero
	
	| sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self assert: 0 equals: sourceAccount balance.
	self assert: 0 equals: destinyAccount balance.
	
	self should: [Transfer from: sourceAccount to: destinyAccount anAmountOf: 0. self fail] 
		raise:  Error
		withMessageText: Transfer canNotTransferAnAmountOfZeroErrorDescription.!
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:51:45' prior: 50964103!
test03IsPossibleGettingDestinyAccountFromTransfer
	
	| sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self assert: 0 equals: sourceAccount balance.
	self assert: 0 equals: destinyAccount balance.
	
	self should: [Transfer from: sourceAccount to: destinyAccount anAmountOf: 0.] 
		raise: Error
		withMessageText: Transfer canNotTransferAnAmountOfZeroErrorDescription .! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:51:52' prior: 50965304!
test03IsPossibleGettingDestinyAccountFromTransfer
	
	| sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self assert: 0 equals: sourceAccount balance.
	self assert: 0 equals: destinyAccount balance.
	
	self should: [Transfer from: sourceAccount to: destinyAccount anAmountOf: 0. self fail] 
		raise: Error
		withMessageText: Transfer canNotTransferAnAmountOfZeroErrorDescription .! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:51:58' prior: 50965321!
test03IsPossibleGettingDestinyAccountFromTransfer
	
	| sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self should: [Transfer from: sourceAccount to: destinyAccount anAmountOf: 0. self fail] 
		raise: Error
		withMessageText: Transfer canNotTransferAnAmountOfZeroErrorDescription .! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:52:16'!
test02CanNotTransferAnAmountOfZeroErrorDescription 
	
	| sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self should: [Transfer from: sourceAccount to: destinyAccount anAmountOf: 0. self fail] 
		raise: Error
		withMessageText: Transfer canNotTransferAnAmountOfZeroErrorDescription .! !

!testRun: #TransferTest #test02CanNotTransferAnAmountOfZeroErrorDescription stamp: 'ja 11/14/2020 16:52:19'!
PASSED!
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:53:12'!
test03CanNotTransferANegativeAmountErrorDescription
	
	| sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self should: [Transfer from: sourceAccount to: destinyAccount anAmountOf: -100. self fail] 
		raise: Error
		withMessageText: Transfer canNotTransferANegativeAmountErrorDescription .! !

!testRun: #TransferTest #test03CanNotTransferANegativeAmountErrorDescription stamp: 'ja 11/14/2020 16:53:16'!
ERROR!

!testRun: #TransferTest #test03CanNotTransferANegativeAmountErrorDescription stamp: 'ja 11/14/2020 16:53:16'!
ERROR!
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:53:24'!
canNotTransferANegativeAmountErrorDescription
	self shouldBeImplemented.! !
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:54:04' prior: 50965393!
canNotTransferANegativeAmountErrorDescription
	
	^ ' Can not transfer a negative amount '! !

!testRun: #TransferTest #test03CanNotTransferANegativeAmountErrorDescription stamp: 'ja 11/14/2020 16:54:07'!
FAILURE!
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:55:01' prior: 50965275!
from: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer 

	(valueToTransfer = 0) ifTrue: [ self error: self canNotTransferAnAmountOfZeroErrorDescription ].
	(valueToTransfer  < 0) ifTrue: [ self error: self canNotTransferANegativeAmountErrorDescription ].
		
	^ Transfer new initializeFrom: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer .! !

!testRun: #TransferTest #test03CanNotTransferANegativeAmountErrorDescription stamp: 'ja 11/14/2020 16:55:07'!
PASSED!

!testRun: #TransferTest #test02CanNotTransferAnAmountOfZeroErrorDescription stamp: 'ja 11/14/2020 16:55:09'!
PASSED!

!testRun: #TransferTest #test01TransferAffectsSourceAndDestinyBalance stamp: 'ja 11/14/2020 16:55:11'!
PASSED!

!methodRemoval: TransferTest #test03IsPossibleGettingDestinyAccountFromTransfer stamp: 'ja 11/14/2020 16:55:14'!
test03IsPossibleGettingDestinyAccountFromTransfer
	
	| sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self should: [Transfer from: sourceAccount to: destinyAccount anAmountOf: 0. self fail] 
		raise: Error
		withMessageText: Transfer canNotTransferAnAmountOfZeroErrorDescription .!
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 17:03:02'!
test04TransferIsRegisteredIntoInvolvedAccount
	
	| sourceAccount destinyAccount transfer |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	transfer _ Transfer from: sourceAccount to: destinyAccount anAmountOf: 100.
	
	self assert: sourceAccount transactions includes: transfer depositMade. 
	
	self assert: destinyAccount transactions includes: transfer withdrawMade.
	
	
	! !

!methodRemoval: TransferTest #test04IsPossibleGettingTransferFromSourceAccount stamp: 'ja 11/14/2020 17:03:16'!
test04IsPossibleGettingTransferFromSourceAccount
	
	| transfer sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	transfer  _ Transfer from: sourceAccount to: destinyAccount anAmountOf: 2.
	
	self assert: sourceAccount transfers includes: transfer . !

!testRun: #TransferTest #test04TransferIsRegisteredIntoInvolvedAccount stamp: 'ja 11/14/2020 17:03:21'!
ERROR!

!testRun: #TransferTest #test04TransferIsRegisteredIntoInvolvedAccount stamp: 'ja 11/14/2020 17:03:21'!
ERROR!
!Transfer methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 17:03:36'!
depositMade
	self shouldBeImplemented.! !
!Transfer methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 17:03:59' prior: 50965485!
depositMade
	
	^ nil! !

!testRun: #TransferTest #test04TransferIsRegisteredIntoInvolvedAccount stamp: 'ja 11/14/2020 17:04:04'!
FAILURE!

!classDefinition: #Transfer category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 17:05:39'!
Object subclass: #Transfer
	instanceVariableNames: 'value depositMade'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #Transfer category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 17:05:41'!
Object subclass: #Transfer
	instanceVariableNames: 'value depositMade withdrawMade'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!
!Transfer methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 17:05:37' prior: 50965151!
initializeFrom: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer 

	depositMade _ TransferDeposit register: valueToTransfer on: aDestinyAccount .
	withdrawMade _ TransferWithdraw register: valueToTransfer on: aSourceAccount .
	
	value _ valueToTransfer .! !

!testRun: #TransferTest #test04TransferIsRegisteredIntoInvolvedAccount stamp: 'ja 11/14/2020 17:05:50'!
ERROR!
!TransferType methodsFor: 'no messages' stamp: 'ja 11/14/2020 17:06:54' overrides: 50964395!
affectBalance: aBalance

	self subclassResponsibility ! !
!TransferType methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 17:07:07' overrides: 50964391!
value 

	self subclassResponsibility ! !
!TransferDeposit methodsFor: 'no messages' stamp: 'ja 11/14/2020 17:07:24' overrides: 50965528!
affectBalance: aBalance! !
!TransferDeposit methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 17:07:42' overrides: 50965533!
value ! !
!TransferWithdraw methodsFor: 'no messages' stamp: 'ja 11/14/2020 17:08:48' overrides: 50965528!
affectBalance: aBalance! !
!TransferWithdraw methodsFor: 'nil' stamp: 'ja 11/14/2020 17:08:58' overrides: 50965533!
value ! !
!TransferDeposit methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 17:09:19' prior: 50965538 overrides: 50965528!
affectBalance: aBalance

	| value |
	^aBalance + value ! !
!TransferWithdraw methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 17:10:35' prior: 50965547 overrides: 50965528!
affectBalance: aBalance

	| value |
	^aBalance - value! !

AccountTransaction subclass: #Deposit
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #Deposit category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 17:11:25'!
AccountTransaction subclass: #Deposit
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

AccountTransaction subclass: #Withdraw
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #Withdraw category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 17:11:32'!
AccountTransaction subclass: #Withdraw
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

Object subclass: #AccountTransaction
	instanceVariableNames: 'value'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!
!TransferDeposit methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 17:13:02' prior: 50965556 overrides: 50965528!
affectBalance: aBalance

	
	^aBalance ! !
!TransferWithdraw methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 17:13:13' prior: 50965562 overrides: 50965528!
affectBalance: aBalance

	
	^aBalance ! !

Object subclass: #AccountTransaction
	instanceVariableNames: 'value'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #AccountTransaction category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 17:13:21'!
Object subclass: #AccountTransaction
	instanceVariableNames: 'value'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!
!TransferDeposit methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 17:13:29' prior: 50965597 overrides: 50965528!
affectBalance: aBalance

	
	^aBalance + value! !
!TransferWithdraw methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 17:13:37' prior: 50965603 overrides: 50965528!
affectBalance: aBalance

	
	^aBalance - value! !
!TransferDeposit methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 17:15:41' prior: 50965621 overrides: 50965528!
affectBalance: aBalance

	^aBalance + value! !
!TransferWithdraw methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 17:28:28' prior: 50965627 overrides: 50965528!
affectBalance: aBalance

	^aBalance - value! !

!testRun: #TransferTest #test04TransferIsRegisteredIntoInvolvedAccount stamp: 'ja 11/14/2020 17:28:32'!
ERROR!

!testRun: #TransferTest #test04TransferIsRegisteredIntoInvolvedAccount stamp: 'ja 11/14/2020 17:28:32'!
ERROR!

!testRun: #TransferTest #test04TransferIsRegisteredIntoInvolvedAccount stamp: 'ja 11/14/2020 17:30:11'!
ERROR!

!testRun: #TransferTest #test04TransferIsRegisteredIntoInvolvedAccount stamp: 'ja 11/14/2020 17:30:11'!
ERROR!
!TransferDeposit class methodsFor: 'no messages' stamp: 'ja 11/14/2020 17:30:42'!
for: aValue

	^ self new initializeFor: aValue ! !
!TransferWithdraw class methodsFor: 'no messages' stamp: 'ja 11/14/2020 17:30:47'!
for: aValue

	^ self new initializeFor: aValue ! !

!testRun: #TransferTest #test04TransferIsRegisteredIntoInvolvedAccount stamp: 'ja 11/14/2020 17:30:53'!
ERROR!

!testRun: #TransferTest #test04TransferIsRegisteredIntoInvolvedAccount stamp: 'ja 11/14/2020 17:30:53'!
ERROR!
!TransferDeposit methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 17:31:17'!
initializeFor: aValue

	value := aValue ! !
!TransferWithdraw methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 17:31:23'!
initializeFor: aValue

	value := aValue ! !
!TransferWithdraw methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 17:31:31' prior: 50965680!
initializeFor: aValue

	value _ aValue ! !
!TransferDeposit methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 17:31:42' prior: 50965675!
initializeFor: aValue

	value _ aValue ! !

!testRun: #TransferTest #test04TransferIsRegisteredIntoInvolvedAccount stamp: 'ja 11/14/2020 17:32:46'!
FAILURE!

!testRun: #TransferTest #test04TransferIsRegisteredIntoInvolvedAccount stamp: 'ja 11/14/2020 17:32:46'!
FAILURE!
!Transfer methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 17:33:24' prior: 50965490!
depositMade
	
	^ depositMade ! !

!testRun: #TransferTest #test04TransferIsRegisteredIntoInvolvedAccount stamp: 'ja 11/14/2020 17:33:28'!
FAILURE!

!testRun: #TransferTest #test04TransferIsRegisteredIntoInvolvedAccount stamp: 'ja 11/14/2020 17:33:28'!
FAILURE!
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 17:34:30' prior: 50965449!
test04TransferIsRegisteredIntoInvolvedAccount
	
	| sourceAccount destinyAccount transfer |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	transfer _ Transfer from: sourceAccount to: destinyAccount anAmountOf: 100.
	
	self assert: sourceAccount transactions includes: transfer withdrawMade. 
	
	self assert: destinyAccount transactions includes: transfer depositMade.
	
	
	! !

!testRun: #TransferTest #test04TransferIsRegisteredIntoInvolvedAccount stamp: 'ja 11/14/2020 17:36:27'!
ERROR!

!testRun: #TransferTest #test04TransferIsRegisteredIntoInvolvedAccount stamp: 'ja 11/14/2020 17:36:27'!
ERROR!
!Transfer methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 17:36:36'!
withdrawMade
	self shouldBeImplemented.
	^withdrawMade! !
!Transfer methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 17:36:40' prior: 50965737!
withdrawMade
	
	^withdrawMade! !

!testRun: #TransferTest #test04TransferIsRegisteredIntoInvolvedAccount stamp: 'ja 11/14/2020 17:37:41'!
PASSED!

!testRun: #TransferTest #test04TransferIsRegisteredIntoInvolvedAccount stamp: 'ja 11/14/2020 17:37:44'!
PASSED!
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 17:38:11'!
test04TransferIsRegisteredIntoInvolvedAccounts
	
	| sourceAccount destinyAccount transfer |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	transfer _ Transfer from: sourceAccount to: destinyAccount anAmountOf: 100.
	
	self assert: sourceAccount transactions includes: transfer withdrawMade. 
	
	self assert: destinyAccount transactions includes: transfer depositMade.
	
	
	! !

!methodRemoval: TransferTest #test04TransferIsRegisteredIntoInvolvedAccount stamp: 'ja 11/14/2020 17:38:11'!
test04TransferIsRegisteredIntoInvolvedAccount
	
	| sourceAccount destinyAccount transfer |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	transfer _ Transfer from: sourceAccount to: destinyAccount anAmountOf: 100.
	
	self assert: sourceAccount transactions includes: transfer withdrawMade. 
	
	self assert: destinyAccount transactions includes: transfer depositMade.
	
	
	!
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 17:46:01'!
test05TransferValueIsNotReplicated
	
	| transfer sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	transfer  _ Transfer from: sourceAccount to: destinyAccount anAmountOf: 100.
	
	sourceAccount transactions ! !

Object subclass: #AccountTransaction
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #AccountTransaction category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 17:47:30'!
Object subclass: #AccountTransaction
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

AccountTransaction subclass: #Deposit
	instanceVariableNames: 'value'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #Deposit category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 17:47:35'!
AccountTransaction subclass: #Deposit
	instanceVariableNames: 'value'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

AccountTransaction subclass: #Withdraw
	instanceVariableNames: 'value'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #Withdraw category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 17:47:41'!
AccountTransaction subclass: #Withdraw
	instanceVariableNames: 'value'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!
!TransferDeposit methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 17:55:18' prior: 50965633 overrides: 50965528!
affectBalance: aBalance

	^self value + aBalance ! !
!TransferWithdraw methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 17:55:36' prior: 50965639 overrides: 50965528!
affectBalance: aBalance

	^self value - aBalance ! !

AccountTransaction subclass: #TransferType
	instanceVariableNames: 'relatedTransfer'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #TransferType category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 17:55:54'!
AccountTransaction subclass: #TransferType
	instanceVariableNames: 'relatedTransfer'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!
!TransferType methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 17:56:29' prior: 50965533 overrides: 50964391!
value 

	^ relatedTransfer value! !

!methodRemoval: TransferDeposit #value stamp: 'ja 11/14/2020 17:57:01'!
value !

!methodRemoval: TransferWithdraw #value stamp: 'ja 11/14/2020 17:57:08'!
value !

!methodRemoval: TransferWithdraw #initializeFor: stamp: 'ja 11/14/2020 17:57:19'!
initializeFor: aValue

	value _ aValue !

!methodRemoval: TransferDeposit #initializeFor: stamp: 'ja 11/14/2020 17:57:23'!
initializeFor: aValue

	value _ aValue !
!TransferType methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 17:57:51'!
initializaFor: aTransfer

	relatedTransfer _ aTransfer ! !
!TransferType methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 17:58:06'!
initializeFor: aTransfer

	relatedTransfer _ aTransfer ! !

!methodRemoval: TransferType #initializaFor: stamp: 'ja 11/14/2020 17:58:07'!
initializaFor: aTransfer

	relatedTransfer _ aTransfer !
!TransferType class methodsFor: 'no messages' stamp: 'ja 11/14/2020 17:59:22'!
for: aValue

	^ self new initializeFor: aValue ! !

!methodRemoval: TransferDeposit class #for: stamp: 'ja 11/14/2020 17:59:28'!
for: aValue

	^ self new initializeFor: aValue !

!methodRemoval: TransferWithdraw class #for: stamp: 'ja 11/14/2020 17:59:32'!
for: aValue

	^ self new initializeFor: aValue !
!TransferType class methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 18:00:01' prior: 50965891!
for: aTransfer

	^ self new initializeFor: aTransfer ! !

!methodRemoval: TransferTest #test05IsPossibleGettingTransferFromDestinyAccount stamp: 'ja 11/14/2020 18:01:37'!
test05IsPossibleGettingTransferFromDestinyAccount
	
	| transfer sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	transfer  _ Transfer from: sourceAccount to: destinyAccount anAmountOf: 2.
	
	self assert: destinyAccount transfers includes: transfer . !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 18:08:27' prior: 50965785!
test05TransferValueIsNotReplicated
	
	| transfer sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	transfer  _ Transfer from: sourceAccount to: destinyAccount anAmountOf: 100.
	
	! !
!Transfer methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 18:10:08'!
changeValueTo: aNewValue

	value _ aNewValue 

	! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 18:10:44' prior: 50965923!
test05TransferValueIsNotReplicated
	
	| transfer sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	transfer  _ Transfer from: sourceAccount to: destinyAccount anAmountOf: 100.
	
	transfer changeValueTo: 10.
	
	! !
!Transfer methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 18:11:16' prior: 50965934!
changeValueTo: aNewValue
	
	value _ aNewValue 

	! !
!Transfer methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 18:12:23' prior: 50965951!
changeValueTo: aNewValue
	" for testing pourposite only "
	value _ aNewValue 

	! !
!Transfer methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 18:12:57' prior: 50965956!
changeValueTo: aNewValue
	" for testing purpose only "
	value _ aNewValue 

	! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 18:13:42' prior: 50965939!
test05TransferValueIsNotReplicated
	
	| transfer sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	transfer  _ Transfer from: sourceAccount to: destinyAccount anAmountOf: 100.
	
	self assert: -100 equals: sourceAccount balance.
	self assert: 100 equals: destinyAccount balance.
		
	transfer changeValueTo: 10.
	
	! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 18:14:14' prior: 50965968!
test05TransferValueIsNotReplicated
	
	| transfer sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	transfer  _ Transfer from: sourceAccount to: destinyAccount anAmountOf: 100.
	
	self assert: -100 equals: sourceAccount balance.
	self assert: 100 equals: destinyAccount balance.
		
	transfer changeValueTo: 10.
	
	self assert: -10 equals: sourceAccount balance.
	self assert: 10 equals: destinyAccount balance.
	! !

!testRun: #TransferTest #test05TransferValueIsNotReplicated stamp: 'ja 11/14/2020 18:14:54'!
FAILURE!

!testRun: #TransferTest #test05TransferValueIsNotReplicated stamp: 'ja 11/14/2020 18:14:54'!
FAILURE!

!testRun: #TransferTest #test05TransferValueIsNotReplicated stamp: 'ja 11/14/2020 18:15:07'!
FAILURE!

!testRun: #TransferTest #test01TransferAffectsSourceAndDestinyBalance stamp: 'ja 11/14/2020 18:15:42'!
FAILURE!

!testRun: #TransferTest #test01TransferAffectsSourceAndDestinyBalance stamp: 'ja 11/14/2020 18:15:42'!
FAILURE!
!AccountTransaction class methodsFor: 'instance creation' stamp: 'ja 11/14/2020 18:19:14' prior: 50964409!
register: aValueOrTransfer on: account

	| transaction |
	
	transaction := self for: aValueOrTransfer.
	account register: transaction.
		
	^ transaction! !

!testRun: #TransferTest #test01TransferAffectsSourceAndDestinyBalance stamp: 'ja 11/14/2020 18:19:57'!
FAILURE!

!testRun: #TransferTest #test01TransferAffectsSourceAndDestinyBalance stamp: 'ja 11/14/2020 18:19:57'!
FAILURE!
!Transfer methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 18:22:36' prior: 50965513!
initializeFrom: aSourceAccount to: aDestinyAccount anAmountOf: aValueToTransfer 

	depositMade _ TransferDeposit register: self on: aDestinyAccount .
	withdrawMade _ TransferWithdraw register: self on: aSourceAccount .
	
	value _ aValueToTransfer .! !

!testRun: #TransferTest #test01TransferAffectsSourceAndDestinyBalance stamp: 'ja 11/14/2020 18:22:51'!
FAILURE!

!testRun: #TransferTest #test02CanNotTransferAnAmountOfZeroErrorDescription stamp: 'ja 11/14/2020 18:22:51'!
PASSED!

!testRun: #TransferTest #test03CanNotTransferANegativeAmountErrorDescription stamp: 'ja 11/14/2020 18:22:51'!
PASSED!

!testRun: #TransferTest #test04TransferIsRegisteredIntoInvolvedAccounts stamp: 'ja 11/14/2020 18:22:51'!
PASSED!

!testRun: #TransferTest #test05TransferValueIsNotReplicated stamp: 'ja 11/14/2020 18:22:51'!
FAILURE!

!testRun: #TransferTest #test01TransferAffectsSourceAndDestinyBalance stamp: 'ja 11/14/2020 18:23:00'!
FAILURE!

!testRun: #TransferTest #test01TransferAffectsSourceAndDestinyBalance stamp: 'ja 11/14/2020 18:23:00'!
FAILURE!
!TransferWithdraw methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 18:30:32' prior: 50965841 overrides: 50965528!
affectBalance: aBalance

	^ aBalance - self value ! !

!testRun: #TransferTest #test01TransferAffectsSourceAndDestinyBalance stamp: 'ja 11/14/2020 18:30:34'!
PASSED!
!TransferDeposit methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 18:30:47' prior: 50965835 overrides: 50965528!
affectBalance: aBalance

	^ aBalance + self value ! !

!testRun: #TransferTest #test01TransferAffectsSourceAndDestinyBalance stamp: 'ja 11/14/2020 18:30:51'!
PASSED!

!testRun: #TransferTest #test05TransferValueIsNotReplicated stamp: 'ja 11/14/2020 18:30:54'!
PASSED!

!testRun: #TransferTest #test01TransferAffectsSourceAndDestinyBalance stamp: 'ja 11/14/2020 18:30:58'!
PASSED!

!testRun: #TransferTest #test02CanNotTransferAnAmountOfZeroErrorDescription stamp: 'ja 11/14/2020 18:30:58'!
PASSED!

!testRun: #TransferTest #test03CanNotTransferANegativeAmountErrorDescription stamp: 'ja 11/14/2020 18:30:58'!
PASSED!

!testRun: #TransferTest #test04TransferIsRegisteredIntoInvolvedAccounts stamp: 'ja 11/14/2020 18:30:58'!
PASSED!

!testRun: #TransferTest #test05TransferValueIsNotReplicated stamp: 'ja 11/14/2020 18:30:58'!
PASSED!
!Transfer methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 18:33:42' prior: 50965962!
changeValueTo: aNewValue
	
	" Ya que no existe un mapeo con la realidad entre este mensaje y una verdadera transferencia bancaria
	afirmamos que este no hace a la esencia de Transfer pero lo incorporamos para poder testear que el valor
	de las transferencias no est� replicado "
	
	value _ aNewValue 

	! !
!Transfer methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 18:36:27' prior: 50966110!
changeValueTo: aNewValue
	
	" Ya que no existe un mapeo con la realidad entre este mensaje y una verdadera transferencia bancaria
	afirmamos que �ste no hace a la esencia de Transfer pero lo incorporamos para poder testear que el valor
	de las transferencias no est� replicado "
	
	value _ aNewValue 

	! !

!testRun: #TransferTest #test01TransferAffectsSourceAndDestinyBalance stamp: 'ja 11/14/2020 18:43:41'!
PASSED!

!testRun: #TransferTest #test02CanNotTransferAnAmountOfZeroErrorDescription stamp: 'ja 11/14/2020 18:43:41'!
PASSED!

!testRun: #TransferTest #test03CanNotTransferANegativeAmountErrorDescription stamp: 'ja 11/14/2020 18:43:41'!
PASSED!

!testRun: #TransferTest #test04TransferIsRegisteredIntoInvolvedAccounts stamp: 'ja 11/14/2020 18:43:41'!
PASSED!

!testRun: #TransferTest #test05TransferValueIsNotReplicated stamp: 'ja 11/14/2020 18:43:41'!
PASSED!

----STARTUP---- (14 November 2020 19:04:03) as /home/jampuero/Documentos/isw1/linux64/CuisUniversity-4365.image!


!classDefinition: #TransferDeposit category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 19:04:16'!
TransferCollaborators subclass: #TransferDeposit
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #TransferDeposit category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 19:04:17'!
TransferCollaborators subclass: #TransferDeposit
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #TransferWithdraw category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 19:04:17'!
TransferCollaborators subclass: #TransferWithdraw
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #TransferWithdraw category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 19:04:17'!
TransferCollaborators subclass: #TransferWithdraw
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!
!ReceptiveAccount methodsFor: 'transactions' stamp: 'ja 11/14/2020 15:30:39' prior: 50964345!
register: aTransaction

	transactions add: aTransaction 
! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:24:43' prior: 50964075!
test01TransferHasSourceDestinyAndValueWhenCreated
	
	| transfer sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	transfer  _ Transfer from: sourceAccount to: destinyAccount anAmountOf: 2.
	
	self assert: transfer hasSource.

	
	! !

!classDefinition: #TransferType category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 19:04:17'!
AccountTransaction subclass: #TransferType
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #TransferType category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 19:04:17'!
AccountTransaction subclass: #TransferType
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:29:11'!
test01TransferAffectsSourceAndDestinyBalance
	
	| transfer sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	transfer  _ Transfer from: sourceAccount to: destinyAccount anAmountOf: 100.
	
	self assert: sourceAccount balance 

	
	! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:31:05' prior: 50966222!
test01TransferAffectsSourceAndDestinyBalance
	
	| transfer sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self assert: 0 equals: (sourceAccount balance).
	self assert: 0 equals: (destinyAccount balance).
	
	transfer  _ Transfer from: sourceAccount to: destinyAccount anAmountOf: 100.
	
	self assert: -100 equals: (sourceAccount balance).
	self assert: 100 equals: (destinyAccount balance).
	self assert: 100 equals: transfer value.	
	! !

!methodRemoval: TransferTest #test01TransferHasSourceDestinyAndValueWhenCreated stamp: 'ja 11/14/2020 19:04:17'!
test01TransferHasSourceDestinyAndValueWhenCreated
	
	| transfer sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	transfer  _ Transfer from: sourceAccount to: destinyAccount anAmountOf: 2.
	
	self assert: transfer hasSource.

	
	!
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:31:42' prior: 50966235!
test01TransferAffectsSourceAndDestinyBalance
	
	| transfer sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self assert: 0 equals: sourceAccount balance.
	self assert: 0 equals: destinyAccount balance.
	
	transfer  _ Transfer from: sourceAccount to: destinyAccount anAmountOf: 100.
	
	self assert: -100 equals: sourceAccount balance.
	self assert: 100 equals: destinyAccount balance.
	self assert: 100 equals: transfer value.	
	! !
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:31:57'!
from: aReceptiveAccount to: aReceptiveAccount2 anAmountOf: aSmallInteger 
	self shouldBeImplemented.! !

!classDefinition: 'Transfer class' category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 19:04:17'!
Transfer class
	instanceVariableNames: 'value'!
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:34:30' prior: 50966286!
from: aReceptiveAccount to: aReceptiveAccount2 anAmountOf: aSmallInteger 
	
	Deposit register: aSmallInteger on: aReceptiveAccount2 .
	Withdraw register: aSmallInteger on: aReceptiveAccount .
	value _ aSmallInteger .! !
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:34:50' prior: 50966297!
from: aSourceAccount to: aReceptiveAccount2 anAmountOf: aSmallInteger 
	
	Deposit register: aSmallInteger on: aReceptiveAccount2 .
	Withdraw register: aSmallInteger on: aSourceAccount .
	value _ aSmallInteger .! !
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:35:04' prior: 50966307!
from: aSourceAccount to: aDestinyAccount anAmountOf: aSmallInteger 
	
	Deposit register: aSmallInteger on: aDestinyAccount .
	Withdraw register: aSmallInteger on: aSourceAccount .
	value _ aSmallInteger .! !
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:35:29' prior: 50966317!
from: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer 
	
	Deposit register: valueToTransfer on: aDestinyAccount .
	Withdraw register: valueToTransfer on: aSourceAccount .
	value _ valueToTransfer .! !

!classDefinition: #Transfer category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 19:04:17'!
Object subclass: #Transfer
	instanceVariableNames: 'value'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!
!Transfer methodsFor: 'no messages' stamp: 'ja 11/14/2020 16:36:17' overrides: 16896425!
initialize

	value _ 0! !
!Transfer methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:36:58' overrides: 16881508!
value 

	^ value ! !

!methodRemoval: Transfer class #from:to:anAmountOf: stamp: 'ja 11/14/2020 19:04:17'!
from: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer 
	
	Deposit register: valueToTransfer on: aDestinyAccount .
	Withdraw register: valueToTransfer on: aSourceAccount .
	value _ valueToTransfer .!
!Transfer methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:38:06'!
from: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer 
	
	Deposit register: valueToTransfer on: aDestinyAccount .
	Withdraw register: valueToTransfer on: aSourceAccount .
	value _ valueToTransfer .! !

!classDefinition: 'Transfer class' category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 19:04:17'!
Transfer class
	instanceVariableNames: ''!

!classDefinition: 'Transfer class' category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 19:04:17'!
Transfer class
	instanceVariableNames: ''!
!Transfer class methodsFor: 'no messages' stamp: 'ja 11/14/2020 16:40:54'!
from: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer 

	Transfer new initializeFrom: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer .! !
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:41:02' prior: 50966380!
from: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer 

	^ Transfer new initializeFrom: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer .! !
!Transfer methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:41:20'!
initializeFrom: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer 

	Deposit register: valueToTransfer on: aDestinyAccount .
	Withdraw register: valueToTransfer on: aSourceAccount .
	value _ valueToTransfer .! !

!methodRemoval: Transfer #from:to:anAmountOf: stamp: 'ja 11/14/2020 19:04:17'!
from: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer 
	
	Deposit register: valueToTransfer on: aDestinyAccount .
	Withdraw register: valueToTransfer on: aSourceAccount .
	value _ valueToTransfer .!

!methodRemoval: Transfer #initialize stamp: 'ja 11/14/2020 19:04:17'!
initialize

	value _ 0!
!Transfer methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:42:09' prior: 50966397!
initializeFrom: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer 

	Deposit register: valueToTransfer on: aDestinyAccount .
	Withdraw register: valueToTransfer on: aSourceAccount .
	
	value _ valueToTransfer .! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:42:27' prior: 50966267!
test01TransferAffectsSourceAndDestinyBalance
	
	| transfer sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self assert: 0 equals: sourceAccount balance.
	self assert: 0 equals: destinyAccount balance.
	
	transfer  _ Transfer from: sourceAccount to: destinyAccount anAmountOf: 100.
	
	self assert: -100 equals: sourceAccount balance.
	self assert: 100 equals: destinyAccount balance.
! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:42:57' prior: 50966431!
test01TransferAffectsSourceAndDestinyBalance
	
	| sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self assert: 0 equals: sourceAccount balance.
	self assert: 0 equals: destinyAccount balance.
	
	Transfer from: sourceAccount to: destinyAccount anAmountOf: 100.
	
	self assert: -100 equals: sourceAccount balance.
	self assert: 100 equals: destinyAccount balance.
! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:46:53' prior: 50964090!
test02IsPossibleGettingSourceAccountFromTransfer
	
	| sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self assert: 0 equals: sourceAccount balance.
	self assert: 0 equals: destinyAccount balance.
	
	self should: [Transfer from: sourceAccount to: destinyAccount anAmountOf: 0. self fail] 
		raise:  Error
		withMessageText: Transfer canNotTransferAnAmountOfZeroErrorDescription.! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:47:27'!
test02CanNotTransferAnAmountOfZero
	
	| sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self assert: 0 equals: sourceAccount balance.
	self assert: 0 equals: destinyAccount balance.
	
	self should: [Transfer from: sourceAccount to: destinyAccount anAmountOf: 0. self fail] 
		raise:  Error
		withMessageText: Transfer canNotTransferAnAmountOfZeroErrorDescription.! !

!methodRemoval: TransferTest #test02IsPossibleGettingSourceAccountFromTransfer stamp: 'ja 11/14/2020 19:04:17'!
test02IsPossibleGettingSourceAccountFromTransfer
	
	| sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self assert: 0 equals: sourceAccount balance.
	self assert: 0 equals: destinyAccount balance.
	
	self should: [Transfer from: sourceAccount to: destinyAccount anAmountOf: 0. self fail] 
		raise:  Error
		withMessageText: Transfer canNotTransferAnAmountOfZeroErrorDescription.!
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:47:42'!
canNotTransferAnAmountOfZeroErrorDescription
	self shouldBeImplemented.! !
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:48:16' prior: 50966517!
canNotTransferAnAmountOfZeroErrorDescription
	
	^ 'Can not transfer an amount of zero'! !
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:49:41' prior: 50966389!
from: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer 

	(valueToTransfer = 0) ifTrue: [ self error: self canNotTransferAnAmountOfZeroErrorDescription ].
		
	^ Transfer new initializeFrom: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer .! !

!methodRemoval: TransferTest #test02CanNotTransferAnAmountOfZero stamp: 'ja 11/14/2020 19:04:17'!
test02CanNotTransferAnAmountOfZero
	
	| sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self assert: 0 equals: sourceAccount balance.
	self assert: 0 equals: destinyAccount balance.
	
	self should: [Transfer from: sourceAccount to: destinyAccount anAmountOf: 0. self fail] 
		raise:  Error
		withMessageText: Transfer canNotTransferAnAmountOfZeroErrorDescription.!
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:51:45' prior: 50964103!
test03IsPossibleGettingDestinyAccountFromTransfer
	
	| sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self assert: 0 equals: sourceAccount balance.
	self assert: 0 equals: destinyAccount balance.
	
	self should: [Transfer from: sourceAccount to: destinyAccount anAmountOf: 0.] 
		raise: Error
		withMessageText: Transfer canNotTransferAnAmountOfZeroErrorDescription .! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:51:52' prior: 50966558!
test03IsPossibleGettingDestinyAccountFromTransfer
	
	| sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self assert: 0 equals: sourceAccount balance.
	self assert: 0 equals: destinyAccount balance.
	
	self should: [Transfer from: sourceAccount to: destinyAccount anAmountOf: 0. self fail] 
		raise: Error
		withMessageText: Transfer canNotTransferAnAmountOfZeroErrorDescription .! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:51:58' prior: 50966575!
test03IsPossibleGettingDestinyAccountFromTransfer
	
	| sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self should: [Transfer from: sourceAccount to: destinyAccount anAmountOf: 0. self fail] 
		raise: Error
		withMessageText: Transfer canNotTransferAnAmountOfZeroErrorDescription .! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:52:16'!
test02CanNotTransferAnAmountOfZeroErrorDescription 
	
	| sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self should: [Transfer from: sourceAccount to: destinyAccount anAmountOf: 0. self fail] 
		raise: Error
		withMessageText: Transfer canNotTransferAnAmountOfZeroErrorDescription .! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:53:12'!
test03CanNotTransferANegativeAmountErrorDescription
	
	| sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self should: [Transfer from: sourceAccount to: destinyAccount anAmountOf: -100. self fail] 
		raise: Error
		withMessageText: Transfer canNotTransferANegativeAmountErrorDescription .! !
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:53:24'!
canNotTransferANegativeAmountErrorDescription
	self shouldBeImplemented.! !
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:54:04' prior: 50966635!
canNotTransferANegativeAmountErrorDescription
	
	^ ' Can not transfer a negative amount '! !
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:55:01' prior: 50966529!
from: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer 

	(valueToTransfer = 0) ifTrue: [ self error: self canNotTransferAnAmountOfZeroErrorDescription ].
	(valueToTransfer  < 0) ifTrue: [ self error: self canNotTransferANegativeAmountErrorDescription ].
		
	^ Transfer new initializeFrom: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer .! !

!methodRemoval: TransferTest #test03IsPossibleGettingDestinyAccountFromTransfer stamp: 'ja 11/14/2020 19:04:17'!
test03IsPossibleGettingDestinyAccountFromTransfer
	
	| sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self should: [Transfer from: sourceAccount to: destinyAccount anAmountOf: 0. self fail] 
		raise: Error
		withMessageText: Transfer canNotTransferAnAmountOfZeroErrorDescription .!
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 17:03:02'!
test04TransferIsRegisteredIntoInvolvedAccount
	
	| sourceAccount destinyAccount transfer |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	transfer _ Transfer from: sourceAccount to: destinyAccount anAmountOf: 100.
	
	self assert: sourceAccount transactions includes: transfer depositMade. 
	
	self assert: destinyAccount transactions includes: transfer withdrawMade.
	
	
	! !

!methodRemoval: TransferTest #test04IsPossibleGettingTransferFromSourceAccount stamp: 'ja 11/14/2020 19:04:17'!
test04IsPossibleGettingTransferFromSourceAccount
	
	| transfer sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	transfer  _ Transfer from: sourceAccount to: destinyAccount anAmountOf: 2.
	
	self assert: sourceAccount transfers includes: transfer . !
!Transfer methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 17:03:36'!
depositMade
	self shouldBeImplemented.! !
!Transfer methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 17:03:59' prior: 50966705!
depositMade
	
	^ nil! !

!classDefinition: #Transfer category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 19:04:18'!
Object subclass: #Transfer
	instanceVariableNames: 'value depositMade'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #Transfer category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 19:04:18'!
Object subclass: #Transfer
	instanceVariableNames: 'value depositMade withdrawMade'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!
!Transfer methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 17:05:37' prior: 50966420!
initializeFrom: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer 

	depositMade _ TransferDeposit register: valueToTransfer on: aDestinyAccount .
	withdrawMade _ TransferWithdraw register: valueToTransfer on: aSourceAccount .
	
	value _ valueToTransfer .! !
!TransferType methodsFor: 'no messages' stamp: 'ja 11/14/2020 17:06:54' overrides: 50964395!
affectBalance: aBalance

	self subclassResponsibility ! !
!TransferType methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 17:07:07' overrides: 50964391!
value 

	self subclassResponsibility ! !
!TransferDeposit methodsFor: 'no messages' stamp: 'ja 11/14/2020 17:07:24' overrides: 50964395!
affectBalance: aBalance! !
!TransferDeposit methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 17:07:42' overrides: 50964391!
value ! !
!TransferWithdraw methodsFor: 'no messages' stamp: 'ja 11/14/2020 17:08:48' overrides: 50964395!
affectBalance: aBalance! !
!TransferWithdraw methodsFor: 'nil' stamp: 'ja 11/14/2020 17:08:58' overrides: 50964391!
value ! !

!classDefinition: #Deposit category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 19:04:18'!
AccountTransaction subclass: #Deposit
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #Deposit category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 19:04:18'!
AccountTransaction subclass: #Deposit
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #Withdraw category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 19:04:18'!
AccountTransaction subclass: #Withdraw
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #Withdraw category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 19:04:18'!
AccountTransaction subclass: #Withdraw
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!
!TransferDeposit methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 17:13:02' prior: 50966752 overrides: 50964395!
affectBalance: aBalance

	
	^aBalance ! !
!TransferWithdraw methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 17:13:13' prior: 50966761 overrides: 50964395!
affectBalance: aBalance

	
	^aBalance ! !
!TransferDeposit methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 17:13:29' prior: 50966799 overrides: 50964395!
affectBalance: aBalance

	
	^aBalance + value! !
!TransferWithdraw methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 17:13:37' prior: 50966805 overrides: 50964395!
affectBalance: aBalance

	
	^aBalance - value! !
!TransferDeposit methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 17:15:41' prior: 50966811 overrides: 50964395!
affectBalance: aBalance

	^aBalance + value! !
!TransferWithdraw methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 17:28:28' prior: 50966817 overrides: 50964395!
affectBalance: aBalance

	^aBalance - value! !
!TransferDeposit class methodsFor: 'no messages' stamp: 'ja 11/14/2020 17:30:42'!
for: aValue

	^ self new initializeFor: aValue ! !
!TransferWithdraw class methodsFor: 'no messages' stamp: 'ja 11/14/2020 17:30:47'!
for: aValue

	^ self new initializeFor: aValue ! !
!TransferDeposit methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 17:31:17'!
initializeFor: aValue

	value := aValue ! !
!TransferWithdraw methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 17:31:23'!
initializeFor: aValue

	value := aValue ! !
!TransferWithdraw methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 17:31:31' prior: 50966849!
initializeFor: aValue

	value _ aValue ! !
!TransferDeposit methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 17:31:42' prior: 50966844!
initializeFor: aValue

	value _ aValue ! !
!Transfer methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 17:33:24' prior: 50966710!
depositMade
	
	^ depositMade ! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 17:34:30' prior: 50966676!
test04TransferIsRegisteredIntoInvolvedAccount
	
	| sourceAccount destinyAccount transfer |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	transfer _ Transfer from: sourceAccount to: destinyAccount anAmountOf: 100.
	
	self assert: sourceAccount transactions includes: transfer withdrawMade. 
	
	self assert: destinyAccount transactions includes: transfer depositMade.
	
	
	! !
!Transfer methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 17:36:36'!
withdrawMade
	self shouldBeImplemented.
	^withdrawMade! !
!Transfer methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 17:36:40' prior: 50966885!
withdrawMade
	
	^withdrawMade! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 17:38:11'!
test04TransferIsRegisteredIntoInvolvedAccounts
	
	| sourceAccount destinyAccount transfer |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	transfer _ Transfer from: sourceAccount to: destinyAccount anAmountOf: 100.
	
	self assert: sourceAccount transactions includes: transfer withdrawMade. 
	
	self assert: destinyAccount transactions includes: transfer depositMade.
	
	
	! !

!methodRemoval: TransferTest #test04TransferIsRegisteredIntoInvolvedAccount stamp: 'ja 11/14/2020 19:04:18'!
test04TransferIsRegisteredIntoInvolvedAccount
	
	| sourceAccount destinyAccount transfer |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	transfer _ Transfer from: sourceAccount to: destinyAccount anAmountOf: 100.
	
	self assert: sourceAccount transactions includes: transfer withdrawMade. 
	
	self assert: destinyAccount transactions includes: transfer depositMade.
	
	
	!
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 17:46:01'!
test05TransferValueIsNotReplicated
	
	| transfer sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	transfer  _ Transfer from: sourceAccount to: destinyAccount anAmountOf: 100.
	
	sourceAccount transactions ! !

!classDefinition: #AccountTransaction category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 19:04:18'!
Object subclass: #AccountTransaction
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #AccountTransaction category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 19:04:18'!
Object subclass: #AccountTransaction
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #Deposit category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 19:04:18'!
AccountTransaction subclass: #Deposit
	instanceVariableNames: 'value'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #Deposit category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 19:04:18'!
AccountTransaction subclass: #Deposit
	instanceVariableNames: 'value'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #Withdraw category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 19:04:18'!
AccountTransaction subclass: #Withdraw
	instanceVariableNames: 'value'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #Withdraw category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 19:04:18'!
AccountTransaction subclass: #Withdraw
	instanceVariableNames: 'value'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!
!TransferDeposit methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 17:55:18' prior: 50966823 overrides: 50964395!
affectBalance: aBalance

	^self value + aBalance ! !
!TransferWithdraw methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 17:55:36' prior: 50966829 overrides: 50964395!
affectBalance: aBalance

	^self value - aBalance ! !

!classDefinition: #TransferType category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 19:04:18'!
AccountTransaction subclass: #TransferType
	instanceVariableNames: 'relatedTransfer'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #TransferType category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 19:04:18'!
AccountTransaction subclass: #TransferType
	instanceVariableNames: 'relatedTransfer'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!
!TransferType methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 17:56:29' prior: 50966747 overrides: 50964391!
value 

	^ relatedTransfer value! !

!methodRemoval: TransferDeposit #value stamp: 'ja 11/14/2020 19:04:18'!
value !

!methodRemoval: TransferWithdraw #value stamp: 'ja 11/14/2020 19:04:18'!
value !

!methodRemoval: TransferWithdraw #initializeFor: stamp: 'ja 11/14/2020 19:04:18'!
initializeFor: aValue

	value _ aValue !

!methodRemoval: TransferDeposit #initializeFor: stamp: 'ja 11/14/2020 19:04:18'!
initializeFor: aValue

	value _ aValue !
!TransferType methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 17:57:51'!
initializaFor: aTransfer

	relatedTransfer _ aTransfer ! !
!TransferType methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 17:58:06'!
initializeFor: aTransfer

	relatedTransfer _ aTransfer ! !

!methodRemoval: TransferType #initializaFor: stamp: 'ja 11/14/2020 19:04:18'!
initializaFor: aTransfer

	relatedTransfer _ aTransfer !
!TransferType class methodsFor: 'no messages' stamp: 'ja 11/14/2020 17:59:22'!
for: aValue

	^ self new initializeFor: aValue ! !

!methodRemoval: TransferDeposit class #for: stamp: 'ja 11/14/2020 19:04:18'!
for: aValue

	^ self new initializeFor: aValue !

!methodRemoval: TransferWithdraw class #for: stamp: 'ja 11/14/2020 19:04:18'!
for: aValue

	^ self new initializeFor: aValue !
!TransferType class methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 18:00:01' prior: 50967044!
for: aTransfer

	^ self new initializeFor: aTransfer ! !

!methodRemoval: TransferTest #test05IsPossibleGettingTransferFromDestinyAccount stamp: 'ja 11/14/2020 19:04:19'!
test05IsPossibleGettingTransferFromDestinyAccount
	
	| transfer sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	transfer  _ Transfer from: sourceAccount to: destinyAccount anAmountOf: 2.
	
	self assert: destinyAccount transfers includes: transfer . !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 18:08:27' prior: 50966926!
test05TransferValueIsNotReplicated
	
	| transfer sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	transfer  _ Transfer from: sourceAccount to: destinyAccount anAmountOf: 100.
	
	! !
!Transfer methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 18:10:08'!
changeValueTo: aNewValue

	value _ aNewValue 

	! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 18:10:44' prior: 50967076!
test05TransferValueIsNotReplicated
	
	| transfer sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	transfer  _ Transfer from: sourceAccount to: destinyAccount anAmountOf: 100.
	
	transfer changeValueTo: 10.
	
	! !
!Transfer methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 18:11:16' prior: 50967087!
changeValueTo: aNewValue
	
	value _ aNewValue 

	! !
!Transfer methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 18:12:23' prior: 50967104!
changeValueTo: aNewValue
	" for testing pourposite only "
	value _ aNewValue 

	! !
!Transfer methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 18:12:57' prior: 50967109!
changeValueTo: aNewValue
	" for testing purpose only "
	value _ aNewValue 

	! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 18:13:42' prior: 50967092!
test05TransferValueIsNotReplicated
	
	| transfer sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	transfer  _ Transfer from: sourceAccount to: destinyAccount anAmountOf: 100.
	
	self assert: -100 equals: sourceAccount balance.
	self assert: 100 equals: destinyAccount balance.
		
	transfer changeValueTo: 10.
	
	! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 18:14:14' prior: 50967121!
test05TransferValueIsNotReplicated
	
	| transfer sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	transfer  _ Transfer from: sourceAccount to: destinyAccount anAmountOf: 100.
	
	self assert: -100 equals: sourceAccount balance.
	self assert: 100 equals: destinyAccount balance.
		
	transfer changeValueTo: 10.
	
	self assert: -10 equals: sourceAccount balance.
	self assert: 10 equals: destinyAccount balance.
	! !
!AccountTransaction class methodsFor: 'instance creation' stamp: 'ja 11/14/2020 18:19:14' prior: 50964409!
register: aValueOrTransfer on: account

	| transaction |
	
	transaction := self for: aValueOrTransfer.
	account register: transaction.
		
	^ transaction! !
!Transfer methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 18:22:36' prior: 50966730!
initializeFrom: aSourceAccount to: aDestinyAccount anAmountOf: aValueToTransfer 

	depositMade _ TransferDeposit register: self on: aDestinyAccount .
	withdrawMade _ TransferWithdraw register: self on: aSourceAccount .
	
	value _ aValueToTransfer .! !
!TransferWithdraw methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 18:30:32' prior: 50966991 overrides: 50964395!
affectBalance: aBalance

	^ aBalance - self value ! !
!TransferDeposit methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 18:30:47' prior: 50966985 overrides: 50964395!
affectBalance: aBalance

	^ aBalance + self value ! !
!Transfer methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 18:33:42' prior: 50967115!
changeValueTo: aNewValue
	
	" Ya que no existe un mapeo con la realidad entre este mensaje y una verdadera transferencia bancaria
	afirmamos que este no hace a la esencia de Transfer pero lo incorporamos para poder testear que el valor
	de las transferencias no est� replicado "
	
	value _ aNewValue 

	! !
!Transfer methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 18:36:27' prior: 50967187!
changeValueTo: aNewValue
	
	" Ya que no existe un mapeo con la realidad entre este mensaje y una verdadera transferencia bancaria
	afirmamos que �ste no hace a la esencia de Transfer pero lo incorporamos para poder testear que el valor
	de las transferencias no est� replicado "
	
	value _ aNewValue 

	! !

!testRun: #TransferTest #test01TransferAffectsSourceAndDestinyBalance stamp: 'ja 11/14/2020 19:05:19'!
ERROR!

!testRun: #TransferTest #test02CanNotTransferAnAmountOfZeroErrorDescription stamp: 'ja 11/14/2020 19:05:19'!
PASSED!

!testRun: #TransferTest #test03CanNotTransferANegativeAmountErrorDescription stamp: 'ja 11/14/2020 19:05:19'!
PASSED!

!testRun: #TransferTest #test04TransferIsRegisteredIntoInvolvedAccounts stamp: 'ja 11/14/2020 19:05:19'!
ERROR!

!testRun: #TransferTest #test05TransferValueIsNotReplicated stamp: 'ja 11/14/2020 19:05:19'!
ERROR!

!testRun: #TransferTest #test01TransferAffectsSourceAndDestinyBalance stamp: 'ja 11/14/2020 19:05:49'!
ERROR!

!testRun: #TransferTest #test02CanNotTransferAnAmountOfZeroErrorDescription stamp: 'ja 11/14/2020 19:05:49'!
PASSED!

!testRun: #TransferTest #test03CanNotTransferANegativeAmountErrorDescription stamp: 'ja 11/14/2020 19:05:49'!
PASSED!

!testRun: #TransferTest #test04TransferIsRegisteredIntoInvolvedAccounts stamp: 'ja 11/14/2020 19:05:49'!
ERROR!

!testRun: #TransferTest #test05TransferValueIsNotReplicated stamp: 'ja 11/14/2020 19:05:49'!
ERROR!

!testRun: #PortfolioTest #test01BalanceOfPortfolioWithoutAccountsIsZero stamp: 'ja 11/14/2020 19:06:18'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithOneAccountIsAccountBalance stamp: 'ja 11/14/2020 19:06:18'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioIsCalculatedRecursivelyOnPortfolios stamp: 'ja 11/14/2020 19:06:18'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithoutAccountsHasNoRegisteredTransaction stamp: 'ja 11/14/2020 19:06:18'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredItsAccountsTransactions stamp: 'ja 11/14/2020 19:06:18'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioLooksForRegisteredTransactionsRecursively stamp: 'ja 11/14/2020 19:06:18'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioHasNoTransactionWhenHasNoAccounts stamp: 'ja 11/14/2020 19:06:18'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTransactionsIncludesAllItsAccountsTransactions stamp: 'ja 11/14/2020 19:06:18'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioTransactionsAreCalculatedRecursively stamp: 'ja 11/14/2020 19:06:18'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCanNotIncludeTheSameAccountMoreThanOnce stamp: 'ja 11/14/2020 19:06:18'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCanNotIncludeAccountOfItsPortfolios stamp: 'ja 11/14/2020 19:06:18'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioCanNotIncludeItself stamp: 'ja 11/14/2020 19:06:18'!
PASSED!

!testRun: #PortfolioTest #test13ComposedPortfolioCanNotHaveParentPortfolioAccount stamp: 'ja 11/14/2020 19:06:18'!
PASSED!

!testRun: #PortfolioTest #test14ComposedPortfolioCanNotHaveAccountOfAnyRootParentRecursively stamp: 'ja 11/14/2020 19:06:18'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotIncludeAnyOfTheComposedAccountOfPortfolioToAdd stamp: 'ja 11/14/2020 19:06:18'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'ja 11/14/2020 19:06:20'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'ja 11/14/2020 19:06:20'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'ja 11/14/2020 19:06:20'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'ja 11/14/2020 19:06:20'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'ja 11/14/2020 19:06:20'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'ja 11/14/2020 19:06:20'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'ja 11/14/2020 19:06:20'!
PASSED!

!testRun: #TransferTest #test01TransferAffectsSourceAndDestinyBalance stamp: 'ja 11/14/2020 19:06:22'!
ERROR!

!testRun: #TransferTest #test02CanNotTransferAnAmountOfZeroErrorDescription stamp: 'ja 11/14/2020 19:06:22'!
PASSED!

!testRun: #TransferTest #test03CanNotTransferANegativeAmountErrorDescription stamp: 'ja 11/14/2020 19:06:22'!
PASSED!

!testRun: #TransferTest #test04TransferIsRegisteredIntoInvolvedAccounts stamp: 'ja 11/14/2020 19:06:22'!
ERROR!

!testRun: #TransferTest #test05TransferValueIsNotReplicated stamp: 'ja 11/14/2020 19:06:22'!
ERROR!

!testRun: #TransferTest #test03CanNotTransferANegativeAmountErrorDescription stamp: 'ja 11/14/2020 19:08:34'!
PASSED!

!testRun: #TransferTest #test01TransferAffectsSourceAndDestinyBalance stamp: 'ja 11/14/2020 19:09:15'!
ERROR!

!testRun: #TransferTest #test01TransferAffectsSourceAndDestinyBalance stamp: 'ja 11/14/2020 19:09:15'!
ERROR!

!testRun: #TransferTest #test01TransferAffectsSourceAndDestinyBalance stamp: 'ja 11/14/2020 19:10:31'!
ERROR!

!testRun: #TransferTest #test01TransferAffectsSourceAndDestinyBalance stamp: 'ja 11/14/2020 19:10:31'!
ERROR!

!testRun: #TransferTest #test01TransferAffectsSourceAndDestinyBalance stamp: 'ja 11/14/2020 19:10:56'!
ERROR!

!testRun: #TransferTest #test01TransferAffectsSourceAndDestinyBalance stamp: 'ja 11/14/2020 19:11:04'!
ERROR!

!testRun: #TransferTest #test01TransferAffectsSourceAndDestinyBalance stamp: 'ja 11/14/2020 19:11:04'!
ERROR!

!testRun: #TransferTest #test01TransferAffectsSourceAndDestinyBalance stamp: 'ja 11/14/2020 19:11:09'!
ERROR!

!testRun: #TransferTest #test01TransferAffectsSourceAndDestinyBalance stamp: 'ja 11/14/2020 19:11:15'!
ERROR!

!testRun: #TransferTest #test01TransferAffectsSourceAndDestinyBalance stamp: 'ja 11/14/2020 19:11:15'!
ERROR!

!testRun: #TransferTest #test01TransferAffectsSourceAndDestinyBalance stamp: 'ja 11/14/2020 19:11:18'!
ERROR!

!testRun: #TransferTest #test01TransferAffectsSourceAndDestinyBalance stamp: 'ja 11/14/2020 19:11:21'!
ERROR!

!testRun: #TransferTest #test01TransferAffectsSourceAndDestinyBalance stamp: 'ja 11/14/2020 19:11:21'!
ERROR!

!testRun: #TransferTest #test01TransferAffectsSourceAndDestinyBalance stamp: 'ja 11/14/2020 19:12:27'!
ERROR!

!testRun: #TransferTest #test01TransferAffectsSourceAndDestinyBalance stamp: 'ja 11/14/2020 19:12:27'!
ERROR!

----STARTUP---- (14 November 2020 19:14:21) as /home/jampuero/Documentos/isw1/linux64/CuisUniversity-4365.image!


!classDefinition: #TransferDeposit category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 19:14:39'!
TransferCollaborators subclass: #TransferDeposit
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #TransferDeposit category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 19:14:39'!
TransferCollaborators subclass: #TransferDeposit
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #TransferWithdraw category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 19:14:39'!
TransferCollaborators subclass: #TransferWithdraw
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #TransferWithdraw category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 19:14:40'!
TransferCollaborators subclass: #TransferWithdraw
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!
!ReceptiveAccount methodsFor: 'transactions' stamp: 'ja 11/14/2020 15:30:39' prior: 50964345!
register: aTransaction

	transactions add: aTransaction 
! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:24:43' prior: 50964075!
test01TransferHasSourceDestinyAndValueWhenCreated
	
	| transfer sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	transfer  _ Transfer from: sourceAccount to: destinyAccount anAmountOf: 2.
	
	self assert: transfer hasSource.

	
	! !

!classDefinition: #TransferType category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 19:14:40'!
AccountTransaction subclass: #TransferType
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #TransferType category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 19:14:40'!
AccountTransaction subclass: #TransferType
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:29:11'!
test01TransferAffectsSourceAndDestinyBalance
	
	| transfer sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	transfer  _ Transfer from: sourceAccount to: destinyAccount anAmountOf: 100.
	
	self assert: sourceAccount balance 

	
	! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:31:05' prior: 50966222!
test01TransferAffectsSourceAndDestinyBalance
	
	| transfer sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self assert: 0 equals: (sourceAccount balance).
	self assert: 0 equals: (destinyAccount balance).
	
	transfer  _ Transfer from: sourceAccount to: destinyAccount anAmountOf: 100.
	
	self assert: -100 equals: (sourceAccount balance).
	self assert: 100 equals: (destinyAccount balance).
	self assert: 100 equals: transfer value.	
	! !

!methodRemoval: TransferTest #test01TransferHasSourceDestinyAndValueWhenCreated stamp: 'ja 11/14/2020 19:14:40'!
test01TransferHasSourceDestinyAndValueWhenCreated
	
	| transfer sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	transfer  _ Transfer from: sourceAccount to: destinyAccount anAmountOf: 2.
	
	self assert: transfer hasSource.

	
	!
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:31:42' prior: 50966235!
test01TransferAffectsSourceAndDestinyBalance
	
	| transfer sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self assert: 0 equals: sourceAccount balance.
	self assert: 0 equals: destinyAccount balance.
	
	transfer  _ Transfer from: sourceAccount to: destinyAccount anAmountOf: 100.
	
	self assert: -100 equals: sourceAccount balance.
	self assert: 100 equals: destinyAccount balance.
	self assert: 100 equals: transfer value.	
	! !
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:31:57'!
from: aReceptiveAccount to: aReceptiveAccount2 anAmountOf: aSmallInteger 
	self shouldBeImplemented.! !

!classDefinition: 'Transfer class' category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 19:14:40'!
Transfer class
	instanceVariableNames: 'value'!
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:34:30' prior: 50966286!
from: aReceptiveAccount to: aReceptiveAccount2 anAmountOf: aSmallInteger 
	
	Deposit register: aSmallInteger on: aReceptiveAccount2 .
	Withdraw register: aSmallInteger on: aReceptiveAccount .
	value _ aSmallInteger .! !
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:34:50' prior: 50966297!
from: aSourceAccount to: aReceptiveAccount2 anAmountOf: aSmallInteger 
	
	Deposit register: aSmallInteger on: aReceptiveAccount2 .
	Withdraw register: aSmallInteger on: aSourceAccount .
	value _ aSmallInteger .! !
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:35:04' prior: 50966307!
from: aSourceAccount to: aDestinyAccount anAmountOf: aSmallInteger 
	
	Deposit register: aSmallInteger on: aDestinyAccount .
	Withdraw register: aSmallInteger on: aSourceAccount .
	value _ aSmallInteger .! !
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:35:29' prior: 50966317!
from: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer 
	
	Deposit register: valueToTransfer on: aDestinyAccount .
	Withdraw register: valueToTransfer on: aSourceAccount .
	value _ valueToTransfer .! !

!classDefinition: #Transfer category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 19:14:40'!
Object subclass: #Transfer
	instanceVariableNames: 'value'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!
!Transfer methodsFor: 'no messages' stamp: 'ja 11/14/2020 16:36:17' overrides: 16896425!
initialize

	value _ 0! !
!Transfer methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:36:58' overrides: 16881508!
value 

	^ value ! !

!methodRemoval: Transfer class #from:to:anAmountOf: stamp: 'ja 11/14/2020 19:14:40'!
from: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer 
	
	Deposit register: valueToTransfer on: aDestinyAccount .
	Withdraw register: valueToTransfer on: aSourceAccount .
	value _ valueToTransfer .!
!Transfer methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:38:06'!
from: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer 
	
	Deposit register: valueToTransfer on: aDestinyAccount .
	Withdraw register: valueToTransfer on: aSourceAccount .
	value _ valueToTransfer .! !

!classDefinition: 'Transfer class' category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 19:14:40'!
Transfer class
	instanceVariableNames: ''!

!classDefinition: 'Transfer class' category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 19:14:40'!
Transfer class
	instanceVariableNames: ''!
!Transfer class methodsFor: 'no messages' stamp: 'ja 11/14/2020 16:40:54'!
from: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer 

	Transfer new initializeFrom: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer .! !
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:41:02' prior: 50966380!
from: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer 

	^ Transfer new initializeFrom: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer .! !
!Transfer methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:41:20'!
initializeFrom: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer 

	Deposit register: valueToTransfer on: aDestinyAccount .
	Withdraw register: valueToTransfer on: aSourceAccount .
	value _ valueToTransfer .! !

!methodRemoval: Transfer #from:to:anAmountOf: stamp: 'ja 11/14/2020 19:14:40'!
from: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer 
	
	Deposit register: valueToTransfer on: aDestinyAccount .
	Withdraw register: valueToTransfer on: aSourceAccount .
	value _ valueToTransfer .!

!methodRemoval: Transfer #initialize stamp: 'ja 11/14/2020 19:14:40'!
initialize

	value _ 0!
!Transfer methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:42:09' prior: 50966397!
initializeFrom: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer 

	Deposit register: valueToTransfer on: aDestinyAccount .
	Withdraw register: valueToTransfer on: aSourceAccount .
	
	value _ valueToTransfer .! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:42:27' prior: 50966267!
test01TransferAffectsSourceAndDestinyBalance
	
	| transfer sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self assert: 0 equals: sourceAccount balance.
	self assert: 0 equals: destinyAccount balance.
	
	transfer  _ Transfer from: sourceAccount to: destinyAccount anAmountOf: 100.
	
	self assert: -100 equals: sourceAccount balance.
	self assert: 100 equals: destinyAccount balance.
! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:42:57' prior: 50966431!
test01TransferAffectsSourceAndDestinyBalance
	
	| sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self assert: 0 equals: sourceAccount balance.
	self assert: 0 equals: destinyAccount balance.
	
	Transfer from: sourceAccount to: destinyAccount anAmountOf: 100.
	
	self assert: -100 equals: sourceAccount balance.
	self assert: 100 equals: destinyAccount balance.
! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:46:53' prior: 50964090!
test02IsPossibleGettingSourceAccountFromTransfer
	
	| sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self assert: 0 equals: sourceAccount balance.
	self assert: 0 equals: destinyAccount balance.
	
	self should: [Transfer from: sourceAccount to: destinyAccount anAmountOf: 0. self fail] 
		raise:  Error
		withMessageText: Transfer canNotTransferAnAmountOfZeroErrorDescription.! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:47:27'!
test02CanNotTransferAnAmountOfZero
	
	| sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self assert: 0 equals: sourceAccount balance.
	self assert: 0 equals: destinyAccount balance.
	
	self should: [Transfer from: sourceAccount to: destinyAccount anAmountOf: 0. self fail] 
		raise:  Error
		withMessageText: Transfer canNotTransferAnAmountOfZeroErrorDescription.! !

!methodRemoval: TransferTest #test02IsPossibleGettingSourceAccountFromTransfer stamp: 'ja 11/14/2020 19:14:40'!
test02IsPossibleGettingSourceAccountFromTransfer
	
	| sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self assert: 0 equals: sourceAccount balance.
	self assert: 0 equals: destinyAccount balance.
	
	self should: [Transfer from: sourceAccount to: destinyAccount anAmountOf: 0. self fail] 
		raise:  Error
		withMessageText: Transfer canNotTransferAnAmountOfZeroErrorDescription.!
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:47:42'!
canNotTransferAnAmountOfZeroErrorDescription
	self shouldBeImplemented.! !
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:48:16' prior: 50966517!
canNotTransferAnAmountOfZeroErrorDescription
	
	^ 'Can not transfer an amount of zero'! !
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:49:41' prior: 50966389!
from: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer 

	(valueToTransfer = 0) ifTrue: [ self error: self canNotTransferAnAmountOfZeroErrorDescription ].
		
	^ Transfer new initializeFrom: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer .! !

!methodRemoval: TransferTest #test02CanNotTransferAnAmountOfZero stamp: 'ja 11/14/2020 19:14:40'!
test02CanNotTransferAnAmountOfZero
	
	| sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self assert: 0 equals: sourceAccount balance.
	self assert: 0 equals: destinyAccount balance.
	
	self should: [Transfer from: sourceAccount to: destinyAccount anAmountOf: 0. self fail] 
		raise:  Error
		withMessageText: Transfer canNotTransferAnAmountOfZeroErrorDescription.!
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:51:45' prior: 50964103!
test03IsPossibleGettingDestinyAccountFromTransfer
	
	| sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self assert: 0 equals: sourceAccount balance.
	self assert: 0 equals: destinyAccount balance.
	
	self should: [Transfer from: sourceAccount to: destinyAccount anAmountOf: 0.] 
		raise: Error
		withMessageText: Transfer canNotTransferAnAmountOfZeroErrorDescription .! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:51:52' prior: 50966558!
test03IsPossibleGettingDestinyAccountFromTransfer
	
	| sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self assert: 0 equals: sourceAccount balance.
	self assert: 0 equals: destinyAccount balance.
	
	self should: [Transfer from: sourceAccount to: destinyAccount anAmountOf: 0. self fail] 
		raise: Error
		withMessageText: Transfer canNotTransferAnAmountOfZeroErrorDescription .! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:51:58' prior: 50966575!
test03IsPossibleGettingDestinyAccountFromTransfer
	
	| sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self should: [Transfer from: sourceAccount to: destinyAccount anAmountOf: 0. self fail] 
		raise: Error
		withMessageText: Transfer canNotTransferAnAmountOfZeroErrorDescription .! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:52:16'!
test02CanNotTransferAnAmountOfZeroErrorDescription 
	
	| sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self should: [Transfer from: sourceAccount to: destinyAccount anAmountOf: 0. self fail] 
		raise: Error
		withMessageText: Transfer canNotTransferAnAmountOfZeroErrorDescription .! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:53:12'!
test03CanNotTransferANegativeAmountErrorDescription
	
	| sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self should: [Transfer from: sourceAccount to: destinyAccount anAmountOf: -100. self fail] 
		raise: Error
		withMessageText: Transfer canNotTransferANegativeAmountErrorDescription .! !
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:53:24'!
canNotTransferANegativeAmountErrorDescription
	self shouldBeImplemented.! !
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:54:04' prior: 50966635!
canNotTransferANegativeAmountErrorDescription
	
	^ ' Can not transfer a negative amount '! !
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:55:01' prior: 50966529!
from: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer 

	(valueToTransfer = 0) ifTrue: [ self error: self canNotTransferAnAmountOfZeroErrorDescription ].
	(valueToTransfer  < 0) ifTrue: [ self error: self canNotTransferANegativeAmountErrorDescription ].
		
	^ Transfer new initializeFrom: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer .! !

!methodRemoval: TransferTest #test03IsPossibleGettingDestinyAccountFromTransfer stamp: 'ja 11/14/2020 19:14:40'!
test03IsPossibleGettingDestinyAccountFromTransfer
	
	| sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self should: [Transfer from: sourceAccount to: destinyAccount anAmountOf: 0. self fail] 
		raise: Error
		withMessageText: Transfer canNotTransferAnAmountOfZeroErrorDescription .!
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 17:03:02'!
test04TransferIsRegisteredIntoInvolvedAccount
	
	| sourceAccount destinyAccount transfer |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	transfer _ Transfer from: sourceAccount to: destinyAccount anAmountOf: 100.
	
	self assert: sourceAccount transactions includes: transfer depositMade. 
	
	self assert: destinyAccount transactions includes: transfer withdrawMade.
	
	
	! !

!methodRemoval: TransferTest #test04IsPossibleGettingTransferFromSourceAccount stamp: 'ja 11/14/2020 19:14:40'!
test04IsPossibleGettingTransferFromSourceAccount
	
	| transfer sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	transfer  _ Transfer from: sourceAccount to: destinyAccount anAmountOf: 2.
	
	self assert: sourceAccount transfers includes: transfer . !
!Transfer methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 17:03:36'!
depositMade
	self shouldBeImplemented.! !
!Transfer methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 17:03:59' prior: 50966705!
depositMade
	
	^ nil! !

!classDefinition: #Transfer category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 19:14:40'!
Object subclass: #Transfer
	instanceVariableNames: 'value depositMade'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #Transfer category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 19:14:40'!
Object subclass: #Transfer
	instanceVariableNames: 'value depositMade withdrawMade'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!
!Transfer methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 17:05:37' prior: 50966420!
initializeFrom: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer 

	depositMade _ TransferDeposit register: valueToTransfer on: aDestinyAccount .
	withdrawMade _ TransferWithdraw register: valueToTransfer on: aSourceAccount .
	
	value _ valueToTransfer .! !
!TransferType methodsFor: 'no messages' stamp: 'ja 11/14/2020 17:06:54' overrides: 50964395!
affectBalance: aBalance

	self subclassResponsibility ! !
!TransferType methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 17:07:07' overrides: 50964391!
value 

	self subclassResponsibility ! !
!TransferDeposit methodsFor: 'no messages' stamp: 'ja 11/14/2020 17:07:24' overrides: 50964395!
affectBalance: aBalance! !
!TransferDeposit methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 17:07:42' overrides: 50964391!
value ! !
!TransferWithdraw methodsFor: 'no messages' stamp: 'ja 11/14/2020 17:08:48' overrides: 50964395!
affectBalance: aBalance! !
!TransferWithdraw methodsFor: 'nil' stamp: 'ja 11/14/2020 17:08:58' overrides: 50964391!
value ! !

!classDefinition: #Deposit category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 19:14:41'!
AccountTransaction subclass: #Deposit
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #Deposit category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 19:14:41'!
AccountTransaction subclass: #Deposit
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #Withdraw category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 19:14:41'!
AccountTransaction subclass: #Withdraw
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #Withdraw category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 19:14:41'!
AccountTransaction subclass: #Withdraw
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!
!TransferDeposit methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 17:13:02' prior: 50966752 overrides: 50964395!
affectBalance: aBalance

	
	^aBalance ! !
!TransferWithdraw methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 17:13:13' prior: 50966761 overrides: 50964395!
affectBalance: aBalance

	
	^aBalance ! !
!TransferDeposit methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 17:13:29' prior: 50966799 overrides: 50964395!
affectBalance: aBalance

	
	^aBalance + value! !
!TransferWithdraw methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 17:13:37' prior: 50966805 overrides: 50964395!
affectBalance: aBalance

	
	^aBalance - value! !
!TransferDeposit methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 17:15:41' prior: 50966811 overrides: 50964395!
affectBalance: aBalance

	^aBalance + value! !
!TransferWithdraw methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 17:28:28' prior: 50966817 overrides: 50964395!
affectBalance: aBalance

	^aBalance - value! !
!TransferDeposit class methodsFor: 'no messages' stamp: 'ja 11/14/2020 17:30:42'!
for: aValue

	^ self new initializeFor: aValue ! !
!TransferWithdraw class methodsFor: 'no messages' stamp: 'ja 11/14/2020 17:30:47'!
for: aValue

	^ self new initializeFor: aValue ! !
!TransferDeposit methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 17:31:17'!
initializeFor: aValue

	value := aValue ! !
!TransferWithdraw methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 17:31:23'!
initializeFor: aValue

	value := aValue ! !
!TransferWithdraw methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 17:31:31' prior: 50966849!
initializeFor: aValue

	value _ aValue ! !
!TransferDeposit methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 17:31:42' prior: 50966844!
initializeFor: aValue

	value _ aValue ! !
!Transfer methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 17:33:24' prior: 50966710!
depositMade
	
	^ depositMade ! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 17:34:30' prior: 50966676!
test04TransferIsRegisteredIntoInvolvedAccount
	
	| sourceAccount destinyAccount transfer |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	transfer _ Transfer from: sourceAccount to: destinyAccount anAmountOf: 100.
	
	self assert: sourceAccount transactions includes: transfer withdrawMade. 
	
	self assert: destinyAccount transactions includes: transfer depositMade.
	
	
	! !
!Transfer methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 17:36:36'!
withdrawMade
	self shouldBeImplemented.
	^withdrawMade! !
!Transfer methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 17:36:40' prior: 50966885!
withdrawMade
	
	^withdrawMade! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 17:38:11'!
test04TransferIsRegisteredIntoInvolvedAccounts
	
	| sourceAccount destinyAccount transfer |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	transfer _ Transfer from: sourceAccount to: destinyAccount anAmountOf: 100.
	
	self assert: sourceAccount transactions includes: transfer withdrawMade. 
	
	self assert: destinyAccount transactions includes: transfer depositMade.
	
	
	! !

!methodRemoval: TransferTest #test04TransferIsRegisteredIntoInvolvedAccount stamp: 'ja 11/14/2020 19:14:41'!
test04TransferIsRegisteredIntoInvolvedAccount
	
	| sourceAccount destinyAccount transfer |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	transfer _ Transfer from: sourceAccount to: destinyAccount anAmountOf: 100.
	
	self assert: sourceAccount transactions includes: transfer withdrawMade. 
	
	self assert: destinyAccount transactions includes: transfer depositMade.
	
	
	!
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 17:46:01'!
test05TransferValueIsNotReplicated
	
	| transfer sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	transfer  _ Transfer from: sourceAccount to: destinyAccount anAmountOf: 100.
	
	sourceAccount transactions ! !

!classDefinition: #AccountTransaction category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 19:14:41'!
Object subclass: #AccountTransaction
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #AccountTransaction category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 19:14:41'!
Object subclass: #AccountTransaction
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #Deposit category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 19:14:41'!
AccountTransaction subclass: #Deposit
	instanceVariableNames: 'value'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #Deposit category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 19:14:41'!
AccountTransaction subclass: #Deposit
	instanceVariableNames: 'value'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #Withdraw category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 19:14:41'!
AccountTransaction subclass: #Withdraw
	instanceVariableNames: 'value'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #Withdraw category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 19:14:41'!
AccountTransaction subclass: #Withdraw
	instanceVariableNames: 'value'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!
!TransferDeposit methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 17:55:18' prior: 50966823 overrides: 50964395!
affectBalance: aBalance

	^self value + aBalance ! !
!TransferWithdraw methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 17:55:36' prior: 50966829 overrides: 50964395!
affectBalance: aBalance

	^self value - aBalance ! !

!classDefinition: #TransferType category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 19:14:41'!
AccountTransaction subclass: #TransferType
	instanceVariableNames: 'relatedTransfer'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #TransferType category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 19:14:41'!
AccountTransaction subclass: #TransferType
	instanceVariableNames: 'relatedTransfer'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!
!TransferType methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 17:56:29' prior: 50966747 overrides: 50964391!
value 

	^ relatedTransfer value! !

!methodRemoval: TransferDeposit #value stamp: 'ja 11/14/2020 19:14:41'!
value !

!methodRemoval: TransferWithdraw #value stamp: 'ja 11/14/2020 19:14:41'!
value !

!methodRemoval: TransferWithdraw #initializeFor: stamp: 'ja 11/14/2020 19:14:41'!
initializeFor: aValue

	value _ aValue !

!methodRemoval: TransferDeposit #initializeFor: stamp: 'ja 11/14/2020 19:14:41'!
initializeFor: aValue

	value _ aValue !
!TransferType methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 17:57:51'!
initializaFor: aTransfer

	relatedTransfer _ aTransfer ! !
!TransferType methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 17:58:06'!
initializeFor: aTransfer

	relatedTransfer _ aTransfer ! !

!methodRemoval: TransferType #initializaFor: stamp: 'ja 11/14/2020 19:14:41'!
initializaFor: aTransfer

	relatedTransfer _ aTransfer !
!TransferType class methodsFor: 'no messages' stamp: 'ja 11/14/2020 17:59:22'!
for: aValue

	^ self new initializeFor: aValue ! !

!methodRemoval: TransferDeposit class #for: stamp: 'ja 11/14/2020 19:14:41'!
for: aValue

	^ self new initializeFor: aValue !

!methodRemoval: TransferWithdraw class #for: stamp: 'ja 11/14/2020 19:14:41'!
for: aValue

	^ self new initializeFor: aValue !
!TransferType class methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 18:00:01' prior: 50967044!
for: aTransfer

	^ self new initializeFor: aTransfer ! !

!methodRemoval: TransferTest #test05IsPossibleGettingTransferFromDestinyAccount stamp: 'ja 11/14/2020 19:14:41'!
test05IsPossibleGettingTransferFromDestinyAccount
	
	| transfer sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	transfer  _ Transfer from: sourceAccount to: destinyAccount anAmountOf: 2.
	
	self assert: destinyAccount transfers includes: transfer . !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 18:08:27' prior: 50966926!
test05TransferValueIsNotReplicated
	
	| transfer sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	transfer  _ Transfer from: sourceAccount to: destinyAccount anAmountOf: 100.
	
	! !
!Transfer methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 18:10:08'!
changeValueTo: aNewValue

	value _ aNewValue 

	! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 18:10:44' prior: 50967076!
test05TransferValueIsNotReplicated
	
	| transfer sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	transfer  _ Transfer from: sourceAccount to: destinyAccount anAmountOf: 100.
	
	transfer changeValueTo: 10.
	
	! !
!Transfer methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 18:11:16' prior: 50967087!
changeValueTo: aNewValue
	
	value _ aNewValue 

	! !
!Transfer methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 18:12:23' prior: 50967104!
changeValueTo: aNewValue
	" for testing pourposite only "
	value _ aNewValue 

	! !
!Transfer methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 18:12:57' prior: 50967109!
changeValueTo: aNewValue
	" for testing purpose only "
	value _ aNewValue 

	! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 18:13:42' prior: 50967092!
test05TransferValueIsNotReplicated
	
	| transfer sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	transfer  _ Transfer from: sourceAccount to: destinyAccount anAmountOf: 100.
	
	self assert: -100 equals: sourceAccount balance.
	self assert: 100 equals: destinyAccount balance.
		
	transfer changeValueTo: 10.
	
	! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 18:14:14' prior: 50967121!
test05TransferValueIsNotReplicated
	
	| transfer sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	transfer  _ Transfer from: sourceAccount to: destinyAccount anAmountOf: 100.
	
	self assert: -100 equals: sourceAccount balance.
	self assert: 100 equals: destinyAccount balance.
		
	transfer changeValueTo: 10.
	
	self assert: -10 equals: sourceAccount balance.
	self assert: 10 equals: destinyAccount balance.
	! !
!AccountTransaction class methodsFor: 'instance creation' stamp: 'ja 11/14/2020 18:19:14' prior: 50964409!
register: aValueOrTransfer on: account

	| transaction |
	
	transaction := self for: aValueOrTransfer.
	account register: transaction.
		
	^ transaction! !
!Transfer methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 18:22:36' prior: 50966730!
initializeFrom: aSourceAccount to: aDestinyAccount anAmountOf: aValueToTransfer 

	depositMade _ TransferDeposit register: self on: aDestinyAccount .
	withdrawMade _ TransferWithdraw register: self on: aSourceAccount .
	
	value _ aValueToTransfer .! !
!TransferWithdraw methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 18:30:32' prior: 50966991 overrides: 50964395!
affectBalance: aBalance

	^ aBalance - self value ! !
!TransferDeposit methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 18:30:47' prior: 50966985 overrides: 50964395!
affectBalance: aBalance

	^ aBalance + self value ! !
!Transfer methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 18:33:42' prior: 50967115!
changeValueTo: aNewValue
	
	" Ya que no existe un mapeo con la realidad entre este mensaje y una verdadera transferencia bancaria
	afirmamos que este no hace a la esencia de Transfer pero lo incorporamos para poder testear que el valor
	de las transferencias no est� replicado "
	
	value _ aNewValue 

	! !
!Transfer methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 18:36:27' prior: 50967187!
changeValueTo: aNewValue
	
	" Ya que no existe un mapeo con la realidad entre este mensaje y una verdadera transferencia bancaria
	afirmamos que �ste no hace a la esencia de Transfer pero lo incorporamos para poder testear que el valor
	de las transferencias no est� replicado "
	
	value _ aNewValue 

	! !

----STARTUP---- (14 November 2020 19:17:10) as /home/jampuero/Documentos/isw1/linux64/CuisUniversity-4365.image!


!methodRemoval: TransferTest #test05IsPossibleGettingTransferFromDestinyAccount stamp: 'ja 11/14/2020 19:19:23'!
test05IsPossibleGettingTransferFromDestinyAccount
	
	| transfer sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	transfer  _ Transfer from: sourceAccount to: destinyAccount anAmountOf: 2.
	
	self assert: destinyAccount transfers includes: transfer . !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 18:08:27'!
test05TransferValueIsNotReplicated
	
	| transfer sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	transfer  _ Transfer from: sourceAccount to: destinyAccount anAmountOf: 100.
	
	! !
!Transfer methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 18:10:08'!
changeValueTo: aNewValue

	value _ aNewValue 

	! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 18:10:44' prior: 50966170!
test05TransferValueIsNotReplicated
	
	| transfer sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	transfer  _ Transfer from: sourceAccount to: destinyAccount anAmountOf: 100.
	
	transfer changeValueTo: 10.
	
	! !
!Transfer methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 18:11:16' prior: 50966181!
changeValueTo: aNewValue
	
	value _ aNewValue 

	! !
!Transfer methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 18:12:23' prior: 50966198!
changeValueTo: aNewValue
	" for testing pourposite only "
	value _ aNewValue 

	! !
!Transfer methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 18:12:57' prior: 50966203!
changeValueTo: aNewValue
	" for testing purpose only "
	value _ aNewValue 

	! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 18:13:42' prior: 50966186!
test05TransferValueIsNotReplicated
	
	| transfer sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	transfer  _ Transfer from: sourceAccount to: destinyAccount anAmountOf: 100.
	
	self assert: -100 equals: sourceAccount balance.
	self assert: 100 equals: destinyAccount balance.
		
	transfer changeValueTo: 10.
	
	! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 18:14:14' prior: 50966215!
test05TransferValueIsNotReplicated
	
	| transfer sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	transfer  _ Transfer from: sourceAccount to: destinyAccount anAmountOf: 100.
	
	self assert: -100 equals: sourceAccount balance.
	self assert: 100 equals: destinyAccount balance.
		
	transfer changeValueTo: 10.
	
	self assert: -10 equals: sourceAccount balance.
	self assert: 10 equals: destinyAccount balance.
	! !
!AccountTransaction class methodsFor: 'instance creation' stamp: 'ja 11/14/2020 18:19:14' prior: 50964409!
register: aValueOrTransfer on: account

	| transaction |
	
	transaction := self for: aValueOrTransfer.
	account register: transaction.
		
	^ transaction! !
!Transfer methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 18:22:36'!
initializeFrom: aSourceAccount to: aDestinyAccount anAmountOf: aValueToTransfer 

	depositMade _ TransferDeposit register: self on: aDestinyAccount .
	withdrawMade _ TransferWithdraw register: self on: aSourceAccount .
	
	value _ aValueToTransfer .! !
!Transfer methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 18:33:42' prior: 50966209!
changeValueTo: aNewValue
	
	" Ya que no existe un mapeo con la realidad entre este mensaje y una verdadera transferencia bancaria
	afirmamos que este no hace a la esencia de Transfer pero lo incorporamos para poder testear que el valor
	de las transferencias no est� replicado "
	
	value _ aNewValue 

	! !
!Transfer methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 18:36:27' prior: 50966269!
changeValueTo: aNewValue
	
	" Ya que no existe un mapeo con la realidad entre este mensaje y una verdadera transferencia bancaria
	afirmamos que �ste no hace a la esencia de Transfer pero lo incorporamos para poder testear que el valor
	de las transferencias no est� replicado "
	
	value _ aNewValue 

	! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 18:08:27' prior: 50966231!
test05TransferValueIsNotReplicated
	
	| transfer sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	transfer  _ Transfer from: sourceAccount to: destinyAccount anAmountOf: 100.
	
	! !
!Transfer methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 18:10:08' prior: 50966282!
changeValueTo: aNewValue

	value _ aNewValue 

	! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 18:10:44' prior: 50966295!
test05TransferValueIsNotReplicated
	
	| transfer sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	transfer  _ Transfer from: sourceAccount to: destinyAccount anAmountOf: 100.
	
	transfer changeValueTo: 10.
	
	! !
!Transfer methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 18:11:16' prior: 50966306!
changeValueTo: aNewValue
	
	value _ aNewValue 

	! !
!Transfer methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 18:12:23' prior: 50966323!
changeValueTo: aNewValue
	" for testing pourposite only "
	value _ aNewValue 

	! !
!Transfer methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 18:12:57' prior: 50966328!
changeValueTo: aNewValue
	" for testing purpose only "
	value _ aNewValue 

	! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 18:13:42' prior: 50966311!
test05TransferValueIsNotReplicated
	
	| transfer sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	transfer  _ Transfer from: sourceAccount to: destinyAccount anAmountOf: 100.
	
	self assert: -100 equals: sourceAccount balance.
	self assert: 100 equals: destinyAccount balance.
		
	transfer changeValueTo: 10.
	
	! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 18:14:14' prior: 50966340!
test05TransferValueIsNotReplicated
	
	| transfer sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	transfer  _ Transfer from: sourceAccount to: destinyAccount anAmountOf: 100.
	
	self assert: -100 equals: sourceAccount balance.
	self assert: 100 equals: destinyAccount balance.
		
	transfer changeValueTo: 10.
	
	self assert: -10 equals: sourceAccount balance.
	self assert: 10 equals: destinyAccount balance.
	! !
!AccountTransaction class methodsFor: 'instance creation' stamp: 'ja 11/14/2020 18:19:14' prior: 50966250!
register: aValueOrTransfer on: account

	| transaction |
	
	transaction := self for: aValueOrTransfer.
	account register: transaction.
		
	^ transaction! !
!Transfer methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 18:22:36' prior: 50966258!
initializeFrom: aSourceAccount to: aDestinyAccount anAmountOf: aValueToTransfer 

	depositMade _ TransferDeposit register: self on: aDestinyAccount .
	withdrawMade _ TransferWithdraw register: self on: aSourceAccount .
	
	value _ aValueToTransfer .! !
!Transfer methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 18:33:42' prior: 50966334!
changeValueTo: aNewValue
	
	" Ya que no existe un mapeo con la realidad entre este mensaje y una verdadera transferencia bancaria
	afirmamos que este no hace a la esencia de Transfer pero lo incorporamos para poder testear que el valor
	de las transferencias no est� replicado "
	
	value _ aNewValue 

	! !
!Transfer methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 18:36:27' prior: 50966394!
changeValueTo: aNewValue
	
	" Ya que no existe un mapeo con la realidad entre este mensaje y una verdadera transferencia bancaria
	afirmamos que �ste no hace a la esencia de Transfer pero lo incorporamos para poder testear que el valor
	de las transferencias no est� replicado "
	
	value _ aNewValue 

	! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 18:08:27' prior: 50966356!
test05TransferValueIsNotReplicated
	
	| transfer sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	transfer  _ Transfer from: sourceAccount to: destinyAccount anAmountOf: 100.
	
	! !
!Transfer methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 18:10:08' prior: 50966407!
changeValueTo: aNewValue

	value _ aNewValue 

	! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 18:10:44' prior: 50966420!
test05TransferValueIsNotReplicated
	
	| transfer sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	transfer  _ Transfer from: sourceAccount to: destinyAccount anAmountOf: 100.
	
	transfer changeValueTo: 10.
	
	! !
!Transfer methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 18:11:16' prior: 50966431!
changeValueTo: aNewValue
	
	value _ aNewValue 

	! !
!Transfer methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 18:12:23' prior: 50966448!
changeValueTo: aNewValue
	" for testing pourposite only "
	value _ aNewValue 

	! !
!Transfer methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 18:12:57' prior: 50966453!
changeValueTo: aNewValue
	" for testing purpose only "
	value _ aNewValue 

	! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 18:13:42' prior: 50966436!
test05TransferValueIsNotReplicated
	
	| transfer sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	transfer  _ Transfer from: sourceAccount to: destinyAccount anAmountOf: 100.
	
	self assert: -100 equals: sourceAccount balance.
	self assert: 100 equals: destinyAccount balance.
		
	transfer changeValueTo: 10.
	
	! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 18:14:14' prior: 50966465!
test05TransferValueIsNotReplicated
	
	| transfer sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	transfer  _ Transfer from: sourceAccount to: destinyAccount anAmountOf: 100.
	
	self assert: -100 equals: sourceAccount balance.
	self assert: 100 equals: destinyAccount balance.
		
	transfer changeValueTo: 10.
	
	self assert: -10 equals: sourceAccount balance.
	self assert: 10 equals: destinyAccount balance.
	! !
!AccountTransaction class methodsFor: 'instance creation' stamp: 'ja 11/14/2020 18:19:14' prior: 50966375!
register: aValueOrTransfer on: account

	| transaction |
	
	transaction := self for: aValueOrTransfer.
	account register: transaction.
		
	^ transaction! !
!Transfer methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 18:22:36' prior: 50966383!
initializeFrom: aSourceAccount to: aDestinyAccount anAmountOf: aValueToTransfer 

	depositMade _ TransferDeposit register: self on: aDestinyAccount .
	withdrawMade _ TransferWithdraw register: self on: aSourceAccount .
	
	value _ aValueToTransfer .! !
!Transfer methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 18:33:42' prior: 50966459!
changeValueTo: aNewValue
	
	" Ya que no existe un mapeo con la realidad entre este mensaje y una verdadera transferencia bancaria
	afirmamos que este no hace a la esencia de Transfer pero lo incorporamos para poder testear que el valor
	de las transferencias no est� replicado "
	
	value _ aNewValue 

	! !
!Transfer methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 18:36:27' prior: 50966519!
changeValueTo: aNewValue
	
	" Ya que no existe un mapeo con la realidad entre este mensaje y una verdadera transferencia bancaria
	afirmamos que �ste no hace a la esencia de Transfer pero lo incorporamos para poder testear que el valor
	de las transferencias no est� replicado "
	
	value _ aNewValue 

	! !

!classDefinition: #TransferType category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 19:19:51'!
AccountTransaction subclass: #TransferType
	instanceVariableNames: 'relatedTransfer'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!
!TransferType methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 17:56:29' overrides: 50964391!
value 

	^ relatedTransfer value! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 17:46:01' prior: 50966481!
test05TransferValueIsNotReplicated
	
	| transfer sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	transfer  _ Transfer from: sourceAccount to: destinyAccount anAmountOf: 100.
	
	sourceAccount transactions ! !

!classDefinition: #AccountTransaction category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 19:20:08'!
Object subclass: #AccountTransaction
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #AccountTransaction category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 19:20:08'!
Object subclass: #AccountTransaction
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #Deposit category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 19:20:08'!
AccountTransaction subclass: #Deposit
	instanceVariableNames: 'value'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #Deposit category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 19:20:08'!
AccountTransaction subclass: #Deposit
	instanceVariableNames: 'value'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #Withdraw category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 19:20:08'!
AccountTransaction subclass: #Withdraw
	instanceVariableNames: 'value'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #Withdraw category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 19:20:08'!
AccountTransaction subclass: #Withdraw
	instanceVariableNames: 'value'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #TransferType category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 19:20:08'!
AccountTransaction subclass: #TransferType
	instanceVariableNames: 'relatedTransfer'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #TransferType category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 19:20:08'!
AccountTransaction subclass: #TransferType
	instanceVariableNames: 'relatedTransfer'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!
!TransferType methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 17:56:29' prior: 50966553 overrides: 50964391!
value 

	^ relatedTransfer value! !
!Transfer methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 18:33:42' prior: 50966532!
changeValueTo: aNewValue
	
	" Ya que no existe un mapeo con la realidad entre este mensaje y una verdadera transferencia bancaria
	afirmamos que este no hace a la esencia de Transfer pero lo incorporamos para poder testear que el valor
	de las transferencias no est� replicado "
	
	value _ aNewValue 

	! !
!Transfer methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 18:36:27' prior: 50966638!
changeValueTo: aNewValue
	
	" Ya que no existe un mapeo con la realidad entre este mensaje y una verdadera transferencia bancaria
	afirmamos que �ste no hace a la esencia de Transfer pero lo incorporamos para poder testear que el valor
	de las transferencias no est� replicado "
	
	value _ aNewValue 

	! !
!Transfer methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 18:33:42' prior: 50966651!
changeValueTo: aNewValue
	
	" Ya que no existe un mapeo con la realidad entre este mensaje y una verdadera transferencia bancaria
	afirmamos que este no hace a la esencia de Transfer pero lo incorporamos para poder testear que el valor
	de las transferencias no est� replicado "
	
	value _ aNewValue 

	! !
!Transfer methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 18:36:27' prior: 50966664!
changeValueTo: aNewValue
	
	" Ya que no existe un mapeo con la realidad entre este mensaje y una verdadera transferencia bancaria
	afirmamos que �ste no hace a la esencia de Transfer pero lo incorporamos para poder testear que el valor
	de las transferencias no est� replicado "
	
	value _ aNewValue 

	! !
!Transfer methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 18:33:42' prior: 50966677!
changeValueTo: aNewValue
	
	" Ya que no existe un mapeo con la realidad entre este mensaje y una verdadera transferencia bancaria
	afirmamos que este no hace a la esencia de Transfer pero lo incorporamos para poder testear que el valor
	de las transferencias no est� replicado "
	
	value _ aNewValue 

	! !
!Transfer methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 18:36:27' prior: 50966690!
changeValueTo: aNewValue
	
	" Ya que no existe un mapeo con la realidad entre este mensaje y una verdadera transferencia bancaria
	afirmamos que �ste no hace a la esencia de Transfer pero lo incorporamos para poder testear que el valor
	de las transferencias no est� replicado "
	
	value _ aNewValue 

	! !
!Transfer methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 18:33:42' prior: 50966703!
changeValueTo: aNewValue
	
	" Ya que no existe un mapeo con la realidad entre este mensaje y una verdadera transferencia bancaria
	afirmamos que este no hace a la esencia de Transfer pero lo incorporamos para poder testear que el valor
	de las transferencias no est� replicado "
	
	value _ aNewValue 

	! !
!Transfer methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 18:36:27' prior: 50966716!
changeValueTo: aNewValue
	
	" Ya que no existe un mapeo con la realidad entre este mensaje y una verdadera transferencia bancaria
	afirmamos que �ste no hace a la esencia de Transfer pero lo incorporamos para poder testear que el valor
	de las transferencias no est� replicado "
	
	value _ aNewValue 

	! !

----STARTUP---- (14 November 2020 19:22:00) as /home/jampuero/Documentos/isw1/linux64/CuisUniversity-4365.image!


!classDefinition: #TransferType category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 19:25:56'!
AccountTransaction subclass: #TransferType
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #TransferType category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 19:26:01'!
AccountTransaction subclass: #TransferType
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #TransferType category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 19:26:01'!
AccountTransaction subclass: #TransferType
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #TransferType category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 19:26:08'!
AccountTransaction subclass: #TransferType
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #TransferType category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 19:26:08'!
AccountTransaction subclass: #TransferType
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:29:11'!
test01TransferAffectsSourceAndDestinyBalance
	
	| transfer sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	transfer  _ Transfer from: sourceAccount to: destinyAccount anAmountOf: 100.
	
	self assert: sourceAccount balance 

	
	! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:31:05' prior: 50966195!
test01TransferAffectsSourceAndDestinyBalance
	
	| transfer sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self assert: 0 equals: (sourceAccount balance).
	self assert: 0 equals: (destinyAccount balance).
	
	transfer  _ Transfer from: sourceAccount to: destinyAccount anAmountOf: 100.
	
	self assert: -100 equals: (sourceAccount balance).
	self assert: 100 equals: (destinyAccount balance).
	self assert: 100 equals: transfer value.	
	! !

!classDefinition: #TransferType category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 19:26:10'!
AccountTransaction subclass: #TransferType
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #TransferType category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 19:26:10'!
AccountTransaction subclass: #TransferType
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:29:11' prior: 50966208!
test01TransferAffectsSourceAndDestinyBalance
	
	| transfer sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	transfer  _ Transfer from: sourceAccount to: destinyAccount anAmountOf: 100.
	
	self assert: sourceAccount balance 

	
	! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:31:05' prior: 50966243!
test01TransferAffectsSourceAndDestinyBalance
	
	| transfer sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self assert: 0 equals: (sourceAccount balance).
	self assert: 0 equals: (destinyAccount balance).
	
	transfer  _ Transfer from: sourceAccount to: destinyAccount anAmountOf: 100.
	
	self assert: -100 equals: (sourceAccount balance).
	self assert: 100 equals: (destinyAccount balance).
	self assert: 100 equals: transfer value.	
	! !

!methodRemoval: TransferTest #test01TransferHasSourceDestinyAndValueWhenCreated stamp: 'ja 11/14/2020 19:26:10'!
test01TransferHasSourceDestinyAndValueWhenCreated
	
	| transfer sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	transfer  _ Transfer from: sourceAccount to: destinyAccount anAmountOf: 2.
	
	self assert: transfer hasSource.
	
	self assert: transfer hasDestiny.
	
	self assert: transfer hasValue.
	
	!

!classDefinition: #TransferType category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 19:26:13'!
AccountTransaction subclass: #TransferType
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #TransferType category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 19:26:13'!
AccountTransaction subclass: #TransferType
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:29:11' prior: 50966256!
test01TransferAffectsSourceAndDestinyBalance
	
	| transfer sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	transfer  _ Transfer from: sourceAccount to: destinyAccount anAmountOf: 100.
	
	self assert: sourceAccount balance 

	
	! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:31:05' prior: 50966306!
test01TransferAffectsSourceAndDestinyBalance
	
	| transfer sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self assert: 0 equals: (sourceAccount balance).
	self assert: 0 equals: (destinyAccount balance).
	
	transfer  _ Transfer from: sourceAccount to: destinyAccount anAmountOf: 100.
	
	self assert: -100 equals: (sourceAccount balance).
	self assert: 100 equals: (destinyAccount balance).
	self assert: 100 equals: transfer value.	
	! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:31:42' prior: 50966319!
test01TransferAffectsSourceAndDestinyBalance
	
	| transfer sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self assert: 0 equals: sourceAccount balance.
	self assert: 0 equals: destinyAccount balance.
	
	transfer  _ Transfer from: sourceAccount to: destinyAccount anAmountOf: 100.
	
	self assert: -100 equals: sourceAccount balance.
	self assert: 100 equals: destinyAccount balance.
	self assert: 100 equals: transfer value.	
	! !

!classDefinition: #TransferType category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 19:26:15'!
AccountTransaction subclass: #TransferType
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #TransferType category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 19:26:15'!
AccountTransaction subclass: #TransferType
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:29:11' prior: 50966338!
test01TransferAffectsSourceAndDestinyBalance
	
	| transfer sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	transfer  _ Transfer from: sourceAccount to: destinyAccount anAmountOf: 100.
	
	self assert: sourceAccount balance 

	
	! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:31:05' prior: 50966373!
test01TransferAffectsSourceAndDestinyBalance
	
	| transfer sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self assert: 0 equals: (sourceAccount balance).
	self assert: 0 equals: (destinyAccount balance).
	
	transfer  _ Transfer from: sourceAccount to: destinyAccount anAmountOf: 100.
	
	self assert: -100 equals: (sourceAccount balance).
	self assert: 100 equals: (destinyAccount balance).
	self assert: 100 equals: transfer value.	
	! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:31:42' prior: 50966386!
test01TransferAffectsSourceAndDestinyBalance
	
	| transfer sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self assert: 0 equals: sourceAccount balance.
	self assert: 0 equals: destinyAccount balance.
	
	transfer  _ Transfer from: sourceAccount to: destinyAccount anAmountOf: 100.
	
	self assert: -100 equals: sourceAccount balance.
	self assert: 100 equals: destinyAccount balance.
	self assert: 100 equals: transfer value.	
	! !

!classDefinition: #TransferType category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 19:26:18'!
AccountTransaction subclass: #TransferType
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #TransferType category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 19:26:18'!
AccountTransaction subclass: #TransferType
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:29:11' prior: 50966405!
test01TransferAffectsSourceAndDestinyBalance
	
	| transfer sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	transfer  _ Transfer from: sourceAccount to: destinyAccount anAmountOf: 100.
	
	self assert: sourceAccount balance 

	
	! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:31:05' prior: 50966440!
test01TransferAffectsSourceAndDestinyBalance
	
	| transfer sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self assert: 0 equals: (sourceAccount balance).
	self assert: 0 equals: (destinyAccount balance).
	
	transfer  _ Transfer from: sourceAccount to: destinyAccount anAmountOf: 100.
	
	self assert: -100 equals: (sourceAccount balance).
	self assert: 100 equals: (destinyAccount balance).
	self assert: 100 equals: transfer value.	
	! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:31:42' prior: 50966453!
test01TransferAffectsSourceAndDestinyBalance
	
	| transfer sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self assert: 0 equals: sourceAccount balance.
	self assert: 0 equals: destinyAccount balance.
	
	transfer  _ Transfer from: sourceAccount to: destinyAccount anAmountOf: 100.
	
	self assert: -100 equals: sourceAccount balance.
	self assert: 100 equals: destinyAccount balance.
	self assert: 100 equals: transfer value.	
	! !
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:31:57'!
from: aReceptiveAccount to: aReceptiveAccount2 anAmountOf: aSmallInteger 
	self shouldBeImplemented.! !

!classDefinition: #TransferType category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 19:26:20'!
AccountTransaction subclass: #TransferType
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #TransferType category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 19:26:20'!
AccountTransaction subclass: #TransferType
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:29:11' prior: 50966472!
test01TransferAffectsSourceAndDestinyBalance
	
	| transfer sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	transfer  _ Transfer from: sourceAccount to: destinyAccount anAmountOf: 100.
	
	self assert: sourceAccount balance 

	
	! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:31:05' prior: 50966513!
test01TransferAffectsSourceAndDestinyBalance
	
	| transfer sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self assert: 0 equals: (sourceAccount balance).
	self assert: 0 equals: (destinyAccount balance).
	
	transfer  _ Transfer from: sourceAccount to: destinyAccount anAmountOf: 100.
	
	self assert: -100 equals: (sourceAccount balance).
	self assert: 100 equals: (destinyAccount balance).
	self assert: 100 equals: transfer value.	
	! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:31:42' prior: 50966526!
test01TransferAffectsSourceAndDestinyBalance
	
	| transfer sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self assert: 0 equals: sourceAccount balance.
	self assert: 0 equals: destinyAccount balance.
	
	transfer  _ Transfer from: sourceAccount to: destinyAccount anAmountOf: 100.
	
	self assert: -100 equals: sourceAccount balance.
	self assert: 100 equals: destinyAccount balance.
	self assert: 100 equals: transfer value.	
	! !
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:31:57' prior: 50966491!
from: aReceptiveAccount to: aReceptiveAccount2 anAmountOf: aSmallInteger 
	self shouldBeImplemented.! !

!classDefinition: 'Transfer class' category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 19:26:21'!
Transfer class
	instanceVariableNames: 'value'!

!classDefinition: #TransferType category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 19:26:25'!
AccountTransaction subclass: #TransferType
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #TransferType category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 19:26:25'!
AccountTransaction subclass: #TransferType
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:29:11' prior: 50966545!
test01TransferAffectsSourceAndDestinyBalance
	
	| transfer sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	transfer  _ Transfer from: sourceAccount to: destinyAccount anAmountOf: 100.
	
	self assert: sourceAccount balance 

	
	! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:31:05' prior: 50966591!
test01TransferAffectsSourceAndDestinyBalance
	
	| transfer sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self assert: 0 equals: (sourceAccount balance).
	self assert: 0 equals: (destinyAccount balance).
	
	transfer  _ Transfer from: sourceAccount to: destinyAccount anAmountOf: 100.
	
	self assert: -100 equals: (sourceAccount balance).
	self assert: 100 equals: (destinyAccount balance).
	self assert: 100 equals: transfer value.	
	! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:31:42' prior: 50966604!
test01TransferAffectsSourceAndDestinyBalance
	
	| transfer sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self assert: 0 equals: sourceAccount balance.
	self assert: 0 equals: destinyAccount balance.
	
	transfer  _ Transfer from: sourceAccount to: destinyAccount anAmountOf: 100.
	
	self assert: -100 equals: sourceAccount balance.
	self assert: 100 equals: destinyAccount balance.
	self assert: 100 equals: transfer value.	
	! !
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:31:57' prior: 50966564!
from: aReceptiveAccount to: aReceptiveAccount2 anAmountOf: aSmallInteger 
	self shouldBeImplemented.! !

!classDefinition: 'Transfer class' category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 19:26:25'!
Transfer class
	instanceVariableNames: 'value'!
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:34:30' prior: 50966642!
from: aReceptiveAccount to: aReceptiveAccount2 anAmountOf: aSmallInteger 
	
	Deposit register: aSmallInteger on: aReceptiveAccount2 .
	Withdraw register: aSmallInteger on: aReceptiveAccount .
	value _ aSmallInteger .! !
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:34:50' prior: 50966653!
from: aSourceAccount to: aReceptiveAccount2 anAmountOf: aSmallInteger 
	
	Deposit register: aSmallInteger on: aReceptiveAccount2 .
	Withdraw register: aSmallInteger on: aSourceAccount .
	value _ aSmallInteger .! !
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:35:04' prior: 50966663!
from: aSourceAccount to: aDestinyAccount anAmountOf: aSmallInteger 
	
	Deposit register: aSmallInteger on: aDestinyAccount .
	Withdraw register: aSmallInteger on: aSourceAccount .
	value _ aSmallInteger .! !
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:35:29' prior: 50966673!
from: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer 
	
	Deposit register: valueToTransfer on: aDestinyAccount .
	Withdraw register: valueToTransfer on: aSourceAccount .
	value _ valueToTransfer .! !

!classDefinition: #TransferType category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 19:26:29'!
AccountTransaction subclass: #TransferType
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #TransferType category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 19:26:29'!
AccountTransaction subclass: #TransferType
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:29:11' prior: 50966623!
test01TransferAffectsSourceAndDestinyBalance
	
	| transfer sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	transfer  _ Transfer from: sourceAccount to: destinyAccount anAmountOf: 100.
	
	self assert: sourceAccount balance 

	
	! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:31:05' prior: 50966709!
test01TransferAffectsSourceAndDestinyBalance
	
	| transfer sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self assert: 0 equals: (sourceAccount balance).
	self assert: 0 equals: (destinyAccount balance).
	
	transfer  _ Transfer from: sourceAccount to: destinyAccount anAmountOf: 100.
	
	self assert: -100 equals: (sourceAccount balance).
	self assert: 100 equals: (destinyAccount balance).
	self assert: 100 equals: transfer value.	
	! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:31:42' prior: 50966722!
test01TransferAffectsSourceAndDestinyBalance
	
	| transfer sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self assert: 0 equals: sourceAccount balance.
	self assert: 0 equals: destinyAccount balance.
	
	transfer  _ Transfer from: sourceAccount to: destinyAccount anAmountOf: 100.
	
	self assert: -100 equals: sourceAccount balance.
	self assert: 100 equals: destinyAccount balance.
	self assert: 100 equals: transfer value.	
	! !
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:31:57' prior: 50966683!
from: aReceptiveAccount to: aReceptiveAccount2 anAmountOf: aSmallInteger 
	self shouldBeImplemented.! !

!classDefinition: 'Transfer class' category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 19:26:29'!
Transfer class
	instanceVariableNames: 'value'!
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:34:30' prior: 50966760!
from: aReceptiveAccount to: aReceptiveAccount2 anAmountOf: aSmallInteger 
	
	Deposit register: aSmallInteger on: aReceptiveAccount2 .
	Withdraw register: aSmallInteger on: aReceptiveAccount .
	value _ aSmallInteger .! !
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:34:50' prior: 50966771!
from: aSourceAccount to: aReceptiveAccount2 anAmountOf: aSmallInteger 
	
	Deposit register: aSmallInteger on: aReceptiveAccount2 .
	Withdraw register: aSmallInteger on: aSourceAccount .
	value _ aSmallInteger .! !
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:35:04' prior: 50966781!
from: aSourceAccount to: aDestinyAccount anAmountOf: aSmallInteger 
	
	Deposit register: aSmallInteger on: aDestinyAccount .
	Withdraw register: aSmallInteger on: aSourceAccount .
	value _ aSmallInteger .! !
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:35:29' prior: 50966791!
from: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer 
	
	Deposit register: valueToTransfer on: aDestinyAccount .
	Withdraw register: valueToTransfer on: aSourceAccount .
	value _ valueToTransfer .! !

!classDefinition: #TransferType category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 19:26:37'!
AccountTransaction subclass: #TransferType
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #TransferType category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 19:26:37'!
AccountTransaction subclass: #TransferType
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:29:11' prior: 50966741!
test01TransferAffectsSourceAndDestinyBalance
	
	| transfer sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	transfer  _ Transfer from: sourceAccount to: destinyAccount anAmountOf: 100.
	
	self assert: sourceAccount balance 

	
	! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:31:05' prior: 50966827!
test01TransferAffectsSourceAndDestinyBalance
	
	| transfer sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self assert: 0 equals: (sourceAccount balance).
	self assert: 0 equals: (destinyAccount balance).
	
	transfer  _ Transfer from: sourceAccount to: destinyAccount anAmountOf: 100.
	
	self assert: -100 equals: (sourceAccount balance).
	self assert: 100 equals: (destinyAccount balance).
	self assert: 100 equals: transfer value.	
	! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:31:42' prior: 50966840!
test01TransferAffectsSourceAndDestinyBalance
	
	| transfer sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self assert: 0 equals: sourceAccount balance.
	self assert: 0 equals: destinyAccount balance.
	
	transfer  _ Transfer from: sourceAccount to: destinyAccount anAmountOf: 100.
	
	self assert: -100 equals: sourceAccount balance.
	self assert: 100 equals: destinyAccount balance.
	self assert: 100 equals: transfer value.	
	! !
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:31:57' prior: 50966801!
from: aReceptiveAccount to: aReceptiveAccount2 anAmountOf: aSmallInteger 
	self shouldBeImplemented.! !

!classDefinition: 'Transfer class' category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 19:26:37'!
Transfer class
	instanceVariableNames: 'value'!
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:34:30' prior: 50966878!
from: aReceptiveAccount to: aReceptiveAccount2 anAmountOf: aSmallInteger 
	
	Deposit register: aSmallInteger on: aReceptiveAccount2 .
	Withdraw register: aSmallInteger on: aReceptiveAccount .
	value _ aSmallInteger .! !
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:34:50' prior: 50966889!
from: aSourceAccount to: aReceptiveAccount2 anAmountOf: aSmallInteger 
	
	Deposit register: aSmallInteger on: aReceptiveAccount2 .
	Withdraw register: aSmallInteger on: aSourceAccount .
	value _ aSmallInteger .! !
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:35:04' prior: 50966899!
from: aSourceAccount to: aDestinyAccount anAmountOf: aSmallInteger 
	
	Deposit register: aSmallInteger on: aDestinyAccount .
	Withdraw register: aSmallInteger on: aSourceAccount .
	value _ aSmallInteger .! !
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:35:29' prior: 50966909!
from: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer 
	
	Deposit register: valueToTransfer on: aDestinyAccount .
	Withdraw register: valueToTransfer on: aSourceAccount .
	value _ valueToTransfer .! !

!classDefinition: #Transfer category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 19:26:37'!
Object subclass: #Transfer
	instanceVariableNames: 'value'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #TransferType category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 19:26:43'!
AccountTransaction subclass: #TransferType
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #TransferType category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 19:26:43'!
AccountTransaction subclass: #TransferType
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:29:11' prior: 50966859!
test01TransferAffectsSourceAndDestinyBalance
	
	| transfer sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	transfer  _ Transfer from: sourceAccount to: destinyAccount anAmountOf: 100.
	
	self assert: sourceAccount balance 

	
	! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:31:05' prior: 50966952!
test01TransferAffectsSourceAndDestinyBalance
	
	| transfer sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self assert: 0 equals: (sourceAccount balance).
	self assert: 0 equals: (destinyAccount balance).
	
	transfer  _ Transfer from: sourceAccount to: destinyAccount anAmountOf: 100.
	
	self assert: -100 equals: (sourceAccount balance).
	self assert: 100 equals: (destinyAccount balance).
	self assert: 100 equals: transfer value.	
	! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:31:42' prior: 50966965!
test01TransferAffectsSourceAndDestinyBalance
	
	| transfer sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self assert: 0 equals: sourceAccount balance.
	self assert: 0 equals: destinyAccount balance.
	
	transfer  _ Transfer from: sourceAccount to: destinyAccount anAmountOf: 100.
	
	self assert: -100 equals: sourceAccount balance.
	self assert: 100 equals: destinyAccount balance.
	self assert: 100 equals: transfer value.	
	! !
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:31:57' prior: 50966919!
from: aReceptiveAccount to: aReceptiveAccount2 anAmountOf: aSmallInteger 
	self shouldBeImplemented.! !

!classDefinition: 'Transfer class' category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 19:26:43'!
Transfer class
	instanceVariableNames: 'value'!
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:34:30' prior: 50967003!
from: aReceptiveAccount to: aReceptiveAccount2 anAmountOf: aSmallInteger 
	
	Deposit register: aSmallInteger on: aReceptiveAccount2 .
	Withdraw register: aSmallInteger on: aReceptiveAccount .
	value _ aSmallInteger .! !
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:34:50' prior: 50967014!
from: aSourceAccount to: aReceptiveAccount2 anAmountOf: aSmallInteger 
	
	Deposit register: aSmallInteger on: aReceptiveAccount2 .
	Withdraw register: aSmallInteger on: aSourceAccount .
	value _ aSmallInteger .! !
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:35:04' prior: 50967024!
from: aSourceAccount to: aDestinyAccount anAmountOf: aSmallInteger 
	
	Deposit register: aSmallInteger on: aDestinyAccount .
	Withdraw register: aSmallInteger on: aSourceAccount .
	value _ aSmallInteger .! !
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:35:29' prior: 50967034!
from: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer 
	
	Deposit register: valueToTransfer on: aDestinyAccount .
	Withdraw register: valueToTransfer on: aSourceAccount .
	value _ valueToTransfer .! !

!classDefinition: #Transfer category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 19:26:43'!
Object subclass: #Transfer
	instanceVariableNames: 'value'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!
!Transfer methodsFor: 'no messages' stamp: 'ja 11/14/2020 16:36:17' overrides: 16896425!
initialize

	value _ 0! !

!classDefinition: #TransferType category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 19:26:47'!
AccountTransaction subclass: #TransferType
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #TransferType category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 19:26:47'!
AccountTransaction subclass: #TransferType
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:29:11' prior: 50966984!
test01TransferAffectsSourceAndDestinyBalance
	
	| transfer sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	transfer  _ Transfer from: sourceAccount to: destinyAccount anAmountOf: 100.
	
	self assert: sourceAccount balance 

	
	! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:31:05' prior: 50967081!
test01TransferAffectsSourceAndDestinyBalance
	
	| transfer sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self assert: 0 equals: (sourceAccount balance).
	self assert: 0 equals: (destinyAccount balance).
	
	transfer  _ Transfer from: sourceAccount to: destinyAccount anAmountOf: 100.
	
	self assert: -100 equals: (sourceAccount balance).
	self assert: 100 equals: (destinyAccount balance).
	self assert: 100 equals: transfer value.	
	! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:31:42' prior: 50967094!
test01TransferAffectsSourceAndDestinyBalance
	
	| transfer sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self assert: 0 equals: sourceAccount balance.
	self assert: 0 equals: destinyAccount balance.
	
	transfer  _ Transfer from: sourceAccount to: destinyAccount anAmountOf: 100.
	
	self assert: -100 equals: sourceAccount balance.
	self assert: 100 equals: destinyAccount balance.
	self assert: 100 equals: transfer value.	
	! !
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:31:57' prior: 50967044!
from: aReceptiveAccount to: aReceptiveAccount2 anAmountOf: aSmallInteger 
	self shouldBeImplemented.! !

!classDefinition: 'Transfer class' category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 19:26:47'!
Transfer class
	instanceVariableNames: 'value'!
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:34:30' prior: 50967132!
from: aReceptiveAccount to: aReceptiveAccount2 anAmountOf: aSmallInteger 
	
	Deposit register: aSmallInteger on: aReceptiveAccount2 .
	Withdraw register: aSmallInteger on: aReceptiveAccount .
	value _ aSmallInteger .! !
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:34:50' prior: 50967143!
from: aSourceAccount to: aReceptiveAccount2 anAmountOf: aSmallInteger 
	
	Deposit register: aSmallInteger on: aReceptiveAccount2 .
	Withdraw register: aSmallInteger on: aSourceAccount .
	value _ aSmallInteger .! !
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:35:04' prior: 50967153!
from: aSourceAccount to: aDestinyAccount anAmountOf: aSmallInteger 
	
	Deposit register: aSmallInteger on: aDestinyAccount .
	Withdraw register: aSmallInteger on: aSourceAccount .
	value _ aSmallInteger .! !
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:35:29' prior: 50967163!
from: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer 
	
	Deposit register: valueToTransfer on: aDestinyAccount .
	Withdraw register: valueToTransfer on: aSourceAccount .
	value _ valueToTransfer .! !

!classDefinition: #Transfer category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 19:26:47'!
Object subclass: #Transfer
	instanceVariableNames: 'value'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!
!Transfer methodsFor: 'no messages' stamp: 'ja 11/14/2020 16:36:17' prior: 50967061 overrides: 16896425!
initialize

	value _ 0! !

!classDefinition: #TransferType category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 19:26:54'!
AccountTransaction subclass: #TransferType
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #TransferType category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 19:26:54'!
AccountTransaction subclass: #TransferType
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:29:11' prior: 50967113!
test01TransferAffectsSourceAndDestinyBalance
	
	| transfer sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	transfer  _ Transfer from: sourceAccount to: destinyAccount anAmountOf: 100.
	
	self assert: sourceAccount balance 

	
	! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:31:05' prior: 50967211!
test01TransferAffectsSourceAndDestinyBalance
	
	| transfer sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self assert: 0 equals: (sourceAccount balance).
	self assert: 0 equals: (destinyAccount balance).
	
	transfer  _ Transfer from: sourceAccount to: destinyAccount anAmountOf: 100.
	
	self assert: -100 equals: (sourceAccount balance).
	self assert: 100 equals: (destinyAccount balance).
	self assert: 100 equals: transfer value.	
	! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:31:42' prior: 50967224!
test01TransferAffectsSourceAndDestinyBalance
	
	| transfer sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self assert: 0 equals: sourceAccount balance.
	self assert: 0 equals: destinyAccount balance.
	
	transfer  _ Transfer from: sourceAccount to: destinyAccount anAmountOf: 100.
	
	self assert: -100 equals: sourceAccount balance.
	self assert: 100 equals: destinyAccount balance.
	self assert: 100 equals: transfer value.	
	! !
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:31:57' prior: 50967173!
from: aReceptiveAccount to: aReceptiveAccount2 anAmountOf: aSmallInteger 
	self shouldBeImplemented.! !

!classDefinition: 'Transfer class' category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 19:26:54'!
Transfer class
	instanceVariableNames: 'value'!
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:34:30' prior: 50967262!
from: aReceptiveAccount to: aReceptiveAccount2 anAmountOf: aSmallInteger 
	
	Deposit register: aSmallInteger on: aReceptiveAccount2 .
	Withdraw register: aSmallInteger on: aReceptiveAccount .
	value _ aSmallInteger .! !
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:34:50' prior: 50967273!
from: aSourceAccount to: aReceptiveAccount2 anAmountOf: aSmallInteger 
	
	Deposit register: aSmallInteger on: aReceptiveAccount2 .
	Withdraw register: aSmallInteger on: aSourceAccount .
	value _ aSmallInteger .! !
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:35:04' prior: 50967283!
from: aSourceAccount to: aDestinyAccount anAmountOf: aSmallInteger 
	
	Deposit register: aSmallInteger on: aDestinyAccount .
	Withdraw register: aSmallInteger on: aSourceAccount .
	value _ aSmallInteger .! !
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:35:29' prior: 50967293!
from: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer 
	
	Deposit register: valueToTransfer on: aDestinyAccount .
	Withdraw register: valueToTransfer on: aSourceAccount .
	value _ valueToTransfer .! !

!classDefinition: #Transfer category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 19:26:54'!
Object subclass: #Transfer
	instanceVariableNames: 'value'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!
!Transfer methodsFor: 'no messages' stamp: 'ja 11/14/2020 16:36:17' prior: 50967191 overrides: 16896425!
initialize

	value _ 0! !
!Transfer methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:36:58' overrides: 16881508!
value 

	^ value ! !

!classDefinition: #TransferType category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 19:26:58'!
AccountTransaction subclass: #TransferType
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #TransferType category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 19:26:58'!
AccountTransaction subclass: #TransferType
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:29:11' prior: 50967243!
test01TransferAffectsSourceAndDestinyBalance
	
	| transfer sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	transfer  _ Transfer from: sourceAccount to: destinyAccount anAmountOf: 100.
	
	self assert: sourceAccount balance 

	
	! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:31:05' prior: 50967345!
test01TransferAffectsSourceAndDestinyBalance
	
	| transfer sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self assert: 0 equals: (sourceAccount balance).
	self assert: 0 equals: (destinyAccount balance).
	
	transfer  _ Transfer from: sourceAccount to: destinyAccount anAmountOf: 100.
	
	self assert: -100 equals: (sourceAccount balance).
	self assert: 100 equals: (destinyAccount balance).
	self assert: 100 equals: transfer value.	
	! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:31:42' prior: 50967358!
test01TransferAffectsSourceAndDestinyBalance
	
	| transfer sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self assert: 0 equals: sourceAccount balance.
	self assert: 0 equals: destinyAccount balance.
	
	transfer  _ Transfer from: sourceAccount to: destinyAccount anAmountOf: 100.
	
	self assert: -100 equals: sourceAccount balance.
	self assert: 100 equals: destinyAccount balance.
	self assert: 100 equals: transfer value.	
	! !
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:31:57' prior: 50967303!
from: aReceptiveAccount to: aReceptiveAccount2 anAmountOf: aSmallInteger 
	self shouldBeImplemented.! !

!classDefinition: 'Transfer class' category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 19:26:58'!
Transfer class
	instanceVariableNames: 'value'!
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:34:30' prior: 50967396!
from: aReceptiveAccount to: aReceptiveAccount2 anAmountOf: aSmallInteger 
	
	Deposit register: aSmallInteger on: aReceptiveAccount2 .
	Withdraw register: aSmallInteger on: aReceptiveAccount .
	value _ aSmallInteger .! !
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:34:50' prior: 50967407!
from: aSourceAccount to: aReceptiveAccount2 anAmountOf: aSmallInteger 
	
	Deposit register: aSmallInteger on: aReceptiveAccount2 .
	Withdraw register: aSmallInteger on: aSourceAccount .
	value _ aSmallInteger .! !
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:35:04' prior: 50967417!
from: aSourceAccount to: aDestinyAccount anAmountOf: aSmallInteger 
	
	Deposit register: aSmallInteger on: aDestinyAccount .
	Withdraw register: aSmallInteger on: aSourceAccount .
	value _ aSmallInteger .! !
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:35:29' prior: 50967427!
from: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer 
	
	Deposit register: valueToTransfer on: aDestinyAccount .
	Withdraw register: valueToTransfer on: aSourceAccount .
	value _ valueToTransfer .! !

!classDefinition: #Transfer category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 19:26:58'!
Object subclass: #Transfer
	instanceVariableNames: 'value'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!
!Transfer methodsFor: 'no messages' stamp: 'ja 11/14/2020 16:36:17' prior: 50967321 overrides: 16896425!
initialize

	value _ 0! !
!Transfer methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:36:58' prior: 50967325 overrides: 16881508!
value 

	^ value ! !

!methodRemoval: Transfer class #from:to:anAmountOf: stamp: 'ja 11/14/2020 19:26:58'!
from: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer 
	
	Deposit register: valueToTransfer on: aDestinyAccount .
	Withdraw register: valueToTransfer on: aSourceAccount .
	value _ valueToTransfer .!
!Transfer methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:38:06'!
from: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer 
	
	Deposit register: valueToTransfer on: aDestinyAccount .
	Withdraw register: valueToTransfer on: aSourceAccount .
	value _ valueToTransfer .! !

!classDefinition: #TransferType category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 19:27:02'!
AccountTransaction subclass: #TransferType
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #TransferType category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 19:27:02'!
AccountTransaction subclass: #TransferType
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:29:11' prior: 50967377!
test01TransferAffectsSourceAndDestinyBalance
	
	| transfer sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	transfer  _ Transfer from: sourceAccount to: destinyAccount anAmountOf: 100.
	
	self assert: sourceAccount balance 

	
	! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:31:05' prior: 50967499!
test01TransferAffectsSourceAndDestinyBalance
	
	| transfer sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self assert: 0 equals: (sourceAccount balance).
	self assert: 0 equals: (destinyAccount balance).
	
	transfer  _ Transfer from: sourceAccount to: destinyAccount anAmountOf: 100.
	
	self assert: -100 equals: (sourceAccount balance).
	self assert: 100 equals: (destinyAccount balance).
	self assert: 100 equals: transfer value.	
	! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:31:42' prior: 50967512!
test01TransferAffectsSourceAndDestinyBalance
	
	| transfer sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self assert: 0 equals: sourceAccount balance.
	self assert: 0 equals: destinyAccount balance.
	
	transfer  _ Transfer from: sourceAccount to: destinyAccount anAmountOf: 100.
	
	self assert: -100 equals: sourceAccount balance.
	self assert: 100 equals: destinyAccount balance.
	self assert: 100 equals: transfer value.	
	! !
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:31:57'!
from: aReceptiveAccount to: aReceptiveAccount2 anAmountOf: aSmallInteger 
	self shouldBeImplemented.! !

!classDefinition: 'Transfer class' category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 19:27:02'!
Transfer class
	instanceVariableNames: 'value'!
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:34:30' prior: 50967550!
from: aReceptiveAccount to: aReceptiveAccount2 anAmountOf: aSmallInteger 
	
	Deposit register: aSmallInteger on: aReceptiveAccount2 .
	Withdraw register: aSmallInteger on: aReceptiveAccount .
	value _ aSmallInteger .! !
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:34:50' prior: 50967561!
from: aSourceAccount to: aReceptiveAccount2 anAmountOf: aSmallInteger 
	
	Deposit register: aSmallInteger on: aReceptiveAccount2 .
	Withdraw register: aSmallInteger on: aSourceAccount .
	value _ aSmallInteger .! !
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:35:04' prior: 50967571!
from: aSourceAccount to: aDestinyAccount anAmountOf: aSmallInteger 
	
	Deposit register: aSmallInteger on: aDestinyAccount .
	Withdraw register: aSmallInteger on: aSourceAccount .
	value _ aSmallInteger .! !
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:35:29' prior: 50967581!
from: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer 
	
	Deposit register: valueToTransfer on: aDestinyAccount .
	Withdraw register: valueToTransfer on: aSourceAccount .
	value _ valueToTransfer .! !

!classDefinition: #Transfer category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 19:27:02'!
Object subclass: #Transfer
	instanceVariableNames: 'value'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!
!Transfer methodsFor: 'no messages' stamp: 'ja 11/14/2020 16:36:17' prior: 50967455 overrides: 16896425!
initialize

	value _ 0! !
!Transfer methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:36:58' prior: 50967460 overrides: 16881508!
value 

	^ value ! !

!methodRemoval: Transfer class #from:to:anAmountOf: stamp: 'ja 11/14/2020 19:27:02'!
from: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer 
	
	Deposit register: valueToTransfer on: aDestinyAccount .
	Withdraw register: valueToTransfer on: aSourceAccount .
	value _ valueToTransfer .!
!Transfer methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:38:06' prior: 50967473!
from: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer 
	
	Deposit register: valueToTransfer on: aDestinyAccount .
	Withdraw register: valueToTransfer on: aSourceAccount .
	value _ valueToTransfer .! !

!classDefinition: 'Transfer class' category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 19:27:02'!
Transfer class
	instanceVariableNames: ''!

!classDefinition: #TransferType category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 19:27:04'!
AccountTransaction subclass: #TransferType
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #TransferType category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 19:27:04'!
AccountTransaction subclass: #TransferType
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:29:11' prior: 50967531!
test01TransferAffectsSourceAndDestinyBalance
	
	| transfer sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	transfer  _ Transfer from: sourceAccount to: destinyAccount anAmountOf: 100.
	
	self assert: sourceAccount balance 

	
	! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:31:05' prior: 50967657!
test01TransferAffectsSourceAndDestinyBalance
	
	| transfer sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self assert: 0 equals: (sourceAccount balance).
	self assert: 0 equals: (destinyAccount balance).
	
	transfer  _ Transfer from: sourceAccount to: destinyAccount anAmountOf: 100.
	
	self assert: -100 equals: (sourceAccount balance).
	self assert: 100 equals: (destinyAccount balance).
	self assert: 100 equals: transfer value.	
	! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:31:42' prior: 50967670!
test01TransferAffectsSourceAndDestinyBalance
	
	| transfer sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self assert: 0 equals: sourceAccount balance.
	self assert: 0 equals: destinyAccount balance.
	
	transfer  _ Transfer from: sourceAccount to: destinyAccount anAmountOf: 100.
	
	self assert: -100 equals: sourceAccount balance.
	self assert: 100 equals: destinyAccount balance.
	self assert: 100 equals: transfer value.	
	! !
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:31:57'!
from: aReceptiveAccount to: aReceptiveAccount2 anAmountOf: aSmallInteger 
	self shouldBeImplemented.! !

!classDefinition: 'Transfer class' category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 19:27:04'!
Transfer class
	instanceVariableNames: 'value'!
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:34:30' prior: 50967708!
from: aReceptiveAccount to: aReceptiveAccount2 anAmountOf: aSmallInteger 
	
	Deposit register: aSmallInteger on: aReceptiveAccount2 .
	Withdraw register: aSmallInteger on: aReceptiveAccount .
	value _ aSmallInteger .! !
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:34:50' prior: 50967719!
from: aSourceAccount to: aReceptiveAccount2 anAmountOf: aSmallInteger 
	
	Deposit register: aSmallInteger on: aReceptiveAccount2 .
	Withdraw register: aSmallInteger on: aSourceAccount .
	value _ aSmallInteger .! !
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:35:04' prior: 50967729!
from: aSourceAccount to: aDestinyAccount anAmountOf: aSmallInteger 
	
	Deposit register: aSmallInteger on: aDestinyAccount .
	Withdraw register: aSmallInteger on: aSourceAccount .
	value _ aSmallInteger .! !
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:35:29' prior: 50967739!
from: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer 
	
	Deposit register: valueToTransfer on: aDestinyAccount .
	Withdraw register: valueToTransfer on: aSourceAccount .
	value _ valueToTransfer .! !

!classDefinition: #Transfer category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 19:27:04'!
Object subclass: #Transfer
	instanceVariableNames: 'value'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!
!Transfer methodsFor: 'no messages' stamp: 'ja 11/14/2020 16:36:17' prior: 50967609 overrides: 16896425!
initialize

	value _ 0! !
!Transfer methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:36:58' prior: 50967614 overrides: 16881508!
value 

	^ value ! !

!methodRemoval: Transfer class #from:to:anAmountOf: stamp: 'ja 11/14/2020 19:27:04'!
from: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer 
	
	Deposit register: valueToTransfer on: aDestinyAccount .
	Withdraw register: valueToTransfer on: aSourceAccount .
	value _ valueToTransfer .!
!Transfer methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:38:06' prior: 50967627!
from: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer 
	
	Deposit register: valueToTransfer on: aDestinyAccount .
	Withdraw register: valueToTransfer on: aSourceAccount .
	value _ valueToTransfer .! !

!classDefinition: 'Transfer class' category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 19:27:04'!
Transfer class
	instanceVariableNames: ''!

!classDefinition: 'Transfer class' category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 19:27:04'!
Transfer class
	instanceVariableNames: ''!

!classDefinition: #TransferType category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 19:27:07'!
AccountTransaction subclass: #TransferType
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #TransferType category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 19:27:07'!
AccountTransaction subclass: #TransferType
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:29:11' prior: 50967689!
test01TransferAffectsSourceAndDestinyBalance
	
	| transfer sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	transfer  _ Transfer from: sourceAccount to: destinyAccount anAmountOf: 100.
	
	self assert: sourceAccount balance 

	
	! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:31:05' prior: 50967820!
test01TransferAffectsSourceAndDestinyBalance
	
	| transfer sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self assert: 0 equals: (sourceAccount balance).
	self assert: 0 equals: (destinyAccount balance).
	
	transfer  _ Transfer from: sourceAccount to: destinyAccount anAmountOf: 100.
	
	self assert: -100 equals: (sourceAccount balance).
	self assert: 100 equals: (destinyAccount balance).
	self assert: 100 equals: transfer value.	
	! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:31:42' prior: 50967833!
test01TransferAffectsSourceAndDestinyBalance
	
	| transfer sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self assert: 0 equals: sourceAccount balance.
	self assert: 0 equals: destinyAccount balance.
	
	transfer  _ Transfer from: sourceAccount to: destinyAccount anAmountOf: 100.
	
	self assert: -100 equals: sourceAccount balance.
	self assert: 100 equals: destinyAccount balance.
	self assert: 100 equals: transfer value.	
	! !
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:31:57'!
from: aReceptiveAccount to: aReceptiveAccount2 anAmountOf: aSmallInteger 
	self shouldBeImplemented.! !

!classDefinition: 'Transfer class' category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 19:27:08'!
Transfer class
	instanceVariableNames: 'value'!
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:34:30' prior: 50967871!
from: aReceptiveAccount to: aReceptiveAccount2 anAmountOf: aSmallInteger 
	
	Deposit register: aSmallInteger on: aReceptiveAccount2 .
	Withdraw register: aSmallInteger on: aReceptiveAccount .
	value _ aSmallInteger .! !
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:34:50' prior: 50967882!
from: aSourceAccount to: aReceptiveAccount2 anAmountOf: aSmallInteger 
	
	Deposit register: aSmallInteger on: aReceptiveAccount2 .
	Withdraw register: aSmallInteger on: aSourceAccount .
	value _ aSmallInteger .! !
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:35:04' prior: 50967892!
from: aSourceAccount to: aDestinyAccount anAmountOf: aSmallInteger 
	
	Deposit register: aSmallInteger on: aDestinyAccount .
	Withdraw register: aSmallInteger on: aSourceAccount .
	value _ aSmallInteger .! !
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:35:29' prior: 50967902!
from: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer 
	
	Deposit register: valueToTransfer on: aDestinyAccount .
	Withdraw register: valueToTransfer on: aSourceAccount .
	value _ valueToTransfer .! !

!classDefinition: #Transfer category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 19:27:08'!
Object subclass: #Transfer
	instanceVariableNames: 'value'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!
!Transfer methodsFor: 'no messages' stamp: 'ja 11/14/2020 16:36:17' prior: 50967767 overrides: 16896425!
initialize

	value _ 0! !
!Transfer methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:36:58' prior: 50967772 overrides: 16881508!
value 

	^ value ! !

!methodRemoval: Transfer class #from:to:anAmountOf: stamp: 'ja 11/14/2020 19:27:08'!
from: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer 
	
	Deposit register: valueToTransfer on: aDestinyAccount .
	Withdraw register: valueToTransfer on: aSourceAccount .
	value _ valueToTransfer .!
!Transfer methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:38:06' prior: 50967785!
from: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer 
	
	Deposit register: valueToTransfer on: aDestinyAccount .
	Withdraw register: valueToTransfer on: aSourceAccount .
	value _ valueToTransfer .! !

!classDefinition: 'Transfer class' category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 19:27:08'!
Transfer class
	instanceVariableNames: ''!

!classDefinition: 'Transfer class' category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 19:27:08'!
Transfer class
	instanceVariableNames: ''!

!classDefinition: #TransferType category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 19:27:11'!
AccountTransaction subclass: #TransferType
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #TransferType category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 19:27:11'!
AccountTransaction subclass: #TransferType
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:29:11' prior: 50967852!
test01TransferAffectsSourceAndDestinyBalance
	
	| transfer sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	transfer  _ Transfer from: sourceAccount to: destinyAccount anAmountOf: 100.
	
	self assert: sourceAccount balance 

	
	! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:31:05' prior: 50967983!
test01TransferAffectsSourceAndDestinyBalance
	
	| transfer sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self assert: 0 equals: (sourceAccount balance).
	self assert: 0 equals: (destinyAccount balance).
	
	transfer  _ Transfer from: sourceAccount to: destinyAccount anAmountOf: 100.
	
	self assert: -100 equals: (sourceAccount balance).
	self assert: 100 equals: (destinyAccount balance).
	self assert: 100 equals: transfer value.	
	! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:31:42' prior: 50967996!
test01TransferAffectsSourceAndDestinyBalance
	
	| transfer sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self assert: 0 equals: sourceAccount balance.
	self assert: 0 equals: destinyAccount balance.
	
	transfer  _ Transfer from: sourceAccount to: destinyAccount anAmountOf: 100.
	
	self assert: -100 equals: sourceAccount balance.
	self assert: 100 equals: destinyAccount balance.
	self assert: 100 equals: transfer value.	
	! !
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:31:57'!
from: aReceptiveAccount to: aReceptiveAccount2 anAmountOf: aSmallInteger 
	self shouldBeImplemented.! !

!classDefinition: 'Transfer class' category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 19:27:11'!
Transfer class
	instanceVariableNames: 'value'!
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:34:30' prior: 50968034!
from: aReceptiveAccount to: aReceptiveAccount2 anAmountOf: aSmallInteger 
	
	Deposit register: aSmallInteger on: aReceptiveAccount2 .
	Withdraw register: aSmallInteger on: aReceptiveAccount .
	value _ aSmallInteger .! !
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:34:50' prior: 50968045!
from: aSourceAccount to: aReceptiveAccount2 anAmountOf: aSmallInteger 
	
	Deposit register: aSmallInteger on: aReceptiveAccount2 .
	Withdraw register: aSmallInteger on: aSourceAccount .
	value _ aSmallInteger .! !
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:35:04' prior: 50968055!
from: aSourceAccount to: aDestinyAccount anAmountOf: aSmallInteger 
	
	Deposit register: aSmallInteger on: aDestinyAccount .
	Withdraw register: aSmallInteger on: aSourceAccount .
	value _ aSmallInteger .! !
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:35:29' prior: 50968065!
from: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer 
	
	Deposit register: valueToTransfer on: aDestinyAccount .
	Withdraw register: valueToTransfer on: aSourceAccount .
	value _ valueToTransfer .! !

!classDefinition: #Transfer category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 19:27:11'!
Object subclass: #Transfer
	instanceVariableNames: 'value'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!
!Transfer methodsFor: 'no messages' stamp: 'ja 11/14/2020 16:36:17' prior: 50967930 overrides: 16896425!
initialize

	value _ 0! !
!Transfer methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:36:58' prior: 50967935 overrides: 16881508!
value 

	^ value ! !

!methodRemoval: Transfer class #from:to:anAmountOf: stamp: 'ja 11/14/2020 19:27:11'!
from: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer 
	
	Deposit register: valueToTransfer on: aDestinyAccount .
	Withdraw register: valueToTransfer on: aSourceAccount .
	value _ valueToTransfer .!
!Transfer methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:38:06' prior: 50967948!
from: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer 
	
	Deposit register: valueToTransfer on: aDestinyAccount .
	Withdraw register: valueToTransfer on: aSourceAccount .
	value _ valueToTransfer .! !

!classDefinition: 'Transfer class' category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 19:27:11'!
Transfer class
	instanceVariableNames: ''!

!classDefinition: 'Transfer class' category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 19:27:11'!
Transfer class
	instanceVariableNames: ''!
!Transfer class methodsFor: 'no messages' stamp: 'ja 11/14/2020 16:40:54'!
from: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer 

	Transfer new initializeFrom: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer .! !
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:41:02' prior: 50968130!
from: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer 

	^ Transfer new initializeFrom: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer .! !

!classDefinition: #TransferType category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 19:27:14'!
AccountTransaction subclass: #TransferType
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #TransferType category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 19:27:14'!
AccountTransaction subclass: #TransferType
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:29:11' prior: 50968015!
test01TransferAffectsSourceAndDestinyBalance
	
	| transfer sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	transfer  _ Transfer from: sourceAccount to: destinyAccount anAmountOf: 100.
	
	self assert: sourceAccount balance 

	
	! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:31:05' prior: 50968163!
test01TransferAffectsSourceAndDestinyBalance
	
	| transfer sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self assert: 0 equals: (sourceAccount balance).
	self assert: 0 equals: (destinyAccount balance).
	
	transfer  _ Transfer from: sourceAccount to: destinyAccount anAmountOf: 100.
	
	self assert: -100 equals: (sourceAccount balance).
	self assert: 100 equals: (destinyAccount balance).
	self assert: 100 equals: transfer value.	
	! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:31:42' prior: 50968176!
test01TransferAffectsSourceAndDestinyBalance
	
	| transfer sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self assert: 0 equals: sourceAccount balance.
	self assert: 0 equals: destinyAccount balance.
	
	transfer  _ Transfer from: sourceAccount to: destinyAccount anAmountOf: 100.
	
	self assert: -100 equals: sourceAccount balance.
	self assert: 100 equals: destinyAccount balance.
	self assert: 100 equals: transfer value.	
	! !
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:31:57' prior: 50968139!
from: aReceptiveAccount to: aReceptiveAccount2 anAmountOf: aSmallInteger 
	self shouldBeImplemented.! !

!classDefinition: 'Transfer class' category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 19:27:14'!
Transfer class
	instanceVariableNames: 'value'!
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:34:30' prior: 50968214!
from: aReceptiveAccount to: aReceptiveAccount2 anAmountOf: aSmallInteger 
	
	Deposit register: aSmallInteger on: aReceptiveAccount2 .
	Withdraw register: aSmallInteger on: aReceptiveAccount .
	value _ aSmallInteger .! !
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:34:50' prior: 50968225!
from: aSourceAccount to: aReceptiveAccount2 anAmountOf: aSmallInteger 
	
	Deposit register: aSmallInteger on: aReceptiveAccount2 .
	Withdraw register: aSmallInteger on: aSourceAccount .
	value _ aSmallInteger .! !
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:35:04' prior: 50968235!
from: aSourceAccount to: aDestinyAccount anAmountOf: aSmallInteger 
	
	Deposit register: aSmallInteger on: aDestinyAccount .
	Withdraw register: aSmallInteger on: aSourceAccount .
	value _ aSmallInteger .! !
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:35:29' prior: 50968245!
from: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer 
	
	Deposit register: valueToTransfer on: aDestinyAccount .
	Withdraw register: valueToTransfer on: aSourceAccount .
	value _ valueToTransfer .! !

!classDefinition: #Transfer category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 19:27:15'!
Object subclass: #Transfer
	instanceVariableNames: 'value'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!
!Transfer methodsFor: 'no messages' stamp: 'ja 11/14/2020 16:36:17' prior: 50968093 overrides: 16896425!
initialize

	value _ 0! !
!Transfer methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:36:58' prior: 50968098 overrides: 16881508!
value 

	^ value ! !

!methodRemoval: Transfer class #from:to:anAmountOf: stamp: 'ja 11/14/2020 19:27:15'!
from: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer 
	
	Deposit register: valueToTransfer on: aDestinyAccount .
	Withdraw register: valueToTransfer on: aSourceAccount .
	value _ valueToTransfer .!
!Transfer methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:38:06' prior: 50968111!
from: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer 
	
	Deposit register: valueToTransfer on: aDestinyAccount .
	Withdraw register: valueToTransfer on: aSourceAccount .
	value _ valueToTransfer .! !

!classDefinition: 'Transfer class' category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 19:27:15'!
Transfer class
	instanceVariableNames: ''!

!classDefinition: 'Transfer class' category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 19:27:15'!
Transfer class
	instanceVariableNames: ''!
!Transfer class methodsFor: 'no messages' stamp: 'ja 11/14/2020 16:40:54'!
from: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer 

	Transfer new initializeFrom: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer .! !
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:41:02' prior: 50968310!
from: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer 

	^ Transfer new initializeFrom: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer .! !
!Transfer methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:41:20'!
initializeFrom: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer 

	Deposit register: valueToTransfer on: aDestinyAccount .
	Withdraw register: valueToTransfer on: aSourceAccount .
	value _ valueToTransfer .! !

!methodRemoval: Transfer #from:to:anAmountOf: stamp: 'ja 11/14/2020 19:27:15'!
from: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer 
	
	Deposit register: valueToTransfer on: aDestinyAccount .
	Withdraw register: valueToTransfer on: aSourceAccount .
	value _ valueToTransfer .!

!classDefinition: #TransferType category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 19:27:17'!
AccountTransaction subclass: #TransferType
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #TransferType category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 19:27:17'!
AccountTransaction subclass: #TransferType
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:29:11' prior: 50968195!
test01TransferAffectsSourceAndDestinyBalance
	
	| transfer sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	transfer  _ Transfer from: sourceAccount to: destinyAccount anAmountOf: 100.
	
	self assert: sourceAccount balance 

	
	! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:31:05' prior: 50968362!
test01TransferAffectsSourceAndDestinyBalance
	
	| transfer sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self assert: 0 equals: (sourceAccount balance).
	self assert: 0 equals: (destinyAccount balance).
	
	transfer  _ Transfer from: sourceAccount to: destinyAccount anAmountOf: 100.
	
	self assert: -100 equals: (sourceAccount balance).
	self assert: 100 equals: (destinyAccount balance).
	self assert: 100 equals: transfer value.	
	! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:31:42' prior: 50968375!
test01TransferAffectsSourceAndDestinyBalance
	
	| transfer sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self assert: 0 equals: sourceAccount balance.
	self assert: 0 equals: destinyAccount balance.
	
	transfer  _ Transfer from: sourceAccount to: destinyAccount anAmountOf: 100.
	
	self assert: -100 equals: sourceAccount balance.
	self assert: 100 equals: destinyAccount balance.
	self assert: 100 equals: transfer value.	
	! !
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:31:57' prior: 50968319!
from: aReceptiveAccount to: aReceptiveAccount2 anAmountOf: aSmallInteger 
	self shouldBeImplemented.! !

!classDefinition: 'Transfer class' category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 19:27:17'!
Transfer class
	instanceVariableNames: 'value'!
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:34:30' prior: 50968413!
from: aReceptiveAccount to: aReceptiveAccount2 anAmountOf: aSmallInteger 
	
	Deposit register: aSmallInteger on: aReceptiveAccount2 .
	Withdraw register: aSmallInteger on: aReceptiveAccount .
	value _ aSmallInteger .! !
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:34:50' prior: 50968424!
from: aSourceAccount to: aReceptiveAccount2 anAmountOf: aSmallInteger 
	
	Deposit register: aSmallInteger on: aReceptiveAccount2 .
	Withdraw register: aSmallInteger on: aSourceAccount .
	value _ aSmallInteger .! !
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:35:04' prior: 50968434!
from: aSourceAccount to: aDestinyAccount anAmountOf: aSmallInteger 
	
	Deposit register: aSmallInteger on: aDestinyAccount .
	Withdraw register: aSmallInteger on: aSourceAccount .
	value _ aSmallInteger .! !
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:35:29' prior: 50968444!
from: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer 
	
	Deposit register: valueToTransfer on: aDestinyAccount .
	Withdraw register: valueToTransfer on: aSourceAccount .
	value _ valueToTransfer .! !

!classDefinition: #Transfer category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 19:27:17'!
Object subclass: #Transfer
	instanceVariableNames: 'value'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!
!Transfer methodsFor: 'no messages' stamp: 'ja 11/14/2020 16:36:17' prior: 50968273 overrides: 16896425!
initialize

	value _ 0! !
!Transfer methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:36:58' prior: 50968278 overrides: 16881508!
value 

	^ value ! !

!methodRemoval: Transfer class #from:to:anAmountOf: stamp: 'ja 11/14/2020 19:27:17'!
from: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer 
	
	Deposit register: valueToTransfer on: aDestinyAccount .
	Withdraw register: valueToTransfer on: aSourceAccount .
	value _ valueToTransfer .!
!Transfer methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:38:06'!
from: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer 
	
	Deposit register: valueToTransfer on: aDestinyAccount .
	Withdraw register: valueToTransfer on: aSourceAccount .
	value _ valueToTransfer .! !

!classDefinition: 'Transfer class' category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 19:27:17'!
Transfer class
	instanceVariableNames: ''!

!classDefinition: 'Transfer class' category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 19:27:17'!
Transfer class
	instanceVariableNames: ''!
!Transfer class methodsFor: 'no messages' stamp: 'ja 11/14/2020 16:40:54'!
from: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer 

	Transfer new initializeFrom: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer .! !
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:41:02' prior: 50968509!
from: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer 

	^ Transfer new initializeFrom: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer .! !
!Transfer methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:41:20' prior: 50968327!
initializeFrom: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer 

	Deposit register: valueToTransfer on: aDestinyAccount .
	Withdraw register: valueToTransfer on: aSourceAccount .
	value _ valueToTransfer .! !

!methodRemoval: Transfer #from:to:anAmountOf: stamp: 'ja 11/14/2020 19:27:18'!
from: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer 
	
	Deposit register: valueToTransfer on: aDestinyAccount .
	Withdraw register: valueToTransfer on: aSourceAccount .
	value _ valueToTransfer .!

!methodRemoval: Transfer #initialize stamp: 'ja 11/14/2020 19:27:18'!
initialize

	value _ 0!

!classDefinition: #TransferType category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 19:27:20'!
AccountTransaction subclass: #TransferType
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #TransferType category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 19:27:20'!
AccountTransaction subclass: #TransferType
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:29:11' prior: 50968394!
test01TransferAffectsSourceAndDestinyBalance
	
	| transfer sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	transfer  _ Transfer from: sourceAccount to: destinyAccount anAmountOf: 100.
	
	self assert: sourceAccount balance 

	
	! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:31:05' prior: 50968565!
test01TransferAffectsSourceAndDestinyBalance
	
	| transfer sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self assert: 0 equals: (sourceAccount balance).
	self assert: 0 equals: (destinyAccount balance).
	
	transfer  _ Transfer from: sourceAccount to: destinyAccount anAmountOf: 100.
	
	self assert: -100 equals: (sourceAccount balance).
	self assert: 100 equals: (destinyAccount balance).
	self assert: 100 equals: transfer value.	
	! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:31:42' prior: 50968578!
test01TransferAffectsSourceAndDestinyBalance
	
	| transfer sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self assert: 0 equals: sourceAccount balance.
	self assert: 0 equals: destinyAccount balance.
	
	transfer  _ Transfer from: sourceAccount to: destinyAccount anAmountOf: 100.
	
	self assert: -100 equals: sourceAccount balance.
	self assert: 100 equals: destinyAccount balance.
	self assert: 100 equals: transfer value.	
	! !
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:31:57' prior: 50968518!
from: aReceptiveAccount to: aReceptiveAccount2 anAmountOf: aSmallInteger 
	self shouldBeImplemented.! !

!classDefinition: 'Transfer class' category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 19:27:20'!
Transfer class
	instanceVariableNames: 'value'!
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:34:30' prior: 50968616!
from: aReceptiveAccount to: aReceptiveAccount2 anAmountOf: aSmallInteger 
	
	Deposit register: aSmallInteger on: aReceptiveAccount2 .
	Withdraw register: aSmallInteger on: aReceptiveAccount .
	value _ aSmallInteger .! !
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:34:50' prior: 50968627!
from: aSourceAccount to: aReceptiveAccount2 anAmountOf: aSmallInteger 
	
	Deposit register: aSmallInteger on: aReceptiveAccount2 .
	Withdraw register: aSmallInteger on: aSourceAccount .
	value _ aSmallInteger .! !
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:35:04' prior: 50968637!
from: aSourceAccount to: aDestinyAccount anAmountOf: aSmallInteger 
	
	Deposit register: aSmallInteger on: aDestinyAccount .
	Withdraw register: aSmallInteger on: aSourceAccount .
	value _ aSmallInteger .! !
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:35:29' prior: 50968647!
from: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer 
	
	Deposit register: valueToTransfer on: aDestinyAccount .
	Withdraw register: valueToTransfer on: aSourceAccount .
	value _ valueToTransfer .! !

!classDefinition: #Transfer category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 19:27:20'!
Object subclass: #Transfer
	instanceVariableNames: 'value'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!
!Transfer methodsFor: 'no messages' stamp: 'ja 11/14/2020 16:36:17' overrides: 16896425!
initialize

	value _ 0! !
!Transfer methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:36:58' prior: 50968477 overrides: 16881508!
value 

	^ value ! !

!methodRemoval: Transfer class #from:to:anAmountOf: stamp: 'ja 11/14/2020 19:27:20'!
from: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer 
	
	Deposit register: valueToTransfer on: aDestinyAccount .
	Withdraw register: valueToTransfer on: aSourceAccount .
	value _ valueToTransfer .!
!Transfer methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:38:06'!
from: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer 
	
	Deposit register: valueToTransfer on: aDestinyAccount .
	Withdraw register: valueToTransfer on: aSourceAccount .
	value _ valueToTransfer .! !

!classDefinition: 'Transfer class' category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 19:27:20'!
Transfer class
	instanceVariableNames: ''!

!classDefinition: 'Transfer class' category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 19:27:20'!
Transfer class
	instanceVariableNames: ''!
!Transfer class methodsFor: 'no messages' stamp: 'ja 11/14/2020 16:40:54'!
from: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer 

	Transfer new initializeFrom: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer .! !
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:41:02' prior: 50968711!
from: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer 

	^ Transfer new initializeFrom: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer .! !
!Transfer methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:41:20' prior: 50968527!
initializeFrom: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer 

	Deposit register: valueToTransfer on: aDestinyAccount .
	Withdraw register: valueToTransfer on: aSourceAccount .
	value _ valueToTransfer .! !

!methodRemoval: Transfer #from:to:anAmountOf: stamp: 'ja 11/14/2020 19:27:20'!
from: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer 
	
	Deposit register: valueToTransfer on: aDestinyAccount .
	Withdraw register: valueToTransfer on: aSourceAccount .
	value _ valueToTransfer .!

!methodRemoval: Transfer #initialize stamp: 'ja 11/14/2020 19:27:20'!
initialize

	value _ 0!
!Transfer methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:42:09' prior: 50968729!
initializeFrom: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer 

	Deposit register: valueToTransfer on: aDestinyAccount .
	Withdraw register: valueToTransfer on: aSourceAccount .
	
	value _ valueToTransfer .! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:42:27' prior: 50968597!
test01TransferAffectsSourceAndDestinyBalance
	
	| transfer sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self assert: 0 equals: sourceAccount balance.
	self assert: 0 equals: destinyAccount balance.
	
	transfer  _ Transfer from: sourceAccount to: destinyAccount anAmountOf: 100.
	
	self assert: -100 equals: sourceAccount balance.
	self assert: 100 equals: destinyAccount balance.
! !

!classDefinition: #TransferType category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 19:27:24'!
AccountTransaction subclass: #TransferType
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #TransferType category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 19:27:24'!
AccountTransaction subclass: #TransferType
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:29:11' prior: 50968763!
test01TransferAffectsSourceAndDestinyBalance
	
	| transfer sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	transfer  _ Transfer from: sourceAccount to: destinyAccount anAmountOf: 100.
	
	self assert: sourceAccount balance 

	
	! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:31:05' prior: 50968796!
test01TransferAffectsSourceAndDestinyBalance
	
	| transfer sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self assert: 0 equals: (sourceAccount balance).
	self assert: 0 equals: (destinyAccount balance).
	
	transfer  _ Transfer from: sourceAccount to: destinyAccount anAmountOf: 100.
	
	self assert: -100 equals: (sourceAccount balance).
	self assert: 100 equals: (destinyAccount balance).
	self assert: 100 equals: transfer value.	
	! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:31:42' prior: 50968809!
test01TransferAffectsSourceAndDestinyBalance
	
	| transfer sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self assert: 0 equals: sourceAccount balance.
	self assert: 0 equals: destinyAccount balance.
	
	transfer  _ Transfer from: sourceAccount to: destinyAccount anAmountOf: 100.
	
	self assert: -100 equals: sourceAccount balance.
	self assert: 100 equals: destinyAccount balance.
	self assert: 100 equals: transfer value.	
	! !
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:31:57' prior: 50968720!
from: aReceptiveAccount to: aReceptiveAccount2 anAmountOf: aSmallInteger 
	self shouldBeImplemented.! !

!classDefinition: 'Transfer class' category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 19:27:25'!
Transfer class
	instanceVariableNames: 'value'!
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:34:30' prior: 50968847!
from: aReceptiveAccount to: aReceptiveAccount2 anAmountOf: aSmallInteger 
	
	Deposit register: aSmallInteger on: aReceptiveAccount2 .
	Withdraw register: aSmallInteger on: aReceptiveAccount .
	value _ aSmallInteger .! !
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:34:50' prior: 50968858!
from: aSourceAccount to: aReceptiveAccount2 anAmountOf: aSmallInteger 
	
	Deposit register: aSmallInteger on: aReceptiveAccount2 .
	Withdraw register: aSmallInteger on: aSourceAccount .
	value _ aSmallInteger .! !
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:35:04' prior: 50968868!
from: aSourceAccount to: aDestinyAccount anAmountOf: aSmallInteger 
	
	Deposit register: aSmallInteger on: aDestinyAccount .
	Withdraw register: aSmallInteger on: aSourceAccount .
	value _ aSmallInteger .! !
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:35:29' prior: 50968878!
from: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer 
	
	Deposit register: valueToTransfer on: aDestinyAccount .
	Withdraw register: valueToTransfer on: aSourceAccount .
	value _ valueToTransfer .! !

!classDefinition: #Transfer category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 19:27:25'!
Object subclass: #Transfer
	instanceVariableNames: 'value'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!
!Transfer methodsFor: 'no messages' stamp: 'ja 11/14/2020 16:36:17' overrides: 16896425!
initialize

	value _ 0! !
!Transfer methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:36:58' prior: 50968679 overrides: 16881508!
value 

	^ value ! !

!methodRemoval: Transfer class #from:to:anAmountOf: stamp: 'ja 11/14/2020 19:27:25'!
from: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer 
	
	Deposit register: valueToTransfer on: aDestinyAccount .
	Withdraw register: valueToTransfer on: aSourceAccount .
	value _ valueToTransfer .!
!Transfer methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:38:06'!
from: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer 
	
	Deposit register: valueToTransfer on: aDestinyAccount .
	Withdraw register: valueToTransfer on: aSourceAccount .
	value _ valueToTransfer .! !

!classDefinition: 'Transfer class' category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 19:27:25'!
Transfer class
	instanceVariableNames: ''!

!classDefinition: 'Transfer class' category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 19:27:25'!
Transfer class
	instanceVariableNames: ''!
!Transfer class methodsFor: 'no messages' stamp: 'ja 11/14/2020 16:40:54'!
from: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer 

	Transfer new initializeFrom: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer .! !
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:41:02' prior: 50968942!
from: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer 

	^ Transfer new initializeFrom: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer .! !
!Transfer methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:41:20' prior: 50968752!
initializeFrom: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer 

	Deposit register: valueToTransfer on: aDestinyAccount .
	Withdraw register: valueToTransfer on: aSourceAccount .
	value _ valueToTransfer .! !

!methodRemoval: Transfer #from:to:anAmountOf: stamp: 'ja 11/14/2020 19:27:25'!
from: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer 
	
	Deposit register: valueToTransfer on: aDestinyAccount .
	Withdraw register: valueToTransfer on: aSourceAccount .
	value _ valueToTransfer .!

!methodRemoval: Transfer #initialize stamp: 'ja 11/14/2020 19:27:25'!
initialize

	value _ 0!
!Transfer methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:42:09' prior: 50968960!
initializeFrom: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer 

	Deposit register: valueToTransfer on: aDestinyAccount .
	Withdraw register: valueToTransfer on: aSourceAccount .
	
	value _ valueToTransfer .! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:42:27' prior: 50968828!
test01TransferAffectsSourceAndDestinyBalance
	
	| transfer sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self assert: 0 equals: sourceAccount balance.
	self assert: 0 equals: destinyAccount balance.
	
	transfer  _ Transfer from: sourceAccount to: destinyAccount anAmountOf: 100.
	
	self assert: -100 equals: sourceAccount balance.
	self assert: 100 equals: destinyAccount balance.
! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:42:57' prior: 50968994!
test01TransferAffectsSourceAndDestinyBalance
	
	| sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self assert: 0 equals: sourceAccount balance.
	self assert: 0 equals: destinyAccount balance.
	
	Transfer from: sourceAccount to: destinyAccount anAmountOf: 100.
	
	self assert: -100 equals: sourceAccount balance.
	self assert: 100 equals: destinyAccount balance.
! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:46:53' prior: 50964090!
test02IsPossibleGettingSourceAccountFromTransfer
	
	| sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self assert: 0 equals: sourceAccount balance.
	self assert: 0 equals: destinyAccount balance.
	
	self should: [Transfer from: sourceAccount to: destinyAccount anAmountOf: 0. self fail] 
		raise:  Error
		withMessageText: Transfer canNotTransferAnAmountOfZeroErrorDescription.! !

!classDefinition: #TransferType category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 19:27:30'!
AccountTransaction subclass: #TransferType
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #TransferType category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 19:27:30'!
AccountTransaction subclass: #TransferType
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:29:11' prior: 50969012!
test01TransferAffectsSourceAndDestinyBalance
	
	| transfer sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	transfer  _ Transfer from: sourceAccount to: destinyAccount anAmountOf: 100.
	
	self assert: sourceAccount balance 

	
	! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:31:05' prior: 50969062!
test01TransferAffectsSourceAndDestinyBalance
	
	| transfer sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self assert: 0 equals: (sourceAccount balance).
	self assert: 0 equals: (destinyAccount balance).
	
	transfer  _ Transfer from: sourceAccount to: destinyAccount anAmountOf: 100.
	
	self assert: -100 equals: (sourceAccount balance).
	self assert: 100 equals: (destinyAccount balance).
	self assert: 100 equals: transfer value.	
	! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:31:42' prior: 50969075!
test01TransferAffectsSourceAndDestinyBalance
	
	| transfer sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self assert: 0 equals: sourceAccount balance.
	self assert: 0 equals: destinyAccount balance.
	
	transfer  _ Transfer from: sourceAccount to: destinyAccount anAmountOf: 100.
	
	self assert: -100 equals: sourceAccount balance.
	self assert: 100 equals: destinyAccount balance.
	self assert: 100 equals: transfer value.	
	! !
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:31:57' prior: 50968951!
from: aReceptiveAccount to: aReceptiveAccount2 anAmountOf: aSmallInteger 
	self shouldBeImplemented.! !

!classDefinition: 'Transfer class' category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 19:27:30'!
Transfer class
	instanceVariableNames: 'value'!
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:34:30' prior: 50969113!
from: aReceptiveAccount to: aReceptiveAccount2 anAmountOf: aSmallInteger 
	
	Deposit register: aSmallInteger on: aReceptiveAccount2 .
	Withdraw register: aSmallInteger on: aReceptiveAccount .
	value _ aSmallInteger .! !
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:34:50' prior: 50969124!
from: aSourceAccount to: aReceptiveAccount2 anAmountOf: aSmallInteger 
	
	Deposit register: aSmallInteger on: aReceptiveAccount2 .
	Withdraw register: aSmallInteger on: aSourceAccount .
	value _ aSmallInteger .! !
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:35:04' prior: 50969134!
from: aSourceAccount to: aDestinyAccount anAmountOf: aSmallInteger 
	
	Deposit register: aSmallInteger on: aDestinyAccount .
	Withdraw register: aSmallInteger on: aSourceAccount .
	value _ aSmallInteger .! !
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:35:29' prior: 50969144!
from: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer 
	
	Deposit register: valueToTransfer on: aDestinyAccount .
	Withdraw register: valueToTransfer on: aSourceAccount .
	value _ valueToTransfer .! !

!classDefinition: #Transfer category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 19:27:30'!
Object subclass: #Transfer
	instanceVariableNames: 'value'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!
!Transfer methodsFor: 'no messages' stamp: 'ja 11/14/2020 16:36:17' overrides: 16896425!
initialize

	value _ 0! !
!Transfer methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:36:58' prior: 50968910 overrides: 16881508!
value 

	^ value ! !

!methodRemoval: Transfer class #from:to:anAmountOf: stamp: 'ja 11/14/2020 19:27:30'!
from: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer 
	
	Deposit register: valueToTransfer on: aDestinyAccount .
	Withdraw register: valueToTransfer on: aSourceAccount .
	value _ valueToTransfer .!
!Transfer methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:38:06'!
from: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer 
	
	Deposit register: valueToTransfer on: aDestinyAccount .
	Withdraw register: valueToTransfer on: aSourceAccount .
	value _ valueToTransfer .! !

!classDefinition: 'Transfer class' category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 19:27:30'!
Transfer class
	instanceVariableNames: ''!

!classDefinition: 'Transfer class' category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 19:27:30'!
Transfer class
	instanceVariableNames: ''!
!Transfer class methodsFor: 'no messages' stamp: 'ja 11/14/2020 16:40:54'!
from: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer 

	Transfer new initializeFrom: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer .! !
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:41:02' prior: 50969208!
from: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer 

	^ Transfer new initializeFrom: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer .! !
!Transfer methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:41:20' prior: 50968983!
initializeFrom: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer 

	Deposit register: valueToTransfer on: aDestinyAccount .
	Withdraw register: valueToTransfer on: aSourceAccount .
	value _ valueToTransfer .! !

!methodRemoval: Transfer #from:to:anAmountOf: stamp: 'ja 11/14/2020 19:27:30'!
from: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer 
	
	Deposit register: valueToTransfer on: aDestinyAccount .
	Withdraw register: valueToTransfer on: aSourceAccount .
	value _ valueToTransfer .!

!methodRemoval: Transfer #initialize stamp: 'ja 11/14/2020 19:27:30'!
initialize

	value _ 0!
!Transfer methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:42:09' prior: 50969226!
initializeFrom: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer 

	Deposit register: valueToTransfer on: aDestinyAccount .
	Withdraw register: valueToTransfer on: aSourceAccount .
	
	value _ valueToTransfer .! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:42:27' prior: 50969094!
test01TransferAffectsSourceAndDestinyBalance
	
	| transfer sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self assert: 0 equals: sourceAccount balance.
	self assert: 0 equals: destinyAccount balance.
	
	transfer  _ Transfer from: sourceAccount to: destinyAccount anAmountOf: 100.
	
	self assert: -100 equals: sourceAccount balance.
	self assert: 100 equals: destinyAccount balance.
! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:42:57' prior: 50969260!
test01TransferAffectsSourceAndDestinyBalance
	
	| sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self assert: 0 equals: sourceAccount balance.
	self assert: 0 equals: destinyAccount balance.
	
	Transfer from: sourceAccount to: destinyAccount anAmountOf: 100.
	
	self assert: -100 equals: sourceAccount balance.
	self assert: 100 equals: destinyAccount balance.
! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:46:53' prior: 50969029!
test02IsPossibleGettingSourceAccountFromTransfer
	
	| sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self assert: 0 equals: sourceAccount balance.
	self assert: 0 equals: destinyAccount balance.
	
	self should: [Transfer from: sourceAccount to: destinyAccount anAmountOf: 0. self fail] 
		raise:  Error
		withMessageText: Transfer canNotTransferAnAmountOfZeroErrorDescription.! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:47:27'!
test02CanNotTransferAnAmountOfZero
	
	| sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self assert: 0 equals: sourceAccount balance.
	self assert: 0 equals: destinyAccount balance.
	
	self should: [Transfer from: sourceAccount to: destinyAccount anAmountOf: 0. self fail] 
		raise:  Error
		withMessageText: Transfer canNotTransferAnAmountOfZeroErrorDescription.! !

!methodRemoval: TransferTest #test02IsPossibleGettingSourceAccountFromTransfer stamp: 'ja 11/14/2020 19:27:30'!
test02IsPossibleGettingSourceAccountFromTransfer
	
	| sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self assert: 0 equals: sourceAccount balance.
	self assert: 0 equals: destinyAccount balance.
	
	self should: [Transfer from: sourceAccount to: destinyAccount anAmountOf: 0. self fail] 
		raise:  Error
		withMessageText: Transfer canNotTransferAnAmountOfZeroErrorDescription.!
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:47:42'!
canNotTransferAnAmountOfZeroErrorDescription
	self shouldBeImplemented.! !
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:48:16' prior: 50969346!
canNotTransferAnAmountOfZeroErrorDescription
	
	^ 'Can not transfer an amount of zero'! !

!classDefinition: #TransferType category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 19:27:34'!
AccountTransaction subclass: #TransferType
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #TransferType category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 19:27:34'!
AccountTransaction subclass: #TransferType
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:29:11' prior: 50969278!
test01TransferAffectsSourceAndDestinyBalance
	
	| transfer sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	transfer  _ Transfer from: sourceAccount to: destinyAccount anAmountOf: 100.
	
	self assert: sourceAccount balance 

	
	! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:31:05' prior: 50969374!
test01TransferAffectsSourceAndDestinyBalance
	
	| transfer sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self assert: 0 equals: (sourceAccount balance).
	self assert: 0 equals: (destinyAccount balance).
	
	transfer  _ Transfer from: sourceAccount to: destinyAccount anAmountOf: 100.
	
	self assert: -100 equals: (sourceAccount balance).
	self assert: 100 equals: (destinyAccount balance).
	self assert: 100 equals: transfer value.	
	! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:31:42' prior: 50969387!
test01TransferAffectsSourceAndDestinyBalance
	
	| transfer sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self assert: 0 equals: sourceAccount balance.
	self assert: 0 equals: destinyAccount balance.
	
	transfer  _ Transfer from: sourceAccount to: destinyAccount anAmountOf: 100.
	
	self assert: -100 equals: sourceAccount balance.
	self assert: 100 equals: destinyAccount balance.
	self assert: 100 equals: transfer value.	
	! !
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:31:57' prior: 50969217!
from: aReceptiveAccount to: aReceptiveAccount2 anAmountOf: aSmallInteger 
	self shouldBeImplemented.! !

!classDefinition: 'Transfer class' category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 19:27:34'!
Transfer class
	instanceVariableNames: 'value'!
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:34:30' prior: 50969425!
from: aReceptiveAccount to: aReceptiveAccount2 anAmountOf: aSmallInteger 
	
	Deposit register: aSmallInteger on: aReceptiveAccount2 .
	Withdraw register: aSmallInteger on: aReceptiveAccount .
	value _ aSmallInteger .! !
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:34:50' prior: 50969436!
from: aSourceAccount to: aReceptiveAccount2 anAmountOf: aSmallInteger 
	
	Deposit register: aSmallInteger on: aReceptiveAccount2 .
	Withdraw register: aSmallInteger on: aSourceAccount .
	value _ aSmallInteger .! !
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:35:04' prior: 50969446!
from: aSourceAccount to: aDestinyAccount anAmountOf: aSmallInteger 
	
	Deposit register: aSmallInteger on: aDestinyAccount .
	Withdraw register: aSmallInteger on: aSourceAccount .
	value _ aSmallInteger .! !
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:35:29' prior: 50969456!
from: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer 
	
	Deposit register: valueToTransfer on: aDestinyAccount .
	Withdraw register: valueToTransfer on: aSourceAccount .
	value _ valueToTransfer .! !

!classDefinition: #Transfer category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 19:27:34'!
Object subclass: #Transfer
	instanceVariableNames: 'value'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!
!Transfer methodsFor: 'no messages' stamp: 'ja 11/14/2020 16:36:17' overrides: 16896425!
initialize

	value _ 0! !
!Transfer methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:36:58' prior: 50969176 overrides: 16881508!
value 

	^ value ! !

!methodRemoval: Transfer class #from:to:anAmountOf: stamp: 'ja 11/14/2020 19:27:34'!
from: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer 
	
	Deposit register: valueToTransfer on: aDestinyAccount .
	Withdraw register: valueToTransfer on: aSourceAccount .
	value _ valueToTransfer .!
!Transfer methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:38:06'!
from: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer 
	
	Deposit register: valueToTransfer on: aDestinyAccount .
	Withdraw register: valueToTransfer on: aSourceAccount .
	value _ valueToTransfer .! !

!classDefinition: 'Transfer class' category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 19:27:34'!
Transfer class
	instanceVariableNames: ''!

!classDefinition: 'Transfer class' category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 19:27:34'!
Transfer class
	instanceVariableNames: ''!
!Transfer class methodsFor: 'no messages' stamp: 'ja 11/14/2020 16:40:54'!
from: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer 

	Transfer new initializeFrom: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer .! !
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:41:02' prior: 50969520!
from: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer 

	^ Transfer new initializeFrom: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer .! !
!Transfer methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:41:20' prior: 50969249!
initializeFrom: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer 

	Deposit register: valueToTransfer on: aDestinyAccount .
	Withdraw register: valueToTransfer on: aSourceAccount .
	value _ valueToTransfer .! !

!methodRemoval: Transfer #from:to:anAmountOf: stamp: 'ja 11/14/2020 19:27:34'!
from: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer 
	
	Deposit register: valueToTransfer on: aDestinyAccount .
	Withdraw register: valueToTransfer on: aSourceAccount .
	value _ valueToTransfer .!

!methodRemoval: Transfer #initialize stamp: 'ja 11/14/2020 19:27:34'!
initialize

	value _ 0!
!Transfer methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:42:09' prior: 50969538!
initializeFrom: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer 

	Deposit register: valueToTransfer on: aDestinyAccount .
	Withdraw register: valueToTransfer on: aSourceAccount .
	
	value _ valueToTransfer .! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:42:27' prior: 50969406!
test01TransferAffectsSourceAndDestinyBalance
	
	| transfer sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self assert: 0 equals: sourceAccount balance.
	self assert: 0 equals: destinyAccount balance.
	
	transfer  _ Transfer from: sourceAccount to: destinyAccount anAmountOf: 100.
	
	self assert: -100 equals: sourceAccount balance.
	self assert: 100 equals: destinyAccount balance.
! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:42:57' prior: 50969572!
test01TransferAffectsSourceAndDestinyBalance
	
	| sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self assert: 0 equals: sourceAccount balance.
	self assert: 0 equals: destinyAccount balance.
	
	Transfer from: sourceAccount to: destinyAccount anAmountOf: 100.
	
	self assert: -100 equals: sourceAccount balance.
	self assert: 100 equals: destinyAccount balance.
! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:46:53'!
test02IsPossibleGettingSourceAccountFromTransfer
	
	| sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self assert: 0 equals: sourceAccount balance.
	self assert: 0 equals: destinyAccount balance.
	
	self should: [Transfer from: sourceAccount to: destinyAccount anAmountOf: 0. self fail] 
		raise:  Error
		withMessageText: Transfer canNotTransferAnAmountOfZeroErrorDescription.! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:47:27' prior: 50969312!
test02CanNotTransferAnAmountOfZero
	
	| sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self assert: 0 equals: sourceAccount balance.
	self assert: 0 equals: destinyAccount balance.
	
	self should: [Transfer from: sourceAccount to: destinyAccount anAmountOf: 0. self fail] 
		raise:  Error
		withMessageText: Transfer canNotTransferAnAmountOfZeroErrorDescription.! !

!methodRemoval: TransferTest #test02IsPossibleGettingSourceAccountFromTransfer stamp: 'ja 11/14/2020 19:27:34'!
test02IsPossibleGettingSourceAccountFromTransfer
	
	| sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self assert: 0 equals: sourceAccount balance.
	self assert: 0 equals: destinyAccount balance.
	
	self should: [Transfer from: sourceAccount to: destinyAccount anAmountOf: 0. self fail] 
		raise:  Error
		withMessageText: Transfer canNotTransferAnAmountOfZeroErrorDescription.!
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:47:42' prior: 50969352!
canNotTransferAnAmountOfZeroErrorDescription
	self shouldBeImplemented.! !
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:48:16' prior: 50969660!
canNotTransferAnAmountOfZeroErrorDescription
	
	^ 'Can not transfer an amount of zero'! !
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:49:41' prior: 50969529!
from: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer 

	(valueToTransfer = 0) ifTrue: [ self error: self canNotTransferAnAmountOfZeroErrorDescription ].
		
	^ Transfer new initializeFrom: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer .! !

!methodRemoval: TransferTest #test02CanNotTransferAnAmountOfZero stamp: 'ja 11/14/2020 19:27:34'!
test02CanNotTransferAnAmountOfZero
	
	| sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self assert: 0 equals: sourceAccount balance.
	self assert: 0 equals: destinyAccount balance.
	
	self should: [Transfer from: sourceAccount to: destinyAccount anAmountOf: 0. self fail] 
		raise:  Error
		withMessageText: Transfer canNotTransferAnAmountOfZeroErrorDescription.!

!classDefinition: #TransferType category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 19:27:39'!
AccountTransaction subclass: #TransferType
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #TransferType category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 19:27:39'!
AccountTransaction subclass: #TransferType
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:29:11' prior: 50969590!
test01TransferAffectsSourceAndDestinyBalance
	
	| transfer sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	transfer  _ Transfer from: sourceAccount to: destinyAccount anAmountOf: 100.
	
	self assert: sourceAccount balance 

	
	! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:31:05' prior: 50969716!
test01TransferAffectsSourceAndDestinyBalance
	
	| transfer sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self assert: 0 equals: (sourceAccount balance).
	self assert: 0 equals: (destinyAccount balance).
	
	transfer  _ Transfer from: sourceAccount to: destinyAccount anAmountOf: 100.
	
	self assert: -100 equals: (sourceAccount balance).
	self assert: 100 equals: (destinyAccount balance).
	self assert: 100 equals: transfer value.	
	! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:31:42' prior: 50969729!
test01TransferAffectsSourceAndDestinyBalance
	
	| transfer sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self assert: 0 equals: sourceAccount balance.
	self assert: 0 equals: destinyAccount balance.
	
	transfer  _ Transfer from: sourceAccount to: destinyAccount anAmountOf: 100.
	
	self assert: -100 equals: sourceAccount balance.
	self assert: 100 equals: destinyAccount balance.
	self assert: 100 equals: transfer value.	
	! !
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:31:57' prior: 50969672!
from: aReceptiveAccount to: aReceptiveAccount2 anAmountOf: aSmallInteger 
	self shouldBeImplemented.! !

!classDefinition: 'Transfer class' category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 19:27:39'!
Transfer class
	instanceVariableNames: 'value'!
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:34:30' prior: 50969767!
from: aReceptiveAccount to: aReceptiveAccount2 anAmountOf: aSmallInteger 
	
	Deposit register: aSmallInteger on: aReceptiveAccount2 .
	Withdraw register: aSmallInteger on: aReceptiveAccount .
	value _ aSmallInteger .! !
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:34:50' prior: 50969778!
from: aSourceAccount to: aReceptiveAccount2 anAmountOf: aSmallInteger 
	
	Deposit register: aSmallInteger on: aReceptiveAccount2 .
	Withdraw register: aSmallInteger on: aSourceAccount .
	value _ aSmallInteger .! !
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:35:04' prior: 50969788!
from: aSourceAccount to: aDestinyAccount anAmountOf: aSmallInteger 
	
	Deposit register: aSmallInteger on: aDestinyAccount .
	Withdraw register: aSmallInteger on: aSourceAccount .
	value _ aSmallInteger .! !
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:35:29' prior: 50969798!
from: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer 
	
	Deposit register: valueToTransfer on: aDestinyAccount .
	Withdraw register: valueToTransfer on: aSourceAccount .
	value _ valueToTransfer .! !

!classDefinition: #Transfer category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 19:27:39'!
Object subclass: #Transfer
	instanceVariableNames: 'value'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!
!Transfer methodsFor: 'no messages' stamp: 'ja 11/14/2020 16:36:17' overrides: 16896425!
initialize

	value _ 0! !
!Transfer methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:36:58' prior: 50969488 overrides: 16881508!
value 

	^ value ! !

!methodRemoval: Transfer class #from:to:anAmountOf: stamp: 'ja 11/14/2020 19:27:39'!
from: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer 
	
	Deposit register: valueToTransfer on: aDestinyAccount .
	Withdraw register: valueToTransfer on: aSourceAccount .
	value _ valueToTransfer .!
!Transfer methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:38:06'!
from: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer 
	
	Deposit register: valueToTransfer on: aDestinyAccount .
	Withdraw register: valueToTransfer on: aSourceAccount .
	value _ valueToTransfer .! !

!classDefinition: 'Transfer class' category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 19:27:39'!
Transfer class
	instanceVariableNames: ''!

!classDefinition: 'Transfer class' category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 19:27:39'!
Transfer class
	instanceVariableNames: ''!
!Transfer class methodsFor: 'no messages' stamp: 'ja 11/14/2020 16:40:54'!
from: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer 

	Transfer new initializeFrom: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer .! !
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:41:02' prior: 50969862!
from: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer 

	^ Transfer new initializeFrom: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer .! !
!Transfer methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:41:20' prior: 50969561!
initializeFrom: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer 

	Deposit register: valueToTransfer on: aDestinyAccount .
	Withdraw register: valueToTransfer on: aSourceAccount .
	value _ valueToTransfer .! !

!methodRemoval: Transfer #from:to:anAmountOf: stamp: 'ja 11/14/2020 19:27:39'!
from: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer 
	
	Deposit register: valueToTransfer on: aDestinyAccount .
	Withdraw register: valueToTransfer on: aSourceAccount .
	value _ valueToTransfer .!

!methodRemoval: Transfer #initialize stamp: 'ja 11/14/2020 19:27:39'!
initialize

	value _ 0!
!Transfer methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:42:09' prior: 50969880!
initializeFrom: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer 

	Deposit register: valueToTransfer on: aDestinyAccount .
	Withdraw register: valueToTransfer on: aSourceAccount .
	
	value _ valueToTransfer .! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:42:27' prior: 50969748!
test01TransferAffectsSourceAndDestinyBalance
	
	| transfer sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self assert: 0 equals: sourceAccount balance.
	self assert: 0 equals: destinyAccount balance.
	
	transfer  _ Transfer from: sourceAccount to: destinyAccount anAmountOf: 100.
	
	self assert: -100 equals: sourceAccount balance.
	self assert: 100 equals: destinyAccount balance.
! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:42:57' prior: 50969914!
test01TransferAffectsSourceAndDestinyBalance
	
	| sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self assert: 0 equals: sourceAccount balance.
	self assert: 0 equals: destinyAccount balance.
	
	Transfer from: sourceAccount to: destinyAccount anAmountOf: 100.
	
	self assert: -100 equals: sourceAccount balance.
	self assert: 100 equals: destinyAccount balance.
! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:46:53'!
test02IsPossibleGettingSourceAccountFromTransfer
	
	| sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self assert: 0 equals: sourceAccount balance.
	self assert: 0 equals: destinyAccount balance.
	
	self should: [Transfer from: sourceAccount to: destinyAccount anAmountOf: 0. self fail] 
		raise:  Error
		withMessageText: Transfer canNotTransferAnAmountOfZeroErrorDescription.! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:47:27'!
test02CanNotTransferAnAmountOfZero
	
	| sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self assert: 0 equals: sourceAccount balance.
	self assert: 0 equals: destinyAccount balance.
	
	self should: [Transfer from: sourceAccount to: destinyAccount anAmountOf: 0. self fail] 
		raise:  Error
		withMessageText: Transfer canNotTransferAnAmountOfZeroErrorDescription.! !

!methodRemoval: TransferTest #test02IsPossibleGettingSourceAccountFromTransfer stamp: 'ja 11/14/2020 19:27:39'!
test02IsPossibleGettingSourceAccountFromTransfer
	
	| sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self assert: 0 equals: sourceAccount balance.
	self assert: 0 equals: destinyAccount balance.
	
	self should: [Transfer from: sourceAccount to: destinyAccount anAmountOf: 0. self fail] 
		raise:  Error
		withMessageText: Transfer canNotTransferAnAmountOfZeroErrorDescription.!
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:47:42' prior: 50969666!
canNotTransferAnAmountOfZeroErrorDescription
	self shouldBeImplemented.! !
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:48:16' prior: 50970001!
canNotTransferAnAmountOfZeroErrorDescription
	
	^ 'Can not transfer an amount of zero'! !
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:49:41' prior: 50969871!
from: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer 

	(valueToTransfer = 0) ifTrue: [ self error: self canNotTransferAnAmountOfZeroErrorDescription ].
		
	^ Transfer new initializeFrom: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer .! !

!methodRemoval: TransferTest #test02CanNotTransferAnAmountOfZero stamp: 'ja 11/14/2020 19:27:39'!
test02CanNotTransferAnAmountOfZero
	
	| sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self assert: 0 equals: sourceAccount balance.
	self assert: 0 equals: destinyAccount balance.
	
	self should: [Transfer from: sourceAccount to: destinyAccount anAmountOf: 0. self fail] 
		raise:  Error
		withMessageText: Transfer canNotTransferAnAmountOfZeroErrorDescription.!
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:51:45' prior: 50964103!
test03IsPossibleGettingDestinyAccountFromTransfer
	
	| sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self assert: 0 equals: sourceAccount balance.
	self assert: 0 equals: destinyAccount balance.
	
	self should: [Transfer from: sourceAccount to: destinyAccount anAmountOf: 0.] 
		raise: Error
		withMessageText: Transfer canNotTransferAnAmountOfZeroErrorDescription .! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:51:52' prior: 50970042!
test03IsPossibleGettingDestinyAccountFromTransfer
	
	| sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self assert: 0 equals: sourceAccount balance.
	self assert: 0 equals: destinyAccount balance.
	
	self should: [Transfer from: sourceAccount to: destinyAccount anAmountOf: 0. self fail] 
		raise: Error
		withMessageText: Transfer canNotTransferAnAmountOfZeroErrorDescription .! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:51:58' prior: 50970059!
test03IsPossibleGettingDestinyAccountFromTransfer
	
	| sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self should: [Transfer from: sourceAccount to: destinyAccount anAmountOf: 0. self fail] 
		raise: Error
		withMessageText: Transfer canNotTransferAnAmountOfZeroErrorDescription .! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:52:16'!
test02CanNotTransferAnAmountOfZeroErrorDescription 
	
	| sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self should: [Transfer from: sourceAccount to: destinyAccount anAmountOf: 0. self fail] 
		raise: Error
		withMessageText: Transfer canNotTransferAnAmountOfZeroErrorDescription .! !

!classDefinition: #TransferType category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 19:27:45'!
AccountTransaction subclass: #TransferType
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #TransferType category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 19:27:45'!
AccountTransaction subclass: #TransferType
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:29:11' prior: 50969932!
test01TransferAffectsSourceAndDestinyBalance
	
	| transfer sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	transfer  _ Transfer from: sourceAccount to: destinyAccount anAmountOf: 100.
	
	self assert: sourceAccount balance 

	
	! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:31:05' prior: 50970121!
test01TransferAffectsSourceAndDestinyBalance
	
	| transfer sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self assert: 0 equals: (sourceAccount balance).
	self assert: 0 equals: (destinyAccount balance).
	
	transfer  _ Transfer from: sourceAccount to: destinyAccount anAmountOf: 100.
	
	self assert: -100 equals: (sourceAccount balance).
	self assert: 100 equals: (destinyAccount balance).
	self assert: 100 equals: transfer value.	
	! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:31:42' prior: 50970134!
test01TransferAffectsSourceAndDestinyBalance
	
	| transfer sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self assert: 0 equals: sourceAccount balance.
	self assert: 0 equals: destinyAccount balance.
	
	transfer  _ Transfer from: sourceAccount to: destinyAccount anAmountOf: 100.
	
	self assert: -100 equals: sourceAccount balance.
	self assert: 100 equals: destinyAccount balance.
	self assert: 100 equals: transfer value.	
	! !
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:31:57' prior: 50970013!
from: aReceptiveAccount to: aReceptiveAccount2 anAmountOf: aSmallInteger 
	self shouldBeImplemented.! !

!classDefinition: 'Transfer class' category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 19:27:46'!
Transfer class
	instanceVariableNames: 'value'!
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:34:30' prior: 50970172!
from: aReceptiveAccount to: aReceptiveAccount2 anAmountOf: aSmallInteger 
	
	Deposit register: aSmallInteger on: aReceptiveAccount2 .
	Withdraw register: aSmallInteger on: aReceptiveAccount .
	value _ aSmallInteger .! !
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:34:50' prior: 50970183!
from: aSourceAccount to: aReceptiveAccount2 anAmountOf: aSmallInteger 
	
	Deposit register: aSmallInteger on: aReceptiveAccount2 .
	Withdraw register: aSmallInteger on: aSourceAccount .
	value _ aSmallInteger .! !
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:35:04' prior: 50970193!
from: aSourceAccount to: aDestinyAccount anAmountOf: aSmallInteger 
	
	Deposit register: aSmallInteger on: aDestinyAccount .
	Withdraw register: aSmallInteger on: aSourceAccount .
	value _ aSmallInteger .! !
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:35:29' prior: 50970203!
from: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer 
	
	Deposit register: valueToTransfer on: aDestinyAccount .
	Withdraw register: valueToTransfer on: aSourceAccount .
	value _ valueToTransfer .! !

!classDefinition: #Transfer category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 19:27:46'!
Object subclass: #Transfer
	instanceVariableNames: 'value'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!
!Transfer methodsFor: 'no messages' stamp: 'ja 11/14/2020 16:36:17' overrides: 16896425!
initialize

	value _ 0! !
!Transfer methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:36:58' prior: 50969830 overrides: 16881508!
value 

	^ value ! !

!methodRemoval: Transfer class #from:to:anAmountOf: stamp: 'ja 11/14/2020 19:27:46'!
from: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer 
	
	Deposit register: valueToTransfer on: aDestinyAccount .
	Withdraw register: valueToTransfer on: aSourceAccount .
	value _ valueToTransfer .!
!Transfer methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:38:06'!
from: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer 
	
	Deposit register: valueToTransfer on: aDestinyAccount .
	Withdraw register: valueToTransfer on: aSourceAccount .
	value _ valueToTransfer .! !

!classDefinition: 'Transfer class' category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 19:27:46'!
Transfer class
	instanceVariableNames: ''!

!classDefinition: 'Transfer class' category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 19:27:46'!
Transfer class
	instanceVariableNames: ''!
!Transfer class methodsFor: 'no messages' stamp: 'ja 11/14/2020 16:40:54'!
from: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer 

	Transfer new initializeFrom: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer .! !
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:41:02' prior: 50970267!
from: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer 

	^ Transfer new initializeFrom: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer .! !
!Transfer methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:41:20' prior: 50969903!
initializeFrom: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer 

	Deposit register: valueToTransfer on: aDestinyAccount .
	Withdraw register: valueToTransfer on: aSourceAccount .
	value _ valueToTransfer .! !

!methodRemoval: Transfer #from:to:anAmountOf: stamp: 'ja 11/14/2020 19:27:46'!
from: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer 
	
	Deposit register: valueToTransfer on: aDestinyAccount .
	Withdraw register: valueToTransfer on: aSourceAccount .
	value _ valueToTransfer .!

!methodRemoval: Transfer #initialize stamp: 'ja 11/14/2020 19:27:46'!
initialize

	value _ 0!
!Transfer methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:42:09' prior: 50970285!
initializeFrom: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer 

	Deposit register: valueToTransfer on: aDestinyAccount .
	Withdraw register: valueToTransfer on: aSourceAccount .
	
	value _ valueToTransfer .! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:42:27' prior: 50970153!
test01TransferAffectsSourceAndDestinyBalance
	
	| transfer sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self assert: 0 equals: sourceAccount balance.
	self assert: 0 equals: destinyAccount balance.
	
	transfer  _ Transfer from: sourceAccount to: destinyAccount anAmountOf: 100.
	
	self assert: -100 equals: sourceAccount balance.
	self assert: 100 equals: destinyAccount balance.
! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:42:57' prior: 50970319!
test01TransferAffectsSourceAndDestinyBalance
	
	| sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self assert: 0 equals: sourceAccount balance.
	self assert: 0 equals: destinyAccount balance.
	
	Transfer from: sourceAccount to: destinyAccount anAmountOf: 100.
	
	self assert: -100 equals: sourceAccount balance.
	self assert: 100 equals: destinyAccount balance.
! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:46:53'!
test02IsPossibleGettingSourceAccountFromTransfer
	
	| sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self assert: 0 equals: sourceAccount balance.
	self assert: 0 equals: destinyAccount balance.
	
	self should: [Transfer from: sourceAccount to: destinyAccount anAmountOf: 0. self fail] 
		raise:  Error
		withMessageText: Transfer canNotTransferAnAmountOfZeroErrorDescription.! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:47:27'!
test02CanNotTransferAnAmountOfZero
	
	| sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self assert: 0 equals: sourceAccount balance.
	self assert: 0 equals: destinyAccount balance.
	
	self should: [Transfer from: sourceAccount to: destinyAccount anAmountOf: 0. self fail] 
		raise:  Error
		withMessageText: Transfer canNotTransferAnAmountOfZeroErrorDescription.! !

!methodRemoval: TransferTest #test02IsPossibleGettingSourceAccountFromTransfer stamp: 'ja 11/14/2020 19:27:46'!
test02IsPossibleGettingSourceAccountFromTransfer
	
	| sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self assert: 0 equals: sourceAccount balance.
	self assert: 0 equals: destinyAccount balance.
	
	self should: [Transfer from: sourceAccount to: destinyAccount anAmountOf: 0. self fail] 
		raise:  Error
		withMessageText: Transfer canNotTransferAnAmountOfZeroErrorDescription.!
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:47:42' prior: 50970007!
canNotTransferAnAmountOfZeroErrorDescription
	self shouldBeImplemented.! !
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:48:16' prior: 50970406!
canNotTransferAnAmountOfZeroErrorDescription
	
	^ 'Can not transfer an amount of zero'! !
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:49:41' prior: 50970276!
from: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer 

	(valueToTransfer = 0) ifTrue: [ self error: self canNotTransferAnAmountOfZeroErrorDescription ].
		
	^ Transfer new initializeFrom: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer .! !

!methodRemoval: TransferTest #test02CanNotTransferAnAmountOfZero stamp: 'ja 11/14/2020 19:27:46'!
test02CanNotTransferAnAmountOfZero
	
	| sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self assert: 0 equals: sourceAccount balance.
	self assert: 0 equals: destinyAccount balance.
	
	self should: [Transfer from: sourceAccount to: destinyAccount anAmountOf: 0. self fail] 
		raise:  Error
		withMessageText: Transfer canNotTransferAnAmountOfZeroErrorDescription.!
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:51:45' prior: 50970077!
test03IsPossibleGettingDestinyAccountFromTransfer
	
	| sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self assert: 0 equals: sourceAccount balance.
	self assert: 0 equals: destinyAccount balance.
	
	self should: [Transfer from: sourceAccount to: destinyAccount anAmountOf: 0.] 
		raise: Error
		withMessageText: Transfer canNotTransferAnAmountOfZeroErrorDescription .! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:51:52' prior: 50970447!
test03IsPossibleGettingDestinyAccountFromTransfer
	
	| sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self assert: 0 equals: sourceAccount balance.
	self assert: 0 equals: destinyAccount balance.
	
	self should: [Transfer from: sourceAccount to: destinyAccount anAmountOf: 0. self fail] 
		raise: Error
		withMessageText: Transfer canNotTransferAnAmountOfZeroErrorDescription .! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:51:58' prior: 50970464!
test03IsPossibleGettingDestinyAccountFromTransfer
	
	| sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self should: [Transfer from: sourceAccount to: destinyAccount anAmountOf: 0. self fail] 
		raise: Error
		withMessageText: Transfer canNotTransferAnAmountOfZeroErrorDescription .! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:52:16' prior: 50970091!
test02CanNotTransferAnAmountOfZeroErrorDescription 
	
	| sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self should: [Transfer from: sourceAccount to: destinyAccount anAmountOf: 0. self fail] 
		raise: Error
		withMessageText: Transfer canNotTransferAnAmountOfZeroErrorDescription .! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:53:12'!
test03CanNotTransferANegativeAmountErrorDescription
	
	| sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self should: [Transfer from: sourceAccount to: destinyAccount anAmountOf: -100. self fail] 
		raise: Error
		withMessageText: Transfer canNotTransferANegativeAmountErrorDescription .! !
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:53:24'!
canNotTransferANegativeAmountErrorDescription
	self shouldBeImplemented.! !
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:54:04' prior: 50970525!
canNotTransferANegativeAmountErrorDescription
	
	^ ' Can not transfer a negative amount '! !
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:55:01' prior: 50970418!
from: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer 

	(valueToTransfer = 0) ifTrue: [ self error: self canNotTransferAnAmountOfZeroErrorDescription ].
	(valueToTransfer  < 0) ifTrue: [ self error: self canNotTransferANegativeAmountErrorDescription ].
		
	^ Transfer new initializeFrom: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer .! !

!classDefinition: #TransferType category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 19:27:50'!
AccountTransaction subclass: #TransferType
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #TransferType category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 19:27:50'!
AccountTransaction subclass: #TransferType
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:29:11' prior: 50970337!
test01TransferAffectsSourceAndDestinyBalance
	
	| transfer sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	transfer  _ Transfer from: sourceAccount to: destinyAccount anAmountOf: 100.
	
	self assert: sourceAccount balance 

	
	! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:31:05' prior: 50970568!
test01TransferAffectsSourceAndDestinyBalance
	
	| transfer sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self assert: 0 equals: (sourceAccount balance).
	self assert: 0 equals: (destinyAccount balance).
	
	transfer  _ Transfer from: sourceAccount to: destinyAccount anAmountOf: 100.
	
	self assert: -100 equals: (sourceAccount balance).
	self assert: 100 equals: (destinyAccount balance).
	self assert: 100 equals: transfer value.	
	! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:31:42' prior: 50970581!
test01TransferAffectsSourceAndDestinyBalance
	
	| transfer sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self assert: 0 equals: sourceAccount balance.
	self assert: 0 equals: destinyAccount balance.
	
	transfer  _ Transfer from: sourceAccount to: destinyAccount anAmountOf: 100.
	
	self assert: -100 equals: sourceAccount balance.
	self assert: 100 equals: destinyAccount balance.
	self assert: 100 equals: transfer value.	
	! !
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:31:57' prior: 50970537!
from: aReceptiveAccount to: aReceptiveAccount2 anAmountOf: aSmallInteger 
	self shouldBeImplemented.! !

!classDefinition: 'Transfer class' category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 19:27:50'!
Transfer class
	instanceVariableNames: 'value'!
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:34:30' prior: 50970619!
from: aReceptiveAccount to: aReceptiveAccount2 anAmountOf: aSmallInteger 
	
	Deposit register: aSmallInteger on: aReceptiveAccount2 .
	Withdraw register: aSmallInteger on: aReceptiveAccount .
	value _ aSmallInteger .! !
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:34:50' prior: 50970630!
from: aSourceAccount to: aReceptiveAccount2 anAmountOf: aSmallInteger 
	
	Deposit register: aSmallInteger on: aReceptiveAccount2 .
	Withdraw register: aSmallInteger on: aSourceAccount .
	value _ aSmallInteger .! !
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:35:04' prior: 50970640!
from: aSourceAccount to: aDestinyAccount anAmountOf: aSmallInteger 
	
	Deposit register: aSmallInteger on: aDestinyAccount .
	Withdraw register: aSmallInteger on: aSourceAccount .
	value _ aSmallInteger .! !
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:35:29' prior: 50970650!
from: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer 
	
	Deposit register: valueToTransfer on: aDestinyAccount .
	Withdraw register: valueToTransfer on: aSourceAccount .
	value _ valueToTransfer .! !

!classDefinition: #Transfer category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 19:27:50'!
Object subclass: #Transfer
	instanceVariableNames: 'value'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!
!Transfer methodsFor: 'no messages' stamp: 'ja 11/14/2020 16:36:17' overrides: 16896425!
initialize

	value _ 0! !
!Transfer methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:36:58' prior: 50970235 overrides: 16881508!
value 

	^ value ! !

!methodRemoval: Transfer class #from:to:anAmountOf: stamp: 'ja 11/14/2020 19:27:50'!
from: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer 
	
	Deposit register: valueToTransfer on: aDestinyAccount .
	Withdraw register: valueToTransfer on: aSourceAccount .
	value _ valueToTransfer .!
!Transfer methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:38:06'!
from: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer 
	
	Deposit register: valueToTransfer on: aDestinyAccount .
	Withdraw register: valueToTransfer on: aSourceAccount .
	value _ valueToTransfer .! !

!classDefinition: 'Transfer class' category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 19:27:50'!
Transfer class
	instanceVariableNames: ''!

!classDefinition: 'Transfer class' category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 19:27:50'!
Transfer class
	instanceVariableNames: ''!
!Transfer class methodsFor: 'no messages' stamp: 'ja 11/14/2020 16:40:54'!
from: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer 

	Transfer new initializeFrom: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer .! !
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:41:02' prior: 50970714!
from: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer 

	^ Transfer new initializeFrom: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer .! !
!Transfer methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:41:20' prior: 50970308!
initializeFrom: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer 

	Deposit register: valueToTransfer on: aDestinyAccount .
	Withdraw register: valueToTransfer on: aSourceAccount .
	value _ valueToTransfer .! !

!methodRemoval: Transfer #from:to:anAmountOf: stamp: 'ja 11/14/2020 19:27:50'!
from: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer 
	
	Deposit register: valueToTransfer on: aDestinyAccount .
	Withdraw register: valueToTransfer on: aSourceAccount .
	value _ valueToTransfer .!

!methodRemoval: Transfer #initialize stamp: 'ja 11/14/2020 19:27:50'!
initialize

	value _ 0!
!Transfer methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:42:09' prior: 50970732!
initializeFrom: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer 

	Deposit register: valueToTransfer on: aDestinyAccount .
	Withdraw register: valueToTransfer on: aSourceAccount .
	
	value _ valueToTransfer .! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:42:27' prior: 50970600!
test01TransferAffectsSourceAndDestinyBalance
	
	| transfer sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self assert: 0 equals: sourceAccount balance.
	self assert: 0 equals: destinyAccount balance.
	
	transfer  _ Transfer from: sourceAccount to: destinyAccount anAmountOf: 100.
	
	self assert: -100 equals: sourceAccount balance.
	self assert: 100 equals: destinyAccount balance.
! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:42:57' prior: 50970766!
test01TransferAffectsSourceAndDestinyBalance
	
	| sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self assert: 0 equals: sourceAccount balance.
	self assert: 0 equals: destinyAccount balance.
	
	Transfer from: sourceAccount to: destinyAccount anAmountOf: 100.
	
	self assert: -100 equals: sourceAccount balance.
	self assert: 100 equals: destinyAccount balance.
! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:46:53'!
test02IsPossibleGettingSourceAccountFromTransfer
	
	| sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self assert: 0 equals: sourceAccount balance.
	self assert: 0 equals: destinyAccount balance.
	
	self should: [Transfer from: sourceAccount to: destinyAccount anAmountOf: 0. self fail] 
		raise:  Error
		withMessageText: Transfer canNotTransferAnAmountOfZeroErrorDescription.! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:47:27'!
test02CanNotTransferAnAmountOfZero
	
	| sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self assert: 0 equals: sourceAccount balance.
	self assert: 0 equals: destinyAccount balance.
	
	self should: [Transfer from: sourceAccount to: destinyAccount anAmountOf: 0. self fail] 
		raise:  Error
		withMessageText: Transfer canNotTransferAnAmountOfZeroErrorDescription.! !

!methodRemoval: TransferTest #test02IsPossibleGettingSourceAccountFromTransfer stamp: 'ja 11/14/2020 19:27:51'!
test02IsPossibleGettingSourceAccountFromTransfer
	
	| sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self assert: 0 equals: sourceAccount balance.
	self assert: 0 equals: destinyAccount balance.
	
	self should: [Transfer from: sourceAccount to: destinyAccount anAmountOf: 0. self fail] 
		raise:  Error
		withMessageText: Transfer canNotTransferAnAmountOfZeroErrorDescription.!
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:47:42' prior: 50970412!
canNotTransferAnAmountOfZeroErrorDescription
	self shouldBeImplemented.! !
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:48:16' prior: 50970853!
canNotTransferAnAmountOfZeroErrorDescription
	
	^ 'Can not transfer an amount of zero'! !
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:49:41' prior: 50970723!
from: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer 

	(valueToTransfer = 0) ifTrue: [ self error: self canNotTransferAnAmountOfZeroErrorDescription ].
		
	^ Transfer new initializeFrom: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer .! !

!methodRemoval: TransferTest #test02CanNotTransferAnAmountOfZero stamp: 'ja 11/14/2020 19:27:51'!
test02CanNotTransferAnAmountOfZero
	
	| sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self assert: 0 equals: sourceAccount balance.
	self assert: 0 equals: destinyAccount balance.
	
	self should: [Transfer from: sourceAccount to: destinyAccount anAmountOf: 0. self fail] 
		raise:  Error
		withMessageText: Transfer canNotTransferAnAmountOfZeroErrorDescription.!
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:51:45' prior: 50970482!
test03IsPossibleGettingDestinyAccountFromTransfer
	
	| sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self assert: 0 equals: sourceAccount balance.
	self assert: 0 equals: destinyAccount balance.
	
	self should: [Transfer from: sourceAccount to: destinyAccount anAmountOf: 0.] 
		raise: Error
		withMessageText: Transfer canNotTransferAnAmountOfZeroErrorDescription .! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:51:52' prior: 50970894!
test03IsPossibleGettingDestinyAccountFromTransfer
	
	| sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self assert: 0 equals: sourceAccount balance.
	self assert: 0 equals: destinyAccount balance.
	
	self should: [Transfer from: sourceAccount to: destinyAccount anAmountOf: 0. self fail] 
		raise: Error
		withMessageText: Transfer canNotTransferAnAmountOfZeroErrorDescription .! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:51:58' prior: 50970911!
test03IsPossibleGettingDestinyAccountFromTransfer
	
	| sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self should: [Transfer from: sourceAccount to: destinyAccount anAmountOf: 0. self fail] 
		raise: Error
		withMessageText: Transfer canNotTransferAnAmountOfZeroErrorDescription .! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:52:16' prior: 50970497!
test02CanNotTransferAnAmountOfZeroErrorDescription 
	
	| sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self should: [Transfer from: sourceAccount to: destinyAccount anAmountOf: 0. self fail] 
		raise: Error
		withMessageText: Transfer canNotTransferAnAmountOfZeroErrorDescription .! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:53:12' prior: 50970511!
test03CanNotTransferANegativeAmountErrorDescription
	
	| sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self should: [Transfer from: sourceAccount to: destinyAccount anAmountOf: -100. self fail] 
		raise: Error
		withMessageText: Transfer canNotTransferANegativeAmountErrorDescription .! !
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:53:24' prior: 50970531!
canNotTransferANegativeAmountErrorDescription
	self shouldBeImplemented.! !
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:54:04' prior: 50970974!
canNotTransferANegativeAmountErrorDescription
	
	^ ' Can not transfer a negative amount '! !
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:55:01' prior: 50970865!
from: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer 

	(valueToTransfer = 0) ifTrue: [ self error: self canNotTransferAnAmountOfZeroErrorDescription ].
	(valueToTransfer  < 0) ifTrue: [ self error: self canNotTransferANegativeAmountErrorDescription ].
		
	^ Transfer new initializeFrom: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer .! !

!methodRemoval: TransferTest #test03IsPossibleGettingDestinyAccountFromTransfer stamp: 'ja 11/14/2020 19:27:51'!
test03IsPossibleGettingDestinyAccountFromTransfer
	
	| sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self should: [Transfer from: sourceAccount to: destinyAccount anAmountOf: 0. self fail] 
		raise: Error
		withMessageText: Transfer canNotTransferAnAmountOfZeroErrorDescription .!
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 17:03:02'!
test04TransferIsRegisteredIntoInvolvedAccount
	
	| sourceAccount destinyAccount transfer |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	transfer _ Transfer from: sourceAccount to: destinyAccount anAmountOf: 100.
	
	self assert: sourceAccount transactions includes: transfer depositMade. 
	
	self assert: destinyAccount transactions includes: transfer withdrawMade.
	
	
	! !

!methodRemoval: TransferTest #test04IsPossibleGettingTransferFromSourceAccount stamp: 'ja 11/14/2020 19:27:51'!
test04IsPossibleGettingTransferFromSourceAccount
	
	| transfer sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	transfer  _ Transfer from: sourceAccount to: destinyAccount anAmountOf: 2.
	
	self assert: sourceAccount transfers includes: transfer . !

!classDefinition: #TransferType category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 19:27:55'!
AccountTransaction subclass: #TransferType
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #TransferType category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 19:27:55'!
AccountTransaction subclass: #TransferType
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:29:11' prior: 50970784!
test01TransferAffectsSourceAndDestinyBalance
	
	| transfer sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	transfer  _ Transfer from: sourceAccount to: destinyAccount anAmountOf: 100.
	
	self assert: sourceAccount balance 

	
	! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:31:05' prior: 50971061!
test01TransferAffectsSourceAndDestinyBalance
	
	| transfer sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self assert: 0 equals: (sourceAccount balance).
	self assert: 0 equals: (destinyAccount balance).
	
	transfer  _ Transfer from: sourceAccount to: destinyAccount anAmountOf: 100.
	
	self assert: -100 equals: (sourceAccount balance).
	self assert: 100 equals: (destinyAccount balance).
	self assert: 100 equals: transfer value.	
	! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:31:42' prior: 50971074!
test01TransferAffectsSourceAndDestinyBalance
	
	| transfer sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self assert: 0 equals: sourceAccount balance.
	self assert: 0 equals: destinyAccount balance.
	
	transfer  _ Transfer from: sourceAccount to: destinyAccount anAmountOf: 100.
	
	self assert: -100 equals: sourceAccount balance.
	self assert: 100 equals: destinyAccount balance.
	self assert: 100 equals: transfer value.	
	! !
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:31:57' prior: 50970986!
from: aReceptiveAccount to: aReceptiveAccount2 anAmountOf: aSmallInteger 
	self shouldBeImplemented.! !

!classDefinition: 'Transfer class' category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 19:27:55'!
Transfer class
	instanceVariableNames: 'value'!
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:34:30' prior: 50971112!
from: aReceptiveAccount to: aReceptiveAccount2 anAmountOf: aSmallInteger 
	
	Deposit register: aSmallInteger on: aReceptiveAccount2 .
	Withdraw register: aSmallInteger on: aReceptiveAccount .
	value _ aSmallInteger .! !
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:34:50' prior: 50971123!
from: aSourceAccount to: aReceptiveAccount2 anAmountOf: aSmallInteger 
	
	Deposit register: aSmallInteger on: aReceptiveAccount2 .
	Withdraw register: aSmallInteger on: aSourceAccount .
	value _ aSmallInteger .! !
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:35:04' prior: 50971133!
from: aSourceAccount to: aDestinyAccount anAmountOf: aSmallInteger 
	
	Deposit register: aSmallInteger on: aDestinyAccount .
	Withdraw register: aSmallInteger on: aSourceAccount .
	value _ aSmallInteger .! !
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:35:29' prior: 50971143!
from: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer 
	
	Deposit register: valueToTransfer on: aDestinyAccount .
	Withdraw register: valueToTransfer on: aSourceAccount .
	value _ valueToTransfer .! !

!classDefinition: #Transfer category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 19:27:55'!
Object subclass: #Transfer
	instanceVariableNames: 'value'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!
!Transfer methodsFor: 'no messages' stamp: 'ja 11/14/2020 16:36:17' overrides: 16896425!
initialize

	value _ 0! !
!Transfer methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:36:58' prior: 50970682 overrides: 16881508!
value 

	^ value ! !

!methodRemoval: Transfer class #from:to:anAmountOf: stamp: 'ja 11/14/2020 19:27:55'!
from: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer 
	
	Deposit register: valueToTransfer on: aDestinyAccount .
	Withdraw register: valueToTransfer on: aSourceAccount .
	value _ valueToTransfer .!
!Transfer methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:38:06'!
from: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer 
	
	Deposit register: valueToTransfer on: aDestinyAccount .
	Withdraw register: valueToTransfer on: aSourceAccount .
	value _ valueToTransfer .! !

!classDefinition: 'Transfer class' category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 19:27:55'!
Transfer class
	instanceVariableNames: ''!

!classDefinition: 'Transfer class' category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 19:27:55'!
Transfer class
	instanceVariableNames: ''!
!Transfer class methodsFor: 'no messages' stamp: 'ja 11/14/2020 16:40:54'!
from: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer 

	Transfer new initializeFrom: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer .! !
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:41:02' prior: 50971207!
from: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer 

	^ Transfer new initializeFrom: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer .! !
!Transfer methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:41:20' prior: 50970755!
initializeFrom: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer 

	Deposit register: valueToTransfer on: aDestinyAccount .
	Withdraw register: valueToTransfer on: aSourceAccount .
	value _ valueToTransfer .! !

!methodRemoval: Transfer #from:to:anAmountOf: stamp: 'ja 11/14/2020 19:27:55'!
from: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer 
	
	Deposit register: valueToTransfer on: aDestinyAccount .
	Withdraw register: valueToTransfer on: aSourceAccount .
	value _ valueToTransfer .!

!methodRemoval: Transfer #initialize stamp: 'ja 11/14/2020 19:27:55'!
initialize

	value _ 0!
!Transfer methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:42:09' prior: 50971225!
initializeFrom: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer 

	Deposit register: valueToTransfer on: aDestinyAccount .
	Withdraw register: valueToTransfer on: aSourceAccount .
	
	value _ valueToTransfer .! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:42:27' prior: 50971093!
test01TransferAffectsSourceAndDestinyBalance
	
	| transfer sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self assert: 0 equals: sourceAccount balance.
	self assert: 0 equals: destinyAccount balance.
	
	transfer  _ Transfer from: sourceAccount to: destinyAccount anAmountOf: 100.
	
	self assert: -100 equals: sourceAccount balance.
	self assert: 100 equals: destinyAccount balance.
! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:42:57' prior: 50971259!
test01TransferAffectsSourceAndDestinyBalance
	
	| sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self assert: 0 equals: sourceAccount balance.
	self assert: 0 equals: destinyAccount balance.
	
	Transfer from: sourceAccount to: destinyAccount anAmountOf: 100.
	
	self assert: -100 equals: sourceAccount balance.
	self assert: 100 equals: destinyAccount balance.
! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:46:53'!
test02IsPossibleGettingSourceAccountFromTransfer
	
	| sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self assert: 0 equals: sourceAccount balance.
	self assert: 0 equals: destinyAccount balance.
	
	self should: [Transfer from: sourceAccount to: destinyAccount anAmountOf: 0. self fail] 
		raise:  Error
		withMessageText: Transfer canNotTransferAnAmountOfZeroErrorDescription.! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:47:27'!
test02CanNotTransferAnAmountOfZero
	
	| sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self assert: 0 equals: sourceAccount balance.
	self assert: 0 equals: destinyAccount balance.
	
	self should: [Transfer from: sourceAccount to: destinyAccount anAmountOf: 0. self fail] 
		raise:  Error
		withMessageText: Transfer canNotTransferAnAmountOfZeroErrorDescription.! !

!methodRemoval: TransferTest #test02IsPossibleGettingSourceAccountFromTransfer stamp: 'ja 11/14/2020 19:27:55'!
test02IsPossibleGettingSourceAccountFromTransfer
	
	| sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self assert: 0 equals: sourceAccount balance.
	self assert: 0 equals: destinyAccount balance.
	
	self should: [Transfer from: sourceAccount to: destinyAccount anAmountOf: 0. self fail] 
		raise:  Error
		withMessageText: Transfer canNotTransferAnAmountOfZeroErrorDescription.!
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:47:42' prior: 50970859!
canNotTransferAnAmountOfZeroErrorDescription
	self shouldBeImplemented.! !
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:48:16' prior: 50971346!
canNotTransferAnAmountOfZeroErrorDescription
	
	^ 'Can not transfer an amount of zero'! !
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:49:41' prior: 50971216!
from: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer 

	(valueToTransfer = 0) ifTrue: [ self error: self canNotTransferAnAmountOfZeroErrorDescription ].
		
	^ Transfer new initializeFrom: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer .! !

!methodRemoval: TransferTest #test02CanNotTransferAnAmountOfZero stamp: 'ja 11/14/2020 19:27:55'!
test02CanNotTransferAnAmountOfZero
	
	| sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self assert: 0 equals: sourceAccount balance.
	self assert: 0 equals: destinyAccount balance.
	
	self should: [Transfer from: sourceAccount to: destinyAccount anAmountOf: 0. self fail] 
		raise:  Error
		withMessageText: Transfer canNotTransferAnAmountOfZeroErrorDescription.!
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:51:45'!
test03IsPossibleGettingDestinyAccountFromTransfer
	
	| sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self assert: 0 equals: sourceAccount balance.
	self assert: 0 equals: destinyAccount balance.
	
	self should: [Transfer from: sourceAccount to: destinyAccount anAmountOf: 0.] 
		raise: Error
		withMessageText: Transfer canNotTransferAnAmountOfZeroErrorDescription .! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:51:52' prior: 50971386!
test03IsPossibleGettingDestinyAccountFromTransfer
	
	| sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self assert: 0 equals: sourceAccount balance.
	self assert: 0 equals: destinyAccount balance.
	
	self should: [Transfer from: sourceAccount to: destinyAccount anAmountOf: 0. self fail] 
		raise: Error
		withMessageText: Transfer canNotTransferAnAmountOfZeroErrorDescription .! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:51:58' prior: 50971403!
test03IsPossibleGettingDestinyAccountFromTransfer
	
	| sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self should: [Transfer from: sourceAccount to: destinyAccount anAmountOf: 0. self fail] 
		raise: Error
		withMessageText: Transfer canNotTransferAnAmountOfZeroErrorDescription .! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:52:16' prior: 50970944!
test02CanNotTransferAnAmountOfZeroErrorDescription 
	
	| sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self should: [Transfer from: sourceAccount to: destinyAccount anAmountOf: 0. self fail] 
		raise: Error
		withMessageText: Transfer canNotTransferAnAmountOfZeroErrorDescription .! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:53:12' prior: 50970959!
test03CanNotTransferANegativeAmountErrorDescription
	
	| sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self should: [Transfer from: sourceAccount to: destinyAccount anAmountOf: -100. self fail] 
		raise: Error
		withMessageText: Transfer canNotTransferANegativeAmountErrorDescription .! !
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:53:24' prior: 50970980!
canNotTransferANegativeAmountErrorDescription
	self shouldBeImplemented.! !
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:54:04' prior: 50971466!
canNotTransferANegativeAmountErrorDescription
	
	^ ' Can not transfer a negative amount '! !
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:55:01' prior: 50971358!
from: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer 

	(valueToTransfer = 0) ifTrue: [ self error: self canNotTransferAnAmountOfZeroErrorDescription ].
	(valueToTransfer  < 0) ifTrue: [ self error: self canNotTransferANegativeAmountErrorDescription ].
		
	^ Transfer new initializeFrom: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer .! !

!methodRemoval: TransferTest #test03IsPossibleGettingDestinyAccountFromTransfer stamp: 'ja 11/14/2020 19:27:55'!
test03IsPossibleGettingDestinyAccountFromTransfer
	
	| sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self should: [Transfer from: sourceAccount to: destinyAccount anAmountOf: 0. self fail] 
		raise: Error
		withMessageText: Transfer canNotTransferAnAmountOfZeroErrorDescription .!
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 17:03:02' prior: 50971015!
test04TransferIsRegisteredIntoInvolvedAccount
	
	| sourceAccount destinyAccount transfer |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	transfer _ Transfer from: sourceAccount to: destinyAccount anAmountOf: 100.
	
	self assert: sourceAccount transactions includes: transfer depositMade. 
	
	self assert: destinyAccount transactions includes: transfer withdrawMade.
	
	
	! !
!Transfer methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 17:03:36'!
depositMade
	self shouldBeImplemented.! !
!Transfer methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 17:03:59' prior: 50971524!
depositMade
	
	^ nil! !

!classDefinition: #TransferType category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 19:27:57'!
AccountTransaction subclass: #TransferType
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #TransferType category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 19:27:57'!
AccountTransaction subclass: #TransferType
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:29:11' prior: 50971277!
test01TransferAffectsSourceAndDestinyBalance
	
	| transfer sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	transfer  _ Transfer from: sourceAccount to: destinyAccount anAmountOf: 100.
	
	self assert: sourceAccount balance 

	
	! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:31:05' prior: 50971549!
test01TransferAffectsSourceAndDestinyBalance
	
	| transfer sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self assert: 0 equals: (sourceAccount balance).
	self assert: 0 equals: (destinyAccount balance).
	
	transfer  _ Transfer from: sourceAccount to: destinyAccount anAmountOf: 100.
	
	self assert: -100 equals: (sourceAccount balance).
	self assert: 100 equals: (destinyAccount balance).
	self assert: 100 equals: transfer value.	
	! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:31:42' prior: 50971562!
test01TransferAffectsSourceAndDestinyBalance
	
	| transfer sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self assert: 0 equals: sourceAccount balance.
	self assert: 0 equals: destinyAccount balance.
	
	transfer  _ Transfer from: sourceAccount to: destinyAccount anAmountOf: 100.
	
	self assert: -100 equals: sourceAccount balance.
	self assert: 100 equals: destinyAccount balance.
	self assert: 100 equals: transfer value.	
	! !
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:31:57' prior: 50971478!
from: aReceptiveAccount to: aReceptiveAccount2 anAmountOf: aSmallInteger 
	self shouldBeImplemented.! !

!classDefinition: 'Transfer class' category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 19:27:57'!
Transfer class
	instanceVariableNames: 'value'!
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:34:30' prior: 50971600!
from: aReceptiveAccount to: aReceptiveAccount2 anAmountOf: aSmallInteger 
	
	Deposit register: aSmallInteger on: aReceptiveAccount2 .
	Withdraw register: aSmallInteger on: aReceptiveAccount .
	value _ aSmallInteger .! !
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:34:50' prior: 50971611!
from: aSourceAccount to: aReceptiveAccount2 anAmountOf: aSmallInteger 
	
	Deposit register: aSmallInteger on: aReceptiveAccount2 .
	Withdraw register: aSmallInteger on: aSourceAccount .
	value _ aSmallInteger .! !
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:35:04' prior: 50971621!
from: aSourceAccount to: aDestinyAccount anAmountOf: aSmallInteger 
	
	Deposit register: aSmallInteger on: aDestinyAccount .
	Withdraw register: aSmallInteger on: aSourceAccount .
	value _ aSmallInteger .! !
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:35:29' prior: 50971631!
from: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer 
	
	Deposit register: valueToTransfer on: aDestinyAccount .
	Withdraw register: valueToTransfer on: aSourceAccount .
	value _ valueToTransfer .! !

!classDefinition: #Transfer category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 19:27:57'!
Object subclass: #Transfer
	instanceVariableNames: 'value'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!
!Transfer methodsFor: 'no messages' stamp: 'ja 11/14/2020 16:36:17' overrides: 16896425!
initialize

	value _ 0! !
!Transfer methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:36:58' prior: 50971175 overrides: 16881508!
value 

	^ value ! !

!methodRemoval: Transfer class #from:to:anAmountOf: stamp: 'ja 11/14/2020 19:27:57'!
from: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer 
	
	Deposit register: valueToTransfer on: aDestinyAccount .
	Withdraw register: valueToTransfer on: aSourceAccount .
	value _ valueToTransfer .!
!Transfer methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:38:06'!
from: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer 
	
	Deposit register: valueToTransfer on: aDestinyAccount .
	Withdraw register: valueToTransfer on: aSourceAccount .
	value _ valueToTransfer .! !

!classDefinition: 'Transfer class' category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 19:27:57'!
Transfer class
	instanceVariableNames: ''!

!classDefinition: 'Transfer class' category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 19:27:57'!
Transfer class
	instanceVariableNames: ''!
!Transfer class methodsFor: 'no messages' stamp: 'ja 11/14/2020 16:40:54'!
from: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer 

	Transfer new initializeFrom: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer .! !
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:41:02' prior: 50971695!
from: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer 

	^ Transfer new initializeFrom: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer .! !
!Transfer methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:41:20' prior: 50971248!
initializeFrom: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer 

	Deposit register: valueToTransfer on: aDestinyAccount .
	Withdraw register: valueToTransfer on: aSourceAccount .
	value _ valueToTransfer .! !

!methodRemoval: Transfer #from:to:anAmountOf: stamp: 'ja 11/14/2020 19:27:57'!
from: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer 
	
	Deposit register: valueToTransfer on: aDestinyAccount .
	Withdraw register: valueToTransfer on: aSourceAccount .
	value _ valueToTransfer .!

!methodRemoval: Transfer #initialize stamp: 'ja 11/14/2020 19:27:57'!
initialize

	value _ 0!
!Transfer methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:42:09' prior: 50971713!
initializeFrom: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer 

	Deposit register: valueToTransfer on: aDestinyAccount .
	Withdraw register: valueToTransfer on: aSourceAccount .
	
	value _ valueToTransfer .! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:42:27' prior: 50971581!
test01TransferAffectsSourceAndDestinyBalance
	
	| transfer sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self assert: 0 equals: sourceAccount balance.
	self assert: 0 equals: destinyAccount balance.
	
	transfer  _ Transfer from: sourceAccount to: destinyAccount anAmountOf: 100.
	
	self assert: -100 equals: sourceAccount balance.
	self assert: 100 equals: destinyAccount balance.
! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:42:57' prior: 50971747!
test01TransferAffectsSourceAndDestinyBalance
	
	| sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self assert: 0 equals: sourceAccount balance.
	self assert: 0 equals: destinyAccount balance.
	
	Transfer from: sourceAccount to: destinyAccount anAmountOf: 100.
	
	self assert: -100 equals: sourceAccount balance.
	self assert: 100 equals: destinyAccount balance.
! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:46:53'!
test02IsPossibleGettingSourceAccountFromTransfer
	
	| sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self assert: 0 equals: sourceAccount balance.
	self assert: 0 equals: destinyAccount balance.
	
	self should: [Transfer from: sourceAccount to: destinyAccount anAmountOf: 0. self fail] 
		raise:  Error
		withMessageText: Transfer canNotTransferAnAmountOfZeroErrorDescription.! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:47:27'!
test02CanNotTransferAnAmountOfZero
	
	| sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self assert: 0 equals: sourceAccount balance.
	self assert: 0 equals: destinyAccount balance.
	
	self should: [Transfer from: sourceAccount to: destinyAccount anAmountOf: 0. self fail] 
		raise:  Error
		withMessageText: Transfer canNotTransferAnAmountOfZeroErrorDescription.! !

!methodRemoval: TransferTest #test02IsPossibleGettingSourceAccountFromTransfer stamp: 'ja 11/14/2020 19:27:57'!
test02IsPossibleGettingSourceAccountFromTransfer
	
	| sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self assert: 0 equals: sourceAccount balance.
	self assert: 0 equals: destinyAccount balance.
	
	self should: [Transfer from: sourceAccount to: destinyAccount anAmountOf: 0. self fail] 
		raise:  Error
		withMessageText: Transfer canNotTransferAnAmountOfZeroErrorDescription.!
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:47:42' prior: 50971352!
canNotTransferAnAmountOfZeroErrorDescription
	self shouldBeImplemented.! !
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:48:16' prior: 50971834!
canNotTransferAnAmountOfZeroErrorDescription
	
	^ 'Can not transfer an amount of zero'! !
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:49:41' prior: 50971704!
from: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer 

	(valueToTransfer = 0) ifTrue: [ self error: self canNotTransferAnAmountOfZeroErrorDescription ].
		
	^ Transfer new initializeFrom: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer .! !

!methodRemoval: TransferTest #test02CanNotTransferAnAmountOfZero stamp: 'ja 11/14/2020 19:27:57'!
test02CanNotTransferAnAmountOfZero
	
	| sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self assert: 0 equals: sourceAccount balance.
	self assert: 0 equals: destinyAccount balance.
	
	self should: [Transfer from: sourceAccount to: destinyAccount anAmountOf: 0. self fail] 
		raise:  Error
		withMessageText: Transfer canNotTransferAnAmountOfZeroErrorDescription.!
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:51:45'!
test03IsPossibleGettingDestinyAccountFromTransfer
	
	| sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self assert: 0 equals: sourceAccount balance.
	self assert: 0 equals: destinyAccount balance.
	
	self should: [Transfer from: sourceAccount to: destinyAccount anAmountOf: 0.] 
		raise: Error
		withMessageText: Transfer canNotTransferAnAmountOfZeroErrorDescription .! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:51:52' prior: 50971874!
test03IsPossibleGettingDestinyAccountFromTransfer
	
	| sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self assert: 0 equals: sourceAccount balance.
	self assert: 0 equals: destinyAccount balance.
	
	self should: [Transfer from: sourceAccount to: destinyAccount anAmountOf: 0. self fail] 
		raise: Error
		withMessageText: Transfer canNotTransferAnAmountOfZeroErrorDescription .! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:51:58' prior: 50971891!
test03IsPossibleGettingDestinyAccountFromTransfer
	
	| sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self should: [Transfer from: sourceAccount to: destinyAccount anAmountOf: 0. self fail] 
		raise: Error
		withMessageText: Transfer canNotTransferAnAmountOfZeroErrorDescription .! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:52:16' prior: 50971436!
test02CanNotTransferAnAmountOfZeroErrorDescription 
	
	| sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self should: [Transfer from: sourceAccount to: destinyAccount anAmountOf: 0. self fail] 
		raise: Error
		withMessageText: Transfer canNotTransferAnAmountOfZeroErrorDescription .! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:53:12' prior: 50971451!
test03CanNotTransferANegativeAmountErrorDescription
	
	| sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self should: [Transfer from: sourceAccount to: destinyAccount anAmountOf: -100. self fail] 
		raise: Error
		withMessageText: Transfer canNotTransferANegativeAmountErrorDescription .! !
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:53:24' prior: 50971472!
canNotTransferANegativeAmountErrorDescription
	self shouldBeImplemented.! !
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:54:04' prior: 50971954!
canNotTransferANegativeAmountErrorDescription
	
	^ ' Can not transfer a negative amount '! !
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:55:01' prior: 50971846!
from: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer 

	(valueToTransfer = 0) ifTrue: [ self error: self canNotTransferAnAmountOfZeroErrorDescription ].
	(valueToTransfer  < 0) ifTrue: [ self error: self canNotTransferANegativeAmountErrorDescription ].
		
	^ Transfer new initializeFrom: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer .! !

!methodRemoval: TransferTest #test03IsPossibleGettingDestinyAccountFromTransfer stamp: 'ja 11/14/2020 19:27:57'!
test03IsPossibleGettingDestinyAccountFromTransfer
	
	| sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self should: [Transfer from: sourceAccount to: destinyAccount anAmountOf: 0. self fail] 
		raise: Error
		withMessageText: Transfer canNotTransferAnAmountOfZeroErrorDescription .!
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 17:03:02' prior: 50971508!
test04TransferIsRegisteredIntoInvolvedAccount
	
	| sourceAccount destinyAccount transfer |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	transfer _ Transfer from: sourceAccount to: destinyAccount anAmountOf: 100.
	
	self assert: sourceAccount transactions includes: transfer depositMade. 
	
	self assert: destinyAccount transactions includes: transfer withdrawMade.
	
	
	! !
!Transfer methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 17:03:36' prior: 50971529!
depositMade
	self shouldBeImplemented.! !
!Transfer methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 17:03:59' prior: 50972012!
depositMade
	
	^ nil! !

!classDefinition: #Transfer category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 19:27:57'!
Object subclass: #Transfer
	instanceVariableNames: 'value depositMade'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #TransferType category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 19:27:59'!
AccountTransaction subclass: #TransferType
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #TransferType category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 19:27:59'!
AccountTransaction subclass: #TransferType
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:29:11' prior: 50971765!
test01TransferAffectsSourceAndDestinyBalance
	
	| transfer sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	transfer  _ Transfer from: sourceAccount to: destinyAccount anAmountOf: 100.
	
	self assert: sourceAccount balance 

	
	! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:31:05' prior: 50972044!
test01TransferAffectsSourceAndDestinyBalance
	
	| transfer sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self assert: 0 equals: (sourceAccount balance).
	self assert: 0 equals: (destinyAccount balance).
	
	transfer  _ Transfer from: sourceAccount to: destinyAccount anAmountOf: 100.
	
	self assert: -100 equals: (sourceAccount balance).
	self assert: 100 equals: (destinyAccount balance).
	self assert: 100 equals: transfer value.	
	! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:31:42' prior: 50972057!
test01TransferAffectsSourceAndDestinyBalance
	
	| transfer sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self assert: 0 equals: sourceAccount balance.
	self assert: 0 equals: destinyAccount balance.
	
	transfer  _ Transfer from: sourceAccount to: destinyAccount anAmountOf: 100.
	
	self assert: -100 equals: sourceAccount balance.
	self assert: 100 equals: destinyAccount balance.
	self assert: 100 equals: transfer value.	
	! !
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:31:57' prior: 50971966!
from: aReceptiveAccount to: aReceptiveAccount2 anAmountOf: aSmallInteger 
	self shouldBeImplemented.! !

!classDefinition: 'Transfer class' category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 19:27:59'!
Transfer class
	instanceVariableNames: 'value'!
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:34:30' prior: 50972095!
from: aReceptiveAccount to: aReceptiveAccount2 anAmountOf: aSmallInteger 
	
	Deposit register: aSmallInteger on: aReceptiveAccount2 .
	Withdraw register: aSmallInteger on: aReceptiveAccount .
	value _ aSmallInteger .! !
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:34:50' prior: 50972106!
from: aSourceAccount to: aReceptiveAccount2 anAmountOf: aSmallInteger 
	
	Deposit register: aSmallInteger on: aReceptiveAccount2 .
	Withdraw register: aSmallInteger on: aSourceAccount .
	value _ aSmallInteger .! !
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:35:04' prior: 50972116!
from: aSourceAccount to: aDestinyAccount anAmountOf: aSmallInteger 
	
	Deposit register: aSmallInteger on: aDestinyAccount .
	Withdraw register: aSmallInteger on: aSourceAccount .
	value _ aSmallInteger .! !
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:35:29' prior: 50972126!
from: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer 
	
	Deposit register: valueToTransfer on: aDestinyAccount .
	Withdraw register: valueToTransfer on: aSourceAccount .
	value _ valueToTransfer .! !

!classDefinition: #Transfer category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 19:27:59'!
Object subclass: #Transfer
	instanceVariableNames: 'value'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!
!Transfer methodsFor: 'no messages' stamp: 'ja 11/14/2020 16:36:17' overrides: 16896425!
initialize

	value _ 0! !
!Transfer methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:36:58' prior: 50971663 overrides: 16881508!
value 

	^ value ! !

!methodRemoval: Transfer class #from:to:anAmountOf: stamp: 'ja 11/14/2020 19:27:59'!
from: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer 
	
	Deposit register: valueToTransfer on: aDestinyAccount .
	Withdraw register: valueToTransfer on: aSourceAccount .
	value _ valueToTransfer .!
!Transfer methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:38:06'!
from: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer 
	
	Deposit register: valueToTransfer on: aDestinyAccount .
	Withdraw register: valueToTransfer on: aSourceAccount .
	value _ valueToTransfer .! !

!classDefinition: 'Transfer class' category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 19:27:59'!
Transfer class
	instanceVariableNames: ''!

!classDefinition: 'Transfer class' category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 19:27:59'!
Transfer class
	instanceVariableNames: ''!
!Transfer class methodsFor: 'no messages' stamp: 'ja 11/14/2020 16:40:54'!
from: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer 

	Transfer new initializeFrom: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer .! !
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:41:02' prior: 50972190!
from: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer 

	^ Transfer new initializeFrom: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer .! !
!Transfer methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:41:20' prior: 50971736!
initializeFrom: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer 

	Deposit register: valueToTransfer on: aDestinyAccount .
	Withdraw register: valueToTransfer on: aSourceAccount .
	value _ valueToTransfer .! !

!methodRemoval: Transfer #from:to:anAmountOf: stamp: 'ja 11/14/2020 19:27:59'!
from: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer 
	
	Deposit register: valueToTransfer on: aDestinyAccount .
	Withdraw register: valueToTransfer on: aSourceAccount .
	value _ valueToTransfer .!

!methodRemoval: Transfer #initialize stamp: 'ja 11/14/2020 19:27:59'!
initialize

	value _ 0!
!Transfer methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:42:09' prior: 50972208!
initializeFrom: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer 

	Deposit register: valueToTransfer on: aDestinyAccount .
	Withdraw register: valueToTransfer on: aSourceAccount .
	
	value _ valueToTransfer .! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:42:27' prior: 50972076!
test01TransferAffectsSourceAndDestinyBalance
	
	| transfer sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self assert: 0 equals: sourceAccount balance.
	self assert: 0 equals: destinyAccount balance.
	
	transfer  _ Transfer from: sourceAccount to: destinyAccount anAmountOf: 100.
	
	self assert: -100 equals: sourceAccount balance.
	self assert: 100 equals: destinyAccount balance.
! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:42:57' prior: 50972242!
test01TransferAffectsSourceAndDestinyBalance
	
	| sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self assert: 0 equals: sourceAccount balance.
	self assert: 0 equals: destinyAccount balance.
	
	Transfer from: sourceAccount to: destinyAccount anAmountOf: 100.
	
	self assert: -100 equals: sourceAccount balance.
	self assert: 100 equals: destinyAccount balance.
! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:46:53'!
test02IsPossibleGettingSourceAccountFromTransfer
	
	| sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self assert: 0 equals: sourceAccount balance.
	self assert: 0 equals: destinyAccount balance.
	
	self should: [Transfer from: sourceAccount to: destinyAccount anAmountOf: 0. self fail] 
		raise:  Error
		withMessageText: Transfer canNotTransferAnAmountOfZeroErrorDescription.! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:47:27'!
test02CanNotTransferAnAmountOfZero
	
	| sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self assert: 0 equals: sourceAccount balance.
	self assert: 0 equals: destinyAccount balance.
	
	self should: [Transfer from: sourceAccount to: destinyAccount anAmountOf: 0. self fail] 
		raise:  Error
		withMessageText: Transfer canNotTransferAnAmountOfZeroErrorDescription.! !

!methodRemoval: TransferTest #test02IsPossibleGettingSourceAccountFromTransfer stamp: 'ja 11/14/2020 19:27:59'!
test02IsPossibleGettingSourceAccountFromTransfer
	
	| sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self assert: 0 equals: sourceAccount balance.
	self assert: 0 equals: destinyAccount balance.
	
	self should: [Transfer from: sourceAccount to: destinyAccount anAmountOf: 0. self fail] 
		raise:  Error
		withMessageText: Transfer canNotTransferAnAmountOfZeroErrorDescription.!
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:47:42' prior: 50971840!
canNotTransferAnAmountOfZeroErrorDescription
	self shouldBeImplemented.! !
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:48:16' prior: 50972329!
canNotTransferAnAmountOfZeroErrorDescription
	
	^ 'Can not transfer an amount of zero'! !
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:49:41' prior: 50972199!
from: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer 

	(valueToTransfer = 0) ifTrue: [ self error: self canNotTransferAnAmountOfZeroErrorDescription ].
		
	^ Transfer new initializeFrom: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer .! !

!methodRemoval: TransferTest #test02CanNotTransferAnAmountOfZero stamp: 'ja 11/14/2020 19:27:59'!
test02CanNotTransferAnAmountOfZero
	
	| sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self assert: 0 equals: sourceAccount balance.
	self assert: 0 equals: destinyAccount balance.
	
	self should: [Transfer from: sourceAccount to: destinyAccount anAmountOf: 0. self fail] 
		raise:  Error
		withMessageText: Transfer canNotTransferAnAmountOfZeroErrorDescription.!
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:51:45'!
test03IsPossibleGettingDestinyAccountFromTransfer
	
	| sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self assert: 0 equals: sourceAccount balance.
	self assert: 0 equals: destinyAccount balance.
	
	self should: [Transfer from: sourceAccount to: destinyAccount anAmountOf: 0.] 
		raise: Error
		withMessageText: Transfer canNotTransferAnAmountOfZeroErrorDescription .! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:51:52' prior: 50972369!
test03IsPossibleGettingDestinyAccountFromTransfer
	
	| sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self assert: 0 equals: sourceAccount balance.
	self assert: 0 equals: destinyAccount balance.
	
	self should: [Transfer from: sourceAccount to: destinyAccount anAmountOf: 0. self fail] 
		raise: Error
		withMessageText: Transfer canNotTransferAnAmountOfZeroErrorDescription .! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:51:58' prior: 50972386!
test03IsPossibleGettingDestinyAccountFromTransfer
	
	| sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self should: [Transfer from: sourceAccount to: destinyAccount anAmountOf: 0. self fail] 
		raise: Error
		withMessageText: Transfer canNotTransferAnAmountOfZeroErrorDescription .! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:52:16' prior: 50971924!
test02CanNotTransferAnAmountOfZeroErrorDescription 
	
	| sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self should: [Transfer from: sourceAccount to: destinyAccount anAmountOf: 0. self fail] 
		raise: Error
		withMessageText: Transfer canNotTransferAnAmountOfZeroErrorDescription .! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:53:12' prior: 50971939!
test03CanNotTransferANegativeAmountErrorDescription
	
	| sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self should: [Transfer from: sourceAccount to: destinyAccount anAmountOf: -100. self fail] 
		raise: Error
		withMessageText: Transfer canNotTransferANegativeAmountErrorDescription .! !
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:53:24' prior: 50971960!
canNotTransferANegativeAmountErrorDescription
	self shouldBeImplemented.! !
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:54:04' prior: 50972449!
canNotTransferANegativeAmountErrorDescription
	
	^ ' Can not transfer a negative amount '! !
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:55:01' prior: 50972341!
from: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer 

	(valueToTransfer = 0) ifTrue: [ self error: self canNotTransferAnAmountOfZeroErrorDescription ].
	(valueToTransfer  < 0) ifTrue: [ self error: self canNotTransferANegativeAmountErrorDescription ].
		
	^ Transfer new initializeFrom: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer .! !

!methodRemoval: TransferTest #test03IsPossibleGettingDestinyAccountFromTransfer stamp: 'ja 11/14/2020 19:27:59'!
test03IsPossibleGettingDestinyAccountFromTransfer
	
	| sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self should: [Transfer from: sourceAccount to: destinyAccount anAmountOf: 0. self fail] 
		raise: Error
		withMessageText: Transfer canNotTransferAnAmountOfZeroErrorDescription .!
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 17:03:02' prior: 50971996!
test04TransferIsRegisteredIntoInvolvedAccount
	
	| sourceAccount destinyAccount transfer |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	transfer _ Transfer from: sourceAccount to: destinyAccount anAmountOf: 100.
	
	self assert: sourceAccount transactions includes: transfer depositMade. 
	
	self assert: destinyAccount transactions includes: transfer withdrawMade.
	
	
	! !
!Transfer methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 17:03:36' prior: 50972017!
depositMade
	self shouldBeImplemented.! !
!Transfer methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 17:03:59' prior: 50972507!
depositMade
	
	^ nil! !

!classDefinition: #Transfer category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 19:28:00'!
Object subclass: #Transfer
	instanceVariableNames: 'value depositMade'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #Transfer category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 19:28:00'!
Object subclass: #Transfer
	instanceVariableNames: 'value depositMade withdrawMade'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #TransferType category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 19:28:04'!
AccountTransaction subclass: #TransferType
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #TransferType category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 19:28:04'!
AccountTransaction subclass: #TransferType
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:29:11' prior: 50972260!
test01TransferAffectsSourceAndDestinyBalance
	
	| transfer sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	transfer  _ Transfer from: sourceAccount to: destinyAccount anAmountOf: 100.
	
	self assert: sourceAccount balance 

	
	! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:31:05' prior: 50972547!
test01TransferAffectsSourceAndDestinyBalance
	
	| transfer sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self assert: 0 equals: (sourceAccount balance).
	self assert: 0 equals: (destinyAccount balance).
	
	transfer  _ Transfer from: sourceAccount to: destinyAccount anAmountOf: 100.
	
	self assert: -100 equals: (sourceAccount balance).
	self assert: 100 equals: (destinyAccount balance).
	self assert: 100 equals: transfer value.	
	! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:31:42' prior: 50972560!
test01TransferAffectsSourceAndDestinyBalance
	
	| transfer sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self assert: 0 equals: sourceAccount balance.
	self assert: 0 equals: destinyAccount balance.
	
	transfer  _ Transfer from: sourceAccount to: destinyAccount anAmountOf: 100.
	
	self assert: -100 equals: sourceAccount balance.
	self assert: 100 equals: destinyAccount balance.
	self assert: 100 equals: transfer value.	
	! !
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:31:57' prior: 50972461!
from: aReceptiveAccount to: aReceptiveAccount2 anAmountOf: aSmallInteger 
	self shouldBeImplemented.! !

!classDefinition: 'Transfer class' category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 19:28:04'!
Transfer class
	instanceVariableNames: 'value'!
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:34:30' prior: 50972598!
from: aReceptiveAccount to: aReceptiveAccount2 anAmountOf: aSmallInteger 
	
	Deposit register: aSmallInteger on: aReceptiveAccount2 .
	Withdraw register: aSmallInteger on: aReceptiveAccount .
	value _ aSmallInteger .! !
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:34:50' prior: 50972609!
from: aSourceAccount to: aReceptiveAccount2 anAmountOf: aSmallInteger 
	
	Deposit register: aSmallInteger on: aReceptiveAccount2 .
	Withdraw register: aSmallInteger on: aSourceAccount .
	value _ aSmallInteger .! !
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:35:04' prior: 50972619!
from: aSourceAccount to: aDestinyAccount anAmountOf: aSmallInteger 
	
	Deposit register: aSmallInteger on: aDestinyAccount .
	Withdraw register: aSmallInteger on: aSourceAccount .
	value _ aSmallInteger .! !
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:35:29' prior: 50972629!
from: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer 
	
	Deposit register: valueToTransfer on: aDestinyAccount .
	Withdraw register: valueToTransfer on: aSourceAccount .
	value _ valueToTransfer .! !

!classDefinition: #Transfer category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 19:28:04'!
Object subclass: #Transfer
	instanceVariableNames: 'value'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!
!Transfer methodsFor: 'no messages' stamp: 'ja 11/14/2020 16:36:17' overrides: 16896425!
initialize

	value _ 0! !
!Transfer methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:36:58' prior: 50972158 overrides: 16881508!
value 

	^ value ! !

!methodRemoval: Transfer class #from:to:anAmountOf: stamp: 'ja 11/14/2020 19:28:04'!
from: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer 
	
	Deposit register: valueToTransfer on: aDestinyAccount .
	Withdraw register: valueToTransfer on: aSourceAccount .
	value _ valueToTransfer .!
!Transfer methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:38:06'!
from: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer 
	
	Deposit register: valueToTransfer on: aDestinyAccount .
	Withdraw register: valueToTransfer on: aSourceAccount .
	value _ valueToTransfer .! !

!classDefinition: 'Transfer class' category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 19:28:05'!
Transfer class
	instanceVariableNames: ''!

!classDefinition: 'Transfer class' category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 19:28:05'!
Transfer class
	instanceVariableNames: ''!
!Transfer class methodsFor: 'no messages' stamp: 'ja 11/14/2020 16:40:54'!
from: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer 

	Transfer new initializeFrom: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer .! !
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:41:02' prior: 50972693!
from: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer 

	^ Transfer new initializeFrom: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer .! !
!Transfer methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:41:20' prior: 50972231!
initializeFrom: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer 

	Deposit register: valueToTransfer on: aDestinyAccount .
	Withdraw register: valueToTransfer on: aSourceAccount .
	value _ valueToTransfer .! !

!methodRemoval: Transfer #from:to:anAmountOf: stamp: 'ja 11/14/2020 19:28:05'!
from: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer 
	
	Deposit register: valueToTransfer on: aDestinyAccount .
	Withdraw register: valueToTransfer on: aSourceAccount .
	value _ valueToTransfer .!

!methodRemoval: Transfer #initialize stamp: 'ja 11/14/2020 19:28:05'!
initialize

	value _ 0!
!Transfer methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:42:09' prior: 50972711!
initializeFrom: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer 

	Deposit register: valueToTransfer on: aDestinyAccount .
	Withdraw register: valueToTransfer on: aSourceAccount .
	
	value _ valueToTransfer .! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:42:27' prior: 50972579!
test01TransferAffectsSourceAndDestinyBalance
	
	| transfer sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self assert: 0 equals: sourceAccount balance.
	self assert: 0 equals: destinyAccount balance.
	
	transfer  _ Transfer from: sourceAccount to: destinyAccount anAmountOf: 100.
	
	self assert: -100 equals: sourceAccount balance.
	self assert: 100 equals: destinyAccount balance.
! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:42:57' prior: 50972745!
test01TransferAffectsSourceAndDestinyBalance
	
	| sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self assert: 0 equals: sourceAccount balance.
	self assert: 0 equals: destinyAccount balance.
	
	Transfer from: sourceAccount to: destinyAccount anAmountOf: 100.
	
	self assert: -100 equals: sourceAccount balance.
	self assert: 100 equals: destinyAccount balance.
! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:46:53'!
test02IsPossibleGettingSourceAccountFromTransfer
	
	| sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self assert: 0 equals: sourceAccount balance.
	self assert: 0 equals: destinyAccount balance.
	
	self should: [Transfer from: sourceAccount to: destinyAccount anAmountOf: 0. self fail] 
		raise:  Error
		withMessageText: Transfer canNotTransferAnAmountOfZeroErrorDescription.! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:47:27'!
test02CanNotTransferAnAmountOfZero
	
	| sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self assert: 0 equals: sourceAccount balance.
	self assert: 0 equals: destinyAccount balance.
	
	self should: [Transfer from: sourceAccount to: destinyAccount anAmountOf: 0. self fail] 
		raise:  Error
		withMessageText: Transfer canNotTransferAnAmountOfZeroErrorDescription.! !

!methodRemoval: TransferTest #test02IsPossibleGettingSourceAccountFromTransfer stamp: 'ja 11/14/2020 19:28:05'!
test02IsPossibleGettingSourceAccountFromTransfer
	
	| sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self assert: 0 equals: sourceAccount balance.
	self assert: 0 equals: destinyAccount balance.
	
	self should: [Transfer from: sourceAccount to: destinyAccount anAmountOf: 0. self fail] 
		raise:  Error
		withMessageText: Transfer canNotTransferAnAmountOfZeroErrorDescription.!
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:47:42' prior: 50972335!
canNotTransferAnAmountOfZeroErrorDescription
	self shouldBeImplemented.! !
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:48:16' prior: 50972832!
canNotTransferAnAmountOfZeroErrorDescription
	
	^ 'Can not transfer an amount of zero'! !
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:49:41' prior: 50972702!
from: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer 

	(valueToTransfer = 0) ifTrue: [ self error: self canNotTransferAnAmountOfZeroErrorDescription ].
		
	^ Transfer new initializeFrom: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer .! !

!methodRemoval: TransferTest #test02CanNotTransferAnAmountOfZero stamp: 'ja 11/14/2020 19:28:05'!
test02CanNotTransferAnAmountOfZero
	
	| sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self assert: 0 equals: sourceAccount balance.
	self assert: 0 equals: destinyAccount balance.
	
	self should: [Transfer from: sourceAccount to: destinyAccount anAmountOf: 0. self fail] 
		raise:  Error
		withMessageText: Transfer canNotTransferAnAmountOfZeroErrorDescription.!
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:51:45'!
test03IsPossibleGettingDestinyAccountFromTransfer
	
	| sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self assert: 0 equals: sourceAccount balance.
	self assert: 0 equals: destinyAccount balance.
	
	self should: [Transfer from: sourceAccount to: destinyAccount anAmountOf: 0.] 
		raise: Error
		withMessageText: Transfer canNotTransferAnAmountOfZeroErrorDescription .! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:51:52' prior: 50972872!
test03IsPossibleGettingDestinyAccountFromTransfer
	
	| sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self assert: 0 equals: sourceAccount balance.
	self assert: 0 equals: destinyAccount balance.
	
	self should: [Transfer from: sourceAccount to: destinyAccount anAmountOf: 0. self fail] 
		raise: Error
		withMessageText: Transfer canNotTransferAnAmountOfZeroErrorDescription .! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:51:58' prior: 50972889!
test03IsPossibleGettingDestinyAccountFromTransfer
	
	| sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self should: [Transfer from: sourceAccount to: destinyAccount anAmountOf: 0. self fail] 
		raise: Error
		withMessageText: Transfer canNotTransferAnAmountOfZeroErrorDescription .! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:52:16' prior: 50972419!
test02CanNotTransferAnAmountOfZeroErrorDescription 
	
	| sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self should: [Transfer from: sourceAccount to: destinyAccount anAmountOf: 0. self fail] 
		raise: Error
		withMessageText: Transfer canNotTransferAnAmountOfZeroErrorDescription .! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:53:12' prior: 50972434!
test03CanNotTransferANegativeAmountErrorDescription
	
	| sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self should: [Transfer from: sourceAccount to: destinyAccount anAmountOf: -100. self fail] 
		raise: Error
		withMessageText: Transfer canNotTransferANegativeAmountErrorDescription .! !
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:53:24' prior: 50972455!
canNotTransferANegativeAmountErrorDescription
	self shouldBeImplemented.! !
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:54:04' prior: 50972952!
canNotTransferANegativeAmountErrorDescription
	
	^ ' Can not transfer a negative amount '! !
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:55:01' prior: 50972844!
from: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer 

	(valueToTransfer = 0) ifTrue: [ self error: self canNotTransferAnAmountOfZeroErrorDescription ].
	(valueToTransfer  < 0) ifTrue: [ self error: self canNotTransferANegativeAmountErrorDescription ].
		
	^ Transfer new initializeFrom: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer .! !

!methodRemoval: TransferTest #test03IsPossibleGettingDestinyAccountFromTransfer stamp: 'ja 11/14/2020 19:28:05'!
test03IsPossibleGettingDestinyAccountFromTransfer
	
	| sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self should: [Transfer from: sourceAccount to: destinyAccount anAmountOf: 0. self fail] 
		raise: Error
		withMessageText: Transfer canNotTransferAnAmountOfZeroErrorDescription .!
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 17:03:02' prior: 50972491!
test04TransferIsRegisteredIntoInvolvedAccount
	
	| sourceAccount destinyAccount transfer |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	transfer _ Transfer from: sourceAccount to: destinyAccount anAmountOf: 100.
	
	self assert: sourceAccount transactions includes: transfer depositMade. 
	
	self assert: destinyAccount transactions includes: transfer withdrawMade.
	
	
	! !
!Transfer methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 17:03:36' prior: 50972512!
depositMade
	self shouldBeImplemented.! !
!Transfer methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 17:03:59' prior: 50973010!
depositMade
	
	^ nil! !

!classDefinition: #Transfer category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 19:28:05'!
Object subclass: #Transfer
	instanceVariableNames: 'value depositMade'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #Transfer category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 19:28:05'!
Object subclass: #Transfer
	instanceVariableNames: 'value depositMade withdrawMade'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!
!Transfer methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 17:05:37' prior: 50972734!
initializeFrom: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer 

	depositMade _ TransferDeposit register: valueToTransfer on: aDestinyAccount .
	withdrawMade _ TransferWithdraw register: valueToTransfer on: aSourceAccount .
	
	value _ valueToTransfer .! !

!classDefinition: #TransferType category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 19:28:07'!
AccountTransaction subclass: #TransferType
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #TransferType category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 19:28:07'!
AccountTransaction subclass: #TransferType
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:29:11' prior: 50972763!
test01TransferAffectsSourceAndDestinyBalance
	
	| transfer sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	transfer  _ Transfer from: sourceAccount to: destinyAccount anAmountOf: 100.
	
	self assert: sourceAccount balance 

	
	! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:31:05' prior: 50973062!
test01TransferAffectsSourceAndDestinyBalance
	
	| transfer sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self assert: 0 equals: (sourceAccount balance).
	self assert: 0 equals: (destinyAccount balance).
	
	transfer  _ Transfer from: sourceAccount to: destinyAccount anAmountOf: 100.
	
	self assert: -100 equals: (sourceAccount balance).
	self assert: 100 equals: (destinyAccount balance).
	self assert: 100 equals: transfer value.	
	! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:31:42' prior: 50973075!
test01TransferAffectsSourceAndDestinyBalance
	
	| transfer sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self assert: 0 equals: sourceAccount balance.
	self assert: 0 equals: destinyAccount balance.
	
	transfer  _ Transfer from: sourceAccount to: destinyAccount anAmountOf: 100.
	
	self assert: -100 equals: sourceAccount balance.
	self assert: 100 equals: destinyAccount balance.
	self assert: 100 equals: transfer value.	
	! !
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:31:57' prior: 50972964!
from: aReceptiveAccount to: aReceptiveAccount2 anAmountOf: aSmallInteger 
	self shouldBeImplemented.! !

!classDefinition: 'Transfer class' category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 19:28:07'!
Transfer class
	instanceVariableNames: 'value'!
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:34:30' prior: 50973113!
from: aReceptiveAccount to: aReceptiveAccount2 anAmountOf: aSmallInteger 
	
	Deposit register: aSmallInteger on: aReceptiveAccount2 .
	Withdraw register: aSmallInteger on: aReceptiveAccount .
	value _ aSmallInteger .! !
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:34:50' prior: 50973124!
from: aSourceAccount to: aReceptiveAccount2 anAmountOf: aSmallInteger 
	
	Deposit register: aSmallInteger on: aReceptiveAccount2 .
	Withdraw register: aSmallInteger on: aSourceAccount .
	value _ aSmallInteger .! !
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:35:04' prior: 50973134!
from: aSourceAccount to: aDestinyAccount anAmountOf: aSmallInteger 
	
	Deposit register: aSmallInteger on: aDestinyAccount .
	Withdraw register: aSmallInteger on: aSourceAccount .
	value _ aSmallInteger .! !
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:35:29' prior: 50973144!
from: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer 
	
	Deposit register: valueToTransfer on: aDestinyAccount .
	Withdraw register: valueToTransfer on: aSourceAccount .
	value _ valueToTransfer .! !

!classDefinition: #Transfer category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 19:28:07'!
Object subclass: #Transfer
	instanceVariableNames: 'value'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!
!Transfer methodsFor: 'no messages' stamp: 'ja 11/14/2020 16:36:17' overrides: 16896425!
initialize

	value _ 0! !
!Transfer methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:36:58' prior: 50972661 overrides: 16881508!
value 

	^ value ! !

!methodRemoval: Transfer class #from:to:anAmountOf: stamp: 'ja 11/14/2020 19:28:07'!
from: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer 
	
	Deposit register: valueToTransfer on: aDestinyAccount .
	Withdraw register: valueToTransfer on: aSourceAccount .
	value _ valueToTransfer .!
!Transfer methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:38:06'!
from: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer 
	
	Deposit register: valueToTransfer on: aDestinyAccount .
	Withdraw register: valueToTransfer on: aSourceAccount .
	value _ valueToTransfer .! !

!classDefinition: 'Transfer class' category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 19:28:07'!
Transfer class
	instanceVariableNames: ''!

!classDefinition: 'Transfer class' category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 19:28:07'!
Transfer class
	instanceVariableNames: ''!
!Transfer class methodsFor: 'no messages' stamp: 'ja 11/14/2020 16:40:54'!
from: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer 

	Transfer new initializeFrom: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer .! !
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:41:02' prior: 50973208!
from: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer 

	^ Transfer new initializeFrom: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer .! !
!Transfer methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:41:20' prior: 50973035!
initializeFrom: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer 

	Deposit register: valueToTransfer on: aDestinyAccount .
	Withdraw register: valueToTransfer on: aSourceAccount .
	value _ valueToTransfer .! !

!methodRemoval: Transfer #from:to:anAmountOf: stamp: 'ja 11/14/2020 19:28:07'!
from: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer 
	
	Deposit register: valueToTransfer on: aDestinyAccount .
	Withdraw register: valueToTransfer on: aSourceAccount .
	value _ valueToTransfer .!

!methodRemoval: Transfer #initialize stamp: 'ja 11/14/2020 19:28:07'!
initialize

	value _ 0!
!Transfer methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:42:09' prior: 50973226!
initializeFrom: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer 

	Deposit register: valueToTransfer on: aDestinyAccount .
	Withdraw register: valueToTransfer on: aSourceAccount .
	
	value _ valueToTransfer .! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:42:27' prior: 50973094!
test01TransferAffectsSourceAndDestinyBalance
	
	| transfer sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self assert: 0 equals: sourceAccount balance.
	self assert: 0 equals: destinyAccount balance.
	
	transfer  _ Transfer from: sourceAccount to: destinyAccount anAmountOf: 100.
	
	self assert: -100 equals: sourceAccount balance.
	self assert: 100 equals: destinyAccount balance.
! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:42:57' prior: 50973260!
test01TransferAffectsSourceAndDestinyBalance
	
	| sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self assert: 0 equals: sourceAccount balance.
	self assert: 0 equals: destinyAccount balance.
	
	Transfer from: sourceAccount to: destinyAccount anAmountOf: 100.
	
	self assert: -100 equals: sourceAccount balance.
	self assert: 100 equals: destinyAccount balance.
! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:46:53'!
test02IsPossibleGettingSourceAccountFromTransfer
	
	| sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self assert: 0 equals: sourceAccount balance.
	self assert: 0 equals: destinyAccount balance.
	
	self should: [Transfer from: sourceAccount to: destinyAccount anAmountOf: 0. self fail] 
		raise:  Error
		withMessageText: Transfer canNotTransferAnAmountOfZeroErrorDescription.! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:47:27'!
test02CanNotTransferAnAmountOfZero
	
	| sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self assert: 0 equals: sourceAccount balance.
	self assert: 0 equals: destinyAccount balance.
	
	self should: [Transfer from: sourceAccount to: destinyAccount anAmountOf: 0. self fail] 
		raise:  Error
		withMessageText: Transfer canNotTransferAnAmountOfZeroErrorDescription.! !

!methodRemoval: TransferTest #test02IsPossibleGettingSourceAccountFromTransfer stamp: 'ja 11/14/2020 19:28:07'!
test02IsPossibleGettingSourceAccountFromTransfer
	
	| sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self assert: 0 equals: sourceAccount balance.
	self assert: 0 equals: destinyAccount balance.
	
	self should: [Transfer from: sourceAccount to: destinyAccount anAmountOf: 0. self fail] 
		raise:  Error
		withMessageText: Transfer canNotTransferAnAmountOfZeroErrorDescription.!
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:47:42' prior: 50972838!
canNotTransferAnAmountOfZeroErrorDescription
	self shouldBeImplemented.! !
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:48:16' prior: 50973347!
canNotTransferAnAmountOfZeroErrorDescription
	
	^ 'Can not transfer an amount of zero'! !
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:49:41' prior: 50973217!
from: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer 

	(valueToTransfer = 0) ifTrue: [ self error: self canNotTransferAnAmountOfZeroErrorDescription ].
		
	^ Transfer new initializeFrom: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer .! !

!methodRemoval: TransferTest #test02CanNotTransferAnAmountOfZero stamp: 'ja 11/14/2020 19:28:07'!
test02CanNotTransferAnAmountOfZero
	
	| sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self assert: 0 equals: sourceAccount balance.
	self assert: 0 equals: destinyAccount balance.
	
	self should: [Transfer from: sourceAccount to: destinyAccount anAmountOf: 0. self fail] 
		raise:  Error
		withMessageText: Transfer canNotTransferAnAmountOfZeroErrorDescription.!
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:51:45'!
test03IsPossibleGettingDestinyAccountFromTransfer
	
	| sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self assert: 0 equals: sourceAccount balance.
	self assert: 0 equals: destinyAccount balance.
	
	self should: [Transfer from: sourceAccount to: destinyAccount anAmountOf: 0.] 
		raise: Error
		withMessageText: Transfer canNotTransferAnAmountOfZeroErrorDescription .! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:51:52' prior: 50973387!
test03IsPossibleGettingDestinyAccountFromTransfer
	
	| sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self assert: 0 equals: sourceAccount balance.
	self assert: 0 equals: destinyAccount balance.
	
	self should: [Transfer from: sourceAccount to: destinyAccount anAmountOf: 0. self fail] 
		raise: Error
		withMessageText: Transfer canNotTransferAnAmountOfZeroErrorDescription .! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:51:58' prior: 50973404!
test03IsPossibleGettingDestinyAccountFromTransfer
	
	| sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self should: [Transfer from: sourceAccount to: destinyAccount anAmountOf: 0. self fail] 
		raise: Error
		withMessageText: Transfer canNotTransferAnAmountOfZeroErrorDescription .! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:52:16' prior: 50972922!
test02CanNotTransferAnAmountOfZeroErrorDescription 
	
	| sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self should: [Transfer from: sourceAccount to: destinyAccount anAmountOf: 0. self fail] 
		raise: Error
		withMessageText: Transfer canNotTransferAnAmountOfZeroErrorDescription .! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:53:12' prior: 50972937!
test03CanNotTransferANegativeAmountErrorDescription
	
	| sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self should: [Transfer from: sourceAccount to: destinyAccount anAmountOf: -100. self fail] 
		raise: Error
		withMessageText: Transfer canNotTransferANegativeAmountErrorDescription .! !
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:53:24' prior: 50972958!
canNotTransferANegativeAmountErrorDescription
	self shouldBeImplemented.! !
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:54:04' prior: 50973467!
canNotTransferANegativeAmountErrorDescription
	
	^ ' Can not transfer a negative amount '! !
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:55:01' prior: 50973359!
from: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer 

	(valueToTransfer = 0) ifTrue: [ self error: self canNotTransferAnAmountOfZeroErrorDescription ].
	(valueToTransfer  < 0) ifTrue: [ self error: self canNotTransferANegativeAmountErrorDescription ].
		
	^ Transfer new initializeFrom: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer .! !

!methodRemoval: TransferTest #test03IsPossibleGettingDestinyAccountFromTransfer stamp: 'ja 11/14/2020 19:28:07'!
test03IsPossibleGettingDestinyAccountFromTransfer
	
	| sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self should: [Transfer from: sourceAccount to: destinyAccount anAmountOf: 0. self fail] 
		raise: Error
		withMessageText: Transfer canNotTransferAnAmountOfZeroErrorDescription .!
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 17:03:02' prior: 50972994!
test04TransferIsRegisteredIntoInvolvedAccount
	
	| sourceAccount destinyAccount transfer |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	transfer _ Transfer from: sourceAccount to: destinyAccount anAmountOf: 100.
	
	self assert: sourceAccount transactions includes: transfer depositMade. 
	
	self assert: destinyAccount transactions includes: transfer withdrawMade.
	
	
	! !
!Transfer methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 17:03:36' prior: 50973015!
depositMade
	self shouldBeImplemented.! !
!Transfer methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 17:03:59' prior: 50973525!
depositMade
	
	^ nil! !

!classDefinition: #Transfer category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 19:28:08'!
Object subclass: #Transfer
	instanceVariableNames: 'value depositMade'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #Transfer category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 19:28:08'!
Object subclass: #Transfer
	instanceVariableNames: 'value depositMade withdrawMade'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!
!Transfer methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 17:05:37' prior: 50973249!
initializeFrom: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer 

	depositMade _ TransferDeposit register: valueToTransfer on: aDestinyAccount .
	withdrawMade _ TransferWithdraw register: valueToTransfer on: aSourceAccount .
	
	value _ valueToTransfer .! !

!classDefinition: #TransferType category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 19:28:13'!
AccountTransaction subclass: #TransferType
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #TransferType category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 19:28:13'!
AccountTransaction subclass: #TransferType
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:29:11' prior: 50973278!
test01TransferAffectsSourceAndDestinyBalance
	
	| transfer sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	transfer  _ Transfer from: sourceAccount to: destinyAccount anAmountOf: 100.
	
	self assert: sourceAccount balance 

	
	! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:31:05' prior: 50973577!
test01TransferAffectsSourceAndDestinyBalance
	
	| transfer sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self assert: 0 equals: (sourceAccount balance).
	self assert: 0 equals: (destinyAccount balance).
	
	transfer  _ Transfer from: sourceAccount to: destinyAccount anAmountOf: 100.
	
	self assert: -100 equals: (sourceAccount balance).
	self assert: 100 equals: (destinyAccount balance).
	self assert: 100 equals: transfer value.	
	! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:31:42' prior: 50973590!
test01TransferAffectsSourceAndDestinyBalance
	
	| transfer sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self assert: 0 equals: sourceAccount balance.
	self assert: 0 equals: destinyAccount balance.
	
	transfer  _ Transfer from: sourceAccount to: destinyAccount anAmountOf: 100.
	
	self assert: -100 equals: sourceAccount balance.
	self assert: 100 equals: destinyAccount balance.
	self assert: 100 equals: transfer value.	
	! !
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:31:57' prior: 50973479!
from: aReceptiveAccount to: aReceptiveAccount2 anAmountOf: aSmallInteger 
	self shouldBeImplemented.! !

!classDefinition: 'Transfer class' category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 19:28:13'!
Transfer class
	instanceVariableNames: 'value'!
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:34:30' prior: 50973628!
from: aReceptiveAccount to: aReceptiveAccount2 anAmountOf: aSmallInteger 
	
	Deposit register: aSmallInteger on: aReceptiveAccount2 .
	Withdraw register: aSmallInteger on: aReceptiveAccount .
	value _ aSmallInteger .! !
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:34:50' prior: 50973639!
from: aSourceAccount to: aReceptiveAccount2 anAmountOf: aSmallInteger 
	
	Deposit register: aSmallInteger on: aReceptiveAccount2 .
	Withdraw register: aSmallInteger on: aSourceAccount .
	value _ aSmallInteger .! !
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:35:04' prior: 50973649!
from: aSourceAccount to: aDestinyAccount anAmountOf: aSmallInteger 
	
	Deposit register: aSmallInteger on: aDestinyAccount .
	Withdraw register: aSmallInteger on: aSourceAccount .
	value _ aSmallInteger .! !
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:35:29' prior: 50973659!
from: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer 
	
	Deposit register: valueToTransfer on: aDestinyAccount .
	Withdraw register: valueToTransfer on: aSourceAccount .
	value _ valueToTransfer .! !

!classDefinition: #Transfer category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 19:28:13'!
Object subclass: #Transfer
	instanceVariableNames: 'value'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!
!Transfer methodsFor: 'no messages' stamp: 'ja 11/14/2020 16:36:17' overrides: 16896425!
initialize

	value _ 0! !
!Transfer methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:36:58' prior: 50973176 overrides: 16881508!
value 

	^ value ! !

!methodRemoval: Transfer class #from:to:anAmountOf: stamp: 'ja 11/14/2020 19:28:13'!
from: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer 
	
	Deposit register: valueToTransfer on: aDestinyAccount .
	Withdraw register: valueToTransfer on: aSourceAccount .
	value _ valueToTransfer .!
!Transfer methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:38:06'!
from: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer 
	
	Deposit register: valueToTransfer on: aDestinyAccount .
	Withdraw register: valueToTransfer on: aSourceAccount .
	value _ valueToTransfer .! !

!classDefinition: 'Transfer class' category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 19:28:13'!
Transfer class
	instanceVariableNames: ''!

!classDefinition: 'Transfer class' category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 19:28:13'!
Transfer class
	instanceVariableNames: ''!
!Transfer class methodsFor: 'no messages' stamp: 'ja 11/14/2020 16:40:54'!
from: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer 

	Transfer new initializeFrom: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer .! !
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:41:02' prior: 50973723!
from: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer 

	^ Transfer new initializeFrom: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer .! !
!Transfer methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:41:20' prior: 50973550!
initializeFrom: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer 

	Deposit register: valueToTransfer on: aDestinyAccount .
	Withdraw register: valueToTransfer on: aSourceAccount .
	value _ valueToTransfer .! !

!methodRemoval: Transfer #from:to:anAmountOf: stamp: 'ja 11/14/2020 19:28:13'!
from: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer 
	
	Deposit register: valueToTransfer on: aDestinyAccount .
	Withdraw register: valueToTransfer on: aSourceAccount .
	value _ valueToTransfer .!

!methodRemoval: Transfer #initialize stamp: 'ja 11/14/2020 19:28:13'!
initialize

	value _ 0!
!Transfer methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:42:09' prior: 50973741!
initializeFrom: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer 

	Deposit register: valueToTransfer on: aDestinyAccount .
	Withdraw register: valueToTransfer on: aSourceAccount .
	
	value _ valueToTransfer .! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:42:27' prior: 50973609!
test01TransferAffectsSourceAndDestinyBalance
	
	| transfer sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self assert: 0 equals: sourceAccount balance.
	self assert: 0 equals: destinyAccount balance.
	
	transfer  _ Transfer from: sourceAccount to: destinyAccount anAmountOf: 100.
	
	self assert: -100 equals: sourceAccount balance.
	self assert: 100 equals: destinyAccount balance.
! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:42:57' prior: 50973775!
test01TransferAffectsSourceAndDestinyBalance
	
	| sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self assert: 0 equals: sourceAccount balance.
	self assert: 0 equals: destinyAccount balance.
	
	Transfer from: sourceAccount to: destinyAccount anAmountOf: 100.
	
	self assert: -100 equals: sourceAccount balance.
	self assert: 100 equals: destinyAccount balance.
! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:46:53'!
test02IsPossibleGettingSourceAccountFromTransfer
	
	| sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self assert: 0 equals: sourceAccount balance.
	self assert: 0 equals: destinyAccount balance.
	
	self should: [Transfer from: sourceAccount to: destinyAccount anAmountOf: 0. self fail] 
		raise:  Error
		withMessageText: Transfer canNotTransferAnAmountOfZeroErrorDescription.! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:47:27'!
test02CanNotTransferAnAmountOfZero
	
	| sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self assert: 0 equals: sourceAccount balance.
	self assert: 0 equals: destinyAccount balance.
	
	self should: [Transfer from: sourceAccount to: destinyAccount anAmountOf: 0. self fail] 
		raise:  Error
		withMessageText: Transfer canNotTransferAnAmountOfZeroErrorDescription.! !

!methodRemoval: TransferTest #test02IsPossibleGettingSourceAccountFromTransfer stamp: 'ja 11/14/2020 19:28:13'!
test02IsPossibleGettingSourceAccountFromTransfer
	
	| sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self assert: 0 equals: sourceAccount balance.
	self assert: 0 equals: destinyAccount balance.
	
	self should: [Transfer from: sourceAccount to: destinyAccount anAmountOf: 0. self fail] 
		raise:  Error
		withMessageText: Transfer canNotTransferAnAmountOfZeroErrorDescription.!
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:47:42' prior: 50973353!
canNotTransferAnAmountOfZeroErrorDescription
	self shouldBeImplemented.! !
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:48:16' prior: 50973862!
canNotTransferAnAmountOfZeroErrorDescription
	
	^ 'Can not transfer an amount of zero'! !
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:49:41' prior: 50973732!
from: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer 

	(valueToTransfer = 0) ifTrue: [ self error: self canNotTransferAnAmountOfZeroErrorDescription ].
		
	^ Transfer new initializeFrom: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer .! !

!methodRemoval: TransferTest #test02CanNotTransferAnAmountOfZero stamp: 'ja 11/14/2020 19:28:13'!
test02CanNotTransferAnAmountOfZero
	
	| sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self assert: 0 equals: sourceAccount balance.
	self assert: 0 equals: destinyAccount balance.
	
	self should: [Transfer from: sourceAccount to: destinyAccount anAmountOf: 0. self fail] 
		raise:  Error
		withMessageText: Transfer canNotTransferAnAmountOfZeroErrorDescription.!
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:51:45'!
test03IsPossibleGettingDestinyAccountFromTransfer
	
	| sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self assert: 0 equals: sourceAccount balance.
	self assert: 0 equals: destinyAccount balance.
	
	self should: [Transfer from: sourceAccount to: destinyAccount anAmountOf: 0.] 
		raise: Error
		withMessageText: Transfer canNotTransferAnAmountOfZeroErrorDescription .! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:51:52' prior: 50973902!
test03IsPossibleGettingDestinyAccountFromTransfer
	
	| sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self assert: 0 equals: sourceAccount balance.
	self assert: 0 equals: destinyAccount balance.
	
	self should: [Transfer from: sourceAccount to: destinyAccount anAmountOf: 0. self fail] 
		raise: Error
		withMessageText: Transfer canNotTransferAnAmountOfZeroErrorDescription .! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:51:58' prior: 50973919!
test03IsPossibleGettingDestinyAccountFromTransfer
	
	| sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self should: [Transfer from: sourceAccount to: destinyAccount anAmountOf: 0. self fail] 
		raise: Error
		withMessageText: Transfer canNotTransferAnAmountOfZeroErrorDescription .! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:52:16' prior: 50973437!
test02CanNotTransferAnAmountOfZeroErrorDescription 
	
	| sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self should: [Transfer from: sourceAccount to: destinyAccount anAmountOf: 0. self fail] 
		raise: Error
		withMessageText: Transfer canNotTransferAnAmountOfZeroErrorDescription .! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:53:12' prior: 50973452!
test03CanNotTransferANegativeAmountErrorDescription
	
	| sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self should: [Transfer from: sourceAccount to: destinyAccount anAmountOf: -100. self fail] 
		raise: Error
		withMessageText: Transfer canNotTransferANegativeAmountErrorDescription .! !
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:53:24' prior: 50973473!
canNotTransferANegativeAmountErrorDescription
	self shouldBeImplemented.! !
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:54:04' prior: 50973982!
canNotTransferANegativeAmountErrorDescription
	
	^ ' Can not transfer a negative amount '! !
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:55:01' prior: 50973874!
from: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer 

	(valueToTransfer = 0) ifTrue: [ self error: self canNotTransferAnAmountOfZeroErrorDescription ].
	(valueToTransfer  < 0) ifTrue: [ self error: self canNotTransferANegativeAmountErrorDescription ].
		
	^ Transfer new initializeFrom: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer .! !

!methodRemoval: TransferTest #test03IsPossibleGettingDestinyAccountFromTransfer stamp: 'ja 11/14/2020 19:28:13'!
test03IsPossibleGettingDestinyAccountFromTransfer
	
	| sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self should: [Transfer from: sourceAccount to: destinyAccount anAmountOf: 0. self fail] 
		raise: Error
		withMessageText: Transfer canNotTransferAnAmountOfZeroErrorDescription .!
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 17:03:02' prior: 50973509!
test04TransferIsRegisteredIntoInvolvedAccount
	
	| sourceAccount destinyAccount transfer |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	transfer _ Transfer from: sourceAccount to: destinyAccount anAmountOf: 100.
	
	self assert: sourceAccount transactions includes: transfer depositMade. 
	
	self assert: destinyAccount transactions includes: transfer withdrawMade.
	
	
	! !
!Transfer methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 17:03:36' prior: 50973530!
depositMade
	self shouldBeImplemented.! !
!Transfer methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 17:03:59' prior: 50974040!
depositMade
	
	^ nil! !

!classDefinition: #Transfer category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 19:28:13'!
Object subclass: #Transfer
	instanceVariableNames: 'value depositMade'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #Transfer category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 19:28:14'!
Object subclass: #Transfer
	instanceVariableNames: 'value depositMade withdrawMade'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!
!Transfer methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 17:05:37' prior: 50973764!
initializeFrom: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer 

	depositMade _ TransferDeposit register: valueToTransfer on: aDestinyAccount .
	withdrawMade _ TransferWithdraw register: valueToTransfer on: aSourceAccount .
	
	value _ valueToTransfer .! !
!TransferType methodsFor: 'no messages' stamp: 'ja 11/14/2020 17:06:54' overrides: 50964395!
affectBalance: aBalance

	self subclassResponsibility ! !
!TransferType methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 17:07:07' overrides: 50964391!
value 

	self subclassResponsibility ! !

!classDefinition: #TransferType category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 19:28:17'!
AccountTransaction subclass: #TransferType
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #TransferType category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 19:28:17'!
AccountTransaction subclass: #TransferType
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:29:11' prior: 50973793!
test01TransferAffectsSourceAndDestinyBalance
	
	| transfer sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	transfer  _ Transfer from: sourceAccount to: destinyAccount anAmountOf: 100.
	
	self assert: sourceAccount balance 

	
	! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:31:05' prior: 50974102!
test01TransferAffectsSourceAndDestinyBalance
	
	| transfer sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self assert: 0 equals: (sourceAccount balance).
	self assert: 0 equals: (destinyAccount balance).
	
	transfer  _ Transfer from: sourceAccount to: destinyAccount anAmountOf: 100.
	
	self assert: -100 equals: (sourceAccount balance).
	self assert: 100 equals: (destinyAccount balance).
	self assert: 100 equals: transfer value.	
	! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:31:42' prior: 50974115!
test01TransferAffectsSourceAndDestinyBalance
	
	| transfer sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self assert: 0 equals: sourceAccount balance.
	self assert: 0 equals: destinyAccount balance.
	
	transfer  _ Transfer from: sourceAccount to: destinyAccount anAmountOf: 100.
	
	self assert: -100 equals: sourceAccount balance.
	self assert: 100 equals: destinyAccount balance.
	self assert: 100 equals: transfer value.	
	! !
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:31:57' prior: 50973994!
from: aReceptiveAccount to: aReceptiveAccount2 anAmountOf: aSmallInteger 
	self shouldBeImplemented.! !

!classDefinition: 'Transfer class' category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 19:28:17'!
Transfer class
	instanceVariableNames: 'value'!
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:34:30' prior: 50974153!
from: aReceptiveAccount to: aReceptiveAccount2 anAmountOf: aSmallInteger 
	
	Deposit register: aSmallInteger on: aReceptiveAccount2 .
	Withdraw register: aSmallInteger on: aReceptiveAccount .
	value _ aSmallInteger .! !
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:34:50' prior: 50974164!
from: aSourceAccount to: aReceptiveAccount2 anAmountOf: aSmallInteger 
	
	Deposit register: aSmallInteger on: aReceptiveAccount2 .
	Withdraw register: aSmallInteger on: aSourceAccount .
	value _ aSmallInteger .! !
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:35:04' prior: 50974174!
from: aSourceAccount to: aDestinyAccount anAmountOf: aSmallInteger 
	
	Deposit register: aSmallInteger on: aDestinyAccount .
	Withdraw register: aSmallInteger on: aSourceAccount .
	value _ aSmallInteger .! !
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:35:29' prior: 50974184!
from: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer 
	
	Deposit register: valueToTransfer on: aDestinyAccount .
	Withdraw register: valueToTransfer on: aSourceAccount .
	value _ valueToTransfer .! !

!classDefinition: #Transfer category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 19:28:18'!
Object subclass: #Transfer
	instanceVariableNames: 'value'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!
!Transfer methodsFor: 'no messages' stamp: 'ja 11/14/2020 16:36:17' overrides: 16896425!
initialize

	value _ 0! !
!Transfer methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:36:58' prior: 50973691 overrides: 16881508!
value 

	^ value ! !

!methodRemoval: Transfer class #from:to:anAmountOf: stamp: 'ja 11/14/2020 19:28:18'!
from: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer 
	
	Deposit register: valueToTransfer on: aDestinyAccount .
	Withdraw register: valueToTransfer on: aSourceAccount .
	value _ valueToTransfer .!
!Transfer methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:38:06'!
from: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer 
	
	Deposit register: valueToTransfer on: aDestinyAccount .
	Withdraw register: valueToTransfer on: aSourceAccount .
	value _ valueToTransfer .! !

!classDefinition: 'Transfer class' category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 19:28:18'!
Transfer class
	instanceVariableNames: ''!

!classDefinition: 'Transfer class' category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 19:28:18'!
Transfer class
	instanceVariableNames: ''!
!Transfer class methodsFor: 'no messages' stamp: 'ja 11/14/2020 16:40:54'!
from: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer 

	Transfer new initializeFrom: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer .! !
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:41:02' prior: 50974248!
from: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer 

	^ Transfer new initializeFrom: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer .! !
!Transfer methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:41:20' prior: 50974065!
initializeFrom: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer 

	Deposit register: valueToTransfer on: aDestinyAccount .
	Withdraw register: valueToTransfer on: aSourceAccount .
	value _ valueToTransfer .! !

!methodRemoval: Transfer #from:to:anAmountOf: stamp: 'ja 11/14/2020 19:28:18'!
from: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer 
	
	Deposit register: valueToTransfer on: aDestinyAccount .
	Withdraw register: valueToTransfer on: aSourceAccount .
	value _ valueToTransfer .!

!methodRemoval: Transfer #initialize stamp: 'ja 11/14/2020 19:28:18'!
initialize

	value _ 0!
!Transfer methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:42:09' prior: 50974266!
initializeFrom: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer 

	Deposit register: valueToTransfer on: aDestinyAccount .
	Withdraw register: valueToTransfer on: aSourceAccount .
	
	value _ valueToTransfer .! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:42:27' prior: 50974134!
test01TransferAffectsSourceAndDestinyBalance
	
	| transfer sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self assert: 0 equals: sourceAccount balance.
	self assert: 0 equals: destinyAccount balance.
	
	transfer  _ Transfer from: sourceAccount to: destinyAccount anAmountOf: 100.
	
	self assert: -100 equals: sourceAccount balance.
	self assert: 100 equals: destinyAccount balance.
! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:42:57' prior: 50974300!
test01TransferAffectsSourceAndDestinyBalance
	
	| sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self assert: 0 equals: sourceAccount balance.
	self assert: 0 equals: destinyAccount balance.
	
	Transfer from: sourceAccount to: destinyAccount anAmountOf: 100.
	
	self assert: -100 equals: sourceAccount balance.
	self assert: 100 equals: destinyAccount balance.
! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:46:53'!
test02IsPossibleGettingSourceAccountFromTransfer
	
	| sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self assert: 0 equals: sourceAccount balance.
	self assert: 0 equals: destinyAccount balance.
	
	self should: [Transfer from: sourceAccount to: destinyAccount anAmountOf: 0. self fail] 
		raise:  Error
		withMessageText: Transfer canNotTransferAnAmountOfZeroErrorDescription.! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:47:27'!
test02CanNotTransferAnAmountOfZero
	
	| sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self assert: 0 equals: sourceAccount balance.
	self assert: 0 equals: destinyAccount balance.
	
	self should: [Transfer from: sourceAccount to: destinyAccount anAmountOf: 0. self fail] 
		raise:  Error
		withMessageText: Transfer canNotTransferAnAmountOfZeroErrorDescription.! !

!methodRemoval: TransferTest #test02IsPossibleGettingSourceAccountFromTransfer stamp: 'ja 11/14/2020 19:28:18'!
test02IsPossibleGettingSourceAccountFromTransfer
	
	| sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self assert: 0 equals: sourceAccount balance.
	self assert: 0 equals: destinyAccount balance.
	
	self should: [Transfer from: sourceAccount to: destinyAccount anAmountOf: 0. self fail] 
		raise:  Error
		withMessageText: Transfer canNotTransferAnAmountOfZeroErrorDescription.!
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:47:42' prior: 50973868!
canNotTransferAnAmountOfZeroErrorDescription
	self shouldBeImplemented.! !
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:48:16' prior: 50974387!
canNotTransferAnAmountOfZeroErrorDescription
	
	^ 'Can not transfer an amount of zero'! !
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:49:41' prior: 50974257!
from: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer 

	(valueToTransfer = 0) ifTrue: [ self error: self canNotTransferAnAmountOfZeroErrorDescription ].
		
	^ Transfer new initializeFrom: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer .! !

!methodRemoval: TransferTest #test02CanNotTransferAnAmountOfZero stamp: 'ja 11/14/2020 19:28:18'!
test02CanNotTransferAnAmountOfZero
	
	| sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self assert: 0 equals: sourceAccount balance.
	self assert: 0 equals: destinyAccount balance.
	
	self should: [Transfer from: sourceAccount to: destinyAccount anAmountOf: 0. self fail] 
		raise:  Error
		withMessageText: Transfer canNotTransferAnAmountOfZeroErrorDescription.!
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:51:45'!
test03IsPossibleGettingDestinyAccountFromTransfer
	
	| sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self assert: 0 equals: sourceAccount balance.
	self assert: 0 equals: destinyAccount balance.
	
	self should: [Transfer from: sourceAccount to: destinyAccount anAmountOf: 0.] 
		raise: Error
		withMessageText: Transfer canNotTransferAnAmountOfZeroErrorDescription .! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:51:52' prior: 50974427!
test03IsPossibleGettingDestinyAccountFromTransfer
	
	| sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self assert: 0 equals: sourceAccount balance.
	self assert: 0 equals: destinyAccount balance.
	
	self should: [Transfer from: sourceAccount to: destinyAccount anAmountOf: 0. self fail] 
		raise: Error
		withMessageText: Transfer canNotTransferAnAmountOfZeroErrorDescription .! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:51:58' prior: 50974444!
test03IsPossibleGettingDestinyAccountFromTransfer
	
	| sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self should: [Transfer from: sourceAccount to: destinyAccount anAmountOf: 0. self fail] 
		raise: Error
		withMessageText: Transfer canNotTransferAnAmountOfZeroErrorDescription .! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:52:16' prior: 50973952!
test02CanNotTransferAnAmountOfZeroErrorDescription 
	
	| sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self should: [Transfer from: sourceAccount to: destinyAccount anAmountOf: 0. self fail] 
		raise: Error
		withMessageText: Transfer canNotTransferAnAmountOfZeroErrorDescription .! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:53:12' prior: 50973967!
test03CanNotTransferANegativeAmountErrorDescription
	
	| sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self should: [Transfer from: sourceAccount to: destinyAccount anAmountOf: -100. self fail] 
		raise: Error
		withMessageText: Transfer canNotTransferANegativeAmountErrorDescription .! !
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:53:24' prior: 50973988!
canNotTransferANegativeAmountErrorDescription
	self shouldBeImplemented.! !
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:54:04' prior: 50974507!
canNotTransferANegativeAmountErrorDescription
	
	^ ' Can not transfer a negative amount '! !
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:55:01' prior: 50974399!
from: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer 

	(valueToTransfer = 0) ifTrue: [ self error: self canNotTransferAnAmountOfZeroErrorDescription ].
	(valueToTransfer  < 0) ifTrue: [ self error: self canNotTransferANegativeAmountErrorDescription ].
		
	^ Transfer new initializeFrom: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer .! !

!methodRemoval: TransferTest #test03IsPossibleGettingDestinyAccountFromTransfer stamp: 'ja 11/14/2020 19:28:18'!
test03IsPossibleGettingDestinyAccountFromTransfer
	
	| sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self should: [Transfer from: sourceAccount to: destinyAccount anAmountOf: 0. self fail] 
		raise: Error
		withMessageText: Transfer canNotTransferAnAmountOfZeroErrorDescription .!
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 17:03:02' prior: 50974024!
test04TransferIsRegisteredIntoInvolvedAccount
	
	| sourceAccount destinyAccount transfer |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	transfer _ Transfer from: sourceAccount to: destinyAccount anAmountOf: 100.
	
	self assert: sourceAccount transactions includes: transfer depositMade. 
	
	self assert: destinyAccount transactions includes: transfer withdrawMade.
	
	
	! !
!Transfer methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 17:03:36' prior: 50974045!
depositMade
	self shouldBeImplemented.! !
!Transfer methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 17:03:59' prior: 50974565!
depositMade
	
	^ nil! !

!classDefinition: #Transfer category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 19:28:18'!
Object subclass: #Transfer
	instanceVariableNames: 'value depositMade'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #Transfer category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 19:28:18'!
Object subclass: #Transfer
	instanceVariableNames: 'value depositMade withdrawMade'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!
!Transfer methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 17:05:37' prior: 50974289!
initializeFrom: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer 

	depositMade _ TransferDeposit register: valueToTransfer on: aDestinyAccount .
	withdrawMade _ TransferWithdraw register: valueToTransfer on: aSourceAccount .
	
	value _ valueToTransfer .! !
!TransferType methodsFor: 'no messages' stamp: 'ja 11/14/2020 17:06:54' prior: 50974077 overrides: 50964395!
affectBalance: aBalance

	self subclassResponsibility ! !
!TransferType methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 17:07:07' prior: 50974082 overrides: 50964391!
value 

	self subclassResponsibility ! !

!classDefinition: #TransferType category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 19:28:20'!
AccountTransaction subclass: #TransferType
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #TransferType category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 19:28:20'!
AccountTransaction subclass: #TransferType
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:29:11' prior: 50974318!
test01TransferAffectsSourceAndDestinyBalance
	
	| transfer sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	transfer  _ Transfer from: sourceAccount to: destinyAccount anAmountOf: 100.
	
	self assert: sourceAccount balance 

	
	! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:31:05' prior: 50974628!
test01TransferAffectsSourceAndDestinyBalance
	
	| transfer sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self assert: 0 equals: (sourceAccount balance).
	self assert: 0 equals: (destinyAccount balance).
	
	transfer  _ Transfer from: sourceAccount to: destinyAccount anAmountOf: 100.
	
	self assert: -100 equals: (sourceAccount balance).
	self assert: 100 equals: (destinyAccount balance).
	self assert: 100 equals: transfer value.	
	! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:31:42' prior: 50974641!
test01TransferAffectsSourceAndDestinyBalance
	
	| transfer sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self assert: 0 equals: sourceAccount balance.
	self assert: 0 equals: destinyAccount balance.
	
	transfer  _ Transfer from: sourceAccount to: destinyAccount anAmountOf: 100.
	
	self assert: -100 equals: sourceAccount balance.
	self assert: 100 equals: destinyAccount balance.
	self assert: 100 equals: transfer value.	
	! !
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:31:57' prior: 50974519!
from: aReceptiveAccount to: aReceptiveAccount2 anAmountOf: aSmallInteger 
	self shouldBeImplemented.! !

!classDefinition: 'Transfer class' category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 19:28:20'!
Transfer class
	instanceVariableNames: 'value'!
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:34:30' prior: 50974679!
from: aReceptiveAccount to: aReceptiveAccount2 anAmountOf: aSmallInteger 
	
	Deposit register: aSmallInteger on: aReceptiveAccount2 .
	Withdraw register: aSmallInteger on: aReceptiveAccount .
	value _ aSmallInteger .! !
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:34:50' prior: 50974690!
from: aSourceAccount to: aReceptiveAccount2 anAmountOf: aSmallInteger 
	
	Deposit register: aSmallInteger on: aReceptiveAccount2 .
	Withdraw register: aSmallInteger on: aSourceAccount .
	value _ aSmallInteger .! !
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:35:04' prior: 50974700!
from: aSourceAccount to: aDestinyAccount anAmountOf: aSmallInteger 
	
	Deposit register: aSmallInteger on: aDestinyAccount .
	Withdraw register: aSmallInteger on: aSourceAccount .
	value _ aSmallInteger .! !
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:35:29' prior: 50974710!
from: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer 
	
	Deposit register: valueToTransfer on: aDestinyAccount .
	Withdraw register: valueToTransfer on: aSourceAccount .
	value _ valueToTransfer .! !

!classDefinition: #Transfer category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 19:28:20'!
Object subclass: #Transfer
	instanceVariableNames: 'value'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!
!Transfer methodsFor: 'no messages' stamp: 'ja 11/14/2020 16:36:17' overrides: 16896425!
initialize

	value _ 0! !
!Transfer methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:36:58' prior: 50974216 overrides: 16881508!
value 

	^ value ! !

!methodRemoval: Transfer class #from:to:anAmountOf: stamp: 'ja 11/14/2020 19:28:20'!
from: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer 
	
	Deposit register: valueToTransfer on: aDestinyAccount .
	Withdraw register: valueToTransfer on: aSourceAccount .
	value _ valueToTransfer .!
!Transfer methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:38:06'!
from: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer 
	
	Deposit register: valueToTransfer on: aDestinyAccount .
	Withdraw register: valueToTransfer on: aSourceAccount .
	value _ valueToTransfer .! !

!classDefinition: 'Transfer class' category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 19:28:20'!
Transfer class
	instanceVariableNames: ''!

!classDefinition: 'Transfer class' category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 19:28:20'!
Transfer class
	instanceVariableNames: ''!
!Transfer class methodsFor: 'no messages' stamp: 'ja 11/14/2020 16:40:54'!
from: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer 

	Transfer new initializeFrom: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer .! !
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:41:02' prior: 50974774!
from: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer 

	^ Transfer new initializeFrom: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer .! !
!Transfer methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:41:20' prior: 50974590!
initializeFrom: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer 

	Deposit register: valueToTransfer on: aDestinyAccount .
	Withdraw register: valueToTransfer on: aSourceAccount .
	value _ valueToTransfer .! !

!methodRemoval: Transfer #from:to:anAmountOf: stamp: 'ja 11/14/2020 19:28:20'!
from: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer 
	
	Deposit register: valueToTransfer on: aDestinyAccount .
	Withdraw register: valueToTransfer on: aSourceAccount .
	value _ valueToTransfer .!

!methodRemoval: Transfer #initialize stamp: 'ja 11/14/2020 19:28:20'!
initialize

	value _ 0!
!Transfer methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:42:09' prior: 50974792!
initializeFrom: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer 

	Deposit register: valueToTransfer on: aDestinyAccount .
	Withdraw register: valueToTransfer on: aSourceAccount .
	
	value _ valueToTransfer .! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:42:27' prior: 50974660!
test01TransferAffectsSourceAndDestinyBalance
	
	| transfer sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self assert: 0 equals: sourceAccount balance.
	self assert: 0 equals: destinyAccount balance.
	
	transfer  _ Transfer from: sourceAccount to: destinyAccount anAmountOf: 100.
	
	self assert: -100 equals: sourceAccount balance.
	self assert: 100 equals: destinyAccount balance.
! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:42:57' prior: 50974826!
test01TransferAffectsSourceAndDestinyBalance
	
	| sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self assert: 0 equals: sourceAccount balance.
	self assert: 0 equals: destinyAccount balance.
	
	Transfer from: sourceAccount to: destinyAccount anAmountOf: 100.
	
	self assert: -100 equals: sourceAccount balance.
	self assert: 100 equals: destinyAccount balance.
! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:46:53'!
test02IsPossibleGettingSourceAccountFromTransfer
	
	| sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self assert: 0 equals: sourceAccount balance.
	self assert: 0 equals: destinyAccount balance.
	
	self should: [Transfer from: sourceAccount to: destinyAccount anAmountOf: 0. self fail] 
		raise:  Error
		withMessageText: Transfer canNotTransferAnAmountOfZeroErrorDescription.! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:47:27'!
test02CanNotTransferAnAmountOfZero
	
	| sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self assert: 0 equals: sourceAccount balance.
	self assert: 0 equals: destinyAccount balance.
	
	self should: [Transfer from: sourceAccount to: destinyAccount anAmountOf: 0. self fail] 
		raise:  Error
		withMessageText: Transfer canNotTransferAnAmountOfZeroErrorDescription.! !

!methodRemoval: TransferTest #test02IsPossibleGettingSourceAccountFromTransfer stamp: 'ja 11/14/2020 19:28:21'!
test02IsPossibleGettingSourceAccountFromTransfer
	
	| sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self assert: 0 equals: sourceAccount balance.
	self assert: 0 equals: destinyAccount balance.
	
	self should: [Transfer from: sourceAccount to: destinyAccount anAmountOf: 0. self fail] 
		raise:  Error
		withMessageText: Transfer canNotTransferAnAmountOfZeroErrorDescription.!
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:47:42' prior: 50974393!
canNotTransferAnAmountOfZeroErrorDescription
	self shouldBeImplemented.! !
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:48:16' prior: 50974913!
canNotTransferAnAmountOfZeroErrorDescription
	
	^ 'Can not transfer an amount of zero'! !
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:49:41' prior: 50974783!
from: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer 

	(valueToTransfer = 0) ifTrue: [ self error: self canNotTransferAnAmountOfZeroErrorDescription ].
		
	^ Transfer new initializeFrom: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer .! !

!methodRemoval: TransferTest #test02CanNotTransferAnAmountOfZero stamp: 'ja 11/14/2020 19:28:21'!
test02CanNotTransferAnAmountOfZero
	
	| sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self assert: 0 equals: sourceAccount balance.
	self assert: 0 equals: destinyAccount balance.
	
	self should: [Transfer from: sourceAccount to: destinyAccount anAmountOf: 0. self fail] 
		raise:  Error
		withMessageText: Transfer canNotTransferAnAmountOfZeroErrorDescription.!
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:51:45'!
test03IsPossibleGettingDestinyAccountFromTransfer
	
	| sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self assert: 0 equals: sourceAccount balance.
	self assert: 0 equals: destinyAccount balance.
	
	self should: [Transfer from: sourceAccount to: destinyAccount anAmountOf: 0.] 
		raise: Error
		withMessageText: Transfer canNotTransferAnAmountOfZeroErrorDescription .! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:51:52' prior: 50974953!
test03IsPossibleGettingDestinyAccountFromTransfer
	
	| sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self assert: 0 equals: sourceAccount balance.
	self assert: 0 equals: destinyAccount balance.
	
	self should: [Transfer from: sourceAccount to: destinyAccount anAmountOf: 0. self fail] 
		raise: Error
		withMessageText: Transfer canNotTransferAnAmountOfZeroErrorDescription .! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:51:58' prior: 50974970!
test03IsPossibleGettingDestinyAccountFromTransfer
	
	| sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self should: [Transfer from: sourceAccount to: destinyAccount anAmountOf: 0. self fail] 
		raise: Error
		withMessageText: Transfer canNotTransferAnAmountOfZeroErrorDescription .! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:52:16' prior: 50974477!
test02CanNotTransferAnAmountOfZeroErrorDescription 
	
	| sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self should: [Transfer from: sourceAccount to: destinyAccount anAmountOf: 0. self fail] 
		raise: Error
		withMessageText: Transfer canNotTransferAnAmountOfZeroErrorDescription .! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:53:12' prior: 50974492!
test03CanNotTransferANegativeAmountErrorDescription
	
	| sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self should: [Transfer from: sourceAccount to: destinyAccount anAmountOf: -100. self fail] 
		raise: Error
		withMessageText: Transfer canNotTransferANegativeAmountErrorDescription .! !
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:53:24' prior: 50974513!
canNotTransferANegativeAmountErrorDescription
	self shouldBeImplemented.! !
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:54:04' prior: 50975033!
canNotTransferANegativeAmountErrorDescription
	
	^ ' Can not transfer a negative amount '! !
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:55:01' prior: 50974925!
from: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer 

	(valueToTransfer = 0) ifTrue: [ self error: self canNotTransferAnAmountOfZeroErrorDescription ].
	(valueToTransfer  < 0) ifTrue: [ self error: self canNotTransferANegativeAmountErrorDescription ].
		
	^ Transfer new initializeFrom: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer .! !

!methodRemoval: TransferTest #test03IsPossibleGettingDestinyAccountFromTransfer stamp: 'ja 11/14/2020 19:28:21'!
test03IsPossibleGettingDestinyAccountFromTransfer
	
	| sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self should: [Transfer from: sourceAccount to: destinyAccount anAmountOf: 0. self fail] 
		raise: Error
		withMessageText: Transfer canNotTransferAnAmountOfZeroErrorDescription .!
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 17:03:02' prior: 50974549!
test04TransferIsRegisteredIntoInvolvedAccount
	
	| sourceAccount destinyAccount transfer |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	transfer _ Transfer from: sourceAccount to: destinyAccount anAmountOf: 100.
	
	self assert: sourceAccount transactions includes: transfer depositMade. 
	
	self assert: destinyAccount transactions includes: transfer withdrawMade.
	
	
	! !
!Transfer methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 17:03:36' prior: 50974570!
depositMade
	self shouldBeImplemented.! !
!Transfer methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 17:03:59' prior: 50975091!
depositMade
	
	^ nil! !

!classDefinition: #Transfer category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 19:28:21'!
Object subclass: #Transfer
	instanceVariableNames: 'value depositMade'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #Transfer category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 19:28:21'!
Object subclass: #Transfer
	instanceVariableNames: 'value depositMade withdrawMade'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!
!Transfer methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 17:05:37' prior: 50974815!
initializeFrom: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer 

	depositMade _ TransferDeposit register: valueToTransfer on: aDestinyAccount .
	withdrawMade _ TransferWithdraw register: valueToTransfer on: aSourceAccount .
	
	value _ valueToTransfer .! !
!TransferType methodsFor: 'no messages' stamp: 'ja 11/14/2020 17:06:54' prior: 50974602 overrides: 50964395!
affectBalance: aBalance

	self subclassResponsibility ! !
!TransferType methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 17:07:07' prior: 50974608 overrides: 50964391!
value 

	self subclassResponsibility ! !

!classDefinition: #TransferType category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 19:28:22'!
AccountTransaction subclass: #TransferType
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #TransferType category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 19:28:22'!
AccountTransaction subclass: #TransferType
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:29:11' prior: 50974844!
test01TransferAffectsSourceAndDestinyBalance
	
	| transfer sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	transfer  _ Transfer from: sourceAccount to: destinyAccount anAmountOf: 100.
	
	self assert: sourceAccount balance 

	
	! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:31:05' prior: 50975154!
test01TransferAffectsSourceAndDestinyBalance
	
	| transfer sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self assert: 0 equals: (sourceAccount balance).
	self assert: 0 equals: (destinyAccount balance).
	
	transfer  _ Transfer from: sourceAccount to: destinyAccount anAmountOf: 100.
	
	self assert: -100 equals: (sourceAccount balance).
	self assert: 100 equals: (destinyAccount balance).
	self assert: 100 equals: transfer value.	
	! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:31:42' prior: 50975167!
test01TransferAffectsSourceAndDestinyBalance
	
	| transfer sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self assert: 0 equals: sourceAccount balance.
	self assert: 0 equals: destinyAccount balance.
	
	transfer  _ Transfer from: sourceAccount to: destinyAccount anAmountOf: 100.
	
	self assert: -100 equals: sourceAccount balance.
	self assert: 100 equals: destinyAccount balance.
	self assert: 100 equals: transfer value.	
	! !
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:31:57' prior: 50975045!
from: aReceptiveAccount to: aReceptiveAccount2 anAmountOf: aSmallInteger 
	self shouldBeImplemented.! !

!classDefinition: 'Transfer class' category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 19:28:22'!
Transfer class
	instanceVariableNames: 'value'!
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:34:30' prior: 50975205!
from: aReceptiveAccount to: aReceptiveAccount2 anAmountOf: aSmallInteger 
	
	Deposit register: aSmallInteger on: aReceptiveAccount2 .
	Withdraw register: aSmallInteger on: aReceptiveAccount .
	value _ aSmallInteger .! !
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:34:50' prior: 50975216!
from: aSourceAccount to: aReceptiveAccount2 anAmountOf: aSmallInteger 
	
	Deposit register: aSmallInteger on: aReceptiveAccount2 .
	Withdraw register: aSmallInteger on: aSourceAccount .
	value _ aSmallInteger .! !
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:35:04' prior: 50975226!
from: aSourceAccount to: aDestinyAccount anAmountOf: aSmallInteger 
	
	Deposit register: aSmallInteger on: aDestinyAccount .
	Withdraw register: aSmallInteger on: aSourceAccount .
	value _ aSmallInteger .! !
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:35:29' prior: 50975236!
from: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer 
	
	Deposit register: valueToTransfer on: aDestinyAccount .
	Withdraw register: valueToTransfer on: aSourceAccount .
	value _ valueToTransfer .! !

!classDefinition: #Transfer category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 19:28:23'!
Object subclass: #Transfer
	instanceVariableNames: 'value'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!
!Transfer methodsFor: 'no messages' stamp: 'ja 11/14/2020 16:36:17' overrides: 16896425!
initialize

	value _ 0! !
!Transfer methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:36:58' prior: 50974742 overrides: 16881508!
value 

	^ value ! !

!methodRemoval: Transfer class #from:to:anAmountOf: stamp: 'ja 11/14/2020 19:28:23'!
from: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer 
	
	Deposit register: valueToTransfer on: aDestinyAccount .
	Withdraw register: valueToTransfer on: aSourceAccount .
	value _ valueToTransfer .!
!Transfer methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:38:06'!
from: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer 
	
	Deposit register: valueToTransfer on: aDestinyAccount .
	Withdraw register: valueToTransfer on: aSourceAccount .
	value _ valueToTransfer .! !

!classDefinition: 'Transfer class' category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 19:28:23'!
Transfer class
	instanceVariableNames: ''!

!classDefinition: 'Transfer class' category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 19:28:23'!
Transfer class
	instanceVariableNames: ''!
!Transfer class methodsFor: 'no messages' stamp: 'ja 11/14/2020 16:40:54'!
from: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer 

	Transfer new initializeFrom: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer .! !
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:41:02' prior: 50975300!
from: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer 

	^ Transfer new initializeFrom: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer .! !
!Transfer methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:41:20' prior: 50975116!
initializeFrom: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer 

	Deposit register: valueToTransfer on: aDestinyAccount .
	Withdraw register: valueToTransfer on: aSourceAccount .
	value _ valueToTransfer .! !

!methodRemoval: Transfer #from:to:anAmountOf: stamp: 'ja 11/14/2020 19:28:23'!
from: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer 
	
	Deposit register: valueToTransfer on: aDestinyAccount .
	Withdraw register: valueToTransfer on: aSourceAccount .
	value _ valueToTransfer .!

!methodRemoval: Transfer #initialize stamp: 'ja 11/14/2020 19:28:23'!
initialize

	value _ 0!
!Transfer methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:42:09' prior: 50975318!
initializeFrom: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer 

	Deposit register: valueToTransfer on: aDestinyAccount .
	Withdraw register: valueToTransfer on: aSourceAccount .
	
	value _ valueToTransfer .! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:42:27' prior: 50975186!
test01TransferAffectsSourceAndDestinyBalance
	
	| transfer sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self assert: 0 equals: sourceAccount balance.
	self assert: 0 equals: destinyAccount balance.
	
	transfer  _ Transfer from: sourceAccount to: destinyAccount anAmountOf: 100.
	
	self assert: -100 equals: sourceAccount balance.
	self assert: 100 equals: destinyAccount balance.
! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:42:57' prior: 50975352!
test01TransferAffectsSourceAndDestinyBalance
	
	| sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self assert: 0 equals: sourceAccount balance.
	self assert: 0 equals: destinyAccount balance.
	
	Transfer from: sourceAccount to: destinyAccount anAmountOf: 100.
	
	self assert: -100 equals: sourceAccount balance.
	self assert: 100 equals: destinyAccount balance.
! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:46:53'!
test02IsPossibleGettingSourceAccountFromTransfer
	
	| sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self assert: 0 equals: sourceAccount balance.
	self assert: 0 equals: destinyAccount balance.
	
	self should: [Transfer from: sourceAccount to: destinyAccount anAmountOf: 0. self fail] 
		raise:  Error
		withMessageText: Transfer canNotTransferAnAmountOfZeroErrorDescription.! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:47:27'!
test02CanNotTransferAnAmountOfZero
	
	| sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self assert: 0 equals: sourceAccount balance.
	self assert: 0 equals: destinyAccount balance.
	
	self should: [Transfer from: sourceAccount to: destinyAccount anAmountOf: 0. self fail] 
		raise:  Error
		withMessageText: Transfer canNotTransferAnAmountOfZeroErrorDescription.! !

!methodRemoval: TransferTest #test02IsPossibleGettingSourceAccountFromTransfer stamp: 'ja 11/14/2020 19:28:23'!
test02IsPossibleGettingSourceAccountFromTransfer
	
	| sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self assert: 0 equals: sourceAccount balance.
	self assert: 0 equals: destinyAccount balance.
	
	self should: [Transfer from: sourceAccount to: destinyAccount anAmountOf: 0. self fail] 
		raise:  Error
		withMessageText: Transfer canNotTransferAnAmountOfZeroErrorDescription.!
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:47:42' prior: 50974919!
canNotTransferAnAmountOfZeroErrorDescription
	self shouldBeImplemented.! !
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:48:16' prior: 50975439!
canNotTransferAnAmountOfZeroErrorDescription
	
	^ 'Can not transfer an amount of zero'! !
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:49:41' prior: 50975309!
from: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer 

	(valueToTransfer = 0) ifTrue: [ self error: self canNotTransferAnAmountOfZeroErrorDescription ].
		
	^ Transfer new initializeFrom: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer .! !

!methodRemoval: TransferTest #test02CanNotTransferAnAmountOfZero stamp: 'ja 11/14/2020 19:28:23'!
test02CanNotTransferAnAmountOfZero
	
	| sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self assert: 0 equals: sourceAccount balance.
	self assert: 0 equals: destinyAccount balance.
	
	self should: [Transfer from: sourceAccount to: destinyAccount anAmountOf: 0. self fail] 
		raise:  Error
		withMessageText: Transfer canNotTransferAnAmountOfZeroErrorDescription.!
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:51:45'!
test03IsPossibleGettingDestinyAccountFromTransfer
	
	| sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self assert: 0 equals: sourceAccount balance.
	self assert: 0 equals: destinyAccount balance.
	
	self should: [Transfer from: sourceAccount to: destinyAccount anAmountOf: 0.] 
		raise: Error
		withMessageText: Transfer canNotTransferAnAmountOfZeroErrorDescription .! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:51:52' prior: 50975479!
test03IsPossibleGettingDestinyAccountFromTransfer
	
	| sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self assert: 0 equals: sourceAccount balance.
	self assert: 0 equals: destinyAccount balance.
	
	self should: [Transfer from: sourceAccount to: destinyAccount anAmountOf: 0. self fail] 
		raise: Error
		withMessageText: Transfer canNotTransferAnAmountOfZeroErrorDescription .! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:51:58' prior: 50975496!
test03IsPossibleGettingDestinyAccountFromTransfer
	
	| sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self should: [Transfer from: sourceAccount to: destinyAccount anAmountOf: 0. self fail] 
		raise: Error
		withMessageText: Transfer canNotTransferAnAmountOfZeroErrorDescription .! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:52:16' prior: 50975003!
test02CanNotTransferAnAmountOfZeroErrorDescription 
	
	| sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self should: [Transfer from: sourceAccount to: destinyAccount anAmountOf: 0. self fail] 
		raise: Error
		withMessageText: Transfer canNotTransferAnAmountOfZeroErrorDescription .! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:53:12' prior: 50975018!
test03CanNotTransferANegativeAmountErrorDescription
	
	| sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self should: [Transfer from: sourceAccount to: destinyAccount anAmountOf: -100. self fail] 
		raise: Error
		withMessageText: Transfer canNotTransferANegativeAmountErrorDescription .! !
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:53:24' prior: 50975039!
canNotTransferANegativeAmountErrorDescription
	self shouldBeImplemented.! !
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:54:04' prior: 50975559!
canNotTransferANegativeAmountErrorDescription
	
	^ ' Can not transfer a negative amount '! !
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:55:01' prior: 50975451!
from: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer 

	(valueToTransfer = 0) ifTrue: [ self error: self canNotTransferAnAmountOfZeroErrorDescription ].
	(valueToTransfer  < 0) ifTrue: [ self error: self canNotTransferANegativeAmountErrorDescription ].
		
	^ Transfer new initializeFrom: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer .! !

!methodRemoval: TransferTest #test03IsPossibleGettingDestinyAccountFromTransfer stamp: 'ja 11/14/2020 19:28:23'!
test03IsPossibleGettingDestinyAccountFromTransfer
	
	| sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self should: [Transfer from: sourceAccount to: destinyAccount anAmountOf: 0. self fail] 
		raise: Error
		withMessageText: Transfer canNotTransferAnAmountOfZeroErrorDescription .!
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 17:03:02' prior: 50975075!
test04TransferIsRegisteredIntoInvolvedAccount
	
	| sourceAccount destinyAccount transfer |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	transfer _ Transfer from: sourceAccount to: destinyAccount anAmountOf: 100.
	
	self assert: sourceAccount transactions includes: transfer depositMade. 
	
	self assert: destinyAccount transactions includes: transfer withdrawMade.
	
	
	! !
!Transfer methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 17:03:36' prior: 50975096!
depositMade
	self shouldBeImplemented.! !
!Transfer methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 17:03:59' prior: 50975617!
depositMade
	
	^ nil! !

!classDefinition: #Transfer category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 19:28:23'!
Object subclass: #Transfer
	instanceVariableNames: 'value depositMade'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #Transfer category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 19:28:23'!
Object subclass: #Transfer
	instanceVariableNames: 'value depositMade withdrawMade'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!
!Transfer methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 17:05:37' prior: 50975341!
initializeFrom: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer 

	depositMade _ TransferDeposit register: valueToTransfer on: aDestinyAccount .
	withdrawMade _ TransferWithdraw register: valueToTransfer on: aSourceAccount .
	
	value _ valueToTransfer .! !
!TransferType methodsFor: 'no messages' stamp: 'ja 11/14/2020 17:06:54' prior: 50975128 overrides: 50964395!
affectBalance: aBalance

	self subclassResponsibility ! !
!TransferType methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 17:07:07' prior: 50975134 overrides: 50964391!
value 

	self subclassResponsibility ! !

!classDefinition: #TransferType category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 19:28:25'!
AccountTransaction subclass: #TransferType
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #TransferType category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 19:28:25'!
AccountTransaction subclass: #TransferType
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:29:11' prior: 50975370!
test01TransferAffectsSourceAndDestinyBalance
	
	| transfer sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	transfer  _ Transfer from: sourceAccount to: destinyAccount anAmountOf: 100.
	
	self assert: sourceAccount balance 

	
	! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:31:05' prior: 50975680!
test01TransferAffectsSourceAndDestinyBalance
	
	| transfer sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self assert: 0 equals: (sourceAccount balance).
	self assert: 0 equals: (destinyAccount balance).
	
	transfer  _ Transfer from: sourceAccount to: destinyAccount anAmountOf: 100.
	
	self assert: -100 equals: (sourceAccount balance).
	self assert: 100 equals: (destinyAccount balance).
	self assert: 100 equals: transfer value.	
	! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:31:42' prior: 50975693!
test01TransferAffectsSourceAndDestinyBalance
	
	| transfer sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self assert: 0 equals: sourceAccount balance.
	self assert: 0 equals: destinyAccount balance.
	
	transfer  _ Transfer from: sourceAccount to: destinyAccount anAmountOf: 100.
	
	self assert: -100 equals: sourceAccount balance.
	self assert: 100 equals: destinyAccount balance.
	self assert: 100 equals: transfer value.	
	! !
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:31:57' prior: 50975571!
from: aReceptiveAccount to: aReceptiveAccount2 anAmountOf: aSmallInteger 
	self shouldBeImplemented.! !

!classDefinition: 'Transfer class' category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 19:28:25'!
Transfer class
	instanceVariableNames: 'value'!
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:34:30' prior: 50975731!
from: aReceptiveAccount to: aReceptiveAccount2 anAmountOf: aSmallInteger 
	
	Deposit register: aSmallInteger on: aReceptiveAccount2 .
	Withdraw register: aSmallInteger on: aReceptiveAccount .
	value _ aSmallInteger .! !
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:34:50' prior: 50975742!
from: aSourceAccount to: aReceptiveAccount2 anAmountOf: aSmallInteger 
	
	Deposit register: aSmallInteger on: aReceptiveAccount2 .
	Withdraw register: aSmallInteger on: aSourceAccount .
	value _ aSmallInteger .! !
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:35:04' prior: 50975752!
from: aSourceAccount to: aDestinyAccount anAmountOf: aSmallInteger 
	
	Deposit register: aSmallInteger on: aDestinyAccount .
	Withdraw register: aSmallInteger on: aSourceAccount .
	value _ aSmallInteger .! !
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:35:29' prior: 50975762!
from: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer 
	
	Deposit register: valueToTransfer on: aDestinyAccount .
	Withdraw register: valueToTransfer on: aSourceAccount .
	value _ valueToTransfer .! !

!classDefinition: #Transfer category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 19:28:25'!
Object subclass: #Transfer
	instanceVariableNames: 'value'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!
!Transfer methodsFor: 'no messages' stamp: 'ja 11/14/2020 16:36:17' overrides: 16896425!
initialize

	value _ 0! !
!Transfer methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:36:58' prior: 50975268 overrides: 16881508!
value 

	^ value ! !

!methodRemoval: Transfer class #from:to:anAmountOf: stamp: 'ja 11/14/2020 19:28:26'!
from: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer 
	
	Deposit register: valueToTransfer on: aDestinyAccount .
	Withdraw register: valueToTransfer on: aSourceAccount .
	value _ valueToTransfer .!
!Transfer methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:38:06'!
from: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer 
	
	Deposit register: valueToTransfer on: aDestinyAccount .
	Withdraw register: valueToTransfer on: aSourceAccount .
	value _ valueToTransfer .! !

!classDefinition: 'Transfer class' category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 19:28:26'!
Transfer class
	instanceVariableNames: ''!

!classDefinition: 'Transfer class' category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 19:28:26'!
Transfer class
	instanceVariableNames: ''!
!Transfer class methodsFor: 'no messages' stamp: 'ja 11/14/2020 16:40:54'!
from: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer 

	Transfer new initializeFrom: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer .! !
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:41:02' prior: 50975826!
from: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer 

	^ Transfer new initializeFrom: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer .! !
!Transfer methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:41:20' prior: 50975642!
initializeFrom: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer 

	Deposit register: valueToTransfer on: aDestinyAccount .
	Withdraw register: valueToTransfer on: aSourceAccount .
	value _ valueToTransfer .! !

!methodRemoval: Transfer #from:to:anAmountOf: stamp: 'ja 11/14/2020 19:28:26'!
from: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer 
	
	Deposit register: valueToTransfer on: aDestinyAccount .
	Withdraw register: valueToTransfer on: aSourceAccount .
	value _ valueToTransfer .!

!methodRemoval: Transfer #initialize stamp: 'ja 11/14/2020 19:28:26'!
initialize

	value _ 0!
!Transfer methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:42:09' prior: 50975844!
initializeFrom: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer 

	Deposit register: valueToTransfer on: aDestinyAccount .
	Withdraw register: valueToTransfer on: aSourceAccount .
	
	value _ valueToTransfer .! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:42:27' prior: 50975712!
test01TransferAffectsSourceAndDestinyBalance
	
	| transfer sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self assert: 0 equals: sourceAccount balance.
	self assert: 0 equals: destinyAccount balance.
	
	transfer  _ Transfer from: sourceAccount to: destinyAccount anAmountOf: 100.
	
	self assert: -100 equals: sourceAccount balance.
	self assert: 100 equals: destinyAccount balance.
! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:42:57' prior: 50975878!
test01TransferAffectsSourceAndDestinyBalance
	
	| sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self assert: 0 equals: sourceAccount balance.
	self assert: 0 equals: destinyAccount balance.
	
	Transfer from: sourceAccount to: destinyAccount anAmountOf: 100.
	
	self assert: -100 equals: sourceAccount balance.
	self assert: 100 equals: destinyAccount balance.
! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:46:53'!
test02IsPossibleGettingSourceAccountFromTransfer
	
	| sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self assert: 0 equals: sourceAccount balance.
	self assert: 0 equals: destinyAccount balance.
	
	self should: [Transfer from: sourceAccount to: destinyAccount anAmountOf: 0. self fail] 
		raise:  Error
		withMessageText: Transfer canNotTransferAnAmountOfZeroErrorDescription.! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:47:27'!
test02CanNotTransferAnAmountOfZero
	
	| sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self assert: 0 equals: sourceAccount balance.
	self assert: 0 equals: destinyAccount balance.
	
	self should: [Transfer from: sourceAccount to: destinyAccount anAmountOf: 0. self fail] 
		raise:  Error
		withMessageText: Transfer canNotTransferAnAmountOfZeroErrorDescription.! !

!methodRemoval: TransferTest #test02IsPossibleGettingSourceAccountFromTransfer stamp: 'ja 11/14/2020 19:28:26'!
test02IsPossibleGettingSourceAccountFromTransfer
	
	| sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self assert: 0 equals: sourceAccount balance.
	self assert: 0 equals: destinyAccount balance.
	
	self should: [Transfer from: sourceAccount to: destinyAccount anAmountOf: 0. self fail] 
		raise:  Error
		withMessageText: Transfer canNotTransferAnAmountOfZeroErrorDescription.!
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:47:42' prior: 50975445!
canNotTransferAnAmountOfZeroErrorDescription
	self shouldBeImplemented.! !
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:48:16' prior: 50975965!
canNotTransferAnAmountOfZeroErrorDescription
	
	^ 'Can not transfer an amount of zero'! !
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:49:41' prior: 50975835!
from: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer 

	(valueToTransfer = 0) ifTrue: [ self error: self canNotTransferAnAmountOfZeroErrorDescription ].
		
	^ Transfer new initializeFrom: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer .! !

!methodRemoval: TransferTest #test02CanNotTransferAnAmountOfZero stamp: 'ja 11/14/2020 19:28:26'!
test02CanNotTransferAnAmountOfZero
	
	| sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self assert: 0 equals: sourceAccount balance.
	self assert: 0 equals: destinyAccount balance.
	
	self should: [Transfer from: sourceAccount to: destinyAccount anAmountOf: 0. self fail] 
		raise:  Error
		withMessageText: Transfer canNotTransferAnAmountOfZeroErrorDescription.!
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:51:45'!
test03IsPossibleGettingDestinyAccountFromTransfer
	
	| sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self assert: 0 equals: sourceAccount balance.
	self assert: 0 equals: destinyAccount balance.
	
	self should: [Transfer from: sourceAccount to: destinyAccount anAmountOf: 0.] 
		raise: Error
		withMessageText: Transfer canNotTransferAnAmountOfZeroErrorDescription .! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:51:52' prior: 50976005!
test03IsPossibleGettingDestinyAccountFromTransfer
	
	| sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self assert: 0 equals: sourceAccount balance.
	self assert: 0 equals: destinyAccount balance.
	
	self should: [Transfer from: sourceAccount to: destinyAccount anAmountOf: 0. self fail] 
		raise: Error
		withMessageText: Transfer canNotTransferAnAmountOfZeroErrorDescription .! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:51:58' prior: 50976022!
test03IsPossibleGettingDestinyAccountFromTransfer
	
	| sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self should: [Transfer from: sourceAccount to: destinyAccount anAmountOf: 0. self fail] 
		raise: Error
		withMessageText: Transfer canNotTransferAnAmountOfZeroErrorDescription .! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:52:16' prior: 50975529!
test02CanNotTransferAnAmountOfZeroErrorDescription 
	
	| sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self should: [Transfer from: sourceAccount to: destinyAccount anAmountOf: 0. self fail] 
		raise: Error
		withMessageText: Transfer canNotTransferAnAmountOfZeroErrorDescription .! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:53:12' prior: 50975544!
test03CanNotTransferANegativeAmountErrorDescription
	
	| sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self should: [Transfer from: sourceAccount to: destinyAccount anAmountOf: -100. self fail] 
		raise: Error
		withMessageText: Transfer canNotTransferANegativeAmountErrorDescription .! !
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:53:24' prior: 50975565!
canNotTransferANegativeAmountErrorDescription
	self shouldBeImplemented.! !
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:54:04' prior: 50976085!
canNotTransferANegativeAmountErrorDescription
	
	^ ' Can not transfer a negative amount '! !
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:55:01' prior: 50975977!
from: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer 

	(valueToTransfer = 0) ifTrue: [ self error: self canNotTransferAnAmountOfZeroErrorDescription ].
	(valueToTransfer  < 0) ifTrue: [ self error: self canNotTransferANegativeAmountErrorDescription ].
		
	^ Transfer new initializeFrom: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer .! !

!methodRemoval: TransferTest #test03IsPossibleGettingDestinyAccountFromTransfer stamp: 'ja 11/14/2020 19:28:26'!
test03IsPossibleGettingDestinyAccountFromTransfer
	
	| sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self should: [Transfer from: sourceAccount to: destinyAccount anAmountOf: 0. self fail] 
		raise: Error
		withMessageText: Transfer canNotTransferAnAmountOfZeroErrorDescription .!
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 17:03:02' prior: 50975601!
test04TransferIsRegisteredIntoInvolvedAccount
	
	| sourceAccount destinyAccount transfer |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	transfer _ Transfer from: sourceAccount to: destinyAccount anAmountOf: 100.
	
	self assert: sourceAccount transactions includes: transfer depositMade. 
	
	self assert: destinyAccount transactions includes: transfer withdrawMade.
	
	
	! !
!Transfer methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 17:03:36' prior: 50975622!
depositMade
	self shouldBeImplemented.! !
!Transfer methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 17:03:59' prior: 50976143!
depositMade
	
	^ nil! !

!classDefinition: #Transfer category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 19:28:26'!
Object subclass: #Transfer
	instanceVariableNames: 'value depositMade'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #Transfer category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 19:28:26'!
Object subclass: #Transfer
	instanceVariableNames: 'value depositMade withdrawMade'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!
!Transfer methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 17:05:37' prior: 50975867!
initializeFrom: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer 

	depositMade _ TransferDeposit register: valueToTransfer on: aDestinyAccount .
	withdrawMade _ TransferWithdraw register: valueToTransfer on: aSourceAccount .
	
	value _ valueToTransfer .! !
!TransferType methodsFor: 'no messages' stamp: 'ja 11/14/2020 17:06:54' prior: 50975654 overrides: 50964395!
affectBalance: aBalance

	self subclassResponsibility ! !
!TransferType methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 17:07:07' prior: 50975660 overrides: 50964391!
value 

	self subclassResponsibility ! !

!classDefinition: #TransferType category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 19:28:27'!
AccountTransaction subclass: #TransferType
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #TransferType category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 19:28:27'!
AccountTransaction subclass: #TransferType
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:29:11' prior: 50975896!
test01TransferAffectsSourceAndDestinyBalance
	
	| transfer sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	transfer  _ Transfer from: sourceAccount to: destinyAccount anAmountOf: 100.
	
	self assert: sourceAccount balance 

	
	! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:31:05' prior: 50976206!
test01TransferAffectsSourceAndDestinyBalance
	
	| transfer sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self assert: 0 equals: (sourceAccount balance).
	self assert: 0 equals: (destinyAccount balance).
	
	transfer  _ Transfer from: sourceAccount to: destinyAccount anAmountOf: 100.
	
	self assert: -100 equals: (sourceAccount balance).
	self assert: 100 equals: (destinyAccount balance).
	self assert: 100 equals: transfer value.	
	! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:31:42' prior: 50976219!
test01TransferAffectsSourceAndDestinyBalance
	
	| transfer sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self assert: 0 equals: sourceAccount balance.
	self assert: 0 equals: destinyAccount balance.
	
	transfer  _ Transfer from: sourceAccount to: destinyAccount anAmountOf: 100.
	
	self assert: -100 equals: sourceAccount balance.
	self assert: 100 equals: destinyAccount balance.
	self assert: 100 equals: transfer value.	
	! !
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:31:57' prior: 50976097!
from: aReceptiveAccount to: aReceptiveAccount2 anAmountOf: aSmallInteger 
	self shouldBeImplemented.! !

!classDefinition: 'Transfer class' category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 19:28:27'!
Transfer class
	instanceVariableNames: 'value'!
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:34:30' prior: 50976257!
from: aReceptiveAccount to: aReceptiveAccount2 anAmountOf: aSmallInteger 
	
	Deposit register: aSmallInteger on: aReceptiveAccount2 .
	Withdraw register: aSmallInteger on: aReceptiveAccount .
	value _ aSmallInteger .! !
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:34:50' prior: 50976268!
from: aSourceAccount to: aReceptiveAccount2 anAmountOf: aSmallInteger 
	
	Deposit register: aSmallInteger on: aReceptiveAccount2 .
	Withdraw register: aSmallInteger on: aSourceAccount .
	value _ aSmallInteger .! !
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:35:04' prior: 50976278!
from: aSourceAccount to: aDestinyAccount anAmountOf: aSmallInteger 
	
	Deposit register: aSmallInteger on: aDestinyAccount .
	Withdraw register: aSmallInteger on: aSourceAccount .
	value _ aSmallInteger .! !
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:35:29' prior: 50976288!
from: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer 
	
	Deposit register: valueToTransfer on: aDestinyAccount .
	Withdraw register: valueToTransfer on: aSourceAccount .
	value _ valueToTransfer .! !

!classDefinition: #Transfer category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 19:28:27'!
Object subclass: #Transfer
	instanceVariableNames: 'value'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!
!Transfer methodsFor: 'no messages' stamp: 'ja 11/14/2020 16:36:17' overrides: 16896425!
initialize

	value _ 0! !
!Transfer methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:36:58' prior: 50975794 overrides: 16881508!
value 

	^ value ! !

!methodRemoval: Transfer class #from:to:anAmountOf: stamp: 'ja 11/14/2020 19:28:28'!
from: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer 
	
	Deposit register: valueToTransfer on: aDestinyAccount .
	Withdraw register: valueToTransfer on: aSourceAccount .
	value _ valueToTransfer .!
!Transfer methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:38:06'!
from: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer 
	
	Deposit register: valueToTransfer on: aDestinyAccount .
	Withdraw register: valueToTransfer on: aSourceAccount .
	value _ valueToTransfer .! !

!classDefinition: 'Transfer class' category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 19:28:28'!
Transfer class
	instanceVariableNames: ''!

!classDefinition: 'Transfer class' category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 19:28:28'!
Transfer class
	instanceVariableNames: ''!
!Transfer class methodsFor: 'no messages' stamp: 'ja 11/14/2020 16:40:54'!
from: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer 

	Transfer new initializeFrom: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer .! !
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:41:02' prior: 50976352!
from: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer 

	^ Transfer new initializeFrom: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer .! !
!Transfer methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:41:20' prior: 50976168!
initializeFrom: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer 

	Deposit register: valueToTransfer on: aDestinyAccount .
	Withdraw register: valueToTransfer on: aSourceAccount .
	value _ valueToTransfer .! !

!methodRemoval: Transfer #from:to:anAmountOf: stamp: 'ja 11/14/2020 19:28:28'!
from: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer 
	
	Deposit register: valueToTransfer on: aDestinyAccount .
	Withdraw register: valueToTransfer on: aSourceAccount .
	value _ valueToTransfer .!

!methodRemoval: Transfer #initialize stamp: 'ja 11/14/2020 19:28:28'!
initialize

	value _ 0!
!Transfer methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:42:09' prior: 50976370!
initializeFrom: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer 

	Deposit register: valueToTransfer on: aDestinyAccount .
	Withdraw register: valueToTransfer on: aSourceAccount .
	
	value _ valueToTransfer .! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:42:27' prior: 50976238!
test01TransferAffectsSourceAndDestinyBalance
	
	| transfer sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self assert: 0 equals: sourceAccount balance.
	self assert: 0 equals: destinyAccount balance.
	
	transfer  _ Transfer from: sourceAccount to: destinyAccount anAmountOf: 100.
	
	self assert: -100 equals: sourceAccount balance.
	self assert: 100 equals: destinyAccount balance.
! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:42:57' prior: 50976404!
test01TransferAffectsSourceAndDestinyBalance
	
	| sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self assert: 0 equals: sourceAccount balance.
	self assert: 0 equals: destinyAccount balance.
	
	Transfer from: sourceAccount to: destinyAccount anAmountOf: 100.
	
	self assert: -100 equals: sourceAccount balance.
	self assert: 100 equals: destinyAccount balance.
! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:46:53'!
test02IsPossibleGettingSourceAccountFromTransfer
	
	| sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self assert: 0 equals: sourceAccount balance.
	self assert: 0 equals: destinyAccount balance.
	
	self should: [Transfer from: sourceAccount to: destinyAccount anAmountOf: 0. self fail] 
		raise:  Error
		withMessageText: Transfer canNotTransferAnAmountOfZeroErrorDescription.! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:47:27'!
test02CanNotTransferAnAmountOfZero
	
	| sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self assert: 0 equals: sourceAccount balance.
	self assert: 0 equals: destinyAccount balance.
	
	self should: [Transfer from: sourceAccount to: destinyAccount anAmountOf: 0. self fail] 
		raise:  Error
		withMessageText: Transfer canNotTransferAnAmountOfZeroErrorDescription.! !

!methodRemoval: TransferTest #test02IsPossibleGettingSourceAccountFromTransfer stamp: 'ja 11/14/2020 19:28:28'!
test02IsPossibleGettingSourceAccountFromTransfer
	
	| sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self assert: 0 equals: sourceAccount balance.
	self assert: 0 equals: destinyAccount balance.
	
	self should: [Transfer from: sourceAccount to: destinyAccount anAmountOf: 0. self fail] 
		raise:  Error
		withMessageText: Transfer canNotTransferAnAmountOfZeroErrorDescription.!
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:47:42' prior: 50975971!
canNotTransferAnAmountOfZeroErrorDescription
	self shouldBeImplemented.! !
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:48:16' prior: 50976491!
canNotTransferAnAmountOfZeroErrorDescription
	
	^ 'Can not transfer an amount of zero'! !
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:49:41' prior: 50976361!
from: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer 

	(valueToTransfer = 0) ifTrue: [ self error: self canNotTransferAnAmountOfZeroErrorDescription ].
		
	^ Transfer new initializeFrom: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer .! !

!methodRemoval: TransferTest #test02CanNotTransferAnAmountOfZero stamp: 'ja 11/14/2020 19:28:28'!
test02CanNotTransferAnAmountOfZero
	
	| sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self assert: 0 equals: sourceAccount balance.
	self assert: 0 equals: destinyAccount balance.
	
	self should: [Transfer from: sourceAccount to: destinyAccount anAmountOf: 0. self fail] 
		raise:  Error
		withMessageText: Transfer canNotTransferAnAmountOfZeroErrorDescription.!
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:51:45'!
test03IsPossibleGettingDestinyAccountFromTransfer
	
	| sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self assert: 0 equals: sourceAccount balance.
	self assert: 0 equals: destinyAccount balance.
	
	self should: [Transfer from: sourceAccount to: destinyAccount anAmountOf: 0.] 
		raise: Error
		withMessageText: Transfer canNotTransferAnAmountOfZeroErrorDescription .! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:51:52' prior: 50976531!
test03IsPossibleGettingDestinyAccountFromTransfer
	
	| sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self assert: 0 equals: sourceAccount balance.
	self assert: 0 equals: destinyAccount balance.
	
	self should: [Transfer from: sourceAccount to: destinyAccount anAmountOf: 0. self fail] 
		raise: Error
		withMessageText: Transfer canNotTransferAnAmountOfZeroErrorDescription .! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:51:58' prior: 50976548!
test03IsPossibleGettingDestinyAccountFromTransfer
	
	| sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self should: [Transfer from: sourceAccount to: destinyAccount anAmountOf: 0. self fail] 
		raise: Error
		withMessageText: Transfer canNotTransferAnAmountOfZeroErrorDescription .! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:52:16' prior: 50976055!
test02CanNotTransferAnAmountOfZeroErrorDescription 
	
	| sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self should: [Transfer from: sourceAccount to: destinyAccount anAmountOf: 0. self fail] 
		raise: Error
		withMessageText: Transfer canNotTransferAnAmountOfZeroErrorDescription .! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:53:12' prior: 50976070!
test03CanNotTransferANegativeAmountErrorDescription
	
	| sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self should: [Transfer from: sourceAccount to: destinyAccount anAmountOf: -100. self fail] 
		raise: Error
		withMessageText: Transfer canNotTransferANegativeAmountErrorDescription .! !
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:53:24' prior: 50976091!
canNotTransferANegativeAmountErrorDescription
	self shouldBeImplemented.! !
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:54:04' prior: 50976611!
canNotTransferANegativeAmountErrorDescription
	
	^ ' Can not transfer a negative amount '! !
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:55:01' prior: 50976503!
from: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer 

	(valueToTransfer = 0) ifTrue: [ self error: self canNotTransferAnAmountOfZeroErrorDescription ].
	(valueToTransfer  < 0) ifTrue: [ self error: self canNotTransferANegativeAmountErrorDescription ].
		
	^ Transfer new initializeFrom: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer .! !

!methodRemoval: TransferTest #test03IsPossibleGettingDestinyAccountFromTransfer stamp: 'ja 11/14/2020 19:28:28'!
test03IsPossibleGettingDestinyAccountFromTransfer
	
	| sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self should: [Transfer from: sourceAccount to: destinyAccount anAmountOf: 0. self fail] 
		raise: Error
		withMessageText: Transfer canNotTransferAnAmountOfZeroErrorDescription .!
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 17:03:02' prior: 50976127!
test04TransferIsRegisteredIntoInvolvedAccount
	
	| sourceAccount destinyAccount transfer |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	transfer _ Transfer from: sourceAccount to: destinyAccount anAmountOf: 100.
	
	self assert: sourceAccount transactions includes: transfer depositMade. 
	
	self assert: destinyAccount transactions includes: transfer withdrawMade.
	
	
	! !
!Transfer methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 17:03:36' prior: 50976148!
depositMade
	self shouldBeImplemented.! !
!Transfer methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 17:03:59' prior: 50976669!
depositMade
	
	^ nil! !

!classDefinition: #Transfer category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 19:28:28'!
Object subclass: #Transfer
	instanceVariableNames: 'value depositMade'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #Transfer category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 19:28:28'!
Object subclass: #Transfer
	instanceVariableNames: 'value depositMade withdrawMade'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!
!Transfer methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 17:05:37' prior: 50976393!
initializeFrom: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer 

	depositMade _ TransferDeposit register: valueToTransfer on: aDestinyAccount .
	withdrawMade _ TransferWithdraw register: valueToTransfer on: aSourceAccount .
	
	value _ valueToTransfer .! !
!TransferType methodsFor: 'no messages' stamp: 'ja 11/14/2020 17:06:54' prior: 50976180 overrides: 50964395!
affectBalance: aBalance

	self subclassResponsibility ! !
!TransferType methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 17:07:07' prior: 50976186 overrides: 50964391!
value 

	self subclassResponsibility ! !

!classDefinition: #TransferType category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 19:28:29'!
AccountTransaction subclass: #TransferType
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #TransferType category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 19:28:29'!
AccountTransaction subclass: #TransferType
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:29:11' prior: 50976422!
test01TransferAffectsSourceAndDestinyBalance
	
	| transfer sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	transfer  _ Transfer from: sourceAccount to: destinyAccount anAmountOf: 100.
	
	self assert: sourceAccount balance 

	
	! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:31:05' prior: 50976732!
test01TransferAffectsSourceAndDestinyBalance
	
	| transfer sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self assert: 0 equals: (sourceAccount balance).
	self assert: 0 equals: (destinyAccount balance).
	
	transfer  _ Transfer from: sourceAccount to: destinyAccount anAmountOf: 100.
	
	self assert: -100 equals: (sourceAccount balance).
	self assert: 100 equals: (destinyAccount balance).
	self assert: 100 equals: transfer value.	
	! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:31:42' prior: 50976745!
test01TransferAffectsSourceAndDestinyBalance
	
	| transfer sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self assert: 0 equals: sourceAccount balance.
	self assert: 0 equals: destinyAccount balance.
	
	transfer  _ Transfer from: sourceAccount to: destinyAccount anAmountOf: 100.
	
	self assert: -100 equals: sourceAccount balance.
	self assert: 100 equals: destinyAccount balance.
	self assert: 100 equals: transfer value.	
	! !
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:31:57' prior: 50976623!
from: aReceptiveAccount to: aReceptiveAccount2 anAmountOf: aSmallInteger 
	self shouldBeImplemented.! !

!classDefinition: 'Transfer class' category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 19:28:29'!
Transfer class
	instanceVariableNames: 'value'!
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:34:30' prior: 50976783!
from: aReceptiveAccount to: aReceptiveAccount2 anAmountOf: aSmallInteger 
	
	Deposit register: aSmallInteger on: aReceptiveAccount2 .
	Withdraw register: aSmallInteger on: aReceptiveAccount .
	value _ aSmallInteger .! !
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:34:50' prior: 50976794!
from: aSourceAccount to: aReceptiveAccount2 anAmountOf: aSmallInteger 
	
	Deposit register: aSmallInteger on: aReceptiveAccount2 .
	Withdraw register: aSmallInteger on: aSourceAccount .
	value _ aSmallInteger .! !
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:35:04' prior: 50976804!
from: aSourceAccount to: aDestinyAccount anAmountOf: aSmallInteger 
	
	Deposit register: aSmallInteger on: aDestinyAccount .
	Withdraw register: aSmallInteger on: aSourceAccount .
	value _ aSmallInteger .! !
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:35:29' prior: 50976814!
from: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer 
	
	Deposit register: valueToTransfer on: aDestinyAccount .
	Withdraw register: valueToTransfer on: aSourceAccount .
	value _ valueToTransfer .! !

!classDefinition: #Transfer category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 19:28:30'!
Object subclass: #Transfer
	instanceVariableNames: 'value'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!
!Transfer methodsFor: 'no messages' stamp: 'ja 11/14/2020 16:36:17' overrides: 16896425!
initialize

	value _ 0! !
!Transfer methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:36:58' prior: 50976320 overrides: 16881508!
value 

	^ value ! !

!methodRemoval: Transfer class #from:to:anAmountOf: stamp: 'ja 11/14/2020 19:28:30'!
from: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer 
	
	Deposit register: valueToTransfer on: aDestinyAccount .
	Withdraw register: valueToTransfer on: aSourceAccount .
	value _ valueToTransfer .!
!Transfer methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:38:06'!
from: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer 
	
	Deposit register: valueToTransfer on: aDestinyAccount .
	Withdraw register: valueToTransfer on: aSourceAccount .
	value _ valueToTransfer .! !

!classDefinition: 'Transfer class' category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 19:28:30'!
Transfer class
	instanceVariableNames: ''!

!classDefinition: 'Transfer class' category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 19:28:30'!
Transfer class
	instanceVariableNames: ''!
!Transfer class methodsFor: 'no messages' stamp: 'ja 11/14/2020 16:40:54'!
from: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer 

	Transfer new initializeFrom: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer .! !
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:41:02' prior: 50976878!
from: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer 

	^ Transfer new initializeFrom: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer .! !
!Transfer methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:41:20' prior: 50976694!
initializeFrom: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer 

	Deposit register: valueToTransfer on: aDestinyAccount .
	Withdraw register: valueToTransfer on: aSourceAccount .
	value _ valueToTransfer .! !

!methodRemoval: Transfer #from:to:anAmountOf: stamp: 'ja 11/14/2020 19:28:30'!
from: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer 
	
	Deposit register: valueToTransfer on: aDestinyAccount .
	Withdraw register: valueToTransfer on: aSourceAccount .
	value _ valueToTransfer .!

!methodRemoval: Transfer #initialize stamp: 'ja 11/14/2020 19:28:30'!
initialize

	value _ 0!
!Transfer methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:42:09' prior: 50976896!
initializeFrom: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer 

	Deposit register: valueToTransfer on: aDestinyAccount .
	Withdraw register: valueToTransfer on: aSourceAccount .
	
	value _ valueToTransfer .! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:42:27' prior: 50976764!
test01TransferAffectsSourceAndDestinyBalance
	
	| transfer sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self assert: 0 equals: sourceAccount balance.
	self assert: 0 equals: destinyAccount balance.
	
	transfer  _ Transfer from: sourceAccount to: destinyAccount anAmountOf: 100.
	
	self assert: -100 equals: sourceAccount balance.
	self assert: 100 equals: destinyAccount balance.
! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:42:57' prior: 50976930!
test01TransferAffectsSourceAndDestinyBalance
	
	| sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self assert: 0 equals: sourceAccount balance.
	self assert: 0 equals: destinyAccount balance.
	
	Transfer from: sourceAccount to: destinyAccount anAmountOf: 100.
	
	self assert: -100 equals: sourceAccount balance.
	self assert: 100 equals: destinyAccount balance.
! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:46:53'!
test02IsPossibleGettingSourceAccountFromTransfer
	
	| sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self assert: 0 equals: sourceAccount balance.
	self assert: 0 equals: destinyAccount balance.
	
	self should: [Transfer from: sourceAccount to: destinyAccount anAmountOf: 0. self fail] 
		raise:  Error
		withMessageText: Transfer canNotTransferAnAmountOfZeroErrorDescription.! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:47:27'!
test02CanNotTransferAnAmountOfZero
	
	| sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self assert: 0 equals: sourceAccount balance.
	self assert: 0 equals: destinyAccount balance.
	
	self should: [Transfer from: sourceAccount to: destinyAccount anAmountOf: 0. self fail] 
		raise:  Error
		withMessageText: Transfer canNotTransferAnAmountOfZeroErrorDescription.! !

!methodRemoval: TransferTest #test02IsPossibleGettingSourceAccountFromTransfer stamp: 'ja 11/14/2020 19:28:30'!
test02IsPossibleGettingSourceAccountFromTransfer
	
	| sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self assert: 0 equals: sourceAccount balance.
	self assert: 0 equals: destinyAccount balance.
	
	self should: [Transfer from: sourceAccount to: destinyAccount anAmountOf: 0. self fail] 
		raise:  Error
		withMessageText: Transfer canNotTransferAnAmountOfZeroErrorDescription.!
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:47:42' prior: 50976497!
canNotTransferAnAmountOfZeroErrorDescription
	self shouldBeImplemented.! !
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:48:16' prior: 50977017!
canNotTransferAnAmountOfZeroErrorDescription
	
	^ 'Can not transfer an amount of zero'! !
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:49:41' prior: 50976887!
from: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer 

	(valueToTransfer = 0) ifTrue: [ self error: self canNotTransferAnAmountOfZeroErrorDescription ].
		
	^ Transfer new initializeFrom: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer .! !

!methodRemoval: TransferTest #test02CanNotTransferAnAmountOfZero stamp: 'ja 11/14/2020 19:28:30'!
test02CanNotTransferAnAmountOfZero
	
	| sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self assert: 0 equals: sourceAccount balance.
	self assert: 0 equals: destinyAccount balance.
	
	self should: [Transfer from: sourceAccount to: destinyAccount anAmountOf: 0. self fail] 
		raise:  Error
		withMessageText: Transfer canNotTransferAnAmountOfZeroErrorDescription.!
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:51:45'!
test03IsPossibleGettingDestinyAccountFromTransfer
	
	| sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self assert: 0 equals: sourceAccount balance.
	self assert: 0 equals: destinyAccount balance.
	
	self should: [Transfer from: sourceAccount to: destinyAccount anAmountOf: 0.] 
		raise: Error
		withMessageText: Transfer canNotTransferAnAmountOfZeroErrorDescription .! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:51:52' prior: 50977057!
test03IsPossibleGettingDestinyAccountFromTransfer
	
	| sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self assert: 0 equals: sourceAccount balance.
	self assert: 0 equals: destinyAccount balance.
	
	self should: [Transfer from: sourceAccount to: destinyAccount anAmountOf: 0. self fail] 
		raise: Error
		withMessageText: Transfer canNotTransferAnAmountOfZeroErrorDescription .! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:51:58' prior: 50977074!
test03IsPossibleGettingDestinyAccountFromTransfer
	
	| sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self should: [Transfer from: sourceAccount to: destinyAccount anAmountOf: 0. self fail] 
		raise: Error
		withMessageText: Transfer canNotTransferAnAmountOfZeroErrorDescription .! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:52:16' prior: 50976581!
test02CanNotTransferAnAmountOfZeroErrorDescription 
	
	| sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self should: [Transfer from: sourceAccount to: destinyAccount anAmountOf: 0. self fail] 
		raise: Error
		withMessageText: Transfer canNotTransferAnAmountOfZeroErrorDescription .! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:53:12' prior: 50976596!
test03CanNotTransferANegativeAmountErrorDescription
	
	| sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self should: [Transfer from: sourceAccount to: destinyAccount anAmountOf: -100. self fail] 
		raise: Error
		withMessageText: Transfer canNotTransferANegativeAmountErrorDescription .! !
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:53:24' prior: 50976617!
canNotTransferANegativeAmountErrorDescription
	self shouldBeImplemented.! !
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:54:04' prior: 50977137!
canNotTransferANegativeAmountErrorDescription
	
	^ ' Can not transfer a negative amount '! !
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:55:01' prior: 50977029!
from: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer 

	(valueToTransfer = 0) ifTrue: [ self error: self canNotTransferAnAmountOfZeroErrorDescription ].
	(valueToTransfer  < 0) ifTrue: [ self error: self canNotTransferANegativeAmountErrorDescription ].
		
	^ Transfer new initializeFrom: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer .! !

!methodRemoval: TransferTest #test03IsPossibleGettingDestinyAccountFromTransfer stamp: 'ja 11/14/2020 19:28:30'!
test03IsPossibleGettingDestinyAccountFromTransfer
	
	| sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self should: [Transfer from: sourceAccount to: destinyAccount anAmountOf: 0. self fail] 
		raise: Error
		withMessageText: Transfer canNotTransferAnAmountOfZeroErrorDescription .!
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 17:03:02' prior: 50976653!
test04TransferIsRegisteredIntoInvolvedAccount
	
	| sourceAccount destinyAccount transfer |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	transfer _ Transfer from: sourceAccount to: destinyAccount anAmountOf: 100.
	
	self assert: sourceAccount transactions includes: transfer depositMade. 
	
	self assert: destinyAccount transactions includes: transfer withdrawMade.
	
	
	! !
!Transfer methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 17:03:36' prior: 50976674!
depositMade
	self shouldBeImplemented.! !
!Transfer methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 17:03:59' prior: 50977195!
depositMade
	
	^ nil! !

!classDefinition: #Transfer category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 19:28:30'!
Object subclass: #Transfer
	instanceVariableNames: 'value depositMade'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #Transfer category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 19:28:30'!
Object subclass: #Transfer
	instanceVariableNames: 'value depositMade withdrawMade'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!
!Transfer methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 17:05:37' prior: 50976919!
initializeFrom: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer 

	depositMade _ TransferDeposit register: valueToTransfer on: aDestinyAccount .
	withdrawMade _ TransferWithdraw register: valueToTransfer on: aSourceAccount .
	
	value _ valueToTransfer .! !
!TransferType methodsFor: 'no messages' stamp: 'ja 11/14/2020 17:06:54' prior: 50976706 overrides: 50964395!
affectBalance: aBalance

	self subclassResponsibility ! !
!TransferType methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 17:07:07' prior: 50976712 overrides: 50964391!
value 

	self subclassResponsibility ! !

!classDefinition: #Deposit category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 19:28:30'!
AccountTransaction subclass: #Deposit
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #TransferType category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 19:28:34'!
AccountTransaction subclass: #TransferType
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #TransferType category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 19:28:34'!
AccountTransaction subclass: #TransferType
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:29:11' prior: 50976948!
test01TransferAffectsSourceAndDestinyBalance
	
	| transfer sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	transfer  _ Transfer from: sourceAccount to: destinyAccount anAmountOf: 100.
	
	self assert: sourceAccount balance 

	
	! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:31:05' prior: 50977266!
test01TransferAffectsSourceAndDestinyBalance
	
	| transfer sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self assert: 0 equals: (sourceAccount balance).
	self assert: 0 equals: (destinyAccount balance).
	
	transfer  _ Transfer from: sourceAccount to: destinyAccount anAmountOf: 100.
	
	self assert: -100 equals: (sourceAccount balance).
	self assert: 100 equals: (destinyAccount balance).
	self assert: 100 equals: transfer value.	
	! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:31:42' prior: 50977279!
test01TransferAffectsSourceAndDestinyBalance
	
	| transfer sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self assert: 0 equals: sourceAccount balance.
	self assert: 0 equals: destinyAccount balance.
	
	transfer  _ Transfer from: sourceAccount to: destinyAccount anAmountOf: 100.
	
	self assert: -100 equals: sourceAccount balance.
	self assert: 100 equals: destinyAccount balance.
	self assert: 100 equals: transfer value.	
	! !
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:31:57' prior: 50977149!
from: aReceptiveAccount to: aReceptiveAccount2 anAmountOf: aSmallInteger 
	self shouldBeImplemented.! !

!classDefinition: 'Transfer class' category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 19:28:34'!
Transfer class
	instanceVariableNames: 'value'!
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:34:30' prior: 50977317!
from: aReceptiveAccount to: aReceptiveAccount2 anAmountOf: aSmallInteger 
	
	Deposit register: aSmallInteger on: aReceptiveAccount2 .
	Withdraw register: aSmallInteger on: aReceptiveAccount .
	value _ aSmallInteger .! !
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:34:50' prior: 50977328!
from: aSourceAccount to: aReceptiveAccount2 anAmountOf: aSmallInteger 
	
	Deposit register: aSmallInteger on: aReceptiveAccount2 .
	Withdraw register: aSmallInteger on: aSourceAccount .
	value _ aSmallInteger .! !
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:35:04' prior: 50977338!
from: aSourceAccount to: aDestinyAccount anAmountOf: aSmallInteger 
	
	Deposit register: aSmallInteger on: aDestinyAccount .
	Withdraw register: aSmallInteger on: aSourceAccount .
	value _ aSmallInteger .! !
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:35:29' prior: 50977348!
from: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer 
	
	Deposit register: valueToTransfer on: aDestinyAccount .
	Withdraw register: valueToTransfer on: aSourceAccount .
	value _ valueToTransfer .! !

!classDefinition: #Transfer category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 19:28:34'!
Object subclass: #Transfer
	instanceVariableNames: 'value'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!
!Transfer methodsFor: 'no messages' stamp: 'ja 11/14/2020 16:36:17' overrides: 16896425!
initialize

	value _ 0! !
!Transfer methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:36:58' prior: 50976846 overrides: 16881508!
value 

	^ value ! !

!methodRemoval: Transfer class #from:to:anAmountOf: stamp: 'ja 11/14/2020 19:28:34'!
from: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer 
	
	Deposit register: valueToTransfer on: aDestinyAccount .
	Withdraw register: valueToTransfer on: aSourceAccount .
	value _ valueToTransfer .!
!Transfer methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:38:06'!
from: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer 
	
	Deposit register: valueToTransfer on: aDestinyAccount .
	Withdraw register: valueToTransfer on: aSourceAccount .
	value _ valueToTransfer .! !

!classDefinition: 'Transfer class' category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 19:28:34'!
Transfer class
	instanceVariableNames: ''!

!classDefinition: 'Transfer class' category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 19:28:34'!
Transfer class
	instanceVariableNames: ''!
!Transfer class methodsFor: 'no messages' stamp: 'ja 11/14/2020 16:40:54'!
from: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer 

	Transfer new initializeFrom: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer .! !
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:41:02' prior: 50977412!
from: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer 

	^ Transfer new initializeFrom: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer .! !
!Transfer methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:41:20' prior: 50977220!
initializeFrom: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer 

	Deposit register: valueToTransfer on: aDestinyAccount .
	Withdraw register: valueToTransfer on: aSourceAccount .
	value _ valueToTransfer .! !

!methodRemoval: Transfer #from:to:anAmountOf: stamp: 'ja 11/14/2020 19:28:34'!
from: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer 
	
	Deposit register: valueToTransfer on: aDestinyAccount .
	Withdraw register: valueToTransfer on: aSourceAccount .
	value _ valueToTransfer .!

!methodRemoval: Transfer #initialize stamp: 'ja 11/14/2020 19:28:34'!
initialize

	value _ 0!
!Transfer methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:42:09' prior: 50977430!
initializeFrom: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer 

	Deposit register: valueToTransfer on: aDestinyAccount .
	Withdraw register: valueToTransfer on: aSourceAccount .
	
	value _ valueToTransfer .! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:42:27' prior: 50977298!
test01TransferAffectsSourceAndDestinyBalance
	
	| transfer sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self assert: 0 equals: sourceAccount balance.
	self assert: 0 equals: destinyAccount balance.
	
	transfer  _ Transfer from: sourceAccount to: destinyAccount anAmountOf: 100.
	
	self assert: -100 equals: sourceAccount balance.
	self assert: 100 equals: destinyAccount balance.
! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:42:57' prior: 50977464!
test01TransferAffectsSourceAndDestinyBalance
	
	| sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self assert: 0 equals: sourceAccount balance.
	self assert: 0 equals: destinyAccount balance.
	
	Transfer from: sourceAccount to: destinyAccount anAmountOf: 100.
	
	self assert: -100 equals: sourceAccount balance.
	self assert: 100 equals: destinyAccount balance.
! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:46:53'!
test02IsPossibleGettingSourceAccountFromTransfer
	
	| sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self assert: 0 equals: sourceAccount balance.
	self assert: 0 equals: destinyAccount balance.
	
	self should: [Transfer from: sourceAccount to: destinyAccount anAmountOf: 0. self fail] 
		raise:  Error
		withMessageText: Transfer canNotTransferAnAmountOfZeroErrorDescription.! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:47:27'!
test02CanNotTransferAnAmountOfZero
	
	| sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self assert: 0 equals: sourceAccount balance.
	self assert: 0 equals: destinyAccount balance.
	
	self should: [Transfer from: sourceAccount to: destinyAccount anAmountOf: 0. self fail] 
		raise:  Error
		withMessageText: Transfer canNotTransferAnAmountOfZeroErrorDescription.! !

!methodRemoval: TransferTest #test02IsPossibleGettingSourceAccountFromTransfer stamp: 'ja 11/14/2020 19:28:34'!
test02IsPossibleGettingSourceAccountFromTransfer
	
	| sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self assert: 0 equals: sourceAccount balance.
	self assert: 0 equals: destinyAccount balance.
	
	self should: [Transfer from: sourceAccount to: destinyAccount anAmountOf: 0. self fail] 
		raise:  Error
		withMessageText: Transfer canNotTransferAnAmountOfZeroErrorDescription.!
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:47:42' prior: 50977023!
canNotTransferAnAmountOfZeroErrorDescription
	self shouldBeImplemented.! !
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:48:16' prior: 50977551!
canNotTransferAnAmountOfZeroErrorDescription
	
	^ 'Can not transfer an amount of zero'! !
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:49:41' prior: 50977421!
from: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer 

	(valueToTransfer = 0) ifTrue: [ self error: self canNotTransferAnAmountOfZeroErrorDescription ].
		
	^ Transfer new initializeFrom: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer .! !

!methodRemoval: TransferTest #test02CanNotTransferAnAmountOfZero stamp: 'ja 11/14/2020 19:28:34'!
test02CanNotTransferAnAmountOfZero
	
	| sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self assert: 0 equals: sourceAccount balance.
	self assert: 0 equals: destinyAccount balance.
	
	self should: [Transfer from: sourceAccount to: destinyAccount anAmountOf: 0. self fail] 
		raise:  Error
		withMessageText: Transfer canNotTransferAnAmountOfZeroErrorDescription.!
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:51:45'!
test03IsPossibleGettingDestinyAccountFromTransfer
	
	| sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self assert: 0 equals: sourceAccount balance.
	self assert: 0 equals: destinyAccount balance.
	
	self should: [Transfer from: sourceAccount to: destinyAccount anAmountOf: 0.] 
		raise: Error
		withMessageText: Transfer canNotTransferAnAmountOfZeroErrorDescription .! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:51:52' prior: 50977591!
test03IsPossibleGettingDestinyAccountFromTransfer
	
	| sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self assert: 0 equals: sourceAccount balance.
	self assert: 0 equals: destinyAccount balance.
	
	self should: [Transfer from: sourceAccount to: destinyAccount anAmountOf: 0. self fail] 
		raise: Error
		withMessageText: Transfer canNotTransferAnAmountOfZeroErrorDescription .! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:51:58' prior: 50977608!
test03IsPossibleGettingDestinyAccountFromTransfer
	
	| sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self should: [Transfer from: sourceAccount to: destinyAccount anAmountOf: 0. self fail] 
		raise: Error
		withMessageText: Transfer canNotTransferAnAmountOfZeroErrorDescription .! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:52:16' prior: 50977107!
test02CanNotTransferAnAmountOfZeroErrorDescription 
	
	| sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self should: [Transfer from: sourceAccount to: destinyAccount anAmountOf: 0. self fail] 
		raise: Error
		withMessageText: Transfer canNotTransferAnAmountOfZeroErrorDescription .! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:53:12' prior: 50977122!
test03CanNotTransferANegativeAmountErrorDescription
	
	| sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self should: [Transfer from: sourceAccount to: destinyAccount anAmountOf: -100. self fail] 
		raise: Error
		withMessageText: Transfer canNotTransferANegativeAmountErrorDescription .! !
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:53:24' prior: 50977143!
canNotTransferANegativeAmountErrorDescription
	self shouldBeImplemented.! !
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:54:04' prior: 50977671!
canNotTransferANegativeAmountErrorDescription
	
	^ ' Can not transfer a negative amount '! !
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:55:01' prior: 50977563!
from: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer 

	(valueToTransfer = 0) ifTrue: [ self error: self canNotTransferAnAmountOfZeroErrorDescription ].
	(valueToTransfer  < 0) ifTrue: [ self error: self canNotTransferANegativeAmountErrorDescription ].
		
	^ Transfer new initializeFrom: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer .! !

!methodRemoval: TransferTest #test03IsPossibleGettingDestinyAccountFromTransfer stamp: 'ja 11/14/2020 19:28:34'!
test03IsPossibleGettingDestinyAccountFromTransfer
	
	| sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self should: [Transfer from: sourceAccount to: destinyAccount anAmountOf: 0. self fail] 
		raise: Error
		withMessageText: Transfer canNotTransferAnAmountOfZeroErrorDescription .!
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 17:03:02' prior: 50977179!
test04TransferIsRegisteredIntoInvolvedAccount
	
	| sourceAccount destinyAccount transfer |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	transfer _ Transfer from: sourceAccount to: destinyAccount anAmountOf: 100.
	
	self assert: sourceAccount transactions includes: transfer depositMade. 
	
	self assert: destinyAccount transactions includes: transfer withdrawMade.
	
	
	! !
!Transfer methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 17:03:36' prior: 50977200!
depositMade
	self shouldBeImplemented.! !
!Transfer methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 17:03:59' prior: 50977729!
depositMade
	
	^ nil! !

!classDefinition: #Transfer category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 19:28:34'!
Object subclass: #Transfer
	instanceVariableNames: 'value depositMade'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #Transfer category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 19:28:34'!
Object subclass: #Transfer
	instanceVariableNames: 'value depositMade withdrawMade'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!
!Transfer methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 17:05:37' prior: 50977453!
initializeFrom: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer 

	depositMade _ TransferDeposit register: valueToTransfer on: aDestinyAccount .
	withdrawMade _ TransferWithdraw register: valueToTransfer on: aSourceAccount .
	
	value _ valueToTransfer .! !
!TransferType methodsFor: 'no messages' stamp: 'ja 11/14/2020 17:06:54' prior: 50977232 overrides: 50964395!
affectBalance: aBalance

	self subclassResponsibility ! !
!TransferType methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 17:07:07' prior: 50977238 overrides: 50964391!
value 

	self subclassResponsibility ! !

!classDefinition: #Deposit category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 19:28:35'!
AccountTransaction subclass: #Deposit
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #Deposit category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 19:28:35'!
AccountTransaction subclass: #Deposit
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #TransferType category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 19:28:37'!
AccountTransaction subclass: #TransferType
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #TransferType category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 19:28:37'!
AccountTransaction subclass: #TransferType
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:29:11' prior: 50977482!
test01TransferAffectsSourceAndDestinyBalance
	
	| transfer sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	transfer  _ Transfer from: sourceAccount to: destinyAccount anAmountOf: 100.
	
	self assert: sourceAccount balance 

	
	! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:31:05' prior: 50977807!
test01TransferAffectsSourceAndDestinyBalance
	
	| transfer sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self assert: 0 equals: (sourceAccount balance).
	self assert: 0 equals: (destinyAccount balance).
	
	transfer  _ Transfer from: sourceAccount to: destinyAccount anAmountOf: 100.
	
	self assert: -100 equals: (sourceAccount balance).
	self assert: 100 equals: (destinyAccount balance).
	self assert: 100 equals: transfer value.	
	! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:31:42' prior: 50977820!
test01TransferAffectsSourceAndDestinyBalance
	
	| transfer sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self assert: 0 equals: sourceAccount balance.
	self assert: 0 equals: destinyAccount balance.
	
	transfer  _ Transfer from: sourceAccount to: destinyAccount anAmountOf: 100.
	
	self assert: -100 equals: sourceAccount balance.
	self assert: 100 equals: destinyAccount balance.
	self assert: 100 equals: transfer value.	
	! !
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:31:57' prior: 50977683!
from: aReceptiveAccount to: aReceptiveAccount2 anAmountOf: aSmallInteger 
	self shouldBeImplemented.! !

!classDefinition: 'Transfer class' category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 19:28:37'!
Transfer class
	instanceVariableNames: 'value'!
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:34:30' prior: 50977858!
from: aReceptiveAccount to: aReceptiveAccount2 anAmountOf: aSmallInteger 
	
	Deposit register: aSmallInteger on: aReceptiveAccount2 .
	Withdraw register: aSmallInteger on: aReceptiveAccount .
	value _ aSmallInteger .! !
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:34:50' prior: 50977869!
from: aSourceAccount to: aReceptiveAccount2 anAmountOf: aSmallInteger 
	
	Deposit register: aSmallInteger on: aReceptiveAccount2 .
	Withdraw register: aSmallInteger on: aSourceAccount .
	value _ aSmallInteger .! !
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:35:04' prior: 50977879!
from: aSourceAccount to: aDestinyAccount anAmountOf: aSmallInteger 
	
	Deposit register: aSmallInteger on: aDestinyAccount .
	Withdraw register: aSmallInteger on: aSourceAccount .
	value _ aSmallInteger .! !
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:35:29' prior: 50977889!
from: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer 
	
	Deposit register: valueToTransfer on: aDestinyAccount .
	Withdraw register: valueToTransfer on: aSourceAccount .
	value _ valueToTransfer .! !

!classDefinition: #Transfer category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 19:28:37'!
Object subclass: #Transfer
	instanceVariableNames: 'value'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!
!Transfer methodsFor: 'no messages' stamp: 'ja 11/14/2020 16:36:17' overrides: 16896425!
initialize

	value _ 0! !
!Transfer methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:36:58' prior: 50977380 overrides: 16881508!
value 

	^ value ! !

!methodRemoval: Transfer class #from:to:anAmountOf: stamp: 'ja 11/14/2020 19:28:37'!
from: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer 
	
	Deposit register: valueToTransfer on: aDestinyAccount .
	Withdraw register: valueToTransfer on: aSourceAccount .
	value _ valueToTransfer .!
!Transfer methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:38:06'!
from: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer 
	
	Deposit register: valueToTransfer on: aDestinyAccount .
	Withdraw register: valueToTransfer on: aSourceAccount .
	value _ valueToTransfer .! !

!classDefinition: 'Transfer class' category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 19:28:37'!
Transfer class
	instanceVariableNames: ''!

!classDefinition: 'Transfer class' category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 19:28:37'!
Transfer class
	instanceVariableNames: ''!
!Transfer class methodsFor: 'no messages' stamp: 'ja 11/14/2020 16:40:54'!
from: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer 

	Transfer new initializeFrom: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer .! !
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:41:02' prior: 50977953!
from: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer 

	^ Transfer new initializeFrom: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer .! !
!Transfer methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:41:20' prior: 50977754!
initializeFrom: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer 

	Deposit register: valueToTransfer on: aDestinyAccount .
	Withdraw register: valueToTransfer on: aSourceAccount .
	value _ valueToTransfer .! !

!methodRemoval: Transfer #from:to:anAmountOf: stamp: 'ja 11/14/2020 19:28:38'!
from: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer 
	
	Deposit register: valueToTransfer on: aDestinyAccount .
	Withdraw register: valueToTransfer on: aSourceAccount .
	value _ valueToTransfer .!

!methodRemoval: Transfer #initialize stamp: 'ja 11/14/2020 19:28:38'!
initialize

	value _ 0!
!Transfer methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:42:09' prior: 50977971!
initializeFrom: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer 

	Deposit register: valueToTransfer on: aDestinyAccount .
	Withdraw register: valueToTransfer on: aSourceAccount .
	
	value _ valueToTransfer .! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:42:27' prior: 50977839!
test01TransferAffectsSourceAndDestinyBalance
	
	| transfer sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self assert: 0 equals: sourceAccount balance.
	self assert: 0 equals: destinyAccount balance.
	
	transfer  _ Transfer from: sourceAccount to: destinyAccount anAmountOf: 100.
	
	self assert: -100 equals: sourceAccount balance.
	self assert: 100 equals: destinyAccount balance.
! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:42:57' prior: 50978005!
test01TransferAffectsSourceAndDestinyBalance
	
	| sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self assert: 0 equals: sourceAccount balance.
	self assert: 0 equals: destinyAccount balance.
	
	Transfer from: sourceAccount to: destinyAccount anAmountOf: 100.
	
	self assert: -100 equals: sourceAccount balance.
	self assert: 100 equals: destinyAccount balance.
! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:46:53'!
test02IsPossibleGettingSourceAccountFromTransfer
	
	| sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self assert: 0 equals: sourceAccount balance.
	self assert: 0 equals: destinyAccount balance.
	
	self should: [Transfer from: sourceAccount to: destinyAccount anAmountOf: 0. self fail] 
		raise:  Error
		withMessageText: Transfer canNotTransferAnAmountOfZeroErrorDescription.! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:47:27'!
test02CanNotTransferAnAmountOfZero
	
	| sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self assert: 0 equals: sourceAccount balance.
	self assert: 0 equals: destinyAccount balance.
	
	self should: [Transfer from: sourceAccount to: destinyAccount anAmountOf: 0. self fail] 
		raise:  Error
		withMessageText: Transfer canNotTransferAnAmountOfZeroErrorDescription.! !

!methodRemoval: TransferTest #test02IsPossibleGettingSourceAccountFromTransfer stamp: 'ja 11/14/2020 19:28:38'!
test02IsPossibleGettingSourceAccountFromTransfer
	
	| sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self assert: 0 equals: sourceAccount balance.
	self assert: 0 equals: destinyAccount balance.
	
	self should: [Transfer from: sourceAccount to: destinyAccount anAmountOf: 0. self fail] 
		raise:  Error
		withMessageText: Transfer canNotTransferAnAmountOfZeroErrorDescription.!
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:47:42' prior: 50977557!
canNotTransferAnAmountOfZeroErrorDescription
	self shouldBeImplemented.! !
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:48:16' prior: 50978092!
canNotTransferAnAmountOfZeroErrorDescription
	
	^ 'Can not transfer an amount of zero'! !
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:49:41' prior: 50977962!
from: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer 

	(valueToTransfer = 0) ifTrue: [ self error: self canNotTransferAnAmountOfZeroErrorDescription ].
		
	^ Transfer new initializeFrom: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer .! !

!methodRemoval: TransferTest #test02CanNotTransferAnAmountOfZero stamp: 'ja 11/14/2020 19:28:38'!
test02CanNotTransferAnAmountOfZero
	
	| sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self assert: 0 equals: sourceAccount balance.
	self assert: 0 equals: destinyAccount balance.
	
	self should: [Transfer from: sourceAccount to: destinyAccount anAmountOf: 0. self fail] 
		raise:  Error
		withMessageText: Transfer canNotTransferAnAmountOfZeroErrorDescription.!
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:51:45'!
test03IsPossibleGettingDestinyAccountFromTransfer
	
	| sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self assert: 0 equals: sourceAccount balance.
	self assert: 0 equals: destinyAccount balance.
	
	self should: [Transfer from: sourceAccount to: destinyAccount anAmountOf: 0.] 
		raise: Error
		withMessageText: Transfer canNotTransferAnAmountOfZeroErrorDescription .! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:51:52' prior: 50978132!
test03IsPossibleGettingDestinyAccountFromTransfer
	
	| sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self assert: 0 equals: sourceAccount balance.
	self assert: 0 equals: destinyAccount balance.
	
	self should: [Transfer from: sourceAccount to: destinyAccount anAmountOf: 0. self fail] 
		raise: Error
		withMessageText: Transfer canNotTransferAnAmountOfZeroErrorDescription .! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:51:58' prior: 50978149!
test03IsPossibleGettingDestinyAccountFromTransfer
	
	| sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self should: [Transfer from: sourceAccount to: destinyAccount anAmountOf: 0. self fail] 
		raise: Error
		withMessageText: Transfer canNotTransferAnAmountOfZeroErrorDescription .! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:52:16' prior: 50977641!
test02CanNotTransferAnAmountOfZeroErrorDescription 
	
	| sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self should: [Transfer from: sourceAccount to: destinyAccount anAmountOf: 0. self fail] 
		raise: Error
		withMessageText: Transfer canNotTransferAnAmountOfZeroErrorDescription .! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:53:12' prior: 50977656!
test03CanNotTransferANegativeAmountErrorDescription
	
	| sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self should: [Transfer from: sourceAccount to: destinyAccount anAmountOf: -100. self fail] 
		raise: Error
		withMessageText: Transfer canNotTransferANegativeAmountErrorDescription .! !
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:53:24' prior: 50977677!
canNotTransferANegativeAmountErrorDescription
	self shouldBeImplemented.! !
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:54:04' prior: 50978212!
canNotTransferANegativeAmountErrorDescription
	
	^ ' Can not transfer a negative amount '! !
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:55:01' prior: 50978104!
from: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer 

	(valueToTransfer = 0) ifTrue: [ self error: self canNotTransferAnAmountOfZeroErrorDescription ].
	(valueToTransfer  < 0) ifTrue: [ self error: self canNotTransferANegativeAmountErrorDescription ].
		
	^ Transfer new initializeFrom: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer .! !

!methodRemoval: TransferTest #test03IsPossibleGettingDestinyAccountFromTransfer stamp: 'ja 11/14/2020 19:28:38'!
test03IsPossibleGettingDestinyAccountFromTransfer
	
	| sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self should: [Transfer from: sourceAccount to: destinyAccount anAmountOf: 0. self fail] 
		raise: Error
		withMessageText: Transfer canNotTransferAnAmountOfZeroErrorDescription .!
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 17:03:02' prior: 50977713!
test04TransferIsRegisteredIntoInvolvedAccount
	
	| sourceAccount destinyAccount transfer |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	transfer _ Transfer from: sourceAccount to: destinyAccount anAmountOf: 100.
	
	self assert: sourceAccount transactions includes: transfer depositMade. 
	
	self assert: destinyAccount transactions includes: transfer withdrawMade.
	
	
	! !
!Transfer methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 17:03:36' prior: 50977734!
depositMade
	self shouldBeImplemented.! !
!Transfer methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 17:03:59' prior: 50978270!
depositMade
	
	^ nil! !

!classDefinition: #Transfer category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 19:28:38'!
Object subclass: #Transfer
	instanceVariableNames: 'value depositMade'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #Transfer category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 19:28:38'!
Object subclass: #Transfer
	instanceVariableNames: 'value depositMade withdrawMade'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!
!Transfer methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 17:05:37' prior: 50977994!
initializeFrom: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer 

	depositMade _ TransferDeposit register: valueToTransfer on: aDestinyAccount .
	withdrawMade _ TransferWithdraw register: valueToTransfer on: aSourceAccount .
	
	value _ valueToTransfer .! !
!TransferType methodsFor: 'no messages' stamp: 'ja 11/14/2020 17:06:54' prior: 50977766 overrides: 50964395!
affectBalance: aBalance

	self subclassResponsibility ! !
!TransferType methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 17:07:07' prior: 50977772 overrides: 50964391!
value 

	self subclassResponsibility ! !

!classDefinition: #Deposit category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 19:28:38'!
AccountTransaction subclass: #Deposit
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #Deposit category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 19:28:38'!
AccountTransaction subclass: #Deposit
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #Withdraw category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 19:28:38'!
AccountTransaction subclass: #Withdraw
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #TransferType category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 19:28:40'!
AccountTransaction subclass: #TransferType
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #TransferType category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 19:28:40'!
AccountTransaction subclass: #TransferType
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:29:11' prior: 50978023!
test01TransferAffectsSourceAndDestinyBalance
	
	| transfer sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	transfer  _ Transfer from: sourceAccount to: destinyAccount anAmountOf: 100.
	
	self assert: sourceAccount balance 

	
	! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:31:05' prior: 50978356!
test01TransferAffectsSourceAndDestinyBalance
	
	| transfer sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self assert: 0 equals: (sourceAccount balance).
	self assert: 0 equals: (destinyAccount balance).
	
	transfer  _ Transfer from: sourceAccount to: destinyAccount anAmountOf: 100.
	
	self assert: -100 equals: (sourceAccount balance).
	self assert: 100 equals: (destinyAccount balance).
	self assert: 100 equals: transfer value.	
	! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:31:42' prior: 50978369!
test01TransferAffectsSourceAndDestinyBalance
	
	| transfer sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self assert: 0 equals: sourceAccount balance.
	self assert: 0 equals: destinyAccount balance.
	
	transfer  _ Transfer from: sourceAccount to: destinyAccount anAmountOf: 100.
	
	self assert: -100 equals: sourceAccount balance.
	self assert: 100 equals: destinyAccount balance.
	self assert: 100 equals: transfer value.	
	! !
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:31:57' prior: 50978224!
from: aReceptiveAccount to: aReceptiveAccount2 anAmountOf: aSmallInteger 
	self shouldBeImplemented.! !

!classDefinition: 'Transfer class' category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 19:28:40'!
Transfer class
	instanceVariableNames: 'value'!
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:34:30' prior: 50978407!
from: aReceptiveAccount to: aReceptiveAccount2 anAmountOf: aSmallInteger 
	
	Deposit register: aSmallInteger on: aReceptiveAccount2 .
	Withdraw register: aSmallInteger on: aReceptiveAccount .
	value _ aSmallInteger .! !
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:34:50' prior: 50978418!
from: aSourceAccount to: aReceptiveAccount2 anAmountOf: aSmallInteger 
	
	Deposit register: aSmallInteger on: aReceptiveAccount2 .
	Withdraw register: aSmallInteger on: aSourceAccount .
	value _ aSmallInteger .! !
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:35:04' prior: 50978428!
from: aSourceAccount to: aDestinyAccount anAmountOf: aSmallInteger 
	
	Deposit register: aSmallInteger on: aDestinyAccount .
	Withdraw register: aSmallInteger on: aSourceAccount .
	value _ aSmallInteger .! !
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:35:29' prior: 50978438!
from: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer 
	
	Deposit register: valueToTransfer on: aDestinyAccount .
	Withdraw register: valueToTransfer on: aSourceAccount .
	value _ valueToTransfer .! !

!classDefinition: #Transfer category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 19:28:40'!
Object subclass: #Transfer
	instanceVariableNames: 'value'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!
!Transfer methodsFor: 'no messages' stamp: 'ja 11/14/2020 16:36:17' overrides: 16896425!
initialize

	value _ 0! !
!Transfer methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:36:58' prior: 50977921 overrides: 16881508!
value 

	^ value ! !

!methodRemoval: Transfer class #from:to:anAmountOf: stamp: 'ja 11/14/2020 19:28:40'!
from: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer 
	
	Deposit register: valueToTransfer on: aDestinyAccount .
	Withdraw register: valueToTransfer on: aSourceAccount .
	value _ valueToTransfer .!
!Transfer methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:38:06'!
from: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer 
	
	Deposit register: valueToTransfer on: aDestinyAccount .
	Withdraw register: valueToTransfer on: aSourceAccount .
	value _ valueToTransfer .! !

!classDefinition: 'Transfer class' category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 19:28:40'!
Transfer class
	instanceVariableNames: ''!

!classDefinition: 'Transfer class' category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 19:28:40'!
Transfer class
	instanceVariableNames: ''!
!Transfer class methodsFor: 'no messages' stamp: 'ja 11/14/2020 16:40:54'!
from: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer 

	Transfer new initializeFrom: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer .! !
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:41:02' prior: 50978502!
from: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer 

	^ Transfer new initializeFrom: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer .! !
!Transfer methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:41:20' prior: 50978295!
initializeFrom: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer 

	Deposit register: valueToTransfer on: aDestinyAccount .
	Withdraw register: valueToTransfer on: aSourceAccount .
	value _ valueToTransfer .! !

!methodRemoval: Transfer #from:to:anAmountOf: stamp: 'ja 11/14/2020 19:28:40'!
from: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer 
	
	Deposit register: valueToTransfer on: aDestinyAccount .
	Withdraw register: valueToTransfer on: aSourceAccount .
	value _ valueToTransfer .!

!methodRemoval: Transfer #initialize stamp: 'ja 11/14/2020 19:28:40'!
initialize

	value _ 0!
!Transfer methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:42:09' prior: 50978520!
initializeFrom: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer 

	Deposit register: valueToTransfer on: aDestinyAccount .
	Withdraw register: valueToTransfer on: aSourceAccount .
	
	value _ valueToTransfer .! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:42:27' prior: 50978388!
test01TransferAffectsSourceAndDestinyBalance
	
	| transfer sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self assert: 0 equals: sourceAccount balance.
	self assert: 0 equals: destinyAccount balance.
	
	transfer  _ Transfer from: sourceAccount to: destinyAccount anAmountOf: 100.
	
	self assert: -100 equals: sourceAccount balance.
	self assert: 100 equals: destinyAccount balance.
! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:42:57' prior: 50978554!
test01TransferAffectsSourceAndDestinyBalance
	
	| sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self assert: 0 equals: sourceAccount balance.
	self assert: 0 equals: destinyAccount balance.
	
	Transfer from: sourceAccount to: destinyAccount anAmountOf: 100.
	
	self assert: -100 equals: sourceAccount balance.
	self assert: 100 equals: destinyAccount balance.
! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:46:53'!
test02IsPossibleGettingSourceAccountFromTransfer
	
	| sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self assert: 0 equals: sourceAccount balance.
	self assert: 0 equals: destinyAccount balance.
	
	self should: [Transfer from: sourceAccount to: destinyAccount anAmountOf: 0. self fail] 
		raise:  Error
		withMessageText: Transfer canNotTransferAnAmountOfZeroErrorDescription.! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:47:27'!
test02CanNotTransferAnAmountOfZero
	
	| sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self assert: 0 equals: sourceAccount balance.
	self assert: 0 equals: destinyAccount balance.
	
	self should: [Transfer from: sourceAccount to: destinyAccount anAmountOf: 0. self fail] 
		raise:  Error
		withMessageText: Transfer canNotTransferAnAmountOfZeroErrorDescription.! !

!methodRemoval: TransferTest #test02IsPossibleGettingSourceAccountFromTransfer stamp: 'ja 11/14/2020 19:28:40'!
test02IsPossibleGettingSourceAccountFromTransfer
	
	| sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self assert: 0 equals: sourceAccount balance.
	self assert: 0 equals: destinyAccount balance.
	
	self should: [Transfer from: sourceAccount to: destinyAccount anAmountOf: 0. self fail] 
		raise:  Error
		withMessageText: Transfer canNotTransferAnAmountOfZeroErrorDescription.!
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:47:42' prior: 50978098!
canNotTransferAnAmountOfZeroErrorDescription
	self shouldBeImplemented.! !
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:48:16' prior: 50978641!
canNotTransferAnAmountOfZeroErrorDescription
	
	^ 'Can not transfer an amount of zero'! !
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:49:41' prior: 50978511!
from: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer 

	(valueToTransfer = 0) ifTrue: [ self error: self canNotTransferAnAmountOfZeroErrorDescription ].
		
	^ Transfer new initializeFrom: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer .! !

!methodRemoval: TransferTest #test02CanNotTransferAnAmountOfZero stamp: 'ja 11/14/2020 19:28:40'!
test02CanNotTransferAnAmountOfZero
	
	| sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self assert: 0 equals: sourceAccount balance.
	self assert: 0 equals: destinyAccount balance.
	
	self should: [Transfer from: sourceAccount to: destinyAccount anAmountOf: 0. self fail] 
		raise:  Error
		withMessageText: Transfer canNotTransferAnAmountOfZeroErrorDescription.!
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:51:45'!
test03IsPossibleGettingDestinyAccountFromTransfer
	
	| sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self assert: 0 equals: sourceAccount balance.
	self assert: 0 equals: destinyAccount balance.
	
	self should: [Transfer from: sourceAccount to: destinyAccount anAmountOf: 0.] 
		raise: Error
		withMessageText: Transfer canNotTransferAnAmountOfZeroErrorDescription .! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:51:52' prior: 50978681!
test03IsPossibleGettingDestinyAccountFromTransfer
	
	| sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self assert: 0 equals: sourceAccount balance.
	self assert: 0 equals: destinyAccount balance.
	
	self should: [Transfer from: sourceAccount to: destinyAccount anAmountOf: 0. self fail] 
		raise: Error
		withMessageText: Transfer canNotTransferAnAmountOfZeroErrorDescription .! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:51:58' prior: 50978698!
test03IsPossibleGettingDestinyAccountFromTransfer
	
	| sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self should: [Transfer from: sourceAccount to: destinyAccount anAmountOf: 0. self fail] 
		raise: Error
		withMessageText: Transfer canNotTransferAnAmountOfZeroErrorDescription .! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:52:16' prior: 50978182!
test02CanNotTransferAnAmountOfZeroErrorDescription 
	
	| sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self should: [Transfer from: sourceAccount to: destinyAccount anAmountOf: 0. self fail] 
		raise: Error
		withMessageText: Transfer canNotTransferAnAmountOfZeroErrorDescription .! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:53:12' prior: 50978197!
test03CanNotTransferANegativeAmountErrorDescription
	
	| sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self should: [Transfer from: sourceAccount to: destinyAccount anAmountOf: -100. self fail] 
		raise: Error
		withMessageText: Transfer canNotTransferANegativeAmountErrorDescription .! !
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:53:24' prior: 50978218!
canNotTransferANegativeAmountErrorDescription
	self shouldBeImplemented.! !
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:54:04' prior: 50978761!
canNotTransferANegativeAmountErrorDescription
	
	^ ' Can not transfer a negative amount '! !
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:55:01' prior: 50978653!
from: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer 

	(valueToTransfer = 0) ifTrue: [ self error: self canNotTransferAnAmountOfZeroErrorDescription ].
	(valueToTransfer  < 0) ifTrue: [ self error: self canNotTransferANegativeAmountErrorDescription ].
		
	^ Transfer new initializeFrom: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer .! !

!methodRemoval: TransferTest #test03IsPossibleGettingDestinyAccountFromTransfer stamp: 'ja 11/14/2020 19:28:40'!
test03IsPossibleGettingDestinyAccountFromTransfer
	
	| sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self should: [Transfer from: sourceAccount to: destinyAccount anAmountOf: 0. self fail] 
		raise: Error
		withMessageText: Transfer canNotTransferAnAmountOfZeroErrorDescription .!
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 17:03:02' prior: 50978254!
test04TransferIsRegisteredIntoInvolvedAccount
	
	| sourceAccount destinyAccount transfer |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	transfer _ Transfer from: sourceAccount to: destinyAccount anAmountOf: 100.
	
	self assert: sourceAccount transactions includes: transfer depositMade. 
	
	self assert: destinyAccount transactions includes: transfer withdrawMade.
	
	
	! !
!Transfer methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 17:03:36' prior: 50978275!
depositMade
	self shouldBeImplemented.! !
!Transfer methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 17:03:59' prior: 50978819!
depositMade
	
	^ nil! !

!classDefinition: #Transfer category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 19:28:41'!
Object subclass: #Transfer
	instanceVariableNames: 'value depositMade'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #Transfer category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 19:28:41'!
Object subclass: #Transfer
	instanceVariableNames: 'value depositMade withdrawMade'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!
!Transfer methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 17:05:37' prior: 50978543!
initializeFrom: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer 

	depositMade _ TransferDeposit register: valueToTransfer on: aDestinyAccount .
	withdrawMade _ TransferWithdraw register: valueToTransfer on: aSourceAccount .
	
	value _ valueToTransfer .! !
!TransferType methodsFor: 'no messages' stamp: 'ja 11/14/2020 17:06:54' prior: 50978307 overrides: 50964395!
affectBalance: aBalance

	self subclassResponsibility ! !
!TransferType methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 17:07:07' prior: 50978313 overrides: 50964391!
value 

	self subclassResponsibility ! !

!classDefinition: #Deposit category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 19:28:41'!
AccountTransaction subclass: #Deposit
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #Deposit category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 19:28:41'!
AccountTransaction subclass: #Deposit
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #Withdraw category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 19:28:41'!
AccountTransaction subclass: #Withdraw
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #Withdraw category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 19:28:41'!
AccountTransaction subclass: #Withdraw
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #TransferType category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 19:28:42'!
AccountTransaction subclass: #TransferType
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #TransferType category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 19:28:42'!
AccountTransaction subclass: #TransferType
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:29:11' prior: 50978572!
test01TransferAffectsSourceAndDestinyBalance
	
	| transfer sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	transfer  _ Transfer from: sourceAccount to: destinyAccount anAmountOf: 100.
	
	self assert: sourceAccount balance 

	
	! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:31:05' prior: 50978912!
test01TransferAffectsSourceAndDestinyBalance
	
	| transfer sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self assert: 0 equals: (sourceAccount balance).
	self assert: 0 equals: (destinyAccount balance).
	
	transfer  _ Transfer from: sourceAccount to: destinyAccount anAmountOf: 100.
	
	self assert: -100 equals: (sourceAccount balance).
	self assert: 100 equals: (destinyAccount balance).
	self assert: 100 equals: transfer value.	
	! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:31:42' prior: 50978925!
test01TransferAffectsSourceAndDestinyBalance
	
	| transfer sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self assert: 0 equals: sourceAccount balance.
	self assert: 0 equals: destinyAccount balance.
	
	transfer  _ Transfer from: sourceAccount to: destinyAccount anAmountOf: 100.
	
	self assert: -100 equals: sourceAccount balance.
	self assert: 100 equals: destinyAccount balance.
	self assert: 100 equals: transfer value.	
	! !
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:31:57' prior: 50978773!
from: aReceptiveAccount to: aReceptiveAccount2 anAmountOf: aSmallInteger 
	self shouldBeImplemented.! !

!classDefinition: 'Transfer class' category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 19:28:42'!
Transfer class
	instanceVariableNames: 'value'!
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:34:30' prior: 50978963!
from: aReceptiveAccount to: aReceptiveAccount2 anAmountOf: aSmallInteger 
	
	Deposit register: aSmallInteger on: aReceptiveAccount2 .
	Withdraw register: aSmallInteger on: aReceptiveAccount .
	value _ aSmallInteger .! !
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:34:50' prior: 50978974!
from: aSourceAccount to: aReceptiveAccount2 anAmountOf: aSmallInteger 
	
	Deposit register: aSmallInteger on: aReceptiveAccount2 .
	Withdraw register: aSmallInteger on: aSourceAccount .
	value _ aSmallInteger .! !
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:35:04' prior: 50978984!
from: aSourceAccount to: aDestinyAccount anAmountOf: aSmallInteger 
	
	Deposit register: aSmallInteger on: aDestinyAccount .
	Withdraw register: aSmallInteger on: aSourceAccount .
	value _ aSmallInteger .! !
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:35:29' prior: 50978994!
from: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer 
	
	Deposit register: valueToTransfer on: aDestinyAccount .
	Withdraw register: valueToTransfer on: aSourceAccount .
	value _ valueToTransfer .! !

!classDefinition: #Transfer category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 19:28:42'!
Object subclass: #Transfer
	instanceVariableNames: 'value'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!
!Transfer methodsFor: 'no messages' stamp: 'ja 11/14/2020 16:36:17' overrides: 16896425!
initialize

	value _ 0! !
!Transfer methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:36:58' prior: 50978470 overrides: 16881508!
value 

	^ value ! !

!methodRemoval: Transfer class #from:to:anAmountOf: stamp: 'ja 11/14/2020 19:28:42'!
from: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer 
	
	Deposit register: valueToTransfer on: aDestinyAccount .
	Withdraw register: valueToTransfer on: aSourceAccount .
	value _ valueToTransfer .!
!Transfer methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:38:06'!
from: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer 
	
	Deposit register: valueToTransfer on: aDestinyAccount .
	Withdraw register: valueToTransfer on: aSourceAccount .
	value _ valueToTransfer .! !

!classDefinition: 'Transfer class' category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 19:28:42'!
Transfer class
	instanceVariableNames: ''!

!classDefinition: 'Transfer class' category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 19:28:42'!
Transfer class
	instanceVariableNames: ''!
!Transfer class methodsFor: 'no messages' stamp: 'ja 11/14/2020 16:40:54'!
from: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer 

	Transfer new initializeFrom: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer .! !
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:41:02' prior: 50979058!
from: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer 

	^ Transfer new initializeFrom: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer .! !
!Transfer methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:41:20' prior: 50978844!
initializeFrom: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer 

	Deposit register: valueToTransfer on: aDestinyAccount .
	Withdraw register: valueToTransfer on: aSourceAccount .
	value _ valueToTransfer .! !

!methodRemoval: Transfer #from:to:anAmountOf: stamp: 'ja 11/14/2020 19:28:42'!
from: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer 
	
	Deposit register: valueToTransfer on: aDestinyAccount .
	Withdraw register: valueToTransfer on: aSourceAccount .
	value _ valueToTransfer .!

!methodRemoval: Transfer #initialize stamp: 'ja 11/14/2020 19:28:42'!
initialize

	value _ 0!
!Transfer methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:42:09' prior: 50979076!
initializeFrom: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer 

	Deposit register: valueToTransfer on: aDestinyAccount .
	Withdraw register: valueToTransfer on: aSourceAccount .
	
	value _ valueToTransfer .! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:42:27' prior: 50978944!
test01TransferAffectsSourceAndDestinyBalance
	
	| transfer sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self assert: 0 equals: sourceAccount balance.
	self assert: 0 equals: destinyAccount balance.
	
	transfer  _ Transfer from: sourceAccount to: destinyAccount anAmountOf: 100.
	
	self assert: -100 equals: sourceAccount balance.
	self assert: 100 equals: destinyAccount balance.
! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:42:57' prior: 50979110!
test01TransferAffectsSourceAndDestinyBalance
	
	| sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self assert: 0 equals: sourceAccount balance.
	self assert: 0 equals: destinyAccount balance.
	
	Transfer from: sourceAccount to: destinyAccount anAmountOf: 100.
	
	self assert: -100 equals: sourceAccount balance.
	self assert: 100 equals: destinyAccount balance.
! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:46:53'!
test02IsPossibleGettingSourceAccountFromTransfer
	
	| sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self assert: 0 equals: sourceAccount balance.
	self assert: 0 equals: destinyAccount balance.
	
	self should: [Transfer from: sourceAccount to: destinyAccount anAmountOf: 0. self fail] 
		raise:  Error
		withMessageText: Transfer canNotTransferAnAmountOfZeroErrorDescription.! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:47:27'!
test02CanNotTransferAnAmountOfZero
	
	| sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self assert: 0 equals: sourceAccount balance.
	self assert: 0 equals: destinyAccount balance.
	
	self should: [Transfer from: sourceAccount to: destinyAccount anAmountOf: 0. self fail] 
		raise:  Error
		withMessageText: Transfer canNotTransferAnAmountOfZeroErrorDescription.! !

!methodRemoval: TransferTest #test02IsPossibleGettingSourceAccountFromTransfer stamp: 'ja 11/14/2020 19:28:42'!
test02IsPossibleGettingSourceAccountFromTransfer
	
	| sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self assert: 0 equals: sourceAccount balance.
	self assert: 0 equals: destinyAccount balance.
	
	self should: [Transfer from: sourceAccount to: destinyAccount anAmountOf: 0. self fail] 
		raise:  Error
		withMessageText: Transfer canNotTransferAnAmountOfZeroErrorDescription.!
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:47:42' prior: 50978647!
canNotTransferAnAmountOfZeroErrorDescription
	self shouldBeImplemented.! !
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:48:16' prior: 50979197!
canNotTransferAnAmountOfZeroErrorDescription
	
	^ 'Can not transfer an amount of zero'! !
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:49:41' prior: 50979067!
from: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer 

	(valueToTransfer = 0) ifTrue: [ self error: self canNotTransferAnAmountOfZeroErrorDescription ].
		
	^ Transfer new initializeFrom: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer .! !

!methodRemoval: TransferTest #test02CanNotTransferAnAmountOfZero stamp: 'ja 11/14/2020 19:28:42'!
test02CanNotTransferAnAmountOfZero
	
	| sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self assert: 0 equals: sourceAccount balance.
	self assert: 0 equals: destinyAccount balance.
	
	self should: [Transfer from: sourceAccount to: destinyAccount anAmountOf: 0. self fail] 
		raise:  Error
		withMessageText: Transfer canNotTransferAnAmountOfZeroErrorDescription.!
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:51:45'!
test03IsPossibleGettingDestinyAccountFromTransfer
	
	| sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self assert: 0 equals: sourceAccount balance.
	self assert: 0 equals: destinyAccount balance.
	
	self should: [Transfer from: sourceAccount to: destinyAccount anAmountOf: 0.] 
		raise: Error
		withMessageText: Transfer canNotTransferAnAmountOfZeroErrorDescription .! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:51:52' prior: 50979237!
test03IsPossibleGettingDestinyAccountFromTransfer
	
	| sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self assert: 0 equals: sourceAccount balance.
	self assert: 0 equals: destinyAccount balance.
	
	self should: [Transfer from: sourceAccount to: destinyAccount anAmountOf: 0. self fail] 
		raise: Error
		withMessageText: Transfer canNotTransferAnAmountOfZeroErrorDescription .! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:51:58' prior: 50979254!
test03IsPossibleGettingDestinyAccountFromTransfer
	
	| sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self should: [Transfer from: sourceAccount to: destinyAccount anAmountOf: 0. self fail] 
		raise: Error
		withMessageText: Transfer canNotTransferAnAmountOfZeroErrorDescription .! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:52:16' prior: 50978731!
test02CanNotTransferAnAmountOfZeroErrorDescription 
	
	| sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self should: [Transfer from: sourceAccount to: destinyAccount anAmountOf: 0. self fail] 
		raise: Error
		withMessageText: Transfer canNotTransferAnAmountOfZeroErrorDescription .! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:53:12' prior: 50978746!
test03CanNotTransferANegativeAmountErrorDescription
	
	| sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self should: [Transfer from: sourceAccount to: destinyAccount anAmountOf: -100. self fail] 
		raise: Error
		withMessageText: Transfer canNotTransferANegativeAmountErrorDescription .! !
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:53:24' prior: 50978767!
canNotTransferANegativeAmountErrorDescription
	self shouldBeImplemented.! !
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:54:04' prior: 50979317!
canNotTransferANegativeAmountErrorDescription
	
	^ ' Can not transfer a negative amount '! !
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:55:01' prior: 50979209!
from: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer 

	(valueToTransfer = 0) ifTrue: [ self error: self canNotTransferAnAmountOfZeroErrorDescription ].
	(valueToTransfer  < 0) ifTrue: [ self error: self canNotTransferANegativeAmountErrorDescription ].
		
	^ Transfer new initializeFrom: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer .! !

!methodRemoval: TransferTest #test03IsPossibleGettingDestinyAccountFromTransfer stamp: 'ja 11/14/2020 19:28:42'!
test03IsPossibleGettingDestinyAccountFromTransfer
	
	| sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self should: [Transfer from: sourceAccount to: destinyAccount anAmountOf: 0. self fail] 
		raise: Error
		withMessageText: Transfer canNotTransferAnAmountOfZeroErrorDescription .!
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 17:03:02' prior: 50978803!
test04TransferIsRegisteredIntoInvolvedAccount
	
	| sourceAccount destinyAccount transfer |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	transfer _ Transfer from: sourceAccount to: destinyAccount anAmountOf: 100.
	
	self assert: sourceAccount transactions includes: transfer depositMade. 
	
	self assert: destinyAccount transactions includes: transfer withdrawMade.
	
	
	! !
!Transfer methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 17:03:36' prior: 50978824!
depositMade
	self shouldBeImplemented.! !
!Transfer methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 17:03:59' prior: 50979375!
depositMade
	
	^ nil! !

!classDefinition: #Transfer category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 19:28:43'!
Object subclass: #Transfer
	instanceVariableNames: 'value depositMade'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #Transfer category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 19:28:43'!
Object subclass: #Transfer
	instanceVariableNames: 'value depositMade withdrawMade'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!
!Transfer methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 17:05:37' prior: 50979099!
initializeFrom: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer 

	depositMade _ TransferDeposit register: valueToTransfer on: aDestinyAccount .
	withdrawMade _ TransferWithdraw register: valueToTransfer on: aSourceAccount .
	
	value _ valueToTransfer .! !
!TransferType methodsFor: 'no messages' stamp: 'ja 11/14/2020 17:06:54' prior: 50978856 overrides: 50964395!
affectBalance: aBalance

	self subclassResponsibility ! !
!TransferType methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 17:07:07' prior: 50978862 overrides: 50964391!
value 

	self subclassResponsibility ! !

!classDefinition: #Deposit category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 19:28:43'!
AccountTransaction subclass: #Deposit
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #Deposit category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 19:28:43'!
AccountTransaction subclass: #Deposit
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #Withdraw category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 19:28:43'!
AccountTransaction subclass: #Withdraw
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #Withdraw category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 19:28:43'!
AccountTransaction subclass: #Withdraw
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #TransferType category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 19:28:58'!
AccountTransaction subclass: #TransferType
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #TransferType category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 19:28:58'!
AccountTransaction subclass: #TransferType
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:29:11' prior: 50979128!
test01TransferAffectsSourceAndDestinyBalance
	
	| transfer sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	transfer  _ Transfer from: sourceAccount to: destinyAccount anAmountOf: 100.
	
	self assert: sourceAccount balance 

	
	! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:31:05' prior: 50979468!
test01TransferAffectsSourceAndDestinyBalance
	
	| transfer sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self assert: 0 equals: (sourceAccount balance).
	self assert: 0 equals: (destinyAccount balance).
	
	transfer  _ Transfer from: sourceAccount to: destinyAccount anAmountOf: 100.
	
	self assert: -100 equals: (sourceAccount balance).
	self assert: 100 equals: (destinyAccount balance).
	self assert: 100 equals: transfer value.	
	! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:31:42' prior: 50979481!
test01TransferAffectsSourceAndDestinyBalance
	
	| transfer sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self assert: 0 equals: sourceAccount balance.
	self assert: 0 equals: destinyAccount balance.
	
	transfer  _ Transfer from: sourceAccount to: destinyAccount anAmountOf: 100.
	
	self assert: -100 equals: sourceAccount balance.
	self assert: 100 equals: destinyAccount balance.
	self assert: 100 equals: transfer value.	
	! !
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:31:57' prior: 50979329!
from: aReceptiveAccount to: aReceptiveAccount2 anAmountOf: aSmallInteger 
	self shouldBeImplemented.! !

!classDefinition: 'Transfer class' category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 19:28:58'!
Transfer class
	instanceVariableNames: 'value'!
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:34:30' prior: 50979519!
from: aReceptiveAccount to: aReceptiveAccount2 anAmountOf: aSmallInteger 
	
	Deposit register: aSmallInteger on: aReceptiveAccount2 .
	Withdraw register: aSmallInteger on: aReceptiveAccount .
	value _ aSmallInteger .! !
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:34:50' prior: 50979530!
from: aSourceAccount to: aReceptiveAccount2 anAmountOf: aSmallInteger 
	
	Deposit register: aSmallInteger on: aReceptiveAccount2 .
	Withdraw register: aSmallInteger on: aSourceAccount .
	value _ aSmallInteger .! !
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:35:04' prior: 50979540!
from: aSourceAccount to: aDestinyAccount anAmountOf: aSmallInteger 
	
	Deposit register: aSmallInteger on: aDestinyAccount .
	Withdraw register: aSmallInteger on: aSourceAccount .
	value _ aSmallInteger .! !
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:35:29' prior: 50979550!
from: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer 
	
	Deposit register: valueToTransfer on: aDestinyAccount .
	Withdraw register: valueToTransfer on: aSourceAccount .
	value _ valueToTransfer .! !

!classDefinition: #Transfer category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 19:28:58'!
Object subclass: #Transfer
	instanceVariableNames: 'value'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!
!Transfer methodsFor: 'no messages' stamp: 'ja 11/14/2020 16:36:17' overrides: 16896425!
initialize

	value _ 0! !
!Transfer methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:36:58' prior: 50979026 overrides: 16881508!
value 

	^ value ! !

!methodRemoval: Transfer class #from:to:anAmountOf: stamp: 'ja 11/14/2020 19:28:58'!
from: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer 
	
	Deposit register: valueToTransfer on: aDestinyAccount .
	Withdraw register: valueToTransfer on: aSourceAccount .
	value _ valueToTransfer .!
!Transfer methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:38:06'!
from: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer 
	
	Deposit register: valueToTransfer on: aDestinyAccount .
	Withdraw register: valueToTransfer on: aSourceAccount .
	value _ valueToTransfer .! !

!classDefinition: 'Transfer class' category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 19:28:59'!
Transfer class
	instanceVariableNames: ''!

!classDefinition: 'Transfer class' category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 19:28:59'!
Transfer class
	instanceVariableNames: ''!
!Transfer class methodsFor: 'no messages' stamp: 'ja 11/14/2020 16:40:54'!
from: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer 

	Transfer new initializeFrom: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer .! !
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:41:02' prior: 50979614!
from: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer 

	^ Transfer new initializeFrom: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer .! !
!Transfer methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:41:20' prior: 50979400!
initializeFrom: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer 

	Deposit register: valueToTransfer on: aDestinyAccount .
	Withdraw register: valueToTransfer on: aSourceAccount .
	value _ valueToTransfer .! !

!methodRemoval: Transfer #from:to:anAmountOf: stamp: 'ja 11/14/2020 19:28:59'!
from: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer 
	
	Deposit register: valueToTransfer on: aDestinyAccount .
	Withdraw register: valueToTransfer on: aSourceAccount .
	value _ valueToTransfer .!

!methodRemoval: Transfer #initialize stamp: 'ja 11/14/2020 19:28:59'!
initialize

	value _ 0!
!Transfer methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:42:09' prior: 50979632!
initializeFrom: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer 

	Deposit register: valueToTransfer on: aDestinyAccount .
	Withdraw register: valueToTransfer on: aSourceAccount .
	
	value _ valueToTransfer .! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:42:27' prior: 50979500!
test01TransferAffectsSourceAndDestinyBalance
	
	| transfer sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self assert: 0 equals: sourceAccount balance.
	self assert: 0 equals: destinyAccount balance.
	
	transfer  _ Transfer from: sourceAccount to: destinyAccount anAmountOf: 100.
	
	self assert: -100 equals: sourceAccount balance.
	self assert: 100 equals: destinyAccount balance.
! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:42:57' prior: 50979666!
test01TransferAffectsSourceAndDestinyBalance
	
	| sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self assert: 0 equals: sourceAccount balance.
	self assert: 0 equals: destinyAccount balance.
	
	Transfer from: sourceAccount to: destinyAccount anAmountOf: 100.
	
	self assert: -100 equals: sourceAccount balance.
	self assert: 100 equals: destinyAccount balance.
! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:46:53'!
test02IsPossibleGettingSourceAccountFromTransfer
	
	| sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self assert: 0 equals: sourceAccount balance.
	self assert: 0 equals: destinyAccount balance.
	
	self should: [Transfer from: sourceAccount to: destinyAccount anAmountOf: 0. self fail] 
		raise:  Error
		withMessageText: Transfer canNotTransferAnAmountOfZeroErrorDescription.! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:47:27'!
test02CanNotTransferAnAmountOfZero
	
	| sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self assert: 0 equals: sourceAccount balance.
	self assert: 0 equals: destinyAccount balance.
	
	self should: [Transfer from: sourceAccount to: destinyAccount anAmountOf: 0. self fail] 
		raise:  Error
		withMessageText: Transfer canNotTransferAnAmountOfZeroErrorDescription.! !

!methodRemoval: TransferTest #test02IsPossibleGettingSourceAccountFromTransfer stamp: 'ja 11/14/2020 19:28:59'!
test02IsPossibleGettingSourceAccountFromTransfer
	
	| sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self assert: 0 equals: sourceAccount balance.
	self assert: 0 equals: destinyAccount balance.
	
	self should: [Transfer from: sourceAccount to: destinyAccount anAmountOf: 0. self fail] 
		raise:  Error
		withMessageText: Transfer canNotTransferAnAmountOfZeroErrorDescription.!
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:47:42' prior: 50979203!
canNotTransferAnAmountOfZeroErrorDescription
	self shouldBeImplemented.! !
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:48:16' prior: 50979753!
canNotTransferAnAmountOfZeroErrorDescription
	
	^ 'Can not transfer an amount of zero'! !
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:49:41' prior: 50979623!
from: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer 

	(valueToTransfer = 0) ifTrue: [ self error: self canNotTransferAnAmountOfZeroErrorDescription ].
		
	^ Transfer new initializeFrom: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer .! !

!methodRemoval: TransferTest #test02CanNotTransferAnAmountOfZero stamp: 'ja 11/14/2020 19:28:59'!
test02CanNotTransferAnAmountOfZero
	
	| sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self assert: 0 equals: sourceAccount balance.
	self assert: 0 equals: destinyAccount balance.
	
	self should: [Transfer from: sourceAccount to: destinyAccount anAmountOf: 0. self fail] 
		raise:  Error
		withMessageText: Transfer canNotTransferAnAmountOfZeroErrorDescription.!
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:51:45'!
test03IsPossibleGettingDestinyAccountFromTransfer
	
	| sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self assert: 0 equals: sourceAccount balance.
	self assert: 0 equals: destinyAccount balance.
	
	self should: [Transfer from: sourceAccount to: destinyAccount anAmountOf: 0.] 
		raise: Error
		withMessageText: Transfer canNotTransferAnAmountOfZeroErrorDescription .! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:51:52' prior: 50979793!
test03IsPossibleGettingDestinyAccountFromTransfer
	
	| sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self assert: 0 equals: sourceAccount balance.
	self assert: 0 equals: destinyAccount balance.
	
	self should: [Transfer from: sourceAccount to: destinyAccount anAmountOf: 0. self fail] 
		raise: Error
		withMessageText: Transfer canNotTransferAnAmountOfZeroErrorDescription .! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:51:58' prior: 50979810!
test03IsPossibleGettingDestinyAccountFromTransfer
	
	| sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self should: [Transfer from: sourceAccount to: destinyAccount anAmountOf: 0. self fail] 
		raise: Error
		withMessageText: Transfer canNotTransferAnAmountOfZeroErrorDescription .! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:52:16' prior: 50979287!
test02CanNotTransferAnAmountOfZeroErrorDescription 
	
	| sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self should: [Transfer from: sourceAccount to: destinyAccount anAmountOf: 0. self fail] 
		raise: Error
		withMessageText: Transfer canNotTransferAnAmountOfZeroErrorDescription .! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:53:12' prior: 50979302!
test03CanNotTransferANegativeAmountErrorDescription
	
	| sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self should: [Transfer from: sourceAccount to: destinyAccount anAmountOf: -100. self fail] 
		raise: Error
		withMessageText: Transfer canNotTransferANegativeAmountErrorDescription .! !
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:53:24' prior: 50979323!
canNotTransferANegativeAmountErrorDescription
	self shouldBeImplemented.! !
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:54:04' prior: 50979873!
canNotTransferANegativeAmountErrorDescription
	
	^ ' Can not transfer a negative amount '! !
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:55:01' prior: 50979765!
from: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer 

	(valueToTransfer = 0) ifTrue: [ self error: self canNotTransferAnAmountOfZeroErrorDescription ].
	(valueToTransfer  < 0) ifTrue: [ self error: self canNotTransferANegativeAmountErrorDescription ].
		
	^ Transfer new initializeFrom: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer .! !

!methodRemoval: TransferTest #test03IsPossibleGettingDestinyAccountFromTransfer stamp: 'ja 11/14/2020 19:28:59'!
test03IsPossibleGettingDestinyAccountFromTransfer
	
	| sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self should: [Transfer from: sourceAccount to: destinyAccount anAmountOf: 0. self fail] 
		raise: Error
		withMessageText: Transfer canNotTransferAnAmountOfZeroErrorDescription .!
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 17:03:02' prior: 50979359!
test04TransferIsRegisteredIntoInvolvedAccount
	
	| sourceAccount destinyAccount transfer |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	transfer _ Transfer from: sourceAccount to: destinyAccount anAmountOf: 100.
	
	self assert: sourceAccount transactions includes: transfer depositMade. 
	
	self assert: destinyAccount transactions includes: transfer withdrawMade.
	
	
	! !
!Transfer methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 17:03:36' prior: 50979380!
depositMade
	self shouldBeImplemented.! !
!Transfer methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 17:03:59' prior: 50979931!
depositMade
	
	^ nil! !

!classDefinition: #Transfer category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 19:28:59'!
Object subclass: #Transfer
	instanceVariableNames: 'value depositMade'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #Transfer category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 19:28:59'!
Object subclass: #Transfer
	instanceVariableNames: 'value depositMade withdrawMade'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!
!Transfer methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 17:05:37' prior: 50979655!
initializeFrom: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer 

	depositMade _ TransferDeposit register: valueToTransfer on: aDestinyAccount .
	withdrawMade _ TransferWithdraw register: valueToTransfer on: aSourceAccount .
	
	value _ valueToTransfer .! !
!TransferType methodsFor: 'no messages' stamp: 'ja 11/14/2020 17:06:54' prior: 50979412 overrides: 50964395!
affectBalance: aBalance

	self subclassResponsibility ! !
!TransferType methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 17:07:07' prior: 50979418 overrides: 50964391!
value 

	self subclassResponsibility ! !

!classDefinition: #Deposit category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 19:28:59'!
AccountTransaction subclass: #Deposit
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #Deposit category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 19:28:59'!
AccountTransaction subclass: #Deposit
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #Withdraw category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 19:28:59'!
AccountTransaction subclass: #Withdraw
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #Withdraw category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 19:28:59'!
AccountTransaction subclass: #Withdraw
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #TransferType category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 19:29:00'!
AccountTransaction subclass: #TransferType
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #TransferType category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 19:29:00'!
AccountTransaction subclass: #TransferType
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:29:11' prior: 50979684!
test01TransferAffectsSourceAndDestinyBalance
	
	| transfer sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	transfer  _ Transfer from: sourceAccount to: destinyAccount anAmountOf: 100.
	
	self assert: sourceAccount balance 

	
	! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:31:05' prior: 50980024!
test01TransferAffectsSourceAndDestinyBalance
	
	| transfer sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self assert: 0 equals: (sourceAccount balance).
	self assert: 0 equals: (destinyAccount balance).
	
	transfer  _ Transfer from: sourceAccount to: destinyAccount anAmountOf: 100.
	
	self assert: -100 equals: (sourceAccount balance).
	self assert: 100 equals: (destinyAccount balance).
	self assert: 100 equals: transfer value.	
	! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:31:42' prior: 50980037!
test01TransferAffectsSourceAndDestinyBalance
	
	| transfer sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self assert: 0 equals: sourceAccount balance.
	self assert: 0 equals: destinyAccount balance.
	
	transfer  _ Transfer from: sourceAccount to: destinyAccount anAmountOf: 100.
	
	self assert: -100 equals: sourceAccount balance.
	self assert: 100 equals: destinyAccount balance.
	self assert: 100 equals: transfer value.	
	! !
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:31:57' prior: 50979885!
from: aReceptiveAccount to: aReceptiveAccount2 anAmountOf: aSmallInteger 
	self shouldBeImplemented.! !

!classDefinition: 'Transfer class' category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 19:29:00'!
Transfer class
	instanceVariableNames: 'value'!
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:34:30' prior: 50980075!
from: aReceptiveAccount to: aReceptiveAccount2 anAmountOf: aSmallInteger 
	
	Deposit register: aSmallInteger on: aReceptiveAccount2 .
	Withdraw register: aSmallInteger on: aReceptiveAccount .
	value _ aSmallInteger .! !
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:34:50' prior: 50980086!
from: aSourceAccount to: aReceptiveAccount2 anAmountOf: aSmallInteger 
	
	Deposit register: aSmallInteger on: aReceptiveAccount2 .
	Withdraw register: aSmallInteger on: aSourceAccount .
	value _ aSmallInteger .! !
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:35:04' prior: 50980096!
from: aSourceAccount to: aDestinyAccount anAmountOf: aSmallInteger 
	
	Deposit register: aSmallInteger on: aDestinyAccount .
	Withdraw register: aSmallInteger on: aSourceAccount .
	value _ aSmallInteger .! !
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:35:29' prior: 50980106!
from: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer 
	
	Deposit register: valueToTransfer on: aDestinyAccount .
	Withdraw register: valueToTransfer on: aSourceAccount .
	value _ valueToTransfer .! !

!classDefinition: #Transfer category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 19:29:00'!
Object subclass: #Transfer
	instanceVariableNames: 'value'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!
!Transfer methodsFor: 'no messages' stamp: 'ja 11/14/2020 16:36:17' overrides: 16896425!
initialize

	value _ 0! !
!Transfer methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:36:58' prior: 50979582 overrides: 16881508!
value 

	^ value ! !

!methodRemoval: Transfer class #from:to:anAmountOf: stamp: 'ja 11/14/2020 19:29:00'!
from: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer 
	
	Deposit register: valueToTransfer on: aDestinyAccount .
	Withdraw register: valueToTransfer on: aSourceAccount .
	value _ valueToTransfer .!
!Transfer methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:38:06'!
from: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer 
	
	Deposit register: valueToTransfer on: aDestinyAccount .
	Withdraw register: valueToTransfer on: aSourceAccount .
	value _ valueToTransfer .! !

!classDefinition: 'Transfer class' category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 19:29:01'!
Transfer class
	instanceVariableNames: ''!

!classDefinition: 'Transfer class' category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 19:29:01'!
Transfer class
	instanceVariableNames: ''!
!Transfer class methodsFor: 'no messages' stamp: 'ja 11/14/2020 16:40:54'!
from: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer 

	Transfer new initializeFrom: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer .! !
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:41:02' prior: 50980170!
from: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer 

	^ Transfer new initializeFrom: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer .! !
!Transfer methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:41:20' prior: 50979956!
initializeFrom: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer 

	Deposit register: valueToTransfer on: aDestinyAccount .
	Withdraw register: valueToTransfer on: aSourceAccount .
	value _ valueToTransfer .! !

!methodRemoval: Transfer #from:to:anAmountOf: stamp: 'ja 11/14/2020 19:29:01'!
from: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer 
	
	Deposit register: valueToTransfer on: aDestinyAccount .
	Withdraw register: valueToTransfer on: aSourceAccount .
	value _ valueToTransfer .!

!methodRemoval: Transfer #initialize stamp: 'ja 11/14/2020 19:29:01'!
initialize

	value _ 0!
!Transfer methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:42:09' prior: 50980188!
initializeFrom: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer 

	Deposit register: valueToTransfer on: aDestinyAccount .
	Withdraw register: valueToTransfer on: aSourceAccount .
	
	value _ valueToTransfer .! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:42:27' prior: 50980056!
test01TransferAffectsSourceAndDestinyBalance
	
	| transfer sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self assert: 0 equals: sourceAccount balance.
	self assert: 0 equals: destinyAccount balance.
	
	transfer  _ Transfer from: sourceAccount to: destinyAccount anAmountOf: 100.
	
	self assert: -100 equals: sourceAccount balance.
	self assert: 100 equals: destinyAccount balance.
! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:42:57' prior: 50980222!
test01TransferAffectsSourceAndDestinyBalance
	
	| sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self assert: 0 equals: sourceAccount balance.
	self assert: 0 equals: destinyAccount balance.
	
	Transfer from: sourceAccount to: destinyAccount anAmountOf: 100.
	
	self assert: -100 equals: sourceAccount balance.
	self assert: 100 equals: destinyAccount balance.
! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:46:53'!
test02IsPossibleGettingSourceAccountFromTransfer
	
	| sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self assert: 0 equals: sourceAccount balance.
	self assert: 0 equals: destinyAccount balance.
	
	self should: [Transfer from: sourceAccount to: destinyAccount anAmountOf: 0. self fail] 
		raise:  Error
		withMessageText: Transfer canNotTransferAnAmountOfZeroErrorDescription.! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:47:27'!
test02CanNotTransferAnAmountOfZero
	
	| sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self assert: 0 equals: sourceAccount balance.
	self assert: 0 equals: destinyAccount balance.
	
	self should: [Transfer from: sourceAccount to: destinyAccount anAmountOf: 0. self fail] 
		raise:  Error
		withMessageText: Transfer canNotTransferAnAmountOfZeroErrorDescription.! !

!methodRemoval: TransferTest #test02IsPossibleGettingSourceAccountFromTransfer stamp: 'ja 11/14/2020 19:29:01'!
test02IsPossibleGettingSourceAccountFromTransfer
	
	| sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self assert: 0 equals: sourceAccount balance.
	self assert: 0 equals: destinyAccount balance.
	
	self should: [Transfer from: sourceAccount to: destinyAccount anAmountOf: 0. self fail] 
		raise:  Error
		withMessageText: Transfer canNotTransferAnAmountOfZeroErrorDescription.!
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:47:42' prior: 50979759!
canNotTransferAnAmountOfZeroErrorDescription
	self shouldBeImplemented.! !
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:48:16' prior: 50980309!
canNotTransferAnAmountOfZeroErrorDescription
	
	^ 'Can not transfer an amount of zero'! !
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:49:41' prior: 50980179!
from: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer 

	(valueToTransfer = 0) ifTrue: [ self error: self canNotTransferAnAmountOfZeroErrorDescription ].
		
	^ Transfer new initializeFrom: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer .! !

!methodRemoval: TransferTest #test02CanNotTransferAnAmountOfZero stamp: 'ja 11/14/2020 19:29:01'!
test02CanNotTransferAnAmountOfZero
	
	| sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self assert: 0 equals: sourceAccount balance.
	self assert: 0 equals: destinyAccount balance.
	
	self should: [Transfer from: sourceAccount to: destinyAccount anAmountOf: 0. self fail] 
		raise:  Error
		withMessageText: Transfer canNotTransferAnAmountOfZeroErrorDescription.!
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:51:45'!
test03IsPossibleGettingDestinyAccountFromTransfer
	
	| sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self assert: 0 equals: sourceAccount balance.
	self assert: 0 equals: destinyAccount balance.
	
	self should: [Transfer from: sourceAccount to: destinyAccount anAmountOf: 0.] 
		raise: Error
		withMessageText: Transfer canNotTransferAnAmountOfZeroErrorDescription .! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:51:52' prior: 50980349!
test03IsPossibleGettingDestinyAccountFromTransfer
	
	| sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self assert: 0 equals: sourceAccount balance.
	self assert: 0 equals: destinyAccount balance.
	
	self should: [Transfer from: sourceAccount to: destinyAccount anAmountOf: 0. self fail] 
		raise: Error
		withMessageText: Transfer canNotTransferAnAmountOfZeroErrorDescription .! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:51:58' prior: 50980366!
test03IsPossibleGettingDestinyAccountFromTransfer
	
	| sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self should: [Transfer from: sourceAccount to: destinyAccount anAmountOf: 0. self fail] 
		raise: Error
		withMessageText: Transfer canNotTransferAnAmountOfZeroErrorDescription .! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:52:16' prior: 50979843!
test02CanNotTransferAnAmountOfZeroErrorDescription 
	
	| sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self should: [Transfer from: sourceAccount to: destinyAccount anAmountOf: 0. self fail] 
		raise: Error
		withMessageText: Transfer canNotTransferAnAmountOfZeroErrorDescription .! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:53:12' prior: 50979858!
test03CanNotTransferANegativeAmountErrorDescription
	
	| sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self should: [Transfer from: sourceAccount to: destinyAccount anAmountOf: -100. self fail] 
		raise: Error
		withMessageText: Transfer canNotTransferANegativeAmountErrorDescription .! !
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:53:24' prior: 50979879!
canNotTransferANegativeAmountErrorDescription
	self shouldBeImplemented.! !
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:54:04' prior: 50980429!
canNotTransferANegativeAmountErrorDescription
	
	^ ' Can not transfer a negative amount '! !
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:55:01' prior: 50980321!
from: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer 

	(valueToTransfer = 0) ifTrue: [ self error: self canNotTransferAnAmountOfZeroErrorDescription ].
	(valueToTransfer  < 0) ifTrue: [ self error: self canNotTransferANegativeAmountErrorDescription ].
		
	^ Transfer new initializeFrom: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer .! !

!methodRemoval: TransferTest #test03IsPossibleGettingDestinyAccountFromTransfer stamp: 'ja 11/14/2020 19:29:01'!
test03IsPossibleGettingDestinyAccountFromTransfer
	
	| sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self should: [Transfer from: sourceAccount to: destinyAccount anAmountOf: 0. self fail] 
		raise: Error
		withMessageText: Transfer canNotTransferAnAmountOfZeroErrorDescription .!
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 17:03:02' prior: 50979915!
test04TransferIsRegisteredIntoInvolvedAccount
	
	| sourceAccount destinyAccount transfer |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	transfer _ Transfer from: sourceAccount to: destinyAccount anAmountOf: 100.
	
	self assert: sourceAccount transactions includes: transfer depositMade. 
	
	self assert: destinyAccount transactions includes: transfer withdrawMade.
	
	
	! !
!Transfer methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 17:03:36' prior: 50979936!
depositMade
	self shouldBeImplemented.! !
!Transfer methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 17:03:59' prior: 50980487!
depositMade
	
	^ nil! !

!classDefinition: #Transfer category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 19:29:01'!
Object subclass: #Transfer
	instanceVariableNames: 'value depositMade'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #Transfer category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 19:29:01'!
Object subclass: #Transfer
	instanceVariableNames: 'value depositMade withdrawMade'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!
!Transfer methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 17:05:37' prior: 50980211!
initializeFrom: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer 

	depositMade _ TransferDeposit register: valueToTransfer on: aDestinyAccount .
	withdrawMade _ TransferWithdraw register: valueToTransfer on: aSourceAccount .
	
	value _ valueToTransfer .! !
!TransferType methodsFor: 'no messages' stamp: 'ja 11/14/2020 17:06:54' prior: 50979968 overrides: 50964395!
affectBalance: aBalance

	self subclassResponsibility ! !
!TransferType methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 17:07:07' prior: 50979974 overrides: 50964391!
value 

	self subclassResponsibility ! !

!classDefinition: #Deposit category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 19:29:01'!
AccountTransaction subclass: #Deposit
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #Deposit category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 19:29:01'!
AccountTransaction subclass: #Deposit
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #Withdraw category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 19:29:01'!
AccountTransaction subclass: #Withdraw
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #Withdraw category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 19:29:01'!
AccountTransaction subclass: #Withdraw
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #TransferType category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 19:29:04'!
AccountTransaction subclass: #TransferType
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #TransferType category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 19:29:04'!
AccountTransaction subclass: #TransferType
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:29:11' prior: 50980240!
test01TransferAffectsSourceAndDestinyBalance
	
	| transfer sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	transfer  _ Transfer from: sourceAccount to: destinyAccount anAmountOf: 100.
	
	self assert: sourceAccount balance 

	
	! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:31:05' prior: 50980580!
test01TransferAffectsSourceAndDestinyBalance
	
	| transfer sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self assert: 0 equals: (sourceAccount balance).
	self assert: 0 equals: (destinyAccount balance).
	
	transfer  _ Transfer from: sourceAccount to: destinyAccount anAmountOf: 100.
	
	self assert: -100 equals: (sourceAccount balance).
	self assert: 100 equals: (destinyAccount balance).
	self assert: 100 equals: transfer value.	
	! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:31:42' prior: 50980593!
test01TransferAffectsSourceAndDestinyBalance
	
	| transfer sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self assert: 0 equals: sourceAccount balance.
	self assert: 0 equals: destinyAccount balance.
	
	transfer  _ Transfer from: sourceAccount to: destinyAccount anAmountOf: 100.
	
	self assert: -100 equals: sourceAccount balance.
	self assert: 100 equals: destinyAccount balance.
	self assert: 100 equals: transfer value.	
	! !
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:31:57' prior: 50980441!
from: aReceptiveAccount to: aReceptiveAccount2 anAmountOf: aSmallInteger 
	self shouldBeImplemented.! !

!classDefinition: 'Transfer class' category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 19:29:04'!
Transfer class
	instanceVariableNames: 'value'!
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:34:30' prior: 50980631!
from: aReceptiveAccount to: aReceptiveAccount2 anAmountOf: aSmallInteger 
	
	Deposit register: aSmallInteger on: aReceptiveAccount2 .
	Withdraw register: aSmallInteger on: aReceptiveAccount .
	value _ aSmallInteger .! !
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:34:50' prior: 50980642!
from: aSourceAccount to: aReceptiveAccount2 anAmountOf: aSmallInteger 
	
	Deposit register: aSmallInteger on: aReceptiveAccount2 .
	Withdraw register: aSmallInteger on: aSourceAccount .
	value _ aSmallInteger .! !
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:35:04' prior: 50980652!
from: aSourceAccount to: aDestinyAccount anAmountOf: aSmallInteger 
	
	Deposit register: aSmallInteger on: aDestinyAccount .
	Withdraw register: aSmallInteger on: aSourceAccount .
	value _ aSmallInteger .! !
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:35:29' prior: 50980662!
from: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer 
	
	Deposit register: valueToTransfer on: aDestinyAccount .
	Withdraw register: valueToTransfer on: aSourceAccount .
	value _ valueToTransfer .! !

!classDefinition: #Transfer category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 19:29:04'!
Object subclass: #Transfer
	instanceVariableNames: 'value'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!
!Transfer methodsFor: 'no messages' stamp: 'ja 11/14/2020 16:36:17' overrides: 16896425!
initialize

	value _ 0! !
!Transfer methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:36:58' prior: 50980138 overrides: 16881508!
value 

	^ value ! !

!methodRemoval: Transfer class #from:to:anAmountOf: stamp: 'ja 11/14/2020 19:29:04'!
from: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer 
	
	Deposit register: valueToTransfer on: aDestinyAccount .
	Withdraw register: valueToTransfer on: aSourceAccount .
	value _ valueToTransfer .!
!Transfer methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:38:06'!
from: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer 
	
	Deposit register: valueToTransfer on: aDestinyAccount .
	Withdraw register: valueToTransfer on: aSourceAccount .
	value _ valueToTransfer .! !

!classDefinition: 'Transfer class' category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 19:29:05'!
Transfer class
	instanceVariableNames: ''!

!classDefinition: 'Transfer class' category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 19:29:05'!
Transfer class
	instanceVariableNames: ''!
!Transfer class methodsFor: 'no messages' stamp: 'ja 11/14/2020 16:40:54'!
from: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer 

	Transfer new initializeFrom: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer .! !
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:41:02' prior: 50980726!
from: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer 

	^ Transfer new initializeFrom: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer .! !
!Transfer methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:41:20' prior: 50980512!
initializeFrom: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer 

	Deposit register: valueToTransfer on: aDestinyAccount .
	Withdraw register: valueToTransfer on: aSourceAccount .
	value _ valueToTransfer .! !

!methodRemoval: Transfer #from:to:anAmountOf: stamp: 'ja 11/14/2020 19:29:05'!
from: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer 
	
	Deposit register: valueToTransfer on: aDestinyAccount .
	Withdraw register: valueToTransfer on: aSourceAccount .
	value _ valueToTransfer .!

!methodRemoval: Transfer #initialize stamp: 'ja 11/14/2020 19:29:05'!
initialize

	value _ 0!
!Transfer methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:42:09' prior: 50980744!
initializeFrom: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer 

	Deposit register: valueToTransfer on: aDestinyAccount .
	Withdraw register: valueToTransfer on: aSourceAccount .
	
	value _ valueToTransfer .! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:42:27' prior: 50980612!
test01TransferAffectsSourceAndDestinyBalance
	
	| transfer sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self assert: 0 equals: sourceAccount balance.
	self assert: 0 equals: destinyAccount balance.
	
	transfer  _ Transfer from: sourceAccount to: destinyAccount anAmountOf: 100.
	
	self assert: -100 equals: sourceAccount balance.
	self assert: 100 equals: destinyAccount balance.
! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:42:57' prior: 50980778!
test01TransferAffectsSourceAndDestinyBalance
	
	| sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self assert: 0 equals: sourceAccount balance.
	self assert: 0 equals: destinyAccount balance.
	
	Transfer from: sourceAccount to: destinyAccount anAmountOf: 100.
	
	self assert: -100 equals: sourceAccount balance.
	self assert: 100 equals: destinyAccount balance.
! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:46:53'!
test02IsPossibleGettingSourceAccountFromTransfer
	
	| sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self assert: 0 equals: sourceAccount balance.
	self assert: 0 equals: destinyAccount balance.
	
	self should: [Transfer from: sourceAccount to: destinyAccount anAmountOf: 0. self fail] 
		raise:  Error
		withMessageText: Transfer canNotTransferAnAmountOfZeroErrorDescription.! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:47:27'!
test02CanNotTransferAnAmountOfZero
	
	| sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self assert: 0 equals: sourceAccount balance.
	self assert: 0 equals: destinyAccount balance.
	
	self should: [Transfer from: sourceAccount to: destinyAccount anAmountOf: 0. self fail] 
		raise:  Error
		withMessageText: Transfer canNotTransferAnAmountOfZeroErrorDescription.! !

!methodRemoval: TransferTest #test02IsPossibleGettingSourceAccountFromTransfer stamp: 'ja 11/14/2020 19:29:05'!
test02IsPossibleGettingSourceAccountFromTransfer
	
	| sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self assert: 0 equals: sourceAccount balance.
	self assert: 0 equals: destinyAccount balance.
	
	self should: [Transfer from: sourceAccount to: destinyAccount anAmountOf: 0. self fail] 
		raise:  Error
		withMessageText: Transfer canNotTransferAnAmountOfZeroErrorDescription.!
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:47:42' prior: 50980315!
canNotTransferAnAmountOfZeroErrorDescription
	self shouldBeImplemented.! !
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:48:16' prior: 50980865!
canNotTransferAnAmountOfZeroErrorDescription
	
	^ 'Can not transfer an amount of zero'! !
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:49:41' prior: 50980735!
from: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer 

	(valueToTransfer = 0) ifTrue: [ self error: self canNotTransferAnAmountOfZeroErrorDescription ].
		
	^ Transfer new initializeFrom: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer .! !

!methodRemoval: TransferTest #test02CanNotTransferAnAmountOfZero stamp: 'ja 11/14/2020 19:29:05'!
test02CanNotTransferAnAmountOfZero
	
	| sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self assert: 0 equals: sourceAccount balance.
	self assert: 0 equals: destinyAccount balance.
	
	self should: [Transfer from: sourceAccount to: destinyAccount anAmountOf: 0. self fail] 
		raise:  Error
		withMessageText: Transfer canNotTransferAnAmountOfZeroErrorDescription.!
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:51:45'!
test03IsPossibleGettingDestinyAccountFromTransfer
	
	| sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self assert: 0 equals: sourceAccount balance.
	self assert: 0 equals: destinyAccount balance.
	
	self should: [Transfer from: sourceAccount to: destinyAccount anAmountOf: 0.] 
		raise: Error
		withMessageText: Transfer canNotTransferAnAmountOfZeroErrorDescription .! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:51:52' prior: 50980905!
test03IsPossibleGettingDestinyAccountFromTransfer
	
	| sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self assert: 0 equals: sourceAccount balance.
	self assert: 0 equals: destinyAccount balance.
	
	self should: [Transfer from: sourceAccount to: destinyAccount anAmountOf: 0. self fail] 
		raise: Error
		withMessageText: Transfer canNotTransferAnAmountOfZeroErrorDescription .! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:51:58' prior: 50980922!
test03IsPossibleGettingDestinyAccountFromTransfer
	
	| sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self should: [Transfer from: sourceAccount to: destinyAccount anAmountOf: 0. self fail] 
		raise: Error
		withMessageText: Transfer canNotTransferAnAmountOfZeroErrorDescription .! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:52:16' prior: 50980399!
test02CanNotTransferAnAmountOfZeroErrorDescription 
	
	| sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self should: [Transfer from: sourceAccount to: destinyAccount anAmountOf: 0. self fail] 
		raise: Error
		withMessageText: Transfer canNotTransferAnAmountOfZeroErrorDescription .! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:53:12' prior: 50980414!
test03CanNotTransferANegativeAmountErrorDescription
	
	| sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self should: [Transfer from: sourceAccount to: destinyAccount anAmountOf: -100. self fail] 
		raise: Error
		withMessageText: Transfer canNotTransferANegativeAmountErrorDescription .! !
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:53:24' prior: 50980435!
canNotTransferANegativeAmountErrorDescription
	self shouldBeImplemented.! !
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:54:04' prior: 50980985!
canNotTransferANegativeAmountErrorDescription
	
	^ ' Can not transfer a negative amount '! !
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:55:01' prior: 50980877!
from: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer 

	(valueToTransfer = 0) ifTrue: [ self error: self canNotTransferAnAmountOfZeroErrorDescription ].
	(valueToTransfer  < 0) ifTrue: [ self error: self canNotTransferANegativeAmountErrorDescription ].
		
	^ Transfer new initializeFrom: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer .! !

!methodRemoval: TransferTest #test03IsPossibleGettingDestinyAccountFromTransfer stamp: 'ja 11/14/2020 19:29:05'!
test03IsPossibleGettingDestinyAccountFromTransfer
	
	| sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self should: [Transfer from: sourceAccount to: destinyAccount anAmountOf: 0. self fail] 
		raise: Error
		withMessageText: Transfer canNotTransferAnAmountOfZeroErrorDescription .!
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 17:03:02' prior: 50980471!
test04TransferIsRegisteredIntoInvolvedAccount
	
	| sourceAccount destinyAccount transfer |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	transfer _ Transfer from: sourceAccount to: destinyAccount anAmountOf: 100.
	
	self assert: sourceAccount transactions includes: transfer depositMade. 
	
	self assert: destinyAccount transactions includes: transfer withdrawMade.
	
	
	! !
!Transfer methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 17:03:36' prior: 50980492!
depositMade
	self shouldBeImplemented.! !
!Transfer methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 17:03:59' prior: 50981043!
depositMade
	
	^ nil! !

!classDefinition: #Transfer category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 19:29:05'!
Object subclass: #Transfer
	instanceVariableNames: 'value depositMade'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #Transfer category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 19:29:05'!
Object subclass: #Transfer
	instanceVariableNames: 'value depositMade withdrawMade'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!
!Transfer methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 17:05:37' prior: 50980767!
initializeFrom: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer 

	depositMade _ TransferDeposit register: valueToTransfer on: aDestinyAccount .
	withdrawMade _ TransferWithdraw register: valueToTransfer on: aSourceAccount .
	
	value _ valueToTransfer .! !
!TransferType methodsFor: 'no messages' stamp: 'ja 11/14/2020 17:06:54' prior: 50980524 overrides: 50964395!
affectBalance: aBalance

	self subclassResponsibility ! !
!TransferType methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 17:07:07' prior: 50980530 overrides: 50964391!
value 

	self subclassResponsibility ! !

!classDefinition: #Deposit category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 19:29:05'!
AccountTransaction subclass: #Deposit
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #Deposit category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 19:29:05'!
AccountTransaction subclass: #Deposit
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #Withdraw category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 19:29:05'!
AccountTransaction subclass: #Withdraw
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #Withdraw category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 19:29:05'!
AccountTransaction subclass: #Withdraw
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

----STARTUP---- (14 November 2020 19:29:55) as /home/jampuero/Documentos/isw1/linux64/CuisUniversity-4365.image!


!classDefinition: #TransferDeposit category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 19:30:03'!
TransferCollaborators subclass: #TransferDeposit
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #TransferDeposit category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 19:30:03'!
TransferCollaborators subclass: #TransferDeposit
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #TransferWithdraw category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 19:30:03'!
TransferCollaborators subclass: #TransferWithdraw
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #TransferWithdraw category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 19:30:03'!
TransferCollaborators subclass: #TransferWithdraw
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!
!ReceptiveAccount methodsFor: 'transactions' stamp: 'ja 11/14/2020 15:30:39' prior: 50964345!
register: aTransaction

	transactions add: aTransaction 
! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:24:43' prior: 50964075!
test01TransferHasSourceDestinyAndValueWhenCreated
	
	| transfer sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	transfer  _ Transfer from: sourceAccount to: destinyAccount anAmountOf: 2.
	
	self assert: transfer hasSource.

	
	! !

!classDefinition: #TransferType category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 19:30:03'!
AccountTransaction subclass: #TransferType
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #TransferType category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 19:30:03'!
AccountTransaction subclass: #TransferType
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:29:11'!
test01TransferAffectsSourceAndDestinyBalance
	
	| transfer sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	transfer  _ Transfer from: sourceAccount to: destinyAccount anAmountOf: 100.
	
	self assert: sourceAccount balance 

	
	! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:31:05' prior: 50966222!
test01TransferAffectsSourceAndDestinyBalance
	
	| transfer sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self assert: 0 equals: (sourceAccount balance).
	self assert: 0 equals: (destinyAccount balance).
	
	transfer  _ Transfer from: sourceAccount to: destinyAccount anAmountOf: 100.
	
	self assert: -100 equals: (sourceAccount balance).
	self assert: 100 equals: (destinyAccount balance).
	self assert: 100 equals: transfer value.	
	! !

!methodRemoval: TransferTest #test01TransferHasSourceDestinyAndValueWhenCreated stamp: 'ja 11/14/2020 19:30:03'!
test01TransferHasSourceDestinyAndValueWhenCreated
	
	| transfer sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	transfer  _ Transfer from: sourceAccount to: destinyAccount anAmountOf: 2.
	
	self assert: transfer hasSource.

	
	!
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:31:42' prior: 50966235!
test01TransferAffectsSourceAndDestinyBalance
	
	| transfer sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self assert: 0 equals: sourceAccount balance.
	self assert: 0 equals: destinyAccount balance.
	
	transfer  _ Transfer from: sourceAccount to: destinyAccount anAmountOf: 100.
	
	self assert: -100 equals: sourceAccount balance.
	self assert: 100 equals: destinyAccount balance.
	self assert: 100 equals: transfer value.	
	! !
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:31:57'!
from: aReceptiveAccount to: aReceptiveAccount2 anAmountOf: aSmallInteger 
	self shouldBeImplemented.! !

!classDefinition: 'Transfer class' category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 19:30:03'!
Transfer class
	instanceVariableNames: 'value'!
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:34:30' prior: 50966286!
from: aReceptiveAccount to: aReceptiveAccount2 anAmountOf: aSmallInteger 
	
	Deposit register: aSmallInteger on: aReceptiveAccount2 .
	Withdraw register: aSmallInteger on: aReceptiveAccount .
	value _ aSmallInteger .! !
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:34:50' prior: 50966297!
from: aSourceAccount to: aReceptiveAccount2 anAmountOf: aSmallInteger 
	
	Deposit register: aSmallInteger on: aReceptiveAccount2 .
	Withdraw register: aSmallInteger on: aSourceAccount .
	value _ aSmallInteger .! !
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:35:04' prior: 50966307!
from: aSourceAccount to: aDestinyAccount anAmountOf: aSmallInteger 
	
	Deposit register: aSmallInteger on: aDestinyAccount .
	Withdraw register: aSmallInteger on: aSourceAccount .
	value _ aSmallInteger .! !
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:35:29' prior: 50966317!
from: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer 
	
	Deposit register: valueToTransfer on: aDestinyAccount .
	Withdraw register: valueToTransfer on: aSourceAccount .
	value _ valueToTransfer .! !

!classDefinition: #Transfer category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 19:30:04'!
Object subclass: #Transfer
	instanceVariableNames: 'value'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!
!Transfer methodsFor: 'no messages' stamp: 'ja 11/14/2020 16:36:17' overrides: 16896425!
initialize

	value _ 0! !
!Transfer methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:36:58' overrides: 16881508!
value 

	^ value ! !

!methodRemoval: Transfer class #from:to:anAmountOf: stamp: 'ja 11/14/2020 19:30:04'!
from: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer 
	
	Deposit register: valueToTransfer on: aDestinyAccount .
	Withdraw register: valueToTransfer on: aSourceAccount .
	value _ valueToTransfer .!
!Transfer methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:38:06'!
from: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer 
	
	Deposit register: valueToTransfer on: aDestinyAccount .
	Withdraw register: valueToTransfer on: aSourceAccount .
	value _ valueToTransfer .! !

!classDefinition: 'Transfer class' category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 19:30:04'!
Transfer class
	instanceVariableNames: ''!

!classDefinition: 'Transfer class' category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 19:30:04'!
Transfer class
	instanceVariableNames: ''!
!Transfer class methodsFor: 'no messages' stamp: 'ja 11/14/2020 16:40:54'!
from: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer 

	Transfer new initializeFrom: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer .! !
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:41:02' prior: 50966380!
from: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer 

	^ Transfer new initializeFrom: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer .! !
!Transfer methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:41:20'!
initializeFrom: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer 

	Deposit register: valueToTransfer on: aDestinyAccount .
	Withdraw register: valueToTransfer on: aSourceAccount .
	value _ valueToTransfer .! !

!methodRemoval: Transfer #from:to:anAmountOf: stamp: 'ja 11/14/2020 19:30:04'!
from: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer 
	
	Deposit register: valueToTransfer on: aDestinyAccount .
	Withdraw register: valueToTransfer on: aSourceAccount .
	value _ valueToTransfer .!

!methodRemoval: Transfer #initialize stamp: 'ja 11/14/2020 19:30:04'!
initialize

	value _ 0!
!Transfer methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:42:09' prior: 50966397!
initializeFrom: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer 

	Deposit register: valueToTransfer on: aDestinyAccount .
	Withdraw register: valueToTransfer on: aSourceAccount .
	
	value _ valueToTransfer .! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:42:27' prior: 50966267!
test01TransferAffectsSourceAndDestinyBalance
	
	| transfer sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self assert: 0 equals: sourceAccount balance.
	self assert: 0 equals: destinyAccount balance.
	
	transfer  _ Transfer from: sourceAccount to: destinyAccount anAmountOf: 100.
	
	self assert: -100 equals: sourceAccount balance.
	self assert: 100 equals: destinyAccount balance.
! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:42:57' prior: 50966431!
test01TransferAffectsSourceAndDestinyBalance
	
	| sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self assert: 0 equals: sourceAccount balance.
	self assert: 0 equals: destinyAccount balance.
	
	Transfer from: sourceAccount to: destinyAccount anAmountOf: 100.
	
	self assert: -100 equals: sourceAccount balance.
	self assert: 100 equals: destinyAccount balance.
! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:46:53' prior: 50964090!
test02IsPossibleGettingSourceAccountFromTransfer
	
	| sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self assert: 0 equals: sourceAccount balance.
	self assert: 0 equals: destinyAccount balance.
	
	self should: [Transfer from: sourceAccount to: destinyAccount anAmountOf: 0. self fail] 
		raise:  Error
		withMessageText: Transfer canNotTransferAnAmountOfZeroErrorDescription.! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:47:27'!
test02CanNotTransferAnAmountOfZero
	
	| sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self assert: 0 equals: sourceAccount balance.
	self assert: 0 equals: destinyAccount balance.
	
	self should: [Transfer from: sourceAccount to: destinyAccount anAmountOf: 0. self fail] 
		raise:  Error
		withMessageText: Transfer canNotTransferAnAmountOfZeroErrorDescription.! !

!methodRemoval: TransferTest #test02IsPossibleGettingSourceAccountFromTransfer stamp: 'ja 11/14/2020 19:30:04'!
test02IsPossibleGettingSourceAccountFromTransfer
	
	| sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self assert: 0 equals: sourceAccount balance.
	self assert: 0 equals: destinyAccount balance.
	
	self should: [Transfer from: sourceAccount to: destinyAccount anAmountOf: 0. self fail] 
		raise:  Error
		withMessageText: Transfer canNotTransferAnAmountOfZeroErrorDescription.!
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:47:42'!
canNotTransferAnAmountOfZeroErrorDescription
	self shouldBeImplemented.! !
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:48:16' prior: 50966517!
canNotTransferAnAmountOfZeroErrorDescription
	
	^ 'Can not transfer an amount of zero'! !
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:49:41' prior: 50966389!
from: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer 

	(valueToTransfer = 0) ifTrue: [ self error: self canNotTransferAnAmountOfZeroErrorDescription ].
		
	^ Transfer new initializeFrom: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer .! !

!methodRemoval: TransferTest #test02CanNotTransferAnAmountOfZero stamp: 'ja 11/14/2020 19:30:04'!
test02CanNotTransferAnAmountOfZero
	
	| sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self assert: 0 equals: sourceAccount balance.
	self assert: 0 equals: destinyAccount balance.
	
	self should: [Transfer from: sourceAccount to: destinyAccount anAmountOf: 0. self fail] 
		raise:  Error
		withMessageText: Transfer canNotTransferAnAmountOfZeroErrorDescription.!
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:51:45' prior: 50964103!
test03IsPossibleGettingDestinyAccountFromTransfer
	
	| sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self assert: 0 equals: sourceAccount balance.
	self assert: 0 equals: destinyAccount balance.
	
	self should: [Transfer from: sourceAccount to: destinyAccount anAmountOf: 0.] 
		raise: Error
		withMessageText: Transfer canNotTransferAnAmountOfZeroErrorDescription .! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:51:52' prior: 50966558!
test03IsPossibleGettingDestinyAccountFromTransfer
	
	| sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self assert: 0 equals: sourceAccount balance.
	self assert: 0 equals: destinyAccount balance.
	
	self should: [Transfer from: sourceAccount to: destinyAccount anAmountOf: 0. self fail] 
		raise: Error
		withMessageText: Transfer canNotTransferAnAmountOfZeroErrorDescription .! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:51:58' prior: 50966575!
test03IsPossibleGettingDestinyAccountFromTransfer
	
	| sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self should: [Transfer from: sourceAccount to: destinyAccount anAmountOf: 0. self fail] 
		raise: Error
		withMessageText: Transfer canNotTransferAnAmountOfZeroErrorDescription .! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:52:16'!
test02CanNotTransferAnAmountOfZeroErrorDescription 
	
	| sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self should: [Transfer from: sourceAccount to: destinyAccount anAmountOf: 0. self fail] 
		raise: Error
		withMessageText: Transfer canNotTransferAnAmountOfZeroErrorDescription .! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:53:12'!
test03CanNotTransferANegativeAmountErrorDescription
	
	| sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self should: [Transfer from: sourceAccount to: destinyAccount anAmountOf: -100. self fail] 
		raise: Error
		withMessageText: Transfer canNotTransferANegativeAmountErrorDescription .! !
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:53:24'!
canNotTransferANegativeAmountErrorDescription
	self shouldBeImplemented.! !
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:54:04' prior: 50966635!
canNotTransferANegativeAmountErrorDescription
	
	^ ' Can not transfer a negative amount '! !
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:55:01' prior: 50966529!
from: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer 

	(valueToTransfer = 0) ifTrue: [ self error: self canNotTransferAnAmountOfZeroErrorDescription ].
	(valueToTransfer  < 0) ifTrue: [ self error: self canNotTransferANegativeAmountErrorDescription ].
		
	^ Transfer new initializeFrom: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer .! !

!methodRemoval: TransferTest #test03IsPossibleGettingDestinyAccountFromTransfer stamp: 'ja 11/14/2020 19:30:04'!
test03IsPossibleGettingDestinyAccountFromTransfer
	
	| sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self should: [Transfer from: sourceAccount to: destinyAccount anAmountOf: 0. self fail] 
		raise: Error
		withMessageText: Transfer canNotTransferAnAmountOfZeroErrorDescription .!
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 17:03:02'!
test04TransferIsRegisteredIntoInvolvedAccount
	
	| sourceAccount destinyAccount transfer |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	transfer _ Transfer from: sourceAccount to: destinyAccount anAmountOf: 100.
	
	self assert: sourceAccount transactions includes: transfer depositMade. 
	
	self assert: destinyAccount transactions includes: transfer withdrawMade.
	
	
	! !

!methodRemoval: TransferTest #test04IsPossibleGettingTransferFromSourceAccount stamp: 'ja 11/14/2020 19:30:04'!
test04IsPossibleGettingTransferFromSourceAccount
	
	| transfer sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	transfer  _ Transfer from: sourceAccount to: destinyAccount anAmountOf: 2.
	
	self assert: sourceAccount transfers includes: transfer . !
!Transfer methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 17:03:36'!
depositMade
	self shouldBeImplemented.! !
!Transfer methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 17:03:59' prior: 50966705!
depositMade
	
	^ nil! !

!classDefinition: #Transfer category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 19:30:04'!
Object subclass: #Transfer
	instanceVariableNames: 'value depositMade'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #Transfer category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 19:30:04'!
Object subclass: #Transfer
	instanceVariableNames: 'value depositMade withdrawMade'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!
!Transfer methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 17:05:37' prior: 50966420!
initializeFrom: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer 

	depositMade _ TransferDeposit register: valueToTransfer on: aDestinyAccount .
	withdrawMade _ TransferWithdraw register: valueToTransfer on: aSourceAccount .
	
	value _ valueToTransfer .! !
!TransferType methodsFor: 'no messages' stamp: 'ja 11/14/2020 17:06:54' overrides: 50964395!
affectBalance: aBalance

	self subclassResponsibility ! !
!TransferType methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 17:07:07' overrides: 50964391!
value 

	self subclassResponsibility ! !
!TransferDeposit methodsFor: 'no messages' stamp: 'ja 11/14/2020 17:07:24' overrides: 50964395!
affectBalance: aBalance! !
!TransferDeposit methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 17:07:42' overrides: 50964391!
value ! !
!TransferWithdraw methodsFor: 'no messages' stamp: 'ja 11/14/2020 17:08:48' overrides: 50964395!
affectBalance: aBalance! !
!TransferWithdraw methodsFor: 'nil' stamp: 'ja 11/14/2020 17:08:58' overrides: 50964391!
value ! !

!classDefinition: #Deposit category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 19:30:04'!
AccountTransaction subclass: #Deposit
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #Deposit category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 19:30:04'!
AccountTransaction subclass: #Deposit
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #Withdraw category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 19:30:04'!
AccountTransaction subclass: #Withdraw
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #Withdraw category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 19:30:04'!
AccountTransaction subclass: #Withdraw
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!
!TransferDeposit methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 17:13:02' prior: 50966752 overrides: 50964395!
affectBalance: aBalance

	
	^aBalance ! !
!TransferWithdraw methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 17:13:13' prior: 50966761 overrides: 50964395!
affectBalance: aBalance

	
	^aBalance ! !
!TransferDeposit methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 17:13:29' prior: 50966799 overrides: 50964395!
affectBalance: aBalance

	
	^aBalance + value! !
!TransferWithdraw methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 17:13:37' prior: 50966805 overrides: 50964395!
affectBalance: aBalance

	
	^aBalance - value! !
!TransferDeposit methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 17:15:41' prior: 50966811 overrides: 50964395!
affectBalance: aBalance

	^aBalance + value! !
!TransferWithdraw methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 17:28:28' prior: 50966817 overrides: 50964395!
affectBalance: aBalance

	^aBalance - value! !
!TransferDeposit class methodsFor: 'no messages' stamp: 'ja 11/14/2020 17:30:42'!
for: aValue

	^ self new initializeFor: aValue ! !
!TransferWithdraw class methodsFor: 'no messages' stamp: 'ja 11/14/2020 17:30:47'!
for: aValue

	^ self new initializeFor: aValue ! !
!TransferDeposit methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 17:31:17'!
initializeFor: aValue

	value := aValue ! !
!TransferWithdraw methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 17:31:23'!
initializeFor: aValue

	value := aValue ! !
!TransferWithdraw methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 17:31:31' prior: 50966849!
initializeFor: aValue

	value _ aValue ! !
!TransferDeposit methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 17:31:42' prior: 50966844!
initializeFor: aValue

	value _ aValue ! !
!Transfer methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 17:33:24' prior: 50966710!
depositMade
	
	^ depositMade ! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 17:34:30' prior: 50966676!
test04TransferIsRegisteredIntoInvolvedAccount
	
	| sourceAccount destinyAccount transfer |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	transfer _ Transfer from: sourceAccount to: destinyAccount anAmountOf: 100.
	
	self assert: sourceAccount transactions includes: transfer withdrawMade. 
	
	self assert: destinyAccount transactions includes: transfer depositMade.
	
	
	! !
!Transfer methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 17:36:36'!
withdrawMade
	self shouldBeImplemented.
	^withdrawMade! !
!Transfer methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 17:36:40' prior: 50966885!
withdrawMade
	
	^withdrawMade! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 17:38:11'!
test04TransferIsRegisteredIntoInvolvedAccounts
	
	| sourceAccount destinyAccount transfer |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	transfer _ Transfer from: sourceAccount to: destinyAccount anAmountOf: 100.
	
	self assert: sourceAccount transactions includes: transfer withdrawMade. 
	
	self assert: destinyAccount transactions includes: transfer depositMade.
	
	
	! !

!methodRemoval: TransferTest #test04TransferIsRegisteredIntoInvolvedAccount stamp: 'ja 11/14/2020 19:30:04'!
test04TransferIsRegisteredIntoInvolvedAccount
	
	| sourceAccount destinyAccount transfer |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	transfer _ Transfer from: sourceAccount to: destinyAccount anAmountOf: 100.
	
	self assert: sourceAccount transactions includes: transfer withdrawMade. 
	
	self assert: destinyAccount transactions includes: transfer depositMade.
	
	
	!
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 17:46:01'!
test05TransferValueIsNotReplicated
	
	| transfer sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	transfer  _ Transfer from: sourceAccount to: destinyAccount anAmountOf: 100.
	
	sourceAccount transactions ! !

!classDefinition: #AccountTransaction category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 19:30:05'!
Object subclass: #AccountTransaction
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #AccountTransaction category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 19:30:05'!
Object subclass: #AccountTransaction
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #Deposit category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 19:30:05'!
AccountTransaction subclass: #Deposit
	instanceVariableNames: 'value'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #Deposit category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 19:30:05'!
AccountTransaction subclass: #Deposit
	instanceVariableNames: 'value'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #Withdraw category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 19:30:05'!
AccountTransaction subclass: #Withdraw
	instanceVariableNames: 'value'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #Withdraw category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 19:30:05'!
AccountTransaction subclass: #Withdraw
	instanceVariableNames: 'value'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!
!TransferDeposit methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 17:55:18' prior: 50966823 overrides: 50964395!
affectBalance: aBalance

	^self value + aBalance ! !
!TransferWithdraw methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 17:55:36' prior: 50966829 overrides: 50964395!
affectBalance: aBalance

	^self value - aBalance ! !

!classDefinition: #TransferType category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 19:30:05'!
AccountTransaction subclass: #TransferType
	instanceVariableNames: 'relatedTransfer'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #TransferType category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 19:30:05'!
AccountTransaction subclass: #TransferType
	instanceVariableNames: 'relatedTransfer'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!
!TransferType methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 17:56:29' prior: 50966747 overrides: 50964391!
value 

	^ relatedTransfer value! !

!methodRemoval: TransferDeposit #value stamp: 'ja 11/14/2020 19:30:05'!
value !

!methodRemoval: TransferWithdraw #value stamp: 'ja 11/14/2020 19:30:05'!
value !

!methodRemoval: TransferWithdraw #initializeFor: stamp: 'ja 11/14/2020 19:30:05'!
initializeFor: aValue

	value _ aValue !

!methodRemoval: TransferDeposit #initializeFor: stamp: 'ja 11/14/2020 19:30:05'!
initializeFor: aValue

	value _ aValue !
!TransferType methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 17:57:51'!
initializaFor: aTransfer

	relatedTransfer _ aTransfer ! !
!TransferType methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 17:58:06'!
initializeFor: aTransfer

	relatedTransfer _ aTransfer ! !

!methodRemoval: TransferType #initializaFor: stamp: 'ja 11/14/2020 19:30:05'!
initializaFor: aTransfer

	relatedTransfer _ aTransfer !
!TransferType class methodsFor: 'no messages' stamp: 'ja 11/14/2020 17:59:22'!
for: aValue

	^ self new initializeFor: aValue ! !

!methodRemoval: TransferDeposit class #for: stamp: 'ja 11/14/2020 19:30:05'!
for: aValue

	^ self new initializeFor: aValue !

!methodRemoval: TransferWithdraw class #for: stamp: 'ja 11/14/2020 19:30:05'!
for: aValue

	^ self new initializeFor: aValue !
!TransferType class methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 18:00:01' prior: 50967044!
for: aTransfer

	^ self new initializeFor: aTransfer ! !

!methodRemoval: TransferTest #test05IsPossibleGettingTransferFromDestinyAccount stamp: 'ja 11/14/2020 19:30:05'!
test05IsPossibleGettingTransferFromDestinyAccount
	
	| transfer sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	transfer  _ Transfer from: sourceAccount to: destinyAccount anAmountOf: 2.
	
	self assert: destinyAccount transfers includes: transfer . !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 18:08:27' prior: 50966926!
test05TransferValueIsNotReplicated
	
	| transfer sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	transfer  _ Transfer from: sourceAccount to: destinyAccount anAmountOf: 100.
	
	! !
!Transfer methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 18:10:08'!
changeValueTo: aNewValue

	value _ aNewValue 

	! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 18:10:44' prior: 50967076!
test05TransferValueIsNotReplicated
	
	| transfer sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	transfer  _ Transfer from: sourceAccount to: destinyAccount anAmountOf: 100.
	
	transfer changeValueTo: 10.
	
	! !
!Transfer methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 18:11:16' prior: 50967087!
changeValueTo: aNewValue
	
	value _ aNewValue 

	! !
!Transfer methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 18:12:23' prior: 50967104!
changeValueTo: aNewValue
	" for testing pourposite only "
	value _ aNewValue 

	! !
!Transfer methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 18:12:57' prior: 50967109!
changeValueTo: aNewValue
	" for testing purpose only "
	value _ aNewValue 

	! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 18:13:42' prior: 50967092!
test05TransferValueIsNotReplicated
	
	| transfer sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	transfer  _ Transfer from: sourceAccount to: destinyAccount anAmountOf: 100.
	
	self assert: -100 equals: sourceAccount balance.
	self assert: 100 equals: destinyAccount balance.
		
	transfer changeValueTo: 10.
	
	! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 18:14:14' prior: 50967121!
test05TransferValueIsNotReplicated
	
	| transfer sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	transfer  _ Transfer from: sourceAccount to: destinyAccount anAmountOf: 100.
	
	self assert: -100 equals: sourceAccount balance.
	self assert: 100 equals: destinyAccount balance.
		
	transfer changeValueTo: 10.
	
	self assert: -10 equals: sourceAccount balance.
	self assert: 10 equals: destinyAccount balance.
	! !
!AccountTransaction class methodsFor: 'instance creation' stamp: 'ja 11/14/2020 18:19:14' prior: 50964409!
register: aValueOrTransfer on: account

	| transaction |
	
	transaction := self for: aValueOrTransfer.
	account register: transaction.
		
	^ transaction! !
!Transfer methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 18:22:36' prior: 50966730!
initializeFrom: aSourceAccount to: aDestinyAccount anAmountOf: aValueToTransfer 

	depositMade _ TransferDeposit register: self on: aDestinyAccount .
	withdrawMade _ TransferWithdraw register: self on: aSourceAccount .
	
	value _ aValueToTransfer .! !
!TransferWithdraw methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 18:30:32' prior: 50966991 overrides: 50964395!
affectBalance: aBalance

	^ aBalance - self value ! !
!TransferDeposit methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 18:30:47' prior: 50966985 overrides: 50964395!
affectBalance: aBalance

	^ aBalance + self value ! !
!Transfer methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 18:33:42' prior: 50967115!
changeValueTo: aNewValue
	
	" Ya que no existe un mapeo con la realidad entre este mensaje y una verdadera transferencia bancaria
	afirmamos que este no hace a la esencia de Transfer pero lo incorporamos para poder testear que el valor
	de las transferencias no est� replicado "
	
	value _ aNewValue 

	! !
!Transfer methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 18:36:27' prior: 50967187!
changeValueTo: aNewValue
	
	" Ya que no existe un mapeo con la realidad entre este mensaje y una verdadera transferencia bancaria
	afirmamos que �ste no hace a la esencia de Transfer pero lo incorporamos para poder testear que el valor
	de las transferencias no est� replicado "
	
	value _ aNewValue 

	! !

----STARTUP---- (14 November 2020 19:30:34) as /home/jampuero/Documentos/isw1/linux64/CuisUniversity-4365.image!


!classDefinition: #TransferWithdraw category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 19:30:54'!
TransferCollaborators subclass: #TransferWithdraw
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #TransferDeposit category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 19:30:57'!
TransferCollaborators subclass: #TransferDeposit
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #TransferWithdraw category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 19:30:57'!
TransferCollaborators subclass: #TransferWithdraw
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #TransferDeposit category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 19:31:03'!
TransferCollaborators subclass: #TransferDeposit
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #TransferWithdraw category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 19:31:03'!
TransferCollaborators subclass: #TransferWithdraw
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #TransferWithdraw category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 19:31:03'!
TransferCollaborators subclass: #TransferWithdraw
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #TransferDeposit category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 19:32:02'!
TransferCollaborators subclass: #TransferDeposit
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #TransferWithdraw category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 19:32:02'!
TransferCollaborators subclass: #TransferWithdraw
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #TransferWithdraw category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 19:32:02'!
TransferCollaborators subclass: #TransferWithdraw
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

----STARTUP---- (14 November 2020 19:34:04) as /home/jampuero/Documentos/isw1/linux64/CuisUniversity-4365.image!


!classDefinition: #TransferDeposit category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 19:34:09'!
TransferCollaborators subclass: #TransferDeposit
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #TransferDeposit category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 19:34:09'!
TransferCollaborators subclass: #TransferDeposit
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #TransferWithdraw category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 19:34:09'!
TransferCollaborators subclass: #TransferWithdraw
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #TransferWithdraw category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 19:34:09'!
TransferCollaborators subclass: #TransferWithdraw
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!
!ReceptiveAccount methodsFor: 'transactions' stamp: 'ja 11/14/2020 15:30:39' prior: 50964345!
register: aTransaction

	transactions add: aTransaction 
! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:24:43' prior: 50964075!
test01TransferHasSourceDestinyAndValueWhenCreated
	
	| transfer sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	transfer  _ Transfer from: sourceAccount to: destinyAccount anAmountOf: 2.
	
	self assert: transfer hasSource.

	
	! !

!classDefinition: #TransferType category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 19:34:09'!
AccountTransaction subclass: #TransferType
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #TransferType category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 19:34:09'!
AccountTransaction subclass: #TransferType
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:29:11'!
test01TransferAffectsSourceAndDestinyBalance
	
	| transfer sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	transfer  _ Transfer from: sourceAccount to: destinyAccount anAmountOf: 100.
	
	self assert: sourceAccount balance 

	
	! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:31:05' prior: 50966222!
test01TransferAffectsSourceAndDestinyBalance
	
	| transfer sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self assert: 0 equals: (sourceAccount balance).
	self assert: 0 equals: (destinyAccount balance).
	
	transfer  _ Transfer from: sourceAccount to: destinyAccount anAmountOf: 100.
	
	self assert: -100 equals: (sourceAccount balance).
	self assert: 100 equals: (destinyAccount balance).
	self assert: 100 equals: transfer value.	
	! !

!methodRemoval: TransferTest #test01TransferHasSourceDestinyAndValueWhenCreated stamp: 'ja 11/14/2020 19:34:09'!
test01TransferHasSourceDestinyAndValueWhenCreated
	
	| transfer sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	transfer  _ Transfer from: sourceAccount to: destinyAccount anAmountOf: 2.
	
	self assert: transfer hasSource.

	
	!
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:31:42' prior: 50966235!
test01TransferAffectsSourceAndDestinyBalance
	
	| transfer sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self assert: 0 equals: sourceAccount balance.
	self assert: 0 equals: destinyAccount balance.
	
	transfer  _ Transfer from: sourceAccount to: destinyAccount anAmountOf: 100.
	
	self assert: -100 equals: sourceAccount balance.
	self assert: 100 equals: destinyAccount balance.
	self assert: 100 equals: transfer value.	
	! !
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:31:57'!
from: aReceptiveAccount to: aReceptiveAccount2 anAmountOf: aSmallInteger 
	self shouldBeImplemented.! !

!classDefinition: 'Transfer class' category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 19:34:09'!
Transfer class
	instanceVariableNames: 'value'!
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:34:30' prior: 50966286!
from: aReceptiveAccount to: aReceptiveAccount2 anAmountOf: aSmallInteger 
	
	Deposit register: aSmallInteger on: aReceptiveAccount2 .
	Withdraw register: aSmallInteger on: aReceptiveAccount .
	value _ aSmallInteger .! !
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:34:50' prior: 50966297!
from: aSourceAccount to: aReceptiveAccount2 anAmountOf: aSmallInteger 
	
	Deposit register: aSmallInteger on: aReceptiveAccount2 .
	Withdraw register: aSmallInteger on: aSourceAccount .
	value _ aSmallInteger .! !
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:35:04' prior: 50966307!
from: aSourceAccount to: aDestinyAccount anAmountOf: aSmallInteger 
	
	Deposit register: aSmallInteger on: aDestinyAccount .
	Withdraw register: aSmallInteger on: aSourceAccount .
	value _ aSmallInteger .! !
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:35:29' prior: 50966317!
from: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer 
	
	Deposit register: valueToTransfer on: aDestinyAccount .
	Withdraw register: valueToTransfer on: aSourceAccount .
	value _ valueToTransfer .! !

!classDefinition: #Transfer category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 19:34:09'!
Object subclass: #Transfer
	instanceVariableNames: 'value'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!
!Transfer methodsFor: 'no messages' stamp: 'ja 11/14/2020 16:36:17' overrides: 16896425!
initialize

	value _ 0! !
!Transfer methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:36:58' overrides: 16881508!
value 

	^ value ! !

!methodRemoval: Transfer class #from:to:anAmountOf: stamp: 'ja 11/14/2020 19:34:09'!
from: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer 
	
	Deposit register: valueToTransfer on: aDestinyAccount .
	Withdraw register: valueToTransfer on: aSourceAccount .
	value _ valueToTransfer .!
!Transfer methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:38:06'!
from: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer 
	
	Deposit register: valueToTransfer on: aDestinyAccount .
	Withdraw register: valueToTransfer on: aSourceAccount .
	value _ valueToTransfer .! !

!classDefinition: 'Transfer class' category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 19:34:09'!
Transfer class
	instanceVariableNames: ''!

!classDefinition: 'Transfer class' category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 19:34:09'!
Transfer class
	instanceVariableNames: ''!
!Transfer class methodsFor: 'no messages' stamp: 'ja 11/14/2020 16:40:54'!
from: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer 

	Transfer new initializeFrom: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer .! !
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:41:02' prior: 50966380!
from: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer 

	^ Transfer new initializeFrom: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer .! !
!Transfer methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:41:20'!
initializeFrom: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer 

	Deposit register: valueToTransfer on: aDestinyAccount .
	Withdraw register: valueToTransfer on: aSourceAccount .
	value _ valueToTransfer .! !

!methodRemoval: Transfer #from:to:anAmountOf: stamp: 'ja 11/14/2020 19:34:09'!
from: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer 
	
	Deposit register: valueToTransfer on: aDestinyAccount .
	Withdraw register: valueToTransfer on: aSourceAccount .
	value _ valueToTransfer .!

!methodRemoval: Transfer #initialize stamp: 'ja 11/14/2020 19:34:09'!
initialize

	value _ 0!
!Transfer methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:42:09' prior: 50966397!
initializeFrom: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer 

	Deposit register: valueToTransfer on: aDestinyAccount .
	Withdraw register: valueToTransfer on: aSourceAccount .
	
	value _ valueToTransfer .! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:42:27' prior: 50966267!
test01TransferAffectsSourceAndDestinyBalance
	
	| transfer sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self assert: 0 equals: sourceAccount balance.
	self assert: 0 equals: destinyAccount balance.
	
	transfer  _ Transfer from: sourceAccount to: destinyAccount anAmountOf: 100.
	
	self assert: -100 equals: sourceAccount balance.
	self assert: 100 equals: destinyAccount balance.
! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:42:57' prior: 50966431!
test01TransferAffectsSourceAndDestinyBalance
	
	| sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self assert: 0 equals: sourceAccount balance.
	self assert: 0 equals: destinyAccount balance.
	
	Transfer from: sourceAccount to: destinyAccount anAmountOf: 100.
	
	self assert: -100 equals: sourceAccount balance.
	self assert: 100 equals: destinyAccount balance.
! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:46:53' prior: 50964090!
test02IsPossibleGettingSourceAccountFromTransfer
	
	| sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self assert: 0 equals: sourceAccount balance.
	self assert: 0 equals: destinyAccount balance.
	
	self should: [Transfer from: sourceAccount to: destinyAccount anAmountOf: 0. self fail] 
		raise:  Error
		withMessageText: Transfer canNotTransferAnAmountOfZeroErrorDescription.! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:47:27'!
test02CanNotTransferAnAmountOfZero
	
	| sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self assert: 0 equals: sourceAccount balance.
	self assert: 0 equals: destinyAccount balance.
	
	self should: [Transfer from: sourceAccount to: destinyAccount anAmountOf: 0. self fail] 
		raise:  Error
		withMessageText: Transfer canNotTransferAnAmountOfZeroErrorDescription.! !

!methodRemoval: TransferTest #test02IsPossibleGettingSourceAccountFromTransfer stamp: 'ja 11/14/2020 19:34:09'!
test02IsPossibleGettingSourceAccountFromTransfer
	
	| sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self assert: 0 equals: sourceAccount balance.
	self assert: 0 equals: destinyAccount balance.
	
	self should: [Transfer from: sourceAccount to: destinyAccount anAmountOf: 0. self fail] 
		raise:  Error
		withMessageText: Transfer canNotTransferAnAmountOfZeroErrorDescription.!
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:47:42'!
canNotTransferAnAmountOfZeroErrorDescription
	self shouldBeImplemented.! !
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:48:16' prior: 50966517!
canNotTransferAnAmountOfZeroErrorDescription
	
	^ 'Can not transfer an amount of zero'! !
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:49:41' prior: 50966389!
from: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer 

	(valueToTransfer = 0) ifTrue: [ self error: self canNotTransferAnAmountOfZeroErrorDescription ].
		
	^ Transfer new initializeFrom: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer .! !

!methodRemoval: TransferTest #test02CanNotTransferAnAmountOfZero stamp: 'ja 11/14/2020 19:34:09'!
test02CanNotTransferAnAmountOfZero
	
	| sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self assert: 0 equals: sourceAccount balance.
	self assert: 0 equals: destinyAccount balance.
	
	self should: [Transfer from: sourceAccount to: destinyAccount anAmountOf: 0. self fail] 
		raise:  Error
		withMessageText: Transfer canNotTransferAnAmountOfZeroErrorDescription.!
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:51:45' prior: 50964103!
test03IsPossibleGettingDestinyAccountFromTransfer
	
	| sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self assert: 0 equals: sourceAccount balance.
	self assert: 0 equals: destinyAccount balance.
	
	self should: [Transfer from: sourceAccount to: destinyAccount anAmountOf: 0.] 
		raise: Error
		withMessageText: Transfer canNotTransferAnAmountOfZeroErrorDescription .! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:51:52' prior: 50966558!
test03IsPossibleGettingDestinyAccountFromTransfer
	
	| sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self assert: 0 equals: sourceAccount balance.
	self assert: 0 equals: destinyAccount balance.
	
	self should: [Transfer from: sourceAccount to: destinyAccount anAmountOf: 0. self fail] 
		raise: Error
		withMessageText: Transfer canNotTransferAnAmountOfZeroErrorDescription .! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:51:58' prior: 50966575!
test03IsPossibleGettingDestinyAccountFromTransfer
	
	| sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self should: [Transfer from: sourceAccount to: destinyAccount anAmountOf: 0. self fail] 
		raise: Error
		withMessageText: Transfer canNotTransferAnAmountOfZeroErrorDescription .! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:52:16'!
test02CanNotTransferAnAmountOfZeroErrorDescription 
	
	| sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self should: [Transfer from: sourceAccount to: destinyAccount anAmountOf: 0. self fail] 
		raise: Error
		withMessageText: Transfer canNotTransferAnAmountOfZeroErrorDescription .! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:53:12'!
test03CanNotTransferANegativeAmountErrorDescription
	
	| sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self should: [Transfer from: sourceAccount to: destinyAccount anAmountOf: -100. self fail] 
		raise: Error
		withMessageText: Transfer canNotTransferANegativeAmountErrorDescription .! !
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:53:24'!
canNotTransferANegativeAmountErrorDescription
	self shouldBeImplemented.! !
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:54:04' prior: 50966635!
canNotTransferANegativeAmountErrorDescription
	
	^ ' Can not transfer a negative amount '! !
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:55:01' prior: 50966529!
from: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer 

	(valueToTransfer = 0) ifTrue: [ self error: self canNotTransferAnAmountOfZeroErrorDescription ].
	(valueToTransfer  < 0) ifTrue: [ self error: self canNotTransferANegativeAmountErrorDescription ].
		
	^ Transfer new initializeFrom: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer .! !

!methodRemoval: TransferTest #test03IsPossibleGettingDestinyAccountFromTransfer stamp: 'ja 11/14/2020 19:34:09'!
test03IsPossibleGettingDestinyAccountFromTransfer
	
	| sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self should: [Transfer from: sourceAccount to: destinyAccount anAmountOf: 0. self fail] 
		raise: Error
		withMessageText: Transfer canNotTransferAnAmountOfZeroErrorDescription .!
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 17:03:02'!
test04TransferIsRegisteredIntoInvolvedAccount
	
	| sourceAccount destinyAccount transfer |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	transfer _ Transfer from: sourceAccount to: destinyAccount anAmountOf: 100.
	
	self assert: sourceAccount transactions includes: transfer depositMade. 
	
	self assert: destinyAccount transactions includes: transfer withdrawMade.
	
	
	! !

!methodRemoval: TransferTest #test04IsPossibleGettingTransferFromSourceAccount stamp: 'ja 11/14/2020 19:34:09'!
test04IsPossibleGettingTransferFromSourceAccount
	
	| transfer sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	transfer  _ Transfer from: sourceAccount to: destinyAccount anAmountOf: 2.
	
	self assert: sourceAccount transfers includes: transfer . !
!Transfer methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 17:03:36'!
depositMade
	self shouldBeImplemented.! !
!Transfer methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 17:03:59' prior: 50966705!
depositMade
	
	^ nil! !

!classDefinition: #Transfer category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 19:34:10'!
Object subclass: #Transfer
	instanceVariableNames: 'value depositMade'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #Transfer category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 19:34:10'!
Object subclass: #Transfer
	instanceVariableNames: 'value depositMade withdrawMade'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!
!Transfer methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 17:05:37' prior: 50966420!
initializeFrom: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer 

	depositMade _ TransferDeposit register: valueToTransfer on: aDestinyAccount .
	withdrawMade _ TransferWithdraw register: valueToTransfer on: aSourceAccount .
	
	value _ valueToTransfer .! !
!TransferType methodsFor: 'no messages' stamp: 'ja 11/14/2020 17:06:54' overrides: 50964395!
affectBalance: aBalance

	self subclassResponsibility ! !
!TransferType methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 17:07:07' overrides: 50964391!
value 

	self subclassResponsibility ! !
!TransferDeposit methodsFor: 'no messages' stamp: 'ja 11/14/2020 17:07:24' overrides: 50964395!
affectBalance: aBalance! !
!TransferDeposit methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 17:07:42' overrides: 50964391!
value ! !
!TransferWithdraw methodsFor: 'no messages' stamp: 'ja 11/14/2020 17:08:48' overrides: 50964395!
affectBalance: aBalance! !
!TransferWithdraw methodsFor: 'nil' stamp: 'ja 11/14/2020 17:08:58' overrides: 50964391!
value ! !

!classDefinition: #Deposit category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 19:34:10'!
AccountTransaction subclass: #Deposit
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #Deposit category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 19:34:10'!
AccountTransaction subclass: #Deposit
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #Withdraw category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 19:34:10'!
AccountTransaction subclass: #Withdraw
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #Withdraw category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 19:34:10'!
AccountTransaction subclass: #Withdraw
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!
!TransferDeposit methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 17:13:02' prior: 50966752 overrides: 50964395!
affectBalance: aBalance

	
	^aBalance ! !
!TransferWithdraw methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 17:13:13' prior: 50966761 overrides: 50964395!
affectBalance: aBalance

	
	^aBalance ! !
!TransferDeposit methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 17:13:29' prior: 50966799 overrides: 50964395!
affectBalance: aBalance

	
	^aBalance + value! !
!TransferWithdraw methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 17:13:37' prior: 50966805 overrides: 50964395!
affectBalance: aBalance

	
	^aBalance - value! !
!TransferDeposit methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 17:15:41' prior: 50966811 overrides: 50964395!
affectBalance: aBalance

	^aBalance + value! !
!TransferWithdraw methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 17:28:28' prior: 50966817 overrides: 50964395!
affectBalance: aBalance

	^aBalance - value! !
!TransferDeposit class methodsFor: 'no messages' stamp: 'ja 11/14/2020 17:30:42'!
for: aValue

	^ self new initializeFor: aValue ! !
!TransferWithdraw class methodsFor: 'no messages' stamp: 'ja 11/14/2020 17:30:47'!
for: aValue

	^ self new initializeFor: aValue ! !
!TransferDeposit methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 17:31:17'!
initializeFor: aValue

	value := aValue ! !
!TransferWithdraw methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 17:31:23'!
initializeFor: aValue

	value := aValue ! !
!TransferWithdraw methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 17:31:31' prior: 50966849!
initializeFor: aValue

	value _ aValue ! !
!TransferDeposit methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 17:31:42' prior: 50966844!
initializeFor: aValue

	value _ aValue ! !
!Transfer methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 17:33:24' prior: 50966710!
depositMade
	
	^ depositMade ! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 17:34:30' prior: 50966676!
test04TransferIsRegisteredIntoInvolvedAccount
	
	| sourceAccount destinyAccount transfer |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	transfer _ Transfer from: sourceAccount to: destinyAccount anAmountOf: 100.
	
	self assert: sourceAccount transactions includes: transfer withdrawMade. 
	
	self assert: destinyAccount transactions includes: transfer depositMade.
	
	
	! !
!Transfer methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 17:36:36'!
withdrawMade
	self shouldBeImplemented.
	^withdrawMade! !
!Transfer methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 17:36:40' prior: 50966885!
withdrawMade
	
	^withdrawMade! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 17:38:11'!
test04TransferIsRegisteredIntoInvolvedAccounts
	
	| sourceAccount destinyAccount transfer |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	transfer _ Transfer from: sourceAccount to: destinyAccount anAmountOf: 100.
	
	self assert: sourceAccount transactions includes: transfer withdrawMade. 
	
	self assert: destinyAccount transactions includes: transfer depositMade.
	
	
	! !

!methodRemoval: TransferTest #test04TransferIsRegisteredIntoInvolvedAccount stamp: 'ja 11/14/2020 19:34:10'!
test04TransferIsRegisteredIntoInvolvedAccount
	
	| sourceAccount destinyAccount transfer |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	transfer _ Transfer from: sourceAccount to: destinyAccount anAmountOf: 100.
	
	self assert: sourceAccount transactions includes: transfer withdrawMade. 
	
	self assert: destinyAccount transactions includes: transfer depositMade.
	
	
	!
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 17:46:01'!
test05TransferValueIsNotReplicated
	
	| transfer sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	transfer  _ Transfer from: sourceAccount to: destinyAccount anAmountOf: 100.
	
	sourceAccount transactions ! !

!classDefinition: #AccountTransaction category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 19:34:10'!
Object subclass: #AccountTransaction
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #AccountTransaction category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 19:34:10'!
Object subclass: #AccountTransaction
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #Deposit category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 19:34:10'!
AccountTransaction subclass: #Deposit
	instanceVariableNames: 'value'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #Deposit category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 19:34:10'!
AccountTransaction subclass: #Deposit
	instanceVariableNames: 'value'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #Withdraw category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 19:34:10'!
AccountTransaction subclass: #Withdraw
	instanceVariableNames: 'value'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #Withdraw category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 19:34:10'!
AccountTransaction subclass: #Withdraw
	instanceVariableNames: 'value'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!
!TransferDeposit methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 17:55:18' prior: 50966823 overrides: 50964395!
affectBalance: aBalance

	^self value + aBalance ! !
!TransferWithdraw methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 17:55:36' prior: 50966829 overrides: 50964395!
affectBalance: aBalance

	^self value - aBalance ! !

!classDefinition: #TransferType category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 19:34:10'!
AccountTransaction subclass: #TransferType
	instanceVariableNames: 'relatedTransfer'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #TransferType category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 19:34:10'!
AccountTransaction subclass: #TransferType
	instanceVariableNames: 'relatedTransfer'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!
!TransferType methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 17:56:29' prior: 50966747 overrides: 50964391!
value 

	^ relatedTransfer value! !

!methodRemoval: TransferDeposit #value stamp: 'ja 11/14/2020 19:34:10'!
value !

!methodRemoval: TransferWithdraw #value stamp: 'ja 11/14/2020 19:34:10'!
value !

!methodRemoval: TransferWithdraw #initializeFor: stamp: 'ja 11/14/2020 19:34:10'!
initializeFor: aValue

	value _ aValue !

!methodRemoval: TransferDeposit #initializeFor: stamp: 'ja 11/14/2020 19:34:10'!
initializeFor: aValue

	value _ aValue !
!TransferType methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 17:57:51'!
initializaFor: aTransfer

	relatedTransfer _ aTransfer ! !
!TransferType methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 17:58:06'!
initializeFor: aTransfer

	relatedTransfer _ aTransfer ! !

!methodRemoval: TransferType #initializaFor: stamp: 'ja 11/14/2020 19:34:10'!
initializaFor: aTransfer

	relatedTransfer _ aTransfer !
!TransferType class methodsFor: 'no messages' stamp: 'ja 11/14/2020 17:59:22'!
for: aValue

	^ self new initializeFor: aValue ! !

!methodRemoval: TransferDeposit class #for: stamp: 'ja 11/14/2020 19:34:10'!
for: aValue

	^ self new initializeFor: aValue !

!methodRemoval: TransferWithdraw class #for: stamp: 'ja 11/14/2020 19:34:10'!
for: aValue

	^ self new initializeFor: aValue !
!TransferType class methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 18:00:01' prior: 50967044!
for: aTransfer

	^ self new initializeFor: aTransfer ! !

!methodRemoval: TransferTest #test05IsPossibleGettingTransferFromDestinyAccount stamp: 'ja 11/14/2020 19:34:11'!
test05IsPossibleGettingTransferFromDestinyAccount
	
	| transfer sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	transfer  _ Transfer from: sourceAccount to: destinyAccount anAmountOf: 2.
	
	self assert: destinyAccount transfers includes: transfer . !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 18:08:27' prior: 50966926!
test05TransferValueIsNotReplicated
	
	| transfer sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	transfer  _ Transfer from: sourceAccount to: destinyAccount anAmountOf: 100.
	
	! !
!Transfer methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 18:10:08'!
changeValueTo: aNewValue

	value _ aNewValue 

	! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 18:10:44' prior: 50967076!
test05TransferValueIsNotReplicated
	
	| transfer sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	transfer  _ Transfer from: sourceAccount to: destinyAccount anAmountOf: 100.
	
	transfer changeValueTo: 10.
	
	! !
!Transfer methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 18:11:16' prior: 50967087!
changeValueTo: aNewValue
	
	value _ aNewValue 

	! !
!Transfer methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 18:12:23' prior: 50967104!
changeValueTo: aNewValue
	" for testing pourposite only "
	value _ aNewValue 

	! !
!Transfer methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 18:12:57' prior: 50967109!
changeValueTo: aNewValue
	" for testing purpose only "
	value _ aNewValue 

	! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 18:13:42' prior: 50967092!
test05TransferValueIsNotReplicated
	
	| transfer sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	transfer  _ Transfer from: sourceAccount to: destinyAccount anAmountOf: 100.
	
	self assert: -100 equals: sourceAccount balance.
	self assert: 100 equals: destinyAccount balance.
		
	transfer changeValueTo: 10.
	
	! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 18:14:14' prior: 50967121!
test05TransferValueIsNotReplicated
	
	| transfer sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	transfer  _ Transfer from: sourceAccount to: destinyAccount anAmountOf: 100.
	
	self assert: -100 equals: sourceAccount balance.
	self assert: 100 equals: destinyAccount balance.
		
	transfer changeValueTo: 10.
	
	self assert: -10 equals: sourceAccount balance.
	self assert: 10 equals: destinyAccount balance.
	! !
!AccountTransaction class methodsFor: 'instance creation' stamp: 'ja 11/14/2020 18:19:14' prior: 50964409!
register: aValueOrTransfer on: account

	| transaction |
	
	transaction := self for: aValueOrTransfer.
	account register: transaction.
		
	^ transaction! !
!Transfer methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 18:22:36' prior: 50966730!
initializeFrom: aSourceAccount to: aDestinyAccount anAmountOf: aValueToTransfer 

	depositMade _ TransferDeposit register: self on: aDestinyAccount .
	withdrawMade _ TransferWithdraw register: self on: aSourceAccount .
	
	value _ aValueToTransfer .! !
!TransferWithdraw methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 18:30:32' prior: 50966991 overrides: 50964395!
affectBalance: aBalance

	^ aBalance - self value ! !
!TransferDeposit methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 18:30:47' prior: 50966985 overrides: 50964395!
affectBalance: aBalance

	^ aBalance + self value ! !
!Transfer methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 18:33:42' prior: 50967115!
changeValueTo: aNewValue
	
	" Ya que no existe un mapeo con la realidad entre este mensaje y una verdadera transferencia bancaria
	afirmamos que este no hace a la esencia de Transfer pero lo incorporamos para poder testear que el valor
	de las transferencias no est� replicado "
	
	value _ aNewValue 

	! !
!Transfer methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 18:36:27' prior: 50967187!
changeValueTo: aNewValue
	
	" Ya que no existe un mapeo con la realidad entre este mensaje y una verdadera transferencia bancaria
	afirmamos que �ste no hace a la esencia de Transfer pero lo incorporamos para poder testear que el valor
	de las transferencias no est� replicado "
	
	value _ aNewValue 

	! !

----STARTUP---- (14 November 2020 19:42:04) as /home/jampuero/Documentos/isw1/linux64/CuisUniversity-4365.image!


!classDefinition: #TransferDeposit category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 19:42:11'!
TransferCollaborators subclass: #TransferDeposit
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #TransferDeposit category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 19:42:11'!
TransferCollaborators subclass: #TransferDeposit
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #TransferWithdraw category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 19:42:11'!
TransferCollaborators subclass: #TransferWithdraw
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #TransferWithdraw category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 19:42:11'!
TransferCollaborators subclass: #TransferWithdraw
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!
!ReceptiveAccount methodsFor: 'transactions' stamp: 'ja 11/14/2020 15:30:39' prior: 50964345!
register: aTransaction

	transactions add: aTransaction 
! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:24:43' prior: 50964075!
test01TransferHasSourceDestinyAndValueWhenCreated
	
	| transfer sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	transfer  _ Transfer from: sourceAccount to: destinyAccount anAmountOf: 2.
	
	self assert: transfer hasSource.

	
	! !

!classDefinition: #TransferType category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 19:42:11'!
AccountTransaction subclass: #TransferType
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #TransferType category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 19:42:11'!
AccountTransaction subclass: #TransferType
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:29:11'!
test01TransferAffectsSourceAndDestinyBalance
	
	| transfer sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	transfer  _ Transfer from: sourceAccount to: destinyAccount anAmountOf: 100.
	
	self assert: sourceAccount balance 

	
	! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:31:05' prior: 50966222!
test01TransferAffectsSourceAndDestinyBalance
	
	| transfer sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self assert: 0 equals: (sourceAccount balance).
	self assert: 0 equals: (destinyAccount balance).
	
	transfer  _ Transfer from: sourceAccount to: destinyAccount anAmountOf: 100.
	
	self assert: -100 equals: (sourceAccount balance).
	self assert: 100 equals: (destinyAccount balance).
	self assert: 100 equals: transfer value.	
	! !

!methodRemoval: TransferTest #test01TransferHasSourceDestinyAndValueWhenCreated stamp: 'ja 11/14/2020 19:42:11'!
test01TransferHasSourceDestinyAndValueWhenCreated
	
	| transfer sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	transfer  _ Transfer from: sourceAccount to: destinyAccount anAmountOf: 2.
	
	self assert: transfer hasSource.

	
	!
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:31:42' prior: 50966235!
test01TransferAffectsSourceAndDestinyBalance
	
	| transfer sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self assert: 0 equals: sourceAccount balance.
	self assert: 0 equals: destinyAccount balance.
	
	transfer  _ Transfer from: sourceAccount to: destinyAccount anAmountOf: 100.
	
	self assert: -100 equals: sourceAccount balance.
	self assert: 100 equals: destinyAccount balance.
	self assert: 100 equals: transfer value.	
	! !
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:31:57'!
from: aReceptiveAccount to: aReceptiveAccount2 anAmountOf: aSmallInteger 
	self shouldBeImplemented.! !

!classDefinition: 'Transfer class' category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 19:42:12'!
Transfer class
	instanceVariableNames: 'value'!
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:34:30' prior: 50966286!
from: aReceptiveAccount to: aReceptiveAccount2 anAmountOf: aSmallInteger 
	
	Deposit register: aSmallInteger on: aReceptiveAccount2 .
	Withdraw register: aSmallInteger on: aReceptiveAccount .
	value _ aSmallInteger .! !
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:34:50' prior: 50966297!
from: aSourceAccount to: aReceptiveAccount2 anAmountOf: aSmallInteger 
	
	Deposit register: aSmallInteger on: aReceptiveAccount2 .
	Withdraw register: aSmallInteger on: aSourceAccount .
	value _ aSmallInteger .! !
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:35:04' prior: 50966307!
from: aSourceAccount to: aDestinyAccount anAmountOf: aSmallInteger 
	
	Deposit register: aSmallInteger on: aDestinyAccount .
	Withdraw register: aSmallInteger on: aSourceAccount .
	value _ aSmallInteger .! !
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:35:29' prior: 50966317!
from: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer 
	
	Deposit register: valueToTransfer on: aDestinyAccount .
	Withdraw register: valueToTransfer on: aSourceAccount .
	value _ valueToTransfer .! !

!classDefinition: #Transfer category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 19:42:12'!
Object subclass: #Transfer
	instanceVariableNames: 'value'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!
!Transfer methodsFor: 'no messages' stamp: 'ja 11/14/2020 16:36:17' overrides: 16896425!
initialize

	value _ 0! !
!Transfer methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:36:58' overrides: 16881508!
value 

	^ value ! !

!methodRemoval: Transfer class #from:to:anAmountOf: stamp: 'ja 11/14/2020 19:42:12'!
from: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer 
	
	Deposit register: valueToTransfer on: aDestinyAccount .
	Withdraw register: valueToTransfer on: aSourceAccount .
	value _ valueToTransfer .!
!Transfer methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:38:06'!
from: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer 
	
	Deposit register: valueToTransfer on: aDestinyAccount .
	Withdraw register: valueToTransfer on: aSourceAccount .
	value _ valueToTransfer .! !

!classDefinition: 'Transfer class' category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 19:42:12'!
Transfer class
	instanceVariableNames: ''!

!classDefinition: 'Transfer class' category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 19:42:12'!
Transfer class
	instanceVariableNames: ''!
!Transfer class methodsFor: 'no messages' stamp: 'ja 11/14/2020 16:40:54'!
from: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer 

	Transfer new initializeFrom: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer .! !
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:41:02' prior: 50966380!
from: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer 

	^ Transfer new initializeFrom: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer .! !
!Transfer methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:41:20'!
initializeFrom: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer 

	Deposit register: valueToTransfer on: aDestinyAccount .
	Withdraw register: valueToTransfer on: aSourceAccount .
	value _ valueToTransfer .! !

!methodRemoval: Transfer #from:to:anAmountOf: stamp: 'ja 11/14/2020 19:42:12'!
from: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer 
	
	Deposit register: valueToTransfer on: aDestinyAccount .
	Withdraw register: valueToTransfer on: aSourceAccount .
	value _ valueToTransfer .!

!methodRemoval: Transfer #initialize stamp: 'ja 11/14/2020 19:42:12'!
initialize

	value _ 0!
!Transfer methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:42:09' prior: 50966397!
initializeFrom: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer 

	Deposit register: valueToTransfer on: aDestinyAccount .
	Withdraw register: valueToTransfer on: aSourceAccount .
	
	value _ valueToTransfer .! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:42:27' prior: 50966267!
test01TransferAffectsSourceAndDestinyBalance
	
	| transfer sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self assert: 0 equals: sourceAccount balance.
	self assert: 0 equals: destinyAccount balance.
	
	transfer  _ Transfer from: sourceAccount to: destinyAccount anAmountOf: 100.
	
	self assert: -100 equals: sourceAccount balance.
	self assert: 100 equals: destinyAccount balance.
! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:42:57' prior: 50966431!
test01TransferAffectsSourceAndDestinyBalance
	
	| sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self assert: 0 equals: sourceAccount balance.
	self assert: 0 equals: destinyAccount balance.
	
	Transfer from: sourceAccount to: destinyAccount anAmountOf: 100.
	
	self assert: -100 equals: sourceAccount balance.
	self assert: 100 equals: destinyAccount balance.
! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:46:53' prior: 50964090!
test02IsPossibleGettingSourceAccountFromTransfer
	
	| sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self assert: 0 equals: sourceAccount balance.
	self assert: 0 equals: destinyAccount balance.
	
	self should: [Transfer from: sourceAccount to: destinyAccount anAmountOf: 0. self fail] 
		raise:  Error
		withMessageText: Transfer canNotTransferAnAmountOfZeroErrorDescription.! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:47:27'!
test02CanNotTransferAnAmountOfZero
	
	| sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self assert: 0 equals: sourceAccount balance.
	self assert: 0 equals: destinyAccount balance.
	
	self should: [Transfer from: sourceAccount to: destinyAccount anAmountOf: 0. self fail] 
		raise:  Error
		withMessageText: Transfer canNotTransferAnAmountOfZeroErrorDescription.! !

!methodRemoval: TransferTest #test02IsPossibleGettingSourceAccountFromTransfer stamp: 'ja 11/14/2020 19:42:12'!
test02IsPossibleGettingSourceAccountFromTransfer
	
	| sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self assert: 0 equals: sourceAccount balance.
	self assert: 0 equals: destinyAccount balance.
	
	self should: [Transfer from: sourceAccount to: destinyAccount anAmountOf: 0. self fail] 
		raise:  Error
		withMessageText: Transfer canNotTransferAnAmountOfZeroErrorDescription.!
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:47:42'!
canNotTransferAnAmountOfZeroErrorDescription
	self shouldBeImplemented.! !
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:48:16' prior: 50966517!
canNotTransferAnAmountOfZeroErrorDescription
	
	^ 'Can not transfer an amount of zero'! !
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:49:41' prior: 50966389!
from: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer 

	(valueToTransfer = 0) ifTrue: [ self error: self canNotTransferAnAmountOfZeroErrorDescription ].
		
	^ Transfer new initializeFrom: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer .! !

!methodRemoval: TransferTest #test02CanNotTransferAnAmountOfZero stamp: 'ja 11/14/2020 19:42:12'!
test02CanNotTransferAnAmountOfZero
	
	| sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self assert: 0 equals: sourceAccount balance.
	self assert: 0 equals: destinyAccount balance.
	
	self should: [Transfer from: sourceAccount to: destinyAccount anAmountOf: 0. self fail] 
		raise:  Error
		withMessageText: Transfer canNotTransferAnAmountOfZeroErrorDescription.!
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:51:45' prior: 50964103!
test03IsPossibleGettingDestinyAccountFromTransfer
	
	| sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self assert: 0 equals: sourceAccount balance.
	self assert: 0 equals: destinyAccount balance.
	
	self should: [Transfer from: sourceAccount to: destinyAccount anAmountOf: 0.] 
		raise: Error
		withMessageText: Transfer canNotTransferAnAmountOfZeroErrorDescription .! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:51:52' prior: 50966558!
test03IsPossibleGettingDestinyAccountFromTransfer
	
	| sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self assert: 0 equals: sourceAccount balance.
	self assert: 0 equals: destinyAccount balance.
	
	self should: [Transfer from: sourceAccount to: destinyAccount anAmountOf: 0. self fail] 
		raise: Error
		withMessageText: Transfer canNotTransferAnAmountOfZeroErrorDescription .! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:51:58' prior: 50966575!
test03IsPossibleGettingDestinyAccountFromTransfer
	
	| sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self should: [Transfer from: sourceAccount to: destinyAccount anAmountOf: 0. self fail] 
		raise: Error
		withMessageText: Transfer canNotTransferAnAmountOfZeroErrorDescription .! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:52:16'!
test02CanNotTransferAnAmountOfZeroErrorDescription 
	
	| sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self should: [Transfer from: sourceAccount to: destinyAccount anAmountOf: 0. self fail] 
		raise: Error
		withMessageText: Transfer canNotTransferAnAmountOfZeroErrorDescription .! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:53:12'!
test03CanNotTransferANegativeAmountErrorDescription
	
	| sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self should: [Transfer from: sourceAccount to: destinyAccount anAmountOf: -100. self fail] 
		raise: Error
		withMessageText: Transfer canNotTransferANegativeAmountErrorDescription .! !
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:53:24'!
canNotTransferANegativeAmountErrorDescription
	self shouldBeImplemented.! !
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:54:04' prior: 50966635!
canNotTransferANegativeAmountErrorDescription
	
	^ ' Can not transfer a negative amount '! !
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 16:55:01' prior: 50966529!
from: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer 

	(valueToTransfer = 0) ifTrue: [ self error: self canNotTransferAnAmountOfZeroErrorDescription ].
	(valueToTransfer  < 0) ifTrue: [ self error: self canNotTransferANegativeAmountErrorDescription ].
		
	^ Transfer new initializeFrom: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer .! !

!methodRemoval: TransferTest #test03IsPossibleGettingDestinyAccountFromTransfer stamp: 'ja 11/14/2020 19:42:12'!
test03IsPossibleGettingDestinyAccountFromTransfer
	
	| sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	self should: [Transfer from: sourceAccount to: destinyAccount anAmountOf: 0. self fail] 
		raise: Error
		withMessageText: Transfer canNotTransferAnAmountOfZeroErrorDescription .!
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 17:03:02'!
test04TransferIsRegisteredIntoInvolvedAccount
	
	| sourceAccount destinyAccount transfer |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	transfer _ Transfer from: sourceAccount to: destinyAccount anAmountOf: 100.
	
	self assert: sourceAccount transactions includes: transfer depositMade. 
	
	self assert: destinyAccount transactions includes: transfer withdrawMade.
	
	
	! !

!methodRemoval: TransferTest #test04IsPossibleGettingTransferFromSourceAccount stamp: 'ja 11/14/2020 19:42:12'!
test04IsPossibleGettingTransferFromSourceAccount
	
	| transfer sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	transfer  _ Transfer from: sourceAccount to: destinyAccount anAmountOf: 2.
	
	self assert: sourceAccount transfers includes: transfer . !
!Transfer methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 17:03:36'!
depositMade
	self shouldBeImplemented.! !
!Transfer methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 17:03:59' prior: 50966705!
depositMade
	
	^ nil! !

!classDefinition: #Transfer category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 19:42:12'!
Object subclass: #Transfer
	instanceVariableNames: 'value depositMade'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #Transfer category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 19:42:12'!
Object subclass: #Transfer
	instanceVariableNames: 'value depositMade withdrawMade'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!
!Transfer methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 17:05:37' prior: 50966420!
initializeFrom: aSourceAccount to: aDestinyAccount anAmountOf: valueToTransfer 

	depositMade _ TransferDeposit register: valueToTransfer on: aDestinyAccount .
	withdrawMade _ TransferWithdraw register: valueToTransfer on: aSourceAccount .
	
	value _ valueToTransfer .! !
!TransferType methodsFor: 'no messages' stamp: 'ja 11/14/2020 17:06:54' overrides: 50964395!
affectBalance: aBalance

	self subclassResponsibility ! !
!TransferType methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 17:07:07' overrides: 50964391!
value 

	self subclassResponsibility ! !
!TransferDeposit methodsFor: 'no messages' stamp: 'ja 11/14/2020 17:07:24' overrides: 50964395!
affectBalance: aBalance! !
!TransferDeposit methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 17:07:42' overrides: 50964391!
value ! !
!TransferWithdraw methodsFor: 'no messages' stamp: 'ja 11/14/2020 17:08:48' overrides: 50964395!
affectBalance: aBalance! !
!TransferWithdraw methodsFor: 'nil' stamp: 'ja 11/14/2020 17:08:58' overrides: 50964391!
value ! !

!classDefinition: #Deposit category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 19:42:13'!
AccountTransaction subclass: #Deposit
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #Deposit category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 19:42:13'!
AccountTransaction subclass: #Deposit
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #Withdraw category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 19:42:13'!
AccountTransaction subclass: #Withdraw
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #Withdraw category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 19:42:13'!
AccountTransaction subclass: #Withdraw
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!
!TransferDeposit methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 17:13:02' prior: 50966752 overrides: 50964395!
affectBalance: aBalance

	
	^aBalance ! !
!TransferWithdraw methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 17:13:13' prior: 50966761 overrides: 50964395!
affectBalance: aBalance

	
	^aBalance ! !
!TransferDeposit methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 17:13:29' prior: 50966799 overrides: 50964395!
affectBalance: aBalance

	
	^aBalance + value! !
!TransferWithdraw methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 17:13:37' prior: 50966805 overrides: 50964395!
affectBalance: aBalance

	
	^aBalance - value! !
!TransferDeposit methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 17:15:41' prior: 50966811 overrides: 50964395!
affectBalance: aBalance

	^aBalance + value! !
!TransferWithdraw methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 17:28:28' prior: 50966817 overrides: 50964395!
affectBalance: aBalance

	^aBalance - value! !
!TransferDeposit class methodsFor: 'no messages' stamp: 'ja 11/14/2020 17:30:42'!
for: aValue

	^ self new initializeFor: aValue ! !
!TransferWithdraw class methodsFor: 'no messages' stamp: 'ja 11/14/2020 17:30:47'!
for: aValue

	^ self new initializeFor: aValue ! !
!TransferDeposit methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 17:31:17'!
initializeFor: aValue

	value := aValue ! !
!TransferWithdraw methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 17:31:23'!
initializeFor: aValue

	value := aValue ! !
!TransferWithdraw methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 17:31:31' prior: 50966849!
initializeFor: aValue

	value _ aValue ! !
!TransferDeposit methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 17:31:42' prior: 50966844!
initializeFor: aValue

	value _ aValue ! !
!Transfer methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 17:33:24' prior: 50966710!
depositMade
	
	^ depositMade ! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 17:34:30' prior: 50966676!
test04TransferIsRegisteredIntoInvolvedAccount
	
	| sourceAccount destinyAccount transfer |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	transfer _ Transfer from: sourceAccount to: destinyAccount anAmountOf: 100.
	
	self assert: sourceAccount transactions includes: transfer withdrawMade. 
	
	self assert: destinyAccount transactions includes: transfer depositMade.
	
	
	! !
!Transfer methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 17:36:36'!
withdrawMade
	self shouldBeImplemented.
	^withdrawMade! !
!Transfer methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 17:36:40' prior: 50966885!
withdrawMade
	
	^withdrawMade! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 17:38:11'!
test04TransferIsRegisteredIntoInvolvedAccounts
	
	| sourceAccount destinyAccount transfer |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	transfer _ Transfer from: sourceAccount to: destinyAccount anAmountOf: 100.
	
	self assert: sourceAccount transactions includes: transfer withdrawMade. 
	
	self assert: destinyAccount transactions includes: transfer depositMade.
	
	
	! !

!methodRemoval: TransferTest #test04TransferIsRegisteredIntoInvolvedAccount stamp: 'ja 11/14/2020 19:42:13'!
test04TransferIsRegisteredIntoInvolvedAccount
	
	| sourceAccount destinyAccount transfer |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	transfer _ Transfer from: sourceAccount to: destinyAccount anAmountOf: 100.
	
	self assert: sourceAccount transactions includes: transfer withdrawMade. 
	
	self assert: destinyAccount transactions includes: transfer depositMade.
	
	
	!
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 17:46:01'!
test05TransferValueIsNotReplicated
	
	| transfer sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	transfer  _ Transfer from: sourceAccount to: destinyAccount anAmountOf: 100.
	
	sourceAccount transactions ! !

!classDefinition: #AccountTransaction category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 19:42:13'!
Object subclass: #AccountTransaction
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #AccountTransaction category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 19:42:13'!
Object subclass: #AccountTransaction
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #Deposit category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 19:42:13'!
AccountTransaction subclass: #Deposit
	instanceVariableNames: 'value'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #Deposit category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 19:42:13'!
AccountTransaction subclass: #Deposit
	instanceVariableNames: 'value'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #Withdraw category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 19:42:13'!
AccountTransaction subclass: #Withdraw
	instanceVariableNames: 'value'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #Withdraw category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 19:42:13'!
AccountTransaction subclass: #Withdraw
	instanceVariableNames: 'value'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!
!TransferDeposit methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 17:55:18' prior: 50966823 overrides: 50964395!
affectBalance: aBalance

	^self value + aBalance ! !
!TransferWithdraw methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 17:55:36' prior: 50966829 overrides: 50964395!
affectBalance: aBalance

	^self value - aBalance ! !

!classDefinition: #TransferType category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 19:42:13'!
AccountTransaction subclass: #TransferType
	instanceVariableNames: 'relatedTransfer'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #TransferType category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 19:42:13'!
AccountTransaction subclass: #TransferType
	instanceVariableNames: 'relatedTransfer'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!
!TransferType methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 17:56:29' prior: 50966747 overrides: 50964391!
value 

	^ relatedTransfer value! !

!methodRemoval: TransferDeposit #value stamp: 'ja 11/14/2020 19:42:13'!
value !

!methodRemoval: TransferWithdraw #value stamp: 'ja 11/14/2020 19:42:13'!
value !

!methodRemoval: TransferWithdraw #initializeFor: stamp: 'ja 11/14/2020 19:42:13'!
initializeFor: aValue

	value _ aValue !

!methodRemoval: TransferDeposit #initializeFor: stamp: 'ja 11/14/2020 19:42:13'!
initializeFor: aValue

	value _ aValue !
!TransferType methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 17:57:51'!
initializaFor: aTransfer

	relatedTransfer _ aTransfer ! !
!TransferType methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 17:58:06'!
initializeFor: aTransfer

	relatedTransfer _ aTransfer ! !

!methodRemoval: TransferType #initializaFor: stamp: 'ja 11/14/2020 19:42:13'!
initializaFor: aTransfer

	relatedTransfer _ aTransfer !
!TransferType class methodsFor: 'no messages' stamp: 'ja 11/14/2020 17:59:22'!
for: aValue

	^ self new initializeFor: aValue ! !

!methodRemoval: TransferDeposit class #for: stamp: 'ja 11/14/2020 19:42:13'!
for: aValue

	^ self new initializeFor: aValue !

!methodRemoval: TransferWithdraw class #for: stamp: 'ja 11/14/2020 19:42:13'!
for: aValue

	^ self new initializeFor: aValue !
!TransferType class methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 18:00:01' prior: 50967044!
for: aTransfer

	^ self new initializeFor: aTransfer ! !

!methodRemoval: TransferTest #test05IsPossibleGettingTransferFromDestinyAccount stamp: 'ja 11/14/2020 19:42:14'!
test05IsPossibleGettingTransferFromDestinyAccount
	
	| transfer sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	transfer  _ Transfer from: sourceAccount to: destinyAccount anAmountOf: 2.
	
	self assert: destinyAccount transfers includes: transfer . !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 18:08:27' prior: 50966926!
test05TransferValueIsNotReplicated
	
	| transfer sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	transfer  _ Transfer from: sourceAccount to: destinyAccount anAmountOf: 100.
	
	! !
!Transfer methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 18:10:08'!
changeValueTo: aNewValue

	value _ aNewValue 

	! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 18:10:44' prior: 50967076!
test05TransferValueIsNotReplicated
	
	| transfer sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	transfer  _ Transfer from: sourceAccount to: destinyAccount anAmountOf: 100.
	
	transfer changeValueTo: 10.
	
	! !
!Transfer methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 18:11:16' prior: 50967087!
changeValueTo: aNewValue
	
	value _ aNewValue 

	! !
!Transfer methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 18:12:23' prior: 50967104!
changeValueTo: aNewValue
	" for testing pourposite only "
	value _ aNewValue 

	! !
!Transfer methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 18:12:57' prior: 50967109!
changeValueTo: aNewValue
	" for testing purpose only "
	value _ aNewValue 

	! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 18:13:42' prior: 50967092!
test05TransferValueIsNotReplicated
	
	| transfer sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	transfer  _ Transfer from: sourceAccount to: destinyAccount anAmountOf: 100.
	
	self assert: -100 equals: sourceAccount balance.
	self assert: 100 equals: destinyAccount balance.
		
	transfer changeValueTo: 10.
	
	! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 18:14:14' prior: 50967121!
test05TransferValueIsNotReplicated
	
	| transfer sourceAccount destinyAccount |
	
	sourceAccount _ ReceptiveAccount new .
	
	destinyAccount _ ReceptiveAccount new .
	
	transfer  _ Transfer from: sourceAccount to: destinyAccount anAmountOf: 100.
	
	self assert: -100 equals: sourceAccount balance.
	self assert: 100 equals: destinyAccount balance.
		
	transfer changeValueTo: 10.
	
	self assert: -10 equals: sourceAccount balance.
	self assert: 10 equals: destinyAccount balance.
	! !
!AccountTransaction class methodsFor: 'instance creation' stamp: 'ja 11/14/2020 18:19:14' prior: 50964409!
register: aValueOrTransfer on: account

	| transaction |
	
	transaction := self for: aValueOrTransfer.
	account register: transaction.
		
	^ transaction! !
!Transfer methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 18:22:36' prior: 50966730!
initializeFrom: aSourceAccount to: aDestinyAccount anAmountOf: aValueToTransfer 

	depositMade _ TransferDeposit register: self on: aDestinyAccount .
	withdrawMade _ TransferWithdraw register: self on: aSourceAccount .
	
	value _ aValueToTransfer .! !
!TransferWithdraw methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 18:30:32' prior: 50966991 overrides: 50964395!
affectBalance: aBalance

	^ aBalance - self value ! !
!TransferDeposit methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 18:30:47' prior: 50966985 overrides: 50964395!
affectBalance: aBalance

	^ aBalance + self value ! !
!Transfer methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 18:33:42' prior: 50967115!
changeValueTo: aNewValue
	
	" Ya que no existe un mapeo con la realidad entre este mensaje y una verdadera transferencia bancaria
	afirmamos que este no hace a la esencia de Transfer pero lo incorporamos para poder testear que el valor
	de las transferencias no est� replicado "
	
	value _ aNewValue 

	! !
!Transfer methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 18:36:27' prior: 50967187!
changeValueTo: aNewValue
	
	" Ya que no existe un mapeo con la realidad entre este mensaje y una verdadera transferencia bancaria
	afirmamos que �ste no hace a la esencia de Transfer pero lo incorporamos para poder testear que el valor
	de las transferencias no est� replicado "
	
	value _ aNewValue 

	! !

TransferType subclass: #xxx
	instanceVariableNames: 'relatedTransfer'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

TransferType subclass: #Xxx
	instanceVariableNames: 'relatedTransfer'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

TransferType subclass: #Xxx
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #Xxx category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 19:44:42'!
TransferType subclass: #Xxx
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

TransferType subclass: #Yyy
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #Yyy category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 19:44:50'!
TransferType subclass: #Yyy
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!
!Xxx methodsFor: 'no messages' stamp: 'ja 11/14/2020 19:45:00' overrides: 50966742!
affectBalance: aBalance

	^ aBalance + self value ! !
!Yyy methodsFor: 'no messages' stamp: 'ja 11/14/2020 19:45:11' overrides: 50966742!
affectBalance: aBalance

	^ aBalance - self value ! !
!Transfer methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 19:45:45' prior: 50967164!
initializeFrom: aSourceAccount to: aDestinyAccount anAmountOf: aValueToTransfer 

	depositMade _ TransferDeposit register: self on: aDestinyAccount .
	withdrawMade _ Yyy register: self on: aSourceAccount .
	
	value _ aValueToTransfer .! !

!classRemoval: #TransferWithdraw stamp: 'ja 11/14/2020 19:45:55'!
TransferCollaborators subclass: #TransferWithdraw
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!
!Transfer methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 19:46:03' prior: 50967254!
initializeFrom: aSourceAccount to: aDestinyAccount anAmountOf: aValueToTransfer 

	depositMade _ Xxx register: self on: aDestinyAccount .
	withdrawMade _ Yyy register: self on: aSourceAccount .
	
	value _ aValueToTransfer .! !

!classRemoval: #TransferDeposit stamp: 'ja 11/14/2020 19:46:09'!
TransferCollaborators subclass: #TransferDeposit
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classRemoval: #TransferCollaborators stamp: 'ja 11/14/2020 19:46:16'!
AccountTransaction subclass: #TransferCollaborators
	instanceVariableNames: 'value'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classRenamed: #Xxx as: #TransferDeposit stamp: 'ja 11/14/2020 19:46:30'!
Smalltalk renameClassNamed: #Xxx as: #TransferDeposit!
!Transfer methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 19:46:30' prior: 50967272!
initializeFrom: aSourceAccount to: aDestinyAccount anAmountOf: aValueToTransfer 

	depositMade _ TransferDeposit register: self on: aDestinyAccount .
	withdrawMade _ Yyy register: self on: aSourceAccount .
	
	value _ aValueToTransfer .! !

!classRenamed: #Yyy as: #TransferWithdraw stamp: 'ja 11/14/2020 19:46:48'!
Smalltalk renameClassNamed: #Yyy as: #TransferWithdraw!
!Transfer methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 19:46:48' prior: 50967301!
initializeFrom: aSourceAccount to: aDestinyAccount anAmountOf: aValueToTransfer 

	depositMade _ TransferDeposit register: self on: aDestinyAccount .
	withdrawMade _ TransferWithdraw register: self on: aSourceAccount .
	
	value _ aValueToTransfer .! !

!testRun: #TransferTest #test01TransferAffectsSourceAndDestinyBalance stamp: 'ja 11/14/2020 19:46:53'!
PASSED!

!testRun: #TransferTest #test02CanNotTransferAnAmountOfZeroErrorDescription stamp: 'ja 11/14/2020 19:46:53'!
PASSED!

!testRun: #TransferTest #test03CanNotTransferANegativeAmountErrorDescription stamp: 'ja 11/14/2020 19:46:53'!
PASSED!

!testRun: #TransferTest #test04TransferIsRegisteredIntoInvolvedAccounts stamp: 'ja 11/14/2020 19:46:53'!
PASSED!

!testRun: #TransferTest #test05TransferValueIsNotReplicated stamp: 'ja 11/14/2020 19:46:53'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'ja 11/14/2020 19:46:57'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'ja 11/14/2020 19:46:57'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'ja 11/14/2020 19:46:57'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'ja 11/14/2020 19:46:57'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'ja 11/14/2020 19:46:57'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'ja 11/14/2020 19:46:57'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'ja 11/14/2020 19:46:57'!
PASSED!

!testRun: #PortfolioTest #test01BalanceOfPortfolioWithoutAccountsIsZero stamp: 'ja 11/14/2020 19:46:59'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithOneAccountIsAccountBalance stamp: 'ja 11/14/2020 19:46:59'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioIsCalculatedRecursivelyOnPortfolios stamp: 'ja 11/14/2020 19:46:59'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithoutAccountsHasNoRegisteredTransaction stamp: 'ja 11/14/2020 19:46:59'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredItsAccountsTransactions stamp: 'ja 11/14/2020 19:46:59'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioLooksForRegisteredTransactionsRecursively stamp: 'ja 11/14/2020 19:46:59'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioHasNoTransactionWhenHasNoAccounts stamp: 'ja 11/14/2020 19:46:59'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTransactionsIncludesAllItsAccountsTransactions stamp: 'ja 11/14/2020 19:46:59'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioTransactionsAreCalculatedRecursively stamp: 'ja 11/14/2020 19:46:59'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCanNotIncludeTheSameAccountMoreThanOnce stamp: 'ja 11/14/2020 19:46:59'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCanNotIncludeAccountOfItsPortfolios stamp: 'ja 11/14/2020 19:46:59'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioCanNotIncludeItself stamp: 'ja 11/14/2020 19:46:59'!
PASSED!

!testRun: #PortfolioTest #test13ComposedPortfolioCanNotHaveParentPortfolioAccount stamp: 'ja 11/14/2020 19:46:59'!
PASSED!

!testRun: #PortfolioTest #test14ComposedPortfolioCanNotHaveAccountOfAnyRootParentRecursively stamp: 'ja 11/14/2020 19:46:59'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotIncludeAnyOfTheComposedAccountOfPortfolioToAdd stamp: 'ja 11/14/2020 19:46:59'!
PASSED!

!testRun: #TransferTest #test01TransferAffectsSourceAndDestinyBalance stamp: 'ja 11/14/2020 19:47:02'!
PASSED!

!testRun: #TransferTest #test02CanNotTransferAnAmountOfZeroErrorDescription stamp: 'ja 11/14/2020 19:47:02'!
PASSED!

!testRun: #TransferTest #test03CanNotTransferANegativeAmountErrorDescription stamp: 'ja 11/14/2020 19:47:02'!
PASSED!

!testRun: #TransferTest #test04TransferIsRegisteredIntoInvolvedAccounts stamp: 'ja 11/14/2020 19:47:02'!
PASSED!

!testRun: #TransferTest #test05TransferValueIsNotReplicated stamp: 'ja 11/14/2020 19:47:02'!
PASSED!

----SNAPSHOT----(14 November 2020 19:54:44) CuisUniversity-4365.image priorSource: 20257797!

Object subclass: #AccountReportGenerator
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #AccountReportGenerator category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 19:59:48'!
Object subclass: #AccountReportGenerator
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!
!AccountReportGenerator methodsFor: 'no messages' stamp: 'ja 11/14/2020 20:01:03'!
generateForAccount: anAccount ! !
!AccountReportGenerator methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 20:01:10'!
generateForPortfolio: aPortfolio! !

AccountReportGenerator subclass: #AccountSummaryGenerator
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #AccountSummaryGenerator category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 20:01:49'!
AccountReportGenerator subclass: #AccountSummaryGenerator
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

AccountReportGenerator subclass: #TransferNetGenerator
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #TransferNetGenerator category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 20:02:08'!
AccountReportGenerator subclass: #TransferNetGenerator
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!
!AccountReportGenerator methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 20:02:29' prior: 50967466!
generateForPortfolio: aPortfolio

	self subclassResponsibility ! !
!AccountReportGenerator methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 20:02:36' prior: 50967462!
generateForAccount: anAccount 

	self subclassResponsibility ! !
!AccountSummaryGenerator methodsFor: 'no messages' stamp: 'ja 11/14/2020 20:04:17' overrides: 50967504!
generateForAccount: anAccount 
! !
!TransferNetGenerator methodsFor: 'no messages' stamp: 'ja 11/14/2020 20:04:21' overrides: 50967504!
generateForAccount: anAccount 
! !
!AccountSummaryGenerator methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 20:04:32' overrides: 50967498!
generateForPortfolio: aPortfolio
! !
!TransferNetGenerator methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 20:04:35' overrides: 50967498!
generateForPortfolio: aPortfolio
! !
!AccountSummaryGenerator methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 20:07:43' prior: 50967510 overrides: 50967504!
generateForAccount: anAccount 

	! !

TestCase subclass: #AccountReportGeneratorTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #AccountReportGeneratorTest category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 20:08:54'!
TestCase subclass: #AccountReportGeneratorTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!
!AccountSummaryGenerator methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 20:10:38' prior: 50967531 overrides: 50967504!
generateForAccount: aReceptiveAccount 

	! !
!AccountReportGeneratorTest methodsFor: 'no messages' stamp: 'ja 11/14/2020 20:16:24'!
test01

	| aReceptiveAccount anAccountSummaryGenerator |
	
	aReceptiveAccount _ ReceptiveAccount new.
	anAccountSummaryGenerator _ AccountSummaryGenerator new.
	
	self assert: 'Balance = 0' equals: (anAccountSummaryGenerator accountSummary: aReceptiveAccount).! !
!AccountReportGeneratorTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 20:17:05' prior: 50967555!
test01

	| aReceptiveAccount anAccountSummaryGenerator |
	
	aReceptiveAccount _ ReceptiveAccount new.
	anAccountSummaryGenerator _ AccountSummaryGenerator new.
	
	self assert: 'Balance = 0' equals: (anAccountSummaryGenerator generateForAccount: aReceptiveAccount).! !
!AccountReportGeneratorTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 20:18:41' prior: 50967567!
test01

	| aReceptiveAccount anAccountSummaryGenerator |
	
	aReceptiveAccount _ ReceptiveAccount new.
	anAccountSummaryGenerator _ AccountSummaryGenerator for: aReceptiveAccount.
	
	self assert: 'Balance = 0' equals: anAccountSummaryGenerator generate.! !

!testRun: #AccountReportGeneratorTest #test01 stamp: 'ja 11/14/2020 20:19:19'!
ERROR!
!AccountSummaryGenerator class methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 20:19:32'!
for: aReceptiveAccount 
	self shouldBeImplemented.! !
!AccountSummaryGenerator class methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 20:20:39' prior: 50967593!
for: anAccount 
	
	^ self new initializeFor: anAccount! !

!testRun: #AccountReportGeneratorTest #test01 stamp: 'ja 11/14/2020 20:20:44'!
ERROR!

!classDefinition: #AccountSummaryGenerator category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 20:20:55'!
AccountReportGenerator subclass: #AccountSummaryGenerator
	instanceVariableNames: 'account'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!
!AccountSummaryGenerator methodsFor: 'initialization' stamp: 'ja 11/14/2020 20:20:55'!
initializeFor: anAccount 
	self shouldBeImplemented.
	account := anAccount.! !
!AccountSummaryGenerator methodsFor: 'initialization' stamp: 'ja 11/14/2020 20:21:12' prior: 50967615!
initializeFor: anAccount 
	
	account _ anAccount.! !

!testRun: #AccountReportGeneratorTest #test01 stamp: 'ja 11/14/2020 20:21:15'!
ERROR!
!AccountSummaryGenerator methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 20:21:24'!
generate
	self shouldBeImplemented.! !
!AccountSummaryGenerator methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 20:21:33' prior: 50967629!
generate
	
	^ 'Balance = 0'! !

!testRun: #AccountReportGeneratorTest #test01 stamp: 'ja 11/14/2020 20:21:36'!
PASSED!

!testRun: #AccountReportGeneratorTest #test01 stamp: 'ja 11/14/2020 20:21:36'!
PASSED!

!methodRemoval: AccountSummaryGenerator #generateForAccount: stamp: 'ja 11/14/2020 20:21:52'!
generateForAccount: aReceptiveAccount 

	!

!methodRemoval: AccountSummaryGenerator #generateForPortfolio: stamp: 'ja 11/14/2020 20:21:53'!
generateForPortfolio: aPortfolio
!

!methodRemoval: TransferNetGenerator #generateForAccount: stamp: 'ja 11/14/2020 20:21:56'!
generateForAccount: anAccount 
!

!methodRemoval: TransferNetGenerator #generateForPortfolio: stamp: 'ja 11/14/2020 20:21:57'!
generateForPortfolio: aPortfolio
!

!methodRemoval: AccountReportGenerator #generateForAccount: stamp: 'ja 11/14/2020 20:22:00'!
generateForAccount: anAccount 

	self subclassResponsibility !
!AccountReportGenerator methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 20:22:14'!
generate

	self subclassResponsibility ! !

!methodRemoval: AccountReportGenerator #generateForPortfolio: stamp: 'ja 11/14/2020 20:22:17'!
generateForPortfolio: aPortfolio

	self subclassResponsibility !
!AccountReportGeneratorTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 20:22:29'!
test02

	| aReceptiveAccount anAccountSummaryGenerator |
	
	aReceptiveAccount _ ReceptiveAccount new.
	anAccountSummaryGenerator _ AccountSummaryGenerator for: aReceptiveAccount.
	
	self assert: 'Balance = 0' equals: anAccountSummaryGenerator generate.! !
!AccountReportGeneratorTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 20:23:02'!
test01Ac

	| aReceptiveAccount anAccountSummaryGenerator |
	
	aReceptiveAccount _ ReceptiveAccount new.
	anAccountSummaryGenerator _ AccountSummaryGenerator for: aReceptiveAccount.
	
	self assert: 'Balance = 0' equals: anAccountSummaryGenerator generate.! !

!methodRemoval: AccountReportGeneratorTest #test01 stamp: 'ja 11/14/2020 20:23:09'!
test01

	| aReceptiveAccount anAccountSummaryGenerator |
	
	aReceptiveAccount _ ReceptiveAccount new.
	anAccountSummaryGenerator _ AccountSummaryGenerator for: aReceptiveAccount.
	
	self assert: 'Balance = 0' equals: anAccountSummaryGenerator generate.!

!classRenamed: #AccountReportGeneratorTest as: #AccountSummaryGeneratorTest stamp: 'ja 11/14/2020 20:23:40'!
Smalltalk renameClassNamed: #AccountReportGeneratorTest as: #AccountSummaryGeneratorTest!
!AccountSummaryGeneratorTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 20:25:13'!
test01AccountSummaryForEmptyReceptiveAccount

	| aReceptiveAccount anAccountSummaryGenerator |
	
	aReceptiveAccount _ ReceptiveAccount new.
	anAccountSummaryGenerator _ AccountSummaryGenerator for: aReceptiveAccount.
	
	self assert: 'Balance = 0' equals: anAccountSummaryGenerator generate.! !

!methodRemoval: AccountSummaryGeneratorTest #test01Ac stamp: 'ja 11/14/2020 20:25:13'!
test01Ac

	| aReceptiveAccount anAccountSummaryGenerator |
	
	aReceptiveAccount _ ReceptiveAccount new.
	anAccountSummaryGenerator _ AccountSummaryGenerator for: aReceptiveAccount.
	
	self assert: 'Balance = 0' equals: anAccountSummaryGenerator generate.!
!AccountSummaryGeneratorTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 20:26:24'!
test02AccountSummaryForEmptyPortfolio

	| aReceptiveAccount anAccountSummaryGenerator |
	
	aReceptiveAccount _ ReceptiveAccount new.
	anAccountSummaryGenerator _ AccountSummaryGenerator for: aReceptiveAccount.
	
	self assert: 'Balance = 0' equals: anAccountSummaryGenerator generate.! !

!methodRemoval: AccountSummaryGeneratorTest #test02 stamp: 'ja 11/14/2020 20:26:24'!
test02

	| aReceptiveAccount anAccountSummaryGenerator |
	
	aReceptiveAccount _ ReceptiveAccount new.
	anAccountSummaryGenerator _ AccountSummaryGenerator for: aReceptiveAccount.
	
	self assert: 'Balance = 0' equals: anAccountSummaryGenerator generate.!

!testRun: #AccountSummaryGeneratorTest #test02AccountSummaryForEmptyPortfolio stamp: 'ja 11/14/2020 20:27:11'!
PASSED!
!AccountSummaryGeneratorTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 20:27:17' prior: 50967737!
test02AccountSummaryForEmptyPortfolio

	| aPortfolio anAccountSummaryGenerator |
	
	aPortfolio _ Portfolio new.
	anAccountSummaryGenerator _ AccountSummaryGenerator for: aPortfolio.
	
	self assert: 'Balance = 0' equals: anAccountSummaryGenerator generate.! !

!testRun: #AccountSummaryGeneratorTest #test02AccountSummaryForEmptyPortfolio stamp: 'ja 11/14/2020 20:27:19'!
PASSED!

!testRun: #AccountSummaryGeneratorTest #test01AccountSummaryForEmptyReceptiveAccount stamp: 'ja 11/14/2020 20:27:21'!
PASSED!
!AccountSummaryGeneratorTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 20:28:08'!
test200AccountSummaryForEmptyPortfolio

	| aPortfolio anAccountSummaryGenerator |
	
	aPortfolio _ Portfolio new.
	anAccountSummaryGenerator _ AccountSummaryGenerator for: aPortfolio.
	
	self assert: 'Balance = 0' equals: anAccountSummaryGenerator generate.! !

!methodRemoval: AccountSummaryGeneratorTest #test02AccountSummaryForEmptyPortfolio stamp: 'ja 11/14/2020 20:28:08'!
test02AccountSummaryForEmptyPortfolio

	| aPortfolio anAccountSummaryGenerator |
	
	aPortfolio _ Portfolio new.
	anAccountSummaryGenerator _ AccountSummaryGenerator for: aPortfolio.
	
	self assert: 'Balance = 0' equals: anAccountSummaryGenerator generate.!
!AccountSummaryGeneratorTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 20:29:10'!
test02AccountSummaryForReceptiveAccountWithADeposit

	| aReceptiveAccount anAccountSummaryGenerator |
	
	aReceptiveAccount _ ReceptiveAccount new.
	anAccountSummaryGenerator _ AccountSummaryGenerator for: aReceptiveAccount.
	
	self assert: 'Balance = 0' equals: anAccountSummaryGenerator generate.! !
!AccountSummaryGeneratorTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 20:29:34' prior: 50967806!
test02AccountSummaryForReceptiveAccountWithADeposit

	| aReceptiveAccount anAccountSummaryGenerator |
	
	aReceptiveAccount _ ReceptiveAccount new.
	anAccountSummaryGenerator _ AccountSummaryGenerator for: aReceptiveAccount.
	
	Deposit register: 100 on: aReceptiveAccount .
	
	self assert: 'Balance = 0' equals: anAccountSummaryGenerator generate.! !
!AccountSummaryGeneratorTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 20:32:37' prior: 50967819!
test02AccountSummaryForReceptiveAccountWithADeposit

	| aReceptiveAccount anAccountSummaryGenerator aSummary |
	
	aReceptiveAccount _ ReceptiveAccount new.
	anAccountSummaryGenerator _ AccountSummaryGenerator for: aReceptiveAccount.
	
	Deposit register: 100 on: aReceptiveAccount .
	
	aSummary _ OrderedCollection new.
	
	aSummary with: 'Balance = 100' with: 'Deposito por 100'.
	
	self assert: aSummary equals: anAccountSummaryGenerator generate.! !
!AccountSummaryGeneratorTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 20:33:38' prior: 50967834!
test02AccountSummaryForReceptiveAccountWithADeposit

	| aReceptiveAccount anAccountSummaryGenerator aSummary |
	
	aReceptiveAccount _ ReceptiveAccount new.
	anAccountSummaryGenerator _ AccountSummaryGenerator for: aReceptiveAccount.
	
	Deposit register: 100 on: aReceptiveAccount .
	
	aSummary _ OrderedCollection with: 'Balance = 100' with: 'Deposito por 100'.
	
	self assert: aSummary equals: anAccountSummaryGenerator generate.! !

!testRun: #AccountSummaryGeneratorTest #test02AccountSummaryForReceptiveAccountWithADeposit stamp: 'ja 11/14/2020 20:33:52'!
FAILURE!

!testRun: #AccountSummaryGeneratorTest #test02AccountSummaryForReceptiveAccountWithADeposit stamp: 'ja 11/14/2020 20:33:52'!
FAILURE!

!classDefinition: #AccountSummaryGenerator category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 20:37:56'!
AccountReportGenerator subclass: #AccountSummaryGenerator
	instanceVariableNames: 'account summary'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!
!AccountSummaryGenerator methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 20:37:53' prior: 50967634 overrides: 50967665!
generate
	
	account generateReport: summary.
	
	^ summary.! !

!testRun: #AccountSummaryGeneratorTest #test02AccountSummaryForReceptiveAccountWithADeposit stamp: 'ja 11/14/2020 20:38:11'!
ERROR!
!Account methodsFor: 'transactions' stamp: 'ja 11/14/2020 20:38:27'!
generateReport: aSummary

	self subclassResponsibility ! !
!ReceptiveAccount methodsFor: 'transactions' stamp: 'ja 11/14/2020 20:39:24' overrides: 50967896!
generateReport: aSummary
	
	
	! !

!methodRemoval: AccountSummaryGenerator #generate stamp: 'ja 11/14/2020 20:41:04'!
generate
	
	account generateReport: summary.
	
	^ summary.!

AccountReportGenerator subclass: #AccountSummaryGenerator
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #AccountSummaryGenerator category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 20:41:11'!
AccountReportGenerator subclass: #AccountSummaryGenerator
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

Object subclass: #NameOfSubclass
	instanceVariableNames: 'account summary'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #NameOfSubclass category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 20:41:18'!
Object subclass: #NameOfSubclass
	instanceVariableNames: 'account summary'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classRemoval: #NameOfSubclass stamp: 'ja 11/14/2020 20:41:36'!
Object subclass: #NameOfSubclass
	instanceVariableNames: 'account summary'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

Object subclass: #AccountReportGenerator
	instanceVariableNames: 'account summary'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #AccountReportGenerator category: #'Portfolio-Solucion' stamp: 'ja 11/14/2020 20:41:46'!
Object subclass: #AccountReportGenerator
	instanceVariableNames: 'account summary'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!
!AccountReportGenerator methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 20:42:05' prior: 50967665!
generate

	account ! !
!AccountReportGenerator methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 20:42:37' prior: 50967957!
generate

	account generateReport: summary using: self.
	
	^ summary ! !
!AccountReportGenerator methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 20:42:46' prior: 50967962!
generate

	account generateReportOn: summary using: self.
	
	^ summary ! !
!Account methodsFor: 'transactions' stamp: 'ja 11/14/2020 20:43:32'!
generateReportOn: aReportContainer using: aReportGenerator.

	self subclassResponsibility ! !

!methodRemoval: Account #generateReport: stamp: 'ja 11/14/2020 20:43:37'!
generateReport: aSummary

	self subclassResponsibility !
!Account methodsFor: 'transactions' stamp: 'ja 11/14/2020 20:44:25' prior: 50967973!
generateReportOn: aReportContainer using: aReportGenerator

	self subclassResponsibility ! !
!ReceptiveAccount methodsFor: 'transactions' stamp: 'ja 11/14/2020 20:44:37' overrides: 50967983!
generateReportOn: aReportContainer using: aReportGenerator	
	
	! !

!methodRemoval: ReceptiveAccount #generateReport: stamp: 'ja 11/14/2020 20:44:40'!
generateReport: aSummary
	
	
	!
!ReceptiveAccount methodsFor: 'transactions' stamp: 'ja 11/14/2020 20:46:36' prior: 50967989 overrides: 50967983!
generateReportOn: aReportContainer using: aReportGenerator	
	
	^ aReportGenerator generateReportForReceptiveAccount: self on: aReportContainer ! !
!AccountSummaryGenerator methodsFor: 'initialization' stamp: 'ja 11/14/2020 20:48:22'!
generateReportForReceptiveAccount: aReceptiveAccount on: aReportContainer ! !
!AccountReportGenerator methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 20:48:45'!
generateReportForReceptiveAccount: aReceptiveAccount on: aReportContainer

	self subclassResponsibility ! !
!AccountSummaryGenerator methodsFor: 'initialization' stamp: 'ja 11/14/2020 20:50:04' prior: 50968007 overrides: 50968013!
generateReportForReceptiveAccount: aReceptiveAccount on: aReportContainer 

	aReceptiveAccount transactions ! !
!AccountSummaryGenerator methodsFor: 'initialization' stamp: 'ja 11/14/2020 20:56:20' prior: 50968021 overrides: 50968013!
generateReportForReceptiveAccount: aReceptiveAccount on: aReportContainer 

	! !
!ReceptiveAccount methodsFor: 'transactions' stamp: 'ja 11/14/2020 20:58:39' prior: 50967999 overrides: 50967983!
generateReportOn: aReportContainer using: aReportGenerator	
	
	transactions do:[:transaction | aReportGenerator generateReportForReceptiveAccount: transaction on: aReportContainer ].
	
	^ aReportGenerator generateReportForReceptiveAccount: self on: aReportContainer ! !
!ReceptiveAccount methodsFor: 'transactions' stamp: 'ja 11/14/2020 21:00:05' prior: 50968036 overrides: 50967983!
generateReportOn: aReportContainer using: aReportGenerator	
	
	transactions do:[:transaction | transaction generateReportOn: aReportContainer using: aReportGenerator ].
	
	^ aReportGenerator generateReportForReceptiveAccount: self on: aReportContainer ! !
!ReceptiveAccount methodsFor: 'transactions' stamp: 'ja 11/14/2020 21:00:36' prior: 50968048 overrides: 50967983!
generateReportOn: aReportContainer using: aReportGenerator	
	
	transactions do:[:transaction | transaction generateReportOn: aReportContainer using: aReportGenerator ].
	
	! !
!AccountTransaction methodsFor: 'value' stamp: 'ja 11/14/2020 21:01:15'!
 generateReportOn: aReportContainer using: aReportGenerator 
	
	self subclassResponsibility 
	! !
!Deposit methodsFor: 'value' stamp: 'ja 11/14/2020 21:02:20' overrides: 50968068!
generateReportOn: aReportContainer using: aReportGenerator 

	aReportGenerator generateForDeposit: self on: aReportContainer ! !
!AccountSummaryGenerator methodsFor: 'initialization' stamp: 'ja 11/14/2020 21:03:51'!
generateForDeposit: aDeposit on: aReportContainer 

	aReportContainer add: 'Deposito por ', aDeposit value.! !
!AccountSummaryGenerator methodsFor: 'initialization' stamp: 'ja 11/14/2020 21:04:42' prior: 50968081!
generateForDeposit: aDeposit on: aReportContainer 

	aReportContainer add: 'Deposito por ', aDeposit value.! !
!AccountSummaryGenerator methodsFor: 'initialization' stamp: 'ja 11/14/2020 21:05:12' prior: 50968088!
generateForDeposit: aDeposit on: aReportContainer 

	aReportContainer add: 'Deposito por ', aDeposit value asString.! !

10 asString .!

'a' ,10 asString . !

'a ' ,10 asString .!
!ReceptiveAccount methodsFor: 'transactions' stamp: 'ja 11/14/2020 21:07:35' prior: 50968060 overrides: 50967983!
generateReportOn: aReportContainer using: aReportGenerator	
	
	transactions do:[:transaction | transaction generateReportOn: aReportContainer using: aReportGenerator ].
	
	aReportContainer add: 'Balance = ', self balance
	
	! !
!ReceptiveAccount methodsFor: 'transactions' stamp: 'ja 11/14/2020 21:07:45' prior: 50968105 overrides: 50967983!
generateReportOn: aReportContainer using: aReportGenerator	
	
	transactions do:[:transaction | transaction generateReportOn: aReportContainer using: aReportGenerator ].
	
	aReportContainer add: 'Balance = ', self balance.
	
	! !

!testRun: #AccountSummaryGeneratorTest #test02AccountSummaryForReceptiveAccountWithADeposit stamp: 'ja 11/14/2020 21:08:08'!
ERROR!

!testRun: #AccountSummaryGeneratorTest #test02AccountSummaryForReceptiveAccountWithADeposit stamp: 'ja 11/14/2020 21:08:08'!
ERROR!
!AccountReportGenerator methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 21:09:03' overrides: 16896425!
initialize

	summary _ OrderedCollection new.! !
!AccountReportGenerator class methodsFor: 'no messages' stamp: 'ja 11/14/2020 21:10:03'!
for: anAccount 
	
	^ self new initializeFor: anAccount! !
!AccountReportGenerator methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 21:10:30'!
initializeFor: anAccount 
	
	account _ anAccount.
	summary _ OrderedCollection new! !

!methodRemoval: AccountReportGenerator #initialize stamp: 'ja 11/14/2020 21:10:38'!
initialize

	summary _ OrderedCollection new.!
!AccountReportGenerator methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 21:10:46' prior: 50968145!
initializeFor: anAccount 
	
	account _ anAccount.
	
	summary _ OrderedCollection new! !

!testRun: #AccountSummaryGeneratorTest #test02AccountSummaryForReceptiveAccountWithADeposit stamp: 'ja 11/14/2020 21:10:55'!
ERROR!

!testRun: #AccountSummaryGeneratorTest #test02AccountSummaryForReceptiveAccountWithADeposit stamp: 'ja 11/14/2020 21:10:55'!
ERROR!

!methodRemoval: AccountSummaryGenerator #initializeFor: stamp: 'ja 11/14/2020 21:11:08'!
initializeFor: anAccount 
	
	account _ anAccount.!

!methodRemoval: AccountSummaryGenerator class #for: stamp: 'ja 11/14/2020 21:11:13'!
for: anAccount 
	
	^ self new initializeFor: anAccount!

!testRun: #AccountSummaryGeneratorTest #test02AccountSummaryForReceptiveAccountWithADeposit stamp: 'ja 11/14/2020 21:11:19'!
ERROR!

!testRun: #AccountSummaryGeneratorTest #test02AccountSummaryForReceptiveAccountWithADeposit stamp: 'ja 11/14/2020 21:11:19'!
ERROR!

!testRun: #AccountSummaryGeneratorTest #test02AccountSummaryForReceptiveAccountWithADeposit stamp: 'ja 11/14/2020 21:11:40'!
ERROR!
!ReceptiveAccount methodsFor: 'transactions' stamp: 'ja 11/14/2020 21:12:05' prior: 50968116 overrides: 50967983!
generateReportOn: aReportContainer using: aReportGenerator	
	
	transactions do:[:transaction | transaction generateReportOn: aReportContainer using: aReportGenerator ].
	
	aReportContainer add: ('Balance = ', self balance).
	
	! !

!testRun: #AccountSummaryGeneratorTest #test01AccountSummaryForEmptyReceptiveAccount stamp: 'ja 11/14/2020 21:12:20'!
ERROR!

!testRun: #AccountSummaryGeneratorTest #test02AccountSummaryForReceptiveAccountWithADeposit stamp: 'ja 11/14/2020 21:12:20'!
ERROR!

!testRun: #AccountSummaryGeneratorTest #test200AccountSummaryForEmptyPortfolio stamp: 'ja 11/14/2020 21:12:20'!
ERROR!

!testRun: #AccountSummaryGeneratorTest #test02AccountSummaryForReceptiveAccountWithADeposit stamp: 'ja 11/14/2020 21:12:29'!
ERROR!

!testRun: #AccountSummaryGeneratorTest #test02AccountSummaryForReceptiveAccountWithADeposit stamp: 'ja 11/14/2020 21:12:29'!
ERROR!

!testRun: #AccountSummaryGeneratorTest #test02AccountSummaryForReceptiveAccountWithADeposit stamp: 'ja 11/14/2020 21:12:37'!
ERROR!

!testRun: #AccountSummaryGeneratorTest #test02AccountSummaryForReceptiveAccountWithADeposit stamp: 'ja 11/14/2020 21:13:05'!
ERROR!
!ReceptiveAccount methodsFor: 'transactions' stamp: 'ja 11/14/2020 21:13:40' prior: 50968192 overrides: 50967983!
generateReportOn: aReportContainer using: aReportGenerator	
	
	transactions do:[:transaction | transaction generateReportOn: aReportContainer using: aReportGenerator ].
	
	aReportContainer add: ('Balance = ', self balance asString).
	
	! !

!testRun: #AccountSummaryGeneratorTest #test02AccountSummaryForReceptiveAccountWithADeposit stamp: 'ja 11/14/2020 21:13:50'!
FAILURE!

!testRun: #AccountSummaryGeneratorTest #test02AccountSummaryForReceptiveAccountWithADeposit stamp: 'ja 11/14/2020 21:13:50'!
FAILURE!
!AccountSummaryGeneratorTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 21:15:10' prior: 50967852!
test02AccountSummaryForReceptiveAccountWithADeposit

	| aReceptiveAccount anAccountSummaryGenerator aSummary |
	
	aReceptiveAccount _ ReceptiveAccount new.
	anAccountSummaryGenerator _ AccountSummaryGenerator for: aReceptiveAccount.
	
	Deposit register: 100 on: aReceptiveAccount .
	
	aSummary _ OrderedCollection with: 'Deposito por 100' with: 'Balance = 100'.
	
	self assert: aSummary equals: anAccountSummaryGenerator generate.! !

!testRun: #AccountSummaryGeneratorTest #test02AccountSummaryForReceptiveAccountWithADeposit stamp: 'ja 11/14/2020 21:15:13'!
PASSED!

!testRun: #AccountSummaryGeneratorTest #test01AccountSummaryForEmptyReceptiveAccount stamp: 'ja 11/14/2020 21:15:15'!
FAILURE!

!testRun: #AccountSummaryGeneratorTest #test01AccountSummaryForEmptyReceptiveAccount stamp: 'ja 11/14/2020 21:15:15'!
FAILURE!
!AccountSummaryGeneratorTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 21:15:50' prior: 50967714!
test01AccountSummaryForEmptyReceptiveAccount

	| aReceptiveAccount anAccountSummaryGenerator |
	
	aReceptiveAccount _ ReceptiveAccount new.
	anAccountSummaryGenerator _ AccountSummaryGenerator for: aReceptiveAccount.
	
	self assert: #('Balance = 0') equals: anAccountSummaryGenerator generate.! !

!testRun: #AccountSummaryGeneratorTest #test01AccountSummaryForEmptyReceptiveAccount stamp: 'ja 11/14/2020 21:15:52'!
FAILURE!

!testRun: #AccountSummaryGeneratorTest #test01AccountSummaryForEmptyReceptiveAccount stamp: 'ja 11/14/2020 21:15:52'!
FAILURE!
!AccountSummaryGeneratorTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 21:16:29' prior: 50968282!
test01AccountSummaryForEmptyReceptiveAccount

	| aReceptiveAccount anAccountSummaryGenerator aSummary |
	
	aReceptiveAccount _ ReceptiveAccount new.
	anAccountSummaryGenerator _ AccountSummaryGenerator for: aReceptiveAccount.
	
	aSummary _ OrderedCollection with: 'Deposito por 0'.
	
	self assert: aSummary equals: anAccountSummaryGenerator generate.! !

!testRun: #AccountSummaryGeneratorTest #test01AccountSummaryForEmptyReceptiveAccount stamp: 'ja 11/14/2020 21:16:36'!
FAILURE!

!testRun: #AccountSummaryGeneratorTest #test01AccountSummaryForEmptyReceptiveAccount stamp: 'ja 11/14/2020 21:16:36'!
FAILURE!
!AccountSummaryGeneratorTest methodsFor: 'as yet unclassified' stamp: 'ja 11/14/2020 21:16:50' prior: 50968303!
test01AccountSummaryForEmptyReceptiveAccount

	| aReceptiveAccount anAccountSummaryGenerator aSummary |
	
	aReceptiveAccount _ ReceptiveAccount new.
	anAccountSummaryGenerator _ AccountSummaryGenerator for: aReceptiveAccount.
	
	aSummary _ OrderedCollection with: 'Balance = 0'.
	
	self assert: aSummary equals: anAccountSummaryGenerator generate.! !

!testRun: #AccountSummaryGeneratorTest #test01AccountSummaryForEmptyReceptiveAccount stamp: 'ja 11/14/2020 21:16:53'!
PASSED!

!testRun: #AccountSummaryGeneratorTest #test02AccountSummaryForReceptiveAccountWithADeposit stamp: 'ja 11/14/2020 21:16:55'!
PASSED!

----QUIT----(14 November 2020 23:00:35) CuisUniversity-4365.image priorSource: 20345447!

----STARTUP---- (15 November 2020 13:14:37) as /home/jampuero/Documentos/isw1/linux64/CuisUniversity-4365.image!


!testRun: #AccountSummaryGeneratorTest #test01AccountSummaryForEmptyReceptiveAccount stamp: 'ja 11/15/2020 13:15:17'!
PASSED!

!testRun: #AccountSummaryGeneratorTest #test02AccountSummaryForReceptiveAccountWithADeposit stamp: 'ja 11/15/2020 13:15:17'!
PASSED!

!testRun: #AccountSummaryGeneratorTest #test200AccountSummaryForEmptyPortfolio stamp: 'ja 11/15/2020 13:15:17'!
ERROR!

!testRun: #AccountSummaryGeneratorTest #test200AccountSummaryForEmptyPortfolio stamp: 'ja 11/15/2020 13:15:17'!
ERROR!

!testRun: #AccountSummaryGeneratorTest #test01AccountSummaryForEmptyReceptiveAccount stamp: 'ja 11/15/2020 13:15:23'!
PASSED!

!testRun: #AccountSummaryGeneratorTest #test02AccountSummaryForReceptiveAccountWithADeposit stamp: 'ja 11/15/2020 13:15:23'!
PASSED!

!testRun: #AccountSummaryGeneratorTest #test200AccountSummaryForEmptyPortfolio stamp: 'ja 11/15/2020 13:15:23'!
ERROR!

!testRun: #AccountSummaryGeneratorTest #test200AccountSummaryForEmptyPortfolio stamp: 'ja 11/15/2020 13:15:23'!
ERROR!

!testRun: #AccountSummaryGeneratorTest #test02AccountSummaryForReceptiveAccountWithADeposit stamp: 'ja 11/15/2020 13:15:33'!
PASSED!

!testRun: #AccountSummaryGeneratorTest #test01AccountSummaryForEmptyReceptiveAccount stamp: 'ja 11/15/2020 13:15:34'!
PASSED!
!AccountSummaryGeneratorTest methodsFor: 'as yet unclassified' stamp: 'ja 11/15/2020 13:19:03'!
test03

	| aReceptiveAccount anAccountSummaryGenerator aSummary |
	
	aReceptiveAccount _ ReceptiveAccount new.
	anAccountSummaryGenerator _ AccountSummaryGenerator for: aReceptiveAccount.
	
	Deposit register: 100 on: aReceptiveAccount .
	Withdraw register: 50 on: aReceptiveAccount .
	
	aSummary _ OrderedCollection with: 'Deposito por 100'  with: 'Extracci�n por 50' with: 'Balance = 100'.
	
	self assert: aSummary equals: anAccountSummaryGenerator generate.! !

!testRun: #AccountSummaryGeneratorTest #test03 stamp: 'ja 11/15/2020 13:19:22'!
ERROR!

!testRun: #AccountSummaryGeneratorTest #test03 stamp: 'ja 11/15/2020 13:19:22'!
ERROR!
!AccountSummaryGeneratorTest methodsFor: 'as yet unclassified' stamp: 'ja 11/15/2020 13:19:47' prior: 50968394!
test03

	| aReceptiveAccount anAccountSummaryGenerator aSummary |
	
	aReceptiveAccount _ ReceptiveAccount new.
	anAccountSummaryGenerator _ AccountSummaryGenerator for: aReceptiveAccount.
	
	Deposit register: 100 on: aReceptiveAccount .
	Withdraw register: 50 on: aReceptiveAccount .
	
	aSummary _ OrderedCollection with: 'Deposito por 100'  with: 'Extracci�n por 50' with: 'Balance = 50'.
	
	self assert: aSummary equals: anAccountSummaryGenerator generate.! !

!testRun: #AccountSummaryGeneratorTest #test03 stamp: 'ja 11/15/2020 13:20:45'!
ERROR!

!testRun: #AccountSummaryGeneratorTest #test03 stamp: 'ja 11/15/2020 13:21:01'!
ERROR!
!Withdraw methodsFor: 'value' stamp: 'ja 11/15/2020 13:21:42' overrides: 50968068!
generateReportOn: aReportContainer using: aReportGenerator 

	aReportGenerator generateForDeposit: self on: aReportContainer ! !

!testRun: #AccountSummaryGeneratorTest #test03 stamp: 'ja 11/15/2020 13:22:17'!
FAILURE!

!testRun: #AccountSummaryGeneratorTest #test03 stamp: 'ja 11/15/2020 13:22:17'!
FAILURE!
!AccountSummaryGenerator methodsFor: 'initialization' stamp: 'ja 11/15/2020 13:23:57'!
generateForWithdraw: aWithdraw on: aReportContainer 

	aReportContainer add: 'Extracci�n por ', aWithdraw value asString.! !
!Withdraw methodsFor: 'value' stamp: 'ja 11/15/2020 13:24:22' prior: 50968441 overrides: 50968068!
generateReportOn: aReportContainer using: aReportGenerator 

	aReportGenerator generateForWithdraw: self on: aReportContainer ! !

!testRun: #AccountSummaryGeneratorTest #test01AccountSummaryForEmptyReceptiveAccount stamp: 'ja 11/15/2020 13:24:28'!
PASSED!

!testRun: #AccountSummaryGeneratorTest #test02AccountSummaryForReceptiveAccountWithADeposit stamp: 'ja 11/15/2020 13:24:28'!
PASSED!

!testRun: #AccountSummaryGeneratorTest #test03 stamp: 'ja 11/15/2020 13:24:28'!
PASSED!

!testRun: #AccountSummaryGeneratorTest #test200AccountSummaryForEmptyPortfolio stamp: 'ja 11/15/2020 13:24:28'!
ERROR!

!testRun: #AccountSummaryGeneratorTest #test200AccountSummaryForEmptyPortfolio stamp: 'ja 11/15/2020 13:24:28'!
ERROR!

!testRun: #AccountSummaryGeneratorTest #test03 stamp: 'ja 11/15/2020 13:24:34'!
PASSED!

!testRun: #AccountSummaryGeneratorTest #test02AccountSummaryForReceptiveAccountWithADeposit stamp: 'ja 11/15/2020 13:24:36'!
PASSED!

!testRun: #AccountSummaryGeneratorTest #test01AccountSummaryForEmptyReceptiveAccount stamp: 'ja 11/15/2020 13:24:38'!
PASSED!
!AccountSummaryGeneratorTest methodsFor: 'as yet unclassified' stamp: 'ja 11/15/2020 13:29:33'!
test03AccountSummaryForReceptiveAccountWithADepositAndWithdraw

	| aReceptiveAccount anAccountSummaryGenerator aSummary |
	
	aReceptiveAccount _ ReceptiveAccount new.
	anAccountSummaryGenerator _ AccountSummaryGenerator for: aReceptiveAccount.
	
	Deposit register: 100 on: aReceptiveAccount .
	Withdraw register: 50 on: aReceptiveAccount .
	
	aSummary _ OrderedCollection with: 'Deposito por 100'  with: 'Extracci�n por 50' with: 'Balance = 50'.
	
	self assert: aSummary equals: anAccountSummaryGenerator generate.! !

!methodRemoval: AccountSummaryGeneratorTest #test03 stamp: 'ja 11/15/2020 13:29:33'!
test03

	| aReceptiveAccount anAccountSummaryGenerator aSummary |
	
	aReceptiveAccount _ ReceptiveAccount new.
	anAccountSummaryGenerator _ AccountSummaryGenerator for: aReceptiveAccount.
	
	Deposit register: 100 on: aReceptiveAccount .
	Withdraw register: 50 on: aReceptiveAccount .
	
	aSummary _ OrderedCollection with: 'Deposito por 100'  with: 'Extracci�n por 50' with: 'Balance = 50'.
	
	self assert: aSummary equals: anAccountSummaryGenerator generate.!
!AccountSummaryGeneratorTest methodsFor: 'as yet unclassified' stamp: 'ja 11/15/2020 13:30:25'!
test04AccountSummaryForReceptiveAccountWithATransfer

	| aReceptiveAccount anAccountSummaryGenerator aSummary |
	
	aReceptiveAccount _ ReceptiveAccount new.
	anAccountSummaryGenerator _ AccountSummaryGenerator for: aReceptiveAccount.
	
	Deposit register: 100 on: aReceptiveAccount .
	Withdraw register: 50 on: aReceptiveAccount .
	
	aSummary _ OrderedCollection with: 'Deposito por 100'  with: 'Extracci�n por 50' with: 'Balance = 50'.
	
	self assert: aSummary equals: anAccountSummaryGenerator generate.! !
!AccountSummaryGeneratorTest methodsFor: 'as yet unclassified' stamp: 'ja 11/15/2020 13:30:53' prior: 50968535!
test04AccountSummaryForReceptiveAccountWithATransfer

	| aReceptiveAccount anAccountSummaryGenerator aSummary |
	
	aReceptiveAccount _ ReceptiveAccount new.
	anAccountSummaryGenerator _ AccountSummaryGenerator for: aReceptiveAccount.
	
	Deposit register: 100 on: aReceptiveAccount .
	Withdraw register: 50 on: aReceptiveAccount .
	
	aSummary _ OrderedCollection with: 'Deposito por 100'  with: 'Extracci�n por 50' with: 'Balance = 50'.
	
	self assert: aSummary equals: anAccountSummaryGenerator generate.! !
!AccountSummaryGeneratorTest methodsFor: 'as yet unclassified' stamp: 'ja 11/15/2020 13:32:06' prior: 50968555!
test04AccountSummaryForReceptiveAccountWithATransfer

	| aSourceReceptiveAccount anAccountSummaryGenerator aSummary |
	
	aSourceReceptiveAccount _ ReceptiveAccount new.
	anAccountSummaryGenerator _ AccountSummaryGenerator for: aSourceReceptiveAccount.
	
	Deposit register: 100 on: aSourceReceptiveAccount .
	Withdraw register: 50 on: aSourceReceptiveAccount .
	
	aSummary _ OrderedCollection with: 'Deposito por 100'  with: 'Extracci�n por 50' with: 'Balance = 50'.
	
	self assert: aSummary equals: anAccountSummaryGenerator generate.! !
!AccountSummaryGeneratorTest methodsFor: 'as yet unclassified' stamp: 'ja 11/15/2020 13:33:20' prior: 50968575!
test04AccountSummaryForReceptiveAccountWithATransfer

	| aSourceReceptiveAccount aDestinyReceptiveAccount anAccountSummaryGenerator aSummary |
	
	aSourceReceptiveAccount _ ReceptiveAccount new.
	aDestinyReceptiveAccount _ ReceptiveAccount new.
	anAccountSummaryGenerator _ AccountSummaryGenerator for: aSourceReceptiveAccount.
	
	Transfer from: aSourceReceptiveAccount to: aDestinyReceptiveAccount anAmountOf: 100.
	
	aSummary _ OrderedCollection with: 'Salida de transferencia por 100'  with: 'Balance = -100'.
	
	self assert: aSummary equals: anAccountSummaryGenerator generate.! !
!AccountSummaryGeneratorTest methodsFor: 'as yet unclassified' stamp: 'ja 11/15/2020 13:34:53' prior: 50968596!
test04AccountSummaryForReceptiveAccountWithATransfer

	| aSourceReceptiveAccount aDestinyReceptiveAccount anAccountSummaryGeneratorSource anAccountSummaryGeneratorDestiny aSummary |
	
	aSourceReceptiveAccount _ ReceptiveAccount new.
	aDestinyReceptiveAccount _ ReceptiveAccount new.
	anAccountSummaryGeneratorSource _ AccountSummaryGenerator for: aSourceReceptiveAccount.
	
	Transfer from: aSourceReceptiveAccount to: aDestinyReceptiveAccount anAmountOf: 100.
	
	aSummary _ OrderedCollection with: 'Salida de transferencia por 100'  with: 'Balance = -100'.
	
	self assert: aSummary equals: anAccountSummaryGeneratorSource generate.! !
!AccountSummaryGeneratorTest methodsFor: 'as yet unclassified' stamp: 'ja 11/15/2020 13:36:11' prior: 50968618!
test04AccountSummaryForReceptiveAccountWithATransfer

	| aSourceReceptiveAccount aDestinyReceptiveAccount anAccountSummaryGeneratorSource anAccountSummaryGeneratorDestiny aSummarySource aSummaryDestiny |
	
	aSourceReceptiveAccount _ ReceptiveAccount new.
	aDestinyReceptiveAccount _ ReceptiveAccount new.
	anAccountSummaryGeneratorSource _ AccountSummaryGenerator for: aSourceReceptiveAccount.
	anAccountSummaryGeneratorDestiny _ AccountSummaryGenerator for: aDestinyReceptiveAccount .
	
	Transfer from: aSourceReceptiveAccount to: aDestinyReceptiveAccount anAmountOf: 100.
	
	aSummarySource _ OrderedCollection with: 'Salida de transferencia por 100'  with: 'Balance = -100'.
	
	self assert: aSummarySource equals: anAccountSummaryGeneratorSource generate.
	self assert: aSummarySource equals: anAccountSummaryGeneratorDestiny generate.! !
!AccountSummaryGeneratorTest methodsFor: 'as yet unclassified' stamp: 'ja 11/15/2020 13:37:10' prior: 50968642!
test04AccountSummaryForReceptiveAccountWithATransfer

	| aSourceReceptiveAccount aDestinyReceptiveAccount anAccountSummaryGeneratorSource anAccountSummaryGeneratorDestiny aSummarySource aSummaryDestiny |
	
	aSourceReceptiveAccount _ ReceptiveAccount new.
	aDestinyReceptiveAccount _ ReceptiveAccount new.
	anAccountSummaryGeneratorSource _ AccountSummaryGenerator for: aSourceReceptiveAccount.
	anAccountSummaryGeneratorDestiny _ AccountSummaryGenerator for: aDestinyReceptiveAccount .
	
	Transfer from: aSourceReceptiveAccount to: aDestinyReceptiveAccount anAmountOf: 100.
	
	aSummarySource _ OrderedCollection with: 'Salida por transferencia de 100'  with: 'Balance = -100'.
	aSummaryDestiny _ OrderedCollection with: 'Entrada por transferencia de 100'  with: 'Balance = 100'.
	
	self assert: aSummarySource equals: anAccountSummaryGeneratorSource generate.
	self assert: aSummaryDestiny equals: anAccountSummaryGeneratorDestiny generate.! !

!testRun: #AccountSummaryGeneratorTest #test04AccountSummaryForReceptiveAccountWithATransfer stamp: 'ja 11/15/2020 13:39:13'!
ERROR!

!testRun: #AccountSummaryGeneratorTest #test04AccountSummaryForReceptiveAccountWithATransfer stamp: 'ja 11/15/2020 13:39:13'!
ERROR!
!TransferDeposit methodsFor: 'as yet unclassified' stamp: 'ja 11/15/2020 13:39:37' overrides: 50968068!
generateReportOn: aReportContainer using: aReportGenerator 

	aReportGenerator generateForDeposit: self on: aReportContainer ! !
!TransferDeposit methodsFor: 'as yet unclassified' stamp: 'ja 11/15/2020 13:39:46' prior: 50968714 overrides: 50968068!
generateReportOn: aReportContainer using: aReportGenerator 

	aReportGenerator generateForTransferDeposit: self on: aReportContainer ! !
!TransferWithdraw methodsFor: 'as yet unclassified' stamp: 'ja 11/15/2020 13:40:10' overrides: 50968068!
generateReportOn: aReportContainer using: aReportGenerator 

	aReportGenerator generateForTransferWithdraw: self on: aReportContainer ! !
!AccountSummaryGenerator methodsFor: 'initialization' stamp: 'ja 11/15/2020 13:41:27'!
generateForTransferDeposit: aWithdraw on: aReportContainer 

	aReportContainer add: 'Entrada por transferencia de ', aWithdraw value asString.! !
!AccountSummaryGenerator methodsFor: 'initialization' stamp: 'ja 11/15/2020 13:41:49'!
generateForTransferWithdraw: aWithdraw on: aReportContainer 

	aReportContainer add: 'Salida por transferencia de ', aWithdraw value asString.! !

!testRun: #AccountSummaryGeneratorTest #test04AccountSummaryForReceptiveAccountWithATransfer stamp: 'ja 11/15/2020 13:42:05'!
PASSED!
!AccountSummaryGeneratorTest methodsFor: 'as yet unclassified' stamp: 'ja 11/15/2020 13:42:55'!
test05AccountSummaryForReceptiveAccountWithMultipleTransactions

	| aSourceReceptiveAccount aDestinyReceptiveAccount anAccountSummaryGeneratorSource anAccountSummaryGeneratorDestiny aSummarySource aSummaryDestiny |
	
	aSourceReceptiveAccount _ ReceptiveAccount new.
	aDestinyReceptiveAccount _ ReceptiveAccount new.
	anAccountSummaryGeneratorSource _ AccountSummaryGenerator for: aSourceReceptiveAccount.
	anAccountSummaryGeneratorDestiny _ AccountSummaryGenerator for: aDestinyReceptiveAccount .
	
	Transfer from: aSourceReceptiveAccount to: aDestinyReceptiveAccount anAmountOf: 100.
	
	aSummarySource _ OrderedCollection with: 'Salida por transferencia de 100'  with: 'Balance = -100'.
	aSummaryDestiny _ OrderedCollection with: 'Entrada por transferencia de 100'  with: 'Balance = 100'.
	
	self assert: aSummarySource equals: anAccountSummaryGeneratorSource generate.
	self assert: aSummaryDestiny equals: anAccountSummaryGeneratorDestiny generate.! !
!AccountSummaryGeneratorTest methodsFor: 'as yet unclassified' stamp: 'ja 11/15/2020 13:47:21' prior: 50968758!
test05AccountSummaryForReceptiveAccountWithMultipleTransactions

	| aSourceReceptiveAccount aDestinyReceptiveAccount anAccountSummaryGeneratorSource anAccountSummaryGeneratorDestiny aSummarySource aSummaryDestiny |
	
	aSourceReceptiveAccount _ ReceptiveAccount new.
	aDestinyReceptiveAccount _ ReceptiveAccount new.
	anAccountSummaryGeneratorSource _ AccountSummaryGenerator for: aSourceReceptiveAccount.
	anAccountSummaryGeneratorDestiny _ AccountSummaryGenerator for: aDestinyReceptiveAccount .
	
	Deposit register: 100 on: aSourceReceptiveAccount .
	Withdraw register: 50 on: aSourceReceptiveAccount .
	
	Deposit register: 100 on: aDestinyReceptiveAccount .
	Withdraw register: 50 on: aDestinyReceptiveAccount .
	
	Transfer from: aSourceReceptiveAccount to: aDestinyReceptiveAccount anAmountOf: 50.
	
	aSummarySource _ OrderedCollection with: 'Salida por transferencia de 100'  with: 'Balance = 0'.
	aSummaryDestiny _ OrderedCollection with: 'Entrada por transferencia de 100'  with: 'Balance = 100'.
	
	self assert: aSummarySource equals: anAccountSummaryGeneratorSource generate.
	self assert: aSummaryDestiny equals: anAccountSummaryGeneratorDestiny generate.
	
	! !
!AccountSummaryGeneratorTest methodsFor: 'as yet unclassified' stamp: 'ja 11/15/2020 13:48:09' prior: 50968792!
test05AccountSummaryForReceptiveAccountWithMultipleTransactions

	| aSourceReceptiveAccount aDestinyReceptiveAccount anAccountSummaryGeneratorSource anAccountSummaryGeneratorDestiny aSummarySource aSummaryDestiny |
	
	aSourceReceptiveAccount _ ReceptiveAccount new.
	aDestinyReceptiveAccount _ ReceptiveAccount new.
	anAccountSummaryGeneratorSource _ AccountSummaryGenerator for: aSourceReceptiveAccount.
	anAccountSummaryGeneratorDestiny _ AccountSummaryGenerator for: aDestinyReceptiveAccount .
	
	Deposit register: 100 on: aSourceReceptiveAccount .
	Withdraw register: 50 on: aSourceReceptiveAccount .
	
	Deposit register: 100 on: aDestinyReceptiveAccount .
	Withdraw register: 50 on: aDestinyReceptiveAccount .
	
	Transfer from: aSourceReceptiveAccount to: aDestinyReceptiveAccount anAmountOf: 50.
	
	aSummarySource _ OrderedCollection with: 'Deposito por 100'  with: 'Extracci�n por 50'  with: 'Salida por transferencia de 50'  with: 'Balance = 0'.
	aSummaryDestiny _ OrderedCollection with: 'Entrada por transferencia de 50'  with: 'Balance = 100'.
	
	self assert: aSummarySource equals: anAccountSummaryGeneratorSource generate.
	self assert: aSummaryDestiny equals: anAccountSummaryGeneratorDestiny generate.
	
	! !
!AccountSummaryGeneratorTest methodsFor: 'as yet unclassified' stamp: 'ja 11/15/2020 13:49:05' prior: 50968833!
test05AccountSummaryForReceptiveAccountWithMultipleTransactions

	| aSourceReceptiveAccount aDestinyReceptiveAccount anAccountSummaryGeneratorSource anAccountSummaryGeneratorDestiny aSummarySource aSummaryDestiny |
	
	aSourceReceptiveAccount _ ReceptiveAccount new.
	aDestinyReceptiveAccount _ ReceptiveAccount new.
	anAccountSummaryGeneratorSource _ AccountSummaryGenerator for: aSourceReceptiveAccount.
	anAccountSummaryGeneratorDestiny _ AccountSummaryGenerator for: aDestinyReceptiveAccount .
	
	Deposit register: 100 on: aSourceReceptiveAccount .
	Withdraw register: 50 on: aSourceReceptiveAccount .
	
	Deposit register: 100 on: aDestinyReceptiveAccount .
	Withdraw register: 50 on: aDestinyReceptiveAccount .
	
	Transfer from: aSourceReceptiveAccount to: aDestinyReceptiveAccount anAmountOf: 50.
	
	aSummarySource _ OrderedCollection with: 'Deposito por 100'  with: 'Extracci�n por 50'  with: 'Salida por transferencia de 50'  with: 'Balance = 0'.
	aSummaryDestiny _ OrderedCollection with: 'Deposito por 100'  with: 'Extracci�n por 50'  with: 'Entrada por transferencia de 50'  with: 'Balance = 100'.
	
	self assert: aSummarySource equals: anAccountSummaryGeneratorSource generate.
	self assert: aSummaryDestiny equals: anAccountSummaryGeneratorDestiny generate.
	
	! !

!testRun: #AccountSummaryGeneratorTest #test05AccountSummaryForReceptiveAccountWithMultipleTransactions stamp: 'ja 11/15/2020 13:49:08'!
PASSED!

----SNAPSHOT----(15 November 2020 13:55:35) CuisUniversity-4365.image priorSource: 20374307!

!testRun: #AccountSummaryGeneratorTest #test01AccountSummaryForEmptyReceptiveAccount stamp: 'ja 11/15/2020 14:25:54'!
PASSED!

!testRun: #AccountSummaryGeneratorTest #test02AccountSummaryForReceptiveAccountWithADeposit stamp: 'ja 11/15/2020 14:25:56'!
PASSED!

!testRun: #AccountSummaryGeneratorTest #test03AccountSummaryForReceptiveAccountWithADepositAndWithdraw stamp: 'ja 11/15/2020 14:25:57'!
PASSED!

!testRun: #AccountSummaryGeneratorTest #test04AccountSummaryForReceptiveAccountWithATransfer stamp: 'ja 11/15/2020 14:25:59'!
PASSED!

!testRun: #AccountSummaryGeneratorTest #test05AccountSummaryForReceptiveAccountWithMultipleTransactions stamp: 'ja 11/15/2020 14:26:00'!
PASSED!
!AccountSummaryGeneratorTest methodsFor: 'summary-portfolio' stamp: 'ja 11/15/2020 14:28:12'!
test06AccountSummaryForEmptyPortfolio

	| aPortfolio anAccountSummaryGenerator |
	
	aPortfolio _ Portfolio new.
	anAccountSummaryGenerator _ AccountSummaryGenerator for: aPortfolio.
	
	self assert: 'Balance = 0' equals: anAccountSummaryGenerator generate.! !

!methodRemoval: AccountSummaryGeneratorTest #test200AccountSummaryForEmptyPortfolio stamp: 'ja 11/15/2020 14:28:12'!
test200AccountSummaryForEmptyPortfolio

	| aPortfolio anAccountSummaryGenerator |
	
	aPortfolio _ Portfolio new.
	anAccountSummaryGenerator _ AccountSummaryGenerator for: aPortfolio.
	
	self assert: 'Balance = 0' equals: anAccountSummaryGenerator generate.!

!testRun: #AccountSummaryGeneratorTest #test06AccountSummaryForEmptyPortfolio stamp: 'ja 11/15/2020 14:28:17'!
ERROR!

!testRun: #AccountSummaryGeneratorTest #test06AccountSummaryForEmptyPortfolio stamp: 'ja 11/15/2020 14:28:17'!
ERROR!
!Portfolio methodsFor: 'transactions' stamp: 'ja 11/15/2020 14:29:19' overrides: 50967983!
generateReportOn: aReportContainer using: aReportGenerator

! !
!Portfolio methodsFor: 'transactions' stamp: 'ja 11/15/2020 14:30:29' prior: 50968978 overrides: 50967983!
generateReportOn: aReportContainer using: aReportGenerator

	^ 'Balance = 0'! !

!testRun: #AccountSummaryGeneratorTest #test06AccountSummaryForEmptyPortfolio stamp: 'ja 11/15/2020 14:30:38'!
FAILURE!

!testRun: #AccountSummaryGeneratorTest #test06AccountSummaryForEmptyPortfolio stamp: 'ja 11/15/2020 14:30:38'!
FAILURE!

!testRun: #AccountSummaryGeneratorTest #test06AccountSummaryForEmptyPortfolio stamp: 'ja 11/15/2020 14:30:50'!
FAILURE!

!testRun: #AccountSummaryGeneratorTest #test06AccountSummaryForEmptyPortfolio stamp: 'ja 11/15/2020 14:30:50'!
FAILURE!
!Portfolio methodsFor: 'summary' stamp: 'ja 11/15/2020 14:32:59' prior: 50968984 overrides: 50967983!
generateReportOn: aReportContainer using: aReportGenerator

	^ aReportGenerator  add: 'Balance = 0'.! !
!Portfolio methodsFor: 'summary' stamp: 'ja 11/15/2020 14:33:35' prior: 50969005 overrides: 50967983!
generateReportOn: aReportContainer using: aReportGenerator

	aReportGenerator  add: 'Balance = 0'.! !

!testRun: #AccountSummaryGeneratorTest #test06AccountSummaryForEmptyPortfolio stamp: 'ja 11/15/2020 14:33:39'!
ERROR!

!testRun: #AccountSummaryGeneratorTest #test06AccountSummaryForEmptyPortfolio stamp: 'ja 11/15/2020 14:33:39'!
ERROR!
!Portfolio methodsFor: 'summary' stamp: 'ja 11/15/2020 14:34:02' prior: 50969012 overrides: 50967983!
generateReportOn: aReportContainer using: aReportGenerator

	aReportContainer  add: 'Balance = 0'.! !

!testRun: #AccountSummaryGeneratorTest #test06AccountSummaryForEmptyPortfolio stamp: 'ja 11/15/2020 14:34:07'!
FAILURE!

!testRun: #AccountSummaryGeneratorTest #test06AccountSummaryForEmptyPortfolio stamp: 'ja 11/15/2020 14:34:07'!
FAILURE!
!AccountSummaryGeneratorTest methodsFor: 'summary-portfolio' stamp: 'ja 11/15/2020 14:34:42' prior: 50968947!
test06AccountSummaryForEmptyPortfolio

	| aPortfolio anAccountSummaryGenerator aSummary|
	
	aPortfolio _ Portfolio new.
	anAccountSummaryGenerator _ AccountSummaryGenerator for: aPortfolio.
	
	aSummary _ OrderedCollection with: 'Balance = 0'.
	
	self assert: aSummary equals: anAccountSummaryGenerator generate.! !

!testRun: #AccountSummaryGeneratorTest #test06AccountSummaryForEmptyPortfolio stamp: 'ja 11/15/2020 14:34:44'!
PASSED!

!testRun: #AccountSummaryGeneratorTest #test01AccountSummaryForEmptyReceptiveAccount stamp: 'ja 11/15/2020 14:34:44'!
PASSED!

!testRun: #AccountSummaryGeneratorTest #test02AccountSummaryForReceptiveAccountWithADeposit stamp: 'ja 11/15/2020 14:34:44'!
PASSED!

!testRun: #AccountSummaryGeneratorTest #test03AccountSummaryForReceptiveAccountWithADepositAndWithdraw stamp: 'ja 11/15/2020 14:34:44'!
PASSED!

!testRun: #AccountSummaryGeneratorTest #test04AccountSummaryForReceptiveAccountWithATransfer stamp: 'ja 11/15/2020 14:34:44'!
PASSED!

!testRun: #AccountSummaryGeneratorTest #test05AccountSummaryForReceptiveAccountWithMultipleTransactions stamp: 'ja 11/15/2020 14:34:44'!
PASSED!

!testRun: #AccountSummaryGeneratorTest #test06AccountSummaryForEmptyPortfolio stamp: 'ja 11/15/2020 14:34:44'!
PASSED!
!AccountSummaryGeneratorTest methodsFor: 'summary-portfolio' stamp: 'ja 11/15/2020 14:35:57'!
test07AccountSummaryForPorfolioWithALevel

	| aPortfolio anAccountSummaryGenerator aSummary|
	
	aPortfolio _ Portfolio new.
	anAccountSummaryGenerator _ AccountSummaryGenerator for: aPortfolio.
	
	aSummary _ OrderedCollection with: 'Balance = 0'.
	
	self assert: aSummary equals: anAccountSummaryGenerator generate.! !
!AccountSummaryGeneratorTest methodsFor: 'summary-portfolio' stamp: 'ja 11/15/2020 14:36:57'!
test08AccountSummaryForPorfolioWithMoreThanOneLevel
! !

!testRun: #PortfolioTest #test03BalanceOfPortfolioIsCalculatedRecursivelyOnPortfolios stamp: 'ja 11/15/2020 14:41:26'!
PASSED!
!AccountSummaryGeneratorTest methodsFor: 'summary-portfolio' stamp: 'ja 11/15/2020 14:47:57' prior: 50969083!
test07AccountSummaryForPorfolioWithALevel

	| aPortfolio anAccountSummaryGenerator aSummary account simplePortfolio |
	
	aPortfolio _ Portfolio new.
	account := ReceptiveAccount new.
	Deposit register: 100 on: account.
	simplePortfolio := Portfolio with: account.
	
	anAccountSummaryGenerator _ AccountSummaryGenerator for: aPortfolio.
	
	aSummary _ OrderedCollection with: 'Balance = 0'.
	
	self assert: aSummary equals: anAccountSummaryGenerator generate.! !
!AccountSummaryGeneratorTest methodsFor: 'summary-portfolio' stamp: 'ja 11/15/2020 14:49:22' prior: 50969106!
test07AccountSummaryForPorfolioWithALevel

	| aPortfolio anAccountSummaryGenerator aSummary account simplePortfolio otherAccount |

	account := ReceptiveAccount new.
	Deposit register: 100 on: account.
	otherAccount := ReceptiveAccount new.
	simplePortfolio := Portfolio with: account with: otherAccount.
	
	anAccountSummaryGenerator _ AccountSummaryGenerator for: simplePortfolio .
	
	aSummary _ OrderedCollection with: 'Balance = 0'.
	
	self assert: aSummary equals: anAccountSummaryGenerator generate.! !
!AccountSummaryGeneratorTest methodsFor: 'summary-portfolio' stamp: 'ja 11/15/2020 14:50:11' prior: 50969124!
test07AccountSummaryForPorfolioWithALevel

	| aPortfolio anAccountSummaryGenerator aSummary account simplePortfolio otherAccount |

	account := ReceptiveAccount new.
	Deposit register: 100 on: account.
	otherAccount := ReceptiveAccount new.
	Deposit register: 200 on: account.
	simplePortfolio := Portfolio with: account with: otherAccount.
	
	anAccountSummaryGenerator _ AccountSummaryGenerator for: simplePortfolio .
	
	aSummary _ OrderedCollection with: 'Balance = 0'.
	
	self assert: aSummary equals: anAccountSummaryGenerator generate.! !

!testRun: #AccountSummaryGeneratorTest #test07AccountSummaryForPorfolioWithALevel stamp: 'ja 11/15/2020 14:50:37'!
PASSED!

!testRun: #AccountSummaryGeneratorTest #test07AccountSummaryForPorfolioWithALevel stamp: 'ja 11/15/2020 14:50:50'!
PASSED!

!testRun: #AccountSummaryGeneratorTest #test06AccountSummaryForEmptyPortfolio stamp: 'ja 11/15/2020 14:50:52'!
PASSED!

!testRun: #AccountSummaryGeneratorTest #test07AccountSummaryForPorfolioWithALevel stamp: 'ja 11/15/2020 14:50:54'!
PASSED!
!AccountSummaryGeneratorTest methodsFor: 'summary-portfolio' stamp: 'ja 11/15/2020 14:51:21' prior: 50969144!
test07AccountSummaryForPorfolioWithALevel

	| anAccountSummaryGenerator aSummary account simplePortfolio otherAccount |

	account _ ReceptiveAccount new.
	Deposit register: 100 on: account.
	otherAccount _ ReceptiveAccount new.
	Deposit register: 200 on: account.
	simplePortfolio _ Portfolio with: account with: otherAccount.
	
	anAccountSummaryGenerator _ AccountSummaryGenerator for: simplePortfolio .
	
	aSummary _ OrderedCollection with: 'Balance = 0'.
	
	self assert: aSummary equals: anAccountSummaryGenerator generate.! !

!testRun: #AccountSummaryGeneratorTest #test07AccountSummaryForPorfolioWithALevel stamp: 'ja 11/15/2020 14:51:31'!
PASSED!

!testRun: #AccountSummaryGeneratorTest #test06AccountSummaryForEmptyPortfolio stamp: 'ja 11/15/2020 14:53:20'!
PASSED!

!testRun: #AccountSummaryGeneratorTest #test07AccountSummaryForPorfolioWithALevel stamp: 'ja 11/15/2020 14:53:28'!
PASSED!

!testRun: #AccountSummaryGeneratorTest #test07AccountSummaryForPorfolioWithALevel stamp: 'ja 11/15/2020 14:55:06'!
PASSED!
!AccountSummaryGeneratorTest methodsFor: 'summary-portfolio' stamp: 'ja 11/15/2020 14:55:26' prior: 50969180!
test07AccountSummaryForPorfolioWithALevel

	| anAccountSummaryGenerator aSummary account simplePortfolio otherAccount |

	account _ ReceptiveAccount new.
	Deposit register: 100 on: account.
	otherAccount _ ReceptiveAccount new.
	Deposit register: 200 on: account.
	simplePortfolio _ Portfolio with: account with: otherAccount.
	
	anAccountSummaryGenerator _ AccountSummaryGenerator for: simplePortfolio .
	
	aSummary _ OrderedCollection with: 'Balance = 0'.
	
	self assert: aSummary equals: anAccountSummaryGenerator generate.! !
!AccountSummaryGeneratorTest methodsFor: 'summary-portfolio' stamp: 'ja 11/15/2020 14:56:08' prior: 50969216!
test07AccountSummaryForPorfolioWithALevel

	| anAccountSummaryGenerator aSummary account simplePortfolio otherAccount |

	account _ ReceptiveAccount new.
	Deposit register: 100 on: account.
	otherAccount _ ReceptiveAccount new.
	Deposit register: 200 on: account.
	simplePortfolio _ Portfolio with: account .
	
	anAccountSummaryGenerator _ AccountSummaryGenerator for: simplePortfolio .
	
	aSummary _ OrderedCollection with: 'Balance = 0'.
	
	self assert: aSummary equals: anAccountSummaryGenerator generate.! !

!testRun: #AccountSummaryGeneratorTest #test07AccountSummaryForPorfolioWithALevel stamp: 'ja 11/15/2020 14:56:13'!
PASSED!
!AccountSummaryGeneratorTest methodsFor: 'summary-portfolio' stamp: 'ja 11/15/2020 14:58:20' prior: 50969236!
test07AccountSummaryForPorfolioWithALevel

	| anAccountSummaryGenerator aSummary account simplePortfolio otherAccount |

	account _ ReceptiveAccount new.
	Deposit register: 100 on: account.
	otherAccount _ ReceptiveAccount new.
	Deposit register: 200 on: account.
	simplePortfolio _ Portfolio with: account with: otherAccount .
	
	anAccountSummaryGenerator _ AccountSummaryGenerator for: simplePortfolio .
	
	aSummary _ OrderedCollection with: 'Balance = 0'.
	
	self assert: aSummary equals: anAccountSummaryGenerator generate.! !

!testRun: #AccountSummaryGeneratorTest #test07AccountSummaryForPorfolioWithALevel stamp: 'ja 11/15/2020 14:58:24'!
PASSED!

!testRun: #AccountSummaryGeneratorTest #test07AccountSummaryForPorfolioWithALevel stamp: 'ja 11/15/2020 14:58:41'!
PASSED!
!AccountSummaryGeneratorTest methodsFor: 'summary-portfolio' stamp: 'ja 11/15/2020 15:02:11' prior: 50969260!
test07AccountSummaryForPorfolioWithALevel

	| anAccountSummaryGenerator aSummary account simplePortfolio otherAccount |

	account _ ReceptiveAccount new.
	Deposit register: 100 on: account.
	otherAccount _ ReceptiveAccount new.
	Deposit register: 200 on: account.
	simplePortfolio _ Portfolio with: account with: otherAccount .
	
	anAccountSummaryGenerator _ AccountSummaryGenerator for: simplePortfolio .
	
	aSummary _ OrderedCollection with: 'Deposito por 300' with: 'Balance = 300'.
	
	self assert: aSummary equals: anAccountSummaryGenerator generate.! !
!Portfolio methodsFor: 'summary' stamp: 'ja 11/15/2020 15:17:31' prior: 50969026 overrides: 50967983!
generateReportOn: aReportContainer using: aReportGenerator

	"accounts do:[:account | account]."! !
!Portfolio methodsFor: 'summary' stamp: 'ja 11/15/2020 15:59:51' prior: 50969309 overrides: 50967983!
generateReportOn: aReportContainer using: aReportGenerator

	accounts do:[:account | account generateReportOn: aReportContainer  using: aReportGenerator ].! !
!Portfolio methodsFor: 'summary' stamp: 'ja 11/15/2020 16:00:31' prior: 50969316 overrides: 50967983!
generateReportOn: aReportContainer using: aReportGenerator

	accounts do:[:account | account generateReportOn: aReportContainer  using: aReportGenerator ].
	
	aReportContainer add: ('Balance = ', self balance asString).! !
!AccountSummaryGeneratorTest methodsFor: 'summary-portfolio' stamp: 'ja 11/15/2020 16:01:29' prior: 50969288!
test07AccountSummaryForPorfolioWithALevel

	| anAccountSummaryGenerator aSummary account simplePortfolio otherAccount |

	account _ ReceptiveAccount new.
	Deposit register: 100 on: account.
	otherAccount _ ReceptiveAccount new.
	Deposit register: 200 on: account.
	simplePortfolio _ Portfolio with: account with: otherAccount .
	
	anAccountSummaryGenerator _ AccountSummaryGenerator for: simplePortfolio .
	
	aSummary _ OrderedCollection with: 'Deposito por 100' with: 'Balance = 100' with: 'Deposito por 200' with: 'Balance = 200' with: 'Balance = 300'.
	
	self assert: aSummary equals: anAccountSummaryGenerator generate.! !

!testRun: #AccountSummaryGeneratorTest #test07AccountSummaryForPorfolioWithALevel stamp: 'ja 11/15/2020 16:01:32'!
FAILURE!

!testRun: #AccountSummaryGeneratorTest #test07AccountSummaryForPorfolioWithALevel stamp: 'ja 11/15/2020 16:01:32'!
FAILURE!

!testRun: #AccountSummaryGeneratorTest #test07AccountSummaryForPorfolioWithALevel stamp: 'ja 11/15/2020 16:01:55'!
FAILURE!
!AccountReportGenerator methodsFor: 'as yet unclassified' stamp: 'ja 11/15/2020 16:04:43' prior: 50967968!
generate

	account generateReportOn: summary using: self.

	^ summary ! !
!Portfolio methodsFor: 'summary' stamp: 'ja 11/15/2020 16:05:08' prior: 50969325 overrides: 50967983!
generateReportOn: aReportContainer using: aReportGenerator

	accounts do:[:account | account generateReportOn: aReportContainer  using: aReportGenerator ].
	
	! !

!testRun: #AccountSummaryGeneratorTest #test07AccountSummaryForPorfolioWithALevel stamp: 'ja 11/15/2020 16:05:15'!
FAILURE!

!testRun: #AccountSummaryGeneratorTest #test07AccountSummaryForPorfolioWithALevel stamp: 'ja 11/15/2020 16:05:15'!
FAILURE!
!AccountSummaryGeneratorTest methodsFor: 'summary-portfolio' stamp: 'ja 11/15/2020 16:06:01' prior: 50969336!
test07AccountSummaryForPorfolioWithALevel

	| anAccountSummaryGenerator aSummary account simplePortfolio otherAccount |

	account _ ReceptiveAccount new.
	Deposit register: 100 on: account.
	otherAccount _ ReceptiveAccount new.
	Deposit register: 200 on: otherAccount .
	simplePortfolio _ Portfolio with: account with: otherAccount .
	
	anAccountSummaryGenerator _ AccountSummaryGenerator for: simplePortfolio .
	
	aSummary _ OrderedCollection with: 'Deposito por 100' with: 'Balance = 100' with: 'Deposito por 200' with: 'Balance = 200' with: 'Balance = 300'.
	
	self assert: aSummary equals: anAccountSummaryGenerator generate.! !

!testRun: #AccountSummaryGeneratorTest #test07AccountSummaryForPorfolioWithALevel stamp: 'ja 11/15/2020 16:06:06'!
FAILURE!

!testRun: #AccountSummaryGeneratorTest #test07AccountSummaryForPorfolioWithALevel stamp: 'ja 11/15/2020 16:06:06'!
FAILURE!
!Portfolio methodsFor: 'summary' stamp: 'ja 11/15/2020 16:00:31' prior: 50969377 overrides: 50967983!
generateReportOn: aReportContainer using: aReportGenerator

	accounts do:[:account | account generateReportOn: aReportContainer  using: aReportGenerator ].
	
	aReportContainer add: ('Balance = ', self balance asString).! !

!testRun: #AccountSummaryGeneratorTest #test07AccountSummaryForPorfolioWithALevel stamp: 'ja 11/15/2020 16:07:00'!
PASSED!
!AccountSummaryGeneratorTest methodsFor: 'summary-portfolio' stamp: 'ja 11/15/2020 16:09:23' prior: 50969096!
test08AccountSummaryForPorfolioWithMoreThanOneLevel

	| anAccountSummaryGenerator aSummary account portfolioRoot portfolioChild otherAccount |

	account _ ReceptiveAccount new.
	Deposit register: 100 on: account.
	otherAccount _ ReceptiveAccount new.
	Deposit register: 200 on: otherAccount .
	portfolioChild _ Portfolio new.
	portfolioRoot _ Portfolio with: account with: otherAccount with: portfolioChild .
	
	
	anAccountSummaryGenerator _ AccountSummaryGenerator for: portfolioRoot .
	
	aSummary _ OrderedCollection with: 'Deposito por 100' with: 'Balance = 100' with: 'Deposito por 200' with: 'Balance = 200' with: 'Balance = 300'.
	
	self assert: aSummary equals: anAccountSummaryGenerator generate.! !
!AccountSummaryGeneratorTest methodsFor: 'summary-portfolio' stamp: 'ja 11/15/2020 16:09:29' prior: 50969440!
test08AccountSummaryForPorfolioWithMoreThanOneLevel

	| anAccountSummaryGenerator aSummary account portfolioRoot portfolioChild otherAccount |

	account _ ReceptiveAccount new.
	Deposit register: 100 on: account.
	otherAccount _ ReceptiveAccount new.
	Deposit register: 200 on: otherAccount .
	portfolioChild _ Portfolio new.
	portfolioRoot _ Portfolio with: account with: otherAccount with: portfolioChild .
	
	anAccountSummaryGenerator _ AccountSummaryGenerator for: portfolioRoot .
	
	aSummary _ OrderedCollection with: 'Deposito por 100' with: 'Balance = 100' with: 'Deposito por 200' with: 'Balance = 200' with: 'Balance = 300'.
	
	self assert: aSummary equals: anAccountSummaryGenerator generate.! !

!testRun: #AccountSummaryGeneratorTest #test08AccountSummaryForPorfolioWithMoreThanOneLevel stamp: 'ja 11/15/2020 16:09:32'!
ERROR!

!testRun: #AccountSummaryGeneratorTest #test08AccountSummaryForPorfolioWithMoreThanOneLevel stamp: 'ja 11/15/2020 16:09:32'!
ERROR!
!AccountSummaryGeneratorTest methodsFor: 'summary-portfolio' stamp: 'ja 11/15/2020 16:09:55' prior: 50969466!
test08AccountSummaryForPorfolioWithMoreThanOneLevel

	| anAccountSummaryGenerator aSummary account portfolioRoot portfolioChild otherAccount |

	account _ ReceptiveAccount new.
	Deposit register: 100 on: account.
	otherAccount _ ReceptiveAccount new.
	Deposit register: 200 on: otherAccount .
	portfolioChild _ Portfolio new.
	portfolioRoot _ Portfolio with: account with: otherAccount.
	portfolioRoot with: portfolioChild .
	
	anAccountSummaryGenerator _ AccountSummaryGenerator for: portfolioRoot .
	
	aSummary _ OrderedCollection with: 'Deposito por 100' with: 'Balance = 100' with: 'Deposito por 200' with: 'Balance = 200' with: 'Balance = 300'.
	
	self assert: aSummary equals: anAccountSummaryGenerator generate.! !

!testRun: #AccountSummaryGeneratorTest #test08AccountSummaryForPorfolioWithMoreThanOneLevel stamp: 'ja 11/15/2020 16:09:58'!
ERROR!

!testRun: #AccountSummaryGeneratorTest #test08AccountSummaryForPorfolioWithMoreThanOneLevel stamp: 'ja 11/15/2020 16:09:58'!
ERROR!
!AccountSummaryGeneratorTest methodsFor: 'summary-portfolio' stamp: 'ja 11/15/2020 16:10:32' prior: 50969500!
test08AccountSummaryForPorfolioWithMoreThanOneLevel

	| anAccountSummaryGenerator aSummary account portfolioRoot portfolioChild otherAccount |

	account _ ReceptiveAccount new.
	Deposit register: 100 on: account.
	otherAccount _ ReceptiveAccount new.
	Deposit register: 200 on: otherAccount .
	portfolioChild _ Portfolio new.
	portfolioRoot _ Portfolio with: account with: portfolioChild .
	
	anAccountSummaryGenerator _ AccountSummaryGenerator for: portfolioRoot .
	
	aSummary _ OrderedCollection with: 'Deposito por 100' with: 'Balance = 100' with: 'Deposito por 200' with: 'Balance = 200' with: 'Balance = 300'.
	
	self assert: aSummary equals: anAccountSummaryGenerator generate.! !

!testRun: #AccountSummaryGeneratorTest #test08AccountSummaryForPorfolioWithMoreThanOneLevel stamp: 'ja 11/15/2020 16:10:42'!
FAILURE!

!testRun: #AccountSummaryGeneratorTest #test08AccountSummaryForPorfolioWithMoreThanOneLevel stamp: 'ja 11/15/2020 16:10:42'!
FAILURE!
!AccountSummaryGeneratorTest methodsFor: 'summary-portfolio' stamp: 'ja 11/15/2020 16:11:29' prior: 50969535!
test08AccountSummaryForPorfolioWithMoreThanOneLevel

	| anAccountSummaryGenerator aSummary account portfolioRoot portfolioChild otherAccount |

	account _ ReceptiveAccount new.
	Deposit register: 100 on: account.
	otherAccount _ ReceptiveAccount new.
	Deposit register: 200 on: otherAccount .
	portfolioChild _ Portfolio with: otherAccount .
	portfolioRoot _ Portfolio with: account with: portfolioChild .
	
	anAccountSummaryGenerator _ AccountSummaryGenerator for: portfolioRoot .
	
	aSummary _ OrderedCollection with: 'Deposito por 100' with: 'Balance = 100' with: 'Deposito por 200' with: 'Balance = 200' with: 'Balance = 300'.
	
	self assert: aSummary equals: anAccountSummaryGenerator generate.! !

!testRun: #AccountSummaryGeneratorTest #test08AccountSummaryForPorfolioWithMoreThanOneLevel stamp: 'ja 11/15/2020 16:11:52'!
FAILURE!

!testRun: #AccountSummaryGeneratorTest #test08AccountSummaryForPorfolioWithMoreThanOneLevel stamp: 'ja 11/15/2020 16:11:52'!
FAILURE!
!AccountSummaryGeneratorTest methodsFor: 'summary-portfolio' stamp: 'ja 11/15/2020 16:18:29' prior: 50969569!
test08AccountSummaryForPorfolioWithMoreThanOneLevel

	| anAccountSummaryGenerator aSummary account portfolioRoot portfolioChild otherAccount |

	account _ ReceptiveAccount new.
	Deposit register: 100 on: account.
	otherAccount _ ReceptiveAccount new.
	Deposit register: 200 on: otherAccount .
	portfolioChild _ Portfolio with: otherAccount .
	portfolioRoot _ Portfolio with: account with: portfolioChild .
	
	anAccountSummaryGenerator _ AccountSummaryGenerator for: portfolioRoot .
	
	aSummary _ OrderedCollection with: 'Deposito por 100' with: 'Balance = 100' with: 'Deposito por 200' with: 'Balance = 200' with: 'Balance = 200' with: 'Balance = 300'.
	
	self assert: aSummary equals: anAccountSummaryGenerator generate.! !

!testRun: #AccountSummaryGeneratorTest #test08AccountSummaryForPorfolioWithMoreThanOneLevel stamp: 'ja 11/15/2020 16:18:32'!
PASSED!
!AccountSummaryGeneratorTest methodsFor: 'transfer-net-receptive-account' stamp: 'ja 11/15/2020 16:23:06'!
test10

	! !

!testRun: #AccountSummaryGeneratorTest #test06AccountSummaryForEmptyPortfolio stamp: 'ja 11/15/2020 16:27:36'!
PASSED!

!testRun: #AccountSummaryGeneratorTest #test07AccountSummaryForPorfolioWithALevel stamp: 'ja 11/15/2020 16:27:36'!
PASSED!

!testRun: #AccountSummaryGeneratorTest #test08AccountSummaryForPorfolioWithMoreThanOneLevel stamp: 'ja 11/15/2020 16:27:36'!
PASSED!

!testRun: #AccountSummaryGeneratorTest #test01AccountSummaryForEmptyReceptiveAccount stamp: 'ja 11/15/2020 16:27:37'!
PASSED!

!testRun: #AccountSummaryGeneratorTest #test02AccountSummaryForReceptiveAccountWithADeposit stamp: 'ja 11/15/2020 16:27:37'!
PASSED!

!testRun: #AccountSummaryGeneratorTest #test03AccountSummaryForReceptiveAccountWithADepositAndWithdraw stamp: 'ja 11/15/2020 16:27:37'!
PASSED!

!testRun: #AccountSummaryGeneratorTest #test04AccountSummaryForReceptiveAccountWithATransfer stamp: 'ja 11/15/2020 16:27:37'!
PASSED!

!testRun: #AccountSummaryGeneratorTest #test05AccountSummaryForReceptiveAccountWithMultipleTransactions stamp: 'ja 11/15/2020 16:27:38'!
PASSED!

!testRun: #AccountSummaryGeneratorTest #test10 stamp: 'ja 11/15/2020 16:27:41'!
PASSED!
!AccountSummaryGeneratorTest methodsFor: 'transfer-net-receptive-account' stamp: 'ja 11/15/2020 16:38:38' prior: 50969634!
test10

	| aReceptiveAccount aTransferNetGenerator aSummary |
	
	aReceptiveAccount _ ReceptiveAccount new.
	aTransferNetGenerator _ TransferNetGenerator for: aReceptiveAccount.! !
!AccountSummaryGeneratorTest methodsFor: 'transfer-net-receptive-account' stamp: 'ja 11/15/2020 16:39:17' prior: 50969675!
test10

	| aReceptiveAccount aTransferNetGenerator |
	
	aReceptiveAccount _ ReceptiveAccount new.
	aTransferNetGenerator _ TransferNetGenerator for: aReceptiveAccount.
	
	! !
!TransferNetGenerator methodsFor: 'no messages' stamp: 'ja 11/15/2020 16:40:16' overrides: 50968156!
initializeFor: anAccount 
	
	account _ anAccount.! !
!TransferNetGenerator class methodsFor: 'no messages' stamp: 'ja 11/15/2020 16:40:31' overrides: 50968140!
for: anAccount 
	
	^ self new initializeFor: anAccount! !
!AccountSummaryGeneratorTest methodsFor: 'transfer-net-receptive-account' stamp: 'ja 11/15/2020 16:41:02' prior: 50969685!
test10

	| aReceptiveAccount aTransferNetGenerator |
	
	aReceptiveAccount _ ReceptiveAccount new.
	aTransferNetGenerator _ TransferNetGenerator for: aReceptiveAccount.
	
	self assert: 0 equals: aTransferNetGenerator generate.
	! !
!TransferNetGenerator methodsFor: 'as yet unclassified' stamp: 'ja 11/15/2020 16:41:29' overrides: 50969371!
generate

	^ 0! !

!testRun: #AccountSummaryGeneratorTest #test10 stamp: 'ja 11/15/2020 16:41:34'!
PASSED!
!AccountSummaryGeneratorTest methodsFor: 'transfer-net-receptive-account' stamp: 'ja 11/15/2020 16:43:37'!
test10TransferNetForReceptiveAccountWithoutTransfer


	| aReceptiveAccount aTransferNetGenerator |
	
	aReceptiveAccount _ ReceptiveAccount new.
	aTransferNetGenerator _ TransferNetGenerator for: aReceptiveAccount.
	
	self assert: 0 equals: aTransferNetGenerator generate.
	! !

!methodRemoval: AccountSummaryGeneratorTest #test10 stamp: 'ja 11/15/2020 16:43:42'!
test10

	| aReceptiveAccount aTransferNetGenerator |
	
	aReceptiveAccount _ ReceptiveAccount new.
	aTransferNetGenerator _ TransferNetGenerator for: aReceptiveAccount.
	
	self assert: 0 equals: aTransferNetGenerator generate.
	!
!AccountSummaryGeneratorTest methodsFor: 'transfer-net-receptive-account' stamp: 'ja 11/15/2020 17:17:59'!
test11TransferNetForReceptiveAccountWithSimpleTransfers


	| aReceptiveAccount aTransferNetGenerator |
	
	aReceptiveAccount _ ReceptiveAccount new.
	aTransferNetGenerator _ TransferNetGenerator for: aReceptiveAccount.
	
	self assert: 0 equals: aTransferNetGenerator generate.
	! !
!AccountSummaryGeneratorTest methodsFor: 'transfer-net-receptive-account' stamp: 'ja 11/15/2020 17:21:47' prior: 50969745!
test11TransferNetForReceptiveAccountWithSimpleTransfers

	| aSourceReceptiveAccount aDestinyReceptiveAccount anAccountSummaryGeneratorSource anAccountSummaryGeneratorDestiny |
	
	aSourceReceptiveAccount _ ReceptiveAccount new.
	aDestinyReceptiveAccount _ ReceptiveAccount new.
	anAccountSummaryGeneratorSource _ AccountSummaryGenerator for: aSourceReceptiveAccount.
	anAccountSummaryGeneratorDestiny _ AccountSummaryGenerator for: aDestinyReceptiveAccount .
	
	Transfer from: aSourceReceptiveAccount to: aDestinyReceptiveAccount anAmountOf: 100.
	! !
!AccountSummaryGeneratorTest methodsFor: 'transfer-net-receptive-account' stamp: 'ja 11/15/2020 17:23:00' prior: 50969758!
test11TransferNetForReceptiveAccountWithSimpleTransfers

	| aSourceReceptiveAccount aDestinyReceptiveAccount aTransferNetSource anAccountSummaryGeneratorDestiny |
	
	aSourceReceptiveAccount _ ReceptiveAccount new.
	aDestinyReceptiveAccount _ ReceptiveAccount new.
	aTransferNetSource _ AccountSummaryGenerator for: aSourceReceptiveAccount.
	anAccountSummaryGeneratorDestiny _ AccountSummaryGenerator for: aDestinyReceptiveAccount .
	
	Transfer from: aSourceReceptiveAccount to: aDestinyReceptiveAccount anAmountOf: 100.
	! !
!AccountSummaryGeneratorTest methodsFor: 'transfer-net-receptive-account' stamp: 'ja 11/15/2020 17:23:14' prior: 50969780!
test11TransferNetForReceptiveAccountWithSimpleTransfers

	| aSourceReceptiveAccount aDestinyReceptiveAccount aTransferNetSource aTransferNetDestiny |
	
	aSourceReceptiveAccount _ ReceptiveAccount new.
	aDestinyReceptiveAccount _ ReceptiveAccount new.
	aTransferNetSource _ AccountSummaryGenerator for: aSourceReceptiveAccount.
	aTransferNetDestiny _ AccountSummaryGenerator for: aDestinyReceptiveAccount .
	
	Transfer from: aSourceReceptiveAccount to: aDestinyReceptiveAccount anAmountOf: 100.
	! !
!AccountSummaryGeneratorTest methodsFor: 'transfer-net-receptive-account' stamp: 'ja 11/15/2020 17:23:47' prior: 50969801!
test11TransferNetForReceptiveAccountWithSimpleTransfers

	| aSourceReceptiveAccount aDestinyReceptiveAccount aTransferNetSource aTransferNetDestiny |
	
	aSourceReceptiveAccount _ ReceptiveAccount new.
	aDestinyReceptiveAccount _ ReceptiveAccount new.
	aTransferNetSource _ TransferNetGenerator for: aSourceReceptiveAccount.
	aTransferNetDestiny _ TransferNetGenerator for: aDestinyReceptiveAccount .
	
	Transfer from: aSourceReceptiveAccount to: aDestinyReceptiveAccount anAmountOf: 100.
	! !
!AccountSummaryGeneratorTest methodsFor: 'transfer-net-receptive-account' stamp: 'ja 11/15/2020 17:24:39' prior: 50969821!
test11TransferNetForReceptiveAccountWithSimpleTransfers

	| aSourceReceptiveAccount aDestinyReceptiveAccount aTransferNetSource aTransferNetDestiny |
	
	aSourceReceptiveAccount _ ReceptiveAccount new.
	aDestinyReceptiveAccount _ ReceptiveAccount new.
	aTransferNetSource _ TransferNetGenerator for: aSourceReceptiveAccount.
	aTransferNetDestiny _ TransferNetGenerator for: aDestinyReceptiveAccount .
	
	Transfer from: aSourceReceptiveAccount to: aDestinyReceptiveAccount anAmountOf: 100.
	
	self assert: -100 equals: aTransferNetSource generate .
	self assert: 100 equals: aTransferNetDestiny generate .	! !

!testRun: #AccountSummaryGeneratorTest #test06AccountSummaryForEmptyPortfolio stamp: 'ja 11/15/2020 17:25:04'!
PASSED!

!testRun: #AccountSummaryGeneratorTest #test07AccountSummaryForPorfolioWithALevel stamp: 'ja 11/15/2020 17:25:04'!
PASSED!

!testRun: #AccountSummaryGeneratorTest #test08AccountSummaryForPorfolioWithMoreThanOneLevel stamp: 'ja 11/15/2020 17:25:04'!
PASSED!

!testRun: #AccountSummaryGeneratorTest #test01AccountSummaryForEmptyReceptiveAccount stamp: 'ja 11/15/2020 17:25:06'!
PASSED!

!testRun: #AccountSummaryGeneratorTest #test02AccountSummaryForReceptiveAccountWithADeposit stamp: 'ja 11/15/2020 17:25:06'!
PASSED!

!testRun: #AccountSummaryGeneratorTest #test03AccountSummaryForReceptiveAccountWithADepositAndWithdraw stamp: 'ja 11/15/2020 17:25:06'!
PASSED!

!testRun: #AccountSummaryGeneratorTest #test04AccountSummaryForReceptiveAccountWithATransfer stamp: 'ja 11/15/2020 17:25:06'!
PASSED!

!testRun: #AccountSummaryGeneratorTest #test05AccountSummaryForReceptiveAccountWithMultipleTransactions stamp: 'ja 11/15/2020 17:25:06'!
PASSED!

!testRun: #AccountSummaryGeneratorTest #test11TransferNetForReceptiveAccountWithSimpleTransfers stamp: 'ja 11/15/2020 17:25:24'!
FAILURE!

!testRun: #AccountSummaryGeneratorTest #test11TransferNetForReceptiveAccountWithSimpleTransfers stamp: 'ja 11/15/2020 17:25:24'!
FAILURE!
!TransferNetGenerator methodsFor: 'as yet unclassified' stamp: 'ja 11/15/2020 17:31:11' prior: 50969716 overrides: 50969371!
generate

	! !

!testRun: #AccountSummaryGeneratorTest #test11TransferNetForReceptiveAccountWithSimpleTransfers stamp: 'ja 11/15/2020 17:31:26'!
FAILURE!

!testRun: #AccountSummaryGeneratorTest #test11TransferNetForReceptiveAccountWithSimpleTransfers stamp: 'ja 11/15/2020 17:31:26'!
FAILURE!

Object subclass: #AccountReportGenerator
	instanceVariableNames: 'account summary'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #AccountReportGenerator category: #'Portfolio-Solucion' stamp: 'ja 11/15/2020 17:34:33'!
Object subclass: #AccountReportGenerator
	instanceVariableNames: 'account summary'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

AccountReportGenerator subclass: #TransferNetGenerator
	instanceVariableNames: 'transferNet'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #TransferNetGenerator category: #'Portfolio-Solucion' stamp: 'ja 11/15/2020 17:34:44'!
AccountReportGenerator subclass: #TransferNetGenerator
	instanceVariableNames: 'transferNet'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!
!TransferNetGenerator methodsFor: 'as yet unclassified' stamp: 'ja 11/15/2020 17:35:51' prior: 50969906 overrides: 50969371!
generate

	account generateTranferNetIn: transferNet using: self.
	
	^ transferNet.! !
!TransferNetGenerator methodsFor: 'as yet unclassified' stamp: 'ja 11/15/2020 17:36:19' prior: 50969947 overrides: 50969371!
generate

	account generateTranferNetOn: transferNet using: self.
	
	^ transferNet.! !

!testRun: #AccountSummaryGeneratorTest #test01AccountSummaryForEmptyReceptiveAccount stamp: 'ja 11/15/2020 17:42:48'!
PASSED!

!testRun: #AccountSummaryGeneratorTest #test02AccountSummaryForReceptiveAccountWithADeposit stamp: 'ja 11/15/2020 17:42:48'!
PASSED!

!testRun: #AccountSummaryGeneratorTest #test03AccountSummaryForReceptiveAccountWithADepositAndWithdraw stamp: 'ja 11/15/2020 17:42:48'!
PASSED!

!testRun: #AccountSummaryGeneratorTest #test04AccountSummaryForReceptiveAccountWithATransfer stamp: 'ja 11/15/2020 17:42:48'!
PASSED!

!testRun: #AccountSummaryGeneratorTest #test05AccountSummaryForReceptiveAccountWithMultipleTransactions stamp: 'ja 11/15/2020 17:42:48'!
PASSED!

!testRun: #AccountSummaryGeneratorTest #test06AccountSummaryForEmptyPortfolio stamp: 'ja 11/15/2020 17:42:49'!
PASSED!

!testRun: #AccountSummaryGeneratorTest #test07AccountSummaryForPorfolioWithALevel stamp: 'ja 11/15/2020 17:42:49'!
PASSED!

!testRun: #AccountSummaryGeneratorTest #test08AccountSummaryForPorfolioWithMoreThanOneLevel stamp: 'ja 11/15/2020 17:42:49'!
PASSED!
!TransferNetGenerator methodsFor: 'as yet unclassified' stamp: 'ja 11/15/2020 17:43:42' prior: 50969694 overrides: 50968156!
initializeFor: anAccount 
	
	account _ anAccount.
	
	transferNet _ 0! !

!testRun: #AccountSummaryGeneratorTest #test11TransferNetForReceptiveAccountWithSimpleTransfers stamp: 'ja 11/15/2020 17:46:10'!
ERROR!

!testRun: #AccountSummaryGeneratorTest #test11TransferNetForReceptiveAccountWithSimpleTransfers stamp: 'ja 11/15/2020 17:46:10'!
ERROR!
!ReceptiveAccount methodsFor: 'transferNet' stamp: 'ja 11/15/2020 17:48:49'!
generateTranferNetOn: valueTransferNet using: aTransferNetGenerator! !
!ReceptiveAccount methodsFor: 'transferNet' stamp: 'ja 11/15/2020 17:49:38' prior: 50970008!
generateTranferNetOn: valueTransferNet using: aTransferNetGenerator

	! !
!ReceptiveAccount methodsFor: 'transferNet' stamp: 'ja 11/15/2020 17:52:43' prior: 50970014!
generateTranferNetOn: valueTransferNet using: aTransferNetGenerator

	transactions do:[:transaction | transaction generateTransferNetOn: valueTransferNet ].! !
!TransferNetGenerator methodsFor: 'as yet unclassified' stamp: 'ja 11/15/2020 18:01:51' prior: 50969994 overrides: 50968156!
initializeFor: anAccount 
	
	account _ anAccount.
	
	transferNet _ OrderedCollection new! !
!TransferDeposit methodsFor: 'as yet unclassified' stamp: 'ja 11/15/2020 18:03:40'!
generateTransferNetOn: aReportContainer

	aReportContainer add: relatedTransfer value.
	
	! !
!TransferWithdraw methodsFor: 'as yet unclassified' stamp: 'ja 11/15/2020 18:04:05'!
generateTransferNetOn: aReportContainer

	aReportContainer add: relatedTransfer value * -1.! !

!methodRemoval: AccountReportGenerator #generateReportForReceptiveAccount:on: stamp: 'ja 11/15/2020 18:05:48'!
generateReportForReceptiveAccount: aReceptiveAccount on: aReportContainer

	self subclassResponsibility !

!methodRemoval: AccountSummaryGenerator #generateReportForReceptiveAccount:on: stamp: 'ja 11/15/2020 18:05:51'!
generateReportForReceptiveAccount: aReceptiveAccount on: aReportContainer 

	!

!testRun: #AccountSummaryGeneratorTest #test01AccountSummaryForEmptyReceptiveAccount stamp: 'ja 11/15/2020 18:05:56'!
PASSED!

!testRun: #AccountSummaryGeneratorTest #test02AccountSummaryForReceptiveAccountWithADeposit stamp: 'ja 11/15/2020 18:05:56'!
PASSED!

!testRun: #AccountSummaryGeneratorTest #test03AccountSummaryForReceptiveAccountWithADepositAndWithdraw stamp: 'ja 11/15/2020 18:05:56'!
PASSED!

!testRun: #AccountSummaryGeneratorTest #test04AccountSummaryForReceptiveAccountWithATransfer stamp: 'ja 11/15/2020 18:05:56'!
PASSED!

!testRun: #AccountSummaryGeneratorTest #test05AccountSummaryForReceptiveAccountWithMultipleTransactions stamp: 'ja 11/15/2020 18:05:56'!
PASSED!

!testRun: #AccountSummaryGeneratorTest #test06AccountSummaryForEmptyPortfolio stamp: 'ja 11/15/2020 18:05:58'!
PASSED!

!testRun: #AccountSummaryGeneratorTest #test07AccountSummaryForPorfolioWithALevel stamp: 'ja 11/15/2020 18:05:58'!
PASSED!

!testRun: #AccountSummaryGeneratorTest #test08AccountSummaryForPorfolioWithMoreThanOneLevel stamp: 'ja 11/15/2020 18:05:58'!
PASSED!

!testRun: #AccountSummaryGeneratorTest #test01AccountSummaryForEmptyReceptiveAccount stamp: 'ja 11/15/2020 18:09:01'!
PASSED!

!testRun: #AccountSummaryGeneratorTest #test02AccountSummaryForReceptiveAccountWithADeposit stamp: 'ja 11/15/2020 18:09:01'!
PASSED!

!testRun: #AccountSummaryGeneratorTest #test03AccountSummaryForReceptiveAccountWithADepositAndWithdraw stamp: 'ja 11/15/2020 18:09:01'!
PASSED!

!testRun: #AccountSummaryGeneratorTest #test04AccountSummaryForReceptiveAccountWithATransfer stamp: 'ja 11/15/2020 18:09:01'!
PASSED!

!testRun: #AccountSummaryGeneratorTest #test05AccountSummaryForReceptiveAccountWithMultipleTransactions stamp: 'ja 11/15/2020 18:09:01'!
PASSED!

!testRun: #AccountSummaryGeneratorTest #test06AccountSummaryForEmptyPortfolio stamp: 'ja 11/15/2020 18:09:03'!
PASSED!

!testRun: #AccountSummaryGeneratorTest #test07AccountSummaryForPorfolioWithALevel stamp: 'ja 11/15/2020 18:09:03'!
PASSED!

!testRun: #AccountSummaryGeneratorTest #test08AccountSummaryForPorfolioWithMoreThanOneLevel stamp: 'ja 11/15/2020 18:09:03'!
PASSED!

!classDefinition: #AccountReportGenerator category: #'Portfolio-Solucion' stamp: 'ja 11/15/2020 18:13:08'!
Object subclass: #AccountReportGenerator
	instanceVariableNames: 'account report'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!
!AccountReportGenerator methodsFor: 'as yet unclassified' stamp: 'ja 11/15/2020 18:13:08' prior: 50968156!
initializeFor: anAccount 
	
	account _ anAccount.
	
	report _ OrderedCollection new! !
!AccountReportGenerator methodsFor: 'as yet unclassified' stamp: 'ja 11/15/2020 18:13:08' prior: 50969371!
generate

	account generateReportOn: report using: self.

	^ report ! !

!methodRemoval: TransferNetGenerator #generate stamp: 'ja 11/15/2020 18:14:03'!
generate

	account generateTranferNetOn: transferNet using: self.
	
	^ transferNet.!

!methodRemoval: TransferNetGenerator #initializeFor: stamp: 'ja 11/15/2020 18:14:07'!
initializeFor: anAccount 
	
	account _ anAccount.
	
	transferNet _ OrderedCollection new!
!ReceptiveAccount methodsFor: 'transferNet' stamp: 'ja 11/15/2020 18:15:52' prior: 50970020!
generateTranferNetOn: aReportContainer using: aTransferNetGenerator

	transactions do:[:transaction | transaction generateTransferNetOn: aReportContainer ].! !
!ReceptiveAccount methodsFor: 'transferNet' stamp: 'ja 11/15/2020 18:17:16' prior: 50970159!
generateTranferNetOn: aReportContainer using: aTransferNetGenerator

	transactions do:[:transaction | transaction generateTransferNetOn: aReportContainer ].! !
!ReceptiveAccount methodsFor: 'transferNet' stamp: 'ja 11/15/2020 18:18:46' prior: 50970167!
generateTranferNetOn: aReportContainer using: aTransferNetGenerator

	! !

!methodRemoval: ReceptiveAccount #generateTranferNetOn:using: stamp: 'ja 11/15/2020 18:18:48'!
generateTranferNetOn: aReportContainer using: aTransferNetGenerator

	!
!Portfolio methodsFor: 'report' stamp: 'ja 11/15/2020 18:30:45' prior: 50969425 overrides: 50967983!
generateReportOn: aReportContainer using: aReportGenerator

	accounts do:[:account | account generateReportOn: aReportContainer  using: aReportGenerator ].
	
	aReportGenerator generateForPortfolio: self on: aReportContainer .! !
!AccountSummaryGenerator methodsFor: 'initialization' stamp: 'ja 11/15/2020 18:31:31'!
generateForPortfolio: aPortfolio on: aReportContainer

	aReportContainer  add: ('Balance = ', self balance asString).! !
!ReceptiveAccount methodsFor: 'report' stamp: 'ja 11/15/2020 18:33:12' prior: 50968232 overrides: 50967983!
generateReportOn: aReportContainer using: aReportGenerator	
	
	transactions do:[:transaction | transaction generateReportOn: aReportContainer using: aReportGenerator ].
	
	aReportGenerator generateForReceptiveAccount: self on: aReportContainer .
	
	! !
!AccountSummaryGenerator methodsFor: 'initialization' stamp: 'ja 11/15/2020 18:33:50'!
generateForReceptiveAccount: aReceptiveAccount on: aReportContainer

	aReportContainer  add: ('Balance = ', self balance asString).! !

!testRun: #AccountSummaryGeneratorTest #test01AccountSummaryForEmptyReceptiveAccount stamp: 'ja 11/15/2020 18:33:55'!
ERROR!

!testRun: #AccountSummaryGeneratorTest #test02AccountSummaryForReceptiveAccountWithADeposit stamp: 'ja 11/15/2020 18:33:55'!
ERROR!

!testRun: #AccountSummaryGeneratorTest #test03AccountSummaryForReceptiveAccountWithADepositAndWithdraw stamp: 'ja 11/15/2020 18:33:55'!
ERROR!

!testRun: #AccountSummaryGeneratorTest #test04AccountSummaryForReceptiveAccountWithATransfer stamp: 'ja 11/15/2020 18:33:55'!
ERROR!

!testRun: #AccountSummaryGeneratorTest #test05AccountSummaryForReceptiveAccountWithMultipleTransactions stamp: 'ja 11/15/2020 18:33:55'!
ERROR!
!AccountSummaryGenerator methodsFor: 'initialization' stamp: 'ja 11/15/2020 18:34:25' prior: 50970196!
generateForPortfolio: aPortfolio on: aReportContainer

	aReportContainer  add: ('Balance = ', aPortfolio balance asString).! !
!AccountSummaryGenerator methodsFor: 'initialization' stamp: 'ja 11/15/2020 18:34:30' prior: 50970215!
generateForReceptiveAccount: aReceptiveAccount on: aReportContainer

	aReportContainer  add: ('Balance = ', aReceptiveAccount balance asString).! !

!testRun: #AccountSummaryGeneratorTest #test01AccountSummaryForEmptyReceptiveAccount stamp: 'ja 11/15/2020 18:34:35'!
PASSED!

!testRun: #AccountSummaryGeneratorTest #test02AccountSummaryForReceptiveAccountWithADeposit stamp: 'ja 11/15/2020 18:34:35'!
PASSED!

!testRun: #AccountSummaryGeneratorTest #test03AccountSummaryForReceptiveAccountWithADepositAndWithdraw stamp: 'ja 11/15/2020 18:34:35'!
PASSED!

!testRun: #AccountSummaryGeneratorTest #test04AccountSummaryForReceptiveAccountWithATransfer stamp: 'ja 11/15/2020 18:34:35'!
PASSED!

!testRun: #AccountSummaryGeneratorTest #test05AccountSummaryForReceptiveAccountWithMultipleTransactions stamp: 'ja 11/15/2020 18:34:35'!
PASSED!

!testRun: #AccountSummaryGeneratorTest #test06AccountSummaryForEmptyPortfolio stamp: 'ja 11/15/2020 18:34:36'!
PASSED!

!testRun: #AccountSummaryGeneratorTest #test07AccountSummaryForPorfolioWithALevel stamp: 'ja 11/15/2020 18:34:36'!
PASSED!

!testRun: #AccountSummaryGeneratorTest #test08AccountSummaryForPorfolioWithMoreThanOneLevel stamp: 'ja 11/15/2020 18:34:36'!
PASSED!
!AccountReportGenerator methodsFor: 'as yet unclassified' stamp: 'ja 11/15/2020 18:35:12'!
generateForWithdraw: aWithdraw on: aReportContainer 

	self subclassResponsibility ! !
!AccountReportGenerator methodsFor: 'as yet unclassified' stamp: 'ja 11/15/2020 18:35:25'!
generateForTransferWithdraw: aWithdraw on: aReportContainer 

	self subclassResponsibility ! !
!AccountReportGenerator methodsFor: 'as yet unclassified' stamp: 'ja 11/15/2020 18:35:40'!
generateForTransferDeposit: aWithdraw on: aReportContainer 


	self subclassResponsibility ! !
!AccountReportGenerator methodsFor: 'as yet unclassified' stamp: 'ja 11/15/2020 18:35:44' prior: 50970305!
generateForTransferDeposit: aWithdraw on: aReportContainer 

	self subclassResponsibility ! !
!AccountReportGenerator methodsFor: 'as yet unclassified' stamp: 'ja 11/15/2020 18:35:58'!
generateForReceptiveAccount: aReceptiveAccount on: aReportContainer

	self subclassResponsibility ! !
!AccountReportGenerator methodsFor: 'as yet unclassified' stamp: 'ja 11/15/2020 18:36:16'!
generateForPortfolio: aPortfolio on: aReportContainer

	self subclassResponsibility ! !
!AccountReportGenerator methodsFor: 'as yet unclassified' stamp: 'ja 11/15/2020 18:36:32'!
generateForDeposit: aDeposit on: aReportContainer 
	
	self subclassResponsibility ! !

AccountReportGenerator subclass: #TransferNetGenerator
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #TransferNetGenerator category: #'Portfolio-Solucion' stamp: 'ja 11/15/2020 18:39:12'!
AccountReportGenerator subclass: #TransferNetGenerator
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!
!Account methodsFor: 'report' stamp: 'ja 11/15/2020 18:41:31'!
generateReportUsing: aReportGenerator

	self subclassResponsibility ! !

!methodRemoval: Account #generateReportOn:using: stamp: 'ja 11/15/2020 18:41:38'!
generateReportOn: aReportContainer using: aReportGenerator

	self subclassResponsibility !
!Portfolio methodsFor: 'report' stamp: 'ja 11/15/2020 18:42:27' overrides: 50970350!
generateReportUsing: aReportGenerator

	accounts do:[:account | account generateReportUsing: aReportGenerator ].
	
	aReportGenerator generateForPortfolio: self .! !
!ReceptiveAccount methodsFor: 'report' stamp: 'ja 11/15/2020 18:43:06' overrides: 50970350!
generateReportUsing: aReportGenerator
	
	transactions do:[:transaction | transaction generateReportUsing: aReportGenerator ].
	
	aReportGenerator generateForReceptiveAccount: self .
	
	! !
!AccountReportGenerator methodsFor: 'report generation' stamp: 'ja 11/15/2020 18:44:30'!
generateForDeposit: aDeposit 
	
	self subclassResponsibility ! !
!AccountReportGenerator methodsFor: 'report generation' stamp: 'ja 11/15/2020 18:44:36'!
generateForPortfolio: aPortfolio

	self subclassResponsibility ! !
!AccountReportGenerator methodsFor: 'report generation' stamp: 'ja 11/15/2020 18:44:43'!
generateForReceptiveAccount: aReceptiveAccount 

	self subclassResponsibility ! !
!AccountReportGenerator methodsFor: 'report generation' stamp: 'ja 11/15/2020 18:44:51'!
generateForTransferDeposit: aWithdraw

	self subclassResponsibility ! !
!AccountReportGenerator methodsFor: 'report generation' stamp: 'ja 11/15/2020 18:45:02'!
generateForTransferWithdraw: aWithdraw 

	self subclassResponsibility ! !
!AccountReportGenerator methodsFor: 'report generation' stamp: 'ja 11/15/2020 18:45:08'!
generateForWithdraw: aWithdraw 

	self subclassResponsibility ! !

!methodRemoval: AccountReportGenerator #generateForDeposit:on: stamp: 'ja 11/15/2020 18:45:15'!
generateForDeposit: aDeposit on: aReportContainer 
	
	self subclassResponsibility !

!methodRemoval: AccountReportGenerator #generateForPortfolio:on: stamp: 'ja 11/15/2020 18:45:18'!
generateForPortfolio: aPortfolio on: aReportContainer

	self subclassResponsibility !

!methodRemoval: AccountReportGenerator #generateForReceptiveAccount:on: stamp: 'ja 11/15/2020 18:45:21'!
generateForReceptiveAccount: aReceptiveAccount on: aReportContainer

	self subclassResponsibility !

!methodRemoval: AccountReportGenerator #generateForTransferDeposit:on: stamp: 'ja 11/15/2020 18:45:25'!
generateForTransferDeposit: aWithdraw on: aReportContainer 

	self subclassResponsibility !

!methodRemoval: AccountReportGenerator #generateForTransferWithdraw:on: stamp: 'ja 11/15/2020 18:45:28'!
generateForTransferWithdraw: aWithdraw on: aReportContainer 

	self subclassResponsibility !

!methodRemoval: AccountReportGenerator #generateForWithdraw:on: stamp: 'ja 11/15/2020 18:45:32'!
generateForWithdraw: aWithdraw on: aReportContainer 

	self subclassResponsibility !
!AccountSummaryGenerator methodsFor: 'report generation' stamp: 'ja 11/15/2020 18:46:03' overrides: 50970379!
generateForDeposit: aDeposit  

	report add: 'Deposito por ', aDeposit value asString.! !
!AccountSummaryGenerator methodsFor: 'report generation' stamp: 'ja 11/15/2020 18:46:13' overrides: 50970384!
generateForPortfolio: aPortfolio 

	report  add: ('Balance = ', aPortfolio balance asString).! !
!AccountSummaryGenerator methodsFor: 'report generation' stamp: 'ja 11/15/2020 18:46:23' overrides: 50970389!
generateForReceptiveAccount: aReceptiveAccount 

	report  add: ('Balance = ', aReceptiveAccount balance asString).! !
!AccountSummaryGenerator methodsFor: 'report generation' stamp: 'ja 11/15/2020 18:46:35' overrides: 50970395!
generateForTransferDeposit: aWithdraw 

	report add: 'Entrada por transferencia de ', aWithdraw value asString.! !
!AccountSummaryGenerator methodsFor: 'report generation' stamp: 'ja 11/15/2020 18:46:42' overrides: 50970401!
generateForTransferWithdraw: aWithdraw 

	report add: 'Salida por transferencia de ', aWithdraw value asString.! !
!AccountSummaryGenerator methodsFor: 'report generation' stamp: 'ja 11/15/2020 18:46:50' overrides: 50970407!
generateForWithdraw: aWithdraw

	report add: 'Extracci�n por ', aWithdraw value asString.! !

!methodRemoval: AccountSummaryGenerator #generateForDeposit:on: stamp: 'ja 11/15/2020 18:46:56'!
generateForDeposit: aDeposit on: aReportContainer 

	aReportContainer add: 'Deposito por ', aDeposit value asString.!

!methodRemoval: AccountSummaryGenerator #generateForPortfolio:on: stamp: 'ja 11/15/2020 18:47:00'!
generateForPortfolio: aPortfolio on: aReportContainer

	aReportContainer  add: ('Balance = ', aPortfolio balance asString).!

!methodRemoval: AccountSummaryGenerator #generateForReceptiveAccount:on: stamp: 'ja 11/15/2020 18:47:03'!
generateForReceptiveAccount: aReceptiveAccount on: aReportContainer

	aReportContainer  add: ('Balance = ', aReceptiveAccount balance asString).!

!methodRemoval: AccountSummaryGenerator #generateForTransferDeposit:on: stamp: 'ja 11/15/2020 18:47:05'!
generateForTransferDeposit: aWithdraw on: aReportContainer 

	aReportContainer add: 'Entrada por transferencia de ', aWithdraw value asString.!

!methodRemoval: AccountSummaryGenerator #generateForTransferWithdraw:on: stamp: 'ja 11/15/2020 18:47:09'!
generateForTransferWithdraw: aWithdraw on: aReportContainer 

	aReportContainer add: 'Salida por transferencia de ', aWithdraw value asString.!

!methodRemoval: AccountSummaryGenerator #generateForWithdraw:on: stamp: 'ja 11/15/2020 18:47:12'!
generateForWithdraw: aWithdraw on: aReportContainer 

	aReportContainer add: 'Extracci�n por ', aWithdraw value asString.!

!methodRemoval: Portfolio #generateReportOn:using: stamp: 'ja 11/15/2020 18:47:50'!
generateReportOn: aReportContainer using: aReportGenerator

	accounts do:[:account | account generateReportOn: aReportContainer  using: aReportGenerator ].
	
	aReportGenerator generateForPortfolio: self on: aReportContainer .!

!methodRemoval: ReceptiveAccount #generateReportOn:using: stamp: 'ja 11/15/2020 18:48:04'!
generateReportOn: aReportContainer using: aReportGenerator	
	
	transactions do:[:transaction | transaction generateReportOn: aReportContainer using: aReportGenerator ].
	
	aReportGenerator generateForReceptiveAccount: self on: aReportContainer .
	
	!
!Deposit methodsFor: 'value' stamp: 'ja 11/15/2020 18:49:04'!
generateReportUsing: aReportGenerator

	aReportGenerator generateForDeposit: self.! !

!methodRemoval: Deposit #generateReportOn:using: stamp: 'ja 11/15/2020 18:49:11'!
generateReportOn: aReportContainer using: aReportGenerator 

	aReportGenerator generateForDeposit: self on: aReportContainer !
!TransferDeposit methodsFor: 'as yet unclassified' stamp: 'ja 11/15/2020 18:49:33'!
generateReportUsing: aReportGenerator 

	aReportGenerator generateForTransferDeposit: self ! !

!methodRemoval: TransferDeposit #generateReportOn:using: stamp: 'ja 11/15/2020 18:49:42'!
generateReportOn: aReportContainer using: aReportGenerator 

	aReportGenerator generateForTransferDeposit: self on: aReportContainer !
!TransferWithdraw methodsFor: 'as yet unclassified' stamp: 'ja 11/15/2020 18:49:59'!
generateReportUsing: aReportGenerator 

	aReportGenerator generateForTransferWithdraw: self.! !

!methodRemoval: TransferWithdraw #generateReportOn:using: stamp: 'ja 11/15/2020 18:50:21'!
generateReportOn: aReportContainer using: aReportGenerator 

	aReportGenerator generateForTransferWithdraw: self on: aReportContainer !
!Withdraw methodsFor: 'value' stamp: 'ja 11/15/2020 18:50:44'!
generateReportUsing: aReportGenerator 

	aReportGenerator generateForWithdraw: self .! !

!methodRemoval: Withdraw #generateReportOn:using: stamp: 'ja 11/15/2020 18:50:53'!
generateReportOn: aReportContainer using: aReportGenerator 

	aReportGenerator generateForWithdraw: self on: aReportContainer !

!testRun: #AccountSummaryGeneratorTest #test01AccountSummaryForEmptyReceptiveAccount stamp: 'ja 11/15/2020 18:51:14'!
ERROR!

!testRun: #AccountSummaryGeneratorTest #test02AccountSummaryForReceptiveAccountWithADeposit stamp: 'ja 11/15/2020 18:51:14'!
ERROR!

!testRun: #AccountSummaryGeneratorTest #test03AccountSummaryForReceptiveAccountWithADepositAndWithdraw stamp: 'ja 11/15/2020 18:51:14'!
ERROR!

!testRun: #AccountSummaryGeneratorTest #test04AccountSummaryForReceptiveAccountWithATransfer stamp: 'ja 11/15/2020 18:51:14'!
ERROR!

!testRun: #AccountSummaryGeneratorTest #test05AccountSummaryForReceptiveAccountWithMultipleTransactions stamp: 'ja 11/15/2020 18:51:14'!
ERROR!

!testRun: #AccountSummaryGeneratorTest #test01AccountSummaryForEmptyReceptiveAccount stamp: 'ja 11/15/2020 18:52:42'!
ERROR!

!testRun: #AccountSummaryGeneratorTest #test01AccountSummaryForEmptyReceptiveAccount stamp: 'ja 11/15/2020 18:52:42'!
ERROR!
!AccountReportGenerator methodsFor: 'report generation' stamp: 'ja 11/15/2020 18:53:08' prior: 50970143!
generate

	account generateReportUsing: self.

	^ report ! !

!testRun: #AccountSummaryGeneratorTest #test01AccountSummaryForEmptyReceptiveAccount stamp: 'ja 11/15/2020 18:53:19'!
PASSED!

!testRun: #AccountSummaryGeneratorTest #test02AccountSummaryForReceptiveAccountWithADeposit stamp: 'ja 11/15/2020 18:53:19'!
PASSED!

!testRun: #AccountSummaryGeneratorTest #test03AccountSummaryForReceptiveAccountWithADepositAndWithdraw stamp: 'ja 11/15/2020 18:53:19'!
PASSED!

!testRun: #AccountSummaryGeneratorTest #test04AccountSummaryForReceptiveAccountWithATransfer stamp: 'ja 11/15/2020 18:53:19'!
PASSED!

!testRun: #AccountSummaryGeneratorTest #test05AccountSummaryForReceptiveAccountWithMultipleTransactions stamp: 'ja 11/15/2020 18:53:19'!
PASSED!

!testRun: #AccountSummaryGeneratorTest #test06AccountSummaryForEmptyPortfolio stamp: 'ja 11/15/2020 18:53:21'!
PASSED!

!testRun: #AccountSummaryGeneratorTest #test07AccountSummaryForPorfolioWithALevel stamp: 'ja 11/15/2020 18:53:21'!
PASSED!

!testRun: #AccountSummaryGeneratorTest #test08AccountSummaryForPorfolioWithMoreThanOneLevel stamp: 'ja 11/15/2020 18:53:21'!
PASSED!

!testRun: #AccountSummaryGeneratorTest #test01AccountSummaryForEmptyReceptiveAccount stamp: 'ja 11/15/2020 18:53:23'!
PASSED!

!testRun: #AccountSummaryGeneratorTest #test02AccountSummaryForReceptiveAccountWithADeposit stamp: 'ja 11/15/2020 18:53:23'!
PASSED!

!testRun: #AccountSummaryGeneratorTest #test03AccountSummaryForReceptiveAccountWithADepositAndWithdraw stamp: 'ja 11/15/2020 18:53:23'!
PASSED!

!testRun: #AccountSummaryGeneratorTest #test04AccountSummaryForReceptiveAccountWithATransfer stamp: 'ja 11/15/2020 18:53:23'!
PASSED!

!testRun: #AccountSummaryGeneratorTest #test05AccountSummaryForReceptiveAccountWithMultipleTransactions stamp: 'ja 11/15/2020 18:53:23'!
PASSED!

!testRun: #AccountSummaryGeneratorTest #test06AccountSummaryForEmptyPortfolio stamp: 'ja 11/15/2020 18:53:25'!
PASSED!

!testRun: #AccountSummaryGeneratorTest #test07AccountSummaryForPorfolioWithALevel stamp: 'ja 11/15/2020 18:53:25'!
PASSED!

!testRun: #AccountSummaryGeneratorTest #test08AccountSummaryForPorfolioWithMoreThanOneLevel stamp: 'ja 11/15/2020 18:53:25'!
PASSED!

!testRun: #AccountSummaryGeneratorTest #test01AccountSummaryForEmptyReceptiveAccount stamp: 'ja 11/15/2020 18:53:36'!
PASSED!

!testRun: #AccountSummaryGeneratorTest #test02AccountSummaryForReceptiveAccountWithADeposit stamp: 'ja 11/15/2020 18:53:36'!
PASSED!

!testRun: #AccountSummaryGeneratorTest #test03AccountSummaryForReceptiveAccountWithADepositAndWithdraw stamp: 'ja 11/15/2020 18:53:36'!
PASSED!

!testRun: #AccountSummaryGeneratorTest #test04AccountSummaryForReceptiveAccountWithATransfer stamp: 'ja 11/15/2020 18:53:36'!
PASSED!

!testRun: #AccountSummaryGeneratorTest #test05AccountSummaryForReceptiveAccountWithMultipleTransactions stamp: 'ja 11/15/2020 18:53:36'!
PASSED!

!testRun: #AccountSummaryGeneratorTest #test06AccountSummaryForEmptyPortfolio stamp: 'ja 11/15/2020 18:53:38'!
PASSED!

!testRun: #AccountSummaryGeneratorTest #test07AccountSummaryForPorfolioWithALevel stamp: 'ja 11/15/2020 18:53:38'!
PASSED!

!testRun: #AccountSummaryGeneratorTest #test08AccountSummaryForPorfolioWithMoreThanOneLevel stamp: 'ja 11/15/2020 18:53:38'!
PASSED!

TestCase subclass: #TransferNetGeneratorTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #TransferNetGeneratorTest category: #'Portfolio-Solucion' stamp: 'ja 11/15/2020 18:54:05'!
TestCase subclass: #TransferNetGeneratorTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!
!TransferNetGeneratorTest methodsFor: 'no messages' stamp: 'ja 11/15/2020 18:55:19'!
test01TransferNetForReceptiveAccountWithoutTransfer


	| aReceptiveAccount aTransferNetGenerator |
	
	aReceptiveAccount _ ReceptiveAccount new.
	aTransferNetGenerator _ TransferNetGenerator for: aReceptiveAccount.
	
	self assert: 0 equals: aTransferNetGenerator generate.
	! !
!TransferNetGeneratorTest methodsFor: 'as yet unclassified' stamp: 'ja 11/15/2020 18:55:40'!
test02TransferNetForReceptiveAccountWithSimpleTransfers

	| aSourceReceptiveAccount aDestinyReceptiveAccount aTransferNetSource aTransferNetDestiny |
	
	aSourceReceptiveAccount _ ReceptiveAccount new.
	aDestinyReceptiveAccount _ ReceptiveAccount new.
	aTransferNetSource _ TransferNetGenerator for: aSourceReceptiveAccount.
	aTransferNetDestiny _ TransferNetGenerator for: aDestinyReceptiveAccount .
	
	Transfer from: aSourceReceptiveAccount to: aDestinyReceptiveAccount anAmountOf: 100.
	
	self assert: -100 equals: aTransferNetSource generate .
	self assert: 100 equals: aTransferNetDestiny generate .	! !

!methodRemoval: AccountSummaryGeneratorTest #test10TransferNetForReceptiveAccountWithoutTransfer stamp: 'ja 11/15/2020 18:55:50'!
test10TransferNetForReceptiveAccountWithoutTransfer


	| aReceptiveAccount aTransferNetGenerator |
	
	aReceptiveAccount _ ReceptiveAccount new.
	aTransferNetGenerator _ TransferNetGenerator for: aReceptiveAccount.
	
	self assert: 0 equals: aTransferNetGenerator generate.
	!

!methodRemoval: AccountSummaryGeneratorTest #test11TransferNetForReceptiveAccountWithSimpleTransfers stamp: 'ja 11/15/2020 18:55:50'!
test11TransferNetForReceptiveAccountWithSimpleTransfers

	| aSourceReceptiveAccount aDestinyReceptiveAccount aTransferNetSource aTransferNetDestiny |
	
	aSourceReceptiveAccount _ ReceptiveAccount new.
	aDestinyReceptiveAccount _ ReceptiveAccount new.
	aTransferNetSource _ TransferNetGenerator for: aSourceReceptiveAccount.
	aTransferNetDestiny _ TransferNetGenerator for: aDestinyReceptiveAccount .
	
	Transfer from: aSourceReceptiveAccount to: aDestinyReceptiveAccount anAmountOf: 100.
	
	self assert: -100 equals: aTransferNetSource generate .
	self assert: 100 equals: aTransferNetDestiny generate .	!

!testRun: #AccountSummaryGeneratorTest #test01AccountSummaryForEmptyReceptiveAccount stamp: 'ja 11/15/2020 18:55:59'!
PASSED!

!testRun: #AccountSummaryGeneratorTest #test02AccountSummaryForReceptiveAccountWithADeposit stamp: 'ja 11/15/2020 18:55:59'!
PASSED!

!testRun: #AccountSummaryGeneratorTest #test03AccountSummaryForReceptiveAccountWithADepositAndWithdraw stamp: 'ja 11/15/2020 18:55:59'!
PASSED!

!testRun: #AccountSummaryGeneratorTest #test04AccountSummaryForReceptiveAccountWithATransfer stamp: 'ja 11/15/2020 18:55:59'!
PASSED!

!testRun: #AccountSummaryGeneratorTest #test05AccountSummaryForReceptiveAccountWithMultipleTransactions stamp: 'ja 11/15/2020 18:55:59'!
PASSED!

!testRun: #AccountSummaryGeneratorTest #test06AccountSummaryForEmptyPortfolio stamp: 'ja 11/15/2020 18:56:01'!
PASSED!

!testRun: #AccountSummaryGeneratorTest #test07AccountSummaryForPorfolioWithALevel stamp: 'ja 11/15/2020 18:56:01'!
PASSED!

!testRun: #AccountSummaryGeneratorTest #test08AccountSummaryForPorfolioWithMoreThanOneLevel stamp: 'ja 11/15/2020 18:56:01'!
PASSED!

----SNAPSHOT----(15 November 2020 19:08:57) CuisUniversity-4365.image priorSource: 20392686!
!AccountSummaryGenerator methodsFor: 'report generation' stamp: 'ja 11/15/2020 19:18:16' overrides: 50970136!
initializeFor: anAccount 

	! !
!AccountReportGenerator methodsFor: 'initialization' stamp: 'ja 11/15/2020 19:18:26' prior: 50970136!
initializeFor: anAccount 
	
	account _ anAccount.
	
! !
!AccountSummaryGenerator methodsFor: 'report generation' stamp: 'ja 11/15/2020 19:18:43' prior: 50970862 overrides: 50970867!
initializeFor: anAccount 

	report _ OrderedCollection new
	super initializeFor: anAccount .	! !

!testRun: #AccountSummaryGeneratorTest #test01AccountSummaryForEmptyReceptiveAccount stamp: 'ja 11/15/2020 19:18:54'!
ERROR!

!testRun: #AccountSummaryGeneratorTest #test02AccountSummaryForReceptiveAccountWithADeposit stamp: 'ja 11/15/2020 19:18:54'!
ERROR!

!testRun: #AccountSummaryGeneratorTest #test03AccountSummaryForReceptiveAccountWithADepositAndWithdraw stamp: 'ja 11/15/2020 19:18:54'!
ERROR!

!testRun: #AccountSummaryGeneratorTest #test04AccountSummaryForReceptiveAccountWithATransfer stamp: 'ja 11/15/2020 19:18:54'!
ERROR!

!testRun: #AccountSummaryGeneratorTest #test05AccountSummaryForReceptiveAccountWithMultipleTransactions stamp: 'ja 11/15/2020 19:18:54'!
ERROR!
!AccountSummaryGenerator methodsFor: 'report generation' stamp: 'ja 11/15/2020 19:19:39' prior: 50970873 overrides: 50970867!
initializeFor: anAccount 

	super initializeFor: anAccount .	
	report _ OrderedCollection new
! !
!AccountSummaryGenerator methodsFor: 'report generation' stamp: 'ja 11/15/2020 19:19:44' prior: 50970902 overrides: 50970867!
initializeFor: anAccount 

	super initializeFor: anAccount .	
	report _ OrderedCollection new.
! !
!AccountSummaryGenerator methodsFor: 'report generation' stamp: 'ja 11/15/2020 19:19:54' prior: 50970909 overrides: 50970867!
initializeFor: anAccount 

	super initializeFor: anAccount.	
	report _ OrderedCollection new.
! !

!testRun: #AccountSummaryGeneratorTest #test01AccountSummaryForEmptyReceptiveAccount stamp: 'ja 11/15/2020 19:20:01'!
PASSED!

!testRun: #AccountSummaryGeneratorTest #test02AccountSummaryForReceptiveAccountWithADeposit stamp: 'ja 11/15/2020 19:20:01'!
PASSED!

!testRun: #AccountSummaryGeneratorTest #test03AccountSummaryForReceptiveAccountWithADepositAndWithdraw stamp: 'ja 11/15/2020 19:20:01'!
PASSED!

!testRun: #AccountSummaryGeneratorTest #test04AccountSummaryForReceptiveAccountWithATransfer stamp: 'ja 11/15/2020 19:20:01'!
PASSED!

!testRun: #AccountSummaryGeneratorTest #test05AccountSummaryForReceptiveAccountWithMultipleTransactions stamp: 'ja 11/15/2020 19:20:01'!
PASSED!

!testRun: #AccountSummaryGeneratorTest #test06AccountSummaryForEmptyPortfolio stamp: 'ja 11/15/2020 19:20:03'!
PASSED!

!testRun: #AccountSummaryGeneratorTest #test07AccountSummaryForPorfolioWithALevel stamp: 'ja 11/15/2020 19:20:03'!
PASSED!

!testRun: #AccountSummaryGeneratorTest #test08AccountSummaryForPorfolioWithMoreThanOneLevel stamp: 'ja 11/15/2020 19:20:03'!
PASSED!
!AccountSummaryGenerator methodsFor: 'report generation' stamp: 'ja 11/15/2020 19:20:11' prior: 50970917 overrides: 50970867!
initializeFor: anAccount 

	
	report _ OrderedCollection new.
	super initializeFor: anAccount.	! !

!testRun: #AccountSummaryGeneratorTest #test01AccountSummaryForEmptyReceptiveAccount stamp: 'ja 11/15/2020 19:20:15'!
PASSED!

!testRun: #AccountSummaryGeneratorTest #test02AccountSummaryForReceptiveAccountWithADeposit stamp: 'ja 11/15/2020 19:20:15'!
PASSED!

!testRun: #AccountSummaryGeneratorTest #test03AccountSummaryForReceptiveAccountWithADepositAndWithdraw stamp: 'ja 11/15/2020 19:20:15'!
PASSED!

!testRun: #AccountSummaryGeneratorTest #test04AccountSummaryForReceptiveAccountWithATransfer stamp: 'ja 11/15/2020 19:20:15'!
PASSED!

!testRun: #AccountSummaryGeneratorTest #test05AccountSummaryForReceptiveAccountWithMultipleTransactions stamp: 'ja 11/15/2020 19:20:15'!
PASSED!

!testRun: #AccountSummaryGeneratorTest #test06AccountSummaryForEmptyPortfolio stamp: 'ja 11/15/2020 19:20:18'!
PASSED!

!testRun: #AccountSummaryGeneratorTest #test07AccountSummaryForPorfolioWithALevel stamp: 'ja 11/15/2020 19:20:18'!
PASSED!

!testRun: #AccountSummaryGeneratorTest #test08AccountSummaryForPorfolioWithMoreThanOneLevel stamp: 'ja 11/15/2020 19:20:18'!
PASSED!
!AccountSummaryGenerator methodsFor: 'report generation' stamp: 'ja 11/15/2020 19:20:31' prior: 50970958 overrides: 50970867!
initializeFor: anAccount 

	super initializeFor: anAccount.	
	report _ OrderedCollection new.
	! !

!testRun: #AccountSummaryGeneratorTest #test01AccountSummaryForEmptyReceptiveAccount stamp: 'ja 11/15/2020 19:20:52'!
PASSED!

!testRun: #AccountSummaryGeneratorTest #test02AccountSummaryForReceptiveAccountWithADeposit stamp: 'ja 11/15/2020 19:20:52'!
PASSED!

!testRun: #AccountSummaryGeneratorTest #test03AccountSummaryForReceptiveAccountWithADepositAndWithdraw stamp: 'ja 11/15/2020 19:20:52'!
PASSED!

!testRun: #AccountSummaryGeneratorTest #test04AccountSummaryForReceptiveAccountWithATransfer stamp: 'ja 11/15/2020 19:20:52'!
PASSED!

!testRun: #AccountSummaryGeneratorTest #test05AccountSummaryForReceptiveAccountWithMultipleTransactions stamp: 'ja 11/15/2020 19:20:52'!
PASSED!

!testRun: #AccountSummaryGeneratorTest #test06AccountSummaryForEmptyPortfolio stamp: 'ja 11/15/2020 19:20:52'!
PASSED!

!testRun: #AccountSummaryGeneratorTest #test07AccountSummaryForPorfolioWithALevel stamp: 'ja 11/15/2020 19:20:52'!
PASSED!

!testRun: #AccountSummaryGeneratorTest #test08AccountSummaryForPorfolioWithMoreThanOneLevel stamp: 'ja 11/15/2020 19:20:52'!
PASSED!

----QUIT----(15 November 2020 19:22:56) CuisUniversity-4365.image priorSource: 20454627!