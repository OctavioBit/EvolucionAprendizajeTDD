----STARTUP---- (16 November 2020 18:53:31) as C:\Users\Chara\Desktop\Facultad\Ingenieria 1\CUIS\CuisUniversity-4383.image!


Object subclass: #Cart
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Ejercicio TusLibros'!

!classDefinition: #Cart category: 'Ejercicio TusLibros' stamp: 'AM 11/16/2020 18:54:49'!
Object subclass: #Cart
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Ejercicio TusLibros'!

TestCase subclass: #CartTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Ejercicio TusLibros'!

!classDefinition: #CartTest category: 'Ejercicio TusLibros' stamp: 'AM 11/16/2020 18:55:11'!
TestCase subclass: #CartTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Ejercicio TusLibros'!
!CartTest methodsFor: 'tests' stamp: 'AM 11/16/2020 19:00:35'!
test01cartIsEmptyWhenCreated

	| cart clientID password |
	
	clientID := 0001.
	password := 'password'.
	cart := Cart for: clientID withPassword: password.
	 
	self assert: (OrderedCollection new) equals: cart listCart.! !

!testRun: #CartTest #test01cartIsEmptyWhenCreated stamp: 'AM 11/16/2020 19:00:46'!
ERROR!
!Cart class methodsFor: 'instance creation' stamp: 'AM 11/16/2020 19:01:26'!
for: aSmallInteger withPassword: aString 
	"DO NOT FORGET TO RENAME COLLABORATORS AND REMOVE THIS COMMENT!!!!"
	self shouldBeImplemented.
	^self new initializeFor: aSmallInteger withPassword: aString ! !
!Cart class methodsFor: 'instance creation' stamp: 'AM 11/16/2020 19:02:09' prior: 50869439!
for: aClientID withPassword: aPassword
	
	^self new initializeFor: aClientID withPassword: aPassword.! !

!testRun: #CartTest #test01cartIsEmptyWhenCreated stamp: 'AM 11/16/2020 19:02:12'!
ERROR!

!classDefinition: #Cart category: 'Ejercicio TusLibros' stamp: 'AM 11/16/2020 19:02:22'!
Object subclass: #Cart
	instanceVariableNames: 'clientID'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Ejercicio TusLibros'!

!classDefinition: #Cart category: 'Ejercicio TusLibros' stamp: 'AM 11/16/2020 19:02:22'!
Object subclass: #Cart
	instanceVariableNames: 'clientID password'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Ejercicio TusLibros'!
!Cart methodsFor: 'initialization' stamp: 'AM 11/16/2020 19:02:22'!
initializeFor: aClientID withPassword: aPassword 
	self shouldBeImplemented.
	clientID := aClientID.
	password := aPassword.! !
!Cart methodsFor: 'initialization' stamp: 'AM 11/16/2020 19:02:31' prior: 50869472!
initializeFor: aClientID withPassword: aPassword 
	
	clientID := aClientID.
	password := aPassword.! !

!testRun: #CartTest #test01cartIsEmptyWhenCreated stamp: 'AM 11/16/2020 19:02:32'!
ERROR!
!Cart methodsFor: 'accessing' stamp: 'AM 11/16/2020 19:02:57'!
listCart
	self shouldBeImplemented.! !
!Cart methodsFor: 'accessing' stamp: 'AM 11/16/2020 19:03:07' prior: 50869488!
listCart
	
	^OrderedCollection new.! !

!testRun: #CartTest #test01cartIsEmptyWhenCreated stamp: 'AM 11/16/2020 19:03:09'!
PASSED!

!testRun: #CartTest #test01cartIsEmptyWhenCreated stamp: 'AM 11/16/2020 19:03:09'!
PASSED!

----End fileIn of C:\Users\Chara\Desktop\Facultad\Ingenieria 1\CUIS\Packages\TerseGuide.pck.st----!
!CartTest methodsFor: 'tests' stamp: 'AM 11/16/2020 19:13:33'!
test02canAddBookCorrectly

	| cart clientID ISBN password |
	
	clientID := 0001.
	ISBN := 0001.
	password := 'password'.
	cart := Cart for: clientID withPassword: password.
	cart addToCart: ISBN quantity: 1.
	 
	self assert: (OrderedCollection new) equals: cart listCart.! !
!CartTest methodsFor: 'tests' stamp: 'AM 11/16/2020 19:14:18' prior: 50869426!
test01cartIsEmptyWhenCreated

	| cart clientID password |
	
	clientID := 0001.
	password := 'password'.
	cart := Cart for: clientID withPassword: password.
	 
	self assert: (Dictionary new) equals: cart listCart.! !
!Cart methodsFor: 'accessing' stamp: 'AM 11/16/2020 19:14:27' prior: 50869492!
listCart
	
	^Dictionary new.! !
!CartTest methodsFor: 'tests' stamp: 'AM 11/16/2020 19:16:56' prior: 50872438!
test02canAddBookCorrectly

	| cart clientID ISBN password expectedResult |
	
	clientID := 0001.
	ISBN := 0001.
	password := 'password'.
	cart := Cart for: clientID withPassword: password.
	cart addToCart: ISBN quantity: 1.
	
	expectedResult := Dictionary new; add: (ISBN asSymbol)	->1.
	
	self assert: expectedResult equals: cart listCart.! !

!testRun: #CartTest #test02canAddBookCorrectly stamp: 'AM 11/16/2020 19:16:58'!
ERROR!
!Cart methodsFor: 'adding' stamp: 'AM 11/16/2020 19:17:09'!
addToCart: aSmallInteger quantity: aSmallInteger2 
	self shouldBeImplemented.! !

!classDefinition: #Cart category: 'Ejercicio TusLibros' stamp: 'AM 11/16/2020 19:20:19'!
Object subclass: #Cart
	instanceVariableNames: 'clientID password books'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Ejercicio TusLibros'!
!Cart methodsFor: 'adding' stamp: 'AM 11/16/2020 19:20:17' prior: 50872480!
addToCart: anISBNCode quantity: aQuantity 
	
	books add: (anISBNCode asSymbol) -> aQuantity.! !

!testRun: #CartTest #test02canAddBookCorrectly stamp: 'AM 11/16/2020 19:20:21'!
ERROR!
!Cart methodsFor: 'adding' stamp: 'AM 11/16/2020 19:21:10' prior: 50872493!
addToCart: anISBNCode quantity: aQuantity 
	
	books add: anISBNCode -> aQuantity.! !
!CartTest methodsFor: 'tests' stamp: 'AM 11/16/2020 19:21:25' prior: 50872464!
test02canAddBookCorrectly

	| cart clientID ISBN password expectedResult |
	
	clientID := 0001.
	ISBN := 0001.
	password := 'password'.
	cart := Cart for: clientID withPassword: password.
	cart addToCart: ISBN quantity: 1.
	
	expectedResult := Dictionary new; add: ISBN	 -> 1.
	
	self assert: expectedResult equals: cart listCart.! !

!testRun: #CartTest #test02canAddBookCorrectly stamp: 'AM 11/16/2020 19:21:28'!
ERROR!
!Cart methodsFor: 'initialization' stamp: 'AM 11/16/2020 19:21:46' prior: 50869479!
initializeFor: aClientID withPassword: aPassword 
	
	clientID := aClientID.
	password := aPassword.
	books := Dictionary new.! !

!testRun: #CartTest #test02canAddBookCorrectly stamp: 'AM 11/16/2020 19:21:53'!
ERROR!
!CartTest methodsFor: 'tests' stamp: 'AM 11/16/2020 19:22:19' prior: 50872508!
test02canAddBookCorrectly

	| cart clientID ISBN password expectedResult |
	
	clientID := 0001.
	ISBN := 0001.
	password := 'password'.
	cart := Cart for: clientID withPassword: password.
	cart addToCart: ISBN quantity: 1.
	
	expectedResult := Dictionary new.
	expectedResult add: ISBN	 -> 1.
	
	self assert: expectedResult equals: cart listCart.! !

!testRun: #CartTest #test02canAddBookCorrectly stamp: 'AM 11/16/2020 19:22:21'!
FAILURE!
!Cart methodsFor: 'accessing' stamp: 'AM 11/16/2020 19:24:08' prior: 50872460!
listCart
	
	^books.! !

!testRun: #CartTest #test02canAddBookCorrectly stamp: 'AM 11/16/2020 19:24:10'!
PASSED!

!testRun: #CartTest #test01cartIsEmptyWhenCreated stamp: 'AM 11/16/2020 19:24:10'!
PASSED!

!testRun: #CartTest #test02canAddBookCorrectly stamp: 'AM 11/16/2020 19:24:10'!
PASSED!
!Cart methodsFor: 'accessing' stamp: 'AM 11/16/2020 19:24:27' prior: 50872551!
listCart
	
	^books copy.! !

!testRun: #CartTest #test01cartIsEmptyWhenCreated stamp: 'AM 11/16/2020 19:24:45'!
PASSED!

!testRun: #CartTest #test02canAddBookCorrectly stamp: 'AM 11/16/2020 19:24:48'!
PASSED!
!CartTest methodsFor: 'tests' stamp: 'AM 11/16/2020 19:29:10'!
test03addingBookAlreadyInCartAddsToTotalBookQuantity

	| cart clientID ISBN password expectedResult |
	
	clientID := 0001.
	ISBN := 0001.
	password := 'password'.
	cart := Cart for: clientID withPassword: password.
	cart addToCart: ISBN quantity: 1.
	cart addToCart: ISBN quantity: 6.
	
	expectedResult := Dictionary new.
	expectedResult add: ISBN	 -> 7.
	
	self assert: expectedResult equals: cart listCart.! !

!testRun: #CartTest #test03addingBookAlreadyInCartAddsToTotalBookQuantity stamp: 'AM 11/16/2020 19:29:14'!
FAILURE!
!Cart methodsFor: 'adding' stamp: 'AM 11/16/2020 19:39:01' prior: 50872502!
addToCart: anISBNCode quantity: aQuantity 
	
	books at: anISBNCode ifAbsent: [^books add: anISBNCode -> aQuantity].
	
	books add: anISBNCode -> aQuantity + (books at: anISBNCode).! !

!testRun: #CartTest #test01cartIsEmptyWhenCreated stamp: 'AM 11/16/2020 19:39:12'!
PASSED!

!testRun: #CartTest #test02canAddBookCorrectly stamp: 'AM 11/16/2020 19:39:12'!
PASSED!

!testRun: #CartTest #test03addingBookAlreadyInCartAddsToTotalBookQuantity stamp: 'AM 11/16/2020 19:39:12'!
ERROR!

!testRun: #CartTest #test03addingBookAlreadyInCartAddsToTotalBookQuantity stamp: 'AM 11/16/2020 19:39:12'!
ERROR!
!Cart methodsFor: 'adding' stamp: 'AM 11/16/2020 19:39:27' prior: 50872591!
addToCart: anISBNCode quantity: aQuantity 
	
	books at: anISBNCode ifAbsent: [^books add: anISBNCode -> aQuantity].
	
	books add: anISBNCode -> (aQuantity + (books at: anISBNCode)).! !

!testRun: #CartTest #test01cartIsEmptyWhenCreated stamp: 'AM 11/16/2020 19:39:30'!
PASSED!

!testRun: #CartTest #test02canAddBookCorrectly stamp: 'AM 11/16/2020 19:39:30'!
PASSED!

!testRun: #CartTest #test03addingBookAlreadyInCartAddsToTotalBookQuantity stamp: 'AM 11/16/2020 19:39:30'!
PASSED!

----QUIT----(16 November 2020 21:18:06) CuisUniversity-4383.image priorSource: 17207870!

----STARTUP---- (17 November 2020 16:08:00) as C:\Users\Chara\Desktop\Facultad\Ingenieria 1\CUIS\CuisUniversity-4383.image!


!testRun: #CartTest #test01cartIsEmptyWhenCreated stamp: 'AM 11/17/2020 16:10:18'!
PASSED!

!testRun: #CartTest #test02canAddBookCorrectly stamp: 'AM 11/17/2020 16:10:18'!
PASSED!

!testRun: #CartTest #test03addingBookAlreadyInCartAddsToTotalBookQuantity stamp: 'AM 11/17/2020 16:10:18'!
PASSED!
!Cart methodsFor: 'initialization' stamp: 'AM 11/17/2020 16:10:39' prior: 50872524!
initializeFor: aClientID withPassword: aPassword 
	
	clientID := aClientID.
	password := aPassword.
	books := Bag new.! !
!Cart methodsFor: 'adding' stamp: 'AM 11/17/2020 16:13:20' prior: 50872612!
addToCart: anISBNCode quantity: aQuantity 
	
	books add: anISBNCode withOccurrences: aQuantity.	! !
!CartTest methodsFor: 'tests' stamp: 'AM 11/17/2020 16:14:17' prior: 50872534!
test02canAddBookCorrectly

	| cart clientID ISBN password expectedResult |
	
	clientID := 0001.
	ISBN := 0001.
	password := 'password'.
	cart := Cart for: clientID withPassword: password.
	cart addToCart: ISBN quantity: 1.
	
	expectedResult := Bag with: ISBN.
	
	self assert: expectedResult equals: cart listCart.! !
!CartTest methodsFor: 'tests' stamp: 'AM 11/17/2020 16:14:38' prior: 50872450!
test01cartIsEmptyWhenCreated

	| cart clientID password |
	
	clientID := 0001.
	password := 'password'.
	cart := Cart for: clientID withPassword: password.
	 
	self assert: (Bag new) equals: cart listCart.! !
!CartTest methodsFor: 'tests' stamp: 'AM 11/17/2020 16:15:10' prior: 50872572!
test03addingBookAlreadyInCartAddsToTotalBookQuantity

	| cart clientID ISBN password expectedResult |
	
	clientID := 0001.
	ISBN := 0001.
	password := 'password'.
	cart := Cart for: clientID withPassword: password.
	cart addToCart: ISBN quantity: 1.
	cart addToCart: ISBN quantity: 6.
	
	expectedResult := Bag new.
	expectedResult add: ISBN withOccurrences: 7.
	
	self assert: expectedResult equals: cart listCart.! !

!testRun: #CartTest #test01cartIsEmptyWhenCreated stamp: 'AM 11/17/2020 16:15:26'!
PASSED!

!testRun: #CartTest #test02canAddBookCorrectly stamp: 'AM 11/17/2020 16:15:26'!
PASSED!

!testRun: #CartTest #test03addingBookAlreadyInCartAddsToTotalBookQuantity stamp: 'AM 11/17/2020 16:15:26'!
PASSED!
!CartTest methodsFor: 'tests' stamp: 'AM 11/17/2020 16:18:14'!
test04bookOrderQuantityMustAtLeastOne

	| cart clientID ISBN password |
	
	clientID := 0001.
	ISBN := 0001.
	password := 'password'.
	cart := Cart for: clientID withPassword: password.
	
	self 
		should: [cart addToCart: ISBN quantity: -1]
		raise: Error
		withMessageText: Cart invalidQuantityErrorDescription.! !

!testRun: #CartTest #test04bookOrderQuantityMustAtLeastOne stamp: 'AM 11/17/2020 16:18:27'!
ERROR!
!Cart class methodsFor: 'error descriptions' stamp: 'AM 11/17/2020 16:18:40'!
invalidQuantityErrorDescription
	self shouldBeImplemented.! !
!Cart class methodsFor: 'error descriptions' stamp: 'AM 11/17/2020 16:19:01' prior: 50872722!
invalidQuantityErrorDescription
	
	^'Order quantity must be at least one'! !

!testRun: #CartTest #test04bookOrderQuantityMustAtLeastOne stamp: 'AM 11/17/2020 16:19:03'!
FAILURE!
!Cart methodsFor: 'adding' stamp: 'AM 11/17/2020 16:20:31' prior: 50872653!
addToCart: anISBNCode quantity: aQuantity 
	
	(aQuantity > 0) ifTrue: [self signalInvalidOrderQuantity].
	books add: anISBNCode withOccurrences: aQuantity.	! !
!Cart methodsFor: 'adding' stamp: 'AM 11/17/2020 16:21:08'!
assertValidOrderQuantity: aQuantity

	^ (aQuantity > 0) ifTrue: [self signalInvalidOrderQuantity]! !
!Cart methodsFor: 'adding' stamp: 'AM 11/17/2020 16:21:08' prior: 50872735!
addToCart: anISBNCode quantity: aQuantity 
	
	self assertValidOrderQuantity: aQuantity.
	books add: anISBNCode withOccurrences: aQuantity.	! !
!Cart methodsFor: 'adding' stamp: 'AM 11/17/2020 16:21:16' prior: 50872742!
assertValidOrderQuantity: aQuantity

	^ (aQuantity > 0) ifTrue: [self signalInvalidOrderQuantity].! !
!Cart methodsFor: 'adding' stamp: 'AM 11/17/2020 16:21:19' prior: 50872755!
assertValidOrderQuantity: aQuantity

	(aQuantity > 0) ifTrue: [self signalInvalidOrderQuantity].! !

!testRun: #CartTest #test01cartIsEmptyWhenCreated stamp: 'AM 11/17/2020 16:21:20'!
PASSED!

!testRun: #CartTest #test02canAddBookCorrectly stamp: 'AM 11/17/2020 16:21:20'!
ERROR!

!testRun: #CartTest #test03addingBookAlreadyInCartAddsToTotalBookQuantity stamp: 'AM 11/17/2020 16:21:20'!
ERROR!

!testRun: #CartTest #test04bookOrderQuantityMustAtLeastOne stamp: 'AM 11/17/2020 16:21:20'!
FAILURE!

!testRun: #CartTest #test04bookOrderQuantityMustAtLeastOne stamp: 'AM 11/17/2020 16:21:31'!
FAILURE!
!Cart methodsFor: 'adding' stamp: 'AM 11/17/2020 16:22:29' prior: 50872761!
assertValidOrderQuantity: aQuantity

	(aQuantity > 0) ifFalse: [self signalInvalidOrderQuantity].! !

!testRun: #CartTest #test04bookOrderQuantityMustAtLeastOne stamp: 'AM 11/17/2020 16:22:35'!
FAILURE!
!Cart methodsFor: 'error signaling' stamp: 'AM 11/17/2020 16:23:20'!
signalInvalidOrderQuantity

	self error: self class invalidQuantityErrorDescription.! !
!Cart methodsFor: 'error signaling' stamp: 'AM 11/17/2020 16:23:23' prior: 50872792!
signalInvalidOrderQuantity

	^self error: self class invalidQuantityErrorDescription.! !

!testRun: #CartTest #test04bookOrderQuantityMustAtLeastOne stamp: 'AM 11/17/2020 16:23:42'!
PASSED!

!testRun: #CartTest #test01cartIsEmptyWhenCreated stamp: 'AM 11/17/2020 16:23:42'!
PASSED!

!testRun: #CartTest #test02canAddBookCorrectly stamp: 'AM 11/17/2020 16:23:42'!
PASSED!

!testRun: #CartTest #test03addingBookAlreadyInCartAddsToTotalBookQuantity stamp: 'AM 11/17/2020 16:23:42'!
PASSED!

!testRun: #CartTest #test04bookOrderQuantityMustAtLeastOne stamp: 'AM 11/17/2020 16:23:42'!
PASSED!
!Cart methodsFor: 'initialization' stamp: 'AM 11/17/2020 16:44:14'!
initializeWithID: aCartId! !

!classDefinition: #Cart category: 'Ejercicio TusLibros' stamp: 'AM 11/17/2020 16:45:47'!
Object subclass: #Cart
	instanceVariableNames: 'clientID password books cartID'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Ejercicio TusLibros'!
!Cart methodsFor: 'initialization' stamp: 'AM 11/17/2020 16:45:45' prior: 50872819!
initializeWithID: aCartId

	cartID := aCartId.! !

!methodRemoval: Cart #initializeWithID: stamp: 'AM 11/17/2020 16:46:12'!
initializeWithID: aCartId

	cartID := aCartId.!
!Cart methodsFor: 'initialization' stamp: 'AM 11/17/2020 16:46:34' prior: 50872646!
initializeFor: aClientID withPassword: aPassword 
	
	clientID := aClientID.
	books := Bag new.! !
!Cart methodsFor: 'initialization' stamp: 'AM 11/17/2020 16:46:43'!
initializeFor: aClientID  
	
	clientID := aClientID.
	books := Bag new.! !
!Cart class methodsFor: 'as yet unclassified' stamp: 'AM 11/17/2020 16:46:43' prior: 50869449!
for: aClientID withPassword: aPassword
	
	^self new initializeFor: aClientID .! !

!methodRemoval: Cart #initializeFor:withPassword: stamp: 'AM 11/17/2020 16:46:43'!
initializeFor: aClientID withPassword: aPassword 
	
	clientID := aClientID.
	books := Bag new.!
!Cart methodsFor: 'initialization' stamp: 'AM 11/17/2020 16:47:03'!
initializeWithID: aClientID  
	
	clientID := aClientID.
	books := Bag new.! !
!Cart class methodsFor: 'as yet unclassified' stamp: 'AM 11/17/2020 16:47:03' prior: 50872851!
for: aClientID withPassword: aPassword
	
	^self new initializeWithID: aClientID .! !

!methodRemoval: Cart #initializeFor: stamp: 'AM 11/17/2020 16:47:03'!
initializeFor: aClientID  
	
	clientID := aClientID.
	books := Bag new.!
!Cart methodsFor: 'initialization' stamp: 'AM 11/17/2020 16:47:26' prior: 50872862!
initializeWithID: aCartID  
	
	clientID := aCartID.
	books := Bag new.! !

Object subclass: #Cart
	instanceVariableNames: 'cartID password books cartID'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Ejercicio TusLibros'!

Object subclass: #Cart
	instanceVariableNames: 'books cartID'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Ejercicio TusLibros'!

!classDefinition: #Cart category: 'Ejercicio TusLibros' stamp: 'AM 11/17/2020 16:48:34'!
Object subclass: #Cart
	instanceVariableNames: 'books cartID'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Ejercicio TusLibros'!
!Cart methodsFor: 'initialization' stamp: 'AM 11/17/2020 16:48:40' prior: 50872878!
initializeWithID: aCartID  
	
	cartID := aCartID.
	books := Bag new.! !
!Cart class methodsFor: 'instance creation' stamp: 'AM 11/17/2020 16:49:46'!
for: aClientID 
	
	^self new initializeWithID: aClientID .! !

!methodRemoval: Cart class #for:withPassword: stamp: 'AM 11/17/2020 16:49:46'!
for: aClientID withPassword: aPassword
	
	^self new initializeWithID: aClientID .!
!Cart class methodsFor: 'instance creation' stamp: 'AM 11/17/2020 16:50:02'!
withID: aClientID 
	
	^self new initializeWithID: aClientID .! !

!methodRemoval: Cart class #for: stamp: 'AM 11/17/2020 16:50:02'!
for: aClientID 
	
	^self new initializeWithID: aClientID .!
!Cart class methodsFor: 'instance creation' stamp: 'AM 11/17/2020 16:50:16' prior: 50872915!
withID: aCartID 
	
	^self new initializeWithID: aCartID .! !
!CartTest methodsFor: 'tests' stamp: 'AM 11/17/2020 16:50:47' prior: 50872672!
test01cartIsEmptyWhenCreated

	| cart clientID |
	
	clientID := 0001.
	cart := Cart withID: clientID.
	 
	self assert: (Bag new) equals: cart listCart.! !
!CartTest methodsFor: 'tests' stamp: 'AM 11/17/2020 16:50:54' prior: 50872929!
test01cartIsEmptyWhenCreated

	| cart cartID |
	
	cartID := 0001.
	cart := Cart withID: cartID.
	 
	self assert: (Bag new) equals: cart listCart.! !
!CartTest methodsFor: 'tests' stamp: 'AM 11/17/2020 16:51:28' prior: 50872659!
test02canAddBookCorrectly

	| cart cartID ISBN expectedResult |
	
	cartID := 0001.
	ISBN := 0001.
	cart := Cart withID: cartID.
	cart addToCart: ISBN quantity: 1.
	
	expectedResult := Bag with: ISBN.
	
	self assert: expectedResult equals: cart listCart.! !
!CartTest methodsFor: 'tests' stamp: 'AM 11/17/2020 16:51:52' prior: 50872681!
test03addingBookAlreadyInCartAddsToTotalBookQuantity

	| cart clientID ISBN expectedResult |
	
	clientID := 0001.
	ISBN := 0001.

	cart := Cart withID: clientID.
	cart addToCart: ISBN quantity: 1.
	cart addToCart: ISBN quantity: 6.
	
	expectedResult := Bag new.
	expectedResult add: ISBN withOccurrences: 7.
	
	self assert: expectedResult equals: cart listCart.! !
!CartTest methodsFor: 'tests' stamp: 'AM 11/17/2020 16:52:07' prior: 50872956!
test03addingBookAlreadyInCartAddsToTotalBookQuantity

	| cart cartID ISBN expectedResult |
	
	cartID := 0001.
	ISBN := 0001.

	cart := Cart withID: cartID.
	cart addToCart: ISBN quantity: 1.
	cart addToCart: ISBN quantity: 6.
	
	expectedResult := Bag new.
	expectedResult add: ISBN withOccurrences: 7.
	
	self assert: expectedResult equals: cart listCart.! !
!CartTest methodsFor: 'tests' stamp: 'AM 11/17/2020 16:52:28' prior: 50872706!
test04bookOrderQuantityMustAtLeastOne

	| cart clientID ISBN |
	
	clientID := 0001.
	ISBN := 0001.
	cart := Cart withID: clientID .
	
	self 
		should: [cart addToCart: ISBN quantity: -1]
		raise: Error
		withMessageText: Cart invalidQuantityErrorDescription.! !
!CartTest methodsFor: 'tests' stamp: 'AM 11/17/2020 16:52:36' prior: 50872984!
test04bookOrderQuantityMustAtLeastOne

	| cart cartID ISBN |
	
	cartID := 0001.
	ISBN := 0001.
	cart := Cart withID: cartID .
	
	self 
		should: [cart addToCart: ISBN quantity: -1]
		raise: Error
		withMessageText: Cart invalidQuantityErrorDescription.! !

!testRun: #CartTest #test01cartIsEmptyWhenCreated stamp: 'AM 11/17/2020 16:52:39'!
PASSED!

!testRun: #CartTest #test02canAddBookCorrectly stamp: 'AM 11/17/2020 16:52:39'!
PASSED!

!testRun: #CartTest #test03addingBookAlreadyInCartAddsToTotalBookQuantity stamp: 'AM 11/17/2020 16:52:39'!
PASSED!

!testRun: #CartTest #test04bookOrderQuantityMustAtLeastOne stamp: 'AM 11/17/2020 16:52:39'!
PASSED!

----QUIT----(17 November 2020 16:55:03) CuisUniversity-4383.image priorSource: 17311329!

