

----STARTUP---- (11 November 2020 15:48:44) as /home/fede/Documentos/Facultad/Inge1/Cuises/linux64/CuisUniversity-4384.image!


----SNAPSHOT----(11 November 2020 15:48:50) CuisUniversity-4384.image priorSource: 17155564!

----End fileIn of /home/fede/Documentos/Facultad/Inge1/EjerciciosParaEntregar/2020-2c/18-Portfolio1/Portfolio-Solucion.st----!

TestCase subclass: #TransferTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #TransferTest category: 'Portfolio-Solucion' stamp: 'fr 11/11/2020 15:49:39'!
TestCase subclass: #TransferTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #Transfer category: 'Portfolio-Solucion' stamp: 'fr 11/11/2020 15:51:10'!
Object subclass: #Transfer
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!
!TransferTest methodsFor: 'no messages' stamp: 'fr 11/11/2020 15:51:07'!
test01

	| account anotherAccount |
	
	account _ ReceptiveAccount new.
	anotherAccount _ ReceptiveAccount new.
	
	Transfer move: 100 from: account to: anotherAccount.
	
	self assert: [account balance = -100 and: [anotherAccount balance = 100]]! !

!testRun: #TransferTest #test01 stamp: 'fr 11/11/2020 15:51:18'!
ERROR!
!Transfer class methodsFor: 'instance creation' stamp: 'fr 11/11/2020 15:51:22'!
move: aSmallInteger from: aReceptiveAccount to: aReceptiveAccount3 
	"DO NOT FORGET TO RENAME COLLABORATORS AND REMOVE THIS COMMENT!!!!"
	self shouldBeImplemented.
	^self new initializeMove: aSmallInteger from: aReceptiveAccount to: aReceptiveAccount3 ! !
!Transfer class methodsFor: 'instance creation' stamp: 'fr 11/11/2020 15:51:47' prior: 50868523!
move: transferValue from: aReceptiveAccountToMoveFrom to: aReceptiveAccountToMoveTo 
	
	^self new initializeMove: transferValue from: aReceptiveAccountToMoveFrom to: aReceptiveAccountToMoveTo ! !

!testRun: #TransferTest #test01 stamp: 'fr 11/11/2020 15:52:02'!
ERROR!

!classDefinition: #Transfer category: 'Portfolio-Solucion' stamp: 'fr 11/11/2020 15:52:16'!
Object subclass: #Transfer
	instanceVariableNames: 'transferValue_CHANGE_ME'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #Transfer category: 'Portfolio-Solucion' stamp: 'fr 11/11/2020 15:52:16'!
Object subclass: #Transfer
	instanceVariableNames: 'transferValue_CHANGE_ME receptiveAccountToMoveFrom'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #Transfer category: 'Portfolio-Solucion' stamp: 'fr 11/11/2020 15:52:16'!
Object subclass: #Transfer
	instanceVariableNames: 'transferValue_CHANGE_ME receptiveAccountToMoveFrom receptiveAccountToMoveTo'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!
!Transfer methodsFor: 'initialization' stamp: 'fr 11/11/2020 15:52:16'!
initializeMove: transferValue from: aReceptiveAccountToMoveFrom to: aReceptiveAccountToMoveTo 
	self shouldBeImplemented.
	transferValue_CHANGE_ME := transferValue.
	receptiveAccountToMoveFrom := aReceptiveAccountToMoveFrom.
	receptiveAccountToMoveTo := aReceptiveAccountToMoveTo.! !
!Transfer methodsFor: 'initialization' stamp: 'fr 11/11/2020 15:52:18' prior: 50868572!
initializeMove: transferValue from: aReceptiveAccountToMoveFrom to: aReceptiveAccountToMoveTo 
	
	transferValue_CHANGE_ME := transferValue.
	receptiveAccountToMoveFrom := aReceptiveAccountToMoveFrom.
	receptiveAccountToMoveTo := aReceptiveAccountToMoveTo.! !

!classDefinition: #Transfer category: 'Portfolio-Solucion' stamp: 'fr 11/11/2020 15:52:24'!
Object subclass: #Transfer
	instanceVariableNames: 'value receptiveAccountToMoveFrom receptiveAccountToMoveTo'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!
!Transfer methodsFor: 'as yet unclassified' stamp: 'fr 11/11/2020 15:52:24' prior: 50868584!
initializeMove: transferValue from: aReceptiveAccountToMoveFrom to: aReceptiveAccountToMoveTo 
	
	value := transferValue.
	receptiveAccountToMoveFrom := aReceptiveAccountToMoveFrom.
	receptiveAccountToMoveTo := aReceptiveAccountToMoveTo.! !
!Transfer methodsFor: 'initialization' stamp: 'fr 11/11/2020 15:52:35' prior: 50868604!
initializeMove: transferValue from: aReceptiveAccountToMoveFrom to: aReceptiveAccountToMoveTo 
	
	value _ transferValue.
	receptiveAccountToMoveFrom := aReceptiveAccountToMoveFrom.
	receptiveAccountToMoveTo := aReceptiveAccountToMoveTo.! !
!Transfer methodsFor: 'initialization' stamp: 'fr 11/11/2020 15:53:33' prior: 50868615!
initializeMove: transferValue from: aReceptiveAccountToMoveFrom to: aReceptiveAccountToMoveTo 
		
	Withdraw register: transferValue on: aReceptiveAccountToMoveFrom.
	Deposit register: transferValue on: aReceptiveAccountToMoveTo ! !

!testRun: #TransferTest #test01 stamp: 'fr 11/11/2020 15:53:34'!
PASSED!

!testRun: #TransferTest #test01 stamp: 'fr 11/11/2020 15:53:34'!
PASSED!
!TransferTest methodsFor: 'as yet unclassified' stamp: 'fr 11/11/2020 15:53:37'!
test02

	| account anotherAccount |
	
	account _ ReceptiveAccount new.
	anotherAccount _ ReceptiveAccount new.
	
	Transfer move: 100 from: account to: anotherAccount.
	
	self assert: [account balance = -100 and: [anotherAccount balance = 100]]! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'fr 11/11/2020 15:54:25' prior: 50868641!
test02

	| account anotherAccount transfer |
	
	account _ ReceptiveAccount new.
	anotherAccount _ ReceptiveAccount new.
	
	transfer _ Transfer move: 100 from: account to: anotherAccount.
	
	self assert: [(account hasRegistered: transfer from) and: [anotherAccount hasRegistered: transfer to]]! !

!testRun: #TransferTest #test02 stamp: 'fr 11/11/2020 15:54:26'!
ERROR!
!Transfer methodsFor: 'transfer legs' stamp: 'fr 11/11/2020 15:54:47'!
from
	self shouldBeImplemented.! !
!Transfer methodsFor: 'transfer legs' stamp: 'fr 11/11/2020 15:54:54' prior: 50868666!
from
	
	^receptiveAccountToMoveFrom ! !

!testRun: #TransferTest #test02 stamp: 'fr 11/11/2020 15:54:57'!
FAILURE!
!Transfer methodsFor: 'initialization' stamp: 'fr 11/11/2020 15:55:18' prior: 50868626!
initializeMove: transferValue from: aReceptiveAccountToMoveFrom to: aReceptiveAccountToMoveTo 
		
	receptiveAccountToMoveFrom _ Withdraw register: transferValue on: aReceptiveAccountToMoveFrom.
	Deposit register: transferValue on: aReceptiveAccountToMoveTo ! !

!classDefinition: #Transfer category: 'Portfolio-Solucion' stamp: 'fr 11/11/2020 15:55:41'!
Object subclass: #Transfer
	instanceVariableNames: 'value withdraw receptiveAccountToMoveTo'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!
!Transfer methodsFor: 'as yet unclassified' stamp: 'fr 11/11/2020 15:55:41' prior: 50868670!
from
	
	^withdraw ! !
!Transfer methodsFor: 'as yet unclassified' stamp: 'fr 11/11/2020 15:55:41' prior: 50868677!
initializeMove: transferValue from: aReceptiveAccountToMoveFrom to: aReceptiveAccountToMoveTo 
		
	withdraw _ Withdraw register: transferValue on: aReceptiveAccountToMoveFrom.
	Deposit register: transferValue on: aReceptiveAccountToMoveTo ! !

!testRun: #TransferTest #test02 stamp: 'fr 11/11/2020 15:55:45'!
ERROR!
!Transfer methodsFor: 'transfer legs' stamp: 'fr 11/11/2020 15:55:53'!
to
	self shouldBeImplemented.! !
!Transfer methodsFor: 'transfer legs' stamp: 'fr 11/11/2020 15:56:01' prior: 50868714!
to
	
	^receptiveAccountToMoveTo ! !

!testRun: #TransferTest #test02 stamp: 'fr 11/11/2020 15:56:03'!
FAILURE!
!Transfer methodsFor: 'initialization' stamp: 'fr 11/11/2020 15:56:26' prior: 50868701!
initializeMove: transferValue from: aReceptiveAccountToMoveFrom to: aReceptiveAccountToMoveTo 
		
	withdraw _ Withdraw register: transferValue on: aReceptiveAccountToMoveFrom.
	receptiveAccountToMoveTo _ Deposit register: transferValue on: aReceptiveAccountToMoveTo ! !

!classDefinition: #Transfer category: 'Portfolio-Solucion' stamp: 'fr 11/11/2020 15:56:29'!
Object subclass: #Transfer
	instanceVariableNames: 'value withdraw deposit'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!
!Transfer methodsFor: 'as yet unclassified' stamp: 'fr 11/11/2020 15:56:29' prior: 50868725!
initializeMove: transferValue from: aReceptiveAccountToMoveFrom to: aReceptiveAccountToMoveTo 
		
	withdraw _ Withdraw register: transferValue on: aReceptiveAccountToMoveFrom.
	deposit _ Deposit register: transferValue on: aReceptiveAccountToMoveTo ! !
!Transfer methodsFor: 'as yet unclassified' stamp: 'fr 11/11/2020 15:56:29' prior: 50868718!
to
	
	^deposit ! !

!testRun: #TransferTest #test02 stamp: 'fr 11/11/2020 15:56:34'!
PASSED!

!testRun: #TransferTest #test01 stamp: 'fr 11/11/2020 15:56:34'!
PASSED!

!testRun: #TransferTest #test02 stamp: 'fr 11/11/2020 15:56:34'!
PASSED!
!TransferTest methodsFor: 'as yet unclassified' stamp: 'fr 11/11/2020 15:56:46'!
test03

	| account anotherAccount transfer |
	
	account _ ReceptiveAccount new.
	anotherAccount _ ReceptiveAccount new.
	
	transfer _ Transfer move: 100 from: account to: anotherAccount.
	
	self assert: [(account hasRegistered: transfer from) and: [anotherAccount hasRegistered: transfer to]]! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'fr 11/11/2020 15:57:11' prior: 50868767!
test03

	| account anotherAccount transfer |
	
	account _ ReceptiveAccount new.
	anotherAccount _ ReceptiveAccount new.
	
	transfer _ Transfer move: 100 from: account to: anotherAccount.
	
	self assert: [(transfer to isComplementedBy: transfer from) and: [transfer from isComplementedBy: transfer to]]! !

!testRun: #TransferTest #test03 stamp: 'fr 11/11/2020 15:57:20'!
ERROR!

!classDefinition: #WithdrawByTransference category: 'Portfolio-Solucion' stamp: 'fr 11/11/2020 15:58:09'!
AccountTransaction subclass: #WithdrawByTransference
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #DepositByTransference category: 'Portfolio-Solucion' stamp: 'fr 11/11/2020 15:58:17'!
AccountTransaction subclass: #DepositByTransference
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!
!Transfer methodsFor: 'initialization' stamp: 'fr 11/11/2020 15:57:52' prior: 50868745!
initializeMove: transferValue from: aReceptiveAccountToMoveFrom to: aReceptiveAccountToMoveTo 
		
	withdraw _ WithdrawByTransference register: transferValue on: aReceptiveAccountToMoveFrom.
	deposit _ DepositByTransference register: transferValue on: aReceptiveAccountToMoveTo ! !
!Transfer methodsFor: 'initialization' stamp: 'fr 11/11/2020 15:58:23' prior: 50868812!
initializeMove: transferValue from: aReceptiveAccountToMoveFrom to: aReceptiveAccountToMoveTo 
		
	withdraw _ WithdrawByTransference register: transferValue on: aReceptiveAccountToMoveFrom for: self.
	deposit _ DepositByTransference register: transferValue on: aReceptiveAccountToMoveTo for: self ! !

!testRun: #TransferTest #test03 stamp: 'fr 11/11/2020 15:58:27'!
ERROR!
!WithdrawByTransference class methodsFor: 'instance creation' stamp: 'fr 11/11/2020 15:58:32'!
register: aSmallInteger on: aReceptiveAccount for: aTransfer 
	"DO NOT FORGET TO RENAME COLLABORATORS AND REMOVE THIS COMMENT!!!!"
	self shouldBeImplemented.
	^self new initializeRegister: aSmallInteger on: aReceptiveAccount for: aTransfer ! !
!WithdrawByTransference class methodsFor: 'instance creation' stamp: 'fr 11/11/2020 15:58:37' prior: 50868839!
register: aSmallInteger on: aReceptiveAccount for: aTransfer 
	
	^self new initializeRegister: aSmallInteger on: aReceptiveAccount for: aTransfer ! !
!WithdrawByTransference class methodsFor: 'instance creation' stamp: 'fr 11/11/2020 15:58:59' prior: 50868851!
register: aSmallInteger on: aReceptiveAccount for: aTransfer 
	
	^(self register: aSmallInteger on: aReceptiveAccount) forTransfer: aTransfer ! !
!WithdrawByTransference class methodsFor: 'instance creation' stamp: 'fr 11/11/2020 15:59:10' prior: 50868860!
register: transferAmount on: aReceptiveAccount for: aTransfer 
	
	^(self register: transferAmount on: aReceptiveAccount) forTransfer: aTransfer ! !

!testRun: #TransferTest #test03 stamp: 'fr 11/11/2020 15:59:35'!
ERROR!
!WithdrawByTransference class methodsFor: 'instance creation' stamp: 'fr 11/11/2020 15:59:44'!
for: aSmallInteger 
	"DO NOT FORGET TO RENAME COLLABORATORS AND REMOVE THIS COMMENT!!!!"
	self shouldBeImplemented.
	^self new initializeFor: aSmallInteger ! !
!WithdrawByTransference class methodsFor: 'instance creation' stamp: 'fr 11/11/2020 15:59:50' prior: 50868879!
for: aSmallInteger 
! !
!WithdrawByTransference class methodsFor: 'instance creation' stamp: 'fr 11/11/2020 16:00:00' prior: 50868888!
for: transferenceAmount 
! !

!testRun: #TransferTest #test03 stamp: 'fr 11/11/2020 16:00:01'!
ERROR!

!testRun: #TransferTest #test03 stamp: 'fr 11/11/2020 16:00:52'!
ERROR!

!testRun: #TransferTest #test03 stamp: 'fr 11/11/2020 16:00:52'!
ERROR!
!WithdrawByTransference class methodsFor: 'instance creation' stamp: 'fr 11/11/2020 16:01:07' prior: 50868893!
for: transferenceAmount 
	
	^self new
! !

!testRun: #TransferTest #test03 stamp: 'fr 11/11/2020 16:01:08'!
ERROR!
!WithdrawByTransference methodsFor: 'initialization' stamp: 'fr 11/11/2020 16:01:28'!
forTransfer: aTransfer 
	self shouldBeImplemented.! !

!classDefinition: #WithdrawByTransference category: 'Portfolio-Solucion' stamp: 'fr 11/11/2020 16:01:39'!
AccountTransaction subclass: #WithdrawByTransference
	instanceVariableNames: 'transfer'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!
!WithdrawByTransference methodsFor: 'initialization' stamp: 'fr 11/11/2020 16:01:36' prior: 50868912!
forTransfer: aTransfer 
	
	transfer _ aTransfer! !

!testRun: #TransferTest #test03 stamp: 'fr 11/11/2020 16:01:40'!
ERROR!
!DepositByTransference class methodsFor: 'instance creation' stamp: 'fr 11/11/2020 16:01:49'!
register: aSmallInteger on: aReceptiveAccount for: aTransfer 
	"DO NOT FORGET TO RENAME COLLABORATORS AND REMOVE THIS COMMENT!!!!"
	self shouldBeImplemented.
	^self new initializeRegister: aSmallInteger on: aReceptiveAccount for: aTransfer ! !
!DepositByTransference class methodsFor: 'instance creation' stamp: 'fr 11/11/2020 16:02:17' prior: 50868933!
register: transferAmount on: aReceptiveAccount for: aTransfer 
	
	^(self register: transferAmount on: aReceptiveAccount) forTransfer: aTransfer ! !

!testRun: #TransferTest #test03 stamp: 'fr 11/11/2020 16:02:19'!
ERROR!
!DepositByTransference class methodsFor: 'instance creation' stamp: 'fr 11/11/2020 16:02:25'!
for: aSmallInteger 
	"DO NOT FORGET TO RENAME COLLABORATORS AND REMOVE THIS COMMENT!!!!"
	self shouldBeImplemented.
	^self new initializeFor: aSmallInteger ! !
!DepositByTransference class methodsFor: 'instance creation' stamp: 'fr 11/11/2020 16:02:40' prior: 50868955!
for: transferAmount 
	
	^self new ! !

!testRun: #TransferTest #test03 stamp: 'fr 11/11/2020 16:02:41'!
ERROR!
!DepositByTransference methodsFor: 'initialization' stamp: 'fr 11/11/2020 16:02:50'!
forTransfer: aTransfer 
	self shouldBeImplemented.! !

!classDefinition: #DepositByTransference category: 'Portfolio-Solucion' stamp: 'fr 11/11/2020 16:02:58'!
AccountTransaction subclass: #DepositByTransference
	instanceVariableNames: 'transfer'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!
!DepositByTransference methodsFor: 'initialization' stamp: 'fr 11/11/2020 16:02:56' prior: 50868971!
forTransfer: aTransfer 
	
	transfer _ aTransfer ! !

!testRun: #TransferTest #test03 stamp: 'fr 11/11/2020 16:02:59'!
ERROR!
!DepositByTransference methodsFor: 'complementary leg' stamp: 'fr 11/11/2020 16:03:25'!
isComplementedBy: aWithdrawByTransference 
	self shouldBeImplemented.! !
!DepositByTransference methodsFor: 'complementary leg' stamp: 'fr 11/11/2020 16:03:44' prior: 50868992!
isComplementedBy: aWithdrawByTransference 
	
	^transfer from = aWithdrawByTransference ! !

!testRun: #TransferTest #test03 stamp: 'fr 11/11/2020 16:03:45'!
ERROR!
!WithdrawByTransference methodsFor: 'complementary leg' stamp: 'fr 11/11/2020 16:03:53'!
isComplementedBy: aDepositByTransference 
	self shouldBeImplemented.! !
!WithdrawByTransference methodsFor: 'complementary leg' stamp: 'fr 11/11/2020 16:04:02' prior: 50869006!
isComplementedBy: aDepositByTransference 
	
	^transfer to = aDepositByTransference ! !

!testRun: #TransferTest #test03 stamp: 'fr 11/11/2020 16:04:03'!
PASSED!

!testRun: #TransferTest #test03 stamp: 'fr 11/11/2020 16:04:05'!
PASSED!

!testRun: #TransferTest #test01 stamp: 'fr 11/11/2020 16:04:05'!
ERROR!

!testRun: #TransferTest #test02 stamp: 'fr 11/11/2020 16:04:05'!
PASSED!

!testRun: #TransferTest #test03 stamp: 'fr 11/11/2020 16:04:05'!
PASSED!

!testRun: #TransferTest #test01 stamp: 'fr 11/11/2020 16:04:05'!
ERROR!
!WithdrawByTransference methodsFor: 'balance' stamp: 'fr 11/11/2020 16:04:14' overrides: 50868391!
affectBalance: aSmallInteger 
	self shouldBeImplemented.! !
!WithdrawByTransference methodsFor: 'balance' stamp: 'fr 11/11/2020 16:04:30' prior: 50869032 overrides: 50868391!
affectBalance: aBalance
	
	^aBalance - transfer value
	! !
!WithdrawByTransference methodsFor: 'balance' stamp: 'fr 11/11/2020 16:04:38' prior: 50869038 overrides: 50868391!
affectBalance: aBalance
	
	^aBalance - transfer transferValue
	! !

!testRun: #TransferTest #test01 stamp: 'fr 11/11/2020 16:04:40'!
ERROR!
!Transfer methodsFor: 'value' stamp: 'fr 11/11/2020 16:04:50'!
transferValue
	self shouldBeImplemented.! !
!Transfer methodsFor: 'value' stamp: 'fr 11/11/2020 16:04:53' prior: 50869051!
transferValue
	
	^value ! !

!testRun: #TransferTest #test01 stamp: 'fr 11/11/2020 16:04:55'!
ERROR!
!Transfer methodsFor: 'initialization' stamp: 'fr 11/11/2020 16:05:14' prior: 50868824!
initializeMove: transferValue from: aReceptiveAccountToMoveFrom to: aReceptiveAccountToMoveTo 
		
	value _ transferValue.
	withdraw _ WithdrawByTransference register: transferValue on: aReceptiveAccountToMoveFrom for: self.
	deposit _ DepositByTransference register: transferValue on: aReceptiveAccountToMoveTo for: self ! !

!testRun: #TransferTest #test01 stamp: 'fr 11/11/2020 16:05:15'!
ERROR!
!DepositByTransference methodsFor: 'balance' stamp: 'fr 11/11/2020 16:05:22' overrides: 50868391!
affectBalance: aSmallInteger 
	self shouldBeImplemented.! !
!DepositByTransference methodsFor: 'balance' stamp: 'fr 11/11/2020 16:05:35' prior: 50869077 overrides: 50868391!
affectBalance: aBalance

	^aBalance + transfer transferValue 
	
	! !

!testRun: #TransferTest #test01 stamp: 'fr 11/11/2020 16:05:36'!
PASSED!

!testRun: #TransferTest #test03 stamp: 'fr 11/11/2020 16:05:38'!
PASSED!

!testRun: #TransferTest #test01 stamp: 'fr 11/11/2020 16:05:38'!
PASSED!

!testRun: #TransferTest #test02 stamp: 'fr 11/11/2020 16:05:38'!
PASSED!

!testRun: #TransferTest #test03 stamp: 'fr 11/11/2020 16:05:38'!
PASSED!
!TransferTest methodsFor: 'as yet unclassified' stamp: 'fr 11/11/2020 16:06:11'!
test04

	| account anotherAccount transfer |
	
	account _ ReceptiveAccount new.
	anotherAccount _ ReceptiveAccount new.
	
	transfer _ Transfer move: 100 from: account to: anotherAccount.
	
	self assert: [(transfer to isComplementedBy: transfer from) and: [transfer from isComplementedBy: transfer to]]! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'fr 11/11/2020 16:07:00' prior: 50869100!
test04

	| account anotherAccount |
	
	account _ ReceptiveAccount new.
	anotherAccount _ ReceptiveAccount new.
	
	
	
	self  should: [Transfer move: 0 from: account to: anotherAccount] 
		raise:  Error
		withMessageText: Transfer ! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'fr 11/11/2020 16:07:09' prior: 50869113!
test04

	| account anotherAccount |
	
	account _ ReceptiveAccount new.
	anotherAccount _ ReceptiveAccount new.
	
	
	
	self  should: [Transfer move: 0 from: account to: anotherAccount] 
		raise:  Error
		withMessageText: Transfer invalidTransferAmountErrorDescription! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'fr 11/11/2020 16:07:13' prior: 50869124!
test04

	| account anotherAccount |
	
	account _ ReceptiveAccount new.
	anotherAccount _ ReceptiveAccount new.
	
	self  should: [Transfer move: 0 from: account to: anotherAccount] 
		raise:  Error
		withMessageText: Transfer invalidTransferAmountErrorDescription! !

!testRun: #TransferTest #test04 stamp: 'fr 11/11/2020 16:07:14'!
ERROR!
!Transfer class methodsFor: 'error description' stamp: 'fr 11/11/2020 16:07:23'!
invalidTransferAmountErrorDescription
	self shouldBeImplemented.! !
!Transfer class methodsFor: 'error description' stamp: 'fr 11/11/2020 16:07:33' prior: 50869150!
invalidTransferAmountErrorDescription
	
	^'Invalid transfer amount'! !

!testRun: #TransferTest #test04 stamp: 'fr 11/11/2020 16:07:33'!
FAILURE!
!Transfer class methodsFor: 'instance creation' stamp: 'fr 11/11/2020 16:07:59' prior: 50868535!
move: transferValue from: aReceptiveAccountToMoveFrom to: aReceptiveAccountToMoveTo 
	
	transferValue = 0 ifTrue: [self error: self invalidTransferAmountErrorDescription].
	
	^self new initializeMove: transferValue from: aReceptiveAccountToMoveFrom to: aReceptiveAccountToMoveTo ! !

!testRun: #TransferTest #test04 stamp: 'fr 11/11/2020 16:08:00'!
PASSED!

!testRun: #TransferTest #test01 stamp: 'fr 11/11/2020 16:08:00'!
PASSED!

!testRun: #TransferTest #test02 stamp: 'fr 11/11/2020 16:08:00'!
PASSED!

!testRun: #TransferTest #test03 stamp: 'fr 11/11/2020 16:08:00'!
PASSED!

!testRun: #TransferTest #test04 stamp: 'fr 11/11/2020 16:08:00'!
PASSED!
!TransferTest methodsFor: 'as yet unclassified' stamp: 'fr 11/11/2020 16:08:02'!
test05

	| account anotherAccount |
	
	account _ ReceptiveAccount new.
	anotherAccount _ ReceptiveAccount new.
	
	self  should: [Transfer move: 0 from: account to: anotherAccount] 
		raise:  Error
		withMessageText: Transfer invalidTransferAmountErrorDescription! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'fr 11/11/2020 16:08:05' prior: 50869187!
test05

	| account anotherAccount |
	
	account _ ReceptiveAccount new.
	anotherAccount _ ReceptiveAccount new.
	
	self  should: [Transfer move: -1 from: account to: anotherAccount] 
		raise:  Error
		withMessageText: Transfer invalidTransferAmountErrorDescription! !

!testRun: #TransferTest #test05 stamp: 'fr 11/11/2020 16:08:05'!
FAILURE!

!testRun: #TransferTest #test05 stamp: 'fr 11/11/2020 16:08:19'!
FAILURE!
!Transfer class methodsFor: 'instance creation' stamp: 'fr 11/11/2020 16:08:30' prior: 50869164!
move: transferValue from: aReceptiveAccountToMoveFrom to: aReceptiveAccountToMoveTo 
	
	transferValue <= 0 ifTrue: [self error: self invalidTransferAmountErrorDescription].
	
	^self new initializeMove: transferValue from: aReceptiveAccountToMoveFrom to: aReceptiveAccountToMoveTo ! !

!testRun: #TransferTest #test05 stamp: 'fr 11/11/2020 16:08:31'!
PASSED!

!testRun: #TransferTest #test01 stamp: 'fr 11/11/2020 16:08:31'!
PASSED!

!testRun: #TransferTest #test02 stamp: 'fr 11/11/2020 16:08:31'!
PASSED!

!testRun: #TransferTest #test03 stamp: 'fr 11/11/2020 16:08:31'!
PASSED!

!testRun: #TransferTest #test04 stamp: 'fr 11/11/2020 16:08:31'!
PASSED!

!testRun: #TransferTest #test05 stamp: 'fr 11/11/2020 16:08:31'!
PASSED!
!TransferTest methodsFor: 'as yet unclassified' stamp: 'fr 11/11/2020 16:08:33'!
test06

	| account anotherAccount |
	
	account _ ReceptiveAccount new.
	anotherAccount _ ReceptiveAccount new.
	
	self  should: [Transfer move: -1 from: account to: anotherAccount] 
		raise:  Error
		withMessageText: Transfer invalidTransferAmountErrorDescription! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'fr 11/11/2020 16:08:42' prior: 50869242!
test06

	| account |
	
	account _ ReceptiveAccount new.
	
	self  should: [Transfer move: 0 from: account to: account] 
		raise:  Error
		withMessageText: Transfer invalidTransferAmountErrorDescription! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'fr 11/11/2020 16:08:56' prior: 50869254!
test06

	| account |
	
	account _ ReceptiveAccount new.
	
	self  should: [Transfer move: 0 from: account to: account] 
		raise:  Error
		withMessageText: Transfer canNotTransferToItselfErrorDescription! !

!testRun: #TransferTest #test06 stamp: 'fr 11/11/2020 16:08:57'!
ERROR!
!Transfer class methodsFor: 'error description' stamp: 'fr 11/11/2020 16:09:04'!
canNotTransferToItselfErrorDescription
	self shouldBeImplemented.! !
!Transfer class methodsFor: 'error description' stamp: 'fr 11/11/2020 16:09:14' prior: 50869276!
canNotTransferToItselfErrorDescription
	
	^'Can not transfer to itself'! !

!testRun: #TransferTest #test06 stamp: 'fr 11/11/2020 16:09:16'!
FAILURE!
!TransferTest methodsFor: 'as yet unclassified' stamp: 'fr 11/11/2020 16:09:26' prior: 50869264!
test06

	| account |
	
	account _ ReceptiveAccount new.
	
	self  should: [Transfer move: 10 from: account to: account] 
		raise:  Error
		withMessageText: Transfer canNotTransferToItselfErrorDescription! !

!testRun: #TransferTest #test06 stamp: 'fr 11/11/2020 16:09:27'!
FAILURE!
!Transfer class methodsFor: 'instance creation' stamp: 'fr 11/11/2020 16:09:50' prior: 50869216!
move: transferValue from: aReceptiveAccountToMoveFrom to: aReceptiveAccountToMoveTo 
	
	transferValue <= 0 ifTrue: [self error: self invalidTransferAmountErrorDescription].
	aReceptiveAccountToMoveFrom = aReceptiveAccountToMoveTo ifTrue: [self error: self canNotTransferToItselfErrorDescription ].
	
	^self new initializeMove: transferValue from: aReceptiveAccountToMoveFrom to: aReceptiveAccountToMoveTo ! !
!Transfer class methodsFor: 'instance creation' stamp: 'fr 11/11/2020 16:09:51' prior: 50869302!
move: transferValue from: aReceptiveAccountToMoveFrom to: aReceptiveAccountToMoveTo 
	
	transferValue <= 0 ifTrue: [self error: self invalidTransferAmountErrorDescription].
	aReceptiveAccountToMoveFrom = aReceptiveAccountToMoveTo ifTrue: [self error: self canNotTransferToItselfErrorDescription].
	
	^self new initializeMove: transferValue from: aReceptiveAccountToMoveFrom to: aReceptiveAccountToMoveTo ! !

!testRun: #TransferTest #test06 stamp: 'fr 11/11/2020 16:09:51'!
PASSED!

!testRun: #TransferTest #test01 stamp: 'fr 11/11/2020 16:09:51'!
PASSED!

!testRun: #TransferTest #test02 stamp: 'fr 11/11/2020 16:09:51'!
PASSED!

!testRun: #TransferTest #test03 stamp: 'fr 11/11/2020 16:09:51'!
PASSED!

!testRun: #TransferTest #test04 stamp: 'fr 11/11/2020 16:09:51'!
PASSED!

!testRun: #TransferTest #test05 stamp: 'fr 11/11/2020 16:09:51'!
PASSED!

!testRun: #TransferTest #test06 stamp: 'fr 11/11/2020 16:09:51'!
PASSED!

TestCase subclass: #ReportTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #ReportTest category: 'Portfolio-Solucion' stamp: 'fr 11/11/2020 16:10:09'!
TestCase subclass: #ReportTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

AccountTransaction subclass: #TransferTransaction
	instanceVariableNames: 'transfer'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #TransferTransaction category: 'Portfolio-Solucion' stamp: 'fr 11/11/2020 16:10:28'!
AccountTransaction subclass: #TransferTransaction
	instanceVariableNames: 'transfer'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

TransferTransaction subclass: #WithdrawByTransference
	instanceVariableNames: 'transfer'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

AccountTransaction subclass: #TransferTransaction
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #TransferTransaction category: 'Portfolio-Solucion' stamp: 'fr 11/11/2020 16:10:49'!
AccountTransaction subclass: #TransferTransaction
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

TransferTransaction subclass: #WithdrawByTransference
	instanceVariableNames: 'transfer'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #WithdrawByTransference category: 'Portfolio-Solucion' stamp: 'fr 11/11/2020 16:10:52'!
TransferTransaction subclass: #WithdrawByTransference
	instanceVariableNames: 'transfer'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

TransferTransaction subclass: #DepositByTransference
	instanceVariableNames: 'transfer'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #DepositByTransference category: 'Portfolio-Solucion' stamp: 'fr 11/11/2020 16:10:56'!
TransferTransaction subclass: #DepositByTransference
	instanceVariableNames: 'transfer'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!
!TransferTransaction class methodsFor: 'no messages' stamp: 'fr 11/11/2020 16:11:11'!
register: transferAmount on: aReceptiveAccount for: aTransfer 
	
	^(self register: transferAmount on: aReceptiveAccount) forTransfer: aTransfer ! !

!methodRemoval: DepositByTransference class #register:on:for: stamp: 'fr 11/11/2020 16:11:42'!
register: transferAmount on: aReceptiveAccount for: aTransfer 
	
	^(self register: transferAmount on: aReceptiveAccount) forTransfer: aTransfer !

!methodRemoval: WithdrawByTransference class #register:on:for: stamp: 'fr 11/11/2020 16:11:45'!
register: transferAmount on: aReceptiveAccount for: aTransfer 
	
	^(self register: transferAmount on: aReceptiveAccount) forTransfer: aTransfer !

!testRun: #TransferTest #test01 stamp: 'fr 11/11/2020 16:11:47'!
PASSED!

!testRun: #TransferTest #test02 stamp: 'fr 11/11/2020 16:11:47'!
PASSED!

!testRun: #TransferTest #test03 stamp: 'fr 11/11/2020 16:11:47'!
PASSED!

!testRun: #TransferTest #test04 stamp: 'fr 11/11/2020 16:11:47'!
PASSED!

!testRun: #TransferTest #test05 stamp: 'fr 11/11/2020 16:11:47'!
PASSED!

!testRun: #TransferTest #test06 stamp: 'fr 11/11/2020 16:11:47'!
PASSED!
!TransferTransaction methodsFor: 'no messages' stamp: 'fr 11/11/2020 16:12:35'!
isComplementeBy: aTransferTransaction

	self subclassResponsibility ! !
!ReportTest methodsFor: 'nil' stamp: 'fr 11/11/2020 16:14:00'!
test01

	| account |
	
	account _ ReceptiveAccount new.
	
	self assert: [account accountSummary = (OrderedCollection with: 'Balance = 0')]! !

!testRun: #ReportTest #test01 stamp: 'fr 11/11/2020 16:14:02'!
ERROR!
!ReceptiveAccount methodsFor: 'report' stamp: 'fr 11/11/2020 16:14:09'!
accountSummary
	self shouldBeImplemented.! !
!ReceptiveAccount methodsFor: 'report' stamp: 'fr 11/11/2020 16:14:18' prior: 50869472!
accountSummary
	
	^OrderedCollection with: 'Balance = 0'! !

!testRun: #ReportTest #test01 stamp: 'fr 11/11/2020 16:14:19'!
PASSED!

!testRun: #ReportTest #test01 stamp: 'fr 11/11/2020 16:14:19'!
PASSED!
!ReportTest methodsFor: 'as yet unclassified' stamp: 'fr 11/11/2020 16:14:21'!
test02

	| account |
	
	account _ ReceptiveAccount new.
	
	self assert: [account accountSummary = (OrderedCollection with: 'Balance = 0')]! !
!ReportTest methodsFor: 'as yet unclassified' stamp: 'fr 11/11/2020 16:14:55' prior: 50869486!
test02

	| account |
	
	account _ ReceptiveAccount new.
	Deposit register: 100 on: account. 
	
	self assert: [account accountSummary = (OrderedCollection with: 'Dep�sito por 100.' with: 'Balance = 100')]! !

!testRun: #ReportTest #test02 stamp: 'fr 11/11/2020 16:14:55'!
FAILURE!
!ReceptiveAccount methodsFor: 'report' stamp: 'fr 11/11/2020 16:16:15' prior: 50869477!
accountSummary
	
	^transactions ifEmpty: [^OrderedCollection with: 'Balance = 0'] ifNotEmpty: [^OrderedCollection with: 'Dep�sito por 100.' with: 'Balance = 100'] ! !

!testRun: #ReportTest #test02 stamp: 'fr 11/11/2020 16:16:16'!
PASSED!

!testRun: #ReportTest #test01 stamp: 'fr 11/11/2020 16:16:16'!
PASSED!

!testRun: #ReportTest #test02 stamp: 'fr 11/11/2020 16:16:16'!
PASSED!
!ReportTest methodsFor: 'as yet unclassified' stamp: 'fr 11/11/2020 16:16:19'!
test03

	| account |
	
	account _ ReceptiveAccount new.
	Deposit register: 100 on: account. 
	
	self assert: [account accountSummary = (OrderedCollection with: 'Dep�sito por 100.' with: 'Balance = 100')]! !
!ReportTest methodsFor: 'as yet unclassified' stamp: 'fr 11/11/2020 16:16:25' prior: 50869521!
test03

	| account |
	
	account _ ReceptiveAccount new.
	Withdraw register: 100 on: account. 
	
	self assert: [account accountSummary = (OrderedCollection with: 'Dep�sito por 100.' with: 'Balance = 100')]! !
!ReportTest methodsFor: 'as yet unclassified' stamp: 'fr 11/11/2020 16:16:33' prior: 50869531!
test03

	| account |
	
	account _ ReceptiveAccount new.
	Withdraw register: 100 on: account. 
	
	self assert: [account accountSummary = (OrderedCollection with: 'Extracci�n por 100.' with: 'Balance = -100')]! !

!testRun: #ReportTest #test03 stamp: 'fr 11/11/2020 16:16:34'!
FAILURE!
!ReceptiveAccount methodsFor: 'report' stamp: 'fr 11/11/2020 16:17:32' prior: 50869506!
accountSummary
	
	| report |
	report _ OrderedCollection new.
	
	^transactions 
		ifEmpty: [report add: 'Balance = 0'] 
		ifNotEmpty: [
			transactions do: [
				
			]	
		] ! !
!ReceptiveAccount methodsFor: 'report' stamp: 'fr 11/11/2020 16:20:48' prior: 50869553!
accountSummary
	
	| report |
	report _ OrderedCollection new.
	
	^transactions 
		ifEmpty: [report add: 'Balance = 0'] 
		ifNotEmpty: [
			transactions do: [:aTransaction |
				(aTransaction isMemberOf: Deposit) ifTrue: [report add: 'Dep�sito por ',aTransaction value asString].
				(aTransaction isMemberOf: Withdraw) ifTrue: [report add: 'Extracci�n por ',aTransaction value asString].
			]	
		] ! !

!testRun: #ReportTest #test03 stamp: 'fr 11/11/2020 16:20:49'!
FAILURE!

account accountSummary!
!ReceptiveAccount methodsFor: 'report' stamp: 'fr 11/11/2020 16:21:37' prior: 50869562!
accountSummary
	
	| report |
	report _ OrderedCollection new.
	
	^transactions 
		ifEmpty: [report add: 'Balance = 0'] 
		ifNotEmpty: [
			transactions do: [:aTransaction |
				(aTransaction isMemberOf: Deposit) ifTrue: [report add: 'Dep�sito por ',aTransaction value asString].
				(aTransaction isMemberOf: Withdraw) ifTrue: [report add: 'Extracci�n por ',aTransaction value asString].
			].
		report add: 'Balance = ',self balance asString.
		] ! !
!ReceptiveAccount methodsFor: 'report' stamp: 'fr 11/11/2020 16:21:38' prior: 50869581!
accountSummary
	
	| report |
	report _ OrderedCollection new.
	
	^transactions 
		ifEmpty: [report add: 'Balance = 0'] 
		ifNotEmpty: [
			transactions do: [:aTransaction |
				(aTransaction isMemberOf: Deposit) ifTrue: [report add: 'Dep�sito por ',aTransaction value asString].
				(aTransaction isMemberOf: Withdraw) ifTrue: [report add: 'Extracci�n por ',aTransaction value asString].
			].
		report add: 'Balance = ',self balance asString
		] ! !
!ReceptiveAccount methodsFor: 'report' stamp: 'fr 11/11/2020 16:22:17' prior: 50869598!
accountSummary
	
	| report |
	report _ OrderedCollection new.
	
	^transactions 
		ifEmpty: [report add: 'Balance = 0'] 
		ifNotEmpty: [
			transactions do: [:aTransaction |
				(aTransaction isMemberOf: Deposit) ifTrue: [report add: 'Dep�sito por ',aTransaction value asString].
				(aTransaction isMemberOf: Withdraw) ifTrue: [report add: 'Extracci�n por ',aTransaction value asString].
			].
		report add: 'Balance = ',self balance asString
		].! !
!ReceptiveAccount methodsFor: 'report' stamp: 'fr 11/11/2020 16:23:14' prior: 50869615!
accountSummary
	
	| report |
	report _ OrderedCollection new.
	
	transactions 
		ifEmpty: [report add: 'Balance = 0'] 
		ifNotEmpty: [
			transactions do: [:aTransaction |
				(aTransaction isMemberOf: Deposit) ifTrue: [report add: 'Dep�sito por ',aTransaction value asString].
				(aTransaction isMemberOf: Withdraw) ifTrue: [report add: 'Extracci�n por ',aTransaction value asString].
			].
		report add: 'Balance = ',self balance asString.
		].
	^report ! !

!testRun: #ReportTest #test03 stamp: 'fr 11/11/2020 16:23:20'!
FAILURE!

account accountSummary!
!ReceptiveAccount methodsFor: 'report' stamp: 'fr 11/11/2020 16:23:51' prior: 50869632!
accountSummary
	
	| report |
	report _ OrderedCollection new.
	
	transactions 
		ifEmpty: [report add: 'Balance = 0'] 
		ifNotEmpty: [
			transactions do: [:aTransaction |
				(aTransaction isMemberOf: Deposit) ifTrue: [report add: 'Dep�sito por ',aTransaction value asString,'.'].
				(aTransaction isMemberOf: Withdraw) ifTrue: [report add: 'Extracci�n por ',aTransaction value asString,'.'].
			].
		report add: 'Balance = ',self balance asString.
		].
	^report ! !

!testRun: #ReportTest #test03 stamp: 'fr 11/11/2020 16:23:52'!
PASSED!

!testRun: #ReportTest #test01 stamp: 'fr 11/11/2020 16:23:52'!
PASSED!

!testRun: #ReportTest #test02 stamp: 'fr 11/11/2020 16:23:52'!
PASSED!

!testRun: #ReportTest #test03 stamp: 'fr 11/11/2020 16:23:52'!
PASSED!
!ReportTest methodsFor: 'as yet unclassified' stamp: 'fr 11/11/2020 16:24:02'!
test04

	| account |
	
	account _ ReceptiveAccount new.
	Withdraw register: 100 on: account. 
	
	self assert: [account accountSummary = (OrderedCollection with: 'Extracci�n por 100.' with: 'Balance = -100')]! !
!ReportTest methodsFor: 'as yet unclassified' stamp: 'fr 11/11/2020 16:25:40' prior: 50869680!
test04

	| account anotherAccount |
	
	account _ ReceptiveAccount new.
	anotherAccount _ ReceptiveAccount new.
	
	Transfer move: 100 from: account to: anotherAccount.
	
	self assert: [account accountSummary = (OrderedCollection with: 'Salida por transferencia de 100.' with: 'Balance = -100')]! !

!testRun: #ReportTest #test04 stamp: 'fr 11/11/2020 16:25:42'!
FAILURE!
!ReceptiveAccount methodsFor: 'report' stamp: 'fr 11/11/2020 16:26:44' prior: 50869653!
accountSummary
	
	| report |
	report _ OrderedCollection new.
	
	transactions 
		ifEmpty: [report add: 'Balance = 0'] 
		ifNotEmpty: [
			transactions do: [:aTransaction |
				(aTransaction isMemberOf: Deposit) ifTrue: [report add: 'Dep�sito por ',aTransaction value asString,'.'].
				(aTransaction isMemberOf: Withdraw) ifTrue: [report add: 'Extracci�n por ',aTransaction value asString,'.'].
				(aTransaction isMemberOf: WithdrawByTransference) ifTrue: [report add: 'Salida por transferencia de ',aTransaction value asString,'.'].

			].
		report add: 'Balance = ',self balance asString.
		].
	^report ! !

!testRun: #ReportTest #test04 stamp: 'fr 11/11/2020 16:26:46'!
ERROR!
!WithdrawByTransference methodsFor: 'as yet unclassified' stamp: 'fr 11/11/2020 16:27:02' overrides: 50868387!
value
	self shouldBeImplemented.! !

!methodRemoval: WithdrawByTransference #value stamp: 'fr 11/11/2020 16:27:23'!
value
	self shouldBeImplemented.!

!testRun: #TransferTest #test01 stamp: 'fr 11/11/2020 16:27:29'!
PASSED!

!testRun: #ReportTest #test04 stamp: 'fr 11/11/2020 16:28:06'!
ERROR!

!testRun: #ReportTest #test04 stamp: 'fr 11/11/2020 16:28:06'!
ERROR!
!WithdrawByTransference methodsFor: 'value' stamp: 'fr 11/11/2020 16:28:13' overrides: 50868387!
value
	self shouldBeImplemented.! !
!WithdrawByTransference methodsFor: 'value' stamp: 'fr 11/11/2020 16:28:19' prior: 50869745 overrides: 50868387!
value
	
	^transfer value! !

!testRun: #ReportTest #test04 stamp: 'fr 11/11/2020 16:28:20'!
FAILURE!

account accountSummary!
!WithdrawByTransference methodsFor: 'value' stamp: 'fr 11/11/2020 16:29:16' prior: 50869750 overrides: 50868387!
value
	
	^transfer transferValue ! !

!testRun: #ReportTest #test04 stamp: 'fr 11/11/2020 16:29:17'!
PASSED!

!testRun: #ReportTest #test04 stamp: 'fr 11/11/2020 16:29:19'!
PASSED!

!testRun: #ReportTest #test01 stamp: 'fr 11/11/2020 16:29:19'!
PASSED!

!testRun: #ReportTest #test02 stamp: 'fr 11/11/2020 16:29:19'!
PASSED!

!testRun: #ReportTest #test03 stamp: 'fr 11/11/2020 16:29:19'!
PASSED!

!testRun: #ReportTest #test04 stamp: 'fr 11/11/2020 16:29:19'!
PASSED!
!ReportTest methodsFor: 'as yet unclassified' stamp: 'fr 11/11/2020 16:31:10'!
test05

	| account anotherAccount |
	
	account _ ReceptiveAccount new.
	anotherAccount _ ReceptiveAccount new.
	
	Transfer move: 100 from: account to: anotherAccount.
	
	self assert: [account accountSummary = (OrderedCollection with: 'Salida por transferencia de 100.' with: 'Balance = -100')]! !
!ReportTest methodsFor: 'as yet unclassified' stamp: 'fr 11/11/2020 16:31:19' prior: 50869776!
test05

	| account anotherAccount |
	
	account _ ReceptiveAccount new.
	anotherAccount _ ReceptiveAccount new.
	
	Transfer move: 100 from: anotherAccount to: account .
	
	self assert: [account accountSummary = (OrderedCollection with: 'Salida por transferencia de 100.' with: 'Balance = -100')]! !
!ReportTest methodsFor: 'as yet unclassified' stamp: 'fr 11/11/2020 16:31:20' prior: 50869789!
test05

	| account anotherAccount |
	
	account _ ReceptiveAccount new.
	anotherAccount _ ReceptiveAccount new.
	
	Transfer move: 100 from: anotherAccount to: account.
	
	self assert: [account accountSummary = (OrderedCollection with: 'Salida por transferencia de 100.' with: 'Balance = -100')]! !
!ReportTest methodsFor: 'as yet unclassified' stamp: 'fr 11/11/2020 16:31:25' prior: 50869802!
test05

	| account anotherAccount |
	
	account _ ReceptiveAccount new.
	anotherAccount _ ReceptiveAccount new.
	
	Transfer move: 100 from: anotherAccount to: account.
	
	self assert: [account accountSummary = (OrderedCollection with: 'Entrada por transferencia de 100.' with: 'Balance = 100')]! !

!testRun: #ReportTest #test05 stamp: 'fr 11/11/2020 16:31:25'!
FAILURE!
!ReceptiveAccount methodsFor: 'report' stamp: 'fr 11/11/2020 16:32:30' prior: 50869705!
accountSummary
	
	| report |
	report _ OrderedCollection new.
	
	transactions 
		ifEmpty: [report add: 'Balance = 0'] 
		ifNotEmpty: [
			transactions do: [:aTransaction |
				(aTransaction isMemberOf: Deposit) ifTrue: [report add: 'Dep�sito por ',aTransaction value asString,'.'].
				(aTransaction isMemberOf: Withdraw) ifTrue: [report add: 'Extracci�n por ',aTransaction value asString,'.'].
				(aTransaction isMemberOf: WithdrawByTransference) ifTrue: [report add: 'Salida por transferencia de ',aTransaction value asString,'.'].
				(aTransaction isMemberOf: DepositByTransference) ifTrue: [report add: 'Salida por transferencia de ',aTransaction value asString,'.'].

			].
		report add: 'Balance = ',self balance asString.
		].
	^report ! !
!ReceptiveAccount methodsFor: 'report' stamp: 'fr 11/11/2020 16:32:33' prior: 50869830!
accountSummary
	
	| report |
	report _ OrderedCollection new.
	
	transactions 
		ifEmpty: [report add: 'Balance = 0'] 
		ifNotEmpty: [
			transactions do: [:aTransaction |
				(aTransaction isMemberOf: Deposit) ifTrue: [report add: 'Dep�sito por ',aTransaction value asString,'.'].
				(aTransaction isMemberOf: Withdraw) ifTrue: [report add: 'Extracci�n por ',aTransaction value asString,'.'].
				(aTransaction isMemberOf: WithdrawByTransference) ifTrue: [report add: 'Salida por transferencia de ',aTransaction value asString,'.'].
				(aTransaction isMemberOf: DepositByTransference) ifTrue: [report add: 'Entrada por transferencia de ',aTransaction value asString,'.'].

			].
		report add: 'Balance = ',self balance asString.
		].
	^report ! !

!testRun: #ReportTest #test05 stamp: 'fr 11/11/2020 16:32:35'!
ERROR!
!DepositByTransference methodsFor: 'value' stamp: 'fr 11/11/2020 16:32:42' overrides: 50868387!
value
	self shouldBeImplemented.! !
!DepositByTransference methodsFor: 'value' stamp: 'fr 11/11/2020 16:32:51' prior: 50869886 overrides: 50868387!
value
	
	^transfer transferValue ! !

!testRun: #ReportTest #test05 stamp: 'fr 11/11/2020 16:32:52'!
PASSED!

!testRun: #ReportTest #test01 stamp: 'fr 11/11/2020 16:32:52'!
PASSED!

!testRun: #ReportTest #test02 stamp: 'fr 11/11/2020 16:32:52'!
PASSED!

!testRun: #ReportTest #test03 stamp: 'fr 11/11/2020 16:32:52'!
PASSED!

!testRun: #ReportTest #test04 stamp: 'fr 11/11/2020 16:32:52'!
PASSED!

!testRun: #ReportTest #test05 stamp: 'fr 11/11/2020 16:32:52'!
PASSED!
!ReceptiveAccount methodsFor: 'report' stamp: 'fr 11/11/2020 16:33:44' prior: 50869857!
accountSummary
	
	| report |
	report _ OrderedCollection new.
	
	transactions do: [:aTransaction |
		(aTransaction isMemberOf: Deposit) ifTrue: [report add: 'Dep�sito por ',aTransaction value asString,'.'].
		(aTransaction isMemberOf: Withdraw) ifTrue: [report add: 'Extracci�n por ',aTransaction value asString,'.'].
		(aTransaction isMemberOf: WithdrawByTransference) ifTrue: [report add: 'Salida por transferencia de ',aTransaction value asString,'.'].
		(aTransaction isMemberOf: DepositByTransference) ifTrue: [report add: 'Entrada por transferencia de ',aTransaction value asString,'.'].
		].
	report add: 'Balance = ',self balance asString.

	^report ! !

!testRun: #ReportTest #test01 stamp: 'fr 11/11/2020 16:33:46'!
PASSED!

!testRun: #ReportTest #test02 stamp: 'fr 11/11/2020 16:33:46'!
PASSED!

!testRun: #ReportTest #test03 stamp: 'fr 11/11/2020 16:33:46'!
PASSED!

!testRun: #ReportTest #test04 stamp: 'fr 11/11/2020 16:33:46'!
PASSED!

!testRun: #ReportTest #test05 stamp: 'fr 11/11/2020 16:33:46'!
PASSED!
!ReportTest methodsFor: 'as yet unclassified' stamp: 'fr 11/11/2020 16:34:15'!
test06

	| account |
	
	account _ ReceptiveAccount new.
	
	self assert: [account accountSummary = (OrderedCollection with: 'Balance = 0')]! !
!ReportTest methodsFor: 'as yet unclassified' stamp: 'fr 11/11/2020 16:34:24' prior: 50869944!
test06

	| account |
	
	account _ Portfolio new.
	
	self assert: [account accountSummary = (OrderedCollection with: 'Balance = 0')]! !
!ReportTest methodsFor: 'as yet unclassified' stamp: 'fr 11/11/2020 16:34:27' prior: 50869952!
test06

	| portfolio |
	
	portfolio _ Portfolio new.
	
	self assert: [portfolio accountSummary = (OrderedCollection with: 'Balance = 0')]! !

!testRun: #ReportTest #test06 stamp: 'fr 11/11/2020 16:35:04'!
ERROR!

!testRun: #ReportTest #test06 stamp: 'fr 11/11/2020 16:37:01'!
ERROR!
!Portfolio methodsFor: 'report' stamp: 'fr 11/11/2020 16:37:07'!
accountSummary
	self shouldBeImplemented.! !
!Portfolio methodsFor: 'report' stamp: 'fr 11/11/2020 16:37:14' prior: 50869971!
accountSummary
	
	^'Balance = 0'! !

!testRun: #ReportTest #test06 stamp: 'fr 11/11/2020 16:37:15'!
FAILURE!

!testRun: #ReportTest #test06 stamp: 'fr 11/11/2020 16:37:22'!
FAILURE!
!Portfolio methodsFor: 'report' stamp: 'fr 11/11/2020 16:37:43' prior: 50869975!
accountSummary
	
	^OrderedCollection with: 'Balance = 0'! !

!testRun: #ReportTest #test06 stamp: 'fr 11/11/2020 16:37:43'!
PASSED!

!testRun: #ReportTest #test01 stamp: 'fr 11/11/2020 16:37:43'!
PASSED!

!testRun: #ReportTest #test02 stamp: 'fr 11/11/2020 16:37:43'!
PASSED!

!testRun: #ReportTest #test03 stamp: 'fr 11/11/2020 16:37:43'!
PASSED!

!testRun: #ReportTest #test04 stamp: 'fr 11/11/2020 16:37:43'!
PASSED!

!testRun: #ReportTest #test05 stamp: 'fr 11/11/2020 16:37:43'!
PASSED!

!testRun: #ReportTest #test06 stamp: 'fr 11/11/2020 16:37:43'!
PASSED!
!ReportTest methodsFor: 'as yet unclassified' stamp: 'fr 11/11/2020 16:37:53'!
test07

	| portfolio |
	
	portfolio _ Portfolio new.
	
	self assert: [portfolio accountSummary = (OrderedCollection with: 'Balance = 0')]! !
!ReportTest methodsFor: 'as yet unclassified' stamp: 'fr 11/11/2020 16:38:11' prior: 50870005!
test07

	| portfolio account |
	
	portfolio _ Portfolio new.
	account _ ReceptiveAccount new.
	
	self assert: [portfolio accountSummary = (OrderedCollection with: 'Balance = 0')]! !
!ReportTest methodsFor: 'as yet unclassified' stamp: 'fr 11/11/2020 16:39:00' prior: 50870013!
test07

	| portfolio account |
	
	portfolio _ Portfolio new.
	account _ ReceptiveAccount new.
	Deposit register: 100 on: account.
	
	portfolio add: account.
		
	self assert: [portfolio accountSummary = (OrderedCollection with: 'Balance = 0')]! !
!ReportTest methodsFor: 'as yet unclassified' stamp: 'fr 11/11/2020 16:49:51' prior: 50870022!
test07

	| portfolio account |
	
	portfolio _ Portfolio new.
	account _ ReceptiveAccount new.
	Deposit register: 100 on: account.
	
	portfolio add: account.
		
	self assert: [portfolio accountSummary = (OrderedCollection with: 'Dep�sito por 100.' with: 'Balance = 100')]! !

!testRun: #ReportTest #test07 stamp: 'fr 11/11/2020 16:50:04'!
FAILURE!
!Portfolio methodsFor: 'report' stamp: 'fr 11/11/2020 16:54:07' prior: 50869984!
accountSummary
	
	| report |
	report _ OrderedCollection new.
	accounts do: [:anAccount |
		(anAccount  isMemberOf: ReceptiveAccount) ifTrue: [
			anAccount transactions do: [:aTransaction |
				(aTransaction isMemberOf: Deposit) ifTrue: [report add: 'Dep�sito por ',aTransaction value asString,'.'].
			]
		]
	].
	report add: 'Balance = ',self balance asString.
	^report! !

!testRun: #ReportTest #test07 stamp: 'fr 11/11/2020 16:54:11'!
PASSED!

!testRun: #ReportTest #test01 stamp: 'fr 11/11/2020 16:54:11'!
PASSED!

!testRun: #ReportTest #test02 stamp: 'fr 11/11/2020 16:54:11'!
PASSED!

!testRun: #ReportTest #test03 stamp: 'fr 11/11/2020 16:54:11'!
PASSED!

!testRun: #ReportTest #test04 stamp: 'fr 11/11/2020 16:54:11'!
PASSED!

!testRun: #ReportTest #test05 stamp: 'fr 11/11/2020 16:54:11'!
PASSED!

!testRun: #ReportTest #test06 stamp: 'fr 11/11/2020 16:54:11'!
PASSED!

!testRun: #ReportTest #test07 stamp: 'fr 11/11/2020 16:54:11'!
PASSED!
!ReportTest methodsFor: 'as yet unclassified' stamp: 'fr 11/11/2020 16:54:26'!
test08

	| portfolio account |
	
	portfolio _ Portfolio new.
	account _ ReceptiveAccount new.
	Deposit register: 100 on: account.
	
	portfolio add: account.
		
	self assert: [portfolio accountSummary = (OrderedCollection with: 'Dep�sito por 100.' with: 'Balance = 100')]! !
!ReportTest methodsFor: 'as yet unclassified' stamp: 'fr 11/11/2020 16:54:37' prior: 50870080!
test08

	| portfolio account |
	
	portfolio _ Portfolio new.
	account _ ReceptiveAccount new.
	Withdraw register: 100 on: account.
	
	portfolio add: account.
		
	self assert: [portfolio accountSummary = (OrderedCollection with: 'Extracci�n por 100.' with: 'Balance = -100')]! !

!testRun: #ReportTest #test08 stamp: 'fr 11/11/2020 16:54:38'!
FAILURE!

!testRun: #ReportTest #test08 stamp: 'fr 11/11/2020 16:54:45'!
FAILURE!
!Portfolio methodsFor: 'report' stamp: 'fr 11/11/2020 16:55:04' prior: 50870047!
accountSummary
	
	| report |
	report _ OrderedCollection new.
	accounts do: [:anAccount |
		(anAccount  isMemberOf: ReceptiveAccount) ifTrue: [
			anAccount transactions do: [:aTransaction |
				(aTransaction isMemberOf: Deposit) ifTrue: [report add: 'Dep�sito por ',aTransaction value asString,'.'].
				(aTransaction isMemberOf: Withdraw) ifTrue: [report add: 'Extracci�n por ',aTransaction value asString,'.'].
			]
		]
	].
	report add: 'Balance = ',self balance asString.
	^report! !

!testRun: #ReportTest #test08 stamp: 'fr 11/11/2020 16:55:05'!
PASSED!

!testRun: #ReportTest #test01 stamp: 'fr 11/11/2020 16:55:05'!
PASSED!

!testRun: #ReportTest #test02 stamp: 'fr 11/11/2020 16:55:05'!
PASSED!

!testRun: #ReportTest #test03 stamp: 'fr 11/11/2020 16:55:05'!
PASSED!

!testRun: #ReportTest #test04 stamp: 'fr 11/11/2020 16:55:05'!
PASSED!

!testRun: #ReportTest #test05 stamp: 'fr 11/11/2020 16:55:05'!
PASSED!

!testRun: #ReportTest #test06 stamp: 'fr 11/11/2020 16:55:05'!
PASSED!

!testRun: #ReportTest #test07 stamp: 'fr 11/11/2020 16:55:05'!
PASSED!

!testRun: #ReportTest #test08 stamp: 'fr 11/11/2020 16:55:05'!
PASSED!

!testRun: #ReportTest #test08 stamp: 'fr 11/11/2020 16:55:20'!
PASSED!

!testRun: #ReportTest #test01 stamp: 'fr 11/11/2020 16:55:20'!
PASSED!

!testRun: #ReportTest #test02 stamp: 'fr 11/11/2020 16:55:20'!
PASSED!

!testRun: #ReportTest #test03 stamp: 'fr 11/11/2020 16:55:20'!
PASSED!

!testRun: #ReportTest #test04 stamp: 'fr 11/11/2020 16:55:20'!
PASSED!

!testRun: #ReportTest #test05 stamp: 'fr 11/11/2020 16:55:20'!
PASSED!

!testRun: #ReportTest #test06 stamp: 'fr 11/11/2020 16:55:20'!
PASSED!

!testRun: #ReportTest #test07 stamp: 'fr 11/11/2020 16:55:20'!
PASSED!

!testRun: #ReportTest #test08 stamp: 'fr 11/11/2020 16:55:20'!
PASSED!

!testRun: #ReportTest #test08 stamp: 'fr 11/11/2020 16:55:49'!
PASSED!

!testRun: #ReportTest #test01 stamp: 'fr 11/11/2020 16:55:49'!
PASSED!

!testRun: #ReportTest #test02 stamp: 'fr 11/11/2020 16:55:49'!
PASSED!

!testRun: #ReportTest #test03 stamp: 'fr 11/11/2020 16:55:49'!
PASSED!

!testRun: #ReportTest #test04 stamp: 'fr 11/11/2020 16:55:49'!
PASSED!

!testRun: #ReportTest #test05 stamp: 'fr 11/11/2020 16:55:49'!
PASSED!

!testRun: #ReportTest #test06 stamp: 'fr 11/11/2020 16:55:49'!
PASSED!

!testRun: #ReportTest #test07 stamp: 'fr 11/11/2020 16:55:49'!
PASSED!

!testRun: #ReportTest #test08 stamp: 'fr 11/11/2020 16:55:49'!
PASSED!
!ReportTest methodsFor: 'as yet unclassified' stamp: 'fr 11/11/2020 16:55:55'!
test09

	| portfolio account |
	
	portfolio _ Portfolio new.
	account _ ReceptiveAccount new.
	Withdraw register: 100 on: account.
	
	portfolio add: account.
		
	self assert: [portfolio accountSummary = (OrderedCollection with: 'Extracci�n por 100.' with: 'Balance = -100')]! !
!ReportTest methodsFor: 'as yet unclassified' stamp: 'fr 11/11/2020 17:08:41' prior: 50870187!
test09

	| portfolio account anotherAccount |
	
	portfolio _ Portfolio new.
	account _ ReceptiveAccount new.
	anotherAccount _ ReceptiveAccount new.

	Transfer move: 100 from: account to: anotherAccount.
		
	portfolio add: account.
		
	self assert: [portfolio accountSummary = (OrderedCollection with: 'Extracci�n por 100.' with: 'Balance = -100')]! !
!ReportTest methodsFor: 'as yet unclassified' stamp: 'fr 11/11/2020 17:08:52' prior: 50870199!
test09

	| portfolio account anotherAccount |
	
	portfolio _ Portfolio new.
	account _ ReceptiveAccount new.
	anotherAccount _ ReceptiveAccount new.

	Transfer move: 100 from: account to: anotherAccount.
	Transfer move: 100 from: anotherAccount to: account.
		
	portfolio add: account.
		
	self assert: [portfolio accountSummary = (OrderedCollection with: 'Extracci�n por 100.' with: 'Balance = -100')]! !
!ReportTest methodsFor: 'as yet unclassified' stamp: 'fr 11/11/2020 17:09:19' prior: 50870213!
test09

	| portfolio account anotherAccount |
	
	portfolio _ Portfolio new.
	account _ ReceptiveAccount new.
	anotherAccount _ ReceptiveAccount new.

	Transfer move: 10 from: account to: anotherAccount.
	Transfer move: 20 from: anotherAccount to: account.
		
	portfolio add: account.
		
	self assert: [portfolio accountSummary = (OrderedCollection with: 'Extracci�n por 100.' with: 'Balance = -100')]! !
!ReportTest methodsFor: 'as yet unclassified' stamp: 'fr 11/11/2020 17:09:55' prior: 50870229!
test09

	| portfolio account anotherAccount |
	
	portfolio _ Portfolio new.
	account _ ReceptiveAccount new.
	anotherAccount _ ReceptiveAccount new.

	Transfer move: 10 from: account to: anotherAccount.
	Transfer move: 20 from: anotherAccount to: account.
		
	portfolio add: account.
		
	self assert: [portfolio accountSummary = (OrderedCollection with: 'Salida por transferencia de 10.' with: 'Entrada por transferencia de 20.' with: 'Balance = 10')]! !

!testRun: #ReportTest #test09 stamp: 'fr 11/11/2020 17:09:56'!
FAILURE!
!Portfolio methodsFor: 'report' stamp: 'fr 11/11/2020 17:10:47' prior: 50870108!
accountSummary
	
	| report |
	report _ OrderedCollection new.
	accounts do: [:anAccount |
		(anAccount  isMemberOf: ReceptiveAccount) ifTrue: [
			anAccount transactions do: [:aTransaction |
				(aTransaction isMemberOf: Deposit) ifTrue: [report add: 'Dep�sito por ',aTransaction value asString,'.'].
				(aTransaction isMemberOf: Withdraw) ifTrue: [report add: 'Extracci�n por ',aTransaction value asString,'.'].
				(aTransaction isMemberOf: DepositByTransference) ifTrue: [report add: 'Entrada por transferencia de ',aTransaction value asString,'.'].
				(aTransaction isMemberOf: WithdrawByTransference) ifTrue: [report add: 'Salida por transferencia de ',aTransaction value asString,'.'].
			]
		]
	].
	report add: 'Balance = ',self balance asString.
	^report! !

!testRun: #ReportTest #test09 stamp: 'fr 11/11/2020 17:10:49'!
PASSED!

!testRun: #ReportTest #test01 stamp: 'fr 11/11/2020 17:10:49'!
PASSED!

!testRun: #ReportTest #test02 stamp: 'fr 11/11/2020 17:10:49'!
PASSED!

!testRun: #ReportTest #test03 stamp: 'fr 11/11/2020 17:10:49'!
PASSED!

!testRun: #ReportTest #test04 stamp: 'fr 11/11/2020 17:10:49'!
PASSED!

!testRun: #ReportTest #test05 stamp: 'fr 11/11/2020 17:10:49'!
PASSED!

!testRun: #ReportTest #test06 stamp: 'fr 11/11/2020 17:10:49'!
PASSED!

!testRun: #ReportTest #test07 stamp: 'fr 11/11/2020 17:10:49'!
PASSED!

!testRun: #ReportTest #test08 stamp: 'fr 11/11/2020 17:10:49'!
PASSED!

!testRun: #ReportTest #test09 stamp: 'fr 11/11/2020 17:10:49'!
PASSED!
!ReportTest methodsFor: 'as yet unclassified' stamp: 'fr 11/11/2020 17:10:54'!
test10

	| portfolio account anotherAccount |
	
	portfolio _ Portfolio new.
	account _ ReceptiveAccount new.
	anotherAccount _ ReceptiveAccount new.

	Transfer move: 10 from: account to: anotherAccount.
	Transfer move: 20 from: anotherAccount to: account.
		
	portfolio add: account.
		
	self assert: [portfolio accountSummary = (OrderedCollection with: 'Salida por transferencia de 10.' with: 'Entrada por transferencia de 20.' with: 'Balance = 10')]! !
!ReportTest methodsFor: 'as yet unclassified' stamp: 'fr 11/11/2020 17:11:44' prior: 50870314!
test10

	| portfolio account anotherAccount anotherPortfolio |
	
	portfolio _ Portfolio new.
	anotherPortfolio _ Portfolio new.
	account _ ReceptiveAccount new.
	anotherAccount _ ReceptiveAccount new.

	Transfer move: 10 from: account to: anotherAccount.
	Transfer move: 20 from: anotherAccount to: account.
		
	portfolio add: account.
		
	self assert: [portfolio accountSummary = (OrderedCollection with: 'Salida por transferencia de 10.' with: 'Entrada por transferencia de 20.' with: 'Balance = 10')]! !
!ReportTest methodsFor: 'as yet unclassified' stamp: 'fr 11/11/2020 17:13:43' prior: 50870332!
test10

	| portfolio account anotherAccount anotherPortfolio |
	
	account _ ReceptiveAccount new.
	anotherAccount _ ReceptiveAccount new.

	Deposit register: 100 on: account.
		
	portfolio _ Portfolio with: (OrderedCollection with: account).
	anotherPortfolio _ Portfolio with: (OrderedCollection with: portfolio with: anotherAccount).
	
		
	self assert: [portfolio accountSummary = (OrderedCollection with: 'Salida por transferencia de 10.' with: 'Entrada por transferencia de 20.' with: 'Balance = 10')]! !
!ReportTest methodsFor: 'as yet unclassified' stamp: 'fr 11/11/2020 17:14:31' prior: 50870351!
test10

	| portfolio account anotherAccount anotherPortfolio |
	
	account _ ReceptiveAccount new.

	Deposit register: 100 on: account.
		
	portfolio _ Portfolio with: (OrderedCollection with: account).
	anotherPortfolio _ Portfolio with: (OrderedCollection with: portfolio).
	
		
	self assert: [anotherPortfolio accountSummary = (OrderedCollection with: 'Dep�sito por 10.' with: 'Balance = 10')]! !
!ReportTest methodsFor: 'as yet unclassified' stamp: 'fr 11/11/2020 17:14:39' prior: 50870370!
test10

	| portfolio account anotherPortfolio |
	
	account _ ReceptiveAccount new.

	Deposit register: 100 on: account.
		
	portfolio _ Portfolio with: (OrderedCollection with: account).
	anotherPortfolio _ Portfolio with: (OrderedCollection with: portfolio).
	
		
	self assert: [anotherPortfolio accountSummary = (OrderedCollection with: 'Dep�sito por 10.' with: 'Balance = 10')]! !
!ReportTest methodsFor: 'as yet unclassified' stamp: 'fr 11/11/2020 17:14:54' prior: 50870386!
test10

	| portfolio account anotherPortfolio |
	
	account _ ReceptiveAccount new.		
	portfolio _ Portfolio with: (OrderedCollection with: account).
	anotherPortfolio _ Portfolio with: (OrderedCollection with: portfolio).
	Deposit register: 100 on: account.

		
	self assert: [anotherPortfolio accountSummary = (OrderedCollection with: 'Dep�sito por 10.' with: 'Balance = 10')]! !
!ReportTest methodsFor: 'as yet unclassified' stamp: 'fr 11/11/2020 17:14:55' prior: 50870401!
test10

	| portfolio account anotherPortfolio |
	
	account _ ReceptiveAccount new.		
	portfolio _ Portfolio with: (OrderedCollection with: account).
	anotherPortfolio _ Portfolio with: (OrderedCollection with: portfolio).

	Deposit register: 100 on: account.

		
	self assert: [anotherPortfolio accountSummary = (OrderedCollection with: 'Dep�sito por 10.' with: 'Balance = 10')]! !
!ReportTest methodsFor: 'as yet unclassified' stamp: 'fr 11/11/2020 17:15:02' prior: 50870416!
test10

	| portfolio account anotherPortfolio |
	
	account _ ReceptiveAccount new.		
	portfolio _ Portfolio with: (OrderedCollection with: account).
	anotherPortfolio _ Portfolio with: (OrderedCollection with: portfolio).

	Deposit register: 100 on: account.

		
	self assert: [anotherPortfolio accountSummary = (OrderedCollection with: 'Dep�sito por 100.' with: 'Balance = 100')]! !

!testRun: #ReportTest #test10 stamp: 'fr 11/11/2020 17:15:03'!
ERROR!

!testRun: #ReportTest #test10 stamp: 'fr 11/11/2020 17:15:22'!
ERROR!
!ReportTest methodsFor: 'as yet unclassified' stamp: 'fr 11/11/2020 17:16:03' prior: 50870431!
test10

	| portfolio account anotherPortfolio |
	
	account _ ReceptiveAccount new.		
	portfolio _ Portfolio with: account.
	anotherPortfolio _ Portfolio with: portfolio.

	Deposit register: 100 on: account.

		
	self assert: [anotherPortfolio accountSummary = (OrderedCollection with: 'Dep�sito por 100.' with: 'Balance = 100')]! !

!testRun: #ReportTest #test10 stamp: 'fr 11/11/2020 17:16:04'!
FAILURE!
!Portfolio methodsFor: 'report' stamp: 'fr 11/11/2020 17:17:08' prior: 50870265!
accountSummary
	
	| report |
	report _ OrderedCollection new.
	accounts do: [:anAccount |
		(anAccount  isMemberOf: ReceptiveAccount) ifTrue: [
			anAccount transactions do: [:aTransaction |
				(aTransaction isMemberOf: Deposit) ifTrue: [report add: 'Dep�sito por ',aTransaction value asString,'.'].
				(aTransaction isMemberOf: Withdraw) ifTrue: [report add: 'Extracci�n por ',aTransaction value asString,'.'].
				(aTransaction isMemberOf: DepositByTransference) ifTrue: [report add: 'Entrada por transferencia de ',aTransaction value asString,'.'].
				(aTransaction isMemberOf: WithdrawByTransference) ifTrue: [report add: 'Salida por transferencia de ',aTransaction value asString,'.'].
			].
		(anAccount  isMemberOf: Portfolio) ifTrue: [
			anAccount transactions do: [:aTransaction |
				(aTransaction isMemberOf: Deposit) ifTrue: [report add: 'Dep�sito por ',aTransaction value asString,'.'].
				]
			]
		]
	].
	report add: 'Balance = ',self balance asString.
	^report! !

!testRun: #ReportTest #test10 stamp: 'fr 11/11/2020 17:17:10'!
FAILURE!
!Portfolio methodsFor: 'report' stamp: 'fr 11/11/2020 17:18:39' prior: 50870467!
accountSummary
	
	| report |
	report _ OrderedCollection new.
	accounts do: [:anAccount |
		(anAccount  isMemberOf: ReceptiveAccount) ifTrue: [
			anAccount transactions do: [:aTransaction |
				(aTransaction isMemberOf: Deposit) ifTrue: [report add: 'Dep�sito por ',aTransaction value asString,'.'].
				(aTransaction isMemberOf: Withdraw) ifTrue: [report add: 'Extracci�n por ',aTransaction value asString,'.'].
				(aTransaction isMemberOf: DepositByTransference) ifTrue: [report add: 'Entrada por transferencia de ',aTransaction value asString,'.'].
				(aTransaction isMemberOf: WithdrawByTransference) ifTrue: [report add: 'Salida por transferencia de ',aTransaction value asString,'.'].
			].
		(anAccount  isMemberOf: Portfolio) ifTrue: [
				report addAllLast: (anAccount accountSummary)
			]
		]
	].
	report add: 'Balance = ',self balance asString.
	^report! !
!Portfolio methodsFor: 'report' stamp: 'fr 11/11/2020 17:19:54' prior: 50870503!
accountSummary
	
	| report |
	report _ OrderedCollection new.
	accounts do: [:anAccount |
		(anAccount  isMemberOf: ReceptiveAccount) ifTrue: [
			anAccount transactions do: [:aTransaction |
				(aTransaction isMemberOf: Deposit) ifTrue: [report add: 'Dep�sito por ',aTransaction value asString,'.'].
				(aTransaction isMemberOf: Withdraw) ifTrue: [report add: 'Extracci�n por ',aTransaction value asString,'.'].
				(aTransaction isMemberOf: DepositByTransference) ifTrue: [report add: 'Entrada por transferencia de ',aTransaction value asString,'.'].
				(aTransaction isMemberOf: WithdrawByTransference) ifTrue: [report add: 'Salida por transferencia de ',aTransaction value asString,'.'].
			].
		(anAccount  isMemberOf: Portfolio) ifTrue: [
				anAccount transactions do: [:aTransaction |
		
					]
			]
		]
	].
	report add: 'Balance = ',self balance asString.
	^report! !
!Portfolio methodsFor: 'report' stamp: 'fr 11/11/2020 17:21:43' prior: 50870533!
accountSummary
	
	| report |
	report _ OrderedCollection new.
	accounts do: [:anAccount |
		(anAccount  isMemberOf: ReceptiveAccount) ifTrue: [
			anAccount transactions do: [:aTransaction |
				(aTransaction isMemberOf: Deposit) ifTrue: [report add: 'Dep�sito por ',aTransaction value asString,'.'].
				(aTransaction isMemberOf: Withdraw) ifTrue: [report add: 'Extracci�n por ',aTransaction value asString,'.'].
				(aTransaction isMemberOf: DepositByTransference) ifTrue: [report add: 'Entrada por transferencia de ',aTransaction value asString,'.'].
				(aTransaction isMemberOf: WithdrawByTransference) ifTrue: [report add: 'Salida por transferencia de ',aTransaction value asString,'.'].
			].
		(anAccount  isMemberOf: Portfolio) ifTrue: [
				anAccount transactions do: [:aTransaction |
						(aTransaction isMemberOf: Deposit) ifTrue: [report add: 'Dep�sito por ',aTransaction value asString,'.']
					]
			]
		]
	].
	report add: 'Balance = ',self balance asString.
	^report! !

!testRun: #ReportTest #test10 stamp: 'fr 11/11/2020 17:21:45'!
FAILURE!

anotherPortfolio accountSummary!
!Portfolio methodsFor: 'report' stamp: 'fr 11/11/2020 17:10:47' prior: 50870563!
accountSummary
	
	| report |
	report _ OrderedCollection new.
	accounts do: [:anAccount |
		(anAccount  isMemberOf: ReceptiveAccount) ifTrue: [
			anAccount transactions do: [:aTransaction |
				(aTransaction isMemberOf: Deposit) ifTrue: [report add: 'Dep�sito por ',aTransaction value asString,'.'].
				(aTransaction isMemberOf: Withdraw) ifTrue: [report add: 'Extracci�n por ',aTransaction value asString,'.'].
				(aTransaction isMemberOf: DepositByTransference) ifTrue: [report add: 'Entrada por transferencia de ',aTransaction value asString,'.'].
				(aTransaction isMemberOf: WithdrawByTransference) ifTrue: [report add: 'Salida por transferencia de ',aTransaction value asString,'.'].
			]
		]
	].
	report add: 'Balance = ',self balance asString.
	^report! !

!testRun: #ReportTest #test10 stamp: 'fr 11/11/2020 17:23:27'!
FAILURE!
!Portfolio methodsFor: 'report' stamp: 'fr 11/11/2020 17:24:30' prior: 50870600!
accountSummary
	
	| report |
	report _ OrderedCollection new.
	accounts do: [:anAccount |
		
		(anAccount  isMemberOf: ReceptiveAccount) ifTrue: [
			anAccount transactions do: [:aTransaction |
				(aTransaction isMemberOf: Deposit) ifTrue: [report add: 'Dep�sito por ',aTransaction value asString,'.'].
				(aTransaction isMemberOf: Withdraw) ifTrue: [report add: 'Extracci�n por ',aTransaction value asString,'.'].
				(aTransaction isMemberOf: DepositByTransference) ifTrue: [report add: 'Entrada por transferencia de ',aTransaction value asString,'.'].
				(aTransaction isMemberOf: WithdrawByTransference) ifTrue: [report add: 'Salida por transferencia de ',aTransaction value asString,'.'].
			]
		].

		(anAccount  isMemberOf: Portfolio) ifTrue: [
			anAccount transactions do: [:aTransaction |
				(aTransaction isMemberOf: Deposit) ifTrue: [report add: 'Dep�sito por ',aTransaction value asString,'.'].
			]
		]	

	].
	report add: 'Balance = ',self balance asString.
	^report! !

!testRun: #ReportTest #test10 stamp: 'fr 11/11/2020 17:24:32'!
PASSED!

!testRun: #ReportTest #test01 stamp: 'fr 11/11/2020 17:24:32'!
PASSED!

!testRun: #ReportTest #test02 stamp: 'fr 11/11/2020 17:24:32'!
PASSED!

!testRun: #ReportTest #test03 stamp: 'fr 11/11/2020 17:24:32'!
PASSED!

!testRun: #ReportTest #test04 stamp: 'fr 11/11/2020 17:24:32'!
PASSED!

!testRun: #ReportTest #test05 stamp: 'fr 11/11/2020 17:24:32'!
PASSED!

!testRun: #ReportTest #test06 stamp: 'fr 11/11/2020 17:24:32'!
PASSED!

!testRun: #ReportTest #test07 stamp: 'fr 11/11/2020 17:24:32'!
PASSED!

!testRun: #ReportTest #test08 stamp: 'fr 11/11/2020 17:24:32'!
PASSED!

!testRun: #ReportTest #test09 stamp: 'fr 11/11/2020 17:24:32'!
PASSED!

!testRun: #ReportTest #test10 stamp: 'fr 11/11/2020 17:24:32'!
PASSED!
!ReportTest methodsFor: 'as yet unclassified' stamp: 'fr 11/11/2020 17:24:36'!
test11

	| portfolio account anotherPortfolio |
	
	account _ ReceptiveAccount new.		
	portfolio _ Portfolio with: account.
	anotherPortfolio _ Portfolio with: portfolio.

	Deposit register: 100 on: account.

		
	self assert: [anotherPortfolio accountSummary = (OrderedCollection with: 'Dep�sito por 100.' with: 'Balance = 100')]! !
!ReportTest methodsFor: 'as yet unclassified' stamp: 'fr 11/11/2020 17:25:00' prior: 50870688!
test11

	| portfolio account anotherPortfolio |
	
	account _ ReceptiveAccount new.		
	portfolio _ Portfolio with: account.
	anotherPortfolio _ Portfolio with: portfolio.

	Withdraw register: 100 on: account.

		
	self assert: [anotherPortfolio accountSummary = (OrderedCollection with: 'Extracci�n por 100.' with: 'Balance = -100')]! !

!testRun: #ReportTest #test11 stamp: 'fr 11/11/2020 17:25:01'!
FAILURE!
!Portfolio methodsFor: 'report' stamp: 'fr 11/11/2020 17:25:21' prior: 50870629!
accountSummary
	
	| report |
	report _ OrderedCollection new.
	accounts do: [:anAccount |
		
		(anAccount  isMemberOf: ReceptiveAccount) ifTrue: [
			anAccount transactions do: [:aTransaction |
				(aTransaction isMemberOf: Deposit) ifTrue: [report add: 'Dep�sito por ',aTransaction value asString,'.'].
				(aTransaction isMemberOf: Withdraw) ifTrue: [report add: 'Extracci�n por ',aTransaction value asString,'.'].
				(aTransaction isMemberOf: DepositByTransference) ifTrue: [report add: 'Entrada por transferencia de ',aTransaction value asString,'.'].
				(aTransaction isMemberOf: WithdrawByTransference) ifTrue: [report add: 'Salida por transferencia de ',aTransaction value asString,'.'].
			]
		].

		(anAccount  isMemberOf: Portfolio) ifTrue: [
			anAccount transactions do: [:aTransaction |
				(aTransaction isMemberOf: Deposit) ifTrue: [report add: 'Dep�sito por ',aTransaction value asString,'.'].
				(aTransaction isMemberOf: Withdraw) ifTrue: [report add: 'Extracci�n por ',aTransaction value asString,'.'].
			]
		]	

	].
	report add: 'Balance = ',self balance asString.
	^report! !

!testRun: #ReportTest #test11 stamp: 'fr 11/11/2020 17:25:22'!
PASSED!

!testRun: #ReportTest #test01 stamp: 'fr 11/11/2020 17:25:22'!
PASSED!

!testRun: #ReportTest #test02 stamp: 'fr 11/11/2020 17:25:22'!
PASSED!

!testRun: #ReportTest #test03 stamp: 'fr 11/11/2020 17:25:22'!
PASSED!

!testRun: #ReportTest #test04 stamp: 'fr 11/11/2020 17:25:22'!
PASSED!

!testRun: #ReportTest #test05 stamp: 'fr 11/11/2020 17:25:22'!
PASSED!

!testRun: #ReportTest #test06 stamp: 'fr 11/11/2020 17:25:22'!
PASSED!

!testRun: #ReportTest #test07 stamp: 'fr 11/11/2020 17:25:22'!
PASSED!

!testRun: #ReportTest #test08 stamp: 'fr 11/11/2020 17:25:22'!
PASSED!

!testRun: #ReportTest #test09 stamp: 'fr 11/11/2020 17:25:22'!
PASSED!

!testRun: #ReportTest #test10 stamp: 'fr 11/11/2020 17:25:22'!
PASSED!

!testRun: #ReportTest #test11 stamp: 'fr 11/11/2020 17:25:22'!
PASSED!
!ReportTest methodsFor: 'as yet unclassified' stamp: 'fr 11/11/2020 17:25:27'!
test12

	| portfolio account anotherPortfolio |
	
	account _ ReceptiveAccount new.		
	portfolio _ Portfolio with: account.
	anotherPortfolio _ Portfolio with: portfolio.

	Withdraw register: 100 on: account.

		
	self assert: [anotherPortfolio accountSummary = (OrderedCollection with: 'Extracci�n por 100.' with: 'Balance = -100')]! !
!ReportTest methodsFor: 'as yet unclassified' stamp: 'fr 11/11/2020 17:29:05' prior: 50870782!
test12

	| portfolio account anotherPortfolio anotherAccount |
	
	account _ ReceptiveAccount new.		
	anotherAccount _ ReceptiveAccount new.		
	portfolio _ Portfolio with: account.
	anotherPortfolio _ Portfolio with: portfolio.
	anotherPortfolio add: anotherAccount.

	Transfer move: 100 from: account to: anotherAccount.

		
	self assert: [anotherPortfolio accountSummary = (OrderedCollection with: 'Salida por transferencia de 100.' with: 'Entrada por transferencia de 100.' with: 'Balance = 0')]! !

!testRun: #ReportTest #test12 stamp: 'fr 11/11/2020 17:29:09'!
FAILURE!
!Portfolio methodsFor: 'report' stamp: 'fr 11/11/2020 17:29:37' prior: 50870718!
accountSummary
	
	| report |
	report _ OrderedCollection new.
	accounts do: [:anAccount |
		
		(anAccount  isMemberOf: ReceptiveAccount) ifTrue: [
			anAccount transactions do: [:aTransaction |
				(aTransaction isMemberOf: Deposit) ifTrue: [report add: 'Dep�sito por ',aTransaction value asString,'.'].
				(aTransaction isMemberOf: Withdraw) ifTrue: [report add: 'Extracci�n por ',aTransaction value asString,'.'].
				(aTransaction isMemberOf: DepositByTransference) ifTrue: [report add: 'Entrada por transferencia de ',aTransaction value asString,'.'].
				(aTransaction isMemberOf: WithdrawByTransference) ifTrue: [report add: 'Salida por transferencia de ',aTransaction value asString,'.'].
			]
		].

		(anAccount  isMemberOf: Portfolio) ifTrue: [
			anAccount transactions do: [:aTransaction |
				(aTransaction isMemberOf: Deposit) ifTrue: [report add: 'Dep�sito por ',aTransaction value asString,'.'].
				(aTransaction isMemberOf: Withdraw) ifTrue: [report add: 'Extracci�n por ',aTransaction value asString,'.'].
				(aTransaction isMemberOf: DepositByTransference) ifTrue: [report add: 'Entrada por transferencia de ',aTransaction value asString,'.'].
				(aTransaction isMemberOf: WithdrawByTransference) ifTrue: [report add: 'Salida por transferencia de ',aTransaction value asString,'.'].
			]
		]	

	].
	report add: 'Balance = ',self balance asString.
	^report! !

!testRun: #ReportTest #test12 stamp: 'fr 11/11/2020 17:29:38'!
PASSED!

!testRun: #ReportTest #test01 stamp: 'fr 11/11/2020 17:29:38'!
PASSED!

!testRun: #ReportTest #test02 stamp: 'fr 11/11/2020 17:29:38'!
PASSED!

!testRun: #ReportTest #test03 stamp: 'fr 11/11/2020 17:29:38'!
PASSED!

!testRun: #ReportTest #test04 stamp: 'fr 11/11/2020 17:29:38'!
PASSED!

!testRun: #ReportTest #test05 stamp: 'fr 11/11/2020 17:29:38'!
PASSED!

!testRun: #ReportTest #test06 stamp: 'fr 11/11/2020 17:29:38'!
PASSED!

!testRun: #ReportTest #test07 stamp: 'fr 11/11/2020 17:29:38'!
PASSED!

!testRun: #ReportTest #test08 stamp: 'fr 11/11/2020 17:29:38'!
PASSED!

!testRun: #ReportTest #test09 stamp: 'fr 11/11/2020 17:29:38'!
PASSED!

!testRun: #ReportTest #test10 stamp: 'fr 11/11/2020 17:29:39'!
PASSED!

!testRun: #ReportTest #test11 stamp: 'fr 11/11/2020 17:29:39'!
PASSED!

!testRun: #ReportTest #test12 stamp: 'fr 11/11/2020 17:29:39'!
PASSED!
!Portfolio methodsFor: 'report' stamp: 'fr 11/11/2020 17:31:13' prior: 50870817!
accountSummary
	
	| report |
	report _ OrderedCollection new.
	accounts do: [:anAccount |
		anAccount transactions do: [:aTransaction |
			(aTransaction isMemberOf: Deposit) ifTrue: [report add: 'Dep�sito por ',aTransaction value asString,'.'].
			(aTransaction isMemberOf: Withdraw) ifTrue: [report add: 'Extracci�n por ',aTransaction value asString,'.'].
			(aTransaction isMemberOf: DepositByTransference) ifTrue: [report add: 'Entrada por transferencia de ',aTransaction value asString,'.'].
			(aTransaction isMemberOf: WithdrawByTransference) ifTrue: [report add: 'Salida por transferencia de ',aTransaction value asString,'.'].
		]	
	].
	report add: 'Balance = ',self balance asString.
	^report! !

!testRun: #ReportTest #test01 stamp: 'fr 11/11/2020 17:31:16'!
PASSED!

!testRun: #ReportTest #test02 stamp: 'fr 11/11/2020 17:31:16'!
PASSED!

!testRun: #ReportTest #test03 stamp: 'fr 11/11/2020 17:31:16'!
PASSED!

!testRun: #ReportTest #test04 stamp: 'fr 11/11/2020 17:31:16'!
PASSED!

!testRun: #ReportTest #test05 stamp: 'fr 11/11/2020 17:31:16'!
PASSED!

!testRun: #ReportTest #test06 stamp: 'fr 11/11/2020 17:31:16'!
PASSED!

!testRun: #ReportTest #test07 stamp: 'fr 11/11/2020 17:31:16'!
PASSED!

!testRun: #ReportTest #test08 stamp: 'fr 11/11/2020 17:31:16'!
PASSED!

!testRun: #ReportTest #test09 stamp: 'fr 11/11/2020 17:31:16'!
PASSED!

!testRun: #ReportTest #test10 stamp: 'fr 11/11/2020 17:31:16'!
PASSED!

!testRun: #ReportTest #test11 stamp: 'fr 11/11/2020 17:31:16'!
PASSED!

!testRun: #ReportTest #test12 stamp: 'fr 11/11/2020 17:31:16'!
PASSED!
!ReceptiveAccount methodsFor: 'report' stamp: 'fr 11/11/2020 17:32:13'!
addSummaryTo: report

	^ transactions do: [:aTransaction |
		(aTransaction isMemberOf: Deposit) ifTrue: [report add: 'Dep�sito por ',aTransaction value asString,'.'].
		(aTransaction isMemberOf: Withdraw) ifTrue: [report add: 'Extracci�n por ',aTransaction value asString,'.'].
		(aTransaction isMemberOf: WithdrawByTransference) ifTrue: [report add: 'Salida por transferencia de ',aTransaction value asString,'.'].
		(aTransaction isMemberOf: DepositByTransference) ifTrue: [report add: 'Entrada por transferencia de ',aTransaction value asString,'.'].
		]! !
!ReceptiveAccount methodsFor: 'report' stamp: 'fr 11/11/2020 17:32:13' prior: 50869909!
accountSummary
	
	| report |
	report _ OrderedCollection new.
	
	self addSummaryTo: report.
	report add: 'Balance = ',self balance asString.

	^report ! !

!testRun: #TransferTest #test01 stamp: 'fr 11/11/2020 17:32:19'!
PASSED!

!testRun: #TransferTest #test02 stamp: 'fr 11/11/2020 17:32:19'!
PASSED!

!testRun: #TransferTest #test03 stamp: 'fr 11/11/2020 17:32:19'!
PASSED!

!testRun: #TransferTest #test04 stamp: 'fr 11/11/2020 17:32:19'!
PASSED!

!testRun: #TransferTest #test05 stamp: 'fr 11/11/2020 17:32:19'!
PASSED!

!testRun: #TransferTest #test06 stamp: 'fr 11/11/2020 17:32:19'!
PASSED!

!testRun: #ReportTest #test01 stamp: 'fr 11/11/2020 17:32:21'!
PASSED!

!testRun: #ReportTest #test02 stamp: 'fr 11/11/2020 17:32:21'!
PASSED!

!testRun: #ReportTest #test03 stamp: 'fr 11/11/2020 17:32:21'!
PASSED!

!testRun: #ReportTest #test04 stamp: 'fr 11/11/2020 17:32:21'!
PASSED!

!testRun: #ReportTest #test05 stamp: 'fr 11/11/2020 17:32:21'!
PASSED!

!testRun: #ReportTest #test06 stamp: 'fr 11/11/2020 17:32:21'!
PASSED!

!testRun: #ReportTest #test07 stamp: 'fr 11/11/2020 17:32:21'!
PASSED!

!testRun: #ReportTest #test08 stamp: 'fr 11/11/2020 17:32:21'!
PASSED!

!testRun: #ReportTest #test09 stamp: 'fr 11/11/2020 17:32:21'!
PASSED!

!testRun: #ReportTest #test10 stamp: 'fr 11/11/2020 17:32:21'!
PASSED!

!testRun: #ReportTest #test11 stamp: 'fr 11/11/2020 17:32:21'!
PASSED!

!testRun: #ReportTest #test12 stamp: 'fr 11/11/2020 17:32:21'!
PASSED!
!Portfolio methodsFor: 'report' stamp: 'fr 11/11/2020 17:32:46' prior: 50870892!
accountSummary
	
	| report |
	report _ OrderedCollection new.
	accounts do: [:anAccount |
		anAccount addSummaryTo: report	
	].
	report add: 'Balance = ',self balance asString.
	^report! !

!testRun: #ReportTest #test01 stamp: 'fr 11/11/2020 17:32:49'!
PASSED!

!testRun: #ReportTest #test02 stamp: 'fr 11/11/2020 17:32:49'!
PASSED!

!testRun: #ReportTest #test03 stamp: 'fr 11/11/2020 17:32:49'!
PASSED!

!testRun: #ReportTest #test04 stamp: 'fr 11/11/2020 17:32:49'!
PASSED!

!testRun: #ReportTest #test05 stamp: 'fr 11/11/2020 17:32:49'!
PASSED!

!testRun: #ReportTest #test06 stamp: 'fr 11/11/2020 17:32:49'!
PASSED!

!testRun: #ReportTest #test07 stamp: 'fr 11/11/2020 17:32:49'!
PASSED!

!testRun: #ReportTest #test08 stamp: 'fr 11/11/2020 17:32:49'!
PASSED!

!testRun: #ReportTest #test09 stamp: 'fr 11/11/2020 17:32:49'!
PASSED!

!testRun: #ReportTest #test10 stamp: 'fr 11/11/2020 17:32:49'!
ERROR!

!testRun: #ReportTest #test11 stamp: 'fr 11/11/2020 17:32:49'!
ERROR!

!testRun: #ReportTest #test12 stamp: 'fr 11/11/2020 17:32:49'!
ERROR!
!Portfolio methodsFor: 'report' stamp: 'fr 11/11/2020 17:31:13' prior: 50871014!
accountSummary
	
	| report |
	report _ OrderedCollection new.
	accounts do: [:anAccount |
		anAccount transactions do: [:aTransaction |
			(aTransaction isMemberOf: Deposit) ifTrue: [report add: 'Dep�sito por ',aTransaction value asString,'.'].
			(aTransaction isMemberOf: Withdraw) ifTrue: [report add: 'Extracci�n por ',aTransaction value asString,'.'].
			(aTransaction isMemberOf: DepositByTransference) ifTrue: [report add: 'Entrada por transferencia de ',aTransaction value asString,'.'].
			(aTransaction isMemberOf: WithdrawByTransference) ifTrue: [report add: 'Salida por transferencia de ',aTransaction value asString,'.'].
		]	
	].
	report add: 'Balance = ',self balance asString.
	^report! !

!testRun: #ReportTest #test01 stamp: 'fr 11/11/2020 17:33:15'!
PASSED!

!testRun: #ReportTest #test02 stamp: 'fr 11/11/2020 17:33:15'!
PASSED!

!testRun: #ReportTest #test03 stamp: 'fr 11/11/2020 17:33:15'!
PASSED!

!testRun: #ReportTest #test04 stamp: 'fr 11/11/2020 17:33:15'!
PASSED!

!testRun: #ReportTest #test05 stamp: 'fr 11/11/2020 17:33:15'!
PASSED!

!testRun: #ReportTest #test06 stamp: 'fr 11/11/2020 17:33:15'!
PASSED!

!testRun: #ReportTest #test07 stamp: 'fr 11/11/2020 17:33:15'!
PASSED!

!testRun: #ReportTest #test08 stamp: 'fr 11/11/2020 17:33:15'!
PASSED!

!testRun: #ReportTest #test09 stamp: 'fr 11/11/2020 17:33:15'!
PASSED!

!testRun: #ReportTest #test10 stamp: 'fr 11/11/2020 17:33:15'!
PASSED!

!testRun: #ReportTest #test11 stamp: 'fr 11/11/2020 17:33:15'!
PASSED!

!testRun: #ReportTest #test12 stamp: 'fr 11/11/2020 17:33:15'!
PASSED!
!ReceptiveAccount methodsFor: 'report' stamp: 'fr 11/11/2020 17:34:16' prior: 50870944!
addSummaryTo: report

	transactions do: [:aTransaction |
		(aTransaction isMemberOf: Deposit) ifTrue: [report add: 'Dep�sito por ',aTransaction value asString,'.'].
		(aTransaction isMemberOf: Withdraw) ifTrue: [report add: 'Extracci�n por ',aTransaction value asString,'.'].
		(aTransaction isMemberOf: WithdrawByTransference) ifTrue: [report add: 'Salida por transferencia de ',aTransaction value asString,'.'].
		(aTransaction isMemberOf: DepositByTransference) ifTrue: [report add: 'Entrada por transferencia de ',aTransaction value asString,'.'].
		]! !

!testRun: #ReportTest #test01 stamp: 'fr 11/11/2020 17:34:21'!
PASSED!

!testRun: #ReportTest #test02 stamp: 'fr 11/11/2020 17:34:21'!
PASSED!

!testRun: #ReportTest #test03 stamp: 'fr 11/11/2020 17:34:21'!
PASSED!

!testRun: #ReportTest #test04 stamp: 'fr 11/11/2020 17:34:21'!
PASSED!

!testRun: #ReportTest #test05 stamp: 'fr 11/11/2020 17:34:21'!
PASSED!

!testRun: #ReportTest #test06 stamp: 'fr 11/11/2020 17:34:21'!
PASSED!

!testRun: #ReportTest #test07 stamp: 'fr 11/11/2020 17:34:21'!
PASSED!

!testRun: #ReportTest #test08 stamp: 'fr 11/11/2020 17:34:21'!
PASSED!

!testRun: #ReportTest #test09 stamp: 'fr 11/11/2020 17:34:21'!
PASSED!

!testRun: #ReportTest #test10 stamp: 'fr 11/11/2020 17:34:21'!
PASSED!

!testRun: #ReportTest #test11 stamp: 'fr 11/11/2020 17:34:21'!
PASSED!

!testRun: #ReportTest #test12 stamp: 'fr 11/11/2020 17:34:21'!
PASSED!
!Portfolio methodsFor: 'report' stamp: 'fr 11/11/2020 17:34:31' prior: 50871050!
accountSummary
	
	| report |
	report _ OrderedCollection new.
	accounts do: [:anAccount |
		anAccount addSummaryTo: report	
	].
	report add: 'Balance = ',self balance asString.
	^report! !

!testRun: #ReportTest #test01 stamp: 'fr 11/11/2020 17:34:33'!
PASSED!

!testRun: #ReportTest #test02 stamp: 'fr 11/11/2020 17:34:33'!
PASSED!

!testRun: #ReportTest #test03 stamp: 'fr 11/11/2020 17:34:33'!
PASSED!

!testRun: #ReportTest #test04 stamp: 'fr 11/11/2020 17:34:33'!
PASSED!

!testRun: #ReportTest #test05 stamp: 'fr 11/11/2020 17:34:33'!
PASSED!

!testRun: #ReportTest #test06 stamp: 'fr 11/11/2020 17:34:33'!
PASSED!

!testRun: #ReportTest #test07 stamp: 'fr 11/11/2020 17:34:33'!
PASSED!

!testRun: #ReportTest #test08 stamp: 'fr 11/11/2020 17:34:33'!
PASSED!

!testRun: #ReportTest #test09 stamp: 'fr 11/11/2020 17:34:33'!
PASSED!

!testRun: #ReportTest #test10 stamp: 'fr 11/11/2020 17:34:33'!
ERROR!

!testRun: #ReportTest #test11 stamp: 'fr 11/11/2020 17:34:33'!
ERROR!

!testRun: #ReportTest #test12 stamp: 'fr 11/11/2020 17:34:33'!
ERROR!

!testRun: #ReportTest #test01 stamp: 'fr 11/11/2020 17:34:39'!
PASSED!

!testRun: #ReportTest #test02 stamp: 'fr 11/11/2020 17:34:39'!
PASSED!

!testRun: #ReportTest #test03 stamp: 'fr 11/11/2020 17:34:39'!
PASSED!

!testRun: #ReportTest #test04 stamp: 'fr 11/11/2020 17:34:39'!
PASSED!

!testRun: #ReportTest #test05 stamp: 'fr 11/11/2020 17:34:39'!
PASSED!

!testRun: #ReportTest #test06 stamp: 'fr 11/11/2020 17:34:39'!
PASSED!

!testRun: #ReportTest #test07 stamp: 'fr 11/11/2020 17:34:39'!
PASSED!

!testRun: #ReportTest #test08 stamp: 'fr 11/11/2020 17:34:39'!
PASSED!

!testRun: #ReportTest #test09 stamp: 'fr 11/11/2020 17:34:39'!
PASSED!

!testRun: #ReportTest #test10 stamp: 'fr 11/11/2020 17:34:39'!
ERROR!

!testRun: #ReportTest #test11 stamp: 'fr 11/11/2020 17:34:39'!
ERROR!

!testRun: #ReportTest #test12 stamp: 'fr 11/11/2020 17:34:39'!
ERROR!
!Portfolio methodsFor: 'report' stamp: 'fr 11/11/2020 17:35:49'!
addSummaryTo: report

	^ accounts do: [:anAccount |
		anAccount addSummaryTo: report	
	]! !
!Portfolio methodsFor: 'report' stamp: 'fr 11/11/2020 17:35:49' prior: 50871149!
accountSummary
	
	| report |
	report _ OrderedCollection new.
	self addSummaryTo: report.
	report add: 'Balance = ',self balance asString.
	^report! !

!testRun: #ReportTest #test01 stamp: 'fr 11/11/2020 17:35:52'!
PASSED!

!testRun: #ReportTest #test02 stamp: 'fr 11/11/2020 17:35:52'!
PASSED!

!testRun: #ReportTest #test03 stamp: 'fr 11/11/2020 17:35:52'!
PASSED!

!testRun: #ReportTest #test04 stamp: 'fr 11/11/2020 17:35:52'!
PASSED!

!testRun: #ReportTest #test05 stamp: 'fr 11/11/2020 17:35:52'!
PASSED!

!testRun: #ReportTest #test06 stamp: 'fr 11/11/2020 17:35:52'!
PASSED!

!testRun: #ReportTest #test07 stamp: 'fr 11/11/2020 17:35:52'!
PASSED!

!testRun: #ReportTest #test08 stamp: 'fr 11/11/2020 17:35:52'!
PASSED!

!testRun: #ReportTest #test09 stamp: 'fr 11/11/2020 17:35:52'!
PASSED!

!testRun: #ReportTest #test10 stamp: 'fr 11/11/2020 17:35:52'!
PASSED!

!testRun: #ReportTest #test11 stamp: 'fr 11/11/2020 17:35:52'!
PASSED!

!testRun: #ReportTest #test12 stamp: 'fr 11/11/2020 17:35:52'!
PASSED!
!Portfolio methodsFor: 'report' stamp: 'fr 11/11/2020 17:36:12' prior: 50871211!
addSummaryTo: report

	accounts do: [:anAccount |
		anAccount addSummaryTo: report	
	]! !

!testRun: #ReportTest #test01 stamp: 'fr 11/11/2020 17:36:16'!
PASSED!

!testRun: #ReportTest #test02 stamp: 'fr 11/11/2020 17:36:16'!
PASSED!

!testRun: #ReportTest #test03 stamp: 'fr 11/11/2020 17:36:16'!
PASSED!

!testRun: #ReportTest #test04 stamp: 'fr 11/11/2020 17:36:16'!
PASSED!

!testRun: #ReportTest #test05 stamp: 'fr 11/11/2020 17:36:16'!
PASSED!

!testRun: #ReportTest #test06 stamp: 'fr 11/11/2020 17:36:16'!
PASSED!

!testRun: #ReportTest #test07 stamp: 'fr 11/11/2020 17:36:16'!
PASSED!

!testRun: #ReportTest #test08 stamp: 'fr 11/11/2020 17:36:16'!
PASSED!

!testRun: #ReportTest #test09 stamp: 'fr 11/11/2020 17:36:16'!
PASSED!

!testRun: #ReportTest #test10 stamp: 'fr 11/11/2020 17:36:16'!
PASSED!

!testRun: #ReportTest #test11 stamp: 'fr 11/11/2020 17:36:16'!
PASSED!

!testRun: #ReportTest #test12 stamp: 'fr 11/11/2020 17:36:16'!
PASSED!
!ReceptiveAccount methodsFor: 'report' stamp: 'fr 11/11/2020 17:36:39' prior: 50870965!
accountSummary
	
	| report |
	report _ OrderedCollection new.
	
	self addSummaryTo: report.
	
	report add: 'Balance = ',self balance asString.

	^report ! !
!Portfolio methodsFor: 'report' stamp: 'fr 11/11/2020 17:37:04' prior: 50871217!
accountSummary
	
	| report |
	report _ OrderedCollection new.
	
	self addSummaryTo: report.
	
	report add: 'Balance = ',self balance asString.
	^report! !
!ReceptiveAccount methodsFor: 'report' stamp: 'fr 11/11/2020 17:40:34' prior: 50871102!
addSummaryTo: report

	transactions do: [:aTransaction |
		(aTransaction isMemberOf: Deposit) ifTrue: [report add: 'Dep�sito por ',aTransaction value asString,'.'].
		(aTransaction isMemberOf: Withdraw) ifTrue: [report add: 'Extracci�n por ',aTransaction value asString,'.'].
		(aTransaction isMemberOf: WithdrawByTransference) ifTrue: [report add: 'Salida por transferencia de ',aTransaction value asString,'.'].
		(aTransaction isMemberOf: DepositByTransference) ifTrue: [report add: 'Entrada por transferencia de ',aTransaction value asString,'.'].
	]! !
!ReportTest methodsFor: 'as yet unclassified' stamp: 'fr 11/11/2020 17:51:11' prior: 50869463!
test01

	| account |
	
	account _ ReceptiveAccount new.
	
	self assert: [account transferNet = 0]! !

!testRun: #ReportTest #test01 stamp: 'fr 11/11/2020 17:51:15'!
ERROR!
!ReceptiveAccount methodsFor: 'report' stamp: 'fr 11/11/2020 17:51:42'!
transferNet
	self shouldBeImplemented.! !
!ReceptiveAccount methodsFor: 'report' stamp: 'fr 11/11/2020 17:51:46' prior: 50871330!
transferNet
	
	^0! !

!testRun: #ReportTest #test01 stamp: 'fr 11/11/2020 17:51:47'!
PASSED!

!testRun: #ReportTest #test01 stamp: 'fr 11/11/2020 17:51:47'!
PASSED!

!testRun: #ReportTest #test02 stamp: 'fr 11/11/2020 17:51:47'!
PASSED!

!testRun: #ReportTest #test03 stamp: 'fr 11/11/2020 17:51:47'!
PASSED!

!testRun: #ReportTest #test04 stamp: 'fr 11/11/2020 17:51:47'!
PASSED!

!testRun: #ReportTest #test05 stamp: 'fr 11/11/2020 17:51:47'!
PASSED!

!testRun: #ReportTest #test06 stamp: 'fr 11/11/2020 17:51:47'!
PASSED!

!testRun: #ReportTest #test07 stamp: 'fr 11/11/2020 17:51:47'!
PASSED!

!testRun: #ReportTest #test08 stamp: 'fr 11/11/2020 17:51:47'!
PASSED!

!testRun: #ReportTest #test09 stamp: 'fr 11/11/2020 17:51:47'!
PASSED!

!testRun: #ReportTest #test10 stamp: 'fr 11/11/2020 17:51:47'!
PASSED!

!testRun: #ReportTest #test11 stamp: 'fr 11/11/2020 17:51:47'!
PASSED!

!testRun: #ReportTest #test12 stamp: 'fr 11/11/2020 17:51:47'!
PASSED!
!ReportTest methodsFor: 'as yet unclassified' stamp: 'fr 11/11/2020 16:14:00' prior: 50871322!
test01

	| account |
	
	account _ ReceptiveAccount new.
	
	self assert: [account accountSummary = (OrderedCollection with: 'Balance = 0')]! !
!ReportTest methodsFor: 'as yet unclassified' stamp: 'fr 11/11/2020 17:52:16'!
test013

	| account |
	
	account _ ReceptiveAccount new.
	
	self assert: [account transferNet = 0]! !
!ReportTest methodsFor: 'as yet unclassified' stamp: 'fr 11/11/2020 17:52:20'!
test13

	| account |
	
	account _ ReceptiveAccount new.
	
	self assert: [account transferNet = 0]! !

!methodRemoval: ReportTest #test013 stamp: 'fr 11/11/2020 17:52:23'!
test013

	| account |
	
	account _ ReceptiveAccount new.
	
	self assert: [account transferNet = 0]!

!testRun: #ReportTest #test13 stamp: 'fr 11/11/2020 17:52:27'!
PASSED!

!testRun: #ReportTest #test01 stamp: 'fr 11/11/2020 17:52:27'!
PASSED!

!testRun: #ReportTest #test02 stamp: 'fr 11/11/2020 17:52:27'!
PASSED!

!testRun: #ReportTest #test03 stamp: 'fr 11/11/2020 17:52:27'!
PASSED!

!testRun: #ReportTest #test04 stamp: 'fr 11/11/2020 17:52:27'!
PASSED!

!testRun: #ReportTest #test05 stamp: 'fr 11/11/2020 17:52:27'!
PASSED!

!testRun: #ReportTest #test06 stamp: 'fr 11/11/2020 17:52:27'!
PASSED!

!testRun: #ReportTest #test07 stamp: 'fr 11/11/2020 17:52:27'!
PASSED!

!testRun: #ReportTest #test08 stamp: 'fr 11/11/2020 17:52:27'!
PASSED!

!testRun: #ReportTest #test09 stamp: 'fr 11/11/2020 17:52:27'!
PASSED!

!testRun: #ReportTest #test10 stamp: 'fr 11/11/2020 17:52:27'!
PASSED!

!testRun: #ReportTest #test11 stamp: 'fr 11/11/2020 17:52:27'!
PASSED!

!testRun: #ReportTest #test12 stamp: 'fr 11/11/2020 17:52:27'!
PASSED!

!testRun: #ReportTest #test13 stamp: 'fr 11/11/2020 17:52:27'!
PASSED!
!ReportTest methodsFor: 'as yet unclassified' stamp: 'fr 11/11/2020 18:03:17' prior: 50871381!
test13

	| account |
	
	account _ ReceptiveAccount new.
	Deposit register: 100 on: account.
	Withdraw register: 50 on: account. 
	
	self assert: [account transferNet = 0]! !

!testRun: #ReportTest #test13 stamp: 'fr 11/11/2020 18:03:18'!
PASSED!

!testRun: #ReportTest #test01 stamp: 'fr 11/11/2020 18:03:18'!
PASSED!

!testRun: #ReportTest #test02 stamp: 'fr 11/11/2020 18:03:18'!
PASSED!

!testRun: #ReportTest #test03 stamp: 'fr 11/11/2020 18:03:18'!
PASSED!

!testRun: #ReportTest #test04 stamp: 'fr 11/11/2020 18:03:18'!
PASSED!

!testRun: #ReportTest #test05 stamp: 'fr 11/11/2020 18:03:18'!
PASSED!

!testRun: #ReportTest #test06 stamp: 'fr 11/11/2020 18:03:18'!
PASSED!

!testRun: #ReportTest #test07 stamp: 'fr 11/11/2020 18:03:18'!
PASSED!

!testRun: #ReportTest #test08 stamp: 'fr 11/11/2020 18:03:18'!
PASSED!

!testRun: #ReportTest #test09 stamp: 'fr 11/11/2020 18:03:18'!
PASSED!

!testRun: #ReportTest #test10 stamp: 'fr 11/11/2020 18:03:18'!
PASSED!

!testRun: #ReportTest #test11 stamp: 'fr 11/11/2020 18:03:18'!
PASSED!

!testRun: #ReportTest #test12 stamp: 'fr 11/11/2020 18:03:18'!
PASSED!

!testRun: #ReportTest #test13 stamp: 'fr 11/11/2020 18:03:18'!
PASSED!
!ReportTest methodsFor: 'as yet unclassified' stamp: 'fr 11/11/2020 18:03:42'!
test14

	| account |
	
	account _ ReceptiveAccount new.
	Deposit register: 100 on: account.
	Withdraw register: 50 on: account. 
	
	self assert: [account transferNet = 0]! !
!ReportTest methodsFor: 'as yet unclassified' stamp: 'fr 11/11/2020 18:04:59' prior: 50871464!
test14

	| account anotherAccount |
	
	account _ ReceptiveAccount new.
	anotherAccount _ ReceptiveAccount new.
	
	Transfer move: 100 from: account to: anotherAccount 
	
	self assert: [account transferNet = 0]! !
!ReportTest methodsFor: 'as yet unclassified' stamp: 'fr 11/11/2020 18:05:37' prior: 50871473!
test14

	| account anotherAccount |
	
	account _ ReceptiveAccount new.
	anotherAccount _ ReceptiveAccount new.
	
	Transfer move: 100 from: account to: anotherAccount 
	
	self assert: [account transferNet = -100]! !

!testRun: #ReportTest #test14 stamp: 'fr 11/11/2020 18:05:41'!
ERROR!
!ReportTest methodsFor: 'as yet unclassified' stamp: 'fr 11/11/2020 18:05:47' prior: 50871483!
test14

	| account anotherAccount |
	
	account _ ReceptiveAccount new.
	anotherAccount _ ReceptiveAccount new.
	
	Transfer move: 100 from: account to: anotherAccount.
	
	self assert: [account transferNet = -100]! !

!testRun: #ReportTest #test14 stamp: 'fr 11/11/2020 18:05:48'!
FAILURE!
!ReceptiveAccount methodsFor: 'report' stamp: 'fr 11/11/2020 18:08:03' prior: 50871335!
transferNet

	^transactions 
		inject: 0 
		into: [:net :aTransaction | 
			(aTransaction isMemberOf: WithdrawByTransference) ifTrue: [net - aTransaction value]
		] ! !

!testRun: #ReportTest #test14 stamp: 'fr 11/11/2020 18:08:10'!
FAILURE!

!testRun: #ReportTest #test14 stamp: 'fr 11/11/2020 18:08:12'!
PASSED!

!testRun: #ReportTest #test01 stamp: 'fr 11/11/2020 18:08:12'!
PASSED!

!testRun: #ReportTest #test02 stamp: 'fr 11/11/2020 18:08:12'!
PASSED!

!testRun: #ReportTest #test03 stamp: 'fr 11/11/2020 18:08:12'!
PASSED!

!testRun: #ReportTest #test04 stamp: 'fr 11/11/2020 18:08:12'!
PASSED!

!testRun: #ReportTest #test05 stamp: 'fr 11/11/2020 18:08:12'!
PASSED!

!testRun: #ReportTest #test06 stamp: 'fr 11/11/2020 18:08:12'!
PASSED!

!testRun: #ReportTest #test07 stamp: 'fr 11/11/2020 18:08:12'!
PASSED!

!testRun: #ReportTest #test08 stamp: 'fr 11/11/2020 18:08:12'!
PASSED!

!testRun: #ReportTest #test09 stamp: 'fr 11/11/2020 18:08:12'!
PASSED!

!testRun: #ReportTest #test10 stamp: 'fr 11/11/2020 18:08:12'!
PASSED!

!testRun: #ReportTest #test11 stamp: 'fr 11/11/2020 18:08:12'!
PASSED!

!testRun: #ReportTest #test12 stamp: 'fr 11/11/2020 18:08:12'!
PASSED!

!testRun: #ReportTest #test13 stamp: 'fr 11/11/2020 18:08:12'!
FAILURE!

!testRun: #ReportTest #test14 stamp: 'fr 11/11/2020 18:08:12'!
PASSED!

!testRun: #ReportTest #test13 stamp: 'fr 11/11/2020 18:08:12'!
FAILURE!

!testRun: #ReportTest #test14 stamp: 'fr 11/11/2020 18:08:24'!
PASSED!

!testRun: #ReportTest #test01 stamp: 'fr 11/11/2020 18:08:24'!
PASSED!

!testRun: #ReportTest #test02 stamp: 'fr 11/11/2020 18:08:24'!
PASSED!

!testRun: #ReportTest #test03 stamp: 'fr 11/11/2020 18:08:24'!
PASSED!

!testRun: #ReportTest #test04 stamp: 'fr 11/11/2020 18:08:24'!
PASSED!

!testRun: #ReportTest #test05 stamp: 'fr 11/11/2020 18:08:24'!
PASSED!

!testRun: #ReportTest #test06 stamp: 'fr 11/11/2020 18:08:24'!
PASSED!

!testRun: #ReportTest #test07 stamp: 'fr 11/11/2020 18:08:24'!
PASSED!

!testRun: #ReportTest #test08 stamp: 'fr 11/11/2020 18:08:24'!
PASSED!

!testRun: #ReportTest #test09 stamp: 'fr 11/11/2020 18:08:24'!
PASSED!

!testRun: #ReportTest #test10 stamp: 'fr 11/11/2020 18:08:24'!
PASSED!

!testRun: #ReportTest #test11 stamp: 'fr 11/11/2020 18:08:24'!
PASSED!

!testRun: #ReportTest #test12 stamp: 'fr 11/11/2020 18:08:24'!
PASSED!

!testRun: #ReportTest #test13 stamp: 'fr 11/11/2020 18:08:24'!
FAILURE!

!testRun: #ReportTest #test14 stamp: 'fr 11/11/2020 18:08:24'!
PASSED!

!testRun: #ReportTest #test13 stamp: 'fr 11/11/2020 18:08:24'!
FAILURE!

account transferNet!

!testRun: #ReportTest #test14 stamp: 'fr 11/11/2020 18:09:08'!
PASSED!

!testRun: #ReportTest #test01 stamp: 'fr 11/11/2020 18:09:08'!
PASSED!

!testRun: #ReportTest #test02 stamp: 'fr 11/11/2020 18:09:08'!
PASSED!

!testRun: #ReportTest #test03 stamp: 'fr 11/11/2020 18:09:08'!
PASSED!

!testRun: #ReportTest #test04 stamp: 'fr 11/11/2020 18:09:08'!
PASSED!

!testRun: #ReportTest #test05 stamp: 'fr 11/11/2020 18:09:08'!
PASSED!

!testRun: #ReportTest #test06 stamp: 'fr 11/11/2020 18:09:08'!
PASSED!

!testRun: #ReportTest #test07 stamp: 'fr 11/11/2020 18:09:08'!
PASSED!

!testRun: #ReportTest #test08 stamp: 'fr 11/11/2020 18:09:08'!
PASSED!

!testRun: #ReportTest #test09 stamp: 'fr 11/11/2020 18:09:08'!
PASSED!

!testRun: #ReportTest #test10 stamp: 'fr 11/11/2020 18:09:08'!
PASSED!

!testRun: #ReportTest #test11 stamp: 'fr 11/11/2020 18:09:08'!
PASSED!

!testRun: #ReportTest #test12 stamp: 'fr 11/11/2020 18:09:08'!
PASSED!

!testRun: #ReportTest #test13 stamp: 'fr 11/11/2020 18:09:08'!
FAILURE!

!testRun: #ReportTest #test14 stamp: 'fr 11/11/2020 18:09:08'!
PASSED!

!testRun: #ReportTest #test13 stamp: 'fr 11/11/2020 18:09:08'!
FAILURE!
!ReceptiveAccount methodsFor: 'report' stamp: 'fr 11/11/2020 18:09:59' prior: 50871507!
transferNet

	^transactions 
		inject: 0 
		into: [:net :aTransaction | 
			(aTransaction isMemberOf: Withdraw) ifTrue: [net].
			(aTransaction isMemberOf: Deposit) ifTrue: [net].
			(aTransaction isMemberOf: WithdrawByTransference) ifTrue: [net - aTransaction value]
		] ! !

!testRun: #ReportTest #test13 stamp: 'fr 11/11/2020 18:10:03'!
FAILURE!

!testRun: #ReportTest #test14 stamp: 'fr 11/11/2020 18:10:06'!
PASSED!

!testRun: #ReportTest #test01 stamp: 'fr 11/11/2020 18:10:06'!
PASSED!

!testRun: #ReportTest #test02 stamp: 'fr 11/11/2020 18:10:06'!
PASSED!

!testRun: #ReportTest #test03 stamp: 'fr 11/11/2020 18:10:06'!
PASSED!

!testRun: #ReportTest #test04 stamp: 'fr 11/11/2020 18:10:06'!
PASSED!

!testRun: #ReportTest #test05 stamp: 'fr 11/11/2020 18:10:06'!
PASSED!

!testRun: #ReportTest #test06 stamp: 'fr 11/11/2020 18:10:06'!
PASSED!

!testRun: #ReportTest #test07 stamp: 'fr 11/11/2020 18:10:06'!
PASSED!

!testRun: #ReportTest #test08 stamp: 'fr 11/11/2020 18:10:06'!
PASSED!

!testRun: #ReportTest #test09 stamp: 'fr 11/11/2020 18:10:06'!
PASSED!

!testRun: #ReportTest #test10 stamp: 'fr 11/11/2020 18:10:06'!
PASSED!

!testRun: #ReportTest #test11 stamp: 'fr 11/11/2020 18:10:06'!
PASSED!

!testRun: #ReportTest #test12 stamp: 'fr 11/11/2020 18:10:06'!
PASSED!

!testRun: #ReportTest #test13 stamp: 'fr 11/11/2020 18:10:06'!
FAILURE!

!testRun: #ReportTest #test14 stamp: 'fr 11/11/2020 18:10:06'!
PASSED!

!testRun: #ReportTest #test13 stamp: 'fr 11/11/2020 18:10:06'!
FAILURE!

account transferNet!

col _ OrderedCollection with: 1 with: 2.!

col inject: 0 into: [:net :current | net+current].  !

col _ OrderedCollection new.!

col inject: 0 into: [:net :current | net+current].  !

col inject: 0 into: [:net :current | net+current]. !

col inject: 0 into: [:net :current | (current > 0) ifTrue: [net+current]]. !

!testRun: #ReportTest #test13 stamp: 'fr 11/11/2020 18:12:13'!
FAILURE!

!testRun: #ReportTest #test13 stamp: 'fr 11/11/2020 18:12:13'!
FAILURE!

!testRun: #ReportTest #test13 stamp: 'fr 11/11/2020 18:12:20'!
FAILURE!

col _ OrderedCollection with: 'Hola' with: 'Batman'.!

col inject: 0 into: [:net :current | (current isMemberOf: SmallInteger) ifTrue: [net+current]].  !


col   inject: 0 
	into: [:net :current | 
			(current isMemberOf: SmallInteger) ifTrue: [net+current].
			(current isMemberOf: String) ifTrue: [net]		
	].  !


col   inject: 0 
	into: [:net :current | 
			(current isMemberOf: SmallInteger) ifTrue: [net+current].
	].  !

col   inject: 0 
	into: [:net :current | 
			(current isMemberOf: SmallInteger) ifTrue: [net+current].
			(current isMemberOf: String) ifTrue: [net]		
	].  !

!testRun: #ReportTest #test13 stamp: 'fr 11/11/2020 18:16:21'!
FAILURE!

!testRun: #ReportTest #test13 stamp: 'fr 11/11/2020 18:16:21'!
FAILURE!

aTransaction!

net!

net!

net!

aTransaction!

aTransaction isMemberOf: Deposit!
!ReceptiveAccount methodsFor: 'report' stamp: 'fr 11/11/2020 18:18:08' prior: 50871627!
transferNet

	^transactions 
		inject: 0 
		into: [:net :aTransaction | 
			(aTransaction isMemberOf: WithdrawByTransference) ifTrue: [net - aTransaction value].
			(aTransaction isMemberOf: Withdraw) ifTrue: [net].
			(aTransaction isMemberOf: Deposit) ifTrue: [net].
		] ! !

!testRun: #ReportTest #test13 stamp: 'fr 11/11/2020 18:18:10'!
FAILURE!

account transferNet!

net!

transactions 
		inject: 0 
		into: [:net :aTransaction | 
			(aTransaction isMemberOf: WithdrawByTransference) ifTrue: [net - aTransaction value].
			(aTransaction isMemberOf: Withdraw) ifTrue: [net].
			(aTransaction isMemberOf: Deposit) ifTrue: [net].
		] !

!testRun: #ReportTest #test13 stamp: 'fr 11/11/2020 18:19:43'!
FAILURE!

thisValue!

[:each | nextValue _ binaryBlock value: nextValue value: each]!

self do: [:each | nextValue _ binaryBlock value: nextValue value: each]!

self do: [:each | nextValue _ binaryBlock value: nextValue value: each]!

nextValue!

each!

binaryBlock value: nextValue value: each!

binaryBlock value: nextValue value: each!

nextValue!

each!

binaryBlock!

self value: 0 value: (Withdraw register: 100 on: (ReceptiveAccount new))!

self value: 0 value: (Withdraw register: 100 on: (ReceptiveAccount new))!

!testRun: #ReportTest #test13 stamp: 'fr 11/11/2020 18:23:08'!
FAILURE!

!testRun: #ReportTest #test13 stamp: 'fr 11/11/2020 18:23:08'!
FAILURE!
!ReceptiveAccount methodsFor: 'report' stamp: 'fr 11/11/2020 18:23:42' prior: 50871720!
transferNet

	^transactions 
		inject: 0 
		into: [:net :aTransaction | 
			(aTransaction isMemberOf: WithdrawByTransference) ifTrue: [net - aTransaction value] ifFalse: [
			(aTransaction isMemberOf: Withdraw) ifTrue: [net] ifFalse: [
			(aTransaction isMemberOf: Deposit) ifTrue: [net] ] ]
		] ! !

!testRun: #ReportTest #test13 stamp: 'fr 11/11/2020 18:23:44'!
PASSED!

!testRun: #ReportTest #test13 stamp: 'fr 11/11/2020 18:23:45'!
PASSED!

!testRun: #ReportTest #test01 stamp: 'fr 11/11/2020 18:23:45'!
PASSED!

!testRun: #ReportTest #test02 stamp: 'fr 11/11/2020 18:23:45'!
PASSED!

!testRun: #ReportTest #test03 stamp: 'fr 11/11/2020 18:23:45'!
PASSED!

!testRun: #ReportTest #test04 stamp: 'fr 11/11/2020 18:23:45'!
PASSED!

!testRun: #ReportTest #test05 stamp: 'fr 11/11/2020 18:23:45'!
PASSED!

!testRun: #ReportTest #test06 stamp: 'fr 11/11/2020 18:23:45'!
PASSED!

!testRun: #ReportTest #test07 stamp: 'fr 11/11/2020 18:23:45'!
PASSED!

!testRun: #ReportTest #test08 stamp: 'fr 11/11/2020 18:23:45'!
PASSED!

!testRun: #ReportTest #test09 stamp: 'fr 11/11/2020 18:23:45'!
PASSED!

!testRun: #ReportTest #test10 stamp: 'fr 11/11/2020 18:23:45'!
PASSED!

!testRun: #ReportTest #test11 stamp: 'fr 11/11/2020 18:23:45'!
PASSED!

!testRun: #ReportTest #test12 stamp: 'fr 11/11/2020 18:23:45'!
PASSED!

!testRun: #ReportTest #test13 stamp: 'fr 11/11/2020 18:23:45'!
PASSED!

!testRun: #ReportTest #test14 stamp: 'fr 11/11/2020 18:23:45'!
PASSED!
!ReportTest methodsFor: 'as yet unclassified' stamp: 'fr 11/11/2020 18:23:56'!
test15

	| account anotherAccount |
	
	account _ ReceptiveAccount new.
	anotherAccount _ ReceptiveAccount new.
	
	Transfer move: 100 from: account to: anotherAccount.
	
	self assert: [account transferNet = -100]! !
!ReportTest methodsFor: 'as yet unclassified' stamp: 'fr 11/11/2020 18:24:04' prior: 50871814!
test15

	| account anotherAccount |
	
	account _ ReceptiveAccount new.
	anotherAccount _ ReceptiveAccount new.
	
	Transfer move: 100 from: anotherAccount to: account.
	
	self assert: [account transferNet = 100]! !

!testRun: #ReportTest #test15 stamp: 'fr 11/11/2020 18:24:05'!
FAILURE!

!methodRemoval: ReportTest #test13 stamp: 'fr 11/11/2020 18:25:45'!
test13

	| account |
	
	account _ ReceptiveAccount new.
	Deposit register: 100 on: account.
	Withdraw register: 50 on: account. 
	
	self assert: [account transferNet = 0]!

!methodRemoval: ReportTest #test14 stamp: 'fr 11/11/2020 18:25:48'!
test14

	| account anotherAccount |
	
	account _ ReceptiveAccount new.
	anotherAccount _ ReceptiveAccount new.
	
	Transfer move: 100 from: account to: anotherAccount.
	
	self assert: [account transferNet = -100]!

!methodRemoval: ReportTest #test15 stamp: 'fr 11/11/2020 18:25:49'!
test15

	| account anotherAccount |
	
	account _ ReceptiveAccount new.
	anotherAccount _ ReceptiveAccount new.
	
	Transfer move: 100 from: anotherAccount to: account.
	
	self assert: [account transferNet = 100]!

!methodRemoval: ReceptiveAccount #transferNet stamp: 'fr 11/11/2020 18:25:57'!
transferNet

	^transactions 
		inject: 0 
		into: [:net :aTransaction | 
			(aTransaction isMemberOf: WithdrawByTransference) ifTrue: [net - aTransaction value] ifFalse: [
			(aTransaction isMemberOf: Withdraw) ifTrue: [net] ifFalse: [
			(aTransaction isMemberOf: Deposit) ifTrue: [net] ] ]
		] !
!ReportTest methodsFor: 'as yet unclassified' stamp: 'fr 11/11/2020 18:26:04'!
test13

	| portfolio account anotherPortfolio anotherAccount |
	
	account _ ReceptiveAccount new.		
	anotherAccount _ ReceptiveAccount new.		
	portfolio _ Portfolio with: account.
	anotherPortfolio _ Portfolio with: portfolio.
	anotherPortfolio add: anotherAccount.

	Transfer move: 100 from: account to: anotherAccount.

		
	self assert: [anotherPortfolio accountSummary = (OrderedCollection with: 'Salida por transferencia de 100.' with: 'Entrada por transferencia de 100.' with: 'Balance = 0')]! !
!ReportTest methodsFor: 'as yet unclassified' stamp: 'fr 11/11/2020 18:27:15' prior: 50871873!
test13

	| account |
	
	account _ ReceptiveAccount new.
	
	self assert: [account netTransfer = 0]! !

!testRun: #ReportTest #test13 stamp: 'fr 11/11/2020 18:27:25'!
ERROR!
!ReceptiveAccount methodsFor: 'report' stamp: 'fr 11/11/2020 18:27:32'!
netTransfer
	self shouldBeImplemented.! !
!ReceptiveAccount methodsFor: 'report' stamp: 'fr 11/11/2020 18:27:56' prior: 50871900!
netTransfer
	
	^0! !

!testRun: #ReportTest #test13 stamp: 'fr 11/11/2020 18:27:58'!
PASSED!

!testRun: #ReportTest #test01 stamp: 'fr 11/11/2020 18:27:58'!
PASSED!

!testRun: #ReportTest #test02 stamp: 'fr 11/11/2020 18:27:58'!
PASSED!

!testRun: #ReportTest #test03 stamp: 'fr 11/11/2020 18:27:58'!
PASSED!

!testRun: #ReportTest #test04 stamp: 'fr 11/11/2020 18:27:58'!
PASSED!

!testRun: #ReportTest #test05 stamp: 'fr 11/11/2020 18:27:58'!
PASSED!

!testRun: #ReportTest #test06 stamp: 'fr 11/11/2020 18:27:58'!
PASSED!

!testRun: #ReportTest #test07 stamp: 'fr 11/11/2020 18:27:58'!
PASSED!

!testRun: #ReportTest #test08 stamp: 'fr 11/11/2020 18:27:58'!
PASSED!

!testRun: #ReportTest #test09 stamp: 'fr 11/11/2020 18:27:58'!
PASSED!

!testRun: #ReportTest #test10 stamp: 'fr 11/11/2020 18:27:58'!
PASSED!

!testRun: #ReportTest #test11 stamp: 'fr 11/11/2020 18:27:58'!
PASSED!

!testRun: #ReportTest #test12 stamp: 'fr 11/11/2020 18:27:58'!
PASSED!

!testRun: #ReportTest #test13 stamp: 'fr 11/11/2020 18:27:58'!
PASSED!
!ReportTest methodsFor: 'as yet unclassified' stamp: 'fr 11/11/2020 18:28:02'!
test14

	| account |
	
	account _ ReceptiveAccount new.
	
	self assert: [account netTransfer = 0]! !
!ReportTest methodsFor: 'as yet unclassified' stamp: 'fr 11/11/2020 18:29:13' prior: 50871940!
test14

	| account anotherAccount |
	
	account _ ReceptiveAccount new.
	anotherAccount _ ReceptiveAccount new.
	
	Transfer move: 100 from: account to: anotherAccount.
	
	self assert: [account netTransfer = 0]! !
!ReportTest methodsFor: 'as yet unclassified' stamp: 'fr 11/11/2020 18:29:23' prior: 50871947!
test14

	| account anotherAccount |
	
	account _ ReceptiveAccount new.
	anotherAccount _ ReceptiveAccount new.
	
	Transfer move: 100 from: account to: anotherAccount.
	
	self assert: [account netTransfer = -100]! !

!testRun: #ReportTest #test14 stamp: 'fr 11/11/2020 18:29:49'!
FAILURE!

!testRun: #ReportTest #test14 stamp: 'fr 11/11/2020 18:30:40'!
FAILURE!
!ReceptiveAccount methodsFor: 'report' stamp: 'fr 11/11/2020 18:31:39' prior: 50871905!
netTransfer
	
	^transactions ifEmpty: [0] ifNotEmpty: [100] ! !

!testRun: #ReportTest #test14 stamp: 'fr 11/11/2020 18:31:42'!
FAILURE!

!testRun: #ReportTest #test14 stamp: 'fr 11/11/2020 18:31:44'!
FAILURE!
!ReceptiveAccount methodsFor: 'report' stamp: 'fr 11/11/2020 18:31:56' prior: 50871972!
netTransfer
	
	^transactions ifEmpty: [0] ifNotEmpty: [-100] ! !

!testRun: #ReportTest #test14 stamp: 'fr 11/11/2020 18:31:57'!
PASSED!

!testRun: #ReportTest #test01 stamp: 'fr 11/11/2020 18:31:57'!
PASSED!

!testRun: #ReportTest #test02 stamp: 'fr 11/11/2020 18:31:57'!
PASSED!

!testRun: #ReportTest #test03 stamp: 'fr 11/11/2020 18:31:57'!
PASSED!

!testRun: #ReportTest #test04 stamp: 'fr 11/11/2020 18:31:57'!
PASSED!

!testRun: #ReportTest #test05 stamp: 'fr 11/11/2020 18:31:57'!
PASSED!

!testRun: #ReportTest #test06 stamp: 'fr 11/11/2020 18:31:57'!
PASSED!

!testRun: #ReportTest #test07 stamp: 'fr 11/11/2020 18:31:57'!
PASSED!

!testRun: #ReportTest #test08 stamp: 'fr 11/11/2020 18:31:57'!
PASSED!

!testRun: #ReportTest #test09 stamp: 'fr 11/11/2020 18:31:57'!
PASSED!

!testRun: #ReportTest #test10 stamp: 'fr 11/11/2020 18:31:57'!
PASSED!

!testRun: #ReportTest #test11 stamp: 'fr 11/11/2020 18:31:57'!
PASSED!

!testRun: #ReportTest #test12 stamp: 'fr 11/11/2020 18:31:57'!
PASSED!

!testRun: #ReportTest #test13 stamp: 'fr 11/11/2020 18:31:57'!
PASSED!

!testRun: #ReportTest #test14 stamp: 'fr 11/11/2020 18:31:57'!
PASSED!
!ReportTest methodsFor: 'as yet unclassified' stamp: 'fr 11/11/2020 18:32:00'!
test15

	| account anotherAccount |
	
	account _ ReceptiveAccount new.
	anotherAccount _ ReceptiveAccount new.
	
	Transfer move: 100 from: account to: anotherAccount.
	
	self assert: [account netTransfer = -100]! !
!ReportTest methodsFor: 'as yet unclassified' stamp: 'fr 11/11/2020 18:32:10' prior: 50872021!
test15

	| account anotherAccount |
	
	account _ ReceptiveAccount new.
	anotherAccount _ ReceptiveAccount new.
	
	Transfer move: 100 from: anotherAccount to: account .
	
	self assert: [account netTransfer = -100]! !
!ReportTest methodsFor: 'as yet unclassified' stamp: 'fr 11/11/2020 18:32:11' prior: 50872031!
test15

	| account anotherAccount |
	
	account _ ReceptiveAccount new.
	anotherAccount _ ReceptiveAccount new.
	
	Transfer move: 100 from: anotherAccount to: account.
	
	self assert: [account netTransfer = -100]! !
!ReportTest methodsFor: 'as yet unclassified' stamp: 'fr 11/11/2020 18:32:13' prior: 50872041!
test15

	| account anotherAccount |
	
	account _ ReceptiveAccount new.
	anotherAccount _ ReceptiveAccount new.
	
	Transfer move: 100 from: anotherAccount to: account.
	
	self assert: [account netTransfer = 100]! !

!testRun: #ReportTest #test15 stamp: 'fr 11/11/2020 18:32:31'!
FAILURE!
!ReceptiveAccount methodsFor: 'report' stamp: 'fr 11/11/2020 18:33:29' prior: 50871982!
netTransfer
	
	^transactions ifEmpty: [0] ifNotEmpty: [transactions sum: [:aTransaction | aTransaction value]] ! !

!testRun: #ReportTest #test15 stamp: 'fr 11/11/2020 18:33:30'!
PASSED!

!testRun: #ReportTest #test01 stamp: 'fr 11/11/2020 18:33:30'!
PASSED!

!testRun: #ReportTest #test02 stamp: 'fr 11/11/2020 18:33:30'!
PASSED!

!testRun: #ReportTest #test03 stamp: 'fr 11/11/2020 18:33:30'!
PASSED!

!testRun: #ReportTest #test04 stamp: 'fr 11/11/2020 18:33:30'!
PASSED!

!testRun: #ReportTest #test05 stamp: 'fr 11/11/2020 18:33:30'!
PASSED!

!testRun: #ReportTest #test06 stamp: 'fr 11/11/2020 18:33:30'!
PASSED!

!testRun: #ReportTest #test07 stamp: 'fr 11/11/2020 18:33:30'!
PASSED!

!testRun: #ReportTest #test08 stamp: 'fr 11/11/2020 18:33:30'!
PASSED!

!testRun: #ReportTest #test09 stamp: 'fr 11/11/2020 18:33:30'!
PASSED!

!testRun: #ReportTest #test10 stamp: 'fr 11/11/2020 18:33:30'!
PASSED!

!testRun: #ReportTest #test11 stamp: 'fr 11/11/2020 18:33:30'!
PASSED!

!testRun: #ReportTest #test12 stamp: 'fr 11/11/2020 18:33:30'!
PASSED!

!testRun: #ReportTest #test13 stamp: 'fr 11/11/2020 18:33:30'!
PASSED!

!testRun: #ReportTest #test14 stamp: 'fr 11/11/2020 18:33:30'!
FAILURE!

!testRun: #ReportTest #test15 stamp: 'fr 11/11/2020 18:33:30'!
PASSED!

!testRun: #ReportTest #test14 stamp: 'fr 11/11/2020 18:33:30'!
FAILURE!
!ReceptiveAccount methodsFor: 'report' stamp: 'fr 11/11/2020 18:34:13' prior: 50872063!
netTransfer
	
	^self balance! !

!testRun: #ReportTest #test14 stamp: 'fr 11/11/2020 18:34:14'!
PASSED!

!testRun: #ReportTest #test15 stamp: 'fr 11/11/2020 18:34:16'!
PASSED!

!testRun: #ReportTest #test01 stamp: 'fr 11/11/2020 18:34:16'!
PASSED!

!testRun: #ReportTest #test02 stamp: 'fr 11/11/2020 18:34:16'!
PASSED!

!testRun: #ReportTest #test03 stamp: 'fr 11/11/2020 18:34:16'!
PASSED!

!testRun: #ReportTest #test04 stamp: 'fr 11/11/2020 18:34:16'!
PASSED!

!testRun: #ReportTest #test05 stamp: 'fr 11/11/2020 18:34:16'!
PASSED!

!testRun: #ReportTest #test06 stamp: 'fr 11/11/2020 18:34:16'!
PASSED!

!testRun: #ReportTest #test07 stamp: 'fr 11/11/2020 18:34:16'!
PASSED!

!testRun: #ReportTest #test08 stamp: 'fr 11/11/2020 18:34:16'!
PASSED!

!testRun: #ReportTest #test09 stamp: 'fr 11/11/2020 18:34:16'!
PASSED!

!testRun: #ReportTest #test10 stamp: 'fr 11/11/2020 18:34:16'!
PASSED!

!testRun: #ReportTest #test11 stamp: 'fr 11/11/2020 18:34:16'!
PASSED!

!testRun: #ReportTest #test12 stamp: 'fr 11/11/2020 18:34:16'!
PASSED!

!testRun: #ReportTest #test13 stamp: 'fr 11/11/2020 18:34:16'!
PASSED!

!testRun: #ReportTest #test14 stamp: 'fr 11/11/2020 18:34:16'!
PASSED!

!testRun: #ReportTest #test15 stamp: 'fr 11/11/2020 18:34:16'!
PASSED!
!ReportTest methodsFor: 'as yet unclassified' stamp: 'fr 11/11/2020 18:34:27'!
test16

	| account anotherAccount |
	
	account _ ReceptiveAccount new.
	anotherAccount _ ReceptiveAccount new.
	
	Transfer move: 100 from: anotherAccount to: account.
	
	self assert: [account netTransfer = 100]! !
!ReportTest methodsFor: 'as yet unclassified' stamp: 'fr 11/11/2020 18:35:16' prior: 50872150!
test16

	| account |
	
	account _ ReceptiveAccount new.
	
	Deposit register: 100 on: account. 
		
	self assert: [account netTransfer = 0]! !
!ReportTest methodsFor: 'as yet unclassified' stamp: 'fr 11/11/2020 18:35:18' prior: 50872160!
test16

	| account |
	account _ ReceptiveAccount new.
	
	Deposit register: 100 on: account. 
		
	self assert: [account netTransfer = 0]! !
!ReportTest methodsFor: 'as yet unclassified' stamp: 'fr 11/11/2020 18:35:23' prior: 50872168!
test16

	| account |
	
	account _ ReceptiveAccount new.
	
	Deposit register: 100 on: account. 
		
	self assert: [account netTransfer = 0]! !

!testRun: #ReportTest #test16 stamp: 'fr 11/11/2020 18:35:28'!
FAILURE!
!ReceptiveAccount methodsFor: 'report' stamp: 'fr 11/11/2020 18:41:11' prior: 50872108!
netTransfer
	
	^transactions inject: 0 into: [:currentNetBalance :aTransaction | 
		(aTransaction isMemberOf: WithdrawByTransference) ifTrue: []
	]! !
!ReceptiveAccount methodsFor: 'report' stamp: 'fr 11/11/2020 18:41:50' prior: 50872186!
netTransfer
	
	^transactions inject: 0 into: [:currentNetBalance :aTransaction | 
		(aTransaction isMemberOf: WithdrawByTransference) ifTrue: [aTransaction affectBalance: currentNetBalance]
	]! !
!ReceptiveAccount methodsFor: 'report' stamp: 'fr 11/11/2020 18:42:16' prior: 50872194!
netTransfer
	
	^transactions inject: 0 into: [:currentNetBalance :aTransaction | 
		(aTransaction isMemberOf: WithdrawByTransference) ifTrue: [aTransaction affectBalance: currentNetBalance].
		(aTransaction isMemberOf: DepositByTransference) ifTrue: [aTransaction affectBalance: currentNetBalance].
		(aTransaction isMemberOf: Deposit) ifTrue: [currentNetBalance + 0].
	]! !

!testRun: #ReportTest #test16 stamp: 'fr 11/11/2020 18:42:18'!
PASSED!

!testRun: #ReportTest #test01 stamp: 'fr 11/11/2020 18:42:18'!
PASSED!

!testRun: #ReportTest #test02 stamp: 'fr 11/11/2020 18:42:18'!
PASSED!

!testRun: #ReportTest #test03 stamp: 'fr 11/11/2020 18:42:18'!
PASSED!

!testRun: #ReportTest #test04 stamp: 'fr 11/11/2020 18:42:18'!
PASSED!

!testRun: #ReportTest #test05 stamp: 'fr 11/11/2020 18:42:18'!
PASSED!

!testRun: #ReportTest #test06 stamp: 'fr 11/11/2020 18:42:18'!
PASSED!

!testRun: #ReportTest #test07 stamp: 'fr 11/11/2020 18:42:18'!
PASSED!

!testRun: #ReportTest #test08 stamp: 'fr 11/11/2020 18:42:18'!
PASSED!

!testRun: #ReportTest #test09 stamp: 'fr 11/11/2020 18:42:18'!
PASSED!

!testRun: #ReportTest #test10 stamp: 'fr 11/11/2020 18:42:18'!
PASSED!

!testRun: #ReportTest #test11 stamp: 'fr 11/11/2020 18:42:18'!
PASSED!

!testRun: #ReportTest #test12 stamp: 'fr 11/11/2020 18:42:18'!
PASSED!

!testRun: #ReportTest #test13 stamp: 'fr 11/11/2020 18:42:18'!
PASSED!

!testRun: #ReportTest #test14 stamp: 'fr 11/11/2020 18:42:18'!
FAILURE!

!testRun: #ReportTest #test15 stamp: 'fr 11/11/2020 18:42:18'!
FAILURE!

!testRun: #ReportTest #test16 stamp: 'fr 11/11/2020 18:42:18'!
PASSED!

!testRun: #ReportTest #test14 stamp: 'fr 11/11/2020 18:42:23'!
FAILURE!

!testRun: #ReportTest #test14 stamp: 'fr 11/11/2020 18:42:23'!
FAILURE!

account netTransfer!
!ReceptiveAccount methodsFor: 'report' stamp: 'fr 11/11/2020 18:43:00' prior: 50872203!
netTransfer
	
	^transactions inject: 0 into: [:currentNetBalance :aTransaction | 
		(aTransaction isMemberOf: WithdrawByTransference) ifTrue: [aTransaction affectBalance: currentNetBalance] ifFalse: [
		(aTransaction isMemberOf: DepositByTransference) ifTrue: [aTransaction affectBalance: currentNetBalance] ifFalse: [
		(aTransaction isMemberOf: Deposit) ifTrue: [currentNetBalance + 0] ] ]
	]! !

!testRun: #ReportTest #test14 stamp: 'fr 11/11/2020 18:43:01'!
PASSED!

!testRun: #ReportTest #test14 stamp: 'fr 11/11/2020 18:43:02'!
PASSED!

!testRun: #ReportTest #test01 stamp: 'fr 11/11/2020 18:43:02'!
PASSED!

!testRun: #ReportTest #test02 stamp: 'fr 11/11/2020 18:43:02'!
PASSED!

!testRun: #ReportTest #test03 stamp: 'fr 11/11/2020 18:43:02'!
PASSED!

!testRun: #ReportTest #test04 stamp: 'fr 11/11/2020 18:43:02'!
PASSED!

!testRun: #ReportTest #test05 stamp: 'fr 11/11/2020 18:43:02'!
PASSED!

!testRun: #ReportTest #test06 stamp: 'fr 11/11/2020 18:43:02'!
PASSED!

!testRun: #ReportTest #test07 stamp: 'fr 11/11/2020 18:43:02'!
PASSED!

!testRun: #ReportTest #test08 stamp: 'fr 11/11/2020 18:43:02'!
PASSED!

!testRun: #ReportTest #test09 stamp: 'fr 11/11/2020 18:43:02'!
PASSED!

!testRun: #ReportTest #test10 stamp: 'fr 11/11/2020 18:43:02'!
PASSED!

!testRun: #ReportTest #test11 stamp: 'fr 11/11/2020 18:43:02'!
PASSED!

!testRun: #ReportTest #test12 stamp: 'fr 11/11/2020 18:43:02'!
PASSED!

!testRun: #ReportTest #test13 stamp: 'fr 11/11/2020 18:43:02'!
PASSED!

!testRun: #ReportTest #test14 stamp: 'fr 11/11/2020 18:43:02'!
PASSED!

!testRun: #ReportTest #test15 stamp: 'fr 11/11/2020 18:43:02'!
PASSED!

!testRun: #ReportTest #test16 stamp: 'fr 11/11/2020 18:43:02'!
PASSED!
!ReportTest methodsFor: 'as yet unclassified' stamp: 'fr 11/11/2020 18:43:08'!
test17

	| account |
	
	account _ ReceptiveAccount new.
	
	Deposit register: 100 on: account. 
		
	self assert: [account netTransfer = 0]! !
!ReportTest methodsFor: 'as yet unclassified' stamp: 'fr 11/11/2020 18:43:12' prior: 50872318!
test17

	| account |
	
	account _ ReceptiveAccount new.
	
	Withdraw register: 100 on: account. 
		
	self assert: [account netTransfer = 0]! !

!testRun: #ReportTest #test17 stamp: 'fr 11/11/2020 18:43:12'!
FAILURE!
!ReceptiveAccount methodsFor: 'report' stamp: 'fr 11/11/2020 18:44:32' prior: 50872262!
netTransfer
	
	^transactions inject: 0 into: [:currentNetBalance :aTransaction | 
		(aTransaction isMemberOf: WithdrawByTransference) ifTrue: [aTransaction affectBalance: currentNetBalance] 
		ifFalse: [
		(aTransaction isMemberOf: DepositByTransference) ifTrue: [aTransaction affectBalance: currentNetBalance] 
		ifFalse: [
		(aTransaction isMemberOf: Deposit) ifTrue: [currentNetBalance + 0]
		ifFalse: [
		(aTransaction isMemberOf: Withdraw) ifTrue: [currentNetBalance + 0]]
		]]
	]! !

!testRun: #ReportTest #test17 stamp: 'fr 11/11/2020 18:44:53'!
PASSED!

!testRun: #ReportTest #test01 stamp: 'fr 11/11/2020 18:44:53'!
PASSED!

!testRun: #ReportTest #test02 stamp: 'fr 11/11/2020 18:44:53'!
PASSED!

!testRun: #ReportTest #test03 stamp: 'fr 11/11/2020 18:44:53'!
PASSED!

!testRun: #ReportTest #test04 stamp: 'fr 11/11/2020 18:44:53'!
PASSED!

!testRun: #ReportTest #test05 stamp: 'fr 11/11/2020 18:44:53'!
PASSED!

!testRun: #ReportTest #test06 stamp: 'fr 11/11/2020 18:44:53'!
PASSED!

!testRun: #ReportTest #test07 stamp: 'fr 11/11/2020 18:44:53'!
PASSED!

!testRun: #ReportTest #test08 stamp: 'fr 11/11/2020 18:44:53'!
PASSED!

!testRun: #ReportTest #test09 stamp: 'fr 11/11/2020 18:44:53'!
PASSED!

!testRun: #ReportTest #test10 stamp: 'fr 11/11/2020 18:44:53'!
PASSED!

!testRun: #ReportTest #test11 stamp: 'fr 11/11/2020 18:44:53'!
PASSED!

!testRun: #ReportTest #test12 stamp: 'fr 11/11/2020 18:44:53'!
PASSED!

!testRun: #ReportTest #test13 stamp: 'fr 11/11/2020 18:44:53'!
PASSED!

!testRun: #ReportTest #test14 stamp: 'fr 11/11/2020 18:44:53'!
PASSED!

!testRun: #ReportTest #test15 stamp: 'fr 11/11/2020 18:44:53'!
PASSED!

!testRun: #ReportTest #test16 stamp: 'fr 11/11/2020 18:44:53'!
PASSED!

!testRun: #ReportTest #test17 stamp: 'fr 11/11/2020 18:44:53'!
PASSED!
!ReceptiveAccount methodsFor: 'report' stamp: 'fr 11/11/2020 18:47:25' prior: 50872336!
netTransfer
	
	^transactions inject: 0 into: [:currentNetBalance :aTransaction | 
		((aTransaction isMemberOf: WithdrawByTransference) or: [aTransaction isMemberOf: DepositByTransference])
		ifTrue: [aTransaction affectBalance: currentNetBalance] 
		ifFalse: [currentNetBalance]
	]! !

!testRun: #ReportTest #test01 stamp: 'fr 11/11/2020 18:47:29'!
PASSED!

!testRun: #ReportTest #test02 stamp: 'fr 11/11/2020 18:47:29'!
PASSED!

!testRun: #ReportTest #test03 stamp: 'fr 11/11/2020 18:47:29'!
PASSED!

!testRun: #ReportTest #test04 stamp: 'fr 11/11/2020 18:47:29'!
PASSED!

!testRun: #ReportTest #test05 stamp: 'fr 11/11/2020 18:47:29'!
PASSED!

!testRun: #ReportTest #test06 stamp: 'fr 11/11/2020 18:47:29'!
PASSED!

!testRun: #ReportTest #test07 stamp: 'fr 11/11/2020 18:47:29'!
PASSED!

!testRun: #ReportTest #test08 stamp: 'fr 11/11/2020 18:47:29'!
PASSED!

!testRun: #ReportTest #test09 stamp: 'fr 11/11/2020 18:47:29'!
PASSED!

!testRun: #ReportTest #test10 stamp: 'fr 11/11/2020 18:47:29'!
PASSED!

!testRun: #ReportTest #test11 stamp: 'fr 11/11/2020 18:47:29'!
PASSED!

!testRun: #ReportTest #test12 stamp: 'fr 11/11/2020 18:47:29'!
PASSED!

!testRun: #ReportTest #test13 stamp: 'fr 11/11/2020 18:47:29'!
PASSED!

!testRun: #ReportTest #test14 stamp: 'fr 11/11/2020 18:47:29'!
PASSED!

!testRun: #ReportTest #test15 stamp: 'fr 11/11/2020 18:47:29'!
PASSED!

!testRun: #ReportTest #test16 stamp: 'fr 11/11/2020 18:47:29'!
PASSED!

!testRun: #ReportTest #test17 stamp: 'fr 11/11/2020 18:47:29'!
PASSED!
!ReceptiveAccount methodsFor: 'report' stamp: 'fr 11/11/2020 18:50:27' prior: 50872395!
netTransfer
	
	^(transactions 
	select: [:aTransaction | 
		(aTransaction isMemberOf: WithdrawByTransference) or: [aTransaction isMemberOf: DepositByTransference]]) 
			inject: 0 
			into: [:currentNetBalance :aTransaction | 
					aTransaction affectBalance: currentNetBalance
				]! !

!testRun: #ReportTest #test01 stamp: 'fr 11/11/2020 18:50:30'!
PASSED!

!testRun: #ReportTest #test02 stamp: 'fr 11/11/2020 18:50:30'!
PASSED!

!testRun: #ReportTest #test03 stamp: 'fr 11/11/2020 18:50:30'!
PASSED!

!testRun: #ReportTest #test04 stamp: 'fr 11/11/2020 18:50:30'!
PASSED!

!testRun: #ReportTest #test05 stamp: 'fr 11/11/2020 18:50:30'!
PASSED!

!testRun: #ReportTest #test06 stamp: 'fr 11/11/2020 18:50:30'!
PASSED!

!testRun: #ReportTest #test07 stamp: 'fr 11/11/2020 18:50:30'!
PASSED!

!testRun: #ReportTest #test08 stamp: 'fr 11/11/2020 18:50:30'!
PASSED!

!testRun: #ReportTest #test09 stamp: 'fr 11/11/2020 18:50:30'!
PASSED!

!testRun: #ReportTest #test10 stamp: 'fr 11/11/2020 18:50:30'!
PASSED!

!testRun: #ReportTest #test11 stamp: 'fr 11/11/2020 18:50:30'!
PASSED!

!testRun: #ReportTest #test12 stamp: 'fr 11/11/2020 18:50:30'!
PASSED!

!testRun: #ReportTest #test13 stamp: 'fr 11/11/2020 18:50:30'!
PASSED!

!testRun: #ReportTest #test14 stamp: 'fr 11/11/2020 18:50:30'!
PASSED!

!testRun: #ReportTest #test15 stamp: 'fr 11/11/2020 18:50:30'!
PASSED!

!testRun: #ReportTest #test16 stamp: 'fr 11/11/2020 18:50:30'!
PASSED!

!testRun: #ReportTest #test17 stamp: 'fr 11/11/2020 18:50:30'!
PASSED!
!ReceptiveAccount methodsFor: 'report' stamp: 'fr 11/11/2020 18:51:34'!
transactionsForNetTransferBalance

	^ transactions 
	select: [:aTransaction | 
		(aTransaction isMemberOf: WithdrawByTransference) or: [aTransaction isMemberOf: DepositByTransference]]! !
!ReceptiveAccount methodsFor: 'report' stamp: 'fr 11/11/2020 18:51:34' prior: 50872445!
netTransfer
	
	^(self transactionsForNetTransferBalance) 
			inject: 0 
			into: [:currentNetBalance :aTransaction | 
					aTransaction affectBalance: currentNetBalance
				]! !
!ReceptiveAccount methodsFor: 'report' stamp: 'fr 11/11/2020 18:51:44' prior: 50872495!
transactionsForNetTransferBalance

	^transactions 
	select: [:aTransaction | 
		(aTransaction isMemberOf: WithdrawByTransference) or: [aTransaction isMemberOf: DepositByTransference]]! !
!ReceptiveAccount methodsFor: 'report' stamp: 'fr 11/11/2020 18:51:51' prior: 50872513!
transactionsForNetTransferBalance

	^transactions 
		select: [:aTransaction | 
			(aTransaction isMemberOf: WithdrawByTransference) 
			or: [aTransaction isMemberOf: DepositByTransference]]! !
!ReportTest methodsFor: 'as yet unclassified' stamp: 'fr 11/11/2020 18:52:54' prior: 50870245!
test09

	| portfolio account anotherAccount |
	
	portfolio _ Portfolio new.
	account _ ReceptiveAccount new.
	anotherAccount _ ReceptiveAccount new.

	Transfer move: 10 from: account to: anotherAccount.
		
	portfolio add: account.
	portfolio add: anotherAccount.
		
	self assert: [portfolio accountSummary = (OrderedCollection with: 'Salida por transferencia de 10.' with: 'Entrada por transferencia de 20.' with: 'Balance = 10')]! !

!testRun: #ReportTest #test01 stamp: 'fr 11/11/2020 18:52:55'!
PASSED!

!testRun: #ReportTest #test02 stamp: 'fr 11/11/2020 18:52:55'!
PASSED!

!testRun: #ReportTest #test03 stamp: 'fr 11/11/2020 18:52:55'!
PASSED!

!testRun: #ReportTest #test04 stamp: 'fr 11/11/2020 18:52:55'!
PASSED!

!testRun: #ReportTest #test05 stamp: 'fr 11/11/2020 18:52:55'!
PASSED!

!testRun: #ReportTest #test06 stamp: 'fr 11/11/2020 18:52:55'!
PASSED!

!testRun: #ReportTest #test07 stamp: 'fr 11/11/2020 18:52:55'!
PASSED!

!testRun: #ReportTest #test08 stamp: 'fr 11/11/2020 18:52:55'!
PASSED!

!testRun: #ReportTest #test09 stamp: 'fr 11/11/2020 18:52:55'!
FAILURE!

!testRun: #ReportTest #test10 stamp: 'fr 11/11/2020 18:52:55'!
PASSED!

!testRun: #ReportTest #test11 stamp: 'fr 11/11/2020 18:52:55'!
PASSED!

!testRun: #ReportTest #test12 stamp: 'fr 11/11/2020 18:52:55'!
PASSED!

!testRun: #ReportTest #test13 stamp: 'fr 11/11/2020 18:52:55'!
PASSED!

!testRun: #ReportTest #test14 stamp: 'fr 11/11/2020 18:52:55'!
PASSED!

!testRun: #ReportTest #test15 stamp: 'fr 11/11/2020 18:52:55'!
PASSED!

!testRun: #ReportTest #test16 stamp: 'fr 11/11/2020 18:52:55'!
PASSED!

!testRun: #ReportTest #test17 stamp: 'fr 11/11/2020 18:52:55'!
PASSED!

!testRun: #ReportTest #test09 stamp: 'fr 11/11/2020 18:52:55'!
FAILURE!
!ReportTest methodsFor: 'as yet unclassified' stamp: 'fr 11/11/2020 18:53:00' prior: 50872531!
test09

	| portfolio account anotherAccount |
	
	portfolio _ Portfolio new.
	account _ ReceptiveAccount new.
	anotherAccount _ ReceptiveAccount new.

	Transfer move: 10 from: account to: anotherAccount.
		
	portfolio add: account.
	portfolio add: anotherAccount.
		
	self assert: [portfolio accountSummary = (OrderedCollection with: 'Salida por transferencia de 10.' with: 'Entrada por transferencia de 10.' with: 'Balance = 10')]! !
!ReportTest methodsFor: 'as yet unclassified' stamp: 'fr 11/11/2020 18:53:03' prior: 50872589!
test09

	| portfolio account anotherAccount |
	
	portfolio _ Portfolio new.
	account _ ReceptiveAccount new.
	anotherAccount _ ReceptiveAccount new.

	Transfer move: 10 from: account to: anotherAccount.
		
	portfolio add: account.
	portfolio add: anotherAccount.
		
	self assert: [portfolio accountSummary = (OrderedCollection with: 'Salida por transferencia de 10.' with: 'Entrada por transferencia de 10.' with: 'Balance = 0')]! !

!testRun: #ReportTest #test09 stamp: 'fr 11/11/2020 18:53:04'!
PASSED!

!testRun: #ReportTest #test01 stamp: 'fr 11/11/2020 18:53:04'!
PASSED!

!testRun: #ReportTest #test02 stamp: 'fr 11/11/2020 18:53:04'!
PASSED!

!testRun: #ReportTest #test03 stamp: 'fr 11/11/2020 18:53:04'!
PASSED!

!testRun: #ReportTest #test04 stamp: 'fr 11/11/2020 18:53:04'!
PASSED!

!testRun: #ReportTest #test05 stamp: 'fr 11/11/2020 18:53:04'!
PASSED!

!testRun: #ReportTest #test06 stamp: 'fr 11/11/2020 18:53:04'!
PASSED!

!testRun: #ReportTest #test07 stamp: 'fr 11/11/2020 18:53:04'!
PASSED!

!testRun: #ReportTest #test08 stamp: 'fr 11/11/2020 18:53:04'!
PASSED!

!testRun: #ReportTest #test09 stamp: 'fr 11/11/2020 18:53:04'!
PASSED!

!testRun: #ReportTest #test10 stamp: 'fr 11/11/2020 18:53:04'!
PASSED!

!testRun: #ReportTest #test11 stamp: 'fr 11/11/2020 18:53:04'!
PASSED!

!testRun: #ReportTest #test12 stamp: 'fr 11/11/2020 18:53:04'!
PASSED!

!testRun: #ReportTest #test13 stamp: 'fr 11/11/2020 18:53:04'!
PASSED!

!testRun: #ReportTest #test14 stamp: 'fr 11/11/2020 18:53:04'!
PASSED!

!testRun: #ReportTest #test15 stamp: 'fr 11/11/2020 18:53:04'!
PASSED!

!testRun: #ReportTest #test16 stamp: 'fr 11/11/2020 18:53:04'!
PASSED!

!testRun: #ReportTest #test17 stamp: 'fr 11/11/2020 18:53:04'!
PASSED!
!ReportTest methodsFor: 'as yet unclassified' stamp: 'fr 11/11/2020 18:53:35'!
test18

	| account |
	
	account _ ReceptiveAccount new.
	
	Withdraw register: 100 on: account. 
		
	self assert: [account netTransfer = 0]! !
!ReportTest methodsFor: 'as yet unclassified' stamp: 'fr 11/11/2020 18:54:01' prior: 50872663!
test18

	| account |
	
	account _ ReceptiveAccount new.
	
	Withdraw register: 100 on: account. 
		
	self assert: [account netTransfer = 0]! !
!ReportTest methodsFor: 'as yet unclassified' stamp: 'fr 11/11/2020 18:54:04' prior: 50872671!
test18

	| portfolio |
	
	portfolio _ ReceptiveAccount new.
	
	Withdraw register: 100 on: portfolio. 
		
	self assert: [portfolio netTransfer = 0]! !
!ReportTest methodsFor: 'as yet unclassified' stamp: 'fr 11/11/2020 18:54:06' prior: 50872679!
test18

	| portfolio |
	
	portfolio _ Portfolio new.
	
	Withdraw register: 100 on: portfolio. 
		
	self assert: [portfolio netTransfer = 0]! !
!ReportTest methodsFor: 'as yet unclassified' stamp: 'fr 11/11/2020 18:54:09' prior: 50872687!
test18

	| portfolio |
	
	portfolio _ Portfolio new.
			
	self assert: [portfolio netTransfer = 0]! !

!testRun: #ReportTest #test18 stamp: 'fr 11/11/2020 18:54:10'!
ERROR!
!Portfolio methodsFor: 'report' stamp: 'fr 11/11/2020 18:54:25'!
netTransfer
	self shouldBeImplemented.! !
!Portfolio methodsFor: 'report' stamp: 'fr 11/11/2020 18:54:28' prior: 50872703!
netTransfer
	
	^0! !

!testRun: #ReportTest #test18 stamp: 'fr 11/11/2020 18:54:29'!
PASSED!

!testRun: #ReportTest #test01 stamp: 'fr 11/11/2020 18:54:29'!
PASSED!

!testRun: #ReportTest #test02 stamp: 'fr 11/11/2020 18:54:29'!
PASSED!

!testRun: #ReportTest #test03 stamp: 'fr 11/11/2020 18:54:29'!
PASSED!

!testRun: #ReportTest #test04 stamp: 'fr 11/11/2020 18:54:29'!
PASSED!

!testRun: #ReportTest #test05 stamp: 'fr 11/11/2020 18:54:29'!
PASSED!

!testRun: #ReportTest #test06 stamp: 'fr 11/11/2020 18:54:29'!
PASSED!

!testRun: #ReportTest #test07 stamp: 'fr 11/11/2020 18:54:29'!
PASSED!

!testRun: #ReportTest #test08 stamp: 'fr 11/11/2020 18:54:29'!
PASSED!

!testRun: #ReportTest #test09 stamp: 'fr 11/11/2020 18:54:29'!
PASSED!

!testRun: #ReportTest #test10 stamp: 'fr 11/11/2020 18:54:29'!
PASSED!

!testRun: #ReportTest #test11 stamp: 'fr 11/11/2020 18:54:29'!
PASSED!

!testRun: #ReportTest #test12 stamp: 'fr 11/11/2020 18:54:29'!
PASSED!

!testRun: #ReportTest #test13 stamp: 'fr 11/11/2020 18:54:29'!
PASSED!

!testRun: #ReportTest #test14 stamp: 'fr 11/11/2020 18:54:29'!
PASSED!

!testRun: #ReportTest #test15 stamp: 'fr 11/11/2020 18:54:29'!
PASSED!

!testRun: #ReportTest #test16 stamp: 'fr 11/11/2020 18:54:29'!
PASSED!

!testRun: #ReportTest #test17 stamp: 'fr 11/11/2020 18:54:29'!
PASSED!

!testRun: #ReportTest #test18 stamp: 'fr 11/11/2020 18:54:29'!
PASSED!
!ReportTest methodsFor: 'as yet unclassified' stamp: 'fr 11/11/2020 18:54:32'!
test19

	| portfolio |
	
	portfolio _ Portfolio new.
			
	self assert: [portfolio netTransfer = 0]! !
!ReportTest methodsFor: 'as yet unclassified' stamp: 'fr 11/11/2020 18:54:45' prior: 50872753!
test19

	| portfolio account |
	account _ ReceptiveAccount new.
	portfolio _ Portfolio with: account.
			
	self assert: [portfolio netTransfer = 0]! !
!ReportTest methodsFor: 'as yet unclassified' stamp: 'fr 11/11/2020 18:54:51' prior: 50872760!
test19

	| portfolio account |
	
	account _ ReceptiveAccount new.
	portfolio _ Portfolio with: account.
			
	self assert: [portfolio netTransfer = 0]! !
!ReportTest methodsFor: 'as yet unclassified' stamp: 'fr 11/11/2020 18:55:46' prior: 50872768!
test19

	| portfolio account anotherAccount |
	
	account _ ReceptiveAccount new.
	anotherAccount _ ReceptiveAccount new.
	portfolio _ Portfolio with: account.
	
	Transfer move: 10 from: account to: anotherAccount.
			
	self assert: [portfolio netTransfer = 0]! !
!ReportTest methodsFor: 'as yet unclassified' stamp: 'fr 11/11/2020 18:55:51' prior: 50872776!
test19

	| portfolio account anotherAccount |
	
	account _ ReceptiveAccount new.
	anotherAccount _ ReceptiveAccount new.
	portfolio _ Portfolio with: account.
	
	Transfer move: 10 from: account to: anotherAccount.
			
	self assert: [portfolio netTransfer = -10]! !

!testRun: #ReportTest #test19 stamp: 'fr 11/11/2020 18:55:54'!
FAILURE!
!Portfolio methodsFor: 'report' stamp: 'fr 11/11/2020 18:56:26' prior: 50872707!
netTransfer
	
	^accounts ifEmpty: [0] ifNotEmpty: [-10]! !

!testRun: #ReportTest #test19 stamp: 'fr 11/11/2020 18:56:28'!
FAILURE!

!testRun: #ReportTest #test19 stamp: 'fr 11/11/2020 18:56:59'!
PASSED!

!testRun: #ReportTest #test01 stamp: 'fr 11/11/2020 18:56:59'!
PASSED!

!testRun: #ReportTest #test02 stamp: 'fr 11/11/2020 18:56:59'!
PASSED!

!testRun: #ReportTest #test03 stamp: 'fr 11/11/2020 18:56:59'!
PASSED!

!testRun: #ReportTest #test04 stamp: 'fr 11/11/2020 18:56:59'!
PASSED!

!testRun: #ReportTest #test05 stamp: 'fr 11/11/2020 18:56:59'!
PASSED!

!testRun: #ReportTest #test06 stamp: 'fr 11/11/2020 18:56:59'!
PASSED!

!testRun: #ReportTest #test07 stamp: 'fr 11/11/2020 18:56:59'!
PASSED!

!testRun: #ReportTest #test08 stamp: 'fr 11/11/2020 18:56:59'!
PASSED!

!testRun: #ReportTest #test09 stamp: 'fr 11/11/2020 18:56:59'!
PASSED!

!testRun: #ReportTest #test10 stamp: 'fr 11/11/2020 18:56:59'!
PASSED!

!testRun: #ReportTest #test11 stamp: 'fr 11/11/2020 18:56:59'!
PASSED!

!testRun: #ReportTest #test12 stamp: 'fr 11/11/2020 18:56:59'!
PASSED!

!testRun: #ReportTest #test13 stamp: 'fr 11/11/2020 18:56:59'!
PASSED!

!testRun: #ReportTest #test14 stamp: 'fr 11/11/2020 18:56:59'!
PASSED!

!testRun: #ReportTest #test15 stamp: 'fr 11/11/2020 18:56:59'!
PASSED!

!testRun: #ReportTest #test16 stamp: 'fr 11/11/2020 18:56:59'!
PASSED!

!testRun: #ReportTest #test17 stamp: 'fr 11/11/2020 18:56:59'!
PASSED!

!testRun: #ReportTest #test18 stamp: 'fr 11/11/2020 18:56:59'!
PASSED!

!testRun: #ReportTest #test19 stamp: 'fr 11/11/2020 18:56:59'!
PASSED!
!ReportTest methodsFor: 'as yet unclassified' stamp: 'fr 11/11/2020 18:57:05'!
test20

	| portfolio account anotherAccount |
	
	account _ ReceptiveAccount new.
	anotherAccount _ ReceptiveAccount new.
	portfolio _ Portfolio with: account.
	
	Transfer move: 10 from: account to: anotherAccount.
			
	self assert: [portfolio netTransfer = -10]! !
!ReportTest methodsFor: 'as yet unclassified' stamp: 'fr 11/11/2020 18:57:41'!
test01AccountSummaryForAccountWithNoTransactionsShouldJustShowBalanceZero

	| account |
	
	account _ ReceptiveAccount new.
	
	self assert: [account accountSummary = (OrderedCollection with: 'Balance = 0')]! !

!methodRemoval: ReportTest #test01 stamp: 'fr 11/11/2020 18:57:41'!
test01

	| account |
	
	account _ ReceptiveAccount new.
	
	self assert: [account accountSummary = (OrderedCollection with: 'Balance = 0')]!
!ReportTest methodsFor: 'as yet unclassified' stamp: 'fr 11/11/2020 18:58:02'!
test02AccountSummaryShouldReflectDeposits

	| account |
	
	account _ ReceptiveAccount new.
	Deposit register: 100 on: account. 
	
	self assert: [account accountSummary = (OrderedCollection with: 'Dep�sito por 100.' with: 'Balance = 100')]! !

!methodRemoval: ReportTest #test02 stamp: 'fr 11/11/2020 18:58:02'!
test02

	| account |
	
	account _ ReceptiveAccount new.
	Deposit register: 100 on: account. 
	
	self assert: [account accountSummary = (OrderedCollection with: 'Dep�sito por 100.' with: 'Balance = 100')]!
!ReportTest methodsFor: 'as yet unclassified' stamp: 'fr 11/11/2020 18:58:31'!
test03AccountSummaryShouldReflectWithdraws

	| account |
	
	account _ ReceptiveAccount new.
	Withdraw register: 100 on: account. 
	
	self assert: [account accountSummary = (OrderedCollection with: 'Extracci�n por 100.' with: 'Balance = -100')]! !

!methodRemoval: ReportTest #test03 stamp: 'fr 11/11/2020 18:58:31'!
test03

	| account |
	
	account _ ReceptiveAccount new.
	Withdraw register: 100 on: account. 
	
	self assert: [account accountSummary = (OrderedCollection with: 'Extracci�n por 100.' with: 'Balance = -100')]!
!ReportTest methodsFor: 'as yet unclassified' stamp: 'fr 11/11/2020 18:58:55'!
test04AccountSummaryShouldReflectOutgoingTransfers

	| account anotherAccount |
	
	account _ ReceptiveAccount new.
	anotherAccount _ ReceptiveAccount new.
	
	Transfer move: 100 from: account to: anotherAccount.
	
	self assert: [account accountSummary = (OrderedCollection with: 'Salida por transferencia de 100.' with: 'Balance = -100')]! !

!methodRemoval: ReportTest #test04 stamp: 'fr 11/11/2020 18:58:55'!
test04

	| account anotherAccount |
	
	account _ ReceptiveAccount new.
	anotherAccount _ ReceptiveAccount new.
	
	Transfer move: 100 from: account to: anotherAccount.
	
	self assert: [account accountSummary = (OrderedCollection with: 'Salida por transferencia de 100.' with: 'Balance = -100')]!
!ReportTest methodsFor: 'as yet unclassified' stamp: 'fr 11/11/2020 18:59:11'!
test05AccountSummaryShouldReflectIncomingTransfers

	| account anotherAccount |
	
	account _ ReceptiveAccount new.
	anotherAccount _ ReceptiveAccount new.
	
	Transfer move: 100 from: anotherAccount to: account.
	
	self assert: [account accountSummary = (OrderedCollection with: 'Entrada por transferencia de 100.' with: 'Balance = 100')]! !

!methodRemoval: ReportTest #test05 stamp: 'fr 11/11/2020 18:59:11'!
test05

	| account anotherAccount |
	
	account _ ReceptiveAccount new.
	anotherAccount _ ReceptiveAccount new.
	
	Transfer move: 100 from: anotherAccount to: account.
	
	self assert: [account accountSummary = (OrderedCollection with: 'Entrada por transferencia de 100.' with: 'Balance = 100')]!

!testRun: #ReportTest #test01AccountSummaryForAccountWithNoTransactionsShouldJustShowBalanceZero stamp: 'fr 11/11/2020 18:59:14'!
PASSED!

!testRun: #ReportTest #test02AccountSummaryShouldReflectDeposits stamp: 'fr 11/11/2020 18:59:14'!
PASSED!

!testRun: #ReportTest #test03AccountSummaryShouldReflectWithdraws stamp: 'fr 11/11/2020 18:59:14'!
PASSED!

!testRun: #ReportTest #test04AccountSummaryShouldReflectOutgoingTransfers stamp: 'fr 11/11/2020 18:59:14'!
PASSED!

!testRun: #ReportTest #test05AccountSummaryShouldReflectIncomingTransfers stamp: 'fr 11/11/2020 18:59:14'!
PASSED!

!testRun: #ReportTest #test06 stamp: 'fr 11/11/2020 18:59:15'!
PASSED!

!testRun: #ReportTest #test07 stamp: 'fr 11/11/2020 18:59:15'!
PASSED!

!testRun: #ReportTest #test08 stamp: 'fr 11/11/2020 18:59:15'!
PASSED!

!testRun: #ReportTest #test09 stamp: 'fr 11/11/2020 18:59:15'!
PASSED!

!testRun: #ReportTest #test10 stamp: 'fr 11/11/2020 18:59:15'!
PASSED!

!testRun: #ReportTest #test11 stamp: 'fr 11/11/2020 18:59:15'!
PASSED!

!testRun: #ReportTest #test12 stamp: 'fr 11/11/2020 18:59:15'!
PASSED!

!testRun: #ReportTest #test13 stamp: 'fr 11/11/2020 18:59:15'!
PASSED!

!testRun: #ReportTest #test14 stamp: 'fr 11/11/2020 18:59:15'!
PASSED!

!testRun: #ReportTest #test15 stamp: 'fr 11/11/2020 18:59:15'!
PASSED!

!testRun: #ReportTest #test16 stamp: 'fr 11/11/2020 18:59:15'!
PASSED!

!testRun: #ReportTest #test17 stamp: 'fr 11/11/2020 18:59:15'!
PASSED!

!testRun: #ReportTest #test18 stamp: 'fr 11/11/2020 18:59:15'!
PASSED!

!testRun: #ReportTest #test19 stamp: 'fr 11/11/2020 18:59:15'!
PASSED!

!testRun: #ReportTest #test20 stamp: 'fr 11/11/2020 18:59:15'!
PASSED!
!ReportTest methodsFor: 'as yet unclassified' stamp: 'fr 11/11/2020 18:59:33'!
test05AccountSummaryShouldReflectIncomingTransfersOnAccounts

	| account anotherAccount |
	
	account _ ReceptiveAccount new.
	anotherAccount _ ReceptiveAccount new.
	
	Transfer move: 100 from: anotherAccount to: account.
	
	self assert: [account accountSummary = (OrderedCollection with: 'Entrada por transferencia de 100.' with: 'Balance = 100')]! !

!methodRemoval: ReportTest #test05AccountSummaryShouldReflectIncomingTransfers stamp: 'fr 11/11/2020 18:59:33'!
test05AccountSummaryShouldReflectIncomingTransfers

	| account anotherAccount |
	
	account _ ReceptiveAccount new.
	anotherAccount _ ReceptiveAccount new.
	
	Transfer move: 100 from: anotherAccount to: account.
	
	self assert: [account accountSummary = (OrderedCollection with: 'Entrada por transferencia de 100.' with: 'Balance = 100')]!
!ReportTest methodsFor: 'as yet unclassified' stamp: 'fr 11/11/2020 18:59:41'!
test04AccountSummaryShouldReflectOutgoingTransfersOnAccounts

	| account anotherAccount |
	
	account _ ReceptiveAccount new.
	anotherAccount _ ReceptiveAccount new.
	
	Transfer move: 100 from: account to: anotherAccount.
	
	self assert: [account accountSummary = (OrderedCollection with: 'Salida por transferencia de 100.' with: 'Balance = -100')]! !

!methodRemoval: ReportTest #test04AccountSummaryShouldReflectOutgoingTransfers stamp: 'fr 11/11/2020 18:59:41'!
test04AccountSummaryShouldReflectOutgoingTransfers

	| account anotherAccount |
	
	account _ ReceptiveAccount new.
	anotherAccount _ ReceptiveAccount new.
	
	Transfer move: 100 from: account to: anotherAccount.
	
	self assert: [account accountSummary = (OrderedCollection with: 'Salida por transferencia de 100.' with: 'Balance = -100')]!
!ReportTest methodsFor: 'as yet unclassified' stamp: 'fr 11/11/2020 18:59:48'!
test03AccountSummaryShouldReflectWithdrawsOnAccounts

	| account |
	
	account _ ReceptiveAccount new.
	Withdraw register: 100 on: account. 
	
	self assert: [account accountSummary = (OrderedCollection with: 'Extracci�n por 100.' with: 'Balance = -100')]! !

!methodRemoval: ReportTest #test03AccountSummaryShouldReflectWithdraws stamp: 'fr 11/11/2020 18:59:48'!
test03AccountSummaryShouldReflectWithdraws

	| account |
	
	account _ ReceptiveAccount new.
	Withdraw register: 100 on: account. 
	
	self assert: [account accountSummary = (OrderedCollection with: 'Extracci�n por 100.' with: 'Balance = -100')]!
!ReportTest methodsFor: 'as yet unclassified' stamp: 'fr 11/11/2020 18:59:56'!
test02AccountSummaryShouldReflectDepositsOnAccounts

	| account |
	
	account _ ReceptiveAccount new.
	Deposit register: 100 on: account. 
	
	self assert: [account accountSummary = (OrderedCollection with: 'Dep�sito por 100.' with: 'Balance = 100')]! !

!methodRemoval: ReportTest #test02AccountSummaryShouldReflectDeposits stamp: 'fr 11/11/2020 18:59:56'!
test02AccountSummaryShouldReflectDeposits

	| account |
	
	account _ ReceptiveAccount new.
	Deposit register: 100 on: account. 
	
	self assert: [account accountSummary = (OrderedCollection with: 'Dep�sito por 100.' with: 'Balance = 100')]!
!ReportTest methodsFor: 'as yet unclassified' stamp: 'fr 11/11/2020 19:01:23'!
test06AccountSummaryForPortfolioWithNoTransactionsShouldJustShowBalanceZero

	| portfolio |
	
	portfolio _ Portfolio new.
	
	self assert: [portfolio accountSummary = (OrderedCollection with: 'Balance = 0')]! !

!methodRemoval: ReportTest #test06 stamp: 'fr 11/11/2020 19:01:23'!
test06

	| portfolio |
	
	portfolio _ Portfolio new.
	
	self assert: [portfolio accountSummary = (OrderedCollection with: 'Balance = 0')]!
!ReportTest methodsFor: 'as yet unclassified' stamp: 'fr 11/11/2020 19:01:58'!
test07AccountSummaryShouldReflectDepositsOnPortfolios

	| portfolio account |
	
	portfolio _ Portfolio new.
	account _ ReceptiveAccount new.
	Deposit register: 100 on: account.
	
	portfolio add: account.
		
	self assert: [portfolio accountSummary = (OrderedCollection with: 'Dep�sito por 100.' with: 'Balance = 100')]! !

!methodRemoval: ReportTest #test07 stamp: 'fr 11/11/2020 19:01:58'!
test07

	| portfolio account |
	
	portfolio _ Portfolio new.
	account _ ReceptiveAccount new.
	Deposit register: 100 on: account.
	
	portfolio add: account.
		
	self assert: [portfolio accountSummary = (OrderedCollection with: 'Dep�sito por 100.' with: 'Balance = 100')]!
!ReportTest methodsFor: 'as yet unclassified' stamp: 'fr 11/11/2020 19:02:21'!
test08AccountSummaryShouldReflectWithdrawsOnPortfolios

	| portfolio account |
	
	portfolio _ Portfolio new.
	account _ ReceptiveAccount new.
	Withdraw register: 100 on: account.
	
	portfolio add: account.
		
	self assert: [portfolio accountSummary = (OrderedCollection with: 'Extracci�n por 100.' with: 'Balance = -100')]! !

!methodRemoval: ReportTest #test08 stamp: 'fr 11/11/2020 19:02:21'!
test08

	| portfolio account |
	
	portfolio _ Portfolio new.
	account _ ReceptiveAccount new.
	Withdraw register: 100 on: account.
	
	portfolio add: account.
		
	self assert: [portfolio accountSummary = (OrderedCollection with: 'Extracci�n por 100.' with: 'Balance = -100')]!
!ReportTest methodsFor: 'as yet unclassified' stamp: 'fr 11/11/2020 19:03:07'!
test09AccountSummaryShouldReflectOutgoingAndIncomingTransfersOnPortfolios

	| portfolio account anotherAccount |
	
	portfolio _ Portfolio new.
	account _ ReceptiveAccount new.
	anotherAccount _ ReceptiveAccount new.

	Transfer move: 10 from: account to: anotherAccount.
		
	portfolio add: account.
	portfolio add: anotherAccount.
		
	self assert: [portfolio accountSummary = (OrderedCollection with: 'Salida por transferencia de 10.' with: 'Entrada por transferencia de 10.' with: 'Balance = 0')]! !

!methodRemoval: ReportTest #test09 stamp: 'fr 11/11/2020 19:03:07'!
test09

	| portfolio account anotherAccount |
	
	portfolio _ Portfolio new.
	account _ ReceptiveAccount new.
	anotherAccount _ ReceptiveAccount new.

	Transfer move: 10 from: account to: anotherAccount.
		
	portfolio add: account.
	portfolio add: anotherAccount.
		
	self assert: [portfolio accountSummary = (OrderedCollection with: 'Salida por transferencia de 10.' with: 'Entrada por transferencia de 10.' with: 'Balance = 0')]!
!ReportTest methodsFor: 'as yet unclassified' stamp: 'fr 11/11/2020 19:03:45'!
test07AccountSummaryShouldReflectDepositsOnPortfoliosWithAccounts

	| portfolio account |
	
	portfolio _ Portfolio new.
	account _ ReceptiveAccount new.
	Deposit register: 100 on: account.
	
	portfolio add: account.
		
	self assert: [portfolio accountSummary = (OrderedCollection with: 'Dep�sito por 100.' with: 'Balance = 100')]! !

!methodRemoval: ReportTest #test07AccountSummaryShouldReflectDepositsOnPortfolios stamp: 'fr 11/11/2020 19:03:45'!
test07AccountSummaryShouldReflectDepositsOnPortfolios

	| portfolio account |
	
	portfolio _ Portfolio new.
	account _ ReceptiveAccount new.
	Deposit register: 100 on: account.
	
	portfolio add: account.
		
	self assert: [portfolio accountSummary = (OrderedCollection with: 'Dep�sito por 100.' with: 'Balance = 100')]!
!ReportTest methodsFor: 'as yet unclassified' stamp: 'fr 11/11/2020 19:03:51'!
test08AccountSummaryShouldReflectWithdrawsOnPortfoliosWithAccounts

	| portfolio account |
	
	portfolio _ Portfolio new.
	account _ ReceptiveAccount new.
	Withdraw register: 100 on: account.
	
	portfolio add: account.
		
	self assert: [portfolio accountSummary = (OrderedCollection with: 'Extracci�n por 100.' with: 'Balance = -100')]! !

!methodRemoval: ReportTest #test08AccountSummaryShouldReflectWithdrawsOnPortfolios stamp: 'fr 11/11/2020 19:03:51'!
test08AccountSummaryShouldReflectWithdrawsOnPortfolios

	| portfolio account |
	
	portfolio _ Portfolio new.
	account _ ReceptiveAccount new.
	Withdraw register: 100 on: account.
	
	portfolio add: account.
		
	self assert: [portfolio accountSummary = (OrderedCollection with: 'Extracci�n por 100.' with: 'Balance = -100')]!
!ReportTest methodsFor: 'as yet unclassified' stamp: 'fr 11/11/2020 19:03:57'!
test09AccountSummaryShouldReflectOutgoingAndIncomingTransfersOnPortfoliosWithAccounts

	| portfolio account anotherAccount |
	
	portfolio _ Portfolio new.
	account _ ReceptiveAccount new.
	anotherAccount _ ReceptiveAccount new.

	Transfer move: 10 from: account to: anotherAccount.
		
	portfolio add: account.
	portfolio add: anotherAccount.
		
	self assert: [portfolio accountSummary = (OrderedCollection with: 'Salida por transferencia de 10.' with: 'Entrada por transferencia de 10.' with: 'Balance = 0')]! !

!methodRemoval: ReportTest #test09AccountSummaryShouldReflectOutgoingAndIncomingTransfersOnPortfolios stamp: 'fr 11/11/2020 19:03:57'!
test09AccountSummaryShouldReflectOutgoingAndIncomingTransfersOnPortfolios

	| portfolio account anotherAccount |
	
	portfolio _ Portfolio new.
	account _ ReceptiveAccount new.
	anotherAccount _ ReceptiveAccount new.

	Transfer move: 10 from: account to: anotherAccount.
		
	portfolio add: account.
	portfolio add: anotherAccount.
		
	self assert: [portfolio accountSummary = (OrderedCollection with: 'Salida por transferencia de 10.' with: 'Entrada por transferencia de 10.' with: 'Balance = 0')]!
!ReportTest methodsFor: 'as yet unclassified' stamp: 'fr 11/11/2020 19:04:34'!
test10AccountSummaryShouldReflectDepositsOnPortfoliosWithPortfolios

	| portfolio account anotherPortfolio |
	
	account _ ReceptiveAccount new.		
	portfolio _ Portfolio with: account.
	anotherPortfolio _ Portfolio with: portfolio.

	Deposit register: 100 on: account.

		
	self assert: [anotherPortfolio accountSummary = (OrderedCollection with: 'Dep�sito por 100.' with: 'Balance = 100')]! !

!methodRemoval: ReportTest #test10 stamp: 'fr 11/11/2020 19:04:34'!
test10

	| portfolio account anotherPortfolio |
	
	account _ ReceptiveAccount new.		
	portfolio _ Portfolio with: account.
	anotherPortfolio _ Portfolio with: portfolio.

	Deposit register: 100 on: account.

		
	self assert: [anotherPortfolio accountSummary = (OrderedCollection with: 'Dep�sito por 100.' with: 'Balance = 100')]!
!ReportTest methodsFor: 'as yet unclassified' stamp: 'fr 11/11/2020 19:04:55'!
test11AccountSummaryShouldReflectWithdrawsOnPortfoliosWithPortfolios

	| portfolio account anotherPortfolio |
	
	account _ ReceptiveAccount new.		
	portfolio _ Portfolio with: account.
	anotherPortfolio _ Portfolio with: portfolio.

	Withdraw register: 100 on: account.

		
	self assert: [anotherPortfolio accountSummary = (OrderedCollection with: 'Extracci�n por 100.' with: 'Balance = -100')]! !

!methodRemoval: ReportTest #test11 stamp: 'fr 11/11/2020 19:04:55'!
test11

	| portfolio account anotherPortfolio |
	
	account _ ReceptiveAccount new.		
	portfolio _ Portfolio with: account.
	anotherPortfolio _ Portfolio with: portfolio.

	Withdraw register: 100 on: account.

		
	self assert: [anotherPortfolio accountSummary = (OrderedCollection with: 'Extracci�n por 100.' with: 'Balance = -100')]!
!ReportTest methodsFor: 'as yet unclassified' stamp: 'fr 11/11/2020 19:05:25'!
test12AccountSummaryShouldReflectOutgoingAndIncomingTransfersOnPortfoliosWithPortfolios

	| portfolio account anotherPortfolio anotherAccount |
	
	account _ ReceptiveAccount new.		
	anotherAccount _ ReceptiveAccount new.		
	portfolio _ Portfolio with: account.
	anotherPortfolio _ Portfolio with: portfolio.
	anotherPortfolio add: anotherAccount.

	Transfer move: 100 from: account to: anotherAccount.

		
	self assert: [anotherPortfolio accountSummary = (OrderedCollection with: 'Salida por transferencia de 100.' with: 'Entrada por transferencia de 100.' with: 'Balance = 0')]! !

!methodRemoval: ReportTest #test12 stamp: 'fr 11/11/2020 19:05:25'!
test12

	| portfolio account anotherPortfolio anotherAccount |
	
	account _ ReceptiveAccount new.		
	anotherAccount _ ReceptiveAccount new.		
	portfolio _ Portfolio with: account.
	anotherPortfolio _ Portfolio with: portfolio.
	anotherPortfolio add: anotherAccount.

	Transfer move: 100 from: account to: anotherAccount.

		
	self assert: [anotherPortfolio accountSummary = (OrderedCollection with: 'Salida por transferencia de 100.' with: 'Entrada por transferencia de 100.' with: 'Balance = 0')]!
!ReportTest methodsFor: 'as yet unclassified' stamp: 'fr 11/11/2020 19:06:02'!
test13NetTransferOfAccountWithNoTransactionsShouldBeZero

	| account |
	
	account _ ReceptiveAccount new.
	
	self assert: [account netTransfer = 0]! !

!methodRemoval: ReportTest #test13 stamp: 'fr 11/11/2020 19:06:02'!
test13

	| account |
	
	account _ ReceptiveAccount new.
	
	self assert: [account netTransfer = 0]!
!ReportTest methodsFor: 'as yet unclassified' stamp: 'fr 11/11/2020 19:06:31'!
test14NetTransferOfAccountWithAnOutgoingTransferShouldReflectItsValue

	| account anotherAccount |
	
	account _ ReceptiveAccount new.
	anotherAccount _ ReceptiveAccount new.
	
	Transfer move: 100 from: account to: anotherAccount.
	
	self assert: [account netTransfer = -100]! !

!methodRemoval: ReportTest #test14 stamp: 'fr 11/11/2020 19:06:31'!
test14

	| account anotherAccount |
	
	account _ ReceptiveAccount new.
	anotherAccount _ ReceptiveAccount new.
	
	Transfer move: 100 from: account to: anotherAccount.
	
	self assert: [account netTransfer = -100]!
!ReportTest methodsFor: 'as yet unclassified' stamp: 'fr 11/11/2020 19:07:00'!
test15NetTransferOfAccountWithAnIncomingTransferShouldReflectItsValue

	| account anotherAccount |
	
	account _ ReceptiveAccount new.
	anotherAccount _ ReceptiveAccount new.
	
	Transfer move: 100 from: anotherAccount to: account.
	
	self assert: [account netTransfer = 100]! !

!methodRemoval: ReportTest #test15 stamp: 'fr 11/11/2020 19:07:00'!
test15

	| account anotherAccount |
	
	account _ ReceptiveAccount new.
	anotherAccount _ ReceptiveAccount new.
	
	Transfer move: 100 from: anotherAccount to: account.
	
	self assert: [account netTransfer = 100]!
!ReportTest methodsFor: 'as yet unclassified' stamp: 'fr 11/11/2020 19:07:29'!
test16NetTransferShouldNotReflectDeposits

	| account |
	
	account _ ReceptiveAccount new.
	
	Deposit register: 100 on: account. 
		
	self assert: [account netTransfer = 0]! !

!methodRemoval: ReportTest #test16 stamp: 'fr 11/11/2020 19:07:29'!
test16

	| account |
	
	account _ ReceptiveAccount new.
	
	Deposit register: 100 on: account. 
		
	self assert: [account netTransfer = 0]!
!ReportTest methodsFor: 'as yet unclassified' stamp: 'fr 11/11/2020 19:07:42'!
test17NetTransferShouldNotReflectWithdraws

	| account |
	
	account _ ReceptiveAccount new.
	
	Withdraw register: 100 on: account. 
		
	self assert: [account netTransfer = 0]! !

!methodRemoval: ReportTest #test17 stamp: 'fr 11/11/2020 19:07:42'!
test17

	| account |
	
	account _ ReceptiveAccount new.
	
	Withdraw register: 100 on: account. 
		
	self assert: [account netTransfer = 0]!
!ReportTest methodsFor: 'as yet unclassified' stamp: 'fr 11/11/2020 19:08:19'!
test16NetTransferOfAccountShouldNotReflectDeposits

	| account |
	
	account _ ReceptiveAccount new.
	
	Deposit register: 100 on: account. 
		
	self assert: [account netTransfer = 0]! !

!methodRemoval: ReportTest #test16NetTransferShouldNotReflectDeposits stamp: 'fr 11/11/2020 19:08:19'!
test16NetTransferShouldNotReflectDeposits

	| account |
	
	account _ ReceptiveAccount new.
	
	Deposit register: 100 on: account. 
		
	self assert: [account netTransfer = 0]!
!ReportTest methodsFor: 'as yet unclassified' stamp: 'fr 11/11/2020 19:08:28'!
test17NetTransferOfAccountShouldNotReflectWithdraws

	| account |
	
	account _ ReceptiveAccount new.
	
	Withdraw register: 100 on: account. 
		
	self assert: [account netTransfer = 0]! !

!methodRemoval: ReportTest #test17NetTransferShouldNotReflectWithdraws stamp: 'fr 11/11/2020 19:08:28'!
test17NetTransferShouldNotReflectWithdraws

	| account |
	
	account _ ReceptiveAccount new.
	
	Withdraw register: 100 on: account. 
		
	self assert: [account netTransfer = 0]!
!ReportTest methodsFor: 'as yet unclassified' stamp: 'fr 11/11/2020 19:08:55'!
test13NetTransferForAccountWithNoTransactionsShouldBeZero

	| account |
	
	account _ ReceptiveAccount new.
	
	self assert: [account netTransfer = 0]! !

!methodRemoval: ReportTest #test13NetTransferOfAccountWithNoTransactionsShouldBeZero stamp: 'fr 11/11/2020 19:08:55'!
test13NetTransferOfAccountWithNoTransactionsShouldBeZero

	| account |
	
	account _ ReceptiveAccount new.
	
	self assert: [account netTransfer = 0]!
!ReportTest methodsFor: 'as yet unclassified' stamp: 'fr 11/11/2020 19:09:00'!
test14NetTransferForAccountWithAnOutgoingTransferShouldReflectItsValue

	| account anotherAccount |
	
	account _ ReceptiveAccount new.
	anotherAccount _ ReceptiveAccount new.
	
	Transfer move: 100 from: account to: anotherAccount.
	
	self assert: [account netTransfer = -100]! !

!methodRemoval: ReportTest #test14NetTransferOfAccountWithAnOutgoingTransferShouldReflectItsValue stamp: 'fr 11/11/2020 19:09:00'!
test14NetTransferOfAccountWithAnOutgoingTransferShouldReflectItsValue

	| account anotherAccount |
	
	account _ ReceptiveAccount new.
	anotherAccount _ ReceptiveAccount new.
	
	Transfer move: 100 from: account to: anotherAccount.
	
	self assert: [account netTransfer = -100]!
!ReportTest methodsFor: 'as yet unclassified' stamp: 'fr 11/11/2020 19:09:05'!
test15NetTransferForAccountWithAnIncomingTransferShouldReflectItsValue

	| account anotherAccount |
	
	account _ ReceptiveAccount new.
	anotherAccount _ ReceptiveAccount new.
	
	Transfer move: 100 from: anotherAccount to: account.
	
	self assert: [account netTransfer = 100]! !

!methodRemoval: ReportTest #test15NetTransferOfAccountWithAnIncomingTransferShouldReflectItsValue stamp: 'fr 11/11/2020 19:09:05'!
test15NetTransferOfAccountWithAnIncomingTransferShouldReflectItsValue

	| account anotherAccount |
	
	account _ ReceptiveAccount new.
	anotherAccount _ ReceptiveAccount new.
	
	Transfer move: 100 from: anotherAccount to: account.
	
	self assert: [account netTransfer = 100]!
!ReportTest methodsFor: 'as yet unclassified' stamp: 'fr 11/11/2020 19:09:11'!
test16NetTransferForAccountShouldNotReflectDeposits

	| account |
	
	account _ ReceptiveAccount new.
	
	Deposit register: 100 on: account. 
		
	self assert: [account netTransfer = 0]! !

!methodRemoval: ReportTest #test16NetTransferOfAccountShouldNotReflectDeposits stamp: 'fr 11/11/2020 19:09:11'!
test16NetTransferOfAccountShouldNotReflectDeposits

	| account |
	
	account _ ReceptiveAccount new.
	
	Deposit register: 100 on: account. 
		
	self assert: [account netTransfer = 0]!
!ReportTest methodsFor: 'as yet unclassified' stamp: 'fr 11/11/2020 19:09:17'!
test17NetTransferForAccountShouldNotReflectWithdraws

	| account |
	
	account _ ReceptiveAccount new.
	
	Withdraw register: 100 on: account. 
		
	self assert: [account netTransfer = 0]! !

!methodRemoval: ReportTest #test17NetTransferOfAccountShouldNotReflectWithdraws stamp: 'fr 11/11/2020 19:09:17'!
test17NetTransferOfAccountShouldNotReflectWithdraws

	| account |
	
	account _ ReceptiveAccount new.
	
	Withdraw register: 100 on: account. 
		
	self assert: [account netTransfer = 0]!

!testRun: #ReportTest #test20 stamp: 'fr 11/11/2020 19:09:37'!
PASSED!

!testRun: #ReportTest #test01AccountSummaryForAccountWithNoTransactionsShouldJustShowBalanceZero stamp: 'fr 11/11/2020 19:09:37'!
PASSED!

!testRun: #ReportTest #test02AccountSummaryShouldReflectDepositsOnAccounts stamp: 'fr 11/11/2020 19:09:37'!
PASSED!

!testRun: #ReportTest #test03AccountSummaryShouldReflectWithdrawsOnAccounts stamp: 'fr 11/11/2020 19:09:37'!
PASSED!

!testRun: #ReportTest #test04AccountSummaryShouldReflectOutgoingTransfersOnAccounts stamp: 'fr 11/11/2020 19:09:37'!
PASSED!

!testRun: #ReportTest #test05AccountSummaryShouldReflectIncomingTransfersOnAccounts stamp: 'fr 11/11/2020 19:09:37'!
PASSED!

!testRun: #ReportTest #test06AccountSummaryForPortfolioWithNoTransactionsShouldJustShowBalanceZero stamp: 'fr 11/11/2020 19:09:37'!
PASSED!

!testRun: #ReportTest #test07AccountSummaryShouldReflectDepositsOnPortfoliosWithAccounts stamp: 'fr 11/11/2020 19:09:37'!
PASSED!

!testRun: #ReportTest #test08AccountSummaryShouldReflectWithdrawsOnPortfoliosWithAccounts stamp: 'fr 11/11/2020 19:09:37'!
PASSED!

!testRun: #ReportTest #test09AccountSummaryShouldReflectOutgoingAndIncomingTransfersOnPortfoliosWithAccounts stamp: 'fr 11/11/2020 19:09:37'!
PASSED!

!testRun: #ReportTest #test10AccountSummaryShouldReflectDepositsOnPortfoliosWithPortfolios stamp: 'fr 11/11/2020 19:09:37'!
PASSED!

!testRun: #ReportTest #test11AccountSummaryShouldReflectWithdrawsOnPortfoliosWithPortfolios stamp: 'fr 11/11/2020 19:09:37'!
PASSED!

!testRun: #ReportTest #test12AccountSummaryShouldReflectOutgoingAndIncomingTransfersOnPortfoliosWithPortfolios stamp: 'fr 11/11/2020 19:09:37'!
PASSED!

!testRun: #ReportTest #test13NetTransferForAccountWithNoTransactionsShouldBeZero stamp: 'fr 11/11/2020 19:09:37'!
PASSED!

!testRun: #ReportTest #test14NetTransferForAccountWithAnOutgoingTransferShouldReflectItsValue stamp: 'fr 11/11/2020 19:09:37'!
PASSED!

!testRun: #ReportTest #test15NetTransferForAccountWithAnIncomingTransferShouldReflectItsValue stamp: 'fr 11/11/2020 19:09:37'!
PASSED!

!testRun: #ReportTest #test16NetTransferForAccountShouldNotReflectDeposits stamp: 'fr 11/11/2020 19:09:37'!
PASSED!

!testRun: #ReportTest #test17NetTransferForAccountShouldNotReflectWithdraws stamp: 'fr 11/11/2020 19:09:37'!
PASSED!

!testRun: #ReportTest #test18 stamp: 'fr 11/11/2020 19:09:37'!
PASSED!

!testRun: #ReportTest #test19 stamp: 'fr 11/11/2020 19:09:37'!
PASSED!

!testRun: #ReportTest #test20 stamp: 'fr 11/11/2020 19:09:37'!
PASSED!
!ReportTest methodsFor: 'as yet unclassified' stamp: 'fr 11/11/2020 19:10:22'!
test18NetTransferForPortfolioWithNoTransactionsShouldBeZero

	| portfolio |
	
	portfolio _ Portfolio new.
			
	self assert: [portfolio netTransfer = 0]! !

!methodRemoval: ReportTest #test18 stamp: 'fr 11/11/2020 19:10:22'!
test18

	| portfolio |
	
	portfolio _ Portfolio new.
			
	self assert: [portfolio netTransfer = 0]!
!ReportTest methodsFor: 'as yet unclassified' stamp: 'fr 11/11/2020 19:10:54'!
test19NetTransferForPortfolioWithAnOutgoingTransferShouldReflectItsValue

	| portfolio account anotherAccount |
	
	account _ ReceptiveAccount new.
	anotherAccount _ ReceptiveAccount new.
	portfolio _ Portfolio with: account.
	
	Transfer move: 10 from: account to: anotherAccount.
			
	self assert: [portfolio netTransfer = -10]! !

!methodRemoval: ReportTest #test19 stamp: 'fr 11/11/2020 19:10:54'!
test19

	| portfolio account anotherAccount |
	
	account _ ReceptiveAccount new.
	anotherAccount _ ReceptiveAccount new.
	portfolio _ Portfolio with: account.
	
	Transfer move: 10 from: account to: anotherAccount.
			
	self assert: [portfolio netTransfer = -10]!
!ReportTest methodsFor: 'as yet unclassified' stamp: 'fr 11/11/2020 19:11:10' prior: 50872854!
test20

	| portfolio account anotherAccount |
	
	account _ ReceptiveAccount new.
	anotherAccount _ ReceptiveAccount new.
	portfolio _ Portfolio with: account.
	
	Transfer move: 10 from: anotherAccount to: account.
			
	self assert: [portfolio netTransfer = 10]! !

!testRun: #ReportTest #test20 stamp: 'fr 11/11/2020 19:11:10'!
FAILURE!
!Portfolio methodsFor: 'report' stamp: 'fr 11/11/2020 20:05:07' prior: 50872802!
netTransfer
	
	^accounts do: [:anAccount |
		(anAccount isMemberOf: ReceptiveAccount) ifTrue: [
			anAccount transactions inject: 0 into: [:currentNetBalance :aTransaction | 
				aTransaction 	affectBalance: currentNetBalance 
			]
		]
	]! !

!testRun: #ReportTest #test20 stamp: 'fr 11/11/2020 20:05:09'!
FAILURE!

!testRun: #ReportTest #test20 stamp: 'fr 11/11/2020 20:05:19'!
PASSED!

!testRun: #ReportTest #test01AccountSummaryForAccountWithNoTransactionsShouldJustShowBalanceZero stamp: 'fr 11/11/2020 20:05:20'!
PASSED!

!testRun: #ReportTest #test02AccountSummaryShouldReflectDepositsOnAccounts stamp: 'fr 11/11/2020 20:05:20'!
PASSED!

!testRun: #ReportTest #test03AccountSummaryShouldReflectWithdrawsOnAccounts stamp: 'fr 11/11/2020 20:05:20'!
PASSED!

!testRun: #ReportTest #test04AccountSummaryShouldReflectOutgoingTransfersOnAccounts stamp: 'fr 11/11/2020 20:05:20'!
PASSED!

!testRun: #ReportTest #test05AccountSummaryShouldReflectIncomingTransfersOnAccounts stamp: 'fr 11/11/2020 20:05:20'!
PASSED!

!testRun: #ReportTest #test06AccountSummaryForPortfolioWithNoTransactionsShouldJustShowBalanceZero stamp: 'fr 11/11/2020 20:05:20'!
PASSED!

!testRun: #ReportTest #test07AccountSummaryShouldReflectDepositsOnPortfoliosWithAccounts stamp: 'fr 11/11/2020 20:05:20'!
PASSED!

!testRun: #ReportTest #test08AccountSummaryShouldReflectWithdrawsOnPortfoliosWithAccounts stamp: 'fr 11/11/2020 20:05:20'!
PASSED!

!testRun: #ReportTest #test09AccountSummaryShouldReflectOutgoingAndIncomingTransfersOnPortfoliosWithAccounts stamp: 'fr 11/11/2020 20:05:20'!
PASSED!

!testRun: #ReportTest #test10AccountSummaryShouldReflectDepositsOnPortfoliosWithPortfolios stamp: 'fr 11/11/2020 20:05:20'!
PASSED!

!testRun: #ReportTest #test11AccountSummaryShouldReflectWithdrawsOnPortfoliosWithPortfolios stamp: 'fr 11/11/2020 20:05:20'!
PASSED!

!testRun: #ReportTest #test12AccountSummaryShouldReflectOutgoingAndIncomingTransfersOnPortfoliosWithPortfolios stamp: 'fr 11/11/2020 20:05:20'!
PASSED!

!testRun: #ReportTest #test13NetTransferForAccountWithNoTransactionsShouldBeZero stamp: 'fr 11/11/2020 20:05:20'!
PASSED!

!testRun: #ReportTest #test14NetTransferForAccountWithAnOutgoingTransferShouldReflectItsValue stamp: 'fr 11/11/2020 20:05:20'!
PASSED!

!testRun: #ReportTest #test15NetTransferForAccountWithAnIncomingTransferShouldReflectItsValue stamp: 'fr 11/11/2020 20:05:20'!
PASSED!

!testRun: #ReportTest #test16NetTransferForAccountShouldNotReflectDeposits stamp: 'fr 11/11/2020 20:05:20'!
PASSED!

!testRun: #ReportTest #test17NetTransferForAccountShouldNotReflectWithdraws stamp: 'fr 11/11/2020 20:05:20'!
PASSED!

!testRun: #ReportTest #test18NetTransferForPortfolioWithNoTransactionsShouldBeZero stamp: 'fr 11/11/2020 20:05:20'!
FAILURE!

!testRun: #ReportTest #test19NetTransferForPortfolioWithAnOutgoingTransferShouldReflectItsValue stamp: 'fr 11/11/2020 20:05:20'!
FAILURE!

!testRun: #ReportTest #test20 stamp: 'fr 11/11/2020 20:05:20'!
FAILURE!

!testRun: #ReportTest #test18NetTransferForPortfolioWithNoTransactionsShouldBeZero stamp: 'fr 11/11/2020 20:05:34'!
FAILURE!

!testRun: #ReportTest #test18NetTransferForPortfolioWithNoTransactionsShouldBeZero stamp: 'fr 11/11/2020 20:05:34'!
FAILURE!

portfolio netTransfer!

portfolio netTransfer!

!testRun: #ReportTest #test18NetTransferForPortfolioWithNoTransactionsShouldBeZero stamp: 'fr 11/11/2020 20:06:42'!
FAILURE!

!testRun: #ReportTest #test18NetTransferForPortfolioWithNoTransactionsShouldBeZero stamp: 'fr 11/11/2020 20:06:46'!
FAILURE!
!Portfolio methodsFor: 'report' stamp: 'fr 11/11/2020 20:07:17' prior: 50873755!
netTransfer
	
	^accounts sum: [:anAccount |
		(anAccount isMemberOf: ReceptiveAccount) ifTrue: [
			anAccount transactions inject: 0 into: [:currentNetBalance :aTransaction | 
				aTransaction 	affectBalance: currentNetBalance 
			]
		]
	]! !

!testRun: #ReportTest #test18NetTransferForPortfolioWithNoTransactionsShouldBeZero stamp: 'fr 11/11/2020 20:07:18'!
ERROR!

!testRun: #ReportTest #test18NetTransferForPortfolioWithNoTransactionsShouldBeZero stamp: 'fr 11/11/2020 20:07:24'!
ERROR!
!Portfolio methodsFor: 'report' stamp: 'fr 11/11/2020 20:08:55' prior: 50873868!
netTransfer
	
	^accounts inject: 0 into: [:currentPorfolioNetBalance :anAccount | currentPorfolioNetBalance + (
		(anAccount isMemberOf: ReceptiveAccount) ifTrue: [
			anAccount transactions inject: 0 into: [:currentNetBalance :aTransaction | 
				aTransaction 	affectBalance: currentNetBalance 
			]
		] ifFalse: [0])
	]! !

!testRun: #ReportTest #test18NetTransferForPortfolioWithNoTransactionsShouldBeZero stamp: 'fr 11/11/2020 20:08:56'!
PASSED!

!testRun: #ReportTest #test01AccountSummaryForAccountWithNoTransactionsShouldJustShowBalanceZero stamp: 'fr 11/11/2020 20:08:56'!
PASSED!

!testRun: #ReportTest #test02AccountSummaryShouldReflectDepositsOnAccounts stamp: 'fr 11/11/2020 20:08:56'!
PASSED!

!testRun: #ReportTest #test03AccountSummaryShouldReflectWithdrawsOnAccounts stamp: 'fr 11/11/2020 20:08:56'!
PASSED!

!testRun: #ReportTest #test04AccountSummaryShouldReflectOutgoingTransfersOnAccounts stamp: 'fr 11/11/2020 20:08:56'!
PASSED!

!testRun: #ReportTest #test05AccountSummaryShouldReflectIncomingTransfersOnAccounts stamp: 'fr 11/11/2020 20:08:56'!
PASSED!

!testRun: #ReportTest #test06AccountSummaryForPortfolioWithNoTransactionsShouldJustShowBalanceZero stamp: 'fr 11/11/2020 20:08:56'!
PASSED!

!testRun: #ReportTest #test07AccountSummaryShouldReflectDepositsOnPortfoliosWithAccounts stamp: 'fr 11/11/2020 20:08:56'!
PASSED!

!testRun: #ReportTest #test08AccountSummaryShouldReflectWithdrawsOnPortfoliosWithAccounts stamp: 'fr 11/11/2020 20:08:56'!
PASSED!

!testRun: #ReportTest #test09AccountSummaryShouldReflectOutgoingAndIncomingTransfersOnPortfoliosWithAccounts stamp: 'fr 11/11/2020 20:08:56'!
PASSED!

!testRun: #ReportTest #test10AccountSummaryShouldReflectDepositsOnPortfoliosWithPortfolios stamp: 'fr 11/11/2020 20:08:56'!
PASSED!

!testRun: #ReportTest #test11AccountSummaryShouldReflectWithdrawsOnPortfoliosWithPortfolios stamp: 'fr 11/11/2020 20:08:56'!
PASSED!

!testRun: #ReportTest #test12AccountSummaryShouldReflectOutgoingAndIncomingTransfersOnPortfoliosWithPortfolios stamp: 'fr 11/11/2020 20:08:56'!
PASSED!

!testRun: #ReportTest #test13NetTransferForAccountWithNoTransactionsShouldBeZero stamp: 'fr 11/11/2020 20:08:56'!
PASSED!

!testRun: #ReportTest #test14NetTransferForAccountWithAnOutgoingTransferShouldReflectItsValue stamp: 'fr 11/11/2020 20:08:56'!
PASSED!

!testRun: #ReportTest #test15NetTransferForAccountWithAnIncomingTransferShouldReflectItsValue stamp: 'fr 11/11/2020 20:08:56'!
PASSED!

!testRun: #ReportTest #test16NetTransferForAccountShouldNotReflectDeposits stamp: 'fr 11/11/2020 20:08:56'!
PASSED!

!testRun: #ReportTest #test17NetTransferForAccountShouldNotReflectWithdraws stamp: 'fr 11/11/2020 20:08:56'!
PASSED!

!testRun: #ReportTest #test18NetTransferForPortfolioWithNoTransactionsShouldBeZero stamp: 'fr 11/11/2020 20:08:56'!
PASSED!

!testRun: #ReportTest #test19NetTransferForPortfolioWithAnOutgoingTransferShouldReflectItsValue stamp: 'fr 11/11/2020 20:08:56'!
PASSED!

!testRun: #ReportTest #test20 stamp: 'fr 11/11/2020 20:08:56'!
PASSED!

!testRun: #ReportTest #test20 stamp: 'fr 11/11/2020 20:09:00'!
PASSED!

!testRun: #ReportTest #test20 stamp: 'fr 11/11/2020 20:09:01'!
PASSED!

!testRun: #ReportTest #test01AccountSummaryForAccountWithNoTransactionsShouldJustShowBalanceZero stamp: 'fr 11/11/2020 20:09:01'!
PASSED!

!testRun: #ReportTest #test02AccountSummaryShouldReflectDepositsOnAccounts stamp: 'fr 11/11/2020 20:09:01'!
PASSED!

!testRun: #ReportTest #test03AccountSummaryShouldReflectWithdrawsOnAccounts stamp: 'fr 11/11/2020 20:09:01'!
PASSED!

!testRun: #ReportTest #test04AccountSummaryShouldReflectOutgoingTransfersOnAccounts stamp: 'fr 11/11/2020 20:09:01'!
PASSED!

!testRun: #ReportTest #test05AccountSummaryShouldReflectIncomingTransfersOnAccounts stamp: 'fr 11/11/2020 20:09:01'!
PASSED!

!testRun: #ReportTest #test06AccountSummaryForPortfolioWithNoTransactionsShouldJustShowBalanceZero stamp: 'fr 11/11/2020 20:09:01'!
PASSED!

!testRun: #ReportTest #test07AccountSummaryShouldReflectDepositsOnPortfoliosWithAccounts stamp: 'fr 11/11/2020 20:09:02'!
PASSED!

!testRun: #ReportTest #test08AccountSummaryShouldReflectWithdrawsOnPortfoliosWithAccounts stamp: 'fr 11/11/2020 20:09:02'!
PASSED!

!testRun: #ReportTest #test09AccountSummaryShouldReflectOutgoingAndIncomingTransfersOnPortfoliosWithAccounts stamp: 'fr 11/11/2020 20:09:02'!
PASSED!

!testRun: #ReportTest #test10AccountSummaryShouldReflectDepositsOnPortfoliosWithPortfolios stamp: 'fr 11/11/2020 20:09:02'!
PASSED!

!testRun: #ReportTest #test11AccountSummaryShouldReflectWithdrawsOnPortfoliosWithPortfolios stamp: 'fr 11/11/2020 20:09:02'!
PASSED!

!testRun: #ReportTest #test12AccountSummaryShouldReflectOutgoingAndIncomingTransfersOnPortfoliosWithPortfolios stamp: 'fr 11/11/2020 20:09:02'!
PASSED!

!testRun: #ReportTest #test13NetTransferForAccountWithNoTransactionsShouldBeZero stamp: 'fr 11/11/2020 20:09:02'!
PASSED!

!testRun: #ReportTest #test14NetTransferForAccountWithAnOutgoingTransferShouldReflectItsValue stamp: 'fr 11/11/2020 20:09:02'!
PASSED!

!testRun: #ReportTest #test15NetTransferForAccountWithAnIncomingTransferShouldReflectItsValue stamp: 'fr 11/11/2020 20:09:02'!
PASSED!

!testRun: #ReportTest #test16NetTransferForAccountShouldNotReflectDeposits stamp: 'fr 11/11/2020 20:09:02'!
PASSED!

!testRun: #ReportTest #test17NetTransferForAccountShouldNotReflectWithdraws stamp: 'fr 11/11/2020 20:09:02'!
PASSED!

!testRun: #ReportTest #test18NetTransferForPortfolioWithNoTransactionsShouldBeZero stamp: 'fr 11/11/2020 20:09:02'!
PASSED!

!testRun: #ReportTest #test19NetTransferForPortfolioWithAnOutgoingTransferShouldReflectItsValue stamp: 'fr 11/11/2020 20:09:02'!
PASSED!

!testRun: #ReportTest #test20 stamp: 'fr 11/11/2020 20:09:02'!
PASSED!
!ReportTest methodsFor: 'as yet unclassified' stamp: 'fr 11/11/2020 20:13:05'!
test21

	| portfolio account anotherAccount |
	
	account _ ReceptiveAccount new.
	anotherAccount _ ReceptiveAccount new.
	portfolio _ Portfolio with: account.
	
	Transfer move: 10 from: anotherAccount to: account.
			
	self assert: [portfolio netTransfer = 10]! !
!ReportTest methodsFor: 'as yet unclassified' stamp: 'fr 11/11/2020 20:14:29'!
test20NetTransferForPortfolioWithAnIncomingTransferShouldReflectItsValue

	| portfolio account anotherAccount |
	
	account _ ReceptiveAccount new.
	anotherAccount _ ReceptiveAccount new.
	portfolio _ Portfolio with: account.
	
	Transfer move: 10 from: anotherAccount to: account.
			
	self assert: [portfolio netTransfer = 10]! !

!methodRemoval: ReportTest #test20 stamp: 'fr 11/11/2020 20:14:29'!
test20

	| portfolio account anotherAccount |
	
	account _ ReceptiveAccount new.
	anotherAccount _ ReceptiveAccount new.
	portfolio _ Portfolio with: account.
	
	Transfer move: 10 from: anotherAccount to: account.
			
	self assert: [portfolio netTransfer = 10]!

!testRun: #ReportTest #test20NetTransferForPortfolioWithAnIncomingTransferShouldReflectItsValue stamp: 'fr 11/11/2020 20:26:27'!
PASSED!

!testRun: #ReportTest #test20NetTransferForPortfolioWithAnIncomingTransferShouldReflectItsValue stamp: 'fr 11/11/2020 20:26:30'!
PASSED!

!testRun: #ReportTest #test01AccountSummaryForAccountWithNoTransactionsShouldJustShowBalanceZero stamp: 'fr 11/11/2020 20:26:30'!
PASSED!

!testRun: #ReportTest #test02AccountSummaryShouldReflectDepositsOnAccounts stamp: 'fr 11/11/2020 20:26:30'!
PASSED!

!testRun: #ReportTest #test03AccountSummaryShouldReflectWithdrawsOnAccounts stamp: 'fr 11/11/2020 20:26:30'!
PASSED!

!testRun: #ReportTest #test04AccountSummaryShouldReflectOutgoingTransfersOnAccounts stamp: 'fr 11/11/2020 20:26:30'!
PASSED!

!testRun: #ReportTest #test05AccountSummaryShouldReflectIncomingTransfersOnAccounts stamp: 'fr 11/11/2020 20:26:30'!
PASSED!

!testRun: #ReportTest #test06AccountSummaryForPortfolioWithNoTransactionsShouldJustShowBalanceZero stamp: 'fr 11/11/2020 20:26:30'!
PASSED!

!testRun: #ReportTest #test07AccountSummaryShouldReflectDepositsOnPortfoliosWithAccounts stamp: 'fr 11/11/2020 20:26:30'!
PASSED!

!testRun: #ReportTest #test08AccountSummaryShouldReflectWithdrawsOnPortfoliosWithAccounts stamp: 'fr 11/11/2020 20:26:30'!
PASSED!

!testRun: #ReportTest #test09AccountSummaryShouldReflectOutgoingAndIncomingTransfersOnPortfoliosWithAccounts stamp: 'fr 11/11/2020 20:26:30'!
PASSED!

!testRun: #ReportTest #test10AccountSummaryShouldReflectDepositsOnPortfoliosWithPortfolios stamp: 'fr 11/11/2020 20:26:30'!
PASSED!

!testRun: #ReportTest #test11AccountSummaryShouldReflectWithdrawsOnPortfoliosWithPortfolios stamp: 'fr 11/11/2020 20:26:30'!
PASSED!

!testRun: #ReportTest #test12AccountSummaryShouldReflectOutgoingAndIncomingTransfersOnPortfoliosWithPortfolios stamp: 'fr 11/11/2020 20:26:30'!
PASSED!

!testRun: #ReportTest #test13NetTransferForAccountWithNoTransactionsShouldBeZero stamp: 'fr 11/11/2020 20:26:30'!
PASSED!

!testRun: #ReportTest #test14NetTransferForAccountWithAnOutgoingTransferShouldReflectItsValue stamp: 'fr 11/11/2020 20:26:30'!
PASSED!

!testRun: #ReportTest #test15NetTransferForAccountWithAnIncomingTransferShouldReflectItsValue stamp: 'fr 11/11/2020 20:26:30'!
PASSED!

!testRun: #ReportTest #test16NetTransferForAccountShouldNotReflectDeposits stamp: 'fr 11/11/2020 20:26:30'!
PASSED!

!testRun: #ReportTest #test17NetTransferForAccountShouldNotReflectWithdraws stamp: 'fr 11/11/2020 20:26:30'!
PASSED!

!testRun: #ReportTest #test18NetTransferForPortfolioWithNoTransactionsShouldBeZero stamp: 'fr 11/11/2020 20:26:30'!
PASSED!

!testRun: #ReportTest #test19NetTransferForPortfolioWithAnOutgoingTransferShouldReflectItsValue stamp: 'fr 11/11/2020 20:26:30'!
PASSED!

!testRun: #ReportTest #test20NetTransferForPortfolioWithAnIncomingTransferShouldReflectItsValue stamp: 'fr 11/11/2020 20:26:30'!
PASSED!

!testRun: #ReportTest #test21 stamp: 'fr 11/11/2020 20:26:30'!
PASSED!
!ReportTest methodsFor: 'as yet unclassified' stamp: 'fr 11/11/2020 20:27:11' prior: 50874068!
test21

	| portfolio account |
	
	account _ ReceptiveAccount new.
	portfolio _ Portfolio with: account.
	
	Deposit register: 100 on: account. 
			
	self assert: [portfolio netTransfer = 0]! !

!testRun: #ReportTest #test21 stamp: 'fr 11/11/2020 20:27:13'!
FAILURE!
!Portfolio methodsFor: 'report' stamp: 'fr 11/11/2020 20:30:35' prior: 50873886!
netTransfer
	
	^accounts inject: 0 into: [:currentPorfolioNetBalance :anAccount | currentPorfolioNetBalance + (
		(anAccount isMemberOf: ReceptiveAccount) ifTrue: [
			anAccount transactions inject: 0 into: [:currentNetBalance :aTransaction | 
				(aTransaction isMemberOf: WithdrawByTransference) ifTrue: 
					[aTransaction 	affectBalance: currentNetBalance 				]
			]
		] ifFalse: [0])
	]! !
!Portfolio methodsFor: 'report' stamp: 'fr 11/11/2020 20:32:54' prior: 50874207!
netTransfer
	
	^accounts inject: 0 into: [:currentPorfolioNetBalance :anAccount | currentPorfolioNetBalance + (
		(anAccount isMemberOf: ReceptiveAccount) ifTrue: [
			anAccount transactions inject: 0 into: [:currentNetBalance :aTransaction | 
				(aTransaction isMemberOf: WithdrawByTransference) 
					ifTrue: [aTransaction 	affectBalance: currentNetBalance]
					ifFalse: [(aTransaction isMemberOf: DepositByTransference)
					ifTrue: [aTransaction 	affectBalance: currentNetBalance]
					ifFalse: [(aTransaction isMemberOf: Deposit)
					ifTrue: [currentNetBalance ]
					ifFalse: [currentNetBalance]]]
					
			]
		] ifFalse: [0])
	]! !
!Portfolio methodsFor: 'report' stamp: 'fr 11/11/2020 20:33:04' prior: 50874222!
netTransfer
	
	^accounts inject: 0 into: [:currentPorfolioNetBalance :anAccount | currentPorfolioNetBalance + (
		(anAccount isMemberOf: ReceptiveAccount) ifTrue: [
			anAccount transactions inject: 0 into: [:currentNetBalance :aTransaction | 
				(aTransaction isMemberOf: WithdrawByTransference) 
					ifTrue: [aTransaction 	affectBalance: currentNetBalance]
					ifFalse: [(aTransaction isMemberOf: DepositByTransference)
					ifTrue: [aTransaction 	affectBalance: currentNetBalance]
					ifFalse: [(aTransaction isMemberOf: Deposit)
					ifTrue: [currentNetBalance ]]]
					
			]
		] ifFalse: [0])
	]! !

!testRun: #ReportTest #test21 stamp: 'fr 11/11/2020 20:33:05'!
PASSED!

!testRun: #ReportTest #test01AccountSummaryForAccountWithNoTransactionsShouldJustShowBalanceZero stamp: 'fr 11/11/2020 20:33:05'!
PASSED!

!testRun: #ReportTest #test02AccountSummaryShouldReflectDepositsOnAccounts stamp: 'fr 11/11/2020 20:33:05'!
PASSED!

!testRun: #ReportTest #test03AccountSummaryShouldReflectWithdrawsOnAccounts stamp: 'fr 11/11/2020 20:33:05'!
PASSED!

!testRun: #ReportTest #test04AccountSummaryShouldReflectOutgoingTransfersOnAccounts stamp: 'fr 11/11/2020 20:33:05'!
PASSED!

!testRun: #ReportTest #test05AccountSummaryShouldReflectIncomingTransfersOnAccounts stamp: 'fr 11/11/2020 20:33:05'!
PASSED!

!testRun: #ReportTest #test06AccountSummaryForPortfolioWithNoTransactionsShouldJustShowBalanceZero stamp: 'fr 11/11/2020 20:33:05'!
PASSED!

!testRun: #ReportTest #test07AccountSummaryShouldReflectDepositsOnPortfoliosWithAccounts stamp: 'fr 11/11/2020 20:33:05'!
PASSED!

!testRun: #ReportTest #test08AccountSummaryShouldReflectWithdrawsOnPortfoliosWithAccounts stamp: 'fr 11/11/2020 20:33:05'!
PASSED!

!testRun: #ReportTest #test09AccountSummaryShouldReflectOutgoingAndIncomingTransfersOnPortfoliosWithAccounts stamp: 'fr 11/11/2020 20:33:05'!
PASSED!

!testRun: #ReportTest #test10AccountSummaryShouldReflectDepositsOnPortfoliosWithPortfolios stamp: 'fr 11/11/2020 20:33:05'!
PASSED!

!testRun: #ReportTest #test11AccountSummaryShouldReflectWithdrawsOnPortfoliosWithPortfolios stamp: 'fr 11/11/2020 20:33:05'!
PASSED!

!testRun: #ReportTest #test12AccountSummaryShouldReflectOutgoingAndIncomingTransfersOnPortfoliosWithPortfolios stamp: 'fr 11/11/2020 20:33:05'!
PASSED!

!testRun: #ReportTest #test13NetTransferForAccountWithNoTransactionsShouldBeZero stamp: 'fr 11/11/2020 20:33:05'!
PASSED!

!testRun: #ReportTest #test14NetTransferForAccountWithAnOutgoingTransferShouldReflectItsValue stamp: 'fr 11/11/2020 20:33:05'!
PASSED!

!testRun: #ReportTest #test15NetTransferForAccountWithAnIncomingTransferShouldReflectItsValue stamp: 'fr 11/11/2020 20:33:05'!
PASSED!

!testRun: #ReportTest #test16NetTransferForAccountShouldNotReflectDeposits stamp: 'fr 11/11/2020 20:33:05'!
PASSED!

!testRun: #ReportTest #test17NetTransferForAccountShouldNotReflectWithdraws stamp: 'fr 11/11/2020 20:33:06'!
PASSED!

!testRun: #ReportTest #test18NetTransferForPortfolioWithNoTransactionsShouldBeZero stamp: 'fr 11/11/2020 20:33:06'!
PASSED!

!testRun: #ReportTest #test19NetTransferForPortfolioWithAnOutgoingTransferShouldReflectItsValue stamp: 'fr 11/11/2020 20:33:06'!
PASSED!

!testRun: #ReportTest #test20NetTransferForPortfolioWithAnIncomingTransferShouldReflectItsValue stamp: 'fr 11/11/2020 20:33:06'!
PASSED!

!testRun: #ReportTest #test21 stamp: 'fr 11/11/2020 20:33:06'!
PASSED!
!ReportTest methodsFor: 'as yet unclassified' stamp: 'fr 11/11/2020 20:33:11' prior: 50874196!
test21

	| portfolio account |
	
	account _ ReceptiveAccount new.
	portfolio _ Portfolio with: account.
	
	Withdraw register: 100 on: account. 
			
	self assert: [portfolio netTransfer = 0]! !

!testRun: #ReportTest #test21 stamp: 'fr 11/11/2020 20:33:12'!
ERROR!
!ReportTest methodsFor: 'as yet unclassified' stamp: 'fr 11/11/2020 20:33:19' prior: 50874354!
test21

	| portfolio account |
	
	account _ ReceptiveAccount new.
	portfolio _ Portfolio with: account.
	
	Deposit register: 100 on: account. 
			
	self assert: [portfolio netTransfer = 0]! !
!ReportTest methodsFor: 'as yet unclassified' stamp: 'fr 11/11/2020 20:33:21'!
test22

	| portfolio account |
	
	account _ ReceptiveAccount new.
	portfolio _ Portfolio with: account.
	
	Deposit register: 100 on: account. 
			
	self assert: [portfolio netTransfer = 0]! !
!ReportTest methodsFor: 'as yet unclassified' stamp: 'fr 11/11/2020 20:33:24' prior: 50874375!
test22

	| portfolio account |
	
	account _ ReceptiveAccount new.
	portfolio _ Portfolio with: account.
	
	Withdraw register: 100 on: account. 
			
	self assert: [portfolio netTransfer = 0]! !

!testRun: #ReportTest #test22 stamp: 'fr 11/11/2020 20:33:25'!
ERROR!
!Portfolio methodsFor: 'report' stamp: 'fr 11/11/2020 20:34:59' prior: 50874245!
netTransfer
	
	^accounts inject: 0 into: [:currentPorfolioNetBalance :anAccount | currentPorfolioNetBalance + (
		(anAccount isMemberOf: ReceptiveAccount) ifTrue: [
			anAccount transactions inject: 0 into: [:currentNetBalance :aTransaction | 
				(aTransaction isMemberOf: WithdrawByTransference) 
					ifTrue: [aTransaction 	affectBalance: currentNetBalance]
					ifFalse: [(aTransaction isMemberOf: DepositByTransference)
					ifTrue: [aTransaction 	affectBalance: currentNetBalance]
					ifFalse: [(aTransaction isMemberOf: Deposit)
					ifTrue: [currentNetBalance ] 
					ifFalse: [(aTransaction isMemberOf: Withdraw) 
					ifTrue: [currentNetBalance]]]]
			]
		] ifFalse: [0])
	]! !

!testRun: #ReportTest #test22 stamp: 'fr 11/11/2020 20:35:00'!
PASSED!

!testRun: #ReportTest #test01AccountSummaryForAccountWithNoTransactionsShouldJustShowBalanceZero stamp: 'fr 11/11/2020 20:35:00'!
PASSED!

!testRun: #ReportTest #test02AccountSummaryShouldReflectDepositsOnAccounts stamp: 'fr 11/11/2020 20:35:00'!
PASSED!

!testRun: #ReportTest #test03AccountSummaryShouldReflectWithdrawsOnAccounts stamp: 'fr 11/11/2020 20:35:00'!
PASSED!

!testRun: #ReportTest #test04AccountSummaryShouldReflectOutgoingTransfersOnAccounts stamp: 'fr 11/11/2020 20:35:00'!
PASSED!

!testRun: #ReportTest #test05AccountSummaryShouldReflectIncomingTransfersOnAccounts stamp: 'fr 11/11/2020 20:35:00'!
PASSED!

!testRun: #ReportTest #test06AccountSummaryForPortfolioWithNoTransactionsShouldJustShowBalanceZero stamp: 'fr 11/11/2020 20:35:00'!
PASSED!

!testRun: #ReportTest #test07AccountSummaryShouldReflectDepositsOnPortfoliosWithAccounts stamp: 'fr 11/11/2020 20:35:00'!
PASSED!

!testRun: #ReportTest #test08AccountSummaryShouldReflectWithdrawsOnPortfoliosWithAccounts stamp: 'fr 11/11/2020 20:35:00'!
PASSED!

!testRun: #ReportTest #test09AccountSummaryShouldReflectOutgoingAndIncomingTransfersOnPortfoliosWithAccounts stamp: 'fr 11/11/2020 20:35:00'!
PASSED!

!testRun: #ReportTest #test10AccountSummaryShouldReflectDepositsOnPortfoliosWithPortfolios stamp: 'fr 11/11/2020 20:35:00'!
PASSED!

!testRun: #ReportTest #test11AccountSummaryShouldReflectWithdrawsOnPortfoliosWithPortfolios stamp: 'fr 11/11/2020 20:35:00'!
PASSED!

!testRun: #ReportTest #test12AccountSummaryShouldReflectOutgoingAndIncomingTransfersOnPortfoliosWithPortfolios stamp: 'fr 11/11/2020 20:35:00'!
PASSED!

!testRun: #ReportTest #test13NetTransferForAccountWithNoTransactionsShouldBeZero stamp: 'fr 11/11/2020 20:35:00'!
PASSED!

!testRun: #ReportTest #test14NetTransferForAccountWithAnOutgoingTransferShouldReflectItsValue stamp: 'fr 11/11/2020 20:35:00'!
PASSED!

!testRun: #ReportTest #test15NetTransferForAccountWithAnIncomingTransferShouldReflectItsValue stamp: 'fr 11/11/2020 20:35:00'!
PASSED!

!testRun: #ReportTest #test16NetTransferForAccountShouldNotReflectDeposits stamp: 'fr 11/11/2020 20:35:00'!
PASSED!

!testRun: #ReportTest #test17NetTransferForAccountShouldNotReflectWithdraws stamp: 'fr 11/11/2020 20:35:00'!
PASSED!

!testRun: #ReportTest #test18NetTransferForPortfolioWithNoTransactionsShouldBeZero stamp: 'fr 11/11/2020 20:35:00'!
PASSED!

!testRun: #ReportTest #test19NetTransferForPortfolioWithAnOutgoingTransferShouldReflectItsValue stamp: 'fr 11/11/2020 20:35:00'!
PASSED!

!testRun: #ReportTest #test20NetTransferForPortfolioWithAnIncomingTransferShouldReflectItsValue stamp: 'fr 11/11/2020 20:35:00'!
PASSED!

!testRun: #ReportTest #test21 stamp: 'fr 11/11/2020 20:35:00'!
PASSED!

!testRun: #ReportTest #test22 stamp: 'fr 11/11/2020 20:35:00'!
PASSED!
!ReportTest methodsFor: 'as yet unclassified' stamp: 'fr 11/11/2020 20:37:50'!
test21NetTransferForPortfolioShouldNotReflectDeposits

	| portfolio account |
	
	account _ ReceptiveAccount new.
	portfolio _ Portfolio with: account.
	
	Deposit register: 100 on: account. 
			
	self assert: [portfolio netTransfer = 0]! !

!methodRemoval: ReportTest #test21 stamp: 'fr 11/11/2020 20:37:50'!
test21

	| portfolio account |
	
	account _ ReceptiveAccount new.
	portfolio _ Portfolio with: account.
	
	Deposit register: 100 on: account. 
			
	self assert: [portfolio netTransfer = 0]!
!ReportTest methodsFor: 'as yet unclassified' stamp: 'fr 11/11/2020 20:38:10'!
test22NetTransferForPortfolioShouldNotReflectWithdraws

	| portfolio account |
	
	account _ ReceptiveAccount new.
	portfolio _ Portfolio with: account.
	
	Withdraw register: 100 on: account. 
			
	self assert: [portfolio netTransfer = 0]! !

!methodRemoval: ReportTest #test22 stamp: 'fr 11/11/2020 20:38:10'!
test22

	| portfolio account |
	
	account _ ReceptiveAccount new.
	portfolio _ Portfolio with: account.
	
	Withdraw register: 100 on: account. 
			
	self assert: [portfolio netTransfer = 0]!
!ReportTest methodsFor: 'as yet unclassified' stamp: 'fr 11/11/2020 20:38:15'!
test23

	| portfolio account |
	
	account _ ReceptiveAccount new.
	portfolio _ Portfolio with: account.
	
	Withdraw register: 100 on: account. 
			
	self assert: [portfolio netTransfer = 0]! !
!ReportTest methodsFor: 'as yet unclassified' stamp: 'fr 11/11/2020 20:45:34' prior: 50874546!
test23

	| portfolio account |
	
	account _ ReceptiveAccount new.
	portfolio _ Portfolio with: account.
	
	Withdraw register: 100 on: account. 
	Deposit register: 50 on: account. 
			
	self assert: [portfolio netTransfer = 0]! !
!ReportTest methodsFor: 'as yet unclassified' stamp: 'fr 11/11/2020 20:45:40' prior: 50874555!
test23

	| portfolio account |
	
	account _ ReceptiveAccount new.
	portfolio _ Portfolio with: account.
	
	Withdraw register: 100 on: account. 
	Deposit register: 50 on: account. 
			
	self assert: [portfolio netTransfer = 0]! !

!testRun: #ReportTest #test23 stamp: 'fr 11/11/2020 20:45:42'!
PASSED!

!testRun: #ReportTest #test01AccountSummaryForAccountWithNoTransactionsShouldJustShowBalanceZero stamp: 'fr 11/11/2020 20:45:42'!
PASSED!

!testRun: #ReportTest #test02AccountSummaryShouldReflectDepositsOnAccounts stamp: 'fr 11/11/2020 20:45:42'!
PASSED!

!testRun: #ReportTest #test03AccountSummaryShouldReflectWithdrawsOnAccounts stamp: 'fr 11/11/2020 20:45:42'!
PASSED!

!testRun: #ReportTest #test04AccountSummaryShouldReflectOutgoingTransfersOnAccounts stamp: 'fr 11/11/2020 20:45:42'!
PASSED!

!testRun: #ReportTest #test05AccountSummaryShouldReflectIncomingTransfersOnAccounts stamp: 'fr 11/11/2020 20:45:42'!
PASSED!

!testRun: #ReportTest #test06AccountSummaryForPortfolioWithNoTransactionsShouldJustShowBalanceZero stamp: 'fr 11/11/2020 20:45:42'!
PASSED!

!testRun: #ReportTest #test07AccountSummaryShouldReflectDepositsOnPortfoliosWithAccounts stamp: 'fr 11/11/2020 20:45:42'!
PASSED!

!testRun: #ReportTest #test08AccountSummaryShouldReflectWithdrawsOnPortfoliosWithAccounts stamp: 'fr 11/11/2020 20:45:42'!
PASSED!

!testRun: #ReportTest #test09AccountSummaryShouldReflectOutgoingAndIncomingTransfersOnPortfoliosWithAccounts stamp: 'fr 11/11/2020 20:45:42'!
PASSED!

!testRun: #ReportTest #test10AccountSummaryShouldReflectDepositsOnPortfoliosWithPortfolios stamp: 'fr 11/11/2020 20:45:42'!
PASSED!

!testRun: #ReportTest #test11AccountSummaryShouldReflectWithdrawsOnPortfoliosWithPortfolios stamp: 'fr 11/11/2020 20:45:42'!
PASSED!

!testRun: #ReportTest #test12AccountSummaryShouldReflectOutgoingAndIncomingTransfersOnPortfoliosWithPortfolios stamp: 'fr 11/11/2020 20:45:42'!
PASSED!

!testRun: #ReportTest #test13NetTransferForAccountWithNoTransactionsShouldBeZero stamp: 'fr 11/11/2020 20:45:42'!
PASSED!

!testRun: #ReportTest #test14NetTransferForAccountWithAnOutgoingTransferShouldReflectItsValue stamp: 'fr 11/11/2020 20:45:42'!
PASSED!

!testRun: #ReportTest #test15NetTransferForAccountWithAnIncomingTransferShouldReflectItsValue stamp: 'fr 11/11/2020 20:45:42'!
PASSED!

!testRun: #ReportTest #test16NetTransferForAccountShouldNotReflectDeposits stamp: 'fr 11/11/2020 20:45:42'!
PASSED!

!testRun: #ReportTest #test17NetTransferForAccountShouldNotReflectWithdraws stamp: 'fr 11/11/2020 20:45:42'!
PASSED!

!testRun: #ReportTest #test18NetTransferForPortfolioWithNoTransactionsShouldBeZero stamp: 'fr 11/11/2020 20:45:42'!
PASSED!

!testRun: #ReportTest #test19NetTransferForPortfolioWithAnOutgoingTransferShouldReflectItsValue stamp: 'fr 11/11/2020 20:45:42'!
PASSED!

!testRun: #ReportTest #test20NetTransferForPortfolioWithAnIncomingTransferShouldReflectItsValue stamp: 'fr 11/11/2020 20:45:42'!
PASSED!

!testRun: #ReportTest #test21NetTransferForPortfolioShouldNotReflectDeposits stamp: 'fr 11/11/2020 20:45:42'!
PASSED!

!testRun: #ReportTest #test22NetTransferForPortfolioShouldNotReflectWithdraws stamp: 'fr 11/11/2020 20:45:42'!
PASSED!

!testRun: #ReportTest #test23 stamp: 'fr 11/11/2020 20:45:42'!
PASSED!
!ReportTest methodsFor: 'as yet unclassified' stamp: 'fr 11/11/2020 20:45:56' prior: 50874566!
test23

	| portfolio account anotherPortfolio |
	
	account _ ReceptiveAccount new.
	portfolio _ Portfolio with: account.
	anotherPortfolio _ Portfolio with: portfolio.
	
	Withdraw register: 100 on: account. 
	Deposit register: 50 on: account. 
			
	self assert: [portfolio netTransfer = 0]! !
!ReportTest methodsFor: 'as yet unclassified' stamp: 'fr 11/11/2020 20:46:04' prior: 50874671!
test23

	| portfolio account anotherPortfolio |
	
	account _ ReceptiveAccount new.
	portfolio _ Portfolio with: account.
	anotherPortfolio _ Portfolio with: portfolio.
	
	Withdraw register: 100 on: account. 
	Deposit register: 50 on: account. 
			
	self assert: [anotherPortfolio netTransfer = 0]! !

!testRun: #ReportTest #test23 stamp: 'fr 11/11/2020 20:46:04'!
PASSED!

!testRun: #ReportTest #test01AccountSummaryForAccountWithNoTransactionsShouldJustShowBalanceZero stamp: 'fr 11/11/2020 20:46:04'!
PASSED!

!testRun: #ReportTest #test02AccountSummaryShouldReflectDepositsOnAccounts stamp: 'fr 11/11/2020 20:46:04'!
PASSED!

!testRun: #ReportTest #test03AccountSummaryShouldReflectWithdrawsOnAccounts stamp: 'fr 11/11/2020 20:46:04'!
PASSED!

!testRun: #ReportTest #test04AccountSummaryShouldReflectOutgoingTransfersOnAccounts stamp: 'fr 11/11/2020 20:46:04'!
PASSED!

!testRun: #ReportTest #test05AccountSummaryShouldReflectIncomingTransfersOnAccounts stamp: 'fr 11/11/2020 20:46:04'!
PASSED!

!testRun: #ReportTest #test06AccountSummaryForPortfolioWithNoTransactionsShouldJustShowBalanceZero stamp: 'fr 11/11/2020 20:46:04'!
PASSED!

!testRun: #ReportTest #test07AccountSummaryShouldReflectDepositsOnPortfoliosWithAccounts stamp: 'fr 11/11/2020 20:46:04'!
PASSED!

!testRun: #ReportTest #test08AccountSummaryShouldReflectWithdrawsOnPortfoliosWithAccounts stamp: 'fr 11/11/2020 20:46:04'!
PASSED!

!testRun: #ReportTest #test09AccountSummaryShouldReflectOutgoingAndIncomingTransfersOnPortfoliosWithAccounts stamp: 'fr 11/11/2020 20:46:04'!
PASSED!

!testRun: #ReportTest #test10AccountSummaryShouldReflectDepositsOnPortfoliosWithPortfolios stamp: 'fr 11/11/2020 20:46:04'!
PASSED!

!testRun: #ReportTest #test11AccountSummaryShouldReflectWithdrawsOnPortfoliosWithPortfolios stamp: 'fr 11/11/2020 20:46:04'!
PASSED!

!testRun: #ReportTest #test12AccountSummaryShouldReflectOutgoingAndIncomingTransfersOnPortfoliosWithPortfolios stamp: 'fr 11/11/2020 20:46:04'!
PASSED!

!testRun: #ReportTest #test13NetTransferForAccountWithNoTransactionsShouldBeZero stamp: 'fr 11/11/2020 20:46:04'!
PASSED!

!testRun: #ReportTest #test14NetTransferForAccountWithAnOutgoingTransferShouldReflectItsValue stamp: 'fr 11/11/2020 20:46:04'!
PASSED!

!testRun: #ReportTest #test15NetTransferForAccountWithAnIncomingTransferShouldReflectItsValue stamp: 'fr 11/11/2020 20:46:04'!
PASSED!

!testRun: #ReportTest #test16NetTransferForAccountShouldNotReflectDeposits stamp: 'fr 11/11/2020 20:46:04'!
PASSED!

!testRun: #ReportTest #test17NetTransferForAccountShouldNotReflectWithdraws stamp: 'fr 11/11/2020 20:46:04'!
PASSED!

!testRun: #ReportTest #test18NetTransferForPortfolioWithNoTransactionsShouldBeZero stamp: 'fr 11/11/2020 20:46:04'!
PASSED!

!testRun: #ReportTest #test19NetTransferForPortfolioWithAnOutgoingTransferShouldReflectItsValue stamp: 'fr 11/11/2020 20:46:04'!
PASSED!

!testRun: #ReportTest #test20NetTransferForPortfolioWithAnIncomingTransferShouldReflectItsValue stamp: 'fr 11/11/2020 20:46:04'!
PASSED!

!testRun: #ReportTest #test21NetTransferForPortfolioShouldNotReflectDeposits stamp: 'fr 11/11/2020 20:46:04'!
PASSED!

!testRun: #ReportTest #test22NetTransferForPortfolioShouldNotReflectWithdraws stamp: 'fr 11/11/2020 20:46:04'!
PASSED!

!testRun: #ReportTest #test23 stamp: 'fr 11/11/2020 20:46:04'!
PASSED!

!testRun: #ReportTest #test23 stamp: 'fr 11/11/2020 20:46:09'!
PASSED!

!testRun: #ReportTest #test01AccountSummaryForAccountWithNoTransactionsShouldJustShowBalanceZero stamp: 'fr 11/11/2020 20:46:09'!
PASSED!

!testRun: #ReportTest #test02AccountSummaryShouldReflectDepositsOnAccounts stamp: 'fr 11/11/2020 20:46:09'!
PASSED!

!testRun: #ReportTest #test03AccountSummaryShouldReflectWithdrawsOnAccounts stamp: 'fr 11/11/2020 20:46:09'!
PASSED!

!testRun: #ReportTest #test04AccountSummaryShouldReflectOutgoingTransfersOnAccounts stamp: 'fr 11/11/2020 20:46:09'!
PASSED!

!testRun: #ReportTest #test05AccountSummaryShouldReflectIncomingTransfersOnAccounts stamp: 'fr 11/11/2020 20:46:09'!
PASSED!

!testRun: #ReportTest #test06AccountSummaryForPortfolioWithNoTransactionsShouldJustShowBalanceZero stamp: 'fr 11/11/2020 20:46:09'!
PASSED!

!testRun: #ReportTest #test07AccountSummaryShouldReflectDepositsOnPortfoliosWithAccounts stamp: 'fr 11/11/2020 20:46:09'!
PASSED!

!testRun: #ReportTest #test08AccountSummaryShouldReflectWithdrawsOnPortfoliosWithAccounts stamp: 'fr 11/11/2020 20:46:09'!
PASSED!

!testRun: #ReportTest #test09AccountSummaryShouldReflectOutgoingAndIncomingTransfersOnPortfoliosWithAccounts stamp: 'fr 11/11/2020 20:46:09'!
PASSED!

!testRun: #ReportTest #test10AccountSummaryShouldReflectDepositsOnPortfoliosWithPortfolios stamp: 'fr 11/11/2020 20:46:09'!
PASSED!

!testRun: #ReportTest #test11AccountSummaryShouldReflectWithdrawsOnPortfoliosWithPortfolios stamp: 'fr 11/11/2020 20:46:09'!
PASSED!

!testRun: #ReportTest #test12AccountSummaryShouldReflectOutgoingAndIncomingTransfersOnPortfoliosWithPortfolios stamp: 'fr 11/11/2020 20:46:09'!
PASSED!

!testRun: #ReportTest #test13NetTransferForAccountWithNoTransactionsShouldBeZero stamp: 'fr 11/11/2020 20:46:09'!
PASSED!

!testRun: #ReportTest #test14NetTransferForAccountWithAnOutgoingTransferShouldReflectItsValue stamp: 'fr 11/11/2020 20:46:09'!
PASSED!

!testRun: #ReportTest #test15NetTransferForAccountWithAnIncomingTransferShouldReflectItsValue stamp: 'fr 11/11/2020 20:46:09'!
PASSED!

!testRun: #ReportTest #test16NetTransferForAccountShouldNotReflectDeposits stamp: 'fr 11/11/2020 20:46:09'!
PASSED!

!testRun: #ReportTest #test17NetTransferForAccountShouldNotReflectWithdraws stamp: 'fr 11/11/2020 20:46:09'!
PASSED!

!testRun: #ReportTest #test18NetTransferForPortfolioWithNoTransactionsShouldBeZero stamp: 'fr 11/11/2020 20:46:09'!
PASSED!

!testRun: #ReportTest #test19NetTransferForPortfolioWithAnOutgoingTransferShouldReflectItsValue stamp: 'fr 11/11/2020 20:46:09'!
PASSED!

!testRun: #ReportTest #test20NetTransferForPortfolioWithAnIncomingTransferShouldReflectItsValue stamp: 'fr 11/11/2020 20:46:09'!
PASSED!

!testRun: #ReportTest #test21NetTransferForPortfolioShouldNotReflectDeposits stamp: 'fr 11/11/2020 20:46:09'!
PASSED!

!testRun: #ReportTest #test22NetTransferForPortfolioShouldNotReflectWithdraws stamp: 'fr 11/11/2020 20:46:09'!
PASSED!

!testRun: #ReportTest #test23 stamp: 'fr 11/11/2020 20:46:09'!
PASSED!
!ReportTest methodsFor: 'as yet unclassified' stamp: 'fr 11/11/2020 20:47:15' prior: 50874684!
test23

	| portfolio account anotherPortfolio anotherAccount |
	
	account _ ReceptiveAccount new.
	portfolio _ Portfolio with: account.
	anotherPortfolio _ Portfolio with: portfolio.
	
	
				
	self assert: [anotherPortfolio netTransfer = 0]! !
!ReportTest methodsFor: 'as yet unclassified' stamp: 'fr 11/11/2020 20:47:35' prior: 50874885!
test23

	| portfolio account anotherPortfolio anotherAccount |
	
	account _ ReceptiveAccount new.
	portfolio _ Portfolio with: account.
	anotherPortfolio _ Portfolio with: portfolio.
	anotherAccount _ ReceptiveAccount new.
	
	
				
	self assert: [anotherPortfolio netTransfer = 0]! !
!ReportTest methodsFor: 'as yet unclassified' stamp: 'fr 11/11/2020 20:48:13' prior: 50874896!
test23

	| portfolio account anotherPortfolio anotherAccount |
	
	account _ ReceptiveAccount new.
	anotherAccount _ ReceptiveAccount new.
	portfolio _ Portfolio with: account.
	anotherPortfolio _ Portfolio with: portfolio.
	
	Deposit register: 100 on: account. 
	
				
	self assert: [anotherPortfolio netTransfer = 0]! !
!ReportTest methodsFor: 'as yet unclassified' stamp: 'fr 11/11/2020 20:48:33' prior: 50874908!
test23

	| portfolio account anotherPortfolio anotherAccount |
	
	account _ ReceptiveAccount new.
	anotherAccount _ ReceptiveAccount new.
	portfolio _ Portfolio with: account.
	anotherPortfolio _ Portfolio with: portfolio.
	
	Deposit register: 100 on: account.
	
	 
	
				
	self assert: [anotherPortfolio netTransfer = 0]! !
!ReportTest methodsFor: 'as yet unclassified' stamp: 'fr 11/11/2020 20:55:31' prior: 50874921!
test23

	| portfolio account anotherPortfolio anotherAccount |
	
	account _ ReceptiveAccount new.
	anotherAccount _ ReceptiveAccount new.
	portfolio _ Portfolio with: account.
	anotherPortfolio _ Portfolio with: portfolio.
	
	Transfer 	move: 30 from: anotherAccount to: account. 
	Transfer 	move: 10 from: account to: anotherAccount. 
	 
	
				
	self assert: [anotherPortfolio netTransfer = 0]! !
!ReportTest methodsFor: 'as yet unclassified' stamp: 'fr 11/11/2020 20:55:33' prior: 50874935!
test23

	| portfolio account anotherPortfolio anotherAccount |
	
	account _ ReceptiveAccount new.
	anotherAccount _ ReceptiveAccount new.
	portfolio _ Portfolio with: account.
	anotherPortfolio _ Portfolio with: portfolio.
	
	Transfer 	move: 30 from: anotherAccount to: account. 
	Transfer 	move: 10 from: account to: anotherAccount. 
	 
	
				
	self assert: [anotherPortfolio netTransfer = 20]! !

!testRun: #ReportTest #test23 stamp: 'fr 11/11/2020 20:55:34'!
FAILURE!
!Portfolio methodsFor: 'report' stamp: 'fr 11/11/2020 20:58:44' prior: 50874395!
netTransfer
	
	^accounts inject: 0 into: [:currentPorfolioNetBalance :anAccount | currentPorfolioNetBalance + (
		(anAccount isMemberOf: ReceptiveAccount) ifTrue: [
			anAccount transactions inject: 0 into: [:currentNetBalance :aTransaction | 
				(aTransaction isMemberOf: WithdrawByTransference) 
					ifTrue: [aTransaction 	affectBalance: currentNetBalance]
					ifFalse: [(aTransaction isMemberOf: DepositByTransference)
					ifTrue: [aTransaction 	affectBalance: currentNetBalance]
					ifFalse: [(aTransaction isMemberOf: Deposit)
					ifTrue: [currentNetBalance ] 
					ifFalse: [(aTransaction isMemberOf: Withdraw) 
					ifTrue: [currentNetBalance]]]]
			]
		] ifFalse: [
		(anAccount isMemberOf: Portfolio) ifTrue: [
			anAccount transactions inject: 0 into: [:currentNetBalance :aTransaction | 
				(aTransaction isMemberOf: WithdrawByTransference) 
					ifTrue: [aTransaction 	affectBalance: currentNetBalance]
					ifFalse: [(aTransaction isMemberOf: DepositByTransference)
					ifTrue: [aTransaction 	affectBalance: currentNetBalance]]
			]
		]])
	]! !

!testRun: #ReportTest #test23 stamp: 'fr 11/11/2020 20:58:52'!
PASSED!

!testRun: #ReportTest #test01AccountSummaryForAccountWithNoTransactionsShouldJustShowBalanceZero stamp: 'fr 11/11/2020 20:58:52'!
PASSED!

!testRun: #ReportTest #test02AccountSummaryShouldReflectDepositsOnAccounts stamp: 'fr 11/11/2020 20:58:52'!
PASSED!

!testRun: #ReportTest #test03AccountSummaryShouldReflectWithdrawsOnAccounts stamp: 'fr 11/11/2020 20:58:52'!
PASSED!

!testRun: #ReportTest #test04AccountSummaryShouldReflectOutgoingTransfersOnAccounts stamp: 'fr 11/11/2020 20:58:52'!
PASSED!

!testRun: #ReportTest #test05AccountSummaryShouldReflectIncomingTransfersOnAccounts stamp: 'fr 11/11/2020 20:58:52'!
PASSED!

!testRun: #ReportTest #test06AccountSummaryForPortfolioWithNoTransactionsShouldJustShowBalanceZero stamp: 'fr 11/11/2020 20:58:52'!
PASSED!

!testRun: #ReportTest #test07AccountSummaryShouldReflectDepositsOnPortfoliosWithAccounts stamp: 'fr 11/11/2020 20:58:52'!
PASSED!

!testRun: #ReportTest #test08AccountSummaryShouldReflectWithdrawsOnPortfoliosWithAccounts stamp: 'fr 11/11/2020 20:58:52'!
PASSED!

!testRun: #ReportTest #test09AccountSummaryShouldReflectOutgoingAndIncomingTransfersOnPortfoliosWithAccounts stamp: 'fr 11/11/2020 20:58:52'!
PASSED!

!testRun: #ReportTest #test10AccountSummaryShouldReflectDepositsOnPortfoliosWithPortfolios stamp: 'fr 11/11/2020 20:58:52'!
PASSED!

!testRun: #ReportTest #test11AccountSummaryShouldReflectWithdrawsOnPortfoliosWithPortfolios stamp: 'fr 11/11/2020 20:58:52'!
PASSED!

!testRun: #ReportTest #test12AccountSummaryShouldReflectOutgoingAndIncomingTransfersOnPortfoliosWithPortfolios stamp: 'fr 11/11/2020 20:58:52'!
PASSED!

!testRun: #ReportTest #test13NetTransferForAccountWithNoTransactionsShouldBeZero stamp: 'fr 11/11/2020 20:58:52'!
PASSED!

!testRun: #ReportTest #test14NetTransferForAccountWithAnOutgoingTransferShouldReflectItsValue stamp: 'fr 11/11/2020 20:58:52'!
PASSED!

!testRun: #ReportTest #test15NetTransferForAccountWithAnIncomingTransferShouldReflectItsValue stamp: 'fr 11/11/2020 20:58:52'!
PASSED!

!testRun: #ReportTest #test16NetTransferForAccountShouldNotReflectDeposits stamp: 'fr 11/11/2020 20:58:52'!
PASSED!

!testRun: #ReportTest #test17NetTransferForAccountShouldNotReflectWithdraws stamp: 'fr 11/11/2020 20:58:52'!
PASSED!

!testRun: #ReportTest #test18NetTransferForPortfolioWithNoTransactionsShouldBeZero stamp: 'fr 11/11/2020 20:58:52'!
PASSED!

!testRun: #ReportTest #test19NetTransferForPortfolioWithAnOutgoingTransferShouldReflectItsValue stamp: 'fr 11/11/2020 20:58:52'!
PASSED!

!testRun: #ReportTest #test20NetTransferForPortfolioWithAnIncomingTransferShouldReflectItsValue stamp: 'fr 11/11/2020 20:58:52'!
PASSED!

!testRun: #ReportTest #test21NetTransferForPortfolioShouldNotReflectDeposits stamp: 'fr 11/11/2020 20:58:52'!
PASSED!

!testRun: #ReportTest #test22NetTransferForPortfolioShouldNotReflectWithdraws stamp: 'fr 11/11/2020 20:58:52'!
PASSED!

!testRun: #ReportTest #test23 stamp: 'fr 11/11/2020 20:58:52'!
PASSED!
!ReportTest methodsFor: 'as yet unclassified' stamp: 'fr 11/11/2020 20:59:00' prior: 50874951!
test23

	| portfolio account anotherPortfolio anotherAccount |
	
	account _ ReceptiveAccount new.
	anotherAccount _ ReceptiveAccount new.
	portfolio _ Portfolio with: account.
	anotherPortfolio _ Portfolio with: portfolio.
	
	Transfer 	move: 30 from: anotherAccount to: account. 
	Transfer 	move: 10 from: account to: anotherAccount. 	
				
	self assert: [anotherPortfolio netTransfer = 20]! !
!ReportTest methodsFor: 'as yet unclassified' stamp: 'fr 11/11/2020 20:59:03'!
test24

	| portfolio account anotherPortfolio anotherAccount |
	
	account _ ReceptiveAccount new.
	anotherAccount _ ReceptiveAccount new.
	portfolio _ Portfolio with: account.
	anotherPortfolio _ Portfolio with: portfolio.
	
	Transfer 	move: 30 from: anotherAccount to: account. 
	Transfer 	move: 10 from: account to: anotherAccount. 	
				
	self assert: [anotherPortfolio netTransfer = 20]! !
!ReportTest methodsFor: 'as yet unclassified' stamp: 'fr 11/11/2020 20:59:49' prior: 50875115!
test24

	| portfolio account anotherPortfolio |
	
	account _ ReceptiveAccount new.
	portfolio _ Portfolio with: account.
	anotherPortfolio _ Portfolio with: portfolio.
	
	Deposit register: 100 on: account.
	Withdraw register: 50 on: account.
				
	self assert: [anotherPortfolio netTransfer = 0]! !

!testRun: #ReportTest #test24 stamp: 'fr 11/11/2020 20:59:54'!
ERROR!
!Portfolio methodsFor: 'report' stamp: 'fr 11/11/2020 21:00:54' prior: 50874969!
netTransfer
	
	^accounts inject: 0 into: [:currentPorfolioNetBalance :anAccount | currentPorfolioNetBalance + (
		(anAccount isMemberOf: ReceptiveAccount) ifTrue: [
			anAccount transactions inject: 0 into: [:currentNetBalance :aTransaction | 
				(aTransaction isMemberOf: WithdrawByTransference) 
					ifTrue: [aTransaction 	affectBalance: currentNetBalance]
					ifFalse: [(aTransaction isMemberOf: DepositByTransference)
					ifTrue: [aTransaction 	affectBalance: currentNetBalance]
					ifFalse: [(aTransaction isMemberOf: Deposit)
					ifTrue: [currentNetBalance ] 
					ifFalse: [(aTransaction isMemberOf: Withdraw) 
					ifTrue: [currentNetBalance]]]]
			]
		] ifFalse: [
		(anAccount isMemberOf: Portfolio) ifTrue: [
			anAccount transactions inject: 0 into: [:currentNetBalance :aTransaction | 
				(aTransaction isMemberOf: WithdrawByTransference) 
					ifTrue: [aTransaction 	affectBalance: currentNetBalance]
					ifFalse: [(aTransaction isMemberOf: DepositByTransference)
					ifTrue: [aTransaction 	affectBalance: currentNetBalance] 
					ifFalse: [0]]
			]
		]])
	]! !

!testRun: #ReportTest #test24 stamp: 'fr 11/11/2020 21:00:55'!
PASSED!

!testRun: #ReportTest #test01AccountSummaryForAccountWithNoTransactionsShouldJustShowBalanceZero stamp: 'fr 11/11/2020 21:00:55'!
PASSED!

!testRun: #ReportTest #test02AccountSummaryShouldReflectDepositsOnAccounts stamp: 'fr 11/11/2020 21:00:55'!
PASSED!

!testRun: #ReportTest #test03AccountSummaryShouldReflectWithdrawsOnAccounts stamp: 'fr 11/11/2020 21:00:55'!
PASSED!

!testRun: #ReportTest #test04AccountSummaryShouldReflectOutgoingTransfersOnAccounts stamp: 'fr 11/11/2020 21:00:55'!
PASSED!

!testRun: #ReportTest #test05AccountSummaryShouldReflectIncomingTransfersOnAccounts stamp: 'fr 11/11/2020 21:00:55'!
PASSED!

!testRun: #ReportTest #test06AccountSummaryForPortfolioWithNoTransactionsShouldJustShowBalanceZero stamp: 'fr 11/11/2020 21:00:55'!
PASSED!

!testRun: #ReportTest #test07AccountSummaryShouldReflectDepositsOnPortfoliosWithAccounts stamp: 'fr 11/11/2020 21:00:55'!
PASSED!

!testRun: #ReportTest #test08AccountSummaryShouldReflectWithdrawsOnPortfoliosWithAccounts stamp: 'fr 11/11/2020 21:00:55'!
PASSED!

!testRun: #ReportTest #test09AccountSummaryShouldReflectOutgoingAndIncomingTransfersOnPortfoliosWithAccounts stamp: 'fr 11/11/2020 21:00:56'!
PASSED!

!testRun: #ReportTest #test10AccountSummaryShouldReflectDepositsOnPortfoliosWithPortfolios stamp: 'fr 11/11/2020 21:00:56'!
PASSED!

!testRun: #ReportTest #test11AccountSummaryShouldReflectWithdrawsOnPortfoliosWithPortfolios stamp: 'fr 11/11/2020 21:00:56'!
PASSED!

!testRun: #ReportTest #test12AccountSummaryShouldReflectOutgoingAndIncomingTransfersOnPortfoliosWithPortfolios stamp: 'fr 11/11/2020 21:00:56'!
PASSED!

!testRun: #ReportTest #test13NetTransferForAccountWithNoTransactionsShouldBeZero stamp: 'fr 11/11/2020 21:00:56'!
PASSED!

!testRun: #ReportTest #test14NetTransferForAccountWithAnOutgoingTransferShouldReflectItsValue stamp: 'fr 11/11/2020 21:00:56'!
PASSED!

!testRun: #ReportTest #test15NetTransferForAccountWithAnIncomingTransferShouldReflectItsValue stamp: 'fr 11/11/2020 21:00:56'!
PASSED!

!testRun: #ReportTest #test16NetTransferForAccountShouldNotReflectDeposits stamp: 'fr 11/11/2020 21:00:56'!
PASSED!

!testRun: #ReportTest #test17NetTransferForAccountShouldNotReflectWithdraws stamp: 'fr 11/11/2020 21:00:56'!
PASSED!

!testRun: #ReportTest #test18NetTransferForPortfolioWithNoTransactionsShouldBeZero stamp: 'fr 11/11/2020 21:00:56'!
PASSED!

!testRun: #ReportTest #test19NetTransferForPortfolioWithAnOutgoingTransferShouldReflectItsValue stamp: 'fr 11/11/2020 21:00:56'!
PASSED!

!testRun: #ReportTest #test20NetTransferForPortfolioWithAnIncomingTransferShouldReflectItsValue stamp: 'fr 11/11/2020 21:00:56'!
PASSED!

!testRun: #ReportTest #test21NetTransferForPortfolioShouldNotReflectDeposits stamp: 'fr 11/11/2020 21:00:56'!
PASSED!

!testRun: #ReportTest #test22NetTransferForPortfolioShouldNotReflectWithdraws stamp: 'fr 11/11/2020 21:00:56'!
PASSED!

!testRun: #ReportTest #test23 stamp: 'fr 11/11/2020 21:00:56'!
PASSED!

!testRun: #ReportTest #test24 stamp: 'fr 11/11/2020 21:00:56'!
PASSED!
!Portfolio methodsFor: 'report' stamp: 'fr 11/11/2020 21:14:35' prior: 50875146!
netTransfer
	
	^accounts inject: 0 into: [:currentPorfolioNetBalance :anAccount | currentPorfolioNetBalance + (
			anAccount transactionsForNetTransferBalance inject: 0 into: [:currentNetBalance :aTransaction | 
					aTransaction 	affectBalance: currentNetBalance
		])
	]! !

!testRun: #ReportTest #test01AccountSummaryForAccountWithNoTransactionsShouldJustShowBalanceZero stamp: 'fr 11/11/2020 21:14:41'!
PASSED!

!testRun: #ReportTest #test02AccountSummaryShouldReflectDepositsOnAccounts stamp: 'fr 11/11/2020 21:14:41'!
PASSED!

!testRun: #ReportTest #test03AccountSummaryShouldReflectWithdrawsOnAccounts stamp: 'fr 11/11/2020 21:14:41'!
PASSED!

!testRun: #ReportTest #test04AccountSummaryShouldReflectOutgoingTransfersOnAccounts stamp: 'fr 11/11/2020 21:14:41'!
PASSED!

!testRun: #ReportTest #test05AccountSummaryShouldReflectIncomingTransfersOnAccounts stamp: 'fr 11/11/2020 21:14:41'!
PASSED!

!testRun: #ReportTest #test06AccountSummaryForPortfolioWithNoTransactionsShouldJustShowBalanceZero stamp: 'fr 11/11/2020 21:14:41'!
PASSED!

!testRun: #ReportTest #test07AccountSummaryShouldReflectDepositsOnPortfoliosWithAccounts stamp: 'fr 11/11/2020 21:14:41'!
PASSED!

!testRun: #ReportTest #test08AccountSummaryShouldReflectWithdrawsOnPortfoliosWithAccounts stamp: 'fr 11/11/2020 21:14:41'!
PASSED!

!testRun: #ReportTest #test09AccountSummaryShouldReflectOutgoingAndIncomingTransfersOnPortfoliosWithAccounts stamp: 'fr 11/11/2020 21:14:41'!
PASSED!

!testRun: #ReportTest #test10AccountSummaryShouldReflectDepositsOnPortfoliosWithPortfolios stamp: 'fr 11/11/2020 21:14:41'!
PASSED!

!testRun: #ReportTest #test11AccountSummaryShouldReflectWithdrawsOnPortfoliosWithPortfolios stamp: 'fr 11/11/2020 21:14:41'!
PASSED!

!testRun: #ReportTest #test12AccountSummaryShouldReflectOutgoingAndIncomingTransfersOnPortfoliosWithPortfolios stamp: 'fr 11/11/2020 21:14:41'!
PASSED!

!testRun: #ReportTest #test13NetTransferForAccountWithNoTransactionsShouldBeZero stamp: 'fr 11/11/2020 21:14:41'!
PASSED!

!testRun: #ReportTest #test14NetTransferForAccountWithAnOutgoingTransferShouldReflectItsValue stamp: 'fr 11/11/2020 21:14:41'!
PASSED!

!testRun: #ReportTest #test15NetTransferForAccountWithAnIncomingTransferShouldReflectItsValue stamp: 'fr 11/11/2020 21:14:41'!
PASSED!

!testRun: #ReportTest #test16NetTransferForAccountShouldNotReflectDeposits stamp: 'fr 11/11/2020 21:14:41'!
PASSED!

!testRun: #ReportTest #test17NetTransferForAccountShouldNotReflectWithdraws stamp: 'fr 11/11/2020 21:14:41'!
PASSED!

!testRun: #ReportTest #test18NetTransferForPortfolioWithNoTransactionsShouldBeZero stamp: 'fr 11/11/2020 21:14:41'!
PASSED!

!testRun: #ReportTest #test19NetTransferForPortfolioWithAnOutgoingTransferShouldReflectItsValue stamp: 'fr 11/11/2020 21:14:41'!
PASSED!

!testRun: #ReportTest #test20NetTransferForPortfolioWithAnIncomingTransferShouldReflectItsValue stamp: 'fr 11/11/2020 21:14:41'!
PASSED!

!testRun: #ReportTest #test21NetTransferForPortfolioShouldNotReflectDeposits stamp: 'fr 11/11/2020 21:14:41'!
PASSED!

!testRun: #ReportTest #test22NetTransferForPortfolioShouldNotReflectWithdraws stamp: 'fr 11/11/2020 21:14:41'!
PASSED!

!testRun: #ReportTest #test23 stamp: 'fr 11/11/2020 21:14:41'!
ERROR!

!testRun: #ReportTest #test24 stamp: 'fr 11/11/2020 21:14:41'!
ERROR!

!testRun: #ReportTest #test23 stamp: 'fr 11/11/2020 21:16:18'!
ERROR!

!testRun: #ReportTest #test23 stamp: 'fr 11/11/2020 21:16:18'!
ERROR!
!Portfolio methodsFor: 'report' stamp: 'fr 11/11/2020 21:17:04' prior: 50875279!
netTransfer
	
	^accounts inject: 0 into: [:currentPorfolioNetBalance :anAccount | currentPorfolioNetBalance + (
			anAccount netTransfer)
	]! !

!testRun: #ReportTest #test01AccountSummaryForAccountWithNoTransactionsShouldJustShowBalanceZero stamp: 'fr 11/11/2020 21:17:12'!
PASSED!

!testRun: #ReportTest #test02AccountSummaryShouldReflectDepositsOnAccounts stamp: 'fr 11/11/2020 21:17:12'!
PASSED!

!testRun: #ReportTest #test03AccountSummaryShouldReflectWithdrawsOnAccounts stamp: 'fr 11/11/2020 21:17:12'!
PASSED!

!testRun: #ReportTest #test04AccountSummaryShouldReflectOutgoingTransfersOnAccounts stamp: 'fr 11/11/2020 21:17:12'!
PASSED!

!testRun: #ReportTest #test05AccountSummaryShouldReflectIncomingTransfersOnAccounts stamp: 'fr 11/11/2020 21:17:12'!
PASSED!

!testRun: #ReportTest #test06AccountSummaryForPortfolioWithNoTransactionsShouldJustShowBalanceZero stamp: 'fr 11/11/2020 21:17:12'!
PASSED!

!testRun: #ReportTest #test07AccountSummaryShouldReflectDepositsOnPortfoliosWithAccounts stamp: 'fr 11/11/2020 21:17:12'!
PASSED!

!testRun: #ReportTest #test08AccountSummaryShouldReflectWithdrawsOnPortfoliosWithAccounts stamp: 'fr 11/11/2020 21:17:12'!
PASSED!

!testRun: #ReportTest #test09AccountSummaryShouldReflectOutgoingAndIncomingTransfersOnPortfoliosWithAccounts stamp: 'fr 11/11/2020 21:17:12'!
PASSED!

!testRun: #ReportTest #test10AccountSummaryShouldReflectDepositsOnPortfoliosWithPortfolios stamp: 'fr 11/11/2020 21:17:12'!
PASSED!

!testRun: #ReportTest #test11AccountSummaryShouldReflectWithdrawsOnPortfoliosWithPortfolios stamp: 'fr 11/11/2020 21:17:12'!
PASSED!

!testRun: #ReportTest #test12AccountSummaryShouldReflectOutgoingAndIncomingTransfersOnPortfoliosWithPortfolios stamp: 'fr 11/11/2020 21:17:12'!
PASSED!

!testRun: #ReportTest #test13NetTransferForAccountWithNoTransactionsShouldBeZero stamp: 'fr 11/11/2020 21:17:12'!
PASSED!

!testRun: #ReportTest #test14NetTransferForAccountWithAnOutgoingTransferShouldReflectItsValue stamp: 'fr 11/11/2020 21:17:12'!
PASSED!

!testRun: #ReportTest #test15NetTransferForAccountWithAnIncomingTransferShouldReflectItsValue stamp: 'fr 11/11/2020 21:17:12'!
PASSED!

!testRun: #ReportTest #test16NetTransferForAccountShouldNotReflectDeposits stamp: 'fr 11/11/2020 21:17:12'!
PASSED!

!testRun: #ReportTest #test17NetTransferForAccountShouldNotReflectWithdraws stamp: 'fr 11/11/2020 21:17:12'!
PASSED!

!testRun: #ReportTest #test18NetTransferForPortfolioWithNoTransactionsShouldBeZero stamp: 'fr 11/11/2020 21:17:12'!
PASSED!

!testRun: #ReportTest #test19NetTransferForPortfolioWithAnOutgoingTransferShouldReflectItsValue stamp: 'fr 11/11/2020 21:17:12'!
PASSED!

!testRun: #ReportTest #test20NetTransferForPortfolioWithAnIncomingTransferShouldReflectItsValue stamp: 'fr 11/11/2020 21:17:12'!
PASSED!

!testRun: #ReportTest #test21NetTransferForPortfolioShouldNotReflectDeposits stamp: 'fr 11/11/2020 21:17:12'!
PASSED!

!testRun: #ReportTest #test22NetTransferForPortfolioShouldNotReflectWithdraws stamp: 'fr 11/11/2020 21:17:12'!
PASSED!

!testRun: #ReportTest #test23 stamp: 'fr 11/11/2020 21:17:12'!
PASSED!

!testRun: #ReportTest #test24 stamp: 'fr 11/11/2020 21:17:12'!
PASSED!
!Portfolio methodsFor: 'report' stamp: 'fr 11/11/2020 21:17:36' prior: 50875389!
netTransfer
	
	^accounts inject: 0 into: [:currentPorfolioNetBalance :anAccount | currentPorfolioNetBalance +		anAccount netTransfer	]! !
!Portfolio methodsFor: 'report' stamp: 'fr 11/11/2020 21:17:55' prior: 50875491!
netTransfer
	
	^accounts inject: 0 into: [:currentPorfolioNetBalance :anAccount | currentPorfolioNetBalance + anAccount netTransfer	]! !

!testRun: #ReportTest #test01AccountSummaryForAccountWithNoTransactionsShouldJustShowBalanceZero stamp: 'fr 11/11/2020 21:18:26'!
PASSED!

!testRun: #ReportTest #test02AccountSummaryShouldReflectDepositsOnAccounts stamp: 'fr 11/11/2020 21:18:26'!
PASSED!

!testRun: #ReportTest #test03AccountSummaryShouldReflectWithdrawsOnAccounts stamp: 'fr 11/11/2020 21:18:26'!
PASSED!

!testRun: #ReportTest #test04AccountSummaryShouldReflectOutgoingTransfersOnAccounts stamp: 'fr 11/11/2020 21:18:26'!
PASSED!

!testRun: #ReportTest #test05AccountSummaryShouldReflectIncomingTransfersOnAccounts stamp: 'fr 11/11/2020 21:18:26'!
PASSED!

!testRun: #ReportTest #test06AccountSummaryForPortfolioWithNoTransactionsShouldJustShowBalanceZero stamp: 'fr 11/11/2020 21:18:26'!
PASSED!

!testRun: #ReportTest #test07AccountSummaryShouldReflectDepositsOnPortfoliosWithAccounts stamp: 'fr 11/11/2020 21:18:26'!
PASSED!

!testRun: #ReportTest #test08AccountSummaryShouldReflectWithdrawsOnPortfoliosWithAccounts stamp: 'fr 11/11/2020 21:18:26'!
PASSED!

!testRun: #ReportTest #test09AccountSummaryShouldReflectOutgoingAndIncomingTransfersOnPortfoliosWithAccounts stamp: 'fr 11/11/2020 21:18:26'!
PASSED!

!testRun: #ReportTest #test10AccountSummaryShouldReflectDepositsOnPortfoliosWithPortfolios stamp: 'fr 11/11/2020 21:18:26'!
PASSED!

!testRun: #ReportTest #test11AccountSummaryShouldReflectWithdrawsOnPortfoliosWithPortfolios stamp: 'fr 11/11/2020 21:18:26'!
PASSED!

!testRun: #ReportTest #test12AccountSummaryShouldReflectOutgoingAndIncomingTransfersOnPortfoliosWithPortfolios stamp: 'fr 11/11/2020 21:18:26'!
PASSED!

!testRun: #ReportTest #test13NetTransferForAccountWithNoTransactionsShouldBeZero stamp: 'fr 11/11/2020 21:18:26'!
PASSED!

!testRun: #ReportTest #test14NetTransferForAccountWithAnOutgoingTransferShouldReflectItsValue stamp: 'fr 11/11/2020 21:18:26'!
PASSED!

!testRun: #ReportTest #test15NetTransferForAccountWithAnIncomingTransferShouldReflectItsValue stamp: 'fr 11/11/2020 21:18:26'!
PASSED!

!testRun: #ReportTest #test16NetTransferForAccountShouldNotReflectDeposits stamp: 'fr 11/11/2020 21:18:26'!
PASSED!

!testRun: #ReportTest #test17NetTransferForAccountShouldNotReflectWithdraws stamp: 'fr 11/11/2020 21:18:26'!
PASSED!

!testRun: #ReportTest #test18NetTransferForPortfolioWithNoTransactionsShouldBeZero stamp: 'fr 11/11/2020 21:18:26'!
PASSED!

!testRun: #ReportTest #test19NetTransferForPortfolioWithAnOutgoingTransferShouldReflectItsValue stamp: 'fr 11/11/2020 21:18:26'!
PASSED!

!testRun: #ReportTest #test20NetTransferForPortfolioWithAnIncomingTransferShouldReflectItsValue stamp: 'fr 11/11/2020 21:18:26'!
PASSED!

!testRun: #ReportTest #test21NetTransferForPortfolioShouldNotReflectDeposits stamp: 'fr 11/11/2020 21:18:26'!
PASSED!

!testRun: #ReportTest #test22NetTransferForPortfolioShouldNotReflectWithdraws stamp: 'fr 11/11/2020 21:18:26'!
PASSED!

!testRun: #ReportTest #test23 stamp: 'fr 11/11/2020 21:18:26'!
PASSED!

!testRun: #ReportTest #test24 stamp: 'fr 11/11/2020 21:18:26'!
PASSED!
!ReportTest methodsFor: 'as yet unclassified' stamp: 'fr 11/11/2020 21:20:49'!
test23NetTransferForPortfoliosWithPortfoliosShouldReflectTransfers

	| portfolio account anotherPortfolio anotherAccount |
	
	account _ ReceptiveAccount new.
	anotherAccount _ ReceptiveAccount new.
	portfolio _ Portfolio with: account.
	anotherPortfolio _ Portfolio with: portfolio.
	
	Transfer 	move: 30 from: anotherAccount to: account. 
	Transfer 	move: 10 from: account to: anotherAccount. 	
				
	self assert: [anotherPortfolio netTransfer = 20]! !

!methodRemoval: ReportTest #test23 stamp: 'fr 11/11/2020 21:20:49'!
test23

	| portfolio account anotherPortfolio anotherAccount |
	
	account _ ReceptiveAccount new.
	anotherAccount _ ReceptiveAccount new.
	portfolio _ Portfolio with: account.
	anotherPortfolio _ Portfolio with: portfolio.
	
	Transfer 	move: 30 from: anotherAccount to: account. 
	Transfer 	move: 10 from: account to: anotherAccount. 	
				
	self assert: [anotherPortfolio netTransfer = 20]!
!ReportTest methodsFor: 'as yet unclassified' stamp: 'fr 11/11/2020 21:21:10'!
test24NetTransferForPortfoliosWithPortfoliosShouldNotRelfectDepositsOrWithdraws

	| portfolio account anotherPortfolio |
	
	account _ ReceptiveAccount new.
	portfolio _ Portfolio with: account.
	anotherPortfolio _ Portfolio with: portfolio.
	
	Deposit register: 100 on: account.
	Withdraw register: 50 on: account.
				
	self assert: [anotherPortfolio netTransfer = 0]! !

!methodRemoval: ReportTest #test24 stamp: 'fr 11/11/2020 21:21:10'!
test24

	| portfolio account anotherPortfolio |
	
	account _ ReceptiveAccount new.
	portfolio _ Portfolio with: account.
	anotherPortfolio _ Portfolio with: portfolio.
	
	Deposit register: 100 on: account.
	Withdraw register: 50 on: account.
				
	self assert: [anotherPortfolio netTransfer = 0]!
!ReportTest methodsFor: 'as yet unclassified' stamp: 'fr 11/11/2020 21:21:33'!
test23NetTransferForPortfoliosWithPortfoliosShouldReflectOutgoingAndIncomingTransfers

	| portfolio account anotherPortfolio anotherAccount |
	
	account _ ReceptiveAccount new.
	anotherAccount _ ReceptiveAccount new.
	portfolio _ Portfolio with: account.
	anotherPortfolio _ Portfolio with: portfolio.
	
	Transfer 	move: 30 from: anotherAccount to: account. 
	Transfer 	move: 10 from: account to: anotherAccount. 	
				
	self assert: [anotherPortfolio netTransfer = 20]! !

!methodRemoval: ReportTest #test23NetTransferForPortfoliosWithPortfoliosShouldReflectTransfers stamp: 'fr 11/11/2020 21:21:33'!
test23NetTransferForPortfoliosWithPortfoliosShouldReflectTransfers

	| portfolio account anotherPortfolio anotherAccount |
	
	account _ ReceptiveAccount new.
	anotherAccount _ ReceptiveAccount new.
	portfolio _ Portfolio with: account.
	anotherPortfolio _ Portfolio with: portfolio.
	
	Transfer 	move: 30 from: anotherAccount to: account. 
	Transfer 	move: 10 from: account to: anotherAccount. 	
				
	self assert: [anotherPortfolio netTransfer = 20]!

----SNAPSHOT----(11 November 2020 21:23:11) CuisUniversity-4384.image priorSource: 17155780!
!Portfolio methodsFor: 'report' stamp: 'fr 11/11/2020 21:24:29' prior: 50875498!
netTransfer
	
	^accounts inject: 0 into: [:currentPorfolioNetBalance :anAccount | 
		currentPorfolioNetBalance + anAccount netTransfer
	]! !
!Portfolio methodsFor: 'report' stamp: 'fr 11/11/2020 21:24:34' prior: 50875696!
netTransfer
	
	^accounts inject: 0 into: [:currentPorfolioNetBalance :anAccount | currentPorfolioNetBalance + anAccount netTransfer	]! !
!Portfolio methodsFor: 'report' stamp: 'fr 11/11/2020 21:24:46' prior: 50871252!
addSummaryTo: report

	accounts do: [:anAccount | anAccount addSummaryTo: report		]! !
!Portfolio methodsFor: 'report' stamp: 'fr 11/11/2020 21:25:00' prior: 50871293!
accountSummary
	
	| report |
	report _ OrderedCollection new.
	
	self addSummaryTo: report.
	
	report add: 'Balance = ',self balance asString.
	^report! !
!ReceptiveAccount methodsFor: 'report' stamp: 'fr 11/11/2020 21:26:41' prior: 50872504!
netTransfer
	
	^self transactionsForNetTransferBalance
			inject: 0 
			into: [:currentNetBalance :aTransaction | 
					aTransaction affectBalance: currentNetBalance
				]! !
!ReceptiveAccount methodsFor: 'report' stamp: 'fr 11/11/2020 21:26:58' prior: 50871285!
accountSummary
	
	| report |
	report _ OrderedCollection new.
	self addSummaryTo: report.
	report add: 'Balance = ',self balance asString.

	^report ! !
!ReceptiveAccount methodsFor: 'report' stamp: 'fr 11/11/2020 21:27:00' prior: 50875733!
accountSummary
	
	| report |
	
	report _ OrderedCollection new.
	self addSummaryTo: report.
	report add: 'Balance = ',self balance asString.

	^report ! !
!Portfolio methodsFor: 'report' stamp: 'fr 11/11/2020 21:27:15' prior: 50875716!
accountSummary
	
	| report |
	
	report _ OrderedCollection new.
	self addSummaryTo: report.
	report add: 'Balance = ',self balance asString.
	
	^report! !
!Portfolio methodsFor: 'report' stamp: 'fr 11/11/2020 21:27:25' prior: 50875703!
netTransfer
	
	^accounts 
		inject: 0 
		into: [:currentPorfolioNetBalance :anAccount | currentPorfolioNetBalance + anAccount netTransfer	]! !
!Portfolio methodsFor: 'report' stamp: 'fr 11/11/2020 21:27:32' prior: 50875757!
netTransfer
	
	^accounts 
		inject: 0 
		into: [:currentPorfolioNetBalance :anAccount | 
			currentPorfolioNetBalance + anAccount netTransfer
		]! !
!Portfolio methodsFor: 'report' stamp: 'fr 11/11/2020 21:27:41' prior: 50875764!
netTransfer
	
	^accounts 
		inject: 0 
		into: [:currentPorfolioNetBalance :anAccount | currentPorfolioNetBalance + anAccount netTransfer]! !
!ReceptiveAccount methodsFor: 'report' stamp: 'fr 11/11/2020 21:27:57' prior: 50875724!
netTransfer
	
	^self transactionsForNetTransferBalance
			inject: 0 
			into: [:currentNetBalance :aTransaction | aTransaction affectBalance: currentNetBalance]! !
!ReceptiveAccount methodsFor: 'report' stamp: 'fr 11/11/2020 21:28:27' prior: 50872522!
transactionsForNetTransferBalance

	^transactions 
		select: [:aTransaction | 
				(aTransaction isMemberOf: WithdrawByTransference) 
				or: [aTransaction isMemberOf: DepositByTransference]
			   ]! !

----SNAPSHOT----(11 November 2020 21:29:16) CuisUniversity-4384.image priorSource: 17409341!
!ReportTest methodsFor: 'tests' stamp: 'fr 11/12/2020 10:58:32' prior: 50875631!
test24NetTransferForPortfoliosWithPortfoliosShouldNotRelfectDepositsOrWithdraws

	| portfolio account anotherPortfolio |
		
	account _ ReceptiveAccount new.
	portfolio _ Portfolio with: account.
	anotherPortfolio _ Portfolio with: portfolio.
	
	Deposit register: 100 on: account.
	Withdraw register: 50 on: account.
				
	self assert: [anotherPortfolio netTransfer = 0]! !
!ReportTest methodsFor: 'tests' stamp: 'fr 11/12/2020 11:00:58'!
test25

	"Son necesarios tests con m�ltiples transacciones de cada una? El modelo llev� a la generalizaci�n temprana debido a que usamos el colaborador transactions con un do:. De otra forma habr�a que hacer transactions at: 1 o algo as� para el caso individual. Esto no parece ser m�s simple que hacer un do:"! !
!ReportTest methodsFor: 'tests' stamp: 'fr 11/12/2020 11:01:10'!
Notas

	"Son necesarios tests con m�ltiples transacciones de cada una? El modelo llev� a la generalizaci�n temprana debido a que usamos el colaborador transactions con un do:. De otra forma habr�a que hacer transactions at: 1 o algo as� para el caso individual. Esto no parece ser m�s simple que hacer un do:"! !

!methodRemoval: ReportTest #test25 stamp: 'fr 11/12/2020 11:01:10'!
test25

	"Son necesarios tests con m�ltiples transacciones de cada una? El modelo llev� a la generalizaci�n temprana debido a que usamos el colaborador transactions con un do:. De otra forma habr�a que hacer transactions at: 1 o algo as� para el caso individual. Esto no parece ser m�s simple que hacer un do:"!

!testRun: #ReportTest #test01AccountSummaryForAccountWithNoTransactionsShouldJustShowBalanceZero stamp: 'fr 11/12/2020 11:01:16'!
PASSED!

!testRun: #ReportTest #test02AccountSummaryShouldReflectDepositsOnAccounts stamp: 'fr 11/12/2020 11:01:16'!
PASSED!

!testRun: #ReportTest #test03AccountSummaryShouldReflectWithdrawsOnAccounts stamp: 'fr 11/12/2020 11:01:16'!
PASSED!

!testRun: #ReportTest #test04AccountSummaryShouldReflectOutgoingTransfersOnAccounts stamp: 'fr 11/12/2020 11:01:16'!
PASSED!

!testRun: #ReportTest #test05AccountSummaryShouldReflectIncomingTransfersOnAccounts stamp: 'fr 11/12/2020 11:01:16'!
PASSED!

!testRun: #ReportTest #test06AccountSummaryForPortfolioWithNoTransactionsShouldJustShowBalanceZero stamp: 'fr 11/12/2020 11:01:16'!
PASSED!

!testRun: #ReportTest #test07AccountSummaryShouldReflectDepositsOnPortfoliosWithAccounts stamp: 'fr 11/12/2020 11:01:16'!
PASSED!

!testRun: #ReportTest #test08AccountSummaryShouldReflectWithdrawsOnPortfoliosWithAccounts stamp: 'fr 11/12/2020 11:01:16'!
PASSED!

!testRun: #ReportTest #test09AccountSummaryShouldReflectOutgoingAndIncomingTransfersOnPortfoliosWithAccounts stamp: 'fr 11/12/2020 11:01:16'!
PASSED!

!testRun: #ReportTest #test10AccountSummaryShouldReflectDepositsOnPortfoliosWithPortfolios stamp: 'fr 11/12/2020 11:01:16'!
PASSED!

!testRun: #ReportTest #test11AccountSummaryShouldReflectWithdrawsOnPortfoliosWithPortfolios stamp: 'fr 11/12/2020 11:01:16'!
PASSED!

!testRun: #ReportTest #test12AccountSummaryShouldReflectOutgoingAndIncomingTransfersOnPortfoliosWithPortfolios stamp: 'fr 11/12/2020 11:01:16'!
PASSED!

!testRun: #ReportTest #test13NetTransferForAccountWithNoTransactionsShouldBeZero stamp: 'fr 11/12/2020 11:01:16'!
PASSED!

!testRun: #ReportTest #test14NetTransferForAccountWithAnOutgoingTransferShouldReflectItsValue stamp: 'fr 11/12/2020 11:01:16'!
PASSED!

!testRun: #ReportTest #test15NetTransferForAccountWithAnIncomingTransferShouldReflectItsValue stamp: 'fr 11/12/2020 11:01:16'!
PASSED!

!testRun: #ReportTest #test16NetTransferForAccountShouldNotReflectDeposits stamp: 'fr 11/12/2020 11:01:16'!
PASSED!

!testRun: #ReportTest #test17NetTransferForAccountShouldNotReflectWithdraws stamp: 'fr 11/12/2020 11:01:16'!
PASSED!

!testRun: #ReportTest #test18NetTransferForPortfolioWithNoTransactionsShouldBeZero stamp: 'fr 11/12/2020 11:01:16'!
PASSED!

!testRun: #ReportTest #test19NetTransferForPortfolioWithAnOutgoingTransferShouldReflectItsValue stamp: 'fr 11/12/2020 11:01:16'!
PASSED!

!testRun: #ReportTest #test20NetTransferForPortfolioWithAnIncomingTransferShouldReflectItsValue stamp: 'fr 11/12/2020 11:01:16'!
PASSED!

!testRun: #ReportTest #test21NetTransferForPortfolioShouldNotReflectDeposits stamp: 'fr 11/12/2020 11:01:16'!
PASSED!

!testRun: #ReportTest #test22NetTransferForPortfolioShouldNotReflectWithdraws stamp: 'fr 11/12/2020 11:01:16'!
PASSED!

!testRun: #ReportTest #test23NetTransferForPortfoliosWithPortfoliosShouldReflectOutgoingAndIncomingTransfers stamp: 'fr 11/12/2020 11:01:16'!
PASSED!

!testRun: #ReportTest #test24NetTransferForPortfoliosWithPortfoliosShouldNotRelfectDepositsOrWithdraws stamp: 'fr 11/12/2020 11:01:16'!
PASSED!

!testRun: #ReportTest #test01AccountSummaryForAccountWithNoTransactionsShouldJustShowBalanceZero stamp: 'fr 11/12/2020 16:05:39'!
PASSED!

!testRun: #ReportTest #test02AccountSummaryShouldReflectDepositsOnAccounts stamp: 'fr 11/12/2020 16:05:39'!
PASSED!

!testRun: #ReportTest #test03AccountSummaryShouldReflectWithdrawsOnAccounts stamp: 'fr 11/12/2020 16:05:39'!
PASSED!

!testRun: #ReportTest #test04AccountSummaryShouldReflectOutgoingTransfersOnAccounts stamp: 'fr 11/12/2020 16:05:39'!
PASSED!

!testRun: #ReportTest #test05AccountSummaryShouldReflectIncomingTransfersOnAccounts stamp: 'fr 11/12/2020 16:05:39'!
PASSED!

!testRun: #ReportTest #test06AccountSummaryForPortfolioWithNoTransactionsShouldJustShowBalanceZero stamp: 'fr 11/12/2020 16:05:39'!
PASSED!

!testRun: #ReportTest #test07AccountSummaryShouldReflectDepositsOnPortfoliosWithAccounts stamp: 'fr 11/12/2020 16:05:39'!
PASSED!

!testRun: #ReportTest #test08AccountSummaryShouldReflectWithdrawsOnPortfoliosWithAccounts stamp: 'fr 11/12/2020 16:05:39'!
PASSED!

!testRun: #ReportTest #test09AccountSummaryShouldReflectOutgoingAndIncomingTransfersOnPortfoliosWithAccounts stamp: 'fr 11/12/2020 16:05:39'!
PASSED!

!testRun: #ReportTest #test10AccountSummaryShouldReflectDepositsOnPortfoliosWithPortfolios stamp: 'fr 11/12/2020 16:05:39'!
PASSED!

!testRun: #ReportTest #test11AccountSummaryShouldReflectWithdrawsOnPortfoliosWithPortfolios stamp: 'fr 11/12/2020 16:05:39'!
PASSED!

!testRun: #ReportTest #test12AccountSummaryShouldReflectOutgoingAndIncomingTransfersOnPortfoliosWithPortfolios stamp: 'fr 11/12/2020 16:05:39'!
PASSED!

!testRun: #ReportTest #test13NetTransferForAccountWithNoTransactionsShouldBeZero stamp: 'fr 11/12/2020 16:05:39'!
PASSED!

!testRun: #ReportTest #test14NetTransferForAccountWithAnOutgoingTransferShouldReflectItsValue stamp: 'fr 11/12/2020 16:05:39'!
PASSED!

!testRun: #ReportTest #test15NetTransferForAccountWithAnIncomingTransferShouldReflectItsValue stamp: 'fr 11/12/2020 16:05:39'!
PASSED!

!testRun: #ReportTest #test16NetTransferForAccountShouldNotReflectDeposits stamp: 'fr 11/12/2020 16:05:39'!
PASSED!

!testRun: #ReportTest #test17NetTransferForAccountShouldNotReflectWithdraws stamp: 'fr 11/12/2020 16:05:39'!
PASSED!

!testRun: #ReportTest #test18NetTransferForPortfolioWithNoTransactionsShouldBeZero stamp: 'fr 11/12/2020 16:05:39'!
PASSED!

!testRun: #ReportTest #test19NetTransferForPortfolioWithAnOutgoingTransferShouldReflectItsValue stamp: 'fr 11/12/2020 16:05:39'!
PASSED!

!testRun: #ReportTest #test20NetTransferForPortfolioWithAnIncomingTransferShouldReflectItsValue stamp: 'fr 11/12/2020 16:05:39'!
PASSED!

!testRun: #ReportTest #test21NetTransferForPortfolioShouldNotReflectDeposits stamp: 'fr 11/12/2020 16:05:39'!
PASSED!

!testRun: #ReportTest #test22NetTransferForPortfolioShouldNotReflectWithdraws stamp: 'fr 11/12/2020 16:05:39'!
PASSED!

!testRun: #ReportTest #test23NetTransferForPortfoliosWithPortfoliosShouldReflectOutgoingAndIncomingTransfers stamp: 'fr 11/12/2020 16:05:39'!
PASSED!

!testRun: #ReportTest #test24NetTransferForPortfoliosWithPortfoliosShouldNotRelfectDepositsOrWithdraws stamp: 'fr 11/12/2020 16:05:39'!
PASSED!
!Transfer class methodsFor: 'instance creation' stamp: 'fr 11/12/2020 16:21:31'!
signalInvalidTransfeerAmount

	^ self error: self invalidTransferAmountErrorDescription! !
!Transfer class methodsFor: 'instance creation' stamp: 'fr 11/12/2020 16:21:31' prior: 50869318!
move: transferValue from: aReceptiveAccountToMoveFrom to: aReceptiveAccountToMoveTo 
	
	transferValue <= 0 ifTrue: [self signalInvalidTransfeerAmount].
	aReceptiveAccountToMoveFrom = aReceptiveAccountToMoveTo ifTrue: [self error: self canNotTransferToItselfErrorDescription].
	
	^self new initializeMove: transferValue from: aReceptiveAccountToMoveFrom to: aReceptiveAccountToMoveTo ! !
!Transfer class methodsFor: 'instance creation' stamp: 'fr 11/12/2020 16:22:03'!
failIfInvalidTransferAmount: transferValue

	^ transferValue <= 0 ifTrue: [self signalInvalidTransfeerAmount]! !
!Transfer class methodsFor: 'instance creation' stamp: 'fr 11/12/2020 16:22:03' prior: 50876055!
move: transferValue from: aReceptiveAccountToMoveFrom to: aReceptiveAccountToMoveTo 
	
	self failIfInvalidTransferAmount: transferValue.
	aReceptiveAccountToMoveFrom = aReceptiveAccountToMoveTo ifTrue: [self error: self canNotTransferToItselfErrorDescription].
	
	^self new initializeMove: transferValue from: aReceptiveAccountToMoveFrom to: aReceptiveAccountToMoveTo ! !
!Transfer class methodsFor: 'instance creation' stamp: 'fr 11/12/2020 16:22:11' prior: 50876077!
move: transferAmount from: aReceptiveAccountToMoveFrom to: aReceptiveAccountToMoveTo 
	
	self failIfInvalidTransferAmount: transferAmount.
	aReceptiveAccountToMoveFrom = aReceptiveAccountToMoveTo ifTrue: [self error: self canNotTransferToItselfErrorDescription].
	
	^self new initializeMove: transferAmount from: aReceptiveAccountToMoveFrom to: aReceptiveAccountToMoveTo ! !
!Transfer class methodsFor: 'instance creation' stamp: 'fr 11/12/2020 16:22:27'!
signalCanNotTransferToItself

	^ self error: self canNotTransferToItselfErrorDescription! !
!Transfer class methodsFor: 'instance creation' stamp: 'fr 11/12/2020 16:22:27' prior: 50876092!
move: transferAmount from: aReceptiveAccountToMoveFrom to: aReceptiveAccountToMoveTo 
	
	self failIfInvalidTransferAmount: transferAmount.
	aReceptiveAccountToMoveFrom = aReceptiveAccountToMoveTo ifTrue: [self signalCanNotTransferToItself].
	
	^self new initializeMove: transferAmount from: aReceptiveAccountToMoveFrom to: aReceptiveAccountToMoveTo ! !
!Transfer class methodsFor: 'instance creation' stamp: 'fr 11/12/2020 16:22:59'!
failIf: aReceptiveAccountToMoveFrom isEqualTo: aReceptiveAccountToMoveTo

	^ aReceptiveAccountToMoveFrom = aReceptiveAccountToMoveTo ifTrue: [self signalCanNotTransferToItself]! !
!Transfer class methodsFor: 'instance creation' stamp: 'fr 11/12/2020 16:22:59' prior: 50876113!
move: transferAmount from: aReceptiveAccountToMoveFrom to: aReceptiveAccountToMoveTo 
	
	self failIfInvalidTransferAmount: transferAmount.
	self failIf: aReceptiveAccountToMoveFrom isEqualTo: aReceptiveAccountToMoveTo.
	
	^self new initializeMove: transferAmount from: aReceptiveAccountToMoveFrom to: aReceptiveAccountToMoveTo ! !

'Cuenta de Juan' = ' Cuenta de Juan' !
!ReportTest methodsFor: 'tests - tree structure' stamp: 'fr 11/12/2020 16:34:51'!
test01

	| portfolio |
	portfolio _ Portfolio named: 'Portfolio de la familia'.
	
	self assert: [portfolio treeStructure = OrderedCollection with: 'Portfolio de la familia']! !

!testRun: #ReportTest #test01 stamp: 'fr 11/12/2020 16:34:56'!
ERROR!

!testRun: #ReportTest #test01 stamp: 'fr 11/12/2020 16:35:03'!
ERROR!
!Portfolio class methodsFor: 'instance creation' stamp: 'fr 11/12/2020 16:35:09'!
named: aString 
	"DO NOT FORGET TO RENAME COLLABORATORS AND REMOVE THIS COMMENT!!!!"
	self shouldBeImplemented.
	^self new initializeNamed: aString ! !
!Portfolio class methodsFor: 'instance creation' stamp: 'fr 11/12/2020 16:36:07' prior: 50876164!
named: aName
	
	^self new initializeNamed: aName ! !

!testRun: #ReportTest #test01 stamp: 'fr 11/12/2020 16:36:16'!
ERROR!

!classDefinition: #Portfolio category: 'Portfolio-Solucion' stamp: 'fr 11/12/2020 16:36:29'!
Account subclass: #Portfolio
	instanceVariableNames: 'accounts parents name'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!
!Portfolio methodsFor: 'initialization' stamp: 'fr 11/12/2020 16:36:29'!
initializeNamed: aName 
	self shouldBeImplemented.
	name := aName.! !
!Portfolio methodsFor: 'initialization' stamp: 'fr 11/12/2020 16:36:37' prior: 50876186!
initializeNamed: aName 
	
	name _ aName.! !

!testRun: #ReportTest #test01 stamp: 'fr 11/12/2020 16:36:38'!
ERROR!
!Portfolio methodsFor: 'report' stamp: 'fr 11/12/2020 16:36:44'!
treeStructure
	self shouldBeImplemented.! !
!Portfolio methodsFor: 'report' stamp: 'fr 11/12/2020 16:36:57' prior: 50876197!
treeStructure
	
	^OrderedCollection with: name! !

!testRun: #ReportTest #test01 stamp: 'fr 11/12/2020 16:37:00'!
ERROR!
!ReportTest methodsFor: 'tests - tree structure' stamp: 'fr 11/12/2020 16:37:21'!
test025

	| portfolio |
	portfolio _ Portfolio named: 'Portfolio de la familia'.
	
	self assert: [portfolio treeStructure = OrderedCollection with: 'Portfolio de la familia']! !

!methodRemoval: ReportTest #test01 stamp: 'fr 11/12/2020 16:37:24'!
test01

	| portfolio |
	portfolio _ Portfolio named: 'Portfolio de la familia'.
	
	self assert: [portfolio treeStructure = OrderedCollection with: 'Portfolio de la familia']!
!ReportTest methodsFor: 'tests - tree structure' stamp: 'fr 11/12/2020 16:37:28'!
test25

	| portfolio |
	portfolio _ Portfolio named: 'Portfolio de la familia'.
	
	self assert: [portfolio treeStructure = OrderedCollection with: 'Portfolio de la familia']! !

!methodRemoval: ReportTest #test025 stamp: 'fr 11/12/2020 16:37:29'!
test025

	| portfolio |
	portfolio _ Portfolio named: 'Portfolio de la familia'.
	
	self assert: [portfolio treeStructure = OrderedCollection with: 'Portfolio de la familia']!
!ReportTest methodsFor: 'tests - tree structure' stamp: 'fr 11/12/2020 16:37:39' prior: 50876224!
test25

	| portfolio |
	portfolio _ Portfolio named: 'Portfolio de la familia'.
	
	self assert: [portfolio treeStructure = (OrderedCollection with: 'Portfolio de la familia')]! !

!testRun: #ReportTest #test25 stamp: 'fr 11/12/2020 16:37:43'!
PASSED!

!testRun: #ReportTest #test01AccountSummaryForAccountWithNoTransactionsShouldJustShowBalanceZero stamp: 'fr 11/12/2020 16:37:43'!
PASSED!

!testRun: #ReportTest #test02AccountSummaryShouldReflectDepositsOnAccounts stamp: 'fr 11/12/2020 16:37:43'!
PASSED!

!testRun: #ReportTest #test03AccountSummaryShouldReflectWithdrawsOnAccounts stamp: 'fr 11/12/2020 16:37:43'!
PASSED!

!testRun: #ReportTest #test04AccountSummaryShouldReflectOutgoingTransfersOnAccounts stamp: 'fr 11/12/2020 16:37:43'!
PASSED!

!testRun: #ReportTest #test05AccountSummaryShouldReflectIncomingTransfersOnAccounts stamp: 'fr 11/12/2020 16:37:43'!
PASSED!

!testRun: #ReportTest #test06AccountSummaryForPortfolioWithNoTransactionsShouldJustShowBalanceZero stamp: 'fr 11/12/2020 16:37:43'!
PASSED!

!testRun: #ReportTest #test07AccountSummaryShouldReflectDepositsOnPortfoliosWithAccounts stamp: 'fr 11/12/2020 16:37:43'!
PASSED!

!testRun: #ReportTest #test08AccountSummaryShouldReflectWithdrawsOnPortfoliosWithAccounts stamp: 'fr 11/12/2020 16:37:43'!
PASSED!

!testRun: #ReportTest #test09AccountSummaryShouldReflectOutgoingAndIncomingTransfersOnPortfoliosWithAccounts stamp: 'fr 11/12/2020 16:37:43'!
PASSED!

!testRun: #ReportTest #test10AccountSummaryShouldReflectDepositsOnPortfoliosWithPortfolios stamp: 'fr 11/12/2020 16:37:43'!
PASSED!

!testRun: #ReportTest #test11AccountSummaryShouldReflectWithdrawsOnPortfoliosWithPortfolios stamp: 'fr 11/12/2020 16:37:43'!
PASSED!

!testRun: #ReportTest #test12AccountSummaryShouldReflectOutgoingAndIncomingTransfersOnPortfoliosWithPortfolios stamp: 'fr 11/12/2020 16:37:43'!
PASSED!

!testRun: #ReportTest #test13NetTransferForAccountWithNoTransactionsShouldBeZero stamp: 'fr 11/12/2020 16:37:43'!
PASSED!

!testRun: #ReportTest #test14NetTransferForAccountWithAnOutgoingTransferShouldReflectItsValue stamp: 'fr 11/12/2020 16:37:43'!
PASSED!

!testRun: #ReportTest #test15NetTransferForAccountWithAnIncomingTransferShouldReflectItsValue stamp: 'fr 11/12/2020 16:37:43'!
PASSED!

!testRun: #ReportTest #test16NetTransferForAccountShouldNotReflectDeposits stamp: 'fr 11/12/2020 16:37:43'!
PASSED!

!testRun: #ReportTest #test17NetTransferForAccountShouldNotReflectWithdraws stamp: 'fr 11/12/2020 16:37:43'!
PASSED!

!testRun: #ReportTest #test18NetTransferForPortfolioWithNoTransactionsShouldBeZero stamp: 'fr 11/12/2020 16:37:43'!
PASSED!

!testRun: #ReportTest #test19NetTransferForPortfolioWithAnOutgoingTransferShouldReflectItsValue stamp: 'fr 11/12/2020 16:37:43'!
PASSED!

!testRun: #ReportTest #test20NetTransferForPortfolioWithAnIncomingTransferShouldReflectItsValue stamp: 'fr 11/12/2020 16:37:43'!
PASSED!

!testRun: #ReportTest #test21NetTransferForPortfolioShouldNotReflectDeposits stamp: 'fr 11/12/2020 16:37:43'!
PASSED!

!testRun: #ReportTest #test22NetTransferForPortfolioShouldNotReflectWithdraws stamp: 'fr 11/12/2020 16:37:43'!
PASSED!

!testRun: #ReportTest #test23NetTransferForPortfoliosWithPortfoliosShouldReflectOutgoingAndIncomingTransfers stamp: 'fr 11/12/2020 16:37:43'!
PASSED!

!testRun: #ReportTest #test24NetTransferForPortfoliosWithPortfoliosShouldNotRelfectDepositsOrWithdraws stamp: 'fr 11/12/2020 16:37:43'!
PASSED!

!testRun: #ReportTest #test25 stamp: 'fr 11/12/2020 16:37:43'!
PASSED!
!ReportTest methodsFor: 'tests - tree structure' stamp: 'fr 11/12/2020 16:37:47'!
test26

	| portfolio |
	portfolio _ Portfolio named: 'Portfolio de la familia'.
	
	self assert: [portfolio treeStructure = (OrderedCollection with: 'Portfolio de la familia')]! !
!ReportTest methodsFor: 'tests - tree structure' stamp: 'fr 11/12/2020 16:38:42' prior: 50876353!
test26

	| portfolio account |
	account add: (ReceptiveAccount named: 'Cuenta de Juan').
	portfolio _ Portfolio named: 'Portfolio de la familia'.

	self assert: [portfolio treeStructure = (OrderedCollection with: 'Portfolio de la familia')]! !
!ReportTest methodsFor: 'tests - tree structure' stamp: 'fr 11/12/2020 16:39:55' prior: 50876362!
test26

	| portfolio account |
	account _ ReceptiveAccount named: 'Cuenta de Juan'.
	portfolio _ Portfolio named: 'Portfolio de la familia' with: account.

	self assert: [portfolio treeStructure = (OrderedCollection with: 'Portfolio de la familia' with: ' Cuenta de Juan')]! !

!testRun: #ReportTest #test26 stamp: 'fr 11/12/2020 16:40:02'!
ERROR!
!ReceptiveAccount class methodsFor: 'instance creation' stamp: 'fr 11/12/2020 16:40:08'!
named: aString 
	"DO NOT FORGET TO RENAME COLLABORATORS AND REMOVE THIS COMMENT!!!!"
	self shouldBeImplemented.
	^self new initializeNamed: aString ! !
!ReceptiveAccount class methodsFor: 'instance creation' stamp: 'fr 11/12/2020 16:40:14' prior: 50876387!
named: aString 
	
	^self new initializeNamed: aString ! !
!ReceptiveAccount class methodsFor: 'instance creation' stamp: 'fr 11/12/2020 16:40:17' prior: 50876396!
named: aName 
	
	^self new initializeNamed: aName ! !

!testRun: #ReportTest #test26 stamp: 'fr 11/12/2020 16:40:49'!
ERROR!

!classDefinition: #ReceptiveAccount category: 'Portfolio-Solucion' stamp: 'fr 11/12/2020 16:40:57'!
Account subclass: #ReceptiveAccount
	instanceVariableNames: 'transactions name'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!
!ReceptiveAccount methodsFor: 'initialization' stamp: 'fr 11/12/2020 16:40:57'!
initializeNamed: aName 
	self shouldBeImplemented.
	name := aName.! !
!ReceptiveAccount methodsFor: 'initialization' stamp: 'fr 11/12/2020 16:41:03' prior: 50876417!
initializeNamed: aName 
	
	name _ aName.! !

!testRun: #ReportTest #test26 stamp: 'fr 11/12/2020 16:41:05'!
ERROR!
!Portfolio class methodsFor: 'instance creation' stamp: 'fr 11/12/2020 16:41:10'!
named: aString with: aReceptiveAccount 
	"DO NOT FORGET TO RENAME COLLABORATORS AND REMOVE THIS COMMENT!!!!"
	self shouldBeImplemented.
	^self new initializeNamed: aString with: aReceptiveAccount ! !
!Portfolio class methodsFor: 'instance creation' stamp: 'fr 11/12/2020 16:41:32' prior: 50876430!
named: aString with: aReceptiveAccount 
	
	^(self with: aReceptiveAccount) initializeNamed: aString! !
!Portfolio class methodsFor: 'instance creation' stamp: 'fr 11/12/2020 16:41:35' prior: 50876440!
named: aName with: aReceptiveAccount 
	
	^(self with: aReceptiveAccount) initializeNamed: aName! !

!testRun: #ReportTest #test26 stamp: 'fr 11/12/2020 16:41:38'!
FAILURE!

portfolio treeStructure!

portfolio!

account!
!Portfolio methodsFor: 'report' stamp: 'fr 11/12/2020 16:43:30' prior: 50876201!
treeStructure
	
	| tree |
	tree _ OrderedCollection new.
	
	self collectTreeInto: tree.
	
	^tree! !
!Portfolio methodsFor: 'report' stamp: 'fr 11/12/2020 16:44:00' prior: 50876457!
treeStructure
	
	
	^OrderedCollection with: 'Portfolio de la familia' with: ' Cuenta de Juan'! !

!testRun: #ReportTest #test26 stamp: 'fr 11/12/2020 16:44:01'!
PASSED!

!testRun: #ReportTest #test01AccountSummaryForAccountWithNoTransactionsShouldJustShowBalanceZero stamp: 'fr 11/12/2020 16:44:01'!
PASSED!

!testRun: #ReportTest #test02AccountSummaryShouldReflectDepositsOnAccounts stamp: 'fr 11/12/2020 16:44:01'!
PASSED!

!testRun: #ReportTest #test03AccountSummaryShouldReflectWithdrawsOnAccounts stamp: 'fr 11/12/2020 16:44:01'!
PASSED!

!testRun: #ReportTest #test04AccountSummaryShouldReflectOutgoingTransfersOnAccounts stamp: 'fr 11/12/2020 16:44:01'!
PASSED!

!testRun: #ReportTest #test05AccountSummaryShouldReflectIncomingTransfersOnAccounts stamp: 'fr 11/12/2020 16:44:01'!
PASSED!

!testRun: #ReportTest #test06AccountSummaryForPortfolioWithNoTransactionsShouldJustShowBalanceZero stamp: 'fr 11/12/2020 16:44:01'!
PASSED!

!testRun: #ReportTest #test07AccountSummaryShouldReflectDepositsOnPortfoliosWithAccounts stamp: 'fr 11/12/2020 16:44:01'!
PASSED!

!testRun: #ReportTest #test08AccountSummaryShouldReflectWithdrawsOnPortfoliosWithAccounts stamp: 'fr 11/12/2020 16:44:01'!
PASSED!

!testRun: #ReportTest #test09AccountSummaryShouldReflectOutgoingAndIncomingTransfersOnPortfoliosWithAccounts stamp: 'fr 11/12/2020 16:44:01'!
PASSED!

!testRun: #ReportTest #test10AccountSummaryShouldReflectDepositsOnPortfoliosWithPortfolios stamp: 'fr 11/12/2020 16:44:01'!
PASSED!

!testRun: #ReportTest #test11AccountSummaryShouldReflectWithdrawsOnPortfoliosWithPortfolios stamp: 'fr 11/12/2020 16:44:01'!
PASSED!

!testRun: #ReportTest #test12AccountSummaryShouldReflectOutgoingAndIncomingTransfersOnPortfoliosWithPortfolios stamp: 'fr 11/12/2020 16:44:01'!
PASSED!

!testRun: #ReportTest #test13NetTransferForAccountWithNoTransactionsShouldBeZero stamp: 'fr 11/12/2020 16:44:01'!
PASSED!

!testRun: #ReportTest #test14NetTransferForAccountWithAnOutgoingTransferShouldReflectItsValue stamp: 'fr 11/12/2020 16:44:01'!
PASSED!

!testRun: #ReportTest #test15NetTransferForAccountWithAnIncomingTransferShouldReflectItsValue stamp: 'fr 11/12/2020 16:44:01'!
PASSED!

!testRun: #ReportTest #test16NetTransferForAccountShouldNotReflectDeposits stamp: 'fr 11/12/2020 16:44:01'!
PASSED!

!testRun: #ReportTest #test17NetTransferForAccountShouldNotReflectWithdraws stamp: 'fr 11/12/2020 16:44:01'!
PASSED!

!testRun: #ReportTest #test18NetTransferForPortfolioWithNoTransactionsShouldBeZero stamp: 'fr 11/12/2020 16:44:01'!
PASSED!

!testRun: #ReportTest #test19NetTransferForPortfolioWithAnOutgoingTransferShouldReflectItsValue stamp: 'fr 11/12/2020 16:44:01'!
PASSED!

!testRun: #ReportTest #test20NetTransferForPortfolioWithAnIncomingTransferShouldReflectItsValue stamp: 'fr 11/12/2020 16:44:01'!
PASSED!

!testRun: #ReportTest #test21NetTransferForPortfolioShouldNotReflectDeposits stamp: 'fr 11/12/2020 16:44:01'!
PASSED!

!testRun: #ReportTest #test22NetTransferForPortfolioShouldNotReflectWithdraws stamp: 'fr 11/12/2020 16:44:01'!
PASSED!

!testRun: #ReportTest #test23NetTransferForPortfoliosWithPortfoliosShouldReflectOutgoingAndIncomingTransfers stamp: 'fr 11/12/2020 16:44:01'!
PASSED!

!testRun: #ReportTest #test24NetTransferForPortfoliosWithPortfoliosShouldNotRelfectDepositsOrWithdraws stamp: 'fr 11/12/2020 16:44:01'!
PASSED!

!testRun: #ReportTest #test25 stamp: 'fr 11/12/2020 16:44:01'!
FAILURE!

!testRun: #ReportTest #test26 stamp: 'fr 11/12/2020 16:44:01'!
PASSED!

!testRun: #ReportTest #test25 stamp: 'fr 11/12/2020 16:44:01'!
FAILURE!
!Portfolio methodsFor: 'report' stamp: 'fr 11/12/2020 16:44:56' prior: 50876463!
treeStructure
	
	
	| tree |
	tree _ OrderedCollection with: 'Portfolio de la familia'.
	
	accounts ifNotEmpty: [tree add: ' Cuenta de Juan'].
	
	^tree! !

!testRun: #ReportTest #test25 stamp: 'fr 11/12/2020 16:44:58'!
PASSED!

!testRun: #ReportTest #test01AccountSummaryForAccountWithNoTransactionsShouldJustShowBalanceZero stamp: 'fr 11/12/2020 16:45:02'!
PASSED!

!testRun: #ReportTest #test02AccountSummaryShouldReflectDepositsOnAccounts stamp: 'fr 11/12/2020 16:45:02'!
PASSED!

!testRun: #ReportTest #test03AccountSummaryShouldReflectWithdrawsOnAccounts stamp: 'fr 11/12/2020 16:45:02'!
PASSED!

!testRun: #ReportTest #test04AccountSummaryShouldReflectOutgoingTransfersOnAccounts stamp: 'fr 11/12/2020 16:45:02'!
PASSED!

!testRun: #ReportTest #test05AccountSummaryShouldReflectIncomingTransfersOnAccounts stamp: 'fr 11/12/2020 16:45:02'!
PASSED!

!testRun: #ReportTest #test06AccountSummaryForPortfolioWithNoTransactionsShouldJustShowBalanceZero stamp: 'fr 11/12/2020 16:45:02'!
PASSED!

!testRun: #ReportTest #test07AccountSummaryShouldReflectDepositsOnPortfoliosWithAccounts stamp: 'fr 11/12/2020 16:45:02'!
PASSED!

!testRun: #ReportTest #test08AccountSummaryShouldReflectWithdrawsOnPortfoliosWithAccounts stamp: 'fr 11/12/2020 16:45:02'!
PASSED!

!testRun: #ReportTest #test09AccountSummaryShouldReflectOutgoingAndIncomingTransfersOnPortfoliosWithAccounts stamp: 'fr 11/12/2020 16:45:02'!
PASSED!

!testRun: #ReportTest #test10AccountSummaryShouldReflectDepositsOnPortfoliosWithPortfolios stamp: 'fr 11/12/2020 16:45:02'!
PASSED!

!testRun: #ReportTest #test11AccountSummaryShouldReflectWithdrawsOnPortfoliosWithPortfolios stamp: 'fr 11/12/2020 16:45:02'!
PASSED!

!testRun: #ReportTest #test12AccountSummaryShouldReflectOutgoingAndIncomingTransfersOnPortfoliosWithPortfolios stamp: 'fr 11/12/2020 16:45:02'!
PASSED!

!testRun: #ReportTest #test13NetTransferForAccountWithNoTransactionsShouldBeZero stamp: 'fr 11/12/2020 16:45:02'!
PASSED!

!testRun: #ReportTest #test14NetTransferForAccountWithAnOutgoingTransferShouldReflectItsValue stamp: 'fr 11/12/2020 16:45:02'!
PASSED!

!testRun: #ReportTest #test15NetTransferForAccountWithAnIncomingTransferShouldReflectItsValue stamp: 'fr 11/12/2020 16:45:02'!
PASSED!

!testRun: #ReportTest #test16NetTransferForAccountShouldNotReflectDeposits stamp: 'fr 11/12/2020 16:45:02'!
PASSED!

!testRun: #ReportTest #test17NetTransferForAccountShouldNotReflectWithdraws stamp: 'fr 11/12/2020 16:45:02'!
PASSED!

!testRun: #ReportTest #test18NetTransferForPortfolioWithNoTransactionsShouldBeZero stamp: 'fr 11/12/2020 16:45:02'!
PASSED!

!testRun: #ReportTest #test19NetTransferForPortfolioWithAnOutgoingTransferShouldReflectItsValue stamp: 'fr 11/12/2020 16:45:02'!
PASSED!

!testRun: #ReportTest #test20NetTransferForPortfolioWithAnIncomingTransferShouldReflectItsValue stamp: 'fr 11/12/2020 16:45:02'!
PASSED!

!testRun: #ReportTest #test21NetTransferForPortfolioShouldNotReflectDeposits stamp: 'fr 11/12/2020 16:45:02'!
PASSED!

!testRun: #ReportTest #test22NetTransferForPortfolioShouldNotReflectWithdraws stamp: 'fr 11/12/2020 16:45:02'!
PASSED!

!testRun: #ReportTest #test23NetTransferForPortfoliosWithPortfoliosShouldReflectOutgoingAndIncomingTransfers stamp: 'fr 11/12/2020 16:45:02'!
PASSED!

!testRun: #ReportTest #test24NetTransferForPortfoliosWithPortfoliosShouldNotRelfectDepositsOrWithdraws stamp: 'fr 11/12/2020 16:45:02'!
PASSED!

!testRun: #ReportTest #test25 stamp: 'fr 11/12/2020 16:45:02'!
PASSED!

!testRun: #ReportTest #test26 stamp: 'fr 11/12/2020 16:45:02'!
PASSED!
!ReportTest methodsFor: 'tests - tree structure' stamp: 'fr 11/12/2020 16:45:30'!
test27

	| portfolio account |
	account _ ReceptiveAccount named: 'Cuenta de Juan'.
	portfolio _ Portfolio named: 'Portfolio de la familia' with: account.

	self assert: [portfolio treeStructure = (OrderedCollection with: 'Portfolio de la familia' with: ' Cuenta de Juan')]! !
!ReportTest methodsFor: 'tests - tree structure' stamp: 'fr 11/12/2020 16:47:40' prior: 50876691!
test27

	| portfolio account anotherAccount anotherPortfolio |
	account _ ReceptiveAccount named: 'Cuenta de Juan'.
	anotherAccount _ ReceptiveAccount named: 'Cuenta de Angeles'.
	portfolio _ Portfolio named: 'Portfolio de la familia' with: account.
	anotherPortfolio _ Portfolio named: 'Portfolio de Angeles' with: anotherAccount.
	

	self assert: [portfolio treeStructure = (OrderedCollection with: 'Portfolio de la familia' with: ' Cuenta de Juan' with: ' Portfolio de Angeles' with: '  Cuenta de Angeles')]! !
!ReportTest methodsFor: 'tests - tree structure' stamp: 'fr 11/12/2020 16:48:00' prior: 50876703!
test27

	| portfolio account anotherAccount anotherPortfolio |
	account _ ReceptiveAccount named: 'Cuenta de Juan'.
	anotherAccount _ ReceptiveAccount named: 'Cuenta de Angeles'.
	portfolio _ Portfolio named: 'Portfolio de la familia' with: account.
	anotherPortfolio _ Portfolio named: 'Portfolio de Angeles' with: anotherAccount.
	

	self assert: [anotherPortfolio treeStructure = (OrderedCollection with: 'Portfolio de la familia' with: ' Cuenta de Juan' with: ' Portfolio de Angeles' with: '  Cuenta de Angeles')]! !
!ReportTest methodsFor: 'tests - tree structure' stamp: 'fr 11/12/2020 16:48:34' prior: 50876723!
test27

	| portfolio account anotherAccount anotherPortfolio |
	account _ ReceptiveAccount named: 'Cuenta de Juan'.
	anotherAccount _ ReceptiveAccount named: 'Cuenta de Angeles'.
	portfolio _ Portfolio named: 'Portfolio de la familia' with: account.
	anotherPortfolio _ Portfolio named: 'Portfolio de Angeles' with: anotherAccount with: portfolio.
	

	self assert: [anotherPortfolio treeStructure = (OrderedCollection with: 'Portfolio de la familia' with: ' Cuenta de Juan' with: ' Portfolio de Angeles' with: '  Cuenta de Angeles')]! !

!testRun: #ReportTest #test27 stamp: 'fr 11/12/2020 16:48:36'!
ERROR!
!Portfolio class methodsFor: 'instance creation' stamp: 'fr 11/12/2020 16:48:42'!
named: aString with: aReceptiveAccount with: aPortfolio 
	"DO NOT FORGET TO RENAME COLLABORATORS AND REMOVE THIS COMMENT!!!!"
	self shouldBeImplemented.
	^self new initializeNamed: aString with: aReceptiveAccount with: aPortfolio ! !
!Portfolio class methodsFor: 'instance creation' stamp: 'fr 11/12/2020 16:49:04' prior: 50876765!
named: aString with: aReceptiveAccount with: aPortfolio 
	
	^(self with: aReceptiveAccount with: aPortfolio) initializeNamed: aString! !
!Portfolio class methodsFor: 'instance creation' stamp: 'fr 11/12/2020 16:49:08' prior: 50876776!
named: aName with: aReceptiveAccount with: aPortfolio 
	
	^(self with: aReceptiveAccount with: aPortfolio) initializeNamed: aName! !

!testRun: #ReportTest #test27 stamp: 'fr 11/12/2020 16:49:12'!
FAILURE!
!Portfolio methodsFor: 'report' stamp: 'fr 11/12/2020 16:49:57' prior: 50876577!
treeStructure
	
	
	| tree |
	tree _ OrderedCollection with: 'Portfolio de la familia'.
	
	self collectTreeInto: tree.
		
	^tree! !

!testRun: #ReportTest #test27 stamp: 'fr 11/12/2020 16:50:01'!
ERROR!
!Portfolio methodsFor: 'report' stamp: 'fr 11/12/2020 16:50:05'!
collectTreeInto: anOrderedCollection 
	self shouldBeImplemented.! !

!methodRemoval: Portfolio #collectTreeInto: stamp: 'fr 11/12/2020 16:51:03'!
collectTreeInto: anOrderedCollection 
	self shouldBeImplemented.!

!testRun: #ReportTest #test01AccountSummaryForAccountWithNoTransactionsShouldJustShowBalanceZero stamp: 'fr 11/12/2020 16:51:08'!
PASSED!

!testRun: #ReportTest #test02AccountSummaryShouldReflectDepositsOnAccounts stamp: 'fr 11/12/2020 16:51:08'!
PASSED!

!testRun: #ReportTest #test03AccountSummaryShouldReflectWithdrawsOnAccounts stamp: 'fr 11/12/2020 16:51:08'!
PASSED!

!testRun: #ReportTest #test04AccountSummaryShouldReflectOutgoingTransfersOnAccounts stamp: 'fr 11/12/2020 16:51:08'!
PASSED!

!testRun: #ReportTest #test05AccountSummaryShouldReflectIncomingTransfersOnAccounts stamp: 'fr 11/12/2020 16:51:08'!
PASSED!

!testRun: #ReportTest #test06AccountSummaryForPortfolioWithNoTransactionsShouldJustShowBalanceZero stamp: 'fr 11/12/2020 16:51:08'!
PASSED!

!testRun: #ReportTest #test07AccountSummaryShouldReflectDepositsOnPortfoliosWithAccounts stamp: 'fr 11/12/2020 16:51:08'!
PASSED!

!testRun: #ReportTest #test08AccountSummaryShouldReflectWithdrawsOnPortfoliosWithAccounts stamp: 'fr 11/12/2020 16:51:08'!
PASSED!

!testRun: #ReportTest #test09AccountSummaryShouldReflectOutgoingAndIncomingTransfersOnPortfoliosWithAccounts stamp: 'fr 11/12/2020 16:51:08'!
PASSED!

!testRun: #ReportTest #test10AccountSummaryShouldReflectDepositsOnPortfoliosWithPortfolios stamp: 'fr 11/12/2020 16:51:08'!
PASSED!

!testRun: #ReportTest #test11AccountSummaryShouldReflectWithdrawsOnPortfoliosWithPortfolios stamp: 'fr 11/12/2020 16:51:08'!
PASSED!

!testRun: #ReportTest #test12AccountSummaryShouldReflectOutgoingAndIncomingTransfersOnPortfoliosWithPortfolios stamp: 'fr 11/12/2020 16:51:08'!
PASSED!

!testRun: #ReportTest #test13NetTransferForAccountWithNoTransactionsShouldBeZero stamp: 'fr 11/12/2020 16:51:08'!
PASSED!

!testRun: #ReportTest #test14NetTransferForAccountWithAnOutgoingTransferShouldReflectItsValue stamp: 'fr 11/12/2020 16:51:08'!
PASSED!

!testRun: #ReportTest #test15NetTransferForAccountWithAnIncomingTransferShouldReflectItsValue stamp: 'fr 11/12/2020 16:51:08'!
PASSED!

!testRun: #ReportTest #test16NetTransferForAccountShouldNotReflectDeposits stamp: 'fr 11/12/2020 16:51:08'!
PASSED!

!testRun: #ReportTest #test17NetTransferForAccountShouldNotReflectWithdraws stamp: 'fr 11/12/2020 16:51:08'!
PASSED!

!testRun: #ReportTest #test18NetTransferForPortfolioWithNoTransactionsShouldBeZero stamp: 'fr 11/12/2020 16:51:08'!
PASSED!

!testRun: #ReportTest #test19NetTransferForPortfolioWithAnOutgoingTransferShouldReflectItsValue stamp: 'fr 11/12/2020 16:51:08'!
PASSED!

!testRun: #ReportTest #test20NetTransferForPortfolioWithAnIncomingTransferShouldReflectItsValue stamp: 'fr 11/12/2020 16:51:08'!
PASSED!

!testRun: #ReportTest #test21NetTransferForPortfolioShouldNotReflectDeposits stamp: 'fr 11/12/2020 16:51:08'!
PASSED!

!testRun: #ReportTest #test22NetTransferForPortfolioShouldNotReflectWithdraws stamp: 'fr 11/12/2020 16:51:08'!
PASSED!

!testRun: #ReportTest #test23NetTransferForPortfoliosWithPortfoliosShouldReflectOutgoingAndIncomingTransfers stamp: 'fr 11/12/2020 16:51:08'!
PASSED!

!testRun: #ReportTest #test24NetTransferForPortfoliosWithPortfoliosShouldNotRelfectDepositsOrWithdraws stamp: 'fr 11/12/2020 16:51:08'!
PASSED!

!testRun: #ReportTest #test25 stamp: 'fr 11/12/2020 16:51:08'!
ERROR!

!testRun: #ReportTest #test26 stamp: 'fr 11/12/2020 16:51:08'!
ERROR!

!testRun: #ReportTest #test27 stamp: 'fr 11/12/2020 16:51:08'!
ERROR!

!testRun: #ReportTest #test27 stamp: 'fr 11/12/2020 16:51:13'!
ERROR!
!Portfolio methodsFor: 'report' stamp: 'fr 11/12/2020 16:51:36' prior: 50876793!
treeStructure
	
	
	| tree |
	tree _ OrderedCollection with: 'Portfolio de la familia'.
	
	self collectTreeInto: tree withIndentation: 0.
		
	^tree! !

!testRun: #ReportTest #test27 stamp: 'fr 11/12/2020 16:51:38'!
ERROR!
!Portfolio methodsFor: 'report' stamp: 'fr 11/12/2020 16:51:46'!
collectTreeInto: anOrderedCollection withIndentation: aSmallInteger 
	self shouldBeImplemented.! !
!Portfolio methodsFor: 'report' stamp: 'fr 11/12/2020 16:51:50' prior: 50876928!
collectTreeInto: anOrderedCollection withIndentation: aSmallInteger 
	
	! !

treeEntry _ ''. !

treeEntry !

treeEntry _ treeEntry,' '. !

treeEntry _ treeEntry,' '. !

treeEntry _ treeEntry,' '. !

treeEntry !
!Portfolio methodsFor: 'report' stamp: 'fr 11/12/2020 16:55:23' prior: 50876934!
collectTreeInto: anOrderedCollection withIndentation: anIndentationValue

	| treeEntry |
	treeEntry _ ''.
	anIndentationValue timesRepeat: [treeEntry _ treeEntry,' '].
	treeEntry _ treeEntry,name.
	anOrderedCollection add: treeEntry.
	
	accounts do: [:anAccount | anAccount collectTreeInto: anOrderedCollection withIndentation: anIndentationValue + 1]
	
	! !

!testRun: #ReportTest #test27 stamp: 'fr 11/12/2020 16:55:40'!
ERROR!
!ReceptiveAccount methodsFor: 'report' stamp: 'fr 11/12/2020 16:56:17'!
collectTreeInto: anOrderedCollection withIndentation: aSmallInteger 
	self shouldBeImplemented.! !
!ReceptiveAccount methodsFor: 'report' stamp: 'fr 11/12/2020 16:56:28' prior: 50876960!
collectTreeInto: anOrderedCollection withIndentation: anIndentationValue 
	
	| treeEntry |
	treeEntry _ ''.
	anIndentationValue timesRepeat: [treeEntry _ treeEntry,' '].
	treeEntry _ treeEntry,name.
	anOrderedCollection add: treeEntry.! !

!testRun: #ReportTest #test27 stamp: 'fr 11/12/2020 16:56:29'!
FAILURE!

anotherPortfolio treeStructure!

self !

anotherPortfolio treeStructure!

self!

----SNAPSHOT----(12 November 2020 17:03:45) CuisUniversity-4384.image priorSource: 17412681!

----QUIT----(12 November 2020 17:03:55) CuisUniversity-4384.image priorSource: 17450568!

----STARTUP---- (12 November 2020 17:23:01) as /home/fede/Documentos/Facultad/Inge1/Cuises/linux64/CuisUniversity-4384.image!

!Account methodsFor: 'nil' stamp: 'fr 11/12/2020 20:04:40'!
accountSummary
	
	| report |
	
	report _ OrderedCollection new.
	self addSummaryTo: report.
	report add: 'Balance = ',self balance asString.

	^report ! !

!methodRemoval: Portfolio #accountSummary stamp: 'fr 11/12/2020 20:04:50'!
accountSummary
	
	| report |
	
	report _ OrderedCollection new.
	self addSummaryTo: report.
	report add: 'Balance = ',self balance asString.
	
	^report!

!methodRemoval: ReceptiveAccount #accountSummary stamp: 'fr 11/12/2020 20:04:53'!
accountSummary
	
	| report |
	
	report _ OrderedCollection new.
	self addSummaryTo: report.
	report add: 'Balance = ',self balance asString.

	^report !
!ReportTest methodsFor: 'tests - tree structure' stamp: 'fr 11/12/2020 20:05:05' prior: 50876743!
test27

	"| portfolio account anotherAccount anotherPortfolio |
	account _ ReceptiveAccount named: 'Cuenta de Juan'.
	anotherAccount _ ReceptiveAccount named: 'Cuenta de Angeles'.
	portfolio _ Portfolio named: 'Portfolio de la familia' with: account.
	anotherPortfolio _ Portfolio named: 'Portfolio de Angeles' with: anotherAccount with: portfolio.
	

	self assert: [anotherPortfolio treeStructure = (OrderedCollection with: 'Portfolio de la familia' with: ' Cuenta de Juan' with: ' Portfolio de Angeles' with: '  Cuenta de Angeles')]"! !

!testRun: #ReportTest #test01AccountSummaryForAccountWithNoTransactionsShouldJustShowBalanceZero stamp: 'fr 11/12/2020 20:05:06'!
PASSED!

!testRun: #ReportTest #test02AccountSummaryShouldReflectDepositsOnAccounts stamp: 'fr 11/12/2020 20:05:06'!
PASSED!

!testRun: #ReportTest #test03AccountSummaryShouldReflectWithdrawsOnAccounts stamp: 'fr 11/12/2020 20:05:06'!
PASSED!

!testRun: #ReportTest #test04AccountSummaryShouldReflectOutgoingTransfersOnAccounts stamp: 'fr 11/12/2020 20:05:06'!
PASSED!

!testRun: #ReportTest #test05AccountSummaryShouldReflectIncomingTransfersOnAccounts stamp: 'fr 11/12/2020 20:05:06'!
PASSED!

!testRun: #ReportTest #test06AccountSummaryForPortfolioWithNoTransactionsShouldJustShowBalanceZero stamp: 'fr 11/12/2020 20:05:06'!
PASSED!

!testRun: #ReportTest #test07AccountSummaryShouldReflectDepositsOnPortfoliosWithAccounts stamp: 'fr 11/12/2020 20:05:06'!
PASSED!

!testRun: #ReportTest #test08AccountSummaryShouldReflectWithdrawsOnPortfoliosWithAccounts stamp: 'fr 11/12/2020 20:05:06'!
PASSED!

!testRun: #ReportTest #test09AccountSummaryShouldReflectOutgoingAndIncomingTransfersOnPortfoliosWithAccounts stamp: 'fr 11/12/2020 20:05:06'!
PASSED!

!testRun: #ReportTest #test10AccountSummaryShouldReflectDepositsOnPortfoliosWithPortfolios stamp: 'fr 11/12/2020 20:05:06'!
PASSED!

!testRun: #ReportTest #test11AccountSummaryShouldReflectWithdrawsOnPortfoliosWithPortfolios stamp: 'fr 11/12/2020 20:05:06'!
PASSED!

!testRun: #ReportTest #test12AccountSummaryShouldReflectOutgoingAndIncomingTransfersOnPortfoliosWithPortfolios stamp: 'fr 11/12/2020 20:05:06'!
PASSED!

!testRun: #ReportTest #test13NetTransferForAccountWithNoTransactionsShouldBeZero stamp: 'fr 11/12/2020 20:05:06'!
PASSED!

!testRun: #ReportTest #test14NetTransferForAccountWithAnOutgoingTransferShouldReflectItsValue stamp: 'fr 11/12/2020 20:05:06'!
PASSED!

!testRun: #ReportTest #test15NetTransferForAccountWithAnIncomingTransferShouldReflectItsValue stamp: 'fr 11/12/2020 20:05:06'!
PASSED!

!testRun: #ReportTest #test16NetTransferForAccountShouldNotReflectDeposits stamp: 'fr 11/12/2020 20:05:06'!
PASSED!

!testRun: #ReportTest #test17NetTransferForAccountShouldNotReflectWithdraws stamp: 'fr 11/12/2020 20:05:06'!
PASSED!

!testRun: #ReportTest #test18NetTransferForPortfolioWithNoTransactionsShouldBeZero stamp: 'fr 11/12/2020 20:05:06'!
PASSED!

!testRun: #ReportTest #test19NetTransferForPortfolioWithAnOutgoingTransferShouldReflectItsValue stamp: 'fr 11/12/2020 20:05:06'!
PASSED!

!testRun: #ReportTest #test20NetTransferForPortfolioWithAnIncomingTransferShouldReflectItsValue stamp: 'fr 11/12/2020 20:05:06'!
PASSED!

!testRun: #ReportTest #test21NetTransferForPortfolioShouldNotReflectDeposits stamp: 'fr 11/12/2020 20:05:06'!
PASSED!

!testRun: #ReportTest #test22NetTransferForPortfolioShouldNotReflectWithdraws stamp: 'fr 11/12/2020 20:05:06'!
PASSED!

!testRun: #ReportTest #test23NetTransferForPortfoliosWithPortfoliosShouldReflectOutgoingAndIncomingTransfers stamp: 'fr 11/12/2020 20:05:06'!
PASSED!

!testRun: #ReportTest #test24NetTransferForPortfoliosWithPortfoliosShouldNotRelfectDepositsOrWithdraws stamp: 'fr 11/12/2020 20:05:06'!
PASSED!

!testRun: #ReportTest #test25 stamp: 'fr 11/12/2020 20:05:06'!
FAILURE!

!testRun: #ReportTest #test26 stamp: 'fr 11/12/2020 20:05:06'!
FAILURE!

!testRun: #ReportTest #test27 stamp: 'fr 11/12/2020 20:05:06'!
PASSED!
!ReportTest methodsFor: 'tests - tree structure' stamp: 'fr 11/12/2020 20:05:18' prior: 50876373!
test26

	"| portfolio account |
	account _ ReceptiveAccount named: 'Cuenta de Juan'.
	portfolio _ Portfolio named: 'Portfolio de la familia' with: account.

	self assert: [portfolio treeStructure = (OrderedCollection with: 'Portfolio de la familia' with: ' Cuenta de Juan')]"! !
!ReportTest methodsFor: 'tests - tree structure' stamp: 'fr 11/12/2020 20:05:22' prior: 50876241!
test25

	"| portfolio |
	portfolio _ Portfolio named: 'Portfolio de la familia'.
	
	self assert: [portfolio treeStructure = (OrderedCollection with: 'Portfolio de la familia')]"! !

!testRun: #ReportTest #test01AccountSummaryForAccountWithNoTransactionsShouldJustShowBalanceZero stamp: 'fr 11/12/2020 20:05:24'!
PASSED!

!testRun: #ReportTest #test02AccountSummaryShouldReflectDepositsOnAccounts stamp: 'fr 11/12/2020 20:05:24'!
PASSED!

!testRun: #ReportTest #test03AccountSummaryShouldReflectWithdrawsOnAccounts stamp: 'fr 11/12/2020 20:05:24'!
PASSED!

!testRun: #ReportTest #test04AccountSummaryShouldReflectOutgoingTransfersOnAccounts stamp: 'fr 11/12/2020 20:05:24'!
PASSED!

!testRun: #ReportTest #test05AccountSummaryShouldReflectIncomingTransfersOnAccounts stamp: 'fr 11/12/2020 20:05:24'!
PASSED!

!testRun: #ReportTest #test06AccountSummaryForPortfolioWithNoTransactionsShouldJustShowBalanceZero stamp: 'fr 11/12/2020 20:05:24'!
PASSED!

!testRun: #ReportTest #test07AccountSummaryShouldReflectDepositsOnPortfoliosWithAccounts stamp: 'fr 11/12/2020 20:05:24'!
PASSED!

!testRun: #ReportTest #test08AccountSummaryShouldReflectWithdrawsOnPortfoliosWithAccounts stamp: 'fr 11/12/2020 20:05:24'!
PASSED!

!testRun: #ReportTest #test09AccountSummaryShouldReflectOutgoingAndIncomingTransfersOnPortfoliosWithAccounts stamp: 'fr 11/12/2020 20:05:24'!
PASSED!

!testRun: #ReportTest #test10AccountSummaryShouldReflectDepositsOnPortfoliosWithPortfolios stamp: 'fr 11/12/2020 20:05:24'!
PASSED!

!testRun: #ReportTest #test11AccountSummaryShouldReflectWithdrawsOnPortfoliosWithPortfolios stamp: 'fr 11/12/2020 20:05:24'!
PASSED!

!testRun: #ReportTest #test12AccountSummaryShouldReflectOutgoingAndIncomingTransfersOnPortfoliosWithPortfolios stamp: 'fr 11/12/2020 20:05:24'!
PASSED!

!testRun: #ReportTest #test13NetTransferForAccountWithNoTransactionsShouldBeZero stamp: 'fr 11/12/2020 20:05:24'!
PASSED!

!testRun: #ReportTest #test14NetTransferForAccountWithAnOutgoingTransferShouldReflectItsValue stamp: 'fr 11/12/2020 20:05:24'!
PASSED!

!testRun: #ReportTest #test15NetTransferForAccountWithAnIncomingTransferShouldReflectItsValue stamp: 'fr 11/12/2020 20:05:24'!
PASSED!

!testRun: #ReportTest #test16NetTransferForAccountShouldNotReflectDeposits stamp: 'fr 11/12/2020 20:05:24'!
PASSED!

!testRun: #ReportTest #test17NetTransferForAccountShouldNotReflectWithdraws stamp: 'fr 11/12/2020 20:05:24'!
PASSED!

!testRun: #ReportTest #test18NetTransferForPortfolioWithNoTransactionsShouldBeZero stamp: 'fr 11/12/2020 20:05:24'!
PASSED!

!testRun: #ReportTest #test19NetTransferForPortfolioWithAnOutgoingTransferShouldReflectItsValue stamp: 'fr 11/12/2020 20:05:24'!
PASSED!

!testRun: #ReportTest #test20NetTransferForPortfolioWithAnIncomingTransferShouldReflectItsValue stamp: 'fr 11/12/2020 20:05:24'!
PASSED!

!testRun: #ReportTest #test21NetTransferForPortfolioShouldNotReflectDeposits stamp: 'fr 11/12/2020 20:05:24'!
PASSED!

!testRun: #ReportTest #test22NetTransferForPortfolioShouldNotReflectWithdraws stamp: 'fr 11/12/2020 20:05:24'!
PASSED!

!testRun: #ReportTest #test23NetTransferForPortfoliosWithPortfoliosShouldReflectOutgoingAndIncomingTransfers stamp: 'fr 11/12/2020 20:05:24'!
PASSED!

!testRun: #ReportTest #test24NetTransferForPortfoliosWithPortfoliosShouldNotRelfectDepositsOrWithdraws stamp: 'fr 11/12/2020 20:05:24'!
PASSED!

!testRun: #ReportTest #test25 stamp: 'fr 11/12/2020 20:05:24'!
PASSED!

!testRun: #ReportTest #test26 stamp: 'fr 11/12/2020 20:05:24'!
PASSED!

!testRun: #ReportTest #test27 stamp: 'fr 11/12/2020 20:05:24'!
PASSED!

!classDefinition: #Reporter category: 'Portfolio-Solucion' stamp: 'fr 11/12/2020 21:31:45'!
Object subclass: #Reporter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!
!Account methodsFor: 'as yet unclassified' stamp: 'fr 11/12/2020 21:31:38' prior: 50876990!
accountSummary
	
	
	| reporter |
	reporter _ Reporter for: self.
	
	^Reporter accountSummary
	
! !
!Account methodsFor: 'as yet unclassified' stamp: 'fr 11/12/2020 21:31:51' prior: 50877273!
accountSummary
	
	
	| reporter |
	reporter _ Reporter for: self.
	
	^reporter accountSummary
	
! !

!classRenamed: #Reporter as: #SummaryReporter stamp: 'fr 11/12/2020 21:33:01'!
Smalltalk renameClassNamed: #Reporter as: #SummaryReporter!
!Account methodsFor: 'as yet unclassified' stamp: 'fr 11/12/2020 21:33:01' prior: 50877279!
accountSummary
	
	
	| reporter |
	reporter _ SummaryReporter for: self.
	
	^reporter accountSummary
	
! !

!classDefinition: #SummaryReporter category: 'Portfolio-Solucion' stamp: 'fr 11/12/2020 21:37:54'!
Object subclass: #SummaryReporter
	instanceVariableNames: 'account'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!
!SummaryReporter methodsFor: 'no messages' stamp: 'fr 11/12/2020 21:37:53'!
accountSummary
	
	account buildReportWith: self! !

!methodRemoval: SummaryReporter #accountSummary stamp: 'fr 11/12/2020 21:38:04'!
accountSummary
	
	account buildReportWith: self!

!testRun: #ReportTest #test01AccountSummaryForAccountWithNoTransactionsShouldJustShowBalanceZero stamp: 'fr 11/12/2020 21:38:11'!
ERROR!
!SummaryReporter class methodsFor: 'instance creation' stamp: 'fr 11/12/2020 21:38:22'!
for: aReceptiveAccount 
	"DO NOT FORGET TO RENAME COLLABORATORS AND REMOVE THIS COMMENT!!!!"
	self shouldBeImplemented.
	^self new initializeFor: aReceptiveAccount ! !
!SummaryReporter class methodsFor: 'instance creation' stamp: 'fr 11/12/2020 21:38:36' prior: 50877317!
for: aReceptiveAccount 
	
	^self new initializeFor: aReceptiveAccount ! !

!testRun: #ReportTest #test01AccountSummaryForAccountWithNoTransactionsShouldJustShowBalanceZero stamp: 'fr 11/12/2020 21:38:44'!
ERROR!

!classDefinition: #SummaryReporter category: 'Portfolio-Solucion' stamp: 'fr 11/12/2020 21:38:52'!
Object subclass: #SummaryReporter
	instanceVariableNames: 'account receptiveAccount'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!
!SummaryReporter methodsFor: 'initialization' stamp: 'fr 11/12/2020 21:38:52'!
initializeFor: aReceptiveAccount 
	self shouldBeImplemented.
	receptiveAccount := aReceptiveAccount.! !
!SummaryReporter methodsFor: 'initialization' stamp: 'fr 11/12/2020 21:38:56' prior: 50877344!
initializeFor: aReceptiveAccount 
	
	receptiveAccount := aReceptiveAccount.! !
!SummaryReporter methodsFor: 'initialization' stamp: 'fr 11/12/2020 21:39:01' prior: 50877351!
initializeFor: aReceptiveAccount 
	
	account _ aReceptiveAccount.! !

!testRun: #ReportTest #test01AccountSummaryForAccountWithNoTransactionsShouldJustShowBalanceZero stamp: 'fr 11/12/2020 21:39:03'!
ERROR!
!SummaryReporter methodsFor: 'summary' stamp: 'fr 11/12/2020 21:39:14'!
accountSummary
	self shouldBeImplemented.! !
!SummaryReporter methodsFor: 'summary' stamp: 'fr 11/12/2020 21:40:10' prior: 50877366!
accountSummary
	
	| report |
	report _ OrderedCollection new.
	account buildReportWith: self into: report.
	^report! !

!testRun: #ReportTest #test01AccountSummaryForAccountWithNoTransactionsShouldJustShowBalanceZero stamp: 'fr 11/12/2020 21:40:22'!
ERROR!
!ReceptiveAccount methodsFor: 'AAAAA' stamp: 'fr 11/12/2020 21:40:42'!
buildReportWith: aSummaryReporter into: anOrderedCollection 
	self shouldBeImplemented.! !
!ReceptiveAccount methodsFor: 'AAAAA' stamp: 'fr 11/12/2020 21:41:21' prior: 50877382!
buildReportWith: aSummaryReporter into: anOrderedCollection 
	
	^aSummaryReporter buildReporFor: self into: anOrderedCollection ! !

!testRun: #ReportTest #test01AccountSummaryForAccountWithNoTransactionsShouldJustShowBalanceZero stamp: 'fr 11/12/2020 21:41:26'!
ERROR!
!SummaryReporter methodsFor: 'summary' stamp: 'fr 11/12/2020 21:41:36'!
buildReporFor: aReceptiveAccount into: anOrderedCollection 
	self shouldBeImplemented.! !
!SummaryReporter methodsFor: 'summary' stamp: 'fr 11/12/2020 21:41:42' prior: 50877399!
buildReporFor: aReceptiveAccount into: anOrderedCollection 
	
	! !
!SummaryReporter methodsFor: 'summary' stamp: 'fr 11/12/2020 21:43:01' prior: 50877405!
buildReporFor: aReceptiveAccount into: anOrderedCollection 
	
	^aReceptiveAccount transactions do: [	:aTransaction | 
		aTransaction addToReportWith: self into: anOrderedCollection 	
	]! !

!testRun: #ReportTest #test01AccountSummaryForAccountWithNoTransactionsShouldJustShowBalanceZero stamp: 'fr 11/12/2020 21:43:05'!
FAILURE!

!methodRemoval: SummaryReporter #buildReporFor:into: stamp: 'fr 11/12/2020 21:43:41'!
buildReporFor: aReceptiveAccount into: anOrderedCollection 
	
	^aReceptiveAccount transactions do: [	:aTransaction | 
		aTransaction addToReportWith: self into: anOrderedCollection 	
	]!

!methodRemoval: ReceptiveAccount #buildReportWith:into: stamp: 'fr 11/12/2020 21:43:58'!
buildReportWith: aSummaryReporter into: anOrderedCollection 
	
	^aSummaryReporter buildReporFor: self into: anOrderedCollection !

!testRun: #ReportTest #test01AccountSummaryForAccountWithNoTransactionsShouldJustShowBalanceZero stamp: 'fr 11/12/2020 21:44:04'!
ERROR!
!SummaryReporter methodsFor: 'summary' stamp: 'fr 11/12/2020 21:45:15' prior: 50877371!
accountSummary
	
	| report |
	report _ OrderedCollection new.
	report add: 'Balance = 0'.
	^report! !

!testRun: #ReportTest #test01AccountSummaryForAccountWithNoTransactionsShouldJustShowBalanceZero stamp: 'fr 11/12/2020 21:45:17'!
PASSED!

!testRun: #ReportTest #test01AccountSummaryForAccountWithNoTransactionsShouldJustShowBalanceZero stamp: 'fr 11/12/2020 21:45:17'!
PASSED!

!testRun: #ReportTest #test02AccountSummaryShouldReflectDepositsOnAccounts stamp: 'fr 11/12/2020 21:45:17'!
FAILURE!

!testRun: #ReportTest #test03AccountSummaryShouldReflectWithdrawsOnAccounts stamp: 'fr 11/12/2020 21:45:17'!
FAILURE!

!testRun: #ReportTest #test04AccountSummaryShouldReflectOutgoingTransfersOnAccounts stamp: 'fr 11/12/2020 21:45:17'!
FAILURE!

!testRun: #ReportTest #test05AccountSummaryShouldReflectIncomingTransfersOnAccounts stamp: 'fr 11/12/2020 21:45:17'!
FAILURE!

!testRun: #ReportTest #test06AccountSummaryForPortfolioWithNoTransactionsShouldJustShowBalanceZero stamp: 'fr 11/12/2020 21:45:17'!
PASSED!

!testRun: #ReportTest #test07AccountSummaryShouldReflectDepositsOnPortfoliosWithAccounts stamp: 'fr 11/12/2020 21:45:17'!
FAILURE!

!testRun: #ReportTest #test08AccountSummaryShouldReflectWithdrawsOnPortfoliosWithAccounts stamp: 'fr 11/12/2020 21:45:17'!
FAILURE!

!testRun: #ReportTest #test09AccountSummaryShouldReflectOutgoingAndIncomingTransfersOnPortfoliosWithAccounts stamp: 'fr 11/12/2020 21:45:17'!
FAILURE!

!testRun: #ReportTest #test10AccountSummaryShouldReflectDepositsOnPortfoliosWithPortfolios stamp: 'fr 11/12/2020 21:45:17'!
FAILURE!

!testRun: #ReportTest #test11AccountSummaryShouldReflectWithdrawsOnPortfoliosWithPortfolios stamp: 'fr 11/12/2020 21:45:17'!
FAILURE!

!testRun: #ReportTest #test12AccountSummaryShouldReflectOutgoingAndIncomingTransfersOnPortfoliosWithPortfolios stamp: 'fr 11/12/2020 21:45:17'!
FAILURE!

!testRun: #ReportTest #test13NetTransferForAccountWithNoTransactionsShouldBeZero stamp: 'fr 11/12/2020 21:45:17'!
PASSED!

!testRun: #ReportTest #test14NetTransferForAccountWithAnOutgoingTransferShouldReflectItsValue stamp: 'fr 11/12/2020 21:45:17'!
PASSED!

!testRun: #ReportTest #test15NetTransferForAccountWithAnIncomingTransferShouldReflectItsValue stamp: 'fr 11/12/2020 21:45:17'!
PASSED!

!testRun: #ReportTest #test16NetTransferForAccountShouldNotReflectDeposits stamp: 'fr 11/12/2020 21:45:17'!
PASSED!

!testRun: #ReportTest #test17NetTransferForAccountShouldNotReflectWithdraws stamp: 'fr 11/12/2020 21:45:17'!
PASSED!

!testRun: #ReportTest #test18NetTransferForPortfolioWithNoTransactionsShouldBeZero stamp: 'fr 11/12/2020 21:45:17'!
PASSED!

!testRun: #ReportTest #test19NetTransferForPortfolioWithAnOutgoingTransferShouldReflectItsValue stamp: 'fr 11/12/2020 21:45:17'!
PASSED!

!testRun: #ReportTest #test20NetTransferForPortfolioWithAnIncomingTransferShouldReflectItsValue stamp: 'fr 11/12/2020 21:45:17'!
PASSED!

!testRun: #ReportTest #test21NetTransferForPortfolioShouldNotReflectDeposits stamp: 'fr 11/12/2020 21:45:17'!
PASSED!

!testRun: #ReportTest #test22NetTransferForPortfolioShouldNotReflectWithdraws stamp: 'fr 11/12/2020 21:45:17'!
PASSED!

!testRun: #ReportTest #test23NetTransferForPortfoliosWithPortfoliosShouldReflectOutgoingAndIncomingTransfers stamp: 'fr 11/12/2020 21:45:17'!
PASSED!

!testRun: #ReportTest #test24NetTransferForPortfoliosWithPortfoliosShouldNotRelfectDepositsOrWithdraws stamp: 'fr 11/12/2020 21:45:17'!
PASSED!

!testRun: #ReportTest #test25 stamp: 'fr 11/12/2020 21:45:17'!
PASSED!

!testRun: #ReportTest #test26 stamp: 'fr 11/12/2020 21:45:17'!
PASSED!

!testRun: #ReportTest #test27 stamp: 'fr 11/12/2020 21:45:17'!
PASSED!

!testRun: #ReportTest #test01AccountSummaryForAccountWithNoTransactionsShouldJustShowBalanceZero stamp: 'fr 11/12/2020 21:45:31'!
PASSED!

!testRun: #ReportTest #test02AccountSummaryShouldReflectDepositsOnAccounts stamp: 'fr 11/12/2020 21:45:33'!
FAILURE!

!testRun: #ReportTest #test02AccountSummaryShouldReflectDepositsOnAccounts stamp: 'fr 11/12/2020 21:45:33'!
FAILURE!

!testRun: #ReportTest #test02AccountSummaryShouldReflectDepositsOnAccounts stamp: 'fr 11/12/2020 21:45:42'!
FAILURE!

!testRun: #ReportTest #test02AccountSummaryShouldReflectDepositsOnAccounts stamp: 'fr 11/12/2020 21:45:42'!
FAILURE!
!SummaryReporter methodsFor: 'summary' stamp: 'fr 11/12/2020 21:40:10' prior: 50877443!
accountSummary
	
	| report |
	report _ OrderedCollection new.
	account buildReportWith: self into: report.
	^report! !
!ReceptiveAccount methodsFor: 'AAAAA' stamp: 'fr 11/12/2020 21:47:17'!
buildReportWith: aReporter into: aReport

	^aReporter buildReportForReceptiveAccount: self into: aReport! !
!SummaryReporter methodsFor: 'summary' stamp: 'fr 11/12/2020 21:50:13'!
buildReportForReceptiveAccount: aReceptiveAccount into: aReport

	^aReceptiveAccount transactions do: [:aTransaction | 
		aTransaction addToReportWith: self into: aReport	
	]! !
!Deposit methodsFor: 'value' stamp: 'fr 11/12/2020 21:51:02'!
addToReportWith: aReporter into: aReport	

	^aReporter addDepositToReport: self into: aReport! !
!Withdraw methodsFor: 'value' stamp: 'fr 11/12/2020 21:51:36'!
addToReportWith: aReporter into: aReport	

	^aReporter addWithdrawToReport: self into: aReport! !
!WithdrawByTransference methodsFor: 'value' stamp: 'fr 11/12/2020 21:51:48'!
addToReportWith: aReporter into: aReport	

	^aReporter addWithdrawByTransferToReport: self into: aReport! !
!DepositByTransference methodsFor: 'value' stamp: 'fr 11/12/2020 21:52:01'!
addToReportWith: aReporter into: aReport	

	^aReporter addWithdrawToReport: self into: aReport! !
!DepositByTransference methodsFor: 'value' stamp: 'fr 11/12/2020 21:52:42'!
addToReportWith: aReporter

	^aReporter addWithdrawToReport: self ! !

!methodRemoval: DepositByTransference #addToReportWith:into: stamp: 'fr 11/12/2020 21:52:46'!
addToReportWith: aReporter into: aReport	

	^aReporter addWithdrawToReport: self into: aReport!
!Deposit methodsFor: 'value' stamp: 'fr 11/12/2020 21:53:00'!
addToReportWith: aReporter 

	^aReporter addDepositToReport: self! !
!ReceptiveAccount methodsFor: 'AAAAA' stamp: 'fr 11/12/2020 21:53:12'!
buildReportWith: aReporter

	^aReporter buildReportForReceptiveAccount: self! !

!methodRemoval: Deposit #addToReportWith:into: stamp: 'fr 11/12/2020 21:53:23'!
addToReportWith: aReporter into: aReport	

	^aReporter addDepositToReport: self into: aReport!

!methodRemoval: ReceptiveAccount #buildReportWith:into: stamp: 'fr 11/12/2020 21:53:28'!
buildReportWith: aReporter into: aReport

	^aReporter buildReportForReceptiveAccount: self into: aReport!
!WithdrawByTransference methodsFor: 'value' stamp: 'fr 11/12/2020 21:53:40'!
addToReportWith: aReporter 

	^aReporter addWithdrawByTransferToReport: self ! !

!methodRemoval: WithdrawByTransference #addToReportWith:into: stamp: 'fr 11/12/2020 21:53:45'!
addToReportWith: aReporter into: aReport	

	^aReporter addWithdrawByTransferToReport: self into: aReport!
!Withdraw methodsFor: 'value' stamp: 'fr 11/12/2020 21:53:52'!
addToReportWith: aReporter 

	^aReporter addWithdrawToReport: self ! !

!methodRemoval: Withdraw #addToReportWith:into: stamp: 'fr 11/12/2020 21:53:57'!
addToReportWith: aReporter into: aReport	

	^aReporter addWithdrawToReport: self into: aReport!
!SummaryReporter methodsFor: 'summary' stamp: 'fr 11/12/2020 21:54:08'!
buildReportForReceptiveAccount: aReceptiveAccount 

	^aReceptiveAccount transactions do: [:aTransaction | 
		aTransaction addToReportWith: self 
	]! !

!methodRemoval: SummaryReporter #buildReportForReceptiveAccount:into: stamp: 'fr 11/12/2020 21:54:11'!
buildReportForReceptiveAccount: aReceptiveAccount into: aReport

	^aReceptiveAccount transactions do: [:aTransaction | 
		aTransaction addToReportWith: self into: aReport	
	]!
!ReceptiveAccount methodsFor: 'AAAAA' stamp: 'fr 11/12/2020 21:56:27' prior: 50877638!
buildReportWith: aReporter

	^transactions do: []! !
!ReceptiveAccount methodsFor: 'AAAAA' stamp: 'fr 11/12/2020 21:57:10' prior: 50877694!
buildReportWith: aReporter

	^transactions do: [:aTransaction | 
		aTransaction addToReportWith: self 
	]! !
!SummaryReporter methodsFor: 'summary' stamp: 'fr 11/12/2020 21:57:23' prior: 50877677!
buildReportForReceptiveAccount: aReceptiveAccount 
! !
!SummaryReporter methodsFor: 'summary' stamp: 'fr 11/12/2020 21:58:03' prior: 50877579!
accountSummary
	
	| report |
	report _ OrderedCollection new.
	account buildReportWith: self.
	^report! !
!SummaryReporter methodsFor: 'as yet unclassified' stamp: 'fr 11/12/2020 21:59:47' prior: 50877711!
accountSummary
	
	 
	report _ OrderedCollection new.
	account buildReportWith: self.
	^report! !

!classDefinition: #SummaryReporter category: 'Portfolio-Solucion' stamp: 'fr 11/12/2020 21:59:48'!
Object subclass: #SummaryReporter
	instanceVariableNames: 'account receptiveAccount report'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!
!SummaryReporter methodsFor: 'summary' stamp: 'fr 11/12/2020 21:59:51' prior: 50877718!
accountSummary
	
	report _ OrderedCollection new.
	account buildReportWith: self.
	^report! !
!SummaryReporter methodsFor: 'summary' stamp: 'fr 11/12/2020 22:00:24'!
addWithdrawToReport: aWithdraw

	 ! !
!SummaryReporter methodsFor: 'summary' stamp: 'fr 11/12/2020 22:00:44'!
addDepositToReport: aWithdraw

	 ! !
!SummaryReporter methodsFor: 'summary' stamp: 'fr 11/12/2020 22:01:53'!
addDepositByTransferToReport: aWithdraw

	 ! !
!SummaryReporter methodsFor: 'summary' stamp: 'fr 11/12/2020 22:01:59'!
addWithdrawByTransferToReport: aWithdraw

	 ! !
!SummaryReporter methodsFor: 'summary' stamp: 'fr 11/12/2020 22:02:07' prior: 50877751!
addWithdrawByTransferToReport: aWithdrawByTransfer

	 ! !
!SummaryReporter methodsFor: 'summary' stamp: 'fr 11/12/2020 22:02:16' prior: 50877743!
addDepositToReport: aDeposit

	 ! !
!SummaryReporter methodsFor: 'summary' stamp: 'fr 11/12/2020 22:02:22' prior: 50877747!
addDepositByTransferToReport: aDepositByTransfer

	 ! !
!SummaryReporter methodsFor: 'summary' stamp: 'fr 11/12/2020 22:03:19' prior: 50877761!
addDepositToReport: aDeposit

	 ^report add: 'Dep�sito por ',aDeposit value asString,'.'! !
!SummaryReporter methodsFor: 'summary' stamp: 'fr 11/12/2020 22:03:50' prior: 50877739!
addWithdrawToReport: aWithdraw

	 ^report add: 'Extracci�n por ',aWithdraw value asString,'.'! !
!SummaryReporter methodsFor: 'summary' stamp: 'fr 11/12/2020 22:04:14' prior: 50877756!
addWithdrawByTransferToReport: aWithdrawByTransfer

	report add: 'Salida por transferencia de ',aWithdrawByTransfer value asString,'.'

	 ! !
!SummaryReporter methodsFor: 'summary' stamp: 'fr 11/12/2020 22:04:37' prior: 50877765!
addDepositByTransferToReport: aDepositByTransfer

	report add: 'Entrada por transferencia de ',aDepositByTransfer value asString,'.'


	 ! !

!testRun: #ReportTest #test01AccountSummaryForAccountWithNoTransactionsShouldJustShowBalanceZero stamp: 'fr 11/12/2020 22:05:13'!
FAILURE!

!testRun: #ReportTest #test01AccountSummaryForAccountWithNoTransactionsShouldJustShowBalanceZero stamp: 'fr 11/12/2020 22:05:13'!
FAILURE!

!testRun: #ReportTest #test02AccountSummaryShouldReflectDepositsOnAccounts stamp: 'fr 11/12/2020 22:05:17'!
ERROR!

!testRun: #ReportTest #test02AccountSummaryShouldReflectDepositsOnAccounts stamp: 'fr 11/12/2020 22:05:17'!
ERROR!

!testRun: #ReportTest #test01AccountSummaryForAccountWithNoTransactionsShouldJustShowBalanceZero stamp: 'fr 11/12/2020 22:05:25'!
FAILURE!

!testRun: #ReportTest #test01AccountSummaryForAccountWithNoTransactionsShouldJustShowBalanceZero stamp: 'fr 11/12/2020 22:05:25'!
FAILURE!

account accountSummary!

account accountSummary!

!testRun: #ReportTest #test01AccountSummaryForAccountWithNoTransactionsShouldJustShowBalanceZero stamp: 'fr 11/12/2020 22:07:21'!
FAILURE!

account accountSummary!

----SNAPSHOT----(13 November 2020 17:35:55) CuisUniversity-4384.image priorSource: 17450662!
!SummaryReporter methodsFor: 'summary' stamp: 'fr 11/13/2020 17:37:06' prior: 50877733!
accountSummary
	
	report _ OrderedCollection new.
	account buildReportWith: self.
	report add: 'Balance = '.account balance asString.
	^report! !

!testRun: #ReportTest #test01AccountSummaryForAccountWithNoTransactionsShouldJustShowBalanceZero stamp: 'fr 11/13/2020 17:37:09'!
FAILURE!

!testRun: #ReportTest #test02AccountSummaryShouldReflectDepositsOnAccounts stamp: 'fr 11/13/2020 17:37:09'!
ERROR!

!testRun: #ReportTest #test03AccountSummaryShouldReflectWithdrawsOnAccounts stamp: 'fr 11/13/2020 17:37:09'!
ERROR!

!testRun: #ReportTest #test04AccountSummaryShouldReflectOutgoingTransfersOnAccounts stamp: 'fr 11/13/2020 17:37:09'!
ERROR!

!testRun: #ReportTest #test05AccountSummaryShouldReflectIncomingTransfersOnAccounts stamp: 'fr 11/13/2020 17:37:09'!
ERROR!

!testRun: #ReportTest #test06AccountSummaryForPortfolioWithNoTransactionsShouldJustShowBalanceZero stamp: 'fr 11/13/2020 17:37:09'!
ERROR!

!testRun: #ReportTest #test07AccountSummaryShouldReflectDepositsOnPortfoliosWithAccounts stamp: 'fr 11/13/2020 17:37:09'!
ERROR!

!testRun: #ReportTest #test08AccountSummaryShouldReflectWithdrawsOnPortfoliosWithAccounts stamp: 'fr 11/13/2020 17:37:09'!
ERROR!

!testRun: #ReportTest #test09AccountSummaryShouldReflectOutgoingAndIncomingTransfersOnPortfoliosWithAccounts stamp: 'fr 11/13/2020 17:37:09'!
ERROR!

!testRun: #ReportTest #test10AccountSummaryShouldReflectDepositsOnPortfoliosWithPortfolios stamp: 'fr 11/13/2020 17:37:09'!
ERROR!

!testRun: #ReportTest #test11AccountSummaryShouldReflectWithdrawsOnPortfoliosWithPortfolios stamp: 'fr 11/13/2020 17:37:09'!
ERROR!

!testRun: #ReportTest #test12AccountSummaryShouldReflectOutgoingAndIncomingTransfersOnPortfoliosWithPortfolios stamp: 'fr 11/13/2020 17:37:09'!
ERROR!

!testRun: #ReportTest #test13NetTransferForAccountWithNoTransactionsShouldBeZero stamp: 'fr 11/13/2020 17:37:09'!
PASSED!

!testRun: #ReportTest #test14NetTransferForAccountWithAnOutgoingTransferShouldReflectItsValue stamp: 'fr 11/13/2020 17:37:09'!
PASSED!

!testRun: #ReportTest #test15NetTransferForAccountWithAnIncomingTransferShouldReflectItsValue stamp: 'fr 11/13/2020 17:37:09'!
PASSED!

!testRun: #ReportTest #test16NetTransferForAccountShouldNotReflectDeposits stamp: 'fr 11/13/2020 17:37:09'!
PASSED!

!testRun: #ReportTest #test17NetTransferForAccountShouldNotReflectWithdraws stamp: 'fr 11/13/2020 17:37:09'!
PASSED!

!testRun: #ReportTest #test18NetTransferForPortfolioWithNoTransactionsShouldBeZero stamp: 'fr 11/13/2020 17:37:09'!
PASSED!

!testRun: #ReportTest #test19NetTransferForPortfolioWithAnOutgoingTransferShouldReflectItsValue stamp: 'fr 11/13/2020 17:37:09'!
PASSED!

!testRun: #ReportTest #test20NetTransferForPortfolioWithAnIncomingTransferShouldReflectItsValue stamp: 'fr 11/13/2020 17:37:09'!
PASSED!

!testRun: #ReportTest #test21NetTransferForPortfolioShouldNotReflectDeposits stamp: 'fr 11/13/2020 17:37:09'!
PASSED!

!testRun: #ReportTest #test22NetTransferForPortfolioShouldNotReflectWithdraws stamp: 'fr 11/13/2020 17:37:09'!
PASSED!

!testRun: #ReportTest #test23NetTransferForPortfoliosWithPortfoliosShouldReflectOutgoingAndIncomingTransfers stamp: 'fr 11/13/2020 17:37:09'!
PASSED!

!testRun: #ReportTest #test24NetTransferForPortfoliosWithPortfoliosShouldNotRelfectDepositsOrWithdraws stamp: 'fr 11/13/2020 17:37:09'!
PASSED!

!testRun: #ReportTest #test25 stamp: 'fr 11/13/2020 17:37:09'!
PASSED!

!testRun: #ReportTest #test26 stamp: 'fr 11/13/2020 17:37:09'!
PASSED!

!testRun: #ReportTest #test27 stamp: 'fr 11/13/2020 17:37:09'!
PASSED!

!testRun: #ReportTest #test01AccountSummaryForAccountWithNoTransactionsShouldJustShowBalanceZero stamp: 'fr 11/13/2020 17:37:13'!
FAILURE!

!testRun: #ReportTest #test01AccountSummaryForAccountWithNoTransactionsShouldJustShowBalanceZero stamp: 'fr 11/13/2020 17:37:13'!
FAILURE!

account accountSummary!

account!
!SummaryReporter methodsFor: 'summary' stamp: 'fr 11/13/2020 17:37:50' prior: 50877832!
accountSummary
	
	report _ OrderedCollection new.
	account buildReportWith: self.
	report add: 'Balance = ',account balance asString.
	^report! !

!testRun: #ReportTest #test01AccountSummaryForAccountWithNoTransactionsShouldJustShowBalanceZero stamp: 'fr 11/13/2020 17:37:51'!
PASSED!

!testRun: #ReportTest #test01AccountSummaryForAccountWithNoTransactionsShouldJustShowBalanceZero stamp: 'fr 11/13/2020 17:37:52'!
PASSED!

!testRun: #ReportTest #test01AccountSummaryForAccountWithNoTransactionsShouldJustShowBalanceZero stamp: 'fr 11/13/2020 17:37:54'!
PASSED!

!testRun: #ReportTest #test02AccountSummaryShouldReflectDepositsOnAccounts stamp: 'fr 11/13/2020 17:37:54'!
ERROR!

!testRun: #ReportTest #test03AccountSummaryShouldReflectWithdrawsOnAccounts stamp: 'fr 11/13/2020 17:37:54'!
ERROR!

!testRun: #ReportTest #test04AccountSummaryShouldReflectOutgoingTransfersOnAccounts stamp: 'fr 11/13/2020 17:37:54'!
ERROR!

!testRun: #ReportTest #test05AccountSummaryShouldReflectIncomingTransfersOnAccounts stamp: 'fr 11/13/2020 17:37:54'!
ERROR!

!testRun: #ReportTest #test06AccountSummaryForPortfolioWithNoTransactionsShouldJustShowBalanceZero stamp: 'fr 11/13/2020 17:37:54'!
ERROR!

!testRun: #ReportTest #test07AccountSummaryShouldReflectDepositsOnPortfoliosWithAccounts stamp: 'fr 11/13/2020 17:37:54'!
ERROR!

!testRun: #ReportTest #test08AccountSummaryShouldReflectWithdrawsOnPortfoliosWithAccounts stamp: 'fr 11/13/2020 17:37:54'!
ERROR!

!testRun: #ReportTest #test09AccountSummaryShouldReflectOutgoingAndIncomingTransfersOnPortfoliosWithAccounts stamp: 'fr 11/13/2020 17:37:54'!
ERROR!

!testRun: #ReportTest #test10AccountSummaryShouldReflectDepositsOnPortfoliosWithPortfolios stamp: 'fr 11/13/2020 17:37:54'!
ERROR!

!testRun: #ReportTest #test11AccountSummaryShouldReflectWithdrawsOnPortfoliosWithPortfolios stamp: 'fr 11/13/2020 17:37:54'!
ERROR!

!testRun: #ReportTest #test12AccountSummaryShouldReflectOutgoingAndIncomingTransfersOnPortfoliosWithPortfolios stamp: 'fr 11/13/2020 17:37:54'!
ERROR!

!testRun: #ReportTest #test13NetTransferForAccountWithNoTransactionsShouldBeZero stamp: 'fr 11/13/2020 17:37:54'!
PASSED!

!testRun: #ReportTest #test14NetTransferForAccountWithAnOutgoingTransferShouldReflectItsValue stamp: 'fr 11/13/2020 17:37:54'!
PASSED!

!testRun: #ReportTest #test15NetTransferForAccountWithAnIncomingTransferShouldReflectItsValue stamp: 'fr 11/13/2020 17:37:54'!
PASSED!

!testRun: #ReportTest #test16NetTransferForAccountShouldNotReflectDeposits stamp: 'fr 11/13/2020 17:37:54'!
PASSED!

!testRun: #ReportTest #test17NetTransferForAccountShouldNotReflectWithdraws stamp: 'fr 11/13/2020 17:37:54'!
PASSED!

!testRun: #ReportTest #test18NetTransferForPortfolioWithNoTransactionsShouldBeZero stamp: 'fr 11/13/2020 17:37:54'!
PASSED!

!testRun: #ReportTest #test19NetTransferForPortfolioWithAnOutgoingTransferShouldReflectItsValue stamp: 'fr 11/13/2020 17:37:54'!
PASSED!

!testRun: #ReportTest #test20NetTransferForPortfolioWithAnIncomingTransferShouldReflectItsValue stamp: 'fr 11/13/2020 17:37:54'!
PASSED!

!testRun: #ReportTest #test21NetTransferForPortfolioShouldNotReflectDeposits stamp: 'fr 11/13/2020 17:37:54'!
PASSED!

!testRun: #ReportTest #test22NetTransferForPortfolioShouldNotReflectWithdraws stamp: 'fr 11/13/2020 17:37:54'!
PASSED!

!testRun: #ReportTest #test23NetTransferForPortfoliosWithPortfoliosShouldReflectOutgoingAndIncomingTransfers stamp: 'fr 11/13/2020 17:37:54'!
PASSED!

!testRun: #ReportTest #test24NetTransferForPortfoliosWithPortfoliosShouldNotRelfectDepositsOrWithdraws stamp: 'fr 11/13/2020 17:37:54'!
PASSED!

!testRun: #ReportTest #test25 stamp: 'fr 11/13/2020 17:37:54'!
PASSED!

!testRun: #ReportTest #test26 stamp: 'fr 11/13/2020 17:37:54'!
PASSED!

!testRun: #ReportTest #test27 stamp: 'fr 11/13/2020 17:37:54'!
PASSED!

!testRun: #ReportTest #test01AccountSummaryForAccountWithNoTransactionsShouldJustShowBalanceZero stamp: 'fr 11/13/2020 17:37:57'!
PASSED!

!testRun: #ReportTest #test02AccountSummaryShouldReflectDepositsOnAccounts stamp: 'fr 11/13/2020 17:37:59'!
ERROR!

!testRun: #ReportTest #test02AccountSummaryShouldReflectDepositsOnAccounts stamp: 'fr 11/13/2020 17:37:59'!
ERROR!
!Portfolio methodsFor: 'report' stamp: 'fr 11/13/2020 17:39:30'!
buildReportWith: aReporter

	accounts do: [:anAccount | 
		anAccount buildReportWith: aReporter 	
	]! !

!testRun: #ReportTest #test01AccountSummaryForAccountWithNoTransactionsShouldJustShowBalanceZero stamp: 'fr 11/13/2020 17:39:34'!
PASSED!

!testRun: #ReportTest #test02AccountSummaryShouldReflectDepositsOnAccounts stamp: 'fr 11/13/2020 17:39:34'!
ERROR!

!testRun: #ReportTest #test03AccountSummaryShouldReflectWithdrawsOnAccounts stamp: 'fr 11/13/2020 17:39:34'!
ERROR!

!testRun: #ReportTest #test04AccountSummaryShouldReflectOutgoingTransfersOnAccounts stamp: 'fr 11/13/2020 17:39:34'!
ERROR!

!testRun: #ReportTest #test05AccountSummaryShouldReflectIncomingTransfersOnAccounts stamp: 'fr 11/13/2020 17:39:34'!
ERROR!

!testRun: #ReportTest #test06AccountSummaryForPortfolioWithNoTransactionsShouldJustShowBalanceZero stamp: 'fr 11/13/2020 17:39:34'!
PASSED!

!testRun: #ReportTest #test07AccountSummaryShouldReflectDepositsOnPortfoliosWithAccounts stamp: 'fr 11/13/2020 17:39:34'!
ERROR!

!testRun: #ReportTest #test08AccountSummaryShouldReflectWithdrawsOnPortfoliosWithAccounts stamp: 'fr 11/13/2020 17:39:34'!
ERROR!

!testRun: #ReportTest #test09AccountSummaryShouldReflectOutgoingAndIncomingTransfersOnPortfoliosWithAccounts stamp: 'fr 11/13/2020 17:39:34'!
ERROR!

!testRun: #ReportTest #test10AccountSummaryShouldReflectDepositsOnPortfoliosWithPortfolios stamp: 'fr 11/13/2020 17:39:34'!
ERROR!

!testRun: #ReportTest #test11AccountSummaryShouldReflectWithdrawsOnPortfoliosWithPortfolios stamp: 'fr 11/13/2020 17:39:34'!
ERROR!

!testRun: #ReportTest #test12AccountSummaryShouldReflectOutgoingAndIncomingTransfersOnPortfoliosWithPortfolios stamp: 'fr 11/13/2020 17:39:34'!
ERROR!

!testRun: #ReportTest #test13NetTransferForAccountWithNoTransactionsShouldBeZero stamp: 'fr 11/13/2020 17:39:34'!
PASSED!

!testRun: #ReportTest #test14NetTransferForAccountWithAnOutgoingTransferShouldReflectItsValue stamp: 'fr 11/13/2020 17:39:34'!
PASSED!

!testRun: #ReportTest #test15NetTransferForAccountWithAnIncomingTransferShouldReflectItsValue stamp: 'fr 11/13/2020 17:39:34'!
PASSED!

!testRun: #ReportTest #test16NetTransferForAccountShouldNotReflectDeposits stamp: 'fr 11/13/2020 17:39:34'!
PASSED!

!testRun: #ReportTest #test17NetTransferForAccountShouldNotReflectWithdraws stamp: 'fr 11/13/2020 17:39:34'!
PASSED!

!testRun: #ReportTest #test18NetTransferForPortfolioWithNoTransactionsShouldBeZero stamp: 'fr 11/13/2020 17:39:34'!
PASSED!

!testRun: #ReportTest #test19NetTransferForPortfolioWithAnOutgoingTransferShouldReflectItsValue stamp: 'fr 11/13/2020 17:39:34'!
PASSED!

!testRun: #ReportTest #test20NetTransferForPortfolioWithAnIncomingTransferShouldReflectItsValue stamp: 'fr 11/13/2020 17:39:34'!
PASSED!

!testRun: #ReportTest #test21NetTransferForPortfolioShouldNotReflectDeposits stamp: 'fr 11/13/2020 17:39:34'!
PASSED!

!testRun: #ReportTest #test22NetTransferForPortfolioShouldNotReflectWithdraws stamp: 'fr 11/13/2020 17:39:34'!
PASSED!

!testRun: #ReportTest #test23NetTransferForPortfoliosWithPortfoliosShouldReflectOutgoingAndIncomingTransfers stamp: 'fr 11/13/2020 17:39:34'!
PASSED!

!testRun: #ReportTest #test24NetTransferForPortfoliosWithPortfoliosShouldNotRelfectDepositsOrWithdraws stamp: 'fr 11/13/2020 17:39:34'!
PASSED!

!testRun: #ReportTest #test25 stamp: 'fr 11/13/2020 17:39:34'!
PASSED!

!testRun: #ReportTest #test26 stamp: 'fr 11/13/2020 17:39:34'!
PASSED!

!testRun: #ReportTest #test27 stamp: 'fr 11/13/2020 17:39:34'!
PASSED!

!testRun: #ReportTest #test02AccountSummaryShouldReflectDepositsOnAccounts stamp: 'fr 11/13/2020 17:39:38'!
ERROR!

!testRun: #ReportTest #test02AccountSummaryShouldReflectDepositsOnAccounts stamp: 'fr 11/13/2020 17:39:38'!
ERROR!

!testRun: #ReportTest #test02AccountSummaryShouldReflectDepositsOnAccounts stamp: 'fr 11/13/2020 17:40:12'!
ERROR!

aTransaction!

!testRun: #ReportTest #test02AccountSummaryShouldReflectDepositsOnAccounts stamp: 'fr 11/13/2020 17:40:37'!
ERROR!
!ReceptiveAccount methodsFor: 'AAAAA' stamp: 'fr 11/13/2020 17:40:58' prior: 50877699!
buildReportWith: aReporter

	^transactions do: [:aTransaction | 
		aTransaction addToReportWith: aReporter 
	]! !

!testRun: #ReportTest #test01AccountSummaryForAccountWithNoTransactionsShouldJustShowBalanceZero stamp: 'fr 11/13/2020 17:41:09'!
PASSED!

!testRun: #ReportTest #test02AccountSummaryShouldReflectDepositsOnAccounts stamp: 'fr 11/13/2020 17:41:09'!
PASSED!

!testRun: #ReportTest #test03AccountSummaryShouldReflectWithdrawsOnAccounts stamp: 'fr 11/13/2020 17:41:09'!
PASSED!

!testRun: #ReportTest #test04AccountSummaryShouldReflectOutgoingTransfersOnAccounts stamp: 'fr 11/13/2020 17:41:09'!
PASSED!

!testRun: #ReportTest #test05AccountSummaryShouldReflectIncomingTransfersOnAccounts stamp: 'fr 11/13/2020 17:41:09'!
FAILURE!

!testRun: #ReportTest #test06AccountSummaryForPortfolioWithNoTransactionsShouldJustShowBalanceZero stamp: 'fr 11/13/2020 17:41:09'!
PASSED!

!testRun: #ReportTest #test07AccountSummaryShouldReflectDepositsOnPortfoliosWithAccounts stamp: 'fr 11/13/2020 17:41:09'!
PASSED!

!testRun: #ReportTest #test08AccountSummaryShouldReflectWithdrawsOnPortfoliosWithAccounts stamp: 'fr 11/13/2020 17:41:09'!
PASSED!

!testRun: #ReportTest #test09AccountSummaryShouldReflectOutgoingAndIncomingTransfersOnPortfoliosWithAccounts stamp: 'fr 11/13/2020 17:41:09'!
FAILURE!

!testRun: #ReportTest #test10AccountSummaryShouldReflectDepositsOnPortfoliosWithPortfolios stamp: 'fr 11/13/2020 17:41:09'!
PASSED!

!testRun: #ReportTest #test11AccountSummaryShouldReflectWithdrawsOnPortfoliosWithPortfolios stamp: 'fr 11/13/2020 17:41:09'!
PASSED!

!testRun: #ReportTest #test12AccountSummaryShouldReflectOutgoingAndIncomingTransfersOnPortfoliosWithPortfolios stamp: 'fr 11/13/2020 17:41:09'!
FAILURE!

!testRun: #ReportTest #test13NetTransferForAccountWithNoTransactionsShouldBeZero stamp: 'fr 11/13/2020 17:41:09'!
PASSED!

!testRun: #ReportTest #test14NetTransferForAccountWithAnOutgoingTransferShouldReflectItsValue stamp: 'fr 11/13/2020 17:41:09'!
PASSED!

!testRun: #ReportTest #test15NetTransferForAccountWithAnIncomingTransferShouldReflectItsValue stamp: 'fr 11/13/2020 17:41:09'!
PASSED!

!testRun: #ReportTest #test16NetTransferForAccountShouldNotReflectDeposits stamp: 'fr 11/13/2020 17:41:09'!
PASSED!

!testRun: #ReportTest #test17NetTransferForAccountShouldNotReflectWithdraws stamp: 'fr 11/13/2020 17:41:09'!
PASSED!

!testRun: #ReportTest #test18NetTransferForPortfolioWithNoTransactionsShouldBeZero stamp: 'fr 11/13/2020 17:41:09'!
PASSED!

!testRun: #ReportTest #test19NetTransferForPortfolioWithAnOutgoingTransferShouldReflectItsValue stamp: 'fr 11/13/2020 17:41:09'!
PASSED!

!testRun: #ReportTest #test20NetTransferForPortfolioWithAnIncomingTransferShouldReflectItsValue stamp: 'fr 11/13/2020 17:41:09'!
PASSED!

!testRun: #ReportTest #test21NetTransferForPortfolioShouldNotReflectDeposits stamp: 'fr 11/13/2020 17:41:09'!
PASSED!

!testRun: #ReportTest #test22NetTransferForPortfolioShouldNotReflectWithdraws stamp: 'fr 11/13/2020 17:41:09'!
PASSED!

!testRun: #ReportTest #test23NetTransferForPortfoliosWithPortfoliosShouldReflectOutgoingAndIncomingTransfers stamp: 'fr 11/13/2020 17:41:09'!
PASSED!

!testRun: #ReportTest #test24NetTransferForPortfoliosWithPortfoliosShouldNotRelfectDepositsOrWithdraws stamp: 'fr 11/13/2020 17:41:09'!
PASSED!

!testRun: #ReportTest #test25 stamp: 'fr 11/13/2020 17:41:09'!
PASSED!

!testRun: #ReportTest #test26 stamp: 'fr 11/13/2020 17:41:09'!
PASSED!

!testRun: #ReportTest #test27 stamp: 'fr 11/13/2020 17:41:09'!
PASSED!

!testRun: #ReportTest #test05AccountSummaryShouldReflectIncomingTransfersOnAccounts stamp: 'fr 11/13/2020 17:41:16'!
FAILURE!

!testRun: #ReportTest #test05AccountSummaryShouldReflectIncomingTransfersOnAccounts stamp: 'fr 11/13/2020 17:41:16'!
FAILURE!

account accountSummary!

account accountSummary!

account accountSummary!

!testRun: #ReportTest #test05AccountSummaryShouldReflectIncomingTransfersOnAccounts stamp: 'fr 11/13/2020 17:43:23'!
FAILURE!

aTransaction!
!DepositByTransference methodsFor: 'value' stamp: 'fr 11/13/2020 17:44:04' prior: 50877622!
addToReportWith: aReporter

	^aReporter addDepositByTransferToReport: self ! !

!testRun: #ReportTest #test01AccountSummaryForAccountWithNoTransactionsShouldJustShowBalanceZero stamp: 'fr 11/13/2020 17:44:14'!
PASSED!

!testRun: #ReportTest #test02AccountSummaryShouldReflectDepositsOnAccounts stamp: 'fr 11/13/2020 17:44:14'!
PASSED!

!testRun: #ReportTest #test03AccountSummaryShouldReflectWithdrawsOnAccounts stamp: 'fr 11/13/2020 17:44:14'!
PASSED!

!testRun: #ReportTest #test04AccountSummaryShouldReflectOutgoingTransfersOnAccounts stamp: 'fr 11/13/2020 17:44:14'!
PASSED!

!testRun: #ReportTest #test05AccountSummaryShouldReflectIncomingTransfersOnAccounts stamp: 'fr 11/13/2020 17:44:14'!
PASSED!

!testRun: #ReportTest #test06AccountSummaryForPortfolioWithNoTransactionsShouldJustShowBalanceZero stamp: 'fr 11/13/2020 17:44:14'!
PASSED!

!testRun: #ReportTest #test07AccountSummaryShouldReflectDepositsOnPortfoliosWithAccounts stamp: 'fr 11/13/2020 17:44:14'!
PASSED!

!testRun: #ReportTest #test08AccountSummaryShouldReflectWithdrawsOnPortfoliosWithAccounts stamp: 'fr 11/13/2020 17:44:14'!
PASSED!

!testRun: #ReportTest #test09AccountSummaryShouldReflectOutgoingAndIncomingTransfersOnPortfoliosWithAccounts stamp: 'fr 11/13/2020 17:44:14'!
PASSED!

!testRun: #ReportTest #test10AccountSummaryShouldReflectDepositsOnPortfoliosWithPortfolios stamp: 'fr 11/13/2020 17:44:14'!
PASSED!

!testRun: #ReportTest #test11AccountSummaryShouldReflectWithdrawsOnPortfoliosWithPortfolios stamp: 'fr 11/13/2020 17:44:14'!
PASSED!

!testRun: #ReportTest #test12AccountSummaryShouldReflectOutgoingAndIncomingTransfersOnPortfoliosWithPortfolios stamp: 'fr 11/13/2020 17:44:14'!
PASSED!

!testRun: #ReportTest #test13NetTransferForAccountWithNoTransactionsShouldBeZero stamp: 'fr 11/13/2020 17:44:14'!
PASSED!

!testRun: #ReportTest #test14NetTransferForAccountWithAnOutgoingTransferShouldReflectItsValue stamp: 'fr 11/13/2020 17:44:14'!
PASSED!

!testRun: #ReportTest #test15NetTransferForAccountWithAnIncomingTransferShouldReflectItsValue stamp: 'fr 11/13/2020 17:44:14'!
PASSED!

!testRun: #ReportTest #test16NetTransferForAccountShouldNotReflectDeposits stamp: 'fr 11/13/2020 17:44:14'!
PASSED!

!testRun: #ReportTest #test17NetTransferForAccountShouldNotReflectWithdraws stamp: 'fr 11/13/2020 17:44:14'!
PASSED!

!testRun: #ReportTest #test18NetTransferForPortfolioWithNoTransactionsShouldBeZero stamp: 'fr 11/13/2020 17:44:14'!
PASSED!

!testRun: #ReportTest #test19NetTransferForPortfolioWithAnOutgoingTransferShouldReflectItsValue stamp: 'fr 11/13/2020 17:44:14'!
PASSED!

!testRun: #ReportTest #test20NetTransferForPortfolioWithAnIncomingTransferShouldReflectItsValue stamp: 'fr 11/13/2020 17:44:14'!
PASSED!

!testRun: #ReportTest #test21NetTransferForPortfolioShouldNotReflectDeposits stamp: 'fr 11/13/2020 17:44:14'!
PASSED!

!testRun: #ReportTest #test22NetTransferForPortfolioShouldNotReflectWithdraws stamp: 'fr 11/13/2020 17:44:14'!
PASSED!

!testRun: #ReportTest #test23NetTransferForPortfoliosWithPortfoliosShouldReflectOutgoingAndIncomingTransfers stamp: 'fr 11/13/2020 17:44:14'!
PASSED!

!testRun: #ReportTest #test24NetTransferForPortfoliosWithPortfoliosShouldNotRelfectDepositsOrWithdraws stamp: 'fr 11/13/2020 17:44:14'!
PASSED!

!testRun: #ReportTest #test25 stamp: 'fr 11/13/2020 17:44:14'!
PASSED!

!testRun: #ReportTest #test26 stamp: 'fr 11/13/2020 17:44:14'!
PASSED!

!testRun: #ReportTest #test27 stamp: 'fr 11/13/2020 17:44:14'!
PASSED!

!methodRemoval: Portfolio #addSummaryTo: stamp: 'fr 11/13/2020 17:44:42'!
addSummaryTo: report

	accounts do: [:anAccount | anAccount addSummaryTo: report		]!

!methodRemoval: ReceptiveAccount #addSummaryTo: stamp: 'fr 11/13/2020 17:44:49'!
addSummaryTo: report

	transactions do: [:aTransaction |
		(aTransaction isMemberOf: Deposit) ifTrue: [report add: 'Dep�sito por ',aTransaction value asString,'.'].
		(aTransaction isMemberOf: Withdraw) ifTrue: [report add: 'Extracci�n por ',aTransaction value asString,'.'].
		(aTransaction isMemberOf: WithdrawByTransference) ifTrue: [report add: 'Salida por transferencia de ',aTransaction value asString,'.'].
		(aTransaction isMemberOf: DepositByTransference) ifTrue: [report add: 'Entrada por transferencia de ',aTransaction value asString,'.'].
	]!
!ReportTest methodsFor: 'tests - account summary' stamp: 'fr 11/13/2020 17:45:43' prior: 50872865!
test01AccountSummaryForAccountWithNoTransactionsShouldJustShowBalanceZero

	| account reporter |
	
	account _ ReceptiveAccount new.
	reporter _ SummaryReporter for: account.
	
	self assert: [reporter accountSummary = (OrderedCollection with: 'Balance = 0')]! !

!testRun: #ReportTest #test01AccountSummaryForAccountWithNoTransactionsShouldJustShowBalanceZero stamp: 'fr 11/13/2020 17:45:45'!
PASSED!

!testRun: #ReportTest #test01AccountSummaryForAccountWithNoTransactionsShouldJustShowBalanceZero stamp: 'fr 11/13/2020 17:45:45'!
PASSED!

!testRun: #ReportTest #test02AccountSummaryShouldReflectDepositsOnAccounts stamp: 'fr 11/13/2020 17:45:45'!
PASSED!

!testRun: #ReportTest #test03AccountSummaryShouldReflectWithdrawsOnAccounts stamp: 'fr 11/13/2020 17:45:45'!
PASSED!

!testRun: #ReportTest #test04AccountSummaryShouldReflectOutgoingTransfersOnAccounts stamp: 'fr 11/13/2020 17:45:45'!
PASSED!

!testRun: #ReportTest #test05AccountSummaryShouldReflectIncomingTransfersOnAccounts stamp: 'fr 11/13/2020 17:45:45'!
PASSED!

!testRun: #ReportTest #test06AccountSummaryForPortfolioWithNoTransactionsShouldJustShowBalanceZero stamp: 'fr 11/13/2020 17:45:45'!
PASSED!

!testRun: #ReportTest #test07AccountSummaryShouldReflectDepositsOnPortfoliosWithAccounts stamp: 'fr 11/13/2020 17:45:45'!
PASSED!

!testRun: #ReportTest #test08AccountSummaryShouldReflectWithdrawsOnPortfoliosWithAccounts stamp: 'fr 11/13/2020 17:45:46'!
PASSED!

!testRun: #ReportTest #test09AccountSummaryShouldReflectOutgoingAndIncomingTransfersOnPortfoliosWithAccounts stamp: 'fr 11/13/2020 17:45:46'!
PASSED!

!testRun: #ReportTest #test10AccountSummaryShouldReflectDepositsOnPortfoliosWithPortfolios stamp: 'fr 11/13/2020 17:45:46'!
PASSED!

!testRun: #ReportTest #test11AccountSummaryShouldReflectWithdrawsOnPortfoliosWithPortfolios stamp: 'fr 11/13/2020 17:45:46'!
PASSED!

!testRun: #ReportTest #test12AccountSummaryShouldReflectOutgoingAndIncomingTransfersOnPortfoliosWithPortfolios stamp: 'fr 11/13/2020 17:45:46'!
PASSED!

!testRun: #ReportTest #test13NetTransferForAccountWithNoTransactionsShouldBeZero stamp: 'fr 11/13/2020 17:45:46'!
PASSED!

!testRun: #ReportTest #test14NetTransferForAccountWithAnOutgoingTransferShouldReflectItsValue stamp: 'fr 11/13/2020 17:45:46'!
PASSED!

!testRun: #ReportTest #test15NetTransferForAccountWithAnIncomingTransferShouldReflectItsValue stamp: 'fr 11/13/2020 17:45:46'!
PASSED!

!testRun: #ReportTest #test16NetTransferForAccountShouldNotReflectDeposits stamp: 'fr 11/13/2020 17:45:46'!
PASSED!

!testRun: #ReportTest #test17NetTransferForAccountShouldNotReflectWithdraws stamp: 'fr 11/13/2020 17:45:46'!
PASSED!

!testRun: #ReportTest #test18NetTransferForPortfolioWithNoTransactionsShouldBeZero stamp: 'fr 11/13/2020 17:45:46'!
PASSED!

!testRun: #ReportTest #test19NetTransferForPortfolioWithAnOutgoingTransferShouldReflectItsValue stamp: 'fr 11/13/2020 17:45:46'!
PASSED!

!testRun: #ReportTest #test20NetTransferForPortfolioWithAnIncomingTransferShouldReflectItsValue stamp: 'fr 11/13/2020 17:45:46'!
PASSED!

!testRun: #ReportTest #test21NetTransferForPortfolioShouldNotReflectDeposits stamp: 'fr 11/13/2020 17:45:46'!
PASSED!

!testRun: #ReportTest #test22NetTransferForPortfolioShouldNotReflectWithdraws stamp: 'fr 11/13/2020 17:45:46'!
PASSED!

!testRun: #ReportTest #test23NetTransferForPortfoliosWithPortfoliosShouldReflectOutgoingAndIncomingTransfers stamp: 'fr 11/13/2020 17:45:46'!
PASSED!

!testRun: #ReportTest #test24NetTransferForPortfoliosWithPortfoliosShouldNotRelfectDepositsOrWithdraws stamp: 'fr 11/13/2020 17:45:46'!
PASSED!

!testRun: #ReportTest #test25 stamp: 'fr 11/13/2020 17:45:46'!
PASSED!

!testRun: #ReportTest #test26 stamp: 'fr 11/13/2020 17:45:46'!
PASSED!

!testRun: #ReportTest #test27 stamp: 'fr 11/13/2020 17:45:46'!
PASSED!
!ReportTest methodsFor: 'tests - account summary' stamp: 'fr 11/13/2020 17:46:09' prior: 50873099!
test02AccountSummaryShouldReflectDepositsOnAccounts

	| account reporter |
	
	account _ ReceptiveAccount new.
	Deposit register: 100 on: account. 
	reporter _ SummaryReporter for: account.
	
	self assert: [reporter accountSummary = (OrderedCollection with: 'Dep�sito por 100.' with: 'Balance = 100')]! !

!testRun: #ReportTest #test02AccountSummaryShouldReflectDepositsOnAccounts stamp: 'fr 11/13/2020 17:46:11'!
PASSED!

!testRun: #ReportTest #test01AccountSummaryForAccountWithNoTransactionsShouldJustShowBalanceZero stamp: 'fr 11/13/2020 17:46:11'!
PASSED!

!testRun: #ReportTest #test02AccountSummaryShouldReflectDepositsOnAccounts stamp: 'fr 11/13/2020 17:46:11'!
PASSED!

!testRun: #ReportTest #test03AccountSummaryShouldReflectWithdrawsOnAccounts stamp: 'fr 11/13/2020 17:46:11'!
PASSED!

!testRun: #ReportTest #test04AccountSummaryShouldReflectOutgoingTransfersOnAccounts stamp: 'fr 11/13/2020 17:46:11'!
PASSED!

!testRun: #ReportTest #test05AccountSummaryShouldReflectIncomingTransfersOnAccounts stamp: 'fr 11/13/2020 17:46:11'!
PASSED!

!testRun: #ReportTest #test06AccountSummaryForPortfolioWithNoTransactionsShouldJustShowBalanceZero stamp: 'fr 11/13/2020 17:46:11'!
PASSED!

!testRun: #ReportTest #test07AccountSummaryShouldReflectDepositsOnPortfoliosWithAccounts stamp: 'fr 11/13/2020 17:46:11'!
PASSED!

!testRun: #ReportTest #test08AccountSummaryShouldReflectWithdrawsOnPortfoliosWithAccounts stamp: 'fr 11/13/2020 17:46:11'!
PASSED!

!testRun: #ReportTest #test09AccountSummaryShouldReflectOutgoingAndIncomingTransfersOnPortfoliosWithAccounts stamp: 'fr 11/13/2020 17:46:11'!
PASSED!

!testRun: #ReportTest #test10AccountSummaryShouldReflectDepositsOnPortfoliosWithPortfolios stamp: 'fr 11/13/2020 17:46:11'!
PASSED!

!testRun: #ReportTest #test11AccountSummaryShouldReflectWithdrawsOnPortfoliosWithPortfolios stamp: 'fr 11/13/2020 17:46:11'!
PASSED!

!testRun: #ReportTest #test12AccountSummaryShouldReflectOutgoingAndIncomingTransfersOnPortfoliosWithPortfolios stamp: 'fr 11/13/2020 17:46:11'!
PASSED!

!testRun: #ReportTest #test13NetTransferForAccountWithNoTransactionsShouldBeZero stamp: 'fr 11/13/2020 17:46:11'!
PASSED!

!testRun: #ReportTest #test14NetTransferForAccountWithAnOutgoingTransferShouldReflectItsValue stamp: 'fr 11/13/2020 17:46:11'!
PASSED!

!testRun: #ReportTest #test15NetTransferForAccountWithAnIncomingTransferShouldReflectItsValue stamp: 'fr 11/13/2020 17:46:11'!
PASSED!

!testRun: #ReportTest #test16NetTransferForAccountShouldNotReflectDeposits stamp: 'fr 11/13/2020 17:46:11'!
PASSED!

!testRun: #ReportTest #test17NetTransferForAccountShouldNotReflectWithdraws stamp: 'fr 11/13/2020 17:46:11'!
PASSED!

!testRun: #ReportTest #test18NetTransferForPortfolioWithNoTransactionsShouldBeZero stamp: 'fr 11/13/2020 17:46:11'!
PASSED!

!testRun: #ReportTest #test19NetTransferForPortfolioWithAnOutgoingTransferShouldReflectItsValue stamp: 'fr 11/13/2020 17:46:11'!
PASSED!

!testRun: #ReportTest #test20NetTransferForPortfolioWithAnIncomingTransferShouldReflectItsValue stamp: 'fr 11/13/2020 17:46:11'!
PASSED!

!testRun: #ReportTest #test21NetTransferForPortfolioShouldNotReflectDeposits stamp: 'fr 11/13/2020 17:46:11'!
PASSED!

!testRun: #ReportTest #test22NetTransferForPortfolioShouldNotReflectWithdraws stamp: 'fr 11/13/2020 17:46:11'!
PASSED!

!testRun: #ReportTest #test23NetTransferForPortfoliosWithPortfoliosShouldReflectOutgoingAndIncomingTransfers stamp: 'fr 11/13/2020 17:46:11'!
PASSED!

!testRun: #ReportTest #test24NetTransferForPortfoliosWithPortfoliosShouldNotRelfectDepositsOrWithdraws stamp: 'fr 11/13/2020 17:46:11'!
PASSED!

!testRun: #ReportTest #test25 stamp: 'fr 11/13/2020 17:46:11'!
PASSED!

!testRun: #ReportTest #test26 stamp: 'fr 11/13/2020 17:46:11'!
PASSED!

!testRun: #ReportTest #test27 stamp: 'fr 11/13/2020 17:46:11'!
PASSED!
!ReportTest methodsFor: 'tests - account summary' stamp: 'fr 11/13/2020 17:46:23' prior: 50873077!
test03AccountSummaryShouldReflectWithdrawsOnAccounts

	| account reporter |
	
	account _ ReceptiveAccount new.
	Withdraw register: 100 on: account. 
	reporter _ SummaryReporter for: account.
	
	self assert: [account accountSummary = (OrderedCollection with: 'Extracci�n por 100.' with: 'Balance = -100')]! !
!ReportTest methodsFor: 'tests - account summary' stamp: 'fr 11/13/2020 17:46:32' prior: 50878723!
test03AccountSummaryShouldReflectWithdrawsOnAccounts

	| account reporter |
	
	account _ ReceptiveAccount new.
	Withdraw register: 100 on: account. 
	reporter _ SummaryReporter for: account.
	
	self assert: [reporter accountSummary = (OrderedCollection with: 'Extracci�n por 100.' with: 'Balance = -100')]! !

!testRun: #ReportTest #test03AccountSummaryShouldReflectWithdrawsOnAccounts stamp: 'fr 11/13/2020 17:46:33'!
PASSED!

!testRun: #ReportTest #test01AccountSummaryForAccountWithNoTransactionsShouldJustShowBalanceZero stamp: 'fr 11/13/2020 17:46:33'!
PASSED!

!testRun: #ReportTest #test02AccountSummaryShouldReflectDepositsOnAccounts stamp: 'fr 11/13/2020 17:46:33'!
PASSED!

!testRun: #ReportTest #test03AccountSummaryShouldReflectWithdrawsOnAccounts stamp: 'fr 11/13/2020 17:46:33'!
PASSED!

!testRun: #ReportTest #test04AccountSummaryShouldReflectOutgoingTransfersOnAccounts stamp: 'fr 11/13/2020 17:46:33'!
PASSED!

!testRun: #ReportTest #test05AccountSummaryShouldReflectIncomingTransfersOnAccounts stamp: 'fr 11/13/2020 17:46:33'!
PASSED!

!testRun: #ReportTest #test06AccountSummaryForPortfolioWithNoTransactionsShouldJustShowBalanceZero stamp: 'fr 11/13/2020 17:46:33'!
PASSED!

!testRun: #ReportTest #test07AccountSummaryShouldReflectDepositsOnPortfoliosWithAccounts stamp: 'fr 11/13/2020 17:46:33'!
PASSED!

!testRun: #ReportTest #test08AccountSummaryShouldReflectWithdrawsOnPortfoliosWithAccounts stamp: 'fr 11/13/2020 17:46:33'!
PASSED!

!testRun: #ReportTest #test09AccountSummaryShouldReflectOutgoingAndIncomingTransfersOnPortfoliosWithAccounts stamp: 'fr 11/13/2020 17:46:33'!
PASSED!

!testRun: #ReportTest #test10AccountSummaryShouldReflectDepositsOnPortfoliosWithPortfolios stamp: 'fr 11/13/2020 17:46:33'!
PASSED!

!testRun: #ReportTest #test11AccountSummaryShouldReflectWithdrawsOnPortfoliosWithPortfolios stamp: 'fr 11/13/2020 17:46:33'!
PASSED!

!testRun: #ReportTest #test12AccountSummaryShouldReflectOutgoingAndIncomingTransfersOnPortfoliosWithPortfolios stamp: 'fr 11/13/2020 17:46:33'!
PASSED!

!testRun: #ReportTest #test13NetTransferForAccountWithNoTransactionsShouldBeZero stamp: 'fr 11/13/2020 17:46:33'!
PASSED!

!testRun: #ReportTest #test14NetTransferForAccountWithAnOutgoingTransferShouldReflectItsValue stamp: 'fr 11/13/2020 17:46:33'!
PASSED!

!testRun: #ReportTest #test15NetTransferForAccountWithAnIncomingTransferShouldReflectItsValue stamp: 'fr 11/13/2020 17:46:33'!
PASSED!

!testRun: #ReportTest #test16NetTransferForAccountShouldNotReflectDeposits stamp: 'fr 11/13/2020 17:46:33'!
PASSED!

!testRun: #ReportTest #test17NetTransferForAccountShouldNotReflectWithdraws stamp: 'fr 11/13/2020 17:46:33'!
PASSED!

!testRun: #ReportTest #test18NetTransferForPortfolioWithNoTransactionsShouldBeZero stamp: 'fr 11/13/2020 17:46:33'!
PASSED!

!testRun: #ReportTest #test19NetTransferForPortfolioWithAnOutgoingTransferShouldReflectItsValue stamp: 'fr 11/13/2020 17:46:33'!
PASSED!

!testRun: #ReportTest #test20NetTransferForPortfolioWithAnIncomingTransferShouldReflectItsValue stamp: 'fr 11/13/2020 17:46:33'!
PASSED!

!testRun: #ReportTest #test21NetTransferForPortfolioShouldNotReflectDeposits stamp: 'fr 11/13/2020 17:46:33'!
PASSED!

!testRun: #ReportTest #test22NetTransferForPortfolioShouldNotReflectWithdraws stamp: 'fr 11/13/2020 17:46:33'!
PASSED!

!testRun: #ReportTest #test23NetTransferForPortfoliosWithPortfoliosShouldReflectOutgoingAndIncomingTransfers stamp: 'fr 11/13/2020 17:46:33'!
PASSED!

!testRun: #ReportTest #test24NetTransferForPortfoliosWithPortfoliosShouldNotRelfectDepositsOrWithdraws stamp: 'fr 11/13/2020 17:46:33'!
PASSED!

!testRun: #ReportTest #test25 stamp: 'fr 11/13/2020 17:46:33'!
PASSED!

!testRun: #ReportTest #test26 stamp: 'fr 11/13/2020 17:46:33'!
PASSED!

!testRun: #ReportTest #test27 stamp: 'fr 11/13/2020 17:46:33'!
PASSED!
!ReportTest methodsFor: 'tests - account summary' stamp: 'fr 11/13/2020 17:47:08' prior: 50873049!
test04AccountSummaryShouldReflectOutgoingTransfersOnAccounts

	| account anotherAccount reporter |
	
	account _ ReceptiveAccount new.
	anotherAccount _ ReceptiveAccount new.
	reporter _ SummaryReporter for: account.
	
	Transfer move: 100 from: account to: anotherAccount.
	
	self assert: [reporter accountSummary = (OrderedCollection with: 'Salida por transferencia de 100.' with: 'Balance = -100')]! !

!testRun: #ReportTest #test04AccountSummaryShouldReflectOutgoingTransfersOnAccounts stamp: 'fr 11/13/2020 17:47:10'!
PASSED!

!testRun: #ReportTest #test01AccountSummaryForAccountWithNoTransactionsShouldJustShowBalanceZero stamp: 'fr 11/13/2020 17:47:10'!
PASSED!

!testRun: #ReportTest #test02AccountSummaryShouldReflectDepositsOnAccounts stamp: 'fr 11/13/2020 17:47:10'!
PASSED!

!testRun: #ReportTest #test03AccountSummaryShouldReflectWithdrawsOnAccounts stamp: 'fr 11/13/2020 17:47:10'!
PASSED!

!testRun: #ReportTest #test04AccountSummaryShouldReflectOutgoingTransfersOnAccounts stamp: 'fr 11/13/2020 17:47:10'!
PASSED!

!testRun: #ReportTest #test05AccountSummaryShouldReflectIncomingTransfersOnAccounts stamp: 'fr 11/13/2020 17:47:10'!
PASSED!

!testRun: #ReportTest #test06AccountSummaryForPortfolioWithNoTransactionsShouldJustShowBalanceZero stamp: 'fr 11/13/2020 17:47:10'!
PASSED!

!testRun: #ReportTest #test07AccountSummaryShouldReflectDepositsOnPortfoliosWithAccounts stamp: 'fr 11/13/2020 17:47:10'!
PASSED!

!testRun: #ReportTest #test08AccountSummaryShouldReflectWithdrawsOnPortfoliosWithAccounts stamp: 'fr 11/13/2020 17:47:10'!
PASSED!

!testRun: #ReportTest #test09AccountSummaryShouldReflectOutgoingAndIncomingTransfersOnPortfoliosWithAccounts stamp: 'fr 11/13/2020 17:47:10'!
PASSED!

!testRun: #ReportTest #test10AccountSummaryShouldReflectDepositsOnPortfoliosWithPortfolios stamp: 'fr 11/13/2020 17:47:10'!
PASSED!

!testRun: #ReportTest #test11AccountSummaryShouldReflectWithdrawsOnPortfoliosWithPortfolios stamp: 'fr 11/13/2020 17:47:10'!
PASSED!

!testRun: #ReportTest #test12AccountSummaryShouldReflectOutgoingAndIncomingTransfersOnPortfoliosWithPortfolios stamp: 'fr 11/13/2020 17:47:10'!
PASSED!

!testRun: #ReportTest #test13NetTransferForAccountWithNoTransactionsShouldBeZero stamp: 'fr 11/13/2020 17:47:10'!
PASSED!

!testRun: #ReportTest #test14NetTransferForAccountWithAnOutgoingTransferShouldReflectItsValue stamp: 'fr 11/13/2020 17:47:10'!
PASSED!

!testRun: #ReportTest #test15NetTransferForAccountWithAnIncomingTransferShouldReflectItsValue stamp: 'fr 11/13/2020 17:47:10'!
PASSED!

!testRun: #ReportTest #test16NetTransferForAccountShouldNotReflectDeposits stamp: 'fr 11/13/2020 17:47:10'!
PASSED!

!testRun: #ReportTest #test17NetTransferForAccountShouldNotReflectWithdraws stamp: 'fr 11/13/2020 17:47:10'!
PASSED!

!testRun: #ReportTest #test18NetTransferForPortfolioWithNoTransactionsShouldBeZero stamp: 'fr 11/13/2020 17:47:10'!
PASSED!

!testRun: #ReportTest #test19NetTransferForPortfolioWithAnOutgoingTransferShouldReflectItsValue stamp: 'fr 11/13/2020 17:47:10'!
PASSED!

!testRun: #ReportTest #test20NetTransferForPortfolioWithAnIncomingTransferShouldReflectItsValue stamp: 'fr 11/13/2020 17:47:10'!
PASSED!

!testRun: #ReportTest #test21NetTransferForPortfolioShouldNotReflectDeposits stamp: 'fr 11/13/2020 17:47:10'!
PASSED!

!testRun: #ReportTest #test22NetTransferForPortfolioShouldNotReflectWithdraws stamp: 'fr 11/13/2020 17:47:10'!
PASSED!

!testRun: #ReportTest #test23NetTransferForPortfoliosWithPortfoliosShouldReflectOutgoingAndIncomingTransfers stamp: 'fr 11/13/2020 17:47:10'!
PASSED!

!testRun: #ReportTest #test24NetTransferForPortfoliosWithPortfoliosShouldNotRelfectDepositsOrWithdraws stamp: 'fr 11/13/2020 17:47:10'!
PASSED!

!testRun: #ReportTest #test25 stamp: 'fr 11/13/2020 17:47:10'!
PASSED!

!testRun: #ReportTest #test26 stamp: 'fr 11/13/2020 17:47:10'!
PASSED!

!testRun: #ReportTest #test27 stamp: 'fr 11/13/2020 17:47:10'!
PASSED!
!ReportTest methodsFor: 'tests - account summary' stamp: 'fr 11/13/2020 17:47:28' prior: 50873021!
test05AccountSummaryShouldReflectIncomingTransfersOnAccounts

	| account anotherAccount reporter |
	
	account _ ReceptiveAccount new.
	anotherAccount _ ReceptiveAccount new.
	reporter _ SummaryReporter for: account.
	
	Transfer move: 100 from: anotherAccount to: account.
	
	self assert: [reporter accountSummary = (OrderedCollection with: 'Entrada por transferencia de 100.' with: 'Balance = 100')]! !
!ReportTest methodsFor: 'tests - account summary' stamp: 'fr 11/13/2020 17:47:45' prior: 50873121!
test06AccountSummaryForPortfolioWithNoTransactionsShouldJustShowBalanceZero

	| portfolio reporter |
	
	portfolio _ Portfolio new.
	reporter _ SummaryReporter for: portfolio.
	
	self assert: [reporter accountSummary = (OrderedCollection with: 'Balance = 0')]! !

!testRun: #ReportTest #test06AccountSummaryForPortfolioWithNoTransactionsShouldJustShowBalanceZero stamp: 'fr 11/13/2020 17:47:47'!
PASSED!

!testRun: #ReportTest #test01AccountSummaryForAccountWithNoTransactionsShouldJustShowBalanceZero stamp: 'fr 11/13/2020 17:47:47'!
PASSED!

!testRun: #ReportTest #test02AccountSummaryShouldReflectDepositsOnAccounts stamp: 'fr 11/13/2020 17:47:47'!
PASSED!

!testRun: #ReportTest #test03AccountSummaryShouldReflectWithdrawsOnAccounts stamp: 'fr 11/13/2020 17:47:47'!
PASSED!

!testRun: #ReportTest #test04AccountSummaryShouldReflectOutgoingTransfersOnAccounts stamp: 'fr 11/13/2020 17:47:47'!
PASSED!

!testRun: #ReportTest #test05AccountSummaryShouldReflectIncomingTransfersOnAccounts stamp: 'fr 11/13/2020 17:47:47'!
PASSED!

!testRun: #ReportTest #test06AccountSummaryForPortfolioWithNoTransactionsShouldJustShowBalanceZero stamp: 'fr 11/13/2020 17:47:47'!
PASSED!

!testRun: #ReportTest #test07AccountSummaryShouldReflectDepositsOnPortfoliosWithAccounts stamp: 'fr 11/13/2020 17:47:47'!
PASSED!

!testRun: #ReportTest #test08AccountSummaryShouldReflectWithdrawsOnPortfoliosWithAccounts stamp: 'fr 11/13/2020 17:47:47'!
PASSED!

!testRun: #ReportTest #test09AccountSummaryShouldReflectOutgoingAndIncomingTransfersOnPortfoliosWithAccounts stamp: 'fr 11/13/2020 17:47:47'!
PASSED!

!testRun: #ReportTest #test10AccountSummaryShouldReflectDepositsOnPortfoliosWithPortfolios stamp: 'fr 11/13/2020 17:47:47'!
PASSED!

!testRun: #ReportTest #test11AccountSummaryShouldReflectWithdrawsOnPortfoliosWithPortfolios stamp: 'fr 11/13/2020 17:47:47'!
PASSED!

!testRun: #ReportTest #test12AccountSummaryShouldReflectOutgoingAndIncomingTransfersOnPortfoliosWithPortfolios stamp: 'fr 11/13/2020 17:47:47'!
PASSED!

!testRun: #ReportTest #test13NetTransferForAccountWithNoTransactionsShouldBeZero stamp: 'fr 11/13/2020 17:47:47'!
PASSED!

!testRun: #ReportTest #test14NetTransferForAccountWithAnOutgoingTransferShouldReflectItsValue stamp: 'fr 11/13/2020 17:47:47'!
PASSED!

!testRun: #ReportTest #test15NetTransferForAccountWithAnIncomingTransferShouldReflectItsValue stamp: 'fr 11/13/2020 17:47:47'!
PASSED!

!testRun: #ReportTest #test16NetTransferForAccountShouldNotReflectDeposits stamp: 'fr 11/13/2020 17:47:47'!
PASSED!

!testRun: #ReportTest #test17NetTransferForAccountShouldNotReflectWithdraws stamp: 'fr 11/13/2020 17:47:47'!
PASSED!

!testRun: #ReportTest #test18NetTransferForPortfolioWithNoTransactionsShouldBeZero stamp: 'fr 11/13/2020 17:47:47'!
PASSED!

!testRun: #ReportTest #test19NetTransferForPortfolioWithAnOutgoingTransferShouldReflectItsValue stamp: 'fr 11/13/2020 17:47:47'!
PASSED!

!testRun: #ReportTest #test20NetTransferForPortfolioWithAnIncomingTransferShouldReflectItsValue stamp: 'fr 11/13/2020 17:47:47'!
PASSED!

!testRun: #ReportTest #test21NetTransferForPortfolioShouldNotReflectDeposits stamp: 'fr 11/13/2020 17:47:47'!
PASSED!

!testRun: #ReportTest #test22NetTransferForPortfolioShouldNotReflectWithdraws stamp: 'fr 11/13/2020 17:47:47'!
PASSED!

!testRun: #ReportTest #test23NetTransferForPortfoliosWithPortfoliosShouldReflectOutgoingAndIncomingTransfers stamp: 'fr 11/13/2020 17:47:47'!
PASSED!

!testRun: #ReportTest #test24NetTransferForPortfoliosWithPortfoliosShouldNotRelfectDepositsOrWithdraws stamp: 'fr 11/13/2020 17:47:47'!
PASSED!

!testRun: #ReportTest #test25 stamp: 'fr 11/13/2020 17:47:47'!
PASSED!

!testRun: #ReportTest #test26 stamp: 'fr 11/13/2020 17:47:47'!
PASSED!

!testRun: #ReportTest #test27 stamp: 'fr 11/13/2020 17:47:47'!
PASSED!
!ReportTest methodsFor: 'tests - account summary' stamp: 'fr 11/13/2020 17:48:13' prior: 50873219!
test07AccountSummaryShouldReflectDepositsOnPortfoliosWithAccounts

	| portfolio account reporter |
	
	portfolio _ Portfolio new.
	account _ ReceptiveAccount new.
	reporter _ SummaryReporter for: portfolio.
	Deposit register: 100 on: account.
	
	portfolio add: account.
		
	self assert: [reporter accountSummary = (OrderedCollection with: 'Dep�sito por 100.' with: 'Balance = 100')]! !

!testRun: #ReportTest #test07AccountSummaryShouldReflectDepositsOnPortfoliosWithAccounts stamp: 'fr 11/13/2020 17:48:15'!
PASSED!

!testRun: #ReportTest #test01AccountSummaryForAccountWithNoTransactionsShouldJustShowBalanceZero stamp: 'fr 11/13/2020 17:48:15'!
PASSED!

!testRun: #ReportTest #test02AccountSummaryShouldReflectDepositsOnAccounts stamp: 'fr 11/13/2020 17:48:15'!
PASSED!

!testRun: #ReportTest #test03AccountSummaryShouldReflectWithdrawsOnAccounts stamp: 'fr 11/13/2020 17:48:15'!
PASSED!

!testRun: #ReportTest #test04AccountSummaryShouldReflectOutgoingTransfersOnAccounts stamp: 'fr 11/13/2020 17:48:15'!
PASSED!

!testRun: #ReportTest #test05AccountSummaryShouldReflectIncomingTransfersOnAccounts stamp: 'fr 11/13/2020 17:48:15'!
PASSED!

!testRun: #ReportTest #test06AccountSummaryForPortfolioWithNoTransactionsShouldJustShowBalanceZero stamp: 'fr 11/13/2020 17:48:15'!
PASSED!

!testRun: #ReportTest #test07AccountSummaryShouldReflectDepositsOnPortfoliosWithAccounts stamp: 'fr 11/13/2020 17:48:15'!
PASSED!

!testRun: #ReportTest #test08AccountSummaryShouldReflectWithdrawsOnPortfoliosWithAccounts stamp: 'fr 11/13/2020 17:48:15'!
PASSED!

!testRun: #ReportTest #test09AccountSummaryShouldReflectOutgoingAndIncomingTransfersOnPortfoliosWithAccounts stamp: 'fr 11/13/2020 17:48:15'!
PASSED!

!testRun: #ReportTest #test10AccountSummaryShouldReflectDepositsOnPortfoliosWithPortfolios stamp: 'fr 11/13/2020 17:48:15'!
PASSED!

!testRun: #ReportTest #test11AccountSummaryShouldReflectWithdrawsOnPortfoliosWithPortfolios stamp: 'fr 11/13/2020 17:48:15'!
PASSED!

!testRun: #ReportTest #test12AccountSummaryShouldReflectOutgoingAndIncomingTransfersOnPortfoliosWithPortfolios stamp: 'fr 11/13/2020 17:48:15'!
PASSED!

!testRun: #ReportTest #test13NetTransferForAccountWithNoTransactionsShouldBeZero stamp: 'fr 11/13/2020 17:48:15'!
PASSED!

!testRun: #ReportTest #test14NetTransferForAccountWithAnOutgoingTransferShouldReflectItsValue stamp: 'fr 11/13/2020 17:48:15'!
PASSED!

!testRun: #ReportTest #test15NetTransferForAccountWithAnIncomingTransferShouldReflectItsValue stamp: 'fr 11/13/2020 17:48:15'!
PASSED!

!testRun: #ReportTest #test16NetTransferForAccountShouldNotReflectDeposits stamp: 'fr 11/13/2020 17:48:15'!
PASSED!

!testRun: #ReportTest #test17NetTransferForAccountShouldNotReflectWithdraws stamp: 'fr 11/13/2020 17:48:15'!
PASSED!

!testRun: #ReportTest #test18NetTransferForPortfolioWithNoTransactionsShouldBeZero stamp: 'fr 11/13/2020 17:48:15'!
PASSED!

!testRun: #ReportTest #test19NetTransferForPortfolioWithAnOutgoingTransferShouldReflectItsValue stamp: 'fr 11/13/2020 17:48:15'!
PASSED!

!testRun: #ReportTest #test20NetTransferForPortfolioWithAnIncomingTransferShouldReflectItsValue stamp: 'fr 11/13/2020 17:48:15'!
PASSED!

!testRun: #ReportTest #test21NetTransferForPortfolioShouldNotReflectDeposits stamp: 'fr 11/13/2020 17:48:15'!
PASSED!

!testRun: #ReportTest #test22NetTransferForPortfolioShouldNotReflectWithdraws stamp: 'fr 11/13/2020 17:48:15'!
PASSED!

!testRun: #ReportTest #test23NetTransferForPortfoliosWithPortfoliosShouldReflectOutgoingAndIncomingTransfers stamp: 'fr 11/13/2020 17:48:15'!
PASSED!

!testRun: #ReportTest #test24NetTransferForPortfoliosWithPortfoliosShouldNotRelfectDepositsOrWithdraws stamp: 'fr 11/13/2020 17:48:15'!
PASSED!

!testRun: #ReportTest #test25 stamp: 'fr 11/13/2020 17:48:15'!
PASSED!

!testRun: #ReportTest #test26 stamp: 'fr 11/13/2020 17:48:15'!
PASSED!

!testRun: #ReportTest #test27 stamp: 'fr 11/13/2020 17:48:15'!
PASSED!
!ReportTest methodsFor: 'tests - account summary' stamp: 'fr 11/13/2020 17:48:32' prior: 50873246!
test08AccountSummaryShouldReflectWithdrawsOnPortfoliosWithAccounts

	| portfolio account reporter |
	
	portfolio _ Portfolio new.
	account _ ReceptiveAccount new.
	reporter _ SummaryReporter for: portfolio.
	Withdraw register: 100 on: account.
	
	portfolio add: account.
		
	self assert: [reporter accountSummary = (OrderedCollection with: 'Extracci�n por 100.' with: 'Balance = -100')]! !

!testRun: #ReportTest #test08AccountSummaryShouldReflectWithdrawsOnPortfoliosWithAccounts stamp: 'fr 11/13/2020 17:48:34'!
PASSED!

!testRun: #ReportTest #test01AccountSummaryForAccountWithNoTransactionsShouldJustShowBalanceZero stamp: 'fr 11/13/2020 17:48:34'!
PASSED!

!testRun: #ReportTest #test02AccountSummaryShouldReflectDepositsOnAccounts stamp: 'fr 11/13/2020 17:48:34'!
PASSED!

!testRun: #ReportTest #test03AccountSummaryShouldReflectWithdrawsOnAccounts stamp: 'fr 11/13/2020 17:48:34'!
PASSED!

!testRun: #ReportTest #test04AccountSummaryShouldReflectOutgoingTransfersOnAccounts stamp: 'fr 11/13/2020 17:48:34'!
PASSED!

!testRun: #ReportTest #test05AccountSummaryShouldReflectIncomingTransfersOnAccounts stamp: 'fr 11/13/2020 17:48:34'!
PASSED!

!testRun: #ReportTest #test06AccountSummaryForPortfolioWithNoTransactionsShouldJustShowBalanceZero stamp: 'fr 11/13/2020 17:48:34'!
PASSED!

!testRun: #ReportTest #test07AccountSummaryShouldReflectDepositsOnPortfoliosWithAccounts stamp: 'fr 11/13/2020 17:48:34'!
PASSED!

!testRun: #ReportTest #test08AccountSummaryShouldReflectWithdrawsOnPortfoliosWithAccounts stamp: 'fr 11/13/2020 17:48:34'!
PASSED!

!testRun: #ReportTest #test09AccountSummaryShouldReflectOutgoingAndIncomingTransfersOnPortfoliosWithAccounts stamp: 'fr 11/13/2020 17:48:34'!
PASSED!

!testRun: #ReportTest #test10AccountSummaryShouldReflectDepositsOnPortfoliosWithPortfolios stamp: 'fr 11/13/2020 17:48:34'!
PASSED!

!testRun: #ReportTest #test11AccountSummaryShouldReflectWithdrawsOnPortfoliosWithPortfolios stamp: 'fr 11/13/2020 17:48:34'!
PASSED!

!testRun: #ReportTest #test12AccountSummaryShouldReflectOutgoingAndIncomingTransfersOnPortfoliosWithPortfolios stamp: 'fr 11/13/2020 17:48:34'!
PASSED!

!testRun: #ReportTest #test13NetTransferForAccountWithNoTransactionsShouldBeZero stamp: 'fr 11/13/2020 17:48:34'!
PASSED!

!testRun: #ReportTest #test14NetTransferForAccountWithAnOutgoingTransferShouldReflectItsValue stamp: 'fr 11/13/2020 17:48:34'!
PASSED!

!testRun: #ReportTest #test15NetTransferForAccountWithAnIncomingTransferShouldReflectItsValue stamp: 'fr 11/13/2020 17:48:34'!
PASSED!

!testRun: #ReportTest #test16NetTransferForAccountShouldNotReflectDeposits stamp: 'fr 11/13/2020 17:48:34'!
PASSED!

!testRun: #ReportTest #test17NetTransferForAccountShouldNotReflectWithdraws stamp: 'fr 11/13/2020 17:48:34'!
PASSED!

!testRun: #ReportTest #test18NetTransferForPortfolioWithNoTransactionsShouldBeZero stamp: 'fr 11/13/2020 17:48:34'!
PASSED!

!testRun: #ReportTest #test19NetTransferForPortfolioWithAnOutgoingTransferShouldReflectItsValue stamp: 'fr 11/13/2020 17:48:34'!
PASSED!

!testRun: #ReportTest #test20NetTransferForPortfolioWithAnIncomingTransferShouldReflectItsValue stamp: 'fr 11/13/2020 17:48:34'!
PASSED!

!testRun: #ReportTest #test21NetTransferForPortfolioShouldNotReflectDeposits stamp: 'fr 11/13/2020 17:48:34'!
PASSED!

!testRun: #ReportTest #test22NetTransferForPortfolioShouldNotReflectWithdraws stamp: 'fr 11/13/2020 17:48:34'!
PASSED!

!testRun: #ReportTest #test23NetTransferForPortfoliosWithPortfoliosShouldReflectOutgoingAndIncomingTransfers stamp: 'fr 11/13/2020 17:48:34'!
PASSED!

!testRun: #ReportTest #test24NetTransferForPortfoliosWithPortfoliosShouldNotRelfectDepositsOrWithdraws stamp: 'fr 11/13/2020 17:48:34'!
PASSED!

!testRun: #ReportTest #test25 stamp: 'fr 11/13/2020 17:48:34'!
PASSED!

!testRun: #ReportTest #test26 stamp: 'fr 11/13/2020 17:48:34'!
PASSED!

!testRun: #ReportTest #test27 stamp: 'fr 11/13/2020 17:48:34'!
PASSED!
!ReportTest methodsFor: 'tests - account summary' stamp: 'fr 11/13/2020 17:48:53' prior: 50873273!
test09AccountSummaryShouldReflectOutgoingAndIncomingTransfersOnPortfoliosWithAccounts

	| portfolio account anotherAccount reporter |
	
	portfolio _ Portfolio new.
	account _ ReceptiveAccount new.
	anotherAccount _ ReceptiveAccount new.
	reporter _ SummaryReporter for: portfolio.

	Transfer move: 10 from: account to: anotherAccount.
		
	portfolio add: account.
	portfolio add: anotherAccount.
		
	self assert: [reporter accountSummary = (OrderedCollection with: 'Salida por transferencia de 10.' with: 'Entrada por transferencia de 10.' with: 'Balance = 0')]! !

!testRun: #ReportTest #test09AccountSummaryShouldReflectOutgoingAndIncomingTransfersOnPortfoliosWithAccounts stamp: 'fr 11/13/2020 17:48:55'!
PASSED!

!testRun: #ReportTest #test01AccountSummaryForAccountWithNoTransactionsShouldJustShowBalanceZero stamp: 'fr 11/13/2020 17:48:55'!
PASSED!

!testRun: #ReportTest #test02AccountSummaryShouldReflectDepositsOnAccounts stamp: 'fr 11/13/2020 17:48:55'!
PASSED!

!testRun: #ReportTest #test03AccountSummaryShouldReflectWithdrawsOnAccounts stamp: 'fr 11/13/2020 17:48:55'!
PASSED!

!testRun: #ReportTest #test04AccountSummaryShouldReflectOutgoingTransfersOnAccounts stamp: 'fr 11/13/2020 17:48:55'!
PASSED!

!testRun: #ReportTest #test05AccountSummaryShouldReflectIncomingTransfersOnAccounts stamp: 'fr 11/13/2020 17:48:55'!
PASSED!

!testRun: #ReportTest #test06AccountSummaryForPortfolioWithNoTransactionsShouldJustShowBalanceZero stamp: 'fr 11/13/2020 17:48:55'!
PASSED!

!testRun: #ReportTest #test07AccountSummaryShouldReflectDepositsOnPortfoliosWithAccounts stamp: 'fr 11/13/2020 17:48:55'!
PASSED!

!testRun: #ReportTest #test08AccountSummaryShouldReflectWithdrawsOnPortfoliosWithAccounts stamp: 'fr 11/13/2020 17:48:55'!
PASSED!

!testRun: #ReportTest #test09AccountSummaryShouldReflectOutgoingAndIncomingTransfersOnPortfoliosWithAccounts stamp: 'fr 11/13/2020 17:48:55'!
PASSED!

!testRun: #ReportTest #test10AccountSummaryShouldReflectDepositsOnPortfoliosWithPortfolios stamp: 'fr 11/13/2020 17:48:55'!
PASSED!

!testRun: #ReportTest #test11AccountSummaryShouldReflectWithdrawsOnPortfoliosWithPortfolios stamp: 'fr 11/13/2020 17:48:55'!
PASSED!

!testRun: #ReportTest #test12AccountSummaryShouldReflectOutgoingAndIncomingTransfersOnPortfoliosWithPortfolios stamp: 'fr 11/13/2020 17:48:55'!
PASSED!

!testRun: #ReportTest #test13NetTransferForAccountWithNoTransactionsShouldBeZero stamp: 'fr 11/13/2020 17:48:55'!
PASSED!

!testRun: #ReportTest #test14NetTransferForAccountWithAnOutgoingTransferShouldReflectItsValue stamp: 'fr 11/13/2020 17:48:55'!
PASSED!

!testRun: #ReportTest #test15NetTransferForAccountWithAnIncomingTransferShouldReflectItsValue stamp: 'fr 11/13/2020 17:48:55'!
PASSED!

!testRun: #ReportTest #test16NetTransferForAccountShouldNotReflectDeposits stamp: 'fr 11/13/2020 17:48:55'!
PASSED!

!testRun: #ReportTest #test17NetTransferForAccountShouldNotReflectWithdraws stamp: 'fr 11/13/2020 17:48:55'!
PASSED!

!testRun: #ReportTest #test18NetTransferForPortfolioWithNoTransactionsShouldBeZero stamp: 'fr 11/13/2020 17:48:55'!
PASSED!

!testRun: #ReportTest #test19NetTransferForPortfolioWithAnOutgoingTransferShouldReflectItsValue stamp: 'fr 11/13/2020 17:48:55'!
PASSED!

!testRun: #ReportTest #test20NetTransferForPortfolioWithAnIncomingTransferShouldReflectItsValue stamp: 'fr 11/13/2020 17:48:55'!
PASSED!

!testRun: #ReportTest #test21NetTransferForPortfolioShouldNotReflectDeposits stamp: 'fr 11/13/2020 17:48:55'!
PASSED!

!testRun: #ReportTest #test22NetTransferForPortfolioShouldNotReflectWithdraws stamp: 'fr 11/13/2020 17:48:55'!
PASSED!

!testRun: #ReportTest #test23NetTransferForPortfoliosWithPortfoliosShouldReflectOutgoingAndIncomingTransfers stamp: 'fr 11/13/2020 17:48:55'!
PASSED!

!testRun: #ReportTest #test24NetTransferForPortfoliosWithPortfoliosShouldNotRelfectDepositsOrWithdraws stamp: 'fr 11/13/2020 17:48:55'!
PASSED!

!testRun: #ReportTest #test25 stamp: 'fr 11/13/2020 17:48:55'!
PASSED!

!testRun: #ReportTest #test26 stamp: 'fr 11/13/2020 17:48:55'!
PASSED!

!testRun: #ReportTest #test27 stamp: 'fr 11/13/2020 17:48:55'!
PASSED!
!ReportTest methodsFor: 'tests - account summary' stamp: 'fr 11/13/2020 17:49:15' prior: 50873312!
test10AccountSummaryShouldReflectDepositsOnPortfoliosWithPortfolios

	| portfolio account anotherPortfolio reporter |
	
	account _ ReceptiveAccount new.		
	portfolio _ Portfolio with: account.
	anotherPortfolio _ Portfolio with: portfolio.
	reporter _ SummaryReporter for: anotherPortfolio.

	Deposit register: 100 on: account.

		
	self assert: [reporter accountSummary = (OrderedCollection with: 'Dep�sito por 100.' with: 'Balance = 100')]! !

!testRun: #ReportTest #test10AccountSummaryShouldReflectDepositsOnPortfoliosWithPortfolios stamp: 'fr 11/13/2020 17:49:17'!
PASSED!

!testRun: #ReportTest #test01AccountSummaryForAccountWithNoTransactionsShouldJustShowBalanceZero stamp: 'fr 11/13/2020 17:49:17'!
PASSED!

!testRun: #ReportTest #test02AccountSummaryShouldReflectDepositsOnAccounts stamp: 'fr 11/13/2020 17:49:17'!
PASSED!

!testRun: #ReportTest #test03AccountSummaryShouldReflectWithdrawsOnAccounts stamp: 'fr 11/13/2020 17:49:17'!
PASSED!

!testRun: #ReportTest #test04AccountSummaryShouldReflectOutgoingTransfersOnAccounts stamp: 'fr 11/13/2020 17:49:17'!
PASSED!

!testRun: #ReportTest #test05AccountSummaryShouldReflectIncomingTransfersOnAccounts stamp: 'fr 11/13/2020 17:49:17'!
PASSED!

!testRun: #ReportTest #test06AccountSummaryForPortfolioWithNoTransactionsShouldJustShowBalanceZero stamp: 'fr 11/13/2020 17:49:17'!
PASSED!

!testRun: #ReportTest #test07AccountSummaryShouldReflectDepositsOnPortfoliosWithAccounts stamp: 'fr 11/13/2020 17:49:17'!
PASSED!

!testRun: #ReportTest #test08AccountSummaryShouldReflectWithdrawsOnPortfoliosWithAccounts stamp: 'fr 11/13/2020 17:49:17'!
PASSED!

!testRun: #ReportTest #test09AccountSummaryShouldReflectOutgoingAndIncomingTransfersOnPortfoliosWithAccounts stamp: 'fr 11/13/2020 17:49:17'!
PASSED!

!testRun: #ReportTest #test10AccountSummaryShouldReflectDepositsOnPortfoliosWithPortfolios stamp: 'fr 11/13/2020 17:49:17'!
PASSED!

!testRun: #ReportTest #test11AccountSummaryShouldReflectWithdrawsOnPortfoliosWithPortfolios stamp: 'fr 11/13/2020 17:49:17'!
PASSED!

!testRun: #ReportTest #test12AccountSummaryShouldReflectOutgoingAndIncomingTransfersOnPortfoliosWithPortfolios stamp: 'fr 11/13/2020 17:49:17'!
PASSED!

!testRun: #ReportTest #test13NetTransferForAccountWithNoTransactionsShouldBeZero stamp: 'fr 11/13/2020 17:49:17'!
PASSED!

!testRun: #ReportTest #test14NetTransferForAccountWithAnOutgoingTransferShouldReflectItsValue stamp: 'fr 11/13/2020 17:49:17'!
PASSED!

!testRun: #ReportTest #test15NetTransferForAccountWithAnIncomingTransferShouldReflectItsValue stamp: 'fr 11/13/2020 17:49:17'!
PASSED!

!testRun: #ReportTest #test16NetTransferForAccountShouldNotReflectDeposits stamp: 'fr 11/13/2020 17:49:17'!
PASSED!

!testRun: #ReportTest #test17NetTransferForAccountShouldNotReflectWithdraws stamp: 'fr 11/13/2020 17:49:17'!
PASSED!

!testRun: #ReportTest #test18NetTransferForPortfolioWithNoTransactionsShouldBeZero stamp: 'fr 11/13/2020 17:49:17'!
PASSED!

!testRun: #ReportTest #test19NetTransferForPortfolioWithAnOutgoingTransferShouldReflectItsValue stamp: 'fr 11/13/2020 17:49:17'!
PASSED!

!testRun: #ReportTest #test20NetTransferForPortfolioWithAnIncomingTransferShouldReflectItsValue stamp: 'fr 11/13/2020 17:49:17'!
PASSED!

!testRun: #ReportTest #test21NetTransferForPortfolioShouldNotReflectDeposits stamp: 'fr 11/13/2020 17:49:17'!
PASSED!

!testRun: #ReportTest #test22NetTransferForPortfolioShouldNotReflectWithdraws stamp: 'fr 11/13/2020 17:49:17'!
PASSED!

!testRun: #ReportTest #test23NetTransferForPortfoliosWithPortfoliosShouldReflectOutgoingAndIncomingTransfers stamp: 'fr 11/13/2020 17:49:17'!
PASSED!

!testRun: #ReportTest #test24NetTransferForPortfoliosWithPortfoliosShouldNotRelfectDepositsOrWithdraws stamp: 'fr 11/13/2020 17:49:17'!
PASSED!

!testRun: #ReportTest #test25 stamp: 'fr 11/13/2020 17:49:17'!
PASSED!

!testRun: #ReportTest #test26 stamp: 'fr 11/13/2020 17:49:17'!
PASSED!

!testRun: #ReportTest #test27 stamp: 'fr 11/13/2020 17:49:17'!
PASSED!
!ReportTest methodsFor: 'tests - account summary' stamp: 'fr 11/13/2020 17:49:32' prior: 50873340!
test11AccountSummaryShouldReflectWithdrawsOnPortfoliosWithPortfolios

	| portfolio account anotherPortfolio reporter |
	
	account _ ReceptiveAccount new.		
	portfolio _ Portfolio with: account.
	anotherPortfolio _ Portfolio with: portfolio.
	reporter _ SummaryReporter for: anotherPortfolio.

	Withdraw register: 100 on: account.

		
	self assert: [reporter accountSummary = (OrderedCollection with: 'Extracci�n por 100.' with: 'Balance = -100')]! !
!ReportTest methodsFor: 'tests - account summary' stamp: 'fr 11/13/2020 17:49:52' prior: 50873368!
test12AccountSummaryShouldReflectOutgoingAndIncomingTransfersOnPortfoliosWithPortfolios

	| portfolio account anotherPortfolio anotherAccount reporter |
	
	account _ ReceptiveAccount new.		
	anotherAccount _ ReceptiveAccount new.		
	portfolio _ Portfolio with: account.
	anotherPortfolio _ Portfolio with: portfolio.
	anotherPortfolio add: anotherAccount.
	reporter _ SummaryReporter for: anotherPortfolio.

	Transfer move: 100 from: account to: anotherAccount.

		
	self assert: [reporter accountSummary = (OrderedCollection with: 'Salida por transferencia de 100.' with: 'Entrada por transferencia de 100.' with: 'Balance = 0')]! !

!testRun: #ReportTest #test12AccountSummaryShouldReflectOutgoingAndIncomingTransfersOnPortfoliosWithPortfolios stamp: 'fr 11/13/2020 17:49:54'!
PASSED!

!testRun: #ReportTest #test01AccountSummaryForAccountWithNoTransactionsShouldJustShowBalanceZero stamp: 'fr 11/13/2020 17:49:54'!
PASSED!

!testRun: #ReportTest #test02AccountSummaryShouldReflectDepositsOnAccounts stamp: 'fr 11/13/2020 17:49:54'!
PASSED!

!testRun: #ReportTest #test03AccountSummaryShouldReflectWithdrawsOnAccounts stamp: 'fr 11/13/2020 17:49:54'!
PASSED!

!testRun: #ReportTest #test04AccountSummaryShouldReflectOutgoingTransfersOnAccounts stamp: 'fr 11/13/2020 17:49:54'!
PASSED!

!testRun: #ReportTest #test05AccountSummaryShouldReflectIncomingTransfersOnAccounts stamp: 'fr 11/13/2020 17:49:54'!
PASSED!

!testRun: #ReportTest #test06AccountSummaryForPortfolioWithNoTransactionsShouldJustShowBalanceZero stamp: 'fr 11/13/2020 17:49:54'!
PASSED!

!testRun: #ReportTest #test07AccountSummaryShouldReflectDepositsOnPortfoliosWithAccounts stamp: 'fr 11/13/2020 17:49:54'!
PASSED!

!testRun: #ReportTest #test08AccountSummaryShouldReflectWithdrawsOnPortfoliosWithAccounts stamp: 'fr 11/13/2020 17:49:54'!
PASSED!

!testRun: #ReportTest #test09AccountSummaryShouldReflectOutgoingAndIncomingTransfersOnPortfoliosWithAccounts stamp: 'fr 11/13/2020 17:49:54'!
PASSED!

!testRun: #ReportTest #test10AccountSummaryShouldReflectDepositsOnPortfoliosWithPortfolios stamp: 'fr 11/13/2020 17:49:54'!
PASSED!

!testRun: #ReportTest #test11AccountSummaryShouldReflectWithdrawsOnPortfoliosWithPortfolios stamp: 'fr 11/13/2020 17:49:54'!
PASSED!

!testRun: #ReportTest #test12AccountSummaryShouldReflectOutgoingAndIncomingTransfersOnPortfoliosWithPortfolios stamp: 'fr 11/13/2020 17:49:54'!
PASSED!

!testRun: #ReportTest #test13NetTransferForAccountWithNoTransactionsShouldBeZero stamp: 'fr 11/13/2020 17:49:54'!
PASSED!

!testRun: #ReportTest #test14NetTransferForAccountWithAnOutgoingTransferShouldReflectItsValue stamp: 'fr 11/13/2020 17:49:54'!
PASSED!

!testRun: #ReportTest #test15NetTransferForAccountWithAnIncomingTransferShouldReflectItsValue stamp: 'fr 11/13/2020 17:49:54'!
PASSED!

!testRun: #ReportTest #test16NetTransferForAccountShouldNotReflectDeposits stamp: 'fr 11/13/2020 17:49:54'!
PASSED!

!testRun: #ReportTest #test17NetTransferForAccountShouldNotReflectWithdraws stamp: 'fr 11/13/2020 17:49:54'!
PASSED!

!testRun: #ReportTest #test18NetTransferForPortfolioWithNoTransactionsShouldBeZero stamp: 'fr 11/13/2020 17:49:54'!
PASSED!

!testRun: #ReportTest #test19NetTransferForPortfolioWithAnOutgoingTransferShouldReflectItsValue stamp: 'fr 11/13/2020 17:49:54'!
PASSED!

!testRun: #ReportTest #test20NetTransferForPortfolioWithAnIncomingTransferShouldReflectItsValue stamp: 'fr 11/13/2020 17:49:54'!
PASSED!

!testRun: #ReportTest #test21NetTransferForPortfolioShouldNotReflectDeposits stamp: 'fr 11/13/2020 17:49:54'!
PASSED!

!testRun: #ReportTest #test22NetTransferForPortfolioShouldNotReflectWithdraws stamp: 'fr 11/13/2020 17:49:54'!
PASSED!

!testRun: #ReportTest #test23NetTransferForPortfoliosWithPortfoliosShouldReflectOutgoingAndIncomingTransfers stamp: 'fr 11/13/2020 17:49:54'!
PASSED!

!testRun: #ReportTest #test24NetTransferForPortfoliosWithPortfoliosShouldNotRelfectDepositsOrWithdraws stamp: 'fr 11/13/2020 17:49:54'!
PASSED!

!testRun: #ReportTest #test25 stamp: 'fr 11/13/2020 17:49:54'!
PASSED!

!testRun: #ReportTest #test26 stamp: 'fr 11/13/2020 17:49:54'!
PASSED!

!testRun: #ReportTest #test27 stamp: 'fr 11/13/2020 17:49:54'!
PASSED!

!methodRemoval: Account #accountSummary stamp: 'fr 11/13/2020 17:50:03'!
accountSummary
	
	
	| reporter |
	reporter _ SummaryReporter for: self.
	
	^reporter accountSummary
	
!

Object subclass: #TransferNetReporter
	instanceVariableNames: 'account receptiveAccount report'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #TransferNetReporter category: 'Portfolio-Solucion' stamp: 'fr 11/13/2020 17:54:46'!
Object subclass: #TransferNetReporter
	instanceVariableNames: 'account receptiveAccount report'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

Object subclass: #TransferNetReporter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #TransferNetReporter category: 'Portfolio-Solucion' stamp: 'fr 11/13/2020 17:54:51'!
Object subclass: #TransferNetReporter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!
!ReceptiveAccount methodsFor: 'report' stamp: 'fr 11/13/2020 17:58:51' prior: 50878215!
buildReportWith: aReporter

	transactions do: [:aTransaction | 
		aTransaction addToReportWith: aReporter 
	]! !

!testRun: #ReportTest #test01AccountSummaryForAccountWithNoTransactionsShouldJustShowBalanceZero stamp: 'fr 11/13/2020 17:58:55'!
PASSED!

!testRun: #ReportTest #test02AccountSummaryShouldReflectDepositsOnAccounts stamp: 'fr 11/13/2020 17:58:55'!
PASSED!

!testRun: #ReportTest #test03AccountSummaryShouldReflectWithdrawsOnAccounts stamp: 'fr 11/13/2020 17:58:55'!
PASSED!

!testRun: #ReportTest #test04AccountSummaryShouldReflectOutgoingTransfersOnAccounts stamp: 'fr 11/13/2020 17:58:55'!
PASSED!

!testRun: #ReportTest #test05AccountSummaryShouldReflectIncomingTransfersOnAccounts stamp: 'fr 11/13/2020 17:58:55'!
PASSED!

!testRun: #ReportTest #test06AccountSummaryForPortfolioWithNoTransactionsShouldJustShowBalanceZero stamp: 'fr 11/13/2020 17:58:55'!
PASSED!

!testRun: #ReportTest #test07AccountSummaryShouldReflectDepositsOnPortfoliosWithAccounts stamp: 'fr 11/13/2020 17:58:55'!
PASSED!

!testRun: #ReportTest #test08AccountSummaryShouldReflectWithdrawsOnPortfoliosWithAccounts stamp: 'fr 11/13/2020 17:58:55'!
PASSED!

!testRun: #ReportTest #test09AccountSummaryShouldReflectOutgoingAndIncomingTransfersOnPortfoliosWithAccounts stamp: 'fr 11/13/2020 17:58:55'!
PASSED!

!testRun: #ReportTest #test10AccountSummaryShouldReflectDepositsOnPortfoliosWithPortfolios stamp: 'fr 11/13/2020 17:58:55'!
PASSED!

!testRun: #ReportTest #test11AccountSummaryShouldReflectWithdrawsOnPortfoliosWithPortfolios stamp: 'fr 11/13/2020 17:58:55'!
PASSED!

!testRun: #ReportTest #test12AccountSummaryShouldReflectOutgoingAndIncomingTransfersOnPortfoliosWithPortfolios stamp: 'fr 11/13/2020 17:58:55'!
PASSED!

!testRun: #ReportTest #test13NetTransferForAccountWithNoTransactionsShouldBeZero stamp: 'fr 11/13/2020 17:58:55'!
PASSED!

!testRun: #ReportTest #test14NetTransferForAccountWithAnOutgoingTransferShouldReflectItsValue stamp: 'fr 11/13/2020 17:58:55'!
PASSED!

!testRun: #ReportTest #test15NetTransferForAccountWithAnIncomingTransferShouldReflectItsValue stamp: 'fr 11/13/2020 17:58:55'!
PASSED!

!testRun: #ReportTest #test16NetTransferForAccountShouldNotReflectDeposits stamp: 'fr 11/13/2020 17:58:55'!
PASSED!

!testRun: #ReportTest #test17NetTransferForAccountShouldNotReflectWithdraws stamp: 'fr 11/13/2020 17:58:55'!
PASSED!

!testRun: #ReportTest #test18NetTransferForPortfolioWithNoTransactionsShouldBeZero stamp: 'fr 11/13/2020 17:58:55'!
PASSED!

!testRun: #ReportTest #test19NetTransferForPortfolioWithAnOutgoingTransferShouldReflectItsValue stamp: 'fr 11/13/2020 17:58:55'!
PASSED!

!testRun: #ReportTest #test20NetTransferForPortfolioWithAnIncomingTransferShouldReflectItsValue stamp: 'fr 11/13/2020 17:58:55'!
PASSED!

!testRun: #ReportTest #test21NetTransferForPortfolioShouldNotReflectDeposits stamp: 'fr 11/13/2020 17:58:55'!
PASSED!

!testRun: #ReportTest #test22NetTransferForPortfolioShouldNotReflectWithdraws stamp: 'fr 11/13/2020 17:58:55'!
PASSED!

!testRun: #ReportTest #test23NetTransferForPortfoliosWithPortfoliosShouldReflectOutgoingAndIncomingTransfers stamp: 'fr 11/13/2020 17:58:55'!
PASSED!

!testRun: #ReportTest #test24NetTransferForPortfoliosWithPortfoliosShouldNotRelfectDepositsOrWithdraws stamp: 'fr 11/13/2020 17:58:55'!
PASSED!

!testRun: #ReportTest #test25 stamp: 'fr 11/13/2020 17:58:55'!
PASSED!

!testRun: #ReportTest #test26 stamp: 'fr 11/13/2020 17:58:55'!
PASSED!

!testRun: #ReportTest #test27 stamp: 'fr 11/13/2020 17:58:55'!
PASSED!
!SummaryReporter methodsFor: 'summary' stamp: 'fr 11/13/2020 17:59:05' prior: 50877770!
addDepositToReport: aDeposit

	 report add: 'Dep�sito por ',aDeposit value asString,'.'! !
!SummaryReporter methodsFor: 'summary' stamp: 'fr 11/13/2020 17:59:10' prior: 50877776!
addWithdrawToReport: aWithdraw

	 report add: 'Extracci�n por ',aWithdraw value asString,'.'! !

!methodRemoval: SummaryReporter #buildReportForReceptiveAccount: stamp: 'fr 11/13/2020 17:59:14'!
buildReportForReceptiveAccount: aReceptiveAccount 
!
!TransferNetReporter methodsFor: 'no messages' stamp: 'fr 11/13/2020 18:01:26'!
transferNet! !
!TransferNetReporter methodsFor: 'as yet unclassified' stamp: 'fr 11/13/2020 18:01:28' prior: 50879946!
transferNet

	! !
!SummaryReporter methodsFor: 'summary' stamp: 'fr 11/13/2020 18:01:51' prior: 50877955!
accountSummary
	
	account buildReportWith: self.
	report add: 'Balance = ',account balance asString.
	^report! !
!SummaryReporter methodsFor: 'initialization' stamp: 'fr 11/13/2020 18:02:01' prior: 50877357!
initializeFor: aReceptiveAccount 

	report _ OrderedCollection new.
	account _ aReceptiveAccount.! !

!testRun: #ReportTest #test01AccountSummaryForAccountWithNoTransactionsShouldJustShowBalanceZero stamp: 'fr 11/13/2020 18:02:03'!
PASSED!

!testRun: #ReportTest #test02AccountSummaryShouldReflectDepositsOnAccounts stamp: 'fr 11/13/2020 18:02:03'!
PASSED!

!testRun: #ReportTest #test03AccountSummaryShouldReflectWithdrawsOnAccounts stamp: 'fr 11/13/2020 18:02:03'!
PASSED!

!testRun: #ReportTest #test04AccountSummaryShouldReflectOutgoingTransfersOnAccounts stamp: 'fr 11/13/2020 18:02:03'!
PASSED!

!testRun: #ReportTest #test05AccountSummaryShouldReflectIncomingTransfersOnAccounts stamp: 'fr 11/13/2020 18:02:03'!
PASSED!

!testRun: #ReportTest #test06AccountSummaryForPortfolioWithNoTransactionsShouldJustShowBalanceZero stamp: 'fr 11/13/2020 18:02:03'!
PASSED!

!testRun: #ReportTest #test07AccountSummaryShouldReflectDepositsOnPortfoliosWithAccounts stamp: 'fr 11/13/2020 18:02:03'!
PASSED!

!testRun: #ReportTest #test08AccountSummaryShouldReflectWithdrawsOnPortfoliosWithAccounts stamp: 'fr 11/13/2020 18:02:03'!
PASSED!

!testRun: #ReportTest #test09AccountSummaryShouldReflectOutgoingAndIncomingTransfersOnPortfoliosWithAccounts stamp: 'fr 11/13/2020 18:02:03'!
PASSED!

!testRun: #ReportTest #test10AccountSummaryShouldReflectDepositsOnPortfoliosWithPortfolios stamp: 'fr 11/13/2020 18:02:03'!
PASSED!

!testRun: #ReportTest #test11AccountSummaryShouldReflectWithdrawsOnPortfoliosWithPortfolios stamp: 'fr 11/13/2020 18:02:03'!
PASSED!

!testRun: #ReportTest #test12AccountSummaryShouldReflectOutgoingAndIncomingTransfersOnPortfoliosWithPortfolios stamp: 'fr 11/13/2020 18:02:03'!
PASSED!

!testRun: #ReportTest #test13NetTransferForAccountWithNoTransactionsShouldBeZero stamp: 'fr 11/13/2020 18:02:03'!
PASSED!

!testRun: #ReportTest #test14NetTransferForAccountWithAnOutgoingTransferShouldReflectItsValue stamp: 'fr 11/13/2020 18:02:03'!
PASSED!

!testRun: #ReportTest #test15NetTransferForAccountWithAnIncomingTransferShouldReflectItsValue stamp: 'fr 11/13/2020 18:02:03'!
PASSED!

!testRun: #ReportTest #test16NetTransferForAccountShouldNotReflectDeposits stamp: 'fr 11/13/2020 18:02:03'!
PASSED!

!testRun: #ReportTest #test17NetTransferForAccountShouldNotReflectWithdraws stamp: 'fr 11/13/2020 18:02:03'!
PASSED!

!testRun: #ReportTest #test18NetTransferForPortfolioWithNoTransactionsShouldBeZero stamp: 'fr 11/13/2020 18:02:03'!
PASSED!

!testRun: #ReportTest #test19NetTransferForPortfolioWithAnOutgoingTransferShouldReflectItsValue stamp: 'fr 11/13/2020 18:02:03'!
PASSED!

!testRun: #ReportTest #test20NetTransferForPortfolioWithAnIncomingTransferShouldReflectItsValue stamp: 'fr 11/13/2020 18:02:03'!
PASSED!

!testRun: #ReportTest #test21NetTransferForPortfolioShouldNotReflectDeposits stamp: 'fr 11/13/2020 18:02:03'!
PASSED!

!testRun: #ReportTest #test22NetTransferForPortfolioShouldNotReflectWithdraws stamp: 'fr 11/13/2020 18:02:03'!
PASSED!

!testRun: #ReportTest #test23NetTransferForPortfoliosWithPortfoliosShouldReflectOutgoingAndIncomingTransfers stamp: 'fr 11/13/2020 18:02:03'!
PASSED!

!testRun: #ReportTest #test24NetTransferForPortfoliosWithPortfoliosShouldNotRelfectDepositsOrWithdraws stamp: 'fr 11/13/2020 18:02:03'!
PASSED!

!testRun: #ReportTest #test25 stamp: 'fr 11/13/2020 18:02:03'!
PASSED!

!testRun: #ReportTest #test26 stamp: 'fr 11/13/2020 18:02:03'!
PASSED!

!testRun: #ReportTest #test27 stamp: 'fr 11/13/2020 18:02:03'!
PASSED!
!SummaryReporter methodsFor: 'summary' stamp: 'fr 11/13/2020 18:02:39'!
addAccountBalance

	^ report add: 'Balance = ',account balance asString! !
!SummaryReporter methodsFor: 'summary' stamp: 'fr 11/13/2020 18:02:39' prior: 50879954!
accountSummary
	
	account buildReportWith: self.
	self addAccountBalance.
	^report! !
!SummaryReporter methodsFor: 'summary' stamp: 'fr 11/13/2020 18:02:51' prior: 50880073!
addAccountBalance

	report add: 'Balance = ',account balance asString! !

!testRun: #ReportTest #test01AccountSummaryForAccountWithNoTransactionsShouldJustShowBalanceZero stamp: 'fr 11/13/2020 18:02:53'!
PASSED!

!testRun: #ReportTest #test02AccountSummaryShouldReflectDepositsOnAccounts stamp: 'fr 11/13/2020 18:02:53'!
PASSED!

!testRun: #ReportTest #test03AccountSummaryShouldReflectWithdrawsOnAccounts stamp: 'fr 11/13/2020 18:02:53'!
PASSED!

!testRun: #ReportTest #test04AccountSummaryShouldReflectOutgoingTransfersOnAccounts stamp: 'fr 11/13/2020 18:02:53'!
PASSED!

!testRun: #ReportTest #test05AccountSummaryShouldReflectIncomingTransfersOnAccounts stamp: 'fr 11/13/2020 18:02:53'!
PASSED!

!testRun: #ReportTest #test06AccountSummaryForPortfolioWithNoTransactionsShouldJustShowBalanceZero stamp: 'fr 11/13/2020 18:02:53'!
PASSED!

!testRun: #ReportTest #test07AccountSummaryShouldReflectDepositsOnPortfoliosWithAccounts stamp: 'fr 11/13/2020 18:02:53'!
PASSED!

!testRun: #ReportTest #test08AccountSummaryShouldReflectWithdrawsOnPortfoliosWithAccounts stamp: 'fr 11/13/2020 18:02:53'!
PASSED!

!testRun: #ReportTest #test09AccountSummaryShouldReflectOutgoingAndIncomingTransfersOnPortfoliosWithAccounts stamp: 'fr 11/13/2020 18:02:53'!
PASSED!

!testRun: #ReportTest #test10AccountSummaryShouldReflectDepositsOnPortfoliosWithPortfolios stamp: 'fr 11/13/2020 18:02:53'!
PASSED!

!testRun: #ReportTest #test11AccountSummaryShouldReflectWithdrawsOnPortfoliosWithPortfolios stamp: 'fr 11/13/2020 18:02:53'!
PASSED!

!testRun: #ReportTest #test12AccountSummaryShouldReflectOutgoingAndIncomingTransfersOnPortfoliosWithPortfolios stamp: 'fr 11/13/2020 18:02:53'!
PASSED!

!testRun: #ReportTest #test13NetTransferForAccountWithNoTransactionsShouldBeZero stamp: 'fr 11/13/2020 18:02:53'!
PASSED!

!testRun: #ReportTest #test14NetTransferForAccountWithAnOutgoingTransferShouldReflectItsValue stamp: 'fr 11/13/2020 18:02:53'!
PASSED!

!testRun: #ReportTest #test15NetTransferForAccountWithAnIncomingTransferShouldReflectItsValue stamp: 'fr 11/13/2020 18:02:53'!
PASSED!

!testRun: #ReportTest #test16NetTransferForAccountShouldNotReflectDeposits stamp: 'fr 11/13/2020 18:02:53'!
PASSED!

!testRun: #ReportTest #test17NetTransferForAccountShouldNotReflectWithdraws stamp: 'fr 11/13/2020 18:02:53'!
PASSED!

!testRun: #ReportTest #test18NetTransferForPortfolioWithNoTransactionsShouldBeZero stamp: 'fr 11/13/2020 18:02:53'!
PASSED!

!testRun: #ReportTest #test19NetTransferForPortfolioWithAnOutgoingTransferShouldReflectItsValue stamp: 'fr 11/13/2020 18:02:53'!
PASSED!

!testRun: #ReportTest #test20NetTransferForPortfolioWithAnIncomingTransferShouldReflectItsValue stamp: 'fr 11/13/2020 18:02:53'!
PASSED!

!testRun: #ReportTest #test21NetTransferForPortfolioShouldNotReflectDeposits stamp: 'fr 11/13/2020 18:02:53'!
PASSED!

!testRun: #ReportTest #test22NetTransferForPortfolioShouldNotReflectWithdraws stamp: 'fr 11/13/2020 18:02:53'!
PASSED!

!testRun: #ReportTest #test23NetTransferForPortfoliosWithPortfoliosShouldReflectOutgoingAndIncomingTransfers stamp: 'fr 11/13/2020 18:02:53'!
PASSED!

!testRun: #ReportTest #test24NetTransferForPortfoliosWithPortfoliosShouldNotRelfectDepositsOrWithdraws stamp: 'fr 11/13/2020 18:02:53'!
PASSED!

!testRun: #ReportTest #test25 stamp: 'fr 11/13/2020 18:02:53'!
PASSED!

!testRun: #ReportTest #test26 stamp: 'fr 11/13/2020 18:02:53'!
PASSED!

!testRun: #ReportTest #test27 stamp: 'fr 11/13/2020 18:02:53'!
PASSED!

!classDefinition: #TransferNetReporter category: 'Portfolio-Solucion' stamp: 'fr 11/13/2020 18:03:28'!
Object subclass: #TransferNetReporter
	instanceVariableNames: 'account'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #TransferNetReporter category: 'Portfolio-Solucion' stamp: 'fr 11/13/2020 18:03:29'!
Object subclass: #TransferNetReporter
	instanceVariableNames: 'account transferNet'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!
!TransferNetReporter methodsFor: 'as yet unclassified' stamp: 'fr 11/13/2020 18:03:26' prior: 50879950!
transferNet

	account buildReportWith: self.
	^transferNet

	! !
!TransferNetReporter methodsFor: 'as yet unclassified' stamp: 'fr 11/13/2020 18:03:51'!
netTransfer

	account buildReportWith: self.
	^transferNet

	! !

!methodRemoval: TransferNetReporter #transferNet stamp: 'fr 11/13/2020 18:03:51'!
transferNet

	account buildReportWith: self.
	^transferNet

	!
!ReceptiveAccount methodsFor: 'report' stamp: 'fr 11/13/2020 18:04:17'!
transferNet
	
	^self transactionsForNetTransferBalance
			inject: 0 
			into: [:currentNetBalance :aTransaction | aTransaction affectBalance: currentNetBalance]! !
!ReportTest methodsFor: 'as yet unclassified' stamp: 'fr 11/13/2020 18:04:17' prior: 50873525!
test13NetTransferForAccountWithNoTransactionsShouldBeZero

	| account |
	
	account _ ReceptiveAccount new.
	
	self assert: [account transferNet = 0]! !
!ReportTest methodsFor: 'as yet unclassified' stamp: 'fr 11/13/2020 18:04:17' prior: 50873565!
test15NetTransferForAccountWithAnIncomingTransferShouldReflectItsValue

	| account anotherAccount |
	
	account _ ReceptiveAccount new.
	anotherAccount _ ReceptiveAccount new.
	
	Transfer move: 100 from: anotherAccount to: account.
	
	self assert: [account transferNet = 100]! !
!ReportTest methodsFor: 'as yet unclassified' stamp: 'fr 11/13/2020 18:04:17' prior: 50873541!
test14NetTransferForAccountWithAnOutgoingTransferShouldReflectItsValue

	| account anotherAccount |
	
	account _ ReceptiveAccount new.
	anotherAccount _ ReceptiveAccount new.
	
	Transfer move: 100 from: account to: anotherAccount.
	
	self assert: [account transferNet = -100]! !
!ReportTest methodsFor: 'as yet unclassified' stamp: 'fr 11/13/2020 18:04:17' prior: 50873589!
test16NetTransferForAccountShouldNotReflectDeposits

	| account |
	
	account _ ReceptiveAccount new.
	
	Deposit register: 100 on: account. 
		
	self assert: [account transferNet = 0]! !
!ReportTest methodsFor: 'as yet unclassified' stamp: 'fr 11/13/2020 18:04:17' prior: 50873607!
test17NetTransferForAccountShouldNotReflectWithdraws

	| account |
	
	account _ ReceptiveAccount new.
	
	Withdraw register: 100 on: account. 
		
	self assert: [account transferNet = 0]! !

!methodRemoval: ReceptiveAccount #netTransfer stamp: 'fr 11/13/2020 18:04:17'!
netTransfer
	
	^self transactionsForNetTransferBalance
			inject: 0 
			into: [:currentNetBalance :aTransaction | aTransaction affectBalance: currentNetBalance]!
!Portfolio methodsFor: 'report' stamp: 'fr 11/13/2020 18:04:25'!
transferNet
	
	^accounts 
		inject: 0 
		into: [:currentPorfolioNetBalance :anAccount | currentPorfolioNetBalance + anAccount netTransfer]! !
!ReportTest methodsFor: 'as yet unclassified' stamp: 'fr 11/13/2020 18:04:25' prior: 50873704!
test18NetTransferForPortfolioWithNoTransactionsShouldBeZero

	| portfolio |
	
	portfolio _ Portfolio new.
			
	self assert: [portfolio transferNet = 0]! !
!ReportTest methodsFor: 'as yet unclassified' stamp: 'fr 11/13/2020 18:04:25' prior: 50874079!
test20NetTransferForPortfolioWithAnIncomingTransferShouldReflectItsValue

	| portfolio account anotherAccount |
	
	account _ ReceptiveAccount new.
	anotherAccount _ ReceptiveAccount new.
	portfolio _ Portfolio with: account.
	
	Transfer move: 10 from: anotherAccount to: account.
			
	self assert: [portfolio transferNet = 10]! !
!ReportTest methodsFor: 'as yet unclassified' stamp: 'fr 11/13/2020 18:04:25' prior: 50875800!
test24NetTransferForPortfoliosWithPortfoliosShouldNotRelfectDepositsOrWithdraws

	| portfolio account anotherPortfolio |
		
	account _ ReceptiveAccount new.
	portfolio _ Portfolio with: account.
	anotherPortfolio _ Portfolio with: portfolio.
	
	Deposit register: 100 on: account.
	Withdraw register: 50 on: account.
				
	self assert: [anotherPortfolio transferNet = 0]! !
!ReportTest methodsFor: 'as yet unclassified' stamp: 'fr 11/13/2020 18:04:25' prior: 50874508!
test21NetTransferForPortfolioShouldNotReflectDeposits

	| portfolio account |
	
	account _ ReceptiveAccount new.
	portfolio _ Portfolio with: account.
	
	Deposit register: 100 on: account. 
			
	self assert: [portfolio transferNet = 0]! !
!ReportTest methodsFor: 'as yet unclassified' stamp: 'fr 11/13/2020 18:04:25' prior: 50873717!
test19NetTransferForPortfolioWithAnOutgoingTransferShouldReflectItsValue

	| portfolio account anotherAccount |
	
	account _ ReceptiveAccount new.
	anotherAccount _ ReceptiveAccount new.
	portfolio _ Portfolio with: account.
	
	Transfer move: 10 from: account to: anotherAccount.
			
	self assert: [portfolio transferNet = -10]! !
!ReportTest methodsFor: 'as yet unclassified' stamp: 'fr 11/13/2020 18:04:25' prior: 50874527!
test22NetTransferForPortfolioShouldNotReflectWithdraws

	| portfolio account |
	
	account _ ReceptiveAccount new.
	portfolio _ Portfolio with: account.
	
	Withdraw register: 100 on: account. 
			
	self assert: [portfolio transferNet = 0]! !
!ReportTest methodsFor: 'as yet unclassified' stamp: 'fr 11/13/2020 18:04:25' prior: 50875657!
test23NetTransferForPortfoliosWithPortfoliosShouldReflectOutgoingAndIncomingTransfers

	| portfolio account anotherPortfolio anotherAccount |
	
	account _ ReceptiveAccount new.
	anotherAccount _ ReceptiveAccount new.
	portfolio _ Portfolio with: account.
	anotherPortfolio _ Portfolio with: portfolio.
	
	Transfer 	move: 30 from: anotherAccount to: account. 
	Transfer 	move: 10 from: account to: anotherAccount. 	
				
	self assert: [anotherPortfolio transferNet = 20]! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'fr 11/13/2020 18:04:25' prior: 50880293!
transferNet
	
	^accounts 
		inject: 0 
		into: [:currentPorfolioNetBalance :anAccount | currentPorfolioNetBalance + anAccount netTransfer]! !

!methodRemoval: Portfolio #netTransfer stamp: 'fr 11/13/2020 18:04:25'!
netTransfer
	
	^accounts 
		inject: 0 
		into: [:currentPorfolioNetBalance :anAccount | currentPorfolioNetBalance + anAccount netTransfer]!

!testRun: #ReportTest #test01AccountSummaryForAccountWithNoTransactionsShouldJustShowBalanceZero stamp: 'fr 11/13/2020 18:04:30'!
PASSED!

!testRun: #ReportTest #test02AccountSummaryShouldReflectDepositsOnAccounts stamp: 'fr 11/13/2020 18:04:30'!
PASSED!

!testRun: #ReportTest #test03AccountSummaryShouldReflectWithdrawsOnAccounts stamp: 'fr 11/13/2020 18:04:30'!
PASSED!

!testRun: #ReportTest #test04AccountSummaryShouldReflectOutgoingTransfersOnAccounts stamp: 'fr 11/13/2020 18:04:30'!
PASSED!

!testRun: #ReportTest #test05AccountSummaryShouldReflectIncomingTransfersOnAccounts stamp: 'fr 11/13/2020 18:04:30'!
PASSED!

!testRun: #ReportTest #test06AccountSummaryForPortfolioWithNoTransactionsShouldJustShowBalanceZero stamp: 'fr 11/13/2020 18:04:30'!
PASSED!

!testRun: #ReportTest #test07AccountSummaryShouldReflectDepositsOnPortfoliosWithAccounts stamp: 'fr 11/13/2020 18:04:30'!
PASSED!

!testRun: #ReportTest #test08AccountSummaryShouldReflectWithdrawsOnPortfoliosWithAccounts stamp: 'fr 11/13/2020 18:04:30'!
PASSED!

!testRun: #ReportTest #test09AccountSummaryShouldReflectOutgoingAndIncomingTransfersOnPortfoliosWithAccounts stamp: 'fr 11/13/2020 18:04:30'!
PASSED!

!testRun: #ReportTest #test10AccountSummaryShouldReflectDepositsOnPortfoliosWithPortfolios stamp: 'fr 11/13/2020 18:04:30'!
PASSED!

!testRun: #ReportTest #test11AccountSummaryShouldReflectWithdrawsOnPortfoliosWithPortfolios stamp: 'fr 11/13/2020 18:04:30'!
PASSED!

!testRun: #ReportTest #test12AccountSummaryShouldReflectOutgoingAndIncomingTransfersOnPortfoliosWithPortfolios stamp: 'fr 11/13/2020 18:04:30'!
PASSED!

!testRun: #ReportTest #test13NetTransferForAccountWithNoTransactionsShouldBeZero stamp: 'fr 11/13/2020 18:04:30'!
PASSED!

!testRun: #ReportTest #test14NetTransferForAccountWithAnOutgoingTransferShouldReflectItsValue stamp: 'fr 11/13/2020 18:04:30'!
PASSED!

!testRun: #ReportTest #test15NetTransferForAccountWithAnIncomingTransferShouldReflectItsValue stamp: 'fr 11/13/2020 18:04:30'!
PASSED!

!testRun: #ReportTest #test16NetTransferForAccountShouldNotReflectDeposits stamp: 'fr 11/13/2020 18:04:30'!
PASSED!

!testRun: #ReportTest #test17NetTransferForAccountShouldNotReflectWithdraws stamp: 'fr 11/13/2020 18:04:30'!
PASSED!

!testRun: #ReportTest #test18NetTransferForPortfolioWithNoTransactionsShouldBeZero stamp: 'fr 11/13/2020 18:04:30'!
PASSED!

!testRun: #ReportTest #test19NetTransferForPortfolioWithAnOutgoingTransferShouldReflectItsValue stamp: 'fr 11/13/2020 18:04:30'!
ERROR!

!testRun: #ReportTest #test20NetTransferForPortfolioWithAnIncomingTransferShouldReflectItsValue stamp: 'fr 11/13/2020 18:04:30'!
ERROR!

!testRun: #ReportTest #test21NetTransferForPortfolioShouldNotReflectDeposits stamp: 'fr 11/13/2020 18:04:30'!
ERROR!

!testRun: #ReportTest #test22NetTransferForPortfolioShouldNotReflectWithdraws stamp: 'fr 11/13/2020 18:04:30'!
ERROR!

!testRun: #ReportTest #test23NetTransferForPortfoliosWithPortfoliosShouldReflectOutgoingAndIncomingTransfers stamp: 'fr 11/13/2020 18:04:30'!
ERROR!

!testRun: #ReportTest #test24NetTransferForPortfoliosWithPortfoliosShouldNotRelfectDepositsOrWithdraws stamp: 'fr 11/13/2020 18:04:30'!
ERROR!

!testRun: #ReportTest #test25 stamp: 'fr 11/13/2020 18:04:30'!
PASSED!

!testRun: #ReportTest #test26 stamp: 'fr 11/13/2020 18:04:30'!
PASSED!

!testRun: #ReportTest #test27 stamp: 'fr 11/13/2020 18:04:30'!
PASSED!

!testRun: #ReportTest #test01AccountSummaryForAccountWithNoTransactionsShouldJustShowBalanceZero stamp: 'fr 11/13/2020 18:04:34'!
PASSED!

!testRun: #ReportTest #test02AccountSummaryShouldReflectDepositsOnAccounts stamp: 'fr 11/13/2020 18:04:34'!
PASSED!

!testRun: #ReportTest #test03AccountSummaryShouldReflectWithdrawsOnAccounts stamp: 'fr 11/13/2020 18:04:34'!
PASSED!

!testRun: #ReportTest #test04AccountSummaryShouldReflectOutgoingTransfersOnAccounts stamp: 'fr 11/13/2020 18:04:34'!
PASSED!

!testRun: #ReportTest #test05AccountSummaryShouldReflectIncomingTransfersOnAccounts stamp: 'fr 11/13/2020 18:04:34'!
PASSED!

!testRun: #ReportTest #test06AccountSummaryForPortfolioWithNoTransactionsShouldJustShowBalanceZero stamp: 'fr 11/13/2020 18:04:34'!
PASSED!

!testRun: #ReportTest #test07AccountSummaryShouldReflectDepositsOnPortfoliosWithAccounts stamp: 'fr 11/13/2020 18:04:34'!
PASSED!

!testRun: #ReportTest #test08AccountSummaryShouldReflectWithdrawsOnPortfoliosWithAccounts stamp: 'fr 11/13/2020 18:04:34'!
PASSED!

!testRun: #ReportTest #test09AccountSummaryShouldReflectOutgoingAndIncomingTransfersOnPortfoliosWithAccounts stamp: 'fr 11/13/2020 18:04:34'!
PASSED!

!testRun: #ReportTest #test10AccountSummaryShouldReflectDepositsOnPortfoliosWithPortfolios stamp: 'fr 11/13/2020 18:04:34'!
PASSED!

!testRun: #ReportTest #test11AccountSummaryShouldReflectWithdrawsOnPortfoliosWithPortfolios stamp: 'fr 11/13/2020 18:04:34'!
PASSED!

!testRun: #ReportTest #test12AccountSummaryShouldReflectOutgoingAndIncomingTransfersOnPortfoliosWithPortfolios stamp: 'fr 11/13/2020 18:04:34'!
PASSED!

!testRun: #ReportTest #test13NetTransferForAccountWithNoTransactionsShouldBeZero stamp: 'fr 11/13/2020 18:04:34'!
PASSED!

!testRun: #ReportTest #test14NetTransferForAccountWithAnOutgoingTransferShouldReflectItsValue stamp: 'fr 11/13/2020 18:04:34'!
PASSED!

!testRun: #ReportTest #test15NetTransferForAccountWithAnIncomingTransferShouldReflectItsValue stamp: 'fr 11/13/2020 18:04:34'!
PASSED!

!testRun: #ReportTest #test16NetTransferForAccountShouldNotReflectDeposits stamp: 'fr 11/13/2020 18:04:34'!
PASSED!

!testRun: #ReportTest #test17NetTransferForAccountShouldNotReflectWithdraws stamp: 'fr 11/13/2020 18:04:34'!
PASSED!

!testRun: #ReportTest #test18NetTransferForPortfolioWithNoTransactionsShouldBeZero stamp: 'fr 11/13/2020 18:04:34'!
PASSED!

!testRun: #ReportTest #test19NetTransferForPortfolioWithAnOutgoingTransferShouldReflectItsValue stamp: 'fr 11/13/2020 18:04:34'!
ERROR!

!testRun: #ReportTest #test20NetTransferForPortfolioWithAnIncomingTransferShouldReflectItsValue stamp: 'fr 11/13/2020 18:04:34'!
ERROR!

!testRun: #ReportTest #test21NetTransferForPortfolioShouldNotReflectDeposits stamp: 'fr 11/13/2020 18:04:34'!
ERROR!

!testRun: #ReportTest #test22NetTransferForPortfolioShouldNotReflectWithdraws stamp: 'fr 11/13/2020 18:04:34'!
ERROR!

!testRun: #ReportTest #test23NetTransferForPortfoliosWithPortfoliosShouldReflectOutgoingAndIncomingTransfers stamp: 'fr 11/13/2020 18:04:34'!
ERROR!

!testRun: #ReportTest #test24NetTransferForPortfoliosWithPortfoliosShouldNotRelfectDepositsOrWithdraws stamp: 'fr 11/13/2020 18:04:34'!
ERROR!

!testRun: #ReportTest #test25 stamp: 'fr 11/13/2020 18:04:34'!
PASSED!

!testRun: #ReportTest #test26 stamp: 'fr 11/13/2020 18:04:34'!
PASSED!

!testRun: #ReportTest #test27 stamp: 'fr 11/13/2020 18:04:34'!
PASSED!
!Portfolio methodsFor: 'report' stamp: 'fr 11/13/2020 18:04:58' prior: 50880392!
transferNet
	
	^accounts 
		inject: 0 
		into: [:currentPorfolioNetBalance :anAccount | currentPorfolioNetBalance + anAccount transferNet]! !

!testRun: #ReportTest #test01AccountSummaryForAccountWithNoTransactionsShouldJustShowBalanceZero stamp: 'fr 11/13/2020 18:04:59'!
PASSED!

!testRun: #ReportTest #test02AccountSummaryShouldReflectDepositsOnAccounts stamp: 'fr 11/13/2020 18:04:59'!
PASSED!

!testRun: #ReportTest #test03AccountSummaryShouldReflectWithdrawsOnAccounts stamp: 'fr 11/13/2020 18:04:59'!
PASSED!

!testRun: #ReportTest #test04AccountSummaryShouldReflectOutgoingTransfersOnAccounts stamp: 'fr 11/13/2020 18:04:59'!
PASSED!

!testRun: #ReportTest #test05AccountSummaryShouldReflectIncomingTransfersOnAccounts stamp: 'fr 11/13/2020 18:04:59'!
PASSED!

!testRun: #ReportTest #test06AccountSummaryForPortfolioWithNoTransactionsShouldJustShowBalanceZero stamp: 'fr 11/13/2020 18:04:59'!
PASSED!

!testRun: #ReportTest #test07AccountSummaryShouldReflectDepositsOnPortfoliosWithAccounts stamp: 'fr 11/13/2020 18:04:59'!
PASSED!

!testRun: #ReportTest #test08AccountSummaryShouldReflectWithdrawsOnPortfoliosWithAccounts stamp: 'fr 11/13/2020 18:04:59'!
PASSED!

!testRun: #ReportTest #test09AccountSummaryShouldReflectOutgoingAndIncomingTransfersOnPortfoliosWithAccounts stamp: 'fr 11/13/2020 18:04:59'!
PASSED!

!testRun: #ReportTest #test10AccountSummaryShouldReflectDepositsOnPortfoliosWithPortfolios stamp: 'fr 11/13/2020 18:04:59'!
PASSED!

!testRun: #ReportTest #test11AccountSummaryShouldReflectWithdrawsOnPortfoliosWithPortfolios stamp: 'fr 11/13/2020 18:05:00'!
PASSED!

!testRun: #ReportTest #test12AccountSummaryShouldReflectOutgoingAndIncomingTransfersOnPortfoliosWithPortfolios stamp: 'fr 11/13/2020 18:05:00'!
PASSED!

!testRun: #ReportTest #test13NetTransferForAccountWithNoTransactionsShouldBeZero stamp: 'fr 11/13/2020 18:05:00'!
PASSED!

!testRun: #ReportTest #test14NetTransferForAccountWithAnOutgoingTransferShouldReflectItsValue stamp: 'fr 11/13/2020 18:05:00'!
PASSED!

!testRun: #ReportTest #test15NetTransferForAccountWithAnIncomingTransferShouldReflectItsValue stamp: 'fr 11/13/2020 18:05:00'!
PASSED!

!testRun: #ReportTest #test16NetTransferForAccountShouldNotReflectDeposits stamp: 'fr 11/13/2020 18:05:00'!
PASSED!

!testRun: #ReportTest #test17NetTransferForAccountShouldNotReflectWithdraws stamp: 'fr 11/13/2020 18:05:00'!
PASSED!

!testRun: #ReportTest #test18NetTransferForPortfolioWithNoTransactionsShouldBeZero stamp: 'fr 11/13/2020 18:05:00'!
PASSED!

!testRun: #ReportTest #test19NetTransferForPortfolioWithAnOutgoingTransferShouldReflectItsValue stamp: 'fr 11/13/2020 18:05:00'!
PASSED!

!testRun: #ReportTest #test20NetTransferForPortfolioWithAnIncomingTransferShouldReflectItsValue stamp: 'fr 11/13/2020 18:05:00'!
PASSED!

!testRun: #ReportTest #test21NetTransferForPortfolioShouldNotReflectDeposits stamp: 'fr 11/13/2020 18:05:00'!
PASSED!

!testRun: #ReportTest #test22NetTransferForPortfolioShouldNotReflectWithdraws stamp: 'fr 11/13/2020 18:05:00'!
PASSED!

!testRun: #ReportTest #test23NetTransferForPortfoliosWithPortfoliosShouldReflectOutgoingAndIncomingTransfers stamp: 'fr 11/13/2020 18:05:00'!
PASSED!

!testRun: #ReportTest #test24NetTransferForPortfoliosWithPortfoliosShouldNotRelfectDepositsOrWithdraws stamp: 'fr 11/13/2020 18:05:00'!
PASSED!

!testRun: #ReportTest #test25 stamp: 'fr 11/13/2020 18:05:00'!
PASSED!

!testRun: #ReportTest #test26 stamp: 'fr 11/13/2020 18:05:00'!
PASSED!

!testRun: #ReportTest #test27 stamp: 'fr 11/13/2020 18:05:00'!
PASSED!
!TransferNetReporter methodsFor: 'nil' stamp: 'fr 11/13/2020 18:08:39'!
addDepositByTransferToReport: aDepositByTransfer

	transferNet _ aDepositByTransfer affectBalance: transferNet ! !

!classDefinition: #TransferNetReporter category: 'Portfolio-Solucion' stamp: 'fr 11/13/2020 18:08:47'!
Object subclass: #TransferNetReporter
	instanceVariableNames: 'account netTransferBalance'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!
!TransferNetReporter methodsFor: 'as yet unclassified' stamp: 'fr 11/13/2020 18:08:47' prior: 50880218!
netTransfer

	account buildReportWith: self.
	^netTransferBalance

	! !
!TransferNetReporter methodsFor: 'as yet unclassified' stamp: 'fr 11/13/2020 18:08:47' prior: 50880730!
addDepositByTransferToReport: aDepositByTransfer

	netTransferBalance _ aDepositByTransfer affectBalance: netTransferBalance ! !

!classDefinition: #TransferNetReporter category: 'Portfolio-Solucion' stamp: 'fr 11/13/2020 18:08:57'!
Object subclass: #TransferNetReporter
	instanceVariableNames: 'account transferNetBalance'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!
!TransferNetReporter methodsFor: 'as yet unclassified' stamp: 'fr 11/13/2020 18:08:57' prior: 50880746!
netTransfer

	account buildReportWith: self.
	^transferNetBalance

	! !
!TransferNetReporter methodsFor: 'as yet unclassified' stamp: 'fr 11/13/2020 18:08:57' prior: 50880752!
addDepositByTransferToReport: aDepositByTransfer

	transferNetBalance _ aDepositByTransfer affectBalance: transferNetBalance ! !
!TransferNetReporter methodsFor: 'as yet unclassified' stamp: 'fr 11/13/2020 18:09:11'!
addWithdrawByTransferToReport: aDepositByTransfer

	transferNetBalance _ aDepositByTransfer affectBalance: transferNetBalance ! !
!TransferNetReporter methodsFor: 'as yet unclassified' stamp: 'fr 11/13/2020 18:09:53'!
addWithdrawToReport: aWithdrawByTransfer

! !
!TransferNetReporter methodsFor: 'as yet unclassified' stamp: 'fr 11/13/2020 18:09:56' prior: 50880788!
addWithdrawToReport: aWithdraw
! !
!TransferNetReporter methodsFor: 'as yet unclassified' stamp: 'fr 11/13/2020 18:10:03'!
addDepositToReport: aDeposit
! !
!ReceptiveAccount methodsFor: 'report' stamp: 'fr 11/13/2020 18:10:50' prior: 50880227!
transferNet
	
	| reporter |
	reporter _ 	TransferNetReporter for: self.
	^reporter transferNet.! !
!Portfolio methodsFor: 'report' stamp: 'fr 11/13/2020 18:23:39' prior: 50880617!
transferNet
	
	| reporter |
	reporter _ 	TransferNetReporter for: self.
	^reporter transferNet.! !

!testRun: #ReportTest #test01AccountSummaryForAccountWithNoTransactionsShouldJustShowBalanceZero stamp: 'fr 11/13/2020 18:23:47'!
PASSED!

!testRun: #ReportTest #test02AccountSummaryShouldReflectDepositsOnAccounts stamp: 'fr 11/13/2020 18:23:47'!
PASSED!

!testRun: #ReportTest #test03AccountSummaryShouldReflectWithdrawsOnAccounts stamp: 'fr 11/13/2020 18:23:47'!
PASSED!

!testRun: #ReportTest #test04AccountSummaryShouldReflectOutgoingTransfersOnAccounts stamp: 'fr 11/13/2020 18:23:47'!
PASSED!

!testRun: #ReportTest #test05AccountSummaryShouldReflectIncomingTransfersOnAccounts stamp: 'fr 11/13/2020 18:23:47'!
PASSED!

!testRun: #ReportTest #test06AccountSummaryForPortfolioWithNoTransactionsShouldJustShowBalanceZero stamp: 'fr 11/13/2020 18:23:47'!
PASSED!

!testRun: #ReportTest #test07AccountSummaryShouldReflectDepositsOnPortfoliosWithAccounts stamp: 'fr 11/13/2020 18:23:47'!
PASSED!

!testRun: #ReportTest #test08AccountSummaryShouldReflectWithdrawsOnPortfoliosWithAccounts stamp: 'fr 11/13/2020 18:23:47'!
PASSED!

!testRun: #ReportTest #test09AccountSummaryShouldReflectOutgoingAndIncomingTransfersOnPortfoliosWithAccounts stamp: 'fr 11/13/2020 18:23:47'!
PASSED!

!testRun: #ReportTest #test10AccountSummaryShouldReflectDepositsOnPortfoliosWithPortfolios stamp: 'fr 11/13/2020 18:23:47'!
PASSED!

!testRun: #ReportTest #test11AccountSummaryShouldReflectWithdrawsOnPortfoliosWithPortfolios stamp: 'fr 11/13/2020 18:23:47'!
PASSED!

!testRun: #ReportTest #test12AccountSummaryShouldReflectOutgoingAndIncomingTransfersOnPortfoliosWithPortfolios stamp: 'fr 11/13/2020 18:23:47'!
PASSED!

!testRun: #ReportTest #test13NetTransferForAccountWithNoTransactionsShouldBeZero stamp: 'fr 11/13/2020 18:23:47'!
ERROR!

!testRun: #ReportTest #test14NetTransferForAccountWithAnOutgoingTransferShouldReflectItsValue stamp: 'fr 11/13/2020 18:23:47'!
ERROR!

!testRun: #ReportTest #test15NetTransferForAccountWithAnIncomingTransferShouldReflectItsValue stamp: 'fr 11/13/2020 18:23:47'!
ERROR!

!testRun: #ReportTest #test16NetTransferForAccountShouldNotReflectDeposits stamp: 'fr 11/13/2020 18:23:47'!
ERROR!

!testRun: #ReportTest #test17NetTransferForAccountShouldNotReflectWithdraws stamp: 'fr 11/13/2020 18:23:47'!
ERROR!

!testRun: #ReportTest #test18NetTransferForPortfolioWithNoTransactionsShouldBeZero stamp: 'fr 11/13/2020 18:23:47'!
ERROR!

!testRun: #ReportTest #test19NetTransferForPortfolioWithAnOutgoingTransferShouldReflectItsValue stamp: 'fr 11/13/2020 18:23:47'!
ERROR!

!testRun: #ReportTest #test20NetTransferForPortfolioWithAnIncomingTransferShouldReflectItsValue stamp: 'fr 11/13/2020 18:23:47'!
ERROR!

!testRun: #ReportTest #test21NetTransferForPortfolioShouldNotReflectDeposits stamp: 'fr 11/13/2020 18:23:47'!
ERROR!

!testRun: #ReportTest #test22NetTransferForPortfolioShouldNotReflectWithdraws stamp: 'fr 11/13/2020 18:23:47'!
ERROR!

!testRun: #ReportTest #test23NetTransferForPortfoliosWithPortfoliosShouldReflectOutgoingAndIncomingTransfers stamp: 'fr 11/13/2020 18:23:47'!
ERROR!

!testRun: #ReportTest #test24NetTransferForPortfoliosWithPortfoliosShouldNotRelfectDepositsOrWithdraws stamp: 'fr 11/13/2020 18:23:47'!
ERROR!

!testRun: #ReportTest #test25 stamp: 'fr 11/13/2020 18:23:47'!
PASSED!

!testRun: #ReportTest #test26 stamp: 'fr 11/13/2020 18:23:47'!
PASSED!

!testRun: #ReportTest #test27 stamp: 'fr 11/13/2020 18:23:47'!
PASSED!

!testRun: #ReportTest #test13NetTransferForAccountWithNoTransactionsShouldBeZero stamp: 'fr 11/13/2020 18:23:55'!
ERROR!

!testRun: #ReportTest #test13NetTransferForAccountWithNoTransactionsShouldBeZero stamp: 'fr 11/13/2020 18:23:55'!
ERROR!
!TransferNetReporter class methodsFor: 'instance creation' stamp: 'fr 11/13/2020 18:24:01'!
for: aReceptiveAccount 
	"DO NOT FORGET TO RENAME COLLABORATORS AND REMOVE THIS COMMENT!!!!"
	self shouldBeImplemented.
	^self new initializeFor: aReceptiveAccount ! !
!TransferNetReporter class methodsFor: 'instance creation' stamp: 'fr 11/13/2020 18:24:07' prior: 50880926!
for: aReceptiveAccount 
	
	^self new initializeFor: aReceptiveAccount ! !

!testRun: #ReportTest #test13NetTransferForAccountWithNoTransactionsShouldBeZero stamp: 'fr 11/13/2020 18:24:09'!
ERROR!

!classDefinition: #TransferNetReporter category: 'Portfolio-Solucion' stamp: 'fr 11/13/2020 18:24:23'!
Object subclass: #TransferNetReporter
	instanceVariableNames: 'account transferNetBalance receptiveAccount'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!
!TransferNetReporter methodsFor: 'initialization' stamp: 'fr 11/13/2020 18:24:23'!
initializeFor: aReceptiveAccount 
	self shouldBeImplemented.
	receptiveAccount := aReceptiveAccount.! !
!TransferNetReporter methodsFor: 'initialization' stamp: 'fr 11/13/2020 18:24:37' prior: 50880953!
initializeFor: aReceptiveAccount 
	
	transferNetBalance _ 0.
	account _ aReceptiveAccount.! !

!testRun: #ReportTest #test13NetTransferForAccountWithNoTransactionsShouldBeZero stamp: 'fr 11/13/2020 18:24:39'!
ERROR!
!TransferNetReporter methodsFor: 'as yet unclassified' stamp: 'fr 11/13/2020 18:24:54'!
transferNet

	account buildReportWith: self.
	^transferNetBalance

	! !

!methodRemoval: TransferNetReporter #netTransfer stamp: 'fr 11/13/2020 18:24:56'!
netTransfer

	account buildReportWith: self.
	^transferNetBalance

	!

!testRun: #ReportTest #test01AccountSummaryForAccountWithNoTransactionsShouldJustShowBalanceZero stamp: 'fr 11/13/2020 18:24:58'!
PASSED!

!testRun: #ReportTest #test02AccountSummaryShouldReflectDepositsOnAccounts stamp: 'fr 11/13/2020 18:24:58'!
PASSED!

!testRun: #ReportTest #test03AccountSummaryShouldReflectWithdrawsOnAccounts stamp: 'fr 11/13/2020 18:24:58'!
PASSED!

!testRun: #ReportTest #test04AccountSummaryShouldReflectOutgoingTransfersOnAccounts stamp: 'fr 11/13/2020 18:24:58'!
PASSED!

!testRun: #ReportTest #test05AccountSummaryShouldReflectIncomingTransfersOnAccounts stamp: 'fr 11/13/2020 18:24:58'!
PASSED!

!testRun: #ReportTest #test06AccountSummaryForPortfolioWithNoTransactionsShouldJustShowBalanceZero stamp: 'fr 11/13/2020 18:24:58'!
PASSED!

!testRun: #ReportTest #test07AccountSummaryShouldReflectDepositsOnPortfoliosWithAccounts stamp: 'fr 11/13/2020 18:24:58'!
PASSED!

!testRun: #ReportTest #test08AccountSummaryShouldReflectWithdrawsOnPortfoliosWithAccounts stamp: 'fr 11/13/2020 18:24:58'!
PASSED!

!testRun: #ReportTest #test09AccountSummaryShouldReflectOutgoingAndIncomingTransfersOnPortfoliosWithAccounts stamp: 'fr 11/13/2020 18:24:58'!
PASSED!

!testRun: #ReportTest #test10AccountSummaryShouldReflectDepositsOnPortfoliosWithPortfolios stamp: 'fr 11/13/2020 18:24:58'!
PASSED!

!testRun: #ReportTest #test11AccountSummaryShouldReflectWithdrawsOnPortfoliosWithPortfolios stamp: 'fr 11/13/2020 18:24:58'!
PASSED!

!testRun: #ReportTest #test12AccountSummaryShouldReflectOutgoingAndIncomingTransfersOnPortfoliosWithPortfolios stamp: 'fr 11/13/2020 18:24:58'!
PASSED!

!testRun: #ReportTest #test13NetTransferForAccountWithNoTransactionsShouldBeZero stamp: 'fr 11/13/2020 18:24:58'!
PASSED!

!testRun: #ReportTest #test14NetTransferForAccountWithAnOutgoingTransferShouldReflectItsValue stamp: 'fr 11/13/2020 18:24:58'!
PASSED!

!testRun: #ReportTest #test15NetTransferForAccountWithAnIncomingTransferShouldReflectItsValue stamp: 'fr 11/13/2020 18:24:58'!
PASSED!

!testRun: #ReportTest #test16NetTransferForAccountShouldNotReflectDeposits stamp: 'fr 11/13/2020 18:24:58'!
PASSED!

!testRun: #ReportTest #test17NetTransferForAccountShouldNotReflectWithdraws stamp: 'fr 11/13/2020 18:24:58'!
PASSED!

!testRun: #ReportTest #test18NetTransferForPortfolioWithNoTransactionsShouldBeZero stamp: 'fr 11/13/2020 18:24:58'!
PASSED!

!testRun: #ReportTest #test19NetTransferForPortfolioWithAnOutgoingTransferShouldReflectItsValue stamp: 'fr 11/13/2020 18:24:58'!
PASSED!

!testRun: #ReportTest #test20NetTransferForPortfolioWithAnIncomingTransferShouldReflectItsValue stamp: 'fr 11/13/2020 18:24:58'!
PASSED!

!testRun: #ReportTest #test21NetTransferForPortfolioShouldNotReflectDeposits stamp: 'fr 11/13/2020 18:24:58'!
PASSED!

!testRun: #ReportTest #test22NetTransferForPortfolioShouldNotReflectWithdraws stamp: 'fr 11/13/2020 18:24:58'!
PASSED!

!testRun: #ReportTest #test23NetTransferForPortfoliosWithPortfoliosShouldReflectOutgoingAndIncomingTransfers stamp: 'fr 11/13/2020 18:24:58'!
PASSED!

!testRun: #ReportTest #test24NetTransferForPortfoliosWithPortfoliosShouldNotRelfectDepositsOrWithdraws stamp: 'fr 11/13/2020 18:24:58'!
PASSED!

!testRun: #ReportTest #test25 stamp: 'fr 11/13/2020 18:24:58'!
PASSED!

!testRun: #ReportTest #test26 stamp: 'fr 11/13/2020 18:24:58'!
PASSED!

!testRun: #ReportTest #test27 stamp: 'fr 11/13/2020 18:24:58'!
PASSED!

TestCase subclass: #ReporterTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #ReporterTest category: 'Portfolio-Solucion' stamp: 'fr 11/13/2020 18:25:16'!
TestCase subclass: #ReporterTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classRemoval: #ReporterTest stamp: 'fr 11/13/2020 18:25:23'!
TestCase subclass: #ReporterTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

----SNAPSHOT----(13 November 2020 18:25:26) CuisUniversity-4384.image priorSource: 17477691!

Object subclass: #Reporter
	instanceVariableNames: 'account receptiveAccount report'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-ParteII-Exercise'!

!classDefinition: #Reporter category: 'Portfolio-ParteII-Exercise' stamp: 'fr 11/13/2020 18:27:53'!
Object subclass: #Reporter
	instanceVariableNames: 'account receptiveAccount report'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-ParteII-Exercise'!

Reporter subclass: #SummaryReporter
	instanceVariableNames: 'account receptiveAccount report'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-ParteII-Exercise'!

Reporter subclass: #SummaryReporter
	instanceVariableNames: 'account report'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-ParteII-Exercise'!

Object subclass: #SummaryReporter
	instanceVariableNames: 'account report'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-ParteII-Exercise'!

!classDefinition: #SummaryReporter category: 'Portfolio-ParteII-Exercise' stamp: 'fr 11/13/2020 18:28:18'!
Object subclass: #SummaryReporter
	instanceVariableNames: 'account report'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-ParteII-Exercise'!

Object subclass: #TransferNetReporter
	instanceVariableNames: 'account transferNetBalance'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-ParteII-Exercise'!

!classDefinition: #TransferNetReporter category: 'Portfolio-ParteII-Exercise' stamp: 'fr 11/13/2020 18:28:22'!
Object subclass: #TransferNetReporter
	instanceVariableNames: 'account transferNetBalance'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-ParteII-Exercise'!

!classDefinition: #SummaryReporter category: 'Portfolio-ParteII-Exercise' stamp: 'fr 11/13/2020 18:28:46'!
Object subclass: #SummaryReporter
	instanceVariableNames: 'account summaryReport'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-ParteII-Exercise'!
!SummaryReporter methodsFor: 'as yet unclassified' stamp: 'fr 11/13/2020 18:28:46' prior: 50880085!
addAccountBalance

	summaryReport add: 'Balance = ',account balance asString! !
!SummaryReporter methodsFor: 'as yet unclassified' stamp: 'fr 11/13/2020 18:28:46' prior: 50877790!
addDepositByTransferToReport: aDepositByTransfer

	summaryReport add: 'Entrada por transferencia de ',aDepositByTransfer value asString,'.'


	 ! !
!SummaryReporter methodsFor: 'as yet unclassified' stamp: 'fr 11/13/2020 18:28:46' prior: 50877782!
addWithdrawByTransferToReport: aWithdrawByTransfer

	summaryReport add: 'Salida por transferencia de ',aWithdrawByTransfer value asString,'.'

	 ! !
!SummaryReporter methodsFor: 'as yet unclassified' stamp: 'fr 11/13/2020 18:28:46' prior: 50880079!
accountSummary
	
	account buildReportWith: self.
	self addAccountBalance.
	^summaryReport! !
!SummaryReporter methodsFor: 'as yet unclassified' stamp: 'fr 11/13/2020 18:28:46' prior: 50879929!
addDepositToReport: aDeposit

	 summaryReport add: 'Dep�sito por ',aDeposit value asString,'.'! !
!SummaryReporter methodsFor: 'as yet unclassified' stamp: 'fr 11/13/2020 18:28:46' prior: 50879935!
addWithdrawToReport: aWithdraw

	 summaryReport add: 'Extracci�n por ',aWithdraw value asString,'.'! !
!SummaryReporter methodsFor: 'as yet unclassified' stamp: 'fr 11/13/2020 18:28:46' prior: 50879961!
initializeFor: aReceptiveAccount 

	summaryReport _ OrderedCollection new.
	account _ aReceptiveAccount.! !

!classDefinition: #SummaryReporter category: 'Portfolio-ParteII-Exercise' stamp: 'fr 11/13/2020 18:28:52'!
Object subclass: #SummaryReporter
	instanceVariableNames: 'account accountSummary'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-ParteII-Exercise'!
!SummaryReporter methodsFor: 'as yet unclassified' stamp: 'fr 11/13/2020 18:28:52' prior: 50881169!
addAccountBalance

	accountSummary add: 'Balance = ',account balance asString! !
!SummaryReporter methodsFor: 'as yet unclassified' stamp: 'fr 11/13/2020 18:28:52' prior: 50881175!
addDepositByTransferToReport: aDepositByTransfer

	accountSummary add: 'Entrada por transferencia de ',aDepositByTransfer value asString,'.'


	 ! !
!SummaryReporter methodsFor: 'as yet unclassified' stamp: 'fr 11/13/2020 18:28:52' prior: 50881183!
addWithdrawByTransferToReport: aWithdrawByTransfer

	accountSummary add: 'Salida por transferencia de ',aWithdrawByTransfer value asString,'.'

	 ! !
!SummaryReporter methodsFor: 'as yet unclassified' stamp: 'fr 11/13/2020 18:28:52' prior: 50881191!
accountSummary
	
	account buildReportWith: self.
	self addAccountBalance.
	^accountSummary! !
!SummaryReporter methodsFor: 'as yet unclassified' stamp: 'fr 11/13/2020 18:28:52' prior: 50881198!
addDepositToReport: aDeposit

	 accountSummary add: 'Dep�sito por ',aDeposit value asString,'.'! !
!SummaryReporter methodsFor: 'as yet unclassified' stamp: 'fr 11/13/2020 18:28:52' prior: 50881205!
addWithdrawToReport: aWithdraw

	 accountSummary add: 'Extracci�n por ',aWithdraw value asString,'.'! !
!SummaryReporter methodsFor: 'as yet unclassified' stamp: 'fr 11/13/2020 18:28:52' prior: 50881212!
initializeFor: aReceptiveAccount 

	accountSummary _ OrderedCollection new.
	account _ aReceptiveAccount.! !

Object subclass: #SummaryReporter
	instanceVariableNames: 'accountSummary'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-ParteII-Exercise'!

!classDefinition: #SummaryReporter category: 'Portfolio-ParteII-Exercise' stamp: 'fr 11/13/2020 18:29:05'!
Object subclass: #SummaryReporter
	instanceVariableNames: 'accountSummary'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-ParteII-Exercise'!

Object subclass: #TransferNetReporter
	instanceVariableNames: 'transferNetBalance'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-ParteII-Exercise'!

!classDefinition: #TransferNetReporter category: 'Portfolio-ParteII-Exercise' stamp: 'fr 11/13/2020 18:29:09'!
Object subclass: #TransferNetReporter
	instanceVariableNames: 'transferNetBalance'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-ParteII-Exercise'!

Reporter subclass: #SummaryReporter
	instanceVariableNames: 'accountSummary'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-ParteII-Exercise'!

!classDefinition: #SummaryReporter category: 'Portfolio-ParteII-Exercise' stamp: 'fr 11/13/2020 18:29:15'!
Reporter subclass: #SummaryReporter
	instanceVariableNames: 'accountSummary'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-ParteII-Exercise'!

Reporter subclass: #TransferNetReporter
	instanceVariableNames: 'transferNetBalance'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-ParteII-Exercise'!

!classDefinition: #TransferNetReporter category: 'Portfolio-ParteII-Exercise' stamp: 'fr 11/13/2020 18:29:19'!
Reporter subclass: #TransferNetReporter
	instanceVariableNames: 'transferNetBalance'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-ParteII-Exercise'!

!testRun: #ReportTest #test01AccountSummaryForAccountWithNoTransactionsShouldJustShowBalanceZero stamp: 'fr 11/13/2020 18:29:28'!
PASSED!

!testRun: #ReportTest #test02AccountSummaryShouldReflectDepositsOnAccounts stamp: 'fr 11/13/2020 18:29:28'!
PASSED!

!testRun: #ReportTest #test03AccountSummaryShouldReflectWithdrawsOnAccounts stamp: 'fr 11/13/2020 18:29:28'!
PASSED!

!testRun: #ReportTest #test04AccountSummaryShouldReflectOutgoingTransfersOnAccounts stamp: 'fr 11/13/2020 18:29:28'!
PASSED!

!testRun: #ReportTest #test05AccountSummaryShouldReflectIncomingTransfersOnAccounts stamp: 'fr 11/13/2020 18:29:28'!
PASSED!

!testRun: #ReportTest #test06AccountSummaryForPortfolioWithNoTransactionsShouldJustShowBalanceZero stamp: 'fr 11/13/2020 18:29:28'!
PASSED!

!testRun: #ReportTest #test07AccountSummaryShouldReflectDepositsOnPortfoliosWithAccounts stamp: 'fr 11/13/2020 18:29:28'!
PASSED!

!testRun: #ReportTest #test08AccountSummaryShouldReflectWithdrawsOnPortfoliosWithAccounts stamp: 'fr 11/13/2020 18:29:28'!
PASSED!

!testRun: #ReportTest #test09AccountSummaryShouldReflectOutgoingAndIncomingTransfersOnPortfoliosWithAccounts stamp: 'fr 11/13/2020 18:29:28'!
PASSED!

!testRun: #ReportTest #test10AccountSummaryShouldReflectDepositsOnPortfoliosWithPortfolios stamp: 'fr 11/13/2020 18:29:28'!
PASSED!

!testRun: #ReportTest #test11AccountSummaryShouldReflectWithdrawsOnPortfoliosWithPortfolios stamp: 'fr 11/13/2020 18:29:28'!
PASSED!

!testRun: #ReportTest #test12AccountSummaryShouldReflectOutgoingAndIncomingTransfersOnPortfoliosWithPortfolios stamp: 'fr 11/13/2020 18:29:28'!
PASSED!

!testRun: #ReportTest #test13NetTransferForAccountWithNoTransactionsShouldBeZero stamp: 'fr 11/13/2020 18:29:28'!
PASSED!

!testRun: #ReportTest #test14NetTransferForAccountWithAnOutgoingTransferShouldReflectItsValue stamp: 'fr 11/13/2020 18:29:28'!
PASSED!

!testRun: #ReportTest #test15NetTransferForAccountWithAnIncomingTransferShouldReflectItsValue stamp: 'fr 11/13/2020 18:29:28'!
PASSED!

!testRun: #ReportTest #test16NetTransferForAccountShouldNotReflectDeposits stamp: 'fr 11/13/2020 18:29:28'!
PASSED!

!testRun: #ReportTest #test17NetTransferForAccountShouldNotReflectWithdraws stamp: 'fr 11/13/2020 18:29:28'!
PASSED!

!testRun: #ReportTest #test18NetTransferForPortfolioWithNoTransactionsShouldBeZero stamp: 'fr 11/13/2020 18:29:28'!
PASSED!

!testRun: #ReportTest #test19NetTransferForPortfolioWithAnOutgoingTransferShouldReflectItsValue stamp: 'fr 11/13/2020 18:29:28'!
PASSED!

!testRun: #ReportTest #test20NetTransferForPortfolioWithAnIncomingTransferShouldReflectItsValue stamp: 'fr 11/13/2020 18:29:28'!
PASSED!

!testRun: #ReportTest #test21NetTransferForPortfolioShouldNotReflectDeposits stamp: 'fr 11/13/2020 18:29:28'!
PASSED!

!testRun: #ReportTest #test22NetTransferForPortfolioShouldNotReflectWithdraws stamp: 'fr 11/13/2020 18:29:28'!
PASSED!

!testRun: #ReportTest #test23NetTransferForPortfoliosWithPortfoliosShouldReflectOutgoingAndIncomingTransfers stamp: 'fr 11/13/2020 18:29:28'!
PASSED!

!testRun: #ReportTest #test24NetTransferForPortfoliosWithPortfoliosShouldNotRelfectDepositsOrWithdraws stamp: 'fr 11/13/2020 18:29:28'!
PASSED!

!testRun: #ReportTest #test25 stamp: 'fr 11/13/2020 18:29:28'!
PASSED!

!testRun: #ReportTest #test26 stamp: 'fr 11/13/2020 18:29:28'!
PASSED!

!testRun: #ReportTest #test27 stamp: 'fr 11/13/2020 18:29:28'!
PASSED!
!Reporter class methodsFor: 'no messages' stamp: 'fr 11/13/2020 18:29:51'!
for: aReceptiveAccount 
	
	^self new initializeFor: aReceptiveAccount ! !

!methodRemoval: SummaryReporter class #for: stamp: 'fr 11/13/2020 18:29:55'!
for: aReceptiveAccount 
	
	^self new initializeFor: aReceptiveAccount !

!methodRemoval: TransferNetReporter class #for: stamp: 'fr 11/13/2020 18:29:58'!
for: aReceptiveAccount 
	
	^self new initializeFor: aReceptiveAccount !

!testRun: #ReportTest #test01AccountSummaryForAccountWithNoTransactionsShouldJustShowBalanceZero stamp: 'fr 11/13/2020 18:30:00'!
PASSED!

!testRun: #ReportTest #test02AccountSummaryShouldReflectDepositsOnAccounts stamp: 'fr 11/13/2020 18:30:00'!
PASSED!

!testRun: #ReportTest #test03AccountSummaryShouldReflectWithdrawsOnAccounts stamp: 'fr 11/13/2020 18:30:00'!
PASSED!

!testRun: #ReportTest #test04AccountSummaryShouldReflectOutgoingTransfersOnAccounts stamp: 'fr 11/13/2020 18:30:00'!
PASSED!

!testRun: #ReportTest #test05AccountSummaryShouldReflectIncomingTransfersOnAccounts stamp: 'fr 11/13/2020 18:30:00'!
PASSED!

!testRun: #ReportTest #test06AccountSummaryForPortfolioWithNoTransactionsShouldJustShowBalanceZero stamp: 'fr 11/13/2020 18:30:00'!
PASSED!

!testRun: #ReportTest #test07AccountSummaryShouldReflectDepositsOnPortfoliosWithAccounts stamp: 'fr 11/13/2020 18:30:00'!
PASSED!

!testRun: #ReportTest #test08AccountSummaryShouldReflectWithdrawsOnPortfoliosWithAccounts stamp: 'fr 11/13/2020 18:30:00'!
PASSED!

!testRun: #ReportTest #test09AccountSummaryShouldReflectOutgoingAndIncomingTransfersOnPortfoliosWithAccounts stamp: 'fr 11/13/2020 18:30:00'!
PASSED!

!testRun: #ReportTest #test10AccountSummaryShouldReflectDepositsOnPortfoliosWithPortfolios stamp: 'fr 11/13/2020 18:30:00'!
PASSED!

!testRun: #ReportTest #test11AccountSummaryShouldReflectWithdrawsOnPortfoliosWithPortfolios stamp: 'fr 11/13/2020 18:30:00'!
PASSED!

!testRun: #ReportTest #test12AccountSummaryShouldReflectOutgoingAndIncomingTransfersOnPortfoliosWithPortfolios stamp: 'fr 11/13/2020 18:30:00'!
PASSED!

!testRun: #ReportTest #test13NetTransferForAccountWithNoTransactionsShouldBeZero stamp: 'fr 11/13/2020 18:30:00'!
PASSED!

!testRun: #ReportTest #test14NetTransferForAccountWithAnOutgoingTransferShouldReflectItsValue stamp: 'fr 11/13/2020 18:30:00'!
PASSED!

!testRun: #ReportTest #test15NetTransferForAccountWithAnIncomingTransferShouldReflectItsValue stamp: 'fr 11/13/2020 18:30:00'!
PASSED!

!testRun: #ReportTest #test16NetTransferForAccountShouldNotReflectDeposits stamp: 'fr 11/13/2020 18:30:00'!
PASSED!

!testRun: #ReportTest #test17NetTransferForAccountShouldNotReflectWithdraws stamp: 'fr 11/13/2020 18:30:00'!
PASSED!

!testRun: #ReportTest #test18NetTransferForPortfolioWithNoTransactionsShouldBeZero stamp: 'fr 11/13/2020 18:30:00'!
PASSED!

!testRun: #ReportTest #test19NetTransferForPortfolioWithAnOutgoingTransferShouldReflectItsValue stamp: 'fr 11/13/2020 18:30:00'!
PASSED!

!testRun: #ReportTest #test20NetTransferForPortfolioWithAnIncomingTransferShouldReflectItsValue stamp: 'fr 11/13/2020 18:30:00'!
PASSED!

!testRun: #ReportTest #test21NetTransferForPortfolioShouldNotReflectDeposits stamp: 'fr 11/13/2020 18:30:00'!
PASSED!

!testRun: #ReportTest #test22NetTransferForPortfolioShouldNotReflectWithdraws stamp: 'fr 11/13/2020 18:30:00'!
PASSED!

!testRun: #ReportTest #test23NetTransferForPortfoliosWithPortfoliosShouldReflectOutgoingAndIncomingTransfers stamp: 'fr 11/13/2020 18:30:00'!
PASSED!

!testRun: #ReportTest #test24NetTransferForPortfoliosWithPortfoliosShouldNotRelfectDepositsOrWithdraws stamp: 'fr 11/13/2020 18:30:00'!
PASSED!

!testRun: #ReportTest #test25 stamp: 'fr 11/13/2020 18:30:00'!
PASSED!

!testRun: #ReportTest #test26 stamp: 'fr 11/13/2020 18:30:00'!
PASSED!

!testRun: #ReportTest #test27 stamp: 'fr 11/13/2020 18:30:00'!
PASSED!
!ReportTest methodsFor: 'tests - net transfer' stamp: 'fr 11/13/2020 18:31:57' prior: 50880236!
test13NetTransferForAccountWithNoTransactionsShouldBeZero

	| account reporter |
	
	account _ ReceptiveAccount new.
	reporter _ 	TransferNetReporter for: account .

	self assert: [reporter transferNet = 0]! !

!testRun: #ReportTest #test13NetTransferForAccountWithNoTransactionsShouldBeZero stamp: 'fr 11/13/2020 18:31:59'!
PASSED!

!testRun: #ReportTest #test01AccountSummaryForAccountWithNoTransactionsShouldJustShowBalanceZero stamp: 'fr 11/13/2020 18:31:59'!
PASSED!

!testRun: #ReportTest #test02AccountSummaryShouldReflectDepositsOnAccounts stamp: 'fr 11/13/2020 18:31:59'!
PASSED!

!testRun: #ReportTest #test03AccountSummaryShouldReflectWithdrawsOnAccounts stamp: 'fr 11/13/2020 18:31:59'!
PASSED!

!testRun: #ReportTest #test04AccountSummaryShouldReflectOutgoingTransfersOnAccounts stamp: 'fr 11/13/2020 18:31:59'!
PASSED!

!testRun: #ReportTest #test05AccountSummaryShouldReflectIncomingTransfersOnAccounts stamp: 'fr 11/13/2020 18:31:59'!
PASSED!

!testRun: #ReportTest #test06AccountSummaryForPortfolioWithNoTransactionsShouldJustShowBalanceZero stamp: 'fr 11/13/2020 18:31:59'!
PASSED!

!testRun: #ReportTest #test07AccountSummaryShouldReflectDepositsOnPortfoliosWithAccounts stamp: 'fr 11/13/2020 18:31:59'!
PASSED!

!testRun: #ReportTest #test08AccountSummaryShouldReflectWithdrawsOnPortfoliosWithAccounts stamp: 'fr 11/13/2020 18:31:59'!
PASSED!

!testRun: #ReportTest #test09AccountSummaryShouldReflectOutgoingAndIncomingTransfersOnPortfoliosWithAccounts stamp: 'fr 11/13/2020 18:31:59'!
PASSED!

!testRun: #ReportTest #test10AccountSummaryShouldReflectDepositsOnPortfoliosWithPortfolios stamp: 'fr 11/13/2020 18:31:59'!
PASSED!

!testRun: #ReportTest #test11AccountSummaryShouldReflectWithdrawsOnPortfoliosWithPortfolios stamp: 'fr 11/13/2020 18:31:59'!
PASSED!

!testRun: #ReportTest #test12AccountSummaryShouldReflectOutgoingAndIncomingTransfersOnPortfoliosWithPortfolios stamp: 'fr 11/13/2020 18:31:59'!
PASSED!

!testRun: #ReportTest #test13NetTransferForAccountWithNoTransactionsShouldBeZero stamp: 'fr 11/13/2020 18:31:59'!
PASSED!

!testRun: #ReportTest #test14NetTransferForAccountWithAnOutgoingTransferShouldReflectItsValue stamp: 'fr 11/13/2020 18:31:59'!
PASSED!

!testRun: #ReportTest #test15NetTransferForAccountWithAnIncomingTransferShouldReflectItsValue stamp: 'fr 11/13/2020 18:31:59'!
PASSED!

!testRun: #ReportTest #test16NetTransferForAccountShouldNotReflectDeposits stamp: 'fr 11/13/2020 18:31:59'!
PASSED!

!testRun: #ReportTest #test17NetTransferForAccountShouldNotReflectWithdraws stamp: 'fr 11/13/2020 18:31:59'!
PASSED!

!testRun: #ReportTest #test18NetTransferForPortfolioWithNoTransactionsShouldBeZero stamp: 'fr 11/13/2020 18:31:59'!
PASSED!

!testRun: #ReportTest #test19NetTransferForPortfolioWithAnOutgoingTransferShouldReflectItsValue stamp: 'fr 11/13/2020 18:31:59'!
PASSED!

!testRun: #ReportTest #test20NetTransferForPortfolioWithAnIncomingTransferShouldReflectItsValue stamp: 'fr 11/13/2020 18:31:59'!
PASSED!

!testRun: #ReportTest #test21NetTransferForPortfolioShouldNotReflectDeposits stamp: 'fr 11/13/2020 18:31:59'!
PASSED!

!testRun: #ReportTest #test22NetTransferForPortfolioShouldNotReflectWithdraws stamp: 'fr 11/13/2020 18:31:59'!
PASSED!

!testRun: #ReportTest #test23NetTransferForPortfoliosWithPortfoliosShouldReflectOutgoingAndIncomingTransfers stamp: 'fr 11/13/2020 18:31:59'!
PASSED!

!testRun: #ReportTest #test24NetTransferForPortfoliosWithPortfoliosShouldNotRelfectDepositsOrWithdraws stamp: 'fr 11/13/2020 18:31:59'!
PASSED!

!testRun: #ReportTest #test25 stamp: 'fr 11/13/2020 18:31:59'!
PASSED!

!testRun: #ReportTest #test26 stamp: 'fr 11/13/2020 18:31:59'!
PASSED!

!testRun: #ReportTest #test27 stamp: 'fr 11/13/2020 18:31:59'!
PASSED!
!ReportTest methodsFor: 'tests - net transfer' stamp: 'fr 11/13/2020 18:32:17' prior: 50880256!
test14NetTransferForAccountWithAnOutgoingTransferShouldReflectItsValue

	| account anotherAccount reporter |
	
	account _ ReceptiveAccount new.
	anotherAccount _ ReceptiveAccount new.
	reporter _ 	TransferNetReporter for: account .
	
	Transfer move: 100 from: account to: anotherAccount.
	
	self assert: [reporter transferNet = -100]! !
!ReportTest methodsFor: 'tests - net transfer' stamp: 'fr 11/13/2020 18:32:30' prior: 50880244!
test15NetTransferForAccountWithAnIncomingTransferShouldReflectItsValue

	| account anotherAccount reporter |
	
	account _ ReceptiveAccount new.
	anotherAccount _ ReceptiveAccount new.
	reporter _ 	TransferNetReporter for: account .
	
	Transfer move: 100 from: anotherAccount to: account.
	
	self assert: [reporter transferNet = 100]! !

!testRun: #ReportTest #test15NetTransferForAccountWithAnIncomingTransferShouldReflectItsValue stamp: 'fr 11/13/2020 18:32:32'!
PASSED!

!testRun: #ReportTest #test01AccountSummaryForAccountWithNoTransactionsShouldJustShowBalanceZero stamp: 'fr 11/13/2020 18:32:32'!
PASSED!

!testRun: #ReportTest #test02AccountSummaryShouldReflectDepositsOnAccounts stamp: 'fr 11/13/2020 18:32:32'!
PASSED!

!testRun: #ReportTest #test03AccountSummaryShouldReflectWithdrawsOnAccounts stamp: 'fr 11/13/2020 18:32:32'!
PASSED!

!testRun: #ReportTest #test04AccountSummaryShouldReflectOutgoingTransfersOnAccounts stamp: 'fr 11/13/2020 18:32:32'!
PASSED!

!testRun: #ReportTest #test05AccountSummaryShouldReflectIncomingTransfersOnAccounts stamp: 'fr 11/13/2020 18:32:32'!
PASSED!

!testRun: #ReportTest #test06AccountSummaryForPortfolioWithNoTransactionsShouldJustShowBalanceZero stamp: 'fr 11/13/2020 18:32:32'!
PASSED!

!testRun: #ReportTest #test07AccountSummaryShouldReflectDepositsOnPortfoliosWithAccounts stamp: 'fr 11/13/2020 18:32:32'!
PASSED!

!testRun: #ReportTest #test08AccountSummaryShouldReflectWithdrawsOnPortfoliosWithAccounts stamp: 'fr 11/13/2020 18:32:32'!
PASSED!

!testRun: #ReportTest #test09AccountSummaryShouldReflectOutgoingAndIncomingTransfersOnPortfoliosWithAccounts stamp: 'fr 11/13/2020 18:32:32'!
PASSED!

!testRun: #ReportTest #test10AccountSummaryShouldReflectDepositsOnPortfoliosWithPortfolios stamp: 'fr 11/13/2020 18:32:32'!
PASSED!

!testRun: #ReportTest #test11AccountSummaryShouldReflectWithdrawsOnPortfoliosWithPortfolios stamp: 'fr 11/13/2020 18:32:32'!
PASSED!

!testRun: #ReportTest #test12AccountSummaryShouldReflectOutgoingAndIncomingTransfersOnPortfoliosWithPortfolios stamp: 'fr 11/13/2020 18:32:32'!
PASSED!

!testRun: #ReportTest #test13NetTransferForAccountWithNoTransactionsShouldBeZero stamp: 'fr 11/13/2020 18:32:32'!
PASSED!

!testRun: #ReportTest #test14NetTransferForAccountWithAnOutgoingTransferShouldReflectItsValue stamp: 'fr 11/13/2020 18:32:32'!
PASSED!

!testRun: #ReportTest #test15NetTransferForAccountWithAnIncomingTransferShouldReflectItsValue stamp: 'fr 11/13/2020 18:32:32'!
PASSED!

!testRun: #ReportTest #test16NetTransferForAccountShouldNotReflectDeposits stamp: 'fr 11/13/2020 18:32:32'!
PASSED!

!testRun: #ReportTest #test17NetTransferForAccountShouldNotReflectWithdraws stamp: 'fr 11/13/2020 18:32:32'!
PASSED!

!testRun: #ReportTest #test18NetTransferForPortfolioWithNoTransactionsShouldBeZero stamp: 'fr 11/13/2020 18:32:32'!
PASSED!

!testRun: #ReportTest #test19NetTransferForPortfolioWithAnOutgoingTransferShouldReflectItsValue stamp: 'fr 11/13/2020 18:32:32'!
PASSED!

!testRun: #ReportTest #test20NetTransferForPortfolioWithAnIncomingTransferShouldReflectItsValue stamp: 'fr 11/13/2020 18:32:32'!
PASSED!

!testRun: #ReportTest #test21NetTransferForPortfolioShouldNotReflectDeposits stamp: 'fr 11/13/2020 18:32:32'!
PASSED!

!testRun: #ReportTest #test22NetTransferForPortfolioShouldNotReflectWithdraws stamp: 'fr 11/13/2020 18:32:32'!
PASSED!

!testRun: #ReportTest #test23NetTransferForPortfoliosWithPortfoliosShouldReflectOutgoingAndIncomingTransfers stamp: 'fr 11/13/2020 18:32:32'!
PASSED!

!testRun: #ReportTest #test24NetTransferForPortfoliosWithPortfoliosShouldNotRelfectDepositsOrWithdraws stamp: 'fr 11/13/2020 18:32:32'!
PASSED!

!testRun: #ReportTest #test25 stamp: 'fr 11/13/2020 18:32:32'!
PASSED!

!testRun: #ReportTest #test26 stamp: 'fr 11/13/2020 18:32:32'!
PASSED!

!testRun: #ReportTest #test27 stamp: 'fr 11/13/2020 18:32:32'!
PASSED!
!ReportTest methodsFor: 'tests - net transfer' stamp: 'fr 11/13/2020 18:32:41' prior: 50880268!
test16NetTransferForAccountShouldNotReflectDeposits

	| account reporter |
	
	account _ ReceptiveAccount new.
	reporter _ 	TransferNetReporter for: account .
	
	Deposit register: 100 on: account. 
		
	self assert: [reporter transferNet = 0]! !
!ReportTest methodsFor: 'tests - net transfer' stamp: 'fr 11/13/2020 18:32:51' prior: 50880277!
test17NetTransferForAccountShouldNotReflectWithdraws

	| account reporter |
	
	account _ ReceptiveAccount new.
	reporter _ 	TransferNetReporter for: account .

	Withdraw register: 100 on: account. 
		
	self assert: [reporter transferNet = 0]! !
!ReportTest methodsFor: 'tests - net transfer' stamp: 'fr 11/13/2020 18:33:07' prior: 50880301!
test18NetTransferForPortfolioWithNoTransactionsShouldBeZero

	| portfolio reporter |
	
	portfolio _ Portfolio new.
	reporter _ 	TransferNetReporter for: portfolio .

	self assert: [reporter transferNet = 0]! !
!ReportTest methodsFor: 'tests - net transfer' stamp: 'fr 11/13/2020 18:33:29' prior: 50880349!
test19NetTransferForPortfolioWithAnOutgoingTransferShouldReflectItsValue

	| portfolio account anotherAccount reporter |
	
	account _ ReceptiveAccount new.
	anotherAccount _ ReceptiveAccount new.
	portfolio _ Portfolio with: account.
	reporter _ TransferNetReporter for: portfolio.

	Transfer move: 10 from: account to: anotherAccount.
			
	self assert: [reporter transferNet = -10]! !
!ReportTest methodsFor: 'tests - net transfer' stamp: 'fr 11/13/2020 18:33:45' prior: 50880309!
test20NetTransferForPortfolioWithAnIncomingTransferShouldReflectItsValue

	| portfolio account anotherAccount reporter |
	
	account _ ReceptiveAccount new.
	anotherAccount _ ReceptiveAccount new.
	portfolio _ Portfolio with: account.
	reporter _ TransferNetReporter for: portfolio.
	
	Transfer move: 10 from: anotherAccount to: account.
			
	self assert: [reporter transferNet = 10]! !
!ReportTest methodsFor: 'tests - net transfer' stamp: 'fr 11/13/2020 18:33:57' prior: 50880338!
test21NetTransferForPortfolioShouldNotReflectDeposits

	| portfolio account reporter |
	
	account _ ReceptiveAccount new.
	portfolio _ Portfolio with: account.
	reporter _ TransferNetReporter for: portfolio.
	
	Deposit register: 100 on: account. 
			
	self assert: [reporter transferNet = 0]! !

!testRun: #ReportTest #test21NetTransferForPortfolioShouldNotReflectDeposits stamp: 'fr 11/13/2020 18:34:02'!
PASSED!

!testRun: #ReportTest #test01AccountSummaryForAccountWithNoTransactionsShouldJustShowBalanceZero stamp: 'fr 11/13/2020 18:34:02'!
PASSED!

!testRun: #ReportTest #test02AccountSummaryShouldReflectDepositsOnAccounts stamp: 'fr 11/13/2020 18:34:02'!
PASSED!

!testRun: #ReportTest #test03AccountSummaryShouldReflectWithdrawsOnAccounts stamp: 'fr 11/13/2020 18:34:02'!
PASSED!

!testRun: #ReportTest #test04AccountSummaryShouldReflectOutgoingTransfersOnAccounts stamp: 'fr 11/13/2020 18:34:02'!
PASSED!

!testRun: #ReportTest #test05AccountSummaryShouldReflectIncomingTransfersOnAccounts stamp: 'fr 11/13/2020 18:34:02'!
PASSED!

!testRun: #ReportTest #test06AccountSummaryForPortfolioWithNoTransactionsShouldJustShowBalanceZero stamp: 'fr 11/13/2020 18:34:02'!
PASSED!

!testRun: #ReportTest #test07AccountSummaryShouldReflectDepositsOnPortfoliosWithAccounts stamp: 'fr 11/13/2020 18:34:02'!
PASSED!

!testRun: #ReportTest #test08AccountSummaryShouldReflectWithdrawsOnPortfoliosWithAccounts stamp: 'fr 11/13/2020 18:34:02'!
PASSED!

!testRun: #ReportTest #test09AccountSummaryShouldReflectOutgoingAndIncomingTransfersOnPortfoliosWithAccounts stamp: 'fr 11/13/2020 18:34:02'!
PASSED!

!testRun: #ReportTest #test10AccountSummaryShouldReflectDepositsOnPortfoliosWithPortfolios stamp: 'fr 11/13/2020 18:34:02'!
PASSED!

!testRun: #ReportTest #test11AccountSummaryShouldReflectWithdrawsOnPortfoliosWithPortfolios stamp: 'fr 11/13/2020 18:34:02'!
PASSED!

!testRun: #ReportTest #test12AccountSummaryShouldReflectOutgoingAndIncomingTransfersOnPortfoliosWithPortfolios stamp: 'fr 11/13/2020 18:34:02'!
PASSED!

!testRun: #ReportTest #test13NetTransferForAccountWithNoTransactionsShouldBeZero stamp: 'fr 11/13/2020 18:34:02'!
PASSED!

!testRun: #ReportTest #test14NetTransferForAccountWithAnOutgoingTransferShouldReflectItsValue stamp: 'fr 11/13/2020 18:34:02'!
PASSED!

!testRun: #ReportTest #test15NetTransferForAccountWithAnIncomingTransferShouldReflectItsValue stamp: 'fr 11/13/2020 18:34:02'!
PASSED!

!testRun: #ReportTest #test16NetTransferForAccountShouldNotReflectDeposits stamp: 'fr 11/13/2020 18:34:02'!
PASSED!

!testRun: #ReportTest #test17NetTransferForAccountShouldNotReflectWithdraws stamp: 'fr 11/13/2020 18:34:02'!
PASSED!

!testRun: #ReportTest #test18NetTransferForPortfolioWithNoTransactionsShouldBeZero stamp: 'fr 11/13/2020 18:34:02'!
PASSED!

!testRun: #ReportTest #test19NetTransferForPortfolioWithAnOutgoingTransferShouldReflectItsValue stamp: 'fr 11/13/2020 18:34:02'!
PASSED!

!testRun: #ReportTest #test20NetTransferForPortfolioWithAnIncomingTransferShouldReflectItsValue stamp: 'fr 11/13/2020 18:34:02'!
PASSED!

!testRun: #ReportTest #test21NetTransferForPortfolioShouldNotReflectDeposits stamp: 'fr 11/13/2020 18:34:02'!
PASSED!

!testRun: #ReportTest #test22NetTransferForPortfolioShouldNotReflectWithdraws stamp: 'fr 11/13/2020 18:34:02'!
PASSED!

!testRun: #ReportTest #test23NetTransferForPortfoliosWithPortfoliosShouldReflectOutgoingAndIncomingTransfers stamp: 'fr 11/13/2020 18:34:02'!
PASSED!

!testRun: #ReportTest #test24NetTransferForPortfoliosWithPortfoliosShouldNotRelfectDepositsOrWithdraws stamp: 'fr 11/13/2020 18:34:02'!
PASSED!

!testRun: #ReportTest #test25 stamp: 'fr 11/13/2020 18:34:02'!
PASSED!

!testRun: #ReportTest #test26 stamp: 'fr 11/13/2020 18:34:02'!
PASSED!

!testRun: #ReportTest #test27 stamp: 'fr 11/13/2020 18:34:02'!
PASSED!
!ReportTest methodsFor: 'tests - net transfer' stamp: 'fr 11/13/2020 18:34:26' prior: 50880363!
test22NetTransferForPortfolioShouldNotReflectWithdraws

	| portfolio account reporter |
	
	account _ ReceptiveAccount new.
	portfolio _ Portfolio with: account.
	reporter _ TransferNetReporter for: portfolio.
	
	Withdraw register: 100 on: account. 
			
	self assert: [reporter transferNet = 0]! !
!ReportTest methodsFor: 'tests - net transfer' stamp: 'fr 11/13/2020 18:34:51' prior: 50880374!
test23NetTransferForPortfoliosWithPortfoliosShouldReflectOutgoingAndIncomingTransfers

	| portfolio account anotherPortfolio anotherAccount reporter |
	
	account _ ReceptiveAccount new.
	anotherAccount _ ReceptiveAccount new.
	portfolio _ Portfolio with: account.
	anotherPortfolio _ Portfolio with: portfolio.
	reporter _ TransferNetReporter for: anotherPortfolio.

	Transfer 	move: 30 from: anotherAccount to: account. 
	Transfer 	move: 10 from: account to: anotherAccount. 	
				
	self assert: [reporter transferNet = 20]! !

!testRun: #ReportTest #test23NetTransferForPortfoliosWithPortfoliosShouldReflectOutgoingAndIncomingTransfers stamp: 'fr 11/13/2020 18:34:54'!
PASSED!

!testRun: #ReportTest #test01AccountSummaryForAccountWithNoTransactionsShouldJustShowBalanceZero stamp: 'fr 11/13/2020 18:34:54'!
PASSED!

!testRun: #ReportTest #test02AccountSummaryShouldReflectDepositsOnAccounts stamp: 'fr 11/13/2020 18:34:54'!
PASSED!

!testRun: #ReportTest #test03AccountSummaryShouldReflectWithdrawsOnAccounts stamp: 'fr 11/13/2020 18:34:54'!
PASSED!

!testRun: #ReportTest #test04AccountSummaryShouldReflectOutgoingTransfersOnAccounts stamp: 'fr 11/13/2020 18:34:54'!
PASSED!

!testRun: #ReportTest #test05AccountSummaryShouldReflectIncomingTransfersOnAccounts stamp: 'fr 11/13/2020 18:34:54'!
PASSED!

!testRun: #ReportTest #test06AccountSummaryForPortfolioWithNoTransactionsShouldJustShowBalanceZero stamp: 'fr 11/13/2020 18:34:54'!
PASSED!

!testRun: #ReportTest #test07AccountSummaryShouldReflectDepositsOnPortfoliosWithAccounts stamp: 'fr 11/13/2020 18:34:54'!
PASSED!

!testRun: #ReportTest #test08AccountSummaryShouldReflectWithdrawsOnPortfoliosWithAccounts stamp: 'fr 11/13/2020 18:34:54'!
PASSED!

!testRun: #ReportTest #test09AccountSummaryShouldReflectOutgoingAndIncomingTransfersOnPortfoliosWithAccounts stamp: 'fr 11/13/2020 18:34:54'!
PASSED!

!testRun: #ReportTest #test10AccountSummaryShouldReflectDepositsOnPortfoliosWithPortfolios stamp: 'fr 11/13/2020 18:34:54'!
PASSED!

!testRun: #ReportTest #test11AccountSummaryShouldReflectWithdrawsOnPortfoliosWithPortfolios stamp: 'fr 11/13/2020 18:34:54'!
PASSED!

!testRun: #ReportTest #test12AccountSummaryShouldReflectOutgoingAndIncomingTransfersOnPortfoliosWithPortfolios stamp: 'fr 11/13/2020 18:34:54'!
PASSED!

!testRun: #ReportTest #test13NetTransferForAccountWithNoTransactionsShouldBeZero stamp: 'fr 11/13/2020 18:34:54'!
PASSED!

!testRun: #ReportTest #test14NetTransferForAccountWithAnOutgoingTransferShouldReflectItsValue stamp: 'fr 11/13/2020 18:34:54'!
PASSED!

!testRun: #ReportTest #test15NetTransferForAccountWithAnIncomingTransferShouldReflectItsValue stamp: 'fr 11/13/2020 18:34:54'!
PASSED!

!testRun: #ReportTest #test16NetTransferForAccountShouldNotReflectDeposits stamp: 'fr 11/13/2020 18:34:54'!
PASSED!

!testRun: #ReportTest #test17NetTransferForAccountShouldNotReflectWithdraws stamp: 'fr 11/13/2020 18:34:54'!
PASSED!

!testRun: #ReportTest #test18NetTransferForPortfolioWithNoTransactionsShouldBeZero stamp: 'fr 11/13/2020 18:34:54'!
PASSED!

!testRun: #ReportTest #test19NetTransferForPortfolioWithAnOutgoingTransferShouldReflectItsValue stamp: 'fr 11/13/2020 18:34:54'!
PASSED!

!testRun: #ReportTest #test20NetTransferForPortfolioWithAnIncomingTransferShouldReflectItsValue stamp: 'fr 11/13/2020 18:34:54'!
PASSED!

!testRun: #ReportTest #test21NetTransferForPortfolioShouldNotReflectDeposits stamp: 'fr 11/13/2020 18:34:54'!
PASSED!

!testRun: #ReportTest #test22NetTransferForPortfolioShouldNotReflectWithdraws stamp: 'fr 11/13/2020 18:34:54'!
PASSED!

!testRun: #ReportTest #test23NetTransferForPortfoliosWithPortfoliosShouldReflectOutgoingAndIncomingTransfers stamp: 'fr 11/13/2020 18:34:54'!
PASSED!

!testRun: #ReportTest #test24NetTransferForPortfoliosWithPortfoliosShouldNotRelfectDepositsOrWithdraws stamp: 'fr 11/13/2020 18:34:54'!
PASSED!

!testRun: #ReportTest #test25 stamp: 'fr 11/13/2020 18:34:54'!
PASSED!

!testRun: #ReportTest #test26 stamp: 'fr 11/13/2020 18:34:54'!
PASSED!

!testRun: #ReportTest #test27 stamp: 'fr 11/13/2020 18:34:54'!
PASSED!
!ReportTest methodsFor: 'tests - net transfer' stamp: 'fr 11/13/2020 18:35:07' prior: 50880323!
test24NetTransferForPortfoliosWithPortfoliosShouldNotRelfectDepositsOrWithdraws

	| portfolio account anotherPortfolio reporter |
		
	account _ ReceptiveAccount new.
	portfolio _ Portfolio with: account.
	anotherPortfolio _ Portfolio with: portfolio.
	reporter _ TransferNetReporter for: anotherPortfolio.
	
	Deposit register: 100 on: account.
	Withdraw register: 50 on: account.
				
	self assert: [reporter transferNet = 0]! !

!testRun: #ReportTest #test24NetTransferForPortfoliosWithPortfoliosShouldNotRelfectDepositsOrWithdraws stamp: 'fr 11/13/2020 18:35:11'!
PASSED!

!testRun: #ReportTest #test01AccountSummaryForAccountWithNoTransactionsShouldJustShowBalanceZero stamp: 'fr 11/13/2020 18:35:11'!
PASSED!

!testRun: #ReportTest #test02AccountSummaryShouldReflectDepositsOnAccounts stamp: 'fr 11/13/2020 18:35:11'!
PASSED!

!testRun: #ReportTest #test03AccountSummaryShouldReflectWithdrawsOnAccounts stamp: 'fr 11/13/2020 18:35:11'!
PASSED!

!testRun: #ReportTest #test04AccountSummaryShouldReflectOutgoingTransfersOnAccounts stamp: 'fr 11/13/2020 18:35:11'!
PASSED!

!testRun: #ReportTest #test05AccountSummaryShouldReflectIncomingTransfersOnAccounts stamp: 'fr 11/13/2020 18:35:11'!
PASSED!

!testRun: #ReportTest #test06AccountSummaryForPortfolioWithNoTransactionsShouldJustShowBalanceZero stamp: 'fr 11/13/2020 18:35:11'!
PASSED!

!testRun: #ReportTest #test07AccountSummaryShouldReflectDepositsOnPortfoliosWithAccounts stamp: 'fr 11/13/2020 18:35:11'!
PASSED!

!testRun: #ReportTest #test08AccountSummaryShouldReflectWithdrawsOnPortfoliosWithAccounts stamp: 'fr 11/13/2020 18:35:11'!
PASSED!

!testRun: #ReportTest #test09AccountSummaryShouldReflectOutgoingAndIncomingTransfersOnPortfoliosWithAccounts stamp: 'fr 11/13/2020 18:35:11'!
PASSED!

!testRun: #ReportTest #test10AccountSummaryShouldReflectDepositsOnPortfoliosWithPortfolios stamp: 'fr 11/13/2020 18:35:11'!
PASSED!

!testRun: #ReportTest #test11AccountSummaryShouldReflectWithdrawsOnPortfoliosWithPortfolios stamp: 'fr 11/13/2020 18:35:11'!
PASSED!

!testRun: #ReportTest #test12AccountSummaryShouldReflectOutgoingAndIncomingTransfersOnPortfoliosWithPortfolios stamp: 'fr 11/13/2020 18:35:11'!
PASSED!

!testRun: #ReportTest #test13NetTransferForAccountWithNoTransactionsShouldBeZero stamp: 'fr 11/13/2020 18:35:11'!
PASSED!

!testRun: #ReportTest #test14NetTransferForAccountWithAnOutgoingTransferShouldReflectItsValue stamp: 'fr 11/13/2020 18:35:11'!
PASSED!

!testRun: #ReportTest #test15NetTransferForAccountWithAnIncomingTransferShouldReflectItsValue stamp: 'fr 11/13/2020 18:35:11'!
PASSED!

!testRun: #ReportTest #test16NetTransferForAccountShouldNotReflectDeposits stamp: 'fr 11/13/2020 18:35:11'!
PASSED!

!testRun: #ReportTest #test17NetTransferForAccountShouldNotReflectWithdraws stamp: 'fr 11/13/2020 18:35:11'!
PASSED!

!testRun: #ReportTest #test18NetTransferForPortfolioWithNoTransactionsShouldBeZero stamp: 'fr 11/13/2020 18:35:11'!
PASSED!

!testRun: #ReportTest #test19NetTransferForPortfolioWithAnOutgoingTransferShouldReflectItsValue stamp: 'fr 11/13/2020 18:35:11'!
PASSED!

!testRun: #ReportTest #test20NetTransferForPortfolioWithAnIncomingTransferShouldReflectItsValue stamp: 'fr 11/13/2020 18:35:11'!
PASSED!

!testRun: #ReportTest #test21NetTransferForPortfolioShouldNotReflectDeposits stamp: 'fr 11/13/2020 18:35:11'!
PASSED!

!testRun: #ReportTest #test22NetTransferForPortfolioShouldNotReflectWithdraws stamp: 'fr 11/13/2020 18:35:11'!
PASSED!

!testRun: #ReportTest #test23NetTransferForPortfoliosWithPortfoliosShouldReflectOutgoingAndIncomingTransfers stamp: 'fr 11/13/2020 18:35:11'!
PASSED!

!testRun: #ReportTest #test24NetTransferForPortfoliosWithPortfoliosShouldNotRelfectDepositsOrWithdraws stamp: 'fr 11/13/2020 18:35:11'!
PASSED!

!testRun: #ReportTest #test25 stamp: 'fr 11/13/2020 18:35:11'!
PASSED!

!testRun: #ReportTest #test26 stamp: 'fr 11/13/2020 18:35:11'!
PASSED!

!testRun: #ReportTest #test27 stamp: 'fr 11/13/2020 18:35:11'!
PASSED!

!methodRemoval: ReceptiveAccount #transferNet stamp: 'fr 11/13/2020 18:35:17'!
transferNet
	
	| reporter |
	reporter _ 	TransferNetReporter for: self.
	^reporter transferNet.!

!methodRemoval: Portfolio #transferNet stamp: 'fr 11/13/2020 18:35:22'!
transferNet
	
	| reporter |
	reporter _ 	TransferNetReporter for: self.
	^reporter transferNet.!

----SNAPSHOT----(13 November 2020 18:36:28) CuisUniversity-4384.image priorSource: 17582489!

!methodRemoval: ReceptiveAccount #transactionsForNetTransferBalance stamp: 'fr 11/13/2020 18:38:11'!
transactionsForNetTransferBalance

	^transactions 
		select: [:aTransaction | 
				(aTransaction isMemberOf: WithdrawByTransference) 
				or: [aTransaction isMemberOf: DepositByTransference]
			   ]!
!ReportTest methodsFor: 'tests - tree structure' stamp: 'fr 11/13/2020 18:42:27' prior: 50877151!
test25

	| portfolio |
	portfolio _ Portfolio named: 'Portfolio de la familia'.
	
	self assert: [portfolio treeStructure = (OrderedCollection with: 'Portfolio de la familia')]! !

!testRun: #ReportTest #test25 stamp: 'fr 11/13/2020 18:42:29'!
FAILURE!

portfolio treeStructure!
!Portfolio methodsFor: 'report' stamp: 'fr 11/13/2020 18:47:41' prior: 50876919!
treeStructure
	
	
	| tree |	
	tree _ OrderedCollection new.
	self collectTreeInto: tree withIndentation: 0.
		
	^tree! !

!testRun: #ReportTest #test01AccountSummaryForAccountWithNoTransactionsShouldJustShowBalanceZero stamp: 'fr 11/13/2020 18:47:44'!
PASSED!

!testRun: #ReportTest #test02AccountSummaryShouldReflectDepositsOnAccounts stamp: 'fr 11/13/2020 18:47:44'!
PASSED!

!testRun: #ReportTest #test03AccountSummaryShouldReflectWithdrawsOnAccounts stamp: 'fr 11/13/2020 18:47:44'!
PASSED!

!testRun: #ReportTest #test04AccountSummaryShouldReflectOutgoingTransfersOnAccounts stamp: 'fr 11/13/2020 18:47:44'!
PASSED!

!testRun: #ReportTest #test05AccountSummaryShouldReflectIncomingTransfersOnAccounts stamp: 'fr 11/13/2020 18:47:44'!
PASSED!

!testRun: #ReportTest #test06AccountSummaryForPortfolioWithNoTransactionsShouldJustShowBalanceZero stamp: 'fr 11/13/2020 18:47:44'!
PASSED!

!testRun: #ReportTest #test07AccountSummaryShouldReflectDepositsOnPortfoliosWithAccounts stamp: 'fr 11/13/2020 18:47:44'!
PASSED!

!testRun: #ReportTest #test08AccountSummaryShouldReflectWithdrawsOnPortfoliosWithAccounts stamp: 'fr 11/13/2020 18:47:44'!
PASSED!

!testRun: #ReportTest #test09AccountSummaryShouldReflectOutgoingAndIncomingTransfersOnPortfoliosWithAccounts stamp: 'fr 11/13/2020 18:47:44'!
PASSED!

!testRun: #ReportTest #test10AccountSummaryShouldReflectDepositsOnPortfoliosWithPortfolios stamp: 'fr 11/13/2020 18:47:44'!
PASSED!

!testRun: #ReportTest #test11AccountSummaryShouldReflectWithdrawsOnPortfoliosWithPortfolios stamp: 'fr 11/13/2020 18:47:44'!
PASSED!

!testRun: #ReportTest #test12AccountSummaryShouldReflectOutgoingAndIncomingTransfersOnPortfoliosWithPortfolios stamp: 'fr 11/13/2020 18:47:44'!
PASSED!

!testRun: #ReportTest #test13NetTransferForAccountWithNoTransactionsShouldBeZero stamp: 'fr 11/13/2020 18:47:44'!
PASSED!

!testRun: #ReportTest #test14NetTransferForAccountWithAnOutgoingTransferShouldReflectItsValue stamp: 'fr 11/13/2020 18:47:44'!
PASSED!

!testRun: #ReportTest #test15NetTransferForAccountWithAnIncomingTransferShouldReflectItsValue stamp: 'fr 11/13/2020 18:47:44'!
PASSED!

!testRun: #ReportTest #test16NetTransferForAccountShouldNotReflectDeposits stamp: 'fr 11/13/2020 18:47:44'!
PASSED!

!testRun: #ReportTest #test17NetTransferForAccountShouldNotReflectWithdraws stamp: 'fr 11/13/2020 18:47:44'!
PASSED!

!testRun: #ReportTest #test18NetTransferForPortfolioWithNoTransactionsShouldBeZero stamp: 'fr 11/13/2020 18:47:44'!
PASSED!

!testRun: #ReportTest #test19NetTransferForPortfolioWithAnOutgoingTransferShouldReflectItsValue stamp: 'fr 11/13/2020 18:47:44'!
PASSED!

!testRun: #ReportTest #test20NetTransferForPortfolioWithAnIncomingTransferShouldReflectItsValue stamp: 'fr 11/13/2020 18:47:44'!
PASSED!

!testRun: #ReportTest #test21NetTransferForPortfolioShouldNotReflectDeposits stamp: 'fr 11/13/2020 18:47:44'!
PASSED!

!testRun: #ReportTest #test22NetTransferForPortfolioShouldNotReflectWithdraws stamp: 'fr 11/13/2020 18:47:44'!
PASSED!

!testRun: #ReportTest #test23NetTransferForPortfoliosWithPortfoliosShouldReflectOutgoingAndIncomingTransfers stamp: 'fr 11/13/2020 18:47:44'!
PASSED!

!testRun: #ReportTest #test24NetTransferForPortfoliosWithPortfoliosShouldNotRelfectDepositsOrWithdraws stamp: 'fr 11/13/2020 18:47:44'!
PASSED!

!testRun: #ReportTest #test25 stamp: 'fr 11/13/2020 18:47:44'!
PASSED!

!testRun: #ReportTest #test26 stamp: 'fr 11/13/2020 18:47:44'!
PASSED!

!testRun: #ReportTest #test27 stamp: 'fr 11/13/2020 18:47:44'!
PASSED!
!ReportTest methodsFor: 'tests - tree structure' stamp: 'fr 11/13/2020 18:47:51' prior: 50877139!
test26

	| portfolio account |
	account _ ReceptiveAccount named: 'Cuenta de Juan'.
	portfolio _ Portfolio named: 'Portfolio de la familia' with: account.

	self assert: [portfolio treeStructure = (OrderedCollection with: 'Portfolio de la familia' with: ' Cuenta de Juan')]! !

!testRun: #ReportTest #test26 stamp: 'fr 11/13/2020 18:47:52'!
PASSED!

!testRun: #ReportTest #test01AccountSummaryForAccountWithNoTransactionsShouldJustShowBalanceZero stamp: 'fr 11/13/2020 18:47:52'!
PASSED!

!testRun: #ReportTest #test02AccountSummaryShouldReflectDepositsOnAccounts stamp: 'fr 11/13/2020 18:47:52'!
PASSED!

!testRun: #ReportTest #test03AccountSummaryShouldReflectWithdrawsOnAccounts stamp: 'fr 11/13/2020 18:47:52'!
PASSED!

!testRun: #ReportTest #test04AccountSummaryShouldReflectOutgoingTransfersOnAccounts stamp: 'fr 11/13/2020 18:47:52'!
PASSED!

!testRun: #ReportTest #test05AccountSummaryShouldReflectIncomingTransfersOnAccounts stamp: 'fr 11/13/2020 18:47:52'!
PASSED!

!testRun: #ReportTest #test06AccountSummaryForPortfolioWithNoTransactionsShouldJustShowBalanceZero stamp: 'fr 11/13/2020 18:47:52'!
PASSED!

!testRun: #ReportTest #test07AccountSummaryShouldReflectDepositsOnPortfoliosWithAccounts stamp: 'fr 11/13/2020 18:47:52'!
PASSED!

!testRun: #ReportTest #test08AccountSummaryShouldReflectWithdrawsOnPortfoliosWithAccounts stamp: 'fr 11/13/2020 18:47:52'!
PASSED!

!testRun: #ReportTest #test09AccountSummaryShouldReflectOutgoingAndIncomingTransfersOnPortfoliosWithAccounts stamp: 'fr 11/13/2020 18:47:52'!
PASSED!

!testRun: #ReportTest #test10AccountSummaryShouldReflectDepositsOnPortfoliosWithPortfolios stamp: 'fr 11/13/2020 18:47:52'!
PASSED!

!testRun: #ReportTest #test11AccountSummaryShouldReflectWithdrawsOnPortfoliosWithPortfolios stamp: 'fr 11/13/2020 18:47:52'!
PASSED!

!testRun: #ReportTest #test12AccountSummaryShouldReflectOutgoingAndIncomingTransfersOnPortfoliosWithPortfolios stamp: 'fr 11/13/2020 18:47:52'!
PASSED!

!testRun: #ReportTest #test13NetTransferForAccountWithNoTransactionsShouldBeZero stamp: 'fr 11/13/2020 18:47:52'!
PASSED!

!testRun: #ReportTest #test14NetTransferForAccountWithAnOutgoingTransferShouldReflectItsValue stamp: 'fr 11/13/2020 18:47:52'!
PASSED!

!testRun: #ReportTest #test15NetTransferForAccountWithAnIncomingTransferShouldReflectItsValue stamp: 'fr 11/13/2020 18:47:52'!
PASSED!

!testRun: #ReportTest #test16NetTransferForAccountShouldNotReflectDeposits stamp: 'fr 11/13/2020 18:47:52'!
PASSED!

!testRun: #ReportTest #test17NetTransferForAccountShouldNotReflectWithdraws stamp: 'fr 11/13/2020 18:47:52'!
PASSED!

!testRun: #ReportTest #test18NetTransferForPortfolioWithNoTransactionsShouldBeZero stamp: 'fr 11/13/2020 18:47:52'!
PASSED!

!testRun: #ReportTest #test19NetTransferForPortfolioWithAnOutgoingTransferShouldReflectItsValue stamp: 'fr 11/13/2020 18:47:52'!
PASSED!

!testRun: #ReportTest #test20NetTransferForPortfolioWithAnIncomingTransferShouldReflectItsValue stamp: 'fr 11/13/2020 18:47:52'!
PASSED!

!testRun: #ReportTest #test21NetTransferForPortfolioShouldNotReflectDeposits stamp: 'fr 11/13/2020 18:47:52'!
PASSED!

!testRun: #ReportTest #test22NetTransferForPortfolioShouldNotReflectWithdraws stamp: 'fr 11/13/2020 18:47:52'!
PASSED!

!testRun: #ReportTest #test23NetTransferForPortfoliosWithPortfoliosShouldReflectOutgoingAndIncomingTransfers stamp: 'fr 11/13/2020 18:47:52'!
PASSED!

!testRun: #ReportTest #test24NetTransferForPortfoliosWithPortfoliosShouldNotRelfectDepositsOrWithdraws stamp: 'fr 11/13/2020 18:47:52'!
PASSED!

!testRun: #ReportTest #test25 stamp: 'fr 11/13/2020 18:47:52'!
PASSED!

!testRun: #ReportTest #test26 stamp: 'fr 11/13/2020 18:47:52'!
PASSED!

!testRun: #ReportTest #test27 stamp: 'fr 11/13/2020 18:47:52'!
PASSED!
!ReportTest methodsFor: 'tests - tree structure' stamp: 'fr 11/13/2020 18:48:00' prior: 50877013!
test27

	| portfolio account anotherAccount anotherPortfolio |
	account _ ReceptiveAccount named: 'Cuenta de Juan'.
	anotherAccount _ ReceptiveAccount named: 'Cuenta de Angeles'.
	portfolio _ Portfolio named: 'Portfolio de la familia' with: account.
	anotherPortfolio _ Portfolio named: 'Portfolio de Angeles' with: anotherAccount with: portfolio.
	

	self assert: [anotherPortfolio treeStructure = (OrderedCollection with: 'Portfolio de la familia' with: ' Cuenta de Juan' with: ' Portfolio de Angeles' with: '  Cuenta de Angeles')]! !

!testRun: #ReportTest #test27 stamp: 'fr 11/13/2020 18:48:00'!
FAILURE!

anotherPortfolio treeStructure!

!testRun: #ReportTest #test27 stamp: 'fr 11/13/2020 18:48:29'!
FAILURE!
!ReportTest methodsFor: 'tests - tree structure' stamp: 'fr 11/13/2020 18:48:49' prior: 50882542!
test27

	| portfolio account anotherAccount anotherPortfolio |
	account _ ReceptiveAccount named: 'Cuenta de Juan'.
	anotherAccount _ ReceptiveAccount named: 'Cuenta de Angeles'.
	portfolio _ Portfolio named: 'Portfolio de la familia' with: account.
	anotherPortfolio _ Portfolio named: 'Portfolio de Angeles' with: anotherAccount with: portfolio.
	

	self assert: [anotherPortfolio treeStructure = (OrderedCollection with: 'Portfolio de la familia' with: ' Portfolio de Angeles' with: '  Cuenta de Angeles' with: ' Cuenta de Juan')]! !

!testRun: #ReportTest #test27 stamp: 'fr 11/13/2020 18:48:52'!
FAILURE!

----SNAPSHOT----(13 November 2020 18:52:46) CuisUniversity-4384.image priorSource: 17620271!

----SNAPSHOT----(13 November 2020 19:11:09) CuisUniversity-4384.image priorSource: 17630049!

----QUIT----(13 November 2020 19:11:19) CuisUniversity-4384.image priorSource: 17630143!

----STARTUP---- (13 November 2020 19:57:36) as /home/fede/Documentos/Facultad/Inge1/Cuises/linux64/CuisUniversity-4384.image!


!classRenamed: #Reporter as: #TransactionReporter stamp: 'fr 11/13/2020 19:58:03'!
Smalltalk renameClassNamed: #Reporter as: #TransactionReporter!

Object subclass: #TransactionReporter
	instanceVariableNames: 'account'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Part-II-Exercise'!

!classDefinition: #TransactionReporter category: 'Portfolio-Part-II-Exercise' stamp: 'fr 11/13/2020 19:58:25'!
Object subclass: #TransactionReporter
	instanceVariableNames: 'account'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Part-II-Exercise'!

!testRun: #ReportTest #test01AccountSummaryForAccountWithNoTransactionsShouldJustShowBalanceZero stamp: 'fr 11/13/2020 19:58:28'!
PASSED!

!testRun: #ReportTest #test02AccountSummaryShouldReflectDepositsOnAccounts stamp: 'fr 11/13/2020 19:58:28'!
PASSED!

!testRun: #ReportTest #test03AccountSummaryShouldReflectWithdrawsOnAccounts stamp: 'fr 11/13/2020 19:58:28'!
PASSED!

!testRun: #ReportTest #test04AccountSummaryShouldReflectOutgoingTransfersOnAccounts stamp: 'fr 11/13/2020 19:58:28'!
PASSED!

!testRun: #ReportTest #test05AccountSummaryShouldReflectIncomingTransfersOnAccounts stamp: 'fr 11/13/2020 19:58:28'!
PASSED!

!testRun: #ReportTest #test06AccountSummaryForPortfolioWithNoTransactionsShouldJustShowBalanceZero stamp: 'fr 11/13/2020 19:58:28'!
PASSED!

!testRun: #ReportTest #test07AccountSummaryShouldReflectDepositsOnPortfoliosWithAccounts stamp: 'fr 11/13/2020 19:58:28'!
PASSED!

!testRun: #ReportTest #test08AccountSummaryShouldReflectWithdrawsOnPortfoliosWithAccounts stamp: 'fr 11/13/2020 19:58:28'!
PASSED!

!testRun: #ReportTest #test09AccountSummaryShouldReflectOutgoingAndIncomingTransfersOnPortfoliosWithAccounts stamp: 'fr 11/13/2020 19:58:28'!
PASSED!

!testRun: #ReportTest #test10AccountSummaryShouldReflectDepositsOnPortfoliosWithPortfolios stamp: 'fr 11/13/2020 19:58:28'!
PASSED!

!testRun: #ReportTest #test11AccountSummaryShouldReflectWithdrawsOnPortfoliosWithPortfolios stamp: 'fr 11/13/2020 19:58:28'!
PASSED!

!testRun: #ReportTest #test12AccountSummaryShouldReflectOutgoingAndIncomingTransfersOnPortfoliosWithPortfolios stamp: 'fr 11/13/2020 19:58:28'!
PASSED!

!testRun: #ReportTest #test13NetTransferForAccountWithNoTransactionsShouldBeZero stamp: 'fr 11/13/2020 19:58:28'!
PASSED!

!testRun: #ReportTest #test14NetTransferForAccountWithAnOutgoingTransferShouldReflectItsValue stamp: 'fr 11/13/2020 19:58:28'!
PASSED!

!testRun: #ReportTest #test15NetTransferForAccountWithAnIncomingTransferShouldReflectItsValue stamp: 'fr 11/13/2020 19:58:28'!
PASSED!

!testRun: #ReportTest #test16NetTransferForAccountShouldNotReflectDeposits stamp: 'fr 11/13/2020 19:58:28'!
PASSED!

!testRun: #ReportTest #test17NetTransferForAccountShouldNotReflectWithdraws stamp: 'fr 11/13/2020 19:58:28'!
PASSED!

!testRun: #ReportTest #test18NetTransferForPortfolioWithNoTransactionsShouldBeZero stamp: 'fr 11/13/2020 19:58:28'!
PASSED!

!testRun: #ReportTest #test19NetTransferForPortfolioWithAnOutgoingTransferShouldReflectItsValue stamp: 'fr 11/13/2020 19:58:28'!
PASSED!

!testRun: #ReportTest #test20NetTransferForPortfolioWithAnIncomingTransferShouldReflectItsValue stamp: 'fr 11/13/2020 19:58:28'!
PASSED!

!testRun: #ReportTest #test21NetTransferForPortfolioShouldNotReflectDeposits stamp: 'fr 11/13/2020 19:58:28'!
PASSED!

!testRun: #ReportTest #test22NetTransferForPortfolioShouldNotReflectWithdraws stamp: 'fr 11/13/2020 19:58:28'!
PASSED!

!testRun: #ReportTest #test23NetTransferForPortfoliosWithPortfoliosShouldReflectOutgoingAndIncomingTransfers stamp: 'fr 11/13/2020 19:58:28'!
PASSED!

!testRun: #ReportTest #test24NetTransferForPortfoliosWithPortfoliosShouldNotRelfectDepositsOrWithdraws stamp: 'fr 11/13/2020 19:58:28'!
PASSED!

!testRun: #ReportTest #test25 stamp: 'fr 11/13/2020 19:58:28'!
PASSED!

!testRun: #ReportTest #test26 stamp: 'fr 11/13/2020 19:58:28'!
PASSED!

!testRun: #ReportTest #test27 stamp: 'fr 11/13/2020 19:58:28'!
FAILURE!

!testRun: #ReportTest #test27 stamp: 'fr 11/13/2020 19:58:28'!
FAILURE!

!testRun: #ReportTest #test01AccountSummaryForAccountWithNoTransactionsShouldJustShowBalanceZero stamp: 'fr 11/13/2020 19:58:38'!
PASSED!

!testRun: #ReportTest #test02AccountSummaryShouldReflectDepositsOnAccounts stamp: 'fr 11/13/2020 19:58:38'!
PASSED!

!testRun: #ReportTest #test03AccountSummaryShouldReflectWithdrawsOnAccounts stamp: 'fr 11/13/2020 19:58:38'!
PASSED!

!testRun: #ReportTest #test04AccountSummaryShouldReflectOutgoingTransfersOnAccounts stamp: 'fr 11/13/2020 19:58:38'!
PASSED!

!testRun: #ReportTest #test05AccountSummaryShouldReflectIncomingTransfersOnAccounts stamp: 'fr 11/13/2020 19:58:38'!
PASSED!

!testRun: #ReportTest #test06AccountSummaryForPortfolioWithNoTransactionsShouldJustShowBalanceZero stamp: 'fr 11/13/2020 19:58:38'!
PASSED!

!testRun: #ReportTest #test07AccountSummaryShouldReflectDepositsOnPortfoliosWithAccounts stamp: 'fr 11/13/2020 19:58:38'!
PASSED!

!testRun: #ReportTest #test08AccountSummaryShouldReflectWithdrawsOnPortfoliosWithAccounts stamp: 'fr 11/13/2020 19:58:38'!
PASSED!

!testRun: #ReportTest #test09AccountSummaryShouldReflectOutgoingAndIncomingTransfersOnPortfoliosWithAccounts stamp: 'fr 11/13/2020 19:58:38'!
PASSED!

!testRun: #ReportTest #test10AccountSummaryShouldReflectDepositsOnPortfoliosWithPortfolios stamp: 'fr 11/13/2020 19:58:38'!
PASSED!

!testRun: #ReportTest #test11AccountSummaryShouldReflectWithdrawsOnPortfoliosWithPortfolios stamp: 'fr 11/13/2020 19:58:38'!
PASSED!

!testRun: #ReportTest #test12AccountSummaryShouldReflectOutgoingAndIncomingTransfersOnPortfoliosWithPortfolios stamp: 'fr 11/13/2020 19:58:38'!
PASSED!

!testRun: #ReportTest #test13NetTransferForAccountWithNoTransactionsShouldBeZero stamp: 'fr 11/13/2020 19:58:39'!
PASSED!

!testRun: #ReportTest #test14NetTransferForAccountWithAnOutgoingTransferShouldReflectItsValue stamp: 'fr 11/13/2020 19:58:39'!
PASSED!

!testRun: #ReportTest #test15NetTransferForAccountWithAnIncomingTransferShouldReflectItsValue stamp: 'fr 11/13/2020 19:58:39'!
PASSED!

!testRun: #ReportTest #test16NetTransferForAccountShouldNotReflectDeposits stamp: 'fr 11/13/2020 19:58:39'!
PASSED!

!testRun: #ReportTest #test17NetTransferForAccountShouldNotReflectWithdraws stamp: 'fr 11/13/2020 19:58:39'!
PASSED!

!testRun: #ReportTest #test18NetTransferForPortfolioWithNoTransactionsShouldBeZero stamp: 'fr 11/13/2020 19:58:39'!
PASSED!

!testRun: #ReportTest #test19NetTransferForPortfolioWithAnOutgoingTransferShouldReflectItsValue stamp: 'fr 11/13/2020 19:58:39'!
PASSED!

!testRun: #ReportTest #test20NetTransferForPortfolioWithAnIncomingTransferShouldReflectItsValue stamp: 'fr 11/13/2020 19:58:39'!
PASSED!

!testRun: #ReportTest #test21NetTransferForPortfolioShouldNotReflectDeposits stamp: 'fr 11/13/2020 19:58:39'!
PASSED!

!testRun: #ReportTest #test22NetTransferForPortfolioShouldNotReflectWithdraws stamp: 'fr 11/13/2020 19:58:39'!
PASSED!

!testRun: #ReportTest #test23NetTransferForPortfoliosWithPortfoliosShouldReflectOutgoingAndIncomingTransfers stamp: 'fr 11/13/2020 19:58:39'!
PASSED!

!testRun: #ReportTest #test24NetTransferForPortfoliosWithPortfoliosShouldNotRelfectDepositsOrWithdraws stamp: 'fr 11/13/2020 19:58:39'!
PASSED!

!testRun: #ReportTest #test25 stamp: 'fr 11/13/2020 19:58:41'!
PASSED!

!testRun: #ReportTest #test26 stamp: 'fr 11/13/2020 19:58:41'!
PASSED!

!testRun: #ReportTest #test27 stamp: 'fr 11/13/2020 19:58:41'!
FAILURE!

!testRun: #ReportTest #test27 stamp: 'fr 11/13/2020 19:58:41'!
FAILURE!

Object subclass: #TreeStructure
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Part-II-Exercise'!

!classDefinition: #TreeStructure category: 'Portfolio-Part-II-Exercise' stamp: 'fr 11/13/2020 20:03:55'!
Object subclass: #TreeStructure
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Part-II-Exercise'!

!classRenamed: #ReportTest as: #TransactionReporterTest stamp: 'fr 11/13/2020 20:04:48'!
Smalltalk renameClassNamed: #ReportTest as: #TransactionReporterTest!

TestCase subclass: #XXXReporterTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Part-II-Exercise'!

!classDefinition: #XXXReporterTest category: 'Portfolio-Part-II-Exercise' stamp: 'fr 11/13/2020 20:05:18'!
TestCase subclass: #XXXReporterTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Part-II-Exercise'!
!XXXReporterTest methodsFor: 'no messages' stamp: 'fr 11/13/2020 20:05:39'!
test01

	| portfolio |
	portfolio _ Portfolio named: 'Portfolio de la familia'.
	
	self assert: [portfolio treeStructure = (OrderedCollection with: 'Portfolio de la familia')]! !

!methodRemoval: TransactionReporterTest #Notas stamp: 'fr 11/13/2020 20:05:46'!
Notas

	"Son necesarios tests con m�ltiples transacciones de cada una? El modelo llev� a la generalizaci�n temprana debido a que usamos el colaborador transactions con un do:. De otra forma habr�a que hacer transactions at: 1 o algo as� para el caso individual. Esto no parece ser m�s simple que hacer un do:"!

!methodRemoval: TransactionReporterTest #test25 stamp: 'fr 11/13/2020 20:05:52'!
test25

	| portfolio |
	portfolio _ Portfolio named: 'Portfolio de la familia'.
	
	self assert: [portfolio treeStructure = (OrderedCollection with: 'Portfolio de la familia')]!
!XXXReporterTest methodsFor: 'as yet unclassified' stamp: 'fr 11/13/2020 20:06:02'!
test02

	| portfolio account |
	account _ ReceptiveAccount named: 'Cuenta de Juan'.
	portfolio _ Portfolio named: 'Portfolio de la familia' with: account.

	self assert: [portfolio treeStructure = (OrderedCollection with: 'Portfolio de la familia' with: ' Cuenta de Juan')]! !

!methodRemoval: TransactionReporterTest #test26 stamp: 'fr 11/13/2020 20:06:11'!
test26

	| portfolio account |
	account _ ReceptiveAccount named: 'Cuenta de Juan'.
	portfolio _ Portfolio named: 'Portfolio de la familia' with: account.

	self assert: [portfolio treeStructure = (OrderedCollection with: 'Portfolio de la familia' with: ' Cuenta de Juan')]!

!methodRemoval: TransactionReporterTest #test27 stamp: 'fr 11/13/2020 20:06:18'!
test27

	| portfolio account anotherAccount anotherPortfolio |
	account _ ReceptiveAccount named: 'Cuenta de Juan'.
	anotherAccount _ ReceptiveAccount named: 'Cuenta de Angeles'.
	portfolio _ Portfolio named: 'Portfolio de la familia' with: account.
	anotherPortfolio _ Portfolio named: 'Portfolio de Angeles' with: anotherAccount with: portfolio.
	

	self assert: [anotherPortfolio treeStructure = (OrderedCollection with: 'Portfolio de la familia' with: ' Portfolio de Angeles' with: '  Cuenta de Angeles' with: ' Cuenta de Juan')]!
!XXXReporterTest methodsFor: 'as yet unclassified' stamp: 'fr 11/13/2020 20:06:26'!
test03

	| portfolio account anotherAccount anotherPortfolio |
	account _ ReceptiveAccount named: 'Cuenta de Juan'.
	anotherAccount _ ReceptiveAccount named: 'Cuenta de Angeles'.
	portfolio _ Portfolio named: 'Portfolio de la familia' with: account.
	anotherPortfolio _ Portfolio named: 'Portfolio de Angeles' with: anotherAccount with: portfolio.
	

	self assert: [anotherPortfolio treeStructure = (OrderedCollection with: 'Portfolio de la familia' with: ' Portfolio de Angeles' with: '  Cuenta de Angeles' with: ' Cuenta de Juan')]! !
!Portfolio methodsFor: 'report' stamp: 'fr 11/13/2020 20:09:19' prior: 50878088!
buildReportWith: aReporter

	accounts do: [:anAccount | 
		anAccount buildTransactionReportWith: aReporter 	
	]! !
!SummaryReporter methodsFor: 'summary' stamp: 'fr 11/13/2020 20:09:26' prior: 50881250!
accountSummary
	
	account buildTransactionReportWith: self.
	self addAccountBalance.
	^accountSummary! !
!TransferNetReporter methodsFor: 'as yet unclassified' stamp: 'fr 11/13/2020 20:09:30' prior: 50880970!
transferNet

	account buildTransactionReportWith: self.
	^transferNetBalance

	! !
!Portfolio methodsFor: 'report' stamp: 'fr 11/13/2020 20:09:37'!
buildTransactionReportWith: aReporter

	accounts do: [:anAccount | 
		anAccount buildTransactionReportWith: aReporter 	
	]! !

!methodRemoval: Portfolio #buildReportWith: stamp: 'fr 11/13/2020 20:09:38'!
buildReportWith: aReporter

	accounts do: [:anAccount | 
		anAccount buildTransactionReportWith: aReporter 	
	]!
!ReceptiveAccount methodsFor: 'report' stamp: 'fr 11/13/2020 20:09:42'!
buildTransactionReportWith: aReporter

	transactions do: [:aTransaction | 
		aTransaction addToReportWith: aReporter 
	]! !

!methodRemoval: ReceptiveAccount #buildReportWith: stamp: 'fr 11/13/2020 20:09:43'!
buildReportWith: aReporter

	transactions do: [:aTransaction | 
		aTransaction addToReportWith: aReporter 
	]!

!testRun: #TransactionReporterTest #test01AccountSummaryForAccountWithNoTransactionsShouldJustShowBalanceZero stamp: 'fr 11/13/2020 20:09:45'!
PASSED!

!testRun: #TransactionReporterTest #test02AccountSummaryShouldReflectDepositsOnAccounts stamp: 'fr 11/13/2020 20:09:45'!
PASSED!

!testRun: #TransactionReporterTest #test03AccountSummaryShouldReflectWithdrawsOnAccounts stamp: 'fr 11/13/2020 20:09:45'!
PASSED!

!testRun: #TransactionReporterTest #test04AccountSummaryShouldReflectOutgoingTransfersOnAccounts stamp: 'fr 11/13/2020 20:09:45'!
PASSED!

!testRun: #TransactionReporterTest #test05AccountSummaryShouldReflectIncomingTransfersOnAccounts stamp: 'fr 11/13/2020 20:09:45'!
PASSED!

!testRun: #TransactionReporterTest #test06AccountSummaryForPortfolioWithNoTransactionsShouldJustShowBalanceZero stamp: 'fr 11/13/2020 20:09:45'!
PASSED!

!testRun: #TransactionReporterTest #test07AccountSummaryShouldReflectDepositsOnPortfoliosWithAccounts stamp: 'fr 11/13/2020 20:09:45'!
PASSED!

!testRun: #TransactionReporterTest #test08AccountSummaryShouldReflectWithdrawsOnPortfoliosWithAccounts stamp: 'fr 11/13/2020 20:09:45'!
PASSED!

!testRun: #TransactionReporterTest #test09AccountSummaryShouldReflectOutgoingAndIncomingTransfersOnPortfoliosWithAccounts stamp: 'fr 11/13/2020 20:09:45'!
PASSED!

!testRun: #TransactionReporterTest #test10AccountSummaryShouldReflectDepositsOnPortfoliosWithPortfolios stamp: 'fr 11/13/2020 20:09:45'!
PASSED!

!testRun: #TransactionReporterTest #test11AccountSummaryShouldReflectWithdrawsOnPortfoliosWithPortfolios stamp: 'fr 11/13/2020 20:09:45'!
PASSED!

!testRun: #TransactionReporterTest #test12AccountSummaryShouldReflectOutgoingAndIncomingTransfersOnPortfoliosWithPortfolios stamp: 'fr 11/13/2020 20:09:45'!
PASSED!

!testRun: #TransactionReporterTest #test13NetTransferForAccountWithNoTransactionsShouldBeZero stamp: 'fr 11/13/2020 20:09:45'!
PASSED!

!testRun: #TransactionReporterTest #test14NetTransferForAccountWithAnOutgoingTransferShouldReflectItsValue stamp: 'fr 11/13/2020 20:09:45'!
PASSED!

!testRun: #TransactionReporterTest #test15NetTransferForAccountWithAnIncomingTransferShouldReflectItsValue stamp: 'fr 11/13/2020 20:09:45'!
PASSED!

!testRun: #TransactionReporterTest #test16NetTransferForAccountShouldNotReflectDeposits stamp: 'fr 11/13/2020 20:09:45'!
PASSED!

!testRun: #TransactionReporterTest #test17NetTransferForAccountShouldNotReflectWithdraws stamp: 'fr 11/13/2020 20:09:45'!
PASSED!

!testRun: #TransactionReporterTest #test18NetTransferForPortfolioWithNoTransactionsShouldBeZero stamp: 'fr 11/13/2020 20:09:45'!
PASSED!

!testRun: #TransactionReporterTest #test19NetTransferForPortfolioWithAnOutgoingTransferShouldReflectItsValue stamp: 'fr 11/13/2020 20:09:45'!
PASSED!

!testRun: #TransactionReporterTest #test20NetTransferForPortfolioWithAnIncomingTransferShouldReflectItsValue stamp: 'fr 11/13/2020 20:09:45'!
PASSED!

!testRun: #TransactionReporterTest #test21NetTransferForPortfolioShouldNotReflectDeposits stamp: 'fr 11/13/2020 20:09:45'!
PASSED!

!testRun: #TransactionReporterTest #test22NetTransferForPortfolioShouldNotReflectWithdraws stamp: 'fr 11/13/2020 20:09:45'!
PASSED!

!testRun: #TransactionReporterTest #test23NetTransferForPortfoliosWithPortfoliosShouldReflectOutgoingAndIncomingTransfers stamp: 'fr 11/13/2020 20:09:45'!
PASSED!

!testRun: #TransactionReporterTest #test24NetTransferForPortfoliosWithPortfoliosShouldNotRelfectDepositsOrWithdraws stamp: 'fr 11/13/2020 20:09:45'!
PASSED!
!XXXReporterTest methodsFor: 'as yet unclassified' stamp: 'fr 11/13/2020 20:13:58' prior: 50882938!
test03

	| portfolio account anotherAccount anotherPortfolio |
	account _ ReceptiveAccount named: 'Cuenta de Juan'.
	anotherAccount _ ReceptiveAccount named: 'Cuenta de Angeles'.
	portfolio _ Portfolio named: 'Portfolio de Angeles' with: anotherAccount.
	anotherPortfolio _ Portfolio named: 'Portfolio de la familia' with: portfolio with: account.
	

	self assert: [anotherPortfolio treeStructure = (OrderedCollection with: 'Portfolio de la familia' with: ' Portfolio de Angeles' with: '  Cuenta de Angeles' with: ' Cuenta de Juan')]! !

!testRun: #XXXReporterTest #test03 stamp: 'fr 11/13/2020 20:14:26'!
PASSED!

!testRun: #XXXReporterTest #test01 stamp: 'fr 11/13/2020 20:14:26'!
PASSED!

!testRun: #XXXReporterTest #test02 stamp: 'fr 11/13/2020 20:14:26'!
PASSED!

!testRun: #XXXReporterTest #test03 stamp: 'fr 11/13/2020 20:14:26'!
PASSED!

----SNAPSHOT----(13 November 2020 20:37:31) CuisUniversity-4384.image priorSource: 17630237!

Object subclass: #XXXReporter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Part-II-Exercise'!

!classDefinition: #XXXReporter category: 'Portfolio-Part-II-Exercise' stamp: 'fr 11/13/2020 20:39:30'!
Object subclass: #XXXReporter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Part-II-Exercise'!

!classDefinition: #XXXReporter category: 'Portfolio-Part-II-Exercise' stamp: 'fr 11/13/2020 20:42:01'!
Object subclass: #XXXReporter
	instanceVariableNames: 'tree'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Part-II-Exercise'!

!classDefinition: #XXXReporter category: 'Portfolio-Part-II-Exercise' stamp: 'fr 11/13/2020 20:42:03'!
Object subclass: #XXXReporter
	instanceVariableNames: 'tree account'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Part-II-Exercise'!
!XXXReporter methodsFor: 'no messages' stamp: 'fr 11/13/2020 20:42:00'!
treeStructure

	tree _ OrderedCollection new.
	
	account buildReportWith: self.
	
	^tree! !

!testRun: #XXXReporterTest #test01 stamp: 'fr 11/13/2020 20:42:05'!
PASSED!

!testRun: #XXXReporterTest #test02 stamp: 'fr 11/13/2020 20:42:05'!
PASSED!

!testRun: #XXXReporterTest #test03 stamp: 'fr 11/13/2020 20:42:05'!
PASSED!

!testRun: #TransactionReporterTest #test01AccountSummaryForAccountWithNoTransactionsShouldJustShowBalanceZero stamp: 'fr 11/13/2020 20:42:34'!
PASSED!

!testRun: #TransactionReporterTest #test02AccountSummaryShouldReflectDepositsOnAccounts stamp: 'fr 11/13/2020 20:42:34'!
PASSED!

!testRun: #TransactionReporterTest #test03AccountSummaryShouldReflectWithdrawsOnAccounts stamp: 'fr 11/13/2020 20:42:34'!
PASSED!

!testRun: #TransactionReporterTest #test04AccountSummaryShouldReflectOutgoingTransfersOnAccounts stamp: 'fr 11/13/2020 20:42:34'!
PASSED!

!testRun: #TransactionReporterTest #test05AccountSummaryShouldReflectIncomingTransfersOnAccounts stamp: 'fr 11/13/2020 20:42:34'!
PASSED!

!testRun: #TransactionReporterTest #test06AccountSummaryForPortfolioWithNoTransactionsShouldJustShowBalanceZero stamp: 'fr 11/13/2020 20:42:34'!
PASSED!

!testRun: #TransactionReporterTest #test07AccountSummaryShouldReflectDepositsOnPortfoliosWithAccounts stamp: 'fr 11/13/2020 20:42:34'!
PASSED!

!testRun: #TransactionReporterTest #test08AccountSummaryShouldReflectWithdrawsOnPortfoliosWithAccounts stamp: 'fr 11/13/2020 20:42:34'!
PASSED!

!testRun: #TransactionReporterTest #test09AccountSummaryShouldReflectOutgoingAndIncomingTransfersOnPortfoliosWithAccounts stamp: 'fr 11/13/2020 20:42:34'!
PASSED!

!testRun: #TransactionReporterTest #test10AccountSummaryShouldReflectDepositsOnPortfoliosWithPortfolios stamp: 'fr 11/13/2020 20:42:34'!
PASSED!

!testRun: #TransactionReporterTest #test11AccountSummaryShouldReflectWithdrawsOnPortfoliosWithPortfolios stamp: 'fr 11/13/2020 20:42:34'!
PASSED!

!testRun: #TransactionReporterTest #test12AccountSummaryShouldReflectOutgoingAndIncomingTransfersOnPortfoliosWithPortfolios stamp: 'fr 11/13/2020 20:42:34'!
PASSED!

!testRun: #TransactionReporterTest #test13NetTransferForAccountWithNoTransactionsShouldBeZero stamp: 'fr 11/13/2020 20:42:34'!
PASSED!

!testRun: #TransactionReporterTest #test14NetTransferForAccountWithAnOutgoingTransferShouldReflectItsValue stamp: 'fr 11/13/2020 20:42:34'!
PASSED!

!testRun: #TransactionReporterTest #test15NetTransferForAccountWithAnIncomingTransferShouldReflectItsValue stamp: 'fr 11/13/2020 20:42:34'!
PASSED!

!testRun: #TransactionReporterTest #test16NetTransferForAccountShouldNotReflectDeposits stamp: 'fr 11/13/2020 20:42:34'!
PASSED!

!testRun: #TransactionReporterTest #test17NetTransferForAccountShouldNotReflectWithdraws stamp: 'fr 11/13/2020 20:42:34'!
PASSED!

!testRun: #TransactionReporterTest #test18NetTransferForPortfolioWithNoTransactionsShouldBeZero stamp: 'fr 11/13/2020 20:42:34'!
PASSED!

!testRun: #TransactionReporterTest #test19NetTransferForPortfolioWithAnOutgoingTransferShouldReflectItsValue stamp: 'fr 11/13/2020 20:42:34'!
PASSED!

!testRun: #TransactionReporterTest #test20NetTransferForPortfolioWithAnIncomingTransferShouldReflectItsValue stamp: 'fr 11/13/2020 20:42:34'!
PASSED!

!testRun: #TransactionReporterTest #test21NetTransferForPortfolioShouldNotReflectDeposits stamp: 'fr 11/13/2020 20:42:34'!
PASSED!

!testRun: #TransactionReporterTest #test22NetTransferForPortfolioShouldNotReflectWithdraws stamp: 'fr 11/13/2020 20:42:34'!
PASSED!

!testRun: #TransactionReporterTest #test23NetTransferForPortfoliosWithPortfoliosShouldReflectOutgoingAndIncomingTransfers stamp: 'fr 11/13/2020 20:42:34'!
PASSED!

!testRun: #TransactionReporterTest #test24NetTransferForPortfoliosWithPortfoliosShouldNotRelfectDepositsOrWithdraws stamp: 'fr 11/13/2020 20:42:34'!
PASSED!
!Portfolio methodsFor: 'report' stamp: 'fr 11/13/2020 20:44:53' prior: 50876944!
collectTreeInto: anOrderedCollection withIndentation: anIndentationValue

	"| treeEntry |
	treeEntry _ ''.
	anIndentationValue timesRepeat: [treeEntry _ treeEntry,' '].
	treeEntry _ treeEntry,name.
	anOrderedCollection add: treeEntry.
	
	accounts do: [:anAccount | anAccount collectTreeInto: anOrderedCollection withIndentation: anIndentationValue + 1]"
	
	! !
!ReceptiveAccount methodsFor: 'report' stamp: 'fr 11/13/2020 20:44:59' prior: 50876966!
collectTreeInto: anOrderedCollection withIndentation: anIndentationValue 
	
	"| treeEntry |
	treeEntry _ ''.
	anIndentationValue timesRepeat: [treeEntry _ treeEntry,' '].
	treeEntry _ treeEntry,name.
	anOrderedCollection add: treeEntry."! !
!XXXReporterTest methodsFor: 'as yet unclassified' stamp: 'fr 11/13/2020 20:45:50'!
test00

	| portfolio |
	portfolio _ Portfolio named: 'Portfolio de la familia'.
	
	self assert: [portfolio treeStructure = (OrderedCollection with: 'Portfolio de la familia')]! !
!XXXReporterTest methodsFor: 'as yet unclassified' stamp: 'fr 11/13/2020 20:46:14' prior: 50883320!
test00

	| portfolio |
	portfolio _ ReceptiveAccount named: 'Cuenta de Fede'.
	
	self assert: [portfolio treeStructure = (OrderedCollection with: 'Cuenta de Fede')]! !

!testRun: #XXXReporterTest #test00 stamp: 'fr 11/13/2020 20:46:18'!
ERROR!

!classRenamed: #TransactionReporter as: #AccountReporter stamp: 'fr 11/13/2020 20:48:40'!
Smalltalk renameClassNamed: #TransactionReporter as: #AccountReporter!

!classRenamed: #TransactionReporterTest as: #AccountReporterTest stamp: 'fr 11/13/2020 20:48:49'!
Smalltalk renameClassNamed: #TransactionReporterTest as: #AccountReporterTest!

!methodRemoval: XXXReporterTest #test00 stamp: 'fr 11/13/2020 20:50:04'!
test00

	| portfolio |
	portfolio _ ReceptiveAccount named: 'Cuenta de Fede'.
	
	self assert: [portfolio treeStructure = (OrderedCollection with: 'Cuenta de Fede')]!
!Portfolio methodsFor: 'report' stamp: 'fr 11/13/2020 20:50:21' prior: 50883294!
collectTreeInto: anOrderedCollection withIndentation: anIndentationValue

	| treeEntry |
	treeEntry _ ''.
	anIndentationValue timesRepeat: [treeEntry _ treeEntry,' '].
	treeEntry _ treeEntry,name.
	anOrderedCollection add: treeEntry.
	
	accounts do: [:anAccount | anAccount collectTreeInto: anOrderedCollection withIndentation: anIndentationValue + 1]
	
	! !
!ReceptiveAccount methodsFor: 'report' stamp: 'fr 11/13/2020 20:50:28' prior: 50883309!
collectTreeInto: anOrderedCollection withIndentation: anIndentationValue 
	
	| treeEntry |
	treeEntry _ ''.
	anIndentationValue timesRepeat: [treeEntry _ treeEntry,' '].
	treeEntry _ treeEntry,name.
	anOrderedCollection add: treeEntry.! !
!XXXReporter methodsFor: 'as yet unclassified' stamp: 'fr 11/13/2020 20:51:01' prior: 50883172!
treeStructure

	tree _ OrderedCollection new.
	
	account buildPortfolioReportWith: self.
	
	^tree! !
!Portfolio methodsFor: 'report' stamp: 'fr 11/13/2020 20:53:21'!
buildPortfolioReportWith: aPortfolioReporter 

	accounts do: [:anAccount |
		anAccount buildPortfolioReportWith: aPortfolioReporter	
	]! !
!Portfolio methodsFor: 'report' stamp: 'fr 11/13/2020 20:53:55' prior: 50883389!
buildPortfolioReportWith: aPortfolioReporter 

	accounts do: [:anAccount |
		aPortfolioReporter buildPortfolioReportFor: anAccount
	]! !
!Portfolio methodsFor: 'report' stamp: 'fr 11/13/2020 20:55:45' prior: 50883396!
buildPortfolioReportWith: aPortfolioReporter 

	accounts do: [:anAccount | 
		aPortfolioReporter addAccountToReport: anAccount	
	]! !
!Portfolio methodsFor: 'report' stamp: 'fr 11/13/2020 21:00:22' prior: 50883403!
buildPortfolioReportWith: aPortfolioReporter 
! !
!Portfolio methodsFor: 'report' stamp: 'fr 11/13/2020 21:01:41' prior: 50883410!
buildPortfolioReportWith: aPortfolioReporter 

	accounts do: [
			
	]! !
!Portfolio methodsFor: 'report' stamp: 'fr 11/13/2020 21:02:00' prior: 50883415!
buildPortfolioReportWith: aPortfolioReporter 

	accounts do: [:anAccount |
		anAccount addToReportWith: aPortfolioReporter 	
	]! !
!Portfolio methodsFor: 'report' stamp: 'fr 11/13/2020 21:02:39'!
addToReportWith: aPortfolioReporter 	
	
	aPortfolioReporter addPortfolio: self! !
!Portfolio methodsFor: 'report' stamp: 'fr 11/13/2020 21:02:47' prior: 50883427!
addToReportWith: aPortfolioReporter 	
	
	aPortfolioReporter addPortfolioToReport: self! !
!ReceptiveAccount methodsFor: 'report' stamp: 'fr 11/13/2020 21:03:05'!
addToReportWith: aPortfolioReporter 	
	
	aPortfolioReporter addReceptiveAccountToReport: self! !
!XXXReporter methodsFor: 'as yet unclassified' stamp: 'fr 11/13/2020 21:03:28'!
addPortfolioToReport: aPortfolio

	! !
!XXXReporter methodsFor: 'as yet unclassified' stamp: 'fr 11/13/2020 21:03:32' prior: 50883445!
addPortfolioToReport: aPortfolio

	! !

!classDefinition: #XXXReporter category: 'Portfolio-Part-II-Exercise' stamp: 'fr 11/13/2020 21:05:11'!
Object subclass: #XXXReporter
	instanceVariableNames: 'tree account indentation'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Part-II-Exercise'!
!XXXReporter methodsFor: 'as yet unclassified' stamp: 'fr 11/13/2020 21:05:06' prior: 50883450!
addPortfolioToReport: aPortfolio
	
	self addNameWithIndentation: aPortfolio.
	
	indentation _ indentation + 1.
	
	aPortfolio.
	
	indentation _ indentation - 1.! !
!XXXReporter methodsFor: 'as yet unclassified' stamp: 'fr 11/13/2020 21:05:21' prior: 50883463!
addPortfolioToReport: aPortfolio
	
	self addNameWithIndentation: aPortfolio.
	
	indentation _ indentation + 1.
	
	aPortfolio buildPortfolioReportWith: self.
	
	indentation _ indentation - 1.! !
!XXXReporter methodsFor: 'as yet unclassified' stamp: 'fr 11/13/2020 21:05:38'!
addReceptiveAccountToReport: aPortfolio
	
	self addNameWithIndentation: aPortfolio.
	
	indentation _ indentation + 1.
	
	aPortfolio buildPortfolioReportWith: self.
	
	indentation _ indentation - 1.! !
!XXXReporter methodsFor: 'as yet unclassified' stamp: 'fr 11/13/2020 21:05:43' prior: 50883481!
addReceptiveAccountToReport: aReceptiveAccount
	
	self addNameWithIndentation: aReceptiveAccount.
	
	indentation _ indentation + 1.
	
	aReceptiveAccount buildPortfolioReportWith: self.
	
	indentation _ indentation - 1.! !
!XXXReporter methodsFor: 'as yet unclassified' stamp: 'fr 11/13/2020 21:05:52' prior: 50883491!
addReceptiveAccountToReport: aReceptiveAccount
	
	self addNameWithIndentation: aReceptiveAccount.! !
!XXXReporter methodsFor: 'as yet unclassified' stamp: 'fr 11/13/2020 21:06:36' prior: 50883383!
treeStructure

	tree _ OrderedCollection new.
	
	account addPortfolioToReport: self.
	
	^tree! !
!XXXReporter methodsFor: 'as yet unclassified' stamp: 'fr 11/13/2020 21:07:03' prior: 50883508!
treeStructure

	tree _ OrderedCollection new.
	
	account buildPortfolioReportWith: self.
	
	^tree! !
!XXXReporter methodsFor: 'as yet unclassified' stamp: 'fr 11/13/2020 21:07:42' prior: 50883515!
treeStructure

	tree _ OrderedCollection new.
	
	account addPortfolioToReport: self.
	
	^tree! !
!XXXReporter methodsFor: 'as yet unclassified' stamp: 'fr 11/13/2020 21:07:47' prior: 50883522!
treeStructure

	tree _ OrderedCollection new.
	
	self addPortfolioToReport: self.
	
	^tree! !
!XXXReporter methodsFor: 'as yet unclassified' stamp: 'fr 11/13/2020 21:07:50' prior: 50883529!
treeStructure

	tree _ OrderedCollection new.
	
	self addPortfolioToReport: account.
	
	^tree! !
!XXXReporter methodsFor: 'as yet unclassified' stamp: 'fr 11/13/2020 21:09:48'!
addNameWithIndentation: anAccount

	tree add: (self nameWithIndentation: anAccount)! !
!XXXReporter methodsFor: 'as yet unclassified' stamp: 'fr 11/13/2020 21:11:34'!
nameWithIndentation: anAccount

	! !

!classDefinition: #XXXReporter category: 'Portfolio-Part-II-Exercise' stamp: 'fr 11/13/2020 21:11:45'!
Object subclass: #XXXReporter
	instanceVariableNames: 'tree account indentationOffset'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Part-II-Exercise'!
!XXXReporter methodsFor: 'as yet unclassified' stamp: 'fr 11/13/2020 21:11:45' prior: 50883472!
addPortfolioToReport: aPortfolio
	
	self addNameWithIndentation: aPortfolio.
	
	indentationOffset _ indentationOffset + 1.
	
	aPortfolio buildPortfolioReportWith: self.
	
	indentationOffset _ indentationOffset - 1.! !
!XXXReporter methodsFor: 'as yet unclassified' stamp: 'fr 11/13/2020 21:12:19' prior: 50883547!
nameWithIndentation: anAccount

	^self indentation,anAccount name! !

0 timesRepeat: '',' '!

0 timesRepeat: '',' '. !

1 timesRepeat: '',' '. !
!XXXReporter methodsFor: 'as yet unclassified' stamp: 'fr 11/13/2020 21:14:05'!
indentation
	
	| indentation |
	indentation _ ''.
	indentationOffset timesRepeat: indentation,' '.
	^indentation! !
!XXXReporter methodsFor: 'as yet unclassified' stamp: 'fr 11/13/2020 21:15:13' prior: 50883578!
indentation
	
	| indentation |
	indentation _ ''.
	indentationOffset timesRepeat: (indentation _ indentation,' ').
	^indentation! !

indentation _ ''.

3 timesRepeat: (indentation _ indentation,' ')

indentation!

indentation _ ''.!

indentation _ ''.

3 timesRepeat: (indentation _ indentation,' ').

indentation!

3 timesRepeat: (indentation _ indentation,' ').!

indentation!

indentation _ ''.!

indentation _ ''.!

3 timesRepeat: (indentation _ indentation,' ').!

indentation!

 ' ' !

 ' ' !

 ' ' !

indentation _ ''.!

3 timesRepeat: [indentation _ indentation,' '].!

indentation !
!XXXReporter methodsFor: 'as yet unclassified' stamp: 'fr 11/13/2020 21:17:21' prior: 50883585!
indentation
	
	| indentation |
	indentation _ ''.
	indentationOffset timesRepeat: [indentation _ indentation,' '].
	^indentation! !
!Portfolio methodsFor: 'report' stamp: 'fr 11/13/2020 21:18:21' prior: 50882309!
treeStructure
	
	
	"| tree |	
	tree _ OrderedCollection new.
	self collectTreeInto: tree withIndentation: 0.
		
	^tree"
	
	! !
!Portfolio methodsFor: 'report' stamp: 'fr 11/13/2020 21:19:13' prior: 50883614!
treeStructure
	
	
	"| tree |	
	tree _ OrderedCollection new.
	self collectTreeInto: tree withIndentation: 0.
		
	^tree"
	
	| reporter |
	reporter _ XXXReporter for: self.
	
	^XXXReporter treeStructure
	
	! !
!Portfolio methodsFor: 'report' stamp: 'fr 11/13/2020 21:19:22' prior: 50883621!
treeStructure
	
	
	"| tree |	
	tree _ OrderedCollection new.
	self collectTreeInto: tree withIndentation: 0.
		
	^tree"
	
	| reporter |
	reporter _ XXXReporter for: self.
	
	^reporter treeStructure
	
	! !

!testRun: #XXXReporterTest #test01 stamp: 'fr 11/13/2020 21:19:28'!
ERROR!

!testRun: #XXXReporterTest #test02 stamp: 'fr 11/13/2020 21:19:28'!
ERROR!

!testRun: #XXXReporterTest #test03 stamp: 'fr 11/13/2020 21:19:28'!
ERROR!

!testRun: #XXXReporterTest #test01 stamp: 'fr 11/13/2020 21:19:31'!
ERROR!

!testRun: #XXXReporterTest #test01 stamp: 'fr 11/13/2020 21:19:31'!
ERROR!
!XXXReporter class methodsFor: 'instance creation' stamp: 'fr 11/13/2020 21:19:35'!
for: aPortfolio 
	"DO NOT FORGET TO RENAME COLLABORATORS AND REMOVE THIS COMMENT!!!!"
	self shouldBeImplemented.
	^self new initializeFor: aPortfolio ! !
!XXXReporter class methodsFor: 'instance creation' stamp: 'fr 11/13/2020 21:19:41' prior: 50883652!
for: aPortfolio 
	
	^self new initializeFor: aPortfolio ! !

!testRun: #XXXReporterTest #test01 stamp: 'fr 11/13/2020 21:19:44'!
ERROR!

!classDefinition: #XXXReporter category: 'Portfolio-Part-II-Exercise' stamp: 'fr 11/13/2020 21:19:55'!
Object subclass: #XXXReporter
	instanceVariableNames: 'tree account indentationOffset portfolio'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Part-II-Exercise'!
!XXXReporter methodsFor: 'initialization' stamp: 'fr 11/13/2020 21:19:55'!
initializeFor: aPortfolio 
	self shouldBeImplemented.
	portfolio := aPortfolio.! !
!XXXReporter methodsFor: 'initialization' stamp: 'fr 11/13/2020 21:19:57' prior: 50883676!
initializeFor: aPortfolio 
	
	portfolio := aPortfolio.! !
!XXXReporter methodsFor: 'initialization' stamp: 'fr 11/13/2020 21:20:00' prior: 50883682!
initializeFor: aPortfolio 
	
	portfolio _ aPortfolio.! !

!testRun: #XXXReporterTest #test01 stamp: 'fr 11/13/2020 21:20:02'!
ERROR!

!testRun: #XXXReporterTest #test01 stamp: 'fr 11/13/2020 21:20:10'!
ERROR!

!testRun: #XXXReporterTest #test01 stamp: 'fr 11/13/2020 21:20:10'!
ERROR!
!XXXReporter methodsFor: 'initialization' stamp: 'fr 11/13/2020 21:20:27' prior: 50883687!
initializeFor: aPortfolio 
	
	indentationOffset _ 0.
	portfolio _ aPortfolio.! !

!testRun: #XXXReporterTest #test01 stamp: 'fr 11/13/2020 21:20:28'!
ERROR!
!Portfolio methodsFor: 'report' stamp: 'fr 11/13/2020 21:21:21' overrides: 16882612!
name

	^name! !
!ReceptiveAccount methodsFor: 'report' stamp: 'fr 11/13/2020 21:21:26' overrides: 16882612!
name

	^name! !

!testRun: #XXXReporterTest #test01 stamp: 'fr 11/13/2020 21:21:29'!
ERROR!

!testRun: #XXXReporterTest #test02 stamp: 'fr 11/13/2020 21:21:29'!
ERROR!

!testRun: #XXXReporterTest #test03 stamp: 'fr 11/13/2020 21:21:29'!
ERROR!

!testRun: #XXXReporterTest #test01 stamp: 'fr 11/13/2020 21:21:32'!
ERROR!

!testRun: #XXXReporterTest #test01 stamp: 'fr 11/13/2020 21:21:32'!
ERROR!

self nameWithIndentation: anAccount!

self indentation!

anAccount name!

anAccount!

Object subclass: #XXXReporter
	instanceVariableNames: 'tree account indentationOffset'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Part-II-Exercise'!

!classDefinition: #XXXReporter category: 'Portfolio-Part-II-Exercise' stamp: 'fr 11/13/2020 21:23:11'!
Object subclass: #XXXReporter
	instanceVariableNames: 'tree account indentationOffset'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Part-II-Exercise'!

!classDefinition: #XXXReporter category: 'Portfolio-Part-II-Exercise' stamp: 'fr 11/13/2020 21:23:15'!
Object subclass: #XXXReporter
	instanceVariableNames: 'tree portfolio indentationOffset'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Part-II-Exercise'!
!XXXReporter methodsFor: 'as yet unclassified' stamp: 'fr 11/13/2020 21:23:15' prior: 50883535!
treeStructure

	tree _ OrderedCollection new.
	
	self addPortfolioToReport: portfolio.
	
	^tree! !

!testRun: #XXXReporterTest #test01 stamp: 'fr 11/13/2020 21:23:18'!
ERROR!

!testRun: #XXXReporterTest #test02 stamp: 'fr 11/13/2020 21:23:18'!
ERROR!

!testRun: #XXXReporterTest #test03 stamp: 'fr 11/13/2020 21:23:18'!
ERROR!

!testRun: #XXXReporterTest #test01 stamp: 'fr 11/13/2020 21:23:20'!
ERROR!

!testRun: #XXXReporterTest #test01 stamp: 'fr 11/13/2020 21:23:20'!
ERROR!

!testRun: #XXXReporterTest #test01 stamp: 'fr 11/13/2020 21:23:51'!
ERROR!

!testRun: #XXXReporterTest #test01 stamp: 'fr 11/13/2020 21:23:51'!
ERROR!

portfolio!

!testRun: #XXXReporterTest #test01 stamp: 'fr 11/13/2020 21:24:26'!
ERROR!

!testRun: #XXXReporterTest #test02 stamp: 'fr 11/13/2020 21:24:26'!
ERROR!

!testRun: #XXXReporterTest #test03 stamp: 'fr 11/13/2020 21:24:26'!
ERROR!

!testRun: #XXXReporterTest #test01 stamp: 'fr 11/13/2020 21:24:29'!
ERROR!

!testRun: #XXXReporterTest #test01 stamp: 'fr 11/13/2020 21:24:29'!
ERROR!

aPortfolio!

reporter!

reporter!
!XXXReporter methodsFor: 'as yet unclassified' stamp: 'fr 11/13/2020 21:25:24' prior: 50883752!
treeStructure
	
	self addPortfolioToReport: portfolio.
	
	^tree! !
!XXXReporter methodsFor: 'as yet unclassified' stamp: 'fr 11/13/2020 21:25:27' prior: 50883789!
treeStructure
	
	self addPortfolioToReport: portfolio.
	^tree! !
!XXXReporter methodsFor: 'initialization' stamp: 'fr 11/13/2020 21:25:36' prior: 50883699!
initializeFor: aPortfolio 
	
	indentationOffset _ 0.
	tree _ OrderedCollection new.
	portfolio _ aPortfolio.! !

!testRun: #XXXReporterTest #test01 stamp: 'fr 11/13/2020 21:25:37'!
PASSED!

!testRun: #XXXReporterTest #test02 stamp: 'fr 11/13/2020 21:25:37'!
PASSED!

!testRun: #XXXReporterTest #test03 stamp: 'fr 11/13/2020 21:25:37'!
PASSED!

!testRun: #XXXReporterTest #test01 stamp: 'fr 11/13/2020 21:25:43'!
PASSED!

!testRun: #XXXReporterTest #test02 stamp: 'fr 11/13/2020 21:25:45'!
PASSED!

!testRun: #XXXReporterTest #test03 stamp: 'fr 11/13/2020 21:25:46'!
PASSED!

!classRenamed: #XXXReporter as: #TreeStructureReporter stamp: 'fr 11/13/2020 21:26:10'!
Smalltalk renameClassNamed: #XXXReporter as: #TreeStructureReporter!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'fr 11/13/2020 21:26:10' prior: 50883631!
treeStructure
	
	
	"| tree |	
	tree _ OrderedCollection new.
	self collectTreeInto: tree withIndentation: 0.
		
	^tree"
	
	| reporter |
	reporter _ TreeStructureReporter for: self.
	
	^reporter treeStructure
	
	! !

!classRenamed: #XXXReporterTest as: #PortfolioReporterTest stamp: 'fr 11/13/2020 21:26:29'!
Smalltalk renameClassNamed: #XXXReporterTest as: #PortfolioReporterTest!

!classRemoval: #TreeStructure stamp: 'fr 11/13/2020 21:28:43'!
Object subclass: #TreeStructure
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Part-II-Exercise'!

!testRun: #AccountReporterTest #test01AccountSummaryForAccountWithNoTransactionsShouldJustShowBalanceZero stamp: 'fr 11/13/2020 21:28:47'!
PASSED!

!testRun: #AccountReporterTest #test02AccountSummaryShouldReflectDepositsOnAccounts stamp: 'fr 11/13/2020 21:28:47'!
PASSED!

!testRun: #AccountReporterTest #test03AccountSummaryShouldReflectWithdrawsOnAccounts stamp: 'fr 11/13/2020 21:28:47'!
PASSED!

!testRun: #AccountReporterTest #test04AccountSummaryShouldReflectOutgoingTransfersOnAccounts stamp: 'fr 11/13/2020 21:28:47'!
PASSED!

!testRun: #AccountReporterTest #test05AccountSummaryShouldReflectIncomingTransfersOnAccounts stamp: 'fr 11/13/2020 21:28:47'!
PASSED!

!testRun: #AccountReporterTest #test06AccountSummaryForPortfolioWithNoTransactionsShouldJustShowBalanceZero stamp: 'fr 11/13/2020 21:28:47'!
PASSED!

!testRun: #AccountReporterTest #test07AccountSummaryShouldReflectDepositsOnPortfoliosWithAccounts stamp: 'fr 11/13/2020 21:28:47'!
PASSED!

!testRun: #AccountReporterTest #test08AccountSummaryShouldReflectWithdrawsOnPortfoliosWithAccounts stamp: 'fr 11/13/2020 21:28:47'!
PASSED!

!testRun: #AccountReporterTest #test09AccountSummaryShouldReflectOutgoingAndIncomingTransfersOnPortfoliosWithAccounts stamp: 'fr 11/13/2020 21:28:47'!
PASSED!

!testRun: #AccountReporterTest #test10AccountSummaryShouldReflectDepositsOnPortfoliosWithPortfolios stamp: 'fr 11/13/2020 21:28:47'!
PASSED!

!testRun: #AccountReporterTest #test11AccountSummaryShouldReflectWithdrawsOnPortfoliosWithPortfolios stamp: 'fr 11/13/2020 21:28:47'!
PASSED!

!testRun: #AccountReporterTest #test12AccountSummaryShouldReflectOutgoingAndIncomingTransfersOnPortfoliosWithPortfolios stamp: 'fr 11/13/2020 21:28:47'!
PASSED!

!testRun: #AccountReporterTest #test13NetTransferForAccountWithNoTransactionsShouldBeZero stamp: 'fr 11/13/2020 21:28:47'!
PASSED!

!testRun: #AccountReporterTest #test14NetTransferForAccountWithAnOutgoingTransferShouldReflectItsValue stamp: 'fr 11/13/2020 21:28:47'!
PASSED!

!testRun: #AccountReporterTest #test15NetTransferForAccountWithAnIncomingTransferShouldReflectItsValue stamp: 'fr 11/13/2020 21:28:47'!
PASSED!

!testRun: #AccountReporterTest #test16NetTransferForAccountShouldNotReflectDeposits stamp: 'fr 11/13/2020 21:28:47'!
PASSED!

!testRun: #AccountReporterTest #test17NetTransferForAccountShouldNotReflectWithdraws stamp: 'fr 11/13/2020 21:28:47'!
PASSED!

!testRun: #AccountReporterTest #test18NetTransferForPortfolioWithNoTransactionsShouldBeZero stamp: 'fr 11/13/2020 21:28:47'!
PASSED!

!testRun: #AccountReporterTest #test19NetTransferForPortfolioWithAnOutgoingTransferShouldReflectItsValue stamp: 'fr 11/13/2020 21:28:47'!
PASSED!

!testRun: #AccountReporterTest #test20NetTransferForPortfolioWithAnIncomingTransferShouldReflectItsValue stamp: 'fr 11/13/2020 21:28:47'!
PASSED!

!testRun: #AccountReporterTest #test21NetTransferForPortfolioShouldNotReflectDeposits stamp: 'fr 11/13/2020 21:28:47'!
PASSED!

!testRun: #AccountReporterTest #test22NetTransferForPortfolioShouldNotReflectWithdraws stamp: 'fr 11/13/2020 21:28:47'!
PASSED!

!testRun: #AccountReporterTest #test23NetTransferForPortfoliosWithPortfoliosShouldReflectOutgoingAndIncomingTransfers stamp: 'fr 11/13/2020 21:28:47'!
PASSED!

!testRun: #AccountReporterTest #test24NetTransferForPortfoliosWithPortfoliosShouldNotRelfectDepositsOrWithdraws stamp: 'fr 11/13/2020 21:28:47'!
PASSED!

!testRun: #PortfolioReporterTest #test01 stamp: 'fr 11/13/2020 21:28:47'!
PASSED!

!testRun: #PortfolioReporterTest #test02 stamp: 'fr 11/13/2020 21:28:47'!
PASSED!

!testRun: #PortfolioReporterTest #test03 stamp: 'fr 11/13/2020 21:28:47'!
PASSED!

!testRun: #PortfolioTest #test01BalanceOfPortfolioWithoutAccountsIsZero stamp: 'fr 11/13/2020 21:28:47'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithOneAccountIsAccountBalance stamp: 'fr 11/13/2020 21:28:47'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioIsCalculatedRecursivelyOnPortfolios stamp: 'fr 11/13/2020 21:28:47'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithoutAccountsHasNoRegisteredTransaction stamp: 'fr 11/13/2020 21:28:47'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredItsAccountsTransactions stamp: 'fr 11/13/2020 21:28:47'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioLooksForRegisteredTransactionsRecursively stamp: 'fr 11/13/2020 21:28:47'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioHasNoTransactionWhenHasNoAccounts stamp: 'fr 11/13/2020 21:28:47'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTransactionsIncludesAllItsAccountsTransactions stamp: 'fr 11/13/2020 21:28:47'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioTransactionsAreCalculatedRecursively stamp: 'fr 11/13/2020 21:28:47'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCanNotIncludeTheSameAccountMoreThanOnce stamp: 'fr 11/13/2020 21:28:47'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCanNotIncludeAccountOfItsPortfolios stamp: 'fr 11/13/2020 21:28:47'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioCanNotIncludeItself stamp: 'fr 11/13/2020 21:28:47'!
PASSED!

!testRun: #PortfolioTest #test13ComposedPortfolioCanNotHaveParentPortfolioAccount stamp: 'fr 11/13/2020 21:28:47'!
PASSED!

!testRun: #PortfolioTest #test14ComposedPortfolioCanNotHaveAccountOfAnyRootParentRecursively stamp: 'fr 11/13/2020 21:28:47'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotIncludeAnyOfTheComposedAccountOfPortfolioToAdd stamp: 'fr 11/13/2020 21:28:47'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'fr 11/13/2020 21:28:47'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'fr 11/13/2020 21:28:47'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'fr 11/13/2020 21:28:47'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'fr 11/13/2020 21:28:47'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'fr 11/13/2020 21:28:47'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'fr 11/13/2020 21:28:47'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'fr 11/13/2020 21:28:47'!
PASSED!

!testRun: #TransferTest #test01 stamp: 'fr 11/13/2020 21:28:47'!
PASSED!

!testRun: #TransferTest #test02 stamp: 'fr 11/13/2020 21:28:47'!
PASSED!

!testRun: #TransferTest #test03 stamp: 'fr 11/13/2020 21:28:47'!
PASSED!

!testRun: #TransferTest #test04 stamp: 'fr 11/13/2020 21:28:47'!
PASSED!

!testRun: #TransferTest #test05 stamp: 'fr 11/13/2020 21:28:47'!
PASSED!

!testRun: #TransferTest #test06 stamp: 'fr 11/13/2020 21:28:47'!
PASSED!

Object subclass: #PortfolioReporter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Part-II-Exercise'!

!classDefinition: #PortfolioReporter category: 'Portfolio-Part-II-Exercise' stamp: 'fr 11/13/2020 21:29:11'!
Object subclass: #PortfolioReporter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Part-II-Exercise'!

PortfolioReporter subclass: #TreeStructureReporter
	instanceVariableNames: 'tree portfolio indentationOffset'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Part-II-Exercise'!

!classDefinition: #TreeStructureReporter category: 'Portfolio-Part-II-Exercise' stamp: 'fr 11/13/2020 21:29:18'!
PortfolioReporter subclass: #TreeStructureReporter
	instanceVariableNames: 'tree portfolio indentationOffset'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Part-II-Exercise'!

!testRun: #PortfolioReporterTest #test01 stamp: 'fr 11/13/2020 21:29:24'!
PASSED!

!testRun: #PortfolioReporterTest #test02 stamp: 'fr 11/13/2020 21:29:24'!
PASSED!

!testRun: #PortfolioReporterTest #test03 stamp: 'fr 11/13/2020 21:29:24'!
PASSED!
!TreeStructureReporter methodsFor: 'as yet unclassified' stamp: 'fr 11/13/2020 21:32:00' prior: 50883560!
addPortfolioToReport: aPortfolio
	
	self addNameWithIndentation: aPortfolio.
	indentationOffset _ indentationOffset + 1.
	aPortfolio buildPortfolioReportWith: self.
	indentationOffset _ indentationOffset - 1.! !
!TreeStructureReporter methodsFor: 'as yet unclassified' stamp: 'fr 11/13/2020 21:32:43'!
increaseOffset

	^ indentationOffset _ indentationOffset + 1! !
!TreeStructureReporter methodsFor: 'as yet unclassified' stamp: 'fr 11/13/2020 21:32:43' prior: 50884096!
addPortfolioToReport: aPortfolio
	
	self addNameWithIndentation: aPortfolio.
	self increaseOffset.
	aPortfolio buildPortfolioReportWith: self.
	indentationOffset _ indentationOffset - 1.! !
!TreeStructureReporter methodsFor: 'as yet unclassified' stamp: 'fr 11/13/2020 21:32:50'!
decreaseOffset

	^ indentationOffset _ indentationOffset - 1! !
!TreeStructureReporter methodsFor: 'as yet unclassified' stamp: 'fr 11/13/2020 21:32:50' prior: 50884112!
addPortfolioToReport: aPortfolio
	
	self addNameWithIndentation: aPortfolio.
	self increaseOffset.
	aPortfolio buildPortfolioReportWith: self.
	self decreaseOffset.! !
!TreeStructureReporter methodsFor: 'as yet unclassified' stamp: 'fr 11/13/2020 21:33:25'!
changeOffset: aValueToAdd

	^ indentationOffset _ indentationOffset + aValueToAdd ! !
!TreeStructureReporter methodsFor: 'as yet unclassified' stamp: 'fr 11/13/2020 21:33:34' prior: 50884121!
decreaseOffset

	^ self changeOffset: - 1! !
!TreeStructureReporter methodsFor: 'as yet unclassified' stamp: 'fr 11/13/2020 21:33:47' prior: 50884106!
increaseOffset

	^ self changeOffset: 1! !

!testRun: #PortfolioReporterTest #test01 stamp: 'fr 11/13/2020 21:33:50'!
PASSED!

!testRun: #PortfolioReporterTest #test02 stamp: 'fr 11/13/2020 21:33:50'!
PASSED!

!testRun: #PortfolioReporterTest #test03 stamp: 'fr 11/13/2020 21:33:50'!
PASSED!

----SNAPSHOT----(13 November 2020 21:34:50) CuisUniversity-4384.image priorSource: 17647692!

!methodRemoval: Portfolio #collectTreeInto:withIndentation: stamp: 'fr 11/13/2020 21:35:11'!
collectTreeInto: anOrderedCollection withIndentation: anIndentationValue

	| treeEntry |
	treeEntry _ ''.
	anIndentationValue timesRepeat: [treeEntry _ treeEntry,' '].
	treeEntry _ treeEntry,name.
	anOrderedCollection add: treeEntry.
	
	accounts do: [:anAccount | anAccount collectTreeInto: anOrderedCollection withIndentation: anIndentationValue + 1]
	
	!
!Portfolio methodsFor: 'report' stamp: 'fr 11/13/2020 21:35:21' prior: 50883826!
treeStructure
	
	| reporter |
	reporter _ TreeStructureReporter for: self.
	
	^reporter treeStructure
	
	! !

!methodRemoval: ReceptiveAccount #collectTreeInto:withIndentation: stamp: 'fr 11/13/2020 21:35:26'!
collectTreeInto: anOrderedCollection withIndentation: anIndentationValue 
	
	| treeEntry |
	treeEntry _ ''.
	anIndentationValue timesRepeat: [treeEntry _ treeEntry,' '].
	treeEntry _ treeEntry,name.
	anOrderedCollection add: treeEntry.!
!Portfolio methodsFor: 'report' stamp: 'fr 11/13/2020 21:36:11' prior: 50883420!
buildPortfolioReportWith: aPortfolioReporter 

	accounts do: [:anAccount |
		anAccount addToPortfolioReportWith: aPortfolioReporter 	
	]! !
!ReceptiveAccount methodsFor: 'report' stamp: 'fr 11/13/2020 21:36:20' prior: 50882990!
buildTransactionReportWith: aReporter

	transactions do: [:aTransaction | 
		aTransaction addToPortfolioReportWith: aReporter 
	]! !
!ReceptiveAccount methodsFor: 'report' stamp: 'fr 11/13/2020 21:36:26'!
addToPortfolioReportWith: aPortfolioReporter 	
	
	aPortfolioReporter addReceptiveAccountToReport: self! !

!methodRemoval: ReceptiveAccount #addToReportWith: stamp: 'fr 11/13/2020 21:36:28'!
addToReportWith: aPortfolioReporter 	
	
	aPortfolioReporter addReceptiveAccountToReport: self!
!Portfolio methodsFor: 'report' stamp: 'fr 11/13/2020 21:36:32'!
addToPortfolioReportWith: aPortfolioReporter 	
	
	aPortfolioReporter addPortfolioToReport: self! !

!methodRemoval: Portfolio #addToReportWith: stamp: 'fr 11/13/2020 21:36:34'!
addToReportWith: aPortfolioReporter 	
	
	aPortfolioReporter addPortfolioToReport: self!

!testRun: #PortfolioReporterTest #test01 stamp: 'fr 11/13/2020 21:36:37'!
PASSED!

!testRun: #PortfolioReporterTest #test02 stamp: 'fr 11/13/2020 21:36:37'!
PASSED!

!testRun: #PortfolioReporterTest #test03 stamp: 'fr 11/13/2020 21:36:37'!
PASSED!

PortfolioReporter subclass: #TreeStructureReporter
	instanceVariableNames: 'tree indentationOffset'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Part-II-Exercise'!

!classDefinition: #TreeStructureReporter category: 'Portfolio-Part-II-Exercise' stamp: 'fr 11/13/2020 21:42:01'!
PortfolioReporter subclass: #TreeStructureReporter
	instanceVariableNames: 'tree indentationOffset'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Part-II-Exercise'!

Object subclass: #PortfolioReporter
	instanceVariableNames: 'portfolio'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Part-II-Exercise'!

!classDefinition: #PortfolioReporter category: 'Portfolio-Part-II-Exercise' stamp: 'fr 11/13/2020 21:42:06'!
Object subclass: #PortfolioReporter
	instanceVariableNames: 'portfolio'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Part-II-Exercise'!

!methodRemoval: TreeStructureReporter class #for: stamp: 'fr 11/13/2020 21:42:15'!
for: aPortfolio 
	
	^self new initializeFor: aPortfolio !
!PortfolioReporter class methodsFor: 'no messages' stamp: 'fr 11/13/2020 21:42:18'!
for: aPortfolio 
	
	^self new initializeFor: aPortfolio ! !

!testRun: #PortfolioReporterTest #test01 stamp: 'fr 11/13/2020 21:42:27'!
PASSED!

!testRun: #PortfolioReporterTest #test02 stamp: 'fr 11/13/2020 21:42:27'!
PASSED!

!testRun: #PortfolioReporterTest #test03 stamp: 'fr 11/13/2020 21:42:27'!
PASSED!

report _ OrderedCollection with: 'Extracci�n por 100' with: 'Entrada por transferencia de 200' with: 'Balance = 100'. !

report collect: [:aReportElement | ' ',aReportElement]. !

TreeStructureReporter subclass: #SpecialReporter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Part-II-Exercise'!

!classDefinition: #SpecialReporter category: 'Portfolio-Part-II-Exercise' stamp: 'fr 11/13/2020 21:47:46'!
TreeStructureReporter subclass: #SpecialReporter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Part-II-Exercise'!

!classRemoval: #SpecialReporter stamp: 'fr 11/13/2020 21:48:06'!
TreeStructureReporter subclass: #SpecialReporter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Part-II-Exercise'!
!PortfolioReporterTest methodsFor: 'as yet unclassified' stamp: 'fr 11/13/2020 21:48:36'!
test04

	| portfolio account anotherAccount anotherPortfolio |
	account _ ReceptiveAccount named: 'Cuenta de Juan'.
	anotherAccount _ ReceptiveAccount named: 'Cuenta de Angeles'.
	portfolio _ Portfolio named: 'Portfolio de Angeles' with: anotherAccount.
	anotherPortfolio _ Portfolio named: 'Portfolio de la familia' with: portfolio with: account.
	

	self assert: [anotherPortfolio treeStructure = (OrderedCollection with: 'Portfolio de la familia' with: ' Portfolio de Angeles' with: '  Cuenta de Angeles' with: ' Cuenta de Juan')]! !

'	' !

'	'!

!classDefinition: #SpecialReporter category: 'Portfolio-Part-II-Exercise' stamp: 'fr 11/13/2020 21:52:17'!
Object subclass: #SpecialReporter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Part-II-Exercise'!
!PortfolioReporterTest methodsFor: 'as yet unclassified' stamp: 'fr 11/13/2020 21:52:02' prior: 50884310!
test04

	| account reporter |
	account _ Portfolio named: 'Portfolio de Fede'.
	reporter _ SpecialReporter for: account.	

	self assert: [reporter specialReport = (OrderedCollection with: 'Portfolio de Fede' with: ' Balance = 0')]! !

!testRun: #PortfolioReporterTest #test04 stamp: 'fr 11/13/2020 21:52:31'!
ERROR!

!testRun: #PortfolioReporterTest #test01 stamp: 'fr 11/13/2020 21:53:46'!
PASSED!

!testRun: #PortfolioReporterTest #test02 stamp: 'fr 11/13/2020 21:53:46'!
PASSED!

!testRun: #PortfolioReporterTest #test03 stamp: 'fr 11/13/2020 21:53:46'!
PASSED!

!testRun: #PortfolioReporterTest #test04 stamp: 'fr 11/13/2020 21:53:46'!
ERROR!

!testRun: #PortfolioReporterTest #test04 stamp: 'fr 11/13/2020 21:53:46'!
ERROR!

!testRun: #PortfolioReporterTest #test01 stamp: 'fr 11/13/2020 21:53:49'!
PASSED!

!testRun: #PortfolioReporterTest #test02 stamp: 'fr 11/13/2020 21:53:50'!
PASSED!

!testRun: #PortfolioReporterTest #test03 stamp: 'fr 11/13/2020 21:53:52'!
PASSED!
!SpecialReporter class methodsFor: 'instance creation' stamp: 'fr 11/13/2020 21:53:57'!
for: aPortfolio 
	"DO NOT FORGET TO RENAME COLLABORATORS AND REMOVE THIS COMMENT!!!!"
	self shouldBeImplemented.
	^self new initializeFor: aPortfolio ! !
!SpecialReporter class methodsFor: 'instance creation' stamp: 'fr 11/13/2020 21:54:01' prior: 50884373!
for: aPortfolio 
	
	^self new initializeFor: aPortfolio ! !

!testRun: #PortfolioReporterTest #test04 stamp: 'fr 11/13/2020 21:54:03'!
ERROR!

!classDefinition: #SpecialReporter category: 'Portfolio-Part-II-Exercise' stamp: 'fr 11/13/2020 21:54:11'!
Object subclass: #SpecialReporter
	instanceVariableNames: 'portfolio'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Part-II-Exercise'!
!SpecialReporter methodsFor: 'initialization' stamp: 'fr 11/13/2020 21:54:11'!
initializeFor: aPortfolio 
	self shouldBeImplemented.
	portfolio := aPortfolio.! !
!SpecialReporter methodsFor: 'initialization' stamp: 'fr 11/13/2020 21:54:16' prior: 50884398!
initializeFor: aPortfolio 
	
	portfolio _ aPortfolio.! !

!testRun: #PortfolioReporterTest #test04 stamp: 'fr 11/13/2020 21:54:17'!
ERROR!
!SpecialReporter methodsFor: 'report' stamp: 'fr 11/13/2020 21:54:28'!
specialReport
	self shouldBeImplemented.! !
!SpecialReporter methodsFor: 'report' stamp: 'fr 11/13/2020 21:54:45' prior: 50884411!
specialReport
	
	^OrderedCollection with: 'Portfolio de Fede' with: ' Balance = 0'! !

!testRun: #PortfolioReporterTest #test04 stamp: 'fr 11/13/2020 21:54:46'!
PASSED!

!testRun: #PortfolioReporterTest #test01 stamp: 'fr 11/13/2020 21:54:46'!
PASSED!

!testRun: #PortfolioReporterTest #test02 stamp: 'fr 11/13/2020 21:54:46'!
PASSED!

!testRun: #PortfolioReporterTest #test03 stamp: 'fr 11/13/2020 21:54:46'!
PASSED!

!testRun: #PortfolioReporterTest #test04 stamp: 'fr 11/13/2020 21:54:46'!
PASSED!
!PortfolioReporterTest methodsFor: 'as yet unclassified' stamp: 'fr 11/13/2020 21:54:54'!
test05

	| account reporter |
	account _ Portfolio named: 'Portfolio de Fede'.
	reporter _ SpecialReporter for: account.	

	self assert: [reporter specialReport = (OrderedCollection with: 'Portfolio de Fede' with: ' Balance = 0')]! !
!PortfolioReporterTest methodsFor: 'as yet unclassified' stamp: 'fr 11/13/2020 21:55:09' prior: 50884339!
test04

	| portfolio reporter |
	portfolio _ Portfolio named: 'Portfolio de Fede'.
	reporter _ SpecialReporter for: portfolio.	

	self assert: [reporter specialReport = (OrderedCollection with: 'Portfolio de Fede' with: ' Balance = 0')]! !
!PortfolioReporterTest methodsFor: 'as yet unclassified' stamp: 'fr 11/13/2020 21:55:17' prior: 50884435!
test05

	| portfolio reporter |
	portfolio _ Portfolio named: 'Portfolio de Fede'.
	reporter _ SpecialReporter for: portfolio.	

	self assert: [reporter specialReport = (OrderedCollection with: 'Portfolio de Fede' with: ' Balance = 0')]! !
!PortfolioReporterTest methodsFor: 'as yet unclassified' stamp: 'fr 11/13/2020 21:56:49' prior: 50884457!
test05

	| portfolio reporter account anotherAccount |
	account _ ReceptiveAccount new.
	anotherAccount _ ReceptiveAccount new.
	Deposit register: 100 on: account.
	Withdraw register: 50 on: account.
	Transfer move: 10 from: account to: anotherAccount. 
	Transfer move: 5 from: anotherAccount to: account.
	portfolio _ Portfolio named: 'Portfolio de Fede'.
	reporter _ SpecialReporter for: portfolio.	

	self assert: [reporter specialReport = (OrderedCollection with: 'Portfolio de Fede' with: ' Balance = 0')]! !
!PortfolioReporterTest methodsFor: 'as yet unclassified' stamp: 'fr 11/13/2020 21:57:41' prior: 50884468!
test05

	| portfolio reporter account anotherAccount |
	account _ ReceptiveAccount named: 'Cuenta de Fede'.
	anotherAccount _ ReceptiveAccount new.
	Deposit register: 100 on: account.
	Withdraw register: 50 on: account.
	Transfer move: 10 from: account to: anotherAccount. 
	Transfer move: 5 from: anotherAccount to: account.
	portfolio _ Portfolio named: 'Portfolio de Fede' with: account.
	reporter _ SpecialReporter for: portfolio.	

	self assert: [reporter specialReport = (OrderedCollection with: 'Portfolio de Fede' with: ' ' with: ' ' with: ' ' with: ' Balance = 0')]! !
!PortfolioReporterTest methodsFor: 'as yet unclassified' stamp: 'fr 11/13/2020 21:59:47' prior: 50884488!
test05

	| portfolio reporter account anotherAccount expectedReport |
	account _ ReceptiveAccount named: 'Cuenta de Fede'.
	anotherAccount _ ReceptiveAccount new.
	Deposit register: 100 on: account.
	Withdraw register: 50 on: account.
	Transfer move: 10 from: account to: anotherAccount. 
	Transfer move: 5 from: anotherAccount to: account.
	portfolio _ Portfolio named: 'Portfolio de Fede' with: account.
	reporter _ SpecialReporter for: portfolio.	
	
	expectedReport _ OrderedCollection with: 'Portfolio de Fede' with: ' Cuenta de Fede' with: '  Dep�sito por 100.' with: '  Extracci�n por 50.' with: '  Salida por transferencia de 10.' with: '  Entrada por transferencia de 5.'.
	expectedReport add: ' Balance = 0'.
	
	self assert: [reporter specialReport = expectedReport]! !

!testRun: #PortfolioReporterTest #test05 stamp: 'fr 11/13/2020 22:00:03'!
FAILURE!

expectedReport!

!methodRemoval: PortfolioReporterTest #test04 stamp: 'fr 11/13/2020 22:01:30'!
test04

	| portfolio reporter |
	portfolio _ Portfolio named: 'Portfolio de Fede'.
	reporter _ SpecialReporter for: portfolio.	

	self assert: [reporter specialReport = (OrderedCollection with: 'Portfolio de Fede' with: ' Balance = 0')]!

!methodRemoval: PortfolioReporterTest #test05 stamp: 'fr 11/13/2020 22:01:32'!
test05

	| portfolio reporter account anotherAccount expectedReport |
	account _ ReceptiveAccount named: 'Cuenta de Fede'.
	anotherAccount _ ReceptiveAccount new.
	Deposit register: 100 on: account.
	Withdraw register: 50 on: account.
	Transfer move: 10 from: account to: anotherAccount. 
	Transfer move: 5 from: anotherAccount to: account.
	portfolio _ Portfolio named: 'Portfolio de Fede' with: account.
	reporter _ SpecialReporter for: portfolio.	
	
	expectedReport _ OrderedCollection with: 'Portfolio de Fede' with: ' Cuenta de Fede' with: '  Dep�sito por 100.' with: '  Extracci�n por 50.' with: '  Salida por transferencia de 10.' with: '  Entrada por transferencia de 5.'.
	expectedReport add: ' Balance = 0'.
	
	self assert: [reporter specialReport = expectedReport]!

!classRemoval: #SpecialReporter stamp: 'fr 11/13/2020 22:01:36'!
Object subclass: #SpecialReporter
	instanceVariableNames: 'portfolio'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Part-II-Exercise'!

----SNAPSHOT----(13 November 2020 22:01:41) CuisUniversity-4384.image priorSource: 17680259!
!PortfolioReporterTest methodsFor: 'as yet unclassified' stamp: 'fr 11/13/2020 22:01:58'!
test04

	| portfolio account anotherAccount anotherPortfolio |
	account _ ReceptiveAccount named: 'Cuenta de Juan'.
	anotherAccount _ ReceptiveAccount named: 'Cuenta de Angeles'.
	portfolio _ Portfolio named: 'Portfolio de Angeles' with: anotherAccount.
	anotherPortfolio _ Portfolio named: 'Portfolio de la familia' with: portfolio with: account.
	

	self assert: [anotherPortfolio treeStructure = (OrderedCollection with: 'Portfolio de la familia' with: ' Portfolio de Angeles' with: '  Cuenta de Angeles' with: ' Cuenta de Juan')]! !
!PortfolioReporterTest methodsFor: 'as yet unclassified' stamp: 'fr 11/13/2020 22:03:03' prior: 50884587!
test04

	| portfolio |
	portfolio _ Portfolio name: 'Portfolio de Fede'.
	

	self assert: [portfolio specialReport = (OrderedCollection with: 'Portfolio de Fede' with: ' Balance = 0')]! !
!PortfolioReporterTest methodsFor: 'as yet unclassified' stamp: 'fr 11/13/2020 22:03:10' prior: 50884608!
test04

	| portfolio |
	portfolio _ Portfolio name: 'Portfolio de Fede'.

	self assert: [portfolio specialReport = (OrderedCollection with: 'Portfolio de Fede' with: ' Balance = 0')]! !

!testRun: #PortfolioReporterTest #test04 stamp: 'fr 11/13/2020 22:03:11'!
ERROR!
!PortfolioReporterTest methodsFor: 'as yet unclassified' stamp: 'fr 11/13/2020 22:03:15' prior: 50884618!
test04

	| portfolio |
	portfolio _ Portfolio named: 'Portfolio de Fede'.

	self assert: [portfolio specialReport = (OrderedCollection with: 'Portfolio de Fede' with: ' Balance = 0')]! !

!testRun: #PortfolioReporterTest #test04 stamp: 'fr 11/13/2020 22:03:16'!
ERROR!
!Portfolio methodsFor: 'report' stamp: 'fr 11/13/2020 22:03:25'!
specialReport
	self shouldBeImplemented.! !
!Portfolio methodsFor: 'report' stamp: 'fr 11/13/2020 22:03:28' prior: 50884641!
specialReport
	
	! !

!testRun: #PortfolioReporterTest #test04 stamp: 'fr 11/13/2020 22:03:31'!
FAILURE!
!Portfolio methodsFor: 'report' stamp: 'fr 11/13/2020 22:03:57' prior: 50884645!
specialReport
	
	^OrderedCollection with: 'Portfolio de Fede' with: ' Balance = 0'
	! !

!testRun: #PortfolioReporterTest #test04 stamp: 'fr 11/13/2020 22:03:59'!
FAILURE!

!testRun: #PortfolioReporterTest #test04 stamp: 'fr 11/13/2020 22:04:01'!
PASSED!

!testRun: #PortfolioReporterTest #test01 stamp: 'fr 11/13/2020 22:04:01'!
PASSED!

!testRun: #PortfolioReporterTest #test02 stamp: 'fr 11/13/2020 22:04:01'!
PASSED!

!testRun: #PortfolioReporterTest #test03 stamp: 'fr 11/13/2020 22:04:01'!
PASSED!

!testRun: #PortfolioReporterTest #test04 stamp: 'fr 11/13/2020 22:04:01'!
PASSED!
!PortfolioReporterTest methodsFor: 'as yet unclassified' stamp: 'fr 11/13/2020 22:05:15' prior: 50884630!
test04

	| portfolio account |
	account _ ReceptiveAccount named: 'Cuenta de Fede'.
	portfolio _ Portfolio named: 'Portfolio de Fede'.

	self assert: [portfolio specialReport = (OrderedCollection with: 'Portfolio de Fede' with: ' Balance = 0')]! !
!PortfolioReporterTest methodsFor: 'as yet unclassified' stamp: 'fr 11/13/2020 22:05:25' prior: 50884673!
test04

	| portfolio account |
	account _ ReceptiveAccount named: 'Cuenta de Fede'.
	portfolio _ Portfolio named: 'Portfolio de Fede' with: account.

	self assert: [portfolio specialReport = (OrderedCollection with: 'Portfolio de Fede' with: ' Balance = 0')]! !
!PortfolioReporterTest methodsFor: 'as yet unclassified' stamp: 'fr 11/13/2020 22:08:17' prior: 50884685!
test04

	| portfolio account anotherAccount expected |
	account _ ReceptiveAccount named: 'Cuenta de Fede'.
	anotherAccount _ ReceptiveAccount new.
	Deposit register: 100 on: account.
	Withdraw register: 50 on: account. 
	Transfer move: 10 from: account to: anotherAccount.
	Transfer move: 5 from: anotherAccount to: account.
	portfolio _ Portfolio named: 'Portfolio de Fede' with: account.
	expected _ OrderedCollection with: 'Portfolio de Fede'.
	
	self assert: [portfolio specialReport = expected]! !
!PortfolioReporterTest methodsFor: 'as yet unclassified' stamp: 'fr 11/13/2020 22:10:19' prior: 50884697!
test04

	| portfolio account anotherAccount expected |
	account _ ReceptiveAccount named: 'Cuenta de Fede'.
	anotherAccount _ ReceptiveAccount new.
	Deposit register: 100 on: account.
	Withdraw register: 50 on: account. 
	Transfer move: 10 from: account to: anotherAccount.
	Transfer move: 5 from: anotherAccount to: account.
	portfolio _ Portfolio named: 'Portfolio de Fede' with: account.
	expected _ OrderedCollection with: 'Portfolio de Fede'.
	expected add: ' Cuenta de Fede'.
	expected add: '  Dep�sito por 100.'.
	expected add: '  Extracci�n por 50.'.
	expected add: '  Salida por transferencia de 10.'.
	expected add: '  Entrada por transferencia de 5'.
	expected add: ' Balance = 45'.
	self assert: [portfolio specialReport = expected]! !

!testRun: #PortfolioReporterTest #test04 stamp: 'fr 11/13/2020 22:10:33'!
FAILURE!

----SNAPSHOT----(13 November 2020 22:10:42) CuisUniversity-4384.image priorSource: 17693861!

----QUIT----(14 November 2020 00:18:14) CuisUniversity-4384.image priorSource: 17699039!

----STARTUP---- (14 November 2020 19:43:19) as /home/fede/Documentos/Facultad/Inge1/Cuises/linux64/CuisUniversity-4384.image!


----SNAPSHOT----(14 November 2020 19:43:44) CuisUniversity-4384.image priorSource: 17699133!

!testRun: #AccountReporterTest #test01AccountSummaryForAccountWithNoTransactionsShouldJustShowBalanceZero stamp: 'fr 11/14/2020 19:43:47'!
PASSED!

!testRun: #AccountReporterTest #test02AccountSummaryShouldReflectDepositsOnAccounts stamp: 'fr 11/14/2020 19:43:47'!
ERROR!

!testRun: #AccountReporterTest #test03AccountSummaryShouldReflectWithdrawsOnAccounts stamp: 'fr 11/14/2020 19:43:47'!
ERROR!

!testRun: #AccountReporterTest #test04AccountSummaryShouldReflectOutgoingTransfersOnAccounts stamp: 'fr 11/14/2020 19:43:47'!
ERROR!

!testRun: #AccountReporterTest #test05AccountSummaryShouldReflectIncomingTransfersOnAccounts stamp: 'fr 11/14/2020 19:43:47'!
ERROR!

!testRun: #AccountReporterTest #test06AccountSummaryForPortfolioWithNoTransactionsShouldJustShowBalanceZero stamp: 'fr 11/14/2020 19:43:47'!
PASSED!

!testRun: #AccountReporterTest #test07AccountSummaryShouldReflectDepositsOnPortfoliosWithAccounts stamp: 'fr 11/14/2020 19:43:47'!
ERROR!

!testRun: #AccountReporterTest #test08AccountSummaryShouldReflectWithdrawsOnPortfoliosWithAccounts stamp: 'fr 11/14/2020 19:43:47'!
ERROR!

!testRun: #AccountReporterTest #test09AccountSummaryShouldReflectOutgoingAndIncomingTransfersOnPortfoliosWithAccounts stamp: 'fr 11/14/2020 19:43:47'!
ERROR!

!testRun: #AccountReporterTest #test10AccountSummaryShouldReflectDepositsOnPortfoliosWithPortfolios stamp: 'fr 11/14/2020 19:43:47'!
ERROR!

!testRun: #AccountReporterTest #test11AccountSummaryShouldReflectWithdrawsOnPortfoliosWithPortfolios stamp: 'fr 11/14/2020 19:43:47'!
ERROR!

!testRun: #AccountReporterTest #test12AccountSummaryShouldReflectOutgoingAndIncomingTransfersOnPortfoliosWithPortfolios stamp: 'fr 11/14/2020 19:43:47'!
ERROR!

!testRun: #AccountReporterTest #test13NetTransferForAccountWithNoTransactionsShouldBeZero stamp: 'fr 11/14/2020 19:43:47'!
PASSED!

!testRun: #AccountReporterTest #test14NetTransferForAccountWithAnOutgoingTransferShouldReflectItsValue stamp: 'fr 11/14/2020 19:43:47'!
ERROR!

!testRun: #AccountReporterTest #test15NetTransferForAccountWithAnIncomingTransferShouldReflectItsValue stamp: 'fr 11/14/2020 19:43:47'!
ERROR!

!testRun: #AccountReporterTest #test16NetTransferForAccountShouldNotReflectDeposits stamp: 'fr 11/14/2020 19:43:47'!
ERROR!

!testRun: #AccountReporterTest #test17NetTransferForAccountShouldNotReflectWithdraws stamp: 'fr 11/14/2020 19:43:47'!
ERROR!

!testRun: #AccountReporterTest #test18NetTransferForPortfolioWithNoTransactionsShouldBeZero stamp: 'fr 11/14/2020 19:43:47'!
PASSED!

!testRun: #AccountReporterTest #test19NetTransferForPortfolioWithAnOutgoingTransferShouldReflectItsValue stamp: 'fr 11/14/2020 19:43:47'!
ERROR!

!testRun: #AccountReporterTest #test20NetTransferForPortfolioWithAnIncomingTransferShouldReflectItsValue stamp: 'fr 11/14/2020 19:43:47'!
ERROR!

!testRun: #AccountReporterTest #test21NetTransferForPortfolioShouldNotReflectDeposits stamp: 'fr 11/14/2020 19:43:47'!
ERROR!

!testRun: #AccountReporterTest #test22NetTransferForPortfolioShouldNotReflectWithdraws stamp: 'fr 11/14/2020 19:43:47'!
ERROR!

!testRun: #AccountReporterTest #test23NetTransferForPortfoliosWithPortfoliosShouldReflectOutgoingAndIncomingTransfers stamp: 'fr 11/14/2020 19:43:47'!
ERROR!

!testRun: #AccountReporterTest #test24NetTransferForPortfoliosWithPortfoliosShouldNotRelfectDepositsOrWithdraws stamp: 'fr 11/14/2020 19:43:47'!
ERROR!

!testRun: #PortfolioReporterTest #test01 stamp: 'fr 11/14/2020 19:43:47'!
PASSED!

!testRun: #PortfolioReporterTest #test02 stamp: 'fr 11/14/2020 19:43:47'!
PASSED!

!testRun: #PortfolioReporterTest #test03 stamp: 'fr 11/14/2020 19:43:47'!
PASSED!

!testRun: #PortfolioReporterTest #test04 stamp: 'fr 11/14/2020 19:43:47'!
FAILURE!

!testRun: #PortfolioTest #test01BalanceOfPortfolioWithoutAccountsIsZero stamp: 'fr 11/14/2020 19:43:47'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithOneAccountIsAccountBalance stamp: 'fr 11/14/2020 19:43:47'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioIsCalculatedRecursivelyOnPortfolios stamp: 'fr 11/14/2020 19:43:47'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithoutAccountsHasNoRegisteredTransaction stamp: 'fr 11/14/2020 19:43:47'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredItsAccountsTransactions stamp: 'fr 11/14/2020 19:43:47'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioLooksForRegisteredTransactionsRecursively stamp: 'fr 11/14/2020 19:43:47'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioHasNoTransactionWhenHasNoAccounts stamp: 'fr 11/14/2020 19:43:47'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTransactionsIncludesAllItsAccountsTransactions stamp: 'fr 11/14/2020 19:43:47'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioTransactionsAreCalculatedRecursively stamp: 'fr 11/14/2020 19:43:47'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCanNotIncludeTheSameAccountMoreThanOnce stamp: 'fr 11/14/2020 19:43:47'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCanNotIncludeAccountOfItsPortfolios stamp: 'fr 11/14/2020 19:43:47'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioCanNotIncludeItself stamp: 'fr 11/14/2020 19:43:47'!
PASSED!

!testRun: #PortfolioTest #test13ComposedPortfolioCanNotHaveParentPortfolioAccount stamp: 'fr 11/14/2020 19:43:47'!
PASSED!

!testRun: #PortfolioTest #test14ComposedPortfolioCanNotHaveAccountOfAnyRootParentRecursively stamp: 'fr 11/14/2020 19:43:47'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotIncludeAnyOfTheComposedAccountOfPortfolioToAdd stamp: 'fr 11/14/2020 19:43:47'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'fr 11/14/2020 19:43:47'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'fr 11/14/2020 19:43:47'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'fr 11/14/2020 19:43:47'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'fr 11/14/2020 19:43:47'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'fr 11/14/2020 19:43:47'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'fr 11/14/2020 19:43:47'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'fr 11/14/2020 19:43:47'!
PASSED!

!testRun: #TransferTest #test01 stamp: 'fr 11/14/2020 19:43:47'!
PASSED!

!testRun: #TransferTest #test02 stamp: 'fr 11/14/2020 19:43:47'!
PASSED!

!testRun: #TransferTest #test03 stamp: 'fr 11/14/2020 19:43:47'!
PASSED!

!testRun: #TransferTest #test04 stamp: 'fr 11/14/2020 19:43:47'!
PASSED!

!testRun: #TransferTest #test05 stamp: 'fr 11/14/2020 19:43:47'!
PASSED!

!testRun: #TransferTest #test06 stamp: 'fr 11/14/2020 19:43:47'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'fr 11/14/2020 19:43:55'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'fr 11/14/2020 19:43:55'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'fr 11/14/2020 19:43:55'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'fr 11/14/2020 19:43:55'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'fr 11/14/2020 19:43:55'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'fr 11/14/2020 19:43:55'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'fr 11/14/2020 19:43:55'!
PASSED!

!testRun: #TransferTest #test01 stamp: 'fr 11/14/2020 19:43:57'!
PASSED!

!testRun: #TransferTest #test02 stamp: 'fr 11/14/2020 19:43:57'!
PASSED!

!testRun: #TransferTest #test03 stamp: 'fr 11/14/2020 19:43:57'!
PASSED!

!testRun: #TransferTest #test04 stamp: 'fr 11/14/2020 19:43:57'!
PASSED!

!testRun: #TransferTest #test05 stamp: 'fr 11/14/2020 19:43:57'!
PASSED!

!testRun: #TransferTest #test06 stamp: 'fr 11/14/2020 19:43:57'!
PASSED!

!testRun: #PortfolioReporterTest #test01 stamp: 'fr 11/14/2020 19:44:00'!
PASSED!

!testRun: #PortfolioReporterTest #test02 stamp: 'fr 11/14/2020 19:44:00'!
PASSED!

!testRun: #PortfolioReporterTest #test03 stamp: 'fr 11/14/2020 19:44:00'!
PASSED!

!testRun: #PortfolioReporterTest #test04 stamp: 'fr 11/14/2020 19:44:00'!
FAILURE!

!testRun: #PortfolioReporterTest #test04 stamp: 'fr 11/14/2020 19:44:00'!
FAILURE!

!testRun: #AccountReporterTest #test01AccountSummaryForAccountWithNoTransactionsShouldJustShowBalanceZero stamp: 'fr 11/14/2020 19:44:10'!
PASSED!

!testRun: #AccountReporterTest #test02AccountSummaryShouldReflectDepositsOnAccounts stamp: 'fr 11/14/2020 19:44:10'!
ERROR!

!testRun: #AccountReporterTest #test03AccountSummaryShouldReflectWithdrawsOnAccounts stamp: 'fr 11/14/2020 19:44:10'!
ERROR!

!testRun: #AccountReporterTest #test04AccountSummaryShouldReflectOutgoingTransfersOnAccounts stamp: 'fr 11/14/2020 19:44:10'!
ERROR!

!testRun: #AccountReporterTest #test05AccountSummaryShouldReflectIncomingTransfersOnAccounts stamp: 'fr 11/14/2020 19:44:10'!
ERROR!

!testRun: #AccountReporterTest #test06AccountSummaryForPortfolioWithNoTransactionsShouldJustShowBalanceZero stamp: 'fr 11/14/2020 19:44:10'!
PASSED!

!testRun: #AccountReporterTest #test07AccountSummaryShouldReflectDepositsOnPortfoliosWithAccounts stamp: 'fr 11/14/2020 19:44:10'!
ERROR!

!testRun: #AccountReporterTest #test08AccountSummaryShouldReflectWithdrawsOnPortfoliosWithAccounts stamp: 'fr 11/14/2020 19:44:10'!
ERROR!

!testRun: #AccountReporterTest #test09AccountSummaryShouldReflectOutgoingAndIncomingTransfersOnPortfoliosWithAccounts stamp: 'fr 11/14/2020 19:44:10'!
ERROR!

!testRun: #AccountReporterTest #test10AccountSummaryShouldReflectDepositsOnPortfoliosWithPortfolios stamp: 'fr 11/14/2020 19:44:10'!
ERROR!

!testRun: #AccountReporterTest #test11AccountSummaryShouldReflectWithdrawsOnPortfoliosWithPortfolios stamp: 'fr 11/14/2020 19:44:10'!
ERROR!

!testRun: #AccountReporterTest #test12AccountSummaryShouldReflectOutgoingAndIncomingTransfersOnPortfoliosWithPortfolios stamp: 'fr 11/14/2020 19:44:10'!
ERROR!

!testRun: #AccountReporterTest #test13NetTransferForAccountWithNoTransactionsShouldBeZero stamp: 'fr 11/14/2020 19:44:10'!
PASSED!

!testRun: #AccountReporterTest #test14NetTransferForAccountWithAnOutgoingTransferShouldReflectItsValue stamp: 'fr 11/14/2020 19:44:10'!
ERROR!

!testRun: #AccountReporterTest #test15NetTransferForAccountWithAnIncomingTransferShouldReflectItsValue stamp: 'fr 11/14/2020 19:44:10'!
ERROR!

!testRun: #AccountReporterTest #test16NetTransferForAccountShouldNotReflectDeposits stamp: 'fr 11/14/2020 19:44:10'!
ERROR!

!testRun: #AccountReporterTest #test17NetTransferForAccountShouldNotReflectWithdraws stamp: 'fr 11/14/2020 19:44:10'!
ERROR!

!testRun: #AccountReporterTest #test18NetTransferForPortfolioWithNoTransactionsShouldBeZero stamp: 'fr 11/14/2020 19:44:10'!
PASSED!

!testRun: #AccountReporterTest #test19NetTransferForPortfolioWithAnOutgoingTransferShouldReflectItsValue stamp: 'fr 11/14/2020 19:44:10'!
ERROR!

!testRun: #AccountReporterTest #test20NetTransferForPortfolioWithAnIncomingTransferShouldReflectItsValue stamp: 'fr 11/14/2020 19:44:10'!
ERROR!

!testRun: #AccountReporterTest #test21NetTransferForPortfolioShouldNotReflectDeposits stamp: 'fr 11/14/2020 19:44:10'!
ERROR!

!testRun: #AccountReporterTest #test22NetTransferForPortfolioShouldNotReflectWithdraws stamp: 'fr 11/14/2020 19:44:10'!
ERROR!

!testRun: #AccountReporterTest #test23NetTransferForPortfoliosWithPortfoliosShouldReflectOutgoingAndIncomingTransfers stamp: 'fr 11/14/2020 19:44:10'!
ERROR!

!testRun: #AccountReporterTest #test24NetTransferForPortfoliosWithPortfoliosShouldNotRelfectDepositsOrWithdraws stamp: 'fr 11/14/2020 19:44:10'!
ERROR!

!testRun: #AccountReporterTest #test01AccountSummaryForAccountWithNoTransactionsShouldJustShowBalanceZero stamp: 'fr 11/14/2020 19:44:18'!
PASSED!

!testRun: #AccountReporterTest #test02AccountSummaryShouldReflectDepositsOnAccounts stamp: 'fr 11/14/2020 19:44:20'!
ERROR!

!testRun: #AccountReporterTest #test02AccountSummaryShouldReflectDepositsOnAccounts stamp: 'fr 11/14/2020 19:44:20'!
ERROR!

!testRun: #AccountReporterTest #test02AccountSummaryShouldReflectDepositsOnAccounts stamp: 'fr 11/14/2020 19:44:32'!
ERROR!

!testRun: #AccountReporterTest #test02AccountSummaryShouldReflectDepositsOnAccounts stamp: 'fr 11/14/2020 19:44:32'!
ERROR!
!ReceptiveAccount methodsFor: 'report' stamp: 'fr 11/14/2020 19:44:45' prior: 50884201!
buildTransactionReportWith: aReporter

	transactions do: [:aTransaction | 
		aTransaction addToReportWith: aReporter 
	]! !

!testRun: #AccountReporterTest #test01AccountSummaryForAccountWithNoTransactionsShouldJustShowBalanceZero stamp: 'fr 11/14/2020 19:44:47'!
PASSED!

!testRun: #AccountReporterTest #test02AccountSummaryShouldReflectDepositsOnAccounts stamp: 'fr 11/14/2020 19:44:47'!
PASSED!

!testRun: #AccountReporterTest #test03AccountSummaryShouldReflectWithdrawsOnAccounts stamp: 'fr 11/14/2020 19:44:47'!
PASSED!

!testRun: #AccountReporterTest #test04AccountSummaryShouldReflectOutgoingTransfersOnAccounts stamp: 'fr 11/14/2020 19:44:47'!
PASSED!

!testRun: #AccountReporterTest #test05AccountSummaryShouldReflectIncomingTransfersOnAccounts stamp: 'fr 11/14/2020 19:44:47'!
PASSED!

!testRun: #AccountReporterTest #test06AccountSummaryForPortfolioWithNoTransactionsShouldJustShowBalanceZero stamp: 'fr 11/14/2020 19:44:47'!
PASSED!

!testRun: #AccountReporterTest #test07AccountSummaryShouldReflectDepositsOnPortfoliosWithAccounts stamp: 'fr 11/14/2020 19:44:47'!
PASSED!

!testRun: #AccountReporterTest #test08AccountSummaryShouldReflectWithdrawsOnPortfoliosWithAccounts stamp: 'fr 11/14/2020 19:44:47'!
PASSED!

!testRun: #AccountReporterTest #test09AccountSummaryShouldReflectOutgoingAndIncomingTransfersOnPortfoliosWithAccounts stamp: 'fr 11/14/2020 19:44:47'!
PASSED!

!testRun: #AccountReporterTest #test10AccountSummaryShouldReflectDepositsOnPortfoliosWithPortfolios stamp: 'fr 11/14/2020 19:44:47'!
PASSED!

!testRun: #AccountReporterTest #test11AccountSummaryShouldReflectWithdrawsOnPortfoliosWithPortfolios stamp: 'fr 11/14/2020 19:44:47'!
PASSED!

!testRun: #AccountReporterTest #test12AccountSummaryShouldReflectOutgoingAndIncomingTransfersOnPortfoliosWithPortfolios stamp: 'fr 11/14/2020 19:44:47'!
PASSED!

!testRun: #AccountReporterTest #test13NetTransferForAccountWithNoTransactionsShouldBeZero stamp: 'fr 11/14/2020 19:44:47'!
PASSED!

!testRun: #AccountReporterTest #test14NetTransferForAccountWithAnOutgoingTransferShouldReflectItsValue stamp: 'fr 11/14/2020 19:44:47'!
PASSED!

!testRun: #AccountReporterTest #test15NetTransferForAccountWithAnIncomingTransferShouldReflectItsValue stamp: 'fr 11/14/2020 19:44:47'!
PASSED!

!testRun: #AccountReporterTest #test16NetTransferForAccountShouldNotReflectDeposits stamp: 'fr 11/14/2020 19:44:47'!
PASSED!

!testRun: #AccountReporterTest #test17NetTransferForAccountShouldNotReflectWithdraws stamp: 'fr 11/14/2020 19:44:47'!
PASSED!

!testRun: #AccountReporterTest #test18NetTransferForPortfolioWithNoTransactionsShouldBeZero stamp: 'fr 11/14/2020 19:44:47'!
PASSED!

!testRun: #AccountReporterTest #test19NetTransferForPortfolioWithAnOutgoingTransferShouldReflectItsValue stamp: 'fr 11/14/2020 19:44:47'!
PASSED!

!testRun: #AccountReporterTest #test20NetTransferForPortfolioWithAnIncomingTransferShouldReflectItsValue stamp: 'fr 11/14/2020 19:44:47'!
PASSED!

!testRun: #AccountReporterTest #test21NetTransferForPortfolioShouldNotReflectDeposits stamp: 'fr 11/14/2020 19:44:47'!
PASSED!

!testRun: #AccountReporterTest #test22NetTransferForPortfolioShouldNotReflectWithdraws stamp: 'fr 11/14/2020 19:44:47'!
PASSED!

!testRun: #AccountReporterTest #test23NetTransferForPortfoliosWithPortfoliosShouldReflectOutgoingAndIncomingTransfers stamp: 'fr 11/14/2020 19:44:47'!
PASSED!

!testRun: #AccountReporterTest #test24NetTransferForPortfoliosWithPortfoliosShouldNotRelfectDepositsOrWithdraws stamp: 'fr 11/14/2020 19:44:47'!
PASSED!

!testRun: #PortfolioReporterTest #test01 stamp: 'fr 11/14/2020 19:44:47'!
PASSED!

!testRun: #PortfolioReporterTest #test02 stamp: 'fr 11/14/2020 19:44:47'!
PASSED!

!testRun: #PortfolioReporterTest #test03 stamp: 'fr 11/14/2020 19:44:47'!
PASSED!

!testRun: #PortfolioReporterTest #test04 stamp: 'fr 11/14/2020 19:44:47'!
FAILURE!

!testRun: #PortfolioTest #test01BalanceOfPortfolioWithoutAccountsIsZero stamp: 'fr 11/14/2020 19:44:47'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithOneAccountIsAccountBalance stamp: 'fr 11/14/2020 19:44:47'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioIsCalculatedRecursivelyOnPortfolios stamp: 'fr 11/14/2020 19:44:47'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithoutAccountsHasNoRegisteredTransaction stamp: 'fr 11/14/2020 19:44:47'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredItsAccountsTransactions stamp: 'fr 11/14/2020 19:44:47'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioLooksForRegisteredTransactionsRecursively stamp: 'fr 11/14/2020 19:44:47'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioHasNoTransactionWhenHasNoAccounts stamp: 'fr 11/14/2020 19:44:47'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTransactionsIncludesAllItsAccountsTransactions stamp: 'fr 11/14/2020 19:44:47'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioTransactionsAreCalculatedRecursively stamp: 'fr 11/14/2020 19:44:47'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCanNotIncludeTheSameAccountMoreThanOnce stamp: 'fr 11/14/2020 19:44:47'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCanNotIncludeAccountOfItsPortfolios stamp: 'fr 11/14/2020 19:44:47'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioCanNotIncludeItself stamp: 'fr 11/14/2020 19:44:47'!
PASSED!

!testRun: #PortfolioTest #test13ComposedPortfolioCanNotHaveParentPortfolioAccount stamp: 'fr 11/14/2020 19:44:47'!
PASSED!

!testRun: #PortfolioTest #test14ComposedPortfolioCanNotHaveAccountOfAnyRootParentRecursively stamp: 'fr 11/14/2020 19:44:47'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotIncludeAnyOfTheComposedAccountOfPortfolioToAdd stamp: 'fr 11/14/2020 19:44:47'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'fr 11/14/2020 19:44:47'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'fr 11/14/2020 19:44:47'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'fr 11/14/2020 19:44:47'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'fr 11/14/2020 19:44:47'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'fr 11/14/2020 19:44:47'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'fr 11/14/2020 19:44:47'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'fr 11/14/2020 19:44:47'!
PASSED!

!testRun: #TransferTest #test01 stamp: 'fr 11/14/2020 19:44:47'!
PASSED!

!testRun: #TransferTest #test02 stamp: 'fr 11/14/2020 19:44:47'!
PASSED!

!testRun: #TransferTest #test03 stamp: 'fr 11/14/2020 19:44:47'!
PASSED!

!testRun: #TransferTest #test04 stamp: 'fr 11/14/2020 19:44:47'!
PASSED!

!testRun: #TransferTest #test05 stamp: 'fr 11/14/2020 19:44:47'!
PASSED!

!testRun: #TransferTest #test06 stamp: 'fr 11/14/2020 19:44:47'!
PASSED!

!testRun: #PortfolioReporterTest #test04 stamp: 'fr 11/14/2020 19:44:47'!
FAILURE!

!testRun: #PortfolioReporterTest #test01 stamp: 'fr 11/14/2020 19:44:53'!
PASSED!

!testRun: #PortfolioReporterTest #test02 stamp: 'fr 11/14/2020 19:44:53'!
PASSED!

!testRun: #PortfolioReporterTest #test03 stamp: 'fr 11/14/2020 19:44:53'!
PASSED!

!testRun: #PortfolioReporterTest #test04 stamp: 'fr 11/14/2020 19:44:53'!
FAILURE!

!testRun: #PortfolioReporterTest #test04 stamp: 'fr 11/14/2020 19:44:53'!
FAILURE!

!testRun: #AccountReporterTest #test01AccountSummaryForAccountWithNoTransactionsShouldJustShowBalanceZero stamp: 'fr 11/14/2020 19:44:57'!
PASSED!

!testRun: #AccountReporterTest #test02AccountSummaryShouldReflectDepositsOnAccounts stamp: 'fr 11/14/2020 19:44:57'!
PASSED!

!testRun: #AccountReporterTest #test03AccountSummaryShouldReflectWithdrawsOnAccounts stamp: 'fr 11/14/2020 19:44:57'!
PASSED!

!testRun: #AccountReporterTest #test04AccountSummaryShouldReflectOutgoingTransfersOnAccounts stamp: 'fr 11/14/2020 19:44:57'!
PASSED!

!testRun: #AccountReporterTest #test05AccountSummaryShouldReflectIncomingTransfersOnAccounts stamp: 'fr 11/14/2020 19:44:57'!
PASSED!

!testRun: #AccountReporterTest #test06AccountSummaryForPortfolioWithNoTransactionsShouldJustShowBalanceZero stamp: 'fr 11/14/2020 19:44:57'!
PASSED!

!testRun: #AccountReporterTest #test07AccountSummaryShouldReflectDepositsOnPortfoliosWithAccounts stamp: 'fr 11/14/2020 19:44:57'!
PASSED!

!testRun: #AccountReporterTest #test08AccountSummaryShouldReflectWithdrawsOnPortfoliosWithAccounts stamp: 'fr 11/14/2020 19:44:57'!
PASSED!

!testRun: #AccountReporterTest #test09AccountSummaryShouldReflectOutgoingAndIncomingTransfersOnPortfoliosWithAccounts stamp: 'fr 11/14/2020 19:44:57'!
PASSED!

!testRun: #AccountReporterTest #test10AccountSummaryShouldReflectDepositsOnPortfoliosWithPortfolios stamp: 'fr 11/14/2020 19:44:57'!
PASSED!

!testRun: #AccountReporterTest #test11AccountSummaryShouldReflectWithdrawsOnPortfoliosWithPortfolios stamp: 'fr 11/14/2020 19:44:57'!
PASSED!

!testRun: #AccountReporterTest #test12AccountSummaryShouldReflectOutgoingAndIncomingTransfersOnPortfoliosWithPortfolios stamp: 'fr 11/14/2020 19:44:57'!
PASSED!

!testRun: #AccountReporterTest #test13NetTransferForAccountWithNoTransactionsShouldBeZero stamp: 'fr 11/14/2020 19:44:57'!
PASSED!

!testRun: #AccountReporterTest #test14NetTransferForAccountWithAnOutgoingTransferShouldReflectItsValue stamp: 'fr 11/14/2020 19:44:57'!
PASSED!

!testRun: #AccountReporterTest #test15NetTransferForAccountWithAnIncomingTransferShouldReflectItsValue stamp: 'fr 11/14/2020 19:44:57'!
PASSED!

!testRun: #AccountReporterTest #test16NetTransferForAccountShouldNotReflectDeposits stamp: 'fr 11/14/2020 19:44:57'!
PASSED!

!testRun: #AccountReporterTest #test17NetTransferForAccountShouldNotReflectWithdraws stamp: 'fr 11/14/2020 19:44:57'!
PASSED!

!testRun: #AccountReporterTest #test18NetTransferForPortfolioWithNoTransactionsShouldBeZero stamp: 'fr 11/14/2020 19:44:57'!
PASSED!

!testRun: #AccountReporterTest #test19NetTransferForPortfolioWithAnOutgoingTransferShouldReflectItsValue stamp: 'fr 11/14/2020 19:44:57'!
PASSED!

!testRun: #AccountReporterTest #test20NetTransferForPortfolioWithAnIncomingTransferShouldReflectItsValue stamp: 'fr 11/14/2020 19:44:57'!
PASSED!

!testRun: #AccountReporterTest #test21NetTransferForPortfolioShouldNotReflectDeposits stamp: 'fr 11/14/2020 19:44:57'!
PASSED!

!testRun: #AccountReporterTest #test22NetTransferForPortfolioShouldNotReflectWithdraws stamp: 'fr 11/14/2020 19:44:57'!
PASSED!

!testRun: #AccountReporterTest #test23NetTransferForPortfoliosWithPortfoliosShouldReflectOutgoingAndIncomingTransfers stamp: 'fr 11/14/2020 19:44:57'!
PASSED!

!testRun: #AccountReporterTest #test24NetTransferForPortfoliosWithPortfoliosShouldNotRelfectDepositsOrWithdraws stamp: 'fr 11/14/2020 19:44:57'!
PASSED!

!testRun: #TransferTest #test01 stamp: 'fr 11/14/2020 19:45:18'!
PASSED!

!testRun: #TransferTest #test02 stamp: 'fr 11/14/2020 19:45:18'!
PASSED!

!testRun: #TransferTest #test03 stamp: 'fr 11/14/2020 19:45:18'!
PASSED!

!testRun: #TransferTest #test04 stamp: 'fr 11/14/2020 19:45:18'!
PASSED!

!testRun: #TransferTest #test05 stamp: 'fr 11/14/2020 19:45:18'!
PASSED!

!testRun: #TransferTest #test06 stamp: 'fr 11/14/2020 19:45:18'!
PASSED!

!testRun: #PortfolioTest #test01BalanceOfPortfolioWithoutAccountsIsZero stamp: 'fr 11/14/2020 19:45:20'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithOneAccountIsAccountBalance stamp: 'fr 11/14/2020 19:45:20'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioIsCalculatedRecursivelyOnPortfolios stamp: 'fr 11/14/2020 19:45:20'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithoutAccountsHasNoRegisteredTransaction stamp: 'fr 11/14/2020 19:45:20'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredItsAccountsTransactions stamp: 'fr 11/14/2020 19:45:20'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioLooksForRegisteredTransactionsRecursively stamp: 'fr 11/14/2020 19:45:20'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioHasNoTransactionWhenHasNoAccounts stamp: 'fr 11/14/2020 19:45:20'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTransactionsIncludesAllItsAccountsTransactions stamp: 'fr 11/14/2020 19:45:20'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioTransactionsAreCalculatedRecursively stamp: 'fr 11/14/2020 19:45:20'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCanNotIncludeTheSameAccountMoreThanOnce stamp: 'fr 11/14/2020 19:45:20'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCanNotIncludeAccountOfItsPortfolios stamp: 'fr 11/14/2020 19:45:20'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioCanNotIncludeItself stamp: 'fr 11/14/2020 19:45:20'!
PASSED!

!testRun: #PortfolioTest #test13ComposedPortfolioCanNotHaveParentPortfolioAccount stamp: 'fr 11/14/2020 19:45:20'!
PASSED!

!testRun: #PortfolioTest #test14ComposedPortfolioCanNotHaveAccountOfAnyRootParentRecursively stamp: 'fr 11/14/2020 19:45:20'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotIncludeAnyOfTheComposedAccountOfPortfolioToAdd stamp: 'fr 11/14/2020 19:45:20'!
PASSED!

!testRun: #AccountReporterTest #test01AccountSummaryForAccountWithNoTransactionsShouldJustShowBalanceZero stamp: 'fr 11/14/2020 19:45:27'!
PASSED!

!testRun: #AccountReporterTest #test02AccountSummaryShouldReflectDepositsOnAccounts stamp: 'fr 11/14/2020 19:45:27'!
PASSED!

!testRun: #AccountReporterTest #test03AccountSummaryShouldReflectWithdrawsOnAccounts stamp: 'fr 11/14/2020 19:45:27'!
PASSED!

!testRun: #AccountReporterTest #test04AccountSummaryShouldReflectOutgoingTransfersOnAccounts stamp: 'fr 11/14/2020 19:45:27'!
PASSED!

!testRun: #AccountReporterTest #test05AccountSummaryShouldReflectIncomingTransfersOnAccounts stamp: 'fr 11/14/2020 19:45:27'!
PASSED!

!testRun: #AccountReporterTest #test06AccountSummaryForPortfolioWithNoTransactionsShouldJustShowBalanceZero stamp: 'fr 11/14/2020 19:45:27'!
PASSED!

!testRun: #AccountReporterTest #test07AccountSummaryShouldReflectDepositsOnPortfoliosWithAccounts stamp: 'fr 11/14/2020 19:45:27'!
PASSED!

!testRun: #AccountReporterTest #test08AccountSummaryShouldReflectWithdrawsOnPortfoliosWithAccounts stamp: 'fr 11/14/2020 19:45:27'!
PASSED!

!testRun: #AccountReporterTest #test09AccountSummaryShouldReflectOutgoingAndIncomingTransfersOnPortfoliosWithAccounts stamp: 'fr 11/14/2020 19:45:27'!
PASSED!

!testRun: #AccountReporterTest #test10AccountSummaryShouldReflectDepositsOnPortfoliosWithPortfolios stamp: 'fr 11/14/2020 19:45:27'!
PASSED!

!testRun: #AccountReporterTest #test11AccountSummaryShouldReflectWithdrawsOnPortfoliosWithPortfolios stamp: 'fr 11/14/2020 19:45:27'!
PASSED!

!testRun: #AccountReporterTest #test12AccountSummaryShouldReflectOutgoingAndIncomingTransfersOnPortfoliosWithPortfolios stamp: 'fr 11/14/2020 19:45:27'!
PASSED!

!testRun: #AccountReporterTest #test13NetTransferForAccountWithNoTransactionsShouldBeZero stamp: 'fr 11/14/2020 19:45:27'!
PASSED!

!testRun: #AccountReporterTest #test14NetTransferForAccountWithAnOutgoingTransferShouldReflectItsValue stamp: 'fr 11/14/2020 19:45:27'!
PASSED!

!testRun: #AccountReporterTest #test15NetTransferForAccountWithAnIncomingTransferShouldReflectItsValue stamp: 'fr 11/14/2020 19:45:27'!
PASSED!

!testRun: #AccountReporterTest #test16NetTransferForAccountShouldNotReflectDeposits stamp: 'fr 11/14/2020 19:45:27'!
PASSED!

!testRun: #AccountReporterTest #test17NetTransferForAccountShouldNotReflectWithdraws stamp: 'fr 11/14/2020 19:45:27'!
PASSED!

!testRun: #AccountReporterTest #test18NetTransferForPortfolioWithNoTransactionsShouldBeZero stamp: 'fr 11/14/2020 19:45:27'!
PASSED!

!testRun: #AccountReporterTest #test19NetTransferForPortfolioWithAnOutgoingTransferShouldReflectItsValue stamp: 'fr 11/14/2020 19:45:27'!
PASSED!

!testRun: #AccountReporterTest #test20NetTransferForPortfolioWithAnIncomingTransferShouldReflectItsValue stamp: 'fr 11/14/2020 19:45:27'!
PASSED!

!testRun: #AccountReporterTest #test21NetTransferForPortfolioShouldNotReflectDeposits stamp: 'fr 11/14/2020 19:45:27'!
PASSED!

!testRun: #AccountReporterTest #test22NetTransferForPortfolioShouldNotReflectWithdraws stamp: 'fr 11/14/2020 19:45:27'!
PASSED!

!testRun: #AccountReporterTest #test23NetTransferForPortfoliosWithPortfoliosShouldReflectOutgoingAndIncomingTransfers stamp: 'fr 11/14/2020 19:45:27'!
PASSED!

!testRun: #AccountReporterTest #test24NetTransferForPortfoliosWithPortfoliosShouldNotRelfectDepositsOrWithdraws stamp: 'fr 11/14/2020 19:45:27'!
PASSED!

!testRun: #PortfolioTest #test01BalanceOfPortfolioWithoutAccountsIsZero stamp: 'fr 11/14/2020 19:45:42'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithOneAccountIsAccountBalance stamp: 'fr 11/14/2020 19:45:42'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioIsCalculatedRecursivelyOnPortfolios stamp: 'fr 11/14/2020 19:45:42'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithoutAccountsHasNoRegisteredTransaction stamp: 'fr 11/14/2020 19:45:42'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredItsAccountsTransactions stamp: 'fr 11/14/2020 19:45:42'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioLooksForRegisteredTransactionsRecursively stamp: 'fr 11/14/2020 19:45:42'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioHasNoTransactionWhenHasNoAccounts stamp: 'fr 11/14/2020 19:45:42'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTransactionsIncludesAllItsAccountsTransactions stamp: 'fr 11/14/2020 19:45:42'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioTransactionsAreCalculatedRecursively stamp: 'fr 11/14/2020 19:45:42'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCanNotIncludeTheSameAccountMoreThanOnce stamp: 'fr 11/14/2020 19:45:42'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCanNotIncludeAccountOfItsPortfolios stamp: 'fr 11/14/2020 19:45:42'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioCanNotIncludeItself stamp: 'fr 11/14/2020 19:45:42'!
PASSED!

!testRun: #PortfolioTest #test13ComposedPortfolioCanNotHaveParentPortfolioAccount stamp: 'fr 11/14/2020 19:45:42'!
PASSED!

!testRun: #PortfolioTest #test14ComposedPortfolioCanNotHaveAccountOfAnyRootParentRecursively stamp: 'fr 11/14/2020 19:45:42'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotIncludeAnyOfTheComposedAccountOfPortfolioToAdd stamp: 'fr 11/14/2020 19:45:42'!
PASSED!

!testRun: #PortfolioReporterTest #test01 stamp: 'fr 11/14/2020 19:45:44'!
PASSED!

!testRun: #PortfolioReporterTest #test02 stamp: 'fr 11/14/2020 19:45:46'!
PASSED!

!testRun: #PortfolioReporterTest #test03 stamp: 'fr 11/14/2020 19:45:48'!
PASSED!

!testRun: #PortfolioReporterTest #test04 stamp: 'fr 11/14/2020 19:45:50'!
FAILURE!

!testRun: #PortfolioReporterTest #test04 stamp: 'fr 11/14/2020 19:45:50'!
FAILURE!

----SNAPSHOT----(14 November 2020 19:45:54) CuisUniversity-4384.image priorSource: 17699351!

----QUIT----(14 November 2020 19:54:40) CuisUniversity-4384.image priorSource: 17730881!

----STARTUP---- (15 November 2020 18:32:45) as /home/fede/Documentos/Facultad/Inge1/Cuises/linux64/CuisUniversity-4384.image!


!testRun: #AccountReporterTest #test01AccountSummaryForAccountWithNoTransactionsShouldJustShowBalanceZero stamp: 'fr 11/15/2020 18:33:17'!
PASSED!

!testRun: #AccountReporterTest #test02AccountSummaryShouldReflectDepositsOnAccounts stamp: 'fr 11/15/2020 18:33:17'!
PASSED!

!testRun: #AccountReporterTest #test03AccountSummaryShouldReflectWithdrawsOnAccounts stamp: 'fr 11/15/2020 18:33:17'!
PASSED!

!testRun: #AccountReporterTest #test04AccountSummaryShouldReflectOutgoingTransfersOnAccounts stamp: 'fr 11/15/2020 18:33:17'!
PASSED!

!testRun: #AccountReporterTest #test05AccountSummaryShouldReflectIncomingTransfersOnAccounts stamp: 'fr 11/15/2020 18:33:17'!
PASSED!

!testRun: #AccountReporterTest #test06AccountSummaryForPortfolioWithNoTransactionsShouldJustShowBalanceZero stamp: 'fr 11/15/2020 18:33:17'!
PASSED!

!testRun: #AccountReporterTest #test07AccountSummaryShouldReflectDepositsOnPortfoliosWithAccounts stamp: 'fr 11/15/2020 18:33:17'!
PASSED!

!testRun: #AccountReporterTest #test08AccountSummaryShouldReflectWithdrawsOnPortfoliosWithAccounts stamp: 'fr 11/15/2020 18:33:17'!
PASSED!

!testRun: #AccountReporterTest #test09AccountSummaryShouldReflectOutgoingAndIncomingTransfersOnPortfoliosWithAccounts stamp: 'fr 11/15/2020 18:33:17'!
PASSED!

!testRun: #AccountReporterTest #test10AccountSummaryShouldReflectDepositsOnPortfoliosWithPortfolios stamp: 'fr 11/15/2020 18:33:17'!
PASSED!

!testRun: #AccountReporterTest #test11AccountSummaryShouldReflectWithdrawsOnPortfoliosWithPortfolios stamp: 'fr 11/15/2020 18:33:17'!
PASSED!

!testRun: #AccountReporterTest #test12AccountSummaryShouldReflectOutgoingAndIncomingTransfersOnPortfoliosWithPortfolios stamp: 'fr 11/15/2020 18:33:17'!
PASSED!

!testRun: #AccountReporterTest #test13NetTransferForAccountWithNoTransactionsShouldBeZero stamp: 'fr 11/15/2020 18:33:17'!
PASSED!

!testRun: #AccountReporterTest #test14NetTransferForAccountWithAnOutgoingTransferShouldReflectItsValue stamp: 'fr 11/15/2020 18:33:17'!
PASSED!

!testRun: #AccountReporterTest #test15NetTransferForAccountWithAnIncomingTransferShouldReflectItsValue stamp: 'fr 11/15/2020 18:33:17'!
PASSED!

!testRun: #AccountReporterTest #test16NetTransferForAccountShouldNotReflectDeposits stamp: 'fr 11/15/2020 18:33:17'!
PASSED!

!testRun: #AccountReporterTest #test17NetTransferForAccountShouldNotReflectWithdraws stamp: 'fr 11/15/2020 18:33:17'!
PASSED!

!testRun: #AccountReporterTest #test18NetTransferForPortfolioWithNoTransactionsShouldBeZero stamp: 'fr 11/15/2020 18:33:17'!
PASSED!

!testRun: #AccountReporterTest #test19NetTransferForPortfolioWithAnOutgoingTransferShouldReflectItsValue stamp: 'fr 11/15/2020 18:33:17'!
PASSED!

!testRun: #AccountReporterTest #test20NetTransferForPortfolioWithAnIncomingTransferShouldReflectItsValue stamp: 'fr 11/15/2020 18:33:17'!
PASSED!

!testRun: #AccountReporterTest #test21NetTransferForPortfolioShouldNotReflectDeposits stamp: 'fr 11/15/2020 18:33:17'!
PASSED!

!testRun: #AccountReporterTest #test22NetTransferForPortfolioShouldNotReflectWithdraws stamp: 'fr 11/15/2020 18:33:17'!
PASSED!

!testRun: #AccountReporterTest #test23NetTransferForPortfoliosWithPortfoliosShouldReflectOutgoingAndIncomingTransfers stamp: 'fr 11/15/2020 18:33:17'!
PASSED!

!testRun: #AccountReporterTest #test24NetTransferForPortfoliosWithPortfoliosShouldNotRelfectDepositsOrWithdraws stamp: 'fr 11/15/2020 18:33:17'!
PASSED!

!testRun: #PortfolioReporterTest #test01 stamp: 'fr 11/15/2020 18:33:31'!
PASSED!

!testRun: #PortfolioReporterTest #test02 stamp: 'fr 11/15/2020 18:33:31'!
PASSED!

!testRun: #PortfolioReporterTest #test03 stamp: 'fr 11/15/2020 18:33:31'!
PASSED!

!testRun: #PortfolioReporterTest #test04 stamp: 'fr 11/15/2020 18:33:31'!
FAILURE!

!testRun: #PortfolioReporterTest #test04 stamp: 'fr 11/15/2020 18:33:31'!
FAILURE!
!PortfolioReporterTest methodsFor: 'as yet unclassified' stamp: 'fr 11/15/2020 18:35:01' prior: 50884717!
test04

	| portfolio |
	portfolio _ Portfolio named: 'Portfolio de Fede'.

	self assert: [portfolio specialReport = (OrderedCollection with: 'Portfolio de Fede')]! !

!testRun: #PortfolioReporterTest #test04 stamp: 'fr 11/15/2020 18:35:55'!
FAILURE!
!Portfolio methodsFor: 'report' stamp: 'fr 11/15/2020 18:36:13' prior: 50884651!
specialReport
	
	
	! !
!PortfolioReporterTest methodsFor: 'as yet unclassified' stamp: 'fr 11/15/2020 18:36:25' prior: 50885870!
test04

	| portfolio |
	portfolio _ Portfolio named: 'Portfolio de Fede'.

	self assert: [portfolio specialReport = (OrderedCollection with: 'Portfolio de Fede' with: 'Balance = 0')]! !
!PortfolioReporterTest methodsFor: 'as yet unclassified' stamp: 'fr 11/15/2020 18:36:30' prior: 50885886!
test04

	| portfolio |
	portfolio _ Portfolio named: 'Portfolio de Fede'.

	self assert: [portfolio specialReport = (OrderedCollection with: 'Portfolio de Fede' with: ' Balance = 0')]! !

!testRun: #PortfolioReporterTest #test04 stamp: 'fr 11/15/2020 18:38:31'!
FAILURE!
!Portfolio methodsFor: 'report' stamp: 'fr 11/15/2020 18:39:01' prior: 50885881!
specialReport
	
	^OrderedCollection with: 'Portfolio de Fede' with: ' Balance = 0'
	
	! !

!testRun: #PortfolioReporterTest #test04 stamp: 'fr 11/15/2020 18:39:04'!
FAILURE!

!testRun: #PortfolioReporterTest #test04 stamp: 'fr 11/15/2020 18:39:08'!
PASSED!

!testRun: #PortfolioReporterTest #test01 stamp: 'fr 11/15/2020 18:39:08'!
PASSED!

!testRun: #PortfolioReporterTest #test02 stamp: 'fr 11/15/2020 18:39:08'!
PASSED!

!testRun: #PortfolioReporterTest #test03 stamp: 'fr 11/15/2020 18:39:08'!
PASSED!

!testRun: #PortfolioReporterTest #test04 stamp: 'fr 11/15/2020 18:39:08'!
PASSED!
!PortfolioReporterTest methodsFor: 'as yet unclassified' stamp: 'fr 11/15/2020 18:39:11'!
test05

	| portfolio |
	portfolio _ Portfolio named: 'Portfolio de Fede'.

	self assert: [portfolio specialReport = (OrderedCollection with: 'Portfolio de Fede' with: ' Balance = 0')]! !
!PortfolioReporterTest methodsFor: 'as yet unclassified' stamp: 'fr 11/15/2020 18:40:29' prior: 50885929!
test05

	| portfolio account |
	account _ ReceptiveAccount named: 'Cuenta de Fede'.
	Deposit register: 100 on: account.
	Withdraw register: 50 on: account.
	 
	portfolio _ Portfolio named: 'Portfolio de Fede'.

	self assert: [portfolio specialReport = (OrderedCollection with: 'Portfolio de Fede' with: ' Balance = 0')]! !
!PortfolioReporterTest methodsFor: 'as yet unclassified' stamp: 'fr 11/15/2020 18:40:35' prior: 50885939!
test05

	| portfolio account |
	account _ ReceptiveAccount named: 'Cuenta de Fede'.
	Deposit register: 100 on: account.
	Withdraw register: 50 on: account.
	 
	portfolio _ Portfolio named: 'Portfolio de Fede' with: account.

	self assert: [portfolio specialReport = (OrderedCollection with: 'Portfolio de Fede' with: ' Balance = 0')]! !
!PortfolioReporterTest methodsFor: 'as yet unclassified' stamp: 'fr 11/15/2020 18:41:13' prior: 50885953!
test05

	| portfolio account anotherAccount |
	account _ ReceptiveAccount named: 'Cuenta de Fede'.
	Deposit register: 100 on: account.
	Withdraw register: 50 on: account.
	Transfer move: 10 from: account to: anotherAccount.
	Transfer move: 5 from: anotherAccount to: account.
	portfolio _ Portfolio named: 'Portfolio de Fede' with: account.

	self assert: [portfolio specialReport = (OrderedCollection with: 'Portfolio de Fede' with: ' Balance = 0')]! !
!PortfolioReporterTest methodsFor: 'as yet unclassified' stamp: 'fr 11/15/2020 18:44:50' prior: 50885967!
test05

	| portfolio account anotherAccount expectedReport |
	account _ ReceptiveAccount named: 'Cuenta de Fede'.
	anotherAccount _ ReceptiveAccount new.
	Deposit register: 100 on: account.
	Withdraw register: 50 on: account.
	Transfer move: 10 from: account to: anotherAccount.
	Transfer move: 5 from: anotherAccount to: account.
	portfolio _ Portfolio named: 'Portfolio de Fede' with: account.
	expectedReport _ OrderedCollection with: 'Portfolio de Fede'.
	expectedReport add: ' Cuenta de Fede'.
	expectedReport add: '  Dep�sito por 100.'.
	expectedReport add: '  Extracci�n por 50.'.
	expectedReport add: '  Salida por transferencia de 10.'.
	expectedReport add: '  Entrada por transferencia de 5.'.
	self assert: [portfolio specialReport = expectedReport]! !
!PortfolioReporterTest methodsFor: 'as yet unclassified' stamp: 'fr 11/15/2020 18:45:14' prior: 50885985!
test05

	| portfolio account anotherAccount expectedReport |
	account _ ReceptiveAccount named: 'Cuenta de Fede'.
	anotherAccount _ ReceptiveAccount new.
	Deposit register: 100 on: account.
	Withdraw register: 50 on: account.
	Transfer move: 10 from: account to: anotherAccount.
	Transfer move: 5 from: anotherAccount to: account.
	portfolio _ Portfolio named: 'Portfolio de Fede' with: account.
	expectedReport _ OrderedCollection with: 'Portfolio de Fede'.
	expectedReport add: ' Cuenta de Fede'.
	expectedReport add: '  Dep�sito por 100.'.
	expectedReport add: '  Extracci�n por 50.'.
	expectedReport add: '  Salida por transferencia de 10.'.
	expectedReport add: '  Entrada por transferencia de 5.'.
	expectedReport add: ' Balance = 45'.
	self assert: [portfolio specialReport = expectedReport]! !
!PortfolioReporterTest methodsFor: 'as yet unclassified' stamp: 'fr 11/15/2020 18:45:40' prior: 50886013!
test05

	| portfolio account anotherAccount expectedReport |
	account _ ReceptiveAccount named: 'Cuenta de Fede'.
	anotherAccount _ ReceptiveAccount new.
	Deposit register: 100 on: account.
	Withdraw register: 50 on: account.
	Transfer move: 10 from: account to: anotherAccount.
	Transfer move: 5 from: anotherAccount to: account.
	portfolio _ Portfolio named: 'Portfolio de Fede' with: account.
	expectedReport _ OrderedCollection with: 'Portfolio de Fede'.
	expectedReport add: ' Cuenta de Fede'.
	expectedReport add: '  Dep�sito por 100.'.
	expectedReport add: '  Extracci�n por 50.'.
	expectedReport add: '  Salida por transferencia de 10.'.
	expectedReport add: '  Entrada por transferencia de 5.'.
	expectedReport add: '  Balance = 45'.
	expectedReport add: ' Balance = 45'.
	self assert: [portfolio specialReport = expectedReport]! !

!testRun: #PortfolioReporterTest #test05 stamp: 'fr 11/15/2020 18:45:42'!
FAILURE!
!Portfolio methodsFor: 'report' stamp: 'fr 11/15/2020 18:47:29' prior: 50885907!
specialReport
	
	| expectedReport |
	accounts ifEmpty: [	expectedReport _ OrderedCollection with: 'Portfolio de Fede' with: ' Balance = 0'
] ifNotEmpty: [expectedReport _ OrderedCollection with: 'Portfolio de Fede'.
	expectedReport add: ' Cuenta de Fede'.
	expectedReport add: '  Dep�sito por 100.'.
	expectedReport add: '  Extracci�n por 50.'.
	expectedReport add: '  Salida por transferencia de 10.'.
	expectedReport add: '  Entrada por transferencia de 5.'.
	expectedReport add: '  Balance = 45'.
	expectedReport add: ' Balance = 45'.].
	
	^expectedReport 
	
	! !

!testRun: #PortfolioReporterTest #test05 stamp: 'fr 11/15/2020 18:47:31'!
PASSED!

!testRun: #PortfolioReporterTest #test01 stamp: 'fr 11/15/2020 18:47:31'!
PASSED!

!testRun: #PortfolioReporterTest #test02 stamp: 'fr 11/15/2020 18:47:31'!
PASSED!

!testRun: #PortfolioReporterTest #test03 stamp: 'fr 11/15/2020 18:47:31'!
PASSED!

!testRun: #PortfolioReporterTest #test04 stamp: 'fr 11/15/2020 18:47:31'!
PASSED!

!testRun: #PortfolioReporterTest #test05 stamp: 'fr 11/15/2020 18:47:31'!
PASSED!
!PortfolioReporterTest methodsFor: 'as yet unclassified' stamp: 'fr 11/15/2020 18:47:36'!
test06

	| portfolio account anotherAccount expectedReport |
	account _ ReceptiveAccount named: 'Cuenta de Fede'.
	anotherAccount _ ReceptiveAccount new.
	Deposit register: 100 on: account.
	Withdraw register: 50 on: account.
	Transfer move: 10 from: account to: anotherAccount.
	Transfer move: 5 from: anotherAccount to: account.
	portfolio _ Portfolio named: 'Portfolio de Fede' with: account.
	expectedReport _ OrderedCollection with: 'Portfolio de Fede'.
	expectedReport add: ' Cuenta de Fede'.
	expectedReport add: '  Dep�sito por 100.'.
	expectedReport add: '  Extracci�n por 50.'.
	expectedReport add: '  Salida por transferencia de 10.'.
	expectedReport add: '  Entrada por transferencia de 5.'.
	expectedReport add: '  Balance = 45'.
	expectedReport add: ' Balance = 45'.
	self assert: [portfolio specialReport = expectedReport]! !

nil asString. !
!PortfolioReporterTest methodsFor: 'as yet unclassified' stamp: 'fr 11/15/2020 18:53:42' prior: 50886111!
test06

	| portfolio account anotherAccount expectedReport anotherPortfolio |
	account _ ReceptiveAccount named: 'Cuenta de Fede'.
	anotherAccount _ ReceptiveAccount named: 'Cuenta de Juan'.
	Deposit register: 100 on: account.
	Withdraw register: 50 on: account.
	Transfer move: 10 from: account to: anotherAccount.
	Transfer move: 5 from: anotherAccount to: account.
	anotherPortfolio _ Portfolio named: 'Portfolio de Juan' with: anotherAccount.
	portfolio _ Portfolio named: 'Portfolio de Fede' with: account.
	expectedReport _ OrderedCollection with: 'Portfolio de Fede'.
	expectedReport add: ' Cuenta de Fede'.
	expectedReport add: '  Dep�sito por 100.'.
	expectedReport add: '  Extracci�n por 50.'.
	expectedReport add: '  Salida por transferencia de 10.'.
	expectedReport add: '  Entrada por transferencia de 5.'.
	expectedReport add: '  Balance = 45'.
	expectedReport add: ' Portfolio de Juan'.
	expectedReport add: '  Cuenta de Juan'.
	expectedReport add: '   Entrada por transferencia de 10.'.
	expectedReport add: '   Salida por transferencia de 5.'.
	expectedReport add: '   Balance = 5'.
	expectedReport add: ' Balance = 50'.
	self assert: [portfolio specialReport = expectedReport]! !
!PortfolioReporterTest methodsFor: 'as yet unclassified' stamp: 'fr 11/15/2020 18:53:56' prior: 50886142!
test06

	| portfolio account anotherAccount expectedReport anotherPortfolio |
	account _ ReceptiveAccount named: 'Cuenta de Fede'.
	anotherAccount _ ReceptiveAccount named: 'Cuenta de Juan'.
	Deposit register: 100 on: account.
	Withdraw register: 50 on: account.
	Transfer move: 10 from: account to: anotherAccount.
	Transfer move: 5 from: anotherAccount to: account.
	anotherPortfolio _ Portfolio named: 'Portfolio de Juan' with: anotherAccount.
	portfolio _ Portfolio named: 'Portfolio de Fede' with: account with: anotherPortfolio.
	expectedReport _ OrderedCollection with: 'Portfolio de Fede'.
	expectedReport add: ' Cuenta de Fede'.
	expectedReport add: '  Dep�sito por 100.'.
	expectedReport add: '  Extracci�n por 50.'.
	expectedReport add: '  Salida por transferencia de 10.'.
	expectedReport add: '  Entrada por transferencia de 5.'.
	expectedReport add: '  Balance = 45'.
	expectedReport add: ' Portfolio de Juan'.
	expectedReport add: '  Cuenta de Juan'.
	expectedReport add: '   Entrada por transferencia de 10.'.
	expectedReport add: '   Salida por transferencia de 5.'.
	expectedReport add: '   Balance = 5'.
	expectedReport add: ' Balance = 50'.
	self assert: [portfolio specialReport = expectedReport]! !

!testRun: #PortfolioReporterTest #test06 stamp: 'fr 11/15/2020 18:54:22'!
FAILURE!
!Portfolio methodsFor: 'report' stamp: 'fr 11/15/2020 18:55:42' prior: 50886074!
specialReport
	
	| expectedReport |
	expectedReport _ OrderedCollection new.	
	^expectedReport 
	
	! !
!Portfolio methodsFor: 'report' stamp: 'fr 11/15/2020 18:55:45' prior: 50886227!
specialReport
	
	| report |
	report _ OrderedCollection new.	
	^report 
	
	! !
!Portfolio methodsFor: 'report' stamp: 'fr 11/15/2020 18:57:18' prior: 50886233!
specialReport
	
	| report |
	report _ OrderedCollection new.
	self addReportTo: report withIndentation: 0
	
	! !
!Portfolio methodsFor: 'report' stamp: 'fr 11/15/2020 18:57:30' prior: 50886238!
specialReport
	
	| report |
	report _ OrderedCollection new.
	self addReportTo: report withIndentation: 0.
	^report
	
	! !

!testRun: #PortfolioReporterTest #test06 stamp: 'fr 11/15/2020 18:58:00'!
ERROR!
!Portfolio methodsFor: 'report' stamp: 'fr 11/15/2020 18:58:07'!
addReportTo: anOrderedCollection withIndentation: aSmallInteger 
	self shouldBeImplemented.! !
!Portfolio methodsFor: 'report' stamp: 'fr 11/15/2020 18:58:18' prior: 50886254!
addReportTo: anOrderedCollection withIndentation: aSmallInteger 
	
	! !
!Portfolio methodsFor: 'report' stamp: 'fr 11/15/2020 18:58:20' prior: 50886260!
addReportTo: aRpoert withIndentation: aSmallInteger 
	
	! !
!Portfolio methodsFor: 'report' stamp: 'fr 11/15/2020 18:58:26' prior: 50886265!
addReportTo: aReport withIndentation: aSmallInteger 
	
	! !
!Portfolio methodsFor: 'report' stamp: 'fr 11/15/2020 18:58:32' prior: 50886270!
addReportTo: aReport withIndentation: anIndentationValue 
	
	! !
!Portfolio methodsFor: 'report' stamp: 'fr 11/15/2020 18:58:34' prior: 50886275!
addReportTo: aReport withIndentation: anIndentationValue 

	
	
	! !
!Portfolio methodsFor: 'report' stamp: 'fr 11/15/2020 19:01:17' prior: 50886280!
addReportTo: aReport withIndentation: anIndentationValue 
	
	| indentedName  indentedBalance |
	indentedName _ name.
	anIndentationValue timesRepeat: (indentedName _ ' ',indentedName).
	aReport add: indentedName.
	accounts do: [:anAccount | 
		anAccount addReportTo: aReport withIndentation: 	anIndentationValue + 1
	]
	
	
	! !
!Portfolio methodsFor: 'report' stamp: 'fr 11/15/2020 19:01:56' prior: 50886285!
addReportTo: aReport withIndentation: anIndentationValue 
	
	| indentedName  indentedBalance |
	indentedName _ name.
	indentedBalance _ self balance.
	anIndentationValue timesRepeat: (indentedName _ ' ',indentedName).
	(anIndentationValue+1) timesRepeat: (indentedBalance _ ' ',indentedBalance ).
	aReport add: indentedName.
	accounts do: [:anAccount | 
		anAccount addReportTo: aReport withIndentation: 	anIndentationValue + 1
	]
	
	
	! !
!Portfolio methodsFor: 'report' stamp: 'fr 11/15/2020 19:01:57' prior: 50886298!
addReportTo: aReport withIndentation: anIndentationValue 
	
	| indentedName  indentedBalance |
	indentedName _ name.
	indentedBalance _ self balance.
	anIndentationValue timesRepeat: (indentedName _ ' ',indentedName).
	(anIndentationValue+1) timesRepeat: (indentedBalance _ ' ',indentedBalance).
	aReport add: indentedName.
	accounts do: [:anAccount | 
		anAccount addReportTo: aReport withIndentation: 	anIndentationValue + 1
	]
	
	
	! !
!Portfolio methodsFor: 'report' stamp: 'fr 11/15/2020 19:02:08' prior: 50886315!
addReportTo: aReport withIndentation: anIndentationValue 
	
	| indentedName  indentedBalance |
	indentedName _ name.
	indentedBalance _ self balance.
	anIndentationValue timesRepeat: (indentedName _ ' ',indentedName).
	(anIndentationValue+1) timesRepeat: (indentedBalance _ ' ',indentedBalance).
	aReport add: indentedName.
	accounts do: [:anAccount | 
		anAccount addReportTo: aReport withIndentation: 	anIndentationValue + 1
	].
	aReport add: indentedBalance
	! !

!testRun: #PortfolioReporterTest #test06 stamp: 'fr 11/15/2020 19:03:15'!
ERROR!
!Portfolio methodsFor: 'report' stamp: 'fr 11/15/2020 19:03:54' prior: 50886332!
addReportTo: aReport withIndentation: anIndentationValue 
	
	| indentedName  indentedBalance |
	indentedName _ name.
	indentedBalance _ self balance.
	anIndentationValue timesRepeat: (indentedName _ ' ',indentedName).
	(anIndentationValue+1) timesRepeat: (indentedBalance _ ' ',indentedBalance asString).
	aReport add: indentedName.
	accounts do: [:anAccount | 
		anAccount addReportTo: aReport withIndentation: 	anIndentationValue + 1
	].
	aReport add: indentedBalance
	! !
!Portfolio methodsFor: 'report' stamp: 'fr 11/15/2020 19:03:59' prior: 50886352!
addReportTo: aReport withIndentation: anIndentationValue 
	
	| indentedName  indentedBalance |
	indentedName _ name.
	indentedBalance _ self balance.
	anIndentationValue timesRepeat: (indentedName _ ' ',indentedName).
	(anIndentationValue+1) timesRepeat: (indentedBalance _ ' ',indentedBalance).
	aReport add: indentedName.
	accounts do: [:anAccount | 
		anAccount addReportTo: aReport withIndentation: 	anIndentationValue + 1
	].
	aReport add: indentedBalance
	! !
!Portfolio methodsFor: 'report' stamp: 'fr 11/15/2020 19:04:02' prior: 50886370!
addReportTo: aReport withIndentation: anIndentationValue 
	
	| indentedName  indentedBalance |
	indentedName _ name.
	indentedBalance _ self balance asString.
	anIndentationValue timesRepeat: (indentedName _ ' ',indentedName).
	(anIndentationValue+1) timesRepeat: (indentedBalance _ ' ',indentedBalance).
	aReport add: indentedName.
	accounts do: [:anAccount | 
		anAccount addReportTo: aReport withIndentation: 	anIndentationValue + 1
	].
	aReport add: indentedBalance
	! !

!testRun: #PortfolioReporterTest #test06 stamp: 'fr 11/15/2020 19:04:03'!
ERROR!
!ReceptiveAccount methodsFor: 'report' stamp: 'fr 11/15/2020 19:04:08'!
addReportTo: anOrderedCollection withIndentation: aSmallInteger 
	self shouldBeImplemented.! !
!ReceptiveAccount methodsFor: 'report' stamp: 'fr 11/15/2020 19:04:10' prior: 50886408!
addReportTo: anOrderedCollection withIndentation: aSmallInteger 
	
	! !
!ReceptiveAccount methodsFor: 'report' stamp: 'fr 11/15/2020 19:06:58' prior: 50886414!
addReportTo: anOrderedCollection withIndentation: aSmallInteger 
	
	| summaryReporter report |
	
	summaryReporter _ SummaryReporter for: self.
	report _ summaryReporter accountSummary.
	report _ report collect: [:aReportElement | aSmallInteger timesRepeat: ' ',aReportElement]
	
	! !

col _ OrderedCollection with: 'Hola' with: 'Fede' with: 'Chau'.!

col collect: [:e | 3 timesRepeat: ' ',e]. !

col collect: [:e | (3 timesRepeat: ' ',e)]. !

col _ OrderedCollection with: 'Hola' with: 'Fede' with: 'Chau'.!

col collect: [:e | (3 timesRepeat: ' ',e)]. !

col collect: [:e | (3 timesRepeat: ' ',e). e].  !

col _ OrderedCollection with: 'Hola' with: 'Fede' with: 'Chau'.!

col _ OrderedCollection with: 'Hola' with: 'Fede' with: 'Chau'.!

col collect: [:e | ' ',e].  !

3 timesRepeat: ' ','Hola'.  !

indented _ OrderedCollection new.!

col _ OrderedCollection with: 'Hola' with: 'Fede' with: 'Chau'.

indented _ OrderedCollection new.
!

col inject: indented into: [:indentedCol :e | 3 timesRepeat: ' ',e]. !

dummy!

col collect: [:e | 3 timesRepeat: (dummy _ ' ',e). dummy]. !

col _ OrderedCollection with: 'Hola' with: 'Fede' with: 'Chau'.!

col collect: [:e | 3 timesRepeat: (dummy _ ' ',e). dummy].!

col _ OrderedCollection with: 'Hola' with: 'Fede' with: 'Chau'.!

indented _ OrderedCollection new.!

col _ OrderedCollection with: 'Hola' with: 'Fede' with: 'Chau'.!

col collect: [:e | dummy _ e. 3 timesRepeat: (dummy _ ' ',dummy). dummy]. !

dummy _ nil. !

col collect: [:e | dummy _ e. 3 timesRepeat: (dummy _ ' ',dummy). dummy]. !

col _ OrderedCollection with: 'Hola' with: 'Fede' with: 'Chau'.
dummy _ nil. 
col collect: [:e | dummy _ e. 3 timesRepeat: (dummy _ ' ',dummy). dummy]. !

col _ OrderedCollection with: 'Hola' with: 'Fede' with: 'Chau'.
dummy _ nil. 
col collect: [:e | dummy _ e. 3 timesRepeat: (dummy _ ' ',dummy). dummy].!

col _ OrderedCollection with: 'Hola' with: 'Fede' with: 'Chau'.
dummy _ nil. 
col collect: [:e | dummy _ e. (3 timesRepeat: (dummy _ ' ',dummy)). dummy].!

dummy _ 'Hola'.!

3 timesRepeat: (dummy _ ' ',dummy).!

dummy !

indentation _ ''.!

3 timesRepeat: [indentation _ ' ',indentation].!

indentation !

col collect: [:e | 3 timesRepeat: ' ',e]. !

col _ OrderedCollection with: 'Hola' with: 'Fede' with: 'Chau'.
indentation _ ''.
3 timesRepeat: [indentation _ ' ',indentation].
col collect: [:e | indentation,e]. !
!ReceptiveAccount methodsFor: 'report' stamp: 'fr 11/15/2020 19:27:09' prior: 50886419!
addReportTo: anOrderedCollection withIndentation: aSmallInteger 
	
	| summaryReporter report indentation |
	
	summaryReporter _ SummaryReporter for: self.
	report _ summaryReporter accountSummary.
	indentation _ ''.
	aSmallInteger timesRepeat: (indentation _ ' ',indentation).
	report _ report collect: [:aReportElement | indentation,aReportElement].
	anOrderedCollection addAllLast: report.
	
	! !
!ReceptiveAccount methodsFor: 'report' stamp: 'fr 11/15/2020 19:27:41' prior: 50886496!
addReportTo: anOrderedCollection withIndentation: aSmallInteger 
	
	| summaryReporter report indentation |
	summaryReporter _ SummaryReporter for: self.
	report _ summaryReporter accountSummary.
	indentation _ ''.
	aSmallInteger timesRepeat: (indentation _ ' ',indentation).
	report _ report collect: [:aReportElement | indentation,aReportElement].
	anOrderedCollection addAllLast: report.
	
	! !

!testRun: #PortfolioReporterTest #test06 stamp: 'fr 11/15/2020 19:27:43'!
FAILURE!
!Portfolio methodsFor: 'report' stamp: 'fr 11/15/2020 19:29:33' prior: 50886388!
addReportTo: aReport withIndentation: anIndentationValue 
	
	| indentation |
	indentation _ ''.
	anIndentationValue timesRepeat: (indentation _ ' ',indentation).
	aReport add: indentation,name.
	accounts do: [:anAccount | 
		anAccount addReportTo: aReport withIndentation: 	anIndentationValue + 1
	].
	aReport add: indentation,self balance asString
	! !
!Portfolio methodsFor: 'report' stamp: 'fr 11/15/2020 19:29:53' prior: 50886530!
addReportTo: aReport withIndentation: anIndentationValue 
	
	| indentation |
	indentation _ ''.
	anIndentationValue timesRepeat: (indentation _ ' ',indentation).
	aReport add: indentation,name.
	accounts do: [:anAccount | 
		anAccount addReportTo: aReport withIndentation: 	anIndentationValue + 1
	].
	aReport add: indentation,' ',self balance asString
	! !

!testRun: #PortfolioReporterTest #test06 stamp: 'fr 11/15/2020 19:29:57'!
FAILURE!

portfolio specialReport!
!Portfolio methodsFor: 'report' stamp: 'fr 11/15/2020 19:30:42' prior: 50886544!
addReportTo: aReport withIndentation: anIndentationValue 
	
	| indentation |
	indentation _ ''.
	anIndentationValue timesRepeat: [indentation _ ' ',indentation].
	aReport add: indentation,name.
	accounts do: [:anAccount | 
		anAccount addReportTo: aReport withIndentation: 	anIndentationValue + 1
	].
	aReport add: indentation,' ',self balance asString
	! !
!ReceptiveAccount methodsFor: 'report' stamp: 'fr 11/15/2020 19:31:03' prior: 50886512!
addReportTo: anOrderedCollection withIndentation: aSmallInteger 
	
	| summaryReporter report indentation |
	summaryReporter _ SummaryReporter for: self.
	report _ summaryReporter accountSummary.
	indentation _ ''.
	aSmallInteger timesRepeat: [indentation _ ' ',indentation].
	report _ report collect: [:aReportElement | indentation,aReportElement].
	anOrderedCollection addAllLast: report.
	
	! !

!testRun: #PortfolioReporterTest #test06 stamp: 'fr 11/15/2020 19:31:04'!
FAILURE!

portfolio specialReport!
!ReceptiveAccount methodsFor: 'report' stamp: 'fr 11/15/2020 19:33:18' prior: 50886576!
addReportTo: anOrderedCollection withIndentation: aSmallInteger 
	
	| summaryReporter report indentation |
	summaryReporter _ SummaryReporter for: self.
	report _ summaryReporter accountSummary.
	indentation _ ''.
	aSmallInteger timesRepeat: [indentation _ ' ',indentation].
	report _ report collect: [:aReportElement | indentation,' ',aReportElement].
	anOrderedCollection add: indentation,name.
	anOrderedCollection addAllLast: report.
	anOrderedCollection add: indentation,' Balance = ',self balance asString
	
	! !
!Portfolio methodsFor: 'report' stamp: 'fr 11/15/2020 19:33:35' prior: 50886562!
addReportTo: aReport withIndentation: anIndentationValue 
	
	| indentation |
	indentation _ ''.
	anIndentationValue timesRepeat: [indentation _ ' ',indentation].
	aReport add: indentation,name.
	accounts do: [:anAccount | 
		anAccount addReportTo: aReport withIndentation: 	anIndentationValue + 1
	].
	aReport add: indentation,' Balance = ',self balance asString
	! !

!testRun: #PortfolioReporterTest #test06 stamp: 'fr 11/15/2020 19:33:36'!
FAILURE!

portfolio specialReport!
!ReceptiveAccount methodsFor: 'report' stamp: 'fr 11/15/2020 19:34:28' prior: 50886595!
addReportTo: anOrderedCollection withIndentation: aSmallInteger 
	
	| summaryReporter report indentation |
	summaryReporter _ SummaryReporter for: self.
	report _ summaryReporter accountSummary.
	indentation _ ''.
	aSmallInteger timesRepeat: [indentation _ ' ',indentation].
	report _ report collect: [:aReportElement | indentation,' ',aReportElement].
	anOrderedCollection add: indentation,name.
	anOrderedCollection addAllLast: report.
	
	! !

!testRun: #PortfolioReporterTest #test06 stamp: 'fr 11/15/2020 19:34:29'!
FAILURE!

portfolio specialReport!

!testRun: #PortfolioReporterTest #test06 stamp: 'fr 11/15/2020 19:35:22'!
PASSED!

!testRun: #PortfolioReporterTest #test01 stamp: 'fr 11/15/2020 19:35:22'!
PASSED!

!testRun: #PortfolioReporterTest #test02 stamp: 'fr 11/15/2020 19:35:22'!
PASSED!

!testRun: #PortfolioReporterTest #test03 stamp: 'fr 11/15/2020 19:35:22'!
PASSED!

!testRun: #PortfolioReporterTest #test04 stamp: 'fr 11/15/2020 19:35:22'!
PASSED!

!testRun: #PortfolioReporterTest #test05 stamp: 'fr 11/15/2020 19:35:22'!
PASSED!

!testRun: #PortfolioReporterTest #test06 stamp: 'fr 11/15/2020 19:35:22'!
FAILURE!

!testRun: #PortfolioReporterTest #test06 stamp: 'fr 11/15/2020 19:35:22'!
FAILURE!

!testRun: #PortfolioReporterTest #test01 stamp: 'fr 11/15/2020 19:35:39'!
PASSED!

!testRun: #PortfolioReporterTest #test02 stamp: 'fr 11/15/2020 19:35:39'!
PASSED!

!testRun: #PortfolioReporterTest #test03 stamp: 'fr 11/15/2020 19:35:39'!
PASSED!

!testRun: #PortfolioReporterTest #test04 stamp: 'fr 11/15/2020 19:35:39'!
PASSED!

!testRun: #PortfolioReporterTest #test05 stamp: 'fr 11/15/2020 19:35:39'!
PASSED!

!testRun: #PortfolioReporterTest #test06 stamp: 'fr 11/15/2020 19:35:39'!
FAILURE!

!testRun: #PortfolioReporterTest #test06 stamp: 'fr 11/15/2020 19:35:39'!
FAILURE!

portfolio specialReport!
!PortfolioReporterTest methodsFor: 'as yet unclassified' stamp: 'fr 11/15/2020 19:36:24' prior: 50886183!
test06

	| portfolio account anotherAccount expectedReport anotherPortfolio |
	account _ ReceptiveAccount named: 'Cuenta de Fede'.
	anotherAccount _ ReceptiveAccount named: 'Cuenta de Juan'.
	Deposit register: 100 on: account.
	Withdraw register: 50 on: account.
	Transfer move: 10 from: account to: anotherAccount.
	Transfer move: 5 from: anotherAccount to: account.
	anotherPortfolio _ Portfolio named: 'Portfolio de Juan' with: anotherAccount.
	portfolio _ Portfolio named: 'Portfolio de Fede' with: account with: anotherPortfolio.
	expectedReport _ OrderedCollection with: 'Portfolio de Fede'.
	expectedReport add: ' Cuenta de Fede'.
	expectedReport add: '  Dep�sito por 100.'.
	expectedReport add: '  Extracci�n por 50.'.
	expectedReport add: '  Salida por transferencia de 10.'.
	expectedReport add: '  Entrada por transferencia de 5.'.
	expectedReport add: '  Balance = 45'.
	expectedReport add: ' Portfolio de Juan'.
	expectedReport add: '  Cuenta de Juan'.
	expectedReport add: '   Entrada por transferencia de 10.'.
	expectedReport add: '   Salida por transferencia de 5.'.
	expectedReport add: '   Balance = 5'.
	expectedReport add: '  Balance = 5'.
	expectedReport add: ' Balance = 50'.
	self assert: [portfolio specialReport = expectedReport]! !

!testRun: #PortfolioReporterTest #test06 stamp: 'fr 11/15/2020 19:36:25'!
PASSED!

!testRun: #PortfolioReporterTest #test01 stamp: 'fr 11/15/2020 19:36:25'!
PASSED!

!testRun: #PortfolioReporterTest #test02 stamp: 'fr 11/15/2020 19:36:25'!
PASSED!

!testRun: #PortfolioReporterTest #test03 stamp: 'fr 11/15/2020 19:36:25'!
PASSED!

!testRun: #PortfolioReporterTest #test04 stamp: 'fr 11/15/2020 19:36:25'!
PASSED!

!testRun: #PortfolioReporterTest #test05 stamp: 'fr 11/15/2020 19:36:25'!
PASSED!

!testRun: #PortfolioReporterTest #test06 stamp: 'fr 11/15/2020 19:36:25'!
PASSED!

!testRun: #PortfolioReporterTest #test01 stamp: 'fr 11/15/2020 20:12:56'!
PASSED!

!testRun: #PortfolioReporterTest #test02 stamp: 'fr 11/15/2020 20:12:56'!
PASSED!

!testRun: #PortfolioReporterTest #test03 stamp: 'fr 11/15/2020 20:12:56'!
PASSED!

!testRun: #PortfolioReporterTest #test04 stamp: 'fr 11/15/2020 20:12:56'!
PASSED!

!testRun: #PortfolioReporterTest #test05 stamp: 'fr 11/15/2020 20:12:56'!
PASSED!

!testRun: #PortfolioReporterTest #test06 stamp: 'fr 11/15/2020 20:12:56'!
PASSED!
!PortfolioReporterTest methodsFor: 'tests - tree report' stamp: 'fr 11/15/2020 20:13:55' prior: 50882867!
test01

	| portfolio reporter |
	portfolio _ Portfolio named: 'Portfolio de la familia'.
	reporter _ TreeStructureReporter for: portfolio.

	self assert: [reporter treeStructure = (OrderedCollection with: 'Portfolio de la familia')]! !

!testRun: #PortfolioReporterTest #test01 stamp: 'fr 11/15/2020 20:13:57'!
PASSED!

!testRun: #PortfolioReporterTest #test01 stamp: 'fr 11/15/2020 20:13:57'!
PASSED!

!testRun: #PortfolioReporterTest #test02 stamp: 'fr 11/15/2020 20:13:57'!
PASSED!

!testRun: #PortfolioReporterTest #test03 stamp: 'fr 11/15/2020 20:13:57'!
PASSED!

!testRun: #PortfolioReporterTest #test04 stamp: 'fr 11/15/2020 20:13:57'!
PASSED!

!testRun: #PortfolioReporterTest #test05 stamp: 'fr 11/15/2020 20:13:57'!
PASSED!

!testRun: #PortfolioReporterTest #test06 stamp: 'fr 11/15/2020 20:13:57'!
PASSED!
!PortfolioReporterTest methodsFor: 'tests - tree report' stamp: 'fr 11/15/2020 20:14:06' prior: 50882896!
test02

	| portfolio account reporter |
	account _ ReceptiveAccount named: 'Cuenta de Juan'.
	portfolio _ Portfolio named: 'Portfolio de la familia' with: account.
	reporter _ TreeStructureReporter for: portfolio.

	self assert: [reporter treeStructure = (OrderedCollection with: 'Portfolio de la familia' with: ' Cuenta de Juan')]! !

!testRun: #PortfolioReporterTest #test02 stamp: 'fr 11/15/2020 20:14:08'!
PASSED!

!testRun: #PortfolioReporterTest #test01 stamp: 'fr 11/15/2020 20:14:08'!
PASSED!

!testRun: #PortfolioReporterTest #test02 stamp: 'fr 11/15/2020 20:14:08'!
PASSED!

!testRun: #PortfolioReporterTest #test03 stamp: 'fr 11/15/2020 20:14:08'!
PASSED!

!testRun: #PortfolioReporterTest #test04 stamp: 'fr 11/15/2020 20:14:08'!
PASSED!

!testRun: #PortfolioReporterTest #test05 stamp: 'fr 11/15/2020 20:14:08'!
PASSED!

!testRun: #PortfolioReporterTest #test06 stamp: 'fr 11/15/2020 20:14:08'!
PASSED!
!PortfolioReporterTest methodsFor: 'tests - tree report' stamp: 'fr 11/15/2020 20:14:24' prior: 50883112!
test03

	| portfolio account anotherAccount anotherPortfolio reporter |
	account _ ReceptiveAccount named: 'Cuenta de Juan'.
	anotherAccount _ ReceptiveAccount named: 'Cuenta de Angeles'.
	portfolio _ Portfolio named: 'Portfolio de Angeles' with: anotherAccount.
	anotherPortfolio _ Portfolio named: 'Portfolio de la familia' with: portfolio with: account.
	reporter _ TreeStructureReporter for: anotherPortfolio.


	self assert: [reporter treeStructure = (OrderedCollection with: 'Portfolio de la familia' with: ' Portfolio de Angeles' with: '  Cuenta de Angeles' with: ' Cuenta de Juan')]! !

!methodRemoval: Portfolio #treeStructure stamp: 'fr 11/15/2020 20:14:42'!
treeStructure
	
	| reporter |
	reporter _ TreeStructureReporter for: self.
	
	^reporter treeStructure
	
	!
!Portfolio methodsFor: 'report' stamp: 'fr 11/15/2020 20:14:48' prior: 50883707 overrides: 16882612!
name

	^name copy! !
!ReceptiveAccount methodsFor: 'report' stamp: 'fr 11/15/2020 20:14:53' prior: 50883711 overrides: 16882612!
name

	^name copy! !

PortfolioReporter subclass: #SpecialReporter
	instanceVariableNames: 'portfolio'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Part-II-Exercise'!

PortfolioReporter subclass: #SpecialReporter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Part-II-Exercise'!

!classDefinition: #SpecialReporter category: 'Portfolio-Part-II-Exercise' stamp: 'fr 11/15/2020 20:17:12'!
PortfolioReporter subclass: #SpecialReporter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Part-II-Exercise'!

!classDefinition: #SpecialReporter category: 'Portfolio-Part-II-Exercise' stamp: 'fr 11/15/2020 20:18:17'!
PortfolioReporter subclass: #SpecialReporter
	instanceVariableNames: 'indentationOffset'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Part-II-Exercise'!

!classDefinition: #SpecialReporter category: 'Portfolio-Part-II-Exercise' stamp: 'fr 11/15/2020 20:18:22'!
PortfolioReporter subclass: #SpecialReporter
	instanceVariableNames: 'indentationOffset tree'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Part-II-Exercise'!
!SpecialReporter methodsFor: 'no messages' stamp: 'fr 11/15/2020 20:18:16'!
initializeFor: aPortfolio

	indentationOffset _ 0.
	tree _ OrderedCollection new.
	portfolio _ aPortfolio.! !
!SpecialReporter methodsFor: 'as yet unclassified' stamp: 'fr 11/15/2020 20:18:45'!
specialReport

	! !
!SpecialReporter methodsFor: 'as yet unclassified' stamp: 'fr 11/15/2020 20:18:58' prior: 50886911!
specialReport

	self addPortfolioToReport: portfolio.
	^tree
	! !
!SpecialReporter methodsFor: 'as yet unclassified' stamp: 'fr 11/15/2020 20:19:56'!
addPortfolioToReport: aPortfolio
	
	self addNameWithIndentation: aPortfolio.
	self increaseOffset.
	aPortfolio buildPortfolioReportWith: self.
	self decreaseOffset.! !
!SpecialReporter methodsFor: 'as yet unclassified' stamp: 'fr 11/15/2020 20:20:32' prior: 50886920!
addPortfolioToReport: aPortfolio
	
	self addNameWithIndentation: aPortfolio.
	self increaseOffset.
	aPortfolio buildPortfolioReportWith: self.
	self addBalanceWithIndentation: aPortfolio.
	self decreaseOffset.! !
!SpecialReporter methodsFor: 'as yet unclassified' stamp: 'fr 11/15/2020 20:20:52'!
nameWithIndentation: anAccount

	^self indentation,anAccount name! !
!SpecialReporter methodsFor: 'as yet unclassified' stamp: 'fr 11/15/2020 20:21:05'!
addNameWithIndentation: anAccount

	tree add: (self nameWithIndentation: anAccount)! !
!SpecialReporter methodsFor: 'as yet unclassified' stamp: 'fr 11/15/2020 20:21:38'!
increaseOffset

	^ self changeOffset: 1! !
!SpecialReporter methodsFor: 'as yet unclassified' stamp: 'fr 11/15/2020 20:21:45'!
decreaseOffset

	^ self changeOffset: -1! !
!TreeStructureReporter methodsFor: 'as yet unclassified' stamp: 'fr 11/15/2020 20:21:54' prior: 50884136!
changeOffset: aValueToAdd

	indentationOffset _ indentationOffset + aValueToAdd ! !

!testRun: #PortfolioReporterTest #test01 stamp: 'fr 11/15/2020 20:21:58'!
PASSED!

!testRun: #PortfolioReporterTest #test02 stamp: 'fr 11/15/2020 20:21:58'!
PASSED!

!testRun: #PortfolioReporterTest #test03 stamp: 'fr 11/15/2020 20:21:58'!
PASSED!

!testRun: #PortfolioReporterTest #test04 stamp: 'fr 11/15/2020 20:21:58'!
PASSED!

!testRun: #PortfolioReporterTest #test05 stamp: 'fr 11/15/2020 20:21:58'!
PASSED!

!testRun: #PortfolioReporterTest #test06 stamp: 'fr 11/15/2020 20:21:58'!
PASSED!
!SpecialReporter methodsFor: 'as yet unclassified' stamp: 'fr 11/15/2020 20:22:02'!
changeOffset: aValueToAdd

	indentationOffset _ indentationOffset + aValueToAdd ! !
!SpecialReporter methodsFor: 'as yet unclassified' stamp: 'fr 11/15/2020 20:23:14'!
indentation
	
	| indentation |
	indentation _ ''.
	indentationOffset timesRepeat: [indentation _ indentation,' '].
	^indentation! !
!SpecialReporter methodsFor: 'as yet unclassified' stamp: 'fr 11/15/2020 20:24:56'!
addReceptiveAccountToReport: aReceptiveAccount
	
	| accountReporter report |
	self addNameWithIndentation: aReceptiveAccount.
	accountReporter _ SummaryReporter for: aReceptiveAccount.
	report _ accountReporter accountSummary .
	
	! !
!SpecialReporter methodsFor: 'as yet unclassified' stamp: 'fr 11/15/2020 20:25:06' prior: 50886993!
addReceptiveAccountToReport: aReceptiveAccount
	
	| accountReporter report |
	self addNameWithIndentation: aReceptiveAccount.
	accountReporter _ SummaryReporter for: aReceptiveAccount.
	report _ accountReporter accountSummary.
	
	! !
!SpecialReporter methodsFor: 'as yet unclassified' stamp: 'fr 11/15/2020 20:26:25' prior: 50887004!
addReceptiveAccountToReport: aReceptiveAccount
	
	| accountReporter report |
	self addNameWithIndentation: aReceptiveAccount.
	accountReporter _ SummaryReporter for: aReceptiveAccount.
	report _ accountReporter accountSummary.
	report _ report collect: [:aReportElement | self indentation,' ',aReportElement].
	tree addAllLast: report.
	
	! !
!SpecialReporter methodsFor: 'as yet unclassified' stamp: 'fr 11/15/2020 20:27:13'!
addSummaryReportWithIndentation: aReceptiveAccount
	
	| accountReporter report |
	accountReporter _ SummaryReporter for: aReceptiveAccount.
	report _ accountReporter accountSummary.
	report _ report collect: [:aReportElement | self indentation,' ',aReportElement].
	tree addAllLast: report.
	
	! !
!SpecialReporter methodsFor: 'as yet unclassified' stamp: 'fr 11/15/2020 20:27:25' prior: 50887015!
addReceptiveAccountToReport: aReceptiveAccount
	
	
	self addNameWithIndentation: aReceptiveAccount.
	self addSummaryReportWithIndentation: aReceptiveAccount

	
	! !
!SpecialReporter methodsFor: 'as yet unclassified' stamp: 'fr 11/15/2020 20:27:30' prior: 50887042!
addReceptiveAccountToReport: aReceptiveAccount
	
	self addNameWithIndentation: aReceptiveAccount.
	self addSummaryReportWithIndentation: aReceptiveAccount

	
	! !
!SpecialReporter methodsFor: 'as yet unclassified' stamp: 'fr 11/15/2020 20:28:26'!
addBalanceWithIndentation: aPortfolio.

	tree add: (self indentation,' ',aPortfolio balance asString)! !
!SpecialReporter methodsFor: 'as yet unclassified' stamp: 'fr 11/15/2020 20:30:01'!
accountSummaryForAccount: aReceptiveAccount
	
	| accountReporter |
	accountReporter _ SummaryReporter for: aReceptiveAccount.
	^accountReporter accountSummary.
	
	! !
!SpecialReporter methodsFor: 'as yet unclassified' stamp: 'fr 11/15/2020 20:30:31' prior: 50887029!
addSummaryReportWithIndentation: aReceptiveAccount
	
	| report |
	report _ (self accountSummaryForAccount: aReceptiveAccount) collect: [:aReportElement | self indentation,' ',aReportElement].
	tree addAllLast: report.
	
	! !
!SpecialReporter methodsFor: 'as yet unclassified' stamp: 'fr 11/15/2020 20:31:13'!
summaryReportWithIndentation: aReceptiveAccount

	^ (self accountSummaryForAccount: aReceptiveAccount) collect: [:aReportElement | self indentation,' ',aReportElement]! !
!SpecialReporter methodsFor: 'as yet unclassified' stamp: 'fr 11/15/2020 20:31:13' prior: 50887074!
addSummaryReportWithIndentation: aReceptiveAccount
	
	| report |
	report _ self summaryReportWithIndentation: aReceptiveAccount.
	tree addAllLast: report.
	
	! !
!SpecialReporter methodsFor: 'as yet unclassified' stamp: 'fr 11/15/2020 20:31:35' prior: 50887093!
addSummaryReportWithIndentation: aReceptiveAccount
	
	tree addAllLast: (self summaryReportWithIndentation: aReceptiveAccount).
	
	! !
!SpecialReporter methodsFor: 'as yet unclassified' stamp: 'fr 11/15/2020 20:32:09'!
balanceWithIndentation: aPortfolio

	^ self indentation,' ',aPortfolio balance asString! !
!SpecialReporter methodsFor: 'as yet unclassified' stamp: 'fr 11/15/2020 20:32:09' prior: 50887059!
addBalanceWithIndentation: aPortfolio.

	tree add: ((self balanceWithIndentation: aPortfolio))! !
!SpecialReporter methodsFor: 'as yet unclassified' stamp: 'fr 11/15/2020 20:32:12' prior: 50887115!
addBalanceWithIndentation: aPortfolio.

	tree add: (self balanceWithIndentation: aPortfolio)! !
!Portfolio methodsFor: 'report' stamp: 'fr 11/15/2020 20:33:29' prior: 50886245!
specialReport
	
	"| report |
	report _ OrderedCollection new.
	self addReportTo: report withIndentation: 0.
	^report"
	
	| reporter |
	reporter _ SpecialReporter for: self.
	
	^reporter specialReport 
	
	! !

!testRun: #PortfolioReporterTest #test01 stamp: 'fr 11/15/2020 20:33:34'!
PASSED!

!testRun: #PortfolioReporterTest #test02 stamp: 'fr 11/15/2020 20:33:34'!
PASSED!

!testRun: #PortfolioReporterTest #test03 stamp: 'fr 11/15/2020 20:33:34'!
PASSED!

!testRun: #PortfolioReporterTest #test04 stamp: 'fr 11/15/2020 20:33:34'!
FAILURE!

!testRun: #PortfolioReporterTest #test05 stamp: 'fr 11/15/2020 20:33:34'!
FAILURE!

!testRun: #PortfolioReporterTest #test06 stamp: 'fr 11/15/2020 20:33:34'!
FAILURE!

!testRun: #PortfolioReporterTest #test04 stamp: 'fr 11/15/2020 20:33:37'!
FAILURE!

!testRun: #PortfolioReporterTest #test04 stamp: 'fr 11/15/2020 20:33:37'!
FAILURE!

portfolio specialReport!
!SpecialReporter methodsFor: 'as yet unclassified' stamp: 'fr 11/15/2020 20:34:06' prior: 50887109!
balanceWithIndentation: aPortfolio

	^ self indentation,' Balance = ',aPortfolio balance asString! !

!testRun: #PortfolioReporterTest #test01 stamp: 'fr 11/15/2020 20:34:08'!
PASSED!

!testRun: #PortfolioReporterTest #test02 stamp: 'fr 11/15/2020 20:34:08'!
PASSED!

!testRun: #PortfolioReporterTest #test03 stamp: 'fr 11/15/2020 20:34:08'!
PASSED!

!testRun: #PortfolioReporterTest #test04 stamp: 'fr 11/15/2020 20:34:08'!
FAILURE!

!testRun: #PortfolioReporterTest #test05 stamp: 'fr 11/15/2020 20:34:08'!
FAILURE!

!testRun: #PortfolioReporterTest #test06 stamp: 'fr 11/15/2020 20:34:08'!
FAILURE!

!testRun: #PortfolioReporterTest #test04 stamp: 'fr 11/15/2020 20:34:14'!
FAILURE!

!testRun: #PortfolioReporterTest #test04 stamp: 'fr 11/15/2020 20:34:14'!
FAILURE!

portfolio specialReport!
!SpecialReporter methodsFor: 'as yet unclassified' stamp: 'fr 11/15/2020 20:34:50' prior: 50887160!
balanceWithIndentation: aPortfolio

	^ self indentation,'Balance = ',aPortfolio balance asString! !

!testRun: #PortfolioReporterTest #test01 stamp: 'fr 11/15/2020 20:34:52'!
PASSED!

!testRun: #PortfolioReporterTest #test02 stamp: 'fr 11/15/2020 20:34:52'!
PASSED!

!testRun: #PortfolioReporterTest #test03 stamp: 'fr 11/15/2020 20:34:52'!
PASSED!

!testRun: #PortfolioReporterTest #test04 stamp: 'fr 11/15/2020 20:34:52'!
PASSED!

!testRun: #PortfolioReporterTest #test05 stamp: 'fr 11/15/2020 20:34:52'!
PASSED!

!testRun: #PortfolioReporterTest #test06 stamp: 'fr 11/15/2020 20:34:52'!
PASSED!
!PortfolioReporterTest methodsFor: 'tests - special report' stamp: 'fr 11/15/2020 20:35:19' prior: 50885896!
test04

	| portfolio reporter |
	portfolio _ Portfolio named: 'Portfolio de Fede'.
	reporter _ SpecialReporter for: portfolio.

	self assert: [reporter specialReport = (OrderedCollection with: 'Portfolio de Fede' with: ' Balance = 0')]! !

!testRun: #PortfolioReporterTest #test04 stamp: 'fr 11/15/2020 20:35:21'!
PASSED!

!testRun: #PortfolioReporterTest #test01 stamp: 'fr 11/15/2020 20:35:21'!
PASSED!

!testRun: #PortfolioReporterTest #test02 stamp: 'fr 11/15/2020 20:35:21'!
PASSED!

!testRun: #PortfolioReporterTest #test03 stamp: 'fr 11/15/2020 20:35:21'!
PASSED!

!testRun: #PortfolioReporterTest #test04 stamp: 'fr 11/15/2020 20:35:21'!
PASSED!

!testRun: #PortfolioReporterTest #test05 stamp: 'fr 11/15/2020 20:35:21'!
PASSED!

!testRun: #PortfolioReporterTest #test06 stamp: 'fr 11/15/2020 20:35:21'!
PASSED!
!PortfolioReporterTest methodsFor: 'tests - special report' stamp: 'fr 11/15/2020 20:35:38' prior: 50886042!
test05

	| portfolio account anotherAccount expectedReport reporter |
	account _ ReceptiveAccount named: 'Cuenta de Fede'.
	anotherAccount _ ReceptiveAccount new.
	Deposit register: 100 on: account.
	Withdraw register: 50 on: account.
	Transfer move: 10 from: account to: anotherAccount.
	Transfer move: 5 from: anotherAccount to: account.
	portfolio _ Portfolio named: 'Portfolio de Fede' with: account.
	expectedReport _ OrderedCollection with: 'Portfolio de Fede'.
	expectedReport add: ' Cuenta de Fede'.
	expectedReport add: '  Dep�sito por 100.'.
	expectedReport add: '  Extracci�n por 50.'.
	expectedReport add: '  Salida por transferencia de 10.'.
	expectedReport add: '  Entrada por transferencia de 5.'.
	expectedReport add: '  Balance = 45'.
	expectedReport add: ' Balance = 45'.
	reporter _ SpecialReporter for: portfolio.

	self assert: [reporter specialReport = expectedReport]! !

!testRun: #PortfolioReporterTest #test05 stamp: 'fr 11/15/2020 20:35:40'!
PASSED!

!testRun: #PortfolioReporterTest #test01 stamp: 'fr 11/15/2020 20:35:40'!
PASSED!

!testRun: #PortfolioReporterTest #test02 stamp: 'fr 11/15/2020 20:35:40'!
PASSED!

!testRun: #PortfolioReporterTest #test03 stamp: 'fr 11/15/2020 20:35:40'!
PASSED!

!testRun: #PortfolioReporterTest #test04 stamp: 'fr 11/15/2020 20:35:40'!
PASSED!

!testRun: #PortfolioReporterTest #test05 stamp: 'fr 11/15/2020 20:35:40'!
PASSED!

!testRun: #PortfolioReporterTest #test06 stamp: 'fr 11/15/2020 20:35:40'!
PASSED!
!PortfolioReporterTest methodsFor: 'tests - special report' stamp: 'fr 11/15/2020 20:35:53' prior: 50886693!
test06

	| portfolio account anotherAccount expectedReport anotherPortfolio reporter |
	account _ ReceptiveAccount named: 'Cuenta de Fede'.
	anotherAccount _ ReceptiveAccount named: 'Cuenta de Juan'.
	Deposit register: 100 on: account.
	Withdraw register: 50 on: account.
	Transfer move: 10 from: account to: anotherAccount.
	Transfer move: 5 from: anotherAccount to: account.
	anotherPortfolio _ Portfolio named: 'Portfolio de Juan' with: anotherAccount.
	portfolio _ Portfolio named: 'Portfolio de Fede' with: account with: anotherPortfolio.
	expectedReport _ OrderedCollection with: 'Portfolio de Fede'.
	expectedReport add: ' Cuenta de Fede'.
	expectedReport add: '  Dep�sito por 100.'.
	expectedReport add: '  Extracci�n por 50.'.
	expectedReport add: '  Salida por transferencia de 10.'.
	expectedReport add: '  Entrada por transferencia de 5.'.
	expectedReport add: '  Balance = 45'.
	expectedReport add: ' Portfolio de Juan'.
	expectedReport add: '  Cuenta de Juan'.
	expectedReport add: '   Entrada por transferencia de 10.'.
	expectedReport add: '   Salida por transferencia de 5.'.
	expectedReport add: '   Balance = 5'.
	expectedReport add: '  Balance = 5'.
	expectedReport add: ' Balance = 50'.
	reporter _ SpecialReporter for: portfolio.
	
	self assert: [reporter specialReport = expectedReport]! !

!testRun: #PortfolioReporterTest #test06 stamp: 'fr 11/15/2020 20:35:56'!
PASSED!

!testRun: #PortfolioReporterTest #test01 stamp: 'fr 11/15/2020 20:35:56'!
PASSED!

!testRun: #PortfolioReporterTest #test02 stamp: 'fr 11/15/2020 20:35:56'!
PASSED!

!testRun: #PortfolioReporterTest #test03 stamp: 'fr 11/15/2020 20:35:56'!
PASSED!

!testRun: #PortfolioReporterTest #test04 stamp: 'fr 11/15/2020 20:35:56'!
PASSED!

!testRun: #PortfolioReporterTest #test05 stamp: 'fr 11/15/2020 20:35:56'!
PASSED!

!testRun: #PortfolioReporterTest #test06 stamp: 'fr 11/15/2020 20:35:56'!
PASSED!

!methodRemoval: Portfolio #specialReport stamp: 'fr 11/15/2020 20:36:05'!
specialReport
	
	"| report |
	report _ OrderedCollection new.
	self addReportTo: report withIndentation: 0.
	^report"
	
	| reporter |
	reporter _ SpecialReporter for: self.
	
	^reporter specialReport 
	
	!

!methodRemoval: Portfolio #addReportTo:withIndentation: stamp: 'fr 11/15/2020 20:36:10'!
addReportTo: aReport withIndentation: anIndentationValue 
	
	| indentation |
	indentation _ ''.
	anIndentationValue timesRepeat: [indentation _ ' ',indentation].
	aReport add: indentation,name.
	accounts do: [:anAccount | 
		anAccount addReportTo: aReport withIndentation: 	anIndentationValue + 1
	].
	aReport add: indentation,' Balance = ',self balance asString
	!

!methodRemoval: ReceptiveAccount #addReportTo:withIndentation: stamp: 'fr 11/15/2020 20:36:24'!
addReportTo: anOrderedCollection withIndentation: aSmallInteger 
	
	| summaryReporter report indentation |
	summaryReporter _ SummaryReporter for: self.
	report _ summaryReporter accountSummary.
	indentation _ ''.
	aSmallInteger timesRepeat: [indentation _ ' ',indentation].
	report _ report collect: [:aReportElement | indentation,' ',aReportElement].
	anOrderedCollection add: indentation,name.
	anOrderedCollection addAllLast: report.
	
	!

PortfolioReporter subclass: #TreeReporter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Part-II-Exercise'!

!classDefinition: #TreeReporter category: 'Portfolio-Part-II-Exercise' stamp: 'fr 11/15/2020 20:38:40'!
PortfolioReporter subclass: #TreeReporter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Part-II-Exercise'!

TreeReporter subclass: #SpecialReporter
	instanceVariableNames: 'indentationOffset tree'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Part-II-Exercise'!

!classDefinition: #SpecialReporter category: 'Portfolio-Part-II-Exercise' stamp: 'fr 11/15/2020 20:38:47'!
TreeReporter subclass: #SpecialReporter
	instanceVariableNames: 'indentationOffset tree'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Part-II-Exercise'!

TreeReporter subclass: #TreeStructureReporter
	instanceVariableNames: 'tree indentationOffset'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Part-II-Exercise'!

!classDefinition: #TreeStructureReporter category: 'Portfolio-Part-II-Exercise' stamp: 'fr 11/15/2020 20:38:51'!
TreeReporter subclass: #TreeStructureReporter
	instanceVariableNames: 'tree indentationOffset'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Part-II-Exercise'!

!classRenamed: #SpecialReporter as: #FullTreeReporter stamp: 'fr 11/15/2020 20:39:03'!
Smalltalk renameClassNamed: #SpecialReporter as: #FullTreeReporter!
!PortfolioReporterTest methodsFor: 'as yet unclassified' stamp: 'fr 11/15/2020 20:39:04' prior: 50887211!
test04

	| portfolio reporter |
	portfolio _ Portfolio named: 'Portfolio de Fede'.
	reporter _ FullTreeReporter for: portfolio.

	self assert: [reporter specialReport = (OrderedCollection with: 'Portfolio de Fede' with: ' Balance = 0')]! !
!PortfolioReporterTest methodsFor: 'as yet unclassified' stamp: 'fr 11/15/2020 20:39:04' prior: 50887291!
test06

	| portfolio account anotherAccount expectedReport anotherPortfolio reporter |
	account _ ReceptiveAccount named: 'Cuenta de Fede'.
	anotherAccount _ ReceptiveAccount named: 'Cuenta de Juan'.
	Deposit register: 100 on: account.
	Withdraw register: 50 on: account.
	Transfer move: 10 from: account to: anotherAccount.
	Transfer move: 5 from: anotherAccount to: account.
	anotherPortfolio _ Portfolio named: 'Portfolio de Juan' with: anotherAccount.
	portfolio _ Portfolio named: 'Portfolio de Fede' with: account with: anotherPortfolio.
	expectedReport _ OrderedCollection with: 'Portfolio de Fede'.
	expectedReport add: ' Cuenta de Fede'.
	expectedReport add: '  Dep�sito por 100.'.
	expectedReport add: '  Extracci�n por 50.'.
	expectedReport add: '  Salida por transferencia de 10.'.
	expectedReport add: '  Entrada por transferencia de 5.'.
	expectedReport add: '  Balance = 45'.
	expectedReport add: ' Portfolio de Juan'.
	expectedReport add: '  Cuenta de Juan'.
	expectedReport add: '   Entrada por transferencia de 10.'.
	expectedReport add: '   Salida por transferencia de 5.'.
	expectedReport add: '   Balance = 5'.
	expectedReport add: '  Balance = 5'.
	expectedReport add: ' Balance = 50'.
	reporter _ FullTreeReporter for: portfolio.
	
	self assert: [reporter specialReport = expectedReport]! !
!PortfolioReporterTest methodsFor: 'as yet unclassified' stamp: 'fr 11/15/2020 20:39:04' prior: 50887241!
test05

	| portfolio account anotherAccount expectedReport reporter |
	account _ ReceptiveAccount named: 'Cuenta de Fede'.
	anotherAccount _ ReceptiveAccount new.
	Deposit register: 100 on: account.
	Withdraw register: 50 on: account.
	Transfer move: 10 from: account to: anotherAccount.
	Transfer move: 5 from: anotherAccount to: account.
	portfolio _ Portfolio named: 'Portfolio de Fede' with: account.
	expectedReport _ OrderedCollection with: 'Portfolio de Fede'.
	expectedReport add: ' Cuenta de Fede'.
	expectedReport add: '  Dep�sito por 100.'.
	expectedReport add: '  Extracci�n por 50.'.
	expectedReport add: '  Salida por transferencia de 10.'.
	expectedReport add: '  Entrada por transferencia de 5.'.
	expectedReport add: '  Balance = 45'.
	expectedReport add: ' Balance = 45'.
	reporter _ FullTreeReporter for: portfolio.

	self assert: [reporter specialReport = expectedReport]! !

!testRun: #PortfolioReporterTest #test01 stamp: 'fr 11/15/2020 20:39:10'!
PASSED!

!testRun: #PortfolioReporterTest #test02 stamp: 'fr 11/15/2020 20:39:10'!
PASSED!

!testRun: #PortfolioReporterTest #test03 stamp: 'fr 11/15/2020 20:39:10'!
PASSED!

!testRun: #PortfolioReporterTest #test04 stamp: 'fr 11/15/2020 20:39:10'!
PASSED!

!testRun: #PortfolioReporterTest #test05 stamp: 'fr 11/15/2020 20:39:10'!
PASSED!

!testRun: #PortfolioReporterTest #test06 stamp: 'fr 11/15/2020 20:39:10'!
PASSED!

TreeReporter subclass: #FullTreeReporter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Part-II-Exercise'!

!classDefinition: #FullTreeReporter category: 'Portfolio-Part-II-Exercise' stamp: 'fr 11/15/2020 20:53:07'!
TreeReporter subclass: #FullTreeReporter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Part-II-Exercise'!

TreeReporter subclass: #TreeStructureReporter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Part-II-Exercise'!

!classDefinition: #TreeStructureReporter category: 'Portfolio-Part-II-Exercise' stamp: 'fr 11/15/2020 20:53:11'!
TreeReporter subclass: #TreeStructureReporter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Part-II-Exercise'!

PortfolioReporter subclass: #TreeReporter
	instanceVariableNames: 'indentationOffset tree'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Part-II-Exercise'!

!classDefinition: #TreeReporter category: 'Portfolio-Part-II-Exercise' stamp: 'fr 11/15/2020 20:53:15'!
PortfolioReporter subclass: #TreeReporter
	instanceVariableNames: 'indentationOffset tree'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Part-II-Exercise'!

!testRun: #PortfolioReporterTest #test01 stamp: 'fr 11/15/2020 20:53:17'!
PASSED!

!testRun: #PortfolioReporterTest #test02 stamp: 'fr 11/15/2020 20:53:17'!
PASSED!

!testRun: #PortfolioReporterTest #test03 stamp: 'fr 11/15/2020 20:53:17'!
PASSED!

!testRun: #PortfolioReporterTest #test04 stamp: 'fr 11/15/2020 20:53:17'!
PASSED!

!testRun: #PortfolioReporterTest #test05 stamp: 'fr 11/15/2020 20:53:17'!
PASSED!

!testRun: #PortfolioReporterTest #test06 stamp: 'fr 11/15/2020 20:53:17'!
PASSED!
!TreeReporter methodsFor: 'no messages' stamp: 'fr 11/15/2020 20:54:02'!
initializeFor: aPortfolio 
	
	indentationOffset _ 0.
	tree _ OrderedCollection new.
	portfolio _ aPortfolio.! !

!methodRemoval: FullTreeReporter #initializeFor: stamp: 'fr 11/15/2020 20:54:10'!
initializeFor: aPortfolio

	indentationOffset _ 0.
	tree _ OrderedCollection new.
	portfolio _ aPortfolio.!

!methodRemoval: TreeStructureReporter #initializeFor: stamp: 'fr 11/15/2020 20:54:16'!
initializeFor: aPortfolio 
	
	indentationOffset _ 0.
	tree _ OrderedCollection new.
	portfolio _ aPortfolio.!

!testRun: #PortfolioReporterTest #test01 stamp: 'fr 11/15/2020 20:54:17'!
PASSED!

!testRun: #PortfolioReporterTest #test02 stamp: 'fr 11/15/2020 20:54:17'!
PASSED!

!testRun: #PortfolioReporterTest #test03 stamp: 'fr 11/15/2020 20:54:17'!
PASSED!

!testRun: #PortfolioReporterTest #test04 stamp: 'fr 11/15/2020 20:54:17'!
PASSED!

!testRun: #PortfolioReporterTest #test05 stamp: 'fr 11/15/2020 20:54:17'!
PASSED!

!testRun: #PortfolioReporterTest #test06 stamp: 'fr 11/15/2020 20:54:17'!
PASSED!
!TreeReporter methodsFor: 'as yet unclassified' stamp: 'fr 11/15/2020 20:54:43'!
changeOffset: aValueToAdd

	indentationOffset _ indentationOffset + aValueToAdd ! !

!methodRemoval: FullTreeReporter #changeOffset: stamp: 'fr 11/15/2020 20:54:43'!
changeOffset: aValueToAdd

	indentationOffset _ indentationOffset + aValueToAdd !

!methodRemoval: TreeStructureReporter #changeOffset: stamp: 'fr 11/15/2020 20:54:54'!
changeOffset: aValueToAdd

	indentationOffset _ indentationOffset + aValueToAdd !

!methodRemoval: TreeStructureReporter #decreaseOffset stamp: 'fr 11/15/2020 20:54:57'!
decreaseOffset

	^ self changeOffset: - 1!

!methodRemoval: TreeStructureReporter #increaseOffset stamp: 'fr 11/15/2020 20:54:59'!
increaseOffset

	^ self changeOffset: 1!
!TreeReporter methodsFor: 'as yet unclassified' stamp: 'fr 11/15/2020 20:55:12'!
decreaseOffset

	^ self changeOffset: -1! !

!methodRemoval: FullTreeReporter #decreaseOffset stamp: 'fr 11/15/2020 20:55:12'!
decreaseOffset

	^ self changeOffset: -1!
!TreeReporter methodsFor: 'as yet unclassified' stamp: 'fr 11/15/2020 20:55:16'!
increaseOffset

	^ self changeOffset: 1! !

!methodRemoval: FullTreeReporter #increaseOffset stamp: 'fr 11/15/2020 20:55:16'!
increaseOffset

	^ self changeOffset: 1!
!TreeReporter methodsFor: 'as yet unclassified' stamp: 'fr 11/15/2020 20:55:23'!
indentation
	
	| indentation |
	indentation _ ''.
	indentationOffset timesRepeat: [indentation _ indentation,' '].
	^indentation! !

!methodRemoval: FullTreeReporter #indentation stamp: 'fr 11/15/2020 20:55:23'!
indentation
	
	| indentation |
	indentation _ ''.
	indentationOffset timesRepeat: [indentation _ indentation,' '].
	^indentation!
!TreeReporter methodsFor: 'as yet unclassified' stamp: 'fr 11/15/2020 20:55:36'!
nameWithIndentation: anAccount

	^self indentation,anAccount name! !

!methodRemoval: FullTreeReporter #nameWithIndentation: stamp: 'fr 11/15/2020 20:55:36'!
nameWithIndentation: anAccount

	^self indentation,anAccount name!
!TreeReporter methodsFor: 'as yet unclassified' stamp: 'fr 11/15/2020 20:55:47'!
addNameWithIndentation: anAccount

	tree add: (self nameWithIndentation: anAccount)! !

!methodRemoval: FullTreeReporter #addNameWithIndentation: stamp: 'fr 11/15/2020 20:55:47'!
addNameWithIndentation: anAccount

	tree add: (self nameWithIndentation: anAccount)!

!methodRemoval: TreeStructureReporter #addNameWithIndentation: stamp: 'fr 11/15/2020 20:55:57'!
addNameWithIndentation: anAccount

	tree add: (self nameWithIndentation: anAccount)!

!testRun: #PortfolioReporterTest #test01 stamp: 'fr 11/15/2020 20:56:00'!
PASSED!

!testRun: #PortfolioReporterTest #test02 stamp: 'fr 11/15/2020 20:56:00'!
PASSED!

!testRun: #PortfolioReporterTest #test03 stamp: 'fr 11/15/2020 20:56:00'!
PASSED!

!testRun: #PortfolioReporterTest #test04 stamp: 'fr 11/15/2020 20:56:00'!
PASSED!

!testRun: #PortfolioReporterTest #test05 stamp: 'fr 11/15/2020 20:56:00'!
PASSED!

!testRun: #PortfolioReporterTest #test06 stamp: 'fr 11/15/2020 20:56:00'!
PASSED!

!methodRemoval: TreeStructureReporter #indentation stamp: 'fr 11/15/2020 20:58:45'!
indentation
	
	| indentation |
	indentation _ ''.
	indentationOffset timesRepeat: [indentation _ indentation,' '].
	^indentation!

!testRun: #PortfolioReporterTest #test01 stamp: 'fr 11/15/2020 20:58:46'!
PASSED!

!testRun: #PortfolioReporterTest #test02 stamp: 'fr 11/15/2020 20:58:46'!
PASSED!

!testRun: #PortfolioReporterTest #test03 stamp: 'fr 11/15/2020 20:58:46'!
PASSED!

!testRun: #PortfolioReporterTest #test04 stamp: 'fr 11/15/2020 20:58:46'!
PASSED!

!testRun: #PortfolioReporterTest #test05 stamp: 'fr 11/15/2020 20:58:46'!
PASSED!

!testRun: #PortfolioReporterTest #test06 stamp: 'fr 11/15/2020 20:58:46'!
PASSED!

!methodRemoval: TreeStructureReporter #nameWithIndentation: stamp: 'fr 11/15/2020 20:59:01'!
nameWithIndentation: anAccount

	^self indentation,anAccount name!

!testRun: #PortfolioReporterTest #test01 stamp: 'fr 11/15/2020 20:59:02'!
PASSED!

!testRun: #PortfolioReporterTest #test02 stamp: 'fr 11/15/2020 20:59:02'!
PASSED!

!testRun: #PortfolioReporterTest #test03 stamp: 'fr 11/15/2020 20:59:02'!
PASSED!

!testRun: #PortfolioReporterTest #test04 stamp: 'fr 11/15/2020 20:59:02'!
PASSED!

!testRun: #PortfolioReporterTest #test05 stamp: 'fr 11/15/2020 20:59:02'!
PASSED!

!testRun: #PortfolioReporterTest #test06 stamp: 'fr 11/15/2020 20:59:02'!
PASSED!
!FullTreeReporter methodsFor: 'private' stamp: 'fr 11/15/2020 21:03:10' overrides: 50887600!
initializeFor: aPortfolio 
	
	indentationOffset _ 0.
	tree _ OrderedCollection new.
	portfolio _ aPortfolio.! !
!TreeStructureReporter methodsFor: 'private' stamp: 'fr 11/15/2020 21:03:10' overrides: 50887600!
initializeFor: aPortfolio 
	
	indentationOffset _ 0.
	tree _ OrderedCollection new.
	portfolio _ aPortfolio.! !

!methodRemoval: TreeReporter #initializeFor: stamp: 'fr 11/15/2020 21:03:10'!
initializeFor: aPortfolio 
	
	indentationOffset _ 0.
	tree _ OrderedCollection new.
	portfolio _ aPortfolio.!
!FullTreeReporter methodsFor: 'initialization' stamp: 'fr 11/15/2020 21:05:06'!
initializeVariablesWith: aPortfolio

	indentationOffset _ 0.
	tree _ OrderedCollection new.
	portfolio _ aPortfolio! !
!FullTreeReporter methodsFor: 'initialization' stamp: 'fr 11/15/2020 21:05:06' prior: 50887774!
initializeFor: aPortfolio 
	
	self initializeVariablesWith: aPortfolio.! !
!TreeReporter methodsFor: 'initialization' stamp: 'fr 11/15/2020 21:05:12'!
initializeVariablesWith: aPortfolio

	indentationOffset _ 0.
	tree _ OrderedCollection new.
	portfolio _ aPortfolio! !

!methodRemoval: FullTreeReporter #initializeVariablesWith: stamp: 'fr 11/15/2020 21:05:12'!
initializeVariablesWith: aPortfolio

	indentationOffset _ 0.
	tree _ OrderedCollection new.
	portfolio _ aPortfolio!
!TreeStructureReporter methodsFor: 'initialization' stamp: 'fr 11/15/2020 21:05:22' prior: 50887781!
initializeFor: aPortfolio 
	
	self initializeVariablesWith: aPortfolio.! !

!testRun: #PortfolioReporterTest #test01 stamp: 'fr 11/15/2020 21:05:38'!
PASSED!

!testRun: #PortfolioReporterTest #test02 stamp: 'fr 11/15/2020 21:05:38'!
PASSED!

!testRun: #PortfolioReporterTest #test03 stamp: 'fr 11/15/2020 21:05:38'!
PASSED!

!testRun: #PortfolioReporterTest #test04 stamp: 'fr 11/15/2020 21:05:38'!
PASSED!

!testRun: #PortfolioReporterTest #test05 stamp: 'fr 11/15/2020 21:05:38'!
PASSED!

!testRun: #PortfolioReporterTest #test06 stamp: 'fr 11/15/2020 21:05:38'!
PASSED!

!testRun: #PortfolioReporterTest #test01 stamp: 'fr 11/15/2020 21:05:40'!
PASSED!

!testRun: #PortfolioReporterTest #test02 stamp: 'fr 11/15/2020 21:05:40'!
PASSED!

!testRun: #PortfolioReporterTest #test03 stamp: 'fr 11/15/2020 21:05:40'!
PASSED!

!testRun: #PortfolioReporterTest #test04 stamp: 'fr 11/15/2020 21:05:40'!
PASSED!

!testRun: #PortfolioReporterTest #test05 stamp: 'fr 11/15/2020 21:05:40'!
PASSED!

!testRun: #PortfolioReporterTest #test06 stamp: 'fr 11/15/2020 21:05:40'!
PASSED!
!TransferNetReporter methodsFor: 'as yet unclassified' stamp: 'fr 11/15/2020 21:13:57' prior: 50880781!
addWithdrawByTransferToReport: aWithdrawByTransfer

	transferNetBalance _ aWithdrawByTransfer affectBalance: transferNetBalance ! !
!FullTreeReporter methodsFor: 'account add' stamp: 'fr 11/15/2020 21:24:08'!
addReceptiveAccountName: aReceptiveAccount and: aReceptiveAccountBlock
	
	self addNameWithIndentation: aReceptiveAccount.
	aReceptiveAccountBlock value: aReceptiveAccount 

	
	! !
!TreeReporter methodsFor: 'account add' stamp: 'fr 11/15/2020 21:24:16'!
addReceptiveAccountName: aReceptiveAccount and: aReceptiveAccountBlock
	
	self addNameWithIndentation: aReceptiveAccount.
	aReceptiveAccountBlock value: aReceptiveAccount 

	
	! !

!methodRemoval: FullTreeReporter #addReceptiveAccountName:and: stamp: 'fr 11/15/2020 21:24:16'!
addReceptiveAccountName: aReceptiveAccount and: aReceptiveAccountBlock
	
	self addNameWithIndentation: aReceptiveAccount.
	aReceptiveAccountBlock value: aReceptiveAccount 

	
	!
!FullTreeReporter methodsFor: 'account add' stamp: 'fr 11/15/2020 21:24:46' prior: 50887051!
addReceptiveAccountToReport: aReceptiveAccount
	
	self addReceptiveAccountName: aReceptiveAccount and: [self addSummaryReportWithIndentation: aReceptiveAccount]

	
	! !
!TreeReporter methodsFor: 'account add' stamp: 'fr 11/15/2020 21:25:03' prior: 50887871!
addReceptiveAccountName: aReceptiveAccount and: aReceptiveAccountBlock
	
	self addNameWithIndentation: aReceptiveAccount.
	aReceptiveAccountBlock value 

	
	! !

!testRun: #PortfolioReporterTest #test01 stamp: 'fr 11/15/2020 21:25:07'!
PASSED!

!testRun: #PortfolioReporterTest #test02 stamp: 'fr 11/15/2020 21:25:07'!
PASSED!

!testRun: #PortfolioReporterTest #test03 stamp: 'fr 11/15/2020 21:25:07'!
PASSED!

!testRun: #PortfolioReporterTest #test04 stamp: 'fr 11/15/2020 21:25:07'!
PASSED!

!testRun: #PortfolioReporterTest #test05 stamp: 'fr 11/15/2020 21:25:07'!
PASSED!

!testRun: #PortfolioReporterTest #test06 stamp: 'fr 11/15/2020 21:25:07'!
PASSED!
!TreeStructureReporter methodsFor: 'account add' stamp: 'fr 11/15/2020 21:25:29' prior: 50883501!
addReceptiveAccountToReport: aReceptiveAccount
	
	self addReceptiveAccountName: aReceptiveAccount and: []
! !

!testRun: #PortfolioReporterTest #test01 stamp: 'fr 11/15/2020 21:25:31'!
PASSED!

!testRun: #PortfolioReporterTest #test02 stamp: 'fr 11/15/2020 21:25:31'!
PASSED!

!testRun: #PortfolioReporterTest #test03 stamp: 'fr 11/15/2020 21:25:31'!
PASSED!

!testRun: #PortfolioReporterTest #test04 stamp: 'fr 11/15/2020 21:25:31'!
PASSED!

!testRun: #PortfolioReporterTest #test05 stamp: 'fr 11/15/2020 21:25:31'!
PASSED!

!testRun: #PortfolioReporterTest #test06 stamp: 'fr 11/15/2020 21:25:31'!
PASSED!
!FullTreeReporter methodsFor: 'account add' stamp: 'fr 11/15/2020 21:26:30'!
addPortfolioInformation: aPortfolio and: aPortfolioBalanceBlock
	
	self addNameWithIndentation: aPortfolio.
	self increaseOffset.
	aPortfolio buildPortfolioReportWith: self.
	aPortfolioBalanceBlock value.
	self decreaseOffset.! !
!TreeReporter methodsFor: 'account add' stamp: 'fr 11/15/2020 21:26:36'!
addPortfolioInformation: aPortfolio and: aPortfolioBalanceBlock
	
	self addNameWithIndentation: aPortfolio.
	self increaseOffset.
	aPortfolio buildPortfolioReportWith: self.
	aPortfolioBalanceBlock value.
	self decreaseOffset.! !

!methodRemoval: FullTreeReporter #addPortfolioInformation:and: stamp: 'fr 11/15/2020 21:26:36'!
addPortfolioInformation: aPortfolio and: aPortfolioBalanceBlock
	
	self addNameWithIndentation: aPortfolio.
	self increaseOffset.
	aPortfolio buildPortfolioReportWith: self.
	aPortfolioBalanceBlock value.
	self decreaseOffset.!
!FullTreeReporter methodsFor: 'account add' stamp: 'fr 11/15/2020 21:26:58' prior: 50886929!
addPortfolioToReport: aPortfolio
	
	self addNameWithIndentation: aPortfolio.
	self increaseOffset.
	aPortfolio buildPortfolioReportWith: self.
	self decreaseOffset.
	
	self addPortfolioInformation: aPortfolio and: [	self addBalanceWithIndentation: aPortfolio]! !
!FullTreeReporter methodsFor: 'account add' stamp: 'fr 11/15/2020 21:27:02' prior: 50887975!
addPortfolioToReport: aPortfolio
	
	self addPortfolioInformation: aPortfolio and: [	self addBalanceWithIndentation: aPortfolio]! !

!testRun: #PortfolioReporterTest #test01 stamp: 'fr 11/15/2020 21:27:06'!
PASSED!

!testRun: #PortfolioReporterTest #test02 stamp: 'fr 11/15/2020 21:27:06'!
PASSED!

!testRun: #PortfolioReporterTest #test03 stamp: 'fr 11/15/2020 21:27:06'!
PASSED!

!testRun: #PortfolioReporterTest #test04 stamp: 'fr 11/15/2020 21:27:06'!
PASSED!

!testRun: #PortfolioReporterTest #test05 stamp: 'fr 11/15/2020 21:27:06'!
PASSED!

!testRun: #PortfolioReporterTest #test06 stamp: 'fr 11/15/2020 21:27:06'!
PASSED!
!TreeStructureReporter methodsFor: 'account add' stamp: 'fr 11/15/2020 21:27:30' prior: 50884127!
addPortfolioToReport: aPortfolio
	
	self addPortfolioInformation: aPortfolio and: [	self addBalanceWithIndentation: aPortfolio]! !

!testRun: #PortfolioReporterTest #test01 stamp: 'fr 11/15/2020 21:27:32'!
ERROR!

!testRun: #PortfolioReporterTest #test02 stamp: 'fr 11/15/2020 21:27:32'!
ERROR!

!testRun: #PortfolioReporterTest #test03 stamp: 'fr 11/15/2020 21:27:32'!
ERROR!

!testRun: #PortfolioReporterTest #test04 stamp: 'fr 11/15/2020 21:27:32'!
PASSED!

!testRun: #PortfolioReporterTest #test05 stamp: 'fr 11/15/2020 21:27:32'!
PASSED!

!testRun: #PortfolioReporterTest #test06 stamp: 'fr 11/15/2020 21:27:32'!
PASSED!
!TreeStructureReporter methodsFor: 'account add' stamp: 'fr 11/15/2020 21:27:40' prior: 50888010!
addPortfolioToReport: aPortfolio
	
	self addPortfolioInformation: aPortfolio and: []! !

!testRun: #PortfolioReporterTest #test01 stamp: 'fr 11/15/2020 21:27:41'!
PASSED!

!testRun: #PortfolioReporterTest #test02 stamp: 'fr 11/15/2020 21:27:41'!
PASSED!

!testRun: #PortfolioReporterTest #test03 stamp: 'fr 11/15/2020 21:27:41'!
PASSED!

!testRun: #PortfolioReporterTest #test04 stamp: 'fr 11/15/2020 21:27:41'!
PASSED!

!testRun: #PortfolioReporterTest #test05 stamp: 'fr 11/15/2020 21:27:41'!
PASSED!

!testRun: #PortfolioReporterTest #test06 stamp: 'fr 11/15/2020 21:27:41'!
PASSED!
!FullTreeReporter methodsFor: 'report' stamp: 'fr 11/15/2020 21:28:54'!
report

	self addPortfolioToReport: portfolio.
	^tree
	! !
!TreeReporter methodsFor: 'report' stamp: 'fr 11/15/2020 21:29:02'!
report

	self addPortfolioToReport: portfolio.
	^tree
	! !

!methodRemoval: FullTreeReporter #report stamp: 'fr 11/15/2020 21:29:02'!
report

	self addPortfolioToReport: portfolio.
	^tree
	!
!FullTreeReporter methodsFor: 'report' stamp: 'fr 11/15/2020 21:29:11' prior: 50886915!
specialReport

	self report
	! !

!testRun: #PortfolioReporterTest #test01 stamp: 'fr 11/15/2020 21:29:13'!
PASSED!

!testRun: #PortfolioReporterTest #test02 stamp: 'fr 11/15/2020 21:29:13'!
PASSED!

!testRun: #PortfolioReporterTest #test03 stamp: 'fr 11/15/2020 21:29:13'!
PASSED!

!testRun: #PortfolioReporterTest #test04 stamp: 'fr 11/15/2020 21:29:13'!
FAILURE!

!testRun: #PortfolioReporterTest #test05 stamp: 'fr 11/15/2020 21:29:13'!
FAILURE!

!testRun: #PortfolioReporterTest #test06 stamp: 'fr 11/15/2020 21:29:13'!
FAILURE!
!FullTreeReporter methodsFor: 'report' stamp: 'fr 11/15/2020 21:29:33' prior: 50888067!
specialReport

	^self report
	! !

!testRun: #PortfolioReporterTest #test01 stamp: 'fr 11/15/2020 21:29:35'!
PASSED!

!testRun: #PortfolioReporterTest #test02 stamp: 'fr 11/15/2020 21:29:35'!
PASSED!

!testRun: #PortfolioReporterTest #test03 stamp: 'fr 11/15/2020 21:29:35'!
PASSED!

!testRun: #PortfolioReporterTest #test04 stamp: 'fr 11/15/2020 21:29:35'!
PASSED!

!testRun: #PortfolioReporterTest #test05 stamp: 'fr 11/15/2020 21:29:35'!
PASSED!

!testRun: #PortfolioReporterTest #test06 stamp: 'fr 11/15/2020 21:29:35'!
PASSED!
!TreeStructureReporter methodsFor: 'report' stamp: 'fr 11/15/2020 21:29:43' prior: 50883795!
treeStructure
	
	^self report! !

!testRun: #PortfolioReporterTest #test01 stamp: 'fr 11/15/2020 21:29:45'!
PASSED!

!testRun: #PortfolioReporterTest #test02 stamp: 'fr 11/15/2020 21:29:45'!
PASSED!

!testRun: #PortfolioReporterTest #test03 stamp: 'fr 11/15/2020 21:29:45'!
PASSED!

!testRun: #PortfolioReporterTest #test04 stamp: 'fr 11/15/2020 21:29:45'!
PASSED!

!testRun: #PortfolioReporterTest #test05 stamp: 'fr 11/15/2020 21:29:45'!
PASSED!

!testRun: #PortfolioReporterTest #test06 stamp: 'fr 11/15/2020 21:29:45'!
PASSED!
!PortfolioReporterTest methodsFor: 'tests - tree report' stamp: 'fr 11/15/2020 21:37:31'!
test01EmptyPortfolioShouldPrintJustItsName

	| portfolio reporter |
	portfolio _ Portfolio named: 'Portfolio de la familia'.
	reporter _ TreeStructureReporter for: portfolio.

	self assert: [reporter treeStructure = (OrderedCollection with: 'Portfolio de la familia')]! !

!methodRemoval: PortfolioReporterTest #test01 stamp: 'fr 11/15/2020 21:37:31'!
test01

	| portfolio reporter |
	portfolio _ Portfolio named: 'Portfolio de la familia'.
	reporter _ TreeStructureReporter for: portfolio.

	self assert: [reporter treeStructure = (OrderedCollection with: 'Portfolio de la familia')]!

!testRun: #PortfolioReporterTest #test01EmptyPortfolioShouldPrintJustItsName stamp: 'fr 11/15/2020 21:37:33'!
PASSED!

!testRun: #PortfolioReporterTest #test01EmptyPortfolioShouldPrintJustItsName stamp: 'fr 11/15/2020 21:37:33'!
PASSED!

!testRun: #PortfolioReporterTest #test02 stamp: 'fr 11/15/2020 21:37:33'!
PASSED!

!testRun: #PortfolioReporterTest #test03 stamp: 'fr 11/15/2020 21:37:33'!
PASSED!

!testRun: #PortfolioReporterTest #test04 stamp: 'fr 11/15/2020 21:37:33'!
PASSED!

!testRun: #PortfolioReporterTest #test05 stamp: 'fr 11/15/2020 21:37:33'!
PASSED!

!testRun: #PortfolioReporterTest #test06 stamp: 'fr 11/15/2020 21:37:33'!
PASSED!
!PortfolioReporterTest methodsFor: 'tests - tree report' stamp: 'fr 11/15/2020 21:38:37'!
test01EmptyPortfolioShouldProduceACollectionWithJustItsName

	| portfolio reporter |
	portfolio _ Portfolio named: 'Portfolio de la familia'.
	reporter _ TreeStructureReporter for: portfolio.

	self assert: [reporter treeStructure = (OrderedCollection with: 'Portfolio de la familia')]! !

!methodRemoval: PortfolioReporterTest #test01EmptyPortfolioShouldPrintJustItsName stamp: 'fr 11/15/2020 21:38:37'!
test01EmptyPortfolioShouldPrintJustItsName

	| portfolio reporter |
	portfolio _ Portfolio named: 'Portfolio de la familia'.
	reporter _ TreeStructureReporter for: portfolio.

	self assert: [reporter treeStructure = (OrderedCollection with: 'Portfolio de la familia')]!
!PortfolioReporterTest methodsFor: 'tests - tree report' stamp: 'fr 11/15/2020 21:39:47'!
test02PortfolioWithOneAccountShouldProduceACollectionWithItsNameAndTheAccountsNameIndented

	| portfolio account reporter |
	account _ ReceptiveAccount named: 'Cuenta de Juan'.
	portfolio _ Portfolio named: 'Portfolio de la familia' with: account.
	reporter _ TreeStructureReporter for: portfolio.

	self assert: [reporter treeStructure = (OrderedCollection with: 'Portfolio de la familia' with: ' Cuenta de Juan')]! !

!methodRemoval: PortfolioReporterTest #test02 stamp: 'fr 11/15/2020 21:39:47'!
test02

	| portfolio account reporter |
	account _ ReceptiveAccount named: 'Cuenta de Juan'.
	portfolio _ Portfolio named: 'Portfolio de la familia' with: account.
	reporter _ TreeStructureReporter for: portfolio.

	self assert: [reporter treeStructure = (OrderedCollection with: 'Portfolio de la familia' with: ' Cuenta de Juan')]!
!PortfolioReporterTest methodsFor: 'tests - tree report' stamp: 'fr 11/15/2020 21:41:10'!
test02ReporterForPortfolioWithOneAccountShouldProduceACollectionWithItsNameAndTheAccountsNameIndented

	| portfolio account reporter |
	account _ ReceptiveAccount named: 'Cuenta de Juan'.
	portfolio _ Portfolio named: 'Portfolio de la familia' with: account.
	reporter _ TreeStructureReporter for: portfolio.

	self assert: [reporter treeStructure = (OrderedCollection with: 'Portfolio de la familia' with: ' Cuenta de Juan')]! !

!methodRemoval: PortfolioReporterTest #test02PortfolioWithOneAccountShouldProduceACollectionWithItsNameAndTheAccountsNameIndented stamp: 'fr 11/15/2020 21:41:10'!
test02PortfolioWithOneAccountShouldProduceACollectionWithItsNameAndTheAccountsNameIndented

	| portfolio account reporter |
	account _ ReceptiveAccount named: 'Cuenta de Juan'.
	portfolio _ Portfolio named: 'Portfolio de la familia' with: account.
	reporter _ TreeStructureReporter for: portfolio.

	self assert: [reporter treeStructure = (OrderedCollection with: 'Portfolio de la familia' with: ' Cuenta de Juan')]!
!PortfolioReporterTest methodsFor: 'tests - tree report' stamp: 'fr 11/15/2020 21:41:16'!
test01ReporterForEmptyPortfolioShouldProduceACollectionWithJustItsName

	| portfolio reporter |
	portfolio _ Portfolio named: 'Portfolio de la familia'.
	reporter _ TreeStructureReporter for: portfolio.

	self assert: [reporter treeStructure = (OrderedCollection with: 'Portfolio de la familia')]! !

!methodRemoval: PortfolioReporterTest #test01EmptyPortfolioShouldProduceACollectionWithJustItsName stamp: 'fr 11/15/2020 21:41:16'!
test01EmptyPortfolioShouldProduceACollectionWithJustItsName

	| portfolio reporter |
	portfolio _ Portfolio named: 'Portfolio de la familia'.
	reporter _ TreeStructureReporter for: portfolio.

	self assert: [reporter treeStructure = (OrderedCollection with: 'Portfolio de la familia')]!
!PortfolioReporterTest methodsFor: 'tests - tree report' stamp: 'fr 11/15/2020 21:42:15'!
test03ReporterForPortfolioWithAccountsAndPortfoliosWorksAsExpected

	| portfolio account anotherAccount anotherPortfolio reporter |
	account _ ReceptiveAccount named: 'Cuenta de Juan'.
	anotherAccount _ ReceptiveAccount named: 'Cuenta de Angeles'.
	portfolio _ Portfolio named: 'Portfolio de Angeles' with: anotherAccount.
	anotherPortfolio _ Portfolio named: 'Portfolio de la familia' with: portfolio with: account.
	reporter _ TreeStructureReporter for: anotherPortfolio.


	self assert: [reporter treeStructure = (OrderedCollection with: 'Portfolio de la familia' with: ' Portfolio de Angeles' with: '  Cuenta de Angeles' with: ' Cuenta de Juan')]! !

!methodRemoval: PortfolioReporterTest #test03 stamp: 'fr 11/15/2020 21:42:15'!
test03

	| portfolio account anotherAccount anotherPortfolio reporter |
	account _ ReceptiveAccount named: 'Cuenta de Juan'.
	anotherAccount _ ReceptiveAccount named: 'Cuenta de Angeles'.
	portfolio _ Portfolio named: 'Portfolio de Angeles' with: anotherAccount.
	anotherPortfolio _ Portfolio named: 'Portfolio de la familia' with: portfolio with: account.
	reporter _ TreeStructureReporter for: anotherPortfolio.


	self assert: [reporter treeStructure = (OrderedCollection with: 'Portfolio de la familia' with: ' Portfolio de Angeles' with: '  Cuenta de Angeles' with: ' Cuenta de Juan')]!
!PortfolioReporterTest methodsFor: 'tests - tree report' stamp: 'fr 11/15/2020 21:42:34'!
test02ReporterForPortfolioWithOneAccountWorksAsExpected

	| portfolio account reporter |
	account _ ReceptiveAccount named: 'Cuenta de Juan'.
	portfolio _ Portfolio named: 'Portfolio de la familia' with: account.
	reporter _ TreeStructureReporter for: portfolio.

	self assert: [reporter treeStructure = (OrderedCollection with: 'Portfolio de la familia' with: ' Cuenta de Juan')]! !

!methodRemoval: PortfolioReporterTest #test02ReporterForPortfolioWithOneAccountShouldProduceACollectionWithItsNameAndTheAccountsNameIndented stamp: 'fr 11/15/2020 21:42:34'!
test02ReporterForPortfolioWithOneAccountShouldProduceACollectionWithItsNameAndTheAccountsNameIndented

	| portfolio account reporter |
	account _ ReceptiveAccount named: 'Cuenta de Juan'.
	portfolio _ Portfolio named: 'Portfolio de la familia' with: account.
	reporter _ TreeStructureReporter for: portfolio.

	self assert: [reporter treeStructure = (OrderedCollection with: 'Portfolio de la familia' with: ' Cuenta de Juan')]!
!PortfolioReporterTest methodsFor: 'tests - tree report' stamp: 'fr 11/15/2020 21:42:44'!
test01ReporterForEmptyPortfolioWorksAsExpected

	| portfolio reporter |
	portfolio _ Portfolio named: 'Portfolio de la familia'.
	reporter _ TreeStructureReporter for: portfolio.

	self assert: [reporter treeStructure = (OrderedCollection with: 'Portfolio de la familia')]! !

!methodRemoval: PortfolioReporterTest #test01ReporterForEmptyPortfolioShouldProduceACollectionWithJustItsName stamp: 'fr 11/15/2020 21:42:44'!
test01ReporterForEmptyPortfolioShouldProduceACollectionWithJustItsName

	| portfolio reporter |
	portfolio _ Portfolio named: 'Portfolio de la familia'.
	reporter _ TreeStructureReporter for: portfolio.

	self assert: [reporter treeStructure = (OrderedCollection with: 'Portfolio de la familia')]!
!PortfolioReporterTest methodsFor: 'tests - tree report' stamp: 'fr 11/15/2020 21:43:16'!
test01TreeStructureReportForEmptyPortfolioWorksAsExpected

	| portfolio reporter |
	portfolio _ Portfolio named: 'Portfolio de la familia'.
	reporter _ TreeStructureReporter for: portfolio.

	self assert: [reporter treeStructure = (OrderedCollection with: 'Portfolio de la familia')]! !

!methodRemoval: PortfolioReporterTest #test01ReporterForEmptyPortfolioWorksAsExpected stamp: 'fr 11/15/2020 21:43:16'!
test01ReporterForEmptyPortfolioWorksAsExpected

	| portfolio reporter |
	portfolio _ Portfolio named: 'Portfolio de la familia'.
	reporter _ TreeStructureReporter for: portfolio.

	self assert: [reporter treeStructure = (OrderedCollection with: 'Portfolio de la familia')]!
!PortfolioReporterTest methodsFor: 'tests - tree report' stamp: 'fr 11/15/2020 21:43:24'!
test02TreeStructureReportForPortfolioWithOneAccountWorksAsExpected

	| portfolio account reporter |
	account _ ReceptiveAccount named: 'Cuenta de Juan'.
	portfolio _ Portfolio named: 'Portfolio de la familia' with: account.
	reporter _ TreeStructureReporter for: portfolio.

	self assert: [reporter treeStructure = (OrderedCollection with: 'Portfolio de la familia' with: ' Cuenta de Juan')]! !

!methodRemoval: PortfolioReporterTest #test02ReporterForPortfolioWithOneAccountWorksAsExpected stamp: 'fr 11/15/2020 21:43:24'!
test02ReporterForPortfolioWithOneAccountWorksAsExpected

	| portfolio account reporter |
	account _ ReceptiveAccount named: 'Cuenta de Juan'.
	portfolio _ Portfolio named: 'Portfolio de la familia' with: account.
	reporter _ TreeStructureReporter for: portfolio.

	self assert: [reporter treeStructure = (OrderedCollection with: 'Portfolio de la familia' with: ' Cuenta de Juan')]!
!PortfolioReporterTest methodsFor: 'tests - tree report' stamp: 'fr 11/15/2020 21:43:33'!
test03TreeStructureReportForPortfolioWithAccountsAndPortfoliosWorksAsExpected

	| portfolio account anotherAccount anotherPortfolio reporter |
	account _ ReceptiveAccount named: 'Cuenta de Juan'.
	anotherAccount _ ReceptiveAccount named: 'Cuenta de Angeles'.
	portfolio _ Portfolio named: 'Portfolio de Angeles' with: anotherAccount.
	anotherPortfolio _ Portfolio named: 'Portfolio de la familia' with: portfolio with: account.
	reporter _ TreeStructureReporter for: anotherPortfolio.


	self assert: [reporter treeStructure = (OrderedCollection with: 'Portfolio de la familia' with: ' Portfolio de Angeles' with: '  Cuenta de Angeles' with: ' Cuenta de Juan')]! !

!methodRemoval: PortfolioReporterTest #test03ReporterForPortfolioWithAccountsAndPortfoliosWorksAsExpected stamp: 'fr 11/15/2020 21:43:33'!
test03ReporterForPortfolioWithAccountsAndPortfoliosWorksAsExpected

	| portfolio account anotherAccount anotherPortfolio reporter |
	account _ ReceptiveAccount named: 'Cuenta de Juan'.
	anotherAccount _ ReceptiveAccount named: 'Cuenta de Angeles'.
	portfolio _ Portfolio named: 'Portfolio de Angeles' with: anotherAccount.
	anotherPortfolio _ Portfolio named: 'Portfolio de la familia' with: portfolio with: account.
	reporter _ TreeStructureReporter for: anotherPortfolio.


	self assert: [reporter treeStructure = (OrderedCollection with: 'Portfolio de la familia' with: ' Portfolio de Angeles' with: '  Cuenta de Angeles' with: ' Cuenta de Juan')]!
!PortfolioReporterTest methodsFor: 'tests - special report' stamp: 'fr 11/15/2020 21:43:52'!
test04SpecialReportForEmptyPortfolioWorksAsExpected

	| portfolio reporter |
	portfolio _ Portfolio named: 'Portfolio de Fede'.
	reporter _ FullTreeReporter for: portfolio.

	self assert: [reporter specialReport = (OrderedCollection with: 'Portfolio de Fede' with: ' Balance = 0')]! !

!methodRemoval: PortfolioReporterTest #test04 stamp: 'fr 11/15/2020 21:43:52'!
test04

	| portfolio reporter |
	portfolio _ Portfolio named: 'Portfolio de Fede'.
	reporter _ FullTreeReporter for: portfolio.

	self assert: [reporter specialReport = (OrderedCollection with: 'Portfolio de Fede' with: ' Balance = 0')]!
!PortfolioReporterTest methodsFor: 'tests - special report' stamp: 'fr 11/15/2020 21:44:28'!
test05SpecialReportForPortfolioWithAccountsWithAnyKindOfTransactionsWorksAsExpected

	| portfolio account anotherAccount expectedReport reporter |
	account _ ReceptiveAccount named: 'Cuenta de Fede'.
	anotherAccount _ ReceptiveAccount new.
	Deposit register: 100 on: account.
	Withdraw register: 50 on: account.
	Transfer move: 10 from: account to: anotherAccount.
	Transfer move: 5 from: anotherAccount to: account.
	portfolio _ Portfolio named: 'Portfolio de Fede' with: account.
	expectedReport _ OrderedCollection with: 'Portfolio de Fede'.
	expectedReport add: ' Cuenta de Fede'.
	expectedReport add: '  Dep�sito por 100.'.
	expectedReport add: '  Extracci�n por 50.'.
	expectedReport add: '  Salida por transferencia de 10.'.
	expectedReport add: '  Entrada por transferencia de 5.'.
	expectedReport add: '  Balance = 45'.
	expectedReport add: ' Balance = 45'.
	reporter _ FullTreeReporter for: portfolio.

	self assert: [reporter specialReport = expectedReport]! !

!methodRemoval: PortfolioReporterTest #test05 stamp: 'fr 11/15/2020 21:44:28'!
test05

	| portfolio account anotherAccount expectedReport reporter |
	account _ ReceptiveAccount named: 'Cuenta de Fede'.
	anotherAccount _ ReceptiveAccount new.
	Deposit register: 100 on: account.
	Withdraw register: 50 on: account.
	Transfer move: 10 from: account to: anotherAccount.
	Transfer move: 5 from: anotherAccount to: account.
	portfolio _ Portfolio named: 'Portfolio de Fede' with: account.
	expectedReport _ OrderedCollection with: 'Portfolio de Fede'.
	expectedReport add: ' Cuenta de Fede'.
	expectedReport add: '  Dep�sito por 100.'.
	expectedReport add: '  Extracci�n por 50.'.
	expectedReport add: '  Salida por transferencia de 10.'.
	expectedReport add: '  Entrada por transferencia de 5.'.
	expectedReport add: '  Balance = 45'.
	expectedReport add: ' Balance = 45'.
	reporter _ FullTreeReporter for: portfolio.

	self assert: [reporter specialReport = expectedReport]!
!PortfolioReporterTest methodsFor: 'tests - tree report' stamp: 'fr 11/15/2020 21:44:42'!
test02TreeStructureReportForPortfolioWithAccountsWorksAsExpected

	| portfolio account reporter |
	account _ ReceptiveAccount named: 'Cuenta de Juan'.
	portfolio _ Portfolio named: 'Portfolio de la familia' with: account.
	reporter _ TreeStructureReporter for: portfolio.

	self assert: [reporter treeStructure = (OrderedCollection with: 'Portfolio de la familia' with: ' Cuenta de Juan')]! !

!methodRemoval: PortfolioReporterTest #test02TreeStructureReportForPortfolioWithOneAccountWorksAsExpected stamp: 'fr 11/15/2020 21:44:42'!
test02TreeStructureReportForPortfolioWithOneAccountWorksAsExpected

	| portfolio account reporter |
	account _ ReceptiveAccount named: 'Cuenta de Juan'.
	portfolio _ Portfolio named: 'Portfolio de la familia' with: account.
	reporter _ TreeStructureReporter for: portfolio.

	self assert: [reporter treeStructure = (OrderedCollection with: 'Portfolio de la familia' with: ' Cuenta de Juan')]!
!PortfolioReporterTest methodsFor: 'tests - special report' stamp: 'fr 11/15/2020 21:45:14'!
test06SpecialReportForPortfolioWithAccountsAndPortfoliosWithAnyKindOfTransactionsWorksAsExpected

	| portfolio account anotherAccount expectedReport anotherPortfolio reporter |
	account _ ReceptiveAccount named: 'Cuenta de Fede'.
	anotherAccount _ ReceptiveAccount named: 'Cuenta de Juan'.
	Deposit register: 100 on: account.
	Withdraw register: 50 on: account.
	Transfer move: 10 from: account to: anotherAccount.
	Transfer move: 5 from: anotherAccount to: account.
	anotherPortfolio _ Portfolio named: 'Portfolio de Juan' with: anotherAccount.
	portfolio _ Portfolio named: 'Portfolio de Fede' with: account with: anotherPortfolio.
	expectedReport _ OrderedCollection with: 'Portfolio de Fede'.
	expectedReport add: ' Cuenta de Fede'.
	expectedReport add: '  Dep�sito por 100.'.
	expectedReport add: '  Extracci�n por 50.'.
	expectedReport add: '  Salida por transferencia de 10.'.
	expectedReport add: '  Entrada por transferencia de 5.'.
	expectedReport add: '  Balance = 45'.
	expectedReport add: ' Portfolio de Juan'.
	expectedReport add: '  Cuenta de Juan'.
	expectedReport add: '   Entrada por transferencia de 10.'.
	expectedReport add: '   Salida por transferencia de 5.'.
	expectedReport add: '   Balance = 5'.
	expectedReport add: '  Balance = 5'.
	expectedReport add: ' Balance = 50'.
	reporter _ FullTreeReporter for: portfolio.
	
	self assert: [reporter specialReport = expectedReport]! !

!methodRemoval: PortfolioReporterTest #test06 stamp: 'fr 11/15/2020 21:45:14'!
test06

	| portfolio account anotherAccount expectedReport anotherPortfolio reporter |
	account _ ReceptiveAccount named: 'Cuenta de Fede'.
	anotherAccount _ ReceptiveAccount named: 'Cuenta de Juan'.
	Deposit register: 100 on: account.
	Withdraw register: 50 on: account.
	Transfer move: 10 from: account to: anotherAccount.
	Transfer move: 5 from: anotherAccount to: account.
	anotherPortfolio _ Portfolio named: 'Portfolio de Juan' with: anotherAccount.
	portfolio _ Portfolio named: 'Portfolio de Fede' with: account with: anotherPortfolio.
	expectedReport _ OrderedCollection with: 'Portfolio de Fede'.
	expectedReport add: ' Cuenta de Fede'.
	expectedReport add: '  Dep�sito por 100.'.
	expectedReport add: '  Extracci�n por 50.'.
	expectedReport add: '  Salida por transferencia de 10.'.
	expectedReport add: '  Entrada por transferencia de 5.'.
	expectedReport add: '  Balance = 45'.
	expectedReport add: ' Portfolio de Juan'.
	expectedReport add: '  Cuenta de Juan'.
	expectedReport add: '   Entrada por transferencia de 10.'.
	expectedReport add: '   Salida por transferencia de 5.'.
	expectedReport add: '   Balance = 5'.
	expectedReport add: '  Balance = 5'.
	expectedReport add: ' Balance = 50'.
	reporter _ FullTreeReporter for: portfolio.
	
	self assert: [reporter specialReport = expectedReport]!
!PortfolioReporterTest methodsFor: 'tests - tree report' stamp: 'fr 11/15/2020 21:45:22'!
test04

	| portfolio account anotherAccount anotherPortfolio reporter |
	account _ ReceptiveAccount named: 'Cuenta de Juan'.
	anotherAccount _ ReceptiveAccount named: 'Cuenta de Angeles'.
	portfolio _ Portfolio named: 'Portfolio de Angeles' with: anotherAccount.
	anotherPortfolio _ Portfolio named: 'Portfolio de la familia' with: portfolio with: account.
	reporter _ TreeStructureReporter for: anotherPortfolio.


	self assert: [reporter treeStructure = (OrderedCollection with: 'Portfolio de la familia' with: ' Portfolio de Angeles' with: '  Cuenta de Angeles' with: ' Cuenta de Juan')]! !
!PortfolioReporterTest methodsFor: 'tests - tree report' stamp: 'fr 11/15/2020 21:45:39' prior: 50888703!
test04

	| portfolio account anotherAccount anotherPortfolio reporter |
	account _ ReceptiveAccount named: 'Cuenta de Juan'.
	anotherAccount _ ReceptiveAccount named: 'Cuenta de Angeles'.
	portfolio _ Portfolio named: 'Portfolio de Angeles' with: anotherAccount.
	anotherPortfolio _ Portfolio named: 'Portfolio de la familia' with: portfolio with: account.
	reporter _ TreeStructureReporter for: anotherPortfolio.


	self assert: [reporter treeStructure = (OrderedCollection with: 'Portfolio de la familia' with: ' Portfolio de Angeles' with: '  Cuenta de Angeles' with: ' Cuenta de Juan')]! !
!PortfolioReporterTest methodsFor: 'tests - tree report' stamp: 'fr 11/15/2020 21:46:07' prior: 50888725!
test04

	| portfolio account reporter |
	account _ ReceptiveAccount new.
	portfolio _ Portfolio with: account.
	reporter _ TreeStructureReporter for: portfolio.


	self assert: [reporter treeStructure = (OrderedCollection with: 'Portfolio de la familia' with: ' Portfolio de Angeles' with: '  Cuenta de Angeles' with: ' Cuenta de Juan')]! !
!PortfolioReporterTest methodsFor: 'tests - tree report' stamp: 'fr 11/15/2020 21:46:47' prior: 50888747!
test04

	| portfolio account reporter |
	account _ ReceptiveAccount new.
	portfolio _ Portfolio with: account.
	reporter _ TreeStructureReporter for: portfolio.


	self assert: [reporter treeStructure = (OrderedCollection with: 'Un portfolio' with: 'Una cuenta')]! !

!testRun: #PortfolioReporterTest #test04 stamp: 'fr 11/15/2020 21:47:05'!
ERROR!

!testRun: #PortfolioReporterTest #test04 stamp: 'fr 11/15/2020 21:52:03'!
ERROR!

!testRun: #PortfolioReporterTest #test04 stamp: 'fr 11/15/2020 21:52:03'!
ERROR!

!testRun: #PortfolioReporterTest #test04 stamp: 'fr 11/15/2020 21:52:12'!
ERROR!

!testRun: #PortfolioReporterTest #test04 stamp: 'fr 11/15/2020 21:52:12'!
ERROR!

!testRun: #PortfolioReporterTest #test04 stamp: 'fr 11/15/2020 21:52:29'!
ERROR!

!testRun: #PortfolioReporterTest #test04 stamp: 'fr 11/15/2020 21:52:29'!
ERROR!

!testRun: #PortfolioReporterTest #test04 stamp: 'fr 11/15/2020 21:52:33'!
ERROR!

!testRun: #PortfolioReporterTest #test04 stamp: 'fr 11/15/2020 21:52:33'!
ERROR!
!ReceptiveAccount methodsFor: 'initialization' stamp: 'fr 11/15/2020 21:53:11' prior: 50868329 overrides: 16896425!
initialize

	super initialize.
	name _ 'Una cuenta'.
	transactions _ OrderedCollection new.! !

!testRun: #PortfolioReporterTest #test04 stamp: 'fr 11/15/2020 21:53:13'!
ERROR!
!Portfolio class methodsFor: 'as yet unclassified' stamp: 'fr 11/15/2020 21:54:04' prior: 50868304!
with: anAccount

	^self new initializeWith: anAccount! !
!Portfolio class methodsFor: 'as yet unclassified' stamp: 'fr 11/15/2020 21:54:16' prior: 50888806!
with: anAccount

	^self new initializeWith: anAccount 
! !

!testRun: #PortfolioReporterTest #test04 stamp: 'fr 11/15/2020 21:54:18'!
ERROR!

!classDefinition: #Portfolio category: 'Portfolio-Part-II-Exercise' stamp: 'fr 11/15/2020 21:54:36'!
Account subclass: #Portfolio
	instanceVariableNames: 'accounts parents name account'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Part-II-Exercise'!
!Portfolio methodsFor: 'initialization' stamp: 'fr 11/15/2020 21:54:36'!
initializeWith: anAccount 
	self shouldBeImplemented.
	account := anAccount.! !
!Portfolio class methodsFor: 'as yet unclassified' stamp: 'HAW 5/25/2019 11:18:21' prior: 50888811!
with: anAccount

	^self new 
		add: anAccount;
		yourself! !

!testRun: #PortfolioReporterTest #test04 stamp: 'fr 11/15/2020 21:59:37'!
ERROR!

!testRun: #PortfolioReporterTest #test04 stamp: 'fr 11/15/2020 21:59:37'!
ERROR!

account!
!Portfolio class methodsFor: 'as yet unclassified' stamp: 'fr 11/15/2020 22:00:10' prior: 50888833!
with: anAccount

	^self new 
		add: anAccount;
		defaultPortfolioName;
		yourself! !

!testRun: #PortfolioReporterTest #test04 stamp: 'fr 11/15/2020 22:00:13'!
ERROR!
!Portfolio methodsFor: 'private' stamp: 'fr 11/15/2020 22:00:21'!
defaultPortfolioName
	self shouldBeImplemented.! !
!Portfolio methodsFor: 'private' stamp: 'fr 11/15/2020 22:00:27' prior: 50888852!
defaultPortfolioName
	
	name _ 'Un portfolio'! !

!testRun: #PortfolioReporterTest #test04 stamp: 'fr 11/15/2020 22:00:28'!
FAILURE!

reporter treeStructure!

reporter treeStructure!

portfolio!

account!

anAccount!

!testRun: #PortfolioReporterTest #test04 stamp: 'fr 11/15/2020 22:02:35'!
FAILURE!

!testRun: #PortfolioReporterTest #test04 stamp: 'fr 11/15/2020 22:02:39'!
PASSED!

!testRun: #PortfolioReporterTest #test04 stamp: 'fr 11/15/2020 22:02:42'!
FAILURE!

reporter treeStructure!

self report!

tree!

tree!

reporter treeStructure!

!testRun: #PortfolioReporterTest #test04 stamp: 'fr 11/15/2020 22:04:11'!
FAILURE!

reporter treeStructure!

reporter!

self treeStructure !

----SNAPSHOT----(15 November 2020 22:05:24) CuisUniversity-4384.image priorSource: 17730975!

!testRun: #PortfolioReporterTest #test04 stamp: 'fr 11/15/2020 22:05:45'!
FAILURE!

!testRun: #PortfolioReporterTest #test04 stamp: 'fr 11/15/2020 22:05:45'!
FAILURE!
!PortfolioReporterTest methodsFor: 'tests - tree report' stamp: 'fr 11/15/2020 22:06:03' prior: 50888761!
test04

	| portfolio account reporter |
	account _ ReceptiveAccount new.
	portfolio _ Portfolio with: account.
	reporter _ TreeStructureReporter for: portfolio.


	self assert: [reporter treeStructure = (OrderedCollection with: 'Un portfolio' with: ' Una cuenta')]! !

!testRun: #PortfolioReporterTest #test04 stamp: 'fr 11/15/2020 22:06:07'!
PASSED!

!testRun: #PortfolioReporterTest #test04 stamp: 'fr 11/15/2020 22:06:09'!
PASSED!

!testRun: #PortfolioReporterTest #test01TreeStructureReportForEmptyPortfolioWorksAsExpected stamp: 'fr 11/15/2020 22:06:09'!
PASSED!

!testRun: #PortfolioReporterTest #test02TreeStructureReportForPortfolioWithAccountsWorksAsExpected stamp: 'fr 11/15/2020 22:06:09'!
PASSED!

!testRun: #PortfolioReporterTest #test03TreeStructureReportForPortfolioWithAccountsAndPortfoliosWorksAsExpected stamp: 'fr 11/15/2020 22:06:09'!
PASSED!

!testRun: #PortfolioReporterTest #test04 stamp: 'fr 11/15/2020 22:06:09'!
PASSED!

!testRun: #PortfolioReporterTest #test04SpecialReportForEmptyPortfolioWorksAsExpected stamp: 'fr 11/15/2020 22:06:09'!
PASSED!

!testRun: #PortfolioReporterTest #test05SpecialReportForPortfolioWithAccountsWithAnyKindOfTransactionsWorksAsExpected stamp: 'fr 11/15/2020 22:06:09'!
PASSED!

!testRun: #PortfolioReporterTest #test06SpecialReportForPortfolioWithAccountsAndPortfoliosWithAnyKindOfTransactionsWorksAsExpected stamp: 'fr 11/15/2020 22:06:09'!
PASSED!

!testRun: #PortfolioReporterTest #test04 stamp: 'fr 11/15/2020 22:06:18'!
PASSED!

!testRun: #PortfolioReporterTest #test01TreeStructureReportForEmptyPortfolioWorksAsExpected stamp: 'fr 11/15/2020 22:06:18'!
PASSED!

!testRun: #PortfolioReporterTest #test02TreeStructureReportForPortfolioWithAccountsWorksAsExpected stamp: 'fr 11/15/2020 22:06:18'!
PASSED!

!testRun: #PortfolioReporterTest #test03TreeStructureReportForPortfolioWithAccountsAndPortfoliosWorksAsExpected stamp: 'fr 11/15/2020 22:06:18'!
PASSED!

!testRun: #PortfolioReporterTest #test04 stamp: 'fr 11/15/2020 22:06:18'!
PASSED!

!testRun: #PortfolioReporterTest #test04SpecialReportForEmptyPortfolioWorksAsExpected stamp: 'fr 11/15/2020 22:06:18'!
PASSED!

!testRun: #PortfolioReporterTest #test05SpecialReportForPortfolioWithAccountsWithAnyKindOfTransactionsWorksAsExpected stamp: 'fr 11/15/2020 22:06:18'!
PASSED!

!testRun: #PortfolioReporterTest #test06SpecialReportForPortfolioWithAccountsAndPortfoliosWithAnyKindOfTransactionsWorksAsExpected stamp: 'fr 11/15/2020 22:06:18'!
PASSED!

!testRun: #PortfolioReporterTest #test04 stamp: 'fr 11/15/2020 22:06:22'!
PASSED!

!testRun: #PortfolioReporterTest #test01TreeStructureReportForEmptyPortfolioWorksAsExpected stamp: 'fr 11/15/2020 22:06:22'!
PASSED!

!testRun: #PortfolioReporterTest #test02TreeStructureReportForPortfolioWithAccountsWorksAsExpected stamp: 'fr 11/15/2020 22:06:22'!
PASSED!

!testRun: #PortfolioReporterTest #test03TreeStructureReportForPortfolioWithAccountsAndPortfoliosWorksAsExpected stamp: 'fr 11/15/2020 22:06:22'!
PASSED!

!testRun: #PortfolioReporterTest #test04 stamp: 'fr 11/15/2020 22:06:22'!
PASSED!

!testRun: #PortfolioReporterTest #test04SpecialReportForEmptyPortfolioWorksAsExpected stamp: 'fr 11/15/2020 22:06:22'!
PASSED!

!testRun: #PortfolioReporterTest #test05SpecialReportForPortfolioWithAccountsWithAnyKindOfTransactionsWorksAsExpected stamp: 'fr 11/15/2020 22:06:22'!
PASSED!

!testRun: #PortfolioReporterTest #test06SpecialReportForPortfolioWithAccountsAndPortfoliosWithAnyKindOfTransactionsWorksAsExpected stamp: 'fr 11/15/2020 22:06:22'!
PASSED!
!PortfolioReporterTest methodsFor: 'tests - tree report' stamp: 'fr 11/15/2020 22:07:07'!
test04AccountsShouldUseADefaultNameIfNoneIsSpecified

	| portfolio account reporter |
	account _ ReceptiveAccount new.
	portfolio _ Portfolio with: account.
	reporter _ TreeStructureReporter for: portfolio.


	self assert: [reporter treeStructure = (OrderedCollection with: 'Un portfolio' with: ' Una cuenta')]! !

!methodRemoval: PortfolioReporterTest #test04 stamp: 'fr 11/15/2020 22:07:07'!
test04

	| portfolio account reporter |
	account _ ReceptiveAccount new.
	portfolio _ Portfolio with: account.
	reporter _ TreeStructureReporter for: portfolio.


	self assert: [reporter treeStructure = (OrderedCollection with: 'Un portfolio' with: ' Una cuenta')]!
!PortfolioReporterTest methodsFor: 'tests - special report' stamp: 'fr 11/15/2020 22:07:34'!
test05SpecialReportForEmptyPortfolioWorksAsExpected

	| portfolio reporter |
	portfolio _ Portfolio named: 'Portfolio de Fede'.
	reporter _ FullTreeReporter for: portfolio.

	self assert: [reporter specialReport = (OrderedCollection with: 'Portfolio de Fede' with: ' Balance = 0')]! !

!methodRemoval: PortfolioReporterTest #test04SpecialReportForEmptyPortfolioWorksAsExpected stamp: 'fr 11/15/2020 22:07:34'!
test04SpecialReportForEmptyPortfolioWorksAsExpected

	| portfolio reporter |
	portfolio _ Portfolio named: 'Portfolio de Fede'.
	reporter _ FullTreeReporter for: portfolio.

	self assert: [reporter specialReport = (OrderedCollection with: 'Portfolio de Fede' with: ' Balance = 0')]!
!PortfolioReporterTest methodsFor: 'tests - special report' stamp: 'fr 11/15/2020 22:07:38'!
test06SpecialReportForPortfolioWithAccountsWithAnyKindOfTransactionsWorksAsExpected

	| portfolio account anotherAccount expectedReport reporter |
	account _ ReceptiveAccount named: 'Cuenta de Fede'.
	anotherAccount _ ReceptiveAccount new.
	Deposit register: 100 on: account.
	Withdraw register: 50 on: account.
	Transfer move: 10 from: account to: anotherAccount.
	Transfer move: 5 from: anotherAccount to: account.
	portfolio _ Portfolio named: 'Portfolio de Fede' with: account.
	expectedReport _ OrderedCollection with: 'Portfolio de Fede'.
	expectedReport add: ' Cuenta de Fede'.
	expectedReport add: '  Dep�sito por 100.'.
	expectedReport add: '  Extracci�n por 50.'.
	expectedReport add: '  Salida por transferencia de 10.'.
	expectedReport add: '  Entrada por transferencia de 5.'.
	expectedReport add: '  Balance = 45'.
	expectedReport add: ' Balance = 45'.
	reporter _ FullTreeReporter for: portfolio.

	self assert: [reporter specialReport = expectedReport]! !

!methodRemoval: PortfolioReporterTest #test05SpecialReportForPortfolioWithAccountsWithAnyKindOfTransactionsWorksAsExpected stamp: 'fr 11/15/2020 22:07:38'!
test05SpecialReportForPortfolioWithAccountsWithAnyKindOfTransactionsWorksAsExpected

	| portfolio account anotherAccount expectedReport reporter |
	account _ ReceptiveAccount named: 'Cuenta de Fede'.
	anotherAccount _ ReceptiveAccount new.
	Deposit register: 100 on: account.
	Withdraw register: 50 on: account.
	Transfer move: 10 from: account to: anotherAccount.
	Transfer move: 5 from: anotherAccount to: account.
	portfolio _ Portfolio named: 'Portfolio de Fede' with: account.
	expectedReport _ OrderedCollection with: 'Portfolio de Fede'.
	expectedReport add: ' Cuenta de Fede'.
	expectedReport add: '  Dep�sito por 100.'.
	expectedReport add: '  Extracci�n por 50.'.
	expectedReport add: '  Salida por transferencia de 10.'.
	expectedReport add: '  Entrada por transferencia de 5.'.
	expectedReport add: '  Balance = 45'.
	expectedReport add: ' Balance = 45'.
	reporter _ FullTreeReporter for: portfolio.

	self assert: [reporter specialReport = expectedReport]!
!PortfolioReporterTest methodsFor: 'tests - special report' stamp: 'fr 11/15/2020 22:07:44'!
test07SpecialReportForPortfolioWithAccountsAndPortfoliosWithAnyKindOfTransactionsWorksAsExpected

	| portfolio account anotherAccount expectedReport anotherPortfolio reporter |
	account _ ReceptiveAccount named: 'Cuenta de Fede'.
	anotherAccount _ ReceptiveAccount named: 'Cuenta de Juan'.
	Deposit register: 100 on: account.
	Withdraw register: 50 on: account.
	Transfer move: 10 from: account to: anotherAccount.
	Transfer move: 5 from: anotherAccount to: account.
	anotherPortfolio _ Portfolio named: 'Portfolio de Juan' with: anotherAccount.
	portfolio _ Portfolio named: 'Portfolio de Fede' with: account with: anotherPortfolio.
	expectedReport _ OrderedCollection with: 'Portfolio de Fede'.
	expectedReport add: ' Cuenta de Fede'.
	expectedReport add: '  Dep�sito por 100.'.
	expectedReport add: '  Extracci�n por 50.'.
	expectedReport add: '  Salida por transferencia de 10.'.
	expectedReport add: '  Entrada por transferencia de 5.'.
	expectedReport add: '  Balance = 45'.
	expectedReport add: ' Portfolio de Juan'.
	expectedReport add: '  Cuenta de Juan'.
	expectedReport add: '   Entrada por transferencia de 10.'.
	expectedReport add: '   Salida por transferencia de 5.'.
	expectedReport add: '   Balance = 5'.
	expectedReport add: '  Balance = 5'.
	expectedReport add: ' Balance = 50'.
	reporter _ FullTreeReporter for: portfolio.
	
	self assert: [reporter specialReport = expectedReport]! !

!methodRemoval: PortfolioReporterTest #test06SpecialReportForPortfolioWithAccountsAndPortfoliosWithAnyKindOfTransactionsWorksAsExpected stamp: 'fr 11/15/2020 22:07:44'!
test06SpecialReportForPortfolioWithAccountsAndPortfoliosWithAnyKindOfTransactionsWorksAsExpected

	| portfolio account anotherAccount expectedReport anotherPortfolio reporter |
	account _ ReceptiveAccount named: 'Cuenta de Fede'.
	anotherAccount _ ReceptiveAccount named: 'Cuenta de Juan'.
	Deposit register: 100 on: account.
	Withdraw register: 50 on: account.
	Transfer move: 10 from: account to: anotherAccount.
	Transfer move: 5 from: anotherAccount to: account.
	anotherPortfolio _ Portfolio named: 'Portfolio de Juan' with: anotherAccount.
	portfolio _ Portfolio named: 'Portfolio de Fede' with: account with: anotherPortfolio.
	expectedReport _ OrderedCollection with: 'Portfolio de Fede'.
	expectedReport add: ' Cuenta de Fede'.
	expectedReport add: '  Dep�sito por 100.'.
	expectedReport add: '  Extracci�n por 50.'.
	expectedReport add: '  Salida por transferencia de 10.'.
	expectedReport add: '  Entrada por transferencia de 5.'.
	expectedReport add: '  Balance = 45'.
	expectedReport add: ' Portfolio de Juan'.
	expectedReport add: '  Cuenta de Juan'.
	expectedReport add: '   Entrada por transferencia de 10.'.
	expectedReport add: '   Salida por transferencia de 5.'.
	expectedReport add: '   Balance = 5'.
	expectedReport add: '  Balance = 5'.
	expectedReport add: ' Balance = 50'.
	reporter _ FullTreeReporter for: portfolio.
	
	self assert: [reporter specialReport = expectedReport]!

!testRun: #AccountReporterTest #test01AccountSummaryForAccountWithNoTransactionsShouldJustShowBalanceZero stamp: 'fr 11/15/2020 22:10:20'!
PASSED!

!testRun: #AccountReporterTest #test02AccountSummaryShouldReflectDepositsOnAccounts stamp: 'fr 11/15/2020 22:10:20'!
PASSED!

!testRun: #AccountReporterTest #test03AccountSummaryShouldReflectWithdrawsOnAccounts stamp: 'fr 11/15/2020 22:10:20'!
PASSED!

!testRun: #AccountReporterTest #test04AccountSummaryShouldReflectOutgoingTransfersOnAccounts stamp: 'fr 11/15/2020 22:10:20'!
PASSED!

!testRun: #AccountReporterTest #test05AccountSummaryShouldReflectIncomingTransfersOnAccounts stamp: 'fr 11/15/2020 22:10:20'!
PASSED!

!testRun: #AccountReporterTest #test06AccountSummaryForPortfolioWithNoTransactionsShouldJustShowBalanceZero stamp: 'fr 11/15/2020 22:10:20'!
PASSED!

!testRun: #AccountReporterTest #test07AccountSummaryShouldReflectDepositsOnPortfoliosWithAccounts stamp: 'fr 11/15/2020 22:10:20'!
PASSED!

!testRun: #AccountReporterTest #test08AccountSummaryShouldReflectWithdrawsOnPortfoliosWithAccounts stamp: 'fr 11/15/2020 22:10:20'!
PASSED!

!testRun: #AccountReporterTest #test09AccountSummaryShouldReflectOutgoingAndIncomingTransfersOnPortfoliosWithAccounts stamp: 'fr 11/15/2020 22:10:20'!
PASSED!

!testRun: #AccountReporterTest #test10AccountSummaryShouldReflectDepositsOnPortfoliosWithPortfolios stamp: 'fr 11/15/2020 22:10:20'!
PASSED!

!testRun: #AccountReporterTest #test11AccountSummaryShouldReflectWithdrawsOnPortfoliosWithPortfolios stamp: 'fr 11/15/2020 22:10:20'!
PASSED!

!testRun: #AccountReporterTest #test12AccountSummaryShouldReflectOutgoingAndIncomingTransfersOnPortfoliosWithPortfolios stamp: 'fr 11/15/2020 22:10:20'!
PASSED!

!testRun: #AccountReporterTest #test13NetTransferForAccountWithNoTransactionsShouldBeZero stamp: 'fr 11/15/2020 22:10:20'!
PASSED!

!testRun: #AccountReporterTest #test14NetTransferForAccountWithAnOutgoingTransferShouldReflectItsValue stamp: 'fr 11/15/2020 22:10:20'!
PASSED!

!testRun: #AccountReporterTest #test15NetTransferForAccountWithAnIncomingTransferShouldReflectItsValue stamp: 'fr 11/15/2020 22:10:20'!
PASSED!

!testRun: #AccountReporterTest #test16NetTransferForAccountShouldNotReflectDeposits stamp: 'fr 11/15/2020 22:10:20'!
PASSED!

!testRun: #AccountReporterTest #test17NetTransferForAccountShouldNotReflectWithdraws stamp: 'fr 11/15/2020 22:10:20'!
PASSED!

!testRun: #AccountReporterTest #test18NetTransferForPortfolioWithNoTransactionsShouldBeZero stamp: 'fr 11/15/2020 22:10:20'!
PASSED!

!testRun: #AccountReporterTest #test19NetTransferForPortfolioWithAnOutgoingTransferShouldReflectItsValue stamp: 'fr 11/15/2020 22:10:20'!
PASSED!

!testRun: #AccountReporterTest #test20NetTransferForPortfolioWithAnIncomingTransferShouldReflectItsValue stamp: 'fr 11/15/2020 22:10:20'!
PASSED!

!testRun: #AccountReporterTest #test21NetTransferForPortfolioShouldNotReflectDeposits stamp: 'fr 11/15/2020 22:10:20'!
PASSED!

!testRun: #AccountReporterTest #test22NetTransferForPortfolioShouldNotReflectWithdraws stamp: 'fr 11/15/2020 22:10:20'!
PASSED!

!testRun: #AccountReporterTest #test23NetTransferForPortfoliosWithPortfoliosShouldReflectOutgoingAndIncomingTransfers stamp: 'fr 11/15/2020 22:10:20'!
PASSED!

!testRun: #AccountReporterTest #test24NetTransferForPortfoliosWithPortfoliosShouldNotRelfectDepositsOrWithdraws stamp: 'fr 11/15/2020 22:10:20'!
PASSED!

!testRun: #PortfolioReporterTest #test01TreeStructureReportForEmptyPortfolioWorksAsExpected stamp: 'fr 11/15/2020 22:10:20'!
PASSED!

!testRun: #PortfolioReporterTest #test02TreeStructureReportForPortfolioWithAccountsWorksAsExpected stamp: 'fr 11/15/2020 22:10:20'!
PASSED!

!testRun: #PortfolioReporterTest #test03TreeStructureReportForPortfolioWithAccountsAndPortfoliosWorksAsExpected stamp: 'fr 11/15/2020 22:10:20'!
PASSED!

!testRun: #PortfolioReporterTest #test04AccountsShouldUseADefaultNameIfNoneIsSpecified stamp: 'fr 11/15/2020 22:10:20'!
PASSED!

!testRun: #PortfolioReporterTest #test05SpecialReportForEmptyPortfolioWorksAsExpected stamp: 'fr 11/15/2020 22:10:20'!
PASSED!

!testRun: #PortfolioReporterTest #test06SpecialReportForPortfolioWithAccountsWithAnyKindOfTransactionsWorksAsExpected stamp: 'fr 11/15/2020 22:10:20'!
PASSED!

!testRun: #PortfolioReporterTest #test07SpecialReportForPortfolioWithAccountsAndPortfoliosWithAnyKindOfTransactionsWorksAsExpected stamp: 'fr 11/15/2020 22:10:20'!
PASSED!

!testRun: #PortfolioTest #test01BalanceOfPortfolioWithoutAccountsIsZero stamp: 'fr 11/15/2020 22:10:20'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithOneAccountIsAccountBalance stamp: 'fr 11/15/2020 22:10:20'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioIsCalculatedRecursivelyOnPortfolios stamp: 'fr 11/15/2020 22:10:20'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithoutAccountsHasNoRegisteredTransaction stamp: 'fr 11/15/2020 22:10:20'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredItsAccountsTransactions stamp: 'fr 11/15/2020 22:10:20'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioLooksForRegisteredTransactionsRecursively stamp: 'fr 11/15/2020 22:10:20'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioHasNoTransactionWhenHasNoAccounts stamp: 'fr 11/15/2020 22:10:20'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTransactionsIncludesAllItsAccountsTransactions stamp: 'fr 11/15/2020 22:10:20'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioTransactionsAreCalculatedRecursively stamp: 'fr 11/15/2020 22:10:20'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCanNotIncludeTheSameAccountMoreThanOnce stamp: 'fr 11/15/2020 22:10:20'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCanNotIncludeAccountOfItsPortfolios stamp: 'fr 11/15/2020 22:10:20'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioCanNotIncludeItself stamp: 'fr 11/15/2020 22:10:20'!
PASSED!

!testRun: #PortfolioTest #test13ComposedPortfolioCanNotHaveParentPortfolioAccount stamp: 'fr 11/15/2020 22:10:20'!
PASSED!

!testRun: #PortfolioTest #test14ComposedPortfolioCanNotHaveAccountOfAnyRootParentRecursively stamp: 'fr 11/15/2020 22:10:20'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotIncludeAnyOfTheComposedAccountOfPortfolioToAdd stamp: 'fr 11/15/2020 22:10:20'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'fr 11/15/2020 22:10:20'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'fr 11/15/2020 22:10:20'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'fr 11/15/2020 22:10:20'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'fr 11/15/2020 22:10:20'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'fr 11/15/2020 22:10:20'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'fr 11/15/2020 22:10:20'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'fr 11/15/2020 22:10:20'!
PASSED!

!testRun: #TransferTest #test01 stamp: 'fr 11/15/2020 22:10:20'!
PASSED!

!testRun: #TransferTest #test02 stamp: 'fr 11/15/2020 22:10:20'!
PASSED!

!testRun: #TransferTest #test03 stamp: 'fr 11/15/2020 22:10:20'!
PASSED!

!testRun: #TransferTest #test04 stamp: 'fr 11/15/2020 22:10:20'!
PASSED!

!testRun: #TransferTest #test05 stamp: 'fr 11/15/2020 22:10:20'!
PASSED!

!testRun: #TransferTest #test06 stamp: 'fr 11/15/2020 22:10:20'!
PASSED!
!TransferTest methodsFor: 'as yet unclassified' stamp: 'fr 11/15/2020 22:11:06'!
test01TransferMovesMoneyAffectingBalancesAsExpected

	| account anotherAccount |
	
	account _ ReceptiveAccount new.
	anotherAccount _ ReceptiveAccount new.
	
	Transfer move: 100 from: account to: anotherAccount.
	
	self assert: [account balance = -100 and: [anotherAccount balance = 100]]! !

!methodRemoval: TransferTest #test01 stamp: 'fr 11/15/2020 22:11:06'!
test01

	| account anotherAccount |
	
	account _ ReceptiveAccount new.
	anotherAccount _ ReceptiveAccount new.
	
	Transfer move: 100 from: account to: anotherAccount.
	
	self assert: [account balance = -100 and: [anotherAccount balance = 100]]!
!TransferTest methodsFor: 'as yet unclassified' stamp: 'fr 11/15/2020 22:12:43'!
test02AccountsThatParticipateInTheTransferRegisterItsCorrespondingLeg

	| account anotherAccount transfer |
	
	account _ ReceptiveAccount new.
	anotherAccount _ ReceptiveAccount new.
	
	transfer _ Transfer move: 100 from: account to: anotherAccount.
	
	self assert: [(account hasRegistered: transfer from) and: [anotherAccount hasRegistered: transfer to]]! !

!methodRemoval: TransferTest #test02 stamp: 'fr 11/15/2020 22:12:43'!
test02

	| account anotherAccount transfer |
	
	account _ ReceptiveAccount new.
	anotherAccount _ ReceptiveAccount new.
	
	transfer _ Transfer move: 100 from: account to: anotherAccount.
	
	self assert: [(account hasRegistered: transfer from) and: [anotherAccount hasRegistered: transfer to]]!
!TransferTest methodsFor: 'as yet unclassified' stamp: 'fr 11/15/2020 22:13:09'!
test02AccountsThatParticipateInTheTransferRegisterTheirCorrespondingLegs

	| account anotherAccount transfer |
	
	account _ ReceptiveAccount new.
	anotherAccount _ ReceptiveAccount new.
	
	transfer _ Transfer move: 100 from: account to: anotherAccount.
	
	self assert: [(account hasRegistered: transfer from) and: [anotherAccount hasRegistered: transfer to]]! !

!methodRemoval: TransferTest #test02AccountsThatParticipateInTheTransferRegisterItsCorrespondingLeg stamp: 'fr 11/15/2020 22:13:09'!
test02AccountsThatParticipateInTheTransferRegisterItsCorrespondingLeg

	| account anotherAccount transfer |
	
	account _ ReceptiveAccount new.
	anotherAccount _ ReceptiveAccount new.
	
	transfer _ Transfer move: 100 from: account to: anotherAccount.
	
	self assert: [(account hasRegistered: transfer from) and: [anotherAccount hasRegistered: transfer to]]!
!TransferTest methodsFor: 'as yet unclassified' stamp: 'fr 11/15/2020 22:13:27'!
test02AccountsThatParticipateInTheTransferRegisterTheCorrespondingLeg

	| account anotherAccount transfer |
	
	account _ ReceptiveAccount new.
	anotherAccount _ ReceptiveAccount new.
	
	transfer _ Transfer move: 100 from: account to: anotherAccount.
	
	self assert: [(account hasRegistered: transfer from) and: [anotherAccount hasRegistered: transfer to]]! !

!methodRemoval: TransferTest #test02AccountsThatParticipateInTheTransferRegisterTheirCorrespondingLegs stamp: 'fr 11/15/2020 22:13:27'!
test02AccountsThatParticipateInTheTransferRegisterTheirCorrespondingLegs

	| account anotherAccount transfer |
	
	account _ ReceptiveAccount new.
	anotherAccount _ ReceptiveAccount new.
	
	transfer _ Transfer move: 100 from: account to: anotherAccount.
	
	self assert: [(account hasRegistered: transfer from) and: [anotherAccount hasRegistered: transfer to]]!
!TransferTest methodsFor: 'as yet unclassified' stamp: 'fr 11/15/2020 22:14:04'!
test03LegsKnowTheirComplementaryLegThroughTheTransfer

	| account anotherAccount transfer |
	
	account _ ReceptiveAccount new.
	anotherAccount _ ReceptiveAccount new.
	
	transfer _ Transfer move: 100 from: account to: anotherAccount.
	
	self assert: [(transfer to isComplementedBy: transfer from) and: [transfer from isComplementedBy: transfer to]]! !

!methodRemoval: TransferTest #test03 stamp: 'fr 11/15/2020 22:14:04'!
test03

	| account anotherAccount transfer |
	
	account _ ReceptiveAccount new.
	anotherAccount _ ReceptiveAccount new.
	
	transfer _ Transfer move: 100 from: account to: anotherAccount.
	
	self assert: [(transfer to isComplementedBy: transfer from) and: [transfer from isComplementedBy: transfer to]]!
!TransferTest methodsFor: 'as yet unclassified' stamp: 'fr 11/15/2020 22:14:46' prior: 50869136!
test04

	| account anotherAccount |
	
	account _ ReceptiveAccount new.
	anotherAccount _ ReceptiveAccount new.
	
	self  should: [Transfer move: 0 from: account to: anotherAccount] 
		raise:  Error - MessageNotUnderstood 
		withMessageText: Transfer invalidTransferAmountErrorDescription! !

!testRun: #TransferTest #test04 stamp: 'fr 11/15/2020 22:14:48'!
PASSED!

!testRun: #TransferTest #test01TransferMovesMoneyAffectingBalancesAsExpected stamp: 'fr 11/15/2020 22:14:48'!
PASSED!

!testRun: #TransferTest #test02AccountsThatParticipateInTheTransferRegisterTheCorrespondingLeg stamp: 'fr 11/15/2020 22:14:48'!
PASSED!

!testRun: #TransferTest #test03LegsKnowTheirComplementaryLegThroughTheTransfer stamp: 'fr 11/15/2020 22:14:48'!
PASSED!

!testRun: #TransferTest #test04 stamp: 'fr 11/15/2020 22:14:48'!
PASSED!

!testRun: #TransferTest #test05 stamp: 'fr 11/15/2020 22:14:48'!
PASSED!

!testRun: #TransferTest #test06 stamp: 'fr 11/15/2020 22:14:48'!
PASSED!
!TransferTest methodsFor: 'as yet unclassified' stamp: 'fr 11/15/2020 22:14:52' prior: 50869199!
test05

	| account anotherAccount |
	
	account _ ReceptiveAccount new.
	anotherAccount _ ReceptiveAccount new.
	
	self  should: [Transfer move: -1 from: account to: anotherAccount] 
		raise:  Error - MessageNotUnderstood 
		withMessageText: Transfer invalidTransferAmountErrorDescription! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'fr 11/15/2020 22:14:55' prior: 50869290!
test06

	| account |
	
	account _ ReceptiveAccount new.
	
	self  should: [Transfer move: 10 from: account to: account] 
		raise:  Error - MessageNotUnderstood 
		withMessageText: Transfer canNotTransferToItselfErrorDescription! !

!testRun: #TransferTest #test06 stamp: 'fr 11/15/2020 22:14:56'!
PASSED!

!testRun: #TransferTest #test01TransferMovesMoneyAffectingBalancesAsExpected stamp: 'fr 11/15/2020 22:14:56'!
PASSED!

!testRun: #TransferTest #test02AccountsThatParticipateInTheTransferRegisterTheCorrespondingLeg stamp: 'fr 11/15/2020 22:14:56'!
PASSED!

!testRun: #TransferTest #test03LegsKnowTheirComplementaryLegThroughTheTransfer stamp: 'fr 11/15/2020 22:14:56'!
PASSED!

!testRun: #TransferTest #test04 stamp: 'fr 11/15/2020 22:14:56'!
PASSED!

!testRun: #TransferTest #test05 stamp: 'fr 11/15/2020 22:14:56'!
PASSED!

!testRun: #TransferTest #test06 stamp: 'fr 11/15/2020 22:14:56'!
PASSED!
!TransferTest methodsFor: 'as yet unclassified' stamp: 'fr 11/15/2020 22:15:21'!
test04TransferValueCanNotBeZero

	| account anotherAccount |
	
	account _ ReceptiveAccount new.
	anotherAccount _ ReceptiveAccount new.
	
	self  should: [Transfer move: 0 from: account to: anotherAccount] 
		raise:  Error - MessageNotUnderstood 
		withMessageText: Transfer invalidTransferAmountErrorDescription! !

!methodRemoval: TransferTest #test04 stamp: 'fr 11/15/2020 22:15:21'!
test04

	| account anotherAccount |
	
	account _ ReceptiveAccount new.
	anotherAccount _ ReceptiveAccount new.
	
	self  should: [Transfer move: 0 from: account to: anotherAccount] 
		raise:  Error - MessageNotUnderstood 
		withMessageText: Transfer invalidTransferAmountErrorDescription!
!TransferTest methodsFor: 'as yet unclassified' stamp: 'fr 11/15/2020 22:15:36'!
test05TransferValueCanNotBeNegative

	| account anotherAccount |
	
	account _ ReceptiveAccount new.
	anotherAccount _ ReceptiveAccount new.
	
	self  should: [Transfer move: -1 from: account to: anotherAccount] 
		raise:  Error - MessageNotUnderstood 
		withMessageText: Transfer invalidTransferAmountErrorDescription! !

!methodRemoval: TransferTest #test05 stamp: 'fr 11/15/2020 22:15:36'!
test05

	| account anotherAccount |
	
	account _ ReceptiveAccount new.
	anotherAccount _ ReceptiveAccount new.
	
	self  should: [Transfer move: -1 from: account to: anotherAccount] 
		raise:  Error - MessageNotUnderstood 
		withMessageText: Transfer invalidTransferAmountErrorDescription!
!TransferTest methodsFor: 'as yet unclassified' stamp: 'fr 11/15/2020 22:15:57'!
test06TransferCanNotMoveMoneyFromAnAccountToItself

	| account |
	
	account _ ReceptiveAccount new.
	
	self  should: [Transfer move: 10 from: account to: account] 
		raise:  Error - MessageNotUnderstood 
		withMessageText: Transfer canNotTransferToItselfErrorDescription! !

!methodRemoval: TransferTest #test06 stamp: 'fr 11/15/2020 22:15:57'!
test06

	| account |
	
	account _ ReceptiveAccount new.
	
	self  should: [Transfer move: 10 from: account to: account] 
		raise:  Error - MessageNotUnderstood 
		withMessageText: Transfer canNotTransferToItselfErrorDescription!

----SNAPSHOT----(15 November 2020 22:16:03) CuisUniversity-4384.image priorSource: 17831375!

TransferTransaction subclass: #DepositByTransference
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Part-II-Exercise'!

!classDefinition: #DepositByTransference category: 'Portfolio-Part-II-Exercise' stamp: 'fr 11/15/2020 22:25:44'!
TransferTransaction subclass: #DepositByTransference
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Part-II-Exercise'!

TransferTransaction subclass: #WithdrawByTransference
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Part-II-Exercise'!

!classDefinition: #WithdrawByTransference category: 'Portfolio-Part-II-Exercise' stamp: 'fr 11/15/2020 22:25:54'!
TransferTransaction subclass: #WithdrawByTransference
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Part-II-Exercise'!

AccountTransaction subclass: #TransferTransaction
	instanceVariableNames: 'transfer'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Part-II-Exercise'!

!classDefinition: #TransferTransaction category: 'Portfolio-Part-II-Exercise' stamp: 'fr 11/15/2020 22:26:00'!
AccountTransaction subclass: #TransferTransaction
	instanceVariableNames: 'transfer'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Part-II-Exercise'!

!testRun: #AccountReporterTest #test01AccountSummaryForAccountWithNoTransactionsShouldJustShowBalanceZero stamp: 'fr 11/15/2020 22:26:02'!
PASSED!

!testRun: #AccountReporterTest #test02AccountSummaryShouldReflectDepositsOnAccounts stamp: 'fr 11/15/2020 22:26:02'!
PASSED!

!testRun: #AccountReporterTest #test03AccountSummaryShouldReflectWithdrawsOnAccounts stamp: 'fr 11/15/2020 22:26:02'!
PASSED!

!testRun: #AccountReporterTest #test04AccountSummaryShouldReflectOutgoingTransfersOnAccounts stamp: 'fr 11/15/2020 22:26:02'!
PASSED!

!testRun: #AccountReporterTest #test05AccountSummaryShouldReflectIncomingTransfersOnAccounts stamp: 'fr 11/15/2020 22:26:02'!
PASSED!

!testRun: #AccountReporterTest #test06AccountSummaryForPortfolioWithNoTransactionsShouldJustShowBalanceZero stamp: 'fr 11/15/2020 22:26:02'!
PASSED!

!testRun: #AccountReporterTest #test07AccountSummaryShouldReflectDepositsOnPortfoliosWithAccounts stamp: 'fr 11/15/2020 22:26:02'!
PASSED!

!testRun: #AccountReporterTest #test08AccountSummaryShouldReflectWithdrawsOnPortfoliosWithAccounts stamp: 'fr 11/15/2020 22:26:02'!
PASSED!

!testRun: #AccountReporterTest #test09AccountSummaryShouldReflectOutgoingAndIncomingTransfersOnPortfoliosWithAccounts stamp: 'fr 11/15/2020 22:26:02'!
PASSED!

!testRun: #AccountReporterTest #test10AccountSummaryShouldReflectDepositsOnPortfoliosWithPortfolios stamp: 'fr 11/15/2020 22:26:02'!
PASSED!

!testRun: #AccountReporterTest #test11AccountSummaryShouldReflectWithdrawsOnPortfoliosWithPortfolios stamp: 'fr 11/15/2020 22:26:02'!
PASSED!

!testRun: #AccountReporterTest #test12AccountSummaryShouldReflectOutgoingAndIncomingTransfersOnPortfoliosWithPortfolios stamp: 'fr 11/15/2020 22:26:02'!
PASSED!

!testRun: #AccountReporterTest #test13NetTransferForAccountWithNoTransactionsShouldBeZero stamp: 'fr 11/15/2020 22:26:02'!
PASSED!

!testRun: #AccountReporterTest #test14NetTransferForAccountWithAnOutgoingTransferShouldReflectItsValue stamp: 'fr 11/15/2020 22:26:02'!
PASSED!

!testRun: #AccountReporterTest #test15NetTransferForAccountWithAnIncomingTransferShouldReflectItsValue stamp: 'fr 11/15/2020 22:26:02'!
PASSED!

!testRun: #AccountReporterTest #test16NetTransferForAccountShouldNotReflectDeposits stamp: 'fr 11/15/2020 22:26:02'!
PASSED!

!testRun: #AccountReporterTest #test17NetTransferForAccountShouldNotReflectWithdraws stamp: 'fr 11/15/2020 22:26:02'!
PASSED!

!testRun: #AccountReporterTest #test18NetTransferForPortfolioWithNoTransactionsShouldBeZero stamp: 'fr 11/15/2020 22:26:02'!
PASSED!

!testRun: #AccountReporterTest #test19NetTransferForPortfolioWithAnOutgoingTransferShouldReflectItsValue stamp: 'fr 11/15/2020 22:26:02'!
PASSED!

!testRun: #AccountReporterTest #test20NetTransferForPortfolioWithAnIncomingTransferShouldReflectItsValue stamp: 'fr 11/15/2020 22:26:02'!
PASSED!

!testRun: #AccountReporterTest #test21NetTransferForPortfolioShouldNotReflectDeposits stamp: 'fr 11/15/2020 22:26:02'!
PASSED!

!testRun: #AccountReporterTest #test22NetTransferForPortfolioShouldNotReflectWithdraws stamp: 'fr 11/15/2020 22:26:02'!
PASSED!

!testRun: #AccountReporterTest #test23NetTransferForPortfoliosWithPortfoliosShouldReflectOutgoingAndIncomingTransfers stamp: 'fr 11/15/2020 22:26:02'!
PASSED!

!testRun: #AccountReporterTest #test24NetTransferForPortfoliosWithPortfoliosShouldNotRelfectDepositsOrWithdraws stamp: 'fr 11/15/2020 22:26:02'!
PASSED!

!testRun: #PortfolioReporterTest #test01TreeStructureReportForEmptyPortfolioWorksAsExpected stamp: 'fr 11/15/2020 22:26:02'!
PASSED!

!testRun: #PortfolioReporterTest #test02TreeStructureReportForPortfolioWithAccountsWorksAsExpected stamp: 'fr 11/15/2020 22:26:02'!
PASSED!

!testRun: #PortfolioReporterTest #test03TreeStructureReportForPortfolioWithAccountsAndPortfoliosWorksAsExpected stamp: 'fr 11/15/2020 22:26:02'!
PASSED!

!testRun: #PortfolioReporterTest #test04AccountsShouldUseADefaultNameIfNoneIsSpecified stamp: 'fr 11/15/2020 22:26:02'!
PASSED!

!testRun: #PortfolioReporterTest #test05SpecialReportForEmptyPortfolioWorksAsExpected stamp: 'fr 11/15/2020 22:26:02'!
PASSED!

!testRun: #PortfolioReporterTest #test06SpecialReportForPortfolioWithAccountsWithAnyKindOfTransactionsWorksAsExpected stamp: 'fr 11/15/2020 22:26:02'!
PASSED!

!testRun: #PortfolioReporterTest #test07SpecialReportForPortfolioWithAccountsAndPortfoliosWithAnyKindOfTransactionsWorksAsExpected stamp: 'fr 11/15/2020 22:26:02'!
PASSED!

!testRun: #PortfolioTest #test01BalanceOfPortfolioWithoutAccountsIsZero stamp: 'fr 11/15/2020 22:26:02'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithOneAccountIsAccountBalance stamp: 'fr 11/15/2020 22:26:02'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioIsCalculatedRecursivelyOnPortfolios stamp: 'fr 11/15/2020 22:26:02'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithoutAccountsHasNoRegisteredTransaction stamp: 'fr 11/15/2020 22:26:02'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredItsAccountsTransactions stamp: 'fr 11/15/2020 22:26:02'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioLooksForRegisteredTransactionsRecursively stamp: 'fr 11/15/2020 22:26:02'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioHasNoTransactionWhenHasNoAccounts stamp: 'fr 11/15/2020 22:26:02'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTransactionsIncludesAllItsAccountsTransactions stamp: 'fr 11/15/2020 22:26:02'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioTransactionsAreCalculatedRecursively stamp: 'fr 11/15/2020 22:26:02'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCanNotIncludeTheSameAccountMoreThanOnce stamp: 'fr 11/15/2020 22:26:02'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCanNotIncludeAccountOfItsPortfolios stamp: 'fr 11/15/2020 22:26:02'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioCanNotIncludeItself stamp: 'fr 11/15/2020 22:26:02'!
PASSED!

!testRun: #PortfolioTest #test13ComposedPortfolioCanNotHaveParentPortfolioAccount stamp: 'fr 11/15/2020 22:26:02'!
PASSED!

!testRun: #PortfolioTest #test14ComposedPortfolioCanNotHaveAccountOfAnyRootParentRecursively stamp: 'fr 11/15/2020 22:26:02'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotIncludeAnyOfTheComposedAccountOfPortfolioToAdd stamp: 'fr 11/15/2020 22:26:02'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'fr 11/15/2020 22:26:02'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'fr 11/15/2020 22:26:02'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'fr 11/15/2020 22:26:02'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'fr 11/15/2020 22:26:02'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'fr 11/15/2020 22:26:02'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'fr 11/15/2020 22:26:02'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'fr 11/15/2020 22:26:02'!
PASSED!

!testRun: #TransferTest #test01TransferMovesMoneyAffectingBalancesAsExpected stamp: 'fr 11/15/2020 22:26:02'!
PASSED!

!testRun: #TransferTest #test02AccountsThatParticipateInTheTransferRegisterTheCorrespondingLeg stamp: 'fr 11/15/2020 22:26:02'!
PASSED!

!testRun: #TransferTest #test03LegsKnowTheirComplementaryLegThroughTheTransfer stamp: 'fr 11/15/2020 22:26:02'!
PASSED!

!testRun: #TransferTest #test04TransferValueCanNotBeZero stamp: 'fr 11/15/2020 22:26:02'!
PASSED!

!testRun: #TransferTest #test05TransferValueCanNotBeNegative stamp: 'fr 11/15/2020 22:26:02'!
PASSED!

!testRun: #TransferTest #test06TransferCanNotMoveMoneyFromAnAccountToItself stamp: 'fr 11/15/2020 22:26:02'!
PASSED!
!Transfer methodsFor: 'transfer legs' stamp: 'fr 11/15/2020 22:27:40'!
withdrawLeg
	
	^withdraw ! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'fr 11/15/2020 22:27:40' prior: 50889561!
test03LegsKnowTheirComplementaryLegThroughTheTransfer

	| account anotherAccount transfer |
	
	account _ ReceptiveAccount new.
	anotherAccount _ ReceptiveAccount new.
	
	transfer _ Transfer move: 100 from: account to: anotherAccount.
	
	self assert: [(transfer to isComplementedBy: transfer withdrawLeg) and: [transfer withdrawLeg isComplementedBy: transfer to]]! !
!DepositByTransference methodsFor: 'as yet unclassified' stamp: 'fr 11/15/2020 22:27:40' prior: 50868998!
isComplementedBy: aWithdrawByTransference 
	
	^transfer withdrawLeg = aWithdrawByTransference ! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'fr 11/15/2020 22:27:40' prior: 50889531!
test02AccountsThatParticipateInTheTransferRegisterTheCorrespondingLeg

	| account anotherAccount transfer |
	
	account _ ReceptiveAccount new.
	anotherAccount _ ReceptiveAccount new.
	
	transfer _ Transfer move: 100 from: account to: anotherAccount.
	
	self assert: [(account hasRegistered: transfer withdrawLeg) and: [anotherAccount hasRegistered: transfer to]]! !

!methodRemoval: Transfer #from stamp: 'fr 11/15/2020 22:27:40'!
from
	
	^withdraw !
!Transfer methodsFor: 'transfer legs' stamp: 'fr 11/15/2020 22:27:49'!
depositLeg
	
	^deposit ! !
!WithdrawByTransference methodsFor: 'as yet unclassified' stamp: 'fr 11/15/2020 22:27:49' prior: 50869012!
isComplementedBy: aDepositByTransference 
	
	^transfer depositLeg = aDepositByTransference ! !

!methodRemoval: Transfer #to stamp: 'fr 11/15/2020 22:27:49'!
to
	
	^deposit !

!testRun: #AccountReporterTest #test01AccountSummaryForAccountWithNoTransactionsShouldJustShowBalanceZero stamp: 'fr 11/15/2020 22:27:50'!
PASSED!

!testRun: #AccountReporterTest #test02AccountSummaryShouldReflectDepositsOnAccounts stamp: 'fr 11/15/2020 22:27:50'!
PASSED!

!testRun: #AccountReporterTest #test03AccountSummaryShouldReflectWithdrawsOnAccounts stamp: 'fr 11/15/2020 22:27:50'!
PASSED!

!testRun: #AccountReporterTest #test04AccountSummaryShouldReflectOutgoingTransfersOnAccounts stamp: 'fr 11/15/2020 22:27:50'!
PASSED!

!testRun: #AccountReporterTest #test05AccountSummaryShouldReflectIncomingTransfersOnAccounts stamp: 'fr 11/15/2020 22:27:50'!
PASSED!

!testRun: #AccountReporterTest #test06AccountSummaryForPortfolioWithNoTransactionsShouldJustShowBalanceZero stamp: 'fr 11/15/2020 22:27:50'!
PASSED!

!testRun: #AccountReporterTest #test07AccountSummaryShouldReflectDepositsOnPortfoliosWithAccounts stamp: 'fr 11/15/2020 22:27:50'!
PASSED!

!testRun: #AccountReporterTest #test08AccountSummaryShouldReflectWithdrawsOnPortfoliosWithAccounts stamp: 'fr 11/15/2020 22:27:50'!
PASSED!

!testRun: #AccountReporterTest #test09AccountSummaryShouldReflectOutgoingAndIncomingTransfersOnPortfoliosWithAccounts stamp: 'fr 11/15/2020 22:27:50'!
PASSED!

!testRun: #AccountReporterTest #test10AccountSummaryShouldReflectDepositsOnPortfoliosWithPortfolios stamp: 'fr 11/15/2020 22:27:50'!
PASSED!

!testRun: #AccountReporterTest #test11AccountSummaryShouldReflectWithdrawsOnPortfoliosWithPortfolios stamp: 'fr 11/15/2020 22:27:50'!
PASSED!

!testRun: #AccountReporterTest #test12AccountSummaryShouldReflectOutgoingAndIncomingTransfersOnPortfoliosWithPortfolios stamp: 'fr 11/15/2020 22:27:50'!
PASSED!

!testRun: #AccountReporterTest #test13NetTransferForAccountWithNoTransactionsShouldBeZero stamp: 'fr 11/15/2020 22:27:50'!
PASSED!

!testRun: #AccountReporterTest #test14NetTransferForAccountWithAnOutgoingTransferShouldReflectItsValue stamp: 'fr 11/15/2020 22:27:50'!
PASSED!

!testRun: #AccountReporterTest #test15NetTransferForAccountWithAnIncomingTransferShouldReflectItsValue stamp: 'fr 11/15/2020 22:27:50'!
PASSED!

!testRun: #AccountReporterTest #test16NetTransferForAccountShouldNotReflectDeposits stamp: 'fr 11/15/2020 22:27:50'!
PASSED!

!testRun: #AccountReporterTest #test17NetTransferForAccountShouldNotReflectWithdraws stamp: 'fr 11/15/2020 22:27:50'!
PASSED!

!testRun: #AccountReporterTest #test18NetTransferForPortfolioWithNoTransactionsShouldBeZero stamp: 'fr 11/15/2020 22:27:50'!
PASSED!

!testRun: #AccountReporterTest #test19NetTransferForPortfolioWithAnOutgoingTransferShouldReflectItsValue stamp: 'fr 11/15/2020 22:27:50'!
PASSED!

!testRun: #AccountReporterTest #test20NetTransferForPortfolioWithAnIncomingTransferShouldReflectItsValue stamp: 'fr 11/15/2020 22:27:50'!
PASSED!

!testRun: #AccountReporterTest #test21NetTransferForPortfolioShouldNotReflectDeposits stamp: 'fr 11/15/2020 22:27:50'!
PASSED!

!testRun: #AccountReporterTest #test22NetTransferForPortfolioShouldNotReflectWithdraws stamp: 'fr 11/15/2020 22:27:50'!
PASSED!

!testRun: #AccountReporterTest #test23NetTransferForPortfoliosWithPortfoliosShouldReflectOutgoingAndIncomingTransfers stamp: 'fr 11/15/2020 22:27:50'!
PASSED!

!testRun: #AccountReporterTest #test24NetTransferForPortfoliosWithPortfoliosShouldNotRelfectDepositsOrWithdraws stamp: 'fr 11/15/2020 22:27:50'!
PASSED!

!testRun: #PortfolioReporterTest #test01TreeStructureReportForEmptyPortfolioWorksAsExpected stamp: 'fr 11/15/2020 22:27:50'!
PASSED!

!testRun: #PortfolioReporterTest #test02TreeStructureReportForPortfolioWithAccountsWorksAsExpected stamp: 'fr 11/15/2020 22:27:50'!
PASSED!

!testRun: #PortfolioReporterTest #test03TreeStructureReportForPortfolioWithAccountsAndPortfoliosWorksAsExpected stamp: 'fr 11/15/2020 22:27:50'!
PASSED!

!testRun: #PortfolioReporterTest #test04AccountsShouldUseADefaultNameIfNoneIsSpecified stamp: 'fr 11/15/2020 22:27:50'!
PASSED!

!testRun: #PortfolioReporterTest #test05SpecialReportForEmptyPortfolioWorksAsExpected stamp: 'fr 11/15/2020 22:27:50'!
PASSED!

!testRun: #PortfolioReporterTest #test06SpecialReportForPortfolioWithAccountsWithAnyKindOfTransactionsWorksAsExpected stamp: 'fr 11/15/2020 22:27:50'!
PASSED!

!testRun: #PortfolioReporterTest #test07SpecialReportForPortfolioWithAccountsAndPortfoliosWithAnyKindOfTransactionsWorksAsExpected stamp: 'fr 11/15/2020 22:27:50'!
PASSED!

!testRun: #PortfolioTest #test01BalanceOfPortfolioWithoutAccountsIsZero stamp: 'fr 11/15/2020 22:27:50'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithOneAccountIsAccountBalance stamp: 'fr 11/15/2020 22:27:50'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioIsCalculatedRecursivelyOnPortfolios stamp: 'fr 11/15/2020 22:27:50'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithoutAccountsHasNoRegisteredTransaction stamp: 'fr 11/15/2020 22:27:50'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredItsAccountsTransactions stamp: 'fr 11/15/2020 22:27:50'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioLooksForRegisteredTransactionsRecursively stamp: 'fr 11/15/2020 22:27:50'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioHasNoTransactionWhenHasNoAccounts stamp: 'fr 11/15/2020 22:27:50'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTransactionsIncludesAllItsAccountsTransactions stamp: 'fr 11/15/2020 22:27:50'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioTransactionsAreCalculatedRecursively stamp: 'fr 11/15/2020 22:27:50'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCanNotIncludeTheSameAccountMoreThanOnce stamp: 'fr 11/15/2020 22:27:50'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCanNotIncludeAccountOfItsPortfolios stamp: 'fr 11/15/2020 22:27:50'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioCanNotIncludeItself stamp: 'fr 11/15/2020 22:27:50'!
PASSED!

!testRun: #PortfolioTest #test13ComposedPortfolioCanNotHaveParentPortfolioAccount stamp: 'fr 11/15/2020 22:27:50'!
PASSED!

!testRun: #PortfolioTest #test14ComposedPortfolioCanNotHaveAccountOfAnyRootParentRecursively stamp: 'fr 11/15/2020 22:27:50'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotIncludeAnyOfTheComposedAccountOfPortfolioToAdd stamp: 'fr 11/15/2020 22:27:50'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'fr 11/15/2020 22:27:50'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'fr 11/15/2020 22:27:50'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'fr 11/15/2020 22:27:50'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'fr 11/15/2020 22:27:50'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'fr 11/15/2020 22:27:50'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'fr 11/15/2020 22:27:50'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'fr 11/15/2020 22:27:50'!
PASSED!

!testRun: #TransferTest #test01TransferMovesMoneyAffectingBalancesAsExpected stamp: 'fr 11/15/2020 22:27:50'!
PASSED!

!testRun: #TransferTest #test02AccountsThatParticipateInTheTransferRegisterTheCorrespondingLeg stamp: 'fr 11/15/2020 22:27:50'!
ERROR!

!testRun: #TransferTest #test03LegsKnowTheirComplementaryLegThroughTheTransfer stamp: 'fr 11/15/2020 22:27:50'!
ERROR!

!testRun: #TransferTest #test04TransferValueCanNotBeZero stamp: 'fr 11/15/2020 22:27:50'!
PASSED!

!testRun: #TransferTest #test05TransferValueCanNotBeNegative stamp: 'fr 11/15/2020 22:27:50'!
PASSED!

!testRun: #TransferTest #test06TransferCanNotMoveMoneyFromAnAccountToItself stamp: 'fr 11/15/2020 22:27:50'!
PASSED!
!TransferTest methodsFor: 'tests' stamp: 'fr 11/15/2020 22:27:59' prior: 50890048!
test02AccountsThatParticipateInTheTransferRegisterTheCorrespondingLeg

	| account anotherAccount transfer |
	
	account _ ReceptiveAccount new.
	anotherAccount _ ReceptiveAccount new.
	
	transfer _ Transfer move: 100 from: account to: anotherAccount.
	
	self assert: [(account hasRegistered: transfer withdrawLeg) and: [anotherAccount hasRegistered: transfer depositLeg]]! !
!TransferTest methodsFor: 'tests' stamp: 'fr 11/15/2020 22:28:06' prior: 50890026!
test03LegsKnowTheirComplementaryLegThroughTheTransfer

	| account anotherAccount transfer |
	
	account _ ReceptiveAccount new.
	anotherAccount _ ReceptiveAccount new.
	
	transfer _ Transfer move: 100 from: account to: anotherAccount.
	
	self assert: [(transfer to isComplementedBy: transfer withdrawLeg) and: [transfer withdrawLeg isComplementedBy: transfer depositLeg]]! !

!testRun: #AccountReporterTest #test01AccountSummaryForAccountWithNoTransactionsShouldJustShowBalanceZero stamp: 'fr 11/15/2020 22:28:08'!
PASSED!

!testRun: #AccountReporterTest #test02AccountSummaryShouldReflectDepositsOnAccounts stamp: 'fr 11/15/2020 22:28:08'!
PASSED!

!testRun: #AccountReporterTest #test03AccountSummaryShouldReflectWithdrawsOnAccounts stamp: 'fr 11/15/2020 22:28:08'!
PASSED!

!testRun: #AccountReporterTest #test04AccountSummaryShouldReflectOutgoingTransfersOnAccounts stamp: 'fr 11/15/2020 22:28:08'!
PASSED!

!testRun: #AccountReporterTest #test05AccountSummaryShouldReflectIncomingTransfersOnAccounts stamp: 'fr 11/15/2020 22:28:08'!
PASSED!

!testRun: #AccountReporterTest #test06AccountSummaryForPortfolioWithNoTransactionsShouldJustShowBalanceZero stamp: 'fr 11/15/2020 22:28:08'!
PASSED!

!testRun: #AccountReporterTest #test07AccountSummaryShouldReflectDepositsOnPortfoliosWithAccounts stamp: 'fr 11/15/2020 22:28:08'!
PASSED!

!testRun: #AccountReporterTest #test08AccountSummaryShouldReflectWithdrawsOnPortfoliosWithAccounts stamp: 'fr 11/15/2020 22:28:08'!
PASSED!

!testRun: #AccountReporterTest #test09AccountSummaryShouldReflectOutgoingAndIncomingTransfersOnPortfoliosWithAccounts stamp: 'fr 11/15/2020 22:28:08'!
PASSED!

!testRun: #AccountReporterTest #test10AccountSummaryShouldReflectDepositsOnPortfoliosWithPortfolios stamp: 'fr 11/15/2020 22:28:08'!
PASSED!

!testRun: #AccountReporterTest #test11AccountSummaryShouldReflectWithdrawsOnPortfoliosWithPortfolios stamp: 'fr 11/15/2020 22:28:08'!
PASSED!

!testRun: #AccountReporterTest #test12AccountSummaryShouldReflectOutgoingAndIncomingTransfersOnPortfoliosWithPortfolios stamp: 'fr 11/15/2020 22:28:08'!
PASSED!

!testRun: #AccountReporterTest #test13NetTransferForAccountWithNoTransactionsShouldBeZero stamp: 'fr 11/15/2020 22:28:08'!
PASSED!

!testRun: #AccountReporterTest #test14NetTransferForAccountWithAnOutgoingTransferShouldReflectItsValue stamp: 'fr 11/15/2020 22:28:08'!
PASSED!

!testRun: #AccountReporterTest #test15NetTransferForAccountWithAnIncomingTransferShouldReflectItsValue stamp: 'fr 11/15/2020 22:28:08'!
PASSED!

!testRun: #AccountReporterTest #test16NetTransferForAccountShouldNotReflectDeposits stamp: 'fr 11/15/2020 22:28:08'!
PASSED!

!testRun: #AccountReporterTest #test17NetTransferForAccountShouldNotReflectWithdraws stamp: 'fr 11/15/2020 22:28:08'!
PASSED!

!testRun: #AccountReporterTest #test18NetTransferForPortfolioWithNoTransactionsShouldBeZero stamp: 'fr 11/15/2020 22:28:08'!
PASSED!

!testRun: #AccountReporterTest #test19NetTransferForPortfolioWithAnOutgoingTransferShouldReflectItsValue stamp: 'fr 11/15/2020 22:28:08'!
PASSED!

!testRun: #AccountReporterTest #test20NetTransferForPortfolioWithAnIncomingTransferShouldReflectItsValue stamp: 'fr 11/15/2020 22:28:08'!
PASSED!

!testRun: #AccountReporterTest #test21NetTransferForPortfolioShouldNotReflectDeposits stamp: 'fr 11/15/2020 22:28:08'!
PASSED!

!testRun: #AccountReporterTest #test22NetTransferForPortfolioShouldNotReflectWithdraws stamp: 'fr 11/15/2020 22:28:08'!
PASSED!

!testRun: #AccountReporterTest #test23NetTransferForPortfoliosWithPortfoliosShouldReflectOutgoingAndIncomingTransfers stamp: 'fr 11/15/2020 22:28:08'!
PASSED!

!testRun: #AccountReporterTest #test24NetTransferForPortfoliosWithPortfoliosShouldNotRelfectDepositsOrWithdraws stamp: 'fr 11/15/2020 22:28:08'!
PASSED!

!testRun: #PortfolioReporterTest #test01TreeStructureReportForEmptyPortfolioWorksAsExpected stamp: 'fr 11/15/2020 22:28:08'!
PASSED!

!testRun: #PortfolioReporterTest #test02TreeStructureReportForPortfolioWithAccountsWorksAsExpected stamp: 'fr 11/15/2020 22:28:08'!
PASSED!

!testRun: #PortfolioReporterTest #test03TreeStructureReportForPortfolioWithAccountsAndPortfoliosWorksAsExpected stamp: 'fr 11/15/2020 22:28:08'!
PASSED!

!testRun: #PortfolioReporterTest #test04AccountsShouldUseADefaultNameIfNoneIsSpecified stamp: 'fr 11/15/2020 22:28:08'!
PASSED!

!testRun: #PortfolioReporterTest #test05SpecialReportForEmptyPortfolioWorksAsExpected stamp: 'fr 11/15/2020 22:28:08'!
PASSED!

!testRun: #PortfolioReporterTest #test06SpecialReportForPortfolioWithAccountsWithAnyKindOfTransactionsWorksAsExpected stamp: 'fr 11/15/2020 22:28:08'!
PASSED!

!testRun: #PortfolioReporterTest #test07SpecialReportForPortfolioWithAccountsAndPortfoliosWithAnyKindOfTransactionsWorksAsExpected stamp: 'fr 11/15/2020 22:28:08'!
PASSED!

!testRun: #PortfolioTest #test01BalanceOfPortfolioWithoutAccountsIsZero stamp: 'fr 11/15/2020 22:28:08'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithOneAccountIsAccountBalance stamp: 'fr 11/15/2020 22:28:08'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioIsCalculatedRecursivelyOnPortfolios stamp: 'fr 11/15/2020 22:28:08'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithoutAccountsHasNoRegisteredTransaction stamp: 'fr 11/15/2020 22:28:08'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredItsAccountsTransactions stamp: 'fr 11/15/2020 22:28:08'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioLooksForRegisteredTransactionsRecursively stamp: 'fr 11/15/2020 22:28:08'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioHasNoTransactionWhenHasNoAccounts stamp: 'fr 11/15/2020 22:28:08'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTransactionsIncludesAllItsAccountsTransactions stamp: 'fr 11/15/2020 22:28:08'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioTransactionsAreCalculatedRecursively stamp: 'fr 11/15/2020 22:28:08'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCanNotIncludeTheSameAccountMoreThanOnce stamp: 'fr 11/15/2020 22:28:08'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCanNotIncludeAccountOfItsPortfolios stamp: 'fr 11/15/2020 22:28:08'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioCanNotIncludeItself stamp: 'fr 11/15/2020 22:28:08'!
PASSED!

!testRun: #PortfolioTest #test13ComposedPortfolioCanNotHaveParentPortfolioAccount stamp: 'fr 11/15/2020 22:28:08'!
PASSED!

!testRun: #PortfolioTest #test14ComposedPortfolioCanNotHaveAccountOfAnyRootParentRecursively stamp: 'fr 11/15/2020 22:28:08'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotIncludeAnyOfTheComposedAccountOfPortfolioToAdd stamp: 'fr 11/15/2020 22:28:08'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'fr 11/15/2020 22:28:08'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'fr 11/15/2020 22:28:08'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'fr 11/15/2020 22:28:08'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'fr 11/15/2020 22:28:08'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'fr 11/15/2020 22:28:08'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'fr 11/15/2020 22:28:08'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'fr 11/15/2020 22:28:08'!
PASSED!

!testRun: #TransferTest #test01TransferMovesMoneyAffectingBalancesAsExpected stamp: 'fr 11/15/2020 22:28:08'!
PASSED!

!testRun: #TransferTest #test02AccountsThatParticipateInTheTransferRegisterTheCorrespondingLeg stamp: 'fr 11/15/2020 22:28:08'!
PASSED!

!testRun: #TransferTest #test03LegsKnowTheirComplementaryLegThroughTheTransfer stamp: 'fr 11/15/2020 22:28:08'!
ERROR!

!testRun: #TransferTest #test04TransferValueCanNotBeZero stamp: 'fr 11/15/2020 22:28:08'!
PASSED!

!testRun: #TransferTest #test05TransferValueCanNotBeNegative stamp: 'fr 11/15/2020 22:28:08'!
PASSED!

!testRun: #TransferTest #test06TransferCanNotMoveMoneyFromAnAccountToItself stamp: 'fr 11/15/2020 22:28:08'!
PASSED!

!testRun: #TransferTest #test03LegsKnowTheirComplementaryLegThroughTheTransfer stamp: 'fr 11/15/2020 22:28:08'!
ERROR!

!testRun: #AccountReporterTest #test01AccountSummaryForAccountWithNoTransactionsShouldJustShowBalanceZero stamp: 'fr 11/15/2020 22:28:11'!
PASSED!

!testRun: #AccountReporterTest #test02AccountSummaryShouldReflectDepositsOnAccounts stamp: 'fr 11/15/2020 22:28:11'!
PASSED!

!testRun: #AccountReporterTest #test03AccountSummaryShouldReflectWithdrawsOnAccounts stamp: 'fr 11/15/2020 22:28:11'!
PASSED!

!testRun: #AccountReporterTest #test04AccountSummaryShouldReflectOutgoingTransfersOnAccounts stamp: 'fr 11/15/2020 22:28:11'!
PASSED!

!testRun: #AccountReporterTest #test05AccountSummaryShouldReflectIncomingTransfersOnAccounts stamp: 'fr 11/15/2020 22:28:11'!
PASSED!

!testRun: #AccountReporterTest #test06AccountSummaryForPortfolioWithNoTransactionsShouldJustShowBalanceZero stamp: 'fr 11/15/2020 22:28:11'!
PASSED!

!testRun: #AccountReporterTest #test07AccountSummaryShouldReflectDepositsOnPortfoliosWithAccounts stamp: 'fr 11/15/2020 22:28:11'!
PASSED!

!testRun: #AccountReporterTest #test08AccountSummaryShouldReflectWithdrawsOnPortfoliosWithAccounts stamp: 'fr 11/15/2020 22:28:11'!
PASSED!

!testRun: #AccountReporterTest #test09AccountSummaryShouldReflectOutgoingAndIncomingTransfersOnPortfoliosWithAccounts stamp: 'fr 11/15/2020 22:28:11'!
PASSED!

!testRun: #AccountReporterTest #test10AccountSummaryShouldReflectDepositsOnPortfoliosWithPortfolios stamp: 'fr 11/15/2020 22:28:11'!
PASSED!

!testRun: #AccountReporterTest #test11AccountSummaryShouldReflectWithdrawsOnPortfoliosWithPortfolios stamp: 'fr 11/15/2020 22:28:11'!
PASSED!

!testRun: #AccountReporterTest #test12AccountSummaryShouldReflectOutgoingAndIncomingTransfersOnPortfoliosWithPortfolios stamp: 'fr 11/15/2020 22:28:11'!
PASSED!

!testRun: #AccountReporterTest #test13NetTransferForAccountWithNoTransactionsShouldBeZero stamp: 'fr 11/15/2020 22:28:11'!
PASSED!

!testRun: #AccountReporterTest #test14NetTransferForAccountWithAnOutgoingTransferShouldReflectItsValue stamp: 'fr 11/15/2020 22:28:11'!
PASSED!

!testRun: #AccountReporterTest #test15NetTransferForAccountWithAnIncomingTransferShouldReflectItsValue stamp: 'fr 11/15/2020 22:28:11'!
PASSED!

!testRun: #AccountReporterTest #test16NetTransferForAccountShouldNotReflectDeposits stamp: 'fr 11/15/2020 22:28:11'!
PASSED!

!testRun: #AccountReporterTest #test17NetTransferForAccountShouldNotReflectWithdraws stamp: 'fr 11/15/2020 22:28:11'!
PASSED!

!testRun: #AccountReporterTest #test18NetTransferForPortfolioWithNoTransactionsShouldBeZero stamp: 'fr 11/15/2020 22:28:11'!
PASSED!

!testRun: #AccountReporterTest #test19NetTransferForPortfolioWithAnOutgoingTransferShouldReflectItsValue stamp: 'fr 11/15/2020 22:28:11'!
PASSED!

!testRun: #AccountReporterTest #test20NetTransferForPortfolioWithAnIncomingTransferShouldReflectItsValue stamp: 'fr 11/15/2020 22:28:11'!
PASSED!

!testRun: #AccountReporterTest #test21NetTransferForPortfolioShouldNotReflectDeposits stamp: 'fr 11/15/2020 22:28:11'!
PASSED!

!testRun: #AccountReporterTest #test22NetTransferForPortfolioShouldNotReflectWithdraws stamp: 'fr 11/15/2020 22:28:11'!
PASSED!

!testRun: #AccountReporterTest #test23NetTransferForPortfoliosWithPortfoliosShouldReflectOutgoingAndIncomingTransfers stamp: 'fr 11/15/2020 22:28:11'!
PASSED!

!testRun: #AccountReporterTest #test24NetTransferForPortfoliosWithPortfoliosShouldNotRelfectDepositsOrWithdraws stamp: 'fr 11/15/2020 22:28:11'!
PASSED!

!testRun: #PortfolioReporterTest #test01TreeStructureReportForEmptyPortfolioWorksAsExpected stamp: 'fr 11/15/2020 22:28:11'!
PASSED!

!testRun: #PortfolioReporterTest #test02TreeStructureReportForPortfolioWithAccountsWorksAsExpected stamp: 'fr 11/15/2020 22:28:11'!
PASSED!

!testRun: #PortfolioReporterTest #test03TreeStructureReportForPortfolioWithAccountsAndPortfoliosWorksAsExpected stamp: 'fr 11/15/2020 22:28:11'!
PASSED!

!testRun: #PortfolioReporterTest #test04AccountsShouldUseADefaultNameIfNoneIsSpecified stamp: 'fr 11/15/2020 22:28:11'!
PASSED!

!testRun: #PortfolioReporterTest #test05SpecialReportForEmptyPortfolioWorksAsExpected stamp: 'fr 11/15/2020 22:28:11'!
PASSED!

!testRun: #PortfolioReporterTest #test06SpecialReportForPortfolioWithAccountsWithAnyKindOfTransactionsWorksAsExpected stamp: 'fr 11/15/2020 22:28:11'!
PASSED!

!testRun: #PortfolioReporterTest #test07SpecialReportForPortfolioWithAccountsAndPortfoliosWithAnyKindOfTransactionsWorksAsExpected stamp: 'fr 11/15/2020 22:28:11'!
PASSED!

!testRun: #PortfolioTest #test01BalanceOfPortfolioWithoutAccountsIsZero stamp: 'fr 11/15/2020 22:28:11'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithOneAccountIsAccountBalance stamp: 'fr 11/15/2020 22:28:11'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioIsCalculatedRecursivelyOnPortfolios stamp: 'fr 11/15/2020 22:28:11'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithoutAccountsHasNoRegisteredTransaction stamp: 'fr 11/15/2020 22:28:11'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredItsAccountsTransactions stamp: 'fr 11/15/2020 22:28:11'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioLooksForRegisteredTransactionsRecursively stamp: 'fr 11/15/2020 22:28:11'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioHasNoTransactionWhenHasNoAccounts stamp: 'fr 11/15/2020 22:28:11'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTransactionsIncludesAllItsAccountsTransactions stamp: 'fr 11/15/2020 22:28:11'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioTransactionsAreCalculatedRecursively stamp: 'fr 11/15/2020 22:28:11'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCanNotIncludeTheSameAccountMoreThanOnce stamp: 'fr 11/15/2020 22:28:11'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCanNotIncludeAccountOfItsPortfolios stamp: 'fr 11/15/2020 22:28:11'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioCanNotIncludeItself stamp: 'fr 11/15/2020 22:28:11'!
PASSED!

!testRun: #PortfolioTest #test13ComposedPortfolioCanNotHaveParentPortfolioAccount stamp: 'fr 11/15/2020 22:28:11'!
PASSED!

!testRun: #PortfolioTest #test14ComposedPortfolioCanNotHaveAccountOfAnyRootParentRecursively stamp: 'fr 11/15/2020 22:28:11'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotIncludeAnyOfTheComposedAccountOfPortfolioToAdd stamp: 'fr 11/15/2020 22:28:11'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'fr 11/15/2020 22:28:11'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'fr 11/15/2020 22:28:11'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'fr 11/15/2020 22:28:11'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'fr 11/15/2020 22:28:11'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'fr 11/15/2020 22:28:11'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'fr 11/15/2020 22:28:11'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'fr 11/15/2020 22:28:11'!
PASSED!

!testRun: #TransferTest #test01TransferMovesMoneyAffectingBalancesAsExpected stamp: 'fr 11/15/2020 22:28:11'!
PASSED!

!testRun: #TransferTest #test02AccountsThatParticipateInTheTransferRegisterTheCorrespondingLeg stamp: 'fr 11/15/2020 22:28:11'!
PASSED!

!testRun: #TransferTest #test03LegsKnowTheirComplementaryLegThroughTheTransfer stamp: 'fr 11/15/2020 22:28:11'!
ERROR!

!testRun: #TransferTest #test04TransferValueCanNotBeZero stamp: 'fr 11/15/2020 22:28:11'!
PASSED!

!testRun: #TransferTest #test05TransferValueCanNotBeNegative stamp: 'fr 11/15/2020 22:28:11'!
PASSED!

!testRun: #TransferTest #test06TransferCanNotMoveMoneyFromAnAccountToItself stamp: 'fr 11/15/2020 22:28:11'!
PASSED!

!testRun: #TransferTest #test03LegsKnowTheirComplementaryLegThroughTheTransfer stamp: 'fr 11/15/2020 22:28:11'!
ERROR!

!testRun: #TransferTest #test01TransferMovesMoneyAffectingBalancesAsExpected stamp: 'fr 11/15/2020 22:29:07'!
PASSED!

!testRun: #TransferTest #test02AccountsThatParticipateInTheTransferRegisterTheCorrespondingLeg stamp: 'fr 11/15/2020 22:29:07'!
PASSED!

!testRun: #TransferTest #test03LegsKnowTheirComplementaryLegThroughTheTransfer stamp: 'fr 11/15/2020 22:29:07'!
ERROR!

!testRun: #TransferTest #test04TransferValueCanNotBeZero stamp: 'fr 11/15/2020 22:29:07'!
PASSED!

!testRun: #TransferTest #test05TransferValueCanNotBeNegative stamp: 'fr 11/15/2020 22:29:07'!
PASSED!

!testRun: #TransferTest #test06TransferCanNotMoveMoneyFromAnAccountToItself stamp: 'fr 11/15/2020 22:29:07'!
PASSED!

!testRun: #TransferTest #test03LegsKnowTheirComplementaryLegThroughTheTransfer stamp: 'fr 11/15/2020 22:29:07'!
ERROR!
!TransferTest methodsFor: 'tests' stamp: 'fr 11/15/2020 22:29:20' prior: 50890337!
test03LegsKnowTheirComplementaryLegThroughTheTransfer

	| account anotherAccount transfer |
	
	account _ ReceptiveAccount new.
	anotherAccount _ ReceptiveAccount new.
	
	transfer _ Transfer move: 100 from: account to: anotherAccount.
	
	self assert: [(transfer depositLeg isComplementedBy: transfer withdrawLeg) and: [transfer withdrawLeg isComplementedBy: transfer depositLeg]]! !

!testRun: #AccountReporterTest #test01AccountSummaryForAccountWithNoTransactionsShouldJustShowBalanceZero stamp: 'fr 11/15/2020 22:29:22'!
PASSED!

!testRun: #AccountReporterTest #test02AccountSummaryShouldReflectDepositsOnAccounts stamp: 'fr 11/15/2020 22:29:22'!
PASSED!

!testRun: #AccountReporterTest #test03AccountSummaryShouldReflectWithdrawsOnAccounts stamp: 'fr 11/15/2020 22:29:22'!
PASSED!

!testRun: #AccountReporterTest #test04AccountSummaryShouldReflectOutgoingTransfersOnAccounts stamp: 'fr 11/15/2020 22:29:22'!
PASSED!

!testRun: #AccountReporterTest #test05AccountSummaryShouldReflectIncomingTransfersOnAccounts stamp: 'fr 11/15/2020 22:29:22'!
PASSED!

!testRun: #AccountReporterTest #test06AccountSummaryForPortfolioWithNoTransactionsShouldJustShowBalanceZero stamp: 'fr 11/15/2020 22:29:22'!
PASSED!

!testRun: #AccountReporterTest #test07AccountSummaryShouldReflectDepositsOnPortfoliosWithAccounts stamp: 'fr 11/15/2020 22:29:22'!
PASSED!

!testRun: #AccountReporterTest #test08AccountSummaryShouldReflectWithdrawsOnPortfoliosWithAccounts stamp: 'fr 11/15/2020 22:29:22'!
PASSED!

!testRun: #AccountReporterTest #test09AccountSummaryShouldReflectOutgoingAndIncomingTransfersOnPortfoliosWithAccounts stamp: 'fr 11/15/2020 22:29:22'!
PASSED!

!testRun: #AccountReporterTest #test10AccountSummaryShouldReflectDepositsOnPortfoliosWithPortfolios stamp: 'fr 11/15/2020 22:29:22'!
PASSED!

!testRun: #AccountReporterTest #test11AccountSummaryShouldReflectWithdrawsOnPortfoliosWithPortfolios stamp: 'fr 11/15/2020 22:29:22'!
PASSED!

!testRun: #AccountReporterTest #test12AccountSummaryShouldReflectOutgoingAndIncomingTransfersOnPortfoliosWithPortfolios stamp: 'fr 11/15/2020 22:29:22'!
PASSED!

!testRun: #AccountReporterTest #test13NetTransferForAccountWithNoTransactionsShouldBeZero stamp: 'fr 11/15/2020 22:29:22'!
PASSED!

!testRun: #AccountReporterTest #test14NetTransferForAccountWithAnOutgoingTransferShouldReflectItsValue stamp: 'fr 11/15/2020 22:29:22'!
PASSED!

!testRun: #AccountReporterTest #test15NetTransferForAccountWithAnIncomingTransferShouldReflectItsValue stamp: 'fr 11/15/2020 22:29:22'!
PASSED!

!testRun: #AccountReporterTest #test16NetTransferForAccountShouldNotReflectDeposits stamp: 'fr 11/15/2020 22:29:22'!
PASSED!

!testRun: #AccountReporterTest #test17NetTransferForAccountShouldNotReflectWithdraws stamp: 'fr 11/15/2020 22:29:22'!
PASSED!

!testRun: #AccountReporterTest #test18NetTransferForPortfolioWithNoTransactionsShouldBeZero stamp: 'fr 11/15/2020 22:29:22'!
PASSED!

!testRun: #AccountReporterTest #test19NetTransferForPortfolioWithAnOutgoingTransferShouldReflectItsValue stamp: 'fr 11/15/2020 22:29:22'!
PASSED!

!testRun: #AccountReporterTest #test20NetTransferForPortfolioWithAnIncomingTransferShouldReflectItsValue stamp: 'fr 11/15/2020 22:29:22'!
PASSED!

!testRun: #AccountReporterTest #test21NetTransferForPortfolioShouldNotReflectDeposits stamp: 'fr 11/15/2020 22:29:22'!
PASSED!

!testRun: #AccountReporterTest #test22NetTransferForPortfolioShouldNotReflectWithdraws stamp: 'fr 11/15/2020 22:29:22'!
PASSED!

!testRun: #AccountReporterTest #test23NetTransferForPortfoliosWithPortfoliosShouldReflectOutgoingAndIncomingTransfers stamp: 'fr 11/15/2020 22:29:22'!
PASSED!

!testRun: #AccountReporterTest #test24NetTransferForPortfoliosWithPortfoliosShouldNotRelfectDepositsOrWithdraws stamp: 'fr 11/15/2020 22:29:22'!
PASSED!

!testRun: #PortfolioReporterTest #test01TreeStructureReportForEmptyPortfolioWorksAsExpected stamp: 'fr 11/15/2020 22:29:22'!
PASSED!

!testRun: #PortfolioReporterTest #test02TreeStructureReportForPortfolioWithAccountsWorksAsExpected stamp: 'fr 11/15/2020 22:29:22'!
PASSED!

!testRun: #PortfolioReporterTest #test03TreeStructureReportForPortfolioWithAccountsAndPortfoliosWorksAsExpected stamp: 'fr 11/15/2020 22:29:22'!
PASSED!

!testRun: #PortfolioReporterTest #test04AccountsShouldUseADefaultNameIfNoneIsSpecified stamp: 'fr 11/15/2020 22:29:22'!
PASSED!

!testRun: #PortfolioReporterTest #test05SpecialReportForEmptyPortfolioWorksAsExpected stamp: 'fr 11/15/2020 22:29:22'!
PASSED!

!testRun: #PortfolioReporterTest #test06SpecialReportForPortfolioWithAccountsWithAnyKindOfTransactionsWorksAsExpected stamp: 'fr 11/15/2020 22:29:22'!
PASSED!

!testRun: #PortfolioReporterTest #test07SpecialReportForPortfolioWithAccountsAndPortfoliosWithAnyKindOfTransactionsWorksAsExpected stamp: 'fr 11/15/2020 22:29:22'!
PASSED!

!testRun: #PortfolioTest #test01BalanceOfPortfolioWithoutAccountsIsZero stamp: 'fr 11/15/2020 22:29:22'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithOneAccountIsAccountBalance stamp: 'fr 11/15/2020 22:29:22'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioIsCalculatedRecursivelyOnPortfolios stamp: 'fr 11/15/2020 22:29:22'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithoutAccountsHasNoRegisteredTransaction stamp: 'fr 11/15/2020 22:29:22'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredItsAccountsTransactions stamp: 'fr 11/15/2020 22:29:22'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioLooksForRegisteredTransactionsRecursively stamp: 'fr 11/15/2020 22:29:22'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioHasNoTransactionWhenHasNoAccounts stamp: 'fr 11/15/2020 22:29:22'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTransactionsIncludesAllItsAccountsTransactions stamp: 'fr 11/15/2020 22:29:22'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioTransactionsAreCalculatedRecursively stamp: 'fr 11/15/2020 22:29:22'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCanNotIncludeTheSameAccountMoreThanOnce stamp: 'fr 11/15/2020 22:29:22'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCanNotIncludeAccountOfItsPortfolios stamp: 'fr 11/15/2020 22:29:22'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioCanNotIncludeItself stamp: 'fr 11/15/2020 22:29:22'!
PASSED!

!testRun: #PortfolioTest #test13ComposedPortfolioCanNotHaveParentPortfolioAccount stamp: 'fr 11/15/2020 22:29:22'!
PASSED!

!testRun: #PortfolioTest #test14ComposedPortfolioCanNotHaveAccountOfAnyRootParentRecursively stamp: 'fr 11/15/2020 22:29:22'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotIncludeAnyOfTheComposedAccountOfPortfolioToAdd stamp: 'fr 11/15/2020 22:29:22'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'fr 11/15/2020 22:29:22'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'fr 11/15/2020 22:29:22'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'fr 11/15/2020 22:29:22'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'fr 11/15/2020 22:29:22'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'fr 11/15/2020 22:29:22'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'fr 11/15/2020 22:29:22'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'fr 11/15/2020 22:29:22'!
PASSED!

!testRun: #TransferTest #test01TransferMovesMoneyAffectingBalancesAsExpected stamp: 'fr 11/15/2020 22:29:22'!
PASSED!

!testRun: #TransferTest #test02AccountsThatParticipateInTheTransferRegisterTheCorrespondingLeg stamp: 'fr 11/15/2020 22:29:22'!
PASSED!

!testRun: #TransferTest #test03LegsKnowTheirComplementaryLegThroughTheTransfer stamp: 'fr 11/15/2020 22:29:22'!
PASSED!

!testRun: #TransferTest #test04TransferValueCanNotBeZero stamp: 'fr 11/15/2020 22:29:22'!
PASSED!

!testRun: #TransferTest #test05TransferValueCanNotBeNegative stamp: 'fr 11/15/2020 22:29:22'!
PASSED!

!testRun: #TransferTest #test06TransferCanNotMoveMoneyFromAnAccountToItself stamp: 'fr 11/15/2020 22:29:22'!
PASSED!

!classDefinition: #Transfer category: 'Portfolio-Part-II-Exercise' stamp: 'fr 11/16/2020 00:28:46'!
Object subclass: #Transfer
	instanceVariableNames: 'value withdrawLeg deposit'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Part-II-Exercise'!
!Transfer methodsFor: 'as yet unclassified' stamp: 'fr 11/16/2020 00:28:46' prior: 50890022!
withdrawLeg
	
	^withdrawLeg ! !
!Transfer methodsFor: 'as yet unclassified' stamp: 'fr 11/16/2020 00:28:46' prior: 50869061!
initializeMove: transferValue from: aReceptiveAccountToMoveFrom to: aReceptiveAccountToMoveTo 
		
	value _ transferValue.
	withdrawLeg _ WithdrawByTransference register: transferValue on: aReceptiveAccountToMoveFrom for: self.
	deposit _ DepositByTransference register: transferValue on: aReceptiveAccountToMoveTo for: self ! !

!classDefinition: #Transfer category: 'Portfolio-Part-II-Exercise' stamp: 'fr 11/16/2020 00:28:50'!
Object subclass: #Transfer
	instanceVariableNames: 'value withdrawLeg depositLeg'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Part-II-Exercise'!
!Transfer methodsFor: 'as yet unclassified' stamp: 'fr 11/16/2020 00:28:50' prior: 50890065!
depositLeg
	
	^depositLeg ! !
!Transfer methodsFor: 'as yet unclassified' stamp: 'fr 11/16/2020 00:28:50' prior: 50891143!
initializeMove: transferValue from: aReceptiveAccountToMoveFrom to: aReceptiveAccountToMoveTo 
		
	value _ transferValue.
	withdrawLeg _ WithdrawByTransference register: transferValue on: aReceptiveAccountToMoveFrom for: self.
	depositLeg _ DepositByTransference register: transferValue on: aReceptiveAccountToMoveTo for: self ! !

!testRun: #AccountReporterTest #test01AccountSummaryForAccountWithNoTransactionsShouldJustShowBalanceZero stamp: 'fr 11/16/2020 00:28:52'!
PASSED!

!testRun: #AccountReporterTest #test02AccountSummaryShouldReflectDepositsOnAccounts stamp: 'fr 11/16/2020 00:28:52'!
PASSED!

!testRun: #AccountReporterTest #test03AccountSummaryShouldReflectWithdrawsOnAccounts stamp: 'fr 11/16/2020 00:28:52'!
PASSED!

!testRun: #AccountReporterTest #test04AccountSummaryShouldReflectOutgoingTransfersOnAccounts stamp: 'fr 11/16/2020 00:28:52'!
PASSED!

!testRun: #AccountReporterTest #test05AccountSummaryShouldReflectIncomingTransfersOnAccounts stamp: 'fr 11/16/2020 00:28:52'!
PASSED!

!testRun: #AccountReporterTest #test06AccountSummaryForPortfolioWithNoTransactionsShouldJustShowBalanceZero stamp: 'fr 11/16/2020 00:28:52'!
PASSED!

!testRun: #AccountReporterTest #test07AccountSummaryShouldReflectDepositsOnPortfoliosWithAccounts stamp: 'fr 11/16/2020 00:28:52'!
PASSED!

!testRun: #AccountReporterTest #test08AccountSummaryShouldReflectWithdrawsOnPortfoliosWithAccounts stamp: 'fr 11/16/2020 00:28:52'!
PASSED!

!testRun: #AccountReporterTest #test09AccountSummaryShouldReflectOutgoingAndIncomingTransfersOnPortfoliosWithAccounts stamp: 'fr 11/16/2020 00:28:52'!
PASSED!

!testRun: #AccountReporterTest #test10AccountSummaryShouldReflectDepositsOnPortfoliosWithPortfolios stamp: 'fr 11/16/2020 00:28:52'!
PASSED!

!testRun: #AccountReporterTest #test11AccountSummaryShouldReflectWithdrawsOnPortfoliosWithPortfolios stamp: 'fr 11/16/2020 00:28:52'!
PASSED!

!testRun: #AccountReporterTest #test12AccountSummaryShouldReflectOutgoingAndIncomingTransfersOnPortfoliosWithPortfolios stamp: 'fr 11/16/2020 00:28:52'!
PASSED!

!testRun: #AccountReporterTest #test13NetTransferForAccountWithNoTransactionsShouldBeZero stamp: 'fr 11/16/2020 00:28:52'!
PASSED!

!testRun: #AccountReporterTest #test14NetTransferForAccountWithAnOutgoingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 00:28:52'!
PASSED!

!testRun: #AccountReporterTest #test15NetTransferForAccountWithAnIncomingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 00:28:52'!
PASSED!

!testRun: #AccountReporterTest #test16NetTransferForAccountShouldNotReflectDeposits stamp: 'fr 11/16/2020 00:28:52'!
PASSED!

!testRun: #AccountReporterTest #test17NetTransferForAccountShouldNotReflectWithdraws stamp: 'fr 11/16/2020 00:28:52'!
PASSED!

!testRun: #AccountReporterTest #test18NetTransferForPortfolioWithNoTransactionsShouldBeZero stamp: 'fr 11/16/2020 00:28:52'!
PASSED!

!testRun: #AccountReporterTest #test19NetTransferForPortfolioWithAnOutgoingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 00:28:52'!
PASSED!

!testRun: #AccountReporterTest #test20NetTransferForPortfolioWithAnIncomingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 00:28:52'!
PASSED!

!testRun: #AccountReporterTest #test21NetTransferForPortfolioShouldNotReflectDeposits stamp: 'fr 11/16/2020 00:28:52'!
PASSED!

!testRun: #AccountReporterTest #test22NetTransferForPortfolioShouldNotReflectWithdraws stamp: 'fr 11/16/2020 00:28:52'!
PASSED!

!testRun: #AccountReporterTest #test23NetTransferForPortfoliosWithPortfoliosShouldReflectOutgoingAndIncomingTransfers stamp: 'fr 11/16/2020 00:28:52'!
PASSED!

!testRun: #AccountReporterTest #test24NetTransferForPortfoliosWithPortfoliosShouldNotRelfectDepositsOrWithdraws stamp: 'fr 11/16/2020 00:28:52'!
PASSED!

!testRun: #PortfolioReporterTest #test01TreeStructureReportForEmptyPortfolioWorksAsExpected stamp: 'fr 11/16/2020 00:28:52'!
PASSED!

!testRun: #PortfolioReporterTest #test02TreeStructureReportForPortfolioWithAccountsWorksAsExpected stamp: 'fr 11/16/2020 00:28:52'!
PASSED!

!testRun: #PortfolioReporterTest #test03TreeStructureReportForPortfolioWithAccountsAndPortfoliosWorksAsExpected stamp: 'fr 11/16/2020 00:28:52'!
PASSED!

!testRun: #PortfolioReporterTest #test04AccountsShouldUseADefaultNameIfNoneIsSpecified stamp: 'fr 11/16/2020 00:28:52'!
PASSED!

!testRun: #PortfolioReporterTest #test05SpecialReportForEmptyPortfolioWorksAsExpected stamp: 'fr 11/16/2020 00:28:52'!
PASSED!

!testRun: #PortfolioReporterTest #test06SpecialReportForPortfolioWithAccountsWithAnyKindOfTransactionsWorksAsExpected stamp: 'fr 11/16/2020 00:28:52'!
PASSED!

!testRun: #PortfolioReporterTest #test07SpecialReportForPortfolioWithAccountsAndPortfoliosWithAnyKindOfTransactionsWorksAsExpected stamp: 'fr 11/16/2020 00:28:52'!
PASSED!

!testRun: #PortfolioTest #test01BalanceOfPortfolioWithoutAccountsIsZero stamp: 'fr 11/16/2020 00:28:52'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithOneAccountIsAccountBalance stamp: 'fr 11/16/2020 00:28:52'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioIsCalculatedRecursivelyOnPortfolios stamp: 'fr 11/16/2020 00:28:52'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithoutAccountsHasNoRegisteredTransaction stamp: 'fr 11/16/2020 00:28:52'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredItsAccountsTransactions stamp: 'fr 11/16/2020 00:28:52'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioLooksForRegisteredTransactionsRecursively stamp: 'fr 11/16/2020 00:28:52'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioHasNoTransactionWhenHasNoAccounts stamp: 'fr 11/16/2020 00:28:52'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTransactionsIncludesAllItsAccountsTransactions stamp: 'fr 11/16/2020 00:28:52'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioTransactionsAreCalculatedRecursively stamp: 'fr 11/16/2020 00:28:52'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCanNotIncludeTheSameAccountMoreThanOnce stamp: 'fr 11/16/2020 00:28:52'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCanNotIncludeAccountOfItsPortfolios stamp: 'fr 11/16/2020 00:28:52'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioCanNotIncludeItself stamp: 'fr 11/16/2020 00:28:52'!
PASSED!

!testRun: #PortfolioTest #test13ComposedPortfolioCanNotHaveParentPortfolioAccount stamp: 'fr 11/16/2020 00:28:52'!
PASSED!

!testRun: #PortfolioTest #test14ComposedPortfolioCanNotHaveAccountOfAnyRootParentRecursively stamp: 'fr 11/16/2020 00:28:52'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotIncludeAnyOfTheComposedAccountOfPortfolioToAdd stamp: 'fr 11/16/2020 00:28:52'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'fr 11/16/2020 00:28:52'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'fr 11/16/2020 00:28:52'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'fr 11/16/2020 00:28:52'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'fr 11/16/2020 00:28:52'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'fr 11/16/2020 00:28:52'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'fr 11/16/2020 00:28:52'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'fr 11/16/2020 00:28:52'!
PASSED!

!testRun: #TransferTest #test01TransferMovesMoneyAffectingBalancesAsExpected stamp: 'fr 11/16/2020 00:28:52'!
PASSED!

!testRun: #TransferTest #test02AccountsThatParticipateInTheTransferRegisterTheCorrespondingLeg stamp: 'fr 11/16/2020 00:28:52'!
PASSED!

!testRun: #TransferTest #test03LegsKnowTheirComplementaryLegThroughTheTransfer stamp: 'fr 11/16/2020 00:28:52'!
PASSED!

!testRun: #TransferTest #test04TransferValueCanNotBeZero stamp: 'fr 11/16/2020 00:28:52'!
PASSED!

!testRun: #TransferTest #test05TransferValueCanNotBeNegative stamp: 'fr 11/16/2020 00:28:52'!
PASSED!

!testRun: #TransferTest #test06TransferCanNotMoveMoneyFromAnAccountToItself stamp: 'fr 11/16/2020 00:28:52'!
PASSED!
!AccountReporter class methodsFor: 'instance creation' stamp: 'fr 11/16/2020 00:29:30' prior: 50881439!
for: anAccount 
	
	^self new initializeFor: anAccount ! !
!SummaryReporter methodsFor: 'initialization' stamp: 'fr 11/16/2020 00:29:56' prior: 50881271!
initializeFor: anAccount 

	accountSummary _ OrderedCollection new.
	account _ anAccount.! !
!TransferNetReporter methodsFor: 'initialization' stamp: 'fr 11/16/2020 00:30:03' prior: 50880960!
initializeFor: anAccount 
	
	transferNetBalance _ 0.
	account _ anAccount.! !
!AccountReporter methodsFor: 'private - transactions' stamp: 'fr 11/16/2020 00:33:07'!
addDepositByTransferToReport: aDepositByTransfer

	self subclassResponsibility ! !
!AccountReporter methodsFor: 'private - transactions' stamp: 'fr 11/16/2020 00:33:18'!
addDepositToReport: aDeposit
	
	self subclassResponsibility ! !
!AccountReporter methodsFor: 'private - transactions' stamp: 'fr 11/16/2020 00:33:27'!
addWithdrawToReport: aWithdraw
	
	self subclassResponsibility ! !
!AccountReporter methodsFor: 'private - transactions' stamp: 'fr 11/16/2020 00:33:35'!
addWithdrawByTransfeToReport: aWithdrawByTransfe
	
	self subclassResponsibility ! !
!AccountReporter methodsFor: 'initialization' stamp: 'fr 11/16/2020 00:34:20'!
initializeFor: anAccount 

	self subclassResponsibility ! !
!AccountTransaction methodsFor: 'report' stamp: 'fr 11/16/2020 00:36:22'!
addToReportWith: aReporter

	self subclassResponsibility ! !

!methodRemoval: AccountReporter #initializeFor: stamp: 'fr 11/16/2020 00:38:03'!
initializeFor: anAccount 

	self subclassResponsibility !
!PortfolioReporter methodsFor: 'no messages' stamp: 'fr 11/16/2020 00:41:36'!
addPortfolioToReport: aPortfolio

	self subclassResponsibility ! !
!PortfolioReporter methodsFor: 'as yet unclassified' stamp: 'fr 11/16/2020 00:41:46'!
addReceptiveAccountToReport: aReceptiveAccount

	self subclassResponsibility ! !

!testRun: #AccountReporterTest #test01AccountSummaryForAccountWithNoTransactionsShouldJustShowBalanceZero stamp: 'fr 11/16/2020 00:43:30'!
PASSED!

!testRun: #AccountReporterTest #test02AccountSummaryShouldReflectDepositsOnAccounts stamp: 'fr 11/16/2020 00:43:30'!
PASSED!

!testRun: #AccountReporterTest #test03AccountSummaryShouldReflectWithdrawsOnAccounts stamp: 'fr 11/16/2020 00:43:30'!
PASSED!

!testRun: #AccountReporterTest #test04AccountSummaryShouldReflectOutgoingTransfersOnAccounts stamp: 'fr 11/16/2020 00:43:30'!
PASSED!

!testRun: #AccountReporterTest #test05AccountSummaryShouldReflectIncomingTransfersOnAccounts stamp: 'fr 11/16/2020 00:43:30'!
PASSED!

!testRun: #AccountReporterTest #test06AccountSummaryForPortfolioWithNoTransactionsShouldJustShowBalanceZero stamp: 'fr 11/16/2020 00:43:30'!
PASSED!

!testRun: #AccountReporterTest #test07AccountSummaryShouldReflectDepositsOnPortfoliosWithAccounts stamp: 'fr 11/16/2020 00:43:30'!
PASSED!

!testRun: #AccountReporterTest #test08AccountSummaryShouldReflectWithdrawsOnPortfoliosWithAccounts stamp: 'fr 11/16/2020 00:43:30'!
PASSED!

!testRun: #AccountReporterTest #test09AccountSummaryShouldReflectOutgoingAndIncomingTransfersOnPortfoliosWithAccounts stamp: 'fr 11/16/2020 00:43:30'!
PASSED!

!testRun: #AccountReporterTest #test10AccountSummaryShouldReflectDepositsOnPortfoliosWithPortfolios stamp: 'fr 11/16/2020 00:43:30'!
PASSED!

!testRun: #AccountReporterTest #test11AccountSummaryShouldReflectWithdrawsOnPortfoliosWithPortfolios stamp: 'fr 11/16/2020 00:43:30'!
PASSED!

!testRun: #AccountReporterTest #test12AccountSummaryShouldReflectOutgoingAndIncomingTransfersOnPortfoliosWithPortfolios stamp: 'fr 11/16/2020 00:43:30'!
PASSED!

!testRun: #AccountReporterTest #test13NetTransferForAccountWithNoTransactionsShouldBeZero stamp: 'fr 11/16/2020 00:43:30'!
PASSED!

!testRun: #AccountReporterTest #test14NetTransferForAccountWithAnOutgoingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 00:43:30'!
PASSED!

!testRun: #AccountReporterTest #test15NetTransferForAccountWithAnIncomingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 00:43:30'!
PASSED!

!testRun: #AccountReporterTest #test16NetTransferForAccountShouldNotReflectDeposits stamp: 'fr 11/16/2020 00:43:30'!
PASSED!

!testRun: #AccountReporterTest #test17NetTransferForAccountShouldNotReflectWithdraws stamp: 'fr 11/16/2020 00:43:30'!
PASSED!

!testRun: #AccountReporterTest #test18NetTransferForPortfolioWithNoTransactionsShouldBeZero stamp: 'fr 11/16/2020 00:43:30'!
PASSED!

!testRun: #AccountReporterTest #test19NetTransferForPortfolioWithAnOutgoingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 00:43:30'!
PASSED!

!testRun: #AccountReporterTest #test20NetTransferForPortfolioWithAnIncomingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 00:43:30'!
PASSED!

!testRun: #AccountReporterTest #test21NetTransferForPortfolioShouldNotReflectDeposits stamp: 'fr 11/16/2020 00:43:30'!
PASSED!

!testRun: #AccountReporterTest #test22NetTransferForPortfolioShouldNotReflectWithdraws stamp: 'fr 11/16/2020 00:43:30'!
PASSED!

!testRun: #AccountReporterTest #test23NetTransferForPortfoliosWithPortfoliosShouldReflectOutgoingAndIncomingTransfers stamp: 'fr 11/16/2020 00:43:30'!
PASSED!

!testRun: #AccountReporterTest #test24NetTransferForPortfoliosWithPortfoliosShouldNotRelfectDepositsOrWithdraws stamp: 'fr 11/16/2020 00:43:30'!
PASSED!

!testRun: #PortfolioReporterTest #test01TreeStructureReportForEmptyPortfolioWorksAsExpected stamp: 'fr 11/16/2020 00:43:30'!
PASSED!

!testRun: #PortfolioReporterTest #test02TreeStructureReportForPortfolioWithAccountsWorksAsExpected stamp: 'fr 11/16/2020 00:43:30'!
PASSED!

!testRun: #PortfolioReporterTest #test03TreeStructureReportForPortfolioWithAccountsAndPortfoliosWorksAsExpected stamp: 'fr 11/16/2020 00:43:30'!
PASSED!

!testRun: #PortfolioReporterTest #test04AccountsShouldUseADefaultNameIfNoneIsSpecified stamp: 'fr 11/16/2020 00:43:30'!
PASSED!

!testRun: #PortfolioReporterTest #test05SpecialReportForEmptyPortfolioWorksAsExpected stamp: 'fr 11/16/2020 00:43:30'!
PASSED!

!testRun: #PortfolioReporterTest #test06SpecialReportForPortfolioWithAccountsWithAnyKindOfTransactionsWorksAsExpected stamp: 'fr 11/16/2020 00:43:30'!
PASSED!

!testRun: #PortfolioReporterTest #test07SpecialReportForPortfolioWithAccountsAndPortfoliosWithAnyKindOfTransactionsWorksAsExpected stamp: 'fr 11/16/2020 00:43:30'!
PASSED!

!testRun: #PortfolioTest #test01BalanceOfPortfolioWithoutAccountsIsZero stamp: 'fr 11/16/2020 00:43:30'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithOneAccountIsAccountBalance stamp: 'fr 11/16/2020 00:43:30'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioIsCalculatedRecursivelyOnPortfolios stamp: 'fr 11/16/2020 00:43:30'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithoutAccountsHasNoRegisteredTransaction stamp: 'fr 11/16/2020 00:43:30'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredItsAccountsTransactions stamp: 'fr 11/16/2020 00:43:30'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioLooksForRegisteredTransactionsRecursively stamp: 'fr 11/16/2020 00:43:30'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioHasNoTransactionWhenHasNoAccounts stamp: 'fr 11/16/2020 00:43:30'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTransactionsIncludesAllItsAccountsTransactions stamp: 'fr 11/16/2020 00:43:30'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioTransactionsAreCalculatedRecursively stamp: 'fr 11/16/2020 00:43:30'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCanNotIncludeTheSameAccountMoreThanOnce stamp: 'fr 11/16/2020 00:43:30'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCanNotIncludeAccountOfItsPortfolios stamp: 'fr 11/16/2020 00:43:30'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioCanNotIncludeItself stamp: 'fr 11/16/2020 00:43:30'!
PASSED!

!testRun: #PortfolioTest #test13ComposedPortfolioCanNotHaveParentPortfolioAccount stamp: 'fr 11/16/2020 00:43:30'!
PASSED!

!testRun: #PortfolioTest #test14ComposedPortfolioCanNotHaveAccountOfAnyRootParentRecursively stamp: 'fr 11/16/2020 00:43:30'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotIncludeAnyOfTheComposedAccountOfPortfolioToAdd stamp: 'fr 11/16/2020 00:43:30'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'fr 11/16/2020 00:43:30'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'fr 11/16/2020 00:43:30'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'fr 11/16/2020 00:43:30'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'fr 11/16/2020 00:43:30'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'fr 11/16/2020 00:43:30'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'fr 11/16/2020 00:43:30'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'fr 11/16/2020 00:43:30'!
PASSED!

!testRun: #TransferTest #test01TransferMovesMoneyAffectingBalancesAsExpected stamp: 'fr 11/16/2020 00:43:30'!
PASSED!

!testRun: #TransferTest #test02AccountsThatParticipateInTheTransferRegisterTheCorrespondingLeg stamp: 'fr 11/16/2020 00:43:30'!
PASSED!

!testRun: #TransferTest #test03LegsKnowTheirComplementaryLegThroughTheTransfer stamp: 'fr 11/16/2020 00:43:30'!
PASSED!

!testRun: #TransferTest #test04TransferValueCanNotBeZero stamp: 'fr 11/16/2020 00:43:30'!
PASSED!

!testRun: #TransferTest #test05TransferValueCanNotBeNegative stamp: 'fr 11/16/2020 00:43:30'!
PASSED!

!testRun: #TransferTest #test06TransferCanNotMoveMoneyFromAnAccountToItself stamp: 'fr 11/16/2020 00:43:30'!
PASSED!

----SNAPSHOT----(16 November 2020 00:44:42) CuisUniversity-4384.image priorSource: 17858652!

!classRenamed: #FullTreeReporter as: #SpecialTreeReporter stamp: 'fr 11/16/2020 00:46:53'!
Smalltalk renameClassNamed: #FullTreeReporter as: #SpecialTreeReporter!
!PortfolioReporterTest methodsFor: 'as yet unclassified' stamp: 'fr 11/16/2020 00:46:53' prior: 50889027!
test05SpecialReportForEmptyPortfolioWorksAsExpected

	| portfolio reporter |
	portfolio _ Portfolio named: 'Portfolio de Fede'.
	reporter _ SpecialTreeReporter for: portfolio.

	self assert: [reporter specialReport = (OrderedCollection with: 'Portfolio de Fede' with: ' Balance = 0')]! !
!PortfolioReporterTest methodsFor: 'as yet unclassified' stamp: 'fr 11/16/2020 00:46:53' prior: 50889052!
test06SpecialReportForPortfolioWithAccountsWithAnyKindOfTransactionsWorksAsExpected

	| portfolio account anotherAccount expectedReport reporter |
	account _ ReceptiveAccount named: 'Cuenta de Fede'.
	anotherAccount _ ReceptiveAccount new.
	Deposit register: 100 on: account.
	Withdraw register: 50 on: account.
	Transfer move: 10 from: account to: anotherAccount.
	Transfer move: 5 from: anotherAccount to: account.
	portfolio _ Portfolio named: 'Portfolio de Fede' with: account.
	expectedReport _ OrderedCollection with: 'Portfolio de Fede'.
	expectedReport add: ' Cuenta de Fede'.
	expectedReport add: '  Dep�sito por 100.'.
	expectedReport add: '  Extracci�n por 50.'.
	expectedReport add: '  Salida por transferencia de 10.'.
	expectedReport add: '  Entrada por transferencia de 5.'.
	expectedReport add: '  Balance = 45'.
	expectedReport add: ' Balance = 45'.
	reporter _ SpecialTreeReporter for: portfolio.

	self assert: [reporter specialReport = expectedReport]! !
!PortfolioReporterTest methodsFor: 'as yet unclassified' stamp: 'fr 11/16/2020 00:46:53' prior: 50889121!
test07SpecialReportForPortfolioWithAccountsAndPortfoliosWithAnyKindOfTransactionsWorksAsExpected

	| portfolio account anotherAccount expectedReport anotherPortfolio reporter |
	account _ ReceptiveAccount named: 'Cuenta de Fede'.
	anotherAccount _ ReceptiveAccount named: 'Cuenta de Juan'.
	Deposit register: 100 on: account.
	Withdraw register: 50 on: account.
	Transfer move: 10 from: account to: anotherAccount.
	Transfer move: 5 from: anotherAccount to: account.
	anotherPortfolio _ Portfolio named: 'Portfolio de Juan' with: anotherAccount.
	portfolio _ Portfolio named: 'Portfolio de Fede' with: account with: anotherPortfolio.
	expectedReport _ OrderedCollection with: 'Portfolio de Fede'.
	expectedReport add: ' Cuenta de Fede'.
	expectedReport add: '  Dep�sito por 100.'.
	expectedReport add: '  Extracci�n por 50.'.
	expectedReport add: '  Salida por transferencia de 10.'.
	expectedReport add: '  Entrada por transferencia de 5.'.
	expectedReport add: '  Balance = 45'.
	expectedReport add: ' Portfolio de Juan'.
	expectedReport add: '  Cuenta de Juan'.
	expectedReport add: '   Entrada por transferencia de 10.'.
	expectedReport add: '   Salida por transferencia de 5.'.
	expectedReport add: '   Balance = 5'.
	expectedReport add: '  Balance = 5'.
	expectedReport add: ' Balance = 50'.
	reporter _ SpecialTreeReporter for: portfolio.
	
	self assert: [reporter specialReport = expectedReport]! !

!testRun: #AccountReporterTest #test01AccountSummaryForAccountWithNoTransactionsShouldJustShowBalanceZero stamp: 'fr 11/16/2020 00:46:56'!
PASSED!

!testRun: #AccountReporterTest #test02AccountSummaryShouldReflectDepositsOnAccounts stamp: 'fr 11/16/2020 00:46:56'!
PASSED!

!testRun: #AccountReporterTest #test03AccountSummaryShouldReflectWithdrawsOnAccounts stamp: 'fr 11/16/2020 00:46:56'!
PASSED!

!testRun: #AccountReporterTest #test04AccountSummaryShouldReflectOutgoingTransfersOnAccounts stamp: 'fr 11/16/2020 00:46:56'!
PASSED!

!testRun: #AccountReporterTest #test05AccountSummaryShouldReflectIncomingTransfersOnAccounts stamp: 'fr 11/16/2020 00:46:56'!
PASSED!

!testRun: #AccountReporterTest #test06AccountSummaryForPortfolioWithNoTransactionsShouldJustShowBalanceZero stamp: 'fr 11/16/2020 00:46:56'!
PASSED!

!testRun: #AccountReporterTest #test07AccountSummaryShouldReflectDepositsOnPortfoliosWithAccounts stamp: 'fr 11/16/2020 00:46:56'!
PASSED!

!testRun: #AccountReporterTest #test08AccountSummaryShouldReflectWithdrawsOnPortfoliosWithAccounts stamp: 'fr 11/16/2020 00:46:56'!
PASSED!

!testRun: #AccountReporterTest #test09AccountSummaryShouldReflectOutgoingAndIncomingTransfersOnPortfoliosWithAccounts stamp: 'fr 11/16/2020 00:46:56'!
PASSED!

!testRun: #AccountReporterTest #test10AccountSummaryShouldReflectDepositsOnPortfoliosWithPortfolios stamp: 'fr 11/16/2020 00:46:56'!
PASSED!

!testRun: #AccountReporterTest #test11AccountSummaryShouldReflectWithdrawsOnPortfoliosWithPortfolios stamp: 'fr 11/16/2020 00:46:56'!
PASSED!

!testRun: #AccountReporterTest #test12AccountSummaryShouldReflectOutgoingAndIncomingTransfersOnPortfoliosWithPortfolios stamp: 'fr 11/16/2020 00:46:56'!
PASSED!

!testRun: #AccountReporterTest #test13NetTransferForAccountWithNoTransactionsShouldBeZero stamp: 'fr 11/16/2020 00:46:56'!
PASSED!

!testRun: #AccountReporterTest #test14NetTransferForAccountWithAnOutgoingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 00:46:56'!
PASSED!

!testRun: #AccountReporterTest #test15NetTransferForAccountWithAnIncomingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 00:46:56'!
PASSED!

!testRun: #AccountReporterTest #test16NetTransferForAccountShouldNotReflectDeposits stamp: 'fr 11/16/2020 00:46:56'!
PASSED!

!testRun: #AccountReporterTest #test17NetTransferForAccountShouldNotReflectWithdraws stamp: 'fr 11/16/2020 00:46:56'!
PASSED!

!testRun: #AccountReporterTest #test18NetTransferForPortfolioWithNoTransactionsShouldBeZero stamp: 'fr 11/16/2020 00:46:56'!
PASSED!

!testRun: #AccountReporterTest #test19NetTransferForPortfolioWithAnOutgoingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 00:46:56'!
PASSED!

!testRun: #AccountReporterTest #test20NetTransferForPortfolioWithAnIncomingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 00:46:56'!
PASSED!

!testRun: #AccountReporterTest #test21NetTransferForPortfolioShouldNotReflectDeposits stamp: 'fr 11/16/2020 00:46:56'!
PASSED!

!testRun: #AccountReporterTest #test22NetTransferForPortfolioShouldNotReflectWithdraws stamp: 'fr 11/16/2020 00:46:56'!
PASSED!

!testRun: #AccountReporterTest #test23NetTransferForPortfoliosWithPortfoliosShouldReflectOutgoingAndIncomingTransfers stamp: 'fr 11/16/2020 00:46:56'!
PASSED!

!testRun: #AccountReporterTest #test24NetTransferForPortfoliosWithPortfoliosShouldNotRelfectDepositsOrWithdraws stamp: 'fr 11/16/2020 00:46:56'!
PASSED!

!testRun: #PortfolioReporterTest #test01TreeStructureReportForEmptyPortfolioWorksAsExpected stamp: 'fr 11/16/2020 00:46:56'!
PASSED!

!testRun: #PortfolioReporterTest #test02TreeStructureReportForPortfolioWithAccountsWorksAsExpected stamp: 'fr 11/16/2020 00:46:56'!
PASSED!

!testRun: #PortfolioReporterTest #test03TreeStructureReportForPortfolioWithAccountsAndPortfoliosWorksAsExpected stamp: 'fr 11/16/2020 00:46:56'!
PASSED!

!testRun: #PortfolioReporterTest #test04AccountsShouldUseADefaultNameIfNoneIsSpecified stamp: 'fr 11/16/2020 00:46:56'!
PASSED!

!testRun: #PortfolioReporterTest #test05SpecialReportForEmptyPortfolioWorksAsExpected stamp: 'fr 11/16/2020 00:46:56'!
PASSED!

!testRun: #PortfolioReporterTest #test06SpecialReportForPortfolioWithAccountsWithAnyKindOfTransactionsWorksAsExpected stamp: 'fr 11/16/2020 00:46:56'!
PASSED!

!testRun: #PortfolioReporterTest #test07SpecialReportForPortfolioWithAccountsAndPortfoliosWithAnyKindOfTransactionsWorksAsExpected stamp: 'fr 11/16/2020 00:46:56'!
PASSED!

!testRun: #PortfolioTest #test01BalanceOfPortfolioWithoutAccountsIsZero stamp: 'fr 11/16/2020 00:46:56'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithOneAccountIsAccountBalance stamp: 'fr 11/16/2020 00:46:56'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioIsCalculatedRecursivelyOnPortfolios stamp: 'fr 11/16/2020 00:46:56'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithoutAccountsHasNoRegisteredTransaction stamp: 'fr 11/16/2020 00:46:56'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredItsAccountsTransactions stamp: 'fr 11/16/2020 00:46:56'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioLooksForRegisteredTransactionsRecursively stamp: 'fr 11/16/2020 00:46:56'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioHasNoTransactionWhenHasNoAccounts stamp: 'fr 11/16/2020 00:46:56'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTransactionsIncludesAllItsAccountsTransactions stamp: 'fr 11/16/2020 00:46:56'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioTransactionsAreCalculatedRecursively stamp: 'fr 11/16/2020 00:46:56'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCanNotIncludeTheSameAccountMoreThanOnce stamp: 'fr 11/16/2020 00:46:56'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCanNotIncludeAccountOfItsPortfolios stamp: 'fr 11/16/2020 00:46:56'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioCanNotIncludeItself stamp: 'fr 11/16/2020 00:46:56'!
PASSED!

!testRun: #PortfolioTest #test13ComposedPortfolioCanNotHaveParentPortfolioAccount stamp: 'fr 11/16/2020 00:46:56'!
PASSED!

!testRun: #PortfolioTest #test14ComposedPortfolioCanNotHaveAccountOfAnyRootParentRecursively stamp: 'fr 11/16/2020 00:46:56'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotIncludeAnyOfTheComposedAccountOfPortfolioToAdd stamp: 'fr 11/16/2020 00:46:56'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'fr 11/16/2020 00:46:56'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'fr 11/16/2020 00:46:56'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'fr 11/16/2020 00:46:56'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'fr 11/16/2020 00:46:56'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'fr 11/16/2020 00:46:56'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'fr 11/16/2020 00:46:56'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'fr 11/16/2020 00:46:56'!
PASSED!

!testRun: #TransferTest #test01TransferMovesMoneyAffectingBalancesAsExpected stamp: 'fr 11/16/2020 00:46:56'!
PASSED!

!testRun: #TransferTest #test02AccountsThatParticipateInTheTransferRegisterTheCorrespondingLeg stamp: 'fr 11/16/2020 00:46:56'!
PASSED!

!testRun: #TransferTest #test03LegsKnowTheirComplementaryLegThroughTheTransfer stamp: 'fr 11/16/2020 00:46:56'!
PASSED!

!testRun: #TransferTest #test04TransferValueCanNotBeZero stamp: 'fr 11/16/2020 00:46:56'!
PASSED!

!testRun: #TransferTest #test05TransferValueCanNotBeNegative stamp: 'fr 11/16/2020 00:46:56'!
PASSED!

!testRun: #TransferTest #test06TransferCanNotMoveMoneyFromAnAccountToItself stamp: 'fr 11/16/2020 00:46:56'!
PASSED!
!TransferTest methodsFor: 'tests' stamp: 'fr 11/16/2020 00:49:06' prior: 50889453!
test01TransferMovesMoneyAffectingBalancesAsExpected

	| account anotherAccount |
	
	account _ ReceptiveAccount new.
	anotherAccount _ ReceptiveAccount new.
	
	Transfer move: 100 from: account to: anotherAccount.
	
	self assert: account balance equals: -100. 
	self assert: anotherAccount balance equals: 100! !

!testRun: #TransferTest #test01TransferMovesMoneyAffectingBalancesAsExpected stamp: 'fr 11/16/2020 00:49:07'!
PASSED!

!testRun: #TransferTest #test01TransferMovesMoneyAffectingBalancesAsExpected stamp: 'fr 11/16/2020 00:49:07'!
PASSED!

!testRun: #TransferTest #test02AccountsThatParticipateInTheTransferRegisterTheCorrespondingLeg stamp: 'fr 11/16/2020 00:49:07'!
PASSED!

!testRun: #TransferTest #test03LegsKnowTheirComplementaryLegThroughTheTransfer stamp: 'fr 11/16/2020 00:49:07'!
PASSED!

!testRun: #TransferTest #test04TransferValueCanNotBeZero stamp: 'fr 11/16/2020 00:49:07'!
PASSED!

!testRun: #TransferTest #test05TransferValueCanNotBeNegative stamp: 'fr 11/16/2020 00:49:07'!
PASSED!

!testRun: #TransferTest #test06TransferCanNotMoveMoneyFromAnAccountToItself stamp: 'fr 11/16/2020 00:49:07'!
PASSED!
!TransferTest methodsFor: 'tests' stamp: 'fr 11/16/2020 00:49:37' prior: 50890322!
test02AccountsThatParticipateInTheTransferRegisterTheCorrespondingLeg

	| account anotherAccount transfer |
	
	account _ ReceptiveAccount new.
	anotherAccount _ ReceptiveAccount new.
	
	transfer _ Transfer move: 100 from: account to: anotherAccount.
	
	self assert: (account hasRegistered: transfer withdrawLeg).
	self assert: (anotherAccount hasRegistered: transfer depositLeg)! !

!testRun: #TransferTest #test02AccountsThatParticipateInTheTransferRegisterTheCorrespondingLeg stamp: 'fr 11/16/2020 00:49:40'!
PASSED!

!testRun: #TransferTest #test01TransferMovesMoneyAffectingBalancesAsExpected stamp: 'fr 11/16/2020 00:49:40'!
PASSED!

!testRun: #TransferTest #test02AccountsThatParticipateInTheTransferRegisterTheCorrespondingLeg stamp: 'fr 11/16/2020 00:49:40'!
PASSED!

!testRun: #TransferTest #test03LegsKnowTheirComplementaryLegThroughTheTransfer stamp: 'fr 11/16/2020 00:49:40'!
PASSED!

!testRun: #TransferTest #test04TransferValueCanNotBeZero stamp: 'fr 11/16/2020 00:49:40'!
PASSED!

!testRun: #TransferTest #test05TransferValueCanNotBeNegative stamp: 'fr 11/16/2020 00:49:40'!
PASSED!

!testRun: #TransferTest #test06TransferCanNotMoveMoneyFromAnAccountToItself stamp: 'fr 11/16/2020 00:49:40'!
PASSED!
!TransferTest methodsFor: 'tests' stamp: 'fr 11/16/2020 00:49:59' prior: 50890872!
test03LegsKnowTheirComplementaryLegThroughTheTransfer

	| account anotherAccount transfer |
	
	account _ ReceptiveAccount new.
	anotherAccount _ ReceptiveAccount new.
	
	transfer _ Transfer move: 100 from: account to: anotherAccount.
	
	self assert: (transfer depositLeg isComplementedBy: transfer withdrawLeg).
	self assert: (transfer withdrawLeg isComplementedBy: transfer depositLeg)! !

!testRun: #TransferTest #test03LegsKnowTheirComplementaryLegThroughTheTransfer stamp: 'fr 11/16/2020 00:50:00'!
PASSED!

!testRun: #TransferTest #test01TransferMovesMoneyAffectingBalancesAsExpected stamp: 'fr 11/16/2020 00:50:00'!
PASSED!

!testRun: #TransferTest #test02AccountsThatParticipateInTheTransferRegisterTheCorrespondingLeg stamp: 'fr 11/16/2020 00:50:00'!
PASSED!

!testRun: #TransferTest #test03LegsKnowTheirComplementaryLegThroughTheTransfer stamp: 'fr 11/16/2020 00:50:00'!
PASSED!

!testRun: #TransferTest #test04TransferValueCanNotBeZero stamp: 'fr 11/16/2020 00:50:00'!
PASSED!

!testRun: #TransferTest #test05TransferValueCanNotBeNegative stamp: 'fr 11/16/2020 00:50:00'!
PASSED!

!testRun: #TransferTest #test06TransferCanNotMoveMoneyFromAnAccountToItself stamp: 'fr 11/16/2020 00:50:00'!
PASSED!
!TransferTest methodsFor: 'setup' stamp: 'fr 11/16/2020 00:51:04' overrides: 16927572!
setUp

	! !

!methodRemoval: TransferTest #setUp stamp: 'fr 11/16/2020 00:51:30'!
setUp

	!
!TransferTest methodsFor: 'tests' stamp: 'fr 11/16/2020 00:51:53' prior: 50892079!
test01TransferMovesMoneyAffectingBalancesAsExpected

	| account1 anotherAccount |
	
	account1 _ ReceptiveAccount new.
	anotherAccount _ ReceptiveAccount new.
	
	Transfer move: 100 from: account1 to: anotherAccount.
	
	self assert: account1 balance equals: -100. 
	self assert: anotherAccount balance equals: 100! !
!TransferTest methodsFor: 'tests' stamp: 'fr 11/16/2020 00:51:56' prior: 50892205!
test01TransferMovesMoneyAffectingBalancesAsExpected

	| account1 anotherAccount1 |
	
	account1 _ ReceptiveAccount new.
	anotherAccount1 _ ReceptiveAccount new.
	
	Transfer move: 100 from: account1 to: anotherAccount1.
	
	self assert: account1 balance equals: -100. 
	self assert: anotherAccount1 balance equals: 100! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'fr 11/16/2020 00:52:05' prior: 50892218!
test01TransferMovesMoneyAffectingBalancesAsExpected

	|  anotherAccount1 |
	
	account1 _ ReceptiveAccount new.
	anotherAccount1 _ ReceptiveAccount new.
	
	Transfer move: 100 from: account1 to: anotherAccount1.
	
	self assert: account1 balance equals: -100. 
	self assert: anotherAccount1 balance equals: 100! !

!classDefinition: #TransferTest category: 'Portfolio-Part-II-Exercise' stamp: 'fr 11/16/2020 00:52:05'!
TestCase subclass: #TransferTest
	instanceVariableNames: 'account1'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Part-II-Exercise'!
!TransferTest methodsFor: 'as yet unclassified' stamp: 'fr 11/16/2020 00:52:08' prior: 50892231!
test01TransferMovesMoneyAffectingBalancesAsExpected

	 
	
	account1 _ ReceptiveAccount new.
	anotherAccount1 _ ReceptiveAccount new.
	
	Transfer move: 100 from: account1 to: anotherAccount1.
	
	self assert: account1 balance equals: -100. 
	self assert: anotherAccount1 balance equals: 100! !

!classDefinition: #TransferTest category: 'Portfolio-Part-II-Exercise' stamp: 'fr 11/16/2020 00:52:08'!
TestCase subclass: #TransferTest
	instanceVariableNames: 'account1 anotherAccount1'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Part-II-Exercise'!
!TransferTest methodsFor: 'tests' stamp: 'fr 11/16/2020 00:52:16' prior: 50892252!
test01TransferMovesMoneyAffectingBalancesAsExpected

	 
	account1 _ ReceptiveAccount new.
	anotherAccount1 _ ReceptiveAccount new.
	
	Transfer move: 100 from: account1 to: anotherAccount1.
	
	self assert: account1 balance equals: -100. 
	self assert: anotherAccount1 balance equals: 100! !
!TransferTest methodsFor: 'tests' stamp: 'fr 11/16/2020 00:52:36'!
createNewAccounts

	account1 _ ReceptiveAccount new.
	anotherAccount1 _ ReceptiveAccount new! !
!TransferTest methodsFor: 'tests' stamp: 'fr 11/16/2020 00:52:36' prior: 50892273!
test01TransferMovesMoneyAffectingBalancesAsExpected

	 
	self createNewAccounts.
	
	Transfer move: 100 from: account1 to: anotherAccount1.
	
	self assert: account1 balance equals: -100. 
	self assert: anotherAccount1 balance equals: 100! !
!TransferTest methodsFor: 'tests' stamp: 'fr 11/16/2020 00:52:41' prior: 50892291!
test01TransferMovesMoneyAffectingBalancesAsExpected

	self createNewAccounts.
	
	Transfer move: 100 from: account1 to: anotherAccount1.
	
	self assert: account1 balance equals: -100. 
	self assert: anotherAccount1 balance equals: 100! !
!TransferTest methodsFor: 'tests' stamp: 'fr 11/16/2020 00:53:06' prior: 50892117!
test02AccountsThatParticipateInTheTransferRegisterTheCorrespondingLeg

	| account anotherAccount transfer |
	
	self createNewAccounts.
	
	transfer _ Transfer move: 100 from: account to: anotherAccount.
	
	self assert: (account hasRegistered: transfer withdrawLeg).
	self assert: (anotherAccount hasRegistered: transfer depositLeg)! !
!TransferTest methodsFor: 'tests' stamp: 'fr 11/16/2020 00:53:25' prior: 50892312!
test02AccountsThatParticipateInTheTransferRegisterTheCorrespondingLeg

	| transfer |
	
	self createNewAccounts.
	
	transfer _ Transfer move: 100 from: account1 to: anotherAccount1.
	
	self assert: (account1 hasRegistered: transfer withdrawLeg).
	self assert: (anotherAccount1 hasRegistered: transfer depositLeg)! !

!testRun: #TransferTest #test02AccountsThatParticipateInTheTransferRegisterTheCorrespondingLeg stamp: 'fr 11/16/2020 00:53:30'!
PASSED!

!testRun: #TransferTest #test01TransferMovesMoneyAffectingBalancesAsExpected stamp: 'fr 11/16/2020 00:53:30'!
PASSED!

!testRun: #TransferTest #test02AccountsThatParticipateInTheTransferRegisterTheCorrespondingLeg stamp: 'fr 11/16/2020 00:53:30'!
PASSED!

!testRun: #TransferTest #test03LegsKnowTheirComplementaryLegThroughTheTransfer stamp: 'fr 11/16/2020 00:53:30'!
PASSED!

!testRun: #TransferTest #test04TransferValueCanNotBeZero stamp: 'fr 11/16/2020 00:53:30'!
PASSED!

!testRun: #TransferTest #test05TransferValueCanNotBeNegative stamp: 'fr 11/16/2020 00:53:30'!
PASSED!

!testRun: #TransferTest #test06TransferCanNotMoveMoneyFromAnAccountToItself stamp: 'fr 11/16/2020 00:53:30'!
PASSED!
!TransferTest methodsFor: 'tests' stamp: 'fr 11/16/2020 00:53:52' prior: 50892158!
test03LegsKnowTheirComplementaryLegThroughTheTransfer

	| transfer |
	
	self createNewAccounts.

	transfer _ Transfer move: 100 from: account1 to: anotherAccount1.
	
	self assert: (transfer depositLeg isComplementedBy: transfer withdrawLeg).
	self assert: (transfer withdrawLeg isComplementedBy: transfer depositLeg)! !
!TransferTest methodsFor: 'tests' stamp: 'fr 11/16/2020 00:54:11' prior: 50889665!
test04TransferValueCanNotBeZero

	self createNewAccounts.
	
	self  should: [Transfer move: 0 from: account1 to: anotherAccount1] 
		raise:  Error - MessageNotUnderstood 
		withMessageText: Transfer invalidTransferAmountErrorDescription! !

!testRun: #TransferTest #test04TransferValueCanNotBeZero stamp: 'fr 11/16/2020 00:54:12'!
PASSED!

!testRun: #TransferTest #test01TransferMovesMoneyAffectingBalancesAsExpected stamp: 'fr 11/16/2020 00:54:12'!
PASSED!

!testRun: #TransferTest #test02AccountsThatParticipateInTheTransferRegisterTheCorrespondingLeg stamp: 'fr 11/16/2020 00:54:12'!
PASSED!

!testRun: #TransferTest #test03LegsKnowTheirComplementaryLegThroughTheTransfer stamp: 'fr 11/16/2020 00:54:12'!
PASSED!

!testRun: #TransferTest #test04TransferValueCanNotBeZero stamp: 'fr 11/16/2020 00:54:12'!
PASSED!

!testRun: #TransferTest #test05TransferValueCanNotBeNegative stamp: 'fr 11/16/2020 00:54:12'!
PASSED!

!testRun: #TransferTest #test06TransferCanNotMoveMoneyFromAnAccountToItself stamp: 'fr 11/16/2020 00:54:12'!
PASSED!
!TransferTest methodsFor: 'tests' stamp: 'fr 11/16/2020 00:54:24' prior: 50889689!
test05TransferValueCanNotBeNegative

	self createNewAccounts.

	self  should: [Transfer move: -1 from: account1 to: anotherAccount1] 
		raise:  Error - MessageNotUnderstood 
		withMessageText: Transfer invalidTransferAmountErrorDescription! !
!TransferTest methodsFor: 'tests' stamp: 'fr 11/16/2020 00:55:34' prior: 50889713!
test06TransferCanNotMoveMoneyFromAnAccountToItself
	
	account1 _ ReceptiveAccount new.
	
	self  should: [Transfer move: 10 from: account1 to: account1] 
		raise:  Error - MessageNotUnderstood 
		withMessageText: Transfer canNotTransferToItselfErrorDescription! !

!testRun: #TransferTest #test06TransferCanNotMoveMoneyFromAnAccountToItself stamp: 'fr 11/16/2020 00:55:35'!
PASSED!

!testRun: #TransferTest #test01TransferMovesMoneyAffectingBalancesAsExpected stamp: 'fr 11/16/2020 00:55:35'!
PASSED!

!testRun: #TransferTest #test02AccountsThatParticipateInTheTransferRegisterTheCorrespondingLeg stamp: 'fr 11/16/2020 00:55:35'!
PASSED!

!testRun: #TransferTest #test03LegsKnowTheirComplementaryLegThroughTheTransfer stamp: 'fr 11/16/2020 00:55:35'!
PASSED!

!testRun: #TransferTest #test04TransferValueCanNotBeZero stamp: 'fr 11/16/2020 00:55:35'!
PASSED!

!testRun: #TransferTest #test05TransferValueCanNotBeNegative stamp: 'fr 11/16/2020 00:55:35'!
PASSED!

!testRun: #TransferTest #test06TransferCanNotMoveMoneyFromAnAccountToItself stamp: 'fr 11/16/2020 00:55:35'!
PASSED!

!classDefinition: #TransferTest category: 'Portfolio-Part-II-Exercise' stamp: 'fr 11/16/2020 00:55:40'!
TestCase subclass: #TransferTest
	instanceVariableNames: 'account anotherAccount1'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Part-II-Exercise'!
!TransferTest methodsFor: 'as yet unclassified' stamp: 'fr 11/16/2020 00:55:40' prior: 50892365!
test03LegsKnowTheirComplementaryLegThroughTheTransfer

	| transfer |
	
	self createNewAccounts.

	transfer _ Transfer move: 100 from: account to: anotherAccount1.
	
	self assert: (transfer depositLeg isComplementedBy: transfer withdrawLeg).
	self assert: (transfer withdrawLeg isComplementedBy: transfer depositLeg)! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'fr 11/16/2020 00:55:40' prior: 50892378!
test04TransferValueCanNotBeZero

	self createNewAccounts.
	
	self  should: [Transfer move: 0 from: account to: anotherAccount1] 
		raise:  Error - MessageNotUnderstood 
		withMessageText: Transfer invalidTransferAmountErrorDescription! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'fr 11/16/2020 00:55:40' prior: 50892302!
test01TransferMovesMoneyAffectingBalancesAsExpected

	self createNewAccounts.
	
	Transfer move: 100 from: account to: anotherAccount1.
	
	self assert: account balance equals: -100. 
	self assert: anotherAccount1 balance equals: 100! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'fr 11/16/2020 00:55:40' prior: 50892413!
test05TransferValueCanNotBeNegative

	self createNewAccounts.

	self  should: [Transfer move: -1 from: account to: anotherAccount1] 
		raise:  Error - MessageNotUnderstood 
		withMessageText: Transfer invalidTransferAmountErrorDescription! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'fr 11/16/2020 00:55:40' prior: 50892285!
createNewAccounts

	account _ ReceptiveAccount new.
	anotherAccount1 _ ReceptiveAccount new! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'fr 11/16/2020 00:55:40' prior: 50892326!
test02AccountsThatParticipateInTheTransferRegisterTheCorrespondingLeg

	| transfer |
	
	self createNewAccounts.
	
	transfer _ Transfer move: 100 from: account to: anotherAccount1.
	
	self assert: (account hasRegistered: transfer withdrawLeg).
	self assert: (anotherAccount1 hasRegistered: transfer depositLeg)! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'fr 11/16/2020 00:55:40' prior: 50892424!
test06TransferCanNotMoveMoneyFromAnAccountToItself
	
	account _ ReceptiveAccount new.
	
	self  should: [Transfer move: 10 from: account to: account] 
		raise:  Error - MessageNotUnderstood 
		withMessageText: Transfer canNotTransferToItselfErrorDescription! !

!classDefinition: #TransferTest category: 'Portfolio-Part-II-Exercise' stamp: 'fr 11/16/2020 00:55:42'!
TestCase subclass: #TransferTest
	instanceVariableNames: 'account anotherAccount'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Part-II-Exercise'!
!TransferTest methodsFor: 'as yet unclassified' stamp: 'fr 11/16/2020 00:55:42' prior: 50892483!
test04TransferValueCanNotBeZero

	self createNewAccounts.
	
	self  should: [Transfer move: 0 from: account to: anotherAccount] 
		raise:  Error - MessageNotUnderstood 
		withMessageText: Transfer invalidTransferAmountErrorDescription! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'fr 11/16/2020 00:55:42' prior: 50892522!
test02AccountsThatParticipateInTheTransferRegisterTheCorrespondingLeg

	| transfer |
	
	self createNewAccounts.
	
	transfer _ Transfer move: 100 from: account to: anotherAccount.
	
	self assert: (account hasRegistered: transfer withdrawLeg).
	self assert: (anotherAccount hasRegistered: transfer depositLeg)! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'fr 11/16/2020 00:55:42' prior: 50892470!
test03LegsKnowTheirComplementaryLegThroughTheTransfer

	| transfer |
	
	self createNewAccounts.

	transfer _ Transfer move: 100 from: account to: anotherAccount.
	
	self assert: (transfer depositLeg isComplementedBy: transfer withdrawLeg).
	self assert: (transfer withdrawLeg isComplementedBy: transfer depositLeg)! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'fr 11/16/2020 00:55:42' prior: 50892516!
createNewAccounts

	account _ ReceptiveAccount new.
	anotherAccount _ ReceptiveAccount new! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'fr 11/16/2020 00:55:42' prior: 50892494!
test01TransferMovesMoneyAffectingBalancesAsExpected

	self createNewAccounts.
	
	Transfer move: 100 from: account to: anotherAccount.
	
	self assert: account balance equals: -100. 
	self assert: anotherAccount balance equals: 100! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'fr 11/16/2020 00:55:42' prior: 50892505!
test05TransferValueCanNotBeNegative

	self createNewAccounts.

	self  should: [Transfer move: -1 from: account to: anotherAccount] 
		raise:  Error - MessageNotUnderstood 
		withMessageText: Transfer invalidTransferAmountErrorDescription! !
!TransferTest methodsFor: 'tests' stamp: 'fr 11/16/2020 00:55:56'!
createNewAccount

	^ account _ ReceptiveAccount new! !
!TransferTest methodsFor: 'tests' stamp: 'fr 11/16/2020 00:55:56' prior: 50892592!
createNewAccounts

	self createNewAccount.
	anotherAccount _ ReceptiveAccount new! !
!TransferTest methodsFor: 'tests' stamp: 'fr 11/16/2020 00:56:28' prior: 50892566!
test02AccountsThatParticipateInTheTransferRegisterTheCorrespondingLeg

	| transfer1 |
	
	self createNewAccounts.
	
	transfer1 _ Transfer move: 100 from: account to: anotherAccount.
	
	self assert: (account hasRegistered: transfer1 withdrawLeg).
	self assert: (anotherAccount hasRegistered: transfer1 depositLeg)! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'fr 11/16/2020 00:56:32' prior: 50892630!
test02AccountsThatParticipateInTheTransferRegisterTheCorrespondingLeg

	 
	
	self createNewAccounts.
	
	transfer1 _ Transfer move: 100 from: account to: anotherAccount.
	
	self assert: (account hasRegistered: transfer1 withdrawLeg).
	self assert: (anotherAccount hasRegistered: transfer1 depositLeg)! !

!classDefinition: #TransferTest category: 'Portfolio-Part-II-Exercise' stamp: 'fr 11/16/2020 00:56:32'!
TestCase subclass: #TransferTest
	instanceVariableNames: 'account anotherAccount transfer1'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Part-II-Exercise'!
!TransferTest methodsFor: 'tests' stamp: 'fr 11/16/2020 00:56:36' prior: 50892643!
test02AccountsThatParticipateInTheTransferRegisterTheCorrespondingLeg


	self createNewAccounts.
	
	transfer1 _ Transfer move: 100 from: account to: anotherAccount.
	
	self assert: (account hasRegistered: transfer1 withdrawLeg).
	self assert: (anotherAccount hasRegistered: transfer1 depositLeg)! !

!testRun: #TransferTest #test02AccountsThatParticipateInTheTransferRegisterTheCorrespondingLeg stamp: 'fr 11/16/2020 00:56:38'!
PASSED!

!testRun: #TransferTest #test01TransferMovesMoneyAffectingBalancesAsExpected stamp: 'fr 11/16/2020 00:56:38'!
PASSED!

!testRun: #TransferTest #test02AccountsThatParticipateInTheTransferRegisterTheCorrespondingLeg stamp: 'fr 11/16/2020 00:56:38'!
PASSED!

!testRun: #TransferTest #test03LegsKnowTheirComplementaryLegThroughTheTransfer stamp: 'fr 11/16/2020 00:56:38'!
PASSED!

!testRun: #TransferTest #test04TransferValueCanNotBeZero stamp: 'fr 11/16/2020 00:56:38'!
PASSED!

!testRun: #TransferTest #test05TransferValueCanNotBeNegative stamp: 'fr 11/16/2020 00:56:38'!
PASSED!

!testRun: #TransferTest #test06TransferCanNotMoveMoneyFromAnAccountToItself stamp: 'fr 11/16/2020 00:56:38'!
PASSED!
!TransferTest methodsFor: 'tests' stamp: 'fr 11/16/2020 00:56:41' prior: 50892664!
test02AccountsThatParticipateInTheTransferRegisterTheCorrespondingLeg

	self createNewAccounts.
	
	transfer1 _ Transfer move: 100 from: account to: anotherAccount.
	
	self assert: (account hasRegistered: transfer1 withdrawLeg).
	self assert: (anotherAccount hasRegistered: transfer1 depositLeg)! !
!TransferTest methodsFor: 'tests' stamp: 'fr 11/16/2020 00:56:57'!
transfer100FromAccountToAnotherAccount

	^ transfer1 _ Transfer move: 100 from: account to: anotherAccount! !
!TransferTest methodsFor: 'tests' stamp: 'fr 11/16/2020 00:56:57' prior: 50892702!
test02AccountsThatParticipateInTheTransferRegisterTheCorrespondingLeg

	self createNewAccounts.
	
	self transfer100FromAccountToAnotherAccount.
	
	self assert: (account hasRegistered: transfer1 withdrawLeg).
	self assert: (anotherAccount hasRegistered: transfer1 depositLeg)! !
!TransferTest methodsFor: 'tests' stamp: 'fr 11/16/2020 00:57:19' prior: 50892579!
test03LegsKnowTheirComplementaryLegThroughTheTransfer

	
	self createNewAccounts.

	self transfer100FromAccountToAnotherAccount.
	
	self assert: (transfer1 depositLeg isComplementedBy: transfer1 withdrawLeg).
	self assert: (transfer1 withdrawLeg isComplementedBy: transfer1 depositLeg)! !

!testRun: #TransferTest #test03LegsKnowTheirComplementaryLegThroughTheTransfer stamp: 'fr 11/16/2020 00:57:20'!
PASSED!

!testRun: #TransferTest #test01TransferMovesMoneyAffectingBalancesAsExpected stamp: 'fr 11/16/2020 00:57:20'!
PASSED!

!testRun: #TransferTest #test02AccountsThatParticipateInTheTransferRegisterTheCorrespondingLeg stamp: 'fr 11/16/2020 00:57:20'!
PASSED!

!testRun: #TransferTest #test03LegsKnowTheirComplementaryLegThroughTheTransfer stamp: 'fr 11/16/2020 00:57:20'!
PASSED!

!testRun: #TransferTest #test04TransferValueCanNotBeZero stamp: 'fr 11/16/2020 00:57:20'!
PASSED!

!testRun: #TransferTest #test05TransferValueCanNotBeNegative stamp: 'fr 11/16/2020 00:57:20'!
PASSED!

!testRun: #TransferTest #test06TransferCanNotMoveMoneyFromAnAccountToItself stamp: 'fr 11/16/2020 00:57:20'!
PASSED!
!TransferTest methodsFor: 'tests' stamp: 'fr 11/16/2020 00:58:11' prior: 50892598!
test01TransferMovesMoneyAffectingBalancesAsExpected

	self createNewAccounts.
	
	self transfer100FromAccountToAnotherAccount.
	
	self assert: account balance equals: -100. 
	self assert: anotherAccount balance equals: 100! !

account _ ReceptiveAccount new.

anotherAccount _ ReceptiveAccount new.!

Transfer move: 100 from: account to: anotherAccount. !
!TransferTest methodsFor: 'tests' stamp: 'fr 11/16/2020 00:59:29' prior: 50892714!
transfer100FromAccountToAnotherAccount

	^Transfer move: 100 from: account to: anotherAccount! !
!TransferTest methodsFor: 'tests' stamp: 'fr 11/16/2020 00:59:35' prior: 50892721!
test02AccountsThatParticipateInTheTransferRegisterTheCorrespondingLeg

	self createNewAccounts.
	
	transfer1 _ self transfer100FromAccountToAnotherAccount.
	
	self assert: (account hasRegistered: transfer1 withdrawLeg).
	self assert: (anotherAccount hasRegistered: transfer1 depositLeg)! !
!TransferTest methodsFor: 'tests' stamp: 'fr 11/16/2020 00:59:44' prior: 50892733!
test03LegsKnowTheirComplementaryLegThroughTheTransfer

	self createNewAccounts.

	transfer1 _ self transfer100FromAccountToAnotherAccount.
	
	self assert: (transfer1 depositLeg isComplementedBy: transfer1 withdrawLeg).
	self assert: (transfer1 withdrawLeg isComplementedBy: transfer1 depositLeg)! !

!testRun: #TransferTest #test03LegsKnowTheirComplementaryLegThroughTheTransfer stamp: 'fr 11/16/2020 00:59:44'!
PASSED!

!testRun: #TransferTest #test01TransferMovesMoneyAffectingBalancesAsExpected stamp: 'fr 11/16/2020 00:59:44'!
PASSED!

!testRun: #TransferTest #test02AccountsThatParticipateInTheTransferRegisterTheCorrespondingLeg stamp: 'fr 11/16/2020 00:59:44'!
PASSED!

!testRun: #TransferTest #test03LegsKnowTheirComplementaryLegThroughTheTransfer stamp: 'fr 11/16/2020 00:59:44'!
PASSED!

!testRun: #TransferTest #test04TransferValueCanNotBeZero stamp: 'fr 11/16/2020 00:59:44'!
PASSED!

!testRun: #TransferTest #test05TransferValueCanNotBeNegative stamp: 'fr 11/16/2020 00:59:44'!
PASSED!

!testRun: #TransferTest #test06TransferCanNotMoveMoneyFromAnAccountToItself stamp: 'fr 11/16/2020 00:59:44'!
PASSED!
!TransferTest methodsFor: 'tests' stamp: 'fr 11/16/2020 01:00:09'!
transferAndStore100FromAccountToAnotherAccount

	^ transfer1 _ self transfer100FromAccountToAnotherAccount! !
!TransferTest methodsFor: 'tests' stamp: 'fr 11/16/2020 01:00:10' prior: 50892803!
test03LegsKnowTheirComplementaryLegThroughTheTransfer

	self createNewAccounts.

	self transferAndStore100FromAccountToAnotherAccount.
	
	self assert: (transfer1 depositLeg isComplementedBy: transfer1 withdrawLeg).
	self assert: (transfer1 withdrawLeg isComplementedBy: transfer1 depositLeg)! !
!TransferTest methodsFor: 'tests' stamp: 'fr 11/16/2020 01:00:19' prior: 50892791!
test02AccountsThatParticipateInTheTransferRegisterTheCorrespondingLeg

	self createNewAccounts.
	
	self transferAndStore100FromAccountToAnotherAccount.
	
	self assert: (account hasRegistered: transfer1 withdrawLeg).
	self assert: (anotherAccount hasRegistered: transfer1 depositLeg)! !
!TransferTest methodsFor: 'tests' stamp: 'fr 11/16/2020 01:00:44' prior: 50892535!
test06TransferCanNotMoveMoneyFromAnAccountToItself
	
	self createNewAccount.
		
	self  should: [Transfer move: 10 from: account to: account] 
		raise:  Error - MessageNotUnderstood 
		withMessageText: Transfer canNotTransferToItselfErrorDescription! !

!testRun: #TransferTest #test06TransferCanNotMoveMoneyFromAnAccountToItself stamp: 'fr 11/16/2020 01:00:45'!
PASSED!

!testRun: #TransferTest #test01TransferMovesMoneyAffectingBalancesAsExpected stamp: 'fr 11/16/2020 01:00:45'!
PASSED!

!testRun: #TransferTest #test02AccountsThatParticipateInTheTransferRegisterTheCorrespondingLeg stamp: 'fr 11/16/2020 01:00:45'!
PASSED!

!testRun: #TransferTest #test03LegsKnowTheirComplementaryLegThroughTheTransfer stamp: 'fr 11/16/2020 01:00:45'!
PASSED!

!testRun: #TransferTest #test04TransferValueCanNotBeZero stamp: 'fr 11/16/2020 01:00:45'!
PASSED!

!testRun: #TransferTest #test05TransferValueCanNotBeNegative stamp: 'fr 11/16/2020 01:00:45'!
PASSED!

!testRun: #TransferTest #test06TransferCanNotMoveMoneyFromAnAccountToItself stamp: 'fr 11/16/2020 01:00:45'!
PASSED!

!classDefinition: #TransferTest category: 'Portfolio-Part-II-Exercise' stamp: 'fr 11/16/2020 01:00:53'!
TestCase subclass: #TransferTest
	instanceVariableNames: 'account anotherAccount transfer'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Part-II-Exercise'!
!TransferTest methodsFor: 'as yet unclassified' stamp: 'fr 11/16/2020 01:00:53' prior: 50892840!
transferAndStore100FromAccountToAnotherAccount

	^ transfer _ self transfer100FromAccountToAnotherAccount! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'fr 11/16/2020 01:00:53' prior: 50892859!
test02AccountsThatParticipateInTheTransferRegisterTheCorrespondingLeg

	self createNewAccounts.
	
	self transferAndStore100FromAccountToAnotherAccount.
	
	self assert: (account hasRegistered: transfer withdrawLeg).
	self assert: (anotherAccount hasRegistered: transfer depositLeg)! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'fr 11/16/2020 01:00:53' prior: 50892847!
test03LegsKnowTheirComplementaryLegThroughTheTransfer

	self createNewAccounts.

	self transferAndStore100FromAccountToAnotherAccount.
	
	self assert: (transfer depositLeg isComplementedBy: transfer withdrawLeg).
	self assert: (transfer withdrawLeg isComplementedBy: transfer depositLeg)! !
!TransferTest methodsFor: 'tests' stamp: 'fr 11/16/2020 01:01:56'!
createAccountsTransferAndStoreAndAssert: aBlockToAssert and: anotherBlockToAssert

	self createNewAccounts.
	
	self transferAndStore100FromAccountToAnotherAccount.
	
	aBlockToAssert value.
	anotherBlockToAssert value! !
!TransferTest methodsFor: 'tests' stamp: 'fr 11/16/2020 01:02:43'!
createAccountsTransfer: aTransferBlock assert: aBlockToAssert and: anotherBlockToAssert

	self createNewAccounts.
	
	self transferAndStore100FromAccountToAnotherAccount.
	
	aBlockToAssert value.
	anotherBlockToAssert value! !

!methodRemoval: TransferTest #createAccountsTransferAndStoreAndAssert:and: stamp: 'fr 11/16/2020 01:02:45'!
createAccountsTransferAndStoreAndAssert: aBlockToAssert and: anotherBlockToAssert

	self createNewAccounts.
	
	self transferAndStore100FromAccountToAnotherAccount.
	
	aBlockToAssert value.
	anotherBlockToAssert value!
!TransferTest methodsFor: 'tests' stamp: 'fr 11/16/2020 01:03:00' prior: 50892957!
createAccountsTransfer: aTransferBlock assert: aBlockToAssert and: anotherBlockToAssert

	self createNewAccounts.
	
	aTransferBlock value: self transferAndStore100FromAccountToAnotherAccount.
	
	aBlockToAssert value.
	anotherBlockToAssert value! !
!TransferTest methodsFor: 'tests' stamp: 'fr 11/16/2020 01:03:42' prior: 50892771!
test01TransferMovesMoneyAffectingBalancesAsExpected

	self createNewAccounts.
	
	self transfer100FromAccountToAnotherAccount.
	
	
	self createAccountsTransfer: [:aTransfer | ] assert: [	self assert: account balance equals: -100] and: [	self assert: anotherAccount balance equals: 100]
! !
!TransferTest methodsFor: 'tests' stamp: 'fr 11/16/2020 01:03:54' prior: 50892988!
test01TransferMovesMoneyAffectingBalancesAsExpected
	
	self  createAccountsTransfer: [:aTransfer | ] 
		assert: [	self assert: account balance equals: -100] 
		and: [	self assert: anotherAccount balance equals: 100]
! !

!testRun: #TransferTest #test01TransferMovesMoneyAffectingBalancesAsExpected stamp: 'fr 11/16/2020 01:03:54'!
PASSED!

!testRun: #TransferTest #test01TransferMovesMoneyAffectingBalancesAsExpected stamp: 'fr 11/16/2020 01:03:54'!
PASSED!

!testRun: #TransferTest #test02AccountsThatParticipateInTheTransferRegisterTheCorrespondingLeg stamp: 'fr 11/16/2020 01:03:54'!
PASSED!

!testRun: #TransferTest #test03LegsKnowTheirComplementaryLegThroughTheTransfer stamp: 'fr 11/16/2020 01:03:54'!
PASSED!

!testRun: #TransferTest #test04TransferValueCanNotBeZero stamp: 'fr 11/16/2020 01:03:54'!
PASSED!

!testRun: #TransferTest #test05TransferValueCanNotBeNegative stamp: 'fr 11/16/2020 01:03:54'!
PASSED!

!testRun: #TransferTest #test06TransferCanNotMoveMoneyFromAnAccountToItself stamp: 'fr 11/16/2020 01:03:54'!
PASSED!
!TransferTest methodsFor: 'tests' stamp: 'fr 11/16/2020 01:04:19' prior: 50892924!
test02AccountsThatParticipateInTheTransferRegisterTheCorrespondingLeg

	self  createAccountsTransfer: [:aTransfer | transfer _ aTransfer] 
		assert: [	self assert: account balance equals: -100] 
		and: [	self assert: anotherAccount balance equals: 100]! !

!testRun: #TransferTest #test02AccountsThatParticipateInTheTransferRegisterTheCorrespondingLeg stamp: 'fr 11/16/2020 01:04:20'!
PASSED!

!testRun: #TransferTest #test01TransferMovesMoneyAffectingBalancesAsExpected stamp: 'fr 11/16/2020 01:04:20'!
PASSED!

!testRun: #TransferTest #test02AccountsThatParticipateInTheTransferRegisterTheCorrespondingLeg stamp: 'fr 11/16/2020 01:04:20'!
PASSED!

!testRun: #TransferTest #test03LegsKnowTheirComplementaryLegThroughTheTransfer stamp: 'fr 11/16/2020 01:04:20'!
PASSED!

!testRun: #TransferTest #test04TransferValueCanNotBeZero stamp: 'fr 11/16/2020 01:04:20'!
PASSED!

!testRun: #TransferTest #test05TransferValueCanNotBeNegative stamp: 'fr 11/16/2020 01:04:20'!
PASSED!

!testRun: #TransferTest #test06TransferCanNotMoveMoneyFromAnAccountToItself stamp: 'fr 11/16/2020 01:04:20'!
PASSED!
!TransferTest methodsFor: 'tests' stamp: 'fr 11/16/2020 01:04:41' prior: 50892977!
createAccountsTransfer: aTransferBlock assert: aBlockToAssert and: anotherBlockToAssert

	self createNewAccounts.
	
	aTransferBlock value: self transfer100FromAccountToAnotherAccount.
	
	aBlockToAssert value.
	anotherBlockToAssert value! !

!testRun: #TransferTest #test01TransferMovesMoneyAffectingBalancesAsExpected stamp: 'fr 11/16/2020 01:04:42'!
PASSED!

!testRun: #TransferTest #test02AccountsThatParticipateInTheTransferRegisterTheCorrespondingLeg stamp: 'fr 11/16/2020 01:04:42'!
PASSED!

!testRun: #TransferTest #test03LegsKnowTheirComplementaryLegThroughTheTransfer stamp: 'fr 11/16/2020 01:04:42'!
PASSED!

!testRun: #TransferTest #test04TransferValueCanNotBeZero stamp: 'fr 11/16/2020 01:04:42'!
PASSED!

!testRun: #TransferTest #test05TransferValueCanNotBeNegative stamp: 'fr 11/16/2020 01:04:42'!
PASSED!

!testRun: #TransferTest #test06TransferCanNotMoveMoneyFromAnAccountToItself stamp: 'fr 11/16/2020 01:04:42'!
PASSED!
!TransferTest methodsFor: 'tests' stamp: 'fr 11/16/2020 01:04:58' prior: 50892936!
test03LegsKnowTheirComplementaryLegThroughTheTransfer

	self  createAccountsTransfer: [:aTransfer | ] 
		assert: [	self assert: account balance equals: -100] 
		and: [	self assert: anotherAccount balance equals: 100]! !
!TransferTest methodsFor: 'tests' stamp: 'fr 11/16/2020 01:00:53' prior: 50893035!
test02AccountsThatParticipateInTheTransferRegisterTheCorrespondingLeg

	self createNewAccounts.
	
	self transferAndStore100FromAccountToAnotherAccount.
	
	self assert: (account hasRegistered: transfer withdrawLeg).
	self assert: (anotherAccount hasRegistered: transfer depositLeg)! !
!TransferTest methodsFor: 'tests' stamp: 'fr 11/16/2020 01:00:53' prior: 50893104!
test03LegsKnowTheirComplementaryLegThroughTheTransfer

	self createNewAccounts.

	self transferAndStore100FromAccountToAnotherAccount.
	
	self assert: (transfer depositLeg isComplementedBy: transfer withdrawLeg).
	self assert: (transfer withdrawLeg isComplementedBy: transfer depositLeg)! !
!TransferTest methodsFor: 'tests' stamp: 'fr 11/16/2020 01:05:39' prior: 50893114!
test02AccountsThatParticipateInTheTransferRegisterTheCorrespondingLeg

	self createNewAccounts.
	
	self transferAndStore100FromAccountToAnotherAccount.
	
	self assert: (account hasRegistered: transfer withdrawLeg).
	self assert: (anotherAccount hasRegistered: transfer depositLeg).
	
	self  createAccountsTransfer: [:aTransfer | transfer _ aTransfer] 
		assert: [	self assert: account balance equals: -100] 
		and: [	self assert: anotherAccount balance equals: 100]! !
!TransferTest methodsFor: 'tests' stamp: 'fr 11/16/2020 01:05:58' prior: 50893138!
test02AccountsThatParticipateInTheTransferRegisterTheCorrespondingLeg
	
	self  createAccountsTransfer: [:aTransfer | transfer _ aTransfer] 
		assert: [	self assert: (account hasRegistered: transfer withdrawLeg)] 
		and: [	self assert: (anotherAccount hasRegistered: transfer depositLeg)]! !

!testRun: #TransferTest #test02AccountsThatParticipateInTheTransferRegisterTheCorrespondingLeg stamp: 'fr 11/16/2020 01:05:59'!
PASSED!

!testRun: #TransferTest #test01TransferMovesMoneyAffectingBalancesAsExpected stamp: 'fr 11/16/2020 01:05:59'!
PASSED!

!testRun: #TransferTest #test02AccountsThatParticipateInTheTransferRegisterTheCorrespondingLeg stamp: 'fr 11/16/2020 01:05:59'!
PASSED!

!testRun: #TransferTest #test03LegsKnowTheirComplementaryLegThroughTheTransfer stamp: 'fr 11/16/2020 01:05:59'!
PASSED!

!testRun: #TransferTest #test04TransferValueCanNotBeZero stamp: 'fr 11/16/2020 01:05:59'!
PASSED!

!testRun: #TransferTest #test05TransferValueCanNotBeNegative stamp: 'fr 11/16/2020 01:05:59'!
PASSED!

!testRun: #TransferTest #test06TransferCanNotMoveMoneyFromAnAccountToItself stamp: 'fr 11/16/2020 01:05:59'!
PASSED!
!TransferTest methodsFor: 'tests' stamp: 'fr 11/16/2020 01:06:12' prior: 50893126!
test03LegsKnowTheirComplementaryLegThroughTheTransfer

	self createNewAccounts.

	self transferAndStore100FromAccountToAnotherAccount.
	
	self assert: (transfer depositLeg isComplementedBy: transfer withdrawLeg).
	self assert: (transfer withdrawLeg isComplementedBy: transfer depositLeg).
	
		self  createAccountsTransfer: [:aTransfer | transfer _ aTransfer] 
		assert: [	self assert: (account hasRegistered: transfer withdrawLeg)] 
		and: [	self assert: (anotherAccount hasRegistered: transfer depositLeg)]! !
!TransferTest methodsFor: 'tests' stamp: 'fr 11/16/2020 01:07:04' prior: 50893194!
test03LegsKnowTheirComplementaryLegThroughTheTransfer

	self  createAccountsTransfer: [:aTransfer | transfer _ aTransfer] 
		assert: [self assert: (transfer depositLeg isComplementedBy: transfer withdrawLeg)] 
		and: [	self assert: (transfer withdrawLeg isComplementedBy: transfer depositLeg)]! !

!testRun: #TransferTest #test03LegsKnowTheirComplementaryLegThroughTheTransfer stamp: 'fr 11/16/2020 01:07:05'!
PASSED!

!testRun: #TransferTest #test01TransferMovesMoneyAffectingBalancesAsExpected stamp: 'fr 11/16/2020 01:07:05'!
PASSED!

!testRun: #TransferTest #test02AccountsThatParticipateInTheTransferRegisterTheCorrespondingLeg stamp: 'fr 11/16/2020 01:07:05'!
PASSED!

!testRun: #TransferTest #test03LegsKnowTheirComplementaryLegThroughTheTransfer stamp: 'fr 11/16/2020 01:07:05'!
PASSED!

!testRun: #TransferTest #test04TransferValueCanNotBeZero stamp: 'fr 11/16/2020 01:07:05'!
PASSED!

!testRun: #TransferTest #test05TransferValueCanNotBeNegative stamp: 'fr 11/16/2020 01:07:05'!
PASSED!

!testRun: #TransferTest #test06TransferCanNotMoveMoneyFromAnAccountToItself stamp: 'fr 11/16/2020 01:07:05'!
PASSED!

!methodRemoval: TransferTest #transferAndStore100FromAccountToAnotherAccount stamp: 'fr 11/16/2020 01:07:40'!
transferAndStore100FromAccountToAnotherAccount

	^ transfer _ self transfer100FromAccountToAnotherAccount!
!TransferTest methodsFor: 'private' stamp: 'fr 11/16/2020 01:07:47' prior: 50892619!
createNewAccount

	account _ ReceptiveAccount new! !
!TransferTest methodsFor: 'tests' stamp: 'fr 11/16/2020 01:08:02' prior: 50893000!
test01TransferMovesMoneyAffectingBalancesAsExpected
	
	self  createAccountsTransfer: [:aTransfer | ] 
		assert: [	self assert: account balance equals: -10] 
		and: [	self assert: anotherAccount balance equals: 100]
! !

!testRun: #TransferTest #test01TransferMovesMoneyAffectingBalancesAsExpected stamp: 'fr 11/16/2020 01:08:03'!
FAILURE!
!TransferTest methodsFor: 'tests' stamp: 'fr 11/16/2020 01:08:06' prior: 50893263!
test01TransferMovesMoneyAffectingBalancesAsExpected
	
	self  createAccountsTransfer: [:aTransfer | ] 
		assert: [	self assert: account balance equals: -100] 
		and: [	self assert: anotherAccount balance equals: 100]
! !

!testRun: #TransferTest #test01TransferMovesMoneyAffectingBalancesAsExpected stamp: 'fr 11/16/2020 01:08:07'!
PASSED!

!testRun: #TransferTest #test01TransferMovesMoneyAffectingBalancesAsExpected stamp: 'fr 11/16/2020 01:08:07'!
PASSED!

!testRun: #TransferTest #test02AccountsThatParticipateInTheTransferRegisterTheCorrespondingLeg stamp: 'fr 11/16/2020 01:08:07'!
PASSED!

!testRun: #TransferTest #test03LegsKnowTheirComplementaryLegThroughTheTransfer stamp: 'fr 11/16/2020 01:08:07'!
PASSED!

!testRun: #TransferTest #test04TransferValueCanNotBeZero stamp: 'fr 11/16/2020 01:08:07'!
PASSED!

!testRun: #TransferTest #test05TransferValueCanNotBeNegative stamp: 'fr 11/16/2020 01:08:07'!
PASSED!

!testRun: #TransferTest #test06TransferCanNotMoveMoneyFromAnAccountToItself stamp: 'fr 11/16/2020 01:08:07'!
PASSED!
!TransferTest methodsFor: 'tests' stamp: 'fr 11/16/2020 01:09:26'!
createAccountsAndAssertTransferFailsForValue: aTransferValue

	self createNewAccounts.

	self  should: [Transfer move: aTransferValue from: account to: anotherAccount] 
		raise:  Error - MessageNotUnderstood 
		withMessageText: Transfer invalidTransferAmountErrorDescription! !
!TransferTest methodsFor: 'tests' stamp: 'fr 11/16/2020 01:09:55' prior: 50892555!
test04TransferValueCanNotBeZero

	self createAccountsAndAssertTransferFailsForValue: 0! !

!testRun: #TransferTest #test04TransferValueCanNotBeZero stamp: 'fr 11/16/2020 01:09:55'!
PASSED!

!testRun: #TransferTest #test01TransferMovesMoneyAffectingBalancesAsExpected stamp: 'fr 11/16/2020 01:09:55'!
PASSED!

!testRun: #TransferTest #test02AccountsThatParticipateInTheTransferRegisterTheCorrespondingLeg stamp: 'fr 11/16/2020 01:09:55'!
PASSED!

!testRun: #TransferTest #test03LegsKnowTheirComplementaryLegThroughTheTransfer stamp: 'fr 11/16/2020 01:09:55'!
PASSED!

!testRun: #TransferTest #test04TransferValueCanNotBeZero stamp: 'fr 11/16/2020 01:09:55'!
PASSED!

!testRun: #TransferTest #test05TransferValueCanNotBeNegative stamp: 'fr 11/16/2020 01:09:55'!
PASSED!

!testRun: #TransferTest #test06TransferCanNotMoveMoneyFromAnAccountToItself stamp: 'fr 11/16/2020 01:09:55'!
PASSED!
!TransferTest methodsFor: 'tests' stamp: 'fr 11/16/2020 01:09:58' prior: 50893324!
test04TransferValueCanNotBeZero

	self createAccountsAndAssertTransferFailsForValue: 10! !

!testRun: #TransferTest #test04TransferValueCanNotBeZero stamp: 'fr 11/16/2020 01:09:59'!
FAILURE!

!testRun: #TransferTest #test04TransferValueCanNotBeZero stamp: 'fr 11/16/2020 01:10:05'!
FAILURE!
!TransferTest methodsFor: 'tests' stamp: 'fr 11/16/2020 01:10:11' prior: 50893355!
test04TransferValueCanNotBeZero

	self createAccountsAndAssertTransferFailsForValue: 0! !

!testRun: #TransferTest #test04TransferValueCanNotBeZero stamp: 'fr 11/16/2020 01:10:12'!
PASSED!

!testRun: #TransferTest #test01TransferMovesMoneyAffectingBalancesAsExpected stamp: 'fr 11/16/2020 01:10:12'!
PASSED!

!testRun: #TransferTest #test02AccountsThatParticipateInTheTransferRegisterTheCorrespondingLeg stamp: 'fr 11/16/2020 01:10:12'!
PASSED!

!testRun: #TransferTest #test03LegsKnowTheirComplementaryLegThroughTheTransfer stamp: 'fr 11/16/2020 01:10:12'!
PASSED!

!testRun: #TransferTest #test04TransferValueCanNotBeZero stamp: 'fr 11/16/2020 01:10:12'!
PASSED!

!testRun: #TransferTest #test05TransferValueCanNotBeNegative stamp: 'fr 11/16/2020 01:10:12'!
PASSED!

!testRun: #TransferTest #test06TransferCanNotMoveMoneyFromAnAccountToItself stamp: 'fr 11/16/2020 01:10:12'!
PASSED!
!TransferTest methodsFor: 'tests' stamp: 'fr 11/16/2020 01:10:25' prior: 50892609!
test05TransferValueCanNotBeNegative

	self createAccountsAndAssertTransferFailsForValue: -1! !

----SNAPSHOT----(16 November 2020 01:11:31) CuisUniversity-4384.image priorSource: 17922621!
!PortfolioReporterTest methodsFor: 'tests - tree structure' stamp: 'fr 11/16/2020 01:28:12' prior: 50888445!
test03TreeStructureReportForPortfolioWithAccountsAndPortfoliosWorksAsExpected

	| portfolio1 account anotherAccount anotherPortfolio reporter |
	account _ ReceptiveAccount named: 'Cuenta de Juan'.
	anotherAccount _ ReceptiveAccount named: 'Cuenta de Angeles'.
	portfolio1 _ Portfolio named: 'Portfolio de Angeles' with: anotherAccount.
	anotherPortfolio _ Portfolio named: 'Portfolio de la familia' with: portfolio1 with: account.
	reporter _ TreeStructureReporter for: anotherPortfolio.


	self assert: [reporter treeStructure = (OrderedCollection with: 'Portfolio de la familia' with: ' Portfolio de Angeles' with: '  Cuenta de Angeles' with: ' Cuenta de Juan')]! !
!PortfolioReporterTest methodsFor: 'tests - tree structure' stamp: 'fr 11/16/2020 01:28:21' prior: 50893408!
test03TreeStructureReportForPortfolioWithAccountsAndPortfoliosWorksAsExpected

	| portfolio1 account anotherAccount portfolio reporter |
	account _ ReceptiveAccount named: 'Cuenta de Juan'.
	anotherAccount _ ReceptiveAccount named: 'Cuenta de Angeles'.
	portfolio1 _ Portfolio named: 'Portfolio de Angeles' with: anotherAccount.
	portfolio _ Portfolio named: 'Portfolio de la familia' with: portfolio1 with: account.
	reporter _ TreeStructureReporter for: portfolio.


	self assert: [reporter treeStructure = (OrderedCollection with: 'Portfolio de la familia' with: ' Portfolio de Angeles' with: '  Cuenta de Angeles' with: ' Cuenta de Juan')]! !
!PortfolioReporterTest methodsFor: 'tests - tree structure' stamp: 'fr 11/16/2020 01:28:26' prior: 50893433!
test03TreeStructureReportForPortfolioWithAccountsAndPortfoliosWorksAsExpected

	| anotherPortfolio account anotherAccount portfolio reporter |
	account _ ReceptiveAccount named: 'Cuenta de Juan'.
	anotherAccount _ ReceptiveAccount named: 'Cuenta de Angeles'.
	anotherPortfolio _ Portfolio named: 'Portfolio de Angeles' with: anotherAccount.
	portfolio _ Portfolio named: 'Portfolio de la familia' with: anotherPortfolio with: account.
	reporter _ TreeStructureReporter for: portfolio.


	self assert: [reporter treeStructure = (OrderedCollection with: 'Portfolio de la familia' with: ' Portfolio de Angeles' with: '  Cuenta de Angeles' with: ' Cuenta de Juan')]! !
!PortfolioReporterTest methodsFor: 'tests - tree structure' stamp: 'fr 11/16/2020 01:28:40' prior: 50893457!
test03TreeStructureReportForPortfolioWithAccountsAndPortfoliosWorksAsExpected

	| anotherPortfolio account anotherAccount portfolio reporter |
	
	account _ ReceptiveAccount named: 'Cuenta de Juan'.
	anotherAccount _ ReceptiveAccount named: 'Cuenta de Angeles'.
	
	anotherPortfolio _ Portfolio named: 'Portfolio de Angeles' with: anotherAccount.
	portfolio _ Portfolio named: 'Portfolio de la familia' with: anotherPortfolio with: account.
	reporter _ TreeStructureReporter for: portfolio.


	self assert: [reporter treeStructure = (OrderedCollection with: 'Portfolio de la familia' with: ' Portfolio de Angeles' with: '  Cuenta de Angeles' with: ' Cuenta de Juan')]! !

port _ Portfolio new. !

port add: ReceptiveAccount new.!

reporter _ TreeStructureReporter for: port. !

reporter treeStructure !

port!
!Portfolio class methodsFor: 'as yet unclassified' stamp: 'fr 11/16/2020 01:34:10' prior: 50868309!
with: anAccount with: anotherAccount

	^self new 
		add: anAccount;
		add: anotherAccount;
		defaultPortfolioName;
		yourself! !
!Portfolio methodsFor: 'initialization' stamp: 'fr 11/16/2020 01:34:57' prior: 50868214 overrides: 16896425!
initialize
	
	name _ 'Un portfolio'.
	accounts _ OrderedCollection new.
	parents _ OrderedCollection new.! !

!methodRemoval: Portfolio #initializeWith: stamp: 'fr 11/16/2020 01:35:26'!
initializeWith: anAccount 
	self shouldBeImplemented.
	account := anAccount.!

!testRun: #AccountReporterTest #test01AccountSummaryForAccountWithNoTransactionsShouldJustShowBalanceZero stamp: 'fr 11/16/2020 01:35:30'!
PASSED!

!testRun: #AccountReporterTest #test02AccountSummaryShouldReflectDepositsOnAccounts stamp: 'fr 11/16/2020 01:35:30'!
PASSED!

!testRun: #AccountReporterTest #test03AccountSummaryShouldReflectWithdrawsOnAccounts stamp: 'fr 11/16/2020 01:35:30'!
PASSED!

!testRun: #AccountReporterTest #test04AccountSummaryShouldReflectOutgoingTransfersOnAccounts stamp: 'fr 11/16/2020 01:35:30'!
PASSED!

!testRun: #AccountReporterTest #test05AccountSummaryShouldReflectIncomingTransfersOnAccounts stamp: 'fr 11/16/2020 01:35:30'!
PASSED!

!testRun: #AccountReporterTest #test06AccountSummaryForPortfolioWithNoTransactionsShouldJustShowBalanceZero stamp: 'fr 11/16/2020 01:35:30'!
PASSED!

!testRun: #AccountReporterTest #test07AccountSummaryShouldReflectDepositsOnPortfoliosWithAccounts stamp: 'fr 11/16/2020 01:35:30'!
PASSED!

!testRun: #AccountReporterTest #test08AccountSummaryShouldReflectWithdrawsOnPortfoliosWithAccounts stamp: 'fr 11/16/2020 01:35:30'!
PASSED!

!testRun: #AccountReporterTest #test09AccountSummaryShouldReflectOutgoingAndIncomingTransfersOnPortfoliosWithAccounts stamp: 'fr 11/16/2020 01:35:30'!
PASSED!

!testRun: #AccountReporterTest #test10AccountSummaryShouldReflectDepositsOnPortfoliosWithPortfolios stamp: 'fr 11/16/2020 01:35:30'!
PASSED!

!testRun: #AccountReporterTest #test11AccountSummaryShouldReflectWithdrawsOnPortfoliosWithPortfolios stamp: 'fr 11/16/2020 01:35:30'!
PASSED!

!testRun: #AccountReporterTest #test12AccountSummaryShouldReflectOutgoingAndIncomingTransfersOnPortfoliosWithPortfolios stamp: 'fr 11/16/2020 01:35:30'!
PASSED!

!testRun: #AccountReporterTest #test13NetTransferForAccountWithNoTransactionsShouldBeZero stamp: 'fr 11/16/2020 01:35:30'!
PASSED!

!testRun: #AccountReporterTest #test14NetTransferForAccountWithAnOutgoingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 01:35:30'!
PASSED!

!testRun: #AccountReporterTest #test15NetTransferForAccountWithAnIncomingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 01:35:30'!
PASSED!

!testRun: #AccountReporterTest #test16NetTransferForAccountShouldNotReflectDeposits stamp: 'fr 11/16/2020 01:35:30'!
PASSED!

!testRun: #AccountReporterTest #test17NetTransferForAccountShouldNotReflectWithdraws stamp: 'fr 11/16/2020 01:35:30'!
PASSED!

!testRun: #AccountReporterTest #test18NetTransferForPortfolioWithNoTransactionsShouldBeZero stamp: 'fr 11/16/2020 01:35:30'!
PASSED!

!testRun: #AccountReporterTest #test19NetTransferForPortfolioWithAnOutgoingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 01:35:30'!
PASSED!

!testRun: #AccountReporterTest #test20NetTransferForPortfolioWithAnIncomingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 01:35:30'!
PASSED!

!testRun: #AccountReporterTest #test21NetTransferForPortfolioShouldNotReflectDeposits stamp: 'fr 11/16/2020 01:35:30'!
PASSED!

!testRun: #AccountReporterTest #test22NetTransferForPortfolioShouldNotReflectWithdraws stamp: 'fr 11/16/2020 01:35:30'!
PASSED!

!testRun: #AccountReporterTest #test23NetTransferForPortfoliosWithPortfoliosShouldReflectOutgoingAndIncomingTransfers stamp: 'fr 11/16/2020 01:35:30'!
PASSED!

!testRun: #AccountReporterTest #test24NetTransferForPortfoliosWithPortfoliosShouldNotRelfectDepositsOrWithdraws stamp: 'fr 11/16/2020 01:35:30'!
PASSED!

!testRun: #PortfolioReporterTest #test01TreeStructureReportForEmptyPortfolioWorksAsExpected stamp: 'fr 11/16/2020 01:35:30'!
PASSED!

!testRun: #PortfolioReporterTest #test02TreeStructureReportForPortfolioWithAccountsWorksAsExpected stamp: 'fr 11/16/2020 01:35:30'!
PASSED!

!testRun: #PortfolioReporterTest #test03TreeStructureReportForPortfolioWithAccountsAndPortfoliosWorksAsExpected stamp: 'fr 11/16/2020 01:35:30'!
PASSED!

!testRun: #PortfolioReporterTest #test04AccountsShouldUseADefaultNameIfNoneIsSpecified stamp: 'fr 11/16/2020 01:35:30'!
PASSED!

!testRun: #PortfolioReporterTest #test05SpecialReportForEmptyPortfolioWorksAsExpected stamp: 'fr 11/16/2020 01:35:30'!
PASSED!

!testRun: #PortfolioReporterTest #test06SpecialReportForPortfolioWithAccountsWithAnyKindOfTransactionsWorksAsExpected stamp: 'fr 11/16/2020 01:35:30'!
PASSED!

!testRun: #PortfolioReporterTest #test07SpecialReportForPortfolioWithAccountsAndPortfoliosWithAnyKindOfTransactionsWorksAsExpected stamp: 'fr 11/16/2020 01:35:30'!
PASSED!

!testRun: #PortfolioTest #test01BalanceOfPortfolioWithoutAccountsIsZero stamp: 'fr 11/16/2020 01:35:30'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithOneAccountIsAccountBalance stamp: 'fr 11/16/2020 01:35:30'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioIsCalculatedRecursivelyOnPortfolios stamp: 'fr 11/16/2020 01:35:30'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithoutAccountsHasNoRegisteredTransaction stamp: 'fr 11/16/2020 01:35:30'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredItsAccountsTransactions stamp: 'fr 11/16/2020 01:35:30'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioLooksForRegisteredTransactionsRecursively stamp: 'fr 11/16/2020 01:35:30'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioHasNoTransactionWhenHasNoAccounts stamp: 'fr 11/16/2020 01:35:30'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTransactionsIncludesAllItsAccountsTransactions stamp: 'fr 11/16/2020 01:35:30'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioTransactionsAreCalculatedRecursively stamp: 'fr 11/16/2020 01:35:30'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCanNotIncludeTheSameAccountMoreThanOnce stamp: 'fr 11/16/2020 01:35:30'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCanNotIncludeAccountOfItsPortfolios stamp: 'fr 11/16/2020 01:35:30'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioCanNotIncludeItself stamp: 'fr 11/16/2020 01:35:30'!
PASSED!

!testRun: #PortfolioTest #test13ComposedPortfolioCanNotHaveParentPortfolioAccount stamp: 'fr 11/16/2020 01:35:30'!
PASSED!

!testRun: #PortfolioTest #test14ComposedPortfolioCanNotHaveAccountOfAnyRootParentRecursively stamp: 'fr 11/16/2020 01:35:30'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotIncludeAnyOfTheComposedAccountOfPortfolioToAdd stamp: 'fr 11/16/2020 01:35:30'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'fr 11/16/2020 01:35:30'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'fr 11/16/2020 01:35:30'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'fr 11/16/2020 01:35:30'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'fr 11/16/2020 01:35:30'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'fr 11/16/2020 01:35:30'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'fr 11/16/2020 01:35:30'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'fr 11/16/2020 01:35:30'!
PASSED!

!testRun: #TransferTest #test01TransferMovesMoneyAffectingBalancesAsExpected stamp: 'fr 11/16/2020 01:35:30'!
PASSED!

!testRun: #TransferTest #test02AccountsThatParticipateInTheTransferRegisterTheCorrespondingLeg stamp: 'fr 11/16/2020 01:35:30'!
PASSED!

!testRun: #TransferTest #test03LegsKnowTheirComplementaryLegThroughTheTransfer stamp: 'fr 11/16/2020 01:35:30'!
PASSED!

!testRun: #TransferTest #test04TransferValueCanNotBeZero stamp: 'fr 11/16/2020 01:35:30'!
PASSED!

!testRun: #TransferTest #test05TransferValueCanNotBeNegative stamp: 'fr 11/16/2020 01:35:30'!
PASSED!

!testRun: #TransferTest #test06TransferCanNotMoveMoneyFromAnAccountToItself stamp: 'fr 11/16/2020 01:35:30'!
PASSED!

port _ Portfolio new.

acc _ ReceptiveAccount new.!

port add: acc. !

reporter _ TreeStructureReporter for: port. !

reporter treeStructure !
!Portfolio methodsFor: 'initialization' stamp: 'fr 11/16/2020 01:36:45' prior: 50893519 overrides: 16896425!
initialize

	self defaultPortfolioName.
	accounts _ OrderedCollection new.
	parents _ OrderedCollection new.! !
!PortfolioReporterTest methodsFor: 'tests - special tree' stamp: 'fr 11/16/2020 01:37:33' prior: 50891742!
test05SpecialReportForEmptyPortfolioWorksAsExpected

	| portfolio reporter |
	portfolio _ Portfolio named: 'Portfolio de la familia'.
	reporter _ SpecialTreeReporter for: portfolio.

	self assert: [reporter specialReport = (OrderedCollection with: 'Portfolio de la familia' with: ' Balance = 0')]! !

!testRun: #PortfolioReporterTest #test05SpecialReportForEmptyPortfolioWorksAsExpected stamp: 'fr 11/16/2020 01:37:34'!
PASSED!

!testRun: #PortfolioReporterTest #test01TreeStructureReportForEmptyPortfolioWorksAsExpected stamp: 'fr 11/16/2020 01:37:34'!
PASSED!

!testRun: #PortfolioReporterTest #test02TreeStructureReportForPortfolioWithAccountsWorksAsExpected stamp: 'fr 11/16/2020 01:37:34'!
PASSED!

!testRun: #PortfolioReporterTest #test03TreeStructureReportForPortfolioWithAccountsAndPortfoliosWorksAsExpected stamp: 'fr 11/16/2020 01:37:34'!
PASSED!

!testRun: #PortfolioReporterTest #test04AccountsShouldUseADefaultNameIfNoneIsSpecified stamp: 'fr 11/16/2020 01:37:34'!
PASSED!

!testRun: #PortfolioReporterTest #test05SpecialReportForEmptyPortfolioWorksAsExpected stamp: 'fr 11/16/2020 01:37:34'!
PASSED!

!testRun: #PortfolioReporterTest #test06SpecialReportForPortfolioWithAccountsWithAnyKindOfTransactionsWorksAsExpected stamp: 'fr 11/16/2020 01:37:34'!
PASSED!

!testRun: #PortfolioReporterTest #test07SpecialReportForPortfolioWithAccountsAndPortfoliosWithAnyKindOfTransactionsWorksAsExpected stamp: 'fr 11/16/2020 01:37:34'!
PASSED!
!PortfolioReporterTest methodsFor: 'tests - special tree' stamp: 'fr 11/16/2020 01:37:49' prior: 50891755!
test06SpecialReportForPortfolioWithAccountsWithAnyKindOfTransactionsWorksAsExpected

	| portfolio account anotherAccount expectedReport reporter |
	account _ ReceptiveAccount named: 'Cuenta de la familia'.
	anotherAccount _ ReceptiveAccount new.
	Deposit register: 100 on: account.
	Withdraw register: 50 on: account.
	Transfer move: 10 from: account to: anotherAccount.
	Transfer move: 5 from: anotherAccount to: account.
	portfolio _ Portfolio named: 'Portfolio de la familia' with: account.
	expectedReport _ OrderedCollection with: 'Portfolio de la familia'.
	expectedReport add: ' Cuenta de la familia'.
	expectedReport add: '  Dep�sito por 100.'.
	expectedReport add: '  Extracci�n por 50.'.
	expectedReport add: '  Salida por transferencia de 10.'.
	expectedReport add: '  Entrada por transferencia de 5.'.
	expectedReport add: '  Balance = 45'.
	expectedReport add: ' Balance = 45'.
	reporter _ SpecialTreeReporter for: portfolio.

	self assert: [reporter specialReport = expectedReport]! !

!testRun: #PortfolioReporterTest #test06SpecialReportForPortfolioWithAccountsWithAnyKindOfTransactionsWorksAsExpected stamp: 'fr 11/16/2020 01:37:50'!
PASSED!

!testRun: #PortfolioReporterTest #test01TreeStructureReportForEmptyPortfolioWorksAsExpected stamp: 'fr 11/16/2020 01:37:50'!
PASSED!

!testRun: #PortfolioReporterTest #test02TreeStructureReportForPortfolioWithAccountsWorksAsExpected stamp: 'fr 11/16/2020 01:37:50'!
PASSED!

!testRun: #PortfolioReporterTest #test03TreeStructureReportForPortfolioWithAccountsAndPortfoliosWorksAsExpected stamp: 'fr 11/16/2020 01:37:50'!
PASSED!

!testRun: #PortfolioReporterTest #test04AccountsShouldUseADefaultNameIfNoneIsSpecified stamp: 'fr 11/16/2020 01:37:50'!
PASSED!

!testRun: #PortfolioReporterTest #test05SpecialReportForEmptyPortfolioWorksAsExpected stamp: 'fr 11/16/2020 01:37:50'!
PASSED!

!testRun: #PortfolioReporterTest #test06SpecialReportForPortfolioWithAccountsWithAnyKindOfTransactionsWorksAsExpected stamp: 'fr 11/16/2020 01:37:50'!
PASSED!

!testRun: #PortfolioReporterTest #test07SpecialReportForPortfolioWithAccountsAndPortfoliosWithAnyKindOfTransactionsWorksAsExpected stamp: 'fr 11/16/2020 01:37:50'!
PASSED!
!PortfolioReporterTest methodsFor: 'tests - special tree' stamp: 'fr 11/16/2020 01:39:06' prior: 50891789!
test07SpecialReportForPortfolioWithAccountsAndPortfoliosWithAnyKindOfTransactionsWorksAsExpected

	| portfolio account anotherAccount expectedReport anotherPortfolio reporter |
	account _ ReceptiveAccount named: 'Cuenta de Fede'.
	anotherAccount _ ReceptiveAccount named: 'Cuenta de Juan'.
	Deposit register: 100 on: account.
	Withdraw register: 50 on: account.
	Transfer move: 10 from: account to: anotherAccount.
	Transfer move: 5 from: anotherAccount to: account.
	anotherPortfolio _ Portfolio named: 'Portfolio de Juan' with: anotherAccount.
	portfolio _ Portfolio named: 'Portfolio de Fede' with: account with: anotherPortfolio.
	expectedReport _ OrderedCollection with: 'Portfolio de Fede'.
	expectedReport add: ' Cuenta de Fede'.
	expectedReport add: '  Dep�sito por 100.'.
	expectedReport add: '  Extracci�n por 50.'.
	expectedReport add: '  Salida por transferencia de 10.'.
	expectedReport add: '  Entrada por transferencia de 5.'.
	expectedReport add: '  Balance = 45'.
	expectedReport add: ' Portfolio de Juan'.
	expectedReport add: '  Cuenta de Juan'.
	expectedReport add: '   Entrada por transferencia de 10.'.
	expectedReport add: '   Salida por transferencia de 5.'.
	expectedReport add: '   Balance = 5'.
	expectedReport add: '  Balance = 5'.
	expectedReport add: ' Balance = 50'.
	reporter _ SpecialTreeReporter for: portfolio.
	
	self assert: [reporter specialReport = expectedReport]! !
!PortfolioReporterTest methodsFor: 'tests - special tree' stamp: 'fr 11/16/2020 01:39:36' prior: 50893907!
test07SpecialReportForPortfolioWithAccountsAndPortfoliosWithAnyKindOfTransactionsWorksAsExpected

	| portfolio account anotherAccount expectedReport anotherPortfolio reporter |
	account _ ReceptiveAccount named: 'Cuenta de la familia'.
	anotherAccount _ ReceptiveAccount named: 'Cuenta de Juan'.
	Deposit register: 100 on: account.
	Withdraw register: 50 on: account.
	Transfer move: 10 from: account to: anotherAccount.
	Transfer move: 5 from: anotherAccount to: account.
	anotherPortfolio _ Portfolio named: 'Portfolio de Juan' with: anotherAccount.
	portfolio _ Portfolio named: 'Portfolio de la familia' with: account with: anotherPortfolio.
	expectedReport _ OrderedCollection with: 'Portfolio de la familia'.
	expectedReport add: ' Cuenta de Fede'.
	expectedReport add: '  Dep�sito por 100.'.
	expectedReport add: '  Extracci�n por 50.'.
	expectedReport add: '  Salida por transferencia de 10.'.
	expectedReport add: '  Entrada por transferencia de 5.'.
	expectedReport add: '  Balance = 45'.
	expectedReport add: ' Portfolio de Juan'.
	expectedReport add: '  Cuenta de Juan'.
	expectedReport add: '   Entrada por transferencia de 10.'.
	expectedReport add: '   Salida por transferencia de 5.'.
	expectedReport add: '   Balance = 5'.
	expectedReport add: '  Balance = 5'.
	expectedReport add: ' Balance = 50'.
	reporter _ SpecialTreeReporter for: portfolio.
	
	self assert: [reporter specialReport = expectedReport]! !
!PortfolioReporterTest methodsFor: 'tests - special tree' stamp: 'fr 11/16/2020 01:40:04' prior: 50893955!
test07SpecialReportForPortfolioWithAccountsAndPortfoliosWithAnyKindOfTransactionsWorksAsExpected

	| portfolio account anotherAccount expectedReport anotherPortfolio reporter |
	account _ ReceptiveAccount named: 'Cuenta de la familia'.
	anotherAccount _ ReceptiveAccount named: 'Cuenta de Juan'.
	
	Deposit register: 100 on: account.
	Withdraw register: 50 on: account.
	Transfer move: 10 from: account to: anotherAccount.
	Transfer move: 5 from: anotherAccount to: account.
	
	anotherPortfolio _ Portfolio named: 'Portfolio de Juan' with: anotherAccount.
	portfolio _ Portfolio named: 'Portfolio de la familia' with: account with: anotherPortfolio.
	
	expectedReport _ OrderedCollection with: 'Portfolio de la familia'.
	expectedReport add: ' Cuenta de Fede'.
	expectedReport add: '  Dep�sito por 100.'.
	expectedReport add: '  Extracci�n por 50.'.
	expectedReport add: '  Salida por transferencia de 10.'.
	expectedReport add: '  Entrada por transferencia de 5.'.
	expectedReport add: '  Balance = 45'.
	expectedReport add: ' Portfolio de Juan'.
	expectedReport add: '  Cuenta de Juan'.
	expectedReport add: '   Entrada por transferencia de 10.'.
	expectedReport add: '   Salida por transferencia de 5.'.
	expectedReport add: '   Balance = 5'.
	expectedReport add: '  Balance = 5'.
	expectedReport add: ' Balance = 50'.
	
	reporter _ SpecialTreeReporter for: portfolio.
	
	self assert: [reporter specialReport = expectedReport]! !
!PortfolioReporterTest methodsFor: 'tests - special tree' stamp: 'fr 11/16/2020 01:40:17' prior: 50893835!
test06SpecialReportForPortfolioWithAccountsWithAnyKindOfTransactionsWorksAsExpected

	| portfolio account anotherAccount expectedReport reporter |
	account _ ReceptiveAccount named: 'Cuenta de la familia'.
	anotherAccount _ ReceptiveAccount new.
	
	Deposit register: 100 on: account.
	Withdraw register: 50 on: account.
	Transfer move: 10 from: account to: anotherAccount.
	Transfer move: 5 from: anotherAccount to: account.
	
	portfolio _ Portfolio named: 'Portfolio de la familia' with: account.
	
	expectedReport _ OrderedCollection with: 'Portfolio de la familia'.
	expectedReport add: ' Cuenta de la familia'.
	expectedReport add: '  Dep�sito por 100.'.
	expectedReport add: '  Extracci�n por 50.'.
	expectedReport add: '  Salida por transferencia de 10.'.
	expectedReport add: '  Entrada por transferencia de 5.'.
	expectedReport add: '  Balance = 45'.
	expectedReport add: ' Balance = 45'.
	reporter _ SpecialTreeReporter for: portfolio.

	self assert: [reporter specialReport = expectedReport]! !
!PortfolioReporterTest methodsFor: 'tests - special tree' stamp: 'fr 11/16/2020 01:41:40'!
performRegularTransactionsWith: account asWellAsTransferTransactionsWithItAnd: anotherAccount

	Deposit register: 100 on: account.
	Withdraw register: 50 on: account.
	Transfer move: 10 from: account to: anotherAccount.
	Transfer move: 5 from: anotherAccount to: account! !
!PortfolioReporterTest methodsFor: 'tests - special tree' stamp: 'fr 11/16/2020 01:41:40' prior: 50894052!
test06SpecialReportForPortfolioWithAccountsWithAnyKindOfTransactionsWorksAsExpected

	| portfolio account anotherAccount expectedReport reporter |
	account _ ReceptiveAccount named: 'Cuenta de la familia'.
	anotherAccount _ ReceptiveAccount new.
	
	self performRegularTransactionsWith: account asWellAsTransferTransactionsWithItAnd: anotherAccount.
	
	portfolio _ Portfolio named: 'Portfolio de la familia' with: account.
	
	expectedReport _ OrderedCollection with: 'Portfolio de la familia'.
	expectedReport add: ' Cuenta de la familia'.
	expectedReport add: '  Dep�sito por 100.'.
	expectedReport add: '  Extracci�n por 50.'.
	expectedReport add: '  Salida por transferencia de 10.'.
	expectedReport add: '  Entrada por transferencia de 5.'.
	expectedReport add: '  Balance = 45'.
	expectedReport add: ' Balance = 45'.
	reporter _ SpecialTreeReporter for: portfolio.

	self assert: [reporter specialReport = expectedReport]! !

!testRun: #PortfolioReporterTest #test06SpecialReportForPortfolioWithAccountsWithAnyKindOfTransactionsWorksAsExpected stamp: 'fr 11/16/2020 01:41:43'!
PASSED!

!testRun: #PortfolioReporterTest #test01TreeStructureReportForEmptyPortfolioWorksAsExpected stamp: 'fr 11/16/2020 01:41:43'!
PASSED!

!testRun: #PortfolioReporterTest #test02TreeStructureReportForPortfolioWithAccountsWorksAsExpected stamp: 'fr 11/16/2020 01:41:43'!
PASSED!

!testRun: #PortfolioReporterTest #test03TreeStructureReportForPortfolioWithAccountsAndPortfoliosWorksAsExpected stamp: 'fr 11/16/2020 01:41:43'!
PASSED!

!testRun: #PortfolioReporterTest #test04AccountsShouldUseADefaultNameIfNoneIsSpecified stamp: 'fr 11/16/2020 01:41:43'!
PASSED!

!testRun: #PortfolioReporterTest #test05SpecialReportForEmptyPortfolioWorksAsExpected stamp: 'fr 11/16/2020 01:41:43'!
PASSED!

!testRun: #PortfolioReporterTest #test06SpecialReportForPortfolioWithAccountsWithAnyKindOfTransactionsWorksAsExpected stamp: 'fr 11/16/2020 01:41:43'!
PASSED!

!testRun: #PortfolioReporterTest #test07SpecialReportForPortfolioWithAccountsAndPortfoliosWithAnyKindOfTransactionsWorksAsExpected stamp: 'fr 11/16/2020 01:41:43'!
FAILURE!

!testRun: #PortfolioReporterTest #test07SpecialReportForPortfolioWithAccountsAndPortfoliosWithAnyKindOfTransactionsWorksAsExpected stamp: 'fr 11/16/2020 01:41:43'!
FAILURE!
!PortfolioReporterTest methodsFor: 'tests - special tree' stamp: 'fr 11/16/2020 01:40:17' prior: 50894099!
test06SpecialReportForPortfolioWithAccountsWithAnyKindOfTransactionsWorksAsExpected

	| portfolio account anotherAccount expectedReport reporter |
	account _ ReceptiveAccount named: 'Cuenta de la familia'.
	anotherAccount _ ReceptiveAccount new.
	
	Deposit register: 100 on: account.
	Withdraw register: 50 on: account.
	Transfer move: 10 from: account to: anotherAccount.
	Transfer move: 5 from: anotherAccount to: account.
	
	portfolio _ Portfolio named: 'Portfolio de la familia' with: account.
	
	expectedReport _ OrderedCollection with: 'Portfolio de la familia'.
	expectedReport add: ' Cuenta de la familia'.
	expectedReport add: '  Dep�sito por 100.'.
	expectedReport add: '  Extracci�n por 50.'.
	expectedReport add: '  Salida por transferencia de 10.'.
	expectedReport add: '  Entrada por transferencia de 5.'.
	expectedReport add: '  Balance = 45'.
	expectedReport add: ' Balance = 45'.
	reporter _ SpecialTreeReporter for: portfolio.

	self assert: [reporter specialReport = expectedReport]! !

!testRun: #PortfolioReporterTest #test06SpecialReportForPortfolioWithAccountsWithAnyKindOfTransactionsWorksAsExpected stamp: 'fr 11/16/2020 01:41:58'!
PASSED!

!testRun: #PortfolioReporterTest #test01TreeStructureReportForEmptyPortfolioWorksAsExpected stamp: 'fr 11/16/2020 01:41:58'!
PASSED!

!testRun: #PortfolioReporterTest #test02TreeStructureReportForPortfolioWithAccountsWorksAsExpected stamp: 'fr 11/16/2020 01:41:58'!
PASSED!

!testRun: #PortfolioReporterTest #test03TreeStructureReportForPortfolioWithAccountsAndPortfoliosWorksAsExpected stamp: 'fr 11/16/2020 01:41:58'!
PASSED!

!testRun: #PortfolioReporterTest #test04AccountsShouldUseADefaultNameIfNoneIsSpecified stamp: 'fr 11/16/2020 01:41:58'!
PASSED!

!testRun: #PortfolioReporterTest #test05SpecialReportForEmptyPortfolioWorksAsExpected stamp: 'fr 11/16/2020 01:41:58'!
PASSED!

!testRun: #PortfolioReporterTest #test06SpecialReportForPortfolioWithAccountsWithAnyKindOfTransactionsWorksAsExpected stamp: 'fr 11/16/2020 01:41:58'!
PASSED!

!testRun: #PortfolioReporterTest #test07SpecialReportForPortfolioWithAccountsAndPortfoliosWithAnyKindOfTransactionsWorksAsExpected stamp: 'fr 11/16/2020 01:41:58'!
FAILURE!

!testRun: #PortfolioReporterTest #test07SpecialReportForPortfolioWithAccountsAndPortfoliosWithAnyKindOfTransactionsWorksAsExpected stamp: 'fr 11/16/2020 01:41:58'!
FAILURE!
!PortfolioReporterTest methodsFor: 'tests - special tree' stamp: 'fr 11/16/2020 01:42:11' prior: 50894003!
test07SpecialReportForPortfolioWithAccountsAndPortfoliosWithAnyKindOfTransactionsWorksAsExpected

	| portfolio account anotherAccount expectedReport anotherPortfolio reporter |
	account _ ReceptiveAccount named: 'Cuenta de la familia'.
	anotherAccount _ ReceptiveAccount named: 'Cuenta de Juan'.
	
	Deposit register: 100 on: account.
	Withdraw register: 50 on: account.
	Transfer move: 10 from: account to: anotherAccount.
	Transfer move: 5 from: anotherAccount to: account.
	
	anotherPortfolio _ Portfolio named: 'Portfolio de Juan' with: anotherAccount.
	portfolio _ Portfolio named: 'Portfolio de la familia' with: account with: anotherPortfolio.
	
	expectedReport _ OrderedCollection with: 'Portfolio de la familia'.
	expectedReport add: ' Cuenta de la familia'.
	expectedReport add: '  Dep�sito por 100.'.
	expectedReport add: '  Extracci�n por 50.'.
	expectedReport add: '  Salida por transferencia de 10.'.
	expectedReport add: '  Entrada por transferencia de 5.'.
	expectedReport add: '  Balance = 45'.
	expectedReport add: ' Portfolio de Juan'.
	expectedReport add: '  Cuenta de Juan'.
	expectedReport add: '   Entrada por transferencia de 10.'.
	expectedReport add: '   Salida por transferencia de 5.'.
	expectedReport add: '   Balance = 5'.
	expectedReport add: '  Balance = 5'.
	expectedReport add: ' Balance = 50'.
	
	reporter _ SpecialTreeReporter for: portfolio.
	
	self assert: [reporter specialReport = expectedReport]! !

!testRun: #PortfolioReporterTest #test07SpecialReportForPortfolioWithAccountsAndPortfoliosWithAnyKindOfTransactionsWorksAsExpected stamp: 'fr 11/16/2020 01:42:11'!
PASSED!

!testRun: #PortfolioReporterTest #test01TreeStructureReportForEmptyPortfolioWorksAsExpected stamp: 'fr 11/16/2020 01:42:11'!
PASSED!

!testRun: #PortfolioReporterTest #test02TreeStructureReportForPortfolioWithAccountsWorksAsExpected stamp: 'fr 11/16/2020 01:42:11'!
PASSED!

!testRun: #PortfolioReporterTest #test03TreeStructureReportForPortfolioWithAccountsAndPortfoliosWorksAsExpected stamp: 'fr 11/16/2020 01:42:11'!
PASSED!

!testRun: #PortfolioReporterTest #test04AccountsShouldUseADefaultNameIfNoneIsSpecified stamp: 'fr 11/16/2020 01:42:11'!
PASSED!

!testRun: #PortfolioReporterTest #test05SpecialReportForEmptyPortfolioWorksAsExpected stamp: 'fr 11/16/2020 01:42:11'!
PASSED!

!testRun: #PortfolioReporterTest #test06SpecialReportForPortfolioWithAccountsWithAnyKindOfTransactionsWorksAsExpected stamp: 'fr 11/16/2020 01:42:11'!
PASSED!

!testRun: #PortfolioReporterTest #test07SpecialReportForPortfolioWithAccountsAndPortfoliosWithAnyKindOfTransactionsWorksAsExpected stamp: 'fr 11/16/2020 01:42:11'!
PASSED!
!PortfolioReporterTest methodsFor: 'tests - special tree' stamp: 'fr 11/16/2020 01:41:40' prior: 50894174!
test06SpecialReportForPortfolioWithAccountsWithAnyKindOfTransactionsWorksAsExpected

	| portfolio account anotherAccount expectedReport reporter |
	account _ ReceptiveAccount named: 'Cuenta de la familia'.
	anotherAccount _ ReceptiveAccount new.
	
	self performRegularTransactionsWith: account asWellAsTransferTransactionsWithItAnd: anotherAccount.
	
	portfolio _ Portfolio named: 'Portfolio de la familia' with: account.
	
	expectedReport _ OrderedCollection with: 'Portfolio de la familia'.
	expectedReport add: ' Cuenta de la familia'.
	expectedReport add: '  Dep�sito por 100.'.
	expectedReport add: '  Extracci�n por 50.'.
	expectedReport add: '  Salida por transferencia de 10.'.
	expectedReport add: '  Entrada por transferencia de 5.'.
	expectedReport add: '  Balance = 45'.
	expectedReport add: ' Balance = 45'.
	reporter _ SpecialTreeReporter for: portfolio.

	self assert: [reporter specialReport = expectedReport]! !

!testRun: #PortfolioReporterTest #test06SpecialReportForPortfolioWithAccountsWithAnyKindOfTransactionsWorksAsExpected stamp: 'fr 11/16/2020 01:42:20'!
PASSED!

!testRun: #PortfolioReporterTest #test01TreeStructureReportForEmptyPortfolioWorksAsExpected stamp: 'fr 11/16/2020 01:42:20'!
PASSED!

!testRun: #PortfolioReporterTest #test02TreeStructureReportForPortfolioWithAccountsWorksAsExpected stamp: 'fr 11/16/2020 01:42:20'!
PASSED!

!testRun: #PortfolioReporterTest #test03TreeStructureReportForPortfolioWithAccountsAndPortfoliosWorksAsExpected stamp: 'fr 11/16/2020 01:42:20'!
PASSED!

!testRun: #PortfolioReporterTest #test04AccountsShouldUseADefaultNameIfNoneIsSpecified stamp: 'fr 11/16/2020 01:42:20'!
PASSED!

!testRun: #PortfolioReporterTest #test05SpecialReportForEmptyPortfolioWorksAsExpected stamp: 'fr 11/16/2020 01:42:20'!
PASSED!

!testRun: #PortfolioReporterTest #test06SpecialReportForPortfolioWithAccountsWithAnyKindOfTransactionsWorksAsExpected stamp: 'fr 11/16/2020 01:42:20'!
PASSED!

!testRun: #PortfolioReporterTest #test07SpecialReportForPortfolioWithAccountsAndPortfoliosWithAnyKindOfTransactionsWorksAsExpected stamp: 'fr 11/16/2020 01:42:20'!
PASSED!
!PortfolioReporterTest methodsFor: 'tests - special tree' stamp: 'fr 11/16/2020 01:42:30' prior: 50894252!
test07SpecialReportForPortfolioWithAccountsAndPortfoliosWithAnyKindOfTransactionsWorksAsExpected

	| portfolio account anotherAccount expectedReport anotherPortfolio reporter |
	account _ ReceptiveAccount named: 'Cuenta de la familia'.
	anotherAccount _ ReceptiveAccount named: 'Cuenta de Juan'.
	
	self performRegularTransactionsWith: account asWellAsTransferTransactionsWithItAnd: anotherAccount.

	
	anotherPortfolio _ Portfolio named: 'Portfolio de Juan' with: anotherAccount.
	portfolio _ Portfolio named: 'Portfolio de la familia' with: account with: anotherPortfolio.
	
	expectedReport _ OrderedCollection with: 'Portfolio de la familia'.
	expectedReport add: ' Cuenta de la familia'.
	expectedReport add: '  Dep�sito por 100.'.
	expectedReport add: '  Extracci�n por 50.'.
	expectedReport add: '  Salida por transferencia de 10.'.
	expectedReport add: '  Entrada por transferencia de 5.'.
	expectedReport add: '  Balance = 45'.
	expectedReport add: ' Portfolio de Juan'.
	expectedReport add: '  Cuenta de Juan'.
	expectedReport add: '   Entrada por transferencia de 10.'.
	expectedReport add: '   Salida por transferencia de 5.'.
	expectedReport add: '   Balance = 5'.
	expectedReport add: '  Balance = 5'.
	expectedReport add: ' Balance = 50'.
	
	reporter _ SpecialTreeReporter for: portfolio.
	
	self assert: [reporter specialReport = expectedReport]! !
!PortfolioReporterTest methodsFor: 'tests - special tree' stamp: 'fr 11/16/2020 01:42:31' prior: 50894408!
test07SpecialReportForPortfolioWithAccountsAndPortfoliosWithAnyKindOfTransactionsWorksAsExpected

	| portfolio account anotherAccount expectedReport anotherPortfolio reporter |
	account _ ReceptiveAccount named: 'Cuenta de la familia'.
	anotherAccount _ ReceptiveAccount named: 'Cuenta de Juan'.
	
	self performRegularTransactionsWith: account asWellAsTransferTransactionsWithItAnd: anotherAccount.
	
	anotherPortfolio _ Portfolio named: 'Portfolio de Juan' with: anotherAccount.
	portfolio _ Portfolio named: 'Portfolio de la familia' with: account with: anotherPortfolio.
	
	expectedReport _ OrderedCollection with: 'Portfolio de la familia'.
	expectedReport add: ' Cuenta de la familia'.
	expectedReport add: '  Dep�sito por 100.'.
	expectedReport add: '  Extracci�n por 50.'.
	expectedReport add: '  Salida por transferencia de 10.'.
	expectedReport add: '  Entrada por transferencia de 5.'.
	expectedReport add: '  Balance = 45'.
	expectedReport add: ' Portfolio de Juan'.
	expectedReport add: '  Cuenta de Juan'.
	expectedReport add: '   Entrada por transferencia de 10.'.
	expectedReport add: '   Salida por transferencia de 5.'.
	expectedReport add: '   Balance = 5'.
	expectedReport add: '  Balance = 5'.
	expectedReport add: ' Balance = 50'.
	
	reporter _ SpecialTreeReporter for: portfolio.
	
	self assert: [reporter specialReport = expectedReport]! !

!testRun: #PortfolioReporterTest #test07SpecialReportForPortfolioWithAccountsAndPortfoliosWithAnyKindOfTransactionsWorksAsExpected stamp: 'fr 11/16/2020 01:42:32'!
PASSED!

!testRun: #PortfolioReporterTest #test01TreeStructureReportForEmptyPortfolioWorksAsExpected stamp: 'fr 11/16/2020 01:42:32'!
PASSED!

!testRun: #PortfolioReporterTest #test02TreeStructureReportForPortfolioWithAccountsWorksAsExpected stamp: 'fr 11/16/2020 01:42:32'!
PASSED!

!testRun: #PortfolioReporterTest #test03TreeStructureReportForPortfolioWithAccountsAndPortfoliosWorksAsExpected stamp: 'fr 11/16/2020 01:42:32'!
PASSED!

!testRun: #PortfolioReporterTest #test04AccountsShouldUseADefaultNameIfNoneIsSpecified stamp: 'fr 11/16/2020 01:42:32'!
PASSED!

!testRun: #PortfolioReporterTest #test05SpecialReportForEmptyPortfolioWorksAsExpected stamp: 'fr 11/16/2020 01:42:32'!
PASSED!

!testRun: #PortfolioReporterTest #test06SpecialReportForPortfolioWithAccountsWithAnyKindOfTransactionsWorksAsExpected stamp: 'fr 11/16/2020 01:42:32'!
PASSED!

!testRun: #PortfolioReporterTest #test07SpecialReportForPortfolioWithAccountsAndPortfoliosWithAnyKindOfTransactionsWorksAsExpected stamp: 'fr 11/16/2020 01:42:32'!
PASSED!
!PortfolioReporterTest methodsFor: 'tests - special tree' stamp: 'fr 11/16/2020 01:43:07' prior: 50894087!
performRegularTransactionsWith: anAccount asWellAsTransferTransactionsWithItAnd: anotherAccount

	Deposit register: 100 on: anAccount.
	Withdraw register: 50 on: anAccount.
	Transfer move: 10 from: anAccount to: anotherAccount.
	Transfer move: 5 from: anotherAccount to: anAccount! !
!PortfolioReporterTest methodsFor: 'tests - special tree' stamp: 'fr 11/16/2020 01:44:53'!
expectedReportForPortfolioWithAccounts
	
	| expectedReport |
	expectedReport _ OrderedCollection with: 'Portfolio de la familia'.
	expectedReport add: ' Cuenta de la familia'.
	expectedReport add: '  Dep�sito por 100.'.
	expectedReport add: '  Extracci�n por 50.'.
	expectedReport add: '  Salida por transferencia de 10.'.
	expectedReport add: '  Entrada por transferencia de 5.'.
	expectedReport add: '  Balance = 45'.
	expectedReport add: ' Balance = 45'.
	
	^expectedReport
	! !
!PortfolioReporterTest methodsFor: 'tests - special tree' stamp: 'fr 11/16/2020 01:44:58' prior: 50894550!
expectedReportForPortfolioWithAccounts
	
	| expectedReport |
	
	expectedReport _ OrderedCollection with: 'Portfolio de la familia'.
	expectedReport add: ' Cuenta de la familia'.
	expectedReport add: '  Dep�sito por 100.'.
	expectedReport add: '  Extracci�n por 50.'.
	expectedReport add: '  Salida por transferencia de 10.'.
	expectedReport add: '  Entrada por transferencia de 5.'.
	expectedReport add: '  Balance = 45'.
	expectedReport add: ' Balance = 45'.
	
	^expectedReport
	! !
!PortfolioReporterTest methodsFor: 'tests - special tree' stamp: 'fr 11/16/2020 01:45:11' prior: 50894338!
test06SpecialReportForPortfolioWithAccountsWithAnyKindOfTransactionsWorksAsExpected

	| portfolio account anotherAccount reporter |
	account _ ReceptiveAccount named: 'Cuenta de la familia'.
	anotherAccount _ ReceptiveAccount new.
	
	self performRegularTransactionsWith: account asWellAsTransferTransactionsWithItAnd: anotherAccount.
	
	portfolio _ Portfolio named: 'Portfolio de la familia' with: account.
	
	reporter _ SpecialTreeReporter for: portfolio.

	self assert: [reporter specialReport = self expectedReportForPortfolioWithAccounts]! !

!testRun: #PortfolioReporterTest #test06SpecialReportForPortfolioWithAccountsWithAnyKindOfTransactionsWorksAsExpected stamp: 'fr 11/16/2020 01:45:14'!
PASSED!

!testRun: #PortfolioReporterTest #test01TreeStructureReportForEmptyPortfolioWorksAsExpected stamp: 'fr 11/16/2020 01:45:14'!
PASSED!

!testRun: #PortfolioReporterTest #test02TreeStructureReportForPortfolioWithAccountsWorksAsExpected stamp: 'fr 11/16/2020 01:45:14'!
PASSED!

!testRun: #PortfolioReporterTest #test03TreeStructureReportForPortfolioWithAccountsAndPortfoliosWorksAsExpected stamp: 'fr 11/16/2020 01:45:14'!
PASSED!

!testRun: #PortfolioReporterTest #test04AccountsShouldUseADefaultNameIfNoneIsSpecified stamp: 'fr 11/16/2020 01:45:14'!
PASSED!

!testRun: #PortfolioReporterTest #test05SpecialReportForEmptyPortfolioWorksAsExpected stamp: 'fr 11/16/2020 01:45:14'!
PASSED!

!testRun: #PortfolioReporterTest #test06SpecialReportForPortfolioWithAccountsWithAnyKindOfTransactionsWorksAsExpected stamp: 'fr 11/16/2020 01:45:14'!
PASSED!

!testRun: #PortfolioReporterTest #test07SpecialReportForPortfolioWithAccountsAndPortfoliosWithAnyKindOfTransactionsWorksAsExpected stamp: 'fr 11/16/2020 01:45:14'!
PASSED!
!PortfolioReporterTest methodsFor: 'tests - special tree' stamp: 'fr 11/16/2020 01:45:46'!
expectedReportForPortfolioWithAccountsAndPortfolios

	| expectedReport |
	expectedReport _ OrderedCollection with: 'Portfolio de la familia'.
	expectedReport add: ' Cuenta de la familia'.
	expectedReport add: '  Dep�sito por 100.'.
	expectedReport add: '  Extracci�n por 50.'.
	expectedReport add: '  Salida por transferencia de 10.'.
	expectedReport add: '  Entrada por transferencia de 5.'.
	expectedReport add: '  Balance = 45'.
	expectedReport add: ' Portfolio de Juan'.
	expectedReport add: '  Cuenta de Juan'.
	expectedReport add: '   Entrada por transferencia de 10.'.
	expectedReport add: '   Salida por transferencia de 5.'.
	expectedReport add: '   Balance = 5'.
	expectedReport add: '  Balance = 5'.
	expectedReport add: ' Balance = 50'.
	
	^expectedReport! !
!PortfolioReporterTest methodsFor: 'tests - special tree' stamp: 'fr 11/16/2020 01:45:50' prior: 50894645!
expectedReportForPortfolioWithAccountsAndPortfolios

	| expectedReport |
	
	expectedReport _ OrderedCollection with: 'Portfolio de la familia'.
	expectedReport add: ' Cuenta de la familia'.
	expectedReport add: '  Dep�sito por 100.'.
	expectedReport add: '  Extracci�n por 50.'.
	expectedReport add: '  Salida por transferencia de 10.'.
	expectedReport add: '  Entrada por transferencia de 5.'.
	expectedReport add: '  Balance = 45'.
	expectedReport add: ' Portfolio de Juan'.
	expectedReport add: '  Cuenta de Juan'.
	expectedReport add: '   Entrada por transferencia de 10.'.
	expectedReport add: '   Salida por transferencia de 5.'.
	expectedReport add: '   Balance = 5'.
	expectedReport add: '  Balance = 5'.
	expectedReport add: ' Balance = 50'.
	
	^expectedReport! !
!PortfolioReporterTest methodsFor: 'tests - special tree' stamp: 'fr 11/16/2020 01:46:04' prior: 50894454!
test07SpecialReportForPortfolioWithAccountsAndPortfoliosWithAnyKindOfTransactionsWorksAsExpected

	| portfolio account anotherAccount anotherPortfolio reporter |
	account _ ReceptiveAccount named: 'Cuenta de la familia'.
	anotherAccount _ ReceptiveAccount named: 'Cuenta de Juan'.
	
	self performRegularTransactionsWith: account asWellAsTransferTransactionsWithItAnd: anotherAccount.
	
	anotherPortfolio _ Portfolio named: 'Portfolio de Juan' with: anotherAccount.
	portfolio _ Portfolio named: 'Portfolio de la familia' with: account with: anotherPortfolio.

	reporter _ SpecialTreeReporter for: portfolio.
	
	self assert: [reporter specialReport = self expectedReportForPortfolioWithAccountsAndPortfolios]! !

!testRun: #PortfolioReporterTest #test07SpecialReportForPortfolioWithAccountsAndPortfoliosWithAnyKindOfTransactionsWorksAsExpected stamp: 'fr 11/16/2020 01:46:06'!
PASSED!

!testRun: #PortfolioReporterTest #test01TreeStructureReportForEmptyPortfolioWorksAsExpected stamp: 'fr 11/16/2020 01:46:06'!
PASSED!

!testRun: #PortfolioReporterTest #test02TreeStructureReportForPortfolioWithAccountsWorksAsExpected stamp: 'fr 11/16/2020 01:46:06'!
PASSED!

!testRun: #PortfolioReporterTest #test03TreeStructureReportForPortfolioWithAccountsAndPortfoliosWorksAsExpected stamp: 'fr 11/16/2020 01:46:06'!
PASSED!

!testRun: #PortfolioReporterTest #test04AccountsShouldUseADefaultNameIfNoneIsSpecified stamp: 'fr 11/16/2020 01:46:06'!
PASSED!

!testRun: #PortfolioReporterTest #test05SpecialReportForEmptyPortfolioWorksAsExpected stamp: 'fr 11/16/2020 01:46:06'!
PASSED!

!testRun: #PortfolioReporterTest #test06SpecialReportForPortfolioWithAccountsWithAnyKindOfTransactionsWorksAsExpected stamp: 'fr 11/16/2020 01:46:06'!
PASSED!

!testRun: #PortfolioReporterTest #test07SpecialReportForPortfolioWithAccountsAndPortfoliosWithAnyKindOfTransactionsWorksAsExpected stamp: 'fr 11/16/2020 01:46:06'!
PASSED!
!PortfolioReporterTest methodsFor: 'tests - special tree' stamp: 'fr 11/16/2020 01:47:56' prior: 50894588!
test06SpecialReportForPortfolioWithAccountsWithAnyKindOfTransactionsWorksAsExpected

	| portfolio account anotherAccount reporter |
	
	account _ ReceptiveAccount named: 'Cuenta de la familia'.
	anotherAccount _ ReceptiveAccount new.
	
	self performRegularTransactionsWith: account asWellAsTransferTransactionsWithItAnd: anotherAccount.
	
	portfolio _ Portfolio named: 'Portfolio de la familia' with: account.
	
	reporter _ SpecialTreeReporter for: portfolio.

	self assert: [reporter specialReport = self expectedReportForPortfolioWithAccounts]! !
!PortfolioReporterTest methodsFor: 'tests - special tree' stamp: 'fr 11/16/2020 01:47:59' prior: 50894701!
test07SpecialReportForPortfolioWithAccountsAndPortfoliosWithAnyKindOfTransactionsWorksAsExpected

	| portfolio account anotherAccount anotherPortfolio reporter |
	
	account _ ReceptiveAccount named: 'Cuenta de la familia'.
	anotherAccount _ ReceptiveAccount named: 'Cuenta de Juan'.
	
	self performRegularTransactionsWith: account asWellAsTransferTransactionsWithItAnd: anotherAccount.
	
	anotherPortfolio _ Portfolio named: 'Portfolio de Juan' with: anotherAccount.
	portfolio _ Portfolio named: 'Portfolio de la familia' with: account with: anotherPortfolio.

	reporter _ SpecialTreeReporter for: portfolio.
	
	self assert: [reporter specialReport = self expectedReportForPortfolioWithAccountsAndPortfolios]! !
!PortfolioReporterTest methodsFor: 'tests - special tree' stamp: 'fr 11/16/2020 01:48:02' prior: 50893786!
test05SpecialReportForEmptyPortfolioWorksAsExpected

	| portfolio reporter |
	
	portfolio _ Portfolio named: 'Portfolio de la familia'.
	reporter _ SpecialTreeReporter for: portfolio.

	self assert: [reporter specialReport = (OrderedCollection with: 'Portfolio de la familia' with: ' Balance = 0')]! !
!PortfolioReporterTest methodsFor: 'tests - special tree' stamp: 'fr 11/16/2020 01:48:19' prior: 50894811!
test05SpecialReportForEmptyPortfolioWorksAsExpected

	| portfolio reporter |
	
	portfolio _ Portfolio named: 'Portfolio de la familia'.
	reporter _ SpecialTreeReporter for: portfolio.

	self assert: reporter specialReport equals: (OrderedCollection with: 'Portfolio de la familia' with: ' Balance = 0')! !

!testRun: #PortfolioReporterTest #test05SpecialReportForEmptyPortfolioWorksAsExpected stamp: 'fr 11/16/2020 01:48:22'!
PASSED!

!testRun: #PortfolioReporterTest #test01TreeStructureReportForEmptyPortfolioWorksAsExpected stamp: 'fr 11/16/2020 01:48:22'!
PASSED!

!testRun: #PortfolioReporterTest #test02TreeStructureReportForPortfolioWithAccountsWorksAsExpected stamp: 'fr 11/16/2020 01:48:22'!
PASSED!

!testRun: #PortfolioReporterTest #test03TreeStructureReportForPortfolioWithAccountsAndPortfoliosWorksAsExpected stamp: 'fr 11/16/2020 01:48:22'!
PASSED!

!testRun: #PortfolioReporterTest #test04AccountsShouldUseADefaultNameIfNoneIsSpecified stamp: 'fr 11/16/2020 01:48:22'!
PASSED!

!testRun: #PortfolioReporterTest #test05SpecialReportForEmptyPortfolioWorksAsExpected stamp: 'fr 11/16/2020 01:48:22'!
PASSED!

!testRun: #PortfolioReporterTest #test06SpecialReportForPortfolioWithAccountsWithAnyKindOfTransactionsWorksAsExpected stamp: 'fr 11/16/2020 01:48:22'!
PASSED!

!testRun: #PortfolioReporterTest #test07SpecialReportForPortfolioWithAccountsAndPortfoliosWithAnyKindOfTransactionsWorksAsExpected stamp: 'fr 11/16/2020 01:48:22'!
PASSED!
!PortfolioReporterTest methodsFor: 'tests - special tree' stamp: 'fr 11/16/2020 01:48:30' prior: 50894764!
test06SpecialReportForPortfolioWithAccountsWithAnyKindOfTransactionsWorksAsExpected

	| portfolio account anotherAccount reporter |
	
	account _ ReceptiveAccount named: 'Cuenta de la familia'.
	anotherAccount _ ReceptiveAccount new.
	
	self performRegularTransactionsWith: account asWellAsTransferTransactionsWithItAnd: anotherAccount.
	
	portfolio _ Portfolio named: 'Portfolio de la familia' with: account.
	
	reporter _ SpecialTreeReporter for: portfolio.

	self assert: reporter specialReport equals: self expectedReportForPortfolioWithAccounts! !

!testRun: #PortfolioReporterTest #test06SpecialReportForPortfolioWithAccountsWithAnyKindOfTransactionsWorksAsExpected stamp: 'fr 11/16/2020 01:48:31'!
PASSED!

!testRun: #PortfolioReporterTest #test01TreeStructureReportForEmptyPortfolioWorksAsExpected stamp: 'fr 11/16/2020 01:48:31'!
PASSED!

!testRun: #PortfolioReporterTest #test02TreeStructureReportForPortfolioWithAccountsWorksAsExpected stamp: 'fr 11/16/2020 01:48:31'!
PASSED!

!testRun: #PortfolioReporterTest #test03TreeStructureReportForPortfolioWithAccountsAndPortfoliosWorksAsExpected stamp: 'fr 11/16/2020 01:48:31'!
PASSED!

!testRun: #PortfolioReporterTest #test04AccountsShouldUseADefaultNameIfNoneIsSpecified stamp: 'fr 11/16/2020 01:48:31'!
PASSED!

!testRun: #PortfolioReporterTest #test05SpecialReportForEmptyPortfolioWorksAsExpected stamp: 'fr 11/16/2020 01:48:31'!
PASSED!

!testRun: #PortfolioReporterTest #test06SpecialReportForPortfolioWithAccountsWithAnyKindOfTransactionsWorksAsExpected stamp: 'fr 11/16/2020 01:48:31'!
PASSED!

!testRun: #PortfolioReporterTest #test07SpecialReportForPortfolioWithAccountsAndPortfoliosWithAnyKindOfTransactionsWorksAsExpected stamp: 'fr 11/16/2020 01:48:31'!
PASSED!
!PortfolioReporterTest methodsFor: 'tests - special tree' stamp: 'fr 11/16/2020 01:48:39' prior: 50894785!
test07SpecialReportForPortfolioWithAccountsAndPortfoliosWithAnyKindOfTransactionsWorksAsExpected

	| portfolio account anotherAccount anotherPortfolio reporter |
	
	account _ ReceptiveAccount named: 'Cuenta de la familia'.
	anotherAccount _ ReceptiveAccount named: 'Cuenta de Juan'.
	
	self performRegularTransactionsWith: account asWellAsTransferTransactionsWithItAnd: anotherAccount.
	
	anotherPortfolio _ Portfolio named: 'Portfolio de Juan' with: anotherAccount.
	portfolio _ Portfolio named: 'Portfolio de la familia' with: account with: anotherPortfolio.

	reporter _ SpecialTreeReporter for: portfolio.
	
	self assert: reporter specialReport equals: self expectedReportForPortfolioWithAccountsAndPortfolios! !

!testRun: #PortfolioReporterTest #test07SpecialReportForPortfolioWithAccountsAndPortfoliosWithAnyKindOfTransactionsWorksAsExpected stamp: 'fr 11/16/2020 01:48:40'!
PASSED!

!testRun: #PortfolioReporterTest #test01TreeStructureReportForEmptyPortfolioWorksAsExpected stamp: 'fr 11/16/2020 01:48:40'!
PASSED!

!testRun: #PortfolioReporterTest #test02TreeStructureReportForPortfolioWithAccountsWorksAsExpected stamp: 'fr 11/16/2020 01:48:40'!
PASSED!

!testRun: #PortfolioReporterTest #test03TreeStructureReportForPortfolioWithAccountsAndPortfoliosWorksAsExpected stamp: 'fr 11/16/2020 01:48:40'!
PASSED!

!testRun: #PortfolioReporterTest #test04AccountsShouldUseADefaultNameIfNoneIsSpecified stamp: 'fr 11/16/2020 01:48:40'!
PASSED!

!testRun: #PortfolioReporterTest #test05SpecialReportForEmptyPortfolioWorksAsExpected stamp: 'fr 11/16/2020 01:48:40'!
PASSED!

!testRun: #PortfolioReporterTest #test06SpecialReportForPortfolioWithAccountsWithAnyKindOfTransactionsWorksAsExpected stamp: 'fr 11/16/2020 01:48:40'!
PASSED!

!testRun: #PortfolioReporterTest #test07SpecialReportForPortfolioWithAccountsAndPortfoliosWithAnyKindOfTransactionsWorksAsExpected stamp: 'fr 11/16/2020 01:48:40'!
PASSED!
!PortfolioReporterTest methodsFor: 'tests - special tree' stamp: 'fr 11/16/2020 01:49:11' prior: 50894931!
test07SpecialReportForPortfolioWithAccountsAndPortfoliosWithAnyKindOfTransactionsWorksAsExpected

	| portfolio account anotherAccount anotherPortfolio reporter |
	
	account _ ReceptiveAccount named: 'Cuenta de la familia'.
	anotherAccount _ ReceptiveAccount named: 'Cuenta de Juan'.
	anotherPortfolio _ Portfolio named: 'Portfolio de Juan' with: anotherAccount.
	portfolio _ Portfolio named: 'Portfolio de la familia' with: account with: anotherPortfolio.
	
	self performRegularTransactionsWith: account asWellAsTransferTransactionsWithItAnd: anotherAccount.

	reporter _ SpecialTreeReporter for: portfolio.
	
	self assert: reporter specialReport equals: self expectedReportForPortfolioWithAccountsAndPortfolios! !
!PortfolioReporterTest methodsFor: 'tests - tree structure' stamp: 'fr 11/16/2020 01:49:49' prior: 50888388!
test01TreeStructureReportForEmptyPortfolioWorksAsExpected

	| portfolio reporter |
	
	portfolio _ Portfolio named: 'Portfolio de la familia'.
	reporter _ TreeStructureReporter for: portfolio.

	self assert: [reporter treeStructure = (OrderedCollection with: 'Portfolio de la familia')]! !
!PortfolioReporterTest methodsFor: 'tests - tree structure' stamp: 'fr 11/16/2020 01:49:59' prior: 50888580!
test02TreeStructureReportForPortfolioWithAccountsWorksAsExpected

	| portfolio account reporter |
	
	account _ ReceptiveAccount named: 'Cuenta de Juan'.
	portfolio _ Portfolio named: 'Portfolio de la familia' with: account.
	reporter _ TreeStructureReporter for: portfolio.

	self assert: [reporter treeStructure = (OrderedCollection with: 'Portfolio de la familia' with: ' Cuenta de Juan')]! !

!testRun: #PortfolioReporterTest #test06SpecialReportForPortfolioWithAccountsWithAnyKindOfTransactionsWorksAsExpected stamp: 'fr 11/16/2020 01:50:25'!
PASSED!

!testRun: #PortfolioReporterTest #test01TreeStructureReportForEmptyPortfolioWorksAsExpected stamp: 'fr 11/16/2020 01:50:25'!
PASSED!

!testRun: #PortfolioReporterTest #test02TreeStructureReportForPortfolioWithAccountsWorksAsExpected stamp: 'fr 11/16/2020 01:50:25'!
PASSED!

!testRun: #PortfolioReporterTest #test03TreeStructureReportForPortfolioWithAccountsAndPortfoliosWorksAsExpected stamp: 'fr 11/16/2020 01:50:25'!
PASSED!

!testRun: #PortfolioReporterTest #test04AccountsShouldUseADefaultNameIfNoneIsSpecified stamp: 'fr 11/16/2020 01:50:25'!
PASSED!

!testRun: #PortfolioReporterTest #test05SpecialReportForEmptyPortfolioWorksAsExpected stamp: 'fr 11/16/2020 01:50:25'!
PASSED!

!testRun: #PortfolioReporterTest #test06SpecialReportForPortfolioWithAccountsWithAnyKindOfTransactionsWorksAsExpected stamp: 'fr 11/16/2020 01:50:25'!
PASSED!

!testRun: #PortfolioReporterTest #test07SpecialReportForPortfolioWithAccountsAndPortfoliosWithAnyKindOfTransactionsWorksAsExpected stamp: 'fr 11/16/2020 01:50:25'!
PASSED!
!PortfolioReporterTest methodsFor: 'tests - special tree' stamp: 'fr 11/16/2020 01:50:31' prior: 50894873!
test06SpecialReportForPortfolioWithAccountsWithAnyKindOfTransactionsWorksAsExpected

	| portfolio account anotherAccount reporter |
	
	account _ ReceptiveAccount named: 'Cuenta de la familia'.
	anotherAccount _ ReceptiveAccount new.
	portfolio _ Portfolio named: 'Portfolio de la familia' with: account.
	
	self performRegularTransactionsWith: account asWellAsTransferTransactionsWithItAnd: anotherAccount.
	
	
	reporter _ SpecialTreeReporter for: portfolio.

	self assert: reporter specialReport equals: self expectedReportForPortfolioWithAccounts! !
!PortfolioReporterTest methodsFor: 'tests - special tree' stamp: 'fr 11/16/2020 01:50:41' prior: 50895086!
test06SpecialReportForPortfolioWithAccountsWithAnyKindOfTransactionsWorksAsExpected

	| portfolio account anotherAccount reporter |
	
	account _ ReceptiveAccount named: 'Cuenta de la familia'.
	anotherAccount _ ReceptiveAccount new.
	portfolio _ Portfolio named: 'Portfolio de la familia' with: account.
	reporter _ SpecialTreeReporter for: portfolio.
	
	self performRegularTransactionsWith: account asWellAsTransferTransactionsWithItAnd: anotherAccount.
	self assert: reporter specialReport equals: self expectedReportForPortfolioWithAccounts! !
!PortfolioReporterTest methodsFor: 'tests - special tree' stamp: 'fr 11/16/2020 01:50:45' prior: 50895107!
test06SpecialReportForPortfolioWithAccountsWithAnyKindOfTransactionsWorksAsExpected

	| portfolio account anotherAccount reporter |
	
	account _ ReceptiveAccount named: 'Cuenta de la familia'.
	anotherAccount _ ReceptiveAccount new.
	
	portfolio _ Portfolio named: 'Portfolio de la familia' with: account.
	reporter _ SpecialTreeReporter for: portfolio.
	
	self performRegularTransactionsWith: account asWellAsTransferTransactionsWithItAnd: anotherAccount.
	self assert: reporter specialReport equals: self expectedReportForPortfolioWithAccounts! !

!testRun: #PortfolioReporterTest #test06SpecialReportForPortfolioWithAccountsWithAnyKindOfTransactionsWorksAsExpected stamp: 'fr 11/16/2020 01:50:47'!
PASSED!

!testRun: #PortfolioReporterTest #test01TreeStructureReportForEmptyPortfolioWorksAsExpected stamp: 'fr 11/16/2020 01:50:47'!
PASSED!

!testRun: #PortfolioReporterTest #test02TreeStructureReportForPortfolioWithAccountsWorksAsExpected stamp: 'fr 11/16/2020 01:50:47'!
PASSED!

!testRun: #PortfolioReporterTest #test03TreeStructureReportForPortfolioWithAccountsAndPortfoliosWorksAsExpected stamp: 'fr 11/16/2020 01:50:47'!
PASSED!

!testRun: #PortfolioReporterTest #test04AccountsShouldUseADefaultNameIfNoneIsSpecified stamp: 'fr 11/16/2020 01:50:47'!
PASSED!

!testRun: #PortfolioReporterTest #test05SpecialReportForEmptyPortfolioWorksAsExpected stamp: 'fr 11/16/2020 01:50:47'!
PASSED!

!testRun: #PortfolioReporterTest #test06SpecialReportForPortfolioWithAccountsWithAnyKindOfTransactionsWorksAsExpected stamp: 'fr 11/16/2020 01:50:47'!
PASSED!

!testRun: #PortfolioReporterTest #test07SpecialReportForPortfolioWithAccountsAndPortfoliosWithAnyKindOfTransactionsWorksAsExpected stamp: 'fr 11/16/2020 01:50:47'!
PASSED!
!PortfolioReporterTest methodsFor: 'tests - special tree' stamp: 'fr 11/16/2020 01:50:56' prior: 50894994!
test07SpecialReportForPortfolioWithAccountsAndPortfoliosWithAnyKindOfTransactionsWorksAsExpected

	| portfolio account anotherAccount anotherPortfolio reporter |
	
	account _ ReceptiveAccount named: 'Cuenta de la familia'.
	anotherAccount _ ReceptiveAccount named: 'Cuenta de Juan'.
	anotherPortfolio _ Portfolio named: 'Portfolio de Juan' with: anotherAccount.
	portfolio _ Portfolio named: 'Portfolio de la familia' with: account with: anotherPortfolio.
	reporter _ SpecialTreeReporter for: portfolio.
	
	self performRegularTransactionsWith: account asWellAsTransferTransactionsWithItAnd: anotherAccount.	
	self assert: reporter specialReport equals: self expectedReportForPortfolioWithAccountsAndPortfolios! !
!PortfolioReporterTest methodsFor: 'tests - special tree' stamp: 'fr 11/16/2020 01:50:59' prior: 50895186!
test07SpecialReportForPortfolioWithAccountsAndPortfoliosWithAnyKindOfTransactionsWorksAsExpected

	| portfolio account anotherAccount anotherPortfolio reporter |
	
	account _ ReceptiveAccount named: 'Cuenta de la familia'.
	anotherAccount _ ReceptiveAccount named: 'Cuenta de Juan'.
	
	anotherPortfolio _ Portfolio named: 'Portfolio de Juan' with: anotherAccount.
	portfolio _ Portfolio named: 'Portfolio de la familia' with: account with: anotherPortfolio.
	reporter _ SpecialTreeReporter for: portfolio.
	
	self performRegularTransactionsWith: account asWellAsTransferTransactionsWithItAnd: anotherAccount.	
	self assert: reporter specialReport equals: self expectedReportForPortfolioWithAccountsAndPortfolios! !
!PortfolioReporterTest methodsFor: 'tests - special tree' stamp: 'fr 11/16/2020 01:51:01' prior: 50895212!
test07SpecialReportForPortfolioWithAccountsAndPortfoliosWithAnyKindOfTransactionsWorksAsExpected

	| portfolio account anotherAccount anotherPortfolio reporter |
	
	account _ ReceptiveAccount named: 'Cuenta de la familia'.
	anotherAccount _ ReceptiveAccount named: 'Cuenta de Juan'.
	
	anotherPortfolio _ Portfolio named: 'Portfolio de Juan' with: anotherAccount.
	portfolio _ Portfolio named: 'Portfolio de la familia' with: account with: anotherPortfolio.
	
	reporter _ SpecialTreeReporter for: portfolio.
	
	self performRegularTransactionsWith: account asWellAsTransferTransactionsWithItAnd: anotherAccount.	
	self assert: reporter specialReport equals: self expectedReportForPortfolioWithAccountsAndPortfolios! !

!testRun: #PortfolioReporterTest #test07SpecialReportForPortfolioWithAccountsAndPortfoliosWithAnyKindOfTransactionsWorksAsExpected stamp: 'fr 11/16/2020 01:51:03'!
PASSED!

!testRun: #PortfolioReporterTest #test01TreeStructureReportForEmptyPortfolioWorksAsExpected stamp: 'fr 11/16/2020 01:51:04'!
PASSED!

!testRun: #PortfolioReporterTest #test02TreeStructureReportForPortfolioWithAccountsWorksAsExpected stamp: 'fr 11/16/2020 01:51:04'!
PASSED!

!testRun: #PortfolioReporterTest #test03TreeStructureReportForPortfolioWithAccountsAndPortfoliosWorksAsExpected stamp: 'fr 11/16/2020 01:51:04'!
PASSED!

!testRun: #PortfolioReporterTest #test04AccountsShouldUseADefaultNameIfNoneIsSpecified stamp: 'fr 11/16/2020 01:51:04'!
PASSED!

!testRun: #PortfolioReporterTest #test05SpecialReportForEmptyPortfolioWorksAsExpected stamp: 'fr 11/16/2020 01:51:04'!
PASSED!

!testRun: #PortfolioReporterTest #test06SpecialReportForPortfolioWithAccountsWithAnyKindOfTransactionsWorksAsExpected stamp: 'fr 11/16/2020 01:51:04'!
PASSED!

!testRun: #PortfolioReporterTest #test07SpecialReportForPortfolioWithAccountsAndPortfoliosWithAnyKindOfTransactionsWorksAsExpected stamp: 'fr 11/16/2020 01:51:04'!
PASSED!
!PortfolioReporterTest methodsFor: 'tests - special tree' stamp: 'fr 11/16/2020 01:51:08' prior: 50895128!
test06SpecialReportForPortfolioWithAccountsWithAnyKindOfTransactionsWorksAsExpected

	| portfolio account anotherAccount reporter |
	
	account _ ReceptiveAccount named: 'Cuenta de la familia'.
	anotherAccount _ ReceptiveAccount new.
	
	portfolio _ Portfolio named: 'Portfolio de la familia' with: account.
	
	reporter _ SpecialTreeReporter for: portfolio.
	
	self performRegularTransactionsWith: account asWellAsTransferTransactionsWithItAnd: anotherAccount.
	self assert: reporter specialReport equals: self expectedReportForPortfolioWithAccounts! !

!testRun: #PortfolioReporterTest #test06SpecialReportForPortfolioWithAccountsWithAnyKindOfTransactionsWorksAsExpected stamp: 'fr 11/16/2020 01:51:09'!
PASSED!

!testRun: #PortfolioReporterTest #test01TreeStructureReportForEmptyPortfolioWorksAsExpected stamp: 'fr 11/16/2020 01:51:09'!
PASSED!

!testRun: #PortfolioReporterTest #test02TreeStructureReportForPortfolioWithAccountsWorksAsExpected stamp: 'fr 11/16/2020 01:51:09'!
PASSED!

!testRun: #PortfolioReporterTest #test03TreeStructureReportForPortfolioWithAccountsAndPortfoliosWorksAsExpected stamp: 'fr 11/16/2020 01:51:09'!
PASSED!

!testRun: #PortfolioReporterTest #test04AccountsShouldUseADefaultNameIfNoneIsSpecified stamp: 'fr 11/16/2020 01:51:09'!
PASSED!

!testRun: #PortfolioReporterTest #test05SpecialReportForEmptyPortfolioWorksAsExpected stamp: 'fr 11/16/2020 01:51:09'!
PASSED!

!testRun: #PortfolioReporterTest #test06SpecialReportForPortfolioWithAccountsWithAnyKindOfTransactionsWorksAsExpected stamp: 'fr 11/16/2020 01:51:09'!
PASSED!

!testRun: #PortfolioReporterTest #test07SpecialReportForPortfolioWithAccountsAndPortfoliosWithAnyKindOfTransactionsWorksAsExpected stamp: 'fr 11/16/2020 01:51:09'!
PASSED!
!PortfolioReporterTest methodsFor: 'tests - tree structure' stamp: 'fr 11/16/2020 01:51:24' prior: 50893482!
test03TreeStructureReportForPortfolioWithAccountsAndPortfoliosWorksAsExpected

	| anotherPortfolio account anotherAccount portfolio reporter |
	
	account _ ReceptiveAccount named: 'Cuenta de Juan'.
	anotherAccount _ ReceptiveAccount named: 'Cuenta de Angeles'.
	
	anotherPortfolio _ Portfolio named: 'Portfolio de Angeles' with: anotherAccount.
	portfolio _ Portfolio named: 'Portfolio de la familia' with: anotherPortfolio with: account.
	
	reporter _ TreeStructureReporter for: portfolio.

	self assert: [reporter treeStructure = (OrderedCollection with: 'Portfolio de la familia' with: ' Portfolio de Angeles' with: '  Cuenta de Angeles' with: ' Cuenta de Juan')]! !
!PortfolioReporterTest methodsFor: 'tests - tree structure' stamp: 'fr 11/16/2020 01:51:32' prior: 50895359!
test03TreeStructureReportForPortfolioWithAccountsAndPortfoliosWorksAsExpected

	| anotherPortfolio account anotherAccount portfolio reporter |
	
	account _ ReceptiveAccount named: 'Cuenta de Juan'.
	anotherAccount _ ReceptiveAccount named: 'Cuenta de Angeles'.
	
	anotherPortfolio _ Portfolio named: 'Portfolio de Angeles' with: anotherAccount.
	portfolio _ Portfolio named: 'Portfolio de la familia' with: anotherPortfolio with: account.
	
	reporter _ TreeStructureReporter for: portfolio.

	self assert: reporter treeStructure equals: (OrderedCollection with: 'Portfolio de la familia' with: ' Portfolio de Angeles' with: '  Cuenta de Angeles' with: ' Cuenta de Juan')! !
!PortfolioReporterTest methodsFor: 'tests - tree structure' stamp: 'fr 11/16/2020 01:51:41' prior: 50889003!
test04AccountsShouldUseADefaultNameIfNoneIsSpecified

	| portfolio account reporter |
	account _ ReceptiveAccount new.
	portfolio _ Portfolio with: account.
	reporter _ TreeStructureReporter for: portfolio.


	self assert: reporter treeStructure equals: (OrderedCollection with: 'Un portfolio' with: ' Una cuenta')! !
!PortfolioReporterTest methodsFor: 'tests - tree structure' stamp: 'fr 11/16/2020 01:52:02' prior: 50895033!
test02TreeStructureReportForPortfolioWithAccountsWorksAsExpected

	| portfolio account reporter |
	
	account _ ReceptiveAccount named: 'Cuenta de Juan'.
	portfolio _ Portfolio named: 'Portfolio de la familia' with: account.
	reporter _ TreeStructureReporter for: portfolio.

	self assert: reporter treeStructure equals: (OrderedCollection with: 'Portfolio de la familia' with: ' Cuenta de Juan')! !
!PortfolioReporterTest methodsFor: 'tests - tree structure' stamp: 'fr 11/16/2020 01:52:10' prior: 50895020!
test01TreeStructureReportForEmptyPortfolioWorksAsExpected

	| portfolio reporter |
	
	portfolio _ Portfolio named: 'Portfolio de la familia'.
	reporter _ TreeStructureReporter for: portfolio.

	self assert: reporter treeStructure equals: (OrderedCollection with: 'Portfolio de la familia')! !

----SNAPSHOT----(16 November 2020 01:54:08) CuisUniversity-4384.image priorSource: 17976094!
!AccountReporterTest methodsFor: 'tests - account summary' stamp: 'fr 11/16/2020 01:54:19' prior: 50878601!
test02AccountSummaryShouldReflectDepositsOnAccounts

	| account reporter |
	
	account _ ReceptiveAccount new.
	reporter _ SummaryReporter for: account.
	Deposit register: 100 on: account. 
	
	self assert: [reporter accountSummary = (OrderedCollection with: 'Dep�sito por 100.' with: 'Balance = 100')]! !

!testRun: #AccountReporterTest #test02AccountSummaryShouldReflectDepositsOnAccounts stamp: 'fr 11/16/2020 01:54:20'!
PASSED!

!testRun: #AccountReporterTest #test01AccountSummaryForAccountWithNoTransactionsShouldJustShowBalanceZero stamp: 'fr 11/16/2020 01:54:20'!
PASSED!

!testRun: #AccountReporterTest #test02AccountSummaryShouldReflectDepositsOnAccounts stamp: 'fr 11/16/2020 01:54:20'!
PASSED!

!testRun: #AccountReporterTest #test03AccountSummaryShouldReflectWithdrawsOnAccounts stamp: 'fr 11/16/2020 01:54:20'!
PASSED!

!testRun: #AccountReporterTest #test04AccountSummaryShouldReflectOutgoingTransfersOnAccounts stamp: 'fr 11/16/2020 01:54:20'!
PASSED!

!testRun: #AccountReporterTest #test05AccountSummaryShouldReflectIncomingTransfersOnAccounts stamp: 'fr 11/16/2020 01:54:20'!
PASSED!

!testRun: #AccountReporterTest #test06AccountSummaryForPortfolioWithNoTransactionsShouldJustShowBalanceZero stamp: 'fr 11/16/2020 01:54:20'!
PASSED!

!testRun: #AccountReporterTest #test07AccountSummaryShouldReflectDepositsOnPortfoliosWithAccounts stamp: 'fr 11/16/2020 01:54:20'!
PASSED!

!testRun: #AccountReporterTest #test08AccountSummaryShouldReflectWithdrawsOnPortfoliosWithAccounts stamp: 'fr 11/16/2020 01:54:20'!
PASSED!

!testRun: #AccountReporterTest #test09AccountSummaryShouldReflectOutgoingAndIncomingTransfersOnPortfoliosWithAccounts stamp: 'fr 11/16/2020 01:54:20'!
PASSED!

!testRun: #AccountReporterTest #test10AccountSummaryShouldReflectDepositsOnPortfoliosWithPortfolios stamp: 'fr 11/16/2020 01:54:20'!
PASSED!

!testRun: #AccountReporterTest #test11AccountSummaryShouldReflectWithdrawsOnPortfoliosWithPortfolios stamp: 'fr 11/16/2020 01:54:20'!
PASSED!

!testRun: #AccountReporterTest #test12AccountSummaryShouldReflectOutgoingAndIncomingTransfersOnPortfoliosWithPortfolios stamp: 'fr 11/16/2020 01:54:20'!
PASSED!

!testRun: #AccountReporterTest #test13NetTransferForAccountWithNoTransactionsShouldBeZero stamp: 'fr 11/16/2020 01:54:20'!
PASSED!

!testRun: #AccountReporterTest #test14NetTransferForAccountWithAnOutgoingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 01:54:20'!
PASSED!

!testRun: #AccountReporterTest #test15NetTransferForAccountWithAnIncomingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 01:54:20'!
PASSED!

!testRun: #AccountReporterTest #test16NetTransferForAccountShouldNotReflectDeposits stamp: 'fr 11/16/2020 01:54:20'!
PASSED!

!testRun: #AccountReporterTest #test17NetTransferForAccountShouldNotReflectWithdraws stamp: 'fr 11/16/2020 01:54:20'!
PASSED!

!testRun: #AccountReporterTest #test18NetTransferForPortfolioWithNoTransactionsShouldBeZero stamp: 'fr 11/16/2020 01:54:20'!
PASSED!

!testRun: #AccountReporterTest #test19NetTransferForPortfolioWithAnOutgoingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 01:54:20'!
PASSED!

!testRun: #AccountReporterTest #test20NetTransferForPortfolioWithAnIncomingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 01:54:20'!
PASSED!

!testRun: #AccountReporterTest #test21NetTransferForPortfolioShouldNotReflectDeposits stamp: 'fr 11/16/2020 01:54:20'!
PASSED!

!testRun: #AccountReporterTest #test22NetTransferForPortfolioShouldNotReflectWithdraws stamp: 'fr 11/16/2020 01:54:20'!
PASSED!

!testRun: #AccountReporterTest #test23NetTransferForPortfoliosWithPortfoliosShouldReflectOutgoingAndIncomingTransfers stamp: 'fr 11/16/2020 01:54:20'!
PASSED!

!testRun: #AccountReporterTest #test24NetTransferForPortfoliosWithPortfoliosShouldNotRelfectDepositsOrWithdraws stamp: 'fr 11/16/2020 01:54:20'!
PASSED!
!AccountReporterTest methodsFor: 'tests - account summary' stamp: 'fr 11/16/2020 01:54:25' prior: 50878736!
test03AccountSummaryShouldReflectWithdrawsOnAccounts

	| account reporter |
	
	account _ ReceptiveAccount new.
	reporter _ SummaryReporter for: account.
	Withdraw register: 100 on: account. 
	
	self assert: [reporter accountSummary = (OrderedCollection with: 'Extracci�n por 100.' with: 'Balance = -100')]! !
!AccountReporterTest methodsFor: 'tests - account summary' stamp: 'fr 11/16/2020 01:54:36' prior: 50878859!
test04AccountSummaryShouldReflectOutgoingTransfersOnAccounts

	| account anotherAccount reporter |
	
	account _ ReceptiveAccount new.
	reporter _ SummaryReporter for: account.
	anotherAccount _ ReceptiveAccount new.
	
	Transfer move: 100 from: account to: anotherAccount.
	
	self assert: [reporter accountSummary = (OrderedCollection with: 'Salida por transferencia de 100.' with: 'Balance = -100')]! !

!testRun: #AccountReporterTest #test04AccountSummaryShouldReflectOutgoingTransfersOnAccounts stamp: 'fr 11/16/2020 01:54:37'!
PASSED!

!testRun: #AccountReporterTest #test01AccountSummaryForAccountWithNoTransactionsShouldJustShowBalanceZero stamp: 'fr 11/16/2020 01:54:37'!
PASSED!

!testRun: #AccountReporterTest #test02AccountSummaryShouldReflectDepositsOnAccounts stamp: 'fr 11/16/2020 01:54:37'!
PASSED!

!testRun: #AccountReporterTest #test03AccountSummaryShouldReflectWithdrawsOnAccounts stamp: 'fr 11/16/2020 01:54:37'!
PASSED!

!testRun: #AccountReporterTest #test04AccountSummaryShouldReflectOutgoingTransfersOnAccounts stamp: 'fr 11/16/2020 01:54:37'!
PASSED!

!testRun: #AccountReporterTest #test05AccountSummaryShouldReflectIncomingTransfersOnAccounts stamp: 'fr 11/16/2020 01:54:37'!
PASSED!

!testRun: #AccountReporterTest #test06AccountSummaryForPortfolioWithNoTransactionsShouldJustShowBalanceZero stamp: 'fr 11/16/2020 01:54:37'!
PASSED!

!testRun: #AccountReporterTest #test07AccountSummaryShouldReflectDepositsOnPortfoliosWithAccounts stamp: 'fr 11/16/2020 01:54:37'!
PASSED!

!testRun: #AccountReporterTest #test08AccountSummaryShouldReflectWithdrawsOnPortfoliosWithAccounts stamp: 'fr 11/16/2020 01:54:37'!
PASSED!

!testRun: #AccountReporterTest #test09AccountSummaryShouldReflectOutgoingAndIncomingTransfersOnPortfoliosWithAccounts stamp: 'fr 11/16/2020 01:54:37'!
PASSED!

!testRun: #AccountReporterTest #test10AccountSummaryShouldReflectDepositsOnPortfoliosWithPortfolios stamp: 'fr 11/16/2020 01:54:37'!
PASSED!

!testRun: #AccountReporterTest #test11AccountSummaryShouldReflectWithdrawsOnPortfoliosWithPortfolios stamp: 'fr 11/16/2020 01:54:37'!
PASSED!

!testRun: #AccountReporterTest #test12AccountSummaryShouldReflectOutgoingAndIncomingTransfersOnPortfoliosWithPortfolios stamp: 'fr 11/16/2020 01:54:37'!
PASSED!

!testRun: #AccountReporterTest #test13NetTransferForAccountWithNoTransactionsShouldBeZero stamp: 'fr 11/16/2020 01:54:37'!
PASSED!

!testRun: #AccountReporterTest #test14NetTransferForAccountWithAnOutgoingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 01:54:37'!
PASSED!

!testRun: #AccountReporterTest #test15NetTransferForAccountWithAnIncomingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 01:54:37'!
PASSED!

!testRun: #AccountReporterTest #test16NetTransferForAccountShouldNotReflectDeposits stamp: 'fr 11/16/2020 01:54:37'!
PASSED!

!testRun: #AccountReporterTest #test17NetTransferForAccountShouldNotReflectWithdraws stamp: 'fr 11/16/2020 01:54:37'!
PASSED!

!testRun: #AccountReporterTest #test18NetTransferForPortfolioWithNoTransactionsShouldBeZero stamp: 'fr 11/16/2020 01:54:37'!
PASSED!

!testRun: #AccountReporterTest #test19NetTransferForPortfolioWithAnOutgoingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 01:54:37'!
PASSED!

!testRun: #AccountReporterTest #test20NetTransferForPortfolioWithAnIncomingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 01:54:37'!
PASSED!

!testRun: #AccountReporterTest #test21NetTransferForPortfolioShouldNotReflectDeposits stamp: 'fr 11/16/2020 01:54:37'!
PASSED!

!testRun: #AccountReporterTest #test22NetTransferForPortfolioShouldNotReflectWithdraws stamp: 'fr 11/16/2020 01:54:37'!
PASSED!

!testRun: #AccountReporterTest #test23NetTransferForPortfoliosWithPortfoliosShouldReflectOutgoingAndIncomingTransfers stamp: 'fr 11/16/2020 01:54:37'!
PASSED!

!testRun: #AccountReporterTest #test24NetTransferForPortfoliosWithPortfoliosShouldNotRelfectDepositsOrWithdraws stamp: 'fr 11/16/2020 01:54:37'!
PASSED!
!AccountReporterTest methodsFor: 'tests - account summary' stamp: 'fr 11/16/2020 01:54:42' prior: 50878985!
test05AccountSummaryShouldReflectIncomingTransfersOnAccounts

	| account anotherAccount reporter |
	
	account _ ReceptiveAccount new.
	reporter _ SummaryReporter for: account.
	anotherAccount _ ReceptiveAccount new.
	
	Transfer move: 100 from: anotherAccount to: account.
	
	self assert: [reporter accountSummary = (OrderedCollection with: 'Entrada por transferencia de 100.' with: 'Balance = 100')]! !
!AccountReporterTest methodsFor: 'tests - account summary' stamp: 'fr 11/16/2020 01:54:56' prior: 50879123!
test07AccountSummaryShouldReflectDepositsOnPortfoliosWithAccounts

	| portfolio account reporter |
	
	portfolio _ Portfolio new.
	reporter _ SummaryReporter for: portfolio.
	account _ ReceptiveAccount new.
	Deposit register: 100 on: account.
	
	portfolio add: account.
		
	self assert: [reporter accountSummary = (OrderedCollection with: 'Dep�sito por 100.' with: 'Balance = 100')]! !
!AccountReporterTest methodsFor: 'tests - account summary' stamp: 'fr 11/16/2020 01:55:17' prior: 50895734!
test07AccountSummaryShouldReflectDepositsOnPortfoliosWithAccounts

	| portfolio account reporter |
	
	portfolio _ Portfolio new.
	account _ ReceptiveAccount new.
	reporter _ SummaryReporter for: portfolio.
	Deposit register: 100 on: account.
	
	portfolio add: account.
		
	self assert: [reporter accountSummary = (OrderedCollection with: 'Dep�sito por 100.' with: 'Balance = 100')]! !
!AccountReporterTest methodsFor: 'tests - account summary' stamp: 'fr 11/16/2020 01:55:36' prior: 50895750!
test07AccountSummaryShouldReflectDepositsOnPortfoliosWithAccounts

	| portfolio account reporter |
	
	account _ ReceptiveAccount new.
	portfolio _ Portfolio with: account.
	reporter _ SummaryReporter for: portfolio.
	Deposit register: 100 on: account.
			
	self assert: [reporter accountSummary = (OrderedCollection with: 'Dep�sito por 100.' with: 'Balance = 100')]! !

!testRun: #AccountReporterTest #test07AccountSummaryShouldReflectDepositsOnPortfoliosWithAccounts stamp: 'fr 11/16/2020 01:55:36'!
PASSED!

!testRun: #AccountReporterTest #test01AccountSummaryForAccountWithNoTransactionsShouldJustShowBalanceZero stamp: 'fr 11/16/2020 01:55:36'!
PASSED!

!testRun: #AccountReporterTest #test02AccountSummaryShouldReflectDepositsOnAccounts stamp: 'fr 11/16/2020 01:55:36'!
PASSED!

!testRun: #AccountReporterTest #test03AccountSummaryShouldReflectWithdrawsOnAccounts stamp: 'fr 11/16/2020 01:55:36'!
PASSED!

!testRun: #AccountReporterTest #test04AccountSummaryShouldReflectOutgoingTransfersOnAccounts stamp: 'fr 11/16/2020 01:55:36'!
PASSED!

!testRun: #AccountReporterTest #test05AccountSummaryShouldReflectIncomingTransfersOnAccounts stamp: 'fr 11/16/2020 01:55:36'!
PASSED!

!testRun: #AccountReporterTest #test06AccountSummaryForPortfolioWithNoTransactionsShouldJustShowBalanceZero stamp: 'fr 11/16/2020 01:55:36'!
PASSED!

!testRun: #AccountReporterTest #test07AccountSummaryShouldReflectDepositsOnPortfoliosWithAccounts stamp: 'fr 11/16/2020 01:55:36'!
PASSED!

!testRun: #AccountReporterTest #test08AccountSummaryShouldReflectWithdrawsOnPortfoliosWithAccounts stamp: 'fr 11/16/2020 01:55:36'!
PASSED!

!testRun: #AccountReporterTest #test09AccountSummaryShouldReflectOutgoingAndIncomingTransfersOnPortfoliosWithAccounts stamp: 'fr 11/16/2020 01:55:36'!
PASSED!

!testRun: #AccountReporterTest #test10AccountSummaryShouldReflectDepositsOnPortfoliosWithPortfolios stamp: 'fr 11/16/2020 01:55:36'!
PASSED!

!testRun: #AccountReporterTest #test11AccountSummaryShouldReflectWithdrawsOnPortfoliosWithPortfolios stamp: 'fr 11/16/2020 01:55:36'!
PASSED!

!testRun: #AccountReporterTest #test12AccountSummaryShouldReflectOutgoingAndIncomingTransfersOnPortfoliosWithPortfolios stamp: 'fr 11/16/2020 01:55:36'!
PASSED!

!testRun: #AccountReporterTest #test13NetTransferForAccountWithNoTransactionsShouldBeZero stamp: 'fr 11/16/2020 01:55:36'!
PASSED!

!testRun: #AccountReporterTest #test14NetTransferForAccountWithAnOutgoingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 01:55:36'!
PASSED!

!testRun: #AccountReporterTest #test15NetTransferForAccountWithAnIncomingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 01:55:36'!
PASSED!

!testRun: #AccountReporterTest #test16NetTransferForAccountShouldNotReflectDeposits stamp: 'fr 11/16/2020 01:55:36'!
PASSED!

!testRun: #AccountReporterTest #test17NetTransferForAccountShouldNotReflectWithdraws stamp: 'fr 11/16/2020 01:55:36'!
PASSED!

!testRun: #AccountReporterTest #test18NetTransferForPortfolioWithNoTransactionsShouldBeZero stamp: 'fr 11/16/2020 01:55:36'!
PASSED!

!testRun: #AccountReporterTest #test19NetTransferForPortfolioWithAnOutgoingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 01:55:36'!
PASSED!

!testRun: #AccountReporterTest #test20NetTransferForPortfolioWithAnIncomingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 01:55:36'!
PASSED!

!testRun: #AccountReporterTest #test21NetTransferForPortfolioShouldNotReflectDeposits stamp: 'fr 11/16/2020 01:55:36'!
PASSED!

!testRun: #AccountReporterTest #test22NetTransferForPortfolioShouldNotReflectWithdraws stamp: 'fr 11/16/2020 01:55:36'!
PASSED!

!testRun: #AccountReporterTest #test23NetTransferForPortfoliosWithPortfoliosShouldReflectOutgoingAndIncomingTransfers stamp: 'fr 11/16/2020 01:55:36'!
PASSED!

!testRun: #AccountReporterTest #test24NetTransferForPortfoliosWithPortfoliosShouldNotRelfectDepositsOrWithdraws stamp: 'fr 11/16/2020 01:55:37'!
PASSED!
!AccountReporterTest methodsFor: 'tests - account summary' stamp: 'fr 11/16/2020 01:56:01' prior: 50879248!
test08AccountSummaryShouldReflectWithdrawsOnPortfoliosWithAccounts

	| portfolio account reporter |
	
	account _ ReceptiveAccount new.
	portfolio _ Portfolio with: account.
	reporter _ SummaryReporter for: portfolio.
	Withdraw register: 100 on: account.
			
	self assert: [reporter accountSummary = (OrderedCollection with: 'Extracci�n por 100.' with: 'Balance = -100')]! !

!testRun: #AccountReporterTest #test08AccountSummaryShouldReflectWithdrawsOnPortfoliosWithAccounts stamp: 'fr 11/16/2020 01:56:02'!
PASSED!

!testRun: #AccountReporterTest #test01AccountSummaryForAccountWithNoTransactionsShouldJustShowBalanceZero stamp: 'fr 11/16/2020 01:56:02'!
PASSED!

!testRun: #AccountReporterTest #test02AccountSummaryShouldReflectDepositsOnAccounts stamp: 'fr 11/16/2020 01:56:02'!
PASSED!

!testRun: #AccountReporterTest #test03AccountSummaryShouldReflectWithdrawsOnAccounts stamp: 'fr 11/16/2020 01:56:02'!
PASSED!

!testRun: #AccountReporterTest #test04AccountSummaryShouldReflectOutgoingTransfersOnAccounts stamp: 'fr 11/16/2020 01:56:02'!
PASSED!

!testRun: #AccountReporterTest #test05AccountSummaryShouldReflectIncomingTransfersOnAccounts stamp: 'fr 11/16/2020 01:56:02'!
PASSED!

!testRun: #AccountReporterTest #test06AccountSummaryForPortfolioWithNoTransactionsShouldJustShowBalanceZero stamp: 'fr 11/16/2020 01:56:02'!
PASSED!

!testRun: #AccountReporterTest #test07AccountSummaryShouldReflectDepositsOnPortfoliosWithAccounts stamp: 'fr 11/16/2020 01:56:02'!
PASSED!

!testRun: #AccountReporterTest #test08AccountSummaryShouldReflectWithdrawsOnPortfoliosWithAccounts stamp: 'fr 11/16/2020 01:56:02'!
PASSED!

!testRun: #AccountReporterTest #test09AccountSummaryShouldReflectOutgoingAndIncomingTransfersOnPortfoliosWithAccounts stamp: 'fr 11/16/2020 01:56:02'!
PASSED!

!testRun: #AccountReporterTest #test10AccountSummaryShouldReflectDepositsOnPortfoliosWithPortfolios stamp: 'fr 11/16/2020 01:56:02'!
PASSED!

!testRun: #AccountReporterTest #test11AccountSummaryShouldReflectWithdrawsOnPortfoliosWithPortfolios stamp: 'fr 11/16/2020 01:56:02'!
PASSED!

!testRun: #AccountReporterTest #test12AccountSummaryShouldReflectOutgoingAndIncomingTransfersOnPortfoliosWithPortfolios stamp: 'fr 11/16/2020 01:56:02'!
PASSED!

!testRun: #AccountReporterTest #test13NetTransferForAccountWithNoTransactionsShouldBeZero stamp: 'fr 11/16/2020 01:56:02'!
PASSED!

!testRun: #AccountReporterTest #test14NetTransferForAccountWithAnOutgoingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 01:56:02'!
PASSED!

!testRun: #AccountReporterTest #test15NetTransferForAccountWithAnIncomingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 01:56:02'!
PASSED!

!testRun: #AccountReporterTest #test16NetTransferForAccountShouldNotReflectDeposits stamp: 'fr 11/16/2020 01:56:02'!
PASSED!

!testRun: #AccountReporterTest #test17NetTransferForAccountShouldNotReflectWithdraws stamp: 'fr 11/16/2020 01:56:02'!
PASSED!

!testRun: #AccountReporterTest #test18NetTransferForPortfolioWithNoTransactionsShouldBeZero stamp: 'fr 11/16/2020 01:56:02'!
PASSED!

!testRun: #AccountReporterTest #test19NetTransferForPortfolioWithAnOutgoingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 01:56:02'!
PASSED!

!testRun: #AccountReporterTest #test20NetTransferForPortfolioWithAnIncomingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 01:56:02'!
PASSED!

!testRun: #AccountReporterTest #test21NetTransferForPortfolioShouldNotReflectDeposits stamp: 'fr 11/16/2020 01:56:02'!
PASSED!

!testRun: #AccountReporterTest #test22NetTransferForPortfolioShouldNotReflectWithdraws stamp: 'fr 11/16/2020 01:56:02'!
PASSED!

!testRun: #AccountReporterTest #test23NetTransferForPortfoliosWithPortfoliosShouldReflectOutgoingAndIncomingTransfers stamp: 'fr 11/16/2020 01:56:02'!
PASSED!

!testRun: #AccountReporterTest #test24NetTransferForPortfoliosWithPortfoliosShouldNotRelfectDepositsOrWithdraws stamp: 'fr 11/16/2020 01:56:02'!
PASSED!
!AccountReporterTest methodsFor: 'tests - account summary' stamp: 'fr 11/16/2020 01:56:26' prior: 50879374!
test09AccountSummaryShouldReflectOutgoingAndIncomingTransfersOnPortfoliosWithAccounts

	| portfolio account anotherAccount reporter |
	
	account _ ReceptiveAccount new.
	anotherAccount _ ReceptiveAccount new.
	portfolio _ Portfolio with: account with: anotherAccount .
	reporter _ SummaryReporter for: portfolio.

	Transfer move: 10 from: account to: anotherAccount.
		
	self assert: [reporter accountSummary = (OrderedCollection with: 'Salida por transferencia de 10.' with: 'Entrada por transferencia de 10.' with: 'Balance = 0')]! !
!AccountReporterTest methodsFor: 'tests - account summary' stamp: 'fr 11/16/2020 01:56:26' prior: 50896017!
test09AccountSummaryShouldReflectOutgoingAndIncomingTransfersOnPortfoliosWithAccounts

	| portfolio account anotherAccount reporter |
	
	account _ ReceptiveAccount new.
	anotherAccount _ ReceptiveAccount new.
	portfolio _ Portfolio with: account with: anotherAccount.
	reporter _ SummaryReporter for: portfolio.

	Transfer move: 10 from: account to: anotherAccount.
		
	self assert: [reporter accountSummary = (OrderedCollection with: 'Salida por transferencia de 10.' with: 'Entrada por transferencia de 10.' with: 'Balance = 0')]! !

!testRun: #AccountReporterTest #test09AccountSummaryShouldReflectOutgoingAndIncomingTransfersOnPortfoliosWithAccounts stamp: 'fr 11/16/2020 01:56:27'!
PASSED!

!testRun: #AccountReporterTest #test01AccountSummaryForAccountWithNoTransactionsShouldJustShowBalanceZero stamp: 'fr 11/16/2020 01:56:27'!
PASSED!

!testRun: #AccountReporterTest #test02AccountSummaryShouldReflectDepositsOnAccounts stamp: 'fr 11/16/2020 01:56:27'!
PASSED!

!testRun: #AccountReporterTest #test03AccountSummaryShouldReflectWithdrawsOnAccounts stamp: 'fr 11/16/2020 01:56:27'!
PASSED!

!testRun: #AccountReporterTest #test04AccountSummaryShouldReflectOutgoingTransfersOnAccounts stamp: 'fr 11/16/2020 01:56:27'!
PASSED!

!testRun: #AccountReporterTest #test05AccountSummaryShouldReflectIncomingTransfersOnAccounts stamp: 'fr 11/16/2020 01:56:27'!
PASSED!

!testRun: #AccountReporterTest #test06AccountSummaryForPortfolioWithNoTransactionsShouldJustShowBalanceZero stamp: 'fr 11/16/2020 01:56:27'!
PASSED!

!testRun: #AccountReporterTest #test07AccountSummaryShouldReflectDepositsOnPortfoliosWithAccounts stamp: 'fr 11/16/2020 01:56:27'!
PASSED!

!testRun: #AccountReporterTest #test08AccountSummaryShouldReflectWithdrawsOnPortfoliosWithAccounts stamp: 'fr 11/16/2020 01:56:27'!
PASSED!

!testRun: #AccountReporterTest #test09AccountSummaryShouldReflectOutgoingAndIncomingTransfersOnPortfoliosWithAccounts stamp: 'fr 11/16/2020 01:56:27'!
PASSED!

!testRun: #AccountReporterTest #test10AccountSummaryShouldReflectDepositsOnPortfoliosWithPortfolios stamp: 'fr 11/16/2020 01:56:27'!
PASSED!

!testRun: #AccountReporterTest #test11AccountSummaryShouldReflectWithdrawsOnPortfoliosWithPortfolios stamp: 'fr 11/16/2020 01:56:27'!
PASSED!

!testRun: #AccountReporterTest #test12AccountSummaryShouldReflectOutgoingAndIncomingTransfersOnPortfoliosWithPortfolios stamp: 'fr 11/16/2020 01:56:27'!
PASSED!

!testRun: #AccountReporterTest #test13NetTransferForAccountWithNoTransactionsShouldBeZero stamp: 'fr 11/16/2020 01:56:27'!
PASSED!

!testRun: #AccountReporterTest #test14NetTransferForAccountWithAnOutgoingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 01:56:27'!
PASSED!

!testRun: #AccountReporterTest #test15NetTransferForAccountWithAnIncomingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 01:56:27'!
PASSED!

!testRun: #AccountReporterTest #test16NetTransferForAccountShouldNotReflectDeposits stamp: 'fr 11/16/2020 01:56:27'!
PASSED!

!testRun: #AccountReporterTest #test17NetTransferForAccountShouldNotReflectWithdraws stamp: 'fr 11/16/2020 01:56:27'!
PASSED!

!testRun: #AccountReporterTest #test18NetTransferForPortfolioWithNoTransactionsShouldBeZero stamp: 'fr 11/16/2020 01:56:27'!
PASSED!

!testRun: #AccountReporterTest #test19NetTransferForPortfolioWithAnOutgoingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 01:56:27'!
PASSED!

!testRun: #AccountReporterTest #test20NetTransferForPortfolioWithAnIncomingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 01:56:27'!
PASSED!

!testRun: #AccountReporterTest #test21NetTransferForPortfolioShouldNotReflectDeposits stamp: 'fr 11/16/2020 01:56:27'!
PASSED!

!testRun: #AccountReporterTest #test22NetTransferForPortfolioShouldNotReflectWithdraws stamp: 'fr 11/16/2020 01:56:27'!
PASSED!

!testRun: #AccountReporterTest #test23NetTransferForPortfoliosWithPortfoliosShouldReflectOutgoingAndIncomingTransfers stamp: 'fr 11/16/2020 01:56:27'!
PASSED!

!testRun: #AccountReporterTest #test24NetTransferForPortfoliosWithPortfoliosShouldNotRelfectDepositsOrWithdraws stamp: 'fr 11/16/2020 01:56:27'!
PASSED!
!AccountReporterTest methodsFor: 'tests - account summary' stamp: 'fr 11/16/2020 01:58:34' prior: 50895578!
test03AccountSummaryShouldReflectWithdrawsOnAccounts

	| account1 reporter1 |
	
	account1 _ ReceptiveAccount new.
	reporter1 _ SummaryReporter for: account1.
	Withdraw register: 100 on: account1. 
	
	self assert: [reporter1 accountSummary = (OrderedCollection with: 'Extracci�n por 100.' with: 'Balance = -100')]! !
!AccountReporterTest methodsFor: 'as yet unclassified' stamp: 'fr 11/16/2020 01:58:39' prior: 50896169!
test03AccountSummaryShouldReflectWithdrawsOnAccounts

	|  reporter1 |
	
	account1 _ ReceptiveAccount new.
	reporter1 _ SummaryReporter for: account1.
	Withdraw register: 100 on: account1. 
	
	self assert: [reporter1 accountSummary = (OrderedCollection with: 'Extracci�n por 100.' with: 'Balance = -100')]! !

!classDefinition: #AccountReporterTest category: 'Portfolio-Part-II-Exercise' stamp: 'fr 11/16/2020 01:58:39'!
TestCase subclass: #AccountReporterTest
	instanceVariableNames: 'account1'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Part-II-Exercise'!
!AccountReporterTest methodsFor: 'as yet unclassified' stamp: 'fr 11/16/2020 01:58:45' prior: 50896183!
test03AccountSummaryShouldReflectWithdrawsOnAccounts

	 
	
	account1 _ ReceptiveAccount new.
	reporter1 _ SummaryReporter for: account1.
	Withdraw register: 100 on: account1. 
	
	self assert: [reporter1 accountSummary = (OrderedCollection with: 'Extracci�n por 100.' with: 'Balance = -100')]! !

!classDefinition: #AccountReporterTest category: 'Portfolio-Part-II-Exercise' stamp: 'fr 11/16/2020 01:58:45'!
TestCase subclass: #AccountReporterTest
	instanceVariableNames: 'account1 reporter1'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Part-II-Exercise'!
!AccountReporterTest methodsFor: 'tests - account summary' stamp: 'fr 11/16/2020 01:58:49' prior: 50896205!
test03AccountSummaryShouldReflectWithdrawsOnAccounts
	
	account1 _ ReceptiveAccount new.
	reporter1 _ SummaryReporter for: account1.
	Withdraw register: 100 on: account1. 
	
	self assert: [reporter1 accountSummary = (OrderedCollection with: 'Extracci�n por 100.' with: 'Balance = -100')]! !

!testRun: #AccountReporterTest #test03AccountSummaryShouldReflectWithdrawsOnAccounts stamp: 'fr 11/16/2020 01:58:53'!
PASSED!

!testRun: #AccountReporterTest #test01AccountSummaryForAccountWithNoTransactionsShouldJustShowBalanceZero stamp: 'fr 11/16/2020 01:58:53'!
PASSED!

!testRun: #AccountReporterTest #test02AccountSummaryShouldReflectDepositsOnAccounts stamp: 'fr 11/16/2020 01:58:53'!
PASSED!

!testRun: #AccountReporterTest #test03AccountSummaryShouldReflectWithdrawsOnAccounts stamp: 'fr 11/16/2020 01:58:53'!
PASSED!

!testRun: #AccountReporterTest #test04AccountSummaryShouldReflectOutgoingTransfersOnAccounts stamp: 'fr 11/16/2020 01:58:53'!
PASSED!

!testRun: #AccountReporterTest #test05AccountSummaryShouldReflectIncomingTransfersOnAccounts stamp: 'fr 11/16/2020 01:58:53'!
PASSED!

!testRun: #AccountReporterTest #test06AccountSummaryForPortfolioWithNoTransactionsShouldJustShowBalanceZero stamp: 'fr 11/16/2020 01:58:53'!
PASSED!

!testRun: #AccountReporterTest #test07AccountSummaryShouldReflectDepositsOnPortfoliosWithAccounts stamp: 'fr 11/16/2020 01:58:53'!
PASSED!

!testRun: #AccountReporterTest #test08AccountSummaryShouldReflectWithdrawsOnPortfoliosWithAccounts stamp: 'fr 11/16/2020 01:58:53'!
PASSED!

!testRun: #AccountReporterTest #test09AccountSummaryShouldReflectOutgoingAndIncomingTransfersOnPortfoliosWithAccounts stamp: 'fr 11/16/2020 01:58:53'!
PASSED!

!testRun: #AccountReporterTest #test10AccountSummaryShouldReflectDepositsOnPortfoliosWithPortfolios stamp: 'fr 11/16/2020 01:58:53'!
PASSED!

!testRun: #AccountReporterTest #test11AccountSummaryShouldReflectWithdrawsOnPortfoliosWithPortfolios stamp: 'fr 11/16/2020 01:58:53'!
PASSED!

!testRun: #AccountReporterTest #test12AccountSummaryShouldReflectOutgoingAndIncomingTransfersOnPortfoliosWithPortfolios stamp: 'fr 11/16/2020 01:58:53'!
PASSED!

!testRun: #AccountReporterTest #test13NetTransferForAccountWithNoTransactionsShouldBeZero stamp: 'fr 11/16/2020 01:58:53'!
PASSED!

!testRun: #AccountReporterTest #test14NetTransferForAccountWithAnOutgoingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 01:58:53'!
PASSED!

!testRun: #AccountReporterTest #test15NetTransferForAccountWithAnIncomingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 01:58:53'!
PASSED!

!testRun: #AccountReporterTest #test16NetTransferForAccountShouldNotReflectDeposits stamp: 'fr 11/16/2020 01:58:53'!
PASSED!

!testRun: #AccountReporterTest #test17NetTransferForAccountShouldNotReflectWithdraws stamp: 'fr 11/16/2020 01:58:53'!
PASSED!

!testRun: #AccountReporterTest #test18NetTransferForPortfolioWithNoTransactionsShouldBeZero stamp: 'fr 11/16/2020 01:58:53'!
PASSED!

!testRun: #AccountReporterTest #test19NetTransferForPortfolioWithAnOutgoingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 01:58:53'!
PASSED!

!testRun: #AccountReporterTest #test20NetTransferForPortfolioWithAnIncomingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 01:58:53'!
PASSED!

!testRun: #AccountReporterTest #test21NetTransferForPortfolioShouldNotReflectDeposits stamp: 'fr 11/16/2020 01:58:53'!
PASSED!

!testRun: #AccountReporterTest #test22NetTransferForPortfolioShouldNotReflectWithdraws stamp: 'fr 11/16/2020 01:58:53'!
PASSED!

!testRun: #AccountReporterTest #test23NetTransferForPortfoliosWithPortfoliosShouldReflectOutgoingAndIncomingTransfers stamp: 'fr 11/16/2020 01:58:53'!
PASSED!

!testRun: #AccountReporterTest #test24NetTransferForPortfoliosWithPortfoliosShouldNotRelfectDepositsOrWithdraws stamp: 'fr 11/16/2020 01:58:53'!
PASSED!
!AccountReporterTest methodsFor: 'tests - account summary' stamp: 'fr 11/16/2020 01:59:29'!
createNewAccountAndReporterForIt
	
	account1 _ ReceptiveAccount new.
	reporter1 _ SummaryReporter for: account1.! !
!AccountReporterTest methodsFor: 'tests - account summary' stamp: 'fr 11/16/2020 01:59:51' prior: 50896227!
test03AccountSummaryShouldReflectWithdrawsOnAccounts
	
	self createNewAccountAndReporterForIt
	Withdraw register: 100 on: account1. 
	
	self assert: [reporter1 accountSummary = (OrderedCollection with: 'Extracci�n por 100.' with: 'Balance = -100')]! !
!AccountReporterTest methodsFor: 'tests - account summary' stamp: 'fr 11/16/2020 02:00:06' prior: 50895455!
test02AccountSummaryShouldReflectDepositsOnAccounts

	self createNewAccountAndReporterForIt.
	Deposit register: 100 on: account1. 
	
	self assert: [reporter1 accountSummary = (OrderedCollection with: 'Dep�sito por 100.' with: 'Balance = 100')]! !

!testRun: #AccountReporterTest #test02AccountSummaryShouldReflectDepositsOnAccounts stamp: 'fr 11/16/2020 02:00:07'!
PASSED!

!testRun: #AccountReporterTest #test01AccountSummaryForAccountWithNoTransactionsShouldJustShowBalanceZero stamp: 'fr 11/16/2020 02:00:07'!
PASSED!

!testRun: #AccountReporterTest #test02AccountSummaryShouldReflectDepositsOnAccounts stamp: 'fr 11/16/2020 02:00:07'!
PASSED!

!testRun: #AccountReporterTest #test03AccountSummaryShouldReflectWithdrawsOnAccounts stamp: 'fr 11/16/2020 02:00:07'!
ERROR!

!testRun: #AccountReporterTest #test04AccountSummaryShouldReflectOutgoingTransfersOnAccounts stamp: 'fr 11/16/2020 02:00:07'!
PASSED!

!testRun: #AccountReporterTest #test05AccountSummaryShouldReflectIncomingTransfersOnAccounts stamp: 'fr 11/16/2020 02:00:07'!
PASSED!

!testRun: #AccountReporterTest #test06AccountSummaryForPortfolioWithNoTransactionsShouldJustShowBalanceZero stamp: 'fr 11/16/2020 02:00:07'!
PASSED!

!testRun: #AccountReporterTest #test07AccountSummaryShouldReflectDepositsOnPortfoliosWithAccounts stamp: 'fr 11/16/2020 02:00:07'!
PASSED!

!testRun: #AccountReporterTest #test08AccountSummaryShouldReflectWithdrawsOnPortfoliosWithAccounts stamp: 'fr 11/16/2020 02:00:07'!
PASSED!

!testRun: #AccountReporterTest #test09AccountSummaryShouldReflectOutgoingAndIncomingTransfersOnPortfoliosWithAccounts stamp: 'fr 11/16/2020 02:00:07'!
PASSED!

!testRun: #AccountReporterTest #test10AccountSummaryShouldReflectDepositsOnPortfoliosWithPortfolios stamp: 'fr 11/16/2020 02:00:07'!
PASSED!

!testRun: #AccountReporterTest #test11AccountSummaryShouldReflectWithdrawsOnPortfoliosWithPortfolios stamp: 'fr 11/16/2020 02:00:07'!
PASSED!

!testRun: #AccountReporterTest #test12AccountSummaryShouldReflectOutgoingAndIncomingTransfersOnPortfoliosWithPortfolios stamp: 'fr 11/16/2020 02:00:07'!
PASSED!

!testRun: #AccountReporterTest #test13NetTransferForAccountWithNoTransactionsShouldBeZero stamp: 'fr 11/16/2020 02:00:07'!
PASSED!

!testRun: #AccountReporterTest #test14NetTransferForAccountWithAnOutgoingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 02:00:07'!
PASSED!

!testRun: #AccountReporterTest #test15NetTransferForAccountWithAnIncomingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 02:00:07'!
PASSED!

!testRun: #AccountReporterTest #test16NetTransferForAccountShouldNotReflectDeposits stamp: 'fr 11/16/2020 02:00:07'!
PASSED!

!testRun: #AccountReporterTest #test17NetTransferForAccountShouldNotReflectWithdraws stamp: 'fr 11/16/2020 02:00:07'!
PASSED!

!testRun: #AccountReporterTest #test18NetTransferForPortfolioWithNoTransactionsShouldBeZero stamp: 'fr 11/16/2020 02:00:07'!
PASSED!

!testRun: #AccountReporterTest #test19NetTransferForPortfolioWithAnOutgoingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 02:00:07'!
PASSED!

!testRun: #AccountReporterTest #test20NetTransferForPortfolioWithAnIncomingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 02:00:07'!
PASSED!

!testRun: #AccountReporterTest #test21NetTransferForPortfolioShouldNotReflectDeposits stamp: 'fr 11/16/2020 02:00:07'!
PASSED!

!testRun: #AccountReporterTest #test22NetTransferForPortfolioShouldNotReflectWithdraws stamp: 'fr 11/16/2020 02:00:07'!
PASSED!

!testRun: #AccountReporterTest #test23NetTransferForPortfoliosWithPortfoliosShouldReflectOutgoingAndIncomingTransfers stamp: 'fr 11/16/2020 02:00:07'!
PASSED!

!testRun: #AccountReporterTest #test24NetTransferForPortfoliosWithPortfoliosShouldNotRelfectDepositsOrWithdraws stamp: 'fr 11/16/2020 02:00:07'!
PASSED!

!testRun: #AccountReporterTest #test03AccountSummaryShouldReflectWithdrawsOnAccounts stamp: 'fr 11/16/2020 02:00:07'!
ERROR!
!AccountReporterTest methodsFor: 'tests - account summary' stamp: 'fr 11/16/2020 02:00:17' prior: 50896356!
test03AccountSummaryShouldReflectWithdrawsOnAccounts
	
	self createNewAccountAndReporterForIt.
	Withdraw register: 100 on: account1. 
	
	self assert: [reporter1 accountSummary = (OrderedCollection with: 'Extracci�n por 100.' with: 'Balance = -100')]! !

!testRun: #AccountReporterTest #test03AccountSummaryShouldReflectWithdrawsOnAccounts stamp: 'fr 11/16/2020 02:00:18'!
PASSED!

!testRun: #AccountReporterTest #test01AccountSummaryForAccountWithNoTransactionsShouldJustShowBalanceZero stamp: 'fr 11/16/2020 02:00:18'!
PASSED!

!testRun: #AccountReporterTest #test02AccountSummaryShouldReflectDepositsOnAccounts stamp: 'fr 11/16/2020 02:00:18'!
PASSED!

!testRun: #AccountReporterTest #test03AccountSummaryShouldReflectWithdrawsOnAccounts stamp: 'fr 11/16/2020 02:00:18'!
PASSED!

!testRun: #AccountReporterTest #test04AccountSummaryShouldReflectOutgoingTransfersOnAccounts stamp: 'fr 11/16/2020 02:00:18'!
PASSED!

!testRun: #AccountReporterTest #test05AccountSummaryShouldReflectIncomingTransfersOnAccounts stamp: 'fr 11/16/2020 02:00:18'!
PASSED!

!testRun: #AccountReporterTest #test06AccountSummaryForPortfolioWithNoTransactionsShouldJustShowBalanceZero stamp: 'fr 11/16/2020 02:00:18'!
PASSED!

!testRun: #AccountReporterTest #test07AccountSummaryShouldReflectDepositsOnPortfoliosWithAccounts stamp: 'fr 11/16/2020 02:00:18'!
PASSED!

!testRun: #AccountReporterTest #test08AccountSummaryShouldReflectWithdrawsOnPortfoliosWithAccounts stamp: 'fr 11/16/2020 02:00:18'!
PASSED!

!testRun: #AccountReporterTest #test09AccountSummaryShouldReflectOutgoingAndIncomingTransfersOnPortfoliosWithAccounts stamp: 'fr 11/16/2020 02:00:18'!
PASSED!

!testRun: #AccountReporterTest #test10AccountSummaryShouldReflectDepositsOnPortfoliosWithPortfolios stamp: 'fr 11/16/2020 02:00:18'!
PASSED!

!testRun: #AccountReporterTest #test11AccountSummaryShouldReflectWithdrawsOnPortfoliosWithPortfolios stamp: 'fr 11/16/2020 02:00:18'!
PASSED!

!testRun: #AccountReporterTest #test12AccountSummaryShouldReflectOutgoingAndIncomingTransfersOnPortfoliosWithPortfolios stamp: 'fr 11/16/2020 02:00:18'!
PASSED!

!testRun: #AccountReporterTest #test13NetTransferForAccountWithNoTransactionsShouldBeZero stamp: 'fr 11/16/2020 02:00:18'!
PASSED!

!testRun: #AccountReporterTest #test14NetTransferForAccountWithAnOutgoingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 02:00:18'!
PASSED!

!testRun: #AccountReporterTest #test15NetTransferForAccountWithAnIncomingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 02:00:18'!
PASSED!

!testRun: #AccountReporterTest #test16NetTransferForAccountShouldNotReflectDeposits stamp: 'fr 11/16/2020 02:00:18'!
PASSED!

!testRun: #AccountReporterTest #test17NetTransferForAccountShouldNotReflectWithdraws stamp: 'fr 11/16/2020 02:00:18'!
PASSED!

!testRun: #AccountReporterTest #test18NetTransferForPortfolioWithNoTransactionsShouldBeZero stamp: 'fr 11/16/2020 02:00:18'!
PASSED!

!testRun: #AccountReporterTest #test19NetTransferForPortfolioWithAnOutgoingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 02:00:18'!
PASSED!

!testRun: #AccountReporterTest #test20NetTransferForPortfolioWithAnIncomingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 02:00:18'!
PASSED!

!testRun: #AccountReporterTest #test21NetTransferForPortfolioShouldNotReflectDeposits stamp: 'fr 11/16/2020 02:00:18'!
PASSED!

!testRun: #AccountReporterTest #test22NetTransferForPortfolioShouldNotReflectWithdraws stamp: 'fr 11/16/2020 02:00:18'!
PASSED!

!testRun: #AccountReporterTest #test23NetTransferForPortfoliosWithPortfoliosShouldReflectOutgoingAndIncomingTransfers stamp: 'fr 11/16/2020 02:00:18'!
PASSED!

!testRun: #AccountReporterTest #test24NetTransferForPortfoliosWithPortfoliosShouldNotRelfectDepositsOrWithdraws stamp: 'fr 11/16/2020 02:00:18'!
PASSED!
!AccountReporterTest methodsFor: 'tests - account summary' stamp: 'fr 11/16/2020 02:00:30' prior: 50878479!
test01AccountSummaryForAccountWithNoTransactionsShouldJustShowBalanceZero

	self createNewAccountAndReporterForIt
	
	self assert: [reporter1 accountSummary = (OrderedCollection with: 'Balance = 0')]! !

!testRun: #AccountReporterTest #test01AccountSummaryForAccountWithNoTransactionsShouldJustShowBalanceZero stamp: 'fr 11/16/2020 02:00:30'!
ERROR!
!AccountReporterTest methodsFor: 'tests - account summary' stamp: 'fr 11/16/2020 02:00:37' prior: 50896614!
test01AccountSummaryForAccountWithNoTransactionsShouldJustShowBalanceZero

	self createNewAccountAndReporterForIt.
	
	self assert: [reporter1 accountSummary = (OrderedCollection with: 'Balance = 0')]! !

!testRun: #AccountReporterTest #test01AccountSummaryForAccountWithNoTransactionsShouldJustShowBalanceZero stamp: 'fr 11/16/2020 02:00:37'!
PASSED!

!testRun: #AccountReporterTest #test01AccountSummaryForAccountWithNoTransactionsShouldJustShowBalanceZero stamp: 'fr 11/16/2020 02:00:37'!
PASSED!

!testRun: #AccountReporterTest #test02AccountSummaryShouldReflectDepositsOnAccounts stamp: 'fr 11/16/2020 02:00:37'!
PASSED!

!testRun: #AccountReporterTest #test03AccountSummaryShouldReflectWithdrawsOnAccounts stamp: 'fr 11/16/2020 02:00:37'!
PASSED!

!testRun: #AccountReporterTest #test04AccountSummaryShouldReflectOutgoingTransfersOnAccounts stamp: 'fr 11/16/2020 02:00:37'!
PASSED!

!testRun: #AccountReporterTest #test05AccountSummaryShouldReflectIncomingTransfersOnAccounts stamp: 'fr 11/16/2020 02:00:37'!
PASSED!

!testRun: #AccountReporterTest #test06AccountSummaryForPortfolioWithNoTransactionsShouldJustShowBalanceZero stamp: 'fr 11/16/2020 02:00:37'!
PASSED!

!testRun: #AccountReporterTest #test07AccountSummaryShouldReflectDepositsOnPortfoliosWithAccounts stamp: 'fr 11/16/2020 02:00:37'!
PASSED!

!testRun: #AccountReporterTest #test08AccountSummaryShouldReflectWithdrawsOnPortfoliosWithAccounts stamp: 'fr 11/16/2020 02:00:37'!
PASSED!

!testRun: #AccountReporterTest #test09AccountSummaryShouldReflectOutgoingAndIncomingTransfersOnPortfoliosWithAccounts stamp: 'fr 11/16/2020 02:00:37'!
PASSED!

!testRun: #AccountReporterTest #test10AccountSummaryShouldReflectDepositsOnPortfoliosWithPortfolios stamp: 'fr 11/16/2020 02:00:37'!
PASSED!

!testRun: #AccountReporterTest #test11AccountSummaryShouldReflectWithdrawsOnPortfoliosWithPortfolios stamp: 'fr 11/16/2020 02:00:37'!
PASSED!

!testRun: #AccountReporterTest #test12AccountSummaryShouldReflectOutgoingAndIncomingTransfersOnPortfoliosWithPortfolios stamp: 'fr 11/16/2020 02:00:37'!
PASSED!

!testRun: #AccountReporterTest #test13NetTransferForAccountWithNoTransactionsShouldBeZero stamp: 'fr 11/16/2020 02:00:37'!
PASSED!

!testRun: #AccountReporterTest #test14NetTransferForAccountWithAnOutgoingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 02:00:37'!
PASSED!

!testRun: #AccountReporterTest #test15NetTransferForAccountWithAnIncomingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 02:00:37'!
PASSED!

!testRun: #AccountReporterTest #test16NetTransferForAccountShouldNotReflectDeposits stamp: 'fr 11/16/2020 02:00:37'!
PASSED!

!testRun: #AccountReporterTest #test17NetTransferForAccountShouldNotReflectWithdraws stamp: 'fr 11/16/2020 02:00:37'!
PASSED!

!testRun: #AccountReporterTest #test18NetTransferForPortfolioWithNoTransactionsShouldBeZero stamp: 'fr 11/16/2020 02:00:37'!
PASSED!

!testRun: #AccountReporterTest #test19NetTransferForPortfolioWithAnOutgoingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 02:00:37'!
PASSED!

!testRun: #AccountReporterTest #test20NetTransferForPortfolioWithAnIncomingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 02:00:37'!
PASSED!

!testRun: #AccountReporterTest #test21NetTransferForPortfolioShouldNotReflectDeposits stamp: 'fr 11/16/2020 02:00:37'!
PASSED!

!testRun: #AccountReporterTest #test22NetTransferForPortfolioShouldNotReflectWithdraws stamp: 'fr 11/16/2020 02:00:37'!
PASSED!

!testRun: #AccountReporterTest #test23NetTransferForPortfoliosWithPortfoliosShouldReflectOutgoingAndIncomingTransfers stamp: 'fr 11/16/2020 02:00:37'!
PASSED!

!testRun: #AccountReporterTest #test24NetTransferForPortfoliosWithPortfoliosShouldNotRelfectDepositsOrWithdraws stamp: 'fr 11/16/2020 02:00:37'!
PASSED!
!AccountReporterTest methodsFor: 'tests - account summary' stamp: 'fr 11/16/2020 02:00:47' prior: 50896629!
test01AccountSummaryForAccountWithNoTransactionsShouldJustShowBalanceZero

	self createNewAccountAndReporterForIt.
	
	self assert: reporter1 accountSummary equals: (OrderedCollection with: 'Balance = 0')! !
!AccountReporterTest methodsFor: 'tests - account summary' stamp: 'fr 11/16/2020 02:00:58' prior: 50896368!
test02AccountSummaryShouldReflectDepositsOnAccounts

	self createNewAccountAndReporterForIt.
	Deposit register: 100 on: account1. 
	
	self assert: reporter1 accountSummary equals: (OrderedCollection with: 'Dep�sito por 100.' with: 'Balance = 100')! !
!AccountReporterTest methodsFor: 'tests - account summary' stamp: 'fr 11/16/2020 02:01:07' prior: 50896493!
test03AccountSummaryShouldReflectWithdrawsOnAccounts
	
	self createNewAccountAndReporterForIt.
	Withdraw register: 100 on: account1. 
	
	self assert: reporter1 accountSummary equals: (OrderedCollection with: 'Extracci�n por 100.' with: 'Balance = -100')! !
!AccountReporterTest methodsFor: 'tests - account summary' stamp: 'fr 11/16/2020 02:01:29' prior: 50895592!
test04AccountSummaryShouldReflectOutgoingTransfersOnAccounts

	| anotherAccount |
	
	self createNewAccountAndReporterForIt.
	anotherAccount _ ReceptiveAccount new.
	
	Transfer move: 100 from: account1 to: anotherAccount.
	
	self assert: [reporter1 accountSummary = (OrderedCollection with: 'Salida por transferencia de 100.' with: 'Balance = -100')]! !

!testRun: #AccountReporterTest #test04AccountSummaryShouldReflectOutgoingTransfersOnAccounts stamp: 'fr 11/16/2020 02:01:31'!
PASSED!

!testRun: #AccountReporterTest #test01AccountSummaryForAccountWithNoTransactionsShouldJustShowBalanceZero stamp: 'fr 11/16/2020 02:01:31'!
PASSED!

!testRun: #AccountReporterTest #test02AccountSummaryShouldReflectDepositsOnAccounts stamp: 'fr 11/16/2020 02:01:31'!
PASSED!

!testRun: #AccountReporterTest #test03AccountSummaryShouldReflectWithdrawsOnAccounts stamp: 'fr 11/16/2020 02:01:31'!
PASSED!

!testRun: #AccountReporterTest #test04AccountSummaryShouldReflectOutgoingTransfersOnAccounts stamp: 'fr 11/16/2020 02:01:31'!
PASSED!

!testRun: #AccountReporterTest #test05AccountSummaryShouldReflectIncomingTransfersOnAccounts stamp: 'fr 11/16/2020 02:01:31'!
PASSED!

!testRun: #AccountReporterTest #test06AccountSummaryForPortfolioWithNoTransactionsShouldJustShowBalanceZero stamp: 'fr 11/16/2020 02:01:31'!
PASSED!

!testRun: #AccountReporterTest #test07AccountSummaryShouldReflectDepositsOnPortfoliosWithAccounts stamp: 'fr 11/16/2020 02:01:31'!
PASSED!

!testRun: #AccountReporterTest #test08AccountSummaryShouldReflectWithdrawsOnPortfoliosWithAccounts stamp: 'fr 11/16/2020 02:01:31'!
PASSED!

!testRun: #AccountReporterTest #test09AccountSummaryShouldReflectOutgoingAndIncomingTransfersOnPortfoliosWithAccounts stamp: 'fr 11/16/2020 02:01:31'!
PASSED!

!testRun: #AccountReporterTest #test10AccountSummaryShouldReflectDepositsOnPortfoliosWithPortfolios stamp: 'fr 11/16/2020 02:01:31'!
PASSED!

!testRun: #AccountReporterTest #test11AccountSummaryShouldReflectWithdrawsOnPortfoliosWithPortfolios stamp: 'fr 11/16/2020 02:01:31'!
PASSED!

!testRun: #AccountReporterTest #test12AccountSummaryShouldReflectOutgoingAndIncomingTransfersOnPortfoliosWithPortfolios stamp: 'fr 11/16/2020 02:01:31'!
PASSED!

!testRun: #AccountReporterTest #test13NetTransferForAccountWithNoTransactionsShouldBeZero stamp: 'fr 11/16/2020 02:01:31'!
PASSED!

!testRun: #AccountReporterTest #test14NetTransferForAccountWithAnOutgoingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 02:01:31'!
PASSED!

!testRun: #AccountReporterTest #test15NetTransferForAccountWithAnIncomingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 02:01:31'!
PASSED!

!testRun: #AccountReporterTest #test16NetTransferForAccountShouldNotReflectDeposits stamp: 'fr 11/16/2020 02:01:31'!
PASSED!

!testRun: #AccountReporterTest #test17NetTransferForAccountShouldNotReflectWithdraws stamp: 'fr 11/16/2020 02:01:31'!
PASSED!

!testRun: #AccountReporterTest #test18NetTransferForPortfolioWithNoTransactionsShouldBeZero stamp: 'fr 11/16/2020 02:01:31'!
PASSED!

!testRun: #AccountReporterTest #test19NetTransferForPortfolioWithAnOutgoingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 02:01:31'!
PASSED!

!testRun: #AccountReporterTest #test20NetTransferForPortfolioWithAnIncomingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 02:01:31'!
PASSED!

!testRun: #AccountReporterTest #test21NetTransferForPortfolioShouldNotReflectDeposits stamp: 'fr 11/16/2020 02:01:31'!
PASSED!

!testRun: #AccountReporterTest #test22NetTransferForPortfolioShouldNotReflectWithdraws stamp: 'fr 11/16/2020 02:01:31'!
PASSED!

!testRun: #AccountReporterTest #test23NetTransferForPortfoliosWithPortfoliosShouldReflectOutgoingAndIncomingTransfers stamp: 'fr 11/16/2020 02:01:31'!
PASSED!

!testRun: #AccountReporterTest #test24NetTransferForPortfoliosWithPortfoliosShouldNotRelfectDepositsOrWithdraws stamp: 'fr 11/16/2020 02:01:31'!
PASSED!
!AccountReporterTest methodsFor: 'tests - account summary' stamp: 'fr 11/16/2020 02:01:49' prior: 50895718!
test05AccountSummaryShouldReflectIncomingTransfersOnAccounts

	| anotherAccount |
	
	self createNewAccountAndReporterForIt.
	anotherAccount _ ReceptiveAccount new.
	
	Transfer move: 100 from: anotherAccount to: account1.
	
	self assert: [reporter1 accountSummary = (OrderedCollection with: 'Entrada por transferencia de 100.' with: 'Balance = 100')]! !

!testRun: #AccountReporterTest #test05AccountSummaryShouldReflectIncomingTransfersOnAccounts stamp: 'fr 11/16/2020 02:01:51'!
PASSED!

!testRun: #AccountReporterTest #test01AccountSummaryForAccountWithNoTransactionsShouldJustShowBalanceZero stamp: 'fr 11/16/2020 02:01:51'!
PASSED!

!testRun: #AccountReporterTest #test02AccountSummaryShouldReflectDepositsOnAccounts stamp: 'fr 11/16/2020 02:01:51'!
PASSED!

!testRun: #AccountReporterTest #test03AccountSummaryShouldReflectWithdrawsOnAccounts stamp: 'fr 11/16/2020 02:01:51'!
PASSED!

!testRun: #AccountReporterTest #test04AccountSummaryShouldReflectOutgoingTransfersOnAccounts stamp: 'fr 11/16/2020 02:01:51'!
PASSED!

!testRun: #AccountReporterTest #test05AccountSummaryShouldReflectIncomingTransfersOnAccounts stamp: 'fr 11/16/2020 02:01:51'!
PASSED!

!testRun: #AccountReporterTest #test06AccountSummaryForPortfolioWithNoTransactionsShouldJustShowBalanceZero stamp: 'fr 11/16/2020 02:01:51'!
PASSED!

!testRun: #AccountReporterTest #test07AccountSummaryShouldReflectDepositsOnPortfoliosWithAccounts stamp: 'fr 11/16/2020 02:01:51'!
PASSED!

!testRun: #AccountReporterTest #test08AccountSummaryShouldReflectWithdrawsOnPortfoliosWithAccounts stamp: 'fr 11/16/2020 02:01:51'!
PASSED!

!testRun: #AccountReporterTest #test09AccountSummaryShouldReflectOutgoingAndIncomingTransfersOnPortfoliosWithAccounts stamp: 'fr 11/16/2020 02:01:51'!
PASSED!

!testRun: #AccountReporterTest #test10AccountSummaryShouldReflectDepositsOnPortfoliosWithPortfolios stamp: 'fr 11/16/2020 02:01:51'!
PASSED!

!testRun: #AccountReporterTest #test11AccountSummaryShouldReflectWithdrawsOnPortfoliosWithPortfolios stamp: 'fr 11/16/2020 02:01:51'!
PASSED!

!testRun: #AccountReporterTest #test12AccountSummaryShouldReflectOutgoingAndIncomingTransfersOnPortfoliosWithPortfolios stamp: 'fr 11/16/2020 02:01:51'!
PASSED!

!testRun: #AccountReporterTest #test13NetTransferForAccountWithNoTransactionsShouldBeZero stamp: 'fr 11/16/2020 02:01:51'!
PASSED!

!testRun: #AccountReporterTest #test14NetTransferForAccountWithAnOutgoingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 02:01:51'!
PASSED!

!testRun: #AccountReporterTest #test15NetTransferForAccountWithAnIncomingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 02:01:51'!
PASSED!

!testRun: #AccountReporterTest #test16NetTransferForAccountShouldNotReflectDeposits stamp: 'fr 11/16/2020 02:01:51'!
PASSED!

!testRun: #AccountReporterTest #test17NetTransferForAccountShouldNotReflectWithdraws stamp: 'fr 11/16/2020 02:01:51'!
PASSED!

!testRun: #AccountReporterTest #test18NetTransferForPortfolioWithNoTransactionsShouldBeZero stamp: 'fr 11/16/2020 02:01:51'!
PASSED!

!testRun: #AccountReporterTest #test19NetTransferForPortfolioWithAnOutgoingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 02:01:51'!
PASSED!

!testRun: #AccountReporterTest #test20NetTransferForPortfolioWithAnIncomingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 02:01:51'!
PASSED!

!testRun: #AccountReporterTest #test21NetTransferForPortfolioShouldNotReflectDeposits stamp: 'fr 11/16/2020 02:01:51'!
PASSED!

!testRun: #AccountReporterTest #test22NetTransferForPortfolioShouldNotReflectWithdraws stamp: 'fr 11/16/2020 02:01:51'!
PASSED!

!testRun: #AccountReporterTest #test23NetTransferForPortfoliosWithPortfoliosShouldReflectOutgoingAndIncomingTransfers stamp: 'fr 11/16/2020 02:01:51'!
PASSED!

!testRun: #AccountReporterTest #test24NetTransferForPortfoliosWithPortfoliosShouldNotRelfectDepositsOrWithdraws stamp: 'fr 11/16/2020 02:01:51'!
PASSED!
!AccountReporterTest methodsFor: 'tests - account summary' stamp: 'fr 11/16/2020 02:02:17' prior: 50896909!
test05AccountSummaryShouldReflectIncomingTransfersOnAccounts

	| anotherAccount |
	
	self createNewAccountAndReporterForIt.
	anotherAccount _ ReceptiveAccount new.
	
	Transfer move: 100 from: anotherAccount to: account1.
	
	self assert: reporter1 accountSummary equals: (OrderedCollection with: 'Entrada por transferencia de 100.' with: 'Balance = 100')! !
!AccountReporterTest methodsFor: 'tests - account summary' stamp: 'fr 11/16/2020 02:02:25' prior: 50896784!
test04AccountSummaryShouldReflectOutgoingTransfersOnAccounts

	| anotherAccount |
	
	self createNewAccountAndReporterForIt.
	anotherAccount _ ReceptiveAccount new.
	
	Transfer move: 100 from: account1 to: anotherAccount.
	
	self assert: reporter1 accountSummary equals: (OrderedCollection with: 'Salida por transferencia de 100.' with: 'Balance = -100')! !
!AccountReporterTest methodsFor: 'tests - account summary' stamp: 'fr 11/16/2020 02:02:43' prior: 50897049!
test04AccountSummaryShouldReflectOutgoingTransfersOnAccounts

	| anotherAccount1 |
	
	self createNewAccountAndReporterForIt.
	anotherAccount1 _ ReceptiveAccount new.
	
	Transfer move: 100 from: account1 to: anotherAccount1.
	
	self assert: reporter1 accountSummary equals: (OrderedCollection with: 'Salida por transferencia de 100.' with: 'Balance = -100')! !
!AccountReporterTest methodsFor: 'as yet unclassified' stamp: 'fr 11/16/2020 02:02:46' prior: 50897064!
test04AccountSummaryShouldReflectOutgoingTransfersOnAccounts

	 
	
	self createNewAccountAndReporterForIt.
	anotherAccount1 _ ReceptiveAccount new.
	
	Transfer move: 100 from: account1 to: anotherAccount1.
	
	self assert: reporter1 accountSummary equals: (OrderedCollection with: 'Salida por transferencia de 100.' with: 'Balance = -100')! !

!classDefinition: #AccountReporterTest category: 'Portfolio-Part-II-Exercise' stamp: 'fr 11/16/2020 02:02:46'!
TestCase subclass: #AccountReporterTest
	instanceVariableNames: 'account1 reporter1 anotherAccount1'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Part-II-Exercise'!
!AccountReporterTest methodsFor: 'tests - account summary' stamp: 'fr 11/16/2020 02:02:49' prior: 50897079!
test04AccountSummaryShouldReflectOutgoingTransfersOnAccounts

	
	self createNewAccountAndReporterForIt.
	anotherAccount1 _ ReceptiveAccount new.
	
	Transfer move: 100 from: account1 to: anotherAccount1.
	
	self assert: reporter1 accountSummary equals: (OrderedCollection with: 'Salida por transferencia de 100.' with: 'Balance = -100')! !
!AccountReporterTest methodsFor: 'tests - account summary' stamp: 'fr 11/16/2020 02:03:16'!
createNewAccountsAndAReporterForAnAccount

	self createNewAccountAndReporterForIt.
	anotherAccount1 _ ReceptiveAccount new! !
!AccountReporterTest methodsFor: 'tests - account summary' stamp: 'fr 11/16/2020 02:03:17' prior: 50897103!
test04AccountSummaryShouldReflectOutgoingTransfersOnAccounts

	
	self createNewAccountsAndAReporterForAnAccount.
	
	Transfer move: 100 from: account1 to: anotherAccount1.
	
	self assert: reporter1 accountSummary equals: (OrderedCollection with: 'Salida por transferencia de 100.' with: 'Balance = -100')! !

!testRun: #AccountReporterTest #test04AccountSummaryShouldReflectOutgoingTransfersOnAccounts stamp: 'fr 11/16/2020 02:03:19'!
PASSED!

!testRun: #AccountReporterTest #test01AccountSummaryForAccountWithNoTransactionsShouldJustShowBalanceZero stamp: 'fr 11/16/2020 02:03:19'!
PASSED!

!testRun: #AccountReporterTest #test02AccountSummaryShouldReflectDepositsOnAccounts stamp: 'fr 11/16/2020 02:03:19'!
PASSED!

!testRun: #AccountReporterTest #test03AccountSummaryShouldReflectWithdrawsOnAccounts stamp: 'fr 11/16/2020 02:03:19'!
PASSED!

!testRun: #AccountReporterTest #test04AccountSummaryShouldReflectOutgoingTransfersOnAccounts stamp: 'fr 11/16/2020 02:03:19'!
PASSED!

!testRun: #AccountReporterTest #test05AccountSummaryShouldReflectIncomingTransfersOnAccounts stamp: 'fr 11/16/2020 02:03:19'!
PASSED!

!testRun: #AccountReporterTest #test06AccountSummaryForPortfolioWithNoTransactionsShouldJustShowBalanceZero stamp: 'fr 11/16/2020 02:03:19'!
PASSED!

!testRun: #AccountReporterTest #test07AccountSummaryShouldReflectDepositsOnPortfoliosWithAccounts stamp: 'fr 11/16/2020 02:03:19'!
PASSED!

!testRun: #AccountReporterTest #test08AccountSummaryShouldReflectWithdrawsOnPortfoliosWithAccounts stamp: 'fr 11/16/2020 02:03:19'!
PASSED!

!testRun: #AccountReporterTest #test09AccountSummaryShouldReflectOutgoingAndIncomingTransfersOnPortfoliosWithAccounts stamp: 'fr 11/16/2020 02:03:19'!
PASSED!

!testRun: #AccountReporterTest #test10AccountSummaryShouldReflectDepositsOnPortfoliosWithPortfolios stamp: 'fr 11/16/2020 02:03:19'!
PASSED!

!testRun: #AccountReporterTest #test11AccountSummaryShouldReflectWithdrawsOnPortfoliosWithPortfolios stamp: 'fr 11/16/2020 02:03:19'!
PASSED!

!testRun: #AccountReporterTest #test12AccountSummaryShouldReflectOutgoingAndIncomingTransfersOnPortfoliosWithPortfolios stamp: 'fr 11/16/2020 02:03:19'!
PASSED!

!testRun: #AccountReporterTest #test13NetTransferForAccountWithNoTransactionsShouldBeZero stamp: 'fr 11/16/2020 02:03:19'!
PASSED!

!testRun: #AccountReporterTest #test14NetTransferForAccountWithAnOutgoingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 02:03:19'!
PASSED!

!testRun: #AccountReporterTest #test15NetTransferForAccountWithAnIncomingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 02:03:19'!
PASSED!

!testRun: #AccountReporterTest #test16NetTransferForAccountShouldNotReflectDeposits stamp: 'fr 11/16/2020 02:03:19'!
PASSED!

!testRun: #AccountReporterTest #test17NetTransferForAccountShouldNotReflectWithdraws stamp: 'fr 11/16/2020 02:03:19'!
PASSED!

!testRun: #AccountReporterTest #test18NetTransferForPortfolioWithNoTransactionsShouldBeZero stamp: 'fr 11/16/2020 02:03:19'!
PASSED!

!testRun: #AccountReporterTest #test19NetTransferForPortfolioWithAnOutgoingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 02:03:19'!
PASSED!

!testRun: #AccountReporterTest #test20NetTransferForPortfolioWithAnIncomingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 02:03:19'!
PASSED!

!testRun: #AccountReporterTest #test21NetTransferForPortfolioShouldNotReflectDeposits stamp: 'fr 11/16/2020 02:03:19'!
PASSED!

!testRun: #AccountReporterTest #test22NetTransferForPortfolioShouldNotReflectWithdraws stamp: 'fr 11/16/2020 02:03:19'!
PASSED!

!testRun: #AccountReporterTest #test23NetTransferForPortfoliosWithPortfoliosShouldReflectOutgoingAndIncomingTransfers stamp: 'fr 11/16/2020 02:03:19'!
PASSED!

!testRun: #AccountReporterTest #test24NetTransferForPortfoliosWithPortfoliosShouldNotRelfectDepositsOrWithdraws stamp: 'fr 11/16/2020 02:03:19'!
PASSED!
!AccountReporterTest methodsFor: 'tests - account summary' stamp: 'fr 11/16/2020 02:03:38' prior: 50897034!
test05AccountSummaryShouldReflectIncomingTransfersOnAccounts

	self createNewAccountsAndAReporterForAnAccount.

	Transfer move: 100 from: anotherAccount1 to: account1.
	
	self assert: reporter1 accountSummary equals: (OrderedCollection with: 'Entrada por transferencia de 100.' with: 'Balance = 100')! !

!testRun: #AccountReporterTest #test05AccountSummaryShouldReflectIncomingTransfersOnAccounts stamp: 'fr 11/16/2020 02:03:38'!
PASSED!

!testRun: #AccountReporterTest #test01AccountSummaryForAccountWithNoTransactionsShouldJustShowBalanceZero stamp: 'fr 11/16/2020 02:03:38'!
PASSED!

!testRun: #AccountReporterTest #test02AccountSummaryShouldReflectDepositsOnAccounts stamp: 'fr 11/16/2020 02:03:38'!
PASSED!

!testRun: #AccountReporterTest #test03AccountSummaryShouldReflectWithdrawsOnAccounts stamp: 'fr 11/16/2020 02:03:38'!
PASSED!

!testRun: #AccountReporterTest #test04AccountSummaryShouldReflectOutgoingTransfersOnAccounts stamp: 'fr 11/16/2020 02:03:38'!
PASSED!

!testRun: #AccountReporterTest #test05AccountSummaryShouldReflectIncomingTransfersOnAccounts stamp: 'fr 11/16/2020 02:03:38'!
PASSED!

!testRun: #AccountReporterTest #test06AccountSummaryForPortfolioWithNoTransactionsShouldJustShowBalanceZero stamp: 'fr 11/16/2020 02:03:38'!
PASSED!

!testRun: #AccountReporterTest #test07AccountSummaryShouldReflectDepositsOnPortfoliosWithAccounts stamp: 'fr 11/16/2020 02:03:38'!
PASSED!

!testRun: #AccountReporterTest #test08AccountSummaryShouldReflectWithdrawsOnPortfoliosWithAccounts stamp: 'fr 11/16/2020 02:03:38'!
PASSED!

!testRun: #AccountReporterTest #test09AccountSummaryShouldReflectOutgoingAndIncomingTransfersOnPortfoliosWithAccounts stamp: 'fr 11/16/2020 02:03:38'!
PASSED!

!testRun: #AccountReporterTest #test10AccountSummaryShouldReflectDepositsOnPortfoliosWithPortfolios stamp: 'fr 11/16/2020 02:03:38'!
PASSED!

!testRun: #AccountReporterTest #test11AccountSummaryShouldReflectWithdrawsOnPortfoliosWithPortfolios stamp: 'fr 11/16/2020 02:03:38'!
PASSED!

!testRun: #AccountReporterTest #test12AccountSummaryShouldReflectOutgoingAndIncomingTransfersOnPortfoliosWithPortfolios stamp: 'fr 11/16/2020 02:03:38'!
PASSED!

!testRun: #AccountReporterTest #test13NetTransferForAccountWithNoTransactionsShouldBeZero stamp: 'fr 11/16/2020 02:03:38'!
PASSED!

!testRun: #AccountReporterTest #test14NetTransferForAccountWithAnOutgoingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 02:03:38'!
PASSED!

!testRun: #AccountReporterTest #test15NetTransferForAccountWithAnIncomingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 02:03:38'!
PASSED!

!testRun: #AccountReporterTest #test16NetTransferForAccountShouldNotReflectDeposits stamp: 'fr 11/16/2020 02:03:38'!
PASSED!

!testRun: #AccountReporterTest #test17NetTransferForAccountShouldNotReflectWithdraws stamp: 'fr 11/16/2020 02:03:38'!
PASSED!

!testRun: #AccountReporterTest #test18NetTransferForPortfolioWithNoTransactionsShouldBeZero stamp: 'fr 11/16/2020 02:03:38'!
PASSED!

!testRun: #AccountReporterTest #test19NetTransferForPortfolioWithAnOutgoingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 02:03:38'!
PASSED!

!testRun: #AccountReporterTest #test20NetTransferForPortfolioWithAnIncomingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 02:03:38'!
PASSED!

!testRun: #AccountReporterTest #test21NetTransferForPortfolioShouldNotReflectDeposits stamp: 'fr 11/16/2020 02:03:38'!
PASSED!

!testRun: #AccountReporterTest #test22NetTransferForPortfolioShouldNotReflectWithdraws stamp: 'fr 11/16/2020 02:03:38'!
PASSED!

!testRun: #AccountReporterTest #test23NetTransferForPortfoliosWithPortfoliosShouldReflectOutgoingAndIncomingTransfers stamp: 'fr 11/16/2020 02:03:38'!
PASSED!

!testRun: #AccountReporterTest #test24NetTransferForPortfoliosWithPortfoliosShouldNotRelfectDepositsOrWithdraws stamp: 'fr 11/16/2020 02:03:38'!
PASSED!
!AccountReporterTest methodsFor: 'tests - account summary' stamp: 'fr 11/16/2020 02:04:13' prior: 50897125!
test04AccountSummaryShouldReflectOutgoingTransfersOnAccounts

	self createNewAccountsAndAReporterForAnAccount.
	
	Transfer move: 100 from: account1 to: anotherAccount1.
	
	self assert: reporter1 accountSummary equals: (OrderedCollection with: 'Salida por transferencia de 100.' with: 'Balance = -100')! !
!AccountReporterTest methodsFor: 'tests - account summary' stamp: 'fr 11/16/2020 02:04:21' prior: 50896760!
test02AccountSummaryShouldReflectDepositsOnAccounts

	self createNewAccountAndReporterForIt.
	
	Deposit register: 100 on: account1. 
	
	self assert: reporter1 accountSummary equals: (OrderedCollection with: 'Dep�sito por 100.' with: 'Balance = 100')! !
!AccountReporterTest methodsFor: 'tests - account summary' stamp: 'fr 11/16/2020 02:04:27' prior: 50896772!
test03AccountSummaryShouldReflectWithdrawsOnAccounts
	
	self createNewAccountAndReporterForIt.
	
	Withdraw register: 100 on: account1. 
	
	self assert: reporter1 accountSummary equals: (OrderedCollection with: 'Extracci�n por 100.' with: 'Balance = -100')! !
!AccountReporterTest methodsFor: 'tests - account summary' stamp: 'fr 11/16/2020 02:05:15'!
createAnAccountWithAReporterAnotherAccountPerform: aTransactionBlock andAssert: aBlockToAssert
	
	self createNewAccountAndReporterForIt.
	
	Withdraw register: 100 on: account1. 
	
	self assert: reporter1 accountSummary equals: (OrderedCollection with: 'Extracci�n por 100.' with: 'Balance = -100')! !
!AccountReporterTest methodsFor: 'tests - account summary' stamp: 'fr 11/16/2020 02:05:38' prior: 50897407!
createAnAccountWithAReporterAnotherAccountPerform: aTransactionBlock andAssert: aBlockToAssert
	
	self createNewAccountAndReporterForIt.
	
	aTransactionBlock value.
	
	aBlockToAssert value! !
!AccountReporterTest methodsFor: 'tests - account summary' stamp: 'fr 11/16/2020 02:05:47' prior: 50896750!
test01AccountSummaryForAccountWithNoTransactionsShouldJustShowBalanceZero

	self createNewAccountAndReporterForIt.
	
	self assert: reporter1 accountSummary equals: (OrderedCollection with: 'Balance = 0').! !
!AccountReporterTest methodsFor: 'tests - account summary' stamp: 'fr 11/16/2020 02:06:52' prior: 50897248!
test05AccountSummaryShouldReflectIncomingTransfersOnAccounts

	self createAnAccountWithAReporterAnotherAccountPerform: [Transfer move: 100 from: anotherAccount1 to: account1] andAssert: [self assert: reporter1 accountSummary equals: (OrderedCollection with: 'Entrada por transferencia de 100.' with: 'Balance = 100')]
! !
!AccountReporterTest methodsFor: 'tests - account summary' stamp: 'fr 11/16/2020 02:07:13' prior: 50897440!
test05AccountSummaryShouldReflectIncomingTransfersOnAccounts

	self createAnAccountWithAReporterAnotherAccountPerform: [Transfer move: 100 from: anotherAccount1 to: account1] 
	      andAssert: [self assert: reporter1 accountSummary 
					equals: (OrderedCollection with: 'Entrada por transferencia de 100.' with: 'Balance = 100')]
! !
!AccountReporterTest methodsFor: 'tests - account summary' stamp: 'fr 11/16/2020 02:07:41' prior: 50897454!
test05AccountSummaryShouldReflectIncomingTransfersOnAccounts

	self createAnAccountWithAReporterAnotherAccountPerform: 
			[Transfer move: 100 
					 from: anotherAccount1 
					 to: account1] 
	      andAssert: 
			[self assert: reporter1 accountSummary 
				equals: (OrderedCollection with: 'Entrada por transferencia de 100.' with: 'Balance = 100')]
! !
!AccountReporterTest methodsFor: 'tests - account summary' stamp: 'fr 11/16/2020 02:08:53' prior: 50897371!
test04AccountSummaryShouldReflectOutgoingTransfersOnAccounts

	self createNewAccountsAndAReporterForAnAccount.
	
	Transfer move: 100 from: account1 to: anotherAccount1.
	
	self assert: reporter1 accountSummary equals: (OrderedCollection with: 'Salida por transferencia de 100.' with: 'Balance = -100').
	! !

!testRun: #AccountReporterTest #test04AccountSummaryShouldReflectOutgoingTransfersOnAccounts stamp: 'fr 11/16/2020 02:08:53'!
PASSED!

!testRun: #AccountReporterTest #test01AccountSummaryForAccountWithNoTransactionsShouldJustShowBalanceZero stamp: 'fr 11/16/2020 02:08:53'!
PASSED!

!testRun: #AccountReporterTest #test02AccountSummaryShouldReflectDepositsOnAccounts stamp: 'fr 11/16/2020 02:08:53'!
PASSED!

!testRun: #AccountReporterTest #test03AccountSummaryShouldReflectWithdrawsOnAccounts stamp: 'fr 11/16/2020 02:08:53'!
PASSED!

!testRun: #AccountReporterTest #test04AccountSummaryShouldReflectOutgoingTransfersOnAccounts stamp: 'fr 11/16/2020 02:08:53'!
PASSED!

!testRun: #AccountReporterTest #test05AccountSummaryShouldReflectIncomingTransfersOnAccounts stamp: 'fr 11/16/2020 02:08:53'!
ERROR!

!testRun: #AccountReporterTest #test06AccountSummaryForPortfolioWithNoTransactionsShouldJustShowBalanceZero stamp: 'fr 11/16/2020 02:08:53'!
PASSED!

!testRun: #AccountReporterTest #test07AccountSummaryShouldReflectDepositsOnPortfoliosWithAccounts stamp: 'fr 11/16/2020 02:08:53'!
PASSED!

!testRun: #AccountReporterTest #test08AccountSummaryShouldReflectWithdrawsOnPortfoliosWithAccounts stamp: 'fr 11/16/2020 02:08:53'!
PASSED!

!testRun: #AccountReporterTest #test09AccountSummaryShouldReflectOutgoingAndIncomingTransfersOnPortfoliosWithAccounts stamp: 'fr 11/16/2020 02:08:53'!
PASSED!

!testRun: #AccountReporterTest #test10AccountSummaryShouldReflectDepositsOnPortfoliosWithPortfolios stamp: 'fr 11/16/2020 02:08:53'!
PASSED!

!testRun: #AccountReporterTest #test11AccountSummaryShouldReflectWithdrawsOnPortfoliosWithPortfolios stamp: 'fr 11/16/2020 02:08:53'!
PASSED!

!testRun: #AccountReporterTest #test12AccountSummaryShouldReflectOutgoingAndIncomingTransfersOnPortfoliosWithPortfolios stamp: 'fr 11/16/2020 02:08:53'!
PASSED!

!testRun: #AccountReporterTest #test13NetTransferForAccountWithNoTransactionsShouldBeZero stamp: 'fr 11/16/2020 02:08:53'!
PASSED!

!testRun: #AccountReporterTest #test14NetTransferForAccountWithAnOutgoingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 02:08:53'!
PASSED!

!testRun: #AccountReporterTest #test15NetTransferForAccountWithAnIncomingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 02:08:53'!
PASSED!

!testRun: #AccountReporterTest #test16NetTransferForAccountShouldNotReflectDeposits stamp: 'fr 11/16/2020 02:08:53'!
PASSED!

!testRun: #AccountReporterTest #test17NetTransferForAccountShouldNotReflectWithdraws stamp: 'fr 11/16/2020 02:08:53'!
PASSED!

!testRun: #AccountReporterTest #test18NetTransferForPortfolioWithNoTransactionsShouldBeZero stamp: 'fr 11/16/2020 02:08:53'!
PASSED!

!testRun: #AccountReporterTest #test19NetTransferForPortfolioWithAnOutgoingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 02:08:53'!
PASSED!

!testRun: #AccountReporterTest #test20NetTransferForPortfolioWithAnIncomingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 02:08:53'!
PASSED!

!testRun: #AccountReporterTest #test21NetTransferForPortfolioShouldNotReflectDeposits stamp: 'fr 11/16/2020 02:08:53'!
PASSED!

!testRun: #AccountReporterTest #test22NetTransferForPortfolioShouldNotReflectWithdraws stamp: 'fr 11/16/2020 02:08:53'!
PASSED!

!testRun: #AccountReporterTest #test23NetTransferForPortfoliosWithPortfoliosShouldReflectOutgoingAndIncomingTransfers stamp: 'fr 11/16/2020 02:08:53'!
PASSED!

!testRun: #AccountReporterTest #test24NetTransferForPortfoliosWithPortfoliosShouldNotRelfectDepositsOrWithdraws stamp: 'fr 11/16/2020 02:08:53'!
PASSED!

!testRun: #AccountReporterTest #test05AccountSummaryShouldReflectIncomingTransfersOnAccounts stamp: 'fr 11/16/2020 02:08:53'!
ERROR!
!AccountReporterTest methodsFor: 'tests - account summary' stamp: 'fr 11/16/2020 02:08:59' prior: 50897483!
test04AccountSummaryShouldReflectOutgoingTransfersOnAccounts

	self createNewAccountsAndAReporterForAnAccount.
	
	Transfer move: 100 from: account1 to: anotherAccount1.
	
	self assert: reporter1 accountSummary equals: (OrderedCollection with: 'Salida por transferencia de 100.' with: 'Balance = -100')! !

!testRun: #AccountReporterTest #test04AccountSummaryShouldReflectOutgoingTransfersOnAccounts stamp: 'fr 11/16/2020 02:08:59'!
PASSED!

!testRun: #AccountReporterTest #test01AccountSummaryForAccountWithNoTransactionsShouldJustShowBalanceZero stamp: 'fr 11/16/2020 02:08:59'!
PASSED!

!testRun: #AccountReporterTest #test02AccountSummaryShouldReflectDepositsOnAccounts stamp: 'fr 11/16/2020 02:08:59'!
PASSED!

!testRun: #AccountReporterTest #test03AccountSummaryShouldReflectWithdrawsOnAccounts stamp: 'fr 11/16/2020 02:08:59'!
PASSED!

!testRun: #AccountReporterTest #test04AccountSummaryShouldReflectOutgoingTransfersOnAccounts stamp: 'fr 11/16/2020 02:08:59'!
PASSED!

!testRun: #AccountReporterTest #test05AccountSummaryShouldReflectIncomingTransfersOnAccounts stamp: 'fr 11/16/2020 02:08:59'!
ERROR!

!testRun: #AccountReporterTest #test06AccountSummaryForPortfolioWithNoTransactionsShouldJustShowBalanceZero stamp: 'fr 11/16/2020 02:08:59'!
PASSED!

!testRun: #AccountReporterTest #test07AccountSummaryShouldReflectDepositsOnPortfoliosWithAccounts stamp: 'fr 11/16/2020 02:08:59'!
PASSED!

!testRun: #AccountReporterTest #test08AccountSummaryShouldReflectWithdrawsOnPortfoliosWithAccounts stamp: 'fr 11/16/2020 02:08:59'!
PASSED!

!testRun: #AccountReporterTest #test09AccountSummaryShouldReflectOutgoingAndIncomingTransfersOnPortfoliosWithAccounts stamp: 'fr 11/16/2020 02:08:59'!
PASSED!

!testRun: #AccountReporterTest #test10AccountSummaryShouldReflectDepositsOnPortfoliosWithPortfolios stamp: 'fr 11/16/2020 02:08:59'!
PASSED!

!testRun: #AccountReporterTest #test11AccountSummaryShouldReflectWithdrawsOnPortfoliosWithPortfolios stamp: 'fr 11/16/2020 02:08:59'!
PASSED!

!testRun: #AccountReporterTest #test12AccountSummaryShouldReflectOutgoingAndIncomingTransfersOnPortfoliosWithPortfolios stamp: 'fr 11/16/2020 02:08:59'!
PASSED!

!testRun: #AccountReporterTest #test13NetTransferForAccountWithNoTransactionsShouldBeZero stamp: 'fr 11/16/2020 02:08:59'!
PASSED!

!testRun: #AccountReporterTest #test14NetTransferForAccountWithAnOutgoingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 02:08:59'!
PASSED!

!testRun: #AccountReporterTest #test15NetTransferForAccountWithAnIncomingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 02:08:59'!
PASSED!

!testRun: #AccountReporterTest #test16NetTransferForAccountShouldNotReflectDeposits stamp: 'fr 11/16/2020 02:08:59'!
PASSED!

!testRun: #AccountReporterTest #test17NetTransferForAccountShouldNotReflectWithdraws stamp: 'fr 11/16/2020 02:08:59'!
PASSED!

!testRun: #AccountReporterTest #test18NetTransferForPortfolioWithNoTransactionsShouldBeZero stamp: 'fr 11/16/2020 02:08:59'!
PASSED!

!testRun: #AccountReporterTest #test19NetTransferForPortfolioWithAnOutgoingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 02:08:59'!
PASSED!

!testRun: #AccountReporterTest #test20NetTransferForPortfolioWithAnIncomingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 02:08:59'!
PASSED!

!testRun: #AccountReporterTest #test21NetTransferForPortfolioShouldNotReflectDeposits stamp: 'fr 11/16/2020 02:08:59'!
PASSED!

!testRun: #AccountReporterTest #test22NetTransferForPortfolioShouldNotReflectWithdraws stamp: 'fr 11/16/2020 02:08:59'!
PASSED!

!testRun: #AccountReporterTest #test23NetTransferForPortfoliosWithPortfoliosShouldReflectOutgoingAndIncomingTransfers stamp: 'fr 11/16/2020 02:08:59'!
PASSED!

!testRun: #AccountReporterTest #test24NetTransferForPortfoliosWithPortfoliosShouldNotRelfectDepositsOrWithdraws stamp: 'fr 11/16/2020 02:08:59'!
PASSED!

!testRun: #AccountReporterTest #test05AccountSummaryShouldReflectIncomingTransfersOnAccounts stamp: 'fr 11/16/2020 02:08:59'!
ERROR!

!testRun: #AccountReporterTest #test05AccountSummaryShouldReflectIncomingTransfersOnAccounts stamp: 'fr 11/16/2020 02:09:07'!
ERROR!

!testRun: #AccountReporterTest #test05AccountSummaryShouldReflectIncomingTransfersOnAccounts stamp: 'fr 11/16/2020 02:09:23'!
ERROR!
!AccountReporterTest methodsFor: 'tests - account summary' stamp: 'fr 11/16/2020 02:10:16' prior: 50897420!
createAnAccountWithAReporterAnotherAccountPerform: aTransactionBlock andAssert: aBlockToAssert
	
	self createNewAccountsAndAReporterForAnAccount.
	
	aTransactionBlock value.
	
	aBlockToAssert value! !

!testRun: #AccountReporterTest #test01AccountSummaryForAccountWithNoTransactionsShouldJustShowBalanceZero stamp: 'fr 11/16/2020 02:10:17'!
PASSED!

!testRun: #AccountReporterTest #test02AccountSummaryShouldReflectDepositsOnAccounts stamp: 'fr 11/16/2020 02:10:17'!
PASSED!

!testRun: #AccountReporterTest #test03AccountSummaryShouldReflectWithdrawsOnAccounts stamp: 'fr 11/16/2020 02:10:17'!
PASSED!

!testRun: #AccountReporterTest #test04AccountSummaryShouldReflectOutgoingTransfersOnAccounts stamp: 'fr 11/16/2020 02:10:17'!
PASSED!

!testRun: #AccountReporterTest #test05AccountSummaryShouldReflectIncomingTransfersOnAccounts stamp: 'fr 11/16/2020 02:10:17'!
PASSED!

!testRun: #AccountReporterTest #test06AccountSummaryForPortfolioWithNoTransactionsShouldJustShowBalanceZero stamp: 'fr 11/16/2020 02:10:17'!
PASSED!

!testRun: #AccountReporterTest #test07AccountSummaryShouldReflectDepositsOnPortfoliosWithAccounts stamp: 'fr 11/16/2020 02:10:17'!
PASSED!

!testRun: #AccountReporterTest #test08AccountSummaryShouldReflectWithdrawsOnPortfoliosWithAccounts stamp: 'fr 11/16/2020 02:10:17'!
PASSED!

!testRun: #AccountReporterTest #test09AccountSummaryShouldReflectOutgoingAndIncomingTransfersOnPortfoliosWithAccounts stamp: 'fr 11/16/2020 02:10:17'!
PASSED!

!testRun: #AccountReporterTest #test10AccountSummaryShouldReflectDepositsOnPortfoliosWithPortfolios stamp: 'fr 11/16/2020 02:10:17'!
PASSED!

!testRun: #AccountReporterTest #test11AccountSummaryShouldReflectWithdrawsOnPortfoliosWithPortfolios stamp: 'fr 11/16/2020 02:10:17'!
PASSED!

!testRun: #AccountReporterTest #test12AccountSummaryShouldReflectOutgoingAndIncomingTransfersOnPortfoliosWithPortfolios stamp: 'fr 11/16/2020 02:10:17'!
PASSED!

!testRun: #AccountReporterTest #test13NetTransferForAccountWithNoTransactionsShouldBeZero stamp: 'fr 11/16/2020 02:10:17'!
PASSED!

!testRun: #AccountReporterTest #test14NetTransferForAccountWithAnOutgoingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 02:10:17'!
PASSED!

!testRun: #AccountReporterTest #test15NetTransferForAccountWithAnIncomingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 02:10:17'!
PASSED!

!testRun: #AccountReporterTest #test16NetTransferForAccountShouldNotReflectDeposits stamp: 'fr 11/16/2020 02:10:17'!
PASSED!

!testRun: #AccountReporterTest #test17NetTransferForAccountShouldNotReflectWithdraws stamp: 'fr 11/16/2020 02:10:17'!
PASSED!

!testRun: #AccountReporterTest #test18NetTransferForPortfolioWithNoTransactionsShouldBeZero stamp: 'fr 11/16/2020 02:10:17'!
PASSED!

!testRun: #AccountReporterTest #test19NetTransferForPortfolioWithAnOutgoingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 02:10:17'!
PASSED!

!testRun: #AccountReporterTest #test20NetTransferForPortfolioWithAnIncomingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 02:10:17'!
PASSED!

!testRun: #AccountReporterTest #test21NetTransferForPortfolioShouldNotReflectDeposits stamp: 'fr 11/16/2020 02:10:17'!
PASSED!

!testRun: #AccountReporterTest #test22NetTransferForPortfolioShouldNotReflectWithdraws stamp: 'fr 11/16/2020 02:10:17'!
PASSED!

!testRun: #AccountReporterTest #test23NetTransferForPortfoliosWithPortfoliosShouldReflectOutgoingAndIncomingTransfers stamp: 'fr 11/16/2020 02:10:17'!
PASSED!

!testRun: #AccountReporterTest #test24NetTransferForPortfoliosWithPortfoliosShouldNotRelfectDepositsOrWithdraws stamp: 'fr 11/16/2020 02:10:17'!
PASSED!
!AccountReporterTest methodsFor: 'tests - account summary' stamp: 'fr 11/16/2020 02:10:51' prior: 50897611!
test04AccountSummaryShouldReflectOutgoingTransfersOnAccounts

	self createNewAccountsAndAReporterForAnAccount.
	
	
	
	.
	
	self createAnAccountWithAReporterAnotherAccountPerform: 
		[Transfer move: 100 from: account1 to: anotherAccount1.] 
      andAssert: 
		[self assert: reporter1 accountSummary equals: (OrderedCollection with: 'Salida por transferencia de 100.' with: 'Balance = -100')]! !
!AccountReporterTest methodsFor: 'tests - account summary' stamp: 'fr 11/16/2020 02:10:54' prior: 50897863!
test04AccountSummaryShouldReflectOutgoingTransfersOnAccounts

	
	self createAnAccountWithAReporterAnotherAccountPerform: 
		[Transfer move: 100 from: account1 to: anotherAccount1.] 
      andAssert: 
		[self assert: reporter1 accountSummary equals: (OrderedCollection with: 'Salida por transferencia de 100.' with: 'Balance = -100')]! !
!AccountReporterTest methodsFor: 'tests - account summary' stamp: 'fr 11/16/2020 02:10:54' prior: 50897879!
test04AccountSummaryShouldReflectOutgoingTransfersOnAccounts
	
	self createAnAccountWithAReporterAnotherAccountPerform: 
		[Transfer move: 100 from: account1 to: anotherAccount1.] 
      andAssert: 
		[self assert: reporter1 accountSummary equals: (OrderedCollection with: 'Salida por transferencia de 100.' with: 'Balance = -100')]! !

!testRun: #AccountReporterTest #test04AccountSummaryShouldReflectOutgoingTransfersOnAccounts stamp: 'fr 11/16/2020 02:10:55'!
PASSED!

!testRun: #AccountReporterTest #test01AccountSummaryForAccountWithNoTransactionsShouldJustShowBalanceZero stamp: 'fr 11/16/2020 02:10:55'!
PASSED!

!testRun: #AccountReporterTest #test02AccountSummaryShouldReflectDepositsOnAccounts stamp: 'fr 11/16/2020 02:10:55'!
PASSED!

!testRun: #AccountReporterTest #test03AccountSummaryShouldReflectWithdrawsOnAccounts stamp: 'fr 11/16/2020 02:10:55'!
PASSED!

!testRun: #AccountReporterTest #test04AccountSummaryShouldReflectOutgoingTransfersOnAccounts stamp: 'fr 11/16/2020 02:10:55'!
PASSED!

!testRun: #AccountReporterTest #test05AccountSummaryShouldReflectIncomingTransfersOnAccounts stamp: 'fr 11/16/2020 02:10:55'!
PASSED!

!testRun: #AccountReporterTest #test06AccountSummaryForPortfolioWithNoTransactionsShouldJustShowBalanceZero stamp: 'fr 11/16/2020 02:10:55'!
PASSED!

!testRun: #AccountReporterTest #test07AccountSummaryShouldReflectDepositsOnPortfoliosWithAccounts stamp: 'fr 11/16/2020 02:10:55'!
PASSED!

!testRun: #AccountReporterTest #test08AccountSummaryShouldReflectWithdrawsOnPortfoliosWithAccounts stamp: 'fr 11/16/2020 02:10:55'!
PASSED!

!testRun: #AccountReporterTest #test09AccountSummaryShouldReflectOutgoingAndIncomingTransfersOnPortfoliosWithAccounts stamp: 'fr 11/16/2020 02:10:55'!
PASSED!

!testRun: #AccountReporterTest #test10AccountSummaryShouldReflectDepositsOnPortfoliosWithPortfolios stamp: 'fr 11/16/2020 02:10:55'!
PASSED!

!testRun: #AccountReporterTest #test11AccountSummaryShouldReflectWithdrawsOnPortfoliosWithPortfolios stamp: 'fr 11/16/2020 02:10:55'!
PASSED!

!testRun: #AccountReporterTest #test12AccountSummaryShouldReflectOutgoingAndIncomingTransfersOnPortfoliosWithPortfolios stamp: 'fr 11/16/2020 02:10:55'!
PASSED!

!testRun: #AccountReporterTest #test13NetTransferForAccountWithNoTransactionsShouldBeZero stamp: 'fr 11/16/2020 02:10:55'!
PASSED!

!testRun: #AccountReporterTest #test14NetTransferForAccountWithAnOutgoingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 02:10:55'!
PASSED!

!testRun: #AccountReporterTest #test15NetTransferForAccountWithAnIncomingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 02:10:55'!
PASSED!

!testRun: #AccountReporterTest #test16NetTransferForAccountShouldNotReflectDeposits stamp: 'fr 11/16/2020 02:10:55'!
PASSED!

!testRun: #AccountReporterTest #test17NetTransferForAccountShouldNotReflectWithdraws stamp: 'fr 11/16/2020 02:10:55'!
PASSED!

!testRun: #AccountReporterTest #test18NetTransferForPortfolioWithNoTransactionsShouldBeZero stamp: 'fr 11/16/2020 02:10:55'!
PASSED!

!testRun: #AccountReporterTest #test19NetTransferForPortfolioWithAnOutgoingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 02:10:55'!
PASSED!

!testRun: #AccountReporterTest #test20NetTransferForPortfolioWithAnIncomingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 02:10:55'!
PASSED!

!testRun: #AccountReporterTest #test21NetTransferForPortfolioShouldNotReflectDeposits stamp: 'fr 11/16/2020 02:10:55'!
PASSED!

!testRun: #AccountReporterTest #test22NetTransferForPortfolioShouldNotReflectWithdraws stamp: 'fr 11/16/2020 02:10:55'!
PASSED!

!testRun: #AccountReporterTest #test23NetTransferForPortfoliosWithPortfoliosShouldReflectOutgoingAndIncomingTransfers stamp: 'fr 11/16/2020 02:10:55'!
PASSED!

!testRun: #AccountReporterTest #test24NetTransferForPortfoliosWithPortfoliosShouldNotRelfectDepositsOrWithdraws stamp: 'fr 11/16/2020 02:10:55'!
PASSED!
!AccountReporterTest methodsFor: 'tests - account summary' stamp: 'fr 11/16/2020 02:11:01' prior: 50897893!
test04AccountSummaryShouldReflectOutgoingTransfersOnAccounts
	
	self createAnAccountWithAReporterAnotherAccountPerform: 
		[Transfer move: 100 from: account1 to: anotherAccount1.] 
      andAssert: 
		[self assert: reporter1 accountSummary 
			equals: (OrderedCollection with: 'Salida por transferencia de 100.' with: 'Balance = -100')]! !
!AccountReporterTest methodsFor: 'tests - account summary' stamp: 'fr 11/16/2020 02:11:17' prior: 50898017!
test04AccountSummaryShouldReflectOutgoingTransfersOnAccounts
	
	self createAnAccountWithAReporterAnotherAccountPerform: 
		[Transfer move: 100 from: account1 to: anotherAccount1] 
      andAssert: 
		[self assert: reporter1 accountSummary 
			equals: (OrderedCollection with: 'Salida por transferencia de 100.' with: 'Balance = -100')]! !
!AccountReporterTest methodsFor: 'tests - account summary' stamp: 'fr 11/16/2020 02:11:23' prior: 50898031!
test04AccountSummaryShouldReflectOutgoingTransfersOnAccounts
	
	self createAnAccountWithAReporterAnotherAccountPerform: 
		[Transfer move: 100 from: account1 to: anotherAccount1] 
      andAssert: 
		[self assert: reporter1 accountSummary 
			equals: (OrderedCollection with: 'Salida por transferencia de 100.' with: 'Balance = -100')]! !
!AccountReporterTest methodsFor: 'tests - account summary' stamp: 'fr 11/16/2020 02:11:30' prior: 50897468!
test05AccountSummaryShouldReflectIncomingTransfersOnAccounts

	self createAnAccountWithAReporterAnotherAccountPerform: 
			[Transfer move: 100 from: anotherAccount1 to: account1] 
	      andAssert: 
			[self assert: reporter1 accountSummary 
				equals: (OrderedCollection with: 'Entrada por transferencia de 100.' with: 'Balance = 100')]
! !
!AccountReporterTest methodsFor: 'tests - account summary' stamp: 'fr 11/16/2020 02:11:42' prior: 50898045!
test04AccountSummaryShouldReflectOutgoingTransfersOnAccounts
	
	self createAnAccountWithAReporterAnotherAccountPerform: 
			[Transfer move: 100 from: account1 to: anotherAccount1] 
	      andAssert: 
			[self assert: reporter1 accountSummary 
				equals: (OrderedCollection with: 'Salida por transferencia de 100.' with: 'Balance = -100')]! !
!AccountReporterTest methodsFor: 'tests - account summary' stamp: 'fr 11/16/2020 02:11:51' prior: 50898074!
test04AccountSummaryShouldReflectOutgoingTransfersOnAccounts
	
	self createAnAccountWithAReporterAnotherAccountPerform: 
			[Transfer move: 100 from: account1 to: anotherAccount1] 
	      andAssert: 
			[self assert: reporter1 accountSummary 
				equals: (OrderedCollection with: 'Salida por transferencia de 100.' with: 'Balance = -100')]! !

----SNAPSHOT----(16 November 2020 02:13:24) CuisUniversity-4384.image priorSource: 18041604!
!AccountReporterTest methodsFor: 'tests - account summary' stamp: 'fr 11/16/2020 02:11:42' prior: 50898089!
test04AccountSummaryShouldReflectOutgoingTransfersOnAccounts
	
	self createAnAccountWithAReporterAnotherAccountPerform: 
			[Transfer move: 100 from: account1 to: anotherAccount1] 
	      andAssert: 
			[self assert: reporter1 accountSummary 
				equals: (OrderedCollection with: 'Salida por transferencia de 100.' with: 'Balance = -100')]! !
!AccountReporterTest methodsFor: 'tests - account summary' stamp: 'fr 11/16/2020 02:11:51' prior: 50898107!
test04AccountSummaryShouldReflectOutgoingTransfersOnAccounts
	
	self createAnAccountWithAReporterAnotherAccountPerform: 
			[Transfer move: 100 from: account1 to: anotherAccount1] 
	      andAssert: 
			[self assert: reporter1 accountSummary 
				equals: (OrderedCollection with: 'Salida por transferencia de 100.' with: 'Balance = -100')]! !
!AccountReporterTest methodsFor: 'tests - account summary' stamp: 'fr 11/16/2020 02:10:51' prior: 50898122!
test04AccountSummaryShouldReflectOutgoingTransfersOnAccounts

	self createNewAccountsAndAReporterForAnAccount.
	
	
	
	.
	
	self createAnAccountWithAReporterAnotherAccountPerform: 
		[Transfer move: 100 from: account1 to: anotherAccount1.] 
      andAssert: 
		[self assert: reporter1 accountSummary equals: (OrderedCollection with: 'Salida por transferencia de 100.' with: 'Balance = -100')]! !
!AccountReporterTest methodsFor: 'tests - account summary' stamp: 'fr 11/16/2020 02:04:13' prior: 50898137!
test04AccountSummaryShouldReflectOutgoingTransfersOnAccounts

	self createNewAccountsAndAReporterForAnAccount.
	
	Transfer move: 100 from: account1 to: anotherAccount1.
	
	self assert: reporter1 accountSummary equals: (OrderedCollection with: 'Salida por transferencia de 100.' with: 'Balance = -100')! !
!AccountReporterTest methodsFor: 'tests - account summary' stamp: 'fr 11/16/2020 02:03:38' prior: 50898059!
test05AccountSummaryShouldReflectIncomingTransfersOnAccounts

	self createNewAccountsAndAReporterForAnAccount.

	Transfer move: 100 from: anotherAccount1 to: account1.
	
	self assert: reporter1 accountSummary equals: (OrderedCollection with: 'Entrada por transferencia de 100.' with: 'Balance = 100')! !

!testRun: #AccountReporterTest #test05AccountSummaryShouldReflectIncomingTransfersOnAccounts stamp: 'fr 11/16/2020 02:15:25'!
PASSED!

!testRun: #AccountReporterTest #test01AccountSummaryForAccountWithNoTransactionsShouldJustShowBalanceZero stamp: 'fr 11/16/2020 02:15:25'!
PASSED!

!testRun: #AccountReporterTest #test02AccountSummaryShouldReflectDepositsOnAccounts stamp: 'fr 11/16/2020 02:15:25'!
PASSED!

!testRun: #AccountReporterTest #test03AccountSummaryShouldReflectWithdrawsOnAccounts stamp: 'fr 11/16/2020 02:15:25'!
PASSED!

!testRun: #AccountReporterTest #test04AccountSummaryShouldReflectOutgoingTransfersOnAccounts stamp: 'fr 11/16/2020 02:15:25'!
PASSED!

!testRun: #AccountReporterTest #test05AccountSummaryShouldReflectIncomingTransfersOnAccounts stamp: 'fr 11/16/2020 02:15:25'!
PASSED!

!testRun: #AccountReporterTest #test06AccountSummaryForPortfolioWithNoTransactionsShouldJustShowBalanceZero stamp: 'fr 11/16/2020 02:15:25'!
PASSED!

!testRun: #AccountReporterTest #test07AccountSummaryShouldReflectDepositsOnPortfoliosWithAccounts stamp: 'fr 11/16/2020 02:15:25'!
PASSED!

!testRun: #AccountReporterTest #test08AccountSummaryShouldReflectWithdrawsOnPortfoliosWithAccounts stamp: 'fr 11/16/2020 02:15:25'!
PASSED!

!testRun: #AccountReporterTest #test09AccountSummaryShouldReflectOutgoingAndIncomingTransfersOnPortfoliosWithAccounts stamp: 'fr 11/16/2020 02:15:25'!
PASSED!

!testRun: #AccountReporterTest #test10AccountSummaryShouldReflectDepositsOnPortfoliosWithPortfolios stamp: 'fr 11/16/2020 02:15:25'!
PASSED!

!testRun: #AccountReporterTest #test11AccountSummaryShouldReflectWithdrawsOnPortfoliosWithPortfolios stamp: 'fr 11/16/2020 02:15:25'!
PASSED!

!testRun: #AccountReporterTest #test12AccountSummaryShouldReflectOutgoingAndIncomingTransfersOnPortfoliosWithPortfolios stamp: 'fr 11/16/2020 02:15:25'!
PASSED!

!testRun: #AccountReporterTest #test13NetTransferForAccountWithNoTransactionsShouldBeZero stamp: 'fr 11/16/2020 02:15:25'!
PASSED!

!testRun: #AccountReporterTest #test14NetTransferForAccountWithAnOutgoingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 02:15:25'!
PASSED!

!testRun: #AccountReporterTest #test15NetTransferForAccountWithAnIncomingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 02:15:25'!
PASSED!

!testRun: #AccountReporterTest #test16NetTransferForAccountShouldNotReflectDeposits stamp: 'fr 11/16/2020 02:15:25'!
PASSED!

!testRun: #AccountReporterTest #test17NetTransferForAccountShouldNotReflectWithdraws stamp: 'fr 11/16/2020 02:15:25'!
PASSED!

!testRun: #AccountReporterTest #test18NetTransferForPortfolioWithNoTransactionsShouldBeZero stamp: 'fr 11/16/2020 02:15:25'!
PASSED!

!testRun: #AccountReporterTest #test19NetTransferForPortfolioWithAnOutgoingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 02:15:25'!
PASSED!

!testRun: #AccountReporterTest #test20NetTransferForPortfolioWithAnIncomingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 02:15:25'!
PASSED!

!testRun: #AccountReporterTest #test21NetTransferForPortfolioShouldNotReflectDeposits stamp: 'fr 11/16/2020 02:15:25'!
PASSED!

!testRun: #AccountReporterTest #test22NetTransferForPortfolioShouldNotReflectWithdraws stamp: 'fr 11/16/2020 02:15:25'!
PASSED!

!testRun: #AccountReporterTest #test23NetTransferForPortfoliosWithPortfoliosShouldReflectOutgoingAndIncomingTransfers stamp: 'fr 11/16/2020 02:15:25'!
PASSED!

!testRun: #AccountReporterTest #test24NetTransferForPortfoliosWithPortfoliosShouldNotRelfectDepositsOrWithdraws stamp: 'fr 11/16/2020 02:15:25'!
PASSED!

!methodRemoval: AccountReporterTest #createAnAccountWithAReporterAnotherAccountPerform:andAssert: stamp: 'fr 11/16/2020 02:15:31'!
createAnAccountWithAReporterAnotherAccountPerform: aTransactionBlock andAssert: aBlockToAssert
	
	self createNewAccountsAndAReporterForAnAccount.
	
	aTransactionBlock value.
	
	aBlockToAssert value!

!classDefinition: #AccountReporterTest category: 'Portfolio-Part-II-Exercise' stamp: 'fr 11/16/2020 02:18:18'!
TestCase subclass: #AccountReporterTest
	instanceVariableNames: 'accountForSummary reporter1 anotherAccount1'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Part-II-Exercise'!
!AccountReporterTest methodsFor: 'as yet unclassified' stamp: 'fr 11/16/2020 02:18:18' prior: 50898153!
test04AccountSummaryShouldReflectOutgoingTransfersOnAccounts

	self createNewAccountsAndAReporterForAnAccount.
	
	Transfer move: 100 from: accountForSummary to: anotherAccount1.
	
	self assert: reporter1 accountSummary equals: (OrderedCollection with: 'Salida por transferencia de 100.' with: 'Balance = -100')! !
!AccountReporterTest methodsFor: 'as yet unclassified' stamp: 'fr 11/16/2020 02:18:18' prior: 50897396!
test03AccountSummaryShouldReflectWithdrawsOnAccounts
	
	self createNewAccountAndReporterForIt.
	
	Withdraw register: 100 on: accountForSummary. 
	
	self assert: reporter1 accountSummary equals: (OrderedCollection with: 'Extracci�n por 100.' with: 'Balance = -100')! !
!AccountReporterTest methodsFor: 'as yet unclassified' stamp: 'fr 11/16/2020 02:18:18' prior: 50896349!
createNewAccountAndReporterForIt
	
	accountForSummary _ ReceptiveAccount new.
	reporter1 _ SummaryReporter for: accountForSummary.! !
!AccountReporterTest methodsFor: 'as yet unclassified' stamp: 'fr 11/16/2020 02:18:18' prior: 50897384!
test02AccountSummaryShouldReflectDepositsOnAccounts

	self createNewAccountAndReporterForIt.
	
	Deposit register: 100 on: accountForSummary. 
	
	self assert: reporter1 accountSummary equals: (OrderedCollection with: 'Dep�sito por 100.' with: 'Balance = 100')! !
!AccountReporterTest methodsFor: 'as yet unclassified' stamp: 'fr 11/16/2020 02:18:18' prior: 50898166!
test05AccountSummaryShouldReflectIncomingTransfersOnAccounts

	self createNewAccountsAndAReporterForAnAccount.

	Transfer move: 100 from: anotherAccount1 to: accountForSummary.
	
	self assert: reporter1 accountSummary equals: (OrderedCollection with: 'Entrada por transferencia de 100.' with: 'Balance = 100')! !

!classDefinition: #AccountReporterTest category: 'Portfolio-Part-II-Exercise' stamp: 'fr 11/16/2020 02:18:25'!
TestCase subclass: #AccountReporterTest
	instanceVariableNames: 'accountForSummary reporter1 anotherAccountForSummary'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Part-II-Exercise'!
!AccountReporterTest methodsFor: 'as yet unclassified' stamp: 'fr 11/16/2020 02:18:25' prior: 50898309!
test04AccountSummaryShouldReflectOutgoingTransfersOnAccounts

	self createNewAccountsAndAReporterForAnAccount.
	
	Transfer move: 100 from: accountForSummary to: anotherAccountForSummary.
	
	self assert: reporter1 accountSummary equals: (OrderedCollection with: 'Salida por transferencia de 100.' with: 'Balance = -100')! !
!AccountReporterTest methodsFor: 'as yet unclassified' stamp: 'fr 11/16/2020 02:18:25' prior: 50898355!
test05AccountSummaryShouldReflectIncomingTransfersOnAccounts

	self createNewAccountsAndAReporterForAnAccount.

	Transfer move: 100 from: anotherAccountForSummary to: accountForSummary.
	
	self assert: reporter1 accountSummary equals: (OrderedCollection with: 'Entrada por transferencia de 100.' with: 'Balance = 100')! !
!AccountReporterTest methodsFor: 'as yet unclassified' stamp: 'fr 11/16/2020 02:18:25' prior: 50897117!
createNewAccountsAndAReporterForAnAccount

	self createNewAccountAndReporterForIt.
	anotherAccountForSummary _ ReceptiveAccount new! !

!classDefinition: #AccountReporterTest category: 'Portfolio-Part-II-Exercise' stamp: 'fr 11/16/2020 02:18:35'!
TestCase subclass: #AccountReporterTest
	instanceVariableNames: 'accountForSummary reporterForAccountSummary anotherAccountForSummary'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Part-II-Exercise'!
!AccountReporterTest methodsFor: 'as yet unclassified' stamp: 'fr 11/16/2020 02:18:35' prior: 50898335!
createNewAccountAndReporterForIt
	
	accountForSummary _ ReceptiveAccount new.
	reporterForAccountSummary _ SummaryReporter for: accountForSummary.! !
!AccountReporterTest methodsFor: 'as yet unclassified' stamp: 'fr 11/16/2020 02:18:35' prior: 50898343!
test02AccountSummaryShouldReflectDepositsOnAccounts

	self createNewAccountAndReporterForIt.
	
	Deposit register: 100 on: accountForSummary. 
	
	self assert: reporterForAccountSummary accountSummary equals: (OrderedCollection with: 'Dep�sito por 100.' with: 'Balance = 100')! !
!AccountReporterTest methodsFor: 'as yet unclassified' stamp: 'fr 11/16/2020 02:18:35' prior: 50898392!
test05AccountSummaryShouldReflectIncomingTransfersOnAccounts

	self createNewAccountsAndAReporterForAnAccount.

	Transfer move: 100 from: anotherAccountForSummary to: accountForSummary.
	
	self assert: reporterForAccountSummary accountSummary equals: (OrderedCollection with: 'Entrada por transferencia de 100.' with: 'Balance = 100')! !
!AccountReporterTest methodsFor: 'as yet unclassified' stamp: 'fr 11/16/2020 02:18:35' prior: 50898323!
test03AccountSummaryShouldReflectWithdrawsOnAccounts
	
	self createNewAccountAndReporterForIt.
	
	Withdraw register: 100 on: accountForSummary. 
	
	self assert: reporterForAccountSummary accountSummary equals: (OrderedCollection with: 'Extracci�n por 100.' with: 'Balance = -100')! !
!AccountReporterTest methodsFor: 'as yet unclassified' stamp: 'fr 11/16/2020 02:18:35' prior: 50898378!
test04AccountSummaryShouldReflectOutgoingTransfersOnAccounts

	self createNewAccountsAndAReporterForAnAccount.
	
	Transfer move: 100 from: accountForSummary to: anotherAccountForSummary.
	
	self assert: reporterForAccountSummary accountSummary equals: (OrderedCollection with: 'Salida por transferencia de 100.' with: 'Balance = -100')! !
!AccountReporterTest methodsFor: 'as yet unclassified' stamp: 'fr 11/16/2020 02:18:35' prior: 50897430!
test01AccountSummaryForAccountWithNoTransactionsShouldJustShowBalanceZero

	self createNewAccountAndReporterForIt.
	
	self assert: reporterForAccountSummary accountSummary equals: (OrderedCollection with: 'Balance = 0').! !
!AccountReporterTest methodsFor: 'tests - account summary' stamp: 'fr 11/16/2020 02:19:23'!
createNewAccount

	^ accountForSummary _ ReceptiveAccount new! !
!AccountReporterTest methodsFor: 'tests - account summary' stamp: 'fr 11/16/2020 02:19:23' prior: 50898424!
createNewAccountAndReporterForIt
	
	self createNewAccount.
	reporterForAccountSummary _ SummaryReporter for: accountForSummary.! !
!AccountReporterTest methodsFor: 'tests - account summary' stamp: 'fr 11/16/2020 02:19:37' prior: 50898495!
createNewAccount

	accountForSummary _ ReceptiveAccount new! !
!AccountReporterTest methodsFor: 'tests - account summary' stamp: 'fr 11/16/2020 02:20:09'!
createNewAccountAndSummaryReporterForIt
	
	self createNewAccount.
	reporterForAccountSummary _ SummaryReporter for: accountForSummary.! !
!AccountReporterTest methodsFor: 'as yet unclassified' stamp: 'fr 11/16/2020 02:20:09' prior: 50898458!
test03AccountSummaryShouldReflectWithdrawsOnAccounts
	
	self createNewAccountAndSummaryReporterForIt.
	
	Withdraw register: 100 on: accountForSummary. 
	
	self assert: reporterForAccountSummary accountSummary equals: (OrderedCollection with: 'Extracci�n por 100.' with: 'Balance = -100')! !
!AccountReporterTest methodsFor: 'as yet unclassified' stamp: 'fr 11/16/2020 02:20:09' prior: 50898432!
test02AccountSummaryShouldReflectDepositsOnAccounts

	self createNewAccountAndSummaryReporterForIt.
	
	Deposit register: 100 on: accountForSummary. 
	
	self assert: reporterForAccountSummary accountSummary equals: (OrderedCollection with: 'Dep�sito por 100.' with: 'Balance = 100')! !
!AccountReporterTest methodsFor: 'as yet unclassified' stamp: 'fr 11/16/2020 02:20:09' prior: 50898406!
createNewAccountsAndAReporterForAnAccount

	self createNewAccountAndSummaryReporterForIt.
	anotherAccountForSummary _ ReceptiveAccount new! !
!AccountReporterTest methodsFor: 'as yet unclassified' stamp: 'fr 11/16/2020 02:20:09' prior: 50898485!
test01AccountSummaryForAccountWithNoTransactionsShouldJustShowBalanceZero

	self createNewAccountAndSummaryReporterForIt.
	
	self assert: reporterForAccountSummary accountSummary equals: (OrderedCollection with: 'Balance = 0').! !

!methodRemoval: AccountReporterTest #createNewAccountAndReporterForIt stamp: 'fr 11/16/2020 02:20:09'!
createNewAccountAndReporterForIt
	
	self createNewAccount.
	reporterForAccountSummary _ SummaryReporter for: accountForSummary.!
!AccountReporterTest methodsFor: 'tests - account summary' stamp: 'fr 11/16/2020 02:20:24'!
createNewAccountsAndSummaryReporterForAnAccount

	self createNewAccountAndSummaryReporterForIt.
	anotherAccountForSummary _ ReceptiveAccount new! !
!AccountReporterTest methodsFor: 'as yet unclassified' stamp: 'fr 11/16/2020 02:20:24' prior: 50898471!
test04AccountSummaryShouldReflectOutgoingTransfersOnAccounts

	self createNewAccountsAndSummaryReporterForAnAccount.
	
	Transfer move: 100 from: accountForSummary to: anotherAccountForSummary.
	
	self assert: reporterForAccountSummary accountSummary equals: (OrderedCollection with: 'Salida por transferencia de 100.' with: 'Balance = -100')! !
!AccountReporterTest methodsFor: 'as yet unclassified' stamp: 'fr 11/16/2020 02:20:24' prior: 50898444!
test05AccountSummaryShouldReflectIncomingTransfersOnAccounts

	self createNewAccountsAndSummaryReporterForAnAccount.

	Transfer move: 100 from: anotherAccountForSummary to: accountForSummary.
	
	self assert: reporterForAccountSummary accountSummary equals: (OrderedCollection with: 'Entrada por transferencia de 100.' with: 'Balance = 100')! !

!methodRemoval: AccountReporterTest #createNewAccountsAndAReporterForAnAccount stamp: 'fr 11/16/2020 02:20:24'!
createNewAccountsAndAReporterForAnAccount

	self createNewAccountAndSummaryReporterForIt.
	anotherAccountForSummary _ ReceptiveAccount new!
!AccountReporterTest methodsFor: 'tests - account summary' stamp: 'fr 11/16/2020 02:20:40'!
createNewAccountsAndSummaryReporterForOne

	self createNewAccountAndSummaryReporterForIt.
	anotherAccountForSummary _ ReceptiveAccount new! !
!AccountReporterTest methodsFor: 'as yet unclassified' stamp: 'fr 11/16/2020 02:20:40' prior: 50898582!
test04AccountSummaryShouldReflectOutgoingTransfersOnAccounts

	self createNewAccountsAndSummaryReporterForOne.
	
	Transfer move: 100 from: accountForSummary to: anotherAccountForSummary.
	
	self assert: reporterForAccountSummary accountSummary equals: (OrderedCollection with: 'Salida por transferencia de 100.' with: 'Balance = -100')! !
!AccountReporterTest methodsFor: 'as yet unclassified' stamp: 'fr 11/16/2020 02:20:40' prior: 50898597!
test05AccountSummaryShouldReflectIncomingTransfersOnAccounts

	self createNewAccountsAndSummaryReporterForOne.

	Transfer move: 100 from: anotherAccountForSummary to: accountForSummary.
	
	self assert: reporterForAccountSummary accountSummary equals: (OrderedCollection with: 'Entrada por transferencia de 100.' with: 'Balance = 100')! !

!methodRemoval: AccountReporterTest #createNewAccountsAndSummaryReporterForAnAccount stamp: 'fr 11/16/2020 02:20:40'!
createNewAccountsAndSummaryReporterForAnAccount

	self createNewAccountAndSummaryReporterForIt.
	anotherAccountForSummary _ ReceptiveAccount new!

!testRun: #AccountReporterTest #test01AccountSummaryForAccountWithNoTransactionsShouldJustShowBalanceZero stamp: 'fr 11/16/2020 02:20:45'!
PASSED!

!testRun: #AccountReporterTest #test01AccountSummaryForAccountWithNoTransactionsShouldJustShowBalanceZero stamp: 'fr 11/16/2020 02:20:45'!
PASSED!

!testRun: #AccountReporterTest #test02AccountSummaryShouldReflectDepositsOnAccounts stamp: 'fr 11/16/2020 02:20:45'!
PASSED!

!testRun: #AccountReporterTest #test03AccountSummaryShouldReflectWithdrawsOnAccounts stamp: 'fr 11/16/2020 02:20:45'!
PASSED!

!testRun: #AccountReporterTest #test04AccountSummaryShouldReflectOutgoingTransfersOnAccounts stamp: 'fr 11/16/2020 02:20:45'!
PASSED!

!testRun: #AccountReporterTest #test05AccountSummaryShouldReflectIncomingTransfersOnAccounts stamp: 'fr 11/16/2020 02:20:45'!
PASSED!

!testRun: #AccountReporterTest #test06AccountSummaryForPortfolioWithNoTransactionsShouldJustShowBalanceZero stamp: 'fr 11/16/2020 02:20:45'!
PASSED!

!testRun: #AccountReporterTest #test07AccountSummaryShouldReflectDepositsOnPortfoliosWithAccounts stamp: 'fr 11/16/2020 02:20:45'!
PASSED!

!testRun: #AccountReporterTest #test08AccountSummaryShouldReflectWithdrawsOnPortfoliosWithAccounts stamp: 'fr 11/16/2020 02:20:45'!
PASSED!

!testRun: #AccountReporterTest #test09AccountSummaryShouldReflectOutgoingAndIncomingTransfersOnPortfoliosWithAccounts stamp: 'fr 11/16/2020 02:20:45'!
PASSED!

!testRun: #AccountReporterTest #test10AccountSummaryShouldReflectDepositsOnPortfoliosWithPortfolios stamp: 'fr 11/16/2020 02:20:45'!
PASSED!

!testRun: #AccountReporterTest #test11AccountSummaryShouldReflectWithdrawsOnPortfoliosWithPortfolios stamp: 'fr 11/16/2020 02:20:45'!
PASSED!

!testRun: #AccountReporterTest #test12AccountSummaryShouldReflectOutgoingAndIncomingTransfersOnPortfoliosWithPortfolios stamp: 'fr 11/16/2020 02:20:45'!
PASSED!

!testRun: #AccountReporterTest #test13NetTransferForAccountWithNoTransactionsShouldBeZero stamp: 'fr 11/16/2020 02:20:45'!
PASSED!

!testRun: #AccountReporterTest #test14NetTransferForAccountWithAnOutgoingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 02:20:45'!
PASSED!

!testRun: #AccountReporterTest #test15NetTransferForAccountWithAnIncomingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 02:20:45'!
PASSED!

!testRun: #AccountReporterTest #test16NetTransferForAccountShouldNotReflectDeposits stamp: 'fr 11/16/2020 02:20:45'!
PASSED!

!testRun: #AccountReporterTest #test17NetTransferForAccountShouldNotReflectWithdraws stamp: 'fr 11/16/2020 02:20:45'!
PASSED!

!testRun: #AccountReporterTest #test18NetTransferForPortfolioWithNoTransactionsShouldBeZero stamp: 'fr 11/16/2020 02:20:45'!
PASSED!

!testRun: #AccountReporterTest #test19NetTransferForPortfolioWithAnOutgoingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 02:20:45'!
PASSED!

!testRun: #AccountReporterTest #test20NetTransferForPortfolioWithAnIncomingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 02:20:45'!
PASSED!

!testRun: #AccountReporterTest #test21NetTransferForPortfolioShouldNotReflectDeposits stamp: 'fr 11/16/2020 02:20:45'!
PASSED!

!testRun: #AccountReporterTest #test22NetTransferForPortfolioShouldNotReflectWithdraws stamp: 'fr 11/16/2020 02:20:45'!
PASSED!

!testRun: #AccountReporterTest #test23NetTransferForPortfoliosWithPortfoliosShouldReflectOutgoingAndIncomingTransfers stamp: 'fr 11/16/2020 02:20:45'!
PASSED!

!testRun: #AccountReporterTest #test24NetTransferForPortfoliosWithPortfoliosShouldNotRelfectDepositsOrWithdraws stamp: 'fr 11/16/2020 02:20:45'!
PASSED!
!AccountReporterTest methodsFor: 'tests - account summary' stamp: 'fr 11/16/2020 02:21:42' prior: 50898641!
test05AccountSummaryShouldReflectIncomingTransfersOnAccounts

	self createNewAccountsAndSummaryReporterForOne.

	Transfer move: 100 from: anotherAccountForSummary to: accountForSummary.
	
	self  assert: reporterForAccountSummary accountSummary 
		equals: (OrderedCollection with: 'Entrada por transferencia de 100.' with: 'Balance = 100')! !

!classDefinition: #AccountReporterTest category: 'Portfolio-Part-II-Exercise' stamp: 'fr 11/16/2020 02:22:00'!
TestCase subclass: #AccountReporterTest
	instanceVariableNames: 'account1 reporterForAccountSummary anotherAccountForSummary'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Part-II-Exercise'!
!AccountReporterTest methodsFor: 'as yet unclassified' stamp: 'fr 11/16/2020 02:22:00' prior: 50898535!
test02AccountSummaryShouldReflectDepositsOnAccounts

	self createNewAccountAndSummaryReporterForIt.
	
	Deposit register: 100 on: account1. 
	
	self assert: reporterForAccountSummary accountSummary equals: (OrderedCollection with: 'Dep�sito por 100.' with: 'Balance = 100')! !
!AccountReporterTest methodsFor: 'as yet unclassified' stamp: 'fr 11/16/2020 02:22:00' prior: 50898774!
test05AccountSummaryShouldReflectIncomingTransfersOnAccounts

	self createNewAccountsAndSummaryReporterForOne.

	Transfer move: 100 from: anotherAccountForSummary to: account1.
	
	self  assert: reporterForAccountSummary accountSummary 
		equals: (OrderedCollection with: 'Entrada por transferencia de 100.' with: 'Balance = 100')! !
!AccountReporterTest methodsFor: 'as yet unclassified' stamp: 'fr 11/16/2020 02:22:00' prior: 50898514!
createNewAccountAndSummaryReporterForIt
	
	self createNewAccount.
	reporterForAccountSummary _ SummaryReporter for: account1.! !
!AccountReporterTest methodsFor: 'as yet unclassified' stamp: 'fr 11/16/2020 02:22:00' prior: 50898509!
createNewAccount

	account1 _ ReceptiveAccount new! !
!AccountReporterTest methodsFor: 'as yet unclassified' stamp: 'fr 11/16/2020 02:22:00' prior: 50898522!
test03AccountSummaryShouldReflectWithdrawsOnAccounts
	
	self createNewAccountAndSummaryReporterForIt.
	
	Withdraw register: 100 on: account1. 
	
	self assert: reporterForAccountSummary accountSummary equals: (OrderedCollection with: 'Extracci�n por 100.' with: 'Balance = -100')! !
!AccountReporterTest methodsFor: 'as yet unclassified' stamp: 'fr 11/16/2020 02:22:00' prior: 50898627!
test04AccountSummaryShouldReflectOutgoingTransfersOnAccounts

	self createNewAccountsAndSummaryReporterForOne.
	
	Transfer move: 100 from: account1 to: anotherAccountForSummary.
	
	self assert: reporterForAccountSummary accountSummary equals: (OrderedCollection with: 'Salida por transferencia de 100.' with: 'Balance = -100')! !

!classDefinition: #AccountReporterTest category: 'Portfolio-Part-II-Exercise' stamp: 'fr 11/16/2020 02:22:05'!
TestCase subclass: #AccountReporterTest
	instanceVariableNames: 'account1 reporterForAccountSummary anotherAccount1'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Part-II-Exercise'!
!AccountReporterTest methodsFor: 'as yet unclassified' stamp: 'fr 11/16/2020 02:22:05' prior: 50898851!
test04AccountSummaryShouldReflectOutgoingTransfersOnAccounts

	self createNewAccountsAndSummaryReporterForOne.
	
	Transfer move: 100 from: account1 to: anotherAccount1.
	
	self assert: reporterForAccountSummary accountSummary equals: (OrderedCollection with: 'Salida por transferencia de 100.' with: 'Balance = -100')! !
!AccountReporterTest methodsFor: 'as yet unclassified' stamp: 'fr 11/16/2020 02:22:05' prior: 50898619!
createNewAccountsAndSummaryReporterForOne

	self createNewAccountAndSummaryReporterForIt.
	anotherAccount1 _ ReceptiveAccount new! !
!AccountReporterTest methodsFor: 'as yet unclassified' stamp: 'fr 11/16/2020 02:22:05' prior: 50898811!
test05AccountSummaryShouldReflectIncomingTransfersOnAccounts

	self createNewAccountsAndSummaryReporterForOne.

	Transfer move: 100 from: anotherAccount1 to: account1.
	
	self  assert: reporterForAccountSummary accountSummary 
		equals: (OrderedCollection with: 'Entrada por transferencia de 100.' with: 'Balance = 100')! !

!classDefinition: #AccountReporterTest category: 'Portfolio-Part-II-Exercise' stamp: 'fr 11/16/2020 02:22:08'!
TestCase subclass: #AccountReporterTest
	instanceVariableNames: 'account1 reporter1 anotherAccount1'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Part-II-Exercise'!
!AccountReporterTest methodsFor: 'as yet unclassified' stamp: 'fr 11/16/2020 02:22:08' prior: 50898799!
test02AccountSummaryShouldReflectDepositsOnAccounts

	self createNewAccountAndSummaryReporterForIt.
	
	Deposit register: 100 on: account1. 
	
	self assert: reporter1 accountSummary equals: (OrderedCollection with: 'Dep�sito por 100.' with: 'Balance = 100')! !
!AccountReporterTest methodsFor: 'as yet unclassified' stamp: 'fr 11/16/2020 02:22:08' prior: 50898897!
test05AccountSummaryShouldReflectIncomingTransfersOnAccounts

	self createNewAccountsAndSummaryReporterForOne.

	Transfer move: 100 from: anotherAccount1 to: account1.
	
	self  assert: reporter1 accountSummary 
		equals: (OrderedCollection with: 'Entrada por transferencia de 100.' with: 'Balance = 100')! !
!AccountReporterTest methodsFor: 'as yet unclassified' stamp: 'fr 11/16/2020 02:22:08' prior: 50898825!
createNewAccountAndSummaryReporterForIt
	
	self createNewAccount.
	reporter1 _ SummaryReporter for: account1.! !
!AccountReporterTest methodsFor: 'as yet unclassified' stamp: 'fr 11/16/2020 02:22:08' prior: 50898838!
test03AccountSummaryShouldReflectWithdrawsOnAccounts
	
	self createNewAccountAndSummaryReporterForIt.
	
	Withdraw register: 100 on: account1. 
	
	self assert: reporter1 accountSummary equals: (OrderedCollection with: 'Extracci�n por 100.' with: 'Balance = -100')! !
!AccountReporterTest methodsFor: 'as yet unclassified' stamp: 'fr 11/16/2020 02:22:08' prior: 50898875!
test04AccountSummaryShouldReflectOutgoingTransfersOnAccounts

	self createNewAccountsAndSummaryReporterForOne.
	
	Transfer move: 100 from: account1 to: anotherAccount1.
	
	self assert: reporter1 accountSummary equals: (OrderedCollection with: 'Salida por transferencia de 100.' with: 'Balance = -100')! !
!AccountReporterTest methodsFor: 'as yet unclassified' stamp: 'fr 11/16/2020 02:22:08' prior: 50898556!
test01AccountSummaryForAccountWithNoTransactionsShouldJustShowBalanceZero

	self createNewAccountAndSummaryReporterForIt.
	
	self assert: reporter1 accountSummary equals: (OrderedCollection with: 'Balance = 0').! !
!AccountReporterTest methodsFor: 'tests - account summary' stamp: 'fr 11/16/2020 02:22:21' prior: 50898964!
test04AccountSummaryShouldReflectOutgoingTransfersOnAccounts

	self createNewAccountsAndSummaryReporterForOne.
	
	Transfer move: 100 from: account1 to: anotherAccount1.
	
	self  assert: reporter1 accountSummary 
		equals: (OrderedCollection with: 'Salida por transferencia de 100.' with: 'Balance = -100')! !
!AccountReporterTest methodsFor: 'tests - account summary' stamp: 'fr 11/16/2020 02:22:29' prior: 50898952!
test03AccountSummaryShouldReflectWithdrawsOnAccounts
	
	self createNewAccountAndSummaryReporterForIt.
	
	Withdraw register: 100 on: account1. 
	
	self  assert: reporter1 accountSummary 
		equals: (OrderedCollection with: 'Extracci�n por 100.' with: 'Balance = -100')! !
!AccountReporterTest methodsFor: 'tests - account summary' stamp: 'fr 11/16/2020 02:22:35' prior: 50898920!
test02AccountSummaryShouldReflectDepositsOnAccounts

	self createNewAccountAndSummaryReporterForIt.
	
	Deposit register: 100 on: account1. 
	
	self  assert: reporter1 accountSummary 
		equals: (OrderedCollection with: 'Dep�sito por 100.' with: 'Balance = 100')! !
!AccountReporterTest methodsFor: 'tests - account summary' stamp: 'fr 11/16/2020 02:22:41' prior: 50898977!
test01AccountSummaryForAccountWithNoTransactionsShouldJustShowBalanceZero

	self createNewAccountAndSummaryReporterForIt.
	
	self  assert: reporter1 accountSummary 
		equals: (OrderedCollection with: 'Balance = 0').! !
!AccountReporterTest methodsFor: 'tests - account summary' stamp: 'fr 11/16/2020 02:22:56' prior: 50899014!
test02AccountSummaryShouldReflectDepositsOnAccounts

	self createNewAccountAndSummaryReporterForIt.
	
	Deposit   register: 100 
			on: account1. 
	
	self  assert: reporter1 accountSummary 
		equals: (OrderedCollection with: 'Dep�sito por 100.' with: 'Balance = 100')! !
!AccountReporterTest methodsFor: 'tests - account summary' stamp: 'fr 11/16/2020 02:23:05' prior: 50899037!
test02AccountSummaryShouldReflectDepositsOnAccounts

	self createNewAccountAndSummaryReporterForIt.
	
	Deposit   register: 100 
			on: account1. 
	
	self  assert: reporter1 accountSummary 
		equals: (OrderedCollection with: 'Dep�sito por 100.' with: 'Balance = 100')! !
!AccountReporterTest methodsFor: 'tests - account summary' stamp: 'fr 11/16/2020 02:23:22' prior: 50899049!
test02AccountSummaryShouldReflectDepositsOnAccounts

	self createNewAccountAndSummaryReporterForIt.
	
	Deposit register: 100 on: account1. 
	
	self  assert: reporter1 accountSummary 
		equals: (OrderedCollection with: 'Dep�sito por 100.' with: 'Balance = 100')! !

!testRun: #AccountReporterTest #test02AccountSummaryShouldReflectDepositsOnAccounts stamp: 'fr 11/16/2020 02:23:23'!
PASSED!

!testRun: #AccountReporterTest #test01AccountSummaryForAccountWithNoTransactionsShouldJustShowBalanceZero stamp: 'fr 11/16/2020 02:23:23'!
PASSED!

!testRun: #AccountReporterTest #test02AccountSummaryShouldReflectDepositsOnAccounts stamp: 'fr 11/16/2020 02:23:23'!
PASSED!

!testRun: #AccountReporterTest #test03AccountSummaryShouldReflectWithdrawsOnAccounts stamp: 'fr 11/16/2020 02:23:23'!
PASSED!

!testRun: #AccountReporterTest #test04AccountSummaryShouldReflectOutgoingTransfersOnAccounts stamp: 'fr 11/16/2020 02:23:23'!
PASSED!

!testRun: #AccountReporterTest #test05AccountSummaryShouldReflectIncomingTransfersOnAccounts stamp: 'fr 11/16/2020 02:23:23'!
PASSED!

!testRun: #AccountReporterTest #test06AccountSummaryForPortfolioWithNoTransactionsShouldJustShowBalanceZero stamp: 'fr 11/16/2020 02:23:23'!
PASSED!

!testRun: #AccountReporterTest #test07AccountSummaryShouldReflectDepositsOnPortfoliosWithAccounts stamp: 'fr 11/16/2020 02:23:23'!
PASSED!

!testRun: #AccountReporterTest #test08AccountSummaryShouldReflectWithdrawsOnPortfoliosWithAccounts stamp: 'fr 11/16/2020 02:23:23'!
PASSED!

!testRun: #AccountReporterTest #test09AccountSummaryShouldReflectOutgoingAndIncomingTransfersOnPortfoliosWithAccounts stamp: 'fr 11/16/2020 02:23:23'!
PASSED!

!testRun: #AccountReporterTest #test10AccountSummaryShouldReflectDepositsOnPortfoliosWithPortfolios stamp: 'fr 11/16/2020 02:23:23'!
PASSED!

!testRun: #AccountReporterTest #test11AccountSummaryShouldReflectWithdrawsOnPortfoliosWithPortfolios stamp: 'fr 11/16/2020 02:23:23'!
PASSED!

!testRun: #AccountReporterTest #test12AccountSummaryShouldReflectOutgoingAndIncomingTransfersOnPortfoliosWithPortfolios stamp: 'fr 11/16/2020 02:23:23'!
PASSED!

!testRun: #AccountReporterTest #test13NetTransferForAccountWithNoTransactionsShouldBeZero stamp: 'fr 11/16/2020 02:23:23'!
PASSED!

!testRun: #AccountReporterTest #test14NetTransferForAccountWithAnOutgoingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 02:23:23'!
PASSED!

!testRun: #AccountReporterTest #test15NetTransferForAccountWithAnIncomingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 02:23:23'!
PASSED!

!testRun: #AccountReporterTest #test16NetTransferForAccountShouldNotReflectDeposits stamp: 'fr 11/16/2020 02:23:23'!
PASSED!

!testRun: #AccountReporterTest #test17NetTransferForAccountShouldNotReflectWithdraws stamp: 'fr 11/16/2020 02:23:23'!
PASSED!

!testRun: #AccountReporterTest #test18NetTransferForPortfolioWithNoTransactionsShouldBeZero stamp: 'fr 11/16/2020 02:23:23'!
PASSED!

!testRun: #AccountReporterTest #test19NetTransferForPortfolioWithAnOutgoingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 02:23:23'!
PASSED!

!testRun: #AccountReporterTest #test20NetTransferForPortfolioWithAnIncomingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 02:23:23'!
PASSED!

!testRun: #AccountReporterTest #test21NetTransferForPortfolioShouldNotReflectDeposits stamp: 'fr 11/16/2020 02:23:23'!
PASSED!

!testRun: #AccountReporterTest #test22NetTransferForPortfolioShouldNotReflectWithdraws stamp: 'fr 11/16/2020 02:23:23'!
PASSED!

!testRun: #AccountReporterTest #test23NetTransferForPortfoliosWithPortfoliosShouldReflectOutgoingAndIncomingTransfers stamp: 'fr 11/16/2020 02:23:23'!
PASSED!

!testRun: #AccountReporterTest #test24NetTransferForPortfoliosWithPortfoliosShouldNotRelfectDepositsOrWithdraws stamp: 'fr 11/16/2020 02:23:23'!
PASSED!
!AccountReporterTest methodsFor: 'tests - account summary' stamp: 'fr 11/16/2020 02:23:39' prior: 50879001!
test06AccountSummaryForPortfolioWithNoTransactionsShouldJustShowBalanceZero

	| portfolio reporter |
	
	portfolio _ Portfolio new.
	reporter _ SummaryReporter for: portfolio.
	
	self  assert: reporter accountSummary 
		equals: (OrderedCollection with: 'Balance = 0')! !
!AccountReporterTest methodsFor: 'tests - account summary' stamp: 'fr 11/16/2020 02:23:53' prior: 50895766!
test07AccountSummaryShouldReflectDepositsOnPortfoliosWithAccounts

	| portfolio account reporter |
	
	account _ ReceptiveAccount new.
	portfolio _ Portfolio with: account.
	reporter _ SummaryReporter for: portfolio.
	Deposit register: 100 on: account.
			
	self  assert: reporter accountSummary 
		equals: (OrderedCollection with: 'Dep�sito por 100.' with: 'Balance = 100')! !
!AccountReporterTest methodsFor: 'tests - account summary' stamp: 'fr 11/16/2020 02:24:04' prior: 50895891!
test08AccountSummaryShouldReflectWithdrawsOnPortfoliosWithAccounts

	| portfolio account reporter |
	
	account _ ReceptiveAccount new.
	portfolio _ Portfolio with: account.
	reporter _ SummaryReporter for: portfolio.
	Withdraw register: 100 on: account.
			
	self  assert: reporter accountSummary 
		equals: (OrderedCollection with: 'Extracci�n por 100.' with: 'Balance = -100')! !

!testRun: #AccountReporterTest #test08AccountSummaryShouldReflectWithdrawsOnPortfoliosWithAccounts stamp: 'fr 11/16/2020 02:24:05'!
PASSED!

!testRun: #AccountReporterTest #test01AccountSummaryForAccountWithNoTransactionsShouldJustShowBalanceZero stamp: 'fr 11/16/2020 02:24:05'!
PASSED!

!testRun: #AccountReporterTest #test02AccountSummaryShouldReflectDepositsOnAccounts stamp: 'fr 11/16/2020 02:24:05'!
PASSED!

!testRun: #AccountReporterTest #test03AccountSummaryShouldReflectWithdrawsOnAccounts stamp: 'fr 11/16/2020 02:24:05'!
PASSED!

!testRun: #AccountReporterTest #test04AccountSummaryShouldReflectOutgoingTransfersOnAccounts stamp: 'fr 11/16/2020 02:24:05'!
PASSED!

!testRun: #AccountReporterTest #test05AccountSummaryShouldReflectIncomingTransfersOnAccounts stamp: 'fr 11/16/2020 02:24:05'!
PASSED!

!testRun: #AccountReporterTest #test06AccountSummaryForPortfolioWithNoTransactionsShouldJustShowBalanceZero stamp: 'fr 11/16/2020 02:24:05'!
PASSED!

!testRun: #AccountReporterTest #test07AccountSummaryShouldReflectDepositsOnPortfoliosWithAccounts stamp: 'fr 11/16/2020 02:24:05'!
PASSED!

!testRun: #AccountReporterTest #test08AccountSummaryShouldReflectWithdrawsOnPortfoliosWithAccounts stamp: 'fr 11/16/2020 02:24:05'!
PASSED!

!testRun: #AccountReporterTest #test09AccountSummaryShouldReflectOutgoingAndIncomingTransfersOnPortfoliosWithAccounts stamp: 'fr 11/16/2020 02:24:05'!
PASSED!

!testRun: #AccountReporterTest #test10AccountSummaryShouldReflectDepositsOnPortfoliosWithPortfolios stamp: 'fr 11/16/2020 02:24:05'!
PASSED!

!testRun: #AccountReporterTest #test11AccountSummaryShouldReflectWithdrawsOnPortfoliosWithPortfolios stamp: 'fr 11/16/2020 02:24:05'!
PASSED!

!testRun: #AccountReporterTest #test12AccountSummaryShouldReflectOutgoingAndIncomingTransfersOnPortfoliosWithPortfolios stamp: 'fr 11/16/2020 02:24:05'!
PASSED!

!testRun: #AccountReporterTest #test13NetTransferForAccountWithNoTransactionsShouldBeZero stamp: 'fr 11/16/2020 02:24:05'!
PASSED!

!testRun: #AccountReporterTest #test14NetTransferForAccountWithAnOutgoingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 02:24:05'!
PASSED!

!testRun: #AccountReporterTest #test15NetTransferForAccountWithAnIncomingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 02:24:05'!
PASSED!

!testRun: #AccountReporterTest #test16NetTransferForAccountShouldNotReflectDeposits stamp: 'fr 11/16/2020 02:24:05'!
PASSED!

!testRun: #AccountReporterTest #test17NetTransferForAccountShouldNotReflectWithdraws stamp: 'fr 11/16/2020 02:24:05'!
PASSED!

!testRun: #AccountReporterTest #test18NetTransferForPortfolioWithNoTransactionsShouldBeZero stamp: 'fr 11/16/2020 02:24:05'!
PASSED!

!testRun: #AccountReporterTest #test19NetTransferForPortfolioWithAnOutgoingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 02:24:05'!
PASSED!

!testRun: #AccountReporterTest #test20NetTransferForPortfolioWithAnIncomingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 02:24:05'!
PASSED!

!testRun: #AccountReporterTest #test21NetTransferForPortfolioShouldNotReflectDeposits stamp: 'fr 11/16/2020 02:24:05'!
PASSED!

!testRun: #AccountReporterTest #test22NetTransferForPortfolioShouldNotReflectWithdraws stamp: 'fr 11/16/2020 02:24:05'!
PASSED!

!testRun: #AccountReporterTest #test23NetTransferForPortfoliosWithPortfoliosShouldReflectOutgoingAndIncomingTransfers stamp: 'fr 11/16/2020 02:24:05'!
PASSED!

!testRun: #AccountReporterTest #test24NetTransferForPortfoliosWithPortfoliosShouldNotRelfectDepositsOrWithdraws stamp: 'fr 11/16/2020 02:24:05'!
PASSED!
!AccountReporterTest methodsFor: 'tests - account summary' stamp: 'fr 11/16/2020 02:24:20' prior: 50896038!
test09AccountSummaryShouldReflectOutgoingAndIncomingTransfersOnPortfoliosWithAccounts

	| portfolio account anotherAccount reporter |
	
	account _ ReceptiveAccount new.
	anotherAccount _ ReceptiveAccount new.
	portfolio _ Portfolio with: account with: anotherAccount.
	reporter _ SummaryReporter for: portfolio.

	Transfer move: 10 from: account to: anotherAccount.
		
	self  assert: reporter accountSummary 
		equals: (OrderedCollection with: 'Salida por transferencia de 10.' with: 'Entrada por transferencia de 10.' with: 'Balance = 0')! !
!AccountReporterTest methodsFor: 'tests - account summary' stamp: 'fr 11/16/2020 02:24:33' prior: 50879506!
test10AccountSummaryShouldReflectDepositsOnPortfoliosWithPortfolios

	| portfolio account anotherPortfolio reporter |
	
	account _ ReceptiveAccount new.		
	portfolio _ Portfolio with: account.
	anotherPortfolio _ Portfolio with: portfolio.
	reporter _ SummaryReporter for: anotherPortfolio.

	Deposit register: 100 on: account.

		
	self  assert: reporter accountSummary 
		equals: (OrderedCollection with: 'Dep�sito por 100.' with: 'Balance = 100')! !

!testRun: #AccountReporterTest #test10AccountSummaryShouldReflectDepositsOnPortfoliosWithPortfolios stamp: 'fr 11/16/2020 02:24:34'!
PASSED!

!testRun: #AccountReporterTest #test01AccountSummaryForAccountWithNoTransactionsShouldJustShowBalanceZero stamp: 'fr 11/16/2020 02:24:34'!
PASSED!

!testRun: #AccountReporterTest #test02AccountSummaryShouldReflectDepositsOnAccounts stamp: 'fr 11/16/2020 02:24:34'!
PASSED!

!testRun: #AccountReporterTest #test03AccountSummaryShouldReflectWithdrawsOnAccounts stamp: 'fr 11/16/2020 02:24:34'!
PASSED!

!testRun: #AccountReporterTest #test04AccountSummaryShouldReflectOutgoingTransfersOnAccounts stamp: 'fr 11/16/2020 02:24:34'!
PASSED!

!testRun: #AccountReporterTest #test05AccountSummaryShouldReflectIncomingTransfersOnAccounts stamp: 'fr 11/16/2020 02:24:34'!
PASSED!

!testRun: #AccountReporterTest #test06AccountSummaryForPortfolioWithNoTransactionsShouldJustShowBalanceZero stamp: 'fr 11/16/2020 02:24:34'!
PASSED!

!testRun: #AccountReporterTest #test07AccountSummaryShouldReflectDepositsOnPortfoliosWithAccounts stamp: 'fr 11/16/2020 02:24:34'!
PASSED!

!testRun: #AccountReporterTest #test08AccountSummaryShouldReflectWithdrawsOnPortfoliosWithAccounts stamp: 'fr 11/16/2020 02:24:34'!
PASSED!

!testRun: #AccountReporterTest #test09AccountSummaryShouldReflectOutgoingAndIncomingTransfersOnPortfoliosWithAccounts stamp: 'fr 11/16/2020 02:24:34'!
PASSED!

!testRun: #AccountReporterTest #test10AccountSummaryShouldReflectDepositsOnPortfoliosWithPortfolios stamp: 'fr 11/16/2020 02:24:34'!
PASSED!

!testRun: #AccountReporterTest #test11AccountSummaryShouldReflectWithdrawsOnPortfoliosWithPortfolios stamp: 'fr 11/16/2020 02:24:34'!
PASSED!

!testRun: #AccountReporterTest #test12AccountSummaryShouldReflectOutgoingAndIncomingTransfersOnPortfoliosWithPortfolios stamp: 'fr 11/16/2020 02:24:34'!
PASSED!

!testRun: #AccountReporterTest #test13NetTransferForAccountWithNoTransactionsShouldBeZero stamp: 'fr 11/16/2020 02:24:34'!
PASSED!

!testRun: #AccountReporterTest #test14NetTransferForAccountWithAnOutgoingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 02:24:34'!
PASSED!

!testRun: #AccountReporterTest #test15NetTransferForAccountWithAnIncomingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 02:24:34'!
PASSED!

!testRun: #AccountReporterTest #test16NetTransferForAccountShouldNotReflectDeposits stamp: 'fr 11/16/2020 02:24:34'!
PASSED!

!testRun: #AccountReporterTest #test17NetTransferForAccountShouldNotReflectWithdraws stamp: 'fr 11/16/2020 02:24:34'!
PASSED!

!testRun: #AccountReporterTest #test18NetTransferForPortfolioWithNoTransactionsShouldBeZero stamp: 'fr 11/16/2020 02:24:34'!
PASSED!

!testRun: #AccountReporterTest #test19NetTransferForPortfolioWithAnOutgoingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 02:24:34'!
PASSED!

!testRun: #AccountReporterTest #test20NetTransferForPortfolioWithAnIncomingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 02:24:34'!
PASSED!

!testRun: #AccountReporterTest #test21NetTransferForPortfolioShouldNotReflectDeposits stamp: 'fr 11/16/2020 02:24:34'!
PASSED!

!testRun: #AccountReporterTest #test22NetTransferForPortfolioShouldNotReflectWithdraws stamp: 'fr 11/16/2020 02:24:34'!
PASSED!

!testRun: #AccountReporterTest #test23NetTransferForPortfoliosWithPortfoliosShouldReflectOutgoingAndIncomingTransfers stamp: 'fr 11/16/2020 02:24:34'!
PASSED!

!testRun: #AccountReporterTest #test24NetTransferForPortfoliosWithPortfoliosShouldNotRelfectDepositsOrWithdraws stamp: 'fr 11/16/2020 02:24:34'!
PASSED!
!AccountReporterTest methodsFor: 'tests - account summary' stamp: 'fr 11/16/2020 02:24:47' prior: 50879633!
test11AccountSummaryShouldReflectWithdrawsOnPortfoliosWithPortfolios

	| portfolio account anotherPortfolio reporter |
	
	account _ ReceptiveAccount new.		
	portfolio _ Portfolio with: account.
	anotherPortfolio _ Portfolio with: portfolio.
	reporter _ SummaryReporter for: anotherPortfolio.

	Withdraw register: 100 on: account.

		
	self  assert: reporter accountSummary 
		equals: (OrderedCollection with: 'Extracci�n por 100.' with: 'Balance = -100')! !
!AccountReporterTest methodsFor: 'tests - account summary' stamp: 'fr 11/16/2020 02:25:02' prior: 50879651!
test12AccountSummaryShouldReflectOutgoingAndIncomingTransfersOnPortfoliosWithPortfolios

	| portfolio account anotherPortfolio anotherAccount reporter |
	
	account _ ReceptiveAccount new.		
	anotherAccount _ ReceptiveAccount new.		
	portfolio _ Portfolio with: account.
	anotherPortfolio _ Portfolio with: portfolio.
	anotherPortfolio add: anotherAccount.
	reporter _ SummaryReporter for: anotherPortfolio.

	Transfer move: 100 from: account to: anotherAccount.

		
	self  assert: reporter accountSummary 
		equals: (OrderedCollection with: 'Salida por transferencia de 100.' with: 'Entrada por transferencia de 100.' with: 'Balance = 0')! !
!AccountReporterTest methodsFor: 'tests - account summary' stamp: 'fr 11/16/2020 02:25:27' prior: 50899504!
test12AccountSummaryShouldReflectOutgoingAndIncomingTransfersOnPortfoliosWithPortfolios

	| portfolio account anotherPortfolio anotherAccount reporter |
	
	account _ ReceptiveAccount new.		
	anotherAccount _ ReceptiveAccount new.		
	portfolio _ Portfolio with: account.
	anotherPortfolio _ Portfolio with: portfolio.
	anotherPortfolio add: anotherAccount.
	reporter _ SummaryReporter for: anotherPortfolio.

	Transfer move: 100 from: account to: anotherAccount.

		
	self  assert: reporter accountSummary 
		equals: (OrderedCollection with: 'Salida por transferencia de 100.' with: 'Entrada por transferencia de 100.' with: 'Balance = 0')! !

!testRun: #AccountReporterTest #test12AccountSummaryShouldReflectOutgoingAndIncomingTransfersOnPortfoliosWithPortfolios stamp: 'fr 11/16/2020 02:25:28'!
PASSED!

!testRun: #AccountReporterTest #test01AccountSummaryForAccountWithNoTransactionsShouldJustShowBalanceZero stamp: 'fr 11/16/2020 02:25:28'!
PASSED!

!testRun: #AccountReporterTest #test02AccountSummaryShouldReflectDepositsOnAccounts stamp: 'fr 11/16/2020 02:25:28'!
PASSED!

!testRun: #AccountReporterTest #test03AccountSummaryShouldReflectWithdrawsOnAccounts stamp: 'fr 11/16/2020 02:25:28'!
PASSED!

!testRun: #AccountReporterTest #test04AccountSummaryShouldReflectOutgoingTransfersOnAccounts stamp: 'fr 11/16/2020 02:25:28'!
PASSED!

!testRun: #AccountReporterTest #test05AccountSummaryShouldReflectIncomingTransfersOnAccounts stamp: 'fr 11/16/2020 02:25:28'!
PASSED!

!testRun: #AccountReporterTest #test06AccountSummaryForPortfolioWithNoTransactionsShouldJustShowBalanceZero stamp: 'fr 11/16/2020 02:25:28'!
PASSED!

!testRun: #AccountReporterTest #test07AccountSummaryShouldReflectDepositsOnPortfoliosWithAccounts stamp: 'fr 11/16/2020 02:25:28'!
PASSED!

!testRun: #AccountReporterTest #test08AccountSummaryShouldReflectWithdrawsOnPortfoliosWithAccounts stamp: 'fr 11/16/2020 02:25:28'!
PASSED!

!testRun: #AccountReporterTest #test09AccountSummaryShouldReflectOutgoingAndIncomingTransfersOnPortfoliosWithAccounts stamp: 'fr 11/16/2020 02:25:28'!
PASSED!

!testRun: #AccountReporterTest #test10AccountSummaryShouldReflectDepositsOnPortfoliosWithPortfolios stamp: 'fr 11/16/2020 02:25:28'!
PASSED!

!testRun: #AccountReporterTest #test11AccountSummaryShouldReflectWithdrawsOnPortfoliosWithPortfolios stamp: 'fr 11/16/2020 02:25:28'!
PASSED!

!testRun: #AccountReporterTest #test12AccountSummaryShouldReflectOutgoingAndIncomingTransfersOnPortfoliosWithPortfolios stamp: 'fr 11/16/2020 02:25:28'!
PASSED!

!testRun: #AccountReporterTest #test13NetTransferForAccountWithNoTransactionsShouldBeZero stamp: 'fr 11/16/2020 02:25:28'!
PASSED!

!testRun: #AccountReporterTest #test14NetTransferForAccountWithAnOutgoingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 02:25:28'!
PASSED!

!testRun: #AccountReporterTest #test15NetTransferForAccountWithAnIncomingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 02:25:28'!
PASSED!

!testRun: #AccountReporterTest #test16NetTransferForAccountShouldNotReflectDeposits stamp: 'fr 11/16/2020 02:25:28'!
PASSED!

!testRun: #AccountReporterTest #test17NetTransferForAccountShouldNotReflectWithdraws stamp: 'fr 11/16/2020 02:25:28'!
PASSED!

!testRun: #AccountReporterTest #test18NetTransferForPortfolioWithNoTransactionsShouldBeZero stamp: 'fr 11/16/2020 02:25:28'!
PASSED!

!testRun: #AccountReporterTest #test19NetTransferForPortfolioWithAnOutgoingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 02:25:28'!
PASSED!

!testRun: #AccountReporterTest #test20NetTransferForPortfolioWithAnIncomingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 02:25:28'!
PASSED!

!testRun: #AccountReporterTest #test21NetTransferForPortfolioShouldNotReflectDeposits stamp: 'fr 11/16/2020 02:25:28'!
PASSED!

!testRun: #AccountReporterTest #test22NetTransferForPortfolioShouldNotReflectWithdraws stamp: 'fr 11/16/2020 02:25:28'!
PASSED!

!testRun: #AccountReporterTest #test23NetTransferForPortfoliosWithPortfoliosShouldReflectOutgoingAndIncomingTransfers stamp: 'fr 11/16/2020 02:25:28'!
PASSED!

!testRun: #AccountReporterTest #test24NetTransferForPortfoliosWithPortfoliosShouldNotRelfectDepositsOrWithdraws stamp: 'fr 11/16/2020 02:25:28'!
PASSED!
!AccountReporterTest methodsFor: 'tests - account summary' stamp: 'fr 11/16/2020 02:26:23' prior: 50899195!
test07AccountSummaryShouldReflectDepositsOnPortfoliosWithAccounts

	| portfolio account reporter |
	
	account _ ReceptiveAccount new.
	portfolio _ Portfolio with: account.
	reporter _ SummaryReporter for: portfolio.
	
	Deposit register: 100 on: account.
			
	self  assert: reporter accountSummary 
		equals: (OrderedCollection with: 'Dep�sito por 100.' with: 'Balance = 100')! !
!AccountReporterTest methodsFor: 'tests - account summary' stamp: 'fr 11/16/2020 02:26:28' prior: 50899211!
test08AccountSummaryShouldReflectWithdrawsOnPortfoliosWithAccounts

	| portfolio account reporter |
	
	account _ ReceptiveAccount new.
	portfolio _ Portfolio with: account.
	reporter _ SummaryReporter for: portfolio.
	
	Withdraw register: 100 on: account.
			
	self  assert: reporter accountSummary 
		equals: (OrderedCollection with: 'Extracci�n por 100.' with: 'Balance = -100')! !
!AccountReporterTest methodsFor: 'tests - account summary' stamp: 'fr 11/16/2020 02:27:47' prior: 50899663!
test07AccountSummaryShouldReflectDepositsOnPortfoliosWithAccounts

	| portfolio reporter |
	
	self createNewAccount.
	portfolio _ Portfolio with: account1.
	reporter _ SummaryReporter for: portfolio.
	
	Deposit register: 100 on: account1.
			
	self  assert: reporter accountSummary 
		equals: (OrderedCollection with: 'Dep�sito por 100.' with: 'Balance = 100')! !

!testRun: #AccountReporterTest #test07AccountSummaryShouldReflectDepositsOnPortfoliosWithAccounts stamp: 'fr 11/16/2020 02:27:49'!
PASSED!

!testRun: #AccountReporterTest #test01AccountSummaryForAccountWithNoTransactionsShouldJustShowBalanceZero stamp: 'fr 11/16/2020 02:27:49'!
PASSED!

!testRun: #AccountReporterTest #test02AccountSummaryShouldReflectDepositsOnAccounts stamp: 'fr 11/16/2020 02:27:49'!
PASSED!

!testRun: #AccountReporterTest #test03AccountSummaryShouldReflectWithdrawsOnAccounts stamp: 'fr 11/16/2020 02:27:49'!
PASSED!

!testRun: #AccountReporterTest #test04AccountSummaryShouldReflectOutgoingTransfersOnAccounts stamp: 'fr 11/16/2020 02:27:49'!
PASSED!

!testRun: #AccountReporterTest #test05AccountSummaryShouldReflectIncomingTransfersOnAccounts stamp: 'fr 11/16/2020 02:27:49'!
PASSED!

!testRun: #AccountReporterTest #test06AccountSummaryForPortfolioWithNoTransactionsShouldJustShowBalanceZero stamp: 'fr 11/16/2020 02:27:49'!
PASSED!

!testRun: #AccountReporterTest #test07AccountSummaryShouldReflectDepositsOnPortfoliosWithAccounts stamp: 'fr 11/16/2020 02:27:49'!
PASSED!

!testRun: #AccountReporterTest #test08AccountSummaryShouldReflectWithdrawsOnPortfoliosWithAccounts stamp: 'fr 11/16/2020 02:27:49'!
PASSED!

!testRun: #AccountReporterTest #test09AccountSummaryShouldReflectOutgoingAndIncomingTransfersOnPortfoliosWithAccounts stamp: 'fr 11/16/2020 02:27:49'!
PASSED!

!testRun: #AccountReporterTest #test10AccountSummaryShouldReflectDepositsOnPortfoliosWithPortfolios stamp: 'fr 11/16/2020 02:27:49'!
PASSED!

!testRun: #AccountReporterTest #test11AccountSummaryShouldReflectWithdrawsOnPortfoliosWithPortfolios stamp: 'fr 11/16/2020 02:27:49'!
PASSED!

!testRun: #AccountReporterTest #test12AccountSummaryShouldReflectOutgoingAndIncomingTransfersOnPortfoliosWithPortfolios stamp: 'fr 11/16/2020 02:27:49'!
PASSED!

!testRun: #AccountReporterTest #test13NetTransferForAccountWithNoTransactionsShouldBeZero stamp: 'fr 11/16/2020 02:27:49'!
PASSED!

!testRun: #AccountReporterTest #test14NetTransferForAccountWithAnOutgoingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 02:27:49'!
PASSED!

!testRun: #AccountReporterTest #test15NetTransferForAccountWithAnIncomingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 02:27:49'!
PASSED!

!testRun: #AccountReporterTest #test16NetTransferForAccountShouldNotReflectDeposits stamp: 'fr 11/16/2020 02:27:49'!
PASSED!

!testRun: #AccountReporterTest #test17NetTransferForAccountShouldNotReflectWithdraws stamp: 'fr 11/16/2020 02:27:49'!
PASSED!

!testRun: #AccountReporterTest #test18NetTransferForPortfolioWithNoTransactionsShouldBeZero stamp: 'fr 11/16/2020 02:27:49'!
PASSED!

!testRun: #AccountReporterTest #test19NetTransferForPortfolioWithAnOutgoingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 02:27:49'!
PASSED!

!testRun: #AccountReporterTest #test20NetTransferForPortfolioWithAnIncomingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 02:27:49'!
PASSED!

!testRun: #AccountReporterTest #test21NetTransferForPortfolioShouldNotReflectDeposits stamp: 'fr 11/16/2020 02:27:49'!
PASSED!

!testRun: #AccountReporterTest #test22NetTransferForPortfolioShouldNotReflectWithdraws stamp: 'fr 11/16/2020 02:27:49'!
PASSED!

!testRun: #AccountReporterTest #test23NetTransferForPortfoliosWithPortfoliosShouldReflectOutgoingAndIncomingTransfers stamp: 'fr 11/16/2020 02:27:49'!
PASSED!

!testRun: #AccountReporterTest #test24NetTransferForPortfoliosWithPortfoliosShouldNotRelfectDepositsOrWithdraws stamp: 'fr 11/16/2020 02:27:49'!
PASSED!
!AccountReporterTest methodsFor: 'tests - account summary' stamp: 'fr 11/16/2020 02:27:58' prior: 50899679!
test08AccountSummaryShouldReflectWithdrawsOnPortfoliosWithAccounts

	| portfolio reporter |
	
	self createNewAccount.
	portfolio _ Portfolio with: account1.
	reporter _ SummaryReporter for: portfolio.
	
	Withdraw register: 100 on: account1.
			
	self  assert: reporter accountSummary 
		equals: (OrderedCollection with: 'Extracci�n por 100.' with: 'Balance = -100')! !

!testRun: #AccountReporterTest #test08AccountSummaryShouldReflectWithdrawsOnPortfoliosWithAccounts stamp: 'fr 11/16/2020 02:27:59'!
PASSED!

!testRun: #AccountReporterTest #test01AccountSummaryForAccountWithNoTransactionsShouldJustShowBalanceZero stamp: 'fr 11/16/2020 02:27:59'!
PASSED!

!testRun: #AccountReporterTest #test02AccountSummaryShouldReflectDepositsOnAccounts stamp: 'fr 11/16/2020 02:27:59'!
PASSED!

!testRun: #AccountReporterTest #test03AccountSummaryShouldReflectWithdrawsOnAccounts stamp: 'fr 11/16/2020 02:27:59'!
PASSED!

!testRun: #AccountReporterTest #test04AccountSummaryShouldReflectOutgoingTransfersOnAccounts stamp: 'fr 11/16/2020 02:27:59'!
PASSED!

!testRun: #AccountReporterTest #test05AccountSummaryShouldReflectIncomingTransfersOnAccounts stamp: 'fr 11/16/2020 02:27:59'!
PASSED!

!testRun: #AccountReporterTest #test06AccountSummaryForPortfolioWithNoTransactionsShouldJustShowBalanceZero stamp: 'fr 11/16/2020 02:27:59'!
PASSED!

!testRun: #AccountReporterTest #test07AccountSummaryShouldReflectDepositsOnPortfoliosWithAccounts stamp: 'fr 11/16/2020 02:27:59'!
PASSED!

!testRun: #AccountReporterTest #test08AccountSummaryShouldReflectWithdrawsOnPortfoliosWithAccounts stamp: 'fr 11/16/2020 02:27:59'!
PASSED!

!testRun: #AccountReporterTest #test09AccountSummaryShouldReflectOutgoingAndIncomingTransfersOnPortfoliosWithAccounts stamp: 'fr 11/16/2020 02:27:59'!
PASSED!

!testRun: #AccountReporterTest #test10AccountSummaryShouldReflectDepositsOnPortfoliosWithPortfolios stamp: 'fr 11/16/2020 02:27:59'!
PASSED!

!testRun: #AccountReporterTest #test11AccountSummaryShouldReflectWithdrawsOnPortfoliosWithPortfolios stamp: 'fr 11/16/2020 02:27:59'!
PASSED!

!testRun: #AccountReporterTest #test12AccountSummaryShouldReflectOutgoingAndIncomingTransfersOnPortfoliosWithPortfolios stamp: 'fr 11/16/2020 02:27:59'!
PASSED!

!testRun: #AccountReporterTest #test13NetTransferForAccountWithNoTransactionsShouldBeZero stamp: 'fr 11/16/2020 02:27:59'!
PASSED!

!testRun: #AccountReporterTest #test14NetTransferForAccountWithAnOutgoingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 02:27:59'!
PASSED!

!testRun: #AccountReporterTest #test15NetTransferForAccountWithAnIncomingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 02:27:59'!
PASSED!

!testRun: #AccountReporterTest #test16NetTransferForAccountShouldNotReflectDeposits stamp: 'fr 11/16/2020 02:27:59'!
PASSED!

!testRun: #AccountReporterTest #test17NetTransferForAccountShouldNotReflectWithdraws stamp: 'fr 11/16/2020 02:27:59'!
PASSED!

!testRun: #AccountReporterTest #test18NetTransferForPortfolioWithNoTransactionsShouldBeZero stamp: 'fr 11/16/2020 02:27:59'!
PASSED!

!testRun: #AccountReporterTest #test19NetTransferForPortfolioWithAnOutgoingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 02:27:59'!
PASSED!

!testRun: #AccountReporterTest #test20NetTransferForPortfolioWithAnIncomingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 02:27:59'!
PASSED!

!testRun: #AccountReporterTest #test21NetTransferForPortfolioShouldNotReflectDeposits stamp: 'fr 11/16/2020 02:27:59'!
PASSED!

!testRun: #AccountReporterTest #test22NetTransferForPortfolioShouldNotReflectWithdraws stamp: 'fr 11/16/2020 02:27:59'!
PASSED!

!testRun: #AccountReporterTest #test23NetTransferForPortfoliosWithPortfoliosShouldReflectOutgoingAndIncomingTransfers stamp: 'fr 11/16/2020 02:27:59'!
PASSED!

!testRun: #AccountReporterTest #test24NetTransferForPortfoliosWithPortfoliosShouldNotRelfectDepositsOrWithdraws stamp: 'fr 11/16/2020 02:27:59'!
PASSED!
!AccountReporterTest methodsFor: 'as yet unclassified' stamp: 'fr 11/16/2020 02:28:36' prior: 50899820!
test08AccountSummaryShouldReflectWithdrawsOnPortfoliosWithAccounts

	|  reporter |
	
	self createNewAccount.
	portfolio1 _ Portfolio with: account1.
	reporter _ SummaryReporter for: portfolio1.
	
	Withdraw register: 100 on: account1.
			
	self  assert: reporter accountSummary 
		equals: (OrderedCollection with: 'Extracci�n por 100.' with: 'Balance = -100')! !

!classDefinition: #AccountReporterTest category: 'Portfolio-Part-II-Exercise' stamp: 'fr 11/16/2020 02:28:36'!
TestCase subclass: #AccountReporterTest
	instanceVariableNames: 'account1 reporter1 anotherAccount1 portfolio1'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Part-II-Exercise'!
!AccountReporterTest methodsFor: 'tests - account summary' stamp: 'fr 11/16/2020 02:28:49' prior: 50899945!
test08AccountSummaryShouldReflectWithdrawsOnPortfoliosWithAccounts

	
	self createNewAccount.
	portfolio1 _ Portfolio with: account1.
	reporter1 _ SummaryReporter for: portfolio1.
	
	Withdraw register: 100 on: account1.
			
	self  assert: reporter1 accountSummary 
		equals: (OrderedCollection with: 'Extracci�n por 100.' with: 'Balance = -100')! !

!testRun: #AccountReporterTest #test08AccountSummaryShouldReflectWithdrawsOnPortfoliosWithAccounts stamp: 'fr 11/16/2020 02:28:50'!
PASSED!

!testRun: #AccountReporterTest #test01AccountSummaryForAccountWithNoTransactionsShouldJustShowBalanceZero stamp: 'fr 11/16/2020 02:28:50'!
PASSED!

!testRun: #AccountReporterTest #test02AccountSummaryShouldReflectDepositsOnAccounts stamp: 'fr 11/16/2020 02:28:50'!
PASSED!

!testRun: #AccountReporterTest #test03AccountSummaryShouldReflectWithdrawsOnAccounts stamp: 'fr 11/16/2020 02:28:50'!
PASSED!

!testRun: #AccountReporterTest #test04AccountSummaryShouldReflectOutgoingTransfersOnAccounts stamp: 'fr 11/16/2020 02:28:50'!
PASSED!

!testRun: #AccountReporterTest #test05AccountSummaryShouldReflectIncomingTransfersOnAccounts stamp: 'fr 11/16/2020 02:28:50'!
PASSED!

!testRun: #AccountReporterTest #test06AccountSummaryForPortfolioWithNoTransactionsShouldJustShowBalanceZero stamp: 'fr 11/16/2020 02:28:50'!
PASSED!

!testRun: #AccountReporterTest #test07AccountSummaryShouldReflectDepositsOnPortfoliosWithAccounts stamp: 'fr 11/16/2020 02:28:50'!
PASSED!

!testRun: #AccountReporterTest #test08AccountSummaryShouldReflectWithdrawsOnPortfoliosWithAccounts stamp: 'fr 11/16/2020 02:28:50'!
PASSED!

!testRun: #AccountReporterTest #test09AccountSummaryShouldReflectOutgoingAndIncomingTransfersOnPortfoliosWithAccounts stamp: 'fr 11/16/2020 02:28:50'!
PASSED!

!testRun: #AccountReporterTest #test10AccountSummaryShouldReflectDepositsOnPortfoliosWithPortfolios stamp: 'fr 11/16/2020 02:28:50'!
PASSED!

!testRun: #AccountReporterTest #test11AccountSummaryShouldReflectWithdrawsOnPortfoliosWithPortfolios stamp: 'fr 11/16/2020 02:28:50'!
PASSED!

!testRun: #AccountReporterTest #test12AccountSummaryShouldReflectOutgoingAndIncomingTransfersOnPortfoliosWithPortfolios stamp: 'fr 11/16/2020 02:28:50'!
PASSED!

!testRun: #AccountReporterTest #test13NetTransferForAccountWithNoTransactionsShouldBeZero stamp: 'fr 11/16/2020 02:28:50'!
PASSED!

!testRun: #AccountReporterTest #test14NetTransferForAccountWithAnOutgoingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 02:28:50'!
PASSED!

!testRun: #AccountReporterTest #test15NetTransferForAccountWithAnIncomingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 02:28:50'!
PASSED!

!testRun: #AccountReporterTest #test16NetTransferForAccountShouldNotReflectDeposits stamp: 'fr 11/16/2020 02:28:50'!
PASSED!

!testRun: #AccountReporterTest #test17NetTransferForAccountShouldNotReflectWithdraws stamp: 'fr 11/16/2020 02:28:50'!
PASSED!

!testRun: #AccountReporterTest #test18NetTransferForPortfolioWithNoTransactionsShouldBeZero stamp: 'fr 11/16/2020 02:28:50'!
PASSED!

!testRun: #AccountReporterTest #test19NetTransferForPortfolioWithAnOutgoingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 02:28:50'!
PASSED!

!testRun: #AccountReporterTest #test20NetTransferForPortfolioWithAnIncomingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 02:28:50'!
PASSED!

!testRun: #AccountReporterTest #test21NetTransferForPortfolioShouldNotReflectDeposits stamp: 'fr 11/16/2020 02:28:50'!
PASSED!

!testRun: #AccountReporterTest #test22NetTransferForPortfolioShouldNotReflectWithdraws stamp: 'fr 11/16/2020 02:28:50'!
PASSED!

!testRun: #AccountReporterTest #test23NetTransferForPortfoliosWithPortfoliosShouldReflectOutgoingAndIncomingTransfers stamp: 'fr 11/16/2020 02:28:50'!
PASSED!

!testRun: #AccountReporterTest #test24NetTransferForPortfoliosWithPortfoliosShouldNotRelfectDepositsOrWithdraws stamp: 'fr 11/16/2020 02:28:50'!
PASSED!
!AccountReporterTest methodsFor: 'tests - account summary' stamp: 'fr 11/16/2020 02:29:13'!
createNewAccountPortfolioForAccountAndReporterForPortfolio

	self createNewAccount.
	portfolio1 _ Portfolio with: account1.
	reporter1 _ SummaryReporter for: portfolio1! !
!AccountReporterTest methodsFor: 'tests - account summary' stamp: 'fr 11/16/2020 02:29:13' prior: 50899970!
test08AccountSummaryShouldReflectWithdrawsOnPortfoliosWithAccounts

	
	self createNewAccountPortfolioForAccountAndReporterForPortfolio.
	
	Withdraw register: 100 on: account1.
			
	self  assert: reporter1 accountSummary 
		equals: (OrderedCollection with: 'Extracci�n por 100.' with: 'Balance = -100')! !

!testRun: #AccountReporterTest #test08AccountSummaryShouldReflectWithdrawsOnPortfoliosWithAccounts stamp: 'fr 11/16/2020 02:29:20'!
PASSED!

!testRun: #AccountReporterTest #test01AccountSummaryForAccountWithNoTransactionsShouldJustShowBalanceZero stamp: 'fr 11/16/2020 02:29:20'!
PASSED!

!testRun: #AccountReporterTest #test02AccountSummaryShouldReflectDepositsOnAccounts stamp: 'fr 11/16/2020 02:29:20'!
PASSED!

!testRun: #AccountReporterTest #test03AccountSummaryShouldReflectWithdrawsOnAccounts stamp: 'fr 11/16/2020 02:29:20'!
PASSED!

!testRun: #AccountReporterTest #test04AccountSummaryShouldReflectOutgoingTransfersOnAccounts stamp: 'fr 11/16/2020 02:29:20'!
PASSED!

!testRun: #AccountReporterTest #test05AccountSummaryShouldReflectIncomingTransfersOnAccounts stamp: 'fr 11/16/2020 02:29:20'!
PASSED!

!testRun: #AccountReporterTest #test06AccountSummaryForPortfolioWithNoTransactionsShouldJustShowBalanceZero stamp: 'fr 11/16/2020 02:29:20'!
PASSED!

!testRun: #AccountReporterTest #test07AccountSummaryShouldReflectDepositsOnPortfoliosWithAccounts stamp: 'fr 11/16/2020 02:29:20'!
PASSED!

!testRun: #AccountReporterTest #test08AccountSummaryShouldReflectWithdrawsOnPortfoliosWithAccounts stamp: 'fr 11/16/2020 02:29:20'!
PASSED!

!testRun: #AccountReporterTest #test09AccountSummaryShouldReflectOutgoingAndIncomingTransfersOnPortfoliosWithAccounts stamp: 'fr 11/16/2020 02:29:20'!
PASSED!

!testRun: #AccountReporterTest #test10AccountSummaryShouldReflectDepositsOnPortfoliosWithPortfolios stamp: 'fr 11/16/2020 02:29:20'!
PASSED!

!testRun: #AccountReporterTest #test11AccountSummaryShouldReflectWithdrawsOnPortfoliosWithPortfolios stamp: 'fr 11/16/2020 02:29:20'!
PASSED!

!testRun: #AccountReporterTest #test12AccountSummaryShouldReflectOutgoingAndIncomingTransfersOnPortfoliosWithPortfolios stamp: 'fr 11/16/2020 02:29:20'!
PASSED!

!testRun: #AccountReporterTest #test13NetTransferForAccountWithNoTransactionsShouldBeZero stamp: 'fr 11/16/2020 02:29:20'!
PASSED!

!testRun: #AccountReporterTest #test14NetTransferForAccountWithAnOutgoingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 02:29:20'!
PASSED!

!testRun: #AccountReporterTest #test15NetTransferForAccountWithAnIncomingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 02:29:20'!
PASSED!

!testRun: #AccountReporterTest #test16NetTransferForAccountShouldNotReflectDeposits stamp: 'fr 11/16/2020 02:29:20'!
PASSED!

!testRun: #AccountReporterTest #test17NetTransferForAccountShouldNotReflectWithdraws stamp: 'fr 11/16/2020 02:29:20'!
PASSED!

!testRun: #AccountReporterTest #test18NetTransferForPortfolioWithNoTransactionsShouldBeZero stamp: 'fr 11/16/2020 02:29:20'!
PASSED!

!testRun: #AccountReporterTest #test19NetTransferForPortfolioWithAnOutgoingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 02:29:20'!
PASSED!

!testRun: #AccountReporterTest #test20NetTransferForPortfolioWithAnIncomingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 02:29:20'!
PASSED!

!testRun: #AccountReporterTest #test21NetTransferForPortfolioShouldNotReflectDeposits stamp: 'fr 11/16/2020 02:29:20'!
PASSED!

!testRun: #AccountReporterTest #test22NetTransferForPortfolioShouldNotReflectWithdraws stamp: 'fr 11/16/2020 02:29:20'!
PASSED!

!testRun: #AccountReporterTest #test23NetTransferForPortfoliosWithPortfoliosShouldReflectOutgoingAndIncomingTransfers stamp: 'fr 11/16/2020 02:29:20'!
PASSED!

!testRun: #AccountReporterTest #test24NetTransferForPortfoliosWithPortfoliosShouldNotRelfectDepositsOrWithdraws stamp: 'fr 11/16/2020 02:29:20'!
PASSED!
!AccountReporterTest methodsFor: 'tests - account summary' stamp: 'fr 11/16/2020 02:29:23' prior: 50900103!
test08AccountSummaryShouldReflectWithdrawsOnPortfoliosWithAccounts

	self createNewAccountPortfolioForAccountAndReporterForPortfolio.
	
	Withdraw register: 100 on: account1.
			
	self  assert: reporter1 accountSummary 
		equals: (OrderedCollection with: 'Extracci�n por 100.' with: 'Balance = -100')! !
!AccountReporterTest methodsFor: 'tests - account summary' stamp: 'fr 11/16/2020 02:29:34' prior: 50899695!
test07AccountSummaryShouldReflectDepositsOnPortfoliosWithAccounts

	self createNewAccountPortfolioForAccountAndReporterForPortfolio.
	
	Deposit register: 100 on: account1.
			
	self  assert: reporter1 accountSummary 
		equals: (OrderedCollection with: 'Dep�sito por 100.' with: 'Balance = 100')! !

!testRun: #AccountReporterTest #test07AccountSummaryShouldReflectDepositsOnPortfoliosWithAccounts stamp: 'fr 11/16/2020 02:29:55'!
PASSED!

!testRun: #AccountReporterTest #test01AccountSummaryForAccountWithNoTransactionsShouldJustShowBalanceZero stamp: 'fr 11/16/2020 02:29:55'!
PASSED!

!testRun: #AccountReporterTest #test02AccountSummaryShouldReflectDepositsOnAccounts stamp: 'fr 11/16/2020 02:29:55'!
PASSED!

!testRun: #AccountReporterTest #test03AccountSummaryShouldReflectWithdrawsOnAccounts stamp: 'fr 11/16/2020 02:29:55'!
PASSED!

!testRun: #AccountReporterTest #test04AccountSummaryShouldReflectOutgoingTransfersOnAccounts stamp: 'fr 11/16/2020 02:29:55'!
PASSED!

!testRun: #AccountReporterTest #test05AccountSummaryShouldReflectIncomingTransfersOnAccounts stamp: 'fr 11/16/2020 02:29:55'!
PASSED!

!testRun: #AccountReporterTest #test06AccountSummaryForPortfolioWithNoTransactionsShouldJustShowBalanceZero stamp: 'fr 11/16/2020 02:29:55'!
PASSED!

!testRun: #AccountReporterTest #test07AccountSummaryShouldReflectDepositsOnPortfoliosWithAccounts stamp: 'fr 11/16/2020 02:29:55'!
PASSED!

!testRun: #AccountReporterTest #test08AccountSummaryShouldReflectWithdrawsOnPortfoliosWithAccounts stamp: 'fr 11/16/2020 02:29:55'!
PASSED!

!testRun: #AccountReporterTest #test09AccountSummaryShouldReflectOutgoingAndIncomingTransfersOnPortfoliosWithAccounts stamp: 'fr 11/16/2020 02:29:55'!
PASSED!

!testRun: #AccountReporterTest #test10AccountSummaryShouldReflectDepositsOnPortfoliosWithPortfolios stamp: 'fr 11/16/2020 02:29:55'!
PASSED!

!testRun: #AccountReporterTest #test11AccountSummaryShouldReflectWithdrawsOnPortfoliosWithPortfolios stamp: 'fr 11/16/2020 02:29:55'!
PASSED!

!testRun: #AccountReporterTest #test12AccountSummaryShouldReflectOutgoingAndIncomingTransfersOnPortfoliosWithPortfolios stamp: 'fr 11/16/2020 02:29:55'!
PASSED!

!testRun: #AccountReporterTest #test13NetTransferForAccountWithNoTransactionsShouldBeZero stamp: 'fr 11/16/2020 02:29:55'!
PASSED!

!testRun: #AccountReporterTest #test14NetTransferForAccountWithAnOutgoingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 02:29:55'!
PASSED!

!testRun: #AccountReporterTest #test15NetTransferForAccountWithAnIncomingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 02:29:55'!
PASSED!

!testRun: #AccountReporterTest #test16NetTransferForAccountShouldNotReflectDeposits stamp: 'fr 11/16/2020 02:29:55'!
PASSED!

!testRun: #AccountReporterTest #test17NetTransferForAccountShouldNotReflectWithdraws stamp: 'fr 11/16/2020 02:29:55'!
PASSED!

!testRun: #AccountReporterTest #test18NetTransferForPortfolioWithNoTransactionsShouldBeZero stamp: 'fr 11/16/2020 02:29:55'!
PASSED!

!testRun: #AccountReporterTest #test19NetTransferForPortfolioWithAnOutgoingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 02:29:55'!
PASSED!

!testRun: #AccountReporterTest #test20NetTransferForPortfolioWithAnIncomingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 02:29:55'!
PASSED!

!testRun: #AccountReporterTest #test21NetTransferForPortfolioShouldNotReflectDeposits stamp: 'fr 11/16/2020 02:29:55'!
PASSED!

!testRun: #AccountReporterTest #test22NetTransferForPortfolioShouldNotReflectWithdraws stamp: 'fr 11/16/2020 02:29:55'!
PASSED!

!testRun: #AccountReporterTest #test23NetTransferForPortfoliosWithPortfoliosShouldReflectOutgoingAndIncomingTransfers stamp: 'fr 11/16/2020 02:29:55'!
PASSED!

!testRun: #AccountReporterTest #test24NetTransferForPortfoliosWithPortfoliosShouldNotRelfectDepositsOrWithdraws stamp: 'fr 11/16/2020 02:29:55'!
PASSED!
!AccountReporterTest methodsFor: 'tests - account summary' stamp: 'fr 11/16/2020 02:30:46' prior: 50899486!
test11AccountSummaryShouldReflectWithdrawsOnPortfoliosWithPortfolios

	| portfolio anotherPortfolio reporter |
	
	self createNewAccount.
	portfolio _ Portfolio with: account1.
	anotherPortfolio _ Portfolio with: portfolio.
	reporter _ SummaryReporter for: anotherPortfolio.

	Withdraw register: 100 on: account1.

		
	self  assert: reporter accountSummary 
		equals: (OrderedCollection with: 'Extracci�n por 100.' with: 'Balance = -100')! !

!testRun: #AccountReporterTest #test11AccountSummaryShouldReflectWithdrawsOnPortfoliosWithPortfolios stamp: 'fr 11/16/2020 02:30:49'!
PASSED!

!testRun: #AccountReporterTest #test01AccountSummaryForAccountWithNoTransactionsShouldJustShowBalanceZero stamp: 'fr 11/16/2020 02:30:49'!
PASSED!

!testRun: #AccountReporterTest #test02AccountSummaryShouldReflectDepositsOnAccounts stamp: 'fr 11/16/2020 02:30:49'!
PASSED!

!testRun: #AccountReporterTest #test03AccountSummaryShouldReflectWithdrawsOnAccounts stamp: 'fr 11/16/2020 02:30:49'!
PASSED!

!testRun: #AccountReporterTest #test04AccountSummaryShouldReflectOutgoingTransfersOnAccounts stamp: 'fr 11/16/2020 02:30:49'!
PASSED!

!testRun: #AccountReporterTest #test05AccountSummaryShouldReflectIncomingTransfersOnAccounts stamp: 'fr 11/16/2020 02:30:49'!
PASSED!

!testRun: #AccountReporterTest #test06AccountSummaryForPortfolioWithNoTransactionsShouldJustShowBalanceZero stamp: 'fr 11/16/2020 02:30:49'!
PASSED!

!testRun: #AccountReporterTest #test07AccountSummaryShouldReflectDepositsOnPortfoliosWithAccounts stamp: 'fr 11/16/2020 02:30:49'!
PASSED!

!testRun: #AccountReporterTest #test08AccountSummaryShouldReflectWithdrawsOnPortfoliosWithAccounts stamp: 'fr 11/16/2020 02:30:49'!
PASSED!

!testRun: #AccountReporterTest #test09AccountSummaryShouldReflectOutgoingAndIncomingTransfersOnPortfoliosWithAccounts stamp: 'fr 11/16/2020 02:30:49'!
PASSED!

!testRun: #AccountReporterTest #test10AccountSummaryShouldReflectDepositsOnPortfoliosWithPortfolios stamp: 'fr 11/16/2020 02:30:49'!
PASSED!

!testRun: #AccountReporterTest #test11AccountSummaryShouldReflectWithdrawsOnPortfoliosWithPortfolios stamp: 'fr 11/16/2020 02:30:49'!
PASSED!

!testRun: #AccountReporterTest #test12AccountSummaryShouldReflectOutgoingAndIncomingTransfersOnPortfoliosWithPortfolios stamp: 'fr 11/16/2020 02:30:49'!
PASSED!

!testRun: #AccountReporterTest #test13NetTransferForAccountWithNoTransactionsShouldBeZero stamp: 'fr 11/16/2020 02:30:49'!
PASSED!

!testRun: #AccountReporterTest #test14NetTransferForAccountWithAnOutgoingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 02:30:49'!
PASSED!

!testRun: #AccountReporterTest #test15NetTransferForAccountWithAnIncomingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 02:30:49'!
PASSED!

!testRun: #AccountReporterTest #test16NetTransferForAccountShouldNotReflectDeposits stamp: 'fr 11/16/2020 02:30:49'!
PASSED!

!testRun: #AccountReporterTest #test17NetTransferForAccountShouldNotReflectWithdraws stamp: 'fr 11/16/2020 02:30:49'!
PASSED!

!testRun: #AccountReporterTest #test18NetTransferForPortfolioWithNoTransactionsShouldBeZero stamp: 'fr 11/16/2020 02:30:49'!
PASSED!

!testRun: #AccountReporterTest #test19NetTransferForPortfolioWithAnOutgoingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 02:30:49'!
PASSED!

!testRun: #AccountReporterTest #test20NetTransferForPortfolioWithAnIncomingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 02:30:49'!
PASSED!

!testRun: #AccountReporterTest #test21NetTransferForPortfolioShouldNotReflectDeposits stamp: 'fr 11/16/2020 02:30:49'!
PASSED!

!testRun: #AccountReporterTest #test22NetTransferForPortfolioShouldNotReflectWithdraws stamp: 'fr 11/16/2020 02:30:49'!
PASSED!

!testRun: #AccountReporterTest #test23NetTransferForPortfoliosWithPortfoliosShouldReflectOutgoingAndIncomingTransfers stamp: 'fr 11/16/2020 02:30:49'!
PASSED!

!testRun: #AccountReporterTest #test24NetTransferForPortfoliosWithPortfoliosShouldNotRelfectDepositsOrWithdraws stamp: 'fr 11/16/2020 02:30:49'!
PASSED!
!AccountReporterTest methodsFor: 'tests - account summary' stamp: 'fr 11/16/2020 02:31:17' prior: 50899358!
test10AccountSummaryShouldReflectDepositsOnPortfoliosWithPortfolios

	| portfolio anotherPortfolio reporter |
	
	self createNewAccount.
	portfolio _ Portfolio with: account1.
	anotherPortfolio _ Portfolio with: portfolio.
	reporter _ SummaryReporter for: anotherPortfolio.

	Deposit register: 100 on: account1.

		
	self  assert: reporter accountSummary 
		equals: (OrderedCollection with: 'Dep�sito por 100.' with: 'Balance = 100')! !

!testRun: #AccountReporterTest #test10AccountSummaryShouldReflectDepositsOnPortfoliosWithPortfolios stamp: 'fr 11/16/2020 02:31:18'!
PASSED!

!testRun: #AccountReporterTest #test01AccountSummaryForAccountWithNoTransactionsShouldJustShowBalanceZero stamp: 'fr 11/16/2020 02:31:19'!
PASSED!

!testRun: #AccountReporterTest #test02AccountSummaryShouldReflectDepositsOnAccounts stamp: 'fr 11/16/2020 02:31:19'!
PASSED!

!testRun: #AccountReporterTest #test03AccountSummaryShouldReflectWithdrawsOnAccounts stamp: 'fr 11/16/2020 02:31:19'!
PASSED!

!testRun: #AccountReporterTest #test04AccountSummaryShouldReflectOutgoingTransfersOnAccounts stamp: 'fr 11/16/2020 02:31:19'!
PASSED!

!testRun: #AccountReporterTest #test05AccountSummaryShouldReflectIncomingTransfersOnAccounts stamp: 'fr 11/16/2020 02:31:19'!
PASSED!

!testRun: #AccountReporterTest #test06AccountSummaryForPortfolioWithNoTransactionsShouldJustShowBalanceZero stamp: 'fr 11/16/2020 02:31:19'!
PASSED!

!testRun: #AccountReporterTest #test07AccountSummaryShouldReflectDepositsOnPortfoliosWithAccounts stamp: 'fr 11/16/2020 02:31:19'!
PASSED!

!testRun: #AccountReporterTest #test08AccountSummaryShouldReflectWithdrawsOnPortfoliosWithAccounts stamp: 'fr 11/16/2020 02:31:19'!
PASSED!

!testRun: #AccountReporterTest #test09AccountSummaryShouldReflectOutgoingAndIncomingTransfersOnPortfoliosWithAccounts stamp: 'fr 11/16/2020 02:31:19'!
PASSED!

!testRun: #AccountReporterTest #test10AccountSummaryShouldReflectDepositsOnPortfoliosWithPortfolios stamp: 'fr 11/16/2020 02:31:19'!
PASSED!

!testRun: #AccountReporterTest #test11AccountSummaryShouldReflectWithdrawsOnPortfoliosWithPortfolios stamp: 'fr 11/16/2020 02:31:19'!
PASSED!

!testRun: #AccountReporterTest #test12AccountSummaryShouldReflectOutgoingAndIncomingTransfersOnPortfoliosWithPortfolios stamp: 'fr 11/16/2020 02:31:19'!
PASSED!

!testRun: #AccountReporterTest #test13NetTransferForAccountWithNoTransactionsShouldBeZero stamp: 'fr 11/16/2020 02:31:19'!
PASSED!

!testRun: #AccountReporterTest #test14NetTransferForAccountWithAnOutgoingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 02:31:19'!
PASSED!

!testRun: #AccountReporterTest #test15NetTransferForAccountWithAnIncomingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 02:31:19'!
PASSED!

!testRun: #AccountReporterTest #test16NetTransferForAccountShouldNotReflectDeposits stamp: 'fr 11/16/2020 02:31:19'!
PASSED!

!testRun: #AccountReporterTest #test17NetTransferForAccountShouldNotReflectWithdraws stamp: 'fr 11/16/2020 02:31:19'!
PASSED!

!testRun: #AccountReporterTest #test18NetTransferForPortfolioWithNoTransactionsShouldBeZero stamp: 'fr 11/16/2020 02:31:19'!
PASSED!

!testRun: #AccountReporterTest #test19NetTransferForPortfolioWithAnOutgoingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 02:31:19'!
PASSED!

!testRun: #AccountReporterTest #test20NetTransferForPortfolioWithAnIncomingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 02:31:19'!
PASSED!

!testRun: #AccountReporterTest #test21NetTransferForPortfolioShouldNotReflectDeposits stamp: 'fr 11/16/2020 02:31:19'!
PASSED!

!testRun: #AccountReporterTest #test22NetTransferForPortfolioShouldNotReflectWithdraws stamp: 'fr 11/16/2020 02:31:19'!
PASSED!

!testRun: #AccountReporterTest #test23NetTransferForPortfoliosWithPortfoliosShouldReflectOutgoingAndIncomingTransfers stamp: 'fr 11/16/2020 02:31:19'!
PASSED!

!testRun: #AccountReporterTest #test24NetTransferForPortfoliosWithPortfoliosShouldNotRelfectDepositsOrWithdraws stamp: 'fr 11/16/2020 02:31:19'!
PASSED!
!AccountReporterTest methodsFor: 'tests - account summary' stamp: 'fr 11/16/2020 02:31:43'!
createNewAccountAndPortfolioForAccount

	self createNewAccount.
	portfolio1 _ Portfolio with: account1! !
!AccountReporterTest methodsFor: 'tests - account summary' stamp: 'fr 11/16/2020 02:31:43' prior: 50900094!
createNewAccountPortfolioForAccountAndReporterForPortfolio

	self createNewAccountAndPortfolioForAccount.
	reporter1 _ SummaryReporter for: portfolio1! !
!AccountReporterTest methodsFor: 'tests - account summary' stamp: 'fr 11/16/2020 02:31:53'!
createNewAccountPortfolioWithAccountAndReporterForPortfolio

	self createNewAccountAndPortfolioForAccount.
	reporter1 _ SummaryReporter for: portfolio1! !
!AccountReporterTest methodsFor: 'as yet unclassified' stamp: 'fr 11/16/2020 02:31:54' prior: 50900240!
test07AccountSummaryShouldReflectDepositsOnPortfoliosWithAccounts

	self createNewAccountPortfolioWithAccountAndReporterForPortfolio.
	
	Deposit register: 100 on: account1.
			
	self  assert: reporter1 accountSummary 
		equals: (OrderedCollection with: 'Dep�sito por 100.' with: 'Balance = 100')! !
!AccountReporterTest methodsFor: 'as yet unclassified' stamp: 'fr 11/16/2020 02:31:54' prior: 50900227!
test08AccountSummaryShouldReflectWithdrawsOnPortfoliosWithAccounts

	self createNewAccountPortfolioWithAccountAndReporterForPortfolio.
	
	Withdraw register: 100 on: account1.
			
	self  assert: reporter1 accountSummary 
		equals: (OrderedCollection with: 'Extracci�n por 100.' with: 'Balance = -100')! !

!methodRemoval: AccountReporterTest #createNewAccountPortfolioForAccountAndReporterForPortfolio stamp: 'fr 11/16/2020 02:31:54'!
createNewAccountPortfolioForAccountAndReporterForPortfolio

	self createNewAccountAndPortfolioForAccount.
	reporter1 _ SummaryReporter for: portfolio1!

!testRun: #AccountReporterTest #test01AccountSummaryForAccountWithNoTransactionsShouldJustShowBalanceZero stamp: 'fr 11/16/2020 02:31:55'!
PASSED!

!testRun: #AccountReporterTest #test02AccountSummaryShouldReflectDepositsOnAccounts stamp: 'fr 11/16/2020 02:31:55'!
PASSED!

!testRun: #AccountReporterTest #test03AccountSummaryShouldReflectWithdrawsOnAccounts stamp: 'fr 11/16/2020 02:31:55'!
PASSED!

!testRun: #AccountReporterTest #test04AccountSummaryShouldReflectOutgoingTransfersOnAccounts stamp: 'fr 11/16/2020 02:31:55'!
PASSED!

!testRun: #AccountReporterTest #test05AccountSummaryShouldReflectIncomingTransfersOnAccounts stamp: 'fr 11/16/2020 02:31:55'!
PASSED!

!testRun: #AccountReporterTest #test06AccountSummaryForPortfolioWithNoTransactionsShouldJustShowBalanceZero stamp: 'fr 11/16/2020 02:31:55'!
PASSED!

!testRun: #AccountReporterTest #test07AccountSummaryShouldReflectDepositsOnPortfoliosWithAccounts stamp: 'fr 11/16/2020 02:31:55'!
PASSED!

!testRun: #AccountReporterTest #test08AccountSummaryShouldReflectWithdrawsOnPortfoliosWithAccounts stamp: 'fr 11/16/2020 02:31:55'!
PASSED!

!testRun: #AccountReporterTest #test09AccountSummaryShouldReflectOutgoingAndIncomingTransfersOnPortfoliosWithAccounts stamp: 'fr 11/16/2020 02:31:55'!
PASSED!

!testRun: #AccountReporterTest #test10AccountSummaryShouldReflectDepositsOnPortfoliosWithPortfolios stamp: 'fr 11/16/2020 02:31:55'!
PASSED!

!testRun: #AccountReporterTest #test11AccountSummaryShouldReflectWithdrawsOnPortfoliosWithPortfolios stamp: 'fr 11/16/2020 02:31:55'!
PASSED!

!testRun: #AccountReporterTest #test12AccountSummaryShouldReflectOutgoingAndIncomingTransfersOnPortfoliosWithPortfolios stamp: 'fr 11/16/2020 02:31:55'!
PASSED!

!testRun: #AccountReporterTest #test13NetTransferForAccountWithNoTransactionsShouldBeZero stamp: 'fr 11/16/2020 02:31:55'!
PASSED!

!testRun: #AccountReporterTest #test14NetTransferForAccountWithAnOutgoingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 02:31:55'!
PASSED!

!testRun: #AccountReporterTest #test15NetTransferForAccountWithAnIncomingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 02:31:55'!
PASSED!

!testRun: #AccountReporterTest #test16NetTransferForAccountShouldNotReflectDeposits stamp: 'fr 11/16/2020 02:31:55'!
PASSED!

!testRun: #AccountReporterTest #test17NetTransferForAccountShouldNotReflectWithdraws stamp: 'fr 11/16/2020 02:31:55'!
PASSED!

!testRun: #AccountReporterTest #test18NetTransferForPortfolioWithNoTransactionsShouldBeZero stamp: 'fr 11/16/2020 02:31:55'!
PASSED!

!testRun: #AccountReporterTest #test19NetTransferForPortfolioWithAnOutgoingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 02:31:55'!
PASSED!

!testRun: #AccountReporterTest #test20NetTransferForPortfolioWithAnIncomingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 02:31:55'!
PASSED!

!testRun: #AccountReporterTest #test21NetTransferForPortfolioShouldNotReflectDeposits stamp: 'fr 11/16/2020 02:31:55'!
PASSED!

!testRun: #AccountReporterTest #test22NetTransferForPortfolioShouldNotReflectWithdraws stamp: 'fr 11/16/2020 02:31:55'!
PASSED!

!testRun: #AccountReporterTest #test23NetTransferForPortfoliosWithPortfoliosShouldReflectOutgoingAndIncomingTransfers stamp: 'fr 11/16/2020 02:31:55'!
PASSED!

!testRun: #AccountReporterTest #test24NetTransferForPortfoliosWithPortfoliosShouldNotRelfectDepositsOrWithdraws stamp: 'fr 11/16/2020 02:31:55'!
PASSED!
!AccountReporterTest methodsFor: 'tests - account summary' stamp: 'fr 11/16/2020 02:32:03'!
createNewAccountAndPortfolioWithAccount

	self createNewAccount.
	portfolio1 _ Portfolio with: account1! !
!AccountReporterTest methodsFor: 'as yet unclassified' stamp: 'fr 11/16/2020 02:32:03' prior: 50900633!
createNewAccountPortfolioWithAccountAndReporterForPortfolio

	self createNewAccountAndPortfolioWithAccount.
	reporter1 _ SummaryReporter for: portfolio1! !

!methodRemoval: AccountReporterTest #createNewAccountAndPortfolioForAccount stamp: 'fr 11/16/2020 02:32:03'!
createNewAccountAndPortfolioForAccount

	self createNewAccount.
	portfolio1 _ Portfolio with: account1!

!testRun: #AccountReporterTest #test01AccountSummaryForAccountWithNoTransactionsShouldJustShowBalanceZero stamp: 'fr 11/16/2020 02:32:05'!
PASSED!

!testRun: #AccountReporterTest #test02AccountSummaryShouldReflectDepositsOnAccounts stamp: 'fr 11/16/2020 02:32:05'!
PASSED!

!testRun: #AccountReporterTest #test03AccountSummaryShouldReflectWithdrawsOnAccounts stamp: 'fr 11/16/2020 02:32:05'!
PASSED!

!testRun: #AccountReporterTest #test04AccountSummaryShouldReflectOutgoingTransfersOnAccounts stamp: 'fr 11/16/2020 02:32:05'!
PASSED!

!testRun: #AccountReporterTest #test05AccountSummaryShouldReflectIncomingTransfersOnAccounts stamp: 'fr 11/16/2020 02:32:05'!
PASSED!

!testRun: #AccountReporterTest #test06AccountSummaryForPortfolioWithNoTransactionsShouldJustShowBalanceZero stamp: 'fr 11/16/2020 02:32:05'!
PASSED!

!testRun: #AccountReporterTest #test07AccountSummaryShouldReflectDepositsOnPortfoliosWithAccounts stamp: 'fr 11/16/2020 02:32:05'!
PASSED!

!testRun: #AccountReporterTest #test08AccountSummaryShouldReflectWithdrawsOnPortfoliosWithAccounts stamp: 'fr 11/16/2020 02:32:05'!
PASSED!

!testRun: #AccountReporterTest #test09AccountSummaryShouldReflectOutgoingAndIncomingTransfersOnPortfoliosWithAccounts stamp: 'fr 11/16/2020 02:32:05'!
PASSED!

!testRun: #AccountReporterTest #test10AccountSummaryShouldReflectDepositsOnPortfoliosWithPortfolios stamp: 'fr 11/16/2020 02:32:05'!
PASSED!

!testRun: #AccountReporterTest #test11AccountSummaryShouldReflectWithdrawsOnPortfoliosWithPortfolios stamp: 'fr 11/16/2020 02:32:05'!
PASSED!

!testRun: #AccountReporterTest #test12AccountSummaryShouldReflectOutgoingAndIncomingTransfersOnPortfoliosWithPortfolios stamp: 'fr 11/16/2020 02:32:05'!
PASSED!

!testRun: #AccountReporterTest #test13NetTransferForAccountWithNoTransactionsShouldBeZero stamp: 'fr 11/16/2020 02:32:05'!
PASSED!

!testRun: #AccountReporterTest #test14NetTransferForAccountWithAnOutgoingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 02:32:05'!
PASSED!

!testRun: #AccountReporterTest #test15NetTransferForAccountWithAnIncomingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 02:32:05'!
PASSED!

!testRun: #AccountReporterTest #test16NetTransferForAccountShouldNotReflectDeposits stamp: 'fr 11/16/2020 02:32:05'!
PASSED!

!testRun: #AccountReporterTest #test17NetTransferForAccountShouldNotReflectWithdraws stamp: 'fr 11/16/2020 02:32:05'!
PASSED!

!testRun: #AccountReporterTest #test18NetTransferForPortfolioWithNoTransactionsShouldBeZero stamp: 'fr 11/16/2020 02:32:05'!
PASSED!

!testRun: #AccountReporterTest #test19NetTransferForPortfolioWithAnOutgoingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 02:32:05'!
PASSED!

!testRun: #AccountReporterTest #test20NetTransferForPortfolioWithAnIncomingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 02:32:05'!
PASSED!

!testRun: #AccountReporterTest #test21NetTransferForPortfolioShouldNotReflectDeposits stamp: 'fr 11/16/2020 02:32:05'!
PASSED!

!testRun: #AccountReporterTest #test22NetTransferForPortfolioShouldNotReflectWithdraws stamp: 'fr 11/16/2020 02:32:05'!
PASSED!

!testRun: #AccountReporterTest #test23NetTransferForPortfoliosWithPortfoliosShouldReflectOutgoingAndIncomingTransfers stamp: 'fr 11/16/2020 02:32:05'!
PASSED!

!testRun: #AccountReporterTest #test24NetTransferForPortfoliosWithPortfoliosShouldNotRelfectDepositsOrWithdraws stamp: 'fr 11/16/2020 02:32:05'!
PASSED!
!AccountReporterTest methodsFor: 'tests - account summary' stamp: 'fr 11/16/2020 02:32:52' prior: 50900363!
test11AccountSummaryShouldReflectWithdrawsOnPortfoliosWithPortfolios

	| anotherPortfolio reporter |
	
	self createNewAccountAndPortfolioWithAccount.
	anotherPortfolio _ Portfolio with: portfolio1.
	reporter _ SummaryReporter for: anotherPortfolio.

	Withdraw register: 100 on: account1.

		
	self  assert: reporter accountSummary 
		equals: (OrderedCollection with: 'Extracci�n por 100.' with: 'Balance = -100')! !

!testRun: #AccountReporterTest #test11AccountSummaryShouldReflectWithdrawsOnPortfoliosWithPortfolios stamp: 'fr 11/16/2020 02:32:53'!
PASSED!

!testRun: #AccountReporterTest #test01AccountSummaryForAccountWithNoTransactionsShouldJustShowBalanceZero stamp: 'fr 11/16/2020 02:32:53'!
PASSED!

!testRun: #AccountReporterTest #test02AccountSummaryShouldReflectDepositsOnAccounts stamp: 'fr 11/16/2020 02:32:53'!
PASSED!

!testRun: #AccountReporterTest #test03AccountSummaryShouldReflectWithdrawsOnAccounts stamp: 'fr 11/16/2020 02:32:53'!
PASSED!

!testRun: #AccountReporterTest #test04AccountSummaryShouldReflectOutgoingTransfersOnAccounts stamp: 'fr 11/16/2020 02:32:53'!
PASSED!

!testRun: #AccountReporterTest #test05AccountSummaryShouldReflectIncomingTransfersOnAccounts stamp: 'fr 11/16/2020 02:32:53'!
PASSED!

!testRun: #AccountReporterTest #test06AccountSummaryForPortfolioWithNoTransactionsShouldJustShowBalanceZero stamp: 'fr 11/16/2020 02:32:53'!
PASSED!

!testRun: #AccountReporterTest #test07AccountSummaryShouldReflectDepositsOnPortfoliosWithAccounts stamp: 'fr 11/16/2020 02:32:53'!
PASSED!

!testRun: #AccountReporterTest #test08AccountSummaryShouldReflectWithdrawsOnPortfoliosWithAccounts stamp: 'fr 11/16/2020 02:32:53'!
PASSED!

!testRun: #AccountReporterTest #test09AccountSummaryShouldReflectOutgoingAndIncomingTransfersOnPortfoliosWithAccounts stamp: 'fr 11/16/2020 02:32:53'!
PASSED!

!testRun: #AccountReporterTest #test10AccountSummaryShouldReflectDepositsOnPortfoliosWithPortfolios stamp: 'fr 11/16/2020 02:32:53'!
PASSED!

!testRun: #AccountReporterTest #test11AccountSummaryShouldReflectWithdrawsOnPortfoliosWithPortfolios stamp: 'fr 11/16/2020 02:32:53'!
PASSED!

!testRun: #AccountReporterTest #test12AccountSummaryShouldReflectOutgoingAndIncomingTransfersOnPortfoliosWithPortfolios stamp: 'fr 11/16/2020 02:32:53'!
PASSED!

!testRun: #AccountReporterTest #test13NetTransferForAccountWithNoTransactionsShouldBeZero stamp: 'fr 11/16/2020 02:32:53'!
PASSED!

!testRun: #AccountReporterTest #test14NetTransferForAccountWithAnOutgoingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 02:32:54'!
PASSED!

!testRun: #AccountReporterTest #test15NetTransferForAccountWithAnIncomingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 02:32:54'!
PASSED!

!testRun: #AccountReporterTest #test16NetTransferForAccountShouldNotReflectDeposits stamp: 'fr 11/16/2020 02:32:54'!
PASSED!

!testRun: #AccountReporterTest #test17NetTransferForAccountShouldNotReflectWithdraws stamp: 'fr 11/16/2020 02:32:54'!
PASSED!

!testRun: #AccountReporterTest #test18NetTransferForPortfolioWithNoTransactionsShouldBeZero stamp: 'fr 11/16/2020 02:32:54'!
PASSED!

!testRun: #AccountReporterTest #test19NetTransferForPortfolioWithAnOutgoingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 02:32:54'!
PASSED!

!testRun: #AccountReporterTest #test20NetTransferForPortfolioWithAnIncomingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 02:32:54'!
PASSED!

!testRun: #AccountReporterTest #test21NetTransferForPortfolioShouldNotReflectDeposits stamp: 'fr 11/16/2020 02:32:54'!
PASSED!

!testRun: #AccountReporterTest #test22NetTransferForPortfolioShouldNotReflectWithdraws stamp: 'fr 11/16/2020 02:32:54'!
PASSED!

!testRun: #AccountReporterTest #test23NetTransferForPortfoliosWithPortfoliosShouldReflectOutgoingAndIncomingTransfers stamp: 'fr 11/16/2020 02:32:54'!
PASSED!

!testRun: #AccountReporterTest #test24NetTransferForPortfoliosWithPortfoliosShouldNotRelfectDepositsOrWithdraws stamp: 'fr 11/16/2020 02:32:54'!
PASSED!
!AccountReporterTest methodsFor: 'tests - account summary' stamp: 'fr 11/16/2020 02:33:06' prior: 50900491!
test10AccountSummaryShouldReflectDepositsOnPortfoliosWithPortfolios

	| anotherPortfolio reporter |
	
	self createNewAccountAndPortfolioWithAccount.
	anotherPortfolio _ Portfolio with: portfolio1.
	reporter _ SummaryReporter for: anotherPortfolio.

	Deposit register: 100 on: account1.

		
	self  assert: reporter accountSummary 
		equals: (OrderedCollection with: 'Dep�sito por 100.' with: 'Balance = 100')! !

!testRun: #AccountReporterTest #test10AccountSummaryShouldReflectDepositsOnPortfoliosWithPortfolios stamp: 'fr 11/16/2020 02:33:07'!
PASSED!

!testRun: #AccountReporterTest #test01AccountSummaryForAccountWithNoTransactionsShouldJustShowBalanceZero stamp: 'fr 11/16/2020 02:33:07'!
PASSED!

!testRun: #AccountReporterTest #test02AccountSummaryShouldReflectDepositsOnAccounts stamp: 'fr 11/16/2020 02:33:07'!
PASSED!

!testRun: #AccountReporterTest #test03AccountSummaryShouldReflectWithdrawsOnAccounts stamp: 'fr 11/16/2020 02:33:07'!
PASSED!

!testRun: #AccountReporterTest #test04AccountSummaryShouldReflectOutgoingTransfersOnAccounts stamp: 'fr 11/16/2020 02:33:07'!
PASSED!

!testRun: #AccountReporterTest #test05AccountSummaryShouldReflectIncomingTransfersOnAccounts stamp: 'fr 11/16/2020 02:33:07'!
PASSED!

!testRun: #AccountReporterTest #test06AccountSummaryForPortfolioWithNoTransactionsShouldJustShowBalanceZero stamp: 'fr 11/16/2020 02:33:07'!
PASSED!

!testRun: #AccountReporterTest #test07AccountSummaryShouldReflectDepositsOnPortfoliosWithAccounts stamp: 'fr 11/16/2020 02:33:07'!
PASSED!

!testRun: #AccountReporterTest #test08AccountSummaryShouldReflectWithdrawsOnPortfoliosWithAccounts stamp: 'fr 11/16/2020 02:33:07'!
PASSED!

!testRun: #AccountReporterTest #test09AccountSummaryShouldReflectOutgoingAndIncomingTransfersOnPortfoliosWithAccounts stamp: 'fr 11/16/2020 02:33:07'!
PASSED!

!testRun: #AccountReporterTest #test10AccountSummaryShouldReflectDepositsOnPortfoliosWithPortfolios stamp: 'fr 11/16/2020 02:33:07'!
PASSED!

!testRun: #AccountReporterTest #test11AccountSummaryShouldReflectWithdrawsOnPortfoliosWithPortfolios stamp: 'fr 11/16/2020 02:33:07'!
PASSED!

!testRun: #AccountReporterTest #test12AccountSummaryShouldReflectOutgoingAndIncomingTransfersOnPortfoliosWithPortfolios stamp: 'fr 11/16/2020 02:33:07'!
PASSED!

!testRun: #AccountReporterTest #test13NetTransferForAccountWithNoTransactionsShouldBeZero stamp: 'fr 11/16/2020 02:33:07'!
PASSED!

!testRun: #AccountReporterTest #test14NetTransferForAccountWithAnOutgoingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 02:33:07'!
PASSED!

!testRun: #AccountReporterTest #test15NetTransferForAccountWithAnIncomingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 02:33:07'!
PASSED!

!testRun: #AccountReporterTest #test16NetTransferForAccountShouldNotReflectDeposits stamp: 'fr 11/16/2020 02:33:07'!
PASSED!

!testRun: #AccountReporterTest #test17NetTransferForAccountShouldNotReflectWithdraws stamp: 'fr 11/16/2020 02:33:07'!
PASSED!

!testRun: #AccountReporterTest #test18NetTransferForPortfolioWithNoTransactionsShouldBeZero stamp: 'fr 11/16/2020 02:33:07'!
PASSED!

!testRun: #AccountReporterTest #test19NetTransferForPortfolioWithAnOutgoingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 02:33:07'!
PASSED!

!testRun: #AccountReporterTest #test20NetTransferForPortfolioWithAnIncomingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 02:33:07'!
PASSED!

!testRun: #AccountReporterTest #test21NetTransferForPortfolioShouldNotReflectDeposits stamp: 'fr 11/16/2020 02:33:07'!
PASSED!

!testRun: #AccountReporterTest #test22NetTransferForPortfolioShouldNotReflectWithdraws stamp: 'fr 11/16/2020 02:33:07'!
PASSED!

!testRun: #AccountReporterTest #test23NetTransferForPortfoliosWithPortfoliosShouldReflectOutgoingAndIncomingTransfers stamp: 'fr 11/16/2020 02:33:07'!
PASSED!

!testRun: #AccountReporterTest #test24NetTransferForPortfoliosWithPortfoliosShouldNotRelfectDepositsOrWithdraws stamp: 'fr 11/16/2020 02:33:07'!
PASSED!
!AccountReporterTest methodsFor: 'tests - account summary' stamp: 'fr 11/16/2020 02:33:41' prior: 50900910!
test11AccountSummaryShouldReflectWithdrawsOnPortfoliosWithPortfolios

	| anotherPortfolio1 reporter |
	
	self createNewAccountAndPortfolioWithAccount.
	anotherPortfolio1 _ Portfolio with: portfolio1.
	reporter _ SummaryReporter for: anotherPortfolio1.

	Withdraw register: 100 on: account1.

		
	self  assert: reporter accountSummary 
		equals: (OrderedCollection with: 'Extracci�n por 100.' with: 'Balance = -100')! !
!AccountReporterTest methodsFor: 'tests - account summary' stamp: 'fr 11/16/2020 02:33:53' prior: 50901164!
test11AccountSummaryShouldReflectWithdrawsOnPortfoliosWithPortfolios

	| anotherPortfolio1 |
	
	self createNewAccountAndPortfolioWithAccount.
	anotherPortfolio1 _ Portfolio with: portfolio1.
	reporter1 _ SummaryReporter for: anotherPortfolio1.

	Withdraw register: 100 on: account1.

		
	self  assert: reporter1 accountSummary 
		equals: (OrderedCollection with: 'Extracci�n por 100.' with: 'Balance = -100')! !
!AccountReporterTest methodsFor: 'tests - account summary' stamp: 'fr 11/16/2020 02:34:01' prior: 50901037!
test10AccountSummaryShouldReflectDepositsOnPortfoliosWithPortfolios

	| anotherPortfolio |
	
	self createNewAccountAndPortfolioWithAccount.
	anotherPortfolio _ Portfolio with: portfolio1.
	reporter1 _ SummaryReporter for: anotherPortfolio.

	Deposit register: 100 on: account1.

		
	self  assert: reporter1 accountSummary 
		equals: (OrderedCollection with: 'Dep�sito por 100.' with: 'Balance = 100')! !
!AccountReporterTest methodsFor: 'tests - account summary' stamp: 'fr 11/16/2020 02:34:21' prior: 50899183!
test06AccountSummaryForPortfolioWithNoTransactionsShouldJustShowBalanceZero

	| portfolio reporter |
	
	portfolio _ Portfolio new.
	reporter1 _ SummaryReporter for: portfolio.
	
	self  assert: reporter accountSummary 
		equals: (OrderedCollection with: 'Balance = 0')! !
!AccountReporterTest methodsFor: 'tests - account summary' stamp: 'fr 11/16/2020 02:34:26' prior: 50901214!
test06AccountSummaryForPortfolioWithNoTransactionsShouldJustShowBalanceZero

	| portfolio |
	
	portfolio _ Portfolio new.
	reporter1 _ SummaryReporter for: portfolio.
	
	self  assert: reporter1 accountSummary 
		equals: (OrderedCollection with: 'Balance = 0')! !

!testRun: #AccountReporterTest #test06AccountSummaryForPortfolioWithNoTransactionsShouldJustShowBalanceZero stamp: 'fr 11/16/2020 02:34:27'!
PASSED!

!testRun: #AccountReporterTest #test01AccountSummaryForAccountWithNoTransactionsShouldJustShowBalanceZero stamp: 'fr 11/16/2020 02:34:27'!
PASSED!

!testRun: #AccountReporterTest #test02AccountSummaryShouldReflectDepositsOnAccounts stamp: 'fr 11/16/2020 02:34:27'!
PASSED!

!testRun: #AccountReporterTest #test03AccountSummaryShouldReflectWithdrawsOnAccounts stamp: 'fr 11/16/2020 02:34:27'!
PASSED!

!testRun: #AccountReporterTest #test04AccountSummaryShouldReflectOutgoingTransfersOnAccounts stamp: 'fr 11/16/2020 02:34:27'!
PASSED!

!testRun: #AccountReporterTest #test05AccountSummaryShouldReflectIncomingTransfersOnAccounts stamp: 'fr 11/16/2020 02:34:27'!
PASSED!

!testRun: #AccountReporterTest #test06AccountSummaryForPortfolioWithNoTransactionsShouldJustShowBalanceZero stamp: 'fr 11/16/2020 02:34:27'!
PASSED!

!testRun: #AccountReporterTest #test07AccountSummaryShouldReflectDepositsOnPortfoliosWithAccounts stamp: 'fr 11/16/2020 02:34:27'!
PASSED!

!testRun: #AccountReporterTest #test08AccountSummaryShouldReflectWithdrawsOnPortfoliosWithAccounts stamp: 'fr 11/16/2020 02:34:27'!
PASSED!

!testRun: #AccountReporterTest #test09AccountSummaryShouldReflectOutgoingAndIncomingTransfersOnPortfoliosWithAccounts stamp: 'fr 11/16/2020 02:34:27'!
PASSED!

!testRun: #AccountReporterTest #test10AccountSummaryShouldReflectDepositsOnPortfoliosWithPortfolios stamp: 'fr 11/16/2020 02:34:27'!
PASSED!

!testRun: #AccountReporterTest #test11AccountSummaryShouldReflectWithdrawsOnPortfoliosWithPortfolios stamp: 'fr 11/16/2020 02:34:27'!
PASSED!

!testRun: #AccountReporterTest #test12AccountSummaryShouldReflectOutgoingAndIncomingTransfersOnPortfoliosWithPortfolios stamp: 'fr 11/16/2020 02:34:27'!
PASSED!

!testRun: #AccountReporterTest #test13NetTransferForAccountWithNoTransactionsShouldBeZero stamp: 'fr 11/16/2020 02:34:27'!
PASSED!

!testRun: #AccountReporterTest #test14NetTransferForAccountWithAnOutgoingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 02:34:27'!
PASSED!

!testRun: #AccountReporterTest #test15NetTransferForAccountWithAnIncomingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 02:34:27'!
PASSED!

!testRun: #AccountReporterTest #test16NetTransferForAccountShouldNotReflectDeposits stamp: 'fr 11/16/2020 02:34:27'!
PASSED!

!testRun: #AccountReporterTest #test17NetTransferForAccountShouldNotReflectWithdraws stamp: 'fr 11/16/2020 02:34:27'!
PASSED!

!testRun: #AccountReporterTest #test18NetTransferForPortfolioWithNoTransactionsShouldBeZero stamp: 'fr 11/16/2020 02:34:27'!
PASSED!

!testRun: #AccountReporterTest #test19NetTransferForPortfolioWithAnOutgoingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 02:34:27'!
PASSED!

!testRun: #AccountReporterTest #test20NetTransferForPortfolioWithAnIncomingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 02:34:27'!
PASSED!

!testRun: #AccountReporterTest #test21NetTransferForPortfolioShouldNotReflectDeposits stamp: 'fr 11/16/2020 02:34:27'!
PASSED!

!testRun: #AccountReporterTest #test22NetTransferForPortfolioShouldNotReflectWithdraws stamp: 'fr 11/16/2020 02:34:27'!
PASSED!

!testRun: #AccountReporterTest #test23NetTransferForPortfoliosWithPortfoliosShouldReflectOutgoingAndIncomingTransfers stamp: 'fr 11/16/2020 02:34:27'!
PASSED!

!testRun: #AccountReporterTest #test24NetTransferForPortfoliosWithPortfoliosShouldNotRelfectDepositsOrWithdraws stamp: 'fr 11/16/2020 02:34:27'!
PASSED!
!AccountReporterTest methodsFor: 'tests - account summary' stamp: 'fr 11/16/2020 02:34:59' prior: 50901198!
test10AccountSummaryShouldReflectDepositsOnPortfoliosWithPortfolios

	| anotherPortfolio1 |
	
	self createNewAccountAndPortfolioWithAccount.
	anotherPortfolio1 _ Portfolio with: portfolio1.
	reporter1 _ SummaryReporter for: anotherPortfolio1.

	Deposit register: 100 on: account1.

		
	self  assert: reporter1 accountSummary 
		equals: (OrderedCollection with: 'Dep�sito por 100.' with: 'Balance = 100')! !
!AccountReporterTest methodsFor: 'tests - account summary' stamp: 'fr 11/16/2020 02:35:27' prior: 50901348!
test10AccountSummaryShouldReflectDepositsOnPortfoliosWithPortfolios

	| anotherPortfolio |
	
	self createNewAccountAndPortfolioWithAccount.
	anotherPortfolio _ Portfolio with: portfolio1.
	reporter1 _ SummaryReporter for: anotherPortfolio.

	Deposit register: 100 on: account1.

		
	self  assert: reporter1 accountSummary 
		equals: (OrderedCollection with: 'Dep�sito por 100.' with: 'Balance = 100')! !
!AccountReporterTest methodsFor: 'as yet unclassified' stamp: 'fr 11/16/2020 02:35:36' prior: 50901181!
test11AccountSummaryShouldReflectWithdrawsOnPortfoliosWithPortfolios

	 
	
	self createNewAccountAndPortfolioWithAccount.
	anotherPortfolio1 _ Portfolio with: portfolio1.
	reporter1 _ SummaryReporter for: anotherPortfolio1.

	Withdraw register: 100 on: account1.

		
	self  assert: reporter1 accountSummary 
		equals: (OrderedCollection with: 'Extracci�n por 100.' with: 'Balance = -100')! !

!classDefinition: #AccountReporterTest category: 'Portfolio-Part-II-Exercise' stamp: 'fr 11/16/2020 02:35:36'!
TestCase subclass: #AccountReporterTest
	instanceVariableNames: 'account1 reporter1 anotherAccount1 portfolio1 anotherPortfolio1'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Part-II-Exercise'!
!AccountReporterTest methodsFor: 'tests - account summary' stamp: 'fr 11/16/2020 02:35:39' prior: 50901381!
test11AccountSummaryShouldReflectWithdrawsOnPortfoliosWithPortfolios
	
	self createNewAccountAndPortfolioWithAccount.
	anotherPortfolio1 _ Portfolio with: portfolio1.
	reporter1 _ SummaryReporter for: anotherPortfolio1.

	Withdraw register: 100 on: account1.

		
	self  assert: reporter1 accountSummary 
		equals: (OrderedCollection with: 'Extracci�n por 100.' with: 'Balance = -100')! !
!AccountReporterTest methodsFor: 'tests - account summary' stamp: 'fr 11/16/2020 02:35:46' prior: 50901365!
test10AccountSummaryShouldReflectDepositsOnPortfoliosWithPortfolios
	
	self createNewAccountAndPortfolioWithAccount.
	anotherPortfolio1 _ Portfolio with: portfolio1.
	reporter1 _ SummaryReporter for: anotherPortfolio1.

	Deposit register: 100 on: account1.

		
	self  assert: reporter1 accountSummary 
		equals: (OrderedCollection with: 'Dep�sito por 100.' with: 'Balance = 100')! !
!AccountReporterTest methodsFor: 'tests - account summary' stamp: 'fr 11/16/2020 02:36:15' prior: 50901407!
test11AccountSummaryShouldReflectWithdrawsOnPortfoliosWithPortfolios
	
	self createNewAccountAndPortfolioWithAccount.
	anotherPortfolio1 _ Portfolio with: portfolio1.
	reporter1 _ SummaryReporter for: anotherPortfolio1.

	Withdraw register: 100 on: account1.

		
	self  assert: reporter1 accountSummary 
		equals: (OrderedCollection with: 'Extracci�n por 100.' with: 'Balance = -100')! !
!AccountReporterTest methodsFor: 'tests - account summary' stamp: 'fr 11/16/2020 02:36:34'!
createSummaryReporterForPortfolioWithPortfolioWithAccount

	self createNewAccountAndPortfolioWithAccount.
	anotherPortfolio1 _ Portfolio with: portfolio1.
	reporter1 _ SummaryReporter for: anotherPortfolio1! !
!AccountReporterTest methodsFor: 'tests - account summary' stamp: 'fr 11/16/2020 02:36:34' prior: 50901439!
test11AccountSummaryShouldReflectWithdrawsOnPortfoliosWithPortfolios
	
	self createSummaryReporterForPortfolioWithPortfolioWithAccount.

	Withdraw register: 100 on: account1.

		
	self  assert: reporter1 accountSummary 
		equals: (OrderedCollection with: 'Extracci�n por 100.' with: 'Balance = -100')! !

!testRun: #AccountReporterTest #test11AccountSummaryShouldReflectWithdrawsOnPortfoliosWithPortfolios stamp: 'fr 11/16/2020 02:36:36'!
PASSED!

!testRun: #AccountReporterTest #test01AccountSummaryForAccountWithNoTransactionsShouldJustShowBalanceZero stamp: 'fr 11/16/2020 02:36:36'!
PASSED!

!testRun: #AccountReporterTest #test02AccountSummaryShouldReflectDepositsOnAccounts stamp: 'fr 11/16/2020 02:36:36'!
PASSED!

!testRun: #AccountReporterTest #test03AccountSummaryShouldReflectWithdrawsOnAccounts stamp: 'fr 11/16/2020 02:36:36'!
PASSED!

!testRun: #AccountReporterTest #test04AccountSummaryShouldReflectOutgoingTransfersOnAccounts stamp: 'fr 11/16/2020 02:36:36'!
PASSED!

!testRun: #AccountReporterTest #test05AccountSummaryShouldReflectIncomingTransfersOnAccounts stamp: 'fr 11/16/2020 02:36:36'!
PASSED!

!testRun: #AccountReporterTest #test06AccountSummaryForPortfolioWithNoTransactionsShouldJustShowBalanceZero stamp: 'fr 11/16/2020 02:36:36'!
PASSED!

!testRun: #AccountReporterTest #test07AccountSummaryShouldReflectDepositsOnPortfoliosWithAccounts stamp: 'fr 11/16/2020 02:36:36'!
PASSED!

!testRun: #AccountReporterTest #test08AccountSummaryShouldReflectWithdrawsOnPortfoliosWithAccounts stamp: 'fr 11/16/2020 02:36:36'!
PASSED!

!testRun: #AccountReporterTest #test09AccountSummaryShouldReflectOutgoingAndIncomingTransfersOnPortfoliosWithAccounts stamp: 'fr 11/16/2020 02:36:36'!
PASSED!

!testRun: #AccountReporterTest #test10AccountSummaryShouldReflectDepositsOnPortfoliosWithPortfolios stamp: 'fr 11/16/2020 02:36:36'!
PASSED!

!testRun: #AccountReporterTest #test11AccountSummaryShouldReflectWithdrawsOnPortfoliosWithPortfolios stamp: 'fr 11/16/2020 02:36:36'!
PASSED!

!testRun: #AccountReporterTest #test12AccountSummaryShouldReflectOutgoingAndIncomingTransfersOnPortfoliosWithPortfolios stamp: 'fr 11/16/2020 02:36:36'!
PASSED!

!testRun: #AccountReporterTest #test13NetTransferForAccountWithNoTransactionsShouldBeZero stamp: 'fr 11/16/2020 02:36:36'!
PASSED!

!testRun: #AccountReporterTest #test14NetTransferForAccountWithAnOutgoingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 02:36:36'!
PASSED!

!testRun: #AccountReporterTest #test15NetTransferForAccountWithAnIncomingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 02:36:36'!
PASSED!

!testRun: #AccountReporterTest #test16NetTransferForAccountShouldNotReflectDeposits stamp: 'fr 11/16/2020 02:36:36'!
PASSED!

!testRun: #AccountReporterTest #test17NetTransferForAccountShouldNotReflectWithdraws stamp: 'fr 11/16/2020 02:36:36'!
PASSED!

!testRun: #AccountReporterTest #test18NetTransferForPortfolioWithNoTransactionsShouldBeZero stamp: 'fr 11/16/2020 02:36:36'!
PASSED!

!testRun: #AccountReporterTest #test19NetTransferForPortfolioWithAnOutgoingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 02:36:36'!
PASSED!

!testRun: #AccountReporterTest #test20NetTransferForPortfolioWithAnIncomingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 02:36:36'!
PASSED!

!testRun: #AccountReporterTest #test21NetTransferForPortfolioShouldNotReflectDeposits stamp: 'fr 11/16/2020 02:36:36'!
PASSED!

!testRun: #AccountReporterTest #test22NetTransferForPortfolioShouldNotReflectWithdraws stamp: 'fr 11/16/2020 02:36:36'!
PASSED!

!testRun: #AccountReporterTest #test23NetTransferForPortfoliosWithPortfoliosShouldReflectOutgoingAndIncomingTransfers stamp: 'fr 11/16/2020 02:36:36'!
PASSED!

!testRun: #AccountReporterTest #test24NetTransferForPortfoliosWithPortfoliosShouldNotRelfectDepositsOrWithdraws stamp: 'fr 11/16/2020 02:36:36'!
PASSED!
!AccountReporterTest methodsFor: 'tests - account summary' stamp: 'fr 11/16/2020 02:36:46' prior: 50901423!
test10AccountSummaryShouldReflectDepositsOnPortfoliosWithPortfolios
	
	self createSummaryReporterForPortfolioWithPortfolioWithAccount.

	Deposit register: 100 on: account1.

		
	self  assert: reporter1 accountSummary 
		equals: (OrderedCollection with: 'Dep�sito por 100.' with: 'Balance = 100')! !

!testRun: #AccountReporterTest #test10AccountSummaryShouldReflectDepositsOnPortfoliosWithPortfolios stamp: 'fr 11/16/2020 02:36:46'!
PASSED!

!testRun: #AccountReporterTest #test01AccountSummaryForAccountWithNoTransactionsShouldJustShowBalanceZero stamp: 'fr 11/16/2020 02:36:46'!
PASSED!

!testRun: #AccountReporterTest #test02AccountSummaryShouldReflectDepositsOnAccounts stamp: 'fr 11/16/2020 02:36:46'!
PASSED!

!testRun: #AccountReporterTest #test03AccountSummaryShouldReflectWithdrawsOnAccounts stamp: 'fr 11/16/2020 02:36:46'!
PASSED!

!testRun: #AccountReporterTest #test04AccountSummaryShouldReflectOutgoingTransfersOnAccounts stamp: 'fr 11/16/2020 02:36:46'!
PASSED!

!testRun: #AccountReporterTest #test05AccountSummaryShouldReflectIncomingTransfersOnAccounts stamp: 'fr 11/16/2020 02:36:46'!
PASSED!

!testRun: #AccountReporterTest #test06AccountSummaryForPortfolioWithNoTransactionsShouldJustShowBalanceZero stamp: 'fr 11/16/2020 02:36:46'!
PASSED!

!testRun: #AccountReporterTest #test07AccountSummaryShouldReflectDepositsOnPortfoliosWithAccounts stamp: 'fr 11/16/2020 02:36:46'!
PASSED!

!testRun: #AccountReporterTest #test08AccountSummaryShouldReflectWithdrawsOnPortfoliosWithAccounts stamp: 'fr 11/16/2020 02:36:46'!
PASSED!

!testRun: #AccountReporterTest #test09AccountSummaryShouldReflectOutgoingAndIncomingTransfersOnPortfoliosWithAccounts stamp: 'fr 11/16/2020 02:36:46'!
PASSED!

!testRun: #AccountReporterTest #test10AccountSummaryShouldReflectDepositsOnPortfoliosWithPortfolios stamp: 'fr 11/16/2020 02:36:46'!
PASSED!

!testRun: #AccountReporterTest #test11AccountSummaryShouldReflectWithdrawsOnPortfoliosWithPortfolios stamp: 'fr 11/16/2020 02:36:46'!
PASSED!

!testRun: #AccountReporterTest #test12AccountSummaryShouldReflectOutgoingAndIncomingTransfersOnPortfoliosWithPortfolios stamp: 'fr 11/16/2020 02:36:46'!
PASSED!

!testRun: #AccountReporterTest #test13NetTransferForAccountWithNoTransactionsShouldBeZero stamp: 'fr 11/16/2020 02:36:46'!
PASSED!

!testRun: #AccountReporterTest #test14NetTransferForAccountWithAnOutgoingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 02:36:46'!
PASSED!

!testRun: #AccountReporterTest #test15NetTransferForAccountWithAnIncomingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 02:36:46'!
PASSED!

!testRun: #AccountReporterTest #test16NetTransferForAccountShouldNotReflectDeposits stamp: 'fr 11/16/2020 02:36:46'!
PASSED!

!testRun: #AccountReporterTest #test17NetTransferForAccountShouldNotReflectWithdraws stamp: 'fr 11/16/2020 02:36:46'!
PASSED!

!testRun: #AccountReporterTest #test18NetTransferForPortfolioWithNoTransactionsShouldBeZero stamp: 'fr 11/16/2020 02:36:46'!
PASSED!

!testRun: #AccountReporterTest #test19NetTransferForPortfolioWithAnOutgoingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 02:36:46'!
PASSED!

!testRun: #AccountReporterTest #test20NetTransferForPortfolioWithAnIncomingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 02:36:46'!
PASSED!

!testRun: #AccountReporterTest #test21NetTransferForPortfolioShouldNotReflectDeposits stamp: 'fr 11/16/2020 02:36:46'!
PASSED!

!testRun: #AccountReporterTest #test22NetTransferForPortfolioShouldNotReflectWithdraws stamp: 'fr 11/16/2020 02:36:46'!
PASSED!

!testRun: #AccountReporterTest #test23NetTransferForPortfoliosWithPortfoliosShouldReflectOutgoingAndIncomingTransfers stamp: 'fr 11/16/2020 02:36:46'!
PASSED!

!testRun: #AccountReporterTest #test24NetTransferForPortfoliosWithPortfoliosShouldNotRelfectDepositsOrWithdraws stamp: 'fr 11/16/2020 02:36:46'!
PASSED!
!AccountReporterTest methodsFor: 'tests - account summary' stamp: 'fr 11/16/2020 02:37:56'!
createSummaryReporterForPortfolioWithAccount

	self createNewAccountAndPortfolioWithAccount.
	reporter1 _ SummaryReporter for: portfolio1! !
!AccountReporterTest methodsFor: 'as yet unclassified' stamp: 'fr 11/16/2020 02:37:56' prior: 50900642!
test07AccountSummaryShouldReflectDepositsOnPortfoliosWithAccounts

	self createSummaryReporterForPortfolioWithAccount.
	
	Deposit register: 100 on: account1.
			
	self  assert: reporter1 accountSummary 
		equals: (OrderedCollection with: 'Dep�sito por 100.' with: 'Balance = 100')! !
!AccountReporterTest methodsFor: 'as yet unclassified' stamp: 'fr 11/16/2020 02:37:56' prior: 50900655!
test08AccountSummaryShouldReflectWithdrawsOnPortfoliosWithAccounts

	self createSummaryReporterForPortfolioWithAccount.
	
	Withdraw register: 100 on: account1.
			
	self  assert: reporter1 accountSummary 
		equals: (OrderedCollection with: 'Extracci�n por 100.' with: 'Balance = -100')! !

!methodRemoval: AccountReporterTest #createNewAccountPortfolioWithAccountAndReporterForPortfolio stamp: 'fr 11/16/2020 02:37:56'!
createNewAccountPortfolioWithAccountAndReporterForPortfolio

	self createNewAccountAndPortfolioWithAccount.
	reporter1 _ SummaryReporter for: portfolio1!

!testRun: #AccountReporterTest #test01AccountSummaryForAccountWithNoTransactionsShouldJustShowBalanceZero stamp: 'fr 11/16/2020 02:37:57'!
PASSED!

!testRun: #AccountReporterTest #test02AccountSummaryShouldReflectDepositsOnAccounts stamp: 'fr 11/16/2020 02:37:57'!
PASSED!

!testRun: #AccountReporterTest #test03AccountSummaryShouldReflectWithdrawsOnAccounts stamp: 'fr 11/16/2020 02:37:57'!
PASSED!

!testRun: #AccountReporterTest #test04AccountSummaryShouldReflectOutgoingTransfersOnAccounts stamp: 'fr 11/16/2020 02:37:57'!
PASSED!

!testRun: #AccountReporterTest #test05AccountSummaryShouldReflectIncomingTransfersOnAccounts stamp: 'fr 11/16/2020 02:37:57'!
PASSED!

!testRun: #AccountReporterTest #test06AccountSummaryForPortfolioWithNoTransactionsShouldJustShowBalanceZero stamp: 'fr 11/16/2020 02:37:57'!
PASSED!

!testRun: #AccountReporterTest #test07AccountSummaryShouldReflectDepositsOnPortfoliosWithAccounts stamp: 'fr 11/16/2020 02:37:57'!
PASSED!

!testRun: #AccountReporterTest #test08AccountSummaryShouldReflectWithdrawsOnPortfoliosWithAccounts stamp: 'fr 11/16/2020 02:37:57'!
PASSED!

!testRun: #AccountReporterTest #test09AccountSummaryShouldReflectOutgoingAndIncomingTransfersOnPortfoliosWithAccounts stamp: 'fr 11/16/2020 02:37:57'!
PASSED!

!testRun: #AccountReporterTest #test10AccountSummaryShouldReflectDepositsOnPortfoliosWithPortfolios stamp: 'fr 11/16/2020 02:37:57'!
PASSED!

!testRun: #AccountReporterTest #test11AccountSummaryShouldReflectWithdrawsOnPortfoliosWithPortfolios stamp: 'fr 11/16/2020 02:37:57'!
PASSED!

!testRun: #AccountReporterTest #test12AccountSummaryShouldReflectOutgoingAndIncomingTransfersOnPortfoliosWithPortfolios stamp: 'fr 11/16/2020 02:37:57'!
PASSED!

!testRun: #AccountReporterTest #test13NetTransferForAccountWithNoTransactionsShouldBeZero stamp: 'fr 11/16/2020 02:37:57'!
PASSED!

!testRun: #AccountReporterTest #test14NetTransferForAccountWithAnOutgoingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 02:37:57'!
PASSED!

!testRun: #AccountReporterTest #test15NetTransferForAccountWithAnIncomingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 02:37:57'!
PASSED!

!testRun: #AccountReporterTest #test16NetTransferForAccountShouldNotReflectDeposits stamp: 'fr 11/16/2020 02:37:57'!
PASSED!

!testRun: #AccountReporterTest #test17NetTransferForAccountShouldNotReflectWithdraws stamp: 'fr 11/16/2020 02:37:57'!
PASSED!

!testRun: #AccountReporterTest #test18NetTransferForPortfolioWithNoTransactionsShouldBeZero stamp: 'fr 11/16/2020 02:37:57'!
PASSED!

!testRun: #AccountReporterTest #test19NetTransferForPortfolioWithAnOutgoingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 02:37:57'!
PASSED!

!testRun: #AccountReporterTest #test20NetTransferForPortfolioWithAnIncomingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 02:37:57'!
PASSED!

!testRun: #AccountReporterTest #test21NetTransferForPortfolioShouldNotReflectDeposits stamp: 'fr 11/16/2020 02:37:57'!
PASSED!

!testRun: #AccountReporterTest #test22NetTransferForPortfolioShouldNotReflectWithdraws stamp: 'fr 11/16/2020 02:37:57'!
PASSED!

!testRun: #AccountReporterTest #test23NetTransferForPortfoliosWithPortfoliosShouldReflectOutgoingAndIncomingTransfers stamp: 'fr 11/16/2020 02:37:57'!
PASSED!

!testRun: #AccountReporterTest #test24NetTransferForPortfoliosWithPortfoliosShouldNotRelfectDepositsOrWithdraws stamp: 'fr 11/16/2020 02:37:57'!
PASSED!
!AccountReporterTest methodsFor: 'tests - account summary' stamp: 'fr 11/16/2020 02:38:16'!
createPortfolioWithAccount

	self createNewAccount.
	portfolio1 _ Portfolio with: account1! !
!AccountReporterTest methodsFor: 'as yet unclassified' stamp: 'fr 11/16/2020 02:38:16' prior: 50901454!
createSummaryReporterForPortfolioWithPortfolioWithAccount

	self createPortfolioWithAccount.
	anotherPortfolio1 _ Portfolio with: portfolio1.
	reporter1 _ SummaryReporter for: anotherPortfolio1! !
!AccountReporterTest methodsFor: 'as yet unclassified' stamp: 'fr 11/16/2020 02:38:16' prior: 50901711!
createSummaryReporterForPortfolioWithAccount

	self createPortfolioWithAccount.
	reporter1 _ SummaryReporter for: portfolio1! !

!methodRemoval: AccountReporterTest #createNewAccountAndPortfolioWithAccount stamp: 'fr 11/16/2020 02:38:16'!
createNewAccountAndPortfolioWithAccount

	self createNewAccount.
	portfolio1 _ Portfolio with: account1!

!testRun: #AccountReporterTest #test01AccountSummaryForAccountWithNoTransactionsShouldJustShowBalanceZero stamp: 'fr 11/16/2020 02:38:18'!
PASSED!

!testRun: #AccountReporterTest #test02AccountSummaryShouldReflectDepositsOnAccounts stamp: 'fr 11/16/2020 02:38:18'!
PASSED!

!testRun: #AccountReporterTest #test03AccountSummaryShouldReflectWithdrawsOnAccounts stamp: 'fr 11/16/2020 02:38:18'!
PASSED!

!testRun: #AccountReporterTest #test04AccountSummaryShouldReflectOutgoingTransfersOnAccounts stamp: 'fr 11/16/2020 02:38:18'!
PASSED!

!testRun: #AccountReporterTest #test05AccountSummaryShouldReflectIncomingTransfersOnAccounts stamp: 'fr 11/16/2020 02:38:18'!
PASSED!

!testRun: #AccountReporterTest #test06AccountSummaryForPortfolioWithNoTransactionsShouldJustShowBalanceZero stamp: 'fr 11/16/2020 02:38:18'!
PASSED!

!testRun: #AccountReporterTest #test07AccountSummaryShouldReflectDepositsOnPortfoliosWithAccounts stamp: 'fr 11/16/2020 02:38:18'!
PASSED!

!testRun: #AccountReporterTest #test08AccountSummaryShouldReflectWithdrawsOnPortfoliosWithAccounts stamp: 'fr 11/16/2020 02:38:18'!
PASSED!

!testRun: #AccountReporterTest #test09AccountSummaryShouldReflectOutgoingAndIncomingTransfersOnPortfoliosWithAccounts stamp: 'fr 11/16/2020 02:38:18'!
PASSED!

!testRun: #AccountReporterTest #test10AccountSummaryShouldReflectDepositsOnPortfoliosWithPortfolios stamp: 'fr 11/16/2020 02:38:18'!
PASSED!

!testRun: #AccountReporterTest #test11AccountSummaryShouldReflectWithdrawsOnPortfoliosWithPortfolios stamp: 'fr 11/16/2020 02:38:18'!
PASSED!

!testRun: #AccountReporterTest #test12AccountSummaryShouldReflectOutgoingAndIncomingTransfersOnPortfoliosWithPortfolios stamp: 'fr 11/16/2020 02:38:18'!
PASSED!

!testRun: #AccountReporterTest #test13NetTransferForAccountWithNoTransactionsShouldBeZero stamp: 'fr 11/16/2020 02:38:18'!
PASSED!

!testRun: #AccountReporterTest #test14NetTransferForAccountWithAnOutgoingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 02:38:18'!
PASSED!

!testRun: #AccountReporterTest #test15NetTransferForAccountWithAnIncomingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 02:38:18'!
PASSED!

!testRun: #AccountReporterTest #test16NetTransferForAccountShouldNotReflectDeposits stamp: 'fr 11/16/2020 02:38:18'!
PASSED!

!testRun: #AccountReporterTest #test17NetTransferForAccountShouldNotReflectWithdraws stamp: 'fr 11/16/2020 02:38:18'!
PASSED!

!testRun: #AccountReporterTest #test18NetTransferForPortfolioWithNoTransactionsShouldBeZero stamp: 'fr 11/16/2020 02:38:18'!
PASSED!

!testRun: #AccountReporterTest #test19NetTransferForPortfolioWithAnOutgoingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 02:38:18'!
PASSED!

!testRun: #AccountReporterTest #test20NetTransferForPortfolioWithAnIncomingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 02:38:18'!
PASSED!

!testRun: #AccountReporterTest #test21NetTransferForPortfolioShouldNotReflectDeposits stamp: 'fr 11/16/2020 02:38:18'!
PASSED!

!testRun: #AccountReporterTest #test22NetTransferForPortfolioShouldNotReflectWithdraws stamp: 'fr 11/16/2020 02:38:18'!
PASSED!

!testRun: #AccountReporterTest #test23NetTransferForPortfoliosWithPortfoliosShouldReflectOutgoingAndIncomingTransfers stamp: 'fr 11/16/2020 02:38:18'!
PASSED!

!testRun: #AccountReporterTest #test24NetTransferForPortfoliosWithPortfoliosShouldNotRelfectDepositsOrWithdraws stamp: 'fr 11/16/2020 02:38:18'!
PASSED!
!AccountReporterTest methodsFor: 'tests - account summary' stamp: 'fr 11/16/2020 02:39:05' prior: 50899528!
test12AccountSummaryShouldReflectOutgoingAndIncomingTransfersOnPortfoliosWithPortfolios

	| portfolio anotherPortfolio anotherAccount reporter |
	
	self createNewAccount.
	anotherAccount _ ReceptiveAccount new.		
	portfolio _ Portfolio with: account1.
	anotherPortfolio _ Portfolio with: portfolio.
	anotherPortfolio add: anotherAccount.
	reporter _ SummaryReporter for: anotherPortfolio.

	Transfer move: 100 from: account1 to: anotherAccount.

		
	self  assert: reporter accountSummary 
		equals: (OrderedCollection with: 'Salida por transferencia de 100.' with: 'Entrada por transferencia de 100.' with: 'Balance = 0')! !

!testRun: #AccountReporterTest #test12AccountSummaryShouldReflectOutgoingAndIncomingTransfersOnPortfoliosWithPortfolios stamp: 'fr 11/16/2020 02:39:09'!
PASSED!

!testRun: #AccountReporterTest #test01AccountSummaryForAccountWithNoTransactionsShouldJustShowBalanceZero stamp: 'fr 11/16/2020 02:39:09'!
PASSED!

!testRun: #AccountReporterTest #test02AccountSummaryShouldReflectDepositsOnAccounts stamp: 'fr 11/16/2020 02:39:09'!
PASSED!

!testRun: #AccountReporterTest #test03AccountSummaryShouldReflectWithdrawsOnAccounts stamp: 'fr 11/16/2020 02:39:09'!
PASSED!

!testRun: #AccountReporterTest #test04AccountSummaryShouldReflectOutgoingTransfersOnAccounts stamp: 'fr 11/16/2020 02:39:09'!
PASSED!

!testRun: #AccountReporterTest #test05AccountSummaryShouldReflectIncomingTransfersOnAccounts stamp: 'fr 11/16/2020 02:39:09'!
PASSED!

!testRun: #AccountReporterTest #test06AccountSummaryForPortfolioWithNoTransactionsShouldJustShowBalanceZero stamp: 'fr 11/16/2020 02:39:09'!
PASSED!

!testRun: #AccountReporterTest #test07AccountSummaryShouldReflectDepositsOnPortfoliosWithAccounts stamp: 'fr 11/16/2020 02:39:09'!
PASSED!

!testRun: #AccountReporterTest #test08AccountSummaryShouldReflectWithdrawsOnPortfoliosWithAccounts stamp: 'fr 11/16/2020 02:39:09'!
PASSED!

!testRun: #AccountReporterTest #test09AccountSummaryShouldReflectOutgoingAndIncomingTransfersOnPortfoliosWithAccounts stamp: 'fr 11/16/2020 02:39:09'!
PASSED!

!testRun: #AccountReporterTest #test10AccountSummaryShouldReflectDepositsOnPortfoliosWithPortfolios stamp: 'fr 11/16/2020 02:39:09'!
PASSED!

!testRun: #AccountReporterTest #test11AccountSummaryShouldReflectWithdrawsOnPortfoliosWithPortfolios stamp: 'fr 11/16/2020 02:39:09'!
PASSED!

!testRun: #AccountReporterTest #test12AccountSummaryShouldReflectOutgoingAndIncomingTransfersOnPortfoliosWithPortfolios stamp: 'fr 11/16/2020 02:39:09'!
PASSED!

!testRun: #AccountReporterTest #test13NetTransferForAccountWithNoTransactionsShouldBeZero stamp: 'fr 11/16/2020 02:39:09'!
PASSED!

!testRun: #AccountReporterTest #test14NetTransferForAccountWithAnOutgoingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 02:39:09'!
PASSED!

!testRun: #AccountReporterTest #test15NetTransferForAccountWithAnIncomingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 02:39:09'!
PASSED!

!testRun: #AccountReporterTest #test16NetTransferForAccountShouldNotReflectDeposits stamp: 'fr 11/16/2020 02:39:09'!
PASSED!

!testRun: #AccountReporterTest #test17NetTransferForAccountShouldNotReflectWithdraws stamp: 'fr 11/16/2020 02:39:09'!
PASSED!

!testRun: #AccountReporterTest #test18NetTransferForPortfolioWithNoTransactionsShouldBeZero stamp: 'fr 11/16/2020 02:39:09'!
PASSED!

!testRun: #AccountReporterTest #test19NetTransferForPortfolioWithAnOutgoingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 02:39:09'!
PASSED!

!testRun: #AccountReporterTest #test20NetTransferForPortfolioWithAnIncomingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 02:39:09'!
PASSED!

!testRun: #AccountReporterTest #test21NetTransferForPortfolioShouldNotReflectDeposits stamp: 'fr 11/16/2020 02:39:09'!
PASSED!

!testRun: #AccountReporterTest #test22NetTransferForPortfolioShouldNotReflectWithdraws stamp: 'fr 11/16/2020 02:39:09'!
PASSED!

!testRun: #AccountReporterTest #test23NetTransferForPortfoliosWithPortfoliosShouldReflectOutgoingAndIncomingTransfers stamp: 'fr 11/16/2020 02:39:09'!
PASSED!

!testRun: #AccountReporterTest #test24NetTransferForPortfoliosWithPortfoliosShouldNotRelfectDepositsOrWithdraws stamp: 'fr 11/16/2020 02:39:09'!
PASSED!
!AccountReporterTest methodsFor: 'tests - account summary' stamp: 'fr 11/16/2020 02:39:19' prior: 50901996!
test12AccountSummaryShouldReflectOutgoingAndIncomingTransfersOnPortfoliosWithPortfolios

	| portfolio anotherPortfolio anotherAccount reporter |
	
	self createNewAccount.
	portfolio _ Portfolio with: account1.
	anotherAccount _ ReceptiveAccount new.		
	anotherPortfolio _ Portfolio with: portfolio.
	anotherPortfolio add: anotherAccount.
	reporter _ SummaryReporter for: anotherPortfolio.

	Transfer move: 100 from: account1 to: anotherAccount.

		
	self  assert: reporter accountSummary 
		equals: (OrderedCollection with: 'Salida por transferencia de 100.' with: 'Entrada por transferencia de 100.' with: 'Balance = 0')! !

!testRun: #AccountReporterTest #test12AccountSummaryShouldReflectOutgoingAndIncomingTransfersOnPortfoliosWithPortfolios stamp: 'fr 11/16/2020 02:39:20'!
PASSED!

!testRun: #AccountReporterTest #test01AccountSummaryForAccountWithNoTransactionsShouldJustShowBalanceZero stamp: 'fr 11/16/2020 02:39:20'!
PASSED!

!testRun: #AccountReporterTest #test02AccountSummaryShouldReflectDepositsOnAccounts stamp: 'fr 11/16/2020 02:39:20'!
PASSED!

!testRun: #AccountReporterTest #test03AccountSummaryShouldReflectWithdrawsOnAccounts stamp: 'fr 11/16/2020 02:39:20'!
PASSED!

!testRun: #AccountReporterTest #test04AccountSummaryShouldReflectOutgoingTransfersOnAccounts stamp: 'fr 11/16/2020 02:39:20'!
PASSED!

!testRun: #AccountReporterTest #test05AccountSummaryShouldReflectIncomingTransfersOnAccounts stamp: 'fr 11/16/2020 02:39:20'!
PASSED!

!testRun: #AccountReporterTest #test06AccountSummaryForPortfolioWithNoTransactionsShouldJustShowBalanceZero stamp: 'fr 11/16/2020 02:39:20'!
PASSED!

!testRun: #AccountReporterTest #test07AccountSummaryShouldReflectDepositsOnPortfoliosWithAccounts stamp: 'fr 11/16/2020 02:39:20'!
PASSED!

!testRun: #AccountReporterTest #test08AccountSummaryShouldReflectWithdrawsOnPortfoliosWithAccounts stamp: 'fr 11/16/2020 02:39:20'!
PASSED!

!testRun: #AccountReporterTest #test09AccountSummaryShouldReflectOutgoingAndIncomingTransfersOnPortfoliosWithAccounts stamp: 'fr 11/16/2020 02:39:20'!
PASSED!

!testRun: #AccountReporterTest #test10AccountSummaryShouldReflectDepositsOnPortfoliosWithPortfolios stamp: 'fr 11/16/2020 02:39:20'!
PASSED!

!testRun: #AccountReporterTest #test11AccountSummaryShouldReflectWithdrawsOnPortfoliosWithPortfolios stamp: 'fr 11/16/2020 02:39:20'!
PASSED!

!testRun: #AccountReporterTest #test12AccountSummaryShouldReflectOutgoingAndIncomingTransfersOnPortfoliosWithPortfolios stamp: 'fr 11/16/2020 02:39:20'!
PASSED!

!testRun: #AccountReporterTest #test13NetTransferForAccountWithNoTransactionsShouldBeZero stamp: 'fr 11/16/2020 02:39:20'!
PASSED!

!testRun: #AccountReporterTest #test14NetTransferForAccountWithAnOutgoingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 02:39:20'!
PASSED!

!testRun: #AccountReporterTest #test15NetTransferForAccountWithAnIncomingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 02:39:20'!
PASSED!

!testRun: #AccountReporterTest #test16NetTransferForAccountShouldNotReflectDeposits stamp: 'fr 11/16/2020 02:39:20'!
PASSED!

!testRun: #AccountReporterTest #test17NetTransferForAccountShouldNotReflectWithdraws stamp: 'fr 11/16/2020 02:39:20'!
PASSED!

!testRun: #AccountReporterTest #test18NetTransferForPortfolioWithNoTransactionsShouldBeZero stamp: 'fr 11/16/2020 02:39:20'!
PASSED!

!testRun: #AccountReporterTest #test19NetTransferForPortfolioWithAnOutgoingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 02:39:20'!
PASSED!

!testRun: #AccountReporterTest #test20NetTransferForPortfolioWithAnIncomingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 02:39:20'!
PASSED!

!testRun: #AccountReporterTest #test21NetTransferForPortfolioShouldNotReflectDeposits stamp: 'fr 11/16/2020 02:39:20'!
PASSED!

!testRun: #AccountReporterTest #test22NetTransferForPortfolioShouldNotReflectWithdraws stamp: 'fr 11/16/2020 02:39:20'!
PASSED!

!testRun: #AccountReporterTest #test23NetTransferForPortfoliosWithPortfoliosShouldReflectOutgoingAndIncomingTransfers stamp: 'fr 11/16/2020 02:39:20'!
PASSED!

!testRun: #AccountReporterTest #test24NetTransferForPortfoliosWithPortfoliosShouldNotRelfectDepositsOrWithdraws stamp: 'fr 11/16/2020 02:39:20'!
PASSED!
!AccountReporterTest methodsFor: 'tests - account summary' stamp: 'fr 11/16/2020 02:39:34' prior: 50902130!
test12AccountSummaryShouldReflectOutgoingAndIncomingTransfersOnPortfoliosWithPortfolios

	| portfolio anotherPortfolio anotherAccount reporter |
	
	self createPortfolioWithAccount.
	anotherAccount _ ReceptiveAccount new.		
	anotherPortfolio _ Portfolio with: portfolio1.
	anotherPortfolio add: anotherAccount.
	reporter _ SummaryReporter for: anotherPortfolio.

	Transfer move: 100 from: account1 to: anotherAccount.

		
	self  assert: reporter accountSummary 
		equals: (OrderedCollection with: 'Salida por transferencia de 100.' with: 'Entrada por transferencia de 100.' with: 'Balance = 0')! !
!AccountReporterTest methodsFor: 'tests - account summary' stamp: 'fr 11/16/2020 02:39:42' prior: 50902264!
test12AccountSummaryShouldReflectOutgoingAndIncomingTransfersOnPortfoliosWithPortfolios

	| anotherPortfolio anotherAccount reporter |
	
	self createPortfolioWithAccount.
	anotherAccount _ ReceptiveAccount new.		
	anotherPortfolio _ Portfolio with: portfolio1.
	anotherPortfolio add: anotherAccount.
	reporter _ SummaryReporter for: anotherPortfolio.

	Transfer move: 100 from: account1 to: anotherAccount.

		
	self  assert: reporter accountSummary 
		equals: (OrderedCollection with: 'Salida por transferencia de 100.' with: 'Entrada por transferencia de 100.' with: 'Balance = 0')! !

!testRun: #AccountReporterTest #test12AccountSummaryShouldReflectOutgoingAndIncomingTransfersOnPortfoliosWithPortfolios stamp: 'fr 11/16/2020 02:39:43'!
PASSED!

!testRun: #AccountReporterTest #test01AccountSummaryForAccountWithNoTransactionsShouldJustShowBalanceZero stamp: 'fr 11/16/2020 02:39:43'!
PASSED!

!testRun: #AccountReporterTest #test02AccountSummaryShouldReflectDepositsOnAccounts stamp: 'fr 11/16/2020 02:39:43'!
PASSED!

!testRun: #AccountReporterTest #test03AccountSummaryShouldReflectWithdrawsOnAccounts stamp: 'fr 11/16/2020 02:39:43'!
PASSED!

!testRun: #AccountReporterTest #test04AccountSummaryShouldReflectOutgoingTransfersOnAccounts stamp: 'fr 11/16/2020 02:39:43'!
PASSED!

!testRun: #AccountReporterTest #test05AccountSummaryShouldReflectIncomingTransfersOnAccounts stamp: 'fr 11/16/2020 02:39:43'!
PASSED!

!testRun: #AccountReporterTest #test06AccountSummaryForPortfolioWithNoTransactionsShouldJustShowBalanceZero stamp: 'fr 11/16/2020 02:39:43'!
PASSED!

!testRun: #AccountReporterTest #test07AccountSummaryShouldReflectDepositsOnPortfoliosWithAccounts stamp: 'fr 11/16/2020 02:39:43'!
PASSED!

!testRun: #AccountReporterTest #test08AccountSummaryShouldReflectWithdrawsOnPortfoliosWithAccounts stamp: 'fr 11/16/2020 02:39:43'!
PASSED!

!testRun: #AccountReporterTest #test09AccountSummaryShouldReflectOutgoingAndIncomingTransfersOnPortfoliosWithAccounts stamp: 'fr 11/16/2020 02:39:43'!
PASSED!

!testRun: #AccountReporterTest #test10AccountSummaryShouldReflectDepositsOnPortfoliosWithPortfolios stamp: 'fr 11/16/2020 02:39:43'!
PASSED!

!testRun: #AccountReporterTest #test11AccountSummaryShouldReflectWithdrawsOnPortfoliosWithPortfolios stamp: 'fr 11/16/2020 02:39:43'!
PASSED!

!testRun: #AccountReporterTest #test12AccountSummaryShouldReflectOutgoingAndIncomingTransfersOnPortfoliosWithPortfolios stamp: 'fr 11/16/2020 02:39:43'!
PASSED!

!testRun: #AccountReporterTest #test13NetTransferForAccountWithNoTransactionsShouldBeZero stamp: 'fr 11/16/2020 02:39:43'!
PASSED!

!testRun: #AccountReporterTest #test14NetTransferForAccountWithAnOutgoingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 02:39:43'!
PASSED!

!testRun: #AccountReporterTest #test15NetTransferForAccountWithAnIncomingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 02:39:43'!
PASSED!

!testRun: #AccountReporterTest #test16NetTransferForAccountShouldNotReflectDeposits stamp: 'fr 11/16/2020 02:39:43'!
PASSED!

!testRun: #AccountReporterTest #test17NetTransferForAccountShouldNotReflectWithdraws stamp: 'fr 11/16/2020 02:39:43'!
PASSED!

!testRun: #AccountReporterTest #test18NetTransferForPortfolioWithNoTransactionsShouldBeZero stamp: 'fr 11/16/2020 02:39:43'!
PASSED!

!testRun: #AccountReporterTest #test19NetTransferForPortfolioWithAnOutgoingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 02:39:43'!
PASSED!

!testRun: #AccountReporterTest #test20NetTransferForPortfolioWithAnIncomingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 02:39:43'!
PASSED!

!testRun: #AccountReporterTest #test21NetTransferForPortfolioShouldNotReflectDeposits stamp: 'fr 11/16/2020 02:39:43'!
PASSED!

!testRun: #AccountReporterTest #test22NetTransferForPortfolioShouldNotReflectWithdraws stamp: 'fr 11/16/2020 02:39:43'!
PASSED!

!testRun: #AccountReporterTest #test23NetTransferForPortfoliosWithPortfoliosShouldReflectOutgoingAndIncomingTransfers stamp: 'fr 11/16/2020 02:39:43'!
PASSED!

!testRun: #AccountReporterTest #test24NetTransferForPortfoliosWithPortfoliosShouldNotRelfectDepositsOrWithdraws stamp: 'fr 11/16/2020 02:39:43'!
PASSED!
!AccountReporterTest methodsFor: 'private' stamp: 'fr 11/16/2020 02:40:23'!
createAnotherNewAccount

	^ anotherAccount1 _ ReceptiveAccount new! !
!AccountReporterTest methodsFor: 'private' stamp: 'fr 11/16/2020 02:40:23' prior: 50898889!
createNewAccountsAndSummaryReporterForOne

	self createNewAccountAndSummaryReporterForIt.
	self createAnotherNewAccount! !

!testRun: #AccountReporterTest #test01AccountSummaryForAccountWithNoTransactionsShouldJustShowBalanceZero stamp: 'fr 11/16/2020 02:40:26'!
PASSED!

!testRun: #AccountReporterTest #test02AccountSummaryShouldReflectDepositsOnAccounts stamp: 'fr 11/16/2020 02:40:26'!
PASSED!

!testRun: #AccountReporterTest #test03AccountSummaryShouldReflectWithdrawsOnAccounts stamp: 'fr 11/16/2020 02:40:26'!
PASSED!

!testRun: #AccountReporterTest #test04AccountSummaryShouldReflectOutgoingTransfersOnAccounts stamp: 'fr 11/16/2020 02:40:26'!
PASSED!

!testRun: #AccountReporterTest #test05AccountSummaryShouldReflectIncomingTransfersOnAccounts stamp: 'fr 11/16/2020 02:40:26'!
PASSED!

!testRun: #AccountReporterTest #test06AccountSummaryForPortfolioWithNoTransactionsShouldJustShowBalanceZero stamp: 'fr 11/16/2020 02:40:26'!
PASSED!

!testRun: #AccountReporterTest #test07AccountSummaryShouldReflectDepositsOnPortfoliosWithAccounts stamp: 'fr 11/16/2020 02:40:26'!
PASSED!

!testRun: #AccountReporterTest #test08AccountSummaryShouldReflectWithdrawsOnPortfoliosWithAccounts stamp: 'fr 11/16/2020 02:40:26'!
PASSED!

!testRun: #AccountReporterTest #test09AccountSummaryShouldReflectOutgoingAndIncomingTransfersOnPortfoliosWithAccounts stamp: 'fr 11/16/2020 02:40:26'!
PASSED!

!testRun: #AccountReporterTest #test10AccountSummaryShouldReflectDepositsOnPortfoliosWithPortfolios stamp: 'fr 11/16/2020 02:40:26'!
PASSED!

!testRun: #AccountReporterTest #test11AccountSummaryShouldReflectWithdrawsOnPortfoliosWithPortfolios stamp: 'fr 11/16/2020 02:40:26'!
PASSED!

!testRun: #AccountReporterTest #test12AccountSummaryShouldReflectOutgoingAndIncomingTransfersOnPortfoliosWithPortfolios stamp: 'fr 11/16/2020 02:40:26'!
PASSED!

!testRun: #AccountReporterTest #test13NetTransferForAccountWithNoTransactionsShouldBeZero stamp: 'fr 11/16/2020 02:40:26'!
PASSED!

!testRun: #AccountReporterTest #test14NetTransferForAccountWithAnOutgoingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 02:40:26'!
PASSED!

!testRun: #AccountReporterTest #test15NetTransferForAccountWithAnIncomingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 02:40:26'!
PASSED!

!testRun: #AccountReporterTest #test16NetTransferForAccountShouldNotReflectDeposits stamp: 'fr 11/16/2020 02:40:26'!
PASSED!

!testRun: #AccountReporterTest #test17NetTransferForAccountShouldNotReflectWithdraws stamp: 'fr 11/16/2020 02:40:26'!
PASSED!

!testRun: #AccountReporterTest #test18NetTransferForPortfolioWithNoTransactionsShouldBeZero stamp: 'fr 11/16/2020 02:40:26'!
PASSED!

!testRun: #AccountReporterTest #test19NetTransferForPortfolioWithAnOutgoingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 02:40:26'!
PASSED!

!testRun: #AccountReporterTest #test20NetTransferForPortfolioWithAnIncomingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 02:40:26'!
PASSED!

!testRun: #AccountReporterTest #test21NetTransferForPortfolioShouldNotReflectDeposits stamp: 'fr 11/16/2020 02:40:26'!
PASSED!

!testRun: #AccountReporterTest #test22NetTransferForPortfolioShouldNotReflectWithdraws stamp: 'fr 11/16/2020 02:40:26'!
PASSED!

!testRun: #AccountReporterTest #test23NetTransferForPortfoliosWithPortfoliosShouldReflectOutgoingAndIncomingTransfers stamp: 'fr 11/16/2020 02:40:26'!
PASSED!

!testRun: #AccountReporterTest #test24NetTransferForPortfoliosWithPortfoliosShouldNotRelfectDepositsOrWithdraws stamp: 'fr 11/16/2020 02:40:26'!
PASSED!
!AccountReporterTest methodsFor: 'tests - account summary' stamp: 'fr 11/16/2020 02:40:52' prior: 50902287!
test12AccountSummaryShouldReflectOutgoingAndIncomingTransfersOnPortfoliosWithPortfolios

	| anotherPortfolio reporter |
	
	self createPortfolioWithAccount.
	self createAnotherNewAccount.
	anotherPortfolio _ Portfolio with: portfolio1.
	anotherPortfolio add: anotherAccount1.
	reporter _ SummaryReporter for: anotherPortfolio.

	Transfer move: 100 from: account1 to: anotherAccount1.

		
	self  assert: reporter accountSummary 
		equals: (OrderedCollection with: 'Salida por transferencia de 100.' with: 'Entrada por transferencia de 100.' with: 'Balance = 0')! !

!testRun: #AccountReporterTest #test12AccountSummaryShouldReflectOutgoingAndIncomingTransfersOnPortfoliosWithPortfolios stamp: 'fr 11/16/2020 02:40:54'!
PASSED!

!testRun: #AccountReporterTest #test01AccountSummaryForAccountWithNoTransactionsShouldJustShowBalanceZero stamp: 'fr 11/16/2020 02:40:54'!
PASSED!

!testRun: #AccountReporterTest #test02AccountSummaryShouldReflectDepositsOnAccounts stamp: 'fr 11/16/2020 02:40:54'!
PASSED!

!testRun: #AccountReporterTest #test03AccountSummaryShouldReflectWithdrawsOnAccounts stamp: 'fr 11/16/2020 02:40:54'!
PASSED!

!testRun: #AccountReporterTest #test04AccountSummaryShouldReflectOutgoingTransfersOnAccounts stamp: 'fr 11/16/2020 02:40:54'!
PASSED!

!testRun: #AccountReporterTest #test05AccountSummaryShouldReflectIncomingTransfersOnAccounts stamp: 'fr 11/16/2020 02:40:54'!
PASSED!

!testRun: #AccountReporterTest #test06AccountSummaryForPortfolioWithNoTransactionsShouldJustShowBalanceZero stamp: 'fr 11/16/2020 02:40:54'!
PASSED!

!testRun: #AccountReporterTest #test07AccountSummaryShouldReflectDepositsOnPortfoliosWithAccounts stamp: 'fr 11/16/2020 02:40:54'!
PASSED!

!testRun: #AccountReporterTest #test08AccountSummaryShouldReflectWithdrawsOnPortfoliosWithAccounts stamp: 'fr 11/16/2020 02:40:54'!
PASSED!

!testRun: #AccountReporterTest #test09AccountSummaryShouldReflectOutgoingAndIncomingTransfersOnPortfoliosWithAccounts stamp: 'fr 11/16/2020 02:40:54'!
PASSED!

!testRun: #AccountReporterTest #test10AccountSummaryShouldReflectDepositsOnPortfoliosWithPortfolios stamp: 'fr 11/16/2020 02:40:54'!
PASSED!

!testRun: #AccountReporterTest #test11AccountSummaryShouldReflectWithdrawsOnPortfoliosWithPortfolios stamp: 'fr 11/16/2020 02:40:54'!
PASSED!

!testRun: #AccountReporterTest #test12AccountSummaryShouldReflectOutgoingAndIncomingTransfersOnPortfoliosWithPortfolios stamp: 'fr 11/16/2020 02:40:54'!
PASSED!

!testRun: #AccountReporterTest #test13NetTransferForAccountWithNoTransactionsShouldBeZero stamp: 'fr 11/16/2020 02:40:54'!
PASSED!

!testRun: #AccountReporterTest #test14NetTransferForAccountWithAnOutgoingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 02:40:54'!
PASSED!

!testRun: #AccountReporterTest #test15NetTransferForAccountWithAnIncomingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 02:40:54'!
PASSED!

!testRun: #AccountReporterTest #test16NetTransferForAccountShouldNotReflectDeposits stamp: 'fr 11/16/2020 02:40:54'!
PASSED!

!testRun: #AccountReporterTest #test17NetTransferForAccountShouldNotReflectWithdraws stamp: 'fr 11/16/2020 02:40:54'!
PASSED!

!testRun: #AccountReporterTest #test18NetTransferForPortfolioWithNoTransactionsShouldBeZero stamp: 'fr 11/16/2020 02:40:54'!
PASSED!

!testRun: #AccountReporterTest #test19NetTransferForPortfolioWithAnOutgoingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 02:40:54'!
PASSED!

!testRun: #AccountReporterTest #test20NetTransferForPortfolioWithAnIncomingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 02:40:54'!
PASSED!

!testRun: #AccountReporterTest #test21NetTransferForPortfolioShouldNotReflectDeposits stamp: 'fr 11/16/2020 02:40:54'!
PASSED!

!testRun: #AccountReporterTest #test22NetTransferForPortfolioShouldNotReflectWithdraws stamp: 'fr 11/16/2020 02:40:54'!
PASSED!

!testRun: #AccountReporterTest #test23NetTransferForPortfoliosWithPortfoliosShouldReflectOutgoingAndIncomingTransfers stamp: 'fr 11/16/2020 02:40:54'!
PASSED!

!testRun: #AccountReporterTest #test24NetTransferForPortfoliosWithPortfoliosShouldNotRelfectDepositsOrWithdraws stamp: 'fr 11/16/2020 02:40:54'!
PASSED!
!AccountReporterTest methodsFor: 'tests - account summary' stamp: 'fr 11/16/2020 02:41:01' prior: 50902538!
test12AccountSummaryShouldReflectOutgoingAndIncomingTransfersOnPortfoliosWithPortfolios

	| anotherPortfolio reporter |
	
	self createPortfolioWithAccount.
	anotherPortfolio _ Portfolio with: portfolio1.
	self createAnotherNewAccount.
	anotherPortfolio add: anotherAccount1.
	reporter _ SummaryReporter for: anotherPortfolio.

	Transfer move: 100 from: account1 to: anotherAccount1.

		
	self  assert: reporter accountSummary 
		equals: (OrderedCollection with: 'Salida por transferencia de 100.' with: 'Entrada por transferencia de 100.' with: 'Balance = 0')! !
!AccountReporterTest methodsFor: 'tests - account summary' stamp: 'fr 11/16/2020 02:41:41'!
createPortfolioWithPortfolioWithAccount

	self createPortfolioWithAccount.
	anotherPortfolio1 _ Portfolio with: portfolio1! !
!AccountReporterTest methodsFor: 'tests - account summary' stamp: 'fr 11/16/2020 02:41:41' prior: 50901866!
createSummaryReporterForPortfolioWithPortfolioWithAccount

	self createPortfolioWithPortfolioWithAccount.
	reporter1 _ SummaryReporter for: anotherPortfolio1! !
!AccountReporterTest methodsFor: 'tests - account summary' stamp: 'fr 11/16/2020 02:42:09' prior: 50902670!
test12AccountSummaryShouldReflectOutgoingAndIncomingTransfersOnPortfoliosWithPortfolios

	| reporter |
	
	self createPortfolioWithPortfolioWithAccount.
	self createAnotherNewAccount.
	anotherPortfolio1 add: anotherAccount1.
	reporter _ SummaryReporter for: anotherPortfolio1.

	Transfer move: 100 from: account1 to: anotherAccount1.

		
	self  assert: reporter accountSummary 
		equals: (OrderedCollection with: 'Salida por transferencia de 100.' with: 'Entrada por transferencia de 100.' with: 'Balance = 0')! !

!testRun: #AccountReporterTest #test12AccountSummaryShouldReflectOutgoingAndIncomingTransfersOnPortfoliosWithPortfolios stamp: 'fr 11/16/2020 02:42:11'!
PASSED!

!testRun: #AccountReporterTest #test01AccountSummaryForAccountWithNoTransactionsShouldJustShowBalanceZero stamp: 'fr 11/16/2020 02:42:11'!
PASSED!

!testRun: #AccountReporterTest #test02AccountSummaryShouldReflectDepositsOnAccounts stamp: 'fr 11/16/2020 02:42:11'!
PASSED!

!testRun: #AccountReporterTest #test03AccountSummaryShouldReflectWithdrawsOnAccounts stamp: 'fr 11/16/2020 02:42:11'!
PASSED!

!testRun: #AccountReporterTest #test04AccountSummaryShouldReflectOutgoingTransfersOnAccounts stamp: 'fr 11/16/2020 02:42:11'!
PASSED!

!testRun: #AccountReporterTest #test05AccountSummaryShouldReflectIncomingTransfersOnAccounts stamp: 'fr 11/16/2020 02:42:11'!
PASSED!

!testRun: #AccountReporterTest #test06AccountSummaryForPortfolioWithNoTransactionsShouldJustShowBalanceZero stamp: 'fr 11/16/2020 02:42:11'!
PASSED!

!testRun: #AccountReporterTest #test07AccountSummaryShouldReflectDepositsOnPortfoliosWithAccounts stamp: 'fr 11/16/2020 02:42:11'!
PASSED!

!testRun: #AccountReporterTest #test08AccountSummaryShouldReflectWithdrawsOnPortfoliosWithAccounts stamp: 'fr 11/16/2020 02:42:11'!
PASSED!

!testRun: #AccountReporterTest #test09AccountSummaryShouldReflectOutgoingAndIncomingTransfersOnPortfoliosWithAccounts stamp: 'fr 11/16/2020 02:42:11'!
PASSED!

!testRun: #AccountReporterTest #test10AccountSummaryShouldReflectDepositsOnPortfoliosWithPortfolios stamp: 'fr 11/16/2020 02:42:11'!
PASSED!

!testRun: #AccountReporterTest #test11AccountSummaryShouldReflectWithdrawsOnPortfoliosWithPortfolios stamp: 'fr 11/16/2020 02:42:11'!
PASSED!

!testRun: #AccountReporterTest #test12AccountSummaryShouldReflectOutgoingAndIncomingTransfersOnPortfoliosWithPortfolios stamp: 'fr 11/16/2020 02:42:11'!
PASSED!

!testRun: #AccountReporterTest #test13NetTransferForAccountWithNoTransactionsShouldBeZero stamp: 'fr 11/16/2020 02:42:11'!
PASSED!

!testRun: #AccountReporterTest #test14NetTransferForAccountWithAnOutgoingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 02:42:11'!
PASSED!

!testRun: #AccountReporterTest #test15NetTransferForAccountWithAnIncomingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 02:42:11'!
PASSED!

!testRun: #AccountReporterTest #test16NetTransferForAccountShouldNotReflectDeposits stamp: 'fr 11/16/2020 02:42:11'!
PASSED!

!testRun: #AccountReporterTest #test17NetTransferForAccountShouldNotReflectWithdraws stamp: 'fr 11/16/2020 02:42:11'!
PASSED!

!testRun: #AccountReporterTest #test18NetTransferForPortfolioWithNoTransactionsShouldBeZero stamp: 'fr 11/16/2020 02:42:11'!
PASSED!

!testRun: #AccountReporterTest #test19NetTransferForPortfolioWithAnOutgoingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 02:42:11'!
PASSED!

!testRun: #AccountReporterTest #test20NetTransferForPortfolioWithAnIncomingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 02:42:11'!
PASSED!

!testRun: #AccountReporterTest #test21NetTransferForPortfolioShouldNotReflectDeposits stamp: 'fr 11/16/2020 02:42:11'!
PASSED!

!testRun: #AccountReporterTest #test22NetTransferForPortfolioShouldNotReflectWithdraws stamp: 'fr 11/16/2020 02:42:11'!
PASSED!

!testRun: #AccountReporterTest #test23NetTransferForPortfoliosWithPortfoliosShouldReflectOutgoingAndIncomingTransfers stamp: 'fr 11/16/2020 02:42:11'!
PASSED!

!testRun: #AccountReporterTest #test24NetTransferForPortfoliosWithPortfoliosShouldNotRelfectDepositsOrWithdraws stamp: 'fr 11/16/2020 02:42:11'!
PASSED!
!AccountReporterTest methodsFor: 'tests - account summary' stamp: 'fr 11/16/2020 02:42:17' prior: 50902708!
test12AccountSummaryShouldReflectOutgoingAndIncomingTransfersOnPortfoliosWithPortfolios

	
	
	self createPortfolioWithPortfolioWithAccount.
	self createAnotherNewAccount.
	anotherPortfolio1 add: anotherAccount1.
	reporter1 _ SummaryReporter for: anotherPortfolio1.

	Transfer move: 100 from: account1 to: anotherAccount1.

		
	self  assert: reporter1 accountSummary 
		equals: (OrderedCollection with: 'Salida por transferencia de 100.' with: 'Entrada por transferencia de 100.' with: 'Balance = 0')! !

!testRun: #AccountReporterTest #test12AccountSummaryShouldReflectOutgoingAndIncomingTransfersOnPortfoliosWithPortfolios stamp: 'fr 11/16/2020 02:42:18'!
PASSED!

!testRun: #AccountReporterTest #test01AccountSummaryForAccountWithNoTransactionsShouldJustShowBalanceZero stamp: 'fr 11/16/2020 02:42:18'!
PASSED!

!testRun: #AccountReporterTest #test02AccountSummaryShouldReflectDepositsOnAccounts stamp: 'fr 11/16/2020 02:42:18'!
PASSED!

!testRun: #AccountReporterTest #test03AccountSummaryShouldReflectWithdrawsOnAccounts stamp: 'fr 11/16/2020 02:42:18'!
PASSED!

!testRun: #AccountReporterTest #test04AccountSummaryShouldReflectOutgoingTransfersOnAccounts stamp: 'fr 11/16/2020 02:42:18'!
PASSED!

!testRun: #AccountReporterTest #test05AccountSummaryShouldReflectIncomingTransfersOnAccounts stamp: 'fr 11/16/2020 02:42:18'!
PASSED!

!testRun: #AccountReporterTest #test06AccountSummaryForPortfolioWithNoTransactionsShouldJustShowBalanceZero stamp: 'fr 11/16/2020 02:42:18'!
PASSED!

!testRun: #AccountReporterTest #test07AccountSummaryShouldReflectDepositsOnPortfoliosWithAccounts stamp: 'fr 11/16/2020 02:42:18'!
PASSED!

!testRun: #AccountReporterTest #test08AccountSummaryShouldReflectWithdrawsOnPortfoliosWithAccounts stamp: 'fr 11/16/2020 02:42:18'!
PASSED!

!testRun: #AccountReporterTest #test09AccountSummaryShouldReflectOutgoingAndIncomingTransfersOnPortfoliosWithAccounts stamp: 'fr 11/16/2020 02:42:18'!
PASSED!

!testRun: #AccountReporterTest #test10AccountSummaryShouldReflectDepositsOnPortfoliosWithPortfolios stamp: 'fr 11/16/2020 02:42:18'!
PASSED!

!testRun: #AccountReporterTest #test11AccountSummaryShouldReflectWithdrawsOnPortfoliosWithPortfolios stamp: 'fr 11/16/2020 02:42:18'!
PASSED!

!testRun: #AccountReporterTest #test12AccountSummaryShouldReflectOutgoingAndIncomingTransfersOnPortfoliosWithPortfolios stamp: 'fr 11/16/2020 02:42:18'!
PASSED!

!testRun: #AccountReporterTest #test13NetTransferForAccountWithNoTransactionsShouldBeZero stamp: 'fr 11/16/2020 02:42:18'!
PASSED!

!testRun: #AccountReporterTest #test14NetTransferForAccountWithAnOutgoingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 02:42:18'!
PASSED!

!testRun: #AccountReporterTest #test15NetTransferForAccountWithAnIncomingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 02:42:18'!
PASSED!

!testRun: #AccountReporterTest #test16NetTransferForAccountShouldNotReflectDeposits stamp: 'fr 11/16/2020 02:42:18'!
PASSED!

!testRun: #AccountReporterTest #test17NetTransferForAccountShouldNotReflectWithdraws stamp: 'fr 11/16/2020 02:42:18'!
PASSED!

!testRun: #AccountReporterTest #test18NetTransferForPortfolioWithNoTransactionsShouldBeZero stamp: 'fr 11/16/2020 02:42:18'!
PASSED!

!testRun: #AccountReporterTest #test19NetTransferForPortfolioWithAnOutgoingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 02:42:18'!
PASSED!

!testRun: #AccountReporterTest #test20NetTransferForPortfolioWithAnIncomingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 02:42:18'!
PASSED!

!testRun: #AccountReporterTest #test21NetTransferForPortfolioShouldNotReflectDeposits stamp: 'fr 11/16/2020 02:42:18'!
PASSED!

!testRun: #AccountReporterTest #test22NetTransferForPortfolioShouldNotReflectWithdraws stamp: 'fr 11/16/2020 02:42:18'!
PASSED!

!testRun: #AccountReporterTest #test23NetTransferForPortfoliosWithPortfoliosShouldReflectOutgoingAndIncomingTransfers stamp: 'fr 11/16/2020 02:42:18'!
PASSED!

!testRun: #AccountReporterTest #test24NetTransferForPortfoliosWithPortfoliosShouldNotRelfectDepositsOrWithdraws stamp: 'fr 11/16/2020 02:42:18'!
PASSED!
!AccountReporterTest methodsFor: 'tests - account summary' stamp: 'fr 11/16/2020 02:42:21' prior: 50902839!
test12AccountSummaryShouldReflectOutgoingAndIncomingTransfersOnPortfoliosWithPortfolios

	
	self createPortfolioWithPortfolioWithAccount.
	self createAnotherNewAccount.
	anotherPortfolio1 add: anotherAccount1.
	reporter1 _ SummaryReporter for: anotherPortfolio1.

	Transfer move: 100 from: account1 to: anotherAccount1.

		
	self  assert: reporter1 accountSummary 
		equals: (OrderedCollection with: 'Salida por transferencia de 100.' with: 'Entrada por transferencia de 100.' with: 'Balance = 0')! !
!AccountReporterTest methodsFor: 'tests - account summary' stamp: 'fr 11/16/2020 02:42:22' prior: 50902969!
test12AccountSummaryShouldReflectOutgoingAndIncomingTransfersOnPortfoliosWithPortfolios

	self createPortfolioWithPortfolioWithAccount.
	self createAnotherNewAccount.
	anotherPortfolio1 add: anotherAccount1.
	reporter1 _ SummaryReporter for: anotherPortfolio1.

	Transfer move: 100 from: account1 to: anotherAccount1.

		
	self  assert: reporter1 accountSummary 
		equals: (OrderedCollection with: 'Salida por transferencia de 100.' with: 'Entrada por transferencia de 100.' with: 'Balance = 0')! !
!AccountReporterTest methodsFor: 'tests - account summary' stamp: 'fr 11/16/2020 02:42:47'!
test12AccountSummaryShouldReflectOutgoingAndIncomingTransfersOnPortfoliosWithPortfoliosAndAccounts

	self createPortfolioWithPortfolioWithAccount.
	self createAnotherNewAccount.
	anotherPortfolio1 add: anotherAccount1.
	reporter1 _ SummaryReporter for: anotherPortfolio1.

	Transfer move: 100 from: account1 to: anotherAccount1.

		
	self  assert: reporter1 accountSummary 
		equals: (OrderedCollection with: 'Salida por transferencia de 100.' with: 'Entrada por transferencia de 100.' with: 'Balance = 0')! !

!methodRemoval: AccountReporterTest #test12AccountSummaryShouldReflectOutgoingAndIncomingTransfersOnPortfoliosWithPortfolios stamp: 'fr 11/16/2020 02:42:47'!
test12AccountSummaryShouldReflectOutgoingAndIncomingTransfersOnPortfoliosWithPortfolios

	self createPortfolioWithPortfolioWithAccount.
	self createAnotherNewAccount.
	anotherPortfolio1 add: anotherAccount1.
	reporter1 _ SummaryReporter for: anotherPortfolio1.

	Transfer move: 100 from: account1 to: anotherAccount1.

		
	self  assert: reporter1 accountSummary 
		equals: (OrderedCollection with: 'Salida por transferencia de 100.' with: 'Entrada por transferencia de 100.' with: 'Balance = 0')!
!AccountReporterTest methodsFor: 'tests - account summary' stamp: 'fr 11/16/2020 02:43:31' prior: 50899337!
test09AccountSummaryShouldReflectOutgoingAndIncomingTransfersOnPortfoliosWithAccounts

	| portfolio anotherAccount reporter |

	self createNewAccount.	
	anotherAccount _ ReceptiveAccount new.
	portfolio _ Portfolio with: account1 with: anotherAccount.
	reporter _ SummaryReporter for: portfolio.

	Transfer move: 10 from: account1 to: anotherAccount.
		
	self  assert: reporter accountSummary 
		equals: (OrderedCollection with: 'Salida por transferencia de 10.' with: 'Entrada por transferencia de 10.' with: 'Balance = 0')! !

!testRun: #AccountReporterTest #test09AccountSummaryShouldReflectOutgoingAndIncomingTransfersOnPortfoliosWithAccounts stamp: 'fr 11/16/2020 02:43:37'!
PASSED!

!testRun: #AccountReporterTest #test01AccountSummaryForAccountWithNoTransactionsShouldJustShowBalanceZero stamp: 'fr 11/16/2020 02:43:37'!
PASSED!

!testRun: #AccountReporterTest #test02AccountSummaryShouldReflectDepositsOnAccounts stamp: 'fr 11/16/2020 02:43:37'!
PASSED!

!testRun: #AccountReporterTest #test03AccountSummaryShouldReflectWithdrawsOnAccounts stamp: 'fr 11/16/2020 02:43:37'!
PASSED!

!testRun: #AccountReporterTest #test04AccountSummaryShouldReflectOutgoingTransfersOnAccounts stamp: 'fr 11/16/2020 02:43:37'!
PASSED!

!testRun: #AccountReporterTest #test05AccountSummaryShouldReflectIncomingTransfersOnAccounts stamp: 'fr 11/16/2020 02:43:37'!
PASSED!

!testRun: #AccountReporterTest #test06AccountSummaryForPortfolioWithNoTransactionsShouldJustShowBalanceZero stamp: 'fr 11/16/2020 02:43:37'!
PASSED!

!testRun: #AccountReporterTest #test07AccountSummaryShouldReflectDepositsOnPortfoliosWithAccounts stamp: 'fr 11/16/2020 02:43:37'!
PASSED!

!testRun: #AccountReporterTest #test08AccountSummaryShouldReflectWithdrawsOnPortfoliosWithAccounts stamp: 'fr 11/16/2020 02:43:37'!
PASSED!

!testRun: #AccountReporterTest #test09AccountSummaryShouldReflectOutgoingAndIncomingTransfersOnPortfoliosWithAccounts stamp: 'fr 11/16/2020 02:43:37'!
PASSED!

!testRun: #AccountReporterTest #test10AccountSummaryShouldReflectDepositsOnPortfoliosWithPortfolios stamp: 'fr 11/16/2020 02:43:37'!
PASSED!

!testRun: #AccountReporterTest #test11AccountSummaryShouldReflectWithdrawsOnPortfoliosWithPortfolios stamp: 'fr 11/16/2020 02:43:37'!
PASSED!

!testRun: #AccountReporterTest #test12AccountSummaryShouldReflectOutgoingAndIncomingTransfersOnPortfoliosWithPortfoliosAndAccounts stamp: 'fr 11/16/2020 02:43:37'!
PASSED!

!testRun: #AccountReporterTest #test13NetTransferForAccountWithNoTransactionsShouldBeZero stamp: 'fr 11/16/2020 02:43:37'!
PASSED!

!testRun: #AccountReporterTest #test14NetTransferForAccountWithAnOutgoingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 02:43:37'!
PASSED!

!testRun: #AccountReporterTest #test15NetTransferForAccountWithAnIncomingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 02:43:37'!
PASSED!

!testRun: #AccountReporterTest #test16NetTransferForAccountShouldNotReflectDeposits stamp: 'fr 11/16/2020 02:43:37'!
PASSED!

!testRun: #AccountReporterTest #test17NetTransferForAccountShouldNotReflectWithdraws stamp: 'fr 11/16/2020 02:43:37'!
PASSED!

!testRun: #AccountReporterTest #test18NetTransferForPortfolioWithNoTransactionsShouldBeZero stamp: 'fr 11/16/2020 02:43:37'!
PASSED!

!testRun: #AccountReporterTest #test19NetTransferForPortfolioWithAnOutgoingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 02:43:37'!
PASSED!

!testRun: #AccountReporterTest #test20NetTransferForPortfolioWithAnIncomingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 02:43:37'!
PASSED!

!testRun: #AccountReporterTest #test21NetTransferForPortfolioShouldNotReflectDeposits stamp: 'fr 11/16/2020 02:43:37'!
PASSED!

!testRun: #AccountReporterTest #test22NetTransferForPortfolioShouldNotReflectWithdraws stamp: 'fr 11/16/2020 02:43:37'!
PASSED!

!testRun: #AccountReporterTest #test23NetTransferForPortfoliosWithPortfoliosShouldReflectOutgoingAndIncomingTransfers stamp: 'fr 11/16/2020 02:43:37'!
PASSED!

!testRun: #AccountReporterTest #test24NetTransferForPortfoliosWithPortfoliosShouldNotRelfectDepositsOrWithdraws stamp: 'fr 11/16/2020 02:43:37'!
PASSED!
!AccountReporterTest methodsFor: 'tests - account summary' stamp: 'fr 11/16/2020 02:43:56' prior: 50903048!
test09AccountSummaryShouldReflectOutgoingAndIncomingTransfersOnPortfoliosWithAccounts

	| portfolio reporter |

	self createNewAccount.	
	self createAnotherNewAccount.
	portfolio _ Portfolio with: account1 with: anotherAccount1.
	reporter _ SummaryReporter for: portfolio.

	Transfer move: 10 from: account1 to: anotherAccount1.
		
	self  assert: reporter accountSummary 
		equals: (OrderedCollection with: 'Salida por transferencia de 10.' with: 'Entrada por transferencia de 10.' with: 'Balance = 0')! !
!AccountReporterTest methodsFor: 'tests - account summary' stamp: 'fr 11/16/2020 02:44:09' prior: 50903179!
test09AccountSummaryShouldReflectOutgoingAndIncomingTransfersOnPortfoliosWithAccounts

	

	self createNewAccount.	
	self createAnotherNewAccount.
	portfolio1 _ Portfolio with: account1 with: anotherAccount1.
	reporter1 _ SummaryReporter for: portfolio1.

	Transfer move: 10 from: account1 to: anotherAccount1.
		
	self  assert: reporter1 accountSummary 
		equals: (OrderedCollection with: 'Salida por transferencia de 10.' with: 'Entrada por transferencia de 10.' with: 'Balance = 0')! !

!testRun: #AccountReporterTest #test09AccountSummaryShouldReflectOutgoingAndIncomingTransfersOnPortfoliosWithAccounts stamp: 'fr 11/16/2020 02:44:11'!
PASSED!

!testRun: #AccountReporterTest #test01AccountSummaryForAccountWithNoTransactionsShouldJustShowBalanceZero stamp: 'fr 11/16/2020 02:44:11'!
PASSED!

!testRun: #AccountReporterTest #test02AccountSummaryShouldReflectDepositsOnAccounts stamp: 'fr 11/16/2020 02:44:11'!
PASSED!

!testRun: #AccountReporterTest #test03AccountSummaryShouldReflectWithdrawsOnAccounts stamp: 'fr 11/16/2020 02:44:11'!
PASSED!

!testRun: #AccountReporterTest #test04AccountSummaryShouldReflectOutgoingTransfersOnAccounts stamp: 'fr 11/16/2020 02:44:11'!
PASSED!

!testRun: #AccountReporterTest #test05AccountSummaryShouldReflectIncomingTransfersOnAccounts stamp: 'fr 11/16/2020 02:44:11'!
PASSED!

!testRun: #AccountReporterTest #test06AccountSummaryForPortfolioWithNoTransactionsShouldJustShowBalanceZero stamp: 'fr 11/16/2020 02:44:11'!
PASSED!

!testRun: #AccountReporterTest #test07AccountSummaryShouldReflectDepositsOnPortfoliosWithAccounts stamp: 'fr 11/16/2020 02:44:11'!
PASSED!

!testRun: #AccountReporterTest #test08AccountSummaryShouldReflectWithdrawsOnPortfoliosWithAccounts stamp: 'fr 11/16/2020 02:44:11'!
PASSED!

!testRun: #AccountReporterTest #test09AccountSummaryShouldReflectOutgoingAndIncomingTransfersOnPortfoliosWithAccounts stamp: 'fr 11/16/2020 02:44:11'!
PASSED!

!testRun: #AccountReporterTest #test10AccountSummaryShouldReflectDepositsOnPortfoliosWithPortfolios stamp: 'fr 11/16/2020 02:44:11'!
PASSED!

!testRun: #AccountReporterTest #test11AccountSummaryShouldReflectWithdrawsOnPortfoliosWithPortfolios stamp: 'fr 11/16/2020 02:44:11'!
PASSED!

!testRun: #AccountReporterTest #test12AccountSummaryShouldReflectOutgoingAndIncomingTransfersOnPortfoliosWithPortfoliosAndAccounts stamp: 'fr 11/16/2020 02:44:11'!
PASSED!

!testRun: #AccountReporterTest #test13NetTransferForAccountWithNoTransactionsShouldBeZero stamp: 'fr 11/16/2020 02:44:11'!
PASSED!

!testRun: #AccountReporterTest #test14NetTransferForAccountWithAnOutgoingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 02:44:11'!
PASSED!

!testRun: #AccountReporterTest #test15NetTransferForAccountWithAnIncomingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 02:44:11'!
PASSED!

!testRun: #AccountReporterTest #test16NetTransferForAccountShouldNotReflectDeposits stamp: 'fr 11/16/2020 02:44:11'!
PASSED!

!testRun: #AccountReporterTest #test17NetTransferForAccountShouldNotReflectWithdraws stamp: 'fr 11/16/2020 02:44:11'!
PASSED!

!testRun: #AccountReporterTest #test18NetTransferForPortfolioWithNoTransactionsShouldBeZero stamp: 'fr 11/16/2020 02:44:11'!
PASSED!

!testRun: #AccountReporterTest #test19NetTransferForPortfolioWithAnOutgoingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 02:44:11'!
PASSED!

!testRun: #AccountReporterTest #test20NetTransferForPortfolioWithAnIncomingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 02:44:11'!
PASSED!

!testRun: #AccountReporterTest #test21NetTransferForPortfolioShouldNotReflectDeposits stamp: 'fr 11/16/2020 02:44:11'!
PASSED!

!testRun: #AccountReporterTest #test22NetTransferForPortfolioShouldNotReflectWithdraws stamp: 'fr 11/16/2020 02:44:11'!
PASSED!

!testRun: #AccountReporterTest #test23NetTransferForPortfoliosWithPortfoliosShouldReflectOutgoingAndIncomingTransfers stamp: 'fr 11/16/2020 02:44:11'!
PASSED!

!testRun: #AccountReporterTest #test24NetTransferForPortfoliosWithPortfoliosShouldNotRelfectDepositsOrWithdraws stamp: 'fr 11/16/2020 02:44:11'!
PASSED!
!AccountReporterTest methodsFor: 'tests - account summary' stamp: 'fr 11/16/2020 02:44:15' prior: 50903199!
test09AccountSummaryShouldReflectOutgoingAndIncomingTransfersOnPortfoliosWithAccounts

	self createNewAccount.	
	self createAnotherNewAccount.
	portfolio1 _ Portfolio with: account1 with: anotherAccount1.
	reporter1 _ SummaryReporter for: portfolio1.

	Transfer move: 10 from: account1 to: anotherAccount1.
		
	self  assert: reporter1 accountSummary 
		equals: (OrderedCollection with: 'Salida por transferencia de 10.' with: 'Entrada por transferencia de 10.' with: 'Balance = 0')! !
!AccountReporterTest methodsFor: 'tests - account summary' stamp: 'fr 11/16/2020 02:44:37' prior: 50901226!
test06AccountSummaryForPortfolioWithNoTransactionsShouldJustShowBalanceZero

	
	
	portfolio1 _ Portfolio new.
	reporter1 _ SummaryReporter for: portfolio1.
	
	self  assert: reporter1 accountSummary 
		equals: (OrderedCollection with: 'Balance = 0')! !
!AccountReporterTest methodsFor: 'tests - account summary' stamp: 'fr 11/16/2020 02:44:40' prior: 50903348!
test06AccountSummaryForPortfolioWithNoTransactionsShouldJustShowBalanceZero
	
	portfolio1 _ Portfolio new.
	reporter1 _ SummaryReporter for: portfolio1.
	
	self  assert: reporter1 accountSummary 
		equals: (OrderedCollection with: 'Balance = 0')! !

!testRun: #AccountReporterTest #test06AccountSummaryForPortfolioWithNoTransactionsShouldJustShowBalanceZero stamp: 'fr 11/16/2020 02:44:40'!
PASSED!

!testRun: #AccountReporterTest #test01AccountSummaryForAccountWithNoTransactionsShouldJustShowBalanceZero stamp: 'fr 11/16/2020 02:44:40'!
PASSED!

!testRun: #AccountReporterTest #test02AccountSummaryShouldReflectDepositsOnAccounts stamp: 'fr 11/16/2020 02:44:40'!
PASSED!

!testRun: #AccountReporterTest #test03AccountSummaryShouldReflectWithdrawsOnAccounts stamp: 'fr 11/16/2020 02:44:40'!
PASSED!

!testRun: #AccountReporterTest #test04AccountSummaryShouldReflectOutgoingTransfersOnAccounts stamp: 'fr 11/16/2020 02:44:40'!
PASSED!

!testRun: #AccountReporterTest #test05AccountSummaryShouldReflectIncomingTransfersOnAccounts stamp: 'fr 11/16/2020 02:44:40'!
PASSED!

!testRun: #AccountReporterTest #test06AccountSummaryForPortfolioWithNoTransactionsShouldJustShowBalanceZero stamp: 'fr 11/16/2020 02:44:40'!
PASSED!

!testRun: #AccountReporterTest #test07AccountSummaryShouldReflectDepositsOnPortfoliosWithAccounts stamp: 'fr 11/16/2020 02:44:40'!
PASSED!

!testRun: #AccountReporterTest #test08AccountSummaryShouldReflectWithdrawsOnPortfoliosWithAccounts stamp: 'fr 11/16/2020 02:44:40'!
PASSED!

!testRun: #AccountReporterTest #test09AccountSummaryShouldReflectOutgoingAndIncomingTransfersOnPortfoliosWithAccounts stamp: 'fr 11/16/2020 02:44:40'!
PASSED!

!testRun: #AccountReporterTest #test10AccountSummaryShouldReflectDepositsOnPortfoliosWithPortfolios stamp: 'fr 11/16/2020 02:44:40'!
PASSED!

!testRun: #AccountReporterTest #test11AccountSummaryShouldReflectWithdrawsOnPortfoliosWithPortfolios stamp: 'fr 11/16/2020 02:44:40'!
PASSED!

!testRun: #AccountReporterTest #test12AccountSummaryShouldReflectOutgoingAndIncomingTransfersOnPortfoliosWithPortfoliosAndAccounts stamp: 'fr 11/16/2020 02:44:40'!
PASSED!

!testRun: #AccountReporterTest #test13NetTransferForAccountWithNoTransactionsShouldBeZero stamp: 'fr 11/16/2020 02:44:40'!
PASSED!

!testRun: #AccountReporterTest #test14NetTransferForAccountWithAnOutgoingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 02:44:40'!
PASSED!

!testRun: #AccountReporterTest #test15NetTransferForAccountWithAnIncomingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 02:44:40'!
PASSED!

!testRun: #AccountReporterTest #test16NetTransferForAccountShouldNotReflectDeposits stamp: 'fr 11/16/2020 02:44:40'!
PASSED!

!testRun: #AccountReporterTest #test17NetTransferForAccountShouldNotReflectWithdraws stamp: 'fr 11/16/2020 02:44:40'!
PASSED!

!testRun: #AccountReporterTest #test18NetTransferForPortfolioWithNoTransactionsShouldBeZero stamp: 'fr 11/16/2020 02:44:40'!
PASSED!

!testRun: #AccountReporterTest #test19NetTransferForPortfolioWithAnOutgoingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 02:44:40'!
PASSED!

!testRun: #AccountReporterTest #test20NetTransferForPortfolioWithAnIncomingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 02:44:40'!
PASSED!

!testRun: #AccountReporterTest #test21NetTransferForPortfolioShouldNotReflectDeposits stamp: 'fr 11/16/2020 02:44:40'!
PASSED!

!testRun: #AccountReporterTest #test22NetTransferForPortfolioShouldNotReflectWithdraws stamp: 'fr 11/16/2020 02:44:40'!
PASSED!

!testRun: #AccountReporterTest #test23NetTransferForPortfoliosWithPortfoliosShouldReflectOutgoingAndIncomingTransfers stamp: 'fr 11/16/2020 02:44:40'!
PASSED!

!testRun: #AccountReporterTest #test24NetTransferForPortfoliosWithPortfoliosShouldNotRelfectDepositsOrWithdraws stamp: 'fr 11/16/2020 02:44:40'!
PASSED!
!AccountReporterTest methodsFor: 'tests - net transfer' stamp: 'fr 11/16/2020 02:45:15' prior: 50881560!
test13NetTransferForAccountWithNoTransactionsShouldBeZero

	| reporter |
	
	self createNewAccount.
	reporter _ 	TransferNetReporter for: account1.

	self assert: [reporter transferNet = 0]! !
!AccountReporterTest methodsFor: 'tests - net transfer' stamp: 'fr 11/16/2020 02:45:20' prior: 50903482!
test13NetTransferForAccountWithNoTransactionsShouldBeZero

	
	
	self createNewAccount.
	reporter1 _ 	TransferNetReporter for: account1.

	self assert: [reporter1 transferNet = 0]! !
!AccountReporterTest methodsFor: 'tests - net transfer' stamp: 'fr 11/16/2020 02:45:23' prior: 50903492!
test13NetTransferForAccountWithNoTransactionsShouldBeZero

	self createNewAccount.
	reporter1 _ 	TransferNetReporter for: account1.

	self assert: [reporter1 transferNet = 0]! !
!AccountReporterTest methodsFor: 'tests - net transfer' stamp: 'fr 11/16/2020 02:45:59' prior: 50881680!
test14NetTransferForAccountWithAnOutgoingTransferShouldReflectItsValue

	
	
	self createNewAccount.
	self createAnotherNewAccount.
	reporter1 _ 	TransferNetReporter for: account1.
	
	Transfer move: 100 from: account1 to: anotherAccount1.
	
	self assert: [reporter1 transferNet = -100]! !
!AccountReporterTest methodsFor: 'tests - net transfer' stamp: 'fr 11/16/2020 02:46:04' prior: 50903510!
test14NetTransferForAccountWithAnOutgoingTransferShouldReflectItsValue

	self createNewAccount.
	self createAnotherNewAccount.
	reporter1 _ 	TransferNetReporter for: account1.
	
	Transfer move: 100 from: account1 to: anotherAccount1.
	
	self assert: [reporter1 transferNet = -100]! !
!AccountReporterTest methodsFor: 'tests - net transfer' stamp: 'fr 11/16/2020 02:46:39' prior: 50881694!
test15NetTransferForAccountWithAnIncomingTransferShouldReflectItsValue

	self createNewAccount.
	self createAnotherNewAccount.
	reporter1 _ 	TransferNetReporter for: account1.
	
	Transfer move: 100 from: anotherAccount1 to: account1.
	
	self assert: [reporter1 transferNet = 100]! !

!testRun: #AccountReporterTest #test15NetTransferForAccountWithAnIncomingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 02:46:41'!
PASSED!

!testRun: #AccountReporterTest #test01AccountSummaryForAccountWithNoTransactionsShouldJustShowBalanceZero stamp: 'fr 11/16/2020 02:46:41'!
PASSED!

!testRun: #AccountReporterTest #test02AccountSummaryShouldReflectDepositsOnAccounts stamp: 'fr 11/16/2020 02:46:41'!
PASSED!

!testRun: #AccountReporterTest #test03AccountSummaryShouldReflectWithdrawsOnAccounts stamp: 'fr 11/16/2020 02:46:41'!
PASSED!

!testRun: #AccountReporterTest #test04AccountSummaryShouldReflectOutgoingTransfersOnAccounts stamp: 'fr 11/16/2020 02:46:41'!
PASSED!

!testRun: #AccountReporterTest #test05AccountSummaryShouldReflectIncomingTransfersOnAccounts stamp: 'fr 11/16/2020 02:46:41'!
PASSED!

!testRun: #AccountReporterTest #test06AccountSummaryForPortfolioWithNoTransactionsShouldJustShowBalanceZero stamp: 'fr 11/16/2020 02:46:41'!
PASSED!

!testRun: #AccountReporterTest #test07AccountSummaryShouldReflectDepositsOnPortfoliosWithAccounts stamp: 'fr 11/16/2020 02:46:41'!
PASSED!

!testRun: #AccountReporterTest #test08AccountSummaryShouldReflectWithdrawsOnPortfoliosWithAccounts stamp: 'fr 11/16/2020 02:46:41'!
PASSED!

!testRun: #AccountReporterTest #test09AccountSummaryShouldReflectOutgoingAndIncomingTransfersOnPortfoliosWithAccounts stamp: 'fr 11/16/2020 02:46:41'!
PASSED!

!testRun: #AccountReporterTest #test10AccountSummaryShouldReflectDepositsOnPortfoliosWithPortfolios stamp: 'fr 11/16/2020 02:46:41'!
PASSED!

!testRun: #AccountReporterTest #test11AccountSummaryShouldReflectWithdrawsOnPortfoliosWithPortfolios stamp: 'fr 11/16/2020 02:46:41'!
PASSED!

!testRun: #AccountReporterTest #test12AccountSummaryShouldReflectOutgoingAndIncomingTransfersOnPortfoliosWithPortfoliosAndAccounts stamp: 'fr 11/16/2020 02:46:41'!
PASSED!

!testRun: #AccountReporterTest #test13NetTransferForAccountWithNoTransactionsShouldBeZero stamp: 'fr 11/16/2020 02:46:41'!
PASSED!

!testRun: #AccountReporterTest #test14NetTransferForAccountWithAnOutgoingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 02:46:41'!
PASSED!

!testRun: #AccountReporterTest #test15NetTransferForAccountWithAnIncomingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 02:46:41'!
PASSED!

!testRun: #AccountReporterTest #test16NetTransferForAccountShouldNotReflectDeposits stamp: 'fr 11/16/2020 02:46:41'!
PASSED!

!testRun: #AccountReporterTest #test17NetTransferForAccountShouldNotReflectWithdraws stamp: 'fr 11/16/2020 02:46:41'!
PASSED!

!testRun: #AccountReporterTest #test18NetTransferForPortfolioWithNoTransactionsShouldBeZero stamp: 'fr 11/16/2020 02:46:41'!
PASSED!

!testRun: #AccountReporterTest #test19NetTransferForPortfolioWithAnOutgoingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 02:46:41'!
PASSED!

!testRun: #AccountReporterTest #test20NetTransferForPortfolioWithAnIncomingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 02:46:41'!
PASSED!

!testRun: #AccountReporterTest #test21NetTransferForPortfolioShouldNotReflectDeposits stamp: 'fr 11/16/2020 02:46:41'!
PASSED!

!testRun: #AccountReporterTest #test22NetTransferForPortfolioShouldNotReflectWithdraws stamp: 'fr 11/16/2020 02:46:41'!
PASSED!

!testRun: #AccountReporterTest #test23NetTransferForPortfoliosWithPortfoliosShouldReflectOutgoingAndIncomingTransfers stamp: 'fr 11/16/2020 02:46:41'!
PASSED!

!testRun: #AccountReporterTest #test24NetTransferForPortfoliosWithPortfoliosShouldNotRelfectDepositsOrWithdraws stamp: 'fr 11/16/2020 02:46:41'!
PASSED!
!AccountReporterTest methodsFor: 'tests - net transfer' stamp: 'fr 11/16/2020 02:47:03' prior: 50881818!
test16NetTransferForAccountShouldNotReflectDeposits

	
	
	self createNewAccount.
	reporter1 _ 	TransferNetReporter for: account1.
	
	Deposit register: 100 on: account1. 
		
	self assert: [reporter1 transferNet = 0]! !
!AccountReporterTest methodsFor: 'tests - net transfer' stamp: 'fr 11/16/2020 02:47:06' prior: 50903659!
test16NetTransferForAccountShouldNotReflectDeposits

	self createNewAccount.
	reporter1 _ 	TransferNetReporter for: account1.
	
	Deposit register: 100 on: account1. 
		
	self assert: [reporter1 transferNet = 0]! !

!testRun: #AccountReporterTest #test16NetTransferForAccountShouldNotReflectDeposits stamp: 'fr 11/16/2020 02:47:07'!
PASSED!

!testRun: #AccountReporterTest #test01AccountSummaryForAccountWithNoTransactionsShouldJustShowBalanceZero stamp: 'fr 11/16/2020 02:47:07'!
PASSED!

!testRun: #AccountReporterTest #test02AccountSummaryShouldReflectDepositsOnAccounts stamp: 'fr 11/16/2020 02:47:07'!
PASSED!

!testRun: #AccountReporterTest #test03AccountSummaryShouldReflectWithdrawsOnAccounts stamp: 'fr 11/16/2020 02:47:07'!
PASSED!

!testRun: #AccountReporterTest #test04AccountSummaryShouldReflectOutgoingTransfersOnAccounts stamp: 'fr 11/16/2020 02:47:07'!
PASSED!

!testRun: #AccountReporterTest #test05AccountSummaryShouldReflectIncomingTransfersOnAccounts stamp: 'fr 11/16/2020 02:47:07'!
PASSED!

!testRun: #AccountReporterTest #test06AccountSummaryForPortfolioWithNoTransactionsShouldJustShowBalanceZero stamp: 'fr 11/16/2020 02:47:07'!
PASSED!

!testRun: #AccountReporterTest #test07AccountSummaryShouldReflectDepositsOnPortfoliosWithAccounts stamp: 'fr 11/16/2020 02:47:07'!
PASSED!

!testRun: #AccountReporterTest #test08AccountSummaryShouldReflectWithdrawsOnPortfoliosWithAccounts stamp: 'fr 11/16/2020 02:47:07'!
PASSED!

!testRun: #AccountReporterTest #test09AccountSummaryShouldReflectOutgoingAndIncomingTransfersOnPortfoliosWithAccounts stamp: 'fr 11/16/2020 02:47:07'!
PASSED!

!testRun: #AccountReporterTest #test10AccountSummaryShouldReflectDepositsOnPortfoliosWithPortfolios stamp: 'fr 11/16/2020 02:47:07'!
PASSED!

!testRun: #AccountReporterTest #test11AccountSummaryShouldReflectWithdrawsOnPortfoliosWithPortfolios stamp: 'fr 11/16/2020 02:47:07'!
PASSED!

!testRun: #AccountReporterTest #test12AccountSummaryShouldReflectOutgoingAndIncomingTransfersOnPortfoliosWithPortfoliosAndAccounts stamp: 'fr 11/16/2020 02:47:07'!
PASSED!

!testRun: #AccountReporterTest #test13NetTransferForAccountWithNoTransactionsShouldBeZero stamp: 'fr 11/16/2020 02:47:07'!
PASSED!

!testRun: #AccountReporterTest #test14NetTransferForAccountWithAnOutgoingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 02:47:07'!
PASSED!

!testRun: #AccountReporterTest #test15NetTransferForAccountWithAnIncomingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 02:47:07'!
PASSED!

!testRun: #AccountReporterTest #test16NetTransferForAccountShouldNotReflectDeposits stamp: 'fr 11/16/2020 02:47:07'!
PASSED!

!testRun: #AccountReporterTest #test17NetTransferForAccountShouldNotReflectWithdraws stamp: 'fr 11/16/2020 02:47:07'!
PASSED!

!testRun: #AccountReporterTest #test18NetTransferForPortfolioWithNoTransactionsShouldBeZero stamp: 'fr 11/16/2020 02:47:07'!
PASSED!

!testRun: #AccountReporterTest #test19NetTransferForPortfolioWithAnOutgoingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 02:47:07'!
PASSED!

!testRun: #AccountReporterTest #test20NetTransferForPortfolioWithAnIncomingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 02:47:07'!
PASSED!

!testRun: #AccountReporterTest #test21NetTransferForPortfolioShouldNotReflectDeposits stamp: 'fr 11/16/2020 02:47:07'!
PASSED!

!testRun: #AccountReporterTest #test22NetTransferForPortfolioShouldNotReflectWithdraws stamp: 'fr 11/16/2020 02:47:07'!
PASSED!

!testRun: #AccountReporterTest #test23NetTransferForPortfoliosWithPortfoliosShouldReflectOutgoingAndIncomingTransfers stamp: 'fr 11/16/2020 02:47:07'!
PASSED!

!testRun: #AccountReporterTest #test24NetTransferForPortfoliosWithPortfoliosShouldNotRelfectDepositsOrWithdraws stamp: 'fr 11/16/2020 02:47:07'!
PASSED!
!AccountReporterTest methodsFor: 'tests - net transfer' stamp: 'fr 11/16/2020 02:47:29' prior: 50881829!
test17NetTransferForAccountShouldNotReflectWithdraws

	
	
	self createNewAccount.
	reporter1 _ 	TransferNetReporter for: account1.

	Withdraw register: 100 on: account1. 
		
	self assert: [reporter1 transferNet = 0]! !
!AccountReporterTest methodsFor: 'tests - net transfer' stamp: 'fr 11/16/2020 02:47:32' prior: 50903790!
test17NetTransferForAccountShouldNotReflectWithdraws

	self createNewAccount.
	reporter1 _ 	TransferNetReporter for: account1.

	Withdraw register: 100 on: account1. 
		
	self assert: [reporter1 transferNet = 0]! !
!AccountReporterTest methodsFor: 'tests - net transfer' stamp: 'fr 11/16/2020 02:47:47' prior: 50881840!
test18NetTransferForPortfolioWithNoTransactionsShouldBeZero

	
	
	portfolio1 _ Portfolio new.
	reporter1 _ 	TransferNetReporter for: portfolio1.

	self assert: [reporter1 transferNet = 0]! !
!AccountReporterTest methodsFor: 'tests - net transfer' stamp: 'fr 11/16/2020 02:47:51' prior: 50903811!
test18NetTransferForPortfolioWithNoTransactionsShouldBeZero

	portfolio1 _ Portfolio new.
	reporter1 _ 	TransferNetReporter for: portfolio1.

	self assert: [reporter1 transferNet = 0]! !
!AccountReporterTest methodsFor: 'tests - net transfer' stamp: 'fr 11/16/2020 02:48:18' prior: 50881850!
test19NetTransferForPortfolioWithAnOutgoingTransferShouldReflectItsValue

	
	
	account1 _ ReceptiveAccount new.
	anotherAccount1 _ ReceptiveAccount new.
	portfolio1 _ Portfolio with: account1.
	reporter1 _ TransferNetReporter for: portfolio1.

	Transfer move: 10 from: account1 to: anotherAccount1.
			
	self assert: [reporter1 transferNet = -10]! !
!AccountReporterTest methodsFor: 'tests - net transfer' stamp: 'fr 11/16/2020 02:48:23' prior: 50903831!
test19NetTransferForPortfolioWithAnOutgoingTransferShouldReflectItsValue

	account1 _ ReceptiveAccount new.
	anotherAccount1 _ ReceptiveAccount new.
	portfolio1 _ Portfolio with: account1.
	reporter1 _ TransferNetReporter for: portfolio1.

	Transfer move: 10 from: account1 to: anotherAccount1.
			
	self assert: [reporter1 transferNet = -10]! !
!AccountReporterTest methodsFor: 'tests - net transfer' stamp: 'fr 11/16/2020 02:48:39' prior: 50903846!
test19NetTransferForPortfolioWithAnOutgoingTransferShouldReflectItsValue

	self createNewAccount.
	self createAnotherNewAccount.
	portfolio1 _ Portfolio with: account1.
	reporter1 _ TransferNetReporter for: portfolio1.

	Transfer move: 10 from: account1 to: anotherAccount1.
			
	self assert: [reporter1 transferNet = -10]! !
!AccountReporterTest methodsFor: 'tests - net transfer' stamp: 'fr 11/16/2020 02:49:33' prior: 50881866!
test20NetTransferForPortfolioWithAnIncomingTransferShouldReflectItsValue

	
	
	self createNewAccount. 
	self createAnotherNewAccount. 
	portfolio1 _ Portfolio with: account1.
	reporter1 _ TransferNetReporter for: portfolio1.
	
	Transfer move: 10 from: anotherAccount1 to: account1.
			
	self assert: [reporter1 transferNet = 10]! !
!AccountReporterTest methodsFor: 'tests - net transfer' stamp: 'fr 11/16/2020 02:49:37' prior: 50903875!
test20NetTransferForPortfolioWithAnIncomingTransferShouldReflectItsValue
	
	self createNewAccount. 
	self createAnotherNewAccount. 
	portfolio1 _ Portfolio with: account1.
	reporter1 _ TransferNetReporter for: portfolio1.
	
	Transfer move: 10 from: anotherAccount1 to: account1.
			
	self assert: [reporter1 transferNet = 10]! !

!testRun: #AccountReporterTest #test20NetTransferForPortfolioWithAnIncomingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 02:49:38'!
PASSED!

!testRun: #AccountReporterTest #test01AccountSummaryForAccountWithNoTransactionsShouldJustShowBalanceZero stamp: 'fr 11/16/2020 02:49:38'!
PASSED!

!testRun: #AccountReporterTest #test02AccountSummaryShouldReflectDepositsOnAccounts stamp: 'fr 11/16/2020 02:49:38'!
PASSED!

!testRun: #AccountReporterTest #test03AccountSummaryShouldReflectWithdrawsOnAccounts stamp: 'fr 11/16/2020 02:49:38'!
PASSED!

!testRun: #AccountReporterTest #test04AccountSummaryShouldReflectOutgoingTransfersOnAccounts stamp: 'fr 11/16/2020 02:49:38'!
PASSED!

!testRun: #AccountReporterTest #test05AccountSummaryShouldReflectIncomingTransfersOnAccounts stamp: 'fr 11/16/2020 02:49:38'!
PASSED!

!testRun: #AccountReporterTest #test06AccountSummaryForPortfolioWithNoTransactionsShouldJustShowBalanceZero stamp: 'fr 11/16/2020 02:49:38'!
PASSED!

!testRun: #AccountReporterTest #test07AccountSummaryShouldReflectDepositsOnPortfoliosWithAccounts stamp: 'fr 11/16/2020 02:49:38'!
PASSED!

!testRun: #AccountReporterTest #test08AccountSummaryShouldReflectWithdrawsOnPortfoliosWithAccounts stamp: 'fr 11/16/2020 02:49:38'!
PASSED!

!testRun: #AccountReporterTest #test09AccountSummaryShouldReflectOutgoingAndIncomingTransfersOnPortfoliosWithAccounts stamp: 'fr 11/16/2020 02:49:38'!
PASSED!

!testRun: #AccountReporterTest #test10AccountSummaryShouldReflectDepositsOnPortfoliosWithPortfolios stamp: 'fr 11/16/2020 02:49:38'!
PASSED!

!testRun: #AccountReporterTest #test11AccountSummaryShouldReflectWithdrawsOnPortfoliosWithPortfolios stamp: 'fr 11/16/2020 02:49:38'!
PASSED!

!testRun: #AccountReporterTest #test12AccountSummaryShouldReflectOutgoingAndIncomingTransfersOnPortfoliosWithPortfoliosAndAccounts stamp: 'fr 11/16/2020 02:49:38'!
PASSED!

!testRun: #AccountReporterTest #test13NetTransferForAccountWithNoTransactionsShouldBeZero stamp: 'fr 11/16/2020 02:49:38'!
PASSED!

!testRun: #AccountReporterTest #test14NetTransferForAccountWithAnOutgoingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 02:49:38'!
PASSED!

!testRun: #AccountReporterTest #test15NetTransferForAccountWithAnIncomingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 02:49:38'!
PASSED!

!testRun: #AccountReporterTest #test16NetTransferForAccountShouldNotReflectDeposits stamp: 'fr 11/16/2020 02:49:38'!
PASSED!

!testRun: #AccountReporterTest #test17NetTransferForAccountShouldNotReflectWithdraws stamp: 'fr 11/16/2020 02:49:38'!
PASSED!

!testRun: #AccountReporterTest #test18NetTransferForPortfolioWithNoTransactionsShouldBeZero stamp: 'fr 11/16/2020 02:49:38'!
PASSED!

!testRun: #AccountReporterTest #test19NetTransferForPortfolioWithAnOutgoingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 02:49:38'!
PASSED!

!testRun: #AccountReporterTest #test20NetTransferForPortfolioWithAnIncomingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 02:49:38'!
PASSED!

!testRun: #AccountReporterTest #test21NetTransferForPortfolioShouldNotReflectDeposits stamp: 'fr 11/16/2020 02:49:38'!
PASSED!

!testRun: #AccountReporterTest #test22NetTransferForPortfolioShouldNotReflectWithdraws stamp: 'fr 11/16/2020 02:49:38'!
PASSED!

!testRun: #AccountReporterTest #test23NetTransferForPortfoliosWithPortfoliosShouldReflectOutgoingAndIncomingTransfers stamp: 'fr 11/16/2020 02:49:38'!
PASSED!

!testRun: #AccountReporterTest #test24NetTransferForPortfoliosWithPortfoliosShouldNotRelfectDepositsOrWithdraws stamp: 'fr 11/16/2020 02:49:38'!
PASSED!
!AccountReporterTest methodsFor: 'tests - net transfer' stamp: 'fr 11/16/2020 02:50:10' prior: 50881882!
test21NetTransferForPortfolioShouldNotReflectDeposits

	
	
	self createNewAccount. 
	portfolio1 _ Portfolio with: account1.
	reporter1 _ TransferNetReporter for: portfolio1.
	
	Deposit register: 100 on: account1. 
			
	self assert: [reporter1 transferNet = 0]! !

!testRun: #AccountReporterTest #test21NetTransferForPortfolioShouldNotReflectDeposits stamp: 'fr 11/16/2020 02:50:12'!
PASSED!

!testRun: #AccountReporterTest #test01AccountSummaryForAccountWithNoTransactionsShouldJustShowBalanceZero stamp: 'fr 11/16/2020 02:50:12'!
PASSED!

!testRun: #AccountReporterTest #test02AccountSummaryShouldReflectDepositsOnAccounts stamp: 'fr 11/16/2020 02:50:12'!
PASSED!

!testRun: #AccountReporterTest #test03AccountSummaryShouldReflectWithdrawsOnAccounts stamp: 'fr 11/16/2020 02:50:12'!
PASSED!

!testRun: #AccountReporterTest #test04AccountSummaryShouldReflectOutgoingTransfersOnAccounts stamp: 'fr 11/16/2020 02:50:12'!
PASSED!

!testRun: #AccountReporterTest #test05AccountSummaryShouldReflectIncomingTransfersOnAccounts stamp: 'fr 11/16/2020 02:50:12'!
PASSED!

!testRun: #AccountReporterTest #test06AccountSummaryForPortfolioWithNoTransactionsShouldJustShowBalanceZero stamp: 'fr 11/16/2020 02:50:12'!
PASSED!

!testRun: #AccountReporterTest #test07AccountSummaryShouldReflectDepositsOnPortfoliosWithAccounts stamp: 'fr 11/16/2020 02:50:12'!
PASSED!

!testRun: #AccountReporterTest #test08AccountSummaryShouldReflectWithdrawsOnPortfoliosWithAccounts stamp: 'fr 11/16/2020 02:50:12'!
PASSED!

!testRun: #AccountReporterTest #test09AccountSummaryShouldReflectOutgoingAndIncomingTransfersOnPortfoliosWithAccounts stamp: 'fr 11/16/2020 02:50:12'!
PASSED!

!testRun: #AccountReporterTest #test10AccountSummaryShouldReflectDepositsOnPortfoliosWithPortfolios stamp: 'fr 11/16/2020 02:50:12'!
PASSED!

!testRun: #AccountReporterTest #test11AccountSummaryShouldReflectWithdrawsOnPortfoliosWithPortfolios stamp: 'fr 11/16/2020 02:50:12'!
PASSED!

!testRun: #AccountReporterTest #test12AccountSummaryShouldReflectOutgoingAndIncomingTransfersOnPortfoliosWithPortfoliosAndAccounts stamp: 'fr 11/16/2020 02:50:12'!
PASSED!

!testRun: #AccountReporterTest #test13NetTransferForAccountWithNoTransactionsShouldBeZero stamp: 'fr 11/16/2020 02:50:12'!
PASSED!

!testRun: #AccountReporterTest #test14NetTransferForAccountWithAnOutgoingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 02:50:12'!
PASSED!

!testRun: #AccountReporterTest #test15NetTransferForAccountWithAnIncomingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 02:50:12'!
PASSED!

!testRun: #AccountReporterTest #test16NetTransferForAccountShouldNotReflectDeposits stamp: 'fr 11/16/2020 02:50:12'!
PASSED!

!testRun: #AccountReporterTest #test17NetTransferForAccountShouldNotReflectWithdraws stamp: 'fr 11/16/2020 02:50:12'!
PASSED!

!testRun: #AccountReporterTest #test18NetTransferForPortfolioWithNoTransactionsShouldBeZero stamp: 'fr 11/16/2020 02:50:12'!
PASSED!

!testRun: #AccountReporterTest #test19NetTransferForPortfolioWithAnOutgoingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 02:50:12'!
PASSED!

!testRun: #AccountReporterTest #test20NetTransferForPortfolioWithAnIncomingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 02:50:12'!
PASSED!

!testRun: #AccountReporterTest #test21NetTransferForPortfolioShouldNotReflectDeposits stamp: 'fr 11/16/2020 02:50:12'!
PASSED!

!testRun: #AccountReporterTest #test22NetTransferForPortfolioShouldNotReflectWithdraws stamp: 'fr 11/16/2020 02:50:12'!
PASSED!

!testRun: #AccountReporterTest #test23NetTransferForPortfoliosWithPortfoliosShouldReflectOutgoingAndIncomingTransfers stamp: 'fr 11/16/2020 02:50:12'!
PASSED!

!testRun: #AccountReporterTest #test24NetTransferForPortfoliosWithPortfoliosShouldNotRelfectDepositsOrWithdraws stamp: 'fr 11/16/2020 02:50:12'!
PASSED!
!AccountReporterTest methodsFor: 'tests - net transfer' stamp: 'fr 11/16/2020 02:50:17' prior: 50904014!
test21NetTransferForPortfolioShouldNotReflectDeposits

	self createNewAccount. 
	portfolio1 _ Portfolio with: account1.
	reporter1 _ TransferNetReporter for: portfolio1.
	
	Deposit register: 100 on: account1. 
			
	self assert: [reporter1 transferNet = 0]! !
!AccountReporterTest methodsFor: 'tests - net transfer' stamp: 'fr 11/16/2020 02:50:53' prior: 50882004!
test22NetTransferForPortfolioShouldNotReflectWithdraws

	
	
	self createNewAccount. 
	portfolio1 _ Portfolio with: account1.
	reporter1 _ TransferNetReporter for: portfolio1.
	
	Withdraw register: 100 on: account1. 
			
	self assert: [reporter1 transferNet = 0]! !
!AccountReporterTest methodsFor: 'tests - net transfer' stamp: 'fr 11/16/2020 02:50:57' prior: 50904148!
test22NetTransferForPortfolioShouldNotReflectWithdraws

	self createNewAccount. 
	portfolio1 _ Portfolio with: account1.
	reporter1 _ TransferNetReporter for: portfolio1.
	
	Withdraw register: 100 on: account1. 
			
	self assert: [reporter1 transferNet = 0]! !

!testRun: #AccountReporterTest #test22NetTransferForPortfolioShouldNotReflectWithdraws stamp: 'fr 11/16/2020 02:50:59'!
PASSED!

!testRun: #AccountReporterTest #test01AccountSummaryForAccountWithNoTransactionsShouldJustShowBalanceZero stamp: 'fr 11/16/2020 02:50:59'!
PASSED!

!testRun: #AccountReporterTest #test02AccountSummaryShouldReflectDepositsOnAccounts stamp: 'fr 11/16/2020 02:50:59'!
PASSED!

!testRun: #AccountReporterTest #test03AccountSummaryShouldReflectWithdrawsOnAccounts stamp: 'fr 11/16/2020 02:50:59'!
PASSED!

!testRun: #AccountReporterTest #test04AccountSummaryShouldReflectOutgoingTransfersOnAccounts stamp: 'fr 11/16/2020 02:50:59'!
PASSED!

!testRun: #AccountReporterTest #test05AccountSummaryShouldReflectIncomingTransfersOnAccounts stamp: 'fr 11/16/2020 02:50:59'!
PASSED!

!testRun: #AccountReporterTest #test06AccountSummaryForPortfolioWithNoTransactionsShouldJustShowBalanceZero stamp: 'fr 11/16/2020 02:50:59'!
PASSED!

!testRun: #AccountReporterTest #test07AccountSummaryShouldReflectDepositsOnPortfoliosWithAccounts stamp: 'fr 11/16/2020 02:50:59'!
PASSED!

!testRun: #AccountReporterTest #test08AccountSummaryShouldReflectWithdrawsOnPortfoliosWithAccounts stamp: 'fr 11/16/2020 02:50:59'!
PASSED!

!testRun: #AccountReporterTest #test09AccountSummaryShouldReflectOutgoingAndIncomingTransfersOnPortfoliosWithAccounts stamp: 'fr 11/16/2020 02:50:59'!
PASSED!

!testRun: #AccountReporterTest #test10AccountSummaryShouldReflectDepositsOnPortfoliosWithPortfolios stamp: 'fr 11/16/2020 02:50:59'!
PASSED!

!testRun: #AccountReporterTest #test11AccountSummaryShouldReflectWithdrawsOnPortfoliosWithPortfolios stamp: 'fr 11/16/2020 02:50:59'!
PASSED!

!testRun: #AccountReporterTest #test12AccountSummaryShouldReflectOutgoingAndIncomingTransfersOnPortfoliosWithPortfoliosAndAccounts stamp: 'fr 11/16/2020 02:50:59'!
PASSED!

!testRun: #AccountReporterTest #test13NetTransferForAccountWithNoTransactionsShouldBeZero stamp: 'fr 11/16/2020 02:50:59'!
PASSED!

!testRun: #AccountReporterTest #test14NetTransferForAccountWithAnOutgoingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 02:50:59'!
PASSED!

!testRun: #AccountReporterTest #test15NetTransferForAccountWithAnIncomingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 02:50:59'!
PASSED!

!testRun: #AccountReporterTest #test16NetTransferForAccountShouldNotReflectDeposits stamp: 'fr 11/16/2020 02:50:59'!
PASSED!

!testRun: #AccountReporterTest #test17NetTransferForAccountShouldNotReflectWithdraws stamp: 'fr 11/16/2020 02:50:59'!
PASSED!

!testRun: #AccountReporterTest #test18NetTransferForPortfolioWithNoTransactionsShouldBeZero stamp: 'fr 11/16/2020 02:50:59'!
PASSED!

!testRun: #AccountReporterTest #test19NetTransferForPortfolioWithAnOutgoingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 02:50:59'!
PASSED!

!testRun: #AccountReporterTest #test20NetTransferForPortfolioWithAnIncomingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 02:50:59'!
PASSED!

!testRun: #AccountReporterTest #test21NetTransferForPortfolioShouldNotReflectDeposits stamp: 'fr 11/16/2020 02:50:59'!
PASSED!

!testRun: #AccountReporterTest #test22NetTransferForPortfolioShouldNotReflectWithdraws stamp: 'fr 11/16/2020 02:50:59'!
PASSED!

!testRun: #AccountReporterTest #test23NetTransferForPortfoliosWithPortfoliosShouldReflectOutgoingAndIncomingTransfers stamp: 'fr 11/16/2020 02:50:59'!
PASSED!

!testRun: #AccountReporterTest #test24NetTransferForPortfoliosWithPortfoliosShouldNotRelfectDepositsOrWithdraws stamp: 'fr 11/16/2020 02:50:59'!
PASSED!
!AccountReporterTest methodsFor: 'tests - net transfer' stamp: 'fr 11/16/2020 02:51:54' prior: 50882017!
test23NetTransferForPortfoliosWithPortfoliosShouldReflectOutgoingAndIncomingTransfers

	
	
	self createNewAccount.
	self createAnotherNewAccount. 
	portfolio1 _ Portfolio with: account1.
	anotherPortfolio1 _ Portfolio with: portfolio1.
	reporter1 _ TransferNetReporter for: anotherPortfolio1.

	Transfer 	move: 30 from: anotherAccount1 to: account1. 
	Transfer 	move: 10 from: account1 to: anotherAccount1. 	
				
	self assert: [reporter1 transferNet = 20]! !
!AccountReporterTest methodsFor: 'tests - net transfer' stamp: 'fr 11/16/2020 02:52:01' prior: 50904282!
test23NetTransferForPortfoliosWithPortfoliosShouldReflectOutgoingAndIncomingTransfers
	
	self createNewAccount.
	self createAnotherNewAccount. 
	portfolio1 _ Portfolio with: account1.
	anotherPortfolio1 _ Portfolio with: portfolio1.
	reporter1 _ TransferNetReporter for: anotherPortfolio1.

	Transfer 	move: 30 from: anotherAccount1 to: account1. 
	Transfer 	move: 10 from: account1 to: anotherAccount1. 	
				
	self assert: [reporter1 transferNet = 20]! !

!testRun: #AccountReporterTest #test23NetTransferForPortfoliosWithPortfoliosShouldReflectOutgoingAndIncomingTransfers stamp: 'fr 11/16/2020 02:52:01'!
PASSED!

!testRun: #AccountReporterTest #test01AccountSummaryForAccountWithNoTransactionsShouldJustShowBalanceZero stamp: 'fr 11/16/2020 02:52:01'!
PASSED!

!testRun: #AccountReporterTest #test02AccountSummaryShouldReflectDepositsOnAccounts stamp: 'fr 11/16/2020 02:52:01'!
PASSED!

!testRun: #AccountReporterTest #test03AccountSummaryShouldReflectWithdrawsOnAccounts stamp: 'fr 11/16/2020 02:52:01'!
PASSED!

!testRun: #AccountReporterTest #test04AccountSummaryShouldReflectOutgoingTransfersOnAccounts stamp: 'fr 11/16/2020 02:52:01'!
PASSED!

!testRun: #AccountReporterTest #test05AccountSummaryShouldReflectIncomingTransfersOnAccounts stamp: 'fr 11/16/2020 02:52:01'!
PASSED!

!testRun: #AccountReporterTest #test06AccountSummaryForPortfolioWithNoTransactionsShouldJustShowBalanceZero stamp: 'fr 11/16/2020 02:52:01'!
PASSED!

!testRun: #AccountReporterTest #test07AccountSummaryShouldReflectDepositsOnPortfoliosWithAccounts stamp: 'fr 11/16/2020 02:52:01'!
PASSED!

!testRun: #AccountReporterTest #test08AccountSummaryShouldReflectWithdrawsOnPortfoliosWithAccounts stamp: 'fr 11/16/2020 02:52:01'!
PASSED!

!testRun: #AccountReporterTest #test09AccountSummaryShouldReflectOutgoingAndIncomingTransfersOnPortfoliosWithAccounts stamp: 'fr 11/16/2020 02:52:01'!
PASSED!

!testRun: #AccountReporterTest #test10AccountSummaryShouldReflectDepositsOnPortfoliosWithPortfolios stamp: 'fr 11/16/2020 02:52:01'!
PASSED!

!testRun: #AccountReporterTest #test11AccountSummaryShouldReflectWithdrawsOnPortfoliosWithPortfolios stamp: 'fr 11/16/2020 02:52:01'!
PASSED!

!testRun: #AccountReporterTest #test12AccountSummaryShouldReflectOutgoingAndIncomingTransfersOnPortfoliosWithPortfoliosAndAccounts stamp: 'fr 11/16/2020 02:52:01'!
PASSED!

!testRun: #AccountReporterTest #test13NetTransferForAccountWithNoTransactionsShouldBeZero stamp: 'fr 11/16/2020 02:52:01'!
PASSED!

!testRun: #AccountReporterTest #test14NetTransferForAccountWithAnOutgoingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 02:52:01'!
PASSED!

!testRun: #AccountReporterTest #test15NetTransferForAccountWithAnIncomingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 02:52:01'!
PASSED!

!testRun: #AccountReporterTest #test16NetTransferForAccountShouldNotReflectDeposits stamp: 'fr 11/16/2020 02:52:01'!
PASSED!

!testRun: #AccountReporterTest #test17NetTransferForAccountShouldNotReflectWithdraws stamp: 'fr 11/16/2020 02:52:01'!
PASSED!

!testRun: #AccountReporterTest #test18NetTransferForPortfolioWithNoTransactionsShouldBeZero stamp: 'fr 11/16/2020 02:52:01'!
PASSED!

!testRun: #AccountReporterTest #test19NetTransferForPortfolioWithAnOutgoingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 02:52:01'!
PASSED!

!testRun: #AccountReporterTest #test20NetTransferForPortfolioWithAnIncomingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 02:52:01'!
PASSED!

!testRun: #AccountReporterTest #test21NetTransferForPortfolioShouldNotReflectDeposits stamp: 'fr 11/16/2020 02:52:01'!
PASSED!

!testRun: #AccountReporterTest #test22NetTransferForPortfolioShouldNotReflectWithdraws stamp: 'fr 11/16/2020 02:52:01'!
PASSED!

!testRun: #AccountReporterTest #test23NetTransferForPortfoliosWithPortfoliosShouldReflectOutgoingAndIncomingTransfers stamp: 'fr 11/16/2020 02:52:01'!
PASSED!

!testRun: #AccountReporterTest #test24NetTransferForPortfoliosWithPortfoliosShouldNotRelfectDepositsOrWithdraws stamp: 'fr 11/16/2020 02:52:01'!
PASSED!

!testRun: #AccountReporterTest #test23NetTransferForPortfoliosWithPortfoliosShouldReflectOutgoingAndIncomingTransfers stamp: 'fr 11/16/2020 02:52:03'!
PASSED!

!testRun: #AccountReporterTest #test01AccountSummaryForAccountWithNoTransactionsShouldJustShowBalanceZero stamp: 'fr 11/16/2020 02:52:03'!
PASSED!

!testRun: #AccountReporterTest #test02AccountSummaryShouldReflectDepositsOnAccounts stamp: 'fr 11/16/2020 02:52:03'!
PASSED!

!testRun: #AccountReporterTest #test03AccountSummaryShouldReflectWithdrawsOnAccounts stamp: 'fr 11/16/2020 02:52:03'!
PASSED!

!testRun: #AccountReporterTest #test04AccountSummaryShouldReflectOutgoingTransfersOnAccounts stamp: 'fr 11/16/2020 02:52:03'!
PASSED!

!testRun: #AccountReporterTest #test05AccountSummaryShouldReflectIncomingTransfersOnAccounts stamp: 'fr 11/16/2020 02:52:03'!
PASSED!

!testRun: #AccountReporterTest #test06AccountSummaryForPortfolioWithNoTransactionsShouldJustShowBalanceZero stamp: 'fr 11/16/2020 02:52:03'!
PASSED!

!testRun: #AccountReporterTest #test07AccountSummaryShouldReflectDepositsOnPortfoliosWithAccounts stamp: 'fr 11/16/2020 02:52:03'!
PASSED!

!testRun: #AccountReporterTest #test08AccountSummaryShouldReflectWithdrawsOnPortfoliosWithAccounts stamp: 'fr 11/16/2020 02:52:03'!
PASSED!

!testRun: #AccountReporterTest #test09AccountSummaryShouldReflectOutgoingAndIncomingTransfersOnPortfoliosWithAccounts stamp: 'fr 11/16/2020 02:52:03'!
PASSED!

!testRun: #AccountReporterTest #test10AccountSummaryShouldReflectDepositsOnPortfoliosWithPortfolios stamp: 'fr 11/16/2020 02:52:03'!
PASSED!

!testRun: #AccountReporterTest #test11AccountSummaryShouldReflectWithdrawsOnPortfoliosWithPortfolios stamp: 'fr 11/16/2020 02:52:03'!
PASSED!

!testRun: #AccountReporterTest #test12AccountSummaryShouldReflectOutgoingAndIncomingTransfersOnPortfoliosWithPortfoliosAndAccounts stamp: 'fr 11/16/2020 02:52:03'!
PASSED!

!testRun: #AccountReporterTest #test13NetTransferForAccountWithNoTransactionsShouldBeZero stamp: 'fr 11/16/2020 02:52:03'!
PASSED!

!testRun: #AccountReporterTest #test14NetTransferForAccountWithAnOutgoingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 02:52:03'!
PASSED!

!testRun: #AccountReporterTest #test15NetTransferForAccountWithAnIncomingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 02:52:03'!
PASSED!

!testRun: #AccountReporterTest #test16NetTransferForAccountShouldNotReflectDeposits stamp: 'fr 11/16/2020 02:52:03'!
PASSED!

!testRun: #AccountReporterTest #test17NetTransferForAccountShouldNotReflectWithdraws stamp: 'fr 11/16/2020 02:52:03'!
PASSED!

!testRun: #AccountReporterTest #test18NetTransferForPortfolioWithNoTransactionsShouldBeZero stamp: 'fr 11/16/2020 02:52:03'!
PASSED!

!testRun: #AccountReporterTest #test19NetTransferForPortfolioWithAnOutgoingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 02:52:03'!
PASSED!

!testRun: #AccountReporterTest #test20NetTransferForPortfolioWithAnIncomingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 02:52:03'!
PASSED!

!testRun: #AccountReporterTest #test21NetTransferForPortfolioShouldNotReflectDeposits stamp: 'fr 11/16/2020 02:52:03'!
PASSED!

!testRun: #AccountReporterTest #test22NetTransferForPortfolioShouldNotReflectWithdraws stamp: 'fr 11/16/2020 02:52:03'!
PASSED!

!testRun: #AccountReporterTest #test23NetTransferForPortfoliosWithPortfoliosShouldReflectOutgoingAndIncomingTransfers stamp: 'fr 11/16/2020 02:52:03'!
PASSED!

!testRun: #AccountReporterTest #test24NetTransferForPortfoliosWithPortfoliosShouldNotRelfectDepositsOrWithdraws stamp: 'fr 11/16/2020 02:52:03'!
PASSED!
!AccountReporterTest methodsFor: 'tests - net transfer' stamp: 'fr 11/16/2020 02:52:27' prior: 50882147!
test24NetTransferForPortfoliosWithPortfoliosShouldNotRelfectDepositsOrWithdraws

	| portfolio account anotherPortfolio reporter |
		
	self createNewAccount. 
	portfolio _ Portfolio with: account.
	anotherPortfolio _ Portfolio with: portfolio.
	reporter _ TransferNetReporter for: anotherPortfolio.
	
	Deposit register: 100 on: account.
	Withdraw register: 50 on: account.
				
	self assert: [reporter transferNet = 0]! !
!AccountReporterTest methodsFor: 'tests - net transfer' stamp: 'fr 11/16/2020 02:52:49' prior: 50904540!
test24NetTransferForPortfoliosWithPortfoliosShouldNotRelfectDepositsOrWithdraws

	
		
	self createNewAccount. 
	portfolio1 _ Portfolio with: account1.
	anotherPortfolio1 _ Portfolio with: portfolio1.
	reporter1 _ TransferNetReporter for: anotherPortfolio1.
	
	Deposit register: 100 on: account1.
	Withdraw register: 50 on: account1.
				
	self assert: [reporter1 transferNet = 0]! !
!AccountReporterTest methodsFor: 'tests - net transfer' stamp: 'fr 11/16/2020 02:52:55' prior: 50904557!
test24NetTransferForPortfoliosWithPortfoliosShouldNotRelfectDepositsOrWithdraws

	self createNewAccount. 
	portfolio1 _ Portfolio with: account1.
	anotherPortfolio1 _ Portfolio with: portfolio1.
	reporter1 _ TransferNetReporter for: anotherPortfolio1.
	
	Deposit register: 100 on: account1.
	Withdraw register: 50 on: account1.
				
	self assert: [reporter1 transferNet = 0]! !

!testRun: #AccountReporterTest #test24NetTransferForPortfoliosWithPortfoliosShouldNotRelfectDepositsOrWithdraws stamp: 'fr 11/16/2020 02:52:56'!
PASSED!

!testRun: #AccountReporterTest #test01AccountSummaryForAccountWithNoTransactionsShouldJustShowBalanceZero stamp: 'fr 11/16/2020 02:52:56'!
PASSED!

!testRun: #AccountReporterTest #test02AccountSummaryShouldReflectDepositsOnAccounts stamp: 'fr 11/16/2020 02:52:56'!
PASSED!

!testRun: #AccountReporterTest #test03AccountSummaryShouldReflectWithdrawsOnAccounts stamp: 'fr 11/16/2020 02:52:56'!
PASSED!

!testRun: #AccountReporterTest #test04AccountSummaryShouldReflectOutgoingTransfersOnAccounts stamp: 'fr 11/16/2020 02:52:56'!
PASSED!

!testRun: #AccountReporterTest #test05AccountSummaryShouldReflectIncomingTransfersOnAccounts stamp: 'fr 11/16/2020 02:52:56'!
PASSED!

!testRun: #AccountReporterTest #test06AccountSummaryForPortfolioWithNoTransactionsShouldJustShowBalanceZero stamp: 'fr 11/16/2020 02:52:56'!
PASSED!

!testRun: #AccountReporterTest #test07AccountSummaryShouldReflectDepositsOnPortfoliosWithAccounts stamp: 'fr 11/16/2020 02:52:56'!
PASSED!

!testRun: #AccountReporterTest #test08AccountSummaryShouldReflectWithdrawsOnPortfoliosWithAccounts stamp: 'fr 11/16/2020 02:52:56'!
PASSED!

!testRun: #AccountReporterTest #test09AccountSummaryShouldReflectOutgoingAndIncomingTransfersOnPortfoliosWithAccounts stamp: 'fr 11/16/2020 02:52:56'!
PASSED!

!testRun: #AccountReporterTest #test10AccountSummaryShouldReflectDepositsOnPortfoliosWithPortfolios stamp: 'fr 11/16/2020 02:52:56'!
PASSED!

!testRun: #AccountReporterTest #test11AccountSummaryShouldReflectWithdrawsOnPortfoliosWithPortfolios stamp: 'fr 11/16/2020 02:52:56'!
PASSED!

!testRun: #AccountReporterTest #test12AccountSummaryShouldReflectOutgoingAndIncomingTransfersOnPortfoliosWithPortfoliosAndAccounts stamp: 'fr 11/16/2020 02:52:56'!
PASSED!

!testRun: #AccountReporterTest #test13NetTransferForAccountWithNoTransactionsShouldBeZero stamp: 'fr 11/16/2020 02:52:56'!
PASSED!

!testRun: #AccountReporterTest #test14NetTransferForAccountWithAnOutgoingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 02:52:56'!
PASSED!

!testRun: #AccountReporterTest #test15NetTransferForAccountWithAnIncomingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 02:52:56'!
PASSED!

!testRun: #AccountReporterTest #test16NetTransferForAccountShouldNotReflectDeposits stamp: 'fr 11/16/2020 02:52:56'!
PASSED!

!testRun: #AccountReporterTest #test17NetTransferForAccountShouldNotReflectWithdraws stamp: 'fr 11/16/2020 02:52:56'!
PASSED!

!testRun: #AccountReporterTest #test18NetTransferForPortfolioWithNoTransactionsShouldBeZero stamp: 'fr 11/16/2020 02:52:56'!
PASSED!

!testRun: #AccountReporterTest #test19NetTransferForPortfolioWithAnOutgoingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 02:52:56'!
PASSED!

!testRun: #AccountReporterTest #test20NetTransferForPortfolioWithAnIncomingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 02:52:56'!
PASSED!

!testRun: #AccountReporterTest #test21NetTransferForPortfolioShouldNotReflectDeposits stamp: 'fr 11/16/2020 02:52:56'!
PASSED!

!testRun: #AccountReporterTest #test22NetTransferForPortfolioShouldNotReflectWithdraws stamp: 'fr 11/16/2020 02:52:56'!
PASSED!

!testRun: #AccountReporterTest #test23NetTransferForPortfoliosWithPortfoliosShouldReflectOutgoingAndIncomingTransfers stamp: 'fr 11/16/2020 02:52:56'!
PASSED!

!testRun: #AccountReporterTest #test24NetTransferForPortfoliosWithPortfoliosShouldNotRelfectDepositsOrWithdraws stamp: 'fr 11/16/2020 02:52:56'!
PASSED!

!classDefinition: #AccountReporterTest category: 'Portfolio-Part-II-Exercise' stamp: 'fr 11/16/2020 02:53:06'!
TestCase subclass: #AccountReporterTest
	instanceVariableNames: 'account reporter1 anotherAccount1 portfolio1 anotherPortfolio1'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Part-II-Exercise'!
!AccountReporterTest methodsFor: 'as yet unclassified' stamp: 'fr 11/16/2020 02:53:06' prior: 50901588!
test10AccountSummaryShouldReflectDepositsOnPortfoliosWithPortfolios
	
	self createSummaryReporterForPortfolioWithPortfolioWithAccount.

	Deposit register: 100 on: account.

		
	self  assert: reporter1 accountSummary 
		equals: (OrderedCollection with: 'Dep�sito por 100.' with: 'Balance = 100')! !
!AccountReporterTest methodsFor: 'as yet unclassified' stamp: 'fr 11/16/2020 02:53:06' prior: 50901859!
createPortfolioWithAccount

	self createNewAccount.
	portfolio1 _ Portfolio with: account! !
!AccountReporterTest methodsFor: 'as yet unclassified' stamp: 'fr 11/16/2020 02:53:06' prior: 50904136!
test21NetTransferForPortfolioShouldNotReflectDeposits

	self createNewAccount. 
	portfolio1 _ Portfolio with: account.
	reporter1 _ TransferNetReporter for: portfolio1.
	
	Deposit register: 100 on: account. 
			
	self assert: [reporter1 transferNet = 0]! !
!AccountReporterTest methodsFor: 'as yet unclassified' stamp: 'fr 11/16/2020 02:53:06' prior: 50903889!
test20NetTransferForPortfolioWithAnIncomingTransferShouldReflectItsValue
	
	self createNewAccount. 
	self createAnotherNewAccount. 
	portfolio1 _ Portfolio with: account.
	reporter1 _ TransferNetReporter for: portfolio1.
	
	Transfer move: 10 from: anotherAccount1 to: account.
			
	self assert: [reporter1 transferNet = 10]! !
!AccountReporterTest methodsFor: 'as yet unclassified' stamp: 'fr 11/16/2020 02:53:06' prior: 50901719!
test07AccountSummaryShouldReflectDepositsOnPortfoliosWithAccounts

	self createSummaryReporterForPortfolioWithAccount.
	
	Deposit register: 100 on: account.
			
	self  assert: reporter1 accountSummary 
		equals: (OrderedCollection with: 'Dep�sito por 100.' with: 'Balance = 100')! !
!AccountReporterTest methodsFor: 'as yet unclassified' stamp: 'fr 11/16/2020 02:53:06' prior: 50899061!
test02AccountSummaryShouldReflectDepositsOnAccounts

	self createNewAccountAndSummaryReporterForIt.
	
	Deposit register: 100 on: account. 
	
	self  assert: reporter1 accountSummary 
		equals: (OrderedCollection with: 'Dep�sito por 100.' with: 'Balance = 100')! !
!AccountReporterTest methodsFor: 'as yet unclassified' stamp: 'fr 11/16/2020 02:53:06' prior: 50903801!
test17NetTransferForAccountShouldNotReflectWithdraws

	self createNewAccount.
	reporter1 _ 	TransferNetReporter for: account.

	Withdraw register: 100 on: account. 
		
	self assert: [reporter1 transferNet = 0]! !
!AccountReporterTest methodsFor: 'as yet unclassified' stamp: 'fr 11/16/2020 02:53:06' prior: 50899002!
test03AccountSummaryShouldReflectWithdrawsOnAccounts
	
	self createNewAccountAndSummaryReporterForIt.
	
	Withdraw register: 100 on: account. 
	
	self  assert: reporter1 accountSummary 
		equals: (OrderedCollection with: 'Extracci�n por 100.' with: 'Balance = -100')! !
!AccountReporterTest methodsFor: 'as yet unclassified' stamp: 'fr 11/16/2020 02:53:06' prior: 50903670!
test16NetTransferForAccountShouldNotReflectDeposits

	self createNewAccount.
	reporter1 _ 	TransferNetReporter for: account.
	
	Deposit register: 100 on: account. 
		
	self assert: [reporter1 transferNet = 0]! !
!AccountReporterTest methodsFor: 'as yet unclassified' stamp: 'fr 11/16/2020 02:53:06' prior: 50903008!
test12AccountSummaryShouldReflectOutgoingAndIncomingTransfersOnPortfoliosWithPortfoliosAndAccounts

	self createPortfolioWithPortfolioWithAccount.
	self createAnotherNewAccount.
	anotherPortfolio1 add: anotherAccount1.
	reporter1 _ SummaryReporter for: anotherPortfolio1.

	Transfer move: 100 from: account to: anotherAccount1.

		
	self  assert: reporter1 accountSummary 
		equals: (OrderedCollection with: 'Salida por transferencia de 100.' with: 'Entrada por transferencia de 100.' with: 'Balance = 0')! !
!AccountReporterTest methodsFor: 'as yet unclassified' stamp: 'fr 11/16/2020 02:53:06' prior: 50901732!
test08AccountSummaryShouldReflectWithdrawsOnPortfoliosWithAccounts

	self createSummaryReporterForPortfolioWithAccount.
	
	Withdraw register: 100 on: account.
			
	self  assert: reporter1 accountSummary 
		equals: (OrderedCollection with: 'Extracci�n por 100.' with: 'Balance = -100')! !
!AccountReporterTest methodsFor: 'as yet unclassified' stamp: 'fr 11/16/2020 02:53:06' prior: 50898988!
test04AccountSummaryShouldReflectOutgoingTransfersOnAccounts

	self createNewAccountsAndSummaryReporterForOne.
	
	Transfer move: 100 from: account to: anotherAccount1.
	
	self  assert: reporter1 accountSummary 
		equals: (OrderedCollection with: 'Salida por transferencia de 100.' with: 'Balance = -100')! !
!AccountReporterTest methodsFor: 'as yet unclassified' stamp: 'fr 11/16/2020 02:53:06' prior: 50903861!
test19NetTransferForPortfolioWithAnOutgoingTransferShouldReflectItsValue

	self createNewAccount.
	self createAnotherNewAccount.
	portfolio1 _ Portfolio with: account.
	reporter1 _ TransferNetReporter for: portfolio1.

	Transfer move: 10 from: account to: anotherAccount1.
			
	self assert: [reporter1 transferNet = -10]! !
!AccountReporterTest methodsFor: 'as yet unclassified' stamp: 'fr 11/16/2020 02:53:06' prior: 50898945!
createNewAccountAndSummaryReporterForIt
	
	self createNewAccount.
	reporter1 _ SummaryReporter for: account.! !
!AccountReporterTest methodsFor: 'as yet unclassified' stamp: 'fr 11/16/2020 02:53:06' prior: 50901464!
test11AccountSummaryShouldReflectWithdrawsOnPortfoliosWithPortfolios
	
	self createSummaryReporterForPortfolioWithPortfolioWithAccount.

	Withdraw register: 100 on: account.

		
	self  assert: reporter1 accountSummary 
		equals: (OrderedCollection with: 'Extracci�n por 100.' with: 'Balance = -100')! !
!AccountReporterTest methodsFor: 'as yet unclassified' stamp: 'fr 11/16/2020 02:53:06' prior: 50903523!
test14NetTransferForAccountWithAnOutgoingTransferShouldReflectItsValue

	self createNewAccount.
	self createAnotherNewAccount.
	reporter1 _ 	TransferNetReporter for: account.
	
	Transfer move: 100 from: account to: anotherAccount1.
	
	self assert: [reporter1 transferNet = -100]! !
!AccountReporterTest methodsFor: 'as yet unclassified' stamp: 'fr 11/16/2020 02:53:06' prior: 50898932!
test05AccountSummaryShouldReflectIncomingTransfersOnAccounts

	self createNewAccountsAndSummaryReporterForOne.

	Transfer move: 100 from: anotherAccount1 to: account.
	
	self  assert: reporter1 accountSummary 
		equals: (OrderedCollection with: 'Entrada por transferencia de 100.' with: 'Balance = 100')! !
!AccountReporterTest methodsFor: 'as yet unclassified' stamp: 'fr 11/16/2020 02:53:06' prior: 50904573!
test24NetTransferForPortfoliosWithPortfoliosShouldNotRelfectDepositsOrWithdraws

	self createNewAccount. 
	portfolio1 _ Portfolio with: account.
	anotherPortfolio1 _ Portfolio with: portfolio1.
	reporter1 _ TransferNetReporter for: anotherPortfolio1.
	
	Deposit register: 100 on: account.
	Withdraw register: 50 on: account.
				
	self assert: [reporter1 transferNet = 0]! !
!AccountReporterTest methodsFor: 'as yet unclassified' stamp: 'fr 11/16/2020 02:53:06' prior: 50903501!
test13NetTransferForAccountWithNoTransactionsShouldBeZero

	self createNewAccount.
	reporter1 _ 	TransferNetReporter for: account.

	self assert: [reporter1 transferNet = 0]! !
!AccountReporterTest methodsFor: 'as yet unclassified' stamp: 'fr 11/16/2020 02:53:06' prior: 50903536!
test15NetTransferForAccountWithAnIncomingTransferShouldReflectItsValue

	self createNewAccount.
	self createAnotherNewAccount.
	reporter1 _ 	TransferNetReporter for: account.
	
	Transfer move: 100 from: anotherAccount1 to: account.
	
	self assert: [reporter1 transferNet = 100]! !
!AccountReporterTest methodsFor: 'as yet unclassified' stamp: 'fr 11/16/2020 02:53:06' prior: 50903329!
test09AccountSummaryShouldReflectOutgoingAndIncomingTransfersOnPortfoliosWithAccounts

	self createNewAccount.	
	self createAnotherNewAccount.
	portfolio1 _ Portfolio with: account with: anotherAccount1.
	reporter1 _ SummaryReporter for: portfolio1.

	Transfer move: 10 from: account to: anotherAccount1.
		
	self  assert: reporter1 accountSummary 
		equals: (OrderedCollection with: 'Salida por transferencia de 10.' with: 'Entrada por transferencia de 10.' with: 'Balance = 0')! !
!AccountReporterTest methodsFor: 'as yet unclassified' stamp: 'fr 11/16/2020 02:53:06' prior: 50904160!
test22NetTransferForPortfolioShouldNotReflectWithdraws

	self createNewAccount. 
	portfolio1 _ Portfolio with: account.
	reporter1 _ TransferNetReporter for: portfolio1.
	
	Withdraw register: 100 on: account. 
			
	self assert: [reporter1 transferNet = 0]! !
!AccountReporterTest methodsFor: 'as yet unclassified' stamp: 'fr 11/16/2020 02:53:06' prior: 50904300!
test23NetTransferForPortfoliosWithPortfoliosShouldReflectOutgoingAndIncomingTransfers
	
	self createNewAccount.
	self createAnotherNewAccount. 
	portfolio1 _ Portfolio with: account.
	anotherPortfolio1 _ Portfolio with: portfolio1.
	reporter1 _ TransferNetReporter for: anotherPortfolio1.

	Transfer 	move: 30 from: anotherAccount1 to: account. 
	Transfer 	move: 10 from: account to: anotherAccount1. 	
				
	self assert: [reporter1 transferNet = 20]! !
!AccountReporterTest methodsFor: 'as yet unclassified' stamp: 'fr 11/16/2020 02:53:06' prior: 50898833!
createNewAccount

	account _ ReceptiveAccount new! !

!classDefinition: #AccountReporterTest category: 'Portfolio-Part-II-Exercise' stamp: 'fr 11/16/2020 02:53:09'!
TestCase subclass: #AccountReporterTest
	instanceVariableNames: 'account reporter anotherAccount1 portfolio1 anotherPortfolio1'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Part-II-Exercise'!
!AccountReporterTest methodsFor: 'as yet unclassified' stamp: 'fr 11/16/2020 02:53:09' prior: 50904880!
test11AccountSummaryShouldReflectWithdrawsOnPortfoliosWithPortfolios
	
	self createSummaryReporterForPortfolioWithPortfolioWithAccount.

	Withdraw register: 100 on: account.

		
	self  assert: reporter accountSummary 
		equals: (OrderedCollection with: 'Extracci�n por 100.' with: 'Balance = -100')! !
!AccountReporterTest methodsFor: 'as yet unclassified' stamp: 'fr 11/16/2020 02:53:09' prior: 50904893!
test14NetTransferForAccountWithAnOutgoingTransferShouldReflectItsValue

	self createNewAccount.
	self createAnotherNewAccount.
	reporter _ 	TransferNetReporter for: account.
	
	Transfer move: 100 from: account to: anotherAccount1.
	
	self assert: [reporter transferNet = -100]! !
!AccountReporterTest methodsFor: 'as yet unclassified' stamp: 'fr 11/16/2020 02:53:09' prior: 50904833!
test08AccountSummaryShouldReflectWithdrawsOnPortfoliosWithAccounts

	self createSummaryReporterForPortfolioWithAccount.
	
	Withdraw register: 100 on: account.
			
	self  assert: reporter accountSummary 
		equals: (OrderedCollection with: 'Extracci�n por 100.' with: 'Balance = -100')! !
!AccountReporterTest methodsFor: 'as yet unclassified' stamp: 'fr 11/16/2020 02:53:09' prior: 50899026!
test01AccountSummaryForAccountWithNoTransactionsShouldJustShowBalanceZero

	self createNewAccountAndSummaryReporterForIt.
	
	self  assert: reporter accountSummary 
		equals: (OrderedCollection with: 'Balance = 0').! !
!AccountReporterTest methodsFor: 'as yet unclassified' stamp: 'fr 11/16/2020 02:53:09' prior: 50904975!
test22NetTransferForPortfolioShouldNotReflectWithdraws

	self createNewAccount. 
	portfolio1 _ Portfolio with: account.
	reporter _ TransferNetReporter for: portfolio1.
	
	Withdraw register: 100 on: account. 
			
	self assert: [reporter transferNet = 0]! !
!AccountReporterTest methodsFor: 'as yet unclassified' stamp: 'fr 11/16/2020 02:53:09' prior: 50904813!
test12AccountSummaryShouldReflectOutgoingAndIncomingTransfersOnPortfoliosWithPortfoliosAndAccounts

	self createPortfolioWithPortfolioWithAccount.
	self createAnotherNewAccount.
	anotherPortfolio1 add: anotherAccount1.
	reporter _ SummaryReporter for: anotherPortfolio1.

	Transfer move: 100 from: account to: anotherAccount1.

		
	self  assert: reporter accountSummary 
		equals: (OrderedCollection with: 'Salida por transferencia de 100.' with: 'Entrada por transferencia de 100.' with: 'Balance = 0')! !
!AccountReporterTest methodsFor: 'as yet unclassified' stamp: 'fr 11/16/2020 02:53:09' prior: 50903360!
test06AccountSummaryForPortfolioWithNoTransactionsShouldJustShowBalanceZero
	
	portfolio1 _ Portfolio new.
	reporter _ SummaryReporter for: portfolio1.
	
	self  assert: reporter accountSummary 
		equals: (OrderedCollection with: 'Balance = 0')! !
!AccountReporterTest methodsFor: 'as yet unclassified' stamp: 'fr 11/16/2020 02:53:09' prior: 50904919!
test24NetTransferForPortfoliosWithPortfoliosShouldNotRelfectDepositsOrWithdraws

	self createNewAccount. 
	portfolio1 _ Portfolio with: account.
	anotherPortfolio1 _ Portfolio with: portfolio1.
	reporter _ TransferNetReporter for: anotherPortfolio1.
	
	Deposit register: 100 on: account.
	Withdraw register: 50 on: account.
				
	self assert: [reporter transferNet = 0]! !
!AccountReporterTest methodsFor: 'as yet unclassified' stamp: 'fr 11/16/2020 02:53:09' prior: 50904756!
test07AccountSummaryShouldReflectDepositsOnPortfoliosWithAccounts

	self createSummaryReporterForPortfolioWithAccount.
	
	Deposit register: 100 on: account.
			
	self  assert: reporter accountSummary 
		equals: (OrderedCollection with: 'Dep�sito por 100.' with: 'Balance = 100')! !
!AccountReporterTest methodsFor: 'as yet unclassified' stamp: 'fr 11/16/2020 02:53:09' prior: 50904769!
test02AccountSummaryShouldReflectDepositsOnAccounts

	self createNewAccountAndSummaryReporterForIt.
	
	Deposit register: 100 on: account. 
	
	self  assert: reporter accountSummary 
		equals: (OrderedCollection with: 'Dep�sito por 100.' with: 'Balance = 100')! !
!AccountReporterTest methodsFor: 'as yet unclassified' stamp: 'fr 11/16/2020 02:53:09' prior: 50904730!
test21NetTransferForPortfolioShouldNotReflectDeposits

	self createNewAccount. 
	portfolio1 _ Portfolio with: account.
	reporter _ TransferNetReporter for: portfolio1.
	
	Deposit register: 100 on: account. 
			
	self assert: [reporter transferNet = 0]! !
!AccountReporterTest methodsFor: 'as yet unclassified' stamp: 'fr 11/16/2020 02:53:09' prior: 50901876!
createSummaryReporterForPortfolioWithAccount

	self createPortfolioWithAccount.
	reporter _ SummaryReporter for: portfolio1! !
!AccountReporterTest methodsFor: 'as yet unclassified' stamp: 'fr 11/16/2020 02:53:09' prior: 50903821!
test18NetTransferForPortfolioWithNoTransactionsShouldBeZero

	portfolio1 _ Portfolio new.
	reporter _ 	TransferNetReporter for: portfolio1.

	self assert: [reporter transferNet = 0]! !
!AccountReporterTest methodsFor: 'as yet unclassified' stamp: 'fr 11/16/2020 02:53:09' prior: 50904742!
test20NetTransferForPortfolioWithAnIncomingTransferShouldReflectItsValue
	
	self createNewAccount. 
	self createAnotherNewAccount. 
	portfolio1 _ Portfolio with: account.
	reporter _ TransferNetReporter for: portfolio1.
	
	Transfer move: 10 from: anotherAccount1 to: account.
			
	self assert: [reporter transferNet = 10]! !
!AccountReporterTest methodsFor: 'as yet unclassified' stamp: 'fr 11/16/2020 02:53:09' prior: 50904956!
test09AccountSummaryShouldReflectOutgoingAndIncomingTransfersOnPortfoliosWithAccounts

	self createNewAccount.	
	self createAnotherNewAccount.
	portfolio1 _ Portfolio with: account with: anotherAccount1.
	reporter _ SummaryReporter for: portfolio1.

	Transfer move: 10 from: account to: anotherAccount1.
		
	self  assert: reporter accountSummary 
		equals: (OrderedCollection with: 'Salida por transferencia de 10.' with: 'Entrada por transferencia de 10.' with: 'Balance = 0')! !
!AccountReporterTest methodsFor: 'as yet unclassified' stamp: 'fr 11/16/2020 02:53:09' prior: 50904934!
test13NetTransferForAccountWithNoTransactionsShouldBeZero

	self createNewAccount.
	reporter _ 	TransferNetReporter for: account.

	self assert: [reporter transferNet = 0]! !
!AccountReporterTest methodsFor: 'as yet unclassified' stamp: 'fr 11/16/2020 02:53:09' prior: 50902699!
createSummaryReporterForPortfolioWithPortfolioWithAccount

	self createPortfolioWithPortfolioWithAccount.
	reporter _ SummaryReporter for: anotherPortfolio1! !
!AccountReporterTest methodsFor: 'as yet unclassified' stamp: 'fr 11/16/2020 02:53:09' prior: 50904987!
test23NetTransferForPortfoliosWithPortfoliosShouldReflectOutgoingAndIncomingTransfers
	
	self createNewAccount.
	self createAnotherNewAccount. 
	portfolio1 _ Portfolio with: account.
	anotherPortfolio1 _ Portfolio with: portfolio1.
	reporter _ TransferNetReporter for: anotherPortfolio1.

	Transfer 	move: 30 from: anotherAccount1 to: account. 
	Transfer 	move: 10 from: account to: anotherAccount1. 	
				
	self assert: [reporter transferNet = 20]! !
!AccountReporterTest methodsFor: 'as yet unclassified' stamp: 'fr 11/16/2020 02:53:09' prior: 50904906!
test05AccountSummaryShouldReflectIncomingTransfersOnAccounts

	self createNewAccountsAndSummaryReporterForOne.

	Transfer move: 100 from: anotherAccount1 to: account.
	
	self  assert: reporter accountSummary 
		equals: (OrderedCollection with: 'Entrada por transferencia de 100.' with: 'Balance = 100')! !
!AccountReporterTest methodsFor: 'as yet unclassified' stamp: 'fr 11/16/2020 02:53:09' prior: 50904943!
test15NetTransferForAccountWithAnIncomingTransferShouldReflectItsValue

	self createNewAccount.
	self createAnotherNewAccount.
	reporter _ 	TransferNetReporter for: account.
	
	Transfer move: 100 from: anotherAccount1 to: account.
	
	self assert: [reporter transferNet = 100]! !
!AccountReporterTest methodsFor: 'as yet unclassified' stamp: 'fr 11/16/2020 02:53:09' prior: 50904873!
createNewAccountAndSummaryReporterForIt
	
	self createNewAccount.
	reporter _ SummaryReporter for: account.! !
!AccountReporterTest methodsFor: 'as yet unclassified' stamp: 'fr 11/16/2020 02:53:09' prior: 50904791!
test03AccountSummaryShouldReflectWithdrawsOnAccounts
	
	self createNewAccountAndSummaryReporterForIt.
	
	Withdraw register: 100 on: account. 
	
	self  assert: reporter accountSummary 
		equals: (OrderedCollection with: 'Extracci�n por 100.' with: 'Balance = -100')! !
!AccountReporterTest methodsFor: 'as yet unclassified' stamp: 'fr 11/16/2020 02:53:09' prior: 50904803!
test16NetTransferForAccountShouldNotReflectDeposits

	self createNewAccount.
	reporter _ 	TransferNetReporter for: account.
	
	Deposit register: 100 on: account. 
		
	self assert: [reporter transferNet = 0]! !
!AccountReporterTest methodsFor: 'as yet unclassified' stamp: 'fr 11/16/2020 02:53:10' prior: 50904781!
test17NetTransferForAccountShouldNotReflectWithdraws

	self createNewAccount.
	reporter _ 	TransferNetReporter for: account.

	Withdraw register: 100 on: account. 
		
	self assert: [reporter transferNet = 0]! !
!AccountReporterTest methodsFor: 'as yet unclassified' stamp: 'fr 11/16/2020 02:53:10' prior: 50904846!
test04AccountSummaryShouldReflectOutgoingTransfersOnAccounts

	self createNewAccountsAndSummaryReporterForOne.
	
	Transfer move: 100 from: account to: anotherAccount1.
	
	self  assert: reporter accountSummary 
		equals: (OrderedCollection with: 'Salida por transferencia de 100.' with: 'Balance = -100')! !
!AccountReporterTest methodsFor: 'as yet unclassified' stamp: 'fr 11/16/2020 02:53:10' prior: 50904710!
test10AccountSummaryShouldReflectDepositsOnPortfoliosWithPortfolios
	
	self createSummaryReporterForPortfolioWithPortfolioWithAccount.

	Deposit register: 100 on: account.

		
	self  assert: reporter accountSummary 
		equals: (OrderedCollection with: 'Dep�sito por 100.' with: 'Balance = 100')! !
!AccountReporterTest methodsFor: 'as yet unclassified' stamp: 'fr 11/16/2020 02:53:10' prior: 50904859!
test19NetTransferForPortfolioWithAnOutgoingTransferShouldReflectItsValue

	self createNewAccount.
	self createAnotherNewAccount.
	portfolio1 _ Portfolio with: account.
	reporter _ TransferNetReporter for: portfolio1.

	Transfer move: 10 from: account to: anotherAccount1.
			
	self assert: [reporter transferNet = -10]! !

!classDefinition: #AccountReporterTest category: 'Portfolio-Part-II-Exercise' stamp: 'fr 11/16/2020 02:53:13'!
TestCase subclass: #AccountReporterTest
	instanceVariableNames: 'account reporter anotherAccount portfolio1 anotherPortfolio1'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Part-II-Exercise'!
!AccountReporterTest methodsFor: 'as yet unclassified' stamp: 'fr 11/16/2020 02:53:13' prior: 50905183!
test20NetTransferForPortfolioWithAnIncomingTransferShouldReflectItsValue
	
	self createNewAccount. 
	self createAnotherNewAccount. 
	portfolio1 _ Portfolio with: account.
	reporter _ TransferNetReporter for: portfolio1.
	
	Transfer move: 10 from: anotherAccount to: account.
			
	self assert: [reporter transferNet = 10]! !
!AccountReporterTest methodsFor: 'as yet unclassified' stamp: 'fr 11/16/2020 02:53:13' prior: 50905252!
test05AccountSummaryShouldReflectIncomingTransfersOnAccounts

	self createNewAccountsAndSummaryReporterForOne.

	Transfer move: 100 from: anotherAccount to: account.
	
	self  assert: reporter accountSummary 
		equals: (OrderedCollection with: 'Entrada por transferencia de 100.' with: 'Balance = 100')! !
!AccountReporterTest methodsFor: 'as yet unclassified' stamp: 'fr 11/16/2020 02:53:13' prior: 50905316!
test04AccountSummaryShouldReflectOutgoingTransfersOnAccounts

	self createNewAccountsAndSummaryReporterForOne.
	
	Transfer move: 100 from: account to: anotherAccount.
	
	self  assert: reporter accountSummary 
		equals: (OrderedCollection with: 'Salida por transferencia de 100.' with: 'Balance = -100')! !
!AccountReporterTest methodsFor: 'as yet unclassified' stamp: 'fr 11/16/2020 02:53:13' prior: 50905234!
test23NetTransferForPortfoliosWithPortfoliosShouldReflectOutgoingAndIncomingTransfers
	
	self createNewAccount.
	self createAnotherNewAccount. 
	portfolio1 _ Portfolio with: account.
	anotherPortfolio1 _ Portfolio with: portfolio1.
	reporter _ TransferNetReporter for: anotherPortfolio1.

	Transfer 	move: 30 from: anotherAccount to: account. 
	Transfer 	move: 10 from: account to: anotherAccount. 	
				
	self assert: [reporter transferNet = 20]! !
!AccountReporterTest methodsFor: 'as yet unclassified' stamp: 'fr 11/16/2020 02:53:13' prior: 50902419!
createAnotherNewAccount

	^ anotherAccount _ ReceptiveAccount new! !
!AccountReporterTest methodsFor: 'as yet unclassified' stamp: 'fr 11/16/2020 02:53:13' prior: 50905265!
test15NetTransferForAccountWithAnIncomingTransferShouldReflectItsValue

	self createNewAccount.
	self createAnotherNewAccount.
	reporter _ 	TransferNetReporter for: account.
	
	Transfer move: 100 from: anotherAccount to: account.
	
	self assert: [reporter transferNet = 100]! !
!AccountReporterTest methodsFor: 'as yet unclassified' stamp: 'fr 11/16/2020 02:53:13' prior: 50905082!
test12AccountSummaryShouldReflectOutgoingAndIncomingTransfersOnPortfoliosWithPortfoliosAndAccounts

	self createPortfolioWithPortfolioWithAccount.
	self createAnotherNewAccount.
	anotherPortfolio1 add: anotherAccount.
	reporter _ SummaryReporter for: anotherPortfolio1.

	Transfer move: 100 from: account to: anotherAccount.

		
	self  assert: reporter accountSummary 
		equals: (OrderedCollection with: 'Salida por transferencia de 100.' with: 'Entrada por transferencia de 100.' with: 'Balance = 0')! !
!AccountReporterTest methodsFor: 'as yet unclassified' stamp: 'fr 11/16/2020 02:53:13' prior: 50905197!
test09AccountSummaryShouldReflectOutgoingAndIncomingTransfersOnPortfoliosWithAccounts

	self createNewAccount.	
	self createAnotherNewAccount.
	portfolio1 _ Portfolio with: account with: anotherAccount.
	reporter _ SummaryReporter for: portfolio1.

	Transfer move: 10 from: account to: anotherAccount.
		
	self  assert: reporter accountSummary 
		equals: (OrderedCollection with: 'Salida por transferencia de 10.' with: 'Entrada por transferencia de 10.' with: 'Balance = 0')! !
!AccountReporterTest methodsFor: 'as yet unclassified' stamp: 'fr 11/16/2020 02:53:13' prior: 50905034!
test14NetTransferForAccountWithAnOutgoingTransferShouldReflectItsValue

	self createNewAccount.
	self createAnotherNewAccount.
	reporter _ 	TransferNetReporter for: account.
	
	Transfer move: 100 from: account to: anotherAccount.
	
	self assert: [reporter transferNet = -100]! !
!AccountReporterTest methodsFor: 'as yet unclassified' stamp: 'fr 11/16/2020 02:53:13' prior: 50905342!
test19NetTransferForPortfolioWithAnOutgoingTransferShouldReflectItsValue

	self createNewAccount.
	self createAnotherNewAccount.
	portfolio1 _ Portfolio with: account.
	reporter _ TransferNetReporter for: portfolio1.

	Transfer move: 10 from: account to: anotherAccount.
			
	self assert: [reporter transferNet = -10]! !

!classDefinition: #AccountReporterTest category: 'Portfolio-Part-II-Exercise' stamp: 'fr 11/16/2020 02:53:16'!
TestCase subclass: #AccountReporterTest
	instanceVariableNames: 'account reporter anotherAccount portfolio anotherPortfolio1'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Part-II-Exercise'!
!AccountReporterTest methodsFor: 'as yet unclassified' stamp: 'fr 11/16/2020 02:53:16' prior: 50902691!
createPortfolioWithPortfolioWithAccount

	self createPortfolioWithAccount.
	anotherPortfolio1 _ Portfolio with: portfolio! !
!AccountReporterTest methodsFor: 'as yet unclassified' stamp: 'fr 11/16/2020 02:53:16' prior: 50905366!
test20NetTransferForPortfolioWithAnIncomingTransferShouldReflectItsValue
	
	self createNewAccount. 
	self createAnotherNewAccount. 
	portfolio _ Portfolio with: account.
	reporter _ TransferNetReporter for: portfolio.
	
	Transfer move: 10 from: anotherAccount to: account.
			
	self assert: [reporter transferNet = 10]! !
!AccountReporterTest methodsFor: 'as yet unclassified' stamp: 'fr 11/16/2020 02:53:16' prior: 50905165!
createSummaryReporterForPortfolioWithAccount

	self createPortfolioWithAccount.
	reporter _ SummaryReporter for: portfolio! !
!AccountReporterTest methodsFor: 'as yet unclassified' stamp: 'fr 11/16/2020 02:53:16' prior: 50905462!
test09AccountSummaryShouldReflectOutgoingAndIncomingTransfersOnPortfoliosWithAccounts

	self createNewAccount.	
	self createAnotherNewAccount.
	portfolio _ Portfolio with: account with: anotherAccount.
	reporter _ SummaryReporter for: portfolio.

	Transfer move: 10 from: account to: anotherAccount.
		
	self  assert: reporter accountSummary 
		equals: (OrderedCollection with: 'Salida por transferencia de 10.' with: 'Entrada por transferencia de 10.' with: 'Balance = 0')! !
!AccountReporterTest methodsFor: 'as yet unclassified' stamp: 'fr 11/16/2020 02:53:16' prior: 50905153!
test21NetTransferForPortfolioShouldNotReflectDeposits

	self createNewAccount. 
	portfolio _ Portfolio with: account.
	reporter _ TransferNetReporter for: portfolio.
	
	Deposit register: 100 on: account. 
			
	self assert: [reporter transferNet = 0]! !
!AccountReporterTest methodsFor: 'as yet unclassified' stamp: 'fr 11/16/2020 02:53:16' prior: 50905493!
test19NetTransferForPortfolioWithAnOutgoingTransferShouldReflectItsValue

	self createNewAccount.
	self createAnotherNewAccount.
	portfolio _ Portfolio with: account.
	reporter _ TransferNetReporter for: portfolio.

	Transfer move: 10 from: account to: anotherAccount.
			
	self assert: [reporter transferNet = -10]! !
!AccountReporterTest methodsFor: 'as yet unclassified' stamp: 'fr 11/16/2020 02:53:16' prior: 50904723!
createPortfolioWithAccount

	self createNewAccount.
	portfolio _ Portfolio with: account! !
!AccountReporterTest methodsFor: 'as yet unclassified' stamp: 'fr 11/16/2020 02:53:16' prior: 50905406!
test23NetTransferForPortfoliosWithPortfoliosShouldReflectOutgoingAndIncomingTransfers
	
	self createNewAccount.
	self createAnotherNewAccount. 
	portfolio _ Portfolio with: account.
	anotherPortfolio1 _ Portfolio with: portfolio.
	reporter _ TransferNetReporter for: anotherPortfolio1.

	Transfer 	move: 30 from: anotherAccount to: account. 
	Transfer 	move: 10 from: account to: anotherAccount. 	
				
	self assert: [reporter transferNet = 20]! !
!AccountReporterTest methodsFor: 'as yet unclassified' stamp: 'fr 11/16/2020 02:53:16' prior: 50905102!
test06AccountSummaryForPortfolioWithNoTransactionsShouldJustShowBalanceZero
	
	portfolio _ Portfolio new.
	reporter _ SummaryReporter for: portfolio.
	
	self  assert: reporter accountSummary 
		equals: (OrderedCollection with: 'Balance = 0')! !
!AccountReporterTest methodsFor: 'as yet unclassified' stamp: 'fr 11/16/2020 02:53:16' prior: 50905173!
test18NetTransferForPortfolioWithNoTransactionsShouldBeZero

	portfolio _ Portfolio new.
	reporter _ 	TransferNetReporter for: portfolio.

	self assert: [reporter transferNet = 0]! !
!AccountReporterTest methodsFor: 'as yet unclassified' stamp: 'fr 11/16/2020 02:53:16' prior: 50905113!
test24NetTransferForPortfoliosWithPortfoliosShouldNotRelfectDepositsOrWithdraws

	self createNewAccount. 
	portfolio _ Portfolio with: account.
	anotherPortfolio1 _ Portfolio with: portfolio.
	reporter _ TransferNetReporter for: anotherPortfolio1.
	
	Deposit register: 100 on: account.
	Withdraw register: 50 on: account.
				
	self assert: [reporter transferNet = 0]! !
!AccountReporterTest methodsFor: 'as yet unclassified' stamp: 'fr 11/16/2020 02:53:16' prior: 50905070!
test22NetTransferForPortfolioShouldNotReflectWithdraws

	self createNewAccount. 
	portfolio _ Portfolio with: account.
	reporter _ TransferNetReporter for: portfolio.
	
	Withdraw register: 100 on: account. 
			
	self assert: [reporter transferNet = 0]! !

!classDefinition: #AccountReporterTest category: 'Portfolio-Part-II-Exercise' stamp: 'fr 11/16/2020 02:53:20'!
TestCase subclass: #AccountReporterTest
	instanceVariableNames: 'account reporter anotherAccount portfolio anotherPortfolio'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Part-II-Exercise'!
!AccountReporterTest methodsFor: 'as yet unclassified' stamp: 'fr 11/16/2020 02:53:20' prior: 50905637!
test24NetTransferForPortfoliosWithPortfoliosShouldNotRelfectDepositsOrWithdraws

	self createNewAccount. 
	portfolio _ Portfolio with: account.
	anotherPortfolio _ Portfolio with: portfolio.
	reporter _ TransferNetReporter for: anotherPortfolio.
	
	Deposit register: 100 on: account.
	Withdraw register: 50 on: account.
				
	self assert: [reporter transferNet = 0]! !
!AccountReporterTest methodsFor: 'as yet unclassified' stamp: 'fr 11/16/2020 02:53:20' prior: 50905225!
createSummaryReporterForPortfolioWithPortfolioWithAccount

	self createPortfolioWithPortfolioWithAccount.
	reporter _ SummaryReporter for: anotherPortfolio! !
!AccountReporterTest methodsFor: 'as yet unclassified' stamp: 'fr 11/16/2020 02:53:20' prior: 50905517!
createPortfolioWithPortfolioWithAccount

	self createPortfolioWithAccount.
	anotherPortfolio _ Portfolio with: portfolio! !
!AccountReporterTest methodsFor: 'as yet unclassified' stamp: 'fr 11/16/2020 02:53:20' prior: 50905599!
test23NetTransferForPortfoliosWithPortfoliosShouldReflectOutgoingAndIncomingTransfers
	
	self createNewAccount.
	self createAnotherNewAccount. 
	portfolio _ Portfolio with: account.
	anotherPortfolio _ Portfolio with: portfolio.
	reporter _ TransferNetReporter for: anotherPortfolio.

	Transfer 	move: 30 from: anotherAccount to: account. 
	Transfer 	move: 10 from: account to: anotherAccount. 	
				
	self assert: [reporter transferNet = 20]! !
!AccountReporterTest methodsFor: 'as yet unclassified' stamp: 'fr 11/16/2020 02:53:20' prior: 50905442!
test12AccountSummaryShouldReflectOutgoingAndIncomingTransfersOnPortfoliosWithPortfoliosAndAccounts

	self createPortfolioWithPortfolioWithAccount.
	self createAnotherNewAccount.
	anotherPortfolio add: anotherAccount.
	reporter _ SummaryReporter for: anotherPortfolio.

	Transfer move: 100 from: account to: anotherAccount.

		
	self  assert: reporter accountSummary 
		equals: (OrderedCollection with: 'Salida por transferencia de 100.' with: 'Entrada por transferencia de 100.' with: 'Balance = 0')! !
!AccountReporterTest methodsFor: 'private' stamp: 'fr 11/16/2020 02:53:26' prior: 50905424!
createAnotherNewAccount

	anotherAccount _ ReceptiveAccount new! !
!AccountReporterTest methodsFor: 'private' stamp: 'fr 11/16/2020 02:54:27'!
createNewAccountAndTransferNetReporterForIt
	
	self createNewAccount.
	reporter _ TransferNetReporter for: account.! !
!AccountReporterTest methodsFor: 'tests - net transfer' stamp: 'fr 11/16/2020 02:54:54' prior: 50905216!
test13NetTransferForAccountWithNoTransactionsShouldBeZero

	self createNewAccountAndTransferNetReporterForIt.
	self assert: [reporter transferNet = 0]! !
!AccountReporterTest methodsFor: 'tests - net transfer' stamp: 'fr 11/16/2020 02:54:59' prior: 50905755!
test13NetTransferForAccountWithNoTransactionsShouldBeZero

	self createNewAccountAndTransferNetReporterForIt.
	self assert: reporter transferNet equals: 0! !
!AccountReporterTest methodsFor: 'tests - net transfer' stamp: 'fr 11/16/2020 02:55:13' prior: 50905481!
test14NetTransferForAccountWithAnOutgoingTransferShouldReflectItsValue

	self createNewAccountAndTransferNetReporterForIt.
	self createAnotherNewAccount.
	
	Transfer move: 100 from: account to: anotherAccount.
	
	self assert: [reporter transferNet = -100]! !

!testRun: #AccountReporterTest #test14NetTransferForAccountWithAnOutgoingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 02:55:14'!
PASSED!

!testRun: #AccountReporterTest #test01AccountSummaryForAccountWithNoTransactionsShouldJustShowBalanceZero stamp: 'fr 11/16/2020 02:55:14'!
PASSED!

!testRun: #AccountReporterTest #test02AccountSummaryShouldReflectDepositsOnAccounts stamp: 'fr 11/16/2020 02:55:14'!
PASSED!

!testRun: #AccountReporterTest #test03AccountSummaryShouldReflectWithdrawsOnAccounts stamp: 'fr 11/16/2020 02:55:14'!
PASSED!

!testRun: #AccountReporterTest #test04AccountSummaryShouldReflectOutgoingTransfersOnAccounts stamp: 'fr 11/16/2020 02:55:14'!
PASSED!

!testRun: #AccountReporterTest #test05AccountSummaryShouldReflectIncomingTransfersOnAccounts stamp: 'fr 11/16/2020 02:55:14'!
PASSED!

!testRun: #AccountReporterTest #test06AccountSummaryForPortfolioWithNoTransactionsShouldJustShowBalanceZero stamp: 'fr 11/16/2020 02:55:14'!
PASSED!

!testRun: #AccountReporterTest #test07AccountSummaryShouldReflectDepositsOnPortfoliosWithAccounts stamp: 'fr 11/16/2020 02:55:14'!
PASSED!

!testRun: #AccountReporterTest #test08AccountSummaryShouldReflectWithdrawsOnPortfoliosWithAccounts stamp: 'fr 11/16/2020 02:55:14'!
PASSED!

!testRun: #AccountReporterTest #test09AccountSummaryShouldReflectOutgoingAndIncomingTransfersOnPortfoliosWithAccounts stamp: 'fr 11/16/2020 02:55:14'!
PASSED!

!testRun: #AccountReporterTest #test10AccountSummaryShouldReflectDepositsOnPortfoliosWithPortfolios stamp: 'fr 11/16/2020 02:55:14'!
PASSED!

!testRun: #AccountReporterTest #test11AccountSummaryShouldReflectWithdrawsOnPortfoliosWithPortfolios stamp: 'fr 11/16/2020 02:55:14'!
PASSED!

!testRun: #AccountReporterTest #test12AccountSummaryShouldReflectOutgoingAndIncomingTransfersOnPortfoliosWithPortfoliosAndAccounts stamp: 'fr 11/16/2020 02:55:14'!
PASSED!

!testRun: #AccountReporterTest #test13NetTransferForAccountWithNoTransactionsShouldBeZero stamp: 'fr 11/16/2020 02:55:14'!
PASSED!

!testRun: #AccountReporterTest #test14NetTransferForAccountWithAnOutgoingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 02:55:14'!
PASSED!

!testRun: #AccountReporterTest #test15NetTransferForAccountWithAnIncomingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 02:55:14'!
PASSED!

!testRun: #AccountReporterTest #test16NetTransferForAccountShouldNotReflectDeposits stamp: 'fr 11/16/2020 02:55:14'!
PASSED!

!testRun: #AccountReporterTest #test17NetTransferForAccountShouldNotReflectWithdraws stamp: 'fr 11/16/2020 02:55:14'!
PASSED!

!testRun: #AccountReporterTest #test18NetTransferForPortfolioWithNoTransactionsShouldBeZero stamp: 'fr 11/16/2020 02:55:14'!
PASSED!

!testRun: #AccountReporterTest #test19NetTransferForPortfolioWithAnOutgoingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 02:55:14'!
PASSED!

!testRun: #AccountReporterTest #test20NetTransferForPortfolioWithAnIncomingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 02:55:14'!
PASSED!

!testRun: #AccountReporterTest #test21NetTransferForPortfolioShouldNotReflectDeposits stamp: 'fr 11/16/2020 02:55:14'!
PASSED!

!testRun: #AccountReporterTest #test22NetTransferForPortfolioShouldNotReflectWithdraws stamp: 'fr 11/16/2020 02:55:14'!
PASSED!

!testRun: #AccountReporterTest #test23NetTransferForPortfoliosWithPortfoliosShouldReflectOutgoingAndIncomingTransfers stamp: 'fr 11/16/2020 02:55:14'!
PASSED!

!testRun: #AccountReporterTest #test24NetTransferForPortfoliosWithPortfoliosShouldNotRelfectDepositsOrWithdraws stamp: 'fr 11/16/2020 02:55:14'!
PASSED!
!AccountReporterTest methodsFor: 'tests - net transfer' stamp: 'fr 11/16/2020 02:55:22' prior: 50905430!
test15NetTransferForAccountWithAnIncomingTransferShouldReflectItsValue

	self createNewAccountAndTransferNetReporterForIt.
	self createAnotherNewAccount.
	
	Transfer move: 100 from: anotherAccount to: account.
	
	self assert: [reporter transferNet = 100]! !

!testRun: #AccountReporterTest #test15NetTransferForAccountWithAnIncomingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 02:55:23'!
PASSED!

!testRun: #AccountReporterTest #test01AccountSummaryForAccountWithNoTransactionsShouldJustShowBalanceZero stamp: 'fr 11/16/2020 02:55:23'!
PASSED!

!testRun: #AccountReporterTest #test02AccountSummaryShouldReflectDepositsOnAccounts stamp: 'fr 11/16/2020 02:55:23'!
PASSED!

!testRun: #AccountReporterTest #test03AccountSummaryShouldReflectWithdrawsOnAccounts stamp: 'fr 11/16/2020 02:55:23'!
PASSED!

!testRun: #AccountReporterTest #test04AccountSummaryShouldReflectOutgoingTransfersOnAccounts stamp: 'fr 11/16/2020 02:55:23'!
PASSED!

!testRun: #AccountReporterTest #test05AccountSummaryShouldReflectIncomingTransfersOnAccounts stamp: 'fr 11/16/2020 02:55:23'!
PASSED!

!testRun: #AccountReporterTest #test06AccountSummaryForPortfolioWithNoTransactionsShouldJustShowBalanceZero stamp: 'fr 11/16/2020 02:55:23'!
PASSED!

!testRun: #AccountReporterTest #test07AccountSummaryShouldReflectDepositsOnPortfoliosWithAccounts stamp: 'fr 11/16/2020 02:55:23'!
PASSED!

!testRun: #AccountReporterTest #test08AccountSummaryShouldReflectWithdrawsOnPortfoliosWithAccounts stamp: 'fr 11/16/2020 02:55:23'!
PASSED!

!testRun: #AccountReporterTest #test09AccountSummaryShouldReflectOutgoingAndIncomingTransfersOnPortfoliosWithAccounts stamp: 'fr 11/16/2020 02:55:23'!
PASSED!

!testRun: #AccountReporterTest #test10AccountSummaryShouldReflectDepositsOnPortfoliosWithPortfolios stamp: 'fr 11/16/2020 02:55:23'!
PASSED!

!testRun: #AccountReporterTest #test11AccountSummaryShouldReflectWithdrawsOnPortfoliosWithPortfolios stamp: 'fr 11/16/2020 02:55:23'!
PASSED!

!testRun: #AccountReporterTest #test12AccountSummaryShouldReflectOutgoingAndIncomingTransfersOnPortfoliosWithPortfoliosAndAccounts stamp: 'fr 11/16/2020 02:55:23'!
PASSED!

!testRun: #AccountReporterTest #test13NetTransferForAccountWithNoTransactionsShouldBeZero stamp: 'fr 11/16/2020 02:55:23'!
PASSED!

!testRun: #AccountReporterTest #test14NetTransferForAccountWithAnOutgoingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 02:55:23'!
PASSED!

!testRun: #AccountReporterTest #test15NetTransferForAccountWithAnIncomingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 02:55:23'!
PASSED!

!testRun: #AccountReporterTest #test16NetTransferForAccountShouldNotReflectDeposits stamp: 'fr 11/16/2020 02:55:23'!
PASSED!

!testRun: #AccountReporterTest #test17NetTransferForAccountShouldNotReflectWithdraws stamp: 'fr 11/16/2020 02:55:23'!
PASSED!

!testRun: #AccountReporterTest #test18NetTransferForPortfolioWithNoTransactionsShouldBeZero stamp: 'fr 11/16/2020 02:55:23'!
PASSED!

!testRun: #AccountReporterTest #test19NetTransferForPortfolioWithAnOutgoingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 02:55:23'!
PASSED!

!testRun: #AccountReporterTest #test20NetTransferForPortfolioWithAnIncomingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 02:55:23'!
PASSED!

!testRun: #AccountReporterTest #test21NetTransferForPortfolioShouldNotReflectDeposits stamp: 'fr 11/16/2020 02:55:23'!
PASSED!

!testRun: #AccountReporterTest #test22NetTransferForPortfolioShouldNotReflectWithdraws stamp: 'fr 11/16/2020 02:55:23'!
PASSED!

!testRun: #AccountReporterTest #test23NetTransferForPortfoliosWithPortfoliosShouldReflectOutgoingAndIncomingTransfers stamp: 'fr 11/16/2020 02:55:23'!
PASSED!

!testRun: #AccountReporterTest #test24NetTransferForPortfoliosWithPortfoliosShouldNotRelfectDepositsOrWithdraws stamp: 'fr 11/16/2020 02:55:23'!
PASSED!
!AccountReporterTest methodsFor: 'tests - net transfer' stamp: 'fr 11/16/2020 02:55:31' prior: 50905773!
test14NetTransferForAccountWithAnOutgoingTransferShouldReflectItsValue

	self createNewAccountAndTransferNetReporterForIt.
	self createAnotherNewAccount.
	
	Transfer move: 100 from: account to: anotherAccount.
	
	self assert: reporter transferNet equals: -100! !
!AccountReporterTest methodsFor: 'tests - net transfer' stamp: 'fr 11/16/2020 02:55:39' prior: 50905895!
test15NetTransferForAccountWithAnIncomingTransferShouldReflectItsValue

	self createNewAccountAndTransferNetReporterForIt.
	self createAnotherNewAccount.
	
	Transfer move: 100 from: anotherAccount to: account.
	
	self assert: reporter transferNet equals: 100! !
!AccountReporterTest methodsFor: 'tests - net transfer' stamp: 'fr 11/16/2020 02:55:46' prior: 50905296!
test16NetTransferForAccountShouldNotReflectDeposits

	self createNewAccount.
	reporter _ 	TransferNetReporter for: account.
	
	Deposit register: 100 on: account. 
		
	self assert: reporter transferNet equals: 0! !
!AccountReporterTest methodsFor: 'tests - net transfer' stamp: 'fr 11/16/2020 02:55:54' prior: 50906041!
test16NetTransferForAccountShouldNotReflectDeposits

	self createNewAccountAndTransferNetReporterForIt.
	
	Deposit register: 100 on: account. 
		
	self assert: reporter transferNet equals: 0! !

!testRun: #AccountReporterTest #test16NetTransferForAccountShouldNotReflectDeposits stamp: 'fr 11/16/2020 02:55:54'!
PASSED!

!testRun: #AccountReporterTest #test01AccountSummaryForAccountWithNoTransactionsShouldJustShowBalanceZero stamp: 'fr 11/16/2020 02:55:54'!
PASSED!

!testRun: #AccountReporterTest #test02AccountSummaryShouldReflectDepositsOnAccounts stamp: 'fr 11/16/2020 02:55:54'!
PASSED!

!testRun: #AccountReporterTest #test03AccountSummaryShouldReflectWithdrawsOnAccounts stamp: 'fr 11/16/2020 02:55:54'!
PASSED!

!testRun: #AccountReporterTest #test04AccountSummaryShouldReflectOutgoingTransfersOnAccounts stamp: 'fr 11/16/2020 02:55:54'!
PASSED!

!testRun: #AccountReporterTest #test05AccountSummaryShouldReflectIncomingTransfersOnAccounts stamp: 'fr 11/16/2020 02:55:54'!
PASSED!

!testRun: #AccountReporterTest #test06AccountSummaryForPortfolioWithNoTransactionsShouldJustShowBalanceZero stamp: 'fr 11/16/2020 02:55:54'!
PASSED!

!testRun: #AccountReporterTest #test07AccountSummaryShouldReflectDepositsOnPortfoliosWithAccounts stamp: 'fr 11/16/2020 02:55:54'!
PASSED!

!testRun: #AccountReporterTest #test08AccountSummaryShouldReflectWithdrawsOnPortfoliosWithAccounts stamp: 'fr 11/16/2020 02:55:54'!
PASSED!

!testRun: #AccountReporterTest #test09AccountSummaryShouldReflectOutgoingAndIncomingTransfersOnPortfoliosWithAccounts stamp: 'fr 11/16/2020 02:55:54'!
PASSED!

!testRun: #AccountReporterTest #test10AccountSummaryShouldReflectDepositsOnPortfoliosWithPortfolios stamp: 'fr 11/16/2020 02:55:54'!
PASSED!

!testRun: #AccountReporterTest #test11AccountSummaryShouldReflectWithdrawsOnPortfoliosWithPortfolios stamp: 'fr 11/16/2020 02:55:54'!
PASSED!

!testRun: #AccountReporterTest #test12AccountSummaryShouldReflectOutgoingAndIncomingTransfersOnPortfoliosWithPortfoliosAndAccounts stamp: 'fr 11/16/2020 02:55:54'!
PASSED!

!testRun: #AccountReporterTest #test13NetTransferForAccountWithNoTransactionsShouldBeZero stamp: 'fr 11/16/2020 02:55:54'!
PASSED!

!testRun: #AccountReporterTest #test14NetTransferForAccountWithAnOutgoingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 02:55:54'!
PASSED!

!testRun: #AccountReporterTest #test15NetTransferForAccountWithAnIncomingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 02:55:54'!
PASSED!

!testRun: #AccountReporterTest #test16NetTransferForAccountShouldNotReflectDeposits stamp: 'fr 11/16/2020 02:55:54'!
PASSED!

!testRun: #AccountReporterTest #test17NetTransferForAccountShouldNotReflectWithdraws stamp: 'fr 11/16/2020 02:55:54'!
PASSED!

!testRun: #AccountReporterTest #test18NetTransferForPortfolioWithNoTransactionsShouldBeZero stamp: 'fr 11/16/2020 02:55:54'!
PASSED!

!testRun: #AccountReporterTest #test19NetTransferForPortfolioWithAnOutgoingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 02:55:54'!
PASSED!

!testRun: #AccountReporterTest #test20NetTransferForPortfolioWithAnIncomingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 02:55:54'!
PASSED!

!testRun: #AccountReporterTest #test21NetTransferForPortfolioShouldNotReflectDeposits stamp: 'fr 11/16/2020 02:55:54'!
PASSED!

!testRun: #AccountReporterTest #test22NetTransferForPortfolioShouldNotReflectWithdraws stamp: 'fr 11/16/2020 02:55:54'!
PASSED!

!testRun: #AccountReporterTest #test23NetTransferForPortfoliosWithPortfoliosShouldReflectOutgoingAndIncomingTransfers stamp: 'fr 11/16/2020 02:55:54'!
PASSED!

!testRun: #AccountReporterTest #test24NetTransferForPortfoliosWithPortfoliosShouldNotRelfectDepositsOrWithdraws stamp: 'fr 11/16/2020 02:55:54'!
PASSED!
!AccountReporterTest methodsFor: 'tests - net transfer' stamp: 'fr 11/16/2020 02:56:10' prior: 50905306!
test17NetTransferForAccountShouldNotReflectWithdraws

	self createNewAccountAndTransferNetReporterForIt.

	Withdraw register: 100 on: account. 
		
	self assert: [reporter transferNet = 0]! !
!AccountReporterTest methodsFor: 'tests - net transfer' stamp: 'fr 11/16/2020 02:56:37' prior: 50905578!
test19NetTransferForPortfolioWithAnOutgoingTransferShouldReflectItsValue

	self createNewAccount.
	portfolio _ Portfolio with: account.
	self createAnotherNewAccount.
	reporter _ TransferNetReporter for: portfolio.

	Transfer move: 10 from: account to: anotherAccount.
			
	self assert: [reporter transferNet = -10]! !
!AccountReporterTest methodsFor: 'private' stamp: 'fr 11/16/2020 02:57:03' prior: 50905539!
createSummaryReporterForPortfolioWithAccount

	self createPortfolioWithAccount.
	reporter _ TransferNetReporter for: portfolio! !
!AccountReporterTest methodsFor: 'private' stamp: 'fr 11/16/2020 02:57:08' prior: 50906194!
createSummaryReporterForPortfolioWithAccount

	self createPortfolioWithAccount.
	reporter _ SummaryReporter for: portfolio! !

!testRun: #AccountReporterTest #test01AccountSummaryForAccountWithNoTransactionsShouldJustShowBalanceZero stamp: 'fr 11/16/2020 02:57:14'!
PASSED!

!testRun: #AccountReporterTest #test02AccountSummaryShouldReflectDepositsOnAccounts stamp: 'fr 11/16/2020 02:57:14'!
PASSED!

!testRun: #AccountReporterTest #test03AccountSummaryShouldReflectWithdrawsOnAccounts stamp: 'fr 11/16/2020 02:57:14'!
PASSED!

!testRun: #AccountReporterTest #test04AccountSummaryShouldReflectOutgoingTransfersOnAccounts stamp: 'fr 11/16/2020 02:57:14'!
PASSED!

!testRun: #AccountReporterTest #test05AccountSummaryShouldReflectIncomingTransfersOnAccounts stamp: 'fr 11/16/2020 02:57:14'!
PASSED!

!testRun: #AccountReporterTest #test06AccountSummaryForPortfolioWithNoTransactionsShouldJustShowBalanceZero stamp: 'fr 11/16/2020 02:57:14'!
PASSED!

!testRun: #AccountReporterTest #test07AccountSummaryShouldReflectDepositsOnPortfoliosWithAccounts stamp: 'fr 11/16/2020 02:57:14'!
PASSED!

!testRun: #AccountReporterTest #test08AccountSummaryShouldReflectWithdrawsOnPortfoliosWithAccounts stamp: 'fr 11/16/2020 02:57:14'!
PASSED!

!testRun: #AccountReporterTest #test09AccountSummaryShouldReflectOutgoingAndIncomingTransfersOnPortfoliosWithAccounts stamp: 'fr 11/16/2020 02:57:14'!
PASSED!

!testRun: #AccountReporterTest #test10AccountSummaryShouldReflectDepositsOnPortfoliosWithPortfolios stamp: 'fr 11/16/2020 02:57:14'!
PASSED!

!testRun: #AccountReporterTest #test11AccountSummaryShouldReflectWithdrawsOnPortfoliosWithPortfolios stamp: 'fr 11/16/2020 02:57:14'!
PASSED!

!testRun: #AccountReporterTest #test12AccountSummaryShouldReflectOutgoingAndIncomingTransfersOnPortfoliosWithPortfoliosAndAccounts stamp: 'fr 11/16/2020 02:57:14'!
PASSED!

!testRun: #AccountReporterTest #test13NetTransferForAccountWithNoTransactionsShouldBeZero stamp: 'fr 11/16/2020 02:57:14'!
PASSED!

!testRun: #AccountReporterTest #test14NetTransferForAccountWithAnOutgoingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 02:57:14'!
PASSED!

!testRun: #AccountReporterTest #test15NetTransferForAccountWithAnIncomingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 02:57:14'!
PASSED!

!testRun: #AccountReporterTest #test16NetTransferForAccountShouldNotReflectDeposits stamp: 'fr 11/16/2020 02:57:14'!
PASSED!

!testRun: #AccountReporterTest #test17NetTransferForAccountShouldNotReflectWithdraws stamp: 'fr 11/16/2020 02:57:14'!
PASSED!

!testRun: #AccountReporterTest #test18NetTransferForPortfolioWithNoTransactionsShouldBeZero stamp: 'fr 11/16/2020 02:57:14'!
PASSED!

!testRun: #AccountReporterTest #test19NetTransferForPortfolioWithAnOutgoingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 02:57:14'!
PASSED!

!testRun: #AccountReporterTest #test20NetTransferForPortfolioWithAnIncomingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 02:57:14'!
PASSED!

!testRun: #AccountReporterTest #test21NetTransferForPortfolioShouldNotReflectDeposits stamp: 'fr 11/16/2020 02:57:14'!
PASSED!

!testRun: #AccountReporterTest #test22NetTransferForPortfolioShouldNotReflectWithdraws stamp: 'fr 11/16/2020 02:57:14'!
PASSED!

!testRun: #AccountReporterTest #test23NetTransferForPortfoliosWithPortfoliosShouldReflectOutgoingAndIncomingTransfers stamp: 'fr 11/16/2020 02:57:14'!
PASSED!

!testRun: #AccountReporterTest #test24NetTransferForPortfoliosWithPortfoliosShouldNotRelfectDepositsOrWithdraws stamp: 'fr 11/16/2020 02:57:14'!
PASSED!
!AccountReporterTest methodsFor: 'private' stamp: 'fr 11/16/2020 02:57:23'!
createTransferNetReporterForPortfolioWithAccount

	self createPortfolioWithAccount.
	reporter _ TransferNetReporter for: portfolio! !
!AccountReporterTest methodsFor: 'tests - net transfer' stamp: 'fr 11/16/2020 02:57:52' prior: 50906181!
test19NetTransferForPortfolioWithAnOutgoingTransferShouldReflectItsValue

	self createTransferNetReporterForPortfolioWithAccount.
	self createAnotherNewAccount.

	Transfer move: 10 from: account to: anotherAccount.
			
	self assert: [reporter transferNet = -10]! !

!testRun: #AccountReporterTest #test19NetTransferForPortfolioWithAnOutgoingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 02:57:54'!
PASSED!

!testRun: #AccountReporterTest #test01AccountSummaryForAccountWithNoTransactionsShouldJustShowBalanceZero stamp: 'fr 11/16/2020 02:57:54'!
PASSED!

!testRun: #AccountReporterTest #test02AccountSummaryShouldReflectDepositsOnAccounts stamp: 'fr 11/16/2020 02:57:54'!
PASSED!

!testRun: #AccountReporterTest #test03AccountSummaryShouldReflectWithdrawsOnAccounts stamp: 'fr 11/16/2020 02:57:54'!
PASSED!

!testRun: #AccountReporterTest #test04AccountSummaryShouldReflectOutgoingTransfersOnAccounts stamp: 'fr 11/16/2020 02:57:54'!
PASSED!

!testRun: #AccountReporterTest #test05AccountSummaryShouldReflectIncomingTransfersOnAccounts stamp: 'fr 11/16/2020 02:57:54'!
PASSED!

!testRun: #AccountReporterTest #test06AccountSummaryForPortfolioWithNoTransactionsShouldJustShowBalanceZero stamp: 'fr 11/16/2020 02:57:54'!
PASSED!

!testRun: #AccountReporterTest #test07AccountSummaryShouldReflectDepositsOnPortfoliosWithAccounts stamp: 'fr 11/16/2020 02:57:54'!
PASSED!

!testRun: #AccountReporterTest #test08AccountSummaryShouldReflectWithdrawsOnPortfoliosWithAccounts stamp: 'fr 11/16/2020 02:57:54'!
PASSED!

!testRun: #AccountReporterTest #test09AccountSummaryShouldReflectOutgoingAndIncomingTransfersOnPortfoliosWithAccounts stamp: 'fr 11/16/2020 02:57:54'!
PASSED!

!testRun: #AccountReporterTest #test10AccountSummaryShouldReflectDepositsOnPortfoliosWithPortfolios stamp: 'fr 11/16/2020 02:57:54'!
PASSED!

!testRun: #AccountReporterTest #test11AccountSummaryShouldReflectWithdrawsOnPortfoliosWithPortfolios stamp: 'fr 11/16/2020 02:57:54'!
PASSED!

!testRun: #AccountReporterTest #test12AccountSummaryShouldReflectOutgoingAndIncomingTransfersOnPortfoliosWithPortfoliosAndAccounts stamp: 'fr 11/16/2020 02:57:54'!
PASSED!

!testRun: #AccountReporterTest #test13NetTransferForAccountWithNoTransactionsShouldBeZero stamp: 'fr 11/16/2020 02:57:54'!
PASSED!

!testRun: #AccountReporterTest #test14NetTransferForAccountWithAnOutgoingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 02:57:54'!
PASSED!

!testRun: #AccountReporterTest #test15NetTransferForAccountWithAnIncomingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 02:57:54'!
PASSED!

!testRun: #AccountReporterTest #test16NetTransferForAccountShouldNotReflectDeposits stamp: 'fr 11/16/2020 02:57:54'!
PASSED!

!testRun: #AccountReporterTest #test17NetTransferForAccountShouldNotReflectWithdraws stamp: 'fr 11/16/2020 02:57:54'!
PASSED!

!testRun: #AccountReporterTest #test18NetTransferForPortfolioWithNoTransactionsShouldBeZero stamp: 'fr 11/16/2020 02:57:54'!
PASSED!

!testRun: #AccountReporterTest #test19NetTransferForPortfolioWithAnOutgoingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 02:57:54'!
PASSED!

!testRun: #AccountReporterTest #test20NetTransferForPortfolioWithAnIncomingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 02:57:54'!
PASSED!

!testRun: #AccountReporterTest #test21NetTransferForPortfolioShouldNotReflectDeposits stamp: 'fr 11/16/2020 02:57:54'!
PASSED!

!testRun: #AccountReporterTest #test22NetTransferForPortfolioShouldNotReflectWithdraws stamp: 'fr 11/16/2020 02:57:54'!
PASSED!

!testRun: #AccountReporterTest #test23NetTransferForPortfoliosWithPortfoliosShouldReflectOutgoingAndIncomingTransfers stamp: 'fr 11/16/2020 02:57:54'!
PASSED!

!testRun: #AccountReporterTest #test24NetTransferForPortfoliosWithPortfoliosShouldNotRelfectDepositsOrWithdraws stamp: 'fr 11/16/2020 02:57:54'!
PASSED!
!AccountReporterTest methodsFor: 'tests - net transfer' stamp: 'fr 11/16/2020 02:58:06' prior: 50905525!
test20NetTransferForPortfolioWithAnIncomingTransferShouldReflectItsValue
	
	self createTransferNetReporterForPortfolioWithAccount.
	self createAnotherNewAccount. 
	
	Transfer move: 10 from: anotherAccount to: account.
			
	self assert: [reporter transferNet = 10]! !

!testRun: #AccountReporterTest #test20NetTransferForPortfolioWithAnIncomingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 02:58:06'!
PASSED!

!testRun: #AccountReporterTest #test01AccountSummaryForAccountWithNoTransactionsShouldJustShowBalanceZero stamp: 'fr 11/16/2020 02:58:06'!
PASSED!

!testRun: #AccountReporterTest #test02AccountSummaryShouldReflectDepositsOnAccounts stamp: 'fr 11/16/2020 02:58:06'!
PASSED!

!testRun: #AccountReporterTest #test03AccountSummaryShouldReflectWithdrawsOnAccounts stamp: 'fr 11/16/2020 02:58:06'!
PASSED!

!testRun: #AccountReporterTest #test04AccountSummaryShouldReflectOutgoingTransfersOnAccounts stamp: 'fr 11/16/2020 02:58:06'!
PASSED!

!testRun: #AccountReporterTest #test05AccountSummaryShouldReflectIncomingTransfersOnAccounts stamp: 'fr 11/16/2020 02:58:06'!
PASSED!

!testRun: #AccountReporterTest #test06AccountSummaryForPortfolioWithNoTransactionsShouldJustShowBalanceZero stamp: 'fr 11/16/2020 02:58:06'!
PASSED!

!testRun: #AccountReporterTest #test07AccountSummaryShouldReflectDepositsOnPortfoliosWithAccounts stamp: 'fr 11/16/2020 02:58:06'!
PASSED!

!testRun: #AccountReporterTest #test08AccountSummaryShouldReflectWithdrawsOnPortfoliosWithAccounts stamp: 'fr 11/16/2020 02:58:06'!
PASSED!

!testRun: #AccountReporterTest #test09AccountSummaryShouldReflectOutgoingAndIncomingTransfersOnPortfoliosWithAccounts stamp: 'fr 11/16/2020 02:58:06'!
PASSED!

!testRun: #AccountReporterTest #test10AccountSummaryShouldReflectDepositsOnPortfoliosWithPortfolios stamp: 'fr 11/16/2020 02:58:06'!
PASSED!

!testRun: #AccountReporterTest #test11AccountSummaryShouldReflectWithdrawsOnPortfoliosWithPortfolios stamp: 'fr 11/16/2020 02:58:06'!
PASSED!

!testRun: #AccountReporterTest #test12AccountSummaryShouldReflectOutgoingAndIncomingTransfersOnPortfoliosWithPortfoliosAndAccounts stamp: 'fr 11/16/2020 02:58:06'!
PASSED!

!testRun: #AccountReporterTest #test13NetTransferForAccountWithNoTransactionsShouldBeZero stamp: 'fr 11/16/2020 02:58:06'!
PASSED!

!testRun: #AccountReporterTest #test14NetTransferForAccountWithAnOutgoingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 02:58:06'!
PASSED!

!testRun: #AccountReporterTest #test15NetTransferForAccountWithAnIncomingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 02:58:06'!
PASSED!

!testRun: #AccountReporterTest #test16NetTransferForAccountShouldNotReflectDeposits stamp: 'fr 11/16/2020 02:58:06'!
PASSED!

!testRun: #AccountReporterTest #test17NetTransferForAccountShouldNotReflectWithdraws stamp: 'fr 11/16/2020 02:58:06'!
PASSED!

!testRun: #AccountReporterTest #test18NetTransferForPortfolioWithNoTransactionsShouldBeZero stamp: 'fr 11/16/2020 02:58:06'!
PASSED!

!testRun: #AccountReporterTest #test19NetTransferForPortfolioWithAnOutgoingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 02:58:06'!
PASSED!

!testRun: #AccountReporterTest #test20NetTransferForPortfolioWithAnIncomingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 02:58:06'!
PASSED!

!testRun: #AccountReporterTest #test21NetTransferForPortfolioShouldNotReflectDeposits stamp: 'fr 11/16/2020 02:58:06'!
PASSED!

!testRun: #AccountReporterTest #test22NetTransferForPortfolioShouldNotReflectWithdraws stamp: 'fr 11/16/2020 02:58:06'!
PASSED!

!testRun: #AccountReporterTest #test23NetTransferForPortfoliosWithPortfoliosShouldReflectOutgoingAndIncomingTransfers stamp: 'fr 11/16/2020 02:58:06'!
PASSED!

!testRun: #AccountReporterTest #test24NetTransferForPortfoliosWithPortfoliosShouldNotRelfectDepositsOrWithdraws stamp: 'fr 11/16/2020 02:58:06'!
PASSED!
!AccountReporterTest methodsFor: 'tests - net transfer' stamp: 'fr 11/16/2020 02:58:18' prior: 50905566!
test21NetTransferForPortfolioShouldNotReflectDeposits

	self createTransferNetReporterForPortfolioWithAccount.

	
	Deposit register: 100 on: account. 
			
	self assert: [reporter transferNet = 0]! !
!AccountReporterTest methodsFor: 'tests - net transfer' stamp: 'fr 11/16/2020 02:58:20' prior: 50906568!
test21NetTransferForPortfolioShouldNotReflectDeposits

	self createTransferNetReporterForPortfolioWithAccount.
	
	Deposit register: 100 on: account. 
			
	self assert: [reporter transferNet = 0]! !

!testRun: #AccountReporterTest #test21NetTransferForPortfolioShouldNotReflectDeposits stamp: 'fr 11/16/2020 02:58:20'!
PASSED!

!testRun: #AccountReporterTest #test01AccountSummaryForAccountWithNoTransactionsShouldJustShowBalanceZero stamp: 'fr 11/16/2020 02:58:20'!
PASSED!

!testRun: #AccountReporterTest #test02AccountSummaryShouldReflectDepositsOnAccounts stamp: 'fr 11/16/2020 02:58:20'!
PASSED!

!testRun: #AccountReporterTest #test03AccountSummaryShouldReflectWithdrawsOnAccounts stamp: 'fr 11/16/2020 02:58:20'!
PASSED!

!testRun: #AccountReporterTest #test04AccountSummaryShouldReflectOutgoingTransfersOnAccounts stamp: 'fr 11/16/2020 02:58:20'!
PASSED!

!testRun: #AccountReporterTest #test05AccountSummaryShouldReflectIncomingTransfersOnAccounts stamp: 'fr 11/16/2020 02:58:20'!
PASSED!

!testRun: #AccountReporterTest #test06AccountSummaryForPortfolioWithNoTransactionsShouldJustShowBalanceZero stamp: 'fr 11/16/2020 02:58:20'!
PASSED!

!testRun: #AccountReporterTest #test07AccountSummaryShouldReflectDepositsOnPortfoliosWithAccounts stamp: 'fr 11/16/2020 02:58:20'!
PASSED!

!testRun: #AccountReporterTest #test08AccountSummaryShouldReflectWithdrawsOnPortfoliosWithAccounts stamp: 'fr 11/16/2020 02:58:20'!
PASSED!

!testRun: #AccountReporterTest #test09AccountSummaryShouldReflectOutgoingAndIncomingTransfersOnPortfoliosWithAccounts stamp: 'fr 11/16/2020 02:58:20'!
PASSED!

!testRun: #AccountReporterTest #test10AccountSummaryShouldReflectDepositsOnPortfoliosWithPortfolios stamp: 'fr 11/16/2020 02:58:20'!
PASSED!

!testRun: #AccountReporterTest #test11AccountSummaryShouldReflectWithdrawsOnPortfoliosWithPortfolios stamp: 'fr 11/16/2020 02:58:20'!
PASSED!

!testRun: #AccountReporterTest #test12AccountSummaryShouldReflectOutgoingAndIncomingTransfersOnPortfoliosWithPortfoliosAndAccounts stamp: 'fr 11/16/2020 02:58:20'!
PASSED!

!testRun: #AccountReporterTest #test13NetTransferForAccountWithNoTransactionsShouldBeZero stamp: 'fr 11/16/2020 02:58:20'!
PASSED!

!testRun: #AccountReporterTest #test14NetTransferForAccountWithAnOutgoingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 02:58:20'!
PASSED!

!testRun: #AccountReporterTest #test15NetTransferForAccountWithAnIncomingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 02:58:20'!
PASSED!

!testRun: #AccountReporterTest #test16NetTransferForAccountShouldNotReflectDeposits stamp: 'fr 11/16/2020 02:58:20'!
PASSED!

!testRun: #AccountReporterTest #test17NetTransferForAccountShouldNotReflectWithdraws stamp: 'fr 11/16/2020 02:58:20'!
PASSED!

!testRun: #AccountReporterTest #test18NetTransferForPortfolioWithNoTransactionsShouldBeZero stamp: 'fr 11/16/2020 02:58:20'!
PASSED!

!testRun: #AccountReporterTest #test19NetTransferForPortfolioWithAnOutgoingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 02:58:20'!
PASSED!

!testRun: #AccountReporterTest #test20NetTransferForPortfolioWithAnIncomingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 02:58:20'!
PASSED!

!testRun: #AccountReporterTest #test21NetTransferForPortfolioShouldNotReflectDeposits stamp: 'fr 11/16/2020 02:58:20'!
PASSED!

!testRun: #AccountReporterTest #test22NetTransferForPortfolioShouldNotReflectWithdraws stamp: 'fr 11/16/2020 02:58:20'!
PASSED!

!testRun: #AccountReporterTest #test23NetTransferForPortfoliosWithPortfoliosShouldReflectOutgoingAndIncomingTransfers stamp: 'fr 11/16/2020 02:58:20'!
PASSED!

!testRun: #AccountReporterTest #test24NetTransferForPortfoliosWithPortfoliosShouldNotRelfectDepositsOrWithdraws stamp: 'fr 11/16/2020 02:58:20'!
PASSED!
!AccountReporterTest methodsFor: 'tests - net transfer' stamp: 'fr 11/16/2020 02:58:26' prior: 50905652!
test22NetTransferForPortfolioShouldNotReflectWithdraws

	self createTransferNetReporterForPortfolioWithAccount.
	
	Withdraw register: 100 on: account. 
			
	self assert: [reporter transferNet = 0]! !

!testRun: #AccountReporterTest #test22NetTransferForPortfolioShouldNotReflectWithdraws stamp: 'fr 11/16/2020 02:58:27'!
PASSED!

!testRun: #AccountReporterTest #test01AccountSummaryForAccountWithNoTransactionsShouldJustShowBalanceZero stamp: 'fr 11/16/2020 02:58:27'!
PASSED!

!testRun: #AccountReporterTest #test02AccountSummaryShouldReflectDepositsOnAccounts stamp: 'fr 11/16/2020 02:58:27'!
PASSED!

!testRun: #AccountReporterTest #test03AccountSummaryShouldReflectWithdrawsOnAccounts stamp: 'fr 11/16/2020 02:58:27'!
PASSED!

!testRun: #AccountReporterTest #test04AccountSummaryShouldReflectOutgoingTransfersOnAccounts stamp: 'fr 11/16/2020 02:58:27'!
PASSED!

!testRun: #AccountReporterTest #test05AccountSummaryShouldReflectIncomingTransfersOnAccounts stamp: 'fr 11/16/2020 02:58:27'!
PASSED!

!testRun: #AccountReporterTest #test06AccountSummaryForPortfolioWithNoTransactionsShouldJustShowBalanceZero stamp: 'fr 11/16/2020 02:58:27'!
PASSED!

!testRun: #AccountReporterTest #test07AccountSummaryShouldReflectDepositsOnPortfoliosWithAccounts stamp: 'fr 11/16/2020 02:58:27'!
PASSED!

!testRun: #AccountReporterTest #test08AccountSummaryShouldReflectWithdrawsOnPortfoliosWithAccounts stamp: 'fr 11/16/2020 02:58:27'!
PASSED!

!testRun: #AccountReporterTest #test09AccountSummaryShouldReflectOutgoingAndIncomingTransfersOnPortfoliosWithAccounts stamp: 'fr 11/16/2020 02:58:27'!
PASSED!

!testRun: #AccountReporterTest #test10AccountSummaryShouldReflectDepositsOnPortfoliosWithPortfolios stamp: 'fr 11/16/2020 02:58:27'!
PASSED!

!testRun: #AccountReporterTest #test11AccountSummaryShouldReflectWithdrawsOnPortfoliosWithPortfolios stamp: 'fr 11/16/2020 02:58:27'!
PASSED!

!testRun: #AccountReporterTest #test12AccountSummaryShouldReflectOutgoingAndIncomingTransfersOnPortfoliosWithPortfoliosAndAccounts stamp: 'fr 11/16/2020 02:58:27'!
PASSED!

!testRun: #AccountReporterTest #test13NetTransferForAccountWithNoTransactionsShouldBeZero stamp: 'fr 11/16/2020 02:58:27'!
PASSED!

!testRun: #AccountReporterTest #test14NetTransferForAccountWithAnOutgoingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 02:58:27'!
PASSED!

!testRun: #AccountReporterTest #test15NetTransferForAccountWithAnIncomingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 02:58:27'!
PASSED!

!testRun: #AccountReporterTest #test16NetTransferForAccountShouldNotReflectDeposits stamp: 'fr 11/16/2020 02:58:27'!
PASSED!

!testRun: #AccountReporterTest #test17NetTransferForAccountShouldNotReflectWithdraws stamp: 'fr 11/16/2020 02:58:27'!
PASSED!

!testRun: #AccountReporterTest #test18NetTransferForPortfolioWithNoTransactionsShouldBeZero stamp: 'fr 11/16/2020 02:58:27'!
PASSED!

!testRun: #AccountReporterTest #test19NetTransferForPortfolioWithAnOutgoingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 02:58:27'!
PASSED!

!testRun: #AccountReporterTest #test20NetTransferForPortfolioWithAnIncomingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 02:58:27'!
PASSED!

!testRun: #AccountReporterTest #test21NetTransferForPortfolioShouldNotReflectDeposits stamp: 'fr 11/16/2020 02:58:27'!
PASSED!

!testRun: #AccountReporterTest #test22NetTransferForPortfolioShouldNotReflectWithdraws stamp: 'fr 11/16/2020 02:58:27'!
PASSED!

!testRun: #AccountReporterTest #test23NetTransferForPortfoliosWithPortfoliosShouldReflectOutgoingAndIncomingTransfers stamp: 'fr 11/16/2020 02:58:27'!
PASSED!

!testRun: #AccountReporterTest #test24NetTransferForPortfoliosWithPortfoliosShouldNotRelfectDepositsOrWithdraws stamp: 'fr 11/16/2020 02:58:27'!
PASSED!
!AccountReporterTest methodsFor: 'tests - net transfer' stamp: 'fr 11/16/2020 02:59:28' prior: 50906171!
test17NetTransferForAccountShouldNotReflectWithdraws

	self createNewAccountAndTransferNetReporterForIt.

	Withdraw register: 100 on: account. 
		
	self assert: reporter transferNet equals: 0! !
!AccountReporterTest methodsFor: 'tests - net transfer' stamp: 'fr 11/16/2020 02:59:37' prior: 50905628!
test18NetTransferForPortfolioWithNoTransactionsShouldBeZero

	portfolio _ Portfolio new.
	reporter _ 	TransferNetReporter for: portfolio.

	self assert: reporter transferNet equals: 0! !

!methodRemoval: AccountReporterTest #test24NetTransferForPortfoliosWithPortfoliosShouldNotRelfectDepositsOrWithdraws stamp: 'fr 11/16/2020 03:00:17'!
test24NetTransferForPortfoliosWithPortfoliosShouldNotRelfectDepositsOrWithdraws

	self createNewAccount. 
	portfolio _ Portfolio with: account.
	anotherPortfolio _ Portfolio with: portfolio.
	reporter _ TransferNetReporter for: anotherPortfolio.
	
	Deposit register: 100 on: account.
	Withdraw register: 50 on: account.
				
	self assert: [reporter transferNet = 0]!
!AccountReporterTest methodsFor: 'tests - net transfer' stamp: 'fr 11/16/2020 03:00:25' prior: 50905706!
test23NetTransferForPortfoliosWithPortfoliosShouldReflectOutgoingAndIncomingTransfers
	
	self createNewAccount.
	self createAnotherNewAccount. 
	portfolio _ Portfolio with: account.
	anotherPortfolio _ Portfolio with: portfolio.
	reporter _ TransferNetReporter for: anotherPortfolio.

	Transfer 	move: 30 from: anotherAccount to: account. 
	Transfer 	move: 10 from: account to: anotherAccount. 	
				
	self assert: reporter transferNet equals: 20! !
!AccountReporterTest methodsFor: 'private' stamp: 'fr 11/16/2020 03:00:48'!
createTransferNetReporterForPortfolioWithPortfolioWithAccount

	self createPortfolioWithPortfolioWithAccount.
	reporter _ TransferNetReporter for: anotherPortfolio! !
!AccountReporterTest methodsFor: 'tests - net transfer' stamp: 'fr 11/16/2020 03:01:18' prior: 50906854!
test23NetTransferForPortfoliosWithPortfoliosShouldReflectOutgoingAndIncomingTransfers
	
	self createTransferNetReporterForPortfolioWithPortfolioWithAccount.
	self createAnotherNewAccount. 


	Transfer 	move: 30 from: anotherAccount to: account. 
	Transfer 	move: 10 from: account to: anotherAccount. 	
				
	self assert: reporter transferNet equals: 20! !

!testRun: #AccountReporterTest #test23NetTransferForPortfoliosWithPortfoliosShouldReflectOutgoingAndIncomingTransfers stamp: 'fr 11/16/2020 03:01:19'!
PASSED!

!testRun: #AccountReporterTest #test01AccountSummaryForAccountWithNoTransactionsShouldJustShowBalanceZero stamp: 'fr 11/16/2020 03:01:19'!
PASSED!

!testRun: #AccountReporterTest #test02AccountSummaryShouldReflectDepositsOnAccounts stamp: 'fr 11/16/2020 03:01:19'!
PASSED!

!testRun: #AccountReporterTest #test03AccountSummaryShouldReflectWithdrawsOnAccounts stamp: 'fr 11/16/2020 03:01:19'!
PASSED!

!testRun: #AccountReporterTest #test04AccountSummaryShouldReflectOutgoingTransfersOnAccounts stamp: 'fr 11/16/2020 03:01:19'!
PASSED!

!testRun: #AccountReporterTest #test05AccountSummaryShouldReflectIncomingTransfersOnAccounts stamp: 'fr 11/16/2020 03:01:19'!
PASSED!

!testRun: #AccountReporterTest #test06AccountSummaryForPortfolioWithNoTransactionsShouldJustShowBalanceZero stamp: 'fr 11/16/2020 03:01:19'!
PASSED!

!testRun: #AccountReporterTest #test07AccountSummaryShouldReflectDepositsOnPortfoliosWithAccounts stamp: 'fr 11/16/2020 03:01:19'!
PASSED!

!testRun: #AccountReporterTest #test08AccountSummaryShouldReflectWithdrawsOnPortfoliosWithAccounts stamp: 'fr 11/16/2020 03:01:19'!
PASSED!

!testRun: #AccountReporterTest #test09AccountSummaryShouldReflectOutgoingAndIncomingTransfersOnPortfoliosWithAccounts stamp: 'fr 11/16/2020 03:01:19'!
PASSED!

!testRun: #AccountReporterTest #test10AccountSummaryShouldReflectDepositsOnPortfoliosWithPortfolios stamp: 'fr 11/16/2020 03:01:19'!
PASSED!

!testRun: #AccountReporterTest #test11AccountSummaryShouldReflectWithdrawsOnPortfoliosWithPortfolios stamp: 'fr 11/16/2020 03:01:19'!
PASSED!

!testRun: #AccountReporterTest #test12AccountSummaryShouldReflectOutgoingAndIncomingTransfersOnPortfoliosWithPortfoliosAndAccounts stamp: 'fr 11/16/2020 03:01:19'!
PASSED!

!testRun: #AccountReporterTest #test13NetTransferForAccountWithNoTransactionsShouldBeZero stamp: 'fr 11/16/2020 03:01:19'!
PASSED!

!testRun: #AccountReporterTest #test14NetTransferForAccountWithAnOutgoingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 03:01:19'!
PASSED!

!testRun: #AccountReporterTest #test15NetTransferForAccountWithAnIncomingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 03:01:19'!
PASSED!

!testRun: #AccountReporterTest #test16NetTransferForAccountShouldNotReflectDeposits stamp: 'fr 11/16/2020 03:01:19'!
PASSED!

!testRun: #AccountReporterTest #test17NetTransferForAccountShouldNotReflectWithdraws stamp: 'fr 11/16/2020 03:01:19'!
PASSED!

!testRun: #AccountReporterTest #test18NetTransferForPortfolioWithNoTransactionsShouldBeZero stamp: 'fr 11/16/2020 03:01:19'!
PASSED!

!testRun: #AccountReporterTest #test19NetTransferForPortfolioWithAnOutgoingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 03:01:19'!
PASSED!

!testRun: #AccountReporterTest #test20NetTransferForPortfolioWithAnIncomingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 03:01:19'!
PASSED!

!testRun: #AccountReporterTest #test21NetTransferForPortfolioShouldNotReflectDeposits stamp: 'fr 11/16/2020 03:01:19'!
PASSED!

!testRun: #AccountReporterTest #test22NetTransferForPortfolioShouldNotReflectWithdraws stamp: 'fr 11/16/2020 03:01:19'!
PASSED!

!testRun: #AccountReporterTest #test23NetTransferForPortfoliosWithPortfoliosShouldReflectOutgoingAndIncomingTransfers stamp: 'fr 11/16/2020 03:01:19'!
PASSED!
!AccountReporterTest methodsFor: 'tests - net transfer' stamp: 'fr 11/16/2020 03:01:21' prior: 50906880!
test23NetTransferForPortfoliosWithPortfoliosShouldReflectOutgoingAndIncomingTransfers
	
	self createTransferNetReporterForPortfolioWithPortfolioWithAccount.
	self createAnotherNewAccount. 

	Transfer 	move: 30 from: anotherAccount to: account. 
	Transfer 	move: 10 from: account to: anotherAccount. 	
				
	self assert: reporter transferNet equals: 20! !

----SNAPSHOT----(16 November 2020 03:01:57) CuisUniversity-4384.image priorSource: 18126454!
!AccountReporterTest methodsFor: 'tests - net transfer' stamp: 'fr 11/16/2020 03:04:50'!
test24NetTransferForPortfoliosWithPortfoliosShouldNotRelfectDepositsOrWithdraws

	self createNewAccount. 
	portfolio _ Portfolio with: account.
	anotherPortfolio _ Portfolio with: portfolio.
	reporter _ TransferNetReporter for: anotherPortfolio.
	
	Deposit register: 100 on: account.
	Withdraw register: 50 on: account.
				
	self assert: [reporter transferNet = 0]! !

!testRun: #AccountReporterTest #test24NetTransferForPortfoliosWithPortfoliosShouldNotRelfectDepositsOrWithdraws stamp: 'fr 11/16/2020 03:04:51'!
PASSED!

!testRun: #AccountReporterTest #test01AccountSummaryForAccountWithNoTransactionsShouldJustShowBalanceZero stamp: 'fr 11/16/2020 03:04:51'!
PASSED!

!testRun: #AccountReporterTest #test02AccountSummaryShouldReflectDepositsOnAccounts stamp: 'fr 11/16/2020 03:04:51'!
PASSED!

!testRun: #AccountReporterTest #test03AccountSummaryShouldReflectWithdrawsOnAccounts stamp: 'fr 11/16/2020 03:04:51'!
PASSED!

!testRun: #AccountReporterTest #test04AccountSummaryShouldReflectOutgoingTransfersOnAccounts stamp: 'fr 11/16/2020 03:04:51'!
PASSED!

!testRun: #AccountReporterTest #test05AccountSummaryShouldReflectIncomingTransfersOnAccounts stamp: 'fr 11/16/2020 03:04:51'!
PASSED!

!testRun: #AccountReporterTest #test06AccountSummaryForPortfolioWithNoTransactionsShouldJustShowBalanceZero stamp: 'fr 11/16/2020 03:04:51'!
PASSED!

!testRun: #AccountReporterTest #test07AccountSummaryShouldReflectDepositsOnPortfoliosWithAccounts stamp: 'fr 11/16/2020 03:04:51'!
PASSED!

!testRun: #AccountReporterTest #test08AccountSummaryShouldReflectWithdrawsOnPortfoliosWithAccounts stamp: 'fr 11/16/2020 03:04:51'!
PASSED!

!testRun: #AccountReporterTest #test09AccountSummaryShouldReflectOutgoingAndIncomingTransfersOnPortfoliosWithAccounts stamp: 'fr 11/16/2020 03:04:51'!
PASSED!

!testRun: #AccountReporterTest #test10AccountSummaryShouldReflectDepositsOnPortfoliosWithPortfolios stamp: 'fr 11/16/2020 03:04:51'!
PASSED!

!testRun: #AccountReporterTest #test11AccountSummaryShouldReflectWithdrawsOnPortfoliosWithPortfolios stamp: 'fr 11/16/2020 03:04:51'!
PASSED!

!testRun: #AccountReporterTest #test12AccountSummaryShouldReflectOutgoingAndIncomingTransfersOnPortfoliosWithPortfoliosAndAccounts stamp: 'fr 11/16/2020 03:04:51'!
PASSED!

!testRun: #AccountReporterTest #test13NetTransferForAccountWithNoTransactionsShouldBeZero stamp: 'fr 11/16/2020 03:04:51'!
PASSED!

!testRun: #AccountReporterTest #test14NetTransferForAccountWithAnOutgoingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 03:04:51'!
PASSED!

!testRun: #AccountReporterTest #test15NetTransferForAccountWithAnIncomingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 03:04:51'!
PASSED!

!testRun: #AccountReporterTest #test16NetTransferForAccountShouldNotReflectDeposits stamp: 'fr 11/16/2020 03:04:51'!
PASSED!

!testRun: #AccountReporterTest #test17NetTransferForAccountShouldNotReflectWithdraws stamp: 'fr 11/16/2020 03:04:51'!
PASSED!

!testRun: #AccountReporterTest #test18NetTransferForPortfolioWithNoTransactionsShouldBeZero stamp: 'fr 11/16/2020 03:04:51'!
PASSED!

!testRun: #AccountReporterTest #test19NetTransferForPortfolioWithAnOutgoingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 03:04:51'!
PASSED!

!testRun: #AccountReporterTest #test20NetTransferForPortfolioWithAnIncomingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 03:04:51'!
PASSED!

!testRun: #AccountReporterTest #test21NetTransferForPortfolioShouldNotReflectDeposits stamp: 'fr 11/16/2020 03:04:51'!
PASSED!

!testRun: #AccountReporterTest #test22NetTransferForPortfolioShouldNotReflectWithdraws stamp: 'fr 11/16/2020 03:04:51'!
PASSED!

!testRun: #AccountReporterTest #test23NetTransferForPortfoliosWithPortfoliosShouldReflectOutgoingAndIncomingTransfers stamp: 'fr 11/16/2020 03:04:51'!
PASSED!

!testRun: #AccountReporterTest #test24NetTransferForPortfoliosWithPortfoliosShouldNotRelfectDepositsOrWithdraws stamp: 'fr 11/16/2020 03:04:51'!
PASSED!
!AccountReporterTest methodsFor: 'tests - net transfer' stamp: 'fr 11/16/2020 03:05:14' prior: 50907018!
test24NetTransferForPortfoliosWithPortfoliosShouldNotRelfectDepositsOrWithdraws

	self createTransferNetReporterForPortfolioWithPortfolioWithAccount.

	Deposit register: 100 on: account.
	Withdraw register: 50 on: account.
				
	self assert: [reporter transferNet = 0]! !

!testRun: #AccountReporterTest #test24NetTransferForPortfoliosWithPortfoliosShouldNotRelfectDepositsOrWithdraws stamp: 'fr 11/16/2020 03:05:15'!
PASSED!

!testRun: #AccountReporterTest #test01AccountSummaryForAccountWithNoTransactionsShouldJustShowBalanceZero stamp: 'fr 11/16/2020 03:05:15'!
PASSED!

!testRun: #AccountReporterTest #test02AccountSummaryShouldReflectDepositsOnAccounts stamp: 'fr 11/16/2020 03:05:15'!
PASSED!

!testRun: #AccountReporterTest #test03AccountSummaryShouldReflectWithdrawsOnAccounts stamp: 'fr 11/16/2020 03:05:15'!
PASSED!

!testRun: #AccountReporterTest #test04AccountSummaryShouldReflectOutgoingTransfersOnAccounts stamp: 'fr 11/16/2020 03:05:15'!
PASSED!

!testRun: #AccountReporterTest #test05AccountSummaryShouldReflectIncomingTransfersOnAccounts stamp: 'fr 11/16/2020 03:05:15'!
PASSED!

!testRun: #AccountReporterTest #test06AccountSummaryForPortfolioWithNoTransactionsShouldJustShowBalanceZero stamp: 'fr 11/16/2020 03:05:15'!
PASSED!

!testRun: #AccountReporterTest #test07AccountSummaryShouldReflectDepositsOnPortfoliosWithAccounts stamp: 'fr 11/16/2020 03:05:15'!
PASSED!

!testRun: #AccountReporterTest #test08AccountSummaryShouldReflectWithdrawsOnPortfoliosWithAccounts stamp: 'fr 11/16/2020 03:05:15'!
PASSED!

!testRun: #AccountReporterTest #test09AccountSummaryShouldReflectOutgoingAndIncomingTransfersOnPortfoliosWithAccounts stamp: 'fr 11/16/2020 03:05:15'!
PASSED!

!testRun: #AccountReporterTest #test10AccountSummaryShouldReflectDepositsOnPortfoliosWithPortfolios stamp: 'fr 11/16/2020 03:05:15'!
PASSED!

!testRun: #AccountReporterTest #test11AccountSummaryShouldReflectWithdrawsOnPortfoliosWithPortfolios stamp: 'fr 11/16/2020 03:05:15'!
PASSED!

!testRun: #AccountReporterTest #test12AccountSummaryShouldReflectOutgoingAndIncomingTransfersOnPortfoliosWithPortfoliosAndAccounts stamp: 'fr 11/16/2020 03:05:15'!
PASSED!

!testRun: #AccountReporterTest #test13NetTransferForAccountWithNoTransactionsShouldBeZero stamp: 'fr 11/16/2020 03:05:15'!
PASSED!

!testRun: #AccountReporterTest #test14NetTransferForAccountWithAnOutgoingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 03:05:15'!
PASSED!

!testRun: #AccountReporterTest #test15NetTransferForAccountWithAnIncomingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 03:05:15'!
PASSED!

!testRun: #AccountReporterTest #test16NetTransferForAccountShouldNotReflectDeposits stamp: 'fr 11/16/2020 03:05:15'!
PASSED!

!testRun: #AccountReporterTest #test17NetTransferForAccountShouldNotReflectWithdraws stamp: 'fr 11/16/2020 03:05:15'!
PASSED!

!testRun: #AccountReporterTest #test18NetTransferForPortfolioWithNoTransactionsShouldBeZero stamp: 'fr 11/16/2020 03:05:15'!
PASSED!

!testRun: #AccountReporterTest #test19NetTransferForPortfolioWithAnOutgoingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 03:05:15'!
PASSED!

!testRun: #AccountReporterTest #test20NetTransferForPortfolioWithAnIncomingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 03:05:15'!
PASSED!

!testRun: #AccountReporterTest #test21NetTransferForPortfolioShouldNotReflectDeposits stamp: 'fr 11/16/2020 03:05:15'!
PASSED!

!testRun: #AccountReporterTest #test22NetTransferForPortfolioShouldNotReflectWithdraws stamp: 'fr 11/16/2020 03:05:15'!
PASSED!

!testRun: #AccountReporterTest #test23NetTransferForPortfoliosWithPortfoliosShouldReflectOutgoingAndIncomingTransfers stamp: 'fr 11/16/2020 03:05:15'!
PASSED!

!testRun: #AccountReporterTest #test24NetTransferForPortfoliosWithPortfoliosShouldNotRelfectDepositsOrWithdraws stamp: 'fr 11/16/2020 03:05:15'!
PASSED!
!AccountReporterTest methodsFor: 'tests - net transfer' stamp: 'fr 11/16/2020 03:06:17' prior: 50906322!
test19NetTransferForPortfolioWithAnOutgoingTransferShouldReflectItsValue

	self createTransferNetReporterForPortfolioWithAccount.
	self createAnotherNewAccount.

	Transfer move: 10 from: account to: anotherAccount.
			
	self assert: reporter transferNet equals: -10! !

!testRun: #AccountReporterTest #test19NetTransferForPortfolioWithAnOutgoingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 03:06:18'!
PASSED!
!AccountReporterTest methodsFor: 'tests - net transfer' stamp: 'fr 11/16/2020 03:06:27' prior: 50906445!
test20NetTransferForPortfolioWithAnIncomingTransferShouldReflectItsValue
	
	self createTransferNetReporterForPortfolioWithAccount.
	self createAnotherNewAccount. 
	
	Transfer move: 10 from: anotherAccount to: account.
			
	self assert: reporter transferNet equals: 10! !
!AccountReporterTest methodsFor: 'tests - net transfer' stamp: 'fr 11/16/2020 03:06:34' prior: 50906578!
test21NetTransferForPortfolioShouldNotReflectDeposits

	self createTransferNetReporterForPortfolioWithAccount.
	
	Deposit register: 100 on: account. 
			
	self assert: reporter transferNet equals: 0! !
!AccountReporterTest methodsFor: 'tests - net transfer' stamp: 'fr 11/16/2020 03:06:41' prior: 50906698!
test22NetTransferForPortfolioShouldNotReflectWithdraws

	self createTransferNetReporterForPortfolioWithAccount.
	
	Withdraw register: 100 on: account. 
			
	self assert: reporter transferNet equals: 0! !
!AccountReporterTest methodsFor: 'tests - net transfer' stamp: 'fr 11/16/2020 03:06:54' prior: 50907144!
test24NetTransferForPortfoliosWithPortfoliosShouldNotRelfectDepositsOrWithdraws

	self createTransferNetReporterForPortfolioWithPortfolioWithAccount.

	Deposit register: 100 on: account.
	Withdraw register: 50 on: account.
				
	self assert: reporter transferNet equals: 0! !

!testRun: #AccountReporterTest #test24NetTransferForPortfoliosWithPortfoliosShouldNotRelfectDepositsOrWithdraws stamp: 'fr 11/16/2020 03:06:55'!
PASSED!

!testRun: #AccountReporterTest #test01AccountSummaryForAccountWithNoTransactionsShouldJustShowBalanceZero stamp: 'fr 11/16/2020 03:06:55'!
PASSED!

!testRun: #AccountReporterTest #test02AccountSummaryShouldReflectDepositsOnAccounts stamp: 'fr 11/16/2020 03:06:55'!
PASSED!

!testRun: #AccountReporterTest #test03AccountSummaryShouldReflectWithdrawsOnAccounts stamp: 'fr 11/16/2020 03:06:55'!
PASSED!

!testRun: #AccountReporterTest #test04AccountSummaryShouldReflectOutgoingTransfersOnAccounts stamp: 'fr 11/16/2020 03:06:55'!
PASSED!

!testRun: #AccountReporterTest #test05AccountSummaryShouldReflectIncomingTransfersOnAccounts stamp: 'fr 11/16/2020 03:06:55'!
PASSED!

!testRun: #AccountReporterTest #test06AccountSummaryForPortfolioWithNoTransactionsShouldJustShowBalanceZero stamp: 'fr 11/16/2020 03:06:55'!
PASSED!

!testRun: #AccountReporterTest #test07AccountSummaryShouldReflectDepositsOnPortfoliosWithAccounts stamp: 'fr 11/16/2020 03:06:55'!
PASSED!

!testRun: #AccountReporterTest #test08AccountSummaryShouldReflectWithdrawsOnPortfoliosWithAccounts stamp: 'fr 11/16/2020 03:06:55'!
PASSED!

!testRun: #AccountReporterTest #test09AccountSummaryShouldReflectOutgoingAndIncomingTransfersOnPortfoliosWithAccounts stamp: 'fr 11/16/2020 03:06:55'!
PASSED!

!testRun: #AccountReporterTest #test10AccountSummaryShouldReflectDepositsOnPortfoliosWithPortfolios stamp: 'fr 11/16/2020 03:06:55'!
PASSED!

!testRun: #AccountReporterTest #test11AccountSummaryShouldReflectWithdrawsOnPortfoliosWithPortfolios stamp: 'fr 11/16/2020 03:06:55'!
PASSED!

!testRun: #AccountReporterTest #test12AccountSummaryShouldReflectOutgoingAndIncomingTransfersOnPortfoliosWithPortfoliosAndAccounts stamp: 'fr 11/16/2020 03:06:55'!
PASSED!

!testRun: #AccountReporterTest #test13NetTransferForAccountWithNoTransactionsShouldBeZero stamp: 'fr 11/16/2020 03:06:55'!
PASSED!

!testRun: #AccountReporterTest #test14NetTransferForAccountWithAnOutgoingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 03:06:55'!
PASSED!

!testRun: #AccountReporterTest #test15NetTransferForAccountWithAnIncomingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 03:06:55'!
PASSED!

!testRun: #AccountReporterTest #test16NetTransferForAccountShouldNotReflectDeposits stamp: 'fr 11/16/2020 03:06:55'!
PASSED!

!testRun: #AccountReporterTest #test17NetTransferForAccountShouldNotReflectWithdraws stamp: 'fr 11/16/2020 03:06:55'!
PASSED!

!testRun: #AccountReporterTest #test18NetTransferForPortfolioWithNoTransactionsShouldBeZero stamp: 'fr 11/16/2020 03:06:55'!
PASSED!

!testRun: #AccountReporterTest #test19NetTransferForPortfolioWithAnOutgoingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 03:06:55'!
PASSED!

!testRun: #AccountReporterTest #test20NetTransferForPortfolioWithAnIncomingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 03:06:55'!
PASSED!

!testRun: #AccountReporterTest #test21NetTransferForPortfolioShouldNotReflectDeposits stamp: 'fr 11/16/2020 03:06:55'!
PASSED!

!testRun: #AccountReporterTest #test22NetTransferForPortfolioShouldNotReflectWithdraws stamp: 'fr 11/16/2020 03:06:55'!
PASSED!

!testRun: #AccountReporterTest #test23NetTransferForPortfoliosWithPortfoliosShouldReflectOutgoingAndIncomingTransfers stamp: 'fr 11/16/2020 03:06:55'!
PASSED!

!testRun: #AccountReporterTest #test24NetTransferForPortfoliosWithPortfoliosShouldNotRelfectDepositsOrWithdraws stamp: 'fr 11/16/2020 03:06:55'!
PASSED!

----SNAPSHOT----(16 November 2020 03:07:02) CuisUniversity-4384.image priorSource: 18411650!

----QUIT----(16 November 2020 03:10:53) CuisUniversity-4384.image priorSource: 18425199!

----STARTUP---- (16 November 2020 03:20:38) as /home/fede/Documentos/Facultad/Inge1/Cuises/linux64/CuisUniversity-4384.image!

!Portfolio methodsFor: 'report' stamp: 'fr 11/16/2020 03:26:10'!
buildAccountReportWith: aReporter

	accounts do: [:anAccount | 
		anAccount buildTransactionReportWith: aReporter 	
	]! !
!Portfolio methodsFor: 'report' stamp: 'fr 11/16/2020 03:26:23' prior: 50907448!
buildAccountReportWith: aReporter

	accounts do: [:anAccount | 
		anAccount buildAccountReportWith: aReporter 	
	]! !
!Portfolio methodsFor: 'report' stamp: 'fr 11/16/2020 03:26:30' prior: 50907455!
buildAccountReportWith: aReporter

	accounts do: [:anAccount | 
		anAccount buildTransactionReportWith: aReporter 	
	]! !
!Portfolio methodsFor: 'report' stamp: 'fr 11/16/2020 03:26:36' prior: 50907462!
buildAccountReportWith: aReporter

	accounts do: [:anAccount | 
		anAccount buildAccountReportWith: aReporter 	
	]! !
!TransferNetReporter methodsFor: 'report' stamp: 'fr 11/16/2020 03:26:42' prior: 50882972!
transferNet

	account buildAccountReportWith: self.
	^transferNetBalance

	! !
!SummaryReporter methodsFor: 'report' stamp: 'fr 11/16/2020 03:27:00' prior: 50882965!
accountSummary
	
	account buildAccountReportWith: self.
	self addAccountBalance.
	^accountSummary! !
!Portfolio methodsFor: 'report' stamp: 'fr 11/16/2020 03:27:06' prior: 50882977!
buildTransactionReportWith: aReporter

	accounts do: [:anAccount | 
		anAccount buildAccountReportWith: aReporter 	
	]! !

!methodRemoval: Portfolio #buildTransactionReportWith: stamp: 'fr 11/16/2020 03:27:35'!
buildTransactionReportWith: aReporter

	accounts do: [:anAccount | 
		anAccount buildAccountReportWith: aReporter 	
	]!
!ReceptiveAccount methodsFor: 'report' stamp: 'fr 11/16/2020 03:27:44'!
buildAccountReportWith: aReporter

	transactions do: [:aTransaction | 
		aTransaction addToReportWith: aReporter 
	]! !

!methodRemoval: ReceptiveAccount #buildTransactionReportWith: stamp: 'fr 11/16/2020 03:27:46'!
buildTransactionReportWith: aReporter

	transactions do: [:aTransaction | 
		aTransaction addToReportWith: aReporter 
	]!

!testRun: #AccountReporterTest #test01AccountSummaryForAccountWithNoTransactionsShouldJustShowBalanceZero stamp: 'fr 11/16/2020 03:27:49'!
PASSED!

!testRun: #AccountReporterTest #test02AccountSummaryShouldReflectDepositsOnAccounts stamp: 'fr 11/16/2020 03:27:49'!
PASSED!

!testRun: #AccountReporterTest #test03AccountSummaryShouldReflectWithdrawsOnAccounts stamp: 'fr 11/16/2020 03:27:49'!
PASSED!

!testRun: #AccountReporterTest #test04AccountSummaryShouldReflectOutgoingTransfersOnAccounts stamp: 'fr 11/16/2020 03:27:49'!
PASSED!

!testRun: #AccountReporterTest #test05AccountSummaryShouldReflectIncomingTransfersOnAccounts stamp: 'fr 11/16/2020 03:27:49'!
PASSED!

!testRun: #AccountReporterTest #test06AccountSummaryForPortfolioWithNoTransactionsShouldJustShowBalanceZero stamp: 'fr 11/16/2020 03:27:49'!
PASSED!

!testRun: #AccountReporterTest #test07AccountSummaryShouldReflectDepositsOnPortfoliosWithAccounts stamp: 'fr 11/16/2020 03:27:49'!
PASSED!

!testRun: #AccountReporterTest #test08AccountSummaryShouldReflectWithdrawsOnPortfoliosWithAccounts stamp: 'fr 11/16/2020 03:27:49'!
PASSED!

!testRun: #AccountReporterTest #test09AccountSummaryShouldReflectOutgoingAndIncomingTransfersOnPortfoliosWithAccounts stamp: 'fr 11/16/2020 03:27:49'!
PASSED!

!testRun: #AccountReporterTest #test10AccountSummaryShouldReflectDepositsOnPortfoliosWithPortfolios stamp: 'fr 11/16/2020 03:27:49'!
PASSED!

!testRun: #AccountReporterTest #test11AccountSummaryShouldReflectWithdrawsOnPortfoliosWithPortfolios stamp: 'fr 11/16/2020 03:27:49'!
PASSED!

!testRun: #AccountReporterTest #test12AccountSummaryShouldReflectOutgoingAndIncomingTransfersOnPortfoliosWithPortfoliosAndAccounts stamp: 'fr 11/16/2020 03:27:49'!
PASSED!

!testRun: #AccountReporterTest #test13NetTransferForAccountWithNoTransactionsShouldBeZero stamp: 'fr 11/16/2020 03:27:49'!
PASSED!

!testRun: #AccountReporterTest #test14NetTransferForAccountWithAnOutgoingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 03:27:49'!
PASSED!

!testRun: #AccountReporterTest #test15NetTransferForAccountWithAnIncomingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 03:27:49'!
PASSED!

!testRun: #AccountReporterTest #test16NetTransferForAccountShouldNotReflectDeposits stamp: 'fr 11/16/2020 03:27:49'!
PASSED!

!testRun: #AccountReporterTest #test17NetTransferForAccountShouldNotReflectWithdraws stamp: 'fr 11/16/2020 03:27:49'!
PASSED!

!testRun: #AccountReporterTest #test18NetTransferForPortfolioWithNoTransactionsShouldBeZero stamp: 'fr 11/16/2020 03:27:49'!
PASSED!

!testRun: #AccountReporterTest #test19NetTransferForPortfolioWithAnOutgoingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 03:27:49'!
PASSED!

!testRun: #AccountReporterTest #test20NetTransferForPortfolioWithAnIncomingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 03:27:49'!
PASSED!

!testRun: #AccountReporterTest #test21NetTransferForPortfolioShouldNotReflectDeposits stamp: 'fr 11/16/2020 03:27:49'!
PASSED!

!testRun: #AccountReporterTest #test22NetTransferForPortfolioShouldNotReflectWithdraws stamp: 'fr 11/16/2020 03:27:49'!
PASSED!

!testRun: #AccountReporterTest #test23NetTransferForPortfoliosWithPortfoliosShouldReflectOutgoingAndIncomingTransfers stamp: 'fr 11/16/2020 03:27:49'!
PASSED!

!testRun: #AccountReporterTest #test24NetTransferForPortfoliosWithPortfoliosShouldNotRelfectDepositsOrWithdraws stamp: 'fr 11/16/2020 03:27:49'!
PASSED!

!testRun: #PortfolioReporterTest #test01TreeStructureReportForEmptyPortfolioWorksAsExpected stamp: 'fr 11/16/2020 03:27:49'!
PASSED!

!testRun: #PortfolioReporterTest #test02TreeStructureReportForPortfolioWithAccountsWorksAsExpected stamp: 'fr 11/16/2020 03:27:49'!
PASSED!

!testRun: #PortfolioReporterTest #test03TreeStructureReportForPortfolioWithAccountsAndPortfoliosWorksAsExpected stamp: 'fr 11/16/2020 03:27:49'!
PASSED!

!testRun: #PortfolioReporterTest #test04AccountsShouldUseADefaultNameIfNoneIsSpecified stamp: 'fr 11/16/2020 03:27:49'!
PASSED!

!testRun: #PortfolioReporterTest #test05SpecialReportForEmptyPortfolioWorksAsExpected stamp: 'fr 11/16/2020 03:27:49'!
PASSED!

!testRun: #PortfolioReporterTest #test06SpecialReportForPortfolioWithAccountsWithAnyKindOfTransactionsWorksAsExpected stamp: 'fr 11/16/2020 03:27:49'!
PASSED!

!testRun: #PortfolioReporterTest #test07SpecialReportForPortfolioWithAccountsAndPortfoliosWithAnyKindOfTransactionsWorksAsExpected stamp: 'fr 11/16/2020 03:27:49'!
PASSED!

!testRun: #PortfolioTest #test01BalanceOfPortfolioWithoutAccountsIsZero stamp: 'fr 11/16/2020 03:27:49'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithOneAccountIsAccountBalance stamp: 'fr 11/16/2020 03:27:49'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioIsCalculatedRecursivelyOnPortfolios stamp: 'fr 11/16/2020 03:27:49'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithoutAccountsHasNoRegisteredTransaction stamp: 'fr 11/16/2020 03:27:49'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredItsAccountsTransactions stamp: 'fr 11/16/2020 03:27:49'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioLooksForRegisteredTransactionsRecursively stamp: 'fr 11/16/2020 03:27:49'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioHasNoTransactionWhenHasNoAccounts stamp: 'fr 11/16/2020 03:27:49'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTransactionsIncludesAllItsAccountsTransactions stamp: 'fr 11/16/2020 03:27:49'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioTransactionsAreCalculatedRecursively stamp: 'fr 11/16/2020 03:27:49'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCanNotIncludeTheSameAccountMoreThanOnce stamp: 'fr 11/16/2020 03:27:49'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCanNotIncludeAccountOfItsPortfolios stamp: 'fr 11/16/2020 03:27:49'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioCanNotIncludeItself stamp: 'fr 11/16/2020 03:27:49'!
PASSED!

!testRun: #PortfolioTest #test13ComposedPortfolioCanNotHaveParentPortfolioAccount stamp: 'fr 11/16/2020 03:27:49'!
PASSED!

!testRun: #PortfolioTest #test14ComposedPortfolioCanNotHaveAccountOfAnyRootParentRecursively stamp: 'fr 11/16/2020 03:27:49'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotIncludeAnyOfTheComposedAccountOfPortfolioToAdd stamp: 'fr 11/16/2020 03:27:49'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'fr 11/16/2020 03:27:49'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'fr 11/16/2020 03:27:49'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'fr 11/16/2020 03:27:49'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'fr 11/16/2020 03:27:49'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'fr 11/16/2020 03:27:49'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'fr 11/16/2020 03:27:49'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'fr 11/16/2020 03:27:49'!
PASSED!

!testRun: #TransferTest #test01TransferMovesMoneyAffectingBalancesAsExpected stamp: 'fr 11/16/2020 03:27:49'!
PASSED!

!testRun: #TransferTest #test02AccountsThatParticipateInTheTransferRegisterTheCorrespondingLeg stamp: 'fr 11/16/2020 03:27:49'!
PASSED!

!testRun: #TransferTest #test03LegsKnowTheirComplementaryLegThroughTheTransfer stamp: 'fr 11/16/2020 03:27:49'!
PASSED!

!testRun: #TransferTest #test04TransferValueCanNotBeZero stamp: 'fr 11/16/2020 03:27:49'!
PASSED!

!testRun: #TransferTest #test05TransferValueCanNotBeNegative stamp: 'fr 11/16/2020 03:27:49'!
PASSED!

!testRun: #TransferTest #test06TransferCanNotMoveMoneyFromAnAccountToItself stamp: 'fr 11/16/2020 03:27:49'!
PASSED!

----QUIT----(16 November 2020 03:39:54) CuisUniversity-4384.image priorSource: 18425293!

----STARTUP---- (16 November 2020 03:55:23) as /home/fede/Documentos/Facultad/Inge1/Cuises/linux64/CuisUniversity-4384.image!


!classRenamed: #SpecialTreeReporter as: #Asd stamp: 'fr 11/16/2020 03:56:27'!
Smalltalk renameClassNamed: #SpecialTreeReporter as: #Asd!
!PortfolioReporterTest methodsFor: 'as yet unclassified' stamp: 'fr 11/16/2020 03:56:27' prior: 50894824!
test05SpecialReportForEmptyPortfolioWorksAsExpected

	| portfolio reporter |
	
	portfolio _ Portfolio named: 'Portfolio de la familia'.
	reporter _ Asd for: portfolio.

	self assert: reporter specialReport equals: (OrderedCollection with: 'Portfolio de la familia' with: ' Balance = 0')! !
!PortfolioReporterTest methodsFor: 'as yet unclassified' stamp: 'fr 11/16/2020 03:56:27' prior: 50895301!
test06SpecialReportForPortfolioWithAccountsWithAnyKindOfTransactionsWorksAsExpected

	| portfolio account anotherAccount reporter |
	
	account _ ReceptiveAccount named: 'Cuenta de la familia'.
	anotherAccount _ ReceptiveAccount new.
	
	portfolio _ Portfolio named: 'Portfolio de la familia' with: account.
	
	reporter _ Asd for: portfolio.
	
	self performRegularTransactionsWith: account asWellAsTransferTransactionsWithItAnd: anotherAccount.
	self assert: reporter specialReport equals: self expectedReportForPortfolioWithAccounts! !
!PortfolioReporterTest methodsFor: 'as yet unclassified' stamp: 'fr 11/16/2020 03:56:27' prior: 50895238!
test07SpecialReportForPortfolioWithAccountsAndPortfoliosWithAnyKindOfTransactionsWorksAsExpected

	| portfolio account anotherAccount anotherPortfolio reporter |
	
	account _ ReceptiveAccount named: 'Cuenta de la familia'.
	anotherAccount _ ReceptiveAccount named: 'Cuenta de Juan'.
	
	anotherPortfolio _ Portfolio named: 'Portfolio de Juan' with: anotherAccount.
	portfolio _ Portfolio named: 'Portfolio de la familia' with: account with: anotherPortfolio.
	
	reporter _ Asd for: portfolio.
	
	self performRegularTransactionsWith: account asWellAsTransferTransactionsWithItAnd: anotherAccount.	
	self assert: reporter specialReport equals: self expectedReportForPortfolioWithAccountsAndPortfolios! !

!classRenamed: #Asd as: #CompleteTreeReporter stamp: 'fr 11/16/2020 03:57:08'!
Smalltalk renameClassNamed: #Asd as: #CompleteTreeReporter!
!PortfolioReporterTest methodsFor: 'as yet unclassified' stamp: 'fr 11/16/2020 03:57:08' prior: 50907770!
test05SpecialReportForEmptyPortfolioWorksAsExpected

	| portfolio reporter |
	
	portfolio _ Portfolio named: 'Portfolio de la familia'.
	reporter _ CompleteTreeReporter for: portfolio.

	self assert: reporter specialReport equals: (OrderedCollection with: 'Portfolio de la familia' with: ' Balance = 0')! !
!PortfolioReporterTest methodsFor: 'as yet unclassified' stamp: 'fr 11/16/2020 03:57:08' prior: 50907783!
test06SpecialReportForPortfolioWithAccountsWithAnyKindOfTransactionsWorksAsExpected

	| portfolio account anotherAccount reporter |
	
	account _ ReceptiveAccount named: 'Cuenta de la familia'.
	anotherAccount _ ReceptiveAccount new.
	
	portfolio _ Portfolio named: 'Portfolio de la familia' with: account.
	
	reporter _ CompleteTreeReporter for: portfolio.
	
	self performRegularTransactionsWith: account asWellAsTransferTransactionsWithItAnd: anotherAccount.
	self assert: reporter specialReport equals: self expectedReportForPortfolioWithAccounts! !
!PortfolioReporterTest methodsFor: 'as yet unclassified' stamp: 'fr 11/16/2020 03:57:08' prior: 50907804!
test07SpecialReportForPortfolioWithAccountsAndPortfoliosWithAnyKindOfTransactionsWorksAsExpected

	| portfolio account anotherAccount anotherPortfolio reporter |
	
	account _ ReceptiveAccount named: 'Cuenta de la familia'.
	anotherAccount _ ReceptiveAccount named: 'Cuenta de Juan'.
	
	anotherPortfolio _ Portfolio named: 'Portfolio de Juan' with: anotherAccount.
	portfolio _ Portfolio named: 'Portfolio de la familia' with: account with: anotherPortfolio.
	
	reporter _ CompleteTreeReporter for: portfolio.
	
	self performRegularTransactionsWith: account asWellAsTransferTransactionsWithItAnd: anotherAccount.	
	self assert: reporter specialReport equals: self expectedReportForPortfolioWithAccountsAndPortfolios! !
!Portfolio methodsFor: 'report' stamp: 'fr 11/16/2020 03:57:52'!
buildReportWith: aPortfolioReporter 

	accounts do: [:anAccount |
		anAccount addToPortfolioReportWith: aPortfolioReporter 	
	]! !

----STARTUP---- (16 November 2020 04:02:16) as /home/fede/Documentos/Facultad/Inge1/Cuises/linux64/CuisUniversity-4384.image!


----SNAPSHOT----(16 November 2020 04:02:27) CuisUniversity-4384.image priorSource: 18435433!

!testRun: #AccountReporterTest #test01AccountSummaryForAccountWithNoTransactionsShouldJustShowBalanceZero stamp: 'fr 11/16/2020 04:03:14'!
PASSED!

!testRun: #AccountReporterTest #test02AccountSummaryShouldReflectDepositsOnAccounts stamp: 'fr 11/16/2020 04:03:14'!
PASSED!

!testRun: #AccountReporterTest #test03AccountSummaryShouldReflectWithdrawsOnAccounts stamp: 'fr 11/16/2020 04:03:14'!
PASSED!

!testRun: #AccountReporterTest #test04AccountSummaryShouldReflectOutgoingTransfersOnAccounts stamp: 'fr 11/16/2020 04:03:14'!
PASSED!

!testRun: #AccountReporterTest #test05AccountSummaryShouldReflectIncomingTransfersOnAccounts stamp: 'fr 11/16/2020 04:03:14'!
PASSED!

!testRun: #AccountReporterTest #test06AccountSummaryForPortfolioWithNoTransactionsShouldJustShowBalanceZero stamp: 'fr 11/16/2020 04:03:14'!
PASSED!

!testRun: #AccountReporterTest #test07AccountSummaryShouldReflectDepositsOnPortfoliosWithAccounts stamp: 'fr 11/16/2020 04:03:14'!
PASSED!

!testRun: #AccountReporterTest #test08AccountSummaryShouldReflectWithdrawsOnPortfoliosWithAccounts stamp: 'fr 11/16/2020 04:03:14'!
PASSED!

!testRun: #AccountReporterTest #test09AccountSummaryShouldReflectOutgoingAndIncomingTransfersOnPortfoliosWithAccounts stamp: 'fr 11/16/2020 04:03:14'!
PASSED!

!testRun: #AccountReporterTest #test10AccountSummaryShouldReflectDepositsOnPortfoliosWithPortfolios stamp: 'fr 11/16/2020 04:03:14'!
PASSED!

!testRun: #AccountReporterTest #test11AccountSummaryShouldReflectWithdrawsOnPortfoliosWithPortfolios stamp: 'fr 11/16/2020 04:03:14'!
PASSED!

!testRun: #AccountReporterTest #test12AccountSummaryShouldReflectOutgoingAndIncomingTransfersOnPortfoliosWithPortfoliosAndAccounts stamp: 'fr 11/16/2020 04:03:14'!
PASSED!

!testRun: #AccountReporterTest #test13NetTransferForAccountWithNoTransactionsShouldBeZero stamp: 'fr 11/16/2020 04:03:14'!
PASSED!

!testRun: #AccountReporterTest #test14NetTransferForAccountWithAnOutgoingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 04:03:14'!
PASSED!

!testRun: #AccountReporterTest #test15NetTransferForAccountWithAnIncomingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 04:03:14'!
PASSED!

!testRun: #AccountReporterTest #test16NetTransferForAccountShouldNotReflectDeposits stamp: 'fr 11/16/2020 04:03:14'!
PASSED!

!testRun: #AccountReporterTest #test17NetTransferForAccountShouldNotReflectWithdraws stamp: 'fr 11/16/2020 04:03:14'!
PASSED!

!testRun: #AccountReporterTest #test18NetTransferForPortfolioWithNoTransactionsShouldBeZero stamp: 'fr 11/16/2020 04:03:14'!
PASSED!

!testRun: #AccountReporterTest #test19NetTransferForPortfolioWithAnOutgoingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 04:03:14'!
PASSED!

!testRun: #AccountReporterTest #test20NetTransferForPortfolioWithAnIncomingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 04:03:14'!
PASSED!

!testRun: #AccountReporterTest #test21NetTransferForPortfolioShouldNotReflectDeposits stamp: 'fr 11/16/2020 04:03:14'!
PASSED!

!testRun: #AccountReporterTest #test22NetTransferForPortfolioShouldNotReflectWithdraws stamp: 'fr 11/16/2020 04:03:14'!
PASSED!

!testRun: #AccountReporterTest #test23NetTransferForPortfoliosWithPortfoliosShouldReflectOutgoingAndIncomingTransfers stamp: 'fr 11/16/2020 04:03:14'!
PASSED!

!testRun: #AccountReporterTest #test24NetTransferForPortfoliosWithPortfoliosShouldNotRelfectDepositsOrWithdraws stamp: 'fr 11/16/2020 04:03:14'!
PASSED!

!testRun: #PortfolioReporterTest #test01TreeStructureReportForEmptyPortfolioWorksAsExpected stamp: 'fr 11/16/2020 04:03:14'!
PASSED!

!testRun: #PortfolioReporterTest #test02TreeStructureReportForPortfolioWithAccountsWorksAsExpected stamp: 'fr 11/16/2020 04:03:14'!
PASSED!

!testRun: #PortfolioReporterTest #test03TreeStructureReportForPortfolioWithAccountsAndPortfoliosWorksAsExpected stamp: 'fr 11/16/2020 04:03:15'!
PASSED!

!testRun: #PortfolioReporterTest #test04AccountsShouldUseADefaultNameIfNoneIsSpecified stamp: 'fr 11/16/2020 04:03:15'!
PASSED!

!testRun: #PortfolioReporterTest #test05SpecialReportForEmptyPortfolioWorksAsExpected stamp: 'fr 11/16/2020 04:03:15'!
PASSED!

!testRun: #PortfolioReporterTest #test06SpecialReportForPortfolioWithAccountsWithAnyKindOfTransactionsWorksAsExpected stamp: 'fr 11/16/2020 04:03:15'!
PASSED!

!testRun: #PortfolioReporterTest #test07SpecialReportForPortfolioWithAccountsAndPortfoliosWithAnyKindOfTransactionsWorksAsExpected stamp: 'fr 11/16/2020 04:03:15'!
PASSED!

!testRun: #PortfolioTest #test01BalanceOfPortfolioWithoutAccountsIsZero stamp: 'fr 11/16/2020 04:03:15'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithOneAccountIsAccountBalance stamp: 'fr 11/16/2020 04:03:15'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioIsCalculatedRecursivelyOnPortfolios stamp: 'fr 11/16/2020 04:03:15'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithoutAccountsHasNoRegisteredTransaction stamp: 'fr 11/16/2020 04:03:15'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredItsAccountsTransactions stamp: 'fr 11/16/2020 04:03:15'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioLooksForRegisteredTransactionsRecursively stamp: 'fr 11/16/2020 04:03:15'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioHasNoTransactionWhenHasNoAccounts stamp: 'fr 11/16/2020 04:03:15'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTransactionsIncludesAllItsAccountsTransactions stamp: 'fr 11/16/2020 04:03:15'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioTransactionsAreCalculatedRecursively stamp: 'fr 11/16/2020 04:03:15'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCanNotIncludeTheSameAccountMoreThanOnce stamp: 'fr 11/16/2020 04:03:15'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCanNotIncludeAccountOfItsPortfolios stamp: 'fr 11/16/2020 04:03:15'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioCanNotIncludeItself stamp: 'fr 11/16/2020 04:03:15'!
PASSED!

!testRun: #PortfolioTest #test13ComposedPortfolioCanNotHaveParentPortfolioAccount stamp: 'fr 11/16/2020 04:03:15'!
PASSED!

!testRun: #PortfolioTest #test14ComposedPortfolioCanNotHaveAccountOfAnyRootParentRecursively stamp: 'fr 11/16/2020 04:03:15'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotIncludeAnyOfTheComposedAccountOfPortfolioToAdd stamp: 'fr 11/16/2020 04:03:15'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'fr 11/16/2020 04:03:15'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'fr 11/16/2020 04:03:15'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'fr 11/16/2020 04:03:15'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'fr 11/16/2020 04:03:15'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'fr 11/16/2020 04:03:15'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'fr 11/16/2020 04:03:15'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'fr 11/16/2020 04:03:15'!
PASSED!

!testRun: #TransferTest #test01TransferMovesMoneyAffectingBalancesAsExpected stamp: 'fr 11/16/2020 04:03:15'!
PASSED!

!testRun: #TransferTest #test02AccountsThatParticipateInTheTransferRegisterTheCorrespondingLeg stamp: 'fr 11/16/2020 04:03:15'!
PASSED!

!testRun: #TransferTest #test03LegsKnowTheirComplementaryLegThroughTheTransfer stamp: 'fr 11/16/2020 04:03:15'!
PASSED!

!testRun: #TransferTest #test04TransferValueCanNotBeZero stamp: 'fr 11/16/2020 04:03:15'!
PASSED!

!testRun: #TransferTest #test05TransferValueCanNotBeNegative stamp: 'fr 11/16/2020 04:03:15'!
PASSED!

!testRun: #TransferTest #test06TransferCanNotMoveMoneyFromAnAccountToItself stamp: 'fr 11/16/2020 04:03:15'!
PASSED!

----QUIT----(16 November 2020 04:04:01) CuisUniversity-4384.image priorSource: 18435651!

----STARTUP---- (16 November 2020 12:54:12) as /home/fede/Documentos/Facultad/Inge1/Cuises/linux64/CuisUniversity-4384.image!

!AccountReporterTest methodsFor: 'tests - account summary' stamp: 'fr 11/16/2020 13:00:34'!
createAccountsWith: anAccountCreationBlock perform: aTransactionBlock assertTransactionIsReflectedWith: aTransactionString

	anAccountCreationBlock value.	
	
	aTransactionBlock value.
	
	self  assert: reporter accountSummary 
		equals: (OrderedCollection with: aTransactionString with: 'Balance = 100')! !
!AccountReporterTest methodsFor: 'tests - account summary' stamp: 'fr 11/16/2020 13:04:52' prior: 50905141!
test02AccountSummaryShouldReflectDepositsOnAccounts
		
	self  createAccountsWith: [self createNewAccountAndSummaryReporterForIt] 
		perform: [	Deposit register: 100 on: account] 
		assertTransactionIsReflectedWith: 'Dep�sito por 100.'! !

!testRun: #AccountReporterTest #test02AccountSummaryShouldReflectDepositsOnAccounts stamp: 'fr 11/16/2020 13:04:53'!
PASSED!

!testRun: #AccountReporterTest #test01AccountSummaryForAccountWithNoTransactionsShouldJustShowBalanceZero stamp: 'fr 11/16/2020 13:04:53'!
PASSED!

!testRun: #AccountReporterTest #test02AccountSummaryShouldReflectDepositsOnAccounts stamp: 'fr 11/16/2020 13:04:53'!
PASSED!

!testRun: #AccountReporterTest #test03AccountSummaryShouldReflectWithdrawsOnAccounts stamp: 'fr 11/16/2020 13:04:53'!
PASSED!

!testRun: #AccountReporterTest #test04AccountSummaryShouldReflectOutgoingTransfersOnAccounts stamp: 'fr 11/16/2020 13:04:53'!
PASSED!

!testRun: #AccountReporterTest #test05AccountSummaryShouldReflectIncomingTransfersOnAccounts stamp: 'fr 11/16/2020 13:04:53'!
PASSED!

!testRun: #AccountReporterTest #test06AccountSummaryForPortfolioWithNoTransactionsShouldJustShowBalanceZero stamp: 'fr 11/16/2020 13:04:53'!
PASSED!

!testRun: #AccountReporterTest #test07AccountSummaryShouldReflectDepositsOnPortfoliosWithAccounts stamp: 'fr 11/16/2020 13:04:53'!
PASSED!

!testRun: #AccountReporterTest #test08AccountSummaryShouldReflectWithdrawsOnPortfoliosWithAccounts stamp: 'fr 11/16/2020 13:04:53'!
PASSED!

!testRun: #AccountReporterTest #test09AccountSummaryShouldReflectOutgoingAndIncomingTransfersOnPortfoliosWithAccounts stamp: 'fr 11/16/2020 13:04:53'!
PASSED!

!testRun: #AccountReporterTest #test10AccountSummaryShouldReflectDepositsOnPortfoliosWithPortfolios stamp: 'fr 11/16/2020 13:04:53'!
PASSED!

!testRun: #AccountReporterTest #test11AccountSummaryShouldReflectWithdrawsOnPortfoliosWithPortfolios stamp: 'fr 11/16/2020 13:04:53'!
PASSED!

!testRun: #AccountReporterTest #test12AccountSummaryShouldReflectOutgoingAndIncomingTransfersOnPortfoliosWithPortfoliosAndAccounts stamp: 'fr 11/16/2020 13:04:53'!
PASSED!

!testRun: #AccountReporterTest #test13NetTransferForAccountWithNoTransactionsShouldBeZero stamp: 'fr 11/16/2020 13:04:53'!
PASSED!

!testRun: #AccountReporterTest #test14NetTransferForAccountWithAnOutgoingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 13:04:53'!
PASSED!

!testRun: #AccountReporterTest #test15NetTransferForAccountWithAnIncomingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 13:04:53'!
PASSED!

!testRun: #AccountReporterTest #test16NetTransferForAccountShouldNotReflectDeposits stamp: 'fr 11/16/2020 13:04:53'!
PASSED!

!testRun: #AccountReporterTest #test17NetTransferForAccountShouldNotReflectWithdraws stamp: 'fr 11/16/2020 13:04:53'!
PASSED!

!testRun: #AccountReporterTest #test18NetTransferForPortfolioWithNoTransactionsShouldBeZero stamp: 'fr 11/16/2020 13:04:53'!
PASSED!

!testRun: #AccountReporterTest #test19NetTransferForPortfolioWithAnOutgoingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 13:04:53'!
PASSED!

!testRun: #AccountReporterTest #test20NetTransferForPortfolioWithAnIncomingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 13:04:53'!
PASSED!

!testRun: #AccountReporterTest #test21NetTransferForPortfolioShouldNotReflectDeposits stamp: 'fr 11/16/2020 13:04:53'!
PASSED!

!testRun: #AccountReporterTest #test22NetTransferForPortfolioShouldNotReflectWithdraws stamp: 'fr 11/16/2020 13:04:53'!
PASSED!

!testRun: #AccountReporterTest #test23NetTransferForPortfoliosWithPortfoliosShouldReflectOutgoingAndIncomingTransfers stamp: 'fr 11/16/2020 13:04:53'!
PASSED!

!testRun: #AccountReporterTest #test24NetTransferForPortfoliosWithPortfoliosShouldNotRelfectDepositsOrWithdraws stamp: 'fr 11/16/2020 13:04:53'!
PASSED!
!AccountReporterTest methodsFor: 'tests - account summary' stamp: 'fr 11/16/2020 13:05:31'!
createAccountsWith: anAccountCreationBlock perform: aTransactionBlock assertTransactionIsReflectedWith: aTransactionString and: aBalanceString

	anAccountCreationBlock value.	
	
	aTransactionBlock value.
	
	self  assert: reporter accountSummary 
		equals: (OrderedCollection with: aTransactionString with: aBalanceString)! !

!methodRemoval: AccountReporterTest #createAccountsWith:perform:assertTransactionIsReflectedWith: stamp: 'fr 11/16/2020 13:05:38'!
createAccountsWith: anAccountCreationBlock perform: aTransactionBlock assertTransactionIsReflectedWith: aTransactionString

	anAccountCreationBlock value.	
	
	aTransactionBlock value.
	
	self  assert: reporter accountSummary 
		equals: (OrderedCollection with: aTransactionString with: 'Balance = 100')!
!AccountReporterTest methodsFor: 'tests - account summary' stamp: 'fr 11/16/2020 13:05:47' prior: 50908032!
test02AccountSummaryShouldReflectDepositsOnAccounts
		
	self  createAccountsWith: [self createNewAccountAndSummaryReporterForIt] 
		perform: [	Deposit register: 100 on: account] 
		assertTransactionIsReflectedWith: 'Dep�sito por 100.' and: 'Balance = 100'! !

!testRun: #AccountReporterTest #test01AccountSummaryForAccountWithNoTransactionsShouldJustShowBalanceZero stamp: 'fr 11/16/2020 13:05:50'!
PASSED!

!testRun: #AccountReporterTest #test01AccountSummaryForAccountWithNoTransactionsShouldJustShowBalanceZero stamp: 'fr 11/16/2020 13:05:50'!
PASSED!

!testRun: #AccountReporterTest #test02AccountSummaryShouldReflectDepositsOnAccounts stamp: 'fr 11/16/2020 13:05:50'!
PASSED!

!testRun: #AccountReporterTest #test03AccountSummaryShouldReflectWithdrawsOnAccounts stamp: 'fr 11/16/2020 13:05:50'!
PASSED!

!testRun: #AccountReporterTest #test04AccountSummaryShouldReflectOutgoingTransfersOnAccounts stamp: 'fr 11/16/2020 13:05:50'!
PASSED!

!testRun: #AccountReporterTest #test05AccountSummaryShouldReflectIncomingTransfersOnAccounts stamp: 'fr 11/16/2020 13:05:50'!
PASSED!

!testRun: #AccountReporterTest #test06AccountSummaryForPortfolioWithNoTransactionsShouldJustShowBalanceZero stamp: 'fr 11/16/2020 13:05:50'!
PASSED!

!testRun: #AccountReporterTest #test07AccountSummaryShouldReflectDepositsOnPortfoliosWithAccounts stamp: 'fr 11/16/2020 13:05:50'!
PASSED!

!testRun: #AccountReporterTest #test08AccountSummaryShouldReflectWithdrawsOnPortfoliosWithAccounts stamp: 'fr 11/16/2020 13:05:50'!
PASSED!

!testRun: #AccountReporterTest #test09AccountSummaryShouldReflectOutgoingAndIncomingTransfersOnPortfoliosWithAccounts stamp: 'fr 11/16/2020 13:05:50'!
PASSED!

!testRun: #AccountReporterTest #test10AccountSummaryShouldReflectDepositsOnPortfoliosWithPortfolios stamp: 'fr 11/16/2020 13:05:50'!
PASSED!

!testRun: #AccountReporterTest #test11AccountSummaryShouldReflectWithdrawsOnPortfoliosWithPortfolios stamp: 'fr 11/16/2020 13:05:50'!
PASSED!

!testRun: #AccountReporterTest #test12AccountSummaryShouldReflectOutgoingAndIncomingTransfersOnPortfoliosWithPortfoliosAndAccounts stamp: 'fr 11/16/2020 13:05:50'!
PASSED!

!testRun: #AccountReporterTest #test13NetTransferForAccountWithNoTransactionsShouldBeZero stamp: 'fr 11/16/2020 13:05:50'!
PASSED!

!testRun: #AccountReporterTest #test14NetTransferForAccountWithAnOutgoingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 13:05:50'!
PASSED!

!testRun: #AccountReporterTest #test15NetTransferForAccountWithAnIncomingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 13:05:50'!
PASSED!

!testRun: #AccountReporterTest #test16NetTransferForAccountShouldNotReflectDeposits stamp: 'fr 11/16/2020 13:05:50'!
PASSED!

!testRun: #AccountReporterTest #test17NetTransferForAccountShouldNotReflectWithdraws stamp: 'fr 11/16/2020 13:05:50'!
PASSED!

!testRun: #AccountReporterTest #test18NetTransferForPortfolioWithNoTransactionsShouldBeZero stamp: 'fr 11/16/2020 13:05:50'!
PASSED!

!testRun: #AccountReporterTest #test19NetTransferForPortfolioWithAnOutgoingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 13:05:50'!
PASSED!

!testRun: #AccountReporterTest #test20NetTransferForPortfolioWithAnIncomingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 13:05:50'!
PASSED!

!testRun: #AccountReporterTest #test21NetTransferForPortfolioShouldNotReflectDeposits stamp: 'fr 11/16/2020 13:05:50'!
PASSED!

!testRun: #AccountReporterTest #test22NetTransferForPortfolioShouldNotReflectWithdraws stamp: 'fr 11/16/2020 13:05:50'!
PASSED!

!testRun: #AccountReporterTest #test23NetTransferForPortfoliosWithPortfoliosShouldReflectOutgoingAndIncomingTransfers stamp: 'fr 11/16/2020 13:05:50'!
PASSED!

!testRun: #AccountReporterTest #test24NetTransferForPortfoliosWithPortfoliosShouldNotRelfectDepositsOrWithdraws stamp: 'fr 11/16/2020 13:05:50'!
PASSED!
!AccountReporterTest methodsFor: 'tests - account summary' stamp: 'fr 11/16/2020 13:05:57' prior: 50908181!
test02AccountSummaryShouldReflectDepositsOnAccounts
		
	self  createAccountsWith: [self createNewAccountAndSummaryReporterForIt] 
		perform: [	Deposit register: 100 on: account] 
		assertTransactionIsReflectedWith: 'Dep�sito por 100.' 
		and: 'Balance = 100'! !
!AccountReporterTest methodsFor: 'tests - account summary' stamp: 'fr 11/16/2020 13:06:31' prior: 50905284!
test03AccountSummaryShouldReflectWithdrawsOnAccounts
	
	self createNewAccountAndSummaryReporterForIt.
	
	Withdraw register: 100 on: account. 
	
	self  assert: reporter accountSummary 
		equals: (OrderedCollection with: 'Extracci�n por 100.' with: 'Balance = -100').
		
			
	self  createAccountsWith: [self createNewAccountAndSummaryReporterForIt] 
		perform: [	Withdraw register: 100 on: account] 
		assertTransactionIsReflectedWith: 'Extracci�n por 100.' 
		and: 'Balance = -100'! !
!AccountReporterTest methodsFor: 'tests - account summary' stamp: 'fr 11/16/2020 13:06:35' prior: 50908316!
test03AccountSummaryShouldReflectWithdrawsOnAccounts
			
	self  createAccountsWith: [self createNewAccountAndSummaryReporterForIt] 
		perform: [	Withdraw register: 100 on: account] 
		assertTransactionIsReflectedWith: 'Extracci�n por 100.' 
		and: 'Balance = -100'! !

!testRun: #AccountReporterTest #test03AccountSummaryShouldReflectWithdrawsOnAccounts stamp: 'fr 11/16/2020 13:06:36'!
PASSED!

!testRun: #AccountReporterTest #test01AccountSummaryForAccountWithNoTransactionsShouldJustShowBalanceZero stamp: 'fr 11/16/2020 13:06:36'!
PASSED!

!testRun: #AccountReporterTest #test02AccountSummaryShouldReflectDepositsOnAccounts stamp: 'fr 11/16/2020 13:06:36'!
PASSED!

!testRun: #AccountReporterTest #test03AccountSummaryShouldReflectWithdrawsOnAccounts stamp: 'fr 11/16/2020 13:06:36'!
PASSED!

!testRun: #AccountReporterTest #test04AccountSummaryShouldReflectOutgoingTransfersOnAccounts stamp: 'fr 11/16/2020 13:06:36'!
PASSED!

!testRun: #AccountReporterTest #test05AccountSummaryShouldReflectIncomingTransfersOnAccounts stamp: 'fr 11/16/2020 13:06:36'!
PASSED!

!testRun: #AccountReporterTest #test06AccountSummaryForPortfolioWithNoTransactionsShouldJustShowBalanceZero stamp: 'fr 11/16/2020 13:06:36'!
PASSED!

!testRun: #AccountReporterTest #test07AccountSummaryShouldReflectDepositsOnPortfoliosWithAccounts stamp: 'fr 11/16/2020 13:06:36'!
PASSED!

!testRun: #AccountReporterTest #test08AccountSummaryShouldReflectWithdrawsOnPortfoliosWithAccounts stamp: 'fr 11/16/2020 13:06:36'!
PASSED!

!testRun: #AccountReporterTest #test09AccountSummaryShouldReflectOutgoingAndIncomingTransfersOnPortfoliosWithAccounts stamp: 'fr 11/16/2020 13:06:36'!
PASSED!

!testRun: #AccountReporterTest #test10AccountSummaryShouldReflectDepositsOnPortfoliosWithPortfolios stamp: 'fr 11/16/2020 13:06:36'!
PASSED!

!testRun: #AccountReporterTest #test11AccountSummaryShouldReflectWithdrawsOnPortfoliosWithPortfolios stamp: 'fr 11/16/2020 13:06:36'!
PASSED!

!testRun: #AccountReporterTest #test12AccountSummaryShouldReflectOutgoingAndIncomingTransfersOnPortfoliosWithPortfoliosAndAccounts stamp: 'fr 11/16/2020 13:06:36'!
PASSED!

!testRun: #AccountReporterTest #test13NetTransferForAccountWithNoTransactionsShouldBeZero stamp: 'fr 11/16/2020 13:06:36'!
PASSED!

!testRun: #AccountReporterTest #test14NetTransferForAccountWithAnOutgoingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 13:06:36'!
PASSED!

!testRun: #AccountReporterTest #test15NetTransferForAccountWithAnIncomingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 13:06:36'!
PASSED!

!testRun: #AccountReporterTest #test16NetTransferForAccountShouldNotReflectDeposits stamp: 'fr 11/16/2020 13:06:36'!
PASSED!

!testRun: #AccountReporterTest #test17NetTransferForAccountShouldNotReflectWithdraws stamp: 'fr 11/16/2020 13:06:36'!
PASSED!

!testRun: #AccountReporterTest #test18NetTransferForPortfolioWithNoTransactionsShouldBeZero stamp: 'fr 11/16/2020 13:06:36'!
PASSED!

!testRun: #AccountReporterTest #test19NetTransferForPortfolioWithAnOutgoingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 13:06:36'!
PASSED!

!testRun: #AccountReporterTest #test20NetTransferForPortfolioWithAnIncomingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 13:06:36'!
PASSED!

!testRun: #AccountReporterTest #test21NetTransferForPortfolioShouldNotReflectDeposits stamp: 'fr 11/16/2020 13:06:36'!
PASSED!

!testRun: #AccountReporterTest #test22NetTransferForPortfolioShouldNotReflectWithdraws stamp: 'fr 11/16/2020 13:06:36'!
PASSED!

!testRun: #AccountReporterTest #test23NetTransferForPortfoliosWithPortfoliosShouldReflectOutgoingAndIncomingTransfers stamp: 'fr 11/16/2020 13:06:36'!
PASSED!

!testRun: #AccountReporterTest #test24NetTransferForPortfoliosWithPortfoliosShouldNotRelfectDepositsOrWithdraws stamp: 'fr 11/16/2020 13:06:36'!
PASSED!
!AccountReporterTest methodsFor: 'tests - account summary' stamp: 'fr 11/16/2020 13:07:34' prior: 50905393!
test04AccountSummaryShouldReflectOutgoingTransfersOnAccounts	
		
	self  createAccountsWith: [self createNewAccountsAndSummaryReporterForOne] 
		perform: [	Transfer move: 100 from: account to: anotherAccount] 
		assertTransactionIsReflectedWith: 'Salida por transferencia de 100.' 
		and: 'Balance = -100'! !

!testRun: #AccountReporterTest #test04AccountSummaryShouldReflectOutgoingTransfersOnAccounts stamp: 'fr 11/16/2020 13:07:35'!
PASSED!

!testRun: #AccountReporterTest #test01AccountSummaryForAccountWithNoTransactionsShouldJustShowBalanceZero stamp: 'fr 11/16/2020 13:07:35'!
PASSED!

!testRun: #AccountReporterTest #test02AccountSummaryShouldReflectDepositsOnAccounts stamp: 'fr 11/16/2020 13:07:35'!
PASSED!

!testRun: #AccountReporterTest #test03AccountSummaryShouldReflectWithdrawsOnAccounts stamp: 'fr 11/16/2020 13:07:35'!
PASSED!

!testRun: #AccountReporterTest #test04AccountSummaryShouldReflectOutgoingTransfersOnAccounts stamp: 'fr 11/16/2020 13:07:35'!
PASSED!

!testRun: #AccountReporterTest #test05AccountSummaryShouldReflectIncomingTransfersOnAccounts stamp: 'fr 11/16/2020 13:07:35'!
PASSED!

!testRun: #AccountReporterTest #test06AccountSummaryForPortfolioWithNoTransactionsShouldJustShowBalanceZero stamp: 'fr 11/16/2020 13:07:35'!
PASSED!

!testRun: #AccountReporterTest #test07AccountSummaryShouldReflectDepositsOnPortfoliosWithAccounts stamp: 'fr 11/16/2020 13:07:35'!
PASSED!

!testRun: #AccountReporterTest #test08AccountSummaryShouldReflectWithdrawsOnPortfoliosWithAccounts stamp: 'fr 11/16/2020 13:07:35'!
PASSED!

!testRun: #AccountReporterTest #test09AccountSummaryShouldReflectOutgoingAndIncomingTransfersOnPortfoliosWithAccounts stamp: 'fr 11/16/2020 13:07:35'!
PASSED!

!testRun: #AccountReporterTest #test10AccountSummaryShouldReflectDepositsOnPortfoliosWithPortfolios stamp: 'fr 11/16/2020 13:07:35'!
PASSED!

!testRun: #AccountReporterTest #test11AccountSummaryShouldReflectWithdrawsOnPortfoliosWithPortfolios stamp: 'fr 11/16/2020 13:07:35'!
PASSED!

!testRun: #AccountReporterTest #test12AccountSummaryShouldReflectOutgoingAndIncomingTransfersOnPortfoliosWithPortfoliosAndAccounts stamp: 'fr 11/16/2020 13:07:35'!
PASSED!

!testRun: #AccountReporterTest #test13NetTransferForAccountWithNoTransactionsShouldBeZero stamp: 'fr 11/16/2020 13:07:35'!
PASSED!

!testRun: #AccountReporterTest #test14NetTransferForAccountWithAnOutgoingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 13:07:35'!
PASSED!

!testRun: #AccountReporterTest #test15NetTransferForAccountWithAnIncomingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 13:07:35'!
PASSED!

!testRun: #AccountReporterTest #test16NetTransferForAccountShouldNotReflectDeposits stamp: 'fr 11/16/2020 13:07:35'!
PASSED!

!testRun: #AccountReporterTest #test17NetTransferForAccountShouldNotReflectWithdraws stamp: 'fr 11/16/2020 13:07:35'!
PASSED!

!testRun: #AccountReporterTest #test18NetTransferForPortfolioWithNoTransactionsShouldBeZero stamp: 'fr 11/16/2020 13:07:35'!
PASSED!

!testRun: #AccountReporterTest #test19NetTransferForPortfolioWithAnOutgoingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 13:07:35'!
PASSED!

!testRun: #AccountReporterTest #test20NetTransferForPortfolioWithAnIncomingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 13:07:35'!
PASSED!

!testRun: #AccountReporterTest #test21NetTransferForPortfolioShouldNotReflectDeposits stamp: 'fr 11/16/2020 13:07:35'!
PASSED!

!testRun: #AccountReporterTest #test22NetTransferForPortfolioShouldNotReflectWithdraws stamp: 'fr 11/16/2020 13:07:35'!
PASSED!

!testRun: #AccountReporterTest #test23NetTransferForPortfoliosWithPortfoliosShouldReflectOutgoingAndIncomingTransfers stamp: 'fr 11/16/2020 13:07:35'!
PASSED!

!testRun: #AccountReporterTest #test24NetTransferForPortfoliosWithPortfoliosShouldNotRelfectDepositsOrWithdraws stamp: 'fr 11/16/2020 13:07:35'!
PASSED!
!AccountReporterTest methodsFor: 'tests - account summary' stamp: 'fr 11/16/2020 13:08:08' prior: 50905380!
test05AccountSummaryShouldReflectIncomingTransfersOnAccounts		
		
	self  createAccountsWith: [self createNewAccountsAndSummaryReporterForOne] 
		perform: [	Transfer move: 100 from: anotherAccount to: account] 
		assertTransactionIsReflectedWith: 'Entrada por transferencia de 100.' 
		and: 'Balance = -100'! !

!testRun: #AccountReporterTest #test05AccountSummaryShouldReflectIncomingTransfersOnAccounts stamp: 'fr 11/16/2020 13:08:08'!
FAILURE!
!AccountReporterTest methodsFor: 'tests - account summary' stamp: 'fr 11/16/2020 13:08:15' prior: 50908581!
test05AccountSummaryShouldReflectIncomingTransfersOnAccounts		
		
	self  createAccountsWith: [self createNewAccountsAndSummaryReporterForOne] 
		perform: [	Transfer move: 100 from: anotherAccount to: account] 
		assertTransactionIsReflectedWith: 'Entrada por transferencia de 100.' 
		and: 'Balance = 100'! !

!testRun: #AccountReporterTest #test05AccountSummaryShouldReflectIncomingTransfersOnAccounts stamp: 'fr 11/16/2020 13:08:16'!
PASSED!

!testRun: #AccountReporterTest #test01AccountSummaryForAccountWithNoTransactionsShouldJustShowBalanceZero stamp: 'fr 11/16/2020 13:08:16'!
PASSED!

!testRun: #AccountReporterTest #test02AccountSummaryShouldReflectDepositsOnAccounts stamp: 'fr 11/16/2020 13:08:16'!
PASSED!

!testRun: #AccountReporterTest #test03AccountSummaryShouldReflectWithdrawsOnAccounts stamp: 'fr 11/16/2020 13:08:16'!
PASSED!

!testRun: #AccountReporterTest #test04AccountSummaryShouldReflectOutgoingTransfersOnAccounts stamp: 'fr 11/16/2020 13:08:16'!
PASSED!

!testRun: #AccountReporterTest #test05AccountSummaryShouldReflectIncomingTransfersOnAccounts stamp: 'fr 11/16/2020 13:08:16'!
PASSED!

!testRun: #AccountReporterTest #test06AccountSummaryForPortfolioWithNoTransactionsShouldJustShowBalanceZero stamp: 'fr 11/16/2020 13:08:16'!
PASSED!

!testRun: #AccountReporterTest #test07AccountSummaryShouldReflectDepositsOnPortfoliosWithAccounts stamp: 'fr 11/16/2020 13:08:16'!
PASSED!

!testRun: #AccountReporterTest #test08AccountSummaryShouldReflectWithdrawsOnPortfoliosWithAccounts stamp: 'fr 11/16/2020 13:08:16'!
PASSED!

!testRun: #AccountReporterTest #test09AccountSummaryShouldReflectOutgoingAndIncomingTransfersOnPortfoliosWithAccounts stamp: 'fr 11/16/2020 13:08:16'!
PASSED!

!testRun: #AccountReporterTest #test10AccountSummaryShouldReflectDepositsOnPortfoliosWithPortfolios stamp: 'fr 11/16/2020 13:08:16'!
PASSED!

!testRun: #AccountReporterTest #test11AccountSummaryShouldReflectWithdrawsOnPortfoliosWithPortfolios stamp: 'fr 11/16/2020 13:08:16'!
PASSED!

!testRun: #AccountReporterTest #test12AccountSummaryShouldReflectOutgoingAndIncomingTransfersOnPortfoliosWithPortfoliosAndAccounts stamp: 'fr 11/16/2020 13:08:16'!
PASSED!

!testRun: #AccountReporterTest #test13NetTransferForAccountWithNoTransactionsShouldBeZero stamp: 'fr 11/16/2020 13:08:16'!
PASSED!

!testRun: #AccountReporterTest #test14NetTransferForAccountWithAnOutgoingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 13:08:16'!
PASSED!

!testRun: #AccountReporterTest #test15NetTransferForAccountWithAnIncomingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 13:08:16'!
PASSED!

!testRun: #AccountReporterTest #test16NetTransferForAccountShouldNotReflectDeposits stamp: 'fr 11/16/2020 13:08:16'!
PASSED!

!testRun: #AccountReporterTest #test17NetTransferForAccountShouldNotReflectWithdraws stamp: 'fr 11/16/2020 13:08:16'!
PASSED!

!testRun: #AccountReporterTest #test18NetTransferForPortfolioWithNoTransactionsShouldBeZero stamp: 'fr 11/16/2020 13:08:16'!
PASSED!

!testRun: #AccountReporterTest #test19NetTransferForPortfolioWithAnOutgoingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 13:08:16'!
PASSED!

!testRun: #AccountReporterTest #test20NetTransferForPortfolioWithAnIncomingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 13:08:16'!
PASSED!

!testRun: #AccountReporterTest #test21NetTransferForPortfolioShouldNotReflectDeposits stamp: 'fr 11/16/2020 13:08:16'!
PASSED!

!testRun: #AccountReporterTest #test22NetTransferForPortfolioShouldNotReflectWithdraws stamp: 'fr 11/16/2020 13:08:16'!
PASSED!

!testRun: #AccountReporterTest #test23NetTransferForPortfoliosWithPortfoliosShouldReflectOutgoingAndIncomingTransfers stamp: 'fr 11/16/2020 13:08:16'!
PASSED!

!testRun: #AccountReporterTest #test24NetTransferForPortfoliosWithPortfoliosShouldNotRelfectDepositsOrWithdraws stamp: 'fr 11/16/2020 13:08:16'!
PASSED!
!AccountReporterTest methodsFor: 'tests - account summary' stamp: 'fr 11/16/2020 13:08:48' prior: 50905059!
test01AccountSummaryForAccountWithNoTransactionsShouldJustShowBalanceZero

	self createNewAccountAndSummaryReporterForIt.
	
	self  assert: reporter accountSummary 
		equals: (OrderedCollection with: 'Balance = 0').! !
!AccountReporterTest methodsFor: 'tests - account summary' stamp: 'fr 11/16/2020 13:09:36'!
createWith: anAccountCreationBlock perform: aTransactionBlock assertTransactionIsReflectedWith: aTransactionString and: aBalanceString

	anAccountCreationBlock value.	
	
	aTransactionBlock value.
	
	self  assert: reporter accountSummary 
		equals: (OrderedCollection with: aTransactionString with: aBalanceString)! !
!AccountReporterTest methodsFor: 'as yet unclassified' stamp: 'fr 11/16/2020 13:09:36' prior: 50908457!
test04AccountSummaryShouldReflectOutgoingTransfersOnAccounts	
		
	self  createWith: [self createNewAccountsAndSummaryReporterForOne] 
		perform: [	Transfer move: 100 from: account to: anotherAccount] 
		assertTransactionIsReflectedWith: 'Salida por transferencia de 100.' 
		and: 'Balance = -100'! !
!AccountReporterTest methodsFor: 'as yet unclassified' stamp: 'fr 11/16/2020 13:09:36' prior: 50908335!
test03AccountSummaryShouldReflectWithdrawsOnAccounts
			
	self  createWith: [self createNewAccountAndSummaryReporterForIt] 
		perform: [	Withdraw register: 100 on: account] 
		assertTransactionIsReflectedWith: 'Extracci�n por 100.' 
		and: 'Balance = -100'! !
!AccountReporterTest methodsFor: 'as yet unclassified' stamp: 'fr 11/16/2020 13:09:36' prior: 50908304!
test02AccountSummaryShouldReflectDepositsOnAccounts
		
	self  createWith: [self createNewAccountAndSummaryReporterForIt] 
		perform: [	Deposit register: 100 on: account] 
		assertTransactionIsReflectedWith: 'Dep�sito por 100.' 
		and: 'Balance = 100'! !
!AccountReporterTest methodsFor: 'as yet unclassified' stamp: 'fr 11/16/2020 13:09:36' prior: 50908599!
test05AccountSummaryShouldReflectIncomingTransfersOnAccounts		
		
	self  createWith: [self createNewAccountsAndSummaryReporterForOne] 
		perform: [	Transfer move: 100 from: anotherAccount to: account] 
		assertTransactionIsReflectedWith: 'Entrada por transferencia de 100.' 
		and: 'Balance = 100'! !

!methodRemoval: AccountReporterTest #createAccountsWith:perform:assertTransactionIsReflectedWith:and: stamp: 'fr 11/16/2020 13:09:36'!
createAccountsWith: anAccountCreationBlock perform: aTransactionBlock assertTransactionIsReflectedWith: aTransactionString and: aBalanceString

	anAccountCreationBlock value.	
	
	aTransactionBlock value.
	
	self  assert: reporter accountSummary 
		equals: (OrderedCollection with: aTransactionString with: aBalanceString)!

!testRun: #AccountReporterTest #test03AccountSummaryShouldReflectWithdrawsOnAccounts stamp: 'fr 11/16/2020 13:09:40'!
PASSED!

!testRun: #AccountReporterTest #test03AccountSummaryShouldReflectWithdrawsOnAccounts stamp: 'fr 11/16/2020 13:09:42'!
PASSED!

!testRun: #AccountReporterTest #test01AccountSummaryForAccountWithNoTransactionsShouldJustShowBalanceZero stamp: 'fr 11/16/2020 13:09:42'!
PASSED!

!testRun: #AccountReporterTest #test02AccountSummaryShouldReflectDepositsOnAccounts stamp: 'fr 11/16/2020 13:09:42'!
PASSED!

!testRun: #AccountReporterTest #test03AccountSummaryShouldReflectWithdrawsOnAccounts stamp: 'fr 11/16/2020 13:09:42'!
PASSED!

!testRun: #AccountReporterTest #test04AccountSummaryShouldReflectOutgoingTransfersOnAccounts stamp: 'fr 11/16/2020 13:09:42'!
PASSED!

!testRun: #AccountReporterTest #test05AccountSummaryShouldReflectIncomingTransfersOnAccounts stamp: 'fr 11/16/2020 13:09:42'!
PASSED!

!testRun: #AccountReporterTest #test06AccountSummaryForPortfolioWithNoTransactionsShouldJustShowBalanceZero stamp: 'fr 11/16/2020 13:09:42'!
PASSED!

!testRun: #AccountReporterTest #test07AccountSummaryShouldReflectDepositsOnPortfoliosWithAccounts stamp: 'fr 11/16/2020 13:09:42'!
PASSED!

!testRun: #AccountReporterTest #test08AccountSummaryShouldReflectWithdrawsOnPortfoliosWithAccounts stamp: 'fr 11/16/2020 13:09:42'!
PASSED!

!testRun: #AccountReporterTest #test09AccountSummaryShouldReflectOutgoingAndIncomingTransfersOnPortfoliosWithAccounts stamp: 'fr 11/16/2020 13:09:42'!
PASSED!

!testRun: #AccountReporterTest #test10AccountSummaryShouldReflectDepositsOnPortfoliosWithPortfolios stamp: 'fr 11/16/2020 13:09:42'!
PASSED!

!testRun: #AccountReporterTest #test11AccountSummaryShouldReflectWithdrawsOnPortfoliosWithPortfolios stamp: 'fr 11/16/2020 13:09:42'!
PASSED!

!testRun: #AccountReporterTest #test12AccountSummaryShouldReflectOutgoingAndIncomingTransfersOnPortfoliosWithPortfoliosAndAccounts stamp: 'fr 11/16/2020 13:09:42'!
PASSED!

!testRun: #AccountReporterTest #test13NetTransferForAccountWithNoTransactionsShouldBeZero stamp: 'fr 11/16/2020 13:09:42'!
PASSED!

!testRun: #AccountReporterTest #test14NetTransferForAccountWithAnOutgoingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 13:09:42'!
PASSED!

!testRun: #AccountReporterTest #test15NetTransferForAccountWithAnIncomingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 13:09:42'!
PASSED!

!testRun: #AccountReporterTest #test16NetTransferForAccountShouldNotReflectDeposits stamp: 'fr 11/16/2020 13:09:42'!
PASSED!

!testRun: #AccountReporterTest #test17NetTransferForAccountShouldNotReflectWithdraws stamp: 'fr 11/16/2020 13:09:42'!
PASSED!

!testRun: #AccountReporterTest #test18NetTransferForPortfolioWithNoTransactionsShouldBeZero stamp: 'fr 11/16/2020 13:09:42'!
PASSED!

!testRun: #AccountReporterTest #test19NetTransferForPortfolioWithAnOutgoingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 13:09:42'!
PASSED!

!testRun: #AccountReporterTest #test20NetTransferForPortfolioWithAnIncomingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 13:09:42'!
PASSED!

!testRun: #AccountReporterTest #test21NetTransferForPortfolioShouldNotReflectDeposits stamp: 'fr 11/16/2020 13:09:42'!
PASSED!

!testRun: #AccountReporterTest #test22NetTransferForPortfolioShouldNotReflectWithdraws stamp: 'fr 11/16/2020 13:09:42'!
PASSED!

!testRun: #AccountReporterTest #test23NetTransferForPortfoliosWithPortfoliosShouldReflectOutgoingAndIncomingTransfers stamp: 'fr 11/16/2020 13:09:42'!
PASSED!

!testRun: #AccountReporterTest #test24NetTransferForPortfoliosWithPortfoliosShouldNotRelfectDepositsOrWithdraws stamp: 'fr 11/16/2020 13:09:42'!
PASSED!
!AccountReporterTest methodsFor: 'tests - account summary' stamp: 'fr 11/16/2020 13:09:59' prior: 50908733!
createWith: aCreationBlock perform: aTransactionBlock assertTransactionIsReflectedWith: aTransactionString and: aBalanceString

	aCreationBlock value.	
	
	aTransactionBlock value.
	
	self  assert: reporter accountSummary 
		equals: (OrderedCollection with: aTransactionString with: aBalanceString)! !

!testRun: #AccountReporterTest #test01AccountSummaryForAccountWithNoTransactionsShouldJustShowBalanceZero stamp: 'fr 11/16/2020 13:10:01'!
PASSED!

!testRun: #AccountReporterTest #test02AccountSummaryShouldReflectDepositsOnAccounts stamp: 'fr 11/16/2020 13:10:01'!
PASSED!

!testRun: #AccountReporterTest #test03AccountSummaryShouldReflectWithdrawsOnAccounts stamp: 'fr 11/16/2020 13:10:01'!
PASSED!

!testRun: #AccountReporterTest #test04AccountSummaryShouldReflectOutgoingTransfersOnAccounts stamp: 'fr 11/16/2020 13:10:01'!
PASSED!

!testRun: #AccountReporterTest #test05AccountSummaryShouldReflectIncomingTransfersOnAccounts stamp: 'fr 11/16/2020 13:10:01'!
PASSED!

!testRun: #AccountReporterTest #test06AccountSummaryForPortfolioWithNoTransactionsShouldJustShowBalanceZero stamp: 'fr 11/16/2020 13:10:01'!
PASSED!

!testRun: #AccountReporterTest #test07AccountSummaryShouldReflectDepositsOnPortfoliosWithAccounts stamp: 'fr 11/16/2020 13:10:01'!
PASSED!

!testRun: #AccountReporterTest #test08AccountSummaryShouldReflectWithdrawsOnPortfoliosWithAccounts stamp: 'fr 11/16/2020 13:10:01'!
PASSED!

!testRun: #AccountReporterTest #test09AccountSummaryShouldReflectOutgoingAndIncomingTransfersOnPortfoliosWithAccounts stamp: 'fr 11/16/2020 13:10:01'!
PASSED!

!testRun: #AccountReporterTest #test10AccountSummaryShouldReflectDepositsOnPortfoliosWithPortfolios stamp: 'fr 11/16/2020 13:10:01'!
PASSED!

!testRun: #AccountReporterTest #test11AccountSummaryShouldReflectWithdrawsOnPortfoliosWithPortfolios stamp: 'fr 11/16/2020 13:10:01'!
PASSED!

!testRun: #AccountReporterTest #test12AccountSummaryShouldReflectOutgoingAndIncomingTransfersOnPortfoliosWithPortfoliosAndAccounts stamp: 'fr 11/16/2020 13:10:01'!
PASSED!

!testRun: #AccountReporterTest #test13NetTransferForAccountWithNoTransactionsShouldBeZero stamp: 'fr 11/16/2020 13:10:01'!
PASSED!

!testRun: #AccountReporterTest #test14NetTransferForAccountWithAnOutgoingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 13:10:01'!
PASSED!

!testRun: #AccountReporterTest #test15NetTransferForAccountWithAnIncomingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 13:10:01'!
PASSED!

!testRun: #AccountReporterTest #test16NetTransferForAccountShouldNotReflectDeposits stamp: 'fr 11/16/2020 13:10:01'!
PASSED!

!testRun: #AccountReporterTest #test17NetTransferForAccountShouldNotReflectWithdraws stamp: 'fr 11/16/2020 13:10:01'!
PASSED!

!testRun: #AccountReporterTest #test18NetTransferForPortfolioWithNoTransactionsShouldBeZero stamp: 'fr 11/16/2020 13:10:01'!
PASSED!

!testRun: #AccountReporterTest #test19NetTransferForPortfolioWithAnOutgoingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 13:10:01'!
PASSED!

!testRun: #AccountReporterTest #test20NetTransferForPortfolioWithAnIncomingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 13:10:01'!
PASSED!

!testRun: #AccountReporterTest #test21NetTransferForPortfolioShouldNotReflectDeposits stamp: 'fr 11/16/2020 13:10:01'!
PASSED!

!testRun: #AccountReporterTest #test22NetTransferForPortfolioShouldNotReflectWithdraws stamp: 'fr 11/16/2020 13:10:01'!
PASSED!

!testRun: #AccountReporterTest #test23NetTransferForPortfoliosWithPortfoliosShouldReflectOutgoingAndIncomingTransfers stamp: 'fr 11/16/2020 13:10:01'!
PASSED!

!testRun: #AccountReporterTest #test24NetTransferForPortfoliosWithPortfoliosShouldNotRelfectDepositsOrWithdraws stamp: 'fr 11/16/2020 13:10:01'!
PASSED!
!AccountReporterTest methodsFor: 'tests - account summary' stamp: 'fr 11/16/2020 13:11:08' prior: 50905128!
test07AccountSummaryShouldReflectDepositsOnPortfoliosWithAccounts
		
	self  createWith: [self createSummaryReporterForPortfolioWithAccount] 
		perform: [Deposit register: 100 on: account] 
		assertTransactionIsReflectedWith: 'Dep�sito por 100.' 
		and: 'Balance = 100'! !

!testRun: #AccountReporterTest #test07AccountSummaryShouldReflectDepositsOnPortfoliosWithAccounts stamp: 'fr 11/16/2020 13:11:09'!
PASSED!

!testRun: #AccountReporterTest #test01AccountSummaryForAccountWithNoTransactionsShouldJustShowBalanceZero stamp: 'fr 11/16/2020 13:11:09'!
PASSED!

!testRun: #AccountReporterTest #test02AccountSummaryShouldReflectDepositsOnAccounts stamp: 'fr 11/16/2020 13:11:09'!
PASSED!

!testRun: #AccountReporterTest #test03AccountSummaryShouldReflectWithdrawsOnAccounts stamp: 'fr 11/16/2020 13:11:09'!
PASSED!

!testRun: #AccountReporterTest #test04AccountSummaryShouldReflectOutgoingTransfersOnAccounts stamp: 'fr 11/16/2020 13:11:09'!
PASSED!

!testRun: #AccountReporterTest #test05AccountSummaryShouldReflectIncomingTransfersOnAccounts stamp: 'fr 11/16/2020 13:11:09'!
PASSED!

!testRun: #AccountReporterTest #test06AccountSummaryForPortfolioWithNoTransactionsShouldJustShowBalanceZero stamp: 'fr 11/16/2020 13:11:09'!
PASSED!

!testRun: #AccountReporterTest #test07AccountSummaryShouldReflectDepositsOnPortfoliosWithAccounts stamp: 'fr 11/16/2020 13:11:09'!
PASSED!

!testRun: #AccountReporterTest #test08AccountSummaryShouldReflectWithdrawsOnPortfoliosWithAccounts stamp: 'fr 11/16/2020 13:11:09'!
PASSED!

!testRun: #AccountReporterTest #test09AccountSummaryShouldReflectOutgoingAndIncomingTransfersOnPortfoliosWithAccounts stamp: 'fr 11/16/2020 13:11:09'!
PASSED!

!testRun: #AccountReporterTest #test10AccountSummaryShouldReflectDepositsOnPortfoliosWithPortfolios stamp: 'fr 11/16/2020 13:11:09'!
PASSED!

!testRun: #AccountReporterTest #test11AccountSummaryShouldReflectWithdrawsOnPortfoliosWithPortfolios stamp: 'fr 11/16/2020 13:11:09'!
PASSED!

!testRun: #AccountReporterTest #test12AccountSummaryShouldReflectOutgoingAndIncomingTransfersOnPortfoliosWithPortfoliosAndAccounts stamp: 'fr 11/16/2020 13:11:09'!
PASSED!

!testRun: #AccountReporterTest #test13NetTransferForAccountWithNoTransactionsShouldBeZero stamp: 'fr 11/16/2020 13:11:09'!
PASSED!

!testRun: #AccountReporterTest #test14NetTransferForAccountWithAnOutgoingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 13:11:09'!
PASSED!

!testRun: #AccountReporterTest #test15NetTransferForAccountWithAnIncomingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 13:11:09'!
PASSED!

!testRun: #AccountReporterTest #test16NetTransferForAccountShouldNotReflectDeposits stamp: 'fr 11/16/2020 13:11:09'!
PASSED!

!testRun: #AccountReporterTest #test17NetTransferForAccountShouldNotReflectWithdraws stamp: 'fr 11/16/2020 13:11:09'!
PASSED!

!testRun: #AccountReporterTest #test18NetTransferForPortfolioWithNoTransactionsShouldBeZero stamp: 'fr 11/16/2020 13:11:09'!
PASSED!

!testRun: #AccountReporterTest #test19NetTransferForPortfolioWithAnOutgoingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 13:11:09'!
PASSED!

!testRun: #AccountReporterTest #test20NetTransferForPortfolioWithAnIncomingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 13:11:09'!
PASSED!

!testRun: #AccountReporterTest #test21NetTransferForPortfolioShouldNotReflectDeposits stamp: 'fr 11/16/2020 13:11:09'!
PASSED!

!testRun: #AccountReporterTest #test22NetTransferForPortfolioShouldNotReflectWithdraws stamp: 'fr 11/16/2020 13:11:09'!
PASSED!

!testRun: #AccountReporterTest #test23NetTransferForPortfoliosWithPortfoliosShouldReflectOutgoingAndIncomingTransfers stamp: 'fr 11/16/2020 13:11:09'!
PASSED!

!testRun: #AccountReporterTest #test24NetTransferForPortfoliosWithPortfoliosShouldNotRelfectDepositsOrWithdraws stamp: 'fr 11/16/2020 13:11:09'!
PASSED!

!testRun: #AccountReporterTest #test07AccountSummaryShouldReflectDepositsOnPortfoliosWithAccounts stamp: 'fr 11/16/2020 13:14:17'!
PASSED!

!testRun: #AccountReporterTest #test01AccountSummaryForAccountWithNoTransactionsShouldJustShowBalanceZero stamp: 'fr 11/16/2020 13:14:17'!
PASSED!

!testRun: #AccountReporterTest #test02AccountSummaryShouldReflectDepositsOnAccounts stamp: 'fr 11/16/2020 13:14:17'!
PASSED!

!testRun: #AccountReporterTest #test03AccountSummaryShouldReflectWithdrawsOnAccounts stamp: 'fr 11/16/2020 13:14:17'!
PASSED!

!testRun: #AccountReporterTest #test04AccountSummaryShouldReflectOutgoingTransfersOnAccounts stamp: 'fr 11/16/2020 13:14:17'!
PASSED!

!testRun: #AccountReporterTest #test05AccountSummaryShouldReflectIncomingTransfersOnAccounts stamp: 'fr 11/16/2020 13:14:17'!
PASSED!

!testRun: #AccountReporterTest #test06AccountSummaryForPortfolioWithNoTransactionsShouldJustShowBalanceZero stamp: 'fr 11/16/2020 13:14:17'!
PASSED!

!testRun: #AccountReporterTest #test07AccountSummaryShouldReflectDepositsOnPortfoliosWithAccounts stamp: 'fr 11/16/2020 13:14:17'!
PASSED!

!testRun: #AccountReporterTest #test08AccountSummaryShouldReflectWithdrawsOnPortfoliosWithAccounts stamp: 'fr 11/16/2020 13:14:17'!
PASSED!

!testRun: #AccountReporterTest #test09AccountSummaryShouldReflectOutgoingAndIncomingTransfersOnPortfoliosWithAccounts stamp: 'fr 11/16/2020 13:14:17'!
PASSED!

!testRun: #AccountReporterTest #test10AccountSummaryShouldReflectDepositsOnPortfoliosWithPortfolios stamp: 'fr 11/16/2020 13:14:17'!
PASSED!

!testRun: #AccountReporterTest #test11AccountSummaryShouldReflectWithdrawsOnPortfoliosWithPortfolios stamp: 'fr 11/16/2020 13:14:17'!
PASSED!

!testRun: #AccountReporterTest #test12AccountSummaryShouldReflectOutgoingAndIncomingTransfersOnPortfoliosWithPortfoliosAndAccounts stamp: 'fr 11/16/2020 13:14:17'!
PASSED!

!testRun: #AccountReporterTest #test13NetTransferForAccountWithNoTransactionsShouldBeZero stamp: 'fr 11/16/2020 13:14:17'!
PASSED!

!testRun: #AccountReporterTest #test14NetTransferForAccountWithAnOutgoingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 13:14:17'!
PASSED!

!testRun: #AccountReporterTest #test15NetTransferForAccountWithAnIncomingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 13:14:17'!
PASSED!

!testRun: #AccountReporterTest #test16NetTransferForAccountShouldNotReflectDeposits stamp: 'fr 11/16/2020 13:14:17'!
PASSED!

!testRun: #AccountReporterTest #test17NetTransferForAccountShouldNotReflectWithdraws stamp: 'fr 11/16/2020 13:14:17'!
PASSED!

!testRun: #AccountReporterTest #test18NetTransferForPortfolioWithNoTransactionsShouldBeZero stamp: 'fr 11/16/2020 13:14:17'!
PASSED!

!testRun: #AccountReporterTest #test19NetTransferForPortfolioWithAnOutgoingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 13:14:17'!
PASSED!

!testRun: #AccountReporterTest #test20NetTransferForPortfolioWithAnIncomingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 13:14:17'!
PASSED!

!testRun: #AccountReporterTest #test21NetTransferForPortfolioShouldNotReflectDeposits stamp: 'fr 11/16/2020 13:14:17'!
PASSED!

!testRun: #AccountReporterTest #test22NetTransferForPortfolioShouldNotReflectWithdraws stamp: 'fr 11/16/2020 13:14:17'!
PASSED!

!testRun: #AccountReporterTest #test23NetTransferForPortfoliosWithPortfoliosShouldReflectOutgoingAndIncomingTransfers stamp: 'fr 11/16/2020 13:14:17'!
PASSED!

!testRun: #AccountReporterTest #test24NetTransferForPortfoliosWithPortfoliosShouldNotRelfectDepositsOrWithdraws stamp: 'fr 11/16/2020 13:14:17'!
PASSED!
!AccountReporterTest methodsFor: 'tests - account summary' stamp: 'fr 11/16/2020 13:14:59' prior: 50905046!
test08AccountSummaryShouldReflectWithdrawsOnPortfoliosWithAccounts
		
	self  createWith: [self createSummaryReporterForPortfolioWithAccount] 
		perform: [Withdraw register: 100 on: account] 
		assertTransactionIsReflectedWith: 'Extracci�n por 100.' 
		and: 'Balance = -100'! !

!testRun: #AccountReporterTest #test08AccountSummaryShouldReflectWithdrawsOnPortfoliosWithAccounts stamp: 'fr 11/16/2020 13:14:59'!
PASSED!

!testRun: #AccountReporterTest #test01AccountSummaryForAccountWithNoTransactionsShouldJustShowBalanceZero stamp: 'fr 11/16/2020 13:14:59'!
PASSED!

!testRun: #AccountReporterTest #test02AccountSummaryShouldReflectDepositsOnAccounts stamp: 'fr 11/16/2020 13:14:59'!
PASSED!

!testRun: #AccountReporterTest #test03AccountSummaryShouldReflectWithdrawsOnAccounts stamp: 'fr 11/16/2020 13:14:59'!
PASSED!

!testRun: #AccountReporterTest #test04AccountSummaryShouldReflectOutgoingTransfersOnAccounts stamp: 'fr 11/16/2020 13:14:59'!
PASSED!

!testRun: #AccountReporterTest #test05AccountSummaryShouldReflectIncomingTransfersOnAccounts stamp: 'fr 11/16/2020 13:14:59'!
PASSED!

!testRun: #AccountReporterTest #test06AccountSummaryForPortfolioWithNoTransactionsShouldJustShowBalanceZero stamp: 'fr 11/16/2020 13:14:59'!
PASSED!

!testRun: #AccountReporterTest #test07AccountSummaryShouldReflectDepositsOnPortfoliosWithAccounts stamp: 'fr 11/16/2020 13:14:59'!
PASSED!

!testRun: #AccountReporterTest #test08AccountSummaryShouldReflectWithdrawsOnPortfoliosWithAccounts stamp: 'fr 11/16/2020 13:14:59'!
PASSED!

!testRun: #AccountReporterTest #test09AccountSummaryShouldReflectOutgoingAndIncomingTransfersOnPortfoliosWithAccounts stamp: 'fr 11/16/2020 13:14:59'!
PASSED!

!testRun: #AccountReporterTest #test10AccountSummaryShouldReflectDepositsOnPortfoliosWithPortfolios stamp: 'fr 11/16/2020 13:14:59'!
PASSED!

!testRun: #AccountReporterTest #test11AccountSummaryShouldReflectWithdrawsOnPortfoliosWithPortfolios stamp: 'fr 11/16/2020 13:14:59'!
PASSED!

!testRun: #AccountReporterTest #test12AccountSummaryShouldReflectOutgoingAndIncomingTransfersOnPortfoliosWithPortfoliosAndAccounts stamp: 'fr 11/16/2020 13:14:59'!
PASSED!

!testRun: #AccountReporterTest #test13NetTransferForAccountWithNoTransactionsShouldBeZero stamp: 'fr 11/16/2020 13:14:59'!
PASSED!

!testRun: #AccountReporterTest #test14NetTransferForAccountWithAnOutgoingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 13:14:59'!
PASSED!

!testRun: #AccountReporterTest #test15NetTransferForAccountWithAnIncomingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 13:14:59'!
PASSED!

!testRun: #AccountReporterTest #test16NetTransferForAccountShouldNotReflectDeposits stamp: 'fr 11/16/2020 13:14:59'!
PASSED!

!testRun: #AccountReporterTest #test17NetTransferForAccountShouldNotReflectWithdraws stamp: 'fr 11/16/2020 13:14:59'!
PASSED!

!testRun: #AccountReporterTest #test18NetTransferForPortfolioWithNoTransactionsShouldBeZero stamp: 'fr 11/16/2020 13:14:59'!
PASSED!

!testRun: #AccountReporterTest #test19NetTransferForPortfolioWithAnOutgoingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 13:14:59'!
PASSED!

!testRun: #AccountReporterTest #test20NetTransferForPortfolioWithAnIncomingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 13:14:59'!
PASSED!

!testRun: #AccountReporterTest #test21NetTransferForPortfolioShouldNotReflectDeposits stamp: 'fr 11/16/2020 13:14:59'!
PASSED!

!testRun: #AccountReporterTest #test22NetTransferForPortfolioShouldNotReflectWithdraws stamp: 'fr 11/16/2020 13:14:59'!
PASSED!

!testRun: #AccountReporterTest #test23NetTransferForPortfoliosWithPortfoliosShouldReflectOutgoingAndIncomingTransfers stamp: 'fr 11/16/2020 13:14:59'!
PASSED!

!testRun: #AccountReporterTest #test24NetTransferForPortfoliosWithPortfoliosShouldNotRelfectDepositsOrWithdraws stamp: 'fr 11/16/2020 13:14:59'!
PASSED!
!AccountReporterTest methodsFor: 'tests - account summary' stamp: 'fr 11/16/2020 13:17:12' prior: 50905329!
test10AccountSummaryShouldReflectDepositsOnPortfoliosWithPortfolios
			
	self  createWith: [self createSummaryReporterForPortfolioWithPortfolioWithAccount] 
		perform: [Deposit register: 100 on: account] 
		assertTransactionIsReflectedWith: 'Dep�sito por 100.' 
		and: 'Balance = 100'! !

!testRun: #AccountReporterTest #test10AccountSummaryShouldReflectDepositsOnPortfoliosWithPortfolios stamp: 'fr 11/16/2020 13:17:13'!
PASSED!

!testRun: #AccountReporterTest #test01AccountSummaryForAccountWithNoTransactionsShouldJustShowBalanceZero stamp: 'fr 11/16/2020 13:17:13'!
PASSED!

!testRun: #AccountReporterTest #test02AccountSummaryShouldReflectDepositsOnAccounts stamp: 'fr 11/16/2020 13:17:13'!
PASSED!

!testRun: #AccountReporterTest #test03AccountSummaryShouldReflectWithdrawsOnAccounts stamp: 'fr 11/16/2020 13:17:13'!
PASSED!

!testRun: #AccountReporterTest #test04AccountSummaryShouldReflectOutgoingTransfersOnAccounts stamp: 'fr 11/16/2020 13:17:13'!
PASSED!

!testRun: #AccountReporterTest #test05AccountSummaryShouldReflectIncomingTransfersOnAccounts stamp: 'fr 11/16/2020 13:17:13'!
PASSED!

!testRun: #AccountReporterTest #test06AccountSummaryForPortfolioWithNoTransactionsShouldJustShowBalanceZero stamp: 'fr 11/16/2020 13:17:13'!
PASSED!

!testRun: #AccountReporterTest #test07AccountSummaryShouldReflectDepositsOnPortfoliosWithAccounts stamp: 'fr 11/16/2020 13:17:13'!
PASSED!

!testRun: #AccountReporterTest #test08AccountSummaryShouldReflectWithdrawsOnPortfoliosWithAccounts stamp: 'fr 11/16/2020 13:17:13'!
PASSED!

!testRun: #AccountReporterTest #test09AccountSummaryShouldReflectOutgoingAndIncomingTransfersOnPortfoliosWithAccounts stamp: 'fr 11/16/2020 13:17:13'!
PASSED!

!testRun: #AccountReporterTest #test10AccountSummaryShouldReflectDepositsOnPortfoliosWithPortfolios stamp: 'fr 11/16/2020 13:17:13'!
PASSED!

!testRun: #AccountReporterTest #test11AccountSummaryShouldReflectWithdrawsOnPortfoliosWithPortfolios stamp: 'fr 11/16/2020 13:17:13'!
PASSED!

!testRun: #AccountReporterTest #test12AccountSummaryShouldReflectOutgoingAndIncomingTransfersOnPortfoliosWithPortfoliosAndAccounts stamp: 'fr 11/16/2020 13:17:13'!
PASSED!

!testRun: #AccountReporterTest #test13NetTransferForAccountWithNoTransactionsShouldBeZero stamp: 'fr 11/16/2020 13:17:13'!
PASSED!

!testRun: #AccountReporterTest #test14NetTransferForAccountWithAnOutgoingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 13:17:13'!
PASSED!

!testRun: #AccountReporterTest #test15NetTransferForAccountWithAnIncomingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 13:17:13'!
PASSED!

!testRun: #AccountReporterTest #test16NetTransferForAccountShouldNotReflectDeposits stamp: 'fr 11/16/2020 13:17:13'!
PASSED!

!testRun: #AccountReporterTest #test17NetTransferForAccountShouldNotReflectWithdraws stamp: 'fr 11/16/2020 13:17:13'!
PASSED!

!testRun: #AccountReporterTest #test18NetTransferForPortfolioWithNoTransactionsShouldBeZero stamp: 'fr 11/16/2020 13:17:13'!
PASSED!

!testRun: #AccountReporterTest #test19NetTransferForPortfolioWithAnOutgoingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 13:17:13'!
PASSED!

!testRun: #AccountReporterTest #test20NetTransferForPortfolioWithAnIncomingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 13:17:13'!
PASSED!

!testRun: #AccountReporterTest #test21NetTransferForPortfolioShouldNotReflectDeposits stamp: 'fr 11/16/2020 13:17:13'!
PASSED!

!testRun: #AccountReporterTest #test22NetTransferForPortfolioShouldNotReflectWithdraws stamp: 'fr 11/16/2020 13:17:13'!
PASSED!

!testRun: #AccountReporterTest #test23NetTransferForPortfoliosWithPortfoliosShouldReflectOutgoingAndIncomingTransfers stamp: 'fr 11/16/2020 13:17:13'!
PASSED!

!testRun: #AccountReporterTest #test24NetTransferForPortfoliosWithPortfoliosShouldNotRelfectDepositsOrWithdraws stamp: 'fr 11/16/2020 13:17:13'!
PASSED!
!AccountReporterTest methodsFor: 'tests - account summary' stamp: 'fr 11/16/2020 13:17:48' prior: 50905021!
test11AccountSummaryShouldReflectWithdrawsOnPortfoliosWithPortfolios
		
	self  createWith: [self createSummaryReporterForPortfolioWithPortfolioWithAccount] 
		perform: [Withdraw register: 100 on: account] 
		assertTransactionIsReflectedWith: 'Extracci�n por 100.' 
		and: 'Balance = -100'! !

!testRun: #AccountReporterTest #test11AccountSummaryShouldReflectWithdrawsOnPortfoliosWithPortfolios stamp: 'fr 11/16/2020 13:17:48'!
PASSED!

!testRun: #AccountReporterTest #test01AccountSummaryForAccountWithNoTransactionsShouldJustShowBalanceZero stamp: 'fr 11/16/2020 13:17:48'!
PASSED!

!testRun: #AccountReporterTest #test02AccountSummaryShouldReflectDepositsOnAccounts stamp: 'fr 11/16/2020 13:17:48'!
PASSED!

!testRun: #AccountReporterTest #test03AccountSummaryShouldReflectWithdrawsOnAccounts stamp: 'fr 11/16/2020 13:17:48'!
PASSED!

!testRun: #AccountReporterTest #test04AccountSummaryShouldReflectOutgoingTransfersOnAccounts stamp: 'fr 11/16/2020 13:17:48'!
PASSED!

!testRun: #AccountReporterTest #test05AccountSummaryShouldReflectIncomingTransfersOnAccounts stamp: 'fr 11/16/2020 13:17:48'!
PASSED!

!testRun: #AccountReporterTest #test06AccountSummaryForPortfolioWithNoTransactionsShouldJustShowBalanceZero stamp: 'fr 11/16/2020 13:17:48'!
PASSED!

!testRun: #AccountReporterTest #test07AccountSummaryShouldReflectDepositsOnPortfoliosWithAccounts stamp: 'fr 11/16/2020 13:17:48'!
PASSED!

!testRun: #AccountReporterTest #test08AccountSummaryShouldReflectWithdrawsOnPortfoliosWithAccounts stamp: 'fr 11/16/2020 13:17:48'!
PASSED!

!testRun: #AccountReporterTest #test09AccountSummaryShouldReflectOutgoingAndIncomingTransfersOnPortfoliosWithAccounts stamp: 'fr 11/16/2020 13:17:48'!
PASSED!

!testRun: #AccountReporterTest #test10AccountSummaryShouldReflectDepositsOnPortfoliosWithPortfolios stamp: 'fr 11/16/2020 13:17:48'!
PASSED!

!testRun: #AccountReporterTest #test11AccountSummaryShouldReflectWithdrawsOnPortfoliosWithPortfolios stamp: 'fr 11/16/2020 13:17:48'!
PASSED!

!testRun: #AccountReporterTest #test12AccountSummaryShouldReflectOutgoingAndIncomingTransfersOnPortfoliosWithPortfoliosAndAccounts stamp: 'fr 11/16/2020 13:17:48'!
PASSED!

!testRun: #AccountReporterTest #test13NetTransferForAccountWithNoTransactionsShouldBeZero stamp: 'fr 11/16/2020 13:17:48'!
PASSED!

!testRun: #AccountReporterTest #test14NetTransferForAccountWithAnOutgoingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 13:17:48'!
PASSED!

!testRun: #AccountReporterTest #test15NetTransferForAccountWithAnIncomingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 13:17:48'!
PASSED!

!testRun: #AccountReporterTest #test16NetTransferForAccountShouldNotReflectDeposits stamp: 'fr 11/16/2020 13:17:48'!
PASSED!

!testRun: #AccountReporterTest #test17NetTransferForAccountShouldNotReflectWithdraws stamp: 'fr 11/16/2020 13:17:48'!
PASSED!

!testRun: #AccountReporterTest #test18NetTransferForPortfolioWithNoTransactionsShouldBeZero stamp: 'fr 11/16/2020 13:17:48'!
PASSED!

!testRun: #AccountReporterTest #test19NetTransferForPortfolioWithAnOutgoingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 13:17:48'!
PASSED!

!testRun: #AccountReporterTest #test20NetTransferForPortfolioWithAnIncomingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 13:17:48'!
PASSED!

!testRun: #AccountReporterTest #test21NetTransferForPortfolioShouldNotReflectDeposits stamp: 'fr 11/16/2020 13:17:48'!
PASSED!

!testRun: #AccountReporterTest #test22NetTransferForPortfolioShouldNotReflectWithdraws stamp: 'fr 11/16/2020 13:17:48'!
PASSED!

!testRun: #AccountReporterTest #test23NetTransferForPortfoliosWithPortfoliosShouldReflectOutgoingAndIncomingTransfers stamp: 'fr 11/16/2020 13:17:48'!
PASSED!

!testRun: #AccountReporterTest #test24NetTransferForPortfoliosWithPortfoliosShouldNotRelfectDepositsOrWithdraws stamp: 'fr 11/16/2020 13:17:48'!
PASSED!
!AccountReporterTest methodsFor: 'tests - net transfer' stamp: 'fr 11/16/2020 13:18:00' prior: 50905764!
test13NetTransferForAccountWithNoTransactionsShouldBeZero

	self createNewAccountAndTransferNetReporterForIt.
	
	self assert: reporter transferNet equals: 0! !

!testRun: #AccountReporterTest #test24NetTransferForPortfoliosWithPortfoliosShouldNotRelfectDepositsOrWithdraws stamp: 'fr 11/16/2020 13:22:44'!
PASSED!

!testRun: #AccountReporterTest #test01AccountSummaryForAccountWithNoTransactionsShouldJustShowBalanceZero stamp: 'fr 11/16/2020 13:22:44'!
PASSED!

!testRun: #AccountReporterTest #test02AccountSummaryShouldReflectDepositsOnAccounts stamp: 'fr 11/16/2020 13:22:44'!
PASSED!

!testRun: #AccountReporterTest #test03AccountSummaryShouldReflectWithdrawsOnAccounts stamp: 'fr 11/16/2020 13:22:44'!
PASSED!

!testRun: #AccountReporterTest #test04AccountSummaryShouldReflectOutgoingTransfersOnAccounts stamp: 'fr 11/16/2020 13:22:44'!
PASSED!

!testRun: #AccountReporterTest #test05AccountSummaryShouldReflectIncomingTransfersOnAccounts stamp: 'fr 11/16/2020 13:22:44'!
PASSED!

!testRun: #AccountReporterTest #test06AccountSummaryForPortfolioWithNoTransactionsShouldJustShowBalanceZero stamp: 'fr 11/16/2020 13:22:44'!
PASSED!

!testRun: #AccountReporterTest #test07AccountSummaryShouldReflectDepositsOnPortfoliosWithAccounts stamp: 'fr 11/16/2020 13:22:44'!
PASSED!

!testRun: #AccountReporterTest #test08AccountSummaryShouldReflectWithdrawsOnPortfoliosWithAccounts stamp: 'fr 11/16/2020 13:22:44'!
PASSED!

!testRun: #AccountReporterTest #test09AccountSummaryShouldReflectOutgoingAndIncomingTransfersOnPortfoliosWithAccounts stamp: 'fr 11/16/2020 13:22:44'!
PASSED!

!testRun: #AccountReporterTest #test10AccountSummaryShouldReflectDepositsOnPortfoliosWithPortfolios stamp: 'fr 11/16/2020 13:22:44'!
PASSED!

!testRun: #AccountReporterTest #test11AccountSummaryShouldReflectWithdrawsOnPortfoliosWithPortfolios stamp: 'fr 11/16/2020 13:22:44'!
PASSED!

!testRun: #AccountReporterTest #test12AccountSummaryShouldReflectOutgoingAndIncomingTransfersOnPortfoliosWithPortfoliosAndAccounts stamp: 'fr 11/16/2020 13:22:44'!
PASSED!

!testRun: #AccountReporterTest #test13NetTransferForAccountWithNoTransactionsShouldBeZero stamp: 'fr 11/16/2020 13:22:44'!
PASSED!

!testRun: #AccountReporterTest #test14NetTransferForAccountWithAnOutgoingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 13:22:44'!
PASSED!

!testRun: #AccountReporterTest #test15NetTransferForAccountWithAnIncomingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 13:22:44'!
PASSED!

!testRun: #AccountReporterTest #test16NetTransferForAccountShouldNotReflectDeposits stamp: 'fr 11/16/2020 13:22:44'!
PASSED!

!testRun: #AccountReporterTest #test17NetTransferForAccountShouldNotReflectWithdraws stamp: 'fr 11/16/2020 13:22:44'!
PASSED!

!testRun: #AccountReporterTest #test18NetTransferForPortfolioWithNoTransactionsShouldBeZero stamp: 'fr 11/16/2020 13:22:44'!
PASSED!

!testRun: #AccountReporterTest #test19NetTransferForPortfolioWithAnOutgoingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 13:22:44'!
PASSED!

!testRun: #AccountReporterTest #test20NetTransferForPortfolioWithAnIncomingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 13:22:44'!
PASSED!

!testRun: #AccountReporterTest #test21NetTransferForPortfolioShouldNotReflectDeposits stamp: 'fr 11/16/2020 13:22:44'!
PASSED!

!testRun: #AccountReporterTest #test22NetTransferForPortfolioShouldNotReflectWithdraws stamp: 'fr 11/16/2020 13:22:44'!
PASSED!

!testRun: #AccountReporterTest #test23NetTransferForPortfoliosWithPortfoliosShouldReflectOutgoingAndIncomingTransfers stamp: 'fr 11/16/2020 13:22:44'!
PASSED!

!testRun: #AccountReporterTest #test24NetTransferForPortfoliosWithPortfoliosShouldNotRelfectDepositsOrWithdraws stamp: 'fr 11/16/2020 13:22:44'!
PASSED!
!AccountReporterTest methodsFor: 'tests - net transfer' stamp: 'fr 11/16/2020 13:24:56'!
createWith: aCreationBlock perform: aTransactionBlock		assertTransactionIsReflectedWithValue: aTransferNetValue 

	aCreationBlock value.
	
	aTransactionBlock value.
	
	self assert: reporter transferNet equals: aTransferNetValue! !
!AccountReporterTest methodsFor: 'tests - net transfer' stamp: 'fr 11/16/2020 13:25:58' prior: 50909647!
test13NetTransferForAccountWithNoTransactionsShouldBeZero
	
	self  createWith: [self createNewAccountAndTransferNetReporterForIt] 
		perform: [] 
		assertTransactionIsReflectedWithValue: 0! !

!testRun: #AccountReporterTest #test13NetTransferForAccountWithNoTransactionsShouldBeZero stamp: 'fr 11/16/2020 13:26:01'!
PASSED!

!testRun: #AccountReporterTest #test01AccountSummaryForAccountWithNoTransactionsShouldJustShowBalanceZero stamp: 'fr 11/16/2020 13:26:01'!
PASSED!

!testRun: #AccountReporterTest #test02AccountSummaryShouldReflectDepositsOnAccounts stamp: 'fr 11/16/2020 13:26:01'!
PASSED!

!testRun: #AccountReporterTest #test03AccountSummaryShouldReflectWithdrawsOnAccounts stamp: 'fr 11/16/2020 13:26:01'!
PASSED!

!testRun: #AccountReporterTest #test04AccountSummaryShouldReflectOutgoingTransfersOnAccounts stamp: 'fr 11/16/2020 13:26:01'!
PASSED!

!testRun: #AccountReporterTest #test05AccountSummaryShouldReflectIncomingTransfersOnAccounts stamp: 'fr 11/16/2020 13:26:01'!
PASSED!

!testRun: #AccountReporterTest #test06AccountSummaryForPortfolioWithNoTransactionsShouldJustShowBalanceZero stamp: 'fr 11/16/2020 13:26:01'!
PASSED!

!testRun: #AccountReporterTest #test07AccountSummaryShouldReflectDepositsOnPortfoliosWithAccounts stamp: 'fr 11/16/2020 13:26:01'!
PASSED!

!testRun: #AccountReporterTest #test08AccountSummaryShouldReflectWithdrawsOnPortfoliosWithAccounts stamp: 'fr 11/16/2020 13:26:01'!
PASSED!

!testRun: #AccountReporterTest #test09AccountSummaryShouldReflectOutgoingAndIncomingTransfersOnPortfoliosWithAccounts stamp: 'fr 11/16/2020 13:26:01'!
PASSED!

!testRun: #AccountReporterTest #test10AccountSummaryShouldReflectDepositsOnPortfoliosWithPortfolios stamp: 'fr 11/16/2020 13:26:01'!
PASSED!

!testRun: #AccountReporterTest #test11AccountSummaryShouldReflectWithdrawsOnPortfoliosWithPortfolios stamp: 'fr 11/16/2020 13:26:01'!
PASSED!

!testRun: #AccountReporterTest #test12AccountSummaryShouldReflectOutgoingAndIncomingTransfersOnPortfoliosWithPortfoliosAndAccounts stamp: 'fr 11/16/2020 13:26:01'!
PASSED!

!testRun: #AccountReporterTest #test13NetTransferForAccountWithNoTransactionsShouldBeZero stamp: 'fr 11/16/2020 13:26:01'!
PASSED!

!testRun: #AccountReporterTest #test14NetTransferForAccountWithAnOutgoingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 13:26:01'!
PASSED!

!testRun: #AccountReporterTest #test15NetTransferForAccountWithAnIncomingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 13:26:01'!
PASSED!

!testRun: #AccountReporterTest #test16NetTransferForAccountShouldNotReflectDeposits stamp: 'fr 11/16/2020 13:26:01'!
PASSED!

!testRun: #AccountReporterTest #test17NetTransferForAccountShouldNotReflectWithdraws stamp: 'fr 11/16/2020 13:26:01'!
PASSED!

!testRun: #AccountReporterTest #test18NetTransferForPortfolioWithNoTransactionsShouldBeZero stamp: 'fr 11/16/2020 13:26:01'!
PASSED!

!testRun: #AccountReporterTest #test19NetTransferForPortfolioWithAnOutgoingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 13:26:01'!
PASSED!

!testRun: #AccountReporterTest #test20NetTransferForPortfolioWithAnIncomingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 13:26:01'!
PASSED!

!testRun: #AccountReporterTest #test21NetTransferForPortfolioShouldNotReflectDeposits stamp: 'fr 11/16/2020 13:26:01'!
PASSED!

!testRun: #AccountReporterTest #test22NetTransferForPortfolioShouldNotReflectWithdraws stamp: 'fr 11/16/2020 13:26:01'!
PASSED!

!testRun: #AccountReporterTest #test23NetTransferForPortfoliosWithPortfoliosShouldReflectOutgoingAndIncomingTransfers stamp: 'fr 11/16/2020 13:26:01'!
PASSED!

!testRun: #AccountReporterTest #test24NetTransferForPortfoliosWithPortfoliosShouldNotRelfectDepositsOrWithdraws stamp: 'fr 11/16/2020 13:26:01'!
PASSED!
!AccountReporterTest methodsFor: 'tests - net transfer' stamp: 'fr 11/16/2020 13:27:00' prior: 50906017!
test14NetTransferForAccountWithAnOutgoingTransferShouldReflectItsValue
	
	self  createWith: [				
					self createNewAccountAndTransferNetReporterForIt.
					self createAnotherNewAccount.
				  ] 
		perform: [Transfer move: 100 from: account to: anotherAccount] 
		assertTransactionIsReflectedWithValue: -100! !

!testRun: #AccountReporterTest #test14NetTransferForAccountWithAnOutgoingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 13:27:01'!
PASSED!

!testRun: #AccountReporterTest #test01AccountSummaryForAccountWithNoTransactionsShouldJustShowBalanceZero stamp: 'fr 11/16/2020 13:27:01'!
PASSED!

!testRun: #AccountReporterTest #test02AccountSummaryShouldReflectDepositsOnAccounts stamp: 'fr 11/16/2020 13:27:01'!
PASSED!

!testRun: #AccountReporterTest #test03AccountSummaryShouldReflectWithdrawsOnAccounts stamp: 'fr 11/16/2020 13:27:01'!
PASSED!

!testRun: #AccountReporterTest #test04AccountSummaryShouldReflectOutgoingTransfersOnAccounts stamp: 'fr 11/16/2020 13:27:01'!
PASSED!

!testRun: #AccountReporterTest #test05AccountSummaryShouldReflectIncomingTransfersOnAccounts stamp: 'fr 11/16/2020 13:27:01'!
PASSED!

!testRun: #AccountReporterTest #test06AccountSummaryForPortfolioWithNoTransactionsShouldJustShowBalanceZero stamp: 'fr 11/16/2020 13:27:01'!
PASSED!

!testRun: #AccountReporterTest #test07AccountSummaryShouldReflectDepositsOnPortfoliosWithAccounts stamp: 'fr 11/16/2020 13:27:01'!
PASSED!

!testRun: #AccountReporterTest #test08AccountSummaryShouldReflectWithdrawsOnPortfoliosWithAccounts stamp: 'fr 11/16/2020 13:27:01'!
PASSED!

!testRun: #AccountReporterTest #test09AccountSummaryShouldReflectOutgoingAndIncomingTransfersOnPortfoliosWithAccounts stamp: 'fr 11/16/2020 13:27:01'!
PASSED!

!testRun: #AccountReporterTest #test10AccountSummaryShouldReflectDepositsOnPortfoliosWithPortfolios stamp: 'fr 11/16/2020 13:27:01'!
PASSED!

!testRun: #AccountReporterTest #test11AccountSummaryShouldReflectWithdrawsOnPortfoliosWithPortfolios stamp: 'fr 11/16/2020 13:27:01'!
PASSED!

!testRun: #AccountReporterTest #test12AccountSummaryShouldReflectOutgoingAndIncomingTransfersOnPortfoliosWithPortfoliosAndAccounts stamp: 'fr 11/16/2020 13:27:01'!
PASSED!

!testRun: #AccountReporterTest #test13NetTransferForAccountWithNoTransactionsShouldBeZero stamp: 'fr 11/16/2020 13:27:01'!
PASSED!

!testRun: #AccountReporterTest #test14NetTransferForAccountWithAnOutgoingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 13:27:01'!
PASSED!

!testRun: #AccountReporterTest #test15NetTransferForAccountWithAnIncomingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 13:27:01'!
PASSED!

!testRun: #AccountReporterTest #test16NetTransferForAccountShouldNotReflectDeposits stamp: 'fr 11/16/2020 13:27:01'!
PASSED!

!testRun: #AccountReporterTest #test17NetTransferForAccountShouldNotReflectWithdraws stamp: 'fr 11/16/2020 13:27:01'!
PASSED!

!testRun: #AccountReporterTest #test18NetTransferForPortfolioWithNoTransactionsShouldBeZero stamp: 'fr 11/16/2020 13:27:01'!
PASSED!

!testRun: #AccountReporterTest #test19NetTransferForPortfolioWithAnOutgoingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 13:27:01'!
PASSED!

!testRun: #AccountReporterTest #test20NetTransferForPortfolioWithAnIncomingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 13:27:01'!
PASSED!

!testRun: #AccountReporterTest #test21NetTransferForPortfolioShouldNotReflectDeposits stamp: 'fr 11/16/2020 13:27:01'!
PASSED!

!testRun: #AccountReporterTest #test22NetTransferForPortfolioShouldNotReflectWithdraws stamp: 'fr 11/16/2020 13:27:01'!
PASSED!

!testRun: #AccountReporterTest #test23NetTransferForPortfoliosWithPortfoliosShouldReflectOutgoingAndIncomingTransfers stamp: 'fr 11/16/2020 13:27:01'!
PASSED!

!testRun: #AccountReporterTest #test24NetTransferForPortfoliosWithPortfoliosShouldNotRelfectDepositsOrWithdraws stamp: 'fr 11/16/2020 13:27:01'!
PASSED!
!AccountReporterTest methodsFor: 'tests - net transfer' stamp: 'fr 11/16/2020 13:27:35' prior: 50906029!
test15NetTransferForAccountWithAnIncomingTransferShouldReflectItsValue
	
	self  createWith: [				
					self createNewAccountAndTransferNetReporterForIt.
					self createAnotherNewAccount.
				  ] 
		perform: [Transfer move: 100 from: anotherAccount to: account] 
		assertTransactionIsReflectedWithValue: 100! !

!testRun: #AccountReporterTest #test15NetTransferForAccountWithAnIncomingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 13:27:36'!
PASSED!

!testRun: #AccountReporterTest #test01AccountSummaryForAccountWithNoTransactionsShouldJustShowBalanceZero stamp: 'fr 11/16/2020 13:27:36'!
PASSED!

!testRun: #AccountReporterTest #test02AccountSummaryShouldReflectDepositsOnAccounts stamp: 'fr 11/16/2020 13:27:36'!
PASSED!

!testRun: #AccountReporterTest #test03AccountSummaryShouldReflectWithdrawsOnAccounts stamp: 'fr 11/16/2020 13:27:36'!
PASSED!

!testRun: #AccountReporterTest #test04AccountSummaryShouldReflectOutgoingTransfersOnAccounts stamp: 'fr 11/16/2020 13:27:36'!
PASSED!

!testRun: #AccountReporterTest #test05AccountSummaryShouldReflectIncomingTransfersOnAccounts stamp: 'fr 11/16/2020 13:27:36'!
PASSED!

!testRun: #AccountReporterTest #test06AccountSummaryForPortfolioWithNoTransactionsShouldJustShowBalanceZero stamp: 'fr 11/16/2020 13:27:36'!
PASSED!

!testRun: #AccountReporterTest #test07AccountSummaryShouldReflectDepositsOnPortfoliosWithAccounts stamp: 'fr 11/16/2020 13:27:36'!
PASSED!

!testRun: #AccountReporterTest #test08AccountSummaryShouldReflectWithdrawsOnPortfoliosWithAccounts stamp: 'fr 11/16/2020 13:27:36'!
PASSED!

!testRun: #AccountReporterTest #test09AccountSummaryShouldReflectOutgoingAndIncomingTransfersOnPortfoliosWithAccounts stamp: 'fr 11/16/2020 13:27:36'!
PASSED!

!testRun: #AccountReporterTest #test10AccountSummaryShouldReflectDepositsOnPortfoliosWithPortfolios stamp: 'fr 11/16/2020 13:27:36'!
PASSED!

!testRun: #AccountReporterTest #test11AccountSummaryShouldReflectWithdrawsOnPortfoliosWithPortfolios stamp: 'fr 11/16/2020 13:27:36'!
PASSED!

!testRun: #AccountReporterTest #test12AccountSummaryShouldReflectOutgoingAndIncomingTransfersOnPortfoliosWithPortfoliosAndAccounts stamp: 'fr 11/16/2020 13:27:36'!
PASSED!

!testRun: #AccountReporterTest #test13NetTransferForAccountWithNoTransactionsShouldBeZero stamp: 'fr 11/16/2020 13:27:36'!
PASSED!

!testRun: #AccountReporterTest #test14NetTransferForAccountWithAnOutgoingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 13:27:36'!
PASSED!

!testRun: #AccountReporterTest #test15NetTransferForAccountWithAnIncomingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 13:27:36'!
PASSED!

!testRun: #AccountReporterTest #test16NetTransferForAccountShouldNotReflectDeposits stamp: 'fr 11/16/2020 13:27:36'!
PASSED!

!testRun: #AccountReporterTest #test17NetTransferForAccountShouldNotReflectWithdraws stamp: 'fr 11/16/2020 13:27:36'!
PASSED!

!testRun: #AccountReporterTest #test18NetTransferForPortfolioWithNoTransactionsShouldBeZero stamp: 'fr 11/16/2020 13:27:36'!
PASSED!

!testRun: #AccountReporterTest #test19NetTransferForPortfolioWithAnOutgoingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 13:27:36'!
PASSED!

!testRun: #AccountReporterTest #test20NetTransferForPortfolioWithAnIncomingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 13:27:36'!
PASSED!

!testRun: #AccountReporterTest #test21NetTransferForPortfolioShouldNotReflectDeposits stamp: 'fr 11/16/2020 13:27:36'!
PASSED!

!testRun: #AccountReporterTest #test22NetTransferForPortfolioShouldNotReflectWithdraws stamp: 'fr 11/16/2020 13:27:36'!
PASSED!

!testRun: #AccountReporterTest #test23NetTransferForPortfoliosWithPortfoliosShouldReflectOutgoingAndIncomingTransfers stamp: 'fr 11/16/2020 13:27:36'!
PASSED!

!testRun: #AccountReporterTest #test24NetTransferForPortfoliosWithPortfoliosShouldNotRelfectDepositsOrWithdraws stamp: 'fr 11/16/2020 13:27:36'!
PASSED!
!AccountReporterTest methodsFor: 'tests - net transfer' stamp: 'fr 11/16/2020 13:28:58' prior: 50906051!
test16NetTransferForAccountShouldNotReflectDeposits	
	
	self  createWith: [self createNewAccountAndTransferNetReporterForIt] 
		perform: [Deposit register: 100 on: account] 
		assertTransactionIsReflectedWithValue: 0! !

!testRun: #AccountReporterTest #test16NetTransferForAccountShouldNotReflectDeposits stamp: 'fr 11/16/2020 13:28:58'!
PASSED!

!testRun: #AccountReporterTest #test01AccountSummaryForAccountWithNoTransactionsShouldJustShowBalanceZero stamp: 'fr 11/16/2020 13:28:58'!
PASSED!

!testRun: #AccountReporterTest #test02AccountSummaryShouldReflectDepositsOnAccounts stamp: 'fr 11/16/2020 13:28:58'!
PASSED!

!testRun: #AccountReporterTest #test03AccountSummaryShouldReflectWithdrawsOnAccounts stamp: 'fr 11/16/2020 13:28:58'!
PASSED!

!testRun: #AccountReporterTest #test04AccountSummaryShouldReflectOutgoingTransfersOnAccounts stamp: 'fr 11/16/2020 13:28:58'!
PASSED!

!testRun: #AccountReporterTest #test05AccountSummaryShouldReflectIncomingTransfersOnAccounts stamp: 'fr 11/16/2020 13:28:58'!
PASSED!

!testRun: #AccountReporterTest #test06AccountSummaryForPortfolioWithNoTransactionsShouldJustShowBalanceZero stamp: 'fr 11/16/2020 13:28:58'!
PASSED!

!testRun: #AccountReporterTest #test07AccountSummaryShouldReflectDepositsOnPortfoliosWithAccounts stamp: 'fr 11/16/2020 13:28:58'!
PASSED!

!testRun: #AccountReporterTest #test08AccountSummaryShouldReflectWithdrawsOnPortfoliosWithAccounts stamp: 'fr 11/16/2020 13:28:58'!
PASSED!

!testRun: #AccountReporterTest #test09AccountSummaryShouldReflectOutgoingAndIncomingTransfersOnPortfoliosWithAccounts stamp: 'fr 11/16/2020 13:28:58'!
PASSED!

!testRun: #AccountReporterTest #test10AccountSummaryShouldReflectDepositsOnPortfoliosWithPortfolios stamp: 'fr 11/16/2020 13:28:58'!
PASSED!

!testRun: #AccountReporterTest #test11AccountSummaryShouldReflectWithdrawsOnPortfoliosWithPortfolios stamp: 'fr 11/16/2020 13:28:58'!
PASSED!

!testRun: #AccountReporterTest #test12AccountSummaryShouldReflectOutgoingAndIncomingTransfersOnPortfoliosWithPortfoliosAndAccounts stamp: 'fr 11/16/2020 13:28:58'!
PASSED!

!testRun: #AccountReporterTest #test13NetTransferForAccountWithNoTransactionsShouldBeZero stamp: 'fr 11/16/2020 13:28:58'!
PASSED!

!testRun: #AccountReporterTest #test14NetTransferForAccountWithAnOutgoingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 13:28:58'!
PASSED!

!testRun: #AccountReporterTest #test15NetTransferForAccountWithAnIncomingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 13:28:58'!
PASSED!

!testRun: #AccountReporterTest #test16NetTransferForAccountShouldNotReflectDeposits stamp: 'fr 11/16/2020 13:28:58'!
PASSED!

!testRun: #AccountReporterTest #test17NetTransferForAccountShouldNotReflectWithdraws stamp: 'fr 11/16/2020 13:28:58'!
PASSED!

!testRun: #AccountReporterTest #test18NetTransferForPortfolioWithNoTransactionsShouldBeZero stamp: 'fr 11/16/2020 13:28:58'!
PASSED!

!testRun: #AccountReporterTest #test19NetTransferForPortfolioWithAnOutgoingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 13:28:58'!
PASSED!

!testRun: #AccountReporterTest #test20NetTransferForPortfolioWithAnIncomingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 13:28:58'!
PASSED!

!testRun: #AccountReporterTest #test21NetTransferForPortfolioShouldNotReflectDeposits stamp: 'fr 11/16/2020 13:28:58'!
PASSED!

!testRun: #AccountReporterTest #test22NetTransferForPortfolioShouldNotReflectWithdraws stamp: 'fr 11/16/2020 13:28:58'!
PASSED!

!testRun: #AccountReporterTest #test23NetTransferForPortfoliosWithPortfoliosShouldReflectOutgoingAndIncomingTransfers stamp: 'fr 11/16/2020 13:28:58'!
PASSED!

!testRun: #AccountReporterTest #test24NetTransferForPortfoliosWithPortfoliosShouldNotRelfectDepositsOrWithdraws stamp: 'fr 11/16/2020 13:28:58'!
PASSED!
!AccountReporterTest methodsFor: 'tests - net transfer' stamp: 'fr 11/16/2020 13:29:18' prior: 50906818!
test17NetTransferForAccountShouldNotReflectWithdraws

	self createNewAccountAndTransferNetReporterForIt.

	Withdraw register: 100 on: account. 
		
	self assert: reporter transferNet equals: 0.
	
	
	self  createWith: [self createNewAccountAndTransferNetReporterForIt] 
		perform: [Withdraw register: 100 on: account] 
		assertTransactionIsReflectedWithValue: 0! !
!AccountReporterTest methodsFor: 'tests - net transfer' stamp: 'fr 11/16/2020 13:29:23' prior: 50910266!
test17NetTransferForAccountShouldNotReflectWithdraws
	
	self  createWith: [self createNewAccountAndTransferNetReporterForIt] 
		perform: [Withdraw register: 100 on: account] 
		assertTransactionIsReflectedWithValue: 0! !

!testRun: #AccountReporterTest #test17NetTransferForAccountShouldNotReflectWithdraws stamp: 'fr 11/16/2020 13:29:24'!
PASSED!

!testRun: #AccountReporterTest #test01AccountSummaryForAccountWithNoTransactionsShouldJustShowBalanceZero stamp: 'fr 11/16/2020 13:29:24'!
PASSED!

!testRun: #AccountReporterTest #test02AccountSummaryShouldReflectDepositsOnAccounts stamp: 'fr 11/16/2020 13:29:24'!
PASSED!

!testRun: #AccountReporterTest #test03AccountSummaryShouldReflectWithdrawsOnAccounts stamp: 'fr 11/16/2020 13:29:24'!
PASSED!

!testRun: #AccountReporterTest #test04AccountSummaryShouldReflectOutgoingTransfersOnAccounts stamp: 'fr 11/16/2020 13:29:24'!
PASSED!

!testRun: #AccountReporterTest #test05AccountSummaryShouldReflectIncomingTransfersOnAccounts stamp: 'fr 11/16/2020 13:29:24'!
PASSED!

!testRun: #AccountReporterTest #test06AccountSummaryForPortfolioWithNoTransactionsShouldJustShowBalanceZero stamp: 'fr 11/16/2020 13:29:24'!
PASSED!

!testRun: #AccountReporterTest #test07AccountSummaryShouldReflectDepositsOnPortfoliosWithAccounts stamp: 'fr 11/16/2020 13:29:24'!
PASSED!

!testRun: #AccountReporterTest #test08AccountSummaryShouldReflectWithdrawsOnPortfoliosWithAccounts stamp: 'fr 11/16/2020 13:29:24'!
PASSED!

!testRun: #AccountReporterTest #test09AccountSummaryShouldReflectOutgoingAndIncomingTransfersOnPortfoliosWithAccounts stamp: 'fr 11/16/2020 13:29:24'!
PASSED!

!testRun: #AccountReporterTest #test10AccountSummaryShouldReflectDepositsOnPortfoliosWithPortfolios stamp: 'fr 11/16/2020 13:29:24'!
PASSED!

!testRun: #AccountReporterTest #test11AccountSummaryShouldReflectWithdrawsOnPortfoliosWithPortfolios stamp: 'fr 11/16/2020 13:29:24'!
PASSED!

!testRun: #AccountReporterTest #test12AccountSummaryShouldReflectOutgoingAndIncomingTransfersOnPortfoliosWithPortfoliosAndAccounts stamp: 'fr 11/16/2020 13:29:24'!
PASSED!

!testRun: #AccountReporterTest #test13NetTransferForAccountWithNoTransactionsShouldBeZero stamp: 'fr 11/16/2020 13:29:24'!
PASSED!

!testRun: #AccountReporterTest #test14NetTransferForAccountWithAnOutgoingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 13:29:24'!
PASSED!

!testRun: #AccountReporterTest #test15NetTransferForAccountWithAnIncomingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 13:29:24'!
PASSED!

!testRun: #AccountReporterTest #test16NetTransferForAccountShouldNotReflectDeposits stamp: 'fr 11/16/2020 13:29:24'!
PASSED!

!testRun: #AccountReporterTest #test17NetTransferForAccountShouldNotReflectWithdraws stamp: 'fr 11/16/2020 13:29:24'!
PASSED!

!testRun: #AccountReporterTest #test18NetTransferForPortfolioWithNoTransactionsShouldBeZero stamp: 'fr 11/16/2020 13:29:24'!
PASSED!

!testRun: #AccountReporterTest #test19NetTransferForPortfolioWithAnOutgoingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 13:29:24'!
PASSED!

!testRun: #AccountReporterTest #test20NetTransferForPortfolioWithAnIncomingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 13:29:24'!
PASSED!

!testRun: #AccountReporterTest #test21NetTransferForPortfolioShouldNotReflectDeposits stamp: 'fr 11/16/2020 13:29:24'!
PASSED!

!testRun: #AccountReporterTest #test22NetTransferForPortfolioShouldNotReflectWithdraws stamp: 'fr 11/16/2020 13:29:24'!
PASSED!

!testRun: #AccountReporterTest #test23NetTransferForPortfoliosWithPortfoliosShouldReflectOutgoingAndIncomingTransfers stamp: 'fr 11/16/2020 13:29:24'!
PASSED!

!testRun: #AccountReporterTest #test24NetTransferForPortfoliosWithPortfoliosShouldNotRelfectDepositsOrWithdraws stamp: 'fr 11/16/2020 13:29:24'!
PASSED!
!AccountReporterTest methodsFor: 'tests - net transfer' stamp: 'fr 11/16/2020 13:30:10' prior: 50907267!
test19NetTransferForPortfolioWithAnOutgoingTransferShouldReflectItsValue



	Transfer move: 10 from: account to: anotherAccount.
			
	self assert: reporter transferNet equals: -10.
	
	
	self  createWith: [
					self createTransferNetReporterForPortfolioWithAccount.
					self createAnotherNewAccount.	
				  ] 
		perform: [Deposit register: 100 on: account] 
		assertTransactionIsReflectedWithValue: 0! !
!AccountReporterTest methodsFor: 'tests - net transfer' stamp: 'fr 11/16/2020 13:30:28' prior: 50910402!
test19NetTransferForPortfolioWithAnOutgoingTransferShouldReflectItsValue
	
	self  createWith: [
					self createTransferNetReporterForPortfolioWithAccount.
					self createAnotherNewAccount.	
				  ] 
		perform: [Transfer move: 10 from: account to: anotherAccount] 
		assertTransactionIsReflectedWithValue: -10! !

!testRun: #AccountReporterTest #test19NetTransferForPortfolioWithAnOutgoingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 13:30:29'!
PASSED!

!testRun: #AccountReporterTest #test01AccountSummaryForAccountWithNoTransactionsShouldJustShowBalanceZero stamp: 'fr 11/16/2020 13:30:29'!
PASSED!

!testRun: #AccountReporterTest #test02AccountSummaryShouldReflectDepositsOnAccounts stamp: 'fr 11/16/2020 13:30:29'!
PASSED!

!testRun: #AccountReporterTest #test03AccountSummaryShouldReflectWithdrawsOnAccounts stamp: 'fr 11/16/2020 13:30:29'!
PASSED!

!testRun: #AccountReporterTest #test04AccountSummaryShouldReflectOutgoingTransfersOnAccounts stamp: 'fr 11/16/2020 13:30:29'!
PASSED!

!testRun: #AccountReporterTest #test05AccountSummaryShouldReflectIncomingTransfersOnAccounts stamp: 'fr 11/16/2020 13:30:29'!
PASSED!

!testRun: #AccountReporterTest #test06AccountSummaryForPortfolioWithNoTransactionsShouldJustShowBalanceZero stamp: 'fr 11/16/2020 13:30:29'!
PASSED!

!testRun: #AccountReporterTest #test07AccountSummaryShouldReflectDepositsOnPortfoliosWithAccounts stamp: 'fr 11/16/2020 13:30:29'!
PASSED!

!testRun: #AccountReporterTest #test08AccountSummaryShouldReflectWithdrawsOnPortfoliosWithAccounts stamp: 'fr 11/16/2020 13:30:29'!
PASSED!

!testRun: #AccountReporterTest #test09AccountSummaryShouldReflectOutgoingAndIncomingTransfersOnPortfoliosWithAccounts stamp: 'fr 11/16/2020 13:30:29'!
PASSED!

!testRun: #AccountReporterTest #test10AccountSummaryShouldReflectDepositsOnPortfoliosWithPortfolios stamp: 'fr 11/16/2020 13:30:29'!
PASSED!

!testRun: #AccountReporterTest #test11AccountSummaryShouldReflectWithdrawsOnPortfoliosWithPortfolios stamp: 'fr 11/16/2020 13:30:29'!
PASSED!

!testRun: #AccountReporterTest #test12AccountSummaryShouldReflectOutgoingAndIncomingTransfersOnPortfoliosWithPortfoliosAndAccounts stamp: 'fr 11/16/2020 13:30:29'!
PASSED!

!testRun: #AccountReporterTest #test13NetTransferForAccountWithNoTransactionsShouldBeZero stamp: 'fr 11/16/2020 13:30:29'!
PASSED!

!testRun: #AccountReporterTest #test14NetTransferForAccountWithAnOutgoingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 13:30:29'!
PASSED!

!testRun: #AccountReporterTest #test15NetTransferForAccountWithAnIncomingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 13:30:29'!
PASSED!

!testRun: #AccountReporterTest #test16NetTransferForAccountShouldNotReflectDeposits stamp: 'fr 11/16/2020 13:30:29'!
PASSED!

!testRun: #AccountReporterTest #test17NetTransferForAccountShouldNotReflectWithdraws stamp: 'fr 11/16/2020 13:30:29'!
PASSED!

!testRun: #AccountReporterTest #test18NetTransferForPortfolioWithNoTransactionsShouldBeZero stamp: 'fr 11/16/2020 13:30:29'!
PASSED!

!testRun: #AccountReporterTest #test19NetTransferForPortfolioWithAnOutgoingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 13:30:29'!
PASSED!

!testRun: #AccountReporterTest #test20NetTransferForPortfolioWithAnIncomingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 13:30:29'!
PASSED!

!testRun: #AccountReporterTest #test21NetTransferForPortfolioShouldNotReflectDeposits stamp: 'fr 11/16/2020 13:30:29'!
PASSED!

!testRun: #AccountReporterTest #test22NetTransferForPortfolioShouldNotReflectWithdraws stamp: 'fr 11/16/2020 13:30:29'!
PASSED!

!testRun: #AccountReporterTest #test23NetTransferForPortfoliosWithPortfoliosShouldReflectOutgoingAndIncomingTransfers stamp: 'fr 11/16/2020 13:30:29'!
PASSED!

!testRun: #AccountReporterTest #test24NetTransferForPortfoliosWithPortfoliosShouldNotRelfectDepositsOrWithdraws stamp: 'fr 11/16/2020 13:30:29'!
PASSED!
!AccountReporterTest methodsFor: 'tests - net transfer' stamp: 'fr 11/16/2020 13:30:36' prior: 50910418!
test19NetTransferForPortfolioWithAnOutgoingTransferShouldReflectItsValue
	
	self  createWith: [
					self createTransferNetReporterForPortfolioWithAccount.
					self createAnotherNewAccount.	
				  ] 
		perform: [Transfer move: 100 from: account to: anotherAccount] 
		assertTransactionIsReflectedWithValue: -10! !

!testRun: #AccountReporterTest #test19NetTransferForPortfolioWithAnOutgoingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 13:30:37'!
FAILURE!
!AccountReporterTest methodsFor: 'tests - net transfer' stamp: 'fr 11/16/2020 13:30:40' prior: 50910542!
test19NetTransferForPortfolioWithAnOutgoingTransferShouldReflectItsValue
	
	self  createWith: [
					self createTransferNetReporterForPortfolioWithAccount.
					self createAnotherNewAccount.	
				  ] 
		perform: [Transfer move: 10 from: account to: anotherAccount] 
		assertTransactionIsReflectedWithValue: -10! !

!testRun: #AccountReporterTest #test19NetTransferForPortfolioWithAnOutgoingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 13:30:41'!
PASSED!

!testRun: #AccountReporterTest #test01AccountSummaryForAccountWithNoTransactionsShouldJustShowBalanceZero stamp: 'fr 11/16/2020 13:30:41'!
PASSED!

!testRun: #AccountReporterTest #test02AccountSummaryShouldReflectDepositsOnAccounts stamp: 'fr 11/16/2020 13:30:41'!
PASSED!

!testRun: #AccountReporterTest #test03AccountSummaryShouldReflectWithdrawsOnAccounts stamp: 'fr 11/16/2020 13:30:41'!
PASSED!

!testRun: #AccountReporterTest #test04AccountSummaryShouldReflectOutgoingTransfersOnAccounts stamp: 'fr 11/16/2020 13:30:41'!
PASSED!

!testRun: #AccountReporterTest #test05AccountSummaryShouldReflectIncomingTransfersOnAccounts stamp: 'fr 11/16/2020 13:30:41'!
PASSED!

!testRun: #AccountReporterTest #test06AccountSummaryForPortfolioWithNoTransactionsShouldJustShowBalanceZero stamp: 'fr 11/16/2020 13:30:41'!
PASSED!

!testRun: #AccountReporterTest #test07AccountSummaryShouldReflectDepositsOnPortfoliosWithAccounts stamp: 'fr 11/16/2020 13:30:41'!
PASSED!

!testRun: #AccountReporterTest #test08AccountSummaryShouldReflectWithdrawsOnPortfoliosWithAccounts stamp: 'fr 11/16/2020 13:30:41'!
PASSED!

!testRun: #AccountReporterTest #test09AccountSummaryShouldReflectOutgoingAndIncomingTransfersOnPortfoliosWithAccounts stamp: 'fr 11/16/2020 13:30:41'!
PASSED!

!testRun: #AccountReporterTest #test10AccountSummaryShouldReflectDepositsOnPortfoliosWithPortfolios stamp: 'fr 11/16/2020 13:30:41'!
PASSED!

!testRun: #AccountReporterTest #test11AccountSummaryShouldReflectWithdrawsOnPortfoliosWithPortfolios stamp: 'fr 11/16/2020 13:30:41'!
PASSED!

!testRun: #AccountReporterTest #test12AccountSummaryShouldReflectOutgoingAndIncomingTransfersOnPortfoliosWithPortfoliosAndAccounts stamp: 'fr 11/16/2020 13:30:41'!
PASSED!

!testRun: #AccountReporterTest #test13NetTransferForAccountWithNoTransactionsShouldBeZero stamp: 'fr 11/16/2020 13:30:41'!
PASSED!

!testRun: #AccountReporterTest #test14NetTransferForAccountWithAnOutgoingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 13:30:41'!
PASSED!

!testRun: #AccountReporterTest #test15NetTransferForAccountWithAnIncomingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 13:30:41'!
PASSED!

!testRun: #AccountReporterTest #test16NetTransferForAccountShouldNotReflectDeposits stamp: 'fr 11/16/2020 13:30:41'!
PASSED!

!testRun: #AccountReporterTest #test17NetTransferForAccountShouldNotReflectWithdraws stamp: 'fr 11/16/2020 13:30:41'!
PASSED!

!testRun: #AccountReporterTest #test18NetTransferForPortfolioWithNoTransactionsShouldBeZero stamp: 'fr 11/16/2020 13:30:41'!
PASSED!

!testRun: #AccountReporterTest #test19NetTransferForPortfolioWithAnOutgoingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 13:30:41'!
PASSED!

!testRun: #AccountReporterTest #test20NetTransferForPortfolioWithAnIncomingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 13:30:41'!
PASSED!

!testRun: #AccountReporterTest #test21NetTransferForPortfolioShouldNotReflectDeposits stamp: 'fr 11/16/2020 13:30:41'!
PASSED!

!testRun: #AccountReporterTest #test22NetTransferForPortfolioShouldNotReflectWithdraws stamp: 'fr 11/16/2020 13:30:41'!
PASSED!

!testRun: #AccountReporterTest #test23NetTransferForPortfoliosWithPortfoliosShouldReflectOutgoingAndIncomingTransfers stamp: 'fr 11/16/2020 13:30:41'!
PASSED!

!testRun: #AccountReporterTest #test24NetTransferForPortfoliosWithPortfoliosShouldNotRelfectDepositsOrWithdraws stamp: 'fr 11/16/2020 13:30:41'!
PASSED!
!AccountReporterTest methodsFor: 'tests - net transfer' stamp: 'fr 11/16/2020 13:31:16' prior: 50907284!
test20NetTransferForPortfolioWithAnIncomingTransferShouldReflectItsValue
	
	self  createWith: [
					self createTransferNetReporterForPortfolioWithAccount.
					self createAnotherNewAccount.	
				  ] 
		perform: [Transfer move: 10 from: anotherAccount to: account ] 
		assertTransactionIsReflectedWithValue: 10! !

!testRun: #AccountReporterTest #test20NetTransferForPortfolioWithAnIncomingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 13:31:16'!
PASSED!

!testRun: #AccountReporterTest #test01AccountSummaryForAccountWithNoTransactionsShouldJustShowBalanceZero stamp: 'fr 11/16/2020 13:31:16'!
PASSED!

!testRun: #AccountReporterTest #test02AccountSummaryShouldReflectDepositsOnAccounts stamp: 'fr 11/16/2020 13:31:16'!
PASSED!

!testRun: #AccountReporterTest #test03AccountSummaryShouldReflectWithdrawsOnAccounts stamp: 'fr 11/16/2020 13:31:16'!
PASSED!

!testRun: #AccountReporterTest #test04AccountSummaryShouldReflectOutgoingTransfersOnAccounts stamp: 'fr 11/16/2020 13:31:16'!
PASSED!

!testRun: #AccountReporterTest #test05AccountSummaryShouldReflectIncomingTransfersOnAccounts stamp: 'fr 11/16/2020 13:31:16'!
PASSED!

!testRun: #AccountReporterTest #test06AccountSummaryForPortfolioWithNoTransactionsShouldJustShowBalanceZero stamp: 'fr 11/16/2020 13:31:16'!
PASSED!

!testRun: #AccountReporterTest #test07AccountSummaryShouldReflectDepositsOnPortfoliosWithAccounts stamp: 'fr 11/16/2020 13:31:16'!
PASSED!

!testRun: #AccountReporterTest #test08AccountSummaryShouldReflectWithdrawsOnPortfoliosWithAccounts stamp: 'fr 11/16/2020 13:31:16'!
PASSED!

!testRun: #AccountReporterTest #test09AccountSummaryShouldReflectOutgoingAndIncomingTransfersOnPortfoliosWithAccounts stamp: 'fr 11/16/2020 13:31:16'!
PASSED!

!testRun: #AccountReporterTest #test10AccountSummaryShouldReflectDepositsOnPortfoliosWithPortfolios stamp: 'fr 11/16/2020 13:31:16'!
PASSED!

!testRun: #AccountReporterTest #test11AccountSummaryShouldReflectWithdrawsOnPortfoliosWithPortfolios stamp: 'fr 11/16/2020 13:31:16'!
PASSED!

!testRun: #AccountReporterTest #test12AccountSummaryShouldReflectOutgoingAndIncomingTransfersOnPortfoliosWithPortfoliosAndAccounts stamp: 'fr 11/16/2020 13:31:16'!
PASSED!

!testRun: #AccountReporterTest #test13NetTransferForAccountWithNoTransactionsShouldBeZero stamp: 'fr 11/16/2020 13:31:16'!
PASSED!

!testRun: #AccountReporterTest #test14NetTransferForAccountWithAnOutgoingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 13:31:16'!
PASSED!

!testRun: #AccountReporterTest #test15NetTransferForAccountWithAnIncomingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 13:31:16'!
PASSED!

!testRun: #AccountReporterTest #test16NetTransferForAccountShouldNotReflectDeposits stamp: 'fr 11/16/2020 13:31:16'!
PASSED!

!testRun: #AccountReporterTest #test17NetTransferForAccountShouldNotReflectWithdraws stamp: 'fr 11/16/2020 13:31:16'!
PASSED!

!testRun: #AccountReporterTest #test18NetTransferForPortfolioWithNoTransactionsShouldBeZero stamp: 'fr 11/16/2020 13:31:16'!
PASSED!

!testRun: #AccountReporterTest #test19NetTransferForPortfolioWithAnOutgoingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 13:31:16'!
PASSED!

!testRun: #AccountReporterTest #test20NetTransferForPortfolioWithAnIncomingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 13:31:16'!
PASSED!

!testRun: #AccountReporterTest #test21NetTransferForPortfolioShouldNotReflectDeposits stamp: 'fr 11/16/2020 13:31:16'!
PASSED!

!testRun: #AccountReporterTest #test22NetTransferForPortfolioShouldNotReflectWithdraws stamp: 'fr 11/16/2020 13:31:16'!
PASSED!

!testRun: #AccountReporterTest #test23NetTransferForPortfoliosWithPortfoliosShouldReflectOutgoingAndIncomingTransfers stamp: 'fr 11/16/2020 13:31:16'!
PASSED!

!testRun: #AccountReporterTest #test24NetTransferForPortfoliosWithPortfoliosShouldNotRelfectDepositsOrWithdraws stamp: 'fr 11/16/2020 13:31:16'!
PASSED!
!AccountReporterTest methodsFor: 'tests - net transfer' stamp: 'fr 11/16/2020 13:31:47' prior: 50907296!
test21NetTransferForPortfolioShouldNotReflectDeposits
	
	self  createWith: [self createTransferNetReporterForPortfolioWithAccount] 
		perform: [Deposit register: 100 on: account] 
		assertTransactionIsReflectedWithValue: 0! !

!testRun: #AccountReporterTest #test21NetTransferForPortfolioShouldNotReflectDeposits stamp: 'fr 11/16/2020 13:31:47'!
PASSED!

!testRun: #AccountReporterTest #test01AccountSummaryForAccountWithNoTransactionsShouldJustShowBalanceZero stamp: 'fr 11/16/2020 13:31:47'!
PASSED!

!testRun: #AccountReporterTest #test02AccountSummaryShouldReflectDepositsOnAccounts stamp: 'fr 11/16/2020 13:31:47'!
PASSED!

!testRun: #AccountReporterTest #test03AccountSummaryShouldReflectWithdrawsOnAccounts stamp: 'fr 11/16/2020 13:31:47'!
PASSED!

!testRun: #AccountReporterTest #test04AccountSummaryShouldReflectOutgoingTransfersOnAccounts stamp: 'fr 11/16/2020 13:31:47'!
PASSED!

!testRun: #AccountReporterTest #test05AccountSummaryShouldReflectIncomingTransfersOnAccounts stamp: 'fr 11/16/2020 13:31:47'!
PASSED!

!testRun: #AccountReporterTest #test06AccountSummaryForPortfolioWithNoTransactionsShouldJustShowBalanceZero stamp: 'fr 11/16/2020 13:31:47'!
PASSED!

!testRun: #AccountReporterTest #test07AccountSummaryShouldReflectDepositsOnPortfoliosWithAccounts stamp: 'fr 11/16/2020 13:31:47'!
PASSED!

!testRun: #AccountReporterTest #test08AccountSummaryShouldReflectWithdrawsOnPortfoliosWithAccounts stamp: 'fr 11/16/2020 13:31:47'!
PASSED!

!testRun: #AccountReporterTest #test09AccountSummaryShouldReflectOutgoingAndIncomingTransfersOnPortfoliosWithAccounts stamp: 'fr 11/16/2020 13:31:47'!
PASSED!

!testRun: #AccountReporterTest #test10AccountSummaryShouldReflectDepositsOnPortfoliosWithPortfolios stamp: 'fr 11/16/2020 13:31:47'!
PASSED!

!testRun: #AccountReporterTest #test11AccountSummaryShouldReflectWithdrawsOnPortfoliosWithPortfolios stamp: 'fr 11/16/2020 13:31:47'!
PASSED!

!testRun: #AccountReporterTest #test12AccountSummaryShouldReflectOutgoingAndIncomingTransfersOnPortfoliosWithPortfoliosAndAccounts stamp: 'fr 11/16/2020 13:31:47'!
PASSED!

!testRun: #AccountReporterTest #test13NetTransferForAccountWithNoTransactionsShouldBeZero stamp: 'fr 11/16/2020 13:31:47'!
PASSED!

!testRun: #AccountReporterTest #test14NetTransferForAccountWithAnOutgoingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 13:31:47'!
PASSED!

!testRun: #AccountReporterTest #test15NetTransferForAccountWithAnIncomingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 13:31:47'!
PASSED!

!testRun: #AccountReporterTest #test16NetTransferForAccountShouldNotReflectDeposits stamp: 'fr 11/16/2020 13:31:47'!
PASSED!

!testRun: #AccountReporterTest #test17NetTransferForAccountShouldNotReflectWithdraws stamp: 'fr 11/16/2020 13:31:47'!
PASSED!

!testRun: #AccountReporterTest #test18NetTransferForPortfolioWithNoTransactionsShouldBeZero stamp: 'fr 11/16/2020 13:31:47'!
PASSED!

!testRun: #AccountReporterTest #test19NetTransferForPortfolioWithAnOutgoingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 13:31:47'!
PASSED!

!testRun: #AccountReporterTest #test20NetTransferForPortfolioWithAnIncomingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 13:31:47'!
PASSED!

!testRun: #AccountReporterTest #test21NetTransferForPortfolioShouldNotReflectDeposits stamp: 'fr 11/16/2020 13:31:47'!
PASSED!

!testRun: #AccountReporterTest #test22NetTransferForPortfolioShouldNotReflectWithdraws stamp: 'fr 11/16/2020 13:31:47'!
PASSED!

!testRun: #AccountReporterTest #test23NetTransferForPortfoliosWithPortfoliosShouldReflectOutgoingAndIncomingTransfers stamp: 'fr 11/16/2020 13:31:47'!
PASSED!

!testRun: #AccountReporterTest #test24NetTransferForPortfoliosWithPortfoliosShouldNotRelfectDepositsOrWithdraws stamp: 'fr 11/16/2020 13:31:47'!
PASSED!
!AccountReporterTest methodsFor: 'tests - net transfer' stamp: 'fr 11/16/2020 13:32:58'!
test21NetTransferForPortfolioWithAccountShouldNotReflectDeposits
	
	self  createWith: [self createTransferNetReporterForPortfolioWithAccount] 
		perform: [Deposit register: 100 on: account] 
		assertTransactionIsReflectedWithValue: 0! !

!methodRemoval: AccountReporterTest #test21NetTransferForPortfolioShouldNotReflectDeposits stamp: 'fr 11/16/2020 13:32:58'!
test21NetTransferForPortfolioShouldNotReflectDeposits
	
	self  createWith: [self createTransferNetReporterForPortfolioWithAccount] 
		perform: [Deposit register: 100 on: account] 
		assertTransactionIsReflectedWithValue: 0!
!AccountReporterTest methodsFor: 'tests - net transfer' stamp: 'fr 11/16/2020 13:33:15'!
test22NetTransferForPortfolioWithAccountShouldNotReflectWithdraws

	self createTransferNetReporterForPortfolioWithAccount.
	
	Withdraw register: 100 on: account. 
			
	self assert: reporter transferNet equals: 0! !

!methodRemoval: AccountReporterTest #test22NetTransferForPortfolioShouldNotReflectWithdraws stamp: 'fr 11/16/2020 13:33:15'!
test22NetTransferForPortfolioShouldNotReflectWithdraws

	self createTransferNetReporterForPortfolioWithAccount.
	
	Withdraw register: 100 on: account. 
			
	self assert: reporter transferNet equals: 0!
!AccountReporterTest methodsFor: 'tests - net transfer' stamp: 'fr 11/16/2020 13:33:25'!
test20NetTransferForPortfolioWithAccountWithAnIncomingTransferShouldReflectItsValue
	
	self  createWith: [
					self createTransferNetReporterForPortfolioWithAccount.
					self createAnotherNewAccount.	
				  ] 
		perform: [Transfer move: 10 from: anotherAccount to: account ] 
		assertTransactionIsReflectedWithValue: 10! !

!methodRemoval: AccountReporterTest #test20NetTransferForPortfolioWithAnIncomingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 13:33:25'!
test20NetTransferForPortfolioWithAnIncomingTransferShouldReflectItsValue
	
	self  createWith: [
					self createTransferNetReporterForPortfolioWithAccount.
					self createAnotherNewAccount.	
				  ] 
		perform: [Transfer move: 10 from: anotherAccount to: account ] 
		assertTransactionIsReflectedWithValue: 10!
!AccountReporterTest methodsFor: 'tests - net transfer' stamp: 'fr 11/16/2020 13:33:34'!
test19NetTransferForPortfolioWithAccountWithAnOutgoingTransferShouldReflectItsValue
	
	self  createWith: [
					self createTransferNetReporterForPortfolioWithAccount.
					self createAnotherNewAccount.	
				  ] 
		perform: [Transfer move: 10 from: account to: anotherAccount] 
		assertTransactionIsReflectedWithValue: -10! !

!methodRemoval: AccountReporterTest #test19NetTransferForPortfolioWithAnOutgoingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 13:33:34'!
test19NetTransferForPortfolioWithAnOutgoingTransferShouldReflectItsValue
	
	self  createWith: [
					self createTransferNetReporterForPortfolioWithAccount.
					self createAnotherNewAccount.	
				  ] 
		perform: [Transfer move: 10 from: account to: anotherAccount] 
		assertTransactionIsReflectedWithValue: -10!
!AccountReporterTest methodsFor: 'tests - net transfer' stamp: 'fr 11/16/2020 13:34:08' prior: 50910950!
test22NetTransferForPortfolioWithAccountShouldNotReflectWithdraws
	
	self  createWith: [self createTransferNetReporterForPortfolioWithAccount] 
		perform: [Withdraw register: 100 on: account] 
		assertTransactionIsReflectedWithValue: 0! !

!testRun: #AccountReporterTest #test22NetTransferForPortfolioWithAccountShouldNotReflectWithdraws stamp: 'fr 11/16/2020 13:34:09'!
PASSED!

!testRun: #AccountReporterTest #test01AccountSummaryForAccountWithNoTransactionsShouldJustShowBalanceZero stamp: 'fr 11/16/2020 13:34:09'!
PASSED!

!testRun: #AccountReporterTest #test02AccountSummaryShouldReflectDepositsOnAccounts stamp: 'fr 11/16/2020 13:34:09'!
PASSED!

!testRun: #AccountReporterTest #test03AccountSummaryShouldReflectWithdrawsOnAccounts stamp: 'fr 11/16/2020 13:34:09'!
PASSED!

!testRun: #AccountReporterTest #test04AccountSummaryShouldReflectOutgoingTransfersOnAccounts stamp: 'fr 11/16/2020 13:34:09'!
PASSED!

!testRun: #AccountReporterTest #test05AccountSummaryShouldReflectIncomingTransfersOnAccounts stamp: 'fr 11/16/2020 13:34:09'!
PASSED!

!testRun: #AccountReporterTest #test06AccountSummaryForPortfolioWithNoTransactionsShouldJustShowBalanceZero stamp: 'fr 11/16/2020 13:34:09'!
PASSED!

!testRun: #AccountReporterTest #test07AccountSummaryShouldReflectDepositsOnPortfoliosWithAccounts stamp: 'fr 11/16/2020 13:34:09'!
PASSED!

!testRun: #AccountReporterTest #test08AccountSummaryShouldReflectWithdrawsOnPortfoliosWithAccounts stamp: 'fr 11/16/2020 13:34:09'!
PASSED!

!testRun: #AccountReporterTest #test09AccountSummaryShouldReflectOutgoingAndIncomingTransfersOnPortfoliosWithAccounts stamp: 'fr 11/16/2020 13:34:09'!
PASSED!

!testRun: #AccountReporterTest #test10AccountSummaryShouldReflectDepositsOnPortfoliosWithPortfolios stamp: 'fr 11/16/2020 13:34:09'!
PASSED!

!testRun: #AccountReporterTest #test11AccountSummaryShouldReflectWithdrawsOnPortfoliosWithPortfolios stamp: 'fr 11/16/2020 13:34:09'!
PASSED!

!testRun: #AccountReporterTest #test12AccountSummaryShouldReflectOutgoingAndIncomingTransfersOnPortfoliosWithPortfoliosAndAccounts stamp: 'fr 11/16/2020 13:34:09'!
PASSED!

!testRun: #AccountReporterTest #test13NetTransferForAccountWithNoTransactionsShouldBeZero stamp: 'fr 11/16/2020 13:34:09'!
PASSED!

!testRun: #AccountReporterTest #test14NetTransferForAccountWithAnOutgoingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 13:34:09'!
PASSED!

!testRun: #AccountReporterTest #test15NetTransferForAccountWithAnIncomingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 13:34:09'!
PASSED!

!testRun: #AccountReporterTest #test16NetTransferForAccountShouldNotReflectDeposits stamp: 'fr 11/16/2020 13:34:09'!
PASSED!

!testRun: #AccountReporterTest #test17NetTransferForAccountShouldNotReflectWithdraws stamp: 'fr 11/16/2020 13:34:09'!
PASSED!

!testRun: #AccountReporterTest #test18NetTransferForPortfolioWithNoTransactionsShouldBeZero stamp: 'fr 11/16/2020 13:34:09'!
PASSED!

!testRun: #AccountReporterTest #test19NetTransferForPortfolioWithAccountWithAnOutgoingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 13:34:09'!
PASSED!

!testRun: #AccountReporterTest #test20NetTransferForPortfolioWithAccountWithAnIncomingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 13:34:09'!
PASSED!

!testRun: #AccountReporterTest #test21NetTransferForPortfolioWithAccountShouldNotReflectDeposits stamp: 'fr 11/16/2020 13:34:09'!
PASSED!

!testRun: #AccountReporterTest #test22NetTransferForPortfolioWithAccountShouldNotReflectWithdraws stamp: 'fr 11/16/2020 13:34:09'!
PASSED!

!testRun: #AccountReporterTest #test23NetTransferForPortfoliosWithPortfoliosShouldReflectOutgoingAndIncomingTransfers stamp: 'fr 11/16/2020 13:34:09'!
PASSED!

!testRun: #AccountReporterTest #test24NetTransferForPortfoliosWithPortfoliosShouldNotRelfectDepositsOrWithdraws stamp: 'fr 11/16/2020 13:34:09'!
PASSED!
!AccountReporterTest methodsFor: 'tests - net transfer' stamp: 'fr 11/16/2020 13:35:11' prior: 50907001!
test23NetTransferForPortfoliosWithPortfoliosShouldReflectOutgoingAndIncomingTransfers
	


	. 	
				
	self assert: reporter transferNet equals: 20.
	
	self  createWith: [
					self createTransferNetReporterForPortfolioWithPortfolioWithAccount.
					self createAnotherNewAccount
				  ] 
		perform: [
					Transfer 	move: 30 from: anotherAccount to: account. 
					Transfer 	move: 10 from: account to: anotherAccount
			      ] 
		assertTransactionIsReflectedWithValue: 0! !
!AccountReporterTest methodsFor: 'tests - net transfer' stamp: 'fr 11/16/2020 13:35:13' prior: 50911149!
test23NetTransferForPortfoliosWithPortfoliosShouldReflectOutgoingAndIncomingTransfers
	


	. 	
				
	self assert: reporter transferNet equals: 20.
	
	self  createWith: [
					self createTransferNetReporterForPortfolioWithPortfolioWithAccount.
					self createAnotherNewAccount
				  ] 
		perform: [
					Transfer 	move: 30 from: anotherAccount to: account. 
					Transfer 	move: 10 from: account to: anotherAccount
			      ] 
		assertTransactionIsReflectedWithValue: 20! !
!AccountReporterTest methodsFor: 'tests - net transfer' stamp: 'fr 11/16/2020 13:35:16' prior: 50911168!
test23NetTransferForPortfoliosWithPortfoliosShouldReflectOutgoingAndIncomingTransfers
	
	self  createWith: [
					self createTransferNetReporterForPortfolioWithPortfolioWithAccount.
					self createAnotherNewAccount
				  ] 
		perform: [
					Transfer 	move: 30 from: anotherAccount to: account. 
					Transfer 	move: 10 from: account to: anotherAccount
			      ] 
		assertTransactionIsReflectedWithValue: 20! !

!testRun: #AccountReporterTest #test23NetTransferForPortfoliosWithPortfoliosShouldReflectOutgoingAndIncomingTransfers stamp: 'fr 11/16/2020 13:35:17'!
PASSED!

!testRun: #AccountReporterTest #test01AccountSummaryForAccountWithNoTransactionsShouldJustShowBalanceZero stamp: 'fr 11/16/2020 13:35:17'!
PASSED!

!testRun: #AccountReporterTest #test02AccountSummaryShouldReflectDepositsOnAccounts stamp: 'fr 11/16/2020 13:35:17'!
PASSED!

!testRun: #AccountReporterTest #test03AccountSummaryShouldReflectWithdrawsOnAccounts stamp: 'fr 11/16/2020 13:35:17'!
PASSED!

!testRun: #AccountReporterTest #test04AccountSummaryShouldReflectOutgoingTransfersOnAccounts stamp: 'fr 11/16/2020 13:35:17'!
PASSED!

!testRun: #AccountReporterTest #test05AccountSummaryShouldReflectIncomingTransfersOnAccounts stamp: 'fr 11/16/2020 13:35:17'!
PASSED!

!testRun: #AccountReporterTest #test06AccountSummaryForPortfolioWithNoTransactionsShouldJustShowBalanceZero stamp: 'fr 11/16/2020 13:35:17'!
PASSED!

!testRun: #AccountReporterTest #test07AccountSummaryShouldReflectDepositsOnPortfoliosWithAccounts stamp: 'fr 11/16/2020 13:35:17'!
PASSED!

!testRun: #AccountReporterTest #test08AccountSummaryShouldReflectWithdrawsOnPortfoliosWithAccounts stamp: 'fr 11/16/2020 13:35:17'!
PASSED!

!testRun: #AccountReporterTest #test09AccountSummaryShouldReflectOutgoingAndIncomingTransfersOnPortfoliosWithAccounts stamp: 'fr 11/16/2020 13:35:17'!
PASSED!

!testRun: #AccountReporterTest #test10AccountSummaryShouldReflectDepositsOnPortfoliosWithPortfolios stamp: 'fr 11/16/2020 13:35:17'!
PASSED!

!testRun: #AccountReporterTest #test11AccountSummaryShouldReflectWithdrawsOnPortfoliosWithPortfolios stamp: 'fr 11/16/2020 13:35:17'!
PASSED!

!testRun: #AccountReporterTest #test12AccountSummaryShouldReflectOutgoingAndIncomingTransfersOnPortfoliosWithPortfoliosAndAccounts stamp: 'fr 11/16/2020 13:35:17'!
PASSED!

!testRun: #AccountReporterTest #test13NetTransferForAccountWithNoTransactionsShouldBeZero stamp: 'fr 11/16/2020 13:35:17'!
PASSED!

!testRun: #AccountReporterTest #test14NetTransferForAccountWithAnOutgoingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 13:35:17'!
PASSED!

!testRun: #AccountReporterTest #test15NetTransferForAccountWithAnIncomingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 13:35:17'!
PASSED!

!testRun: #AccountReporterTest #test16NetTransferForAccountShouldNotReflectDeposits stamp: 'fr 11/16/2020 13:35:17'!
PASSED!

!testRun: #AccountReporterTest #test17NetTransferForAccountShouldNotReflectWithdraws stamp: 'fr 11/16/2020 13:35:17'!
PASSED!

!testRun: #AccountReporterTest #test18NetTransferForPortfolioWithNoTransactionsShouldBeZero stamp: 'fr 11/16/2020 13:35:17'!
PASSED!

!testRun: #AccountReporterTest #test19NetTransferForPortfolioWithAccountWithAnOutgoingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 13:35:17'!
PASSED!

!testRun: #AccountReporterTest #test20NetTransferForPortfolioWithAccountWithAnIncomingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 13:35:17'!
PASSED!

!testRun: #AccountReporterTest #test21NetTransferForPortfolioWithAccountShouldNotReflectDeposits stamp: 'fr 11/16/2020 13:35:17'!
PASSED!

!testRun: #AccountReporterTest #test22NetTransferForPortfolioWithAccountShouldNotReflectWithdraws stamp: 'fr 11/16/2020 13:35:17'!
PASSED!

!testRun: #AccountReporterTest #test23NetTransferForPortfoliosWithPortfoliosShouldReflectOutgoingAndIncomingTransfers stamp: 'fr 11/16/2020 13:35:17'!
PASSED!

!testRun: #AccountReporterTest #test24NetTransferForPortfoliosWithPortfoliosShouldNotRelfectDepositsOrWithdraws stamp: 'fr 11/16/2020 13:35:17'!
PASSED!
!AccountReporterTest methodsFor: 'tests - net transfer' stamp: 'fr 11/16/2020 13:35:31' prior: 50907316!
test24NetTransferForPortfoliosWithPortfoliosShouldNotRelfectDepositsOrWithdraws

	self createTransferNetReporterForPortfolioWithPortfolioWithAccount.

	Deposit register: 100 on: account.
	Withdraw register: 50 on: account.
				
	self assert: reporter transferNet equals: 0.
	
Transfer 	move: 30 from: anotherAccount to: account. 
	Transfer 	move: 10 from: account to: anotherAccount! !

!methodRemoval: AccountReporterTest #test24NetTransferForPortfoliosWithPortfoliosShouldNotRelfectDepositsOrWithdraws stamp: 'fr 11/16/2020 13:35:45'!
test24NetTransferForPortfoliosWithPortfoliosShouldNotRelfectDepositsOrWithdraws

	self createTransferNetReporterForPortfolioWithPortfolioWithAccount.

	Deposit register: 100 on: account.
	Withdraw register: 50 on: account.
				
	self assert: reporter transferNet equals: 0.
	
Transfer 	move: 30 from: anotherAccount to: account. 
	Transfer 	move: 10 from: account to: anotherAccount!

----SNAPSHOT----(16 November 2020 13:41:38) CuisUniversity-4384.image priorSource: 18443545!
!AccountReporterTest methodsFor: 'tests - net transfer' stamp: 'fr 11/16/2020 13:52:46'!
test24NetTransferForPortfoliosWithPortfoliosShouldNotRelfectDepositsOrWithdraws

	self createNewAccount. 
	portfolio _ Portfolio with: account.
	anotherPortfolio _ Portfolio with: portfolio.
	reporter _ TransferNetReporter for: anotherPortfolio.
	
	Deposit register: 100 on: account.
	Withdraw register: 50 on: account.
				
	self assert: [reporter transferNet = 0]! !

!testRun: #AccountReporterTest #test24NetTransferForPortfoliosWithPortfoliosShouldNotRelfectDepositsOrWithdraws stamp: 'fr 11/16/2020 13:52:47'!
PASSED!

!testRun: #AccountReporterTest #test01AccountSummaryForAccountWithNoTransactionsShouldJustShowBalanceZero stamp: 'fr 11/16/2020 13:52:47'!
PASSED!

!testRun: #AccountReporterTest #test02AccountSummaryShouldReflectDepositsOnAccounts stamp: 'fr 11/16/2020 13:52:47'!
PASSED!

!testRun: #AccountReporterTest #test03AccountSummaryShouldReflectWithdrawsOnAccounts stamp: 'fr 11/16/2020 13:52:47'!
PASSED!

!testRun: #AccountReporterTest #test04AccountSummaryShouldReflectOutgoingTransfersOnAccounts stamp: 'fr 11/16/2020 13:52:47'!
PASSED!

!testRun: #AccountReporterTest #test05AccountSummaryShouldReflectIncomingTransfersOnAccounts stamp: 'fr 11/16/2020 13:52:47'!
PASSED!

!testRun: #AccountReporterTest #test06AccountSummaryForPortfolioWithNoTransactionsShouldJustShowBalanceZero stamp: 'fr 11/16/2020 13:52:47'!
PASSED!

!testRun: #AccountReporterTest #test07AccountSummaryShouldReflectDepositsOnPortfoliosWithAccounts stamp: 'fr 11/16/2020 13:52:47'!
PASSED!

!testRun: #AccountReporterTest #test08AccountSummaryShouldReflectWithdrawsOnPortfoliosWithAccounts stamp: 'fr 11/16/2020 13:52:47'!
PASSED!

!testRun: #AccountReporterTest #test09AccountSummaryShouldReflectOutgoingAndIncomingTransfersOnPortfoliosWithAccounts stamp: 'fr 11/16/2020 13:52:47'!
PASSED!

!testRun: #AccountReporterTest #test10AccountSummaryShouldReflectDepositsOnPortfoliosWithPortfolios stamp: 'fr 11/16/2020 13:52:47'!
PASSED!

!testRun: #AccountReporterTest #test11AccountSummaryShouldReflectWithdrawsOnPortfoliosWithPortfolios stamp: 'fr 11/16/2020 13:52:47'!
PASSED!

!testRun: #AccountReporterTest #test12AccountSummaryShouldReflectOutgoingAndIncomingTransfersOnPortfoliosWithPortfoliosAndAccounts stamp: 'fr 11/16/2020 13:52:47'!
PASSED!

!testRun: #AccountReporterTest #test13NetTransferForAccountWithNoTransactionsShouldBeZero stamp: 'fr 11/16/2020 13:52:47'!
PASSED!

!testRun: #AccountReporterTest #test14NetTransferForAccountWithAnOutgoingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 13:52:47'!
PASSED!

!testRun: #AccountReporterTest #test15NetTransferForAccountWithAnIncomingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 13:52:47'!
PASSED!

!testRun: #AccountReporterTest #test16NetTransferForAccountShouldNotReflectDeposits stamp: 'fr 11/16/2020 13:52:47'!
PASSED!

!testRun: #AccountReporterTest #test17NetTransferForAccountShouldNotReflectWithdraws stamp: 'fr 11/16/2020 13:52:47'!
PASSED!

!testRun: #AccountReporterTest #test18NetTransferForPortfolioWithNoTransactionsShouldBeZero stamp: 'fr 11/16/2020 13:52:47'!
PASSED!

!testRun: #AccountReporterTest #test19NetTransferForPortfolioWithAccountWithAnOutgoingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 13:52:47'!
PASSED!

!testRun: #AccountReporterTest #test20NetTransferForPortfolioWithAccountWithAnIncomingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 13:52:47'!
PASSED!

!testRun: #AccountReporterTest #test21NetTransferForPortfolioWithAccountShouldNotReflectDeposits stamp: 'fr 11/16/2020 13:52:47'!
PASSED!

!testRun: #AccountReporterTest #test22NetTransferForPortfolioWithAccountShouldNotReflectWithdraws stamp: 'fr 11/16/2020 13:52:47'!
PASSED!

!testRun: #AccountReporterTest #test23NetTransferForPortfoliosWithPortfoliosShouldReflectOutgoingAndIncomingTransfers stamp: 'fr 11/16/2020 13:52:47'!
PASSED!

!testRun: #AccountReporterTest #test24NetTransferForPortfoliosWithPortfoliosShouldNotRelfectDepositsOrWithdraws stamp: 'fr 11/16/2020 13:52:47'!
PASSED!
!AccountReporterTest methodsFor: 'tests - net transfer' stamp: 'fr 11/16/2020 13:53:39' prior: 50911351!
test24NetTransferForPortfoliosWithPortfoliosShouldNotRelfectDepositsOrWithdraws

	self createTransferNetReporterForPortfolioWithPortfolioWithAccount.
	
	Deposit register: 100 on: account.
	Withdraw register: 50 on: account.
				
	self assert: [reporter transferNet = 0]! !

!testRun: #AccountReporterTest #test24NetTransferForPortfoliosWithPortfoliosShouldNotRelfectDepositsOrWithdraws stamp: 'fr 11/16/2020 13:53:40'!
PASSED!

!testRun: #AccountReporterTest #test01AccountSummaryForAccountWithNoTransactionsShouldJustShowBalanceZero stamp: 'fr 11/16/2020 13:53:40'!
PASSED!

!testRun: #AccountReporterTest #test02AccountSummaryShouldReflectDepositsOnAccounts stamp: 'fr 11/16/2020 13:53:40'!
PASSED!

!testRun: #AccountReporterTest #test03AccountSummaryShouldReflectWithdrawsOnAccounts stamp: 'fr 11/16/2020 13:53:40'!
PASSED!

!testRun: #AccountReporterTest #test04AccountSummaryShouldReflectOutgoingTransfersOnAccounts stamp: 'fr 11/16/2020 13:53:40'!
PASSED!

!testRun: #AccountReporterTest #test05AccountSummaryShouldReflectIncomingTransfersOnAccounts stamp: 'fr 11/16/2020 13:53:40'!
PASSED!

!testRun: #AccountReporterTest #test06AccountSummaryForPortfolioWithNoTransactionsShouldJustShowBalanceZero stamp: 'fr 11/16/2020 13:53:40'!
PASSED!

!testRun: #AccountReporterTest #test07AccountSummaryShouldReflectDepositsOnPortfoliosWithAccounts stamp: 'fr 11/16/2020 13:53:40'!
PASSED!

!testRun: #AccountReporterTest #test08AccountSummaryShouldReflectWithdrawsOnPortfoliosWithAccounts stamp: 'fr 11/16/2020 13:53:40'!
PASSED!

!testRun: #AccountReporterTest #test09AccountSummaryShouldReflectOutgoingAndIncomingTransfersOnPortfoliosWithAccounts stamp: 'fr 11/16/2020 13:53:40'!
PASSED!

!testRun: #AccountReporterTest #test10AccountSummaryShouldReflectDepositsOnPortfoliosWithPortfolios stamp: 'fr 11/16/2020 13:53:40'!
PASSED!

!testRun: #AccountReporterTest #test11AccountSummaryShouldReflectWithdrawsOnPortfoliosWithPortfolios stamp: 'fr 11/16/2020 13:53:40'!
PASSED!

!testRun: #AccountReporterTest #test12AccountSummaryShouldReflectOutgoingAndIncomingTransfersOnPortfoliosWithPortfoliosAndAccounts stamp: 'fr 11/16/2020 13:53:40'!
PASSED!

!testRun: #AccountReporterTest #test13NetTransferForAccountWithNoTransactionsShouldBeZero stamp: 'fr 11/16/2020 13:53:40'!
PASSED!

!testRun: #AccountReporterTest #test14NetTransferForAccountWithAnOutgoingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 13:53:40'!
PASSED!

!testRun: #AccountReporterTest #test15NetTransferForAccountWithAnIncomingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 13:53:40'!
PASSED!

!testRun: #AccountReporterTest #test16NetTransferForAccountShouldNotReflectDeposits stamp: 'fr 11/16/2020 13:53:40'!
PASSED!

!testRun: #AccountReporterTest #test17NetTransferForAccountShouldNotReflectWithdraws stamp: 'fr 11/16/2020 13:53:40'!
PASSED!

!testRun: #AccountReporterTest #test18NetTransferForPortfolioWithNoTransactionsShouldBeZero stamp: 'fr 11/16/2020 13:53:40'!
PASSED!

!testRun: #AccountReporterTest #test19NetTransferForPortfolioWithAccountWithAnOutgoingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 13:53:40'!
PASSED!

!testRun: #AccountReporterTest #test20NetTransferForPortfolioWithAccountWithAnIncomingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 13:53:40'!
PASSED!

!testRun: #AccountReporterTest #test21NetTransferForPortfolioWithAccountShouldNotReflectDeposits stamp: 'fr 11/16/2020 13:53:40'!
PASSED!

!testRun: #AccountReporterTest #test22NetTransferForPortfolioWithAccountShouldNotReflectWithdraws stamp: 'fr 11/16/2020 13:53:40'!
PASSED!

!testRun: #AccountReporterTest #test23NetTransferForPortfoliosWithPortfoliosShouldReflectOutgoingAndIncomingTransfers stamp: 'fr 11/16/2020 13:53:40'!
PASSED!

!testRun: #AccountReporterTest #test24NetTransferForPortfoliosWithPortfoliosShouldNotRelfectDepositsOrWithdraws stamp: 'fr 11/16/2020 13:53:40'!
PASSED!
!AccountReporterTest methodsFor: 'tests - net transfer' stamp: 'fr 11/16/2020 13:53:55' prior: 50911479!
test24NetTransferForPortfoliosWithPortfoliosShouldNotRelfectDepositsOrWithdraws

	self createTransferNetReporterForPortfolioWithPortfolioWithAccount.
	
	Deposit register: 100 on: account.
	Withdraw register: 50 on: account.
				
	self assert: reporter transferNet equals: 0! !
!AccountReporterTest methodsFor: 'tests - net transfer' stamp: 'fr 11/16/2020 13:54:47' prior: 50911604!
test24NetTransferForPortfoliosWithPortfoliosShouldNotRelfectDepositsOrWithdraws
	
	self createWith: [self createTransferNetReporterForPortfolioWithPortfolioWithAccount] 
		perform: [
					Deposit register: 100 on: account.
					Withdraw register: 50 on: account
			      ] 
		assertTransactionIsReflectedWithValue: 0! !

!testRun: #AccountReporterTest #test24NetTransferForPortfoliosWithPortfoliosShouldNotRelfectDepositsOrWithdraws stamp: 'fr 11/16/2020 13:54:48'!
PASSED!

!testRun: #AccountReporterTest #test01AccountSummaryForAccountWithNoTransactionsShouldJustShowBalanceZero stamp: 'fr 11/16/2020 13:54:48'!
PASSED!

!testRun: #AccountReporterTest #test02AccountSummaryShouldReflectDepositsOnAccounts stamp: 'fr 11/16/2020 13:54:48'!
PASSED!

!testRun: #AccountReporterTest #test03AccountSummaryShouldReflectWithdrawsOnAccounts stamp: 'fr 11/16/2020 13:54:48'!
PASSED!

!testRun: #AccountReporterTest #test04AccountSummaryShouldReflectOutgoingTransfersOnAccounts stamp: 'fr 11/16/2020 13:54:48'!
PASSED!

!testRun: #AccountReporterTest #test05AccountSummaryShouldReflectIncomingTransfersOnAccounts stamp: 'fr 11/16/2020 13:54:48'!
PASSED!

!testRun: #AccountReporterTest #test06AccountSummaryForPortfolioWithNoTransactionsShouldJustShowBalanceZero stamp: 'fr 11/16/2020 13:54:48'!
PASSED!

!testRun: #AccountReporterTest #test07AccountSummaryShouldReflectDepositsOnPortfoliosWithAccounts stamp: 'fr 11/16/2020 13:54:48'!
PASSED!

!testRun: #AccountReporterTest #test08AccountSummaryShouldReflectWithdrawsOnPortfoliosWithAccounts stamp: 'fr 11/16/2020 13:54:48'!
PASSED!

!testRun: #AccountReporterTest #test09AccountSummaryShouldReflectOutgoingAndIncomingTransfersOnPortfoliosWithAccounts stamp: 'fr 11/16/2020 13:54:48'!
PASSED!

!testRun: #AccountReporterTest #test10AccountSummaryShouldReflectDepositsOnPortfoliosWithPortfolios stamp: 'fr 11/16/2020 13:54:48'!
PASSED!

!testRun: #AccountReporterTest #test11AccountSummaryShouldReflectWithdrawsOnPortfoliosWithPortfolios stamp: 'fr 11/16/2020 13:54:48'!
PASSED!

!testRun: #AccountReporterTest #test12AccountSummaryShouldReflectOutgoingAndIncomingTransfersOnPortfoliosWithPortfoliosAndAccounts stamp: 'fr 11/16/2020 13:54:48'!
PASSED!

!testRun: #AccountReporterTest #test13NetTransferForAccountWithNoTransactionsShouldBeZero stamp: 'fr 11/16/2020 13:54:48'!
PASSED!

!testRun: #AccountReporterTest #test14NetTransferForAccountWithAnOutgoingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 13:54:48'!
PASSED!

!testRun: #AccountReporterTest #test15NetTransferForAccountWithAnIncomingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 13:54:48'!
PASSED!

!testRun: #AccountReporterTest #test16NetTransferForAccountShouldNotReflectDeposits stamp: 'fr 11/16/2020 13:54:48'!
PASSED!

!testRun: #AccountReporterTest #test17NetTransferForAccountShouldNotReflectWithdraws stamp: 'fr 11/16/2020 13:54:48'!
PASSED!

!testRun: #AccountReporterTest #test18NetTransferForPortfolioWithNoTransactionsShouldBeZero stamp: 'fr 11/16/2020 13:54:48'!
PASSED!

!testRun: #AccountReporterTest #test19NetTransferForPortfolioWithAccountWithAnOutgoingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 13:54:48'!
PASSED!

!testRun: #AccountReporterTest #test20NetTransferForPortfolioWithAccountWithAnIncomingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 13:54:48'!
PASSED!

!testRun: #AccountReporterTest #test21NetTransferForPortfolioWithAccountShouldNotReflectDeposits stamp: 'fr 11/16/2020 13:54:48'!
PASSED!

!testRun: #AccountReporterTest #test22NetTransferForPortfolioWithAccountShouldNotReflectWithdraws stamp: 'fr 11/16/2020 13:54:48'!
PASSED!

!testRun: #AccountReporterTest #test23NetTransferForPortfoliosWithPortfoliosShouldReflectOutgoingAndIncomingTransfers stamp: 'fr 11/16/2020 13:54:48'!
PASSED!

!testRun: #AccountReporterTest #test24NetTransferForPortfoliosWithPortfoliosShouldNotRelfectDepositsOrWithdraws stamp: 'fr 11/16/2020 13:54:48'!
PASSED!
!AccountReporterTest methodsFor: 'tests - net transfer' stamp: 'fr 11/16/2020 13:56:25' prior: 50906828!
test18NetTransferForPortfolioWithNoTransactionsShouldBeZero
	
	self createWith: [
					portfolio _ Portfolio new.
					reporter _ 	TransferNetReporter for: portfolio
				 ] perform: [] 
		assertTransactionIsReflectedWithValue: 0! !

!testRun: #AccountReporterTest #test18NetTransferForPortfolioWithNoTransactionsShouldBeZero stamp: 'fr 11/16/2020 13:56:25'!
PASSED!

!testRun: #AccountReporterTest #test01AccountSummaryForAccountWithNoTransactionsShouldJustShowBalanceZero stamp: 'fr 11/16/2020 13:56:25'!
PASSED!

!testRun: #AccountReporterTest #test02AccountSummaryShouldReflectDepositsOnAccounts stamp: 'fr 11/16/2020 13:56:25'!
PASSED!

!testRun: #AccountReporterTest #test03AccountSummaryShouldReflectWithdrawsOnAccounts stamp: 'fr 11/16/2020 13:56:25'!
PASSED!

!testRun: #AccountReporterTest #test04AccountSummaryShouldReflectOutgoingTransfersOnAccounts stamp: 'fr 11/16/2020 13:56:25'!
PASSED!

!testRun: #AccountReporterTest #test05AccountSummaryShouldReflectIncomingTransfersOnAccounts stamp: 'fr 11/16/2020 13:56:25'!
PASSED!

!testRun: #AccountReporterTest #test06AccountSummaryForPortfolioWithNoTransactionsShouldJustShowBalanceZero stamp: 'fr 11/16/2020 13:56:25'!
PASSED!

!testRun: #AccountReporterTest #test07AccountSummaryShouldReflectDepositsOnPortfoliosWithAccounts stamp: 'fr 11/16/2020 13:56:25'!
PASSED!

!testRun: #AccountReporterTest #test08AccountSummaryShouldReflectWithdrawsOnPortfoliosWithAccounts stamp: 'fr 11/16/2020 13:56:25'!
PASSED!

!testRun: #AccountReporterTest #test09AccountSummaryShouldReflectOutgoingAndIncomingTransfersOnPortfoliosWithAccounts stamp: 'fr 11/16/2020 13:56:25'!
PASSED!

!testRun: #AccountReporterTest #test10AccountSummaryShouldReflectDepositsOnPortfoliosWithPortfolios stamp: 'fr 11/16/2020 13:56:25'!
PASSED!

!testRun: #AccountReporterTest #test11AccountSummaryShouldReflectWithdrawsOnPortfoliosWithPortfolios stamp: 'fr 11/16/2020 13:56:25'!
PASSED!

!testRun: #AccountReporterTest #test12AccountSummaryShouldReflectOutgoingAndIncomingTransfersOnPortfoliosWithPortfoliosAndAccounts stamp: 'fr 11/16/2020 13:56:25'!
PASSED!

!testRun: #AccountReporterTest #test13NetTransferForAccountWithNoTransactionsShouldBeZero stamp: 'fr 11/16/2020 13:56:25'!
PASSED!

!testRun: #AccountReporterTest #test14NetTransferForAccountWithAnOutgoingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 13:56:25'!
PASSED!

!testRun: #AccountReporterTest #test15NetTransferForAccountWithAnIncomingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 13:56:25'!
PASSED!

!testRun: #AccountReporterTest #test16NetTransferForAccountShouldNotReflectDeposits stamp: 'fr 11/16/2020 13:56:25'!
PASSED!

!testRun: #AccountReporterTest #test17NetTransferForAccountShouldNotReflectWithdraws stamp: 'fr 11/16/2020 13:56:25'!
PASSED!

!testRun: #AccountReporterTest #test18NetTransferForPortfolioWithNoTransactionsShouldBeZero stamp: 'fr 11/16/2020 13:56:25'!
PASSED!

!testRun: #AccountReporterTest #test19NetTransferForPortfolioWithAccountWithAnOutgoingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 13:56:25'!
PASSED!

!testRun: #AccountReporterTest #test20NetTransferForPortfolioWithAccountWithAnIncomingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 13:56:25'!
PASSED!

!testRun: #AccountReporterTest #test21NetTransferForPortfolioWithAccountShouldNotReflectDeposits stamp: 'fr 11/16/2020 13:56:25'!
PASSED!

!testRun: #AccountReporterTest #test22NetTransferForPortfolioWithAccountShouldNotReflectWithdraws stamp: 'fr 11/16/2020 13:56:25'!
PASSED!

!testRun: #AccountReporterTest #test23NetTransferForPortfoliosWithPortfoliosShouldReflectOutgoingAndIncomingTransfers stamp: 'fr 11/16/2020 13:56:25'!
PASSED!

!testRun: #AccountReporterTest #test24NetTransferForPortfoliosWithPortfoliosShouldNotRelfectDepositsOrWithdraws stamp: 'fr 11/16/2020 13:56:25'!
PASSED!
!AccountReporterTest methodsFor: 'tests - net transfer' stamp: 'fr 11/16/2020 13:56:30' prior: 50911742!
test18NetTransferForPortfolioWithNoTransactionsShouldBeZero
	
	self createWith: [
					portfolio _ Portfolio new.
					reporter _ 	TransferNetReporter for: portfolio
				 ] 
		perform: [] 
		assertTransactionIsReflectedWithValue: 0! !

----SNAPSHOT----(16 November 2020 13:57:39) CuisUniversity-4384.image priorSource: 18550296!

----SNAPSHOT----(16 November 2020 14:05:34) CuisUniversity-4384.image priorSource: 18567178!

!testRun: #AccountReporterTest #test01AccountSummaryForAccountWithNoTransactionsShouldJustShowBalanceZero stamp: 'fr 11/16/2020 14:05:35'!
PASSED!

!testRun: #AccountReporterTest #test02AccountSummaryShouldReflectDepositsOnAccounts stamp: 'fr 11/16/2020 14:05:35'!
PASSED!

!testRun: #AccountReporterTest #test03AccountSummaryShouldReflectWithdrawsOnAccounts stamp: 'fr 11/16/2020 14:05:35'!
PASSED!

!testRun: #AccountReporterTest #test04AccountSummaryShouldReflectOutgoingTransfersOnAccounts stamp: 'fr 11/16/2020 14:05:35'!
PASSED!

!testRun: #AccountReporterTest #test05AccountSummaryShouldReflectIncomingTransfersOnAccounts stamp: 'fr 11/16/2020 14:05:35'!
PASSED!

!testRun: #AccountReporterTest #test06AccountSummaryForPortfolioWithNoTransactionsShouldJustShowBalanceZero stamp: 'fr 11/16/2020 14:05:35'!
PASSED!

!testRun: #AccountReporterTest #test07AccountSummaryShouldReflectDepositsOnPortfoliosWithAccounts stamp: 'fr 11/16/2020 14:05:35'!
PASSED!

!testRun: #AccountReporterTest #test08AccountSummaryShouldReflectWithdrawsOnPortfoliosWithAccounts stamp: 'fr 11/16/2020 14:05:35'!
PASSED!

!testRun: #AccountReporterTest #test09AccountSummaryShouldReflectOutgoingAndIncomingTransfersOnPortfoliosWithAccounts stamp: 'fr 11/16/2020 14:05:35'!
PASSED!

!testRun: #AccountReporterTest #test10AccountSummaryShouldReflectDepositsOnPortfoliosWithPortfolios stamp: 'fr 11/16/2020 14:05:35'!
PASSED!

!testRun: #AccountReporterTest #test11AccountSummaryShouldReflectWithdrawsOnPortfoliosWithPortfolios stamp: 'fr 11/16/2020 14:05:35'!
PASSED!

!testRun: #AccountReporterTest #test12AccountSummaryShouldReflectOutgoingAndIncomingTransfersOnPortfoliosWithPortfoliosAndAccounts stamp: 'fr 11/16/2020 14:05:35'!
PASSED!

!testRun: #AccountReporterTest #test13NetTransferForAccountWithNoTransactionsShouldBeZero stamp: 'fr 11/16/2020 14:05:35'!
PASSED!

!testRun: #AccountReporterTest #test14NetTransferForAccountWithAnOutgoingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 14:05:35'!
PASSED!

!testRun: #AccountReporterTest #test15NetTransferForAccountWithAnIncomingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 14:05:35'!
PASSED!

!testRun: #AccountReporterTest #test16NetTransferForAccountShouldNotReflectDeposits stamp: 'fr 11/16/2020 14:05:35'!
PASSED!

!testRun: #AccountReporterTest #test17NetTransferForAccountShouldNotReflectWithdraws stamp: 'fr 11/16/2020 14:05:35'!
PASSED!

!testRun: #AccountReporterTest #test18NetTransferForPortfolioWithNoTransactionsShouldBeZero stamp: 'fr 11/16/2020 14:05:35'!
PASSED!

!testRun: #AccountReporterTest #test19NetTransferForPortfolioWithAccountWithAnOutgoingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 14:05:35'!
PASSED!

!testRun: #AccountReporterTest #test20NetTransferForPortfolioWithAccountWithAnIncomingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 14:05:35'!
PASSED!

!testRun: #AccountReporterTest #test21NetTransferForPortfolioWithAccountShouldNotReflectDeposits stamp: 'fr 11/16/2020 14:05:35'!
PASSED!

!testRun: #AccountReporterTest #test22NetTransferForPortfolioWithAccountShouldNotReflectWithdraws stamp: 'fr 11/16/2020 14:05:35'!
PASSED!

!testRun: #AccountReporterTest #test23NetTransferForPortfoliosWithPortfoliosShouldReflectOutgoingAndIncomingTransfers stamp: 'fr 11/16/2020 14:05:35'!
PASSED!

!testRun: #AccountReporterTest #test24NetTransferForPortfoliosWithPortfoliosShouldNotRelfectDepositsOrWithdraws stamp: 'fr 11/16/2020 14:05:35'!
PASSED!

!testRun: #PortfolioReporterTest #test01TreeStructureReportForEmptyPortfolioWorksAsExpected stamp: 'fr 11/16/2020 14:05:35'!
PASSED!

!testRun: #PortfolioReporterTest #test02TreeStructureReportForPortfolioWithAccountsWorksAsExpected stamp: 'fr 11/16/2020 14:05:35'!
PASSED!

!testRun: #PortfolioReporterTest #test03TreeStructureReportForPortfolioWithAccountsAndPortfoliosWorksAsExpected stamp: 'fr 11/16/2020 14:05:35'!
PASSED!

!testRun: #PortfolioReporterTest #test04AccountsShouldUseADefaultNameIfNoneIsSpecified stamp: 'fr 11/16/2020 14:05:35'!
PASSED!

!testRun: #PortfolioReporterTest #test05SpecialReportForEmptyPortfolioWorksAsExpected stamp: 'fr 11/16/2020 14:05:35'!
PASSED!

!testRun: #PortfolioReporterTest #test06SpecialReportForPortfolioWithAccountsWithAnyKindOfTransactionsWorksAsExpected stamp: 'fr 11/16/2020 14:05:35'!
PASSED!

!testRun: #PortfolioReporterTest #test07SpecialReportForPortfolioWithAccountsAndPortfoliosWithAnyKindOfTransactionsWorksAsExpected stamp: 'fr 11/16/2020 14:05:35'!
PASSED!

!testRun: #PortfolioTest #test01BalanceOfPortfolioWithoutAccountsIsZero stamp: 'fr 11/16/2020 14:05:35'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithOneAccountIsAccountBalance stamp: 'fr 11/16/2020 14:05:35'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioIsCalculatedRecursivelyOnPortfolios stamp: 'fr 11/16/2020 14:05:35'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithoutAccountsHasNoRegisteredTransaction stamp: 'fr 11/16/2020 14:05:35'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredItsAccountsTransactions stamp: 'fr 11/16/2020 14:05:35'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioLooksForRegisteredTransactionsRecursively stamp: 'fr 11/16/2020 14:05:35'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioHasNoTransactionWhenHasNoAccounts stamp: 'fr 11/16/2020 14:05:35'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTransactionsIncludesAllItsAccountsTransactions stamp: 'fr 11/16/2020 14:05:35'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioTransactionsAreCalculatedRecursively stamp: 'fr 11/16/2020 14:05:35'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCanNotIncludeTheSameAccountMoreThanOnce stamp: 'fr 11/16/2020 14:05:35'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCanNotIncludeAccountOfItsPortfolios stamp: 'fr 11/16/2020 14:05:35'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioCanNotIncludeItself stamp: 'fr 11/16/2020 14:05:35'!
PASSED!

!testRun: #PortfolioTest #test13ComposedPortfolioCanNotHaveParentPortfolioAccount stamp: 'fr 11/16/2020 14:05:35'!
PASSED!

!testRun: #PortfolioTest #test14ComposedPortfolioCanNotHaveAccountOfAnyRootParentRecursively stamp: 'fr 11/16/2020 14:05:35'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotIncludeAnyOfTheComposedAccountOfPortfolioToAdd stamp: 'fr 11/16/2020 14:05:35'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'fr 11/16/2020 14:05:35'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'fr 11/16/2020 14:05:35'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'fr 11/16/2020 14:05:35'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'fr 11/16/2020 14:05:35'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'fr 11/16/2020 14:05:35'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'fr 11/16/2020 14:05:35'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'fr 11/16/2020 14:05:35'!
PASSED!

!testRun: #TransferTest #test01TransferMovesMoneyAffectingBalancesAsExpected stamp: 'fr 11/16/2020 14:05:35'!
PASSED!

!testRun: #TransferTest #test02AccountsThatParticipateInTheTransferRegisterTheCorrespondingLeg stamp: 'fr 11/16/2020 14:05:35'!
PASSED!

!testRun: #TransferTest #test03LegsKnowTheirComplementaryLegThroughTheTransfer stamp: 'fr 11/16/2020 14:05:35'!
PASSED!

!testRun: #TransferTest #test04TransferValueCanNotBeZero stamp: 'fr 11/16/2020 14:05:35'!
PASSED!

!testRun: #TransferTest #test05TransferValueCanNotBeNegative stamp: 'fr 11/16/2020 14:05:35'!
PASSED!

!testRun: #TransferTest #test06TransferCanNotMoveMoneyFromAnAccountToItself stamp: 'fr 11/16/2020 14:05:35'!
PASSED!
!TransferTransaction class methodsFor: 'instance creation' stamp: 'fr 11/16/2020 14:06:30' prior: 50869421!
register: aTransferValue on: aReceptiveAccount for: aTransfer 
	
	^(self register: aTransferValue on: aReceptiveAccount) forTransfer: aTransfer ! !
!DepositByTransference class methodsFor: 'instance creation' stamp: 'fr 11/16/2020 14:06:46' prior: 50868964!
for: aTransferValue 
	
	^self new ! !
!WithdrawByTransference class methodsFor: 'instance creation' stamp: 'fr 11/16/2020 14:06:55' prior: 50868905!
for: aTransferValue 
	
	^self new
! !

!testRun: #AccountReporterTest #test01AccountSummaryForAccountWithNoTransactionsShouldJustShowBalanceZero stamp: 'fr 11/16/2020 14:07:26'!
PASSED!

!testRun: #AccountReporterTest #test02AccountSummaryShouldReflectDepositsOnAccounts stamp: 'fr 11/16/2020 14:07:26'!
PASSED!

!testRun: #AccountReporterTest #test03AccountSummaryShouldReflectWithdrawsOnAccounts stamp: 'fr 11/16/2020 14:07:26'!
PASSED!

!testRun: #AccountReporterTest #test04AccountSummaryShouldReflectOutgoingTransfersOnAccounts stamp: 'fr 11/16/2020 14:07:26'!
PASSED!

!testRun: #AccountReporterTest #test05AccountSummaryShouldReflectIncomingTransfersOnAccounts stamp: 'fr 11/16/2020 14:07:26'!
PASSED!

!testRun: #AccountReporterTest #test06AccountSummaryForPortfolioWithNoTransactionsShouldJustShowBalanceZero stamp: 'fr 11/16/2020 14:07:26'!
PASSED!

!testRun: #AccountReporterTest #test07AccountSummaryShouldReflectDepositsOnPortfoliosWithAccounts stamp: 'fr 11/16/2020 14:07:26'!
PASSED!

!testRun: #AccountReporterTest #test08AccountSummaryShouldReflectWithdrawsOnPortfoliosWithAccounts stamp: 'fr 11/16/2020 14:07:26'!
PASSED!

!testRun: #AccountReporterTest #test09AccountSummaryShouldReflectOutgoingAndIncomingTransfersOnPortfoliosWithAccounts stamp: 'fr 11/16/2020 14:07:26'!
PASSED!

!testRun: #AccountReporterTest #test10AccountSummaryShouldReflectDepositsOnPortfoliosWithPortfolios stamp: 'fr 11/16/2020 14:07:26'!
PASSED!

!testRun: #AccountReporterTest #test11AccountSummaryShouldReflectWithdrawsOnPortfoliosWithPortfolios stamp: 'fr 11/16/2020 14:07:26'!
PASSED!

!testRun: #AccountReporterTest #test12AccountSummaryShouldReflectOutgoingAndIncomingTransfersOnPortfoliosWithPortfoliosAndAccounts stamp: 'fr 11/16/2020 14:07:26'!
PASSED!

!testRun: #AccountReporterTest #test13NetTransferForAccountWithNoTransactionsShouldBeZero stamp: 'fr 11/16/2020 14:07:26'!
PASSED!

!testRun: #AccountReporterTest #test14NetTransferForAccountWithAnOutgoingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 14:07:26'!
PASSED!

!testRun: #AccountReporterTest #test15NetTransferForAccountWithAnIncomingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 14:07:26'!
PASSED!

!testRun: #AccountReporterTest #test16NetTransferForAccountShouldNotReflectDeposits stamp: 'fr 11/16/2020 14:07:26'!
PASSED!

!testRun: #AccountReporterTest #test17NetTransferForAccountShouldNotReflectWithdraws stamp: 'fr 11/16/2020 14:07:26'!
PASSED!

!testRun: #AccountReporterTest #test18NetTransferForPortfolioWithNoTransactionsShouldBeZero stamp: 'fr 11/16/2020 14:07:26'!
PASSED!

!testRun: #AccountReporterTest #test19NetTransferForPortfolioWithAccountWithAnOutgoingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 14:07:26'!
PASSED!

!testRun: #AccountReporterTest #test20NetTransferForPortfolioWithAccountWithAnIncomingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 14:07:26'!
PASSED!

!testRun: #AccountReporterTest #test21NetTransferForPortfolioWithAccountShouldNotReflectDeposits stamp: 'fr 11/16/2020 14:07:26'!
PASSED!

!testRun: #AccountReporterTest #test22NetTransferForPortfolioWithAccountShouldNotReflectWithdraws stamp: 'fr 11/16/2020 14:07:26'!
PASSED!

!testRun: #AccountReporterTest #test23NetTransferForPortfoliosWithPortfoliosShouldReflectOutgoingAndIncomingTransfers stamp: 'fr 11/16/2020 14:07:26'!
PASSED!

!testRun: #AccountReporterTest #test24NetTransferForPortfoliosWithPortfoliosShouldNotRelfectDepositsOrWithdraws stamp: 'fr 11/16/2020 14:07:26'!
PASSED!

!testRun: #PortfolioReporterTest #test01TreeStructureReportForEmptyPortfolioWorksAsExpected stamp: 'fr 11/16/2020 14:07:26'!
PASSED!

!testRun: #PortfolioReporterTest #test02TreeStructureReportForPortfolioWithAccountsWorksAsExpected stamp: 'fr 11/16/2020 14:07:26'!
PASSED!

!testRun: #PortfolioReporterTest #test03TreeStructureReportForPortfolioWithAccountsAndPortfoliosWorksAsExpected stamp: 'fr 11/16/2020 14:07:26'!
PASSED!

!testRun: #PortfolioReporterTest #test04AccountsShouldUseADefaultNameIfNoneIsSpecified stamp: 'fr 11/16/2020 14:07:26'!
PASSED!

!testRun: #PortfolioReporterTest #test05SpecialReportForEmptyPortfolioWorksAsExpected stamp: 'fr 11/16/2020 14:07:26'!
PASSED!

!testRun: #PortfolioReporterTest #test06SpecialReportForPortfolioWithAccountsWithAnyKindOfTransactionsWorksAsExpected stamp: 'fr 11/16/2020 14:07:26'!
PASSED!

!testRun: #PortfolioReporterTest #test07SpecialReportForPortfolioWithAccountsAndPortfoliosWithAnyKindOfTransactionsWorksAsExpected stamp: 'fr 11/16/2020 14:07:26'!
PASSED!

!testRun: #PortfolioTest #test01BalanceOfPortfolioWithoutAccountsIsZero stamp: 'fr 11/16/2020 14:07:26'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithOneAccountIsAccountBalance stamp: 'fr 11/16/2020 14:07:26'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioIsCalculatedRecursivelyOnPortfolios stamp: 'fr 11/16/2020 14:07:26'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithoutAccountsHasNoRegisteredTransaction stamp: 'fr 11/16/2020 14:07:26'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredItsAccountsTransactions stamp: 'fr 11/16/2020 14:07:26'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioLooksForRegisteredTransactionsRecursively stamp: 'fr 11/16/2020 14:07:26'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioHasNoTransactionWhenHasNoAccounts stamp: 'fr 11/16/2020 14:07:26'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTransactionsIncludesAllItsAccountsTransactions stamp: 'fr 11/16/2020 14:07:26'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioTransactionsAreCalculatedRecursively stamp: 'fr 11/16/2020 14:07:26'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCanNotIncludeTheSameAccountMoreThanOnce stamp: 'fr 11/16/2020 14:07:26'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCanNotIncludeAccountOfItsPortfolios stamp: 'fr 11/16/2020 14:07:26'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioCanNotIncludeItself stamp: 'fr 11/16/2020 14:07:26'!
PASSED!

!testRun: #PortfolioTest #test13ComposedPortfolioCanNotHaveParentPortfolioAccount stamp: 'fr 11/16/2020 14:07:26'!
PASSED!

!testRun: #PortfolioTest #test14ComposedPortfolioCanNotHaveAccountOfAnyRootParentRecursively stamp: 'fr 11/16/2020 14:07:26'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotIncludeAnyOfTheComposedAccountOfPortfolioToAdd stamp: 'fr 11/16/2020 14:07:26'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'fr 11/16/2020 14:07:26'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'fr 11/16/2020 14:07:26'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'fr 11/16/2020 14:07:26'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'fr 11/16/2020 14:07:26'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'fr 11/16/2020 14:07:26'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'fr 11/16/2020 14:07:27'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'fr 11/16/2020 14:07:27'!
PASSED!

!testRun: #TransferTest #test01TransferMovesMoneyAffectingBalancesAsExpected stamp: 'fr 11/16/2020 14:07:27'!
PASSED!

!testRun: #TransferTest #test02AccountsThatParticipateInTheTransferRegisterTheCorrespondingLeg stamp: 'fr 11/16/2020 14:07:27'!
PASSED!

!testRun: #TransferTest #test03LegsKnowTheirComplementaryLegThroughTheTransfer stamp: 'fr 11/16/2020 14:07:27'!
PASSED!

!testRun: #TransferTest #test04TransferValueCanNotBeZero stamp: 'fr 11/16/2020 14:07:27'!
PASSED!

!testRun: #TransferTest #test05TransferValueCanNotBeNegative stamp: 'fr 11/16/2020 14:07:27'!
PASSED!

!testRun: #TransferTest #test06TransferCanNotMoveMoneyFromAnAccountToItself stamp: 'fr 11/16/2020 14:07:27'!
PASSED!

----SNAPSHOT----(16 November 2020 14:07:36) CuisUniversity-4384.image priorSource: 18567272!

----QUIT----(16 November 2020 14:09:54) CuisUniversity-4384.image priorSource: 18583657!

----STARTUP---- (16 November 2020 15:29:18) as /home/fede/Documentos/Facultad/Inge1/Cuises/linux64/CuisUniversity-4384.image!


!testRun: #AccountReporterTest #test01AccountSummaryForAccountWithNoTransactionsShouldJustShowBalanceZero stamp: 'fr 11/16/2020 15:31:33'!
PASSED!

!testRun: #AccountReporterTest #test02AccountSummaryShouldReflectDepositsOnAccounts stamp: 'fr 11/16/2020 15:31:33'!
PASSED!

!testRun: #AccountReporterTest #test03AccountSummaryShouldReflectWithdrawsOnAccounts stamp: 'fr 11/16/2020 15:31:33'!
PASSED!

!testRun: #AccountReporterTest #test04AccountSummaryShouldReflectOutgoingTransfersOnAccounts stamp: 'fr 11/16/2020 15:31:33'!
PASSED!

!testRun: #AccountReporterTest #test05AccountSummaryShouldReflectIncomingTransfersOnAccounts stamp: 'fr 11/16/2020 15:31:33'!
PASSED!

!testRun: #AccountReporterTest #test06AccountSummaryForPortfolioWithNoTransactionsShouldJustShowBalanceZero stamp: 'fr 11/16/2020 15:31:33'!
PASSED!

!testRun: #AccountReporterTest #test07AccountSummaryShouldReflectDepositsOnPortfoliosWithAccounts stamp: 'fr 11/16/2020 15:31:33'!
PASSED!

!testRun: #AccountReporterTest #test08AccountSummaryShouldReflectWithdrawsOnPortfoliosWithAccounts stamp: 'fr 11/16/2020 15:31:33'!
PASSED!

!testRun: #AccountReporterTest #test09AccountSummaryShouldReflectOutgoingAndIncomingTransfersOnPortfoliosWithAccounts stamp: 'fr 11/16/2020 15:31:33'!
PASSED!

!testRun: #AccountReporterTest #test10AccountSummaryShouldReflectDepositsOnPortfoliosWithPortfolios stamp: 'fr 11/16/2020 15:31:33'!
PASSED!

!testRun: #AccountReporterTest #test11AccountSummaryShouldReflectWithdrawsOnPortfoliosWithPortfolios stamp: 'fr 11/16/2020 15:31:33'!
PASSED!

!testRun: #AccountReporterTest #test12AccountSummaryShouldReflectOutgoingAndIncomingTransfersOnPortfoliosWithPortfoliosAndAccounts stamp: 'fr 11/16/2020 15:31:33'!
PASSED!

!testRun: #AccountReporterTest #test13NetTransferForAccountWithNoTransactionsShouldBeZero stamp: 'fr 11/16/2020 15:31:33'!
PASSED!

!testRun: #AccountReporterTest #test14NetTransferForAccountWithAnOutgoingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 15:31:33'!
PASSED!

!testRun: #AccountReporterTest #test15NetTransferForAccountWithAnIncomingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 15:31:33'!
PASSED!

!testRun: #AccountReporterTest #test16NetTransferForAccountShouldNotReflectDeposits stamp: 'fr 11/16/2020 15:31:33'!
PASSED!

!testRun: #AccountReporterTest #test17NetTransferForAccountShouldNotReflectWithdraws stamp: 'fr 11/16/2020 15:31:33'!
PASSED!

!testRun: #AccountReporterTest #test18NetTransferForPortfolioWithNoTransactionsShouldBeZero stamp: 'fr 11/16/2020 15:31:33'!
PASSED!

!testRun: #AccountReporterTest #test19NetTransferForPortfolioWithAccountWithAnOutgoingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 15:31:33'!
PASSED!

!testRun: #AccountReporterTest #test20NetTransferForPortfolioWithAccountWithAnIncomingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 15:31:33'!
PASSED!

!testRun: #AccountReporterTest #test21NetTransferForPortfolioWithAccountShouldNotReflectDeposits stamp: 'fr 11/16/2020 15:31:33'!
PASSED!

!testRun: #AccountReporterTest #test22NetTransferForPortfolioWithAccountShouldNotReflectWithdraws stamp: 'fr 11/16/2020 15:31:33'!
PASSED!

!testRun: #AccountReporterTest #test23NetTransferForPortfoliosWithPortfoliosShouldReflectOutgoingAndIncomingTransfers stamp: 'fr 11/16/2020 15:31:33'!
PASSED!

!testRun: #AccountReporterTest #test24NetTransferForPortfoliosWithPortfoliosShouldNotRelfectDepositsOrWithdraws stamp: 'fr 11/16/2020 15:31:33'!
PASSED!

!testRun: #PortfolioReporterTest #test01TreeStructureReportForEmptyPortfolioWorksAsExpected stamp: 'fr 11/16/2020 15:31:33'!
PASSED!

!testRun: #PortfolioReporterTest #test02TreeStructureReportForPortfolioWithAccountsWorksAsExpected stamp: 'fr 11/16/2020 15:31:33'!
PASSED!

!testRun: #PortfolioReporterTest #test03TreeStructureReportForPortfolioWithAccountsAndPortfoliosWorksAsExpected stamp: 'fr 11/16/2020 15:31:33'!
PASSED!

!testRun: #PortfolioReporterTest #test04AccountsShouldUseADefaultNameIfNoneIsSpecified stamp: 'fr 11/16/2020 15:31:33'!
PASSED!

!testRun: #PortfolioReporterTest #test05SpecialReportForEmptyPortfolioWorksAsExpected stamp: 'fr 11/16/2020 15:31:33'!
PASSED!

!testRun: #PortfolioReporterTest #test06SpecialReportForPortfolioWithAccountsWithAnyKindOfTransactionsWorksAsExpected stamp: 'fr 11/16/2020 15:31:33'!
PASSED!

!testRun: #PortfolioReporterTest #test07SpecialReportForPortfolioWithAccountsAndPortfoliosWithAnyKindOfTransactionsWorksAsExpected stamp: 'fr 11/16/2020 15:31:33'!
PASSED!

!testRun: #PortfolioTest #test01BalanceOfPortfolioWithoutAccountsIsZero stamp: 'fr 11/16/2020 15:31:33'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithOneAccountIsAccountBalance stamp: 'fr 11/16/2020 15:31:33'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioIsCalculatedRecursivelyOnPortfolios stamp: 'fr 11/16/2020 15:31:33'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithoutAccountsHasNoRegisteredTransaction stamp: 'fr 11/16/2020 15:31:33'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredItsAccountsTransactions stamp: 'fr 11/16/2020 15:31:33'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioLooksForRegisteredTransactionsRecursively stamp: 'fr 11/16/2020 15:31:33'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioHasNoTransactionWhenHasNoAccounts stamp: 'fr 11/16/2020 15:31:33'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTransactionsIncludesAllItsAccountsTransactions stamp: 'fr 11/16/2020 15:31:33'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioTransactionsAreCalculatedRecursively stamp: 'fr 11/16/2020 15:31:33'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCanNotIncludeTheSameAccountMoreThanOnce stamp: 'fr 11/16/2020 15:31:33'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCanNotIncludeAccountOfItsPortfolios stamp: 'fr 11/16/2020 15:31:33'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioCanNotIncludeItself stamp: 'fr 11/16/2020 15:31:33'!
PASSED!

!testRun: #PortfolioTest #test13ComposedPortfolioCanNotHaveParentPortfolioAccount stamp: 'fr 11/16/2020 15:31:33'!
PASSED!

!testRun: #PortfolioTest #test14ComposedPortfolioCanNotHaveAccountOfAnyRootParentRecursively stamp: 'fr 11/16/2020 15:31:33'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotIncludeAnyOfTheComposedAccountOfPortfolioToAdd stamp: 'fr 11/16/2020 15:31:33'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'fr 11/16/2020 15:31:33'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'fr 11/16/2020 15:31:33'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'fr 11/16/2020 15:31:33'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'fr 11/16/2020 15:31:33'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'fr 11/16/2020 15:31:33'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'fr 11/16/2020 15:31:33'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'fr 11/16/2020 15:31:33'!
PASSED!

!testRun: #TransferTest #test01TransferMovesMoneyAffectingBalancesAsExpected stamp: 'fr 11/16/2020 15:31:33'!
PASSED!

!testRun: #TransferTest #test02AccountsThatParticipateInTheTransferRegisterTheCorrespondingLeg stamp: 'fr 11/16/2020 15:31:33'!
PASSED!

!testRun: #TransferTest #test03LegsKnowTheirComplementaryLegThroughTheTransfer stamp: 'fr 11/16/2020 15:31:33'!
PASSED!

!testRun: #TransferTest #test04TransferValueCanNotBeZero stamp: 'fr 11/16/2020 15:31:33'!
PASSED!

!testRun: #TransferTest #test05TransferValueCanNotBeNegative stamp: 'fr 11/16/2020 15:31:33'!
PASSED!

!testRun: #TransferTest #test06TransferCanNotMoveMoneyFromAnAccountToItself stamp: 'fr 11/16/2020 15:31:33'!
PASSED!

----QUIT----(16 November 2020 15:56:44) CuisUniversity-4384.image priorSource: 18583751!

----STARTUP---- (16 November 2020 16:07:19) as /home/fede/Documentos/Facultad/Inge1/Cuises/linux64/CuisUniversity-4384.image!

!AccountReporterTest methodsFor: 'tests - account summary' stamp: 'fr 11/16/2020 16:09:51'!
assertTransfersAreReflectedThroughReporterCreatedBy: aCreationBlock

	aCreationBlock value.

	Transfer move: 100 from: account to: anotherAccount.

		
	self  assert: reporter accountSummary 
		equals: (OrderedCollection with: 'Salida por transferencia de 100.' with: 'Entrada por transferencia de 100.' with: 'Balance = 0')! !
!AccountReporterTest methodsFor: 'tests - account summary' stamp: 'fr 11/16/2020 16:10:13' prior: 50905724!
test12AccountSummaryShouldReflectOutgoingAndIncomingTransfersOnPortfoliosWithPortfoliosAndAccounts

	self assertTransfersAreReflectedThroughReporterCreatedBy:[self createPortfolioWithPortfolioWithAccount.
	self createAnotherNewAccount.
	anotherPortfolio add: anotherAccount.
	reporter _ SummaryReporter for: anotherPortfolio]! !

!testRun: #AccountReporterTest #test12AccountSummaryShouldReflectOutgoingAndIncomingTransfersOnPortfoliosWithPortfoliosAndAccounts stamp: 'fr 11/16/2020 16:10:14'!
PASSED!

!testRun: #AccountReporterTest #test01AccountSummaryForAccountWithNoTransactionsShouldJustShowBalanceZero stamp: 'fr 11/16/2020 16:10:14'!
PASSED!

!testRun: #AccountReporterTest #test02AccountSummaryShouldReflectDepositsOnAccounts stamp: 'fr 11/16/2020 16:10:14'!
PASSED!

!testRun: #AccountReporterTest #test03AccountSummaryShouldReflectWithdrawsOnAccounts stamp: 'fr 11/16/2020 16:10:14'!
PASSED!

!testRun: #AccountReporterTest #test04AccountSummaryShouldReflectOutgoingTransfersOnAccounts stamp: 'fr 11/16/2020 16:10:14'!
PASSED!

!testRun: #AccountReporterTest #test05AccountSummaryShouldReflectIncomingTransfersOnAccounts stamp: 'fr 11/16/2020 16:10:14'!
PASSED!

!testRun: #AccountReporterTest #test06AccountSummaryForPortfolioWithNoTransactionsShouldJustShowBalanceZero stamp: 'fr 11/16/2020 16:10:14'!
PASSED!

!testRun: #AccountReporterTest #test07AccountSummaryShouldReflectDepositsOnPortfoliosWithAccounts stamp: 'fr 11/16/2020 16:10:14'!
PASSED!

!testRun: #AccountReporterTest #test08AccountSummaryShouldReflectWithdrawsOnPortfoliosWithAccounts stamp: 'fr 11/16/2020 16:10:14'!
PASSED!

!testRun: #AccountReporterTest #test09AccountSummaryShouldReflectOutgoingAndIncomingTransfersOnPortfoliosWithAccounts stamp: 'fr 11/16/2020 16:10:14'!
PASSED!

!testRun: #AccountReporterTest #test10AccountSummaryShouldReflectDepositsOnPortfoliosWithPortfolios stamp: 'fr 11/16/2020 16:10:14'!
PASSED!

!testRun: #AccountReporterTest #test11AccountSummaryShouldReflectWithdrawsOnPortfoliosWithPortfolios stamp: 'fr 11/16/2020 16:10:14'!
PASSED!

!testRun: #AccountReporterTest #test12AccountSummaryShouldReflectOutgoingAndIncomingTransfersOnPortfoliosWithPortfoliosAndAccounts stamp: 'fr 11/16/2020 16:10:14'!
PASSED!

!testRun: #AccountReporterTest #test13NetTransferForAccountWithNoTransactionsShouldBeZero stamp: 'fr 11/16/2020 16:10:14'!
PASSED!

!testRun: #AccountReporterTest #test14NetTransferForAccountWithAnOutgoingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 16:10:14'!
PASSED!

!testRun: #AccountReporterTest #test15NetTransferForAccountWithAnIncomingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 16:10:14'!
PASSED!

!testRun: #AccountReporterTest #test16NetTransferForAccountShouldNotReflectDeposits stamp: 'fr 11/16/2020 16:10:14'!
PASSED!

!testRun: #AccountReporterTest #test17NetTransferForAccountShouldNotReflectWithdraws stamp: 'fr 11/16/2020 16:10:14'!
PASSED!

!testRun: #AccountReporterTest #test18NetTransferForPortfolioWithNoTransactionsShouldBeZero stamp: 'fr 11/16/2020 16:10:14'!
PASSED!

!testRun: #AccountReporterTest #test19NetTransferForPortfolioWithAccountWithAnOutgoingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 16:10:14'!
PASSED!

!testRun: #AccountReporterTest #test20NetTransferForPortfolioWithAccountWithAnIncomingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 16:10:14'!
PASSED!

!testRun: #AccountReporterTest #test21NetTransferForPortfolioWithAccountShouldNotReflectDeposits stamp: 'fr 11/16/2020 16:10:14'!
PASSED!

!testRun: #AccountReporterTest #test22NetTransferForPortfolioWithAccountShouldNotReflectWithdraws stamp: 'fr 11/16/2020 16:10:14'!
PASSED!

!testRun: #AccountReporterTest #test23NetTransferForPortfoliosWithPortfoliosShouldReflectOutgoingAndIncomingTransfers stamp: 'fr 11/16/2020 16:10:14'!
PASSED!

!testRun: #AccountReporterTest #test24NetTransferForPortfoliosWithPortfoliosShouldNotRelfectDepositsOrWithdraws stamp: 'fr 11/16/2020 16:10:14'!
PASSED!
!AccountReporterTest methodsFor: 'tests - account summary' stamp: 'fr 11/16/2020 16:10:29' prior: 50905547!
test09AccountSummaryShouldReflectOutgoingAndIncomingTransfersOnPortfoliosWithAccounts

	self createNewAccount.	
	self createAnotherNewAccount.
	portfolio _ Portfolio with: account with: anotherAccount.
	reporter _ SummaryReporter for: portfolio.

	Transfer move: 100 from: account to: anotherAccount.
		
	self  assert: reporter accountSummary 
		equals: (OrderedCollection with: 'Salida por transferencia de 100.' with: 'Entrada por transferencia de 100.' with: 'Balance = 0')! !

!testRun: #AccountReporterTest #test09AccountSummaryShouldReflectOutgoingAndIncomingTransfersOnPortfoliosWithAccounts stamp: 'fr 11/16/2020 16:10:29'!
PASSED!

!testRun: #AccountReporterTest #test01AccountSummaryForAccountWithNoTransactionsShouldJustShowBalanceZero stamp: 'fr 11/16/2020 16:10:29'!
PASSED!

!testRun: #AccountReporterTest #test02AccountSummaryShouldReflectDepositsOnAccounts stamp: 'fr 11/16/2020 16:10:29'!
PASSED!

!testRun: #AccountReporterTest #test03AccountSummaryShouldReflectWithdrawsOnAccounts stamp: 'fr 11/16/2020 16:10:29'!
PASSED!

!testRun: #AccountReporterTest #test04AccountSummaryShouldReflectOutgoingTransfersOnAccounts stamp: 'fr 11/16/2020 16:10:29'!
PASSED!

!testRun: #AccountReporterTest #test05AccountSummaryShouldReflectIncomingTransfersOnAccounts stamp: 'fr 11/16/2020 16:10:29'!
PASSED!

!testRun: #AccountReporterTest #test06AccountSummaryForPortfolioWithNoTransactionsShouldJustShowBalanceZero stamp: 'fr 11/16/2020 16:10:29'!
PASSED!

!testRun: #AccountReporterTest #test07AccountSummaryShouldReflectDepositsOnPortfoliosWithAccounts stamp: 'fr 11/16/2020 16:10:29'!
PASSED!

!testRun: #AccountReporterTest #test08AccountSummaryShouldReflectWithdrawsOnPortfoliosWithAccounts stamp: 'fr 11/16/2020 16:10:29'!
PASSED!

!testRun: #AccountReporterTest #test09AccountSummaryShouldReflectOutgoingAndIncomingTransfersOnPortfoliosWithAccounts stamp: 'fr 11/16/2020 16:10:29'!
PASSED!

!testRun: #AccountReporterTest #test10AccountSummaryShouldReflectDepositsOnPortfoliosWithPortfolios stamp: 'fr 11/16/2020 16:10:29'!
PASSED!

!testRun: #AccountReporterTest #test11AccountSummaryShouldReflectWithdrawsOnPortfoliosWithPortfolios stamp: 'fr 11/16/2020 16:10:29'!
PASSED!

!testRun: #AccountReporterTest #test12AccountSummaryShouldReflectOutgoingAndIncomingTransfersOnPortfoliosWithPortfoliosAndAccounts stamp: 'fr 11/16/2020 16:10:29'!
PASSED!

!testRun: #AccountReporterTest #test13NetTransferForAccountWithNoTransactionsShouldBeZero stamp: 'fr 11/16/2020 16:10:29'!
PASSED!

!testRun: #AccountReporterTest #test14NetTransferForAccountWithAnOutgoingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 16:10:29'!
PASSED!

!testRun: #AccountReporterTest #test15NetTransferForAccountWithAnIncomingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 16:10:29'!
PASSED!

!testRun: #AccountReporterTest #test16NetTransferForAccountShouldNotReflectDeposits stamp: 'fr 11/16/2020 16:10:29'!
PASSED!

!testRun: #AccountReporterTest #test17NetTransferForAccountShouldNotReflectWithdraws stamp: 'fr 11/16/2020 16:10:29'!
PASSED!

!testRun: #AccountReporterTest #test18NetTransferForPortfolioWithNoTransactionsShouldBeZero stamp: 'fr 11/16/2020 16:10:29'!
PASSED!

!testRun: #AccountReporterTest #test19NetTransferForPortfolioWithAccountWithAnOutgoingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 16:10:29'!
PASSED!

!testRun: #AccountReporterTest #test20NetTransferForPortfolioWithAccountWithAnIncomingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 16:10:29'!
PASSED!

!testRun: #AccountReporterTest #test21NetTransferForPortfolioWithAccountShouldNotReflectDeposits stamp: 'fr 11/16/2020 16:10:29'!
PASSED!

!testRun: #AccountReporterTest #test22NetTransferForPortfolioWithAccountShouldNotReflectWithdraws stamp: 'fr 11/16/2020 16:10:29'!
PASSED!

!testRun: #AccountReporterTest #test23NetTransferForPortfoliosWithPortfoliosShouldReflectOutgoingAndIncomingTransfers stamp: 'fr 11/16/2020 16:10:29'!
PASSED!

!testRun: #AccountReporterTest #test24NetTransferForPortfoliosWithPortfoliosShouldNotRelfectDepositsOrWithdraws stamp: 'fr 11/16/2020 16:10:29'!
PASSED!
!AccountReporterTest methodsFor: 'tests - account summary' stamp: 'fr 11/16/2020 16:10:39' prior: 50912793!
test09AccountSummaryShouldReflectOutgoingAndIncomingTransfersOnPortfoliosWithAccounts

	self assertTransfersAreReflectedThroughReporterCreatedBy:[self createNewAccount.	
	self createAnotherNewAccount.
	portfolio _ Portfolio with: account with: anotherAccount.
	reporter _ SummaryReporter for: portfolio]! !

!testRun: #AccountReporterTest #test09AccountSummaryShouldReflectOutgoingAndIncomingTransfersOnPortfoliosWithAccounts stamp: 'fr 11/16/2020 16:10:40'!
PASSED!

!testRun: #AccountReporterTest #test01AccountSummaryForAccountWithNoTransactionsShouldJustShowBalanceZero stamp: 'fr 11/16/2020 16:10:40'!
PASSED!

!testRun: #AccountReporterTest #test02AccountSummaryShouldReflectDepositsOnAccounts stamp: 'fr 11/16/2020 16:10:40'!
PASSED!

!testRun: #AccountReporterTest #test03AccountSummaryShouldReflectWithdrawsOnAccounts stamp: 'fr 11/16/2020 16:10:40'!
PASSED!

!testRun: #AccountReporterTest #test04AccountSummaryShouldReflectOutgoingTransfersOnAccounts stamp: 'fr 11/16/2020 16:10:40'!
PASSED!

!testRun: #AccountReporterTest #test05AccountSummaryShouldReflectIncomingTransfersOnAccounts stamp: 'fr 11/16/2020 16:10:40'!
PASSED!

!testRun: #AccountReporterTest #test06AccountSummaryForPortfolioWithNoTransactionsShouldJustShowBalanceZero stamp: 'fr 11/16/2020 16:10:40'!
PASSED!

!testRun: #AccountReporterTest #test07AccountSummaryShouldReflectDepositsOnPortfoliosWithAccounts stamp: 'fr 11/16/2020 16:10:40'!
PASSED!

!testRun: #AccountReporterTest #test08AccountSummaryShouldReflectWithdrawsOnPortfoliosWithAccounts stamp: 'fr 11/16/2020 16:10:40'!
PASSED!

!testRun: #AccountReporterTest #test09AccountSummaryShouldReflectOutgoingAndIncomingTransfersOnPortfoliosWithAccounts stamp: 'fr 11/16/2020 16:10:40'!
PASSED!

!testRun: #AccountReporterTest #test10AccountSummaryShouldReflectDepositsOnPortfoliosWithPortfolios stamp: 'fr 11/16/2020 16:10:40'!
PASSED!

!testRun: #AccountReporterTest #test11AccountSummaryShouldReflectWithdrawsOnPortfoliosWithPortfolios stamp: 'fr 11/16/2020 16:10:40'!
PASSED!

!testRun: #AccountReporterTest #test12AccountSummaryShouldReflectOutgoingAndIncomingTransfersOnPortfoliosWithPortfoliosAndAccounts stamp: 'fr 11/16/2020 16:10:40'!
PASSED!

!testRun: #AccountReporterTest #test13NetTransferForAccountWithNoTransactionsShouldBeZero stamp: 'fr 11/16/2020 16:10:40'!
PASSED!

!testRun: #AccountReporterTest #test14NetTransferForAccountWithAnOutgoingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 16:10:40'!
PASSED!

!testRun: #AccountReporterTest #test15NetTransferForAccountWithAnIncomingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 16:10:40'!
PASSED!

!testRun: #AccountReporterTest #test16NetTransferForAccountShouldNotReflectDeposits stamp: 'fr 11/16/2020 16:10:40'!
PASSED!

!testRun: #AccountReporterTest #test17NetTransferForAccountShouldNotReflectWithdraws stamp: 'fr 11/16/2020 16:10:40'!
PASSED!

!testRun: #AccountReporterTest #test18NetTransferForPortfolioWithNoTransactionsShouldBeZero stamp: 'fr 11/16/2020 16:10:40'!
PASSED!

!testRun: #AccountReporterTest #test19NetTransferForPortfolioWithAccountWithAnOutgoingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 16:10:40'!
PASSED!

!testRun: #AccountReporterTest #test20NetTransferForPortfolioWithAccountWithAnIncomingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 16:10:40'!
PASSED!

!testRun: #AccountReporterTest #test21NetTransferForPortfolioWithAccountShouldNotReflectDeposits stamp: 'fr 11/16/2020 16:10:40'!
PASSED!

!testRun: #AccountReporterTest #test22NetTransferForPortfolioWithAccountShouldNotReflectWithdraws stamp: 'fr 11/16/2020 16:10:40'!
PASSED!

!testRun: #AccountReporterTest #test23NetTransferForPortfoliosWithPortfoliosShouldReflectOutgoingAndIncomingTransfers stamp: 'fr 11/16/2020 16:10:40'!
PASSED!

!testRun: #AccountReporterTest #test24NetTransferForPortfoliosWithPortfoliosShouldNotRelfectDepositsOrWithdraws stamp: 'fr 11/16/2020 16:10:40'!
PASSED!
!AccountReporterTest methodsFor: 'tests - account summary' stamp: 'fr 11/16/2020 16:10:55' prior: 50912924!
test09AccountSummaryShouldReflectOutgoingAndIncomingTransfersOnPortfoliosWithAccounts

	self assertTransfersAreReflectedThroughReporterCreatedBy:[					self createNewAccount.	
													self createAnotherNewAccount.
													portfolio _ Portfolio with: account with: anotherAccount.
													reporter _ SummaryReporter for: portfolio
												     ]! !
!AccountReporterTest methodsFor: 'tests - account summary' stamp: 'fr 11/16/2020 16:11:12' prior: 50912666!
test12AccountSummaryShouldReflectOutgoingAndIncomingTransfersOnPortfoliosWithPortfoliosAndAccounts

	self assertTransfersAreReflectedThroughReporterCreatedBy:[					self createPortfolioWithPortfolioWithAccount.
													self createAnotherNewAccount.
													anotherPortfolio add: anotherAccount.
													reporter _ SummaryReporter for: anotherPortfolio
												     ]! !

!testRun: #AccountReporterTest #test12AccountSummaryShouldReflectOutgoingAndIncomingTransfersOnPortfoliosWithPortfoliosAndAccounts stamp: 'fr 11/16/2020 16:12:40'!
PASSED!

!testRun: #AccountReporterTest #test01AccountSummaryForAccountWithNoTransactionsShouldJustShowBalanceZero stamp: 'fr 11/16/2020 16:12:40'!
PASSED!

!testRun: #AccountReporterTest #test02AccountSummaryShouldReflectDepositsOnAccounts stamp: 'fr 11/16/2020 16:12:40'!
PASSED!

!testRun: #AccountReporterTest #test03AccountSummaryShouldReflectWithdrawsOnAccounts stamp: 'fr 11/16/2020 16:12:40'!
PASSED!

!testRun: #AccountReporterTest #test04AccountSummaryShouldReflectOutgoingTransfersOnAccounts stamp: 'fr 11/16/2020 16:12:40'!
PASSED!

!testRun: #AccountReporterTest #test05AccountSummaryShouldReflectIncomingTransfersOnAccounts stamp: 'fr 11/16/2020 16:12:40'!
PASSED!

!testRun: #AccountReporterTest #test06AccountSummaryForPortfolioWithNoTransactionsShouldJustShowBalanceZero stamp: 'fr 11/16/2020 16:12:40'!
PASSED!

!testRun: #AccountReporterTest #test07AccountSummaryShouldReflectDepositsOnPortfoliosWithAccounts stamp: 'fr 11/16/2020 16:12:40'!
PASSED!

!testRun: #AccountReporterTest #test08AccountSummaryShouldReflectWithdrawsOnPortfoliosWithAccounts stamp: 'fr 11/16/2020 16:12:40'!
PASSED!

!testRun: #AccountReporterTest #test09AccountSummaryShouldReflectOutgoingAndIncomingTransfersOnPortfoliosWithAccounts stamp: 'fr 11/16/2020 16:12:40'!
PASSED!

!testRun: #AccountReporterTest #test10AccountSummaryShouldReflectDepositsOnPortfoliosWithPortfolios stamp: 'fr 11/16/2020 16:12:40'!
PASSED!

!testRun: #AccountReporterTest #test11AccountSummaryShouldReflectWithdrawsOnPortfoliosWithPortfolios stamp: 'fr 11/16/2020 16:12:40'!
PASSED!

!testRun: #AccountReporterTest #test12AccountSummaryShouldReflectOutgoingAndIncomingTransfersOnPortfoliosWithPortfoliosAndAccounts stamp: 'fr 11/16/2020 16:12:40'!
PASSED!

!testRun: #AccountReporterTest #test13NetTransferForAccountWithNoTransactionsShouldBeZero stamp: 'fr 11/16/2020 16:12:40'!
PASSED!

!testRun: #AccountReporterTest #test14NetTransferForAccountWithAnOutgoingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 16:12:40'!
PASSED!

!testRun: #AccountReporterTest #test15NetTransferForAccountWithAnIncomingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 16:12:40'!
PASSED!

!testRun: #AccountReporterTest #test16NetTransferForAccountShouldNotReflectDeposits stamp: 'fr 11/16/2020 16:12:40'!
PASSED!

!testRun: #AccountReporterTest #test17NetTransferForAccountShouldNotReflectWithdraws stamp: 'fr 11/16/2020 16:12:40'!
PASSED!

!testRun: #AccountReporterTest #test18NetTransferForPortfolioWithNoTransactionsShouldBeZero stamp: 'fr 11/16/2020 16:12:40'!
PASSED!

!testRun: #AccountReporterTest #test19NetTransferForPortfolioWithAccountWithAnOutgoingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 16:12:40'!
PASSED!

!testRun: #AccountReporterTest #test20NetTransferForPortfolioWithAccountWithAnIncomingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 16:12:40'!
PASSED!

!testRun: #AccountReporterTest #test21NetTransferForPortfolioWithAccountShouldNotReflectDeposits stamp: 'fr 11/16/2020 16:12:40'!
PASSED!

!testRun: #AccountReporterTest #test22NetTransferForPortfolioWithAccountShouldNotReflectWithdraws stamp: 'fr 11/16/2020 16:12:40'!
PASSED!

!testRun: #AccountReporterTest #test23NetTransferForPortfoliosWithPortfoliosShouldReflectOutgoingAndIncomingTransfers stamp: 'fr 11/16/2020 16:12:40'!
PASSED!

!testRun: #AccountReporterTest #test24NetTransferForPortfoliosWithPortfoliosShouldNotRelfectDepositsOrWithdraws stamp: 'fr 11/16/2020 16:12:40'!
PASSED!

----SNAPSHOT----(16 November 2020 16:12:52) CuisUniversity-4384.image priorSource: 18591813!

!testRun: #AccountReporterTest #test01AccountSummaryForAccountWithNoTransactionsShouldJustShowBalanceZero stamp: 'fr 11/16/2020 16:13:40'!
PASSED!

!testRun: #AccountReporterTest #test02AccountSummaryShouldReflectDepositsOnAccounts stamp: 'fr 11/16/2020 16:13:40'!
PASSED!

!testRun: #AccountReporterTest #test03AccountSummaryShouldReflectWithdrawsOnAccounts stamp: 'fr 11/16/2020 16:13:40'!
PASSED!

!testRun: #AccountReporterTest #test04AccountSummaryShouldReflectOutgoingTransfersOnAccounts stamp: 'fr 11/16/2020 16:13:40'!
PASSED!

!testRun: #AccountReporterTest #test05AccountSummaryShouldReflectIncomingTransfersOnAccounts stamp: 'fr 11/16/2020 16:13:40'!
PASSED!

!testRun: #AccountReporterTest #test06AccountSummaryForPortfolioWithNoTransactionsShouldJustShowBalanceZero stamp: 'fr 11/16/2020 16:13:40'!
PASSED!

!testRun: #AccountReporterTest #test07AccountSummaryShouldReflectDepositsOnPortfoliosWithAccounts stamp: 'fr 11/16/2020 16:13:40'!
PASSED!

!testRun: #AccountReporterTest #test08AccountSummaryShouldReflectWithdrawsOnPortfoliosWithAccounts stamp: 'fr 11/16/2020 16:13:40'!
PASSED!

!testRun: #AccountReporterTest #test09AccountSummaryShouldReflectOutgoingAndIncomingTransfersOnPortfoliosWithAccounts stamp: 'fr 11/16/2020 16:13:40'!
PASSED!

!testRun: #AccountReporterTest #test10AccountSummaryShouldReflectDepositsOnPortfoliosWithPortfolios stamp: 'fr 11/16/2020 16:13:40'!
PASSED!

!testRun: #AccountReporterTest #test11AccountSummaryShouldReflectWithdrawsOnPortfoliosWithPortfolios stamp: 'fr 11/16/2020 16:13:40'!
PASSED!

!testRun: #AccountReporterTest #test12AccountSummaryShouldReflectOutgoingAndIncomingTransfersOnPortfoliosWithPortfoliosAndAccounts stamp: 'fr 11/16/2020 16:13:40'!
PASSED!

!testRun: #AccountReporterTest #test13NetTransferForAccountWithNoTransactionsShouldBeZero stamp: 'fr 11/16/2020 16:13:40'!
PASSED!

!testRun: #AccountReporterTest #test14NetTransferForAccountWithAnOutgoingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 16:13:40'!
PASSED!

!testRun: #AccountReporterTest #test15NetTransferForAccountWithAnIncomingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 16:13:40'!
PASSED!

!testRun: #AccountReporterTest #test16NetTransferForAccountShouldNotReflectDeposits stamp: 'fr 11/16/2020 16:13:40'!
PASSED!

!testRun: #AccountReporterTest #test17NetTransferForAccountShouldNotReflectWithdraws stamp: 'fr 11/16/2020 16:13:40'!
PASSED!

!testRun: #AccountReporterTest #test18NetTransferForPortfolioWithNoTransactionsShouldBeZero stamp: 'fr 11/16/2020 16:13:40'!
PASSED!

!testRun: #AccountReporterTest #test19NetTransferForPortfolioWithAccountWithAnOutgoingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 16:13:40'!
PASSED!

!testRun: #AccountReporterTest #test20NetTransferForPortfolioWithAccountWithAnIncomingTransferShouldReflectItsValue stamp: 'fr 11/16/2020 16:13:40'!
PASSED!

!testRun: #AccountReporterTest #test21NetTransferForPortfolioWithAccountShouldNotReflectDeposits stamp: 'fr 11/16/2020 16:13:40'!
PASSED!

!testRun: #AccountReporterTest #test22NetTransferForPortfolioWithAccountShouldNotReflectWithdraws stamp: 'fr 11/16/2020 16:13:40'!
PASSED!

!testRun: #AccountReporterTest #test23NetTransferForPortfoliosWithPortfoliosShouldReflectOutgoingAndIncomingTransfers stamp: 'fr 11/16/2020 16:13:40'!
PASSED!

!testRun: #AccountReporterTest #test24NetTransferForPortfoliosWithPortfoliosShouldNotRelfectDepositsOrWithdraws stamp: 'fr 11/16/2020 16:13:40'!
PASSED!

!testRun: #PortfolioReporterTest #test01TreeStructureReportForEmptyPortfolioWorksAsExpected stamp: 'fr 11/16/2020 16:13:40'!
PASSED!

!testRun: #PortfolioReporterTest #test02TreeStructureReportForPortfolioWithAccountsWorksAsExpected stamp: 'fr 11/16/2020 16:13:40'!
PASSED!

!testRun: #PortfolioReporterTest #test03TreeStructureReportForPortfolioWithAccountsAndPortfoliosWorksAsExpected stamp: 'fr 11/16/2020 16:13:40'!
PASSED!

!testRun: #PortfolioReporterTest #test04AccountsShouldUseADefaultNameIfNoneIsSpecified stamp: 'fr 11/16/2020 16:13:40'!
PASSED!

!testRun: #PortfolioReporterTest #test05SpecialReportForEmptyPortfolioWorksAsExpected stamp: 'fr 11/16/2020 16:13:40'!
PASSED!

!testRun: #PortfolioReporterTest #test06SpecialReportForPortfolioWithAccountsWithAnyKindOfTransactionsWorksAsExpected stamp: 'fr 11/16/2020 16:13:40'!
PASSED!

!testRun: #PortfolioReporterTest #test07SpecialReportForPortfolioWithAccountsAndPortfoliosWithAnyKindOfTransactionsWorksAsExpected stamp: 'fr 11/16/2020 16:13:40'!
PASSED!

!testRun: #PortfolioTest #test01BalanceOfPortfolioWithoutAccountsIsZero stamp: 'fr 11/16/2020 16:13:40'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithOneAccountIsAccountBalance stamp: 'fr 11/16/2020 16:13:40'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioIsCalculatedRecursivelyOnPortfolios stamp: 'fr 11/16/2020 16:13:40'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithoutAccountsHasNoRegisteredTransaction stamp: 'fr 11/16/2020 16:13:40'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredItsAccountsTransactions stamp: 'fr 11/16/2020 16:13:41'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioLooksForRegisteredTransactionsRecursively stamp: 'fr 11/16/2020 16:13:41'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioHasNoTransactionWhenHasNoAccounts stamp: 'fr 11/16/2020 16:13:41'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTransactionsIncludesAllItsAccountsTransactions stamp: 'fr 11/16/2020 16:13:41'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioTransactionsAreCalculatedRecursively stamp: 'fr 11/16/2020 16:13:41'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCanNotIncludeTheSameAccountMoreThanOnce stamp: 'fr 11/16/2020 16:13:41'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCanNotIncludeAccountOfItsPortfolios stamp: 'fr 11/16/2020 16:13:41'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioCanNotIncludeItself stamp: 'fr 11/16/2020 16:13:41'!
PASSED!

!testRun: #PortfolioTest #test13ComposedPortfolioCanNotHaveParentPortfolioAccount stamp: 'fr 11/16/2020 16:13:41'!
PASSED!

!testRun: #PortfolioTest #test14ComposedPortfolioCanNotHaveAccountOfAnyRootParentRecursively stamp: 'fr 11/16/2020 16:13:41'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotIncludeAnyOfTheComposedAccountOfPortfolioToAdd stamp: 'fr 11/16/2020 16:13:41'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'fr 11/16/2020 16:13:41'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'fr 11/16/2020 16:13:41'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'fr 11/16/2020 16:13:41'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'fr 11/16/2020 16:13:41'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'fr 11/16/2020 16:13:41'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'fr 11/16/2020 16:13:41'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'fr 11/16/2020 16:13:41'!
PASSED!

!testRun: #TransferTest #test01TransferMovesMoneyAffectingBalancesAsExpected stamp: 'fr 11/16/2020 16:13:41'!
PASSED!

!testRun: #TransferTest #test02AccountsThatParticipateInTheTransferRegisterTheCorrespondingLeg stamp: 'fr 11/16/2020 16:13:41'!
PASSED!

!testRun: #TransferTest #test03LegsKnowTheirComplementaryLegThroughTheTransfer stamp: 'fr 11/16/2020 16:13:41'!
PASSED!

!testRun: #TransferTest #test04TransferValueCanNotBeZero stamp: 'fr 11/16/2020 16:13:41'!
PASSED!

!testRun: #TransferTest #test05TransferValueCanNotBeNegative stamp: 'fr 11/16/2020 16:13:41'!
PASSED!

!testRun: #TransferTest #test06TransferCanNotMoveMoneyFromAnAccountToItself stamp: 'fr 11/16/2020 16:13:41'!
PASSED!

----SNAPSHOT----(16 November 2020 16:13:44) CuisUniversity-4384.image priorSource: 18609342!