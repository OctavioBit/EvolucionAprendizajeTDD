

----STARTUP---- (25 October 2020 15:29:24) as /Users/dbenitez/uba/2c2020-IS1/Quiz/macos64-MarsRover/CuisUniversity-4384.image!


TestCase subclass: #MarsRover
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Mars Rover'!

!classDefinition: #MarsRover category: 'Mars Rover' stamp: 'DB 10/25/2020 15:35:16'!
TestCase subclass: #MarsRover
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Mars Rover'!
!MarsRover methodsFor: 'nil' stamp: 'DB 10/25/2020 15:50:57'!
test01
	
	| marsRover |
	marsRover := MarsRover at: 1@1 pointingToward: #N. 
	
	marsRover move: 'f'.
	
	self assert: (marsRover currentPosition = 1@2).
	
	
	
	
	! !

!testRun: #MarsRover #test01 stamp: 'DB 10/25/2020 15:51:15'!
ERROR!

!testRun: #MarsRover #test01 stamp: 'DB 10/25/2020 15:51:15'!
ERROR!
!MarsRover class methodsFor: 'instance creation' stamp: 'DB 10/25/2020 15:51:37'!
at: aPoint pointingToward: aSymbol 
	"DO NOT FORGET TO RENAME COLLABORATORS AND REMOVE THIS COMMENT!!!!"
	self shouldBeImplemented.
	^self new initializeAt: aPoint pointingToward: aSymbol ! !
!MarsRover class methodsFor: 'instance creation' stamp: 'DB 10/25/2020 15:53:10' prior: 50867792!
at: aInitialPoint pointingToward: aCardinalPoint 
	
	^self new initializeAt: aInitialPoint pointingToward: aCardinalPoint ! !

!testRun: #MarsRover #test01 stamp: 'DB 10/25/2020 15:53:15'!
ERROR!

!classDefinition: #MarsRover category: 'Mars Rover' stamp: 'DB 10/25/2020 15:53:26'!
TestCase subclass: #MarsRover
	instanceVariableNames: 'initialPoint'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Mars Rover'!

!classDefinition: #MarsRover category: 'Mars Rover' stamp: 'DB 10/25/2020 15:53:26'!
TestCase subclass: #MarsRover
	instanceVariableNames: 'initialPoint cardinalPoint'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Mars Rover'!
!MarsRover methodsFor: 'initialization' stamp: 'DB 10/25/2020 15:53:26'!
initializeAt: aInitialPoint pointingToward: aCardinalPoint 
	self shouldBeImplemented.
	initialPoint := aInitialPoint.
	cardinalPoint := aCardinalPoint.! !

!classDefinition: #MarsRover category: 'Mars Rover' stamp: 'DB 10/25/2020 15:54:02'!
TestCase subclass: #MarsRover
	instanceVariableNames: 'initialPoint cardinalPoint currentPosition'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Mars Rover'!
!MarsRover methodsFor: 'initialization' stamp: 'DB 10/25/2020 15:53:58' prior: 50867825!
initializeAt: aInitialPoint pointingToward: aCardinalPoint 
	
	currentPosition := aInitialPoint.
	cardinalPoint := aCardinalPoint.! !

!classDefinition: #MarsRover category: 'Mars Rover' stamp: 'DB 10/25/2020 15:55:24'!
TestCase subclass: #MarsRover
	instanceVariableNames: 'initialPoint cardinalPoint currentPosition currentCardinalDirection'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Mars Rover'!
!MarsRover methodsFor: 'initialization' stamp: 'DB 10/25/2020 15:55:22' prior: 50867841!
initializeAt: aInitialPoint pointingToward: aCardinalDirection 
	
	currentPosition := aInitialPoint.
	currentCardinalDirection := aCardinalDirection.! !

!testRun: #MarsRover #test01 stamp: 'DB 10/25/2020 15:55:27'!
ERROR!
!MarsRover methodsFor: 'as yet unclassified' stamp: 'DB 10/25/2020 15:55:38'!
move: aString 
	self shouldBeImplemented.! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'DB 10/25/2020 15:56:41' prior: 50867867!
move: aString 
	currentPosition := 1@2! !

!testRun: #MarsRover #test01 stamp: 'DB 10/25/2020 15:56:43'!
ERROR!
!MarsRover methodsFor: 'as yet unclassified' stamp: 'DB 10/25/2020 15:56:54'!
currentPosition
	self shouldBeImplemented.
	^currentPosition! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'DB 10/25/2020 15:57:00' prior: 50867878!
currentPosition

	^currentPosition! !

!testRun: #MarsRover #test01 stamp: 'DB 10/25/2020 15:57:01'!
ERROR!
!MarsRover methodsFor: 'as yet unclassified' stamp: 'DB 10/25/2020 15:57:42' prior: 50867779!
test01
	
	| marsRover |
	marsRover := MarsRover at: 1@1 pointingToward: #N. 
	
	marsRover move: 'f'.
	
	self assert: (marsRover currentPosition) = 1@2.
	
	
	
	
	! !

!testRun: #MarsRover #test01 stamp: 'DB 10/25/2020 15:57:43'!
ERROR!
!MarsRover methodsFor: 'as yet unclassified' stamp: 'DB 10/25/2020 15:58:00' prior: 50867890!
test01
	
	| marsRover |
	marsRover := MarsRover at: 1@1 pointingToward: #N. 
	
	marsRover move: 'f'.
	
	self assert: ((marsRover currentPosition) = 1@2).
	
	
	
	
	! !

!testRun: #MarsRover #test01 stamp: 'DB 10/25/2020 15:58:01'!
ERROR!
!MarsRover methodsFor: 'as yet unclassified' stamp: 'DB 10/25/2020 15:58:19' prior: 50867901!
test01
	
	| marsRover |
	marsRover := MarsRover at: 1@1 pointingToward: #N. 
	
	marsRover move: 'f'.
	
	self assert: ((marsRover currentPosition) = (1@2)).
	
	
	
	
	! !

!testRun: #MarsRover #test01 stamp: 'DB 10/25/2020 15:58:20'!
PASSED!

!classRemoval: #MarsRover stamp: 'DB 10/25/2020 16:00:03'!
TestCase subclass: #MarsRover
	instanceVariableNames: 'initialPoint cardinalPoint currentPosition currentCardinalDirection'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Mars Rover'!

TestCase subclass: #MarsRoverTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Mars Rover'!

!classDefinition: #MarsRoverTest category: 'Mars Rover' stamp: 'DB 10/25/2020 16:00:33'!
TestCase subclass: #MarsRoverTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Mars Rover'!

!classDefinition: #MarsRover category: 'Mars Rover' stamp: 'DB 10/25/2020 16:02:43'!
Object subclass: #MarsRover
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Mars Rover'!
!MarsRoverTest methodsFor: 'nil' stamp: 'DB 10/25/2020 16:02:20'!
test01
	
	| marsRover |
	marsRover := MarsRover at: 1@1 pointingTowards: #N.
	
	marsRover move: 'f'.
	
	self assert: ((marsRover currentPosition) = (1@2))! !

!testRun: #MarsRoverTest #test01 stamp: 'DB 10/25/2020 16:02:58'!
ERROR!

!testRun: #MarsRoverTest #test01 stamp: 'DB 10/25/2020 16:02:58'!
ERROR!
!MarsRover class methodsFor: 'instance creation' stamp: 'DB 10/25/2020 16:03:06'!
at: aPoint pointingTowards: aSymbol 
	"DO NOT FORGET TO RENAME COLLABORATORS AND REMOVE THIS COMMENT!!!!"
	self shouldBeImplemented.
	^self new initializeAt: aPoint pointingTowards: aSymbol ! !
!MarsRover class methodsFor: 'instance creation' stamp: 'DB 10/25/2020 16:03:40' prior: 50867961!
at: aInitialPosition pointingTowards: aCardinalDirection 
	^self new initializeAt: aInitialPosition pointingTowards: aCardinalDirection ! !

!testRun: #MarsRoverTest #test01 stamp: 'DB 10/25/2020 16:03:42'!
ERROR!

!classDefinition: #MarsRover category: 'Mars Rover' stamp: 'DB 10/25/2020 16:03:51'!
Object subclass: #MarsRover
	instanceVariableNames: 'initialPosition'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Mars Rover'!

!classDefinition: #MarsRover category: 'Mars Rover' stamp: 'DB 10/25/2020 16:03:51'!
Object subclass: #MarsRover
	instanceVariableNames: 'initialPosition cardinalDirection'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Mars Rover'!
!MarsRover methodsFor: 'initialization' stamp: 'DB 10/25/2020 16:03:51'!
initializeAt: aInitialPosition pointingTowards: aCardinalDirection 
	self shouldBeImplemented.
	initialPosition := aInitialPosition.
	cardinalDirection := aCardinalDirection.! !

!classDefinition: #MarsRover category: 'Mars Rover' stamp: 'DB 10/25/2020 16:04:05'!
Object subclass: #MarsRover
	instanceVariableNames: 'initialPosition cardinalDirection currentPosition'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Mars Rover'!
!MarsRover methodsFor: 'initialization' stamp: 'DB 10/25/2020 16:04:02' prior: 50867995!
initializeAt: aInitialPosition pointingTowards: aCardinalDirection 

	currentPosition := aInitialPosition.
	cardinalDirection := aCardinalDirection.! !

!testRun: #MarsRoverTest #test01 stamp: 'DB 10/25/2020 16:04:07'!
ERROR!
!MarsRover methodsFor: 'as yet unclassified' stamp: 'DB 10/25/2020 16:04:17'!
move: aString 
	self shouldBeImplemented.! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'DB 10/25/2020 16:04:34' prior: 50868022!
move: aString 
	currentPosition := 1@2! !

!testRun: #MarsRoverTest #test01 stamp: 'DB 10/25/2020 16:04:36'!
ERROR!
!MarsRover methodsFor: 'as yet unclassified' stamp: 'DB 10/25/2020 16:04:44'!
currentPosition
	self shouldBeImplemented.
	^currentPosition! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'DB 10/25/2020 16:04:48' prior: 50868034!
currentPosition
	
	^currentPosition! !

!testRun: #MarsRoverTest #test01 stamp: 'DB 10/25/2020 16:04:51'!
PASSED!

!testRun: #MarsRoverTest #test01 stamp: 'DB 10/25/2020 16:04:56'!
PASSED!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'DB 10/25/2020 16:05:09'!
test02
	
	| marsRover |
	marsRover := MarsRover at: 1@1 pointingTowards: #N.
	
	marsRover move: 'b'.
	
	self assert: ((marsRover currentPosition) = (1@2))! !

!testRun: #MarsRoverTest #test02 stamp: 'DB 10/25/2020 16:05:12'!
PASSED!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'DB 10/25/2020 16:05:22' prior: 50868048!
test02
	
	| marsRover |
	marsRover := MarsRover at: 1@1 pointingTowards: #N.
	
	marsRover move: 'b'.
	
	self assert: ((marsRover currentPosition) = (1@0))! !

!testRun: #MarsRoverTest #test02 stamp: 'DB 10/25/2020 16:05:25'!
FAILURE!

!testRun: #MarsRoverTest #test02 stamp: 'DB 10/25/2020 16:05:25'!
FAILURE!
!MarsRover methodsFor: 'as yet unclassified' stamp: 'DB 10/25/2020 16:09:56' prior: 50868027!
move: comands 

	comands = 'f' ifTrue: [currentPosition := 1@2].

	comands = 'b' ifTrue: [currentPosition := 1@0]
! !

!testRun: #MarsRoverTest #test02 stamp: 'DB 10/25/2020 16:10:00'!
PASSED!

!testRun: #MarsRoverTest #test01 stamp: 'DB 10/25/2020 16:10:06'!
PASSED!

!testRun: #MarsRoverTest #test02 stamp: 'DB 10/25/2020 16:10:06'!
PASSED!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'DB 10/25/2020 16:11:46' prior: 50868059!
test02
	
	| marsRover |
	marsRover := MarsRover at: 1@1 pointingTowards: #N.
	
	marsRover move: 'l'.
	
	self assert: ((marsRover currentDirection) = #W)! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'DB 10/25/2020 16:11:59' prior: 50868086!
test02
	
	| marsRover |
	marsRover := MarsRover at: 1@1 pointingTowards: #N.
	
	marsRover move: 'l'.
	
	self assert: ((marsRover currentDirection) = #W)! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'DB 10/25/2020 16:12:06'!
test03
	
	| marsRover |
	marsRover := MarsRover at: 1@1 pointingTowards: #N.
	
	marsRover move: 'l'.
	
	self assert: ((marsRover currentDirection) = #W)! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'DB 10/25/2020 16:05:22' prior: 50868094!
test02
	
	| marsRover |
	marsRover := MarsRover at: 1@1 pointingTowards: #N.
	
	marsRover move: 'b'.
	
	self assert: ((marsRover currentPosition) = (1@0))! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'DB 10/25/2020 16:12:52' prior: 50868110!
test02
	
	| marsRover |
	marsRover := MarsRover at: 1@1 pointingTowards: #N.
	
	marsRover move: 'l'.
	
	self assert: ((marsRover currentDirection) = #W)! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'DB 10/25/2020 16:05:22' prior: 50868118!
test02
	
	| marsRover |
	marsRover := MarsRover at: 1@1 pointingTowards: #N.
	
	marsRover move: 'b'.
	
	self assert: ((marsRover currentPosition) = (1@0))! !

!testRun: #MarsRoverTest #test01 stamp: 'DB 10/25/2020 16:13:21'!
PASSED!

!testRun: #MarsRoverTest #test02 stamp: 'DB 10/25/2020 16:13:21'!
PASSED!

!testRun: #MarsRoverTest #test03 stamp: 'DB 10/25/2020 16:13:21'!
ERROR!

!testRun: #MarsRoverTest #test03 stamp: 'DB 10/25/2020 16:13:21'!
ERROR!
!MarsRover methodsFor: 'as yet unclassified' stamp: 'DB 10/25/2020 16:13:28'!
currentDirection
	self shouldBeImplemented.! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'DB 10/25/2020 16:14:26' prior: 50868143!
currentDirection
	^cardinalDirection ! !

!testRun: #MarsRoverTest #test03 stamp: 'DB 10/25/2020 16:14:28'!
FAILURE!

!classDefinition: #MarsRover category: 'Mars Rover' stamp: 'DB 10/25/2020 16:15:44'!
Object subclass: #MarsRover
	instanceVariableNames: 'initialPosition cardinalDirection currentPosition currentCardinalDirection'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Mars Rover'!
!MarsRover methodsFor: 'as yet unclassified' stamp: 'DB 10/25/2020 16:15:37' prior: 50868072!
move: comands 

	comands = 'f' ifTrue: [currentPosition := 1@2].

	comands = 'b' ifTrue: [currentPosition := 1@0].
	
	comands  = 'l' ifTrue: [currentCardinalDirection := #W]
! !

Object subclass: #MarsRover
	instanceVariableNames: 'currentPosition currentCardinalDirection'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Mars Rover'!

!classDefinition: #MarsRover category: 'Mars Rover' stamp: 'DB 10/25/2020 16:16:19'!
Object subclass: #MarsRover
	instanceVariableNames: 'currentPosition currentCardinalDirection'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Mars Rover'!
!MarsRover methodsFor: 'as yet unclassified' stamp: 'DB 10/25/2020 16:16:35' prior: 50868148!
currentDirection
	^currentCardinalDirection ! !

!testRun: #MarsRoverTest #test01 stamp: 'DB 10/25/2020 16:16:46'!
PASSED!

!testRun: #MarsRoverTest #test02 stamp: 'DB 10/25/2020 16:16:46'!
PASSED!

!testRun: #MarsRoverTest #test03 stamp: 'DB 10/25/2020 16:16:46'!
PASSED!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'DB 10/25/2020 16:17:01' prior: 50868102!
test03
	
	| marsRover |
	marsRover := MarsRover at: 1@1 pointingTowards: #N.
	
	marsRover move: 'r'.
	
	self assert: ((marsRover currentDirection) = #E)! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'DB 10/25/2020 16:17:06'!
test04
	
	| marsRover |
	marsRover := MarsRover at: 1@1 pointingTowards: #N.
	
	marsRover move: 'r'.
	
	self assert: ((marsRover currentDirection) = #E)! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'DB 10/25/2020 16:12:06' prior: 50868198!
test03
	
	| marsRover |
	marsRover := MarsRover at: 1@1 pointingTowards: #N.
	
	marsRover move: 'l'.
	
	self assert: ((marsRover currentDirection) = #W)! !

!testRun: #MarsRoverTest #test01 stamp: 'DB 10/25/2020 16:17:21'!
PASSED!

!testRun: #MarsRoverTest #test02 stamp: 'DB 10/25/2020 16:17:21'!
PASSED!

!testRun: #MarsRoverTest #test03 stamp: 'DB 10/25/2020 16:17:21'!
PASSED!

!testRun: #MarsRoverTest #test04 stamp: 'DB 10/25/2020 16:17:21'!
FAILURE!

!testRun: #MarsRoverTest #test04 stamp: 'DB 10/25/2020 16:17:21'!
FAILURE!
!MarsRover methodsFor: 'as yet unclassified' stamp: 'DB 10/25/2020 16:17:53' prior: 50868164!
move: comands 

	comands = 'f' ifTrue: [currentPosition := 1@2].

	comands = 'b' ifTrue: [currentPosition := 1@0].
	
	comands  = 'l' ifTrue: [currentCardinalDirection := #W].
	
	comands  = 'r' ifTrue: [currentCardinalDirection := #E]
	
	
! !

!testRun: #MarsRoverTest #test04 stamp: 'DB 10/25/2020 16:17:55'!
PASSED!

!testRun: #MarsRoverTest #test01 stamp: 'DB 10/25/2020 16:17:59'!
PASSED!

!testRun: #MarsRoverTest #test02 stamp: 'DB 10/25/2020 16:17:59'!
PASSED!

!testRun: #MarsRoverTest #test03 stamp: 'DB 10/25/2020 16:17:59'!
PASSED!

!testRun: #MarsRoverTest #test04 stamp: 'DB 10/25/2020 16:17:59'!
PASSED!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'DB 10/25/2020 16:22:52'!
test01ForwardWhenPointingNorth
	
	| marsRover |
	marsRover := MarsRover at: 1@1 pointingTowards: #N.
	
	marsRover move: 'f'.
	
	self assert: ((marsRover currentPosition) = (1@2))! !

!methodRemoval: MarsRoverTest #test01 stamp: 'DB 10/25/2020 16:22:52'!
test01
	
	| marsRover |
	marsRover := MarsRover at: 1@1 pointingTowards: #N.
	
	marsRover move: 'f'.
	
	self assert: ((marsRover currentPosition) = (1@2))!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'DB 10/25/2020 16:23:24'!
test02BackwardWhenPointingNorth
	
	| marsRover |
	marsRover := MarsRover at: 1@1 pointingTowards: #N.
	
	marsRover move: 'b'.
	
	self assert: ((marsRover currentPosition) = (1@0))! !

!methodRemoval: MarsRoverTest #test02 stamp: 'DB 10/25/2020 16:23:24'!
test02
	
	| marsRover |
	marsRover := MarsRover at: 1@1 pointingTowards: #N.
	
	marsRover move: 'b'.
	
	self assert: ((marsRover currentPosition) = (1@0))!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'DB 10/25/2020 16:24:13'!
test03TuringLeftWhenPointingNorth
	
	| marsRover |
	marsRover := MarsRover at: 1@1 pointingTowards: #N.
	
	marsRover move: 'l'.
	
	self assert: ((marsRover currentDirection) = #W)! !

!methodRemoval: MarsRoverTest #test03 stamp: 'DB 10/25/2020 16:24:13'!
test03
	
	| marsRover |
	marsRover := MarsRover at: 1@1 pointingTowards: #N.
	
	marsRover move: 'l'.
	
	self assert: ((marsRover currentDirection) = #W)!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'DB 10/25/2020 16:24:36'!
test04TurningRightWhenPointingNorth
	
	| marsRover |
	marsRover := MarsRover at: 1@1 pointingTowards: #N.
	
	marsRover move: 'r'.
	
	self assert: ((marsRover currentDirection) = #E)! !

!methodRemoval: MarsRoverTest #test04 stamp: 'DB 10/25/2020 16:24:36'!
test04
	
	| marsRover |
	marsRover := MarsRover at: 1@1 pointingTowards: #N.
	
	marsRover move: 'r'.
	
	self assert: ((marsRover currentDirection) = #E)!

!testRun: #MarsRoverTest #test01ForwardWhenPointingNorth stamp: 'DB 10/25/2020 16:24:42'!
PASSED!

!testRun: #MarsRoverTest #test02BackwardWhenPointingNorth stamp: 'DB 10/25/2020 16:24:42'!
PASSED!

!testRun: #MarsRoverTest #test03TuringLeftWhenPointingNorth stamp: 'DB 10/25/2020 16:24:42'!
PASSED!

!testRun: #MarsRoverTest #test04TurningRightWhenPointingNorth stamp: 'DB 10/25/2020 16:24:42'!
PASSED!

!testRun: #MarsRoverTest #test01ForwardWhenPointingNorth stamp: 'DB 10/25/2020 16:24:47'!
PASSED!

!testRun: #MarsRoverTest #test02BackwardWhenPointingNorth stamp: 'DB 10/25/2020 16:24:47'!
PASSED!

!testRun: #MarsRoverTest #test03TuringLeftWhenPointingNorth stamp: 'DB 10/25/2020 16:24:47'!
PASSED!

!testRun: #MarsRoverTest #test04TurningRightWhenPointingNorth stamp: 'DB 10/25/2020 16:24:47'!
PASSED!

!testRun: #MarsRoverTest #test01ForwardWhenPointingNorth stamp: 'DB 10/25/2020 16:24:58'!
PASSED!

!testRun: #MarsRoverTest #test02BackwardWhenPointingNorth stamp: 'DB 10/25/2020 16:24:58'!
PASSED!

!testRun: #MarsRoverTest #test03TuringLeftWhenPointingNorth stamp: 'DB 10/25/2020 16:24:58'!
PASSED!

!testRun: #MarsRoverTest #test04TurningRightWhenPointingNorth stamp: 'DB 10/25/2020 16:24:58'!
PASSED!

!testRun: #MarsRoverTest #test01ForwardWhenPointingNorth stamp: 'DB 10/25/2020 16:25:04'!
PASSED!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'DB 10/25/2020 16:25:20'!
test01
	
	| marsRover |
	marsRover := MarsRover at: 1@1 pointingTowards: #N.
	
	marsRover move: 'f'.
	
	self assert: ((marsRover currentPosition) = (1@2))! !

!testRun: #MarsRoverTest #test01 stamp: 'DB 10/25/2020 16:25:23'!
PASSED!

----SNAPSHOT----(25 October 2020 16:25:31) CuisUniversity-4384.image priorSource: 17155564!

----QUIT----(25 October 2020 16:25:34) CuisUniversity-4384.image priorSource: 17175048!

----STARTUP---- (25 October 2020 16:25:56) as /Users/dbenitez/uba/2c2020-IS1/Quiz/macos64-MarsRover/CuisUniversity-4384.image!


!testRun: #MarsRoverTest #test01 stamp: 'DB 10/25/2020 16:26:13'!
PASSED!

!testRun: #MarsRoverTest #test01ForwardWhenPointingNorth stamp: 'DB 10/25/2020 16:26:13'!
PASSED!

!testRun: #MarsRoverTest #test02BackwardWhenPointingNorth stamp: 'DB 10/25/2020 16:26:13'!
PASSED!

!testRun: #MarsRoverTest #test03TuringLeftWhenPointingNorth stamp: 'DB 10/25/2020 16:26:13'!
PASSED!

!testRun: #MarsRoverTest #test04TurningRightWhenPointingNorth stamp: 'DB 10/25/2020 16:26:13'!
PASSED!

!methodRemoval: MarsRoverTest #test01 stamp: 'DB 10/25/2020 16:26:21'!
test01
	
	| marsRover |
	marsRover := MarsRover at: 1@1 pointingTowards: #N.
	
	marsRover move: 'f'.
	
	self assert: ((marsRover currentPosition) = (1@2))!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'DB 10/25/2020 16:27:50'!
test05ForwardWhenPointingEast
	
	| marsRover |
	marsRover := MarsRover at: 1@1 pointingTowards: #E.
	
	marsRover move: 'f'.
	
	self assert: ((marsRover currentPosition) = (2@1))! !

!testRun: #MarsRoverTest #test01ForwardWhenPointingNorth stamp: 'DB 10/25/2020 16:27:55'!
PASSED!

!testRun: #MarsRoverTest #test02BackwardWhenPointingNorth stamp: 'DB 10/25/2020 16:27:55'!
PASSED!

!testRun: #MarsRoverTest #test03TuringLeftWhenPointingNorth stamp: 'DB 10/25/2020 16:27:55'!
PASSED!

!testRun: #MarsRoverTest #test04TurningRightWhenPointingNorth stamp: 'DB 10/25/2020 16:27:55'!
PASSED!

!testRun: #MarsRoverTest #test05ForwardWhenPointingEast stamp: 'DB 10/25/2020 16:27:55'!
FAILURE!

!testRun: #MarsRoverTest #test05ForwardWhenPointingEast stamp: 'DB 10/25/2020 16:27:55'!
FAILURE!
!MarsRover methodsFor: 'as yet unclassified' stamp: 'DB 10/25/2020 16:29:29' prior: 50868234!
move: comands 

	comands = 'f' ifTrue: [
		currentCardinalDirection = #N ifTrue: [currentPosition := 1@2].
		currentCardinalDirection = #E ifTrue: [currentPosition := 2@1].
	].

	comands = 'b' ifTrue: [currentPosition := 1@0].
	
	comands  = 'l' ifTrue: [currentCardinalDirection := #W].
	
	comands  = 'r' ifTrue: [currentCardinalDirection := #E]
	
	
! !

!testRun: #MarsRoverTest #test05ForwardWhenPointingEast stamp: 'DB 10/25/2020 16:29:31'!
FAILURE!
!MarsRover methodsFor: 'initialization' stamp: 'DB 10/25/2020 16:30:30' prior: 50868012!
initializeAt: aInitialPosition pointingTowards: aCardinalDirection 

	currentPosition := aInitialPosition.
	currentCardinalDirection := aCardinalDirection.! !

!testRun: #MarsRoverTest #test05ForwardWhenPointingEast stamp: 'DB 10/25/2020 16:30:32'!
PASSED!

!testRun: #MarsRoverTest #test01ForwardWhenPointingNorth stamp: 'DB 10/25/2020 16:30:35'!
PASSED!

!testRun: #MarsRoverTest #test02BackwardWhenPointingNorth stamp: 'DB 10/25/2020 16:30:35'!
PASSED!

!testRun: #MarsRoverTest #test03TuringLeftWhenPointingNorth stamp: 'DB 10/25/2020 16:30:35'!
PASSED!

!testRun: #MarsRoverTest #test04TurningRightWhenPointingNorth stamp: 'DB 10/25/2020 16:30:35'!
PASSED!

!testRun: #MarsRoverTest #test05ForwardWhenPointingEast stamp: 'DB 10/25/2020 16:30:35'!
PASSED!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'DB 10/25/2020 16:31:28'!
test06ForwardWhenPointingSouth
	
	| marsRover |
	marsRover := MarsRover at: 1@1 pointingTowards: #S.
	
	marsRover move: 'f'.
	
	self assert: ((marsRover currentPosition) = (1@0))! !

!testRun: #MarsRoverTest #test01ForwardWhenPointingNorth stamp: 'DB 10/25/2020 16:31:31'!
PASSED!

!testRun: #MarsRoverTest #test02BackwardWhenPointingNorth stamp: 'DB 10/25/2020 16:31:31'!
PASSED!

!testRun: #MarsRoverTest #test03TuringLeftWhenPointingNorth stamp: 'DB 10/25/2020 16:31:31'!
PASSED!

!testRun: #MarsRoverTest #test04TurningRightWhenPointingNorth stamp: 'DB 10/25/2020 16:31:31'!
PASSED!

!testRun: #MarsRoverTest #test05ForwardWhenPointingEast stamp: 'DB 10/25/2020 16:31:31'!
PASSED!

!testRun: #MarsRoverTest #test06ForwardWhenPointingSouth stamp: 'DB 10/25/2020 16:31:31'!
FAILURE!

!testRun: #MarsRoverTest #test06ForwardWhenPointingSouth stamp: 'DB 10/25/2020 16:31:31'!
FAILURE!
!MarsRover methodsFor: 'as yet unclassified' stamp: 'DB 10/25/2020 16:32:11' prior: 50868431!
move: comands 

	comands = 'f' ifTrue: [
		currentCardinalDirection = #N ifTrue: [currentPosition := 1@2].
		currentCardinalDirection = #E ifTrue: [currentPosition := 2@1].
		currentCardinalDirection = #S ifTrue: [currentPosition := 1@0].
	].

	comands = 'b' ifTrue: [currentPosition := 1@0].
	
	comands  = 'l' ifTrue: [currentCardinalDirection := #W].
	
	comands  = 'r' ifTrue: [currentCardinalDirection := #E]
	
	
! !

!testRun: #MarsRoverTest #test06ForwardWhenPointingSouth stamp: 'DB 10/25/2020 16:32:12'!
PASSED!

!testRun: #MarsRoverTest #test01ForwardWhenPointingNorth stamp: 'DB 10/25/2020 16:32:17'!
PASSED!

!testRun: #MarsRoverTest #test02BackwardWhenPointingNorth stamp: 'DB 10/25/2020 16:32:17'!
PASSED!

!testRun: #MarsRoverTest #test03TuringLeftWhenPointingNorth stamp: 'DB 10/25/2020 16:32:17'!
PASSED!

!testRun: #MarsRoverTest #test04TurningRightWhenPointingNorth stamp: 'DB 10/25/2020 16:32:17'!
PASSED!

!testRun: #MarsRoverTest #test05ForwardWhenPointingEast stamp: 'DB 10/25/2020 16:32:17'!
PASSED!

!testRun: #MarsRoverTest #test06ForwardWhenPointingSouth stamp: 'DB 10/25/2020 16:32:17'!
PASSED!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'DB 10/25/2020 16:32:43'!
test07ForwardWhenPointingWest
	
	| marsRover |
	marsRover := MarsRover at: 1@1 pointingTowards: #W.
	
	marsRover move: 'f'.
	
	self assert: ((marsRover currentPosition) = (0@1))! !

!testRun: #MarsRoverTest #test01ForwardWhenPointingNorth stamp: 'DB 10/25/2020 16:32:46'!
PASSED!

!testRun: #MarsRoverTest #test02BackwardWhenPointingNorth stamp: 'DB 10/25/2020 16:32:46'!
PASSED!

!testRun: #MarsRoverTest #test03TuringLeftWhenPointingNorth stamp: 'DB 10/25/2020 16:32:46'!
PASSED!

!testRun: #MarsRoverTest #test04TurningRightWhenPointingNorth stamp: 'DB 10/25/2020 16:32:46'!
PASSED!

!testRun: #MarsRoverTest #test05ForwardWhenPointingEast stamp: 'DB 10/25/2020 16:32:46'!
PASSED!

!testRun: #MarsRoverTest #test06ForwardWhenPointingSouth stamp: 'DB 10/25/2020 16:32:46'!
PASSED!

!testRun: #MarsRoverTest #test07ForwardWhenPointingWest stamp: 'DB 10/25/2020 16:32:46'!
FAILURE!

!testRun: #MarsRoverTest #test07ForwardWhenPointingWest stamp: 'DB 10/25/2020 16:32:46'!
FAILURE!
!MarsRover methodsFor: 'as yet unclassified' stamp: 'DB 10/25/2020 16:33:09' prior: 50868506!
move: comands 

	comands = 'f' ifTrue: [
		currentCardinalDirection = #N ifTrue: [currentPosition := 1@2].
		currentCardinalDirection = #E ifTrue: [currentPosition := 2@1].
		currentCardinalDirection = #S ifTrue: [currentPosition := 1@0].
		currentCardinalDirection = #W ifTrue: [currentPosition := 0@1].
	].

	comands = 'b' ifTrue: [currentPosition := 1@0].
	
	comands  = 'l' ifTrue: [currentCardinalDirection := #W].
	
	comands  = 'r' ifTrue: [currentCardinalDirection := #E]
	
	
! !

!testRun: #MarsRoverTest #test07ForwardWhenPointingWest stamp: 'DB 10/25/2020 16:33:12'!
PASSED!
!MarsRover methodsFor: 'as yet unclassified' stamp: 'DB 10/25/2020 16:35:28' prior: 50868578!
move: comands 

	comands = 'f' ifTrue: [
		currentCardinalDirection = #N ifTrue: [currentPosition := currentPosition + 0@1].
		currentCardinalDirection = #E ifTrue: [currentPosition := currentPosition + 1@0].
		currentCardinalDirection = #S ifTrue: [currentPosition :=  currentPosition - 0@1 ].
		currentCardinalDirection = #W ifTrue: [currentPosition :=  currentPosition - 1@0].
	].

	comands = 'b' ifTrue: [currentPosition := 1@0].
	
	comands  = 'l' ifTrue: [currentCardinalDirection := #W].
	
	comands  = 'r' ifTrue: [currentCardinalDirection := #E]
	
	
! !

!testRun: #MarsRoverTest #test01ForwardWhenPointingNorth stamp: 'DB 10/25/2020 16:35:33'!
ERROR!

!testRun: #MarsRoverTest #test02BackwardWhenPointingNorth stamp: 'DB 10/25/2020 16:35:33'!
PASSED!

!testRun: #MarsRoverTest #test03TuringLeftWhenPointingNorth stamp: 'DB 10/25/2020 16:35:33'!
PASSED!

!testRun: #MarsRoverTest #test04TurningRightWhenPointingNorth stamp: 'DB 10/25/2020 16:35:33'!
PASSED!

!testRun: #MarsRoverTest #test05ForwardWhenPointingEast stamp: 'DB 10/25/2020 16:35:33'!
ERROR!

!testRun: #MarsRoverTest #test06ForwardWhenPointingSouth stamp: 'DB 10/25/2020 16:35:33'!
ERROR!

!testRun: #MarsRoverTest #test07ForwardWhenPointingWest stamp: 'DB 10/25/2020 16:35:33'!
ERROR!

!testRun: #MarsRoverTest #test01ForwardWhenPointingNorth stamp: 'DB 10/25/2020 16:35:42'!
ERROR!
!MarsRover methodsFor: 'as yet unclassified' stamp: 'DB 10/25/2020 16:36:29' prior: 50868600!
move: comands 

	comands = 'f' ifTrue: [
		currentCardinalDirection = #N ifTrue: [currentPosition := currentPosition + (0@1)].
		currentCardinalDirection = #E ifTrue: [currentPosition := currentPosition + (1@0)].
		currentCardinalDirection = #S ifTrue: [currentPosition :=  currentPosition - (0@1) ].
		currentCardinalDirection = #W ifTrue: [currentPosition :=  currentPosition - (1@0)].
	].

	comands = 'b' ifTrue: [currentPosition := 1@0].
	
	comands  = 'l' ifTrue: [currentCardinalDirection := #W].
	
	comands  = 'r' ifTrue: [currentCardinalDirection := #E]
	
	
! !

!testRun: #MarsRoverTest #test01ForwardWhenPointingNorth stamp: 'DB 10/25/2020 16:36:31'!
PASSED!

!testRun: #MarsRoverTest #test01ForwardWhenPointingNorth stamp: 'DB 10/25/2020 16:36:34'!
PASSED!

!testRun: #MarsRoverTest #test02BackwardWhenPointingNorth stamp: 'DB 10/25/2020 16:36:34'!
PASSED!

!testRun: #MarsRoverTest #test03TuringLeftWhenPointingNorth stamp: 'DB 10/25/2020 16:36:34'!
PASSED!

!testRun: #MarsRoverTest #test04TurningRightWhenPointingNorth stamp: 'DB 10/25/2020 16:36:34'!
PASSED!

!testRun: #MarsRoverTest #test05ForwardWhenPointingEast stamp: 'DB 10/25/2020 16:36:34'!
PASSED!

!testRun: #MarsRoverTest #test06ForwardWhenPointingSouth stamp: 'DB 10/25/2020 16:36:34'!
PASSED!

!testRun: #MarsRoverTest #test07ForwardWhenPointingWest stamp: 'DB 10/25/2020 16:36:34'!
PASSED!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'DB 10/25/2020 16:37:31'!
test02BackwardWhenPointingEast
	
	| marsRover |
	marsRover := MarsRover at: 1@1 pointingTowards: #E.
	
	marsRover move: 'b'.
	
	self assert: ((marsRover currentPosition) = (0@1))! !

!testRun: #MarsRoverTest #test01ForwardWhenPointingNorth stamp: 'DB 10/25/2020 16:37:34'!
PASSED!

!testRun: #MarsRoverTest #test02BackwardWhenPointingEast stamp: 'DB 10/25/2020 16:37:34'!
FAILURE!

!testRun: #MarsRoverTest #test02BackwardWhenPointingNorth stamp: 'DB 10/25/2020 16:37:34'!
PASSED!

!testRun: #MarsRoverTest #test03TuringLeftWhenPointingNorth stamp: 'DB 10/25/2020 16:37:34'!
PASSED!

!testRun: #MarsRoverTest #test04TurningRightWhenPointingNorth stamp: 'DB 10/25/2020 16:37:34'!
PASSED!

!testRun: #MarsRoverTest #test05ForwardWhenPointingEast stamp: 'DB 10/25/2020 16:37:34'!
PASSED!

!testRun: #MarsRoverTest #test06ForwardWhenPointingSouth stamp: 'DB 10/25/2020 16:37:34'!
PASSED!

!testRun: #MarsRoverTest #test07ForwardWhenPointingWest stamp: 'DB 10/25/2020 16:37:34'!
PASSED!

!testRun: #MarsRoverTest #test02BackwardWhenPointingEast stamp: 'DB 10/25/2020 16:37:34'!
FAILURE!
!MarsRover methodsFor: 'as yet unclassified' stamp: 'DB 10/25/2020 16:38:49' prior: 50868646!
move: comands 

	comands = 'f' ifTrue: [
		currentCardinalDirection = #N ifTrue: [currentPosition := currentPosition + (0@1)].
		currentCardinalDirection = #E ifTrue: [currentPosition := currentPosition + (1@0)].
		currentCardinalDirection = #S ifTrue: [currentPosition :=  currentPosition - (0@1) ].
		currentCardinalDirection = #W ifTrue: [currentPosition :=  currentPosition - (1@0)].
	].

	comands = 'b' ifTrue: [
		currentCardinalDirection = #N ifTrue: [currentPosition := 1@0].
		currentCardinalDirection = #E ifTrue: [currentPosition := 0@1]
	].
	
	comands  = 'l' ifTrue: [currentCardinalDirection := #W].
	
	comands  = 'r' ifTrue: [currentCardinalDirection := #E]
	
	
! !

!testRun: #MarsRoverTest #test02BackwardWhenPointingEast stamp: 'DB 10/25/2020 16:38:50'!
PASSED!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'DB 10/25/2020 16:39:15'!
test08BackwardWhenPointingEast
	
	| marsRover |
	marsRover := MarsRover at: 1@1 pointingTowards: #E.
	
	marsRover move: 'b'.
	
	self assert: ((marsRover currentPosition) = (0@1))! !

!methodRemoval: MarsRoverTest #test02BackwardWhenPointingEast stamp: 'DB 10/25/2020 16:39:15'!
test02BackwardWhenPointingEast
	
	| marsRover |
	marsRover := MarsRover at: 1@1 pointingTowards: #E.
	
	marsRover move: 'b'.
	
	self assert: ((marsRover currentPosition) = (0@1))!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'DB 10/25/2020 16:39:37'!
test09BackwardWhenPointingSouth
	
	| marsRover |
	marsRover := MarsRover at: 1@1 pointingTowards: #S.
	
	marsRover move: 'b'.
	
	self assert: ((marsRover currentPosition) = (1@2))! !

!testRun: #MarsRoverTest #test01ForwardWhenPointingNorth stamp: 'DB 10/25/2020 16:39:49'!
PASSED!

!testRun: #MarsRoverTest #test02BackwardWhenPointingNorth stamp: 'DB 10/25/2020 16:39:49'!
PASSED!

!testRun: #MarsRoverTest #test03TuringLeftWhenPointingNorth stamp: 'DB 10/25/2020 16:39:49'!
PASSED!

!testRun: #MarsRoverTest #test04TurningRightWhenPointingNorth stamp: 'DB 10/25/2020 16:39:49'!
PASSED!

!testRun: #MarsRoverTest #test05ForwardWhenPointingEast stamp: 'DB 10/25/2020 16:39:49'!
PASSED!

!testRun: #MarsRoverTest #test06ForwardWhenPointingSouth stamp: 'DB 10/25/2020 16:39:49'!
PASSED!

!testRun: #MarsRoverTest #test07ForwardWhenPointingWest stamp: 'DB 10/25/2020 16:39:49'!
PASSED!

!testRun: #MarsRoverTest #test08BackwardWhenPointingEast stamp: 'DB 10/25/2020 16:39:49'!
PASSED!

!testRun: #MarsRoverTest #test09BackwardWhenPointingSouth stamp: 'DB 10/25/2020 16:39:49'!
FAILURE!

!testRun: #MarsRoverTest #test09BackwardWhenPointingSouth stamp: 'DB 10/25/2020 16:39:49'!
FAILURE!
!MarsRover methodsFor: 'as yet unclassified' stamp: 'DB 10/25/2020 16:40:18' prior: 50868729!
move: comands 

	comands = 'f' ifTrue: [
		currentCardinalDirection = #N ifTrue: [currentPosition := currentPosition + (0@1)].
		currentCardinalDirection = #E ifTrue: [currentPosition := currentPosition + (1@0)].
		currentCardinalDirection = #S ifTrue: [currentPosition :=  currentPosition - (0@1) ].
		currentCardinalDirection = #W ifTrue: [currentPosition :=  currentPosition - (1@0)].
	].

	comands = 'b' ifTrue: [
		currentCardinalDirection = #N ifTrue: [currentPosition := 1@0].
		currentCardinalDirection = #E ifTrue: [currentPosition := 0@1].
		currentCardinalDirection = #E ifTrue: [currentPosition := 1@2].
	].
	
	comands  = 'l' ifTrue: [currentCardinalDirection := #W].
	
	comands  = 'r' ifTrue: [currentCardinalDirection := #E]
	
	
! !

!testRun: #MarsRoverTest #test09BackwardWhenPointingSouth stamp: 'DB 10/25/2020 16:40:20'!
FAILURE!
!MarsRover methodsFor: 'as yet unclassified' stamp: 'DB 10/25/2020 16:40:42' prior: 50868813!
move: comands 

	comands = 'f' ifTrue: [
		currentCardinalDirection = #N ifTrue: [currentPosition := currentPosition + (0@1)].
		currentCardinalDirection = #E ifTrue: [currentPosition := currentPosition + (1@0)].
		currentCardinalDirection = #S ifTrue: [currentPosition :=  currentPosition - (0@1) ].
		currentCardinalDirection = #W ifTrue: [currentPosition :=  currentPosition - (1@0)].
	].

	comands = 'b' ifTrue: [
		currentCardinalDirection = #N ifTrue: [currentPosition := 1@0].
		currentCardinalDirection = #E ifTrue: [currentPosition := 0@1].
		currentCardinalDirection = #S ifTrue: [currentPosition := 1@2].
	].
	
	comands  = 'l' ifTrue: [currentCardinalDirection := #W].
	
	comands  = 'r' ifTrue: [currentCardinalDirection := #E]
	
	
! !

!testRun: #MarsRoverTest #test09BackwardWhenPointingSouth stamp: 'DB 10/25/2020 16:40:43'!
PASSED!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'DB 10/25/2020 16:41:01'!
test10BackwardWhenPointingWest
	
	| marsRover |
	marsRover := MarsRover at: 1@1 pointingTowards: #W.
	
	marsRover move: 'b'.
	
	self assert: ((marsRover currentPosition) = (1@2))! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'DB 10/25/2020 16:41:10' prior: 50868873!
test10BackwardWhenPointingWest
	
	| marsRover |
	marsRover := MarsRover at: 1@1 pointingTowards: #W.
	
	marsRover move: 'b'.
	
	self assert: ((marsRover currentPosition) = (2@1))! !

!testRun: #MarsRoverTest #test01ForwardWhenPointingNorth stamp: 'DB 10/25/2020 16:41:13'!
PASSED!

!testRun: #MarsRoverTest #test02BackwardWhenPointingNorth stamp: 'DB 10/25/2020 16:41:13'!
PASSED!

!testRun: #MarsRoverTest #test03TuringLeftWhenPointingNorth stamp: 'DB 10/25/2020 16:41:13'!
PASSED!

!testRun: #MarsRoverTest #test04TurningRightWhenPointingNorth stamp: 'DB 10/25/2020 16:41:13'!
PASSED!

!testRun: #MarsRoverTest #test05ForwardWhenPointingEast stamp: 'DB 10/25/2020 16:41:13'!
PASSED!

!testRun: #MarsRoverTest #test06ForwardWhenPointingSouth stamp: 'DB 10/25/2020 16:41:13'!
PASSED!

!testRun: #MarsRoverTest #test07ForwardWhenPointingWest stamp: 'DB 10/25/2020 16:41:13'!
PASSED!

!testRun: #MarsRoverTest #test08BackwardWhenPointingEast stamp: 'DB 10/25/2020 16:41:13'!
PASSED!

!testRun: #MarsRoverTest #test09BackwardWhenPointingSouth stamp: 'DB 10/25/2020 16:41:13'!
PASSED!

!testRun: #MarsRoverTest #test10BackwardWhenPointingWest stamp: 'DB 10/25/2020 16:41:13'!
FAILURE!

!testRun: #MarsRoverTest #test10BackwardWhenPointingWest stamp: 'DB 10/25/2020 16:41:13'!
FAILURE!
!MarsRover methodsFor: 'as yet unclassified' stamp: 'DB 10/25/2020 16:41:38' prior: 50868843!
move: comands 

	comands = 'f' ifTrue: [
		currentCardinalDirection = #N ifTrue: [currentPosition := currentPosition + (0@1)].
		currentCardinalDirection = #E ifTrue: [currentPosition := currentPosition + (1@0)].
		currentCardinalDirection = #S ifTrue: [currentPosition :=  currentPosition - (0@1) ].
		currentCardinalDirection = #W ifTrue: [currentPosition :=  currentPosition - (1@0)].
	].

	comands = 'b' ifTrue: [
		currentCardinalDirection = #N ifTrue: [currentPosition := 1@0].
		currentCardinalDirection = #E ifTrue: [currentPosition := 0@1].
		currentCardinalDirection = #S ifTrue: [currentPosition := 1@2].
		currentCardinalDirection = #W ifTrue: [currentPosition := 2@1].
	].
	
	comands  = 'l' ifTrue: [currentCardinalDirection := #W].
	
	comands  = 'r' ifTrue: [currentCardinalDirection := #E]
	
	
! !

!testRun: #MarsRoverTest #test10BackwardWhenPointingWest stamp: 'DB 10/25/2020 16:41:43'!
PASSED!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'DB 10/25/2020 16:42:28'!
test11TuringLeftWhenPointingEast
	
	| marsRover |
	marsRover := MarsRover at: 1@1 pointingTowards: #E.
	
	marsRover move: 'l'.
	
	self assert: ((marsRover currentDirection) = #N)! !

!testRun: #MarsRoverTest #test01ForwardWhenPointingNorth stamp: 'DB 10/25/2020 16:42:31'!
PASSED!

!testRun: #MarsRoverTest #test02BackwardWhenPointingNorth stamp: 'DB 10/25/2020 16:42:31'!
PASSED!

!testRun: #MarsRoverTest #test03TuringLeftWhenPointingNorth stamp: 'DB 10/25/2020 16:42:31'!
PASSED!

!testRun: #MarsRoverTest #test04TurningRightWhenPointingNorth stamp: 'DB 10/25/2020 16:42:31'!
PASSED!

!testRun: #MarsRoverTest #test05ForwardWhenPointingEast stamp: 'DB 10/25/2020 16:42:31'!
PASSED!

!testRun: #MarsRoverTest #test06ForwardWhenPointingSouth stamp: 'DB 10/25/2020 16:42:31'!
PASSED!

!testRun: #MarsRoverTest #test07ForwardWhenPointingWest stamp: 'DB 10/25/2020 16:42:31'!
PASSED!

!testRun: #MarsRoverTest #test08BackwardWhenPointingEast stamp: 'DB 10/25/2020 16:42:31'!
PASSED!

!testRun: #MarsRoverTest #test09BackwardWhenPointingSouth stamp: 'DB 10/25/2020 16:42:31'!
PASSED!

!testRun: #MarsRoverTest #test10BackwardWhenPointingWest stamp: 'DB 10/25/2020 16:42:31'!
PASSED!

!testRun: #MarsRoverTest #test11TuringLeftWhenPointingEast stamp: 'DB 10/25/2020 16:42:31'!
FAILURE!

!testRun: #MarsRoverTest #test11TuringLeftWhenPointingEast stamp: 'DB 10/25/2020 16:42:31'!
FAILURE!
!MarsRover methodsFor: 'as yet unclassified' stamp: 'DB 10/25/2020 16:43:41' prior: 50868925!
move: comands 

	comands = 'f' ifTrue: [
		currentCardinalDirection = #N ifTrue: [currentPosition := currentPosition + (0@1)].
		currentCardinalDirection = #E ifTrue: [currentPosition := currentPosition + (1@0)].
		currentCardinalDirection = #S ifTrue: [currentPosition :=  currentPosition - (0@1) ].
		currentCardinalDirection = #W ifTrue: [currentPosition :=  currentPosition - (1@0)].
	].

	comands = 'b' ifTrue: [
		currentCardinalDirection = #N ifTrue: [currentPosition := 1@0].
		currentCardinalDirection = #E ifTrue: [currentPosition := 0@1].
		currentCardinalDirection = #S ifTrue: [currentPosition := 1@2].
		currentCardinalDirection = #W ifTrue: [currentPosition := 2@1].
	].
	
	comands  = 'l' ifTrue: [
		currentCardinalDirection = #N ifTrue: [currentCardinalDirection := #W].
		currentCardinalDirection = #E ifTrue: [currentCardinalDirection := #N]
	].
	
	comands  = 'r' ifTrue: [currentCardinalDirection := #E]
	
	
! !

!testRun: #MarsRoverTest #test11TuringLeftWhenPointingEast stamp: 'DB 10/25/2020 16:43:43'!
PASSED!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'DB 10/25/2020 16:44:11'!
test12TuringLeftWhenPointingSouth
	
	| marsRover |
	marsRover := MarsRover at: 1@1 pointingTowards: #S.
	
	marsRover move: 'l'.
	
	self assert: ((marsRover currentDirection) = #E)! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'DB 10/25/2020 16:45:46' prior: 50869039!
test12TuringLeftWhenPointingSouth
	
	| marsRover |
	marsRover := MarsRover at: 1@1 pointingTowards: #S.
	
	marsRover move: 'l'.
	
	self assert: ((marsRover currentDirection) = #E).! !

!testRun: #MarsRoverTest #test01ForwardWhenPointingNorth stamp: 'DB 10/25/2020 16:45:52'!
PASSED!

!testRun: #MarsRoverTest #test02BackwardWhenPointingNorth stamp: 'DB 10/25/2020 16:45:52'!
PASSED!

!testRun: #MarsRoverTest #test03TuringLeftWhenPointingNorth stamp: 'DB 10/25/2020 16:45:52'!
PASSED!

!testRun: #MarsRoverTest #test04TurningRightWhenPointingNorth stamp: 'DB 10/25/2020 16:45:52'!
PASSED!

!testRun: #MarsRoverTest #test05ForwardWhenPointingEast stamp: 'DB 10/25/2020 16:45:52'!
PASSED!

!testRun: #MarsRoverTest #test06ForwardWhenPointingSouth stamp: 'DB 10/25/2020 16:45:52'!
PASSED!

!testRun: #MarsRoverTest #test07ForwardWhenPointingWest stamp: 'DB 10/25/2020 16:45:52'!
PASSED!

!testRun: #MarsRoverTest #test08BackwardWhenPointingEast stamp: 'DB 10/25/2020 16:45:52'!
PASSED!

!testRun: #MarsRoverTest #test09BackwardWhenPointingSouth stamp: 'DB 10/25/2020 16:45:52'!
PASSED!

!testRun: #MarsRoverTest #test10BackwardWhenPointingWest stamp: 'DB 10/25/2020 16:45:52'!
PASSED!

!testRun: #MarsRoverTest #test11TuringLeftWhenPointingEast stamp: 'DB 10/25/2020 16:45:52'!
PASSED!

!testRun: #MarsRoverTest #test12TuringLeftWhenPointingSouth stamp: 'DB 10/25/2020 16:45:52'!
FAILURE!

!testRun: #MarsRoverTest #test12TuringLeftWhenPointingSouth stamp: 'DB 10/25/2020 16:45:52'!
FAILURE!
!MarsRover methodsFor: 'as yet unclassified' stamp: 'DB 10/25/2020 16:46:18' prior: 50869004!
move: comands 

	comands = 'f' ifTrue: [
		currentCardinalDirection = #N ifTrue: [currentPosition := currentPosition + (0@1)].
		currentCardinalDirection = #E ifTrue: [currentPosition := currentPosition + (1@0)].
		currentCardinalDirection = #S ifTrue: [currentPosition :=  currentPosition - (0@1) ].
		currentCardinalDirection = #W ifTrue: [currentPosition :=  currentPosition - (1@0)].
	].

	comands = 'b' ifTrue: [
		currentCardinalDirection = #N ifTrue: [currentPosition := 1@0].
		currentCardinalDirection = #E ifTrue: [currentPosition := 0@1].
		currentCardinalDirection = #S ifTrue: [currentPosition := 1@2].
		currentCardinalDirection = #W ifTrue: [currentPosition := 2@1].
	].
	
	comands  = 'l' ifTrue: [
		currentCardinalDirection = #N ifTrue: [currentCardinalDirection := #W].
		currentCardinalDirection = #E ifTrue: [currentCardinalDirection := #N].
		currentCardinalDirection = #S ifTrue: [currentCardinalDirection := #E]
	].
	
	comands  = 'r' ifTrue: [currentCardinalDirection := #E]
	
	
! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'DB 10/25/2020 16:46:28' prior: 50869098!
move: comands 

	comands = 'f' ifTrue: [
		currentCardinalDirection = #N ifTrue: [currentPosition := currentPosition + (0@1)].
		currentCardinalDirection = #E ifTrue: [currentPosition := currentPosition + (1@0)].
		currentCardinalDirection = #S ifTrue: [currentPosition :=  currentPosition - (0@1) ].
		currentCardinalDirection = #W ifTrue: [currentPosition :=  currentPosition - (1@0)].
	].

	comands = 'b' ifTrue: [
		currentCardinalDirection = #N ifTrue: [currentPosition := 1@0].
		currentCardinalDirection = #E ifTrue: [currentPosition := 0@1].
		currentCardinalDirection = #S ifTrue: [currentPosition := 1@2].
		currentCardinalDirection = #W ifTrue: [currentPosition := 2@1].
	].
	
	comands  = 'l' ifTrue: [
		currentCardinalDirection = #N ifTrue: [currentCardinalDirection := #W].
		currentCardinalDirection = #E ifTrue: [currentCardinalDirection := #N].
		currentCardinalDirection = #S ifTrue: [currentCardinalDirection := #E].
	].
	
	comands  = 'r' ifTrue: [currentCardinalDirection := #E]
	
	
! !

!testRun: #MarsRoverTest #test12TuringLeftWhenPointingSouth stamp: 'DB 10/25/2020 16:46:29'!
PASSED!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'DB 10/25/2020 16:47:05'!
test13TuringLeftWhenPointingWest
	
	| marsRover |
	marsRover := MarsRover at: 1@1 pointingTowards: #W.
	
	marsRover move: 'l'.
	
	self assert: ((marsRover currentDirection) = #S).! !

!testRun: #MarsRoverTest #test01ForwardWhenPointingNorth stamp: 'DB 10/25/2020 16:47:10'!
PASSED!

!testRun: #MarsRoverTest #test02BackwardWhenPointingNorth stamp: 'DB 10/25/2020 16:47:10'!
PASSED!

!testRun: #MarsRoverTest #test03TuringLeftWhenPointingNorth stamp: 'DB 10/25/2020 16:47:10'!
PASSED!

!testRun: #MarsRoverTest #test04TurningRightWhenPointingNorth stamp: 'DB 10/25/2020 16:47:10'!
PASSED!

!testRun: #MarsRoverTest #test05ForwardWhenPointingEast stamp: 'DB 10/25/2020 16:47:10'!
PASSED!

!testRun: #MarsRoverTest #test06ForwardWhenPointingSouth stamp: 'DB 10/25/2020 16:47:10'!
PASSED!

!testRun: #MarsRoverTest #test07ForwardWhenPointingWest stamp: 'DB 10/25/2020 16:47:10'!
PASSED!

!testRun: #MarsRoverTest #test08BackwardWhenPointingEast stamp: 'DB 10/25/2020 16:47:10'!
PASSED!

!testRun: #MarsRoverTest #test09BackwardWhenPointingSouth stamp: 'DB 10/25/2020 16:47:10'!
PASSED!

!testRun: #MarsRoverTest #test10BackwardWhenPointingWest stamp: 'DB 10/25/2020 16:47:10'!
PASSED!

!testRun: #MarsRoverTest #test11TuringLeftWhenPointingEast stamp: 'DB 10/25/2020 16:47:10'!
PASSED!

!testRun: #MarsRoverTest #test12TuringLeftWhenPointingSouth stamp: 'DB 10/25/2020 16:47:10'!
PASSED!

!testRun: #MarsRoverTest #test13TuringLeftWhenPointingWest stamp: 'DB 10/25/2020 16:47:10'!
FAILURE!

!testRun: #MarsRoverTest #test13TuringLeftWhenPointingWest stamp: 'DB 10/25/2020 16:47:10'!
FAILURE!

----SNAPSHOT----(25 October 2020 16:47:16) CuisUniversity-4384.image priorSource: 17175141!
!MarsRover methodsFor: 'as yet unclassified' stamp: 'DB 10/25/2020 16:47:43' prior: 50869133!
move: comands 

	comands = 'f' ifTrue: [
		currentCardinalDirection = #N ifTrue: [currentPosition := currentPosition + (0@1)].
		currentCardinalDirection = #E ifTrue: [currentPosition := currentPosition + (1@0)].
		currentCardinalDirection = #S ifTrue: [currentPosition :=  currentPosition - (0@1) ].
		currentCardinalDirection = #W ifTrue: [currentPosition :=  currentPosition - (1@0)].
	].

	comands = 'b' ifTrue: [
		currentCardinalDirection = #N ifTrue: [currentPosition := 1@0].
		currentCardinalDirection = #E ifTrue: [currentPosition := 0@1].
		currentCardinalDirection = #S ifTrue: [currentPosition := 1@2].
		currentCardinalDirection = #W ifTrue: [currentPosition := 2@1].
	].
	
	comands  = 'l' ifTrue: [
		currentCardinalDirection = #N ifTrue: [currentCardinalDirection := #W].
		currentCardinalDirection = #E ifTrue: [currentCardinalDirection := #N].
		currentCardinalDirection = #S ifTrue: [currentCardinalDirection := #E].
		currentCardinalDirection = #W ifTrue: [currentCardinalDirection := #S].
	].
	
	comands  = 'r' ifTrue: [currentCardinalDirection := #E]
	
	
! !

!testRun: #MarsRoverTest #test13TuringLeftWhenPointingWest stamp: 'DB 10/25/2020 16:47:46'!
PASSED!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'DB 10/25/2020 16:48:09'!
test04TurningRightWhenPointingEast
	
	| marsRover |
	marsRover := MarsRover at: 1@1 pointingTowards: #E.
	
	marsRover move: 'r'.
	
	self assert: ((marsRover currentDirection) = #S)! !

!testRun: #MarsRoverTest #test01ForwardWhenPointingNorth stamp: 'DB 10/25/2020 16:48:13'!
PASSED!

!testRun: #MarsRoverTest #test02BackwardWhenPointingNorth stamp: 'DB 10/25/2020 16:48:13'!
PASSED!

!testRun: #MarsRoverTest #test03TuringLeftWhenPointingNorth stamp: 'DB 10/25/2020 16:48:13'!
FAILURE!

!testRun: #MarsRoverTest #test04TurningRightWhenPointingEast stamp: 'DB 10/25/2020 16:48:13'!
FAILURE!

!testRun: #MarsRoverTest #test04TurningRightWhenPointingNorth stamp: 'DB 10/25/2020 16:48:13'!
PASSED!

!testRun: #MarsRoverTest #test05ForwardWhenPointingEast stamp: 'DB 10/25/2020 16:48:13'!
PASSED!

!testRun: #MarsRoverTest #test06ForwardWhenPointingSouth stamp: 'DB 10/25/2020 16:48:13'!
PASSED!

!testRun: #MarsRoverTest #test07ForwardWhenPointingWest stamp: 'DB 10/25/2020 16:48:13'!
PASSED!

!testRun: #MarsRoverTest #test08BackwardWhenPointingEast stamp: 'DB 10/25/2020 16:48:13'!
PASSED!

!testRun: #MarsRoverTest #test09BackwardWhenPointingSouth stamp: 'DB 10/25/2020 16:48:13'!
PASSED!

!testRun: #MarsRoverTest #test10BackwardWhenPointingWest stamp: 'DB 10/25/2020 16:48:13'!
PASSED!

!testRun: #MarsRoverTest #test11TuringLeftWhenPointingEast stamp: 'DB 10/25/2020 16:48:13'!
PASSED!

!testRun: #MarsRoverTest #test12TuringLeftWhenPointingSouth stamp: 'DB 10/25/2020 16:48:13'!
PASSED!

!testRun: #MarsRoverTest #test13TuringLeftWhenPointingWest stamp: 'DB 10/25/2020 16:48:13'!
PASSED!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'DB 10/25/2020 16:49:12'!
test14TurningRightWhenPointingEast
	
	| marsRover |
	marsRover := MarsRover at: 1@1 pointingTowards: #E.
	
	marsRover move: 'r'.
	
	self assert: ((marsRover currentDirection) = #S)! !

!methodRemoval: MarsRoverTest #test04TurningRightWhenPointingEast stamp: 'DB 10/25/2020 16:49:12'!
test04TurningRightWhenPointingEast
	
	| marsRover |
	marsRover := MarsRover at: 1@1 pointingTowards: #E.
	
	marsRover move: 'r'.
	
	self assert: ((marsRover currentDirection) = #S)!

!testRun: #MarsRoverTest #test01ForwardWhenPointingNorth stamp: 'DB 10/25/2020 16:49:18'!
PASSED!

!testRun: #MarsRoverTest #test02BackwardWhenPointingNorth stamp: 'DB 10/25/2020 16:49:18'!
PASSED!

!testRun: #MarsRoverTest #test03TuringLeftWhenPointingNorth stamp: 'DB 10/25/2020 16:49:18'!
FAILURE!

!testRun: #MarsRoverTest #test04TurningRightWhenPointingNorth stamp: 'DB 10/25/2020 16:49:18'!
PASSED!

!testRun: #MarsRoverTest #test05ForwardWhenPointingEast stamp: 'DB 10/25/2020 16:49:18'!
PASSED!

!testRun: #MarsRoverTest #test06ForwardWhenPointingSouth stamp: 'DB 10/25/2020 16:49:18'!
PASSED!

!testRun: #MarsRoverTest #test07ForwardWhenPointingWest stamp: 'DB 10/25/2020 16:49:18'!
PASSED!

!testRun: #MarsRoverTest #test08BackwardWhenPointingEast stamp: 'DB 10/25/2020 16:49:18'!
PASSED!

!testRun: #MarsRoverTest #test09BackwardWhenPointingSouth stamp: 'DB 10/25/2020 16:49:18'!
PASSED!

!testRun: #MarsRoverTest #test10BackwardWhenPointingWest stamp: 'DB 10/25/2020 16:49:18'!
PASSED!

!testRun: #MarsRoverTest #test11TuringLeftWhenPointingEast stamp: 'DB 10/25/2020 16:49:18'!
PASSED!

!testRun: #MarsRoverTest #test12TuringLeftWhenPointingSouth stamp: 'DB 10/25/2020 16:49:18'!
PASSED!

!testRun: #MarsRoverTest #test13TuringLeftWhenPointingWest stamp: 'DB 10/25/2020 16:49:18'!
PASSED!

!testRun: #MarsRoverTest #test14TurningRightWhenPointingEast stamp: 'DB 10/25/2020 16:49:18'!
FAILURE!

!testRun: #MarsRoverTest #test03TuringLeftWhenPointingNorth stamp: 'DB 10/25/2020 16:49:24'!
FAILURE!

!testRun: #MarsRoverTest #test04TurningRightWhenPointingNorth stamp: 'DB 10/25/2020 16:50:08'!
PASSED!

!testRun: #MarsRoverTest #test03TuringLeftWhenPointingNorth stamp: 'DB 10/25/2020 16:50:15'!
FAILURE!

!testRun: #MarsRoverTest #test03TuringLeftWhenPointingNorth stamp: 'DB 10/25/2020 16:50:15'!
FAILURE!
!MarsRover methodsFor: 'as yet unclassified' stamp: 'DB 10/25/2020 16:53:48' prior: 50869227!
move: comands 

	comands = 'f' ifTrue: [
		currentCardinalDirection = #N ifTrue: [currentPosition := currentPosition + (0@1)].
		currentCardinalDirection = #E ifTrue: [currentPosition := currentPosition + (1@0)].
		currentCardinalDirection = #S ifTrue: [currentPosition :=  currentPosition - (0@1) ].
		currentCardinalDirection = #W ifTrue: [currentPosition :=  currentPosition - (1@0)].
	].

	comands = 'b' ifTrue: [
		currentCardinalDirection = #N ifTrue: [currentPosition := 1@0].
		currentCardinalDirection = #E ifTrue: [currentPosition := 0@1].
		currentCardinalDirection = #S ifTrue: [currentPosition := 1@2].
		currentCardinalDirection = #W ifTrue: [currentPosition := 2@1].
	].
	
	comands  = 'l' ifTrue: [
		currentCardinalDirection = #N ifTrue:  [currentCardinalDirection := #W] ifFalse: [
			currentCardinalDirection = #E ifTrue: [currentCardinalDirection := #N] ifFalse: [
				currentCardinalDirection = #S ifTrue: [currentCardinalDirection := #E] ifFalse: [
					currentCardinalDirection = #W ifTrue: [currentCardinalDirection := #S].
				]
			]
		]
	].
	
	comands  = 'r' ifTrue: [currentCardinalDirection := #E]
	
	
! !

!testRun: #MarsRoverTest #test03TuringLeftWhenPointingNorth stamp: 'DB 10/25/2020 16:53:50'!
FAILURE!

marsRover!

marsRover!

!testRun: #MarsRoverTest #test01ForwardWhenPointingNorth stamp: 'DB 10/25/2020 16:55:27'!
PASSED!

!testRun: #MarsRoverTest #test02BackwardWhenPointingNorth stamp: 'DB 10/25/2020 16:55:27'!
PASSED!

!testRun: #MarsRoverTest #test03TuringLeftWhenPointingNorth stamp: 'DB 10/25/2020 16:55:27'!
PASSED!

!testRun: #MarsRoverTest #test04TurningRightWhenPointingNorth stamp: 'DB 10/25/2020 16:55:27'!
PASSED!

!testRun: #MarsRoverTest #test05ForwardWhenPointingEast stamp: 'DB 10/25/2020 16:55:27'!
PASSED!

!testRun: #MarsRoverTest #test06ForwardWhenPointingSouth stamp: 'DB 10/25/2020 16:55:27'!
PASSED!

!testRun: #MarsRoverTest #test07ForwardWhenPointingWest stamp: 'DB 10/25/2020 16:55:27'!
PASSED!

!testRun: #MarsRoverTest #test08BackwardWhenPointingEast stamp: 'DB 10/25/2020 16:55:27'!
PASSED!

!testRun: #MarsRoverTest #test09BackwardWhenPointingSouth stamp: 'DB 10/25/2020 16:55:27'!
PASSED!

!testRun: #MarsRoverTest #test10BackwardWhenPointingWest stamp: 'DB 10/25/2020 16:55:27'!
PASSED!

!testRun: #MarsRoverTest #test11TuringLeftWhenPointingEast stamp: 'DB 10/25/2020 16:55:27'!
PASSED!

!testRun: #MarsRoverTest #test12TuringLeftWhenPointingSouth stamp: 'DB 10/25/2020 16:55:27'!
PASSED!

!testRun: #MarsRoverTest #test13TuringLeftWhenPointingWest stamp: 'DB 10/25/2020 16:55:27'!
PASSED!

!testRun: #MarsRoverTest #test14TurningRightWhenPointingEast stamp: 'DB 10/25/2020 16:55:27'!
FAILURE!

!testRun: #MarsRoverTest #test14TurningRightWhenPointingEast stamp: 'DB 10/25/2020 16:55:27'!
FAILURE!

!testRun: #MarsRoverTest #test03TuringLeftWhenPointingNorth stamp: 'DB 10/25/2020 16:55:43'!
PASSED!

!testRun: #MarsRoverTest #test01ForwardWhenPointingNorth stamp: 'DB 10/25/2020 16:55:49'!
PASSED!

!testRun: #MarsRoverTest #test02BackwardWhenPointingNorth stamp: 'DB 10/25/2020 16:55:49'!
PASSED!

!testRun: #MarsRoverTest #test03TuringLeftWhenPointingNorth stamp: 'DB 10/25/2020 16:55:49'!
PASSED!

!testRun: #MarsRoverTest #test04TurningRightWhenPointingNorth stamp: 'DB 10/25/2020 16:55:49'!
PASSED!

!testRun: #MarsRoverTest #test05ForwardWhenPointingEast stamp: 'DB 10/25/2020 16:55:49'!
PASSED!

!testRun: #MarsRoverTest #test06ForwardWhenPointingSouth stamp: 'DB 10/25/2020 16:55:49'!
PASSED!

!testRun: #MarsRoverTest #test07ForwardWhenPointingWest stamp: 'DB 10/25/2020 16:55:49'!
PASSED!

!testRun: #MarsRoverTest #test08BackwardWhenPointingEast stamp: 'DB 10/25/2020 16:55:49'!
PASSED!

!testRun: #MarsRoverTest #test09BackwardWhenPointingSouth stamp: 'DB 10/25/2020 16:55:49'!
PASSED!

!testRun: #MarsRoverTest #test10BackwardWhenPointingWest stamp: 'DB 10/25/2020 16:55:49'!
PASSED!

!testRun: #MarsRoverTest #test11TuringLeftWhenPointingEast stamp: 'DB 10/25/2020 16:55:49'!
PASSED!

!testRun: #MarsRoverTest #test12TuringLeftWhenPointingSouth stamp: 'DB 10/25/2020 16:55:49'!
PASSED!

!testRun: #MarsRoverTest #test13TuringLeftWhenPointingWest stamp: 'DB 10/25/2020 16:55:49'!
PASSED!

!testRun: #MarsRoverTest #test14TurningRightWhenPointingEast stamp: 'DB 10/25/2020 16:55:49'!
FAILURE!

!testRun: #MarsRoverTest #test14TurningRightWhenPointingEast stamp: 'DB 10/25/2020 16:55:49'!
FAILURE!
!MarsRover methodsFor: 'as yet unclassified' stamp: 'DB 10/25/2020 16:57:51' prior: 50869395!
move: comands 

	comands = 'f' ifTrue: [
		currentCardinalDirection = #N ifTrue: [currentPosition := currentPosition + (0@1)].
		currentCardinalDirection = #E ifTrue: [currentPosition := currentPosition + (1@0)].
		currentCardinalDirection = #S ifTrue: [currentPosition :=  currentPosition - (0@1) ].
		currentCardinalDirection = #W ifTrue: [currentPosition :=  currentPosition - (1@0)].
	].

	comands = 'b' ifTrue: [
		currentCardinalDirection = #N ifTrue: [currentPosition := 1@0].
		currentCardinalDirection = #E ifTrue: [currentPosition := 0@1].
		currentCardinalDirection = #S ifTrue: [currentPosition := 1@2].
		currentCardinalDirection = #W ifTrue: [currentPosition := 2@1].
	].
	
	comands  = 'l' ifTrue: [
		currentCardinalDirection = #N ifTrue:  [currentCardinalDirection := #W] ifFalse: [
			currentCardinalDirection = #E ifTrue: [currentCardinalDirection := #N] ifFalse: [
				currentCardinalDirection = #S ifTrue: [currentCardinalDirection := #E] ifFalse: [
					currentCardinalDirection = #W ifTrue: [currentCardinalDirection := #S].
				]
			]
		]
	].
	
	comands  = 'r' ifTrue: [
		currentCardinalDirection = #N ifTrue: [currentCardinalDirection := #E] ifFalse: [
			currentCardinalDirection = #S ifTrue: [currentCardinalDirection := #W] 
			] 
		]
	
	
! !

!testRun: #MarsRoverTest #test14TurningRightWhenPointingEast stamp: 'DB 10/25/2020 16:57:53'!
FAILURE!
!MarsRover methodsFor: 'as yet unclassified' stamp: 'DB 10/25/2020 16:58:24' prior: 50869535!
move: comands 

	comands = 'f' ifTrue: [
		currentCardinalDirection = #N ifTrue: [currentPosition := currentPosition + (0@1)].
		currentCardinalDirection = #E ifTrue: [currentPosition := currentPosition + (1@0)].
		currentCardinalDirection = #S ifTrue: [currentPosition :=  currentPosition - (0@1) ].
		currentCardinalDirection = #W ifTrue: [currentPosition :=  currentPosition - (1@0)].
	].

	comands = 'b' ifTrue: [
		currentCardinalDirection = #N ifTrue: [currentPosition := 1@0].
		currentCardinalDirection = #E ifTrue: [currentPosition := 0@1].
		currentCardinalDirection = #S ifTrue: [currentPosition := 1@2].
		currentCardinalDirection = #W ifTrue: [currentPosition := 2@1].
	].
	
	comands  = 'l' ifTrue: [
		currentCardinalDirection = #N ifTrue:  [currentCardinalDirection := #W] ifFalse: [
			currentCardinalDirection = #E ifTrue: [currentCardinalDirection := #N] ifFalse: [
				currentCardinalDirection = #S ifTrue: [currentCardinalDirection := #E] ifFalse: [
					currentCardinalDirection = #W ifTrue: [currentCardinalDirection := #S].
				]
			]
		]
	].
	
	comands  = 'r' ifTrue: [
		currentCardinalDirection = #N ifTrue: [currentCardinalDirection := #E] ifFalse: [
			currentCardinalDirection = #E ifTrue: [currentCardinalDirection := #S] 
			] 
		]
	
	
! !

!testRun: #MarsRoverTest #test14TurningRightWhenPointingEast stamp: 'DB 10/25/2020 16:58:25'!
PASSED!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'DB 10/25/2020 16:58:51'!
test15TurningRightWhenPointingSouth
	
	| marsRover |
	marsRover := MarsRover at: 1@1 pointingTowards: #S.
	
	marsRover move: 'r'.
	
	self assert: ((marsRover currentDirection) = #W)! !

!testRun: #MarsRoverTest #test01ForwardWhenPointingNorth stamp: 'DB 10/25/2020 16:58:54'!
PASSED!

!testRun: #MarsRoverTest #test02BackwardWhenPointingNorth stamp: 'DB 10/25/2020 16:58:54'!
PASSED!

!testRun: #MarsRoverTest #test03TuringLeftWhenPointingNorth stamp: 'DB 10/25/2020 16:58:54'!
PASSED!

!testRun: #MarsRoverTest #test04TurningRightWhenPointingNorth stamp: 'DB 10/25/2020 16:58:54'!
PASSED!

!testRun: #MarsRoverTest #test05ForwardWhenPointingEast stamp: 'DB 10/25/2020 16:58:55'!
PASSED!

!testRun: #MarsRoverTest #test06ForwardWhenPointingSouth stamp: 'DB 10/25/2020 16:58:55'!
PASSED!

!testRun: #MarsRoverTest #test07ForwardWhenPointingWest stamp: 'DB 10/25/2020 16:58:55'!
PASSED!

!testRun: #MarsRoverTest #test08BackwardWhenPointingEast stamp: 'DB 10/25/2020 16:58:55'!
PASSED!

!testRun: #MarsRoverTest #test09BackwardWhenPointingSouth stamp: 'DB 10/25/2020 16:58:55'!
PASSED!

!testRun: #MarsRoverTest #test10BackwardWhenPointingWest stamp: 'DB 10/25/2020 16:58:55'!
PASSED!

!testRun: #MarsRoverTest #test11TuringLeftWhenPointingEast stamp: 'DB 10/25/2020 16:58:55'!
PASSED!

!testRun: #MarsRoverTest #test12TuringLeftWhenPointingSouth stamp: 'DB 10/25/2020 16:58:55'!
PASSED!

!testRun: #MarsRoverTest #test13TuringLeftWhenPointingWest stamp: 'DB 10/25/2020 16:58:55'!
PASSED!

!testRun: #MarsRoverTest #test14TurningRightWhenPointingEast stamp: 'DB 10/25/2020 16:58:55'!
PASSED!

!testRun: #MarsRoverTest #test15TurningRightWhenPointingSouth stamp: 'DB 10/25/2020 16:58:55'!
FAILURE!

!testRun: #MarsRoverTest #test15TurningRightWhenPointingSouth stamp: 'DB 10/25/2020 16:58:55'!
FAILURE!
!MarsRover methodsFor: 'as yet unclassified' stamp: 'DB 10/25/2020 16:59:58' prior: 50869581!
move: comands 

	comands = 'f' ifTrue: [
		currentCardinalDirection = #N ifTrue: [currentPosition := currentPosition + (0@1)].
		currentCardinalDirection = #E ifTrue: [currentPosition := currentPosition + (1@0)].
		currentCardinalDirection = #S ifTrue: [currentPosition :=  currentPosition - (0@1) ].
		currentCardinalDirection = #W ifTrue: [currentPosition :=  currentPosition - (1@0)].
	].

	comands = 'b' ifTrue: [
		currentCardinalDirection = #N ifTrue: [currentPosition := 1@0].
		currentCardinalDirection = #E ifTrue: [currentPosition := 0@1].
		currentCardinalDirection = #S ifTrue: [currentPosition := 1@2].
		currentCardinalDirection = #W ifTrue: [currentPosition := 2@1].
	].
	
	comands  = 'l' ifTrue: [
		currentCardinalDirection = #N ifTrue:  [currentCardinalDirection := #W] ifFalse: [
			currentCardinalDirection = #E ifTrue: [currentCardinalDirection := #N] ifFalse: [
				currentCardinalDirection = #S ifTrue: [currentCardinalDirection := #E] ifFalse: [
					currentCardinalDirection = #W ifTrue: [currentCardinalDirection := #S].
				]
			]
		]
	].
	
	comands  = 'r' ifTrue: [
		currentCardinalDirection = #N ifTrue: [currentCardinalDirection := #E] ifFalse: [
			currentCardinalDirection = #E ifTrue: [currentCardinalDirection := #S] ifFalse: [
					currentCardinalDirection = #S ifTrue: [currentCardinalDirection := #W]
				]
			] 
		]
	
	
! !

!testRun: #MarsRoverTest #test15TurningRightWhenPointingSouth stamp: 'DB 10/25/2020 17:00:01'!
PASSED!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'DB 10/25/2020 17:00:25'!
test16TurningRightWhenPointingWest
	
	| marsRover |
	marsRover := MarsRover at: 1@1 pointingTowards: #W.
	
	marsRover move: 'r'.
	
	self assert: ((marsRover currentDirection) = #N)! !

!testRun: #MarsRoverTest #test01ForwardWhenPointingNorth stamp: 'DB 10/25/2020 17:00:28'!
PASSED!

!testRun: #MarsRoverTest #test02BackwardWhenPointingNorth stamp: 'DB 10/25/2020 17:00:28'!
PASSED!

!testRun: #MarsRoverTest #test03TuringLeftWhenPointingNorth stamp: 'DB 10/25/2020 17:00:28'!
PASSED!

!testRun: #MarsRoverTest #test04TurningRightWhenPointingNorth stamp: 'DB 10/25/2020 17:00:28'!
PASSED!

!testRun: #MarsRoverTest #test05ForwardWhenPointingEast stamp: 'DB 10/25/2020 17:00:28'!
PASSED!

!testRun: #MarsRoverTest #test06ForwardWhenPointingSouth stamp: 'DB 10/25/2020 17:00:28'!
PASSED!

!testRun: #MarsRoverTest #test07ForwardWhenPointingWest stamp: 'DB 10/25/2020 17:00:28'!
PASSED!

!testRun: #MarsRoverTest #test08BackwardWhenPointingEast stamp: 'DB 10/25/2020 17:00:28'!
PASSED!

!testRun: #MarsRoverTest #test09BackwardWhenPointingSouth stamp: 'DB 10/25/2020 17:00:28'!
PASSED!

!testRun: #MarsRoverTest #test10BackwardWhenPointingWest stamp: 'DB 10/25/2020 17:00:28'!
PASSED!

!testRun: #MarsRoverTest #test11TuringLeftWhenPointingEast stamp: 'DB 10/25/2020 17:00:28'!
PASSED!

!testRun: #MarsRoverTest #test12TuringLeftWhenPointingSouth stamp: 'DB 10/25/2020 17:00:28'!
PASSED!

!testRun: #MarsRoverTest #test13TuringLeftWhenPointingWest stamp: 'DB 10/25/2020 17:00:28'!
PASSED!

!testRun: #MarsRoverTest #test14TurningRightWhenPointingEast stamp: 'DB 10/25/2020 17:00:28'!
PASSED!

!testRun: #MarsRoverTest #test15TurningRightWhenPointingSouth stamp: 'DB 10/25/2020 17:00:28'!
PASSED!

!testRun: #MarsRoverTest #test16TurningRightWhenPointingWest stamp: 'DB 10/25/2020 17:00:28'!
FAILURE!

!testRun: #MarsRoverTest #test16TurningRightWhenPointingWest stamp: 'DB 10/25/2020 17:00:28'!
FAILURE!
!MarsRover methodsFor: 'as yet unclassified' stamp: 'DB 10/25/2020 17:01:31' prior: 50869687!
move: comands 

	comands = 'f' ifTrue: [
		currentCardinalDirection = #N ifTrue: [currentPosition := currentPosition + (0@1)].
		currentCardinalDirection = #E ifTrue: [currentPosition := currentPosition + (1@0)].
		currentCardinalDirection = #S ifTrue: [currentPosition :=  currentPosition - (0@1) ].
		currentCardinalDirection = #W ifTrue: [currentPosition :=  currentPosition - (1@0)].
	].

	comands = 'b' ifTrue: [
		currentCardinalDirection = #N ifTrue: [currentPosition := 1@0].
		currentCardinalDirection = #E ifTrue: [currentPosition := 0@1].
		currentCardinalDirection = #S ifTrue: [currentPosition := 1@2].
		currentCardinalDirection = #W ifTrue: [currentPosition := 2@1].
	].
	
	comands  = 'l' ifTrue: [
		currentCardinalDirection = #N ifTrue:  [currentCardinalDirection := #W] ifFalse: [
			currentCardinalDirection = #E ifTrue: [currentCardinalDirection := #N] ifFalse: [
				currentCardinalDirection = #S ifTrue: [currentCardinalDirection := #E] ifFalse: [
					currentCardinalDirection = #W ifTrue: [currentCardinalDirection := #S].
				]
			]
		]
	].
	
	comands  = 'r' ifTrue: [
		currentCardinalDirection = #N ifTrue: [currentCardinalDirection := #E] ifFalse: [
			currentCardinalDirection = #E ifTrue: [currentCardinalDirection := #S] ifFalse: [
					currentCardinalDirection = #S ifTrue: [currentCardinalDirection := #W] ifFalse: [
						currentCardinalDirection = #W ifTrue: [currentCardinalDirection := #N]
					]
				]
			] 
		]
	
	
! !

!testRun: #MarsRoverTest #test16TurningRightWhenPointingWest stamp: 'DB 10/25/2020 17:01:32'!
PASSED!
!MarsRover methodsFor: 'as yet unclassified' stamp: 'DB 10/25/2020 17:03:55' prior: 50869799!
move: comands 

	comands = 'f' ifTrue: [
		currentCardinalDirection = #N ifTrue: [currentPosition := currentPosition + (0@1)].
		currentCardinalDirection = #E ifTrue: [currentPosition := currentPosition + (1@0)].
		currentCardinalDirection = #S ifTrue: [currentPosition :=  currentPosition - (0@1) ].
		currentCardinalDirection = #W ifTrue: [currentPosition :=  currentPosition - (1@0)].
	].

	comands = 'b' ifTrue: [
		currentCardinalDirection = #N ifTrue: [currentPosition := currentPosition - (0@1)].
		currentCardinalDirection = #E ifTrue: [currentPosition := currentPosition - (1@0)].
		currentCardinalDirection = #S ifTrue: [currentPosition := currentPosition + (0@1)].
		currentCardinalDirection = #W ifTrue: [currentPosition := currentPosition+ (1@0)].
	].
	
	comands  = 'l' ifTrue: [
		currentCardinalDirection = #N ifTrue:  [currentCardinalDirection := #W] ifFalse: [
			currentCardinalDirection = #E ifTrue: [currentCardinalDirection := #N] ifFalse: [
				currentCardinalDirection = #S ifTrue: [currentCardinalDirection := #E] ifFalse: [
					currentCardinalDirection = #W ifTrue: [currentCardinalDirection := #S].
				]
			]
		]
	].
	
	comands  = 'r' ifTrue: [
		currentCardinalDirection = #N ifTrue: [currentCardinalDirection := #E] ifFalse: [
			currentCardinalDirection = #E ifTrue: [currentCardinalDirection := #S] ifFalse: [
					currentCardinalDirection = #S ifTrue: [currentCardinalDirection := #W] ifFalse: [
						currentCardinalDirection = #W ifTrue: [currentCardinalDirection := #N]
					]
				]
			] 
		]
	
	
! !

!testRun: #MarsRoverTest #test01ForwardWhenPointingNorth stamp: 'DB 10/25/2020 17:03:58'!
PASSED!

!testRun: #MarsRoverTest #test02BackwardWhenPointingNorth stamp: 'DB 10/25/2020 17:03:58'!
PASSED!

!testRun: #MarsRoverTest #test03TuringLeftWhenPointingNorth stamp: 'DB 10/25/2020 17:03:58'!
PASSED!

!testRun: #MarsRoverTest #test04TurningRightWhenPointingNorth stamp: 'DB 10/25/2020 17:03:58'!
PASSED!

!testRun: #MarsRoverTest #test05ForwardWhenPointingEast stamp: 'DB 10/25/2020 17:03:58'!
PASSED!

!testRun: #MarsRoverTest #test06ForwardWhenPointingSouth stamp: 'DB 10/25/2020 17:03:58'!
PASSED!

!testRun: #MarsRoverTest #test07ForwardWhenPointingWest stamp: 'DB 10/25/2020 17:03:58'!
PASSED!

!testRun: #MarsRoverTest #test08BackwardWhenPointingEast stamp: 'DB 10/25/2020 17:03:58'!
PASSED!

!testRun: #MarsRoverTest #test09BackwardWhenPointingSouth stamp: 'DB 10/25/2020 17:03:58'!
PASSED!

!testRun: #MarsRoverTest #test10BackwardWhenPointingWest stamp: 'DB 10/25/2020 17:03:58'!
PASSED!

!testRun: #MarsRoverTest #test11TuringLeftWhenPointingEast stamp: 'DB 10/25/2020 17:03:58'!
PASSED!

!testRun: #MarsRoverTest #test12TuringLeftWhenPointingSouth stamp: 'DB 10/25/2020 17:03:58'!
PASSED!

!testRun: #MarsRoverTest #test13TuringLeftWhenPointingWest stamp: 'DB 10/25/2020 17:03:58'!
PASSED!

!testRun: #MarsRoverTest #test14TurningRightWhenPointingEast stamp: 'DB 10/25/2020 17:03:58'!
PASSED!

!testRun: #MarsRoverTest #test15TurningRightWhenPointingSouth stamp: 'DB 10/25/2020 17:03:58'!
PASSED!

!testRun: #MarsRoverTest #test16TurningRightWhenPointingWest stamp: 'DB 10/25/2020 17:03:58'!
PASSED!

----SNAPSHOT----(25 October 2020 17:04:19) CuisUniversity-4384.image priorSource: 17202323!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'DB 10/25/2020 17:12:12'!
test18MultipleCommandsWhenPointingNorth
	
	| marsRover |
	marsRover := MarsRover at: 1@1 pointingTowards: #N.
	
	marsRover move: 'fff'.
	
	self assert: ((marsRover currentPosition ) = (1@4)).
	self assert: ((marsRover currentDirection) = #N).! !

!testRun: #MarsRoverTest #test01ForwardWhenPointingNorth stamp: 'DB 10/25/2020 17:12:32'!
PASSED!

!testRun: #MarsRoverTest #test02BackwardWhenPointingNorth stamp: 'DB 10/25/2020 17:12:32'!
PASSED!

!testRun: #MarsRoverTest #test03TuringLeftWhenPointingNorth stamp: 'DB 10/25/2020 17:12:32'!
PASSED!

!testRun: #MarsRoverTest #test04TurningRightWhenPointingNorth stamp: 'DB 10/25/2020 17:12:32'!
PASSED!

!testRun: #MarsRoverTest #test05ForwardWhenPointingEast stamp: 'DB 10/25/2020 17:12:32'!
PASSED!

!testRun: #MarsRoverTest #test06ForwardWhenPointingSouth stamp: 'DB 10/25/2020 17:12:32'!
PASSED!

!testRun: #MarsRoverTest #test07ForwardWhenPointingWest stamp: 'DB 10/25/2020 17:12:32'!
PASSED!

!testRun: #MarsRoverTest #test08BackwardWhenPointingEast stamp: 'DB 10/25/2020 17:12:32'!
PASSED!

!testRun: #MarsRoverTest #test09BackwardWhenPointingSouth stamp: 'DB 10/25/2020 17:12:32'!
PASSED!

!testRun: #MarsRoverTest #test10BackwardWhenPointingWest stamp: 'DB 10/25/2020 17:12:32'!
PASSED!

!testRun: #MarsRoverTest #test11TuringLeftWhenPointingEast stamp: 'DB 10/25/2020 17:12:32'!
PASSED!

!testRun: #MarsRoverTest #test12TuringLeftWhenPointingSouth stamp: 'DB 10/25/2020 17:12:32'!
PASSED!

!testRun: #MarsRoverTest #test13TuringLeftWhenPointingWest stamp: 'DB 10/25/2020 17:12:32'!
PASSED!

!testRun: #MarsRoverTest #test14TurningRightWhenPointingEast stamp: 'DB 10/25/2020 17:12:32'!
PASSED!

!testRun: #MarsRoverTest #test15TurningRightWhenPointingSouth stamp: 'DB 10/25/2020 17:12:32'!
PASSED!

!testRun: #MarsRoverTest #test16TurningRightWhenPointingWest stamp: 'DB 10/25/2020 17:12:32'!
PASSED!

!testRun: #MarsRoverTest #test18MultipleCommandsWhenPointingNorth stamp: 'DB 10/25/2020 17:12:32'!
FAILURE!

!testRun: #MarsRoverTest #test18MultipleCommandsWhenPointingNorth stamp: 'DB 10/25/2020 17:12:32'!
FAILURE!
!MarsRover methodsFor: 'as yet unclassified' stamp: 'DB 10/25/2020 17:15:21' prior: 50869851!
move: command 

	command = 'f' ifTrue: [
		currentCardinalDirection = #N ifTrue: [currentPosition := currentPosition + (0@1)].
		currentCardinalDirection = #E ifTrue: [currentPosition := currentPosition + (1@0)].
		currentCardinalDirection = #S ifTrue: [currentPosition :=  currentPosition - (0@1) ].
		currentCardinalDirection = #W ifTrue: [currentPosition :=  currentPosition - (1@0)].
	].

	command = 'b' ifTrue: [
		currentCardinalDirection = #N ifTrue: [currentPosition := currentPosition - (0@1)].
		currentCardinalDirection = #E ifTrue: [currentPosition := currentPosition - (1@0)].
		currentCardinalDirection = #S ifTrue: [currentPosition := currentPosition + (0@1)].
		currentCardinalDirection = #W ifTrue: [currentPosition := currentPosition+ (1@0)].
	].
	
	command  = 'l' ifTrue: [
		currentCardinalDirection = #N ifTrue:  [currentCardinalDirection := #W] ifFalse: [
			currentCardinalDirection = #E ifTrue: [currentCardinalDirection := #N] ifFalse: [
				currentCardinalDirection = #S ifTrue: [currentCardinalDirection := #E] ifFalse: [
					currentCardinalDirection = #W ifTrue: [currentCardinalDirection := #S].
				]
			]
		]
	].
	
	command  = 'r' ifTrue: [
		currentCardinalDirection = #N ifTrue: [currentCardinalDirection := #E] ifFalse: [
			currentCardinalDirection = #E ifTrue: [currentCardinalDirection := #S] ifFalse: [
					currentCardinalDirection = #S ifTrue: [currentCardinalDirection := #W] ifFalse: [
						currentCardinalDirection = #W ifTrue: [currentCardinalDirection := #N]
					]
				]
			] 
		].
	

	command = 'fff' ifTrue:  [
		currentPosition := 1@4.
	]
	
! !

!testRun: #MarsRoverTest #test18MultipleCommandsWhenPointingNorth stamp: 'DB 10/25/2020 17:15:24'!
PASSED!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'DB 10/25/2020 17:15:45'!
test17MultipleCommandsWhenPointingNorth
	
	| marsRover |
	marsRover := MarsRover at: 1@1 pointingTowards: #N.
	
	marsRover move: 'fff'.
	
	self assert: ((marsRover currentPosition ) = (1@4)).
	self assert: ((marsRover currentDirection) = #N).! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'DB 10/25/2020 17:17:27'!
test18MultipleMixedCommandsWhenPointingNorth
	
	| marsRover |
	marsRover := MarsRover at: 1@1 pointingTowards: #N.
	
	marsRover move: 'frffr'.
	
	self assert: ((marsRover currentPosition ) = (3@2)).
	self assert: ((marsRover currentDirection) = #S).! !

!testRun: #MarsRoverTest #test01ForwardWhenPointingNorth stamp: 'DB 10/25/2020 17:17:31'!
PASSED!

!testRun: #MarsRoverTest #test02BackwardWhenPointingNorth stamp: 'DB 10/25/2020 17:17:31'!
PASSED!

!testRun: #MarsRoverTest #test03TuringLeftWhenPointingNorth stamp: 'DB 10/25/2020 17:17:31'!
PASSED!

!testRun: #MarsRoverTest #test04TurningRightWhenPointingNorth stamp: 'DB 10/25/2020 17:17:31'!
PASSED!

!testRun: #MarsRoverTest #test05ForwardWhenPointingEast stamp: 'DB 10/25/2020 17:17:31'!
PASSED!

!testRun: #MarsRoverTest #test06ForwardWhenPointingSouth stamp: 'DB 10/25/2020 17:17:31'!
PASSED!

!testRun: #MarsRoverTest #test07ForwardWhenPointingWest stamp: 'DB 10/25/2020 17:17:32'!
PASSED!

!testRun: #MarsRoverTest #test08BackwardWhenPointingEast stamp: 'DB 10/25/2020 17:17:32'!
PASSED!

!testRun: #MarsRoverTest #test09BackwardWhenPointingSouth stamp: 'DB 10/25/2020 17:17:32'!
PASSED!

!testRun: #MarsRoverTest #test10BackwardWhenPointingWest stamp: 'DB 10/25/2020 17:17:32'!
PASSED!

!testRun: #MarsRoverTest #test11TuringLeftWhenPointingEast stamp: 'DB 10/25/2020 17:17:32'!
PASSED!

!testRun: #MarsRoverTest #test12TuringLeftWhenPointingSouth stamp: 'DB 10/25/2020 17:17:32'!
PASSED!

!testRun: #MarsRoverTest #test13TuringLeftWhenPointingWest stamp: 'DB 10/25/2020 17:17:32'!
PASSED!

!testRun: #MarsRoverTest #test14TurningRightWhenPointingEast stamp: 'DB 10/25/2020 17:17:32'!
PASSED!

!testRun: #MarsRoverTest #test15TurningRightWhenPointingSouth stamp: 'DB 10/25/2020 17:17:32'!
PASSED!

!testRun: #MarsRoverTest #test16TurningRightWhenPointingWest stamp: 'DB 10/25/2020 17:17:32'!
PASSED!

!testRun: #MarsRoverTest #test17MultipleCommandsWhenPointingNorth stamp: 'DB 10/25/2020 17:17:32'!
PASSED!

!testRun: #MarsRoverTest #test18MultipleCommandsWhenPointingNorth stamp: 'DB 10/25/2020 17:17:32'!
PASSED!

!testRun: #MarsRoverTest #test18MultipleMixedCommandsWhenPointingNorth stamp: 'DB 10/25/2020 17:17:32'!
FAILURE!

!testRun: #MarsRoverTest #test18MultipleMixedCommandsWhenPointingNorth stamp: 'DB 10/25/2020 17:17:32'!
FAILURE!
!MarsRover methodsFor: 'as yet unclassified' stamp: 'DB 10/25/2020 17:20:22' prior: 50870023!
move: command 

	command do: [:aCommand | 

	aCommand = 'f' ifTrue: [
		currentCardinalDirection = #N ifTrue: [currentPosition := currentPosition + (0@1)].
		currentCardinalDirection = #E ifTrue: [currentPosition := currentPosition + (1@0)].
		currentCardinalDirection = #S ifTrue: [currentPosition :=  currentPosition - (0@1) ].
		currentCardinalDirection = #W ifTrue: [currentPosition :=  currentPosition - (1@0)].
	].

	aCommand = 'b' ifTrue: [
		currentCardinalDirection = #N ifTrue: [currentPosition := currentPosition - (0@1)].
		currentCardinalDirection = #E ifTrue: [currentPosition := currentPosition - (1@0)].
		currentCardinalDirection = #S ifTrue: [currentPosition := currentPosition + (0@1)].
		currentCardinalDirection = #W ifTrue: [currentPosition := currentPosition+ (1@0)].
	].
	
	aCommand  = 'l' ifTrue: [
		currentCardinalDirection = #N ifTrue:  [currentCardinalDirection := #W] ifFalse: [
			currentCardinalDirection = #E ifTrue: [currentCardinalDirection := #N] ifFalse: [
				currentCardinalDirection = #S ifTrue: [currentCardinalDirection := #E] ifFalse: [
					currentCardinalDirection = #W ifTrue: [currentCardinalDirection := #S].
				]
			]
		]
	].
	
	aCommand  = 'r' ifTrue: [
		currentCardinalDirection = #N ifTrue: [currentCardinalDirection := #E] ifFalse: [
			currentCardinalDirection = #E ifTrue: [currentCardinalDirection := #S] ifFalse: [
					currentCardinalDirection = #S ifTrue: [currentCardinalDirection := #W] ifFalse: [
						currentCardinalDirection = #W ifTrue: [currentCardinalDirection := #N]
					]
				]
			] 
		].
	]
	
! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'DB 10/25/2020 17:20:39' prior: 50870166!
move: commands 

	commands do: [:aCommand | 

	aCommand = 'f' ifTrue: [
		currentCardinalDirection = #N ifTrue: [currentPosition := currentPosition + (0@1)].
		currentCardinalDirection = #E ifTrue: [currentPosition := currentPosition + (1@0)].
		currentCardinalDirection = #S ifTrue: [currentPosition :=  currentPosition - (0@1) ].
		currentCardinalDirection = #W ifTrue: [currentPosition :=  currentPosition - (1@0)].
	].

	aCommand = 'b' ifTrue: [
		currentCardinalDirection = #N ifTrue: [currentPosition := currentPosition - (0@1)].
		currentCardinalDirection = #E ifTrue: [currentPosition := currentPosition - (1@0)].
		currentCardinalDirection = #S ifTrue: [currentPosition := currentPosition + (0@1)].
		currentCardinalDirection = #W ifTrue: [currentPosition := currentPosition+ (1@0)].
	].
	
	aCommand  = 'l' ifTrue: [
		currentCardinalDirection = #N ifTrue:  [currentCardinalDirection := #W] ifFalse: [
			currentCardinalDirection = #E ifTrue: [currentCardinalDirection := #N] ifFalse: [
				currentCardinalDirection = #S ifTrue: [currentCardinalDirection := #E] ifFalse: [
					currentCardinalDirection = #W ifTrue: [currentCardinalDirection := #S].
				]
			]
		]
	].
	
	aCommand  = 'r' ifTrue: [
		currentCardinalDirection = #N ifTrue: [currentCardinalDirection := #E] ifFalse: [
			currentCardinalDirection = #E ifTrue: [currentCardinalDirection := #S] ifFalse: [
					currentCardinalDirection = #S ifTrue: [currentCardinalDirection := #W] ifFalse: [
						currentCardinalDirection = #W ifTrue: [currentCardinalDirection := #N]
					]
				]
			] 
		].
	]
	
! !

!testRun: #MarsRoverTest #test18MultipleMixedCommandsWhenPointingNorth stamp: 'DB 10/25/2020 17:20:49'!
FAILURE!

marsRover!
!MarsRover methodsFor: 'as yet unclassified' stamp: 'DB 10/25/2020 17:23:12' prior: 50870219!
move: commands 

	commands do: [:aCommand | 

	aCommand = $f ifTrue: [
		currentCardinalDirection = #N ifTrue: [currentPosition := currentPosition + (0@1)].
		currentCardinalDirection = #E ifTrue: [currentPosition := currentPosition + (1@0)].
		currentCardinalDirection = #S ifTrue: [currentPosition :=  currentPosition - (0@1) ].
		currentCardinalDirection = #W ifTrue: [currentPosition :=  currentPosition - (1@0)].
	].

	aCommand = $b ifTrue: [
		currentCardinalDirection = #N ifTrue: [currentPosition := currentPosition - (0@1)].
		currentCardinalDirection = #E ifTrue: [currentPosition := currentPosition - (1@0)].
		currentCardinalDirection = #S ifTrue: [currentPosition := currentPosition + (0@1)].
		currentCardinalDirection = #W ifTrue: [currentPosition := currentPosition+ (1@0)].
	].
	
	aCommand  = $l ifTrue: [
		currentCardinalDirection = #N ifTrue:  [currentCardinalDirection := #W] ifFalse: [
			currentCardinalDirection = #E ifTrue: [currentCardinalDirection := #N] ifFalse: [
				currentCardinalDirection = #S ifTrue: [currentCardinalDirection := #E] ifFalse: [
					currentCardinalDirection = #W ifTrue: [currentCardinalDirection := #S].
				]
			]
		]
	].
	
	aCommand  = $r ifTrue: [
		currentCardinalDirection = #N ifTrue: [currentCardinalDirection := #E] ifFalse: [
			currentCardinalDirection = #E ifTrue: [currentCardinalDirection := #S] ifFalse: [
					currentCardinalDirection = #S ifTrue: [currentCardinalDirection := #W] ifFalse: [
						currentCardinalDirection = #W ifTrue: [currentCardinalDirection := #N]
					]
				]
			] 
		].
	]
	
! !

!testRun: #MarsRoverTest #test18MultipleMixedCommandsWhenPointingNorth stamp: 'DB 10/25/2020 17:23:14'!
PASSED!

!testRun: #MarsRoverTest #test01ForwardWhenPointingNorth stamp: 'DB 10/25/2020 17:23:18'!
PASSED!

!testRun: #MarsRoverTest #test02BackwardWhenPointingNorth stamp: 'DB 10/25/2020 17:23:18'!
PASSED!

!testRun: #MarsRoverTest #test03TuringLeftWhenPointingNorth stamp: 'DB 10/25/2020 17:23:18'!
PASSED!

!testRun: #MarsRoverTest #test04TurningRightWhenPointingNorth stamp: 'DB 10/25/2020 17:23:18'!
PASSED!

!testRun: #MarsRoverTest #test05ForwardWhenPointingEast stamp: 'DB 10/25/2020 17:23:18'!
PASSED!

!testRun: #MarsRoverTest #test06ForwardWhenPointingSouth stamp: 'DB 10/25/2020 17:23:18'!
PASSED!

!testRun: #MarsRoverTest #test07ForwardWhenPointingWest stamp: 'DB 10/25/2020 17:23:18'!
PASSED!

!testRun: #MarsRoverTest #test08BackwardWhenPointingEast stamp: 'DB 10/25/2020 17:23:18'!
PASSED!

!testRun: #MarsRoverTest #test09BackwardWhenPointingSouth stamp: 'DB 10/25/2020 17:23:18'!
PASSED!

!testRun: #MarsRoverTest #test10BackwardWhenPointingWest stamp: 'DB 10/25/2020 17:23:18'!
PASSED!

!testRun: #MarsRoverTest #test11TuringLeftWhenPointingEast stamp: 'DB 10/25/2020 17:23:18'!
PASSED!

!testRun: #MarsRoverTest #test12TuringLeftWhenPointingSouth stamp: 'DB 10/25/2020 17:23:18'!
PASSED!

!testRun: #MarsRoverTest #test13TuringLeftWhenPointingWest stamp: 'DB 10/25/2020 17:23:18'!
PASSED!

!testRun: #MarsRoverTest #test14TurningRightWhenPointingEast stamp: 'DB 10/25/2020 17:23:18'!
PASSED!

!testRun: #MarsRoverTest #test15TurningRightWhenPointingSouth stamp: 'DB 10/25/2020 17:23:18'!
PASSED!

!testRun: #MarsRoverTest #test16TurningRightWhenPointingWest stamp: 'DB 10/25/2020 17:23:18'!
PASSED!

!testRun: #MarsRoverTest #test17MultipleCommandsWhenPointingNorth stamp: 'DB 10/25/2020 17:23:18'!
PASSED!

!testRun: #MarsRoverTest #test18MultipleCommandsWhenPointingNorth stamp: 'DB 10/25/2020 17:23:18'!
PASSED!

!testRun: #MarsRoverTest #test18MultipleMixedCommandsWhenPointingNorth stamp: 'DB 10/25/2020 17:23:18'!
PASSED!

!methodRemoval: MarsRoverTest #test18MultipleCommandsWhenPointingNorth stamp: 'DB 10/25/2020 17:23:31'!
test18MultipleCommandsWhenPointingNorth
	
	| marsRover |
	marsRover := MarsRover at: 1@1 pointingTowards: #N.
	
	marsRover move: 'fff'.
	
	self assert: ((marsRover currentPosition ) = (1@4)).
	self assert: ((marsRover currentDirection) = #N).!

!testRun: #MarsRoverTest #test17MultipleCommandsWhenPointingNorth stamp: 'DB 10/25/2020 17:23:37'!
PASSED!

!testRun: #MarsRoverTest #test18MultipleMixedCommandsWhenPointingNorth stamp: 'DB 10/25/2020 17:23:42'!
PASSED!

!testRun: #MarsRoverTest #test01ForwardWhenPointingNorth stamp: 'DB 10/25/2020 17:23:58'!
PASSED!

!testRun: #MarsRoverTest #test02BackwardWhenPointingNorth stamp: 'DB 10/25/2020 17:23:58'!
PASSED!

!testRun: #MarsRoverTest #test03TuringLeftWhenPointingNorth stamp: 'DB 10/25/2020 17:23:58'!
PASSED!

!testRun: #MarsRoverTest #test04TurningRightWhenPointingNorth stamp: 'DB 10/25/2020 17:23:58'!
PASSED!

!testRun: #MarsRoverTest #test05ForwardWhenPointingEast stamp: 'DB 10/25/2020 17:23:58'!
PASSED!

!testRun: #MarsRoverTest #test06ForwardWhenPointingSouth stamp: 'DB 10/25/2020 17:23:58'!
PASSED!

!testRun: #MarsRoverTest #test07ForwardWhenPointingWest stamp: 'DB 10/25/2020 17:23:58'!
PASSED!

!testRun: #MarsRoverTest #test08BackwardWhenPointingEast stamp: 'DB 10/25/2020 17:23:58'!
PASSED!

!testRun: #MarsRoverTest #test09BackwardWhenPointingSouth stamp: 'DB 10/25/2020 17:23:58'!
PASSED!

!testRun: #MarsRoverTest #test10BackwardWhenPointingWest stamp: 'DB 10/25/2020 17:23:58'!
PASSED!

!testRun: #MarsRoverTest #test11TuringLeftWhenPointingEast stamp: 'DB 10/25/2020 17:23:58'!
PASSED!

!testRun: #MarsRoverTest #test12TuringLeftWhenPointingSouth stamp: 'DB 10/25/2020 17:23:58'!
PASSED!

!testRun: #MarsRoverTest #test13TuringLeftWhenPointingWest stamp: 'DB 10/25/2020 17:23:58'!
PASSED!

!testRun: #MarsRoverTest #test14TurningRightWhenPointingEast stamp: 'DB 10/25/2020 17:23:58'!
PASSED!

!testRun: #MarsRoverTest #test15TurningRightWhenPointingSouth stamp: 'DB 10/25/2020 17:23:58'!
PASSED!

!testRun: #MarsRoverTest #test16TurningRightWhenPointingWest stamp: 'DB 10/25/2020 17:23:58'!
PASSED!

!testRun: #MarsRoverTest #test17MultipleCommandsWhenPointingNorth stamp: 'DB 10/25/2020 17:23:58'!
PASSED!

!testRun: #MarsRoverTest #test18MultipleMixedCommandsWhenPointingNorth stamp: 'DB 10/25/2020 17:23:58'!
PASSED!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'DB 10/25/2020 17:27:03'!
test19
	
	| marsRover |
	marsRover := MarsRover at: 1@1 pointingTowards: #N.
	
	marsRover move: 'frffr=?xxyffr'.
	
	self assert: ((marsRover currentPosition ) = (3@2)).
	self assert: ((marsRover currentDirection) = #S).! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'DB 10/25/2020 17:29:04'!
test19DoesntContinueExecutingAfterAnInvalidCommand
	
	| marsRover |
	marsRover := MarsRover at: 1@1 pointingTowards: #N.
	
	marsRover move: 'frffr=?xxyffr'.
	
	self assert: ((marsRover currentPosition ) = (3@2)).
	self assert: ((marsRover currentDirection) = #S).! !

!methodRemoval: MarsRoverTest #test19 stamp: 'DB 10/25/2020 17:29:08'!
test19
	
	| marsRover |
	marsRover := MarsRover at: 1@1 pointingTowards: #N.
	
	marsRover move: 'frffr=?xxyffr'.
	
	self assert: ((marsRover currentPosition ) = (3@2)).
	self assert: ((marsRover currentDirection) = #S).!

!testRun: #MarsRoverTest #test01ForwardWhenPointingNorth stamp: 'DB 10/25/2020 17:29:14'!
PASSED!

!testRun: #MarsRoverTest #test02BackwardWhenPointingNorth stamp: 'DB 10/25/2020 17:29:14'!
PASSED!

!testRun: #MarsRoverTest #test03TuringLeftWhenPointingNorth stamp: 'DB 10/25/2020 17:29:14'!
PASSED!

!testRun: #MarsRoverTest #test04TurningRightWhenPointingNorth stamp: 'DB 10/25/2020 17:29:14'!
PASSED!

!testRun: #MarsRoverTest #test05ForwardWhenPointingEast stamp: 'DB 10/25/2020 17:29:14'!
PASSED!

!testRun: #MarsRoverTest #test06ForwardWhenPointingSouth stamp: 'DB 10/25/2020 17:29:14'!
PASSED!

!testRun: #MarsRoverTest #test07ForwardWhenPointingWest stamp: 'DB 10/25/2020 17:29:14'!
PASSED!

!testRun: #MarsRoverTest #test08BackwardWhenPointingEast stamp: 'DB 10/25/2020 17:29:14'!
PASSED!

!testRun: #MarsRoverTest #test09BackwardWhenPointingSouth stamp: 'DB 10/25/2020 17:29:14'!
PASSED!

!testRun: #MarsRoverTest #test10BackwardWhenPointingWest stamp: 'DB 10/25/2020 17:29:14'!
PASSED!

!testRun: #MarsRoverTest #test11TuringLeftWhenPointingEast stamp: 'DB 10/25/2020 17:29:14'!
PASSED!

!testRun: #MarsRoverTest #test12TuringLeftWhenPointingSouth stamp: 'DB 10/25/2020 17:29:14'!
PASSED!

!testRun: #MarsRoverTest #test13TuringLeftWhenPointingWest stamp: 'DB 10/25/2020 17:29:14'!
PASSED!

!testRun: #MarsRoverTest #test14TurningRightWhenPointingEast stamp: 'DB 10/25/2020 17:29:14'!
PASSED!

!testRun: #MarsRoverTest #test15TurningRightWhenPointingSouth stamp: 'DB 10/25/2020 17:29:14'!
PASSED!

!testRun: #MarsRoverTest #test16TurningRightWhenPointingWest stamp: 'DB 10/25/2020 17:29:14'!
PASSED!

!testRun: #MarsRoverTest #test17MultipleCommandsWhenPointingNorth stamp: 'DB 10/25/2020 17:29:14'!
PASSED!

!testRun: #MarsRoverTest #test18MultipleMixedCommandsWhenPointingNorth stamp: 'DB 10/25/2020 17:29:14'!
PASSED!

!testRun: #MarsRoverTest #test19DoesntContinueExecutingAfterAnInvalidCommand stamp: 'DB 10/25/2020 17:29:14'!
FAILURE!

!testRun: #MarsRoverTest #test19DoesntContinueExecutingAfterAnInvalidCommand stamp: 'DB 10/25/2020 17:29:14'!
FAILURE!

!testRun: #MarsRoverTest #test01ForwardWhenPointingNorth stamp: 'DB 10/25/2020 17:31:08'!
PASSED!

!testRun: #MarsRoverTest #test02BackwardWhenPointingNorth stamp: 'DB 10/25/2020 17:31:08'!
PASSED!

!testRun: #MarsRoverTest #test03TuringLeftWhenPointingNorth stamp: 'DB 10/25/2020 17:31:08'!
PASSED!

!testRun: #MarsRoverTest #test04TurningRightWhenPointingNorth stamp: 'DB 10/25/2020 17:31:08'!
PASSED!

!testRun: #MarsRoverTest #test05ForwardWhenPointingEast stamp: 'DB 10/25/2020 17:31:08'!
PASSED!

!testRun: #MarsRoverTest #test06ForwardWhenPointingSouth stamp: 'DB 10/25/2020 17:31:08'!
PASSED!

!testRun: #MarsRoverTest #test07ForwardWhenPointingWest stamp: 'DB 10/25/2020 17:31:08'!
PASSED!

!testRun: #MarsRoverTest #test08BackwardWhenPointingEast stamp: 'DB 10/25/2020 17:31:08'!
PASSED!

!testRun: #MarsRoverTest #test09BackwardWhenPointingSouth stamp: 'DB 10/25/2020 17:31:08'!
PASSED!

!testRun: #MarsRoverTest #test10BackwardWhenPointingWest stamp: 'DB 10/25/2020 17:31:08'!
PASSED!

!testRun: #MarsRoverTest #test11TuringLeftWhenPointingEast stamp: 'DB 10/25/2020 17:31:08'!
PASSED!

!testRun: #MarsRoverTest #test12TuringLeftWhenPointingSouth stamp: 'DB 10/25/2020 17:31:08'!
PASSED!

!testRun: #MarsRoverTest #test13TuringLeftWhenPointingWest stamp: 'DB 10/25/2020 17:31:08'!
PASSED!

!testRun: #MarsRoverTest #test14TurningRightWhenPointingEast stamp: 'DB 10/25/2020 17:31:08'!
PASSED!

!testRun: #MarsRoverTest #test15TurningRightWhenPointingSouth stamp: 'DB 10/25/2020 17:31:08'!
PASSED!

!testRun: #MarsRoverTest #test16TurningRightWhenPointingWest stamp: 'DB 10/25/2020 17:31:08'!
PASSED!

!testRun: #MarsRoverTest #test17MultipleCommandsWhenPointingNorth stamp: 'DB 10/25/2020 17:31:08'!
PASSED!

!testRun: #MarsRoverTest #test18MultipleMixedCommandsWhenPointingNorth stamp: 'DB 10/25/2020 17:31:08'!
PASSED!

!testRun: #MarsRoverTest #test19DoesntContinueExecutingAfterAnInvalidCommand stamp: 'DB 10/25/2020 17:31:08'!
FAILURE!

!testRun: #MarsRoverTest #test19DoesntContinueExecutingAfterAnInvalidCommand stamp: 'DB 10/25/2020 17:31:08'!
FAILURE!
!MarsRover methodsFor: 'as yet unclassified' stamp: 'DB 10/25/2020 17:32:49' prior: 50870276!
move: commands 

	commands do: [:aCommand | 

	aCommand = $f ifTrue: [
		currentCardinalDirection = #N ifTrue: [currentPosition := currentPosition + (0@1)].
		currentCardinalDirection = #E ifTrue: [currentPosition := currentPosition + (1@0)].
		currentCardinalDirection = #S ifTrue: [currentPosition :=  currentPosition - (0@1) ].
		currentCardinalDirection = #W ifTrue: [currentPosition :=  currentPosition - (1@0)].
	].

	aCommand = $b ifTrue: [
		currentCardinalDirection = #N ifTrue: [currentPosition := currentPosition - (0@1)].
		currentCardinalDirection = #E ifTrue: [currentPosition := currentPosition - (1@0)].
		currentCardinalDirection = #S ifTrue: [currentPosition := currentPosition + (0@1)].
		currentCardinalDirection = #W ifTrue: [currentPosition := currentPosition+ (1@0)].
	].
	
	aCommand  = $l ifTrue: [
		currentCardinalDirection = #N ifTrue:  [currentCardinalDirection := #W] ifFalse: [
			currentCardinalDirection = #E ifTrue: [currentCardinalDirection := #N] ifFalse: [
				currentCardinalDirection = #S ifTrue: [currentCardinalDirection := #E] ifFalse: [
					currentCardinalDirection = #W ifTrue: [currentCardinalDirection := #S].
				]
			]
		]
	].
	
	aCommand  = $r ifTrue: [
		currentCardinalDirection = #N ifTrue: [currentCardinalDirection := #E] ifFalse: [
			currentCardinalDirection = #E ifTrue: [currentCardinalDirection := #S] ifFalse: [
					currentCardinalDirection = #S ifTrue: [currentCardinalDirection := #W] ifFalse: [
						currentCardinalDirection = #W ifTrue: [currentCardinalDirection := #N]
					]
				]
			] 
		].
	]
	
! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'DB 10/25/2020 17:33:40'!
moveForward: aCommand
		currentCardinalDirection = #N ifTrue: [currentPosition := currentPosition + (0@1)].
		currentCardinalDirection = #E ifTrue: [currentPosition := currentPosition + (1@0)].
		currentCardinalDirection = #S ifTrue: [currentPosition :=  currentPosition - (0@1) ].
		currentCardinalDirection = #W ifTrue: [currentPosition :=  currentPosition - (1@0)].
	! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'DB 10/25/2020 17:34:01' prior: 50870627!
move: commands 

	commands do: [:aCommand | 

	aCommand = $f ifTrue: [
		self moveForward: aCommand
	].

	aCommand = $b ifTrue: [
		currentCardinalDirection = #N ifTrue: [currentPosition := currentPosition - (0@1)].
		currentCardinalDirection = #E ifTrue: [currentPosition := currentPosition - (1@0)].
		currentCardinalDirection = #S ifTrue: [currentPosition := currentPosition + (0@1)].
		currentCardinalDirection = #W ifTrue: [currentPosition := currentPosition+ (1@0)].
	].
	
	aCommand  = $l ifTrue: [
		currentCardinalDirection = #N ifTrue:  [currentCardinalDirection := #W] ifFalse: [
			currentCardinalDirection = #E ifTrue: [currentCardinalDirection := #N] ifFalse: [
				currentCardinalDirection = #S ifTrue: [currentCardinalDirection := #E] ifFalse: [
					currentCardinalDirection = #W ifTrue: [currentCardinalDirection := #S].
				]
			]
		]
	].
	
	aCommand  = $r ifTrue: [
		currentCardinalDirection = #N ifTrue: [currentCardinalDirection := #E] ifFalse: [
			currentCardinalDirection = #E ifTrue: [currentCardinalDirection := #S] ifFalse: [
					currentCardinalDirection = #S ifTrue: [currentCardinalDirection := #W] ifFalse: [
						currentCardinalDirection = #W ifTrue: [currentCardinalDirection := #N]
					]
				]
			] 
		].
	]
	
! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'DB 10/25/2020 17:34:26'!
moveBackward: aCommand 
		currentCardinalDirection = #N ifTrue: [currentPosition := currentPosition - (0@1)].
		currentCardinalDirection = #E ifTrue: [currentPosition := currentPosition - (1@0)].
		currentCardinalDirection = #S ifTrue: [currentPosition := currentPosition + (0@1)].
		currentCardinalDirection = #W ifTrue: [currentPosition := currentPosition+ (1@0)].
	
	
! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'DB 10/25/2020 17:34:41' prior: 50870694!
move: commands 

	commands do: [:aCommand | 

	aCommand = $f ifTrue: [
		self moveForward: aCommand
	].

	aCommand = $b ifTrue: [
		self moveBackward: aCommand
	].
	
	aCommand  = $l ifTrue: [
		currentCardinalDirection = #N ifTrue:  [currentCardinalDirection := #W] ifFalse: [
			currentCardinalDirection = #E ifTrue: [currentCardinalDirection := #N] ifFalse: [
				currentCardinalDirection = #S ifTrue: [currentCardinalDirection := #E] ifFalse: [
					currentCardinalDirection = #W ifTrue: [currentCardinalDirection := #S].
				]
			]
		]
	].
	
	aCommand  = $r ifTrue: [
		currentCardinalDirection = #N ifTrue: [currentCardinalDirection := #E] ifFalse: [
			currentCardinalDirection = #E ifTrue: [currentCardinalDirection := #S] ifFalse: [
					currentCardinalDirection = #S ifTrue: [currentCardinalDirection := #W] ifFalse: [
						currentCardinalDirection = #W ifTrue: [currentCardinalDirection := #N]
					]
				]
			] 
		].
	]
	
! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'DB 10/25/2020 17:36:00'!
turnRight 
		currentCardinalDirection = #N ifTrue: [currentCardinalDirection := #E] ifFalse: [
			currentCardinalDirection = #E ifTrue: [currentCardinalDirection := #S] ifFalse: [
					currentCardinalDirection = #S ifTrue: [currentCardinalDirection := #W] ifFalse: [
						currentCardinalDirection = #W ifTrue: [currentCardinalDirection := #N]
					]
				]
			] 
	
! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'DB 10/25/2020 17:36:25'!
moveForward
		currentCardinalDirection = #N ifTrue: [currentPosition := currentPosition + (0@1)].
		currentCardinalDirection = #E ifTrue: [currentPosition := currentPosition + (1@0)].
		currentCardinalDirection = #S ifTrue: [currentPosition :=  currentPosition - (0@1) ].
		currentCardinalDirection = #W ifTrue: [currentPosition :=  currentPosition - (1@0)].
	! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'DB 10/25/2020 17:36:25' prior: 50870751!
move: commands 

	commands do: [:aCommand | 

	aCommand = $f ifTrue: [
		self moveForward].

	aCommand = $b ifTrue: [
		self moveBackward: aCommand
	].
	
	aCommand  = $l ifTrue: [
		currentCardinalDirection = #N ifTrue:  [currentCardinalDirection := #W] ifFalse: [
			currentCardinalDirection = #E ifTrue: [currentCardinalDirection := #N] ifFalse: [
				currentCardinalDirection = #S ifTrue: [currentCardinalDirection := #E] ifFalse: [
					currentCardinalDirection = #W ifTrue: [currentCardinalDirection := #S].
				]
			]
		]
	].
	
	aCommand  = $r ifTrue: [
		currentCardinalDirection = #N ifTrue: [currentCardinalDirection := #E] ifFalse: [
			currentCardinalDirection = #E ifTrue: [currentCardinalDirection := #S] ifFalse: [
					currentCardinalDirection = #S ifTrue: [currentCardinalDirection := #W] ifFalse: [
						currentCardinalDirection = #W ifTrue: [currentCardinalDirection := #N]
					]
				]
			] 
		].
	]
	
! !

!methodRemoval: MarsRover #moveForward: stamp: 'DB 10/25/2020 17:36:25'!
moveForward: aCommand
		currentCardinalDirection = #N ifTrue: [currentPosition := currentPosition + (0@1)].
		currentCardinalDirection = #E ifTrue: [currentPosition := currentPosition + (1@0)].
		currentCardinalDirection = #S ifTrue: [currentPosition :=  currentPosition - (0@1) ].
		currentCardinalDirection = #W ifTrue: [currentPosition :=  currentPosition - (1@0)].
	!
!MarsRover methodsFor: 'as yet unclassified' stamp: 'DB 10/25/2020 17:36:53'!
moveBackward 
		currentCardinalDirection = #N ifTrue: [currentPosition := currentPosition - (0@1)].
		currentCardinalDirection = #E ifTrue: [currentPosition := currentPosition - (1@0)].
		currentCardinalDirection = #S ifTrue: [currentPosition := currentPosition + (0@1)].
		currentCardinalDirection = #W ifTrue: [currentPosition := currentPosition+ (1@0)].
	
	
! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'DB 10/25/2020 17:36:53' prior: 50870812!
move: commands 

	commands do: [:aCommand | 

	aCommand = $f ifTrue: [
		self moveForward].

	aCommand = $b ifTrue: [
		self moveBackward].
	
	aCommand  = $l ifTrue: [
		currentCardinalDirection = #N ifTrue:  [currentCardinalDirection := #W] ifFalse: [
			currentCardinalDirection = #E ifTrue: [currentCardinalDirection := #N] ifFalse: [
				currentCardinalDirection = #S ifTrue: [currentCardinalDirection := #E] ifFalse: [
					currentCardinalDirection = #W ifTrue: [currentCardinalDirection := #S].
				]
			]
		]
	].
	
	aCommand  = $r ifTrue: [
		currentCardinalDirection = #N ifTrue: [currentCardinalDirection := #E] ifFalse: [
			currentCardinalDirection = #E ifTrue: [currentCardinalDirection := #S] ifFalse: [
					currentCardinalDirection = #S ifTrue: [currentCardinalDirection := #W] ifFalse: [
						currentCardinalDirection = #W ifTrue: [currentCardinalDirection := #N]
					]
				]
			] 
		].
	]
	
! !

!methodRemoval: MarsRover #moveBackward: stamp: 'DB 10/25/2020 17:36:53'!
moveBackward: aCommand 
		currentCardinalDirection = #N ifTrue: [currentPosition := currentPosition - (0@1)].
		currentCardinalDirection = #E ifTrue: [currentPosition := currentPosition - (1@0)].
		currentCardinalDirection = #S ifTrue: [currentPosition := currentPosition + (0@1)].
		currentCardinalDirection = #W ifTrue: [currentPosition := currentPosition+ (1@0)].
	
	
!
!MarsRover methodsFor: 'as yet unclassified' stamp: 'DB 10/25/2020 17:37:19' prior: 50870873!
move: commands 

	commands do: [:aCommand | 

	aCommand = $f ifTrue: [
		self moveForward].

	aCommand = $b ifTrue: [
		self moveBackward].
	
	aCommand  = $l ifTrue: [
		currentCardinalDirection = #N ifTrue:  [currentCardinalDirection := #W] ifFalse: [
			currentCardinalDirection = #E ifTrue: [currentCardinalDirection := #N] ifFalse: [
				currentCardinalDirection = #S ifTrue: [currentCardinalDirection := #E] ifFalse: [
					currentCardinalDirection = #W ifTrue: [currentCardinalDirection := #S].
				]
			]
		]
	].
	
	aCommand  = $r ifTrue: [
		self turnRight.
	]
]
	! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'DB 10/25/2020 17:37:44'!
turnLeft  
		currentCardinalDirection = #N ifTrue:  [currentCardinalDirection := #W] ifFalse: [
			currentCardinalDirection = #E ifTrue: [currentCardinalDirection := #N] ifFalse: [
				currentCardinalDirection = #S ifTrue: [currentCardinalDirection := #E] ifFalse: [
					currentCardinalDirection = #W ifTrue: [currentCardinalDirection := #S].
				]
			]
		]! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'DB 10/25/2020 17:38:00' prior: 50870919!
move: commands 

	commands do: [:aCommand | 

	aCommand = $f ifTrue: [
		self moveForward].

	aCommand = $b ifTrue: [
		self moveBackward].
	
	aCommand  = $l ifTrue: [
		self turnLeft.
	].
	
	aCommand  = $r ifTrue: [
		self turnRight.
	]
]
	! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'DB 10/25/2020 17:38:49' prior: 50870955!
move: commands 

	commands do: [:aCommand | 
				aCommand = $f ifTrue: [self moveForward].	
				aCommand = $b ifTrue: [self moveBackward].
				aCommand = $l ifTrue: [self turnLeft].
				aCommand = $r ifTrue: [self turnRight]
	]
	! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'DB 10/25/2020 17:38:52' prior: 50870966!
move: commands 

	commands do: [:aCommand | 
				aCommand = $f ifTrue: [self moveForward].	
				aCommand = $b ifTrue: [self moveBackward].
				aCommand = $l ifTrue: [self turnLeft].
				aCommand = $r ifTrue: [self turnRight].
	]
	! !

!testRun: #MarsRoverTest #test01ForwardWhenPointingNorth stamp: 'DB 10/25/2020 17:38:56'!
PASSED!

!testRun: #MarsRoverTest #test02BackwardWhenPointingNorth stamp: 'DB 10/25/2020 17:38:56'!
PASSED!

!testRun: #MarsRoverTest #test03TuringLeftWhenPointingNorth stamp: 'DB 10/25/2020 17:38:56'!
PASSED!

!testRun: #MarsRoverTest #test04TurningRightWhenPointingNorth stamp: 'DB 10/25/2020 17:38:56'!
PASSED!

!testRun: #MarsRoverTest #test05ForwardWhenPointingEast stamp: 'DB 10/25/2020 17:38:56'!
PASSED!

!testRun: #MarsRoverTest #test06ForwardWhenPointingSouth stamp: 'DB 10/25/2020 17:38:56'!
PASSED!

!testRun: #MarsRoverTest #test07ForwardWhenPointingWest stamp: 'DB 10/25/2020 17:38:56'!
PASSED!

!testRun: #MarsRoverTest #test08BackwardWhenPointingEast stamp: 'DB 10/25/2020 17:38:56'!
PASSED!

!testRun: #MarsRoverTest #test09BackwardWhenPointingSouth stamp: 'DB 10/25/2020 17:38:56'!
PASSED!

!testRun: #MarsRoverTest #test10BackwardWhenPointingWest stamp: 'DB 10/25/2020 17:38:56'!
PASSED!

!testRun: #MarsRoverTest #test11TuringLeftWhenPointingEast stamp: 'DB 10/25/2020 17:38:56'!
PASSED!

!testRun: #MarsRoverTest #test12TuringLeftWhenPointingSouth stamp: 'DB 10/25/2020 17:38:56'!
PASSED!

!testRun: #MarsRoverTest #test13TuringLeftWhenPointingWest stamp: 'DB 10/25/2020 17:38:56'!
PASSED!

!testRun: #MarsRoverTest #test14TurningRightWhenPointingEast stamp: 'DB 10/25/2020 17:38:56'!
PASSED!

!testRun: #MarsRoverTest #test15TurningRightWhenPointingSouth stamp: 'DB 10/25/2020 17:38:56'!
PASSED!

!testRun: #MarsRoverTest #test16TurningRightWhenPointingWest stamp: 'DB 10/25/2020 17:38:56'!
PASSED!

!testRun: #MarsRoverTest #test17MultipleCommandsWhenPointingNorth stamp: 'DB 10/25/2020 17:38:56'!
PASSED!

!testRun: #MarsRoverTest #test18MultipleMixedCommandsWhenPointingNorth stamp: 'DB 10/25/2020 17:38:56'!
PASSED!

!testRun: #MarsRoverTest #test19DoesntContinueExecutingAfterAnInvalidCommand stamp: 'DB 10/25/2020 17:38:56'!
FAILURE!

!testRun: #MarsRoverTest #test19DoesntContinueExecutingAfterAnInvalidCommand stamp: 'DB 10/25/2020 17:38:56'!
FAILURE!

!testRun: #MarsRoverTest #test19DoesntContinueExecutingAfterAnInvalidCommand stamp: 'DB 10/25/2020 17:40:15'!
FAILURE!
!MarsRover methodsFor: 'as yet unclassified' stamp: 'DB 10/25/2020 17:57:46'!
isValid: aCommand 

	^ (aCommand = $f) or: (aCommand = $b) or: (aCommand = $l) or: (aCommand = $r).
	! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'DB 10/25/2020 17:59:01' prior: 50870977!
move: commands 

	commands do: [:aCommand | 
		
		(self isValid: aCommand) ifFalse: [^'2'].
		
		aCommand = $f ifTrue: [self moveForward].	
		aCommand = $b ifTrue: [self moveBackward].
		aCommand = $l ifTrue: [self turnLeft].
		aCommand = $r ifTrue: [self turnRight].
	]
	! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'DB 10/25/2020 17:59:11' prior: 50871063!
move: commands 

	commands do: [:aCommand | 
		
		(self isValid: aCommand) ifFalse: [^'Error'].
		
		aCommand = $f ifTrue: [self moveForward].	
		aCommand = $b ifTrue: [self moveBackward].
		aCommand = $l ifTrue: [self turnLeft].
		aCommand = $r ifTrue: [self turnRight].
	]
	! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'DB 10/25/2020 17:59:23' prior: 50871075!
move: commands 
	commands do: [:aCommand | 
		(self isValid: aCommand) ifFalse: [^'Error'].
		
		aCommand = $f ifTrue: [self moveForward].	
		aCommand = $b ifTrue: [self moveBackward].
		aCommand = $l ifTrue: [self turnLeft].
		aCommand = $r ifTrue: [self turnRight].
	]
	! !

!testRun: #MarsRoverTest #test01ForwardWhenPointingNorth stamp: 'DB 10/25/2020 17:59:27'!
PASSED!

!testRun: #MarsRoverTest #test02BackwardWhenPointingNorth stamp: 'DB 10/25/2020 17:59:27'!
PASSED!

!testRun: #MarsRoverTest #test03TuringLeftWhenPointingNorth stamp: 'DB 10/25/2020 17:59:27'!
PASSED!

!testRun: #MarsRoverTest #test04TurningRightWhenPointingNorth stamp: 'DB 10/25/2020 17:59:27'!
PASSED!

!testRun: #MarsRoverTest #test05ForwardWhenPointingEast stamp: 'DB 10/25/2020 17:59:27'!
PASSED!

!testRun: #MarsRoverTest #test06ForwardWhenPointingSouth stamp: 'DB 10/25/2020 17:59:27'!
PASSED!

!testRun: #MarsRoverTest #test07ForwardWhenPointingWest stamp: 'DB 10/25/2020 17:59:27'!
PASSED!

!testRun: #MarsRoverTest #test08BackwardWhenPointingEast stamp: 'DB 10/25/2020 17:59:27'!
PASSED!

!testRun: #MarsRoverTest #test09BackwardWhenPointingSouth stamp: 'DB 10/25/2020 17:59:27'!
PASSED!

!testRun: #MarsRoverTest #test10BackwardWhenPointingWest stamp: 'DB 10/25/2020 17:59:27'!
PASSED!

!testRun: #MarsRoverTest #test11TuringLeftWhenPointingEast stamp: 'DB 10/25/2020 17:59:27'!
PASSED!

!testRun: #MarsRoverTest #test12TuringLeftWhenPointingSouth stamp: 'DB 10/25/2020 17:59:27'!
PASSED!

!testRun: #MarsRoverTest #test13TuringLeftWhenPointingWest stamp: 'DB 10/25/2020 17:59:27'!
PASSED!

!testRun: #MarsRoverTest #test14TurningRightWhenPointingEast stamp: 'DB 10/25/2020 17:59:27'!
PASSED!

!testRun: #MarsRoverTest #test15TurningRightWhenPointingSouth stamp: 'DB 10/25/2020 17:59:27'!
PASSED!

!testRun: #MarsRoverTest #test16TurningRightWhenPointingWest stamp: 'DB 10/25/2020 17:59:27'!
PASSED!

!testRun: #MarsRoverTest #test17MultipleCommandsWhenPointingNorth stamp: 'DB 10/25/2020 17:59:27'!
PASSED!

!testRun: #MarsRoverTest #test18MultipleMixedCommandsWhenPointingNorth stamp: 'DB 10/25/2020 17:59:27'!
PASSED!

!testRun: #MarsRoverTest #test19DoesntContinueExecutingAfterAnInvalidCommand stamp: 'DB 10/25/2020 17:59:27'!
PASSED!

----SNAPSHOT----(25 October 2020 18:01:42) CuisUniversity-4384.image priorSource: 17225644!
!MarsRover methodsFor: 'as yet unclassified' stamp: 'DB 10/25/2020 18:03:34'!
moveBackwardWhenDirectionIsNorth
		currentPosition := currentPosition - (0@1)
	
	
! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'DB 10/25/2020 18:04:11'!
moveForwardWhenDirectionIsEast
	
	currentPosition := currentPosition + (1@0).! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'DB 10/25/2020 18:04:47'!
moveBackwardWhenDirectionIsEast
		currentPosition := currentPosition - (1@0)
	
! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'DB 10/25/2020 18:05:13'!
moveBackwardWhenDirectionIsSouth
		currentPosition := currentPosition + (0@1)
	
! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'DB 10/25/2020 18:05:36'!
moveBackwardWhenDirectionIsWest
		currentPosition := currentPosition+ (1@0)
	
	
! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'DB 10/25/2020 18:05:56' prior: 50870858!
moveBackward 
		currentCardinalDirection = #N ifTrue: [currentPosition := currentPosition - (0@1)].
		currentCardinalDirection = #E ifTrue: [currentPosition := currentPosition - (1@0)].
		currentCardinalDirection = #S ifTrue: [currentPosition := currentPosition + (0@1)].
		currentCardinalDirection = #W ifTrue: [currentPosition := currentPosition+ (1@0)].
	
	
! !

Object subclass: #Command
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Mars Rover'!

!classDefinition: #Command category: 'Mars Rover' stamp: 'DB 10/25/2020 18:06:19'!
Object subclass: #Command
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Mars Rover'!

Command subclass: #NorthCommand
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Mars Rover'!

!classDefinition: #NorthCommand category: 'Mars Rover' stamp: 'DB 10/25/2020 18:06:25'!
Command subclass: #NorthCommand
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Mars Rover'!

Command subclass: #WestCommand
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Mars Rover'!

!classDefinition: #WestCommand category: 'Mars Rover' stamp: 'DB 10/25/2020 18:06:30'!
Command subclass: #WestCommand
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Mars Rover'!

Command subclass: #EastCommand
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Mars Rover'!

!classDefinition: #EastCommand category: 'Mars Rover' stamp: 'DB 10/25/2020 18:06:38'!
Command subclass: #EastCommand
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Mars Rover'!

Command subclass: #SouthCommand
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Mars Rover'!

!classDefinition: #SouthCommand category: 'Mars Rover' stamp: 'DB 10/25/2020 18:06:43'!
Command subclass: #SouthCommand
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Mars Rover'!
!Command methodsFor: 'nil' stamp: 'DB 10/25/2020 18:07:31'!
move: aMarsRover
	self subclassResponsibility ! !
!Command methodsFor: 'as yet unclassified' stamp: 'DB 10/25/2020 18:08:03'!
moveForward: aMarsRover
	self subclassResponsibility ! !
!Command methodsFor: 'as yet unclassified' stamp: 'DB 10/25/2020 18:08:10'!
moveBackward: aMarsRover
	self subclassResponsibility ! !
!Command methodsFor: 'as yet unclassified' stamp: 'DB 10/25/2020 18:08:17'!
turnLeft: aMarsRover
	self subclassResponsibility ! !
!Command methodsFor: 'as yet unclassified' stamp: 'DB 10/25/2020 18:08:23'!
turnRight: aMarsRover
	self subclassResponsibility ! !

!methodRemoval: Command #move: stamp: 'DB 10/25/2020 18:08:30'!
move: aMarsRover
	self subclassResponsibility !

!classDefinition: #MarsRover category: 'Mars Rover' stamp: 'DB 10/25/2020 18:12:34'!
Object subclass: #MarsRover
	instanceVariableNames: 'currentPosition currentCardinalDirection command'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Mars Rover'!
!MarsRover methodsFor: 'as yet unclassified' stamp: 'DB 10/25/2020 18:12:29' prior: 50871087!
move: commands 
	commands do: [:aCommand | 
		(self isValid: aCommand) ifFalse: [^'Error'].
		
		aCommand = $f ifTrue: [command moveForward: self].	
		aCommand = $b ifTrue: [command moveBackward: self].
		aCommand = $l ifTrue: [command turnLeft: self].
		aCommand = $r ifTrue: [command turnRight: self].
	]
	! !

!classRenamed: #Command as: #CardinalDirection stamp: 'DB 10/25/2020 18:13:29'!
Smalltalk renameClassNamed: #Command as: #CardinalDirection!
!Utilities class methodsFor: 'as yet unclassified' stamp: 'DB 10/25/2020 18:13:29' prior: 16940908!
garbageCollectAndReport
	"Do a garbage collection, and report results to the user."
	| cc reportString |
	reportString _ String streamContents: [ :aStream |
		aStream nextPutAll: Smalltalk bytesLeftString.
		Smalltalk
			at: #CardinalDirection
			ifPresent: [ :cmdClass |
				(cc _ cmdClass instanceCount) > 0 ifTrue: [
					aStream
						 newLine;
						 nextPutAll: '(note: there are ' , cc printString , ' undo record(s) present in your
system; purging them may free up more space.)' ]]].
	self inform: reportString! !

!classRenamed: #EastCommand as: #EastDirection stamp: 'DB 10/25/2020 18:13:59'!
Smalltalk renameClassNamed: #EastCommand as: #EastDirection!

!classRenamed: #NorthCommand as: #NorthDirection stamp: 'DB 10/25/2020 18:14:12'!
Smalltalk renameClassNamed: #NorthCommand as: #NorthDirection!

!classRenamed: #SouthCommand as: #SouthDirection stamp: 'DB 10/25/2020 18:14:25'!
Smalltalk renameClassNamed: #SouthCommand as: #SouthDirection!

!classRenamed: #WestCommand as: #WestDirection stamp: 'DB 10/25/2020 18:14:36'!
Smalltalk renameClassNamed: #WestCommand as: #WestDirection!

----SNAPSHOT----(25 October 2020 18:15:36) CuisUniversity-4384.image priorSource: 17264275!
!CardinalDirection class methodsFor: 'nil' stamp: 'DB 10/25/2020 18:17:20'!
for: aMarsRover

	^self new initializeWith: aMarsRover ! !

Object subclass: #CardinalDirection
	instanceVariableNames: 'marsRover'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Mars Rover'!

!classDefinition: #CardinalDirection category: 'Mars Rover' stamp: 'DB 10/25/2020 18:17:33'!
Object subclass: #CardinalDirection
	instanceVariableNames: 'marsRover'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Mars Rover'!
!CardinalDirection methodsFor: 'as yet unclassified' stamp: 'DB 10/25/2020 18:18:12'!
initializeWith: aMarsRover
	
	marsRover := aMarsRover ! !
!CardinalDirection methodsFor: 'as yet unclassified' stamp: 'DB 10/25/2020 18:18:34'!
moveBackward
	self subclassResponsibility ! !

!methodRemoval: CardinalDirection #moveBackward: stamp: 'DB 10/25/2020 18:18:42'!
moveBackward: aMarsRover
	self subclassResponsibility !
!CardinalDirection methodsFor: 'as yet unclassified' stamp: 'DB 10/25/2020 18:19:14'!
moveForward
	self subclassResponsibility ! !

!methodRemoval: CardinalDirection #moveForward: stamp: 'DB 10/25/2020 18:19:14'!
moveForward: aMarsRover
	self subclassResponsibility !
!CardinalDirection methodsFor: 'as yet unclassified' stamp: 'DB 10/25/2020 18:19:36'!
turnLeft
	self subclassResponsibility ! !

!methodRemoval: CardinalDirection #turnLeft: stamp: 'DB 10/25/2020 18:19:36'!
turnLeft: aMarsRover
	self subclassResponsibility !
!CardinalDirection methodsFor: 'as yet unclassified' stamp: 'DB 10/25/2020 18:19:54'!
turnRight
	self subclassResponsibility ! !

!methodRemoval: CardinalDirection #turnRight: stamp: 'DB 10/25/2020 18:19:54'!
turnRight: aMarsRover
	self subclassResponsibility !
!EastDirection methodsFor: 'nil' stamp: 'DB 10/25/2020 18:20:41' overrides: 50871375!
moveBackward

	marsRover moveBackwardWhenDirectionIsEast ! !
!EastDirection methodsFor: 'as yet unclassified' stamp: 'DB 10/25/2020 18:21:01' overrides: 50871384!
moveForward

	marsRover moveForwardWhenDirectionIsEast ! !
!EastDirection methodsFor: 'as yet unclassified' stamp: 'DB 10/25/2020 18:21:36' overrides: 50871402!
turnRight

	marsRover turnRithtWhenDirectionIsEast ! !
!EastDirection methodsFor: 'as yet unclassified' stamp: 'DB 10/25/2020 18:21:55' overrides: 50871393!
turnLeft

	marsRover turnLeftWhenDirectionIsEast ! !
!NorthDirection methodsFor: 'nil' stamp: 'DB 10/25/2020 18:22:41' overrides: 50871375!
moveBackward 
	
	marsRover moveBackwardWhenDirectionIsNorth ! !
!NorthDirection methodsFor: 'as yet unclassified' stamp: 'DB 10/25/2020 18:22:58' overrides: 50871384!
moveForward 
	
	marsRover moveForwardWhenDirectionIsNorth ! !
!NorthDirection methodsFor: 'as yet unclassified' stamp: 'DB 10/25/2020 18:23:21' overrides: 50871402!
turnRight 
	
	marsRover turnRightWhenDirectionIsNorth ! !
!NorthDirection methodsFor: 'as yet unclassified' stamp: 'DB 10/25/2020 18:23:32' overrides: 50871393!
turnLeft
	
	marsRover turnRightWhenDirectionIsNorth ! !
!NorthDirection methodsFor: 'as yet unclassified' stamp: 'DB 10/25/2020 18:23:43' prior: 50871451 overrides: 50871393!
turnLeft
	
	marsRover turnLeftWhenDirectionIsNorth ! !
!SouthDirection methodsFor: 'nil' stamp: 'DB 10/25/2020 18:24:16' overrides: 50871384!
moveForward
	
	marsRover moveForwardWhenDirectionIsSouth! !
!SouthDirection methodsFor: 'as yet unclassified' stamp: 'DB 10/25/2020 18:24:34' overrides: 50871375!
moveBackward
	
	marsRover moveBackwardWhenDirectionIsSouth! !
!SouthDirection methodsFor: 'as yet unclassified' stamp: 'DB 10/25/2020 18:24:49' overrides: 50871402!
turnRight
	
	marsRover turnRightWhenDirectionIsSouth! !
!SouthDirection methodsFor: 'as yet unclassified' stamp: 'DB 10/25/2020 18:25:02' overrides: 50871393!
turnLeft
	
	marsRover turnLeftWhenDirectionIsSouth! !
!WestDirection methodsFor: 'nil' stamp: 'DB 10/25/2020 18:25:34' overrides: 50871384!
moveForward

	marsRover moveForwardWhenDirectionIsWest! !
!WestDirection methodsFor: 'as yet unclassified' stamp: 'DB 10/25/2020 18:25:47' overrides: 50871375!
moveBackward

	marsRover moveBackwardWhenDirectionIsWest! !
!WestDirection methodsFor: 'as yet unclassified' stamp: 'DB 10/25/2020 18:26:12' overrides: 50871393!
turnLeft

	marsRover turnLeftWhenDirectionIsWest! !
!WestDirection methodsFor: 'as yet unclassified' stamp: 'DB 10/25/2020 18:26:27' overrides: 50871402!
turnRight

	marsRover turnRightWhenDirectionIsWest! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'DB 10/25/2020 18:27:04' prior: 50871191!
moveBackward 

	currentCardinalDirection moveBackward 
		"currentCardinalDirection = #N ifTrue: [currentPosition := currentPosition - (0@1)].
		currentCardinalDirection = #E ifTrue: [currentPosition := currentPosition - (1@0)].
		currentCardinalDirection = #S ifTrue: [currentPosition := currentPosition + (0@1)].
		currentCardinalDirection = #W ifTrue: [currentPosition := currentPosition+ (1@0)]."
	
	
! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'DB 10/25/2020 18:27:36'!
moveForwardWhenDirectionIsNorth
		currentPosition := currentPosition + (0@1)
	! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'DB 10/25/2020 18:28:00'!
moveForwardWhenDirectionIsSouth
		currentPosition :=  currentPosition - (0@1)! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'DB 10/25/2020 18:28:32'!
moveForwardWhenDirectionIsWest
		currentPosition :=  currentPosition - (1@0)
	! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'DB 10/25/2020 18:28:52' prior: 50870797!
moveForward

	currentCardinalDirection moveForward 
		"currentCardinalDirection = #N ifTrue: [currentPosition := currentPosition + (0@1)].
		currentCardinalDirection = #E ifTrue: [currentPosition := currentPosition + (1@0)].
		currentCardinalDirection = #S ifTrue: [currentPosition :=  currentPosition - (0@1) ].
		currentCardinalDirection = #W ifTrue: [currentPosition :=  currentPosition - (1@0)]."
	! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'DB 10/25/2020 18:29:58'!
turnLeftWhenDirectionIsNorth

	currentCardinalDirection := WestDirection for: self! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'DB 10/25/2020 18:30:36'!
turnLeftWhenDirectionIsEast

	currentCardinalDirection := NorthDirection for: self
				! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'DB 10/25/2020 18:31:23'!
turnLeftWhenDirectionIsSouth

	currentCardinalDirection := EastDirection for: self! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'DB 10/25/2020 18:31:55'!
turnLeftWhenDirectionIsWest
	
	currentCardinalDirection := SouthDirection for: self
	! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'DB 10/25/2020 18:32:32'!
turnRightWhenDirectionIsNoth

	currentCardinalDirection := EastDirection for: self
! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'DB 10/25/2020 18:33:08'!
turnRightWhenDirectionIsEast
		
	currentCardinalDirection := EastDirection for: self
	
! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'DB 10/25/2020 18:33:37'!
turnRightWhenDirectionIsSouth
		
	currentCardinalDirection := WestDirection for: self
! !

----SNAPSHOT----(25 October 2020 18:33:41) CuisUniversity-4384.image priorSource: 17270377!
!MarsRover methodsFor: 'as yet unclassified' stamp: 'DB 10/25/2020 18:34:09'!
turnRightWhenDirectionIsNorth

	currentCardinalDirection := EastDirection for: self
! !

!methodRemoval: MarsRover #turnRightWhenDirectionIsNoth stamp: 'DB 10/25/2020 18:34:09'!
turnRightWhenDirectionIsNoth

	currentCardinalDirection := EastDirection for: self
!
!MarsRover methodsFor: 'as yet unclassified' stamp: 'DB 10/25/2020 18:35:58'!
turnRightWhenDirectionIsWest

	currentCardinalDirection := NorthDirection for: self
! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'DB 10/25/2020 18:37:22' prior: 50871295!
move: commands 
	commands do: [:aCommand | 
		(self isValid: aCommand) ifFalse: [^'Error'].
		
		aCommand = $f ifTrue: [currentCardinalDirection moveForward ].	
		aCommand = $b ifTrue: [currentCardinalDirection moveBackward].
		aCommand = $l ifTrue: [currentCardinalDirection turnLeft].
		aCommand = $r ifTrue: [currentCardinalDirection turnRight].
	]
	! !

!testRun: #MarsRoverTest #test01ForwardWhenPointingNorth stamp: 'DB 10/25/2020 18:37:32'!
ERROR!

!testRun: #MarsRoverTest #test02BackwardWhenPointingNorth stamp: 'DB 10/25/2020 18:37:32'!
ERROR!

!testRun: #MarsRoverTest #test03TuringLeftWhenPointingNorth stamp: 'DB 10/25/2020 18:37:32'!
ERROR!

!testRun: #MarsRoverTest #test04TurningRightWhenPointingNorth stamp: 'DB 10/25/2020 18:37:32'!
ERROR!

!testRun: #MarsRoverTest #test05ForwardWhenPointingEast stamp: 'DB 10/25/2020 18:37:32'!
ERROR!

!testRun: #MarsRoverTest #test06ForwardWhenPointingSouth stamp: 'DB 10/25/2020 18:37:32'!
ERROR!

!testRun: #MarsRoverTest #test07ForwardWhenPointingWest stamp: 'DB 10/25/2020 18:37:32'!
ERROR!

!testRun: #MarsRoverTest #test08BackwardWhenPointingEast stamp: 'DB 10/25/2020 18:37:32'!
ERROR!

!testRun: #MarsRoverTest #test09BackwardWhenPointingSouth stamp: 'DB 10/25/2020 18:37:32'!
ERROR!

!testRun: #MarsRoverTest #test10BackwardWhenPointingWest stamp: 'DB 10/25/2020 18:37:32'!
ERROR!

!testRun: #MarsRoverTest #test11TuringLeftWhenPointingEast stamp: 'DB 10/25/2020 18:37:32'!
ERROR!

!testRun: #MarsRoverTest #test12TuringLeftWhenPointingSouth stamp: 'DB 10/25/2020 18:37:32'!
ERROR!

!testRun: #MarsRoverTest #test13TuringLeftWhenPointingWest stamp: 'DB 10/25/2020 18:37:32'!
ERROR!

!testRun: #MarsRoverTest #test14TurningRightWhenPointingEast stamp: 'DB 10/25/2020 18:37:32'!
ERROR!

!testRun: #MarsRoverTest #test15TurningRightWhenPointingSouth stamp: 'DB 10/25/2020 18:37:32'!
ERROR!

!testRun: #MarsRoverTest #test16TurningRightWhenPointingWest stamp: 'DB 10/25/2020 18:37:32'!
ERROR!

!testRun: #MarsRoverTest #test17MultipleCommandsWhenPointingNorth stamp: 'DB 10/25/2020 18:37:32'!
ERROR!

!testRun: #MarsRoverTest #test18MultipleMixedCommandsWhenPointingNorth stamp: 'DB 10/25/2020 18:37:32'!
ERROR!

!testRun: #MarsRoverTest #test19DoesntContinueExecutingAfterAnInvalidCommand stamp: 'DB 10/25/2020 18:37:32'!
ERROR!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'DB 10/25/2020 18:41:37' prior: 50868256!
test01ForwardWhenPointingNorth
	
	| marsRover |
	marsRover := MarsRover at: 1@1 pointingTowards: NorthDirection new.
	
	marsRover move: 'f'.
	
	self assert: ((marsRover currentPosition) = (1@2))! !
!MarsRover methodsFor: 'initialization' stamp: 'DB 10/25/2020 18:41:58' prior: 50868448!
initializeAt: aInitialPosition pointingTowards: aCardinalDirection 

	currentPosition := aInitialPosition.
	currentCardinalDirection := aCardinalDirection for: self.! !

!testRun: #MarsRoverTest #test01ForwardWhenPointingNorth stamp: 'DB 10/25/2020 18:42:09'!
ERROR!

!testRun: #MarsRoverTest #test01ForwardWhenPointingNorth stamp: 'DB 10/25/2020 18:42:09'!
ERROR!
!MarsRover methodsFor: 'initialization' stamp: 'DB 10/25/2020 18:42:53' prior: 50871699!
initializeAt: aInitialPosition pointingTowards: aCardinalDirection 

	currentPosition := aInitialPosition.
	currentCardinalDirection := NorthDirection for: self.! !

!testRun: #MarsRoverTest #test01ForwardWhenPointingNorth stamp: 'DB 10/25/2020 18:42:54'!
PASSED!

!testRun: #MarsRoverTest #test01ForwardWhenPointingNorth stamp: 'DB 10/25/2020 18:42:59'!
PASSED!

Object subclass: #MarsRover
	instanceVariableNames: 'currentPosition currentCardinalDirection'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Mars Rover'!

!classDefinition: #MarsRover category: 'Mars Rover' stamp: 'DB 10/25/2020 18:44:32'!
Object subclass: #MarsRover
	instanceVariableNames: 'currentPosition currentCardinalDirection'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Mars Rover'!
!MarsRover methodsFor: 'initialization' stamp: 'DB 10/25/2020 18:48:05'!
initializeNortAt: aInitialPosition

	currentPosition := aInitialPosition.
	currentCardinalDirection := NorthDirection for: self.! !
!MarsRover methodsFor: 'initialization' stamp: 'DB 10/25/2020 18:48:23'!
initializeNorhAt: aInitialPosition

	currentPosition := aInitialPosition.
	currentCardinalDirection := NorthDirection for: self.! !

!methodRemoval: MarsRover #initializeNortAt: stamp: 'DB 10/25/2020 18:48:23'!
initializeNortAt: aInitialPosition

	currentPosition := aInitialPosition.
	currentCardinalDirection := NorthDirection for: self.!
!MarsRover methodsFor: 'initialization' stamp: 'DB 10/25/2020 18:48:39'!
initializeSouthAt: aInitialPosition

	currentPosition := aInitialPosition.
	currentCardinalDirection := SouthDirection for: self.! !
!MarsRover methodsFor: 'initialization' stamp: 'DB 10/25/2020 18:48:50'!
initializeWestAt: aInitialPosition

	currentPosition := aInitialPosition.
	currentCardinalDirection := WestDirection for: self.! !
!MarsRover methodsFor: 'initialization' stamp: 'DB 10/25/2020 18:49:04'!
initializeEastAt: aInitialPosition

	currentPosition := aInitialPosition.
	currentCardinalDirection := EastDirection for: self.! !

!methodRemoval: MarsRover #initializeAt:pointingTowards: stamp: 'DB 10/25/2020 18:49:10'!
initializeAt: aInitialPosition pointingTowards: aCardinalDirection 

	currentPosition := aInitialPosition.
	currentCardinalDirection := NorthDirection for: self.!
!MarsRover class methodsFor: 'instance creation' stamp: 'DB 10/25/2020 18:49:48'!
atNorth: aInitialPosition 
	^self new initializeNorhAt: aInitialPosition ! !
!MarsRover class methodsFor: 'instance creation' stamp: 'DB 10/25/2020 18:49:59'!
atSouth: aInitialPosition 
	^self new initializeSouthAt: aInitialPosition ! !
!MarsRover class methodsFor: 'instance creation' stamp: 'DB 10/25/2020 18:50:08'!
atEast: aInitialPosition 
	^self new initializeEastAt: aInitialPosition ! !
!MarsRover class methodsFor: 'instance creation' stamp: 'DB 10/25/2020 18:50:18'!
atWest: aInitialPosition 
	^self new initializeWestAt: aInitialPosition ! !

!methodRemoval: MarsRover class #at:pointingTowards: stamp: 'DB 10/25/2020 18:50:24'!
at: aInitialPosition pointingTowards: aCardinalDirection 
	^self new initializeAt: aInitialPosition pointingTowards: aCardinalDirection !

----SNAPSHOT----(25 October 2020 18:50:33) CuisUniversity-4384.image priorSource: 17278201!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'DB 10/25/2020 18:50:57' prior: 50871690!
test01ForwardWhenPointingNorth
	
	| marsRover |
	marsRover := MarsRover atNorth: 1@1
	
	marsRover move: 'f'.
	
	self assert: ((marsRover currentPosition) = (1@2))! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'DB 10/25/2020 18:51:02' prior: 50871821!
test01ForwardWhenPointingNorth
	
	| marsRover |
	marsRover := MarsRover atNorth: 1@1.
	
	marsRover move: 'f'.
	
	self assert: ((marsRover currentPosition) = (1@2))! !

!testRun: #MarsRoverTest #test01ForwardWhenPointingNorth stamp: 'DB 10/25/2020 18:51:06'!
PASSED!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'DB 10/25/2020 18:51:19' prior: 50868272!
test02BackwardWhenPointingNorth
	
	| marsRover |
	marsRover := MarsRover atNorth: 1@1.
	
	marsRover move: 'b'.
	
	self assert: ((marsRover currentPosition) = (1@0))! !

!testRun: #MarsRoverTest #test02BackwardWhenPointingNorth stamp: 'DB 10/25/2020 18:51:22'!
PASSED!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'DB 10/25/2020 18:51:34' prior: 50868288!
test03TuringLeftWhenPointingNorth
	
	| marsRover |
	marsRover := MarsRover atNorth: 1@1.
	
	marsRover move: 'l'.
	
	self assert: ((marsRover currentDirection) = #W)! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'DB 10/25/2020 18:51:46' prior: 50868304!
test04TurningRightWhenPointingNorth
	
	| marsRover |
	marsRover := MarsRover atNorth: 1@1.
	
	marsRover move: 'r'.
	
	self assert: ((marsRover currentDirection) = #E)! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'DB 10/25/2020 18:51:58' prior: 50868403!
test05ForwardWhenPointingEast
	
	| marsRover |
	marsRover := MarsRover atEast: 1@1.
	
	marsRover move: 'f'.
	
	self assert: ((marsRover currentPosition) = (2@1))! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'DB 10/25/2020 18:52:17' prior: 50868475!
test06ForwardWhenPointingSouth
	
	| marsRover |
	marsRover := MarsRover atSouth: 1@1.
	
	marsRover move: 'f'.
	
	self assert: ((marsRover currentPosition) = (1@0))! !

!testRun: #MarsRoverTest #test06ForwardWhenPointingSouth stamp: 'DB 10/25/2020 18:52:21'!
PASSED!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'DB 10/25/2020 18:52:31' prior: 50868544!
test07ForwardWhenPointingWest
	
	| marsRover |
	marsRover := MarsRover atWest: 1@1.
	
	marsRover move: 'f'.
	
	self assert: ((marsRover currentPosition) = (0@1))! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'DB 10/25/2020 18:52:47' prior: 50868756!
test08BackwardWhenPointingEast
	
	| marsRover |
	marsRover := MarsRover atEast: 1@1.
	
	marsRover move: 'b'.
	
	self assert: ((marsRover currentPosition) = (0@1))! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'DB 10/25/2020 18:53:00' prior: 50868773!
test09BackwardWhenPointingSouth
	
	| marsRover |
	marsRover := MarsRover atSouth: 1@1.
	
	marsRover move: 'b'.
	
	self assert: ((marsRover currentPosition) = (1@2))! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'DB 10/25/2020 18:53:08' prior: 50868882!
test10BackwardWhenPointingWest
	
	| marsRover |
	marsRover := MarsRover atWest: 1@1.
	
	marsRover move: 'b'.
	
	self assert: ((marsRover currentPosition) = (2@1))! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'DB 10/25/2020 18:53:16' prior: 50868957!
test11TuringLeftWhenPointingEast
	
	| marsRover |
	marsRover := MarsRover atEast: 1@1.
	
	marsRover move: 'l'.
	
	self assert: ((marsRover currentDirection) = #N)! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'DB 10/25/2020 18:53:25' prior: 50869048!
test12TuringLeftWhenPointingSouth
	
	| marsRover |
	marsRover := MarsRover atSouth: 1@1.
	
	marsRover move: 'l'.
	
	self assert: ((marsRover currentDirection) = #E).! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'DB 10/25/2020 18:53:38' prior: 50869171!
test13TuringLeftWhenPointingWest
	
	| marsRover |
	marsRover := MarsRover atWest: 1@1.
	
	marsRover move: 'l'.
	
	self assert: ((marsRover currentDirection) = #S).! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'DB 10/25/2020 18:53:44' prior: 50869320!
test14TurningRightWhenPointingEast
	
	| marsRover |
	marsRover := MarsRover atEast: 1@1.
	
	marsRover move: 'r'.
	
	self assert: ((marsRover currentDirection) = #S)! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'DB 10/25/2020 18:53:57' prior: 50869627!
test15TurningRightWhenPointingSouth
	
	| marsRover |
	marsRover := MarsRover atSouth: 1@1.
	
	marsRover move: 'r'.
	
	self assert: ((marsRover currentDirection) = #W)! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'DB 10/25/2020 18:54:09' prior: 50869736!
test16TurningRightWhenPointingWest
	
	| marsRover |
	marsRover := MarsRover atWest: 1@1.
	
	marsRover move: 'r'.
	
	self assert: ((marsRover currentDirection) = #N)! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'DB 10/25/2020 18:54:20' prior: 50870079!
test17MultipleCommandsWhenPointingNorth
	
	| marsRover |
	marsRover := MarsRover atNorth: 1@1.
	
	marsRover move: 'fff'.
	
	self assert: ((marsRover currentPosition ) = (1@4)).
	self assert: ((marsRover currentDirection) = #N).! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'DB 10/25/2020 18:54:44' prior: 50870090!
test18MultipleMixedCommandsWhenPointingNorth
	
	| marsRover |
	marsRover := MarsRover atNorth: 1@1.
	
	marsRover move: 'frffr'.
	
	self assert: ((marsRover currentPosition ) = (3@2)).
	self assert: ((marsRover currentDirection) = #S).! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'DB 10/25/2020 18:54:55' prior: 50870477!
test19DoesntContinueExecutingAfterAnInvalidCommand
	
	| marsRover |
	marsRover := MarsRover atNorth: 1@1.
	
	marsRover move: 'frffr=?xxyffr'.
	
	self assert: ((marsRover currentPosition ) = (3@2)).
	self assert: ((marsRover currentDirection) = #S).! !

!testRun: #MarsRoverTest #test01ForwardWhenPointingNorth stamp: 'DB 10/25/2020 18:54:59'!
PASSED!

!testRun: #MarsRoverTest #test02BackwardWhenPointingNorth stamp: 'DB 10/25/2020 18:54:59'!
PASSED!

!testRun: #MarsRoverTest #test03TuringLeftWhenPointingNorth stamp: 'DB 10/25/2020 18:54:59'!
FAILURE!

!testRun: #MarsRoverTest #test04TurningRightWhenPointingNorth stamp: 'DB 10/25/2020 18:54:59'!
FAILURE!

!testRun: #MarsRoverTest #test05ForwardWhenPointingEast stamp: 'DB 10/25/2020 18:54:59'!
PASSED!

!testRun: #MarsRoverTest #test06ForwardWhenPointingSouth stamp: 'DB 10/25/2020 18:54:59'!
PASSED!

!testRun: #MarsRoverTest #test07ForwardWhenPointingWest stamp: 'DB 10/25/2020 18:54:59'!
PASSED!

!testRun: #MarsRoverTest #test08BackwardWhenPointingEast stamp: 'DB 10/25/2020 18:54:59'!
PASSED!

!testRun: #MarsRoverTest #test09BackwardWhenPointingSouth stamp: 'DB 10/25/2020 18:54:59'!
PASSED!

!testRun: #MarsRoverTest #test10BackwardWhenPointingWest stamp: 'DB 10/25/2020 18:54:59'!
PASSED!

!testRun: #MarsRoverTest #test11TuringLeftWhenPointingEast stamp: 'DB 10/25/2020 18:54:59'!
FAILURE!

!testRun: #MarsRoverTest #test12TuringLeftWhenPointingSouth stamp: 'DB 10/25/2020 18:54:59'!
FAILURE!

!testRun: #MarsRoverTest #test13TuringLeftWhenPointingWest stamp: 'DB 10/25/2020 18:54:59'!
FAILURE!

!testRun: #MarsRoverTest #test14TurningRightWhenPointingEast stamp: 'DB 10/25/2020 18:54:59'!
ERROR!

!testRun: #MarsRoverTest #test15TurningRightWhenPointingSouth stamp: 'DB 10/25/2020 18:54:59'!
FAILURE!

!testRun: #MarsRoverTest #test16TurningRightWhenPointingWest stamp: 'DB 10/25/2020 18:54:59'!
FAILURE!

!testRun: #MarsRoverTest #test17MultipleCommandsWhenPointingNorth stamp: 'DB 10/25/2020 18:54:59'!
FAILURE!

!testRun: #MarsRoverTest #test18MultipleMixedCommandsWhenPointingNorth stamp: 'DB 10/25/2020 18:54:59'!
ERROR!

!testRun: #MarsRoverTest #test19DoesntContinueExecutingAfterAnInvalidCommand stamp: 'DB 10/25/2020 18:54:59'!
ERROR!

!testRun: #MarsRoverTest #test03TuringLeftWhenPointingNorth stamp: 'DB 10/25/2020 18:55:13'!
FAILURE!

!testRun: #MarsRoverTest #test03TuringLeftWhenPointingNorth stamp: 'DB 10/25/2020 18:55:13'!
FAILURE!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'DB 10/25/2020 18:56:59' prior: 50871854!
test03TuringLeftWhenPointingNorth
	
	| marsRover |
	marsRover := MarsRover atNorth: 1@1.
	
	marsRover move: 'l'.
	
	self assert: ((marsRover currentDirection) isKindOf: WestDirection )! !

!testRun: #MarsRoverTest #test03TuringLeftWhenPointingNorth stamp: 'DB 10/25/2020 18:57:02'!
PASSED!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'DB 10/25/2020 18:57:19' prior: 50871863!
test04TurningRightWhenPointingNorth
	
	| marsRover |
	marsRover := MarsRover atNorth: 1@1.
	
	marsRover move: 'r'.
	
	self assert: ((marsRover currentDirection) isKindOf: EastDirection)! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'DB 10/25/2020 18:57:51' prior: 50871929!
test11TuringLeftWhenPointingEast
	
	| marsRover |
	marsRover := MarsRover atEast: 1@1.
	
	marsRover move: 'l'.
	
	self assert: ((marsRover currentDirection) isKindOf: NorthDirection)! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'DB 10/25/2020 18:58:02' prior: 50871938!
test12TuringLeftWhenPointingSouth
	
	| marsRover |
	marsRover := MarsRover atSouth: 1@1.
	
	marsRover move: 'l'.
	
	self assert: ((marsRover currentDirection) isKindOf: EastDirection).! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'DB 10/25/2020 18:58:18' prior: 50871947!
test13TuringLeftWhenPointingWest
	
	| marsRover |
	marsRover := MarsRover atWest: 1@1.
	
	marsRover move: 'l'.
	
	self assert: ((marsRover currentDirection) isKindOf: SouthDirection).! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'DB 10/25/2020 18:58:29' prior: 50871956!
test14TurningRightWhenPointingEast
	
	| marsRover |
	marsRover := MarsRover atEast: 1@1.
	
	marsRover move: 'r'.
	
	self assert: ((marsRover currentDirection) isKindOf: SouthDirection)! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'DB 10/25/2020 18:58:39' prior: 50871965!
test15TurningRightWhenPointingSouth
	
	| marsRover |
	marsRover := MarsRover atSouth: 1@1.
	
	marsRover move: 'r'.
	
	self assert: ((marsRover currentDirection) isKindOf: WestDirection )! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'DB 10/25/2020 18:58:53' prior: 50871974!
test16TurningRightWhenPointingWest
	
	| marsRover |
	marsRover := MarsRover atWest: 1@1.
	
	marsRover move: 'r'.
	
	self assert: ((marsRover currentDirection) isKindOf: NorthDirection)! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'DB 10/25/2020 18:59:08' prior: 50871983!
test17MultipleCommandsWhenPointingNorth
	
	| marsRover |
	marsRover := MarsRover atNorth: 1@1.
	
	marsRover move: 'fff'.
	
	self assert: ((marsRover currentPosition ) = (1@4)).
	self assert: ((marsRover currentDirection) isKindOf: NorthDirection).! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'DB 10/25/2020 18:59:27' prior: 50871994!
test18MultipleMixedCommandsWhenPointingNorth
	
	| marsRover |
	marsRover := MarsRover atNorth: 1@1.
	
	marsRover move: 'frffr'.
	
	self assert: ((marsRover currentPosition ) = (3@2)).
	self assert: ((marsRover currentDirection) isKindOf: SouthDirection).! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'DB 10/25/2020 19:00:19' prior: 50872005!
test19DoesntContinueExecutingAfterAnInvalidCommand
	
	| marsRover |
	marsRover := MarsRover atNorth: 1@1.
	
	marsRover move: 'frffr=?xxyffr'.
	
	self assert: ((marsRover currentPosition ) = (3@2)).
	self assert: ((marsRover currentDirection) isKindOf: SouthDirection).! !

!testRun: #MarsRoverTest #test01ForwardWhenPointingNorth stamp: 'DB 10/25/2020 19:00:40'!
PASSED!

!testRun: #MarsRoverTest #test02BackwardWhenPointingNorth stamp: 'DB 10/25/2020 19:00:40'!
PASSED!

!testRun: #MarsRoverTest #test03TuringLeftWhenPointingNorth stamp: 'DB 10/25/2020 19:00:40'!
PASSED!

!testRun: #MarsRoverTest #test04TurningRightWhenPointingNorth stamp: 'DB 10/25/2020 19:00:40'!
PASSED!

!testRun: #MarsRoverTest #test05ForwardWhenPointingEast stamp: 'DB 10/25/2020 19:00:40'!
PASSED!

!testRun: #MarsRoverTest #test06ForwardWhenPointingSouth stamp: 'DB 10/25/2020 19:00:40'!
PASSED!

!testRun: #MarsRoverTest #test07ForwardWhenPointingWest stamp: 'DB 10/25/2020 19:00:40'!
PASSED!

!testRun: #MarsRoverTest #test08BackwardWhenPointingEast stamp: 'DB 10/25/2020 19:00:40'!
PASSED!

!testRun: #MarsRoverTest #test09BackwardWhenPointingSouth stamp: 'DB 10/25/2020 19:00:40'!
PASSED!

!testRun: #MarsRoverTest #test10BackwardWhenPointingWest stamp: 'DB 10/25/2020 19:00:40'!
PASSED!

!testRun: #MarsRoverTest #test11TuringLeftWhenPointingEast stamp: 'DB 10/25/2020 19:00:40'!
PASSED!

!testRun: #MarsRoverTest #test12TuringLeftWhenPointingSouth stamp: 'DB 10/25/2020 19:00:40'!
PASSED!

!testRun: #MarsRoverTest #test13TuringLeftWhenPointingWest stamp: 'DB 10/25/2020 19:00:40'!
PASSED!

!testRun: #MarsRoverTest #test14TurningRightWhenPointingEast stamp: 'DB 10/25/2020 19:00:40'!
ERROR!

!testRun: #MarsRoverTest #test15TurningRightWhenPointingSouth stamp: 'DB 10/25/2020 19:00:40'!
PASSED!

!testRun: #MarsRoverTest #test16TurningRightWhenPointingWest stamp: 'DB 10/25/2020 19:00:40'!
PASSED!

!testRun: #MarsRoverTest #test17MultipleCommandsWhenPointingNorth stamp: 'DB 10/25/2020 19:00:40'!
PASSED!

!testRun: #MarsRoverTest #test18MultipleMixedCommandsWhenPointingNorth stamp: 'DB 10/25/2020 19:00:40'!
ERROR!

!testRun: #MarsRoverTest #test19DoesntContinueExecutingAfterAnInvalidCommand stamp: 'DB 10/25/2020 19:00:40'!
ERROR!

!testRun: #MarsRoverTest #test14TurningRightWhenPointingEast stamp: 'DB 10/25/2020 19:00:49'!
ERROR!

!testRun: #MarsRoverTest #test14TurningRightWhenPointingEast stamp: 'DB 10/25/2020 19:02:05'!
ERROR!

!testRun: #MarsRoverTest #test14TurningRightWhenPointingEast stamp: 'DB 10/25/2020 19:02:12'!
ERROR!
!EastDirection methodsFor: 'as yet unclassified' stamp: 'DB 10/25/2020 19:02:31' prior: 50871423 overrides: 50871402!
turnRight

	marsRover turnRightWhenDirectionIsEast ! !

!testRun: #MarsRoverTest #test14TurningRightWhenPointingEast stamp: 'DB 10/25/2020 19:02:32'!
FAILURE!
!MarsRover methodsFor: 'as yet unclassified' stamp: 'DB 10/25/2020 19:03:51' prior: 50871583!
turnRightWhenDirectionIsEast
		
	currentCardinalDirection := SouthDirection for: self
	
! !

!testRun: #MarsRoverTest #test14TurningRightWhenPointingEast stamp: 'DB 10/25/2020 19:03:52'!
PASSED!

!testRun: #MarsRoverTest #test18MultipleMixedCommandsWhenPointingNorth stamp: 'DB 10/25/2020 19:04:00'!
PASSED!

!testRun: #MarsRoverTest #test19DoesntContinueExecutingAfterAnInvalidCommand stamp: 'DB 10/25/2020 19:04:02'!
PASSED!

!testRun: #MarsRoverTest #test01ForwardWhenPointingNorth stamp: 'DB 10/25/2020 19:04:07'!
PASSED!

!testRun: #MarsRoverTest #test02BackwardWhenPointingNorth stamp: 'DB 10/25/2020 19:04:07'!
PASSED!

!testRun: #MarsRoverTest #test03TuringLeftWhenPointingNorth stamp: 'DB 10/25/2020 19:04:07'!
PASSED!

!testRun: #MarsRoverTest #test04TurningRightWhenPointingNorth stamp: 'DB 10/25/2020 19:04:07'!
PASSED!

!testRun: #MarsRoverTest #test05ForwardWhenPointingEast stamp: 'DB 10/25/2020 19:04:07'!
PASSED!

!testRun: #MarsRoverTest #test06ForwardWhenPointingSouth stamp: 'DB 10/25/2020 19:04:07'!
PASSED!

!testRun: #MarsRoverTest #test07ForwardWhenPointingWest stamp: 'DB 10/25/2020 19:04:07'!
PASSED!

!testRun: #MarsRoverTest #test08BackwardWhenPointingEast stamp: 'DB 10/25/2020 19:04:07'!
PASSED!

!testRun: #MarsRoverTest #test09BackwardWhenPointingSouth stamp: 'DB 10/25/2020 19:04:07'!
PASSED!

!testRun: #MarsRoverTest #test10BackwardWhenPointingWest stamp: 'DB 10/25/2020 19:04:07'!
PASSED!

!testRun: #MarsRoverTest #test11TuringLeftWhenPointingEast stamp: 'DB 10/25/2020 19:04:07'!
PASSED!

!testRun: #MarsRoverTest #test12TuringLeftWhenPointingSouth stamp: 'DB 10/25/2020 19:04:07'!
PASSED!

!testRun: #MarsRoverTest #test13TuringLeftWhenPointingWest stamp: 'DB 10/25/2020 19:04:07'!
PASSED!

!testRun: #MarsRoverTest #test14TurningRightWhenPointingEast stamp: 'DB 10/25/2020 19:04:07'!
PASSED!

!testRun: #MarsRoverTest #test15TurningRightWhenPointingSouth stamp: 'DB 10/25/2020 19:04:07'!
PASSED!

!testRun: #MarsRoverTest #test16TurningRightWhenPointingWest stamp: 'DB 10/25/2020 19:04:07'!
PASSED!

!testRun: #MarsRoverTest #test17MultipleCommandsWhenPointingNorth stamp: 'DB 10/25/2020 19:04:07'!
PASSED!

!testRun: #MarsRoverTest #test18MultipleMixedCommandsWhenPointingNorth stamp: 'DB 10/25/2020 19:04:07'!
PASSED!

!testRun: #MarsRoverTest #test19DoesntContinueExecutingAfterAnInvalidCommand stamp: 'DB 10/25/2020 19:04:07'!
PASSED!
!MarsRover methodsFor: 'as yet unclassified' stamp: 'DB 10/25/2020 19:04:55' prior: 50870783!
turnRight 

	currentCardinalDirection turnRight
	
! !

!testRun: #MarsRoverTest #test01ForwardWhenPointingNorth stamp: 'DB 10/25/2020 19:04:59'!
PASSED!

!testRun: #MarsRoverTest #test02BackwardWhenPointingNorth stamp: 'DB 10/25/2020 19:04:59'!
PASSED!

!testRun: #MarsRoverTest #test03TuringLeftWhenPointingNorth stamp: 'DB 10/25/2020 19:04:59'!
PASSED!

!testRun: #MarsRoverTest #test04TurningRightWhenPointingNorth stamp: 'DB 10/25/2020 19:04:59'!
PASSED!

!testRun: #MarsRoverTest #test05ForwardWhenPointingEast stamp: 'DB 10/25/2020 19:04:59'!
PASSED!

!testRun: #MarsRoverTest #test06ForwardWhenPointingSouth stamp: 'DB 10/25/2020 19:04:59'!
PASSED!

!testRun: #MarsRoverTest #test07ForwardWhenPointingWest stamp: 'DB 10/25/2020 19:04:59'!
PASSED!

!testRun: #MarsRoverTest #test08BackwardWhenPointingEast stamp: 'DB 10/25/2020 19:04:59'!
PASSED!

!testRun: #MarsRoverTest #test09BackwardWhenPointingSouth stamp: 'DB 10/25/2020 19:04:59'!
PASSED!

!testRun: #MarsRoverTest #test10BackwardWhenPointingWest stamp: 'DB 10/25/2020 19:04:59'!
PASSED!

!testRun: #MarsRoverTest #test11TuringLeftWhenPointingEast stamp: 'DB 10/25/2020 19:04:59'!
PASSED!

!testRun: #MarsRoverTest #test12TuringLeftWhenPointingSouth stamp: 'DB 10/25/2020 19:04:59'!
PASSED!

!testRun: #MarsRoverTest #test13TuringLeftWhenPointingWest stamp: 'DB 10/25/2020 19:04:59'!
PASSED!

!testRun: #MarsRoverTest #test14TurningRightWhenPointingEast stamp: 'DB 10/25/2020 19:04:59'!
PASSED!

!testRun: #MarsRoverTest #test15TurningRightWhenPointingSouth stamp: 'DB 10/25/2020 19:04:59'!
PASSED!

!testRun: #MarsRoverTest #test16TurningRightWhenPointingWest stamp: 'DB 10/25/2020 19:04:59'!
PASSED!

!testRun: #MarsRoverTest #test17MultipleCommandsWhenPointingNorth stamp: 'DB 10/25/2020 19:04:59'!
PASSED!

!testRun: #MarsRoverTest #test18MultipleMixedCommandsWhenPointingNorth stamp: 'DB 10/25/2020 19:04:59'!
PASSED!

!testRun: #MarsRoverTest #test19DoesntContinueExecutingAfterAnInvalidCommand stamp: 'DB 10/25/2020 19:04:59'!
PASSED!
!MarsRover methodsFor: 'as yet unclassified' stamp: 'DB 10/25/2020 19:05:20' prior: 50871505!
moveBackward 

	currentCardinalDirection moveBackward.
	
! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'DB 10/25/2020 19:05:30' prior: 50871537!
moveForward

	currentCardinalDirection moveForward.! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'DB 10/25/2020 19:05:49' prior: 50871521!
moveForwardWhenDirectionIsNorth

	currentPosition := currentPosition + (0@1)
	! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'DB 10/25/2020 19:05:58' prior: 50871526!
moveForwardWhenDirectionIsSouth
	
	currentPosition :=  currentPosition - (0@1)! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'DB 10/25/2020 19:06:03' prior: 50871531!
moveForwardWhenDirectionIsWest

	currentPosition :=  currentPosition - (1@0)
	! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'DB 10/25/2020 19:06:14' prior: 50872434!
moveForwardWhenDirectionIsSouth
	
	currentPosition := currentPosition - (0@1)! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'DB 10/25/2020 19:06:17' prior: 50872440!
moveForwardWhenDirectionIsWest

	currentPosition := currentPosition - (1@0)
	! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'DB 10/25/2020 19:06:31' prior: 50870940!
turnLeft  

	currentCardinalDirection turnLeft.! !

!testRun: #MarsRoverTest #test01ForwardWhenPointingNorth stamp: 'DB 10/25/2020 19:06:35'!
PASSED!

!testRun: #MarsRoverTest #test02BackwardWhenPointingNorth stamp: 'DB 10/25/2020 19:06:35'!
PASSED!

!testRun: #MarsRoverTest #test03TuringLeftWhenPointingNorth stamp: 'DB 10/25/2020 19:06:35'!
PASSED!

!testRun: #MarsRoverTest #test04TurningRightWhenPointingNorth stamp: 'DB 10/25/2020 19:06:35'!
PASSED!

!testRun: #MarsRoverTest #test05ForwardWhenPointingEast stamp: 'DB 10/25/2020 19:06:35'!
PASSED!

!testRun: #MarsRoverTest #test06ForwardWhenPointingSouth stamp: 'DB 10/25/2020 19:06:35'!
PASSED!

!testRun: #MarsRoverTest #test07ForwardWhenPointingWest stamp: 'DB 10/25/2020 19:06:35'!
PASSED!

!testRun: #MarsRoverTest #test08BackwardWhenPointingEast stamp: 'DB 10/25/2020 19:06:35'!
PASSED!

!testRun: #MarsRoverTest #test09BackwardWhenPointingSouth stamp: 'DB 10/25/2020 19:06:35'!
PASSED!

!testRun: #MarsRoverTest #test10BackwardWhenPointingWest stamp: 'DB 10/25/2020 19:06:35'!
PASSED!

!testRun: #MarsRoverTest #test11TuringLeftWhenPointingEast stamp: 'DB 10/25/2020 19:06:35'!
PASSED!

!testRun: #MarsRoverTest #test12TuringLeftWhenPointingSouth stamp: 'DB 10/25/2020 19:06:35'!
PASSED!

!testRun: #MarsRoverTest #test13TuringLeftWhenPointingWest stamp: 'DB 10/25/2020 19:06:35'!
PASSED!

!testRun: #MarsRoverTest #test14TurningRightWhenPointingEast stamp: 'DB 10/25/2020 19:06:35'!
PASSED!

!testRun: #MarsRoverTest #test15TurningRightWhenPointingSouth stamp: 'DB 10/25/2020 19:06:35'!
PASSED!

!testRun: #MarsRoverTest #test16TurningRightWhenPointingWest stamp: 'DB 10/25/2020 19:06:35'!
PASSED!

!testRun: #MarsRoverTest #test17MultipleCommandsWhenPointingNorth stamp: 'DB 10/25/2020 19:06:35'!
PASSED!

!testRun: #MarsRoverTest #test18MultipleMixedCommandsWhenPointingNorth stamp: 'DB 10/25/2020 19:06:35'!
PASSED!

!testRun: #MarsRoverTest #test19DoesntContinueExecutingAfterAnInvalidCommand stamp: 'DB 10/25/2020 19:06:35'!
PASSED!

!methodRemoval: MarsRover #moveBackward stamp: 'DB 10/25/2020 19:09:34'!
moveBackward 

	currentCardinalDirection moveBackward.
	
!

!testRun: #MarsRoverTest #test01ForwardWhenPointingNorth stamp: 'DB 10/25/2020 19:09:41'!
PASSED!

!testRun: #MarsRoverTest #test02BackwardWhenPointingNorth stamp: 'DB 10/25/2020 19:09:41'!
PASSED!

!testRun: #MarsRoverTest #test03TuringLeftWhenPointingNorth stamp: 'DB 10/25/2020 19:09:41'!
PASSED!

!testRun: #MarsRoverTest #test04TurningRightWhenPointingNorth stamp: 'DB 10/25/2020 19:09:41'!
PASSED!

!testRun: #MarsRoverTest #test05ForwardWhenPointingEast stamp: 'DB 10/25/2020 19:09:41'!
PASSED!

!testRun: #MarsRoverTest #test06ForwardWhenPointingSouth stamp: 'DB 10/25/2020 19:09:41'!
PASSED!

!testRun: #MarsRoverTest #test07ForwardWhenPointingWest stamp: 'DB 10/25/2020 19:09:41'!
PASSED!

!testRun: #MarsRoverTest #test08BackwardWhenPointingEast stamp: 'DB 10/25/2020 19:09:41'!
PASSED!

!testRun: #MarsRoverTest #test09BackwardWhenPointingSouth stamp: 'DB 10/25/2020 19:09:41'!
PASSED!

!testRun: #MarsRoverTest #test10BackwardWhenPointingWest stamp: 'DB 10/25/2020 19:09:41'!
PASSED!

!testRun: #MarsRoverTest #test11TuringLeftWhenPointingEast stamp: 'DB 10/25/2020 19:09:41'!
PASSED!

!testRun: #MarsRoverTest #test12TuringLeftWhenPointingSouth stamp: 'DB 10/25/2020 19:09:41'!
PASSED!

!testRun: #MarsRoverTest #test13TuringLeftWhenPointingWest stamp: 'DB 10/25/2020 19:09:41'!
PASSED!

!testRun: #MarsRoverTest #test14TurningRightWhenPointingEast stamp: 'DB 10/25/2020 19:09:41'!
PASSED!

!testRun: #MarsRoverTest #test15TurningRightWhenPointingSouth stamp: 'DB 10/25/2020 19:09:41'!
PASSED!

!testRun: #MarsRoverTest #test16TurningRightWhenPointingWest stamp: 'DB 10/25/2020 19:09:41'!
PASSED!

!testRun: #MarsRoverTest #test17MultipleCommandsWhenPointingNorth stamp: 'DB 10/25/2020 19:09:41'!
PASSED!

!testRun: #MarsRoverTest #test18MultipleMixedCommandsWhenPointingNorth stamp: 'DB 10/25/2020 19:09:41'!
PASSED!

!testRun: #MarsRoverTest #test19DoesntContinueExecutingAfterAnInvalidCommand stamp: 'DB 10/25/2020 19:09:41'!
PASSED!

!methodRemoval: MarsRover #moveForward stamp: 'DB 10/25/2020 19:09:48'!
moveForward

	currentCardinalDirection moveForward.!

!methodRemoval: MarsRover #turnLeft stamp: 'DB 10/25/2020 19:09:52'!
turnLeft  

	currentCardinalDirection turnLeft.!

!methodRemoval: MarsRover #turnRight stamp: 'DB 10/25/2020 19:09:56'!
turnRight 

	currentCardinalDirection turnRight
	
!

!testRun: #MarsRoverTest #test01ForwardWhenPointingNorth stamp: 'DB 10/25/2020 19:15:08'!
PASSED!

!testRun: #MarsRoverTest #test02BackwardWhenPointingNorth stamp: 'DB 10/25/2020 19:15:08'!
PASSED!

!testRun: #MarsRoverTest #test03TuringLeftWhenPointingNorth stamp: 'DB 10/25/2020 19:15:08'!
PASSED!

!testRun: #MarsRoverTest #test04TurningRightWhenPointingNorth stamp: 'DB 10/25/2020 19:15:08'!
PASSED!

!testRun: #MarsRoverTest #test05ForwardWhenPointingEast stamp: 'DB 10/25/2020 19:15:08'!
PASSED!

!testRun: #MarsRoverTest #test06ForwardWhenPointingSouth stamp: 'DB 10/25/2020 19:15:08'!
PASSED!

!testRun: #MarsRoverTest #test07ForwardWhenPointingWest stamp: 'DB 10/25/2020 19:15:08'!
PASSED!

!testRun: #MarsRoverTest #test08BackwardWhenPointingEast stamp: 'DB 10/25/2020 19:15:08'!
PASSED!

!testRun: #MarsRoverTest #test09BackwardWhenPointingSouth stamp: 'DB 10/25/2020 19:15:08'!
PASSED!

!testRun: #MarsRoverTest #test10BackwardWhenPointingWest stamp: 'DB 10/25/2020 19:15:08'!
PASSED!

!testRun: #MarsRoverTest #test11TuringLeftWhenPointingEast stamp: 'DB 10/25/2020 19:15:08'!
PASSED!

!testRun: #MarsRoverTest #test12TuringLeftWhenPointingSouth stamp: 'DB 10/25/2020 19:15:08'!
PASSED!

!testRun: #MarsRoverTest #test13TuringLeftWhenPointingWest stamp: 'DB 10/25/2020 19:15:08'!
PASSED!

!testRun: #MarsRoverTest #test14TurningRightWhenPointingEast stamp: 'DB 10/25/2020 19:15:08'!
PASSED!

!testRun: #MarsRoverTest #test15TurningRightWhenPointingSouth stamp: 'DB 10/25/2020 19:15:08'!
PASSED!

!testRun: #MarsRoverTest #test16TurningRightWhenPointingWest stamp: 'DB 10/25/2020 19:15:08'!
PASSED!

!testRun: #MarsRoverTest #test17MultipleCommandsWhenPointingNorth stamp: 'DB 10/25/2020 19:15:08'!
PASSED!

!testRun: #MarsRoverTest #test18MultipleMixedCommandsWhenPointingNorth stamp: 'DB 10/25/2020 19:15:08'!
PASSED!

!testRun: #MarsRoverTest #test19DoesntContinueExecutingAfterAnInvalidCommand stamp: 'DB 10/25/2020 19:15:08'!
PASSED!

----SNAPSHOT----(25 October 2020 19:15:11) CuisUniversity-4384.image priorSource: 17285324!
!MarsRover methodsFor: 'accessing' stamp: 'DB 10/25/2020 19:16:09' prior: 50868186!
currentDirection

	^currentCardinalDirection ! !
!MarsRover class methodsFor: 'instance creation' stamp: 'DB 10/25/2020 19:18:22'!
signalInvalidCommand
	self error: self invalidCommand! !
!MarsRover class methodsFor: 'instance creation' stamp: 'DB 10/25/2020 19:19:23'!
invalidCommand
	^'Invalid command'! !
!MarsRover class methodsFor: 'instance creation' stamp: 'DB 10/25/2020 19:19:43' prior: 50872674!
invalidCommand

	^'Invalid command'! !
!MarsRover class methodsFor: 'instance creation' stamp: 'DB 10/25/2020 19:19:48' prior: 50872669!
signalInvalidCommand

	self error: self invalidCommand! !
!MarsRover methodsFor: 'movement' stamp: 'DB 10/25/2020 19:20:07' prior: 50871615!
move: commands 
	commands do: [:aCommand | 
		(self isValid: aCommand) ifFalse: [self signalInvalidCommand ].
		
		aCommand = $f ifTrue: [currentCardinalDirection moveForward ].	
		aCommand = $b ifTrue: [currentCardinalDirection moveBackward].
		aCommand = $l ifTrue: [currentCardinalDirection turnLeft].
		aCommand = $r ifTrue: [currentCardinalDirection turnRight].
	]
	! !

!testRun: #MarsRoverTest #test01ForwardWhenPointingNorth stamp: 'DB 10/25/2020 19:20:11'!
PASSED!

!testRun: #MarsRoverTest #test02BackwardWhenPointingNorth stamp: 'DB 10/25/2020 19:20:11'!
PASSED!

!testRun: #MarsRoverTest #test03TuringLeftWhenPointingNorth stamp: 'DB 10/25/2020 19:20:11'!
PASSED!

!testRun: #MarsRoverTest #test04TurningRightWhenPointingNorth stamp: 'DB 10/25/2020 19:20:11'!
PASSED!

!testRun: #MarsRoverTest #test05ForwardWhenPointingEast stamp: 'DB 10/25/2020 19:20:11'!
PASSED!

!testRun: #MarsRoverTest #test06ForwardWhenPointingSouth stamp: 'DB 10/25/2020 19:20:11'!
PASSED!

!testRun: #MarsRoverTest #test07ForwardWhenPointingWest stamp: 'DB 10/25/2020 19:20:11'!
PASSED!

!testRun: #MarsRoverTest #test08BackwardWhenPointingEast stamp: 'DB 10/25/2020 19:20:11'!
PASSED!

!testRun: #MarsRoverTest #test09BackwardWhenPointingSouth stamp: 'DB 10/25/2020 19:20:11'!
PASSED!

!testRun: #MarsRoverTest #test10BackwardWhenPointingWest stamp: 'DB 10/25/2020 19:20:11'!
PASSED!

!testRun: #MarsRoverTest #test11TuringLeftWhenPointingEast stamp: 'DB 10/25/2020 19:20:11'!
PASSED!

!testRun: #MarsRoverTest #test12TuringLeftWhenPointingSouth stamp: 'DB 10/25/2020 19:20:11'!
PASSED!

!testRun: #MarsRoverTest #test13TuringLeftWhenPointingWest stamp: 'DB 10/25/2020 19:20:11'!
PASSED!

!testRun: #MarsRoverTest #test14TurningRightWhenPointingEast stamp: 'DB 10/25/2020 19:20:11'!
PASSED!

!testRun: #MarsRoverTest #test15TurningRightWhenPointingSouth stamp: 'DB 10/25/2020 19:20:11'!
PASSED!

!testRun: #MarsRoverTest #test16TurningRightWhenPointingWest stamp: 'DB 10/25/2020 19:20:11'!
PASSED!

!testRun: #MarsRoverTest #test17MultipleCommandsWhenPointingNorth stamp: 'DB 10/25/2020 19:20:11'!
PASSED!

!testRun: #MarsRoverTest #test18MultipleMixedCommandsWhenPointingNorth stamp: 'DB 10/25/2020 19:20:11'!
PASSED!

!testRun: #MarsRoverTest #test19DoesntContinueExecutingAfterAnInvalidCommand stamp: 'DB 10/25/2020 19:20:11'!
ERROR!

!testRun: #MarsRoverTest #test19DoesntContinueExecutingAfterAnInvalidCommand stamp: 'DB 10/25/2020 19:20:11'!
ERROR!
!MarsRoverTest methodsFor: 'Invalid commands' stamp: 'DB 10/25/2020 19:22:16' prior: 50872183!
test19DoesntContinueExecutingAfterAnInvalidCommand
	
	| marsRover |
	marsRover := MarsRover atNorth: 1@1.
	
	"marsRover move: 'frffr=?xxyffr'."
	
	self should: [marsRover move: 'frffr=?xxyffr'.] raise: Error  withMessageText: MarsRover invalidCommand. 
	
	"self assert: ((marsRover currentPosition ) = (3@2)).
	self assert: ((marsRover currentDirection) isKindOf: SouthDirection)."! !

!testRun: #MarsRoverTest #test19DoesntContinueExecutingAfterAnInvalidCommand stamp: 'DB 10/25/2020 19:22:17'!
FAILURE!
!MarsRoverTest methodsFor: 'Invalid commands' stamp: 'DB 10/25/2020 19:24:11' prior: 50872769!
test19DoesntContinueExecutingAfterAnInvalidCommand
	
	| marsRover |
	marsRover := MarsRover atNorth: 1@1.
	
	"marsRover move: 'frffr=?xxyffr'."
	
	self 
		should: [marsRover move: 'frffr=?xxyffr'.] 
		raise: Error  
		withMessageText: MarsRover invalidCommand. 
	
	"self assert: ((marsRover currentPosition ) = (3@2)).
	self assert: ((marsRover currentDirection) isKindOf: SouthDirection)."! !
!MarsRover methodsFor: 'movement' stamp: 'DB 10/25/2020 19:25:27' prior: 50872689!
move: commands 
	commands do: [:aCommand | 
		(self isValid: aCommand) ifFalse: [self class signalInvalidCommand ].
		
		aCommand = $f ifTrue: [currentCardinalDirection moveForward ].	
		aCommand = $b ifTrue: [currentCardinalDirection moveBackward].
		aCommand = $l ifTrue: [currentCardinalDirection turnLeft].
		aCommand = $r ifTrue: [currentCardinalDirection turnRight].
	]
	! !

!testRun: #MarsRoverTest #test01ForwardWhenPointingNorth stamp: 'DB 10/25/2020 19:25:48'!
PASSED!

!testRun: #MarsRoverTest #test02BackwardWhenPointingNorth stamp: 'DB 10/25/2020 19:25:48'!
PASSED!

!testRun: #MarsRoverTest #test03TuringLeftWhenPointingNorth stamp: 'DB 10/25/2020 19:25:48'!
PASSED!

!testRun: #MarsRoverTest #test04TurningRightWhenPointingNorth stamp: 'DB 10/25/2020 19:25:48'!
PASSED!

!testRun: #MarsRoverTest #test05ForwardWhenPointingEast stamp: 'DB 10/25/2020 19:25:48'!
PASSED!

!testRun: #MarsRoverTest #test06ForwardWhenPointingSouth stamp: 'DB 10/25/2020 19:25:48'!
PASSED!

!testRun: #MarsRoverTest #test07ForwardWhenPointingWest stamp: 'DB 10/25/2020 19:25:48'!
PASSED!

!testRun: #MarsRoverTest #test08BackwardWhenPointingEast stamp: 'DB 10/25/2020 19:25:48'!
PASSED!

!testRun: #MarsRoverTest #test09BackwardWhenPointingSouth stamp: 'DB 10/25/2020 19:25:48'!
PASSED!

!testRun: #MarsRoverTest #test10BackwardWhenPointingWest stamp: 'DB 10/25/2020 19:25:48'!
PASSED!

!testRun: #MarsRoverTest #test11TuringLeftWhenPointingEast stamp: 'DB 10/25/2020 19:25:48'!
PASSED!

!testRun: #MarsRoverTest #test12TuringLeftWhenPointingSouth stamp: 'DB 10/25/2020 19:25:48'!
PASSED!

!testRun: #MarsRoverTest #test13TuringLeftWhenPointingWest stamp: 'DB 10/25/2020 19:25:48'!
PASSED!

!testRun: #MarsRoverTest #test14TurningRightWhenPointingEast stamp: 'DB 10/25/2020 19:25:48'!
PASSED!

!testRun: #MarsRoverTest #test15TurningRightWhenPointingSouth stamp: 'DB 10/25/2020 19:25:48'!
PASSED!

!testRun: #MarsRoverTest #test16TurningRightWhenPointingWest stamp: 'DB 10/25/2020 19:25:48'!
PASSED!

!testRun: #MarsRoverTest #test17MultipleCommandsWhenPointingNorth stamp: 'DB 10/25/2020 19:25:48'!
PASSED!

!testRun: #MarsRoverTest #test18MultipleMixedCommandsWhenPointingNorth stamp: 'DB 10/25/2020 19:25:48'!
PASSED!

!testRun: #MarsRoverTest #test19DoesntContinueExecutingAfterAnInvalidCommand stamp: 'DB 10/25/2020 19:25:48'!
PASSED!
!MarsRoverTest methodsFor: 'Invalid commands' stamp: 'DB 10/25/2020 19:26:10' prior: 50872788!
test19DoesntContinueExecutingAfterAnInvalidCommand
	
	| marsRover |
	marsRover := MarsRover atNorth: 1@1.
	
	"marsRover move: 'frffr=?xxyffr'."
	
	self 
		should: [marsRover move: 'frffr=?xxyffr'.] 
		raise: Error  
		withMessageText: MarsRover invalidCommand. 
	
	self assert: ((marsRover currentPosition ) = (3@2)).
	self assert: ((marsRover currentDirection) isKindOf: SouthDirection).! !

!testRun: #MarsRoverTest #test19DoesntContinueExecutingAfterAnInvalidCommand stamp: 'DB 10/25/2020 19:26:14'!
PASSED!
!MarsRoverTest methodsFor: 'Invalid commands' stamp: 'DB 10/25/2020 19:26:24' prior: 50872879!
test19DoesntContinueExecutingAfterAnInvalidCommand
	
	| marsRover |
	marsRover := MarsRover atNorth: 1@1.
	
	self 
		should: [marsRover move: 'frffr=?xxyffr'.] 
		raise: Error  
		withMessageText: MarsRover invalidCommand. 
	
	self assert: ((marsRover currentPosition ) = (3@2)).
	self assert: ((marsRover currentDirection) isKindOf: SouthDirection).! !
!MarsRover methodsFor: 'movement' stamp: 'DB 10/25/2020 19:29:17' prior: 50872803!
move: commands 
	commands do: [:aCommand | 
		(self isValid: aCommand) ifFalse: [self class signalInvalidCommand ].
		self step aCommand.
	]
	! !
!MarsRover methodsFor: 'movement' stamp: 'DB 10/25/2020 19:29:41'!
step: aCommand
		
	aCommand = $f ifTrue: [currentCardinalDirection moveForward ].	
	aCommand = $b ifTrue: [currentCardinalDirection moveBackward].
	aCommand = $l ifTrue: [currentCardinalDirection turnLeft].
	aCommand = $r ifTrue: [currentCardinalDirection turnRight].! !

!testRun: #MarsRoverTest #test01ForwardWhenPointingNorth stamp: 'DB 10/25/2020 19:29:49'!
ERROR!

!testRun: #MarsRoverTest #test02BackwardWhenPointingNorth stamp: 'DB 10/25/2020 19:29:49'!
ERROR!

!testRun: #MarsRoverTest #test03TuringLeftWhenPointingNorth stamp: 'DB 10/25/2020 19:29:49'!
ERROR!

!testRun: #MarsRoverTest #test04TurningRightWhenPointingNorth stamp: 'DB 10/25/2020 19:29:49'!
ERROR!

!testRun: #MarsRoverTest #test05ForwardWhenPointingEast stamp: 'DB 10/25/2020 19:29:49'!
ERROR!

!testRun: #MarsRoverTest #test06ForwardWhenPointingSouth stamp: 'DB 10/25/2020 19:29:49'!
ERROR!

!testRun: #MarsRoverTest #test07ForwardWhenPointingWest stamp: 'DB 10/25/2020 19:29:49'!
ERROR!

!testRun: #MarsRoverTest #test08BackwardWhenPointingEast stamp: 'DB 10/25/2020 19:29:49'!
ERROR!

!testRun: #MarsRoverTest #test09BackwardWhenPointingSouth stamp: 'DB 10/25/2020 19:29:49'!
ERROR!

!testRun: #MarsRoverTest #test10BackwardWhenPointingWest stamp: 'DB 10/25/2020 19:29:49'!
ERROR!

!testRun: #MarsRoverTest #test11TuringLeftWhenPointingEast stamp: 'DB 10/25/2020 19:29:49'!
ERROR!

!testRun: #MarsRoverTest #test12TuringLeftWhenPointingSouth stamp: 'DB 10/25/2020 19:29:49'!
ERROR!

!testRun: #MarsRoverTest #test13TuringLeftWhenPointingWest stamp: 'DB 10/25/2020 19:29:49'!
ERROR!

!testRun: #MarsRoverTest #test14TurningRightWhenPointingEast stamp: 'DB 10/25/2020 19:29:49'!
ERROR!

!testRun: #MarsRoverTest #test15TurningRightWhenPointingSouth stamp: 'DB 10/25/2020 19:29:49'!
ERROR!

!testRun: #MarsRoverTest #test16TurningRightWhenPointingWest stamp: 'DB 10/25/2020 19:29:49'!
ERROR!

!testRun: #MarsRoverTest #test17MultipleCommandsWhenPointingNorth stamp: 'DB 10/25/2020 19:29:49'!
ERROR!

!testRun: #MarsRoverTest #test18MultipleMixedCommandsWhenPointingNorth stamp: 'DB 10/25/2020 19:29:49'!
ERROR!

!testRun: #MarsRoverTest #test19DoesntContinueExecutingAfterAnInvalidCommand stamp: 'DB 10/25/2020 19:29:49'!
FAILURE!
!MarsRover methodsFor: 'movement' stamp: 'DB 10/25/2020 19:30:28' prior: 50872912!
move: commands 
	commands do: [:aCommand | 
		(self isValid: aCommand) ifFalse: [self class signalInvalidCommand ].
		self moveOnestep aCommand.
	]
	! !
!MarsRover methodsFor: 'movement' stamp: 'DB 10/25/2020 19:30:35'!
moveOnestep: aCommand
		
	aCommand = $f ifTrue: [currentCardinalDirection moveForward ].	
	aCommand = $b ifTrue: [currentCardinalDirection moveBackward].
	aCommand = $l ifTrue: [currentCardinalDirection turnLeft].
	aCommand = $r ifTrue: [currentCardinalDirection turnRight].! !

!methodRemoval: MarsRover #step: stamp: 'DB 10/25/2020 19:30:41'!
step: aCommand
		
	aCommand = $f ifTrue: [currentCardinalDirection moveForward ].	
	aCommand = $b ifTrue: [currentCardinalDirection moveBackward].
	aCommand = $l ifTrue: [currentCardinalDirection turnLeft].
	aCommand = $r ifTrue: [currentCardinalDirection turnRight].!

!testRun: #MarsRoverTest #test01ForwardWhenPointingNorth stamp: 'DB 10/25/2020 19:30:45'!
ERROR!

!testRun: #MarsRoverTest #test02BackwardWhenPointingNorth stamp: 'DB 10/25/2020 19:30:45'!
ERROR!

!testRun: #MarsRoverTest #test03TuringLeftWhenPointingNorth stamp: 'DB 10/25/2020 19:30:45'!
ERROR!

!testRun: #MarsRoverTest #test04TurningRightWhenPointingNorth stamp: 'DB 10/25/2020 19:30:45'!
ERROR!

!testRun: #MarsRoverTest #test05ForwardWhenPointingEast stamp: 'DB 10/25/2020 19:30:45'!
ERROR!

!testRun: #MarsRoverTest #test06ForwardWhenPointingSouth stamp: 'DB 10/25/2020 19:30:45'!
ERROR!

!testRun: #MarsRoverTest #test07ForwardWhenPointingWest stamp: 'DB 10/25/2020 19:30:45'!
ERROR!

!testRun: #MarsRoverTest #test08BackwardWhenPointingEast stamp: 'DB 10/25/2020 19:30:45'!
ERROR!

!testRun: #MarsRoverTest #test09BackwardWhenPointingSouth stamp: 'DB 10/25/2020 19:30:45'!
ERROR!

!testRun: #MarsRoverTest #test10BackwardWhenPointingWest stamp: 'DB 10/25/2020 19:30:45'!
ERROR!

!testRun: #MarsRoverTest #test11TuringLeftWhenPointingEast stamp: 'DB 10/25/2020 19:30:45'!
ERROR!

!testRun: #MarsRoverTest #test12TuringLeftWhenPointingSouth stamp: 'DB 10/25/2020 19:30:45'!
ERROR!

!testRun: #MarsRoverTest #test13TuringLeftWhenPointingWest stamp: 'DB 10/25/2020 19:30:45'!
ERROR!

!testRun: #MarsRoverTest #test14TurningRightWhenPointingEast stamp: 'DB 10/25/2020 19:30:45'!
ERROR!

!testRun: #MarsRoverTest #test15TurningRightWhenPointingSouth stamp: 'DB 10/25/2020 19:30:45'!
ERROR!

!testRun: #MarsRoverTest #test16TurningRightWhenPointingWest stamp: 'DB 10/25/2020 19:30:45'!
ERROR!

!testRun: #MarsRoverTest #test17MultipleCommandsWhenPointingNorth stamp: 'DB 10/25/2020 19:30:45'!
ERROR!

!testRun: #MarsRoverTest #test18MultipleMixedCommandsWhenPointingNorth stamp: 'DB 10/25/2020 19:30:45'!
ERROR!

!testRun: #MarsRoverTest #test19DoesntContinueExecutingAfterAnInvalidCommand stamp: 'DB 10/25/2020 19:30:45'!
FAILURE!

!testRun: #MarsRoverTest #test01ForwardWhenPointingNorth stamp: 'DB 10/25/2020 19:30:48'!
ERROR!
!MarsRover methodsFor: 'movement' stamp: 'DB 10/25/2020 19:31:35' prior: 50872991!
move: commands 
	commands do: [:aCommand | 
		(self isValid: aCommand) ifFalse: [self class signalInvalidCommand ].
		self moveOnestep: aCommand.
	]
	! !

!testRun: #MarsRoverTest #test01ForwardWhenPointingNorth stamp: 'DB 10/25/2020 19:31:36'!
PASSED!

!testRun: #MarsRoverTest #test01ForwardWhenPointingNorth stamp: 'DB 10/25/2020 19:31:41'!
PASSED!

!testRun: #MarsRoverTest #test02BackwardWhenPointingNorth stamp: 'DB 10/25/2020 19:31:41'!
PASSED!

!testRun: #MarsRoverTest #test03TuringLeftWhenPointingNorth stamp: 'DB 10/25/2020 19:31:41'!
PASSED!

!testRun: #MarsRoverTest #test04TurningRightWhenPointingNorth stamp: 'DB 10/25/2020 19:31:41'!
PASSED!

!testRun: #MarsRoverTest #test05ForwardWhenPointingEast stamp: 'DB 10/25/2020 19:31:41'!
PASSED!

!testRun: #MarsRoverTest #test06ForwardWhenPointingSouth stamp: 'DB 10/25/2020 19:31:41'!
PASSED!

!testRun: #MarsRoverTest #test07ForwardWhenPointingWest stamp: 'DB 10/25/2020 19:31:41'!
PASSED!

!testRun: #MarsRoverTest #test08BackwardWhenPointingEast stamp: 'DB 10/25/2020 19:31:41'!
PASSED!

!testRun: #MarsRoverTest #test09BackwardWhenPointingSouth stamp: 'DB 10/25/2020 19:31:41'!
PASSED!

!testRun: #MarsRoverTest #test10BackwardWhenPointingWest stamp: 'DB 10/25/2020 19:31:41'!
PASSED!

!testRun: #MarsRoverTest #test11TuringLeftWhenPointingEast stamp: 'DB 10/25/2020 19:31:41'!
PASSED!

!testRun: #MarsRoverTest #test12TuringLeftWhenPointingSouth stamp: 'DB 10/25/2020 19:31:41'!
PASSED!

!testRun: #MarsRoverTest #test13TuringLeftWhenPointingWest stamp: 'DB 10/25/2020 19:31:41'!
PASSED!

!testRun: #MarsRoverTest #test14TurningRightWhenPointingEast stamp: 'DB 10/25/2020 19:31:41'!
PASSED!

!testRun: #MarsRoverTest #test15TurningRightWhenPointingSouth stamp: 'DB 10/25/2020 19:31:41'!
PASSED!

!testRun: #MarsRoverTest #test16TurningRightWhenPointingWest stamp: 'DB 10/25/2020 19:31:41'!
PASSED!

!testRun: #MarsRoverTest #test17MultipleCommandsWhenPointingNorth stamp: 'DB 10/25/2020 19:31:41'!
PASSED!

!testRun: #MarsRoverTest #test18MultipleMixedCommandsWhenPointingNorth stamp: 'DB 10/25/2020 19:31:41'!
PASSED!

!testRun: #MarsRoverTest #test19DoesntContinueExecutingAfterAnInvalidCommand stamp: 'DB 10/25/2020 19:31:41'!
PASSED!
!MarsRover methodsFor: 'movement' stamp: 'DB 10/25/2020 19:32:25'!
moveOneStep: aCommand
		
	aCommand = $f ifTrue: [currentCardinalDirection moveForward ].	
	aCommand = $b ifTrue: [currentCardinalDirection moveBackward].
	aCommand = $l ifTrue: [currentCardinalDirection turnLeft].
	aCommand = $r ifTrue: [currentCardinalDirection turnRight].! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'DB 10/25/2020 19:32:25' prior: 50873084!
move: commands 
	commands do: [:aCommand | 
		(self isValid: aCommand) ifFalse: [self class signalInvalidCommand ].
		self moveOneStep: aCommand.
	]
	! !

!methodRemoval: MarsRover #moveOnestep: stamp: 'DB 10/25/2020 19:32:25'!
moveOnestep: aCommand
		
	aCommand = $f ifTrue: [currentCardinalDirection moveForward ].	
	aCommand = $b ifTrue: [currentCardinalDirection moveBackward].
	aCommand = $l ifTrue: [currentCardinalDirection turnLeft].
	aCommand = $r ifTrue: [currentCardinalDirection turnRight].!
!MarsRover methodsFor: 'movement' stamp: 'DB 10/25/2020 19:37:56'!
validateCommand: aCommand

	^ (self isValid: aCommand) ifFalse: [self class signalInvalidCommand ]! !
!MarsRover methodsFor: 'movement' stamp: 'DB 10/25/2020 19:37:56' prior: 50873167!
move: commands 
	commands do: [:aCommand | 
		self validateCommand: aCommand.
		self moveOneStep: aCommand.
	]
	! !

----SNAPSHOT----(25 October 2020 19:40:55) CuisUniversity-4384.image priorSource: 17312327!
!MarsRover methodsFor: 'movement' stamp: 'DB 10/25/2020 19:42:17' prior: 50873155!
moveOneStep: aCommand
		
	aCommand = $f ifTrue: [currentCardinalDirection moveForward ].	
	aCommand = $b ifTrue: [currentCardinalDirection moveBackward].
	aCommand = $l ifTrue: [currentCardinalDirection turnLeft].
	aCommand = $r ifTrue: [currentCardinalDirection turnRight].! !

Object subclass: #Command
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Mars Rover'!

!classDefinition: #Command category: 'Mars Rover' stamp: 'DB 10/25/2020 19:42:33'!
Object subclass: #Command
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Mars Rover'!

Command subclass: #ForwardCommand
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Mars Rover'!

!classDefinition: #ForwardCommand category: 'Mars Rover' stamp: 'DB 10/25/2020 19:42:47'!
Command subclass: #ForwardCommand
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Mars Rover'!

Command subclass: #BackwardCommand
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Mars Rover'!

!classDefinition: #BackwardCommand category: 'Mars Rover' stamp: 'DB 10/25/2020 19:42:53'!
Command subclass: #BackwardCommand
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Mars Rover'!

Command subclass: #TurnRightCommand
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Mars Rover'!

!classDefinition: #TurnRightCommand category: 'Mars Rover' stamp: 'DB 10/25/2020 19:43:06'!
Command subclass: #TurnRightCommand
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Mars Rover'!

Command subclass: #TurnLeftCommand
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Mars Rover'!

!classDefinition: #TurnLeftCommand category: 'Mars Rover' stamp: 'DB 10/25/2020 19:43:12'!
Command subclass: #TurnLeftCommand
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Mars Rover'!
!Command methodsFor: 'nil' stamp: 'DB 10/25/2020 19:43:33'!
move
	self subclassResponsibility ! !

!classDefinition: #BackwardCommand category: 'Mars Rover' stamp: 'DB 10/25/2020 19:44:14'!
Command subclass: #BackwardCommand
	instanceVariableNames: 'cardinalDirection'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Mars Rover'!
!BackwardCommand methodsFor: 'nil' stamp: 'DB 10/25/2020 19:44:12' overrides: 50873267!
move
	
	cardinalDirection moveBackward! !
!BackwardCommand methodsFor: 'as yet unclassified' stamp: 'DB 10/25/2020 19:44:20' prior: 50873279 overrides: 50873267!
move

	cardinalDirection moveBackward! !

Object subclass: #Command
	instanceVariableNames: 'cardinalDirection'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Mars Rover'!

!methodRemoval: BackwardCommand #move stamp: 'DB 10/25/2020 19:45:12'!
move

	cardinalDirection moveBackward!

Command subclass: #BackwardCommand
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Mars Rover'!

!classDefinition: #BackwardCommand category: 'Mars Rover' stamp: 'DB 10/25/2020 19:45:19'!
Command subclass: #BackwardCommand
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Mars Rover'!

Object subclass: #Command
	instanceVariableNames: 'cardinalDirection'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Mars Rover'!

!classDefinition: #Command category: 'Mars Rover' stamp: 'DB 10/25/2020 19:45:25'!
Object subclass: #Command
	instanceVariableNames: 'cardinalDirection'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Mars Rover'!
!BackwardCommand methodsFor: 'nil' stamp: 'DB 10/25/2020 19:45:43' overrides: 50873267!
move

	cardinalDirection moveBackwad! !
!BackwardCommand methodsFor: 'as yet unclassified' stamp: 'DB 10/25/2020 19:45:48' prior: 50873320 overrides: 50873267!
move

	cardinalDirection moveBackward! !
!ForwardCommand methodsFor: 'nil' stamp: 'DB 10/25/2020 19:46:27' overrides: 50873267!
move

	cardinalDirection moveForward ! !
!TurnLeftCommand methodsFor: 'nil' stamp: 'DB 10/25/2020 19:46:45' overrides: 50873267!
move

	cardinalDirection turnLeft ! !
!TurnRightCommand methodsFor: 'nil' stamp: 'DB 10/25/2020 19:47:10' overrides: 50873267!
move
	
	cardinalDirection turnRight ! !
!Command methodsFor: 'as yet unclassified' stamp: 'DB 10/25/2020 19:47:27'!
isValid

	self false! !
!Command methodsFor: 'as yet unclassified' stamp: 'DB 10/25/2020 19:47:30' prior: 50873342!
isValid

	^self false! !
!Command methodsFor: 'as yet unclassified' stamp: 'DB 10/25/2020 19:47:33' prior: 50873346!
isValid

	^self false! !
!BackwardCommand methodsFor: 'as yet unclassified' stamp: 'DB 10/25/2020 19:47:50' overrides: 50873350!
isValid
	
	^True! !
!ForwardCommand methodsFor: 'as yet unclassified' stamp: 'DB 10/25/2020 19:48:12' overrides: 50873350!
isValid
	
	^true! !
!TurnLeftCommand methodsFor: 'as yet unclassified' stamp: 'DB 10/25/2020 19:48:25' overrides: 50873350!
isValid

	^true! !
!TurnRightCommand methodsFor: 'as yet unclassified' stamp: 'DB 10/25/2020 19:48:36' overrides: 50873350!
isValid
	
	^true! !
!BackwardCommand methodsFor: 'as yet unclassified' stamp: 'DB 10/25/2020 19:48:42' prior: 50873355 overrides: 50873350!
isValid
	
	^true! !
!BackwardCommand methodsFor: 'as yet unclassified' stamp: 'DB 10/25/2020 19:50:21'!
isValid: aCommand
	
	^aCommand  = $b! !
!Command class methodsFor: 'nil' stamp: 'DB 10/25/2020 19:51:44'!
isFor: aCommand

	self subclassResponsibility ! !
!BackwardCommand class methodsFor: 'nil' stamp: 'DB 10/25/2020 19:52:10' overrides: 50873380!
isFor: aCommand

	^aCommand = 'b'! !
!BackwardCommand class methodsFor: 'as yet unclassified' stamp: 'DB 10/25/2020 19:52:16' prior: 50873385 overrides: 50873380!
isFor: aCommand

	^aCommand = $b! !
!ForwardCommand class methodsFor: 'nil' stamp: 'DB 10/25/2020 19:52:26' overrides: 50873380!
isFor: aCommand

	^aCommand = $f! !
!TurnLeftCommand class methodsFor: 'nil' stamp: 'DB 10/25/2020 19:52:34' overrides: 50873380!
isFor: aCommand

	^aCommand = $l! !
!TurnRightCommand class methodsFor: 'nil' stamp: 'DB 10/25/2020 19:52:41' overrides: 50873380!
isFor: aCommand

	^aCommand = $r! !
!Command class methodsFor: 'as yet unclassified' stamp: 'DB 10/25/2020 19:54:54'!
for: aCommand ifNone: aNoneCommand

	^self subclasses 
		detect: [ :aCommandClass | aCommandClass isFor: aCommand ]
		! !
!Command class methodsFor: 'as yet unclassified' stamp: 'DB 10/25/2020 19:56:01' prior: 50873410!
for: aCommand ifNone: aNoneCommand

	^self subclasses  
		detect: [ :aCommandClass | aCommandClass isFor: aCommand ] 
		ifFound: [ :aCommandClass | aCommandClass new] 
		ifNone: aNoneCommand	
		! !
!BackwardCommand methodsFor: 'as yet unclassified' stamp: 'DB 10/25/2020 20:05:14'!
canHandle: aCommand
	
	^aCommand  = $b! !

!methodRemoval: BackwardCommand #isValid stamp: 'DB 10/25/2020 20:05:22'!
isValid
	
	^true!

!methodRemoval: BackwardCommand #isValid: stamp: 'DB 10/25/2020 20:05:30'!
isValid: aCommand
	
	^aCommand  = $b!
!Command methodsFor: 'as yet unclassified' stamp: 'DB 10/25/2020 20:05:48'!
canHandle

	^self subclassResponsibility ! !
!Command methodsFor: 'as yet unclassified' stamp: 'DB 10/25/2020 20:05:58' prior: 50873437!
canHandle

	self subclassResponsibility ! !

!methodRemoval: Command #canHandle stamp: 'DB 10/25/2020 20:06:09'!
canHandle

	self subclassResponsibility !
!Command class methodsFor: 'as yet unclassified' stamp: 'DB 10/25/2020 20:07:28'!
canHandle
	
	self subclassResponsibility ! !
!Command class methodsFor: 'as yet unclassified' stamp: 'DB 10/25/2020 20:08:15'!
for: aCardinalDirection
	
	^self new initilizeFor: aCardinalDirection ! !
!MarsRover methodsFor: 'movement' stamp: 'DB 10/25/2020 20:14:46' prior: 50873191!
move: commands 
	commands do: [:aCommand | | com | 
		
		com := Command for: aCommand with: currentCardinalDirection ifNone: [^self class signalInvalidCommand ]. 
		com move.
		
		"self validateCommand: aCommand.
		self moveOneStep: aCommand."
	]
	! !
!Command class methodsFor: 'as yet unclassified' stamp: 'DB 10/25/2020 20:15:33'!
for: aCommand with: aCardinalDirection ifNone: aNoneCommand

	^self subclasses  
		detect: [ :aCommandClass | aCommandClass isFor: aCommand ] 
		ifFound: [ :aCommandClass | aCommandClass with: aCardinalDirection ] 
		ifNone: aNoneCommand	
		! !

!methodRemoval: Command class #for:ifNone: stamp: 'DB 10/25/2020 20:15:42'!
for: aCommand ifNone: aNoneCommand

	^self subclasses  
		detect: [ :aCommandClass | aCommandClass isFor: aCommand ] 
		ifFound: [ :aCommandClass | aCommandClass new] 
		ifNone: aNoneCommand	
		!
!Command class methodsFor: 'as yet unclassified' stamp: 'DB 10/25/2020 20:15:58' prior: 50873470!
for: aCommand with: aCardinalDirection ifNone: aNoneCommand

	^self subclasses  
		detect: [ :aCommandClass | aCommandClass isFor: aCommand ] 
		ifFound: [ :aCommandClass | aCommandClass initilizeFor: aCardinalDirection ] 
		ifNone: aNoneCommand	
		! !

!methodRemoval: Command class #isFor: stamp: 'DB 10/25/2020 20:16:08'!
isFor: aCommand

	self subclassResponsibility !
!Command class methodsFor: 'as yet unclassified' stamp: 'DB 10/25/2020 20:16:28' prior: 50873490!
for: aCommand with: aCardinalDirection ifNone: aNoneCommand

	^self subclasses  
		detect: [ :aCommandClass | aCommandClass canHandle: aCommand ] 
		ifFound: [ :aCommandClass | aCommandClass initilizeFor: aCardinalDirection ] 
		ifNone: aNoneCommand	
		! !
!Command class methodsFor: 'as yet unclassified' stamp: 'DB 10/25/2020 20:17:04' prior: 50873505!
for: aCommand with: aCardinalDirection ifNone: aNoneCommand

	^self subclasses  
		detect: [ :aCommandClass | aCommandClass canHandle: aCommand ] 
		ifFound: [ :aCommandClass | aCommandClass for: aCardinalDirection ] 
		ifNone: aNoneCommand	
		! !
!Command methodsFor: 'as yet unclassified' stamp: 'DB 10/25/2020 20:17:46'!
initilizeFor: aCardinalDirection

	cardinalDirection  := aCardinalDirection ! !

!methodRemoval: ForwardCommand #isValid stamp: 'DB 10/25/2020 20:18:07'!
isValid
	
	^true!

!methodRemoval: TurnLeftCommand #isValid stamp: 'DB 10/25/2020 20:18:20'!
isValid

	^true!

!methodRemoval: TurnRightCommand #isValid stamp: 'DB 10/25/2020 20:18:26'!
isValid
	
	^true!
!TurnRightCommand class methodsFor: 'as yet unclassified' stamp: 'DB 10/25/2020 20:18:58'!
canHandle: aCommand

	^aCommand = $r! !

!methodRemoval: TurnRightCommand class #isFor: stamp: 'DB 10/25/2020 20:18:58'!
isFor: aCommand

	^aCommand = $r!
!TurnLeftCommand class methodsFor: 'as yet unclassified' stamp: 'DB 10/25/2020 20:19:10'!
canHandle: aCommand

	^aCommand = $l! !

!methodRemoval: TurnLeftCommand class #isFor: stamp: 'DB 10/25/2020 20:19:14'!
isFor: aCommand

	^aCommand = $l!
!ForwardCommand class methodsFor: 'as yet unclassified' stamp: 'DB 10/25/2020 20:19:25'!
canHandle: aCommand

	^aCommand = $f! !

!methodRemoval: ForwardCommand class #isFor: stamp: 'DB 10/25/2020 20:19:29'!
isFor: aCommand

	^aCommand = $f!
!BackwardCommand class methodsFor: 'as yet unclassified' stamp: 'DB 10/25/2020 20:19:39'!
canHandle: aCommand

	^aCommand = $b! !

!methodRemoval: BackwardCommand class #isFor: stamp: 'DB 10/25/2020 20:19:45'!
isFor: aCommand

	^aCommand = $b!

!methodRemoval: Command #isValid stamp: 'DB 10/25/2020 20:20:00'!
isValid

	^self false!

!methodRemoval: BackwardCommand #canHandle: stamp: 'DB 10/25/2020 20:20:13'!
canHandle: aCommand
	
	^aCommand  = $b!

!testRun: #MarsRoverTest #test01ForwardWhenPointingNorth stamp: 'DB 10/25/2020 20:20:35'!
PASSED!

!testRun: #MarsRoverTest #test02BackwardWhenPointingNorth stamp: 'DB 10/25/2020 20:20:35'!
PASSED!

!testRun: #MarsRoverTest #test03TuringLeftWhenPointingNorth stamp: 'DB 10/25/2020 20:20:35'!
PASSED!

!testRun: #MarsRoverTest #test04TurningRightWhenPointingNorth stamp: 'DB 10/25/2020 20:20:35'!
PASSED!

!testRun: #MarsRoverTest #test05ForwardWhenPointingEast stamp: 'DB 10/25/2020 20:20:35'!
PASSED!

!testRun: #MarsRoverTest #test06ForwardWhenPointingSouth stamp: 'DB 10/25/2020 20:20:35'!
PASSED!

!testRun: #MarsRoverTest #test07ForwardWhenPointingWest stamp: 'DB 10/25/2020 20:20:35'!
PASSED!

!testRun: #MarsRoverTest #test08BackwardWhenPointingEast stamp: 'DB 10/25/2020 20:20:35'!
PASSED!

!testRun: #MarsRoverTest #test09BackwardWhenPointingSouth stamp: 'DB 10/25/2020 20:20:35'!
PASSED!

!testRun: #MarsRoverTest #test10BackwardWhenPointingWest stamp: 'DB 10/25/2020 20:20:35'!
PASSED!

!testRun: #MarsRoverTest #test11TuringLeftWhenPointingEast stamp: 'DB 10/25/2020 20:20:35'!
PASSED!

!testRun: #MarsRoverTest #test12TuringLeftWhenPointingSouth stamp: 'DB 10/25/2020 20:20:35'!
PASSED!

!testRun: #MarsRoverTest #test13TuringLeftWhenPointingWest stamp: 'DB 10/25/2020 20:20:36'!
PASSED!

!testRun: #MarsRoverTest #test14TurningRightWhenPointingEast stamp: 'DB 10/25/2020 20:20:36'!
PASSED!

!testRun: #MarsRoverTest #test15TurningRightWhenPointingSouth stamp: 'DB 10/25/2020 20:20:36'!
PASSED!

!testRun: #MarsRoverTest #test16TurningRightWhenPointingWest stamp: 'DB 10/25/2020 20:20:36'!
PASSED!

!testRun: #MarsRoverTest #test17MultipleCommandsWhenPointingNorth stamp: 'DB 10/25/2020 20:20:36'!
PASSED!

!testRun: #MarsRoverTest #test18MultipleMixedCommandsWhenPointingNorth stamp: 'DB 10/25/2020 20:20:36'!
PASSED!

!testRun: #MarsRoverTest #test19DoesntContinueExecutingAfterAnInvalidCommand stamp: 'DB 10/25/2020 20:20:36'!
PASSED!

!methodRemoval: MarsRover #isValid: stamp: 'DB 10/25/2020 20:20:51'!
isValid: aCommand 

	^ (aCommand = $f) or: (aCommand = $b) or: (aCommand = $l) or: (aCommand = $r).
	!

!testRun: #MarsRoverTest #test01ForwardWhenPointingNorth stamp: 'DB 10/25/2020 20:20:55'!
PASSED!

!testRun: #MarsRoverTest #test02BackwardWhenPointingNorth stamp: 'DB 10/25/2020 20:20:55'!
PASSED!

!testRun: #MarsRoverTest #test03TuringLeftWhenPointingNorth stamp: 'DB 10/25/2020 20:20:55'!
PASSED!

!testRun: #MarsRoverTest #test04TurningRightWhenPointingNorth stamp: 'DB 10/25/2020 20:20:55'!
PASSED!

!testRun: #MarsRoverTest #test05ForwardWhenPointingEast stamp: 'DB 10/25/2020 20:20:55'!
PASSED!

!testRun: #MarsRoverTest #test06ForwardWhenPointingSouth stamp: 'DB 10/25/2020 20:20:55'!
PASSED!

!testRun: #MarsRoverTest #test07ForwardWhenPointingWest stamp: 'DB 10/25/2020 20:20:55'!
PASSED!

!testRun: #MarsRoverTest #test08BackwardWhenPointingEast stamp: 'DB 10/25/2020 20:20:55'!
PASSED!

!testRun: #MarsRoverTest #test09BackwardWhenPointingSouth stamp: 'DB 10/25/2020 20:20:55'!
PASSED!

!testRun: #MarsRoverTest #test10BackwardWhenPointingWest stamp: 'DB 10/25/2020 20:20:55'!
PASSED!

!testRun: #MarsRoverTest #test11TuringLeftWhenPointingEast stamp: 'DB 10/25/2020 20:20:55'!
PASSED!

!testRun: #MarsRoverTest #test12TuringLeftWhenPointingSouth stamp: 'DB 10/25/2020 20:20:55'!
PASSED!

!testRun: #MarsRoverTest #test13TuringLeftWhenPointingWest stamp: 'DB 10/25/2020 20:20:55'!
PASSED!

!testRun: #MarsRoverTest #test14TurningRightWhenPointingEast stamp: 'DB 10/25/2020 20:20:55'!
PASSED!

!testRun: #MarsRoverTest #test15TurningRightWhenPointingSouth stamp: 'DB 10/25/2020 20:20:55'!
PASSED!

!testRun: #MarsRoverTest #test16TurningRightWhenPointingWest stamp: 'DB 10/25/2020 20:20:55'!
PASSED!

!testRun: #MarsRoverTest #test17MultipleCommandsWhenPointingNorth stamp: 'DB 10/25/2020 20:20:55'!
PASSED!

!testRun: #MarsRoverTest #test18MultipleMixedCommandsWhenPointingNorth stamp: 'DB 10/25/2020 20:20:55'!
PASSED!

!testRun: #MarsRoverTest #test19DoesntContinueExecutingAfterAnInvalidCommand stamp: 'DB 10/25/2020 20:20:55'!
PASSED!

!methodRemoval: MarsRover #moveOneStep: stamp: 'DB 10/25/2020 20:21:07'!
moveOneStep: aCommand
		
	aCommand = $f ifTrue: [currentCardinalDirection moveForward ].	
	aCommand = $b ifTrue: [currentCardinalDirection moveBackward].
	aCommand = $l ifTrue: [currentCardinalDirection turnLeft].
	aCommand = $r ifTrue: [currentCardinalDirection turnRight].!
!MarsRover methodsFor: 'movement' stamp: 'DB 10/25/2020 20:21:16' prior: 50873459!
move: commands 
	commands do: [:aCommand | | com | 
		
		com := Command for: aCommand with: currentCardinalDirection ifNone: [^self class signalInvalidCommand ]. 
		com move.
		
	]
	! !

!testRun: #MarsRoverTest #test01ForwardWhenPointingNorth stamp: 'DB 10/25/2020 20:21:18'!
PASSED!

!testRun: #MarsRoverTest #test02BackwardWhenPointingNorth stamp: 'DB 10/25/2020 20:21:18'!
PASSED!

!testRun: #MarsRoverTest #test03TuringLeftWhenPointingNorth stamp: 'DB 10/25/2020 20:21:18'!
PASSED!

!testRun: #MarsRoverTest #test04TurningRightWhenPointingNorth stamp: 'DB 10/25/2020 20:21:18'!
PASSED!

!testRun: #MarsRoverTest #test05ForwardWhenPointingEast stamp: 'DB 10/25/2020 20:21:18'!
PASSED!

!testRun: #MarsRoverTest #test06ForwardWhenPointingSouth stamp: 'DB 10/25/2020 20:21:18'!
PASSED!

!testRun: #MarsRoverTest #test07ForwardWhenPointingWest stamp: 'DB 10/25/2020 20:21:18'!
PASSED!

!testRun: #MarsRoverTest #test08BackwardWhenPointingEast stamp: 'DB 10/25/2020 20:21:19'!
PASSED!

!testRun: #MarsRoverTest #test09BackwardWhenPointingSouth stamp: 'DB 10/25/2020 20:21:19'!
PASSED!

!testRun: #MarsRoverTest #test10BackwardWhenPointingWest stamp: 'DB 10/25/2020 20:21:19'!
PASSED!

!testRun: #MarsRoverTest #test11TuringLeftWhenPointingEast stamp: 'DB 10/25/2020 20:21:19'!
PASSED!

!testRun: #MarsRoverTest #test12TuringLeftWhenPointingSouth stamp: 'DB 10/25/2020 20:21:19'!
PASSED!

!testRun: #MarsRoverTest #test13TuringLeftWhenPointingWest stamp: 'DB 10/25/2020 20:21:19'!
PASSED!

!testRun: #MarsRoverTest #test14TurningRightWhenPointingEast stamp: 'DB 10/25/2020 20:21:19'!
PASSED!

!testRun: #MarsRoverTest #test15TurningRightWhenPointingSouth stamp: 'DB 10/25/2020 20:21:19'!
PASSED!

!testRun: #MarsRoverTest #test16TurningRightWhenPointingWest stamp: 'DB 10/25/2020 20:21:19'!
PASSED!

!testRun: #MarsRoverTest #test17MultipleCommandsWhenPointingNorth stamp: 'DB 10/25/2020 20:21:19'!
PASSED!

!testRun: #MarsRoverTest #test18MultipleMixedCommandsWhenPointingNorth stamp: 'DB 10/25/2020 20:21:19'!
PASSED!

!testRun: #MarsRoverTest #test19DoesntContinueExecutingAfterAnInvalidCommand stamp: 'DB 10/25/2020 20:21:19'!
PASSED!
!MarsRover methodsFor: 'movement' stamp: 'DB 10/25/2020 20:21:57' prior: 50873720!
move: commands 
	commands do: [:aCommand | 
		| aStep | 
		
		aStep := Command for: aCommand with: currentCardinalDirection ifNone: [^self class signalInvalidCommand ]. 
		aStep move.
		
	]
	! !

!methodRemoval: MarsRover #validateCommand: stamp: 'DB 10/25/2020 20:22:31'!
validateCommand: aCommand

	^ (self isValid: aCommand) ifFalse: [self class signalInvalidCommand ]!
!MarsRoverTest methodsFor: 'Backward tests' stamp: 'DB 10/25/2020 20:27:54'!
assertCorrectPositionAfterBackwardMovement: aMarsRover expectPosition: endPosition

	aMarsRover move: 'b'.	
	self assert: ((aMarsRover currentPosition) = (endPosition))! !
!MarsRoverTest methodsFor: 'Backward tests' stamp: 'DB 10/25/2020 20:28:36' prior: 50871842!
test02BackwardWhenPointingNorth

	self assertCorrectPositionAfterBackwardMovement: (MarsRover atNorth: 1@1) expectPosition: (1@0).
	
	"| marsRover |
	marsRover := MarsRover atNorth: 1@1.
	
	marsRover move: 'b'.
	
	self assert: ((marsRover currentPosition) = (1@0))"! !

!testRun: #MarsRoverTest #test02BackwardWhenPointingNorth stamp: 'DB 10/25/2020 20:28:40'!
PASSED!
!MarsRoverTest methodsFor: 'Backward tests' stamp: 'DB 10/25/2020 20:28:45' prior: 50873814!
test02BackwardWhenPointingNorth

	self assertCorrectPositionAfterBackwardMovement: (MarsRover atNorth: 1@1) expectPosition: (1@0).! !
!MarsRoverTest methodsFor: 'Backward tests' stamp: 'DB 10/25/2020 20:29:25' prior: 50871902!
test08BackwardWhenPointingEast

	self assertCorrectPositionAfterBackwardMovement: (MarsRover atEast: 1@1) expectPosition: (0@1).
	
! !

!testRun: #MarsRoverTest #test08BackwardWhenPointingEast stamp: 'DB 10/25/2020 20:29:28'!
PASSED!
!MarsRoverTest methodsFor: 'Backward tests' stamp: 'DB 10/25/2020 20:29:55' prior: 50871911!
test09BackwardWhenPointingSouth

	self assertCorrectPositionAfterBackwardMovement: ( MarsRover atSouth: 1@1)  expectPosition: (1@2)
	! !
!MarsRoverTest methodsFor: 'Backward tests' stamp: 'DB 10/25/2020 20:30:22' prior: 50871920!
test10BackwardWhenPointingWest

	self assertCorrectPositionAfterBackwardMovement: (MarsRover atWest: 1@1) expectPosition: (2@1)
	! !

!testRun: #MarsRoverTest #test01ForwardWhenPointingNorth stamp: 'DB 10/25/2020 20:30:26'!
PASSED!

!testRun: #MarsRoverTest #test02BackwardWhenPointingNorth stamp: 'DB 10/25/2020 20:30:26'!
PASSED!

!testRun: #MarsRoverTest #test03TuringLeftWhenPointingNorth stamp: 'DB 10/25/2020 20:30:26'!
PASSED!

!testRun: #MarsRoverTest #test04TurningRightWhenPointingNorth stamp: 'DB 10/25/2020 20:30:26'!
PASSED!

!testRun: #MarsRoverTest #test05ForwardWhenPointingEast stamp: 'DB 10/25/2020 20:30:26'!
PASSED!

!testRun: #MarsRoverTest #test06ForwardWhenPointingSouth stamp: 'DB 10/25/2020 20:30:26'!
PASSED!

!testRun: #MarsRoverTest #test07ForwardWhenPointingWest stamp: 'DB 10/25/2020 20:30:26'!
PASSED!

!testRun: #MarsRoverTest #test08BackwardWhenPointingEast stamp: 'DB 10/25/2020 20:30:26'!
PASSED!

!testRun: #MarsRoverTest #test09BackwardWhenPointingSouth stamp: 'DB 10/25/2020 20:30:26'!
PASSED!

!testRun: #MarsRoverTest #test10BackwardWhenPointingWest stamp: 'DB 10/25/2020 20:30:26'!
PASSED!

!testRun: #MarsRoverTest #test11TuringLeftWhenPointingEast stamp: 'DB 10/25/2020 20:30:26'!
PASSED!

!testRun: #MarsRoverTest #test12TuringLeftWhenPointingSouth stamp: 'DB 10/25/2020 20:30:26'!
PASSED!

!testRun: #MarsRoverTest #test13TuringLeftWhenPointingWest stamp: 'DB 10/25/2020 20:30:26'!
PASSED!

!testRun: #MarsRoverTest #test14TurningRightWhenPointingEast stamp: 'DB 10/25/2020 20:30:26'!
PASSED!

!testRun: #MarsRoverTest #test15TurningRightWhenPointingSouth stamp: 'DB 10/25/2020 20:30:26'!
PASSED!

!testRun: #MarsRoverTest #test16TurningRightWhenPointingWest stamp: 'DB 10/25/2020 20:30:26'!
PASSED!

!testRun: #MarsRoverTest #test17MultipleCommandsWhenPointingNorth stamp: 'DB 10/25/2020 20:30:26'!
PASSED!

!testRun: #MarsRoverTest #test18MultipleMixedCommandsWhenPointingNorth stamp: 'DB 10/25/2020 20:30:26'!
PASSED!

!testRun: #MarsRoverTest #test19DoesntContinueExecutingAfterAnInvalidCommand stamp: 'DB 10/25/2020 20:30:26'!
PASSED!
!MarsRoverTest methodsFor: 'Forward tests' stamp: 'DB 10/25/2020 20:32:02'!
assertCorrectPositionAfterForwardMovement: aMarsRover expectPosition: endPosition

	aMarsRover move: 'f'.	
	self assert: ((aMarsRover currentPosition) = (endPosition))	! !
!MarsRoverTest methodsFor: 'Forward tests' stamp: 'DB 10/25/2020 20:32:33' prior: 50871830!
test01ForwardWhenPointingNorth


	self assertCorrectPositionAfterForwardMovement: (MarsRover atNorth: 1@1) expectPosition: (1@2).
	! !
!MarsRoverTest methodsFor: 'Forward tests' stamp: 'DB 10/25/2020 20:32:41' prior: 50873933!
test01ForwardWhenPointingNorth

	self assertCorrectPositionAfterForwardMovement: (MarsRover atNorth: 1@1) expectPosition: (1@2).
	! !
!MarsRoverTest methodsFor: 'Forward tests' stamp: 'DB 10/25/2020 20:33:11' prior: 50871872!
test05ForwardWhenPointingEast

	self assertCorrectPositionAfterForwardMovement: (MarsRover atEast: 1@1)  expectPosition: (2@1)! !
!MarsRoverTest methodsFor: 'Forward tests' stamp: 'DB 10/25/2020 20:33:36' prior: 50871881!
test06ForwardWhenPointingSouth
	
	self assertCorrectPositionAfterForwardMovement: (MarsRover atSouth: 1@1) expectPosition: (1@0)
	! !
!MarsRoverTest methodsFor: 'Forward tests' stamp: 'DB 10/25/2020 20:34:04' prior: 50871893!
test07ForwardWhenPointingWest

	self assertCorrectPositionAfterForwardMovement: (MarsRover atWest: 1@1)  expectPosition: (0@1)
	! !

!testRun: #MarsRoverTest #test01ForwardWhenPointingNorth stamp: 'DB 10/25/2020 20:34:07'!
PASSED!

!testRun: #MarsRoverTest #test02BackwardWhenPointingNorth stamp: 'DB 10/25/2020 20:34:07'!
PASSED!

!testRun: #MarsRoverTest #test03TuringLeftWhenPointingNorth stamp: 'DB 10/25/2020 20:34:07'!
PASSED!

!testRun: #MarsRoverTest #test04TurningRightWhenPointingNorth stamp: 'DB 10/25/2020 20:34:07'!
PASSED!

!testRun: #MarsRoverTest #test05ForwardWhenPointingEast stamp: 'DB 10/25/2020 20:34:07'!
PASSED!

!testRun: #MarsRoverTest #test06ForwardWhenPointingSouth stamp: 'DB 10/25/2020 20:34:07'!
PASSED!

!testRun: #MarsRoverTest #test07ForwardWhenPointingWest stamp: 'DB 10/25/2020 20:34:07'!
PASSED!

!testRun: #MarsRoverTest #test08BackwardWhenPointingEast stamp: 'DB 10/25/2020 20:34:07'!
PASSED!

!testRun: #MarsRoverTest #test09BackwardWhenPointingSouth stamp: 'DB 10/25/2020 20:34:07'!
PASSED!

!testRun: #MarsRoverTest #test10BackwardWhenPointingWest stamp: 'DB 10/25/2020 20:34:07'!
PASSED!

!testRun: #MarsRoverTest #test11TuringLeftWhenPointingEast stamp: 'DB 10/25/2020 20:34:07'!
PASSED!

!testRun: #MarsRoverTest #test12TuringLeftWhenPointingSouth stamp: 'DB 10/25/2020 20:34:07'!
PASSED!

!testRun: #MarsRoverTest #test13TuringLeftWhenPointingWest stamp: 'DB 10/25/2020 20:34:07'!
PASSED!

!testRun: #MarsRoverTest #test14TurningRightWhenPointingEast stamp: 'DB 10/25/2020 20:34:07'!
PASSED!

!testRun: #MarsRoverTest #test15TurningRightWhenPointingSouth stamp: 'DB 10/25/2020 20:34:07'!
PASSED!

!testRun: #MarsRoverTest #test16TurningRightWhenPointingWest stamp: 'DB 10/25/2020 20:34:07'!
PASSED!

!testRun: #MarsRoverTest #test17MultipleCommandsWhenPointingNorth stamp: 'DB 10/25/2020 20:34:07'!
PASSED!

!testRun: #MarsRoverTest #test18MultipleMixedCommandsWhenPointingNorth stamp: 'DB 10/25/2020 20:34:07'!
PASSED!

!testRun: #MarsRoverTest #test19DoesntContinueExecutingAfterAnInvalidCommand stamp: 'DB 10/25/2020 20:34:07'!
PASSED!
!MarsRoverTest methodsFor: 'Turning Left tests' stamp: 'DB 10/25/2020 20:34:58'!
assertCorrectPositionAfterBackwardMovement: aMarsRover expectedDirection: aDirection
	
	| marsRover |
	marsRover := MarsRover atNorth: 1@1.
	
	marsRover move: 'l'.
	
	self assert: ((marsRover currentDirection) isKindOf: aDirection )! !
!MarsRoverTest methodsFor: 'Turning Left tests' stamp: 'DB 10/25/2020 20:35:32'!
assertCorrectPositionAfterTurnLeftMovement: aMarsRover expectedDirection: aDirection
	
	| marsRover |
	marsRover := MarsRover atNorth: 1@1.
	
	marsRover move: 'l'.
	
	self assert: ((marsRover currentDirection) isKindOf: aDirection )! !

!methodRemoval: MarsRoverTest #assertCorrectPositionAfterBackwardMovement:expectedDirection: stamp: 'DB 10/25/2020 20:35:32'!
assertCorrectPositionAfterBackwardMovement: aMarsRover expectedDirection: aDirection
	
	| marsRover |
	marsRover := MarsRover atNorth: 1@1.
	
	marsRover move: 'l'.
	
	self assert: ((marsRover currentDirection) isKindOf: aDirection )!
!MarsRoverTest methodsFor: 'Turning Left tests' stamp: 'DB 10/25/2020 20:35:50' prior: 50874042!
assertCorrectPositionAfterTurnLeftMovement: aMarsRover expectedDirection: aDirection

	aMarsRover move: 'l'.
	
	self assert: ((aMarsRover currentDirection) isKindOf: aDirection )! !
!MarsRoverTest methodsFor: 'Turning Left tests' stamp: 'DB 10/25/2020 20:36:25' prior: 50872084!
test03TuringLeftWhenPointingNorth

	self assertCorrectPositionAfterTurnLeftMovement: ( MarsRover atNorth: 1@1) expectedDirection: WestDirection
	! !

!testRun: #MarsRoverTest #test03TuringLeftWhenPointingNorth stamp: 'DB 10/25/2020 20:36:27'!
PASSED!
!MarsRoverTest methodsFor: 'Turning Left tests' stamp: 'DB 10/25/2020 20:36:55' prior: 50872106!
test11TuringLeftWhenPointingEast

	self assertCorrectPositionAfterTurnLeftMovement: (MarsRover atEast: 1@1) expectedDirection: NorthDirection
	! !

----SNAPSHOT----(25 October 2020 20:36:58) CuisUniversity-4384.image priorSource: 17329491!
!MarsRoverTest methodsFor: 'Turning Left tests' stamp: 'DB 10/25/2020 20:37:26' prior: 50872115!
test12TuringLeftWhenPointingSouth

	self assertCorrectPositionAfterTurnLeftMovement: (MarsRover atSouth: 1@1)  expectedDirection: EastDirection ! !
!MarsRoverTest methodsFor: 'Turning Left tests' stamp: 'DB 10/25/2020 20:37:51' prior: 50872124!
test13TuringLeftWhenPointingWest

	self assertCorrectPositionAfterTurnLeftMovement: (MarsRover atWest: 1@1) expectedDirection: SouthDirection! !

!testRun: #MarsRoverTest #test01ForwardWhenPointingNorth stamp: 'DB 10/25/2020 20:38:03'!
PASSED!

!testRun: #MarsRoverTest #test02BackwardWhenPointingNorth stamp: 'DB 10/25/2020 20:38:03'!
PASSED!

!testRun: #MarsRoverTest #test03TuringLeftWhenPointingNorth stamp: 'DB 10/25/2020 20:38:03'!
PASSED!

!testRun: #MarsRoverTest #test04TurningRightWhenPointingNorth stamp: 'DB 10/25/2020 20:38:03'!
PASSED!

!testRun: #MarsRoverTest #test05ForwardWhenPointingEast stamp: 'DB 10/25/2020 20:38:03'!
PASSED!

!testRun: #MarsRoverTest #test06ForwardWhenPointingSouth stamp: 'DB 10/25/2020 20:38:03'!
PASSED!

!testRun: #MarsRoverTest #test07ForwardWhenPointingWest stamp: 'DB 10/25/2020 20:38:03'!
PASSED!

!testRun: #MarsRoverTest #test08BackwardWhenPointingEast stamp: 'DB 10/25/2020 20:38:03'!
PASSED!

!testRun: #MarsRoverTest #test09BackwardWhenPointingSouth stamp: 'DB 10/25/2020 20:38:03'!
PASSED!

!testRun: #MarsRoverTest #test10BackwardWhenPointingWest stamp: 'DB 10/25/2020 20:38:03'!
PASSED!

!testRun: #MarsRoverTest #test11TuringLeftWhenPointingEast stamp: 'DB 10/25/2020 20:38:03'!
PASSED!

!testRun: #MarsRoverTest #test12TuringLeftWhenPointingSouth stamp: 'DB 10/25/2020 20:38:03'!
PASSED!

!testRun: #MarsRoverTest #test13TuringLeftWhenPointingWest stamp: 'DB 10/25/2020 20:38:03'!
PASSED!

!testRun: #MarsRoverTest #test14TurningRightWhenPointingEast stamp: 'DB 10/25/2020 20:38:03'!
PASSED!

!testRun: #MarsRoverTest #test15TurningRightWhenPointingSouth stamp: 'DB 10/25/2020 20:38:03'!
PASSED!

!testRun: #MarsRoverTest #test16TurningRightWhenPointingWest stamp: 'DB 10/25/2020 20:38:03'!
PASSED!

!testRun: #MarsRoverTest #test17MultipleCommandsWhenPointingNorth stamp: 'DB 10/25/2020 20:38:03'!
PASSED!

!testRun: #MarsRoverTest #test18MultipleMixedCommandsWhenPointingNorth stamp: 'DB 10/25/2020 20:38:03'!
PASSED!

!testRun: #MarsRoverTest #test19DoesntContinueExecutingAfterAnInvalidCommand stamp: 'DB 10/25/2020 20:38:03'!
PASSED!
!MarsRoverTest methodsFor: 'Turning Right tests' stamp: 'DB 10/25/2020 20:38:43'!
assertCorrectPositionAfterTurnRighttMovement: aMarsRover expectedDirection: aDirection

	aMarsRover move: 'r'.
	
	self assert: ((aMarsRover currentDirection) isKindOf: aDirection )! !
!MarsRoverTest methodsFor: 'Turning Right tests' stamp: 'DB 10/25/2020 20:39:09' prior: 50872097!
test04TurningRightWhenPointingNorth

	self assertCorrectPositionAfterTurnRighttMovement: (MarsRover atNorth: 1@1) expectedDirection: EastDirection ! !
!MarsRoverTest methodsFor: 'Turning Right tests' stamp: 'DB 10/25/2020 20:39:43' prior: 50872133!
test14TurningRightWhenPointingEast


	self assertCorrectPositionAfterTurnRighttMovement: (MarsRover atEast: 1@1) expectedDirection: SouthDirection! !
!MarsRoverTest methodsFor: 'Turning Right tests' stamp: 'DB 10/25/2020 20:39:47' prior: 50874189!
test14TurningRightWhenPointingEast

	self assertCorrectPositionAfterTurnRighttMovement: (MarsRover atEast: 1@1) expectedDirection: SouthDirection! !
!MarsRoverTest methodsFor: 'Turning Right tests' stamp: 'DB 10/25/2020 20:40:11' prior: 50872142!
test15TurningRightWhenPointingSouth

	self assertCorrectPositionAfterTurnRighttMovement: (MarsRover atSouth: 1@1)  expectedDirection: WestDirection! !
!MarsRoverTest methodsFor: 'Turning Right tests' stamp: 'DB 10/25/2020 20:40:39' prior: 50872151!
test16TurningRightWhenPointingWest

	self assertCorrectPositionAfterTurnRighttMovement: (MarsRover atWest: 1@1) expectedDirection: NorthDirection! !

!testRun: #MarsRoverTest #test01ForwardWhenPointingNorth stamp: 'DB 10/25/2020 20:40:42'!
PASSED!

!testRun: #MarsRoverTest #test02BackwardWhenPointingNorth stamp: 'DB 10/25/2020 20:40:42'!
PASSED!

!testRun: #MarsRoverTest #test03TuringLeftWhenPointingNorth stamp: 'DB 10/25/2020 20:40:42'!
PASSED!

!testRun: #MarsRoverTest #test04TurningRightWhenPointingNorth stamp: 'DB 10/25/2020 20:40:42'!
PASSED!

!testRun: #MarsRoverTest #test05ForwardWhenPointingEast stamp: 'DB 10/25/2020 20:40:42'!
PASSED!

!testRun: #MarsRoverTest #test06ForwardWhenPointingSouth stamp: 'DB 10/25/2020 20:40:42'!
PASSED!

!testRun: #MarsRoverTest #test07ForwardWhenPointingWest stamp: 'DB 10/25/2020 20:40:42'!
PASSED!

!testRun: #MarsRoverTest #test08BackwardWhenPointingEast stamp: 'DB 10/25/2020 20:40:42'!
PASSED!

!testRun: #MarsRoverTest #test09BackwardWhenPointingSouth stamp: 'DB 10/25/2020 20:40:42'!
PASSED!

!testRun: #MarsRoverTest #test10BackwardWhenPointingWest stamp: 'DB 10/25/2020 20:40:42'!
PASSED!

!testRun: #MarsRoverTest #test11TuringLeftWhenPointingEast stamp: 'DB 10/25/2020 20:40:42'!
PASSED!

!testRun: #MarsRoverTest #test12TuringLeftWhenPointingSouth stamp: 'DB 10/25/2020 20:40:42'!
PASSED!

!testRun: #MarsRoverTest #test13TuringLeftWhenPointingWest stamp: 'DB 10/25/2020 20:40:42'!
PASSED!

!testRun: #MarsRoverTest #test14TurningRightWhenPointingEast stamp: 'DB 10/25/2020 20:40:42'!
PASSED!

!testRun: #MarsRoverTest #test15TurningRightWhenPointingSouth stamp: 'DB 10/25/2020 20:40:43'!
PASSED!

!testRun: #MarsRoverTest #test16TurningRightWhenPointingWest stamp: 'DB 10/25/2020 20:40:43'!
PASSED!

!testRun: #MarsRoverTest #test17MultipleCommandsWhenPointingNorth stamp: 'DB 10/25/2020 20:40:43'!
PASSED!

!testRun: #MarsRoverTest #test18MultipleMixedCommandsWhenPointingNorth stamp: 'DB 10/25/2020 20:40:43'!
PASSED!

!testRun: #MarsRoverTest #test19DoesntContinueExecutingAfterAnInvalidCommand stamp: 'DB 10/25/2020 20:40:43'!
PASSED!

!methodRemoval: MarsRoverTest #test17MultipleCommandsWhenPointingNorth stamp: 'DB 10/25/2020 20:41:51'!
test17MultipleCommandsWhenPointingNorth
	
	| marsRover |
	marsRover := MarsRover atNorth: 1@1.
	
	marsRover move: 'fff'.
	
	self assert: ((marsRover currentPosition ) = (1@4)).
	self assert: ((marsRover currentDirection) isKindOf: NorthDirection).!

!testRun: #MarsRoverTest #test01ForwardWhenPointingNorth stamp: 'DB 10/25/2020 20:41:57'!
PASSED!

!testRun: #MarsRoverTest #test02BackwardWhenPointingNorth stamp: 'DB 10/25/2020 20:41:57'!
PASSED!

!testRun: #MarsRoverTest #test03TuringLeftWhenPointingNorth stamp: 'DB 10/25/2020 20:41:57'!
PASSED!

!testRun: #MarsRoverTest #test04TurningRightWhenPointingNorth stamp: 'DB 10/25/2020 20:41:57'!
PASSED!

!testRun: #MarsRoverTest #test05ForwardWhenPointingEast stamp: 'DB 10/25/2020 20:41:57'!
PASSED!

!testRun: #MarsRoverTest #test06ForwardWhenPointingSouth stamp: 'DB 10/25/2020 20:41:57'!
PASSED!

!testRun: #MarsRoverTest #test07ForwardWhenPointingWest stamp: 'DB 10/25/2020 20:41:57'!
PASSED!

!testRun: #MarsRoverTest #test08BackwardWhenPointingEast stamp: 'DB 10/25/2020 20:41:57'!
PASSED!

!testRun: #MarsRoverTest #test09BackwardWhenPointingSouth stamp: 'DB 10/25/2020 20:41:57'!
PASSED!

!testRun: #MarsRoverTest #test10BackwardWhenPointingWest stamp: 'DB 10/25/2020 20:41:57'!
PASSED!

!testRun: #MarsRoverTest #test11TuringLeftWhenPointingEast stamp: 'DB 10/25/2020 20:41:57'!
PASSED!

!testRun: #MarsRoverTest #test12TuringLeftWhenPointingSouth stamp: 'DB 10/25/2020 20:41:57'!
PASSED!

!testRun: #MarsRoverTest #test13TuringLeftWhenPointingWest stamp: 'DB 10/25/2020 20:41:58'!
PASSED!

!testRun: #MarsRoverTest #test14TurningRightWhenPointingEast stamp: 'DB 10/25/2020 20:41:58'!
PASSED!

!testRun: #MarsRoverTest #test15TurningRightWhenPointingSouth stamp: 'DB 10/25/2020 20:41:58'!
PASSED!

!testRun: #MarsRoverTest #test16TurningRightWhenPointingWest stamp: 'DB 10/25/2020 20:41:58'!
PASSED!

!testRun: #MarsRoverTest #test18MultipleMixedCommandsWhenPointingNorth stamp: 'DB 10/25/2020 20:41:58'!
PASSED!

!testRun: #MarsRoverTest #test19DoesntContinueExecutingAfterAnInvalidCommand stamp: 'DB 10/25/2020 20:41:58'!
PASSED!
!MarsRoverTest methodsFor: 'Invalid commands' stamp: 'DB 10/25/2020 20:42:31'!
test17DoesntContinueExecutingAfterAnInvalidCommand
	
	| marsRover |
	marsRover := MarsRover atNorth: 1@1.
	
	self 
		should: [marsRover move: 'frffr=?xxyffr'.] 
		raise: Error  
		withMessageText: MarsRover invalidCommand. 
	
	self assert: ((marsRover currentPosition ) = (3@2)).
	self assert: ((marsRover currentDirection) isKindOf: SouthDirection).! !

!methodRemoval: MarsRoverTest #test19DoesntContinueExecutingAfterAnInvalidCommand stamp: 'DB 10/25/2020 20:42:31'!
test19DoesntContinueExecutingAfterAnInvalidCommand
	
	| marsRover |
	marsRover := MarsRover atNorth: 1@1.
	
	self 
		should: [marsRover move: 'frffr=?xxyffr'.] 
		raise: Error  
		withMessageText: MarsRover invalidCommand. 
	
	self assert: ((marsRover currentPosition ) = (3@2)).
	self assert: ((marsRover currentDirection) isKindOf: SouthDirection).!

!testRun: #MarsRoverTest #test01ForwardWhenPointingNorth stamp: 'DB 10/25/2020 20:42:42'!
PASSED!

!testRun: #MarsRoverTest #test02BackwardWhenPointingNorth stamp: 'DB 10/25/2020 20:42:42'!
PASSED!

!testRun: #MarsRoverTest #test03TuringLeftWhenPointingNorth stamp: 'DB 10/25/2020 20:42:42'!
PASSED!

!testRun: #MarsRoverTest #test04TurningRightWhenPointingNorth stamp: 'DB 10/25/2020 20:42:42'!
PASSED!

!testRun: #MarsRoverTest #test05ForwardWhenPointingEast stamp: 'DB 10/25/2020 20:42:42'!
PASSED!

!testRun: #MarsRoverTest #test06ForwardWhenPointingSouth stamp: 'DB 10/25/2020 20:42:42'!
PASSED!

!testRun: #MarsRoverTest #test07ForwardWhenPointingWest stamp: 'DB 10/25/2020 20:42:42'!
PASSED!

!testRun: #MarsRoverTest #test08BackwardWhenPointingEast stamp: 'DB 10/25/2020 20:42:42'!
PASSED!

!testRun: #MarsRoverTest #test09BackwardWhenPointingSouth stamp: 'DB 10/25/2020 20:42:42'!
PASSED!

!testRun: #MarsRoverTest #test10BackwardWhenPointingWest stamp: 'DB 10/25/2020 20:42:42'!
PASSED!

!testRun: #MarsRoverTest #test11TuringLeftWhenPointingEast stamp: 'DB 10/25/2020 20:42:42'!
PASSED!

!testRun: #MarsRoverTest #test12TuringLeftWhenPointingSouth stamp: 'DB 10/25/2020 20:42:42'!
PASSED!

!testRun: #MarsRoverTest #test13TuringLeftWhenPointingWest stamp: 'DB 10/25/2020 20:42:42'!
PASSED!

!testRun: #MarsRoverTest #test14TurningRightWhenPointingEast stamp: 'DB 10/25/2020 20:42:42'!
PASSED!

!testRun: #MarsRoverTest #test15TurningRightWhenPointingSouth stamp: 'DB 10/25/2020 20:42:42'!
PASSED!

!testRun: #MarsRoverTest #test16TurningRightWhenPointingWest stamp: 'DB 10/25/2020 20:42:42'!
PASSED!

!testRun: #MarsRoverTest #test17DoesntContinueExecutingAfterAnInvalidCommand stamp: 'DB 10/25/2020 20:42:42'!
PASSED!

!testRun: #MarsRoverTest #test18MultipleMixedCommandsWhenPointingNorth stamp: 'DB 10/25/2020 20:42:42'!
PASSED!

----SNAPSHOT----(25 October 2020 20:42:46) CuisUniversity-4384.image priorSource: 17358098!
!MarsRover methodsFor: 'accessing' stamp: 'DB 10/25/2020 20:43:43'!
currentCardinalDirection

	^currentCardinalDirection ! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'DB 10/25/2020 20:43:43' prior: 50874172!
assertCorrectPositionAfterTurnRighttMovement: aMarsRover expectedDirection: aDirection

	aMarsRover move: 'r'.
	
	self assert: ((aMarsRover currentCardinalDirection) isKindOf: aDirection )! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'DB 10/25/2020 20:43:43' prior: 50872171!
test18MultipleMixedCommandsWhenPointingNorth
	
	| marsRover |
	marsRover := MarsRover atNorth: 1@1.
	
	marsRover move: 'frffr'.
	
	self assert: ((marsRover currentPosition ) = (3@2)).
	self assert: ((marsRover currentCardinalDirection) isKindOf: SouthDirection).! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'DB 10/25/2020 20:43:43' prior: 50874064!
assertCorrectPositionAfterTurnLeftMovement: aMarsRover expectedDirection: aDirection

	aMarsRover move: 'l'.
	
	self assert: ((aMarsRover currentCardinalDirection) isKindOf: aDirection )! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'DB 10/25/2020 20:43:43' prior: 50874350!
test17DoesntContinueExecutingAfterAnInvalidCommand
	
	| marsRover |
	marsRover := MarsRover atNorth: 1@1.
	
	self 
		should: [marsRover move: 'frffr=?xxyffr'.] 
		raise: Error  
		withMessageText: MarsRover invalidCommand. 
	
	self assert: ((marsRover currentPosition ) = (3@2)).
	self assert: ((marsRover currentCardinalDirection) isKindOf: SouthDirection).! !

!methodRemoval: MarsRover #currentDirection stamp: 'DB 10/25/2020 20:43:43'!
currentDirection

	^currentCardinalDirection !

!testRun: #MarsRoverTest #test01ForwardWhenPointingNorth stamp: 'DB 10/25/2020 20:44:05'!
PASSED!

!testRun: #MarsRoverTest #test02BackwardWhenPointingNorth stamp: 'DB 10/25/2020 20:44:05'!
PASSED!

!testRun: #MarsRoverTest #test03TuringLeftWhenPointingNorth stamp: 'DB 10/25/2020 20:44:05'!
PASSED!

!testRun: #MarsRoverTest #test04TurningRightWhenPointingNorth stamp: 'DB 10/25/2020 20:44:05'!
PASSED!

!testRun: #MarsRoverTest #test05ForwardWhenPointingEast stamp: 'DB 10/25/2020 20:44:05'!
PASSED!

!testRun: #MarsRoverTest #test06ForwardWhenPointingSouth stamp: 'DB 10/25/2020 20:44:05'!
PASSED!

!testRun: #MarsRoverTest #test07ForwardWhenPointingWest stamp: 'DB 10/25/2020 20:44:05'!
PASSED!

!testRun: #MarsRoverTest #test08BackwardWhenPointingEast stamp: 'DB 10/25/2020 20:44:05'!
PASSED!

!testRun: #MarsRoverTest #test09BackwardWhenPointingSouth stamp: 'DB 10/25/2020 20:44:05'!
PASSED!

!testRun: #MarsRoverTest #test10BackwardWhenPointingWest stamp: 'DB 10/25/2020 20:44:05'!
PASSED!

!testRun: #MarsRoverTest #test11TuringLeftWhenPointingEast stamp: 'DB 10/25/2020 20:44:05'!
PASSED!

!testRun: #MarsRoverTest #test12TuringLeftWhenPointingSouth stamp: 'DB 10/25/2020 20:44:05'!
PASSED!

!testRun: #MarsRoverTest #test13TuringLeftWhenPointingWest stamp: 'DB 10/25/2020 20:44:05'!
PASSED!

!testRun: #MarsRoverTest #test14TurningRightWhenPointingEast stamp: 'DB 10/25/2020 20:44:05'!
PASSED!

!testRun: #MarsRoverTest #test15TurningRightWhenPointingSouth stamp: 'DB 10/25/2020 20:44:05'!
PASSED!

!testRun: #MarsRoverTest #test16TurningRightWhenPointingWest stamp: 'DB 10/25/2020 20:44:05'!
PASSED!

!testRun: #MarsRoverTest #test17DoesntContinueExecutingAfterAnInvalidCommand stamp: 'DB 10/25/2020 20:44:05'!
PASSED!

!testRun: #MarsRoverTest #test18MultipleMixedCommandsWhenPointingNorth stamp: 'DB 10/25/2020 20:44:05'!
PASSED!

----SNAPSHOT----(25 October 2020 20:45:02) CuisUniversity-4384.image priorSource: 17369129!

----SNAPSHOT----(25 October 2020 20:46:37) CuisUniversity-4384.image priorSource: 17372794!
!MarsRover methodsFor: 'movement' stamp: 'DB 10/25/2020 20:50:48' prior: 50873790!
move: commands 
	commands do: [:aCommand | 
		| aStep | 
		
		aStep := Command for: aCommand with: currentCardinalDirection ifNone: [^self class signalInvalidCommand]. 
		aStep move.
		
	]
	! !
!MarsRover methodsFor: 'private movements' stamp: 'DB 10/25/2020 20:51:09' prior: 50871173!
moveBackwardWhenDirectionIsEast
	
	currentPosition := currentPosition - (1@0)
	
! !
!MarsRover methodsFor: 'private movements' stamp: 'DB 10/25/2020 20:51:14' prior: 50871162!
moveBackwardWhenDirectionIsNorth
	
	currentPosition := currentPosition - (0@1)
	
	
! !
!MarsRover methodsFor: 'private movements' stamp: 'DB 10/25/2020 20:51:18' prior: 50871179!
moveBackwardWhenDirectionIsSouth
	
	currentPosition := currentPosition + (0@1)
	
! !
!MarsRover methodsFor: 'private movements' stamp: 'DB 10/25/2020 20:51:22' prior: 50871185!
moveBackwardWhenDirectionIsWest
	
	currentPosition := currentPosition+ (1@0)
	
	
! !
!MarsRover methodsFor: 'private movements' stamp: 'DB 10/25/2020 20:51:41' prior: 50874584!
moveBackwardWhenDirectionIsWest
	
	currentPosition := currentPosition + (1@0)
	
	
! !
!MarsRover methodsFor: 'private movements' stamp: 'DB 10/25/2020 20:51:49' prior: 50871168!
moveForwardWhenDirectionIsEast
	
	currentPosition := currentPosition + (1@0)! !
!MarsRoverTest methodsFor: 'Turning Left tests' stamp: 'DB 10/25/2020 20:52:34' prior: 50874466!
assertCorrectPositionAfterTurnLeftMovement: aMarsRover expectedDirection: aDirection

	aMarsRover move: 'l'.
	self assert: ((aMarsRover currentCardinalDirection) isKindOf: aDirection )! !
!MarsRoverTest methodsFor: 'Turning Right tests' stamp: 'DB 10/25/2020 20:52:42' prior: 50874444!
assertCorrectPositionAfterTurnRighttMovement: aMarsRover expectedDirection: aDirection

	aMarsRover move: 'r'.
	self assert: ((aMarsRover currentCardinalDirection) isKindOf: aDirection )! !
!MarsRoverTest methodsFor: 'Backward tests' stamp: 'DB 10/25/2020 20:53:00' prior: 50873848!
test09BackwardWhenPointingSouth

	self assertCorrectPositionAfterBackwardMovement: (MarsRover atSouth: 1@1)  expectPosition: (1@2)
	! !
!MarsRoverTest methodsFor: 'Turning Left tests' stamp: 'DB 10/25/2020 20:53:09' prior: 50874073!
test03TuringLeftWhenPointingNorth

	self assertCorrectPositionAfterTurnLeftMovement: (MarsRover atNorth: 1@1) expectedDirection: WestDirection
	! !
!MarsRoverTest methodsFor: 'Invalid commands' stamp: 'DB 10/25/2020 21:04:34' prior: 50874475!
test17DoesntContinueExecutingAfterAnInvalidCommand
	
	| marsRover |
	marsRover := MarsRover atNorth: 1@1.
	
	self 
		should: [marsRover move: 'frffr=?xxyffr'.] 
		raise: Error  
		withMessageText: MarsRover invalidCommand. 
	
	self assert: ((marsRover currentPosition ) = (3@2)).
	self assert: ((marsRover currentCardinalDirection) isKindOf: SouthDirection).
	
	marsRover move: 'bbbbl'.
	
	self assert: (marsRover currentPosition) = (3@-2)! !

!testRun: #MarsRoverTest #test17DoesntContinueExecutingAfterAnInvalidCommand stamp: 'DB 10/25/2020 21:04:42'!
FAILURE!

!testRun: #MarsRoverTest #test17DoesntContinueExecutingAfterAnInvalidCommand stamp: 'DB 10/25/2020 21:04:42'!
FAILURE!

marsRover currentPosition!
!MarsRoverTest methodsFor: 'Invalid commands' stamp: 'DB 10/25/2020 21:06:01' prior: 50874636!
test17DoesntContinueExecutingAfterAnInvalidCommand
	
	| marsRover |
	marsRover := MarsRover atNorth: 1@1.
	
	self 
		should: [marsRover move: 'frffr=?xxyffr'.] 
		raise: Error  
		withMessageText: MarsRover invalidCommand. 
	
	self assert: ((marsRover currentPosition ) = (3@2)).
	self assert: ((marsRover currentCardinalDirection) isKindOf: SouthDirection).
	
	marsRover move: 'bbbbl'.
	! !
!MarsRoverTest methodsFor: 'Invalid commands' stamp: 'DB 10/25/2020 21:10:15' prior: 50874662!
test17DoesntContinueExecutingAfterAnInvalidCommand
	
	| marsRover |
	marsRover := MarsRover atNorth: 1@1.
	
	self 
		should: [marsRover move: 'frffr=?xxyffr'.] 
		raise: Error  
		withMessageText: MarsRover invalidCommand. 
	
	self assert: ((marsRover currentPosition ) = (3@2)).
	self assert: ((marsRover currentCardinalDirection) isKindOf: SouthDirection).
	
	marsRover move: 'bbbbl'.
	
	self assert: ((marsRover currentPosition ) = (3@6)).
	self assert: (marsRover currentCardinalDirection isKindOf: EastDirection).
	! !

!testRun: #MarsRoverTest #test17DoesntContinueExecutingAfterAnInvalidCommand stamp: 'DB 10/25/2020 21:10:19'!
PASSED!
!MarsRoverTest methodsFor: 'Invalid commands' stamp: 'DB 10/25/2020 21:10:55' prior: 50874678!
test17DoesntContinueExecutingAfterAnInvalidCommand
	
	| marsRover |
	marsRover := MarsRover atNorth: 1@1.
	
	self 
		should: [marsRover move: 'frffr=?xxyffr'.] 
		raise: Error  
		withMessageText: MarsRover invalidCommand. 
	
	self assert: ((marsRover currentPosition ) = (3@2)).
	self assert: ((marsRover currentCardinalDirection) isKindOf: SouthDirection).
	
	marsRover move: 'bbbbl'.
	
	self assert: ((marsRover currentPosition ) = (3@6)).
	self assert: (marsRover currentCardinalDirection isKindOf: EastDirection).
	
	marsRover move: 'bbbb'.
	! !

marsRover!

!testRun: #MarsRoverTest #test17DoesntContinueExecutingAfterAnInvalidCommand stamp: 'DB 10/25/2020 21:11:23'!
PASSED!
!MarsRoverTest methodsFor: 'Invalid commands' stamp: 'DB 10/25/2020 21:11:39' prior: 50874702!
test17DoesntContinueExecutingAfterAnInvalidCommand
	
	| marsRover |
	marsRover := MarsRover atNorth: 1@1.
	
	self 
		should: [marsRover move: 'frffr=?xxyffr'.] 
		raise: Error  
		withMessageText: MarsRover invalidCommand. 
	
	self assert: ((marsRover currentPosition ) = (3@2)).
	self assert: ((marsRover currentCardinalDirection) isKindOf: SouthDirection).
	! !

----SNAPSHOT----(25 October 2020 21:11:46) CuisUniversity-4384.image priorSource: 17372887!

----QUIT----(25 October 2020 21:23:33) CuisUniversity-4384.image priorSource: 17378891!

----STARTUP---- (25 October 2020 21:37:45) as /Users/dbenitez/uba/2c2020-IS1/Quiz/macos64-MarsRover/CuisUniversity-4384.image!

!MarsRoverTest methodsFor: 'Backward tests' stamp: 'DB 10/25/2020 21:44:39' prior: 50874620!
test09BackwardWhenPointingSouth

	self assertCorrectPositionAfterBackwardMovement: (MarsRover atSouth: 1@1) expectPosition: (1@2)
	! !
!MarsRoverTest methodsFor: 'Turning Left tests' stamp: 'DB 10/25/2020 21:44:53' prior: 50874095!
test12TuringLeftWhenPointingSouth

	self assertCorrectPositionAfterTurnLeftMovement: (MarsRover atSouth: 1@1) expectedDirection: EastDirection ! !
!MarsRoverTest methodsFor: 'Turning Right tests' stamp: 'DB 10/25/2020 21:45:01' prior: 50874205!
test15TurningRightWhenPointingSouth

	self assertCorrectPositionAfterTurnRighttMovement: (MarsRover atSouth: 1@1) expectedDirection: WestDirection! !

----SNAPSHOT----(25 October 2020 21:45:27) CuisUniversity-4384.image priorSource: 17378984!

----QUIT----(25 October 2020 21:46:00) CuisUniversity-4384.image priorSource: 17379957!