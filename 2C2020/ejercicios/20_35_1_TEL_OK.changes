

----STARTUP---- (31 October 2020 09:43:12) as /Users/ilanolkies/uba/ingsoft1/macos64 5/CuisUniversity-4384.image!


Object subclass: #TerniLapilliGame
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Terni Lapilli'!

!classDefinition: #TerniLapilliGame category: 'Terni Lapilli' stamp: 'IO 10/31/2020 09:46:02'!
Object subclass: #TerniLapilliGame
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Terni Lapilli'!

Object subclass: #TerniLapilliGameTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Terni Lapilli'!

!classDefinition: #TerniLapilliGameTest category: 'Terni Lapilli' stamp: 'IO 10/31/2020 09:47:21'!
Object subclass: #TerniLapilliGameTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Terni Lapilli'!
!TerniLapilliGameTest methodsFor: 'no messages' stamp: 'IO 10/31/2020 09:50:19'!
test01
	| aGame |
	aGame := TerniLapilliGame new
	
	aGame xPutsOn: 0@0
	
	self deny: aGame xHasWon.! !

TestCase subclass: #TerniLapilliGameTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Terni Lapilli'!

!classDefinition: #TerniLapilliGameTest category: 'Terni Lapilli' stamp: 'IO 10/31/2020 09:51:36'!
TestCase subclass: #TerniLapilliGameTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Terni Lapilli'!

!testRun: #TerniLapilliGameTest #test01 stamp: 'IO 10/31/2020 09:51:40'!
ERROR!
!TerniLapilliGame methodsFor: 'as yet unclassified' stamp: 'IO 10/31/2020 09:51:58'!
aGame
	self shouldBeImplemented.! !
!TerniLapilliGameTest methodsFor: 'as yet unclassified' stamp: 'IO 10/31/2020 09:52:13' prior: 50867792!
test01
	| aGame |
	aGame := TerniLapilliGame new.
	
	aGame xPutsOn: 0@0.
	
	self deny: aGame xHasWon.! !

!testRun: #TerniLapilliGameTest #test01 stamp: 'IO 10/31/2020 09:52:17'!
ERROR!
!TerniLapilliGame methodsFor: 'as yet unclassified' stamp: 'IO 10/31/2020 09:52:23'!
xPutsOn: aPoint 
	self shouldBeImplemented.! !
!TerniLapilliGame methodsFor: 'as yet unclassified' stamp: 'IO 10/31/2020 09:52:29' prior: 50867827!
xPutsOn: aPoint 
	! !

!testRun: #TerniLapilliGameTest #test01 stamp: 'IO 10/31/2020 09:52:30'!
ERROR!

!testRun: #TerniLapilliGameTest #test01 stamp: 'IO 10/31/2020 09:52:30'!
ERROR!

!testRun: #TerniLapilliGameTest #test01 stamp: 'IO 10/31/2020 09:52:44'!
ERROR!

!testRun: #TerniLapilliGameTest #test01 stamp: 'IO 10/31/2020 09:52:54'!
ERROR!

!testRun: #TerniLapilliGameTest #test01 stamp: 'IO 10/31/2020 09:53:35'!
ERROR!
!TerniLapilliGame methodsFor: 'as yet unclassified' stamp: 'IO 10/31/2020 09:53:49'!
xHasWon
	self shouldBeImplemented.! !
!TerniLapilliGame methodsFor: 'as yet unclassified' stamp: 'IO 10/31/2020 09:54:02' prior: 50867848!
xHasWon
	^false.
! !

!testRun: #TerniLapilliGameTest #test01 stamp: 'IO 10/31/2020 09:54:11'!
PASSED!

!testRun: #TerniLapilliGameTest #test01 stamp: 'IO 10/31/2020 09:54:11'!
PASSED!
!TerniLapilliGameTest methodsFor: 'as yet unclassified' stamp: 'IO 10/31/2020 09:55:06' prior: 50867818!
test01
	| aGame |
	aGame := TerniLapilliGame new.
	
	aGame xPutsOn: 0@0.
	
	self deny: aGame xHasWon.
	self assert: aGame hasColorXAt: 0@0.
! !
!TerniLapilliGameTest methodsFor: 'as yet unclassified' stamp: 'IO 10/31/2020 09:55:13' prior: 50867863!
test01
	| aGame |
	aGame := TerniLapilliGame new.
	
	aGame xPutsOn: 0@0.
	
	self deny: aGame xHasWon.
	self assert: (aGame hasColorXAt: 0@0).
! !

!testRun: #TerniLapilliGameTest #test01 stamp: 'IO 10/31/2020 09:55:16'!
ERROR!
!TerniLapilliGame methodsFor: 'as yet unclassified' stamp: 'IO 10/31/2020 09:55:26'!
hasColorXAt: aPoint 
	self shouldBeImplemented.! !
!TerniLapilliGame methodsFor: 'as yet unclassified' stamp: 'IO 10/31/2020 09:55:33' prior: 50867881!
hasColorXAt: aPoint 
	^true.! !
!TerniLapilliGameTest methodsFor: 'as yet unclassified' stamp: 'IO 10/31/2020 09:57:13'!
test02
	| aGame |
	aGame := TerniLapilliGame new.
	
	aGame xPutsOn: 0@1.
	
	self deny: aGame xHasWon.
	self deny: (aGame hasColorXAt: 0@0).
! !

!testRun: #TerniLapilliGameTest #test02 stamp: 'IO 10/31/2020 09:57:14'!
FAILURE!
!TerniLapilliGame methodsFor: 'as yet unclassified' stamp: 'IO 10/31/2020 09:57:39' prior: 50867886!
hasColorXAt: aPoint 
	^aPoint = 0@0.! !

!testRun: #TerniLapilliGameTest #test02 stamp: 'IO 10/31/2020 09:57:46'!
ERROR!

!testRun: #TerniLapilliGameTest #test02 stamp: 'IO 10/31/2020 09:57:50'!
ERROR!

!testRun: #TerniLapilliGameTest #test02 stamp: 'IO 10/31/2020 09:57:57'!
ERROR!

!testRun: #TerniLapilliGameTest #test02 stamp: 'IO 10/31/2020 09:58:22'!
ERROR!
!TerniLapilliGame methodsFor: 'as yet unclassified' stamp: 'IO 10/31/2020 09:58:36' prior: 50867901!
hasColorXAt: aPoint 
	^aPoint = (0@0).! !

!testRun: #TerniLapilliGameTest #test01 stamp: 'IO 10/31/2020 09:58:43'!
PASSED!

!testRun: #TerniLapilliGameTest #test02 stamp: 'IO 10/31/2020 09:58:43'!
FAILURE!

!testRun: #TerniLapilliGameTest #test02 stamp: 'IO 10/31/2020 09:58:43'!
FAILURE!
!TerniLapilliGameTest methodsFor: 'as yet unclassified' stamp: 'IO 10/31/2020 09:58:54' prior: 50867890!
test02
	| aGame |
	aGame := TerniLapilliGame new.
	
	aGame xPutsOn: 0@1.
	
	self deny: aGame xHasWon.
	self deny: (aGame hasColorXAt: 0@0).
! !

!testRun: #TerniLapilliGameTest #test02 stamp: 'IO 10/31/2020 09:58:54'!
FAILURE!

!testRun: #TerniLapilliGameTest #test02 stamp: 'IO 10/31/2020 09:59:14'!
FAILURE!

aPoint !

aPoint = (0@0)!
!TerniLapilliGameTest methodsFor: 'as yet unclassified' stamp: 'IO 10/31/2020 10:01:37' prior: 50867929!
test02
	| aGame |
	aGame := TerniLapilliGame new.
	
	aGame xPutsOn: 0@0.
	
	self deny: aGame xHasWon.
	self deny: (aGame hasColorXAt: 0@1).
! !

!testRun: #TerniLapilliGameTest #test02 stamp: 'IO 10/31/2020 10:01:38'!
PASSED!

!testRun: #TerniLapilliGameTest #test01 stamp: 'IO 10/31/2020 10:01:38'!
PASSED!

!testRun: #TerniLapilliGameTest #test02 stamp: 'IO 10/31/2020 10:01:38'!
PASSED!

!testRun: #TerniLapilliGameTest #test02 stamp: 'IO 10/31/2020 10:01:46'!
PASSED!

!testRun: #TerniLapilliGameTest #test01 stamp: 'IO 10/31/2020 10:01:46'!
PASSED!

!testRun: #TerniLapilliGameTest #test02 stamp: 'IO 10/31/2020 10:01:46'!
PASSED!
!TerniLapilliGameTest methodsFor: 'as yet unclassified' stamp: 'IO 10/31/2020 10:02:04'!
test03
	| aGame |
	aGame := TerniLapilliGame new.
	
	aGame xPutsOn: 0@1.
	
	self deny: aGame xHasWon.
	self assert: (aGame hasColorXAt: 0@1).
! !

!testRun: #TerniLapilliGameTest #test03 stamp: 'IO 10/31/2020 10:02:11'!
FAILURE!

Object subclass: #TerniLapilliGame
	instanceVariableNames: '0x0 0x1'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Terni Lapilli'!

!classDefinition: #TerniLapilliGame category: 'Terni Lapilli' stamp: 'IO 10/31/2020 10:02:53'!
Object subclass: #TerniLapilliGame
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Terni Lapilli'!

Object subclass: #TerniLapilliGame
	instanceVariableNames: '0x0'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Terni Lapilli'!

!classDefinition: #TerniLapilliGame category: 'Terni Lapilli' stamp: 'IO 10/31/2020 10:02:59'!
Object subclass: #TerniLapilliGame
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Terni Lapilli'!

Object subclass: #TerniLapilliGame
	instanceVariableNames: 'at0x0 at0x1'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Terni Lapilli'!

!classDefinition: #TerniLapilliGame category: 'Terni Lapilli' stamp: 'IO 10/31/2020 10:03:06'!
Object subclass: #TerniLapilliGame
	instanceVariableNames: 'at0x0 at0x1'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Terni Lapilli'!

Object subclass: #TerniLapilliGame
	instanceVariableNames: 'board'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Terni Lapilli'!

!classDefinition: #TerniLapilliGame category: 'Terni Lapilli' stamp: 'IO 10/31/2020 10:03:43'!
Object subclass: #TerniLapilliGame
	instanceVariableNames: 'board'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Terni Lapilli'!

Object subclass: #TerniLapilliGame
	instanceVariableNames: 'fichaXEn0x0 fichaXEn0x1'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Terni Lapilli'!

!classDefinition: #TerniLapilliGame category: 'Terni Lapilli' stamp: 'IO 10/31/2020 10:04:26'!
Object subclass: #TerniLapilliGame
	instanceVariableNames: 'fichaXEn0x0 fichaXEn0x1'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Terni Lapilli'!
!TerniLapilliGame methodsFor: 'as yet unclassified' stamp: 'IO 10/31/2020 10:05:28' prior: 50867832!
xPutsOn: aPoint 
	(aPoint = 0@0) ifTrue: [fichaXEn0x0 := true].
	(aPoint = 0@1) ifTrue: [fichaXEn0x1 := true].! !
!TerniLapilliGame class methodsFor: 'no messages' stamp: 'IO 10/31/2020 10:06:00' overrides: 16783533!
new
	^self basicNew initialize.
! !
!TerniLapilliGame methodsFor: 'nil' stamp: 'IO 10/31/2020 10:06:57' overrides: 16896425!
initialize
	fichaXEn0x0 := false.
	fichaXEn0x1 := false.
! !

!testRun: #TerniLapilliGameTest #test02 stamp: 'IO 10/31/2020 10:07:04'!
ERROR!
!TerniLapilliGame methodsFor: 'as yet unclassified' stamp: 'IO 10/31/2020 10:08:00' prior: 50867916!
hasColorXAt: aPoint 
	(aPoint = 0@0) ifTrue: [^fichaXEn0x0].
	(aPoint = 0@1) ifTrue: [^fichaXEn0x1].! !

!testRun: #TerniLapilliGameTest #test01 stamp: 'IO 10/31/2020 10:08:01'!
ERROR!

!testRun: #TerniLapilliGameTest #test02 stamp: 'IO 10/31/2020 10:08:01'!
ERROR!

!testRun: #TerniLapilliGameTest #test03 stamp: 'IO 10/31/2020 10:08:01'!
ERROR!

!testRun: #TerniLapilliGameTest #test01 stamp: 'IO 10/31/2020 10:08:13'!
ERROR!

!testRun: #TerniLapilliGameTest #test01 stamp: 'IO 10/31/2020 10:08:17'!
ERROR!

!testRun: #TerniLapilliGameTest #test01 stamp: 'IO 10/31/2020 10:08:30'!
ERROR!

!testRun: #TerniLapilliGameTest #test02 stamp: 'IO 10/31/2020 10:08:30'!
ERROR!

!testRun: #TerniLapilliGameTest #test03 stamp: 'IO 10/31/2020 10:08:30'!
ERROR!

aPoint!
!TerniLapilliGame methodsFor: 'as yet unclassified' stamp: 'IO 10/31/2020 10:08:58' prior: 50868037!
xPutsOn: aPoint 
	(aPoint = (0@0)) ifTrue: [fichaXEn0x0 := true].
	(aPoint = (0@1)) ifTrue: [fichaXEn0x1 := true].! !

!testRun: #TerniLapilliGameTest #test01 stamp: 'IO 10/31/2020 10:09:13'!
ERROR!

!testRun: #TerniLapilliGameTest #test02 stamp: 'IO 10/31/2020 10:09:13'!
ERROR!

!testRun: #TerniLapilliGameTest #test03 stamp: 'IO 10/31/2020 10:09:13'!
ERROR!
!TerniLapilliGameTest methodsFor: 'as yet unclassified' stamp: 'IO 10/31/2020 10:10:17' prior: 50867871!
test01
	| aGame |
	aGame := TerniLapilliGame new.
	
	aGame xPutsOn: 0@0.
	
	self assert: (aGame hasColorXAt: 0@0).
! !
!TerniLapilliGameTest methodsFor: 'as yet unclassified' stamp: 'IO 10/31/2020 10:10:18' prior: 50868098!
test01
	| aGame |
	aGame := TerniLapilliGame new.
	
	aGame xPutsOn: 0@0.

	self assert: (aGame hasColorXAt: 0@0).
! !
!TerniLapilliGameTest methodsFor: 'as yet unclassified' stamp: 'IO 10/31/2020 10:10:22' prior: 50867943!
test02
	| aGame |
	aGame := TerniLapilliGame new.
	
	aGame xPutsOn: 0@0.

	self deny: (aGame hasColorXAt: 0@1).
! !
!TerniLapilliGameTest methodsFor: 'as yet unclassified' stamp: 'IO 10/31/2020 10:10:26' prior: 50867966!
test03
	| aGame |
	aGame := TerniLapilliGame new.
	
	aGame xPutsOn: 0@1.

	self assert: (aGame hasColorXAt: 0@1).
! !

!testRun: #TerniLapilliGameTest #test03 stamp: 'IO 10/31/2020 10:10:28'!
ERROR!

!methodRemoval: TerniLapilliGame #xHasWon stamp: 'IO 10/31/2020 10:10:47'!
xHasWon
	^false.
!

!testRun: #TerniLapilliGameTest #test01 stamp: 'IO 10/31/2020 10:10:53'!
ERROR!
!TerniLapilliGameTest methodsFor: 'as yet unclassified' stamp: 'IO 10/31/2020 10:11:08' prior: 50868105!
test01
	| aGame |
	aGame := TerniLapilliGame new.
	
	aGame xPutsOn: 0@0.

	self assert: (aGame hasColorXAt: (0@0)).
! !

!testRun: #TerniLapilliGameTest #test01 stamp: 'IO 10/31/2020 10:11:09'!
ERROR!

!testRun: #TerniLapilliGameTest #test01 stamp: 'IO 10/31/2020 10:11:15'!
ERROR!
!TerniLapilliGame methodsFor: 'as yet unclassified' stamp: 'IO 10/31/2020 10:11:35' prior: 50868056!
hasColorXAt: aPoint 
	(aPoint = (0@0)) ifTrue: [^fichaXEn0x0].
	(aPoint = (0@1)) ifTrue: [^fichaXEn0x1].! !

!testRun: #TerniLapilliGameTest #test01 stamp: 'IO 10/31/2020 10:11:36'!
PASSED!

!testRun: #TerniLapilliGameTest #test02 stamp: 'IO 10/31/2020 10:11:36'!
PASSED!

!testRun: #TerniLapilliGameTest #test03 stamp: 'IO 10/31/2020 10:11:36'!
PASSED!

!testRun: #TerniLapilliGameTest #test01 stamp: 'IO 10/31/2020 10:11:47'!
PASSED!

!testRun: #TerniLapilliGameTest #test02 stamp: 'IO 10/31/2020 10:11:47'!
PASSED!

!testRun: #TerniLapilliGameTest #test03 stamp: 'IO 10/31/2020 10:11:47'!
PASSED!

Object subclass: #TerniLapilliGame
	instanceVariableNames: 'fichasX'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Terni Lapilli'!

!classDefinition: #TerniLapilliGame category: 'Terni Lapilli' stamp: 'IO 10/31/2020 10:16:44'!
Object subclass: #TerniLapilliGame
	instanceVariableNames: 'fichasX'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Terni Lapilli'!
!TerniLapilliGame methodsFor: 'as yet unclassified' stamp: 'IO 10/31/2020 10:17:36' prior: 50868048 overrides: 16896425!
initialize
	fichasX := { }
! !

!testRun: #TerniLapilliGameTest #test01 stamp: 'IO 10/31/2020 10:17:51'!
PASSED!

!testRun: #TerniLapilliGameTest #test02 stamp: 'IO 10/31/2020 10:17:51'!
ERROR!

!testRun: #TerniLapilliGameTest #test03 stamp: 'IO 10/31/2020 10:17:52'!
PASSED!

!testRun: #TerniLapilliGameTest #test02 stamp: 'IO 10/31/2020 10:17:52'!
FAILURE!
!TerniLapilliGame methodsFor: 'as yet unclassified' stamp: 'IO 10/31/2020 10:18:30' prior: 50868083!
xPutsOn: aPoint 
	fichasX add: aPoint.
! !

{}!

{} add: 1!

#()!

#() add: 1!
!TerniLapilliGame methodsFor: 'as yet unclassified' stamp: 'IO 10/31/2020 10:23:01' prior: 50868146!
hasColorXAt: aPoint 
	^fichasX ! !

----QUIT----(31 October 2020 10:23:06) CuisUniversity-4384.image priorSource: 17155564!

----STARTUP---- (31 October 2020 10:27:07) as /Users/ilanolkies/uba/ingsoft1/macos64 5/CuisUniversity-4384.image!

!TerniLapilliGame methodsFor: 'as yet unclassified' stamp: 'IO 10/31/2020 10:30:57' prior: 50868181 overrides: 16896425!
initialize
	fichasX := Set new.
! !

!testRun: #TerniLapilliGameTest #test01 stamp: 'IO 10/31/2020 10:31:02'!
ERROR!
!TerniLapilliGame methodsFor: 'as yet unclassified' stamp: 'IO 10/31/2020 10:31:34' prior: 50868202!
hasColorXAt: aPoint 
	^fichasX includes: aPoint.! !

!testRun: #TerniLapilliGameTest #test01 stamp: 'IO 10/31/2020 10:31:35'!
PASSED!

!testRun: #TerniLapilliGameTest #test02 stamp: 'IO 10/31/2020 10:31:35'!
PASSED!

!testRun: #TerniLapilliGameTest #test03 stamp: 'IO 10/31/2020 10:31:35'!
PASSED!
!TerniLapilliGameTest methodsFor: 'as yet unclassified' stamp: 'IO 10/31/2020 10:33:10'!
test04
	| aGame |
	aGame := TerniLapilliGame new.
	
	aGame xPutsOn: 0@1.
	aGame oPutsOn: 0@0.

	self assert: (aGame hasColorOAt: (0@0)).
! !

!testRun: #TerniLapilliGameTest #test04 stamp: 'IO 10/31/2020 10:33:14'!
ERROR!

!testRun: #TerniLapilliGameTest #test04 stamp: 'IO 10/31/2020 10:33:46'!
ERROR!
!TerniLapilliGame methodsFor: 'as yet unclassified' stamp: 'IO 10/31/2020 10:33:53'!
oPutsOn: aPoint 
	self shouldBeImplemented.! !

!classDefinition: #TerniLapilliGame category: 'Terni Lapilli' stamp: 'IO 10/31/2020 10:34:22'!
Object subclass: #TerniLapilliGame
	instanceVariableNames: 'fichasX yPoints'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Terni Lapilli'!
!TerniLapilliGame methodsFor: 'as yet unclassified' stamp: 'IO 10/31/2020 10:34:21' prior: 50868247!
oPutsOn: aPoint 
	yPoints add: aPoint.
! !

!testRun: #TerniLapilliGameTest #test04 stamp: 'IO 10/31/2020 10:34:26'!
ERROR!

!testRun: #TerniLapilliGameTest #test04 stamp: 'IO 10/31/2020 10:34:30'!
ERROR!

!testRun: #TerniLapilliGameTest #test04 stamp: 'IO 10/31/2020 10:34:36'!
ERROR!

Object subclass: #TerniLapilliGame
	instanceVariableNames: 'fichasX fichasY'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Terni Lapilli'!

!classDefinition: #TerniLapilliGame category: 'Terni Lapilli' stamp: 'IO 10/31/2020 10:35:20'!
Object subclass: #TerniLapilliGame
	instanceVariableNames: 'fichasX fichasY'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Terni Lapilli'!

Object subclass: #TerniLapilliGame
	instanceVariableNames: 'fichasX fichasO'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Terni Lapilli'!

!classDefinition: #TerniLapilliGame category: 'Terni Lapilli' stamp: 'IO 10/31/2020 10:35:25'!
Object subclass: #TerniLapilliGame
	instanceVariableNames: 'fichasX fichasO'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Terni Lapilli'!
!TerniLapilliGame methodsFor: 'as yet unclassified' stamp: 'IO 10/31/2020 10:35:43'!
hasColorOAt: aPoint 
	^fichasO includes: aPoint.! !
!TerniLapilliGame methodsFor: 'as yet unclassified' stamp: 'IO 10/31/2020 10:35:53' prior: 50868214 overrides: 16896425!
initialize
	fichasX := Set new.
	fichasO := Set new.
! !
!TerniLapilliGame methodsFor: 'as yet unclassified' stamp: 'IO 10/31/2020 10:36:02' prior: 50868260!
oPutsOn: aPoint 
	fichasO add: aPoint.
! !

!testRun: #TerniLapilliGameTest #test01 stamp: 'IO 10/31/2020 10:36:03'!
PASSED!

!testRun: #TerniLapilliGameTest #test02 stamp: 'IO 10/31/2020 10:36:03'!
PASSED!

!testRun: #TerniLapilliGameTest #test03 stamp: 'IO 10/31/2020 10:36:03'!
PASSED!

!testRun: #TerniLapilliGameTest #test04 stamp: 'IO 10/31/2020 10:36:03'!
PASSED!
!TerniLapilliGameTest methodsFor: 'as yet unclassified' stamp: 'IO 10/31/2020 10:36:36' prior: 50868134!
test01
	"x pone en 0@0"
	| aGame |
	aGame := TerniLapilliGame new.
	
	aGame xPutsOn: 0@0.

	self assert: (aGame hasColorXAt: (0@0)).
! !
!TerniLapilliGameTest methodsFor: 'as yet unclassified' stamp: 'IO 10/31/2020 10:36:49' prior: 50868112!
test02
	"x pone en 0@0 pero no en 0@1"
	| aGame |
	aGame := TerniLapilliGame new.
	
	aGame xPutsOn: 0@0.

	self deny: (aGame hasColorXAt: 0@1).
! !
!TerniLapilliGameTest methodsFor: 'as yet unclassified' stamp: 'IO 10/31/2020 10:37:05' prior: 50868119!
test03
	"x pone en 0@1"
	| aGame |
	aGame := TerniLapilliGame new.
	
	aGame xPutsOn: 0@1.

	self assert: (aGame hasColorXAt: 0@1).
! !
!TerniLapilliGameTest methodsFor: 'as yet unclassified' stamp: 'IO 10/31/2020 10:37:13' prior: 50868234!
test04
	"o pone en 0@0"
	| aGame |
	aGame := TerniLapilliGame new.
	
	aGame xPutsOn: 0@1.
	aGame oPutsOn: 0@0.

	self assert: (aGame hasColorOAt: (0@0)).
! !
!TerniLapilliGameTest methodsFor: 'as yet unclassified' stamp: 'IO 10/31/2020 10:45:04'!
test05
	"movimiento legal desp de haber jugado las tres fichas :D"
	| aGame |
	aGame := TerniLapilliGame new.
	
	aGame xPutsOn: 0@1.
	aGame oPutsOn: 0@0.
	aGame xPutsOn: 1@2.
	aGame oPutsOn: 2@1.
	aGame xPutsOn: 2@0.
	aGame oPutsOn: 2@2.
	
	aGame xMoves: (2@0) to: (1@0).

	self assert: (aGame hasColorXAt: (1@0)).
! !

!testRun: #TerniLapilliGameTest #test05 stamp: 'IO 10/31/2020 10:45:09'!
ERROR!

!testRun: #TerniLapilliGameTest #test05 stamp: 'IO 10/31/2020 10:45:23'!
ERROR!
!TerniLapilliGame methodsFor: 'as yet unclassified' stamp: 'IO 10/31/2020 10:45:32'!
xMoves: aPoint to: aPoint2 
	self shouldBeImplemented.! !
!TerniLapilliGame methodsFor: 'as yet unclassified' stamp: 'IO 10/31/2020 10:46:06' prior: 50868373!
xMoves: aPoint to: aPoint2 
	fichasX at: aPoint put: aPoint2 ! !

!testRun: #TerniLapilliGameTest #test01 stamp: 'IO 10/31/2020 10:46:07'!
PASSED!

!testRun: #TerniLapilliGameTest #test02 stamp: 'IO 10/31/2020 10:46:07'!
PASSED!

!testRun: #TerniLapilliGameTest #test03 stamp: 'IO 10/31/2020 10:46:07'!
PASSED!

!testRun: #TerniLapilliGameTest #test04 stamp: 'IO 10/31/2020 10:46:07'!
PASSED!

!testRun: #TerniLapilliGameTest #test05 stamp: 'IO 10/31/2020 10:46:07'!
ERROR!

!testRun: #TerniLapilliGameTest #test05 stamp: 'IO 10/31/2020 10:46:07'!
ERROR!
!TerniLapilliGame methodsFor: 'as yet unclassified' stamp: 'IO 10/31/2020 10:46:43' prior: 50868378!
xMoves: aPoint to: aPoint2 
	fichasX remove: aPoint.
	fichasX add: aPoint2.
! !

!testRun: #TerniLapilliGameTest #test01 stamp: 'IO 10/31/2020 10:46:45'!
PASSED!

!testRun: #TerniLapilliGameTest #test02 stamp: 'IO 10/31/2020 10:46:45'!
PASSED!

!testRun: #TerniLapilliGameTest #test03 stamp: 'IO 10/31/2020 10:46:45'!
PASSED!

!testRun: #TerniLapilliGameTest #test04 stamp: 'IO 10/31/2020 10:46:45'!
PASSED!

!testRun: #TerniLapilliGameTest #test05 stamp: 'IO 10/31/2020 10:46:45'!
PASSED!
!TerniLapilliGameTest methodsFor: 'as yet unclassified' stamp: 'IO 10/31/2020 10:47:41'!
test06
	"movimiento legal de O desp de haber jugado las tres fichas :D"
	| aGame |
	aGame := TerniLapilliGame new.
	
	aGame xPutsOn: 0@1.
	aGame oPutsOn: 0@0.
	aGame xPutsOn: 1@2.
	aGame oPutsOn: 2@1.
	aGame xPutsOn: 2@0.
	aGame oPutsOn: 2@2.
	
	aGame xMoves: (2@0) to: (1@0).
	aGame yMoves: (2@1) to: (1@1).

	self assert: (aGame hasColorYAt: (2@1)).
! !
!TerniLapilliGameTest methodsFor: 'as yet unclassified' stamp: 'IO 10/31/2020 10:47:56' prior: 50868418!
test06
	"movimiento legal de O desp de haber jugado las tres fichas :D"
	| aGame |
	aGame := TerniLapilliGame new.
	
	aGame xPutsOn: 0@1.
	aGame oPutsOn: 0@0.
	aGame xPutsOn: 1@2.
	aGame oPutsOn: 2@1.
	aGame xPutsOn: 2@0.
	aGame oPutsOn: 2@2.
	
	aGame xMoves: (2@0) to: (1@0).
	aGame oMoves: (2@1) to: (1@1).

	self assert: (aGame hasColorOAt: (2@1)).
! !

!testRun: #TerniLapilliGameTest #test01 stamp: 'IO 10/31/2020 10:48:06'!
PASSED!

!testRun: #TerniLapilliGameTest #test02 stamp: 'IO 10/31/2020 10:48:06'!
PASSED!

!testRun: #TerniLapilliGameTest #test03 stamp: 'IO 10/31/2020 10:48:06'!
PASSED!

!testRun: #TerniLapilliGameTest #test04 stamp: 'IO 10/31/2020 10:48:06'!
PASSED!

!testRun: #TerniLapilliGameTest #test05 stamp: 'IO 10/31/2020 10:48:06'!
PASSED!

!testRun: #TerniLapilliGameTest #test06 stamp: 'IO 10/31/2020 10:48:06'!
ERROR!

!testRun: #TerniLapilliGameTest #test06 stamp: 'IO 10/31/2020 10:48:06'!
ERROR!
!TerniLapilliGame methodsFor: 'as yet unclassified' stamp: 'IO 10/31/2020 10:48:18'!
oMoves: aPoint to: aPoint2 
	fichasO remove: aPoint.
	fichasO add: aPoint2.
! !
!TerniLapilliGame methodsFor: 'as yet unclassified' stamp: 'IO 10/31/2020 11:00:08'!
player: player move: aPoint to: aPoint2
	| fichas |
	(player = $X) ifTrue: [fichas := fichasX].
	(player = $O) ifTrue: [fichas := fichasO].
	fichas remove: aPoint.
	fichas add: aPoint2.
! !
!TerniLapilliGame methodsFor: 'as yet unclassified' stamp: 'IO 10/31/2020 11:01:04' prior: 50868399!
xMoves: aPoint to: aPoint2 
	^self player: $X move: aPoint to: aPoint
! !
!TerniLapilliGame methodsFor: 'as yet unclassified' stamp: 'IO 10/31/2020 11:01:14'!
yMoves: aPoint to: aPoint2 
	^self player: $Y move: aPoint to: aPoint
! !

!methodRemoval: TerniLapilliGame #yMoves:to: stamp: 'IO 10/31/2020 11:01:19'!
yMoves: aPoint to: aPoint2 
	^self player: $Y move: aPoint to: aPoint
!
!TerniLapilliGame methodsFor: 'as yet unclassified' stamp: 'IO 10/31/2020 11:01:26' prior: 50868465!
oMoves: aPoint to: aPoint2 
	^self player: $O move: aPoint to: aPoint
! !

!testRun: #TerniLapilliGameTest #test01 stamp: 'IO 10/31/2020 11:01:31'!
PASSED!

!testRun: #TerniLapilliGameTest #test02 stamp: 'IO 10/31/2020 11:01:31'!
PASSED!

!testRun: #TerniLapilliGameTest #test03 stamp: 'IO 10/31/2020 11:01:31'!
PASSED!

!testRun: #TerniLapilliGameTest #test04 stamp: 'IO 10/31/2020 11:01:31'!
PASSED!

!testRun: #TerniLapilliGameTest #test05 stamp: 'IO 10/31/2020 11:01:31'!
FAILURE!

!testRun: #TerniLapilliGameTest #test06 stamp: 'IO 10/31/2020 11:01:31'!
PASSED!

!testRun: #TerniLapilliGameTest #test05 stamp: 'IO 10/31/2020 11:01:31'!
FAILURE!

fichas!
!TerniLapilliGame methodsFor: 'as yet unclassified' stamp: 'IO 10/31/2020 11:03:12' prior: 50868471!
player: player move: aPoint to: aPoint2

	(player = $X) ifTrue: [	fichasX remove: aPoint.
	fichasX add: aPoint2.].
	(player = $O) ifTrue: [	fichasO remove: aPoint.
	fichasO add: aPoint2.].

! !

!testRun: #TerniLapilliGameTest #test01 stamp: 'IO 10/31/2020 11:03:14'!
PASSED!

!testRun: #TerniLapilliGameTest #test02 stamp: 'IO 10/31/2020 11:03:14'!
PASSED!

!testRun: #TerniLapilliGameTest #test03 stamp: 'IO 10/31/2020 11:03:14'!
PASSED!

!testRun: #TerniLapilliGameTest #test04 stamp: 'IO 10/31/2020 11:03:14'!
PASSED!

!testRun: #TerniLapilliGameTest #test05 stamp: 'IO 10/31/2020 11:03:14'!
FAILURE!

!testRun: #TerniLapilliGameTest #test06 stamp: 'IO 10/31/2020 11:03:14'!
PASSED!

!testRun: #TerniLapilliGameTest #test05 stamp: 'IO 10/31/2020 11:03:14'!
FAILURE!

!testRun: #TerniLapilliGameTest #test01 stamp: 'IO 10/31/2020 11:03:20'!
PASSED!

!testRun: #TerniLapilliGameTest #test02 stamp: 'IO 10/31/2020 11:03:20'!
PASSED!

!testRun: #TerniLapilliGameTest #test03 stamp: 'IO 10/31/2020 11:03:20'!
PASSED!

!testRun: #TerniLapilliGameTest #test04 stamp: 'IO 10/31/2020 11:03:20'!
PASSED!

!testRun: #TerniLapilliGameTest #test05 stamp: 'IO 10/31/2020 11:03:20'!
FAILURE!

!testRun: #TerniLapilliGameTest #test06 stamp: 'IO 10/31/2020 11:03:20'!
PASSED!

!testRun: #TerniLapilliGameTest #test05 stamp: 'IO 10/31/2020 11:03:20'!
FAILURE!

!testRun: #TerniLapilliGameTest #test05 stamp: 'IO 10/31/2020 11:04:11'!
FAILURE!

!testRun: #TerniLapilliGameTest #test01 stamp: 'IO 10/31/2020 11:04:24'!
PASSED!

!testRun: #TerniLapilliGameTest #test02 stamp: 'IO 10/31/2020 11:04:24'!
PASSED!

!testRun: #TerniLapilliGameTest #test03 stamp: 'IO 10/31/2020 11:04:24'!
PASSED!

!testRun: #TerniLapilliGameTest #test04 stamp: 'IO 10/31/2020 11:04:24'!
PASSED!

!testRun: #TerniLapilliGameTest #test05 stamp: 'IO 10/31/2020 11:04:24'!
FAILURE!

!testRun: #TerniLapilliGameTest #test06 stamp: 'IO 10/31/2020 11:04:24'!
PASSED!

!testRun: #TerniLapilliGameTest #test05 stamp: 'IO 10/31/2020 11:04:24'!
FAILURE!

aGame!
!TerniLapilliGame methodsFor: 'as yet unclassified' stamp: 'IO 10/31/2020 11:05:25' prior: 50868481!
xMoves: aPoint to: aPoint2 
	^self player: $X move: aPoint to: aPoint2
! !
!TerniLapilliGame methodsFor: 'as yet unclassified' stamp: 'IO 10/31/2020 11:05:37' prior: 50868497!
oMoves: aPoint to: aPoint2 
	^self player: $O move: aPoint to: aPoint2
! !

!testRun: #TerniLapilliGameTest #test01 stamp: 'IO 10/31/2020 11:05:38'!
PASSED!

!testRun: #TerniLapilliGameTest #test02 stamp: 'IO 10/31/2020 11:05:38'!
PASSED!

!testRun: #TerniLapilliGameTest #test03 stamp: 'IO 10/31/2020 11:05:38'!
PASSED!

!testRun: #TerniLapilliGameTest #test04 stamp: 'IO 10/31/2020 11:05:38'!
PASSED!

!testRun: #TerniLapilliGameTest #test05 stamp: 'IO 10/31/2020 11:05:38'!
PASSED!

!testRun: #TerniLapilliGameTest #test06 stamp: 'IO 10/31/2020 11:05:38'!
FAILURE!

!testRun: #TerniLapilliGameTest #test06 stamp: 'IO 10/31/2020 11:05:38'!
FAILURE!

!testRun: #TerniLapilliGameTest #test01 stamp: 'IO 10/31/2020 11:05:58'!
PASSED!

!testRun: #TerniLapilliGameTest #test02 stamp: 'IO 10/31/2020 11:05:58'!
PASSED!

!testRun: #TerniLapilliGameTest #test03 stamp: 'IO 10/31/2020 11:05:58'!
PASSED!

!testRun: #TerniLapilliGameTest #test04 stamp: 'IO 10/31/2020 11:05:58'!
PASSED!

!testRun: #TerniLapilliGameTest #test05 stamp: 'IO 10/31/2020 11:05:58'!
PASSED!

!testRun: #TerniLapilliGameTest #test06 stamp: 'IO 10/31/2020 11:05:58'!
FAILURE!

!testRun: #TerniLapilliGameTest #test06 stamp: 'IO 10/31/2020 11:05:58'!
FAILURE!
!TerniLapilliGameTest methodsFor: 'as yet unclassified' stamp: 'IO 10/31/2020 11:06:39' prior: 50868433!
test06
	"movimiento legal de O desp de haber jugado las tres fichas :D"
	| aGame |
	aGame := TerniLapilliGame new.
	
	aGame xPutsOn: 0@1.
	aGame oPutsOn: 0@0.
	aGame xPutsOn: 1@2.
	aGame oPutsOn: 2@1.
	aGame xPutsOn: 2@0.
	aGame oPutsOn: 2@2.
	
	aGame xMoves: (2@0) to: (1@0).
	aGame oMoves: (2@1) to: (1@1).

	self assert: (aGame hasColorOAt: (1@1)).
! !

!testRun: #TerniLapilliGameTest #test06 stamp: 'IO 10/31/2020 11:06:40'!
PASSED!

!testRun: #TerniLapilliGameTest #test01 stamp: 'IO 10/31/2020 11:06:40'!
PASSED!

!testRun: #TerniLapilliGameTest #test02 stamp: 'IO 10/31/2020 11:06:40'!
PASSED!

!testRun: #TerniLapilliGameTest #test03 stamp: 'IO 10/31/2020 11:06:40'!
PASSED!

!testRun: #TerniLapilliGameTest #test04 stamp: 'IO 10/31/2020 11:06:40'!
PASSED!

!testRun: #TerniLapilliGameTest #test05 stamp: 'IO 10/31/2020 11:06:40'!
PASSED!

!testRun: #TerniLapilliGameTest #test06 stamp: 'IO 10/31/2020 11:06:40'!
PASSED!

Object subclass: #FichasDeJugador
	instanceVariableNames: 'fichas'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Terni Lapilli'!

!classDefinition: #FichasDeJugador category: 'Terni Lapilli' stamp: 'IO 10/31/2020 11:07:37'!
Object subclass: #FichasDeJugador
	instanceVariableNames: 'fichas'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Terni Lapilli'!
!TerniLapilliGame methodsFor: 'as yet unclassified' stamp: 'IO 10/31/2020 11:08:06' prior: 50868588!
xMoves: aPoint to: aPoint2 
	fichasX remove: aPoint.
	fichasX add: aPoint2.
! !
!TerniLapilliGame methodsFor: 'as yet unclassified' stamp: 'IO 10/31/2020 11:08:22' prior: 50868594!
oMoves: aPoint to: aPoint2 
	fichasO remove: aPoint.
	fichasO add: aPoint2.
! !

!testRun: #TerniLapilliGameTest #test01 stamp: 'IO 10/31/2020 11:08:24'!
PASSED!

!testRun: #TerniLapilliGameTest #test02 stamp: 'IO 10/31/2020 11:08:24'!
PASSED!

!testRun: #TerniLapilliGameTest #test03 stamp: 'IO 10/31/2020 11:08:24'!
PASSED!

!testRun: #TerniLapilliGameTest #test04 stamp: 'IO 10/31/2020 11:08:24'!
PASSED!

!testRun: #TerniLapilliGameTest #test05 stamp: 'IO 10/31/2020 11:08:24'!
PASSED!

!testRun: #TerniLapilliGameTest #test06 stamp: 'IO 10/31/2020 11:08:24'!
PASSED!

!methodRemoval: TerniLapilliGame #player:move:to: stamp: 'IO 10/31/2020 11:08:32'!
player: player move: aPoint to: aPoint2

	(player = $X) ifTrue: [	fichasX remove: aPoint.
	fichasX add: aPoint2.].
	(player = $O) ifTrue: [	fichasO remove: aPoint.
	fichasO add: aPoint2.].

!
!FichasDeJugador class methodsFor: 'no messages' stamp: 'IO 10/31/2020 11:08:54' overrides: 16783533!
new
	self basicNew initialize! !
!FichasDeJugador methodsFor: 'no messages' stamp: 'IO 10/31/2020 11:09:05' overrides: 16896425!
initialize
	fichas := Set new.! !
!TerniLapilliGame methodsFor: 'as yet unclassified' stamp: 'IO 10/31/2020 11:09:31' prior: 50868303 overrides: 16896425!
initialize
	fichasX := FichasDeJugador new.
	fichasO := FichasDeJugador new.
! !
!FichasDeJugador methodsFor: 'as yet unclassified' stamp: 'IO 10/31/2020 11:10:32'!
move: aPoint to: aPoint2
	fichas remove: aPoint.
	fichas add: aPoint2.! !
!TerniLapilliGame methodsFor: 'as yet unclassified' stamp: 'IO 10/31/2020 11:10:52' prior: 50868687!
oMoves: aPoint to: aPoint2 
	fichasO move: aPoint to: aPoint.

! !
!TerniLapilliGame methodsFor: 'as yet unclassified' stamp: 'IO 10/31/2020 11:10:58' prior: 50868681!
xMoves: aPoint to: aPoint2 
	fichasX move: aPoint to: aPoint.

! !

!testRun: #TerniLapilliGameTest #test01 stamp: 'IO 10/31/2020 11:10:59'!
ERROR!

!testRun: #TerniLapilliGameTest #test02 stamp: 'IO 10/31/2020 11:10:59'!
ERROR!

!testRun: #TerniLapilliGameTest #test03 stamp: 'IO 10/31/2020 11:10:59'!
ERROR!

!testRun: #TerniLapilliGameTest #test04 stamp: 'IO 10/31/2020 11:10:59'!
ERROR!

!testRun: #TerniLapilliGameTest #test05 stamp: 'IO 10/31/2020 11:10:59'!
ERROR!

!testRun: #TerniLapilliGameTest #test06 stamp: 'IO 10/31/2020 11:10:59'!
ERROR!
!FichasDeJugador methodsFor: 'as yet unclassified' stamp: 'IO 10/31/2020 11:11:30'!
add: aPoint

	fichas add: aPoint.! !
!FichasDeJugador methodsFor: 'as yet unclassified' stamp: 'IO 10/31/2020 11:11:45'!
includes: aPoint

	^fichas includes: aPoint.! !

!testRun: #TerniLapilliGameTest #test02 stamp: 'IO 10/31/2020 11:11:52'!
ERROR!

!testRun: #TerniLapilliGameTest #test01 stamp: 'IO 10/31/2020 11:18:25'!
ERROR!

!testRun: #TerniLapilliGameTest #test02 stamp: 'IO 10/31/2020 11:18:25'!
ERROR!

!testRun: #TerniLapilliGameTest #test03 stamp: 'IO 10/31/2020 11:18:25'!
ERROR!

!testRun: #TerniLapilliGameTest #test04 stamp: 'IO 10/31/2020 11:18:25'!
ERROR!

!testRun: #TerniLapilliGameTest #test05 stamp: 'IO 10/31/2020 11:18:25'!
ERROR!

!testRun: #TerniLapilliGameTest #test06 stamp: 'IO 10/31/2020 11:18:25'!
ERROR!

aGame!

fichasX!

fichasX!
!FichasDeJugador class methodsFor: 'as yet unclassified' stamp: 'IO 10/31/2020 11:19:46' prior: 50868717 overrides: 16783533!
new
	^self basicNew initialize.
! !

!testRun: #TerniLapilliGameTest #test01 stamp: 'IO 10/31/2020 11:19:55'!
PASSED!

!testRun: #TerniLapilliGameTest #test02 stamp: 'IO 10/31/2020 11:19:55'!
PASSED!

!testRun: #TerniLapilliGameTest #test03 stamp: 'IO 10/31/2020 11:19:55'!
PASSED!

!testRun: #TerniLapilliGameTest #test04 stamp: 'IO 10/31/2020 11:19:55'!
PASSED!

!testRun: #TerniLapilliGameTest #test05 stamp: 'IO 10/31/2020 11:19:55'!
FAILURE!

!testRun: #TerniLapilliGameTest #test06 stamp: 'IO 10/31/2020 11:19:55'!
FAILURE!
!TerniLapilliGame methodsFor: 'as yet unclassified' stamp: 'IO 10/31/2020 11:20:18' prior: 50868745!
xMoves: aPoint to: aPoint2 
	fichasX move: aPoint to: aPoint2.

! !
!TerniLapilliGame methodsFor: 'as yet unclassified' stamp: 'IO 10/31/2020 11:20:27' prior: 50868739!
oMoves: aPoint to: aPoint2 
	fichasO move: aPoint to: aPoint2.

! !

!testRun: #TerniLapilliGameTest #test01 stamp: 'IO 10/31/2020 11:20:28'!
PASSED!

!testRun: #TerniLapilliGameTest #test02 stamp: 'IO 10/31/2020 11:20:28'!
PASSED!

!testRun: #TerniLapilliGameTest #test03 stamp: 'IO 10/31/2020 11:20:28'!
PASSED!

!testRun: #TerniLapilliGameTest #test04 stamp: 'IO 10/31/2020 11:20:28'!
PASSED!

!testRun: #TerniLapilliGameTest #test05 stamp: 'IO 10/31/2020 11:20:28'!
PASSED!

!testRun: #TerniLapilliGameTest #test06 stamp: 'IO 10/31/2020 11:20:28'!
PASSED!

!methodRemoval: TerniLapilliGame #aGame stamp: 'IO 10/31/2020 11:20:54'!
aGame
	self shouldBeImplemented.!

!testRun: #TerniLapilliGameTest #test01 stamp: 'IO 10/31/2020 11:20:58'!
PASSED!

!testRun: #TerniLapilliGameTest #test02 stamp: 'IO 10/31/2020 11:20:58'!
PASSED!

!testRun: #TerniLapilliGameTest #test03 stamp: 'IO 10/31/2020 11:20:58'!
PASSED!

!testRun: #TerniLapilliGameTest #test04 stamp: 'IO 10/31/2020 11:20:58'!
PASSED!

!testRun: #TerniLapilliGameTest #test05 stamp: 'IO 10/31/2020 11:20:58'!
PASSED!

!testRun: #TerniLapilliGameTest #test06 stamp: 'IO 10/31/2020 11:20:58'!
PASSED!
!TerniLapilliGame methodsFor: 'as yet unclassified' stamp: 'IO 10/31/2020 11:22:02'!
includesColorOAt: aPoint 
	^fichasO includes: aPoint.! !
!TerniLapilliGameTest methodsFor: 'as yet unclassified' stamp: 'IO 10/31/2020 11:22:02' prior: 50868347!
test04
	"o pone en 0@0"
	| aGame |
	aGame := TerniLapilliGame new.
	
	aGame xPutsOn: 0@1.
	aGame oPutsOn: 0@0.

	self assert: (aGame includesColorOAt: (0@0)).
! !
!TerniLapilliGameTest methodsFor: 'as yet unclassified' stamp: 'IO 10/31/2020 11:22:02' prior: 50868636!
test06
	"movimiento legal de O desp de haber jugado las tres fichas :D"
	| aGame |
	aGame := TerniLapilliGame new.
	
	aGame xPutsOn: 0@1.
	aGame oPutsOn: 0@0.
	aGame xPutsOn: 1@2.
	aGame oPutsOn: 2@1.
	aGame xPutsOn: 2@0.
	aGame oPutsOn: 2@2.
	
	aGame xMoves: (2@0) to: (1@0).
	aGame oMoves: (2@1) to: (1@1).

	self assert: (aGame includesColorOAt: (1@1)).
! !

!methodRemoval: TerniLapilliGame #hasColorOAt: stamp: 'IO 10/31/2020 11:22:02'!
hasColorOAt: aPoint 
	^fichasO includes: aPoint.!

!testRun: #TerniLapilliGameTest #test01 stamp: 'IO 10/31/2020 11:22:05'!
PASSED!

!testRun: #TerniLapilliGameTest #test02 stamp: 'IO 10/31/2020 11:22:05'!
PASSED!

!testRun: #TerniLapilliGameTest #test03 stamp: 'IO 10/31/2020 11:22:05'!
PASSED!

!testRun: #TerniLapilliGameTest #test04 stamp: 'IO 10/31/2020 11:22:05'!
PASSED!

!testRun: #TerniLapilliGameTest #test05 stamp: 'IO 10/31/2020 11:22:05'!
PASSED!

!testRun: #TerniLapilliGameTest #test06 stamp: 'IO 10/31/2020 11:22:05'!
PASSED!
!TerniLapilliGame methodsFor: 'as yet unclassified' stamp: 'IO 10/31/2020 11:22:21'!
includesColorXAt: aPoint 
	^fichasX includes: aPoint.! !
!TerniLapilliGameTest methodsFor: 'as yet unclassified' stamp: 'IO 10/31/2020 11:22:21' prior: 50868323!
test01
	"x pone en 0@0"
	| aGame |
	aGame := TerniLapilliGame new.
	
	aGame xPutsOn: 0@0.

	self assert: (aGame includesColorXAt: (0@0)).
! !
!TerniLapilliGameTest methodsFor: 'as yet unclassified' stamp: 'IO 10/31/2020 11:22:21' prior: 50868339!
test03
	"x pone en 0@1"
	| aGame |
	aGame := TerniLapilliGame new.
	
	aGame xPutsOn: 0@1.

	self assert: (aGame includesColorXAt: 0@1).
! !
!TerniLapilliGameTest methodsFor: 'as yet unclassified' stamp: 'IO 10/31/2020 11:22:21' prior: 50868331!
test02
	"x pone en 0@0 pero no en 0@1"
	| aGame |
	aGame := TerniLapilliGame new.
	
	aGame xPutsOn: 0@0.

	self deny: (aGame includesColorXAt: 0@1).
! !
!TerniLapilliGameTest methodsFor: 'as yet unclassified' stamp: 'IO 10/31/2020 11:22:21' prior: 50868355!
test05
	"movimiento legal desp de haber jugado las tres fichas :D"
	| aGame |
	aGame := TerniLapilliGame new.
	
	aGame xPutsOn: 0@1.
	aGame oPutsOn: 0@0.
	aGame xPutsOn: 1@2.
	aGame oPutsOn: 2@1.
	aGame xPutsOn: 2@0.
	aGame oPutsOn: 2@2.
	
	aGame xMoves: (2@0) to: (1@0).

	self assert: (aGame includesColorXAt: (1@0)).
! !

!methodRemoval: TerniLapilliGame #hasColorXAt: stamp: 'IO 10/31/2020 11:22:21'!
hasColorXAt: aPoint 
	^fichasX includes: aPoint.!
!TerniLapilliGame methodsFor: 'as yet unclassified' stamp: 'IO 10/31/2020 11:22:54' prior: 50868820!
oMoves: source to: destination 
	fichasO move: source to: destination.

! !
!TerniLapilliGame methodsFor: 'as yet unclassified' stamp: 'IO 10/31/2020 11:23:08' prior: 50868957!
oMoves: sourceLocation to: destinationLocation
	fichasO move: sourceLocation to: destinationLocation.

! !
!TerniLapilliGame methodsFor: 'as yet unclassified' stamp: 'IO 10/31/2020 11:24:44' prior: 50868963!
oMoves: sourceLocation to: destinationLocation
	fichasO move: sourceLocation to: destinationLocation.

! !
!TerniLapilliGame methodsFor: 'as yet unclassified' stamp: 'IO 10/31/2020 11:24:51' prior: 50868308!
oPutsOn: aLocation 
	fichasO add: aLocation.
! !
!TerniLapilliGame methodsFor: 'moves' stamp: 'IO 10/31/2020 11:27:04' prior: 50868196!
xPutsOn: aLocation 
	fichasX add: aLocation.
! !
!TerniLapilliGame methodsFor: 'moves' stamp: 'IO 10/31/2020 11:27:21' prior: 50868814!
xMoves: sourceLocation to: aPoint2 
	fichasX move: sourceLocation to: aPoint2.

! !
!TerniLapilliGame methodsFor: 'moves' stamp: 'IO 10/31/2020 11:27:45' prior: 50868987!
xMoves: sourceLocation to: destinationLocation 
	fichasX move: sourceLocation to: destinationLocation.

! !

!classDefinition: #TerniLapilliGame category: 'Terni Lapilli' stamp: 'IO 10/31/2020 11:28:03'!
Object subclass: #TerniLapilliGame
	instanceVariableNames: 'xTokens fichasO'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Terni Lapilli'!
!TerniLapilliGame methodsFor: 'as yet unclassified' stamp: 'IO 10/31/2020 11:28:03' prior: 50868993!
xMoves: sourceLocation to: destinationLocation 
	xTokens move: sourceLocation to: destinationLocation.

! !
!TerniLapilliGame methodsFor: 'as yet unclassified' stamp: 'IO 10/31/2020 11:28:03' prior: 50868727 overrides: 16896425!
initialize
	xTokens := FichasDeJugador new.
	fichasO := FichasDeJugador new.
! !
!TerniLapilliGame methodsFor: 'as yet unclassified' stamp: 'IO 10/31/2020 11:28:03' prior: 50868982!
xPutsOn: aLocation 
	xTokens add: aLocation.
! !
!TerniLapilliGame methodsFor: 'as yet unclassified' stamp: 'IO 10/31/2020 11:28:03' prior: 50868908!
includesColorXAt: aPoint 
	^xTokens includes: aPoint.! !

!classDefinition: #TerniLapilliGame category: 'Terni Lapilli' stamp: 'IO 10/31/2020 11:28:08'!
Object subclass: #TerniLapilliGame
	instanceVariableNames: 'xTokens oTokens'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Terni Lapilli'!
!TerniLapilliGame methodsFor: 'as yet unclassified' stamp: 'IO 10/31/2020 11:28:08' prior: 50868977!
oPutsOn: aLocation 
	oTokens add: aLocation.
! !
!TerniLapilliGame methodsFor: 'as yet unclassified' stamp: 'IO 10/31/2020 11:28:08' prior: 50869016 overrides: 16896425!
initialize
	xTokens := FichasDeJugador new.
	oTokens := FichasDeJugador new.
! !
!TerniLapilliGame methodsFor: 'as yet unclassified' stamp: 'IO 10/31/2020 11:28:08' prior: 50868859!
includesColorOAt: aPoint 
	^oTokens includes: aPoint.! !
!TerniLapilliGame methodsFor: 'as yet unclassified' stamp: 'IO 10/31/2020 11:28:08' prior: 50868970!
oMoves: sourceLocation to: destinationLocation
	oTokens move: sourceLocation to: destinationLocation.

! !

!testRun: #TerniLapilliGameTest #test01 stamp: 'IO 10/31/2020 11:28:16'!
PASSED!

!testRun: #TerniLapilliGameTest #test02 stamp: 'IO 10/31/2020 11:28:16'!
PASSED!

!testRun: #TerniLapilliGameTest #test03 stamp: 'IO 10/31/2020 11:28:16'!
PASSED!

!testRun: #TerniLapilliGameTest #test04 stamp: 'IO 10/31/2020 11:28:16'!
PASSED!

!testRun: #TerniLapilliGameTest #test05 stamp: 'IO 10/31/2020 11:28:16'!
PASSED!

!testRun: #TerniLapilliGameTest #test06 stamp: 'IO 10/31/2020 11:28:16'!
PASSED!

!classRenamed: #FichasDeJugador as: #TerniLapilliPlayerTokens stamp: 'IO 10/31/2020 11:28:55'!
Smalltalk renameClassNamed: #FichasDeJugador as: #TerniLapilliPlayerTokens!
!TerniLapilliGame methodsFor: 'as yet unclassified' stamp: 'IO 10/31/2020 11:28:55' prior: 50869046 overrides: 16896425!
initialize
	xTokens := TerniLapilliPlayerTokens new.
	oTokens := TerniLapilliPlayerTokens new.
! !

!testRun: #TerniLapilliGameTest #test01 stamp: 'IO 10/31/2020 11:29:16'!
PASSED!

!testRun: #TerniLapilliGameTest #test02 stamp: 'IO 10/31/2020 11:29:16'!
PASSED!

!testRun: #TerniLapilliGameTest #test03 stamp: 'IO 10/31/2020 11:29:16'!
PASSED!

!testRun: #TerniLapilliGameTest #test04 stamp: 'IO 10/31/2020 11:29:16'!
PASSED!

!testRun: #TerniLapilliGameTest #test05 stamp: 'IO 10/31/2020 11:29:16'!
PASSED!

!testRun: #TerniLapilliGameTest #test06 stamp: 'IO 10/31/2020 11:29:16'!
PASSED!

!testRun: #TerniLapilliGameTest #test01 stamp: 'IO 10/31/2020 11:29:18'!
PASSED!

!testRun: #TerniLapilliGameTest #test02 stamp: 'IO 10/31/2020 11:29:18'!
PASSED!

!testRun: #TerniLapilliGameTest #test03 stamp: 'IO 10/31/2020 11:29:18'!
PASSED!

!testRun: #TerniLapilliGameTest #test04 stamp: 'IO 10/31/2020 11:29:18'!
PASSED!

!testRun: #TerniLapilliGameTest #test05 stamp: 'IO 10/31/2020 11:29:18'!
PASSED!

!testRun: #TerniLapilliGameTest #test06 stamp: 'IO 10/31/2020 11:29:18'!
PASSED!

!testRun: #TerniLapilliGameTest #test01 stamp: 'IO 10/31/2020 11:29:21'!
PASSED!

!testRun: #TerniLapilliGameTest #test02 stamp: 'IO 10/31/2020 11:29:21'!
PASSED!

!testRun: #TerniLapilliGameTest #test03 stamp: 'IO 10/31/2020 11:29:21'!
PASSED!

!testRun: #TerniLapilliGameTest #test04 stamp: 'IO 10/31/2020 11:29:21'!
PASSED!

!testRun: #TerniLapilliGameTest #test05 stamp: 'IO 10/31/2020 11:29:21'!
PASSED!

!testRun: #TerniLapilliGameTest #test06 stamp: 'IO 10/31/2020 11:29:21'!
PASSED!

!testRun: #TerniLapilliGameTest #test01 stamp: 'IO 10/31/2020 11:29:22'!
PASSED!

!testRun: #TerniLapilliGameTest #test02 stamp: 'IO 10/31/2020 11:29:22'!
PASSED!

!testRun: #TerniLapilliGameTest #test03 stamp: 'IO 10/31/2020 11:29:22'!
PASSED!

!testRun: #TerniLapilliGameTest #test04 stamp: 'IO 10/31/2020 11:29:22'!
PASSED!

!testRun: #TerniLapilliGameTest #test05 stamp: 'IO 10/31/2020 11:29:22'!
PASSED!

!testRun: #TerniLapilliGameTest #test06 stamp: 'IO 10/31/2020 11:29:22'!
PASSED!

!testRun: #TerniLapilliGameTest #test01 stamp: 'IO 10/31/2020 11:29:29'!
PASSED!

!testRun: #TerniLapilliGameTest #test01 stamp: 'IO 10/31/2020 11:29:29'!
PASSED!

!testRun: #TerniLapilliGameTest #test02 stamp: 'IO 10/31/2020 11:29:29'!
PASSED!

!testRun: #TerniLapilliGameTest #test03 stamp: 'IO 10/31/2020 11:29:29'!
PASSED!

!testRun: #TerniLapilliGameTest #test04 stamp: 'IO 10/31/2020 11:29:29'!
PASSED!

!testRun: #TerniLapilliGameTest #test05 stamp: 'IO 10/31/2020 11:29:29'!
PASSED!

!testRun: #TerniLapilliGameTest #test06 stamp: 'IO 10/31/2020 11:29:29'!
PASSED!

!testRun: #TerniLapilliGameTest #test01 stamp: 'IO 10/31/2020 11:29:30'!
PASSED!

!testRun: #TerniLapilliGameTest #test01 stamp: 'IO 10/31/2020 11:29:30'!
PASSED!

!testRun: #TerniLapilliGameTest #test02 stamp: 'IO 10/31/2020 11:29:30'!
PASSED!

!testRun: #TerniLapilliGameTest #test03 stamp: 'IO 10/31/2020 11:29:30'!
PASSED!

!testRun: #TerniLapilliGameTest #test04 stamp: 'IO 10/31/2020 11:29:30'!
PASSED!

!testRun: #TerniLapilliGameTest #test05 stamp: 'IO 10/31/2020 11:29:30'!
PASSED!

!testRun: #TerniLapilliGameTest #test06 stamp: 'IO 10/31/2020 11:29:30'!
PASSED!

!testRun: #TerniLapilliGameTest #test01 stamp: 'IO 10/31/2020 11:29:31'!
PASSED!

!testRun: #TerniLapilliGameTest #test01 stamp: 'IO 10/31/2020 11:29:31'!
PASSED!

!testRun: #TerniLapilliGameTest #test02 stamp: 'IO 10/31/2020 11:29:31'!
PASSED!

!testRun: #TerniLapilliGameTest #test03 stamp: 'IO 10/31/2020 11:29:31'!
PASSED!

!testRun: #TerniLapilliGameTest #test04 stamp: 'IO 10/31/2020 11:29:31'!
PASSED!

!testRun: #TerniLapilliGameTest #test05 stamp: 'IO 10/31/2020 11:29:31'!
PASSED!

!testRun: #TerniLapilliGameTest #test06 stamp: 'IO 10/31/2020 11:29:31'!
PASSED!

!testRun: #TerniLapilliGameTest #test01 stamp: 'IO 10/31/2020 11:29:50'!
PASSED!

!testRun: #TerniLapilliGameTest #test01 stamp: 'IO 10/31/2020 11:29:50'!
PASSED!

!testRun: #TerniLapilliGameTest #test02 stamp: 'IO 10/31/2020 11:29:50'!
PASSED!

!testRun: #TerniLapilliGameTest #test03 stamp: 'IO 10/31/2020 11:29:50'!
PASSED!

!testRun: #TerniLapilliGameTest #test04 stamp: 'IO 10/31/2020 11:29:50'!
PASSED!

!testRun: #TerniLapilliGameTest #test05 stamp: 'IO 10/31/2020 11:29:50'!
PASSED!

!testRun: #TerniLapilliGameTest #test06 stamp: 'IO 10/31/2020 11:29:50'!
PASSED!

!testRun: #TerniLapilliGameTest #test01 stamp: 'IO 10/31/2020 11:29:52'!
PASSED!

!testRun: #TerniLapilliGameTest #test01 stamp: 'IO 10/31/2020 11:29:52'!
PASSED!

!testRun: #TerniLapilliGameTest #test02 stamp: 'IO 10/31/2020 11:29:52'!
PASSED!

!testRun: #TerniLapilliGameTest #test03 stamp: 'IO 10/31/2020 11:29:52'!
PASSED!

!testRun: #TerniLapilliGameTest #test04 stamp: 'IO 10/31/2020 11:29:52'!
PASSED!

!testRun: #TerniLapilliGameTest #test05 stamp: 'IO 10/31/2020 11:29:52'!
PASSED!

!testRun: #TerniLapilliGameTest #test06 stamp: 'IO 10/31/2020 11:29:52'!
PASSED!
!TerniLapilliGame methodsFor: 'testing' stamp: 'IO 10/31/2020 11:31:27' prior: 50869052!
includesColorOAt: aPosition 
	^oTokens includes: aPosition.! !
!TerniLapilliGame methodsFor: 'testing' stamp: 'IO 10/31/2020 11:31:32' prior: 50869027!
includesColorXAt: aPosition 
	^xTokens includes: aPosition.! !
!TerniLapilliGame methodsFor: 'moves' stamp: 'IO 10/31/2020 11:31:52' prior: 50869057!
oMoves: sourcePosition to: destinationPosition
	oTokens move: sourcePosition to: destinationPosition.

! !
!TerniLapilliGame methodsFor: 'moves' stamp: 'IO 10/31/2020 11:31:59' prior: 50869040!
oPutsOn: aPosition 
	oTokens add: aPosition.
! !
!TerniLapilliGame methodsFor: 'moves' stamp: 'IO 10/31/2020 11:32:09' prior: 50869008!
xMoves: sourcePosition to: destinationPosition 
	xTokens move: sourcePosition to: destinationPosition.

! !
!TerniLapilliGame methodsFor: 'moves' stamp: 'IO 10/31/2020 11:32:18' prior: 50869022!
xPutsOn: aPosition
	xTokens add: aPosition.
! !
!TerniLapilliPlayerTokens methodsFor: 'as yet unclassified' stamp: 'IO 10/31/2020 11:32:30' prior: 50868765!
add: aPosition

	fichas add: aPosition.! !
!TerniLapilliPlayerTokens methodsFor: 'moves' stamp: 'IO 10/31/2020 11:33:55' prior: 50868733!
move: sourcePosition to: destinationPosition
	fichas remove: sourcePosition.
	fichas add: destinationPosition.! !
!TerniLapilliPlayerTokens methodsFor: 'testing' stamp: 'IO 10/31/2020 11:34:05' prior: 50868769!
includes: aPosition

	^fichas includes: aPosition.! !

!classDefinition: #TerniLapilliPlayerTokens category: 'Terni Lapilli' stamp: 'IO 10/31/2020 11:34:15'!
Object subclass: #TerniLapilliPlayerTokens
	instanceVariableNames: 'tokens'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Terni Lapilli'!
!TerniLapilliPlayerTokens methodsFor: 'as yet unclassified' stamp: 'IO 10/31/2020 11:34:15' prior: 50869289!
includes: aPosition

	^tokens includes: aPosition.! !
!TerniLapilliPlayerTokens methodsFor: 'as yet unclassified' stamp: 'IO 10/31/2020 11:34:15' prior: 50868722 overrides: 16896425!
initialize
	tokens := Set new.! !
!TerniLapilliPlayerTokens methodsFor: 'as yet unclassified' stamp: 'IO 10/31/2020 11:34:15' prior: 50869277!
add: aPosition

	tokens add: aPosition.! !
!TerniLapilliPlayerTokens methodsFor: 'as yet unclassified' stamp: 'IO 10/31/2020 11:34:15' prior: 50869282!
move: sourcePosition to: destinationPosition
	tokens remove: sourcePosition.
	tokens add: destinationPosition.! !

!testRun: #TerniLapilliGameTest #test01 stamp: 'IO 10/31/2020 11:35:38'!
PASSED!

!testRun: #TerniLapilliGameTest #test02 stamp: 'IO 10/31/2020 11:35:38'!
PASSED!

!testRun: #TerniLapilliGameTest #test03 stamp: 'IO 10/31/2020 11:35:38'!
PASSED!

!testRun: #TerniLapilliGameTest #test04 stamp: 'IO 10/31/2020 11:35:38'!
PASSED!

!testRun: #TerniLapilliGameTest #test05 stamp: 'IO 10/31/2020 11:35:38'!
PASSED!

!testRun: #TerniLapilliGameTest #test06 stamp: 'IO 10/31/2020 11:35:38'!
PASSED!
!TerniLapilliGameTest methodsFor: 'as yet unclassified' stamp: 'IO 10/31/2020 11:36:38' prior: 50868874!
test06
	"movimiento legal de O desp de haber jugado las tres fichas :D"
	| aGame |
	aGame := TerniLapilliGame new.
	
	aGame xPutsOn: 0@1.
	aGame oPutsOn: 0@2.
	aGame xPutsOn: 1@2.
	aGame oPutsOn: 2@1.
	aGame xPutsOn: 2@0.
	aGame oPutsOn: 2@2.
	
	aGame xMoves: (2@0) to: (1@0).
	aGame oMoves: (2@1) to: (1@1).

	self assert: (aGame includesColorOAt: (1@1)).
! !
!TerniLapilliGameTest methodsFor: 'as yet unclassified' stamp: 'IO 10/31/2020 11:36:42' prior: 50868939!
test05
	"movimiento legal desp de haber jugado las tres fichas :D"
	| aGame |
	aGame := TerniLapilliGame new.
	
	aGame xPutsOn: 0@1.
	aGame oPutsOn: 0@2.
	aGame xPutsOn: 1@2.
	aGame oPutsOn: 2@1.
	aGame xPutsOn: 2@0.
	aGame oPutsOn: 2@2.
	
	aGame xMoves: (2@0) to: (1@0).

	self assert: (aGame includesColorXAt: (1@0)).
! !

!testRun: #TerniLapilliGameTest #test05 stamp: 'IO 10/31/2020 11:36:43'!
PASSED!

!testRun: #TerniLapilliGameTest #test01 stamp: 'IO 10/31/2020 11:36:43'!
PASSED!

!testRun: #TerniLapilliGameTest #test02 stamp: 'IO 10/31/2020 11:36:43'!
PASSED!

!testRun: #TerniLapilliGameTest #test03 stamp: 'IO 10/31/2020 11:36:43'!
PASSED!

!testRun: #TerniLapilliGameTest #test04 stamp: 'IO 10/31/2020 11:36:43'!
PASSED!

!testRun: #TerniLapilliGameTest #test05 stamp: 'IO 10/31/2020 11:36:43'!
PASSED!

!testRun: #TerniLapilliGameTest #test06 stamp: 'IO 10/31/2020 11:36:43'!
PASSED!
!TerniLapilliGameTest methodsFor: 'as yet unclassified' stamp: 'IO 10/31/2020 11:41:58' prior: 50869342!
test06
	"primer posicion ganadora para X, la primer columna"
	| aGame |
	aGame := TerniLapilliGame new.
	
	aGame xPutsOn: 0@0.
	aGame oPutsOn: 0@1.
	aGame xPutsOn: 1@0.
	aGame oPutsOn: 1@1.
	aGame xPutsOn: 2@0.
	
	self assert: aGame xHasWon.
! !
!TerniLapilliGameTest methodsFor: 'as yet unclassified' stamp: 'IO 10/31/2020 11:42:15' prior: 50869389!
test06
	"movimiento legal de O desp de haber jugado las tres fichas :D"
	| aGame |
	aGame := TerniLapilliGame new.
	
	aGame xPutsOn: 0@1.
	aGame oPutsOn: 0@2.
	aGame xPutsOn: 1@2.
	aGame oPutsOn: 2@1.
	aGame xPutsOn: 2@0.
	aGame oPutsOn: 2@2.
	
	aGame xMoves: (2@0) to: (1@0).
	aGame oMoves: (2@1) to: (1@1).

	self assert: (aGame includesColorOAt: (1@1)).
! !

!testRun: #TerniLapilliGameTest #test06 stamp: 'IO 10/31/2020 11:42:17'!
PASSED!

!testRun: #TerniLapilliGameTest #test01 stamp: 'IO 10/31/2020 11:42:17'!
PASSED!

!testRun: #TerniLapilliGameTest #test02 stamp: 'IO 10/31/2020 11:42:17'!
PASSED!

!testRun: #TerniLapilliGameTest #test03 stamp: 'IO 10/31/2020 11:42:17'!
PASSED!

!testRun: #TerniLapilliGameTest #test04 stamp: 'IO 10/31/2020 11:42:17'!
PASSED!

!testRun: #TerniLapilliGameTest #test05 stamp: 'IO 10/31/2020 11:42:17'!
PASSED!

!testRun: #TerniLapilliGameTest #test06 stamp: 'IO 10/31/2020 11:42:17'!
PASSED!
!TerniLapilliGameTest methodsFor: 'as yet unclassified' stamp: 'IO 10/31/2020 11:42:29'!
test07
	"primer posicion ganadora para X, la primer columna"
	| aGame |
	aGame := TerniLapilliGame new.
	
	aGame xPutsOn: 0@0.
	aGame oPutsOn: 0@1.
	aGame xPutsOn: 1@0.
	aGame oPutsOn: 1@1.
	aGame xPutsOn: 2@0.
	
	self assert: aGame xHasWon.
! !

!testRun: #TerniLapilliGameTest #test07 stamp: 'IO 10/31/2020 11:42:32'!
ERROR!
!TerniLapilliGame methodsFor: 'testing' stamp: 'IO 10/31/2020 11:42:50'!
xHasWon
	self shouldBeImplemented.! !
!TerniLapilliGame methodsFor: 'testing' stamp: 'IO 10/31/2020 11:42:56' prior: 50869445!
xHasWon
	^true.
! !

!testRun: #TerniLapilliGameTest #test07 stamp: 'IO 10/31/2020 11:43:00'!
PASSED!

!testRun: #TerniLapilliGameTest #test01 stamp: 'IO 10/31/2020 11:43:00'!
PASSED!

!testRun: #TerniLapilliGameTest #test02 stamp: 'IO 10/31/2020 11:43:00'!
PASSED!

!testRun: #TerniLapilliGameTest #test03 stamp: 'IO 10/31/2020 11:43:00'!
PASSED!

!testRun: #TerniLapilliGameTest #test04 stamp: 'IO 10/31/2020 11:43:00'!
PASSED!

!testRun: #TerniLapilliGameTest #test05 stamp: 'IO 10/31/2020 11:43:00'!
PASSED!

!testRun: #TerniLapilliGameTest #test06 stamp: 'IO 10/31/2020 11:43:00'!
PASSED!

!testRun: #TerniLapilliGameTest #test07 stamp: 'IO 10/31/2020 11:43:00'!
PASSED!
!TerniLapilliGameTest methodsFor: 'as yet unclassified' stamp: 'IO 10/31/2020 11:43:59'!
test08
	"X todavia no gano"
	| aGame |
	aGame := TerniLapilliGame new.
	
	aGame xPutsOn: 0@0.
	aGame oPutsOn: 0@1.
	aGame xPutsOn: 1@0.
	aGame oPutsOn: 1@1.
	aGame xPutsOn: 2@2.
	
	self deny: aGame xHasWon.
! !

!testRun: #TerniLapilliGameTest #test08 stamp: 'IO 10/31/2020 11:44:01'!
FAILURE!
!TerniLapilliGame methodsFor: 'testing' stamp: 'IO 10/31/2020 11:44:42' prior: 50869449!
xHasWon
	^xTokens areInWinningPosition.
! !

!testRun: #TerniLapilliGameTest #test01 stamp: 'IO 10/31/2020 11:44:45'!
PASSED!

!testRun: #TerniLapilliGameTest #test02 stamp: 'IO 10/31/2020 11:44:45'!
PASSED!

!testRun: #TerniLapilliGameTest #test03 stamp: 'IO 10/31/2020 11:44:45'!
PASSED!

!testRun: #TerniLapilliGameTest #test04 stamp: 'IO 10/31/2020 11:44:45'!
PASSED!

!testRun: #TerniLapilliGameTest #test05 stamp: 'IO 10/31/2020 11:44:45'!
PASSED!

!testRun: #TerniLapilliGameTest #test06 stamp: 'IO 10/31/2020 11:44:45'!
PASSED!

!testRun: #TerniLapilliGameTest #test07 stamp: 'IO 10/31/2020 11:44:45'!
ERROR!

!testRun: #TerniLapilliGameTest #test08 stamp: 'IO 10/31/2020 11:44:45'!
ERROR!
!TerniLapilliPlayerTokens methodsFor: 'testing' stamp: 'IO 10/31/2020 11:47:21'!
areInWinningPosition

	^(tokens includes: 0@0) and: (tokens includes: 0@1) and: (tokens includes: 0@2).! !

!testRun: #TerniLapilliGameTest #test01 stamp: 'IO 10/31/2020 11:47:28'!
PASSED!

!testRun: #TerniLapilliGameTest #test02 stamp: 'IO 10/31/2020 11:47:28'!
PASSED!

!testRun: #TerniLapilliGameTest #test03 stamp: 'IO 10/31/2020 11:47:28'!
PASSED!

!testRun: #TerniLapilliGameTest #test04 stamp: 'IO 10/31/2020 11:47:28'!
PASSED!

!testRun: #TerniLapilliGameTest #test05 stamp: 'IO 10/31/2020 11:47:28'!
PASSED!

!testRun: #TerniLapilliGameTest #test06 stamp: 'IO 10/31/2020 11:47:28'!
PASSED!

!testRun: #TerniLapilliGameTest #test07 stamp: 'IO 10/31/2020 11:47:28'!
FAILURE!

!testRun: #TerniLapilliGameTest #test08 stamp: 'IO 10/31/2020 11:47:28'!
PASSED!

!testRun: #TerniLapilliGameTest #test07 stamp: 'IO 10/31/2020 11:47:28'!
FAILURE!
!TerniLapilliPlayerTokens methodsFor: 'testing' stamp: 'IO 10/31/2020 11:47:58' prior: 50869510!
areInWinningPosition

	^(tokens includes: (0@0)) and: (tokens includes: (0@1)) and: (tokens includes: (0@2)).! !

!testRun: #TerniLapilliGameTest #test01 stamp: 'IO 10/31/2020 11:48:06'!
PASSED!

!testRun: #TerniLapilliGameTest #test02 stamp: 'IO 10/31/2020 11:48:06'!
PASSED!

!testRun: #TerniLapilliGameTest #test03 stamp: 'IO 10/31/2020 11:48:06'!
PASSED!

!testRun: #TerniLapilliGameTest #test04 stamp: 'IO 10/31/2020 11:48:06'!
PASSED!

!testRun: #TerniLapilliGameTest #test05 stamp: 'IO 10/31/2020 11:48:06'!
PASSED!

!testRun: #TerniLapilliGameTest #test06 stamp: 'IO 10/31/2020 11:48:06'!
PASSED!

!testRun: #TerniLapilliGameTest #test07 stamp: 'IO 10/31/2020 11:48:06'!
FAILURE!

!testRun: #TerniLapilliGameTest #test08 stamp: 'IO 10/31/2020 11:48:06'!
PASSED!

!testRun: #TerniLapilliGameTest #test07 stamp: 'IO 10/31/2020 11:48:06'!
FAILURE!

tokens includes: (0@0)!

(tokens includes: (0@0)) and: (tokens includes: (0@1))!

tokens!
!TerniLapilliPlayerTokens methodsFor: 'testing' stamp: 'IO 10/31/2020 11:48:41' prior: 50869540!
areInWinningPosition

	^(tokens includes: (0@0)) and: (tokens includes: (1@0)) and: (tokens includes: (2@0)).! !

!testRun: #TerniLapilliGameTest #test01 stamp: 'IO 10/31/2020 11:48:46'!
PASSED!

!testRun: #TerniLapilliGameTest #test02 stamp: 'IO 10/31/2020 11:48:46'!
PASSED!

!testRun: #TerniLapilliGameTest #test03 stamp: 'IO 10/31/2020 11:48:46'!
PASSED!

!testRun: #TerniLapilliGameTest #test04 stamp: 'IO 10/31/2020 11:48:46'!
PASSED!

!testRun: #TerniLapilliGameTest #test05 stamp: 'IO 10/31/2020 11:48:46'!
PASSED!

!testRun: #TerniLapilliGameTest #test06 stamp: 'IO 10/31/2020 11:48:46'!
PASSED!

!testRun: #TerniLapilliGameTest #test07 stamp: 'IO 10/31/2020 11:48:46'!
PASSED!

!testRun: #TerniLapilliGameTest #test08 stamp: 'IO 10/31/2020 11:48:46'!
PASSED!
!TerniLapilliGameTest methodsFor: 'as yet unclassified' stamp: 'IO 10/31/2020 11:49:26'!
test09
	"X gana con la segunda columna"
	| aGame |
	aGame := TerniLapilliGame new.
	
	aGame xPutsOn: 0@0.
	aGame oPutsOn: 0@1.
	aGame xPutsOn: 1@0.
	aGame oPutsOn: 1@1.
	aGame xPutsOn: 2@0.
	
	self assert: aGame xHasWon.
! !
!TerniLapilliGameTest methodsFor: 'as yet unclassified' stamp: 'IO 10/31/2020 11:50:20'!
wtest07
	"primer posicion ganadora para X, la primer columna"
	| aGame |
	aGame := TerniLapilliGame new.
	
	aGame xPutsOn: 0@1.
	aGame oPutsOn: 0@2.
	aGame xPutsOn: 1@1.
	aGame oPutsOn: 1@2.
	aGame xPutsOn: 2@1.
	
	self assert: aGame xHasWon.
! !
!TerniLapilliGameTest methodsFor: 'as yet unclassified' stamp: 'IO 10/31/2020 11:50:31' prior: 50869432!
test07
	"primer posicion ganadora para X, la primer columna"
	| aGame |
	aGame := TerniLapilliGame new.
	
	aGame xPutsOn: 0@0.
	aGame oPutsOn: 0@1.
	aGame xPutsOn: 1@0.
	aGame oPutsOn: 1@1.
	aGame xPutsOn: 2@0.
	
	self assert: aGame xHasWon.
! !
!TerniLapilliGameTest methodsFor: 'as yet unclassified' stamp: 'IO 10/31/2020 11:50:38' prior: 50869600!
test09
	"primer posicion ganadora para X, la primer columna"
	| aGame |
	aGame := TerniLapilliGame new.
	
	aGame xPutsOn: 0@1.
	aGame oPutsOn: 0@2.
	aGame xPutsOn: 1@1.
	aGame oPutsOn: 1@2.
	aGame xPutsOn: 2@1.
	
	self assert: aGame xHasWon.
! !

!methodRemoval: TerniLapilliGameTest #wtest07 stamp: 'IO 10/31/2020 11:50:40'!
wtest07
	"primer posicion ganadora para X, la primer columna"
	| aGame |
	aGame := TerniLapilliGame new.
	
	aGame xPutsOn: 0@1.
	aGame oPutsOn: 0@2.
	aGame xPutsOn: 1@1.
	aGame oPutsOn: 1@2.
	aGame xPutsOn: 2@1.
	
	self assert: aGame xHasWon.
!

!testRun: #TerniLapilliGameTest #test09 stamp: 'IO 10/31/2020 11:50:50'!
FAILURE!
!TerniLapilliPlayerTokens methodsFor: 'testing' stamp: 'IO 10/31/2020 11:51:43' prior: 50869573!
areInWinningPosition

	^(
		(tokens includes: (0@0)) and: (tokens includes: (1@0)) and: (tokens includes: (2@0))) or: (
		(tokens includes: (0@0)) and: (tokens includes: (1@0)) and: (tokens includes: (2@0))
	).! !
!TerniLapilliPlayerTokens methodsFor: 'testing' stamp: 'IO 10/31/2020 11:51:51' prior: 50869656!
areInWinningPosition

	^(
		(tokens includes: (0@0)) and: (tokens includes: (1@0)) and: (tokens includes: (2@0))) or: (
		(tokens includes: (0@1)) and: (tokens includes: (1@1)) and: (tokens includes: (2@1))
	).! !

!testRun: #TerniLapilliGameTest #test01 stamp: 'IO 10/31/2020 11:51:59'!
PASSED!

!testRun: #TerniLapilliGameTest #test02 stamp: 'IO 10/31/2020 11:51:59'!
PASSED!

!testRun: #TerniLapilliGameTest #test03 stamp: 'IO 10/31/2020 11:51:59'!
PASSED!

!testRun: #TerniLapilliGameTest #test04 stamp: 'IO 10/31/2020 11:51:59'!
PASSED!

!testRun: #TerniLapilliGameTest #test05 stamp: 'IO 10/31/2020 11:51:59'!
PASSED!

!testRun: #TerniLapilliGameTest #test06 stamp: 'IO 10/31/2020 11:51:59'!
PASSED!

!testRun: #TerniLapilliGameTest #test07 stamp: 'IO 10/31/2020 11:51:59'!
PASSED!

!testRun: #TerniLapilliGameTest #test08 stamp: 'IO 10/31/2020 11:51:59'!
PASSED!

!testRun: #TerniLapilliGameTest #test09 stamp: 'IO 10/31/2020 11:51:59'!
PASSED!
!TerniLapilliGameTest methodsFor: 'as yet unclassified' stamp: 'IO 10/31/2020 11:52:30' prior: 50869632!
test09
	"X gana competando la segunda columna"
	| aGame |
	aGame := TerniLapilliGame new.
	
	aGame xPutsOn: 0@1.
	aGame oPutsOn: 0@2.
	aGame xPutsOn: 1@1.
	aGame oPutsOn: 1@2.
	aGame xPutsOn: 2@1.
	
	self assert: aGame xHasWon.
! !
!TerniLapilliGameTest methodsFor: 'as yet unclassified' stamp: 'IO 10/31/2020 11:52:37'!
test10
	"ahora X gana competando la tercer columna"
	| aGame |
	aGame := TerniLapilliGame new.
	
	aGame xPutsOn: 0@1.
	aGame oPutsOn: 0@2.
	aGame xPutsOn: 1@1.
	aGame oPutsOn: 1@2.
	aGame xPutsOn: 2@1.
	
	self assert: aGame xHasWon.
! !
!TerniLapilliGameTest methodsFor: 'as yet unclassified' stamp: 'IO 10/31/2020 11:52:48' prior: 50869711!
test10
	"ahora X gana competando la tercer columna"
	| aGame |
	aGame := TerniLapilliGame new.
	
	aGame xPutsOn: 0@2.
	aGame oPutsOn: 0@0.
	aGame xPutsOn: 1@2.
	aGame oPutsOn: 1@0.
	aGame xPutsOn: 2@2.
	
	self assert: aGame xHasWon.
! !

!testRun: #TerniLapilliGameTest #test10 stamp: 'IO 10/31/2020 11:52:49'!
FAILURE!
!TerniLapilliPlayerTokens methodsFor: 'testing' stamp: 'IO 10/31/2020 11:53:41' prior: 50869666!
areInWinningPosition

	^(
		(tokens includes: (0@0)) and: (tokens includes: (1@0)) and: (tokens includes: (2@0))) or: (
		(tokens includes: (0@1)) and: (tokens includes: (1@1)) and: (tokens includes: (2@1))) or: (
		(tokens includes: (0@2)) and: (tokens includes: (1@2)) and: (tokens includes: (2@2))
	).! !

!testRun: #TerniLapilliGameTest #test01 stamp: 'IO 10/31/2020 11:53:58'!
PASSED!

!testRun: #TerniLapilliGameTest #test02 stamp: 'IO 10/31/2020 11:53:58'!
PASSED!

!testRun: #TerniLapilliGameTest #test03 stamp: 'IO 10/31/2020 11:53:58'!
PASSED!

!testRun: #TerniLapilliGameTest #test04 stamp: 'IO 10/31/2020 11:53:58'!
PASSED!

!testRun: #TerniLapilliGameTest #test05 stamp: 'IO 10/31/2020 11:53:58'!
PASSED!

!testRun: #TerniLapilliGameTest #test06 stamp: 'IO 10/31/2020 11:53:58'!
PASSED!

!testRun: #TerniLapilliGameTest #test07 stamp: 'IO 10/31/2020 11:53:58'!
PASSED!

!testRun: #TerniLapilliGameTest #test08 stamp: 'IO 10/31/2020 11:53:58'!
PASSED!

!testRun: #TerniLapilliGameTest #test09 stamp: 'IO 10/31/2020 11:53:58'!
PASSED!

!testRun: #TerniLapilliGameTest #test10 stamp: 'IO 10/31/2020 11:53:58'!
PASSED!
!TerniLapilliPlayerTokens methodsFor: 'testing' stamp: 'IO 10/31/2020 11:55:27'!
areInWinningPositionByColumn: columnNumber

	^(tokens includes: (0@columnNumber)) and: (tokens includes: (1@columnNumber)) and: (tokens includes: (2@columnNumber))! !
!TerniLapilliPlayerTokens methodsFor: 'testing' stamp: 'IO 10/31/2020 11:56:54' prior: 50869736!
areInWinningPosition

	^(
		(self areInWinningPositionByColumn: 0) or: (
		(self areInWinningPositionByColumn: 1)) or: (
		(self areInWinningPositionByColumn: 2))
	)! !

!testRun: #TerniLapilliGameTest #test01 stamp: 'IO 10/31/2020 11:57:00'!
PASSED!

!testRun: #TerniLapilliGameTest #test02 stamp: 'IO 10/31/2020 11:57:00'!
PASSED!

!testRun: #TerniLapilliGameTest #test03 stamp: 'IO 10/31/2020 11:57:00'!
PASSED!

!testRun: #TerniLapilliGameTest #test04 stamp: 'IO 10/31/2020 11:57:00'!
PASSED!

!testRun: #TerniLapilliGameTest #test05 stamp: 'IO 10/31/2020 11:57:00'!
PASSED!

!testRun: #TerniLapilliGameTest #test06 stamp: 'IO 10/31/2020 11:57:00'!
PASSED!

!testRun: #TerniLapilliGameTest #test07 stamp: 'IO 10/31/2020 11:57:00'!
PASSED!

!testRun: #TerniLapilliGameTest #test08 stamp: 'IO 10/31/2020 11:57:00'!
PASSED!

!testRun: #TerniLapilliGameTest #test09 stamp: 'IO 10/31/2020 11:57:00'!
PASSED!

!testRun: #TerniLapilliGameTest #test10 stamp: 'IO 10/31/2020 11:57:00'!
PASSED!

----SNAPSHOT----(31 October 2020 12:36:45) CuisUniversity-4384.image priorSource: 17169762!
!TerniLapilliGameTest methodsFor: 'as yet unclassified' stamp: 'IO 10/31/2020 12:37:46' prior: 50869722!
test10
	"ahora X gana competando alguna fila, usamos el patron _gana por fila_ directo"
	| aGame |
	aGame := TerniLapilliGame new.
	
	aGame xPutsOn: 0@0.
	aGame oPutsOn: 0@1.
	aGame xPutsOn: 1@0.
	aGame oPutsOn: 1@1.
	aGame xPutsOn: 0@2.
	
	self assert: aGame xHasWon.
! !
!TerniLapilliGameTest methodsFor: 'as yet unclassified' stamp: 'IO 10/31/2020 12:37:51' prior: 50869821!
test10
	"ahora X gana competando la tercer columna"
	| aGame |
	aGame := TerniLapilliGame new.
	
	aGame xPutsOn: 0@2.
	aGame oPutsOn: 0@0.
	aGame xPutsOn: 1@2.
	aGame oPutsOn: 1@0.
	aGame xPutsOn: 2@2.
	
	self assert: aGame xHasWon.
! !
!TerniLapilliGameTest methodsFor: 'as yet unclassified' stamp: 'IO 10/31/2020 12:37:55'!
test11
	"ahora X gana competando alguna fila, usamos el patron _gana por fila_ directo"
	| aGame |
	aGame := TerniLapilliGame new.
	
	aGame xPutsOn: 0@0.
	aGame oPutsOn: 0@1.
	aGame xPutsOn: 1@0.
	aGame oPutsOn: 1@1.
	aGame xPutsOn: 0@2.
	
	self assert: aGame xHasWon.
! !

!testRun: #TerniLapilliGameTest #test11 stamp: 'IO 10/31/2020 12:38:07'!
FAILURE!
!TerniLapilliPlayerTokens methodsFor: 'testing' stamp: 'IO 10/31/2020 12:38:43'!
areInWinningPositionByRow: rowNumber

	^(tokens includes: (rowNumber@0)) and: (tokens includes: (rowNumber@1)) and: (tokens includes: (rowNumber@2))! !
!TerniLapilliPlayerTokens methodsFor: 'testing' stamp: 'IO 10/31/2020 12:39:38' prior: 50869783!
areInWinningPosition

	^(
		(self areInWinningPositionByColumn: 0) or: (
		(self areInWinningPositionByColumn: 1)) or: (
		(self areInWinningPositionByColumn: 2)) or: (
		(self areInWinningPositionByRow: 0))
	)! !

!testRun: #TerniLapilliGameTest #test11 stamp: 'IO 10/31/2020 12:39:47'!
FAILURE!

tokens!
!TerniLapilliPlayerTokens methodsFor: 'testing' stamp: 'IO 10/31/2020 12:40:31' prior: 50869858!
areInWinningPositionByRow: rowNumber

	^(tokens includes: (rowNumber@0)) and: (tokens includes: (1@rowNumber)) and: (tokens includes: (2@rowNumber))! !

!testRun: #TerniLapilliGameTest #test11 stamp: 'IO 10/31/2020 12:40:37'!
FAILURE!
!TerniLapilliPlayerTokens methodsFor: 'testing' stamp: 'IO 10/31/2020 12:41:00' prior: 50869879!
areInWinningPositionByRow: rowNumber

	^(tokens includes: (rowNumber@0)) and: (tokens includes: (rowNumber@1)) and: (tokens includes: (rowNumber@2))! !

!testRun: #TerniLapilliGameTest #test11 stamp: 'IO 10/31/2020 12:41:07'!
FAILURE!

!testRun: #TerniLapilliGameTest #test01 stamp: 'IO 10/31/2020 12:41:27'!
PASSED!

!testRun: #TerniLapilliGameTest #test02 stamp: 'IO 10/31/2020 12:41:27'!
PASSED!

!testRun: #TerniLapilliGameTest #test03 stamp: 'IO 10/31/2020 12:41:27'!
PASSED!

!testRun: #TerniLapilliGameTest #test04 stamp: 'IO 10/31/2020 12:41:27'!
PASSED!

!testRun: #TerniLapilliGameTest #test05 stamp: 'IO 10/31/2020 12:41:27'!
PASSED!

!testRun: #TerniLapilliGameTest #test06 stamp: 'IO 10/31/2020 12:41:27'!
PASSED!

!testRun: #TerniLapilliGameTest #test07 stamp: 'IO 10/31/2020 12:41:27'!
PASSED!

!testRun: #TerniLapilliGameTest #test08 stamp: 'IO 10/31/2020 12:41:27'!
PASSED!

!testRun: #TerniLapilliGameTest #test09 stamp: 'IO 10/31/2020 12:41:27'!
PASSED!

!testRun: #TerniLapilliGameTest #test10 stamp: 'IO 10/31/2020 12:41:27'!
PASSED!

!testRun: #TerniLapilliGameTest #test11 stamp: 'IO 10/31/2020 12:41:27'!
FAILURE!

!testRun: #TerniLapilliGameTest #test11 stamp: 'IO 10/31/2020 12:41:27'!
FAILURE!
!TerniLapilliGameTest methodsFor: 'as yet unclassified' stamp: 'IO 10/31/2020 12:42:18' prior: 50869844!
test11
	"ahora X gana competando alguna fila, usamos el patron _gana por fila_ directo"
	| aGame |
	aGame := TerniLapilliGame new.
	
	aGame xPutsOn: 0@0.
	aGame oPutsOn: 0@1.
	aGame xPutsOn: 1@0.
	aGame oPutsOn: 1@1.
	aGame xPutsOn: 2@0.
	
	self assert: aGame xHasWon.
! !

!testRun: #TerniLapilliGameTest #test11 stamp: 'IO 10/31/2020 12:42:20'!
PASSED!

!testRun: #TerniLapilliGameTest #test01 stamp: 'IO 10/31/2020 12:42:20'!
PASSED!

!testRun: #TerniLapilliGameTest #test02 stamp: 'IO 10/31/2020 12:42:20'!
PASSED!

!testRun: #TerniLapilliGameTest #test03 stamp: 'IO 10/31/2020 12:42:20'!
PASSED!

!testRun: #TerniLapilliGameTest #test04 stamp: 'IO 10/31/2020 12:42:20'!
PASSED!

!testRun: #TerniLapilliGameTest #test05 stamp: 'IO 10/31/2020 12:42:20'!
PASSED!

!testRun: #TerniLapilliGameTest #test06 stamp: 'IO 10/31/2020 12:42:20'!
PASSED!

!testRun: #TerniLapilliGameTest #test07 stamp: 'IO 10/31/2020 12:42:20'!
PASSED!

!testRun: #TerniLapilliGameTest #test08 stamp: 'IO 10/31/2020 12:42:20'!
PASSED!

!testRun: #TerniLapilliGameTest #test09 stamp: 'IO 10/31/2020 12:42:20'!
PASSED!

!testRun: #TerniLapilliGameTest #test10 stamp: 'IO 10/31/2020 12:42:20'!
PASSED!

!testRun: #TerniLapilliGameTest #test11 stamp: 'IO 10/31/2020 12:42:20'!
PASSED!
!TerniLapilliGameTest methodsFor: 'as yet unclassified' stamp: 'IO 10/31/2020 12:42:33' prior: 50869932!
test11
	"ahora X gana competando la primer fila, usamos el patron _gana por fila_ directo"
	| aGame |
	aGame := TerniLapilliGame new.
	
	aGame xPutsOn: 0@0.
	aGame oPutsOn: 0@1.
	aGame xPutsOn: 1@0.
	aGame oPutsOn: 1@1.
	aGame xPutsOn: 2@0.
	
	self assert: aGame xHasWon.
! !
!TerniLapilliGameTest methodsFor: 'as yet unclassified' stamp: 'IO 10/31/2020 12:43:14' prior: 50869833!
test10
	"ahora X gana competando la tercer columna"
	| aGame |
	aGame := TerniLapilliGame new.
	
	aGame xPutsOn: 0@0.
	aGame oPutsOn: 1@0.
	aGame xPutsOn: 0@1.
	aGame oPutsOn: 1@1.
	aGame xPutsOn: 0@2.
	
	self assert: aGame xHasWon.
! !

!testRun: #TerniLapilliGameTest #test10 stamp: 'IO 10/31/2020 12:43:15'!
PASSED!

!testRun: #TerniLapilliGameTest #test01 stamp: 'IO 10/31/2020 12:43:15'!
PASSED!

!testRun: #TerniLapilliGameTest #test02 stamp: 'IO 10/31/2020 12:43:15'!
PASSED!

!testRun: #TerniLapilliGameTest #test03 stamp: 'IO 10/31/2020 12:43:15'!
PASSED!

!testRun: #TerniLapilliGameTest #test04 stamp: 'IO 10/31/2020 12:43:15'!
PASSED!

!testRun: #TerniLapilliGameTest #test05 stamp: 'IO 10/31/2020 12:43:15'!
PASSED!

!testRun: #TerniLapilliGameTest #test06 stamp: 'IO 10/31/2020 12:43:15'!
PASSED!

!testRun: #TerniLapilliGameTest #test07 stamp: 'IO 10/31/2020 12:43:15'!
PASSED!

!testRun: #TerniLapilliGameTest #test08 stamp: 'IO 10/31/2020 12:43:15'!
PASSED!

!testRun: #TerniLapilliGameTest #test09 stamp: 'IO 10/31/2020 12:43:15'!
PASSED!

!testRun: #TerniLapilliGameTest #test10 stamp: 'IO 10/31/2020 12:43:15'!
PASSED!

!testRun: #TerniLapilliGameTest #test11 stamp: 'IO 10/31/2020 12:43:15'!
PASSED!
!TerniLapilliGameTest methodsFor: 'as yet unclassified' stamp: 'IO 10/31/2020 12:43:19' prior: 50869987!
test10
	"ahora X gana competando la tercer columna"
	| aGame |
	aGame := TerniLapilliGame new.
	
	aGame xPutsOn: 0@2.
	aGame oPutsOn: 0@0.
	aGame xPutsOn: 1@2.
	aGame oPutsOn: 1@0.
	aGame xPutsOn: 2@2.
	
	self assert: aGame xHasWon.
! !

!testRun: #TerniLapilliGameTest #test10 stamp: 'IO 10/31/2020 12:43:24'!
PASSED!

!testRun: #TerniLapilliGameTest #test01 stamp: 'IO 10/31/2020 12:43:24'!
PASSED!

!testRun: #TerniLapilliGameTest #test02 stamp: 'IO 10/31/2020 12:43:24'!
PASSED!

!testRun: #TerniLapilliGameTest #test03 stamp: 'IO 10/31/2020 12:43:24'!
PASSED!

!testRun: #TerniLapilliGameTest #test04 stamp: 'IO 10/31/2020 12:43:24'!
PASSED!

!testRun: #TerniLapilliGameTest #test05 stamp: 'IO 10/31/2020 12:43:24'!
PASSED!

!testRun: #TerniLapilliGameTest #test06 stamp: 'IO 10/31/2020 12:43:24'!
PASSED!

!testRun: #TerniLapilliGameTest #test07 stamp: 'IO 10/31/2020 12:43:24'!
PASSED!

!testRun: #TerniLapilliGameTest #test08 stamp: 'IO 10/31/2020 12:43:24'!
PASSED!

!testRun: #TerniLapilliGameTest #test09 stamp: 'IO 10/31/2020 12:43:24'!
PASSED!

!testRun: #TerniLapilliGameTest #test10 stamp: 'IO 10/31/2020 12:43:24'!
PASSED!

!testRun: #TerniLapilliGameTest #test11 stamp: 'IO 10/31/2020 12:43:24'!
PASSED!
!TerniLapilliGameTest methodsFor: 'as yet unclassified' stamp: 'IO 10/31/2020 12:43:48' prior: 50869975!
test11
	"ahora X gana competando la primer fila"
	| aGame |
	aGame := TerniLapilliGame new.
	
	aGame xPutsOn: 0@0.
	aGame oPutsOn: 1@0.
	aGame xPutsOn: 0@1.
	aGame oPutsOn: 1@1.
	aGame xPutsOn: 0@2.
	
	self assert: aGame xHasWon.
! !

!testRun: #TerniLapilliGameTest #test11 stamp: 'IO 10/31/2020 12:43:49'!
PASSED!

!testRun: #TerniLapilliGameTest #test01 stamp: 'IO 10/31/2020 12:43:49'!
PASSED!

!testRun: #TerniLapilliGameTest #test02 stamp: 'IO 10/31/2020 12:43:49'!
PASSED!

!testRun: #TerniLapilliGameTest #test03 stamp: 'IO 10/31/2020 12:43:49'!
PASSED!

!testRun: #TerniLapilliGameTest #test04 stamp: 'IO 10/31/2020 12:43:49'!
PASSED!

!testRun: #TerniLapilliGameTest #test05 stamp: 'IO 10/31/2020 12:43:49'!
PASSED!

!testRun: #TerniLapilliGameTest #test06 stamp: 'IO 10/31/2020 12:43:49'!
PASSED!

!testRun: #TerniLapilliGameTest #test07 stamp: 'IO 10/31/2020 12:43:49'!
PASSED!

!testRun: #TerniLapilliGameTest #test08 stamp: 'IO 10/31/2020 12:43:49'!
PASSED!

!testRun: #TerniLapilliGameTest #test09 stamp: 'IO 10/31/2020 12:43:49'!
PASSED!

!testRun: #TerniLapilliGameTest #test10 stamp: 'IO 10/31/2020 12:43:49'!
PASSED!

!testRun: #TerniLapilliGameTest #test11 stamp: 'IO 10/31/2020 12:43:49'!
PASSED!
!TerniLapilliGameTest methodsFor: 'as yet unclassified' stamp: 'IO 10/31/2020 12:44:01' prior: 50870071!
test11
	"X gana competando la segunda fila"
	| aGame |
	aGame := TerniLapilliGame new.
	
	aGame xPutsOn: 0@0.
	aGame oPutsOn: 1@0.
	aGame xPutsOn: 0@1.
	aGame oPutsOn: 1@1.
	aGame xPutsOn: 0@2.
	
	self assert: aGame xHasWon.
! !
!TerniLapilliGameTest methodsFor: 'as yet unclassified' stamp: 'IO 10/31/2020 12:44:07' prior: 50870113!
test11
	"X gana competando la segunda fila"
	| aGame |
	aGame := TerniLapilliGame new.
	
	aGame xPutsOn: 1@0.
	aGame oPutsOn: 2@0.
	aGame xPutsOn: 1@1.
	aGame oPutsOn: 2@1.
	aGame xPutsOn: 1@2.
	
	self assert: aGame xHasWon.
! !

!testRun: #TerniLapilliGameTest #test11 stamp: 'IO 10/31/2020 12:44:08'!
FAILURE!
!TerniLapilliPlayerTokens methodsFor: 'testing' stamp: 'IO 10/31/2020 12:44:33' prior: 50869866!
areInWinningPosition

	^(
		(self areInWinningPositionByColumn: 0) or: (
		(self areInWinningPositionByColumn: 1)) or: (
		(self areInWinningPositionByColumn: 2)) or: (
		(self areInWinningPositionByRow: 0)) or: (
		(self areInWinningPositionByRow: 1))
	)! !

!testRun: #TerniLapilliGameTest #test01 stamp: 'IO 10/31/2020 12:44:39'!
PASSED!

!testRun: #TerniLapilliGameTest #test02 stamp: 'IO 10/31/2020 12:44:39'!
PASSED!

!testRun: #TerniLapilliGameTest #test03 stamp: 'IO 10/31/2020 12:44:39'!
PASSED!

!testRun: #TerniLapilliGameTest #test04 stamp: 'IO 10/31/2020 12:44:39'!
PASSED!

!testRun: #TerniLapilliGameTest #test05 stamp: 'IO 10/31/2020 12:44:39'!
PASSED!

!testRun: #TerniLapilliGameTest #test06 stamp: 'IO 10/31/2020 12:44:39'!
PASSED!

!testRun: #TerniLapilliGameTest #test07 stamp: 'IO 10/31/2020 12:44:39'!
PASSED!

!testRun: #TerniLapilliGameTest #test08 stamp: 'IO 10/31/2020 12:44:39'!
PASSED!

!testRun: #TerniLapilliGameTest #test09 stamp: 'IO 10/31/2020 12:44:39'!
PASSED!

!testRun: #TerniLapilliGameTest #test10 stamp: 'IO 10/31/2020 12:44:39'!
PASSED!

!testRun: #TerniLapilliGameTest #test11 stamp: 'IO 10/31/2020 12:44:39'!
PASSED!
!TerniLapilliGameTest methodsFor: 'as yet unclassified' stamp: 'IO 10/31/2020 12:44:55'!
test12
	"X gana competando la tercer fila"
	| aGame |
	aGame := TerniLapilliGame new.
	
	aGame xPutsOn: 2@0.
	aGame oPutsOn: 0@0.
	aGame xPutsOn: 2@1.
	aGame oPutsOn: 0@1.
	aGame xPutsOn: 2@2.
	
	self assert: aGame xHasWon.
! !
!TerniLapilliGameTest methodsFor: 'as yet unclassified' stamp: 'IO 10/31/2020 12:45:15'!
test13
	"X gana competando la tercer fila"
	| aGame |
	aGame := TerniLapilliGame new.
	
	aGame xPutsOn: 2@0.
	aGame oPutsOn: 0@0.
	aGame xPutsOn: 2@1.
	aGame oPutsOn: 0@1.
	aGame xPutsOn: 2@2.
	
	self assert: aGame xHasWon.
! !
!TerniLapilliGameTest methodsFor: 'as yet unclassified' stamp: 'IO 10/31/2020 12:45:31' prior: 50870177!
test12
	"X gana competando la segunda fila"
	| aGame |
	aGame := TerniLapilliGame new.
	
	aGame xPutsOn: 1@0.
	aGame oPutsOn: 2@0.
	aGame xPutsOn: 1@1.
	aGame oPutsOn: 2@1.
	aGame xPutsOn: 1@2.
	
	self assert: aGame xHasWon.
! !
!TerniLapilliGameTest methodsFor: 'as yet unclassified' stamp: 'IO 10/31/2020 12:45:45' prior: 50870124!
test11
	"X gana competando la primer fila"
	| aGame |
	aGame := TerniLapilliGame new.
	
	aGame xPutsOn: 0@0.
	aGame oPutsOn: 1@0.
	aGame xPutsOn: 0@1.
	aGame oPutsOn: 1@1.
	aGame xPutsOn: 0@2.
	
	self assert: aGame xHasWon.
! !

!testRun: #TerniLapilliGameTest #test11 stamp: 'IO 10/31/2020 12:45:47'!
PASSED!

!testRun: #TerniLapilliGameTest #test01 stamp: 'IO 10/31/2020 12:45:47'!
PASSED!

!testRun: #TerniLapilliGameTest #test02 stamp: 'IO 10/31/2020 12:45:47'!
PASSED!

!testRun: #TerniLapilliGameTest #test03 stamp: 'IO 10/31/2020 12:45:47'!
PASSED!

!testRun: #TerniLapilliGameTest #test04 stamp: 'IO 10/31/2020 12:45:47'!
PASSED!

!testRun: #TerniLapilliGameTest #test05 stamp: 'IO 10/31/2020 12:45:47'!
PASSED!

!testRun: #TerniLapilliGameTest #test06 stamp: 'IO 10/31/2020 12:45:47'!
PASSED!

!testRun: #TerniLapilliGameTest #test07 stamp: 'IO 10/31/2020 12:45:47'!
PASSED!

!testRun: #TerniLapilliGameTest #test08 stamp: 'IO 10/31/2020 12:45:47'!
PASSED!

!testRun: #TerniLapilliGameTest #test09 stamp: 'IO 10/31/2020 12:45:47'!
PASSED!

!testRun: #TerniLapilliGameTest #test10 stamp: 'IO 10/31/2020 12:45:47'!
PASSED!

!testRun: #TerniLapilliGameTest #test11 stamp: 'IO 10/31/2020 12:45:47'!
PASSED!

!testRun: #TerniLapilliGameTest #test12 stamp: 'IO 10/31/2020 12:45:47'!
PASSED!

!testRun: #TerniLapilliGameTest #test13 stamp: 'IO 10/31/2020 12:45:47'!
FAILURE!

!testRun: #TerniLapilliGameTest #test13 stamp: 'IO 10/31/2020 12:45:47'!
FAILURE!
!TerniLapilliPlayerTokens methodsFor: 'testing' stamp: 'IO 10/31/2020 12:46:15' prior: 50870137!
areInWinningPosition

	^(
		((self areInWinningPositionByColumn: 0) or: (
		(self areInWinningPositionByColumn: 1)) or: (
		(self areInWinningPositionByColumn: 2)) or: (
		(self areInWinningPositionByRow: 0)) or: (
		(self areInWinningPositionByRow: 1))) or: (
		(self areInWinningPositionByRow: 2))
	)! !

!testRun: #TerniLapilliGameTest #test01 stamp: 'IO 10/31/2020 12:46:21'!
PASSED!

!testRun: #TerniLapilliGameTest #test02 stamp: 'IO 10/31/2020 12:46:21'!
PASSED!

!testRun: #TerniLapilliGameTest #test03 stamp: 'IO 10/31/2020 12:46:21'!
PASSED!

!testRun: #TerniLapilliGameTest #test04 stamp: 'IO 10/31/2020 12:46:21'!
PASSED!

!testRun: #TerniLapilliGameTest #test05 stamp: 'IO 10/31/2020 12:46:21'!
PASSED!

!testRun: #TerniLapilliGameTest #test06 stamp: 'IO 10/31/2020 12:46:21'!
PASSED!

!testRun: #TerniLapilliGameTest #test07 stamp: 'IO 10/31/2020 12:46:21'!
PASSED!

!testRun: #TerniLapilliGameTest #test08 stamp: 'IO 10/31/2020 12:46:21'!
PASSED!

!testRun: #TerniLapilliGameTest #test09 stamp: 'IO 10/31/2020 12:46:21'!
PASSED!

!testRun: #TerniLapilliGameTest #test10 stamp: 'IO 10/31/2020 12:46:21'!
PASSED!

!testRun: #TerniLapilliGameTest #test11 stamp: 'IO 10/31/2020 12:46:21'!
PASSED!

!testRun: #TerniLapilliGameTest #test12 stamp: 'IO 10/31/2020 12:46:21'!
PASSED!

!testRun: #TerniLapilliGameTest #test13 stamp: 'IO 10/31/2020 12:46:21'!
PASSED!
!TerniLapilliGameTest methodsFor: 'as yet unclassified' stamp: 'IO 10/31/2020 12:46:59'!
test14
	"X gana competando la diagonal decreciente"
	| aGame |
	aGame := TerniLapilliGame new.
	
	aGame xPutsOn: 0@0.
	aGame oPutsOn: 1@0.
	aGame xPutsOn: 1@1.
	aGame oPutsOn: 2@1.
	aGame xPutsOn: 2@2.
	
	self assert: aGame xHasWon.
! !

!testRun: #TerniLapilliGameTest #test14 stamp: 'IO 10/31/2020 12:47:00'!
FAILURE!
!TerniLapilliPlayerTokens methodsFor: 'testing' stamp: 'IO 10/31/2020 12:50:46' prior: 50870258!
areInWinningPosition

	^(
		(
			(self areInWinningPositionByColumn: 0) or: (
			(self areInWinningPositionByColumn: 1)) or: (
			(self areInWinningPositionByColumn: 2)) or: (
			(self areInWinningPositionByRow: 0)) or: (
			(self areInWinningPositionByRow: 1))
		) or: (
			(self areInWinningPositionByRow: 2)
		)
	)! !
!TerniLapilliPlayerTokens methodsFor: 'testing' stamp: 'IO 10/31/2020 12:51:27' prior: 50870318!
areInWinningPosition

	^(
		(
			(self areInWinningPositionByColumn: 0) or: (
			(self areInWinningPositionByColumn: 1)) or: (
			(self areInWinningPositionByColumn: 2)) or: (
			(self areInWinningPositionByRow: 0)) or: (
			(self areInWinningPositionByRow: 1))
		) or: (
			(self areInWinningPositionByRow: 2) or: (
			((tokens includes: (0@0)) and: (tokens includes: (1@1)) and: (tokens includes: (2@2))))
		)
	)! !

!testRun: #TerniLapilliGameTest #test01 stamp: 'IO 10/31/2020 12:51:32'!
PASSED!

!testRun: #TerniLapilliGameTest #test02 stamp: 'IO 10/31/2020 12:51:32'!
PASSED!

!testRun: #TerniLapilliGameTest #test03 stamp: 'IO 10/31/2020 12:51:32'!
PASSED!

!testRun: #TerniLapilliGameTest #test04 stamp: 'IO 10/31/2020 12:51:32'!
PASSED!

!testRun: #TerniLapilliGameTest #test05 stamp: 'IO 10/31/2020 12:51:32'!
PASSED!

!testRun: #TerniLapilliGameTest #test06 stamp: 'IO 10/31/2020 12:51:32'!
PASSED!

!testRun: #TerniLapilliGameTest #test07 stamp: 'IO 10/31/2020 12:51:32'!
PASSED!

!testRun: #TerniLapilliGameTest #test08 stamp: 'IO 10/31/2020 12:51:32'!
PASSED!

!testRun: #TerniLapilliGameTest #test09 stamp: 'IO 10/31/2020 12:51:32'!
PASSED!

!testRun: #TerniLapilliGameTest #test10 stamp: 'IO 10/31/2020 12:51:32'!
PASSED!

!testRun: #TerniLapilliGameTest #test11 stamp: 'IO 10/31/2020 12:51:32'!
PASSED!

!testRun: #TerniLapilliGameTest #test12 stamp: 'IO 10/31/2020 12:51:32'!
PASSED!

!testRun: #TerniLapilliGameTest #test13 stamp: 'IO 10/31/2020 12:51:32'!
PASSED!

!testRun: #TerniLapilliGameTest #test14 stamp: 'IO 10/31/2020 12:51:32'!
PASSED!
!TerniLapilliGameTest methodsFor: 'as yet unclassified' stamp: 'IO 10/31/2020 12:52:25'!
test15
	"por ultimo, X gana competando la diagonal creciente"
	| aGame |
	aGame := TerniLapilliGame new.
	
	aGame xPutsOn: 0@2.
	aGame oPutsOn: 1@0.
	aGame xPutsOn: 1@1.
	aGame oPutsOn: 2@1.
	aGame xPutsOn: 2@0.
	
	self assert: aGame xHasWon.
! !

!testRun: #TerniLapilliGameTest #test15 stamp: 'IO 10/31/2020 12:52:26'!
FAILURE!
!TerniLapilliPlayerTokens methodsFor: 'testing' stamp: 'IO 10/31/2020 12:53:14' prior: 50870332!
areInWinningPosition

	^(
		(
			(self areInWinningPositionByColumn: 0) or: (
			(self areInWinningPositionByColumn: 1)) or: (
			(self areInWinningPositionByColumn: 2)) or: (
			(self areInWinningPositionByRow: 0)) or: (
			(self areInWinningPositionByRow: 1))
		) or: (
			(self areInWinningPositionByRow: 2) or: (
			(tokens includes: (0@0)) and: (tokens includes: (1@1)) and: (tokens includes: (2@2)))
		)
	)! !

!testRun: #TerniLapilliGameTest #test05 stamp: 'IO 10/31/2020 12:53:21'!
PASSED!

!testRun: #TerniLapilliGameTest #test01 stamp: 'IO 10/31/2020 12:53:21'!
PASSED!

!testRun: #TerniLapilliGameTest #test02 stamp: 'IO 10/31/2020 12:53:21'!
PASSED!

!testRun: #TerniLapilliGameTest #test03 stamp: 'IO 10/31/2020 12:53:21'!
PASSED!

!testRun: #TerniLapilliGameTest #test04 stamp: 'IO 10/31/2020 12:53:21'!
PASSED!

!testRun: #TerniLapilliGameTest #test05 stamp: 'IO 10/31/2020 12:53:21'!
PASSED!

!testRun: #TerniLapilliGameTest #test06 stamp: 'IO 10/31/2020 12:53:21'!
PASSED!

!testRun: #TerniLapilliGameTest #test07 stamp: 'IO 10/31/2020 12:53:21'!
PASSED!

!testRun: #TerniLapilliGameTest #test08 stamp: 'IO 10/31/2020 12:53:21'!
PASSED!

!testRun: #TerniLapilliGameTest #test09 stamp: 'IO 10/31/2020 12:53:21'!
PASSED!

!testRun: #TerniLapilliGameTest #test10 stamp: 'IO 10/31/2020 12:53:21'!
PASSED!

!testRun: #TerniLapilliGameTest #test11 stamp: 'IO 10/31/2020 12:53:21'!
PASSED!

!testRun: #TerniLapilliGameTest #test12 stamp: 'IO 10/31/2020 12:53:21'!
PASSED!

!testRun: #TerniLapilliGameTest #test13 stamp: 'IO 10/31/2020 12:53:21'!
PASSED!

!testRun: #TerniLapilliGameTest #test14 stamp: 'IO 10/31/2020 12:53:21'!
PASSED!

!testRun: #TerniLapilliGameTest #test15 stamp: 'IO 10/31/2020 12:53:21'!
FAILURE!

!testRun: #TerniLapilliGameTest #test15 stamp: 'IO 10/31/2020 12:53:21'!
FAILURE!
!TerniLapilliPlayerTokens methodsFor: 'testing' stamp: 'IO 10/31/2020 12:53:54' prior: 50870398!
areInWinningPosition

	^(
		(
			(self areInWinningPositionByColumn: 0) or: (
			(self areInWinningPositionByColumn: 1)) or: (
			(self areInWinningPositionByColumn: 2)) or: (
			(self areInWinningPositionByRow: 0)) or: (
			(self areInWinningPositionByRow: 1))
		) or: (
			(self areInWinningPositionByRow: 2) or: (
			(tokens includes: (0@0)) and: (tokens includes: (1@1)) and: (tokens includes: (2@2))) or: (
			(tokens includes: (0@2)) and: (tokens includes: (1@1)) and: (tokens includes: (0@2)))
		)
	)! !

!testRun: #TerniLapilliGameTest #test01 stamp: 'IO 10/31/2020 12:53:59'!
PASSED!

!testRun: #TerniLapilliGameTest #test02 stamp: 'IO 10/31/2020 12:53:59'!
PASSED!

!testRun: #TerniLapilliGameTest #test03 stamp: 'IO 10/31/2020 12:53:59'!
PASSED!

!testRun: #TerniLapilliGameTest #test04 stamp: 'IO 10/31/2020 12:53:59'!
PASSED!

!testRun: #TerniLapilliGameTest #test05 stamp: 'IO 10/31/2020 12:53:59'!
PASSED!

!testRun: #TerniLapilliGameTest #test06 stamp: 'IO 10/31/2020 12:53:59'!
PASSED!

!testRun: #TerniLapilliGameTest #test07 stamp: 'IO 10/31/2020 12:53:59'!
PASSED!

!testRun: #TerniLapilliGameTest #test08 stamp: 'IO 10/31/2020 12:53:59'!
PASSED!

!testRun: #TerniLapilliGameTest #test09 stamp: 'IO 10/31/2020 12:53:59'!
PASSED!

!testRun: #TerniLapilliGameTest #test10 stamp: 'IO 10/31/2020 12:53:59'!
PASSED!

!testRun: #TerniLapilliGameTest #test11 stamp: 'IO 10/31/2020 12:53:59'!
PASSED!

!testRun: #TerniLapilliGameTest #test12 stamp: 'IO 10/31/2020 12:53:59'!
PASSED!

!testRun: #TerniLapilliGameTest #test13 stamp: 'IO 10/31/2020 12:53:59'!
PASSED!

!testRun: #TerniLapilliGameTest #test14 stamp: 'IO 10/31/2020 12:53:59'!
PASSED!

!testRun: #TerniLapilliGameTest #test15 stamp: 'IO 10/31/2020 12:53:59'!
PASSED!
!TerniLapilliPlayerTokens methodsFor: 'testing' stamp: 'IO 10/31/2020 12:56:58'!
areInWinningPositionByDiagonal

	^(
		(tokens includes: (0@0)) and: (tokens includes: (1@1)) and: (tokens includes: (2@2))) or: (
		(tokens includes: (0@2)) and: (tokens includes: (1@1)) and: (tokens includes: (0@2))
	)! !
!TerniLapilliPlayerTokens methodsFor: 'testing' stamp: 'IO 10/31/2020 12:57:18' prior: 50870458!
areInWinningPosition

	^(
		(
			(self areInWinningPositionByColumn: 0) or: (
			(self areInWinningPositionByColumn: 1)) or: (
			(self areInWinningPositionByColumn: 2)) or: (
			(self areInWinningPositionByRow: 0)) or: (
			(self areInWinningPositionByRow: 1))
		) or: (
			(self areInWinningPositionByRow: 2) or: (
			self areInWinningPositionByDiagonal)
		)
	)! !

!testRun: #TerniLapilliGameTest #test01 stamp: 'IO 10/31/2020 12:57:24'!
PASSED!

!testRun: #TerniLapilliGameTest #test02 stamp: 'IO 10/31/2020 12:57:24'!
PASSED!

!testRun: #TerniLapilliGameTest #test03 stamp: 'IO 10/31/2020 12:57:24'!
PASSED!

!testRun: #TerniLapilliGameTest #test04 stamp: 'IO 10/31/2020 12:57:24'!
PASSED!

!testRun: #TerniLapilliGameTest #test05 stamp: 'IO 10/31/2020 12:57:24'!
PASSED!

!testRun: #TerniLapilliGameTest #test06 stamp: 'IO 10/31/2020 12:57:24'!
PASSED!

!testRun: #TerniLapilliGameTest #test07 stamp: 'IO 10/31/2020 12:57:24'!
PASSED!

!testRun: #TerniLapilliGameTest #test08 stamp: 'IO 10/31/2020 12:57:24'!
PASSED!

!testRun: #TerniLapilliGameTest #test09 stamp: 'IO 10/31/2020 12:57:24'!
PASSED!

!testRun: #TerniLapilliGameTest #test10 stamp: 'IO 10/31/2020 12:57:24'!
PASSED!

!testRun: #TerniLapilliGameTest #test11 stamp: 'IO 10/31/2020 12:57:24'!
PASSED!

!testRun: #TerniLapilliGameTest #test12 stamp: 'IO 10/31/2020 12:57:24'!
PASSED!

!testRun: #TerniLapilliGameTest #test13 stamp: 'IO 10/31/2020 12:57:24'!
PASSED!

!testRun: #TerniLapilliGameTest #test14 stamp: 'IO 10/31/2020 12:57:24'!
PASSED!

!testRun: #TerniLapilliGameTest #test15 stamp: 'IO 10/31/2020 12:57:24'!
PASSED!
!TerniLapilliPlayerTokens methodsFor: 'testing' stamp: 'IO 10/31/2020 12:59:23' prior: 50870525!
areInWinningPosition

	^(
		(
			(self areInWinningPositionByColumn: 0) or:
			(self areInWinningPositionByColumn: 1) or:
			(self areInWinningPositionByColumn: 2)
		) or: (
			(self areInWinningPositionByRow: 0) or:
			(self areInWinningPositionByRow: 1) or:
			(self areInWinningPositionByRow: 2)
		) or: (
			self areInWinningPositionByDiagonal
		)
	)! !

!testRun: #TerniLapilliGameTest #test01 stamp: 'IO 10/31/2020 12:59:30'!
PASSED!

!testRun: #TerniLapilliGameTest #test02 stamp: 'IO 10/31/2020 12:59:30'!
PASSED!

!testRun: #TerniLapilliGameTest #test03 stamp: 'IO 10/31/2020 12:59:30'!
PASSED!

!testRun: #TerniLapilliGameTest #test04 stamp: 'IO 10/31/2020 12:59:30'!
PASSED!

!testRun: #TerniLapilliGameTest #test05 stamp: 'IO 10/31/2020 12:59:30'!
PASSED!

!testRun: #TerniLapilliGameTest #test06 stamp: 'IO 10/31/2020 12:59:30'!
PASSED!

!testRun: #TerniLapilliGameTest #test07 stamp: 'IO 10/31/2020 12:59:30'!
PASSED!

!testRun: #TerniLapilliGameTest #test08 stamp: 'IO 10/31/2020 12:59:30'!
PASSED!

!testRun: #TerniLapilliGameTest #test09 stamp: 'IO 10/31/2020 12:59:30'!
PASSED!

!testRun: #TerniLapilliGameTest #test10 stamp: 'IO 10/31/2020 12:59:30'!
PASSED!

!testRun: #TerniLapilliGameTest #test11 stamp: 'IO 10/31/2020 12:59:30'!
PASSED!

!testRun: #TerniLapilliGameTest #test12 stamp: 'IO 10/31/2020 12:59:30'!
PASSED!

!testRun: #TerniLapilliGameTest #test13 stamp: 'IO 10/31/2020 12:59:30'!
PASSED!

!testRun: #TerniLapilliGameTest #test14 stamp: 'IO 10/31/2020 12:59:30'!
PASSED!

!testRun: #TerniLapilliGameTest #test15 stamp: 'IO 10/31/2020 12:59:30'!
PASSED!
!TerniLapilliGameTest methodsFor: 'as yet unclassified' stamp: 'IO 10/31/2020 13:01:41' prior: 50870384!
test15
	"ahora gana O!!"
	| aGame |
	aGame := TerniLapilliGame new.
	
	aGame xPutsOn: 0@0.
	aGame oPutsOn: 1@0.
	aGame xPutsOn: 0@1.
	aGame oPutsOn: 1@1.
	aGame xPutsOn: 2@2.
	aGame xPutsOn: 2@1.
	
	self assert: aGame yHasWon.
! !

!testRun: #TerniLapilliGameTest #test15 stamp: 'IO 10/31/2020 13:01:44'!
ERROR!
!TerniLapilliGame methodsFor: 'as yet unclassified' stamp: 'IO 10/31/2020 13:01:51'!
yHasWon
	self shouldBeImplemented.! !
!TerniLapilliGameTest methodsFor: 'as yet unclassified' stamp: 'IO 10/31/2020 13:02:18' prior: 50870631!
test15
	"ahora gana O!!"
	| aGame |
	aGame := TerniLapilliGame new.
	
	aGame xPutsOn: 0@0.
	aGame oPutsOn: 1@0.
	aGame xPutsOn: 0@1.
	aGame oPutsOn: 1@1.
	aGame xPutsOn: 2@2.
	aGame xPutsOn: 2@1.
	
	self assert: aGame oHasWon.
! !

!testRun: #TerniLapilliGameTest #test15 stamp: 'IO 10/31/2020 13:02:20'!
ERROR!
!TerniLapilliGame methodsFor: 'testing' stamp: 'IO 10/31/2020 13:02:29'!
oHasWon
	self shouldBeImplemented.! !
!TerniLapilliGame methodsFor: 'testing' stamp: 'IO 10/31/2020 13:02:39' prior: 50870662!
oHasWon
	oTokens areInWinningPosition.
! !

!testRun: #TerniLapilliGameTest #test15 stamp: 'IO 10/31/2020 13:02:42'!
ERROR!

!testRun: #TerniLapilliGameTest #test15 stamp: 'IO 10/31/2020 13:02:48'!
ERROR!
!TerniLapilliGameTest methodsFor: 'as yet unclassified' stamp: 'IO 10/31/2020 13:03:09'!
test16
	"ahora gana O!!"
	| aGame |
	aGame := TerniLapilliGame new.
	
	aGame xPutsOn: 0@0.
	aGame oPutsOn: 1@0.
	aGame xPutsOn: 0@1.
	aGame oPutsOn: 1@1.
	aGame xPutsOn: 2@2.
	aGame xPutsOn: 2@1.
	
	self assert: aGame oHasWon.
! !
!TerniLapilliGameTest methodsFor: 'as yet unclassified' stamp: 'IO 10/31/2020 13:06:11' prior: 50870304!
test14
	"X gana competando la diagonal creciente"
	| aGame |
	aGame := TerniLapilliGame new.
	
	aGame xPutsOn: 2@0.
	aGame oPutsOn: 1@0.
	aGame xPutsOn: 1@1.
	aGame oPutsOn: 2@1.
	aGame xPutsOn: 0@2.
	
	self assert: aGame xHasWon.
! !
!TerniLapilliGameTest methodsFor: 'as yet unclassified' stamp: 'IO 10/31/2020 13:06:25' prior: 50870687!
test14
	"X gana competando la diagonal creciente"
	| aGame |
	aGame := TerniLapilliGame new.
	
	aGame xPutsOn: 0@0.
	aGame oPutsOn: 1@0.
	aGame xPutsOn: 1@1.
	aGame oPutsOn: 2@1.
	aGame xPutsOn: 2@2.
	
	self assert: aGame xHasWon.
! !
!TerniLapilliGameTest methodsFor: 'as yet unclassified' stamp: 'IO 10/31/2020 13:06:35' prior: 50870649!
test15
	"X gana competando la diagonal creciente"
	| aGame |
	aGame := TerniLapilliGame new.
	
	aGame xPutsOn: 2@0.
	aGame oPutsOn: 1@0.
	aGame xPutsOn: 1@1.
	aGame oPutsOn: 2@1.
	aGame xPutsOn: 0@2.
	
	self assert: aGame xHasWon.
! !
!TerniLapilliGameTest methodsFor: 'as yet unclassified' stamp: 'IO 10/31/2020 13:06:45' prior: 50870709!
test15
	"X gana competando la diagonal decreciente"
	| aGame |
	aGame := TerniLapilliGame new.
	
	aGame xPutsOn: 2@0.
	aGame oPutsOn: 1@0.
	aGame xPutsOn: 1@1.
	aGame oPutsOn: 2@1.
	aGame xPutsOn: 0@2.
	
	self assert: aGame xHasWon.
! !

!testRun: #TerniLapilliGameTest #test16 stamp: 'IO 10/31/2020 13:06:50'!
ERROR!

!methodRemoval: TerniLapilliGame #yHasWon stamp: 'IO 10/31/2020 13:06:57'!
yHasWon
	self shouldBeImplemented.!
!TerniLapilliGame methodsFor: 'testing' stamp: 'IO 10/31/2020 13:07:07' prior: 50870666!
oHasWon
	^oTokens areInWinningPosition.
! !

!testRun: #TerniLapilliGameTest #test01 stamp: 'IO 10/31/2020 13:07:08'!
PASSED!

!testRun: #TerniLapilliGameTest #test02 stamp: 'IO 10/31/2020 13:07:08'!
PASSED!

!testRun: #TerniLapilliGameTest #test03 stamp: 'IO 10/31/2020 13:07:08'!
PASSED!

!testRun: #TerniLapilliGameTest #test04 stamp: 'IO 10/31/2020 13:07:08'!
PASSED!

!testRun: #TerniLapilliGameTest #test05 stamp: 'IO 10/31/2020 13:07:08'!
PASSED!

!testRun: #TerniLapilliGameTest #test06 stamp: 'IO 10/31/2020 13:07:08'!
PASSED!

!testRun: #TerniLapilliGameTest #test07 stamp: 'IO 10/31/2020 13:07:08'!
PASSED!

!testRun: #TerniLapilliGameTest #test08 stamp: 'IO 10/31/2020 13:07:08'!
PASSED!

!testRun: #TerniLapilliGameTest #test09 stamp: 'IO 10/31/2020 13:07:08'!
PASSED!

!testRun: #TerniLapilliGameTest #test10 stamp: 'IO 10/31/2020 13:07:08'!
PASSED!

!testRun: #TerniLapilliGameTest #test11 stamp: 'IO 10/31/2020 13:07:08'!
PASSED!

!testRun: #TerniLapilliGameTest #test12 stamp: 'IO 10/31/2020 13:07:08'!
PASSED!

!testRun: #TerniLapilliGameTest #test13 stamp: 'IO 10/31/2020 13:07:08'!
PASSED!

!testRun: #TerniLapilliGameTest #test14 stamp: 'IO 10/31/2020 13:07:08'!
PASSED!

!testRun: #TerniLapilliGameTest #test15 stamp: 'IO 10/31/2020 13:07:08'!
PASSED!

!testRun: #TerniLapilliGameTest #test16 stamp: 'IO 10/31/2020 13:07:08'!
FAILURE!

!testRun: #TerniLapilliGameTest #test16 stamp: 'IO 10/31/2020 13:07:08'!
FAILURE!

!testRun: #TerniLapilliGameTest #test01 stamp: 'IO 10/31/2020 13:07:18'!
PASSED!

!testRun: #TerniLapilliGameTest #test02 stamp: 'IO 10/31/2020 13:07:18'!
PASSED!

!testRun: #TerniLapilliGameTest #test03 stamp: 'IO 10/31/2020 13:07:18'!
PASSED!

!testRun: #TerniLapilliGameTest #test04 stamp: 'IO 10/31/2020 13:07:18'!
PASSED!

!testRun: #TerniLapilliGameTest #test05 stamp: 'IO 10/31/2020 13:07:18'!
PASSED!

!testRun: #TerniLapilliGameTest #test06 stamp: 'IO 10/31/2020 13:07:18'!
PASSED!

!testRun: #TerniLapilliGameTest #test07 stamp: 'IO 10/31/2020 13:07:18'!
PASSED!

!testRun: #TerniLapilliGameTest #test08 stamp: 'IO 10/31/2020 13:07:18'!
PASSED!

!testRun: #TerniLapilliGameTest #test09 stamp: 'IO 10/31/2020 13:07:18'!
PASSED!

!testRun: #TerniLapilliGameTest #test10 stamp: 'IO 10/31/2020 13:07:18'!
PASSED!

!testRun: #TerniLapilliGameTest #test11 stamp: 'IO 10/31/2020 13:07:18'!
PASSED!

!testRun: #TerniLapilliGameTest #test12 stamp: 'IO 10/31/2020 13:07:18'!
PASSED!

!testRun: #TerniLapilliGameTest #test13 stamp: 'IO 10/31/2020 13:07:18'!
PASSED!

!testRun: #TerniLapilliGameTest #test14 stamp: 'IO 10/31/2020 13:07:18'!
PASSED!

!testRun: #TerniLapilliGameTest #test15 stamp: 'IO 10/31/2020 13:07:18'!
PASSED!

!testRun: #TerniLapilliGameTest #test16 stamp: 'IO 10/31/2020 13:07:18'!
FAILURE!

!testRun: #TerniLapilliGameTest #test16 stamp: 'IO 10/31/2020 13:07:18'!
FAILURE!
!TerniLapilliGameTest methodsFor: 'as yet unclassified' stamp: 'IO 10/31/2020 13:07:42' prior: 50870676!
test16
	"ahora gana O!!"
	| aGame |
	aGame := TerniLapilliGame new.
	
	aGame xPutsOn: 0@0.
	aGame oPutsOn: 1@0.
	aGame xPutsOn: 0@1.
	aGame oPutsOn: 1@1.
	aGame xPutsOn: 2@2.
	aGame oPutsOn: 2@1.
	
	self assert: aGame oHasWon.
! !

!testRun: #TerniLapilliGameTest #test16 stamp: 'IO 10/31/2020 13:07:49'!
FAILURE!

!testRun: #TerniLapilliGameTest #test16 stamp: 'IO 10/31/2020 13:07:57'!
FAILURE!
!TerniLapilliGameTest methodsFor: 'as yet unclassified' stamp: 'IO 10/31/2020 13:09:19' prior: 50870829!
test16
	"ahora gana O!!"
	| aGame |
	aGame := TerniLapilliGame new.
	
	aGame xPutsOn: 0@0.
	aGame oPutsOn: 0@1.
	aGame xPutsOn: 2@0.
	aGame oPutsOn: 1@1.
	aGame xPutsOn: 2@2.
	aGame oPutsOn: 2@1.
	
	self assert: aGame oHasWon.
! !

!testRun: #TerniLapilliGameTest #test16 stamp: 'IO 10/31/2020 13:09:21'!
PASSED!

!testRun: #TerniLapilliGameTest #test01 stamp: 'IO 10/31/2020 13:09:21'!
PASSED!

!testRun: #TerniLapilliGameTest #test02 stamp: 'IO 10/31/2020 13:09:21'!
PASSED!

!testRun: #TerniLapilliGameTest #test03 stamp: 'IO 10/31/2020 13:09:21'!
PASSED!

!testRun: #TerniLapilliGameTest #test04 stamp: 'IO 10/31/2020 13:09:21'!
PASSED!

!testRun: #TerniLapilliGameTest #test05 stamp: 'IO 10/31/2020 13:09:21'!
PASSED!

!testRun: #TerniLapilliGameTest #test06 stamp: 'IO 10/31/2020 13:09:21'!
PASSED!

!testRun: #TerniLapilliGameTest #test07 stamp: 'IO 10/31/2020 13:09:21'!
PASSED!

!testRun: #TerniLapilliGameTest #test08 stamp: 'IO 10/31/2020 13:09:21'!
PASSED!

!testRun: #TerniLapilliGameTest #test09 stamp: 'IO 10/31/2020 13:09:21'!
PASSED!

!testRun: #TerniLapilliGameTest #test10 stamp: 'IO 10/31/2020 13:09:21'!
PASSED!

!testRun: #TerniLapilliGameTest #test11 stamp: 'IO 10/31/2020 13:09:21'!
PASSED!

!testRun: #TerniLapilliGameTest #test12 stamp: 'IO 10/31/2020 13:09:21'!
PASSED!

!testRun: #TerniLapilliGameTest #test13 stamp: 'IO 10/31/2020 13:09:21'!
PASSED!

!testRun: #TerniLapilliGameTest #test14 stamp: 'IO 10/31/2020 13:09:21'!
PASSED!

!testRun: #TerniLapilliGameTest #test15 stamp: 'IO 10/31/2020 13:09:21'!
PASSED!

!testRun: #TerniLapilliGameTest #test16 stamp: 'IO 10/31/2020 13:09:21'!
PASSED!
!TerniLapilliPlayerTokens methodsFor: 'testing' stamp: 'IO 10/31/2020 13:12:15' prior: 50870515!
areInWinningPositionByDiagonal

	^(tokens includes: (1@1)) and: (
		((tokens includes: (0@0)) and: (tokens includes: (2@2))) or: (
		(tokens includes: (0@2)) and: (tokens includes: (0@2))
	))! !

!testRun: #TerniLapilliGameTest #test01 stamp: 'IO 10/31/2020 13:12:20'!
PASSED!

!testRun: #TerniLapilliGameTest #test02 stamp: 'IO 10/31/2020 13:12:20'!
PASSED!

!testRun: #TerniLapilliGameTest #test03 stamp: 'IO 10/31/2020 13:12:20'!
PASSED!

!testRun: #TerniLapilliGameTest #test04 stamp: 'IO 10/31/2020 13:12:20'!
PASSED!

!testRun: #TerniLapilliGameTest #test05 stamp: 'IO 10/31/2020 13:12:20'!
PASSED!

!testRun: #TerniLapilliGameTest #test06 stamp: 'IO 10/31/2020 13:12:20'!
PASSED!

!testRun: #TerniLapilliGameTest #test07 stamp: 'IO 10/31/2020 13:12:20'!
PASSED!

!testRun: #TerniLapilliGameTest #test08 stamp: 'IO 10/31/2020 13:12:20'!
PASSED!

!testRun: #TerniLapilliGameTest #test09 stamp: 'IO 10/31/2020 13:12:20'!
PASSED!

!testRun: #TerniLapilliGameTest #test10 stamp: 'IO 10/31/2020 13:12:20'!
PASSED!

!testRun: #TerniLapilliGameTest #test11 stamp: 'IO 10/31/2020 13:12:20'!
PASSED!

!testRun: #TerniLapilliGameTest #test12 stamp: 'IO 10/31/2020 13:12:20'!
PASSED!

!testRun: #TerniLapilliGameTest #test13 stamp: 'IO 10/31/2020 13:12:20'!
PASSED!

!testRun: #TerniLapilliGameTest #test14 stamp: 'IO 10/31/2020 13:12:20'!
PASSED!

!testRun: #TerniLapilliGameTest #test15 stamp: 'IO 10/31/2020 13:12:20'!
PASSED!

!testRun: #TerniLapilliGameTest #test16 stamp: 'IO 10/31/2020 13:12:20'!
PASSED!
!TerniLapilliPlayerTokens methodsFor: 'testing' stamp: 'IO 10/31/2020 13:13:26' prior: 50869774!
areInWinningPositionByColumn: columnNumber

	^tokens includesAll: #((0@columnNumber) (1@columnNumber) (2@columnNumber))! !

!testRun: #TerniLapilliGameTest #test01 stamp: 'IO 10/31/2020 13:13:30'!
PASSED!

!testRun: #TerniLapilliGameTest #test02 stamp: 'IO 10/31/2020 13:13:30'!
PASSED!

!testRun: #TerniLapilliGameTest #test03 stamp: 'IO 10/31/2020 13:13:30'!
PASSED!

!testRun: #TerniLapilliGameTest #test04 stamp: 'IO 10/31/2020 13:13:30'!
PASSED!

!testRun: #TerniLapilliGameTest #test05 stamp: 'IO 10/31/2020 13:13:30'!
PASSED!

!testRun: #TerniLapilliGameTest #test06 stamp: 'IO 10/31/2020 13:13:30'!
PASSED!

!testRun: #TerniLapilliGameTest #test07 stamp: 'IO 10/31/2020 13:13:30'!
ERROR!

!testRun: #TerniLapilliGameTest #test08 stamp: 'IO 10/31/2020 13:13:30'!
ERROR!

!testRun: #TerniLapilliGameTest #test09 stamp: 'IO 10/31/2020 13:13:30'!
ERROR!

!testRun: #TerniLapilliGameTest #test10 stamp: 'IO 10/31/2020 13:13:30'!
ERROR!

!testRun: #TerniLapilliGameTest #test11 stamp: 'IO 10/31/2020 13:13:30'!
ERROR!

!testRun: #TerniLapilliGameTest #test12 stamp: 'IO 10/31/2020 13:13:30'!
ERROR!

!testRun: #TerniLapilliGameTest #test13 stamp: 'IO 10/31/2020 13:13:30'!
ERROR!

!testRun: #TerniLapilliGameTest #test14 stamp: 'IO 10/31/2020 13:13:30'!
ERROR!

!testRun: #TerniLapilliGameTest #test15 stamp: 'IO 10/31/2020 13:13:30'!
ERROR!

!testRun: #TerniLapilliGameTest #test16 stamp: 'IO 10/31/2020 13:13:30'!
ERROR!
!TerniLapilliPlayerTokens methodsFor: 'testing' stamp: 'IO 10/31/2020 13:13:55' prior: 50870950!
areInWinningPositionByColumn: columnNumber

	^tokens includesAll: #(0@columnNumber 1@columnNumber 2@columnNumber)! !

!testRun: #TerniLapilliGameTest #test01 stamp: 'IO 10/31/2020 13:14:02'!
PASSED!

!testRun: #TerniLapilliGameTest #test02 stamp: 'IO 10/31/2020 13:14:02'!
PASSED!

!testRun: #TerniLapilliGameTest #test03 stamp: 'IO 10/31/2020 13:14:02'!
PASSED!

!testRun: #TerniLapilliGameTest #test04 stamp: 'IO 10/31/2020 13:14:02'!
PASSED!

!testRun: #TerniLapilliGameTest #test05 stamp: 'IO 10/31/2020 13:14:02'!
PASSED!

!testRun: #TerniLapilliGameTest #test06 stamp: 'IO 10/31/2020 13:14:02'!
PASSED!

!testRun: #TerniLapilliGameTest #test07 stamp: 'IO 10/31/2020 13:14:02'!
ERROR!

!testRun: #TerniLapilliGameTest #test08 stamp: 'IO 10/31/2020 13:14:02'!
ERROR!

!testRun: #TerniLapilliGameTest #test09 stamp: 'IO 10/31/2020 13:14:02'!
ERROR!

!testRun: #TerniLapilliGameTest #test10 stamp: 'IO 10/31/2020 13:14:02'!
ERROR!

!testRun: #TerniLapilliGameTest #test11 stamp: 'IO 10/31/2020 13:14:02'!
ERROR!

!testRun: #TerniLapilliGameTest #test12 stamp: 'IO 10/31/2020 13:14:02'!
ERROR!

!testRun: #TerniLapilliGameTest #test13 stamp: 'IO 10/31/2020 13:14:02'!
ERROR!

!testRun: #TerniLapilliGameTest #test14 stamp: 'IO 10/31/2020 13:14:02'!
ERROR!

!testRun: #TerniLapilliGameTest #test15 stamp: 'IO 10/31/2020 13:14:02'!
ERROR!

!testRun: #TerniLapilliGameTest #test16 stamp: 'IO 10/31/2020 13:14:02'!
ERROR!
!TerniLapilliPlayerTokens methodsFor: 'testing' stamp: 'IO 10/31/2020 13:14:26' prior: 50870998!
areInWinningPositionByColumn: columnNumber

	^(tokens includes: (0@columnNumber)) and: (tokens includes: (1@columnNumber)) and: (tokens includes: (2@columnNumber))! !
!TerniLapilliPlayerTokens methodsFor: 'testing' stamp: 'IO 10/31/2020 13:14:52' prior: 50871046!
areInWinningPositionByColumn: columnNumber

	^tokens includesAllOf: #((0@columnNumber) (1@columnNumber) (2@columnNumber)).
	"^(tokens includes: (0@columnNumber)) and: (tokens includes: (1@columnNumber)) and: (tokens includes: (2@columnNumber))"! !

!testRun: #TerniLapilliGameTest #test01 stamp: 'IO 10/31/2020 13:14:59'!
PASSED!

!testRun: #TerniLapilliGameTest #test02 stamp: 'IO 10/31/2020 13:14:59'!
PASSED!

!testRun: #TerniLapilliGameTest #test03 stamp: 'IO 10/31/2020 13:14:59'!
PASSED!

!testRun: #TerniLapilliGameTest #test04 stamp: 'IO 10/31/2020 13:14:59'!
PASSED!

!testRun: #TerniLapilliGameTest #test05 stamp: 'IO 10/31/2020 13:14:59'!
PASSED!

!testRun: #TerniLapilliGameTest #test06 stamp: 'IO 10/31/2020 13:14:59'!
PASSED!

!testRun: #TerniLapilliGameTest #test07 stamp: 'IO 10/31/2020 13:14:59'!
FAILURE!

!testRun: #TerniLapilliGameTest #test08 stamp: 'IO 10/31/2020 13:14:59'!
PASSED!

!testRun: #TerniLapilliGameTest #test09 stamp: 'IO 10/31/2020 13:14:59'!
FAILURE!

!testRun: #TerniLapilliGameTest #test10 stamp: 'IO 10/31/2020 13:14:59'!
FAILURE!

!testRun: #TerniLapilliGameTest #test11 stamp: 'IO 10/31/2020 13:14:59'!
PASSED!

!testRun: #TerniLapilliGameTest #test12 stamp: 'IO 10/31/2020 13:14:59'!
PASSED!

!testRun: #TerniLapilliGameTest #test13 stamp: 'IO 10/31/2020 13:14:59'!
PASSED!

!testRun: #TerniLapilliGameTest #test14 stamp: 'IO 10/31/2020 13:14:59'!
PASSED!

!testRun: #TerniLapilliGameTest #test15 stamp: 'IO 10/31/2020 13:14:59'!
PASSED!

!testRun: #TerniLapilliGameTest #test16 stamp: 'IO 10/31/2020 13:14:59'!
FAILURE!

!testRun: #TerniLapilliGameTest #test01 stamp: 'IO 10/31/2020 13:15:15'!
PASSED!

!testRun: #TerniLapilliGameTest #test02 stamp: 'IO 10/31/2020 13:15:15'!
PASSED!

!testRun: #TerniLapilliGameTest #test03 stamp: 'IO 10/31/2020 13:15:15'!
PASSED!

!testRun: #TerniLapilliGameTest #test04 stamp: 'IO 10/31/2020 13:15:15'!
PASSED!

!testRun: #TerniLapilliGameTest #test05 stamp: 'IO 10/31/2020 13:15:15'!
PASSED!

!testRun: #TerniLapilliGameTest #test06 stamp: 'IO 10/31/2020 13:15:15'!
PASSED!

!testRun: #TerniLapilliGameTest #test07 stamp: 'IO 10/31/2020 13:15:15'!
FAILURE!

!testRun: #TerniLapilliGameTest #test08 stamp: 'IO 10/31/2020 13:15:15'!
PASSED!

!testRun: #TerniLapilliGameTest #test09 stamp: 'IO 10/31/2020 13:15:15'!
FAILURE!

!testRun: #TerniLapilliGameTest #test10 stamp: 'IO 10/31/2020 13:15:15'!
FAILURE!

!testRun: #TerniLapilliGameTest #test11 stamp: 'IO 10/31/2020 13:15:15'!
PASSED!

!testRun: #TerniLapilliGameTest #test12 stamp: 'IO 10/31/2020 13:15:15'!
PASSED!

!testRun: #TerniLapilliGameTest #test13 stamp: 'IO 10/31/2020 13:15:15'!
PASSED!

!testRun: #TerniLapilliGameTest #test14 stamp: 'IO 10/31/2020 13:15:15'!
PASSED!

!testRun: #TerniLapilliGameTest #test15 stamp: 'IO 10/31/2020 13:15:15'!
PASSED!

!testRun: #TerniLapilliGameTest #test16 stamp: 'IO 10/31/2020 13:15:15'!
FAILURE!

tokens!

tokens!

self class!

 Set !

 Set !

 Set !
!TerniLapilliPlayerTokens methodsFor: 'testing' stamp: 'IO 10/31/2020 13:17:38' prior: 50871055!
areInWinningPositionByColumn: columnNumber

	^(tokens includes: (0@columnNumber)) and: (tokens includes: (1@columnNumber)) and: (tokens includes: (2@columnNumber))! !

!testRun: #TerniLapilliGameTest #test01 stamp: 'IO 10/31/2020 13:17:42'!
PASSED!

!testRun: #TerniLapilliGameTest #test02 stamp: 'IO 10/31/2020 13:17:42'!
PASSED!

!testRun: #TerniLapilliGameTest #test03 stamp: 'IO 10/31/2020 13:17:42'!
PASSED!

!testRun: #TerniLapilliGameTest #test04 stamp: 'IO 10/31/2020 13:17:42'!
PASSED!

!testRun: #TerniLapilliGameTest #test05 stamp: 'IO 10/31/2020 13:17:42'!
PASSED!

!testRun: #TerniLapilliGameTest #test06 stamp: 'IO 10/31/2020 13:17:42'!
PASSED!

!testRun: #TerniLapilliGameTest #test07 stamp: 'IO 10/31/2020 13:17:42'!
PASSED!

!testRun: #TerniLapilliGameTest #test08 stamp: 'IO 10/31/2020 13:17:42'!
PASSED!

!testRun: #TerniLapilliGameTest #test09 stamp: 'IO 10/31/2020 13:17:42'!
PASSED!

!testRun: #TerniLapilliGameTest #test10 stamp: 'IO 10/31/2020 13:17:42'!
PASSED!

!testRun: #TerniLapilliGameTest #test11 stamp: 'IO 10/31/2020 13:17:42'!
PASSED!

!testRun: #TerniLapilliGameTest #test12 stamp: 'IO 10/31/2020 13:17:42'!
PASSED!

!testRun: #TerniLapilliGameTest #test13 stamp: 'IO 10/31/2020 13:17:42'!
PASSED!

!testRun: #TerniLapilliGameTest #test14 stamp: 'IO 10/31/2020 13:17:42'!
PASSED!

!testRun: #TerniLapilliGameTest #test15 stamp: 'IO 10/31/2020 13:17:42'!
PASSED!

!testRun: #TerniLapilliGameTest #test16 stamp: 'IO 10/31/2020 13:17:42'!
PASSED!

----SNAPSHOT----(31 October 2020 13:19:15) CuisUniversity-4384.image priorSource: 17221308!

----SNAPSHOT----(31 October 2020 14:59:49) CuisUniversity-4384.image priorSource: 17265542!

----QUIT----(31 October 2020 14:59:52) CuisUniversity-4384.image priorSource: 17265635!

----STARTUP---- (31 October 2020 16:36:37) as /Users/ilanolkies/uba/ingsoft1/macos64 5/CuisUniversity-4384.image!

!TerniLapilliGameTest methodsFor: 'as yet unclassified' stamp: 'IO 10/31/2020 16:38:52' prior: 50870209!
test11
	"X gana completando la primer fila"
	| aGame |
	aGame := TerniLapilliGame new.
	
	aGame xPutsOn: 0@0.
	aGame oPutsOn: 1@0.
	aGame xPutsOn: 0@1.
	aGame oPutsOn: 1@1.
	aGame xPutsOn: 0@2.
	
	self assert: aGame xHasWon.
! !

!testRun: #TerniLapilliGameTest #test16 stamp: 'IO 10/31/2020 16:40:02'!
PASSED!

!testRun: #TerniLapilliGameTest #test01 stamp: 'IO 10/31/2020 16:40:02'!
PASSED!

!testRun: #TerniLapilliGameTest #test02 stamp: 'IO 10/31/2020 16:40:02'!
PASSED!

!testRun: #TerniLapilliGameTest #test03 stamp: 'IO 10/31/2020 16:40:02'!
PASSED!

!testRun: #TerniLapilliGameTest #test04 stamp: 'IO 10/31/2020 16:40:02'!
PASSED!

!testRun: #TerniLapilliGameTest #test05 stamp: 'IO 10/31/2020 16:40:02'!
PASSED!

!testRun: #TerniLapilliGameTest #test06 stamp: 'IO 10/31/2020 16:40:02'!
PASSED!

!testRun: #TerniLapilliGameTest #test07 stamp: 'IO 10/31/2020 16:40:02'!
PASSED!

!testRun: #TerniLapilliGameTest #test08 stamp: 'IO 10/31/2020 16:40:02'!
PASSED!

!testRun: #TerniLapilliGameTest #test09 stamp: 'IO 10/31/2020 16:40:02'!
PASSED!

!testRun: #TerniLapilliGameTest #test10 stamp: 'IO 10/31/2020 16:40:02'!
PASSED!

!testRun: #TerniLapilliGameTest #test11 stamp: 'IO 10/31/2020 16:40:02'!
PASSED!

!testRun: #TerniLapilliGameTest #test12 stamp: 'IO 10/31/2020 16:40:02'!
PASSED!

!testRun: #TerniLapilliGameTest #test13 stamp: 'IO 10/31/2020 16:40:02'!
PASSED!

!testRun: #TerniLapilliGameTest #test14 stamp: 'IO 10/31/2020 16:40:02'!
PASSED!

!testRun: #TerniLapilliGameTest #test15 stamp: 'IO 10/31/2020 16:40:02'!
PASSED!

!testRun: #TerniLapilliGameTest #test16 stamp: 'IO 10/31/2020 16:40:02'!
PASSED!
!TerniLapilliPlayerTokens methodsFor: 'testing' stamp: 'IO 10/31/2020 16:41:19' prior: 50870899!
areInWinningPositionByDiagonal

	^(tokens includes: (1@1)) and: (
		((tokens includes: (0@0)) and: (tokens includes: (2@2))) or: (
		(tokens includes: (0@2)) and: (tokens includes: (0@2))
	))! !

!testRun: #TerniLapilliGameTest #test15 stamp: 'IO 10/31/2020 16:41:38'!
PASSED!

!testRun: #TerniLapilliGameTest #test01 stamp: 'IO 10/31/2020 16:41:38'!
PASSED!

!testRun: #TerniLapilliGameTest #test02 stamp: 'IO 10/31/2020 16:41:38'!
PASSED!

!testRun: #TerniLapilliGameTest #test03 stamp: 'IO 10/31/2020 16:41:38'!
PASSED!

!testRun: #TerniLapilliGameTest #test04 stamp: 'IO 10/31/2020 16:41:38'!
PASSED!

!testRun: #TerniLapilliGameTest #test05 stamp: 'IO 10/31/2020 16:41:38'!
PASSED!

!testRun: #TerniLapilliGameTest #test06 stamp: 'IO 10/31/2020 16:41:38'!
PASSED!

!testRun: #TerniLapilliGameTest #test07 stamp: 'IO 10/31/2020 16:41:38'!
PASSED!

!testRun: #TerniLapilliGameTest #test08 stamp: 'IO 10/31/2020 16:41:38'!
PASSED!

!testRun: #TerniLapilliGameTest #test09 stamp: 'IO 10/31/2020 16:41:38'!
PASSED!

!testRun: #TerniLapilliGameTest #test10 stamp: 'IO 10/31/2020 16:41:38'!
PASSED!

!testRun: #TerniLapilliGameTest #test11 stamp: 'IO 10/31/2020 16:41:38'!
PASSED!

!testRun: #TerniLapilliGameTest #test12 stamp: 'IO 10/31/2020 16:41:38'!
PASSED!

!testRun: #TerniLapilliGameTest #test13 stamp: 'IO 10/31/2020 16:41:38'!
PASSED!

!testRun: #TerniLapilliGameTest #test14 stamp: 'IO 10/31/2020 16:41:38'!
PASSED!

!testRun: #TerniLapilliGameTest #test15 stamp: 'IO 10/31/2020 16:41:38'!
PASSED!

!testRun: #TerniLapilliGameTest #test16 stamp: 'IO 10/31/2020 16:41:38'!
PASSED!

			(self areInWinningPositionByColumn: 2)!

(self areInWinningPositionByColumn: 0) or:
			(self areInWinningPositionByColumn: 1) or:
			(self areInWinningPositionByColumn: 2) !

(self areInWinningPositionByRow: 0) or:
			(self areInWinningPositionByRow: 1) or:
			(self areInWinningPositionByRow: 2)!

self areInWinningPositionByDiagonal!

(tokens includes: (1@1)) and: (
		((tokens includes: (0@0)) and: (tokens includes: (2@2))) or: (
		(tokens includes: (0@2)) and: (tokens includes: (0@2))
	))!

((tokens includes: (0@0)) and: (tokens includes: (2@2)))!
!TerniLapilliPlayerTokens methodsFor: 'testing' stamp: 'IO 10/31/2020 16:43:21' prior: 50871266!
areInWinningPositionByDiagonal

	^(tokens includes: (1@1)) and: (
		((tokens includes: (0@0)) and: (tokens includes: (2@2))) or: (
		(tokens includes: (2@0)) and: (tokens includes: (0@2))
	))! !

!testRun: #TerniLapilliGameTest #test16 stamp: 'IO 10/31/2020 16:43:57'!
PASSED!

!testRun: #TerniLapilliGameTest #test01 stamp: 'IO 10/31/2020 16:43:57'!
PASSED!

!testRun: #TerniLapilliGameTest #test02 stamp: 'IO 10/31/2020 16:43:57'!
PASSED!

!testRun: #TerniLapilliGameTest #test03 stamp: 'IO 10/31/2020 16:43:57'!
PASSED!

!testRun: #TerniLapilliGameTest #test04 stamp: 'IO 10/31/2020 16:43:57'!
PASSED!

!testRun: #TerniLapilliGameTest #test05 stamp: 'IO 10/31/2020 16:43:57'!
PASSED!

!testRun: #TerniLapilliGameTest #test06 stamp: 'IO 10/31/2020 16:43:57'!
PASSED!

!testRun: #TerniLapilliGameTest #test07 stamp: 'IO 10/31/2020 16:43:57'!
PASSED!

!testRun: #TerniLapilliGameTest #test08 stamp: 'IO 10/31/2020 16:43:57'!
PASSED!

!testRun: #TerniLapilliGameTest #test09 stamp: 'IO 10/31/2020 16:43:57'!
PASSED!

!testRun: #TerniLapilliGameTest #test10 stamp: 'IO 10/31/2020 16:43:57'!
PASSED!

!testRun: #TerniLapilliGameTest #test11 stamp: 'IO 10/31/2020 16:43:57'!
PASSED!

!testRun: #TerniLapilliGameTest #test12 stamp: 'IO 10/31/2020 16:43:57'!
PASSED!

!testRun: #TerniLapilliGameTest #test13 stamp: 'IO 10/31/2020 16:43:57'!
PASSED!

!testRun: #TerniLapilliGameTest #test14 stamp: 'IO 10/31/2020 16:43:57'!
PASSED!

!testRun: #TerniLapilliGameTest #test15 stamp: 'IO 10/31/2020 16:43:57'!
PASSED!

!testRun: #TerniLapilliGameTest #test16 stamp: 'IO 10/31/2020 16:43:57'!
PASSED!

!testRun: #TerniLapilliGameTest #test16 stamp: 'IO 10/31/2020 16:44:30'!
PASSED!

!testRun: #TerniLapilliGameTest #test01 stamp: 'IO 10/31/2020 16:44:30'!
PASSED!

!testRun: #TerniLapilliGameTest #test02 stamp: 'IO 10/31/2020 16:44:30'!
PASSED!

!testRun: #TerniLapilliGameTest #test03 stamp: 'IO 10/31/2020 16:44:30'!
PASSED!

!testRun: #TerniLapilliGameTest #test04 stamp: 'IO 10/31/2020 16:44:30'!
PASSED!

!testRun: #TerniLapilliGameTest #test05 stamp: 'IO 10/31/2020 16:44:30'!
PASSED!

!testRun: #TerniLapilliGameTest #test06 stamp: 'IO 10/31/2020 16:44:30'!
PASSED!

!testRun: #TerniLapilliGameTest #test07 stamp: 'IO 10/31/2020 16:44:30'!
PASSED!

!testRun: #TerniLapilliGameTest #test08 stamp: 'IO 10/31/2020 16:44:30'!
PASSED!

!testRun: #TerniLapilliGameTest #test09 stamp: 'IO 10/31/2020 16:44:30'!
PASSED!

!testRun: #TerniLapilliGameTest #test10 stamp: 'IO 10/31/2020 16:44:30'!
PASSED!

!testRun: #TerniLapilliGameTest #test11 stamp: 'IO 10/31/2020 16:44:30'!
PASSED!

!testRun: #TerniLapilliGameTest #test12 stamp: 'IO 10/31/2020 16:44:30'!
PASSED!

!testRun: #TerniLapilliGameTest #test13 stamp: 'IO 10/31/2020 16:44:30'!
PASSED!

!testRun: #TerniLapilliGameTest #test14 stamp: 'IO 10/31/2020 16:44:30'!
PASSED!

!testRun: #TerniLapilliGameTest #test15 stamp: 'IO 10/31/2020 16:44:30'!
PASSED!

!testRun: #TerniLapilliGameTest #test16 stamp: 'IO 10/31/2020 16:44:30'!
PASSED!
!TerniLapilliPlayerTokens methodsFor: 'testing' stamp: 'IO 10/31/2020 16:47:34' prior: 50870578!
areInWinningPosition

	0 to: 2 do: [ :i |
		(self areInWinningPositionByColumn: i) ifTrue: [^true].
		(self areInWinningPositionByRow: i) ifTrue: [^true]
	]

	^self areInWinningPositionByDiagonal.
"
	^(
		(
			(self areInWinningPositionByColumn: 0) or:
			(self areInWinningPositionByColumn: 1) or:
			(self areInWinningPositionByColumn: 2)
		) or: (
			(self areInWinningPositionByRow: 0) or:
			(self areInWinningPositionByRow: 1) or:
			(self areInWinningPositionByRow: 2)
		) or: (
			self areInWinningPositionByDiagonal
		)
	)"! !

!testRun: #TerniLapilliGameTest #test01 stamp: 'IO 10/31/2020 16:47:39'!
PASSED!

!testRun: #TerniLapilliGameTest #test02 stamp: 'IO 10/31/2020 16:47:39'!
PASSED!

!testRun: #TerniLapilliGameTest #test03 stamp: 'IO 10/31/2020 16:47:39'!
PASSED!

!testRun: #TerniLapilliGameTest #test04 stamp: 'IO 10/31/2020 16:47:39'!
PASSED!

!testRun: #TerniLapilliGameTest #test05 stamp: 'IO 10/31/2020 16:47:39'!
PASSED!

!testRun: #TerniLapilliGameTest #test06 stamp: 'IO 10/31/2020 16:47:39'!
PASSED!

!testRun: #TerniLapilliGameTest #test07 stamp: 'IO 10/31/2020 16:47:39'!
ERROR!

!testRun: #TerniLapilliGameTest #test08 stamp: 'IO 10/31/2020 16:47:39'!
ERROR!

!testRun: #TerniLapilliGameTest #test09 stamp: 'IO 10/31/2020 16:47:39'!
ERROR!

!testRun: #TerniLapilliGameTest #test10 stamp: 'IO 10/31/2020 16:47:39'!
ERROR!

!testRun: #TerniLapilliGameTest #test11 stamp: 'IO 10/31/2020 16:47:39'!
ERROR!

!testRun: #TerniLapilliGameTest #test12 stamp: 'IO 10/31/2020 16:47:39'!
ERROR!

!testRun: #TerniLapilliGameTest #test13 stamp: 'IO 10/31/2020 16:47:39'!
ERROR!

!testRun: #TerniLapilliGameTest #test14 stamp: 'IO 10/31/2020 16:47:39'!
ERROR!

!testRun: #TerniLapilliGameTest #test15 stamp: 'IO 10/31/2020 16:47:39'!
ERROR!

!testRun: #TerniLapilliGameTest #test16 stamp: 'IO 10/31/2020 16:47:39'!
ERROR!

!testRun: #TerniLapilliGameTest #test07 stamp: 'IO 10/31/2020 16:47:56'!
ERROR!
!TerniLapilliPlayerTokens methodsFor: 'testing' stamp: 'IO 10/31/2020 16:48:15' prior: 50871434!
areInWinningPosition

	0 to: 2 do: [ :i |
		(self areInWinningPositionByColumn: i) ifTrue: [^true].
		(self areInWinningPositionByRow: i) ifTrue: [^true]
	].

	^self areInWinningPositionByDiagonal.
"
	^(
		(
			(self areInWinningPositionByColumn: 0) or:
			(self areInWinningPositionByColumn: 1) or:
			(self areInWinningPositionByColumn: 2)
		) or: (
			(self areInWinningPositionByRow: 0) or:
			(self areInWinningPositionByRow: 1) or:
			(self areInWinningPositionByRow: 2)
		) or: (
			self areInWinningPositionByDiagonal
		)
	)"! !

i!

!testRun: #TerniLapilliGameTest #test01 stamp: 'IO 10/31/2020 16:48:36'!
PASSED!

!testRun: #TerniLapilliGameTest #test02 stamp: 'IO 10/31/2020 16:48:36'!
PASSED!

!testRun: #TerniLapilliGameTest #test03 stamp: 'IO 10/31/2020 16:48:36'!
PASSED!

!testRun: #TerniLapilliGameTest #test04 stamp: 'IO 10/31/2020 16:48:36'!
PASSED!

!testRun: #TerniLapilliGameTest #test05 stamp: 'IO 10/31/2020 16:48:36'!
PASSED!

!testRun: #TerniLapilliGameTest #test06 stamp: 'IO 10/31/2020 16:48:36'!
PASSED!

!testRun: #TerniLapilliGameTest #test07 stamp: 'IO 10/31/2020 16:48:36'!
PASSED!

!testRun: #TerniLapilliGameTest #test08 stamp: 'IO 10/31/2020 16:48:36'!
PASSED!

!testRun: #TerniLapilliGameTest #test09 stamp: 'IO 10/31/2020 16:48:36'!
PASSED!

!testRun: #TerniLapilliGameTest #test10 stamp: 'IO 10/31/2020 16:48:36'!
PASSED!

!testRun: #TerniLapilliGameTest #test11 stamp: 'IO 10/31/2020 16:48:36'!
PASSED!

!testRun: #TerniLapilliGameTest #test12 stamp: 'IO 10/31/2020 16:48:36'!
PASSED!

!testRun: #TerniLapilliGameTest #test13 stamp: 'IO 10/31/2020 16:48:36'!
PASSED!

!testRun: #TerniLapilliGameTest #test14 stamp: 'IO 10/31/2020 16:48:36'!
PASSED!

!testRun: #TerniLapilliGameTest #test15 stamp: 'IO 10/31/2020 16:48:36'!
PASSED!

!testRun: #TerniLapilliGameTest #test16 stamp: 'IO 10/31/2020 16:48:36'!
PASSED!
!TerniLapilliPlayerTokens methodsFor: 'testing' stamp: 'IO 10/31/2020 16:51:21' prior: 50871497!
areInWinningPosition

	| result |
	result := false.
	0 to: 2 do: [ :i |
		result := result or: (self areInWinningPositionByColumn: i).
		result := result or: (self areInWinningPositionByRow: i).
	].

	^result or: self areInWinningPositionByDiagonal.
"
	^(
		(
			(self areInWinningPositionByColumn: 0) or:
			(self areInWinningPositionByColumn: 1) or:
			(self areInWinningPositionByColumn: 2)
		) or: (
			(self areInWinningPositionByRow: 0) or:
			(self areInWinningPositionByRow: 1) or:
			(self areInWinningPositionByRow: 2)
		) or: (
			self areInWinningPositionByDiagonal
		)
	)"! !

!testRun: #TerniLapilliGameTest #test01 stamp: 'IO 10/31/2020 16:51:28'!
PASSED!

!testRun: #TerniLapilliGameTest #test02 stamp: 'IO 10/31/2020 16:51:28'!
PASSED!

!testRun: #TerniLapilliGameTest #test03 stamp: 'IO 10/31/2020 16:51:28'!
PASSED!

!testRun: #TerniLapilliGameTest #test04 stamp: 'IO 10/31/2020 16:51:28'!
PASSED!

!testRun: #TerniLapilliGameTest #test05 stamp: 'IO 10/31/2020 16:51:28'!
PASSED!

!testRun: #TerniLapilliGameTest #test06 stamp: 'IO 10/31/2020 16:51:28'!
PASSED!

!testRun: #TerniLapilliGameTest #test07 stamp: 'IO 10/31/2020 16:51:28'!
PASSED!

!testRun: #TerniLapilliGameTest #test08 stamp: 'IO 10/31/2020 16:51:28'!
PASSED!

!testRun: #TerniLapilliGameTest #test09 stamp: 'IO 10/31/2020 16:51:28'!
PASSED!

!testRun: #TerniLapilliGameTest #test10 stamp: 'IO 10/31/2020 16:51:28'!
PASSED!

!testRun: #TerniLapilliGameTest #test11 stamp: 'IO 10/31/2020 16:51:28'!
PASSED!

!testRun: #TerniLapilliGameTest #test12 stamp: 'IO 10/31/2020 16:51:28'!
PASSED!

!testRun: #TerniLapilliGameTest #test13 stamp: 'IO 10/31/2020 16:51:28'!
PASSED!

!testRun: #TerniLapilliGameTest #test14 stamp: 'IO 10/31/2020 16:51:28'!
PASSED!

!testRun: #TerniLapilliGameTest #test15 stamp: 'IO 10/31/2020 16:51:28'!
PASSED!

!testRun: #TerniLapilliGameTest #test16 stamp: 'IO 10/31/2020 16:51:28'!
PASSED!
!TerniLapilliPlayerTokens methodsFor: 'testing' stamp: 'IO 10/31/2020 16:53:26' prior: 50871558!
areInWinningPosition
"
	| result |
	result := false.
	0 to: 2 do: [ :i |
		result := result or: (self areInWinningPositionByColumn: i).
		result := result or: (self areInWinningPositionByRow: i).
	].

	^result or: self areInWinningPositionByDiagonal.
"
	^(
		(
			(self areInWinningPositionByColumn: 0) or:
			(self areInWinningPositionByColumn: 1) or:
			(self areInWinningPositionByColumn: 2)
		) or: (
			(self areInWinningPositionByRow: 0) or:
			(self areInWinningPositionByRow: 1) or:
			(self areInWinningPositionByRow: 2)
		) or: (
			self areInWinningPositionByDiagonal
		)
	)! !
!TerniLapilliPlayerTokens methodsFor: 'testing' stamp: 'IO 10/31/2020 16:53:58' prior: 50871621!
areInWinningPosition

	^(
		(
			(self areInWinningPositionByColumn: 0) or:
			(self areInWinningPositionByColumn: 1) or:
			(self areInWinningPositionByColumn: 2)
		) or: (
			(self areInWinningPositionByRow: 0) or:
			(self areInWinningPositionByRow: 1) or:
			(self areInWinningPositionByRow: 2)
		) or: (
			self areInWinningPositionByDiagonal
		)
	)! !
!TerniLapilliPlayerTokens methodsFor: 'testing' stamp: 'IO 10/31/2020 16:54:05' prior: 50871643!
areInWinningPosition

	^(
		(
			(self areInWinningPositionByColumn: 0) or:
			(self areInWinningPositionByColumn: 1) or:
			(self areInWinningPositionByColumn: 2)
		) or: (
			(self areInWinningPositionByRow: 0) or:
			(self areInWinningPositionByRow: 1) or:
			(self areInWinningPositionByRow: 2)
		) or: (
			self areInWinningPositionByDiagonal
		)
	).
! !
!TerniLapilliGameTest methodsFor: 'as yet unclassified' stamp: 'IO 10/31/2020 16:59:31'!
test17
	"empieza X"
	| aGame |
	aGame := TerniLapilliGame new.
	
	self should: [aGame oPutsOn: (0@0)] raise: Error withMessageText: TerniLapilliGame wrongTurnErrorMessage.


! !

!testRun: #TerniLapilliGameTest #test17 stamp: 'IO 10/31/2020 16:59:33'!
ERROR!
!TerniLapilliGame class methodsFor: 'error messages' stamp: 'IO 10/31/2020 16:59:43'!
wrongTurnErrorMessage
	self shouldBeImplemented.! !
!TerniLapilliGame class methodsFor: 'error messages' stamp: 'IO 10/31/2020 17:00:06' prior: 50871684!
wrongTurnErrorMessage
	^'Playing in wrong turn'.! !

!testRun: #TerniLapilliGameTest #test17 stamp: 'IO 10/31/2020 17:00:13'!
FAILURE!

!testRun: #TerniLapilliGameTest #test17 stamp: 'IO 10/31/2020 17:00:23'!
FAILURE!

Object subclass: #TerniLapilliGame
	instanceVariableNames: 'xTokens oTokens turnOf'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Terni Lapilli'!

!classDefinition: #TerniLapilliGame category: 'Terni Lapilli' stamp: 'IO 10/31/2020 17:01:02'!
Object subclass: #TerniLapilliGame
	instanceVariableNames: 'xTokens oTokens turnOf'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Terni Lapilli'!
!TerniLapilliGame methodsFor: 'initialization' stamp: 'IO 10/31/2020 17:01:22' prior: 50869085 overrides: 16896425!
initialize
	xTokens := TerniLapilliPlayerTokens new.
	oTokens := TerniLapilliPlayerTokens new.
	
	turnOf := $X.

! !
!TerniLapilliGame methodsFor: 'moves' stamp: 'IO 10/31/2020 17:02:11' prior: 50869253!
oMoves: sourcePosition to: destinationPosition
	(turnOf = $X) ifTrue: [self error: TerniLapilliGame wrongTurnErrorMessage].
	oTokens move: sourcePosition to: destinationPosition.

! !

!testRun: #TerniLapilliGameTest #test01 stamp: 'IO 10/31/2020 17:02:12'!
PASSED!

!testRun: #TerniLapilliGameTest #test02 stamp: 'IO 10/31/2020 17:02:12'!
PASSED!

!testRun: #TerniLapilliGameTest #test03 stamp: 'IO 10/31/2020 17:02:12'!
PASSED!

!testRun: #TerniLapilliGameTest #test04 stamp: 'IO 10/31/2020 17:02:12'!
PASSED!

!testRun: #TerniLapilliGameTest #test05 stamp: 'IO 10/31/2020 17:02:12'!
PASSED!

!testRun: #TerniLapilliGameTest #test06 stamp: 'IO 10/31/2020 17:02:12'!
ERROR!

!testRun: #TerniLapilliGameTest #test07 stamp: 'IO 10/31/2020 17:02:12'!
PASSED!

!testRun: #TerniLapilliGameTest #test08 stamp: 'IO 10/31/2020 17:02:12'!
PASSED!

!testRun: #TerniLapilliGameTest #test09 stamp: 'IO 10/31/2020 17:02:12'!
PASSED!

!testRun: #TerniLapilliGameTest #test10 stamp: 'IO 10/31/2020 17:02:12'!
PASSED!

!testRun: #TerniLapilliGameTest #test11 stamp: 'IO 10/31/2020 17:02:12'!
PASSED!

!testRun: #TerniLapilliGameTest #test12 stamp: 'IO 10/31/2020 17:02:12'!
PASSED!

!testRun: #TerniLapilliGameTest #test13 stamp: 'IO 10/31/2020 17:02:12'!
PASSED!

!testRun: #TerniLapilliGameTest #test14 stamp: 'IO 10/31/2020 17:02:12'!
PASSED!

!testRun: #TerniLapilliGameTest #test15 stamp: 'IO 10/31/2020 17:02:12'!
PASSED!

!testRun: #TerniLapilliGameTest #test16 stamp: 'IO 10/31/2020 17:02:12'!
PASSED!

!testRun: #TerniLapilliGameTest #test17 stamp: 'IO 10/31/2020 17:02:12'!
FAILURE!
!TerniLapilliGame methodsFor: 'moves' stamp: 'IO 10/31/2020 17:02:30' prior: 50871720!
oMoves: sourcePosition to: destinationPosition
	(turnOf = $X) ifTrue: [self error: TerniLapilliGame wrongTurnErrorMessage].
	oTokens move: sourcePosition to: destinationPosition.
	turnOf = $O.


! !

!testRun: #TerniLapilliGameTest #test01 stamp: 'IO 10/31/2020 17:02:31'!
PASSED!

!testRun: #TerniLapilliGameTest #test02 stamp: 'IO 10/31/2020 17:02:31'!
PASSED!

!testRun: #TerniLapilliGameTest #test03 stamp: 'IO 10/31/2020 17:02:31'!
PASSED!

!testRun: #TerniLapilliGameTest #test04 stamp: 'IO 10/31/2020 17:02:31'!
PASSED!

!testRun: #TerniLapilliGameTest #test05 stamp: 'IO 10/31/2020 17:02:31'!
PASSED!

!testRun: #TerniLapilliGameTest #test06 stamp: 'IO 10/31/2020 17:02:31'!
ERROR!

!testRun: #TerniLapilliGameTest #test07 stamp: 'IO 10/31/2020 17:02:31'!
PASSED!

!testRun: #TerniLapilliGameTest #test08 stamp: 'IO 10/31/2020 17:02:31'!
PASSED!

!testRun: #TerniLapilliGameTest #test09 stamp: 'IO 10/31/2020 17:02:31'!
PASSED!

!testRun: #TerniLapilliGameTest #test10 stamp: 'IO 10/31/2020 17:02:31'!
PASSED!

!testRun: #TerniLapilliGameTest #test11 stamp: 'IO 10/31/2020 17:02:31'!
PASSED!

!testRun: #TerniLapilliGameTest #test12 stamp: 'IO 10/31/2020 17:02:31'!
PASSED!

!testRun: #TerniLapilliGameTest #test13 stamp: 'IO 10/31/2020 17:02:31'!
PASSED!

!testRun: #TerniLapilliGameTest #test14 stamp: 'IO 10/31/2020 17:02:31'!
PASSED!

!testRun: #TerniLapilliGameTest #test15 stamp: 'IO 10/31/2020 17:02:31'!
PASSED!

!testRun: #TerniLapilliGameTest #test16 stamp: 'IO 10/31/2020 17:02:31'!
PASSED!

!testRun: #TerniLapilliGameTest #test17 stamp: 'IO 10/31/2020 17:02:31'!
FAILURE!
!TerniLapilliGame methodsFor: 'moves' stamp: 'IO 10/31/2020 17:02:50' prior: 50869260!
oPutsOn: aPosition
	(turnOf = $X) ifTrue: [self error: TerniLapilliGame wrongTurnErrorMessage].
	oTokens add: aPosition.
! !
!TerniLapilliGame methodsFor: 'moves' stamp: 'IO 10/31/2020 17:02:58' prior: 50871773!
oMoves: sourcePosition to: destinationPosition

	oTokens move: sourcePosition to: destinationPosition.



! !
!TerniLapilliGame methodsFor: 'moves' stamp: 'IO 10/31/2020 17:03:05' prior: 50871826!
oPutsOn: aPosition
	(turnOf = $X) ifTrue: [self error: TerniLapilliGame wrongTurnErrorMessage].
	oTokens add: aPosition.
	turnOf = $O.
! !

!testRun: #TerniLapilliGameTest #test01 stamp: 'IO 10/31/2020 17:03:06'!
PASSED!

!testRun: #TerniLapilliGameTest #test02 stamp: 'IO 10/31/2020 17:03:06'!
PASSED!

!testRun: #TerniLapilliGameTest #test03 stamp: 'IO 10/31/2020 17:03:06'!
PASSED!

!testRun: #TerniLapilliGameTest #test04 stamp: 'IO 10/31/2020 17:03:06'!
ERROR!

!testRun: #TerniLapilliGameTest #test05 stamp: 'IO 10/31/2020 17:03:06'!
ERROR!

!testRun: #TerniLapilliGameTest #test06 stamp: 'IO 10/31/2020 17:03:06'!
ERROR!

!testRun: #TerniLapilliGameTest #test07 stamp: 'IO 10/31/2020 17:03:06'!
ERROR!

!testRun: #TerniLapilliGameTest #test08 stamp: 'IO 10/31/2020 17:03:06'!
ERROR!

!testRun: #TerniLapilliGameTest #test09 stamp: 'IO 10/31/2020 17:03:06'!
ERROR!

!testRun: #TerniLapilliGameTest #test10 stamp: 'IO 10/31/2020 17:03:06'!
ERROR!

!testRun: #TerniLapilliGameTest #test11 stamp: 'IO 10/31/2020 17:03:06'!
ERROR!

!testRun: #TerniLapilliGameTest #test12 stamp: 'IO 10/31/2020 17:03:06'!
ERROR!

!testRun: #TerniLapilliGameTest #test13 stamp: 'IO 10/31/2020 17:03:06'!
ERROR!

!testRun: #TerniLapilliGameTest #test14 stamp: 'IO 10/31/2020 17:03:06'!
ERROR!

!testRun: #TerniLapilliGameTest #test15 stamp: 'IO 10/31/2020 17:03:06'!
ERROR!

!testRun: #TerniLapilliGameTest #test16 stamp: 'IO 10/31/2020 17:03:06'!
ERROR!

!testRun: #TerniLapilliGameTest #test17 stamp: 'IO 10/31/2020 17:03:06'!
PASSED!

!testRun: #TerniLapilliGameTest #test01 stamp: 'IO 10/31/2020 17:03:12'!
PASSED!

!testRun: #TerniLapilliGameTest #test02 stamp: 'IO 10/31/2020 17:03:12'!
PASSED!

!testRun: #TerniLapilliGameTest #test03 stamp: 'IO 10/31/2020 17:03:12'!
PASSED!

!testRun: #TerniLapilliGameTest #test04 stamp: 'IO 10/31/2020 17:03:12'!
ERROR!

!testRun: #TerniLapilliGameTest #test05 stamp: 'IO 10/31/2020 17:03:12'!
ERROR!

!testRun: #TerniLapilliGameTest #test06 stamp: 'IO 10/31/2020 17:03:12'!
ERROR!

!testRun: #TerniLapilliGameTest #test07 stamp: 'IO 10/31/2020 17:03:12'!
ERROR!

!testRun: #TerniLapilliGameTest #test08 stamp: 'IO 10/31/2020 17:03:12'!
ERROR!

!testRun: #TerniLapilliGameTest #test09 stamp: 'IO 10/31/2020 17:03:12'!
ERROR!

!testRun: #TerniLapilliGameTest #test10 stamp: 'IO 10/31/2020 17:03:12'!
ERROR!

!testRun: #TerniLapilliGameTest #test11 stamp: 'IO 10/31/2020 17:03:12'!
ERROR!

!testRun: #TerniLapilliGameTest #test12 stamp: 'IO 10/31/2020 17:03:12'!
ERROR!

!testRun: #TerniLapilliGameTest #test13 stamp: 'IO 10/31/2020 17:03:12'!
ERROR!

!testRun: #TerniLapilliGameTest #test14 stamp: 'IO 10/31/2020 17:03:12'!
ERROR!

!testRun: #TerniLapilliGameTest #test15 stamp: 'IO 10/31/2020 17:03:12'!
ERROR!

!testRun: #TerniLapilliGameTest #test16 stamp: 'IO 10/31/2020 17:03:12'!
ERROR!

!testRun: #TerniLapilliGameTest #test17 stamp: 'IO 10/31/2020 17:03:12'!
PASSED!
!TerniLapilliGame methodsFor: 'moves' stamp: 'IO 10/31/2020 17:03:37' prior: 50869265!
xMoves: sourcePosition to: destinationPosition 
	xTokens move: sourcePosition to: destinationPosition.
	turnOf = $X.

! !

!testRun: #TerniLapilliGameTest #test01 stamp: 'IO 10/31/2020 17:03:38'!
PASSED!

!testRun: #TerniLapilliGameTest #test02 stamp: 'IO 10/31/2020 17:03:38'!
PASSED!

!testRun: #TerniLapilliGameTest #test03 stamp: 'IO 10/31/2020 17:03:38'!
PASSED!

!testRun: #TerniLapilliGameTest #test04 stamp: 'IO 10/31/2020 17:03:38'!
ERROR!

!testRun: #TerniLapilliGameTest #test05 stamp: 'IO 10/31/2020 17:03:38'!
ERROR!

!testRun: #TerniLapilliGameTest #test06 stamp: 'IO 10/31/2020 17:03:38'!
ERROR!

!testRun: #TerniLapilliGameTest #test07 stamp: 'IO 10/31/2020 17:03:38'!
ERROR!

!testRun: #TerniLapilliGameTest #test08 stamp: 'IO 10/31/2020 17:03:38'!
ERROR!

!testRun: #TerniLapilliGameTest #test09 stamp: 'IO 10/31/2020 17:03:38'!
ERROR!

!testRun: #TerniLapilliGameTest #test10 stamp: 'IO 10/31/2020 17:03:38'!
ERROR!

!testRun: #TerniLapilliGameTest #test11 stamp: 'IO 10/31/2020 17:03:38'!
ERROR!

!testRun: #TerniLapilliGameTest #test12 stamp: 'IO 10/31/2020 17:03:38'!
ERROR!

!testRun: #TerniLapilliGameTest #test13 stamp: 'IO 10/31/2020 17:03:38'!
ERROR!

!testRun: #TerniLapilliGameTest #test14 stamp: 'IO 10/31/2020 17:03:38'!
ERROR!

!testRun: #TerniLapilliGameTest #test15 stamp: 'IO 10/31/2020 17:03:38'!
ERROR!

!testRun: #TerniLapilliGameTest #test16 stamp: 'IO 10/31/2020 17:03:38'!
ERROR!

!testRun: #TerniLapilliGameTest #test17 stamp: 'IO 10/31/2020 17:03:38'!
PASSED!
!TerniLapilliGame methodsFor: 'moves' stamp: 'IO 10/31/2020 17:03:44' prior: 50871934!
xMoves: sourcePosition to: destinationPosition 
	xTokens move: sourcePosition to: destinationPosition.
	turnOf = $O.

! !
!TerniLapilliGame methodsFor: 'moves' stamp: 'IO 10/31/2020 17:03:47' prior: 50871984!
xMoves: sourcePosition to: destinationPosition 
	xTokens move: sourcePosition to: destinationPosition.


! !
!TerniLapilliGame methodsFor: 'moves' stamp: 'IO 10/31/2020 17:03:53' prior: 50869272!
xPutsOn: aPosition
	xTokens add: aPosition.
	turnOf = $O.
! !

!testRun: #TerniLapilliGameTest #test01 stamp: 'IO 10/31/2020 17:03:54'!
PASSED!

!testRun: #TerniLapilliGameTest #test02 stamp: 'IO 10/31/2020 17:03:54'!
PASSED!

!testRun: #TerniLapilliGameTest #test03 stamp: 'IO 10/31/2020 17:03:54'!
PASSED!

!testRun: #TerniLapilliGameTest #test04 stamp: 'IO 10/31/2020 17:03:54'!
ERROR!

!testRun: #TerniLapilliGameTest #test05 stamp: 'IO 10/31/2020 17:03:54'!
ERROR!

!testRun: #TerniLapilliGameTest #test06 stamp: 'IO 10/31/2020 17:03:54'!
ERROR!

!testRun: #TerniLapilliGameTest #test07 stamp: 'IO 10/31/2020 17:03:54'!
ERROR!

!testRun: #TerniLapilliGameTest #test08 stamp: 'IO 10/31/2020 17:03:54'!
ERROR!

!testRun: #TerniLapilliGameTest #test09 stamp: 'IO 10/31/2020 17:03:54'!
ERROR!

!testRun: #TerniLapilliGameTest #test10 stamp: 'IO 10/31/2020 17:03:54'!
ERROR!

!testRun: #TerniLapilliGameTest #test11 stamp: 'IO 10/31/2020 17:03:54'!
ERROR!

!testRun: #TerniLapilliGameTest #test12 stamp: 'IO 10/31/2020 17:03:54'!
ERROR!

!testRun: #TerniLapilliGameTest #test13 stamp: 'IO 10/31/2020 17:03:54'!
ERROR!

!testRun: #TerniLapilliGameTest #test14 stamp: 'IO 10/31/2020 17:03:54'!
ERROR!

!testRun: #TerniLapilliGameTest #test15 stamp: 'IO 10/31/2020 17:03:54'!
ERROR!

!testRun: #TerniLapilliGameTest #test16 stamp: 'IO 10/31/2020 17:03:54'!
ERROR!

!testRun: #TerniLapilliGameTest #test17 stamp: 'IO 10/31/2020 17:03:54'!
PASSED!
!TerniLapilliGame methodsFor: 'moves' stamp: 'IO 10/31/2020 17:04:07' prior: 50871840!
oPutsOn: aPosition
	(turnOf = $X) ifTrue: [self error: TerniLapilliGame wrongTurnErrorMessage].
	oTokens add: aPosition.
	turnOf = $X.
! !

!testRun: #TerniLapilliGameTest #test01 stamp: 'IO 10/31/2020 17:04:08'!
PASSED!

!testRun: #TerniLapilliGameTest #test02 stamp: 'IO 10/31/2020 17:04:08'!
PASSED!

!testRun: #TerniLapilliGameTest #test03 stamp: 'IO 10/31/2020 17:04:08'!
PASSED!

!testRun: #TerniLapilliGameTest #test04 stamp: 'IO 10/31/2020 17:04:08'!
ERROR!

!testRun: #TerniLapilliGameTest #test05 stamp: 'IO 10/31/2020 17:04:08'!
ERROR!

!testRun: #TerniLapilliGameTest #test06 stamp: 'IO 10/31/2020 17:04:08'!
ERROR!

!testRun: #TerniLapilliGameTest #test07 stamp: 'IO 10/31/2020 17:04:08'!
ERROR!

!testRun: #TerniLapilliGameTest #test08 stamp: 'IO 10/31/2020 17:04:08'!
ERROR!

!testRun: #TerniLapilliGameTest #test09 stamp: 'IO 10/31/2020 17:04:08'!
ERROR!

!testRun: #TerniLapilliGameTest #test10 stamp: 'IO 10/31/2020 17:04:08'!
ERROR!

!testRun: #TerniLapilliGameTest #test11 stamp: 'IO 10/31/2020 17:04:08'!
ERROR!

!testRun: #TerniLapilliGameTest #test12 stamp: 'IO 10/31/2020 17:04:08'!
ERROR!

!testRun: #TerniLapilliGameTest #test13 stamp: 'IO 10/31/2020 17:04:08'!
ERROR!

!testRun: #TerniLapilliGameTest #test14 stamp: 'IO 10/31/2020 17:04:08'!
ERROR!

!testRun: #TerniLapilliGameTest #test15 stamp: 'IO 10/31/2020 17:04:08'!
ERROR!

!testRun: #TerniLapilliGameTest #test16 stamp: 'IO 10/31/2020 17:04:08'!
ERROR!

!testRun: #TerniLapilliGameTest #test17 stamp: 'IO 10/31/2020 17:04:08'!
PASSED!
!TerniLapilliGame methodsFor: 'initialization' stamp: 'IO 10/31/2020 17:04:44' prior: 50871713 overrides: 16896425!
initialize
	xTokens := TerniLapilliPlayerTokens new.
	oTokens := TerniLapilliPlayerTokens new.
	
	turnOf := $X.
! !
!TerniLapilliGame methodsFor: 'moves' stamp: 'IO 10/31/2020 17:05:17' prior: 50872046!
oPutsOn: aPosition
	(turnOf = $X) ifTrue: [self error: TerniLapilliGame wrongTurnErrorMessage].
	oTokens add: aPosition.
	turnOf = $R.
! !
!TerniLapilliGame methodsFor: 'moves' stamp: 'IO 10/31/2020 17:05:20' prior: 50871998!
xPutsOn: aPosition
	xTokens add: aPosition.

! !

!testRun: #TerniLapilliGameTest #test01 stamp: 'IO 10/31/2020 17:05:22'!
PASSED!

!testRun: #TerniLapilliGameTest #test02 stamp: 'IO 10/31/2020 17:05:22'!
PASSED!

!testRun: #TerniLapilliGameTest #test03 stamp: 'IO 10/31/2020 17:05:22'!
PASSED!

!testRun: #TerniLapilliGameTest #test04 stamp: 'IO 10/31/2020 17:05:22'!
ERROR!

!testRun: #TerniLapilliGameTest #test05 stamp: 'IO 10/31/2020 17:05:22'!
ERROR!

!testRun: #TerniLapilliGameTest #test06 stamp: 'IO 10/31/2020 17:05:22'!
ERROR!

!testRun: #TerniLapilliGameTest #test07 stamp: 'IO 10/31/2020 17:05:22'!
ERROR!

!testRun: #TerniLapilliGameTest #test08 stamp: 'IO 10/31/2020 17:05:22'!
ERROR!

!testRun: #TerniLapilliGameTest #test09 stamp: 'IO 10/31/2020 17:05:22'!
ERROR!

!testRun: #TerniLapilliGameTest #test10 stamp: 'IO 10/31/2020 17:05:22'!
ERROR!

!testRun: #TerniLapilliGameTest #test11 stamp: 'IO 10/31/2020 17:05:22'!
ERROR!

!testRun: #TerniLapilliGameTest #test12 stamp: 'IO 10/31/2020 17:05:22'!
ERROR!

!testRun: #TerniLapilliGameTest #test13 stamp: 'IO 10/31/2020 17:05:22'!
ERROR!

!testRun: #TerniLapilliGameTest #test14 stamp: 'IO 10/31/2020 17:05:22'!
ERROR!

!testRun: #TerniLapilliGameTest #test15 stamp: 'IO 10/31/2020 17:05:22'!
ERROR!

!testRun: #TerniLapilliGameTest #test16 stamp: 'IO 10/31/2020 17:05:22'!
ERROR!

!testRun: #TerniLapilliGameTest #test17 stamp: 'IO 10/31/2020 17:05:22'!
PASSED!
!TerniLapilliGame methodsFor: 'moves' stamp: 'IO 10/31/2020 17:05:58' prior: 50872113!
xPutsOn: aPosition
	xTokens add: aPosition.
	turnOf := $R.

! !

!testRun: #TerniLapilliGameTest #test01 stamp: 'IO 10/31/2020 17:05:59'!
PASSED!

!testRun: #TerniLapilliGameTest #test02 stamp: 'IO 10/31/2020 17:05:59'!
PASSED!

!testRun: #TerniLapilliGameTest #test03 stamp: 'IO 10/31/2020 17:05:59'!
PASSED!

!testRun: #TerniLapilliGameTest #test04 stamp: 'IO 10/31/2020 17:05:59'!
PASSED!

!testRun: #TerniLapilliGameTest #test05 stamp: 'IO 10/31/2020 17:05:59'!
PASSED!

!testRun: #TerniLapilliGameTest #test06 stamp: 'IO 10/31/2020 17:05:59'!
PASSED!

!testRun: #TerniLapilliGameTest #test07 stamp: 'IO 10/31/2020 17:05:59'!
PASSED!

!testRun: #TerniLapilliGameTest #test08 stamp: 'IO 10/31/2020 17:05:59'!
PASSED!

!testRun: #TerniLapilliGameTest #test09 stamp: 'IO 10/31/2020 17:05:59'!
PASSED!

!testRun: #TerniLapilliGameTest #test10 stamp: 'IO 10/31/2020 17:05:59'!
PASSED!

!testRun: #TerniLapilliGameTest #test11 stamp: 'IO 10/31/2020 17:05:59'!
PASSED!

!testRun: #TerniLapilliGameTest #test12 stamp: 'IO 10/31/2020 17:05:59'!
PASSED!

!testRun: #TerniLapilliGameTest #test13 stamp: 'IO 10/31/2020 17:05:59'!
PASSED!

!testRun: #TerniLapilliGameTest #test14 stamp: 'IO 10/31/2020 17:05:59'!
PASSED!

!testRun: #TerniLapilliGameTest #test15 stamp: 'IO 10/31/2020 17:05:59'!
PASSED!

!testRun: #TerniLapilliGameTest #test16 stamp: 'IO 10/31/2020 17:05:59'!
PASSED!

!testRun: #TerniLapilliGameTest #test17 stamp: 'IO 10/31/2020 17:05:59'!
PASSED!

!testRun: #TerniLapilliGameTest #test01 stamp: 'IO 10/31/2020 17:06:03'!
PASSED!

!testRun: #TerniLapilliGameTest #test02 stamp: 'IO 10/31/2020 17:06:03'!
PASSED!

!testRun: #TerniLapilliGameTest #test03 stamp: 'IO 10/31/2020 17:06:03'!
PASSED!

!testRun: #TerniLapilliGameTest #test04 stamp: 'IO 10/31/2020 17:06:03'!
PASSED!

!testRun: #TerniLapilliGameTest #test05 stamp: 'IO 10/31/2020 17:06:03'!
PASSED!

!testRun: #TerniLapilliGameTest #test06 stamp: 'IO 10/31/2020 17:06:03'!
PASSED!

!testRun: #TerniLapilliGameTest #test07 stamp: 'IO 10/31/2020 17:06:03'!
PASSED!

!testRun: #TerniLapilliGameTest #test08 stamp: 'IO 10/31/2020 17:06:03'!
PASSED!

!testRun: #TerniLapilliGameTest #test09 stamp: 'IO 10/31/2020 17:06:03'!
PASSED!

!testRun: #TerniLapilliGameTest #test10 stamp: 'IO 10/31/2020 17:06:03'!
PASSED!

!testRun: #TerniLapilliGameTest #test11 stamp: 'IO 10/31/2020 17:06:03'!
PASSED!

!testRun: #TerniLapilliGameTest #test12 stamp: 'IO 10/31/2020 17:06:03'!
PASSED!

!testRun: #TerniLapilliGameTest #test13 stamp: 'IO 10/31/2020 17:06:03'!
PASSED!

!testRun: #TerniLapilliGameTest #test14 stamp: 'IO 10/31/2020 17:06:03'!
PASSED!

!testRun: #TerniLapilliGameTest #test15 stamp: 'IO 10/31/2020 17:06:03'!
PASSED!

!testRun: #TerniLapilliGameTest #test16 stamp: 'IO 10/31/2020 17:06:03'!
PASSED!

!testRun: #TerniLapilliGameTest #test17 stamp: 'IO 10/31/2020 17:06:03'!
PASSED!
!TerniLapilliGame methodsFor: 'moves' stamp: 'IO 10/31/2020 17:06:27' prior: 50872105!
oPutsOn: aPosition
	(turnOf = $O) ifFalse: [self error: TerniLapilliGame wrongTurnErrorMessage].
	oTokens add: aPosition.
	turnOf = $R.
! !

!testRun: #TerniLapilliGameTest #test01 stamp: 'IO 10/31/2020 17:06:28'!
PASSED!

!testRun: #TerniLapilliGameTest #test02 stamp: 'IO 10/31/2020 17:06:28'!
PASSED!

!testRun: #TerniLapilliGameTest #test03 stamp: 'IO 10/31/2020 17:06:28'!
PASSED!

!testRun: #TerniLapilliGameTest #test04 stamp: 'IO 10/31/2020 17:06:28'!
ERROR!

!testRun: #TerniLapilliGameTest #test05 stamp: 'IO 10/31/2020 17:06:28'!
ERROR!

!testRun: #TerniLapilliGameTest #test06 stamp: 'IO 10/31/2020 17:06:28'!
ERROR!

!testRun: #TerniLapilliGameTest #test07 stamp: 'IO 10/31/2020 17:06:28'!
ERROR!

!testRun: #TerniLapilliGameTest #test08 stamp: 'IO 10/31/2020 17:06:28'!
ERROR!

!testRun: #TerniLapilliGameTest #test09 stamp: 'IO 10/31/2020 17:06:28'!
ERROR!

!testRun: #TerniLapilliGameTest #test10 stamp: 'IO 10/31/2020 17:06:28'!
ERROR!

!testRun: #TerniLapilliGameTest #test11 stamp: 'IO 10/31/2020 17:06:28'!
ERROR!

!testRun: #TerniLapilliGameTest #test12 stamp: 'IO 10/31/2020 17:06:28'!
ERROR!

!testRun: #TerniLapilliGameTest #test13 stamp: 'IO 10/31/2020 17:06:28'!
ERROR!

!testRun: #TerniLapilliGameTest #test14 stamp: 'IO 10/31/2020 17:06:28'!
ERROR!

!testRun: #TerniLapilliGameTest #test15 stamp: 'IO 10/31/2020 17:06:28'!
ERROR!

!testRun: #TerniLapilliGameTest #test16 stamp: 'IO 10/31/2020 17:06:28'!
ERROR!

!testRun: #TerniLapilliGameTest #test17 stamp: 'IO 10/31/2020 17:06:28'!
PASSED!
!TerniLapilliGame methodsFor: 'moves' stamp: 'IO 10/31/2020 17:06:36' prior: 50872161!
xPutsOn: aPosition
	xTokens add: aPosition.
	turnOf := $O.

! !
!TerniLapilliGame methodsFor: 'moves' stamp: 'IO 10/31/2020 17:06:40' prior: 50872253!
oPutsOn: aPosition
	(turnOf = $O) ifFalse: [self error: TerniLapilliGame wrongTurnErrorMessage].
	oTokens add: aPosition.

! !

!testRun: #TerniLapilliGameTest #test01 stamp: 'IO 10/31/2020 17:06:41'!
PASSED!

!testRun: #TerniLapilliGameTest #test02 stamp: 'IO 10/31/2020 17:06:41'!
PASSED!

!testRun: #TerniLapilliGameTest #test03 stamp: 'IO 10/31/2020 17:06:41'!
PASSED!

!testRun: #TerniLapilliGameTest #test04 stamp: 'IO 10/31/2020 17:06:41'!
PASSED!

!testRun: #TerniLapilliGameTest #test05 stamp: 'IO 10/31/2020 17:06:41'!
PASSED!

!testRun: #TerniLapilliGameTest #test06 stamp: 'IO 10/31/2020 17:06:41'!
PASSED!

!testRun: #TerniLapilliGameTest #test07 stamp: 'IO 10/31/2020 17:06:41'!
PASSED!

!testRun: #TerniLapilliGameTest #test08 stamp: 'IO 10/31/2020 17:06:41'!
PASSED!

!testRun: #TerniLapilliGameTest #test09 stamp: 'IO 10/31/2020 17:06:41'!
PASSED!

!testRun: #TerniLapilliGameTest #test10 stamp: 'IO 10/31/2020 17:06:41'!
PASSED!

!testRun: #TerniLapilliGameTest #test11 stamp: 'IO 10/31/2020 17:06:41'!
PASSED!

!testRun: #TerniLapilliGameTest #test12 stamp: 'IO 10/31/2020 17:06:41'!
PASSED!

!testRun: #TerniLapilliGameTest #test13 stamp: 'IO 10/31/2020 17:06:41'!
PASSED!

!testRun: #TerniLapilliGameTest #test14 stamp: 'IO 10/31/2020 17:06:41'!
PASSED!

!testRun: #TerniLapilliGameTest #test15 stamp: 'IO 10/31/2020 17:06:41'!
PASSED!

!testRun: #TerniLapilliGameTest #test16 stamp: 'IO 10/31/2020 17:06:41'!
PASSED!

!testRun: #TerniLapilliGameTest #test17 stamp: 'IO 10/31/2020 17:06:41'!
PASSED!
!TerniLapilliGameTest methodsFor: 'as yet unclassified' stamp: 'IO 10/31/2020 17:07:48'!
test18
	"despues de X juega Y"
	| aGame |
	aGame := TerniLapilliGame new.
	
	aGame xPutsOn: (0@0).
	self should: [aGame xPutsOn: (0@1)] raise: Error withMessageText: TerniLapilliGame wrongTurnErrorMessage.


! !

!testRun: #TerniLapilliGameTest #test18 stamp: 'IO 10/31/2020 17:07:54'!
FAILURE!
!TerniLapilliGameTest methodsFor: 'as yet unclassified' stamp: 'IO 10/31/2020 17:08:30' prior: 50871673!
test17
	"empieza poniendo X"
	| aGame |
	aGame := TerniLapilliGame new.
	
	self should: [aGame oPutsOn: (0@0)] raise: Error withMessageText: TerniLapilliGame wrongTurnErrorMessage.


! !
!TerniLapilliGameTest methodsFor: 'as yet unclassified' stamp: 'IO 10/31/2020 17:08:35' prior: 50872360!
test18
	"despues de X pone Y"
	| aGame |
	aGame := TerniLapilliGame new.
	
	aGame xPutsOn: (0@0).
	self should: [aGame xPutsOn: (0@1)] raise: Error withMessageText: TerniLapilliGame wrongTurnErrorMessage.


! !
!TerniLapilliGame methodsFor: 'moves' stamp: 'IO 10/31/2020 17:09:18' prior: 50872304!
xPutsOn: aPosition
	(turnOf = $X) ifFalse: [self error: TerniLapilliGame wrongTurnErrorMessage].
	xTokens add: aPosition.
	turnOf := $O.

! !

!testRun: #TerniLapilliGameTest #test01 stamp: 'IO 10/31/2020 17:09:19'!
PASSED!

!testRun: #TerniLapilliGameTest #test02 stamp: 'IO 10/31/2020 17:09:19'!
PASSED!

!testRun: #TerniLapilliGameTest #test03 stamp: 'IO 10/31/2020 17:09:19'!
PASSED!

!testRun: #TerniLapilliGameTest #test04 stamp: 'IO 10/31/2020 17:09:19'!
PASSED!

!testRun: #TerniLapilliGameTest #test05 stamp: 'IO 10/31/2020 17:09:19'!
ERROR!

!testRun: #TerniLapilliGameTest #test06 stamp: 'IO 10/31/2020 17:09:19'!
ERROR!

!testRun: #TerniLapilliGameTest #test07 stamp: 'IO 10/31/2020 17:09:19'!
ERROR!

!testRun: #TerniLapilliGameTest #test08 stamp: 'IO 10/31/2020 17:09:19'!
ERROR!

!testRun: #TerniLapilliGameTest #test09 stamp: 'IO 10/31/2020 17:09:19'!
ERROR!

!testRun: #TerniLapilliGameTest #test10 stamp: 'IO 10/31/2020 17:09:19'!
ERROR!

!testRun: #TerniLapilliGameTest #test11 stamp: 'IO 10/31/2020 17:09:19'!
ERROR!

!testRun: #TerniLapilliGameTest #test12 stamp: 'IO 10/31/2020 17:09:19'!
ERROR!

!testRun: #TerniLapilliGameTest #test13 stamp: 'IO 10/31/2020 17:09:19'!
ERROR!

!testRun: #TerniLapilliGameTest #test14 stamp: 'IO 10/31/2020 17:09:19'!
ERROR!

!testRun: #TerniLapilliGameTest #test15 stamp: 'IO 10/31/2020 17:09:19'!
ERROR!

!testRun: #TerniLapilliGameTest #test16 stamp: 'IO 10/31/2020 17:09:19'!
ERROR!

!testRun: #TerniLapilliGameTest #test17 stamp: 'IO 10/31/2020 17:09:19'!
PASSED!

!testRun: #TerniLapilliGameTest #test18 stamp: 'IO 10/31/2020 17:09:19'!
PASSED!
!TerniLapilliGame methodsFor: 'moves' stamp: 'IO 10/31/2020 17:09:33' prior: 50872309!
oPutsOn: aPosition
	(turnOf = $O) ifFalse: [self error: TerniLapilliGame wrongTurnErrorMessage].
	oTokens add: aPosition.
	turnOf := $X.


! !

!testRun: #TerniLapilliGameTest #test01 stamp: 'IO 10/31/2020 17:09:34'!
PASSED!

!testRun: #TerniLapilliGameTest #test02 stamp: 'IO 10/31/2020 17:09:34'!
PASSED!

!testRun: #TerniLapilliGameTest #test03 stamp: 'IO 10/31/2020 17:09:34'!
PASSED!

!testRun: #TerniLapilliGameTest #test04 stamp: 'IO 10/31/2020 17:09:34'!
PASSED!

!testRun: #TerniLapilliGameTest #test05 stamp: 'IO 10/31/2020 17:09:34'!
PASSED!

!testRun: #TerniLapilliGameTest #test06 stamp: 'IO 10/31/2020 17:09:34'!
PASSED!

!testRun: #TerniLapilliGameTest #test07 stamp: 'IO 10/31/2020 17:09:34'!
PASSED!

!testRun: #TerniLapilliGameTest #test08 stamp: 'IO 10/31/2020 17:09:34'!
PASSED!

!testRun: #TerniLapilliGameTest #test09 stamp: 'IO 10/31/2020 17:09:34'!
PASSED!

!testRun: #TerniLapilliGameTest #test10 stamp: 'IO 10/31/2020 17:09:34'!
PASSED!

!testRun: #TerniLapilliGameTest #test11 stamp: 'IO 10/31/2020 17:09:34'!
PASSED!

!testRun: #TerniLapilliGameTest #test12 stamp: 'IO 10/31/2020 17:09:34'!
PASSED!

!testRun: #TerniLapilliGameTest #test13 stamp: 'IO 10/31/2020 17:09:34'!
PASSED!

!testRun: #TerniLapilliGameTest #test14 stamp: 'IO 10/31/2020 17:09:34'!
PASSED!

!testRun: #TerniLapilliGameTest #test15 stamp: 'IO 10/31/2020 17:09:34'!
PASSED!

!testRun: #TerniLapilliGameTest #test16 stamp: 'IO 10/31/2020 17:09:34'!
PASSED!

!testRun: #TerniLapilliGameTest #test17 stamp: 'IO 10/31/2020 17:09:34'!
PASSED!

!testRun: #TerniLapilliGameTest #test18 stamp: 'IO 10/31/2020 17:09:34'!
PASSED!
!TerniLapilliGame methodsFor: 'moves' stamp: 'IO 10/31/2020 17:27:26' prior: 50872446!
oPutsOn: aPosition
	(turnOf = $O) ifFalse: [self error: TerniLapilliGame wrongTurnErrorMessage].
	oTokens add: aPosition.
	turnOf := $X.



! !

!testRun: #TerniLapilliGameTest #test01 stamp: 'IO 10/31/2020 17:27:28'!
PASSED!

!testRun: #TerniLapilliGameTest #test02 stamp: 'IO 10/31/2020 17:27:28'!
PASSED!

!testRun: #TerniLapilliGameTest #test03 stamp: 'IO 10/31/2020 17:27:28'!
PASSED!

!testRun: #TerniLapilliGameTest #test04 stamp: 'IO 10/31/2020 17:27:28'!
PASSED!

!testRun: #TerniLapilliGameTest #test05 stamp: 'IO 10/31/2020 17:27:28'!
PASSED!

!testRun: #TerniLapilliGameTest #test06 stamp: 'IO 10/31/2020 17:27:28'!
PASSED!

!testRun: #TerniLapilliGameTest #test07 stamp: 'IO 10/31/2020 17:27:28'!
PASSED!

!testRun: #TerniLapilliGameTest #test08 stamp: 'IO 10/31/2020 17:27:28'!
PASSED!

!testRun: #TerniLapilliGameTest #test09 stamp: 'IO 10/31/2020 17:27:28'!
PASSED!

!testRun: #TerniLapilliGameTest #test10 stamp: 'IO 10/31/2020 17:27:28'!
PASSED!

!testRun: #TerniLapilliGameTest #test11 stamp: 'IO 10/31/2020 17:27:28'!
PASSED!

!testRun: #TerniLapilliGameTest #test12 stamp: 'IO 10/31/2020 17:27:28'!
PASSED!

!testRun: #TerniLapilliGameTest #test13 stamp: 'IO 10/31/2020 17:27:28'!
PASSED!

!testRun: #TerniLapilliGameTest #test14 stamp: 'IO 10/31/2020 17:27:28'!
PASSED!

!testRun: #TerniLapilliGameTest #test15 stamp: 'IO 10/31/2020 17:27:28'!
PASSED!

!testRun: #TerniLapilliGameTest #test16 stamp: 'IO 10/31/2020 17:27:28'!
PASSED!

!testRun: #TerniLapilliGameTest #test17 stamp: 'IO 10/31/2020 17:27:28'!
PASSED!

!testRun: #TerniLapilliGameTest #test18 stamp: 'IO 10/31/2020 17:27:28'!
PASSED!
!TerniLapilliGame methodsFor: 'moves' stamp: 'IO 10/31/2020 17:44:57' prior: 50872393!
xPutsOn: aPosition
	(turnOf = $X) ifFalse: [self error: TerniLapilliGame wrongTurnErrorMessage].
	xTokens add: aPosition.
	turnOf := $O.

! !

!testRun: #TerniLapilliGameTest #test01 stamp: 'IO 10/31/2020 17:44:59'!
PASSED!

!testRun: #TerniLapilliGameTest #test02 stamp: 'IO 10/31/2020 17:44:59'!
PASSED!

!testRun: #TerniLapilliGameTest #test03 stamp: 'IO 10/31/2020 17:44:59'!
PASSED!

!testRun: #TerniLapilliGameTest #test04 stamp: 'IO 10/31/2020 17:44:59'!
PASSED!

!testRun: #TerniLapilliGameTest #test05 stamp: 'IO 10/31/2020 17:44:59'!
PASSED!

!testRun: #TerniLapilliGameTest #test06 stamp: 'IO 10/31/2020 17:44:59'!
PASSED!

!testRun: #TerniLapilliGameTest #test07 stamp: 'IO 10/31/2020 17:44:59'!
PASSED!

!testRun: #TerniLapilliGameTest #test08 stamp: 'IO 10/31/2020 17:44:59'!
PASSED!

!testRun: #TerniLapilliGameTest #test09 stamp: 'IO 10/31/2020 17:44:59'!
PASSED!

!testRun: #TerniLapilliGameTest #test10 stamp: 'IO 10/31/2020 17:44:59'!
PASSED!

!testRun: #TerniLapilliGameTest #test11 stamp: 'IO 10/31/2020 17:44:59'!
PASSED!

!testRun: #TerniLapilliGameTest #test12 stamp: 'IO 10/31/2020 17:44:59'!
PASSED!

!testRun: #TerniLapilliGameTest #test13 stamp: 'IO 10/31/2020 17:44:59'!
PASSED!

!testRun: #TerniLapilliGameTest #test14 stamp: 'IO 10/31/2020 17:44:59'!
PASSED!

!testRun: #TerniLapilliGameTest #test15 stamp: 'IO 10/31/2020 17:44:59'!
PASSED!

!testRun: #TerniLapilliGameTest #test16 stamp: 'IO 10/31/2020 17:44:59'!
PASSED!

!testRun: #TerniLapilliGameTest #test17 stamp: 'IO 10/31/2020 17:44:59'!
PASSED!

!testRun: #TerniLapilliGameTest #test18 stamp: 'IO 10/31/2020 17:44:59'!
PASSED!

----SNAPSHOT----(31 October 2020 17:45:03) CuisUniversity-4384.image priorSource: 17265728!
!TerniLapilliGame methodsFor: 'moves' stamp: 'IO 10/31/2020 17:46:26' prior: 50872554!
xPutsOn: aPosition
	"(turnOf = $X) ifFalse: [self error: TerniLapilliGame wrongTurnErrorMessage].
	xTokens add: aPosition.
	turnOf := $O."
	xTokens add: aPosition onTurn: turnOf.
	

! !
!TerniLapilliGame methodsFor: 'moves' stamp: 'IO 10/31/2020 17:46:46' prior: 50872500!
oPutsOn: aPosition
	"(turnOf = $O) ifFalse: [self error: TerniLapilliGame wrongTurnErrorMessage].
	oTokens add: aPosition.
	turnOf := $X."
	oTokens add: aPosition onTurn: turnOf.



! !
!TerniLapilliGame methodsFor: 'moves' stamp: 'IO 10/31/2020 17:52:01' prior: 50872620!
oPutsOn: aPosition
	(turnOf = $O) ifFalse: [self error: TerniLapilliGame wrongTurnErrorMessage].
	oTokens add: aPosition.
	turnOf := $X.
! !
!TerniLapilliGame methodsFor: 'moves' stamp: 'IO 10/31/2020 17:52:09' prior: 50872611!
xPutsOn: aPosition
	(turnOf = $X) ifFalse: [self error: TerniLapilliGame wrongTurnErrorMessage].
	xTokens add: aPosition.
	turnOf := $O.

	

! !

!testRun: #TerniLapilliGameTest #test01 stamp: 'IO 10/31/2020 17:52:49'!
PASSED!

!testRun: #TerniLapilliGameTest #test02 stamp: 'IO 10/31/2020 17:52:49'!
PASSED!

!testRun: #TerniLapilliGameTest #test03 stamp: 'IO 10/31/2020 17:52:49'!
PASSED!

!testRun: #TerniLapilliGameTest #test04 stamp: 'IO 10/31/2020 17:52:49'!
PASSED!

!testRun: #TerniLapilliGameTest #test05 stamp: 'IO 10/31/2020 17:52:49'!
PASSED!

!testRun: #TerniLapilliGameTest #test06 stamp: 'IO 10/31/2020 17:52:49'!
PASSED!

!testRun: #TerniLapilliGameTest #test07 stamp: 'IO 10/31/2020 17:52:49'!
PASSED!

!testRun: #TerniLapilliGameTest #test08 stamp: 'IO 10/31/2020 17:52:49'!
PASSED!

!testRun: #TerniLapilliGameTest #test09 stamp: 'IO 10/31/2020 17:52:49'!
PASSED!

!testRun: #TerniLapilliGameTest #test10 stamp: 'IO 10/31/2020 17:52:49'!
PASSED!

!testRun: #TerniLapilliGameTest #test11 stamp: 'IO 10/31/2020 17:52:49'!
PASSED!

!testRun: #TerniLapilliGameTest #test12 stamp: 'IO 10/31/2020 17:52:49'!
PASSED!

!testRun: #TerniLapilliGameTest #test13 stamp: 'IO 10/31/2020 17:52:49'!
PASSED!

!testRun: #TerniLapilliGameTest #test14 stamp: 'IO 10/31/2020 17:52:49'!
PASSED!

!testRun: #TerniLapilliGameTest #test15 stamp: 'IO 10/31/2020 17:52:49'!
PASSED!

!testRun: #TerniLapilliGameTest #test16 stamp: 'IO 10/31/2020 17:52:49'!
PASSED!

!testRun: #TerniLapilliGameTest #test17 stamp: 'IO 10/31/2020 17:52:49'!
PASSED!

!testRun: #TerniLapilliGameTest #test18 stamp: 'IO 10/31/2020 17:52:49'!
PASSED!
!TerniLapilliGame methodsFor: 'moves' stamp: 'IO 10/31/2020 17:55:51' prior: 50872637!
xPutsOn: aPosition
	(turnOf = $X) ifFalse: [self error: TerniLapilliGame wrongTurnErrorMessage].
	xTokens add: aPosition.
	turnOf := $O.

! !

Object subclass: #TerniLapilliGameState
	instanceVariableNames: 'xTokens oTokens turnOf'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Terni Lapilli'!

!classDefinition: #TerniLapilliGameState category: 'Terni Lapilli' stamp: 'IO 10/31/2020 17:56:53'!
Object subclass: #TerniLapilliGameState
	instanceVariableNames: 'xTokens oTokens turnOf'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Terni Lapilli'!
!TerniLapilliGameState methodsFor: 'no messages' stamp: 'IO 10/31/2020 17:58:47'!
xPutsOn: aPosition
	^self subclassResponsibility.
! !
!TerniLapilliGameState methodsFor: 'as yet unclassified' stamp: 'IO 10/31/2020 17:58:50'!
oPutsOn: aPosition
	^self subclassResponsibility.
! !

Object subclass: #TerniLapilliGameState
	instanceVariableNames: 'xTokens oTokens'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Terni Lapilli'!

!classDefinition: #TerniLapilliGameState category: 'Terni Lapilli' stamp: 'IO 10/31/2020 17:59:12'!
Object subclass: #TerniLapilliGameState
	instanceVariableNames: 'xTokens oTokens'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Terni Lapilli'!

TerniLapilliGameState subclass: #TerniLapilliGameStatePlaysX
	instanceVariableNames: 'xTokens oTokens'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Terni Lapilli'!

TerniLapilliGameState subclass: #TerniLapilliGameStatePlaysX
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Terni Lapilli'!

!classDefinition: #TerniLapilliGameStatePlaysX category: 'Terni Lapilli' stamp: 'IO 10/31/2020 17:59:44'!
TerniLapilliGameState subclass: #TerniLapilliGameStatePlaysX
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Terni Lapilli'!
!TerniLapilliGameStatePlaysX methodsFor: 'no messages' stamp: 'IO 10/31/2020 18:00:09' overrides: 50872712!
xPutsOn: aPosition
! !
!TerniLapilliGameStatePlaysX methodsFor: 'as yet unclassified' stamp: 'IO 10/31/2020 18:00:37' prior: 50872755 overrides: 50872712!
xPutsOn: aPosition
	xTokens add: aPosition.! !
!TerniLapilliGameStatePlaysX methodsFor: 'as yet unclassified' stamp: 'IO 10/31/2020 18:01:00' overrides: 50872717!
oPutsOn: aPosition
	self error: TerniLapilliGame wrongTurnErrorMessage.
! !

TerniLapilliGameState subclass: #TerniLapilliGameStatePlaysY
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Terni Lapilli'!

!classDefinition: #TerniLapilliGameStatePlaysY category: 'Terni Lapilli' stamp: 'IO 10/31/2020 18:01:27'!
TerniLapilliGameState subclass: #TerniLapilliGameStatePlaysY
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Terni Lapilli'!
!TerniLapilliGameStatePlaysY methodsFor: 'no messages' stamp: 'IO 10/31/2020 18:01:51' overrides: 50872712!
xPutsOn: aPosition
	self error: TerniLapilliGame wrongTurnErrorMessage.
! !
!TerniLapilliGameStatePlaysY methodsFor: 'as yet unclassified' stamp: 'IO 10/31/2020 18:02:24' overrides: 50872717!
oPutsOn: aPosition
	oTokens add: aPosition.
! !

Object subclass: #TerniLapilliGame
	instanceVariableNames: 'state'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Terni Lapilli'!

!classDefinition: #TerniLapilliGame category: 'Terni Lapilli' stamp: 'IO 10/31/2020 18:02:37'!
Object subclass: #TerniLapilliGame
	instanceVariableNames: 'state'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Terni Lapilli'!
!TerniLapilliGame methodsFor: 'moves' stamp: 'IO 10/31/2020 18:03:25' prior: 50872691!
xPutsOn: aPosition
	state := state xPutOn: aPosition.
! !
!TerniLapilliGame methodsFor: 'initialization' stamp: 'IO 10/31/2020 18:03:53' prior: 50872098 overrides: 16896425!
initialize
	state := TerniLapilliGameState new.
! !
!TerniLapilliGameState class methodsFor: 'no messages' stamp: 'IO 10/31/2020 18:04:22' overrides: 16783533!
new
	^TerniLapilliGameStatePlaysX new.
! !
!TerniLapilliGameStatePlaysX class methodsFor: 'no messages' stamp: 'IO 10/31/2020 18:04:44' overrides: 50872820!
new
	^self basicNew initialize.
! !
!TerniLapilliGameStatePlaysX methodsFor: 'as yet unclassified' stamp: 'IO 10/31/2020 18:05:44' overrides: 16896425!
initialize
	xTokens := Set new.
	oTokens := Set new.
! !
!TerniLapilliGame methodsFor: 'moves' stamp: 'IO 10/31/2020 18:06:38' prior: 50872629!
oPutsOn: aPosition
	state := state oPutsOn: aPosition.

! !
!TerniLapilliGameState methodsFor: 'as yet unclassified' stamp: 'IO 10/31/2020 18:07:29'!
includesColorOAt: aPosition 
	^oTokens includes: aPosition.! !
!TerniLapilliGame methodsFor: 'testing' stamp: 'IO 10/31/2020 18:07:48' prior: 50869243!
includesColorOAt: aPosition 
	^state includesColorOAt: aPosition.
! !
!TerniLapilliGameState methodsFor: 'as yet unclassified' stamp: 'IO 10/31/2020 18:08:05'!
includesColorXAt: aPosition 
	^xTokens includes: aPosition.! !
!TerniLapilliGame methodsFor: 'testing' stamp: 'IO 10/31/2020 18:09:11' prior: 50869248!
includesColorXAt: aPosition 
	^state includesColorXAt: aPosition.
! !
!TerniLapilliGameState methodsFor: 'as yet unclassified' stamp: 'IO 10/31/2020 18:09:36'!
oHasWon
	^oTokens areInWinningPosition.
! !
!TerniLapilliGameState methodsFor: 'as yet unclassified' stamp: 'IO 10/31/2020 18:09:41'!
xHasWon
	^xTokens areInWinningPosition.
! !
!TerniLapilliGame methodsFor: 'testing' stamp: 'IO 10/31/2020 18:09:51' prior: 50870737!
oHasWon
	^state oHasWon .
! !
!TerniLapilliGame methodsFor: 'testing' stamp: 'IO 10/31/2020 18:10:04' prior: 50869485!
xHasWon
	^state xHasWon .
! !
!TerniLapilliGame methodsFor: 'testing' stamp: 'IO 10/31/2020 18:10:05' prior: 50872874!
xHasWon
	^state xHasWon.
! !
!TerniLapilliGameState methodsFor: 'as yet unclassified' stamp: 'IO 10/31/2020 18:10:19'!
oMoves: sourcePosition to: destinationPosition

	oTokens move: sourcePosition to: destinationPosition.



! !
!TerniLapilliGameState methodsFor: 'as yet unclassified' stamp: 'IO 10/31/2020 18:10:24' prior: 50872882!
oMoves: sourcePosition to: destinationPosition

	oTokens move: sourcePosition to: destinationPosition.
! !
!TerniLapilliGame methodsFor: 'moves' stamp: 'IO 10/31/2020 18:10:56' prior: 50871833!
oMoves: sourcePosition to: destinationPosition

	state := state oMoves: sourcePosition to: destinationPosition.




! !
!TerniLapilliGameState methodsFor: 'as yet unclassified' stamp: 'IO 10/31/2020 18:11:29'!
xMoves: sourcePosition to: destinationPosition 
	xTokens move: sourcePosition to: destinationPosition.
! !
!TerniLapilliGame methodsFor: 'moves' stamp: 'IO 10/31/2020 18:11:59' prior: 50871991!
xMoves: sourcePosition to: destinationPosition 
	state := state xMoves: sourcePosition to: destinationPosition.



! !
!TerniLapilliGameState methodsFor: 'as yet unclassified' stamp: 'IO 10/31/2020 18:12:50' prior: 50872840!
includesColorOAt: aPosition 
	"^oTokens includes: aPosition."
	self subclassResponsibility.
! !
!TerniLapilliGameState methodsFor: 'as yet unclassified' stamp: 'IO 10/31/2020 18:13:09' prior: 50872918!
includesColorOAt: aPosition 
	^oTokens includes: aPosition.

! !
!TerniLapilliGameState methodsFor: 'as yet unclassified' stamp: 'IO 10/31/2020 18:13:30' prior: 50872889!
oMoves: sourcePosition to: destinationPosition
	^self subclassResponsibility.
	"oTokens move: sourcePosition to: destinationPosition."
! !

!classRenamed: #TerniLapilliGameStatePlaysY as: #TerniLapilliGameStatePlaysO stamp: 'IO 10/31/2020 18:14:06'!
Smalltalk renameClassNamed: #TerniLapilliGameStatePlaysY as: #TerniLapilliGameStatePlaysO!
!TerniLapilliGameStatePlaysX methodsFor: 'as yet unclassified' stamp: 'IO 10/31/2020 18:14:59' overrides: 50872931!
oMoves: sourcePosition to: destinationPosition
	^TerniLapilliGameStatePlaysO withXTokens: xTokens oTokens: oTokens.
! !
!TerniLapilliGameState methodsFor: 'as yet unclassified' stamp: 'IO 10/31/2020 18:16:10'!
withXTokens: nextXTokens oTokens: nextOTokens.
	xTokens := nextXTokens.
	oTokens := nextOTokens.
! !
!TerniLapilliGameState methodsFor: 'as yet unclassified' stamp: 'IO 10/31/2020 18:16:21'!
intializeWithXTokens: nextXTokens oTokens: nextOTokens.
	xTokens := nextXTokens.
	oTokens := nextOTokens.
! !

!methodRemoval: TerniLapilliGameState #withXTokens:oTokens: stamp: 'IO 10/31/2020 18:16:28'!
withXTokens: nextXTokens oTokens: nextOTokens.
	xTokens := nextXTokens.
	oTokens := nextOTokens.
!
!TerniLapilliGameState class methodsFor: 'as yet unclassified' stamp: 'IO 10/31/2020 18:17:46'!
withXTokens: nextXTokens oTokens: nextOTokens.
	^self basicNew intializeWithXTokens: nextXTokens oTokens: nextOTokens.
! !
!TerniLapilliGameStatePlaysO methodsFor: 'as yet unclassified' stamp: 'IO 10/31/2020 18:18:24' prior: 50872792 overrides: 50872717!
oPutsOn: aPosition
	oTokens add: aPosition.
	^TerniLapilliGameStatePlaysX withXTokens: xTokens oTokens: oTokens.

! !
!TerniLapilliGameStatePlaysO methodsFor: 'as yet unclassified' stamp: 'IO 10/31/2020 18:18:30' prior: 50872786 overrides: 50872712!
xPutsOn: aPosition
	self error: TerniLapilliGame wrongTurnErrorMessage.
	^TerniLapilliGameStatePlaysX withXTokens: xTokens oTokens: oTokens.
! !
!TerniLapilliGameStatePlaysX methodsFor: 'as yet unclassified' stamp: 'IO 10/31/2020 18:18:45' prior: 50872760 overrides: 50872712!
xPutsOn: aPosition
	xTokens add: aPosition.
	^TerniLapilliGameStatePlaysX withXTokens: xTokens oTokens: oTokens.! !
!TerniLapilliGameStatePlaysX methodsFor: 'as yet unclassified' stamp: 'IO 10/31/2020 18:18:52' prior: 50872766 overrides: 50872717!
oPutsOn: aPosition
	self error: TerniLapilliGame wrongTurnErrorMessage.
	^TerniLapilliGameStatePlaysX withXTokens: xTokens oTokens: oTokens.
! !
!TerniLapilliGameStatePlaysX methodsFor: 'as yet unclassified' stamp: 'IO 10/31/2020 18:18:59' prior: 50873005 overrides: 50872717!
oPutsOn: aPosition
	self error: TerniLapilliGame wrongTurnErrorMessage.

! !
!TerniLapilliGameStatePlaysX methodsFor: 'as yet unclassified' stamp: 'IO 10/31/2020 18:19:05' prior: 50873014 overrides: 50872717!
oPutsOn: aPosition
	^self error: TerniLapilliGame wrongTurnErrorMessage.

! !
!TerniLapilliGameStatePlaysO methodsFor: 'as yet unclassified' stamp: 'IO 10/31/2020 18:19:20' prior: 50872988 overrides: 50872712!
xPutsOn: aPosition
	self error: TerniLapilliGame wrongTurnErrorMessage.

! !
!TerniLapilliGame methodsFor: 'testing' stamp: 'IO 10/31/2020 18:19:39' prior: 50872870!
oHasWon
	^state oHasWon.
! !
!TerniLapilliGameState methodsFor: 'as yet unclassified' stamp: 'IO 10/31/2020 18:21:03' prior: 50872931!
oMoves: sourcePosition to: destinationPosition
	^self subclassResponsibility.

! !
!TerniLapilliGameStatePlaysO methodsFor: 'as yet unclassified' stamp: 'IO 10/31/2020 18:22:19' overrides: 50873039!
oMoves: sourcePosition to: destinationPosition
	oTokens move: sourcePosition to: destinationPosition.
	^TerniLapilliGameStatePlaysO withXTokens: xTokens oTokens: oTokens.
! !
!TerniLapilliGameStatePlaysO methodsFor: 'as yet unclassified' stamp: 'IO 10/31/2020 18:22:26' overrides: 50872903!
xMoves: sourcePosition to: destinationPosition
	^TerniLapilliGameStatePlaysO withXTokens: xTokens oTokens: oTokens.
! !
!TerniLapilliGameStatePlaysX methodsFor: 'as yet unclassified' stamp: 'IO 10/31/2020 18:22:55' overrides: 50872903!
xMoves: sourcePosition to: destinationPosition
	xTokens move: sourcePosition to: destinationPosition.
	^TerniLapilliGameStatePlaysO withXTokens: xTokens oTokens: oTokens.
! !

!testRun: #TerniLapilliGameTest #test01 stamp: 'IO 10/31/2020 18:23:09'!
ERROR!

!testRun: #TerniLapilliGameTest #test02 stamp: 'IO 10/31/2020 18:23:09'!
ERROR!

!testRun: #TerniLapilliGameTest #test03 stamp: 'IO 10/31/2020 18:23:09'!
ERROR!

!testRun: #TerniLapilliGameTest #test04 stamp: 'IO 10/31/2020 18:23:09'!
ERROR!

!testRun: #TerniLapilliGameTest #test05 stamp: 'IO 10/31/2020 18:23:09'!
ERROR!

!testRun: #TerniLapilliGameTest #test06 stamp: 'IO 10/31/2020 18:23:09'!
ERROR!

!testRun: #TerniLapilliGameTest #test07 stamp: 'IO 10/31/2020 18:23:09'!
ERROR!

!testRun: #TerniLapilliGameTest #test08 stamp: 'IO 10/31/2020 18:23:09'!
ERROR!

!testRun: #TerniLapilliGameTest #test09 stamp: 'IO 10/31/2020 18:23:09'!
ERROR!

!testRun: #TerniLapilliGameTest #test10 stamp: 'IO 10/31/2020 18:23:09'!
ERROR!

!testRun: #TerniLapilliGameTest #test11 stamp: 'IO 10/31/2020 18:23:09'!
ERROR!

!testRun: #TerniLapilliGameTest #test12 stamp: 'IO 10/31/2020 18:23:09'!
ERROR!

!testRun: #TerniLapilliGameTest #test13 stamp: 'IO 10/31/2020 18:23:09'!
ERROR!

!testRun: #TerniLapilliGameTest #test14 stamp: 'IO 10/31/2020 18:23:09'!
ERROR!

!testRun: #TerniLapilliGameTest #test15 stamp: 'IO 10/31/2020 18:23:09'!
ERROR!

!testRun: #TerniLapilliGameTest #test16 stamp: 'IO 10/31/2020 18:23:09'!
ERROR!

!testRun: #TerniLapilliGameTest #test17 stamp: 'IO 10/31/2020 18:23:09'!
PASSED!

!testRun: #TerniLapilliGameTest #test18 stamp: 'IO 10/31/2020 18:23:09'!
ERROR!

!testRun: #TerniLapilliGameTest #test01 stamp: 'IO 10/31/2020 18:24:17'!
ERROR!

!testRun: #TerniLapilliGameTest #test02 stamp: 'IO 10/31/2020 18:24:17'!
ERROR!

!testRun: #TerniLapilliGameTest #test03 stamp: 'IO 10/31/2020 18:24:17'!
ERROR!

!testRun: #TerniLapilliGameTest #test04 stamp: 'IO 10/31/2020 18:24:17'!
ERROR!

!testRun: #TerniLapilliGameTest #test05 stamp: 'IO 10/31/2020 18:24:17'!
ERROR!

!testRun: #TerniLapilliGameTest #test06 stamp: 'IO 10/31/2020 18:24:17'!
ERROR!

!testRun: #TerniLapilliGameTest #test07 stamp: 'IO 10/31/2020 18:24:17'!
ERROR!

!testRun: #TerniLapilliGameTest #test08 stamp: 'IO 10/31/2020 18:24:17'!
ERROR!

!testRun: #TerniLapilliGameTest #test09 stamp: 'IO 10/31/2020 18:24:17'!
ERROR!

!testRun: #TerniLapilliGameTest #test10 stamp: 'IO 10/31/2020 18:24:17'!
ERROR!

!testRun: #TerniLapilliGameTest #test11 stamp: 'IO 10/31/2020 18:24:17'!
ERROR!

!testRun: #TerniLapilliGameTest #test12 stamp: 'IO 10/31/2020 18:24:17'!
ERROR!

!testRun: #TerniLapilliGameTest #test13 stamp: 'IO 10/31/2020 18:24:17'!
ERROR!

!testRun: #TerniLapilliGameTest #test14 stamp: 'IO 10/31/2020 18:24:17'!
ERROR!

!testRun: #TerniLapilliGameTest #test15 stamp: 'IO 10/31/2020 18:24:17'!
ERROR!

!testRun: #TerniLapilliGameTest #test16 stamp: 'IO 10/31/2020 18:24:17'!
ERROR!

!testRun: #TerniLapilliGameTest #test17 stamp: 'IO 10/31/2020 18:24:17'!
PASSED!

!testRun: #TerniLapilliGameTest #test18 stamp: 'IO 10/31/2020 18:24:17'!
ERROR!
!TerniLapilliGameState methodsFor: 'as yet unclassified' stamp: 'IO 10/31/2020 18:25:51'!
xPutOn: aPosition
	^self subclassResponsibility.
! !
!TerniLapilliGameStatePlaysX methodsFor: 'as yet unclassified' stamp: 'IO 10/31/2020 18:25:51' overrides: 50873164!
xPutOn: aPosition
	xTokens add: aPosition.
	^TerniLapilliGameStatePlaysX withXTokens: xTokens oTokens: oTokens.! !
!TerniLapilliGameStatePlaysO methodsFor: 'as yet unclassified' stamp: 'IO 10/31/2020 18:25:51' overrides: 50873164!
xPutOn: aPosition
	self error: TerniLapilliGame wrongTurnErrorMessage.

! !

!methodRemoval: TerniLapilliGameState #xPutsOn: stamp: 'IO 10/31/2020 18:25:51'!
xPutsOn: aPosition
	^self subclassResponsibility.
!

!methodRemoval: TerniLapilliGameStatePlaysX #xPutsOn: stamp: 'IO 10/31/2020 18:25:51'!
xPutsOn: aPosition
	xTokens add: aPosition.
	^TerniLapilliGameStatePlaysX withXTokens: xTokens oTokens: oTokens.!

!methodRemoval: TerniLapilliGameStatePlaysO #xPutsOn: stamp: 'IO 10/31/2020 18:25:51'!
xPutsOn: aPosition
	self error: TerniLapilliGame wrongTurnErrorMessage.

!
!TerniLapilliGameStatePlaysX methodsFor: 'as yet unclassified' stamp: 'IO 10/31/2020 18:26:01'!
oPutOn: aPosition
	^self error: TerniLapilliGame wrongTurnErrorMessage.

! !
!TerniLapilliGameStatePlaysO methodsFor: 'as yet unclassified' stamp: 'IO 10/31/2020 18:26:01'!
oPutOn: aPosition
	oTokens add: aPosition.
	^TerniLapilliGameStatePlaysX withXTokens: xTokens oTokens: oTokens.

! !
!TerniLapilliGameState methodsFor: 'as yet unclassified' stamp: 'IO 10/31/2020 18:26:01'!
oPutOn: aPosition
	^self subclassResponsibility.
! !

!methodRemoval: TerniLapilliGameStatePlaysX #oPutsOn: stamp: 'IO 10/31/2020 18:26:01'!
oPutsOn: aPosition
	^self error: TerniLapilliGame wrongTurnErrorMessage.

!

!methodRemoval: TerniLapilliGameStatePlaysO #oPutsOn: stamp: 'IO 10/31/2020 18:26:01'!
oPutsOn: aPosition
	oTokens add: aPosition.
	^TerniLapilliGameStatePlaysX withXTokens: xTokens oTokens: oTokens.

!

!methodRemoval: TerniLapilliGameState #oPutsOn: stamp: 'IO 10/31/2020 18:26:01'!
oPutsOn: aPosition
	^self subclassResponsibility.
!

!testRun: #TerniLapilliGameTest #test01 stamp: 'IO 10/31/2020 18:26:07'!
PASSED!

!testRun: #TerniLapilliGameTest #test02 stamp: 'IO 10/31/2020 18:26:07'!
PASSED!

!testRun: #TerniLapilliGameTest #test03 stamp: 'IO 10/31/2020 18:26:07'!
PASSED!

!testRun: #TerniLapilliGameTest #test04 stamp: 'IO 10/31/2020 18:26:07'!
ERROR!

!testRun: #TerniLapilliGameTest #test05 stamp: 'IO 10/31/2020 18:26:07'!
ERROR!

!testRun: #TerniLapilliGameTest #test06 stamp: 'IO 10/31/2020 18:26:07'!
ERROR!

!testRun: #TerniLapilliGameTest #test07 stamp: 'IO 10/31/2020 18:26:07'!
ERROR!

!testRun: #TerniLapilliGameTest #test08 stamp: 'IO 10/31/2020 18:26:07'!
ERROR!

!testRun: #TerniLapilliGameTest #test09 stamp: 'IO 10/31/2020 18:26:07'!
ERROR!

!testRun: #TerniLapilliGameTest #test10 stamp: 'IO 10/31/2020 18:26:07'!
ERROR!

!testRun: #TerniLapilliGameTest #test11 stamp: 'IO 10/31/2020 18:26:07'!
ERROR!

!testRun: #TerniLapilliGameTest #test12 stamp: 'IO 10/31/2020 18:26:07'!
ERROR!

!testRun: #TerniLapilliGameTest #test13 stamp: 'IO 10/31/2020 18:26:07'!
ERROR!

!testRun: #TerniLapilliGameTest #test14 stamp: 'IO 10/31/2020 18:26:07'!
ERROR!

!testRun: #TerniLapilliGameTest #test15 stamp: 'IO 10/31/2020 18:26:07'!
ERROR!

!testRun: #TerniLapilliGameTest #test16 stamp: 'IO 10/31/2020 18:26:07'!
ERROR!

!testRun: #TerniLapilliGameTest #test17 stamp: 'IO 10/31/2020 18:26:07'!
FAILURE!

!testRun: #TerniLapilliGameTest #test18 stamp: 'IO 10/31/2020 18:26:07'!
FAILURE!

!testRun: #TerniLapilliGameTest #test04 stamp: 'IO 10/31/2020 18:26:19'!
ERROR!
!TerniLapilliGame methodsFor: 'moves' stamp: 'IO 10/31/2020 18:26:58' prior: 50872809!
xPutsOn: aPosition
	state := state xPutsOn: aPosition.
! !
!TerniLapilliGameState methodsFor: 'as yet unclassified' stamp: 'IO 10/31/2020 18:27:09'!
oPutsOn: aPosition
	^self subclassResponsibility.
! !
!TerniLapilliGameStatePlaysX methodsFor: 'as yet unclassified' stamp: 'IO 10/31/2020 18:27:09' overrides: 50873286!
oPutsOn: aPosition
	^self error: TerniLapilliGame wrongTurnErrorMessage.

! !
!TerniLapilliGameStatePlaysO methodsFor: 'as yet unclassified' stamp: 'IO 10/31/2020 18:27:09' overrides: 50873286!
oPutsOn: aPosition
	oTokens add: aPosition.
	^TerniLapilliGameStatePlaysX withXTokens: xTokens oTokens: oTokens.

! !

!methodRemoval: TerniLapilliGameState #oPutOn: stamp: 'IO 10/31/2020 18:27:09'!
oPutOn: aPosition
	^self subclassResponsibility.
!

!methodRemoval: TerniLapilliGameStatePlaysX #oPutOn: stamp: 'IO 10/31/2020 18:27:09'!
oPutOn: aPosition
	^self error: TerniLapilliGame wrongTurnErrorMessage.

!

!methodRemoval: TerniLapilliGameStatePlaysO #oPutOn: stamp: 'IO 10/31/2020 18:27:09'!
oPutOn: aPosition
	oTokens add: aPosition.
	^TerniLapilliGameStatePlaysX withXTokens: xTokens oTokens: oTokens.

!
!TerniLapilliGameStatePlaysX methodsFor: 'as yet unclassified' stamp: 'IO 10/31/2020 18:27:33'!
xPutsOn: aPosition
	xTokens add: aPosition.
	^TerniLapilliGameStatePlaysX withXTokens: xTokens oTokens: oTokens.! !
!TerniLapilliGameStatePlaysO methodsFor: 'as yet unclassified' stamp: 'IO 10/31/2020 18:27:33'!
xPutsOn: aPosition
	self error: TerniLapilliGame wrongTurnErrorMessage.

! !
!TerniLapilliGameState methodsFor: 'as yet unclassified' stamp: 'IO 10/31/2020 18:27:33'!
xPutsOn: aPosition
	^self subclassResponsibility.
! !

!methodRemoval: TerniLapilliGameStatePlaysX #xPutOn: stamp: 'IO 10/31/2020 18:27:33'!
xPutOn: aPosition
	xTokens add: aPosition.
	^TerniLapilliGameStatePlaysX withXTokens: xTokens oTokens: oTokens.!

!methodRemoval: TerniLapilliGameStatePlaysO #xPutOn: stamp: 'IO 10/31/2020 18:27:33'!
xPutOn: aPosition
	self error: TerniLapilliGame wrongTurnErrorMessage.

!

!methodRemoval: TerniLapilliGameState #xPutOn: stamp: 'IO 10/31/2020 18:27:33'!
xPutOn: aPosition
	^self subclassResponsibility.
!

!testRun: #TerniLapilliGameTest #test01 stamp: 'IO 10/31/2020 18:27:39'!
PASSED!

!testRun: #TerniLapilliGameTest #test02 stamp: 'IO 10/31/2020 18:27:39'!
PASSED!

!testRun: #TerniLapilliGameTest #test03 stamp: 'IO 10/31/2020 18:27:39'!
PASSED!

!testRun: #TerniLapilliGameTest #test04 stamp: 'IO 10/31/2020 18:27:39'!
ERROR!

!testRun: #TerniLapilliGameTest #test05 stamp: 'IO 10/31/2020 18:27:39'!
ERROR!

!testRun: #TerniLapilliGameTest #test06 stamp: 'IO 10/31/2020 18:27:39'!
ERROR!

!testRun: #TerniLapilliGameTest #test07 stamp: 'IO 10/31/2020 18:27:39'!
ERROR!

!testRun: #TerniLapilliGameTest #test08 stamp: 'IO 10/31/2020 18:27:39'!
ERROR!

!testRun: #TerniLapilliGameTest #test09 stamp: 'IO 10/31/2020 18:27:39'!
ERROR!

!testRun: #TerniLapilliGameTest #test10 stamp: 'IO 10/31/2020 18:27:39'!
ERROR!

!testRun: #TerniLapilliGameTest #test11 stamp: 'IO 10/31/2020 18:27:39'!
ERROR!

!testRun: #TerniLapilliGameTest #test12 stamp: 'IO 10/31/2020 18:27:39'!
ERROR!

!testRun: #TerniLapilliGameTest #test13 stamp: 'IO 10/31/2020 18:27:39'!
ERROR!

!testRun: #TerniLapilliGameTest #test14 stamp: 'IO 10/31/2020 18:27:39'!
ERROR!

!testRun: #TerniLapilliGameTest #test15 stamp: 'IO 10/31/2020 18:27:39'!
ERROR!

!testRun: #TerniLapilliGameTest #test16 stamp: 'IO 10/31/2020 18:27:39'!
ERROR!

!testRun: #TerniLapilliGameTest #test17 stamp: 'IO 10/31/2020 18:27:39'!
PASSED!

!testRun: #TerniLapilliGameTest #test18 stamp: 'IO 10/31/2020 18:27:39'!
FAILURE!
!TerniLapilliGameStatePlaysO methodsFor: 'as yet unclassified' stamp: 'IO 10/31/2020 18:28:10' prior: 50873046 overrides: 50873039!
oMoves: sourcePosition to: destinationPosition
	oTokens move: sourcePosition to: destinationPosition.
	^TerniLapilliGameStatePlaysX withXTokens: xTokens oTokens: oTokens.
! !
!TerniLapilliGameStatePlaysO methodsFor: 'as yet unclassified' stamp: 'IO 10/31/2020 18:28:18' prior: 50873056 overrides: 50872903!
xMoves: sourcePosition to: destinationPosition
	^TerniLapilliGameStatePlaysX withXTokens: xTokens oTokens: oTokens.
! !
!TerniLapilliGameStatePlaysX methodsFor: 'as yet unclassified' stamp: 'IO 10/31/2020 18:28:29' prior: 50873322 overrides: 50873335!
xPutsOn: aPosition
	xTokens add: aPosition.
	^TerniLapilliGameStatePlaysO withXTokens: xTokens oTokens: oTokens.! !

!testRun: #TerniLapilliGameTest #test01 stamp: 'IO 10/31/2020 18:29:18'!
PASSED!

!testRun: #TerniLapilliGameTest #test02 stamp: 'IO 10/31/2020 18:29:18'!
PASSED!

!testRun: #TerniLapilliGameTest #test03 stamp: 'IO 10/31/2020 18:29:18'!
PASSED!

!testRun: #TerniLapilliGameTest #test04 stamp: 'IO 10/31/2020 18:29:18'!
PASSED!

!testRun: #TerniLapilliGameTest #test05 stamp: 'IO 10/31/2020 18:29:18'!
ERROR!

!testRun: #TerniLapilliGameTest #test06 stamp: 'IO 10/31/2020 18:29:18'!
ERROR!

!testRun: #TerniLapilliGameTest #test07 stamp: 'IO 10/31/2020 18:29:18'!
ERROR!

!testRun: #TerniLapilliGameTest #test08 stamp: 'IO 10/31/2020 18:29:18'!
ERROR!

!testRun: #TerniLapilliGameTest #test09 stamp: 'IO 10/31/2020 18:29:18'!
ERROR!

!testRun: #TerniLapilliGameTest #test10 stamp: 'IO 10/31/2020 18:29:18'!
ERROR!

!testRun: #TerniLapilliGameTest #test11 stamp: 'IO 10/31/2020 18:29:18'!
ERROR!

!testRun: #TerniLapilliGameTest #test12 stamp: 'IO 10/31/2020 18:29:18'!
ERROR!

!testRun: #TerniLapilliGameTest #test13 stamp: 'IO 10/31/2020 18:29:18'!
ERROR!

!testRun: #TerniLapilliGameTest #test14 stamp: 'IO 10/31/2020 18:29:18'!
ERROR!

!testRun: #TerniLapilliGameTest #test15 stamp: 'IO 10/31/2020 18:29:18'!
ERROR!

!testRun: #TerniLapilliGameTest #test16 stamp: 'IO 10/31/2020 18:29:18'!
ERROR!

!testRun: #TerniLapilliGameTest #test17 stamp: 'IO 10/31/2020 18:29:18'!
PASSED!

!testRun: #TerniLapilliGameTest #test18 stamp: 'IO 10/31/2020 18:29:18'!
PASSED!

!testRun: #TerniLapilliGameTest #test05 stamp: 'IO 10/31/2020 18:29:46'!
ERROR!
!TerniLapilliGameStatePlaysX methodsFor: 'as yet unclassified' stamp: 'IO 10/31/2020 18:30:39' prior: 50872830 overrides: 16896425!
initialize
	xTokens := TerniLapilliPlayerTokens new.
	oTokens := TerniLapilliPlayerTokens new.
! !

!testRun: #TerniLapilliGameTest #test01 stamp: 'IO 10/31/2020 18:30:46'!
PASSED!

!testRun: #TerniLapilliGameTest #test02 stamp: 'IO 10/31/2020 18:30:46'!
PASSED!

!testRun: #TerniLapilliGameTest #test03 stamp: 'IO 10/31/2020 18:30:46'!
PASSED!

!testRun: #TerniLapilliGameTest #test04 stamp: 'IO 10/31/2020 18:30:46'!
PASSED!

!testRun: #TerniLapilliGameTest #test05 stamp: 'IO 10/31/2020 18:30:46'!
PASSED!

!testRun: #TerniLapilliGameTest #test06 stamp: 'IO 10/31/2020 18:30:46'!
PASSED!

!testRun: #TerniLapilliGameTest #test07 stamp: 'IO 10/31/2020 18:30:46'!
PASSED!

!testRun: #TerniLapilliGameTest #test08 stamp: 'IO 10/31/2020 18:30:46'!
PASSED!

!testRun: #TerniLapilliGameTest #test09 stamp: 'IO 10/31/2020 18:30:46'!
PASSED!

!testRun: #TerniLapilliGameTest #test10 stamp: 'IO 10/31/2020 18:30:46'!
PASSED!

!testRun: #TerniLapilliGameTest #test11 stamp: 'IO 10/31/2020 18:30:46'!
PASSED!

!testRun: #TerniLapilliGameTest #test12 stamp: 'IO 10/31/2020 18:30:46'!
PASSED!

!testRun: #TerniLapilliGameTest #test13 stamp: 'IO 10/31/2020 18:30:46'!
PASSED!

!testRun: #TerniLapilliGameTest #test14 stamp: 'IO 10/31/2020 18:30:46'!
PASSED!

!testRun: #TerniLapilliGameTest #test15 stamp: 'IO 10/31/2020 18:30:46'!
PASSED!

!testRun: #TerniLapilliGameTest #test16 stamp: 'IO 10/31/2020 18:30:46'!
PASSED!

!testRun: #TerniLapilliGameTest #test17 stamp: 'IO 10/31/2020 18:30:46'!
PASSED!

!testRun: #TerniLapilliGameTest #test18 stamp: 'IO 10/31/2020 18:30:46'!
PASSED!
!TerniLapilliGame methodsFor: 'moves' stamp: 'IO 10/31/2020 18:30:58' prior: 50872896!
oMoves: sourcePosition to: destinationPosition

	state := state oMoves: sourcePosition to: destinationPosition.

! !

!testRun: #TerniLapilliGameTest #test01 stamp: 'IO 10/31/2020 18:31:14'!
PASSED!

!testRun: #TerniLapilliGameTest #test02 stamp: 'IO 10/31/2020 18:31:14'!
PASSED!

!testRun: #TerniLapilliGameTest #test03 stamp: 'IO 10/31/2020 18:31:14'!
PASSED!

!testRun: #TerniLapilliGameTest #test04 stamp: 'IO 10/31/2020 18:31:14'!
PASSED!

!testRun: #TerniLapilliGameTest #test05 stamp: 'IO 10/31/2020 18:31:14'!
PASSED!

!testRun: #TerniLapilliGameTest #test06 stamp: 'IO 10/31/2020 18:31:14'!
PASSED!

!testRun: #TerniLapilliGameTest #test07 stamp: 'IO 10/31/2020 18:31:14'!
PASSED!

!testRun: #TerniLapilliGameTest #test08 stamp: 'IO 10/31/2020 18:31:14'!
PASSED!

!testRun: #TerniLapilliGameTest #test09 stamp: 'IO 10/31/2020 18:31:14'!
PASSED!

!testRun: #TerniLapilliGameTest #test10 stamp: 'IO 10/31/2020 18:31:14'!
PASSED!

!testRun: #TerniLapilliGameTest #test11 stamp: 'IO 10/31/2020 18:31:14'!
PASSED!

!testRun: #TerniLapilliGameTest #test12 stamp: 'IO 10/31/2020 18:31:14'!
PASSED!

!testRun: #TerniLapilliGameTest #test13 stamp: 'IO 10/31/2020 18:31:14'!
PASSED!

!testRun: #TerniLapilliGameTest #test14 stamp: 'IO 10/31/2020 18:31:15'!
PASSED!

!testRun: #TerniLapilliGameTest #test15 stamp: 'IO 10/31/2020 18:31:15'!
PASSED!

!testRun: #TerniLapilliGameTest #test16 stamp: 'IO 10/31/2020 18:31:15'!
PASSED!

!testRun: #TerniLapilliGameTest #test17 stamp: 'IO 10/31/2020 18:31:15'!
PASSED!

!testRun: #TerniLapilliGameTest #test18 stamp: 'IO 10/31/2020 18:31:15'!
PASSED!
!TerniLapilliGame methodsFor: 'moves' stamp: 'IO 10/31/2020 18:33:04' prior: 50873529!
oMoves: sourcePosition to: destinationPosition

	state := state oMoves: sourcePosition to: destinationPosition.
! !
!TerniLapilliGame methodsFor: 'moves' stamp: 'IO 10/31/2020 18:33:07' prior: 50873582!
oMoves: sourcePosition to: destinationPosition

	state := state oMoves: sourcePosition to: destinationPosition.
! !
!TerniLapilliGame methodsFor: 'moves' stamp: 'IO 10/31/2020 18:33:13' prior: 50872835!
oPutsOn: aPosition

	state := state oPutsOn: aPosition.

! !
!TerniLapilliGame methodsFor: 'moves' stamp: 'IO 10/31/2020 18:33:15' prior: 50873596!
oPutsOn: aPosition

	state := state oPutsOn: aPosition.
! !
!TerniLapilliGame methodsFor: 'moves' stamp: 'IO 10/31/2020 18:33:20' prior: 50872910!
xMoves: sourcePosition to: destinationPosition

	state := state xMoves: sourcePosition to: destinationPosition.



! !
!TerniLapilliGame methodsFor: 'moves' stamp: 'IO 10/31/2020 18:33:22' prior: 50873606!
xMoves: sourcePosition to: destinationPosition

	state := state xMoves: sourcePosition to: destinationPosition.

! !
!TerniLapilliGame methodsFor: 'moves' stamp: 'IO 10/31/2020 18:33:27' prior: 50873281!
xPutsOn: aPosition

	state := state xPutsOn: aPosition.
! !
!TerniLapilliGame methodsFor: 'moves' stamp: 'IO 10/31/2020 18:33:42' prior: 50873589!
oMoves: sourcePosition to: destinationPosition
	state := state oMoves: sourcePosition to: destinationPosition.
! !
!TerniLapilliGame methodsFor: 'moves' stamp: 'IO 10/31/2020 18:33:45' prior: 50873601!
oPutsOn: aPosition
	state := state oPutsOn: aPosition.
! !
!TerniLapilliGame methodsFor: 'moves' stamp: 'IO 10/31/2020 18:33:48' prior: 50873613!
xMoves: sourcePosition to: destinationPosition
	state := state xMoves: sourcePosition to: destinationPosition.

! !
!TerniLapilliGame methodsFor: 'moves' stamp: 'IO 10/31/2020 18:33:50' prior: 50873620!
xPutsOn: aPosition
	state := state xPutsOn: aPosition.
! !
!TerniLapilliGameTest methodsFor: 'as yet unclassified' stamp: 'IO 10/31/2020 18:51:25'!
test19
	"x no puede mover dos veces seguidas"
	| aGame |
	aGame := TerniLapilliGame new.
	
	aGame xPutsOn: 0@1.
	aGame oPutsOn: 0@2.
	aGame xPutsOn: 1@2.
	aGame oPutsOn: 2@1.
	aGame xPutsOn: 2@0.
	aGame oPutsOn: 2@2.
	
	aGame xMoves: (2@0) to: (1@0).

! !
!TerniLapilliGameTest methodsFor: 'as yet unclassified' stamp: 'IO 10/31/2020 18:51:51' prior: 50873649!
test19
	"x no puede mover dos veces seguidas"
	| aGame |
	aGame := TerniLapilliGame new.
	
	aGame xPutsOn: 0@1.
	aGame oPutsOn: 0@2.
	aGame xPutsOn: 1@2.
	aGame oPutsOn: 2@1.
	aGame xPutsOn: 2@0.
	aGame oPutsOn: 2@2.
	
	aGame xMoves: (2@0) to: (1@0).
	self should: [aGame xMoves: (2@0) to: (1@0).] raise: Error withMessageText: TerniLapilliGame wrongTurnErrorMessage.
! !

!testRun: #TerniLapilliGameTest #test19 stamp: 'IO 10/31/2020 18:52:29'!
FAILURE!
!TerniLapilliGameStatePlaysO methodsFor: 'moves' stamp: 'IO 10/31/2020 18:53:00' prior: 50873412 overrides: 50872903!
xMoves: sourcePosition to: destinationPosition
	self error: TerniLapilliGame wrongTurnErrorMessage.
! !

!testRun: #TerniLapilliGameTest #test08 stamp: 'IO 10/31/2020 18:53:06'!
PASSED!

!testRun: #TerniLapilliGameTest #test01 stamp: 'IO 10/31/2020 18:53:06'!
PASSED!

!testRun: #TerniLapilliGameTest #test02 stamp: 'IO 10/31/2020 18:53:06'!
PASSED!

!testRun: #TerniLapilliGameTest #test03 stamp: 'IO 10/31/2020 18:53:06'!
PASSED!

!testRun: #TerniLapilliGameTest #test04 stamp: 'IO 10/31/2020 18:53:06'!
PASSED!

!testRun: #TerniLapilliGameTest #test05 stamp: 'IO 10/31/2020 18:53:06'!
PASSED!

!testRun: #TerniLapilliGameTest #test06 stamp: 'IO 10/31/2020 18:53:06'!
PASSED!

!testRun: #TerniLapilliGameTest #test07 stamp: 'IO 10/31/2020 18:53:06'!
PASSED!

!testRun: #TerniLapilliGameTest #test08 stamp: 'IO 10/31/2020 18:53:06'!
PASSED!

!testRun: #TerniLapilliGameTest #test09 stamp: 'IO 10/31/2020 18:53:06'!
PASSED!

!testRun: #TerniLapilliGameTest #test10 stamp: 'IO 10/31/2020 18:53:06'!
PASSED!

!testRun: #TerniLapilliGameTest #test11 stamp: 'IO 10/31/2020 18:53:07'!
PASSED!

!testRun: #TerniLapilliGameTest #test12 stamp: 'IO 10/31/2020 18:53:07'!
PASSED!

!testRun: #TerniLapilliGameTest #test13 stamp: 'IO 10/31/2020 18:53:07'!
PASSED!

!testRun: #TerniLapilliGameTest #test14 stamp: 'IO 10/31/2020 18:53:07'!
PASSED!

!testRun: #TerniLapilliGameTest #test15 stamp: 'IO 10/31/2020 18:53:07'!
PASSED!

!testRun: #TerniLapilliGameTest #test16 stamp: 'IO 10/31/2020 18:53:07'!
PASSED!

!testRun: #TerniLapilliGameTest #test17 stamp: 'IO 10/31/2020 18:53:07'!
PASSED!

!testRun: #TerniLapilliGameTest #test18 stamp: 'IO 10/31/2020 18:53:07'!
PASSED!

!testRun: #TerniLapilliGameTest #test19 stamp: 'IO 10/31/2020 18:53:07'!
PASSED!
!TerniLapilliGameTest methodsFor: 'as yet unclassified' stamp: 'IO 10/31/2020 18:53:46'!
test20
	"o no puede mover dos veces seguidas"
	| aGame |
	aGame := TerniLapilliGame new.
	
	aGame xPutsOn: 0@1.
	aGame oPutsOn: 0@2.
	aGame xPutsOn: 1@2.
	aGame oPutsOn: 2@1.
	aGame xPutsOn: 2@0.
	aGame oPutsOn: 2@2.
	
	aGame xMoves: (2@0) to: (1@0).
	aGame oMoves: (2@1) to: (1@1).

	self assert: (aGame includesColorOAt: (1@1)).
! !
!TerniLapilliGameTest methodsFor: 'as yet unclassified' stamp: 'IO 10/31/2020 18:54:12' prior: 50873737!
test20
	"o no puede mover dos veces seguidas"
	| aGame |
	aGame := TerniLapilliGame new.
	
	aGame xPutsOn: 0@1.
	aGame oPutsOn: 0@2.
	aGame xPutsOn: 1@2.
	aGame oPutsOn: 2@1.
	aGame xPutsOn: 2@0.
	aGame oPutsOn: 2@2.
	
	aGame xMoves: (2@0) to: (1@0).
	aGame oMoves: (2@1) to: (1@1).

	self should: [aGame oMoves: (1@1) to: (2@1).] raise: Error withMessageText: TerniLapilliGame wrongTurnErrorMessage.
! !
!TerniLapilliGameTest methodsFor: 'as yet unclassified' stamp: 'IO 10/31/2020 18:54:21' prior: 50873661!
test19
	"x no puede mover dos veces seguidas"
	| aGame |
	aGame := TerniLapilliGame new.
	
	aGame xPutsOn: 0@1.
	aGame oPutsOn: 0@2.
	aGame xPutsOn: 1@2.
	aGame oPutsOn: 2@1.
	aGame xPutsOn: 2@0.
	aGame oPutsOn: 2@2.
	
	aGame xMoves: (2@0) to: (1@0).
	self should: [aGame xMoves: (1@0) to: (2@0).] raise: Error withMessageText: TerniLapilliGame wrongTurnErrorMessage.
! !

!testRun: #TerniLapilliGameTest #test20 stamp: 'IO 10/31/2020 18:54:26'!
FAILURE!
!TerniLapilliGameStatePlaysX methodsFor: 'moves' stamp: 'IO 10/31/2020 18:54:41' prior: 50872946 overrides: 50873039!
oMoves: sourcePosition to: destinationPosition
	^self error: TerniLapilliGame wrongTurnErrorMessage.
! !

!testRun: #TerniLapilliGameTest #test20 stamp: 'IO 10/31/2020 18:54:53'!
PASSED!

!testRun: #TerniLapilliGameTest #test01 stamp: 'IO 10/31/2020 18:54:53'!
PASSED!

!testRun: #TerniLapilliGameTest #test02 stamp: 'IO 10/31/2020 18:54:53'!
PASSED!

!testRun: #TerniLapilliGameTest #test03 stamp: 'IO 10/31/2020 18:54:53'!
PASSED!

!testRun: #TerniLapilliGameTest #test04 stamp: 'IO 10/31/2020 18:54:53'!
PASSED!

!testRun: #TerniLapilliGameTest #test05 stamp: 'IO 10/31/2020 18:54:53'!
PASSED!

!testRun: #TerniLapilliGameTest #test06 stamp: 'IO 10/31/2020 18:54:53'!
PASSED!

!testRun: #TerniLapilliGameTest #test07 stamp: 'IO 10/31/2020 18:54:53'!
PASSED!

!testRun: #TerniLapilliGameTest #test08 stamp: 'IO 10/31/2020 18:54:53'!
PASSED!

!testRun: #TerniLapilliGameTest #test09 stamp: 'IO 10/31/2020 18:54:53'!
PASSED!

!testRun: #TerniLapilliGameTest #test10 stamp: 'IO 10/31/2020 18:54:53'!
PASSED!

!testRun: #TerniLapilliGameTest #test11 stamp: 'IO 10/31/2020 18:54:53'!
PASSED!

!testRun: #TerniLapilliGameTest #test12 stamp: 'IO 10/31/2020 18:54:53'!
PASSED!

!testRun: #TerniLapilliGameTest #test13 stamp: 'IO 10/31/2020 18:54:53'!
PASSED!

!testRun: #TerniLapilliGameTest #test14 stamp: 'IO 10/31/2020 18:54:53'!
PASSED!

!testRun: #TerniLapilliGameTest #test15 stamp: 'IO 10/31/2020 18:54:53'!
PASSED!

!testRun: #TerniLapilliGameTest #test16 stamp: 'IO 10/31/2020 18:54:53'!
PASSED!

!testRun: #TerniLapilliGameTest #test17 stamp: 'IO 10/31/2020 18:54:53'!
PASSED!

!testRun: #TerniLapilliGameTest #test18 stamp: 'IO 10/31/2020 18:54:53'!
PASSED!

!testRun: #TerniLapilliGameTest #test19 stamp: 'IO 10/31/2020 18:54:53'!
PASSED!

!testRun: #TerniLapilliGameTest #test20 stamp: 'IO 10/31/2020 18:54:53'!
PASSED!
!TerniLapilliGameStatePlaysO methodsFor: 'moves' stamp: 'IO 10/31/2020 18:55:26'!
ileaglTurn
	self error: TerniLapilliGame wrongTurnErrorMessage.
! !
!TerniLapilliGameStatePlaysO methodsFor: 'moves' stamp: 'IO 10/31/2020 18:55:29'!
ilegalTurn
	self error: TerniLapilliGame wrongTurnErrorMessage.
! !

!methodRemoval: TerniLapilliGameStatePlaysO #ileaglTurn stamp: 'IO 10/31/2020 18:55:31'!
ileaglTurn
	self error: TerniLapilliGame wrongTurnErrorMessage.
!

!methodRemoval: TerniLapilliGameStatePlaysO #ilegalTurn stamp: 'IO 10/31/2020 18:55:40'!
ilegalTurn
	self error: TerniLapilliGame wrongTurnErrorMessage.
!
!TerniLapilliGameState methodsFor: 'nil' stamp: 'IO 10/31/2020 18:56:19'!
ilegalMove
	self error: TerniLapilliGame wrongTurnErrorMessage.
! !
!TerniLapilliGameState methodsFor: 'as yet unclassified' stamp: 'IO 10/31/2020 18:56:43'!
errorIlegalMove
	self error: TerniLapilliGame wrongTurnErrorMessage.
! !

!methodRemoval: TerniLapilliGameState #ilegalMove stamp: 'IO 10/31/2020 18:56:43'!
ilegalMove
	self error: TerniLapilliGame wrongTurnErrorMessage.
!
!TerniLapilliGameStatePlaysO methodsFor: 'moves' stamp: 'IO 10/31/2020 18:57:14' prior: 50873679 overrides: 50872903!
xMoves: sourcePosition to: destinationPosition
	self errorIlegalMove.

! !
!TerniLapilliGameStatePlaysO methodsFor: 'moves' stamp: 'IO 10/31/2020 18:57:19' prior: 50873329 overrides: 50873335!
xPutsOn: aPosition
	self errorIlegalMove.

! !
!TerniLapilliGameStatePlaysX methodsFor: 'moves' stamp: 'IO 10/31/2020 18:57:28' prior: 50873785 overrides: 50873039!
oMoves: sourcePosition to: destinationPosition
	self errorIlegalMove.
! !
!TerniLapilliGameStatePlaysX methodsFor: 'moves' stamp: 'IO 10/31/2020 18:57:31' prior: 50873292 overrides: 50873286!
oPutsOn: aPosition
	self errorIlegalMove.

! !

!testRun: #TerniLapilliGameTest #test20 stamp: 'IO 10/31/2020 18:57:38'!
PASSED!

!testRun: #TerniLapilliGameTest #test01 stamp: 'IO 10/31/2020 18:57:38'!
PASSED!

!testRun: #TerniLapilliGameTest #test02 stamp: 'IO 10/31/2020 18:57:38'!
PASSED!

!testRun: #TerniLapilliGameTest #test03 stamp: 'IO 10/31/2020 18:57:38'!
PASSED!

!testRun: #TerniLapilliGameTest #test04 stamp: 'IO 10/31/2020 18:57:38'!
PASSED!

!testRun: #TerniLapilliGameTest #test05 stamp: 'IO 10/31/2020 18:57:38'!
PASSED!

!testRun: #TerniLapilliGameTest #test06 stamp: 'IO 10/31/2020 18:57:38'!
PASSED!

!testRun: #TerniLapilliGameTest #test07 stamp: 'IO 10/31/2020 18:57:38'!
PASSED!

!testRun: #TerniLapilliGameTest #test08 stamp: 'IO 10/31/2020 18:57:38'!
PASSED!

!testRun: #TerniLapilliGameTest #test09 stamp: 'IO 10/31/2020 18:57:38'!
PASSED!

!testRun: #TerniLapilliGameTest #test10 stamp: 'IO 10/31/2020 18:57:38'!
PASSED!

!testRun: #TerniLapilliGameTest #test11 stamp: 'IO 10/31/2020 18:57:38'!
PASSED!

!testRun: #TerniLapilliGameTest #test12 stamp: 'IO 10/31/2020 18:57:38'!
PASSED!

!testRun: #TerniLapilliGameTest #test13 stamp: 'IO 10/31/2020 18:57:38'!
PASSED!

!testRun: #TerniLapilliGameTest #test14 stamp: 'IO 10/31/2020 18:57:38'!
PASSED!

!testRun: #TerniLapilliGameTest #test15 stamp: 'IO 10/31/2020 18:57:38'!
PASSED!

!testRun: #TerniLapilliGameTest #test16 stamp: 'IO 10/31/2020 18:57:38'!
PASSED!

!testRun: #TerniLapilliGameTest #test17 stamp: 'IO 10/31/2020 18:57:38'!
PASSED!

!testRun: #TerniLapilliGameTest #test18 stamp: 'IO 10/31/2020 18:57:38'!
PASSED!

!testRun: #TerniLapilliGameTest #test19 stamp: 'IO 10/31/2020 18:57:38'!
PASSED!

!testRun: #TerniLapilliGameTest #test20 stamp: 'IO 10/31/2020 18:57:38'!
PASSED!
!TerniLapilliGameState methodsFor: 'nil' stamp: 'IO 10/31/2020 19:01:46'!
passTurn
	^self subclassResponsibility.! !
!TerniLapilliGameStatePlaysO methodsFor: 'moves' stamp: 'IO 10/31/2020 19:02:15' overrides: 50873958!
passTurn
	^TerniLapilliGameStatePlaysX withXTokens: xTokens oTokens: oTokens.

! !
!TerniLapilliGameStatePlaysO methodsFor: 'moves' stamp: 'IO 10/31/2020 19:02:26' prior: 50873299 overrides: 50873286!
oPutsOn: aPosition
	oTokens add: aPosition.
	^self passTurn.

! !
!TerniLapilliGameStatePlaysO methodsFor: 'moves' stamp: 'IO 10/31/2020 19:02:36' prior: 50873402 overrides: 50873039!
oMoves: sourcePosition to: destinationPosition
	oTokens move: sourcePosition to: destinationPosition.
	^self passTurn.

! !

!testRun: #TerniLapilliGameTest #test01 stamp: 'IO 10/31/2020 19:02:41'!
PASSED!

!testRun: #TerniLapilliGameTest #test02 stamp: 'IO 10/31/2020 19:02:41'!
PASSED!

!testRun: #TerniLapilliGameTest #test03 stamp: 'IO 10/31/2020 19:02:41'!
PASSED!

!testRun: #TerniLapilliGameTest #test04 stamp: 'IO 10/31/2020 19:02:41'!
PASSED!

!testRun: #TerniLapilliGameTest #test05 stamp: 'IO 10/31/2020 19:02:41'!
PASSED!

!testRun: #TerniLapilliGameTest #test06 stamp: 'IO 10/31/2020 19:02:41'!
PASSED!

!testRun: #TerniLapilliGameTest #test07 stamp: 'IO 10/31/2020 19:02:41'!
PASSED!

!testRun: #TerniLapilliGameTest #test08 stamp: 'IO 10/31/2020 19:02:41'!
PASSED!

!testRun: #TerniLapilliGameTest #test09 stamp: 'IO 10/31/2020 19:02:41'!
PASSED!

!testRun: #TerniLapilliGameTest #test10 stamp: 'IO 10/31/2020 19:02:41'!
PASSED!

!testRun: #TerniLapilliGameTest #test11 stamp: 'IO 10/31/2020 19:02:41'!
PASSED!

!testRun: #TerniLapilliGameTest #test12 stamp: 'IO 10/31/2020 19:02:41'!
PASSED!

!testRun: #TerniLapilliGameTest #test13 stamp: 'IO 10/31/2020 19:02:41'!
PASSED!

!testRun: #TerniLapilliGameTest #test14 stamp: 'IO 10/31/2020 19:02:41'!
PASSED!

!testRun: #TerniLapilliGameTest #test15 stamp: 'IO 10/31/2020 19:02:41'!
PASSED!

!testRun: #TerniLapilliGameTest #test16 stamp: 'IO 10/31/2020 19:02:41'!
PASSED!

!testRun: #TerniLapilliGameTest #test17 stamp: 'IO 10/31/2020 19:02:41'!
PASSED!

!testRun: #TerniLapilliGameTest #test18 stamp: 'IO 10/31/2020 19:02:41'!
PASSED!

!testRun: #TerniLapilliGameTest #test19 stamp: 'IO 10/31/2020 19:02:41'!
PASSED!

!testRun: #TerniLapilliGameTest #test20 stamp: 'IO 10/31/2020 19:02:41'!
PASSED!
!TerniLapilliGameStatePlaysX methodsFor: 'moves' stamp: 'IO 10/31/2020 19:02:56' overrides: 50873958!
passTurn
	^TerniLapilliGameStatePlaysO withXTokens: xTokens oTokens: oTokens.
! !
!TerniLapilliGameStatePlaysX methodsFor: 'moves' stamp: 'IO 10/31/2020 19:03:04' prior: 50873064 overrides: 50872903!
xMoves: sourcePosition to: destinationPosition
	xTokens move: sourcePosition to: destinationPosition.
	^self passTurn.

! !
!TerniLapilliGameStatePlaysX methodsFor: 'moves' stamp: 'IO 10/31/2020 19:03:12' prior: 50873420 overrides: 50873335!
xPutsOn: aPosition
	xTokens add: aPosition.
	^self passTurn.
! !

!testRun: #TerniLapilliGameTest #test01 stamp: 'IO 10/31/2020 19:03:15'!
PASSED!

!testRun: #TerniLapilliGameTest #test02 stamp: 'IO 10/31/2020 19:03:15'!
PASSED!

!testRun: #TerniLapilliGameTest #test03 stamp: 'IO 10/31/2020 19:03:15'!
PASSED!

!testRun: #TerniLapilliGameTest #test04 stamp: 'IO 10/31/2020 19:03:15'!
PASSED!

!testRun: #TerniLapilliGameTest #test05 stamp: 'IO 10/31/2020 19:03:15'!
PASSED!

!testRun: #TerniLapilliGameTest #test06 stamp: 'IO 10/31/2020 19:03:15'!
PASSED!

!testRun: #TerniLapilliGameTest #test07 stamp: 'IO 10/31/2020 19:03:15'!
PASSED!

!testRun: #TerniLapilliGameTest #test08 stamp: 'IO 10/31/2020 19:03:15'!
PASSED!

!testRun: #TerniLapilliGameTest #test09 stamp: 'IO 10/31/2020 19:03:15'!
PASSED!

!testRun: #TerniLapilliGameTest #test10 stamp: 'IO 10/31/2020 19:03:15'!
PASSED!

!testRun: #TerniLapilliGameTest #test11 stamp: 'IO 10/31/2020 19:03:15'!
PASSED!

!testRun: #TerniLapilliGameTest #test12 stamp: 'IO 10/31/2020 19:03:15'!
PASSED!

!testRun: #TerniLapilliGameTest #test13 stamp: 'IO 10/31/2020 19:03:15'!
PASSED!

!testRun: #TerniLapilliGameTest #test14 stamp: 'IO 10/31/2020 19:03:15'!
PASSED!

!testRun: #TerniLapilliGameTest #test15 stamp: 'IO 10/31/2020 19:03:15'!
PASSED!

!testRun: #TerniLapilliGameTest #test16 stamp: 'IO 10/31/2020 19:03:15'!
PASSED!

!testRun: #TerniLapilliGameTest #test17 stamp: 'IO 10/31/2020 19:03:16'!
PASSED!

!testRun: #TerniLapilliGameTest #test18 stamp: 'IO 10/31/2020 19:03:16'!
PASSED!

!testRun: #TerniLapilliGameTest #test19 stamp: 'IO 10/31/2020 19:03:16'!
PASSED!

!testRun: #TerniLapilliGameTest #test20 stamp: 'IO 10/31/2020 19:03:16'!
PASSED!
!TerniLapilliGameTest methodsFor: 'move tokens phase' stamp: 'IO 10/31/2020 19:10:22'!
createNotFinishedGame
	"revisar este metodo al usuarlo para usarlo correctamente en los tests ;)"
	| aGame |
	aGame := TerniLapilliGame new.
	
	aGame xPutsOn: 0@1.
	aGame oPutsOn: 0@2.
	aGame xPutsOn: 1@2.
	aGame oPutsOn: 2@1.
	aGame xPutsOn: 2@0.
	aGame oPutsOn: 2@2.
	
	^aGame
! !

!testRun: #TerniLapilliGameTest #test05 stamp: 'IO 10/31/2020 19:11:03'!
PASSED!

!testRun: #TerniLapilliGameTest #test01 stamp: 'IO 10/31/2020 19:11:03'!
PASSED!

!testRun: #TerniLapilliGameTest #test02 stamp: 'IO 10/31/2020 19:11:03'!
PASSED!

!testRun: #TerniLapilliGameTest #test03 stamp: 'IO 10/31/2020 19:11:03'!
PASSED!

!testRun: #TerniLapilliGameTest #test04 stamp: 'IO 10/31/2020 19:11:03'!
PASSED!

!testRun: #TerniLapilliGameTest #test05 stamp: 'IO 10/31/2020 19:11:03'!
PASSED!

!testRun: #TerniLapilliGameTest #test06 stamp: 'IO 10/31/2020 19:11:03'!
PASSED!

!testRun: #TerniLapilliGameTest #test07 stamp: 'IO 10/31/2020 19:11:03'!
PASSED!

!testRun: #TerniLapilliGameTest #test08 stamp: 'IO 10/31/2020 19:11:03'!
PASSED!

!testRun: #TerniLapilliGameTest #test09 stamp: 'IO 10/31/2020 19:11:03'!
PASSED!

!testRun: #TerniLapilliGameTest #test10 stamp: 'IO 10/31/2020 19:11:03'!
PASSED!

!testRun: #TerniLapilliGameTest #test11 stamp: 'IO 10/31/2020 19:11:03'!
PASSED!

!testRun: #TerniLapilliGameTest #test12 stamp: 'IO 10/31/2020 19:11:03'!
PASSED!

!testRun: #TerniLapilliGameTest #test13 stamp: 'IO 10/31/2020 19:11:03'!
PASSED!

!testRun: #TerniLapilliGameTest #test14 stamp: 'IO 10/31/2020 19:11:03'!
PASSED!

!testRun: #TerniLapilliGameTest #test15 stamp: 'IO 10/31/2020 19:11:03'!
PASSED!

!testRun: #TerniLapilliGameTest #test16 stamp: 'IO 10/31/2020 19:11:03'!
PASSED!

!testRun: #TerniLapilliGameTest #test17 stamp: 'IO 10/31/2020 19:11:03'!
PASSED!

!testRun: #TerniLapilliGameTest #test18 stamp: 'IO 10/31/2020 19:11:03'!
PASSED!

!testRun: #TerniLapilliGameTest #test19 stamp: 'IO 10/31/2020 19:11:03'!
PASSED!

!testRun: #TerniLapilliGameTest #test20 stamp: 'IO 10/31/2020 19:11:03'!
PASSED!
!TerniLapilliGameTest methodsFor: 'move tokens phase' stamp: 'IO 10/31/2020 19:11:11' prior: 50869357!
test05
	"movimiento legal desp de haber jugado las tres fichas :D"
	| aGame |
	aGame := self createNotFinishedGame.
	
	aGame xMoves: (2@0) to: (1@0).

	self assert: (aGame includesColorXAt: (1@0)).
! !

!testRun: #TerniLapilliGameTest #test05 stamp: 'IO 10/31/2020 19:11:11'!
PASSED!

!testRun: #TerniLapilliGameTest #test01 stamp: 'IO 10/31/2020 19:11:11'!
PASSED!

!testRun: #TerniLapilliGameTest #test02 stamp: 'IO 10/31/2020 19:11:11'!
PASSED!

!testRun: #TerniLapilliGameTest #test03 stamp: 'IO 10/31/2020 19:11:11'!
PASSED!

!testRun: #TerniLapilliGameTest #test04 stamp: 'IO 10/31/2020 19:11:11'!
PASSED!

!testRun: #TerniLapilliGameTest #test05 stamp: 'IO 10/31/2020 19:11:11'!
PASSED!

!testRun: #TerniLapilliGameTest #test06 stamp: 'IO 10/31/2020 19:11:11'!
PASSED!

!testRun: #TerniLapilliGameTest #test07 stamp: 'IO 10/31/2020 19:11:11'!
PASSED!

!testRun: #TerniLapilliGameTest #test08 stamp: 'IO 10/31/2020 19:11:11'!
PASSED!

!testRun: #TerniLapilliGameTest #test09 stamp: 'IO 10/31/2020 19:11:11'!
PASSED!

!testRun: #TerniLapilliGameTest #test10 stamp: 'IO 10/31/2020 19:11:11'!
PASSED!

!testRun: #TerniLapilliGameTest #test11 stamp: 'IO 10/31/2020 19:11:11'!
PASSED!

!testRun: #TerniLapilliGameTest #test12 stamp: 'IO 10/31/2020 19:11:11'!
PASSED!

!testRun: #TerniLapilliGameTest #test13 stamp: 'IO 10/31/2020 19:11:11'!
PASSED!

!testRun: #TerniLapilliGameTest #test14 stamp: 'IO 10/31/2020 19:11:11'!
PASSED!

!testRun: #TerniLapilliGameTest #test15 stamp: 'IO 10/31/2020 19:11:11'!
PASSED!

!testRun: #TerniLapilliGameTest #test16 stamp: 'IO 10/31/2020 19:11:11'!
PASSED!

!testRun: #TerniLapilliGameTest #test17 stamp: 'IO 10/31/2020 19:11:11'!
PASSED!

!testRun: #TerniLapilliGameTest #test18 stamp: 'IO 10/31/2020 19:11:11'!
PASSED!

!testRun: #TerniLapilliGameTest #test19 stamp: 'IO 10/31/2020 19:11:11'!
PASSED!

!testRun: #TerniLapilliGameTest #test20 stamp: 'IO 10/31/2020 19:11:11'!
PASSED!
!TerniLapilliGameTest methodsFor: 'utilities' stamp: 'IO 10/31/2020 19:12:19'!
createGameInMovePhase
	"revisar este metodo al usuarlo para usarlo correctamente en los tests ;)"
	| aGame |
	aGame := TerniLapilliGame new.
	
	aGame xPutsOn: 0@1.
	aGame oPutsOn: 0@2.
	aGame xPutsOn: 1@2.
	aGame oPutsOn: 2@1.
	aGame xPutsOn: 2@0.
	aGame oPutsOn: 2@2.
	
	^aGame
! !
!TerniLapilliGameTest methodsFor: 'as yet unclassified' stamp: 'IO 10/31/2020 19:12:19' prior: 50874172!
test05
	"movimiento legal desp de haber jugado las tres fichas :D"
	| aGame |
	aGame := self createGameInMovePhase.
	
	aGame xMoves: (2@0) to: (1@0).

	self assert: (aGame includesColorXAt: (1@0)).
! !

!methodRemoval: TerniLapilliGameTest #createNotFinishedGame stamp: 'IO 10/31/2020 19:12:19'!
createNotFinishedGame
	"revisar este metodo al usuarlo para usarlo correctamente en los tests ;)"
	| aGame |
	aGame := TerniLapilliGame new.
	
	aGame xPutsOn: 0@1.
	aGame oPutsOn: 0@2.
	aGame xPutsOn: 1@2.
	aGame oPutsOn: 2@1.
	aGame xPutsOn: 2@0.
	aGame oPutsOn: 2@2.
	
	^aGame
!

!testRun: #TerniLapilliGameTest #test01 stamp: 'IO 10/31/2020 19:12:22'!
PASSED!

!testRun: #TerniLapilliGameTest #test02 stamp: 'IO 10/31/2020 19:12:22'!
PASSED!

!testRun: #TerniLapilliGameTest #test03 stamp: 'IO 10/31/2020 19:12:22'!
PASSED!

!testRun: #TerniLapilliGameTest #test04 stamp: 'IO 10/31/2020 19:12:22'!
PASSED!

!testRun: #TerniLapilliGameTest #test05 stamp: 'IO 10/31/2020 19:12:22'!
PASSED!

!testRun: #TerniLapilliGameTest #test06 stamp: 'IO 10/31/2020 19:12:22'!
PASSED!

!testRun: #TerniLapilliGameTest #test07 stamp: 'IO 10/31/2020 19:12:22'!
PASSED!

!testRun: #TerniLapilliGameTest #test08 stamp: 'IO 10/31/2020 19:12:22'!
PASSED!

!testRun: #TerniLapilliGameTest #test09 stamp: 'IO 10/31/2020 19:12:22'!
PASSED!

!testRun: #TerniLapilliGameTest #test10 stamp: 'IO 10/31/2020 19:12:22'!
PASSED!

!testRun: #TerniLapilliGameTest #test11 stamp: 'IO 10/31/2020 19:12:22'!
PASSED!

!testRun: #TerniLapilliGameTest #test12 stamp: 'IO 10/31/2020 19:12:22'!
PASSED!

!testRun: #TerniLapilliGameTest #test13 stamp: 'IO 10/31/2020 19:12:22'!
PASSED!

!testRun: #TerniLapilliGameTest #test14 stamp: 'IO 10/31/2020 19:12:22'!
PASSED!

!testRun: #TerniLapilliGameTest #test15 stamp: 'IO 10/31/2020 19:12:22'!
PASSED!

!testRun: #TerniLapilliGameTest #test16 stamp: 'IO 10/31/2020 19:12:22'!
PASSED!

!testRun: #TerniLapilliGameTest #test17 stamp: 'IO 10/31/2020 19:12:22'!
PASSED!

!testRun: #TerniLapilliGameTest #test18 stamp: 'IO 10/31/2020 19:12:22'!
PASSED!

!testRun: #TerniLapilliGameTest #test19 stamp: 'IO 10/31/2020 19:12:22'!
PASSED!

!testRun: #TerniLapilliGameTest #test20 stamp: 'IO 10/31/2020 19:12:22'!
PASSED!
!TerniLapilliGameTest methodsFor: 'move tokens phase' stamp: 'IO 10/31/2020 19:12:37' prior: 50869400!
test06
	"movimiento legal de O desp de haber jugado las tres fichas :D"
	| aGame |
	aGame := self createGameInMovePhase.
	
	aGame xMoves: (2@0) to: (1@0).
	aGame oMoves: (2@1) to: (1@1).

	self assert: (aGame includesColorOAt: (1@1)).
! !

!testRun: #TerniLapilliGameTest #test06 stamp: 'IO 10/31/2020 19:12:40'!
PASSED!

!testRun: #TerniLapilliGameTest #test01 stamp: 'IO 10/31/2020 19:12:40'!
PASSED!

!testRun: #TerniLapilliGameTest #test02 stamp: 'IO 10/31/2020 19:12:40'!
PASSED!

!testRun: #TerniLapilliGameTest #test03 stamp: 'IO 10/31/2020 19:12:40'!
PASSED!

!testRun: #TerniLapilliGameTest #test04 stamp: 'IO 10/31/2020 19:12:40'!
PASSED!

!testRun: #TerniLapilliGameTest #test05 stamp: 'IO 10/31/2020 19:12:40'!
PASSED!

!testRun: #TerniLapilliGameTest #test06 stamp: 'IO 10/31/2020 19:12:40'!
PASSED!

!testRun: #TerniLapilliGameTest #test07 stamp: 'IO 10/31/2020 19:12:40'!
PASSED!

!testRun: #TerniLapilliGameTest #test08 stamp: 'IO 10/31/2020 19:12:40'!
PASSED!

!testRun: #TerniLapilliGameTest #test09 stamp: 'IO 10/31/2020 19:12:40'!
PASSED!

!testRun: #TerniLapilliGameTest #test10 stamp: 'IO 10/31/2020 19:12:40'!
PASSED!

!testRun: #TerniLapilliGameTest #test11 stamp: 'IO 10/31/2020 19:12:40'!
PASSED!

!testRun: #TerniLapilliGameTest #test12 stamp: 'IO 10/31/2020 19:12:40'!
PASSED!

!testRun: #TerniLapilliGameTest #test13 stamp: 'IO 10/31/2020 19:12:40'!
PASSED!

!testRun: #TerniLapilliGameTest #test14 stamp: 'IO 10/31/2020 19:12:40'!
PASSED!

!testRun: #TerniLapilliGameTest #test15 stamp: 'IO 10/31/2020 19:12:40'!
PASSED!

!testRun: #TerniLapilliGameTest #test16 stamp: 'IO 10/31/2020 19:12:40'!
PASSED!

!testRun: #TerniLapilliGameTest #test17 stamp: 'IO 10/31/2020 19:12:40'!
PASSED!

!testRun: #TerniLapilliGameTest #test18 stamp: 'IO 10/31/2020 19:12:40'!
PASSED!

!testRun: #TerniLapilliGameTest #test19 stamp: 'IO 10/31/2020 19:12:40'!
PASSED!

!testRun: #TerniLapilliGameTest #test20 stamp: 'IO 10/31/2020 19:12:40'!
PASSED!
!TerniLapilliGameTest methodsFor: 'ilegal turns' stamp: 'IO 10/31/2020 19:12:55' prior: 50873767!
test19
	"x no puede mover dos veces seguidas"
	| aGame |
	aGame := self createGameInMovePhase.
	
	aGame xMoves: (2@0) to: (1@0).
	self should: [aGame xMoves: (1@0) to: (2@0).] raise: Error withMessageText: TerniLapilliGame wrongTurnErrorMessage.
! !
!TerniLapilliGameTest methodsFor: 'ilegal turns' stamp: 'IO 10/31/2020 19:13:04' prior: 50873751!
test20
	"o no puede mover dos veces seguidas"
	| aGame |
	aGame := self createGameInMovePhase.
	
	aGame xMoves: (2@0) to: (1@0).
	aGame oMoves: (2@1) to: (1@1).

	self should: [aGame oMoves: (1@1) to: (2@1).] raise: Error withMessageText: TerniLapilliGame wrongTurnErrorMessage.
! !

!testRun: #TerniLapilliGameTest #test20 stamp: 'IO 10/31/2020 19:13:05'!
PASSED!

!testRun: #TerniLapilliGameTest #test01 stamp: 'IO 10/31/2020 19:13:05'!
PASSED!

!testRun: #TerniLapilliGameTest #test02 stamp: 'IO 10/31/2020 19:13:05'!
PASSED!

!testRun: #TerniLapilliGameTest #test03 stamp: 'IO 10/31/2020 19:13:05'!
PASSED!

!testRun: #TerniLapilliGameTest #test04 stamp: 'IO 10/31/2020 19:13:05'!
PASSED!

!testRun: #TerniLapilliGameTest #test05 stamp: 'IO 10/31/2020 19:13:05'!
PASSED!

!testRun: #TerniLapilliGameTest #test06 stamp: 'IO 10/31/2020 19:13:05'!
PASSED!

!testRun: #TerniLapilliGameTest #test07 stamp: 'IO 10/31/2020 19:13:05'!
PASSED!

!testRun: #TerniLapilliGameTest #test08 stamp: 'IO 10/31/2020 19:13:05'!
PASSED!

!testRun: #TerniLapilliGameTest #test09 stamp: 'IO 10/31/2020 19:13:05'!
PASSED!

!testRun: #TerniLapilliGameTest #test10 stamp: 'IO 10/31/2020 19:13:05'!
PASSED!

!testRun: #TerniLapilliGameTest #test11 stamp: 'IO 10/31/2020 19:13:05'!
PASSED!

!testRun: #TerniLapilliGameTest #test12 stamp: 'IO 10/31/2020 19:13:05'!
PASSED!

!testRun: #TerniLapilliGameTest #test13 stamp: 'IO 10/31/2020 19:13:05'!
PASSED!

!testRun: #TerniLapilliGameTest #test14 stamp: 'IO 10/31/2020 19:13:05'!
PASSED!

!testRun: #TerniLapilliGameTest #test15 stamp: 'IO 10/31/2020 19:13:05'!
PASSED!

!testRun: #TerniLapilliGameTest #test16 stamp: 'IO 10/31/2020 19:13:05'!
PASSED!

!testRun: #TerniLapilliGameTest #test17 stamp: 'IO 10/31/2020 19:13:05'!
PASSED!

!testRun: #TerniLapilliGameTest #test18 stamp: 'IO 10/31/2020 19:13:05'!
PASSED!

!testRun: #TerniLapilliGameTest #test19 stamp: 'IO 10/31/2020 19:13:05'!
PASSED!

!testRun: #TerniLapilliGameTest #test20 stamp: 'IO 10/31/2020 19:13:05'!
PASSED!
!TerniLapilliGameTest methodsFor: 'put tokens phase' stamp: 'IO 10/31/2020 19:15:03'!
test21
	"x no puede mover antes de poner las tres fichas"
	| aGame |
	aGame := TerniLapilliGame new.
	
	aGame xPutsOn: 0@0.

! !
!TerniLapilliGameTest methodsFor: 'ilegal moves' stamp: 'IO 10/31/2020 19:16:08' prior: 50874463!
test21
	"x no puede mover antes de poner las tres fichas"
	| aGame |
	aGame := TerniLapilliGame new.
	
	aGame xPutsOn: 0@0.
	aGame oPutsOn: 0@1.

	self should: [aGame oMoves: (0@0) to: (1@0).] raise: Error withMessageText: TerniLapilliGame wrongTurnErrorMessage.

! !

!testRun: #TerniLapilliGameTest #test21 stamp: 'IO 10/31/2020 19:16:16'!
PASSED!

!testRun: #TerniLapilliGameTest #test01 stamp: 'IO 10/31/2020 19:16:16'!
PASSED!

!testRun: #TerniLapilliGameTest #test02 stamp: 'IO 10/31/2020 19:16:16'!
PASSED!

!testRun: #TerniLapilliGameTest #test03 stamp: 'IO 10/31/2020 19:16:16'!
PASSED!

!testRun: #TerniLapilliGameTest #test04 stamp: 'IO 10/31/2020 19:16:16'!
PASSED!

!testRun: #TerniLapilliGameTest #test05 stamp: 'IO 10/31/2020 19:16:16'!
PASSED!

!testRun: #TerniLapilliGameTest #test06 stamp: 'IO 10/31/2020 19:16:16'!
PASSED!

!testRun: #TerniLapilliGameTest #test07 stamp: 'IO 10/31/2020 19:16:16'!
PASSED!

!testRun: #TerniLapilliGameTest #test08 stamp: 'IO 10/31/2020 19:16:16'!
PASSED!

!testRun: #TerniLapilliGameTest #test09 stamp: 'IO 10/31/2020 19:16:16'!
PASSED!

!testRun: #TerniLapilliGameTest #test10 stamp: 'IO 10/31/2020 19:16:16'!
PASSED!

!testRun: #TerniLapilliGameTest #test11 stamp: 'IO 10/31/2020 19:16:16'!
PASSED!

!testRun: #TerniLapilliGameTest #test12 stamp: 'IO 10/31/2020 19:16:16'!
PASSED!

!testRun: #TerniLapilliGameTest #test13 stamp: 'IO 10/31/2020 19:16:16'!
PASSED!

!testRun: #TerniLapilliGameTest #test14 stamp: 'IO 10/31/2020 19:16:16'!
PASSED!

!testRun: #TerniLapilliGameTest #test15 stamp: 'IO 10/31/2020 19:16:16'!
PASSED!

!testRun: #TerniLapilliGameTest #test16 stamp: 'IO 10/31/2020 19:16:16'!
PASSED!

!testRun: #TerniLapilliGameTest #test17 stamp: 'IO 10/31/2020 19:16:16'!
PASSED!

!testRun: #TerniLapilliGameTest #test18 stamp: 'IO 10/31/2020 19:16:16'!
PASSED!

!testRun: #TerniLapilliGameTest #test19 stamp: 'IO 10/31/2020 19:16:16'!
PASSED!

!testRun: #TerniLapilliGameTest #test20 stamp: 'IO 10/31/2020 19:16:16'!
PASSED!

!testRun: #TerniLapilliGameTest #test21 stamp: 'IO 10/31/2020 19:16:16'!
PASSED!
!TerniLapilliGameTest methodsFor: 'ilegal moves' stamp: 'IO 10/31/2020 19:16:31' prior: 50874471!
test21
	"x no puede mover antes de poner las tres fichas"
	| aGame |
	aGame := TerniLapilliGame new.
	
	aGame xPutsOn: 0@0.
	aGame oPutsOn: 0@1.

	self should: [aGame xMoves: (0@0) to: (1@0).] raise: Error withMessageText: TerniLapilliGame wrongTurnErrorMessage.

! !

!testRun: #TerniLapilliGameTest #test21 stamp: 'IO 10/31/2020 19:16:32'!
FAILURE!

!testRun: #TerniLapilliGameTest #test21 stamp: 'IO 10/31/2020 19:16:36'!
FAILURE!

!testRun: #TerniLapilliGameTest #test21 stamp: 'IO 10/31/2020 19:16:39'!
FAILURE!
!TerniLapilliGameTest methodsFor: 'ilegal moves' stamp: 'IO 10/31/2020 19:16:42' prior: 50874539!
test21
	"x no puede mover antes de poner las tres fichas"
	| aGame |
	aGame := TerniLapilliGame new.
	
	aGame xPutsOn: 0@0.
	aGame oPutsOn: 0@1.

	self should: [aGame xMoves: (0@0) to: (1@0).] raise: Error withMessageText: TerniLapilliGame wrongTurnErrorMessage.
! !
!TerniLapilliGameStatePlaysO methodsFor: 'moves' stamp: 'IO 10/31/2020 19:18:40' prior: 50873881 overrides: 50872903!
xMoves: sourcePosition to: destinationPosition
	(xTokens size < 1) ifTrue: [self error: 'Cannot move before putting 3 tokens'].
	self errorIlegalMove.

! !

!testRun: #TerniLapilliGameTest #test21 stamp: 'IO 10/31/2020 19:18:53'!
FAILURE!

!testRun: #TerniLapilliGameTest #test21 stamp: 'IO 10/31/2020 19:19:07'!
FAILURE!

!testRun: #TerniLapilliGameTest #test21 stamp: 'IO 10/31/2020 19:19:22'!
FAILURE!

!testRun: #TerniLapilliGameTest #test21 stamp: 'IO 10/31/2020 19:19:48'!
FAILURE!

!testRun: #TerniLapilliGameTest #test21 stamp: 'IO 10/31/2020 19:19:56'!
FAILURE!
!TerniLapilliGameTest methodsFor: 'ilegal moves' stamp: 'IO 10/31/2020 19:20:15' prior: 50874559!
test21
	"x no puede mover antes de poner las tres fichas"
	| aGame |
	aGame := TerniLapilliGame new.
	
	aGame xPutsOn: 0@0.
	aGame oPutsOn: 0@1.

	self should: [aGame xMoves: (0@0) to: (1@0).] raise: Error withMessageText: TerniLapilliGame cannotMoveErrorMessage.
! !
!TerniLapilliGame class methodsFor: 'error messages' stamp: 'IO 10/31/2020 19:20:40'!
cannotMoveErrorMessage
	^'Cannot move'.! !
!TerniLapilliGameStatePlaysO methodsFor: 'moves' stamp: 'IO 10/31/2020 19:21:05' prior: 50874572 overrides: 50872903!
xMoves: sourcePosition to: destinationPosition
	self errorIlegalMove.

! !
!TerniLapilliGameStatePlaysX methodsFor: 'moves' stamp: 'IO 10/31/2020 19:21:24' prior: 50874042 overrides: 50872903!
xMoves: sourcePosition to: destinationPosition
	(xTokens size < 1) ifTrue: [self error: TerniLapilliGame cannotMoveErrorMessage].
	xTokens move: sourcePosition to: destinationPosition.
	^self passTurn.

! !

!testRun: #TerniLapilliGameTest #test21 stamp: 'IO 10/31/2020 19:21:33'!
FAILURE!

!testRun: #TerniLapilliGameTest #test21 stamp: 'IO 10/31/2020 19:24:04'!
FAILURE!

!testRun: #TerniLapilliGameTest #test21 stamp: 'IO 10/31/2020 19:26:07'!
FAILURE!

!testRun: #TerniLapilliGameTest #test21 stamp: 'IO 10/31/2020 19:26:25'!
FAILURE!

!testRun: #TerniLapilliGameTest #test21 stamp: 'IO 10/31/2020 19:29:38'!
FAILURE!

xTokens!

self size !
!TerniLapilliPlayerTokens methodsFor: 'testing' stamp: 'IO 10/31/2020 19:31:43' overrides: 16880927!
size

	^tokens size.! !

!testRun: #TerniLapilliGameTest #test21 stamp: 'IO 10/31/2020 19:31:46'!
FAILURE!
!TerniLapilliGameStatePlaysX methodsFor: 'moves' stamp: 'IO 10/31/2020 19:32:09' prior: 50874618 overrides: 50872903!
xMoves: sourcePosition to: destinationPosition
	(xTokens size < 2) ifTrue: [self error: TerniLapilliGame cannotMoveErrorMessage].
	xTokens move: sourcePosition to: destinationPosition.
	^self passTurn.

! !

!testRun: #TerniLapilliGameTest #test21 stamp: 'IO 10/31/2020 19:32:12'!
PASSED!

!testRun: #TerniLapilliGameTest #test01 stamp: 'IO 10/31/2020 19:32:12'!
PASSED!

!testRun: #TerniLapilliGameTest #test02 stamp: 'IO 10/31/2020 19:32:12'!
PASSED!

!testRun: #TerniLapilliGameTest #test03 stamp: 'IO 10/31/2020 19:32:12'!
PASSED!

!testRun: #TerniLapilliGameTest #test04 stamp: 'IO 10/31/2020 19:32:12'!
PASSED!

!testRun: #TerniLapilliGameTest #test05 stamp: 'IO 10/31/2020 19:32:12'!
PASSED!

!testRun: #TerniLapilliGameTest #test06 stamp: 'IO 10/31/2020 19:32:12'!
PASSED!

!testRun: #TerniLapilliGameTest #test07 stamp: 'IO 10/31/2020 19:32:12'!
PASSED!

!testRun: #TerniLapilliGameTest #test08 stamp: 'IO 10/31/2020 19:32:12'!
PASSED!

!testRun: #TerniLapilliGameTest #test09 stamp: 'IO 10/31/2020 19:32:12'!
PASSED!

!testRun: #TerniLapilliGameTest #test10 stamp: 'IO 10/31/2020 19:32:12'!
PASSED!

!testRun: #TerniLapilliGameTest #test11 stamp: 'IO 10/31/2020 19:32:12'!
PASSED!

!testRun: #TerniLapilliGameTest #test12 stamp: 'IO 10/31/2020 19:32:12'!
PASSED!

!testRun: #TerniLapilliGameTest #test13 stamp: 'IO 10/31/2020 19:32:12'!
PASSED!

!testRun: #TerniLapilliGameTest #test14 stamp: 'IO 10/31/2020 19:32:12'!
PASSED!

!testRun: #TerniLapilliGameTest #test15 stamp: 'IO 10/31/2020 19:32:12'!
PASSED!

!testRun: #TerniLapilliGameTest #test16 stamp: 'IO 10/31/2020 19:32:12'!
PASSED!

!testRun: #TerniLapilliGameTest #test17 stamp: 'IO 10/31/2020 19:32:12'!
PASSED!

!testRun: #TerniLapilliGameTest #test18 stamp: 'IO 10/31/2020 19:32:12'!
PASSED!

!testRun: #TerniLapilliGameTest #test19 stamp: 'IO 10/31/2020 19:32:12'!
PASSED!

!testRun: #TerniLapilliGameTest #test20 stamp: 'IO 10/31/2020 19:32:12'!
PASSED!

!testRun: #TerniLapilliGameTest #test21 stamp: 'IO 10/31/2020 19:32:12'!
PASSED!
!TerniLapilliGameTest methodsFor: 'ilegal moves' stamp: 'IO 10/31/2020 19:33:03' prior: 50874593!
test21
	"x no puede mover antes de poner las tres fichas"
	| aGame |
	aGame := TerniLapilliGame new.
	
	aGame xPutsOn: 0@0.
	aGame oPutsOn: 0@1.

	self should: [aGame xMoves: (0@0) to: (1@0).] raise: Error withMessageText: TerniLapilliGame cannotMoveErrorMessage.

	aGame xPutsOn: 0@0.
	aGame oPutsOn: 0@1.

	self should: [aGame xMoves: (0@0) to: (1@0).] raise: Error withMessageText: TerniLapilliGame cannotMoveErrorMessage.

	! !
!TerniLapilliGameTest methodsFor: 'ilegal moves' stamp: 'IO 10/31/2020 19:33:22' prior: 50874716!
test21
	"x no puede mover antes de poner las tres fichas"
	| aGame |
	aGame := TerniLapilliGame new.
	
	aGame xPutsOn: 0@0.
	aGame oPutsOn: 0@1.

	self should: [aGame xMoves: (0@0) to: (1@0).] raise: Error withMessageText: TerniLapilliGame cannotMoveErrorMessage.

	aGame xPutsOn: 1@0.
	aGame oPutsOn: 0@2.

	self should: [aGame xMoves: (1@0) to: (2@0).] raise: Error withMessageText: TerniLapilliGame cannotMoveErrorMessage.

	! !

!testRun: #TerniLapilliGameTest #test21 stamp: 'IO 10/31/2020 19:33:23'!
FAILURE!
!TerniLapilliGameStatePlaysX methodsFor: 'moves' stamp: 'IO 10/31/2020 19:33:29' prior: 50874650 overrides: 50872903!
xMoves: sourcePosition to: destinationPosition
	(xTokens size < 3) ifTrue: [self error: TerniLapilliGame cannotMoveErrorMessage].
	xTokens move: sourcePosition to: destinationPosition.
	^self passTurn.

! !

!testRun: #TerniLapilliGameTest #test21 stamp: 'IO 10/31/2020 19:33:31'!
PASSED!

!testRun: #TerniLapilliGameTest #test01 stamp: 'IO 10/31/2020 19:33:31'!
PASSED!

!testRun: #TerniLapilliGameTest #test02 stamp: 'IO 10/31/2020 19:33:31'!
PASSED!

!testRun: #TerniLapilliGameTest #test03 stamp: 'IO 10/31/2020 19:33:31'!
PASSED!

!testRun: #TerniLapilliGameTest #test04 stamp: 'IO 10/31/2020 19:33:31'!
PASSED!

!testRun: #TerniLapilliGameTest #test05 stamp: 'IO 10/31/2020 19:33:31'!
PASSED!

!testRun: #TerniLapilliGameTest #test06 stamp: 'IO 10/31/2020 19:33:31'!
PASSED!

!testRun: #TerniLapilliGameTest #test07 stamp: 'IO 10/31/2020 19:33:31'!
PASSED!

!testRun: #TerniLapilliGameTest #test08 stamp: 'IO 10/31/2020 19:33:31'!
PASSED!

!testRun: #TerniLapilliGameTest #test09 stamp: 'IO 10/31/2020 19:33:31'!
PASSED!

!testRun: #TerniLapilliGameTest #test10 stamp: 'IO 10/31/2020 19:33:31'!
PASSED!

!testRun: #TerniLapilliGameTest #test11 stamp: 'IO 10/31/2020 19:33:31'!
PASSED!

!testRun: #TerniLapilliGameTest #test12 stamp: 'IO 10/31/2020 19:33:31'!
PASSED!

!testRun: #TerniLapilliGameTest #test13 stamp: 'IO 10/31/2020 19:33:31'!
PASSED!

!testRun: #TerniLapilliGameTest #test14 stamp: 'IO 10/31/2020 19:33:31'!
PASSED!

!testRun: #TerniLapilliGameTest #test15 stamp: 'IO 10/31/2020 19:33:31'!
PASSED!

!testRun: #TerniLapilliGameTest #test16 stamp: 'IO 10/31/2020 19:33:31'!
PASSED!

!testRun: #TerniLapilliGameTest #test17 stamp: 'IO 10/31/2020 19:33:31'!
PASSED!

!testRun: #TerniLapilliGameTest #test18 stamp: 'IO 10/31/2020 19:33:31'!
PASSED!

!testRun: #TerniLapilliGameTest #test19 stamp: 'IO 10/31/2020 19:33:31'!
PASSED!

!testRun: #TerniLapilliGameTest #test20 stamp: 'IO 10/31/2020 19:33:31'!
PASSED!

!testRun: #TerniLapilliGameTest #test21 stamp: 'IO 10/31/2020 19:33:31'!
PASSED!
!TerniLapilliGameTest methodsFor: 'ilegal moves' stamp: 'IO 10/31/2020 19:34:56'!
test22
	"o no puede mover antes de poner las tres fichas"
	| aGame |
	aGame := TerniLapilliGame new.
	
	aGame xPutsOn: 0@0.
	aGame oPutsOn: 0@1.
	aGame xPutsOn: 1@0.

	self should: [aGame oMoves: (0@0) to: (1@0).] raise: Error withMessageText: TerniLapilliGame cannotMoveErrorMessage.

	aGame oPutsOn: 0@2.
	aGame xPutsOn: 2@2.

	self should: [aGame oMoves: (0@2) to: (1@2).] raise: Error withMessageText: TerniLapilliGame cannotMoveErrorMessage.

	! !

!testRun: #TerniLapilliGameTest #test22 stamp: 'IO 10/31/2020 19:34:58'!
FAILURE!
!TerniLapilliGameStatePlaysO methodsFor: 'moves' stamp: 'IO 10/31/2020 19:35:12' prior: 50873976 overrides: 50873039!
oMoves: sourcePosition to: destinationPosition
	(oTokens size < 3) ifTrue: [self error: TerniLapilliGame cannotMoveErrorMessage].
	oTokens move: sourcePosition to: destinationPosition.
	^self passTurn.

! !

!testRun: #TerniLapilliGameTest #test22 stamp: 'IO 10/31/2020 19:35:13'!
PASSED!

!testRun: #TerniLapilliGameTest #test01 stamp: 'IO 10/31/2020 19:35:13'!
PASSED!

!testRun: #TerniLapilliGameTest #test02 stamp: 'IO 10/31/2020 19:35:13'!
PASSED!

!testRun: #TerniLapilliGameTest #test03 stamp: 'IO 10/31/2020 19:35:13'!
PASSED!

!testRun: #TerniLapilliGameTest #test04 stamp: 'IO 10/31/2020 19:35:13'!
PASSED!

!testRun: #TerniLapilliGameTest #test05 stamp: 'IO 10/31/2020 19:35:13'!
PASSED!

!testRun: #TerniLapilliGameTest #test06 stamp: 'IO 10/31/2020 19:35:13'!
PASSED!

!testRun: #TerniLapilliGameTest #test07 stamp: 'IO 10/31/2020 19:35:13'!
PASSED!

!testRun: #TerniLapilliGameTest #test08 stamp: 'IO 10/31/2020 19:35:13'!
PASSED!

!testRun: #TerniLapilliGameTest #test09 stamp: 'IO 10/31/2020 19:35:13'!
PASSED!

!testRun: #TerniLapilliGameTest #test10 stamp: 'IO 10/31/2020 19:35:13'!
PASSED!

!testRun: #TerniLapilliGameTest #test11 stamp: 'IO 10/31/2020 19:35:13'!
PASSED!

!testRun: #TerniLapilliGameTest #test12 stamp: 'IO 10/31/2020 19:35:13'!
PASSED!

!testRun: #TerniLapilliGameTest #test13 stamp: 'IO 10/31/2020 19:35:13'!
PASSED!

!testRun: #TerniLapilliGameTest #test14 stamp: 'IO 10/31/2020 19:35:13'!
PASSED!

!testRun: #TerniLapilliGameTest #test15 stamp: 'IO 10/31/2020 19:35:13'!
PASSED!

!testRun: #TerniLapilliGameTest #test16 stamp: 'IO 10/31/2020 19:35:13'!
PASSED!

!testRun: #TerniLapilliGameTest #test17 stamp: 'IO 10/31/2020 19:35:13'!
PASSED!

!testRun: #TerniLapilliGameTest #test18 stamp: 'IO 10/31/2020 19:35:13'!
PASSED!

!testRun: #TerniLapilliGameTest #test19 stamp: 'IO 10/31/2020 19:35:13'!
PASSED!

!testRun: #TerniLapilliGameTest #test20 stamp: 'IO 10/31/2020 19:35:13'!
PASSED!

!testRun: #TerniLapilliGameTest #test21 stamp: 'IO 10/31/2020 19:35:13'!
PASSED!

!testRun: #TerniLapilliGameTest #test22 stamp: 'IO 10/31/2020 19:35:13'!
PASSED!
!TerniLapilliGameTest methodsFor: 'ilegal moves' stamp: 'IO 10/31/2020 19:35:41' prior: 50874733!
test21
	"x no puede mover en su segundo turno"
	| aGame |
	aGame := TerniLapilliGame new.
	
	aGame xPutsOn: 0@0.
	aGame oPutsOn: 0@1.

	self should: [aGame xMoves: (0@0) to: (1@0).] raise: Error withMessageText: TerniLapilliGame cannotMoveErrorMessage.

	! !
!TerniLapilliGameTest methodsFor: 'ilegal moves' stamp: 'IO 10/31/2020 19:35:49' prior: 50874909!
test21
	"x no puede mover en su tercer turno"
	| aGame |
	aGame := TerniLapilliGame new.
	
	aGame xPutsOn: 0@0.
	aGame oPutsOn: 0@1.
	aGame xPutsOn: 1@0.
	aGame oPutsOn: 0@2.

	self should: [aGame xMoves: (1@0) to: (2@0).] raise: Error withMessageText: TerniLapilliGame cannotMoveErrorMessage.
! !
!TerniLapilliGameTest methodsFor: 'ilegal moves' stamp: 'IO 10/31/2020 19:35:57' prior: 50874921!
test21
	"x no puede mover en su segundo turno"
	| aGame |
	aGame := TerniLapilliGame new.
	
	aGame xPutsOn: 0@0.
	aGame oPutsOn: 0@1.

	self should: [aGame xMoves: (0@0) to: (1@0).] raise: Error withMessageText: TerniLapilliGame cannotMoveErrorMessage.

	! !
!TerniLapilliGameTest methodsFor: 'ilegal moves' stamp: 'IO 10/31/2020 19:36:02'!
test23
	"o no puede mover antes de poner las tres fichas"
	| aGame |
	aGame := TerniLapilliGame new.
	
	aGame xPutsOn: 0@0.
	aGame oPutsOn: 0@1.
	aGame xPutsOn: 1@0.

	self should: [aGame oMoves: (0@0) to: (1@0).] raise: Error withMessageText: TerniLapilliGame cannotMoveErrorMessage.

	aGame oPutsOn: 0@2.
	aGame xPutsOn: 2@2.

	self should: [aGame oMoves: (0@2) to: (1@2).] raise: Error withMessageText: TerniLapilliGame cannotMoveErrorMessage.

	! !
!TerniLapilliGameTest methodsFor: 'ilegal moves' stamp: 'IO 10/31/2020 19:36:19' prior: 50874819!
test22
	"x no puede mover en su segundo turno"
	| aGame |
	aGame := TerniLapilliGame new.
	
	aGame xPutsOn: 0@0.
	aGame oPutsOn: 0@1.
	aGame xPutsOn: 1@0.
	aGame oPutsOn: 0@2.

	self should: [aGame xMoves: (1@0) to: (2@0).] raise: Error withMessageText: TerniLapilliGame cannotMoveErrorMessage.
! !

!testRun: #TerniLapilliGameTest #test22 stamp: 'IO 10/31/2020 19:36:20'!
PASSED!

!testRun: #TerniLapilliGameTest #test01 stamp: 'IO 10/31/2020 19:36:20'!
PASSED!

!testRun: #TerniLapilliGameTest #test02 stamp: 'IO 10/31/2020 19:36:20'!
PASSED!

!testRun: #TerniLapilliGameTest #test03 stamp: 'IO 10/31/2020 19:36:20'!
PASSED!

!testRun: #TerniLapilliGameTest #test04 stamp: 'IO 10/31/2020 19:36:20'!
PASSED!

!testRun: #TerniLapilliGameTest #test05 stamp: 'IO 10/31/2020 19:36:20'!
PASSED!

!testRun: #TerniLapilliGameTest #test06 stamp: 'IO 10/31/2020 19:36:20'!
PASSED!

!testRun: #TerniLapilliGameTest #test07 stamp: 'IO 10/31/2020 19:36:20'!
PASSED!

!testRun: #TerniLapilliGameTest #test08 stamp: 'IO 10/31/2020 19:36:20'!
PASSED!

!testRun: #TerniLapilliGameTest #test09 stamp: 'IO 10/31/2020 19:36:20'!
PASSED!

!testRun: #TerniLapilliGameTest #test10 stamp: 'IO 10/31/2020 19:36:20'!
PASSED!

!testRun: #TerniLapilliGameTest #test11 stamp: 'IO 10/31/2020 19:36:20'!
PASSED!

!testRun: #TerniLapilliGameTest #test12 stamp: 'IO 10/31/2020 19:36:20'!
PASSED!

!testRun: #TerniLapilliGameTest #test13 stamp: 'IO 10/31/2020 19:36:20'!
PASSED!

!testRun: #TerniLapilliGameTest #test14 stamp: 'IO 10/31/2020 19:36:20'!
PASSED!

!testRun: #TerniLapilliGameTest #test15 stamp: 'IO 10/31/2020 19:36:20'!
PASSED!

!testRun: #TerniLapilliGameTest #test16 stamp: 'IO 10/31/2020 19:36:20'!
PASSED!

!testRun: #TerniLapilliGameTest #test17 stamp: 'IO 10/31/2020 19:36:20'!
PASSED!

!testRun: #TerniLapilliGameTest #test18 stamp: 'IO 10/31/2020 19:36:20'!
PASSED!

!testRun: #TerniLapilliGameTest #test19 stamp: 'IO 10/31/2020 19:36:20'!
PASSED!

!testRun: #TerniLapilliGameTest #test20 stamp: 'IO 10/31/2020 19:36:20'!
PASSED!

!testRun: #TerniLapilliGameTest #test21 stamp: 'IO 10/31/2020 19:36:20'!
PASSED!

!testRun: #TerniLapilliGameTest #test22 stamp: 'IO 10/31/2020 19:36:20'!
PASSED!

!testRun: #TerniLapilliGameTest #test23 stamp: 'IO 10/31/2020 19:36:20'!
PASSED!
!TerniLapilliGameTest methodsFor: 'ilegal moves' stamp: 'IO 10/31/2020 19:36:42' prior: 50874945!
test23
	"o no puede mover en su segundo turno"
	| aGame |
	aGame := TerniLapilliGame new.
	
	aGame xPutsOn: 0@0.
	aGame oPutsOn: 0@1.
	aGame xPutsOn: 1@0.

	self should: [aGame oMoves: (0@0) to: (1@0).] raise: Error withMessageText: TerniLapilliGame cannotMoveErrorMessage.

	! !
!TerniLapilliGameTest methodsFor: 'ilegal moves' stamp: 'IO 10/31/2020 19:37:03'!
test24
	"o no puede mover en su segundo turno"
	| aGame |
	aGame := TerniLapilliGame new.
	
	aGame xPutsOn: 0@0.
	aGame oPutsOn: 0@1.
	aGame xPutsOn: 1@0.

	self should: [aGame oMoves: (0@0) to: (1@0).] raise: Error withMessageText: TerniLapilliGame cannotMoveErrorMessage.

	! !
!TerniLapilliGameTest methodsFor: 'ilegal moves' stamp: 'IO 10/31/2020 19:37:15' prior: 50874397!
test20
	"x no puede mover en su primer turno"
	| aGame |
	aGame := TerniLapilliGame new.
	
	self should: [aGame xMoves: (0@0) to: (1@0).] raise: Error withMessageText: TerniLapilliGame cannotMoveErrorMessage.

	! !

!testRun: #TerniLapilliGameTest #test20 stamp: 'IO 10/31/2020 19:37:17'!
PASSED!

!testRun: #TerniLapilliGameTest #test01 stamp: 'IO 10/31/2020 19:37:17'!
PASSED!

!testRun: #TerniLapilliGameTest #test02 stamp: 'IO 10/31/2020 19:37:17'!
PASSED!

!testRun: #TerniLapilliGameTest #test03 stamp: 'IO 10/31/2020 19:37:17'!
PASSED!

!testRun: #TerniLapilliGameTest #test04 stamp: 'IO 10/31/2020 19:37:17'!
PASSED!

!testRun: #TerniLapilliGameTest #test05 stamp: 'IO 10/31/2020 19:37:17'!
PASSED!

!testRun: #TerniLapilliGameTest #test06 stamp: 'IO 10/31/2020 19:37:17'!
PASSED!

!testRun: #TerniLapilliGameTest #test07 stamp: 'IO 10/31/2020 19:37:17'!
PASSED!

!testRun: #TerniLapilliGameTest #test08 stamp: 'IO 10/31/2020 19:37:17'!
PASSED!

!testRun: #TerniLapilliGameTest #test09 stamp: 'IO 10/31/2020 19:37:17'!
PASSED!

!testRun: #TerniLapilliGameTest #test10 stamp: 'IO 10/31/2020 19:37:17'!
PASSED!

!testRun: #TerniLapilliGameTest #test11 stamp: 'IO 10/31/2020 19:37:17'!
PASSED!

!testRun: #TerniLapilliGameTest #test12 stamp: 'IO 10/31/2020 19:37:17'!
PASSED!

!testRun: #TerniLapilliGameTest #test13 stamp: 'IO 10/31/2020 19:37:17'!
PASSED!

!testRun: #TerniLapilliGameTest #test14 stamp: 'IO 10/31/2020 19:37:17'!
PASSED!

!testRun: #TerniLapilliGameTest #test15 stamp: 'IO 10/31/2020 19:37:17'!
PASSED!

!testRun: #TerniLapilliGameTest #test16 stamp: 'IO 10/31/2020 19:37:17'!
PASSED!

!testRun: #TerniLapilliGameTest #test17 stamp: 'IO 10/31/2020 19:37:17'!
PASSED!

!testRun: #TerniLapilliGameTest #test18 stamp: 'IO 10/31/2020 19:37:17'!
PASSED!

!testRun: #TerniLapilliGameTest #test19 stamp: 'IO 10/31/2020 19:37:17'!
PASSED!

!testRun: #TerniLapilliGameTest #test20 stamp: 'IO 10/31/2020 19:37:17'!
PASSED!

!testRun: #TerniLapilliGameTest #test21 stamp: 'IO 10/31/2020 19:37:17'!
PASSED!

!testRun: #TerniLapilliGameTest #test22 stamp: 'IO 10/31/2020 19:37:17'!
PASSED!

!testRun: #TerniLapilliGameTest #test23 stamp: 'IO 10/31/2020 19:37:17'!
PASSED!

!testRun: #TerniLapilliGameTest #test24 stamp: 'IO 10/31/2020 19:37:17'!
PASSED!
!TerniLapilliGameTest methodsFor: 'ilegal moves' stamp: 'IO 10/31/2020 19:37:27' prior: 50874963!
test22
	"x no puede mover en su tercer turno"
	| aGame |
	aGame := TerniLapilliGame new.
	
	aGame xPutsOn: 0@0.
	aGame oPutsOn: 0@1.
	aGame xPutsOn: 1@0.
	aGame oPutsOn: 0@2.

	self should: [aGame xMoves: (1@0) to: (2@0).] raise: Error withMessageText: TerniLapilliGame cannotMoveErrorMessage.
! !
!TerniLapilliGameTest methodsFor: 'ilegal moves' stamp: 'IO 10/31/2020 19:37:37' prior: 50875037!
test23
	"o no puede mover en su primer turno"
	| aGame |
	aGame := TerniLapilliGame new.
	
	aGame xPutsOn: 0@0.

	self should: [aGame oMoves: (0@0) to: (1@0).] raise: Error withMessageText: TerniLapilliGame cannotMoveErrorMessage.

	! !
!TerniLapilliGameTest methodsFor: 'ilegal moves' stamp: 'IO 10/31/2020 19:37:58' prior: 50875049!
test24
	"o no puede mover en su tercer turno"
	| aGame |
	aGame := TerniLapilliGame new.
	
	aGame xPutsOn: 0@0.
	aGame oPutsOn: 0@1.
	aGame xPutsOn: 1@0.
	aGame oPutsOn: 2@2.
	aGame xPutsOn: 2@1.

	self should: [aGame oMoves: (0@0) to: (1@0).] raise: Error withMessageText: TerniLapilliGame cannotMoveErrorMessage.

	! !

!testRun: #TerniLapilliGameTest #test24 stamp: 'IO 10/31/2020 19:38:00'!
PASSED!

!testRun: #TerniLapilliGameTest #test01 stamp: 'IO 10/31/2020 19:38:00'!
PASSED!

!testRun: #TerniLapilliGameTest #test02 stamp: 'IO 10/31/2020 19:38:00'!
PASSED!

!testRun: #TerniLapilliGameTest #test03 stamp: 'IO 10/31/2020 19:38:00'!
PASSED!

!testRun: #TerniLapilliGameTest #test04 stamp: 'IO 10/31/2020 19:38:00'!
PASSED!

!testRun: #TerniLapilliGameTest #test05 stamp: 'IO 10/31/2020 19:38:00'!
PASSED!

!testRun: #TerniLapilliGameTest #test06 stamp: 'IO 10/31/2020 19:38:01'!
PASSED!

!testRun: #TerniLapilliGameTest #test07 stamp: 'IO 10/31/2020 19:38:01'!
PASSED!

!testRun: #TerniLapilliGameTest #test08 stamp: 'IO 10/31/2020 19:38:01'!
PASSED!

!testRun: #TerniLapilliGameTest #test09 stamp: 'IO 10/31/2020 19:38:01'!
PASSED!

!testRun: #TerniLapilliGameTest #test10 stamp: 'IO 10/31/2020 19:38:01'!
PASSED!

!testRun: #TerniLapilliGameTest #test11 stamp: 'IO 10/31/2020 19:38:01'!
PASSED!

!testRun: #TerniLapilliGameTest #test12 stamp: 'IO 10/31/2020 19:38:01'!
PASSED!

!testRun: #TerniLapilliGameTest #test13 stamp: 'IO 10/31/2020 19:38:01'!
PASSED!

!testRun: #TerniLapilliGameTest #test14 stamp: 'IO 10/31/2020 19:38:01'!
PASSED!

!testRun: #TerniLapilliGameTest #test15 stamp: 'IO 10/31/2020 19:38:01'!
PASSED!

!testRun: #TerniLapilliGameTest #test16 stamp: 'IO 10/31/2020 19:38:01'!
PASSED!

!testRun: #TerniLapilliGameTest #test17 stamp: 'IO 10/31/2020 19:38:01'!
PASSED!

!testRun: #TerniLapilliGameTest #test18 stamp: 'IO 10/31/2020 19:38:01'!
PASSED!

!testRun: #TerniLapilliGameTest #test19 stamp: 'IO 10/31/2020 19:38:01'!
PASSED!

!testRun: #TerniLapilliGameTest #test20 stamp: 'IO 10/31/2020 19:38:01'!
PASSED!

!testRun: #TerniLapilliGameTest #test21 stamp: 'IO 10/31/2020 19:38:01'!
PASSED!

!testRun: #TerniLapilliGameTest #test22 stamp: 'IO 10/31/2020 19:38:01'!
PASSED!

!testRun: #TerniLapilliGameTest #test23 stamp: 'IO 10/31/2020 19:38:01'!
PASSED!

!testRun: #TerniLapilliGameTest #test24 stamp: 'IO 10/31/2020 19:38:01'!
PASSED!
!TerniLapilliGameTest methodsFor: 'ilegal moves' stamp: 'IO 10/31/2020 19:38:08' prior: 50875159!
test24
	"o no puede mover en su tercer turno"
	| aGame |
	aGame := TerniLapilliGame new.
	
	aGame xPutsOn: 0@0.
	aGame oPutsOn: 0@1.
	aGame xPutsOn: 1@0.

	self should: [aGame oMoves: (0@0) to: (1@0).] raise: Error withMessageText: TerniLapilliGame cannotMoveErrorMessage.

	! !

!testRun: #TerniLapilliGameTest #test24 stamp: 'IO 10/31/2020 19:38:09'!
PASSED!

!testRun: #TerniLapilliGameTest #test01 stamp: 'IO 10/31/2020 19:38:09'!
PASSED!

!testRun: #TerniLapilliGameTest #test02 stamp: 'IO 10/31/2020 19:38:09'!
PASSED!

!testRun: #TerniLapilliGameTest #test03 stamp: 'IO 10/31/2020 19:38:09'!
PASSED!

!testRun: #TerniLapilliGameTest #test04 stamp: 'IO 10/31/2020 19:38:09'!
PASSED!

!testRun: #TerniLapilliGameTest #test05 stamp: 'IO 10/31/2020 19:38:09'!
PASSED!

!testRun: #TerniLapilliGameTest #test06 stamp: 'IO 10/31/2020 19:38:09'!
PASSED!

!testRun: #TerniLapilliGameTest #test07 stamp: 'IO 10/31/2020 19:38:09'!
PASSED!

!testRun: #TerniLapilliGameTest #test08 stamp: 'IO 10/31/2020 19:38:09'!
PASSED!

!testRun: #TerniLapilliGameTest #test09 stamp: 'IO 10/31/2020 19:38:09'!
PASSED!

!testRun: #TerniLapilliGameTest #test10 stamp: 'IO 10/31/2020 19:38:09'!
PASSED!

!testRun: #TerniLapilliGameTest #test11 stamp: 'IO 10/31/2020 19:38:09'!
PASSED!

!testRun: #TerniLapilliGameTest #test12 stamp: 'IO 10/31/2020 19:38:09'!
PASSED!

!testRun: #TerniLapilliGameTest #test13 stamp: 'IO 10/31/2020 19:38:09'!
PASSED!

!testRun: #TerniLapilliGameTest #test14 stamp: 'IO 10/31/2020 19:38:09'!
PASSED!

!testRun: #TerniLapilliGameTest #test15 stamp: 'IO 10/31/2020 19:38:09'!
PASSED!

!testRun: #TerniLapilliGameTest #test16 stamp: 'IO 10/31/2020 19:38:09'!
PASSED!

!testRun: #TerniLapilliGameTest #test17 stamp: 'IO 10/31/2020 19:38:09'!
PASSED!

!testRun: #TerniLapilliGameTest #test18 stamp: 'IO 10/31/2020 19:38:09'!
PASSED!

!testRun: #TerniLapilliGameTest #test19 stamp: 'IO 10/31/2020 19:38:09'!
PASSED!

!testRun: #TerniLapilliGameTest #test20 stamp: 'IO 10/31/2020 19:38:09'!
PASSED!

!testRun: #TerniLapilliGameTest #test21 stamp: 'IO 10/31/2020 19:38:09'!
PASSED!

!testRun: #TerniLapilliGameTest #test22 stamp: 'IO 10/31/2020 19:38:09'!
PASSED!

!testRun: #TerniLapilliGameTest #test23 stamp: 'IO 10/31/2020 19:38:09'!
PASSED!

!testRun: #TerniLapilliGameTest #test24 stamp: 'IO 10/31/2020 19:38:09'!
PASSED!
!TerniLapilliGameTest methodsFor: 'ilegal moves' stamp: 'IO 10/31/2020 19:38:27'!
test25
	"o no puede mover en su tercer turno"
	| aGame |
	aGame := TerniLapilliGame new.
	
	aGame xPutsOn: 0@0.
	aGame oPutsOn: 0@1.
	aGame xPutsOn: 1@0.
	aGame oPutsOn: 2@2.
	aGame xPutsOn: 2@1.

	self should: [aGame oMoves: (0@0) to: (1@0).] raise: Error withMessageText: TerniLapilliGame cannotMoveErrorMessage.

	! !

!testRun: #TerniLapilliGameTest #test25 stamp: 'IO 10/31/2020 19:38:27'!
PASSED!

!testRun: #TerniLapilliGameTest #test01 stamp: 'IO 10/31/2020 19:38:27'!
PASSED!

!testRun: #TerniLapilliGameTest #test02 stamp: 'IO 10/31/2020 19:38:27'!
PASSED!

!testRun: #TerniLapilliGameTest #test03 stamp: 'IO 10/31/2020 19:38:27'!
PASSED!

!testRun: #TerniLapilliGameTest #test04 stamp: 'IO 10/31/2020 19:38:27'!
PASSED!

!testRun: #TerniLapilliGameTest #test05 stamp: 'IO 10/31/2020 19:38:27'!
PASSED!

!testRun: #TerniLapilliGameTest #test06 stamp: 'IO 10/31/2020 19:38:27'!
PASSED!

!testRun: #TerniLapilliGameTest #test07 stamp: 'IO 10/31/2020 19:38:27'!
PASSED!

!testRun: #TerniLapilliGameTest #test08 stamp: 'IO 10/31/2020 19:38:27'!
PASSED!

!testRun: #TerniLapilliGameTest #test09 stamp: 'IO 10/31/2020 19:38:27'!
PASSED!

!testRun: #TerniLapilliGameTest #test10 stamp: 'IO 10/31/2020 19:38:27'!
PASSED!

!testRun: #TerniLapilliGameTest #test11 stamp: 'IO 10/31/2020 19:38:27'!
PASSED!

!testRun: #TerniLapilliGameTest #test12 stamp: 'IO 10/31/2020 19:38:27'!
PASSED!

!testRun: #TerniLapilliGameTest #test13 stamp: 'IO 10/31/2020 19:38:27'!
PASSED!

!testRun: #TerniLapilliGameTest #test14 stamp: 'IO 10/31/2020 19:38:27'!
PASSED!

!testRun: #TerniLapilliGameTest #test15 stamp: 'IO 10/31/2020 19:38:27'!
PASSED!

!testRun: #TerniLapilliGameTest #test16 stamp: 'IO 10/31/2020 19:38:27'!
PASSED!

!testRun: #TerniLapilliGameTest #test17 stamp: 'IO 10/31/2020 19:38:27'!
PASSED!

!testRun: #TerniLapilliGameTest #test18 stamp: 'IO 10/31/2020 19:38:27'!
PASSED!

!testRun: #TerniLapilliGameTest #test19 stamp: 'IO 10/31/2020 19:38:28'!
PASSED!

!testRun: #TerniLapilliGameTest #test20 stamp: 'IO 10/31/2020 19:38:28'!
PASSED!

!testRun: #TerniLapilliGameTest #test21 stamp: 'IO 10/31/2020 19:38:28'!
PASSED!

!testRun: #TerniLapilliGameTest #test22 stamp: 'IO 10/31/2020 19:38:28'!
PASSED!

!testRun: #TerniLapilliGameTest #test23 stamp: 'IO 10/31/2020 19:38:28'!
PASSED!

!testRun: #TerniLapilliGameTest #test24 stamp: 'IO 10/31/2020 19:38:28'!
PASSED!

!testRun: #TerniLapilliGameTest #test25 stamp: 'IO 10/31/2020 19:38:28'!
PASSED!

!testRun: #TerniLapilliGameTest #test25 stamp: 'IO 10/31/2020 19:55:05'!
PASSED!

!testRun: #TerniLapilliGameTest #test01 stamp: 'IO 10/31/2020 19:55:05'!
PASSED!

!testRun: #TerniLapilliGameTest #test02 stamp: 'IO 10/31/2020 19:55:05'!
PASSED!

!testRun: #TerniLapilliGameTest #test03 stamp: 'IO 10/31/2020 19:55:05'!
PASSED!

!testRun: #TerniLapilliGameTest #test04 stamp: 'IO 10/31/2020 19:55:05'!
PASSED!

!testRun: #TerniLapilliGameTest #test05 stamp: 'IO 10/31/2020 19:55:05'!
PASSED!

!testRun: #TerniLapilliGameTest #test06 stamp: 'IO 10/31/2020 19:55:05'!
PASSED!

!testRun: #TerniLapilliGameTest #test07 stamp: 'IO 10/31/2020 19:55:05'!
PASSED!

!testRun: #TerniLapilliGameTest #test08 stamp: 'IO 10/31/2020 19:55:05'!
PASSED!

!testRun: #TerniLapilliGameTest #test09 stamp: 'IO 10/31/2020 19:55:05'!
PASSED!

!testRun: #TerniLapilliGameTest #test10 stamp: 'IO 10/31/2020 19:55:05'!
PASSED!

!testRun: #TerniLapilliGameTest #test11 stamp: 'IO 10/31/2020 19:55:05'!
PASSED!

!testRun: #TerniLapilliGameTest #test12 stamp: 'IO 10/31/2020 19:55:05'!
PASSED!

!testRun: #TerniLapilliGameTest #test13 stamp: 'IO 10/31/2020 19:55:05'!
PASSED!

!testRun: #TerniLapilliGameTest #test14 stamp: 'IO 10/31/2020 19:55:05'!
PASSED!

!testRun: #TerniLapilliGameTest #test15 stamp: 'IO 10/31/2020 19:55:05'!
PASSED!

!testRun: #TerniLapilliGameTest #test16 stamp: 'IO 10/31/2020 19:55:05'!
PASSED!

!testRun: #TerniLapilliGameTest #test17 stamp: 'IO 10/31/2020 19:55:05'!
PASSED!

!testRun: #TerniLapilliGameTest #test18 stamp: 'IO 10/31/2020 19:55:05'!
PASSED!

!testRun: #TerniLapilliGameTest #test19 stamp: 'IO 10/31/2020 19:55:05'!
PASSED!

!testRun: #TerniLapilliGameTest #test20 stamp: 'IO 10/31/2020 19:55:05'!
PASSED!

!testRun: #TerniLapilliGameTest #test21 stamp: 'IO 10/31/2020 19:55:05'!
PASSED!

!testRun: #TerniLapilliGameTest #test22 stamp: 'IO 10/31/2020 19:55:05'!
PASSED!

!testRun: #TerniLapilliGameTest #test23 stamp: 'IO 10/31/2020 19:55:05'!
PASSED!

!testRun: #TerniLapilliGameTest #test24 stamp: 'IO 10/31/2020 19:55:05'!
PASSED!

!testRun: #TerniLapilliGameTest #test25 stamp: 'IO 10/31/2020 19:55:05'!
PASSED!
!TerniLapilliGameState methodsFor: 'error' stamp: 'IO 10/31/2020 19:56:20'!
errorIlegalTurn
	self error: TerniLapilliGame wrongTurnErrorMessage.
! !
!TerniLapilliGameStatePlaysX methodsFor: 'as yet unclassified' stamp: 'IO 10/31/2020 19:56:20' prior: 50873900 overrides: 50873286!
oPutsOn: aPosition
	self errorIlegalTurn.

! !
!TerniLapilliGameStatePlaysX methodsFor: 'as yet unclassified' stamp: 'IO 10/31/2020 19:56:20' prior: 50873894 overrides: 50873039!
oMoves: sourcePosition to: destinationPosition
	self errorIlegalTurn.
! !
!TerniLapilliGameStatePlaysO methodsFor: 'as yet unclassified' stamp: 'IO 10/31/2020 19:56:20' prior: 50873888 overrides: 50873335!
xPutsOn: aPosition
	self errorIlegalTurn.

! !
!TerniLapilliGameStatePlaysO methodsFor: 'as yet unclassified' stamp: 'IO 10/31/2020 19:56:20' prior: 50874611 overrides: 50872903!
xMoves: sourcePosition to: destinationPosition
	self errorIlegalTurn.

! !

!methodRemoval: TerniLapilliGameState #errorIlegalMove stamp: 'IO 10/31/2020 19:56:20'!
errorIlegalMove
	self error: TerniLapilliGame wrongTurnErrorMessage.
!

!testRun: #TerniLapilliGameTest #test25 stamp: 'IO 10/31/2020 19:56:29'!
PASSED!

!testRun: #TerniLapilliGameTest #test01 stamp: 'IO 10/31/2020 19:56:29'!
PASSED!

!testRun: #TerniLapilliGameTest #test02 stamp: 'IO 10/31/2020 19:56:29'!
PASSED!

!testRun: #TerniLapilliGameTest #test03 stamp: 'IO 10/31/2020 19:56:29'!
PASSED!

!testRun: #TerniLapilliGameTest #test04 stamp: 'IO 10/31/2020 19:56:29'!
PASSED!

!testRun: #TerniLapilliGameTest #test05 stamp: 'IO 10/31/2020 19:56:29'!
PASSED!

!testRun: #TerniLapilliGameTest #test06 stamp: 'IO 10/31/2020 19:56:29'!
PASSED!

!testRun: #TerniLapilliGameTest #test07 stamp: 'IO 10/31/2020 19:56:29'!
PASSED!

!testRun: #TerniLapilliGameTest #test08 stamp: 'IO 10/31/2020 19:56:29'!
PASSED!

!testRun: #TerniLapilliGameTest #test09 stamp: 'IO 10/31/2020 19:56:29'!
PASSED!

!testRun: #TerniLapilliGameTest #test10 stamp: 'IO 10/31/2020 19:56:29'!
PASSED!

!testRun: #TerniLapilliGameTest #test11 stamp: 'IO 10/31/2020 19:56:29'!
PASSED!

!testRun: #TerniLapilliGameTest #test12 stamp: 'IO 10/31/2020 19:56:29'!
PASSED!

!testRun: #TerniLapilliGameTest #test13 stamp: 'IO 10/31/2020 19:56:29'!
PASSED!

!testRun: #TerniLapilliGameTest #test14 stamp: 'IO 10/31/2020 19:56:29'!
PASSED!

!testRun: #TerniLapilliGameTest #test15 stamp: 'IO 10/31/2020 19:56:29'!
PASSED!

!testRun: #TerniLapilliGameTest #test16 stamp: 'IO 10/31/2020 19:56:29'!
PASSED!

!testRun: #TerniLapilliGameTest #test17 stamp: 'IO 10/31/2020 19:56:29'!
PASSED!

!testRun: #TerniLapilliGameTest #test18 stamp: 'IO 10/31/2020 19:56:29'!
PASSED!

!testRun: #TerniLapilliGameTest #test19 stamp: 'IO 10/31/2020 19:56:29'!
PASSED!

!testRun: #TerniLapilliGameTest #test20 stamp: 'IO 10/31/2020 19:56:29'!
PASSED!

!testRun: #TerniLapilliGameTest #test21 stamp: 'IO 10/31/2020 19:56:29'!
PASSED!

!testRun: #TerniLapilliGameTest #test22 stamp: 'IO 10/31/2020 19:56:29'!
PASSED!

!testRun: #TerniLapilliGameTest #test23 stamp: 'IO 10/31/2020 19:56:29'!
PASSED!

!testRun: #TerniLapilliGameTest #test24 stamp: 'IO 10/31/2020 19:56:29'!
PASSED!

!testRun: #TerniLapilliGameTest #test25 stamp: 'IO 10/31/2020 19:56:29'!
PASSED!

TerniLapilliGameStatePlaysX subclass: #TerniLapilliGameStatePutsX
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Terni Lapilli'!

!classDefinition: #TerniLapilliGameStatePutsX category: 'Terni Lapilli' stamp: 'IO 10/31/2020 19:59:41'!
TerniLapilliGameStatePlaysX subclass: #TerniLapilliGameStatePutsX
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Terni Lapilli'!

TerniLapilliGameStatePlaysX subclass: #TerniLapilliGameStateMovesX
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Terni Lapilli'!

!classDefinition: #TerniLapilliGameStateMovesX category: 'Terni Lapilli' stamp: 'IO 10/31/2020 19:59:44'!
TerniLapilliGameStatePlaysX subclass: #TerniLapilliGameStateMovesX
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Terni Lapilli'!

!classRemoval: #TerniLapilliGameStateMovesX stamp: 'IO 10/31/2020 20:01:11'!
TerniLapilliGameStatePlaysX subclass: #TerniLapilliGameStateMovesX
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Terni Lapilli'!

!classRemoval: #TerniLapilliGameStatePutsX stamp: 'IO 10/31/2020 20:01:16'!
TerniLapilliGameStatePlaysX subclass: #TerniLapilliGameStatePutsX
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Terni Lapilli'!

!testRun: #TerniLapilliGameTest #test25 stamp: 'IO 10/31/2020 20:01:19'!
PASSED!

!testRun: #TerniLapilliGameTest #test01 stamp: 'IO 10/31/2020 20:01:19'!
PASSED!

!testRun: #TerniLapilliGameTest #test02 stamp: 'IO 10/31/2020 20:01:19'!
PASSED!

!testRun: #TerniLapilliGameTest #test03 stamp: 'IO 10/31/2020 20:01:19'!
PASSED!

!testRun: #TerniLapilliGameTest #test04 stamp: 'IO 10/31/2020 20:01:19'!
PASSED!

!testRun: #TerniLapilliGameTest #test05 stamp: 'IO 10/31/2020 20:01:19'!
PASSED!

!testRun: #TerniLapilliGameTest #test06 stamp: 'IO 10/31/2020 20:01:19'!
PASSED!

!testRun: #TerniLapilliGameTest #test07 stamp: 'IO 10/31/2020 20:01:19'!
PASSED!

!testRun: #TerniLapilliGameTest #test08 stamp: 'IO 10/31/2020 20:01:19'!
PASSED!

!testRun: #TerniLapilliGameTest #test09 stamp: 'IO 10/31/2020 20:01:19'!
PASSED!

!testRun: #TerniLapilliGameTest #test10 stamp: 'IO 10/31/2020 20:01:19'!
PASSED!

!testRun: #TerniLapilliGameTest #test11 stamp: 'IO 10/31/2020 20:01:19'!
PASSED!

!testRun: #TerniLapilliGameTest #test12 stamp: 'IO 10/31/2020 20:01:19'!
PASSED!

!testRun: #TerniLapilliGameTest #test13 stamp: 'IO 10/31/2020 20:01:19'!
PASSED!

!testRun: #TerniLapilliGameTest #test14 stamp: 'IO 10/31/2020 20:01:19'!
PASSED!

!testRun: #TerniLapilliGameTest #test15 stamp: 'IO 10/31/2020 20:01:19'!
PASSED!

!testRun: #TerniLapilliGameTest #test16 stamp: 'IO 10/31/2020 20:01:19'!
PASSED!

!testRun: #TerniLapilliGameTest #test17 stamp: 'IO 10/31/2020 20:01:19'!
PASSED!

!testRun: #TerniLapilliGameTest #test18 stamp: 'IO 10/31/2020 20:01:19'!
PASSED!

!testRun: #TerniLapilliGameTest #test19 stamp: 'IO 10/31/2020 20:01:19'!
PASSED!

!testRun: #TerniLapilliGameTest #test20 stamp: 'IO 10/31/2020 20:01:19'!
PASSED!

!testRun: #TerniLapilliGameTest #test21 stamp: 'IO 10/31/2020 20:01:19'!
PASSED!

!testRun: #TerniLapilliGameTest #test22 stamp: 'IO 10/31/2020 20:01:19'!
PASSED!

!testRun: #TerniLapilliGameTest #test23 stamp: 'IO 10/31/2020 20:01:19'!
PASSED!

!testRun: #TerniLapilliGameTest #test24 stamp: 'IO 10/31/2020 20:01:19'!
PASSED!

!testRun: #TerniLapilliGameTest #test25 stamp: 'IO 10/31/2020 20:01:19'!
PASSED!

TerniLapilliGameStatePlaysX subclass: #TerniLapilliGameStatePutsX
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Terni Lapilli'!

!classDefinition: #TerniLapilliGameStatePutsX category: 'Terni Lapilli' stamp: 'IO 10/31/2020 20:19:11'!
TerniLapilliGameStatePlaysX subclass: #TerniLapilliGameStatePutsX
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Terni Lapilli'!

TerniLapilliGameStatePlaysX subclass: #TerniLapilliGameStateMovesX
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Terni Lapilli'!

!classDefinition: #TerniLapilliGameStateMovesX category: 'Terni Lapilli' stamp: 'IO 10/31/2020 20:19:15'!
TerniLapilliGameStatePlaysX subclass: #TerniLapilliGameStateMovesX
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Terni Lapilli'!
!TerniLapilliGameStateMovesX methodsFor: 'no messages' stamp: 'IO 10/31/2020 20:20:01' overrides: 50874753!
xMoves: sourcePosition to: destinationPosition
	^self error: TerniLapilliGame cannotMoveErrorMessage.
! !
!TerniLapilliGameStateMovesX methodsFor: 'as yet unclassified' stamp: 'IO 10/31/2020 20:20:39' prior: 50875700 overrides: 50874753!
xMoves: sourcePosition to: destinationPosition

	xTokens move: sourcePosition to: destinationPosition.
	^self passTurn.

! !
!TerniLapilliGameStatePutsX methodsFor: 'no messages' stamp: 'IO 10/31/2020 20:20:57' overrides: 50874753!
xMoves: sourcePosition to: destinationPosition
	^self error: TerniLapilliGame cannotMoveErrorMessage.
! !
!TerniLapilliGameStatePlaysX methodsFor: 'moves' stamp: 'IO 10/31/2020 20:21:15' prior: 50874753 overrides: 50872903!
xMoves: sourcePosition to: destinationPosition
	self subclassResponsibility.
"
	(xTokens size < 3) ifTrue: [self error: TerniLapilliGame cannotMoveErrorMessage].
	xTokens move: sourcePosition to: destinationPosition.
	^self passTurn."

! !
!TerniLapilliGameStatePlaysX class methodsFor: 'as yet unclassified' stamp: 'IO 10/31/2020 20:25:53' overrides: 50872972!
withXTokens: nextXTokens oTokens: nextOTokens.
	(nextXTokens size < 3) ifTrue: [^TerniLapilliGameStatePutsX withXTokens: nextXTokens oTokens: nextOTokens].
	^TerniLapilliGameStateMovesX withXTokens: nextXTokens oTokens: nextOTokens
! !
!TerniLapilliGameStatePlaysX class methodsFor: 'as yet unclassified' stamp: 'IO 10/31/2020 20:27:29' prior: 50875735 overrides: 50872972!
withXTokens: nextXTokens oTokens: nextOTokens.
	(nextXTokens size < 3) ifTrue: [^TerniLapilliGameStatePutsX withXTokens: nextXTokens oTokens: nextOTokens].
	^TerniLapilliGameStateMovesX withXTokens: nextXTokens oTokens: nextOTokens.
! !
!TerniLapilliGameStatePlaysX class methodsFor: 'as yet unclassified' stamp: 'IO 10/31/2020 20:29:14' prior: 50875747 overrides: 50872972!
withXTokens: nextXTokens oTokens: nextOTokens
	(nextXTokens size < 3) ifTrue: [^TerniLapilliGameStatePutsX withXTokens: nextXTokens oTokens: nextOTokens].
	^TerniLapilliGameStateMovesX withXTokens: nextXTokens oTokens: nextOTokens.
! !
!TerniLapilliGameStateMovesX class methodsFor: 'no messages' stamp: 'IO 10/31/2020 20:30:06' overrides: 50875759!
withXTokens: nextXTokens oTokens: nextOTokens
! !
!TerniLapilliGameStateMovesX class methodsFor: 'as yet unclassified' stamp: 'IO 10/31/2020 20:30:34' prior: 50875770 overrides: 50875759!
withXTokens: nextXTokens oTokens: nextOTokens
	^self basicNew intializeWithXTokens: nextXTokens oTokens: nextOTokens.! !
!TerniLapilliGameStatePutsX class methodsFor: 'no messages' stamp: 'IO 10/31/2020 20:30:51' overrides: 50875759!
withXTokens: nextXTokens oTokens: nextOTokens
	^self basicNew intializeWithXTokens: nextXTokens oTokens: nextOTokens.! !

!testRun: #TerniLapilliGameTest #test25 stamp: 'IO 10/31/2020 20:30:54'!
PASSED!

!testRun: #TerniLapilliGameTest #test01 stamp: 'IO 10/31/2020 20:30:54'!
PASSED!

!testRun: #TerniLapilliGameTest #test02 stamp: 'IO 10/31/2020 20:30:54'!
PASSED!

!testRun: #TerniLapilliGameTest #test03 stamp: 'IO 10/31/2020 20:30:54'!
PASSED!

!testRun: #TerniLapilliGameTest #test04 stamp: 'IO 10/31/2020 20:30:54'!
PASSED!

!testRun: #TerniLapilliGameTest #test05 stamp: 'IO 10/31/2020 20:30:54'!
PASSED!

!testRun: #TerniLapilliGameTest #test06 stamp: 'IO 10/31/2020 20:30:54'!
PASSED!

!testRun: #TerniLapilliGameTest #test07 stamp: 'IO 10/31/2020 20:30:54'!
PASSED!

!testRun: #TerniLapilliGameTest #test08 stamp: 'IO 10/31/2020 20:30:54'!
PASSED!

!testRun: #TerniLapilliGameTest #test09 stamp: 'IO 10/31/2020 20:30:54'!
PASSED!

!testRun: #TerniLapilliGameTest #test10 stamp: 'IO 10/31/2020 20:30:54'!
PASSED!

!testRun: #TerniLapilliGameTest #test11 stamp: 'IO 10/31/2020 20:30:54'!
PASSED!

!testRun: #TerniLapilliGameTest #test12 stamp: 'IO 10/31/2020 20:30:54'!
PASSED!

!testRun: #TerniLapilliGameTest #test13 stamp: 'IO 10/31/2020 20:30:54'!
PASSED!

!testRun: #TerniLapilliGameTest #test14 stamp: 'IO 10/31/2020 20:30:54'!
PASSED!

!testRun: #TerniLapilliGameTest #test15 stamp: 'IO 10/31/2020 20:30:55'!
PASSED!

!testRun: #TerniLapilliGameTest #test16 stamp: 'IO 10/31/2020 20:30:55'!
PASSED!

!testRun: #TerniLapilliGameTest #test17 stamp: 'IO 10/31/2020 20:30:55'!
PASSED!

!testRun: #TerniLapilliGameTest #test18 stamp: 'IO 10/31/2020 20:30:55'!
PASSED!

!testRun: #TerniLapilliGameTest #test19 stamp: 'IO 10/31/2020 20:30:55'!
PASSED!

!testRun: #TerniLapilliGameTest #test20 stamp: 'IO 10/31/2020 20:30:55'!
FAILURE!

!testRun: #TerniLapilliGameTest #test21 stamp: 'IO 10/31/2020 20:30:55'!
PASSED!

!testRun: #TerniLapilliGameTest #test22 stamp: 'IO 10/31/2020 20:30:55'!
PASSED!

!testRun: #TerniLapilliGameTest #test23 stamp: 'IO 10/31/2020 20:30:55'!
PASSED!

!testRun: #TerniLapilliGameTest #test24 stamp: 'IO 10/31/2020 20:30:55'!
PASSED!

!testRun: #TerniLapilliGameTest #test25 stamp: 'IO 10/31/2020 20:30:55'!
PASSED!

!testRun: #TerniLapilliGameTest #test20 stamp: 'IO 10/31/2020 20:30:55'!
FAILURE!

!testRun: #TerniLapilliGameTest #test25 stamp: 'IO 10/31/2020 20:31:06'!
PASSED!

!testRun: #TerniLapilliGameTest #test01 stamp: 'IO 10/31/2020 20:31:06'!
PASSED!

!testRun: #TerniLapilliGameTest #test02 stamp: 'IO 10/31/2020 20:31:06'!
PASSED!

!testRun: #TerniLapilliGameTest #test03 stamp: 'IO 10/31/2020 20:31:06'!
PASSED!

!testRun: #TerniLapilliGameTest #test04 stamp: 'IO 10/31/2020 20:31:06'!
PASSED!

!testRun: #TerniLapilliGameTest #test05 stamp: 'IO 10/31/2020 20:31:06'!
PASSED!

!testRun: #TerniLapilliGameTest #test06 stamp: 'IO 10/31/2020 20:31:06'!
PASSED!

!testRun: #TerniLapilliGameTest #test07 stamp: 'IO 10/31/2020 20:31:06'!
PASSED!

!testRun: #TerniLapilliGameTest #test08 stamp: 'IO 10/31/2020 20:31:06'!
PASSED!

!testRun: #TerniLapilliGameTest #test09 stamp: 'IO 10/31/2020 20:31:06'!
PASSED!

!testRun: #TerniLapilliGameTest #test10 stamp: 'IO 10/31/2020 20:31:06'!
PASSED!

!testRun: #TerniLapilliGameTest #test11 stamp: 'IO 10/31/2020 20:31:06'!
PASSED!

!testRun: #TerniLapilliGameTest #test12 stamp: 'IO 10/31/2020 20:31:06'!
PASSED!

!testRun: #TerniLapilliGameTest #test13 stamp: 'IO 10/31/2020 20:31:06'!
PASSED!

!testRun: #TerniLapilliGameTest #test14 stamp: 'IO 10/31/2020 20:31:06'!
PASSED!

!testRun: #TerniLapilliGameTest #test15 stamp: 'IO 10/31/2020 20:31:06'!
PASSED!

!testRun: #TerniLapilliGameTest #test16 stamp: 'IO 10/31/2020 20:31:06'!
PASSED!

!testRun: #TerniLapilliGameTest #test17 stamp: 'IO 10/31/2020 20:31:06'!
PASSED!

!testRun: #TerniLapilliGameTest #test18 stamp: 'IO 10/31/2020 20:31:06'!
PASSED!

!testRun: #TerniLapilliGameTest #test19 stamp: 'IO 10/31/2020 20:31:06'!
PASSED!

!testRun: #TerniLapilliGameTest #test20 stamp: 'IO 10/31/2020 20:31:06'!
FAILURE!

!testRun: #TerniLapilliGameTest #test21 stamp: 'IO 10/31/2020 20:31:06'!
PASSED!

!testRun: #TerniLapilliGameTest #test22 stamp: 'IO 10/31/2020 20:31:06'!
PASSED!

!testRun: #TerniLapilliGameTest #test23 stamp: 'IO 10/31/2020 20:31:06'!
PASSED!

!testRun: #TerniLapilliGameTest #test24 stamp: 'IO 10/31/2020 20:31:06'!
PASSED!

!testRun: #TerniLapilliGameTest #test25 stamp: 'IO 10/31/2020 20:31:06'!
PASSED!

!testRun: #TerniLapilliGameTest #test20 stamp: 'IO 10/31/2020 20:31:06'!
FAILURE!
!TerniLapilliGameStatePlaysX methodsFor: 'moves' stamp: 'IO 10/31/2020 20:31:25' prior: 50875723 overrides: 50872903!
xMoves: sourcePosition to: destinationPosition
	^self subclassResponsibility.
"
	(xTokens size < 3) ifTrue: [self error: TerniLapilliGame cannotMoveErrorMessage].
	xTokens move: sourcePosition to: destinationPosition.
	^self passTurn."

! !

!testRun: #TerniLapilliGameTest #test25 stamp: 'IO 10/31/2020 20:31:27'!
PASSED!

!testRun: #TerniLapilliGameTest #test01 stamp: 'IO 10/31/2020 20:31:27'!
PASSED!

!testRun: #TerniLapilliGameTest #test02 stamp: 'IO 10/31/2020 20:31:27'!
PASSED!

!testRun: #TerniLapilliGameTest #test03 stamp: 'IO 10/31/2020 20:31:27'!
PASSED!

!testRun: #TerniLapilliGameTest #test04 stamp: 'IO 10/31/2020 20:31:27'!
PASSED!

!testRun: #TerniLapilliGameTest #test05 stamp: 'IO 10/31/2020 20:31:27'!
PASSED!

!testRun: #TerniLapilliGameTest #test06 stamp: 'IO 10/31/2020 20:31:27'!
PASSED!

!testRun: #TerniLapilliGameTest #test07 stamp: 'IO 10/31/2020 20:31:27'!
PASSED!

!testRun: #TerniLapilliGameTest #test08 stamp: 'IO 10/31/2020 20:31:27'!
PASSED!

!testRun: #TerniLapilliGameTest #test09 stamp: 'IO 10/31/2020 20:31:27'!
PASSED!

!testRun: #TerniLapilliGameTest #test10 stamp: 'IO 10/31/2020 20:31:27'!
PASSED!

!testRun: #TerniLapilliGameTest #test11 stamp: 'IO 10/31/2020 20:31:27'!
PASSED!

!testRun: #TerniLapilliGameTest #test12 stamp: 'IO 10/31/2020 20:31:27'!
PASSED!

!testRun: #TerniLapilliGameTest #test13 stamp: 'IO 10/31/2020 20:31:27'!
PASSED!

!testRun: #TerniLapilliGameTest #test14 stamp: 'IO 10/31/2020 20:31:27'!
PASSED!

!testRun: #TerniLapilliGameTest #test15 stamp: 'IO 10/31/2020 20:31:27'!
PASSED!

!testRun: #TerniLapilliGameTest #test16 stamp: 'IO 10/31/2020 20:31:27'!
PASSED!

!testRun: #TerniLapilliGameTest #test17 stamp: 'IO 10/31/2020 20:31:27'!
PASSED!

!testRun: #TerniLapilliGameTest #test18 stamp: 'IO 10/31/2020 20:31:27'!
PASSED!

!testRun: #TerniLapilliGameTest #test19 stamp: 'IO 10/31/2020 20:31:27'!
PASSED!

!testRun: #TerniLapilliGameTest #test20 stamp: 'IO 10/31/2020 20:31:27'!
FAILURE!

!testRun: #TerniLapilliGameTest #test21 stamp: 'IO 10/31/2020 20:31:27'!
PASSED!

!testRun: #TerniLapilliGameTest #test22 stamp: 'IO 10/31/2020 20:31:27'!
PASSED!

!testRun: #TerniLapilliGameTest #test23 stamp: 'IO 10/31/2020 20:31:27'!
PASSED!

!testRun: #TerniLapilliGameTest #test24 stamp: 'IO 10/31/2020 20:31:27'!
PASSED!

!testRun: #TerniLapilliGameTest #test25 stamp: 'IO 10/31/2020 20:31:27'!
PASSED!

!testRun: #TerniLapilliGameTest #test20 stamp: 'IO 10/31/2020 20:31:27'!
FAILURE!
!TerniLapilliGameStatePlaysX class methodsFor: 'as yet unclassified' stamp: 'IO 10/31/2020 20:33:10' prior: 50875759 overrides: 50872972!
withXTokens: nextXTokens oTokens: nextOTokens
	(nextXTokens size < 3) ifTrue: [^TerniLapilliGameStatePutsX withXTokens: nextXTokens oTokens: nextOTokens].
	^TerniLapilliGameStateMovesX withXTokens: nextXTokens oTokens: nextOTokens.
! !

aGame!

aGame!

!testRun: #TerniLapilliGameTest #test25 stamp: 'IO 10/31/2020 20:36:57'!
PASSED!

!testRun: #TerniLapilliGameTest #test01 stamp: 'IO 10/31/2020 20:36:57'!
PASSED!

!testRun: #TerniLapilliGameTest #test02 stamp: 'IO 10/31/2020 20:36:57'!
PASSED!

!testRun: #TerniLapilliGameTest #test03 stamp: 'IO 10/31/2020 20:36:57'!
PASSED!

!testRun: #TerniLapilliGameTest #test04 stamp: 'IO 10/31/2020 20:36:57'!
PASSED!

!testRun: #TerniLapilliGameTest #test05 stamp: 'IO 10/31/2020 20:36:57'!
PASSED!

!testRun: #TerniLapilliGameTest #test06 stamp: 'IO 10/31/2020 20:36:57'!
PASSED!

!testRun: #TerniLapilliGameTest #test07 stamp: 'IO 10/31/2020 20:36:57'!
PASSED!

!testRun: #TerniLapilliGameTest #test08 stamp: 'IO 10/31/2020 20:36:57'!
PASSED!

!testRun: #TerniLapilliGameTest #test09 stamp: 'IO 10/31/2020 20:36:57'!
PASSED!

!testRun: #TerniLapilliGameTest #test10 stamp: 'IO 10/31/2020 20:36:58'!
PASSED!

!testRun: #TerniLapilliGameTest #test11 stamp: 'IO 10/31/2020 20:36:58'!
PASSED!

!testRun: #TerniLapilliGameTest #test12 stamp: 'IO 10/31/2020 20:36:58'!
PASSED!

!testRun: #TerniLapilliGameTest #test13 stamp: 'IO 10/31/2020 20:36:58'!
PASSED!

!testRun: #TerniLapilliGameTest #test14 stamp: 'IO 10/31/2020 20:36:58'!
PASSED!

!testRun: #TerniLapilliGameTest #test15 stamp: 'IO 10/31/2020 20:36:58'!
PASSED!

!testRun: #TerniLapilliGameTest #test16 stamp: 'IO 10/31/2020 20:36:58'!
PASSED!

!testRun: #TerniLapilliGameTest #test17 stamp: 'IO 10/31/2020 20:36:58'!
PASSED!

!testRun: #TerniLapilliGameTest #test18 stamp: 'IO 10/31/2020 20:36:58'!
PASSED!

!testRun: #TerniLapilliGameTest #test19 stamp: 'IO 10/31/2020 20:36:58'!
PASSED!

!testRun: #TerniLapilliGameTest #test20 stamp: 'IO 10/31/2020 20:36:58'!
FAILURE!

!testRun: #TerniLapilliGameTest #test21 stamp: 'IO 10/31/2020 20:36:58'!
PASSED!

!testRun: #TerniLapilliGameTest #test22 stamp: 'IO 10/31/2020 20:36:58'!
PASSED!

!testRun: #TerniLapilliGameTest #test23 stamp: 'IO 10/31/2020 20:36:58'!
PASSED!

!testRun: #TerniLapilliGameTest #test24 stamp: 'IO 10/31/2020 20:36:58'!
PASSED!

!testRun: #TerniLapilliGameTest #test25 stamp: 'IO 10/31/2020 20:36:58'!
PASSED!

!testRun: #TerniLapilliGameTest #test20 stamp: 'IO 10/31/2020 20:36:58'!
FAILURE!

----SNAPSHOT----(31 October 2020 20:38:03) CuisUniversity-4384.image priorSource: 17310609!
!TerniLapilliGameState class methodsFor: 'as yet unclassified' stamp: 'IO 10/31/2020 20:39:11' prior: 50872820 overrides: 16783533!
new
	^TerniLapilliGameStatePutsX new.
! !

!testRun: #TerniLapilliGameTest #test25 stamp: 'IO 10/31/2020 20:39:13'!
PASSED!

!testRun: #TerniLapilliGameTest #test01 stamp: 'IO 10/31/2020 20:39:13'!
PASSED!

!testRun: #TerniLapilliGameTest #test02 stamp: 'IO 10/31/2020 20:39:13'!
PASSED!

!testRun: #TerniLapilliGameTest #test03 stamp: 'IO 10/31/2020 20:39:13'!
PASSED!

!testRun: #TerniLapilliGameTest #test04 stamp: 'IO 10/31/2020 20:39:13'!
PASSED!

!testRun: #TerniLapilliGameTest #test05 stamp: 'IO 10/31/2020 20:39:13'!
PASSED!

!testRun: #TerniLapilliGameTest #test06 stamp: 'IO 10/31/2020 20:39:13'!
PASSED!

!testRun: #TerniLapilliGameTest #test07 stamp: 'IO 10/31/2020 20:39:13'!
PASSED!

!testRun: #TerniLapilliGameTest #test08 stamp: 'IO 10/31/2020 20:39:13'!
PASSED!

!testRun: #TerniLapilliGameTest #test09 stamp: 'IO 10/31/2020 20:39:13'!
PASSED!

!testRun: #TerniLapilliGameTest #test10 stamp: 'IO 10/31/2020 20:39:13'!
PASSED!

!testRun: #TerniLapilliGameTest #test11 stamp: 'IO 10/31/2020 20:39:13'!
PASSED!

!testRun: #TerniLapilliGameTest #test12 stamp: 'IO 10/31/2020 20:39:13'!
PASSED!

!testRun: #TerniLapilliGameTest #test13 stamp: 'IO 10/31/2020 20:39:13'!
PASSED!

!testRun: #TerniLapilliGameTest #test14 stamp: 'IO 10/31/2020 20:39:13'!
PASSED!

!testRun: #TerniLapilliGameTest #test15 stamp: 'IO 10/31/2020 20:39:13'!
PASSED!

!testRun: #TerniLapilliGameTest #test16 stamp: 'IO 10/31/2020 20:39:13'!
PASSED!

!testRun: #TerniLapilliGameTest #test17 stamp: 'IO 10/31/2020 20:39:13'!
PASSED!

!testRun: #TerniLapilliGameTest #test18 stamp: 'IO 10/31/2020 20:39:13'!
PASSED!

!testRun: #TerniLapilliGameTest #test19 stamp: 'IO 10/31/2020 20:39:13'!
PASSED!

!testRun: #TerniLapilliGameTest #test20 stamp: 'IO 10/31/2020 20:39:13'!
PASSED!

!testRun: #TerniLapilliGameTest #test21 stamp: 'IO 10/31/2020 20:39:13'!
PASSED!

!testRun: #TerniLapilliGameTest #test22 stamp: 'IO 10/31/2020 20:39:13'!
PASSED!

!testRun: #TerniLapilliGameTest #test23 stamp: 'IO 10/31/2020 20:39:13'!
PASSED!

!testRun: #TerniLapilliGameTest #test24 stamp: 'IO 10/31/2020 20:39:13'!
PASSED!

!testRun: #TerniLapilliGameTest #test25 stamp: 'IO 10/31/2020 20:39:13'!
PASSED!

TerniLapilliGameStatePlaysO subclass: #TerniLapilliGameStatePutsO
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Terni Lapilli'!

!classDefinition: #TerniLapilliGameStatePutsO category: 'Terni Lapilli' stamp: 'IO 10/31/2020 20:47:18'!
TerniLapilliGameStatePlaysO subclass: #TerniLapilliGameStatePutsO
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Terni Lapilli'!

TerniLapilliGameStatePlaysO subclass: #TerniLapilliGameStateMovesO
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Terni Lapilli'!

!classDefinition: #TerniLapilliGameStateMovesO category: 'Terni Lapilli' stamp: 'IO 10/31/2020 20:47:25'!
TerniLapilliGameStatePlaysO subclass: #TerniLapilliGameStateMovesO
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Terni Lapilli'!
!TerniLapilliGameStateMovesO methodsFor: 'no messages' stamp: 'IO 10/31/2020 20:47:40' overrides: 50874840!
oMoves: sourcePosition to: destinationPosition
	(oTokens size < 3) ifTrue: [self error: TerniLapilliGame cannotMoveErrorMessage].
	oTokens move: sourcePosition to: destinationPosition.
	^self passTurn.

! !
!TerniLapilliGameStatePutsO methodsFor: 'no messages' stamp: 'IO 10/31/2020 20:47:44' overrides: 50874840!
oMoves: sourcePosition to: destinationPosition
	(oTokens size < 3) ifTrue: [self error: TerniLapilliGame cannotMoveErrorMessage].
	oTokens move: sourcePosition to: destinationPosition.
	^self passTurn.

! !

!testRun: #TerniLapilliGameTest #test25 stamp: 'IO 10/31/2020 20:47:46'!
PASSED!

!testRun: #TerniLapilliGameTest #test01 stamp: 'IO 10/31/2020 20:47:46'!
PASSED!

!testRun: #TerniLapilliGameTest #test02 stamp: 'IO 10/31/2020 20:47:46'!
PASSED!

!testRun: #TerniLapilliGameTest #test03 stamp: 'IO 10/31/2020 20:47:46'!
PASSED!

!testRun: #TerniLapilliGameTest #test04 stamp: 'IO 10/31/2020 20:47:46'!
PASSED!

!testRun: #TerniLapilliGameTest #test05 stamp: 'IO 10/31/2020 20:47:46'!
PASSED!

!testRun: #TerniLapilliGameTest #test06 stamp: 'IO 10/31/2020 20:47:46'!
PASSED!

!testRun: #TerniLapilliGameTest #test07 stamp: 'IO 10/31/2020 20:47:46'!
PASSED!

!testRun: #TerniLapilliGameTest #test08 stamp: 'IO 10/31/2020 20:47:46'!
PASSED!

!testRun: #TerniLapilliGameTest #test09 stamp: 'IO 10/31/2020 20:47:46'!
PASSED!

!testRun: #TerniLapilliGameTest #test10 stamp: 'IO 10/31/2020 20:47:46'!
PASSED!

!testRun: #TerniLapilliGameTest #test11 stamp: 'IO 10/31/2020 20:47:46'!
PASSED!

!testRun: #TerniLapilliGameTest #test12 stamp: 'IO 10/31/2020 20:47:46'!
PASSED!

!testRun: #TerniLapilliGameTest #test13 stamp: 'IO 10/31/2020 20:47:46'!
PASSED!

!testRun: #TerniLapilliGameTest #test14 stamp: 'IO 10/31/2020 20:47:46'!
PASSED!

!testRun: #TerniLapilliGameTest #test15 stamp: 'IO 10/31/2020 20:47:46'!
PASSED!

!testRun: #TerniLapilliGameTest #test16 stamp: 'IO 10/31/2020 20:47:46'!
PASSED!

!testRun: #TerniLapilliGameTest #test17 stamp: 'IO 10/31/2020 20:47:46'!
PASSED!

!testRun: #TerniLapilliGameTest #test18 stamp: 'IO 10/31/2020 20:47:46'!
PASSED!

!testRun: #TerniLapilliGameTest #test19 stamp: 'IO 10/31/2020 20:47:46'!
PASSED!

!testRun: #TerniLapilliGameTest #test20 stamp: 'IO 10/31/2020 20:47:46'!
PASSED!

!testRun: #TerniLapilliGameTest #test21 stamp: 'IO 10/31/2020 20:47:46'!
PASSED!

!testRun: #TerniLapilliGameTest #test22 stamp: 'IO 10/31/2020 20:47:46'!
PASSED!

!testRun: #TerniLapilliGameTest #test23 stamp: 'IO 10/31/2020 20:47:46'!
PASSED!

!testRun: #TerniLapilliGameTest #test24 stamp: 'IO 10/31/2020 20:47:46'!
PASSED!

!testRun: #TerniLapilliGameTest #test25 stamp: 'IO 10/31/2020 20:47:46'!
PASSED!
!TerniLapilliGameStatePutsO methodsFor: 'as yet unclassified' stamp: 'IO 10/31/2020 20:47:59' prior: 50876206 overrides: 50874840!
oMoves: sourcePosition to: destinationPosition
	^self error: TerniLapilliGame cannotMoveErrorMessage.! !
!TerniLapilliGameStateMovesO methodsFor: 'as yet unclassified' stamp: 'IO 10/31/2020 20:48:04' prior: 50876196 overrides: 50874840!
oMoves: sourcePosition to: destinationPosition
	oTokens move: sourcePosition to: destinationPosition.
	^self passTurn.

! !
!TerniLapilliGameStatePlaysO class methodsFor: 'no messages' stamp: 'IO 10/31/2020 20:48:55' overrides: 50872972!
withXTokens: nextXTokens oTokens: nextOTokens
	(nextOTokens size < 3) ifTrue: [^TerniLapilliGameStatePutsO withXTokens: nextXTokens oTokens: nextOTokens].
	^TerniLapilliGameStateMovesO withXTokens: nextXTokens oTokens: nextOTokens.
! !
!TerniLapilliGameStatePlaysO methodsFor: 'moves' stamp: 'IO 10/31/2020 20:49:15' prior: 50874840 overrides: 50873039!
oMoves: sourcePosition to: destinationPosition
	^self subclassResponsibility.

! !
!TerniLapilliGameStatePlaysO methodsFor: 'moves' stamp: 'IO 10/31/2020 20:49:23' prior: 50876312 overrides: 50873039!
oMoves: sourcePosition to: destinationPosition
	^self subclassResponsibility.
! !
!TerniLapilliGameStatePutsO class methodsFor: 'no messages' stamp: 'IO 10/31/2020 20:49:55' overrides: 50876300!
withXTokens: nextXTokens oTokens: nextOTokens
	^self basicNew intializeWithXTokens: nextXTokens oTokens: nextOTokens.! !
!TerniLapilliGameStateMovesO class methodsFor: 'no messages' stamp: 'IO 10/31/2020 20:50:01' overrides: 50876300!
withXTokens: nextXTokens oTokens: nextOTokens
	^self basicNew intializeWithXTokens: nextXTokens oTokens: nextOTokens.! !

!testRun: #TerniLapilliGameTest #test25 stamp: 'IO 10/31/2020 20:50:06'!
PASSED!

!testRun: #TerniLapilliGameTest #test01 stamp: 'IO 10/31/2020 20:50:06'!
PASSED!

!testRun: #TerniLapilliGameTest #test02 stamp: 'IO 10/31/2020 20:50:06'!
PASSED!

!testRun: #TerniLapilliGameTest #test03 stamp: 'IO 10/31/2020 20:50:06'!
PASSED!

!testRun: #TerniLapilliGameTest #test04 stamp: 'IO 10/31/2020 20:50:06'!
PASSED!

!testRun: #TerniLapilliGameTest #test05 stamp: 'IO 10/31/2020 20:50:06'!
PASSED!

!testRun: #TerniLapilliGameTest #test06 stamp: 'IO 10/31/2020 20:50:06'!
PASSED!

!testRun: #TerniLapilliGameTest #test07 stamp: 'IO 10/31/2020 20:50:06'!
PASSED!

!testRun: #TerniLapilliGameTest #test08 stamp: 'IO 10/31/2020 20:50:06'!
PASSED!

!testRun: #TerniLapilliGameTest #test09 stamp: 'IO 10/31/2020 20:50:06'!
PASSED!

!testRun: #TerniLapilliGameTest #test10 stamp: 'IO 10/31/2020 20:50:06'!
PASSED!

!testRun: #TerniLapilliGameTest #test11 stamp: 'IO 10/31/2020 20:50:06'!
PASSED!

!testRun: #TerniLapilliGameTest #test12 stamp: 'IO 10/31/2020 20:50:06'!
PASSED!

!testRun: #TerniLapilliGameTest #test13 stamp: 'IO 10/31/2020 20:50:06'!
PASSED!

!testRun: #TerniLapilliGameTest #test14 stamp: 'IO 10/31/2020 20:50:06'!
PASSED!

!testRun: #TerniLapilliGameTest #test15 stamp: 'IO 10/31/2020 20:50:06'!
PASSED!

!testRun: #TerniLapilliGameTest #test16 stamp: 'IO 10/31/2020 20:50:06'!
PASSED!

!testRun: #TerniLapilliGameTest #test17 stamp: 'IO 10/31/2020 20:50:06'!
PASSED!

!testRun: #TerniLapilliGameTest #test18 stamp: 'IO 10/31/2020 20:50:06'!
PASSED!

!testRun: #TerniLapilliGameTest #test19 stamp: 'IO 10/31/2020 20:50:06'!
PASSED!

!testRun: #TerniLapilliGameTest #test20 stamp: 'IO 10/31/2020 20:50:06'!
PASSED!

!testRun: #TerniLapilliGameTest #test21 stamp: 'IO 10/31/2020 20:50:06'!
PASSED!

!testRun: #TerniLapilliGameTest #test22 stamp: 'IO 10/31/2020 20:50:06'!
PASSED!

!testRun: #TerniLapilliGameTest #test23 stamp: 'IO 10/31/2020 20:50:06'!
PASSED!

!testRun: #TerniLapilliGameTest #test24 stamp: 'IO 10/31/2020 20:50:06'!
PASSED!

!testRun: #TerniLapilliGameTest #test25 stamp: 'IO 10/31/2020 20:50:06'!
PASSED!
!TerniLapilliGameStateMovesO class methodsFor: 'as yet unclassified' stamp: 'IO 10/31/2020 20:50:11' prior: 50876334 overrides: 50876300!
withXTokens: nextXTokens oTokens: nextOTokens
	^self basicNew intializeWithXTokens: nextXTokens oTokens: nextOTokens.
! !
!TerniLapilliGameTest methodsFor: 'ilegal moves' stamp: 'IO 10/31/2020 20:51:02' prior: 50875313!
test25
	"o no puede mover en su tercer turno"
	| aGame |
	aGame := self createGameInMovePhase.
	
	
	self should: [aGame oMoves: (0@0) to: (1@0).] raise: Error withMessageText: TerniLapilliGame cannotMoveErrorMessage.

	! !
!TerniLapilliGameTest methodsFor: 'ilegal moves' stamp: 'IO 10/31/2020 20:51:30'!
test26
	"o no puede mover en su tercer turno"
	| aGame |
	aGame := self createGameInMovePhase.
	
	
	self should: [aGame oMoves: (0@0) to: (1@0).] raise: Error withMessageText: TerniLapilliGame cannotMoveErrorMessage.

	! !
!TerniLapilliGameTest methodsFor: 'ilegal moves' stamp: 'IO 10/31/2020 20:51:35' prior: 50876416!
test25
	"o no puede mover en su tercer turno"
	| aGame |
	aGame := TerniLapilliGame new.
	
	aGame xPutsOn: 0@0.
	aGame oPutsOn: 0@1.
	aGame xPutsOn: 1@0.
	aGame oPutsOn: 2@2.
	aGame xPutsOn: 2@1.

	self should: [aGame oMoves: (0@0) to: (1@0).] raise: Error withMessageText: TerniLapilliGame cannotMoveErrorMessage.

	! !

!testRun: #TerniLapilliGameTest #test25 stamp: 'IO 10/31/2020 20:51:40'!
PASSED!

!testRun: #TerniLapilliGameTest #test01 stamp: 'IO 10/31/2020 20:51:40'!
PASSED!

!testRun: #TerniLapilliGameTest #test02 stamp: 'IO 10/31/2020 20:51:40'!
PASSED!

!testRun: #TerniLapilliGameTest #test03 stamp: 'IO 10/31/2020 20:51:40'!
PASSED!

!testRun: #TerniLapilliGameTest #test04 stamp: 'IO 10/31/2020 20:51:40'!
PASSED!

!testRun: #TerniLapilliGameTest #test05 stamp: 'IO 10/31/2020 20:51:40'!
PASSED!

!testRun: #TerniLapilliGameTest #test06 stamp: 'IO 10/31/2020 20:51:40'!
PASSED!

!testRun: #TerniLapilliGameTest #test07 stamp: 'IO 10/31/2020 20:51:40'!
PASSED!

!testRun: #TerniLapilliGameTest #test08 stamp: 'IO 10/31/2020 20:51:40'!
PASSED!

!testRun: #TerniLapilliGameTest #test09 stamp: 'IO 10/31/2020 20:51:40'!
PASSED!

!testRun: #TerniLapilliGameTest #test10 stamp: 'IO 10/31/2020 20:51:40'!
PASSED!

!testRun: #TerniLapilliGameTest #test11 stamp: 'IO 10/31/2020 20:51:40'!
PASSED!

!testRun: #TerniLapilliGameTest #test12 stamp: 'IO 10/31/2020 20:51:40'!
PASSED!

!testRun: #TerniLapilliGameTest #test13 stamp: 'IO 10/31/2020 20:51:40'!
PASSED!

!testRun: #TerniLapilliGameTest #test14 stamp: 'IO 10/31/2020 20:51:40'!
PASSED!

!testRun: #TerniLapilliGameTest #test15 stamp: 'IO 10/31/2020 20:51:40'!
PASSED!

!testRun: #TerniLapilliGameTest #test16 stamp: 'IO 10/31/2020 20:51:40'!
PASSED!

!testRun: #TerniLapilliGameTest #test17 stamp: 'IO 10/31/2020 20:51:40'!
PASSED!

!testRun: #TerniLapilliGameTest #test18 stamp: 'IO 10/31/2020 20:51:40'!
PASSED!

!testRun: #TerniLapilliGameTest #test19 stamp: 'IO 10/31/2020 20:51:40'!
PASSED!

!testRun: #TerniLapilliGameTest #test20 stamp: 'IO 10/31/2020 20:51:40'!
PASSED!

!testRun: #TerniLapilliGameTest #test21 stamp: 'IO 10/31/2020 20:51:40'!
PASSED!

!testRun: #TerniLapilliGameTest #test22 stamp: 'IO 10/31/2020 20:51:40'!
PASSED!

!testRun: #TerniLapilliGameTest #test23 stamp: 'IO 10/31/2020 20:51:40'!
PASSED!

!testRun: #TerniLapilliGameTest #test24 stamp: 'IO 10/31/2020 20:51:40'!
PASSED!

!testRun: #TerniLapilliGameTest #test25 stamp: 'IO 10/31/2020 20:51:40'!
PASSED!

!testRun: #TerniLapilliGameTest #test26 stamp: 'IO 10/31/2020 20:51:40'!
FAILURE!

!testRun: #TerniLapilliGameTest #test26 stamp: 'IO 10/31/2020 20:51:41'!
FAILURE!
!TerniLapilliGameTest methodsFor: 'ilegal moves' stamp: 'IO 10/31/2020 20:52:56' prior: 50876426!
test26
	"o no puede mover en su tercer turno"
	| aGame |
	aGame := self createGameInMovePhase.
	
	"
	aGame xPutsOn: 0@1.
	aGame oPutsOn: 0@2.
	aGame xPutsOn: 1@2.
	aGame oPutsOn: 2@1.
	aGame xPutsOn: 2@0.
	aGame oPutsOn: 2@2."
	self should: [aGame xPutsOn: (1@1).] raise: Error withMessageText: TerniLapilliGame cannotPutErrorMessage.

	! !

!testRun: #TerniLapilliGameTest #test26 stamp: 'IO 10/31/2020 20:53:02'!
ERROR!
!TerniLapilliGame class methodsFor: 'error messages' stamp: 'IO 10/31/2020 20:53:23'!
cannotPutErrorMessage
	^'Cannot put'.! !

!testRun: #TerniLapilliGameTest #test26 stamp: 'IO 10/31/2020 20:53:26'!
FAILURE!
!TerniLapilliGameTest methodsFor: 'ilegal moves' stamp: 'IO 10/31/2020 20:53:39' prior: 50876522!
test26
	"o no puede mover en su tercer turno"
	| aGame |
	aGame := self createGameInMovePhase.
	
	self should: [aGame xPutsOn: (1@1).] raise: Error withMessageText: TerniLapilliGame cannotPutErrorMessage.

	! !
!TerniLapilliGameStatePutsX methodsFor: 'as yet unclassified' stamp: 'IO 10/31/2020 20:54:04' overrides: 50874050!
xPutsOn: aPosition
	xTokens add: aPosition.
	^self passTurn.
! !
!TerniLapilliGameStateMovesX methodsFor: 'as yet unclassified' stamp: 'IO 10/31/2020 20:54:28' overrides: 50874050!
xPutsOn: aPosition
	^self error: TerniLapilliGame cannotPutErrorMessage.

! !
!TerniLapilliGameStatePlaysX methodsFor: 'moves' stamp: 'IO 10/31/2020 20:54:38' prior: 50874050 overrides: 50873335!
xPutsOn: aPosition
	^self subclassResponsibility.
! !

!testRun: #TerniLapilliGameTest #test26 stamp: 'IO 10/31/2020 20:54:39'!
PASSED!

!testRun: #TerniLapilliGameTest #test01 stamp: 'IO 10/31/2020 20:54:39'!
PASSED!

!testRun: #TerniLapilliGameTest #test02 stamp: 'IO 10/31/2020 20:54:39'!
PASSED!

!testRun: #TerniLapilliGameTest #test03 stamp: 'IO 10/31/2020 20:54:39'!
PASSED!

!testRun: #TerniLapilliGameTest #test04 stamp: 'IO 10/31/2020 20:54:39'!
PASSED!

!testRun: #TerniLapilliGameTest #test05 stamp: 'IO 10/31/2020 20:54:39'!
PASSED!

!testRun: #TerniLapilliGameTest #test06 stamp: 'IO 10/31/2020 20:54:39'!
PASSED!

!testRun: #TerniLapilliGameTest #test07 stamp: 'IO 10/31/2020 20:54:39'!
PASSED!

!testRun: #TerniLapilliGameTest #test08 stamp: 'IO 10/31/2020 20:54:39'!
PASSED!

!testRun: #TerniLapilliGameTest #test09 stamp: 'IO 10/31/2020 20:54:39'!
PASSED!

!testRun: #TerniLapilliGameTest #test10 stamp: 'IO 10/31/2020 20:54:39'!
PASSED!

!testRun: #TerniLapilliGameTest #test11 stamp: 'IO 10/31/2020 20:54:39'!
PASSED!

!testRun: #TerniLapilliGameTest #test12 stamp: 'IO 10/31/2020 20:54:39'!
PASSED!

!testRun: #TerniLapilliGameTest #test13 stamp: 'IO 10/31/2020 20:54:39'!
PASSED!

!testRun: #TerniLapilliGameTest #test14 stamp: 'IO 10/31/2020 20:54:39'!
PASSED!

!testRun: #TerniLapilliGameTest #test15 stamp: 'IO 10/31/2020 20:54:39'!
PASSED!

!testRun: #TerniLapilliGameTest #test16 stamp: 'IO 10/31/2020 20:54:39'!
PASSED!

!testRun: #TerniLapilliGameTest #test17 stamp: 'IO 10/31/2020 20:54:39'!
PASSED!

!testRun: #TerniLapilliGameTest #test18 stamp: 'IO 10/31/2020 20:54:39'!
PASSED!

!testRun: #TerniLapilliGameTest #test19 stamp: 'IO 10/31/2020 20:54:39'!
PASSED!

!testRun: #TerniLapilliGameTest #test20 stamp: 'IO 10/31/2020 20:54:39'!
PASSED!

!testRun: #TerniLapilliGameTest #test21 stamp: 'IO 10/31/2020 20:54:39'!
PASSED!

!testRun: #TerniLapilliGameTest #test22 stamp: 'IO 10/31/2020 20:54:39'!
PASSED!

!testRun: #TerniLapilliGameTest #test23 stamp: 'IO 10/31/2020 20:54:39'!
PASSED!

!testRun: #TerniLapilliGameTest #test24 stamp: 'IO 10/31/2020 20:54:39'!
PASSED!

!testRun: #TerniLapilliGameTest #test25 stamp: 'IO 10/31/2020 20:54:39'!
PASSED!

!testRun: #TerniLapilliGameTest #test26 stamp: 'IO 10/31/2020 20:54:39'!
PASSED!
!TerniLapilliGameTest methodsFor: 'ilegal moves' stamp: 'IO 10/31/2020 20:55:26'!
test27
	"o no puede mover en su tercer turno"
	| aGame |
	aGame := self createGameInMovePhase.
	
	aGame xMoves: (0@1) to: (1@1).
	
	self should: [aGame oPutsOn: (1@1).] raise: Error withMessageText: TerniLapilliGame cannotPutErrorMessage.

	! !
!TerniLapilliGameTest methodsFor: 'ilegal moves' stamp: 'IO 10/31/2020 20:56:08' prior: 50876643!
test27
	"o no puede mover en su tercer turno"
	| aGame |
	aGame := self createGameInMovePhase.

	aGame xMoves: (0@1) to: (1@1).
	
	self should: [aGame oPutsOn: (0@1).] raise: Error withMessageText: TerniLapilliGame cannotPutErrorMessage.

	! !

!testRun: #TerniLapilliGameTest #test27 stamp: 'IO 10/31/2020 20:56:10'!
FAILURE!
!TerniLapilliGameStatePutsO methodsFor: 'as yet unclassified' stamp: 'IO 10/31/2020 20:56:29' overrides: 50873970!
oPutsOn: aPosition
	oTokens add: aPosition.
	^self passTurn.
! !
!TerniLapilliGameStateMovesO methodsFor: 'as yet unclassified' stamp: 'IO 10/31/2020 20:57:00' overrides: 50873970!
oPutsOn: aPosition
	^self error: TerniLapilliGame cannotPutErrorMessage.
! !

!testRun: #TerniLapilliGameTest #test27 stamp: 'IO 10/31/2020 20:57:02'!
PASSED!

!testRun: #TerniLapilliGameTest #test01 stamp: 'IO 10/31/2020 20:57:02'!
PASSED!

!testRun: #TerniLapilliGameTest #test02 stamp: 'IO 10/31/2020 20:57:02'!
PASSED!

!testRun: #TerniLapilliGameTest #test03 stamp: 'IO 10/31/2020 20:57:02'!
PASSED!

!testRun: #TerniLapilliGameTest #test04 stamp: 'IO 10/31/2020 20:57:02'!
PASSED!

!testRun: #TerniLapilliGameTest #test05 stamp: 'IO 10/31/2020 20:57:02'!
PASSED!

!testRun: #TerniLapilliGameTest #test06 stamp: 'IO 10/31/2020 20:57:02'!
PASSED!

!testRun: #TerniLapilliGameTest #test07 stamp: 'IO 10/31/2020 20:57:02'!
PASSED!

!testRun: #TerniLapilliGameTest #test08 stamp: 'IO 10/31/2020 20:57:02'!
PASSED!

!testRun: #TerniLapilliGameTest #test09 stamp: 'IO 10/31/2020 20:57:02'!
PASSED!

!testRun: #TerniLapilliGameTest #test10 stamp: 'IO 10/31/2020 20:57:02'!
PASSED!

!testRun: #TerniLapilliGameTest #test11 stamp: 'IO 10/31/2020 20:57:02'!
PASSED!

!testRun: #TerniLapilliGameTest #test12 stamp: 'IO 10/31/2020 20:57:02'!
PASSED!

!testRun: #TerniLapilliGameTest #test13 stamp: 'IO 10/31/2020 20:57:02'!
PASSED!

!testRun: #TerniLapilliGameTest #test14 stamp: 'IO 10/31/2020 20:57:02'!
PASSED!

!testRun: #TerniLapilliGameTest #test15 stamp: 'IO 10/31/2020 20:57:02'!
PASSED!

!testRun: #TerniLapilliGameTest #test16 stamp: 'IO 10/31/2020 20:57:02'!
PASSED!

!testRun: #TerniLapilliGameTest #test17 stamp: 'IO 10/31/2020 20:57:02'!
PASSED!

!testRun: #TerniLapilliGameTest #test18 stamp: 'IO 10/31/2020 20:57:02'!
PASSED!

!testRun: #TerniLapilliGameTest #test19 stamp: 'IO 10/31/2020 20:57:02'!
PASSED!

!testRun: #TerniLapilliGameTest #test20 stamp: 'IO 10/31/2020 20:57:02'!
PASSED!

!testRun: #TerniLapilliGameTest #test21 stamp: 'IO 10/31/2020 20:57:02'!
PASSED!

!testRun: #TerniLapilliGameTest #test22 stamp: 'IO 10/31/2020 20:57:02'!
PASSED!

!testRun: #TerniLapilliGameTest #test23 stamp: 'IO 10/31/2020 20:57:02'!
PASSED!

!testRun: #TerniLapilliGameTest #test24 stamp: 'IO 10/31/2020 20:57:02'!
PASSED!

!testRun: #TerniLapilliGameTest #test25 stamp: 'IO 10/31/2020 20:57:02'!
PASSED!

!testRun: #TerniLapilliGameTest #test26 stamp: 'IO 10/31/2020 20:57:02'!
PASSED!

!testRun: #TerniLapilliGameTest #test27 stamp: 'IO 10/31/2020 20:57:02'!
PASSED!

!testRun: #TerniLapilliGameTest #test27 stamp: 'IO 10/31/2020 20:57:51'!
PASSED!

!testRun: #TerniLapilliGameTest #test01 stamp: 'IO 10/31/2020 20:57:51'!
PASSED!

!testRun: #TerniLapilliGameTest #test02 stamp: 'IO 10/31/2020 20:57:51'!
PASSED!

!testRun: #TerniLapilliGameTest #test03 stamp: 'IO 10/31/2020 20:57:51'!
PASSED!

!testRun: #TerniLapilliGameTest #test04 stamp: 'IO 10/31/2020 20:57:51'!
PASSED!

!testRun: #TerniLapilliGameTest #test05 stamp: 'IO 10/31/2020 20:57:51'!
PASSED!

!testRun: #TerniLapilliGameTest #test06 stamp: 'IO 10/31/2020 20:57:51'!
PASSED!

!testRun: #TerniLapilliGameTest #test07 stamp: 'IO 10/31/2020 20:57:51'!
PASSED!

!testRun: #TerniLapilliGameTest #test08 stamp: 'IO 10/31/2020 20:57:51'!
PASSED!

!testRun: #TerniLapilliGameTest #test09 stamp: 'IO 10/31/2020 20:57:51'!
PASSED!

!testRun: #TerniLapilliGameTest #test10 stamp: 'IO 10/31/2020 20:57:51'!
PASSED!

!testRun: #TerniLapilliGameTest #test11 stamp: 'IO 10/31/2020 20:57:51'!
PASSED!

!testRun: #TerniLapilliGameTest #test12 stamp: 'IO 10/31/2020 20:57:51'!
PASSED!

!testRun: #TerniLapilliGameTest #test13 stamp: 'IO 10/31/2020 20:57:51'!
PASSED!

!testRun: #TerniLapilliGameTest #test14 stamp: 'IO 10/31/2020 20:57:51'!
PASSED!

!testRun: #TerniLapilliGameTest #test15 stamp: 'IO 10/31/2020 20:57:51'!
PASSED!

!testRun: #TerniLapilliGameTest #test16 stamp: 'IO 10/31/2020 20:57:51'!
PASSED!

!testRun: #TerniLapilliGameTest #test17 stamp: 'IO 10/31/2020 20:57:51'!
PASSED!

!testRun: #TerniLapilliGameTest #test18 stamp: 'IO 10/31/2020 20:57:51'!
PASSED!

!testRun: #TerniLapilliGameTest #test19 stamp: 'IO 10/31/2020 20:57:51'!
PASSED!

!testRun: #TerniLapilliGameTest #test20 stamp: 'IO 10/31/2020 20:57:51'!
PASSED!

!testRun: #TerniLapilliGameTest #test21 stamp: 'IO 10/31/2020 20:57:51'!
PASSED!

!testRun: #TerniLapilliGameTest #test22 stamp: 'IO 10/31/2020 20:57:51'!
PASSED!

!testRun: #TerniLapilliGameTest #test23 stamp: 'IO 10/31/2020 20:57:51'!
PASSED!

!testRun: #TerniLapilliGameTest #test24 stamp: 'IO 10/31/2020 20:57:51'!
PASSED!

!testRun: #TerniLapilliGameTest #test25 stamp: 'IO 10/31/2020 20:57:51'!
PASSED!

!testRun: #TerniLapilliGameTest #test26 stamp: 'IO 10/31/2020 20:57:51'!
PASSED!

!testRun: #TerniLapilliGameTest #test27 stamp: 'IO 10/31/2020 20:57:51'!
PASSED!
!TerniLapilliGameTest methodsFor: 'ilegal moves' stamp: 'IO 10/31/2020 20:59:54' prior: 50875237!
test24
	"o no puede mover en su segundo turno"
	| aGame |
	aGame := TerniLapilliGame new.
	
	aGame xPutsOn: 0@0.
	aGame oPutsOn: 0@1.
	aGame xPutsOn: 1@0.

	self should: [aGame oMoves: (0@0) to: (1@0).] raise: Error withMessageText: TerniLapilliGame cannotMoveErrorMessage.

	! !
!TerniLapilliGameTest methodsFor: 'ilegal moves' stamp: 'IO 10/31/2020 21:00:09' prior: 50876545!
test26
	"x no puedo poner despues de su tercer turno"
	| aGame |
	aGame := self createGameInMovePhase.
	
	self should: [aGame xPutsOn: (1@1).] raise: Error withMessageText: TerniLapilliGame cannotPutErrorMessage.

	! !
!TerniLapilliGameTest methodsFor: 'ilegal moves' stamp: 'IO 10/31/2020 21:00:17' prior: 50876654!
test27
	"o no puede poner despues de su tercer turno"
	| aGame |
	aGame := self createGameInMovePhase.

	aGame xMoves: (0@1) to: (1@1).
	
	self should: [aGame oPutsOn: (0@1).] raise: Error withMessageText: TerniLapilliGame cannotPutErrorMessage.

	! !
!TerniLapilliGameTest methodsFor: 'ilegal moves' stamp: 'IO 10/31/2020 21:01:00' prior: 50869700!
test09
	"X gana competando la segunda columna"
	| aGame |
	aGame := TerniLapilliGame new.
	
	aGame xPutsOn: 0@1.
	aGame oPutsOn: 0@2.
	aGame xPutsOn: 1@1.
	aGame oPutsOn: 1@2.
	aGame xPutsOn: 2@1.
	

! !
!TerniLapilliGameTest methodsFor: 'ilegal moves' stamp: 'IO 10/31/2020 21:01:11' prior: 50876856!
test09
	"X gana competando la segunda columna"
	| aGame |
	aGame := TerniLapilliGame new.
	
	aGame xPutsOn: 0@1.
	aGame oPutsOn: 0@2.
	aGame xPutsOn: 1@1.
	aGame oPutsOn: 1@2.
	aGame xPutsOn: 2@1.
	
	self assert: aGame xHasWon.
! !
!TerniLapilliGameTest methodsFor: 'ilegal moves' stamp: 'IO 10/31/2020 21:02:50'!
test28
	"O no puede poner jugar despues de que X gano"
	| aGame |
	aGame := TerniLapilliGame new.
	
	aGame xPutsOn: 0@1.
	aGame oPutsOn: 0@2.
	aGame xPutsOn: 1@1.
	aGame oPutsOn: 1@2.
	aGame xPutsOn: 2@1.
	
	
! !
!TerniLapilliGameTest methodsFor: 'ilegal moves' stamp: 'IO 10/31/2020 21:03:58' prior: 50876876!
test28
	"O no puede poner jugar despues de que X gano"
	| aGame |
	aGame := TerniLapilliGame new.
	
	aGame xPutsOn: 0@1.
	aGame oPutsOn: 0@2.
	aGame xPutsOn: 1@1.
	aGame oPutsOn: 1@2.
	aGame xPutsOn: 2@1.
	
	self should: [aGame oPutsOn: (2@2).] raise: Error withMessageText: TerniLapilliGame gameEndedErrorMessage.
! !

!testRun: #TerniLapilliGameTest #test28 stamp: 'IO 10/31/2020 21:04:02'!
ERROR!
!TerniLapilliGame class methodsFor: 'error messages' stamp: 'IO 10/31/2020 21:04:28'!
gameEndedErrorMessage
	^'Game ended'.! !

!testRun: #TerniLapilliGameTest #test28 stamp: 'IO 10/31/2020 21:04:31'!
FAILURE!
!TerniLapilliGameStatePutsO methodsFor: 'as yet unclassified' stamp: 'IO 10/31/2020 21:06:32' prior: 50876668 overrides: 50873970!
oPutsOn: aPosition
	(xTokens areInWinningPosition) ifTrue: [^self error: TerniLapilliGame gameEndedErrorMessage].
	oTokens add: aPosition.
	^self passTurn.
! !

!testRun: #TerniLapilliGameTest #test28 stamp: 'IO 10/31/2020 21:06:33'!
PASSED!

!testRun: #TerniLapilliGameTest #test01 stamp: 'IO 10/31/2020 21:06:33'!
PASSED!

!testRun: #TerniLapilliGameTest #test02 stamp: 'IO 10/31/2020 21:06:33'!
PASSED!

!testRun: #TerniLapilliGameTest #test03 stamp: 'IO 10/31/2020 21:06:33'!
PASSED!

!testRun: #TerniLapilliGameTest #test04 stamp: 'IO 10/31/2020 21:06:33'!
PASSED!

!testRun: #TerniLapilliGameTest #test05 stamp: 'IO 10/31/2020 21:06:33'!
PASSED!

!testRun: #TerniLapilliGameTest #test06 stamp: 'IO 10/31/2020 21:06:33'!
PASSED!

!testRun: #TerniLapilliGameTest #test07 stamp: 'IO 10/31/2020 21:06:33'!
PASSED!

!testRun: #TerniLapilliGameTest #test08 stamp: 'IO 10/31/2020 21:06:33'!
PASSED!

!testRun: #TerniLapilliGameTest #test09 stamp: 'IO 10/31/2020 21:06:33'!
PASSED!

!testRun: #TerniLapilliGameTest #test10 stamp: 'IO 10/31/2020 21:06:33'!
PASSED!

!testRun: #TerniLapilliGameTest #test11 stamp: 'IO 10/31/2020 21:06:33'!
PASSED!

!testRun: #TerniLapilliGameTest #test12 stamp: 'IO 10/31/2020 21:06:33'!
PASSED!

!testRun: #TerniLapilliGameTest #test13 stamp: 'IO 10/31/2020 21:06:33'!
PASSED!

!testRun: #TerniLapilliGameTest #test14 stamp: 'IO 10/31/2020 21:06:33'!
PASSED!

!testRun: #TerniLapilliGameTest #test15 stamp: 'IO 10/31/2020 21:06:33'!
PASSED!

!testRun: #TerniLapilliGameTest #test16 stamp: 'IO 10/31/2020 21:06:33'!
PASSED!

!testRun: #TerniLapilliGameTest #test17 stamp: 'IO 10/31/2020 21:06:33'!
PASSED!

!testRun: #TerniLapilliGameTest #test18 stamp: 'IO 10/31/2020 21:06:33'!
PASSED!

!testRun: #TerniLapilliGameTest #test19 stamp: 'IO 10/31/2020 21:06:33'!
PASSED!

!testRun: #TerniLapilliGameTest #test20 stamp: 'IO 10/31/2020 21:06:33'!
PASSED!

!testRun: #TerniLapilliGameTest #test21 stamp: 'IO 10/31/2020 21:06:33'!
PASSED!

!testRun: #TerniLapilliGameTest #test22 stamp: 'IO 10/31/2020 21:06:33'!
PASSED!

!testRun: #TerniLapilliGameTest #test23 stamp: 'IO 10/31/2020 21:06:33'!
PASSED!

!testRun: #TerniLapilliGameTest #test24 stamp: 'IO 10/31/2020 21:06:33'!
PASSED!

!testRun: #TerniLapilliGameTest #test25 stamp: 'IO 10/31/2020 21:06:33'!
PASSED!

!testRun: #TerniLapilliGameTest #test26 stamp: 'IO 10/31/2020 21:06:33'!
PASSED!

!testRun: #TerniLapilliGameTest #test27 stamp: 'IO 10/31/2020 21:06:33'!
PASSED!

!testRun: #TerniLapilliGameTest #test28 stamp: 'IO 10/31/2020 21:06:33'!
PASSED!

TerniLapilliGameState subclass: #TerniLapilliGameStateOver
	instanceVariableNames: 'xTokens oTokens'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Terni Lapilli'!

TerniLapilliGameState subclass: #TerniLapilliGameStateOver
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Terni Lapilli'!

!classDefinition: #TerniLapilliGameStateOver category: 'Terni Lapilli' stamp: 'IO 10/31/2020 21:09:42'!
TerniLapilliGameState subclass: #TerniLapilliGameStateOver
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Terni Lapilli'!
!TerniLapilliGameStateOver methodsFor: 'no messages' stamp: 'IO 10/31/2020 21:10:16' overrides: 50873286!
oPutsOn: aPosition
	^self error: TerniLapilliGame gameEndedErrorMessage.
! !
!TerniLapilliGameStatePlaysO class methodsFor: 'as yet unclassified' stamp: 'IO 10/31/2020 21:11:24' prior: 50876300 overrides: 50872972!
withXTokens: nextXTokens oTokens: nextOTokens
	(nextXTokens areInWinningPosition) ifTrue: [^TerniLapilliGameStateOver].
	(nextOTokens size < 3) ifTrue: [^TerniLapilliGameStatePutsO withXTokens: nextXTokens oTokens: nextOTokens].
	^TerniLapilliGameStateMovesO withXTokens: nextXTokens oTokens: nextOTokens.
! !
!TerniLapilliGameStatePutsO methodsFor: 'as yet unclassified' stamp: 'IO 10/31/2020 21:11:33' prior: 50876910 overrides: 50873970!
oPutsOn: aPosition
	oTokens add: aPosition.
	^self passTurn.
! !

!testRun: #TerniLapilliGameTest #test28 stamp: 'IO 10/31/2020 21:11:34'!
FAILURE!
!TerniLapilliGameStatePlaysO class methodsFor: 'as yet unclassified' stamp: 'IO 10/31/2020 21:12:17' prior: 50877019 overrides: 50872972!
withXTokens: nextXTokens oTokens: nextOTokens
	(nextXTokens areInWinningPosition) ifTrue: [^TerniLapilliGameStateOver withXTokens: nextXTokens oTokens: nextOTokens].
	(nextOTokens size < 3) ifTrue: [^TerniLapilliGameStatePutsO withXTokens: nextXTokens oTokens: nextOTokens].
	^TerniLapilliGameStateMovesO withXTokens: nextXTokens oTokens: nextOTokens.
! !

!testRun: #TerniLapilliGameTest #test28 stamp: 'IO 10/31/2020 21:12:57'!
PASSED!

!testRun: #TerniLapilliGameTest #test01 stamp: 'IO 10/31/2020 21:12:57'!
PASSED!

!testRun: #TerniLapilliGameTest #test02 stamp: 'IO 10/31/2020 21:12:57'!
PASSED!

!testRun: #TerniLapilliGameTest #test03 stamp: 'IO 10/31/2020 21:12:57'!
PASSED!

!testRun: #TerniLapilliGameTest #test04 stamp: 'IO 10/31/2020 21:12:57'!
PASSED!

!testRun: #TerniLapilliGameTest #test05 stamp: 'IO 10/31/2020 21:12:57'!
PASSED!

!testRun: #TerniLapilliGameTest #test06 stamp: 'IO 10/31/2020 21:12:57'!
PASSED!

!testRun: #TerniLapilliGameTest #test07 stamp: 'IO 10/31/2020 21:12:57'!
PASSED!

!testRun: #TerniLapilliGameTest #test08 stamp: 'IO 10/31/2020 21:12:57'!
PASSED!

!testRun: #TerniLapilliGameTest #test09 stamp: 'IO 10/31/2020 21:12:57'!
PASSED!

!testRun: #TerniLapilliGameTest #test10 stamp: 'IO 10/31/2020 21:12:57'!
PASSED!

!testRun: #TerniLapilliGameTest #test11 stamp: 'IO 10/31/2020 21:12:57'!
PASSED!

!testRun: #TerniLapilliGameTest #test12 stamp: 'IO 10/31/2020 21:12:57'!
PASSED!

!testRun: #TerniLapilliGameTest #test13 stamp: 'IO 10/31/2020 21:12:57'!
PASSED!

!testRun: #TerniLapilliGameTest #test14 stamp: 'IO 10/31/2020 21:12:57'!
PASSED!

!testRun: #TerniLapilliGameTest #test15 stamp: 'IO 10/31/2020 21:12:57'!
PASSED!

!testRun: #TerniLapilliGameTest #test16 stamp: 'IO 10/31/2020 21:12:57'!
PASSED!

!testRun: #TerniLapilliGameTest #test17 stamp: 'IO 10/31/2020 21:12:57'!
PASSED!

!testRun: #TerniLapilliGameTest #test18 stamp: 'IO 10/31/2020 21:12:57'!
PASSED!

!testRun: #TerniLapilliGameTest #test19 stamp: 'IO 10/31/2020 21:12:57'!
PASSED!

!testRun: #TerniLapilliGameTest #test20 stamp: 'IO 10/31/2020 21:12:57'!
PASSED!

!testRun: #TerniLapilliGameTest #test21 stamp: 'IO 10/31/2020 21:12:57'!
PASSED!

!testRun: #TerniLapilliGameTest #test22 stamp: 'IO 10/31/2020 21:12:57'!
PASSED!

!testRun: #TerniLapilliGameTest #test23 stamp: 'IO 10/31/2020 21:12:57'!
PASSED!

!testRun: #TerniLapilliGameTest #test24 stamp: 'IO 10/31/2020 21:12:57'!
PASSED!

!testRun: #TerniLapilliGameTest #test25 stamp: 'IO 10/31/2020 21:12:57'!
PASSED!

!testRun: #TerniLapilliGameTest #test26 stamp: 'IO 10/31/2020 21:12:57'!
PASSED!

!testRun: #TerniLapilliGameTest #test27 stamp: 'IO 10/31/2020 21:12:57'!
PASSED!

!testRun: #TerniLapilliGameTest #test28 stamp: 'IO 10/31/2020 21:12:57'!
PASSED!
!TerniLapilliGameTest methodsFor: 'ilegal moves' stamp: 'IO 10/31/2020 21:14:01' prior: 50876886!
test28
	"O no puede poner jugar despues de que X gano"
	| aGame |
	aGame := TerniLapilliGame new.
	
	aGame xPutsOn: 0@1.
	aGame oPutsOn: 0@2.
	aGame xPutsOn: 1@1.
	aGame oPutsOn: 1@2.
	aGame xPutsOn: 2@1.
	
	self should: [aGame oPutsOn: (2@2).] raise: Error withMessageText: TerniLapilliGame gameEndedErrorMessage.
! !
!TerniLapilliGameTest methodsFor: 'ilegal moves' stamp: 'IO 10/31/2020 21:18:02'!
test29
	"O no puede poner mover despues de que X gano"
	| aGame |
	aGame := TerniLapilliGame new.
	
	aGame xPutsOn: 0@0.
	aGame oPutsOn: 1@0.
	aGame xPutsOn: 1@1.
	aGame oPutsOn: 2@1.
	aGame xPutsOn: 0@2.
	aGame oPutsOn: 2@2.
	
	aGame xMoves: (1@1) to: (0@1).
	
	self should: [aGame oMoves: (2@2) to: (1@2)] raise: Error withMessageText: TerniLapilliGame gameEndedErrorMessage.
! !

!testRun: #TerniLapilliGameTest #test29 stamp: 'IO 10/31/2020 21:18:04'!
FAILURE!

!testRun: #TerniLapilliGameTest #test29 stamp: 'IO 10/31/2020 21:18:10'!
FAILURE!

aGame!
!TerniLapilliGameStateOver methodsFor: 'as yet unclassified' stamp: 'IO 10/31/2020 21:20:12' overrides: 50873039!
oMoves: sourcePosition to: destinationPosition
	^self error: TerniLapilliGame gameEndedErrorMessage.
! !

!testRun: #TerniLapilliGameTest #test29 stamp: 'IO 10/31/2020 21:20:15'!
PASSED!

!testRun: #TerniLapilliGameTest #test01 stamp: 'IO 10/31/2020 21:20:15'!
PASSED!

!testRun: #TerniLapilliGameTest #test02 stamp: 'IO 10/31/2020 21:20:15'!
PASSED!

!testRun: #TerniLapilliGameTest #test03 stamp: 'IO 10/31/2020 21:20:15'!
PASSED!

!testRun: #TerniLapilliGameTest #test04 stamp: 'IO 10/31/2020 21:20:15'!
PASSED!

!testRun: #TerniLapilliGameTest #test05 stamp: 'IO 10/31/2020 21:20:15'!
PASSED!

!testRun: #TerniLapilliGameTest #test06 stamp: 'IO 10/31/2020 21:20:15'!
PASSED!

!testRun: #TerniLapilliGameTest #test07 stamp: 'IO 10/31/2020 21:20:15'!
PASSED!

!testRun: #TerniLapilliGameTest #test08 stamp: 'IO 10/31/2020 21:20:15'!
PASSED!

!testRun: #TerniLapilliGameTest #test09 stamp: 'IO 10/31/2020 21:20:15'!
PASSED!

!testRun: #TerniLapilliGameTest #test10 stamp: 'IO 10/31/2020 21:20:15'!
PASSED!

!testRun: #TerniLapilliGameTest #test11 stamp: 'IO 10/31/2020 21:20:15'!
PASSED!

!testRun: #TerniLapilliGameTest #test12 stamp: 'IO 10/31/2020 21:20:15'!
PASSED!

!testRun: #TerniLapilliGameTest #test13 stamp: 'IO 10/31/2020 21:20:15'!
PASSED!

!testRun: #TerniLapilliGameTest #test14 stamp: 'IO 10/31/2020 21:20:15'!
PASSED!

!testRun: #TerniLapilliGameTest #test15 stamp: 'IO 10/31/2020 21:20:15'!
PASSED!

!testRun: #TerniLapilliGameTest #test16 stamp: 'IO 10/31/2020 21:20:15'!
PASSED!

!testRun: #TerniLapilliGameTest #test17 stamp: 'IO 10/31/2020 21:20:15'!
PASSED!

!testRun: #TerniLapilliGameTest #test18 stamp: 'IO 10/31/2020 21:20:15'!
PASSED!

!testRun: #TerniLapilliGameTest #test19 stamp: 'IO 10/31/2020 21:20:15'!
PASSED!

!testRun: #TerniLapilliGameTest #test20 stamp: 'IO 10/31/2020 21:20:15'!
PASSED!

!testRun: #TerniLapilliGameTest #test21 stamp: 'IO 10/31/2020 21:20:15'!
PASSED!

!testRun: #TerniLapilliGameTest #test22 stamp: 'IO 10/31/2020 21:20:15'!
PASSED!

!testRun: #TerniLapilliGameTest #test23 stamp: 'IO 10/31/2020 21:20:15'!
PASSED!

!testRun: #TerniLapilliGameTest #test24 stamp: 'IO 10/31/2020 21:20:15'!
PASSED!

!testRun: #TerniLapilliGameTest #test25 stamp: 'IO 10/31/2020 21:20:15'!
PASSED!

!testRun: #TerniLapilliGameTest #test26 stamp: 'IO 10/31/2020 21:20:15'!
PASSED!

!testRun: #TerniLapilliGameTest #test27 stamp: 'IO 10/31/2020 21:20:15'!
PASSED!

!testRun: #TerniLapilliGameTest #test28 stamp: 'IO 10/31/2020 21:20:15'!
PASSED!

!testRun: #TerniLapilliGameTest #test29 stamp: 'IO 10/31/2020 21:20:15'!
PASSED!
!TerniLapilliGameTest methodsFor: 'ilegal moves' stamp: 'IO 10/31/2020 21:20:57' prior: 50877144!
test29
	"X no puede poner mover despues de que O gano"
	| aGame |
	aGame := TerniLapilliGame new.
	
	aGame xPutsOn: 0@0.
	aGame oPutsOn: 2@0.
	aGame xPutsOn: 1@1.
	aGame oPutsOn: 2@1.
	aGame xPutsOn: 0@2.
	aGame oPutsOn: 2@2.

	self should: [aGame xMoves: (1@1) to: (0@1).] raise: Error withMessageText: TerniLapilliGame gameEndedErrorMessage.
! !
!TerniLapilliGameTest methodsFor: 'ilegal moves' stamp: 'IO 10/31/2020 21:21:06' prior: 50877249!
test29
	"O no puede poner mover despues de que X gano"
	| aGame |
	aGame := TerniLapilliGame new.
	
	aGame xPutsOn: 0@0.
	aGame oPutsOn: 1@0.
	aGame xPutsOn: 1@1.
	aGame oPutsOn: 2@1.
	aGame xPutsOn: 0@2.
	aGame oPutsOn: 2@2.
	
	aGame xMoves: (1@1) to: (0@1).
	
	self should: [aGame oMoves: (2@2) to: (1@2)] raise: Error withMessageText: TerniLapilliGame gameEndedErrorMessage.
! !
!TerniLapilliGameTest methodsFor: 'ilegal moves' stamp: 'IO 10/31/2020 21:21:14'!
test30
	"X no puede poner mover despues de que O gano"
	| aGame |
	aGame := TerniLapilliGame new.
	
	aGame xPutsOn: 0@0.
	aGame oPutsOn: 2@0.
	aGame xPutsOn: 1@1.
	aGame oPutsOn: 2@1.
	aGame xPutsOn: 0@2.
	aGame oPutsOn: 2@2.

	self should: [aGame xMoves: (1@1) to: (0@1).] raise: Error withMessageText: TerniLapilliGame gameEndedErrorMessage.
! !

!testRun: #TerniLapilliGameTest #test30 stamp: 'IO 10/31/2020 21:21:16'!
FAILURE!
!TerniLapilliGameStateOver methodsFor: 'as yet unclassified' stamp: 'IO 10/31/2020 21:21:37' overrides: 50872903!
xMoves: sourcePosition to: destinationPosition
	^self error: TerniLapilliGame gameEndedErrorMessage.
! !

!testRun: #TerniLapilliGameTest #test30 stamp: 'IO 10/31/2020 21:21:38'!
FAILURE!
!TerniLapilliGameStatePlaysX class methodsFor: 'as yet unclassified' stamp: 'IO 10/31/2020 21:22:09' prior: 50876012 overrides: 50872972!
withXTokens: nextXTokens oTokens: nextOTokens
	(nextOTokens areInWinningPosition) ifTrue: [^TerniLapilliGameStateOver withXTokens: nextXTokens oTokens: nextOTokens].
	(nextXTokens size < 3) ifTrue: [^TerniLapilliGameStatePutsX withXTokens: nextXTokens oTokens: nextOTokens].
	^TerniLapilliGameStateMovesX withXTokens: nextXTokens oTokens: nextOTokens.
! !

!testRun: #TerniLapilliGameTest #test30 stamp: 'IO 10/31/2020 21:22:10'!
PASSED!

!testRun: #TerniLapilliGameTest #test01 stamp: 'IO 10/31/2020 21:22:10'!
PASSED!

!testRun: #TerniLapilliGameTest #test02 stamp: 'IO 10/31/2020 21:22:10'!
PASSED!

!testRun: #TerniLapilliGameTest #test03 stamp: 'IO 10/31/2020 21:22:10'!
PASSED!

!testRun: #TerniLapilliGameTest #test04 stamp: 'IO 10/31/2020 21:22:10'!
PASSED!

!testRun: #TerniLapilliGameTest #test05 stamp: 'IO 10/31/2020 21:22:10'!
PASSED!

!testRun: #TerniLapilliGameTest #test06 stamp: 'IO 10/31/2020 21:22:10'!
PASSED!

!testRun: #TerniLapilliGameTest #test07 stamp: 'IO 10/31/2020 21:22:10'!
PASSED!

!testRun: #TerniLapilliGameTest #test08 stamp: 'IO 10/31/2020 21:22:10'!
PASSED!

!testRun: #TerniLapilliGameTest #test09 stamp: 'IO 10/31/2020 21:22:10'!
PASSED!

!testRun: #TerniLapilliGameTest #test10 stamp: 'IO 10/31/2020 21:22:10'!
PASSED!

!testRun: #TerniLapilliGameTest #test11 stamp: 'IO 10/31/2020 21:22:11'!
PASSED!

!testRun: #TerniLapilliGameTest #test12 stamp: 'IO 10/31/2020 21:22:11'!
PASSED!

!testRun: #TerniLapilliGameTest #test13 stamp: 'IO 10/31/2020 21:22:11'!
PASSED!

!testRun: #TerniLapilliGameTest #test14 stamp: 'IO 10/31/2020 21:22:11'!
PASSED!

!testRun: #TerniLapilliGameTest #test15 stamp: 'IO 10/31/2020 21:22:11'!
PASSED!

!testRun: #TerniLapilliGameTest #test16 stamp: 'IO 10/31/2020 21:22:11'!
PASSED!

!testRun: #TerniLapilliGameTest #test17 stamp: 'IO 10/31/2020 21:22:11'!
PASSED!

!testRun: #TerniLapilliGameTest #test18 stamp: 'IO 10/31/2020 21:22:11'!
PASSED!

!testRun: #TerniLapilliGameTest #test19 stamp: 'IO 10/31/2020 21:22:11'!
PASSED!

!testRun: #TerniLapilliGameTest #test20 stamp: 'IO 10/31/2020 21:22:11'!
PASSED!

!testRun: #TerniLapilliGameTest #test21 stamp: 'IO 10/31/2020 21:22:11'!
PASSED!

!testRun: #TerniLapilliGameTest #test22 stamp: 'IO 10/31/2020 21:22:11'!
PASSED!

!testRun: #TerniLapilliGameTest #test23 stamp: 'IO 10/31/2020 21:22:11'!
PASSED!

!testRun: #TerniLapilliGameTest #test24 stamp: 'IO 10/31/2020 21:22:11'!
PASSED!

!testRun: #TerniLapilliGameTest #test25 stamp: 'IO 10/31/2020 21:22:11'!
PASSED!

!testRun: #TerniLapilliGameTest #test26 stamp: 'IO 10/31/2020 21:22:11'!
PASSED!

!testRun: #TerniLapilliGameTest #test27 stamp: 'IO 10/31/2020 21:22:11'!
PASSED!

!testRun: #TerniLapilliGameTest #test28 stamp: 'IO 10/31/2020 21:22:11'!
PASSED!

!testRun: #TerniLapilliGameTest #test29 stamp: 'IO 10/31/2020 21:22:11'!
PASSED!

!testRun: #TerniLapilliGameTest #test30 stamp: 'IO 10/31/2020 21:22:11'!
PASSED!
!TerniLapilliGameTest methodsFor: 'ilegal moves' stamp: 'IO 10/31/2020 21:23:56' prior: 50877131!
test28
	"O no puede poner despues de que X gano"
	| aGame |
	aGame := TerniLapilliGame new.
	
	aGame xPutsOn: 0@1.
	aGame oPutsOn: 0@2.
	aGame xPutsOn: 1@1.
	aGame oPutsOn: 1@2.
	aGame xPutsOn: 2@1.
	
	self should: [aGame oPutsOn: (2@2).] raise: Error withMessageText: TerniLapilliGame gameEndedErrorMessage.
! !
!TerniLapilliGameTest methodsFor: 'ilegal moves' stamp: 'IO 10/31/2020 21:24:02' prior: 50877263!
test29
	"O no puede mover despues de que X gano"
	| aGame |
	aGame := TerniLapilliGame new.
	
	aGame xPutsOn: 0@0.
	aGame oPutsOn: 1@0.
	aGame xPutsOn: 1@1.
	aGame oPutsOn: 2@1.
	aGame xPutsOn: 0@2.
	aGame oPutsOn: 2@2.
	
	aGame xMoves: (1@1) to: (0@1).
	
	self should: [aGame oMoves: (2@2) to: (1@2)] raise: Error withMessageText: TerniLapilliGame gameEndedErrorMessage.
! !
!TerniLapilliGameTest methodsFor: 'ilegal moves' stamp: 'IO 10/31/2020 21:24:06' prior: 50877278!
test30
	"X no puede mover despues de que O gano"
	| aGame |
	aGame := TerniLapilliGame new.
	
	aGame xPutsOn: 0@0.
	aGame oPutsOn: 2@0.
	aGame xPutsOn: 1@1.
	aGame oPutsOn: 2@1.
	aGame xPutsOn: 0@2.
	aGame oPutsOn: 2@2.

	self should: [aGame xMoves: (1@1) to: (0@1).] raise: Error withMessageText: TerniLapilliGame gameEndedErrorMessage.
! !
!TerniLapilliGameTest methodsFor: 'ilegal moves' stamp: 'IO 10/31/2020 21:24:27' prior: 50877429!
test30
	"X no puede mover despues de que O gano"
	| aGame |
	aGame := TerniLapilliGame new.
	
	aGame xPutsOn: 0@0.
	aGame oPutsOn: 2@0.
	aGame xPutsOn: 1@1.
	aGame oPutsOn: 2@1.
	aGame xPutsOn: 0@2.
	aGame oPutsOn: 2@2.

	self should: [aGame xPutsOn: (0@1).] raise: Error withMessageText: TerniLapilliGame gameEndedErrorMessage.
! !

!testRun: #TerniLapilliGameTest #test30 stamp: 'IO 10/31/2020 21:24:28'!
FAILURE!
!TerniLapilliGameTest methodsFor: 'ilegal moves' stamp: 'IO 10/31/2020 21:24:34' prior: 50877443!
test30
	"X no puede poner despues de que O gano"
	| aGame |
	aGame := TerniLapilliGame new.
	
	aGame xPutsOn: 0@0.
	aGame oPutsOn: 2@0.
	aGame xPutsOn: 1@1.
	aGame oPutsOn: 2@1.
	aGame xPutsOn: 0@2.
	aGame oPutsOn: 2@2.

	self should: [aGame xPutsOn: (0@1).] raise: Error withMessageText: TerniLapilliGame gameEndedErrorMessage.
! !
!TerniLapilliGameTest methodsFor: 'ilegal moves' stamp: 'IO 10/31/2020 21:24:46' prior: 50877460!
test30
	"X no puede mover despues de que O gano"
	| aGame |
	aGame := TerniLapilliGame new.
	
	aGame xPutsOn: 0@0.
	aGame oPutsOn: 2@0.
	aGame xPutsOn: 1@1.
	aGame oPutsOn: 2@1.
	aGame xPutsOn: 0@2.
	aGame oPutsOn: 2@2.

	self should: [aGame xMoves: (1@1) to: (0@1).] raise: Error withMessageText: TerniLapilliGame gameEndedErrorMessage.
! !
!TerniLapilliGameTest methodsFor: 'ilegal moves' stamp: 'IO 10/31/2020 21:24:52'!
test31
	"X no puede poner despues de que O gano"
	| aGame |
	aGame := TerniLapilliGame new.
	
	aGame xPutsOn: 0@0.
	aGame oPutsOn: 2@0.
	aGame xPutsOn: 1@1.
	aGame oPutsOn: 2@1.
	aGame xPutsOn: 0@2.
	aGame oPutsOn: 2@2.

	self should: [aGame xPutsOn: (0@1).] raise: Error withMessageText: TerniLapilliGame gameEndedErrorMessage.
! !

!testRun: #TerniLapilliGameTest #test31 stamp: 'IO 10/31/2020 21:24:53'!
FAILURE!
!TerniLapilliGameStateOver methodsFor: 'as yet unclassified' stamp: 'IO 10/31/2020 21:25:03' overrides: 50873335!
xPutsOn: aPosition
	^self error: TerniLapilliGame gameEndedErrorMessage.
! !

!testRun: #TerniLapilliGameTest #test31 stamp: 'IO 10/31/2020 21:25:05'!
PASSED!

!testRun: #TerniLapilliGameTest #test01 stamp: 'IO 10/31/2020 21:25:05'!
PASSED!

!testRun: #TerniLapilliGameTest #test02 stamp: 'IO 10/31/2020 21:25:05'!
PASSED!

!testRun: #TerniLapilliGameTest #test03 stamp: 'IO 10/31/2020 21:25:05'!
PASSED!

!testRun: #TerniLapilliGameTest #test04 stamp: 'IO 10/31/2020 21:25:05'!
PASSED!

!testRun: #TerniLapilliGameTest #test05 stamp: 'IO 10/31/2020 21:25:05'!
PASSED!

!testRun: #TerniLapilliGameTest #test06 stamp: 'IO 10/31/2020 21:25:05'!
PASSED!

!testRun: #TerniLapilliGameTest #test07 stamp: 'IO 10/31/2020 21:25:05'!
PASSED!

!testRun: #TerniLapilliGameTest #test08 stamp: 'IO 10/31/2020 21:25:05'!
PASSED!

!testRun: #TerniLapilliGameTest #test09 stamp: 'IO 10/31/2020 21:25:05'!
PASSED!

!testRun: #TerniLapilliGameTest #test10 stamp: 'IO 10/31/2020 21:25:05'!
PASSED!

!testRun: #TerniLapilliGameTest #test11 stamp: 'IO 10/31/2020 21:25:05'!
PASSED!

!testRun: #TerniLapilliGameTest #test12 stamp: 'IO 10/31/2020 21:25:05'!
PASSED!

!testRun: #TerniLapilliGameTest #test13 stamp: 'IO 10/31/2020 21:25:05'!
PASSED!

!testRun: #TerniLapilliGameTest #test14 stamp: 'IO 10/31/2020 21:25:05'!
PASSED!

!testRun: #TerniLapilliGameTest #test15 stamp: 'IO 10/31/2020 21:25:05'!
PASSED!

!testRun: #TerniLapilliGameTest #test16 stamp: 'IO 10/31/2020 21:25:05'!
PASSED!

!testRun: #TerniLapilliGameTest #test17 stamp: 'IO 10/31/2020 21:25:05'!
PASSED!

!testRun: #TerniLapilliGameTest #test18 stamp: 'IO 10/31/2020 21:25:05'!
PASSED!

!testRun: #TerniLapilliGameTest #test19 stamp: 'IO 10/31/2020 21:25:05'!
PASSED!

!testRun: #TerniLapilliGameTest #test20 stamp: 'IO 10/31/2020 21:25:05'!
PASSED!

!testRun: #TerniLapilliGameTest #test21 stamp: 'IO 10/31/2020 21:25:05'!
PASSED!

!testRun: #TerniLapilliGameTest #test22 stamp: 'IO 10/31/2020 21:25:05'!
PASSED!

!testRun: #TerniLapilliGameTest #test23 stamp: 'IO 10/31/2020 21:25:05'!
PASSED!

!testRun: #TerniLapilliGameTest #test24 stamp: 'IO 10/31/2020 21:25:05'!
PASSED!

!testRun: #TerniLapilliGameTest #test25 stamp: 'IO 10/31/2020 21:25:05'!
PASSED!

!testRun: #TerniLapilliGameTest #test26 stamp: 'IO 10/31/2020 21:25:05'!
PASSED!

!testRun: #TerniLapilliGameTest #test27 stamp: 'IO 10/31/2020 21:25:05'!
PASSED!

!testRun: #TerniLapilliGameTest #test28 stamp: 'IO 10/31/2020 21:25:05'!
PASSED!

!testRun: #TerniLapilliGameTest #test29 stamp: 'IO 10/31/2020 21:25:05'!
PASSED!

!testRun: #TerniLapilliGameTest #test30 stamp: 'IO 10/31/2020 21:25:05'!
PASSED!

!testRun: #TerniLapilliGameTest #test31 stamp: 'IO 10/31/2020 21:25:05'!
PASSED!
!TerniLapilliGameTest methodsFor: 'ilegal moves' stamp: 'IO 10/31/2020 21:26:27'!
test32
	"X no puede poner en un lugar ocupado"
	| aGame |
	aGame := TerniLapilliGame new.
	
	aGame xPutsOn: 0@0.
	aGame oPutsOn: 2@0.

	self should: [	aGame xPutsOn: 0@0.] raise: Error withMessageText: TerniLapilliGame gameEndedErrorMessage.
! !

!testRun: #TerniLapilliGameTest #test32 stamp: 'IO 10/31/2020 21:28:04'!
FAILURE!
!TerniLapilliGameTest methodsFor: 'ilegal positions' stamp: 'IO 10/31/2020 21:28:11' prior: 50877592!
test32
	"X no puede poner en un lugar ocupado"
	
	"
	| aGame |
	aGame := TerniLapilliGame new.
	
	aGame xPutsOn: 0@0.
	aGame oPutsOn: 2@0.

	self should: [	aGame xPutsOn: 0@0.] raise: Error withMessageText: TerniLapilliGame gameEndedErrorMessage.
	"
! !

!testRun: #TerniLapilliGameTest #test32 stamp: 'IO 10/31/2020 21:28:12'!
PASSED!

!testRun: #TerniLapilliGameTest #test01 stamp: 'IO 10/31/2020 21:28:12'!
PASSED!

!testRun: #TerniLapilliGameTest #test02 stamp: 'IO 10/31/2020 21:28:12'!
PASSED!

!testRun: #TerniLapilliGameTest #test03 stamp: 'IO 10/31/2020 21:28:12'!
PASSED!

!testRun: #TerniLapilliGameTest #test04 stamp: 'IO 10/31/2020 21:28:12'!
PASSED!

!testRun: #TerniLapilliGameTest #test05 stamp: 'IO 10/31/2020 21:28:12'!
PASSED!

!testRun: #TerniLapilliGameTest #test06 stamp: 'IO 10/31/2020 21:28:12'!
PASSED!

!testRun: #TerniLapilliGameTest #test07 stamp: 'IO 10/31/2020 21:28:12'!
PASSED!

!testRun: #TerniLapilliGameTest #test08 stamp: 'IO 10/31/2020 21:28:12'!
PASSED!

!testRun: #TerniLapilliGameTest #test09 stamp: 'IO 10/31/2020 21:28:12'!
PASSED!

!testRun: #TerniLapilliGameTest #test10 stamp: 'IO 10/31/2020 21:28:12'!
PASSED!

!testRun: #TerniLapilliGameTest #test11 stamp: 'IO 10/31/2020 21:28:12'!
PASSED!

!testRun: #TerniLapilliGameTest #test12 stamp: 'IO 10/31/2020 21:28:12'!
PASSED!

!testRun: #TerniLapilliGameTest #test13 stamp: 'IO 10/31/2020 21:28:12'!
PASSED!

!testRun: #TerniLapilliGameTest #test14 stamp: 'IO 10/31/2020 21:28:12'!
PASSED!

!testRun: #TerniLapilliGameTest #test15 stamp: 'IO 10/31/2020 21:28:12'!
PASSED!

!testRun: #TerniLapilliGameTest #test16 stamp: 'IO 10/31/2020 21:28:12'!
PASSED!

!testRun: #TerniLapilliGameTest #test17 stamp: 'IO 10/31/2020 21:28:12'!
PASSED!

!testRun: #TerniLapilliGameTest #test18 stamp: 'IO 10/31/2020 21:28:12'!
PASSED!

!testRun: #TerniLapilliGameTest #test19 stamp: 'IO 10/31/2020 21:28:12'!
PASSED!

!testRun: #TerniLapilliGameTest #test20 stamp: 'IO 10/31/2020 21:28:12'!
PASSED!

!testRun: #TerniLapilliGameTest #test21 stamp: 'IO 10/31/2020 21:28:12'!
PASSED!

!testRun: #TerniLapilliGameTest #test22 stamp: 'IO 10/31/2020 21:28:12'!
PASSED!

!testRun: #TerniLapilliGameTest #test23 stamp: 'IO 10/31/2020 21:28:12'!
PASSED!

!testRun: #TerniLapilliGameTest #test24 stamp: 'IO 10/31/2020 21:28:12'!
PASSED!

!testRun: #TerniLapilliGameTest #test25 stamp: 'IO 10/31/2020 21:28:12'!
PASSED!

!testRun: #TerniLapilliGameTest #test26 stamp: 'IO 10/31/2020 21:28:12'!
PASSED!

!testRun: #TerniLapilliGameTest #test27 stamp: 'IO 10/31/2020 21:28:12'!
PASSED!

!testRun: #TerniLapilliGameTest #test28 stamp: 'IO 10/31/2020 21:28:12'!
PASSED!

!testRun: #TerniLapilliGameTest #test29 stamp: 'IO 10/31/2020 21:28:12'!
PASSED!

!testRun: #TerniLapilliGameTest #test30 stamp: 'IO 10/31/2020 21:28:12'!
PASSED!

!testRun: #TerniLapilliGameTest #test31 stamp: 'IO 10/31/2020 21:28:12'!
PASSED!

!testRun: #TerniLapilliGameTest #test32 stamp: 'IO 10/31/2020 21:28:12'!
PASSED!
!TerniLapilliGameStateMovesO methodsFor: 'as yet unclassified' stamp: 'IO 10/31/2020 21:33:18' prior: 50876674 overrides: 50873970!
oPutsOn: aPosition
	^self errorCannotPut.
! !
!TerniLapilliGameState methodsFor: 'error' stamp: 'IO 10/31/2020 21:33:35'!
errorICannotPut
	^self error: TerniLapilliGame cannotPutErrorMessage.
! !

!testRun: #TerniLapilliGameTest #test28 stamp: 'IO 10/31/2020 21:33:45'!
PASSED!

!testRun: #TerniLapilliGameTest #test01 stamp: 'IO 10/31/2020 21:33:45'!
PASSED!

!testRun: #TerniLapilliGameTest #test02 stamp: 'IO 10/31/2020 21:33:45'!
PASSED!

!testRun: #TerniLapilliGameTest #test03 stamp: 'IO 10/31/2020 21:33:45'!
PASSED!

!testRun: #TerniLapilliGameTest #test04 stamp: 'IO 10/31/2020 21:33:45'!
PASSED!

!testRun: #TerniLapilliGameTest #test05 stamp: 'IO 10/31/2020 21:33:45'!
PASSED!

!testRun: #TerniLapilliGameTest #test06 stamp: 'IO 10/31/2020 21:33:45'!
PASSED!

!testRun: #TerniLapilliGameTest #test07 stamp: 'IO 10/31/2020 21:33:45'!
PASSED!

!testRun: #TerniLapilliGameTest #test08 stamp: 'IO 10/31/2020 21:33:45'!
PASSED!

!testRun: #TerniLapilliGameTest #test09 stamp: 'IO 10/31/2020 21:33:45'!
PASSED!

!testRun: #TerniLapilliGameTest #test10 stamp: 'IO 10/31/2020 21:33:45'!
PASSED!

!testRun: #TerniLapilliGameTest #test11 stamp: 'IO 10/31/2020 21:33:45'!
PASSED!

!testRun: #TerniLapilliGameTest #test12 stamp: 'IO 10/31/2020 21:33:45'!
PASSED!

!testRun: #TerniLapilliGameTest #test13 stamp: 'IO 10/31/2020 21:33:45'!
PASSED!

!testRun: #TerniLapilliGameTest #test14 stamp: 'IO 10/31/2020 21:33:45'!
PASSED!

!testRun: #TerniLapilliGameTest #test15 stamp: 'IO 10/31/2020 21:33:45'!
PASSED!

!testRun: #TerniLapilliGameTest #test16 stamp: 'IO 10/31/2020 21:33:45'!
PASSED!

!testRun: #TerniLapilliGameTest #test17 stamp: 'IO 10/31/2020 21:33:45'!
PASSED!

!testRun: #TerniLapilliGameTest #test18 stamp: 'IO 10/31/2020 21:33:45'!
PASSED!

!testRun: #TerniLapilliGameTest #test19 stamp: 'IO 10/31/2020 21:33:45'!
PASSED!

!testRun: #TerniLapilliGameTest #test20 stamp: 'IO 10/31/2020 21:33:45'!
PASSED!

!testRun: #TerniLapilliGameTest #test21 stamp: 'IO 10/31/2020 21:33:45'!
PASSED!

!testRun: #TerniLapilliGameTest #test22 stamp: 'IO 10/31/2020 21:33:45'!
PASSED!

!testRun: #TerniLapilliGameTest #test23 stamp: 'IO 10/31/2020 21:33:45'!
PASSED!

!testRun: #TerniLapilliGameTest #test24 stamp: 'IO 10/31/2020 21:33:45'!
PASSED!

!testRun: #TerniLapilliGameTest #test25 stamp: 'IO 10/31/2020 21:33:45'!
PASSED!

!testRun: #TerniLapilliGameTest #test26 stamp: 'IO 10/31/2020 21:33:45'!
PASSED!

!testRun: #TerniLapilliGameTest #test27 stamp: 'IO 10/31/2020 21:33:45'!
FAILURE!

!testRun: #TerniLapilliGameTest #test28 stamp: 'IO 10/31/2020 21:33:45'!
PASSED!

!testRun: #TerniLapilliGameTest #test29 stamp: 'IO 10/31/2020 21:33:45'!
PASSED!

!testRun: #TerniLapilliGameTest #test30 stamp: 'IO 10/31/2020 21:33:45'!
PASSED!

!testRun: #TerniLapilliGameTest #test31 stamp: 'IO 10/31/2020 21:33:45'!
PASSED!

!testRun: #TerniLapilliGameTest #test32 stamp: 'IO 10/31/2020 21:33:45'!
PASSED!

!testRun: #TerniLapilliGameTest #test27 stamp: 'IO 10/31/2020 21:33:45'!
FAILURE!
!TerniLapilliGameStateMovesO methodsFor: 'as yet unclassified' stamp: 'IO 10/31/2020 21:34:00' prior: 50877703 overrides: 50873970!
oPutsOn: aPosition
	^self errorICannotPut.
! !

!testRun: #TerniLapilliGameTest #test28 stamp: 'IO 10/31/2020 21:34:04'!
PASSED!

!testRun: #TerniLapilliGameTest #test01 stamp: 'IO 10/31/2020 21:34:04'!
PASSED!

!testRun: #TerniLapilliGameTest #test02 stamp: 'IO 10/31/2020 21:34:04'!
PASSED!

!testRun: #TerniLapilliGameTest #test03 stamp: 'IO 10/31/2020 21:34:04'!
PASSED!

!testRun: #TerniLapilliGameTest #test04 stamp: 'IO 10/31/2020 21:34:04'!
PASSED!

!testRun: #TerniLapilliGameTest #test05 stamp: 'IO 10/31/2020 21:34:04'!
PASSED!

!testRun: #TerniLapilliGameTest #test06 stamp: 'IO 10/31/2020 21:34:04'!
PASSED!

!testRun: #TerniLapilliGameTest #test07 stamp: 'IO 10/31/2020 21:34:04'!
PASSED!

!testRun: #TerniLapilliGameTest #test08 stamp: 'IO 10/31/2020 21:34:04'!
PASSED!

!testRun: #TerniLapilliGameTest #test09 stamp: 'IO 10/31/2020 21:34:04'!
PASSED!

!testRun: #TerniLapilliGameTest #test10 stamp: 'IO 10/31/2020 21:34:04'!
PASSED!

!testRun: #TerniLapilliGameTest #test11 stamp: 'IO 10/31/2020 21:34:04'!
PASSED!

!testRun: #TerniLapilliGameTest #test12 stamp: 'IO 10/31/2020 21:34:04'!
PASSED!

!testRun: #TerniLapilliGameTest #test13 stamp: 'IO 10/31/2020 21:34:04'!
PASSED!

!testRun: #TerniLapilliGameTest #test14 stamp: 'IO 10/31/2020 21:34:04'!
PASSED!

!testRun: #TerniLapilliGameTest #test15 stamp: 'IO 10/31/2020 21:34:04'!
PASSED!

!testRun: #TerniLapilliGameTest #test16 stamp: 'IO 10/31/2020 21:34:04'!
PASSED!

!testRun: #TerniLapilliGameTest #test17 stamp: 'IO 10/31/2020 21:34:04'!
PASSED!

!testRun: #TerniLapilliGameTest #test18 stamp: 'IO 10/31/2020 21:34:04'!
PASSED!

!testRun: #TerniLapilliGameTest #test19 stamp: 'IO 10/31/2020 21:34:04'!
PASSED!

!testRun: #TerniLapilliGameTest #test20 stamp: 'IO 10/31/2020 21:34:04'!
PASSED!

!testRun: #TerniLapilliGameTest #test21 stamp: 'IO 10/31/2020 21:34:04'!
PASSED!

!testRun: #TerniLapilliGameTest #test22 stamp: 'IO 10/31/2020 21:34:04'!
PASSED!

!testRun: #TerniLapilliGameTest #test23 stamp: 'IO 10/31/2020 21:34:04'!
PASSED!

!testRun: #TerniLapilliGameTest #test24 stamp: 'IO 10/31/2020 21:34:04'!
PASSED!

!testRun: #TerniLapilliGameTest #test25 stamp: 'IO 10/31/2020 21:34:04'!
PASSED!

!testRun: #TerniLapilliGameTest #test26 stamp: 'IO 10/31/2020 21:34:04'!
PASSED!

!testRun: #TerniLapilliGameTest #test27 stamp: 'IO 10/31/2020 21:34:04'!
PASSED!

!testRun: #TerniLapilliGameTest #test28 stamp: 'IO 10/31/2020 21:34:04'!
PASSED!

!testRun: #TerniLapilliGameTest #test29 stamp: 'IO 10/31/2020 21:34:04'!
PASSED!

!testRun: #TerniLapilliGameTest #test30 stamp: 'IO 10/31/2020 21:34:04'!
PASSED!

!testRun: #TerniLapilliGameTest #test31 stamp: 'IO 10/31/2020 21:34:04'!
PASSED!

!testRun: #TerniLapilliGameTest #test32 stamp: 'IO 10/31/2020 21:34:04'!
PASSED!
!TerniLapilliGameStateMovesO methodsFor: 'as yet unclassified' stamp: 'IO 10/31/2020 21:34:16' prior: 50877801 overrides: 50873970!
oPutsOn: aPosition
	^self errorICannotPut.
! !
!TerniLapilliGameState methodsFor: 'error' stamp: 'IO 10/31/2020 21:34:35'!
errorCannotPut
	^self error: TerniLapilliGame cannotPutErrorMessage.
! !
!TerniLapilliGameStateMovesO methodsFor: 'as yet unclassified' stamp: 'IO 10/31/2020 21:34:35' prior: 50877892 overrides: 50873970!
oPutsOn: aPosition
	^self errorCannotPut.
! !

!methodRemoval: TerniLapilliGameState #errorICannotPut stamp: 'IO 10/31/2020 21:34:35'!
errorICannotPut
	^self error: TerniLapilliGame cannotPutErrorMessage.
!

!testRun: #TerniLapilliGameTest #test28 stamp: 'IO 10/31/2020 21:34:52'!
PASSED!

!testRun: #TerniLapilliGameTest #test01 stamp: 'IO 10/31/2020 21:34:52'!
PASSED!

!testRun: #TerniLapilliGameTest #test02 stamp: 'IO 10/31/2020 21:34:52'!
PASSED!

!testRun: #TerniLapilliGameTest #test03 stamp: 'IO 10/31/2020 21:34:52'!
PASSED!

!testRun: #TerniLapilliGameTest #test04 stamp: 'IO 10/31/2020 21:34:52'!
PASSED!

!testRun: #TerniLapilliGameTest #test05 stamp: 'IO 10/31/2020 21:34:52'!
PASSED!

!testRun: #TerniLapilliGameTest #test06 stamp: 'IO 10/31/2020 21:34:52'!
PASSED!

!testRun: #TerniLapilliGameTest #test07 stamp: 'IO 10/31/2020 21:34:52'!
PASSED!

!testRun: #TerniLapilliGameTest #test08 stamp: 'IO 10/31/2020 21:34:52'!
PASSED!

!testRun: #TerniLapilliGameTest #test09 stamp: 'IO 10/31/2020 21:34:52'!
PASSED!

!testRun: #TerniLapilliGameTest #test10 stamp: 'IO 10/31/2020 21:34:52'!
PASSED!

!testRun: #TerniLapilliGameTest #test11 stamp: 'IO 10/31/2020 21:34:52'!
PASSED!

!testRun: #TerniLapilliGameTest #test12 stamp: 'IO 10/31/2020 21:34:52'!
PASSED!

!testRun: #TerniLapilliGameTest #test13 stamp: 'IO 10/31/2020 21:34:52'!
PASSED!

!testRun: #TerniLapilliGameTest #test14 stamp: 'IO 10/31/2020 21:34:52'!
PASSED!

!testRun: #TerniLapilliGameTest #test15 stamp: 'IO 10/31/2020 21:34:52'!
PASSED!

!testRun: #TerniLapilliGameTest #test16 stamp: 'IO 10/31/2020 21:34:52'!
PASSED!

!testRun: #TerniLapilliGameTest #test17 stamp: 'IO 10/31/2020 21:34:52'!
PASSED!

!testRun: #TerniLapilliGameTest #test18 stamp: 'IO 10/31/2020 21:34:52'!
PASSED!

!testRun: #TerniLapilliGameTest #test19 stamp: 'IO 10/31/2020 21:34:52'!
PASSED!

!testRun: #TerniLapilliGameTest #test20 stamp: 'IO 10/31/2020 21:34:52'!
PASSED!

!testRun: #TerniLapilliGameTest #test21 stamp: 'IO 10/31/2020 21:34:52'!
PASSED!

!testRun: #TerniLapilliGameTest #test22 stamp: 'IO 10/31/2020 21:34:52'!
PASSED!

!testRun: #TerniLapilliGameTest #test23 stamp: 'IO 10/31/2020 21:34:52'!
PASSED!

!testRun: #TerniLapilliGameTest #test24 stamp: 'IO 10/31/2020 21:34:52'!
PASSED!

!testRun: #TerniLapilliGameTest #test25 stamp: 'IO 10/31/2020 21:34:52'!
PASSED!

!testRun: #TerniLapilliGameTest #test26 stamp: 'IO 10/31/2020 21:34:52'!
PASSED!

!testRun: #TerniLapilliGameTest #test27 stamp: 'IO 10/31/2020 21:34:52'!
PASSED!

!testRun: #TerniLapilliGameTest #test28 stamp: 'IO 10/31/2020 21:34:52'!
PASSED!

!testRun: #TerniLapilliGameTest #test29 stamp: 'IO 10/31/2020 21:34:52'!
PASSED!

!testRun: #TerniLapilliGameTest #test30 stamp: 'IO 10/31/2020 21:34:52'!
PASSED!

!testRun: #TerniLapilliGameTest #test31 stamp: 'IO 10/31/2020 21:34:52'!
PASSED!

!testRun: #TerniLapilliGameTest #test32 stamp: 'IO 10/31/2020 21:34:52'!
PASSED!
!TerniLapilliGameStatePutsO methodsFor: 'as yet unclassified' stamp: 'IO 10/31/2020 21:35:10' prior: 50876284 overrides: 50876319!
oMoves: sourcePosition to: destinationPosition
	^self errorCannotMove.! !
!TerniLapilliGameState methodsFor: 'error' stamp: 'IO 10/31/2020 21:35:24'!
errorCannotMove
	^self error: TerniLapilliGame cannotMoveErrorMessage
! !

!testRun: #TerniLapilliGameTest #test28 stamp: 'IO 10/31/2020 21:35:25'!
PASSED!

!testRun: #TerniLapilliGameTest #test01 stamp: 'IO 10/31/2020 21:35:25'!
PASSED!

!testRun: #TerniLapilliGameTest #test02 stamp: 'IO 10/31/2020 21:35:25'!
PASSED!

!testRun: #TerniLapilliGameTest #test03 stamp: 'IO 10/31/2020 21:35:25'!
PASSED!

!testRun: #TerniLapilliGameTest #test04 stamp: 'IO 10/31/2020 21:35:25'!
PASSED!

!testRun: #TerniLapilliGameTest #test05 stamp: 'IO 10/31/2020 21:35:25'!
PASSED!

!testRun: #TerniLapilliGameTest #test06 stamp: 'IO 10/31/2020 21:35:25'!
PASSED!

!testRun: #TerniLapilliGameTest #test07 stamp: 'IO 10/31/2020 21:35:25'!
PASSED!

!testRun: #TerniLapilliGameTest #test08 stamp: 'IO 10/31/2020 21:35:26'!
PASSED!

!testRun: #TerniLapilliGameTest #test09 stamp: 'IO 10/31/2020 21:35:26'!
PASSED!

!testRun: #TerniLapilliGameTest #test10 stamp: 'IO 10/31/2020 21:35:26'!
PASSED!

!testRun: #TerniLapilliGameTest #test11 stamp: 'IO 10/31/2020 21:35:26'!
PASSED!

!testRun: #TerniLapilliGameTest #test12 stamp: 'IO 10/31/2020 21:35:26'!
PASSED!

!testRun: #TerniLapilliGameTest #test13 stamp: 'IO 10/31/2020 21:35:26'!
PASSED!

!testRun: #TerniLapilliGameTest #test14 stamp: 'IO 10/31/2020 21:35:26'!
PASSED!

!testRun: #TerniLapilliGameTest #test15 stamp: 'IO 10/31/2020 21:35:26'!
PASSED!

!testRun: #TerniLapilliGameTest #test16 stamp: 'IO 10/31/2020 21:35:26'!
PASSED!

!testRun: #TerniLapilliGameTest #test17 stamp: 'IO 10/31/2020 21:35:26'!
PASSED!

!testRun: #TerniLapilliGameTest #test18 stamp: 'IO 10/31/2020 21:35:26'!
PASSED!

!testRun: #TerniLapilliGameTest #test19 stamp: 'IO 10/31/2020 21:35:26'!
PASSED!

!testRun: #TerniLapilliGameTest #test20 stamp: 'IO 10/31/2020 21:35:26'!
PASSED!

!testRun: #TerniLapilliGameTest #test21 stamp: 'IO 10/31/2020 21:35:26'!
PASSED!

!testRun: #TerniLapilliGameTest #test22 stamp: 'IO 10/31/2020 21:35:26'!
PASSED!

!testRun: #TerniLapilliGameTest #test23 stamp: 'IO 10/31/2020 21:35:26'!
PASSED!

!testRun: #TerniLapilliGameTest #test24 stamp: 'IO 10/31/2020 21:35:26'!
PASSED!

!testRun: #TerniLapilliGameTest #test25 stamp: 'IO 10/31/2020 21:35:26'!
PASSED!

!testRun: #TerniLapilliGameTest #test26 stamp: 'IO 10/31/2020 21:35:26'!
PASSED!

!testRun: #TerniLapilliGameTest #test27 stamp: 'IO 10/31/2020 21:35:26'!
PASSED!

!testRun: #TerniLapilliGameTest #test28 stamp: 'IO 10/31/2020 21:35:26'!
PASSED!

!testRun: #TerniLapilliGameTest #test29 stamp: 'IO 10/31/2020 21:35:26'!
PASSED!

!testRun: #TerniLapilliGameTest #test30 stamp: 'IO 10/31/2020 21:35:26'!
PASSED!

!testRun: #TerniLapilliGameTest #test31 stamp: 'IO 10/31/2020 21:35:26'!
PASSED!

!testRun: #TerniLapilliGameTest #test32 stamp: 'IO 10/31/2020 21:35:26'!
PASSED!
!TerniLapilliGameStateMovesX methodsFor: 'as yet unclassified' stamp: 'IO 10/31/2020 21:35:36' prior: 50875708 overrides: 50875930!
xMoves: sourcePosition to: destinationPosition
	xTokens move: sourcePosition to: destinationPosition.
	^self passTurn.

! !
!TerniLapilliGameStateMovesX methodsFor: 'as yet unclassified' stamp: 'IO 10/31/2020 21:35:46' prior: 50876562 overrides: 50876569!
xPutsOn: aPosition
	^self errorCannotPut.


! !

!testRun: #TerniLapilliGameTest #test28 stamp: 'IO 10/31/2020 21:35:47'!
PASSED!

!testRun: #TerniLapilliGameTest #test01 stamp: 'IO 10/31/2020 21:35:47'!
PASSED!

!testRun: #TerniLapilliGameTest #test02 stamp: 'IO 10/31/2020 21:35:47'!
PASSED!

!testRun: #TerniLapilliGameTest #test03 stamp: 'IO 10/31/2020 21:35:47'!
PASSED!

!testRun: #TerniLapilliGameTest #test04 stamp: 'IO 10/31/2020 21:35:47'!
PASSED!

!testRun: #TerniLapilliGameTest #test05 stamp: 'IO 10/31/2020 21:35:47'!
PASSED!

!testRun: #TerniLapilliGameTest #test06 stamp: 'IO 10/31/2020 21:35:47'!
PASSED!

!testRun: #TerniLapilliGameTest #test07 stamp: 'IO 10/31/2020 21:35:47'!
PASSED!

!testRun: #TerniLapilliGameTest #test08 stamp: 'IO 10/31/2020 21:35:47'!
PASSED!

!testRun: #TerniLapilliGameTest #test09 stamp: 'IO 10/31/2020 21:35:47'!
PASSED!

!testRun: #TerniLapilliGameTest #test10 stamp: 'IO 10/31/2020 21:35:47'!
PASSED!

!testRun: #TerniLapilliGameTest #test11 stamp: 'IO 10/31/2020 21:35:47'!
PASSED!

!testRun: #TerniLapilliGameTest #test12 stamp: 'IO 10/31/2020 21:35:47'!
PASSED!

!testRun: #TerniLapilliGameTest #test13 stamp: 'IO 10/31/2020 21:35:47'!
PASSED!

!testRun: #TerniLapilliGameTest #test14 stamp: 'IO 10/31/2020 21:35:47'!
PASSED!

!testRun: #TerniLapilliGameTest #test15 stamp: 'IO 10/31/2020 21:35:47'!
PASSED!

!testRun: #TerniLapilliGameTest #test16 stamp: 'IO 10/31/2020 21:35:47'!
PASSED!

!testRun: #TerniLapilliGameTest #test17 stamp: 'IO 10/31/2020 21:35:47'!
PASSED!

!testRun: #TerniLapilliGameTest #test18 stamp: 'IO 10/31/2020 21:35:47'!
PASSED!

!testRun: #TerniLapilliGameTest #test19 stamp: 'IO 10/31/2020 21:35:47'!
PASSED!

!testRun: #TerniLapilliGameTest #test20 stamp: 'IO 10/31/2020 21:35:47'!
PASSED!

!testRun: #TerniLapilliGameTest #test21 stamp: 'IO 10/31/2020 21:35:47'!
PASSED!

!testRun: #TerniLapilliGameTest #test22 stamp: 'IO 10/31/2020 21:35:47'!
PASSED!

!testRun: #TerniLapilliGameTest #test23 stamp: 'IO 10/31/2020 21:35:47'!
PASSED!

!testRun: #TerniLapilliGameTest #test24 stamp: 'IO 10/31/2020 21:35:47'!
PASSED!

!testRun: #TerniLapilliGameTest #test25 stamp: 'IO 10/31/2020 21:35:47'!
PASSED!

!testRun: #TerniLapilliGameTest #test26 stamp: 'IO 10/31/2020 21:35:47'!
PASSED!

!testRun: #TerniLapilliGameTest #test27 stamp: 'IO 10/31/2020 21:35:47'!
PASSED!

!testRun: #TerniLapilliGameTest #test28 stamp: 'IO 10/31/2020 21:35:47'!
PASSED!

!testRun: #TerniLapilliGameTest #test29 stamp: 'IO 10/31/2020 21:35:47'!
PASSED!

!testRun: #TerniLapilliGameTest #test30 stamp: 'IO 10/31/2020 21:35:47'!
PASSED!

!testRun: #TerniLapilliGameTest #test31 stamp: 'IO 10/31/2020 21:35:47'!
PASSED!

!testRun: #TerniLapilliGameTest #test32 stamp: 'IO 10/31/2020 21:35:47'!
PASSED!
!TerniLapilliGameStatePutsX methodsFor: 'as yet unclassified' stamp: 'IO 10/31/2020 21:35:57' prior: 50875716 overrides: 50875930!
xMoves: sourcePosition to: destinationPosition
	^self errorCannotMove.

! !

!testRun: #TerniLapilliGameTest #test28 stamp: 'IO 10/31/2020 21:35:59'!
PASSED!

!testRun: #TerniLapilliGameTest #test01 stamp: 'IO 10/31/2020 21:35:59'!
PASSED!

!testRun: #TerniLapilliGameTest #test02 stamp: 'IO 10/31/2020 21:35:59'!
PASSED!

!testRun: #TerniLapilliGameTest #test03 stamp: 'IO 10/31/2020 21:35:59'!
PASSED!

!testRun: #TerniLapilliGameTest #test04 stamp: 'IO 10/31/2020 21:35:59'!
PASSED!

!testRun: #TerniLapilliGameTest #test05 stamp: 'IO 10/31/2020 21:35:59'!
PASSED!

!testRun: #TerniLapilliGameTest #test06 stamp: 'IO 10/31/2020 21:35:59'!
PASSED!

!testRun: #TerniLapilliGameTest #test07 stamp: 'IO 10/31/2020 21:35:59'!
PASSED!

!testRun: #TerniLapilliGameTest #test08 stamp: 'IO 10/31/2020 21:35:59'!
PASSED!

!testRun: #TerniLapilliGameTest #test09 stamp: 'IO 10/31/2020 21:35:59'!
PASSED!

!testRun: #TerniLapilliGameTest #test10 stamp: 'IO 10/31/2020 21:35:59'!
PASSED!

!testRun: #TerniLapilliGameTest #test11 stamp: 'IO 10/31/2020 21:35:59'!
PASSED!

!testRun: #TerniLapilliGameTest #test12 stamp: 'IO 10/31/2020 21:35:59'!
PASSED!

!testRun: #TerniLapilliGameTest #test13 stamp: 'IO 10/31/2020 21:35:59'!
PASSED!

!testRun: #TerniLapilliGameTest #test14 stamp: 'IO 10/31/2020 21:35:59'!
PASSED!

!testRun: #TerniLapilliGameTest #test15 stamp: 'IO 10/31/2020 21:35:59'!
PASSED!

!testRun: #TerniLapilliGameTest #test16 stamp: 'IO 10/31/2020 21:35:59'!
PASSED!

!testRun: #TerniLapilliGameTest #test17 stamp: 'IO 10/31/2020 21:35:59'!
PASSED!

!testRun: #TerniLapilliGameTest #test18 stamp: 'IO 10/31/2020 21:35:59'!
PASSED!

!testRun: #TerniLapilliGameTest #test19 stamp: 'IO 10/31/2020 21:35:59'!
PASSED!

!testRun: #TerniLapilliGameTest #test20 stamp: 'IO 10/31/2020 21:35:59'!
PASSED!

!testRun: #TerniLapilliGameTest #test21 stamp: 'IO 10/31/2020 21:35:59'!
PASSED!

!testRun: #TerniLapilliGameTest #test22 stamp: 'IO 10/31/2020 21:35:59'!
PASSED!

!testRun: #TerniLapilliGameTest #test23 stamp: 'IO 10/31/2020 21:35:59'!
PASSED!

!testRun: #TerniLapilliGameTest #test24 stamp: 'IO 10/31/2020 21:35:59'!
PASSED!

!testRun: #TerniLapilliGameTest #test25 stamp: 'IO 10/31/2020 21:35:59'!
PASSED!

!testRun: #TerniLapilliGameTest #test26 stamp: 'IO 10/31/2020 21:35:59'!
PASSED!

!testRun: #TerniLapilliGameTest #test27 stamp: 'IO 10/31/2020 21:35:59'!
PASSED!

!testRun: #TerniLapilliGameTest #test28 stamp: 'IO 10/31/2020 21:35:59'!
PASSED!

!testRun: #TerniLapilliGameTest #test29 stamp: 'IO 10/31/2020 21:35:59'!
PASSED!

!testRun: #TerniLapilliGameTest #test30 stamp: 'IO 10/31/2020 21:35:59'!
PASSED!

!testRun: #TerniLapilliGameTest #test31 stamp: 'IO 10/31/2020 21:35:59'!
PASSED!

!testRun: #TerniLapilliGameTest #test32 stamp: 'IO 10/31/2020 21:35:59'!
PASSED!
!TerniLapilliGameStatePlaysX methodsFor: 'moves' stamp: 'IO 10/31/2020 21:36:24' prior: 50875930 overrides: 50872903!
xMoves: sourcePosition to: destinationPosition
	^self subclassResponsibility.


! !

!testRun: #TerniLapilliGameTest #test28 stamp: 'IO 10/31/2020 21:36:28'!
PASSED!

!testRun: #TerniLapilliGameTest #test01 stamp: 'IO 10/31/2020 21:36:28'!
PASSED!

!testRun: #TerniLapilliGameTest #test02 stamp: 'IO 10/31/2020 21:36:28'!
PASSED!

!testRun: #TerniLapilliGameTest #test03 stamp: 'IO 10/31/2020 21:36:28'!
PASSED!

!testRun: #TerniLapilliGameTest #test04 stamp: 'IO 10/31/2020 21:36:28'!
PASSED!

!testRun: #TerniLapilliGameTest #test05 stamp: 'IO 10/31/2020 21:36:28'!
PASSED!

!testRun: #TerniLapilliGameTest #test06 stamp: 'IO 10/31/2020 21:36:28'!
PASSED!

!testRun: #TerniLapilliGameTest #test07 stamp: 'IO 10/31/2020 21:36:28'!
PASSED!

!testRun: #TerniLapilliGameTest #test08 stamp: 'IO 10/31/2020 21:36:28'!
PASSED!

!testRun: #TerniLapilliGameTest #test09 stamp: 'IO 10/31/2020 21:36:28'!
PASSED!

!testRun: #TerniLapilliGameTest #test10 stamp: 'IO 10/31/2020 21:36:28'!
PASSED!

!testRun: #TerniLapilliGameTest #test11 stamp: 'IO 10/31/2020 21:36:28'!
PASSED!

!testRun: #TerniLapilliGameTest #test12 stamp: 'IO 10/31/2020 21:36:28'!
PASSED!

!testRun: #TerniLapilliGameTest #test13 stamp: 'IO 10/31/2020 21:36:28'!
PASSED!

!testRun: #TerniLapilliGameTest #test14 stamp: 'IO 10/31/2020 21:36:28'!
PASSED!

!testRun: #TerniLapilliGameTest #test15 stamp: 'IO 10/31/2020 21:36:28'!
PASSED!

!testRun: #TerniLapilliGameTest #test16 stamp: 'IO 10/31/2020 21:36:28'!
PASSED!

!testRun: #TerniLapilliGameTest #test17 stamp: 'IO 10/31/2020 21:36:28'!
PASSED!

!testRun: #TerniLapilliGameTest #test18 stamp: 'IO 10/31/2020 21:36:28'!
PASSED!

!testRun: #TerniLapilliGameTest #test19 stamp: 'IO 10/31/2020 21:36:28'!
PASSED!

!testRun: #TerniLapilliGameTest #test20 stamp: 'IO 10/31/2020 21:36:28'!
PASSED!

!testRun: #TerniLapilliGameTest #test21 stamp: 'IO 10/31/2020 21:36:28'!
PASSED!

!testRun: #TerniLapilliGameTest #test22 stamp: 'IO 10/31/2020 21:36:28'!
PASSED!

!testRun: #TerniLapilliGameTest #test23 stamp: 'IO 10/31/2020 21:36:28'!
PASSED!

!testRun: #TerniLapilliGameTest #test24 stamp: 'IO 10/31/2020 21:36:28'!
PASSED!

!testRun: #TerniLapilliGameTest #test25 stamp: 'IO 10/31/2020 21:36:28'!
PASSED!

!testRun: #TerniLapilliGameTest #test26 stamp: 'IO 10/31/2020 21:36:28'!
PASSED!

!testRun: #TerniLapilliGameTest #test27 stamp: 'IO 10/31/2020 21:36:28'!
PASSED!

!testRun: #TerniLapilliGameTest #test28 stamp: 'IO 10/31/2020 21:36:28'!
PASSED!

!testRun: #TerniLapilliGameTest #test29 stamp: 'IO 10/31/2020 21:36:28'!
PASSED!

!testRun: #TerniLapilliGameTest #test30 stamp: 'IO 10/31/2020 21:36:28'!
PASSED!

!testRun: #TerniLapilliGameTest #test31 stamp: 'IO 10/31/2020 21:36:28'!
PASSED!

!testRun: #TerniLapilliGameTest #test32 stamp: 'IO 10/31/2020 21:36:28'!
PASSED!
!TerniLapilliGameStateOver methodsFor: 'as yet unclassified' stamp: 'IO 10/31/2020 21:38:08' prior: 50877505 overrides: 50873335!
xPutsOn: aPosition
	^self errorGameEnded.
! !
!TerniLapilliGameStateOver methodsFor: 'as yet unclassified' stamp: 'IO 10/31/2020 21:38:25'!
errorGameEnded
	^self error: TerniLapilliGame gameEndedErrorMessage.
! !
!TerniLapilliGameStateOver methodsFor: 'as yet unclassified' stamp: 'IO 10/31/2020 21:38:54' prior: 50877296 overrides: 50872903!
xMoves: sourcePosition to: destinationPosition
	^self errorGameEnded.
! !
!TerniLapilliGameStateOver methodsFor: 'as yet unclassified' stamp: 'IO 10/31/2020 21:38:58' prior: 50877012 overrides: 50873286!
oPutsOn: aPosition
	^self errorGameEnded.
! !
!TerniLapilliGameStateOver methodsFor: 'as yet unclassified' stamp: 'IO 10/31/2020 21:39:00' prior: 50877165 overrides: 50873039!
oMoves: sourcePosition to: destinationPosition
	^self errorGameEnded.
! !

!testRun: #TerniLapilliGameTest #test28 stamp: 'IO 10/31/2020 21:39:02'!
PASSED!

!testRun: #TerniLapilliGameTest #test01 stamp: 'IO 10/31/2020 21:39:02'!
PASSED!

!testRun: #TerniLapilliGameTest #test02 stamp: 'IO 10/31/2020 21:39:02'!
PASSED!

!testRun: #TerniLapilliGameTest #test03 stamp: 'IO 10/31/2020 21:39:02'!
PASSED!

!testRun: #TerniLapilliGameTest #test04 stamp: 'IO 10/31/2020 21:39:02'!
PASSED!

!testRun: #TerniLapilliGameTest #test05 stamp: 'IO 10/31/2020 21:39:02'!
PASSED!

!testRun: #TerniLapilliGameTest #test06 stamp: 'IO 10/31/2020 21:39:02'!
PASSED!

!testRun: #TerniLapilliGameTest #test07 stamp: 'IO 10/31/2020 21:39:02'!
PASSED!

!testRun: #TerniLapilliGameTest #test08 stamp: 'IO 10/31/2020 21:39:02'!
PASSED!

!testRun: #TerniLapilliGameTest #test09 stamp: 'IO 10/31/2020 21:39:02'!
PASSED!

!testRun: #TerniLapilliGameTest #test10 stamp: 'IO 10/31/2020 21:39:02'!
PASSED!

!testRun: #TerniLapilliGameTest #test11 stamp: 'IO 10/31/2020 21:39:02'!
PASSED!

!testRun: #TerniLapilliGameTest #test12 stamp: 'IO 10/31/2020 21:39:02'!
PASSED!

!testRun: #TerniLapilliGameTest #test13 stamp: 'IO 10/31/2020 21:39:02'!
PASSED!

!testRun: #TerniLapilliGameTest #test14 stamp: 'IO 10/31/2020 21:39:02'!
PASSED!

!testRun: #TerniLapilliGameTest #test15 stamp: 'IO 10/31/2020 21:39:02'!
PASSED!

!testRun: #TerniLapilliGameTest #test16 stamp: 'IO 10/31/2020 21:39:02'!
PASSED!

!testRun: #TerniLapilliGameTest #test17 stamp: 'IO 10/31/2020 21:39:02'!
PASSED!

!testRun: #TerniLapilliGameTest #test18 stamp: 'IO 10/31/2020 21:39:02'!
PASSED!

!testRun: #TerniLapilliGameTest #test19 stamp: 'IO 10/31/2020 21:39:02'!
PASSED!

!testRun: #TerniLapilliGameTest #test20 stamp: 'IO 10/31/2020 21:39:02'!
PASSED!

!testRun: #TerniLapilliGameTest #test21 stamp: 'IO 10/31/2020 21:39:02'!
PASSED!

!testRun: #TerniLapilliGameTest #test22 stamp: 'IO 10/31/2020 21:39:02'!
PASSED!

!testRun: #TerniLapilliGameTest #test23 stamp: 'IO 10/31/2020 21:39:02'!
PASSED!

!testRun: #TerniLapilliGameTest #test24 stamp: 'IO 10/31/2020 21:39:02'!
PASSED!

!testRun: #TerniLapilliGameTest #test25 stamp: 'IO 10/31/2020 21:39:02'!
PASSED!

!testRun: #TerniLapilliGameTest #test26 stamp: 'IO 10/31/2020 21:39:02'!
PASSED!

!testRun: #TerniLapilliGameTest #test27 stamp: 'IO 10/31/2020 21:39:02'!
PASSED!

!testRun: #TerniLapilliGameTest #test28 stamp: 'IO 10/31/2020 21:39:02'!
PASSED!

!testRun: #TerniLapilliGameTest #test29 stamp: 'IO 10/31/2020 21:39:02'!
PASSED!

!testRun: #TerniLapilliGameTest #test30 stamp: 'IO 10/31/2020 21:39:02'!
PASSED!

!testRun: #TerniLapilliGameTest #test31 stamp: 'IO 10/31/2020 21:39:02'!
PASSED!

!testRun: #TerniLapilliGameTest #test32 stamp: 'IO 10/31/2020 21:39:02'!
PASSED!
!TerniLapilliGameState methodsFor: 'moves' stamp: 'IO 10/31/2020 21:39:43' prior: 50872903!
xMoves: sourcePosition to: destinationPosition 
	^self subclassResponsibility.

! !

!testRun: #TerniLapilliGameTest #test28 stamp: 'IO 10/31/2020 21:39:45'!
PASSED!

!testRun: #TerniLapilliGameTest #test01 stamp: 'IO 10/31/2020 21:39:45'!
PASSED!

!testRun: #TerniLapilliGameTest #test02 stamp: 'IO 10/31/2020 21:39:45'!
PASSED!

!testRun: #TerniLapilliGameTest #test03 stamp: 'IO 10/31/2020 21:39:45'!
PASSED!

!testRun: #TerniLapilliGameTest #test04 stamp: 'IO 10/31/2020 21:39:45'!
PASSED!

!testRun: #TerniLapilliGameTest #test05 stamp: 'IO 10/31/2020 21:39:45'!
PASSED!

!testRun: #TerniLapilliGameTest #test06 stamp: 'IO 10/31/2020 21:39:45'!
PASSED!

!testRun: #TerniLapilliGameTest #test07 stamp: 'IO 10/31/2020 21:39:45'!
PASSED!

!testRun: #TerniLapilliGameTest #test08 stamp: 'IO 10/31/2020 21:39:45'!
PASSED!

!testRun: #TerniLapilliGameTest #test09 stamp: 'IO 10/31/2020 21:39:45'!
PASSED!

!testRun: #TerniLapilliGameTest #test10 stamp: 'IO 10/31/2020 21:39:45'!
PASSED!

!testRun: #TerniLapilliGameTest #test11 stamp: 'IO 10/31/2020 21:39:45'!
PASSED!

!testRun: #TerniLapilliGameTest #test12 stamp: 'IO 10/31/2020 21:39:45'!
PASSED!

!testRun: #TerniLapilliGameTest #test13 stamp: 'IO 10/31/2020 21:39:45'!
PASSED!

!testRun: #TerniLapilliGameTest #test14 stamp: 'IO 10/31/2020 21:39:45'!
PASSED!

!testRun: #TerniLapilliGameTest #test15 stamp: 'IO 10/31/2020 21:39:45'!
PASSED!

!testRun: #TerniLapilliGameTest #test16 stamp: 'IO 10/31/2020 21:39:45'!
PASSED!

!testRun: #TerniLapilliGameTest #test17 stamp: 'IO 10/31/2020 21:39:45'!
PASSED!

!testRun: #TerniLapilliGameTest #test18 stamp: 'IO 10/31/2020 21:39:45'!
PASSED!

!testRun: #TerniLapilliGameTest #test19 stamp: 'IO 10/31/2020 21:39:45'!
PASSED!

!testRun: #TerniLapilliGameTest #test20 stamp: 'IO 10/31/2020 21:39:45'!
PASSED!

!testRun: #TerniLapilliGameTest #test21 stamp: 'IO 10/31/2020 21:39:45'!
PASSED!

!testRun: #TerniLapilliGameTest #test22 stamp: 'IO 10/31/2020 21:39:45'!
PASSED!

!testRun: #TerniLapilliGameTest #test23 stamp: 'IO 10/31/2020 21:39:45'!
PASSED!

!testRun: #TerniLapilliGameTest #test24 stamp: 'IO 10/31/2020 21:39:45'!
PASSED!

!testRun: #TerniLapilliGameTest #test25 stamp: 'IO 10/31/2020 21:39:45'!
PASSED!

!testRun: #TerniLapilliGameTest #test26 stamp: 'IO 10/31/2020 21:39:45'!
PASSED!

!testRun: #TerniLapilliGameTest #test27 stamp: 'IO 10/31/2020 21:39:45'!
PASSED!

!testRun: #TerniLapilliGameTest #test28 stamp: 'IO 10/31/2020 21:39:45'!
PASSED!

!testRun: #TerniLapilliGameTest #test29 stamp: 'IO 10/31/2020 21:39:45'!
PASSED!

!testRun: #TerniLapilliGameTest #test30 stamp: 'IO 10/31/2020 21:39:45'!
PASSED!

!testRun: #TerniLapilliGameTest #test31 stamp: 'IO 10/31/2020 21:39:45'!
PASSED!

!testRun: #TerniLapilliGameTest #test32 stamp: 'IO 10/31/2020 21:39:45'!
PASSED!
!TerniLapilliGameState methodsFor: 'error' stamp: 'IO 10/31/2020 21:40:06' prior: 50875459!
errorIlegalTurn
	^self error: TerniLapilliGame wrongTurnErrorMessage.
! !

!testRun: #TerniLapilliGameTest #test28 stamp: 'IO 10/31/2020 21:40:08'!
PASSED!

!testRun: #TerniLapilliGameTest #test01 stamp: 'IO 10/31/2020 21:40:08'!
PASSED!

!testRun: #TerniLapilliGameTest #test02 stamp: 'IO 10/31/2020 21:40:08'!
PASSED!

!testRun: #TerniLapilliGameTest #test03 stamp: 'IO 10/31/2020 21:40:08'!
PASSED!

!testRun: #TerniLapilliGameTest #test04 stamp: 'IO 10/31/2020 21:40:08'!
PASSED!

!testRun: #TerniLapilliGameTest #test05 stamp: 'IO 10/31/2020 21:40:08'!
PASSED!

!testRun: #TerniLapilliGameTest #test06 stamp: 'IO 10/31/2020 21:40:08'!
PASSED!

!testRun: #TerniLapilliGameTest #test07 stamp: 'IO 10/31/2020 21:40:08'!
PASSED!

!testRun: #TerniLapilliGameTest #test08 stamp: 'IO 10/31/2020 21:40:08'!
PASSED!

!testRun: #TerniLapilliGameTest #test09 stamp: 'IO 10/31/2020 21:40:08'!
PASSED!

!testRun: #TerniLapilliGameTest #test10 stamp: 'IO 10/31/2020 21:40:08'!
PASSED!

!testRun: #TerniLapilliGameTest #test11 stamp: 'IO 10/31/2020 21:40:08'!
PASSED!

!testRun: #TerniLapilliGameTest #test12 stamp: 'IO 10/31/2020 21:40:08'!
PASSED!

!testRun: #TerniLapilliGameTest #test13 stamp: 'IO 10/31/2020 21:40:08'!
PASSED!

!testRun: #TerniLapilliGameTest #test14 stamp: 'IO 10/31/2020 21:40:08'!
PASSED!

!testRun: #TerniLapilliGameTest #test15 stamp: 'IO 10/31/2020 21:40:08'!
PASSED!

!testRun: #TerniLapilliGameTest #test16 stamp: 'IO 10/31/2020 21:40:08'!
PASSED!

!testRun: #TerniLapilliGameTest #test17 stamp: 'IO 10/31/2020 21:40:08'!
PASSED!

!testRun: #TerniLapilliGameTest #test18 stamp: 'IO 10/31/2020 21:40:08'!
PASSED!

!testRun: #TerniLapilliGameTest #test19 stamp: 'IO 10/31/2020 21:40:08'!
PASSED!

!testRun: #TerniLapilliGameTest #test20 stamp: 'IO 10/31/2020 21:40:08'!
PASSED!

!testRun: #TerniLapilliGameTest #test21 stamp: 'IO 10/31/2020 21:40:08'!
PASSED!

!testRun: #TerniLapilliGameTest #test22 stamp: 'IO 10/31/2020 21:40:08'!
PASSED!

!testRun: #TerniLapilliGameTest #test23 stamp: 'IO 10/31/2020 21:40:08'!
PASSED!

!testRun: #TerniLapilliGameTest #test24 stamp: 'IO 10/31/2020 21:40:08'!
PASSED!

!testRun: #TerniLapilliGameTest #test25 stamp: 'IO 10/31/2020 21:40:08'!
PASSED!

!testRun: #TerniLapilliGameTest #test26 stamp: 'IO 10/31/2020 21:40:08'!
PASSED!

!testRun: #TerniLapilliGameTest #test27 stamp: 'IO 10/31/2020 21:40:08'!
PASSED!

!testRun: #TerniLapilliGameTest #test28 stamp: 'IO 10/31/2020 21:40:08'!
PASSED!

!testRun: #TerniLapilliGameTest #test29 stamp: 'IO 10/31/2020 21:40:08'!
PASSED!

!testRun: #TerniLapilliGameTest #test30 stamp: 'IO 10/31/2020 21:40:08'!
PASSED!

!testRun: #TerniLapilliGameTest #test31 stamp: 'IO 10/31/2020 21:40:08'!
PASSED!

!testRun: #TerniLapilliGameTest #test32 stamp: 'IO 10/31/2020 21:40:08'!
PASSED!

----SNAPSHOT----(31 October 2020 21:40:50) CuisUniversity-4384.image priorSource: 17422115!

----SNAPSHOT----(31 October 2020 21:40:54) CuisUniversity-4384.image priorSource: 17504699!

----QUIT----(31 October 2020 21:46:40) CuisUniversity-4384.image priorSource: 17504792!

----STARTUP---- (1 November 2020 14:25:38) as /Users/ilanolkies/uba/ingsoft1/macos64 5/CuisUniversity-4384.image!


----End fileIn of /Users/ilanolkies/uba/ingsoft1/ingeSoft-2020-2c/17-Terni-Lapilli/Terni Lapilli.st----!

!testRun: #TerniLapilliGameTest #test03 stamp: 'IO 11/1/2020 14:26:01'!
PASSED!

!testRun: #TerniLapilliGameTest #test01 stamp: 'IO 11/1/2020 14:26:01'!
PASSED!

!testRun: #TerniLapilliGameTest #test01XCanPutAToken stamp: 'IO 11/1/2020 14:26:01'!
PASSED!

!testRun: #TerniLapilliGameTest #test02 stamp: 'IO 11/1/2020 14:26:01'!
PASSED!

!testRun: #TerniLapilliGameTest #test02puttingDoesNotAffectOtherPositions stamp: 'IO 11/1/2020 14:26:01'!
PASSED!

!testRun: #TerniLapilliGameTest #test03 stamp: 'IO 11/1/2020 14:26:01'!
PASSED!

!testRun: #TerniLapilliGameTest #test03XCanPutInOtherPositions stamp: 'IO 11/1/2020 14:26:01'!
PASSED!

!testRun: #TerniLapilliGameTest #test04 stamp: 'IO 11/1/2020 14:26:01'!
PASSED!

!testRun: #TerniLapilliGameTest #test04OCanPut stamp: 'IO 11/1/2020 14:26:01'!
PASSED!

!testRun: #TerniLapilliGameTest #test05 stamp: 'IO 11/1/2020 14:26:01'!
PASSED!

!testRun: #TerniLapilliGameTest #test05XCanMove stamp: 'IO 11/1/2020 14:26:01'!
PASSED!

!testRun: #TerniLapilliGameTest #test06 stamp: 'IO 11/1/2020 14:26:01'!
PASSED!

!testRun: #TerniLapilliGameTest #test06OCanMove stamp: 'IO 11/1/2020 14:26:01'!
PASSED!

!testRun: #TerniLapilliGameTest #test07 stamp: 'IO 11/1/2020 14:26:01'!
PASSED!

!testRun: #TerniLapilliGameTest #test07XWinsWithTheFirstColumn stamp: 'IO 11/1/2020 14:26:01'!
PASSED!

!testRun: #TerniLapilliGameTest #test08 stamp: 'IO 11/1/2020 14:26:01'!
PASSED!

!testRun: #TerniLapilliGameTest #test08XHasntWonYet stamp: 'IO 11/1/2020 14:26:01'!
PASSED!

!testRun: #TerniLapilliGameTest #test09 stamp: 'IO 11/1/2020 14:26:01'!
PASSED!

!testRun: #TerniLapilliGameTest #test09XWinsWithTheSecondColumn stamp: 'IO 11/1/2020 14:26:01'!
PASSED!

!testRun: #TerniLapilliGameTest #test10 stamp: 'IO 11/1/2020 14:26:01'!
PASSED!

!testRun: #TerniLapilliGameTest #test10XWinsWithTheThirdColumn stamp: 'IO 11/1/2020 14:26:01'!
PASSED!

!testRun: #TerniLapilliGameTest #test11 stamp: 'IO 11/1/2020 14:26:01'!
PASSED!

!testRun: #TerniLapilliGameTest #test11XWinsWithTheFirstRow stamp: 'IO 11/1/2020 14:26:01'!
PASSED!

!testRun: #TerniLapilliGameTest #test12 stamp: 'IO 11/1/2020 14:26:01'!
PASSED!

!testRun: #TerniLapilliGameTest #test12XWinsWithTheSecondRow stamp: 'IO 11/1/2020 14:26:01'!
PASSED!

!testRun: #TerniLapilliGameTest #test13 stamp: 'IO 11/1/2020 14:26:01'!
PASSED!

!testRun: #TerniLapilliGameTest #test13XWinsWithTheThirdRow stamp: 'IO 11/1/2020 14:26:01'!
PASSED!

!testRun: #TerniLapilliGameTest #test14 stamp: 'IO 11/1/2020 14:26:01'!
PASSED!

!testRun: #TerniLapilliGameTest #test14XWinsWithTheCrescentDiagonal stamp: 'IO 11/1/2020 14:26:01'!
PASSED!

!testRun: #TerniLapilliGameTest #test15 stamp: 'IO 11/1/2020 14:26:01'!
PASSED!

!testRun: #TerniLapilliGameTest #test15XWinsWithTheDescendantDiagonal stamp: 'IO 11/1/2020 14:26:01'!
PASSED!

!testRun: #TerniLapilliGameTest #test16 stamp: 'IO 11/1/2020 14:26:01'!
PASSED!

!testRun: #TerniLapilliGameTest #test16OWnis stamp: 'IO 11/1/2020 14:26:01'!
PASSED!

!testRun: #TerniLapilliGameTest #test17 stamp: 'IO 11/1/2020 14:26:01'!
PASSED!

!testRun: #TerniLapilliGameTest #test17OCantStartPutting stamp: 'IO 11/1/2020 14:26:01'!
PASSED!

!testRun: #TerniLapilliGameTest #test18 stamp: 'IO 11/1/2020 14:26:01'!
PASSED!

!testRun: #TerniLapilliGameTest #test18XCantPutTwiceInARow stamp: 'IO 11/1/2020 14:26:01'!
PASSED!

!testRun: #TerniLapilliGameTest #test19 stamp: 'IO 11/1/2020 14:26:01'!
PASSED!

!testRun: #TerniLapilliGameTest #test19XCantMoveTwiceInARow stamp: 'IO 11/1/2020 14:26:01'!
PASSED!

!testRun: #TerniLapilliGameTest #test20 stamp: 'IO 11/1/2020 14:26:01'!
PASSED!

!testRun: #TerniLapilliGameTest #test20OCantPutTwiceInARow stamp: 'IO 11/1/2020 14:26:01'!
PASSED!

!testRun: #TerniLapilliGameTest #test21 stamp: 'IO 11/1/2020 14:26:01'!
PASSED!

!testRun: #TerniLapilliGameTest #test21OCantMoveTwiceInARow stamp: 'IO 11/1/2020 14:26:01'!
PASSED!

!testRun: #TerniLapilliGameTest #test22 stamp: 'IO 11/1/2020 14:26:01'!
PASSED!

!testRun: #TerniLapilliGameTest #test22XCantMoveOnTheirFirstTurn stamp: 'IO 11/1/2020 14:26:01'!
PASSED!

!testRun: #TerniLapilliGameTest #test23 stamp: 'IO 11/1/2020 14:26:01'!
PASSED!

!testRun: #TerniLapilliGameTest #test23XCantMoveOnTheirSecondTurn stamp: 'IO 11/1/2020 14:26:01'!
PASSED!

!testRun: #TerniLapilliGameTest #test24 stamp: 'IO 11/1/2020 14:26:01'!
PASSED!

!testRun: #TerniLapilliGameTest #test24XCantMoveOnTheirThirdTurn stamp: 'IO 11/1/2020 14:26:01'!
PASSED!

!testRun: #TerniLapilliGameTest #test25 stamp: 'IO 11/1/2020 14:26:01'!
PASSED!

!testRun: #TerniLapilliGameTest #test25OCantMoveOnTheirFirstTurn stamp: 'IO 11/1/2020 14:26:01'!
PASSED!

!testRun: #TerniLapilliGameTest #test26 stamp: 'IO 11/1/2020 14:26:01'!
PASSED!

!testRun: #TerniLapilliGameTest #test26OCantMoveOnTheirSecondTurn stamp: 'IO 11/1/2020 14:26:01'!
PASSED!

!testRun: #TerniLapilliGameTest #test27 stamp: 'IO 11/1/2020 14:26:01'!
PASSED!

!testRun: #TerniLapilliGameTest #test27OCantMoveOnTheirThirdTurn stamp: 'IO 11/1/2020 14:26:01'!
PASSED!

!testRun: #TerniLapilliGameTest #test28 stamp: 'IO 11/1/2020 14:26:01'!
PASSED!

!testRun: #TerniLapilliGameTest #test28XCantPutAfterTheirThirdTurn stamp: 'IO 11/1/2020 14:26:01'!
PASSED!

!testRun: #TerniLapilliGameTest #test29 stamp: 'IO 11/1/2020 14:26:01'!
PASSED!

!testRun: #TerniLapilliGameTest #test29OCantPutAfterTheirThirdTurn stamp: 'IO 11/1/2020 14:26:01'!
PASSED!

!testRun: #TerniLapilliGameTest #test30 stamp: 'IO 11/1/2020 14:26:01'!
PASSED!

!testRun: #TerniLapilliGameTest #test30OCantPutAfterXWon stamp: 'IO 11/1/2020 14:26:01'!
PASSED!

!testRun: #TerniLapilliGameTest #test31 stamp: 'IO 11/1/2020 14:26:01'!
PASSED!

!testRun: #TerniLapilliGameTest #test31OCantMoveAfterXWon stamp: 'IO 11/1/2020 14:26:01'!
PASSED!

!testRun: #TerniLapilliGameTest #test32 stamp: 'IO 11/1/2020 14:26:01'!
PASSED!

!testRun: #TerniLapilliGameTest #test32XCantMoveAfterOWon stamp: 'IO 11/1/2020 14:26:01'!
PASSED!

!testRun: #TerniLapilliGameTest #test33XCantPutAfterOWon stamp: 'IO 11/1/2020 14:26:01'!
PASSED!

!testRun: #TerniLapilliGameTest #test34XCantPutInAnOccupiedSpace stamp: 'IO 11/1/2020 14:26:01'!
PASSED!

!testRun: #TerniLapilliGameTest #test35OCantPutInAnOccupiedSpace stamp: 'IO 11/1/2020 14:26:01'!
PASSED!

!testRun: #TerniLapilliGameTest #test36XCantMoveToAnOccupiedSpace stamp: 'IO 11/1/2020 14:26:01'!
PASSED!

!testRun: #TerniLapilliGameTest #test37OCantMoveToAnOccupiedSpace stamp: 'IO 11/1/2020 14:26:01'!
PASSED!

!testRun: #TerniLapilliGameTest #test38XCantPutOutsideTheBoardUnderXAxis stamp: 'IO 11/1/2020 14:26:01'!
PASSED!

!testRun: #TerniLapilliGameTest #test39XCantPutOutsideTheBoardAboveXAxis stamp: 'IO 11/1/2020 14:26:01'!
PASSED!

!testRun: #TerniLapilliGameTest #test40XCantPutOutsideTheBoardUnderNorAboveTheYAxis stamp: 'IO 11/1/2020 14:26:01'!
PASSED!

!testRun: #TerniLapilliGameTest #test41OCantPutOutsideTheBoard stamp: 'IO 11/1/2020 14:26:01'!
PASSED!

!testRun: #TerniLapilliGameTest #test42XCantMoveToOutsideTheBoard stamp: 'IO 11/1/2020 14:26:01'!
PASSED!

!testRun: #TerniLapilliGameTest #test43OCantMoveToOutsideTheBoard stamp: 'IO 11/1/2020 14:26:01'!
PASSED!

!testRun: #TerniLapilliGameTest #test44XCantMoveTokensThatDontBelongToThem stamp: 'IO 11/1/2020 14:26:01'!
PASSED!

!testRun: #TerniLapilliGameTest #test45OCantMoveTokensThatDontBelongToThem stamp: 'IO 11/1/2020 14:26:01'!
PASSED!

!testRun: #TerniLapilliGameTest #test46XCantMoveaTokenOutsideItsNeighbors stamp: 'IO 11/1/2020 14:26:01'!
PASSED!

!testRun: #TerniLapilliGameTest #test47OCantMoveATokenOutsideItsNeighbors stamp: 'IO 11/1/2020 14:26:01'!
PASSED!

!classRemoval: #TerniLapilliPlayerTokens stamp: 'IO 11/1/2020 14:26:18'!
Object subclass: #TerniLapilliPlayerTokens
	instanceVariableNames: 'tokens'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Terni Lapilli'!

!classRemoval: #XIsPlacing stamp: 'IO 11/1/2020 14:26:18'!
XIsPlaying subclass: #XIsPlacing
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Terni Lapilli'!

!classRemoval: #XIsMoving stamp: 'IO 11/1/2020 14:26:19'!
XIsPlaying subclass: #XIsMoving
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Terni Lapilli'!

!classRemoval: #XIsPlaying stamp: 'IO 11/1/2020 14:26:19'!
TerniLapilliGameState subclass: #XIsPlaying
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Terni Lapilli'!

!classRemoval: #TerniLapilliGameStatePutsX stamp: 'IO 11/1/2020 14:26:19'!
TerniLapilliGameStatePlaysX subclass: #TerniLapilliGameStatePutsX
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Terni Lapilli'!

!classRemoval: #TerniLapilliGameStateMovesX stamp: 'IO 11/1/2020 14:26:20'!
TerniLapilliGameStatePlaysX subclass: #TerniLapilliGameStateMovesX
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Terni Lapilli'!

!classRemoval: #TerniLapilliGameStatePlaysX stamp: 'IO 11/1/2020 14:26:20'!
TerniLapilliGameState subclass: #TerniLapilliGameStatePlaysX
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Terni Lapilli'!

!classRemoval: #TerniLapilliGameStatePutsO stamp: 'IO 11/1/2020 14:26:20'!
TerniLapilliGameStatePlaysO subclass: #TerniLapilliGameStatePutsO
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Terni Lapilli'!

!classRemoval: #TerniLapilliGameStateMovesO stamp: 'IO 11/1/2020 14:26:21'!
TerniLapilliGameStatePlaysO subclass: #TerniLapilliGameStateMovesO
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Terni Lapilli'!

!classRemoval: #TerniLapilliGameStatePlaysO stamp: 'IO 11/1/2020 14:26:21'!
TerniLapilliGameState subclass: #TerniLapilliGameStatePlaysO
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Terni Lapilli'!

!classRemoval: #TerniLapilliGameStateOver stamp: 'IO 11/1/2020 14:26:21'!
TerniLapilliGameState subclass: #TerniLapilliGameStateOver
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Terni Lapilli'!

!classRemoval: #OIsPlacing stamp: 'IO 11/1/2020 14:26:22'!
OIsPlaying subclass: #OIsPlacing
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Terni Lapilli'!

!classRemoval: #OIsMoving stamp: 'IO 11/1/2020 14:26:22'!
OIsPlaying subclass: #OIsMoving
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Terni Lapilli'!

!classRemoval: #OIsPlaying stamp: 'IO 11/1/2020 14:26:22'!
TerniLapilliGameState subclass: #OIsPlaying
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Terni Lapilli'!

!classRemoval: #GameIsOver stamp: 'IO 11/1/2020 14:26:23'!
TerniLapilliGameState subclass: #GameIsOver
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Terni Lapilli'!

!classRemoval: #TerniLapilliGameState stamp: 'IO 11/1/2020 14:26:23'!
Object subclass: #TerniLapilliGameState
	instanceVariableNames: 'xTokens oTokens'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Terni Lapilli'!

!classRemoval: #TerniLapilliGame stamp: 'IO 11/1/2020 14:26:24'!
Object subclass: #TerniLapilliGame
	instanceVariableNames: 'state'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Terni Lapilli'!

!classRemoval: #TerniLapilliGameTest stamp: 'IO 11/1/2020 14:26:24'!
TestCase subclass: #TerniLapilliGameTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Terni Lapilli'!

----End fileIn of /Users/ilanolkies/uba/ingsoft1/ingeSoft-2020-2c/17-Terni-Lapilli/Terni Lapilli.st----!

!testRun: #TerniLapilliGameTest #test09XWinsWithTheSecondColumn stamp: 'IO 11/1/2020 14:26:36'!
PASSED!

!testRun: #TerniLapilliGameTest #test01XCanPutAToken stamp: 'IO 11/1/2020 14:26:36'!
PASSED!

!testRun: #TerniLapilliGameTest #test02puttingDoesNotAffectOtherPositions stamp: 'IO 11/1/2020 14:26:36'!
PASSED!

!testRun: #TerniLapilliGameTest #test03XCanPutInOtherPositions stamp: 'IO 11/1/2020 14:26:36'!
PASSED!

!testRun: #TerniLapilliGameTest #test04OCanPut stamp: 'IO 11/1/2020 14:26:36'!
PASSED!

!testRun: #TerniLapilliGameTest #test05XCanMove stamp: 'IO 11/1/2020 14:26:36'!
PASSED!

!testRun: #TerniLapilliGameTest #test06OCanMove stamp: 'IO 11/1/2020 14:26:36'!
PASSED!

!testRun: #TerniLapilliGameTest #test07XWinsWithTheFirstColumn stamp: 'IO 11/1/2020 14:26:36'!
PASSED!

!testRun: #TerniLapilliGameTest #test08XHasntWonYet stamp: 'IO 11/1/2020 14:26:36'!
PASSED!

!testRun: #TerniLapilliGameTest #test09XWinsWithTheSecondColumn stamp: 'IO 11/1/2020 14:26:36'!
PASSED!

!testRun: #TerniLapilliGameTest #test10XWinsWithTheThirdColumn stamp: 'IO 11/1/2020 14:26:36'!
PASSED!

!testRun: #TerniLapilliGameTest #test11XWinsWithTheFirstRow stamp: 'IO 11/1/2020 14:26:36'!
PASSED!

!testRun: #TerniLapilliGameTest #test12XWinsWithTheSecondRow stamp: 'IO 11/1/2020 14:26:36'!
PASSED!

!testRun: #TerniLapilliGameTest #test13XWinsWithTheThirdRow stamp: 'IO 11/1/2020 14:26:36'!
PASSED!

!testRun: #TerniLapilliGameTest #test14XWinsWithTheCrescentDiagonal stamp: 'IO 11/1/2020 14:26:36'!
PASSED!

!testRun: #TerniLapilliGameTest #test15XWinsWithTheDescendantDiagonal stamp: 'IO 11/1/2020 14:26:36'!
PASSED!

!testRun: #TerniLapilliGameTest #test16OWnis stamp: 'IO 11/1/2020 14:26:36'!
PASSED!

!testRun: #TerniLapilliGameTest #test17OCantStartPutting stamp: 'IO 11/1/2020 14:26:36'!
PASSED!

!testRun: #TerniLapilliGameTest #test18XCantPutTwiceInARow stamp: 'IO 11/1/2020 14:26:36'!
PASSED!

!testRun: #TerniLapilliGameTest #test19XCantMoveTwiceInARow stamp: 'IO 11/1/2020 14:26:36'!
PASSED!

!testRun: #TerniLapilliGameTest #test20OCantPutTwiceInARow stamp: 'IO 11/1/2020 14:26:36'!
PASSED!

!testRun: #TerniLapilliGameTest #test21OCantMoveTwiceInARow stamp: 'IO 11/1/2020 14:26:36'!
PASSED!

!testRun: #TerniLapilliGameTest #test22XCantMoveOnTheirFirstTurn stamp: 'IO 11/1/2020 14:26:36'!
PASSED!

!testRun: #TerniLapilliGameTest #test23XCantMoveOnTheirSecondTurn stamp: 'IO 11/1/2020 14:26:36'!
PASSED!

!testRun: #TerniLapilliGameTest #test24XCantMoveOnTheirThirdTurn stamp: 'IO 11/1/2020 14:26:36'!
PASSED!

!testRun: #TerniLapilliGameTest #test25OCantMoveOnTheirFirstTurn stamp: 'IO 11/1/2020 14:26:36'!
PASSED!

!testRun: #TerniLapilliGameTest #test26OCantMoveOnTheirSecondTurn stamp: 'IO 11/1/2020 14:26:36'!
PASSED!

!testRun: #TerniLapilliGameTest #test27OCantMoveOnTheirThirdTurn stamp: 'IO 11/1/2020 14:26:36'!
PASSED!

!testRun: #TerniLapilliGameTest #test28XCantPutAfterTheirThirdTurn stamp: 'IO 11/1/2020 14:26:36'!
PASSED!

!testRun: #TerniLapilliGameTest #test29OCantPutAfterTheirThirdTurn stamp: 'IO 11/1/2020 14:26:36'!
PASSED!

!testRun: #TerniLapilliGameTest #test30OCantPutAfterXWon stamp: 'IO 11/1/2020 14:26:36'!
PASSED!

!testRun: #TerniLapilliGameTest #test31OCantMoveAfterXWon stamp: 'IO 11/1/2020 14:26:36'!
PASSED!

!testRun: #TerniLapilliGameTest #test32XCantMoveAfterOWon stamp: 'IO 11/1/2020 14:26:36'!
PASSED!

!testRun: #TerniLapilliGameTest #test33XCantPutAfterOWon stamp: 'IO 11/1/2020 14:26:36'!
PASSED!

!testRun: #TerniLapilliGameTest #test34XCantPutInAnOccupiedSpace stamp: 'IO 11/1/2020 14:26:36'!
PASSED!

!testRun: #TerniLapilliGameTest #test35OCantPutInAnOccupiedSpace stamp: 'IO 11/1/2020 14:26:36'!
PASSED!

!testRun: #TerniLapilliGameTest #test36XCantMoveToAnOccupiedSpace stamp: 'IO 11/1/2020 14:26:36'!
PASSED!

!testRun: #TerniLapilliGameTest #test37OCantMoveToAnOccupiedSpace stamp: 'IO 11/1/2020 14:26:36'!
PASSED!

!testRun: #TerniLapilliGameTest #test38XCantPutOutsideTheBoardUnderXAxis stamp: 'IO 11/1/2020 14:26:36'!
PASSED!

!testRun: #TerniLapilliGameTest #test39XCantPutOutsideTheBoardAboveXAxis stamp: 'IO 11/1/2020 14:26:36'!
PASSED!

!testRun: #TerniLapilliGameTest #test40XCantPutOutsideTheBoardUnderNorAboveTheYAxis stamp: 'IO 11/1/2020 14:26:36'!
PASSED!

!testRun: #TerniLapilliGameTest #test41OCantPutOutsideTheBoard stamp: 'IO 11/1/2020 14:26:36'!
PASSED!

!testRun: #TerniLapilliGameTest #test42XCantMoveToOutsideTheBoard stamp: 'IO 11/1/2020 14:26:36'!
PASSED!

!testRun: #TerniLapilliGameTest #test43OCantMoveToOutsideTheBoard stamp: 'IO 11/1/2020 14:26:36'!
PASSED!

!testRun: #TerniLapilliGameTest #test44XCantMoveTokensThatDontBelongToThem stamp: 'IO 11/1/2020 14:26:36'!
PASSED!

!testRun: #TerniLapilliGameTest #test45OCantMoveTokensThatDontBelongToThem stamp: 'IO 11/1/2020 14:26:36'!
PASSED!

!testRun: #TerniLapilliGameTest #test46XCantMoveaTokenOutsideItsNeighbors stamp: 'IO 11/1/2020 14:26:36'!
PASSED!

!testRun: #TerniLapilliGameTest #test47OCantMoveATokenOutsideItsNeighbors stamp: 'IO 11/1/2020 14:26:36'!
PASSED!
!TerniLapilliGame methodsFor: 'initialization' stamp: 'IO 11/1/2020 16:17:57' prior: 50880968 overrides: 16896425!
initialize
	state := TerniLapilliGameState new.

! !
!TerniLapilliGame methodsFor: 'initialization' stamp: 'IO 11/1/2020 16:18:09' prior: 50881767 overrides: 16896425!
initialize

	"intialize a new game"

	state := TerniLapilliGameState new.

! !
!TerniLapilliGame methodsFor: 'testing' stamp: 'IO 11/1/2020 16:18:54' prior: 50880972!
includesColorAt: aPosition

	"returns wether a board position has a token placed or not"

	^(state includesColorOAt: aPosition) or: (state includesColorXAt: aPosition).
! !
!TerniLapilliGame methodsFor: 'testing' stamp: 'IO 11/1/2020 16:19:15' prior: 50880978!
includesColorOAt: aPosition

	"returns"

	^state includesColorOAt: aPosition.
! !
!TerniLapilliGame methodsFor: 'testing' stamp: 'IO 11/1/2020 16:19:28' prior: 50881788!
includesColorOAt: aPosition

	"returns wether a board position has a token placed by O player or not"

	^state includesColorOAt: aPosition.
! !
!TerniLapilliGame methodsFor: 'testing' stamp: 'IO 11/1/2020 16:19:45' prior: 50880983!
includesColorXAt: aPosition

	"returns wether a board position has a token placed by O player or not"

	^state includesColorXAt: aPosition.
! !
!TerniLapilliGame methodsFor: 'testing' stamp: 'IO 11/1/2020 16:20:11' prior: 50880988!
oHasWon

	"returns if O has won or not"

	^state oHasWon.
! !
!TerniLapilliGame methodsFor: 'testing' stamp: 'IO 11/1/2020 16:20:24' prior: 50880992!
xHasWon

	"returns if x has won or not"

	^state xHasWon.
! !
!TerniLapilliGame methodsFor: 'moves' stamp: 'IO 11/1/2020 16:20:33' prior: 50880996!
oMoves: sourcePosition to: destinationPosition

	(self includesColorAt: destinationPosition ) ifTrue: [^self error: TerniLapilliGame cannotMoveErrorMessage ] .
	
	state := state oMoves: sourcePosition to: destinationPosition.
! !
!TerniLapilliGame methodsFor: 'moves' stamp: 'IO 11/1/2020 16:20:39' prior: 50881820!
oMoves: sourcePosition to: destinationPosition

	(self includesColorAt: destinationPosition ) ifTrue: [^self error: TerniLapilliGame cannotMoveErrorMessage].

	state := state oMoves: sourcePosition to: destinationPosition.
! !
!TerniLapilliGame methodsFor: 'moves' stamp: 'IO 11/1/2020 16:20:54' prior: 50881830!
oMoves: sourcePosition to: destinationPosition

	(self includesColorAt: destinationPosition ) ifTrue: [^self error: TerniLapilliGame cannotMoveErrorMessage].

	state := state oMoves: sourcePosition to: destinationPosition.
! !
!TerniLapilliGame methodsFor: 'testing' stamp: 'IO 11/1/2020 16:23:32' prior: 50881779!
includesColorAt: aPosition

	"returns whether a board position has a token placed or not"

	^(state includesColorOAt: aPosition) or: (state includesColorXAt: aPosition).
! !
!TerniLapilliGame methodsFor: 'testing' stamp: 'IO 11/1/2020 16:23:36' prior: 50881794!
includesColorOAt: aPosition

	"returns whether a board position has a token placed by O player or not"

	^state includesColorOAt: aPosition.
! !
!TerniLapilliGame methodsFor: 'testing' stamp: 'IO 11/1/2020 16:23:39' prior: 50881802!
includesColorXAt: aPosition

	"returns whether a board position has a token placed by O player or not"

	^state includesColorXAt: aPosition.
! !
!TerniLapilliGame methodsFor: 'testing' stamp: 'IO 11/1/2020 16:23:46' prior: 50881810!
oHasWon

	"returns whether O has won or not"

	^state oHasWon.
! !
!TerniLapilliGame methodsFor: 'testing' stamp: 'IO 11/1/2020 16:23:49' prior: 50881815!
xHasWon

	"returns whether x has won or not"

	^state xHasWon.
! !
!TerniLapilliGame methodsFor: 'testing' stamp: 'IO 11/1/2020 16:24:10' prior: 50881850!
includesColorAt: aPosition

	"returns true if a board position has a token placed or not"

	^(state includesColorOAt: aPosition) or: (state includesColorXAt: aPosition).
! !
!TerniLapilliGame methodsFor: 'testing' stamp: 'IO 11/1/2020 16:24:14' prior: 50881859!
includesColorOAt: aPosition

	"returns true if a board position has a token placed by O player or not"

	^state includesColorOAt: aPosition.
! !
!TerniLapilliGame methodsFor: 'testing' stamp: 'IO 11/1/2020 16:24:16' prior: 50881867!
includesColorXAt: aPosition

	"returns true if a board position has a token placed by O player or not"

	^state includesColorXAt: aPosition.
! !
!TerniLapilliGame methodsFor: 'testing' stamp: 'IO 11/1/2020 16:24:19' prior: 50881875!
oHasWon

	"returns true if O has won or not"

	^state oHasWon.
! !
!TerniLapilliGame methodsFor: 'testing' stamp: 'IO 11/1/2020 16:24:22' prior: 50881880!
xHasWon

	"returns true if x has won or not"

	^state xHasWon.
! !
!TerniLapilliGame methodsFor: 'moves' stamp: 'IO 11/1/2020 16:25:03' prior: 50881840!
oMoves: sourcePosition to: destinationPosition

	"move O's token from a given position of the board to another given position"

	(self includesColorAt: destinationPosition ) ifTrue: [^self error: TerniLapilliGame cannotMoveErrorMessage].

	state := state oMoves: sourcePosition to: destinationPosition.
! !
!TerniLapilliGame methodsFor: 'moves' stamp: 'IO 11/1/2020 16:25:30' prior: 50881006!
oPutsOn: aPosition

	"put an O token in a given position of the board"

	(self includesColorAt: aPosition ) ifTrue:[^self error: TerniLapilliGame cannotPutErrorMessage ] .
	
	
	state := state oPutsOn: aPosition.
! !
!TerniLapilliGame methodsFor: 'moves' stamp: 'IO 11/1/2020 16:25:37' prior: 50881014!
xMoves: sourcePosition to: destinationPosition

	"move O's token from a given position of the board to another given position"

	(self includesColorAt: destinationPosition ) ifTrue:[^self error: TerniLapilliGame cannotMoveErrorMessage ] .

	state := state xMoves: sourcePosition to: destinationPosition.
	
	
! !
!TerniLapilliGame methodsFor: 'moves' stamp: 'IO 11/1/2020 16:25:44' prior: 50881024!
xPutsOn: aPosition

	"put an O token in a given position of the board"

	(self includesColorAt: aPosition ) ifTrue:[^self error: TerniLapilliGame cannotPutErrorMessage ] .
	
	
	state := state xPutsOn: aPosition.
! !
!TerniLapilliGame methodsFor: 'moves' stamp: 'IO 11/1/2020 16:25:49' prior: 50881956!
xPutsOn: aPosition

	"put an O token in a given position of the board"

	(self includesColorAt: aPosition ) ifTrue:[^self error: TerniLapilliGame cannotPutErrorMessage ] .

	state := state xPutsOn: aPosition.
! !
!TerniLapilliGameState methodsFor: 'moves' stamp: 'IO 11/1/2020 16:26:44' prior: 50881075!
oMoves: sourcePosition to: destinationPosition

	
	^self subclassResponsibility.
! !
!GameIsOver methodsFor: 'moves' stamp: 'IO 11/1/2020 16:27:31' prior: 50881174 overrides: 50881976!
oMoves: sourcePosition to: destinationPosition

	"return the next after O moving a token"

	^self errorGameEnded.! !
!GameIsOver methodsFor: 'moves' stamp: 'IO 11/1/2020 16:27:35' prior: 50881982 overrides: 50881976!
oMoves: sourcePosition to: destinationPosition

	"return the next after O moving a token"

	^self errorGameEnded.
! !
!GameIsOver methodsFor: 'moves' stamp: 'IO 11/1/2020 16:27:41' prior: 50881989 overrides: 50881976!
oMoves: sourcePosition to: destinationPosition

	^self errorGameEnded.
! !
!TerniLapilliGameState methodsFor: 'moves' stamp: 'IO 11/1/2020 16:27:45' prior: 50881976!
oMoves: sourcePosition to: destinationPosition

	"return the next after O moving a token"
	
	^self subclassResponsibility.
! !
!TerniLapilliGameState methodsFor: 'moves' stamp: 'IO 11/1/2020 16:28:01' prior: 50881081!
oPutsOn: aPosition

	"return the next after X moving a token"

	^self subclassResponsibility.
! !
!TerniLapilliGameState methodsFor: 'moves' stamp: 'IO 11/1/2020 16:28:11' prior: 50881086!
passTurn

	"return the next after O moving a token"

	^self subclassResponsibility.! !
!TerniLapilliGameState methodsFor: 'moves' stamp: 'IO 11/1/2020 16:28:12' prior: 50882015!
passTurn

	"return the next after O moving a token"

	^self subclassResponsibility.
! !
!TerniLapilliGameState methodsFor: 'moves' stamp: 'IO 11/1/2020 16:29:17' prior: 50882009!
oPutsOn: aPosition

	"return the next after O putting a token"

	^self subclassResponsibility.
! !
!TerniLapilliGameState methodsFor: 'moves' stamp: 'IO 11/1/2020 16:29:22' prior: 50882027!
oPutsOn: aPosition

	"return the next after O has put a token"

	^self subclassResponsibility.
! !
!TerniLapilliGameState methodsFor: 'moves' stamp: 'IO 11/1/2020 16:29:26' prior: 50882002!
oMoves: sourcePosition to: destinationPosition

	"return the next after O has moved a token"
	
	^self subclassResponsibility.
! !
!TerniLapilliGameState methodsFor: 'moves' stamp: 'IO 11/1/2020 16:31:36' prior: 50882039!
oMoves: sourcePosition to: destinationPosition

	"returns the next state when O moves a token"
	
	^self subclassResponsibility.
! !
!TerniLapilliGameState methodsFor: 'moves' stamp: 'IO 11/1/2020 16:31:43' prior: 50882033!
oPutsOn: aPosition

	"returns the next state when O puts a token"

	^self subclassResponsibility.
! !
!TerniLapilliGameState methodsFor: 'moves' stamp: 'IO 11/1/2020 16:32:52' prior: 50882021!
passTurn

	"factory method that prepares and returns the next state after a turn "

	^self subclassResponsibility.
! !

!testRun: #TerniLapilliGameTest #test01XCanPutAToken stamp: 'IO 11/1/2020 16:33:31'!
PASSED!

!testRun: #TerniLapilliGameTest #test02puttingDoesNotAffectOtherPositions stamp: 'IO 11/1/2020 16:33:31'!
PASSED!

!testRun: #TerniLapilliGameTest #test03XCanPutInOtherPositions stamp: 'IO 11/1/2020 16:33:31'!
PASSED!

!testRun: #TerniLapilliGameTest #test04OCanPut stamp: 'IO 11/1/2020 16:33:31'!
PASSED!

!testRun: #TerniLapilliGameTest #test05XCanMove stamp: 'IO 11/1/2020 16:33:31'!
PASSED!

!testRun: #TerniLapilliGameTest #test06OCanMove stamp: 'IO 11/1/2020 16:33:31'!
PASSED!

!testRun: #TerniLapilliGameTest #test07XWinsWithTheFirstColumn stamp: 'IO 11/1/2020 16:33:31'!
PASSED!

!testRun: #TerniLapilliGameTest #test08XHasntWonYet stamp: 'IO 11/1/2020 16:33:31'!
PASSED!

!testRun: #TerniLapilliGameTest #test09XWinsWithTheSecondColumn stamp: 'IO 11/1/2020 16:33:31'!
PASSED!

!testRun: #TerniLapilliGameTest #test10XWinsWithTheThirdColumn stamp: 'IO 11/1/2020 16:33:31'!
PASSED!

!testRun: #TerniLapilliGameTest #test11XWinsWithTheFirstRow stamp: 'IO 11/1/2020 16:33:31'!
PASSED!

!testRun: #TerniLapilliGameTest #test12XWinsWithTheSecondRow stamp: 'IO 11/1/2020 16:33:31'!
PASSED!

!testRun: #TerniLapilliGameTest #test13XWinsWithTheThirdRow stamp: 'IO 11/1/2020 16:33:31'!
PASSED!

!testRun: #TerniLapilliGameTest #test14XWinsWithTheCrescentDiagonal stamp: 'IO 11/1/2020 16:33:31'!
PASSED!

!testRun: #TerniLapilliGameTest #test15XWinsWithTheDescendantDiagonal stamp: 'IO 11/1/2020 16:33:31'!
PASSED!

!testRun: #TerniLapilliGameTest #test16OWnis stamp: 'IO 11/1/2020 16:33:31'!
PASSED!

!testRun: #TerniLapilliGameTest #test17OCantStartPutting stamp: 'IO 11/1/2020 16:33:31'!
PASSED!

!testRun: #TerniLapilliGameTest #test18XCantPutTwiceInARow stamp: 'IO 11/1/2020 16:33:31'!
PASSED!

!testRun: #TerniLapilliGameTest #test19XCantMoveTwiceInARow stamp: 'IO 11/1/2020 16:33:31'!
PASSED!

!testRun: #TerniLapilliGameTest #test20OCantPutTwiceInARow stamp: 'IO 11/1/2020 16:33:31'!
PASSED!

!testRun: #TerniLapilliGameTest #test21OCantMoveTwiceInARow stamp: 'IO 11/1/2020 16:33:31'!
PASSED!

!testRun: #TerniLapilliGameTest #test22XCantMoveOnTheirFirstTurn stamp: 'IO 11/1/2020 16:33:31'!
PASSED!

!testRun: #TerniLapilliGameTest #test23XCantMoveOnTheirSecondTurn stamp: 'IO 11/1/2020 16:33:31'!
PASSED!

!testRun: #TerniLapilliGameTest #test24XCantMoveOnTheirThirdTurn stamp: 'IO 11/1/2020 16:33:31'!
PASSED!

!testRun: #TerniLapilliGameTest #test25OCantMoveOnTheirFirstTurn stamp: 'IO 11/1/2020 16:33:31'!
PASSED!

!testRun: #TerniLapilliGameTest #test26OCantMoveOnTheirSecondTurn stamp: 'IO 11/1/2020 16:33:31'!
PASSED!

!testRun: #TerniLapilliGameTest #test27OCantMoveOnTheirThirdTurn stamp: 'IO 11/1/2020 16:33:31'!
PASSED!

!testRun: #TerniLapilliGameTest #test28XCantPutAfterTheirThirdTurn stamp: 'IO 11/1/2020 16:33:31'!
PASSED!

!testRun: #TerniLapilliGameTest #test29OCantPutAfterTheirThirdTurn stamp: 'IO 11/1/2020 16:33:31'!
PASSED!

!testRun: #TerniLapilliGameTest #test30OCantPutAfterXWon stamp: 'IO 11/1/2020 16:33:31'!
PASSED!

!testRun: #TerniLapilliGameTest #test31OCantMoveAfterXWon stamp: 'IO 11/1/2020 16:33:31'!
PASSED!

!testRun: #TerniLapilliGameTest #test32XCantMoveAfterOWon stamp: 'IO 11/1/2020 16:33:31'!
PASSED!

!testRun: #TerniLapilliGameTest #test33XCantPutAfterOWon stamp: 'IO 11/1/2020 16:33:31'!
PASSED!

!testRun: #TerniLapilliGameTest #test34XCantPutInAnOccupiedSpace stamp: 'IO 11/1/2020 16:33:31'!
PASSED!

!testRun: #TerniLapilliGameTest #test35OCantPutInAnOccupiedSpace stamp: 'IO 11/1/2020 16:33:31'!
PASSED!

!testRun: #TerniLapilliGameTest #test36XCantMoveToAnOccupiedSpace stamp: 'IO 11/1/2020 16:33:31'!
PASSED!

!testRun: #TerniLapilliGameTest #test37OCantMoveToAnOccupiedSpace stamp: 'IO 11/1/2020 16:33:31'!
PASSED!

!testRun: #TerniLapilliGameTest #test38XCantPutOutsideTheBoardUnderXAxis stamp: 'IO 11/1/2020 16:33:31'!
PASSED!

!testRun: #TerniLapilliGameTest #test39XCantPutOutsideTheBoardAboveXAxis stamp: 'IO 11/1/2020 16:33:31'!
PASSED!

!testRun: #TerniLapilliGameTest #test40XCantPutOutsideTheBoardUnderNorAboveTheYAxis stamp: 'IO 11/1/2020 16:33:31'!
PASSED!

!testRun: #TerniLapilliGameTest #test41OCantPutOutsideTheBoard stamp: 'IO 11/1/2020 16:33:31'!
PASSED!

!testRun: #TerniLapilliGameTest #test42XCantMoveToOutsideTheBoard stamp: 'IO 11/1/2020 16:33:31'!
PASSED!

!testRun: #TerniLapilliGameTest #test43OCantMoveToOutsideTheBoard stamp: 'IO 11/1/2020 16:33:31'!
PASSED!

!testRun: #TerniLapilliGameTest #test44XCantMoveTokensThatDontBelongToThem stamp: 'IO 11/1/2020 16:33:31'!
PASSED!

!testRun: #TerniLapilliGameTest #test45OCantMoveTokensThatDontBelongToThem stamp: 'IO 11/1/2020 16:33:31'!
PASSED!

!testRun: #TerniLapilliGameTest #test46XCantMoveaTokenOutsideItsNeighbors stamp: 'IO 11/1/2020 16:33:31'!
PASSED!

!testRun: #TerniLapilliGameTest #test47OCantMoveATokenOutsideItsNeighbors stamp: 'IO 11/1/2020 16:33:31'!
PASSED!
!TerniLapilliGameState methodsFor: 'moves' stamp: 'IO 11/1/2020 16:33:52' prior: 50882060!
passTurn

	"factory method that prepares and returns the next state after a turn was played"

	^self subclassResponsibility.
! !
!TerniLapilliGameState methodsFor: 'moves' stamp: 'IO 11/1/2020 16:34:11' prior: 50881090!
xMoves: sourcePosition to: destinationPosition

	"returns the next state when O moves a token"

	^self subclassResponsibility.
! !
!TerniLapilliGameState methodsFor: 'moves' stamp: 'IO 11/1/2020 16:34:18' prior: 50881096!
xPutsOn: aPosition

	^self subclassResponsibility.
! !
!TerniLapilliGameState methodsFor: 'moves' stamp: 'IO 11/1/2020 16:34:25' prior: 50882227!
xMoves: sourcePosition to: destinationPosition

	"returns the next state when X moves a token"

	^self subclassResponsibility.
! !
!TerniLapilliGameState methodsFor: 'moves' stamp: 'IO 11/1/2020 16:34:31' prior: 50882234!
xPutsOn: aPosition

	"returns the next state when X puts a token"

	^self subclassResponsibility.
! !
!TerniLapilliGameState methodsFor: 'testing' stamp: 'IO 11/1/2020 16:35:09' prior: 50881101!
includesColorOAt: aPosition

	"returns if the current state has a token placed at a given position"

	^oTokens includes: aPosition.

! !
!TerniLapilliGameState methodsFor: 'testing' stamp: 'IO 11/1/2020 16:35:26' prior: 50882253!
includesColorOAt: aPosition

	"returns if the current state has O's token placed at a given position"

	^oTokens includes: aPosition.

! !
!TerniLapilliGameState methodsFor: 'testing' stamp: 'IO 11/1/2020 16:35:42' prior: 50881106!
includesColorXAt: aPosition

	"returns if the current state has X's token placed at a given position"

	^xTokens includes: aPosition.
! !
!TerniLapilliGameState methodsFor: 'testing' stamp: 'IO 11/1/2020 16:36:03' prior: 50881111!
oHasWon

	"returns if the current state has a token placed at a given position"
	^oTokens areInWinningPosition.
! !
!TerniLapilliGameState methodsFor: 'testing' stamp: 'IO 11/1/2020 16:36:13' prior: 50882261!
includesColorOAt: aPosition

	"returns true if the current state has O's token placed at a given position"

	^oTokens includes: aPosition.

! !
!TerniLapilliGameState methodsFor: 'testing' stamp: 'IO 11/1/2020 16:36:15' prior: 50882269!
includesColorXAt: aPosition

	"returns true if the current state has X's token placed at a given position"

	^xTokens includes: aPosition.
! !
!TerniLapilliGameState methodsFor: 'testing' stamp: 'IO 11/1/2020 16:36:46' prior: 50882277!
oHasWon

	"returns true if the current state is in a winning position for O. this state is terminal"

	^oTokens areInWinningPosition.
! !
!TerniLapilliGameState methodsFor: 'testing' stamp: 'IO 11/1/2020 16:37:04' prior: 50881115!
xHasWon

	"returns true if the current state is in a winning position for X. this state is terminal"

	^xTokens areInWinningPosition.
! !
!TerniLapilliGameState methodsFor: 'initializtion' stamp: 'IO 11/1/2020 16:41:05' prior: 50881120!
intializeWithXTokens: nextXTokens oTokens: nextOTokens.

	"initialize the next state with the given tokens for X and O. this method is used by all the next state factories"

	xTokens := nextXTokens.
	oTokens := nextOTokens.
! !
!TerniLapilliGameState methodsFor: 'error' stamp: 'IO 11/1/2020 16:41:33' prior: 50881126!
errorCannotMove

	"signals that a player is trying to move in the wrong turn"

	^self error: TerniLapilliGame cannotMoveErrorMessage.
! !
!TerniLapilliGameState methodsFor: 'error' stamp: 'IO 11/1/2020 16:41:51' prior: 50882326!
errorCannotMove

	"signals that a player is trying to move a token when is still ilegal"

	^self error: TerniLapilliGame cannotMoveErrorMessage.
! !
!TerniLapilliGameState methodsFor: 'error' stamp: 'IO 11/1/2020 16:41:55' prior: 50882334!
errorCannotMove

	"signal that a player is trying to move a token when is still ilegal"

	^self error: TerniLapilliGame cannotMoveErrorMessage.
! !
!TerniLapilliGameState methodsFor: 'error' stamp: 'IO 11/1/2020 16:42:00' prior: 50882342!
errorCannotMove

	"signal when a player is trying to move a token when is still ilegal"

	^self error: TerniLapilliGame cannotMoveErrorMessage.
! !
!TerniLapilliGameState methodsFor: 'error' stamp: 'IO 11/1/2020 16:42:41' prior: 50881131!
errorCannotPut

	"signal when a player is trying to put a token when they has already put their trhee tokens"

	^self error: TerniLapilliGame cannotPutErrorMessage.
! !
!TerniLapilliGameState methodsFor: 'error' stamp: 'IO 11/1/2020 16:43:02' prior: 50881136!
errorIlegalTurn

	"signal when a player is trying to play when is not their turn"

	^self error: TerniLapilliGame wrongTurnErrorMessage.
! !
!GameIsOver methodsFor: 'error signaling' stamp: 'IO 11/1/2020 16:43:26' prior: 50881195!
errorGameEnded

	"see superimplementor"

	^self error: TerniLapilliGame gameEndedErrorMessage.
! !
!TerniLapilliGameState methodsFor: 'error' stamp: 'IO 11/1/2020 16:44:35'!
errorGameEnded

	"wignal when a player is trying to move or put after the game has ended"

	^self error: TerniLapilliGame gameEndedErrorMessage.
! !

!methodRemoval: GameIsOver #errorGameEnded stamp: 'IO 11/1/2020 16:44:48'!
errorGameEnded

	"see superimplementor"

	^self error: TerniLapilliGame gameEndedErrorMessage.
!

!testRun: #TerniLapilliGameTest #test01XCanPutAToken stamp: 'IO 11/1/2020 16:44:56'!
PASSED!

!testRun: #TerniLapilliGameTest #test02puttingDoesNotAffectOtherPositions stamp: 'IO 11/1/2020 16:44:56'!
PASSED!

!testRun: #TerniLapilliGameTest #test03XCanPutInOtherPositions stamp: 'IO 11/1/2020 16:44:56'!
PASSED!

!testRun: #TerniLapilliGameTest #test04OCanPut stamp: 'IO 11/1/2020 16:44:56'!
PASSED!

!testRun: #TerniLapilliGameTest #test05XCanMove stamp: 'IO 11/1/2020 16:44:56'!
PASSED!

!testRun: #TerniLapilliGameTest #test06OCanMove stamp: 'IO 11/1/2020 16:44:56'!
PASSED!

!testRun: #TerniLapilliGameTest #test07XWinsWithTheFirstColumn stamp: 'IO 11/1/2020 16:44:56'!
PASSED!

!testRun: #TerniLapilliGameTest #test08XHasntWonYet stamp: 'IO 11/1/2020 16:44:56'!
PASSED!

!testRun: #TerniLapilliGameTest #test09XWinsWithTheSecondColumn stamp: 'IO 11/1/2020 16:44:56'!
PASSED!

!testRun: #TerniLapilliGameTest #test10XWinsWithTheThirdColumn stamp: 'IO 11/1/2020 16:44:56'!
PASSED!

!testRun: #TerniLapilliGameTest #test11XWinsWithTheFirstRow stamp: 'IO 11/1/2020 16:44:56'!
PASSED!

!testRun: #TerniLapilliGameTest #test12XWinsWithTheSecondRow stamp: 'IO 11/1/2020 16:44:56'!
PASSED!

!testRun: #TerniLapilliGameTest #test13XWinsWithTheThirdRow stamp: 'IO 11/1/2020 16:44:56'!
PASSED!

!testRun: #TerniLapilliGameTest #test14XWinsWithTheCrescentDiagonal stamp: 'IO 11/1/2020 16:44:56'!
PASSED!

!testRun: #TerniLapilliGameTest #test15XWinsWithTheDescendantDiagonal stamp: 'IO 11/1/2020 16:44:56'!
PASSED!

!testRun: #TerniLapilliGameTest #test16OWnis stamp: 'IO 11/1/2020 16:44:56'!
PASSED!

!testRun: #TerniLapilliGameTest #test17OCantStartPutting stamp: 'IO 11/1/2020 16:44:56'!
PASSED!

!testRun: #TerniLapilliGameTest #test18XCantPutTwiceInARow stamp: 'IO 11/1/2020 16:44:56'!
PASSED!

!testRun: #TerniLapilliGameTest #test19XCantMoveTwiceInARow stamp: 'IO 11/1/2020 16:44:56'!
PASSED!

!testRun: #TerniLapilliGameTest #test20OCantPutTwiceInARow stamp: 'IO 11/1/2020 16:44:56'!
PASSED!

!testRun: #TerniLapilliGameTest #test21OCantMoveTwiceInARow stamp: 'IO 11/1/2020 16:44:56'!
PASSED!

!testRun: #TerniLapilliGameTest #test22XCantMoveOnTheirFirstTurn stamp: 'IO 11/1/2020 16:44:56'!
PASSED!

!testRun: #TerniLapilliGameTest #test23XCantMoveOnTheirSecondTurn stamp: 'IO 11/1/2020 16:44:56'!
PASSED!

!testRun: #TerniLapilliGameTest #test24XCantMoveOnTheirThirdTurn stamp: 'IO 11/1/2020 16:44:56'!
PASSED!

!testRun: #TerniLapilliGameTest #test25OCantMoveOnTheirFirstTurn stamp: 'IO 11/1/2020 16:44:56'!
PASSED!

!testRun: #TerniLapilliGameTest #test26OCantMoveOnTheirSecondTurn stamp: 'IO 11/1/2020 16:44:56'!
PASSED!

!testRun: #TerniLapilliGameTest #test27OCantMoveOnTheirThirdTurn stamp: 'IO 11/1/2020 16:44:56'!
PASSED!

!testRun: #TerniLapilliGameTest #test28XCantPutAfterTheirThirdTurn stamp: 'IO 11/1/2020 16:44:56'!
PASSED!

!testRun: #TerniLapilliGameTest #test29OCantPutAfterTheirThirdTurn stamp: 'IO 11/1/2020 16:44:56'!
PASSED!

!testRun: #TerniLapilliGameTest #test30OCantPutAfterXWon stamp: 'IO 11/1/2020 16:44:56'!
PASSED!

!testRun: #TerniLapilliGameTest #test31OCantMoveAfterXWon stamp: 'IO 11/1/2020 16:44:56'!
PASSED!

!testRun: #TerniLapilliGameTest #test32XCantMoveAfterOWon stamp: 'IO 11/1/2020 16:44:56'!
PASSED!

!testRun: #TerniLapilliGameTest #test33XCantPutAfterOWon stamp: 'IO 11/1/2020 16:44:56'!
PASSED!

!testRun: #TerniLapilliGameTest #test34XCantPutInAnOccupiedSpace stamp: 'IO 11/1/2020 16:44:56'!
PASSED!

!testRun: #TerniLapilliGameTest #test35OCantPutInAnOccupiedSpace stamp: 'IO 11/1/2020 16:44:56'!
PASSED!

!testRun: #TerniLapilliGameTest #test36XCantMoveToAnOccupiedSpace stamp: 'IO 11/1/2020 16:44:56'!
PASSED!

!testRun: #TerniLapilliGameTest #test37OCantMoveToAnOccupiedSpace stamp: 'IO 11/1/2020 16:44:56'!
PASSED!

!testRun: #TerniLapilliGameTest #test38XCantPutOutsideTheBoardUnderXAxis stamp: 'IO 11/1/2020 16:44:56'!
PASSED!

!testRun: #TerniLapilliGameTest #test39XCantPutOutsideTheBoardAboveXAxis stamp: 'IO 11/1/2020 16:44:56'!
PASSED!

!testRun: #TerniLapilliGameTest #test40XCantPutOutsideTheBoardUnderNorAboveTheYAxis stamp: 'IO 11/1/2020 16:44:56'!
PASSED!

!testRun: #TerniLapilliGameTest #test41OCantPutOutsideTheBoard stamp: 'IO 11/1/2020 16:44:56'!
PASSED!

!testRun: #TerniLapilliGameTest #test42XCantMoveToOutsideTheBoard stamp: 'IO 11/1/2020 16:44:56'!
PASSED!

!testRun: #TerniLapilliGameTest #test43OCantMoveToOutsideTheBoard stamp: 'IO 11/1/2020 16:44:56'!
PASSED!

!testRun: #TerniLapilliGameTest #test44XCantMoveTokensThatDontBelongToThem stamp: 'IO 11/1/2020 16:44:56'!
PASSED!

!testRun: #TerniLapilliGameTest #test45OCantMoveTokensThatDontBelongToThem stamp: 'IO 11/1/2020 16:44:56'!
PASSED!

!testRun: #TerniLapilliGameTest #test46XCantMoveaTokenOutsideItsNeighbors stamp: 'IO 11/1/2020 16:44:56'!
PASSED!

!testRun: #TerniLapilliGameTest #test47OCantMoveATokenOutsideItsNeighbors stamp: 'IO 11/1/2020 16:44:56'!
PASSED!
!GameIsOver methodsFor: 'moves' stamp: 'IO 11/1/2020 16:45:18' prior: 50881996 overrides: 50882046!
oMoves: sourcePosition to: destinationPosition

	"see superimplementor"

	^self errorGameEnded.
! !
!GameIsOver methodsFor: 'moves' stamp: 'IO 11/1/2020 16:45:30' prior: 50881180 overrides: 50882053!
oPutsOn: aPosition

	"see superimplementor"

	^self errorGameEnded.
! !
!GameIsOver methodsFor: 'moves' stamp: 'IO 11/1/2020 16:47:59' prior: 50881185 overrides: 50882239!
xMoves: sourcePosition to: destinationPosition

	"see superimplementor"

	^self errorGameEnded.

! !
!GameIsOver methodsFor: 'moves' stamp: 'IO 11/1/2020 16:48:07' prior: 50881191 overrides: 50882246!
xPutsOn: aPosition

	"see superimplementor"

	^self errorGameEnded.
	! !
!GameIsOver methodsFor: 'moves' stamp: 'IO 11/1/2020 16:48:08' prior: 50882568 overrides: 50882246!
xPutsOn: aPosition

	"see superimplementor"

	^self errorGameEnded.
! !
!TerniLapilliGameState methodsFor: 'error' stamp: 'IO 11/1/2020 16:49:25' prior: 50882381!
errorGameEnded

	"signal when a player is trying to move or put after the game has ended"

	^self error: TerniLapilliGame gameEndedErrorMessage.
! !
!TerniLapilliGameState methodsFor: 'testing' stamp: 'IO 11/1/2020 16:50:04' prior: 50882300!
oHasWon

	"returns true if the current state is in a winning position for O. this state is final"

	^oTokens areInWinningPosition.
! !
!TerniLapilliGameState methodsFor: 'testing' stamp: 'IO 11/1/2020 16:50:11' prior: 50882588!
oHasWon

	"returns true if the current state is in a winning position for O. if true, the state is final"

	^oTokens areInWinningPosition.
! !
!TerniLapilliGameState methodsFor: 'testing' stamp: 'IO 11/1/2020 16:50:19' prior: 50882308!
xHasWon

	"returns true if the current state is in a winning position for X. if true, the state is final"

	^xTokens areInWinningPosition.
! !
!OIsPlaying methodsFor: 'moves' stamp: 'IO 11/1/2020 16:51:12' prior: 50881234 overrides: 50882246!
xPutsOn: aPosition

	"see superimplementor"

	self errorIlegalTurn.
! !
!OIsPlaying methodsFor: 'moves' stamp: 'IO 11/1/2020 16:51:30' prior: 50881212 overrides: 50882046!
oMoves: sourcePosition to: destinationPosition

	"see superimplementor"

	^self subclassResponsibility.
! !
!OIsPlaying methodsFor: 'moves' stamp: 'IO 11/1/2020 16:51:44' prior: 50881218 overrides: 50882053!
oPutsOn: aPosition

	"see superimplementor"

	oTokens add: aPosition.
	^self passTurn.
! !
!OIsPlaying methodsFor: 'moves' stamp: 'IO 11/1/2020 16:51:54' prior: 50881223 overrides: 50882220!
passTurn

	"see superimplementor"

	^XIsPlaying withXTokens: xTokens oTokens: oTokens.
! !
!OIsPlaying methodsFor: 'moves' stamp: 'IO 11/1/2020 16:52:06' prior: 50881228 overrides: 50882239!
xMoves: sourcePosition to: destinationPosition

	"see superimplementor"

	self errorIlegalTurn.
! !
!OIsMoving methodsFor: 'moves' stamp: 'IO 11/1/2020 16:52:20' prior: 50881271 overrides: 50882618!
oMoves: sourcePosition to: destinationPosition

	"see superimplementor"

	oTokens move: sourcePosition to: destinationPosition.
	^self passTurn.
! !
!OIsPlacing methodsFor: 'moves' stamp: 'IO 11/1/2020 16:52:28' prior: 50881309 overrides: 50882618!
oMoves: sourcePosition to: destinationPosition

	^self errorCannotMove.
! !
!OIsPlacing methodsFor: 'moves' stamp: 'IO 11/1/2020 16:52:33' prior: 50882652 overrides: 50882618!
oMoves: sourcePosition to: destinationPosition

	"see superimplementor"

	^self errorCannotMove.
! !
!OIsMoving methodsFor: 'moves' stamp: 'IO 11/1/2020 16:52:55' prior: 50881278 overrides: 50882625!
oPutsOn: aPosition

	"see superimplementor"

	^self errorCannotPut.
! !
!OIsPlacing methodsFor: 'moves' stamp: 'IO 11/1/2020 16:53:05' prior: 50881314 overrides: 50882625!
oPutsOn: aPosition

	"see superimplementor"

	oTokens add: aPosition.
	^self passTurn.

! !
!XIsPlaying methodsFor: 'moves' stamp: 'IO 11/1/2020 16:53:12' prior: 50881353 overrides: 50882046!
oMoves: sourcePosition to: destinationPosition

	"see superimplementor"

	self errorIlegalTurn.
! !
!XIsPlaying methodsFor: 'moves' stamp: 'IO 11/1/2020 16:53:19' prior: 50881359 overrides: 50882053!
oPutsOn: aPosition

	"see superimplementor"

	self errorIlegalTurn.

! !
!XIsPlaying methodsFor: 'moves' stamp: 'IO 11/1/2020 16:53:22' prior: 50882684 overrides: 50882053!
oPutsOn: aPosition

	"see superimplementor"

	self errorIlegalTurn.
! !
!XIsPlaying methodsFor: 'moves' stamp: 'IO 11/1/2020 16:57:53' prior: 50881364 overrides: 50882220!
passTurn

	"see superimplementor"

	^OIsPlaying withXTokens: xTokens oTokens: oTokens.
! !
!XIsPlaying methodsFor: 'moves' stamp: 'IO 11/1/2020 16:59:28' prior: 50881369 overrides: 50882239!
xMoves: sourcePosition to: destinationPosition

	"see superimplementor"

	^self subclassResponsibility.
! !
!XIsPlaying methodsFor: 'moves' stamp: 'IO 11/1/2020 16:59:30' prior: 50881375 overrides: 50882246!
xPutsOn: aPosition

	"see superimplementor"

	^self subclassResponsibility.
! !
!XIsPlaying methodsFor: 'moves' stamp: 'IO 11/1/2020 16:59:33' prior: 50882709 overrides: 50882246!
xPutsOn: aPosition

	"see superimplementor"

	^self subclassResponsibility.
! !
!TerniLapilliGameState methodsFor: 'moves' stamp: 'IO 11/1/2020 17:00:28' prior: 50882220!
passTurn

	"
		prepare and return the next state after a turn was played
		implementation: this is a factory method with different strategies
	"

	^self subclassResponsibility.
! !
!TerniLapilliGameState methodsFor: 'moves' stamp: 'IO 11/1/2020 17:01:05' prior: 50882721!
passTurn

	"
		prepare and return the next state after a turn was played
		implementation details: this is a factory method with different strategies for preparing the next state
	"

	^self subclassResponsibility.
! !
!XIsMoving methodsFor: 'moves' stamp: 'IO 11/1/2020 17:01:25' prior: 50881417 overrides: 50882702!
xMoves: sourcePosition to: destinationPosition

	"see superimplementor"

	xTokens move: sourcePosition to: destinationPosition.
	^self passTurn.
! !
!XIsMoving methodsFor: 'moves' stamp: 'IO 11/1/2020 17:01:32' prior: 50881424 overrides: 50882715!
xPutsOn: aPosition

	"see superimplementor"

	^self errorCannotPut.
! !
!XIsPlacing methodsFor: 'moves' stamp: 'IO 11/1/2020 17:01:45' prior: 50881455 overrides: 50882702!
xMoves: sourcePosition to: destinationPosition

	"see superimplementor"

	^self errorCannotMove.
! !
!XIsPlacing methodsFor: 'moves' stamp: 'IO 11/1/2020 17:02:38' prior: 50881461 overrides: 50882715!
xPutsOn: aPosition

	"see superimplementor"

	xTokens add: aPosition.
	^self passTurn.

! !
!TerniLapilliPlayerTokens methodsFor: 'moves' stamp: 'IO 11/1/2020 17:04:41' prior: 50881494!
add: aPosition

	"see superimplementor"

	self validateIsInBoard: aPosition withErrorMessage: TerniLapilliGame cannotPutErrorMessage.
	tokens add: aPosition.
! !
!TerniLapilliPlayerTokens methodsFor: 'moves' stamp: 'IO 11/1/2020 17:05:08' prior: 50882767!
add: aPosition

	"add a token in a given position of the board"

	self validateIsInBoard: aPosition withErrorMessage: TerniLapilliGame cannotPutErrorMessage.
	tokens add: aPosition.
! !
!TerniLapilliPlayerTokens methodsFor: 'moves' stamp: 'IO 11/1/2020 17:05:27' prior: 50881501!
move: sourcePosition to: destinationPosition

	"move a token form a given position of the board to another position"

	self validateIsLegalMoveFrom: sourcePosition to: destinationPosition.

	tokens remove: sourcePosition.
	tokens add: destinationPosition.! !
!TerniLapilliPlayerTokens methodsFor: 'testing' stamp: 'IO 11/1/2020 17:06:08' prior: 50881510!
areInWinningPosition

	"returns true if the tokens are in a winning position"

	^(
		(
			(self areInWinningPositionByColumn: 0) or:
			(self areInWinningPositionByColumn: 1) or:
			(self areInWinningPositionByColumn: 2)
		) or: (
			(self areInWinningPositionByRow: 0) or:
			(self areInWinningPositionByRow: 1) or:
			(self areInWinningPositionByRow: 2)
		) or: (
			self areInWinningPositionByDiagonal
		)
	).

! !
!TerniLapilliPlayerTokens methodsFor: 'testing' stamp: 'IO 11/1/2020 17:06:14' prior: 50882796!
areInWinningPosition

	"returns true if the tokens are in a winning position"

	^(
		(
			(self areInWinningPositionByColumn: 0) or:
			(self areInWinningPositionByColumn: 1) or:
			(self areInWinningPositionByColumn: 2)
		) or: (
			(self areInWinningPositionByRow: 0) or:
			(self areInWinningPositionByRow: 1) or:
			(self areInWinningPositionByRow: 2)
		) or: (
			self areInWinningPositionByDiagonal
		)
	).
! !
!TerniLapilliPlayerTokens methodsFor: 'testing' stamp: 'IO 11/1/2020 17:06:53' prior: 50881525!
areInWinningPositionByColumn: columnNumber

	"returns true if the tokens are in a winning position over a given column"

	^(tokens includes: (0@columnNumber)) and: (tokens includes: (1@columnNumber)) and: (tokens includes: (2@columnNumber))! !
!TerniLapilliPlayerTokens methodsFor: 'testing' stamp: 'IO 11/1/2020 17:07:09' prior: 50881533!
areInWinningPositionByDiagonal
	"returns true if the tokens are in a winning position over a diagonal"
	^(tokens includes: (1@1)) and: (
		((tokens includes: (0@0)) and: (tokens includes: (2@2))) or: (
		(tokens includes: (2@0)) and: (tokens includes: (0@2))
	)).
! !
!TerniLapilliPlayerTokens methodsFor: 'testing' stamp: 'IO 11/1/2020 17:07:12' prior: 50882841!
areInWinningPositionByDiagonal
	"returns true if the tokens are in a winning position over a diagonal"

	^(tokens includes: (1@1)) and: (
		((tokens includes: (0@0)) and: (tokens includes: (2@2))) or: (
		(tokens includes: (2@0)) and: (tokens includes: (0@2))
	)).
! !
!TerniLapilliPlayerTokens methodsFor: 'testing' stamp: 'IO 11/1/2020 17:07:19' prior: 50882853!
areInWinningPositionByDiagonal

	"returns true if the tokens are in a winning position over a diagonal"

	^(tokens includes: (1@1)) and: (
		((tokens includes: (0@0)) and: (tokens includes: (2@2))) or: (
		(tokens includes: (2@0)) and: (tokens includes: (0@2))
	)).
! !
!TerniLapilliPlayerTokens methodsFor: 'testing' stamp: 'IO 11/1/2020 17:07:38' prior: 50881542!
areInWinningPositionByRow: rowNumber

	"return true if the tokens are in a winning position over a given row"

	^(tokens includes: (rowNumber@0)) and: (tokens includes: (rowNumber@1)) and: (tokens includes: (rowNumber@2)).
! !
!TerniLapilliPlayerTokens methodsFor: 'testing' stamp: 'IO 11/1/2020 17:07:41' prior: 50882865!
areInWinningPositionByDiagonal

	"return true if the tokens are in a winning position over a diagonal"

	^(tokens includes: (1@1)) and: (
		((tokens includes: (0@0)) and: (tokens includes: (2@2))) or: (
		(tokens includes: (2@0)) and: (tokens includes: (0@2))
	)).
! !
!TerniLapilliPlayerTokens methodsFor: 'testing' stamp: 'IO 11/1/2020 17:07:45' prior: 50882830!
areInWinningPositionByColumn: columnNumber

	"return true if the tokens are in a winning position over a given column"

	^(tokens includes: (0@columnNumber)) and: (tokens includes: (1@columnNumber)) and: (tokens includes: (2@columnNumber))! !
!TerniLapilliPlayerTokens methodsFor: 'testing' stamp: 'IO 11/1/2020 17:07:48' prior: 50882813!
areInWinningPosition

	"return true if the tokens are in a winning position"

	^(
		(
			(self areInWinningPositionByColumn: 0) or:
			(self areInWinningPositionByColumn: 1) or:
			(self areInWinningPositionByColumn: 2)
		) or: (
			(self areInWinningPositionByRow: 0) or:
			(self areInWinningPositionByRow: 1) or:
			(self areInWinningPositionByRow: 2)
		) or: (
			self areInWinningPositionByDiagonal
		)
	).
! !
!TerniLapilliPlayerTokens methodsFor: 'testing' stamp: 'IO 11/1/2020 17:08:16' prior: 50881550!
includes: aPosition

	"returns true if a token is placed in a given position"

	^tokens includes: aPosition.
! !
!TerniLapilliPlayerTokens methodsFor: 'testing' stamp: 'IO 11/1/2020 17:08:53' prior: 50881555 overrides: 16880927!
size

	"return the amount of tokens placed"

	^tokens size.
! !
!TerniLapilliPlayerTokens methodsFor: 'initializtion' stamp: 'IO 11/1/2020 17:09:35' prior: 50881560 overrides: 16896425!
initialize

	"initialize the tokens for a player of the gam"

	tokens := Set new.
! !
!TerniLapilliPlayerTokens methodsFor: 'validations' stamp: 'IO 11/1/2020 17:10:27' prior: 50881564!
validateIsInBoard: aPosition withErrorMessage: errorMessage

	"signal when a position is invalid with a given error message"

	aPosition x < 3 ifFalse:[^self error: errorMessage].
	aPosition x >= 0 ifFalse:[^self error: errorMessage].
	aPosition y < 3 ifFalse:[^self error: errorMessage].
	aPosition y >= 0 ifFalse:[^self error: errorMessage].
! !

!testRun: #TerniLapilliGameTest #test01XCanPutAToken stamp: 'IO 11/1/2020 17:10:34'!
PASSED!

!testRun: #TerniLapilliGameTest #test02puttingDoesNotAffectOtherPositions stamp: 'IO 11/1/2020 17:10:34'!
PASSED!

!testRun: #TerniLapilliGameTest #test03XCanPutInOtherPositions stamp: 'IO 11/1/2020 17:10:34'!
PASSED!

!testRun: #TerniLapilliGameTest #test04OCanPut stamp: 'IO 11/1/2020 17:10:34'!
PASSED!

!testRun: #TerniLapilliGameTest #test05XCanMove stamp: 'IO 11/1/2020 17:10:34'!
PASSED!

!testRun: #TerniLapilliGameTest #test06OCanMove stamp: 'IO 11/1/2020 17:10:34'!
PASSED!

!testRun: #TerniLapilliGameTest #test07XWinsWithTheFirstColumn stamp: 'IO 11/1/2020 17:10:34'!
PASSED!

!testRun: #TerniLapilliGameTest #test08XHasntWonYet stamp: 'IO 11/1/2020 17:10:34'!
PASSED!

!testRun: #TerniLapilliGameTest #test09XWinsWithTheSecondColumn stamp: 'IO 11/1/2020 17:10:34'!
PASSED!

!testRun: #TerniLapilliGameTest #test10XWinsWithTheThirdColumn stamp: 'IO 11/1/2020 17:10:34'!
PASSED!

!testRun: #TerniLapilliGameTest #test11XWinsWithTheFirstRow stamp: 'IO 11/1/2020 17:10:34'!
PASSED!

!testRun: #TerniLapilliGameTest #test12XWinsWithTheSecondRow stamp: 'IO 11/1/2020 17:10:35'!
PASSED!

!testRun: #TerniLapilliGameTest #test13XWinsWithTheThirdRow stamp: 'IO 11/1/2020 17:10:35'!
PASSED!

!testRun: #TerniLapilliGameTest #test14XWinsWithTheCrescentDiagonal stamp: 'IO 11/1/2020 17:10:35'!
PASSED!

!testRun: #TerniLapilliGameTest #test15XWinsWithTheDescendantDiagonal stamp: 'IO 11/1/2020 17:10:35'!
PASSED!

!testRun: #TerniLapilliGameTest #test16OWnis stamp: 'IO 11/1/2020 17:10:35'!
PASSED!

!testRun: #TerniLapilliGameTest #test17OCantStartPutting stamp: 'IO 11/1/2020 17:10:35'!
PASSED!

!testRun: #TerniLapilliGameTest #test18XCantPutTwiceInARow stamp: 'IO 11/1/2020 17:10:35'!
PASSED!

!testRun: #TerniLapilliGameTest #test19XCantMoveTwiceInARow stamp: 'IO 11/1/2020 17:10:35'!
PASSED!

!testRun: #TerniLapilliGameTest #test20OCantPutTwiceInARow stamp: 'IO 11/1/2020 17:10:35'!
PASSED!

!testRun: #TerniLapilliGameTest #test21OCantMoveTwiceInARow stamp: 'IO 11/1/2020 17:10:35'!
PASSED!

!testRun: #TerniLapilliGameTest #test22XCantMoveOnTheirFirstTurn stamp: 'IO 11/1/2020 17:10:35'!
PASSED!

!testRun: #TerniLapilliGameTest #test23XCantMoveOnTheirSecondTurn stamp: 'IO 11/1/2020 17:10:35'!
PASSED!

!testRun: #TerniLapilliGameTest #test24XCantMoveOnTheirThirdTurn stamp: 'IO 11/1/2020 17:10:35'!
PASSED!

!testRun: #TerniLapilliGameTest #test25OCantMoveOnTheirFirstTurn stamp: 'IO 11/1/2020 17:10:35'!
PASSED!

!testRun: #TerniLapilliGameTest #test26OCantMoveOnTheirSecondTurn stamp: 'IO 11/1/2020 17:10:35'!
PASSED!

!testRun: #TerniLapilliGameTest #test27OCantMoveOnTheirThirdTurn stamp: 'IO 11/1/2020 17:10:35'!
PASSED!

!testRun: #TerniLapilliGameTest #test28XCantPutAfterTheirThirdTurn stamp: 'IO 11/1/2020 17:10:35'!
PASSED!

!testRun: #TerniLapilliGameTest #test29OCantPutAfterTheirThirdTurn stamp: 'IO 11/1/2020 17:10:35'!
PASSED!

!testRun: #TerniLapilliGameTest #test30OCantPutAfterXWon stamp: 'IO 11/1/2020 17:10:35'!
PASSED!

!testRun: #TerniLapilliGameTest #test31OCantMoveAfterXWon stamp: 'IO 11/1/2020 17:10:35'!
PASSED!

!testRun: #TerniLapilliGameTest #test32XCantMoveAfterOWon stamp: 'IO 11/1/2020 17:10:35'!
PASSED!

!testRun: #TerniLapilliGameTest #test33XCantPutAfterOWon stamp: 'IO 11/1/2020 17:10:35'!
PASSED!

!testRun: #TerniLapilliGameTest #test34XCantPutInAnOccupiedSpace stamp: 'IO 11/1/2020 17:10:35'!
PASSED!

!testRun: #TerniLapilliGameTest #test35OCantPutInAnOccupiedSpace stamp: 'IO 11/1/2020 17:10:35'!
PASSED!

!testRun: #TerniLapilliGameTest #test36XCantMoveToAnOccupiedSpace stamp: 'IO 11/1/2020 17:10:35'!
PASSED!

!testRun: #TerniLapilliGameTest #test37OCantMoveToAnOccupiedSpace stamp: 'IO 11/1/2020 17:10:35'!
PASSED!

!testRun: #TerniLapilliGameTest #test38XCantPutOutsideTheBoardUnderXAxis stamp: 'IO 11/1/2020 17:10:35'!
PASSED!

!testRun: #TerniLapilliGameTest #test39XCantPutOutsideTheBoardAboveXAxis stamp: 'IO 11/1/2020 17:10:35'!
PASSED!

!testRun: #TerniLapilliGameTest #test40XCantPutOutsideTheBoardUnderNorAboveTheYAxis stamp: 'IO 11/1/2020 17:10:35'!
PASSED!

!testRun: #TerniLapilliGameTest #test41OCantPutOutsideTheBoard stamp: 'IO 11/1/2020 17:10:35'!
PASSED!

!testRun: #TerniLapilliGameTest #test42XCantMoveToOutsideTheBoard stamp: 'IO 11/1/2020 17:10:35'!
PASSED!

!testRun: #TerniLapilliGameTest #test43OCantMoveToOutsideTheBoard stamp: 'IO 11/1/2020 17:10:35'!
PASSED!

!testRun: #TerniLapilliGameTest #test44XCantMoveTokensThatDontBelongToThem stamp: 'IO 11/1/2020 17:10:35'!
PASSED!

!testRun: #TerniLapilliGameTest #test45OCantMoveTokensThatDontBelongToThem stamp: 'IO 11/1/2020 17:10:35'!
PASSED!

!testRun: #TerniLapilliGameTest #test46XCantMoveaTokenOutsideItsNeighbors stamp: 'IO 11/1/2020 17:10:35'!
PASSED!

!testRun: #TerniLapilliGameTest #test47OCantMoveATokenOutsideItsNeighbors stamp: 'IO 11/1/2020 17:10:35'!
PASSED!
!TerniLapilliPlayerTokens methodsFor: 'validations' stamp: 'IO 11/1/2020 17:11:48' prior: 50882947!
validateIsInBoard: aPosition withErrorMessage: errorMessage

	"signal when a position is invalid with a given error message"

	((aPosition x < 3) or: (aPosition x >= 0) or: (aPosition y < 3) or: (aPosition y >= 0)) ifFalse:[^self error: errorMessage].

! !

!testRun: #TerniLapilliGameTest #test01XCanPutAToken stamp: 'IO 11/1/2020 17:11:54'!
PASSED!

!testRun: #TerniLapilliGameTest #test02puttingDoesNotAffectOtherPositions stamp: 'IO 11/1/2020 17:11:54'!
PASSED!

!testRun: #TerniLapilliGameTest #test03XCanPutInOtherPositions stamp: 'IO 11/1/2020 17:11:54'!
PASSED!

!testRun: #TerniLapilliGameTest #test04OCanPut stamp: 'IO 11/1/2020 17:11:54'!
PASSED!

!testRun: #TerniLapilliGameTest #test05XCanMove stamp: 'IO 11/1/2020 17:11:54'!
PASSED!

!testRun: #TerniLapilliGameTest #test06OCanMove stamp: 'IO 11/1/2020 17:11:54'!
PASSED!

!testRun: #TerniLapilliGameTest #test07XWinsWithTheFirstColumn stamp: 'IO 11/1/2020 17:11:54'!
PASSED!

!testRun: #TerniLapilliGameTest #test08XHasntWonYet stamp: 'IO 11/1/2020 17:11:54'!
PASSED!

!testRun: #TerniLapilliGameTest #test09XWinsWithTheSecondColumn stamp: 'IO 11/1/2020 17:11:54'!
PASSED!

!testRun: #TerniLapilliGameTest #test10XWinsWithTheThirdColumn stamp: 'IO 11/1/2020 17:11:54'!
PASSED!

!testRun: #TerniLapilliGameTest #test11XWinsWithTheFirstRow stamp: 'IO 11/1/2020 17:11:54'!
PASSED!

!testRun: #TerniLapilliGameTest #test12XWinsWithTheSecondRow stamp: 'IO 11/1/2020 17:11:54'!
PASSED!

!testRun: #TerniLapilliGameTest #test13XWinsWithTheThirdRow stamp: 'IO 11/1/2020 17:11:54'!
PASSED!

!testRun: #TerniLapilliGameTest #test14XWinsWithTheCrescentDiagonal stamp: 'IO 11/1/2020 17:11:54'!
PASSED!

!testRun: #TerniLapilliGameTest #test15XWinsWithTheDescendantDiagonal stamp: 'IO 11/1/2020 17:11:54'!
PASSED!

!testRun: #TerniLapilliGameTest #test16OWnis stamp: 'IO 11/1/2020 17:11:54'!
PASSED!

!testRun: #TerniLapilliGameTest #test17OCantStartPutting stamp: 'IO 11/1/2020 17:11:54'!
PASSED!

!testRun: #TerniLapilliGameTest #test18XCantPutTwiceInARow stamp: 'IO 11/1/2020 17:11:54'!
PASSED!

!testRun: #TerniLapilliGameTest #test19XCantMoveTwiceInARow stamp: 'IO 11/1/2020 17:11:54'!
PASSED!

!testRun: #TerniLapilliGameTest #test20OCantPutTwiceInARow stamp: 'IO 11/1/2020 17:11:54'!
PASSED!

!testRun: #TerniLapilliGameTest #test21OCantMoveTwiceInARow stamp: 'IO 11/1/2020 17:11:54'!
PASSED!

!testRun: #TerniLapilliGameTest #test22XCantMoveOnTheirFirstTurn stamp: 'IO 11/1/2020 17:11:54'!
PASSED!

!testRun: #TerniLapilliGameTest #test23XCantMoveOnTheirSecondTurn stamp: 'IO 11/1/2020 17:11:54'!
PASSED!

!testRun: #TerniLapilliGameTest #test24XCantMoveOnTheirThirdTurn stamp: 'IO 11/1/2020 17:11:54'!
PASSED!

!testRun: #TerniLapilliGameTest #test25OCantMoveOnTheirFirstTurn stamp: 'IO 11/1/2020 17:11:54'!
PASSED!

!testRun: #TerniLapilliGameTest #test26OCantMoveOnTheirSecondTurn stamp: 'IO 11/1/2020 17:11:54'!
PASSED!

!testRun: #TerniLapilliGameTest #test27OCantMoveOnTheirThirdTurn stamp: 'IO 11/1/2020 17:11:54'!
PASSED!

!testRun: #TerniLapilliGameTest #test28XCantPutAfterTheirThirdTurn stamp: 'IO 11/1/2020 17:11:54'!
PASSED!

!testRun: #TerniLapilliGameTest #test29OCantPutAfterTheirThirdTurn stamp: 'IO 11/1/2020 17:11:54'!
PASSED!

!testRun: #TerniLapilliGameTest #test30OCantPutAfterXWon stamp: 'IO 11/1/2020 17:11:54'!
PASSED!

!testRun: #TerniLapilliGameTest #test31OCantMoveAfterXWon stamp: 'IO 11/1/2020 17:11:54'!
PASSED!

!testRun: #TerniLapilliGameTest #test32XCantMoveAfterOWon stamp: 'IO 11/1/2020 17:11:54'!
PASSED!

!testRun: #TerniLapilliGameTest #test33XCantPutAfterOWon stamp: 'IO 11/1/2020 17:11:54'!
PASSED!

!testRun: #TerniLapilliGameTest #test34XCantPutInAnOccupiedSpace stamp: 'IO 11/1/2020 17:11:54'!
PASSED!

!testRun: #TerniLapilliGameTest #test35OCantPutInAnOccupiedSpace stamp: 'IO 11/1/2020 17:11:54'!
PASSED!

!testRun: #TerniLapilliGameTest #test36XCantMoveToAnOccupiedSpace stamp: 'IO 11/1/2020 17:11:54'!
PASSED!

!testRun: #TerniLapilliGameTest #test37OCantMoveToAnOccupiedSpace stamp: 'IO 11/1/2020 17:11:54'!
PASSED!

!testRun: #TerniLapilliGameTest #test38XCantPutOutsideTheBoardUnderXAxis stamp: 'IO 11/1/2020 17:11:54'!
FAILURE!

!testRun: #TerniLapilliGameTest #test39XCantPutOutsideTheBoardAboveXAxis stamp: 'IO 11/1/2020 17:11:54'!
FAILURE!

!testRun: #TerniLapilliGameTest #test40XCantPutOutsideTheBoardUnderNorAboveTheYAxis stamp: 'IO 11/1/2020 17:11:54'!
FAILURE!

!testRun: #TerniLapilliGameTest #test41OCantPutOutsideTheBoard stamp: 'IO 11/1/2020 17:11:54'!
FAILURE!

!testRun: #TerniLapilliGameTest #test42XCantMoveToOutsideTheBoard stamp: 'IO 11/1/2020 17:11:54'!
FAILURE!

!testRun: #TerniLapilliGameTest #test43OCantMoveToOutsideTheBoard stamp: 'IO 11/1/2020 17:11:54'!
FAILURE!

!testRun: #TerniLapilliGameTest #test44XCantMoveTokensThatDontBelongToThem stamp: 'IO 11/1/2020 17:11:54'!
PASSED!

!testRun: #TerniLapilliGameTest #test45OCantMoveTokensThatDontBelongToThem stamp: 'IO 11/1/2020 17:11:54'!
PASSED!

!testRun: #TerniLapilliGameTest #test46XCantMoveaTokenOutsideItsNeighbors stamp: 'IO 11/1/2020 17:11:54'!
PASSED!

!testRun: #TerniLapilliGameTest #test47OCantMoveATokenOutsideItsNeighbors stamp: 'IO 11/1/2020 17:11:54'!
PASSED!
!TerniLapilliPlayerTokens methodsFor: 'validations' stamp: 'IO 11/1/2020 17:12:24' prior: 50883115!
validateIsInBoard: aPosition withErrorMessage: errorMessage

	"signal when a position is invalid with a given error message"

	((aPosition x < 3) and: (aPosition x >= 0) and: (aPosition y < 3) and: (aPosition y >= 0)) ifFalse:[^self error: errorMessage].

! !
!TerniLapilliPlayerTokens methodsFor: 'validations' stamp: 'IO 11/1/2020 17:12:28' prior: 50883280!
validateIsInBoard: aPosition withErrorMessage: errorMessage

	"signal when a position is invalid with a given error message"

	((aPosition x < 3) and: (aPosition x >= 0) and: (aPosition y < 3) and: (aPosition y >= 0)) ifFalse: [^self error: errorMessage].

! !

!testRun: #TerniLapilliGameTest #test01XCanPutAToken stamp: 'IO 11/1/2020 17:12:32'!
PASSED!

!testRun: #TerniLapilliGameTest #test02puttingDoesNotAffectOtherPositions stamp: 'IO 11/1/2020 17:12:32'!
PASSED!

!testRun: #TerniLapilliGameTest #test03XCanPutInOtherPositions stamp: 'IO 11/1/2020 17:12:32'!
PASSED!

!testRun: #TerniLapilliGameTest #test04OCanPut stamp: 'IO 11/1/2020 17:12:32'!
PASSED!

!testRun: #TerniLapilliGameTest #test05XCanMove stamp: 'IO 11/1/2020 17:12:32'!
PASSED!

!testRun: #TerniLapilliGameTest #test06OCanMove stamp: 'IO 11/1/2020 17:12:32'!
PASSED!

!testRun: #TerniLapilliGameTest #test07XWinsWithTheFirstColumn stamp: 'IO 11/1/2020 17:12:32'!
PASSED!

!testRun: #TerniLapilliGameTest #test08XHasntWonYet stamp: 'IO 11/1/2020 17:12:32'!
PASSED!

!testRun: #TerniLapilliGameTest #test09XWinsWithTheSecondColumn stamp: 'IO 11/1/2020 17:12:32'!
PASSED!

!testRun: #TerniLapilliGameTest #test10XWinsWithTheThirdColumn stamp: 'IO 11/1/2020 17:12:32'!
PASSED!

!testRun: #TerniLapilliGameTest #test11XWinsWithTheFirstRow stamp: 'IO 11/1/2020 17:12:32'!
PASSED!

!testRun: #TerniLapilliGameTest #test12XWinsWithTheSecondRow stamp: 'IO 11/1/2020 17:12:32'!
PASSED!

!testRun: #TerniLapilliGameTest #test13XWinsWithTheThirdRow stamp: 'IO 11/1/2020 17:12:32'!
PASSED!

!testRun: #TerniLapilliGameTest #test14XWinsWithTheCrescentDiagonal stamp: 'IO 11/1/2020 17:12:32'!
PASSED!

!testRun: #TerniLapilliGameTest #test15XWinsWithTheDescendantDiagonal stamp: 'IO 11/1/2020 17:12:32'!
PASSED!

!testRun: #TerniLapilliGameTest #test16OWnis stamp: 'IO 11/1/2020 17:12:32'!
PASSED!

!testRun: #TerniLapilliGameTest #test17OCantStartPutting stamp: 'IO 11/1/2020 17:12:32'!
PASSED!

!testRun: #TerniLapilliGameTest #test18XCantPutTwiceInARow stamp: 'IO 11/1/2020 17:12:32'!
PASSED!

!testRun: #TerniLapilliGameTest #test19XCantMoveTwiceInARow stamp: 'IO 11/1/2020 17:12:32'!
PASSED!

!testRun: #TerniLapilliGameTest #test20OCantPutTwiceInARow stamp: 'IO 11/1/2020 17:12:32'!
PASSED!

!testRun: #TerniLapilliGameTest #test21OCantMoveTwiceInARow stamp: 'IO 11/1/2020 17:12:32'!
PASSED!

!testRun: #TerniLapilliGameTest #test22XCantMoveOnTheirFirstTurn stamp: 'IO 11/1/2020 17:12:32'!
PASSED!

!testRun: #TerniLapilliGameTest #test23XCantMoveOnTheirSecondTurn stamp: 'IO 11/1/2020 17:12:32'!
PASSED!

!testRun: #TerniLapilliGameTest #test24XCantMoveOnTheirThirdTurn stamp: 'IO 11/1/2020 17:12:32'!
PASSED!

!testRun: #TerniLapilliGameTest #test25OCantMoveOnTheirFirstTurn stamp: 'IO 11/1/2020 17:12:32'!
PASSED!

!testRun: #TerniLapilliGameTest #test26OCantMoveOnTheirSecondTurn stamp: 'IO 11/1/2020 17:12:32'!
PASSED!

!testRun: #TerniLapilliGameTest #test27OCantMoveOnTheirThirdTurn stamp: 'IO 11/1/2020 17:12:32'!
PASSED!

!testRun: #TerniLapilliGameTest #test28XCantPutAfterTheirThirdTurn stamp: 'IO 11/1/2020 17:12:32'!
PASSED!

!testRun: #TerniLapilliGameTest #test29OCantPutAfterTheirThirdTurn stamp: 'IO 11/1/2020 17:12:32'!
PASSED!

!testRun: #TerniLapilliGameTest #test30OCantPutAfterXWon stamp: 'IO 11/1/2020 17:12:32'!
PASSED!

!testRun: #TerniLapilliGameTest #test31OCantMoveAfterXWon stamp: 'IO 11/1/2020 17:12:32'!
PASSED!

!testRun: #TerniLapilliGameTest #test32XCantMoveAfterOWon stamp: 'IO 11/1/2020 17:12:32'!
PASSED!

!testRun: #TerniLapilliGameTest #test33XCantPutAfterOWon stamp: 'IO 11/1/2020 17:12:33'!
PASSED!

!testRun: #TerniLapilliGameTest #test34XCantPutInAnOccupiedSpace stamp: 'IO 11/1/2020 17:12:33'!
PASSED!

!testRun: #TerniLapilliGameTest #test35OCantPutInAnOccupiedSpace stamp: 'IO 11/1/2020 17:12:33'!
PASSED!

!testRun: #TerniLapilliGameTest #test36XCantMoveToAnOccupiedSpace stamp: 'IO 11/1/2020 17:12:33'!
PASSED!

!testRun: #TerniLapilliGameTest #test37OCantMoveToAnOccupiedSpace stamp: 'IO 11/1/2020 17:12:33'!
PASSED!

!testRun: #TerniLapilliGameTest #test38XCantPutOutsideTheBoardUnderXAxis stamp: 'IO 11/1/2020 17:12:33'!
PASSED!

!testRun: #TerniLapilliGameTest #test39XCantPutOutsideTheBoardAboveXAxis stamp: 'IO 11/1/2020 17:12:33'!
PASSED!

!testRun: #TerniLapilliGameTest #test40XCantPutOutsideTheBoardUnderNorAboveTheYAxis stamp: 'IO 11/1/2020 17:12:33'!
PASSED!

!testRun: #TerniLapilliGameTest #test41OCantPutOutsideTheBoard stamp: 'IO 11/1/2020 17:12:33'!
PASSED!

!testRun: #TerniLapilliGameTest #test42XCantMoveToOutsideTheBoard stamp: 'IO 11/1/2020 17:12:33'!
PASSED!

!testRun: #TerniLapilliGameTest #test43OCantMoveToOutsideTheBoard stamp: 'IO 11/1/2020 17:12:33'!
PASSED!

!testRun: #TerniLapilliGameTest #test44XCantMoveTokensThatDontBelongToThem stamp: 'IO 11/1/2020 17:12:33'!
PASSED!

!testRun: #TerniLapilliGameTest #test45OCantMoveTokensThatDontBelongToThem stamp: 'IO 11/1/2020 17:12:33'!
PASSED!

!testRun: #TerniLapilliGameTest #test46XCantMoveaTokenOutsideItsNeighbors stamp: 'IO 11/1/2020 17:12:33'!
PASSED!

!testRun: #TerniLapilliGameTest #test47OCantMoveATokenOutsideItsNeighbors stamp: 'IO 11/1/2020 17:12:33'!
PASSED!
!TerniLapilliPlayerTokens methodsFor: 'validations' stamp: 'IO 11/1/2020 17:13:03' prior: 50883292!
validateIsInBoard: aPosition withErrorMessage: errorMessage

	"signal when a position is invalid with a given error message"

	^(
		(aPosition x < 3) and:
		(aPosition x >= 0) and:
		(aPosition y < 3) and:
		(aPosition y >= 0)
	) ifFalse: [^self error: errorMessage].
! !
!TerniLapilliPlayerTokens methodsFor: 'validations' stamp: 'IO 11/1/2020 17:13:05' prior: 50883457!
validateIsInBoard: aPosition withErrorMessage: errorMessage

	"signal when a position is invalid with a given error message"

	(
		(aPosition x < 3) and:
		(aPosition x >= 0) and:
		(aPosition y < 3) and:
		(aPosition y >= 0)
	) ifFalse: [^self error: errorMessage].
! !
!TerniLapilliPlayerTokens methodsFor: 'validations' stamp: 'IO 11/1/2020 17:13:15' prior: 50881576!
validateIsLegalMoveFrom: sourcePosition to: destinationPosition

	(self includes: sourcePosition ) ifFalse:[^self error: TerniLapilliGame cannotMoveErrorMessage ] .
	(sourcePosition eightNeighbors includes: destinationPosition) ifFalse: [^self error: TerniLapilliGame cannotMoveErrorMessage ] .

	self validateIsInBoard: destinationPosition withErrorMessage: TerniLapilliGame cannotMoveErrorMessage.
! !
!TerniLapilliPlayerTokens methodsFor: 'validations' stamp: 'IO 11/1/2020 17:13:31' prior: 50883481!
validateIsLegalMoveFrom: sourcePosition to: destinationPosition

	(self includes: sourcePosition ) ifFalse:[^self error: TerniLapilliGame cannotMoveErrorMessage].
	(sourcePosition eightNeighbors includes: destinationPosition) ifFalse: [^self error: TerniLapilliGame cannotMoveErrorMessage].

	self validateIsInBoard: destinationPosition withErrorMessage: TerniLapilliGame cannotMoveErrorMessage.
! !
!TerniLapilliPlayerTokens methodsFor: 'validations' stamp: 'IO 11/1/2020 17:14:17' prior: 50883497!
validateIsLegalMoveFrom: sourcePosition to: destinationPosition

	(
		(self includes: sourcePosition) or:
		(sourcePosition eightNeighbors includes: destinationPosition)
	) ifFalse: [^self error: TerniLapilliGame cannotMoveErrorMessage].

	self validateIsInBoard: destinationPosition withErrorMessage: TerniLapilliGame cannotMoveErrorMessage.
! !
!TerniLapilliPlayerTokens methodsFor: 'validations' stamp: 'IO 11/1/2020 17:15:19' prior: 50883513!
validateIsLegalMoveFrom: sourcePosition to: destinationPosition

	"signal when a token cannot be moved from a given position to another"

	(
		(self includes: sourcePosition) or:
		(sourcePosition eightNeighbors includes: destinationPosition)
	) ifFalse: [^self error: TerniLapilliGame cannotMoveErrorMessage].

	self validateIsInBoard: destinationPosition withErrorMessage: TerniLapilliGame cannotMoveErrorMessage.
! !
!TerniLapilliGame class methodsFor: 'error messages' stamp: 'IO 11/1/2020 17:15:41' prior: 50881045!
cannotMoveErrorMessage

	^'Cannot move tokens now'.
! !
!TerniLapilliGame class methodsFor: 'error messages' stamp: 'IO 11/1/2020 17:16:11' prior: 50883544!
cannotMoveErrorMessage

	^'Cannot move tokens. You need to place 3 tokens first'.
! !
!TerniLapilliGame class methodsFor: 'error messages' stamp: 'IO 11/1/2020 17:16:14' prior: 50883549!
cannotMoveErrorMessage

	^'Cannot move tokens. You need to put 3 tokens first'.
! !
!TerniLapilliGame class methodsFor: 'error messages' stamp: 'IO 11/1/2020 17:16:35' prior: 50881050!
cannotPutErrorMessage

	^'Cannot put tokens. You have already put the 3 tokens.'.
! !
!TerniLapilliGame class methodsFor: 'error messages' stamp: 'IO 11/1/2020 17:17:00' prior: 50881054!
gameEndedErrorMessage

	^'Game over!!'.
! !
!TerniLapilliGame class methodsFor: 'error messages' stamp: 'IO 11/1/2020 17:17:20' prior: 50881058!
wrongTurnErrorMessage

	^'Cannot play now. It is not your turn'.
! !
!TerniLapilliGameState class methodsFor: 'as yet unclassified' stamp: 'IO 11/1/2020 17:17:38' prior: 50881151 overrides: 16783533!
new

	"create  a new game"

	^XIsPlacing new.
! !
!TerniLapilliGameState class methodsFor: 'as yet unclassified' stamp: 'IO 11/1/2020 17:17:43' prior: 50883579 overrides: 16783533!
new

	"start  a new game"

	^XIsPlacing new.
! !
!TerniLapilliGameState class methodsFor: 'as yet unclassified' stamp: 'IO 11/1/2020 17:18:01' prior: 50881155!
withXTokens: nextXTokens oTokens: nextOTokens.

	"create the next state"

	^self basicNew intializeWithXTokens: nextXTokens oTokens: nextOTokens.
! !
!TerniLapilliGameState class methodsFor: 'as yet unclassified' stamp: 'IO 11/1/2020 17:18:15' prior: 50883585 overrides: 16783533!
new

	"create the initial state of the gam"

	^XIsPlacing new.
! !
!TerniLapilliGameState class methodsFor: 'as yet unclassified' stamp: 'IO 11/1/2020 17:18:17' prior: 50883599 overrides: 16783533!
new

	"create the initial state of the game"

	^XIsPlacing new.
! !
!OIsPlaying class methodsFor: 'as yet unclassified' stamp: 'IO 11/1/2020 17:19:19' prior: 50881247 overrides: 50883590!
withXTokens: nextXTokens oTokens: nextOTokens

	"create the next state of X's turn"

	(nextXTokens areInWinningPosition) ifTrue: [^GameIsOver withXTokens: nextXTokens oTokens: nextOTokens].
	(nextOTokens size < 3) ifTrue: [^OIsPlacing withXTokens: nextXTokens oTokens: nextOTokens].

	^OIsMoving withXTokens: nextXTokens oTokens: nextOTokens.
! !
!OIsPlaying class methodsFor: 'as yet unclassified' stamp: 'IO 11/1/2020 17:19:25' prior: 50883612 overrides: 50883590!
withXTokens: nextXTokens oTokens: nextOTokens

	"create the next state of X's turn"

	(nextXTokens areInWinningPosition) ifTrue: [^GameIsOver withXTokens: nextXTokens oTokens: nextOTokens].
	(nextOTokens size < 3) ifTrue: [^OIsPlacing withXTokens: nextXTokens oTokens: nextOTokens].
	^OIsMoving withXTokens: nextXTokens oTokens: nextOTokens.
! !
!OIsPlaying class methodsFor: 'as yet unclassified' stamp: 'IO 11/1/2020 17:19:51' prior: 50883627 overrides: 50883590!
withXTokens: nextXTokens oTokens: nextOTokens

	"create the next state of X's turn"

	(nextXTokens areInWinningPosition) ifTrue: [^GameIsOver withXTokens: nextXTokens oTokens: nextOTokens].
	(nextOTokens size >= 3) ifTrue: [^OIsMoving withXTokens: nextXTokens oTokens: nextOTokens].
	^OIsPlacing withXTokens: nextXTokens oTokens: nextOTokens
! !

!testRun: #TerniLapilliGameTest #test01XCanPutAToken stamp: 'IO 11/1/2020 17:19:57'!
PASSED!

!testRun: #TerniLapilliGameTest #test02puttingDoesNotAffectOtherPositions stamp: 'IO 11/1/2020 17:19:57'!
PASSED!

!testRun: #TerniLapilliGameTest #test03XCanPutInOtherPositions stamp: 'IO 11/1/2020 17:19:57'!
PASSED!

!testRun: #TerniLapilliGameTest #test04OCanPut stamp: 'IO 11/1/2020 17:19:57'!
PASSED!

!testRun: #TerniLapilliGameTest #test05XCanMove stamp: 'IO 11/1/2020 17:19:57'!
PASSED!

!testRun: #TerniLapilliGameTest #test06OCanMove stamp: 'IO 11/1/2020 17:19:57'!
PASSED!

!testRun: #TerniLapilliGameTest #test07XWinsWithTheFirstColumn stamp: 'IO 11/1/2020 17:19:57'!
PASSED!

!testRun: #TerniLapilliGameTest #test08XHasntWonYet stamp: 'IO 11/1/2020 17:19:57'!
PASSED!

!testRun: #TerniLapilliGameTest #test09XWinsWithTheSecondColumn stamp: 'IO 11/1/2020 17:19:57'!
PASSED!

!testRun: #TerniLapilliGameTest #test10XWinsWithTheThirdColumn stamp: 'IO 11/1/2020 17:19:57'!
PASSED!

!testRun: #TerniLapilliGameTest #test11XWinsWithTheFirstRow stamp: 'IO 11/1/2020 17:19:57'!
PASSED!

!testRun: #TerniLapilliGameTest #test12XWinsWithTheSecondRow stamp: 'IO 11/1/2020 17:19:57'!
PASSED!

!testRun: #TerniLapilliGameTest #test13XWinsWithTheThirdRow stamp: 'IO 11/1/2020 17:19:57'!
PASSED!

!testRun: #TerniLapilliGameTest #test14XWinsWithTheCrescentDiagonal stamp: 'IO 11/1/2020 17:19:57'!
PASSED!

!testRun: #TerniLapilliGameTest #test15XWinsWithTheDescendantDiagonal stamp: 'IO 11/1/2020 17:19:57'!
PASSED!

!testRun: #TerniLapilliGameTest #test16OWnis stamp: 'IO 11/1/2020 17:19:57'!
PASSED!

!testRun: #TerniLapilliGameTest #test17OCantStartPutting stamp: 'IO 11/1/2020 17:19:57'!
PASSED!

!testRun: #TerniLapilliGameTest #test18XCantPutTwiceInARow stamp: 'IO 11/1/2020 17:19:57'!
PASSED!

!testRun: #TerniLapilliGameTest #test19XCantMoveTwiceInARow stamp: 'IO 11/1/2020 17:19:57'!
PASSED!

!testRun: #TerniLapilliGameTest #test20OCantPutTwiceInARow stamp: 'IO 11/1/2020 17:19:57'!
PASSED!

!testRun: #TerniLapilliGameTest #test21OCantMoveTwiceInARow stamp: 'IO 11/1/2020 17:19:57'!
PASSED!

!testRun: #TerniLapilliGameTest #test22XCantMoveOnTheirFirstTurn stamp: 'IO 11/1/2020 17:19:57'!
PASSED!

!testRun: #TerniLapilliGameTest #test23XCantMoveOnTheirSecondTurn stamp: 'IO 11/1/2020 17:19:57'!
PASSED!

!testRun: #TerniLapilliGameTest #test24XCantMoveOnTheirThirdTurn stamp: 'IO 11/1/2020 17:19:57'!
PASSED!

!testRun: #TerniLapilliGameTest #test25OCantMoveOnTheirFirstTurn stamp: 'IO 11/1/2020 17:19:57'!
PASSED!

!testRun: #TerniLapilliGameTest #test26OCantMoveOnTheirSecondTurn stamp: 'IO 11/1/2020 17:19:57'!
PASSED!

!testRun: #TerniLapilliGameTest #test27OCantMoveOnTheirThirdTurn stamp: 'IO 11/1/2020 17:19:57'!
PASSED!

!testRun: #TerniLapilliGameTest #test28XCantPutAfterTheirThirdTurn stamp: 'IO 11/1/2020 17:19:57'!
PASSED!

!testRun: #TerniLapilliGameTest #test29OCantPutAfterTheirThirdTurn stamp: 'IO 11/1/2020 17:19:57'!
PASSED!

!testRun: #TerniLapilliGameTest #test30OCantPutAfterXWon stamp: 'IO 11/1/2020 17:19:57'!
PASSED!

!testRun: #TerniLapilliGameTest #test31OCantMoveAfterXWon stamp: 'IO 11/1/2020 17:19:57'!
PASSED!

!testRun: #TerniLapilliGameTest #test32XCantMoveAfterOWon stamp: 'IO 11/1/2020 17:19:57'!
PASSED!

!testRun: #TerniLapilliGameTest #test33XCantPutAfterOWon stamp: 'IO 11/1/2020 17:19:57'!
PASSED!

!testRun: #TerniLapilliGameTest #test34XCantPutInAnOccupiedSpace stamp: 'IO 11/1/2020 17:19:57'!
PASSED!

!testRun: #TerniLapilliGameTest #test35OCantPutInAnOccupiedSpace stamp: 'IO 11/1/2020 17:19:57'!
PASSED!

!testRun: #TerniLapilliGameTest #test36XCantMoveToAnOccupiedSpace stamp: 'IO 11/1/2020 17:19:57'!
PASSED!

!testRun: #TerniLapilliGameTest #test37OCantMoveToAnOccupiedSpace stamp: 'IO 11/1/2020 17:19:57'!
PASSED!

!testRun: #TerniLapilliGameTest #test38XCantPutOutsideTheBoardUnderXAxis stamp: 'IO 11/1/2020 17:19:57'!
PASSED!

!testRun: #TerniLapilliGameTest #test39XCantPutOutsideTheBoardAboveXAxis stamp: 'IO 11/1/2020 17:19:57'!
PASSED!

!testRun: #TerniLapilliGameTest #test40XCantPutOutsideTheBoardUnderNorAboveTheYAxis stamp: 'IO 11/1/2020 17:19:57'!
PASSED!

!testRun: #TerniLapilliGameTest #test41OCantPutOutsideTheBoard stamp: 'IO 11/1/2020 17:19:57'!
PASSED!

!testRun: #TerniLapilliGameTest #test42XCantMoveToOutsideTheBoard stamp: 'IO 11/1/2020 17:19:57'!
PASSED!

!testRun: #TerniLapilliGameTest #test43OCantMoveToOutsideTheBoard stamp: 'IO 11/1/2020 17:19:57'!
PASSED!

!testRun: #TerniLapilliGameTest #test44XCantMoveTokensThatDontBelongToThem stamp: 'IO 11/1/2020 17:19:57'!
FAILURE!

!testRun: #TerniLapilliGameTest #test45OCantMoveTokensThatDontBelongToThem stamp: 'IO 11/1/2020 17:19:57'!
FAILURE!

!testRun: #TerniLapilliGameTest #test46XCantMoveaTokenOutsideItsNeighbors stamp: 'IO 11/1/2020 17:19:57'!
FAILURE!

!testRun: #TerniLapilliGameTest #test47OCantMoveATokenOutsideItsNeighbors stamp: 'IO 11/1/2020 17:19:57'!
FAILURE!
!OIsPlaying class methodsFor: 'as yet unclassified' stamp: 'IO 11/1/2020 17:20:24' prior: 50883642 overrides: 50883590!
withXTokens: nextXTokens oTokens: nextOTokens

	"create the next state of X's turn"

	(nextXTokens areInWinningPosition) ifTrue: [^GameIsOver withXTokens: nextXTokens oTokens: nextOTokens].
	(nextOTokens size < 3) ifTrue: [OIsPlacing withXTokens: nextXTokens oTokens: nextOTokens].
	^OIsMoving withXTokens: nextXTokens oTokens: nextOTokens
! !
!OIsPlaying class methodsFor: 'as yet unclassified' stamp: 'IO 11/1/2020 17:20:28' prior: 50883810 overrides: 50883590!
withXTokens: nextXTokens oTokens: nextOTokens

	"create the next state of X's turn"

	(nextXTokens areInWinningPosition) ifTrue: [^GameIsOver withXTokens: nextXTokens oTokens: nextOTokens].
	(nextOTokens size < 3) ifTrue: [^OIsPlacing withXTokens: nextXTokens oTokens: nextOTokens].
	^OIsMoving withXTokens: nextXTokens oTokens: nextOTokens
! !

!testRun: #TerniLapilliGameTest #test04OCanPut stamp: 'IO 11/1/2020 17:20:51'!
PASSED!

!testRun: #TerniLapilliGameTest #test01XCanPutAToken stamp: 'IO 11/1/2020 17:20:51'!
PASSED!

!testRun: #TerniLapilliGameTest #test02puttingDoesNotAffectOtherPositions stamp: 'IO 11/1/2020 17:20:51'!
PASSED!

!testRun: #TerniLapilliGameTest #test03XCanPutInOtherPositions stamp: 'IO 11/1/2020 17:20:51'!
PASSED!

!testRun: #TerniLapilliGameTest #test04OCanPut stamp: 'IO 11/1/2020 17:20:51'!
PASSED!

!testRun: #TerniLapilliGameTest #test05XCanMove stamp: 'IO 11/1/2020 17:20:51'!
PASSED!

!testRun: #TerniLapilliGameTest #test06OCanMove stamp: 'IO 11/1/2020 17:20:51'!
PASSED!

!testRun: #TerniLapilliGameTest #test07XWinsWithTheFirstColumn stamp: 'IO 11/1/2020 17:20:51'!
PASSED!

!testRun: #TerniLapilliGameTest #test08XHasntWonYet stamp: 'IO 11/1/2020 17:20:51'!
PASSED!

!testRun: #TerniLapilliGameTest #test09XWinsWithTheSecondColumn stamp: 'IO 11/1/2020 17:20:51'!
PASSED!

!testRun: #TerniLapilliGameTest #test10XWinsWithTheThirdColumn stamp: 'IO 11/1/2020 17:20:51'!
PASSED!

!testRun: #TerniLapilliGameTest #test11XWinsWithTheFirstRow stamp: 'IO 11/1/2020 17:20:51'!
PASSED!

!testRun: #TerniLapilliGameTest #test12XWinsWithTheSecondRow stamp: 'IO 11/1/2020 17:20:51'!
PASSED!

!testRun: #TerniLapilliGameTest #test13XWinsWithTheThirdRow stamp: 'IO 11/1/2020 17:20:51'!
PASSED!

!testRun: #TerniLapilliGameTest #test14XWinsWithTheCrescentDiagonal stamp: 'IO 11/1/2020 17:20:51'!
PASSED!

!testRun: #TerniLapilliGameTest #test15XWinsWithTheDescendantDiagonal stamp: 'IO 11/1/2020 17:20:51'!
PASSED!

!testRun: #TerniLapilliGameTest #test16OWnis stamp: 'IO 11/1/2020 17:20:51'!
PASSED!

!testRun: #TerniLapilliGameTest #test17OCantStartPutting stamp: 'IO 11/1/2020 17:20:51'!
PASSED!

!testRun: #TerniLapilliGameTest #test18XCantPutTwiceInARow stamp: 'IO 11/1/2020 17:20:51'!
PASSED!

!testRun: #TerniLapilliGameTest #test19XCantMoveTwiceInARow stamp: 'IO 11/1/2020 17:20:51'!
PASSED!

!testRun: #TerniLapilliGameTest #test20OCantPutTwiceInARow stamp: 'IO 11/1/2020 17:20:51'!
PASSED!

!testRun: #TerniLapilliGameTest #test21OCantMoveTwiceInARow stamp: 'IO 11/1/2020 17:20:51'!
PASSED!

!testRun: #TerniLapilliGameTest #test22XCantMoveOnTheirFirstTurn stamp: 'IO 11/1/2020 17:20:51'!
PASSED!

!testRun: #TerniLapilliGameTest #test23XCantMoveOnTheirSecondTurn stamp: 'IO 11/1/2020 17:20:51'!
PASSED!

!testRun: #TerniLapilliGameTest #test24XCantMoveOnTheirThirdTurn stamp: 'IO 11/1/2020 17:20:51'!
PASSED!

!testRun: #TerniLapilliGameTest #test25OCantMoveOnTheirFirstTurn stamp: 'IO 11/1/2020 17:20:51'!
PASSED!

!testRun: #TerniLapilliGameTest #test26OCantMoveOnTheirSecondTurn stamp: 'IO 11/1/2020 17:20:51'!
PASSED!

!testRun: #TerniLapilliGameTest #test27OCantMoveOnTheirThirdTurn stamp: 'IO 11/1/2020 17:20:51'!
PASSED!

!testRun: #TerniLapilliGameTest #test28XCantPutAfterTheirThirdTurn stamp: 'IO 11/1/2020 17:20:51'!
PASSED!

!testRun: #TerniLapilliGameTest #test29OCantPutAfterTheirThirdTurn stamp: 'IO 11/1/2020 17:20:51'!
PASSED!

!testRun: #TerniLapilliGameTest #test30OCantPutAfterXWon stamp: 'IO 11/1/2020 17:20:51'!
PASSED!

!testRun: #TerniLapilliGameTest #test31OCantMoveAfterXWon stamp: 'IO 11/1/2020 17:20:51'!
PASSED!

!testRun: #TerniLapilliGameTest #test32XCantMoveAfterOWon stamp: 'IO 11/1/2020 17:20:51'!
PASSED!

!testRun: #TerniLapilliGameTest #test33XCantPutAfterOWon stamp: 'IO 11/1/2020 17:20:51'!
PASSED!

!testRun: #TerniLapilliGameTest #test34XCantPutInAnOccupiedSpace stamp: 'IO 11/1/2020 17:20:51'!
PASSED!

!testRun: #TerniLapilliGameTest #test35OCantPutInAnOccupiedSpace stamp: 'IO 11/1/2020 17:20:51'!
PASSED!

!testRun: #TerniLapilliGameTest #test36XCantMoveToAnOccupiedSpace stamp: 'IO 11/1/2020 17:20:51'!
PASSED!

!testRun: #TerniLapilliGameTest #test37OCantMoveToAnOccupiedSpace stamp: 'IO 11/1/2020 17:20:51'!
PASSED!

!testRun: #TerniLapilliGameTest #test38XCantPutOutsideTheBoardUnderXAxis stamp: 'IO 11/1/2020 17:20:51'!
PASSED!

!testRun: #TerniLapilliGameTest #test39XCantPutOutsideTheBoardAboveXAxis stamp: 'IO 11/1/2020 17:20:51'!
PASSED!

!testRun: #TerniLapilliGameTest #test40XCantPutOutsideTheBoardUnderNorAboveTheYAxis stamp: 'IO 11/1/2020 17:20:51'!
PASSED!

!testRun: #TerniLapilliGameTest #test41OCantPutOutsideTheBoard stamp: 'IO 11/1/2020 17:20:51'!
PASSED!

!testRun: #TerniLapilliGameTest #test42XCantMoveToOutsideTheBoard stamp: 'IO 11/1/2020 17:20:51'!
PASSED!

!testRun: #TerniLapilliGameTest #test43OCantMoveToOutsideTheBoard stamp: 'IO 11/1/2020 17:20:51'!
PASSED!

!testRun: #TerniLapilliGameTest #test44XCantMoveTokensThatDontBelongToThem stamp: 'IO 11/1/2020 17:20:51'!
FAILURE!

!testRun: #TerniLapilliGameTest #test45OCantMoveTokensThatDontBelongToThem stamp: 'IO 11/1/2020 17:20:51'!
FAILURE!

!testRun: #TerniLapilliGameTest #test46XCantMoveaTokenOutsideItsNeighbors stamp: 'IO 11/1/2020 17:20:51'!
FAILURE!

!testRun: #TerniLapilliGameTest #test47OCantMoveATokenOutsideItsNeighbors stamp: 'IO 11/1/2020 17:20:51'!
FAILURE!
!OIsPlaying class methodsFor: 'as yet unclassified' stamp: 'IO 11/1/2020 17:21:04' prior: 50883825 overrides: 50883590!
withXTokens: nextXTokens oTokens: nextOTokens

	"create the next state of X's turn"

	(nextXTokens areInWinningPosition) ifTrue: [^GameIsOver withXTokens: nextXTokens oTokens: nextOTokens].
	(nextOTokens size >= 3) ifTrue: [^OIsMoving withXTokens: nextXTokens oTokens: nextOTokens].
	^OIsPlacing withXTokens: nextXTokens oTokens: nextOTokens
! !

!testRun: #TerniLapilliGameTest #test02puttingDoesNotAffectOtherPositions stamp: 'IO 11/1/2020 17:21:20'!
PASSED!

!testRun: #TerniLapilliGameTest #test01XCanPutAToken stamp: 'IO 11/1/2020 17:21:20'!
PASSED!

!testRun: #TerniLapilliGameTest #test02puttingDoesNotAffectOtherPositions stamp: 'IO 11/1/2020 17:21:20'!
PASSED!

!testRun: #TerniLapilliGameTest #test03XCanPutInOtherPositions stamp: 'IO 11/1/2020 17:21:20'!
PASSED!

!testRun: #TerniLapilliGameTest #test04OCanPut stamp: 'IO 11/1/2020 17:21:20'!
PASSED!

!testRun: #TerniLapilliGameTest #test05XCanMove stamp: 'IO 11/1/2020 17:21:20'!
PASSED!

!testRun: #TerniLapilliGameTest #test06OCanMove stamp: 'IO 11/1/2020 17:21:20'!
PASSED!

!testRun: #TerniLapilliGameTest #test07XWinsWithTheFirstColumn stamp: 'IO 11/1/2020 17:21:20'!
PASSED!

!testRun: #TerniLapilliGameTest #test08XHasntWonYet stamp: 'IO 11/1/2020 17:21:20'!
PASSED!

!testRun: #TerniLapilliGameTest #test09XWinsWithTheSecondColumn stamp: 'IO 11/1/2020 17:21:20'!
PASSED!

!testRun: #TerniLapilliGameTest #test10XWinsWithTheThirdColumn stamp: 'IO 11/1/2020 17:21:20'!
PASSED!

!testRun: #TerniLapilliGameTest #test11XWinsWithTheFirstRow stamp: 'IO 11/1/2020 17:21:20'!
PASSED!

!testRun: #TerniLapilliGameTest #test12XWinsWithTheSecondRow stamp: 'IO 11/1/2020 17:21:20'!
PASSED!

!testRun: #TerniLapilliGameTest #test13XWinsWithTheThirdRow stamp: 'IO 11/1/2020 17:21:20'!
PASSED!

!testRun: #TerniLapilliGameTest #test14XWinsWithTheCrescentDiagonal stamp: 'IO 11/1/2020 17:21:20'!
PASSED!

!testRun: #TerniLapilliGameTest #test15XWinsWithTheDescendantDiagonal stamp: 'IO 11/1/2020 17:21:20'!
PASSED!

!testRun: #TerniLapilliGameTest #test16OWnis stamp: 'IO 11/1/2020 17:21:20'!
PASSED!

!testRun: #TerniLapilliGameTest #test17OCantStartPutting stamp: 'IO 11/1/2020 17:21:20'!
PASSED!

!testRun: #TerniLapilliGameTest #test18XCantPutTwiceInARow stamp: 'IO 11/1/2020 17:21:20'!
PASSED!

!testRun: #TerniLapilliGameTest #test19XCantMoveTwiceInARow stamp: 'IO 11/1/2020 17:21:20'!
PASSED!

!testRun: #TerniLapilliGameTest #test20OCantPutTwiceInARow stamp: 'IO 11/1/2020 17:21:20'!
PASSED!

!testRun: #TerniLapilliGameTest #test21OCantMoveTwiceInARow stamp: 'IO 11/1/2020 17:21:20'!
PASSED!

!testRun: #TerniLapilliGameTest #test22XCantMoveOnTheirFirstTurn stamp: 'IO 11/1/2020 17:21:20'!
PASSED!

!testRun: #TerniLapilliGameTest #test23XCantMoveOnTheirSecondTurn stamp: 'IO 11/1/2020 17:21:20'!
PASSED!

!testRun: #TerniLapilliGameTest #test24XCantMoveOnTheirThirdTurn stamp: 'IO 11/1/2020 17:21:20'!
PASSED!

!testRun: #TerniLapilliGameTest #test25OCantMoveOnTheirFirstTurn stamp: 'IO 11/1/2020 17:21:20'!
PASSED!

!testRun: #TerniLapilliGameTest #test26OCantMoveOnTheirSecondTurn stamp: 'IO 11/1/2020 17:21:20'!
PASSED!

!testRun: #TerniLapilliGameTest #test27OCantMoveOnTheirThirdTurn stamp: 'IO 11/1/2020 17:21:20'!
PASSED!

!testRun: #TerniLapilliGameTest #test28XCantPutAfterTheirThirdTurn stamp: 'IO 11/1/2020 17:21:20'!
PASSED!

!testRun: #TerniLapilliGameTest #test29OCantPutAfterTheirThirdTurn stamp: 'IO 11/1/2020 17:21:20'!
PASSED!

!testRun: #TerniLapilliGameTest #test30OCantPutAfterXWon stamp: 'IO 11/1/2020 17:21:20'!
PASSED!

!testRun: #TerniLapilliGameTest #test31OCantMoveAfterXWon stamp: 'IO 11/1/2020 17:21:21'!
PASSED!

!testRun: #TerniLapilliGameTest #test32XCantMoveAfterOWon stamp: 'IO 11/1/2020 17:21:21'!
PASSED!

!testRun: #TerniLapilliGameTest #test33XCantPutAfterOWon stamp: 'IO 11/1/2020 17:21:21'!
PASSED!

!testRun: #TerniLapilliGameTest #test34XCantPutInAnOccupiedSpace stamp: 'IO 11/1/2020 17:21:21'!
PASSED!

!testRun: #TerniLapilliGameTest #test35OCantPutInAnOccupiedSpace stamp: 'IO 11/1/2020 17:21:21'!
PASSED!

!testRun: #TerniLapilliGameTest #test36XCantMoveToAnOccupiedSpace stamp: 'IO 11/1/2020 17:21:21'!
PASSED!

!testRun: #TerniLapilliGameTest #test37OCantMoveToAnOccupiedSpace stamp: 'IO 11/1/2020 17:21:21'!
PASSED!

!testRun: #TerniLapilliGameTest #test38XCantPutOutsideTheBoardUnderXAxis stamp: 'IO 11/1/2020 17:21:21'!
PASSED!

!testRun: #TerniLapilliGameTest #test39XCantPutOutsideTheBoardAboveXAxis stamp: 'IO 11/1/2020 17:21:21'!
PASSED!

!testRun: #TerniLapilliGameTest #test40XCantPutOutsideTheBoardUnderNorAboveTheYAxis stamp: 'IO 11/1/2020 17:21:21'!
PASSED!

!testRun: #TerniLapilliGameTest #test41OCantPutOutsideTheBoard stamp: 'IO 11/1/2020 17:21:21'!
PASSED!

!testRun: #TerniLapilliGameTest #test42XCantMoveToOutsideTheBoard stamp: 'IO 11/1/2020 17:21:21'!
PASSED!

!testRun: #TerniLapilliGameTest #test43OCantMoveToOutsideTheBoard stamp: 'IO 11/1/2020 17:21:21'!
PASSED!

!testRun: #TerniLapilliGameTest #test44XCantMoveTokensThatDontBelongToThem stamp: 'IO 11/1/2020 17:21:21'!
FAILURE!

!testRun: #TerniLapilliGameTest #test45OCantMoveTokensThatDontBelongToThem stamp: 'IO 11/1/2020 17:21:21'!
FAILURE!

!testRun: #TerniLapilliGameTest #test46XCantMoveaTokenOutsideItsNeighbors stamp: 'IO 11/1/2020 17:21:21'!
FAILURE!

!testRun: #TerniLapilliGameTest #test47OCantMoveATokenOutsideItsNeighbors stamp: 'IO 11/1/2020 17:21:21'!
FAILURE!

!testRun: #TerniLapilliGameTest #test44XCantMoveTokensThatDontBelongToThem stamp: 'IO 11/1/2020 17:21:42'!
FAILURE!

!testRun: #TerniLapilliGameTest #test44XCantMoveTokensThatDontBelongToThem stamp: 'IO 11/1/2020 17:22:26'!
FAILURE!
!OIsPlaying class methodsFor: 'as yet unclassified' stamp: 'IO 11/1/2020 17:23:18' prior: 50883996 overrides: 50883590!
withXTokens: nextXTokens oTokens: nextOTokens

	"create the next state of X's turn"

	(nextXTokens areInWinningPosition) ifTrue: [^GameIsOver withXTokens: nextXTokens oTokens: nextOTokens].
	(nextOTokens size < 3) ifTrue: [^OIsPlacing withXTokens: nextXTokens oTokens: nextOTokens].
	^OIsMoving withXTokens: nextXTokens oTokens: nextOTokens
! !

!testRun: #TerniLapilliGameTest #test02puttingDoesNotAffectOtherPositions stamp: 'IO 11/1/2020 17:23:21'!
PASSED!

!testRun: #TerniLapilliGameTest #test01XCanPutAToken stamp: 'IO 11/1/2020 17:23:21'!
PASSED!

!testRun: #TerniLapilliGameTest #test02puttingDoesNotAffectOtherPositions stamp: 'IO 11/1/2020 17:23:21'!
PASSED!

!testRun: #TerniLapilliGameTest #test03XCanPutInOtherPositions stamp: 'IO 11/1/2020 17:23:21'!
PASSED!

!testRun: #TerniLapilliGameTest #test04OCanPut stamp: 'IO 11/1/2020 17:23:21'!
PASSED!

!testRun: #TerniLapilliGameTest #test05XCanMove stamp: 'IO 11/1/2020 17:23:21'!
PASSED!

!testRun: #TerniLapilliGameTest #test06OCanMove stamp: 'IO 11/1/2020 17:23:21'!
PASSED!

!testRun: #TerniLapilliGameTest #test07XWinsWithTheFirstColumn stamp: 'IO 11/1/2020 17:23:21'!
PASSED!

!testRun: #TerniLapilliGameTest #test08XHasntWonYet stamp: 'IO 11/1/2020 17:23:21'!
PASSED!

!testRun: #TerniLapilliGameTest #test09XWinsWithTheSecondColumn stamp: 'IO 11/1/2020 17:23:21'!
PASSED!

!testRun: #TerniLapilliGameTest #test10XWinsWithTheThirdColumn stamp: 'IO 11/1/2020 17:23:21'!
PASSED!

!testRun: #TerniLapilliGameTest #test11XWinsWithTheFirstRow stamp: 'IO 11/1/2020 17:23:21'!
PASSED!

!testRun: #TerniLapilliGameTest #test12XWinsWithTheSecondRow stamp: 'IO 11/1/2020 17:23:21'!
PASSED!

!testRun: #TerniLapilliGameTest #test13XWinsWithTheThirdRow stamp: 'IO 11/1/2020 17:23:21'!
PASSED!

!testRun: #TerniLapilliGameTest #test14XWinsWithTheCrescentDiagonal stamp: 'IO 11/1/2020 17:23:21'!
PASSED!

!testRun: #TerniLapilliGameTest #test15XWinsWithTheDescendantDiagonal stamp: 'IO 11/1/2020 17:23:21'!
PASSED!

!testRun: #TerniLapilliGameTest #test16OWnis stamp: 'IO 11/1/2020 17:23:21'!
PASSED!

!testRun: #TerniLapilliGameTest #test17OCantStartPutting stamp: 'IO 11/1/2020 17:23:21'!
PASSED!

!testRun: #TerniLapilliGameTest #test18XCantPutTwiceInARow stamp: 'IO 11/1/2020 17:23:21'!
PASSED!

!testRun: #TerniLapilliGameTest #test19XCantMoveTwiceInARow stamp: 'IO 11/1/2020 17:23:21'!
PASSED!

!testRun: #TerniLapilliGameTest #test20OCantPutTwiceInARow stamp: 'IO 11/1/2020 17:23:21'!
PASSED!

!testRun: #TerniLapilliGameTest #test21OCantMoveTwiceInARow stamp: 'IO 11/1/2020 17:23:21'!
PASSED!

!testRun: #TerniLapilliGameTest #test22XCantMoveOnTheirFirstTurn stamp: 'IO 11/1/2020 17:23:21'!
PASSED!

!testRun: #TerniLapilliGameTest #test23XCantMoveOnTheirSecondTurn stamp: 'IO 11/1/2020 17:23:21'!
PASSED!

!testRun: #TerniLapilliGameTest #test24XCantMoveOnTheirThirdTurn stamp: 'IO 11/1/2020 17:23:21'!
PASSED!

!testRun: #TerniLapilliGameTest #test25OCantMoveOnTheirFirstTurn stamp: 'IO 11/1/2020 17:23:21'!
PASSED!

!testRun: #TerniLapilliGameTest #test26OCantMoveOnTheirSecondTurn stamp: 'IO 11/1/2020 17:23:21'!
PASSED!

!testRun: #TerniLapilliGameTest #test27OCantMoveOnTheirThirdTurn stamp: 'IO 11/1/2020 17:23:21'!
PASSED!

!testRun: #TerniLapilliGameTest #test28XCantPutAfterTheirThirdTurn stamp: 'IO 11/1/2020 17:23:21'!
PASSED!

!testRun: #TerniLapilliGameTest #test29OCantPutAfterTheirThirdTurn stamp: 'IO 11/1/2020 17:23:21'!
PASSED!

!testRun: #TerniLapilliGameTest #test30OCantPutAfterXWon stamp: 'IO 11/1/2020 17:23:21'!
PASSED!

!testRun: #TerniLapilliGameTest #test31OCantMoveAfterXWon stamp: 'IO 11/1/2020 17:23:21'!
PASSED!

!testRun: #TerniLapilliGameTest #test32XCantMoveAfterOWon stamp: 'IO 11/1/2020 17:23:21'!
PASSED!

!testRun: #TerniLapilliGameTest #test33XCantPutAfterOWon stamp: 'IO 11/1/2020 17:23:21'!
PASSED!

!testRun: #TerniLapilliGameTest #test34XCantPutInAnOccupiedSpace stamp: 'IO 11/1/2020 17:23:21'!
PASSED!

!testRun: #TerniLapilliGameTest #test35OCantPutInAnOccupiedSpace stamp: 'IO 11/1/2020 17:23:21'!
PASSED!

!testRun: #TerniLapilliGameTest #test36XCantMoveToAnOccupiedSpace stamp: 'IO 11/1/2020 17:23:21'!
PASSED!

!testRun: #TerniLapilliGameTest #test37OCantMoveToAnOccupiedSpace stamp: 'IO 11/1/2020 17:23:21'!
PASSED!

!testRun: #TerniLapilliGameTest #test38XCantPutOutsideTheBoardUnderXAxis stamp: 'IO 11/1/2020 17:23:21'!
PASSED!

!testRun: #TerniLapilliGameTest #test39XCantPutOutsideTheBoardAboveXAxis stamp: 'IO 11/1/2020 17:23:21'!
PASSED!

!testRun: #TerniLapilliGameTest #test40XCantPutOutsideTheBoardUnderNorAboveTheYAxis stamp: 'IO 11/1/2020 17:23:21'!
PASSED!

!testRun: #TerniLapilliGameTest #test41OCantPutOutsideTheBoard stamp: 'IO 11/1/2020 17:23:21'!
PASSED!

!testRun: #TerniLapilliGameTest #test42XCantMoveToOutsideTheBoard stamp: 'IO 11/1/2020 17:23:21'!
PASSED!

!testRun: #TerniLapilliGameTest #test43OCantMoveToOutsideTheBoard stamp: 'IO 11/1/2020 17:23:21'!
PASSED!

!testRun: #TerniLapilliGameTest #test44XCantMoveTokensThatDontBelongToThem stamp: 'IO 11/1/2020 17:23:21'!
FAILURE!

!testRun: #TerniLapilliGameTest #test45OCantMoveTokensThatDontBelongToThem stamp: 'IO 11/1/2020 17:23:21'!
FAILURE!

!testRun: #TerniLapilliGameTest #test46XCantMoveaTokenOutsideItsNeighbors stamp: 'IO 11/1/2020 17:23:21'!
FAILURE!

!testRun: #TerniLapilliGameTest #test47OCantMoveATokenOutsideItsNeighbors stamp: 'IO 11/1/2020 17:23:21'!
FAILURE!
!TerniLapilliPlayerTokens methodsFor: 'moves' stamp: 'IO 11/1/2020 17:25:13' prior: 50882784!
move: sourcePosition to: destinationPosition

	"move a token form a given position of the board to another position"

	self validateIsLegalMoveFrom: sourcePosition to: destinationPosition.

	tokens remove: sourcePosition.
	tokens add: destinationPosition.
! !
!TerniLapilliPlayerTokens methodsFor: 'validations' stamp: 'IO 11/1/2020 17:26:29' prior: 50883527!
validateIsLegalMoveFrom: sourcePosition to: destinationPosition

	"signal when a token cannot be moved from a given position to another"
	(self includes: sourcePosition ) ifFalse:[^self error: TerniLapilliGame cannotMoveErrorMessage].
	(sourcePosition eightNeighbors includes: destinationPosition) ifFalse: [^self error: TerniLapilliGame cannotMoveErrorMessage].
	(
		(self includes: sourcePosition) or:
		(sourcePosition eightNeighbors includes: destinationPosition)
	) ifFalse: [^self error: TerniLapilliGame cannotMoveErrorMessage].

	self validateIsInBoard: destinationPosition withErrorMessage: TerniLapilliGame cannotMoveErrorMessage.
! !

!testRun: #TerniLapilliGameTest #test02puttingDoesNotAffectOtherPositions stamp: 'IO 11/1/2020 17:26:39'!
PASSED!

!testRun: #TerniLapilliGameTest #test01XCanPutAToken stamp: 'IO 11/1/2020 17:26:39'!
PASSED!

!testRun: #TerniLapilliGameTest #test02puttingDoesNotAffectOtherPositions stamp: 'IO 11/1/2020 17:26:39'!
PASSED!

!testRun: #TerniLapilliGameTest #test03XCanPutInOtherPositions stamp: 'IO 11/1/2020 17:26:39'!
PASSED!

!testRun: #TerniLapilliGameTest #test04OCanPut stamp: 'IO 11/1/2020 17:26:39'!
PASSED!

!testRun: #TerniLapilliGameTest #test05XCanMove stamp: 'IO 11/1/2020 17:26:39'!
PASSED!

!testRun: #TerniLapilliGameTest #test06OCanMove stamp: 'IO 11/1/2020 17:26:39'!
PASSED!

!testRun: #TerniLapilliGameTest #test07XWinsWithTheFirstColumn stamp: 'IO 11/1/2020 17:26:39'!
PASSED!

!testRun: #TerniLapilliGameTest #test08XHasntWonYet stamp: 'IO 11/1/2020 17:26:39'!
PASSED!

!testRun: #TerniLapilliGameTest #test09XWinsWithTheSecondColumn stamp: 'IO 11/1/2020 17:26:39'!
PASSED!

!testRun: #TerniLapilliGameTest #test10XWinsWithTheThirdColumn stamp: 'IO 11/1/2020 17:26:39'!
PASSED!

!testRun: #TerniLapilliGameTest #test11XWinsWithTheFirstRow stamp: 'IO 11/1/2020 17:26:39'!
PASSED!

!testRun: #TerniLapilliGameTest #test12XWinsWithTheSecondRow stamp: 'IO 11/1/2020 17:26:39'!
PASSED!

!testRun: #TerniLapilliGameTest #test13XWinsWithTheThirdRow stamp: 'IO 11/1/2020 17:26:39'!
PASSED!

!testRun: #TerniLapilliGameTest #test14XWinsWithTheCrescentDiagonal stamp: 'IO 11/1/2020 17:26:39'!
PASSED!

!testRun: #TerniLapilliGameTest #test15XWinsWithTheDescendantDiagonal stamp: 'IO 11/1/2020 17:26:39'!
PASSED!

!testRun: #TerniLapilliGameTest #test16OWnis stamp: 'IO 11/1/2020 17:26:39'!
PASSED!

!testRun: #TerniLapilliGameTest #test17OCantStartPutting stamp: 'IO 11/1/2020 17:26:39'!
PASSED!

!testRun: #TerniLapilliGameTest #test18XCantPutTwiceInARow stamp: 'IO 11/1/2020 17:26:39'!
PASSED!

!testRun: #TerniLapilliGameTest #test19XCantMoveTwiceInARow stamp: 'IO 11/1/2020 17:26:39'!
PASSED!

!testRun: #TerniLapilliGameTest #test20OCantPutTwiceInARow stamp: 'IO 11/1/2020 17:26:39'!
PASSED!

!testRun: #TerniLapilliGameTest #test21OCantMoveTwiceInARow stamp: 'IO 11/1/2020 17:26:39'!
PASSED!

!testRun: #TerniLapilliGameTest #test22XCantMoveOnTheirFirstTurn stamp: 'IO 11/1/2020 17:26:39'!
PASSED!

!testRun: #TerniLapilliGameTest #test23XCantMoveOnTheirSecondTurn stamp: 'IO 11/1/2020 17:26:39'!
PASSED!

!testRun: #TerniLapilliGameTest #test24XCantMoveOnTheirThirdTurn stamp: 'IO 11/1/2020 17:26:39'!
PASSED!

!testRun: #TerniLapilliGameTest #test25OCantMoveOnTheirFirstTurn stamp: 'IO 11/1/2020 17:26:39'!
PASSED!

!testRun: #TerniLapilliGameTest #test26OCantMoveOnTheirSecondTurn stamp: 'IO 11/1/2020 17:26:39'!
PASSED!

!testRun: #TerniLapilliGameTest #test27OCantMoveOnTheirThirdTurn stamp: 'IO 11/1/2020 17:26:39'!
PASSED!

!testRun: #TerniLapilliGameTest #test28XCantPutAfterTheirThirdTurn stamp: 'IO 11/1/2020 17:26:39'!
PASSED!

!testRun: #TerniLapilliGameTest #test29OCantPutAfterTheirThirdTurn stamp: 'IO 11/1/2020 17:26:39'!
PASSED!

!testRun: #TerniLapilliGameTest #test30OCantPutAfterXWon stamp: 'IO 11/1/2020 17:26:39'!
PASSED!

!testRun: #TerniLapilliGameTest #test31OCantMoveAfterXWon stamp: 'IO 11/1/2020 17:26:39'!
PASSED!

!testRun: #TerniLapilliGameTest #test32XCantMoveAfterOWon stamp: 'IO 11/1/2020 17:26:39'!
PASSED!

!testRun: #TerniLapilliGameTest #test33XCantPutAfterOWon stamp: 'IO 11/1/2020 17:26:39'!
PASSED!

!testRun: #TerniLapilliGameTest #test34XCantPutInAnOccupiedSpace stamp: 'IO 11/1/2020 17:26:39'!
PASSED!

!testRun: #TerniLapilliGameTest #test35OCantPutInAnOccupiedSpace stamp: 'IO 11/1/2020 17:26:39'!
PASSED!

!testRun: #TerniLapilliGameTest #test36XCantMoveToAnOccupiedSpace stamp: 'IO 11/1/2020 17:26:39'!
PASSED!

!testRun: #TerniLapilliGameTest #test37OCantMoveToAnOccupiedSpace stamp: 'IO 11/1/2020 17:26:39'!
PASSED!

!testRun: #TerniLapilliGameTest #test38XCantPutOutsideTheBoardUnderXAxis stamp: 'IO 11/1/2020 17:26:39'!
PASSED!

!testRun: #TerniLapilliGameTest #test39XCantPutOutsideTheBoardAboveXAxis stamp: 'IO 11/1/2020 17:26:39'!
PASSED!

!testRun: #TerniLapilliGameTest #test40XCantPutOutsideTheBoardUnderNorAboveTheYAxis stamp: 'IO 11/1/2020 17:26:39'!
PASSED!

!testRun: #TerniLapilliGameTest #test41OCantPutOutsideTheBoard stamp: 'IO 11/1/2020 17:26:39'!
PASSED!

!testRun: #TerniLapilliGameTest #test42XCantMoveToOutsideTheBoard stamp: 'IO 11/1/2020 17:26:39'!
PASSED!

!testRun: #TerniLapilliGameTest #test43OCantMoveToOutsideTheBoard stamp: 'IO 11/1/2020 17:26:39'!
PASSED!

!testRun: #TerniLapilliGameTest #test44XCantMoveTokensThatDontBelongToThem stamp: 'IO 11/1/2020 17:26:39'!
PASSED!

!testRun: #TerniLapilliGameTest #test45OCantMoveTokensThatDontBelongToThem stamp: 'IO 11/1/2020 17:26:39'!
PASSED!

!testRun: #TerniLapilliGameTest #test46XCantMoveaTokenOutsideItsNeighbors stamp: 'IO 11/1/2020 17:26:39'!
PASSED!

!testRun: #TerniLapilliGameTest #test47OCantMoveATokenOutsideItsNeighbors stamp: 'IO 11/1/2020 17:26:39'!
PASSED!
!TerniLapilliPlayerTokens methodsFor: 'validations' stamp: 'IO 11/1/2020 17:27:31' prior: 50884358!
validateIsLegalMoveFrom: sourcePosition to: destinationPosition

	"signal when a token cannot be moved from a given position to another"
	"(self includes: sourcePosition ) ifFalse:[^self error: TerniLapilliGame cannotMoveErrorMessage].
	(sourcePosition eightNeighbors includes: destinationPosition) ifFalse: [^self error: TerniLapilliGame cannotMoveErrorMessage]."
	(
		(self includes: sourcePosition) or:
		(sourcePosition eightNeighbors includes: destinationPosition)
	) ifFalse: [^self error: TerniLapilliGame cannotMoveErrorMessage].

	self validateIsInBoard: destinationPosition withErrorMessage: TerniLapilliGame cannotMoveErrorMessage.
! !

!testRun: #TerniLapilliGameTest #test02puttingDoesNotAffectOtherPositions stamp: 'IO 11/1/2020 17:27:33'!
PASSED!

!testRun: #TerniLapilliGameTest #test01XCanPutAToken stamp: 'IO 11/1/2020 17:27:33'!
PASSED!

!testRun: #TerniLapilliGameTest #test02puttingDoesNotAffectOtherPositions stamp: 'IO 11/1/2020 17:27:33'!
PASSED!

!testRun: #TerniLapilliGameTest #test03XCanPutInOtherPositions stamp: 'IO 11/1/2020 17:27:33'!
PASSED!

!testRun: #TerniLapilliGameTest #test04OCanPut stamp: 'IO 11/1/2020 17:27:33'!
PASSED!

!testRun: #TerniLapilliGameTest #test05XCanMove stamp: 'IO 11/1/2020 17:27:33'!
PASSED!

!testRun: #TerniLapilliGameTest #test06OCanMove stamp: 'IO 11/1/2020 17:27:33'!
PASSED!

!testRun: #TerniLapilliGameTest #test07XWinsWithTheFirstColumn stamp: 'IO 11/1/2020 17:27:33'!
PASSED!

!testRun: #TerniLapilliGameTest #test08XHasntWonYet stamp: 'IO 11/1/2020 17:27:33'!
PASSED!

!testRun: #TerniLapilliGameTest #test09XWinsWithTheSecondColumn stamp: 'IO 11/1/2020 17:27:33'!
PASSED!

!testRun: #TerniLapilliGameTest #test10XWinsWithTheThirdColumn stamp: 'IO 11/1/2020 17:27:33'!
PASSED!

!testRun: #TerniLapilliGameTest #test11XWinsWithTheFirstRow stamp: 'IO 11/1/2020 17:27:33'!
PASSED!

!testRun: #TerniLapilliGameTest #test12XWinsWithTheSecondRow stamp: 'IO 11/1/2020 17:27:33'!
PASSED!

!testRun: #TerniLapilliGameTest #test13XWinsWithTheThirdRow stamp: 'IO 11/1/2020 17:27:33'!
PASSED!

!testRun: #TerniLapilliGameTest #test14XWinsWithTheCrescentDiagonal stamp: 'IO 11/1/2020 17:27:33'!
PASSED!

!testRun: #TerniLapilliGameTest #test15XWinsWithTheDescendantDiagonal stamp: 'IO 11/1/2020 17:27:33'!
PASSED!

!testRun: #TerniLapilliGameTest #test16OWnis stamp: 'IO 11/1/2020 17:27:33'!
PASSED!

!testRun: #TerniLapilliGameTest #test17OCantStartPutting stamp: 'IO 11/1/2020 17:27:33'!
PASSED!

!testRun: #TerniLapilliGameTest #test18XCantPutTwiceInARow stamp: 'IO 11/1/2020 17:27:33'!
PASSED!

!testRun: #TerniLapilliGameTest #test19XCantMoveTwiceInARow stamp: 'IO 11/1/2020 17:27:33'!
PASSED!

!testRun: #TerniLapilliGameTest #test20OCantPutTwiceInARow stamp: 'IO 11/1/2020 17:27:33'!
PASSED!

!testRun: #TerniLapilliGameTest #test21OCantMoveTwiceInARow stamp: 'IO 11/1/2020 17:27:33'!
PASSED!

!testRun: #TerniLapilliGameTest #test22XCantMoveOnTheirFirstTurn stamp: 'IO 11/1/2020 17:27:33'!
PASSED!

!testRun: #TerniLapilliGameTest #test23XCantMoveOnTheirSecondTurn stamp: 'IO 11/1/2020 17:27:33'!
PASSED!

!testRun: #TerniLapilliGameTest #test24XCantMoveOnTheirThirdTurn stamp: 'IO 11/1/2020 17:27:33'!
PASSED!

!testRun: #TerniLapilliGameTest #test25OCantMoveOnTheirFirstTurn stamp: 'IO 11/1/2020 17:27:33'!
PASSED!

!testRun: #TerniLapilliGameTest #test26OCantMoveOnTheirSecondTurn stamp: 'IO 11/1/2020 17:27:33'!
PASSED!

!testRun: #TerniLapilliGameTest #test27OCantMoveOnTheirThirdTurn stamp: 'IO 11/1/2020 17:27:33'!
PASSED!

!testRun: #TerniLapilliGameTest #test28XCantPutAfterTheirThirdTurn stamp: 'IO 11/1/2020 17:27:33'!
PASSED!

!testRun: #TerniLapilliGameTest #test29OCantPutAfterTheirThirdTurn stamp: 'IO 11/1/2020 17:27:33'!
PASSED!

!testRun: #TerniLapilliGameTest #test30OCantPutAfterXWon stamp: 'IO 11/1/2020 17:27:33'!
PASSED!

!testRun: #TerniLapilliGameTest #test31OCantMoveAfterXWon stamp: 'IO 11/1/2020 17:27:33'!
PASSED!

!testRun: #TerniLapilliGameTest #test32XCantMoveAfterOWon stamp: 'IO 11/1/2020 17:27:33'!
PASSED!

!testRun: #TerniLapilliGameTest #test33XCantPutAfterOWon stamp: 'IO 11/1/2020 17:27:33'!
PASSED!

!testRun: #TerniLapilliGameTest #test34XCantPutInAnOccupiedSpace stamp: 'IO 11/1/2020 17:27:33'!
PASSED!

!testRun: #TerniLapilliGameTest #test35OCantPutInAnOccupiedSpace stamp: 'IO 11/1/2020 17:27:33'!
PASSED!

!testRun: #TerniLapilliGameTest #test36XCantMoveToAnOccupiedSpace stamp: 'IO 11/1/2020 17:27:33'!
PASSED!

!testRun: #TerniLapilliGameTest #test37OCantMoveToAnOccupiedSpace stamp: 'IO 11/1/2020 17:27:33'!
PASSED!

!testRun: #TerniLapilliGameTest #test38XCantPutOutsideTheBoardUnderXAxis stamp: 'IO 11/1/2020 17:27:33'!
PASSED!

!testRun: #TerniLapilliGameTest #test39XCantPutOutsideTheBoardAboveXAxis stamp: 'IO 11/1/2020 17:27:33'!
PASSED!

!testRun: #TerniLapilliGameTest #test40XCantPutOutsideTheBoardUnderNorAboveTheYAxis stamp: 'IO 11/1/2020 17:27:33'!
PASSED!

!testRun: #TerniLapilliGameTest #test41OCantPutOutsideTheBoard stamp: 'IO 11/1/2020 17:27:33'!
PASSED!

!testRun: #TerniLapilliGameTest #test42XCantMoveToOutsideTheBoard stamp: 'IO 11/1/2020 17:27:33'!
PASSED!

!testRun: #TerniLapilliGameTest #test43OCantMoveToOutsideTheBoard stamp: 'IO 11/1/2020 17:27:33'!
PASSED!

!testRun: #TerniLapilliGameTest #test44XCantMoveTokensThatDontBelongToThem stamp: 'IO 11/1/2020 17:27:33'!
FAILURE!

!testRun: #TerniLapilliGameTest #test45OCantMoveTokensThatDontBelongToThem stamp: 'IO 11/1/2020 17:27:33'!
FAILURE!

!testRun: #TerniLapilliGameTest #test46XCantMoveaTokenOutsideItsNeighbors stamp: 'IO 11/1/2020 17:27:33'!
FAILURE!

!testRun: #TerniLapilliGameTest #test47OCantMoveATokenOutsideItsNeighbors stamp: 'IO 11/1/2020 17:27:34'!
FAILURE!
!TerniLapilliPlayerTokens methodsFor: 'validations' stamp: 'IO 11/1/2020 17:27:42' prior: 50884539!
validateIsLegalMoveFrom: sourcePosition to: destinationPosition

	"signal when a token cannot be moved from a given position to another"
	"(self includes: sourcePosition ) ifFalse:[^self error: TerniLapilliGame cannotMoveErrorMessage].
	(sourcePosition eightNeighbors includes: destinationPosition) ifFalse: [^self error: TerniLapilliGame cannotMoveErrorMessage]."
	(
		(sourcePosition eightNeighbors includes: destinationPosition) or:
		(self includes: sourcePosition)
	) ifFalse: [^self error: TerniLapilliGame cannotMoveErrorMessage].

	self validateIsInBoard: destinationPosition withErrorMessage: TerniLapilliGame cannotMoveErrorMessage.
! !

!testRun: #TerniLapilliGameTest #test02puttingDoesNotAffectOtherPositions stamp: 'IO 11/1/2020 17:27:45'!
PASSED!

!testRun: #TerniLapilliGameTest #test01XCanPutAToken stamp: 'IO 11/1/2020 17:27:45'!
PASSED!

!testRun: #TerniLapilliGameTest #test02puttingDoesNotAffectOtherPositions stamp: 'IO 11/1/2020 17:27:45'!
PASSED!

!testRun: #TerniLapilliGameTest #test03XCanPutInOtherPositions stamp: 'IO 11/1/2020 17:27:45'!
PASSED!

!testRun: #TerniLapilliGameTest #test04OCanPut stamp: 'IO 11/1/2020 17:27:45'!
PASSED!

!testRun: #TerniLapilliGameTest #test05XCanMove stamp: 'IO 11/1/2020 17:27:45'!
PASSED!

!testRun: #TerniLapilliGameTest #test06OCanMove stamp: 'IO 11/1/2020 17:27:45'!
PASSED!

!testRun: #TerniLapilliGameTest #test07XWinsWithTheFirstColumn stamp: 'IO 11/1/2020 17:27:45'!
PASSED!

!testRun: #TerniLapilliGameTest #test08XHasntWonYet stamp: 'IO 11/1/2020 17:27:45'!
PASSED!

!testRun: #TerniLapilliGameTest #test09XWinsWithTheSecondColumn stamp: 'IO 11/1/2020 17:27:45'!
PASSED!

!testRun: #TerniLapilliGameTest #test10XWinsWithTheThirdColumn stamp: 'IO 11/1/2020 17:27:45'!
PASSED!

!testRun: #TerniLapilliGameTest #test11XWinsWithTheFirstRow stamp: 'IO 11/1/2020 17:27:45'!
PASSED!

!testRun: #TerniLapilliGameTest #test12XWinsWithTheSecondRow stamp: 'IO 11/1/2020 17:27:45'!
PASSED!

!testRun: #TerniLapilliGameTest #test13XWinsWithTheThirdRow stamp: 'IO 11/1/2020 17:27:45'!
PASSED!

!testRun: #TerniLapilliGameTest #test14XWinsWithTheCrescentDiagonal stamp: 'IO 11/1/2020 17:27:45'!
PASSED!

!testRun: #TerniLapilliGameTest #test15XWinsWithTheDescendantDiagonal stamp: 'IO 11/1/2020 17:27:45'!
PASSED!

!testRun: #TerniLapilliGameTest #test16OWnis stamp: 'IO 11/1/2020 17:27:45'!
PASSED!

!testRun: #TerniLapilliGameTest #test17OCantStartPutting stamp: 'IO 11/1/2020 17:27:45'!
PASSED!

!testRun: #TerniLapilliGameTest #test18XCantPutTwiceInARow stamp: 'IO 11/1/2020 17:27:45'!
PASSED!

!testRun: #TerniLapilliGameTest #test19XCantMoveTwiceInARow stamp: 'IO 11/1/2020 17:27:45'!
PASSED!

!testRun: #TerniLapilliGameTest #test20OCantPutTwiceInARow stamp: 'IO 11/1/2020 17:27:45'!
PASSED!

!testRun: #TerniLapilliGameTest #test21OCantMoveTwiceInARow stamp: 'IO 11/1/2020 17:27:45'!
PASSED!

!testRun: #TerniLapilliGameTest #test22XCantMoveOnTheirFirstTurn stamp: 'IO 11/1/2020 17:27:45'!
PASSED!

!testRun: #TerniLapilliGameTest #test23XCantMoveOnTheirSecondTurn stamp: 'IO 11/1/2020 17:27:45'!
PASSED!

!testRun: #TerniLapilliGameTest #test24XCantMoveOnTheirThirdTurn stamp: 'IO 11/1/2020 17:27:45'!
PASSED!

!testRun: #TerniLapilliGameTest #test25OCantMoveOnTheirFirstTurn stamp: 'IO 11/1/2020 17:27:45'!
PASSED!

!testRun: #TerniLapilliGameTest #test26OCantMoveOnTheirSecondTurn stamp: 'IO 11/1/2020 17:27:45'!
PASSED!

!testRun: #TerniLapilliGameTest #test27OCantMoveOnTheirThirdTurn stamp: 'IO 11/1/2020 17:27:45'!
PASSED!

!testRun: #TerniLapilliGameTest #test28XCantPutAfterTheirThirdTurn stamp: 'IO 11/1/2020 17:27:45'!
PASSED!

!testRun: #TerniLapilliGameTest #test29OCantPutAfterTheirThirdTurn stamp: 'IO 11/1/2020 17:27:45'!
PASSED!

!testRun: #TerniLapilliGameTest #test30OCantPutAfterXWon stamp: 'IO 11/1/2020 17:27:45'!
PASSED!

!testRun: #TerniLapilliGameTest #test31OCantMoveAfterXWon stamp: 'IO 11/1/2020 17:27:45'!
PASSED!

!testRun: #TerniLapilliGameTest #test32XCantMoveAfterOWon stamp: 'IO 11/1/2020 17:27:45'!
PASSED!

!testRun: #TerniLapilliGameTest #test33XCantPutAfterOWon stamp: 'IO 11/1/2020 17:27:45'!
PASSED!

!testRun: #TerniLapilliGameTest #test34XCantPutInAnOccupiedSpace stamp: 'IO 11/1/2020 17:27:45'!
PASSED!

!testRun: #TerniLapilliGameTest #test35OCantPutInAnOccupiedSpace stamp: 'IO 11/1/2020 17:27:45'!
PASSED!

!testRun: #TerniLapilliGameTest #test36XCantMoveToAnOccupiedSpace stamp: 'IO 11/1/2020 17:27:45'!
PASSED!

!testRun: #TerniLapilliGameTest #test37OCantMoveToAnOccupiedSpace stamp: 'IO 11/1/2020 17:27:45'!
PASSED!

!testRun: #TerniLapilliGameTest #test38XCantPutOutsideTheBoardUnderXAxis stamp: 'IO 11/1/2020 17:27:45'!
PASSED!

!testRun: #TerniLapilliGameTest #test39XCantPutOutsideTheBoardAboveXAxis stamp: 'IO 11/1/2020 17:27:45'!
PASSED!

!testRun: #TerniLapilliGameTest #test40XCantPutOutsideTheBoardUnderNorAboveTheYAxis stamp: 'IO 11/1/2020 17:27:45'!
PASSED!

!testRun: #TerniLapilliGameTest #test41OCantPutOutsideTheBoard stamp: 'IO 11/1/2020 17:27:45'!
PASSED!

!testRun: #TerniLapilliGameTest #test42XCantMoveToOutsideTheBoard stamp: 'IO 11/1/2020 17:27:45'!
PASSED!

!testRun: #TerniLapilliGameTest #test43OCantMoveToOutsideTheBoard stamp: 'IO 11/1/2020 17:27:45'!
PASSED!

!testRun: #TerniLapilliGameTest #test44XCantMoveTokensThatDontBelongToThem stamp: 'IO 11/1/2020 17:27:45'!
FAILURE!

!testRun: #TerniLapilliGameTest #test45OCantMoveTokensThatDontBelongToThem stamp: 'IO 11/1/2020 17:27:45'!
FAILURE!

!testRun: #TerniLapilliGameTest #test46XCantMoveaTokenOutsideItsNeighbors stamp: 'IO 11/1/2020 17:27:45'!
FAILURE!

!testRun: #TerniLapilliGameTest #test47OCantMoveATokenOutsideItsNeighbors stamp: 'IO 11/1/2020 17:27:45'!
FAILURE!
!TerniLapilliPlayerTokens methodsFor: 'validations' stamp: 'IO 11/1/2020 17:27:53' prior: 50884720!
validateIsLegalMoveFrom: sourcePosition to: destinationPosition

	"signal when a token cannot be moved from a given position to another"
	"(self includes: sourcePosition ) ifFalse:[^self error: TerniLapilliGame cannotMoveErrorMessage].
	(sourcePosition eightNeighbors includes: destinationPosition) ifFalse: [^self error: TerniLapilliGame cannotMoveErrorMessage]."
	(
		(sourcePosition eightNeighbors includes: destinationPosition) and:
		(self includes: sourcePosition)
	) ifFalse: [^self error: TerniLapilliGame cannotMoveErrorMessage].

	self validateIsInBoard: destinationPosition withErrorMessage: TerniLapilliGame cannotMoveErrorMessage.
! !

!testRun: #TerniLapilliGameTest #test02puttingDoesNotAffectOtherPositions stamp: 'IO 11/1/2020 17:27:57'!
PASSED!

!testRun: #TerniLapilliGameTest #test01XCanPutAToken stamp: 'IO 11/1/2020 17:27:57'!
PASSED!

!testRun: #TerniLapilliGameTest #test02puttingDoesNotAffectOtherPositions stamp: 'IO 11/1/2020 17:27:57'!
PASSED!

!testRun: #TerniLapilliGameTest #test03XCanPutInOtherPositions stamp: 'IO 11/1/2020 17:27:57'!
PASSED!

!testRun: #TerniLapilliGameTest #test04OCanPut stamp: 'IO 11/1/2020 17:27:57'!
PASSED!

!testRun: #TerniLapilliGameTest #test05XCanMove stamp: 'IO 11/1/2020 17:27:57'!
PASSED!

!testRun: #TerniLapilliGameTest #test06OCanMove stamp: 'IO 11/1/2020 17:27:57'!
PASSED!

!testRun: #TerniLapilliGameTest #test07XWinsWithTheFirstColumn stamp: 'IO 11/1/2020 17:27:57'!
PASSED!

!testRun: #TerniLapilliGameTest #test08XHasntWonYet stamp: 'IO 11/1/2020 17:27:57'!
PASSED!

!testRun: #TerniLapilliGameTest #test09XWinsWithTheSecondColumn stamp: 'IO 11/1/2020 17:27:57'!
PASSED!

!testRun: #TerniLapilliGameTest #test10XWinsWithTheThirdColumn stamp: 'IO 11/1/2020 17:27:57'!
PASSED!

!testRun: #TerniLapilliGameTest #test11XWinsWithTheFirstRow stamp: 'IO 11/1/2020 17:27:57'!
PASSED!

!testRun: #TerniLapilliGameTest #test12XWinsWithTheSecondRow stamp: 'IO 11/1/2020 17:27:57'!
PASSED!

!testRun: #TerniLapilliGameTest #test13XWinsWithTheThirdRow stamp: 'IO 11/1/2020 17:27:57'!
PASSED!

!testRun: #TerniLapilliGameTest #test14XWinsWithTheCrescentDiagonal stamp: 'IO 11/1/2020 17:27:57'!
PASSED!

!testRun: #TerniLapilliGameTest #test15XWinsWithTheDescendantDiagonal stamp: 'IO 11/1/2020 17:27:57'!
PASSED!

!testRun: #TerniLapilliGameTest #test16OWnis stamp: 'IO 11/1/2020 17:27:57'!
PASSED!

!testRun: #TerniLapilliGameTest #test17OCantStartPutting stamp: 'IO 11/1/2020 17:27:57'!
PASSED!

!testRun: #TerniLapilliGameTest #test18XCantPutTwiceInARow stamp: 'IO 11/1/2020 17:27:57'!
PASSED!

!testRun: #TerniLapilliGameTest #test19XCantMoveTwiceInARow stamp: 'IO 11/1/2020 17:27:57'!
PASSED!

!testRun: #TerniLapilliGameTest #test20OCantPutTwiceInARow stamp: 'IO 11/1/2020 17:27:57'!
PASSED!

!testRun: #TerniLapilliGameTest #test21OCantMoveTwiceInARow stamp: 'IO 11/1/2020 17:27:57'!
PASSED!

!testRun: #TerniLapilliGameTest #test22XCantMoveOnTheirFirstTurn stamp: 'IO 11/1/2020 17:27:57'!
PASSED!

!testRun: #TerniLapilliGameTest #test23XCantMoveOnTheirSecondTurn stamp: 'IO 11/1/2020 17:27:57'!
PASSED!

!testRun: #TerniLapilliGameTest #test24XCantMoveOnTheirThirdTurn stamp: 'IO 11/1/2020 17:27:57'!
PASSED!

!testRun: #TerniLapilliGameTest #test25OCantMoveOnTheirFirstTurn stamp: 'IO 11/1/2020 17:27:57'!
PASSED!

!testRun: #TerniLapilliGameTest #test26OCantMoveOnTheirSecondTurn stamp: 'IO 11/1/2020 17:27:57'!
PASSED!

!testRun: #TerniLapilliGameTest #test27OCantMoveOnTheirThirdTurn stamp: 'IO 11/1/2020 17:27:57'!
PASSED!

!testRun: #TerniLapilliGameTest #test28XCantPutAfterTheirThirdTurn stamp: 'IO 11/1/2020 17:27:57'!
PASSED!

!testRun: #TerniLapilliGameTest #test29OCantPutAfterTheirThirdTurn stamp: 'IO 11/1/2020 17:27:57'!
PASSED!

!testRun: #TerniLapilliGameTest #test30OCantPutAfterXWon stamp: 'IO 11/1/2020 17:27:57'!
PASSED!

!testRun: #TerniLapilliGameTest #test31OCantMoveAfterXWon stamp: 'IO 11/1/2020 17:27:57'!
PASSED!

!testRun: #TerniLapilliGameTest #test32XCantMoveAfterOWon stamp: 'IO 11/1/2020 17:27:57'!
PASSED!

!testRun: #TerniLapilliGameTest #test33XCantPutAfterOWon stamp: 'IO 11/1/2020 17:27:57'!
PASSED!

!testRun: #TerniLapilliGameTest #test34XCantPutInAnOccupiedSpace stamp: 'IO 11/1/2020 17:27:57'!
PASSED!

!testRun: #TerniLapilliGameTest #test35OCantPutInAnOccupiedSpace stamp: 'IO 11/1/2020 17:27:57'!
PASSED!

!testRun: #TerniLapilliGameTest #test36XCantMoveToAnOccupiedSpace stamp: 'IO 11/1/2020 17:27:57'!
PASSED!

!testRun: #TerniLapilliGameTest #test37OCantMoveToAnOccupiedSpace stamp: 'IO 11/1/2020 17:27:57'!
PASSED!

!testRun: #TerniLapilliGameTest #test38XCantPutOutsideTheBoardUnderXAxis stamp: 'IO 11/1/2020 17:27:57'!
PASSED!

!testRun: #TerniLapilliGameTest #test39XCantPutOutsideTheBoardAboveXAxis stamp: 'IO 11/1/2020 17:27:57'!
PASSED!

!testRun: #TerniLapilliGameTest #test40XCantPutOutsideTheBoardUnderNorAboveTheYAxis stamp: 'IO 11/1/2020 17:27:57'!
PASSED!

!testRun: #TerniLapilliGameTest #test41OCantPutOutsideTheBoard stamp: 'IO 11/1/2020 17:27:57'!
PASSED!

!testRun: #TerniLapilliGameTest #test42XCantMoveToOutsideTheBoard stamp: 'IO 11/1/2020 17:27:57'!
PASSED!

!testRun: #TerniLapilliGameTest #test43OCantMoveToOutsideTheBoard stamp: 'IO 11/1/2020 17:27:57'!
PASSED!

!testRun: #TerniLapilliGameTest #test44XCantMoveTokensThatDontBelongToThem stamp: 'IO 11/1/2020 17:27:57'!
PASSED!

!testRun: #TerniLapilliGameTest #test45OCantMoveTokensThatDontBelongToThem stamp: 'IO 11/1/2020 17:27:57'!
PASSED!

!testRun: #TerniLapilliGameTest #test46XCantMoveaTokenOutsideItsNeighbors stamp: 'IO 11/1/2020 17:27:57'!
PASSED!

!testRun: #TerniLapilliGameTest #test47OCantMoveATokenOutsideItsNeighbors stamp: 'IO 11/1/2020 17:27:57'!
PASSED!
!TerniLapilliPlayerTokens methodsFor: 'validations' stamp: 'IO 11/1/2020 17:28:03' prior: 50884901!
validateIsLegalMoveFrom: sourcePosition to: destinationPosition

	"signal when a token cannot be moved from a given position to another"

	(
		(sourcePosition eightNeighbors includes: destinationPosition) and:
		(self includes: sourcePosition)
	) ifFalse: [^self error: TerniLapilliGame cannotMoveErrorMessage].

	self validateIsInBoard: destinationPosition withErrorMessage: TerniLapilliGame cannotMoveErrorMessage.
! !

!testRun: #TerniLapilliGameTest #test02puttingDoesNotAffectOtherPositions stamp: 'IO 11/1/2020 17:28:06'!
PASSED!

!testRun: #TerniLapilliGameTest #test01XCanPutAToken stamp: 'IO 11/1/2020 17:28:06'!
PASSED!

!testRun: #TerniLapilliGameTest #test02puttingDoesNotAffectOtherPositions stamp: 'IO 11/1/2020 17:28:06'!
PASSED!

!testRun: #TerniLapilliGameTest #test03XCanPutInOtherPositions stamp: 'IO 11/1/2020 17:28:06'!
PASSED!

!testRun: #TerniLapilliGameTest #test04OCanPut stamp: 'IO 11/1/2020 17:28:06'!
PASSED!

!testRun: #TerniLapilliGameTest #test05XCanMove stamp: 'IO 11/1/2020 17:28:06'!
PASSED!

!testRun: #TerniLapilliGameTest #test06OCanMove stamp: 'IO 11/1/2020 17:28:06'!
PASSED!

!testRun: #TerniLapilliGameTest #test07XWinsWithTheFirstColumn stamp: 'IO 11/1/2020 17:28:06'!
PASSED!

!testRun: #TerniLapilliGameTest #test08XHasntWonYet stamp: 'IO 11/1/2020 17:28:06'!
PASSED!

!testRun: #TerniLapilliGameTest #test09XWinsWithTheSecondColumn stamp: 'IO 11/1/2020 17:28:06'!
PASSED!

!testRun: #TerniLapilliGameTest #test10XWinsWithTheThirdColumn stamp: 'IO 11/1/2020 17:28:06'!
PASSED!

!testRun: #TerniLapilliGameTest #test11XWinsWithTheFirstRow stamp: 'IO 11/1/2020 17:28:06'!
PASSED!

!testRun: #TerniLapilliGameTest #test12XWinsWithTheSecondRow stamp: 'IO 11/1/2020 17:28:06'!
PASSED!

!testRun: #TerniLapilliGameTest #test13XWinsWithTheThirdRow stamp: 'IO 11/1/2020 17:28:06'!
PASSED!

!testRun: #TerniLapilliGameTest #test14XWinsWithTheCrescentDiagonal stamp: 'IO 11/1/2020 17:28:06'!
PASSED!

!testRun: #TerniLapilliGameTest #test15XWinsWithTheDescendantDiagonal stamp: 'IO 11/1/2020 17:28:06'!
PASSED!

!testRun: #TerniLapilliGameTest #test16OWnis stamp: 'IO 11/1/2020 17:28:06'!
PASSED!

!testRun: #TerniLapilliGameTest #test17OCantStartPutting stamp: 'IO 11/1/2020 17:28:06'!
PASSED!

!testRun: #TerniLapilliGameTest #test18XCantPutTwiceInARow stamp: 'IO 11/1/2020 17:28:06'!
PASSED!

!testRun: #TerniLapilliGameTest #test19XCantMoveTwiceInARow stamp: 'IO 11/1/2020 17:28:06'!
PASSED!

!testRun: #TerniLapilliGameTest #test20OCantPutTwiceInARow stamp: 'IO 11/1/2020 17:28:06'!
PASSED!

!testRun: #TerniLapilliGameTest #test21OCantMoveTwiceInARow stamp: 'IO 11/1/2020 17:28:06'!
PASSED!

!testRun: #TerniLapilliGameTest #test22XCantMoveOnTheirFirstTurn stamp: 'IO 11/1/2020 17:28:06'!
PASSED!

!testRun: #TerniLapilliGameTest #test23XCantMoveOnTheirSecondTurn stamp: 'IO 11/1/2020 17:28:06'!
PASSED!

!testRun: #TerniLapilliGameTest #test24XCantMoveOnTheirThirdTurn stamp: 'IO 11/1/2020 17:28:06'!
PASSED!

!testRun: #TerniLapilliGameTest #test25OCantMoveOnTheirFirstTurn stamp: 'IO 11/1/2020 17:28:06'!
PASSED!

!testRun: #TerniLapilliGameTest #test26OCantMoveOnTheirSecondTurn stamp: 'IO 11/1/2020 17:28:06'!
PASSED!

!testRun: #TerniLapilliGameTest #test27OCantMoveOnTheirThirdTurn stamp: 'IO 11/1/2020 17:28:06'!
PASSED!

!testRun: #TerniLapilliGameTest #test28XCantPutAfterTheirThirdTurn stamp: 'IO 11/1/2020 17:28:06'!
PASSED!

!testRun: #TerniLapilliGameTest #test29OCantPutAfterTheirThirdTurn stamp: 'IO 11/1/2020 17:28:06'!
PASSED!

!testRun: #TerniLapilliGameTest #test30OCantPutAfterXWon stamp: 'IO 11/1/2020 17:28:06'!
PASSED!

!testRun: #TerniLapilliGameTest #test31OCantMoveAfterXWon stamp: 'IO 11/1/2020 17:28:06'!
PASSED!

!testRun: #TerniLapilliGameTest #test32XCantMoveAfterOWon stamp: 'IO 11/1/2020 17:28:06'!
PASSED!

!testRun: #TerniLapilliGameTest #test33XCantPutAfterOWon stamp: 'IO 11/1/2020 17:28:06'!
PASSED!

!testRun: #TerniLapilliGameTest #test34XCantPutInAnOccupiedSpace stamp: 'IO 11/1/2020 17:28:06'!
PASSED!

!testRun: #TerniLapilliGameTest #test35OCantPutInAnOccupiedSpace stamp: 'IO 11/1/2020 17:28:06'!
PASSED!

!testRun: #TerniLapilliGameTest #test36XCantMoveToAnOccupiedSpace stamp: 'IO 11/1/2020 17:28:06'!
PASSED!

!testRun: #TerniLapilliGameTest #test37OCantMoveToAnOccupiedSpace stamp: 'IO 11/1/2020 17:28:06'!
PASSED!

!testRun: #TerniLapilliGameTest #test38XCantPutOutsideTheBoardUnderXAxis stamp: 'IO 11/1/2020 17:28:06'!
PASSED!

!testRun: #TerniLapilliGameTest #test39XCantPutOutsideTheBoardAboveXAxis stamp: 'IO 11/1/2020 17:28:06'!
PASSED!

!testRun: #TerniLapilliGameTest #test40XCantPutOutsideTheBoardUnderNorAboveTheYAxis stamp: 'IO 11/1/2020 17:28:06'!
PASSED!

!testRun: #TerniLapilliGameTest #test41OCantPutOutsideTheBoard stamp: 'IO 11/1/2020 17:28:06'!
PASSED!

!testRun: #TerniLapilliGameTest #test42XCantMoveToOutsideTheBoard stamp: 'IO 11/1/2020 17:28:06'!
PASSED!

!testRun: #TerniLapilliGameTest #test43OCantMoveToOutsideTheBoard stamp: 'IO 11/1/2020 17:28:06'!
PASSED!

!testRun: #TerniLapilliGameTest #test44XCantMoveTokensThatDontBelongToThem stamp: 'IO 11/1/2020 17:28:06'!
PASSED!

!testRun: #TerniLapilliGameTest #test45OCantMoveTokensThatDontBelongToThem stamp: 'IO 11/1/2020 17:28:06'!
PASSED!

!testRun: #TerniLapilliGameTest #test46XCantMoveaTokenOutsideItsNeighbors stamp: 'IO 11/1/2020 17:28:06'!
PASSED!

!testRun: #TerniLapilliGameTest #test47OCantMoveATokenOutsideItsNeighbors stamp: 'IO 11/1/2020 17:28:06'!
PASSED!
!OIsPlaying class methodsFor: 'as yet unclassified' stamp: 'IO 11/1/2020 17:28:30' prior: 50884175 overrides: 50883590!
withXTokens: nextXTokens oTokens: nextOTokens

	"create the next state of X's turn"

	(nextXTokens areInWinningPosition) ifTrue: [^GameIsOver withXTokens: nextXTokens oTokens: nextOTokens].
	(nextOTokens size < 3) ifTrue: [^OIsPlacing withXTokens: nextXTokens oTokens: nextOTokens].

	^OIsMoving withXTokens: nextXTokens oTokens: nextOTokens
! !
!OIsPlaying class methodsFor: 'as yet unclassified' stamp: 'IO 11/1/2020 17:31:17' prior: 50885256 overrides: 50883590!
withXTokens: nextXTokens oTokens: nextOTokens

	"create the next state of X's turn"

	(nextXTokens areInWinningPosition) ifTrue: [^GameIsOver withXTokens: nextXTokens oTokens: nextOTokens].
	(nextOTokens size < 3) ifTrue: [^OIsPlacing withXTokens: nextXTokens oTokens: nextOTokens].
	^OIsMoving withXTokens: nextXTokens oTokens: nextOTokens
! !
!OIsMoving class methodsFor: 'as yet unclassified' stamp: 'IO 11/1/2020 17:31:31' prior: 50881291 overrides: 50885271!
withXTokens: nextXTokens oTokens: nextOTokens

	^self basicNew intializeWithXTokens: nextXTokens oTokens: nextOTokens.
! !
!OIsPlacing class methodsFor: 'as yet unclassified' stamp: 'IO 11/1/2020 17:31:42' prior: 50881328 overrides: 50885271!
withXTokens: nextXTokens oTokens: nextOTokens

	^self basicNew intializeWithXTokens: nextXTokens oTokens: nextOTokens.
! !
!XIsPlaying class methodsFor: 'instance creation' stamp: 'IO 11/1/2020 17:31:51' prior: 50881388 overrides: 50883606!
new

	^self basicNew initialize.
! !
!XIsPlaying class methodsFor: 'instance creation' stamp: 'IO 11/1/2020 17:32:01' prior: 50881393 overrides: 50883590!
withXTokens: nextXTokens oTokens: nextOTokens

	(nextOTokens areInWinningPosition) ifTrue: [^GameIsOver withXTokens: nextXTokens oTokens: nextOTokens].
	(nextXTokens size < 3) ifTrue: [^XIsPlacing withXTokens: nextXTokens oTokens: nextOTokens].
	^XIsMoving withXTokens: nextXTokens oTokens: nextOTokens.

	
! !
!XIsPlaying class methodsFor: 'instance creation' stamp: 'IO 11/1/2020 17:32:15' prior: 50885307 overrides: 50883590!
withXTokens: nextXTokens oTokens: nextOTokens

	"create the next state of O's turn"

	(nextOTokens areInWinningPosition) ifTrue: [^GameIsOver withXTokens: nextXTokens oTokens: nextOTokens].
	(nextXTokens size < 3) ifTrue: [^XIsPlacing withXTokens: nextXTokens oTokens: nextOTokens].
	^XIsMoving withXTokens: nextXTokens oTokens: nextOTokens.

	
! !
!XIsPlaying class methodsFor: 'instance creation' stamp: 'IO 11/1/2020 17:32:21' prior: 50885302 overrides: 50883606!
new

	^self basicNew initialize.
! !
!OIsPlaying class methodsFor: 'as yet unclassified' stamp: 'IO 11/1/2020 17:32:26' prior: 50885271 overrides: 50883590!
withXTokens: nextXTokens oTokens: nextOTokens

	"create the next state of O's turn"

	(nextXTokens areInWinningPosition) ifTrue: [^GameIsOver withXTokens: nextXTokens oTokens: nextOTokens].
	(nextOTokens size < 3) ifTrue: [^OIsPlacing withXTokens: nextXTokens oTokens: nextOTokens].
	^OIsMoving withXTokens: nextXTokens oTokens: nextOTokens
! !
!OIsMoving class methodsFor: 'as yet unclassified' stamp: 'IO 11/1/2020 17:32:51' prior: 50885286 overrides: 50885341!
withXTokens: nextXTokens oTokens: nextOTokens

	""

	^self basicNew intializeWithXTokens: nextXTokens oTokens: nextOTokens.
! !
!OIsMoving class methodsFor: 'as yet unclassified' stamp: 'IO 11/1/2020 17:33:22' prior: 50885356 overrides: 50885341!
withXTokens: nextXTokens oTokens: nextOTokens

	"create the next state of O's turn after they has put the 3 tokens"

	^self basicNew intializeWithXTokens: nextXTokens oTokens: nextOTokens.
! !
!OIsPlacing class methodsFor: 'as yet unclassified' stamp: 'IO 11/1/2020 17:33:38' prior: 50885294 overrides: 50885341!
withXTokens: nextXTokens oTokens: nextOTokens

	"create the next state of O's turn before they has put the 3 tokens"

	^self basicNew intializeWithXTokens: nextXTokens oTokens: nextOTokens.
! !
!XIsPlaying class methodsFor: 'instance creation' stamp: 'IO 11/1/2020 17:34:14' prior: 50885336 overrides: 50883606!
new

	"create the first state of the game. it is X turn"

	^self basicNew initialize.
! !
!XIsPlaying class methodsFor: 'instance creation' stamp: 'IO 11/1/2020 17:34:28' prior: 50885321 overrides: 50883590!
withXTokens: nextXTokens oTokens: nextOTokens

	"create the next state of x's turn"

	(nextOTokens areInWinningPosition) ifTrue: [^GameIsOver withXTokens: nextXTokens oTokens: nextOTokens].
	(nextXTokens size < 3) ifTrue: [^XIsPlacing withXTokens: nextXTokens oTokens: nextOTokens].
	^XIsMoving withXTokens: nextXTokens oTokens: nextOTokens.

	
! !
!XIsPlaying class methodsFor: 'instance creation' stamp: 'IO 11/1/2020 17:34:30' prior: 50885391 overrides: 50883590!
withXTokens: nextXTokens oTokens: nextOTokens

	"create the next state of X's turn"

	(nextOTokens areInWinningPosition) ifTrue: [^GameIsOver withXTokens: nextXTokens oTokens: nextOTokens].
	(nextXTokens size < 3) ifTrue: [^XIsPlacing withXTokens: nextXTokens oTokens: nextOTokens].
	^XIsMoving withXTokens: nextXTokens oTokens: nextOTokens.

	
! !
!XIsMoving class methodsFor: 'as yet unclassified' stamp: 'IO 11/1/2020 17:34:57' prior: 50881437 overrides: 50885406!
withXTokens: nextXTokens oTokens: nextOTokens

	"create the next state of X's turn after they has put the 3 tokens"

	^self basicNew intializeWithXTokens: nextXTokens oTokens: nextOTokens.! !
!XIsPlacing class methodsFor: 'as yet unclassified' stamp: 'IO 11/1/2020 17:35:07' prior: 50881475 overrides: 50885406!
withXTokens: nextXTokens oTokens: nextOTokens

	"create the next state of O's turn before they has put the 3 tokens"

	^self basicNew intializeWithXTokens: nextXTokens oTokens: nextOTokens.! !
!TerniLapilliPlayerTokens class methodsFor: 'instance creation' stamp: 'IO 11/1/2020 17:35:34' prior: 50881602 overrides: 16783533!
new

	"create the tokens for new player"

	^self basicNew initialize.

! !
!TerniLapilliPlayerTokens class methodsFor: 'instance creation' stamp: 'IO 11/1/2020 17:35:36' prior: 50885442 overrides: 16783533!
new

	"create the tokens for player"

	^self basicNew initialize.

! !
!TerniLapilliPlayerTokens class methodsFor: 'instance creation' stamp: 'IO 11/1/2020 17:35:38' prior: 50885449 overrides: 16783533!
new

	"create the tokens for player"

	^self basicNew initialize.
! !

!testRun: #TerniLapilliGameTest #test02puttingDoesNotAffectOtherPositions stamp: 'IO 11/1/2020 17:35:42'!
PASSED!

!testRun: #TerniLapilliGameTest #test01XCanPutAToken stamp: 'IO 11/1/2020 17:35:42'!
PASSED!

!testRun: #TerniLapilliGameTest #test02puttingDoesNotAffectOtherPositions stamp: 'IO 11/1/2020 17:35:42'!
PASSED!

!testRun: #TerniLapilliGameTest #test03XCanPutInOtherPositions stamp: 'IO 11/1/2020 17:35:42'!
PASSED!

!testRun: #TerniLapilliGameTest #test04OCanPut stamp: 'IO 11/1/2020 17:35:42'!
PASSED!

!testRun: #TerniLapilliGameTest #test05XCanMove stamp: 'IO 11/1/2020 17:35:42'!
PASSED!

!testRun: #TerniLapilliGameTest #test06OCanMove stamp: 'IO 11/1/2020 17:35:42'!
PASSED!

!testRun: #TerniLapilliGameTest #test07XWinsWithTheFirstColumn stamp: 'IO 11/1/2020 17:35:42'!
PASSED!

!testRun: #TerniLapilliGameTest #test08XHasntWonYet stamp: 'IO 11/1/2020 17:35:42'!
PASSED!

!testRun: #TerniLapilliGameTest #test09XWinsWithTheSecondColumn stamp: 'IO 11/1/2020 17:35:42'!
PASSED!

!testRun: #TerniLapilliGameTest #test10XWinsWithTheThirdColumn stamp: 'IO 11/1/2020 17:35:42'!
PASSED!

!testRun: #TerniLapilliGameTest #test11XWinsWithTheFirstRow stamp: 'IO 11/1/2020 17:35:42'!
PASSED!

!testRun: #TerniLapilliGameTest #test12XWinsWithTheSecondRow stamp: 'IO 11/1/2020 17:35:42'!
PASSED!

!testRun: #TerniLapilliGameTest #test13XWinsWithTheThirdRow stamp: 'IO 11/1/2020 17:35:42'!
PASSED!

!testRun: #TerniLapilliGameTest #test14XWinsWithTheCrescentDiagonal stamp: 'IO 11/1/2020 17:35:42'!
PASSED!

!testRun: #TerniLapilliGameTest #test15XWinsWithTheDescendantDiagonal stamp: 'IO 11/1/2020 17:35:42'!
PASSED!

!testRun: #TerniLapilliGameTest #test16OWnis stamp: 'IO 11/1/2020 17:35:42'!
PASSED!

!testRun: #TerniLapilliGameTest #test17OCantStartPutting stamp: 'IO 11/1/2020 17:35:42'!
PASSED!

!testRun: #TerniLapilliGameTest #test18XCantPutTwiceInARow stamp: 'IO 11/1/2020 17:35:42'!
PASSED!

!testRun: #TerniLapilliGameTest #test19XCantMoveTwiceInARow stamp: 'IO 11/1/2020 17:35:42'!
PASSED!

!testRun: #TerniLapilliGameTest #test20OCantPutTwiceInARow stamp: 'IO 11/1/2020 17:35:42'!
PASSED!

!testRun: #TerniLapilliGameTest #test21OCantMoveTwiceInARow stamp: 'IO 11/1/2020 17:35:42'!
PASSED!

!testRun: #TerniLapilliGameTest #test22XCantMoveOnTheirFirstTurn stamp: 'IO 11/1/2020 17:35:42'!
PASSED!

!testRun: #TerniLapilliGameTest #test23XCantMoveOnTheirSecondTurn stamp: 'IO 11/1/2020 17:35:42'!
PASSED!

!testRun: #TerniLapilliGameTest #test24XCantMoveOnTheirThirdTurn stamp: 'IO 11/1/2020 17:35:42'!
PASSED!

!testRun: #TerniLapilliGameTest #test25OCantMoveOnTheirFirstTurn stamp: 'IO 11/1/2020 17:35:42'!
PASSED!

!testRun: #TerniLapilliGameTest #test26OCantMoveOnTheirSecondTurn stamp: 'IO 11/1/2020 17:35:42'!
PASSED!

!testRun: #TerniLapilliGameTest #test27OCantMoveOnTheirThirdTurn stamp: 'IO 11/1/2020 17:35:42'!
PASSED!

!testRun: #TerniLapilliGameTest #test28XCantPutAfterTheirThirdTurn stamp: 'IO 11/1/2020 17:35:42'!
PASSED!

!testRun: #TerniLapilliGameTest #test29OCantPutAfterTheirThirdTurn stamp: 'IO 11/1/2020 17:35:42'!
PASSED!

!testRun: #TerniLapilliGameTest #test30OCantPutAfterXWon stamp: 'IO 11/1/2020 17:35:42'!
PASSED!

!testRun: #TerniLapilliGameTest #test31OCantMoveAfterXWon stamp: 'IO 11/1/2020 17:35:42'!
PASSED!

!testRun: #TerniLapilliGameTest #test32XCantMoveAfterOWon stamp: 'IO 11/1/2020 17:35:42'!
PASSED!

!testRun: #TerniLapilliGameTest #test33XCantPutAfterOWon stamp: 'IO 11/1/2020 17:35:42'!
PASSED!

!testRun: #TerniLapilliGameTest #test34XCantPutInAnOccupiedSpace stamp: 'IO 11/1/2020 17:35:42'!
PASSED!

!testRun: #TerniLapilliGameTest #test35OCantPutInAnOccupiedSpace stamp: 'IO 11/1/2020 17:35:42'!
PASSED!

!testRun: #TerniLapilliGameTest #test36XCantMoveToAnOccupiedSpace stamp: 'IO 11/1/2020 17:35:42'!
PASSED!

!testRun: #TerniLapilliGameTest #test37OCantMoveToAnOccupiedSpace stamp: 'IO 11/1/2020 17:35:42'!
PASSED!

!testRun: #TerniLapilliGameTest #test38XCantPutOutsideTheBoardUnderXAxis stamp: 'IO 11/1/2020 17:35:42'!
PASSED!

!testRun: #TerniLapilliGameTest #test39XCantPutOutsideTheBoardAboveXAxis stamp: 'IO 11/1/2020 17:35:42'!
PASSED!

!testRun: #TerniLapilliGameTest #test40XCantPutOutsideTheBoardUnderNorAboveTheYAxis stamp: 'IO 11/1/2020 17:35:42'!
PASSED!

!testRun: #TerniLapilliGameTest #test41OCantPutOutsideTheBoard stamp: 'IO 11/1/2020 17:35:42'!
PASSED!

!testRun: #TerniLapilliGameTest #test42XCantMoveToOutsideTheBoard stamp: 'IO 11/1/2020 17:35:42'!
PASSED!

!testRun: #TerniLapilliGameTest #test43OCantMoveToOutsideTheBoard stamp: 'IO 11/1/2020 17:35:42'!
PASSED!

!testRun: #TerniLapilliGameTest #test44XCantMoveTokensThatDontBelongToThem stamp: 'IO 11/1/2020 17:35:42'!
PASSED!

!testRun: #TerniLapilliGameTest #test45OCantMoveTokensThatDontBelongToThem stamp: 'IO 11/1/2020 17:35:42'!
PASSED!

!testRun: #TerniLapilliGameTest #test46XCantMoveaTokenOutsideItsNeighbors stamp: 'IO 11/1/2020 17:35:42'!
PASSED!

!testRun: #TerniLapilliGameTest #test47OCantMoveATokenOutsideItsNeighbors stamp: 'IO 11/1/2020 17:35:42'!
PASSED!
!XIsPlaying methodsFor: 'initializtion' stamp: 'IO 11/1/2020 17:37:11' prior: 50881347 overrides: 16896425!
initialize

	"intialize the first state"

	xTokens := TerniLapilliPlayerTokens new.
	oTokens := TerniLapilliPlayerTokens new.
! !

----SNAPSHOT----(1 November 2020 17:38:21) CuisUniversity-4384.image priorSource: 17504885!
!OIsPlaying methodsFor: 'moves' stamp: 'IO 11/1/2020 17:51:42' prior: 50882625 overrides: 50882053!
oPutsOn: aPosition

	"see superimplementor"

! !
!TerniLapilliGameState methodsFor: 'moves' stamp: 'IO 11/1/2020 17:52:02' prior: 50882053!
oPutsOn: aPosition

	"returns the next state when O puts a token"

	oTokens add: aPosition.
	^self passTurn.

! !

!testRun: #TerniLapilliGameTest #test02puttingDoesNotAffectOtherPositions stamp: 'IO 11/1/2020 17:52:06'!
PASSED!

!testRun: #TerniLapilliGameTest #test01XCanPutAToken stamp: 'IO 11/1/2020 17:52:06'!
PASSED!

!testRun: #TerniLapilliGameTest #test02puttingDoesNotAffectOtherPositions stamp: 'IO 11/1/2020 17:52:06'!
PASSED!

!testRun: #TerniLapilliGameTest #test03XCanPutInOtherPositions stamp: 'IO 11/1/2020 17:52:06'!
PASSED!

!testRun: #TerniLapilliGameTest #test04OCanPut stamp: 'IO 11/1/2020 17:52:06'!
PASSED!

!testRun: #TerniLapilliGameTest #test05XCanMove stamp: 'IO 11/1/2020 17:52:06'!
PASSED!

!testRun: #TerniLapilliGameTest #test06OCanMove stamp: 'IO 11/1/2020 17:52:06'!
PASSED!

!testRun: #TerniLapilliGameTest #test07XWinsWithTheFirstColumn stamp: 'IO 11/1/2020 17:52:06'!
PASSED!

!testRun: #TerniLapilliGameTest #test08XHasntWonYet stamp: 'IO 11/1/2020 17:52:06'!
PASSED!

!testRun: #TerniLapilliGameTest #test09XWinsWithTheSecondColumn stamp: 'IO 11/1/2020 17:52:06'!
PASSED!

!testRun: #TerniLapilliGameTest #test10XWinsWithTheThirdColumn stamp: 'IO 11/1/2020 17:52:06'!
PASSED!

!testRun: #TerniLapilliGameTest #test11XWinsWithTheFirstRow stamp: 'IO 11/1/2020 17:52:06'!
PASSED!

!testRun: #TerniLapilliGameTest #test12XWinsWithTheSecondRow stamp: 'IO 11/1/2020 17:52:06'!
PASSED!

!testRun: #TerniLapilliGameTest #test13XWinsWithTheThirdRow stamp: 'IO 11/1/2020 17:52:06'!
PASSED!

!testRun: #TerniLapilliGameTest #test14XWinsWithTheCrescentDiagonal stamp: 'IO 11/1/2020 17:52:06'!
PASSED!

!testRun: #TerniLapilliGameTest #test15XWinsWithTheDescendantDiagonal stamp: 'IO 11/1/2020 17:52:06'!
PASSED!

!testRun: #TerniLapilliGameTest #test16OWnis stamp: 'IO 11/1/2020 17:52:06'!
PASSED!

!testRun: #TerniLapilliGameTest #test17OCantStartPutting stamp: 'IO 11/1/2020 17:52:06'!
PASSED!

!testRun: #TerniLapilliGameTest #test18XCantPutTwiceInARow stamp: 'IO 11/1/2020 17:52:06'!
PASSED!

!testRun: #TerniLapilliGameTest #test19XCantMoveTwiceInARow stamp: 'IO 11/1/2020 17:52:06'!
PASSED!

!testRun: #TerniLapilliGameTest #test20OCantPutTwiceInARow stamp: 'IO 11/1/2020 17:52:06'!
PASSED!

!testRun: #TerniLapilliGameTest #test21OCantMoveTwiceInARow stamp: 'IO 11/1/2020 17:52:06'!
PASSED!

!testRun: #TerniLapilliGameTest #test22XCantMoveOnTheirFirstTurn stamp: 'IO 11/1/2020 17:52:06'!
PASSED!

!testRun: #TerniLapilliGameTest #test23XCantMoveOnTheirSecondTurn stamp: 'IO 11/1/2020 17:52:06'!
PASSED!

!testRun: #TerniLapilliGameTest #test24XCantMoveOnTheirThirdTurn stamp: 'IO 11/1/2020 17:52:06'!
PASSED!

!testRun: #TerniLapilliGameTest #test25OCantMoveOnTheirFirstTurn stamp: 'IO 11/1/2020 17:52:06'!
PASSED!

!testRun: #TerniLapilliGameTest #test26OCantMoveOnTheirSecondTurn stamp: 'IO 11/1/2020 17:52:06'!
PASSED!

!testRun: #TerniLapilliGameTest #test27OCantMoveOnTheirThirdTurn stamp: 'IO 11/1/2020 17:52:06'!
PASSED!

!testRun: #TerniLapilliGameTest #test28XCantPutAfterTheirThirdTurn stamp: 'IO 11/1/2020 17:52:06'!
PASSED!

!testRun: #TerniLapilliGameTest #test29OCantPutAfterTheirThirdTurn stamp: 'IO 11/1/2020 17:52:06'!
PASSED!

!testRun: #TerniLapilliGameTest #test30OCantPutAfterXWon stamp: 'IO 11/1/2020 17:52:06'!
PASSED!

!testRun: #TerniLapilliGameTest #test31OCantMoveAfterXWon stamp: 'IO 11/1/2020 17:52:06'!
PASSED!

!testRun: #TerniLapilliGameTest #test32XCantMoveAfterOWon stamp: 'IO 11/1/2020 17:52:06'!
PASSED!

!testRun: #TerniLapilliGameTest #test33XCantPutAfterOWon stamp: 'IO 11/1/2020 17:52:06'!
PASSED!

!testRun: #TerniLapilliGameTest #test34XCantPutInAnOccupiedSpace stamp: 'IO 11/1/2020 17:52:06'!
PASSED!

!testRun: #TerniLapilliGameTest #test35OCantPutInAnOccupiedSpace stamp: 'IO 11/1/2020 17:52:06'!
PASSED!

!testRun: #TerniLapilliGameTest #test36XCantMoveToAnOccupiedSpace stamp: 'IO 11/1/2020 17:52:06'!
PASSED!

!testRun: #TerniLapilliGameTest #test37OCantMoveToAnOccupiedSpace stamp: 'IO 11/1/2020 17:52:06'!
PASSED!

!testRun: #TerniLapilliGameTest #test38XCantPutOutsideTheBoardUnderXAxis stamp: 'IO 11/1/2020 17:52:06'!
PASSED!

!testRun: #TerniLapilliGameTest #test39XCantPutOutsideTheBoardAboveXAxis stamp: 'IO 11/1/2020 17:52:06'!
PASSED!

!testRun: #TerniLapilliGameTest #test40XCantPutOutsideTheBoardUnderNorAboveTheYAxis stamp: 'IO 11/1/2020 17:52:06'!
PASSED!

!testRun: #TerniLapilliGameTest #test41OCantPutOutsideTheBoard stamp: 'IO 11/1/2020 17:52:06'!
PASSED!

!testRun: #TerniLapilliGameTest #test42XCantMoveToOutsideTheBoard stamp: 'IO 11/1/2020 17:52:06'!
PASSED!

!testRun: #TerniLapilliGameTest #test43OCantMoveToOutsideTheBoard stamp: 'IO 11/1/2020 17:52:06'!
PASSED!

!testRun: #TerniLapilliGameTest #test44XCantMoveTokensThatDontBelongToThem stamp: 'IO 11/1/2020 17:52:06'!
PASSED!

!testRun: #TerniLapilliGameTest #test45OCantMoveTokensThatDontBelongToThem stamp: 'IO 11/1/2020 17:52:06'!
PASSED!

!testRun: #TerniLapilliGameTest #test46XCantMoveaTokenOutsideItsNeighbors stamp: 'IO 11/1/2020 17:52:06'!
PASSED!

!testRun: #TerniLapilliGameTest #test47OCantMoveATokenOutsideItsNeighbors stamp: 'IO 11/1/2020 17:52:06'!
PASSED!

!methodRemoval: OIsPlacing #oPutsOn: stamp: 'IO 11/1/2020 17:52:35'!
oPutsOn: aPosition

	"see superimplementor"

	oTokens add: aPosition.
	^self passTurn.

!

!testRun: #TerniLapilliGameTest #test02puttingDoesNotAffectOtherPositions stamp: 'IO 11/1/2020 17:52:39'!
PASSED!

!testRun: #TerniLapilliGameTest #test01XCanPutAToken stamp: 'IO 11/1/2020 17:52:39'!
PASSED!

!testRun: #TerniLapilliGameTest #test02puttingDoesNotAffectOtherPositions stamp: 'IO 11/1/2020 17:52:39'!
PASSED!

!testRun: #TerniLapilliGameTest #test03XCanPutInOtherPositions stamp: 'IO 11/1/2020 17:52:39'!
PASSED!

!testRun: #TerniLapilliGameTest #test04OCanPut stamp: 'IO 11/1/2020 17:52:39'!
FAILURE!

!testRun: #TerniLapilliGameTest #test05XCanMove stamp: 'IO 11/1/2020 17:52:39'!
ERROR!

!testRun: #TerniLapilliGameTest #test06OCanMove stamp: 'IO 11/1/2020 17:52:39'!
ERROR!

!testRun: #TerniLapilliGameTest #test07XWinsWithTheFirstColumn stamp: 'IO 11/1/2020 17:52:39'!
ERROR!

!testRun: #TerniLapilliGameTest #test08XHasntWonYet stamp: 'IO 11/1/2020 17:52:39'!
ERROR!

!testRun: #TerniLapilliGameTest #test09XWinsWithTheSecondColumn stamp: 'IO 11/1/2020 17:52:39'!
ERROR!

!testRun: #TerniLapilliGameTest #test10XWinsWithTheThirdColumn stamp: 'IO 11/1/2020 17:52:39'!
ERROR!

!testRun: #TerniLapilliGameTest #test11XWinsWithTheFirstRow stamp: 'IO 11/1/2020 17:52:39'!
ERROR!

!testRun: #TerniLapilliGameTest #test12XWinsWithTheSecondRow stamp: 'IO 11/1/2020 17:52:39'!
ERROR!

!testRun: #TerniLapilliGameTest #test13XWinsWithTheThirdRow stamp: 'IO 11/1/2020 17:52:39'!
ERROR!

!testRun: #TerniLapilliGameTest #test14XWinsWithTheCrescentDiagonal stamp: 'IO 11/1/2020 17:52:39'!
ERROR!

!testRun: #TerniLapilliGameTest #test15XWinsWithTheDescendantDiagonal stamp: 'IO 11/1/2020 17:52:39'!
ERROR!

!testRun: #TerniLapilliGameTest #test16OWnis stamp: 'IO 11/1/2020 17:52:39'!
ERROR!

!testRun: #TerniLapilliGameTest #test17OCantStartPutting stamp: 'IO 11/1/2020 17:52:39'!
PASSED!

!testRun: #TerniLapilliGameTest #test18XCantPutTwiceInARow stamp: 'IO 11/1/2020 17:52:39'!
PASSED!

!testRun: #TerniLapilliGameTest #test19XCantMoveTwiceInARow stamp: 'IO 11/1/2020 17:52:39'!
ERROR!

!testRun: #TerniLapilliGameTest #test20OCantPutTwiceInARow stamp: 'IO 11/1/2020 17:52:39'!
FAILURE!

!testRun: #TerniLapilliGameTest #test21OCantMoveTwiceInARow stamp: 'IO 11/1/2020 17:52:39'!
ERROR!

!testRun: #TerniLapilliGameTest #test22XCantMoveOnTheirFirstTurn stamp: 'IO 11/1/2020 17:52:39'!
PASSED!

!testRun: #TerniLapilliGameTest #test23XCantMoveOnTheirSecondTurn stamp: 'IO 11/1/2020 17:52:39'!
FAILURE!

!testRun: #TerniLapilliGameTest #test24XCantMoveOnTheirThirdTurn stamp: 'IO 11/1/2020 17:52:39'!
ERROR!

!testRun: #TerniLapilliGameTest #test25OCantMoveOnTheirFirstTurn stamp: 'IO 11/1/2020 17:52:39'!
PASSED!

!testRun: #TerniLapilliGameTest #test26OCantMoveOnTheirSecondTurn stamp: 'IO 11/1/2020 17:52:39'!
ERROR!

!testRun: #TerniLapilliGameTest #test27OCantMoveOnTheirThirdTurn stamp: 'IO 11/1/2020 17:52:39'!
ERROR!

!testRun: #TerniLapilliGameTest #test28XCantPutAfterTheirThirdTurn stamp: 'IO 11/1/2020 17:52:39'!
ERROR!

!testRun: #TerniLapilliGameTest #test29OCantPutAfterTheirThirdTurn stamp: 'IO 11/1/2020 17:52:39'!
ERROR!

!testRun: #TerniLapilliGameTest #test30OCantPutAfterXWon stamp: 'IO 11/1/2020 17:52:39'!
ERROR!

!testRun: #TerniLapilliGameTest #test31OCantMoveAfterXWon stamp: 'IO 11/1/2020 17:52:39'!
ERROR!

!testRun: #TerniLapilliGameTest #test32XCantMoveAfterOWon stamp: 'IO 11/1/2020 17:52:39'!
ERROR!

!testRun: #TerniLapilliGameTest #test33XCantPutAfterOWon stamp: 'IO 11/1/2020 17:52:39'!
ERROR!

!testRun: #TerniLapilliGameTest #test34XCantPutInAnOccupiedSpace stamp: 'IO 11/1/2020 17:52:39'!
FAILURE!

!testRun: #TerniLapilliGameTest #test35OCantPutInAnOccupiedSpace stamp: 'IO 11/1/2020 17:52:39'!
ERROR!

!testRun: #TerniLapilliGameTest #test36XCantMoveToAnOccupiedSpace stamp: 'IO 11/1/2020 17:52:39'!
ERROR!

!testRun: #TerniLapilliGameTest #test37OCantMoveToAnOccupiedSpace stamp: 'IO 11/1/2020 17:52:39'!
ERROR!

!testRun: #TerniLapilliGameTest #test38XCantPutOutsideTheBoardUnderXAxis stamp: 'IO 11/1/2020 17:52:39'!
PASSED!

!testRun: #TerniLapilliGameTest #test39XCantPutOutsideTheBoardAboveXAxis stamp: 'IO 11/1/2020 17:52:39'!
PASSED!

!testRun: #TerniLapilliGameTest #test40XCantPutOutsideTheBoardUnderNorAboveTheYAxis stamp: 'IO 11/1/2020 17:52:39'!
PASSED!

!testRun: #TerniLapilliGameTest #test41OCantPutOutsideTheBoard stamp: 'IO 11/1/2020 17:52:39'!
FAILURE!

!testRun: #TerniLapilliGameTest #test42XCantMoveToOutsideTheBoard stamp: 'IO 11/1/2020 17:52:39'!
ERROR!

!testRun: #TerniLapilliGameTest #test43OCantMoveToOutsideTheBoard stamp: 'IO 11/1/2020 17:52:39'!
ERROR!

!testRun: #TerniLapilliGameTest #test44XCantMoveTokensThatDontBelongToThem stamp: 'IO 11/1/2020 17:52:39'!
ERROR!

!testRun: #TerniLapilliGameTest #test45OCantMoveTokensThatDontBelongToThem stamp: 'IO 11/1/2020 17:52:39'!
ERROR!

!testRun: #TerniLapilliGameTest #test46XCantMoveaTokenOutsideItsNeighbors stamp: 'IO 11/1/2020 17:52:39'!
ERROR!

!testRun: #TerniLapilliGameTest #test47OCantMoveATokenOutsideItsNeighbors stamp: 'IO 11/1/2020 17:52:39'!
ERROR!

!methodRemoval: OIsPlaying #oPutsOn: stamp: 'IO 11/1/2020 17:53:07'!
oPutsOn: aPosition

	"see superimplementor"

!

!testRun: #TerniLapilliGameTest #test01XCanPutAToken stamp: 'IO 11/1/2020 17:53:31'!
PASSED!

!testRun: #TerniLapilliGameTest #test02puttingDoesNotAffectOtherPositions stamp: 'IO 11/1/2020 17:53:31'!
PASSED!

!testRun: #TerniLapilliGameTest #test03XCanPutInOtherPositions stamp: 'IO 11/1/2020 17:53:31'!
PASSED!

!testRun: #TerniLapilliGameTest #test04OCanPut stamp: 'IO 11/1/2020 17:53:31'!
PASSED!

!testRun: #TerniLapilliGameTest #test05XCanMove stamp: 'IO 11/1/2020 17:53:31'!
PASSED!

!testRun: #TerniLapilliGameTest #test06OCanMove stamp: 'IO 11/1/2020 17:53:31'!
PASSED!

!testRun: #TerniLapilliGameTest #test07XWinsWithTheFirstColumn stamp: 'IO 11/1/2020 17:53:31'!
PASSED!

!testRun: #TerniLapilliGameTest #test08XHasntWonYet stamp: 'IO 11/1/2020 17:53:31'!
PASSED!

!testRun: #TerniLapilliGameTest #test09XWinsWithTheSecondColumn stamp: 'IO 11/1/2020 17:53:31'!
PASSED!

!testRun: #TerniLapilliGameTest #test10XWinsWithTheThirdColumn stamp: 'IO 11/1/2020 17:53:31'!
PASSED!

!testRun: #TerniLapilliGameTest #test11XWinsWithTheFirstRow stamp: 'IO 11/1/2020 17:53:31'!
PASSED!

!testRun: #TerniLapilliGameTest #test12XWinsWithTheSecondRow stamp: 'IO 11/1/2020 17:53:31'!
PASSED!

!testRun: #TerniLapilliGameTest #test13XWinsWithTheThirdRow stamp: 'IO 11/1/2020 17:53:31'!
PASSED!

!testRun: #TerniLapilliGameTest #test14XWinsWithTheCrescentDiagonal stamp: 'IO 11/1/2020 17:53:31'!
PASSED!

!testRun: #TerniLapilliGameTest #test15XWinsWithTheDescendantDiagonal stamp: 'IO 11/1/2020 17:53:31'!
PASSED!

!testRun: #TerniLapilliGameTest #test16OWnis stamp: 'IO 11/1/2020 17:53:31'!
PASSED!

!testRun: #TerniLapilliGameTest #test17OCantStartPutting stamp: 'IO 11/1/2020 17:53:31'!
PASSED!

!testRun: #TerniLapilliGameTest #test18XCantPutTwiceInARow stamp: 'IO 11/1/2020 17:53:31'!
PASSED!

!testRun: #TerniLapilliGameTest #test19XCantMoveTwiceInARow stamp: 'IO 11/1/2020 17:53:31'!
PASSED!

!testRun: #TerniLapilliGameTest #test20OCantPutTwiceInARow stamp: 'IO 11/1/2020 17:53:31'!
PASSED!

!testRun: #TerniLapilliGameTest #test21OCantMoveTwiceInARow stamp: 'IO 11/1/2020 17:53:31'!
PASSED!

!testRun: #TerniLapilliGameTest #test22XCantMoveOnTheirFirstTurn stamp: 'IO 11/1/2020 17:53:31'!
PASSED!

!testRun: #TerniLapilliGameTest #test23XCantMoveOnTheirSecondTurn stamp: 'IO 11/1/2020 17:53:31'!
PASSED!

!testRun: #TerniLapilliGameTest #test24XCantMoveOnTheirThirdTurn stamp: 'IO 11/1/2020 17:53:31'!
PASSED!

!testRun: #TerniLapilliGameTest #test25OCantMoveOnTheirFirstTurn stamp: 'IO 11/1/2020 17:53:31'!
PASSED!

!testRun: #TerniLapilliGameTest #test26OCantMoveOnTheirSecondTurn stamp: 'IO 11/1/2020 17:53:31'!
PASSED!

!testRun: #TerniLapilliGameTest #test27OCantMoveOnTheirThirdTurn stamp: 'IO 11/1/2020 17:53:31'!
PASSED!

!testRun: #TerniLapilliGameTest #test28XCantPutAfterTheirThirdTurn stamp: 'IO 11/1/2020 17:53:31'!
PASSED!

!testRun: #TerniLapilliGameTest #test29OCantPutAfterTheirThirdTurn stamp: 'IO 11/1/2020 17:53:31'!
PASSED!

!testRun: #TerniLapilliGameTest #test30OCantPutAfterXWon stamp: 'IO 11/1/2020 17:53:31'!
PASSED!

!testRun: #TerniLapilliGameTest #test31OCantMoveAfterXWon stamp: 'IO 11/1/2020 17:53:31'!
PASSED!

!testRun: #TerniLapilliGameTest #test32XCantMoveAfterOWon stamp: 'IO 11/1/2020 17:53:31'!
PASSED!

!testRun: #TerniLapilliGameTest #test33XCantPutAfterOWon stamp: 'IO 11/1/2020 17:53:31'!
PASSED!

!testRun: #TerniLapilliGameTest #test34XCantPutInAnOccupiedSpace stamp: 'IO 11/1/2020 17:53:31'!
PASSED!

!testRun: #TerniLapilliGameTest #test35OCantPutInAnOccupiedSpace stamp: 'IO 11/1/2020 17:53:31'!
PASSED!

!testRun: #TerniLapilliGameTest #test36XCantMoveToAnOccupiedSpace stamp: 'IO 11/1/2020 17:53:31'!
PASSED!

!testRun: #TerniLapilliGameTest #test37OCantMoveToAnOccupiedSpace stamp: 'IO 11/1/2020 17:53:31'!
PASSED!

!testRun: #TerniLapilliGameTest #test38XCantPutOutsideTheBoardUnderXAxis stamp: 'IO 11/1/2020 17:53:31'!
PASSED!

!testRun: #TerniLapilliGameTest #test39XCantPutOutsideTheBoardAboveXAxis stamp: 'IO 11/1/2020 17:53:31'!
PASSED!

!testRun: #TerniLapilliGameTest #test40XCantPutOutsideTheBoardUnderNorAboveTheYAxis stamp: 'IO 11/1/2020 17:53:31'!
PASSED!

!testRun: #TerniLapilliGameTest #test41OCantPutOutsideTheBoard stamp: 'IO 11/1/2020 17:53:31'!
PASSED!

!testRun: #TerniLapilliGameTest #test42XCantMoveToOutsideTheBoard stamp: 'IO 11/1/2020 17:53:31'!
PASSED!

!testRun: #TerniLapilliGameTest #test43OCantMoveToOutsideTheBoard stamp: 'IO 11/1/2020 17:53:31'!
PASSED!

!testRun: #TerniLapilliGameTest #test44XCantMoveTokensThatDontBelongToThem stamp: 'IO 11/1/2020 17:53:31'!
PASSED!

!testRun: #TerniLapilliGameTest #test45OCantMoveTokensThatDontBelongToThem stamp: 'IO 11/1/2020 17:53:31'!
PASSED!

!testRun: #TerniLapilliGameTest #test46XCantMoveaTokenOutsideItsNeighbors stamp: 'IO 11/1/2020 17:53:31'!
PASSED!

!testRun: #TerniLapilliGameTest #test47OCantMoveATokenOutsideItsNeighbors stamp: 'IO 11/1/2020 17:53:31'!
PASSED!

!testRun: #TerniLapilliGameTest #test01XCanPutAToken stamp: 'IO 11/1/2020 17:53:35'!
PASSED!

!testRun: #TerniLapilliGameTest #test02puttingDoesNotAffectOtherPositions stamp: 'IO 11/1/2020 17:53:35'!
PASSED!

!testRun: #TerniLapilliGameTest #test03XCanPutInOtherPositions stamp: 'IO 11/1/2020 17:53:35'!
PASSED!

!testRun: #TerniLapilliGameTest #test04OCanPut stamp: 'IO 11/1/2020 17:53:35'!
PASSED!

!testRun: #TerniLapilliGameTest #test05XCanMove stamp: 'IO 11/1/2020 17:53:35'!
PASSED!

!testRun: #TerniLapilliGameTest #test06OCanMove stamp: 'IO 11/1/2020 17:53:35'!
PASSED!

!testRun: #TerniLapilliGameTest #test07XWinsWithTheFirstColumn stamp: 'IO 11/1/2020 17:53:35'!
PASSED!

!testRun: #TerniLapilliGameTest #test08XHasntWonYet stamp: 'IO 11/1/2020 17:53:35'!
PASSED!

!testRun: #TerniLapilliGameTest #test09XWinsWithTheSecondColumn stamp: 'IO 11/1/2020 17:53:35'!
PASSED!

!testRun: #TerniLapilliGameTest #test10XWinsWithTheThirdColumn stamp: 'IO 11/1/2020 17:53:35'!
PASSED!

!testRun: #TerniLapilliGameTest #test11XWinsWithTheFirstRow stamp: 'IO 11/1/2020 17:53:35'!
PASSED!

!testRun: #TerniLapilliGameTest #test12XWinsWithTheSecondRow stamp: 'IO 11/1/2020 17:53:35'!
PASSED!

!testRun: #TerniLapilliGameTest #test13XWinsWithTheThirdRow stamp: 'IO 11/1/2020 17:53:35'!
PASSED!

!testRun: #TerniLapilliGameTest #test14XWinsWithTheCrescentDiagonal stamp: 'IO 11/1/2020 17:53:35'!
PASSED!

!testRun: #TerniLapilliGameTest #test15XWinsWithTheDescendantDiagonal stamp: 'IO 11/1/2020 17:53:35'!
PASSED!

!testRun: #TerniLapilliGameTest #test16OWnis stamp: 'IO 11/1/2020 17:53:35'!
PASSED!

!testRun: #TerniLapilliGameTest #test17OCantStartPutting stamp: 'IO 11/1/2020 17:53:35'!
PASSED!

!testRun: #TerniLapilliGameTest #test18XCantPutTwiceInARow stamp: 'IO 11/1/2020 17:53:35'!
PASSED!

!testRun: #TerniLapilliGameTest #test19XCantMoveTwiceInARow stamp: 'IO 11/1/2020 17:53:35'!
PASSED!

!testRun: #TerniLapilliGameTest #test20OCantPutTwiceInARow stamp: 'IO 11/1/2020 17:53:35'!
PASSED!

!testRun: #TerniLapilliGameTest #test21OCantMoveTwiceInARow stamp: 'IO 11/1/2020 17:53:35'!
PASSED!

!testRun: #TerniLapilliGameTest #test22XCantMoveOnTheirFirstTurn stamp: 'IO 11/1/2020 17:53:35'!
PASSED!

!testRun: #TerniLapilliGameTest #test23XCantMoveOnTheirSecondTurn stamp: 'IO 11/1/2020 17:53:35'!
PASSED!

!testRun: #TerniLapilliGameTest #test24XCantMoveOnTheirThirdTurn stamp: 'IO 11/1/2020 17:53:35'!
PASSED!

!testRun: #TerniLapilliGameTest #test25OCantMoveOnTheirFirstTurn stamp: 'IO 11/1/2020 17:53:35'!
PASSED!

!testRun: #TerniLapilliGameTest #test26OCantMoveOnTheirSecondTurn stamp: 'IO 11/1/2020 17:53:35'!
PASSED!

!testRun: #TerniLapilliGameTest #test27OCantMoveOnTheirThirdTurn stamp: 'IO 11/1/2020 17:53:35'!
PASSED!

!testRun: #TerniLapilliGameTest #test28XCantPutAfterTheirThirdTurn stamp: 'IO 11/1/2020 17:53:35'!
PASSED!

!testRun: #TerniLapilliGameTest #test29OCantPutAfterTheirThirdTurn stamp: 'IO 11/1/2020 17:53:35'!
PASSED!

!testRun: #TerniLapilliGameTest #test30OCantPutAfterXWon stamp: 'IO 11/1/2020 17:53:35'!
PASSED!

!testRun: #TerniLapilliGameTest #test31OCantMoveAfterXWon stamp: 'IO 11/1/2020 17:53:35'!
PASSED!

!testRun: #TerniLapilliGameTest #test32XCantMoveAfterOWon stamp: 'IO 11/1/2020 17:53:35'!
PASSED!

!testRun: #TerniLapilliGameTest #test33XCantPutAfterOWon stamp: 'IO 11/1/2020 17:53:35'!
PASSED!

!testRun: #TerniLapilliGameTest #test34XCantPutInAnOccupiedSpace stamp: 'IO 11/1/2020 17:53:35'!
PASSED!

!testRun: #TerniLapilliGameTest #test35OCantPutInAnOccupiedSpace stamp: 'IO 11/1/2020 17:53:35'!
PASSED!

!testRun: #TerniLapilliGameTest #test36XCantMoveToAnOccupiedSpace stamp: 'IO 11/1/2020 17:53:35'!
PASSED!

!testRun: #TerniLapilliGameTest #test37OCantMoveToAnOccupiedSpace stamp: 'IO 11/1/2020 17:53:35'!
PASSED!

!testRun: #TerniLapilliGameTest #test38XCantPutOutsideTheBoardUnderXAxis stamp: 'IO 11/1/2020 17:53:35'!
PASSED!

!testRun: #TerniLapilliGameTest #test39XCantPutOutsideTheBoardAboveXAxis stamp: 'IO 11/1/2020 17:53:35'!
PASSED!

!testRun: #TerniLapilliGameTest #test40XCantPutOutsideTheBoardUnderNorAboveTheYAxis stamp: 'IO 11/1/2020 17:53:35'!
PASSED!

!testRun: #TerniLapilliGameTest #test41OCantPutOutsideTheBoard stamp: 'IO 11/1/2020 17:53:35'!
PASSED!

!testRun: #TerniLapilliGameTest #test42XCantMoveToOutsideTheBoard stamp: 'IO 11/1/2020 17:53:35'!
PASSED!

!testRun: #TerniLapilliGameTest #test43OCantMoveToOutsideTheBoard stamp: 'IO 11/1/2020 17:53:35'!
PASSED!

!testRun: #TerniLapilliGameTest #test44XCantMoveTokensThatDontBelongToThem stamp: 'IO 11/1/2020 17:53:35'!
PASSED!

!testRun: #TerniLapilliGameTest #test45OCantMoveTokensThatDontBelongToThem stamp: 'IO 11/1/2020 17:53:35'!
PASSED!

!testRun: #TerniLapilliGameTest #test46XCantMoveaTokenOutsideItsNeighbors stamp: 'IO 11/1/2020 17:53:35'!
PASSED!

!testRun: #TerniLapilliGameTest #test47OCantMoveATokenOutsideItsNeighbors stamp: 'IO 11/1/2020 17:53:35'!
PASSED!

!methodRemoval: OIsPlaying #oMoves:to: stamp: 'IO 11/1/2020 17:54:04'!
oMoves: sourcePosition to: destinationPosition

	"see superimplementor"

	^self subclassResponsibility.
!
!TerniLapilliGameState methodsFor: 'moves' stamp: 'IO 11/1/2020 17:54:22' prior: 50882046!
oMoves: sourcePosition to: destinationPosition

	"returns the next state when O moves a token"

	oTokens move: sourcePosition to: destinationPosition.
	^self passTurn.

! !
!TerniLapilliGameState methodsFor: 'moves' stamp: 'IO 11/1/2020 17:54:23' prior: 50886275!
oMoves: sourcePosition to: destinationPosition

	"returns the next state when O moves a token"

	oTokens move: sourcePosition to: destinationPosition.
	^self passTurn.
! !

!methodRemoval: OIsMoving #oMoves:to: stamp: 'IO 11/1/2020 17:54:47'!
oMoves: sourcePosition to: destinationPosition

	"see superimplementor"

	oTokens move: sourcePosition to: destinationPosition.
	^self passTurn.
!

!testRun: #TerniLapilliGameTest #test01XCanPutAToken stamp: 'IO 11/1/2020 17:55:03'!
PASSED!

!testRun: #TerniLapilliGameTest #test02puttingDoesNotAffectOtherPositions stamp: 'IO 11/1/2020 17:55:03'!
PASSED!

!testRun: #TerniLapilliGameTest #test03XCanPutInOtherPositions stamp: 'IO 11/1/2020 17:55:03'!
PASSED!

!testRun: #TerniLapilliGameTest #test04OCanPut stamp: 'IO 11/1/2020 17:55:03'!
PASSED!

!testRun: #TerniLapilliGameTest #test05XCanMove stamp: 'IO 11/1/2020 17:55:03'!
PASSED!

!testRun: #TerniLapilliGameTest #test06OCanMove stamp: 'IO 11/1/2020 17:55:03'!
PASSED!

!testRun: #TerniLapilliGameTest #test07XWinsWithTheFirstColumn stamp: 'IO 11/1/2020 17:55:03'!
PASSED!

!testRun: #TerniLapilliGameTest #test08XHasntWonYet stamp: 'IO 11/1/2020 17:55:03'!
PASSED!

!testRun: #TerniLapilliGameTest #test09XWinsWithTheSecondColumn stamp: 'IO 11/1/2020 17:55:03'!
PASSED!

!testRun: #TerniLapilliGameTest #test10XWinsWithTheThirdColumn stamp: 'IO 11/1/2020 17:55:04'!
PASSED!

!testRun: #TerniLapilliGameTest #test11XWinsWithTheFirstRow stamp: 'IO 11/1/2020 17:55:04'!
PASSED!

!testRun: #TerniLapilliGameTest #test12XWinsWithTheSecondRow stamp: 'IO 11/1/2020 17:55:04'!
PASSED!

!testRun: #TerniLapilliGameTest #test13XWinsWithTheThirdRow stamp: 'IO 11/1/2020 17:55:04'!
PASSED!

!testRun: #TerniLapilliGameTest #test14XWinsWithTheCrescentDiagonal stamp: 'IO 11/1/2020 17:55:04'!
PASSED!

!testRun: #TerniLapilliGameTest #test15XWinsWithTheDescendantDiagonal stamp: 'IO 11/1/2020 17:55:04'!
PASSED!

!testRun: #TerniLapilliGameTest #test16OWnis stamp: 'IO 11/1/2020 17:55:04'!
PASSED!

!testRun: #TerniLapilliGameTest #test17OCantStartPutting stamp: 'IO 11/1/2020 17:55:04'!
PASSED!

!testRun: #TerniLapilliGameTest #test18XCantPutTwiceInARow stamp: 'IO 11/1/2020 17:55:04'!
PASSED!

!testRun: #TerniLapilliGameTest #test19XCantMoveTwiceInARow stamp: 'IO 11/1/2020 17:55:04'!
PASSED!

!testRun: #TerniLapilliGameTest #test20OCantPutTwiceInARow stamp: 'IO 11/1/2020 17:55:04'!
PASSED!

!testRun: #TerniLapilliGameTest #test21OCantMoveTwiceInARow stamp: 'IO 11/1/2020 17:55:04'!
PASSED!

!testRun: #TerniLapilliGameTest #test22XCantMoveOnTheirFirstTurn stamp: 'IO 11/1/2020 17:55:04'!
PASSED!

!testRun: #TerniLapilliGameTest #test23XCantMoveOnTheirSecondTurn stamp: 'IO 11/1/2020 17:55:04'!
PASSED!

!testRun: #TerniLapilliGameTest #test24XCantMoveOnTheirThirdTurn stamp: 'IO 11/1/2020 17:55:04'!
PASSED!

!testRun: #TerniLapilliGameTest #test25OCantMoveOnTheirFirstTurn stamp: 'IO 11/1/2020 17:55:04'!
PASSED!

!testRun: #TerniLapilliGameTest #test26OCantMoveOnTheirSecondTurn stamp: 'IO 11/1/2020 17:55:04'!
PASSED!

!testRun: #TerniLapilliGameTest #test27OCantMoveOnTheirThirdTurn stamp: 'IO 11/1/2020 17:55:04'!
PASSED!

!testRun: #TerniLapilliGameTest #test28XCantPutAfterTheirThirdTurn stamp: 'IO 11/1/2020 17:55:04'!
PASSED!

!testRun: #TerniLapilliGameTest #test29OCantPutAfterTheirThirdTurn stamp: 'IO 11/1/2020 17:55:04'!
PASSED!

!testRun: #TerniLapilliGameTest #test30OCantPutAfterXWon stamp: 'IO 11/1/2020 17:55:04'!
PASSED!

!testRun: #TerniLapilliGameTest #test31OCantMoveAfterXWon stamp: 'IO 11/1/2020 17:55:04'!
PASSED!

!testRun: #TerniLapilliGameTest #test32XCantMoveAfterOWon stamp: 'IO 11/1/2020 17:55:04'!
PASSED!

!testRun: #TerniLapilliGameTest #test33XCantPutAfterOWon stamp: 'IO 11/1/2020 17:55:04'!
PASSED!

!testRun: #TerniLapilliGameTest #test34XCantPutInAnOccupiedSpace stamp: 'IO 11/1/2020 17:55:04'!
PASSED!

!testRun: #TerniLapilliGameTest #test35OCantPutInAnOccupiedSpace stamp: 'IO 11/1/2020 17:55:04'!
PASSED!

!testRun: #TerniLapilliGameTest #test36XCantMoveToAnOccupiedSpace stamp: 'IO 11/1/2020 17:55:04'!
PASSED!

!testRun: #TerniLapilliGameTest #test37OCantMoveToAnOccupiedSpace stamp: 'IO 11/1/2020 17:55:04'!
PASSED!

!testRun: #TerniLapilliGameTest #test38XCantPutOutsideTheBoardUnderXAxis stamp: 'IO 11/1/2020 17:55:04'!
PASSED!

!testRun: #TerniLapilliGameTest #test39XCantPutOutsideTheBoardAboveXAxis stamp: 'IO 11/1/2020 17:55:04'!
PASSED!

!testRun: #TerniLapilliGameTest #test40XCantPutOutsideTheBoardUnderNorAboveTheYAxis stamp: 'IO 11/1/2020 17:55:04'!
PASSED!

!testRun: #TerniLapilliGameTest #test41OCantPutOutsideTheBoard stamp: 'IO 11/1/2020 17:55:04'!
PASSED!

!testRun: #TerniLapilliGameTest #test42XCantMoveToOutsideTheBoard stamp: 'IO 11/1/2020 17:55:04'!
PASSED!

!testRun: #TerniLapilliGameTest #test43OCantMoveToOutsideTheBoard stamp: 'IO 11/1/2020 17:55:04'!
PASSED!

!testRun: #TerniLapilliGameTest #test44XCantMoveTokensThatDontBelongToThem stamp: 'IO 11/1/2020 17:55:04'!
PASSED!

!testRun: #TerniLapilliGameTest #test45OCantMoveTokensThatDontBelongToThem stamp: 'IO 11/1/2020 17:55:04'!
PASSED!

!testRun: #TerniLapilliGameTest #test46XCantMoveaTokenOutsideItsNeighbors stamp: 'IO 11/1/2020 17:55:04'!
PASSED!

!testRun: #TerniLapilliGameTest #test47OCantMoveATokenOutsideItsNeighbors stamp: 'IO 11/1/2020 17:55:04'!
PASSED!
!TerniLapilliGameState methodsFor: 'moves' stamp: 'IO 11/1/2020 17:55:25' prior: 50882246!
xPutsOn: aPosition

	"returns the next state when X puts a token"

	xTokens add: aPosition.
	^self passTurn.
! !

!methodRemoval: XIsPlaying #xPutsOn: stamp: 'IO 11/1/2020 17:55:31'!
xPutsOn: aPosition

	"see superimplementor"

	^self subclassResponsibility.
!

!methodRemoval: XIsPlacing #xPutsOn: stamp: 'IO 11/1/2020 17:55:38'!
xPutsOn: aPosition

	"see superimplementor"

	xTokens add: aPosition.
	^self passTurn.

!

!methodRemoval: XIsMoving #xMoves:to: stamp: 'IO 11/1/2020 17:55:52'!
xMoves: sourcePosition to: destinationPosition

	"see superimplementor"

	xTokens move: sourcePosition to: destinationPosition.
	^self passTurn.
!

!methodRemoval: XIsPlaying #xMoves:to: stamp: 'IO 11/1/2020 17:55:56'!
xMoves: sourcePosition to: destinationPosition

	"see superimplementor"

	^self subclassResponsibility.
!
!TerniLapilliGameState methodsFor: 'moves' stamp: 'IO 11/1/2020 17:56:06' prior: 50882239!
xMoves: sourcePosition to: destinationPosition

	"returns the next state when X moves a token"

	xTokens move: sourcePosition to: destinationPosition.
	^self passTurn.
! !
!TerniLapilliGameState methodsFor: 'initializtion' stamp: 'IO 11/1/2020 17:57:25' overrides: 16896425!
initialize

	"intialize the first state"

	xTokens := TerniLapilliPlayerTokens new.
	oTokens := TerniLapilliPlayerTokens new.
! !

!methodRemoval: XIsPlaying #initialize stamp: 'IO 11/1/2020 17:57:44'!
initialize

	"intialize the first state"

	xTokens := TerniLapilliPlayerTokens new.
	oTokens := TerniLapilliPlayerTokens new.
!

!testRun: #TerniLapilliGameTest #test01XCanPutAToken stamp: 'IO 11/1/2020 17:57:46'!
PASSED!

!testRun: #TerniLapilliGameTest #test02puttingDoesNotAffectOtherPositions stamp: 'IO 11/1/2020 17:57:46'!
PASSED!

!testRun: #TerniLapilliGameTest #test03XCanPutInOtherPositions stamp: 'IO 11/1/2020 17:57:46'!
PASSED!

!testRun: #TerniLapilliGameTest #test04OCanPut stamp: 'IO 11/1/2020 17:57:46'!
PASSED!

!testRun: #TerniLapilliGameTest #test05XCanMove stamp: 'IO 11/1/2020 17:57:46'!
PASSED!

!testRun: #TerniLapilliGameTest #test06OCanMove stamp: 'IO 11/1/2020 17:57:46'!
PASSED!

!testRun: #TerniLapilliGameTest #test07XWinsWithTheFirstColumn stamp: 'IO 11/1/2020 17:57:46'!
PASSED!

!testRun: #TerniLapilliGameTest #test08XHasntWonYet stamp: 'IO 11/1/2020 17:57:46'!
PASSED!

!testRun: #TerniLapilliGameTest #test09XWinsWithTheSecondColumn stamp: 'IO 11/1/2020 17:57:46'!
PASSED!

!testRun: #TerniLapilliGameTest #test10XWinsWithTheThirdColumn stamp: 'IO 11/1/2020 17:57:46'!
PASSED!

!testRun: #TerniLapilliGameTest #test11XWinsWithTheFirstRow stamp: 'IO 11/1/2020 17:57:46'!
PASSED!

!testRun: #TerniLapilliGameTest #test12XWinsWithTheSecondRow stamp: 'IO 11/1/2020 17:57:46'!
PASSED!

!testRun: #TerniLapilliGameTest #test13XWinsWithTheThirdRow stamp: 'IO 11/1/2020 17:57:46'!
PASSED!

!testRun: #TerniLapilliGameTest #test14XWinsWithTheCrescentDiagonal stamp: 'IO 11/1/2020 17:57:46'!
PASSED!

!testRun: #TerniLapilliGameTest #test15XWinsWithTheDescendantDiagonal stamp: 'IO 11/1/2020 17:57:46'!
PASSED!

!testRun: #TerniLapilliGameTest #test16OWnis stamp: 'IO 11/1/2020 17:57:46'!
PASSED!

!testRun: #TerniLapilliGameTest #test17OCantStartPutting stamp: 'IO 11/1/2020 17:57:46'!
PASSED!

!testRun: #TerniLapilliGameTest #test18XCantPutTwiceInARow stamp: 'IO 11/1/2020 17:57:46'!
PASSED!

!testRun: #TerniLapilliGameTest #test19XCantMoveTwiceInARow stamp: 'IO 11/1/2020 17:57:46'!
PASSED!

!testRun: #TerniLapilliGameTest #test20OCantPutTwiceInARow stamp: 'IO 11/1/2020 17:57:46'!
PASSED!

!testRun: #TerniLapilliGameTest #test21OCantMoveTwiceInARow stamp: 'IO 11/1/2020 17:57:46'!
PASSED!

!testRun: #TerniLapilliGameTest #test22XCantMoveOnTheirFirstTurn stamp: 'IO 11/1/2020 17:57:46'!
PASSED!

!testRun: #TerniLapilliGameTest #test23XCantMoveOnTheirSecondTurn stamp: 'IO 11/1/2020 17:57:46'!
PASSED!

!testRun: #TerniLapilliGameTest #test24XCantMoveOnTheirThirdTurn stamp: 'IO 11/1/2020 17:57:46'!
PASSED!

!testRun: #TerniLapilliGameTest #test25OCantMoveOnTheirFirstTurn stamp: 'IO 11/1/2020 17:57:46'!
PASSED!

!testRun: #TerniLapilliGameTest #test26OCantMoveOnTheirSecondTurn stamp: 'IO 11/1/2020 17:57:46'!
PASSED!

!testRun: #TerniLapilliGameTest #test27OCantMoveOnTheirThirdTurn stamp: 'IO 11/1/2020 17:57:46'!
PASSED!

!testRun: #TerniLapilliGameTest #test28XCantPutAfterTheirThirdTurn stamp: 'IO 11/1/2020 17:57:46'!
PASSED!

!testRun: #TerniLapilliGameTest #test29OCantPutAfterTheirThirdTurn stamp: 'IO 11/1/2020 17:57:46'!
PASSED!

!testRun: #TerniLapilliGameTest #test30OCantPutAfterXWon stamp: 'IO 11/1/2020 17:57:46'!
PASSED!

!testRun: #TerniLapilliGameTest #test31OCantMoveAfterXWon stamp: 'IO 11/1/2020 17:57:46'!
PASSED!

!testRun: #TerniLapilliGameTest #test32XCantMoveAfterOWon stamp: 'IO 11/1/2020 17:57:46'!
PASSED!

!testRun: #TerniLapilliGameTest #test33XCantPutAfterOWon stamp: 'IO 11/1/2020 17:57:46'!
PASSED!

!testRun: #TerniLapilliGameTest #test34XCantPutInAnOccupiedSpace stamp: 'IO 11/1/2020 17:57:46'!
PASSED!

!testRun: #TerniLapilliGameTest #test35OCantPutInAnOccupiedSpace stamp: 'IO 11/1/2020 17:57:46'!
PASSED!

!testRun: #TerniLapilliGameTest #test36XCantMoveToAnOccupiedSpace stamp: 'IO 11/1/2020 17:57:46'!
PASSED!

!testRun: #TerniLapilliGameTest #test37OCantMoveToAnOccupiedSpace stamp: 'IO 11/1/2020 17:57:46'!
PASSED!

!testRun: #TerniLapilliGameTest #test38XCantPutOutsideTheBoardUnderXAxis stamp: 'IO 11/1/2020 17:57:46'!
PASSED!

!testRun: #TerniLapilliGameTest #test39XCantPutOutsideTheBoardAboveXAxis stamp: 'IO 11/1/2020 17:57:46'!
PASSED!

!testRun: #TerniLapilliGameTest #test40XCantPutOutsideTheBoardUnderNorAboveTheYAxis stamp: 'IO 11/1/2020 17:57:46'!
PASSED!

!testRun: #TerniLapilliGameTest #test41OCantPutOutsideTheBoard stamp: 'IO 11/1/2020 17:57:46'!
PASSED!

!testRun: #TerniLapilliGameTest #test42XCantMoveToOutsideTheBoard stamp: 'IO 11/1/2020 17:57:46'!
PASSED!

!testRun: #TerniLapilliGameTest #test43OCantMoveToOutsideTheBoard stamp: 'IO 11/1/2020 17:57:46'!
PASSED!

!testRun: #TerniLapilliGameTest #test44XCantMoveTokensThatDontBelongToThem stamp: 'IO 11/1/2020 17:57:46'!
PASSED!

!testRun: #TerniLapilliGameTest #test45OCantMoveTokensThatDontBelongToThem stamp: 'IO 11/1/2020 17:57:46'!
PASSED!

!testRun: #TerniLapilliGameTest #test46XCantMoveaTokenOutsideItsNeighbors stamp: 'IO 11/1/2020 17:57:46'!
PASSED!

!testRun: #TerniLapilliGameTest #test47OCantMoveATokenOutsideItsNeighbors stamp: 'IO 11/1/2020 17:57:46'!
PASSED!
!XIsPlaying class methodsFor: 'instance creation' stamp: 'IO 11/1/2020 17:57:56' prior: 50885384 overrides: 50883606!
new

	"create the first state of the game. it is X turn"

	^self basicNew.
! !
!TerniLapilliGameState class methodsFor: 'as yet unclassified' stamp: 'IO 11/1/2020 17:58:05' prior: 50883606 overrides: 16783533!
new

	"create the initial state of the game"

	^XIsPlacing new initialize.
! !

!testRun: #TerniLapilliGameTest #test01XCanPutAToken stamp: 'IO 11/1/2020 17:58:09'!
PASSED!

!testRun: #TerniLapilliGameTest #test02puttingDoesNotAffectOtherPositions stamp: 'IO 11/1/2020 17:58:09'!
PASSED!

!testRun: #TerniLapilliGameTest #test03XCanPutInOtherPositions stamp: 'IO 11/1/2020 17:58:09'!
PASSED!

!testRun: #TerniLapilliGameTest #test04OCanPut stamp: 'IO 11/1/2020 17:58:09'!
PASSED!

!testRun: #TerniLapilliGameTest #test05XCanMove stamp: 'IO 11/1/2020 17:58:09'!
PASSED!

!testRun: #TerniLapilliGameTest #test06OCanMove stamp: 'IO 11/1/2020 17:58:09'!
PASSED!

!testRun: #TerniLapilliGameTest #test07XWinsWithTheFirstColumn stamp: 'IO 11/1/2020 17:58:09'!
PASSED!

!testRun: #TerniLapilliGameTest #test08XHasntWonYet stamp: 'IO 11/1/2020 17:58:09'!
PASSED!

!testRun: #TerniLapilliGameTest #test09XWinsWithTheSecondColumn stamp: 'IO 11/1/2020 17:58:09'!
PASSED!

!testRun: #TerniLapilliGameTest #test10XWinsWithTheThirdColumn stamp: 'IO 11/1/2020 17:58:09'!
PASSED!

!testRun: #TerniLapilliGameTest #test11XWinsWithTheFirstRow stamp: 'IO 11/1/2020 17:58:09'!
PASSED!

!testRun: #TerniLapilliGameTest #test12XWinsWithTheSecondRow stamp: 'IO 11/1/2020 17:58:09'!
PASSED!

!testRun: #TerniLapilliGameTest #test13XWinsWithTheThirdRow stamp: 'IO 11/1/2020 17:58:09'!
PASSED!

!testRun: #TerniLapilliGameTest #test14XWinsWithTheCrescentDiagonal stamp: 'IO 11/1/2020 17:58:09'!
PASSED!

!testRun: #TerniLapilliGameTest #test15XWinsWithTheDescendantDiagonal stamp: 'IO 11/1/2020 17:58:09'!
PASSED!

!testRun: #TerniLapilliGameTest #test16OWnis stamp: 'IO 11/1/2020 17:58:09'!
PASSED!

!testRun: #TerniLapilliGameTest #test17OCantStartPutting stamp: 'IO 11/1/2020 17:58:09'!
PASSED!

!testRun: #TerniLapilliGameTest #test18XCantPutTwiceInARow stamp: 'IO 11/1/2020 17:58:09'!
PASSED!

!testRun: #TerniLapilliGameTest #test19XCantMoveTwiceInARow stamp: 'IO 11/1/2020 17:58:09'!
PASSED!

!testRun: #TerniLapilliGameTest #test20OCantPutTwiceInARow stamp: 'IO 11/1/2020 17:58:09'!
PASSED!

!testRun: #TerniLapilliGameTest #test21OCantMoveTwiceInARow stamp: 'IO 11/1/2020 17:58:09'!
PASSED!

!testRun: #TerniLapilliGameTest #test22XCantMoveOnTheirFirstTurn stamp: 'IO 11/1/2020 17:58:09'!
PASSED!

!testRun: #TerniLapilliGameTest #test23XCantMoveOnTheirSecondTurn stamp: 'IO 11/1/2020 17:58:09'!
PASSED!

!testRun: #TerniLapilliGameTest #test24XCantMoveOnTheirThirdTurn stamp: 'IO 11/1/2020 17:58:09'!
PASSED!

!testRun: #TerniLapilliGameTest #test25OCantMoveOnTheirFirstTurn stamp: 'IO 11/1/2020 17:58:09'!
PASSED!

!testRun: #TerniLapilliGameTest #test26OCantMoveOnTheirSecondTurn stamp: 'IO 11/1/2020 17:58:09'!
PASSED!

!testRun: #TerniLapilliGameTest #test27OCantMoveOnTheirThirdTurn stamp: 'IO 11/1/2020 17:58:09'!
PASSED!

!testRun: #TerniLapilliGameTest #test28XCantPutAfterTheirThirdTurn stamp: 'IO 11/1/2020 17:58:09'!
PASSED!

!testRun: #TerniLapilliGameTest #test29OCantPutAfterTheirThirdTurn stamp: 'IO 11/1/2020 17:58:09'!
PASSED!

!testRun: #TerniLapilliGameTest #test30OCantPutAfterXWon stamp: 'IO 11/1/2020 17:58:09'!
PASSED!

!testRun: #TerniLapilliGameTest #test31OCantMoveAfterXWon stamp: 'IO 11/1/2020 17:58:09'!
PASSED!

!testRun: #TerniLapilliGameTest #test32XCantMoveAfterOWon stamp: 'IO 11/1/2020 17:58:09'!
PASSED!

!testRun: #TerniLapilliGameTest #test33XCantPutAfterOWon stamp: 'IO 11/1/2020 17:58:09'!
PASSED!

!testRun: #TerniLapilliGameTest #test34XCantPutInAnOccupiedSpace stamp: 'IO 11/1/2020 17:58:09'!
PASSED!

!testRun: #TerniLapilliGameTest #test35OCantPutInAnOccupiedSpace stamp: 'IO 11/1/2020 17:58:09'!
PASSED!

!testRun: #TerniLapilliGameTest #test36XCantMoveToAnOccupiedSpace stamp: 'IO 11/1/2020 17:58:09'!
PASSED!

!testRun: #TerniLapilliGameTest #test37OCantMoveToAnOccupiedSpace stamp: 'IO 11/1/2020 17:58:09'!
PASSED!

!testRun: #TerniLapilliGameTest #test38XCantPutOutsideTheBoardUnderXAxis stamp: 'IO 11/1/2020 17:58:09'!
PASSED!

!testRun: #TerniLapilliGameTest #test39XCantPutOutsideTheBoardAboveXAxis stamp: 'IO 11/1/2020 17:58:09'!
PASSED!

!testRun: #TerniLapilliGameTest #test40XCantPutOutsideTheBoardUnderNorAboveTheYAxis stamp: 'IO 11/1/2020 17:58:09'!
PASSED!

!testRun: #TerniLapilliGameTest #test41OCantPutOutsideTheBoard stamp: 'IO 11/1/2020 17:58:09'!
PASSED!

!testRun: #TerniLapilliGameTest #test42XCantMoveToOutsideTheBoard stamp: 'IO 11/1/2020 17:58:09'!
PASSED!

!testRun: #TerniLapilliGameTest #test43OCantMoveToOutsideTheBoard stamp: 'IO 11/1/2020 17:58:09'!
PASSED!

!testRun: #TerniLapilliGameTest #test44XCantMoveTokensThatDontBelongToThem stamp: 'IO 11/1/2020 17:58:09'!
PASSED!

!testRun: #TerniLapilliGameTest #test45OCantMoveTokensThatDontBelongToThem stamp: 'IO 11/1/2020 17:58:09'!
PASSED!

!testRun: #TerniLapilliGameTest #test46XCantMoveaTokenOutsideItsNeighbors stamp: 'IO 11/1/2020 17:58:09'!
PASSED!

!testRun: #TerniLapilliGameTest #test47OCantMoveATokenOutsideItsNeighbors stamp: 'IO 11/1/2020 17:58:09'!
PASSED!
!TerniLapilliGameState class methodsFor: 'as yet unclassified' stamp: 'IO 11/1/2020 17:58:55' prior: 50883590!
withXTokens: nextXTokens oTokens: nextOTokens.

	"create the next state"

	^self subclassResponsibility.

! !

!testRun: #TerniLapilliGameTest #test01XCanPutAToken stamp: 'IO 11/1/2020 17:58:58'!
PASSED!

!testRun: #TerniLapilliGameTest #test02puttingDoesNotAffectOtherPositions stamp: 'IO 11/1/2020 17:58:58'!
PASSED!

!testRun: #TerniLapilliGameTest #test03XCanPutInOtherPositions stamp: 'IO 11/1/2020 17:58:58'!
PASSED!

!testRun: #TerniLapilliGameTest #test04OCanPut stamp: 'IO 11/1/2020 17:58:58'!
PASSED!

!testRun: #TerniLapilliGameTest #test05XCanMove stamp: 'IO 11/1/2020 17:58:58'!
PASSED!

!testRun: #TerniLapilliGameTest #test06OCanMove stamp: 'IO 11/1/2020 17:58:58'!
PASSED!

!testRun: #TerniLapilliGameTest #test07XWinsWithTheFirstColumn stamp: 'IO 11/1/2020 17:58:58'!
ERROR!

!testRun: #TerniLapilliGameTest #test08XHasntWonYet stamp: 'IO 11/1/2020 17:58:58'!
PASSED!

!testRun: #TerniLapilliGameTest #test09XWinsWithTheSecondColumn stamp: 'IO 11/1/2020 17:58:58'!
ERROR!

!testRun: #TerniLapilliGameTest #test10XWinsWithTheThirdColumn stamp: 'IO 11/1/2020 17:58:58'!
ERROR!

!testRun: #TerniLapilliGameTest #test11XWinsWithTheFirstRow stamp: 'IO 11/1/2020 17:58:58'!
ERROR!

!testRun: #TerniLapilliGameTest #test12XWinsWithTheSecondRow stamp: 'IO 11/1/2020 17:58:58'!
ERROR!

!testRun: #TerniLapilliGameTest #test13XWinsWithTheThirdRow stamp: 'IO 11/1/2020 17:58:58'!
ERROR!

!testRun: #TerniLapilliGameTest #test14XWinsWithTheCrescentDiagonal stamp: 'IO 11/1/2020 17:58:58'!
ERROR!

!testRun: #TerniLapilliGameTest #test15XWinsWithTheDescendantDiagonal stamp: 'IO 11/1/2020 17:58:58'!
ERROR!

!testRun: #TerniLapilliGameTest #test16OWnis stamp: 'IO 11/1/2020 17:58:58'!
ERROR!

!testRun: #TerniLapilliGameTest #test17OCantStartPutting stamp: 'IO 11/1/2020 17:58:58'!
PASSED!

!testRun: #TerniLapilliGameTest #test18XCantPutTwiceInARow stamp: 'IO 11/1/2020 17:58:58'!
PASSED!

!testRun: #TerniLapilliGameTest #test19XCantMoveTwiceInARow stamp: 'IO 11/1/2020 17:58:58'!
PASSED!

!testRun: #TerniLapilliGameTest #test20OCantPutTwiceInARow stamp: 'IO 11/1/2020 17:58:58'!
PASSED!

!testRun: #TerniLapilliGameTest #test21OCantMoveTwiceInARow stamp: 'IO 11/1/2020 17:58:58'!
PASSED!

!testRun: #TerniLapilliGameTest #test22XCantMoveOnTheirFirstTurn stamp: 'IO 11/1/2020 17:58:58'!
PASSED!

!testRun: #TerniLapilliGameTest #test23XCantMoveOnTheirSecondTurn stamp: 'IO 11/1/2020 17:58:58'!
PASSED!

!testRun: #TerniLapilliGameTest #test24XCantMoveOnTheirThirdTurn stamp: 'IO 11/1/2020 17:58:58'!
PASSED!

!testRun: #TerniLapilliGameTest #test25OCantMoveOnTheirFirstTurn stamp: 'IO 11/1/2020 17:58:58'!
PASSED!

!testRun: #TerniLapilliGameTest #test26OCantMoveOnTheirSecondTurn stamp: 'IO 11/1/2020 17:58:58'!
PASSED!

!testRun: #TerniLapilliGameTest #test27OCantMoveOnTheirThirdTurn stamp: 'IO 11/1/2020 17:58:58'!
PASSED!

!testRun: #TerniLapilliGameTest #test28XCantPutAfterTheirThirdTurn stamp: 'IO 11/1/2020 17:58:58'!
PASSED!

!testRun: #TerniLapilliGameTest #test29OCantPutAfterTheirThirdTurn stamp: 'IO 11/1/2020 17:58:58'!
PASSED!

!testRun: #TerniLapilliGameTest #test30OCantPutAfterXWon stamp: 'IO 11/1/2020 17:58:58'!
ERROR!

!testRun: #TerniLapilliGameTest #test31OCantMoveAfterXWon stamp: 'IO 11/1/2020 17:58:58'!
ERROR!

!testRun: #TerniLapilliGameTest #test32XCantMoveAfterOWon stamp: 'IO 11/1/2020 17:58:58'!
ERROR!

!testRun: #TerniLapilliGameTest #test33XCantPutAfterOWon stamp: 'IO 11/1/2020 17:58:58'!
ERROR!

!testRun: #TerniLapilliGameTest #test34XCantPutInAnOccupiedSpace stamp: 'IO 11/1/2020 17:58:58'!
PASSED!

!testRun: #TerniLapilliGameTest #test35OCantPutInAnOccupiedSpace stamp: 'IO 11/1/2020 17:58:58'!
PASSED!

!testRun: #TerniLapilliGameTest #test36XCantMoveToAnOccupiedSpace stamp: 'IO 11/1/2020 17:58:58'!
PASSED!

!testRun: #TerniLapilliGameTest #test37OCantMoveToAnOccupiedSpace stamp: 'IO 11/1/2020 17:58:58'!
PASSED!

!testRun: #TerniLapilliGameTest #test38XCantPutOutsideTheBoardUnderXAxis stamp: 'IO 11/1/2020 17:58:58'!
PASSED!

!testRun: #TerniLapilliGameTest #test39XCantPutOutsideTheBoardAboveXAxis stamp: 'IO 11/1/2020 17:58:58'!
PASSED!

!testRun: #TerniLapilliGameTest #test40XCantPutOutsideTheBoardUnderNorAboveTheYAxis stamp: 'IO 11/1/2020 17:58:58'!
PASSED!

!testRun: #TerniLapilliGameTest #test41OCantPutOutsideTheBoard stamp: 'IO 11/1/2020 17:58:58'!
PASSED!

!testRun: #TerniLapilliGameTest #test42XCantMoveToOutsideTheBoard stamp: 'IO 11/1/2020 17:58:58'!
PASSED!

!testRun: #TerniLapilliGameTest #test43OCantMoveToOutsideTheBoard stamp: 'IO 11/1/2020 17:58:58'!
PASSED!

!testRun: #TerniLapilliGameTest #test44XCantMoveTokensThatDontBelongToThem stamp: 'IO 11/1/2020 17:58:58'!
PASSED!

!testRun: #TerniLapilliGameTest #test45OCantMoveTokensThatDontBelongToThem stamp: 'IO 11/1/2020 17:58:58'!
PASSED!

!testRun: #TerniLapilliGameTest #test46XCantMoveaTokenOutsideItsNeighbors stamp: 'IO 11/1/2020 17:58:58'!
PASSED!

!testRun: #TerniLapilliGameTest #test47OCantMoveATokenOutsideItsNeighbors stamp: 'IO 11/1/2020 17:58:58'!
PASSED!
!TerniLapilliGameState class methodsFor: 'as yet unclassified' stamp: 'IO 11/1/2020 17:59:07' prior: 50886826!
withXTokens: nextXTokens oTokens: nextOTokens.

	"create the next state"

	^self basicNew intializeWithXTokens: nextXTokens oTokens: nextOTokens.
! !

!testRun: #TerniLapilliGameTest #test01XCanPutAToken stamp: 'IO 11/1/2020 17:59:19'!
PASSED!

!testRun: #TerniLapilliGameTest #test02puttingDoesNotAffectOtherPositions stamp: 'IO 11/1/2020 17:59:19'!
PASSED!

!testRun: #TerniLapilliGameTest #test03XCanPutInOtherPositions stamp: 'IO 11/1/2020 17:59:19'!
PASSED!

!testRun: #TerniLapilliGameTest #test04OCanPut stamp: 'IO 11/1/2020 17:59:19'!
PASSED!

!testRun: #TerniLapilliGameTest #test05XCanMove stamp: 'IO 11/1/2020 17:59:19'!
PASSED!

!testRun: #TerniLapilliGameTest #test06OCanMove stamp: 'IO 11/1/2020 17:59:19'!
PASSED!

!testRun: #TerniLapilliGameTest #test07XWinsWithTheFirstColumn stamp: 'IO 11/1/2020 17:59:19'!
PASSED!

!testRun: #TerniLapilliGameTest #test08XHasntWonYet stamp: 'IO 11/1/2020 17:59:19'!
PASSED!

!testRun: #TerniLapilliGameTest #test09XWinsWithTheSecondColumn stamp: 'IO 11/1/2020 17:59:19'!
PASSED!

!testRun: #TerniLapilliGameTest #test10XWinsWithTheThirdColumn stamp: 'IO 11/1/2020 17:59:19'!
PASSED!

!testRun: #TerniLapilliGameTest #test11XWinsWithTheFirstRow stamp: 'IO 11/1/2020 17:59:19'!
PASSED!

!testRun: #TerniLapilliGameTest #test12XWinsWithTheSecondRow stamp: 'IO 11/1/2020 17:59:19'!
PASSED!

!testRun: #TerniLapilliGameTest #test13XWinsWithTheThirdRow stamp: 'IO 11/1/2020 17:59:19'!
PASSED!

!testRun: #TerniLapilliGameTest #test14XWinsWithTheCrescentDiagonal stamp: 'IO 11/1/2020 17:59:19'!
PASSED!

!testRun: #TerniLapilliGameTest #test15XWinsWithTheDescendantDiagonal stamp: 'IO 11/1/2020 17:59:19'!
PASSED!

!testRun: #TerniLapilliGameTest #test16OWnis stamp: 'IO 11/1/2020 17:59:19'!
PASSED!

!testRun: #TerniLapilliGameTest #test17OCantStartPutting stamp: 'IO 11/1/2020 17:59:19'!
PASSED!

!testRun: #TerniLapilliGameTest #test18XCantPutTwiceInARow stamp: 'IO 11/1/2020 17:59:19'!
PASSED!

!testRun: #TerniLapilliGameTest #test19XCantMoveTwiceInARow stamp: 'IO 11/1/2020 17:59:19'!
PASSED!

!testRun: #TerniLapilliGameTest #test20OCantPutTwiceInARow stamp: 'IO 11/1/2020 17:59:19'!
PASSED!

!testRun: #TerniLapilliGameTest #test21OCantMoveTwiceInARow stamp: 'IO 11/1/2020 17:59:19'!
PASSED!

!testRun: #TerniLapilliGameTest #test22XCantMoveOnTheirFirstTurn stamp: 'IO 11/1/2020 17:59:19'!
PASSED!

!testRun: #TerniLapilliGameTest #test23XCantMoveOnTheirSecondTurn stamp: 'IO 11/1/2020 17:59:19'!
PASSED!

!testRun: #TerniLapilliGameTest #test24XCantMoveOnTheirThirdTurn stamp: 'IO 11/1/2020 17:59:19'!
PASSED!

!testRun: #TerniLapilliGameTest #test25OCantMoveOnTheirFirstTurn stamp: 'IO 11/1/2020 17:59:19'!
PASSED!

!testRun: #TerniLapilliGameTest #test26OCantMoveOnTheirSecondTurn stamp: 'IO 11/1/2020 17:59:19'!
PASSED!

!testRun: #TerniLapilliGameTest #test27OCantMoveOnTheirThirdTurn stamp: 'IO 11/1/2020 17:59:19'!
PASSED!

!testRun: #TerniLapilliGameTest #test28XCantPutAfterTheirThirdTurn stamp: 'IO 11/1/2020 17:59:19'!
PASSED!

!testRun: #TerniLapilliGameTest #test29OCantPutAfterTheirThirdTurn stamp: 'IO 11/1/2020 17:59:19'!
PASSED!

!testRun: #TerniLapilliGameTest #test30OCantPutAfterXWon stamp: 'IO 11/1/2020 17:59:19'!
PASSED!

!testRun: #TerniLapilliGameTest #test31OCantMoveAfterXWon stamp: 'IO 11/1/2020 17:59:19'!
PASSED!

!testRun: #TerniLapilliGameTest #test32XCantMoveAfterOWon stamp: 'IO 11/1/2020 17:59:19'!
PASSED!

!testRun: #TerniLapilliGameTest #test33XCantPutAfterOWon stamp: 'IO 11/1/2020 17:59:19'!
PASSED!

!testRun: #TerniLapilliGameTest #test34XCantPutInAnOccupiedSpace stamp: 'IO 11/1/2020 17:59:19'!
PASSED!

!testRun: #TerniLapilliGameTest #test35OCantPutInAnOccupiedSpace stamp: 'IO 11/1/2020 17:59:19'!
PASSED!

!testRun: #TerniLapilliGameTest #test36XCantMoveToAnOccupiedSpace stamp: 'IO 11/1/2020 17:59:19'!
PASSED!

!testRun: #TerniLapilliGameTest #test37OCantMoveToAnOccupiedSpace stamp: 'IO 11/1/2020 17:59:19'!
PASSED!

!testRun: #TerniLapilliGameTest #test38XCantPutOutsideTheBoardUnderXAxis stamp: 'IO 11/1/2020 17:59:19'!
PASSED!

!testRun: #TerniLapilliGameTest #test39XCantPutOutsideTheBoardAboveXAxis stamp: 'IO 11/1/2020 17:59:19'!
PASSED!

!testRun: #TerniLapilliGameTest #test40XCantPutOutsideTheBoardUnderNorAboveTheYAxis stamp: 'IO 11/1/2020 17:59:19'!
PASSED!

!testRun: #TerniLapilliGameTest #test41OCantPutOutsideTheBoard stamp: 'IO 11/1/2020 17:59:19'!
PASSED!

!testRun: #TerniLapilliGameTest #test42XCantMoveToOutsideTheBoard stamp: 'IO 11/1/2020 17:59:20'!
PASSED!

!testRun: #TerniLapilliGameTest #test43OCantMoveToOutsideTheBoard stamp: 'IO 11/1/2020 17:59:20'!
PASSED!

!testRun: #TerniLapilliGameTest #test44XCantMoveTokensThatDontBelongToThem stamp: 'IO 11/1/2020 17:59:20'!
PASSED!

!testRun: #TerniLapilliGameTest #test45OCantMoveTokensThatDontBelongToThem stamp: 'IO 11/1/2020 17:59:20'!
PASSED!

!testRun: #TerniLapilliGameTest #test46XCantMoveaTokenOutsideItsNeighbors stamp: 'IO 11/1/2020 17:59:20'!
PASSED!

!testRun: #TerniLapilliGameTest #test47OCantMoveATokenOutsideItsNeighbors stamp: 'IO 11/1/2020 17:59:20'!
PASSED!
!GameIsOver class methodsFor: 'no messages' stamp: 'IO 11/1/2020 18:00:43' overrides: 50886986!
withXTokens: nextXTokens oTokens: nextOTokens.

	"create the next state"

	^self basicNew intializeWithXTokens: nextXTokens oTokens: nextOTokens.
! !
!TerniLapilliGameState class methodsFor: 'instance creation' stamp: 'IO 11/1/2020 18:03:02' prior: 50886986!
withXTokens: nextXTokens oTokens: nextOTokens.

	"create the next state"

	^self subclassResponsibility.
! !
!GameIsOver class methodsFor: 'instance creation' stamp: 'IO 11/1/2020 18:03:16' prior: 50887147 overrides: 50887156!
withXTokens: nextXTokens oTokens: nextOTokens.

	"see superimplementor"

	^self basicNew intializeWithXTokens: nextXTokens oTokens: nextOTokens.
! !

!testRun: #TerniLapilliGameTest #test01XCanPutAToken stamp: 'IO 11/1/2020 18:03:20'!
PASSED!

!testRun: #TerniLapilliGameTest #test02puttingDoesNotAffectOtherPositions stamp: 'IO 11/1/2020 18:03:20'!
PASSED!

!testRun: #TerniLapilliGameTest #test03XCanPutInOtherPositions stamp: 'IO 11/1/2020 18:03:20'!
PASSED!

!testRun: #TerniLapilliGameTest #test04OCanPut stamp: 'IO 11/1/2020 18:03:20'!
PASSED!

!testRun: #TerniLapilliGameTest #test05XCanMove stamp: 'IO 11/1/2020 18:03:20'!
PASSED!

!testRun: #TerniLapilliGameTest #test06OCanMove stamp: 'IO 11/1/2020 18:03:20'!
PASSED!

!testRun: #TerniLapilliGameTest #test07XWinsWithTheFirstColumn stamp: 'IO 11/1/2020 18:03:20'!
PASSED!

!testRun: #TerniLapilliGameTest #test08XHasntWonYet stamp: 'IO 11/1/2020 18:03:20'!
PASSED!

!testRun: #TerniLapilliGameTest #test09XWinsWithTheSecondColumn stamp: 'IO 11/1/2020 18:03:20'!
PASSED!

!testRun: #TerniLapilliGameTest #test10XWinsWithTheThirdColumn stamp: 'IO 11/1/2020 18:03:20'!
PASSED!

!testRun: #TerniLapilliGameTest #test11XWinsWithTheFirstRow stamp: 'IO 11/1/2020 18:03:20'!
PASSED!

!testRun: #TerniLapilliGameTest #test12XWinsWithTheSecondRow stamp: 'IO 11/1/2020 18:03:20'!
PASSED!

!testRun: #TerniLapilliGameTest #test13XWinsWithTheThirdRow stamp: 'IO 11/1/2020 18:03:20'!
PASSED!

!testRun: #TerniLapilliGameTest #test14XWinsWithTheCrescentDiagonal stamp: 'IO 11/1/2020 18:03:20'!
PASSED!

!testRun: #TerniLapilliGameTest #test15XWinsWithTheDescendantDiagonal stamp: 'IO 11/1/2020 18:03:20'!
PASSED!

!testRun: #TerniLapilliGameTest #test16OWnis stamp: 'IO 11/1/2020 18:03:20'!
PASSED!

!testRun: #TerniLapilliGameTest #test17OCantStartPutting stamp: 'IO 11/1/2020 18:03:20'!
PASSED!

!testRun: #TerniLapilliGameTest #test18XCantPutTwiceInARow stamp: 'IO 11/1/2020 18:03:20'!
PASSED!

!testRun: #TerniLapilliGameTest #test19XCantMoveTwiceInARow stamp: 'IO 11/1/2020 18:03:20'!
PASSED!

!testRun: #TerniLapilliGameTest #test20OCantPutTwiceInARow stamp: 'IO 11/1/2020 18:03:20'!
PASSED!

!testRun: #TerniLapilliGameTest #test21OCantMoveTwiceInARow stamp: 'IO 11/1/2020 18:03:20'!
PASSED!

!testRun: #TerniLapilliGameTest #test22XCantMoveOnTheirFirstTurn stamp: 'IO 11/1/2020 18:03:20'!
PASSED!

!testRun: #TerniLapilliGameTest #test23XCantMoveOnTheirSecondTurn stamp: 'IO 11/1/2020 18:03:20'!
PASSED!

!testRun: #TerniLapilliGameTest #test24XCantMoveOnTheirThirdTurn stamp: 'IO 11/1/2020 18:03:20'!
PASSED!

!testRun: #TerniLapilliGameTest #test25OCantMoveOnTheirFirstTurn stamp: 'IO 11/1/2020 18:03:20'!
PASSED!

!testRun: #TerniLapilliGameTest #test26OCantMoveOnTheirSecondTurn stamp: 'IO 11/1/2020 18:03:20'!
PASSED!

!testRun: #TerniLapilliGameTest #test27OCantMoveOnTheirThirdTurn stamp: 'IO 11/1/2020 18:03:20'!
PASSED!

!testRun: #TerniLapilliGameTest #test28XCantPutAfterTheirThirdTurn stamp: 'IO 11/1/2020 18:03:20'!
PASSED!

!testRun: #TerniLapilliGameTest #test29OCantPutAfterTheirThirdTurn stamp: 'IO 11/1/2020 18:03:20'!
PASSED!

!testRun: #TerniLapilliGameTest #test30OCantPutAfterXWon stamp: 'IO 11/1/2020 18:03:20'!
PASSED!

!testRun: #TerniLapilliGameTest #test31OCantMoveAfterXWon stamp: 'IO 11/1/2020 18:03:20'!
PASSED!

!testRun: #TerniLapilliGameTest #test32XCantMoveAfterOWon stamp: 'IO 11/1/2020 18:03:20'!
PASSED!

!testRun: #TerniLapilliGameTest #test33XCantPutAfterOWon stamp: 'IO 11/1/2020 18:03:20'!
PASSED!

!testRun: #TerniLapilliGameTest #test34XCantPutInAnOccupiedSpace stamp: 'IO 11/1/2020 18:03:20'!
PASSED!

!testRun: #TerniLapilliGameTest #test35OCantPutInAnOccupiedSpace stamp: 'IO 11/1/2020 18:03:20'!
PASSED!

!testRun: #TerniLapilliGameTest #test36XCantMoveToAnOccupiedSpace stamp: 'IO 11/1/2020 18:03:20'!
PASSED!

!testRun: #TerniLapilliGameTest #test37OCantMoveToAnOccupiedSpace stamp: 'IO 11/1/2020 18:03:20'!
PASSED!

!testRun: #TerniLapilliGameTest #test38XCantPutOutsideTheBoardUnderXAxis stamp: 'IO 11/1/2020 18:03:20'!
PASSED!

!testRun: #TerniLapilliGameTest #test39XCantPutOutsideTheBoardAboveXAxis stamp: 'IO 11/1/2020 18:03:20'!
PASSED!

!testRun: #TerniLapilliGameTest #test40XCantPutOutsideTheBoardUnderNorAboveTheYAxis stamp: 'IO 11/1/2020 18:03:20'!
PASSED!

!testRun: #TerniLapilliGameTest #test41OCantPutOutsideTheBoard stamp: 'IO 11/1/2020 18:03:20'!
PASSED!

!testRun: #TerniLapilliGameTest #test42XCantMoveToOutsideTheBoard stamp: 'IO 11/1/2020 18:03:20'!
PASSED!

!testRun: #TerniLapilliGameTest #test43OCantMoveToOutsideTheBoard stamp: 'IO 11/1/2020 18:03:20'!
PASSED!

!testRun: #TerniLapilliGameTest #test44XCantMoveTokensThatDontBelongToThem stamp: 'IO 11/1/2020 18:03:20'!
PASSED!

!testRun: #TerniLapilliGameTest #test45OCantMoveTokensThatDontBelongToThem stamp: 'IO 11/1/2020 18:03:20'!
PASSED!

!testRun: #TerniLapilliGameTest #test46XCantMoveaTokenOutsideItsNeighbors stamp: 'IO 11/1/2020 18:03:20'!
PASSED!

!testRun: #TerniLapilliGameTest #test47OCantMoveATokenOutsideItsNeighbors stamp: 'IO 11/1/2020 18:03:20'!
PASSED!
!TerniLapilliGame class methodsFor: 'instance creation' stamp: 'IO 11/1/2020 18:03:54' prior: 50881041 overrides: 16783533!
new

	"create a new game"

	^self basicNew initialize.
! !
!TerniLapilliGame class methodsFor: 'error messages' stamp: 'IO 11/1/2020 18:04:04' prior: 50883555!
cannotMoveErrorMessage

	^'Cannot move tokens. You need to put 3 tokens first'.
! !

!testRun: #TerniLapilliGameTest #test01XCanPutAToken stamp: 'IO 11/1/2020 18:04:50'!
PASSED!

!testRun: #TerniLapilliGameTest #test02puttingDoesNotAffectOtherPositions stamp: 'IO 11/1/2020 18:04:50'!
PASSED!

!testRun: #TerniLapilliGameTest #test03XCanPutInOtherPositions stamp: 'IO 11/1/2020 18:04:50'!
PASSED!

!testRun: #TerniLapilliGameTest #test04OCanPut stamp: 'IO 11/1/2020 18:04:50'!
PASSED!

!testRun: #TerniLapilliGameTest #test05XCanMove stamp: 'IO 11/1/2020 18:04:50'!
PASSED!

!testRun: #TerniLapilliGameTest #test06OCanMove stamp: 'IO 11/1/2020 18:04:50'!
PASSED!

!testRun: #TerniLapilliGameTest #test07XWinsWithTheFirstColumn stamp: 'IO 11/1/2020 18:04:50'!
PASSED!

!testRun: #TerniLapilliGameTest #test08XHasntWonYet stamp: 'IO 11/1/2020 18:04:50'!
PASSED!

!testRun: #TerniLapilliGameTest #test09XWinsWithTheSecondColumn stamp: 'IO 11/1/2020 18:04:50'!
PASSED!

!testRun: #TerniLapilliGameTest #test10XWinsWithTheThirdColumn stamp: 'IO 11/1/2020 18:04:50'!
PASSED!

!testRun: #TerniLapilliGameTest #test11XWinsWithTheFirstRow stamp: 'IO 11/1/2020 18:04:50'!
PASSED!

!testRun: #TerniLapilliGameTest #test12XWinsWithTheSecondRow stamp: 'IO 11/1/2020 18:04:50'!
PASSED!

!testRun: #TerniLapilliGameTest #test13XWinsWithTheThirdRow stamp: 'IO 11/1/2020 18:04:50'!
PASSED!

!testRun: #TerniLapilliGameTest #test14XWinsWithTheCrescentDiagonal stamp: 'IO 11/1/2020 18:04:50'!
PASSED!

!testRun: #TerniLapilliGameTest #test15XWinsWithTheDescendantDiagonal stamp: 'IO 11/1/2020 18:04:50'!
PASSED!

!testRun: #TerniLapilliGameTest #test16OWnis stamp: 'IO 11/1/2020 18:04:50'!
PASSED!

!testRun: #TerniLapilliGameTest #test17OCantStartPutting stamp: 'IO 11/1/2020 18:04:50'!
PASSED!

!testRun: #TerniLapilliGameTest #test18XCantPutTwiceInARow stamp: 'IO 11/1/2020 18:04:50'!
PASSED!

!testRun: #TerniLapilliGameTest #test19XCantMoveTwiceInARow stamp: 'IO 11/1/2020 18:04:50'!
PASSED!

!testRun: #TerniLapilliGameTest #test20OCantPutTwiceInARow stamp: 'IO 11/1/2020 18:04:50'!
PASSED!

!testRun: #TerniLapilliGameTest #test21OCantMoveTwiceInARow stamp: 'IO 11/1/2020 18:04:50'!
PASSED!

!testRun: #TerniLapilliGameTest #test22XCantMoveOnTheirFirstTurn stamp: 'IO 11/1/2020 18:04:50'!
PASSED!

!testRun: #TerniLapilliGameTest #test23XCantMoveOnTheirSecondTurn stamp: 'IO 11/1/2020 18:04:50'!
PASSED!

!testRun: #TerniLapilliGameTest #test24XCantMoveOnTheirThirdTurn stamp: 'IO 11/1/2020 18:04:50'!
PASSED!

!testRun: #TerniLapilliGameTest #test25OCantMoveOnTheirFirstTurn stamp: 'IO 11/1/2020 18:04:50'!
PASSED!

!testRun: #TerniLapilliGameTest #test26OCantMoveOnTheirSecondTurn stamp: 'IO 11/1/2020 18:04:50'!
PASSED!

!testRun: #TerniLapilliGameTest #test27OCantMoveOnTheirThirdTurn stamp: 'IO 11/1/2020 18:04:50'!
PASSED!

!testRun: #TerniLapilliGameTest #test28XCantPutAfterTheirThirdTurn stamp: 'IO 11/1/2020 18:04:50'!
PASSED!

!testRun: #TerniLapilliGameTest #test29OCantPutAfterTheirThirdTurn stamp: 'IO 11/1/2020 18:04:50'!
PASSED!

!testRun: #TerniLapilliGameTest #test30OCantPutAfterXWon stamp: 'IO 11/1/2020 18:04:50'!
PASSED!

!testRun: #TerniLapilliGameTest #test31OCantMoveAfterXWon stamp: 'IO 11/1/2020 18:04:50'!
PASSED!

!testRun: #TerniLapilliGameTest #test32XCantMoveAfterOWon stamp: 'IO 11/1/2020 18:04:50'!
PASSED!

!testRun: #TerniLapilliGameTest #test33XCantPutAfterOWon stamp: 'IO 11/1/2020 18:04:50'!
PASSED!

!testRun: #TerniLapilliGameTest #test34XCantPutInAnOccupiedSpace stamp: 'IO 11/1/2020 18:04:50'!
PASSED!

!testRun: #TerniLapilliGameTest #test35OCantPutInAnOccupiedSpace stamp: 'IO 11/1/2020 18:04:50'!
PASSED!

!testRun: #TerniLapilliGameTest #test36XCantMoveToAnOccupiedSpace stamp: 'IO 11/1/2020 18:04:50'!
PASSED!

!testRun: #TerniLapilliGameTest #test37OCantMoveToAnOccupiedSpace stamp: 'IO 11/1/2020 18:04:50'!
PASSED!

!testRun: #TerniLapilliGameTest #test38XCantPutOutsideTheBoardUnderXAxis stamp: 'IO 11/1/2020 18:04:50'!
PASSED!

!testRun: #TerniLapilliGameTest #test39XCantPutOutsideTheBoardAboveXAxis stamp: 'IO 11/1/2020 18:04:50'!
PASSED!

!testRun: #TerniLapilliGameTest #test40XCantPutOutsideTheBoardUnderNorAboveTheYAxis stamp: 'IO 11/1/2020 18:04:50'!
PASSED!

!testRun: #TerniLapilliGameTest #test41OCantPutOutsideTheBoard stamp: 'IO 11/1/2020 18:04:50'!
PASSED!

!testRun: #TerniLapilliGameTest #test42XCantMoveToOutsideTheBoard stamp: 'IO 11/1/2020 18:04:50'!
PASSED!

!testRun: #TerniLapilliGameTest #test43OCantMoveToOutsideTheBoard stamp: 'IO 11/1/2020 18:04:50'!
PASSED!

!testRun: #TerniLapilliGameTest #test44XCantMoveTokensThatDontBelongToThem stamp: 'IO 11/1/2020 18:04:50'!
PASSED!

!testRun: #TerniLapilliGameTest #test45OCantMoveTokensThatDontBelongToThem stamp: 'IO 11/1/2020 18:04:50'!
PASSED!

!testRun: #TerniLapilliGameTest #test46XCantMoveaTokenOutsideItsNeighbors stamp: 'IO 11/1/2020 18:04:50'!
PASSED!

!testRun: #TerniLapilliGameTest #test47OCantMoveATokenOutsideItsNeighbors stamp: 'IO 11/1/2020 18:04:50'!
PASSED!
!TerniLapilliGame methodsFor: 'testing' stamp: 'IO 11/1/2020 18:06:13'!
hasColorAt: aPosition

	"returns true if a board position has a token placed or not"

	^(state includesColorOAt: aPosition) or: (state includesColorXAt: aPosition).
! !
!TerniLapilliGame methodsFor: 'as yet unclassified' stamp: 'IO 11/1/2020 18:06:13' prior: 50881920!
oMoves: sourcePosition to: destinationPosition

	"move O's token from a given position of the board to another given position"

	(self hasColorAt: destinationPosition ) ifTrue: [^self error: TerniLapilliGame cannotMoveErrorMessage].

	state := state oMoves: sourcePosition to: destinationPosition.
! !
!TerniLapilliGame methodsFor: 'as yet unclassified' stamp: 'IO 11/1/2020 18:06:13' prior: 50881943!
xMoves: sourcePosition to: destinationPosition

	"move O's token from a given position of the board to another given position"

	(self hasColorAt: destinationPosition ) ifTrue:[^self error: TerniLapilliGame cannotMoveErrorMessage ] .

	state := state xMoves: sourcePosition to: destinationPosition.
	
	
! !
!TerniLapilliGame methodsFor: 'as yet unclassified' stamp: 'IO 11/1/2020 18:06:13' prior: 50881933!
oPutsOn: aPosition

	"put an O token in a given position of the board"

	(self hasColorAt: aPosition ) ifTrue:[^self error: TerniLapilliGame cannotPutErrorMessage ] .
	
	
	state := state oPutsOn: aPosition.
! !
!TerniLapilliGame methodsFor: 'as yet unclassified' stamp: 'IO 11/1/2020 18:06:13' prior: 50881966!
xPutsOn: aPosition

	"put an O token in a given position of the board"

	(self hasColorAt: aPosition ) ifTrue:[^self error: TerniLapilliGame cannotPutErrorMessage ] .

	state := state xPutsOn: aPosition.
! !

!methodRemoval: TerniLapilliGame #includesColorAt: stamp: 'IO 11/1/2020 18:06:13'!
includesColorAt: aPosition

	"returns true if a board position has a token placed or not"

	^(state includesColorOAt: aPosition) or: (state includesColorXAt: aPosition).
!

!testRun: #TerniLapilliGameTest #test01XCanPutAToken stamp: 'IO 11/1/2020 18:06:18'!
PASSED!

!testRun: #TerniLapilliGameTest #test02puttingDoesNotAffectOtherPositions stamp: 'IO 11/1/2020 18:06:18'!
PASSED!

!testRun: #TerniLapilliGameTest #test03XCanPutInOtherPositions stamp: 'IO 11/1/2020 18:06:18'!
PASSED!

!testRun: #TerniLapilliGameTest #test04OCanPut stamp: 'IO 11/1/2020 18:06:18'!
PASSED!

!testRun: #TerniLapilliGameTest #test05XCanMove stamp: 'IO 11/1/2020 18:06:18'!
PASSED!

!testRun: #TerniLapilliGameTest #test06OCanMove stamp: 'IO 11/1/2020 18:06:18'!
PASSED!

!testRun: #TerniLapilliGameTest #test07XWinsWithTheFirstColumn stamp: 'IO 11/1/2020 18:06:18'!
PASSED!

!testRun: #TerniLapilliGameTest #test08XHasntWonYet stamp: 'IO 11/1/2020 18:06:18'!
PASSED!

!testRun: #TerniLapilliGameTest #test09XWinsWithTheSecondColumn stamp: 'IO 11/1/2020 18:06:18'!
PASSED!

!testRun: #TerniLapilliGameTest #test10XWinsWithTheThirdColumn stamp: 'IO 11/1/2020 18:06:18'!
PASSED!

!testRun: #TerniLapilliGameTest #test11XWinsWithTheFirstRow stamp: 'IO 11/1/2020 18:06:18'!
PASSED!

!testRun: #TerniLapilliGameTest #test12XWinsWithTheSecondRow stamp: 'IO 11/1/2020 18:06:18'!
PASSED!

!testRun: #TerniLapilliGameTest #test13XWinsWithTheThirdRow stamp: 'IO 11/1/2020 18:06:18'!
PASSED!

!testRun: #TerniLapilliGameTest #test14XWinsWithTheCrescentDiagonal stamp: 'IO 11/1/2020 18:06:18'!
PASSED!

!testRun: #TerniLapilliGameTest #test15XWinsWithTheDescendantDiagonal stamp: 'IO 11/1/2020 18:06:18'!
PASSED!

!testRun: #TerniLapilliGameTest #test16OWnis stamp: 'IO 11/1/2020 18:06:18'!
PASSED!

!testRun: #TerniLapilliGameTest #test17OCantStartPutting stamp: 'IO 11/1/2020 18:06:18'!
PASSED!

!testRun: #TerniLapilliGameTest #test18XCantPutTwiceInARow stamp: 'IO 11/1/2020 18:06:18'!
PASSED!

!testRun: #TerniLapilliGameTest #test19XCantMoveTwiceInARow stamp: 'IO 11/1/2020 18:06:18'!
PASSED!

!testRun: #TerniLapilliGameTest #test20OCantPutTwiceInARow stamp: 'IO 11/1/2020 18:06:18'!
PASSED!

!testRun: #TerniLapilliGameTest #test21OCantMoveTwiceInARow stamp: 'IO 11/1/2020 18:06:18'!
PASSED!

!testRun: #TerniLapilliGameTest #test22XCantMoveOnTheirFirstTurn stamp: 'IO 11/1/2020 18:06:18'!
PASSED!

!testRun: #TerniLapilliGameTest #test23XCantMoveOnTheirSecondTurn stamp: 'IO 11/1/2020 18:06:18'!
PASSED!

!testRun: #TerniLapilliGameTest #test24XCantMoveOnTheirThirdTurn stamp: 'IO 11/1/2020 18:06:18'!
PASSED!

!testRun: #TerniLapilliGameTest #test25OCantMoveOnTheirFirstTurn stamp: 'IO 11/1/2020 18:06:18'!
PASSED!

!testRun: #TerniLapilliGameTest #test26OCantMoveOnTheirSecondTurn stamp: 'IO 11/1/2020 18:06:18'!
PASSED!

!testRun: #TerniLapilliGameTest #test27OCantMoveOnTheirThirdTurn stamp: 'IO 11/1/2020 18:06:18'!
PASSED!

!testRun: #TerniLapilliGameTest #test28XCantPutAfterTheirThirdTurn stamp: 'IO 11/1/2020 18:06:18'!
PASSED!

!testRun: #TerniLapilliGameTest #test29OCantPutAfterTheirThirdTurn stamp: 'IO 11/1/2020 18:06:18'!
PASSED!

!testRun: #TerniLapilliGameTest #test30OCantPutAfterXWon stamp: 'IO 11/1/2020 18:06:19'!
PASSED!

!testRun: #TerniLapilliGameTest #test31OCantMoveAfterXWon stamp: 'IO 11/1/2020 18:06:19'!
PASSED!

!testRun: #TerniLapilliGameTest #test32XCantMoveAfterOWon stamp: 'IO 11/1/2020 18:06:19'!
PASSED!

!testRun: #TerniLapilliGameTest #test33XCantPutAfterOWon stamp: 'IO 11/1/2020 18:06:19'!
PASSED!

!testRun: #TerniLapilliGameTest #test34XCantPutInAnOccupiedSpace stamp: 'IO 11/1/2020 18:06:19'!
PASSED!

!testRun: #TerniLapilliGameTest #test35OCantPutInAnOccupiedSpace stamp: 'IO 11/1/2020 18:06:19'!
PASSED!

!testRun: #TerniLapilliGameTest #test36XCantMoveToAnOccupiedSpace stamp: 'IO 11/1/2020 18:06:19'!
PASSED!

!testRun: #TerniLapilliGameTest #test37OCantMoveToAnOccupiedSpace stamp: 'IO 11/1/2020 18:06:19'!
PASSED!

!testRun: #TerniLapilliGameTest #test38XCantPutOutsideTheBoardUnderXAxis stamp: 'IO 11/1/2020 18:06:19'!
PASSED!

!testRun: #TerniLapilliGameTest #test39XCantPutOutsideTheBoardAboveXAxis stamp: 'IO 11/1/2020 18:06:19'!
PASSED!

!testRun: #TerniLapilliGameTest #test40XCantPutOutsideTheBoardUnderNorAboveTheYAxis stamp: 'IO 11/1/2020 18:06:19'!
PASSED!

!testRun: #TerniLapilliGameTest #test41OCantPutOutsideTheBoard stamp: 'IO 11/1/2020 18:06:19'!
PASSED!

!testRun: #TerniLapilliGameTest #test42XCantMoveToOutsideTheBoard stamp: 'IO 11/1/2020 18:06:19'!
PASSED!

!testRun: #TerniLapilliGameTest #test43OCantMoveToOutsideTheBoard stamp: 'IO 11/1/2020 18:06:19'!
PASSED!

!testRun: #TerniLapilliGameTest #test44XCantMoveTokensThatDontBelongToThem stamp: 'IO 11/1/2020 18:06:19'!
PASSED!

!testRun: #TerniLapilliGameTest #test45OCantMoveTokensThatDontBelongToThem stamp: 'IO 11/1/2020 18:06:19'!
PASSED!

!testRun: #TerniLapilliGameTest #test46XCantMoveaTokenOutsideItsNeighbors stamp: 'IO 11/1/2020 18:06:19'!
PASSED!

!testRun: #TerniLapilliGameTest #test47OCantMoveATokenOutsideItsNeighbors stamp: 'IO 11/1/2020 18:06:19'!
PASSED!
!TerniLapilliGame methodsFor: 'testing' stamp: 'IO 11/1/2020 18:06:48'!
hasOAt: aPosition

	"returns true if a board position has a token placed by O player or not"

	^state includesColorOAt: aPosition.
! !
!TerniLapilliGame methodsFor: 'as yet unclassified' stamp: 'IO 11/1/2020 18:06:48' prior: 50881894!
includesColorOAt: aPosition

	"returns true if a board position has a token placed by O player or not"

	^state hasOAt: aPosition.
! !
!TerniLapilliGame methodsFor: 'as yet unclassified' stamp: 'IO 11/1/2020 18:06:48' prior: 50887490!
hasColorAt: aPosition

	"returns true if a board position has a token placed or not"

	^(state hasOAt: aPosition) or: (state includesColorXAt: aPosition).
! !
!TerniLapilliGame methodsFor: 'as yet unclassified' stamp: 'IO 11/1/2020 18:06:48' prior: 50887705!
hasOAt: aPosition

	"returns true if a board position has a token placed by O player or not"

	^state hasOAt: aPosition.
! !

!methodRemoval: TerniLapilliGame #includesColorOAt: stamp: 'IO 11/1/2020 18:06:48'!
includesColorOAt: aPosition

	"returns true if a board position has a token placed by O player or not"

	^state hasOAt: aPosition.
!
!TerniLapilliGame methodsFor: 'testing' stamp: 'IO 11/1/2020 18:07:01'!
hasTokenAt: aPosition

	"returns true if a board position has a token placed or not"

	^(state hasOAt: aPosition) or: (state includesColorXAt: aPosition).
! !
!TerniLapilliGame methodsFor: 'as yet unclassified' stamp: 'IO 11/1/2020 18:07:01' prior: 50887512!
xMoves: sourcePosition to: destinationPosition

	"move O's token from a given position of the board to another given position"

	(self hasTokenAt: destinationPosition ) ifTrue:[^self error: TerniLapilliGame cannotMoveErrorMessage ] .

	state := state xMoves: sourcePosition to: destinationPosition.
	
	
! !
!TerniLapilliGame methodsFor: 'as yet unclassified' stamp: 'IO 11/1/2020 18:07:01' prior: 50887499!
oMoves: sourcePosition to: destinationPosition

	"move O's token from a given position of the board to another given position"

	(self hasTokenAt: destinationPosition ) ifTrue: [^self error: TerniLapilliGame cannotMoveErrorMessage].

	state := state oMoves: sourcePosition to: destinationPosition.
! !
!TerniLapilliGame methodsFor: 'as yet unclassified' stamp: 'IO 11/1/2020 18:07:01' prior: 50887535!
xPutsOn: aPosition

	"put an O token in a given position of the board"

	(self hasTokenAt: aPosition ) ifTrue:[^self error: TerniLapilliGame cannotPutErrorMessage ] .

	state := state xPutsOn: aPosition.
! !
!TerniLapilliGame methodsFor: 'as yet unclassified' stamp: 'IO 11/1/2020 18:07:01' prior: 50887525!
oPutsOn: aPosition

	"put an O token in a given position of the board"

	(self hasTokenAt: aPosition ) ifTrue:[^self error: TerniLapilliGame cannotPutErrorMessage ] .
	
	
	state := state oPutsOn: aPosition.
! !

!methodRemoval: TerniLapilliGame #hasColorAt: stamp: 'IO 11/1/2020 18:07:01'!
hasColorAt: aPosition

	"returns true if a board position has a token placed or not"

	^(state hasOAt: aPosition) or: (state includesColorXAt: aPosition).
!
!TerniLapilliGame methodsFor: 'testing' stamp: 'IO 11/1/2020 18:07:14'!
hasOWon

	"returns true if O has won or not"

	^state oHasWon.
! !
!TerniLapilliGame methodsFor: 'as yet unclassified' stamp: 'IO 11/1/2020 18:07:14' prior: 50881910!
oHasWon

	"returns true if O has won or not"

	^state hasOWon.
! !
!TerniLapilliGame methodsFor: 'as yet unclassified' stamp: 'IO 11/1/2020 18:07:14' prior: 50887805!
hasOWon

	"returns true if O has won or not"

	^state hasOWon.
! !

!methodRemoval: TerniLapilliGame #oHasWon stamp: 'IO 11/1/2020 18:07:14'!
oHasWon

	"returns true if O has won or not"

	^state hasOWon.
!

!testRun: #TerniLapilliGameTest #test01XCanPutAToken stamp: 'IO 11/1/2020 18:07:18'!
ERROR!

!testRun: #TerniLapilliGameTest #test02puttingDoesNotAffectOtherPositions stamp: 'IO 11/1/2020 18:07:18'!
ERROR!

!testRun: #TerniLapilliGameTest #test03XCanPutInOtherPositions stamp: 'IO 11/1/2020 18:07:18'!
ERROR!

!testRun: #TerniLapilliGameTest #test04OCanPut stamp: 'IO 11/1/2020 18:07:18'!
ERROR!

!testRun: #TerniLapilliGameTest #test05XCanMove stamp: 'IO 11/1/2020 18:07:18'!
ERROR!

!testRun: #TerniLapilliGameTest #test06OCanMove stamp: 'IO 11/1/2020 18:07:18'!
ERROR!

!testRun: #TerniLapilliGameTest #test07XWinsWithTheFirstColumn stamp: 'IO 11/1/2020 18:07:18'!
ERROR!

!testRun: #TerniLapilliGameTest #test08XHasntWonYet stamp: 'IO 11/1/2020 18:07:18'!
ERROR!

!testRun: #TerniLapilliGameTest #test09XWinsWithTheSecondColumn stamp: 'IO 11/1/2020 18:07:18'!
ERROR!

!testRun: #TerniLapilliGameTest #test10XWinsWithTheThirdColumn stamp: 'IO 11/1/2020 18:07:18'!
ERROR!

!testRun: #TerniLapilliGameTest #test11XWinsWithTheFirstRow stamp: 'IO 11/1/2020 18:07:18'!
ERROR!

!testRun: #TerniLapilliGameTest #test12XWinsWithTheSecondRow stamp: 'IO 11/1/2020 18:07:18'!
ERROR!

!testRun: #TerniLapilliGameTest #test13XWinsWithTheThirdRow stamp: 'IO 11/1/2020 18:07:18'!
ERROR!

!testRun: #TerniLapilliGameTest #test14XWinsWithTheCrescentDiagonal stamp: 'IO 11/1/2020 18:07:18'!
ERROR!

!testRun: #TerniLapilliGameTest #test15XWinsWithTheDescendantDiagonal stamp: 'IO 11/1/2020 18:07:18'!
ERROR!

!testRun: #TerniLapilliGameTest #test16OWnis stamp: 'IO 11/1/2020 18:07:18'!
ERROR!

!testRun: #TerniLapilliGameTest #test17OCantStartPutting stamp: 'IO 11/1/2020 18:07:18'!
FAILURE!

!testRun: #TerniLapilliGameTest #test18XCantPutTwiceInARow stamp: 'IO 11/1/2020 18:07:18'!
ERROR!

!testRun: #TerniLapilliGameTest #test19XCantMoveTwiceInARow stamp: 'IO 11/1/2020 18:07:18'!
ERROR!

!testRun: #TerniLapilliGameTest #test20OCantPutTwiceInARow stamp: 'IO 11/1/2020 18:07:18'!
ERROR!

!testRun: #TerniLapilliGameTest #test21OCantMoveTwiceInARow stamp: 'IO 11/1/2020 18:07:18'!
ERROR!

!testRun: #TerniLapilliGameTest #test22XCantMoveOnTheirFirstTurn stamp: 'IO 11/1/2020 18:07:18'!
FAILURE!

!testRun: #TerniLapilliGameTest #test23XCantMoveOnTheirSecondTurn stamp: 'IO 11/1/2020 18:07:18'!
ERROR!

!testRun: #TerniLapilliGameTest #test24XCantMoveOnTheirThirdTurn stamp: 'IO 11/1/2020 18:07:18'!
ERROR!

!testRun: #TerniLapilliGameTest #test25OCantMoveOnTheirFirstTurn stamp: 'IO 11/1/2020 18:07:18'!
ERROR!

!testRun: #TerniLapilliGameTest #test26OCantMoveOnTheirSecondTurn stamp: 'IO 11/1/2020 18:07:18'!
ERROR!

!testRun: #TerniLapilliGameTest #test27OCantMoveOnTheirThirdTurn stamp: 'IO 11/1/2020 18:07:18'!
ERROR!

!testRun: #TerniLapilliGameTest #test28XCantPutAfterTheirThirdTurn stamp: 'IO 11/1/2020 18:07:18'!
ERROR!

!testRun: #TerniLapilliGameTest #test29OCantPutAfterTheirThirdTurn stamp: 'IO 11/1/2020 18:07:18'!
ERROR!

!testRun: #TerniLapilliGameTest #test30OCantPutAfterXWon stamp: 'IO 11/1/2020 18:07:18'!
ERROR!

!testRun: #TerniLapilliGameTest #test31OCantMoveAfterXWon stamp: 'IO 11/1/2020 18:07:18'!
ERROR!

!testRun: #TerniLapilliGameTest #test32XCantMoveAfterOWon stamp: 'IO 11/1/2020 18:07:18'!
ERROR!

!testRun: #TerniLapilliGameTest #test33XCantPutAfterOWon stamp: 'IO 11/1/2020 18:07:18'!
ERROR!

!testRun: #TerniLapilliGameTest #test34XCantPutInAnOccupiedSpace stamp: 'IO 11/1/2020 18:07:18'!
ERROR!

!testRun: #TerniLapilliGameTest #test35OCantPutInAnOccupiedSpace stamp: 'IO 11/1/2020 18:07:18'!
ERROR!

!testRun: #TerniLapilliGameTest #test36XCantMoveToAnOccupiedSpace stamp: 'IO 11/1/2020 18:07:18'!
ERROR!

!testRun: #TerniLapilliGameTest #test37OCantMoveToAnOccupiedSpace stamp: 'IO 11/1/2020 18:07:18'!
ERROR!

!testRun: #TerniLapilliGameTest #test38XCantPutOutsideTheBoardUnderXAxis stamp: 'IO 11/1/2020 18:07:18'!
FAILURE!

!testRun: #TerniLapilliGameTest #test39XCantPutOutsideTheBoardAboveXAxis stamp: 'IO 11/1/2020 18:07:18'!
FAILURE!

!testRun: #TerniLapilliGameTest #test40XCantPutOutsideTheBoardUnderNorAboveTheYAxis stamp: 'IO 11/1/2020 18:07:18'!
FAILURE!

!testRun: #TerniLapilliGameTest #test41OCantPutOutsideTheBoard stamp: 'IO 11/1/2020 18:07:18'!
ERROR!

!testRun: #TerniLapilliGameTest #test42XCantMoveToOutsideTheBoard stamp: 'IO 11/1/2020 18:07:18'!
ERROR!

!testRun: #TerniLapilliGameTest #test43OCantMoveToOutsideTheBoard stamp: 'IO 11/1/2020 18:07:18'!
ERROR!

!testRun: #TerniLapilliGameTest #test44XCantMoveTokensThatDontBelongToThem stamp: 'IO 11/1/2020 18:07:18'!
ERROR!

!testRun: #TerniLapilliGameTest #test45OCantMoveTokensThatDontBelongToThem stamp: 'IO 11/1/2020 18:07:18'!
ERROR!

!testRun: #TerniLapilliGameTest #test46XCantMoveaTokenOutsideItsNeighbors stamp: 'IO 11/1/2020 18:07:18'!
ERROR!

!testRun: #TerniLapilliGameTest #test47OCantMoveATokenOutsideItsNeighbors stamp: 'IO 11/1/2020 18:07:18'!
ERROR!

!testRun: #TerniLapilliGameTest #test01XCanPutAToken stamp: 'IO 11/1/2020 18:07:25'!
ERROR!

!testRun: #TerniLapilliGameTest #test02puttingDoesNotAffectOtherPositions stamp: 'IO 11/1/2020 18:07:25'!
ERROR!

!testRun: #TerniLapilliGameTest #test03XCanPutInOtherPositions stamp: 'IO 11/1/2020 18:07:25'!
ERROR!

!testRun: #TerniLapilliGameTest #test04OCanPut stamp: 'IO 11/1/2020 18:07:25'!
ERROR!

!testRun: #TerniLapilliGameTest #test05XCanMove stamp: 'IO 11/1/2020 18:07:25'!
ERROR!

!testRun: #TerniLapilliGameTest #test06OCanMove stamp: 'IO 11/1/2020 18:07:25'!
ERROR!

!testRun: #TerniLapilliGameTest #test07XWinsWithTheFirstColumn stamp: 'IO 11/1/2020 18:07:25'!
ERROR!

!testRun: #TerniLapilliGameTest #test08XHasntWonYet stamp: 'IO 11/1/2020 18:07:25'!
ERROR!

!testRun: #TerniLapilliGameTest #test09XWinsWithTheSecondColumn stamp: 'IO 11/1/2020 18:07:25'!
ERROR!

!testRun: #TerniLapilliGameTest #test10XWinsWithTheThirdColumn stamp: 'IO 11/1/2020 18:07:25'!
ERROR!

!testRun: #TerniLapilliGameTest #test11XWinsWithTheFirstRow stamp: 'IO 11/1/2020 18:07:25'!
ERROR!

!testRun: #TerniLapilliGameTest #test12XWinsWithTheSecondRow stamp: 'IO 11/1/2020 18:07:25'!
ERROR!

!testRun: #TerniLapilliGameTest #test13XWinsWithTheThirdRow stamp: 'IO 11/1/2020 18:07:25'!
ERROR!

!testRun: #TerniLapilliGameTest #test14XWinsWithTheCrescentDiagonal stamp: 'IO 11/1/2020 18:07:25'!
ERROR!

!testRun: #TerniLapilliGameTest #test15XWinsWithTheDescendantDiagonal stamp: 'IO 11/1/2020 18:07:25'!
ERROR!

!testRun: #TerniLapilliGameTest #test16OWnis stamp: 'IO 11/1/2020 18:07:25'!
ERROR!

!testRun: #TerniLapilliGameTest #test17OCantStartPutting stamp: 'IO 11/1/2020 18:07:25'!
FAILURE!

!testRun: #TerniLapilliGameTest #test18XCantPutTwiceInARow stamp: 'IO 11/1/2020 18:07:25'!
ERROR!

!testRun: #TerniLapilliGameTest #test19XCantMoveTwiceInARow stamp: 'IO 11/1/2020 18:07:25'!
ERROR!

!testRun: #TerniLapilliGameTest #test20OCantPutTwiceInARow stamp: 'IO 11/1/2020 18:07:25'!
ERROR!

!testRun: #TerniLapilliGameTest #test21OCantMoveTwiceInARow stamp: 'IO 11/1/2020 18:07:25'!
ERROR!

!testRun: #TerniLapilliGameTest #test22XCantMoveOnTheirFirstTurn stamp: 'IO 11/1/2020 18:07:25'!
FAILURE!

!testRun: #TerniLapilliGameTest #test23XCantMoveOnTheirSecondTurn stamp: 'IO 11/1/2020 18:07:25'!
ERROR!

!testRun: #TerniLapilliGameTest #test24XCantMoveOnTheirThirdTurn stamp: 'IO 11/1/2020 18:07:25'!
ERROR!

!testRun: #TerniLapilliGameTest #test25OCantMoveOnTheirFirstTurn stamp: 'IO 11/1/2020 18:07:25'!
ERROR!

!testRun: #TerniLapilliGameTest #test26OCantMoveOnTheirSecondTurn stamp: 'IO 11/1/2020 18:07:25'!
ERROR!

!testRun: #TerniLapilliGameTest #test27OCantMoveOnTheirThirdTurn stamp: 'IO 11/1/2020 18:07:25'!
ERROR!

!testRun: #TerniLapilliGameTest #test28XCantPutAfterTheirThirdTurn stamp: 'IO 11/1/2020 18:07:25'!
ERROR!

!testRun: #TerniLapilliGameTest #test29OCantPutAfterTheirThirdTurn stamp: 'IO 11/1/2020 18:07:25'!
ERROR!

!testRun: #TerniLapilliGameTest #test30OCantPutAfterXWon stamp: 'IO 11/1/2020 18:07:25'!
ERROR!

!testRun: #TerniLapilliGameTest #test31OCantMoveAfterXWon stamp: 'IO 11/1/2020 18:07:25'!
ERROR!

!testRun: #TerniLapilliGameTest #test32XCantMoveAfterOWon stamp: 'IO 11/1/2020 18:07:25'!
ERROR!

!testRun: #TerniLapilliGameTest #test33XCantPutAfterOWon stamp: 'IO 11/1/2020 18:07:25'!
ERROR!

!testRun: #TerniLapilliGameTest #test34XCantPutInAnOccupiedSpace stamp: 'IO 11/1/2020 18:07:25'!
ERROR!

!testRun: #TerniLapilliGameTest #test35OCantPutInAnOccupiedSpace stamp: 'IO 11/1/2020 18:07:25'!
ERROR!

!testRun: #TerniLapilliGameTest #test36XCantMoveToAnOccupiedSpace stamp: 'IO 11/1/2020 18:07:25'!
ERROR!

!testRun: #TerniLapilliGameTest #test37OCantMoveToAnOccupiedSpace stamp: 'IO 11/1/2020 18:07:25'!
ERROR!

!testRun: #TerniLapilliGameTest #test38XCantPutOutsideTheBoardUnderXAxis stamp: 'IO 11/1/2020 18:07:25'!
FAILURE!

!testRun: #TerniLapilliGameTest #test39XCantPutOutsideTheBoardAboveXAxis stamp: 'IO 11/1/2020 18:07:25'!
FAILURE!

!testRun: #TerniLapilliGameTest #test40XCantPutOutsideTheBoardUnderNorAboveTheYAxis stamp: 'IO 11/1/2020 18:07:25'!
FAILURE!

!testRun: #TerniLapilliGameTest #test41OCantPutOutsideTheBoard stamp: 'IO 11/1/2020 18:07:25'!
ERROR!

!testRun: #TerniLapilliGameTest #test42XCantMoveToOutsideTheBoard stamp: 'IO 11/1/2020 18:07:25'!
ERROR!

!testRun: #TerniLapilliGameTest #test43OCantMoveToOutsideTheBoard stamp: 'IO 11/1/2020 18:07:25'!
ERROR!

!testRun: #TerniLapilliGameTest #test44XCantMoveTokensThatDontBelongToThem stamp: 'IO 11/1/2020 18:07:25'!
ERROR!

!testRun: #TerniLapilliGameTest #test45OCantMoveTokensThatDontBelongToThem stamp: 'IO 11/1/2020 18:07:25'!
ERROR!

!testRun: #TerniLapilliGameTest #test46XCantMoveaTokenOutsideItsNeighbors stamp: 'IO 11/1/2020 18:07:25'!
ERROR!

!testRun: #TerniLapilliGameTest #test47OCantMoveATokenOutsideItsNeighbors stamp: 'IO 11/1/2020 18:07:25'!
ERROR!

!testRun: #TerniLapilliGameTest #test43OCantMoveToOutsideTheBoard stamp: 'IO 11/1/2020 18:07:56'!
ERROR!

!testRun: #TerniLapilliGameTest #test01XCanPutAToken stamp: 'IO 11/1/2020 18:08:02'!
ERROR!

!testRun: #TerniLapilliGameTest #test08XHasntWonYet stamp: 'IO 11/1/2020 18:08:23'!
ERROR!
!TerniLapilliGameState methodsFor: 'testing' stamp: 'IO 11/1/2020 18:09:28'!
hasOAt: aPosition

	"returns true if the current state has O's token placed at a given position"

	^oTokens includes: aPosition.

! !

!methodRemoval: TerniLapilliGameState #includesColorOAt: stamp: 'IO 11/1/2020 18:09:28'!
includesColorOAt: aPosition

	"returns true if the current state has O's token placed at a given position"

	^oTokens includes: aPosition.

!
!TerniLapilliGameState methodsFor: 'testing' stamp: 'IO 11/1/2020 18:09:55'!
hasXAt: aPosition

	"returns true if the current state has X's token placed at a given position"

	^xTokens includes: aPosition.
! !

!methodRemoval: TerniLapilliGameState #includesColorXAt: stamp: 'IO 11/1/2020 18:09:55'!
includesColorXAt: aPosition

	"returns true if the current state has X's token placed at a given position"

	^xTokens includes: aPosition.
!
!TerniLapilliGameState methodsFor: 'testing' stamp: 'IO 11/1/2020 18:10:09'!
hasXWon

	"returns true if the current state is in a winning position for O. if true, the state is final"

	^oTokens areInWinningPosition.
! !

!methodRemoval: TerniLapilliGameState #oHasWon stamp: 'IO 11/1/2020 18:10:09'!
oHasWon

	"returns true if the current state is in a winning position for O. if true, the state is final"

	^oTokens areInWinningPosition.
!
!TerniLapilliGameState methodsFor: 'testing' stamp: 'IO 11/1/2020 18:10:17'!
hasOWon

	"returns true if the current state is in a winning position for O. if true, the state is final"

	^oTokens areInWinningPosition.
! !

!methodRemoval: TerniLapilliGameState #hasXWon stamp: 'IO 11/1/2020 18:10:18'!
hasXWon

	"returns true if the current state is in a winning position for O. if true, the state is final"

	^oTokens areInWinningPosition.
!
!TerniLapilliGameState methodsFor: 'testing' stamp: 'IO 11/1/2020 18:10:26'!
hasXWon

	"returns true if the current state is in a winning position for X. if true, the state is final"

	^xTokens areInWinningPosition.
! !

!methodRemoval: TerniLapilliGameState #xHasWon stamp: 'IO 11/1/2020 18:10:26'!
xHasWon

	"returns true if the current state is in a winning position for X. if true, the state is final"

	^xTokens areInWinningPosition.
!
!TerniLapilliGame methodsFor: 'testing' stamp: 'IO 11/1/2020 18:10:48'!
hasXWon

	"returns true if x has won or not"

	^state xHasWon.
! !
!TerniLapilliGame methodsFor: 'as yet unclassified' stamp: 'IO 11/1/2020 18:10:48' prior: 50881915!
xHasWon

	"returns true if x has won or not"

	^state hasXWon.
! !
!TerniLapilliGame methodsFor: 'as yet unclassified' stamp: 'IO 11/1/2020 18:10:48' prior: 50888210!
hasXWon

	"returns true if x has won or not"

	^state hasXWon.
! !

!methodRemoval: TerniLapilliGame #xHasWon stamp: 'IO 11/1/2020 18:10:48'!
xHasWon

	"returns true if x has won or not"

	^state hasXWon.
!

!testRun: #TerniLapilliGameTest #test01XCanPutAToken stamp: 'IO 11/1/2020 18:10:51'!
ERROR!

!testRun: #TerniLapilliGameTest #test02puttingDoesNotAffectOtherPositions stamp: 'IO 11/1/2020 18:10:51'!
ERROR!

!testRun: #TerniLapilliGameTest #test03XCanPutInOtherPositions stamp: 'IO 11/1/2020 18:10:51'!
ERROR!

!testRun: #TerniLapilliGameTest #test04OCanPut stamp: 'IO 11/1/2020 18:10:51'!
ERROR!

!testRun: #TerniLapilliGameTest #test05XCanMove stamp: 'IO 11/1/2020 18:10:51'!
ERROR!

!testRun: #TerniLapilliGameTest #test06OCanMove stamp: 'IO 11/1/2020 18:10:51'!
ERROR!

!testRun: #TerniLapilliGameTest #test07XWinsWithTheFirstColumn stamp: 'IO 11/1/2020 18:10:51'!
ERROR!

!testRun: #TerniLapilliGameTest #test08XHasntWonYet stamp: 'IO 11/1/2020 18:10:51'!
ERROR!

!testRun: #TerniLapilliGameTest #test09XWinsWithTheSecondColumn stamp: 'IO 11/1/2020 18:10:51'!
ERROR!

!testRun: #TerniLapilliGameTest #test10XWinsWithTheThirdColumn stamp: 'IO 11/1/2020 18:10:51'!
ERROR!

!testRun: #TerniLapilliGameTest #test11XWinsWithTheFirstRow stamp: 'IO 11/1/2020 18:10:51'!
ERROR!

!testRun: #TerniLapilliGameTest #test12XWinsWithTheSecondRow stamp: 'IO 11/1/2020 18:10:51'!
ERROR!

!testRun: #TerniLapilliGameTest #test13XWinsWithTheThirdRow stamp: 'IO 11/1/2020 18:10:51'!
ERROR!

!testRun: #TerniLapilliGameTest #test14XWinsWithTheCrescentDiagonal stamp: 'IO 11/1/2020 18:10:51'!
ERROR!

!testRun: #TerniLapilliGameTest #test15XWinsWithTheDescendantDiagonal stamp: 'IO 11/1/2020 18:10:51'!
ERROR!

!testRun: #TerniLapilliGameTest #test16OWnis stamp: 'IO 11/1/2020 18:10:51'!
ERROR!

!testRun: #TerniLapilliGameTest #test17OCantStartPutting stamp: 'IO 11/1/2020 18:10:51'!
FAILURE!

!testRun: #TerniLapilliGameTest #test18XCantPutTwiceInARow stamp: 'IO 11/1/2020 18:10:51'!
ERROR!

!testRun: #TerniLapilliGameTest #test19XCantMoveTwiceInARow stamp: 'IO 11/1/2020 18:10:51'!
ERROR!

!testRun: #TerniLapilliGameTest #test20OCantPutTwiceInARow stamp: 'IO 11/1/2020 18:10:51'!
ERROR!

!testRun: #TerniLapilliGameTest #test21OCantMoveTwiceInARow stamp: 'IO 11/1/2020 18:10:51'!
ERROR!

!testRun: #TerniLapilliGameTest #test22XCantMoveOnTheirFirstTurn stamp: 'IO 11/1/2020 18:10:51'!
FAILURE!

!testRun: #TerniLapilliGameTest #test23XCantMoveOnTheirSecondTurn stamp: 'IO 11/1/2020 18:10:51'!
ERROR!

!testRun: #TerniLapilliGameTest #test24XCantMoveOnTheirThirdTurn stamp: 'IO 11/1/2020 18:10:51'!
ERROR!

!testRun: #TerniLapilliGameTest #test25OCantMoveOnTheirFirstTurn stamp: 'IO 11/1/2020 18:10:51'!
ERROR!

!testRun: #TerniLapilliGameTest #test26OCantMoveOnTheirSecondTurn stamp: 'IO 11/1/2020 18:10:51'!
ERROR!

!testRun: #TerniLapilliGameTest #test27OCantMoveOnTheirThirdTurn stamp: 'IO 11/1/2020 18:10:51'!
ERROR!

!testRun: #TerniLapilliGameTest #test28XCantPutAfterTheirThirdTurn stamp: 'IO 11/1/2020 18:10:51'!
ERROR!

!testRun: #TerniLapilliGameTest #test29OCantPutAfterTheirThirdTurn stamp: 'IO 11/1/2020 18:10:51'!
ERROR!

!testRun: #TerniLapilliGameTest #test30OCantPutAfterXWon stamp: 'IO 11/1/2020 18:10:51'!
ERROR!

!testRun: #TerniLapilliGameTest #test31OCantMoveAfterXWon stamp: 'IO 11/1/2020 18:10:51'!
ERROR!

!testRun: #TerniLapilliGameTest #test32XCantMoveAfterOWon stamp: 'IO 11/1/2020 18:10:51'!
ERROR!

!testRun: #TerniLapilliGameTest #test33XCantPutAfterOWon stamp: 'IO 11/1/2020 18:10:51'!
ERROR!

!testRun: #TerniLapilliGameTest #test34XCantPutInAnOccupiedSpace stamp: 'IO 11/1/2020 18:10:51'!
ERROR!

!testRun: #TerniLapilliGameTest #test35OCantPutInAnOccupiedSpace stamp: 'IO 11/1/2020 18:10:51'!
ERROR!

!testRun: #TerniLapilliGameTest #test36XCantMoveToAnOccupiedSpace stamp: 'IO 11/1/2020 18:10:51'!
ERROR!

!testRun: #TerniLapilliGameTest #test37OCantMoveToAnOccupiedSpace stamp: 'IO 11/1/2020 18:10:51'!
ERROR!

!testRun: #TerniLapilliGameTest #test38XCantPutOutsideTheBoardUnderXAxis stamp: 'IO 11/1/2020 18:10:51'!
FAILURE!

!testRun: #TerniLapilliGameTest #test39XCantPutOutsideTheBoardAboveXAxis stamp: 'IO 11/1/2020 18:10:51'!
FAILURE!

!testRun: #TerniLapilliGameTest #test40XCantPutOutsideTheBoardUnderNorAboveTheYAxis stamp: 'IO 11/1/2020 18:10:51'!
FAILURE!

!testRun: #TerniLapilliGameTest #test41OCantPutOutsideTheBoard stamp: 'IO 11/1/2020 18:10:51'!
ERROR!

!testRun: #TerniLapilliGameTest #test42XCantMoveToOutsideTheBoard stamp: 'IO 11/1/2020 18:10:51'!
ERROR!

!testRun: #TerniLapilliGameTest #test43OCantMoveToOutsideTheBoard stamp: 'IO 11/1/2020 18:10:51'!
ERROR!

!testRun: #TerniLapilliGameTest #test44XCantMoveTokensThatDontBelongToThem stamp: 'IO 11/1/2020 18:10:51'!
ERROR!

!testRun: #TerniLapilliGameTest #test45OCantMoveTokensThatDontBelongToThem stamp: 'IO 11/1/2020 18:10:51'!
ERROR!

!testRun: #TerniLapilliGameTest #test46XCantMoveaTokenOutsideItsNeighbors stamp: 'IO 11/1/2020 18:10:51'!
ERROR!

!testRun: #TerniLapilliGameTest #test47OCantMoveATokenOutsideItsNeighbors stamp: 'IO 11/1/2020 18:10:51'!
ERROR!

!testRun: #TerniLapilliGameTest #test01XCanPutAToken stamp: 'IO 11/1/2020 18:11:08'!
ERROR!

!methodRemoval: TerniLapilliGame #includesColorXAt: stamp: 'IO 11/1/2020 18:11:42'!
includesColorXAt: aPosition

	"returns true if a board position has a token placed by O player or not"

	^state includesColorXAt: aPosition.
!
!TerniLapilliGame methodsFor: 'testing' stamp: 'IO 11/1/2020 18:12:08'!
hasXAt: aPosition

	"returns true if a board position has a token placed by O player or not"

	^state hasXAt: aPosition.
! !

!testRun: #TerniLapilliGameTest #test01XCanPutAToken stamp: 'IO 11/1/2020 18:12:35'!
ERROR!

!testRun: #TerniLapilliGameTest #test02puttingDoesNotAffectOtherPositions stamp: 'IO 11/1/2020 18:12:35'!
ERROR!

!testRun: #TerniLapilliGameTest #test03XCanPutInOtherPositions stamp: 'IO 11/1/2020 18:12:35'!
ERROR!

!testRun: #TerniLapilliGameTest #test04OCanPut stamp: 'IO 11/1/2020 18:12:35'!
ERROR!

!testRun: #TerniLapilliGameTest #test05XCanMove stamp: 'IO 11/1/2020 18:12:35'!
ERROR!

!testRun: #TerniLapilliGameTest #test06OCanMove stamp: 'IO 11/1/2020 18:12:35'!
ERROR!

!testRun: #TerniLapilliGameTest #test07XWinsWithTheFirstColumn stamp: 'IO 11/1/2020 18:12:35'!
ERROR!

!testRun: #TerniLapilliGameTest #test08XHasntWonYet stamp: 'IO 11/1/2020 18:12:35'!
ERROR!

!testRun: #TerniLapilliGameTest #test09XWinsWithTheSecondColumn stamp: 'IO 11/1/2020 18:12:35'!
ERROR!

!testRun: #TerniLapilliGameTest #test10XWinsWithTheThirdColumn stamp: 'IO 11/1/2020 18:12:35'!
ERROR!

!testRun: #TerniLapilliGameTest #test11XWinsWithTheFirstRow stamp: 'IO 11/1/2020 18:12:35'!
ERROR!

!testRun: #TerniLapilliGameTest #test12XWinsWithTheSecondRow stamp: 'IO 11/1/2020 18:12:35'!
ERROR!

!testRun: #TerniLapilliGameTest #test13XWinsWithTheThirdRow stamp: 'IO 11/1/2020 18:12:35'!
ERROR!

!testRun: #TerniLapilliGameTest #test14XWinsWithTheCrescentDiagonal stamp: 'IO 11/1/2020 18:12:35'!
ERROR!

!testRun: #TerniLapilliGameTest #test15XWinsWithTheDescendantDiagonal stamp: 'IO 11/1/2020 18:12:35'!
ERROR!

!testRun: #TerniLapilliGameTest #test16OWnis stamp: 'IO 11/1/2020 18:12:35'!
ERROR!

!testRun: #TerniLapilliGameTest #test17OCantStartPutting stamp: 'IO 11/1/2020 18:12:35'!
FAILURE!

!testRun: #TerniLapilliGameTest #test18XCantPutTwiceInARow stamp: 'IO 11/1/2020 18:12:35'!
ERROR!

!testRun: #TerniLapilliGameTest #test19XCantMoveTwiceInARow stamp: 'IO 11/1/2020 18:12:35'!
ERROR!

!testRun: #TerniLapilliGameTest #test20OCantPutTwiceInARow stamp: 'IO 11/1/2020 18:12:35'!
ERROR!

!testRun: #TerniLapilliGameTest #test21OCantMoveTwiceInARow stamp: 'IO 11/1/2020 18:12:35'!
ERROR!

!testRun: #TerniLapilliGameTest #test22XCantMoveOnTheirFirstTurn stamp: 'IO 11/1/2020 18:12:35'!
FAILURE!

!testRun: #TerniLapilliGameTest #test23XCantMoveOnTheirSecondTurn stamp: 'IO 11/1/2020 18:12:35'!
ERROR!

!testRun: #TerniLapilliGameTest #test24XCantMoveOnTheirThirdTurn stamp: 'IO 11/1/2020 18:12:35'!
ERROR!

!testRun: #TerniLapilliGameTest #test25OCantMoveOnTheirFirstTurn stamp: 'IO 11/1/2020 18:12:35'!
ERROR!

!testRun: #TerniLapilliGameTest #test26OCantMoveOnTheirSecondTurn stamp: 'IO 11/1/2020 18:12:35'!
ERROR!

!testRun: #TerniLapilliGameTest #test27OCantMoveOnTheirThirdTurn stamp: 'IO 11/1/2020 18:12:35'!
ERROR!

!testRun: #TerniLapilliGameTest #test28XCantPutAfterTheirThirdTurn stamp: 'IO 11/1/2020 18:12:35'!
ERROR!

!testRun: #TerniLapilliGameTest #test29OCantPutAfterTheirThirdTurn stamp: 'IO 11/1/2020 18:12:35'!
ERROR!

!testRun: #TerniLapilliGameTest #test30OCantPutAfterXWon stamp: 'IO 11/1/2020 18:12:35'!
ERROR!

!testRun: #TerniLapilliGameTest #test31OCantMoveAfterXWon stamp: 'IO 11/1/2020 18:12:35'!
ERROR!

!testRun: #TerniLapilliGameTest #test32XCantMoveAfterOWon stamp: 'IO 11/1/2020 18:12:35'!
ERROR!

!testRun: #TerniLapilliGameTest #test33XCantPutAfterOWon stamp: 'IO 11/1/2020 18:12:35'!
ERROR!

!testRun: #TerniLapilliGameTest #test34XCantPutInAnOccupiedSpace stamp: 'IO 11/1/2020 18:12:35'!
ERROR!

!testRun: #TerniLapilliGameTest #test35OCantPutInAnOccupiedSpace stamp: 'IO 11/1/2020 18:12:35'!
ERROR!

!testRun: #TerniLapilliGameTest #test36XCantMoveToAnOccupiedSpace stamp: 'IO 11/1/2020 18:12:35'!
ERROR!

!testRun: #TerniLapilliGameTest #test37OCantMoveToAnOccupiedSpace stamp: 'IO 11/1/2020 18:12:35'!
ERROR!

!testRun: #TerniLapilliGameTest #test38XCantPutOutsideTheBoardUnderXAxis stamp: 'IO 11/1/2020 18:12:35'!
FAILURE!

!testRun: #TerniLapilliGameTest #test39XCantPutOutsideTheBoardAboveXAxis stamp: 'IO 11/1/2020 18:12:35'!
FAILURE!

!testRun: #TerniLapilliGameTest #test40XCantPutOutsideTheBoardUnderNorAboveTheYAxis stamp: 'IO 11/1/2020 18:12:35'!
FAILURE!

!testRun: #TerniLapilliGameTest #test41OCantPutOutsideTheBoard stamp: 'IO 11/1/2020 18:12:35'!
ERROR!

!testRun: #TerniLapilliGameTest #test42XCantMoveToOutsideTheBoard stamp: 'IO 11/1/2020 18:12:35'!
ERROR!

!testRun: #TerniLapilliGameTest #test43OCantMoveToOutsideTheBoard stamp: 'IO 11/1/2020 18:12:35'!
ERROR!

!testRun: #TerniLapilliGameTest #test44XCantMoveTokensThatDontBelongToThem stamp: 'IO 11/1/2020 18:12:35'!
ERROR!

!testRun: #TerniLapilliGameTest #test45OCantMoveTokensThatDontBelongToThem stamp: 'IO 11/1/2020 18:12:35'!
ERROR!

!testRun: #TerniLapilliGameTest #test46XCantMoveaTokenOutsideItsNeighbors stamp: 'IO 11/1/2020 18:12:35'!
ERROR!

!testRun: #TerniLapilliGameTest #test47OCantMoveATokenOutsideItsNeighbors stamp: 'IO 11/1/2020 18:12:35'!
ERROR!
!TerniLapilliGameTest methodsFor: 'put tokens phase' stamp: 'IO 11/1/2020 18:13:08' prior: 50880350!
test01XCanPutAToken
	"x pone en 0@0"
	| aGame |
	aGame := TerniLapilliGame new.
	
	aGame xPutsOn: 0@0.

	self assert: (aGame hasXAt: (0@0)).
! !
!TerniLapilliGameTest methodsFor: 'put tokens phase' stamp: 'IO 11/1/2020 18:13:14' prior: 50880358!
test02puttingDoesNotAffectOtherPositions
	"x pone en 0@0 pero no en 0@1"
	| aGame |
	aGame := TerniLapilliGame new.
	
	aGame xPutsOn: 0@0.

	self deny: (aGame hasXAt: 0@1).
! !
!TerniLapilliGameTest methodsFor: 'put tokens phase' stamp: 'IO 11/1/2020 18:13:23' prior: 50880367!
test03XCanPutInOtherPositions
	"x pone en 0@1"
	| aGame |
	aGame := TerniLapilliGame new.
	
	aGame xPutsOn: 0@1.

	self assert: (aGame hasXAt: 0@1).
! !
!TerniLapilliGameTest methodsFor: 'put tokens phase' stamp: 'IO 11/1/2020 18:13:28' prior: 50880375!
test04OCanPut
	"o pone en 0@0"
	| aGame |
	aGame := TerniLapilliGame new.
	
	aGame xPutsOn: 0@1.
	aGame oPutsOn: 0@0.

	self assert: (aGame hasOAt: (0@0)).
! !
!TerniLapilliGameTest methodsFor: 'move tokens phase' stamp: 'IO 11/1/2020 18:13:36' prior: 50880384!
test05XCanMove
	"movimiento legal desp de haber jugado las tres fichas :D"
	| aGame |
	aGame := self createGameInMovePhase.
	
	aGame xMoves: (2@0) to: (1@0).

	self assert: (aGame hasXAt: (1@0)).
! !
!TerniLapilliGameTest methodsFor: 'move tokens phase' stamp: 'IO 11/1/2020 18:13:41' prior: 50880394!
test06OCanMove
	"movimiento legal de O desp de haber jugado las tres fichas :D"
	| aGame |
	aGame := self createGameInMovePhase.
	
	aGame xMoves: (2@0) to: (1@0).
	aGame oMoves: (2@1) to: (1@1).

	self assert: (aGame hasOAt: (1@1)).
! !
!TerniLapilliGameTest methodsFor: 'winning positions' stamp: 'IO 11/1/2020 18:15:23' prior: 50880405!
test07XWinsWithTheFirstColumn
	"primer posicion ganadora para X, la primer columna"
	| aGame |
	aGame := TerniLapilliGame new.
	
	aGame xPutsOn: 0@0.
	aGame oPutsOn: 0@1.
	aGame xPutsOn: 1@0.
	aGame oPutsOn: 1@1.
	aGame xPutsOn: 2@0.
	
	self assert: aGame hasXWon.
! !
!TerniLapilliGameTest methodsFor: 'winning positions' stamp: 'IO 11/1/2020 18:15:30' prior: 50880417!
test08XHasntWonYet
	"X todavia no gano"
	| aGame |
	aGame := TerniLapilliGame new.
	
	aGame xPutsOn: 0@0.
	aGame oPutsOn: 0@1.
	aGame xPutsOn: 1@0.
	aGame oPutsOn: 1@1.
	aGame xPutsOn: 2@2.
	
	self deny: aGame hasXWon.
! !
!TerniLapilliGameTest methodsFor: 'winning positions' stamp: 'IO 11/1/2020 18:15:50' prior: 50880428!
test09XWinsWithTheSecondColumn
	"X gana competando la segunda columna"
	| aGame |
	aGame := TerniLapilliGame new.
	
	aGame xPutsOn: 0@1.
	aGame oPutsOn: 0@2.
	aGame xPutsOn: 1@1.
	aGame oPutsOn: 1@2.
	aGame xPutsOn: 2@1.
	
	self assert: aGame hasXWon.
! !
!TerniLapilliGameTest methodsFor: 'winning positions' stamp: 'IO 11/1/2020 18:15:53' prior: 50880440!
test10XWinsWithTheThirdColumn
	"ahora X gana competando la tercer columna"
	| aGame |
	aGame := TerniLapilliGame new.
	
	aGame xPutsOn: 0@2.
	aGame oPutsOn: 0@0.
	aGame xPutsOn: 1@2.
	aGame oPutsOn: 1@0.
	aGame xPutsOn: 2@2.
	
	self assert: aGame hasXWon.
! !
!TerniLapilliGameTest methodsFor: 'winning positions' stamp: 'IO 11/1/2020 18:15:57' prior: 50880452!
test11XWinsWithTheFirstRow
	"X gana completando la primer fila"
	| aGame |
	aGame := TerniLapilliGame new.
	
	aGame xPutsOn: 0@0.
	aGame oPutsOn: 1@0.
	aGame xPutsOn: 0@1.
	aGame oPutsOn: 1@1.
	aGame xPutsOn: 0@2.
	
	self assert: aGame hasXWon.
! !
!TerniLapilliGameTest methodsFor: 'winning positions' stamp: 'IO 11/1/2020 18:16:00' prior: 50880463!
test12XWinsWithTheSecondRow
	"X gana competando la segunda fila"
	| aGame |
	aGame := TerniLapilliGame new.
	
	aGame xPutsOn: 1@0.
	aGame oPutsOn: 2@0.
	aGame xPutsOn: 1@1.
	aGame oPutsOn: 2@1.
	aGame xPutsOn: 1@2.
	
	self assert: aGame hasXWon.
! !
!TerniLapilliGameTest methodsFor: 'winning positions' stamp: 'IO 11/1/2020 18:16:03' prior: 50880474!
test13XWinsWithTheThirdRow
	"X gana competando la tercer fila"
	| aGame |
	aGame := TerniLapilliGame new.
	
	aGame xPutsOn: 2@0.
	aGame oPutsOn: 0@0.
	aGame xPutsOn: 2@1.
	aGame oPutsOn: 0@1.
	aGame xPutsOn: 2@2.
	
	self assert: aGame hasXWon.
! !
!TerniLapilliGameTest methodsFor: 'winning positions' stamp: 'IO 11/1/2020 18:16:06' prior: 50880485!
test14XWinsWithTheCrescentDiagonal
	"X gana competando la diagonal creciente"
	| aGame |
	aGame := TerniLapilliGame new.
	
	aGame xPutsOn: 0@0.
	aGame oPutsOn: 1@0.
	aGame xPutsOn: 1@1.
	aGame oPutsOn: 2@1.
	aGame xPutsOn: 2@2.
	
	self assert: aGame hasXWon.
! !
!TerniLapilliGameTest methodsFor: 'winning positions' stamp: 'IO 11/1/2020 18:16:10' prior: 50880497!
test15XWinsWithTheDescendantDiagonal
	"X gana competando la diagonal decreciente"
	| aGame |
	aGame := TerniLapilliGame new.
	
	aGame xPutsOn: 2@0.
	aGame oPutsOn: 1@0.
	aGame xPutsOn: 1@1.
	aGame oPutsOn: 2@1.
	aGame xPutsOn: 0@2.
	
	self assert: aGame hasXWon.
! !
!TerniLapilliGameTest methodsFor: 'winning positions' stamp: 'IO 11/1/2020 18:16:13' prior: 50880509!
test16OWnis
	"ahora gana O!!"
	| aGame |
	aGame := TerniLapilliGame new.
	
	aGame xPutsOn: 0@0.
	aGame oPutsOn: 0@1.
	aGame xPutsOn: 2@0.
	aGame oPutsOn: 1@1.
	aGame xPutsOn: 2@2.
	aGame oPutsOn: 2@1.
	
	self assert: aGame hasXWon.
! !

!testRun: #TerniLapilliGameTest #test46XCantMoveaTokenOutsideItsNeighbors stamp: 'IO 11/1/2020 18:17:09'!
ERROR!
!TerniLapilliGame methodsFor: 'testing' stamp: 'IO 11/1/2020 18:17:33' prior: 50887743!
hasTokenAt: aPosition

	"returns true if a board position has a token placed or not"

	^(state hasOAt: aPosition) or: (state hasXAt: aPosition).
! !

!testRun: #TerniLapilliGameTest #test46XCantMoveaTokenOutsideItsNeighbors stamp: 'IO 11/1/2020 18:17:38'!
PASSED!

!testRun: #TerniLapilliGameTest #test01XCanPutAToken stamp: 'IO 11/1/2020 18:17:38'!
PASSED!

!testRun: #TerniLapilliGameTest #test02puttingDoesNotAffectOtherPositions stamp: 'IO 11/1/2020 18:17:38'!
PASSED!

!testRun: #TerniLapilliGameTest #test03XCanPutInOtherPositions stamp: 'IO 11/1/2020 18:17:38'!
PASSED!

!testRun: #TerniLapilliGameTest #test04OCanPut stamp: 'IO 11/1/2020 18:17:38'!
PASSED!

!testRun: #TerniLapilliGameTest #test05XCanMove stamp: 'IO 11/1/2020 18:17:38'!
PASSED!

!testRun: #TerniLapilliGameTest #test06OCanMove stamp: 'IO 11/1/2020 18:17:38'!
PASSED!

!testRun: #TerniLapilliGameTest #test07XWinsWithTheFirstColumn stamp: 'IO 11/1/2020 18:17:38'!
PASSED!

!testRun: #TerniLapilliGameTest #test08XHasntWonYet stamp: 'IO 11/1/2020 18:17:38'!
PASSED!

!testRun: #TerniLapilliGameTest #test09XWinsWithTheSecondColumn stamp: 'IO 11/1/2020 18:17:38'!
PASSED!

!testRun: #TerniLapilliGameTest #test10XWinsWithTheThirdColumn stamp: 'IO 11/1/2020 18:17:38'!
PASSED!

!testRun: #TerniLapilliGameTest #test11XWinsWithTheFirstRow stamp: 'IO 11/1/2020 18:17:38'!
PASSED!

!testRun: #TerniLapilliGameTest #test12XWinsWithTheSecondRow stamp: 'IO 11/1/2020 18:17:38'!
PASSED!

!testRun: #TerniLapilliGameTest #test13XWinsWithTheThirdRow stamp: 'IO 11/1/2020 18:17:38'!
PASSED!

!testRun: #TerniLapilliGameTest #test14XWinsWithTheCrescentDiagonal stamp: 'IO 11/1/2020 18:17:38'!
PASSED!

!testRun: #TerniLapilliGameTest #test15XWinsWithTheDescendantDiagonal stamp: 'IO 11/1/2020 18:17:38'!
PASSED!

!testRun: #TerniLapilliGameTest #test16OWnis stamp: 'IO 11/1/2020 18:17:38'!
FAILURE!

!testRun: #TerniLapilliGameTest #test17OCantStartPutting stamp: 'IO 11/1/2020 18:17:38'!
PASSED!

!testRun: #TerniLapilliGameTest #test18XCantPutTwiceInARow stamp: 'IO 11/1/2020 18:17:38'!
PASSED!

!testRun: #TerniLapilliGameTest #test19XCantMoveTwiceInARow stamp: 'IO 11/1/2020 18:17:38'!
PASSED!

!testRun: #TerniLapilliGameTest #test20OCantPutTwiceInARow stamp: 'IO 11/1/2020 18:17:38'!
PASSED!

!testRun: #TerniLapilliGameTest #test21OCantMoveTwiceInARow stamp: 'IO 11/1/2020 18:17:38'!
PASSED!

!testRun: #TerniLapilliGameTest #test22XCantMoveOnTheirFirstTurn stamp: 'IO 11/1/2020 18:17:38'!
PASSED!

!testRun: #TerniLapilliGameTest #test23XCantMoveOnTheirSecondTurn stamp: 'IO 11/1/2020 18:17:38'!
PASSED!

!testRun: #TerniLapilliGameTest #test24XCantMoveOnTheirThirdTurn stamp: 'IO 11/1/2020 18:17:38'!
PASSED!

!testRun: #TerniLapilliGameTest #test25OCantMoveOnTheirFirstTurn stamp: 'IO 11/1/2020 18:17:38'!
PASSED!

!testRun: #TerniLapilliGameTest #test26OCantMoveOnTheirSecondTurn stamp: 'IO 11/1/2020 18:17:38'!
PASSED!

!testRun: #TerniLapilliGameTest #test27OCantMoveOnTheirThirdTurn stamp: 'IO 11/1/2020 18:17:38'!
PASSED!

!testRun: #TerniLapilliGameTest #test28XCantPutAfterTheirThirdTurn stamp: 'IO 11/1/2020 18:17:38'!
PASSED!

!testRun: #TerniLapilliGameTest #test29OCantPutAfterTheirThirdTurn stamp: 'IO 11/1/2020 18:17:38'!
PASSED!

!testRun: #TerniLapilliGameTest #test30OCantPutAfterXWon stamp: 'IO 11/1/2020 18:17:38'!
PASSED!

!testRun: #TerniLapilliGameTest #test31OCantMoveAfterXWon stamp: 'IO 11/1/2020 18:17:38'!
PASSED!

!testRun: #TerniLapilliGameTest #test32XCantMoveAfterOWon stamp: 'IO 11/1/2020 18:17:38'!
PASSED!

!testRun: #TerniLapilliGameTest #test33XCantPutAfterOWon stamp: 'IO 11/1/2020 18:17:38'!
PASSED!

!testRun: #TerniLapilliGameTest #test34XCantPutInAnOccupiedSpace stamp: 'IO 11/1/2020 18:17:38'!
PASSED!

!testRun: #TerniLapilliGameTest #test35OCantPutInAnOccupiedSpace stamp: 'IO 11/1/2020 18:17:38'!
PASSED!

!testRun: #TerniLapilliGameTest #test36XCantMoveToAnOccupiedSpace stamp: 'IO 11/1/2020 18:17:38'!
PASSED!

!testRun: #TerniLapilliGameTest #test37OCantMoveToAnOccupiedSpace stamp: 'IO 11/1/2020 18:17:38'!
PASSED!

!testRun: #TerniLapilliGameTest #test38XCantPutOutsideTheBoardUnderXAxis stamp: 'IO 11/1/2020 18:17:38'!
PASSED!

!testRun: #TerniLapilliGameTest #test39XCantPutOutsideTheBoardAboveXAxis stamp: 'IO 11/1/2020 18:17:38'!
PASSED!

!testRun: #TerniLapilliGameTest #test40XCantPutOutsideTheBoardUnderNorAboveTheYAxis stamp: 'IO 11/1/2020 18:17:38'!
PASSED!

!testRun: #TerniLapilliGameTest #test41OCantPutOutsideTheBoard stamp: 'IO 11/1/2020 18:17:38'!
PASSED!

!testRun: #TerniLapilliGameTest #test42XCantMoveToOutsideTheBoard stamp: 'IO 11/1/2020 18:17:38'!
PASSED!

!testRun: #TerniLapilliGameTest #test43OCantMoveToOutsideTheBoard stamp: 'IO 11/1/2020 18:17:38'!
PASSED!

!testRun: #TerniLapilliGameTest #test44XCantMoveTokensThatDontBelongToThem stamp: 'IO 11/1/2020 18:17:38'!
PASSED!

!testRun: #TerniLapilliGameTest #test45OCantMoveTokensThatDontBelongToThem stamp: 'IO 11/1/2020 18:17:38'!
PASSED!

!testRun: #TerniLapilliGameTest #test46XCantMoveaTokenOutsideItsNeighbors stamp: 'IO 11/1/2020 18:17:38'!
PASSED!

!testRun: #TerniLapilliGameTest #test47OCantMoveATokenOutsideItsNeighbors stamp: 'IO 11/1/2020 18:17:38'!
PASSED!

!testRun: #TerniLapilliGameTest #test16OWnis stamp: 'IO 11/1/2020 18:17:38'!
FAILURE!

!testRun: #TerniLapilliGameTest #test46XCantMoveaTokenOutsideItsNeighbors stamp: 'IO 11/1/2020 18:17:46'!
PASSED!

!testRun: #TerniLapilliGameTest #test01XCanPutAToken stamp: 'IO 11/1/2020 18:17:46'!
PASSED!

!testRun: #TerniLapilliGameTest #test02puttingDoesNotAffectOtherPositions stamp: 'IO 11/1/2020 18:17:46'!
PASSED!

!testRun: #TerniLapilliGameTest #test03XCanPutInOtherPositions stamp: 'IO 11/1/2020 18:17:46'!
PASSED!

!testRun: #TerniLapilliGameTest #test04OCanPut stamp: 'IO 11/1/2020 18:17:46'!
PASSED!

!testRun: #TerniLapilliGameTest #test05XCanMove stamp: 'IO 11/1/2020 18:17:46'!
PASSED!

!testRun: #TerniLapilliGameTest #test06OCanMove stamp: 'IO 11/1/2020 18:17:46'!
PASSED!

!testRun: #TerniLapilliGameTest #test07XWinsWithTheFirstColumn stamp: 'IO 11/1/2020 18:17:46'!
PASSED!

!testRun: #TerniLapilliGameTest #test08XHasntWonYet stamp: 'IO 11/1/2020 18:17:46'!
PASSED!

!testRun: #TerniLapilliGameTest #test09XWinsWithTheSecondColumn stamp: 'IO 11/1/2020 18:17:46'!
PASSED!

!testRun: #TerniLapilliGameTest #test10XWinsWithTheThirdColumn stamp: 'IO 11/1/2020 18:17:46'!
PASSED!

!testRun: #TerniLapilliGameTest #test11XWinsWithTheFirstRow stamp: 'IO 11/1/2020 18:17:46'!
PASSED!

!testRun: #TerniLapilliGameTest #test12XWinsWithTheSecondRow stamp: 'IO 11/1/2020 18:17:46'!
PASSED!

!testRun: #TerniLapilliGameTest #test13XWinsWithTheThirdRow stamp: 'IO 11/1/2020 18:17:46'!
PASSED!

!testRun: #TerniLapilliGameTest #test14XWinsWithTheCrescentDiagonal stamp: 'IO 11/1/2020 18:17:46'!
PASSED!

!testRun: #TerniLapilliGameTest #test15XWinsWithTheDescendantDiagonal stamp: 'IO 11/1/2020 18:17:46'!
PASSED!

!testRun: #TerniLapilliGameTest #test16OWnis stamp: 'IO 11/1/2020 18:17:46'!
FAILURE!

!testRun: #TerniLapilliGameTest #test17OCantStartPutting stamp: 'IO 11/1/2020 18:17:46'!
PASSED!

!testRun: #TerniLapilliGameTest #test18XCantPutTwiceInARow stamp: 'IO 11/1/2020 18:17:46'!
PASSED!

!testRun: #TerniLapilliGameTest #test19XCantMoveTwiceInARow stamp: 'IO 11/1/2020 18:17:46'!
PASSED!

!testRun: #TerniLapilliGameTest #test20OCantPutTwiceInARow stamp: 'IO 11/1/2020 18:17:46'!
PASSED!

!testRun: #TerniLapilliGameTest #test21OCantMoveTwiceInARow stamp: 'IO 11/1/2020 18:17:46'!
PASSED!

!testRun: #TerniLapilliGameTest #test22XCantMoveOnTheirFirstTurn stamp: 'IO 11/1/2020 18:17:46'!
PASSED!

!testRun: #TerniLapilliGameTest #test23XCantMoveOnTheirSecondTurn stamp: 'IO 11/1/2020 18:17:46'!
PASSED!

!testRun: #TerniLapilliGameTest #test24XCantMoveOnTheirThirdTurn stamp: 'IO 11/1/2020 18:17:46'!
PASSED!

!testRun: #TerniLapilliGameTest #test25OCantMoveOnTheirFirstTurn stamp: 'IO 11/1/2020 18:17:46'!
PASSED!

!testRun: #TerniLapilliGameTest #test26OCantMoveOnTheirSecondTurn stamp: 'IO 11/1/2020 18:17:46'!
PASSED!

!testRun: #TerniLapilliGameTest #test27OCantMoveOnTheirThirdTurn stamp: 'IO 11/1/2020 18:17:46'!
PASSED!

!testRun: #TerniLapilliGameTest #test28XCantPutAfterTheirThirdTurn stamp: 'IO 11/1/2020 18:17:46'!
PASSED!

!testRun: #TerniLapilliGameTest #test29OCantPutAfterTheirThirdTurn stamp: 'IO 11/1/2020 18:17:46'!
PASSED!

!testRun: #TerniLapilliGameTest #test30OCantPutAfterXWon stamp: 'IO 11/1/2020 18:17:46'!
PASSED!

!testRun: #TerniLapilliGameTest #test31OCantMoveAfterXWon stamp: 'IO 11/1/2020 18:17:46'!
PASSED!

!testRun: #TerniLapilliGameTest #test32XCantMoveAfterOWon stamp: 'IO 11/1/2020 18:17:46'!
PASSED!

!testRun: #TerniLapilliGameTest #test33XCantPutAfterOWon stamp: 'IO 11/1/2020 18:17:46'!
PASSED!

!testRun: #TerniLapilliGameTest #test34XCantPutInAnOccupiedSpace stamp: 'IO 11/1/2020 18:17:46'!
PASSED!

!testRun: #TerniLapilliGameTest #test35OCantPutInAnOccupiedSpace stamp: 'IO 11/1/2020 18:17:46'!
PASSED!

!testRun: #TerniLapilliGameTest #test36XCantMoveToAnOccupiedSpace stamp: 'IO 11/1/2020 18:17:46'!
PASSED!

!testRun: #TerniLapilliGameTest #test37OCantMoveToAnOccupiedSpace stamp: 'IO 11/1/2020 18:17:46'!
PASSED!

!testRun: #TerniLapilliGameTest #test38XCantPutOutsideTheBoardUnderXAxis stamp: 'IO 11/1/2020 18:17:46'!
PASSED!

!testRun: #TerniLapilliGameTest #test39XCantPutOutsideTheBoardAboveXAxis stamp: 'IO 11/1/2020 18:17:46'!
PASSED!

!testRun: #TerniLapilliGameTest #test40XCantPutOutsideTheBoardUnderNorAboveTheYAxis stamp: 'IO 11/1/2020 18:17:46'!
PASSED!

!testRun: #TerniLapilliGameTest #test41OCantPutOutsideTheBoard stamp: 'IO 11/1/2020 18:17:46'!
PASSED!

!testRun: #TerniLapilliGameTest #test42XCantMoveToOutsideTheBoard stamp: 'IO 11/1/2020 18:17:46'!
PASSED!

!testRun: #TerniLapilliGameTest #test43OCantMoveToOutsideTheBoard stamp: 'IO 11/1/2020 18:17:46'!
PASSED!

!testRun: #TerniLapilliGameTest #test44XCantMoveTokensThatDontBelongToThem stamp: 'IO 11/1/2020 18:17:46'!
PASSED!

!testRun: #TerniLapilliGameTest #test45OCantMoveTokensThatDontBelongToThem stamp: 'IO 11/1/2020 18:17:46'!
PASSED!

!testRun: #TerniLapilliGameTest #test46XCantMoveaTokenOutsideItsNeighbors stamp: 'IO 11/1/2020 18:17:46'!
PASSED!

!testRun: #TerniLapilliGameTest #test47OCantMoveATokenOutsideItsNeighbors stamp: 'IO 11/1/2020 18:17:46'!
PASSED!

!testRun: #TerniLapilliGameTest #test16OWnis stamp: 'IO 11/1/2020 18:17:46'!
FAILURE!

!testRun: #TerniLapilliGameTest #test16OWnis stamp: 'IO 11/1/2020 18:18:20'!
FAILURE!
!TerniLapilliGameTest methodsFor: 'winning positions' stamp: 'IO 11/1/2020 18:18:30' prior: 50888716!
test16OWnis
	"ahora gana O!!"
	| aGame |
	aGame := TerniLapilliGame new.
	
	aGame xPutsOn: 0@0.
	aGame oPutsOn: 0@1.
	aGame xPutsOn: 2@0.
	aGame oPutsOn: 1@1.
	aGame xPutsOn: 2@2.
	aGame oPutsOn: 2@1.
	
	self assert: aGame hasOWon.
! !

!testRun: #TerniLapilliGameTest #test16OWnis stamp: 'IO 11/1/2020 18:18:31'!
PASSED!

!testRun: #TerniLapilliGameTest #test01XCanPutAToken stamp: 'IO 11/1/2020 18:18:31'!
PASSED!

!testRun: #TerniLapilliGameTest #test02puttingDoesNotAffectOtherPositions stamp: 'IO 11/1/2020 18:18:31'!
PASSED!

!testRun: #TerniLapilliGameTest #test03XCanPutInOtherPositions stamp: 'IO 11/1/2020 18:18:31'!
PASSED!

!testRun: #TerniLapilliGameTest #test04OCanPut stamp: 'IO 11/1/2020 18:18:31'!
PASSED!

!testRun: #TerniLapilliGameTest #test05XCanMove stamp: 'IO 11/1/2020 18:18:31'!
PASSED!

!testRun: #TerniLapilliGameTest #test06OCanMove stamp: 'IO 11/1/2020 18:18:31'!
PASSED!

!testRun: #TerniLapilliGameTest #test07XWinsWithTheFirstColumn stamp: 'IO 11/1/2020 18:18:31'!
PASSED!

!testRun: #TerniLapilliGameTest #test08XHasntWonYet stamp: 'IO 11/1/2020 18:18:31'!
PASSED!

!testRun: #TerniLapilliGameTest #test09XWinsWithTheSecondColumn stamp: 'IO 11/1/2020 18:18:31'!
PASSED!

!testRun: #TerniLapilliGameTest #test10XWinsWithTheThirdColumn stamp: 'IO 11/1/2020 18:18:31'!
PASSED!

!testRun: #TerniLapilliGameTest #test11XWinsWithTheFirstRow stamp: 'IO 11/1/2020 18:18:31'!
PASSED!

!testRun: #TerniLapilliGameTest #test12XWinsWithTheSecondRow stamp: 'IO 11/1/2020 18:18:31'!
PASSED!

!testRun: #TerniLapilliGameTest #test13XWinsWithTheThirdRow stamp: 'IO 11/1/2020 18:18:31'!
PASSED!

!testRun: #TerniLapilliGameTest #test14XWinsWithTheCrescentDiagonal stamp: 'IO 11/1/2020 18:18:31'!
PASSED!

!testRun: #TerniLapilliGameTest #test15XWinsWithTheDescendantDiagonal stamp: 'IO 11/1/2020 18:18:31'!
PASSED!

!testRun: #TerniLapilliGameTest #test16OWnis stamp: 'IO 11/1/2020 18:18:31'!
PASSED!

!testRun: #TerniLapilliGameTest #test17OCantStartPutting stamp: 'IO 11/1/2020 18:18:31'!
PASSED!

!testRun: #TerniLapilliGameTest #test18XCantPutTwiceInARow stamp: 'IO 11/1/2020 18:18:31'!
PASSED!

!testRun: #TerniLapilliGameTest #test19XCantMoveTwiceInARow stamp: 'IO 11/1/2020 18:18:31'!
PASSED!

!testRun: #TerniLapilliGameTest #test20OCantPutTwiceInARow stamp: 'IO 11/1/2020 18:18:31'!
PASSED!

!testRun: #TerniLapilliGameTest #test21OCantMoveTwiceInARow stamp: 'IO 11/1/2020 18:18:31'!
PASSED!

!testRun: #TerniLapilliGameTest #test22XCantMoveOnTheirFirstTurn stamp: 'IO 11/1/2020 18:18:31'!
PASSED!

!testRun: #TerniLapilliGameTest #test23XCantMoveOnTheirSecondTurn stamp: 'IO 11/1/2020 18:18:31'!
PASSED!

!testRun: #TerniLapilliGameTest #test24XCantMoveOnTheirThirdTurn stamp: 'IO 11/1/2020 18:18:31'!
PASSED!

!testRun: #TerniLapilliGameTest #test25OCantMoveOnTheirFirstTurn stamp: 'IO 11/1/2020 18:18:31'!
PASSED!

!testRun: #TerniLapilliGameTest #test26OCantMoveOnTheirSecondTurn stamp: 'IO 11/1/2020 18:18:31'!
PASSED!

!testRun: #TerniLapilliGameTest #test27OCantMoveOnTheirThirdTurn stamp: 'IO 11/1/2020 18:18:31'!
PASSED!

!testRun: #TerniLapilliGameTest #test28XCantPutAfterTheirThirdTurn stamp: 'IO 11/1/2020 18:18:31'!
PASSED!

!testRun: #TerniLapilliGameTest #test29OCantPutAfterTheirThirdTurn stamp: 'IO 11/1/2020 18:18:31'!
PASSED!

!testRun: #TerniLapilliGameTest #test30OCantPutAfterXWon stamp: 'IO 11/1/2020 18:18:31'!
PASSED!

!testRun: #TerniLapilliGameTest #test31OCantMoveAfterXWon stamp: 'IO 11/1/2020 18:18:31'!
PASSED!

!testRun: #TerniLapilliGameTest #test32XCantMoveAfterOWon stamp: 'IO 11/1/2020 18:18:31'!
PASSED!

!testRun: #TerniLapilliGameTest #test33XCantPutAfterOWon stamp: 'IO 11/1/2020 18:18:31'!
PASSED!

!testRun: #TerniLapilliGameTest #test34XCantPutInAnOccupiedSpace stamp: 'IO 11/1/2020 18:18:31'!
PASSED!

!testRun: #TerniLapilliGameTest #test35OCantPutInAnOccupiedSpace stamp: 'IO 11/1/2020 18:18:31'!
PASSED!

!testRun: #TerniLapilliGameTest #test36XCantMoveToAnOccupiedSpace stamp: 'IO 11/1/2020 18:18:31'!
PASSED!

!testRun: #TerniLapilliGameTest #test37OCantMoveToAnOccupiedSpace stamp: 'IO 11/1/2020 18:18:31'!
PASSED!

!testRun: #TerniLapilliGameTest #test38XCantPutOutsideTheBoardUnderXAxis stamp: 'IO 11/1/2020 18:18:31'!
PASSED!

!testRun: #TerniLapilliGameTest #test39XCantPutOutsideTheBoardAboveXAxis stamp: 'IO 11/1/2020 18:18:31'!
PASSED!

!testRun: #TerniLapilliGameTest #test40XCantPutOutsideTheBoardUnderNorAboveTheYAxis stamp: 'IO 11/1/2020 18:18:31'!
PASSED!

!testRun: #TerniLapilliGameTest #test41OCantPutOutsideTheBoard stamp: 'IO 11/1/2020 18:18:31'!
PASSED!

!testRun: #TerniLapilliGameTest #test42XCantMoveToOutsideTheBoard stamp: 'IO 11/1/2020 18:18:31'!
PASSED!

!testRun: #TerniLapilliGameTest #test43OCantMoveToOutsideTheBoard stamp: 'IO 11/1/2020 18:18:31'!
PASSED!

!testRun: #TerniLapilliGameTest #test44XCantMoveTokensThatDontBelongToThem stamp: 'IO 11/1/2020 18:18:31'!
PASSED!

!testRun: #TerniLapilliGameTest #test45OCantMoveTokensThatDontBelongToThem stamp: 'IO 11/1/2020 18:18:31'!
PASSED!

!testRun: #TerniLapilliGameTest #test46XCantMoveaTokenOutsideItsNeighbors stamp: 'IO 11/1/2020 18:18:31'!
PASSED!

!testRun: #TerniLapilliGameTest #test47OCantMoveATokenOutsideItsNeighbors stamp: 'IO 11/1/2020 18:18:31'!
PASSED!
!TerniLapilliGame methodsFor: 'moves' stamp: 'IO 11/1/2020 18:18:59' prior: 50887788!
oPutsOn: aPosition

	"put an O token in a given position of the board"

	(self hasTokenAt: aPosition ) ifTrue:[^self error: TerniLapilliGame cannotPutErrorMessage ] .
	state := state oPutsOn: aPosition.
! !
!TerniLapilliGame methodsFor: 'moves' stamp: 'IO 11/1/2020 18:19:03' prior: 50889228!
oPutsOn: aPosition

	"put an O token in a given position of the board"

	(self hasTokenAt: aPosition ) ifTrue:[^self error: TerniLapilliGame cannotPutErrorMessage ].
	state := state oPutsOn: aPosition.
! !
!TerniLapilliGame methodsFor: 'moves' stamp: 'IO 11/1/2020 18:19:05' prior: 50889238!
oPutsOn: aPosition

	"put an O token in a given position of the board"

	(self hasTokenAt: aPosition ) ifTrue:[^self error: TerniLapilliGame cannotPutErrorMessage].
	state := state oPutsOn: aPosition.
! !
!TerniLapilliGame methodsFor: 'moves' stamp: 'IO 11/1/2020 18:19:09' prior: 50887765!
oMoves: sourcePosition to: destinationPosition

	"move O's token from a given position of the board to another given position"

	(self hasTokenAt: destinationPosition ) ifTrue: [^self error: TerniLapilliGame cannotMoveErrorMessage].
	state := state oMoves: sourcePosition to: destinationPosition.
! !
!TerniLapilliGame methodsFor: 'moves' stamp: 'IO 11/1/2020 18:19:18' prior: 50887752!
xMoves: sourcePosition to: destinationPosition

	"move O's token from a given position of the board to another given position"

	(self hasTokenAt: destinationPosition ) ifTrue:[^self error: TerniLapilliGame cannotMoveErrorMessage].
	state := state xMoves: sourcePosition to: destinationPosition.
	
	
! !
!TerniLapilliGame methodsFor: 'moves' stamp: 'IO 11/1/2020 18:19:22' prior: 50887778!
xPutsOn: aPosition

	"put an O token in a given position of the board"

	(self hasTokenAt: aPosition ) ifTrue:[^self error: TerniLapilliGame cannotPutErrorMessage].
	state := state xPutsOn: aPosition.
! !
!OIsPlacing methodsFor: 'moves' stamp: 'IO 11/1/2020 18:22:15'!
moveO: sourcePosition to: destinationPosition

	"see superimplementor"

	^self errorCannotMove.
! !
!GameIsOver methodsFor: 'moves' stamp: 'IO 11/1/2020 18:22:15'!
moveO: sourcePosition to: destinationPosition

	"see superimplementor"

	^self errorGameEnded.
! !
!TerniLapilliGameState methodsFor: 'moves' stamp: 'IO 11/1/2020 18:22:15'!
moveO: sourcePosition to: destinationPosition

	"returns the next state when O moves a token"

	oTokens move: sourcePosition to: destinationPosition.
	^self passTurn.
! !
!TerniLapilliGame methodsFor: 'moves' stamp: 'IO 11/1/2020 18:22:15'!
moveO: sourcePosition to: destinationPosition

	"move O's token from a given position of the board to another given position"

	(self hasTokenAt: destinationPosition ) ifTrue: [^self error: TerniLapilliGame cannotMoveErrorMessage].
	state := state oMoves: sourcePosition to: destinationPosition.
! !
!XIsPlaying methodsFor: 'moves' stamp: 'IO 11/1/2020 18:22:15' overrides: 50889305!
moveO: sourcePosition to: destinationPosition

	"see superimplementor"

	self errorIlegalTurn.
! !
!TerniLapilliGameTest methodsFor: 'as yet unclassified' stamp: 'IO 11/1/2020 18:22:15' prior: 50880916!
test45OCantMoveTokensThatDontBelongToThem
	"O no puede mover fichas que no sea suyas"
	

	| aGame |

	aGame := self createGameInMovePhase .
	aGame xMoves: 0@1 to: 1@1.
	
	self should: [	aGame moveO: 1@1 to: 0@1.] raise: Error withMessageText: TerniLapilliGame cannotMoveErrorMessage.
	self should: [	aGame moveO: 3@1 to: 0@1.] raise: Error withMessageText: TerniLapilliGame cannotMoveErrorMessage.! !
!TerniLapilliGameTest methodsFor: 'as yet unclassified' stamp: 'IO 11/1/2020 18:22:15' prior: 50888598!
test06OCanMove
	"movimiento legal de O desp de haber jugado las tres fichas :D"
	| aGame |
	aGame := self createGameInMovePhase.
	
	aGame xMoves: (2@0) to: (1@0).
	aGame moveO: (2@1) to: (1@1).

	self assert: (aGame hasOAt: (1@1)).
! !
!TerniLapilliGameTest methodsFor: 'as yet unclassified' stamp: 'IO 11/1/2020 18:22:15' prior: 50880563!
test21OCantMoveTwiceInARow
	"x no puede mover dos veces seguidas"
	| aGame |
	aGame := self createGameInMovePhase.
	
	aGame xMoves: (2@0) to: (1@0).
	aGame moveO: (2@1) to: (1@1).

	self should: [aGame moveO: (1@1) to: (2@1).] raise: Error withMessageText: TerniLapilliGame wrongTurnErrorMessage.
! !
!TerniLapilliGameTest methodsFor: 'as yet unclassified' stamp: 'IO 11/1/2020 18:22:15' prior: 50880786!
test37OCantMoveToAnOccupiedSpace
	"O no puede mover en un lugar ocupado"
	

	| aGame |
	
	aGame := self createGameInMovePhase .
	aGame xMoves: 0@1 to: 0@0.
	
	self should: [	aGame moveO: 2@1 to: 1@2.] raise: Error withMessageText: TerniLapilliGame cannotMoveErrorMessage .
! !
!TerniLapilliGameTest methodsFor: 'as yet unclassified' stamp: 'IO 11/1/2020 18:22:15' prior: 50880699!
test31OCantMoveAfterXWon
	"O no puede mover despues de que X gano"
	| aGame |
	aGame := TerniLapilliGame new.
	
	aGame xPutsOn: 0@0.
	aGame oPutsOn: 1@0.
	aGame xPutsOn: 1@1.
	aGame oPutsOn: 2@1.
	aGame xPutsOn: 0@2.
	aGame oPutsOn: 2@2.
	
	aGame xMoves: (1@1) to: (0@1).
	
	self should: [aGame moveO: (2@2) to: (1@2)] raise: Error withMessageText: TerniLapilliGame gameEndedErrorMessage.
! !
!TerniLapilliGame methodsFor: 'as yet unclassified' stamp: 'IO 11/1/2020 18:22:15' prior: 50889258!
oMoves: sourcePosition to: destinationPosition

	"move O's token from a given position of the board to another given position"

	(self hasTokenAt: destinationPosition ) ifTrue: [^self error: TerniLapilliGame cannotMoveErrorMessage].
	state := state moveO: sourcePosition to: destinationPosition.
! !
!TerniLapilliGameTest methodsFor: 'as yet unclassified' stamp: 'IO 11/1/2020 18:22:15' prior: 50880624!
test25OCantMoveOnTheirFirstTurn
	"o no puede mover en su primer turno"
	| aGame |
	aGame := TerniLapilliGame new.
	
	aGame xPutsOn: 0@0.

	self should: [aGame moveO: (0@0) to: (1@0).] raise: Error withMessageText: TerniLapilliGame cannotMoveErrorMessage.

	! !
!TerniLapilliGameTest methodsFor: 'as yet unclassified' stamp: 'IO 11/1/2020 18:22:15' prior: 50880635!
test26OCantMoveOnTheirSecondTurn
	"o no puede mover en su segundo turno"
	| aGame |
	aGame := TerniLapilliGame new.
	
	aGame xPutsOn: 0@0.
	aGame oPutsOn: 0@1.
	aGame xPutsOn: 1@0.

	self should: [aGame moveO: (0@0) to: (1@0).] raise: Error withMessageText: TerniLapilliGame cannotMoveErrorMessage.

	! !
!TerniLapilliGameTest methodsFor: 'as yet unclassified' stamp: 'IO 11/1/2020 18:22:16' prior: 50880878!
test43OCantMoveToOutsideTheBoard
	"O no puede mover hac�a afuera del tablero"
	

	| aGame |

	aGame := self createGameInMovePhase .
	aGame xMoves: 0@1 to: 0@0.
	
	self should: [	aGame moveO: 0@2 to: -1@1.] raise: Error withMessageText: TerniLapilliGame cannotMoveErrorMessage. 
	self should: [	aGame moveO: 0@2 to: 3@1.] raise: Error withMessageText: TerniLapilliGame cannotMoveErrorMessage. 
	self should: [	aGame moveO: 0@2 to: 1@-1.] raise: Error withMessageText: TerniLapilliGame cannotMoveErrorMessage. 
	self should: [	aGame moveO: 0@2 to: 1@3.] raise: Error withMessageText: TerniLapilliGame cannotMoveErrorMessage. 
	
! !
!TerniLapilliGameTest methodsFor: 'as yet unclassified' stamp: 'IO 11/1/2020 18:22:16' prior: 50880648!
test27OCantMoveOnTheirThirdTurn
	"o no puede mover en su tercer turno"
	| aGame |
	aGame := TerniLapilliGame new.
	
	aGame xPutsOn: 0@0.
	aGame oPutsOn: 0@1.
	aGame xPutsOn: 1@0.
	aGame oPutsOn: 2@2.
	aGame xPutsOn: 2@1.

	self should: [aGame moveO: (0@0) to: (1@0).] raise: Error withMessageText: TerniLapilliGame cannotMoveErrorMessage.

	! !
!TerniLapilliGameTest methodsFor: 'as yet unclassified' stamp: 'IO 11/1/2020 18:22:16' prior: 50880943!
test47OCantMoveATokenOutsideItsNeighbors
	"O no puede mover fichas hacia m�s de 1 vecinidad"
	

	| aGame |

	aGame := self createGameInMovePhase .
	aGame xMoves: 0@1 to: 0@0.
	
	self should: [	aGame moveO: 2@1 to: 0@1.] raise: Error withMessageText: TerniLapilliGame cannotMoveErrorMessage.! !
!TerniLapilliGame methodsFor: 'as yet unclassified' stamp: 'IO 11/1/2020 18:22:16' prior: 50889313!
moveO: sourcePosition to: destinationPosition

	"move O's token from a given position of the board to another given position"

	(self hasTokenAt: destinationPosition ) ifTrue: [^self error: TerniLapilliGame cannotMoveErrorMessage].
	state := state moveO: sourcePosition to: destinationPosition.
! !

!methodRemoval: OIsPlacing #oMoves:to: stamp: 'IO 11/1/2020 18:22:16'!
oMoves: sourcePosition to: destinationPosition

	"see superimplementor"

	^self errorCannotMove.
!

!methodRemoval: GameIsOver #oMoves:to: stamp: 'IO 11/1/2020 18:22:16'!
oMoves: sourcePosition to: destinationPosition

	"see superimplementor"

	^self errorGameEnded.
!

!methodRemoval: TerniLapilliGameState #oMoves:to: stamp: 'IO 11/1/2020 18:22:16'!
oMoves: sourcePosition to: destinationPosition

	"returns the next state when O moves a token"

	oTokens move: sourcePosition to: destinationPosition.
	^self passTurn.
!

!methodRemoval: TerniLapilliGame #oMoves:to: stamp: 'IO 11/1/2020 18:22:16'!
oMoves: sourcePosition to: destinationPosition

	"move O's token from a given position of the board to another given position"

	(self hasTokenAt: destinationPosition ) ifTrue: [^self error: TerniLapilliGame cannotMoveErrorMessage].
	state := state moveO: sourcePosition to: destinationPosition.
!

!methodRemoval: XIsPlaying #oMoves:to: stamp: 'IO 11/1/2020 18:22:16'!
oMoves: sourcePosition to: destinationPosition

	"see superimplementor"

	self errorIlegalTurn.
!

!testRun: #TerniLapilliGameTest #test01XCanPutAToken stamp: 'IO 11/1/2020 18:22:20'!
PASSED!

!testRun: #TerniLapilliGameTest #test02puttingDoesNotAffectOtherPositions stamp: 'IO 11/1/2020 18:22:20'!
PASSED!

!testRun: #TerniLapilliGameTest #test03XCanPutInOtherPositions stamp: 'IO 11/1/2020 18:22:20'!
PASSED!

!testRun: #TerniLapilliGameTest #test04OCanPut stamp: 'IO 11/1/2020 18:22:20'!
PASSED!

!testRun: #TerniLapilliGameTest #test05XCanMove stamp: 'IO 11/1/2020 18:22:20'!
PASSED!

!testRun: #TerniLapilliGameTest #test06OCanMove stamp: 'IO 11/1/2020 18:22:20'!
PASSED!

!testRun: #TerniLapilliGameTest #test07XWinsWithTheFirstColumn stamp: 'IO 11/1/2020 18:22:20'!
PASSED!

!testRun: #TerniLapilliGameTest #test08XHasntWonYet stamp: 'IO 11/1/2020 18:22:20'!
PASSED!

!testRun: #TerniLapilliGameTest #test09XWinsWithTheSecondColumn stamp: 'IO 11/1/2020 18:22:20'!
PASSED!

!testRun: #TerniLapilliGameTest #test10XWinsWithTheThirdColumn stamp: 'IO 11/1/2020 18:22:20'!
PASSED!

!testRun: #TerniLapilliGameTest #test11XWinsWithTheFirstRow stamp: 'IO 11/1/2020 18:22:20'!
PASSED!

!testRun: #TerniLapilliGameTest #test12XWinsWithTheSecondRow stamp: 'IO 11/1/2020 18:22:20'!
PASSED!

!testRun: #TerniLapilliGameTest #test13XWinsWithTheThirdRow stamp: 'IO 11/1/2020 18:22:20'!
PASSED!

!testRun: #TerniLapilliGameTest #test14XWinsWithTheCrescentDiagonal stamp: 'IO 11/1/2020 18:22:20'!
PASSED!

!testRun: #TerniLapilliGameTest #test15XWinsWithTheDescendantDiagonal stamp: 'IO 11/1/2020 18:22:20'!
PASSED!

!testRun: #TerniLapilliGameTest #test16OWnis stamp: 'IO 11/1/2020 18:22:20'!
PASSED!

!testRun: #TerniLapilliGameTest #test17OCantStartPutting stamp: 'IO 11/1/2020 18:22:20'!
PASSED!

!testRun: #TerniLapilliGameTest #test18XCantPutTwiceInARow stamp: 'IO 11/1/2020 18:22:20'!
PASSED!

!testRun: #TerniLapilliGameTest #test19XCantMoveTwiceInARow stamp: 'IO 11/1/2020 18:22:20'!
PASSED!

!testRun: #TerniLapilliGameTest #test20OCantPutTwiceInARow stamp: 'IO 11/1/2020 18:22:20'!
PASSED!

!testRun: #TerniLapilliGameTest #test21OCantMoveTwiceInARow stamp: 'IO 11/1/2020 18:22:20'!
PASSED!

!testRun: #TerniLapilliGameTest #test22XCantMoveOnTheirFirstTurn stamp: 'IO 11/1/2020 18:22:20'!
PASSED!

!testRun: #TerniLapilliGameTest #test23XCantMoveOnTheirSecondTurn stamp: 'IO 11/1/2020 18:22:20'!
PASSED!

!testRun: #TerniLapilliGameTest #test24XCantMoveOnTheirThirdTurn stamp: 'IO 11/1/2020 18:22:20'!
PASSED!

!testRun: #TerniLapilliGameTest #test25OCantMoveOnTheirFirstTurn stamp: 'IO 11/1/2020 18:22:20'!
PASSED!

!testRun: #TerniLapilliGameTest #test26OCantMoveOnTheirSecondTurn stamp: 'IO 11/1/2020 18:22:20'!
PASSED!

!testRun: #TerniLapilliGameTest #test27OCantMoveOnTheirThirdTurn stamp: 'IO 11/1/2020 18:22:20'!
PASSED!

!testRun: #TerniLapilliGameTest #test28XCantPutAfterTheirThirdTurn stamp: 'IO 11/1/2020 18:22:20'!
PASSED!

!testRun: #TerniLapilliGameTest #test29OCantPutAfterTheirThirdTurn stamp: 'IO 11/1/2020 18:22:20'!
PASSED!

!testRun: #TerniLapilliGameTest #test30OCantPutAfterXWon stamp: 'IO 11/1/2020 18:22:20'!
PASSED!

!testRun: #TerniLapilliGameTest #test31OCantMoveAfterXWon stamp: 'IO 11/1/2020 18:22:20'!
PASSED!

!testRun: #TerniLapilliGameTest #test32XCantMoveAfterOWon stamp: 'IO 11/1/2020 18:22:20'!
PASSED!

!testRun: #TerniLapilliGameTest #test33XCantPutAfterOWon stamp: 'IO 11/1/2020 18:22:20'!
PASSED!

!testRun: #TerniLapilliGameTest #test34XCantPutInAnOccupiedSpace stamp: 'IO 11/1/2020 18:22:20'!
PASSED!

!testRun: #TerniLapilliGameTest #test35OCantPutInAnOccupiedSpace stamp: 'IO 11/1/2020 18:22:20'!
PASSED!

!testRun: #TerniLapilliGameTest #test36XCantMoveToAnOccupiedSpace stamp: 'IO 11/1/2020 18:22:20'!
PASSED!

!testRun: #TerniLapilliGameTest #test37OCantMoveToAnOccupiedSpace stamp: 'IO 11/1/2020 18:22:20'!
PASSED!

!testRun: #TerniLapilliGameTest #test38XCantPutOutsideTheBoardUnderXAxis stamp: 'IO 11/1/2020 18:22:20'!
PASSED!

!testRun: #TerniLapilliGameTest #test39XCantPutOutsideTheBoardAboveXAxis stamp: 'IO 11/1/2020 18:22:20'!
PASSED!

!testRun: #TerniLapilliGameTest #test40XCantPutOutsideTheBoardUnderNorAboveTheYAxis stamp: 'IO 11/1/2020 18:22:20'!
PASSED!

!testRun: #TerniLapilliGameTest #test41OCantPutOutsideTheBoard stamp: 'IO 11/1/2020 18:22:20'!
PASSED!

!testRun: #TerniLapilliGameTest #test42XCantMoveToOutsideTheBoard stamp: 'IO 11/1/2020 18:22:20'!
PASSED!

!testRun: #TerniLapilliGameTest #test43OCantMoveToOutsideTheBoard stamp: 'IO 11/1/2020 18:22:20'!
PASSED!

!testRun: #TerniLapilliGameTest #test44XCantMoveTokensThatDontBelongToThem stamp: 'IO 11/1/2020 18:22:20'!
PASSED!

!testRun: #TerniLapilliGameTest #test45OCantMoveTokensThatDontBelongToThem stamp: 'IO 11/1/2020 18:22:20'!
PASSED!

!testRun: #TerniLapilliGameTest #test46XCantMoveaTokenOutsideItsNeighbors stamp: 'IO 11/1/2020 18:22:20'!
PASSED!

!testRun: #TerniLapilliGameTest #test47OCantMoveATokenOutsideItsNeighbors stamp: 'IO 11/1/2020 18:22:20'!
PASSED!
!TerniLapilliGameState methodsFor: 'moves' stamp: 'IO 11/1/2020 18:22:44'!
moveOFrom: sourcePosition to: destinationPosition

	"returns the next state when O moves a token"

	oTokens move: sourcePosition to: destinationPosition.
	^self passTurn.
! !
!GameIsOver methodsFor: 'moves' stamp: 'IO 11/1/2020 18:22:44' overrides: 50889691!
moveOFrom: sourcePosition to: destinationPosition

	"see superimplementor"

	^self errorGameEnded.
! !
!XIsPlaying methodsFor: 'moves' stamp: 'IO 11/1/2020 18:22:44' overrides: 50889691!
moveOFrom: sourcePosition to: destinationPosition

	"see superimplementor"

	self errorIlegalTurn.
! !
!OIsPlacing methodsFor: 'moves' stamp: 'IO 11/1/2020 18:22:44' overrides: 50889691!
moveOFrom: sourcePosition to: destinationPosition

	"see superimplementor"

	^self errorCannotMove.
! !
!TerniLapilliGame methodsFor: 'moves' stamp: 'IO 11/1/2020 18:22:44'!
moveOFrom: sourcePosition to: destinationPosition

	"move O's token from a given position of the board to another given position"

	(self hasTokenAt: destinationPosition ) ifTrue: [^self error: TerniLapilliGame cannotMoveErrorMessage].
	state := state moveO: sourcePosition to: destinationPosition.
! !
!TerniLapilliGameTest methodsFor: 'as yet unclassified' stamp: 'IO 11/1/2020 18:22:45' prior: 50889359!
test21OCantMoveTwiceInARow
	"x no puede mover dos veces seguidas"
	| aGame |
	aGame := self createGameInMovePhase.
	
	aGame xMoves: (2@0) to: (1@0).
	aGame moveOFrom: (2@1) to: (1@1).

	self should: [aGame moveOFrom: (1@1) to: (2@1).] raise: Error withMessageText: TerniLapilliGame wrongTurnErrorMessage.
! !
!TerniLapilliGameTest methodsFor: 'as yet unclassified' stamp: 'IO 11/1/2020 18:22:45' prior: 50889425!
test26OCantMoveOnTheirSecondTurn
	"o no puede mover en su segundo turno"
	| aGame |
	aGame := TerniLapilliGame new.
	
	aGame xPutsOn: 0@0.
	aGame oPutsOn: 0@1.
	aGame xPutsOn: 1@0.

	self should: [aGame moveOFrom: (0@0) to: (1@0).] raise: Error withMessageText: TerniLapilliGame cannotMoveErrorMessage.

	! !
!TerniLapilliGameTest methodsFor: 'as yet unclassified' stamp: 'IO 11/1/2020 18:22:45' prior: 50889413!
test25OCantMoveOnTheirFirstTurn
	"o no puede mover en su primer turno"
	| aGame |
	aGame := TerniLapilliGame new.
	
	aGame xPutsOn: 0@0.

	self should: [aGame moveOFrom: (0@0) to: (1@0).] raise: Error withMessageText: TerniLapilliGame cannotMoveErrorMessage.

	! !
!TerniLapilliGameTest methodsFor: 'as yet unclassified' stamp: 'IO 11/1/2020 18:22:45' prior: 50889462!
test27OCantMoveOnTheirThirdTurn
	"o no puede mover en su tercer turno"
	| aGame |
	aGame := TerniLapilliGame new.
	
	aGame xPutsOn: 0@0.
	aGame oPutsOn: 0@1.
	aGame xPutsOn: 1@0.
	aGame oPutsOn: 2@2.
	aGame xPutsOn: 2@1.

	self should: [aGame moveOFrom: (0@0) to: (1@0).] raise: Error withMessageText: TerniLapilliGame cannotMoveErrorMessage.

	! !
!TerniLapilliGameTest methodsFor: 'as yet unclassified' stamp: 'IO 11/1/2020 18:22:45' prior: 50889477!
test47OCantMoveATokenOutsideItsNeighbors
	"O no puede mover fichas hacia m�s de 1 vecinidad"
	

	| aGame |

	aGame := self createGameInMovePhase .
	aGame xMoves: 0@1 to: 0@0.
	
	self should: [	aGame moveOFrom: 2@1 to: 0@1.] raise: Error withMessageText: TerniLapilliGame cannotMoveErrorMessage.! !
!TerniLapilliGameTest methodsFor: 'as yet unclassified' stamp: 'IO 11/1/2020 18:22:45' prior: 50889332!
test45OCantMoveTokensThatDontBelongToThem
	"O no puede mover fichas que no sea suyas"
	

	| aGame |

	aGame := self createGameInMovePhase .
	aGame xMoves: 0@1 to: 1@1.
	
	self should: [	aGame moveOFrom: 1@1 to: 0@1.] raise: Error withMessageText: TerniLapilliGame cannotMoveErrorMessage.
	self should: [	aGame moveOFrom: 3@1 to: 0@1.] raise: Error withMessageText: TerniLapilliGame cannotMoveErrorMessage.! !
!TerniLapilliGame methodsFor: 'as yet unclassified' stamp: 'IO 11/1/2020 18:22:45' prior: 50889490!
moveO: sourcePosition to: destinationPosition

	"move O's token from a given position of the board to another given position"

	(self hasTokenAt: destinationPosition ) ifTrue: [^self error: TerniLapilliGame cannotMoveErrorMessage].
	state := state moveOFrom: sourcePosition to: destinationPosition.
! !
!TerniLapilliGameTest methodsFor: 'as yet unclassified' stamp: 'IO 11/1/2020 18:22:45' prior: 50889348!
test06OCanMove
	"movimiento legal de O desp de haber jugado las tres fichas :D"
	| aGame |
	aGame := self createGameInMovePhase.
	
	aGame xMoves: (2@0) to: (1@0).
	aGame moveOFrom: (2@1) to: (1@1).

	self assert: (aGame hasOAt: (1@1)).
! !
!TerniLapilliGameTest methodsFor: 'as yet unclassified' stamp: 'IO 11/1/2020 18:22:45' prior: 50889439!
test43OCantMoveToOutsideTheBoard
	"O no puede mover hac�a afuera del tablero"
	

	| aGame |

	aGame := self createGameInMovePhase .
	aGame xMoves: 0@1 to: 0@0.
	
	self should: [	aGame moveOFrom: 0@2 to: -1@1.] raise: Error withMessageText: TerniLapilliGame cannotMoveErrorMessage. 
	self should: [	aGame moveOFrom: 0@2 to: 3@1.] raise: Error withMessageText: TerniLapilliGame cannotMoveErrorMessage. 
	self should: [	aGame moveOFrom: 0@2 to: 1@-1.] raise: Error withMessageText: TerniLapilliGame cannotMoveErrorMessage. 
	self should: [	aGame moveOFrom: 0@2 to: 1@3.] raise: Error withMessageText: TerniLapilliGame cannotMoveErrorMessage. 
	
! !
!TerniLapilliGameTest methodsFor: 'as yet unclassified' stamp: 'IO 11/1/2020 18:22:45' prior: 50889372!
test37OCantMoveToAnOccupiedSpace
	"O no puede mover en un lugar ocupado"
	

	| aGame |
	
	aGame := self createGameInMovePhase .
	aGame xMoves: 0@1 to: 0@0.
	
	self should: [	aGame moveOFrom: 2@1 to: 1@2.] raise: Error withMessageText: TerniLapilliGame cannotMoveErrorMessage .
! !
!TerniLapilliGameTest methodsFor: 'as yet unclassified' stamp: 'IO 11/1/2020 18:22:45' prior: 50889384!
test31OCantMoveAfterXWon
	"O no puede mover despues de que X gano"
	| aGame |
	aGame := TerniLapilliGame new.
	
	aGame xPutsOn: 0@0.
	aGame oPutsOn: 1@0.
	aGame xPutsOn: 1@1.
	aGame oPutsOn: 2@1.
	aGame xPutsOn: 0@2.
	aGame oPutsOn: 2@2.
	
	aGame xMoves: (1@1) to: (0@1).
	
	self should: [aGame moveOFrom: (2@2) to: (1@2)] raise: Error withMessageText: TerniLapilliGame gameEndedErrorMessage.
! !
!TerniLapilliGame methodsFor: 'as yet unclassified' stamp: 'IO 11/1/2020 18:22:45' prior: 50889718!
moveOFrom: sourcePosition to: destinationPosition

	"move O's token from a given position of the board to another given position"

	(self hasTokenAt: destinationPosition ) ifTrue: [^self error: TerniLapilliGame cannotMoveErrorMessage].
	state := state moveOFrom: sourcePosition to: destinationPosition.
! !

!methodRemoval: TerniLapilliGameState #moveO:to: stamp: 'IO 11/1/2020 18:22:45'!
moveO: sourcePosition to: destinationPosition

	"returns the next state when O moves a token"

	oTokens move: sourcePosition to: destinationPosition.
	^self passTurn.
!

!methodRemoval: GameIsOver #moveO:to: stamp: 'IO 11/1/2020 18:22:45'!
moveO: sourcePosition to: destinationPosition

	"see superimplementor"

	^self errorGameEnded.
!

!methodRemoval: XIsPlaying #moveO:to: stamp: 'IO 11/1/2020 18:22:45'!
moveO: sourcePosition to: destinationPosition

	"see superimplementor"

	self errorIlegalTurn.
!

!methodRemoval: OIsPlacing #moveO:to: stamp: 'IO 11/1/2020 18:22:45'!
moveO: sourcePosition to: destinationPosition

	"see superimplementor"

	^self errorCannotMove.
!

!methodRemoval: TerniLapilliGame #moveO:to: stamp: 'IO 11/1/2020 18:22:45'!
moveO: sourcePosition to: destinationPosition

	"move O's token from a given position of the board to another given position"

	(self hasTokenAt: destinationPosition ) ifTrue: [^self error: TerniLapilliGame cannotMoveErrorMessage].
	state := state moveOFrom: sourcePosition to: destinationPosition.
!

!testRun: #TerniLapilliGameTest #test01XCanPutAToken stamp: 'IO 11/1/2020 18:22:48'!
PASSED!

!testRun: #TerniLapilliGameTest #test02puttingDoesNotAffectOtherPositions stamp: 'IO 11/1/2020 18:22:48'!
PASSED!

!testRun: #TerniLapilliGameTest #test03XCanPutInOtherPositions stamp: 'IO 11/1/2020 18:22:48'!
PASSED!

!testRun: #TerniLapilliGameTest #test04OCanPut stamp: 'IO 11/1/2020 18:22:48'!
PASSED!

!testRun: #TerniLapilliGameTest #test05XCanMove stamp: 'IO 11/1/2020 18:22:48'!
PASSED!

!testRun: #TerniLapilliGameTest #test06OCanMove stamp: 'IO 11/1/2020 18:22:48'!
PASSED!

!testRun: #TerniLapilliGameTest #test07XWinsWithTheFirstColumn stamp: 'IO 11/1/2020 18:22:48'!
PASSED!

!testRun: #TerniLapilliGameTest #test08XHasntWonYet stamp: 'IO 11/1/2020 18:22:48'!
PASSED!

!testRun: #TerniLapilliGameTest #test09XWinsWithTheSecondColumn stamp: 'IO 11/1/2020 18:22:48'!
PASSED!

!testRun: #TerniLapilliGameTest #test10XWinsWithTheThirdColumn stamp: 'IO 11/1/2020 18:22:48'!
PASSED!

!testRun: #TerniLapilliGameTest #test11XWinsWithTheFirstRow stamp: 'IO 11/1/2020 18:22:48'!
PASSED!

!testRun: #TerniLapilliGameTest #test12XWinsWithTheSecondRow stamp: 'IO 11/1/2020 18:22:48'!
PASSED!

!testRun: #TerniLapilliGameTest #test13XWinsWithTheThirdRow stamp: 'IO 11/1/2020 18:22:48'!
PASSED!

!testRun: #TerniLapilliGameTest #test14XWinsWithTheCrescentDiagonal stamp: 'IO 11/1/2020 18:22:48'!
PASSED!

!testRun: #TerniLapilliGameTest #test15XWinsWithTheDescendantDiagonal stamp: 'IO 11/1/2020 18:22:48'!
PASSED!

!testRun: #TerniLapilliGameTest #test16OWnis stamp: 'IO 11/1/2020 18:22:48'!
PASSED!

!testRun: #TerniLapilliGameTest #test17OCantStartPutting stamp: 'IO 11/1/2020 18:22:48'!
PASSED!

!testRun: #TerniLapilliGameTest #test18XCantPutTwiceInARow stamp: 'IO 11/1/2020 18:22:48'!
PASSED!

!testRun: #TerniLapilliGameTest #test19XCantMoveTwiceInARow stamp: 'IO 11/1/2020 18:22:48'!
PASSED!

!testRun: #TerniLapilliGameTest #test20OCantPutTwiceInARow stamp: 'IO 11/1/2020 18:22:48'!
PASSED!

!testRun: #TerniLapilliGameTest #test21OCantMoveTwiceInARow stamp: 'IO 11/1/2020 18:22:48'!
PASSED!

!testRun: #TerniLapilliGameTest #test22XCantMoveOnTheirFirstTurn stamp: 'IO 11/1/2020 18:22:48'!
PASSED!

!testRun: #TerniLapilliGameTest #test23XCantMoveOnTheirSecondTurn stamp: 'IO 11/1/2020 18:22:48'!
PASSED!

!testRun: #TerniLapilliGameTest #test24XCantMoveOnTheirThirdTurn stamp: 'IO 11/1/2020 18:22:48'!
PASSED!

!testRun: #TerniLapilliGameTest #test25OCantMoveOnTheirFirstTurn stamp: 'IO 11/1/2020 18:22:48'!
PASSED!

!testRun: #TerniLapilliGameTest #test26OCantMoveOnTheirSecondTurn stamp: 'IO 11/1/2020 18:22:48'!
PASSED!

!testRun: #TerniLapilliGameTest #test27OCantMoveOnTheirThirdTurn stamp: 'IO 11/1/2020 18:22:48'!
PASSED!

!testRun: #TerniLapilliGameTest #test28XCantPutAfterTheirThirdTurn stamp: 'IO 11/1/2020 18:22:48'!
PASSED!

!testRun: #TerniLapilliGameTest #test29OCantPutAfterTheirThirdTurn stamp: 'IO 11/1/2020 18:22:48'!
PASSED!

!testRun: #TerniLapilliGameTest #test30OCantPutAfterXWon stamp: 'IO 11/1/2020 18:22:48'!
PASSED!

!testRun: #TerniLapilliGameTest #test31OCantMoveAfterXWon stamp: 'IO 11/1/2020 18:22:48'!
PASSED!

!testRun: #TerniLapilliGameTest #test32XCantMoveAfterOWon stamp: 'IO 11/1/2020 18:22:48'!
PASSED!

!testRun: #TerniLapilliGameTest #test33XCantPutAfterOWon stamp: 'IO 11/1/2020 18:22:48'!
PASSED!

!testRun: #TerniLapilliGameTest #test34XCantPutInAnOccupiedSpace stamp: 'IO 11/1/2020 18:22:48'!
PASSED!

!testRun: #TerniLapilliGameTest #test35OCantPutInAnOccupiedSpace stamp: 'IO 11/1/2020 18:22:48'!
PASSED!

!testRun: #TerniLapilliGameTest #test36XCantMoveToAnOccupiedSpace stamp: 'IO 11/1/2020 18:22:48'!
PASSED!

!testRun: #TerniLapilliGameTest #test37OCantMoveToAnOccupiedSpace stamp: 'IO 11/1/2020 18:22:48'!
PASSED!

!testRun: #TerniLapilliGameTest #test38XCantPutOutsideTheBoardUnderXAxis stamp: 'IO 11/1/2020 18:22:48'!
PASSED!

!testRun: #TerniLapilliGameTest #test39XCantPutOutsideTheBoardAboveXAxis stamp: 'IO 11/1/2020 18:22:48'!
PASSED!

!testRun: #TerniLapilliGameTest #test40XCantPutOutsideTheBoardUnderNorAboveTheYAxis stamp: 'IO 11/1/2020 18:22:48'!
PASSED!

!testRun: #TerniLapilliGameTest #test41OCantPutOutsideTheBoard stamp: 'IO 11/1/2020 18:22:48'!
PASSED!

!testRun: #TerniLapilliGameTest #test42XCantMoveToOutsideTheBoard stamp: 'IO 11/1/2020 18:22:48'!
PASSED!

!testRun: #TerniLapilliGameTest #test43OCantMoveToOutsideTheBoard stamp: 'IO 11/1/2020 18:22:48'!
PASSED!

!testRun: #TerniLapilliGameTest #test44XCantMoveTokensThatDontBelongToThem stamp: 'IO 11/1/2020 18:22:48'!
PASSED!

!testRun: #TerniLapilliGameTest #test45OCantMoveTokensThatDontBelongToThem stamp: 'IO 11/1/2020 18:22:48'!
PASSED!

!testRun: #TerniLapilliGameTest #test46XCantMoveaTokenOutsideItsNeighbors stamp: 'IO 11/1/2020 18:22:48'!
PASSED!

!testRun: #TerniLapilliGameTest #test47OCantMoveATokenOutsideItsNeighbors stamp: 'IO 11/1/2020 18:22:48'!
PASSED!
!TerniLapilliGameState methodsFor: 'moves' stamp: 'IO 11/1/2020 18:23:00'!
putOAt: aPosition

	"returns the next state when O puts a token"

	oTokens add: aPosition.
	^self passTurn.

! !
!XIsPlaying methodsFor: 'moves' stamp: 'IO 11/1/2020 18:23:00' overrides: 50890094!
putOAt: aPosition

	"see superimplementor"

	self errorIlegalTurn.
! !
!TerniLapilliGame methodsFor: 'moves' stamp: 'IO 11/1/2020 18:23:00'!
putOAt: aPosition

	"put an O token in a given position of the board"

	(self hasTokenAt: aPosition ) ifTrue:[^self error: TerniLapilliGame cannotPutErrorMessage].
	state := state oPutsOn: aPosition.
! !
!OIsMoving methodsFor: 'moves' stamp: 'IO 11/1/2020 18:23:00' overrides: 50890094!
putOAt: aPosition

	"see superimplementor"

	^self errorCannotPut.
! !
!GameIsOver methodsFor: 'moves' stamp: 'IO 11/1/2020 18:23:00' overrides: 50890094!
putOAt: aPosition

	"see superimplementor"

	^self errorGameEnded.
! !
!TerniLapilliGameTest methodsFor: 'as yet unclassified' stamp: 'IO 11/1/2020 18:23:00' prior: 50880744!
test34XCantPutInAnOccupiedSpace
	"X no puede poner en un lugar ocupado"
	

	| aGame |
	
	aGame := TerniLapilliGame new.
	
	aGame xPutsOn: 0@0.
	aGame putOAt: 2@0.

	self should: [	aGame xPutsOn: 0@0.] raise: Error withMessageText: TerniLapilliGame cannotPutErrorMessage .
	self should: [	aGame xPutsOn: 2@0.] raise: Error withMessageText: TerniLapilliGame cannotPutErrorMessage .
! !
!TerniLapilliGameTest methodsFor: 'as yet unclassified' stamp: 'IO 11/1/2020 18:23:00' prior: 50880599!
test23XCantMoveOnTheirSecondTurn
	"x no puede mover en su segundo turno"
	| aGame |
	aGame := TerniLapilliGame new.
	
	aGame xPutsOn: 0@0.
	aGame putOAt: 0@1.

	self should: [aGame xMoves: (0@0) to: (1@0).] raise: Error withMessageText: TerniLapilliGame cannotMoveErrorMessage.

	! !
!TerniLapilliGameTest methodsFor: 'as yet unclassified' stamp: 'IO 11/1/2020 18:23:00' prior: 50888644!
test10XWinsWithTheThirdColumn
	"ahora X gana competando la tercer columna"
	| aGame |
	aGame := TerniLapilliGame new.
	
	aGame xPutsOn: 0@2.
	aGame putOAt: 0@0.
	aGame xPutsOn: 1@2.
	aGame putOAt: 1@0.
	aGame xPutsOn: 2@2.
	
	self assert: aGame hasXWon.
! !
!TerniLapilliGameTest methodsFor: 'as yet unclassified' stamp: 'IO 11/1/2020 18:23:00' prior: 50880835!
test41OCantPutOutsideTheBoard
	"O no puede mover hac�a afuera del tablero"
	

	| aGame |

	aGame := TerniLapilliGame new.
	aGame xPutsOn: 0@0.
	
	self should: [	aGame putOAt: 0@3.] raise: Error withMessageText: TerniLapilliGame cannotPutErrorMessage. 
	self should: [	aGame putOAt: 0@-1.] raise: Error withMessageText: TerniLapilliGame cannotPutErrorMessage. 
	self should: [	aGame putOAt: 3@0.] raise: Error withMessageText: TerniLapilliGame cannotPutErrorMessage. 
	self should: [	aGame putOAt: -1@0.] raise: Error withMessageText: TerniLapilliGame cannotPutErrorMessage. 
! !
!TerniLapilliGameTest methodsFor: 'as yet unclassified' stamp: 'IO 11/1/2020 18:23:00' prior: 50880730!
test33XCantPutAfterOWon
	"X no puede poner despues de que O gano"
	| aGame |
	aGame := TerniLapilliGame new.
	
	aGame xPutsOn: 0@0.
	aGame putOAt: 2@0.
	aGame xPutsOn: 1@1.
	aGame putOAt: 2@1.
	aGame xPutsOn: 0@2.
	aGame putOAt: 2@2.

	self should: [aGame xPutsOn: (0@1).] raise: Error withMessageText: TerniLapilliGame gameEndedErrorMessage.
! !
!TerniLapilliGameTest methodsFor: 'as yet unclassified' stamp: 'IO 11/1/2020 18:23:00' prior: 50880715!
test32XCantMoveAfterOWon
	"X no puede mover despues de que O gano"
	| aGame |
	aGame := TerniLapilliGame new.
	
	aGame xPutsOn: 0@0.
	aGame putOAt: 2@0.
	aGame xPutsOn: 1@1.
	aGame putOAt: 2@1.
	aGame xPutsOn: 0@2.
	aGame putOAt: 2@2.

	self should: [aGame xMoves: (1@1) to: (0@1).] raise: Error withMessageText: TerniLapilliGame gameEndedErrorMessage.
! !
!TerniLapilliGameTest methodsFor: 'as yet unclassified' stamp: 'IO 11/1/2020 18:23:00' prior: 50888692!
test14XWinsWithTheCrescentDiagonal
	"X gana competando la diagonal creciente"
	| aGame |
	aGame := TerniLapilliGame new.
	
	aGame xPutsOn: 0@0.
	aGame putOAt: 1@0.
	aGame xPutsOn: 1@1.
	aGame putOAt: 2@1.
	aGame xPutsOn: 2@2.
	
	self assert: aGame hasXWon.
! !
!TerniLapilliGameTest methodsFor: 'as yet unclassified' stamp: 'IO 11/1/2020 18:23:00' prior: 50880759!
test35OCantPutInAnOccupiedSpace
	"O no puede poner en un lugar ocupado"
	

	| aGame |
	
	aGame := TerniLapilliGame new.
	
	aGame xPutsOn: 0@0.
	aGame putOAt: 0@1.
	aGame xPutsOn: 0@2.

	self should: [	aGame putOAt: 0@0.] raise: Error withMessageText: TerniLapilliGame cannotPutErrorMessage .
	self should: [	aGame putOAt: 0@1.] raise: Error withMessageText: TerniLapilliGame cannotPutErrorMessage .
! !
!TerniLapilliGame methodsFor: 'as yet unclassified' stamp: 'IO 11/1/2020 18:23:00' prior: 50889248!
oPutsOn: aPosition

	"put an O token in a given position of the board"

	(self hasTokenAt: aPosition ) ifTrue:[^self error: TerniLapilliGame cannotPutErrorMessage].
	state := state putOAt: aPosition.
! !
!TerniLapilliGameTest methodsFor: 'as yet unclassified' stamp: 'IO 11/1/2020 18:23:00' prior: 50889061!
test16OWnis
	"ahora gana O!!"
	| aGame |
	aGame := TerniLapilliGame new.
	
	aGame xPutsOn: 0@0.
	aGame putOAt: 0@1.
	aGame xPutsOn: 2@0.
	aGame putOAt: 1@1.
	aGame xPutsOn: 2@2.
	aGame putOAt: 2@1.
	
	self assert: aGame hasOWon.
! !
!TerniLapilliGameTest methodsFor: 'as yet unclassified' stamp: 'IO 11/1/2020 18:23:00' prior: 50888656!
test11XWinsWithTheFirstRow
	"X gana completando la primer fila"
	| aGame |
	aGame := TerniLapilliGame new.
	
	aGame xPutsOn: 0@0.
	aGame putOAt: 1@0.
	aGame xPutsOn: 0@1.
	aGame putOAt: 1@1.
	aGame xPutsOn: 0@2.
	
	self assert: aGame hasXWon.
! !
!TerniLapilliGameTest methodsFor: 'as yet unclassified' stamp: 'IO 11/1/2020 18:23:00' prior: 50889745!
test26OCantMoveOnTheirSecondTurn
	"o no puede mover en su segundo turno"
	| aGame |
	aGame := TerniLapilliGame new.
	
	aGame xPutsOn: 0@0.
	aGame putOAt: 0@1.
	aGame xPutsOn: 1@0.

	self should: [aGame moveOFrom: (0@0) to: (1@0).] raise: Error withMessageText: TerniLapilliGame cannotMoveErrorMessage.

	! !
!TerniLapilliGameTest methodsFor: 'as yet unclassified' stamp: 'IO 11/1/2020 18:23:00' prior: 50888579!
test04OCanPut
	"o pone en 0@0"
	| aGame |
	aGame := TerniLapilliGame new.
	
	aGame xPutsOn: 0@1.
	aGame putOAt: 0@0.

	self assert: (aGame hasOAt: (0@0)).
! !
!TerniLapilliGameTest methodsFor: 'as yet unclassified' stamp: 'IO 11/1/2020 18:23:00' prior: 50880673!
test29OCantPutAfterTheirThirdTurn
	"o no puede poner despues de su tercer turno"
	| aGame |
	aGame := self createGameInMovePhase.

	aGame xMoves: (0@1) to: (1@1).
	
	self should: [aGame putOAt: (0@1).] raise: Error withMessageText: TerniLapilliGame cannotPutErrorMessage.

	! !
!TerniLapilliGameTest methodsFor: 'as yet unclassified' stamp: 'IO 11/1/2020 18:23:00' prior: 50888632!
test09XWinsWithTheSecondColumn
	"X gana competando la segunda columna"
	| aGame |
	aGame := TerniLapilliGame new.
	
	aGame xPutsOn: 0@1.
	aGame putOAt: 0@2.
	aGame xPutsOn: 1@1.
	aGame putOAt: 1@2.
	aGame xPutsOn: 2@1.
	
	self assert: aGame hasXWon.
! !
!TerniLapilliGameTest methodsFor: 'as yet unclassified' stamp: 'IO 11/1/2020 18:23:00' prior: 50888609!
test07XWinsWithTheFirstColumn
	"primer posicion ganadora para X, la primer columna"
	| aGame |
	aGame := TerniLapilliGame new.
	
	aGame xPutsOn: 0@0.
	aGame putOAt: 0@1.
	aGame xPutsOn: 1@0.
	aGame putOAt: 1@1.
	aGame xPutsOn: 2@0.
	
	self assert: aGame hasXWon.
! !
!TerniLapilliGameTest methodsFor: 'as yet unclassified' stamp: 'IO 11/1/2020 18:23:00' prior: 50888621!
test08XHasntWonYet
	"X todavia no gano"
	| aGame |
	aGame := TerniLapilliGame new.
	
	aGame xPutsOn: 0@0.
	aGame putOAt: 0@1.
	aGame xPutsOn: 1@0.
	aGame putOAt: 1@1.
	aGame xPutsOn: 2@2.
	
	self deny: aGame hasXWon.
! !
!TerniLapilliGameTest methodsFor: 'as yet unclassified' stamp: 'IO 11/1/2020 18:23:00' prior: 50888680!
test13XWinsWithTheThirdRow
	"X gana competando la tercer fila"
	| aGame |
	aGame := TerniLapilliGame new.
	
	aGame xPutsOn: 2@0.
	aGame putOAt: 0@0.
	aGame xPutsOn: 2@1.
	aGame putOAt: 0@1.
	aGame xPutsOn: 2@2.
	
	self assert: aGame hasXWon.
! !
!TerniLapilliGameTest methodsFor: 'as yet unclassified' stamp: 'IO 11/1/2020 18:23:00' prior: 50880552!
test20OCantPutTwiceInARow
	"despues de X pone Y"
	| aGame |
	aGame := TerniLapilliGame new.
	
	aGame xPutsOn: (0@0).
	aGame putOAt:(0@1).

	self should: [aGame putOAt: (0@2)] raise: Error withMessageText: TerniLapilliGame wrongTurnErrorMessage.


! !
!TerniLapilliGameTest methodsFor: 'as yet unclassified' stamp: 'IO 11/1/2020 18:23:00' prior: 50880576!
createGameInMovePhase
	"revisar este metodo al usuarlo para usarlo correctamente en los tests ;)"
	| aGame |
	aGame := TerniLapilliGame new.
	
	aGame xPutsOn: 0@1.
	aGame putOAt: 0@2.
	aGame xPutsOn: 1@2.
	aGame putOAt: 2@1.
	aGame xPutsOn: 2@0.
	aGame putOAt: 2@2.
	
	^aGame
! !
!TerniLapilliGameTest methodsFor: 'as yet unclassified' stamp: 'IO 11/1/2020 18:23:00' prior: 50889877!
test31OCantMoveAfterXWon
	"O no puede mover despues de que X gano"
	| aGame |
	aGame := TerniLapilliGame new.
	
	aGame xPutsOn: 0@0.
	aGame putOAt: 1@0.
	aGame xPutsOn: 1@1.
	aGame putOAt: 2@1.
	aGame xPutsOn: 0@2.
	aGame putOAt: 2@2.
	
	aGame xMoves: (1@1) to: (0@1).
	
	self should: [aGame moveOFrom: (2@2) to: (1@2)] raise: Error withMessageText: TerniLapilliGame gameEndedErrorMessage.
! !
!TerniLapilliGameTest methodsFor: 'as yet unclassified' stamp: 'IO 11/1/2020 18:23:00' prior: 50888668!
test12XWinsWithTheSecondRow
	"X gana competando la segunda fila"
	| aGame |
	aGame := TerniLapilliGame new.
	
	aGame xPutsOn: 1@0.
	aGame putOAt: 2@0.
	aGame xPutsOn: 1@1.
	aGame putOAt: 2@1.
	aGame xPutsOn: 1@2.
	
	self assert: aGame hasXWon.
! !
!TerniLapilliGameTest methodsFor: 'as yet unclassified' stamp: 'IO 11/1/2020 18:23:00' prior: 50889771!
test27OCantMoveOnTheirThirdTurn
	"o no puede mover en su tercer turno"
	| aGame |
	aGame := TerniLapilliGame new.
	
	aGame xPutsOn: 0@0.
	aGame putOAt: 0@1.
	aGame xPutsOn: 1@0.
	aGame putOAt: 2@2.
	aGame xPutsOn: 2@1.

	self should: [aGame moveOFrom: (0@0) to: (1@0).] raise: Error withMessageText: TerniLapilliGame cannotMoveErrorMessage.

	! !
!TerniLapilliGameTest methodsFor: 'as yet unclassified' stamp: 'IO 11/1/2020 18:23:00' prior: 50888704!
test15XWinsWithTheDescendantDiagonal
	"X gana competando la diagonal decreciente"
	| aGame |
	aGame := TerniLapilliGame new.
	
	aGame xPutsOn: 2@0.
	aGame putOAt: 1@0.
	aGame xPutsOn: 1@1.
	aGame putOAt: 2@1.
	aGame xPutsOn: 0@2.
	
	self assert: aGame hasXWon.
! !
!TerniLapilliGameTest methodsFor: 'as yet unclassified' stamp: 'IO 11/1/2020 18:23:00' prior: 50880685!
test30OCantPutAfterXWon
	"O no puede poner despues de que X gano"
	| aGame |
	aGame := TerniLapilliGame new.
	
	aGame xPutsOn: 0@1.
	aGame putOAt: 0@2.
	aGame xPutsOn: 1@1.
	aGame putOAt: 1@2.
	aGame xPutsOn: 2@1.
	
	self should: [aGame putOAt: (2@2).] raise: Error withMessageText: TerniLapilliGame gameEndedErrorMessage.
! !
!TerniLapilliGameTest methodsFor: 'as yet unclassified' stamp: 'IO 11/1/2020 18:23:00' prior: 50880611!
test24XCantMoveOnTheirThirdTurn
	"x no puede mover en su tercer turno"
	| aGame |
	aGame := TerniLapilliGame new.
	
	aGame xPutsOn: 0@0.
	aGame putOAt: 0@1.
	aGame xPutsOn: 1@0.
	aGame putOAt: 0@2.

	self should: [aGame xMoves: (1@0) to: (2@0).] raise: Error withMessageText: TerniLapilliGame cannotMoveErrorMessage.
! !
!TerniLapilliGameTest methodsFor: 'as yet unclassified' stamp: 'IO 11/1/2020 18:23:00' prior: 50880520!
test17OCantStartPutting
	"empieza poniendo X"
	| aGame |
	aGame := TerniLapilliGame new.
	
	self should: [aGame putOAt: (0@0)] raise: Error withMessageText: TerniLapilliGame wrongTurnErrorMessage.


! !
!TerniLapilliGame methodsFor: 'as yet unclassified' stamp: 'IO 11/1/2020 18:23:00' prior: 50890106!
putOAt: aPosition

	"put an O token in a given position of the board"

	(self hasTokenAt: aPosition ) ifTrue:[^self error: TerniLapilliGame cannotPutErrorMessage].
	state := state putOAt: aPosition.
! !

!methodRemoval: TerniLapilliGameState #oPutsOn: stamp: 'IO 11/1/2020 18:23:00'!
oPutsOn: aPosition

	"returns the next state when O puts a token"

	oTokens add: aPosition.
	^self passTurn.

!

!methodRemoval: XIsPlaying #oPutsOn: stamp: 'IO 11/1/2020 18:23:00'!
oPutsOn: aPosition

	"see superimplementor"

	self errorIlegalTurn.
!

!methodRemoval: TerniLapilliGame #oPutsOn: stamp: 'IO 11/1/2020 18:23:00'!
oPutsOn: aPosition

	"put an O token in a given position of the board"

	(self hasTokenAt: aPosition ) ifTrue:[^self error: TerniLapilliGame cannotPutErrorMessage].
	state := state putOAt: aPosition.
!

!methodRemoval: OIsMoving #oPutsOn: stamp: 'IO 11/1/2020 18:23:00'!
oPutsOn: aPosition

	"see superimplementor"

	^self errorCannotPut.
!

!methodRemoval: GameIsOver #oPutsOn: stamp: 'IO 11/1/2020 18:23:00'!
oPutsOn: aPosition

	"see superimplementor"

	^self errorGameEnded.
!
!GameIsOver methodsFor: 'moves' stamp: 'IO 11/1/2020 18:23:16'!
moveXFrom: sourcePosition to: destinationPosition

	"see superimplementor"

	^self errorGameEnded.

! !
!TerniLapilliGameState methodsFor: 'moves' stamp: 'IO 11/1/2020 18:23:16'!
moveXFrom: sourcePosition to: destinationPosition

	"returns the next state when X moves a token"

	xTokens move: sourcePosition to: destinationPosition.
	^self passTurn.
! !
!XIsPlacing methodsFor: 'moves' stamp: 'IO 11/1/2020 18:23:16' overrides: 50890525!
moveXFrom: sourcePosition to: destinationPosition

	"see superimplementor"

	^self errorCannotMove.
! !
!TerniLapilliGame methodsFor: 'moves' stamp: 'IO 11/1/2020 18:23:16'!
moveXFrom: sourcePosition to: destinationPosition

	"move O's token from a given position of the board to another given position"

	(self hasTokenAt: destinationPosition ) ifTrue:[^self error: TerniLapilliGame cannotMoveErrorMessage].
	state := state xMoves: sourcePosition to: destinationPosition.
	
	
! !
!OIsPlaying methodsFor: 'moves' stamp: 'IO 11/1/2020 18:23:16' overrides: 50890525!
moveXFrom: sourcePosition to: destinationPosition

	"see superimplementor"

	self errorIlegalTurn.
! !
!TerniLapilliGameTest methodsFor: 'as yet unclassified' stamp: 'IO 11/1/2020 18:23:16' prior: 50880932!
test46XCantMoveaTokenOutsideItsNeighbors
	"X no puede mover fichas hacia m�s de 1 vecinidad"
	

	| aGame |

	aGame := self createGameInMovePhase .
	
	self should: [	aGame moveXFrom: 2@0 to: 0@0.] raise: Error withMessageText: TerniLapilliGame cannotMoveErrorMessage.! !
!TerniLapilliGameTest methodsFor: 'as yet unclassified' stamp: 'IO 11/1/2020 18:23:16' prior: 50880588!
test22XCantMoveOnTheirFirstTurn
	"x no puede mover en su primer turno"
	| aGame |
	aGame := TerniLapilliGame new.
	
	self should: [aGame moveXFrom: (0@0) to: (1@0).] raise: Error withMessageText: TerniLapilliGame cannotMoveErrorMessage.

	! !
!TerniLapilliGameTest methodsFor: 'as yet unclassified' stamp: 'IO 11/1/2020 18:23:16' prior: 50889828!
test06OCanMove
	"movimiento legal de O desp de haber jugado las tres fichas :D"
	| aGame |
	aGame := self createGameInMovePhase.
	
	aGame moveXFrom: (2@0) to: (1@0).
	aGame moveOFrom: (2@1) to: (1@1).

	self assert: (aGame hasOAt: (1@1)).
! !
!TerniLapilliGameTest methodsFor: 'as yet unclassified' stamp: 'IO 11/1/2020 18:23:16' prior: 50880901!
test44XCantMoveTokensThatDontBelongToThem
	"X no puede mover fichas que no sea suyas"
	

	| aGame |

	aGame := self createGameInMovePhase .
	
	self should: [	aGame moveXFrom: 0@2 to: 1@1.] raise: Error withMessageText: TerniLapilliGame cannotMoveErrorMessage.
	self should: [	aGame moveXFrom: 3@2 to: 1@1.] raise: Error withMessageText: TerniLapilliGame cannotMoveErrorMessage.! !
!TerniLapilliGameTest methodsFor: 'as yet unclassified' stamp: 'IO 11/1/2020 18:23:16' prior: 50890142!
test23XCantMoveOnTheirSecondTurn
	"x no puede mover en su segundo turno"
	| aGame |
	aGame := TerniLapilliGame new.
	
	aGame xPutsOn: 0@0.
	aGame putOAt: 0@1.

	self should: [aGame moveXFrom: (0@0) to: (1@0).] raise: Error withMessageText: TerniLapilliGame cannotMoveErrorMessage.

	! !
!TerniLapilliGameTest methodsFor: 'as yet unclassified' stamp: 'IO 11/1/2020 18:23:16' prior: 50880856!
test42XCantMoveToOutsideTheBoard
	"X no puede mover hac�a afuera del tablero"
	

	| aGame |

	aGame := self createGameInMovePhase .
	
	self should: [	aGame moveXFrom: 0@1 to: -1@1.] raise: Error withMessageText: TerniLapilliGame cannotMoveErrorMessage. 
	self should: [	aGame moveXFrom: 0@1 to: 3@1.] raise: Error withMessageText: TerniLapilliGame cannotMoveErrorMessage. 
	self should: [	aGame moveXFrom: 0@1 to: 1@-1.] raise: Error withMessageText: TerniLapilliGame cannotMoveErrorMessage. 
	self should: [	aGame moveXFrom: 0@1 to: 1@3.] raise: Error withMessageText: TerniLapilliGame cannotMoveErrorMessage. 
! !
!TerniLapilliGameTest methodsFor: 'as yet unclassified' stamp: 'IO 11/1/2020 18:23:16' prior: 50888588!
test05XCanMove
	"movimiento legal desp de haber jugado las tres fichas :D"
	| aGame |
	aGame := self createGameInMovePhase.
	
	aGame moveXFrom: (2@0) to: (1@0).

	self assert: (aGame hasXAt: (1@0)).
! !
!TerniLapilliGameTest methodsFor: 'as yet unclassified' stamp: 'IO 11/1/2020 18:23:16' prior: 50889864!
test37OCantMoveToAnOccupiedSpace
	"O no puede mover en un lugar ocupado"
	

	| aGame |
	
	aGame := self createGameInMovePhase .
	aGame moveXFrom: 0@1 to: 0@0.
	
	self should: [	aGame moveOFrom: 2@1 to: 1@2.] raise: Error withMessageText: TerniLapilliGame cannotMoveErrorMessage .
! !
!TerniLapilliGameTest methodsFor: 'as yet unclassified' stamp: 'IO 11/1/2020 18:23:16' prior: 50890458!
test24XCantMoveOnTheirThirdTurn
	"x no puede mover en su tercer turno"
	| aGame |
	aGame := TerniLapilliGame new.
	
	aGame xPutsOn: 0@0.
	aGame putOAt: 0@1.
	aGame xPutsOn: 1@0.
	aGame putOAt: 0@2.

	self should: [aGame moveXFrom: (1@0) to: (2@0).] raise: Error withMessageText: TerniLapilliGame cannotMoveErrorMessage.
! !
!TerniLapilliGameTest methodsFor: 'as yet unclassified' stamp: 'IO 11/1/2020 18:23:16' prior: 50889731!
test21OCantMoveTwiceInARow
	"x no puede mover dos veces seguidas"
	| aGame |
	aGame := self createGameInMovePhase.
	
	aGame moveXFrom: (2@0) to: (1@0).
	aGame moveOFrom: (2@1) to: (1@1).

	self should: [aGame moveOFrom: (1@1) to: (2@1).] raise: Error withMessageText: TerniLapilliGame wrongTurnErrorMessage.
! !
!TerniLapilliGameTest methodsFor: 'as yet unclassified' stamp: 'IO 11/1/2020 18:23:16' prior: 50890303!
test29OCantPutAfterTheirThirdTurn
	"o no puede poner despues de su tercer turno"
	| aGame |
	aGame := self createGameInMovePhase.

	aGame moveXFrom: (0@1) to: (1@1).
	
	self should: [aGame putOAt: (0@1).] raise: Error withMessageText: TerniLapilliGame cannotPutErrorMessage.

	! !
!TerniLapilliGame methodsFor: 'as yet unclassified' stamp: 'IO 11/1/2020 18:23:16' prior: 50889271!
xMoves: sourcePosition to: destinationPosition

	"move O's token from a given position of the board to another given position"

	(self hasTokenAt: destinationPosition ) ifTrue:[^self error: TerniLapilliGame cannotMoveErrorMessage].
	state := state moveXFrom: sourcePosition to: destinationPosition.
	
	
! !
!TerniLapilliGameTest methodsFor: 'as yet unclassified' stamp: 'IO 11/1/2020 18:23:16' prior: 50890204!
test32XCantMoveAfterOWon
	"X no puede mover despues de que O gano"
	| aGame |
	aGame := TerniLapilliGame new.
	
	aGame xPutsOn: 0@0.
	aGame putOAt: 2@0.
	aGame xPutsOn: 1@1.
	aGame putOAt: 2@1.
	aGame xPutsOn: 0@2.
	aGame putOAt: 2@2.

	self should: [aGame moveXFrom: (1@1) to: (0@1).] raise: Error withMessageText: TerniLapilliGame gameEndedErrorMessage.
! !
!TerniLapilliGameTest methodsFor: 'as yet unclassified' stamp: 'IO 11/1/2020 18:23:16' prior: 50880540!
test19XCantMoveTwiceInARow
	"x no puede mover dos veces seguidas"
	| aGame |
	aGame := self createGameInMovePhase.
	
	aGame moveXFrom: (2@0) to: (1@0).
	self should: [aGame moveXFrom: (1@0) to: (2@0).] raise: Error withMessageText: TerniLapilliGame wrongTurnErrorMessage.
! !
!TerniLapilliGameTest methodsFor: 'as yet unclassified' stamp: 'IO 11/1/2020 18:23:16' prior: 50889840!
test43OCantMoveToOutsideTheBoard
	"O no puede mover hac�a afuera del tablero"
	

	| aGame |

	aGame := self createGameInMovePhase .
	aGame moveXFrom: 0@1 to: 0@0.
	
	self should: [	aGame moveOFrom: 0@2 to: -1@1.] raise: Error withMessageText: TerniLapilliGame cannotMoveErrorMessage. 
	self should: [	aGame moveOFrom: 0@2 to: 3@1.] raise: Error withMessageText: TerniLapilliGame cannotMoveErrorMessage. 
	self should: [	aGame moveOFrom: 0@2 to: 1@-1.] raise: Error withMessageText: TerniLapilliGame cannotMoveErrorMessage. 
	self should: [	aGame moveOFrom: 0@2 to: 1@3.] raise: Error withMessageText: TerniLapilliGame cannotMoveErrorMessage. 
	
! !
!TerniLapilliGameTest methodsFor: 'as yet unclassified' stamp: 'IO 11/1/2020 18:23:16' prior: 50880775!
test36XCantMoveToAnOccupiedSpace
	"X no puede mover en un lugar ocupado"
	

	| aGame |
	
	aGame := self createGameInMovePhase .
	
	self should: [	aGame moveXFrom: 1@2 to: 2@1.] raise: Error withMessageText: TerniLapilliGame cannotMoveErrorMessage .
! !
!TerniLapilliGameTest methodsFor: 'as yet unclassified' stamp: 'IO 11/1/2020 18:23:16' prior: 50889799!
test45OCantMoveTokensThatDontBelongToThem
	"O no puede mover fichas que no sea suyas"
	

	| aGame |

	aGame := self createGameInMovePhase .
	aGame moveXFrom: 0@1 to: 1@1.
	
	self should: [	aGame moveOFrom: 1@1 to: 0@1.] raise: Error withMessageText: TerniLapilliGame cannotMoveErrorMessage.
	self should: [	aGame moveOFrom: 3@1 to: 0@1.] raise: Error withMessageText: TerniLapilliGame cannotMoveErrorMessage.! !
!TerniLapilliGameTest methodsFor: 'as yet unclassified' stamp: 'IO 11/1/2020 18:23:16' prior: 50890388!
test31OCantMoveAfterXWon
	"O no puede mover despues de que X gano"
	| aGame |
	aGame := TerniLapilliGame new.
	
	aGame xPutsOn: 0@0.
	aGame putOAt: 1@0.
	aGame xPutsOn: 1@1.
	aGame putOAt: 2@1.
	aGame xPutsOn: 0@2.
	aGame putOAt: 2@2.
	
	aGame moveXFrom: (1@1) to: (0@1).
	
	self should: [aGame moveOFrom: (2@2) to: (1@2)] raise: Error withMessageText: TerniLapilliGame gameEndedErrorMessage.
! !
!TerniLapilliGameTest methodsFor: 'as yet unclassified' stamp: 'IO 11/1/2020 18:23:16' prior: 50889786!
test47OCantMoveATokenOutsideItsNeighbors
	"O no puede mover fichas hacia m�s de 1 vecinidad"
	

	| aGame |

	aGame := self createGameInMovePhase .
	aGame moveXFrom: 0@1 to: 0@0.
	
	self should: [	aGame moveOFrom: 2@1 to: 0@1.] raise: Error withMessageText: TerniLapilliGame cannotMoveErrorMessage.! !
!TerniLapilliGame methodsFor: 'as yet unclassified' stamp: 'IO 11/1/2020 18:23:16' prior: 50890540!
moveXFrom: sourcePosition to: destinationPosition

	"move O's token from a given position of the board to another given position"

	(self hasTokenAt: destinationPosition ) ifTrue:[^self error: TerniLapilliGame cannotMoveErrorMessage].
	state := state moveXFrom: sourcePosition to: destinationPosition.
	
	
! !

!methodRemoval: GameIsOver #xMoves:to: stamp: 'IO 11/1/2020 18:23:16'!
xMoves: sourcePosition to: destinationPosition

	"see superimplementor"

	^self errorGameEnded.

!

!methodRemoval: TerniLapilliGameState #xMoves:to: stamp: 'IO 11/1/2020 18:23:16'!
xMoves: sourcePosition to: destinationPosition

	"returns the next state when X moves a token"

	xTokens move: sourcePosition to: destinationPosition.
	^self passTurn.
!

!methodRemoval: XIsPlacing #xMoves:to: stamp: 'IO 11/1/2020 18:23:16'!
xMoves: sourcePosition to: destinationPosition

	"see superimplementor"

	^self errorCannotMove.
!

!methodRemoval: TerniLapilliGame #xMoves:to: stamp: 'IO 11/1/2020 18:23:16'!
xMoves: sourcePosition to: destinationPosition

	"move O's token from a given position of the board to another given position"

	(self hasTokenAt: destinationPosition ) ifTrue:[^self error: TerniLapilliGame cannotMoveErrorMessage].
	state := state moveXFrom: sourcePosition to: destinationPosition.
	
	
!

!methodRemoval: OIsPlaying #xMoves:to: stamp: 'IO 11/1/2020 18:23:16'!
xMoves: sourcePosition to: destinationPosition

	"see superimplementor"

	self errorIlegalTurn.
!

!testRun: #TerniLapilliGameTest #test01XCanPutAToken stamp: 'IO 11/1/2020 18:23:19'!
PASSED!

!testRun: #TerniLapilliGameTest #test02puttingDoesNotAffectOtherPositions stamp: 'IO 11/1/2020 18:23:19'!
PASSED!

!testRun: #TerniLapilliGameTest #test03XCanPutInOtherPositions stamp: 'IO 11/1/2020 18:23:19'!
PASSED!

!testRun: #TerniLapilliGameTest #test04OCanPut stamp: 'IO 11/1/2020 18:23:19'!
PASSED!

!testRun: #TerniLapilliGameTest #test05XCanMove stamp: 'IO 11/1/2020 18:23:19'!
PASSED!

!testRun: #TerniLapilliGameTest #test06OCanMove stamp: 'IO 11/1/2020 18:23:19'!
PASSED!

!testRun: #TerniLapilliGameTest #test07XWinsWithTheFirstColumn stamp: 'IO 11/1/2020 18:23:19'!
PASSED!

!testRun: #TerniLapilliGameTest #test08XHasntWonYet stamp: 'IO 11/1/2020 18:23:19'!
PASSED!

!testRun: #TerniLapilliGameTest #test09XWinsWithTheSecondColumn stamp: 'IO 11/1/2020 18:23:19'!
PASSED!

!testRun: #TerniLapilliGameTest #test10XWinsWithTheThirdColumn stamp: 'IO 11/1/2020 18:23:19'!
PASSED!

!testRun: #TerniLapilliGameTest #test11XWinsWithTheFirstRow stamp: 'IO 11/1/2020 18:23:19'!
PASSED!

!testRun: #TerniLapilliGameTest #test12XWinsWithTheSecondRow stamp: 'IO 11/1/2020 18:23:19'!
PASSED!

!testRun: #TerniLapilliGameTest #test13XWinsWithTheThirdRow stamp: 'IO 11/1/2020 18:23:19'!
PASSED!

!testRun: #TerniLapilliGameTest #test14XWinsWithTheCrescentDiagonal stamp: 'IO 11/1/2020 18:23:19'!
PASSED!

!testRun: #TerniLapilliGameTest #test15XWinsWithTheDescendantDiagonal stamp: 'IO 11/1/2020 18:23:19'!
PASSED!

!testRun: #TerniLapilliGameTest #test16OWnis stamp: 'IO 11/1/2020 18:23:19'!
PASSED!

!testRun: #TerniLapilliGameTest #test17OCantStartPutting stamp: 'IO 11/1/2020 18:23:19'!
PASSED!

!testRun: #TerniLapilliGameTest #test18XCantPutTwiceInARow stamp: 'IO 11/1/2020 18:23:19'!
PASSED!

!testRun: #TerniLapilliGameTest #test19XCantMoveTwiceInARow stamp: 'IO 11/1/2020 18:23:19'!
PASSED!

!testRun: #TerniLapilliGameTest #test20OCantPutTwiceInARow stamp: 'IO 11/1/2020 18:23:19'!
PASSED!

!testRun: #TerniLapilliGameTest #test21OCantMoveTwiceInARow stamp: 'IO 11/1/2020 18:23:19'!
PASSED!

!testRun: #TerniLapilliGameTest #test22XCantMoveOnTheirFirstTurn stamp: 'IO 11/1/2020 18:23:19'!
PASSED!

!testRun: #TerniLapilliGameTest #test23XCantMoveOnTheirSecondTurn stamp: 'IO 11/1/2020 18:23:19'!
PASSED!

!testRun: #TerniLapilliGameTest #test24XCantMoveOnTheirThirdTurn stamp: 'IO 11/1/2020 18:23:19'!
PASSED!

!testRun: #TerniLapilliGameTest #test25OCantMoveOnTheirFirstTurn stamp: 'IO 11/1/2020 18:23:19'!
PASSED!

!testRun: #TerniLapilliGameTest #test26OCantMoveOnTheirSecondTurn stamp: 'IO 11/1/2020 18:23:19'!
PASSED!

!testRun: #TerniLapilliGameTest #test27OCantMoveOnTheirThirdTurn stamp: 'IO 11/1/2020 18:23:19'!
PASSED!

!testRun: #TerniLapilliGameTest #test28XCantPutAfterTheirThirdTurn stamp: 'IO 11/1/2020 18:23:19'!
PASSED!

!testRun: #TerniLapilliGameTest #test29OCantPutAfterTheirThirdTurn stamp: 'IO 11/1/2020 18:23:19'!
PASSED!

!testRun: #TerniLapilliGameTest #test30OCantPutAfterXWon stamp: 'IO 11/1/2020 18:23:19'!
PASSED!

!testRun: #TerniLapilliGameTest #test31OCantMoveAfterXWon stamp: 'IO 11/1/2020 18:23:19'!
PASSED!

!testRun: #TerniLapilliGameTest #test32XCantMoveAfterOWon stamp: 'IO 11/1/2020 18:23:19'!
PASSED!

!testRun: #TerniLapilliGameTest #test33XCantPutAfterOWon stamp: 'IO 11/1/2020 18:23:19'!
PASSED!

!testRun: #TerniLapilliGameTest #test34XCantPutInAnOccupiedSpace stamp: 'IO 11/1/2020 18:23:19'!
PASSED!

!testRun: #TerniLapilliGameTest #test35OCantPutInAnOccupiedSpace stamp: 'IO 11/1/2020 18:23:19'!
PASSED!

!testRun: #TerniLapilliGameTest #test36XCantMoveToAnOccupiedSpace stamp: 'IO 11/1/2020 18:23:19'!
PASSED!

!testRun: #TerniLapilliGameTest #test37OCantMoveToAnOccupiedSpace stamp: 'IO 11/1/2020 18:23:19'!
PASSED!

!testRun: #TerniLapilliGameTest #test38XCantPutOutsideTheBoardUnderXAxis stamp: 'IO 11/1/2020 18:23:19'!
PASSED!

!testRun: #TerniLapilliGameTest #test39XCantPutOutsideTheBoardAboveXAxis stamp: 'IO 11/1/2020 18:23:19'!
PASSED!

!testRun: #TerniLapilliGameTest #test40XCantPutOutsideTheBoardUnderNorAboveTheYAxis stamp: 'IO 11/1/2020 18:23:19'!
PASSED!

!testRun: #TerniLapilliGameTest #test41OCantPutOutsideTheBoard stamp: 'IO 11/1/2020 18:23:19'!
PASSED!

!testRun: #TerniLapilliGameTest #test42XCantMoveToOutsideTheBoard stamp: 'IO 11/1/2020 18:23:19'!
PASSED!

!testRun: #TerniLapilliGameTest #test43OCantMoveToOutsideTheBoard stamp: 'IO 11/1/2020 18:23:19'!
PASSED!

!testRun: #TerniLapilliGameTest #test44XCantMoveTokensThatDontBelongToThem stamp: 'IO 11/1/2020 18:23:19'!
PASSED!

!testRun: #TerniLapilliGameTest #test45OCantMoveTokensThatDontBelongToThem stamp: 'IO 11/1/2020 18:23:19'!
PASSED!

!testRun: #TerniLapilliGameTest #test46XCantMoveaTokenOutsideItsNeighbors stamp: 'IO 11/1/2020 18:23:19'!
PASSED!

!testRun: #TerniLapilliGameTest #test47OCantMoveATokenOutsideItsNeighbors stamp: 'IO 11/1/2020 18:23:19'!
PASSED!
!OIsPlaying methodsFor: 'moves' stamp: 'IO 11/1/2020 18:23:30'!
putXAt: aPosition

	"see superimplementor"

	self errorIlegalTurn.
! !
!GameIsOver methodsFor: 'moves' stamp: 'IO 11/1/2020 18:23:30'!
putXAt: aPosition

	"see superimplementor"

	^self errorGameEnded.
! !
!TerniLapilliGame methodsFor: 'moves' stamp: 'IO 11/1/2020 18:23:30'!
putXAt: aPosition

	"put an O token in a given position of the board"

	(self hasTokenAt: aPosition ) ifTrue:[^self error: TerniLapilliGame cannotPutErrorMessage].
	state := state xPutsOn: aPosition.
! !
!XIsMoving methodsFor: 'moves' stamp: 'IO 11/1/2020 18:23:30'!
putXAt: aPosition

	"see superimplementor"

	^self errorCannotPut.
! !
!TerniLapilliGameState methodsFor: 'moves' stamp: 'IO 11/1/2020 18:23:30'!
putXAt: aPosition

	"returns the next state when X puts a token"

	xTokens add: aPosition.
	^self passTurn.
! !
!TerniLapilliGameTest methodsFor: 'as yet unclassified' stamp: 'IO 11/1/2020 18:23:30' prior: 50890167!
test41OCantPutOutsideTheBoard
	"O no puede mover hac�a afuera del tablero"
	

	| aGame |

	aGame := TerniLapilliGame new.
	aGame putXAt: 0@0.
	
	self should: [	aGame putOAt: 0@3.] raise: Error withMessageText: TerniLapilliGame cannotPutErrorMessage. 
	self should: [	aGame putOAt: 0@-1.] raise: Error withMessageText: TerniLapilliGame cannotPutErrorMessage. 
	self should: [	aGame putOAt: 3@0.] raise: Error withMessageText: TerniLapilliGame cannotPutErrorMessage. 
	self should: [	aGame putOAt: -1@0.] raise: Error withMessageText: TerniLapilliGame cannotPutErrorMessage. 
! !
!TerniLapilliGameTest methodsFor: 'as yet unclassified' stamp: 'IO 11/1/2020 18:23:30' prior: 50880820!
test40XCantPutOutsideTheBoardUnderNorAboveTheYAxis
	"X no puede poner afuera del tablero por y"
	

	| aGame |
	
	aGame := TerniLapilliGame new.
	
	self should: [	aGame putXAt: 1@-1.] raise: Error withMessageText: TerniLapilliGame cannotPutErrorMessage .
	self should: [	aGame putXAt: 1@3.] raise: Error withMessageText: TerniLapilliGame cannotPutErrorMessage .
! !
!TerniLapilliGameTest methodsFor: 'as yet unclassified' stamp: 'IO 11/1/2020 18:23:30' prior: 50890155!
test10XWinsWithTheThirdColumn
	"ahora X gana competando la tercer columna"
	| aGame |
	aGame := TerniLapilliGame new.
	
	aGame putXAt: 0@2.
	aGame putOAt: 0@0.
	aGame putXAt: 1@2.
	aGame putOAt: 1@0.
	aGame putXAt: 2@2.
	
	self assert: aGame hasXWon.
! !
!TerniLapilliGameTest methodsFor: 'as yet unclassified' stamp: 'IO 11/1/2020 18:23:30' prior: 50890612!
test23XCantMoveOnTheirSecondTurn
	"x no puede mover en su segundo turno"
	| aGame |
	aGame := TerniLapilliGame new.
	
	aGame putXAt: 0@0.
	aGame putOAt: 0@1.

	self should: [aGame moveXFrom: (0@0) to: (1@0).] raise: Error withMessageText: TerniLapilliGame cannotMoveErrorMessage.

	! !
!TerniLapilliGameTest methodsFor: 'as yet unclassified' stamp: 'IO 11/1/2020 18:23:30' prior: 50890219!
test14XWinsWithTheCrescentDiagonal
	"X gana competando la diagonal creciente"
	| aGame |
	aGame := TerniLapilliGame new.
	
	aGame putXAt: 0@0.
	aGame putOAt: 1@0.
	aGame putXAt: 1@1.
	aGame putOAt: 2@1.
	aGame putXAt: 2@2.
	
	self assert: aGame hasXWon.
! !
!TerniLapilliGame methodsFor: 'as yet unclassified' stamp: 'IO 11/1/2020 18:23:30' prior: 50889284!
xPutsOn: aPosition

	"put an O token in a given position of the board"

	(self hasTokenAt: aPosition ) ifTrue:[^self error: TerniLapilliGame cannotPutErrorMessage].
	state := state putXAt: aPosition.
! !
!TerniLapilliGameTest methodsFor: 'as yet unclassified' stamp: 'IO 11/1/2020 18:23:30' prior: 50890351!
test13XWinsWithTheThirdRow
	"X gana competando la tercer fila"
	| aGame |
	aGame := TerniLapilliGame new.
	
	aGame putXAt: 2@0.
	aGame putOAt: 0@0.
	aGame putXAt: 2@1.
	aGame putOAt: 0@1.
	aGame putXAt: 2@2.
	
	self assert: aGame hasXWon.
! !
!TerniLapilliGameTest methodsFor: 'as yet unclassified' stamp: 'IO 11/1/2020 18:23:30' prior: 50890126!
test34XCantPutInAnOccupiedSpace
	"X no puede poner en un lugar ocupado"
	

	| aGame |
	
	aGame := TerniLapilliGame new.
	
	aGame putXAt: 0@0.
	aGame putOAt: 2@0.

	self should: [	aGame putXAt: 0@0.] raise: Error withMessageText: TerniLapilliGame cannotPutErrorMessage .
	self should: [	aGame putXAt: 2@0.] raise: Error withMessageText: TerniLapilliGame cannotPutErrorMessage .
! !
!TerniLapilliGameTest methodsFor: 'as yet unclassified' stamp: 'IO 11/1/2020 18:23:30' prior: 50888553!
test01XCanPutAToken
	"x pone en 0@0"
	| aGame |
	aGame := TerniLapilliGame new.
	
	aGame putXAt: 0@0.

	self assert: (aGame hasXAt: (0@0)).
! !
!TerniLapilliGameTest methodsFor: 'as yet unclassified' stamp: 'IO 11/1/2020 18:23:30' prior: 50890806!
test31OCantMoveAfterXWon
	"O no puede mover despues de que X gano"
	| aGame |
	aGame := TerniLapilliGame new.
	
	aGame putXAt: 0@0.
	aGame putOAt: 1@0.
	aGame putXAt: 1@1.
	aGame putOAt: 2@1.
	aGame putXAt: 0@2.
	aGame putOAt: 2@2.
	
	aGame moveXFrom: (1@1) to: (0@1).
	
	self should: [aGame moveOFrom: (2@2) to: (1@2)] raise: Error withMessageText: TerniLapilliGame gameEndedErrorMessage.
! !
!TerniLapilliGameTest methodsFor: 'as yet unclassified' stamp: 'IO 11/1/2020 18:23:30' prior: 50890257!
test16OWnis
	"ahora gana O!!"
	| aGame |
	aGame := TerniLapilliGame new.
	
	aGame putXAt: 0@0.
	aGame putOAt: 0@1.
	aGame putXAt: 2@0.
	aGame putOAt: 1@1.
	aGame putXAt: 2@2.
	aGame putOAt: 2@1.
	
	self assert: aGame hasOWon.
! !
!TerniLapilliGameTest methodsFor: 'as yet unclassified' stamp: 'IO 11/1/2020 18:23:30' prior: 50880809!
test39XCantPutOutsideTheBoardAboveXAxis
	"X no puede poner afuera del tablero por x, por arriba"
	

	| aGame |
	
	aGame := TerniLapilliGame new.
	
	self should: [	aGame putXAt: 3@1.] raise: Error withMessageText: TerniLapilliGame cannotPutErrorMessage .
! !
!TerniLapilliGameTest methodsFor: 'as yet unclassified' stamp: 'IO 11/1/2020 18:23:30' prior: 50890363!
test20OCantPutTwiceInARow
	"despues de X pone Y"
	| aGame |
	aGame := TerniLapilliGame new.
	
	aGame putXAt: (0@0).
	aGame putOAt:(0@1).

	self should: [aGame putOAt: (0@2)] raise: Error withMessageText: TerniLapilliGame wrongTurnErrorMessage.


! !
!TerniLapilliGameTest methodsFor: 'as yet unclassified' stamp: 'IO 11/1/2020 18:23:30' prior: 50890375!
createGameInMovePhase
	"revisar este metodo al usuarlo para usarlo correctamente en los tests ;)"
	| aGame |
	aGame := TerniLapilliGame new.
	
	aGame putXAt: 0@1.
	aGame putOAt: 0@2.
	aGame putXAt: 1@2.
	aGame putOAt: 2@1.
	aGame putXAt: 2@0.
	aGame putOAt: 2@2.
	
	^aGame
! !
!TerniLapilliGameTest methodsFor: 'as yet unclassified' stamp: 'IO 11/1/2020 18:23:30' prior: 50890268!
test11XWinsWithTheFirstRow
	"X gana completando la primer fila"
	| aGame |
	aGame := TerniLapilliGame new.
	
	aGame putXAt: 0@0.
	aGame putOAt: 1@0.
	aGame putXAt: 0@1.
	aGame putOAt: 1@1.
	aGame putXAt: 0@2.
	
	self assert: aGame hasXWon.
! !
!TerniLapilliGameTest methodsFor: 'as yet unclassified' stamp: 'IO 11/1/2020 18:23:30' prior: 50890417!
test27OCantMoveOnTheirThirdTurn
	"o no puede mover en su tercer turno"
	| aGame |
	aGame := TerniLapilliGame new.
	
	aGame putXAt: 0@0.
	aGame putOAt: 0@1.
	aGame putXAt: 1@0.
	aGame putOAt: 2@2.
	aGame putXAt: 2@1.

	self should: [aGame moveOFrom: (0@0) to: (1@0).] raise: Error withMessageText: TerniLapilliGame cannotMoveErrorMessage.

	! !
!TerniLapilliGameTest methodsFor: 'as yet unclassified' stamp: 'IO 11/1/2020 18:23:30' prior: 50890405!
test12XWinsWithTheSecondRow
	"X gana competando la segunda fila"
	| aGame |
	aGame := TerniLapilliGame new.
	
	aGame putXAt: 1@0.
	aGame putOAt: 2@0.
	aGame putXAt: 1@1.
	aGame putOAt: 2@1.
	aGame putXAt: 1@2.
	
	self assert: aGame hasXWon.
! !
!TerniLapilliGameTest methodsFor: 'as yet unclassified' stamp: 'IO 11/1/2020 18:23:30' prior: 50880662!
test28XCantPutAfterTheirThirdTurn
	"x no puedo poner despues de su tercer turno"
	| aGame |
	aGame := self createGameInMovePhase.
	
	self should: [aGame putXAt: (1@1).] raise: Error withMessageText: TerniLapilliGame cannotPutErrorMessage.

	! !
!TerniLapilliGameTest methodsFor: 'as yet unclassified' stamp: 'IO 11/1/2020 18:23:30' prior: 50890316!
test09XWinsWithTheSecondColumn
	"X gana competando la segunda columna"
	| aGame |
	aGame := TerniLapilliGame new.
	
	aGame putXAt: 0@1.
	aGame putOAt: 0@2.
	aGame putXAt: 1@1.
	aGame putOAt: 1@2.
	aGame putXAt: 2@1.
	
	self assert: aGame hasXWon.
! !
!TerniLapilliGameTest methodsFor: 'as yet unclassified' stamp: 'IO 11/1/2020 18:23:30' prior: 50890671!
test24XCantMoveOnTheirThirdTurn
	"x no puede mover en su tercer turno"
	| aGame |
	aGame := TerniLapilliGame new.
	
	aGame putXAt: 0@0.
	aGame putOAt: 0@1.
	aGame putXAt: 1@0.
	aGame putOAt: 0@2.

	self should: [aGame moveXFrom: (1@0) to: (2@0).] raise: Error withMessageText: TerniLapilliGame cannotMoveErrorMessage.
! !
!TerniLapilliGameTest methodsFor: 'as yet unclassified' stamp: 'IO 11/1/2020 18:23:30' prior: 50890294!
test04OCanPut
	"o pone en 0@0"
	| aGame |
	aGame := TerniLapilliGame new.
	
	aGame putXAt: 0@1.
	aGame putOAt: 0@0.

	self assert: (aGame hasOAt: (0@0)).
! !
!TerniLapilliGameTest methodsFor: 'as yet unclassified' stamp: 'IO 11/1/2020 18:23:30' prior: 50888570!
test03XCanPutInOtherPositions
	"x pone en 0@1"
	| aGame |
	aGame := TerniLapilliGame new.
	
	aGame putXAt: 0@1.

	self assert: (aGame hasXAt: 0@1).
! !
!TerniLapilliGameTest methodsFor: 'as yet unclassified' stamp: 'IO 11/1/2020 18:23:30' prior: 50890280!
test26OCantMoveOnTheirSecondTurn
	"o no puede mover en su segundo turno"
	| aGame |
	aGame := TerniLapilliGame new.
	
	aGame putXAt: 0@0.
	aGame putOAt: 0@1.
	aGame putXAt: 1@0.

	self should: [aGame moveOFrom: (0@0) to: (1@0).] raise: Error withMessageText: TerniLapilliGame cannotMoveErrorMessage.

	! !
!TerniLapilliGameTest methodsFor: 'as yet unclassified' stamp: 'IO 11/1/2020 18:23:30' prior: 50889759!
test25OCantMoveOnTheirFirstTurn
	"o no puede mover en su primer turno"
	| aGame |
	aGame := TerniLapilliGame new.
	
	aGame putXAt: 0@0.

	self should: [aGame moveOFrom: (0@0) to: (1@0).] raise: Error withMessageText: TerniLapilliGame cannotMoveErrorMessage.

	! !
!TerniLapilliGameTest methodsFor: 'as yet unclassified' stamp: 'IO 11/1/2020 18:23:30' prior: 50890444!
test30OCantPutAfterXWon
	"O no puede poner despues de que X gano"
	| aGame |
	aGame := TerniLapilliGame new.
	
	aGame putXAt: 0@1.
	aGame putOAt: 0@2.
	aGame putXAt: 1@1.
	aGame putOAt: 1@2.
	aGame putXAt: 2@1.
	
	self should: [aGame putOAt: (2@2).] raise: Error withMessageText: TerniLapilliGame gameEndedErrorMessage.
! !
!TerniLapilliGameTest methodsFor: 'as yet unclassified' stamp: 'IO 11/1/2020 18:23:30' prior: 50890432!
test15XWinsWithTheDescendantDiagonal
	"X gana competando la diagonal decreciente"
	| aGame |
	aGame := TerniLapilliGame new.
	
	aGame putXAt: 2@0.
	aGame putOAt: 1@0.
	aGame putXAt: 1@1.
	aGame putOAt: 2@1.
	aGame putXAt: 0@2.
	
	self assert: aGame hasXWon.
! !
!TerniLapilliGameTest methodsFor: 'as yet unclassified' stamp: 'IO 11/1/2020 18:23:30' prior: 50880798!
test38XCantPutOutsideTheBoardUnderXAxis
	"X no puede poner afuera del tablero por x, por abajo"
	

	| aGame |
	
	aGame := TerniLapilliGame new.
	
	self should: [	aGame putXAt: -1@1.] raise: Error withMessageText: TerniLapilliGame cannotPutErrorMessage .
! !
!TerniLapilliGameTest methodsFor: 'as yet unclassified' stamp: 'IO 11/1/2020 18:23:30' prior: 50888561!
test02puttingDoesNotAffectOtherPositions
	"x pone en 0@0 pero no en 0@1"
	| aGame |
	aGame := TerniLapilliGame new.
	
	aGame putXAt: 0@0.

	self deny: (aGame hasXAt: 0@1).
! !
!TerniLapilliGameTest methodsFor: 'as yet unclassified' stamp: 'IO 11/1/2020 18:23:30' prior: 50890231!
test35OCantPutInAnOccupiedSpace
	"O no puede poner en un lugar ocupado"
	

	| aGame |
	
	aGame := TerniLapilliGame new.
	
	aGame putXAt: 0@0.
	aGame putOAt: 0@1.
	aGame putXAt: 0@2.

	self should: [	aGame putOAt: 0@0.] raise: Error withMessageText: TerniLapilliGame cannotPutErrorMessage .
	self should: [	aGame putOAt: 0@1.] raise: Error withMessageText: TerniLapilliGame cannotPutErrorMessage .
! !
!TerniLapilliGameTest methodsFor: 'as yet unclassified' stamp: 'IO 11/1/2020 18:23:30' prior: 50890340!
test08XHasntWonYet
	"X todavia no gano"
	| aGame |
	aGame := TerniLapilliGame new.
	
	aGame putXAt: 0@0.
	aGame putOAt: 0@1.
	aGame putXAt: 1@0.
	aGame putOAt: 1@1.
	aGame putXAt: 2@2.
	
	self deny: aGame hasXWon.
! !
!TerniLapilliGameTest methodsFor: 'as yet unclassified' stamp: 'IO 11/1/2020 18:23:30' prior: 50890189!
test33XCantPutAfterOWon
	"X no puede poner despues de que O gano"
	| aGame |
	aGame := TerniLapilliGame new.
	
	aGame putXAt: 0@0.
	aGame putOAt: 2@0.
	aGame putXAt: 1@1.
	aGame putOAt: 2@1.
	aGame putXAt: 0@2.
	aGame putOAt: 2@2.

	self should: [aGame putXAt: (0@1).] raise: Error withMessageText: TerniLapilliGame gameEndedErrorMessage.
! !
!TerniLapilliGameTest methodsFor: 'as yet unclassified' stamp: 'IO 11/1/2020 18:23:30' prior: 50890328!
test07XWinsWithTheFirstColumn
	"primer posicion ganadora para X, la primer columna"
	| aGame |
	aGame := TerniLapilliGame new.
	
	aGame putXAt: 0@0.
	aGame putOAt: 0@1.
	aGame putXAt: 1@0.
	aGame putOAt: 1@1.
	aGame putXAt: 2@0.
	
	self assert: aGame hasXWon.
! !
!TerniLapilliGameTest methodsFor: 'as yet unclassified' stamp: 'IO 11/1/2020 18:23:30' prior: 50890725!
test32XCantMoveAfterOWon
	"X no puede mover despues de que O gano"
	| aGame |
	aGame := TerniLapilliGame new.
	
	aGame putXAt: 0@0.
	aGame putOAt: 2@0.
	aGame putXAt: 1@1.
	aGame putOAt: 2@1.
	aGame putXAt: 0@2.
	aGame putOAt: 2@2.

	self should: [aGame moveXFrom: (1@1) to: (0@1).] raise: Error withMessageText: TerniLapilliGame gameEndedErrorMessage.
! !
!TerniLapilliGameTest methodsFor: 'as yet unclassified' stamp: 'IO 11/1/2020 18:23:30' prior: 50880530!
test18XCantPutTwiceInARow
	"despues de X pone Y"
	| aGame |
	aGame := TerniLapilliGame new.
	
	aGame putXAt: (0@0).
	self should: [aGame putXAt: (0@1)] raise: Error withMessageText: TerniLapilliGame wrongTurnErrorMessage.


! !
!TerniLapilliGame methodsFor: 'as yet unclassified' stamp: 'IO 11/1/2020 18:23:30' prior: 50891047!
putXAt: aPosition

	"put an O token in a given position of the board"

	(self hasTokenAt: aPosition ) ifTrue:[^self error: TerniLapilliGame cannotPutErrorMessage].
	state := state putXAt: aPosition.
! !

!methodRemoval: OIsPlaying #xPutsOn: stamp: 'IO 11/1/2020 18:23:30'!
xPutsOn: aPosition

	"see superimplementor"

	self errorIlegalTurn.
!

!methodRemoval: GameIsOver #xPutsOn: stamp: 'IO 11/1/2020 18:23:30'!
xPutsOn: aPosition

	"see superimplementor"

	^self errorGameEnded.
!

!methodRemoval: TerniLapilliGame #xPutsOn: stamp: 'IO 11/1/2020 18:23:30'!
xPutsOn: aPosition

	"put an O token in a given position of the board"

	(self hasTokenAt: aPosition ) ifTrue:[^self error: TerniLapilliGame cannotPutErrorMessage].
	state := state putXAt: aPosition.
!

!methodRemoval: XIsMoving #xPutsOn: stamp: 'IO 11/1/2020 18:23:30'!
xPutsOn: aPosition

	"see superimplementor"

	^self errorCannotPut.
!

!methodRemoval: TerniLapilliGameState #xPutsOn: stamp: 'IO 11/1/2020 18:23:30'!
xPutsOn: aPosition

	"returns the next state when X puts a token"

	xTokens add: aPosition.
	^self passTurn.
!
!TerniLapilliPlayerTokens methodsFor: 'moves' stamp: 'IO 11/1/2020 18:24:37'!
put: aPosition

	"add a token in a given position of the board"

	self validateIsInBoard: aPosition withErrorMessage: TerniLapilliGame cannotPutErrorMessage.
	tokens add: aPosition.
! !
!TerniLapilliPlayerTokens methodsFor: 'as yet unclassified' stamp: 'IO 11/1/2020 18:24:37' prior: 50882775!
add: aPosition

	"add a token in a given position of the board"

	self validateIsInBoard: aPosition withErrorMessage: TerniLapilliGame cannotPutErrorMessage.
	tokens put: aPosition.
! !
!TerniLapilliGameState methodsFor: 'as yet unclassified' stamp: 'IO 11/1/2020 18:24:37' prior: 50890094!
putOAt: aPosition

	"returns the next state when O puts a token"

	oTokens put: aPosition.
	^self passTurn.

! !
!TerniLapilliGameState methodsFor: 'as yet unclassified' stamp: 'IO 11/1/2020 18:24:37' prior: 50891061!
putXAt: aPosition

	"returns the next state when X puts a token"

	xTokens put: aPosition.
	^self passTurn.
! !
!TerniLapilliPlayerTokens methodsFor: 'as yet unclassified' stamp: 'IO 11/1/2020 18:24:37' prior: 50884346!
move: sourcePosition to: destinationPosition

	"move a token form a given position of the board to another position"

	self validateIsLegalMoveFrom: sourcePosition to: destinationPosition.

	tokens remove: sourcePosition.
	tokens put: destinationPosition.
! !
!TerniLapilliPlayerTokens methodsFor: 'as yet unclassified' stamp: 'IO 11/1/2020 18:24:37' prior: 50891538!
put: aPosition

	"add a token in a given position of the board"

	self validateIsInBoard: aPosition withErrorMessage: TerniLapilliGame cannotPutErrorMessage.
	tokens put: aPosition.
! !

!methodRemoval: TerniLapilliPlayerTokens #add: stamp: 'IO 11/1/2020 18:24:37'!
add: aPosition

	"add a token in a given position of the board"

	self validateIsInBoard: aPosition withErrorMessage: TerniLapilliGame cannotPutErrorMessage.
	tokens put: aPosition.
!
!TerniLapilliPlayerTokens methodsFor: 'moves' stamp: 'IO 11/1/2020 18:24:47'!
moveFrom: sourcePosition to: destinationPosition

	"move a token form a given position of the board to another position"

	self validateIsLegalMoveFrom: sourcePosition to: destinationPosition.

	tokens remove: sourcePosition.
	tokens put: destinationPosition.
! !
!TerniLapilliGameState methodsFor: 'as yet unclassified' stamp: 'IO 11/1/2020 18:24:47' prior: 50890525!
moveXFrom: sourcePosition to: destinationPosition

	"returns the next state when X moves a token"

	xTokens moveFrom: sourcePosition to: destinationPosition.
	^self passTurn.
! !
!TerniLapilliGameState methodsFor: 'as yet unclassified' stamp: 'IO 11/1/2020 18:24:47' prior: 50889691!
moveOFrom: sourcePosition to: destinationPosition

	"returns the next state when O moves a token"

	oTokens moveFrom: sourcePosition to: destinationPosition.
	^self passTurn.
! !

!methodRemoval: TerniLapilliPlayerTokens #move:to: stamp: 'IO 11/1/2020 18:24:47'!
move: sourcePosition to: destinationPosition

	"move a token form a given position of the board to another position"

	self validateIsLegalMoveFrom: sourcePosition to: destinationPosition.

	tokens remove: sourcePosition.
	tokens put: destinationPosition.
!

!testRun: #TerniLapilliGameTest #test01XCanPutAToken stamp: 'IO 11/1/2020 18:24:56'!
ERROR!

!testRun: #TerniLapilliGameTest #test02puttingDoesNotAffectOtherPositions stamp: 'IO 11/1/2020 18:24:56'!
ERROR!

!testRun: #TerniLapilliGameTest #test03XCanPutInOtherPositions stamp: 'IO 11/1/2020 18:24:56'!
ERROR!

!testRun: #TerniLapilliGameTest #test04OCanPut stamp: 'IO 11/1/2020 18:24:56'!
ERROR!

!testRun: #TerniLapilliGameTest #test05XCanMove stamp: 'IO 11/1/2020 18:24:56'!
ERROR!

!testRun: #TerniLapilliGameTest #test06OCanMove stamp: 'IO 11/1/2020 18:24:56'!
ERROR!

!testRun: #TerniLapilliGameTest #test07XWinsWithTheFirstColumn stamp: 'IO 11/1/2020 18:24:56'!
ERROR!

!testRun: #TerniLapilliGameTest #test08XHasntWonYet stamp: 'IO 11/1/2020 18:24:56'!
ERROR!

!testRun: #TerniLapilliGameTest #test09XWinsWithTheSecondColumn stamp: 'IO 11/1/2020 18:24:56'!
ERROR!

!testRun: #TerniLapilliGameTest #test10XWinsWithTheThirdColumn stamp: 'IO 11/1/2020 18:24:56'!
ERROR!

!testRun: #TerniLapilliGameTest #test11XWinsWithTheFirstRow stamp: 'IO 11/1/2020 18:24:56'!
ERROR!

!testRun: #TerniLapilliGameTest #test12XWinsWithTheSecondRow stamp: 'IO 11/1/2020 18:24:56'!
ERROR!

!testRun: #TerniLapilliGameTest #test13XWinsWithTheThirdRow stamp: 'IO 11/1/2020 18:24:56'!
ERROR!

!testRun: #TerniLapilliGameTest #test14XWinsWithTheCrescentDiagonal stamp: 'IO 11/1/2020 18:24:56'!
ERROR!

!testRun: #TerniLapilliGameTest #test15XWinsWithTheDescendantDiagonal stamp: 'IO 11/1/2020 18:24:56'!
ERROR!

!testRun: #TerniLapilliGameTest #test16OWnis stamp: 'IO 11/1/2020 18:24:56'!
ERROR!

!testRun: #TerniLapilliGameTest #test17OCantStartPutting stamp: 'IO 11/1/2020 18:24:56'!
PASSED!

!testRun: #TerniLapilliGameTest #test18XCantPutTwiceInARow stamp: 'IO 11/1/2020 18:24:56'!
ERROR!

!testRun: #TerniLapilliGameTest #test19XCantMoveTwiceInARow stamp: 'IO 11/1/2020 18:24:56'!
ERROR!

!testRun: #TerniLapilliGameTest #test20OCantPutTwiceInARow stamp: 'IO 11/1/2020 18:24:56'!
ERROR!

!testRun: #TerniLapilliGameTest #test21OCantMoveTwiceInARow stamp: 'IO 11/1/2020 18:24:56'!
ERROR!

!testRun: #TerniLapilliGameTest #test22XCantMoveOnTheirFirstTurn stamp: 'IO 11/1/2020 18:24:56'!
PASSED!

!testRun: #TerniLapilliGameTest #test23XCantMoveOnTheirSecondTurn stamp: 'IO 11/1/2020 18:24:56'!
ERROR!

!testRun: #TerniLapilliGameTest #test24XCantMoveOnTheirThirdTurn stamp: 'IO 11/1/2020 18:24:56'!
ERROR!

!testRun: #TerniLapilliGameTest #test25OCantMoveOnTheirFirstTurn stamp: 'IO 11/1/2020 18:24:56'!
ERROR!

!testRun: #TerniLapilliGameTest #test26OCantMoveOnTheirSecondTurn stamp: 'IO 11/1/2020 18:24:56'!
ERROR!

!testRun: #TerniLapilliGameTest #test27OCantMoveOnTheirThirdTurn stamp: 'IO 11/1/2020 18:24:56'!
ERROR!

!testRun: #TerniLapilliGameTest #test28XCantPutAfterTheirThirdTurn stamp: 'IO 11/1/2020 18:24:56'!
ERROR!

!testRun: #TerniLapilliGameTest #test29OCantPutAfterTheirThirdTurn stamp: 'IO 11/1/2020 18:24:56'!
ERROR!

!testRun: #TerniLapilliGameTest #test30OCantPutAfterXWon stamp: 'IO 11/1/2020 18:24:56'!
ERROR!

!testRun: #TerniLapilliGameTest #test31OCantMoveAfterXWon stamp: 'IO 11/1/2020 18:24:56'!
ERROR!

!testRun: #TerniLapilliGameTest #test32XCantMoveAfterOWon stamp: 'IO 11/1/2020 18:24:56'!
ERROR!

!testRun: #TerniLapilliGameTest #test33XCantPutAfterOWon stamp: 'IO 11/1/2020 18:24:56'!
ERROR!

!testRun: #TerniLapilliGameTest #test34XCantPutInAnOccupiedSpace stamp: 'IO 11/1/2020 18:24:56'!
ERROR!

!testRun: #TerniLapilliGameTest #test35OCantPutInAnOccupiedSpace stamp: 'IO 11/1/2020 18:24:56'!
ERROR!

!testRun: #TerniLapilliGameTest #test36XCantMoveToAnOccupiedSpace stamp: 'IO 11/1/2020 18:24:56'!
ERROR!

!testRun: #TerniLapilliGameTest #test37OCantMoveToAnOccupiedSpace stamp: 'IO 11/1/2020 18:24:56'!
ERROR!

!testRun: #TerniLapilliGameTest #test38XCantPutOutsideTheBoardUnderXAxis stamp: 'IO 11/1/2020 18:24:56'!
PASSED!

!testRun: #TerniLapilliGameTest #test39XCantPutOutsideTheBoardAboveXAxis stamp: 'IO 11/1/2020 18:24:56'!
PASSED!

!testRun: #TerniLapilliGameTest #test40XCantPutOutsideTheBoardUnderNorAboveTheYAxis stamp: 'IO 11/1/2020 18:24:56'!
PASSED!

!testRun: #TerniLapilliGameTest #test41OCantPutOutsideTheBoard stamp: 'IO 11/1/2020 18:24:56'!
ERROR!

!testRun: #TerniLapilliGameTest #test42XCantMoveToOutsideTheBoard stamp: 'IO 11/1/2020 18:24:56'!
ERROR!

!testRun: #TerniLapilliGameTest #test43OCantMoveToOutsideTheBoard stamp: 'IO 11/1/2020 18:24:56'!
ERROR!

!testRun: #TerniLapilliGameTest #test44XCantMoveTokensThatDontBelongToThem stamp: 'IO 11/1/2020 18:24:56'!
ERROR!

!testRun: #TerniLapilliGameTest #test45OCantMoveTokensThatDontBelongToThem stamp: 'IO 11/1/2020 18:24:56'!
ERROR!

!testRun: #TerniLapilliGameTest #test46XCantMoveaTokenOutsideItsNeighbors stamp: 'IO 11/1/2020 18:24:56'!
ERROR!

!testRun: #TerniLapilliGameTest #test47OCantMoveATokenOutsideItsNeighbors stamp: 'IO 11/1/2020 18:24:56'!
ERROR!

!testRun: #TerniLapilliGameTest #test01XCanPutAToken stamp: 'IO 11/1/2020 18:25:20'!
ERROR!

!testRun: #TerniLapilliGameTest #test02puttingDoesNotAffectOtherPositions stamp: 'IO 11/1/2020 18:25:20'!
ERROR!

!testRun: #TerniLapilliGameTest #test03XCanPutInOtherPositions stamp: 'IO 11/1/2020 18:25:20'!
ERROR!

!testRun: #TerniLapilliGameTest #test04OCanPut stamp: 'IO 11/1/2020 18:25:20'!
ERROR!

!testRun: #TerniLapilliGameTest #test05XCanMove stamp: 'IO 11/1/2020 18:25:20'!
ERROR!

!testRun: #TerniLapilliGameTest #test06OCanMove stamp: 'IO 11/1/2020 18:25:20'!
ERROR!

!testRun: #TerniLapilliGameTest #test07XWinsWithTheFirstColumn stamp: 'IO 11/1/2020 18:25:20'!
ERROR!

!testRun: #TerniLapilliGameTest #test08XHasntWonYet stamp: 'IO 11/1/2020 18:25:20'!
ERROR!

!testRun: #TerniLapilliGameTest #test09XWinsWithTheSecondColumn stamp: 'IO 11/1/2020 18:25:20'!
ERROR!

!testRun: #TerniLapilliGameTest #test10XWinsWithTheThirdColumn stamp: 'IO 11/1/2020 18:25:20'!
ERROR!

!testRun: #TerniLapilliGameTest #test11XWinsWithTheFirstRow stamp: 'IO 11/1/2020 18:25:20'!
ERROR!

!testRun: #TerniLapilliGameTest #test12XWinsWithTheSecondRow stamp: 'IO 11/1/2020 18:25:20'!
ERROR!

!testRun: #TerniLapilliGameTest #test13XWinsWithTheThirdRow stamp: 'IO 11/1/2020 18:25:20'!
ERROR!

!testRun: #TerniLapilliGameTest #test14XWinsWithTheCrescentDiagonal stamp: 'IO 11/1/2020 18:25:20'!
ERROR!

!testRun: #TerniLapilliGameTest #test15XWinsWithTheDescendantDiagonal stamp: 'IO 11/1/2020 18:25:20'!
ERROR!

!testRun: #TerniLapilliGameTest #test16OWnis stamp: 'IO 11/1/2020 18:25:20'!
ERROR!

!testRun: #TerniLapilliGameTest #test17OCantStartPutting stamp: 'IO 11/1/2020 18:25:20'!
PASSED!

!testRun: #TerniLapilliGameTest #test18XCantPutTwiceInARow stamp: 'IO 11/1/2020 18:25:20'!
ERROR!

!testRun: #TerniLapilliGameTest #test19XCantMoveTwiceInARow stamp: 'IO 11/1/2020 18:25:20'!
ERROR!

!testRun: #TerniLapilliGameTest #test20OCantPutTwiceInARow stamp: 'IO 11/1/2020 18:25:20'!
ERROR!

!testRun: #TerniLapilliGameTest #test21OCantMoveTwiceInARow stamp: 'IO 11/1/2020 18:25:20'!
ERROR!

!testRun: #TerniLapilliGameTest #test22XCantMoveOnTheirFirstTurn stamp: 'IO 11/1/2020 18:25:20'!
PASSED!

!testRun: #TerniLapilliGameTest #test23XCantMoveOnTheirSecondTurn stamp: 'IO 11/1/2020 18:25:20'!
ERROR!

!testRun: #TerniLapilliGameTest #test24XCantMoveOnTheirThirdTurn stamp: 'IO 11/1/2020 18:25:20'!
ERROR!

!testRun: #TerniLapilliGameTest #test25OCantMoveOnTheirFirstTurn stamp: 'IO 11/1/2020 18:25:20'!
ERROR!

!testRun: #TerniLapilliGameTest #test26OCantMoveOnTheirSecondTurn stamp: 'IO 11/1/2020 18:25:20'!
ERROR!

!testRun: #TerniLapilliGameTest #test27OCantMoveOnTheirThirdTurn stamp: 'IO 11/1/2020 18:25:20'!
ERROR!

!testRun: #TerniLapilliGameTest #test28XCantPutAfterTheirThirdTurn stamp: 'IO 11/1/2020 18:25:20'!
ERROR!

!testRun: #TerniLapilliGameTest #test29OCantPutAfterTheirThirdTurn stamp: 'IO 11/1/2020 18:25:20'!
ERROR!

!testRun: #TerniLapilliGameTest #test30OCantPutAfterXWon stamp: 'IO 11/1/2020 18:25:20'!
ERROR!

!testRun: #TerniLapilliGameTest #test31OCantMoveAfterXWon stamp: 'IO 11/1/2020 18:25:20'!
ERROR!

!testRun: #TerniLapilliGameTest #test32XCantMoveAfterOWon stamp: 'IO 11/1/2020 18:25:20'!
ERROR!

!testRun: #TerniLapilliGameTest #test33XCantPutAfterOWon stamp: 'IO 11/1/2020 18:25:20'!
ERROR!

!testRun: #TerniLapilliGameTest #test34XCantPutInAnOccupiedSpace stamp: 'IO 11/1/2020 18:25:20'!
ERROR!

!testRun: #TerniLapilliGameTest #test35OCantPutInAnOccupiedSpace stamp: 'IO 11/1/2020 18:25:20'!
ERROR!

!testRun: #TerniLapilliGameTest #test36XCantMoveToAnOccupiedSpace stamp: 'IO 11/1/2020 18:25:20'!
ERROR!

!testRun: #TerniLapilliGameTest #test37OCantMoveToAnOccupiedSpace stamp: 'IO 11/1/2020 18:25:20'!
ERROR!

!testRun: #TerniLapilliGameTest #test38XCantPutOutsideTheBoardUnderXAxis stamp: 'IO 11/1/2020 18:25:20'!
PASSED!

!testRun: #TerniLapilliGameTest #test39XCantPutOutsideTheBoardAboveXAxis stamp: 'IO 11/1/2020 18:25:20'!
PASSED!

!testRun: #TerniLapilliGameTest #test40XCantPutOutsideTheBoardUnderNorAboveTheYAxis stamp: 'IO 11/1/2020 18:25:20'!
PASSED!

!testRun: #TerniLapilliGameTest #test41OCantPutOutsideTheBoard stamp: 'IO 11/1/2020 18:25:20'!
ERROR!

!testRun: #TerniLapilliGameTest #test42XCantMoveToOutsideTheBoard stamp: 'IO 11/1/2020 18:25:20'!
ERROR!

!testRun: #TerniLapilliGameTest #test43OCantMoveToOutsideTheBoard stamp: 'IO 11/1/2020 18:25:20'!
ERROR!

!testRun: #TerniLapilliGameTest #test44XCantMoveTokensThatDontBelongToThem stamp: 'IO 11/1/2020 18:25:20'!
ERROR!

!testRun: #TerniLapilliGameTest #test45OCantMoveTokensThatDontBelongToThem stamp: 'IO 11/1/2020 18:25:20'!
ERROR!

!testRun: #TerniLapilliGameTest #test46XCantMoveaTokenOutsideItsNeighbors stamp: 'IO 11/1/2020 18:25:20'!
ERROR!

!testRun: #TerniLapilliGameTest #test47OCantMoveATokenOutsideItsNeighbors stamp: 'IO 11/1/2020 18:25:20'!
ERROR!

!testRun: #TerniLapilliGameTest #test01XCanPutAToken stamp: 'IO 11/1/2020 18:25:29'!
ERROR!

state!

state!

!testRun: #TerniLapilliGameTest #test01XCanPutAToken stamp: 'IO 11/1/2020 18:29:04'!
ERROR!

!testRun: #TerniLapilliGameTest #test01XCanPutAToken stamp: 'IO 11/1/2020 18:29:12'!
ERROR!

!testRun: #TerniLapilliGameTest #test01XCanPutAToken stamp: 'IO 11/1/2020 18:29:18'!
ERROR!

!testRun: #TerniLapilliGameTest #test01XCanPutAToken stamp: 'IO 11/1/2020 18:29:18'!
ERROR!

xTokens!

!testRun: #TerniLapilliGameTest #test01XCanPutAToken stamp: 'IO 11/1/2020 18:30:02'!
ERROR!

!testRun: #TerniLapilliGameTest #test02puttingDoesNotAffectOtherPositions stamp: 'IO 11/1/2020 18:30:02'!
ERROR!

!testRun: #TerniLapilliGameTest #test03XCanPutInOtherPositions stamp: 'IO 11/1/2020 18:30:02'!
ERROR!

!testRun: #TerniLapilliGameTest #test04OCanPut stamp: 'IO 11/1/2020 18:30:02'!
ERROR!

!testRun: #TerniLapilliGameTest #test05XCanMove stamp: 'IO 11/1/2020 18:30:02'!
ERROR!

!testRun: #TerniLapilliGameTest #test06OCanMove stamp: 'IO 11/1/2020 18:30:02'!
ERROR!

!testRun: #TerniLapilliGameTest #test07XWinsWithTheFirstColumn stamp: 'IO 11/1/2020 18:30:02'!
ERROR!

!testRun: #TerniLapilliGameTest #test08XHasntWonYet stamp: 'IO 11/1/2020 18:30:02'!
ERROR!

!testRun: #TerniLapilliGameTest #test09XWinsWithTheSecondColumn stamp: 'IO 11/1/2020 18:30:02'!
ERROR!

!testRun: #TerniLapilliGameTest #test10XWinsWithTheThirdColumn stamp: 'IO 11/1/2020 18:30:02'!
ERROR!

!testRun: #TerniLapilliGameTest #test11XWinsWithTheFirstRow stamp: 'IO 11/1/2020 18:30:02'!
ERROR!

!testRun: #TerniLapilliGameTest #test12XWinsWithTheSecondRow stamp: 'IO 11/1/2020 18:30:02'!
ERROR!

!testRun: #TerniLapilliGameTest #test13XWinsWithTheThirdRow stamp: 'IO 11/1/2020 18:30:02'!
ERROR!

!testRun: #TerniLapilliGameTest #test14XWinsWithTheCrescentDiagonal stamp: 'IO 11/1/2020 18:30:02'!
ERROR!

!testRun: #TerniLapilliGameTest #test15XWinsWithTheDescendantDiagonal stamp: 'IO 11/1/2020 18:30:02'!
ERROR!

!testRun: #TerniLapilliGameTest #test16OWnis stamp: 'IO 11/1/2020 18:30:02'!
ERROR!

!testRun: #TerniLapilliGameTest #test17OCantStartPutting stamp: 'IO 11/1/2020 18:30:02'!
PASSED!

!testRun: #TerniLapilliGameTest #test18XCantPutTwiceInARow stamp: 'IO 11/1/2020 18:30:02'!
ERROR!

!testRun: #TerniLapilliGameTest #test19XCantMoveTwiceInARow stamp: 'IO 11/1/2020 18:30:02'!
ERROR!

!testRun: #TerniLapilliGameTest #test20OCantPutTwiceInARow stamp: 'IO 11/1/2020 18:30:02'!
ERROR!

!testRun: #TerniLapilliGameTest #test21OCantMoveTwiceInARow stamp: 'IO 11/1/2020 18:30:02'!
ERROR!

!testRun: #TerniLapilliGameTest #test22XCantMoveOnTheirFirstTurn stamp: 'IO 11/1/2020 18:30:02'!
PASSED!

!testRun: #TerniLapilliGameTest #test23XCantMoveOnTheirSecondTurn stamp: 'IO 11/1/2020 18:30:02'!
ERROR!

!testRun: #TerniLapilliGameTest #test24XCantMoveOnTheirThirdTurn stamp: 'IO 11/1/2020 18:30:02'!
ERROR!

!testRun: #TerniLapilliGameTest #test25OCantMoveOnTheirFirstTurn stamp: 'IO 11/1/2020 18:30:02'!
ERROR!

!testRun: #TerniLapilliGameTest #test26OCantMoveOnTheirSecondTurn stamp: 'IO 11/1/2020 18:30:02'!
ERROR!

!testRun: #TerniLapilliGameTest #test27OCantMoveOnTheirThirdTurn stamp: 'IO 11/1/2020 18:30:02'!
ERROR!

!testRun: #TerniLapilliGameTest #test28XCantPutAfterTheirThirdTurn stamp: 'IO 11/1/2020 18:30:02'!
ERROR!

!testRun: #TerniLapilliGameTest #test29OCantPutAfterTheirThirdTurn stamp: 'IO 11/1/2020 18:30:02'!
ERROR!

!testRun: #TerniLapilliGameTest #test30OCantPutAfterXWon stamp: 'IO 11/1/2020 18:30:02'!
ERROR!

!testRun: #TerniLapilliGameTest #test31OCantMoveAfterXWon stamp: 'IO 11/1/2020 18:30:02'!
ERROR!

!testRun: #TerniLapilliGameTest #test32XCantMoveAfterOWon stamp: 'IO 11/1/2020 18:30:02'!
ERROR!

!testRun: #TerniLapilliGameTest #test33XCantPutAfterOWon stamp: 'IO 11/1/2020 18:30:02'!
ERROR!

!testRun: #TerniLapilliGameTest #test34XCantPutInAnOccupiedSpace stamp: 'IO 11/1/2020 18:30:02'!
ERROR!

!testRun: #TerniLapilliGameTest #test35OCantPutInAnOccupiedSpace stamp: 'IO 11/1/2020 18:30:02'!
ERROR!

!testRun: #TerniLapilliGameTest #test36XCantMoveToAnOccupiedSpace stamp: 'IO 11/1/2020 18:30:02'!
ERROR!

!testRun: #TerniLapilliGameTest #test37OCantMoveToAnOccupiedSpace stamp: 'IO 11/1/2020 18:30:02'!
ERROR!

!testRun: #TerniLapilliGameTest #test38XCantPutOutsideTheBoardUnderXAxis stamp: 'IO 11/1/2020 18:30:02'!
PASSED!

!testRun: #TerniLapilliGameTest #test39XCantPutOutsideTheBoardAboveXAxis stamp: 'IO 11/1/2020 18:30:02'!
PASSED!

!testRun: #TerniLapilliGameTest #test40XCantPutOutsideTheBoardUnderNorAboveTheYAxis stamp: 'IO 11/1/2020 18:30:02'!
PASSED!

!testRun: #TerniLapilliGameTest #test41OCantPutOutsideTheBoard stamp: 'IO 11/1/2020 18:30:02'!
ERROR!

!testRun: #TerniLapilliGameTest #test42XCantMoveToOutsideTheBoard stamp: 'IO 11/1/2020 18:30:02'!
ERROR!

!testRun: #TerniLapilliGameTest #test43OCantMoveToOutsideTheBoard stamp: 'IO 11/1/2020 18:30:02'!
ERROR!

!testRun: #TerniLapilliGameTest #test44XCantMoveTokensThatDontBelongToThem stamp: 'IO 11/1/2020 18:30:02'!
ERROR!

!testRun: #TerniLapilliGameTest #test45OCantMoveTokensThatDontBelongToThem stamp: 'IO 11/1/2020 18:30:02'!
ERROR!

!testRun: #TerniLapilliGameTest #test46XCantMoveaTokenOutsideItsNeighbors stamp: 'IO 11/1/2020 18:30:02'!
ERROR!

!testRun: #TerniLapilliGameTest #test47OCantMoveATokenOutsideItsNeighbors stamp: 'IO 11/1/2020 18:30:02'!
ERROR!
!TerniLapilliPlayerTokens methodsFor: 'moves' stamp: 'IO 11/1/2020 18:30:46' prior: 50891584!
put: aPosition

	"add a token in a given position of the board"

	self validateIsInBoard: aPosition withErrorMessage: TerniLapilliGame cannotPutErrorMessage.
	tokens add: aPosition.
! !

!testRun: #TerniLapilliGameTest #test01XCanPutAToken stamp: 'IO 11/1/2020 18:30:50'!
PASSED!

!testRun: #TerniLapilliGameTest #test02puttingDoesNotAffectOtherPositions stamp: 'IO 11/1/2020 18:30:50'!
PASSED!

!testRun: #TerniLapilliGameTest #test03XCanPutInOtherPositions stamp: 'IO 11/1/2020 18:30:50'!
PASSED!

!testRun: #TerniLapilliGameTest #test04OCanPut stamp: 'IO 11/1/2020 18:30:50'!
PASSED!

!testRun: #TerniLapilliGameTest #test05XCanMove stamp: 'IO 11/1/2020 18:30:50'!
ERROR!

!testRun: #TerniLapilliGameTest #test06OCanMove stamp: 'IO 11/1/2020 18:30:50'!
ERROR!

!testRun: #TerniLapilliGameTest #test07XWinsWithTheFirstColumn stamp: 'IO 11/1/2020 18:30:50'!
PASSED!

!testRun: #TerniLapilliGameTest #test08XHasntWonYet stamp: 'IO 11/1/2020 18:30:50'!
PASSED!

!testRun: #TerniLapilliGameTest #test09XWinsWithTheSecondColumn stamp: 'IO 11/1/2020 18:30:50'!
PASSED!

!testRun: #TerniLapilliGameTest #test10XWinsWithTheThirdColumn stamp: 'IO 11/1/2020 18:30:50'!
PASSED!

!testRun: #TerniLapilliGameTest #test11XWinsWithTheFirstRow stamp: 'IO 11/1/2020 18:30:50'!
PASSED!

!testRun: #TerniLapilliGameTest #test12XWinsWithTheSecondRow stamp: 'IO 11/1/2020 18:30:50'!
PASSED!

!testRun: #TerniLapilliGameTest #test13XWinsWithTheThirdRow stamp: 'IO 11/1/2020 18:30:50'!
PASSED!

!testRun: #TerniLapilliGameTest #test14XWinsWithTheCrescentDiagonal stamp: 'IO 11/1/2020 18:30:50'!
PASSED!

!testRun: #TerniLapilliGameTest #test15XWinsWithTheDescendantDiagonal stamp: 'IO 11/1/2020 18:30:50'!
PASSED!

!testRun: #TerniLapilliGameTest #test16OWnis stamp: 'IO 11/1/2020 18:30:50'!
PASSED!

!testRun: #TerniLapilliGameTest #test17OCantStartPutting stamp: 'IO 11/1/2020 18:30:50'!
PASSED!

!testRun: #TerniLapilliGameTest #test18XCantPutTwiceInARow stamp: 'IO 11/1/2020 18:30:50'!
PASSED!

!testRun: #TerniLapilliGameTest #test19XCantMoveTwiceInARow stamp: 'IO 11/1/2020 18:30:50'!
ERROR!

!testRun: #TerniLapilliGameTest #test20OCantPutTwiceInARow stamp: 'IO 11/1/2020 18:30:50'!
PASSED!

!testRun: #TerniLapilliGameTest #test21OCantMoveTwiceInARow stamp: 'IO 11/1/2020 18:30:50'!
ERROR!

!testRun: #TerniLapilliGameTest #test22XCantMoveOnTheirFirstTurn stamp: 'IO 11/1/2020 18:30:50'!
PASSED!

!testRun: #TerniLapilliGameTest #test23XCantMoveOnTheirSecondTurn stamp: 'IO 11/1/2020 18:30:50'!
PASSED!

!testRun: #TerniLapilliGameTest #test24XCantMoveOnTheirThirdTurn stamp: 'IO 11/1/2020 18:30:50'!
PASSED!

!testRun: #TerniLapilliGameTest #test25OCantMoveOnTheirFirstTurn stamp: 'IO 11/1/2020 18:30:50'!
PASSED!

!testRun: #TerniLapilliGameTest #test26OCantMoveOnTheirSecondTurn stamp: 'IO 11/1/2020 18:30:50'!
PASSED!

!testRun: #TerniLapilliGameTest #test27OCantMoveOnTheirThirdTurn stamp: 'IO 11/1/2020 18:30:50'!
PASSED!

!testRun: #TerniLapilliGameTest #test28XCantPutAfterTheirThirdTurn stamp: 'IO 11/1/2020 18:30:50'!
PASSED!

!testRun: #TerniLapilliGameTest #test29OCantPutAfterTheirThirdTurn stamp: 'IO 11/1/2020 18:30:50'!
ERROR!

!testRun: #TerniLapilliGameTest #test30OCantPutAfterXWon stamp: 'IO 11/1/2020 18:30:50'!
PASSED!

!testRun: #TerniLapilliGameTest #test31OCantMoveAfterXWon stamp: 'IO 11/1/2020 18:30:50'!
ERROR!

!testRun: #TerniLapilliGameTest #test32XCantMoveAfterOWon stamp: 'IO 11/1/2020 18:30:50'!
PASSED!

!testRun: #TerniLapilliGameTest #test33XCantPutAfterOWon stamp: 'IO 11/1/2020 18:30:50'!
PASSED!

!testRun: #TerniLapilliGameTest #test34XCantPutInAnOccupiedSpace stamp: 'IO 11/1/2020 18:30:50'!
PASSED!

!testRun: #TerniLapilliGameTest #test35OCantPutInAnOccupiedSpace stamp: 'IO 11/1/2020 18:30:50'!
PASSED!

!testRun: #TerniLapilliGameTest #test36XCantMoveToAnOccupiedSpace stamp: 'IO 11/1/2020 18:30:51'!
PASSED!

!testRun: #TerniLapilliGameTest #test37OCantMoveToAnOccupiedSpace stamp: 'IO 11/1/2020 18:30:51'!
ERROR!

!testRun: #TerniLapilliGameTest #test38XCantPutOutsideTheBoardUnderXAxis stamp: 'IO 11/1/2020 18:30:51'!
PASSED!

!testRun: #TerniLapilliGameTest #test39XCantPutOutsideTheBoardAboveXAxis stamp: 'IO 11/1/2020 18:30:51'!
PASSED!

!testRun: #TerniLapilliGameTest #test40XCantPutOutsideTheBoardUnderNorAboveTheYAxis stamp: 'IO 11/1/2020 18:30:51'!
PASSED!

!testRun: #TerniLapilliGameTest #test41OCantPutOutsideTheBoard stamp: 'IO 11/1/2020 18:30:51'!
PASSED!

!testRun: #TerniLapilliGameTest #test42XCantMoveToOutsideTheBoard stamp: 'IO 11/1/2020 18:30:51'!
PASSED!

!testRun: #TerniLapilliGameTest #test43OCantMoveToOutsideTheBoard stamp: 'IO 11/1/2020 18:30:51'!
ERROR!

!testRun: #TerniLapilliGameTest #test44XCantMoveTokensThatDontBelongToThem stamp: 'IO 11/1/2020 18:30:51'!
PASSED!

!testRun: #TerniLapilliGameTest #test45OCantMoveTokensThatDontBelongToThem stamp: 'IO 11/1/2020 18:30:51'!
ERROR!

!testRun: #TerniLapilliGameTest #test46XCantMoveaTokenOutsideItsNeighbors stamp: 'IO 11/1/2020 18:30:51'!
PASSED!

!testRun: #TerniLapilliGameTest #test47OCantMoveATokenOutsideItsNeighbors stamp: 'IO 11/1/2020 18:30:51'!
ERROR!
!TerniLapilliPlayerTokens methodsFor: 'moves' stamp: 'IO 11/1/2020 18:31:03' prior: 50891601!
moveFrom: sourcePosition to: destinationPosition

	"move a token form a given position of the board to another position"

	self validateIsLegalMoveFrom: sourcePosition to: destinationPosition.

	tokens remove: sourcePosition.
	tokens add: destinationPosition.
! !

!testRun: #TerniLapilliGameTest #test01XCanPutAToken stamp: 'IO 11/1/2020 18:31:04'!
PASSED!

!testRun: #TerniLapilliGameTest #test02puttingDoesNotAffectOtherPositions stamp: 'IO 11/1/2020 18:31:04'!
PASSED!

!testRun: #TerniLapilliGameTest #test03XCanPutInOtherPositions stamp: 'IO 11/1/2020 18:31:04'!
PASSED!

!testRun: #TerniLapilliGameTest #test04OCanPut stamp: 'IO 11/1/2020 18:31:04'!
PASSED!

!testRun: #TerniLapilliGameTest #test05XCanMove stamp: 'IO 11/1/2020 18:31:04'!
PASSED!

!testRun: #TerniLapilliGameTest #test06OCanMove stamp: 'IO 11/1/2020 18:31:04'!
PASSED!

!testRun: #TerniLapilliGameTest #test07XWinsWithTheFirstColumn stamp: 'IO 11/1/2020 18:31:04'!
PASSED!

!testRun: #TerniLapilliGameTest #test08XHasntWonYet stamp: 'IO 11/1/2020 18:31:04'!
PASSED!

!testRun: #TerniLapilliGameTest #test09XWinsWithTheSecondColumn stamp: 'IO 11/1/2020 18:31:04'!
PASSED!

!testRun: #TerniLapilliGameTest #test10XWinsWithTheThirdColumn stamp: 'IO 11/1/2020 18:31:04'!
PASSED!

!testRun: #TerniLapilliGameTest #test11XWinsWithTheFirstRow stamp: 'IO 11/1/2020 18:31:04'!
PASSED!

!testRun: #TerniLapilliGameTest #test12XWinsWithTheSecondRow stamp: 'IO 11/1/2020 18:31:04'!
PASSED!

!testRun: #TerniLapilliGameTest #test13XWinsWithTheThirdRow stamp: 'IO 11/1/2020 18:31:04'!
PASSED!

!testRun: #TerniLapilliGameTest #test14XWinsWithTheCrescentDiagonal stamp: 'IO 11/1/2020 18:31:04'!
PASSED!

!testRun: #TerniLapilliGameTest #test15XWinsWithTheDescendantDiagonal stamp: 'IO 11/1/2020 18:31:04'!
PASSED!

!testRun: #TerniLapilliGameTest #test16OWnis stamp: 'IO 11/1/2020 18:31:04'!
PASSED!

!testRun: #TerniLapilliGameTest #test17OCantStartPutting stamp: 'IO 11/1/2020 18:31:04'!
PASSED!

!testRun: #TerniLapilliGameTest #test18XCantPutTwiceInARow stamp: 'IO 11/1/2020 18:31:04'!
PASSED!

!testRun: #TerniLapilliGameTest #test19XCantMoveTwiceInARow stamp: 'IO 11/1/2020 18:31:04'!
PASSED!

!testRun: #TerniLapilliGameTest #test20OCantPutTwiceInARow stamp: 'IO 11/1/2020 18:31:04'!
PASSED!

!testRun: #TerniLapilliGameTest #test21OCantMoveTwiceInARow stamp: 'IO 11/1/2020 18:31:04'!
PASSED!

!testRun: #TerniLapilliGameTest #test22XCantMoveOnTheirFirstTurn stamp: 'IO 11/1/2020 18:31:04'!
PASSED!

!testRun: #TerniLapilliGameTest #test23XCantMoveOnTheirSecondTurn stamp: 'IO 11/1/2020 18:31:04'!
PASSED!

!testRun: #TerniLapilliGameTest #test24XCantMoveOnTheirThirdTurn stamp: 'IO 11/1/2020 18:31:04'!
PASSED!

!testRun: #TerniLapilliGameTest #test25OCantMoveOnTheirFirstTurn stamp: 'IO 11/1/2020 18:31:04'!
PASSED!

!testRun: #TerniLapilliGameTest #test26OCantMoveOnTheirSecondTurn stamp: 'IO 11/1/2020 18:31:04'!
PASSED!

!testRun: #TerniLapilliGameTest #test27OCantMoveOnTheirThirdTurn stamp: 'IO 11/1/2020 18:31:04'!
PASSED!

!testRun: #TerniLapilliGameTest #test28XCantPutAfterTheirThirdTurn stamp: 'IO 11/1/2020 18:31:04'!
PASSED!

!testRun: #TerniLapilliGameTest #test29OCantPutAfterTheirThirdTurn stamp: 'IO 11/1/2020 18:31:04'!
PASSED!

!testRun: #TerniLapilliGameTest #test30OCantPutAfterXWon stamp: 'IO 11/1/2020 18:31:04'!
PASSED!

!testRun: #TerniLapilliGameTest #test31OCantMoveAfterXWon stamp: 'IO 11/1/2020 18:31:04'!
PASSED!

!testRun: #TerniLapilliGameTest #test32XCantMoveAfterOWon stamp: 'IO 11/1/2020 18:31:04'!
PASSED!

!testRun: #TerniLapilliGameTest #test33XCantPutAfterOWon stamp: 'IO 11/1/2020 18:31:04'!
PASSED!

!testRun: #TerniLapilliGameTest #test34XCantPutInAnOccupiedSpace stamp: 'IO 11/1/2020 18:31:04'!
PASSED!

!testRun: #TerniLapilliGameTest #test35OCantPutInAnOccupiedSpace stamp: 'IO 11/1/2020 18:31:04'!
PASSED!

!testRun: #TerniLapilliGameTest #test36XCantMoveToAnOccupiedSpace stamp: 'IO 11/1/2020 18:31:04'!
PASSED!

!testRun: #TerniLapilliGameTest #test37OCantMoveToAnOccupiedSpace stamp: 'IO 11/1/2020 18:31:04'!
PASSED!

!testRun: #TerniLapilliGameTest #test38XCantPutOutsideTheBoardUnderXAxis stamp: 'IO 11/1/2020 18:31:04'!
PASSED!

!testRun: #TerniLapilliGameTest #test39XCantPutOutsideTheBoardAboveXAxis stamp: 'IO 11/1/2020 18:31:04'!
PASSED!

!testRun: #TerniLapilliGameTest #test40XCantPutOutsideTheBoardUnderNorAboveTheYAxis stamp: 'IO 11/1/2020 18:31:04'!
PASSED!

!testRun: #TerniLapilliGameTest #test41OCantPutOutsideTheBoard stamp: 'IO 11/1/2020 18:31:04'!
PASSED!

!testRun: #TerniLapilliGameTest #test42XCantMoveToOutsideTheBoard stamp: 'IO 11/1/2020 18:31:04'!
PASSED!

!testRun: #TerniLapilliGameTest #test43OCantMoveToOutsideTheBoard stamp: 'IO 11/1/2020 18:31:04'!
PASSED!

!testRun: #TerniLapilliGameTest #test44XCantMoveTokensThatDontBelongToThem stamp: 'IO 11/1/2020 18:31:04'!
PASSED!

!testRun: #TerniLapilliGameTest #test45OCantMoveTokensThatDontBelongToThem stamp: 'IO 11/1/2020 18:31:04'!
PASSED!

!testRun: #TerniLapilliGameTest #test46XCantMoveaTokenOutsideItsNeighbors stamp: 'IO 11/1/2020 18:31:04'!
PASSED!

!testRun: #TerniLapilliGameTest #test47OCantMoveATokenOutsideItsNeighbors stamp: 'IO 11/1/2020 18:31:04'!
PASSED!

!classRenamed: #GameIsOver as: #GameOver stamp: 'IO 11/1/2020 18:32:35'!
Smalltalk renameClassNamed: #GameIsOver as: #GameOver!
!XIsPlaying class methodsFor: 'as yet unclassified' stamp: 'IO 11/1/2020 18:32:35' prior: 50885406 overrides: 50887156!
withXTokens: nextXTokens oTokens: nextOTokens

	"create the next state of X's turn"

	(nextOTokens areInWinningPosition) ifTrue: [^GameOver withXTokens: nextXTokens oTokens: nextOTokens].
	(nextXTokens size < 3) ifTrue: [^XIsPlacing withXTokens: nextXTokens oTokens: nextOTokens].
	^XIsMoving withXTokens: nextXTokens oTokens: nextOTokens.

	
! !
!OIsPlaying class methodsFor: 'as yet unclassified' stamp: 'IO 11/1/2020 18:32:35' prior: 50885341 overrides: 50887156!
withXTokens: nextXTokens oTokens: nextOTokens

	"create the next state of O's turn"

	(nextXTokens areInWinningPosition) ifTrue: [^GameOver withXTokens: nextXTokens oTokens: nextOTokens].
	(nextOTokens size < 3) ifTrue: [^OIsPlacing withXTokens: nextXTokens oTokens: nextOTokens].
	^OIsMoving withXTokens: nextXTokens oTokens: nextOTokens
! !

!testRun: #TerniLapilliGameTest #test01XCanPutAToken stamp: 'IO 11/1/2020 18:32:50'!
PASSED!

!testRun: #TerniLapilliGameTest #test02puttingDoesNotAffectOtherPositions stamp: 'IO 11/1/2020 18:32:50'!
PASSED!

!testRun: #TerniLapilliGameTest #test03XCanPutInOtherPositions stamp: 'IO 11/1/2020 18:32:50'!
PASSED!

!testRun: #TerniLapilliGameTest #test04OCanPut stamp: 'IO 11/1/2020 18:32:50'!
PASSED!

!testRun: #TerniLapilliGameTest #test05XCanMove stamp: 'IO 11/1/2020 18:32:50'!
PASSED!

!testRun: #TerniLapilliGameTest #test06OCanMove stamp: 'IO 11/1/2020 18:32:50'!
PASSED!

!testRun: #TerniLapilliGameTest #test07XWinsWithTheFirstColumn stamp: 'IO 11/1/2020 18:32:50'!
PASSED!

!testRun: #TerniLapilliGameTest #test08XHasntWonYet stamp: 'IO 11/1/2020 18:32:50'!
PASSED!

!testRun: #TerniLapilliGameTest #test09XWinsWithTheSecondColumn stamp: 'IO 11/1/2020 18:32:50'!
PASSED!

!testRun: #TerniLapilliGameTest #test10XWinsWithTheThirdColumn stamp: 'IO 11/1/2020 18:32:50'!
PASSED!

!testRun: #TerniLapilliGameTest #test11XWinsWithTheFirstRow stamp: 'IO 11/1/2020 18:32:50'!
PASSED!

!testRun: #TerniLapilliGameTest #test12XWinsWithTheSecondRow stamp: 'IO 11/1/2020 18:32:50'!
PASSED!

!testRun: #TerniLapilliGameTest #test13XWinsWithTheThirdRow stamp: 'IO 11/1/2020 18:32:50'!
PASSED!

!testRun: #TerniLapilliGameTest #test14XWinsWithTheCrescentDiagonal stamp: 'IO 11/1/2020 18:32:50'!
PASSED!

!testRun: #TerniLapilliGameTest #test15XWinsWithTheDescendantDiagonal stamp: 'IO 11/1/2020 18:32:50'!
PASSED!

!testRun: #TerniLapilliGameTest #test16OWnis stamp: 'IO 11/1/2020 18:32:50'!
PASSED!

!testRun: #TerniLapilliGameTest #test17OCantStartPutting stamp: 'IO 11/1/2020 18:32:50'!
PASSED!

!testRun: #TerniLapilliGameTest #test18XCantPutTwiceInARow stamp: 'IO 11/1/2020 18:32:50'!
PASSED!

!testRun: #TerniLapilliGameTest #test19XCantMoveTwiceInARow stamp: 'IO 11/1/2020 18:32:50'!
PASSED!

!testRun: #TerniLapilliGameTest #test20OCantPutTwiceInARow stamp: 'IO 11/1/2020 18:32:50'!
PASSED!

!testRun: #TerniLapilliGameTest #test21OCantMoveTwiceInARow stamp: 'IO 11/1/2020 18:32:50'!
PASSED!

!testRun: #TerniLapilliGameTest #test22XCantMoveOnTheirFirstTurn stamp: 'IO 11/1/2020 18:32:50'!
PASSED!

!testRun: #TerniLapilliGameTest #test23XCantMoveOnTheirSecondTurn stamp: 'IO 11/1/2020 18:32:50'!
PASSED!

!testRun: #TerniLapilliGameTest #test24XCantMoveOnTheirThirdTurn stamp: 'IO 11/1/2020 18:32:50'!
PASSED!

!testRun: #TerniLapilliGameTest #test25OCantMoveOnTheirFirstTurn stamp: 'IO 11/1/2020 18:32:50'!
PASSED!

!testRun: #TerniLapilliGameTest #test26OCantMoveOnTheirSecondTurn stamp: 'IO 11/1/2020 18:32:50'!
PASSED!

!testRun: #TerniLapilliGameTest #test27OCantMoveOnTheirThirdTurn stamp: 'IO 11/1/2020 18:32:50'!
PASSED!

!testRun: #TerniLapilliGameTest #test28XCantPutAfterTheirThirdTurn stamp: 'IO 11/1/2020 18:32:50'!
PASSED!

!testRun: #TerniLapilliGameTest #test29OCantPutAfterTheirThirdTurn stamp: 'IO 11/1/2020 18:32:50'!
PASSED!

!testRun: #TerniLapilliGameTest #test30OCantPutAfterXWon stamp: 'IO 11/1/2020 18:32:50'!
PASSED!

!testRun: #TerniLapilliGameTest #test31OCantMoveAfterXWon stamp: 'IO 11/1/2020 18:32:50'!
PASSED!

!testRun: #TerniLapilliGameTest #test32XCantMoveAfterOWon stamp: 'IO 11/1/2020 18:32:50'!
PASSED!

!testRun: #TerniLapilliGameTest #test33XCantPutAfterOWon stamp: 'IO 11/1/2020 18:32:50'!
PASSED!

!testRun: #TerniLapilliGameTest #test34XCantPutInAnOccupiedSpace stamp: 'IO 11/1/2020 18:32:50'!
PASSED!

!testRun: #TerniLapilliGameTest #test35OCantPutInAnOccupiedSpace stamp: 'IO 11/1/2020 18:32:50'!
PASSED!

!testRun: #TerniLapilliGameTest #test36XCantMoveToAnOccupiedSpace stamp: 'IO 11/1/2020 18:32:50'!
PASSED!

!testRun: #TerniLapilliGameTest #test37OCantMoveToAnOccupiedSpace stamp: 'IO 11/1/2020 18:32:50'!
PASSED!

!testRun: #TerniLapilliGameTest #test38XCantPutOutsideTheBoardUnderXAxis stamp: 'IO 11/1/2020 18:32:50'!
PASSED!

!testRun: #TerniLapilliGameTest #test39XCantPutOutsideTheBoardAboveXAxis stamp: 'IO 11/1/2020 18:32:50'!
PASSED!

!testRun: #TerniLapilliGameTest #test40XCantPutOutsideTheBoardUnderNorAboveTheYAxis stamp: 'IO 11/1/2020 18:32:50'!
PASSED!

!testRun: #TerniLapilliGameTest #test41OCantPutOutsideTheBoard stamp: 'IO 11/1/2020 18:32:50'!
PASSED!

!testRun: #TerniLapilliGameTest #test42XCantMoveToOutsideTheBoard stamp: 'IO 11/1/2020 18:32:50'!
PASSED!

!testRun: #TerniLapilliGameTest #test43OCantMoveToOutsideTheBoard stamp: 'IO 11/1/2020 18:32:50'!
PASSED!

!testRun: #TerniLapilliGameTest #test44XCantMoveTokensThatDontBelongToThem stamp: 'IO 11/1/2020 18:32:50'!
PASSED!

!testRun: #TerniLapilliGameTest #test45OCantMoveTokensThatDontBelongToThem stamp: 'IO 11/1/2020 18:32:50'!
PASSED!

!testRun: #TerniLapilliGameTest #test46XCantMoveaTokenOutsideItsNeighbors stamp: 'IO 11/1/2020 18:32:50'!
PASSED!

!testRun: #TerniLapilliGameTest #test47OCantMoveATokenOutsideItsNeighbors stamp: 'IO 11/1/2020 18:32:50'!
PASSED!

!classRenamed: #OIsPlaying as: #OTurn stamp: 'IO 11/1/2020 18:33:05'!
Smalltalk renameClassNamed: #OIsPlaying as: #OTurn!
!XIsPlaying methodsFor: 'as yet unclassified' stamp: 'IO 11/1/2020 18:33:05' prior: 50882696 overrides: 50882730!
passTurn

	"see superimplementor"

	^OTurn withXTokens: xTokens oTokens: oTokens.
! !

!classRenamed: #OIsMoving as: #OMoves stamp: 'IO 11/1/2020 18:33:15'!
Smalltalk renameClassNamed: #OIsMoving as: #OMoves!
!OTurn class methodsFor: 'as yet unclassified' stamp: 'IO 11/1/2020 18:33:15' prior: 50892460 overrides: 50887156!
withXTokens: nextXTokens oTokens: nextOTokens

	"create the next state of O's turn"

	(nextXTokens areInWinningPosition) ifTrue: [^GameOver withXTokens: nextXTokens oTokens: nextOTokens].
	(nextOTokens size < 3) ifTrue: [^OIsPlacing withXTokens: nextXTokens oTokens: nextOTokens].
	^OMoves withXTokens: nextXTokens oTokens: nextOTokens
! !

!classRenamed: #OIsPlacing as: #OPuts stamp: 'IO 11/1/2020 18:33:20'!
Smalltalk renameClassNamed: #OIsPlacing as: #OPuts!
!OTurn class methodsFor: 'as yet unclassified' stamp: 'IO 11/1/2020 18:33:20' prior: 50892643 overrides: 50887156!
withXTokens: nextXTokens oTokens: nextOTokens

	"create the next state of O's turn"

	(nextXTokens areInWinningPosition) ifTrue: [^GameOver withXTokens: nextXTokens oTokens: nextOTokens].
	(nextOTokens size < 3) ifTrue: [^OPuts withXTokens: nextXTokens oTokens: nextOTokens].
	^OMoves withXTokens: nextXTokens oTokens: nextOTokens
! !

!classRenamed: #XIsPlaying as: #XTurn stamp: 'IO 11/1/2020 18:33:26'!
Smalltalk renameClassNamed: #XIsPlaying as: #XTurn!
!OTurn methodsFor: 'as yet unclassified' stamp: 'IO 11/1/2020 18:33:27' prior: 50882631 overrides: 50882730!
passTurn

	"see superimplementor"

	^XTurn withXTokens: xTokens oTokens: oTokens.
! !

!classRenamed: #XIsMoving as: #XMoves stamp: 'IO 11/1/2020 18:33:32'!
Smalltalk renameClassNamed: #XIsMoving as: #XMoves!
!XTurn class methodsFor: 'as yet unclassified' stamp: 'IO 11/1/2020 18:33:32' prior: 50892445 overrides: 50887156!
withXTokens: nextXTokens oTokens: nextOTokens

	"create the next state of X's turn"

	(nextOTokens areInWinningPosition) ifTrue: [^GameOver withXTokens: nextXTokens oTokens: nextOTokens].
	(nextXTokens size < 3) ifTrue: [^XIsPlacing withXTokens: nextXTokens oTokens: nextOTokens].
	^XMoves withXTokens: nextXTokens oTokens: nextOTokens.

	
! !

!classRenamed: #XIsPlacing as: #XPuts stamp: 'IO 11/1/2020 18:33:38'!
Smalltalk renameClassNamed: #XIsPlacing as: #XPuts!
!TerniLapilliGameState class methodsFor: 'as yet unclassified' stamp: 'IO 11/1/2020 18:33:38' prior: 50886666 overrides: 16783533!
new

	"create the initial state of the game"

	^XPuts new initialize.
! !
!XTurn class methodsFor: 'as yet unclassified' stamp: 'IO 11/1/2020 18:33:38' prior: 50892691 overrides: 50887156!
withXTokens: nextXTokens oTokens: nextOTokens

	"create the next state of X's turn"

	(nextOTokens areInWinningPosition) ifTrue: [^GameOver withXTokens: nextXTokens oTokens: nextOTokens].
	(nextXTokens size < 3) ifTrue: [^XPuts withXTokens: nextXTokens oTokens: nextOTokens].
	^XMoves withXTokens: nextXTokens oTokens: nextOTokens.

	
! !
!TerniLapilliGame methodsFor: 'moves' stamp: 'IO 11/1/2020 18:34:14' prior: 50889893!
moveOFrom: aPosition to: destinationPosition

	"move O's token from a given position of the board to another given position"

	(self hasTokenAt: destinationPosition ) ifTrue: [^self error: TerniLapilliGame cannotMoveErrorMessage].
	state := state moveOFrom: aPosition to: destinationPosition.
! !
!TerniLapilliGame methodsFor: 'moves' stamp: 'IO 11/1/2020 18:34:21' prior: 50892730!
moveOFrom: aPosition to: aDesitination

	"move O's token from a given position of the board to another given position"

	(self hasTokenAt: aDesitination ) ifTrue: [^self error: TerniLapilliGame cannotMoveErrorMessage].
	state := state moveOFrom: aPosition to: aDesitination.
! !
!TerniLapilliGame methodsFor: 'moves' stamp: 'IO 11/1/2020 18:34:27' prior: 50892742!
moveOFrom: aPosition to: aDestination

	"move O's token from a given position of the board to another given position"

	(self hasTokenAt: aDestination ) ifTrue: [^self error: TerniLapilliGame cannotMoveErrorMessage].
	state := state moveOFrom: aPosition to: aDestination.
! !
!TerniLapilliGame methodsFor: 'moves' stamp: 'IO 11/1/2020 18:34:35' prior: 50890836!
moveXFrom: aPosition to: destinationPosition

	"move O's token from a given position of the board to another given position"

	(self hasTokenAt: destinationPosition ) ifTrue:[^self error: TerniLapilliGame cannotMoveErrorMessage].
	state := state moveXFrom: aPosition to: destinationPosition.
	
	
! !
!TerniLapilliGame methodsFor: 'moves' stamp: 'IO 11/1/2020 18:34:39' prior: 50892766!
moveXFrom: aPosition to: aDestination

	"move O's token from a given position of the board to another given position"

	(self hasTokenAt: aDestination ) ifTrue:[^self error: TerniLapilliGame cannotMoveErrorMessage].
	state := state moveXFrom: aPosition to: aDestination.
	
	
! !
!TerniLapilliGameState methodsFor: 'moves' stamp: 'IO 11/1/2020 18:34:53' prior: 50891622!
moveOFrom: aPositon to: destinationPosition

	"returns the next state when O moves a token"

	oTokens moveFrom: aPositon to: destinationPosition.
	^self passTurn.
! !
!TerniLapilliGameState methodsFor: 'moves' stamp: 'IO 11/1/2020 18:34:58' prior: 50892791!
moveOFrom: aPositon to: aDestination

	"returns the next state when O moves a token"

	oTokens moveFrom: aPositon to: aDestination.
	^self passTurn.
! !
!TerniLapilliGameState methodsFor: 'moves' stamp: 'IO 11/1/2020 18:35:23' prior: 50891613!
moveXFrom: aPositon to: aDestination

	"returns the next state when X moves a token"

	xTokens moveFrom: aPositon to: aDestination.
	^self passTurn.
! !
!GameOver methodsFor: 'moves' stamp: 'IO 11/1/2020 18:35:34' prior: 50889700 overrides: 50892800!
moveOFrom: aPosition to: destinationPosition

	"see superimplementor"

	^self errorGameEnded.
! !
!GameOver methodsFor: 'moves' stamp: 'IO 11/1/2020 18:35:41' prior: 50892816 overrides: 50892800!
moveOFrom: aPosition to: aDestination

	"see superimplementor"

	^self errorGameEnded.
! !
!GameOver methodsFor: 'moves' stamp: 'IO 11/1/2020 18:35:48' prior: 50890519 overrides: 50892808!
moveXFrom: aPosition to: destinationPosition

	"see superimplementor"

	^self errorGameEnded.

! !
!GameOver methodsFor: 'moves' stamp: 'IO 11/1/2020 18:35:54' prior: 50892829 overrides: 50892808!
moveXFrom: aPosition to: aDestination

	"see superimplementor"

	^self errorGameEnded.

! !
!OTurn methodsFor: 'moves' stamp: 'IO 11/1/2020 18:36:10' prior: 50890553 overrides: 50892808!
moveXFrom: aPosition to: destinationPosition

	"see superimplementor"

	self errorIlegalTurn.
! !
!OTurn methodsFor: 'moves' stamp: 'IO 11/1/2020 18:36:14' prior: 50892842 overrides: 50892808!
moveXFrom: aPosition to: aDestination

	"see superimplementor"

	self errorIlegalTurn.
! !
!OPuts methodsFor: 'moves' stamp: 'IO 11/1/2020 18:36:38' prior: 50889712 overrides: 50892800!
moveOFrom: aPosition to: destinationPosition

	"see superimplementor"

	^self errorCannotMove.
! !
!OPuts methodsFor: 'moves' stamp: 'IO 11/1/2020 18:36:43' prior: 50892855 overrides: 50892800!
moveOFrom: aPosition to: aDestination

	"see superimplementor"

	^self errorCannotMove.
! !
!XTurn methodsFor: 'moves' stamp: 'IO 11/1/2020 18:36:51' prior: 50889706 overrides: 50892800!
moveOFrom: aPosition to: aDestination

	"see superimplementor"

	self errorIlegalTurn.
! !

!testRun: #TerniLapilliGameTest #test01XCanPutAToken stamp: 'IO 11/1/2020 18:36:57'!
PASSED!

!testRun: #TerniLapilliGameTest #test02puttingDoesNotAffectOtherPositions stamp: 'IO 11/1/2020 18:36:57'!
PASSED!

!testRun: #TerniLapilliGameTest #test03XCanPutInOtherPositions stamp: 'IO 11/1/2020 18:36:57'!
PASSED!

!testRun: #TerniLapilliGameTest #test04OCanPut stamp: 'IO 11/1/2020 18:36:57'!
PASSED!

!testRun: #TerniLapilliGameTest #test05XCanMove stamp: 'IO 11/1/2020 18:36:57'!
PASSED!

!testRun: #TerniLapilliGameTest #test06OCanMove stamp: 'IO 11/1/2020 18:36:57'!
PASSED!

!testRun: #TerniLapilliGameTest #test07XWinsWithTheFirstColumn stamp: 'IO 11/1/2020 18:36:57'!
PASSED!

!testRun: #TerniLapilliGameTest #test08XHasntWonYet stamp: 'IO 11/1/2020 18:36:57'!
PASSED!

!testRun: #TerniLapilliGameTest #test09XWinsWithTheSecondColumn stamp: 'IO 11/1/2020 18:36:57'!
PASSED!

!testRun: #TerniLapilliGameTest #test10XWinsWithTheThirdColumn stamp: 'IO 11/1/2020 18:36:57'!
PASSED!

!testRun: #TerniLapilliGameTest #test11XWinsWithTheFirstRow stamp: 'IO 11/1/2020 18:36:57'!
PASSED!

!testRun: #TerniLapilliGameTest #test12XWinsWithTheSecondRow stamp: 'IO 11/1/2020 18:36:57'!
PASSED!

!testRun: #TerniLapilliGameTest #test13XWinsWithTheThirdRow stamp: 'IO 11/1/2020 18:36:57'!
PASSED!

!testRun: #TerniLapilliGameTest #test14XWinsWithTheCrescentDiagonal stamp: 'IO 11/1/2020 18:36:57'!
PASSED!

!testRun: #TerniLapilliGameTest #test15XWinsWithTheDescendantDiagonal stamp: 'IO 11/1/2020 18:36:57'!
PASSED!

!testRun: #TerniLapilliGameTest #test16OWnis stamp: 'IO 11/1/2020 18:36:57'!
PASSED!

!testRun: #TerniLapilliGameTest #test17OCantStartPutting stamp: 'IO 11/1/2020 18:36:57'!
PASSED!

!testRun: #TerniLapilliGameTest #test18XCantPutTwiceInARow stamp: 'IO 11/1/2020 18:36:57'!
PASSED!

!testRun: #TerniLapilliGameTest #test19XCantMoveTwiceInARow stamp: 'IO 11/1/2020 18:36:57'!
PASSED!

!testRun: #TerniLapilliGameTest #test20OCantPutTwiceInARow stamp: 'IO 11/1/2020 18:36:57'!
PASSED!

!testRun: #TerniLapilliGameTest #test21OCantMoveTwiceInARow stamp: 'IO 11/1/2020 18:36:57'!
PASSED!

!testRun: #TerniLapilliGameTest #test22XCantMoveOnTheirFirstTurn stamp: 'IO 11/1/2020 18:36:57'!
PASSED!

!testRun: #TerniLapilliGameTest #test23XCantMoveOnTheirSecondTurn stamp: 'IO 11/1/2020 18:36:57'!
PASSED!

!testRun: #TerniLapilliGameTest #test24XCantMoveOnTheirThirdTurn stamp: 'IO 11/1/2020 18:36:57'!
PASSED!

!testRun: #TerniLapilliGameTest #test25OCantMoveOnTheirFirstTurn stamp: 'IO 11/1/2020 18:36:57'!
PASSED!

!testRun: #TerniLapilliGameTest #test26OCantMoveOnTheirSecondTurn stamp: 'IO 11/1/2020 18:36:57'!
PASSED!

!testRun: #TerniLapilliGameTest #test27OCantMoveOnTheirThirdTurn stamp: 'IO 11/1/2020 18:36:57'!
PASSED!

!testRun: #TerniLapilliGameTest #test28XCantPutAfterTheirThirdTurn stamp: 'IO 11/1/2020 18:36:57'!
PASSED!

!testRun: #TerniLapilliGameTest #test29OCantPutAfterTheirThirdTurn stamp: 'IO 11/1/2020 18:36:57'!
PASSED!

!testRun: #TerniLapilliGameTest #test30OCantPutAfterXWon stamp: 'IO 11/1/2020 18:36:57'!
PASSED!

!testRun: #TerniLapilliGameTest #test31OCantMoveAfterXWon stamp: 'IO 11/1/2020 18:36:57'!
PASSED!

!testRun: #TerniLapilliGameTest #test32XCantMoveAfterOWon stamp: 'IO 11/1/2020 18:36:57'!
PASSED!

!testRun: #TerniLapilliGameTest #test33XCantPutAfterOWon stamp: 'IO 11/1/2020 18:36:57'!
PASSED!

!testRun: #TerniLapilliGameTest #test34XCantPutInAnOccupiedSpace stamp: 'IO 11/1/2020 18:36:57'!
PASSED!

!testRun: #TerniLapilliGameTest #test35OCantPutInAnOccupiedSpace stamp: 'IO 11/1/2020 18:36:57'!
PASSED!

!testRun: #TerniLapilliGameTest #test36XCantMoveToAnOccupiedSpace stamp: 'IO 11/1/2020 18:36:57'!
PASSED!

!testRun: #TerniLapilliGameTest #test37OCantMoveToAnOccupiedSpace stamp: 'IO 11/1/2020 18:36:57'!
PASSED!

!testRun: #TerniLapilliGameTest #test38XCantPutOutsideTheBoardUnderXAxis stamp: 'IO 11/1/2020 18:36:57'!
PASSED!

!testRun: #TerniLapilliGameTest #test39XCantPutOutsideTheBoardAboveXAxis stamp: 'IO 11/1/2020 18:36:57'!
PASSED!

!testRun: #TerniLapilliGameTest #test40XCantPutOutsideTheBoardUnderNorAboveTheYAxis stamp: 'IO 11/1/2020 18:36:57'!
PASSED!

!testRun: #TerniLapilliGameTest #test41OCantPutOutsideTheBoard stamp: 'IO 11/1/2020 18:36:57'!
PASSED!

!testRun: #TerniLapilliGameTest #test42XCantMoveToOutsideTheBoard stamp: 'IO 11/1/2020 18:36:57'!
PASSED!

!testRun: #TerniLapilliGameTest #test43OCantMoveToOutsideTheBoard stamp: 'IO 11/1/2020 18:36:57'!
PASSED!

!testRun: #TerniLapilliGameTest #test44XCantMoveTokensThatDontBelongToThem stamp: 'IO 11/1/2020 18:36:57'!
PASSED!

!testRun: #TerniLapilliGameTest #test45OCantMoveTokensThatDontBelongToThem stamp: 'IO 11/1/2020 18:36:57'!
PASSED!

!testRun: #TerniLapilliGameTest #test46XCantMoveaTokenOutsideItsNeighbors stamp: 'IO 11/1/2020 18:36:57'!
PASSED!

!testRun: #TerniLapilliGameTest #test47OCantMoveATokenOutsideItsNeighbors stamp: 'IO 11/1/2020 18:36:57'!
PASSED!
!XPuts methodsFor: 'moves' stamp: 'IO 11/1/2020 18:37:13' prior: 50890534 overrides: 50892808!
moveXFrom: aPosition to: aDestination

	"see superimplementor"

	^self errorCannotMove.
! !

!testRun: #TerniLapilliGameTest #test01XCanPutAToken stamp: 'IO 11/1/2020 18:37:16'!
PASSED!

!testRun: #TerniLapilliGameTest #test02puttingDoesNotAffectOtherPositions stamp: 'IO 11/1/2020 18:37:16'!
PASSED!

!testRun: #TerniLapilliGameTest #test03XCanPutInOtherPositions stamp: 'IO 11/1/2020 18:37:16'!
PASSED!

!testRun: #TerniLapilliGameTest #test04OCanPut stamp: 'IO 11/1/2020 18:37:16'!
PASSED!

!testRun: #TerniLapilliGameTest #test05XCanMove stamp: 'IO 11/1/2020 18:37:17'!
PASSED!

!testRun: #TerniLapilliGameTest #test06OCanMove stamp: 'IO 11/1/2020 18:37:17'!
PASSED!

!testRun: #TerniLapilliGameTest #test07XWinsWithTheFirstColumn stamp: 'IO 11/1/2020 18:37:17'!
PASSED!

!testRun: #TerniLapilliGameTest #test08XHasntWonYet stamp: 'IO 11/1/2020 18:37:17'!
PASSED!

!testRun: #TerniLapilliGameTest #test09XWinsWithTheSecondColumn stamp: 'IO 11/1/2020 18:37:17'!
PASSED!

!testRun: #TerniLapilliGameTest #test10XWinsWithTheThirdColumn stamp: 'IO 11/1/2020 18:37:17'!
PASSED!

!testRun: #TerniLapilliGameTest #test11XWinsWithTheFirstRow stamp: 'IO 11/1/2020 18:37:17'!
PASSED!

!testRun: #TerniLapilliGameTest #test12XWinsWithTheSecondRow stamp: 'IO 11/1/2020 18:37:17'!
PASSED!

!testRun: #TerniLapilliGameTest #test13XWinsWithTheThirdRow stamp: 'IO 11/1/2020 18:37:17'!
PASSED!

!testRun: #TerniLapilliGameTest #test14XWinsWithTheCrescentDiagonal stamp: 'IO 11/1/2020 18:37:17'!
PASSED!

!testRun: #TerniLapilliGameTest #test15XWinsWithTheDescendantDiagonal stamp: 'IO 11/1/2020 18:37:17'!
PASSED!

!testRun: #TerniLapilliGameTest #test16OWnis stamp: 'IO 11/1/2020 18:37:17'!
PASSED!

!testRun: #TerniLapilliGameTest #test17OCantStartPutting stamp: 'IO 11/1/2020 18:37:17'!
PASSED!

!testRun: #TerniLapilliGameTest #test18XCantPutTwiceInARow stamp: 'IO 11/1/2020 18:37:17'!
PASSED!

!testRun: #TerniLapilliGameTest #test19XCantMoveTwiceInARow stamp: 'IO 11/1/2020 18:37:17'!
PASSED!

!testRun: #TerniLapilliGameTest #test20OCantPutTwiceInARow stamp: 'IO 11/1/2020 18:37:17'!
PASSED!

!testRun: #TerniLapilliGameTest #test21OCantMoveTwiceInARow stamp: 'IO 11/1/2020 18:37:17'!
PASSED!

!testRun: #TerniLapilliGameTest #test22XCantMoveOnTheirFirstTurn stamp: 'IO 11/1/2020 18:37:17'!
PASSED!

!testRun: #TerniLapilliGameTest #test23XCantMoveOnTheirSecondTurn stamp: 'IO 11/1/2020 18:37:17'!
PASSED!

!testRun: #TerniLapilliGameTest #test24XCantMoveOnTheirThirdTurn stamp: 'IO 11/1/2020 18:37:17'!
PASSED!

!testRun: #TerniLapilliGameTest #test25OCantMoveOnTheirFirstTurn stamp: 'IO 11/1/2020 18:37:17'!
PASSED!

!testRun: #TerniLapilliGameTest #test26OCantMoveOnTheirSecondTurn stamp: 'IO 11/1/2020 18:37:17'!
PASSED!

!testRun: #TerniLapilliGameTest #test27OCantMoveOnTheirThirdTurn stamp: 'IO 11/1/2020 18:37:17'!
PASSED!

!testRun: #TerniLapilliGameTest #test28XCantPutAfterTheirThirdTurn stamp: 'IO 11/1/2020 18:37:17'!
PASSED!

!testRun: #TerniLapilliGameTest #test29OCantPutAfterTheirThirdTurn stamp: 'IO 11/1/2020 18:37:17'!
PASSED!

!testRun: #TerniLapilliGameTest #test30OCantPutAfterXWon stamp: 'IO 11/1/2020 18:37:17'!
PASSED!

!testRun: #TerniLapilliGameTest #test31OCantMoveAfterXWon stamp: 'IO 11/1/2020 18:37:17'!
PASSED!

!testRun: #TerniLapilliGameTest #test32XCantMoveAfterOWon stamp: 'IO 11/1/2020 18:37:17'!
PASSED!

!testRun: #TerniLapilliGameTest #test33XCantPutAfterOWon stamp: 'IO 11/1/2020 18:37:17'!
PASSED!

!testRun: #TerniLapilliGameTest #test34XCantPutInAnOccupiedSpace stamp: 'IO 11/1/2020 18:37:17'!
PASSED!

!testRun: #TerniLapilliGameTest #test35OCantPutInAnOccupiedSpace stamp: 'IO 11/1/2020 18:37:17'!
PASSED!

!testRun: #TerniLapilliGameTest #test36XCantMoveToAnOccupiedSpace stamp: 'IO 11/1/2020 18:37:17'!
PASSED!

!testRun: #TerniLapilliGameTest #test37OCantMoveToAnOccupiedSpace stamp: 'IO 11/1/2020 18:37:17'!
PASSED!

!testRun: #TerniLapilliGameTest #test38XCantPutOutsideTheBoardUnderXAxis stamp: 'IO 11/1/2020 18:37:17'!
PASSED!

!testRun: #TerniLapilliGameTest #test39XCantPutOutsideTheBoardAboveXAxis stamp: 'IO 11/1/2020 18:37:17'!
PASSED!

!testRun: #TerniLapilliGameTest #test40XCantPutOutsideTheBoardUnderNorAboveTheYAxis stamp: 'IO 11/1/2020 18:37:17'!
PASSED!

!testRun: #TerniLapilliGameTest #test41OCantPutOutsideTheBoard stamp: 'IO 11/1/2020 18:37:17'!
PASSED!

!testRun: #TerniLapilliGameTest #test42XCantMoveToOutsideTheBoard stamp: 'IO 11/1/2020 18:37:17'!
PASSED!

!testRun: #TerniLapilliGameTest #test43OCantMoveToOutsideTheBoard stamp: 'IO 11/1/2020 18:37:17'!
PASSED!

!testRun: #TerniLapilliGameTest #test44XCantMoveTokensThatDontBelongToThem stamp: 'IO 11/1/2020 18:37:17'!
PASSED!

!testRun: #TerniLapilliGameTest #test45OCantMoveTokensThatDontBelongToThem stamp: 'IO 11/1/2020 18:37:17'!
PASSED!

!testRun: #TerniLapilliGameTest #test46XCantMoveaTokenOutsideItsNeighbors stamp: 'IO 11/1/2020 18:37:17'!
PASSED!

!testRun: #TerniLapilliGameTest #test47OCantMoveATokenOutsideItsNeighbors stamp: 'IO 11/1/2020 18:37:17'!
PASSED!
!TerniLapilliPlayerTokens methodsFor: 'moves' stamp: 'IO 11/1/2020 18:37:40' prior: 50892275!
moveFrom: aPosition to: destinationPosition

	"move a token form a given position of the board to another position"

	self validateIsLegalMoveFrom: aPosition to: destinationPosition.

	tokens remove: aPosition.
	tokens add: destinationPosition.
! !
!TerniLapilliPlayerTokens methodsFor: 'moves' stamp: 'IO 11/1/2020 18:37:44' prior: 50893186!
moveFrom: aPosition to: aDestination

	"move a token form a given position of the board to another position"

	self validateIsLegalMoveFrom: aPosition to: aDestination.

	tokens remove: aPosition.
	tokens add: aDestination.
! !
!TerniLapilliPlayerTokens methodsFor: 'validations' stamp: 'IO 11/1/2020 18:40:13' prior: 50885082!
validateIsLegalMoveFrom: sourcePosition to: destinationPosition

	"signal when a token cannot be moved from a given position to another"

	(
		(self includes: sourcePosition) and:
		(sourcePosition eightNeighbors includes: destinationPosition)
	) ifFalse: [^self error: TerniLapilliGame cannotMoveErrorMessage].

	self validateIsInBoard: destinationPosition withErrorMessage: TerniLapilliGame cannotMoveErrorMessage.
! !

!testRun: #TerniLapilliGameTest #test01XCanPutAToken stamp: 'IO 11/1/2020 18:40:17'!
PASSED!

!testRun: #TerniLapilliGameTest #test02puttingDoesNotAffectOtherPositions stamp: 'IO 11/1/2020 18:40:17'!
PASSED!

!testRun: #TerniLapilliGameTest #test03XCanPutInOtherPositions stamp: 'IO 11/1/2020 18:40:17'!
PASSED!

!testRun: #TerniLapilliGameTest #test04OCanPut stamp: 'IO 11/1/2020 18:40:17'!
PASSED!

!testRun: #TerniLapilliGameTest #test05XCanMove stamp: 'IO 11/1/2020 18:40:17'!
PASSED!

!testRun: #TerniLapilliGameTest #test06OCanMove stamp: 'IO 11/1/2020 18:40:17'!
PASSED!

!testRun: #TerniLapilliGameTest #test07XWinsWithTheFirstColumn stamp: 'IO 11/1/2020 18:40:17'!
PASSED!

!testRun: #TerniLapilliGameTest #test08XHasntWonYet stamp: 'IO 11/1/2020 18:40:17'!
PASSED!

!testRun: #TerniLapilliGameTest #test09XWinsWithTheSecondColumn stamp: 'IO 11/1/2020 18:40:17'!
PASSED!

!testRun: #TerniLapilliGameTest #test10XWinsWithTheThirdColumn stamp: 'IO 11/1/2020 18:40:17'!
PASSED!

!testRun: #TerniLapilliGameTest #test11XWinsWithTheFirstRow stamp: 'IO 11/1/2020 18:40:17'!
PASSED!

!testRun: #TerniLapilliGameTest #test12XWinsWithTheSecondRow stamp: 'IO 11/1/2020 18:40:17'!
PASSED!

!testRun: #TerniLapilliGameTest #test13XWinsWithTheThirdRow stamp: 'IO 11/1/2020 18:40:17'!
PASSED!

!testRun: #TerniLapilliGameTest #test14XWinsWithTheCrescentDiagonal stamp: 'IO 11/1/2020 18:40:17'!
PASSED!

!testRun: #TerniLapilliGameTest #test15XWinsWithTheDescendantDiagonal stamp: 'IO 11/1/2020 18:40:17'!
PASSED!

!testRun: #TerniLapilliGameTest #test16OWnis stamp: 'IO 11/1/2020 18:40:17'!
PASSED!

!testRun: #TerniLapilliGameTest #test17OCantStartPutting stamp: 'IO 11/1/2020 18:40:17'!
PASSED!

!testRun: #TerniLapilliGameTest #test18XCantPutTwiceInARow stamp: 'IO 11/1/2020 18:40:17'!
PASSED!

!testRun: #TerniLapilliGameTest #test19XCantMoveTwiceInARow stamp: 'IO 11/1/2020 18:40:17'!
PASSED!

!testRun: #TerniLapilliGameTest #test20OCantPutTwiceInARow stamp: 'IO 11/1/2020 18:40:17'!
PASSED!

!testRun: #TerniLapilliGameTest #test21OCantMoveTwiceInARow stamp: 'IO 11/1/2020 18:40:17'!
PASSED!

!testRun: #TerniLapilliGameTest #test22XCantMoveOnTheirFirstTurn stamp: 'IO 11/1/2020 18:40:17'!
PASSED!

!testRun: #TerniLapilliGameTest #test23XCantMoveOnTheirSecondTurn stamp: 'IO 11/1/2020 18:40:17'!
PASSED!

!testRun: #TerniLapilliGameTest #test24XCantMoveOnTheirThirdTurn stamp: 'IO 11/1/2020 18:40:17'!
PASSED!

!testRun: #TerniLapilliGameTest #test25OCantMoveOnTheirFirstTurn stamp: 'IO 11/1/2020 18:40:17'!
PASSED!

!testRun: #TerniLapilliGameTest #test26OCantMoveOnTheirSecondTurn stamp: 'IO 11/1/2020 18:40:17'!
PASSED!

!testRun: #TerniLapilliGameTest #test27OCantMoveOnTheirThirdTurn stamp: 'IO 11/1/2020 18:40:17'!
PASSED!

!testRun: #TerniLapilliGameTest #test28XCantPutAfterTheirThirdTurn stamp: 'IO 11/1/2020 18:40:17'!
PASSED!

!testRun: #TerniLapilliGameTest #test29OCantPutAfterTheirThirdTurn stamp: 'IO 11/1/2020 18:40:17'!
PASSED!

!testRun: #TerniLapilliGameTest #test30OCantPutAfterXWon stamp: 'IO 11/1/2020 18:40:17'!
PASSED!

!testRun: #TerniLapilliGameTest #test31OCantMoveAfterXWon stamp: 'IO 11/1/2020 18:40:17'!
PASSED!

!testRun: #TerniLapilliGameTest #test32XCantMoveAfterOWon stamp: 'IO 11/1/2020 18:40:17'!
PASSED!

!testRun: #TerniLapilliGameTest #test33XCantPutAfterOWon stamp: 'IO 11/1/2020 18:40:17'!
PASSED!

!testRun: #TerniLapilliGameTest #test34XCantPutInAnOccupiedSpace stamp: 'IO 11/1/2020 18:40:17'!
PASSED!

!testRun: #TerniLapilliGameTest #test35OCantPutInAnOccupiedSpace stamp: 'IO 11/1/2020 18:40:17'!
PASSED!

!testRun: #TerniLapilliGameTest #test36XCantMoveToAnOccupiedSpace stamp: 'IO 11/1/2020 18:40:17'!
PASSED!

!testRun: #TerniLapilliGameTest #test37OCantMoveToAnOccupiedSpace stamp: 'IO 11/1/2020 18:40:17'!
PASSED!

!testRun: #TerniLapilliGameTest #test38XCantPutOutsideTheBoardUnderXAxis stamp: 'IO 11/1/2020 18:40:17'!
PASSED!

!testRun: #TerniLapilliGameTest #test39XCantPutOutsideTheBoardAboveXAxis stamp: 'IO 11/1/2020 18:40:17'!
PASSED!

!testRun: #TerniLapilliGameTest #test40XCantPutOutsideTheBoardUnderNorAboveTheYAxis stamp: 'IO 11/1/2020 18:40:17'!
PASSED!

!testRun: #TerniLapilliGameTest #test41OCantPutOutsideTheBoard stamp: 'IO 11/1/2020 18:40:17'!
PASSED!

!testRun: #TerniLapilliGameTest #test42XCantMoveToOutsideTheBoard stamp: 'IO 11/1/2020 18:40:17'!
PASSED!

!testRun: #TerniLapilliGameTest #test43OCantMoveToOutsideTheBoard stamp: 'IO 11/1/2020 18:40:17'!
PASSED!

!testRun: #TerniLapilliGameTest #test44XCantMoveTokensThatDontBelongToThem stamp: 'IO 11/1/2020 18:40:17'!
PASSED!

!testRun: #TerniLapilliGameTest #test45OCantMoveTokensThatDontBelongToThem stamp: 'IO 11/1/2020 18:40:17'!
PASSED!

!testRun: #TerniLapilliGameTest #test46XCantMoveaTokenOutsideItsNeighbors stamp: 'IO 11/1/2020 18:40:17'!
PASSED!

!testRun: #TerniLapilliGameTest #test47OCantMoveATokenOutsideItsNeighbors stamp: 'IO 11/1/2020 18:40:17'!
PASSED!
!TerniLapilliPlayerTokens methodsFor: 'validations' stamp: 'IO 11/1/2020 18:41:38' prior: 50883469!
validateIsInBoard: aPosition withErrorMessage: errorMessage

	"signal when a position is invalid with a given error message"

	(
		(aPosition x < 3) and:
		(aPosition x >= 0) and:
		(aPosition x + aPosition y < 3)
	) ifFalse: [^self error: errorMessage].
! !

!testRun: #TerniLapilliGameTest #test01XCanPutAToken stamp: 'IO 11/1/2020 18:41:42'!
PASSED!

!testRun: #TerniLapilliGameTest #test02puttingDoesNotAffectOtherPositions stamp: 'IO 11/1/2020 18:41:42'!
PASSED!

!testRun: #TerniLapilliGameTest #test03XCanPutInOtherPositions stamp: 'IO 11/1/2020 18:41:42'!
PASSED!

!testRun: #TerniLapilliGameTest #test04OCanPut stamp: 'IO 11/1/2020 18:41:42'!
PASSED!

!testRun: #TerniLapilliGameTest #test05XCanMove stamp: 'IO 11/1/2020 18:41:42'!
ERROR!

!testRun: #TerniLapilliGameTest #test06OCanMove stamp: 'IO 11/1/2020 18:41:42'!
ERROR!

!testRun: #TerniLapilliGameTest #test07XWinsWithTheFirstColumn stamp: 'IO 11/1/2020 18:41:42'!
PASSED!

!testRun: #TerniLapilliGameTest #test08XHasntWonYet stamp: 'IO 11/1/2020 18:41:42'!
ERROR!

!testRun: #TerniLapilliGameTest #test09XWinsWithTheSecondColumn stamp: 'IO 11/1/2020 18:41:42'!
ERROR!

!testRun: #TerniLapilliGameTest #test10XWinsWithTheThirdColumn stamp: 'IO 11/1/2020 18:41:42'!
ERROR!

!testRun: #TerniLapilliGameTest #test11XWinsWithTheFirstRow stamp: 'IO 11/1/2020 18:41:42'!
PASSED!

!testRun: #TerniLapilliGameTest #test12XWinsWithTheSecondRow stamp: 'IO 11/1/2020 18:41:42'!
ERROR!

!testRun: #TerniLapilliGameTest #test13XWinsWithTheThirdRow stamp: 'IO 11/1/2020 18:41:42'!
ERROR!

!testRun: #TerniLapilliGameTest #test14XWinsWithTheCrescentDiagonal stamp: 'IO 11/1/2020 18:41:42'!
ERROR!

!testRun: #TerniLapilliGameTest #test15XWinsWithTheDescendantDiagonal stamp: 'IO 11/1/2020 18:41:42'!
ERROR!

!testRun: #TerniLapilliGameTest #test16OWnis stamp: 'IO 11/1/2020 18:41:42'!
ERROR!

!testRun: #TerniLapilliGameTest #test17OCantStartPutting stamp: 'IO 11/1/2020 18:41:42'!
PASSED!

!testRun: #TerniLapilliGameTest #test18XCantPutTwiceInARow stamp: 'IO 11/1/2020 18:41:42'!
PASSED!

!testRun: #TerniLapilliGameTest #test19XCantMoveTwiceInARow stamp: 'IO 11/1/2020 18:41:42'!
ERROR!

!testRun: #TerniLapilliGameTest #test20OCantPutTwiceInARow stamp: 'IO 11/1/2020 18:41:42'!
PASSED!

!testRun: #TerniLapilliGameTest #test21OCantMoveTwiceInARow stamp: 'IO 11/1/2020 18:41:42'!
ERROR!

!testRun: #TerniLapilliGameTest #test22XCantMoveOnTheirFirstTurn stamp: 'IO 11/1/2020 18:41:42'!
PASSED!

!testRun: #TerniLapilliGameTest #test23XCantMoveOnTheirSecondTurn stamp: 'IO 11/1/2020 18:41:42'!
PASSED!

!testRun: #TerniLapilliGameTest #test24XCantMoveOnTheirThirdTurn stamp: 'IO 11/1/2020 18:41:42'!
PASSED!

!testRun: #TerniLapilliGameTest #test25OCantMoveOnTheirFirstTurn stamp: 'IO 11/1/2020 18:41:42'!
PASSED!

!testRun: #TerniLapilliGameTest #test26OCantMoveOnTheirSecondTurn stamp: 'IO 11/1/2020 18:41:42'!
PASSED!

!testRun: #TerniLapilliGameTest #test27OCantMoveOnTheirThirdTurn stamp: 'IO 11/1/2020 18:41:42'!
ERROR!

!testRun: #TerniLapilliGameTest #test28XCantPutAfterTheirThirdTurn stamp: 'IO 11/1/2020 18:41:42'!
ERROR!

!testRun: #TerniLapilliGameTest #test29OCantPutAfterTheirThirdTurn stamp: 'IO 11/1/2020 18:41:42'!
ERROR!

!testRun: #TerniLapilliGameTest #test30OCantPutAfterXWon stamp: 'IO 11/1/2020 18:41:42'!
ERROR!

!testRun: #TerniLapilliGameTest #test31OCantMoveAfterXWon stamp: 'IO 11/1/2020 18:41:42'!
ERROR!

!testRun: #TerniLapilliGameTest #test32XCantMoveAfterOWon stamp: 'IO 11/1/2020 18:41:42'!
ERROR!

!testRun: #TerniLapilliGameTest #test33XCantPutAfterOWon stamp: 'IO 11/1/2020 18:41:42'!
ERROR!

!testRun: #TerniLapilliGameTest #test34XCantPutInAnOccupiedSpace stamp: 'IO 11/1/2020 18:41:42'!
PASSED!

!testRun: #TerniLapilliGameTest #test35OCantPutInAnOccupiedSpace stamp: 'IO 11/1/2020 18:41:42'!
PASSED!

!testRun: #TerniLapilliGameTest #test36XCantMoveToAnOccupiedSpace stamp: 'IO 11/1/2020 18:41:42'!
ERROR!

!testRun: #TerniLapilliGameTest #test37OCantMoveToAnOccupiedSpace stamp: 'IO 11/1/2020 18:41:42'!
ERROR!

!testRun: #TerniLapilliGameTest #test38XCantPutOutsideTheBoardUnderXAxis stamp: 'IO 11/1/2020 18:41:42'!
PASSED!

!testRun: #TerniLapilliGameTest #test39XCantPutOutsideTheBoardAboveXAxis stamp: 'IO 11/1/2020 18:41:42'!
PASSED!

!testRun: #TerniLapilliGameTest #test40XCantPutOutsideTheBoardUnderNorAboveTheYAxis stamp: 'IO 11/1/2020 18:41:42'!
FAILURE!

!testRun: #TerniLapilliGameTest #test41OCantPutOutsideTheBoard stamp: 'IO 11/1/2020 18:41:42'!
FAILURE!

!testRun: #TerniLapilliGameTest #test42XCantMoveToOutsideTheBoard stamp: 'IO 11/1/2020 18:41:42'!
ERROR!

!testRun: #TerniLapilliGameTest #test43OCantMoveToOutsideTheBoard stamp: 'IO 11/1/2020 18:41:42'!
ERROR!

!testRun: #TerniLapilliGameTest #test44XCantMoveTokensThatDontBelongToThem stamp: 'IO 11/1/2020 18:41:42'!
ERROR!

!testRun: #TerniLapilliGameTest #test45OCantMoveTokensThatDontBelongToThem stamp: 'IO 11/1/2020 18:41:42'!
ERROR!

!testRun: #TerniLapilliGameTest #test46XCantMoveaTokenOutsideItsNeighbors stamp: 'IO 11/1/2020 18:41:42'!
ERROR!

!testRun: #TerniLapilliGameTest #test47OCantMoveATokenOutsideItsNeighbors stamp: 'IO 11/1/2020 18:41:42'!
ERROR!
!TerniLapilliPlayerTokens methodsFor: 'validations' stamp: 'IO 11/1/2020 18:42:14' prior: 50893378!
validateIsInBoard: aPosition withErrorMessage: errorMessage

	"signal when a position is invalid with a given error message"

	(
		(aPosition x < 3) and:
		(aPosition x >= 0) and:
		(aPosition y < 3) and:
		(aPosition y >=0)
	) ifFalse: [^self error: errorMessage].
! !

!testRun: #TerniLapilliGameTest #test01XCanPutAToken stamp: 'IO 11/1/2020 18:42:17'!
PASSED!

!testRun: #TerniLapilliGameTest #test02puttingDoesNotAffectOtherPositions stamp: 'IO 11/1/2020 18:42:17'!
PASSED!

!testRun: #TerniLapilliGameTest #test03XCanPutInOtherPositions stamp: 'IO 11/1/2020 18:42:17'!
PASSED!

!testRun: #TerniLapilliGameTest #test04OCanPut stamp: 'IO 11/1/2020 18:42:17'!
PASSED!

!testRun: #TerniLapilliGameTest #test05XCanMove stamp: 'IO 11/1/2020 18:42:17'!
PASSED!

!testRun: #TerniLapilliGameTest #test06OCanMove stamp: 'IO 11/1/2020 18:42:17'!
PASSED!

!testRun: #TerniLapilliGameTest #test07XWinsWithTheFirstColumn stamp: 'IO 11/1/2020 18:42:17'!
PASSED!

!testRun: #TerniLapilliGameTest #test08XHasntWonYet stamp: 'IO 11/1/2020 18:42:17'!
PASSED!

!testRun: #TerniLapilliGameTest #test09XWinsWithTheSecondColumn stamp: 'IO 11/1/2020 18:42:17'!
PASSED!

!testRun: #TerniLapilliGameTest #test10XWinsWithTheThirdColumn stamp: 'IO 11/1/2020 18:42:17'!
PASSED!

!testRun: #TerniLapilliGameTest #test11XWinsWithTheFirstRow stamp: 'IO 11/1/2020 18:42:17'!
PASSED!

!testRun: #TerniLapilliGameTest #test12XWinsWithTheSecondRow stamp: 'IO 11/1/2020 18:42:17'!
PASSED!

!testRun: #TerniLapilliGameTest #test13XWinsWithTheThirdRow stamp: 'IO 11/1/2020 18:42:17'!
PASSED!

!testRun: #TerniLapilliGameTest #test14XWinsWithTheCrescentDiagonal stamp: 'IO 11/1/2020 18:42:17'!
PASSED!

!testRun: #TerniLapilliGameTest #test15XWinsWithTheDescendantDiagonal stamp: 'IO 11/1/2020 18:42:17'!
PASSED!

!testRun: #TerniLapilliGameTest #test16OWnis stamp: 'IO 11/1/2020 18:42:17'!
PASSED!

!testRun: #TerniLapilliGameTest #test17OCantStartPutting stamp: 'IO 11/1/2020 18:42:17'!
PASSED!

!testRun: #TerniLapilliGameTest #test18XCantPutTwiceInARow stamp: 'IO 11/1/2020 18:42:17'!
PASSED!

!testRun: #TerniLapilliGameTest #test19XCantMoveTwiceInARow stamp: 'IO 11/1/2020 18:42:17'!
PASSED!

!testRun: #TerniLapilliGameTest #test20OCantPutTwiceInARow stamp: 'IO 11/1/2020 18:42:17'!
PASSED!

!testRun: #TerniLapilliGameTest #test21OCantMoveTwiceInARow stamp: 'IO 11/1/2020 18:42:17'!
PASSED!

!testRun: #TerniLapilliGameTest #test22XCantMoveOnTheirFirstTurn stamp: 'IO 11/1/2020 18:42:17'!
PASSED!

!testRun: #TerniLapilliGameTest #test23XCantMoveOnTheirSecondTurn stamp: 'IO 11/1/2020 18:42:17'!
PASSED!

!testRun: #TerniLapilliGameTest #test24XCantMoveOnTheirThirdTurn stamp: 'IO 11/1/2020 18:42:17'!
PASSED!

!testRun: #TerniLapilliGameTest #test25OCantMoveOnTheirFirstTurn stamp: 'IO 11/1/2020 18:42:17'!
PASSED!

!testRun: #TerniLapilliGameTest #test26OCantMoveOnTheirSecondTurn stamp: 'IO 11/1/2020 18:42:17'!
PASSED!

!testRun: #TerniLapilliGameTest #test27OCantMoveOnTheirThirdTurn stamp: 'IO 11/1/2020 18:42:17'!
PASSED!

!testRun: #TerniLapilliGameTest #test28XCantPutAfterTheirThirdTurn stamp: 'IO 11/1/2020 18:42:17'!
PASSED!

!testRun: #TerniLapilliGameTest #test29OCantPutAfterTheirThirdTurn stamp: 'IO 11/1/2020 18:42:17'!
PASSED!

!testRun: #TerniLapilliGameTest #test30OCantPutAfterXWon stamp: 'IO 11/1/2020 18:42:17'!
PASSED!

!testRun: #TerniLapilliGameTest #test31OCantMoveAfterXWon stamp: 'IO 11/1/2020 18:42:17'!
PASSED!

!testRun: #TerniLapilliGameTest #test32XCantMoveAfterOWon stamp: 'IO 11/1/2020 18:42:17'!
PASSED!

!testRun: #TerniLapilliGameTest #test33XCantPutAfterOWon stamp: 'IO 11/1/2020 18:42:17'!
PASSED!

!testRun: #TerniLapilliGameTest #test34XCantPutInAnOccupiedSpace stamp: 'IO 11/1/2020 18:42:17'!
PASSED!

!testRun: #TerniLapilliGameTest #test35OCantPutInAnOccupiedSpace stamp: 'IO 11/1/2020 18:42:17'!
PASSED!

!testRun: #TerniLapilliGameTest #test36XCantMoveToAnOccupiedSpace stamp: 'IO 11/1/2020 18:42:17'!
PASSED!

!testRun: #TerniLapilliGameTest #test37OCantMoveToAnOccupiedSpace stamp: 'IO 11/1/2020 18:42:17'!
PASSED!

!testRun: #TerniLapilliGameTest #test38XCantPutOutsideTheBoardUnderXAxis stamp: 'IO 11/1/2020 18:42:17'!
PASSED!

!testRun: #TerniLapilliGameTest #test39XCantPutOutsideTheBoardAboveXAxis stamp: 'IO 11/1/2020 18:42:17'!
PASSED!

!testRun: #TerniLapilliGameTest #test40XCantPutOutsideTheBoardUnderNorAboveTheYAxis stamp: 'IO 11/1/2020 18:42:17'!
PASSED!

!testRun: #TerniLapilliGameTest #test41OCantPutOutsideTheBoard stamp: 'IO 11/1/2020 18:42:17'!
PASSED!

!testRun: #TerniLapilliGameTest #test42XCantMoveToOutsideTheBoard stamp: 'IO 11/1/2020 18:42:17'!
PASSED!

!testRun: #TerniLapilliGameTest #test43OCantMoveToOutsideTheBoard stamp: 'IO 11/1/2020 18:42:17'!
PASSED!

!testRun: #TerniLapilliGameTest #test44XCantMoveTokensThatDontBelongToThem stamp: 'IO 11/1/2020 18:42:17'!
PASSED!

!testRun: #TerniLapilliGameTest #test45OCantMoveTokensThatDontBelongToThem stamp: 'IO 11/1/2020 18:42:17'!
PASSED!

!testRun: #TerniLapilliGameTest #test46XCantMoveaTokenOutsideItsNeighbors stamp: 'IO 11/1/2020 18:42:17'!
PASSED!

!testRun: #TerniLapilliGameTest #test47OCantMoveATokenOutsideItsNeighbors stamp: 'IO 11/1/2020 18:42:17'!
PASSED!
!TerniLapilliGame class methodsFor: 'error messages' stamp: 'IO 11/1/2020 18:43:06'!
invalidPositionErrorMessage

	^'The given position is invalid'.
! !

!testRun: #TerniLapilliGameTest #test34XCantPutInAnOccupiedSpace stamp: 'IO 11/1/2020 18:44:54'!
PASSED!

!testRun: #TerniLapilliGameTest #test01XCanPutAToken stamp: 'IO 11/1/2020 18:44:54'!
PASSED!

!testRun: #TerniLapilliGameTest #test02puttingDoesNotAffectOtherPositions stamp: 'IO 11/1/2020 18:44:54'!
PASSED!

!testRun: #TerniLapilliGameTest #test03XCanPutInOtherPositions stamp: 'IO 11/1/2020 18:44:54'!
PASSED!

!testRun: #TerniLapilliGameTest #test04OCanPut stamp: 'IO 11/1/2020 18:44:54'!
PASSED!

!testRun: #TerniLapilliGameTest #test05XCanMove stamp: 'IO 11/1/2020 18:44:54'!
PASSED!

!testRun: #TerniLapilliGameTest #test06OCanMove stamp: 'IO 11/1/2020 18:44:54'!
PASSED!

!testRun: #TerniLapilliGameTest #test07XWinsWithTheFirstColumn stamp: 'IO 11/1/2020 18:44:54'!
PASSED!

!testRun: #TerniLapilliGameTest #test08XHasntWonYet stamp: 'IO 11/1/2020 18:44:54'!
PASSED!

!testRun: #TerniLapilliGameTest #test09XWinsWithTheSecondColumn stamp: 'IO 11/1/2020 18:44:54'!
PASSED!

!testRun: #TerniLapilliGameTest #test10XWinsWithTheThirdColumn stamp: 'IO 11/1/2020 18:44:54'!
PASSED!

!testRun: #TerniLapilliGameTest #test11XWinsWithTheFirstRow stamp: 'IO 11/1/2020 18:44:54'!
PASSED!

!testRun: #TerniLapilliGameTest #test12XWinsWithTheSecondRow stamp: 'IO 11/1/2020 18:44:54'!
PASSED!

!testRun: #TerniLapilliGameTest #test13XWinsWithTheThirdRow stamp: 'IO 11/1/2020 18:44:54'!
PASSED!

!testRun: #TerniLapilliGameTest #test14XWinsWithTheCrescentDiagonal stamp: 'IO 11/1/2020 18:44:54'!
PASSED!

!testRun: #TerniLapilliGameTest #test15XWinsWithTheDescendantDiagonal stamp: 'IO 11/1/2020 18:44:54'!
PASSED!

!testRun: #TerniLapilliGameTest #test16OWnis stamp: 'IO 11/1/2020 18:44:54'!
PASSED!

!testRun: #TerniLapilliGameTest #test17OCantStartPutting stamp: 'IO 11/1/2020 18:44:54'!
PASSED!

!testRun: #TerniLapilliGameTest #test18XCantPutTwiceInARow stamp: 'IO 11/1/2020 18:44:54'!
PASSED!

!testRun: #TerniLapilliGameTest #test19XCantMoveTwiceInARow stamp: 'IO 11/1/2020 18:44:54'!
PASSED!

!testRun: #TerniLapilliGameTest #test20OCantPutTwiceInARow stamp: 'IO 11/1/2020 18:44:54'!
PASSED!

!testRun: #TerniLapilliGameTest #test21OCantMoveTwiceInARow stamp: 'IO 11/1/2020 18:44:54'!
PASSED!

!testRun: #TerniLapilliGameTest #test22XCantMoveOnTheirFirstTurn stamp: 'IO 11/1/2020 18:44:54'!
PASSED!

!testRun: #TerniLapilliGameTest #test23XCantMoveOnTheirSecondTurn stamp: 'IO 11/1/2020 18:44:54'!
PASSED!

!testRun: #TerniLapilliGameTest #test24XCantMoveOnTheirThirdTurn stamp: 'IO 11/1/2020 18:44:54'!
PASSED!

!testRun: #TerniLapilliGameTest #test25OCantMoveOnTheirFirstTurn stamp: 'IO 11/1/2020 18:44:54'!
PASSED!

!testRun: #TerniLapilliGameTest #test26OCantMoveOnTheirSecondTurn stamp: 'IO 11/1/2020 18:44:54'!
PASSED!

!testRun: #TerniLapilliGameTest #test27OCantMoveOnTheirThirdTurn stamp: 'IO 11/1/2020 18:44:54'!
PASSED!

!testRun: #TerniLapilliGameTest #test28XCantPutAfterTheirThirdTurn stamp: 'IO 11/1/2020 18:44:54'!
PASSED!

!testRun: #TerniLapilliGameTest #test29OCantPutAfterTheirThirdTurn stamp: 'IO 11/1/2020 18:44:54'!
PASSED!

!testRun: #TerniLapilliGameTest #test30OCantPutAfterXWon stamp: 'IO 11/1/2020 18:44:54'!
PASSED!

!testRun: #TerniLapilliGameTest #test31OCantMoveAfterXWon stamp: 'IO 11/1/2020 18:44:54'!
PASSED!

!testRun: #TerniLapilliGameTest #test32XCantMoveAfterOWon stamp: 'IO 11/1/2020 18:44:54'!
PASSED!

!testRun: #TerniLapilliGameTest #test33XCantPutAfterOWon stamp: 'IO 11/1/2020 18:44:54'!
PASSED!

!testRun: #TerniLapilliGameTest #test34XCantPutInAnOccupiedSpace stamp: 'IO 11/1/2020 18:44:54'!
PASSED!

!testRun: #TerniLapilliGameTest #test35OCantPutInAnOccupiedSpace stamp: 'IO 11/1/2020 18:44:54'!
PASSED!

!testRun: #TerniLapilliGameTest #test36XCantMoveToAnOccupiedSpace stamp: 'IO 11/1/2020 18:44:54'!
PASSED!

!testRun: #TerniLapilliGameTest #test37OCantMoveToAnOccupiedSpace stamp: 'IO 11/1/2020 18:44:54'!
PASSED!

!testRun: #TerniLapilliGameTest #test38XCantPutOutsideTheBoardUnderXAxis stamp: 'IO 11/1/2020 18:44:54'!
PASSED!

!testRun: #TerniLapilliGameTest #test39XCantPutOutsideTheBoardAboveXAxis stamp: 'IO 11/1/2020 18:44:54'!
PASSED!

!testRun: #TerniLapilliGameTest #test40XCantPutOutsideTheBoardUnderNorAboveTheYAxis stamp: 'IO 11/1/2020 18:44:54'!
PASSED!

!testRun: #TerniLapilliGameTest #test41OCantPutOutsideTheBoard stamp: 'IO 11/1/2020 18:44:54'!
PASSED!

!testRun: #TerniLapilliGameTest #test42XCantMoveToOutsideTheBoard stamp: 'IO 11/1/2020 18:44:54'!
PASSED!

!testRun: #TerniLapilliGameTest #test43OCantMoveToOutsideTheBoard stamp: 'IO 11/1/2020 18:44:54'!
PASSED!

!testRun: #TerniLapilliGameTest #test44XCantMoveTokensThatDontBelongToThem stamp: 'IO 11/1/2020 18:44:54'!
PASSED!

!testRun: #TerniLapilliGameTest #test45OCantMoveTokensThatDontBelongToThem stamp: 'IO 11/1/2020 18:44:54'!
PASSED!

!testRun: #TerniLapilliGameTest #test46XCantMoveaTokenOutsideItsNeighbors stamp: 'IO 11/1/2020 18:44:54'!
PASSED!

!testRun: #TerniLapilliGameTest #test47OCantMoveATokenOutsideItsNeighbors stamp: 'IO 11/1/2020 18:44:54'!
PASSED!
!TerniLapilliPlayerTokens methodsFor: 'testing' stamp: 'IO 11/1/2020 18:46:04'!
hasTokenAt: aPosition

	"returns true if a token is placed in a given position"

	^tokens includes: aPosition.
! !
!TerniLapilliPlayerTokens methodsFor: 'as yet unclassified' stamp: 'IO 11/1/2020 18:46:04' prior: 50882888!
areInWinningPositionByDiagonal

	"return true if the tokens are in a winning position over a diagonal"

	^(tokens hasTokenAt: (1@1)) and: (
		((tokens hasTokenAt: (0@0)) and: (tokens hasTokenAt: (2@2))) or: (
		(tokens hasTokenAt: (2@0)) and: (tokens hasTokenAt: (0@2))
	)).
! !
!TerniLapilliPlayerTokens methodsFor: 'as yet unclassified' stamp: 'IO 11/1/2020 18:46:04' prior: 50893208!
validateIsLegalMoveFrom: sourcePosition to: destinationPosition

	"signal when a token cannot be moved from a given position to another"

	(
		(self hasTokenAt: sourcePosition) and:
		(sourcePosition eightNeighbors hasTokenAt: destinationPosition)
	) ifFalse: [^self error: TerniLapilliGame cannotMoveErrorMessage].

	self validateIsInBoard: destinationPosition withErrorMessage: TerniLapilliGame cannotMoveErrorMessage.
! !
!TerniLapilliGameState methodsFor: 'as yet unclassified' stamp: 'IO 11/1/2020 18:46:04' prior: 50888154!
hasXAt: aPosition

	"returns true if the current state has X's token placed at a given position"

	^xTokens hasTokenAt: aPosition.
! !
!TerniLapilliPlayerTokens methodsFor: 'as yet unclassified' stamp: 'IO 11/1/2020 18:46:04' prior: 50882877!
areInWinningPositionByRow: rowNumber

	"return true if the tokens are in a winning position over a given row"

	^(tokens hasTokenAt: (rowNumber@0)) and: (tokens hasTokenAt: (rowNumber@1)) and: (tokens hasTokenAt: (rowNumber@2)).
! !
!TerniLapilliGameState methodsFor: 'as yet unclassified' stamp: 'IO 11/1/2020 18:46:04' prior: 50888140!
hasOAt: aPosition

	"returns true if the current state has O's token placed at a given position"

	^oTokens hasTokenAt: aPosition.

! !
!TerniLapilliPlayerTokens methodsFor: 'as yet unclassified' stamp: 'IO 11/1/2020 18:46:04' prior: 50882900!
areInWinningPositionByColumn: columnNumber

	"return true if the tokens are in a winning position over a given column"

	^(tokens hasTokenAt: (0@columnNumber)) and: (tokens hasTokenAt: (1@columnNumber)) and: (tokens hasTokenAt: (2@columnNumber))! !
!TerniLapilliPlayerTokens methodsFor: 'as yet unclassified' stamp: 'IO 11/1/2020 18:46:04' prior: 50882927!
includes: aPosition

	"returns true if a token is placed in a given position"

	^tokens hasTokenAt: aPosition.
! !
!TerniLapilliPlayerTokens methodsFor: 'as yet unclassified' stamp: 'IO 11/1/2020 18:46:04' prior: 50893869!
hasTokenAt: aPosition

	"returns true if a token is placed in a given position"

	^tokens hasTokenAt: aPosition.
! !

!methodRemoval: TerniLapilliPlayerTokens #includes: stamp: 'IO 11/1/2020 18:46:04'!
includes: aPosition

	"returns true if a token is placed in a given position"

	^tokens hasTokenAt: aPosition.
!

!testRun: #TerniLapilliGameTest #test01XCanPutAToken stamp: 'IO 11/1/2020 18:46:10'!
ERROR!

!testRun: #TerniLapilliGameTest #test02puttingDoesNotAffectOtherPositions stamp: 'IO 11/1/2020 18:46:10'!
ERROR!

!testRun: #TerniLapilliGameTest #test03XCanPutInOtherPositions stamp: 'IO 11/1/2020 18:46:10'!
ERROR!

!testRun: #TerniLapilliGameTest #test04OCanPut stamp: 'IO 11/1/2020 18:46:10'!
ERROR!

!testRun: #TerniLapilliGameTest #test05XCanMove stamp: 'IO 11/1/2020 18:46:10'!
ERROR!

!testRun: #TerniLapilliGameTest #test06OCanMove stamp: 'IO 11/1/2020 18:46:10'!
ERROR!

!testRun: #TerniLapilliGameTest #test07XWinsWithTheFirstColumn stamp: 'IO 11/1/2020 18:46:10'!
ERROR!

!testRun: #TerniLapilliGameTest #test08XHasntWonYet stamp: 'IO 11/1/2020 18:46:10'!
ERROR!

!testRun: #TerniLapilliGameTest #test09XWinsWithTheSecondColumn stamp: 'IO 11/1/2020 18:46:10'!
ERROR!

!testRun: #TerniLapilliGameTest #test10XWinsWithTheThirdColumn stamp: 'IO 11/1/2020 18:46:10'!
ERROR!

!testRun: #TerniLapilliGameTest #test11XWinsWithTheFirstRow stamp: 'IO 11/1/2020 18:46:10'!
ERROR!

!testRun: #TerniLapilliGameTest #test12XWinsWithTheSecondRow stamp: 'IO 11/1/2020 18:46:10'!
ERROR!

!testRun: #TerniLapilliGameTest #test13XWinsWithTheThirdRow stamp: 'IO 11/1/2020 18:46:10'!
ERROR!

!testRun: #TerniLapilliGameTest #test14XWinsWithTheCrescentDiagonal stamp: 'IO 11/1/2020 18:46:10'!
ERROR!

!testRun: #TerniLapilliGameTest #test15XWinsWithTheDescendantDiagonal stamp: 'IO 11/1/2020 18:46:10'!
ERROR!

!testRun: #TerniLapilliGameTest #test16OWnis stamp: 'IO 11/1/2020 18:46:10'!
ERROR!

!testRun: #TerniLapilliGameTest #test17OCantStartPutting stamp: 'IO 11/1/2020 18:46:10'!
FAILURE!

!testRun: #TerniLapilliGameTest #test18XCantPutTwiceInARow stamp: 'IO 11/1/2020 18:46:10'!
ERROR!

!testRun: #TerniLapilliGameTest #test19XCantMoveTwiceInARow stamp: 'IO 11/1/2020 18:46:10'!
ERROR!

!testRun: #TerniLapilliGameTest #test20OCantPutTwiceInARow stamp: 'IO 11/1/2020 18:46:10'!
ERROR!

!testRun: #TerniLapilliGameTest #test21OCantMoveTwiceInARow stamp: 'IO 11/1/2020 18:46:10'!
ERROR!

!testRun: #TerniLapilliGameTest #test22XCantMoveOnTheirFirstTurn stamp: 'IO 11/1/2020 18:46:10'!
FAILURE!

!testRun: #TerniLapilliGameTest #test23XCantMoveOnTheirSecondTurn stamp: 'IO 11/1/2020 18:46:10'!
ERROR!

!testRun: #TerniLapilliGameTest #test24XCantMoveOnTheirThirdTurn stamp: 'IO 11/1/2020 18:46:10'!
ERROR!

!testRun: #TerniLapilliGameTest #test25OCantMoveOnTheirFirstTurn stamp: 'IO 11/1/2020 18:46:10'!
ERROR!

!testRun: #TerniLapilliGameTest #test26OCantMoveOnTheirSecondTurn stamp: 'IO 11/1/2020 18:46:10'!
ERROR!

!testRun: #TerniLapilliGameTest #test27OCantMoveOnTheirThirdTurn stamp: 'IO 11/1/2020 18:46:10'!
ERROR!

!testRun: #TerniLapilliGameTest #test28XCantPutAfterTheirThirdTurn stamp: 'IO 11/1/2020 18:46:10'!
ERROR!

!testRun: #TerniLapilliGameTest #test29OCantPutAfterTheirThirdTurn stamp: 'IO 11/1/2020 18:46:10'!
ERROR!

!testRun: #TerniLapilliGameTest #test30OCantPutAfterXWon stamp: 'IO 11/1/2020 18:46:10'!
ERROR!

!testRun: #TerniLapilliGameTest #test31OCantMoveAfterXWon stamp: 'IO 11/1/2020 18:46:10'!
ERROR!

!testRun: #TerniLapilliGameTest #test32XCantMoveAfterOWon stamp: 'IO 11/1/2020 18:46:10'!
ERROR!

!testRun: #TerniLapilliGameTest #test33XCantPutAfterOWon stamp: 'IO 11/1/2020 18:46:10'!
ERROR!

!testRun: #TerniLapilliGameTest #test34XCantPutInAnOccupiedSpace stamp: 'IO 11/1/2020 18:46:10'!
ERROR!

!testRun: #TerniLapilliGameTest #test35OCantPutInAnOccupiedSpace stamp: 'IO 11/1/2020 18:46:10'!
ERROR!

!testRun: #TerniLapilliGameTest #test36XCantMoveToAnOccupiedSpace stamp: 'IO 11/1/2020 18:46:10'!
ERROR!

!testRun: #TerniLapilliGameTest #test37OCantMoveToAnOccupiedSpace stamp: 'IO 11/1/2020 18:46:10'!
ERROR!

!testRun: #TerniLapilliGameTest #test38XCantPutOutsideTheBoardUnderXAxis stamp: 'IO 11/1/2020 18:46:10'!
FAILURE!

!testRun: #TerniLapilliGameTest #test39XCantPutOutsideTheBoardAboveXAxis stamp: 'IO 11/1/2020 18:46:10'!
FAILURE!

!testRun: #TerniLapilliGameTest #test40XCantPutOutsideTheBoardUnderNorAboveTheYAxis stamp: 'IO 11/1/2020 18:46:10'!
FAILURE!

!testRun: #TerniLapilliGameTest #test41OCantPutOutsideTheBoard stamp: 'IO 11/1/2020 18:46:10'!
ERROR!

!testRun: #TerniLapilliGameTest #test42XCantMoveToOutsideTheBoard stamp: 'IO 11/1/2020 18:46:10'!
ERROR!

!testRun: #TerniLapilliGameTest #test43OCantMoveToOutsideTheBoard stamp: 'IO 11/1/2020 18:46:10'!
ERROR!

!testRun: #TerniLapilliGameTest #test44XCantMoveTokensThatDontBelongToThem stamp: 'IO 11/1/2020 18:46:10'!
ERROR!

!testRun: #TerniLapilliGameTest #test45OCantMoveTokensThatDontBelongToThem stamp: 'IO 11/1/2020 18:46:10'!
ERROR!

!testRun: #TerniLapilliGameTest #test46XCantMoveaTokenOutsideItsNeighbors stamp: 'IO 11/1/2020 18:46:10'!
ERROR!

!testRun: #TerniLapilliGameTest #test47OCantMoveATokenOutsideItsNeighbors stamp: 'IO 11/1/2020 18:46:10'!
ERROR!
!TerniLapilliGame methodsFor: 'testing' stamp: 'IO 11/1/2020 18:46:32'!
includes: aPosition

	"returns true if a board position has a token placed or not"

	^(state hasOAt: aPosition) or: (state hasXAt: aPosition).
! !
!TerniLapilliPlayerTokens methodsFor: 'testing' stamp: 'IO 11/1/2020 18:46:32'!
includes: aPosition

	"returns true if a token is placed in a given position"

	^tokens hasTokenAt: aPosition.
! !
!TerniLapilliPlayerTokens methodsFor: 'as yet unclassified' stamp: 'IO 11/1/2020 18:46:32' prior: 50893952!
hasTokenAt: aPosition

	"returns true if a token is placed in a given position"

	^tokens includes: aPosition.
! !
!TerniLapilliPlayerTokens methodsFor: 'as yet unclassified' stamp: 'IO 11/1/2020 18:46:32' prior: 50893933!
areInWinningPositionByColumn: columnNumber

	"return true if the tokens are in a winning position over a given column"

	^(tokens includes: (0@columnNumber)) and: (tokens includes: (1@columnNumber)) and: (tokens includes: (2@columnNumber))! !
!TerniLapilliGame methodsFor: 'as yet unclassified' stamp: 'IO 11/1/2020 18:46:32' prior: 50891501!
putXAt: aPosition

	"put an O token in a given position of the board"

	(self includes: aPosition ) ifTrue:[^self error: TerniLapilliGame cannotPutErrorMessage].
	state := state putXAt: aPosition.
! !
!TerniLapilliGameState methodsFor: 'as yet unclassified' stamp: 'IO 11/1/2020 18:46:32' prior: 50893906!
hasXAt: aPosition

	"returns true if the current state has X's token placed at a given position"

	^xTokens includes: aPosition.
! !
!TerniLapilliGameState methodsFor: 'as yet unclassified' stamp: 'IO 11/1/2020 18:46:32' prior: 50893925!
hasOAt: aPosition

	"returns true if the current state has O's token placed at a given position"

	^oTokens includes: aPosition.

! !
!TerniLapilliPlayerTokens methodsFor: 'as yet unclassified' stamp: 'IO 11/1/2020 18:46:32' prior: 50893889!
validateIsLegalMoveFrom: sourcePosition to: destinationPosition

	"signal when a token cannot be moved from a given position to another"

	(
		(self includes: sourcePosition) and:
		(sourcePosition eightNeighbors includes: destinationPosition)
	) ifFalse: [^self error: TerniLapilliGame cannotMoveErrorMessage].

	self validateIsInBoard: destinationPosition withErrorMessage: TerniLapilliGame cannotMoveErrorMessage.
! !
!TerniLapilliGame methodsFor: 'as yet unclassified' stamp: 'IO 11/1/2020 18:46:32' prior: 50892779!
moveXFrom: aPosition to: aDestination

	"move O's token from a given position of the board to another given position"

	(self includes: aDestination ) ifTrue:[^self error: TerniLapilliGame cannotMoveErrorMessage].
	state := state moveXFrom: aPosition to: aDestination.
	
	
! !
!TerniLapilliGame methodsFor: 'as yet unclassified' stamp: 'IO 11/1/2020 18:46:32' prior: 50892754!
moveOFrom: aPosition to: aDestination

	"move O's token from a given position of the board to another given position"

	(self includes: aDestination ) ifTrue: [^self error: TerniLapilliGame cannotMoveErrorMessage].
	state := state moveOFrom: aPosition to: aDestination.
! !
!TerniLapilliPlayerTokens methodsFor: 'as yet unclassified' stamp: 'IO 11/1/2020 18:46:32' prior: 50893914!
areInWinningPositionByRow: rowNumber

	"return true if the tokens are in a winning position over a given row"

	^(tokens includes: (rowNumber@0)) and: (tokens includes: (rowNumber@1)) and: (tokens includes: (rowNumber@2)).
! !
!TerniLapilliPlayerTokens methodsFor: 'as yet unclassified' stamp: 'IO 11/1/2020 18:46:32' prior: 50893876!
areInWinningPositionByDiagonal

	"return true if the tokens are in a winning position over a diagonal"

	^(tokens includes: (1@1)) and: (
		((tokens includes: (0@0)) and: (tokens includes: (2@2))) or: (
		(tokens includes: (2@0)) and: (tokens includes: (0@2))
	)).
! !
!TerniLapilliGame methodsFor: 'as yet unclassified' stamp: 'IO 11/1/2020 18:46:32' prior: 50890482!
putOAt: aPosition

	"put an O token in a given position of the board"

	(self includes: aPosition ) ifTrue:[^self error: TerniLapilliGame cannotPutErrorMessage].
	state := state putOAt: aPosition.
! !
!TerniLapilliPlayerTokens methodsFor: 'as yet unclassified' stamp: 'IO 11/1/2020 18:46:32' prior: 50894125!
includes: aPosition

	"returns true if a token is placed in a given position"

	^tokens includes: aPosition.
! !

!methodRemoval: TerniLapilliGame #hasTokenAt: stamp: 'IO 11/1/2020 18:46:32'!
hasTokenAt: aPosition

	"returns true if a board position has a token placed or not"

	^(state hasOAt: aPosition) or: (state hasXAt: aPosition).
!

!methodRemoval: TerniLapilliPlayerTokens #hasTokenAt: stamp: 'IO 11/1/2020 18:46:32'!
hasTokenAt: aPosition

	"returns true if a token is placed in a given position"

	^tokens includes: aPosition.
!

!testRun: #TerniLapilliGameTest #test01XCanPutAToken stamp: 'IO 11/1/2020 18:46:36'!
PASSED!

!testRun: #TerniLapilliGameTest #test02puttingDoesNotAffectOtherPositions stamp: 'IO 11/1/2020 18:46:36'!
PASSED!

!testRun: #TerniLapilliGameTest #test03XCanPutInOtherPositions stamp: 'IO 11/1/2020 18:46:36'!
PASSED!

!testRun: #TerniLapilliGameTest #test04OCanPut stamp: 'IO 11/1/2020 18:46:36'!
PASSED!

!testRun: #TerniLapilliGameTest #test05XCanMove stamp: 'IO 11/1/2020 18:46:36'!
PASSED!

!testRun: #TerniLapilliGameTest #test06OCanMove stamp: 'IO 11/1/2020 18:46:36'!
PASSED!

!testRun: #TerniLapilliGameTest #test07XWinsWithTheFirstColumn stamp: 'IO 11/1/2020 18:46:36'!
PASSED!

!testRun: #TerniLapilliGameTest #test08XHasntWonYet stamp: 'IO 11/1/2020 18:46:36'!
PASSED!

!testRun: #TerniLapilliGameTest #test09XWinsWithTheSecondColumn stamp: 'IO 11/1/2020 18:46:36'!
PASSED!

!testRun: #TerniLapilliGameTest #test10XWinsWithTheThirdColumn stamp: 'IO 11/1/2020 18:46:36'!
PASSED!

!testRun: #TerniLapilliGameTest #test11XWinsWithTheFirstRow stamp: 'IO 11/1/2020 18:46:36'!
PASSED!

!testRun: #TerniLapilliGameTest #test12XWinsWithTheSecondRow stamp: 'IO 11/1/2020 18:46:36'!
PASSED!

!testRun: #TerniLapilliGameTest #test13XWinsWithTheThirdRow stamp: 'IO 11/1/2020 18:46:36'!
PASSED!

!testRun: #TerniLapilliGameTest #test14XWinsWithTheCrescentDiagonal stamp: 'IO 11/1/2020 18:46:36'!
PASSED!

!testRun: #TerniLapilliGameTest #test15XWinsWithTheDescendantDiagonal stamp: 'IO 11/1/2020 18:46:36'!
PASSED!

!testRun: #TerniLapilliGameTest #test16OWnis stamp: 'IO 11/1/2020 18:46:36'!
PASSED!

!testRun: #TerniLapilliGameTest #test17OCantStartPutting stamp: 'IO 11/1/2020 18:46:36'!
PASSED!

!testRun: #TerniLapilliGameTest #test18XCantPutTwiceInARow stamp: 'IO 11/1/2020 18:46:36'!
PASSED!

!testRun: #TerniLapilliGameTest #test19XCantMoveTwiceInARow stamp: 'IO 11/1/2020 18:46:36'!
PASSED!

!testRun: #TerniLapilliGameTest #test20OCantPutTwiceInARow stamp: 'IO 11/1/2020 18:46:36'!
PASSED!

!testRun: #TerniLapilliGameTest #test21OCantMoveTwiceInARow stamp: 'IO 11/1/2020 18:46:36'!
PASSED!

!testRun: #TerniLapilliGameTest #test22XCantMoveOnTheirFirstTurn stamp: 'IO 11/1/2020 18:46:36'!
PASSED!

!testRun: #TerniLapilliGameTest #test23XCantMoveOnTheirSecondTurn stamp: 'IO 11/1/2020 18:46:36'!
PASSED!

!testRun: #TerniLapilliGameTest #test24XCantMoveOnTheirThirdTurn stamp: 'IO 11/1/2020 18:46:36'!
PASSED!

!testRun: #TerniLapilliGameTest #test25OCantMoveOnTheirFirstTurn stamp: 'IO 11/1/2020 18:46:36'!
PASSED!

!testRun: #TerniLapilliGameTest #test26OCantMoveOnTheirSecondTurn stamp: 'IO 11/1/2020 18:46:36'!
PASSED!

!testRun: #TerniLapilliGameTest #test27OCantMoveOnTheirThirdTurn stamp: 'IO 11/1/2020 18:46:36'!
PASSED!

!testRun: #TerniLapilliGameTest #test28XCantPutAfterTheirThirdTurn stamp: 'IO 11/1/2020 18:46:36'!
PASSED!

!testRun: #TerniLapilliGameTest #test29OCantPutAfterTheirThirdTurn stamp: 'IO 11/1/2020 18:46:36'!
PASSED!

!testRun: #TerniLapilliGameTest #test30OCantPutAfterXWon stamp: 'IO 11/1/2020 18:46:36'!
PASSED!

!testRun: #TerniLapilliGameTest #test31OCantMoveAfterXWon stamp: 'IO 11/1/2020 18:46:36'!
PASSED!

!testRun: #TerniLapilliGameTest #test32XCantMoveAfterOWon stamp: 'IO 11/1/2020 18:46:36'!
PASSED!

!testRun: #TerniLapilliGameTest #test33XCantPutAfterOWon stamp: 'IO 11/1/2020 18:46:36'!
PASSED!

!testRun: #TerniLapilliGameTest #test34XCantPutInAnOccupiedSpace stamp: 'IO 11/1/2020 18:46:36'!
PASSED!

!testRun: #TerniLapilliGameTest #test35OCantPutInAnOccupiedSpace stamp: 'IO 11/1/2020 18:46:36'!
PASSED!

!testRun: #TerniLapilliGameTest #test36XCantMoveToAnOccupiedSpace stamp: 'IO 11/1/2020 18:46:36'!
PASSED!

!testRun: #TerniLapilliGameTest #test37OCantMoveToAnOccupiedSpace stamp: 'IO 11/1/2020 18:46:36'!
PASSED!

!testRun: #TerniLapilliGameTest #test38XCantPutOutsideTheBoardUnderXAxis stamp: 'IO 11/1/2020 18:46:36'!
PASSED!

!testRun: #TerniLapilliGameTest #test39XCantPutOutsideTheBoardAboveXAxis stamp: 'IO 11/1/2020 18:46:36'!
PASSED!

!testRun: #TerniLapilliGameTest #test40XCantPutOutsideTheBoardUnderNorAboveTheYAxis stamp: 'IO 11/1/2020 18:46:36'!
PASSED!

!testRun: #TerniLapilliGameTest #test41OCantPutOutsideTheBoard stamp: 'IO 11/1/2020 18:46:36'!
PASSED!

!testRun: #TerniLapilliGameTest #test42XCantMoveToOutsideTheBoard stamp: 'IO 11/1/2020 18:46:36'!
PASSED!

!testRun: #TerniLapilliGameTest #test43OCantMoveToOutsideTheBoard stamp: 'IO 11/1/2020 18:46:36'!
PASSED!

!testRun: #TerniLapilliGameTest #test44XCantMoveTokensThatDontBelongToThem stamp: 'IO 11/1/2020 18:46:36'!
PASSED!

!testRun: #TerniLapilliGameTest #test45OCantMoveTokensThatDontBelongToThem stamp: 'IO 11/1/2020 18:46:36'!
PASSED!

!testRun: #TerniLapilliGameTest #test46XCantMoveaTokenOutsideItsNeighbors stamp: 'IO 11/1/2020 18:46:36'!
PASSED!

!testRun: #TerniLapilliGameTest #test47OCantMoveATokenOutsideItsNeighbors stamp: 'IO 11/1/2020 18:46:36'!
PASSED!
!TerniLapilliGame methodsFor: 'testing' stamp: 'IO 11/1/2020 18:47:35'!
hasTokenAt: aPosition

	"returns true if a board position has a token placed or not"

	^(state hasOAt: aPosition) or: (state hasXAt: aPosition).
! !
!TerniLapilliPlayerTokens methodsFor: 'testing' stamp: 'IO 11/1/2020 18:47:35'!
hasTokenAt: aPosition

	"returns true if a token is placed in a given position"

	^tokens includes: aPosition.
! !
!TerniLapilliGameState methodsFor: 'as yet unclassified' stamp: 'IO 11/1/2020 18:47:35' prior: 50894168!
hasOAt: aPosition

	"returns true if the current state has O's token placed at a given position"

	^oTokens hasTokenAt: aPosition.

! !
!TerniLapilliPlayerTokens methodsFor: 'as yet unclassified' stamp: 'IO 11/1/2020 18:47:35' prior: 50894217!
areInWinningPositionByRow: rowNumber

	"return true if the tokens are in a winning position over a given row"

	^(tokens hasTokenAt: (rowNumber@0)) and: (tokens hasTokenAt: (rowNumber@1)) and: (tokens hasTokenAt: (rowNumber@2)).
! !
!TerniLapilliPlayerTokens methodsFor: 'as yet unclassified' stamp: 'IO 11/1/2020 18:47:35' prior: 50894228!
areInWinningPositionByDiagonal

	"return true if the tokens are in a winning position over a diagonal"

	^(tokens hasTokenAt: (1@1)) and: (
		((tokens hasTokenAt: (0@0)) and: (tokens hasTokenAt: (2@2))) or: (
		(tokens hasTokenAt: (2@0)) and: (tokens hasTokenAt: (0@2))
	)).
! !
!TerniLapilliGame methodsFor: 'as yet unclassified' stamp: 'IO 11/1/2020 18:47:35' prior: 50894240!
putOAt: aPosition

	"put an O token in a given position of the board"

	(self hasTokenAt: aPosition ) ifTrue:[^self error: TerniLapilliGame cannotPutErrorMessage].
	state := state putOAt: aPosition.
! !
!TerniLapilliGame methodsFor: 'as yet unclassified' stamp: 'IO 11/1/2020 18:47:35' prior: 50894205!
moveOFrom: aPosition to: aDestination

	"move O's token from a given position of the board to another given position"

	(self hasTokenAt: aDestination ) ifTrue: [^self error: TerniLapilliGame cannotMoveErrorMessage].
	state := state moveOFrom: aPosition to: aDestination.
! !
!TerniLapilliPlayerTokens methodsFor: 'as yet unclassified' stamp: 'IO 11/1/2020 18:47:35' prior: 50894250!
includes: aPosition

	"returns true if a token is placed in a given position"

	^tokens hasTokenAt: aPosition.
! !
!TerniLapilliGame methodsFor: 'as yet unclassified' stamp: 'IO 11/1/2020 18:47:35' prior: 50894193!
moveXFrom: aPosition to: aDestination

	"move O's token from a given position of the board to another given position"

	(self hasTokenAt: aDestination ) ifTrue:[^self error: TerniLapilliGame cannotMoveErrorMessage].
	state := state moveXFrom: aPosition to: aDestination.
	
	
! !
!TerniLapilliPlayerTokens methodsFor: 'as yet unclassified' stamp: 'IO 11/1/2020 18:47:35' prior: 50894139!
areInWinningPositionByColumn: columnNumber

	"return true if the tokens are in a winning position over a given column"

	^(tokens hasTokenAt: (0@columnNumber)) and: (tokens hasTokenAt: (1@columnNumber)) and: (tokens hasTokenAt: (2@columnNumber))! !
!TerniLapilliGameState methodsFor: 'as yet unclassified' stamp: 'IO 11/1/2020 18:47:35' prior: 50894160!
hasXAt: aPosition

	"returns true if the current state has X's token placed at a given position"

	^xTokens hasTokenAt: aPosition.
! !
!TerniLapilliPlayerTokens methodsFor: 'as yet unclassified' stamp: 'IO 11/1/2020 18:47:35' prior: 50894176!
validateIsLegalMoveFrom: sourcePosition to: destinationPosition

	"signal when a token cannot be moved from a given position to another"

	(
		(self hasTokenAt: sourcePosition) and:
		(sourcePosition eightNeighbors hasTokenAt: destinationPosition)
	) ifFalse: [^self error: TerniLapilliGame cannotMoveErrorMessage].

	self validateIsInBoard: destinationPosition withErrorMessage: TerniLapilliGame cannotMoveErrorMessage.
! !
!TerniLapilliGame methodsFor: 'as yet unclassified' stamp: 'IO 11/1/2020 18:47:35' prior: 50894150!
putXAt: aPosition

	"put an O token in a given position of the board"

	(self hasTokenAt: aPosition ) ifTrue:[^self error: TerniLapilliGame cannotPutErrorMessage].
	state := state putXAt: aPosition.
! !
!TerniLapilliPlayerTokens methodsFor: 'as yet unclassified' stamp: 'IO 11/1/2020 18:47:35' prior: 50894431!
hasTokenAt: aPosition

	"returns true if a token is placed in a given position"

	^tokens hasTokenAt: aPosition.
! !

!methodRemoval: TerniLapilliGame #includes: stamp: 'IO 11/1/2020 18:47:35'!
includes: aPosition

	"returns true if a board position has a token placed or not"

	^(state hasOAt: aPosition) or: (state hasXAt: aPosition).
!

!methodRemoval: TerniLapilliPlayerTokens #includes: stamp: 'IO 11/1/2020 18:47:35'!
includes: aPosition

	"returns true if a token is placed in a given position"

	^tokens hasTokenAt: aPosition.
!

!testRun: #TerniLapilliGameTest #test01XCanPutAToken stamp: 'IO 11/1/2020 18:47:41'!
ERROR!

!testRun: #TerniLapilliGameTest #test02puttingDoesNotAffectOtherPositions stamp: 'IO 11/1/2020 18:47:41'!
ERROR!

!testRun: #TerniLapilliGameTest #test03XCanPutInOtherPositions stamp: 'IO 11/1/2020 18:47:41'!
ERROR!

!testRun: #TerniLapilliGameTest #test04OCanPut stamp: 'IO 11/1/2020 18:47:41'!
ERROR!

!testRun: #TerniLapilliGameTest #test05XCanMove stamp: 'IO 11/1/2020 18:47:41'!
ERROR!

!testRun: #TerniLapilliGameTest #test06OCanMove stamp: 'IO 11/1/2020 18:47:41'!
ERROR!

!testRun: #TerniLapilliGameTest #test07XWinsWithTheFirstColumn stamp: 'IO 11/1/2020 18:47:41'!
ERROR!

!testRun: #TerniLapilliGameTest #test08XHasntWonYet stamp: 'IO 11/1/2020 18:47:41'!
ERROR!

!testRun: #TerniLapilliGameTest #test09XWinsWithTheSecondColumn stamp: 'IO 11/1/2020 18:47:41'!
ERROR!

!testRun: #TerniLapilliGameTest #test10XWinsWithTheThirdColumn stamp: 'IO 11/1/2020 18:47:41'!
ERROR!

!testRun: #TerniLapilliGameTest #test11XWinsWithTheFirstRow stamp: 'IO 11/1/2020 18:47:41'!
ERROR!

!testRun: #TerniLapilliGameTest #test12XWinsWithTheSecondRow stamp: 'IO 11/1/2020 18:47:41'!
ERROR!

!testRun: #TerniLapilliGameTest #test13XWinsWithTheThirdRow stamp: 'IO 11/1/2020 18:47:41'!
ERROR!

!testRun: #TerniLapilliGameTest #test14XWinsWithTheCrescentDiagonal stamp: 'IO 11/1/2020 18:47:41'!
ERROR!

!testRun: #TerniLapilliGameTest #test15XWinsWithTheDescendantDiagonal stamp: 'IO 11/1/2020 18:47:41'!
ERROR!

!testRun: #TerniLapilliGameTest #test16OWnis stamp: 'IO 11/1/2020 18:47:41'!
ERROR!

!testRun: #TerniLapilliGameTest #test17OCantStartPutting stamp: 'IO 11/1/2020 18:47:41'!
FAILURE!

!testRun: #TerniLapilliGameTest #test18XCantPutTwiceInARow stamp: 'IO 11/1/2020 18:47:41'!
ERROR!

!testRun: #TerniLapilliGameTest #test19XCantMoveTwiceInARow stamp: 'IO 11/1/2020 18:47:41'!
ERROR!

!testRun: #TerniLapilliGameTest #test20OCantPutTwiceInARow stamp: 'IO 11/1/2020 18:47:41'!
ERROR!

!testRun: #TerniLapilliGameTest #test21OCantMoveTwiceInARow stamp: 'IO 11/1/2020 18:47:41'!
ERROR!

!testRun: #TerniLapilliGameTest #test22XCantMoveOnTheirFirstTurn stamp: 'IO 11/1/2020 18:47:41'!
FAILURE!

!testRun: #TerniLapilliGameTest #test23XCantMoveOnTheirSecondTurn stamp: 'IO 11/1/2020 18:47:41'!
ERROR!

!testRun: #TerniLapilliGameTest #test24XCantMoveOnTheirThirdTurn stamp: 'IO 11/1/2020 18:47:41'!
ERROR!

!testRun: #TerniLapilliGameTest #test25OCantMoveOnTheirFirstTurn stamp: 'IO 11/1/2020 18:47:41'!
ERROR!

!testRun: #TerniLapilliGameTest #test26OCantMoveOnTheirSecondTurn stamp: 'IO 11/1/2020 18:47:41'!
ERROR!

!testRun: #TerniLapilliGameTest #test27OCantMoveOnTheirThirdTurn stamp: 'IO 11/1/2020 18:47:41'!
ERROR!

!testRun: #TerniLapilliGameTest #test28XCantPutAfterTheirThirdTurn stamp: 'IO 11/1/2020 18:47:41'!
ERROR!

!testRun: #TerniLapilliGameTest #test29OCantPutAfterTheirThirdTurn stamp: 'IO 11/1/2020 18:47:41'!
ERROR!

!testRun: #TerniLapilliGameTest #test30OCantPutAfterXWon stamp: 'IO 11/1/2020 18:47:41'!
ERROR!

!testRun: #TerniLapilliGameTest #test31OCantMoveAfterXWon stamp: 'IO 11/1/2020 18:47:41'!
ERROR!

!testRun: #TerniLapilliGameTest #test32XCantMoveAfterOWon stamp: 'IO 11/1/2020 18:47:41'!
ERROR!

!testRun: #TerniLapilliGameTest #test33XCantPutAfterOWon stamp: 'IO 11/1/2020 18:47:41'!
ERROR!

!testRun: #TerniLapilliGameTest #test34XCantPutInAnOccupiedSpace stamp: 'IO 11/1/2020 18:47:41'!
ERROR!

!testRun: #TerniLapilliGameTest #test35OCantPutInAnOccupiedSpace stamp: 'IO 11/1/2020 18:47:41'!
ERROR!

!testRun: #TerniLapilliGameTest #test36XCantMoveToAnOccupiedSpace stamp: 'IO 11/1/2020 18:47:41'!
ERROR!

!testRun: #TerniLapilliGameTest #test37OCantMoveToAnOccupiedSpace stamp: 'IO 11/1/2020 18:47:41'!
ERROR!

!testRun: #TerniLapilliGameTest #test38XCantPutOutsideTheBoardUnderXAxis stamp: 'IO 11/1/2020 18:47:41'!
FAILURE!

!testRun: #TerniLapilliGameTest #test39XCantPutOutsideTheBoardAboveXAxis stamp: 'IO 11/1/2020 18:47:41'!
FAILURE!

!testRun: #TerniLapilliGameTest #test40XCantPutOutsideTheBoardUnderNorAboveTheYAxis stamp: 'IO 11/1/2020 18:47:41'!
FAILURE!

!testRun: #TerniLapilliGameTest #test41OCantPutOutsideTheBoard stamp: 'IO 11/1/2020 18:47:41'!
ERROR!

!testRun: #TerniLapilliGameTest #test42XCantMoveToOutsideTheBoard stamp: 'IO 11/1/2020 18:47:41'!
ERROR!

!testRun: #TerniLapilliGameTest #test43OCantMoveToOutsideTheBoard stamp: 'IO 11/1/2020 18:47:41'!
ERROR!

!testRun: #TerniLapilliGameTest #test44XCantMoveTokensThatDontBelongToThem stamp: 'IO 11/1/2020 18:47:41'!
ERROR!

!testRun: #TerniLapilliGameTest #test45OCantMoveTokensThatDontBelongToThem stamp: 'IO 11/1/2020 18:47:41'!
ERROR!

!testRun: #TerniLapilliGameTest #test46XCantMoveaTokenOutsideItsNeighbors stamp: 'IO 11/1/2020 18:47:41'!
ERROR!

!testRun: #TerniLapilliGameTest #test47OCantMoveATokenOutsideItsNeighbors stamp: 'IO 11/1/2020 18:47:41'!
ERROR!

!testRun: #TerniLapilliGameTest #test01XCanPutAToken stamp: 'IO 11/1/2020 18:48:16'!
ERROR!

!testRun: #TerniLapilliGameTest #test02puttingDoesNotAffectOtherPositions stamp: 'IO 11/1/2020 18:48:16'!
ERROR!

!testRun: #TerniLapilliGameTest #test03XCanPutInOtherPositions stamp: 'IO 11/1/2020 18:48:16'!
ERROR!

!testRun: #TerniLapilliGameTest #test04OCanPut stamp: 'IO 11/1/2020 18:48:16'!
ERROR!

!testRun: #TerniLapilliGameTest #test05XCanMove stamp: 'IO 11/1/2020 18:48:16'!
ERROR!

!testRun: #TerniLapilliGameTest #test06OCanMove stamp: 'IO 11/1/2020 18:48:16'!
ERROR!

!testRun: #TerniLapilliGameTest #test07XWinsWithTheFirstColumn stamp: 'IO 11/1/2020 18:48:16'!
ERROR!

!testRun: #TerniLapilliGameTest #test08XHasntWonYet stamp: 'IO 11/1/2020 18:48:16'!
ERROR!

!testRun: #TerniLapilliGameTest #test09XWinsWithTheSecondColumn stamp: 'IO 11/1/2020 18:48:16'!
ERROR!

!testRun: #TerniLapilliGameTest #test10XWinsWithTheThirdColumn stamp: 'IO 11/1/2020 18:48:16'!
ERROR!

!testRun: #TerniLapilliGameTest #test11XWinsWithTheFirstRow stamp: 'IO 11/1/2020 18:48:16'!
ERROR!

!testRun: #TerniLapilliGameTest #test12XWinsWithTheSecondRow stamp: 'IO 11/1/2020 18:48:16'!
ERROR!

!testRun: #TerniLapilliGameTest #test13XWinsWithTheThirdRow stamp: 'IO 11/1/2020 18:48:16'!
ERROR!

!testRun: #TerniLapilliGameTest #test14XWinsWithTheCrescentDiagonal stamp: 'IO 11/1/2020 18:48:16'!
ERROR!

!testRun: #TerniLapilliGameTest #test15XWinsWithTheDescendantDiagonal stamp: 'IO 11/1/2020 18:48:16'!
ERROR!

!testRun: #TerniLapilliGameTest #test16OWnis stamp: 'IO 11/1/2020 18:48:16'!
ERROR!

!testRun: #TerniLapilliGameTest #test17OCantStartPutting stamp: 'IO 11/1/2020 18:48:16'!
FAILURE!

!testRun: #TerniLapilliGameTest #test18XCantPutTwiceInARow stamp: 'IO 11/1/2020 18:48:16'!
ERROR!

!testRun: #TerniLapilliGameTest #test19XCantMoveTwiceInARow stamp: 'IO 11/1/2020 18:48:16'!
ERROR!

!testRun: #TerniLapilliGameTest #test20OCantPutTwiceInARow stamp: 'IO 11/1/2020 18:48:16'!
ERROR!

!testRun: #TerniLapilliGameTest #test21OCantMoveTwiceInARow stamp: 'IO 11/1/2020 18:48:16'!
ERROR!

!testRun: #TerniLapilliGameTest #test22XCantMoveOnTheirFirstTurn stamp: 'IO 11/1/2020 18:48:16'!
FAILURE!

!testRun: #TerniLapilliGameTest #test23XCantMoveOnTheirSecondTurn stamp: 'IO 11/1/2020 18:48:16'!
ERROR!

!testRun: #TerniLapilliGameTest #test24XCantMoveOnTheirThirdTurn stamp: 'IO 11/1/2020 18:48:16'!
ERROR!

!testRun: #TerniLapilliGameTest #test25OCantMoveOnTheirFirstTurn stamp: 'IO 11/1/2020 18:48:17'!
ERROR!

!testRun: #TerniLapilliGameTest #test26OCantMoveOnTheirSecondTurn stamp: 'IO 11/1/2020 18:48:17'!
ERROR!

!testRun: #TerniLapilliGameTest #test27OCantMoveOnTheirThirdTurn stamp: 'IO 11/1/2020 18:48:17'!
ERROR!

!testRun: #TerniLapilliGameTest #test28XCantPutAfterTheirThirdTurn stamp: 'IO 11/1/2020 18:48:17'!
ERROR!

!testRun: #TerniLapilliGameTest #test29OCantPutAfterTheirThirdTurn stamp: 'IO 11/1/2020 18:48:17'!
ERROR!

!testRun: #TerniLapilliGameTest #test30OCantPutAfterXWon stamp: 'IO 11/1/2020 18:48:17'!
ERROR!

!testRun: #TerniLapilliGameTest #test31OCantMoveAfterXWon stamp: 'IO 11/1/2020 18:48:17'!
ERROR!

!testRun: #TerniLapilliGameTest #test32XCantMoveAfterOWon stamp: 'IO 11/1/2020 18:48:17'!
ERROR!

!testRun: #TerniLapilliGameTest #test33XCantPutAfterOWon stamp: 'IO 11/1/2020 18:48:17'!
ERROR!

!testRun: #TerniLapilliGameTest #test34XCantPutInAnOccupiedSpace stamp: 'IO 11/1/2020 18:48:17'!
ERROR!

!testRun: #TerniLapilliGameTest #test35OCantPutInAnOccupiedSpace stamp: 'IO 11/1/2020 18:48:17'!
ERROR!

!testRun: #TerniLapilliGameTest #test36XCantMoveToAnOccupiedSpace stamp: 'IO 11/1/2020 18:48:17'!
ERROR!

!testRun: #TerniLapilliGameTest #test37OCantMoveToAnOccupiedSpace stamp: 'IO 11/1/2020 18:48:17'!
ERROR!

!testRun: #TerniLapilliGameTest #test38XCantPutOutsideTheBoardUnderXAxis stamp: 'IO 11/1/2020 18:48:17'!
FAILURE!

!testRun: #TerniLapilliGameTest #test39XCantPutOutsideTheBoardAboveXAxis stamp: 'IO 11/1/2020 18:48:17'!
FAILURE!

!testRun: #TerniLapilliGameTest #test40XCantPutOutsideTheBoardUnderNorAboveTheYAxis stamp: 'IO 11/1/2020 18:48:17'!
FAILURE!

!testRun: #TerniLapilliGameTest #test41OCantPutOutsideTheBoard stamp: 'IO 11/1/2020 18:48:17'!
ERROR!

!testRun: #TerniLapilliGameTest #test42XCantMoveToOutsideTheBoard stamp: 'IO 11/1/2020 18:48:17'!
ERROR!

!testRun: #TerniLapilliGameTest #test43OCantMoveToOutsideTheBoard stamp: 'IO 11/1/2020 18:48:17'!
ERROR!

!testRun: #TerniLapilliGameTest #test44XCantMoveTokensThatDontBelongToThem stamp: 'IO 11/1/2020 18:48:17'!
ERROR!

!testRun: #TerniLapilliGameTest #test45OCantMoveTokensThatDontBelongToThem stamp: 'IO 11/1/2020 18:48:17'!
ERROR!

!testRun: #TerniLapilliGameTest #test46XCantMoveaTokenOutsideItsNeighbors stamp: 'IO 11/1/2020 18:48:17'!
ERROR!

!testRun: #TerniLapilliGameTest #test47OCantMoveATokenOutsideItsNeighbors stamp: 'IO 11/1/2020 18:48:17'!
ERROR!

!testRun: #TerniLapilliGameTest #test01XCanPutAToken stamp: 'IO 11/1/2020 18:48:23'!
ERROR!
!TerniLapilliPlayerTokens methodsFor: 'testing' stamp: 'IO 11/1/2020 18:49:06' prior: 50894558!
hasTokenAt: aPosition

	"returns true if a token is placed in a given position"

	^tokens has: aPosition.
! !

!testRun: #TerniLapilliGameTest #test01XCanPutAToken stamp: 'IO 11/1/2020 18:49:11'!
ERROR!

!testRun: #TerniLapilliGameTest #test02puttingDoesNotAffectOtherPositions stamp: 'IO 11/1/2020 18:49:11'!
ERROR!

!testRun: #TerniLapilliGameTest #test03XCanPutInOtherPositions stamp: 'IO 11/1/2020 18:49:11'!
ERROR!

!testRun: #TerniLapilliGameTest #test04OCanPut stamp: 'IO 11/1/2020 18:49:11'!
ERROR!

!testRun: #TerniLapilliGameTest #test05XCanMove stamp: 'IO 11/1/2020 18:49:11'!
ERROR!

!testRun: #TerniLapilliGameTest #test06OCanMove stamp: 'IO 11/1/2020 18:49:11'!
ERROR!

!testRun: #TerniLapilliGameTest #test07XWinsWithTheFirstColumn stamp: 'IO 11/1/2020 18:49:11'!
ERROR!

!testRun: #TerniLapilliGameTest #test08XHasntWonYet stamp: 'IO 11/1/2020 18:49:11'!
ERROR!

!testRun: #TerniLapilliGameTest #test09XWinsWithTheSecondColumn stamp: 'IO 11/1/2020 18:49:11'!
ERROR!

!testRun: #TerniLapilliGameTest #test10XWinsWithTheThirdColumn stamp: 'IO 11/1/2020 18:49:11'!
ERROR!

!testRun: #TerniLapilliGameTest #test11XWinsWithTheFirstRow stamp: 'IO 11/1/2020 18:49:11'!
ERROR!

!testRun: #TerniLapilliGameTest #test12XWinsWithTheSecondRow stamp: 'IO 11/1/2020 18:49:11'!
ERROR!

!testRun: #TerniLapilliGameTest #test13XWinsWithTheThirdRow stamp: 'IO 11/1/2020 18:49:11'!
ERROR!

!testRun: #TerniLapilliGameTest #test14XWinsWithTheCrescentDiagonal stamp: 'IO 11/1/2020 18:49:11'!
ERROR!

!testRun: #TerniLapilliGameTest #test15XWinsWithTheDescendantDiagonal stamp: 'IO 11/1/2020 18:49:11'!
ERROR!

!testRun: #TerniLapilliGameTest #test16OWnis stamp: 'IO 11/1/2020 18:49:11'!
ERROR!

!testRun: #TerniLapilliGameTest #test17OCantStartPutting stamp: 'IO 11/1/2020 18:49:11'!
FAILURE!

!testRun: #TerniLapilliGameTest #test18XCantPutTwiceInARow stamp: 'IO 11/1/2020 18:49:11'!
ERROR!

!testRun: #TerniLapilliGameTest #test19XCantMoveTwiceInARow stamp: 'IO 11/1/2020 18:49:11'!
ERROR!

!testRun: #TerniLapilliGameTest #test20OCantPutTwiceInARow stamp: 'IO 11/1/2020 18:49:11'!
ERROR!

!testRun: #TerniLapilliGameTest #test21OCantMoveTwiceInARow stamp: 'IO 11/1/2020 18:49:11'!
ERROR!

!testRun: #TerniLapilliGameTest #test22XCantMoveOnTheirFirstTurn stamp: 'IO 11/1/2020 18:49:11'!
FAILURE!

!testRun: #TerniLapilliGameTest #test23XCantMoveOnTheirSecondTurn stamp: 'IO 11/1/2020 18:49:11'!
ERROR!

!testRun: #TerniLapilliGameTest #test24XCantMoveOnTheirThirdTurn stamp: 'IO 11/1/2020 18:49:11'!
ERROR!

!testRun: #TerniLapilliGameTest #test25OCantMoveOnTheirFirstTurn stamp: 'IO 11/1/2020 18:49:11'!
ERROR!

!testRun: #TerniLapilliGameTest #test26OCantMoveOnTheirSecondTurn stamp: 'IO 11/1/2020 18:49:11'!
ERROR!

!testRun: #TerniLapilliGameTest #test27OCantMoveOnTheirThirdTurn stamp: 'IO 11/1/2020 18:49:11'!
ERROR!

!testRun: #TerniLapilliGameTest #test28XCantPutAfterTheirThirdTurn stamp: 'IO 11/1/2020 18:49:11'!
ERROR!

!testRun: #TerniLapilliGameTest #test29OCantPutAfterTheirThirdTurn stamp: 'IO 11/1/2020 18:49:11'!
ERROR!

!testRun: #TerniLapilliGameTest #test30OCantPutAfterXWon stamp: 'IO 11/1/2020 18:49:11'!
ERROR!

!testRun: #TerniLapilliGameTest #test31OCantMoveAfterXWon stamp: 'IO 11/1/2020 18:49:11'!
ERROR!

!testRun: #TerniLapilliGameTest #test32XCantMoveAfterOWon stamp: 'IO 11/1/2020 18:49:11'!
ERROR!

!testRun: #TerniLapilliGameTest #test33XCantPutAfterOWon stamp: 'IO 11/1/2020 18:49:11'!
ERROR!

!testRun: #TerniLapilliGameTest #test34XCantPutInAnOccupiedSpace stamp: 'IO 11/1/2020 18:49:11'!
ERROR!

!testRun: #TerniLapilliGameTest #test35OCantPutInAnOccupiedSpace stamp: 'IO 11/1/2020 18:49:11'!
ERROR!

!testRun: #TerniLapilliGameTest #test36XCantMoveToAnOccupiedSpace stamp: 'IO 11/1/2020 18:49:11'!
ERROR!

!testRun: #TerniLapilliGameTest #test37OCantMoveToAnOccupiedSpace stamp: 'IO 11/1/2020 18:49:11'!
ERROR!

!testRun: #TerniLapilliGameTest #test38XCantPutOutsideTheBoardUnderXAxis stamp: 'IO 11/1/2020 18:49:11'!
FAILURE!

!testRun: #TerniLapilliGameTest #test39XCantPutOutsideTheBoardAboveXAxis stamp: 'IO 11/1/2020 18:49:11'!
FAILURE!

!testRun: #TerniLapilliGameTest #test40XCantPutOutsideTheBoardUnderNorAboveTheYAxis stamp: 'IO 11/1/2020 18:49:11'!
FAILURE!

!testRun: #TerniLapilliGameTest #test41OCantPutOutsideTheBoard stamp: 'IO 11/1/2020 18:49:11'!
ERROR!

!testRun: #TerniLapilliGameTest #test42XCantMoveToOutsideTheBoard stamp: 'IO 11/1/2020 18:49:11'!
ERROR!

!testRun: #TerniLapilliGameTest #test43OCantMoveToOutsideTheBoard stamp: 'IO 11/1/2020 18:49:11'!
ERROR!

!testRun: #TerniLapilliGameTest #test44XCantMoveTokensThatDontBelongToThem stamp: 'IO 11/1/2020 18:49:11'!
ERROR!

!testRun: #TerniLapilliGameTest #test45OCantMoveTokensThatDontBelongToThem stamp: 'IO 11/1/2020 18:49:11'!
ERROR!

!testRun: #TerniLapilliGameTest #test46XCantMoveaTokenOutsideItsNeighbors stamp: 'IO 11/1/2020 18:49:11'!
ERROR!

!testRun: #TerniLapilliGameTest #test47OCantMoveATokenOutsideItsNeighbors stamp: 'IO 11/1/2020 18:49:11'!
ERROR!
!TerniLapilliPlayerTokens methodsFor: 'testing' stamp: 'IO 11/1/2020 18:49:21' prior: 50894885!
hasTokenAt: aPosition

	"returns true if a token is placed in a given position"

	^tokens hasTokenAt: aPosition.
! !

!testRun: #TerniLapilliGameTest #test01XCanPutAToken stamp: 'IO 11/1/2020 18:49:25'!
ERROR!

!testRun: #TerniLapilliGameTest #test02puttingDoesNotAffectOtherPositions stamp: 'IO 11/1/2020 18:49:25'!
ERROR!

!testRun: #TerniLapilliGameTest #test03XCanPutInOtherPositions stamp: 'IO 11/1/2020 18:49:25'!
ERROR!

!testRun: #TerniLapilliGameTest #test04OCanPut stamp: 'IO 11/1/2020 18:49:25'!
ERROR!

!testRun: #TerniLapilliGameTest #test05XCanMove stamp: 'IO 11/1/2020 18:49:25'!
ERROR!

!testRun: #TerniLapilliGameTest #test06OCanMove stamp: 'IO 11/1/2020 18:49:25'!
ERROR!

!testRun: #TerniLapilliGameTest #test07XWinsWithTheFirstColumn stamp: 'IO 11/1/2020 18:49:25'!
ERROR!

!testRun: #TerniLapilliGameTest #test08XHasntWonYet stamp: 'IO 11/1/2020 18:49:25'!
ERROR!

!testRun: #TerniLapilliGameTest #test09XWinsWithTheSecondColumn stamp: 'IO 11/1/2020 18:49:25'!
ERROR!

!testRun: #TerniLapilliGameTest #test10XWinsWithTheThirdColumn stamp: 'IO 11/1/2020 18:49:25'!
ERROR!

!testRun: #TerniLapilliGameTest #test11XWinsWithTheFirstRow stamp: 'IO 11/1/2020 18:49:25'!
ERROR!

!testRun: #TerniLapilliGameTest #test12XWinsWithTheSecondRow stamp: 'IO 11/1/2020 18:49:25'!
ERROR!

!testRun: #TerniLapilliGameTest #test13XWinsWithTheThirdRow stamp: 'IO 11/1/2020 18:49:25'!
ERROR!

!testRun: #TerniLapilliGameTest #test14XWinsWithTheCrescentDiagonal stamp: 'IO 11/1/2020 18:49:25'!
ERROR!

!testRun: #TerniLapilliGameTest #test15XWinsWithTheDescendantDiagonal stamp: 'IO 11/1/2020 18:49:25'!
ERROR!

!testRun: #TerniLapilliGameTest #test16OWnis stamp: 'IO 11/1/2020 18:49:25'!
ERROR!

!testRun: #TerniLapilliGameTest #test17OCantStartPutting stamp: 'IO 11/1/2020 18:49:25'!
FAILURE!

!testRun: #TerniLapilliGameTest #test18XCantPutTwiceInARow stamp: 'IO 11/1/2020 18:49:25'!
ERROR!

!testRun: #TerniLapilliGameTest #test19XCantMoveTwiceInARow stamp: 'IO 11/1/2020 18:49:25'!
ERROR!

!testRun: #TerniLapilliGameTest #test20OCantPutTwiceInARow stamp: 'IO 11/1/2020 18:49:25'!
ERROR!

!testRun: #TerniLapilliGameTest #test21OCantMoveTwiceInARow stamp: 'IO 11/1/2020 18:49:25'!
ERROR!

!testRun: #TerniLapilliGameTest #test22XCantMoveOnTheirFirstTurn stamp: 'IO 11/1/2020 18:49:25'!
FAILURE!

!testRun: #TerniLapilliGameTest #test23XCantMoveOnTheirSecondTurn stamp: 'IO 11/1/2020 18:49:25'!
ERROR!

!testRun: #TerniLapilliGameTest #test24XCantMoveOnTheirThirdTurn stamp: 'IO 11/1/2020 18:49:25'!
ERROR!

!testRun: #TerniLapilliGameTest #test25OCantMoveOnTheirFirstTurn stamp: 'IO 11/1/2020 18:49:25'!
ERROR!

!testRun: #TerniLapilliGameTest #test26OCantMoveOnTheirSecondTurn stamp: 'IO 11/1/2020 18:49:25'!
ERROR!

!testRun: #TerniLapilliGameTest #test27OCantMoveOnTheirThirdTurn stamp: 'IO 11/1/2020 18:49:25'!
ERROR!

!testRun: #TerniLapilliGameTest #test28XCantPutAfterTheirThirdTurn stamp: 'IO 11/1/2020 18:49:25'!
ERROR!

!testRun: #TerniLapilliGameTest #test29OCantPutAfterTheirThirdTurn stamp: 'IO 11/1/2020 18:49:25'!
ERROR!

!testRun: #TerniLapilliGameTest #test30OCantPutAfterXWon stamp: 'IO 11/1/2020 18:49:25'!
ERROR!

!testRun: #TerniLapilliGameTest #test31OCantMoveAfterXWon stamp: 'IO 11/1/2020 18:49:25'!
ERROR!

!testRun: #TerniLapilliGameTest #test32XCantMoveAfterOWon stamp: 'IO 11/1/2020 18:49:25'!
ERROR!

!testRun: #TerniLapilliGameTest #test33XCantPutAfterOWon stamp: 'IO 11/1/2020 18:49:25'!
ERROR!

!testRun: #TerniLapilliGameTest #test34XCantPutInAnOccupiedSpace stamp: 'IO 11/1/2020 18:49:25'!
ERROR!

!testRun: #TerniLapilliGameTest #test35OCantPutInAnOccupiedSpace stamp: 'IO 11/1/2020 18:49:25'!
ERROR!

!testRun: #TerniLapilliGameTest #test36XCantMoveToAnOccupiedSpace stamp: 'IO 11/1/2020 18:49:25'!
ERROR!

!testRun: #TerniLapilliGameTest #test37OCantMoveToAnOccupiedSpace stamp: 'IO 11/1/2020 18:49:25'!
ERROR!

!testRun: #TerniLapilliGameTest #test38XCantPutOutsideTheBoardUnderXAxis stamp: 'IO 11/1/2020 18:49:25'!
FAILURE!

!testRun: #TerniLapilliGameTest #test39XCantPutOutsideTheBoardAboveXAxis stamp: 'IO 11/1/2020 18:49:25'!
FAILURE!

!testRun: #TerniLapilliGameTest #test40XCantPutOutsideTheBoardUnderNorAboveTheYAxis stamp: 'IO 11/1/2020 18:49:25'!
FAILURE!

!testRun: #TerniLapilliGameTest #test41OCantPutOutsideTheBoard stamp: 'IO 11/1/2020 18:49:25'!
ERROR!

!testRun: #TerniLapilliGameTest #test42XCantMoveToOutsideTheBoard stamp: 'IO 11/1/2020 18:49:25'!
ERROR!

!testRun: #TerniLapilliGameTest #test43OCantMoveToOutsideTheBoard stamp: 'IO 11/1/2020 18:49:25'!
ERROR!

!testRun: #TerniLapilliGameTest #test44XCantMoveTokensThatDontBelongToThem stamp: 'IO 11/1/2020 18:49:25'!
ERROR!

!testRun: #TerniLapilliGameTest #test45OCantMoveTokensThatDontBelongToThem stamp: 'IO 11/1/2020 18:49:25'!
ERROR!

!testRun: #TerniLapilliGameTest #test46XCantMoveaTokenOutsideItsNeighbors stamp: 'IO 11/1/2020 18:49:25'!
ERROR!

!testRun: #TerniLapilliGameTest #test47OCantMoveATokenOutsideItsNeighbors stamp: 'IO 11/1/2020 18:49:25'!
ERROR!
!TerniLapilliPlayerTokens methodsFor: 'testing' stamp: 'IO 11/1/2020 18:49:35'!
includes: aPosition

	"returns true if a token is placed in a given position"

	^tokens hasTokenAt: aPosition.
! !
!TerniLapilliGame methodsFor: 'testing' stamp: 'IO 11/1/2020 18:49:35'!
includes: aPosition

	"returns true if a board position has a token placed or not"

	^(state hasOAt: aPosition) or: (state hasXAt: aPosition).
! !
!TerniLapilliPlayerTokens methodsFor: 'as yet unclassified' stamp: 'IO 11/1/2020 18:49:35' prior: 50894531!
validateIsLegalMoveFrom: sourcePosition to: destinationPosition

	"signal when a token cannot be moved from a given position to another"

	(
		(self includes: sourcePosition) and:
		(sourcePosition eightNeighbors includes: destinationPosition)
	) ifFalse: [^self error: TerniLapilliGame cannotMoveErrorMessage].

	self validateIsInBoard: destinationPosition withErrorMessage: TerniLapilliGame cannotMoveErrorMessage.
! !
!TerniLapilliPlayerTokens methodsFor: 'as yet unclassified' stamp: 'IO 11/1/2020 18:49:35' prior: 50894457!
areInWinningPositionByDiagonal

	"return true if the tokens are in a winning position over a diagonal"

	^(tokens includes: (1@1)) and: (
		((tokens includes: (0@0)) and: (tokens includes: (2@2))) or: (
		(tokens includes: (2@0)) and: (tokens includes: (0@2))
	)).
! !
!TerniLapilliGame methodsFor: 'as yet unclassified' stamp: 'IO 11/1/2020 18:49:35' prior: 50894548!
putXAt: aPosition

	"put an O token in a given position of the board"

	(self includes: aPosition ) ifTrue:[^self error: TerniLapilliGame cannotPutErrorMessage].
	state := state putXAt: aPosition.
! !
!TerniLapilliPlayerTokens methodsFor: 'as yet unclassified' stamp: 'IO 11/1/2020 18:49:35' prior: 50895044!
hasTokenAt: aPosition

	"returns true if a token is placed in a given position"

	^tokens includes: aPosition.
! !
!TerniLapilliPlayerTokens methodsFor: 'as yet unclassified' stamp: 'IO 11/1/2020 18:49:35' prior: 50894446!
areInWinningPositionByRow: rowNumber

	"return true if the tokens are in a winning position over a given row"

	^(tokens includes: (rowNumber@0)) and: (tokens includes: (rowNumber@1)) and: (tokens includes: (rowNumber@2)).
! !
!TerniLapilliPlayerTokens methodsFor: 'as yet unclassified' stamp: 'IO 11/1/2020 18:49:35' prior: 50894511!
areInWinningPositionByColumn: columnNumber

	"return true if the tokens are in a winning position over a given column"

	^(tokens includes: (0@columnNumber)) and: (tokens includes: (1@columnNumber)) and: (tokens includes: (2@columnNumber))! !
!TerniLapilliGame methodsFor: 'as yet unclassified' stamp: 'IO 11/1/2020 18:49:35' prior: 50894479!
moveOFrom: aPosition to: aDestination

	"move O's token from a given position of the board to another given position"

	(self includes: aDestination ) ifTrue: [^self error: TerniLapilliGame cannotMoveErrorMessage].
	state := state moveOFrom: aPosition to: aDestination.
! !
!TerniLapilliGameState methodsFor: 'as yet unclassified' stamp: 'IO 11/1/2020 18:49:35' prior: 50894523!
hasXAt: aPosition

	"returns true if the current state has X's token placed at a given position"

	^xTokens includes: aPosition.
! !
!TerniLapilliGame methodsFor: 'as yet unclassified' stamp: 'IO 11/1/2020 18:49:35' prior: 50894469!
putOAt: aPosition

	"put an O token in a given position of the board"

	(self includes: aPosition ) ifTrue:[^self error: TerniLapilliGame cannotPutErrorMessage].
	state := state putOAt: aPosition.
! !
!TerniLapilliGame methodsFor: 'as yet unclassified' stamp: 'IO 11/1/2020 18:49:35' prior: 50894498!
moveXFrom: aPosition to: aDestination

	"move O's token from a given position of the board to another given position"

	(self includes: aDestination ) ifTrue:[^self error: TerniLapilliGame cannotMoveErrorMessage].
	state := state moveXFrom: aPosition to: aDestination.
	
	
! !
!TerniLapilliGameState methodsFor: 'as yet unclassified' stamp: 'IO 11/1/2020 18:49:35' prior: 50894438!
hasOAt: aPosition

	"returns true if the current state has O's token placed at a given position"

	^oTokens includes: aPosition.

! !
!TerniLapilliPlayerTokens methodsFor: 'as yet unclassified' stamp: 'IO 11/1/2020 18:49:35' prior: 50895203!
includes: aPosition

	"returns true if a token is placed in a given position"

	^tokens includes: aPosition.
! !

!methodRemoval: TerniLapilliPlayerTokens #hasTokenAt: stamp: 'IO 11/1/2020 18:49:35'!
hasTokenAt: aPosition

	"returns true if a token is placed in a given position"

	^tokens includes: aPosition.
!

!methodRemoval: TerniLapilliGame #hasTokenAt: stamp: 'IO 11/1/2020 18:49:35'!
hasTokenAt: aPosition

	"returns true if a board position has a token placed or not"

	^(state hasOAt: aPosition) or: (state hasXAt: aPosition).
!

!testRun: #TerniLapilliGameTest #test01XCanPutAToken stamp: 'IO 11/1/2020 18:49:40'!
PASSED!

!testRun: #TerniLapilliGameTest #test02puttingDoesNotAffectOtherPositions stamp: 'IO 11/1/2020 18:49:40'!
PASSED!

!testRun: #TerniLapilliGameTest #test03XCanPutInOtherPositions stamp: 'IO 11/1/2020 18:49:40'!
PASSED!

!testRun: #TerniLapilliGameTest #test04OCanPut stamp: 'IO 11/1/2020 18:49:40'!
PASSED!

!testRun: #TerniLapilliGameTest #test05XCanMove stamp: 'IO 11/1/2020 18:49:40'!
PASSED!

!testRun: #TerniLapilliGameTest #test06OCanMove stamp: 'IO 11/1/2020 18:49:40'!
PASSED!

!testRun: #TerniLapilliGameTest #test07XWinsWithTheFirstColumn stamp: 'IO 11/1/2020 18:49:40'!
PASSED!

!testRun: #TerniLapilliGameTest #test08XHasntWonYet stamp: 'IO 11/1/2020 18:49:40'!
PASSED!

!testRun: #TerniLapilliGameTest #test09XWinsWithTheSecondColumn stamp: 'IO 11/1/2020 18:49:40'!
PASSED!

!testRun: #TerniLapilliGameTest #test10XWinsWithTheThirdColumn stamp: 'IO 11/1/2020 18:49:40'!
PASSED!

!testRun: #TerniLapilliGameTest #test11XWinsWithTheFirstRow stamp: 'IO 11/1/2020 18:49:40'!
PASSED!

!testRun: #TerniLapilliGameTest #test12XWinsWithTheSecondRow stamp: 'IO 11/1/2020 18:49:40'!
PASSED!

!testRun: #TerniLapilliGameTest #test13XWinsWithTheThirdRow stamp: 'IO 11/1/2020 18:49:40'!
PASSED!

!testRun: #TerniLapilliGameTest #test14XWinsWithTheCrescentDiagonal stamp: 'IO 11/1/2020 18:49:40'!
PASSED!

!testRun: #TerniLapilliGameTest #test15XWinsWithTheDescendantDiagonal stamp: 'IO 11/1/2020 18:49:40'!
PASSED!

!testRun: #TerniLapilliGameTest #test16OWnis stamp: 'IO 11/1/2020 18:49:40'!
PASSED!

!testRun: #TerniLapilliGameTest #test17OCantStartPutting stamp: 'IO 11/1/2020 18:49:40'!
PASSED!

!testRun: #TerniLapilliGameTest #test18XCantPutTwiceInARow stamp: 'IO 11/1/2020 18:49:40'!
PASSED!

!testRun: #TerniLapilliGameTest #test19XCantMoveTwiceInARow stamp: 'IO 11/1/2020 18:49:40'!
PASSED!

!testRun: #TerniLapilliGameTest #test20OCantPutTwiceInARow stamp: 'IO 11/1/2020 18:49:40'!
PASSED!

!testRun: #TerniLapilliGameTest #test21OCantMoveTwiceInARow stamp: 'IO 11/1/2020 18:49:40'!
PASSED!

!testRun: #TerniLapilliGameTest #test22XCantMoveOnTheirFirstTurn stamp: 'IO 11/1/2020 18:49:40'!
PASSED!

!testRun: #TerniLapilliGameTest #test23XCantMoveOnTheirSecondTurn stamp: 'IO 11/1/2020 18:49:40'!
PASSED!

!testRun: #TerniLapilliGameTest #test24XCantMoveOnTheirThirdTurn stamp: 'IO 11/1/2020 18:49:40'!
PASSED!

!testRun: #TerniLapilliGameTest #test25OCantMoveOnTheirFirstTurn stamp: 'IO 11/1/2020 18:49:40'!
PASSED!

!testRun: #TerniLapilliGameTest #test26OCantMoveOnTheirSecondTurn stamp: 'IO 11/1/2020 18:49:40'!
PASSED!

!testRun: #TerniLapilliGameTest #test27OCantMoveOnTheirThirdTurn stamp: 'IO 11/1/2020 18:49:40'!
PASSED!

!testRun: #TerniLapilliGameTest #test28XCantPutAfterTheirThirdTurn stamp: 'IO 11/1/2020 18:49:40'!
PASSED!

!testRun: #TerniLapilliGameTest #test29OCantPutAfterTheirThirdTurn stamp: 'IO 11/1/2020 18:49:40'!
PASSED!

!testRun: #TerniLapilliGameTest #test30OCantPutAfterXWon stamp: 'IO 11/1/2020 18:49:40'!
PASSED!

!testRun: #TerniLapilliGameTest #test31OCantMoveAfterXWon stamp: 'IO 11/1/2020 18:49:40'!
PASSED!

!testRun: #TerniLapilliGameTest #test32XCantMoveAfterOWon stamp: 'IO 11/1/2020 18:49:40'!
PASSED!

!testRun: #TerniLapilliGameTest #test33XCantPutAfterOWon stamp: 'IO 11/1/2020 18:49:40'!
PASSED!

!testRun: #TerniLapilliGameTest #test34XCantPutInAnOccupiedSpace stamp: 'IO 11/1/2020 18:49:40'!
PASSED!

!testRun: #TerniLapilliGameTest #test35OCantPutInAnOccupiedSpace stamp: 'IO 11/1/2020 18:49:40'!
PASSED!

!testRun: #TerniLapilliGameTest #test36XCantMoveToAnOccupiedSpace stamp: 'IO 11/1/2020 18:49:40'!
PASSED!

!testRun: #TerniLapilliGameTest #test37OCantMoveToAnOccupiedSpace stamp: 'IO 11/1/2020 18:49:40'!
PASSED!

!testRun: #TerniLapilliGameTest #test38XCantPutOutsideTheBoardUnderXAxis stamp: 'IO 11/1/2020 18:49:40'!
PASSED!

!testRun: #TerniLapilliGameTest #test39XCantPutOutsideTheBoardAboveXAxis stamp: 'IO 11/1/2020 18:49:40'!
PASSED!

!testRun: #TerniLapilliGameTest #test40XCantPutOutsideTheBoardUnderNorAboveTheYAxis stamp: 'IO 11/1/2020 18:49:40'!
PASSED!

!testRun: #TerniLapilliGameTest #test41OCantPutOutsideTheBoard stamp: 'IO 11/1/2020 18:49:40'!
PASSED!

!testRun: #TerniLapilliGameTest #test42XCantMoveToOutsideTheBoard stamp: 'IO 11/1/2020 18:49:40'!
PASSED!

!testRun: #TerniLapilliGameTest #test43OCantMoveToOutsideTheBoard stamp: 'IO 11/1/2020 18:49:40'!
PASSED!

!testRun: #TerniLapilliGameTest #test44XCantMoveTokensThatDontBelongToThem stamp: 'IO 11/1/2020 18:49:40'!
PASSED!

!testRun: #TerniLapilliGameTest #test45OCantMoveTokensThatDontBelongToThem stamp: 'IO 11/1/2020 18:49:40'!
PASSED!

!testRun: #TerniLapilliGameTest #test46XCantMoveaTokenOutsideItsNeighbors stamp: 'IO 11/1/2020 18:49:40'!
PASSED!

!testRun: #TerniLapilliGameTest #test47OCantMoveATokenOutsideItsNeighbors stamp: 'IO 11/1/2020 18:49:40'!
PASSED!
!TerniLapilliPlayerTokens methodsFor: 'testing' stamp: 'IO 11/1/2020 18:50:02'!
hasTokenAt: aPosition

	"returns true if a token is placed in a given position"

	^tokens includes: aPosition.
! !
!TerniLapilliPlayerTokens methodsFor: 'as yet unclassified' stamp: 'IO 11/1/2020 18:50:02' prior: 50895335!
includes: aPosition

	"returns true if a token is placed in a given position"

	^tokens hasTokenAt: aPosition.
! !
!TerniLapilliPlayerTokens methodsFor: 'as yet unclassified' stamp: 'IO 11/1/2020 18:50:02' prior: 50895274!
areInWinningPositionByColumn: columnNumber

	"return true if the tokens are in a winning position over a given column"

	^(tokens hasTokenAt: (0@columnNumber)) and: (tokens hasTokenAt: (1@columnNumber)) and: (tokens hasTokenAt: (2@columnNumber))! !
!TerniLapilliPlayerTokens methodsFor: 'as yet unclassified' stamp: 'IO 11/1/2020 18:50:02' prior: 50895263!
areInWinningPositionByRow: rowNumber

	"return true if the tokens are in a winning position over a given row"

	^(tokens hasTokenAt: (rowNumber@0)) and: (tokens hasTokenAt: (rowNumber@1)) and: (tokens hasTokenAt: (rowNumber@2)).
! !
!TerniLapilliPlayerTokens methodsFor: 'as yet unclassified' stamp: 'IO 11/1/2020 18:50:02' prior: 50895234!
areInWinningPositionByDiagonal

	"return true if the tokens are in a winning position over a diagonal"

	^(tokens hasTokenAt: (1@1)) and: (
		((tokens hasTokenAt: (0@0)) and: (tokens hasTokenAt: (2@2))) or: (
		(tokens hasTokenAt: (2@0)) and: (tokens hasTokenAt: (0@2))
	)).
! !
!TerniLapilliPlayerTokens methodsFor: 'as yet unclassified' stamp: 'IO 11/1/2020 18:50:03' prior: 50895217!
validateIsLegalMoveFrom: sourcePosition to: destinationPosition

	"signal when a token cannot be moved from a given position to another"

	(
		(self hasTokenAt: sourcePosition) and:
		(sourcePosition eightNeighbors hasTokenAt: destinationPosition)
	) ifFalse: [^self error: TerniLapilliGame cannotMoveErrorMessage].

	self validateIsInBoard: destinationPosition withErrorMessage: TerniLapilliGame cannotMoveErrorMessage.
! !
!TerniLapilliPlayerTokens methodsFor: 'as yet unclassified' stamp: 'IO 11/1/2020 18:50:03' prior: 50895508!
hasTokenAt: aPosition

	"returns true if a token is placed in a given position"

	^tokens hasTokenAt: aPosition.
! !

!methodRemoval: TerniLapilliPlayerTokens #includes: stamp: 'IO 11/1/2020 18:50:03'!
includes: aPosition

	"returns true if a token is placed in a given position"

	^tokens hasTokenAt: aPosition.
!

!testRun: #TerniLapilliGameTest #test01XCanPutAToken stamp: 'IO 11/1/2020 18:50:06'!
ERROR!

!testRun: #TerniLapilliGameTest #test02puttingDoesNotAffectOtherPositions stamp: 'IO 11/1/2020 18:50:06'!
ERROR!

!testRun: #TerniLapilliGameTest #test03XCanPutInOtherPositions stamp: 'IO 11/1/2020 18:50:06'!
ERROR!

!testRun: #TerniLapilliGameTest #test04OCanPut stamp: 'IO 11/1/2020 18:50:06'!
ERROR!

!testRun: #TerniLapilliGameTest #test05XCanMove stamp: 'IO 11/1/2020 18:50:06'!
ERROR!

!testRun: #TerniLapilliGameTest #test06OCanMove stamp: 'IO 11/1/2020 18:50:06'!
ERROR!

!testRun: #TerniLapilliGameTest #test07XWinsWithTheFirstColumn stamp: 'IO 11/1/2020 18:50:06'!
ERROR!

!testRun: #TerniLapilliGameTest #test08XHasntWonYet stamp: 'IO 11/1/2020 18:50:06'!
ERROR!

!testRun: #TerniLapilliGameTest #test09XWinsWithTheSecondColumn stamp: 'IO 11/1/2020 18:50:06'!
ERROR!

!testRun: #TerniLapilliGameTest #test10XWinsWithTheThirdColumn stamp: 'IO 11/1/2020 18:50:06'!
ERROR!

!testRun: #TerniLapilliGameTest #test11XWinsWithTheFirstRow stamp: 'IO 11/1/2020 18:50:06'!
ERROR!

!testRun: #TerniLapilliGameTest #test12XWinsWithTheSecondRow stamp: 'IO 11/1/2020 18:50:06'!
ERROR!

!testRun: #TerniLapilliGameTest #test13XWinsWithTheThirdRow stamp: 'IO 11/1/2020 18:50:06'!
ERROR!

!testRun: #TerniLapilliGameTest #test14XWinsWithTheCrescentDiagonal stamp: 'IO 11/1/2020 18:50:06'!
ERROR!

!testRun: #TerniLapilliGameTest #test15XWinsWithTheDescendantDiagonal stamp: 'IO 11/1/2020 18:50:06'!
ERROR!

!testRun: #TerniLapilliGameTest #test16OWnis stamp: 'IO 11/1/2020 18:50:06'!
ERROR!

!testRun: #TerniLapilliGameTest #test17OCantStartPutting stamp: 'IO 11/1/2020 18:50:06'!
FAILURE!

!testRun: #TerniLapilliGameTest #test18XCantPutTwiceInARow stamp: 'IO 11/1/2020 18:50:06'!
ERROR!

!testRun: #TerniLapilliGameTest #test19XCantMoveTwiceInARow stamp: 'IO 11/1/2020 18:50:06'!
ERROR!

!testRun: #TerniLapilliGameTest #test20OCantPutTwiceInARow stamp: 'IO 11/1/2020 18:50:06'!
ERROR!

!testRun: #TerniLapilliGameTest #test21OCantMoveTwiceInARow stamp: 'IO 11/1/2020 18:50:06'!
ERROR!

!testRun: #TerniLapilliGameTest #test22XCantMoveOnTheirFirstTurn stamp: 'IO 11/1/2020 18:50:06'!
FAILURE!

!testRun: #TerniLapilliGameTest #test23XCantMoveOnTheirSecondTurn stamp: 'IO 11/1/2020 18:50:06'!
ERROR!

!testRun: #TerniLapilliGameTest #test24XCantMoveOnTheirThirdTurn stamp: 'IO 11/1/2020 18:50:06'!
ERROR!

!testRun: #TerniLapilliGameTest #test25OCantMoveOnTheirFirstTurn stamp: 'IO 11/1/2020 18:50:06'!
ERROR!

!testRun: #TerniLapilliGameTest #test26OCantMoveOnTheirSecondTurn stamp: 'IO 11/1/2020 18:50:06'!
ERROR!

!testRun: #TerniLapilliGameTest #test27OCantMoveOnTheirThirdTurn stamp: 'IO 11/1/2020 18:50:06'!
ERROR!

!testRun: #TerniLapilliGameTest #test28XCantPutAfterTheirThirdTurn stamp: 'IO 11/1/2020 18:50:06'!
ERROR!

!testRun: #TerniLapilliGameTest #test29OCantPutAfterTheirThirdTurn stamp: 'IO 11/1/2020 18:50:06'!
ERROR!

!testRun: #TerniLapilliGameTest #test30OCantPutAfterXWon stamp: 'IO 11/1/2020 18:50:06'!
ERROR!

!testRun: #TerniLapilliGameTest #test31OCantMoveAfterXWon stamp: 'IO 11/1/2020 18:50:06'!
ERROR!

!testRun: #TerniLapilliGameTest #test32XCantMoveAfterOWon stamp: 'IO 11/1/2020 18:50:06'!
ERROR!

!testRun: #TerniLapilliGameTest #test33XCantPutAfterOWon stamp: 'IO 11/1/2020 18:50:06'!
ERROR!

!testRun: #TerniLapilliGameTest #test34XCantPutInAnOccupiedSpace stamp: 'IO 11/1/2020 18:50:06'!
ERROR!

!testRun: #TerniLapilliGameTest #test35OCantPutInAnOccupiedSpace stamp: 'IO 11/1/2020 18:50:06'!
ERROR!

!testRun: #TerniLapilliGameTest #test36XCantMoveToAnOccupiedSpace stamp: 'IO 11/1/2020 18:50:06'!
ERROR!

!testRun: #TerniLapilliGameTest #test37OCantMoveToAnOccupiedSpace stamp: 'IO 11/1/2020 18:50:06'!
ERROR!

!testRun: #TerniLapilliGameTest #test38XCantPutOutsideTheBoardUnderXAxis stamp: 'IO 11/1/2020 18:50:06'!
FAILURE!

!testRun: #TerniLapilliGameTest #test39XCantPutOutsideTheBoardAboveXAxis stamp: 'IO 11/1/2020 18:50:06'!
FAILURE!

!testRun: #TerniLapilliGameTest #test40XCantPutOutsideTheBoardUnderNorAboveTheYAxis stamp: 'IO 11/1/2020 18:50:06'!
FAILURE!

!testRun: #TerniLapilliGameTest #test41OCantPutOutsideTheBoard stamp: 'IO 11/1/2020 18:50:06'!
ERROR!

!testRun: #TerniLapilliGameTest #test42XCantMoveToOutsideTheBoard stamp: 'IO 11/1/2020 18:50:06'!
ERROR!

!testRun: #TerniLapilliGameTest #test43OCantMoveToOutsideTheBoard stamp: 'IO 11/1/2020 18:50:06'!
ERROR!

!testRun: #TerniLapilliGameTest #test44XCantMoveTokensThatDontBelongToThem stamp: 'IO 11/1/2020 18:50:06'!
ERROR!

!testRun: #TerniLapilliGameTest #test45OCantMoveTokensThatDontBelongToThem stamp: 'IO 11/1/2020 18:50:06'!
ERROR!

!testRun: #TerniLapilliGameTest #test46XCantMoveaTokenOutsideItsNeighbors stamp: 'IO 11/1/2020 18:50:06'!
ERROR!

!testRun: #TerniLapilliGameTest #test47OCantMoveATokenOutsideItsNeighbors stamp: 'IO 11/1/2020 18:50:06'!
ERROR!
!TerniLapilliPlayerTokens methodsFor: 'testing' stamp: 'IO 11/1/2020 18:50:20'!
includes: aPosition

	"returns true if a token is placed in a given position"

	^tokens hasTokenAt: aPosition.
! !
!TerniLapilliPlayerTokens methodsFor: 'as yet unclassified' stamp: 'IO 11/1/2020 18:50:20' prior: 50895545!
areInWinningPositionByDiagonal

	"return true if the tokens are in a winning position over a diagonal"

	^(tokens includes: (1@1)) and: (
		((tokens includes: (0@0)) and: (tokens includes: (2@2))) or: (
		(tokens includes: (2@0)) and: (tokens includes: (0@2))
	)).
! !
!TerniLapilliPlayerTokens methodsFor: 'as yet unclassified' stamp: 'IO 11/1/2020 18:50:20' prior: 50895558!
validateIsLegalMoveFrom: sourcePosition to: destinationPosition

	"signal when a token cannot be moved from a given position to another"

	(
		(self includes: sourcePosition) and:
		(sourcePosition eightNeighbors includes: destinationPosition)
	) ifFalse: [^self error: TerniLapilliGame cannotMoveErrorMessage].

	self validateIsInBoard: destinationPosition withErrorMessage: TerniLapilliGame cannotMoveErrorMessage.
! !
!TerniLapilliPlayerTokens methodsFor: 'as yet unclassified' stamp: 'IO 11/1/2020 18:50:20' prior: 50895522!
areInWinningPositionByColumn: columnNumber

	"return true if the tokens are in a winning position over a given column"

	^(tokens includes: (0@columnNumber)) and: (tokens includes: (1@columnNumber)) and: (tokens includes: (2@columnNumber))! !
!TerniLapilliPlayerTokens methodsFor: 'as yet unclassified' stamp: 'IO 11/1/2020 18:50:20' prior: 50895534!
areInWinningPositionByRow: rowNumber

	"return true if the tokens are in a winning position over a given row"

	^(tokens includes: (rowNumber@0)) and: (tokens includes: (rowNumber@1)) and: (tokens includes: (rowNumber@2)).
! !
!TerniLapilliPlayerTokens methodsFor: 'as yet unclassified' stamp: 'IO 11/1/2020 18:50:20' prior: 50895575!
hasTokenAt: aPosition

	"returns true if a token is placed in a given position"

	^tokens includes: aPosition.
! !
!TerniLapilliPlayerTokens methodsFor: 'as yet unclassified' stamp: 'IO 11/1/2020 18:50:20' prior: 50895740!
includes: aPosition

	"returns true if a token is placed in a given position"

	^tokens includes: aPosition.
! !

!methodRemoval: TerniLapilliPlayerTokens #hasTokenAt: stamp: 'IO 11/1/2020 18:50:20'!
hasTokenAt: aPosition

	"returns true if a token is placed in a given position"

	^tokens includes: aPosition.
!

!testRun: #TerniLapilliGameTest #test01XCanPutAToken stamp: 'IO 11/1/2020 18:50:23'!
PASSED!

!testRun: #TerniLapilliGameTest #test02puttingDoesNotAffectOtherPositions stamp: 'IO 11/1/2020 18:50:23'!
PASSED!

!testRun: #TerniLapilliGameTest #test03XCanPutInOtherPositions stamp: 'IO 11/1/2020 18:50:23'!
PASSED!

!testRun: #TerniLapilliGameTest #test04OCanPut stamp: 'IO 11/1/2020 18:50:23'!
PASSED!

!testRun: #TerniLapilliGameTest #test05XCanMove stamp: 'IO 11/1/2020 18:50:23'!
PASSED!

!testRun: #TerniLapilliGameTest #test06OCanMove stamp: 'IO 11/1/2020 18:50:23'!
PASSED!

!testRun: #TerniLapilliGameTest #test07XWinsWithTheFirstColumn stamp: 'IO 11/1/2020 18:50:23'!
PASSED!

!testRun: #TerniLapilliGameTest #test08XHasntWonYet stamp: 'IO 11/1/2020 18:50:23'!
PASSED!

!testRun: #TerniLapilliGameTest #test09XWinsWithTheSecondColumn stamp: 'IO 11/1/2020 18:50:23'!
PASSED!

!testRun: #TerniLapilliGameTest #test10XWinsWithTheThirdColumn stamp: 'IO 11/1/2020 18:50:23'!
PASSED!

!testRun: #TerniLapilliGameTest #test11XWinsWithTheFirstRow stamp: 'IO 11/1/2020 18:50:23'!
PASSED!

!testRun: #TerniLapilliGameTest #test12XWinsWithTheSecondRow stamp: 'IO 11/1/2020 18:50:23'!
PASSED!

!testRun: #TerniLapilliGameTest #test13XWinsWithTheThirdRow stamp: 'IO 11/1/2020 18:50:23'!
PASSED!

!testRun: #TerniLapilliGameTest #test14XWinsWithTheCrescentDiagonal stamp: 'IO 11/1/2020 18:50:23'!
PASSED!

!testRun: #TerniLapilliGameTest #test15XWinsWithTheDescendantDiagonal stamp: 'IO 11/1/2020 18:50:23'!
PASSED!

!testRun: #TerniLapilliGameTest #test16OWnis stamp: 'IO 11/1/2020 18:50:23'!
PASSED!

!testRun: #TerniLapilliGameTest #test17OCantStartPutting stamp: 'IO 11/1/2020 18:50:23'!
PASSED!

!testRun: #TerniLapilliGameTest #test18XCantPutTwiceInARow stamp: 'IO 11/1/2020 18:50:24'!
PASSED!

!testRun: #TerniLapilliGameTest #test19XCantMoveTwiceInARow stamp: 'IO 11/1/2020 18:50:24'!
PASSED!

!testRun: #TerniLapilliGameTest #test20OCantPutTwiceInARow stamp: 'IO 11/1/2020 18:50:24'!
PASSED!

!testRun: #TerniLapilliGameTest #test21OCantMoveTwiceInARow stamp: 'IO 11/1/2020 18:50:24'!
PASSED!

!testRun: #TerniLapilliGameTest #test22XCantMoveOnTheirFirstTurn stamp: 'IO 11/1/2020 18:50:24'!
PASSED!

!testRun: #TerniLapilliGameTest #test23XCantMoveOnTheirSecondTurn stamp: 'IO 11/1/2020 18:50:24'!
PASSED!

!testRun: #TerniLapilliGameTest #test24XCantMoveOnTheirThirdTurn stamp: 'IO 11/1/2020 18:50:24'!
PASSED!

!testRun: #TerniLapilliGameTest #test25OCantMoveOnTheirFirstTurn stamp: 'IO 11/1/2020 18:50:24'!
PASSED!

!testRun: #TerniLapilliGameTest #test26OCantMoveOnTheirSecondTurn stamp: 'IO 11/1/2020 18:50:24'!
PASSED!

!testRun: #TerniLapilliGameTest #test27OCantMoveOnTheirThirdTurn stamp: 'IO 11/1/2020 18:50:24'!
PASSED!

!testRun: #TerniLapilliGameTest #test28XCantPutAfterTheirThirdTurn stamp: 'IO 11/1/2020 18:50:24'!
PASSED!

!testRun: #TerniLapilliGameTest #test29OCantPutAfterTheirThirdTurn stamp: 'IO 11/1/2020 18:50:24'!
PASSED!

!testRun: #TerniLapilliGameTest #test30OCantPutAfterXWon stamp: 'IO 11/1/2020 18:50:24'!
PASSED!

!testRun: #TerniLapilliGameTest #test31OCantMoveAfterXWon stamp: 'IO 11/1/2020 18:50:24'!
PASSED!

!testRun: #TerniLapilliGameTest #test32XCantMoveAfterOWon stamp: 'IO 11/1/2020 18:50:24'!
PASSED!

!testRun: #TerniLapilliGameTest #test33XCantPutAfterOWon stamp: 'IO 11/1/2020 18:50:24'!
PASSED!

!testRun: #TerniLapilliGameTest #test34XCantPutInAnOccupiedSpace stamp: 'IO 11/1/2020 18:50:24'!
PASSED!

!testRun: #TerniLapilliGameTest #test35OCantPutInAnOccupiedSpace stamp: 'IO 11/1/2020 18:50:24'!
PASSED!

!testRun: #TerniLapilliGameTest #test36XCantMoveToAnOccupiedSpace stamp: 'IO 11/1/2020 18:50:24'!
PASSED!

!testRun: #TerniLapilliGameTest #test37OCantMoveToAnOccupiedSpace stamp: 'IO 11/1/2020 18:50:24'!
PASSED!

!testRun: #TerniLapilliGameTest #test38XCantPutOutsideTheBoardUnderXAxis stamp: 'IO 11/1/2020 18:50:24'!
PASSED!

!testRun: #TerniLapilliGameTest #test39XCantPutOutsideTheBoardAboveXAxis stamp: 'IO 11/1/2020 18:50:24'!
PASSED!

!testRun: #TerniLapilliGameTest #test40XCantPutOutsideTheBoardUnderNorAboveTheYAxis stamp: 'IO 11/1/2020 18:50:24'!
PASSED!

!testRun: #TerniLapilliGameTest #test41OCantPutOutsideTheBoard stamp: 'IO 11/1/2020 18:50:24'!
PASSED!

!testRun: #TerniLapilliGameTest #test42XCantMoveToOutsideTheBoard stamp: 'IO 11/1/2020 18:50:24'!
PASSED!

!testRun: #TerniLapilliGameTest #test43OCantMoveToOutsideTheBoard stamp: 'IO 11/1/2020 18:50:24'!
PASSED!

!testRun: #TerniLapilliGameTest #test44XCantMoveTokensThatDontBelongToThem stamp: 'IO 11/1/2020 18:50:24'!
PASSED!

!testRun: #TerniLapilliGameTest #test45OCantMoveTokensThatDontBelongToThem stamp: 'IO 11/1/2020 18:50:24'!
PASSED!

!testRun: #TerniLapilliGameTest #test46XCantMoveaTokenOutsideItsNeighbors stamp: 'IO 11/1/2020 18:50:24'!
PASSED!

!testRun: #TerniLapilliGameTest #test47OCantMoveATokenOutsideItsNeighbors stamp: 'IO 11/1/2020 18:50:24'!
PASSED!
!TerniLapilliGameTest methodsFor: 'ilegal positions' stamp: 'IO 11/1/2020 18:50:57' prior: 50891164!
test34XCantPutInAnOccupiedSpace
	"X no puede poner en un lugar ocupado"
	

	| aGame |
	
	aGame := TerniLapilliGame new.
	
	aGame putXAt: 0@0.
	aGame putOAt: 2@0.

	self should: [	aGame putXAt: 0@0.] raise: Error withMessageText: TerniLapilliGame invalidPositionErrorMessage .
	self should: [	aGame putXAt: 2@0.] raise: Error withMessageText: TerniLapilliGame invalidPositionErrorMessage .
! !
!TerniLapilliGameTest methodsFor: 'ilegal positions' stamp: 'IO 11/1/2020 18:51:02' prior: 50891421!
test35OCantPutInAnOccupiedSpace
	"O no puede poner en un lugar ocupado"
	

	| aGame |
	
	aGame := TerniLapilliGame new.
	
	aGame putXAt: 0@0.
	aGame putOAt: 0@1.
	aGame putXAt: 0@2.

	self should: [	aGame putOAt: 0@0.] raise: Error withMessageText: TerniLapilliGame invalidPositionErrorMessage .
	self should: [	aGame putOAt: 0@1.] raise: Error withMessageText: TerniLapilliGame cannotPutErrorMessage .
! !
!TerniLapilliGameTest methodsFor: 'ilegal positions' stamp: 'IO 11/1/2020 18:51:08' prior: 50895988!
test35OCantPutInAnOccupiedSpace
	"O no puede poner en un lugar ocupado"
	

	| aGame |
	
	aGame := TerniLapilliGame new.
	
	aGame putXAt: 0@0.
	aGame putOAt: 0@1.
	aGame putXAt: 0@2.

	self should: [	aGame putOAt: 0@0.] raise: Error withMessageText: TerniLapilliGame cannotPutErrorMessage .
	self should: [	aGame putOAt: 0@1.] raise: Error withMessageText: TerniLapilliGame cannotPutErrorMessage .
! !
!TerniLapilliGameTest methodsFor: 'ilegal positions' stamp: 'IO 11/1/2020 18:51:20' prior: 50895972!
test34XCantPutInAnOccupiedSpace
	"X no puede poner en un lugar ocupado"
	

	| aGame |
	
	aGame := TerniLapilliGame new.
	
	aGame putXAt: 0@0.
	aGame putOAt: 2@0.

	self should: [	aGame putXAt: 0@0.] raise: Error withMessageText: TerniLapilliGame invalidPositionErrorMessage .
	self should: [	aGame putXAt: 2@0.] raise: Error withMessageText: TerniLapilliGame invalidPositionErrorMessage .
! !
!TerniLapilliGameTest methodsFor: 'ilegal positions' stamp: 'IO 11/1/2020 18:51:25' prior: 50896004!
test35OCantPutInAnOccupiedSpace
	"O no puede poner en un lugar ocupado"
	

	| aGame |
	
	aGame := TerniLapilliGame new.
	
	aGame putXAt: 0@0.
	aGame putOAt: 0@1.
	aGame putXAt: 0@2.

	self should: [	aGame putOAt: 0@0.] raise: Error withMessageText: TerniLapilliGame invalidPositionErrorMessage .
	self should: [	aGame putOAt: 0@1.] raise: Error withMessageText: TerniLapilliGame invalidPositionErrorMessage .
! !
!TerniLapilliGameTest methodsFor: 'ilegal positions' stamp: 'IO 11/1/2020 18:51:28' prior: 50890777!
test36XCantMoveToAnOccupiedSpace
	"X no puede mover en un lugar ocupado"
	

	| aGame |
	
	aGame := self createGameInMovePhase .
	
	self should: [	aGame moveXFrom: 1@2 to: 2@1.] raise: Error withMessageText: TerniLapilliGame invalidPositionErrorMessage .
! !
!TerniLapilliGameTest methodsFor: 'ilegal positions' stamp: 'IO 11/1/2020 18:51:31' prior: 50890658!
test37OCantMoveToAnOccupiedSpace
	"O no puede mover en un lugar ocupado"
	

	| aGame |
	
	aGame := self createGameInMovePhase .
	aGame moveXFrom: 0@1 to: 0@0.
	
	self should: [	aGame moveOFrom: 2@1 to: 1@2.] raise: Error withMessageText: TerniLapilliGame invalidPositionErrorMessage .
! !
!TerniLapilliGameTest methodsFor: 'ilegal positions' stamp: 'IO 11/1/2020 18:51:34' prior: 50891400!
test38XCantPutOutsideTheBoardUnderXAxis
	"X no puede poner afuera del tablero por x, por abajo"
	

	| aGame |
	
	aGame := TerniLapilliGame new.
	
	self should: [	aGame putXAt: -1@1.] raise: Error withMessageText: TerniLapilliGame invalidPositionErrorMessage .
! !
!TerniLapilliGameTest methodsFor: 'ilegal positions' stamp: 'IO 11/1/2020 18:51:37' prior: 50891216!
test39XCantPutOutsideTheBoardAboveXAxis
	"X no puede poner afuera del tablero por x, por arriba"
	

	| aGame |
	
	aGame := TerniLapilliGame new.
	
	self should: [	aGame putXAt: 3@1.] raise: Error withMessageText: TerniLapilliGame invalidPositionErrorMessage .
! !
!TerniLapilliGameTest methodsFor: 'ilegal positions' stamp: 'IO 11/1/2020 18:51:40' prior: 50891090!
test40XCantPutOutsideTheBoardUnderNorAboveTheYAxis
	"X no puede poner afuera del tablero por y"
	

	| aGame |
	
	aGame := TerniLapilliGame new.
	
	self should: [	aGame putXAt: 1@-1.] raise: Error withMessageText: TerniLapilliGame invalidPositionErrorMessage .
	self should: [	aGame putXAt: 1@3.] raise: Error withMessageText: TerniLapilliGame invalidPositionErrorMessage .
! !
!TerniLapilliGameTest methodsFor: 'ilegal positions' stamp: 'IO 11/1/2020 18:51:45' prior: 50891068!
test41OCantPutOutsideTheBoard
	"O no puede mover hac�a afuera del tablero"
	

	| aGame |

	aGame := TerniLapilliGame new.
	aGame putXAt: 0@0.
	
	self should: [	aGame putOAt: 0@3.] raise: Error withMessageText: TerniLapilliGame invalidPositionErrorMessage. 
	self should: [	aGame putOAt: 0@-1.] raise: Error withMessageText: TerniLapilliGame invalidPositionErrorMessage. 
	self should: [	aGame putOAt: 3@0.] raise: Error withMessageText: TerniLapilliGame invalidPositionErrorMessage. 
	self should: [	aGame putOAt: -1@0.] raise: Error withMessageText: TerniLapilliGame invalidPositionErrorMessage. 
! !
!TerniLapilliGameTest methodsFor: 'ilegal positions' stamp: 'IO 11/1/2020 18:51:50' prior: 50890625!
test42XCantMoveToOutsideTheBoard
	"X no puede mover hac�a afuera del tablero"
	

	| aGame |

	aGame := self createGameInMovePhase .
	
	self should: [	aGame moveXFrom: 0@1 to: -1@1.] raise: Error withMessageText: TerniLapilliGame invalidPositionErrorMessage. 
	self should: [	aGame moveXFrom: 0@1 to: 3@1.] raise: Error withMessageText: TerniLapilliGame invalidPositionErrorMessage. 
	self should: [	aGame moveXFrom: 0@1 to: 1@-1.] raise: Error withMessageText: TerniLapilliGame invalidPositionErrorMessage. 
	self should: [	aGame moveXFrom: 0@1 to: 1@3.] raise: Error withMessageText: TerniLapilliGame invalidPositionErrorMessage. 
! !
!TerniLapilliGameTest methodsFor: 'ilegal positions' stamp: 'IO 11/1/2020 18:51:55' prior: 50890753!
test43OCantMoveToOutsideTheBoard
	"O no puede mover hac�a afuera del tablero"
	

	| aGame |

	aGame := self createGameInMovePhase .
	aGame moveXFrom: 0@1 to: 0@0.
	
	self should: [	aGame moveOFrom: 0@2 to: -1@1.] raise: Error withMessageText: TerniLapilliGame invalidPositionErrorMessage. 
	self should: [	aGame moveOFrom: 0@2 to: 3@1.] raise: Error withMessageText: TerniLapilliGame invalidPositionErrorMessage. 
	self should: [	aGame moveOFrom: 0@2 to: 1@-1.] raise: Error withMessageText: TerniLapilliGame invalidPositionErrorMessage. 
	self should: [	aGame moveOFrom: 0@2 to: 1@3.] raise: Error withMessageText: TerniLapilliGame invalidPositionErrorMessage. 
	
! !
!TerniLapilliGameTest methodsFor: 'ilegal positions' stamp: 'IO 11/1/2020 18:51:59' prior: 50890596!
test44XCantMoveTokensThatDontBelongToThem
	"X no puede mover fichas que no sea suyas"
	

	| aGame |

	aGame := self createGameInMovePhase .
	
	self should: [	aGame moveXFrom: 0@2 to: 1@1.] raise: Error withMessageText: TerniLapilliGame invalidPositionErrorMessage.
	self should: [	aGame moveXFrom: 3@2 to: 1@1.] raise: Error withMessageText: TerniLapilliGame invalidPositionErrorMessage.! !
!TerniLapilliGameTest methodsFor: 'ilegal positions' stamp: 'IO 11/1/2020 18:52:02' prior: 50890789!
test45OCantMoveTokensThatDontBelongToThem
	"O no puede mover fichas que no sea suyas"
	

	| aGame |

	aGame := self createGameInMovePhase .
	aGame moveXFrom: 0@1 to: 1@1.
	
	self should: [	aGame moveOFrom: 1@1 to: 0@1.] raise: Error withMessageText: TerniLapilliGame invalidPositionErrorMessage.
	self should: [	aGame moveOFrom: 3@1 to: 0@1.] raise: Error withMessageText: TerniLapilliGame invalidPositionErrorMessage.! !
!TerniLapilliGameTest methodsFor: 'ilegal positions' stamp: 'IO 11/1/2020 18:52:04' prior: 50890560!
test46XCantMoveaTokenOutsideItsNeighbors
	"X no puede mover fichas hacia m�s de 1 vecinidad"
	

	| aGame |

	aGame := self createGameInMovePhase .
	
	self should: [	aGame moveXFrom: 2@0 to: 0@0.] raise: Error withMessageText: TerniLapilliGame invalidPositionErrorMessage.! !
!TerniLapilliGameTest methodsFor: 'ilegal positions' stamp: 'IO 11/1/2020 18:52:07' prior: 50890823!
test47OCantMoveATokenOutsideItsNeighbors
	"O no puede mover fichas hacia m�s de 1 vecinidad"
	

	| aGame |

	aGame := self createGameInMovePhase .
	aGame moveXFrom: 0@1 to: 0@0.
	
	self should: [	aGame moveOFrom: 2@1 to: 0@1.] raise: Error withMessageText: TerniLapilliGame invalidPositionErrorMessage.! !

!testRun: #TerniLapilliGameTest #test47OCantMoveATokenOutsideItsNeighbors stamp: 'IO 11/1/2020 18:52:09'!
FAILURE!
!TerniLapilliPlayerTokens methodsFor: 'validations' stamp: 'IO 11/1/2020 18:52:25' prior: 50893542!
validateIsInBoard: aPosition withErrorMessage: errorMessage

	"signal when a position is invalid with a given error message"

	(
		(aPosition x < 3) and:
		(aPosition x >= 0) and:
		(aPosition y < 3) and:
		(aPosition y >=0)
	) ifFalse: [^self error: TerniLapilliGame invalidPositionErrorMessage].
! !
!TerniLapilliPlayerTokens methodsFor: 'validations' stamp: 'IO 11/1/2020 18:52:38' prior: 50895759!
validateIsLegalMoveFrom: sourcePosition to: destinationPosition

	"signal when a token cannot be moved from a given position to another"

	(
		(self includes: sourcePosition) and:
		(sourcePosition eightNeighbors includes: destinationPosition)
	) ifFalse: [^self error: TerniLapilliGame invalidPositionErrorMessage].

	self validateIsInBoard: destinationPosition withErrorMessage: TerniLapilliGame cannotMoveErrorMessage.
! !

!testRun: #TerniLapilliGameTest #test01XCanPutAToken stamp: 'IO 11/1/2020 18:52:41'!
PASSED!

!testRun: #TerniLapilliGameTest #test02puttingDoesNotAffectOtherPositions stamp: 'IO 11/1/2020 18:52:41'!
PASSED!

!testRun: #TerniLapilliGameTest #test03XCanPutInOtherPositions stamp: 'IO 11/1/2020 18:52:41'!
PASSED!

!testRun: #TerniLapilliGameTest #test04OCanPut stamp: 'IO 11/1/2020 18:52:41'!
PASSED!

!testRun: #TerniLapilliGameTest #test05XCanMove stamp: 'IO 11/1/2020 18:52:41'!
PASSED!

!testRun: #TerniLapilliGameTest #test06OCanMove stamp: 'IO 11/1/2020 18:52:41'!
PASSED!

!testRun: #TerniLapilliGameTest #test07XWinsWithTheFirstColumn stamp: 'IO 11/1/2020 18:52:41'!
PASSED!

!testRun: #TerniLapilliGameTest #test08XHasntWonYet stamp: 'IO 11/1/2020 18:52:41'!
PASSED!

!testRun: #TerniLapilliGameTest #test09XWinsWithTheSecondColumn stamp: 'IO 11/1/2020 18:52:41'!
PASSED!

!testRun: #TerniLapilliGameTest #test10XWinsWithTheThirdColumn stamp: 'IO 11/1/2020 18:52:41'!
PASSED!

!testRun: #TerniLapilliGameTest #test11XWinsWithTheFirstRow stamp: 'IO 11/1/2020 18:52:41'!
PASSED!

!testRun: #TerniLapilliGameTest #test12XWinsWithTheSecondRow stamp: 'IO 11/1/2020 18:52:41'!
PASSED!

!testRun: #TerniLapilliGameTest #test13XWinsWithTheThirdRow stamp: 'IO 11/1/2020 18:52:41'!
PASSED!

!testRun: #TerniLapilliGameTest #test14XWinsWithTheCrescentDiagonal stamp: 'IO 11/1/2020 18:52:41'!
PASSED!

!testRun: #TerniLapilliGameTest #test15XWinsWithTheDescendantDiagonal stamp: 'IO 11/1/2020 18:52:41'!
PASSED!

!testRun: #TerniLapilliGameTest #test16OWnis stamp: 'IO 11/1/2020 18:52:41'!
PASSED!

!testRun: #TerniLapilliGameTest #test17OCantStartPutting stamp: 'IO 11/1/2020 18:52:41'!
PASSED!

!testRun: #TerniLapilliGameTest #test18XCantPutTwiceInARow stamp: 'IO 11/1/2020 18:52:41'!
PASSED!

!testRun: #TerniLapilliGameTest #test19XCantMoveTwiceInARow stamp: 'IO 11/1/2020 18:52:41'!
PASSED!

!testRun: #TerniLapilliGameTest #test20OCantPutTwiceInARow stamp: 'IO 11/1/2020 18:52:41'!
PASSED!

!testRun: #TerniLapilliGameTest #test21OCantMoveTwiceInARow stamp: 'IO 11/1/2020 18:52:41'!
PASSED!

!testRun: #TerniLapilliGameTest #test22XCantMoveOnTheirFirstTurn stamp: 'IO 11/1/2020 18:52:41'!
PASSED!

!testRun: #TerniLapilliGameTest #test23XCantMoveOnTheirSecondTurn stamp: 'IO 11/1/2020 18:52:41'!
PASSED!

!testRun: #TerniLapilliGameTest #test24XCantMoveOnTheirThirdTurn stamp: 'IO 11/1/2020 18:52:41'!
PASSED!

!testRun: #TerniLapilliGameTest #test25OCantMoveOnTheirFirstTurn stamp: 'IO 11/1/2020 18:52:41'!
PASSED!

!testRun: #TerniLapilliGameTest #test26OCantMoveOnTheirSecondTurn stamp: 'IO 11/1/2020 18:52:41'!
PASSED!

!testRun: #TerniLapilliGameTest #test27OCantMoveOnTheirThirdTurn stamp: 'IO 11/1/2020 18:52:41'!
PASSED!

!testRun: #TerniLapilliGameTest #test28XCantPutAfterTheirThirdTurn stamp: 'IO 11/1/2020 18:52:41'!
PASSED!

!testRun: #TerniLapilliGameTest #test29OCantPutAfterTheirThirdTurn stamp: 'IO 11/1/2020 18:52:41'!
PASSED!

!testRun: #TerniLapilliGameTest #test30OCantPutAfterXWon stamp: 'IO 11/1/2020 18:52:41'!
PASSED!

!testRun: #TerniLapilliGameTest #test31OCantMoveAfterXWon stamp: 'IO 11/1/2020 18:52:41'!
PASSED!

!testRun: #TerniLapilliGameTest #test32XCantMoveAfterOWon stamp: 'IO 11/1/2020 18:52:41'!
PASSED!

!testRun: #TerniLapilliGameTest #test33XCantPutAfterOWon stamp: 'IO 11/1/2020 18:52:41'!
PASSED!

!testRun: #TerniLapilliGameTest #test34XCantPutInAnOccupiedSpace stamp: 'IO 11/1/2020 18:52:41'!
FAILURE!

!testRun: #TerniLapilliGameTest #test35OCantPutInAnOccupiedSpace stamp: 'IO 11/1/2020 18:52:41'!
FAILURE!

!testRun: #TerniLapilliGameTest #test36XCantMoveToAnOccupiedSpace stamp: 'IO 11/1/2020 18:52:41'!
FAILURE!

!testRun: #TerniLapilliGameTest #test37OCantMoveToAnOccupiedSpace stamp: 'IO 11/1/2020 18:52:41'!
FAILURE!

!testRun: #TerniLapilliGameTest #test38XCantPutOutsideTheBoardUnderXAxis stamp: 'IO 11/1/2020 18:52:41'!
PASSED!

!testRun: #TerniLapilliGameTest #test39XCantPutOutsideTheBoardAboveXAxis stamp: 'IO 11/1/2020 18:52:41'!
PASSED!

!testRun: #TerniLapilliGameTest #test40XCantPutOutsideTheBoardUnderNorAboveTheYAxis stamp: 'IO 11/1/2020 18:52:41'!
PASSED!

!testRun: #TerniLapilliGameTest #test41OCantPutOutsideTheBoard stamp: 'IO 11/1/2020 18:52:41'!
PASSED!

!testRun: #TerniLapilliGameTest #test42XCantMoveToOutsideTheBoard stamp: 'IO 11/1/2020 18:52:41'!
PASSED!

!testRun: #TerniLapilliGameTest #test43OCantMoveToOutsideTheBoard stamp: 'IO 11/1/2020 18:52:41'!
PASSED!

!testRun: #TerniLapilliGameTest #test44XCantMoveTokensThatDontBelongToThem stamp: 'IO 11/1/2020 18:52:41'!
PASSED!

!testRun: #TerniLapilliGameTest #test45OCantMoveTokensThatDontBelongToThem stamp: 'IO 11/1/2020 18:52:41'!
PASSED!

!testRun: #TerniLapilliGameTest #test46XCantMoveaTokenOutsideItsNeighbors stamp: 'IO 11/1/2020 18:52:41'!
PASSED!

!testRun: #TerniLapilliGameTest #test47OCantMoveATokenOutsideItsNeighbors stamp: 'IO 11/1/2020 18:52:41'!
PASSED!

!testRun: #TerniLapilliGameTest #test42XCantMoveToOutsideTheBoard stamp: 'IO 11/1/2020 18:53:07'!
PASSED!

!testRun: #TerniLapilliGameTest #test01XCanPutAToken stamp: 'IO 11/1/2020 18:53:07'!
PASSED!

!testRun: #TerniLapilliGameTest #test02puttingDoesNotAffectOtherPositions stamp: 'IO 11/1/2020 18:53:07'!
PASSED!

!testRun: #TerniLapilliGameTest #test03XCanPutInOtherPositions stamp: 'IO 11/1/2020 18:53:07'!
PASSED!

!testRun: #TerniLapilliGameTest #test04OCanPut stamp: 'IO 11/1/2020 18:53:07'!
PASSED!

!testRun: #TerniLapilliGameTest #test05XCanMove stamp: 'IO 11/1/2020 18:53:07'!
PASSED!

!testRun: #TerniLapilliGameTest #test06OCanMove stamp: 'IO 11/1/2020 18:53:07'!
PASSED!

!testRun: #TerniLapilliGameTest #test07XWinsWithTheFirstColumn stamp: 'IO 11/1/2020 18:53:07'!
PASSED!

!testRun: #TerniLapilliGameTest #test08XHasntWonYet stamp: 'IO 11/1/2020 18:53:07'!
PASSED!

!testRun: #TerniLapilliGameTest #test09XWinsWithTheSecondColumn stamp: 'IO 11/1/2020 18:53:07'!
PASSED!

!testRun: #TerniLapilliGameTest #test10XWinsWithTheThirdColumn stamp: 'IO 11/1/2020 18:53:07'!
PASSED!

!testRun: #TerniLapilliGameTest #test11XWinsWithTheFirstRow stamp: 'IO 11/1/2020 18:53:07'!
PASSED!

!testRun: #TerniLapilliGameTest #test12XWinsWithTheSecondRow stamp: 'IO 11/1/2020 18:53:07'!
PASSED!

!testRun: #TerniLapilliGameTest #test13XWinsWithTheThirdRow stamp: 'IO 11/1/2020 18:53:07'!
PASSED!

!testRun: #TerniLapilliGameTest #test14XWinsWithTheCrescentDiagonal stamp: 'IO 11/1/2020 18:53:07'!
PASSED!

!testRun: #TerniLapilliGameTest #test15XWinsWithTheDescendantDiagonal stamp: 'IO 11/1/2020 18:53:07'!
PASSED!

!testRun: #TerniLapilliGameTest #test16OWnis stamp: 'IO 11/1/2020 18:53:07'!
PASSED!

!testRun: #TerniLapilliGameTest #test17OCantStartPutting stamp: 'IO 11/1/2020 18:53:07'!
PASSED!

!testRun: #TerniLapilliGameTest #test18XCantPutTwiceInARow stamp: 'IO 11/1/2020 18:53:07'!
PASSED!

!testRun: #TerniLapilliGameTest #test19XCantMoveTwiceInARow stamp: 'IO 11/1/2020 18:53:07'!
PASSED!

!testRun: #TerniLapilliGameTest #test20OCantPutTwiceInARow stamp: 'IO 11/1/2020 18:53:07'!
PASSED!

!testRun: #TerniLapilliGameTest #test21OCantMoveTwiceInARow stamp: 'IO 11/1/2020 18:53:07'!
PASSED!

!testRun: #TerniLapilliGameTest #test22XCantMoveOnTheirFirstTurn stamp: 'IO 11/1/2020 18:53:07'!
PASSED!

!testRun: #TerniLapilliGameTest #test23XCantMoveOnTheirSecondTurn stamp: 'IO 11/1/2020 18:53:07'!
PASSED!

!testRun: #TerniLapilliGameTest #test24XCantMoveOnTheirThirdTurn stamp: 'IO 11/1/2020 18:53:07'!
PASSED!

!testRun: #TerniLapilliGameTest #test25OCantMoveOnTheirFirstTurn stamp: 'IO 11/1/2020 18:53:07'!
PASSED!

!testRun: #TerniLapilliGameTest #test26OCantMoveOnTheirSecondTurn stamp: 'IO 11/1/2020 18:53:07'!
PASSED!

!testRun: #TerniLapilliGameTest #test27OCantMoveOnTheirThirdTurn stamp: 'IO 11/1/2020 18:53:07'!
PASSED!

!testRun: #TerniLapilliGameTest #test28XCantPutAfterTheirThirdTurn stamp: 'IO 11/1/2020 18:53:07'!
PASSED!

!testRun: #TerniLapilliGameTest #test29OCantPutAfterTheirThirdTurn stamp: 'IO 11/1/2020 18:53:07'!
PASSED!

!testRun: #TerniLapilliGameTest #test30OCantPutAfterXWon stamp: 'IO 11/1/2020 18:53:07'!
PASSED!

!testRun: #TerniLapilliGameTest #test31OCantMoveAfterXWon stamp: 'IO 11/1/2020 18:53:07'!
PASSED!

!testRun: #TerniLapilliGameTest #test32XCantMoveAfterOWon stamp: 'IO 11/1/2020 18:53:07'!
PASSED!

!testRun: #TerniLapilliGameTest #test33XCantPutAfterOWon stamp: 'IO 11/1/2020 18:53:07'!
PASSED!

!testRun: #TerniLapilliGameTest #test34XCantPutInAnOccupiedSpace stamp: 'IO 11/1/2020 18:53:07'!
FAILURE!

!testRun: #TerniLapilliGameTest #test35OCantPutInAnOccupiedSpace stamp: 'IO 11/1/2020 18:53:07'!
FAILURE!

!testRun: #TerniLapilliGameTest #test36XCantMoveToAnOccupiedSpace stamp: 'IO 11/1/2020 18:53:07'!
FAILURE!

!testRun: #TerniLapilliGameTest #test37OCantMoveToAnOccupiedSpace stamp: 'IO 11/1/2020 18:53:07'!
FAILURE!

!testRun: #TerniLapilliGameTest #test38XCantPutOutsideTheBoardUnderXAxis stamp: 'IO 11/1/2020 18:53:07'!
PASSED!

!testRun: #TerniLapilliGameTest #test39XCantPutOutsideTheBoardAboveXAxis stamp: 'IO 11/1/2020 18:53:07'!
PASSED!

!testRun: #TerniLapilliGameTest #test40XCantPutOutsideTheBoardUnderNorAboveTheYAxis stamp: 'IO 11/1/2020 18:53:07'!
PASSED!

!testRun: #TerniLapilliGameTest #test41OCantPutOutsideTheBoard stamp: 'IO 11/1/2020 18:53:07'!
PASSED!

!testRun: #TerniLapilliGameTest #test42XCantMoveToOutsideTheBoard stamp: 'IO 11/1/2020 18:53:07'!
PASSED!

!testRun: #TerniLapilliGameTest #test43OCantMoveToOutsideTheBoard stamp: 'IO 11/1/2020 18:53:07'!
PASSED!

!testRun: #TerniLapilliGameTest #test44XCantMoveTokensThatDontBelongToThem stamp: 'IO 11/1/2020 18:53:07'!
PASSED!

!testRun: #TerniLapilliGameTest #test45OCantMoveTokensThatDontBelongToThem stamp: 'IO 11/1/2020 18:53:07'!
PASSED!

!testRun: #TerniLapilliGameTest #test46XCantMoveaTokenOutsideItsNeighbors stamp: 'IO 11/1/2020 18:53:07'!
PASSED!

!testRun: #TerniLapilliGameTest #test47OCantMoveATokenOutsideItsNeighbors stamp: 'IO 11/1/2020 18:53:07'!
PASSED!

!testRun: #TerniLapilliGameTest #test34XCantPutInAnOccupiedSpace stamp: 'IO 11/1/2020 18:53:22'!
FAILURE!

!testRun: #TerniLapilliGameTest #test01XCanPutAToken stamp: 'IO 11/1/2020 18:54:04'!
PASSED!

!testRun: #TerniLapilliGameTest #test02puttingDoesNotAffectOtherPositions stamp: 'IO 11/1/2020 18:54:04'!
PASSED!

!testRun: #TerniLapilliGameTest #test03XCanPutInOtherPositions stamp: 'IO 11/1/2020 18:54:04'!
PASSED!

!testRun: #TerniLapilliGameTest #test04OCanPut stamp: 'IO 11/1/2020 18:54:04'!
PASSED!

!testRun: #TerniLapilliGameTest #test05XCanMove stamp: 'IO 11/1/2020 18:54:04'!
PASSED!

!testRun: #TerniLapilliGameTest #test06OCanMove stamp: 'IO 11/1/2020 18:54:04'!
PASSED!

!testRun: #TerniLapilliGameTest #test07XWinsWithTheFirstColumn stamp: 'IO 11/1/2020 18:54:04'!
PASSED!

!testRun: #TerniLapilliGameTest #test08XHasntWonYet stamp: 'IO 11/1/2020 18:54:04'!
PASSED!

!testRun: #TerniLapilliGameTest #test09XWinsWithTheSecondColumn stamp: 'IO 11/1/2020 18:54:04'!
PASSED!

!testRun: #TerniLapilliGameTest #test10XWinsWithTheThirdColumn stamp: 'IO 11/1/2020 18:54:04'!
PASSED!

!testRun: #TerniLapilliGameTest #test11XWinsWithTheFirstRow stamp: 'IO 11/1/2020 18:54:04'!
PASSED!

!testRun: #TerniLapilliGameTest #test12XWinsWithTheSecondRow stamp: 'IO 11/1/2020 18:54:04'!
PASSED!

!testRun: #TerniLapilliGameTest #test13XWinsWithTheThirdRow stamp: 'IO 11/1/2020 18:54:04'!
PASSED!

!testRun: #TerniLapilliGameTest #test14XWinsWithTheCrescentDiagonal stamp: 'IO 11/1/2020 18:54:04'!
PASSED!

!testRun: #TerniLapilliGameTest #test15XWinsWithTheDescendantDiagonal stamp: 'IO 11/1/2020 18:54:04'!
PASSED!

!testRun: #TerniLapilliGameTest #test16OWnis stamp: 'IO 11/1/2020 18:54:04'!
PASSED!

!testRun: #TerniLapilliGameTest #test17OCantStartPutting stamp: 'IO 11/1/2020 18:54:04'!
PASSED!

!testRun: #TerniLapilliGameTest #test18XCantPutTwiceInARow stamp: 'IO 11/1/2020 18:54:04'!
PASSED!

!testRun: #TerniLapilliGameTest #test19XCantMoveTwiceInARow stamp: 'IO 11/1/2020 18:54:04'!
PASSED!

!testRun: #TerniLapilliGameTest #test20OCantPutTwiceInARow stamp: 'IO 11/1/2020 18:54:04'!
PASSED!

!testRun: #TerniLapilliGameTest #test21OCantMoveTwiceInARow stamp: 'IO 11/1/2020 18:54:04'!
PASSED!

!testRun: #TerniLapilliGameTest #test22XCantMoveOnTheirFirstTurn stamp: 'IO 11/1/2020 18:54:04'!
PASSED!

!testRun: #TerniLapilliGameTest #test23XCantMoveOnTheirSecondTurn stamp: 'IO 11/1/2020 18:54:04'!
PASSED!

!testRun: #TerniLapilliGameTest #test24XCantMoveOnTheirThirdTurn stamp: 'IO 11/1/2020 18:54:04'!
PASSED!

!testRun: #TerniLapilliGameTest #test25OCantMoveOnTheirFirstTurn stamp: 'IO 11/1/2020 18:54:04'!
PASSED!

!testRun: #TerniLapilliGameTest #test26OCantMoveOnTheirSecondTurn stamp: 'IO 11/1/2020 18:54:04'!
PASSED!

!testRun: #TerniLapilliGameTest #test27OCantMoveOnTheirThirdTurn stamp: 'IO 11/1/2020 18:54:04'!
PASSED!

!testRun: #TerniLapilliGameTest #test28XCantPutAfterTheirThirdTurn stamp: 'IO 11/1/2020 18:54:04'!
PASSED!

!testRun: #TerniLapilliGameTest #test29OCantPutAfterTheirThirdTurn stamp: 'IO 11/1/2020 18:54:04'!
PASSED!

!testRun: #TerniLapilliGameTest #test30OCantPutAfterXWon stamp: 'IO 11/1/2020 18:54:04'!
PASSED!

!testRun: #TerniLapilliGameTest #test31OCantMoveAfterXWon stamp: 'IO 11/1/2020 18:54:04'!
PASSED!

!testRun: #TerniLapilliGameTest #test32XCantMoveAfterOWon stamp: 'IO 11/1/2020 18:54:04'!
PASSED!

!testRun: #TerniLapilliGameTest #test33XCantPutAfterOWon stamp: 'IO 11/1/2020 18:54:04'!
PASSED!

!testRun: #TerniLapilliGameTest #test34XCantPutInAnOccupiedSpace stamp: 'IO 11/1/2020 18:54:04'!
FAILURE!

!testRun: #TerniLapilliGameTest #test35OCantPutInAnOccupiedSpace stamp: 'IO 11/1/2020 18:54:04'!
FAILURE!

!testRun: #TerniLapilliGameTest #test36XCantMoveToAnOccupiedSpace stamp: 'IO 11/1/2020 18:54:04'!
FAILURE!

!testRun: #TerniLapilliGameTest #test37OCantMoveToAnOccupiedSpace stamp: 'IO 11/1/2020 18:54:04'!
FAILURE!

!testRun: #TerniLapilliGameTest #test38XCantPutOutsideTheBoardUnderXAxis stamp: 'IO 11/1/2020 18:54:04'!
PASSED!

!testRun: #TerniLapilliGameTest #test39XCantPutOutsideTheBoardAboveXAxis stamp: 'IO 11/1/2020 18:54:04'!
PASSED!

!testRun: #TerniLapilliGameTest #test40XCantPutOutsideTheBoardUnderNorAboveTheYAxis stamp: 'IO 11/1/2020 18:54:04'!
PASSED!

!testRun: #TerniLapilliGameTest #test41OCantPutOutsideTheBoard stamp: 'IO 11/1/2020 18:54:04'!
PASSED!

!testRun: #TerniLapilliGameTest #test42XCantMoveToOutsideTheBoard stamp: 'IO 11/1/2020 18:54:04'!
PASSED!

!testRun: #TerniLapilliGameTest #test43OCantMoveToOutsideTheBoard stamp: 'IO 11/1/2020 18:54:04'!
PASSED!

!testRun: #TerniLapilliGameTest #test44XCantMoveTokensThatDontBelongToThem stamp: 'IO 11/1/2020 18:54:04'!
PASSED!

!testRun: #TerniLapilliGameTest #test45OCantMoveTokensThatDontBelongToThem stamp: 'IO 11/1/2020 18:54:04'!
PASSED!

!testRun: #TerniLapilliGameTest #test46XCantMoveaTokenOutsideItsNeighbors stamp: 'IO 11/1/2020 18:54:04'!
PASSED!

!testRun: #TerniLapilliGameTest #test47OCantMoveATokenOutsideItsNeighbors stamp: 'IO 11/1/2020 18:54:04'!
PASSED!
!TerniLapilliGame class methodsFor: 'error messages' stamp: 'IO 11/1/2020 18:55:31'!
occupiedPositionErrorMessage

	^'The given position is occupied by another token'.
! !
!TerniLapilliGame methodsFor: 'moves' stamp: 'IO 11/1/2020 18:56:08' prior: 50895305!
putOAt: aPosition

	"put an O token in a given position of the board"

	(self includes: aPosition ) ifTrue:[^self error: TerniLapilliGame occupiedPositionErrorMessage].
	state := state putOAt: aPosition.
! !
!TerniLapilliGame methodsFor: 'moves' stamp: 'IO 11/1/2020 18:56:11' prior: 50895246!
putXAt: aPosition

	"put an O token in a given position of the board"

	(self includes: aPosition ) ifTrue:[^self error: TerniLapilliGame occupiedPositionErrorMessage].
	state := state putXAt: aPosition.
! !
!TerniLapilliPlayerTokens methodsFor: 'validations' stamp: 'IO 11/1/2020 18:57:52' prior: 50896263!
validateIsLegalMoveFrom: sourcePosition to: destinationPosition

	"signal when a token cannot be moved from a given position to another"

	(self includes: sourcePosition) ifFalse: [
		^self error: TerniLapilliGame invalidPositionErrorMessage].
	(sourcePosition eightNeighbors includes: destinationPosition) ifFalse: [
		^self error: TerniLapilliGame occupiedPositionErrorMessage].

	self validateIsInBoard: destinationPosition withErrorMessage: TerniLapilliGame cannotMoveErrorMessage.
! !
!TerniLapilliGame class methodsFor: 'error messages' stamp: 'IO 11/1/2020 18:58:49'!
 noTokenAtPositionErrorMessage

	^'You dont own a token at the given position'.
! !
!TerniLapilliPlayerTokens methodsFor: 'validations' stamp: 'IO 11/1/2020 18:59:08' prior: 50896772!
validateIsLegalMoveFrom: sourcePosition to: destinationPosition

	"signal when a token cannot be moved from a given position to another"

	(self includes: sourcePosition) ifFalse: [
		^self error: TerniLapilliGame noTokenAtPositionErrorMessage].
	(sourcePosition eightNeighbors includes: destinationPosition) ifFalse: [
		^self error: TerniLapilliGame occupiedPositionErrorMessage].

	self validateIsInBoard: destinationPosition withErrorMessage: TerniLapilliGame cannotMoveErrorMessage.
! !
!TerniLapilliGameTest methodsFor: 'ilegal positions' stamp: 'IO 11/1/2020 18:59:45' prior: 50896020!
test34XCantPutInAnOccupiedSpace
	"X no puede poner en un lugar ocupado"
	

	| aGame |
	
	aGame := TerniLapilliGame new.
	
	aGame putXAt: 0@0.
	aGame putOAt: 2@0.

	self should: [	aGame putXAt: 0@0.] raise: Error withMessageText: TerniLapilliGame occupiedPositionErrorMessage.
	self should: [	aGame putXAt: 2@0.] raise: Error withMessageText: TerniLapilliGame invalidPositionErrorMessage .
! !
!TerniLapilliGameTest methodsFor: 'ilegal positions' stamp: 'IO 11/1/2020 18:59:48' prior: 50896815!
test34XCantPutInAnOccupiedSpace
	"X no puede poner en un lugar ocupado"
	

	| aGame |
	
	aGame := TerniLapilliGame new.
	
	aGame putXAt: 0@0.
	aGame putOAt: 2@0.

	self should: [	aGame putXAt: 0@0.] raise: Error withMessageText: TerniLapilliGame occupiedPositionErrorMessage.
	self should: [	aGame putXAt: 2@0.] raise: Error withMessageText: TerniLapilliGame occupiedPositionErrorMessage.
! !
!TerniLapilliGameTest methodsFor: 'ilegal positions' stamp: 'IO 11/1/2020 19:00:01' prior: 50896036!
test35OCantPutInAnOccupiedSpace
	"O no puede poner en un lugar ocupado"
	

	| aGame |
	
	aGame := TerniLapilliGame new.
	
	aGame putXAt: 0@0.
	aGame putOAt: 0@1.
	aGame putXAt: 0@2.

	self should: [	aGame putOAt: 0@0.] raise: Error withMessageText: TerniLapilliGame occupiedPositionErrorMessage .
	self should: [	aGame putOAt: 0@1.] raise: Error withMessageText: TerniLapilliGame occupiedPositionErrorMessage .
! !
!TerniLapilliGameTest methodsFor: 'ilegal positions' stamp: 'IO 11/1/2020 19:00:13' prior: 50896053!
test36XCantMoveToAnOccupiedSpace
	"X no puede mover en un lugar ocupado"
	

	| aGame |
	
	aGame := self createGameInMovePhase .
	
	self should: [	aGame moveXFrom: 1@2 to: 2@1.] raise: Error withMessageText: TerniLapilliGame occupiedPositionErrorMessage .
! !
!TerniLapilliGameTest methodsFor: 'ilegal positions' stamp: 'IO 11/1/2020 19:00:50' prior: 50896065!
test37OCantMoveToAnOccupiedSpace
	"O no puede mover en un lugar ocupado"
	

	| aGame |
	
	aGame := self createGameInMovePhase .
	aGame moveXFrom: 0@1 to: 0@0.
	
	self should: [	aGame moveOFrom: 2@1 to: 1@2.] raise: Error withMessageText: TerniLapilliGame occupiedPositionErrorMessage.
! !
!TerniLapilliGameTest methodsFor: 'ilegal positions' stamp: 'IO 11/1/2020 19:00:57' prior: 50896078!
test38XCantPutOutsideTheBoardUnderXAxis
	"X no puede poner afuera del tablero por x, por abajo"
	

	| aGame |
	
	aGame := TerniLapilliGame new.
	
	self should: [	aGame putXAt: -1@1.] raise: Error withMessageText: TerniLapilliGame invalidPositionErrorMessage .
! !
!TerniLapilliGameTest methodsFor: 'ilegal positions' stamp: 'IO 11/1/2020 19:01:05' prior: 50896090!
test39XCantPutOutsideTheBoardAboveXAxis
	"X no puede poner afuera del tablero por x, por arriba"
	

	| aGame |
	
	aGame := TerniLapilliGame new.
	
	self should: [	aGame putXAt: 3@1.] raise: Error withMessageText: TerniLapilliGame invalidPositionErrorMessage .
! !
!TerniLapilliGameTest methodsFor: 'ilegal positions' stamp: 'IO 11/1/2020 19:01:09' prior: 50896102!
test40XCantPutOutsideTheBoardUnderNorAboveTheYAxis
	"X no puede poner afuera del tablero por y"
	

	| aGame |
	
	aGame := TerniLapilliGame new.
	
	self should: [	aGame putXAt: 1@-1.] raise: Error withMessageText: TerniLapilliGame invalidPositionErrorMessage .
	self should: [	aGame putXAt: 1@3.] raise: Error withMessageText: TerniLapilliGame invalidPositionErrorMessage .
! !
!TerniLapilliGameTest methodsFor: 'ilegal positions' stamp: 'IO 11/1/2020 19:01:36' prior: 50896204!
test45OCantMoveTokensThatDontBelongToThem
	"O no puede mover fichas que no sea suyas"
	

	| aGame |

	aGame := self createGameInMovePhase .
	aGame moveXFrom: 0@1 to: 1@1.
	
	self should: [	aGame moveOFrom: 1@1 to: 0@1.] raise: Error withMessageText: TerniLapilliGame noTokenAtPositionErrorMessage.
	self should: [	aGame moveOFrom: 3@1 to: 0@1.] raise: Error withMessageText: TerniLapilliGame invalidPositionErrorMessage.! !
!TerniLapilliGameTest methodsFor: 'ilegal positions' stamp: 'IO 11/1/2020 19:01:38' prior: 50896928!
test45OCantMoveTokensThatDontBelongToThem
	"O no puede mover fichas que no sea suyas"
	

	| aGame |

	aGame := self createGameInMovePhase .
	aGame moveXFrom: 0@1 to: 1@1.
	
	self should: [	aGame moveOFrom: 1@1 to: 0@1.] raise: Error withMessageText: TerniLapilliGame noTokenAtPositionErrorMessage.
	self should: [	aGame moveOFrom: 3@1 to: 0@1.] raise: Error withMessageText: TerniLapilliGame noTokenAtPositionErrorMessage.! !
!TerniLapilliGameTest methodsFor: 'ilegal positions' stamp: 'IO 11/1/2020 19:01:44' prior: 50896188!
test44XCantMoveTokensThatDontBelongToThem
	"X no puede mover fichas que no sea suyas"
	

	| aGame |

	aGame := self createGameInMovePhase .
	
	self should: [	aGame moveXFrom: 0@2 to: 1@1.] raise: Error withMessageText: TerniLapilliGame noTokenAtPositionErrorMessage.
	self should: [	aGame moveXFrom: 3@2 to: 1@1.] raise: Error withMessageText: TerniLapilliGame noTokenAtPositionErrorMessage.! !
!TerniLapilliPlayerTokens methodsFor: 'validations' stamp: 'IO 11/1/2020 19:02:24' prior: 50896796!
validateIsLegalMoveFrom: sourcePosition to: destinationPosition

	"signal when a token cannot be moved from a given position to another"

	(self includes: sourcePosition) ifFalse: [
		^self error: TerniLapilliGame noTokenAtPositionErrorMessage].
	(sourcePosition eightNeighbors includes: destinationPosition) ifFalse: [
		^self error: TerniLapilliGame invalidDestinationErrorMessage].

	self validateIsInBoard: destinationPosition withErrorMessage: TerniLapilliGame cannotMoveErrorMessage.
! !
!TerniLapilliGame class methodsFor: 'error messages' stamp: 'IO 11/1/2020 19:02:35'!
invalidDestinationErrorMessage

	^'The given destination is invalid'.
! !
!TerniLapilliGame class methodsFor: 'error messages' stamp: 'IO 11/1/2020 19:02:52' prior: 50896997!
invalidDestinationErrorMessage

	^'The given destination is not 1 step from the source position'.
! !
!TerniLapilliGameTest methodsFor: 'ilegal positions' stamp: 'IO 11/1/2020 19:03:17' prior: 50896221!
test46XCantMoveaTokenOutsideItsNeighbors
	"X no puede mover fichas hacia m�s de 1 vecinidad"
	

	| aGame |

	aGame := self createGameInMovePhase .
	
	self should: [	aGame moveXFrom: 2@0 to: 0@0.] raise: Error withMessageText: TerniLapilliGame invalidDestinationErrorMessage.! !
!TerniLapilliGameTest methodsFor: 'ilegal positions' stamp: 'IO 11/1/2020 19:03:20' prior: 50896233!
test47OCantMoveATokenOutsideItsNeighbors
	"O no puede mover fichas hacia m�s de 1 vecinidad"
	

	| aGame |

	aGame := self createGameInMovePhase .
	aGame moveXFrom: 0@1 to: 0@0.
	
	self should: [	aGame moveOFrom: 2@1 to: 0@1.] raise: Error withMessageText: TerniLapilliGame invalidDestinationErrorMessage.! !

!testRun: #TerniLapilliGameTest #test47OCantMoveATokenOutsideItsNeighbors stamp: 'IO 11/1/2020 19:03:21'!
PASSED!

!testRun: #TerniLapilliGameTest #test01XCanPutAToken stamp: 'IO 11/1/2020 19:03:21'!
PASSED!

!testRun: #TerniLapilliGameTest #test02puttingDoesNotAffectOtherPositions stamp: 'IO 11/1/2020 19:03:21'!
PASSED!

!testRun: #TerniLapilliGameTest #test03XCanPutInOtherPositions stamp: 'IO 11/1/2020 19:03:21'!
PASSED!

!testRun: #TerniLapilliGameTest #test04OCanPut stamp: 'IO 11/1/2020 19:03:21'!
PASSED!

!testRun: #TerniLapilliGameTest #test05XCanMove stamp: 'IO 11/1/2020 19:03:21'!
PASSED!

!testRun: #TerniLapilliGameTest #test06OCanMove stamp: 'IO 11/1/2020 19:03:21'!
PASSED!

!testRun: #TerniLapilliGameTest #test07XWinsWithTheFirstColumn stamp: 'IO 11/1/2020 19:03:21'!
PASSED!

!testRun: #TerniLapilliGameTest #test08XHasntWonYet stamp: 'IO 11/1/2020 19:03:21'!
PASSED!

!testRun: #TerniLapilliGameTest #test09XWinsWithTheSecondColumn stamp: 'IO 11/1/2020 19:03:21'!
PASSED!

!testRun: #TerniLapilliGameTest #test10XWinsWithTheThirdColumn stamp: 'IO 11/1/2020 19:03:21'!
PASSED!

!testRun: #TerniLapilliGameTest #test11XWinsWithTheFirstRow stamp: 'IO 11/1/2020 19:03:21'!
PASSED!

!testRun: #TerniLapilliGameTest #test12XWinsWithTheSecondRow stamp: 'IO 11/1/2020 19:03:21'!
PASSED!

!testRun: #TerniLapilliGameTest #test13XWinsWithTheThirdRow stamp: 'IO 11/1/2020 19:03:21'!
PASSED!

!testRun: #TerniLapilliGameTest #test14XWinsWithTheCrescentDiagonal stamp: 'IO 11/1/2020 19:03:21'!
PASSED!

!testRun: #TerniLapilliGameTest #test15XWinsWithTheDescendantDiagonal stamp: 'IO 11/1/2020 19:03:21'!
PASSED!

!testRun: #TerniLapilliGameTest #test16OWnis stamp: 'IO 11/1/2020 19:03:21'!
PASSED!

!testRun: #TerniLapilliGameTest #test17OCantStartPutting stamp: 'IO 11/1/2020 19:03:21'!
PASSED!

!testRun: #TerniLapilliGameTest #test18XCantPutTwiceInARow stamp: 'IO 11/1/2020 19:03:21'!
PASSED!

!testRun: #TerniLapilliGameTest #test19XCantMoveTwiceInARow stamp: 'IO 11/1/2020 19:03:21'!
PASSED!

!testRun: #TerniLapilliGameTest #test20OCantPutTwiceInARow stamp: 'IO 11/1/2020 19:03:21'!
PASSED!

!testRun: #TerniLapilliGameTest #test21OCantMoveTwiceInARow stamp: 'IO 11/1/2020 19:03:21'!
PASSED!

!testRun: #TerniLapilliGameTest #test22XCantMoveOnTheirFirstTurn stamp: 'IO 11/1/2020 19:03:21'!
PASSED!

!testRun: #TerniLapilliGameTest #test23XCantMoveOnTheirSecondTurn stamp: 'IO 11/1/2020 19:03:21'!
PASSED!

!testRun: #TerniLapilliGameTest #test24XCantMoveOnTheirThirdTurn stamp: 'IO 11/1/2020 19:03:21'!
PASSED!

!testRun: #TerniLapilliGameTest #test25OCantMoveOnTheirFirstTurn stamp: 'IO 11/1/2020 19:03:21'!
PASSED!

!testRun: #TerniLapilliGameTest #test26OCantMoveOnTheirSecondTurn stamp: 'IO 11/1/2020 19:03:21'!
PASSED!

!testRun: #TerniLapilliGameTest #test27OCantMoveOnTheirThirdTurn stamp: 'IO 11/1/2020 19:03:21'!
PASSED!

!testRun: #TerniLapilliGameTest #test28XCantPutAfterTheirThirdTurn stamp: 'IO 11/1/2020 19:03:21'!
PASSED!

!testRun: #TerniLapilliGameTest #test29OCantPutAfterTheirThirdTurn stamp: 'IO 11/1/2020 19:03:21'!
PASSED!

!testRun: #TerniLapilliGameTest #test30OCantPutAfterXWon stamp: 'IO 11/1/2020 19:03:21'!
PASSED!

!testRun: #TerniLapilliGameTest #test31OCantMoveAfterXWon stamp: 'IO 11/1/2020 19:03:21'!
PASSED!

!testRun: #TerniLapilliGameTest #test32XCantMoveAfterOWon stamp: 'IO 11/1/2020 19:03:21'!
PASSED!

!testRun: #TerniLapilliGameTest #test33XCantPutAfterOWon stamp: 'IO 11/1/2020 19:03:21'!
PASSED!

!testRun: #TerniLapilliGameTest #test34XCantPutInAnOccupiedSpace stamp: 'IO 11/1/2020 19:03:21'!
PASSED!

!testRun: #TerniLapilliGameTest #test35OCantPutInAnOccupiedSpace stamp: 'IO 11/1/2020 19:03:21'!
PASSED!

!testRun: #TerniLapilliGameTest #test36XCantMoveToAnOccupiedSpace stamp: 'IO 11/1/2020 19:03:21'!
FAILURE!

!testRun: #TerniLapilliGameTest #test37OCantMoveToAnOccupiedSpace stamp: 'IO 11/1/2020 19:03:21'!
FAILURE!

!testRun: #TerniLapilliGameTest #test38XCantPutOutsideTheBoardUnderXAxis stamp: 'IO 11/1/2020 19:03:21'!
PASSED!

!testRun: #TerniLapilliGameTest #test39XCantPutOutsideTheBoardAboveXAxis stamp: 'IO 11/1/2020 19:03:21'!
PASSED!

!testRun: #TerniLapilliGameTest #test40XCantPutOutsideTheBoardUnderNorAboveTheYAxis stamp: 'IO 11/1/2020 19:03:21'!
PASSED!

!testRun: #TerniLapilliGameTest #test41OCantPutOutsideTheBoard stamp: 'IO 11/1/2020 19:03:21'!
PASSED!

!testRun: #TerniLapilliGameTest #test42XCantMoveToOutsideTheBoard stamp: 'IO 11/1/2020 19:03:21'!
FAILURE!

!testRun: #TerniLapilliGameTest #test43OCantMoveToOutsideTheBoard stamp: 'IO 11/1/2020 19:03:21'!
FAILURE!

!testRun: #TerniLapilliGameTest #test44XCantMoveTokensThatDontBelongToThem stamp: 'IO 11/1/2020 19:03:21'!
PASSED!

!testRun: #TerniLapilliGameTest #test45OCantMoveTokensThatDontBelongToThem stamp: 'IO 11/1/2020 19:03:21'!
PASSED!

!testRun: #TerniLapilliGameTest #test46XCantMoveaTokenOutsideItsNeighbors stamp: 'IO 11/1/2020 19:03:21'!
PASSED!

!testRun: #TerniLapilliGameTest #test47OCantMoveATokenOutsideItsNeighbors stamp: 'IO 11/1/2020 19:03:21'!
PASSED!

!testRun: #TerniLapilliGameTest #test36XCantMoveToAnOccupiedSpace stamp: 'IO 11/1/2020 19:03:45'!
FAILURE!
!TerniLapilliGame methodsFor: 'moves' stamp: 'IO 11/1/2020 19:04:19' prior: 50895285!
moveOFrom: aPosition to: aDestination

	"move O's token from a given position of the board to another given position"

	(self includes: aDestination ) ifTrue: [^self error: TerniLapilliGame occupiedPositionErrorMessage].
	state := state moveOFrom: aPosition to: aDestination.
! !
!TerniLapilliGame methodsFor: 'moves' stamp: 'IO 11/1/2020 19:04:23' prior: 50895315!
moveXFrom: aPosition to: aDestination

	"move O's token from a given position of the board to another given position"

	(self includes: aDestination ) ifTrue:[^self error: TerniLapilliGame occupiedPositionErrorMessage].
	state := state moveXFrom: aPosition to: aDestination.
	
	
! !

!testRun: #TerniLapilliGameTest #test01XCanPutAToken stamp: 'IO 11/1/2020 19:04:31'!
PASSED!

!testRun: #TerniLapilliGameTest #test02puttingDoesNotAffectOtherPositions stamp: 'IO 11/1/2020 19:04:31'!
PASSED!

!testRun: #TerniLapilliGameTest #test03XCanPutInOtherPositions stamp: 'IO 11/1/2020 19:04:31'!
PASSED!

!testRun: #TerniLapilliGameTest #test04OCanPut stamp: 'IO 11/1/2020 19:04:31'!
PASSED!

!testRun: #TerniLapilliGameTest #test05XCanMove stamp: 'IO 11/1/2020 19:04:31'!
PASSED!

!testRun: #TerniLapilliGameTest #test06OCanMove stamp: 'IO 11/1/2020 19:04:31'!
PASSED!

!testRun: #TerniLapilliGameTest #test07XWinsWithTheFirstColumn stamp: 'IO 11/1/2020 19:04:31'!
PASSED!

!testRun: #TerniLapilliGameTest #test08XHasntWonYet stamp: 'IO 11/1/2020 19:04:31'!
PASSED!

!testRun: #TerniLapilliGameTest #test09XWinsWithTheSecondColumn stamp: 'IO 11/1/2020 19:04:31'!
PASSED!

!testRun: #TerniLapilliGameTest #test10XWinsWithTheThirdColumn stamp: 'IO 11/1/2020 19:04:31'!
PASSED!

!testRun: #TerniLapilliGameTest #test11XWinsWithTheFirstRow stamp: 'IO 11/1/2020 19:04:31'!
PASSED!

!testRun: #TerniLapilliGameTest #test12XWinsWithTheSecondRow stamp: 'IO 11/1/2020 19:04:31'!
PASSED!

!testRun: #TerniLapilliGameTest #test13XWinsWithTheThirdRow stamp: 'IO 11/1/2020 19:04:31'!
PASSED!

!testRun: #TerniLapilliGameTest #test14XWinsWithTheCrescentDiagonal stamp: 'IO 11/1/2020 19:04:31'!
PASSED!

!testRun: #TerniLapilliGameTest #test15XWinsWithTheDescendantDiagonal stamp: 'IO 11/1/2020 19:04:31'!
PASSED!

!testRun: #TerniLapilliGameTest #test16OWnis stamp: 'IO 11/1/2020 19:04:31'!
PASSED!

!testRun: #TerniLapilliGameTest #test17OCantStartPutting stamp: 'IO 11/1/2020 19:04:31'!
PASSED!

!testRun: #TerniLapilliGameTest #test18XCantPutTwiceInARow stamp: 'IO 11/1/2020 19:04:31'!
PASSED!

!testRun: #TerniLapilliGameTest #test19XCantMoveTwiceInARow stamp: 'IO 11/1/2020 19:04:31'!
PASSED!

!testRun: #TerniLapilliGameTest #test20OCantPutTwiceInARow stamp: 'IO 11/1/2020 19:04:31'!
PASSED!

!testRun: #TerniLapilliGameTest #test21OCantMoveTwiceInARow stamp: 'IO 11/1/2020 19:04:31'!
PASSED!

!testRun: #TerniLapilliGameTest #test22XCantMoveOnTheirFirstTurn stamp: 'IO 11/1/2020 19:04:31'!
PASSED!

!testRun: #TerniLapilliGameTest #test23XCantMoveOnTheirSecondTurn stamp: 'IO 11/1/2020 19:04:31'!
PASSED!

!testRun: #TerniLapilliGameTest #test24XCantMoveOnTheirThirdTurn stamp: 'IO 11/1/2020 19:04:31'!
PASSED!

!testRun: #TerniLapilliGameTest #test25OCantMoveOnTheirFirstTurn stamp: 'IO 11/1/2020 19:04:31'!
PASSED!

!testRun: #TerniLapilliGameTest #test26OCantMoveOnTheirSecondTurn stamp: 'IO 11/1/2020 19:04:31'!
FAILURE!

!testRun: #TerniLapilliGameTest #test27OCantMoveOnTheirThirdTurn stamp: 'IO 11/1/2020 19:04:31'!
FAILURE!

!testRun: #TerniLapilliGameTest #test28XCantPutAfterTheirThirdTurn stamp: 'IO 11/1/2020 19:04:31'!
PASSED!

!testRun: #TerniLapilliGameTest #test29OCantPutAfterTheirThirdTurn stamp: 'IO 11/1/2020 19:04:31'!
PASSED!

!testRun: #TerniLapilliGameTest #test30OCantPutAfterXWon stamp: 'IO 11/1/2020 19:04:31'!
PASSED!

!testRun: #TerniLapilliGameTest #test31OCantMoveAfterXWon stamp: 'IO 11/1/2020 19:04:31'!
PASSED!

!testRun: #TerniLapilliGameTest #test32XCantMoveAfterOWon stamp: 'IO 11/1/2020 19:04:31'!
PASSED!

!testRun: #TerniLapilliGameTest #test33XCantPutAfterOWon stamp: 'IO 11/1/2020 19:04:31'!
PASSED!

!testRun: #TerniLapilliGameTest #test34XCantPutInAnOccupiedSpace stamp: 'IO 11/1/2020 19:04:31'!
PASSED!

!testRun: #TerniLapilliGameTest #test35OCantPutInAnOccupiedSpace stamp: 'IO 11/1/2020 19:04:31'!
PASSED!

!testRun: #TerniLapilliGameTest #test36XCantMoveToAnOccupiedSpace stamp: 'IO 11/1/2020 19:04:31'!
PASSED!

!testRun: #TerniLapilliGameTest #test37OCantMoveToAnOccupiedSpace stamp: 'IO 11/1/2020 19:04:31'!
PASSED!

!testRun: #TerniLapilliGameTest #test38XCantPutOutsideTheBoardUnderXAxis stamp: 'IO 11/1/2020 19:04:31'!
PASSED!

!testRun: #TerniLapilliGameTest #test39XCantPutOutsideTheBoardAboveXAxis stamp: 'IO 11/1/2020 19:04:31'!
PASSED!

!testRun: #TerniLapilliGameTest #test40XCantPutOutsideTheBoardUnderNorAboveTheYAxis stamp: 'IO 11/1/2020 19:04:31'!
PASSED!

!testRun: #TerniLapilliGameTest #test41OCantPutOutsideTheBoard stamp: 'IO 11/1/2020 19:04:31'!
PASSED!

!testRun: #TerniLapilliGameTest #test42XCantMoveToOutsideTheBoard stamp: 'IO 11/1/2020 19:04:31'!
FAILURE!

!testRun: #TerniLapilliGameTest #test43OCantMoveToOutsideTheBoard stamp: 'IO 11/1/2020 19:04:31'!
FAILURE!

!testRun: #TerniLapilliGameTest #test44XCantMoveTokensThatDontBelongToThem stamp: 'IO 11/1/2020 19:04:31'!
PASSED!

!testRun: #TerniLapilliGameTest #test45OCantMoveTokensThatDontBelongToThem stamp: 'IO 11/1/2020 19:04:31'!
PASSED!

!testRun: #TerniLapilliGameTest #test46XCantMoveaTokenOutsideItsNeighbors stamp: 'IO 11/1/2020 19:04:31'!
PASSED!

!testRun: #TerniLapilliGameTest #test47OCantMoveATokenOutsideItsNeighbors stamp: 'IO 11/1/2020 19:04:31'!
PASSED!

!testRun: #TerniLapilliGameTest #test01XCanPutAToken stamp: 'IO 11/1/2020 19:04:47'!
PASSED!

!testRun: #TerniLapilliGameTest #test02puttingDoesNotAffectOtherPositions stamp: 'IO 11/1/2020 19:04:47'!
PASSED!

!testRun: #TerniLapilliGameTest #test03XCanPutInOtherPositions stamp: 'IO 11/1/2020 19:04:47'!
PASSED!

!testRun: #TerniLapilliGameTest #test04OCanPut stamp: 'IO 11/1/2020 19:04:47'!
PASSED!

!testRun: #TerniLapilliGameTest #test05XCanMove stamp: 'IO 11/1/2020 19:04:47'!
PASSED!

!testRun: #TerniLapilliGameTest #test06OCanMove stamp: 'IO 11/1/2020 19:04:47'!
PASSED!

!testRun: #TerniLapilliGameTest #test07XWinsWithTheFirstColumn stamp: 'IO 11/1/2020 19:04:47'!
PASSED!

!testRun: #TerniLapilliGameTest #test08XHasntWonYet stamp: 'IO 11/1/2020 19:04:47'!
PASSED!

!testRun: #TerniLapilliGameTest #test09XWinsWithTheSecondColumn stamp: 'IO 11/1/2020 19:04:47'!
PASSED!

!testRun: #TerniLapilliGameTest #test10XWinsWithTheThirdColumn stamp: 'IO 11/1/2020 19:04:47'!
PASSED!

!testRun: #TerniLapilliGameTest #test11XWinsWithTheFirstRow stamp: 'IO 11/1/2020 19:04:47'!
PASSED!

!testRun: #TerniLapilliGameTest #test12XWinsWithTheSecondRow stamp: 'IO 11/1/2020 19:04:47'!
PASSED!

!testRun: #TerniLapilliGameTest #test13XWinsWithTheThirdRow stamp: 'IO 11/1/2020 19:04:47'!
PASSED!

!testRun: #TerniLapilliGameTest #test14XWinsWithTheCrescentDiagonal stamp: 'IO 11/1/2020 19:04:47'!
PASSED!

!testRun: #TerniLapilliGameTest #test15XWinsWithTheDescendantDiagonal stamp: 'IO 11/1/2020 19:04:47'!
PASSED!

!testRun: #TerniLapilliGameTest #test16OWnis stamp: 'IO 11/1/2020 19:04:47'!
PASSED!

!testRun: #TerniLapilliGameTest #test17OCantStartPutting stamp: 'IO 11/1/2020 19:04:47'!
PASSED!

!testRun: #TerniLapilliGameTest #test18XCantPutTwiceInARow stamp: 'IO 11/1/2020 19:04:47'!
PASSED!

!testRun: #TerniLapilliGameTest #test19XCantMoveTwiceInARow stamp: 'IO 11/1/2020 19:04:47'!
PASSED!

!testRun: #TerniLapilliGameTest #test20OCantPutTwiceInARow stamp: 'IO 11/1/2020 19:04:47'!
PASSED!

!testRun: #TerniLapilliGameTest #test21OCantMoveTwiceInARow stamp: 'IO 11/1/2020 19:04:47'!
PASSED!

!testRun: #TerniLapilliGameTest #test22XCantMoveOnTheirFirstTurn stamp: 'IO 11/1/2020 19:04:47'!
PASSED!

!testRun: #TerniLapilliGameTest #test23XCantMoveOnTheirSecondTurn stamp: 'IO 11/1/2020 19:04:47'!
PASSED!

!testRun: #TerniLapilliGameTest #test24XCantMoveOnTheirThirdTurn stamp: 'IO 11/1/2020 19:04:47'!
PASSED!

!testRun: #TerniLapilliGameTest #test25OCantMoveOnTheirFirstTurn stamp: 'IO 11/1/2020 19:04:47'!
PASSED!

!testRun: #TerniLapilliGameTest #test26OCantMoveOnTheirSecondTurn stamp: 'IO 11/1/2020 19:04:47'!
FAILURE!

!testRun: #TerniLapilliGameTest #test27OCantMoveOnTheirThirdTurn stamp: 'IO 11/1/2020 19:04:47'!
FAILURE!

!testRun: #TerniLapilliGameTest #test28XCantPutAfterTheirThirdTurn stamp: 'IO 11/1/2020 19:04:47'!
PASSED!

!testRun: #TerniLapilliGameTest #test29OCantPutAfterTheirThirdTurn stamp: 'IO 11/1/2020 19:04:47'!
PASSED!

!testRun: #TerniLapilliGameTest #test30OCantPutAfterXWon stamp: 'IO 11/1/2020 19:04:47'!
PASSED!

!testRun: #TerniLapilliGameTest #test31OCantMoveAfterXWon stamp: 'IO 11/1/2020 19:04:47'!
PASSED!

!testRun: #TerniLapilliGameTest #test32XCantMoveAfterOWon stamp: 'IO 11/1/2020 19:04:47'!
PASSED!

!testRun: #TerniLapilliGameTest #test33XCantPutAfterOWon stamp: 'IO 11/1/2020 19:04:47'!
PASSED!

!testRun: #TerniLapilliGameTest #test34XCantPutInAnOccupiedSpace stamp: 'IO 11/1/2020 19:04:47'!
PASSED!

!testRun: #TerniLapilliGameTest #test35OCantPutInAnOccupiedSpace stamp: 'IO 11/1/2020 19:04:47'!
PASSED!

!testRun: #TerniLapilliGameTest #test36XCantMoveToAnOccupiedSpace stamp: 'IO 11/1/2020 19:04:47'!
PASSED!

!testRun: #TerniLapilliGameTest #test37OCantMoveToAnOccupiedSpace stamp: 'IO 11/1/2020 19:04:47'!
PASSED!

!testRun: #TerniLapilliGameTest #test38XCantPutOutsideTheBoardUnderXAxis stamp: 'IO 11/1/2020 19:04:47'!
PASSED!

!testRun: #TerniLapilliGameTest #test39XCantPutOutsideTheBoardAboveXAxis stamp: 'IO 11/1/2020 19:04:47'!
PASSED!

!testRun: #TerniLapilliGameTest #test40XCantPutOutsideTheBoardUnderNorAboveTheYAxis stamp: 'IO 11/1/2020 19:04:47'!
PASSED!

!testRun: #TerniLapilliGameTest #test41OCantPutOutsideTheBoard stamp: 'IO 11/1/2020 19:04:47'!
PASSED!

!testRun: #TerniLapilliGameTest #test42XCantMoveToOutsideTheBoard stamp: 'IO 11/1/2020 19:04:47'!
FAILURE!

!testRun: #TerniLapilliGameTest #test43OCantMoveToOutsideTheBoard stamp: 'IO 11/1/2020 19:04:47'!
FAILURE!

!testRun: #TerniLapilliGameTest #test44XCantMoveTokensThatDontBelongToThem stamp: 'IO 11/1/2020 19:04:47'!
PASSED!

!testRun: #TerniLapilliGameTest #test45OCantMoveTokensThatDontBelongToThem stamp: 'IO 11/1/2020 19:04:47'!
PASSED!

!testRun: #TerniLapilliGameTest #test46XCantMoveaTokenOutsideItsNeighbors stamp: 'IO 11/1/2020 19:04:47'!
PASSED!

!testRun: #TerniLapilliGameTest #test47OCantMoveATokenOutsideItsNeighbors stamp: 'IO 11/1/2020 19:04:47'!
PASSED!

!testRun: #TerniLapilliGameTest #test01XCanPutAToken stamp: 'IO 11/1/2020 19:06:49'!
PASSED!

!testRun: #TerniLapilliGameTest #test02puttingDoesNotAffectOtherPositions stamp: 'IO 11/1/2020 19:06:49'!
PASSED!

!testRun: #TerniLapilliGameTest #test03XCanPutInOtherPositions stamp: 'IO 11/1/2020 19:06:49'!
PASSED!

!testRun: #TerniLapilliGameTest #test04OCanPut stamp: 'IO 11/1/2020 19:06:49'!
PASSED!

!testRun: #TerniLapilliGameTest #test05XCanMove stamp: 'IO 11/1/2020 19:06:49'!
PASSED!

!testRun: #TerniLapilliGameTest #test06OCanMove stamp: 'IO 11/1/2020 19:06:50'!
PASSED!

!testRun: #TerniLapilliGameTest #test07XWinsWithTheFirstColumn stamp: 'IO 11/1/2020 19:06:50'!
PASSED!

!testRun: #TerniLapilliGameTest #test08XHasntWonYet stamp: 'IO 11/1/2020 19:06:50'!
PASSED!

!testRun: #TerniLapilliGameTest #test09XWinsWithTheSecondColumn stamp: 'IO 11/1/2020 19:06:50'!
PASSED!

!testRun: #TerniLapilliGameTest #test10XWinsWithTheThirdColumn stamp: 'IO 11/1/2020 19:06:50'!
PASSED!

!testRun: #TerniLapilliGameTest #test11XWinsWithTheFirstRow stamp: 'IO 11/1/2020 19:06:50'!
PASSED!

!testRun: #TerniLapilliGameTest #test12XWinsWithTheSecondRow stamp: 'IO 11/1/2020 19:06:50'!
PASSED!

!testRun: #TerniLapilliGameTest #test13XWinsWithTheThirdRow stamp: 'IO 11/1/2020 19:06:50'!
PASSED!

!testRun: #TerniLapilliGameTest #test14XWinsWithTheCrescentDiagonal stamp: 'IO 11/1/2020 19:06:50'!
PASSED!

!testRun: #TerniLapilliGameTest #test15XWinsWithTheDescendantDiagonal stamp: 'IO 11/1/2020 19:06:50'!
PASSED!

!testRun: #TerniLapilliGameTest #test16OWnis stamp: 'IO 11/1/2020 19:06:50'!
PASSED!

!testRun: #TerniLapilliGameTest #test17OCantStartPutting stamp: 'IO 11/1/2020 19:06:50'!
PASSED!

!testRun: #TerniLapilliGameTest #test18XCantPutTwiceInARow stamp: 'IO 11/1/2020 19:06:50'!
PASSED!

!testRun: #TerniLapilliGameTest #test19XCantMoveTwiceInARow stamp: 'IO 11/1/2020 19:06:50'!
PASSED!

!testRun: #TerniLapilliGameTest #test20OCantPutTwiceInARow stamp: 'IO 11/1/2020 19:06:50'!
PASSED!

!testRun: #TerniLapilliGameTest #test21OCantMoveTwiceInARow stamp: 'IO 11/1/2020 19:06:50'!
PASSED!

!testRun: #TerniLapilliGameTest #test22XCantMoveOnTheirFirstTurn stamp: 'IO 11/1/2020 19:06:50'!
PASSED!

!testRun: #TerniLapilliGameTest #test23XCantMoveOnTheirSecondTurn stamp: 'IO 11/1/2020 19:06:50'!
PASSED!

!testRun: #TerniLapilliGameTest #test24XCantMoveOnTheirThirdTurn stamp: 'IO 11/1/2020 19:06:50'!
PASSED!

!testRun: #TerniLapilliGameTest #test25OCantMoveOnTheirFirstTurn stamp: 'IO 11/1/2020 19:06:50'!
PASSED!

!testRun: #TerniLapilliGameTest #test26OCantMoveOnTheirSecondTurn stamp: 'IO 11/1/2020 19:06:50'!
FAILURE!

!testRun: #TerniLapilliGameTest #test27OCantMoveOnTheirThirdTurn stamp: 'IO 11/1/2020 19:06:50'!
FAILURE!

!testRun: #TerniLapilliGameTest #test28XCantPutAfterTheirThirdTurn stamp: 'IO 11/1/2020 19:06:50'!
PASSED!

!testRun: #TerniLapilliGameTest #test29OCantPutAfterTheirThirdTurn stamp: 'IO 11/1/2020 19:06:50'!
PASSED!

!testRun: #TerniLapilliGameTest #test30OCantPutAfterXWon stamp: 'IO 11/1/2020 19:06:50'!
PASSED!

!testRun: #TerniLapilliGameTest #test31OCantMoveAfterXWon stamp: 'IO 11/1/2020 19:06:50'!
PASSED!

!testRun: #TerniLapilliGameTest #test32XCantMoveAfterOWon stamp: 'IO 11/1/2020 19:06:50'!
PASSED!

!testRun: #TerniLapilliGameTest #test33XCantPutAfterOWon stamp: 'IO 11/1/2020 19:06:50'!
PASSED!

!testRun: #TerniLapilliGameTest #test34XCantPutInAnOccupiedSpace stamp: 'IO 11/1/2020 19:06:50'!
PASSED!

!testRun: #TerniLapilliGameTest #test35OCantPutInAnOccupiedSpace stamp: 'IO 11/1/2020 19:06:50'!
PASSED!

!testRun: #TerniLapilliGameTest #test36XCantMoveToAnOccupiedSpace stamp: 'IO 11/1/2020 19:06:50'!
PASSED!

!testRun: #TerniLapilliGameTest #test37OCantMoveToAnOccupiedSpace stamp: 'IO 11/1/2020 19:06:50'!
PASSED!

!testRun: #TerniLapilliGameTest #test38XCantPutOutsideTheBoardUnderXAxis stamp: 'IO 11/1/2020 19:06:50'!
PASSED!

!testRun: #TerniLapilliGameTest #test39XCantPutOutsideTheBoardAboveXAxis stamp: 'IO 11/1/2020 19:06:50'!
PASSED!

!testRun: #TerniLapilliGameTest #test40XCantPutOutsideTheBoardUnderNorAboveTheYAxis stamp: 'IO 11/1/2020 19:06:50'!
PASSED!

!testRun: #TerniLapilliGameTest #test41OCantPutOutsideTheBoard stamp: 'IO 11/1/2020 19:06:50'!
PASSED!

!testRun: #TerniLapilliGameTest #test42XCantMoveToOutsideTheBoard stamp: 'IO 11/1/2020 19:06:50'!
FAILURE!

!testRun: #TerniLapilliGameTest #test43OCantMoveToOutsideTheBoard stamp: 'IO 11/1/2020 19:06:50'!
FAILURE!

!testRun: #TerniLapilliGameTest #test44XCantMoveTokensThatDontBelongToThem stamp: 'IO 11/1/2020 19:06:50'!
PASSED!

!testRun: #TerniLapilliGameTest #test45OCantMoveTokensThatDontBelongToThem stamp: 'IO 11/1/2020 19:06:50'!
PASSED!

!testRun: #TerniLapilliGameTest #test46XCantMoveaTokenOutsideItsNeighbors stamp: 'IO 11/1/2020 19:06:50'!
PASSED!

!testRun: #TerniLapilliGameTest #test47OCantMoveATokenOutsideItsNeighbors stamp: 'IO 11/1/2020 19:06:50'!
PASSED!

aPosition!
!TerniLapilliGameTest methodsFor: 'ilegal moves' stamp: 'IO 11/1/2020 19:08:21' prior: 50891348!
test26OCantMoveOnTheirSecondTurn
	"o no puede mover en su segundo turno"
	| aGame |
	aGame := TerniLapilliGame new.
	
	aGame putXAt: 0@0.
	aGame putOAt: 0@2.
	aGame putXAt: 1@0.

	self should: [aGame moveOFrom: (0@0) to: (0@1).] raise: Error withMessageText: TerniLapilliGame cannotMoveErrorMessage.

	! !

!testRun: #TerniLapilliGameTest #test26OCantMoveOnTheirSecondTurn stamp: 'IO 11/1/2020 19:08:27'!
PASSED!

!testRun: #TerniLapilliGameTest #test01XCanPutAToken stamp: 'IO 11/1/2020 19:08:27'!
PASSED!

!testRun: #TerniLapilliGameTest #test02puttingDoesNotAffectOtherPositions stamp: 'IO 11/1/2020 19:08:27'!
PASSED!

!testRun: #TerniLapilliGameTest #test03XCanPutInOtherPositions stamp: 'IO 11/1/2020 19:08:27'!
PASSED!

!testRun: #TerniLapilliGameTest #test04OCanPut stamp: 'IO 11/1/2020 19:08:27'!
PASSED!

!testRun: #TerniLapilliGameTest #test05XCanMove stamp: 'IO 11/1/2020 19:08:27'!
PASSED!

!testRun: #TerniLapilliGameTest #test06OCanMove stamp: 'IO 11/1/2020 19:08:27'!
PASSED!

!testRun: #TerniLapilliGameTest #test07XWinsWithTheFirstColumn stamp: 'IO 11/1/2020 19:08:27'!
PASSED!

!testRun: #TerniLapilliGameTest #test08XHasntWonYet stamp: 'IO 11/1/2020 19:08:27'!
PASSED!

!testRun: #TerniLapilliGameTest #test09XWinsWithTheSecondColumn stamp: 'IO 11/1/2020 19:08:27'!
PASSED!

!testRun: #TerniLapilliGameTest #test10XWinsWithTheThirdColumn stamp: 'IO 11/1/2020 19:08:27'!
PASSED!

!testRun: #TerniLapilliGameTest #test11XWinsWithTheFirstRow stamp: 'IO 11/1/2020 19:08:27'!
PASSED!

!testRun: #TerniLapilliGameTest #test12XWinsWithTheSecondRow stamp: 'IO 11/1/2020 19:08:27'!
PASSED!

!testRun: #TerniLapilliGameTest #test13XWinsWithTheThirdRow stamp: 'IO 11/1/2020 19:08:27'!
PASSED!

!testRun: #TerniLapilliGameTest #test14XWinsWithTheCrescentDiagonal stamp: 'IO 11/1/2020 19:08:27'!
PASSED!

!testRun: #TerniLapilliGameTest #test15XWinsWithTheDescendantDiagonal stamp: 'IO 11/1/2020 19:08:27'!
PASSED!

!testRun: #TerniLapilliGameTest #test16OWnis stamp: 'IO 11/1/2020 19:08:27'!
PASSED!

!testRun: #TerniLapilliGameTest #test17OCantStartPutting stamp: 'IO 11/1/2020 19:08:27'!
PASSED!

!testRun: #TerniLapilliGameTest #test18XCantPutTwiceInARow stamp: 'IO 11/1/2020 19:08:27'!
PASSED!

!testRun: #TerniLapilliGameTest #test19XCantMoveTwiceInARow stamp: 'IO 11/1/2020 19:08:27'!
PASSED!

!testRun: #TerniLapilliGameTest #test20OCantPutTwiceInARow stamp: 'IO 11/1/2020 19:08:27'!
PASSED!

!testRun: #TerniLapilliGameTest #test21OCantMoveTwiceInARow stamp: 'IO 11/1/2020 19:08:27'!
PASSED!

!testRun: #TerniLapilliGameTest #test22XCantMoveOnTheirFirstTurn stamp: 'IO 11/1/2020 19:08:27'!
PASSED!

!testRun: #TerniLapilliGameTest #test23XCantMoveOnTheirSecondTurn stamp: 'IO 11/1/2020 19:08:27'!
PASSED!

!testRun: #TerniLapilliGameTest #test24XCantMoveOnTheirThirdTurn stamp: 'IO 11/1/2020 19:08:27'!
PASSED!

!testRun: #TerniLapilliGameTest #test25OCantMoveOnTheirFirstTurn stamp: 'IO 11/1/2020 19:08:27'!
PASSED!

!testRun: #TerniLapilliGameTest #test26OCantMoveOnTheirSecondTurn stamp: 'IO 11/1/2020 19:08:27'!
PASSED!

!testRun: #TerniLapilliGameTest #test27OCantMoveOnTheirThirdTurn stamp: 'IO 11/1/2020 19:08:27'!
FAILURE!

!testRun: #TerniLapilliGameTest #test28XCantPutAfterTheirThirdTurn stamp: 'IO 11/1/2020 19:08:27'!
PASSED!

!testRun: #TerniLapilliGameTest #test29OCantPutAfterTheirThirdTurn stamp: 'IO 11/1/2020 19:08:27'!
PASSED!

!testRun: #TerniLapilliGameTest #test30OCantPutAfterXWon stamp: 'IO 11/1/2020 19:08:27'!
PASSED!

!testRun: #TerniLapilliGameTest #test31OCantMoveAfterXWon stamp: 'IO 11/1/2020 19:08:28'!
PASSED!

!testRun: #TerniLapilliGameTest #test32XCantMoveAfterOWon stamp: 'IO 11/1/2020 19:08:28'!
PASSED!

!testRun: #TerniLapilliGameTest #test33XCantPutAfterOWon stamp: 'IO 11/1/2020 19:08:28'!
PASSED!

!testRun: #TerniLapilliGameTest #test34XCantPutInAnOccupiedSpace stamp: 'IO 11/1/2020 19:08:28'!
PASSED!

!testRun: #TerniLapilliGameTest #test35OCantPutInAnOccupiedSpace stamp: 'IO 11/1/2020 19:08:28'!
PASSED!

!testRun: #TerniLapilliGameTest #test36XCantMoveToAnOccupiedSpace stamp: 'IO 11/1/2020 19:08:28'!
PASSED!

!testRun: #TerniLapilliGameTest #test37OCantMoveToAnOccupiedSpace stamp: 'IO 11/1/2020 19:08:28'!
PASSED!

!testRun: #TerniLapilliGameTest #test38XCantPutOutsideTheBoardUnderXAxis stamp: 'IO 11/1/2020 19:08:28'!
PASSED!

!testRun: #TerniLapilliGameTest #test39XCantPutOutsideTheBoardAboveXAxis stamp: 'IO 11/1/2020 19:08:28'!
PASSED!

!testRun: #TerniLapilliGameTest #test40XCantPutOutsideTheBoardUnderNorAboveTheYAxis stamp: 'IO 11/1/2020 19:08:28'!
PASSED!

!testRun: #TerniLapilliGameTest #test41OCantPutOutsideTheBoard stamp: 'IO 11/1/2020 19:08:28'!
PASSED!

!testRun: #TerniLapilliGameTest #test42XCantMoveToOutsideTheBoard stamp: 'IO 11/1/2020 19:08:28'!
FAILURE!

!testRun: #TerniLapilliGameTest #test43OCantMoveToOutsideTheBoard stamp: 'IO 11/1/2020 19:08:28'!
FAILURE!

!testRun: #TerniLapilliGameTest #test44XCantMoveTokensThatDontBelongToThem stamp: 'IO 11/1/2020 19:08:28'!
PASSED!

!testRun: #TerniLapilliGameTest #test45OCantMoveTokensThatDontBelongToThem stamp: 'IO 11/1/2020 19:08:28'!
PASSED!

!testRun: #TerniLapilliGameTest #test46XCantMoveaTokenOutsideItsNeighbors stamp: 'IO 11/1/2020 19:08:28'!
PASSED!

!testRun: #TerniLapilliGameTest #test47OCantMoveATokenOutsideItsNeighbors stamp: 'IO 11/1/2020 19:08:28'!
PASSED!
!TerniLapilliGameTest methodsFor: 'ilegal moves' stamp: 'IO 11/1/2020 19:08:45' prior: 50891265!
test27OCantMoveOnTheirThirdTurn
	"o no puede mover en su tercer turno"
	| aGame |
	aGame := TerniLapilliGame new.
	
	aGame putXAt: 0@0.
	aGame putOAt: 0@1.
	aGame putXAt: 2@0.
	aGame putOAt: 2@2.
	aGame putXAt: 2@1.

	self should: [aGame moveOFrom: (0@0) to: (1@0).] raise: Error withMessageText: TerniLapilliGame cannotMoveErrorMessage.

	! !

!testRun: #TerniLapilliGameTest #test27OCantMoveOnTheirThirdTurn stamp: 'IO 11/1/2020 19:08:46'!
PASSED!

!testRun: #TerniLapilliGameTest #test01XCanPutAToken stamp: 'IO 11/1/2020 19:08:46'!
PASSED!

!testRun: #TerniLapilliGameTest #test02puttingDoesNotAffectOtherPositions stamp: 'IO 11/1/2020 19:08:46'!
PASSED!

!testRun: #TerniLapilliGameTest #test03XCanPutInOtherPositions stamp: 'IO 11/1/2020 19:08:46'!
PASSED!

!testRun: #TerniLapilliGameTest #test04OCanPut stamp: 'IO 11/1/2020 19:08:46'!
PASSED!

!testRun: #TerniLapilliGameTest #test05XCanMove stamp: 'IO 11/1/2020 19:08:46'!
PASSED!

!testRun: #TerniLapilliGameTest #test06OCanMove stamp: 'IO 11/1/2020 19:08:46'!
PASSED!

!testRun: #TerniLapilliGameTest #test07XWinsWithTheFirstColumn stamp: 'IO 11/1/2020 19:08:46'!
PASSED!

!testRun: #TerniLapilliGameTest #test08XHasntWonYet stamp: 'IO 11/1/2020 19:08:46'!
PASSED!

!testRun: #TerniLapilliGameTest #test09XWinsWithTheSecondColumn stamp: 'IO 11/1/2020 19:08:46'!
PASSED!

!testRun: #TerniLapilliGameTest #test10XWinsWithTheThirdColumn stamp: 'IO 11/1/2020 19:08:46'!
PASSED!

!testRun: #TerniLapilliGameTest #test11XWinsWithTheFirstRow stamp: 'IO 11/1/2020 19:08:46'!
PASSED!

!testRun: #TerniLapilliGameTest #test12XWinsWithTheSecondRow stamp: 'IO 11/1/2020 19:08:46'!
PASSED!

!testRun: #TerniLapilliGameTest #test13XWinsWithTheThirdRow stamp: 'IO 11/1/2020 19:08:46'!
PASSED!

!testRun: #TerniLapilliGameTest #test14XWinsWithTheCrescentDiagonal stamp: 'IO 11/1/2020 19:08:46'!
PASSED!

!testRun: #TerniLapilliGameTest #test15XWinsWithTheDescendantDiagonal stamp: 'IO 11/1/2020 19:08:46'!
PASSED!

!testRun: #TerniLapilliGameTest #test16OWnis stamp: 'IO 11/1/2020 19:08:46'!
PASSED!

!testRun: #TerniLapilliGameTest #test17OCantStartPutting stamp: 'IO 11/1/2020 19:08:46'!
PASSED!

!testRun: #TerniLapilliGameTest #test18XCantPutTwiceInARow stamp: 'IO 11/1/2020 19:08:46'!
PASSED!

!testRun: #TerniLapilliGameTest #test19XCantMoveTwiceInARow stamp: 'IO 11/1/2020 19:08:46'!
PASSED!

!testRun: #TerniLapilliGameTest #test20OCantPutTwiceInARow stamp: 'IO 11/1/2020 19:08:46'!
PASSED!

!testRun: #TerniLapilliGameTest #test21OCantMoveTwiceInARow stamp: 'IO 11/1/2020 19:08:46'!
PASSED!

!testRun: #TerniLapilliGameTest #test22XCantMoveOnTheirFirstTurn stamp: 'IO 11/1/2020 19:08:46'!
PASSED!

!testRun: #TerniLapilliGameTest #test23XCantMoveOnTheirSecondTurn stamp: 'IO 11/1/2020 19:08:46'!
PASSED!

!testRun: #TerniLapilliGameTest #test24XCantMoveOnTheirThirdTurn stamp: 'IO 11/1/2020 19:08:46'!
PASSED!

!testRun: #TerniLapilliGameTest #test25OCantMoveOnTheirFirstTurn stamp: 'IO 11/1/2020 19:08:46'!
PASSED!

!testRun: #TerniLapilliGameTest #test26OCantMoveOnTheirSecondTurn stamp: 'IO 11/1/2020 19:08:46'!
PASSED!

!testRun: #TerniLapilliGameTest #test27OCantMoveOnTheirThirdTurn stamp: 'IO 11/1/2020 19:08:46'!
PASSED!

!testRun: #TerniLapilliGameTest #test28XCantPutAfterTheirThirdTurn stamp: 'IO 11/1/2020 19:08:47'!
PASSED!

!testRun: #TerniLapilliGameTest #test29OCantPutAfterTheirThirdTurn stamp: 'IO 11/1/2020 19:08:47'!
PASSED!

!testRun: #TerniLapilliGameTest #test30OCantPutAfterXWon stamp: 'IO 11/1/2020 19:08:47'!
PASSED!

!testRun: #TerniLapilliGameTest #test31OCantMoveAfterXWon stamp: 'IO 11/1/2020 19:08:47'!
PASSED!

!testRun: #TerniLapilliGameTest #test32XCantMoveAfterOWon stamp: 'IO 11/1/2020 19:08:47'!
PASSED!

!testRun: #TerniLapilliGameTest #test33XCantPutAfterOWon stamp: 'IO 11/1/2020 19:08:47'!
PASSED!

!testRun: #TerniLapilliGameTest #test34XCantPutInAnOccupiedSpace stamp: 'IO 11/1/2020 19:08:47'!
PASSED!

!testRun: #TerniLapilliGameTest #test35OCantPutInAnOccupiedSpace stamp: 'IO 11/1/2020 19:08:47'!
PASSED!

!testRun: #TerniLapilliGameTest #test36XCantMoveToAnOccupiedSpace stamp: 'IO 11/1/2020 19:08:47'!
PASSED!

!testRun: #TerniLapilliGameTest #test37OCantMoveToAnOccupiedSpace stamp: 'IO 11/1/2020 19:08:47'!
PASSED!

!testRun: #TerniLapilliGameTest #test38XCantPutOutsideTheBoardUnderXAxis stamp: 'IO 11/1/2020 19:08:47'!
PASSED!

!testRun: #TerniLapilliGameTest #test39XCantPutOutsideTheBoardAboveXAxis stamp: 'IO 11/1/2020 19:08:47'!
PASSED!

!testRun: #TerniLapilliGameTest #test40XCantPutOutsideTheBoardUnderNorAboveTheYAxis stamp: 'IO 11/1/2020 19:08:47'!
PASSED!

!testRun: #TerniLapilliGameTest #test41OCantPutOutsideTheBoard stamp: 'IO 11/1/2020 19:08:47'!
PASSED!

!testRun: #TerniLapilliGameTest #test42XCantMoveToOutsideTheBoard stamp: 'IO 11/1/2020 19:08:47'!
FAILURE!

!testRun: #TerniLapilliGameTest #test43OCantMoveToOutsideTheBoard stamp: 'IO 11/1/2020 19:08:47'!
FAILURE!

!testRun: #TerniLapilliGameTest #test44XCantMoveTokensThatDontBelongToThem stamp: 'IO 11/1/2020 19:08:47'!
PASSED!

!testRun: #TerniLapilliGameTest #test45OCantMoveTokensThatDontBelongToThem stamp: 'IO 11/1/2020 19:08:47'!
PASSED!

!testRun: #TerniLapilliGameTest #test46XCantMoveaTokenOutsideItsNeighbors stamp: 'IO 11/1/2020 19:08:47'!
PASSED!

!testRun: #TerniLapilliGameTest #test47OCantMoveATokenOutsideItsNeighbors stamp: 'IO 11/1/2020 19:08:47'!
PASSED!

!testRun: #TerniLapilliGameTest #test42XCantMoveToOutsideTheBoard stamp: 'IO 11/1/2020 19:09:52'!
FAILURE!

!testRun: #TerniLapilliGameTest #test42XCantMoveToOutsideTheBoard stamp: 'IO 11/1/2020 19:09:52'!
FAILURE!
!TerniLapilliGameTest methodsFor: 'ilegal positions' stamp: 'IO 11/1/2020 19:10:19' prior: 50896139!
test42XCantMoveToOutsideTheBoard
	"X no puede mover hac�a afuera del tablero"
	

	| aGame |

	aGame := self createGameInMovePhase .
	
	self should: [	aGame moveXFrom: 0@1 to: -1@1.] raise: Error withMessageText: TerniLapilliGame invalidDestinationErrorMessage . 
	self should: [	aGame moveXFrom: 0@1 to: 3@1.] raise: Error withMessageText: TerniLapilliGame invalidDestinationErrorMessage . 
	self should: [	aGame moveXFrom: 0@1 to: 1@-1.] raise: Error withMessageText: TerniLapilliGame invalidDestinationErrorMessage . 
	self should: [	aGame moveXFrom: 0@1 to: 1@3.] raise: Error withMessageText: TerniLapilliGame invalidDestinationErrorMessage . 
! !
!TerniLapilliGameTest methodsFor: 'ilegal positions' stamp: 'IO 11/1/2020 19:10:28' prior: 50896163!
test43OCantMoveToOutsideTheBoard
	"O no puede mover hac�a afuera del tablero"
	

	| aGame |

	aGame := self createGameInMovePhase .
	aGame moveXFrom: 0@1 to: 0@0.
	
	self should: [	aGame moveOFrom: 0@2 to: -1@1.] raise: Error withMessageText: TerniLapilliGame invalidDestinationErrorMessage . 
	self should: [	aGame moveOFrom: 0@2 to: 3@1.] raise: Error withMessageText: TerniLapilliGame invalidDestinationErrorMessage . 
	self should: [	aGame moveOFrom: 0@2 to: 1@-1.] raise: Error withMessageText: TerniLapilliGame invalidDestinationErrorMessage . 
	self should: [	aGame moveOFrom: 0@2 to: 1@3.] raise: Error withMessageText: TerniLapilliGame invalidDestinationErrorMessage . 
	
! !

!testRun: #TerniLapilliGameTest #test43OCantMoveToOutsideTheBoard stamp: 'IO 11/1/2020 19:10:30'!
FAILURE!

!testRun: #TerniLapilliGameTest #test43OCantMoveToOutsideTheBoard stamp: 'IO 11/1/2020 19:10:30'!
FAILURE!

!testRun: #TerniLapilliGameTest #test43OCantMoveToOutsideTheBoard stamp: 'IO 11/1/2020 19:10:35'!
FAILURE!

!testRun: #TerniLapilliGameTest #test43OCantMoveToOutsideTheBoard stamp: 'IO 11/1/2020 19:10:35'!
FAILURE!

!testRun: #TerniLapilliGameTest #test01XCanPutAToken stamp: 'IO 11/1/2020 19:10:38'!
PASSED!

!testRun: #TerniLapilliGameTest #test02puttingDoesNotAffectOtherPositions stamp: 'IO 11/1/2020 19:10:38'!
PASSED!

!testRun: #TerniLapilliGameTest #test03XCanPutInOtherPositions stamp: 'IO 11/1/2020 19:10:38'!
PASSED!

!testRun: #TerniLapilliGameTest #test04OCanPut stamp: 'IO 11/1/2020 19:10:38'!
PASSED!

!testRun: #TerniLapilliGameTest #test05XCanMove stamp: 'IO 11/1/2020 19:10:38'!
PASSED!

!testRun: #TerniLapilliGameTest #test06OCanMove stamp: 'IO 11/1/2020 19:10:38'!
PASSED!

!testRun: #TerniLapilliGameTest #test07XWinsWithTheFirstColumn stamp: 'IO 11/1/2020 19:10:38'!
PASSED!

!testRun: #TerniLapilliGameTest #test08XHasntWonYet stamp: 'IO 11/1/2020 19:10:38'!
PASSED!

!testRun: #TerniLapilliGameTest #test09XWinsWithTheSecondColumn stamp: 'IO 11/1/2020 19:10:38'!
PASSED!

!testRun: #TerniLapilliGameTest #test10XWinsWithTheThirdColumn stamp: 'IO 11/1/2020 19:10:38'!
PASSED!

!testRun: #TerniLapilliGameTest #test11XWinsWithTheFirstRow stamp: 'IO 11/1/2020 19:10:38'!
PASSED!

!testRun: #TerniLapilliGameTest #test12XWinsWithTheSecondRow stamp: 'IO 11/1/2020 19:10:38'!
PASSED!

!testRun: #TerniLapilliGameTest #test13XWinsWithTheThirdRow stamp: 'IO 11/1/2020 19:10:38'!
PASSED!

!testRun: #TerniLapilliGameTest #test14XWinsWithTheCrescentDiagonal stamp: 'IO 11/1/2020 19:10:38'!
PASSED!

!testRun: #TerniLapilliGameTest #test15XWinsWithTheDescendantDiagonal stamp: 'IO 11/1/2020 19:10:38'!
PASSED!

!testRun: #TerniLapilliGameTest #test16OWnis stamp: 'IO 11/1/2020 19:10:38'!
PASSED!

!testRun: #TerniLapilliGameTest #test17OCantStartPutting stamp: 'IO 11/1/2020 19:10:38'!
PASSED!

!testRun: #TerniLapilliGameTest #test18XCantPutTwiceInARow stamp: 'IO 11/1/2020 19:10:38'!
PASSED!

!testRun: #TerniLapilliGameTest #test19XCantMoveTwiceInARow stamp: 'IO 11/1/2020 19:10:38'!
PASSED!

!testRun: #TerniLapilliGameTest #test20OCantPutTwiceInARow stamp: 'IO 11/1/2020 19:10:38'!
PASSED!

!testRun: #TerniLapilliGameTest #test21OCantMoveTwiceInARow stamp: 'IO 11/1/2020 19:10:38'!
PASSED!

!testRun: #TerniLapilliGameTest #test22XCantMoveOnTheirFirstTurn stamp: 'IO 11/1/2020 19:10:38'!
PASSED!

!testRun: #TerniLapilliGameTest #test23XCantMoveOnTheirSecondTurn stamp: 'IO 11/1/2020 19:10:38'!
PASSED!

!testRun: #TerniLapilliGameTest #test24XCantMoveOnTheirThirdTurn stamp: 'IO 11/1/2020 19:10:38'!
PASSED!

!testRun: #TerniLapilliGameTest #test25OCantMoveOnTheirFirstTurn stamp: 'IO 11/1/2020 19:10:38'!
PASSED!

!testRun: #TerniLapilliGameTest #test26OCantMoveOnTheirSecondTurn stamp: 'IO 11/1/2020 19:10:38'!
PASSED!

!testRun: #TerniLapilliGameTest #test27OCantMoveOnTheirThirdTurn stamp: 'IO 11/1/2020 19:10:38'!
PASSED!

!testRun: #TerniLapilliGameTest #test28XCantPutAfterTheirThirdTurn stamp: 'IO 11/1/2020 19:10:38'!
PASSED!

!testRun: #TerniLapilliGameTest #test29OCantPutAfterTheirThirdTurn stamp: 'IO 11/1/2020 19:10:38'!
PASSED!

!testRun: #TerniLapilliGameTest #test30OCantPutAfterXWon stamp: 'IO 11/1/2020 19:10:38'!
PASSED!

!testRun: #TerniLapilliGameTest #test31OCantMoveAfterXWon stamp: 'IO 11/1/2020 19:10:38'!
PASSED!

!testRun: #TerniLapilliGameTest #test32XCantMoveAfterOWon stamp: 'IO 11/1/2020 19:10:38'!
PASSED!

!testRun: #TerniLapilliGameTest #test33XCantPutAfterOWon stamp: 'IO 11/1/2020 19:10:38'!
PASSED!

!testRun: #TerniLapilliGameTest #test34XCantPutInAnOccupiedSpace stamp: 'IO 11/1/2020 19:10:38'!
PASSED!

!testRun: #TerniLapilliGameTest #test35OCantPutInAnOccupiedSpace stamp: 'IO 11/1/2020 19:10:38'!
PASSED!

!testRun: #TerniLapilliGameTest #test36XCantMoveToAnOccupiedSpace stamp: 'IO 11/1/2020 19:10:38'!
PASSED!

!testRun: #TerniLapilliGameTest #test37OCantMoveToAnOccupiedSpace stamp: 'IO 11/1/2020 19:10:38'!
PASSED!

!testRun: #TerniLapilliGameTest #test38XCantPutOutsideTheBoardUnderXAxis stamp: 'IO 11/1/2020 19:10:38'!
PASSED!

!testRun: #TerniLapilliGameTest #test39XCantPutOutsideTheBoardAboveXAxis stamp: 'IO 11/1/2020 19:10:38'!
PASSED!

!testRun: #TerniLapilliGameTest #test40XCantPutOutsideTheBoardUnderNorAboveTheYAxis stamp: 'IO 11/1/2020 19:10:38'!
PASSED!

!testRun: #TerniLapilliGameTest #test41OCantPutOutsideTheBoard stamp: 'IO 11/1/2020 19:10:38'!
PASSED!

!testRun: #TerniLapilliGameTest #test42XCantMoveToOutsideTheBoard stamp: 'IO 11/1/2020 19:10:38'!
FAILURE!

!testRun: #TerniLapilliGameTest #test43OCantMoveToOutsideTheBoard stamp: 'IO 11/1/2020 19:10:38'!
FAILURE!

!testRun: #TerniLapilliGameTest #test44XCantMoveTokensThatDontBelongToThem stamp: 'IO 11/1/2020 19:10:38'!
PASSED!

!testRun: #TerniLapilliGameTest #test45OCantMoveTokensThatDontBelongToThem stamp: 'IO 11/1/2020 19:10:38'!
PASSED!

!testRun: #TerniLapilliGameTest #test46XCantMoveaTokenOutsideItsNeighbors stamp: 'IO 11/1/2020 19:10:38'!
PASSED!

!testRun: #TerniLapilliGameTest #test47OCantMoveATokenOutsideItsNeighbors stamp: 'IO 11/1/2020 19:10:38'!
PASSED!

!testRun: #TerniLapilliGameTest #test01XCanPutAToken stamp: 'IO 11/1/2020 19:11:10'!
PASSED!

!testRun: #TerniLapilliGameTest #test02puttingDoesNotAffectOtherPositions stamp: 'IO 11/1/2020 19:11:10'!
PASSED!

!testRun: #TerniLapilliGameTest #test03XCanPutInOtherPositions stamp: 'IO 11/1/2020 19:11:10'!
PASSED!

!testRun: #TerniLapilliGameTest #test04OCanPut stamp: 'IO 11/1/2020 19:11:10'!
PASSED!

!testRun: #TerniLapilliGameTest #test05XCanMove stamp: 'IO 11/1/2020 19:11:10'!
PASSED!

!testRun: #TerniLapilliGameTest #test06OCanMove stamp: 'IO 11/1/2020 19:11:10'!
PASSED!

!testRun: #TerniLapilliGameTest #test07XWinsWithTheFirstColumn stamp: 'IO 11/1/2020 19:11:10'!
PASSED!

!testRun: #TerniLapilliGameTest #test08XHasntWonYet stamp: 'IO 11/1/2020 19:11:10'!
PASSED!

!testRun: #TerniLapilliGameTest #test09XWinsWithTheSecondColumn stamp: 'IO 11/1/2020 19:11:10'!
PASSED!

!testRun: #TerniLapilliGameTest #test10XWinsWithTheThirdColumn stamp: 'IO 11/1/2020 19:11:10'!
PASSED!

!testRun: #TerniLapilliGameTest #test11XWinsWithTheFirstRow stamp: 'IO 11/1/2020 19:11:10'!
PASSED!

!testRun: #TerniLapilliGameTest #test12XWinsWithTheSecondRow stamp: 'IO 11/1/2020 19:11:10'!
PASSED!

!testRun: #TerniLapilliGameTest #test13XWinsWithTheThirdRow stamp: 'IO 11/1/2020 19:11:10'!
PASSED!

!testRun: #TerniLapilliGameTest #test14XWinsWithTheCrescentDiagonal stamp: 'IO 11/1/2020 19:11:10'!
PASSED!

!testRun: #TerniLapilliGameTest #test15XWinsWithTheDescendantDiagonal stamp: 'IO 11/1/2020 19:11:10'!
PASSED!

!testRun: #TerniLapilliGameTest #test16OWnis stamp: 'IO 11/1/2020 19:11:10'!
PASSED!

!testRun: #TerniLapilliGameTest #test17OCantStartPutting stamp: 'IO 11/1/2020 19:11:10'!
PASSED!

!testRun: #TerniLapilliGameTest #test18XCantPutTwiceInARow stamp: 'IO 11/1/2020 19:11:10'!
PASSED!

!testRun: #TerniLapilliGameTest #test19XCantMoveTwiceInARow stamp: 'IO 11/1/2020 19:11:10'!
PASSED!

!testRun: #TerniLapilliGameTest #test20OCantPutTwiceInARow stamp: 'IO 11/1/2020 19:11:10'!
PASSED!

!testRun: #TerniLapilliGameTest #test21OCantMoveTwiceInARow stamp: 'IO 11/1/2020 19:11:10'!
PASSED!

!testRun: #TerniLapilliGameTest #test22XCantMoveOnTheirFirstTurn stamp: 'IO 11/1/2020 19:11:10'!
PASSED!

!testRun: #TerniLapilliGameTest #test23XCantMoveOnTheirSecondTurn stamp: 'IO 11/1/2020 19:11:10'!
PASSED!

!testRun: #TerniLapilliGameTest #test24XCantMoveOnTheirThirdTurn stamp: 'IO 11/1/2020 19:11:10'!
PASSED!

!testRun: #TerniLapilliGameTest #test25OCantMoveOnTheirFirstTurn stamp: 'IO 11/1/2020 19:11:10'!
PASSED!

!testRun: #TerniLapilliGameTest #test26OCantMoveOnTheirSecondTurn stamp: 'IO 11/1/2020 19:11:10'!
PASSED!

!testRun: #TerniLapilliGameTest #test27OCantMoveOnTheirThirdTurn stamp: 'IO 11/1/2020 19:11:10'!
PASSED!

!testRun: #TerniLapilliGameTest #test28XCantPutAfterTheirThirdTurn stamp: 'IO 11/1/2020 19:11:10'!
PASSED!

!testRun: #TerniLapilliGameTest #test29OCantPutAfterTheirThirdTurn stamp: 'IO 11/1/2020 19:11:10'!
PASSED!

!testRun: #TerniLapilliGameTest #test30OCantPutAfterXWon stamp: 'IO 11/1/2020 19:11:10'!
PASSED!

!testRun: #TerniLapilliGameTest #test31OCantMoveAfterXWon stamp: 'IO 11/1/2020 19:11:10'!
PASSED!

!testRun: #TerniLapilliGameTest #test32XCantMoveAfterOWon stamp: 'IO 11/1/2020 19:11:10'!
PASSED!

!testRun: #TerniLapilliGameTest #test33XCantPutAfterOWon stamp: 'IO 11/1/2020 19:11:10'!
PASSED!

!testRun: #TerniLapilliGameTest #test34XCantPutInAnOccupiedSpace stamp: 'IO 11/1/2020 19:11:10'!
PASSED!

!testRun: #TerniLapilliGameTest #test35OCantPutInAnOccupiedSpace stamp: 'IO 11/1/2020 19:11:10'!
PASSED!

!testRun: #TerniLapilliGameTest #test36XCantMoveToAnOccupiedSpace stamp: 'IO 11/1/2020 19:11:10'!
PASSED!

!testRun: #TerniLapilliGameTest #test37OCantMoveToAnOccupiedSpace stamp: 'IO 11/1/2020 19:11:10'!
PASSED!

!testRun: #TerniLapilliGameTest #test38XCantPutOutsideTheBoardUnderXAxis stamp: 'IO 11/1/2020 19:11:10'!
PASSED!

!testRun: #TerniLapilliGameTest #test39XCantPutOutsideTheBoardAboveXAxis stamp: 'IO 11/1/2020 19:11:10'!
PASSED!

!testRun: #TerniLapilliGameTest #test40XCantPutOutsideTheBoardUnderNorAboveTheYAxis stamp: 'IO 11/1/2020 19:11:10'!
PASSED!

!testRun: #TerniLapilliGameTest #test41OCantPutOutsideTheBoard stamp: 'IO 11/1/2020 19:11:10'!
PASSED!

!testRun: #TerniLapilliGameTest #test42XCantMoveToOutsideTheBoard stamp: 'IO 11/1/2020 19:11:10'!
FAILURE!

!testRun: #TerniLapilliGameTest #test43OCantMoveToOutsideTheBoard stamp: 'IO 11/1/2020 19:11:10'!
FAILURE!

!testRun: #TerniLapilliGameTest #test44XCantMoveTokensThatDontBelongToThem stamp: 'IO 11/1/2020 19:11:10'!
PASSED!

!testRun: #TerniLapilliGameTest #test45OCantMoveTokensThatDontBelongToThem stamp: 'IO 11/1/2020 19:11:10'!
PASSED!

!testRun: #TerniLapilliGameTest #test46XCantMoveaTokenOutsideItsNeighbors stamp: 'IO 11/1/2020 19:11:10'!
PASSED!

!testRun: #TerniLapilliGameTest #test47OCantMoveATokenOutsideItsNeighbors stamp: 'IO 11/1/2020 19:11:10'!
PASSED!

!testRun: #TerniLapilliGameTest #test42XCantMoveToOutsideTheBoard stamp: 'IO 11/1/2020 19:11:30'!
FAILURE!

!testRun: #TerniLapilliGameTest #test42XCantMoveToOutsideTheBoard stamp: 'IO 11/1/2020 19:11:38'!
PASSED!
!TerniLapilliPlayerTokens methodsFor: 'validations' stamp: 'IO 11/1/2020 19:13:04' prior: 50896978!
validateIsLegalMoveFrom: sourcePosition to: destinationPosition

	"signal when a token cannot be moved from a given position to another"

	(sourcePosition eightNeighbors includes: destinationPosition) ifFalse: [
		^self error: TerniLapilliGame invalidDestinationErrorMessage].
	(self includes: sourcePosition) ifFalse: [
		^self error: TerniLapilliGame noTokenAtPositionErrorMessage].

	self validateIsInBoard: destinationPosition withErrorMessage: TerniLapilliGame cannotMoveErrorMessage.
! !

!testRun: #TerniLapilliGameTest #test01XCanPutAToken stamp: 'IO 11/1/2020 19:13:09'!
PASSED!

!testRun: #TerniLapilliGameTest #test02puttingDoesNotAffectOtherPositions stamp: 'IO 11/1/2020 19:13:09'!
PASSED!

!testRun: #TerniLapilliGameTest #test03XCanPutInOtherPositions stamp: 'IO 11/1/2020 19:13:09'!
PASSED!

!testRun: #TerniLapilliGameTest #test04OCanPut stamp: 'IO 11/1/2020 19:13:09'!
PASSED!

!testRun: #TerniLapilliGameTest #test05XCanMove stamp: 'IO 11/1/2020 19:13:09'!
PASSED!

!testRun: #TerniLapilliGameTest #test06OCanMove stamp: 'IO 11/1/2020 19:13:09'!
PASSED!

!testRun: #TerniLapilliGameTest #test07XWinsWithTheFirstColumn stamp: 'IO 11/1/2020 19:13:09'!
PASSED!

!testRun: #TerniLapilliGameTest #test08XHasntWonYet stamp: 'IO 11/1/2020 19:13:09'!
PASSED!

!testRun: #TerniLapilliGameTest #test09XWinsWithTheSecondColumn stamp: 'IO 11/1/2020 19:13:09'!
PASSED!

!testRun: #TerniLapilliGameTest #test10XWinsWithTheThirdColumn stamp: 'IO 11/1/2020 19:13:09'!
PASSED!

!testRun: #TerniLapilliGameTest #test11XWinsWithTheFirstRow stamp: 'IO 11/1/2020 19:13:09'!
PASSED!

!testRun: #TerniLapilliGameTest #test12XWinsWithTheSecondRow stamp: 'IO 11/1/2020 19:13:09'!
PASSED!

!testRun: #TerniLapilliGameTest #test13XWinsWithTheThirdRow stamp: 'IO 11/1/2020 19:13:09'!
PASSED!

!testRun: #TerniLapilliGameTest #test14XWinsWithTheCrescentDiagonal stamp: 'IO 11/1/2020 19:13:09'!
PASSED!

!testRun: #TerniLapilliGameTest #test15XWinsWithTheDescendantDiagonal stamp: 'IO 11/1/2020 19:13:09'!
PASSED!

!testRun: #TerniLapilliGameTest #test16OWnis stamp: 'IO 11/1/2020 19:13:09'!
PASSED!

!testRun: #TerniLapilliGameTest #test17OCantStartPutting stamp: 'IO 11/1/2020 19:13:09'!
PASSED!

!testRun: #TerniLapilliGameTest #test18XCantPutTwiceInARow stamp: 'IO 11/1/2020 19:13:09'!
PASSED!

!testRun: #TerniLapilliGameTest #test19XCantMoveTwiceInARow stamp: 'IO 11/1/2020 19:13:09'!
PASSED!

!testRun: #TerniLapilliGameTest #test20OCantPutTwiceInARow stamp: 'IO 11/1/2020 19:13:09'!
PASSED!

!testRun: #TerniLapilliGameTest #test21OCantMoveTwiceInARow stamp: 'IO 11/1/2020 19:13:09'!
PASSED!

!testRun: #TerniLapilliGameTest #test22XCantMoveOnTheirFirstTurn stamp: 'IO 11/1/2020 19:13:09'!
PASSED!

!testRun: #TerniLapilliGameTest #test23XCantMoveOnTheirSecondTurn stamp: 'IO 11/1/2020 19:13:09'!
PASSED!

!testRun: #TerniLapilliGameTest #test24XCantMoveOnTheirThirdTurn stamp: 'IO 11/1/2020 19:13:09'!
PASSED!

!testRun: #TerniLapilliGameTest #test25OCantMoveOnTheirFirstTurn stamp: 'IO 11/1/2020 19:13:09'!
PASSED!

!testRun: #TerniLapilliGameTest #test26OCantMoveOnTheirSecondTurn stamp: 'IO 11/1/2020 19:13:09'!
PASSED!

!testRun: #TerniLapilliGameTest #test27OCantMoveOnTheirThirdTurn stamp: 'IO 11/1/2020 19:13:09'!
PASSED!

!testRun: #TerniLapilliGameTest #test28XCantPutAfterTheirThirdTurn stamp: 'IO 11/1/2020 19:13:09'!
PASSED!

!testRun: #TerniLapilliGameTest #test29OCantPutAfterTheirThirdTurn stamp: 'IO 11/1/2020 19:13:09'!
PASSED!

!testRun: #TerniLapilliGameTest #test30OCantPutAfterXWon stamp: 'IO 11/1/2020 19:13:09'!
PASSED!

!testRun: #TerniLapilliGameTest #test31OCantMoveAfterXWon stamp: 'IO 11/1/2020 19:13:09'!
PASSED!

!testRun: #TerniLapilliGameTest #test32XCantMoveAfterOWon stamp: 'IO 11/1/2020 19:13:09'!
PASSED!

!testRun: #TerniLapilliGameTest #test33XCantPutAfterOWon stamp: 'IO 11/1/2020 19:13:09'!
PASSED!

!testRun: #TerniLapilliGameTest #test34XCantPutInAnOccupiedSpace stamp: 'IO 11/1/2020 19:13:09'!
PASSED!

!testRun: #TerniLapilliGameTest #test35OCantPutInAnOccupiedSpace stamp: 'IO 11/1/2020 19:13:09'!
PASSED!

!testRun: #TerniLapilliGameTest #test36XCantMoveToAnOccupiedSpace stamp: 'IO 11/1/2020 19:13:09'!
PASSED!

!testRun: #TerniLapilliGameTest #test37OCantMoveToAnOccupiedSpace stamp: 'IO 11/1/2020 19:13:09'!
PASSED!

!testRun: #TerniLapilliGameTest #test38XCantPutOutsideTheBoardUnderXAxis stamp: 'IO 11/1/2020 19:13:09'!
PASSED!

!testRun: #TerniLapilliGameTest #test39XCantPutOutsideTheBoardAboveXAxis stamp: 'IO 11/1/2020 19:13:09'!
PASSED!

!testRun: #TerniLapilliGameTest #test40XCantPutOutsideTheBoardUnderNorAboveTheYAxis stamp: 'IO 11/1/2020 19:13:09'!
PASSED!

!testRun: #TerniLapilliGameTest #test41OCantPutOutsideTheBoard stamp: 'IO 11/1/2020 19:13:09'!
PASSED!

!testRun: #TerniLapilliGameTest #test42XCantMoveToOutsideTheBoard stamp: 'IO 11/1/2020 19:13:09'!
FAILURE!

!testRun: #TerniLapilliGameTest #test43OCantMoveToOutsideTheBoard stamp: 'IO 11/1/2020 19:13:09'!
FAILURE!

!testRun: #TerniLapilliGameTest #test44XCantMoveTokensThatDontBelongToThem stamp: 'IO 11/1/2020 19:13:09'!
FAILURE!

!testRun: #TerniLapilliGameTest #test45OCantMoveTokensThatDontBelongToThem stamp: 'IO 11/1/2020 19:13:09'!
FAILURE!

!testRun: #TerniLapilliGameTest #test46XCantMoveaTokenOutsideItsNeighbors stamp: 'IO 11/1/2020 19:13:09'!
PASSED!

!testRun: #TerniLapilliGameTest #test47OCantMoveATokenOutsideItsNeighbors stamp: 'IO 11/1/2020 19:13:09'!
PASSED!
!TerniLapilliPlayerTokens methodsFor: 'validations' stamp: 'IO 11/1/2020 19:13:28' prior: 50898404!
validateIsLegalMoveFrom: sourcePosition to: destinationPosition

	"signal when a token cannot be moved from a given position to another"

	(self includes: sourcePosition) ifFalse: [
		^self error: TerniLapilliGame noTokenAtPositionErrorMessage].
	(sourcePosition eightNeighbors includes: destinationPosition) ifFalse: [
		^self error: TerniLapilliGame invalidDestinationErrorMessage].

	self validateIsInBoard: destinationPosition withErrorMessage: TerniLapilliGame cannotMoveErrorMessage.
! !

!testRun: #TerniLapilliGameTest #test01XCanPutAToken stamp: 'IO 11/1/2020 19:13:36'!
PASSED!

!testRun: #TerniLapilliGameTest #test02puttingDoesNotAffectOtherPositions stamp: 'IO 11/1/2020 19:13:36'!
PASSED!

!testRun: #TerniLapilliGameTest #test03XCanPutInOtherPositions stamp: 'IO 11/1/2020 19:13:36'!
PASSED!

!testRun: #TerniLapilliGameTest #test04OCanPut stamp: 'IO 11/1/2020 19:13:36'!
PASSED!

!testRun: #TerniLapilliGameTest #test05XCanMove stamp: 'IO 11/1/2020 19:13:36'!
PASSED!

!testRun: #TerniLapilliGameTest #test06OCanMove stamp: 'IO 11/1/2020 19:13:36'!
PASSED!

!testRun: #TerniLapilliGameTest #test07XWinsWithTheFirstColumn stamp: 'IO 11/1/2020 19:13:36'!
PASSED!

!testRun: #TerniLapilliGameTest #test08XHasntWonYet stamp: 'IO 11/1/2020 19:13:36'!
PASSED!

!testRun: #TerniLapilliGameTest #test09XWinsWithTheSecondColumn stamp: 'IO 11/1/2020 19:13:36'!
PASSED!

!testRun: #TerniLapilliGameTest #test10XWinsWithTheThirdColumn stamp: 'IO 11/1/2020 19:13:36'!
PASSED!

!testRun: #TerniLapilliGameTest #test11XWinsWithTheFirstRow stamp: 'IO 11/1/2020 19:13:36'!
PASSED!

!testRun: #TerniLapilliGameTest #test12XWinsWithTheSecondRow stamp: 'IO 11/1/2020 19:13:36'!
PASSED!

!testRun: #TerniLapilliGameTest #test13XWinsWithTheThirdRow stamp: 'IO 11/1/2020 19:13:36'!
PASSED!

!testRun: #TerniLapilliGameTest #test14XWinsWithTheCrescentDiagonal stamp: 'IO 11/1/2020 19:13:36'!
PASSED!

!testRun: #TerniLapilliGameTest #test15XWinsWithTheDescendantDiagonal stamp: 'IO 11/1/2020 19:13:36'!
PASSED!

!testRun: #TerniLapilliGameTest #test16OWnis stamp: 'IO 11/1/2020 19:13:36'!
PASSED!

!testRun: #TerniLapilliGameTest #test17OCantStartPutting stamp: 'IO 11/1/2020 19:13:36'!
PASSED!

!testRun: #TerniLapilliGameTest #test18XCantPutTwiceInARow stamp: 'IO 11/1/2020 19:13:36'!
PASSED!

!testRun: #TerniLapilliGameTest #test19XCantMoveTwiceInARow stamp: 'IO 11/1/2020 19:13:36'!
PASSED!

!testRun: #TerniLapilliGameTest #test20OCantPutTwiceInARow stamp: 'IO 11/1/2020 19:13:36'!
PASSED!

!testRun: #TerniLapilliGameTest #test21OCantMoveTwiceInARow stamp: 'IO 11/1/2020 19:13:36'!
PASSED!

!testRun: #TerniLapilliGameTest #test22XCantMoveOnTheirFirstTurn stamp: 'IO 11/1/2020 19:13:36'!
PASSED!

!testRun: #TerniLapilliGameTest #test23XCantMoveOnTheirSecondTurn stamp: 'IO 11/1/2020 19:13:36'!
PASSED!

!testRun: #TerniLapilliGameTest #test24XCantMoveOnTheirThirdTurn stamp: 'IO 11/1/2020 19:13:36'!
PASSED!

!testRun: #TerniLapilliGameTest #test25OCantMoveOnTheirFirstTurn stamp: 'IO 11/1/2020 19:13:36'!
PASSED!

!testRun: #TerniLapilliGameTest #test26OCantMoveOnTheirSecondTurn stamp: 'IO 11/1/2020 19:13:36'!
PASSED!

!testRun: #TerniLapilliGameTest #test27OCantMoveOnTheirThirdTurn stamp: 'IO 11/1/2020 19:13:36'!
PASSED!

!testRun: #TerniLapilliGameTest #test28XCantPutAfterTheirThirdTurn stamp: 'IO 11/1/2020 19:13:36'!
PASSED!

!testRun: #TerniLapilliGameTest #test29OCantPutAfterTheirThirdTurn stamp: 'IO 11/1/2020 19:13:36'!
PASSED!

!testRun: #TerniLapilliGameTest #test30OCantPutAfterXWon stamp: 'IO 11/1/2020 19:13:36'!
PASSED!

!testRun: #TerniLapilliGameTest #test31OCantMoveAfterXWon stamp: 'IO 11/1/2020 19:13:36'!
PASSED!

!testRun: #TerniLapilliGameTest #test32XCantMoveAfterOWon stamp: 'IO 11/1/2020 19:13:36'!
PASSED!

!testRun: #TerniLapilliGameTest #test33XCantPutAfterOWon stamp: 'IO 11/1/2020 19:13:36'!
PASSED!

!testRun: #TerniLapilliGameTest #test34XCantPutInAnOccupiedSpace stamp: 'IO 11/1/2020 19:13:36'!
PASSED!

!testRun: #TerniLapilliGameTest #test35OCantPutInAnOccupiedSpace stamp: 'IO 11/1/2020 19:13:36'!
PASSED!

!testRun: #TerniLapilliGameTest #test36XCantMoveToAnOccupiedSpace stamp: 'IO 11/1/2020 19:13:36'!
PASSED!

!testRun: #TerniLapilliGameTest #test37OCantMoveToAnOccupiedSpace stamp: 'IO 11/1/2020 19:13:36'!
PASSED!

!testRun: #TerniLapilliGameTest #test38XCantPutOutsideTheBoardUnderXAxis stamp: 'IO 11/1/2020 19:13:36'!
PASSED!

!testRun: #TerniLapilliGameTest #test39XCantPutOutsideTheBoardAboveXAxis stamp: 'IO 11/1/2020 19:13:36'!
PASSED!

!testRun: #TerniLapilliGameTest #test40XCantPutOutsideTheBoardUnderNorAboveTheYAxis stamp: 'IO 11/1/2020 19:13:36'!
PASSED!

!testRun: #TerniLapilliGameTest #test41OCantPutOutsideTheBoard stamp: 'IO 11/1/2020 19:13:36'!
PASSED!

!testRun: #TerniLapilliGameTest #test42XCantMoveToOutsideTheBoard stamp: 'IO 11/1/2020 19:13:36'!
FAILURE!

!testRun: #TerniLapilliGameTest #test43OCantMoveToOutsideTheBoard stamp: 'IO 11/1/2020 19:13:36'!
FAILURE!

!testRun: #TerniLapilliGameTest #test44XCantMoveTokensThatDontBelongToThem stamp: 'IO 11/1/2020 19:13:36'!
PASSED!

!testRun: #TerniLapilliGameTest #test45OCantMoveTokensThatDontBelongToThem stamp: 'IO 11/1/2020 19:13:36'!
PASSED!

!testRun: #TerniLapilliGameTest #test46XCantMoveaTokenOutsideItsNeighbors stamp: 'IO 11/1/2020 19:13:36'!
PASSED!

!testRun: #TerniLapilliGameTest #test47OCantMoveATokenOutsideItsNeighbors stamp: 'IO 11/1/2020 19:13:36'!
PASSED!

!testRun: #TerniLapilliGameTest #test42XCantMoveToOutsideTheBoard stamp: 'IO 11/1/2020 19:13:55'!
FAILURE!
!TerniLapilliGameTest methodsFor: 'ilegal positions' stamp: 'IO 11/1/2020 19:14:43' prior: 50898028!
test42XCantMoveToOutsideTheBoard
	"X no puede mover hac�a afuera del tablero"
	

	| aGame |

	aGame := self createGameInMovePhase .
	
	self should: [	aGame moveXFrom: 0@1 to: -1@1.] raise: Error withMessageText: TerniLapilliGame invalidPositionErrorMessage . 
	self should: [	aGame moveXFrom: 0@1 to: 3@1.] raise: Error withMessageText: TerniLapilliGame invalidPositionErrorMessage . 
	self should: [	aGame moveXFrom: 0@1 to: 1@-1.] raise: Error withMessageText: TerniLapilliGame invalidPositionErrorMessage . 
	self should: [	aGame moveXFrom: 0@1 to: 1@3.] raise: Error withMessageText: TerniLapilliGame invalidPositionErrorMessage . 
! !

!testRun: #TerniLapilliGameTest #test42XCantMoveToOutsideTheBoard stamp: 'IO 11/1/2020 19:14:44'!
FAILURE!
!TerniLapilliGameTest methodsFor: 'ilegal positions' stamp: 'IO 11/1/2020 19:14:53' prior: 50898052!
test43OCantMoveToOutsideTheBoard
	"O no puede mover hac�a afuera del tablero"
	

	| aGame |

	aGame := self createGameInMovePhase .
	aGame moveXFrom: 0@1 to: 0@0.
	
	self should: [	aGame moveOFrom: 0@2 to: -1@1.] raise: Error withMessageText: TerniLapilliGame invalidPositionErrorMessage . 
	self should: [	aGame moveOFrom: 0@2 to: 3@1.] raise: Error withMessageText: TerniLapilliGame invalidPositionErrorMessage . 
	self should: [	aGame moveOFrom: 0@2 to: 1@-1.] raise: Error withMessageText: TerniLapilliGame invalidPositionErrorMessage . 
	self should: [	aGame moveOFrom: 0@2 to: 1@3.] raise: Error withMessageText: TerniLapilliGame invalidPositionErrorMessage . 
	
! !

!testRun: #TerniLapilliGameTest #test43OCantMoveToOutsideTheBoard stamp: 'IO 11/1/2020 19:14:55'!
FAILURE!

!testRun: #TerniLapilliGameTest #test43OCantMoveToOutsideTheBoard stamp: 'IO 11/1/2020 19:14:55'!
FAILURE!

!testRun: #TerniLapilliGameTest #test01XCanPutAToken stamp: 'IO 11/1/2020 19:15:00'!
PASSED!

!testRun: #TerniLapilliGameTest #test02puttingDoesNotAffectOtherPositions stamp: 'IO 11/1/2020 19:15:00'!
PASSED!

!testRun: #TerniLapilliGameTest #test03XCanPutInOtherPositions stamp: 'IO 11/1/2020 19:15:00'!
PASSED!

!testRun: #TerniLapilliGameTest #test04OCanPut stamp: 'IO 11/1/2020 19:15:00'!
PASSED!

!testRun: #TerniLapilliGameTest #test05XCanMove stamp: 'IO 11/1/2020 19:15:00'!
PASSED!

!testRun: #TerniLapilliGameTest #test06OCanMove stamp: 'IO 11/1/2020 19:15:00'!
PASSED!

!testRun: #TerniLapilliGameTest #test07XWinsWithTheFirstColumn stamp: 'IO 11/1/2020 19:15:00'!
PASSED!

!testRun: #TerniLapilliGameTest #test08XHasntWonYet stamp: 'IO 11/1/2020 19:15:00'!
PASSED!

!testRun: #TerniLapilliGameTest #test09XWinsWithTheSecondColumn stamp: 'IO 11/1/2020 19:15:00'!
PASSED!

!testRun: #TerniLapilliGameTest #test10XWinsWithTheThirdColumn stamp: 'IO 11/1/2020 19:15:00'!
PASSED!

!testRun: #TerniLapilliGameTest #test11XWinsWithTheFirstRow stamp: 'IO 11/1/2020 19:15:00'!
PASSED!

!testRun: #TerniLapilliGameTest #test12XWinsWithTheSecondRow stamp: 'IO 11/1/2020 19:15:00'!
PASSED!

!testRun: #TerniLapilliGameTest #test13XWinsWithTheThirdRow stamp: 'IO 11/1/2020 19:15:00'!
PASSED!

!testRun: #TerniLapilliGameTest #test14XWinsWithTheCrescentDiagonal stamp: 'IO 11/1/2020 19:15:00'!
PASSED!

!testRun: #TerniLapilliGameTest #test15XWinsWithTheDescendantDiagonal stamp: 'IO 11/1/2020 19:15:00'!
PASSED!

!testRun: #TerniLapilliGameTest #test16OWnis stamp: 'IO 11/1/2020 19:15:00'!
PASSED!

!testRun: #TerniLapilliGameTest #test17OCantStartPutting stamp: 'IO 11/1/2020 19:15:00'!
PASSED!

!testRun: #TerniLapilliGameTest #test18XCantPutTwiceInARow stamp: 'IO 11/1/2020 19:15:00'!
PASSED!

!testRun: #TerniLapilliGameTest #test19XCantMoveTwiceInARow stamp: 'IO 11/1/2020 19:15:00'!
PASSED!

!testRun: #TerniLapilliGameTest #test20OCantPutTwiceInARow stamp: 'IO 11/1/2020 19:15:00'!
PASSED!

!testRun: #TerniLapilliGameTest #test21OCantMoveTwiceInARow stamp: 'IO 11/1/2020 19:15:00'!
PASSED!

!testRun: #TerniLapilliGameTest #test22XCantMoveOnTheirFirstTurn stamp: 'IO 11/1/2020 19:15:00'!
PASSED!

!testRun: #TerniLapilliGameTest #test23XCantMoveOnTheirSecondTurn stamp: 'IO 11/1/2020 19:15:00'!
PASSED!

!testRun: #TerniLapilliGameTest #test24XCantMoveOnTheirThirdTurn stamp: 'IO 11/1/2020 19:15:00'!
PASSED!

!testRun: #TerniLapilliGameTest #test25OCantMoveOnTheirFirstTurn stamp: 'IO 11/1/2020 19:15:00'!
PASSED!

!testRun: #TerniLapilliGameTest #test26OCantMoveOnTheirSecondTurn stamp: 'IO 11/1/2020 19:15:00'!
PASSED!

!testRun: #TerniLapilliGameTest #test27OCantMoveOnTheirThirdTurn stamp: 'IO 11/1/2020 19:15:00'!
PASSED!

!testRun: #TerniLapilliGameTest #test28XCantPutAfterTheirThirdTurn stamp: 'IO 11/1/2020 19:15:00'!
PASSED!

!testRun: #TerniLapilliGameTest #test29OCantPutAfterTheirThirdTurn stamp: 'IO 11/1/2020 19:15:00'!
PASSED!

!testRun: #TerniLapilliGameTest #test30OCantPutAfterXWon stamp: 'IO 11/1/2020 19:15:00'!
PASSED!

!testRun: #TerniLapilliGameTest #test31OCantMoveAfterXWon stamp: 'IO 11/1/2020 19:15:00'!
PASSED!

!testRun: #TerniLapilliGameTest #test32XCantMoveAfterOWon stamp: 'IO 11/1/2020 19:15:00'!
PASSED!

!testRun: #TerniLapilliGameTest #test33XCantPutAfterOWon stamp: 'IO 11/1/2020 19:15:00'!
PASSED!

!testRun: #TerniLapilliGameTest #test34XCantPutInAnOccupiedSpace stamp: 'IO 11/1/2020 19:15:00'!
PASSED!

!testRun: #TerniLapilliGameTest #test35OCantPutInAnOccupiedSpace stamp: 'IO 11/1/2020 19:15:00'!
PASSED!

!testRun: #TerniLapilliGameTest #test36XCantMoveToAnOccupiedSpace stamp: 'IO 11/1/2020 19:15:00'!
PASSED!

!testRun: #TerniLapilliGameTest #test37OCantMoveToAnOccupiedSpace stamp: 'IO 11/1/2020 19:15:00'!
PASSED!

!testRun: #TerniLapilliGameTest #test38XCantPutOutsideTheBoardUnderXAxis stamp: 'IO 11/1/2020 19:15:00'!
PASSED!

!testRun: #TerniLapilliGameTest #test39XCantPutOutsideTheBoardAboveXAxis stamp: 'IO 11/1/2020 19:15:00'!
PASSED!

!testRun: #TerniLapilliGameTest #test40XCantPutOutsideTheBoardUnderNorAboveTheYAxis stamp: 'IO 11/1/2020 19:15:00'!
PASSED!

!testRun: #TerniLapilliGameTest #test41OCantPutOutsideTheBoard stamp: 'IO 11/1/2020 19:15:00'!
PASSED!

!testRun: #TerniLapilliGameTest #test42XCantMoveToOutsideTheBoard stamp: 'IO 11/1/2020 19:15:00'!
FAILURE!

!testRun: #TerniLapilliGameTest #test43OCantMoveToOutsideTheBoard stamp: 'IO 11/1/2020 19:15:00'!
FAILURE!

!testRun: #TerniLapilliGameTest #test44XCantMoveTokensThatDontBelongToThem stamp: 'IO 11/1/2020 19:15:00'!
PASSED!

!testRun: #TerniLapilliGameTest #test45OCantMoveTokensThatDontBelongToThem stamp: 'IO 11/1/2020 19:15:00'!
PASSED!

!testRun: #TerniLapilliGameTest #test46XCantMoveaTokenOutsideItsNeighbors stamp: 'IO 11/1/2020 19:15:00'!
PASSED!

!testRun: #TerniLapilliGameTest #test47OCantMoveATokenOutsideItsNeighbors stamp: 'IO 11/1/2020 19:15:00'!
PASSED!

!testRun: #TerniLapilliGameTest #test42XCantMoveToOutsideTheBoard stamp: 'IO 11/1/2020 19:15:06'!
FAILURE!

!testRun: #TerniLapilliGameTest #test42XCantMoveToOutsideTheBoard stamp: 'IO 11/1/2020 19:15:06'!
FAILURE!

!testRun: #TerniLapilliGameTest #test01XCanPutAToken stamp: 'IO 11/1/2020 19:15:30'!
PASSED!

!testRun: #TerniLapilliGameTest #test02puttingDoesNotAffectOtherPositions stamp: 'IO 11/1/2020 19:15:30'!
PASSED!

!testRun: #TerniLapilliGameTest #test03XCanPutInOtherPositions stamp: 'IO 11/1/2020 19:15:30'!
PASSED!

!testRun: #TerniLapilliGameTest #test04OCanPut stamp: 'IO 11/1/2020 19:15:30'!
PASSED!

!testRun: #TerniLapilliGameTest #test05XCanMove stamp: 'IO 11/1/2020 19:15:30'!
PASSED!

!testRun: #TerniLapilliGameTest #test06OCanMove stamp: 'IO 11/1/2020 19:15:30'!
PASSED!

!testRun: #TerniLapilliGameTest #test07XWinsWithTheFirstColumn stamp: 'IO 11/1/2020 19:15:30'!
PASSED!

!testRun: #TerniLapilliGameTest #test08XHasntWonYet stamp: 'IO 11/1/2020 19:15:30'!
PASSED!

!testRun: #TerniLapilliGameTest #test09XWinsWithTheSecondColumn stamp: 'IO 11/1/2020 19:15:30'!
PASSED!

!testRun: #TerniLapilliGameTest #test10XWinsWithTheThirdColumn stamp: 'IO 11/1/2020 19:15:30'!
PASSED!

!testRun: #TerniLapilliGameTest #test11XWinsWithTheFirstRow stamp: 'IO 11/1/2020 19:15:30'!
PASSED!

!testRun: #TerniLapilliGameTest #test12XWinsWithTheSecondRow stamp: 'IO 11/1/2020 19:15:30'!
PASSED!

!testRun: #TerniLapilliGameTest #test13XWinsWithTheThirdRow stamp: 'IO 11/1/2020 19:15:30'!
PASSED!

!testRun: #TerniLapilliGameTest #test14XWinsWithTheCrescentDiagonal stamp: 'IO 11/1/2020 19:15:30'!
PASSED!

!testRun: #TerniLapilliGameTest #test15XWinsWithTheDescendantDiagonal stamp: 'IO 11/1/2020 19:15:30'!
PASSED!

!testRun: #TerniLapilliGameTest #test16OWnis stamp: 'IO 11/1/2020 19:15:30'!
PASSED!

!testRun: #TerniLapilliGameTest #test17OCantStartPutting stamp: 'IO 11/1/2020 19:15:30'!
PASSED!

!testRun: #TerniLapilliGameTest #test18XCantPutTwiceInARow stamp: 'IO 11/1/2020 19:15:30'!
PASSED!

!testRun: #TerniLapilliGameTest #test19XCantMoveTwiceInARow stamp: 'IO 11/1/2020 19:15:30'!
PASSED!

!testRun: #TerniLapilliGameTest #test20OCantPutTwiceInARow stamp: 'IO 11/1/2020 19:15:30'!
PASSED!

!testRun: #TerniLapilliGameTest #test21OCantMoveTwiceInARow stamp: 'IO 11/1/2020 19:15:30'!
PASSED!

!testRun: #TerniLapilliGameTest #test22XCantMoveOnTheirFirstTurn stamp: 'IO 11/1/2020 19:15:30'!
PASSED!

!testRun: #TerniLapilliGameTest #test23XCantMoveOnTheirSecondTurn stamp: 'IO 11/1/2020 19:15:30'!
PASSED!

!testRun: #TerniLapilliGameTest #test24XCantMoveOnTheirThirdTurn stamp: 'IO 11/1/2020 19:15:30'!
PASSED!

!testRun: #TerniLapilliGameTest #test25OCantMoveOnTheirFirstTurn stamp: 'IO 11/1/2020 19:15:30'!
PASSED!

!testRun: #TerniLapilliGameTest #test26OCantMoveOnTheirSecondTurn stamp: 'IO 11/1/2020 19:15:30'!
PASSED!

!testRun: #TerniLapilliGameTest #test27OCantMoveOnTheirThirdTurn stamp: 'IO 11/1/2020 19:15:30'!
PASSED!

!testRun: #TerniLapilliGameTest #test28XCantPutAfterTheirThirdTurn stamp: 'IO 11/1/2020 19:15:30'!
PASSED!

!testRun: #TerniLapilliGameTest #test29OCantPutAfterTheirThirdTurn stamp: 'IO 11/1/2020 19:15:30'!
PASSED!

!testRun: #TerniLapilliGameTest #test30OCantPutAfterXWon stamp: 'IO 11/1/2020 19:15:30'!
PASSED!

!testRun: #TerniLapilliGameTest #test31OCantMoveAfterXWon stamp: 'IO 11/1/2020 19:15:30'!
PASSED!

!testRun: #TerniLapilliGameTest #test32XCantMoveAfterOWon stamp: 'IO 11/1/2020 19:15:30'!
PASSED!

!testRun: #TerniLapilliGameTest #test33XCantPutAfterOWon stamp: 'IO 11/1/2020 19:15:30'!
PASSED!

!testRun: #TerniLapilliGameTest #test34XCantPutInAnOccupiedSpace stamp: 'IO 11/1/2020 19:15:30'!
PASSED!

!testRun: #TerniLapilliGameTest #test35OCantPutInAnOccupiedSpace stamp: 'IO 11/1/2020 19:15:30'!
PASSED!

!testRun: #TerniLapilliGameTest #test36XCantMoveToAnOccupiedSpace stamp: 'IO 11/1/2020 19:15:30'!
PASSED!

!testRun: #TerniLapilliGameTest #test37OCantMoveToAnOccupiedSpace stamp: 'IO 11/1/2020 19:15:30'!
PASSED!

!testRun: #TerniLapilliGameTest #test38XCantPutOutsideTheBoardUnderXAxis stamp: 'IO 11/1/2020 19:15:30'!
PASSED!

!testRun: #TerniLapilliGameTest #test39XCantPutOutsideTheBoardAboveXAxis stamp: 'IO 11/1/2020 19:15:30'!
PASSED!

!testRun: #TerniLapilliGameTest #test40XCantPutOutsideTheBoardUnderNorAboveTheYAxis stamp: 'IO 11/1/2020 19:15:30'!
PASSED!

!testRun: #TerniLapilliGameTest #test41OCantPutOutsideTheBoard stamp: 'IO 11/1/2020 19:15:30'!
PASSED!

!testRun: #TerniLapilliGameTest #test42XCantMoveToOutsideTheBoard stamp: 'IO 11/1/2020 19:15:30'!
FAILURE!

!testRun: #TerniLapilliGameTest #test43OCantMoveToOutsideTheBoard stamp: 'IO 11/1/2020 19:15:30'!
FAILURE!

!testRun: #TerniLapilliGameTest #test44XCantMoveTokensThatDontBelongToThem stamp: 'IO 11/1/2020 19:15:30'!
PASSED!

!testRun: #TerniLapilliGameTest #test45OCantMoveTokensThatDontBelongToThem stamp: 'IO 11/1/2020 19:15:30'!
PASSED!

!testRun: #TerniLapilliGameTest #test46XCantMoveaTokenOutsideItsNeighbors stamp: 'IO 11/1/2020 19:15:30'!
PASSED!

!testRun: #TerniLapilliGameTest #test47OCantMoveATokenOutsideItsNeighbors stamp: 'IO 11/1/2020 19:15:30'!
PASSED!

!testRun: #TerniLapilliGameTest #test42XCantMoveToOutsideTheBoard stamp: 'IO 11/1/2020 19:15:37'!
FAILURE!
!TerniLapilliPlayerTokens methodsFor: 'validations' stamp: 'IO 11/1/2020 19:16:08' prior: 50898576!
validateIsLegalMoveFrom: sourcePosition to: destinationPosition

	"signal when a token cannot be moved from a given position to another"

	(sourcePosition eightNeighbors includes: destinationPosition) ifFalse: [
		^self error: TerniLapilliGame invalidDestinationErrorMessage].
	(self includes: sourcePosition) ifFalse: [
		^self error: TerniLapilliGame noTokenAtPositionErrorMessage].

	self validateIsInBoard: destinationPosition withErrorMessage: TerniLapilliGame cannotMoveErrorMessage.
! !

!testRun: #TerniLapilliGameTest #test01XCanPutAToken stamp: 'IO 11/1/2020 19:16:10'!
PASSED!

!testRun: #TerniLapilliGameTest #test02puttingDoesNotAffectOtherPositions stamp: 'IO 11/1/2020 19:16:10'!
PASSED!

!testRun: #TerniLapilliGameTest #test03XCanPutInOtherPositions stamp: 'IO 11/1/2020 19:16:10'!
PASSED!

!testRun: #TerniLapilliGameTest #test04OCanPut stamp: 'IO 11/1/2020 19:16:10'!
PASSED!

!testRun: #TerniLapilliGameTest #test05XCanMove stamp: 'IO 11/1/2020 19:16:10'!
PASSED!

!testRun: #TerniLapilliGameTest #test06OCanMove stamp: 'IO 11/1/2020 19:16:10'!
PASSED!

!testRun: #TerniLapilliGameTest #test07XWinsWithTheFirstColumn stamp: 'IO 11/1/2020 19:16:10'!
PASSED!

!testRun: #TerniLapilliGameTest #test08XHasntWonYet stamp: 'IO 11/1/2020 19:16:10'!
PASSED!

!testRun: #TerniLapilliGameTest #test09XWinsWithTheSecondColumn stamp: 'IO 11/1/2020 19:16:10'!
PASSED!

!testRun: #TerniLapilliGameTest #test10XWinsWithTheThirdColumn stamp: 'IO 11/1/2020 19:16:10'!
PASSED!

!testRun: #TerniLapilliGameTest #test11XWinsWithTheFirstRow stamp: 'IO 11/1/2020 19:16:10'!
PASSED!

!testRun: #TerniLapilliGameTest #test12XWinsWithTheSecondRow stamp: 'IO 11/1/2020 19:16:10'!
PASSED!

!testRun: #TerniLapilliGameTest #test13XWinsWithTheThirdRow stamp: 'IO 11/1/2020 19:16:10'!
PASSED!

!testRun: #TerniLapilliGameTest #test14XWinsWithTheCrescentDiagonal stamp: 'IO 11/1/2020 19:16:10'!
PASSED!

!testRun: #TerniLapilliGameTest #test15XWinsWithTheDescendantDiagonal stamp: 'IO 11/1/2020 19:16:10'!
PASSED!

!testRun: #TerniLapilliGameTest #test16OWnis stamp: 'IO 11/1/2020 19:16:10'!
PASSED!

!testRun: #TerniLapilliGameTest #test17OCantStartPutting stamp: 'IO 11/1/2020 19:16:10'!
PASSED!

!testRun: #TerniLapilliGameTest #test18XCantPutTwiceInARow stamp: 'IO 11/1/2020 19:16:10'!
PASSED!

!testRun: #TerniLapilliGameTest #test19XCantMoveTwiceInARow stamp: 'IO 11/1/2020 19:16:10'!
PASSED!

!testRun: #TerniLapilliGameTest #test20OCantPutTwiceInARow stamp: 'IO 11/1/2020 19:16:10'!
PASSED!

!testRun: #TerniLapilliGameTest #test21OCantMoveTwiceInARow stamp: 'IO 11/1/2020 19:16:10'!
PASSED!

!testRun: #TerniLapilliGameTest #test22XCantMoveOnTheirFirstTurn stamp: 'IO 11/1/2020 19:16:10'!
PASSED!

!testRun: #TerniLapilliGameTest #test23XCantMoveOnTheirSecondTurn stamp: 'IO 11/1/2020 19:16:10'!
PASSED!

!testRun: #TerniLapilliGameTest #test24XCantMoveOnTheirThirdTurn stamp: 'IO 11/1/2020 19:16:10'!
PASSED!

!testRun: #TerniLapilliGameTest #test25OCantMoveOnTheirFirstTurn stamp: 'IO 11/1/2020 19:16:10'!
PASSED!

!testRun: #TerniLapilliGameTest #test26OCantMoveOnTheirSecondTurn stamp: 'IO 11/1/2020 19:16:10'!
PASSED!

!testRun: #TerniLapilliGameTest #test27OCantMoveOnTheirThirdTurn stamp: 'IO 11/1/2020 19:16:10'!
PASSED!

!testRun: #TerniLapilliGameTest #test28XCantPutAfterTheirThirdTurn stamp: 'IO 11/1/2020 19:16:10'!
PASSED!

!testRun: #TerniLapilliGameTest #test29OCantPutAfterTheirThirdTurn stamp: 'IO 11/1/2020 19:16:10'!
PASSED!

!testRun: #TerniLapilliGameTest #test30OCantPutAfterXWon stamp: 'IO 11/1/2020 19:16:10'!
PASSED!

!testRun: #TerniLapilliGameTest #test31OCantMoveAfterXWon stamp: 'IO 11/1/2020 19:16:10'!
PASSED!

!testRun: #TerniLapilliGameTest #test32XCantMoveAfterOWon stamp: 'IO 11/1/2020 19:16:10'!
PASSED!

!testRun: #TerniLapilliGameTest #test33XCantPutAfterOWon stamp: 'IO 11/1/2020 19:16:10'!
PASSED!

!testRun: #TerniLapilliGameTest #test34XCantPutInAnOccupiedSpace stamp: 'IO 11/1/2020 19:16:10'!
PASSED!

!testRun: #TerniLapilliGameTest #test35OCantPutInAnOccupiedSpace stamp: 'IO 11/1/2020 19:16:10'!
PASSED!

!testRun: #TerniLapilliGameTest #test36XCantMoveToAnOccupiedSpace stamp: 'IO 11/1/2020 19:16:10'!
PASSED!

!testRun: #TerniLapilliGameTest #test37OCantMoveToAnOccupiedSpace stamp: 'IO 11/1/2020 19:16:10'!
PASSED!

!testRun: #TerniLapilliGameTest #test38XCantPutOutsideTheBoardUnderXAxis stamp: 'IO 11/1/2020 19:16:10'!
PASSED!

!testRun: #TerniLapilliGameTest #test39XCantPutOutsideTheBoardAboveXAxis stamp: 'IO 11/1/2020 19:16:10'!
PASSED!

!testRun: #TerniLapilliGameTest #test40XCantPutOutsideTheBoardUnderNorAboveTheYAxis stamp: 'IO 11/1/2020 19:16:10'!
PASSED!

!testRun: #TerniLapilliGameTest #test41OCantPutOutsideTheBoard stamp: 'IO 11/1/2020 19:16:10'!
PASSED!

!testRun: #TerniLapilliGameTest #test42XCantMoveToOutsideTheBoard stamp: 'IO 11/1/2020 19:16:10'!
FAILURE!

!testRun: #TerniLapilliGameTest #test43OCantMoveToOutsideTheBoard stamp: 'IO 11/1/2020 19:16:10'!
FAILURE!

!testRun: #TerniLapilliGameTest #test44XCantMoveTokensThatDontBelongToThem stamp: 'IO 11/1/2020 19:16:10'!
FAILURE!

!testRun: #TerniLapilliGameTest #test45OCantMoveTokensThatDontBelongToThem stamp: 'IO 11/1/2020 19:16:10'!
FAILURE!

!testRun: #TerniLapilliGameTest #test46XCantMoveaTokenOutsideItsNeighbors stamp: 'IO 11/1/2020 19:16:10'!
PASSED!

!testRun: #TerniLapilliGameTest #test47OCantMoveATokenOutsideItsNeighbors stamp: 'IO 11/1/2020 19:16:10'!
PASSED!
!TerniLapilliPlayerTokens methodsFor: 'validations' stamp: 'IO 11/1/2020 19:16:23' prior: 50899127!
validateIsLegalMoveFrom: sourcePosition to: destinationPosition

	"signal when a token cannot be moved from a given position to another"

	(self includes: sourcePosition) ifFalse: [
		^self error: TerniLapilliGame noTokenAtPositionErrorMessage].
	(sourcePosition eightNeighbors includes: destinationPosition) ifFalse: [
		^self error: TerniLapilliGame invalidDestinationErrorMessage].

	self validateIsInBoard: destinationPosition withErrorMessage: TerniLapilliGame cannotMoveErrorMessage.
! !

!testRun: #TerniLapilliGameTest #test01XCanPutAToken stamp: 'IO 11/1/2020 19:16:28'!
PASSED!

!testRun: #TerniLapilliGameTest #test02puttingDoesNotAffectOtherPositions stamp: 'IO 11/1/2020 19:16:28'!
PASSED!

!testRun: #TerniLapilliGameTest #test03XCanPutInOtherPositions stamp: 'IO 11/1/2020 19:16:28'!
PASSED!

!testRun: #TerniLapilliGameTest #test04OCanPut stamp: 'IO 11/1/2020 19:16:28'!
PASSED!

!testRun: #TerniLapilliGameTest #test05XCanMove stamp: 'IO 11/1/2020 19:16:28'!
PASSED!

!testRun: #TerniLapilliGameTest #test06OCanMove stamp: 'IO 11/1/2020 19:16:28'!
PASSED!

!testRun: #TerniLapilliGameTest #test07XWinsWithTheFirstColumn stamp: 'IO 11/1/2020 19:16:28'!
PASSED!

!testRun: #TerniLapilliGameTest #test08XHasntWonYet stamp: 'IO 11/1/2020 19:16:28'!
PASSED!

!testRun: #TerniLapilliGameTest #test09XWinsWithTheSecondColumn stamp: 'IO 11/1/2020 19:16:28'!
PASSED!

!testRun: #TerniLapilliGameTest #test10XWinsWithTheThirdColumn stamp: 'IO 11/1/2020 19:16:28'!
PASSED!

!testRun: #TerniLapilliGameTest #test11XWinsWithTheFirstRow stamp: 'IO 11/1/2020 19:16:28'!
PASSED!

!testRun: #TerniLapilliGameTest #test12XWinsWithTheSecondRow stamp: 'IO 11/1/2020 19:16:28'!
PASSED!

!testRun: #TerniLapilliGameTest #test13XWinsWithTheThirdRow stamp: 'IO 11/1/2020 19:16:28'!
PASSED!

!testRun: #TerniLapilliGameTest #test14XWinsWithTheCrescentDiagonal stamp: 'IO 11/1/2020 19:16:28'!
PASSED!

!testRun: #TerniLapilliGameTest #test15XWinsWithTheDescendantDiagonal stamp: 'IO 11/1/2020 19:16:28'!
PASSED!

!testRun: #TerniLapilliGameTest #test16OWnis stamp: 'IO 11/1/2020 19:16:28'!
PASSED!

!testRun: #TerniLapilliGameTest #test17OCantStartPutting stamp: 'IO 11/1/2020 19:16:28'!
PASSED!

!testRun: #TerniLapilliGameTest #test18XCantPutTwiceInARow stamp: 'IO 11/1/2020 19:16:28'!
PASSED!

!testRun: #TerniLapilliGameTest #test19XCantMoveTwiceInARow stamp: 'IO 11/1/2020 19:16:28'!
PASSED!

!testRun: #TerniLapilliGameTest #test20OCantPutTwiceInARow stamp: 'IO 11/1/2020 19:16:28'!
PASSED!

!testRun: #TerniLapilliGameTest #test21OCantMoveTwiceInARow stamp: 'IO 11/1/2020 19:16:28'!
PASSED!

!testRun: #TerniLapilliGameTest #test22XCantMoveOnTheirFirstTurn stamp: 'IO 11/1/2020 19:16:28'!
PASSED!

!testRun: #TerniLapilliGameTest #test23XCantMoveOnTheirSecondTurn stamp: 'IO 11/1/2020 19:16:28'!
PASSED!

!testRun: #TerniLapilliGameTest #test24XCantMoveOnTheirThirdTurn stamp: 'IO 11/1/2020 19:16:28'!
PASSED!

!testRun: #TerniLapilliGameTest #test25OCantMoveOnTheirFirstTurn stamp: 'IO 11/1/2020 19:16:28'!
PASSED!

!testRun: #TerniLapilliGameTest #test26OCantMoveOnTheirSecondTurn stamp: 'IO 11/1/2020 19:16:28'!
PASSED!

!testRun: #TerniLapilliGameTest #test27OCantMoveOnTheirThirdTurn stamp: 'IO 11/1/2020 19:16:28'!
PASSED!

!testRun: #TerniLapilliGameTest #test28XCantPutAfterTheirThirdTurn stamp: 'IO 11/1/2020 19:16:28'!
PASSED!

!testRun: #TerniLapilliGameTest #test29OCantPutAfterTheirThirdTurn stamp: 'IO 11/1/2020 19:16:28'!
PASSED!

!testRun: #TerniLapilliGameTest #test30OCantPutAfterXWon stamp: 'IO 11/1/2020 19:16:28'!
PASSED!

!testRun: #TerniLapilliGameTest #test31OCantMoveAfterXWon stamp: 'IO 11/1/2020 19:16:28'!
PASSED!

!testRun: #TerniLapilliGameTest #test32XCantMoveAfterOWon stamp: 'IO 11/1/2020 19:16:28'!
PASSED!

!testRun: #TerniLapilliGameTest #test33XCantPutAfterOWon stamp: 'IO 11/1/2020 19:16:28'!
PASSED!

!testRun: #TerniLapilliGameTest #test34XCantPutInAnOccupiedSpace stamp: 'IO 11/1/2020 19:16:28'!
PASSED!

!testRun: #TerniLapilliGameTest #test35OCantPutInAnOccupiedSpace stamp: 'IO 11/1/2020 19:16:28'!
PASSED!

!testRun: #TerniLapilliGameTest #test36XCantMoveToAnOccupiedSpace stamp: 'IO 11/1/2020 19:16:28'!
PASSED!

!testRun: #TerniLapilliGameTest #test37OCantMoveToAnOccupiedSpace stamp: 'IO 11/1/2020 19:16:28'!
PASSED!

!testRun: #TerniLapilliGameTest #test38XCantPutOutsideTheBoardUnderXAxis stamp: 'IO 11/1/2020 19:16:28'!
PASSED!

!testRun: #TerniLapilliGameTest #test39XCantPutOutsideTheBoardAboveXAxis stamp: 'IO 11/1/2020 19:16:28'!
PASSED!

!testRun: #TerniLapilliGameTest #test40XCantPutOutsideTheBoardUnderNorAboveTheYAxis stamp: 'IO 11/1/2020 19:16:28'!
PASSED!

!testRun: #TerniLapilliGameTest #test41OCantPutOutsideTheBoard stamp: 'IO 11/1/2020 19:16:28'!
PASSED!

!testRun: #TerniLapilliGameTest #test42XCantMoveToOutsideTheBoard stamp: 'IO 11/1/2020 19:16:28'!
FAILURE!

!testRun: #TerniLapilliGameTest #test43OCantMoveToOutsideTheBoard stamp: 'IO 11/1/2020 19:16:28'!
FAILURE!

!testRun: #TerniLapilliGameTest #test44XCantMoveTokensThatDontBelongToThem stamp: 'IO 11/1/2020 19:16:28'!
PASSED!

!testRun: #TerniLapilliGameTest #test45OCantMoveTokensThatDontBelongToThem stamp: 'IO 11/1/2020 19:16:28'!
PASSED!

!testRun: #TerniLapilliGameTest #test46XCantMoveaTokenOutsideItsNeighbors stamp: 'IO 11/1/2020 19:16:28'!
PASSED!

!testRun: #TerniLapilliGameTest #test47OCantMoveATokenOutsideItsNeighbors stamp: 'IO 11/1/2020 19:16:28'!
PASSED!

!testRun: #TerniLapilliGameTest #test42XCantMoveToOutsideTheBoard stamp: 'IO 11/1/2020 19:17:14'!
FAILURE!
!TerniLapilliGameTest methodsFor: 'ilegal positions' stamp: 'IO 11/1/2020 19:21:04' prior: 50898752!
test42XCantMoveToOutsideTheBoard
	"X no puede mover hac�a afuera del tablero"
	

	| aGame |

	aGame := self createGameInMovePhase .
	
	aGame := TerniLapilliGame new.
	
	aGame putXAt: 0@0.
	aGame putOAt: 1@1.	
	aGame putXAt: 2@2.
	aGame putOAt: 2@1.
	aGame putXAt: 1@2.
	aGame putOAt: 0@2.

	self should: [	aGame moveXFrom: 0@0 to: -1@0.] raise: Error withMessageText: TerniLapilliGame invalidPositionErrorMessage . 
	self should: [	aGame moveXFrom: 2@2 to: 3@2.] raise: Error withMessageText: TerniLapilliGame invalidPositionErrorMessage . 
	self should: [	aGame moveXFrom: 0@1 to: 1@-1.] raise: Error withMessageText: TerniLapilliGame invalidPositionErrorMessage . 
	self should: [	aGame moveXFrom: 2@2 to: 2@3.] raise: Error withMessageText: TerniLapilliGame invalidPositionErrorMessage . 
! !

!testRun: #TerniLapilliGameTest #test42XCantMoveToOutsideTheBoard stamp: 'IO 11/1/2020 19:21:06'!
FAILURE!
!TerniLapilliGameTest methodsFor: 'ilegal positions' stamp: 'IO 11/1/2020 19:21:16' prior: 50899475!
test42XCantMoveToOutsideTheBoard
	"X no puede mover hac�a afuera del tablero"
	

	| aGame |
	
	aGame := TerniLapilliGame new.
	
	aGame putXAt: 0@0.
	aGame putOAt: 1@1.	
	aGame putXAt: 2@2.
	aGame putOAt: 2@1.
	aGame putXAt: 1@2.
	aGame putOAt: 0@2.

	self should: [	aGame moveXFrom: 0@0 to: -1@0.] raise: Error withMessageText: TerniLapilliGame invalidPositionErrorMessage . 
	self should: [	aGame moveXFrom: 2@2 to: 3@2.] raise: Error withMessageText: TerniLapilliGame invalidPositionErrorMessage . 
	self should: [	aGame moveXFrom: 0@1 to: 1@-1.] raise: Error withMessageText: TerniLapilliGame invalidPositionErrorMessage . 
	self should: [	aGame moveXFrom: 2@2 to: 2@3.] raise: Error withMessageText: TerniLapilliGame invalidPositionErrorMessage . 
! !

!testRun: #TerniLapilliGameTest #test42XCantMoveToOutsideTheBoard stamp: 'IO 11/1/2020 19:21:17'!
FAILURE!
!TerniLapilliGameTest methodsFor: 'ilegal positions' stamp: 'IO 11/1/2020 19:22:04' prior: 50898779!
test43OCantMoveToOutsideTheBoard
	"O no puede mover hac�a afuera del tablero"
	

	| aGame |
	
	aGame := TerniLapilliGame new.

	aGame putXAt: 0@2.
	aGame putOAt: 0@0.
	aGame putXAt: 1@1.	
	aGame putOAt: 2@2.
	aGame putXAt: 2@1.
	aGame putOAt: 1@2.

	self should: [	aGame moveOFrom: 0@2 to: -1@1.] raise: Error withMessageText: TerniLapilliGame invalidPositionErrorMessage . 
	self should: [	aGame moveOFrom: 0@2 to: 3@1.] raise: Error withMessageText: TerniLapilliGame invalidPositionErrorMessage . 
	self should: [	aGame moveOFrom: 0@2 to: 1@-1.] raise: Error withMessageText: TerniLapilliGame invalidPositionErrorMessage . 
	self should: [	aGame moveOFrom: 0@2 to: 1@3.] raise: Error withMessageText: TerniLapilliGame invalidPositionErrorMessage . 
	
! !
!TerniLapilliGameTest methodsFor: 'ilegal positions' stamp: 'IO 11/1/2020 19:22:22' prior: 50899538!
test43OCantMoveToOutsideTheBoard
	"O no puede mover hac�a afuera del tablero"
	

	| aGame |
	
	aGame := TerniLapilliGame new.

	aGame putXAt: 0@2.
	aGame putOAt: 0@0.
	aGame putXAt: 1@1.	
	aGame putOAt: 2@2.
	aGame putXAt: 2@1.
	aGame putOAt: 1@2.

	self should: [	aGame moveOFrom: 0@0 to: -1@0.] raise: Error withMessageText: TerniLapilliGame invalidPositionErrorMessage . 
	self should: [	aGame moveOFrom: 2@2 to: 3@2.] raise: Error withMessageText: TerniLapilliGame invalidPositionErrorMessage . 
	self should: [	aGame moveOFrom: 0@1 to: 1@-1.] raise: Error withMessageText: TerniLapilliGame invalidPositionErrorMessage . 
	self should: [	aGame moveOFrom: 2@2 to: 2@3.] raise: Error withMessageText: TerniLapilliGame invalidPositionErrorMessage . 

! !

!testRun: #TerniLapilliGameTest #test43OCantMoveToOutsideTheBoard stamp: 'IO 11/1/2020 19:22:23'!
FAILURE!
!TerniLapilliGameTest methodsFor: 'ilegal positions' stamp: 'IO 11/1/2020 19:22:59' prior: 50899565!
test43OCantMoveToOutsideTheBoard
	"O no puede mover hac�a afuera del tablero"
	

	| aGame |
	
	aGame := TerniLapilliGame new.

	aGame putXAt: 0@2.
	aGame putOAt: 0@0.
	aGame putXAt: 1@1.	
	aGame putOAt: 2@2.
	aGame putXAt: 2@1.
	aGame putOAt: 1@2.
	
	aGame moveXFrom: 0@2 to: 0@1.

	self should: [	aGame moveOFrom: 0@0 to: -1@0.] raise: Error withMessageText: TerniLapilliGame invalidPositionErrorMessage . 
	self should: [	aGame moveOFrom: 2@2 to: 3@2.] raise: Error withMessageText: TerniLapilliGame invalidPositionErrorMessage . 
	self should: [	aGame moveOFrom: 0@1 to: 1@-1.] raise: Error withMessageText: TerniLapilliGame invalidPositionErrorMessage . 
	self should: [	aGame moveOFrom: 2@2 to: 2@3.] raise: Error withMessageText: TerniLapilliGame invalidPositionErrorMessage . 

! !
!TerniLapilliGameTest methodsFor: 'ilegal positions' stamp: 'IO 11/1/2020 19:23:01' prior: 50899596!
test43OCantMoveToOutsideTheBoard
	"O no puede mover hac�a afuera del tablero"
	

	| aGame |
	
	aGame := TerniLapilliGame new.

	aGame putXAt: 0@2.
	aGame putOAt: 0@0.
	aGame putXAt: 1@1.	
	aGame putOAt: 2@2.
	aGame putXAt: 2@1.
	aGame putOAt: 1@2.
	aGame moveXFrom: 0@2 to: 0@1.

	self should: [	aGame moveOFrom: 0@0 to: -1@0.] raise: Error withMessageText: TerniLapilliGame invalidPositionErrorMessage . 
	self should: [	aGame moveOFrom: 2@2 to: 3@2.] raise: Error withMessageText: TerniLapilliGame invalidPositionErrorMessage . 
	self should: [	aGame moveOFrom: 0@1 to: 1@-1.] raise: Error withMessageText: TerniLapilliGame invalidPositionErrorMessage . 
	self should: [	aGame moveOFrom: 2@2 to: 2@3.] raise: Error withMessageText: TerniLapilliGame invalidPositionErrorMessage . 

! !

!testRun: #TerniLapilliGameTest #test43OCantMoveToOutsideTheBoard stamp: 'IO 11/1/2020 19:23:02'!
FAILURE!

!testRun: #TerniLapilliGameTest #test43OCantMoveToOutsideTheBoard stamp: 'IO 11/1/2020 19:23:18'!
FAILURE!
!TerniLapilliGameTest methodsFor: 'ilegal positions' stamp: 'IO 11/1/2020 19:23:41' prior: 50899624!
test43OCantMoveToOutsideTheBoard
	"O no puede mover hac�a afuera del tablero"
	

	| aGame |
	
	aGame := TerniLapilliGame new.

	aGame putXAt: 0@2.
	aGame putOAt: 0@0.
	aGame putXAt: 1@1.	
	aGame putOAt: 2@2.
	aGame putXAt: 2@1.
	aGame putOAt: 1@2.
	aGame moveXFrom: 1@1 to: 0@1.

	self should: [	aGame moveOFrom: 0@0 to: -1@0.] raise: Error withMessageText: TerniLapilliGame invalidPositionErrorMessage . 
	self should: [	aGame moveOFrom: 2@2 to: 3@2.] raise: Error withMessageText: TerniLapilliGame invalidPositionErrorMessage . 
	self should: [	aGame moveOFrom: 0@1 to: 1@-1.] raise: Error withMessageText: TerniLapilliGame invalidPositionErrorMessage . 
	self should: [	aGame moveOFrom: 2@2 to: 2@3.] raise: Error withMessageText: TerniLapilliGame invalidPositionErrorMessage . 

! !

!testRun: #TerniLapilliGameTest #test43OCantMoveToOutsideTheBoard stamp: 'IO 11/1/2020 19:23:43'!
FAILURE!

!testRun: #TerniLapilliGameTest #test43OCantMoveToOutsideTheBoard stamp: 'IO 11/1/2020 19:23:47'!
FAILURE!
!TerniLapilliGameTest methodsFor: 'ilegal positions' stamp: 'IO 11/1/2020 19:24:11' prior: 50899659!
test43OCantMoveToOutsideTheBoard
	"O no puede mover hac�a afuera del tablero"
	

	| aGame |
	
	aGame := TerniLapilliGame new.

	aGame putXAt: 0@2.
	aGame putOAt: 0@0.
	aGame putXAt: 1@1.	
	aGame putOAt: 2@2.
	aGame putXAt: 2@1.
	aGame putOAt: 1@2.
	aGame moveXFrom: 1@1 to: 0@1.

	self should: [	aGame moveOFrom: 0@0 to: -1@0.] raise: Error withMessageText: TerniLapilliGame invalidPositionErrorMessage . 
	self should: [	aGame moveOFrom: 2@2 to: 3@2.] raise: Error withMessageText: TerniLapilliGame invalidPositionErrorMessage . 
	self should: [	aGame moveOFrom: 0@0 to: 1@-1.] raise: Error withMessageText: TerniLapilliGame invalidPositionErrorMessage . 
	self should: [	aGame moveOFrom: 2@2 to: 2@3.] raise: Error withMessageText: TerniLapilliGame invalidPositionErrorMessage . 

! !

!testRun: #TerniLapilliGameTest #test43OCantMoveToOutsideTheBoard stamp: 'IO 11/1/2020 19:24:12'!
PASSED!

!testRun: #TerniLapilliGameTest #test01XCanPutAToken stamp: 'IO 11/1/2020 19:24:12'!
PASSED!

!testRun: #TerniLapilliGameTest #test02puttingDoesNotAffectOtherPositions stamp: 'IO 11/1/2020 19:24:12'!
PASSED!

!testRun: #TerniLapilliGameTest #test03XCanPutInOtherPositions stamp: 'IO 11/1/2020 19:24:12'!
PASSED!

!testRun: #TerniLapilliGameTest #test04OCanPut stamp: 'IO 11/1/2020 19:24:12'!
PASSED!

!testRun: #TerniLapilliGameTest #test05XCanMove stamp: 'IO 11/1/2020 19:24:12'!
PASSED!

!testRun: #TerniLapilliGameTest #test06OCanMove stamp: 'IO 11/1/2020 19:24:12'!
PASSED!

!testRun: #TerniLapilliGameTest #test07XWinsWithTheFirstColumn stamp: 'IO 11/1/2020 19:24:12'!
PASSED!

!testRun: #TerniLapilliGameTest #test08XHasntWonYet stamp: 'IO 11/1/2020 19:24:12'!
PASSED!

!testRun: #TerniLapilliGameTest #test09XWinsWithTheSecondColumn stamp: 'IO 11/1/2020 19:24:12'!
PASSED!

!testRun: #TerniLapilliGameTest #test10XWinsWithTheThirdColumn stamp: 'IO 11/1/2020 19:24:12'!
PASSED!

!testRun: #TerniLapilliGameTest #test11XWinsWithTheFirstRow stamp: 'IO 11/1/2020 19:24:12'!
PASSED!

!testRun: #TerniLapilliGameTest #test12XWinsWithTheSecondRow stamp: 'IO 11/1/2020 19:24:12'!
PASSED!

!testRun: #TerniLapilliGameTest #test13XWinsWithTheThirdRow stamp: 'IO 11/1/2020 19:24:12'!
PASSED!

!testRun: #TerniLapilliGameTest #test14XWinsWithTheCrescentDiagonal stamp: 'IO 11/1/2020 19:24:12'!
PASSED!

!testRun: #TerniLapilliGameTest #test15XWinsWithTheDescendantDiagonal stamp: 'IO 11/1/2020 19:24:12'!
PASSED!

!testRun: #TerniLapilliGameTest #test16OWnis stamp: 'IO 11/1/2020 19:24:12'!
PASSED!

!testRun: #TerniLapilliGameTest #test17OCantStartPutting stamp: 'IO 11/1/2020 19:24:12'!
PASSED!

!testRun: #TerniLapilliGameTest #test18XCantPutTwiceInARow stamp: 'IO 11/1/2020 19:24:12'!
PASSED!

!testRun: #TerniLapilliGameTest #test19XCantMoveTwiceInARow stamp: 'IO 11/1/2020 19:24:12'!
PASSED!

!testRun: #TerniLapilliGameTest #test20OCantPutTwiceInARow stamp: 'IO 11/1/2020 19:24:12'!
PASSED!

!testRun: #TerniLapilliGameTest #test21OCantMoveTwiceInARow stamp: 'IO 11/1/2020 19:24:12'!
PASSED!

!testRun: #TerniLapilliGameTest #test22XCantMoveOnTheirFirstTurn stamp: 'IO 11/1/2020 19:24:12'!
PASSED!

!testRun: #TerniLapilliGameTest #test23XCantMoveOnTheirSecondTurn stamp: 'IO 11/1/2020 19:24:12'!
PASSED!

!testRun: #TerniLapilliGameTest #test24XCantMoveOnTheirThirdTurn stamp: 'IO 11/1/2020 19:24:12'!
PASSED!

!testRun: #TerniLapilliGameTest #test25OCantMoveOnTheirFirstTurn stamp: 'IO 11/1/2020 19:24:12'!
PASSED!

!testRun: #TerniLapilliGameTest #test26OCantMoveOnTheirSecondTurn stamp: 'IO 11/1/2020 19:24:12'!
PASSED!

!testRun: #TerniLapilliGameTest #test27OCantMoveOnTheirThirdTurn stamp: 'IO 11/1/2020 19:24:12'!
PASSED!

!testRun: #TerniLapilliGameTest #test28XCantPutAfterTheirThirdTurn stamp: 'IO 11/1/2020 19:24:12'!
PASSED!

!testRun: #TerniLapilliGameTest #test29OCantPutAfterTheirThirdTurn stamp: 'IO 11/1/2020 19:24:12'!
PASSED!

!testRun: #TerniLapilliGameTest #test30OCantPutAfterXWon stamp: 'IO 11/1/2020 19:24:12'!
PASSED!

!testRun: #TerniLapilliGameTest #test31OCantMoveAfterXWon stamp: 'IO 11/1/2020 19:24:12'!
PASSED!

!testRun: #TerniLapilliGameTest #test32XCantMoveAfterOWon stamp: 'IO 11/1/2020 19:24:12'!
PASSED!

!testRun: #TerniLapilliGameTest #test33XCantPutAfterOWon stamp: 'IO 11/1/2020 19:24:12'!
PASSED!

!testRun: #TerniLapilliGameTest #test34XCantPutInAnOccupiedSpace stamp: 'IO 11/1/2020 19:24:12'!
PASSED!

!testRun: #TerniLapilliGameTest #test35OCantPutInAnOccupiedSpace stamp: 'IO 11/1/2020 19:24:12'!
PASSED!

!testRun: #TerniLapilliGameTest #test36XCantMoveToAnOccupiedSpace stamp: 'IO 11/1/2020 19:24:12'!
PASSED!

!testRun: #TerniLapilliGameTest #test37OCantMoveToAnOccupiedSpace stamp: 'IO 11/1/2020 19:24:12'!
PASSED!

!testRun: #TerniLapilliGameTest #test38XCantPutOutsideTheBoardUnderXAxis stamp: 'IO 11/1/2020 19:24:12'!
PASSED!

!testRun: #TerniLapilliGameTest #test39XCantPutOutsideTheBoardAboveXAxis stamp: 'IO 11/1/2020 19:24:12'!
PASSED!

!testRun: #TerniLapilliGameTest #test40XCantPutOutsideTheBoardUnderNorAboveTheYAxis stamp: 'IO 11/1/2020 19:24:12'!
PASSED!

!testRun: #TerniLapilliGameTest #test41OCantPutOutsideTheBoard stamp: 'IO 11/1/2020 19:24:12'!
PASSED!

!testRun: #TerniLapilliGameTest #test42XCantMoveToOutsideTheBoard stamp: 'IO 11/1/2020 19:24:12'!
FAILURE!

!testRun: #TerniLapilliGameTest #test43OCantMoveToOutsideTheBoard stamp: 'IO 11/1/2020 19:24:12'!
PASSED!

!testRun: #TerniLapilliGameTest #test44XCantMoveTokensThatDontBelongToThem stamp: 'IO 11/1/2020 19:24:12'!
PASSED!

!testRun: #TerniLapilliGameTest #test45OCantMoveTokensThatDontBelongToThem stamp: 'IO 11/1/2020 19:24:12'!
PASSED!

!testRun: #TerniLapilliGameTest #test46XCantMoveaTokenOutsideItsNeighbors stamp: 'IO 11/1/2020 19:24:12'!
PASSED!

!testRun: #TerniLapilliGameTest #test47OCantMoveATokenOutsideItsNeighbors stamp: 'IO 11/1/2020 19:24:12'!
PASSED!

!testRun: #TerniLapilliGameTest #test42XCantMoveToOutsideTheBoard stamp: 'IO 11/1/2020 19:24:12'!
FAILURE!
!TerniLapilliGameTest methodsFor: 'ilegal positions' stamp: 'IO 11/1/2020 19:24:22' prior: 50899507!
test42XCantMoveToOutsideTheBoard
	"X no puede mover hac�a afuera del tablero"
	

	| aGame |
	
	aGame := TerniLapilliGame new.
	
	aGame putXAt: 0@0.
	aGame putOAt: 1@1.	
	aGame putXAt: 2@2.
	aGame putOAt: 2@1.
	aGame putXAt: 1@2.
	aGame putOAt: 0@2.

	self should: [	aGame moveXFrom: 0@0 to: -1@0.] raise: Error withMessageText: TerniLapilliGame invalidPositionErrorMessage . 
	self should: [	aGame moveXFrom: 2@2 to: 3@2.] raise: Error withMessageText: TerniLapilliGame invalidPositionErrorMessage . 
	self should: [	aGame moveXFrom: 0@0 to: 1@-1.] raise: Error withMessageText: TerniLapilliGame invalidPositionErrorMessage . 
	self should: [	aGame moveXFrom: 2@2 to: 2@3.] raise: Error withMessageText: TerniLapilliGame invalidPositionErrorMessage . 
! !

!testRun: #TerniLapilliGameTest #test42XCantMoveToOutsideTheBoard stamp: 'IO 11/1/2020 19:24:22'!
PASSED!

!testRun: #TerniLapilliGameTest #test01XCanPutAToken stamp: 'IO 11/1/2020 19:24:22'!
PASSED!

!testRun: #TerniLapilliGameTest #test02puttingDoesNotAffectOtherPositions stamp: 'IO 11/1/2020 19:24:22'!
PASSED!

!testRun: #TerniLapilliGameTest #test03XCanPutInOtherPositions stamp: 'IO 11/1/2020 19:24:22'!
PASSED!

!testRun: #TerniLapilliGameTest #test04OCanPut stamp: 'IO 11/1/2020 19:24:22'!
PASSED!

!testRun: #TerniLapilliGameTest #test05XCanMove stamp: 'IO 11/1/2020 19:24:23'!
PASSED!

!testRun: #TerniLapilliGameTest #test06OCanMove stamp: 'IO 11/1/2020 19:24:23'!
PASSED!

!testRun: #TerniLapilliGameTest #test07XWinsWithTheFirstColumn stamp: 'IO 11/1/2020 19:24:23'!
PASSED!

!testRun: #TerniLapilliGameTest #test08XHasntWonYet stamp: 'IO 11/1/2020 19:24:23'!
PASSED!

!testRun: #TerniLapilliGameTest #test09XWinsWithTheSecondColumn stamp: 'IO 11/1/2020 19:24:23'!
PASSED!

!testRun: #TerniLapilliGameTest #test10XWinsWithTheThirdColumn stamp: 'IO 11/1/2020 19:24:23'!
PASSED!

!testRun: #TerniLapilliGameTest #test11XWinsWithTheFirstRow stamp: 'IO 11/1/2020 19:24:23'!
PASSED!

!testRun: #TerniLapilliGameTest #test12XWinsWithTheSecondRow stamp: 'IO 11/1/2020 19:24:23'!
PASSED!

!testRun: #TerniLapilliGameTest #test13XWinsWithTheThirdRow stamp: 'IO 11/1/2020 19:24:23'!
PASSED!

!testRun: #TerniLapilliGameTest #test14XWinsWithTheCrescentDiagonal stamp: 'IO 11/1/2020 19:24:23'!
PASSED!

!testRun: #TerniLapilliGameTest #test15XWinsWithTheDescendantDiagonal stamp: 'IO 11/1/2020 19:24:23'!
PASSED!

!testRun: #TerniLapilliGameTest #test16OWnis stamp: 'IO 11/1/2020 19:24:23'!
PASSED!

!testRun: #TerniLapilliGameTest #test17OCantStartPutting stamp: 'IO 11/1/2020 19:24:23'!
PASSED!

!testRun: #TerniLapilliGameTest #test18XCantPutTwiceInARow stamp: 'IO 11/1/2020 19:24:23'!
PASSED!

!testRun: #TerniLapilliGameTest #test19XCantMoveTwiceInARow stamp: 'IO 11/1/2020 19:24:23'!
PASSED!

!testRun: #TerniLapilliGameTest #test20OCantPutTwiceInARow stamp: 'IO 11/1/2020 19:24:23'!
PASSED!

!testRun: #TerniLapilliGameTest #test21OCantMoveTwiceInARow stamp: 'IO 11/1/2020 19:24:23'!
PASSED!

!testRun: #TerniLapilliGameTest #test22XCantMoveOnTheirFirstTurn stamp: 'IO 11/1/2020 19:24:23'!
PASSED!

!testRun: #TerniLapilliGameTest #test23XCantMoveOnTheirSecondTurn stamp: 'IO 11/1/2020 19:24:23'!
PASSED!

!testRun: #TerniLapilliGameTest #test24XCantMoveOnTheirThirdTurn stamp: 'IO 11/1/2020 19:24:23'!
PASSED!

!testRun: #TerniLapilliGameTest #test25OCantMoveOnTheirFirstTurn stamp: 'IO 11/1/2020 19:24:23'!
PASSED!

!testRun: #TerniLapilliGameTest #test26OCantMoveOnTheirSecondTurn stamp: 'IO 11/1/2020 19:24:23'!
PASSED!

!testRun: #TerniLapilliGameTest #test27OCantMoveOnTheirThirdTurn stamp: 'IO 11/1/2020 19:24:23'!
PASSED!

!testRun: #TerniLapilliGameTest #test28XCantPutAfterTheirThirdTurn stamp: 'IO 11/1/2020 19:24:23'!
PASSED!

!testRun: #TerniLapilliGameTest #test29OCantPutAfterTheirThirdTurn stamp: 'IO 11/1/2020 19:24:23'!
PASSED!

!testRun: #TerniLapilliGameTest #test30OCantPutAfterXWon stamp: 'IO 11/1/2020 19:24:23'!
PASSED!

!testRun: #TerniLapilliGameTest #test31OCantMoveAfterXWon stamp: 'IO 11/1/2020 19:24:23'!
PASSED!

!testRun: #TerniLapilliGameTest #test32XCantMoveAfterOWon stamp: 'IO 11/1/2020 19:24:23'!
PASSED!

!testRun: #TerniLapilliGameTest #test33XCantPutAfterOWon stamp: 'IO 11/1/2020 19:24:23'!
PASSED!

!testRun: #TerniLapilliGameTest #test34XCantPutInAnOccupiedSpace stamp: 'IO 11/1/2020 19:24:23'!
PASSED!

!testRun: #TerniLapilliGameTest #test35OCantPutInAnOccupiedSpace stamp: 'IO 11/1/2020 19:24:23'!
PASSED!

!testRun: #TerniLapilliGameTest #test36XCantMoveToAnOccupiedSpace stamp: 'IO 11/1/2020 19:24:23'!
PASSED!

!testRun: #TerniLapilliGameTest #test37OCantMoveToAnOccupiedSpace stamp: 'IO 11/1/2020 19:24:23'!
PASSED!

!testRun: #TerniLapilliGameTest #test38XCantPutOutsideTheBoardUnderXAxis stamp: 'IO 11/1/2020 19:24:23'!
PASSED!

!testRun: #TerniLapilliGameTest #test39XCantPutOutsideTheBoardAboveXAxis stamp: 'IO 11/1/2020 19:24:23'!
PASSED!

!testRun: #TerniLapilliGameTest #test40XCantPutOutsideTheBoardUnderNorAboveTheYAxis stamp: 'IO 11/1/2020 19:24:23'!
PASSED!

!testRun: #TerniLapilliGameTest #test41OCantPutOutsideTheBoard stamp: 'IO 11/1/2020 19:24:23'!
PASSED!

!testRun: #TerniLapilliGameTest #test42XCantMoveToOutsideTheBoard stamp: 'IO 11/1/2020 19:24:23'!
PASSED!

!testRun: #TerniLapilliGameTest #test43OCantMoveToOutsideTheBoard stamp: 'IO 11/1/2020 19:24:23'!
PASSED!

!testRun: #TerniLapilliGameTest #test44XCantMoveTokensThatDontBelongToThem stamp: 'IO 11/1/2020 19:24:23'!
PASSED!

!testRun: #TerniLapilliGameTest #test45OCantMoveTokensThatDontBelongToThem stamp: 'IO 11/1/2020 19:24:23'!
PASSED!

!testRun: #TerniLapilliGameTest #test46XCantMoveaTokenOutsideItsNeighbors stamp: 'IO 11/1/2020 19:24:23'!
PASSED!

!testRun: #TerniLapilliGameTest #test47OCantMoveATokenOutsideItsNeighbors stamp: 'IO 11/1/2020 19:24:23'!
PASSED!

!testRun: #TerniLapilliGameTest #test42XCantMoveToOutsideTheBoard stamp: 'IO 11/1/2020 19:24:54'!
PASSED!

!testRun: #TerniLapilliGameTest #test01XCanPutAToken stamp: 'IO 11/1/2020 19:24:54'!
PASSED!

!testRun: #TerniLapilliGameTest #test02puttingDoesNotAffectOtherPositions stamp: 'IO 11/1/2020 19:24:54'!
PASSED!

!testRun: #TerniLapilliGameTest #test03XCanPutInOtherPositions stamp: 'IO 11/1/2020 19:24:54'!
PASSED!

!testRun: #TerniLapilliGameTest #test04OCanPut stamp: 'IO 11/1/2020 19:24:54'!
PASSED!

!testRun: #TerniLapilliGameTest #test05XCanMove stamp: 'IO 11/1/2020 19:24:54'!
PASSED!

!testRun: #TerniLapilliGameTest #test06OCanMove stamp: 'IO 11/1/2020 19:24:54'!
PASSED!

!testRun: #TerniLapilliGameTest #test07XWinsWithTheFirstColumn stamp: 'IO 11/1/2020 19:24:54'!
PASSED!

!testRun: #TerniLapilliGameTest #test08XHasntWonYet stamp: 'IO 11/1/2020 19:24:54'!
PASSED!

!testRun: #TerniLapilliGameTest #test09XWinsWithTheSecondColumn stamp: 'IO 11/1/2020 19:24:54'!
PASSED!

!testRun: #TerniLapilliGameTest #test10XWinsWithTheThirdColumn stamp: 'IO 11/1/2020 19:24:54'!
PASSED!

!testRun: #TerniLapilliGameTest #test11XWinsWithTheFirstRow stamp: 'IO 11/1/2020 19:24:54'!
PASSED!

!testRun: #TerniLapilliGameTest #test12XWinsWithTheSecondRow stamp: 'IO 11/1/2020 19:24:54'!
PASSED!

!testRun: #TerniLapilliGameTest #test13XWinsWithTheThirdRow stamp: 'IO 11/1/2020 19:24:54'!
PASSED!

!testRun: #TerniLapilliGameTest #test14XWinsWithTheCrescentDiagonal stamp: 'IO 11/1/2020 19:24:54'!
PASSED!

!testRun: #TerniLapilliGameTest #test15XWinsWithTheDescendantDiagonal stamp: 'IO 11/1/2020 19:24:54'!
PASSED!

!testRun: #TerniLapilliGameTest #test16OWnis stamp: 'IO 11/1/2020 19:24:54'!
PASSED!

!testRun: #TerniLapilliGameTest #test17OCantStartPutting stamp: 'IO 11/1/2020 19:24:54'!
PASSED!

!testRun: #TerniLapilliGameTest #test18XCantPutTwiceInARow stamp: 'IO 11/1/2020 19:24:54'!
PASSED!

!testRun: #TerniLapilliGameTest #test19XCantMoveTwiceInARow stamp: 'IO 11/1/2020 19:24:54'!
PASSED!

!testRun: #TerniLapilliGameTest #test20OCantPutTwiceInARow stamp: 'IO 11/1/2020 19:24:54'!
PASSED!

!testRun: #TerniLapilliGameTest #test21OCantMoveTwiceInARow stamp: 'IO 11/1/2020 19:24:54'!
PASSED!

!testRun: #TerniLapilliGameTest #test22XCantMoveOnTheirFirstTurn stamp: 'IO 11/1/2020 19:24:54'!
PASSED!

!testRun: #TerniLapilliGameTest #test23XCantMoveOnTheirSecondTurn stamp: 'IO 11/1/2020 19:24:54'!
PASSED!

!testRun: #TerniLapilliGameTest #test24XCantMoveOnTheirThirdTurn stamp: 'IO 11/1/2020 19:24:54'!
PASSED!

!testRun: #TerniLapilliGameTest #test25OCantMoveOnTheirFirstTurn stamp: 'IO 11/1/2020 19:24:54'!
PASSED!

!testRun: #TerniLapilliGameTest #test26OCantMoveOnTheirSecondTurn stamp: 'IO 11/1/2020 19:24:54'!
PASSED!

!testRun: #TerniLapilliGameTest #test27OCantMoveOnTheirThirdTurn stamp: 'IO 11/1/2020 19:24:54'!
PASSED!

!testRun: #TerniLapilliGameTest #test28XCantPutAfterTheirThirdTurn stamp: 'IO 11/1/2020 19:24:54'!
PASSED!

!testRun: #TerniLapilliGameTest #test29OCantPutAfterTheirThirdTurn stamp: 'IO 11/1/2020 19:24:54'!
PASSED!

!testRun: #TerniLapilliGameTest #test30OCantPutAfterXWon stamp: 'IO 11/1/2020 19:24:54'!
PASSED!

!testRun: #TerniLapilliGameTest #test31OCantMoveAfterXWon stamp: 'IO 11/1/2020 19:24:54'!
PASSED!

!testRun: #TerniLapilliGameTest #test32XCantMoveAfterOWon stamp: 'IO 11/1/2020 19:24:54'!
PASSED!

!testRun: #TerniLapilliGameTest #test33XCantPutAfterOWon stamp: 'IO 11/1/2020 19:24:54'!
PASSED!

!testRun: #TerniLapilliGameTest #test34XCantPutInAnOccupiedSpace stamp: 'IO 11/1/2020 19:24:54'!
PASSED!

!testRun: #TerniLapilliGameTest #test35OCantPutInAnOccupiedSpace stamp: 'IO 11/1/2020 19:24:54'!
PASSED!

!testRun: #TerniLapilliGameTest #test36XCantMoveToAnOccupiedSpace stamp: 'IO 11/1/2020 19:24:54'!
PASSED!

!testRun: #TerniLapilliGameTest #test37OCantMoveToAnOccupiedSpace stamp: 'IO 11/1/2020 19:24:54'!
PASSED!

!testRun: #TerniLapilliGameTest #test38XCantPutOutsideTheBoardUnderXAxis stamp: 'IO 11/1/2020 19:24:54'!
PASSED!

!testRun: #TerniLapilliGameTest #test39XCantPutOutsideTheBoardAboveXAxis stamp: 'IO 11/1/2020 19:24:54'!
PASSED!

!testRun: #TerniLapilliGameTest #test40XCantPutOutsideTheBoardUnderNorAboveTheYAxis stamp: 'IO 11/1/2020 19:24:54'!
PASSED!

!testRun: #TerniLapilliGameTest #test41OCantPutOutsideTheBoard stamp: 'IO 11/1/2020 19:24:54'!
PASSED!

!testRun: #TerniLapilliGameTest #test42XCantMoveToOutsideTheBoard stamp: 'IO 11/1/2020 19:24:54'!
PASSED!

!testRun: #TerniLapilliGameTest #test43OCantMoveToOutsideTheBoard stamp: 'IO 11/1/2020 19:24:54'!
PASSED!

!testRun: #TerniLapilliGameTest #test44XCantMoveTokensThatDontBelongToThem stamp: 'IO 11/1/2020 19:24:54'!
PASSED!

!testRun: #TerniLapilliGameTest #test45OCantMoveTokensThatDontBelongToThem stamp: 'IO 11/1/2020 19:24:54'!
PASSED!

!testRun: #TerniLapilliGameTest #test46XCantMoveaTokenOutsideItsNeighbors stamp: 'IO 11/1/2020 19:24:54'!
PASSED!

!testRun: #TerniLapilliGameTest #test47OCantMoveATokenOutsideItsNeighbors stamp: 'IO 11/1/2020 19:24:54'!
PASSED!
!TerniLapilliGame methodsFor: 'moves' stamp: 'IO 11/1/2020 19:32:58'!
validateTargetPosition: aPosition

	"put an O token in a given position of the board"

	(self includes: aPosition ) ifTrue:[^self error: TerniLapilliGame occupiedPositionErrorMessage].

! !
!TerniLapilliGame methodsFor: 'moves' stamp: 'IO 11/1/2020 19:33:04' prior: 50900221!
validateTargetPosition: aPosition

	"put an O token in a given position of the board"

	(self includes: aPosition ) ifTrue: [^self error: TerniLapilliGame occupiedPositionErrorMessage].

! !
!TerniLapilliGame methodsFor: 'moves' stamp: 'IO 11/1/2020 19:33:15' prior: 50896762!
putXAt: aPosition

	"put an O token in a given position of the board"

	self validateTargetPosition: aPosition.
	state := state putXAt: aPosition.
! !

!testRun: #TerniLapilliGameTest #test01XCanPutAToken stamp: 'IO 11/1/2020 19:33:16'!
PASSED!

!testRun: #TerniLapilliGameTest #test02puttingDoesNotAffectOtherPositions stamp: 'IO 11/1/2020 19:33:16'!
PASSED!

!testRun: #TerniLapilliGameTest #test03XCanPutInOtherPositions stamp: 'IO 11/1/2020 19:33:16'!
PASSED!

!testRun: #TerniLapilliGameTest #test04OCanPut stamp: 'IO 11/1/2020 19:33:16'!
PASSED!

!testRun: #TerniLapilliGameTest #test05XCanMove stamp: 'IO 11/1/2020 19:33:16'!
PASSED!

!testRun: #TerniLapilliGameTest #test06OCanMove stamp: 'IO 11/1/2020 19:33:16'!
PASSED!

!testRun: #TerniLapilliGameTest #test07XWinsWithTheFirstColumn stamp: 'IO 11/1/2020 19:33:16'!
PASSED!

!testRun: #TerniLapilliGameTest #test08XHasntWonYet stamp: 'IO 11/1/2020 19:33:16'!
PASSED!

!testRun: #TerniLapilliGameTest #test09XWinsWithTheSecondColumn stamp: 'IO 11/1/2020 19:33:16'!
PASSED!

!testRun: #TerniLapilliGameTest #test10XWinsWithTheThirdColumn stamp: 'IO 11/1/2020 19:33:16'!
PASSED!

!testRun: #TerniLapilliGameTest #test11XWinsWithTheFirstRow stamp: 'IO 11/1/2020 19:33:16'!
PASSED!

!testRun: #TerniLapilliGameTest #test12XWinsWithTheSecondRow stamp: 'IO 11/1/2020 19:33:16'!
PASSED!

!testRun: #TerniLapilliGameTest #test13XWinsWithTheThirdRow stamp: 'IO 11/1/2020 19:33:16'!
PASSED!

!testRun: #TerniLapilliGameTest #test14XWinsWithTheCrescentDiagonal stamp: 'IO 11/1/2020 19:33:16'!
PASSED!

!testRun: #TerniLapilliGameTest #test15XWinsWithTheDescendantDiagonal stamp: 'IO 11/1/2020 19:33:16'!
PASSED!

!testRun: #TerniLapilliGameTest #test16OWnis stamp: 'IO 11/1/2020 19:33:16'!
PASSED!

!testRun: #TerniLapilliGameTest #test17OCantStartPutting stamp: 'IO 11/1/2020 19:33:16'!
PASSED!

!testRun: #TerniLapilliGameTest #test18XCantPutTwiceInARow stamp: 'IO 11/1/2020 19:33:16'!
PASSED!

!testRun: #TerniLapilliGameTest #test19XCantMoveTwiceInARow stamp: 'IO 11/1/2020 19:33:16'!
PASSED!

!testRun: #TerniLapilliGameTest #test20OCantPutTwiceInARow stamp: 'IO 11/1/2020 19:33:16'!
PASSED!

!testRun: #TerniLapilliGameTest #test21OCantMoveTwiceInARow stamp: 'IO 11/1/2020 19:33:16'!
PASSED!

!testRun: #TerniLapilliGameTest #test22XCantMoveOnTheirFirstTurn stamp: 'IO 11/1/2020 19:33:16'!
PASSED!

!testRun: #TerniLapilliGameTest #test23XCantMoveOnTheirSecondTurn stamp: 'IO 11/1/2020 19:33:16'!
PASSED!

!testRun: #TerniLapilliGameTest #test24XCantMoveOnTheirThirdTurn stamp: 'IO 11/1/2020 19:33:16'!
PASSED!

!testRun: #TerniLapilliGameTest #test25OCantMoveOnTheirFirstTurn stamp: 'IO 11/1/2020 19:33:16'!
PASSED!

!testRun: #TerniLapilliGameTest #test26OCantMoveOnTheirSecondTurn stamp: 'IO 11/1/2020 19:33:16'!
PASSED!

!testRun: #TerniLapilliGameTest #test27OCantMoveOnTheirThirdTurn stamp: 'IO 11/1/2020 19:33:16'!
PASSED!

!testRun: #TerniLapilliGameTest #test28XCantPutAfterTheirThirdTurn stamp: 'IO 11/1/2020 19:33:16'!
PASSED!

!testRun: #TerniLapilliGameTest #test29OCantPutAfterTheirThirdTurn stamp: 'IO 11/1/2020 19:33:16'!
PASSED!

!testRun: #TerniLapilliGameTest #test30OCantPutAfterXWon stamp: 'IO 11/1/2020 19:33:16'!
PASSED!

!testRun: #TerniLapilliGameTest #test31OCantMoveAfterXWon stamp: 'IO 11/1/2020 19:33:16'!
PASSED!

!testRun: #TerniLapilliGameTest #test32XCantMoveAfterOWon stamp: 'IO 11/1/2020 19:33:16'!
PASSED!

!testRun: #TerniLapilliGameTest #test33XCantPutAfterOWon stamp: 'IO 11/1/2020 19:33:16'!
PASSED!

!testRun: #TerniLapilliGameTest #test34XCantPutInAnOccupiedSpace stamp: 'IO 11/1/2020 19:33:16'!
PASSED!

!testRun: #TerniLapilliGameTest #test35OCantPutInAnOccupiedSpace stamp: 'IO 11/1/2020 19:33:16'!
PASSED!

!testRun: #TerniLapilliGameTest #test36XCantMoveToAnOccupiedSpace stamp: 'IO 11/1/2020 19:33:16'!
PASSED!

!testRun: #TerniLapilliGameTest #test37OCantMoveToAnOccupiedSpace stamp: 'IO 11/1/2020 19:33:16'!
PASSED!

!testRun: #TerniLapilliGameTest #test38XCantPutOutsideTheBoardUnderXAxis stamp: 'IO 11/1/2020 19:33:16'!
PASSED!

!testRun: #TerniLapilliGameTest #test39XCantPutOutsideTheBoardAboveXAxis stamp: 'IO 11/1/2020 19:33:16'!
PASSED!

!testRun: #TerniLapilliGameTest #test40XCantPutOutsideTheBoardUnderNorAboveTheYAxis stamp: 'IO 11/1/2020 19:33:16'!
PASSED!

!testRun: #TerniLapilliGameTest #test41OCantPutOutsideTheBoard stamp: 'IO 11/1/2020 19:33:16'!
PASSED!

!testRun: #TerniLapilliGameTest #test42XCantMoveToOutsideTheBoard stamp: 'IO 11/1/2020 19:33:16'!
PASSED!

!testRun: #TerniLapilliGameTest #test43OCantMoveToOutsideTheBoard stamp: 'IO 11/1/2020 19:33:16'!
PASSED!

!testRun: #TerniLapilliGameTest #test44XCantMoveTokensThatDontBelongToThem stamp: 'IO 11/1/2020 19:33:16'!
PASSED!

!testRun: #TerniLapilliGameTest #test45OCantMoveTokensThatDontBelongToThem stamp: 'IO 11/1/2020 19:33:16'!
PASSED!

!testRun: #TerniLapilliGameTest #test46XCantMoveaTokenOutsideItsNeighbors stamp: 'IO 11/1/2020 19:33:16'!
PASSED!

!testRun: #TerniLapilliGameTest #test47OCantMoveATokenOutsideItsNeighbors stamp: 'IO 11/1/2020 19:33:16'!
PASSED!
!TerniLapilliGame methodsFor: 'moves' stamp: 'IO 11/1/2020 19:33:22' prior: 50896752!
putOAt: aPosition

	"put an O token in a given position of the board"

	self validateTargetPosition: aPosition.
	state := state putOAt: aPosition.
! !
!TerniLapilliGame methodsFor: 'moves' stamp: 'IO 11/1/2020 19:33:28' prior: 50897207!
moveXFrom: aPosition to: aDestination

	"move O's token from a given position of the board to another given position"

	self validateTargetPosition: aDestination.
	state := state moveXFrom: aPosition to: aDestination.
	
	
! !
!TerniLapilliGame methodsFor: 'moves' stamp: 'IO 11/1/2020 19:33:42' prior: 50897195!
moveOFrom: aPosition to: aDestination

	"move O's token from a given position of the board to another given position"

	self validateTargetPosition: aDestination.
	state := state moveOFrom: aPosition to: aDestination.
! !
!TerniLapilliPlayerTokens methodsFor: 'validations' stamp: 'IO 11/1/2020 19:35:40'!
validatePosition: aPosition

	"signal when a position is invalid with a given error message"

	(
		(aPosition x < 3) and:
		(aPosition x >= 0) and:
		(aPosition y < 3) and:
		(aPosition y >=0)
	) ifFalse: [^self error: TerniLapilliGame invalidPositionErrorMessage].
! !
!TerniLapilliPlayerTokens methodsFor: 'validations' stamp: 'IO 11/1/2020 19:36:14' prior: 50899299!
validateIsLegalMoveFrom: sourcePosition to: destinationPosition

	"signal when a token cannot be moved from a given position to another"

	(self includes: sourcePosition) ifFalse: [
		^self error: TerniLapilliGame noTokenAtPositionErrorMessage].
	(sourcePosition eightNeighbors includes: destinationPosition) ifFalse: [
		^self error: TerniLapilliGame invalidDestinationErrorMessage].

	self validatePosition: destinationPosition.
! !

!methodRemoval: TerniLapilliPlayerTokens #validateIsInBoard:withErrorMessage: stamp: 'IO 11/1/2020 19:36:30'!
validateIsInBoard: aPosition withErrorMessage: errorMessage

	"signal when a position is invalid with a given error message"

	(
		(aPosition x < 3) and:
		(aPosition x >= 0) and:
		(aPosition y < 3) and:
		(aPosition y >=0)
	) ifFalse: [^self error: TerniLapilliGame invalidPositionErrorMessage].
!
!TerniLapilliPlayerTokens methodsFor: 'moves' stamp: 'IO 11/1/2020 19:36:52' prior: 50892113!
put: aPosition

	"add a token in a given position of the board"

	self validatePosition: aPosition.
	tokens add: aPosition.
! !
!TerniLapilliPlayerTokens methodsFor: 'validations' stamp: 'IO 11/1/2020 19:37:30'!
validateMoveFrom: sourcePosition to: destinationPosition

	"signal when a token cannot be moved from a given position to another"

	(self includes: sourcePosition) ifFalse: [
		^self error: TerniLapilliGame noTokenAtPositionErrorMessage].
	(sourcePosition eightNeighbors includes: destinationPosition) ifFalse: [
		^self error: TerniLapilliGame invalidDestinationErrorMessage].

	self validatePosition: destinationPosition.
! !
!TerniLapilliPlayerTokens methodsFor: 'as yet unclassified' stamp: 'IO 11/1/2020 19:37:30' prior: 50893197!
moveFrom: aPosition to: aDestination

	"move a token form a given position of the board to another position"

	self validateMoveFrom: aPosition to: aDestination.

	tokens remove: aPosition.
	tokens add: aDestination.
! !

!methodRemoval: TerniLapilliPlayerTokens #validateIsLegalMoveFrom:to: stamp: 'IO 11/1/2020 19:37:30'!
validateIsLegalMoveFrom: sourcePosition to: destinationPosition

	"signal when a token cannot be moved from a given position to another"

	(self includes: sourcePosition) ifFalse: [
		^self error: TerniLapilliGame noTokenAtPositionErrorMessage].
	(sourcePosition eightNeighbors includes: destinationPosition) ifFalse: [
		^self error: TerniLapilliGame invalidDestinationErrorMessage].

	self validatePosition: destinationPosition.
!

!testRun: #TerniLapilliGameTest #test01XCanPutAToken stamp: 'IO 11/1/2020 19:37:33'!
PASSED!

!testRun: #TerniLapilliGameTest #test02puttingDoesNotAffectOtherPositions stamp: 'IO 11/1/2020 19:37:33'!
PASSED!

!testRun: #TerniLapilliGameTest #test03XCanPutInOtherPositions stamp: 'IO 11/1/2020 19:37:33'!
PASSED!

!testRun: #TerniLapilliGameTest #test04OCanPut stamp: 'IO 11/1/2020 19:37:33'!
PASSED!

!testRun: #TerniLapilliGameTest #test05XCanMove stamp: 'IO 11/1/2020 19:37:33'!
PASSED!

!testRun: #TerniLapilliGameTest #test06OCanMove stamp: 'IO 11/1/2020 19:37:33'!
PASSED!

!testRun: #TerniLapilliGameTest #test07XWinsWithTheFirstColumn stamp: 'IO 11/1/2020 19:37:33'!
PASSED!

!testRun: #TerniLapilliGameTest #test08XHasntWonYet stamp: 'IO 11/1/2020 19:37:33'!
PASSED!

!testRun: #TerniLapilliGameTest #test09XWinsWithTheSecondColumn stamp: 'IO 11/1/2020 19:37:33'!
PASSED!

!testRun: #TerniLapilliGameTest #test10XWinsWithTheThirdColumn stamp: 'IO 11/1/2020 19:37:33'!
PASSED!

!testRun: #TerniLapilliGameTest #test11XWinsWithTheFirstRow stamp: 'IO 11/1/2020 19:37:33'!
PASSED!

!testRun: #TerniLapilliGameTest #test12XWinsWithTheSecondRow stamp: 'IO 11/1/2020 19:37:33'!
PASSED!

!testRun: #TerniLapilliGameTest #test13XWinsWithTheThirdRow stamp: 'IO 11/1/2020 19:37:33'!
PASSED!

!testRun: #TerniLapilliGameTest #test14XWinsWithTheCrescentDiagonal stamp: 'IO 11/1/2020 19:37:33'!
PASSED!

!testRun: #TerniLapilliGameTest #test15XWinsWithTheDescendantDiagonal stamp: 'IO 11/1/2020 19:37:33'!
PASSED!

!testRun: #TerniLapilliGameTest #test16OWnis stamp: 'IO 11/1/2020 19:37:33'!
PASSED!

!testRun: #TerniLapilliGameTest #test17OCantStartPutting stamp: 'IO 11/1/2020 19:37:33'!
PASSED!

!testRun: #TerniLapilliGameTest #test18XCantPutTwiceInARow stamp: 'IO 11/1/2020 19:37:33'!
PASSED!

!testRun: #TerniLapilliGameTest #test19XCantMoveTwiceInARow stamp: 'IO 11/1/2020 19:37:33'!
PASSED!

!testRun: #TerniLapilliGameTest #test20OCantPutTwiceInARow stamp: 'IO 11/1/2020 19:37:33'!
PASSED!

!testRun: #TerniLapilliGameTest #test21OCantMoveTwiceInARow stamp: 'IO 11/1/2020 19:37:33'!
PASSED!

!testRun: #TerniLapilliGameTest #test22XCantMoveOnTheirFirstTurn stamp: 'IO 11/1/2020 19:37:33'!
PASSED!

!testRun: #TerniLapilliGameTest #test23XCantMoveOnTheirSecondTurn stamp: 'IO 11/1/2020 19:37:33'!
PASSED!

!testRun: #TerniLapilliGameTest #test24XCantMoveOnTheirThirdTurn stamp: 'IO 11/1/2020 19:37:33'!
PASSED!

!testRun: #TerniLapilliGameTest #test25OCantMoveOnTheirFirstTurn stamp: 'IO 11/1/2020 19:37:33'!
PASSED!

!testRun: #TerniLapilliGameTest #test26OCantMoveOnTheirSecondTurn stamp: 'IO 11/1/2020 19:37:33'!
PASSED!

!testRun: #TerniLapilliGameTest #test27OCantMoveOnTheirThirdTurn stamp: 'IO 11/1/2020 19:37:33'!
PASSED!

!testRun: #TerniLapilliGameTest #test28XCantPutAfterTheirThirdTurn stamp: 'IO 11/1/2020 19:37:33'!
PASSED!

!testRun: #TerniLapilliGameTest #test29OCantPutAfterTheirThirdTurn stamp: 'IO 11/1/2020 19:37:33'!
PASSED!

!testRun: #TerniLapilliGameTest #test30OCantPutAfterXWon stamp: 'IO 11/1/2020 19:37:33'!
PASSED!

!testRun: #TerniLapilliGameTest #test31OCantMoveAfterXWon stamp: 'IO 11/1/2020 19:37:33'!
PASSED!

!testRun: #TerniLapilliGameTest #test32XCantMoveAfterOWon stamp: 'IO 11/1/2020 19:37:33'!
PASSED!

!testRun: #TerniLapilliGameTest #test33XCantPutAfterOWon stamp: 'IO 11/1/2020 19:37:33'!
PASSED!

!testRun: #TerniLapilliGameTest #test34XCantPutInAnOccupiedSpace stamp: 'IO 11/1/2020 19:37:33'!
PASSED!

!testRun: #TerniLapilliGameTest #test35OCantPutInAnOccupiedSpace stamp: 'IO 11/1/2020 19:37:33'!
PASSED!

!testRun: #TerniLapilliGameTest #test36XCantMoveToAnOccupiedSpace stamp: 'IO 11/1/2020 19:37:33'!
PASSED!

!testRun: #TerniLapilliGameTest #test37OCantMoveToAnOccupiedSpace stamp: 'IO 11/1/2020 19:37:33'!
PASSED!

!testRun: #TerniLapilliGameTest #test38XCantPutOutsideTheBoardUnderXAxis stamp: 'IO 11/1/2020 19:37:33'!
PASSED!

!testRun: #TerniLapilliGameTest #test39XCantPutOutsideTheBoardAboveXAxis stamp: 'IO 11/1/2020 19:37:33'!
PASSED!

!testRun: #TerniLapilliGameTest #test40XCantPutOutsideTheBoardUnderNorAboveTheYAxis stamp: 'IO 11/1/2020 19:37:33'!
PASSED!

!testRun: #TerniLapilliGameTest #test41OCantPutOutsideTheBoard stamp: 'IO 11/1/2020 19:37:33'!
PASSED!

!testRun: #TerniLapilliGameTest #test42XCantMoveToOutsideTheBoard stamp: 'IO 11/1/2020 19:37:33'!
PASSED!

!testRun: #TerniLapilliGameTest #test43OCantMoveToOutsideTheBoard stamp: 'IO 11/1/2020 19:37:33'!
PASSED!

!testRun: #TerniLapilliGameTest #test44XCantMoveTokensThatDontBelongToThem stamp: 'IO 11/1/2020 19:37:33'!
PASSED!

!testRun: #TerniLapilliGameTest #test45OCantMoveTokensThatDontBelongToThem stamp: 'IO 11/1/2020 19:37:33'!
PASSED!

!testRun: #TerniLapilliGameTest #test46XCantMoveaTokenOutsideItsNeighbors stamp: 'IO 11/1/2020 19:37:33'!
PASSED!

!testRun: #TerniLapilliGameTest #test47OCantMoveATokenOutsideItsNeighbors stamp: 'IO 11/1/2020 19:37:33'!
PASSED!
!TerniLapilliPlayerTokens methodsFor: 'moves' stamp: 'IO 11/1/2020 19:37:51' prior: 50900470!
put: aPosition

	"add a token in a given position of the board"

	self validatePosition: aPosition.

	tokens add: aPosition.
! !
!TerniLapilliGame methodsFor: 'testing' stamp: 'IO 11/1/2020 20:16:56'!
hasOPlayerWon

	"returns true if O has won or not"

	^state hasOWon.
! !
!TerniLapilliGameTest methodsFor: 'as yet unclassified' stamp: 'IO 11/1/2020 20:16:56' prior: 50891205!
test16OWnis
	"ahora gana O!!"
	| aGame |
	aGame := TerniLapilliGame new.
	
	aGame putXAt: 0@0.
	aGame putOAt: 0@1.
	aGame putXAt: 2@0.
	aGame putOAt: 1@1.
	aGame putXAt: 2@2.
	aGame putOAt: 2@1.
	
	self assert: aGame hasOPlayerWon.
! !
!TerniLapilliGame methodsFor: 'as yet unclassified' stamp: 'IO 11/1/2020 20:16:56' prior: 50900681!
hasOPlayerWon

	"returns true if O has won or not"

	^state hasOWon.
! !

!methodRemoval: TerniLapilliGame #hasOWon stamp: 'IO 11/1/2020 20:16:56'!
hasOWon

	"returns true if O has won or not"

	^state hasOWon.
!

!testRun: #TerniLapilliGameTest #test01XCanPutAToken stamp: 'IO 11/1/2020 20:17:01'!
PASSED!

!testRun: #TerniLapilliGameTest #test02puttingDoesNotAffectOtherPositions stamp: 'IO 11/1/2020 20:17:01'!
PASSED!

!testRun: #TerniLapilliGameTest #test03XCanPutInOtherPositions stamp: 'IO 11/1/2020 20:17:01'!
PASSED!

!testRun: #TerniLapilliGameTest #test04OCanPut stamp: 'IO 11/1/2020 20:17:01'!
PASSED!

!testRun: #TerniLapilliGameTest #test05XCanMove stamp: 'IO 11/1/2020 20:17:01'!
PASSED!

!testRun: #TerniLapilliGameTest #test06OCanMove stamp: 'IO 11/1/2020 20:17:01'!
PASSED!

!testRun: #TerniLapilliGameTest #test07XWinsWithTheFirstColumn stamp: 'IO 11/1/2020 20:17:01'!
PASSED!

!testRun: #TerniLapilliGameTest #test08XHasntWonYet stamp: 'IO 11/1/2020 20:17:01'!
PASSED!

!testRun: #TerniLapilliGameTest #test09XWinsWithTheSecondColumn stamp: 'IO 11/1/2020 20:17:01'!
PASSED!

!testRun: #TerniLapilliGameTest #test10XWinsWithTheThirdColumn stamp: 'IO 11/1/2020 20:17:01'!
PASSED!

!testRun: #TerniLapilliGameTest #test11XWinsWithTheFirstRow stamp: 'IO 11/1/2020 20:17:01'!
PASSED!

!testRun: #TerniLapilliGameTest #test12XWinsWithTheSecondRow stamp: 'IO 11/1/2020 20:17:01'!
PASSED!

!testRun: #TerniLapilliGameTest #test13XWinsWithTheThirdRow stamp: 'IO 11/1/2020 20:17:01'!
PASSED!

!testRun: #TerniLapilliGameTest #test14XWinsWithTheCrescentDiagonal stamp: 'IO 11/1/2020 20:17:01'!
PASSED!

!testRun: #TerniLapilliGameTest #test15XWinsWithTheDescendantDiagonal stamp: 'IO 11/1/2020 20:17:01'!
PASSED!

!testRun: #TerniLapilliGameTest #test16OWnis stamp: 'IO 11/1/2020 20:17:01'!
PASSED!

!testRun: #TerniLapilliGameTest #test17OCantStartPutting stamp: 'IO 11/1/2020 20:17:01'!
PASSED!

!testRun: #TerniLapilliGameTest #test18XCantPutTwiceInARow stamp: 'IO 11/1/2020 20:17:01'!
PASSED!

!testRun: #TerniLapilliGameTest #test19XCantMoveTwiceInARow stamp: 'IO 11/1/2020 20:17:01'!
PASSED!

!testRun: #TerniLapilliGameTest #test20OCantPutTwiceInARow stamp: 'IO 11/1/2020 20:17:01'!
PASSED!

!testRun: #TerniLapilliGameTest #test21OCantMoveTwiceInARow stamp: 'IO 11/1/2020 20:17:01'!
PASSED!

!testRun: #TerniLapilliGameTest #test22XCantMoveOnTheirFirstTurn stamp: 'IO 11/1/2020 20:17:01'!
PASSED!

!testRun: #TerniLapilliGameTest #test23XCantMoveOnTheirSecondTurn stamp: 'IO 11/1/2020 20:17:01'!
PASSED!

!testRun: #TerniLapilliGameTest #test24XCantMoveOnTheirThirdTurn stamp: 'IO 11/1/2020 20:17:01'!
PASSED!

!testRun: #TerniLapilliGameTest #test25OCantMoveOnTheirFirstTurn stamp: 'IO 11/1/2020 20:17:01'!
PASSED!

!testRun: #TerniLapilliGameTest #test26OCantMoveOnTheirSecondTurn stamp: 'IO 11/1/2020 20:17:01'!
PASSED!

!testRun: #TerniLapilliGameTest #test27OCantMoveOnTheirThirdTurn stamp: 'IO 11/1/2020 20:17:01'!
PASSED!

!testRun: #TerniLapilliGameTest #test28XCantPutAfterTheirThirdTurn stamp: 'IO 11/1/2020 20:17:01'!
PASSED!

!testRun: #TerniLapilliGameTest #test29OCantPutAfterTheirThirdTurn stamp: 'IO 11/1/2020 20:17:01'!
PASSED!

!testRun: #TerniLapilliGameTest #test30OCantPutAfterXWon stamp: 'IO 11/1/2020 20:17:01'!
PASSED!

!testRun: #TerniLapilliGameTest #test31OCantMoveAfterXWon stamp: 'IO 11/1/2020 20:17:01'!
PASSED!

!testRun: #TerniLapilliGameTest #test32XCantMoveAfterOWon stamp: 'IO 11/1/2020 20:17:01'!
PASSED!

!testRun: #TerniLapilliGameTest #test33XCantPutAfterOWon stamp: 'IO 11/1/2020 20:17:01'!
PASSED!

!testRun: #TerniLapilliGameTest #test34XCantPutInAnOccupiedSpace stamp: 'IO 11/1/2020 20:17:01'!
PASSED!

!testRun: #TerniLapilliGameTest #test35OCantPutInAnOccupiedSpace stamp: 'IO 11/1/2020 20:17:01'!
PASSED!

!testRun: #TerniLapilliGameTest #test36XCantMoveToAnOccupiedSpace stamp: 'IO 11/1/2020 20:17:01'!
PASSED!

!testRun: #TerniLapilliGameTest #test37OCantMoveToAnOccupiedSpace stamp: 'IO 11/1/2020 20:17:01'!
PASSED!

!testRun: #TerniLapilliGameTest #test38XCantPutOutsideTheBoardUnderXAxis stamp: 'IO 11/1/2020 20:17:01'!
PASSED!

!testRun: #TerniLapilliGameTest #test39XCantPutOutsideTheBoardAboveXAxis stamp: 'IO 11/1/2020 20:17:01'!
PASSED!

!testRun: #TerniLapilliGameTest #test40XCantPutOutsideTheBoardUnderNorAboveTheYAxis stamp: 'IO 11/1/2020 20:17:01'!
PASSED!

!testRun: #TerniLapilliGameTest #test41OCantPutOutsideTheBoard stamp: 'IO 11/1/2020 20:17:01'!
PASSED!

!testRun: #TerniLapilliGameTest #test42XCantMoveToOutsideTheBoard stamp: 'IO 11/1/2020 20:17:01'!
PASSED!

!testRun: #TerniLapilliGameTest #test43OCantMoveToOutsideTheBoard stamp: 'IO 11/1/2020 20:17:01'!
PASSED!

!testRun: #TerniLapilliGameTest #test44XCantMoveTokensThatDontBelongToThem stamp: 'IO 11/1/2020 20:17:01'!
PASSED!

!testRun: #TerniLapilliGameTest #test45OCantMoveTokensThatDontBelongToThem stamp: 'IO 11/1/2020 20:17:01'!
PASSED!

!testRun: #TerniLapilliGameTest #test46XCantMoveaTokenOutsideItsNeighbors stamp: 'IO 11/1/2020 20:17:01'!
PASSED!

!testRun: #TerniLapilliGameTest #test47OCantMoveATokenOutsideItsNeighbors stamp: 'IO 11/1/2020 20:17:01'!
PASSED!
!TerniLapilliGameState methodsFor: 'testing' stamp: 'IO 11/1/2020 20:17:17'!
hasOPlayerWon

	"returns true if the current state is in a winning position for O. if true, the state is final"

	^oTokens areInWinningPosition.
! !
!TerniLapilliGame methodsFor: 'as yet unclassified' stamp: 'IO 11/1/2020 20:17:17' prior: 50900698!
hasOPlayerWon

	"returns true if O has won or not"

	^state hasOPlayerWon.
! !

!methodRemoval: TerniLapilliGameState #hasOWon stamp: 'IO 11/1/2020 20:17:17'!
hasOWon

	"returns true if the current state is in a winning position for O. if true, the state is final"

	^oTokens areInWinningPosition.
!
!TerniLapilliGame methodsFor: 'testing' stamp: 'IO 11/1/2020 20:17:40'!
hasXPlayerWon

	"returns true if x has won or not"

	^state hasXWon.
! !
!TerniLapilliGameTest methodsFor: 'as yet unclassified' stamp: 'IO 11/1/2020 20:17:40' prior: 50891463!
test07XWinsWithTheFirstColumn
	"primer posicion ganadora para X, la primer columna"
	| aGame |
	aGame := TerniLapilliGame new.
	
	aGame putXAt: 0@0.
	aGame putOAt: 0@1.
	aGame putXAt: 1@0.
	aGame putOAt: 1@1.
	aGame putXAt: 2@0.
	
	self assert: aGame hasXPlayerWon.
! !
!TerniLapilliGameTest methodsFor: 'as yet unclassified' stamp: 'IO 11/1/2020 20:17:40' prior: 50891105!
test10XWinsWithTheThirdColumn
	"ahora X gana competando la tercer columna"
	| aGame |
	aGame := TerniLapilliGame new.
	
	aGame putXAt: 0@2.
	aGame putOAt: 0@0.
	aGame putXAt: 1@2.
	aGame putOAt: 1@0.
	aGame putXAt: 2@2.
	
	self assert: aGame hasXPlayerWon.
! !
!TerniLapilliGameTest methodsFor: 'as yet unclassified' stamp: 'IO 11/1/2020 20:17:40' prior: 50891253!
test11XWinsWithTheFirstRow
	"X gana completando la primer fila"
	| aGame |
	aGame := TerniLapilliGame new.
	
	aGame putXAt: 0@0.
	aGame putOAt: 1@0.
	aGame putXAt: 0@1.
	aGame putOAt: 1@1.
	aGame putXAt: 0@2.
	
	self assert: aGame hasXPlayerWon.
! !
!TerniLapilliGameTest methodsFor: 'as yet unclassified' stamp: 'IO 11/1/2020 20:17:40' prior: 50891437!
test08XHasntWonYet
	"X todavia no gano"
	| aGame |
	aGame := TerniLapilliGame new.
	
	aGame putXAt: 0@0.
	aGame putOAt: 0@1.
	aGame putXAt: 1@0.
	aGame putOAt: 1@1.
	aGame putXAt: 2@2.
	
	self deny: aGame hasXPlayerWon.
! !
!TerniLapilliGameTest methodsFor: 'as yet unclassified' stamp: 'IO 11/1/2020 20:17:40' prior: 50891152!
test13XWinsWithTheThirdRow
	"X gana competando la tercer fila"
	| aGame |
	aGame := TerniLapilliGame new.
	
	aGame putXAt: 2@0.
	aGame putOAt: 0@0.
	aGame putXAt: 2@1.
	aGame putOAt: 0@1.
	aGame putXAt: 2@2.
	
	self assert: aGame hasXPlayerWon.
! !
!TerniLapilliGameTest methodsFor: 'as yet unclassified' stamp: 'IO 11/1/2020 20:17:40' prior: 50891280!
test12XWinsWithTheSecondRow
	"X gana competando la segunda fila"
	| aGame |
	aGame := TerniLapilliGame new.
	
	aGame putXAt: 1@0.
	aGame putOAt: 2@0.
	aGame putXAt: 1@1.
	aGame putOAt: 2@1.
	aGame putXAt: 1@2.
	
	self assert: aGame hasXPlayerWon.
! !
!TerniLapilliGameTest methodsFor: 'as yet unclassified' stamp: 'IO 11/1/2020 20:17:40' prior: 50891130!
test14XWinsWithTheCrescentDiagonal
	"X gana competando la diagonal creciente"
	| aGame |
	aGame := TerniLapilliGame new.
	
	aGame putXAt: 0@0.
	aGame putOAt: 1@0.
	aGame putXAt: 1@1.
	aGame putOAt: 2@1.
	aGame putXAt: 2@2.
	
	self assert: aGame hasXPlayerWon.
! !
!TerniLapilliGameTest methodsFor: 'as yet unclassified' stamp: 'IO 11/1/2020 20:17:40' prior: 50891388!
test15XWinsWithTheDescendantDiagonal
	"X gana competando la diagonal decreciente"
	| aGame |
	aGame := TerniLapilliGame new.
	
	aGame putXAt: 2@0.
	aGame putOAt: 1@0.
	aGame putXAt: 1@1.
	aGame putOAt: 2@1.
	aGame putXAt: 0@2.
	
	self assert: aGame hasXPlayerWon.
! !
!TerniLapilliGameTest methodsFor: 'as yet unclassified' stamp: 'IO 11/1/2020 20:17:40' prior: 50891304!
test09XWinsWithTheSecondColumn
	"X gana competando la segunda columna"
	| aGame |
	aGame := TerniLapilliGame new.
	
	aGame putXAt: 0@1.
	aGame putOAt: 0@2.
	aGame putXAt: 1@1.
	aGame putOAt: 1@2.
	aGame putXAt: 2@1.
	
	self assert: aGame hasXPlayerWon.
! !
!TerniLapilliGame methodsFor: 'as yet unclassified' stamp: 'IO 11/1/2020 20:17:40' prior: 50900881!
hasXPlayerWon

	"returns true if x has won or not"

	^state hasXWon.
! !

!methodRemoval: TerniLapilliGame #hasXWon stamp: 'IO 11/1/2020 20:17:40'!
hasXWon

	"returns true if x has won or not"

	^state hasXWon.
!
!TerniLapilliGameState methodsFor: 'testing' stamp: 'IO 11/1/2020 20:18:04'!
hasXPlayerWon

	"returns true if the current state is in a winning position for X. if true, the state is final"

	^xTokens areInWinningPosition.
! !
!TerniLapilliGame methodsFor: 'as yet unclassified' stamp: 'IO 11/1/2020 20:18:04' prior: 50900995!
hasXPlayerWon

	"returns true if x has won or not"

	^state hasXPlayerWon.
! !

!methodRemoval: TerniLapilliGameState #hasXWon stamp: 'IO 11/1/2020 20:18:04'!
hasXWon

	"returns true if the current state is in a winning position for X. if true, the state is final"

	^xTokens areInWinningPosition.
!

!testRun: #TerniLapilliGameTest #test01XCanPutAToken stamp: 'IO 11/1/2020 20:18:10'!
PASSED!

!testRun: #TerniLapilliGameTest #test02puttingDoesNotAffectOtherPositions stamp: 'IO 11/1/2020 20:18:10'!
PASSED!

!testRun: #TerniLapilliGameTest #test03XCanPutInOtherPositions stamp: 'IO 11/1/2020 20:18:10'!
PASSED!

!testRun: #TerniLapilliGameTest #test04OCanPut stamp: 'IO 11/1/2020 20:18:10'!
PASSED!

!testRun: #TerniLapilliGameTest #test05XCanMove stamp: 'IO 11/1/2020 20:18:10'!
PASSED!

!testRun: #TerniLapilliGameTest #test06OCanMove stamp: 'IO 11/1/2020 20:18:10'!
PASSED!

!testRun: #TerniLapilliGameTest #test07XWinsWithTheFirstColumn stamp: 'IO 11/1/2020 20:18:10'!
PASSED!

!testRun: #TerniLapilliGameTest #test08XHasntWonYet stamp: 'IO 11/1/2020 20:18:10'!
PASSED!

!testRun: #TerniLapilliGameTest #test09XWinsWithTheSecondColumn stamp: 'IO 11/1/2020 20:18:10'!
PASSED!

!testRun: #TerniLapilliGameTest #test10XWinsWithTheThirdColumn stamp: 'IO 11/1/2020 20:18:10'!
PASSED!

!testRun: #TerniLapilliGameTest #test11XWinsWithTheFirstRow stamp: 'IO 11/1/2020 20:18:10'!
PASSED!

!testRun: #TerniLapilliGameTest #test12XWinsWithTheSecondRow stamp: 'IO 11/1/2020 20:18:10'!
PASSED!

!testRun: #TerniLapilliGameTest #test13XWinsWithTheThirdRow stamp: 'IO 11/1/2020 20:18:10'!
PASSED!

!testRun: #TerniLapilliGameTest #test14XWinsWithTheCrescentDiagonal stamp: 'IO 11/1/2020 20:18:10'!
PASSED!

!testRun: #TerniLapilliGameTest #test15XWinsWithTheDescendantDiagonal stamp: 'IO 11/1/2020 20:18:10'!
PASSED!

!testRun: #TerniLapilliGameTest #test16OWnis stamp: 'IO 11/1/2020 20:18:10'!
PASSED!

!testRun: #TerniLapilliGameTest #test17OCantStartPutting stamp: 'IO 11/1/2020 20:18:10'!
PASSED!

!testRun: #TerniLapilliGameTest #test18XCantPutTwiceInARow stamp: 'IO 11/1/2020 20:18:10'!
PASSED!

!testRun: #TerniLapilliGameTest #test19XCantMoveTwiceInARow stamp: 'IO 11/1/2020 20:18:10'!
PASSED!

!testRun: #TerniLapilliGameTest #test20OCantPutTwiceInARow stamp: 'IO 11/1/2020 20:18:10'!
PASSED!

!testRun: #TerniLapilliGameTest #test21OCantMoveTwiceInARow stamp: 'IO 11/1/2020 20:18:10'!
PASSED!

!testRun: #TerniLapilliGameTest #test22XCantMoveOnTheirFirstTurn stamp: 'IO 11/1/2020 20:18:10'!
PASSED!

!testRun: #TerniLapilliGameTest #test23XCantMoveOnTheirSecondTurn stamp: 'IO 11/1/2020 20:18:10'!
PASSED!

!testRun: #TerniLapilliGameTest #test24XCantMoveOnTheirThirdTurn stamp: 'IO 11/1/2020 20:18:10'!
PASSED!

!testRun: #TerniLapilliGameTest #test25OCantMoveOnTheirFirstTurn stamp: 'IO 11/1/2020 20:18:10'!
PASSED!

!testRun: #TerniLapilliGameTest #test26OCantMoveOnTheirSecondTurn stamp: 'IO 11/1/2020 20:18:10'!
PASSED!

!testRun: #TerniLapilliGameTest #test27OCantMoveOnTheirThirdTurn stamp: 'IO 11/1/2020 20:18:10'!
PASSED!

!testRun: #TerniLapilliGameTest #test28XCantPutAfterTheirThirdTurn stamp: 'IO 11/1/2020 20:18:10'!
PASSED!

!testRun: #TerniLapilliGameTest #test29OCantPutAfterTheirThirdTurn stamp: 'IO 11/1/2020 20:18:10'!
PASSED!

!testRun: #TerniLapilliGameTest #test30OCantPutAfterXWon stamp: 'IO 11/1/2020 20:18:10'!
PASSED!

!testRun: #TerniLapilliGameTest #test31OCantMoveAfterXWon stamp: 'IO 11/1/2020 20:18:10'!
PASSED!

!testRun: #TerniLapilliGameTest #test32XCantMoveAfterOWon stamp: 'IO 11/1/2020 20:18:10'!
PASSED!

!testRun: #TerniLapilliGameTest #test33XCantPutAfterOWon stamp: 'IO 11/1/2020 20:18:10'!
PASSED!

!testRun: #TerniLapilliGameTest #test34XCantPutInAnOccupiedSpace stamp: 'IO 11/1/2020 20:18:10'!
PASSED!

!testRun: #TerniLapilliGameTest #test35OCantPutInAnOccupiedSpace stamp: 'IO 11/1/2020 20:18:10'!
PASSED!

!testRun: #TerniLapilliGameTest #test36XCantMoveToAnOccupiedSpace stamp: 'IO 11/1/2020 20:18:10'!
PASSED!

!testRun: #TerniLapilliGameTest #test37OCantMoveToAnOccupiedSpace stamp: 'IO 11/1/2020 20:18:10'!
PASSED!

!testRun: #TerniLapilliGameTest #test38XCantPutOutsideTheBoardUnderXAxis stamp: 'IO 11/1/2020 20:18:10'!
PASSED!

!testRun: #TerniLapilliGameTest #test39XCantPutOutsideTheBoardAboveXAxis stamp: 'IO 11/1/2020 20:18:10'!
PASSED!

!testRun: #TerniLapilliGameTest #test40XCantPutOutsideTheBoardUnderNorAboveTheYAxis stamp: 'IO 11/1/2020 20:18:10'!
PASSED!

!testRun: #TerniLapilliGameTest #test41OCantPutOutsideTheBoard stamp: 'IO 11/1/2020 20:18:10'!
PASSED!

!testRun: #TerniLapilliGameTest #test42XCantMoveToOutsideTheBoard stamp: 'IO 11/1/2020 20:18:10'!
PASSED!

!testRun: #TerniLapilliGameTest #test43OCantMoveToOutsideTheBoard stamp: 'IO 11/1/2020 20:18:10'!
PASSED!

!testRun: #TerniLapilliGameTest #test44XCantMoveTokensThatDontBelongToThem stamp: 'IO 11/1/2020 20:18:10'!
PASSED!

!testRun: #TerniLapilliGameTest #test45OCantMoveTokensThatDontBelongToThem stamp: 'IO 11/1/2020 20:18:10'!
PASSED!

!testRun: #TerniLapilliGameTest #test46XCantMoveaTokenOutsideItsNeighbors stamp: 'IO 11/1/2020 20:18:10'!
PASSED!

!testRun: #TerniLapilliGameTest #test47OCantMoveATokenOutsideItsNeighbors stamp: 'IO 11/1/2020 20:18:10'!
PASSED!
!TerniLapilliGameState methodsFor: 'error singaling' stamp: 'IO 11/1/2020 20:21:09'!
errorGameOver

	"signal when a player is trying to move or put after the game has ended"

	^self error: TerniLapilliGame gameEndedErrorMessage.
! !
!GameOver methodsFor: 'as yet unclassified' stamp: 'IO 11/1/2020 20:21:09' prior: 50892836 overrides: 50892808!
moveXFrom: aPosition to: aDestination

	"see superimplementor"

	^self errorGameOver.

! !
!GameOver methodsFor: 'as yet unclassified' stamp: 'IO 11/1/2020 20:21:09' prior: 50892823 overrides: 50892800!
moveOFrom: aPosition to: aDestination

	"see superimplementor"

	^self errorGameOver.
! !
!GameOver methodsFor: 'as yet unclassified' stamp: 'IO 11/1/2020 20:21:09' prior: 50891042 overrides: 50891565!
putXAt: aPosition

	"see superimplementor"

	^self errorGameOver.
! !
!GameOver methodsFor: 'as yet unclassified' stamp: 'IO 11/1/2020 20:21:09' prior: 50890120 overrides: 50891558!
putOAt: aPosition

	"see superimplementor"

	^self errorGameOver.
! !

!methodRemoval: TerniLapilliGameState #errorGameEnded stamp: 'IO 11/1/2020 20:21:09'!
errorGameEnded

	"signal when a player is trying to move or put after the game has ended"

	^self error: TerniLapilliGame gameEndedErrorMessage.
!

!testRun: #TerniLapilliGameTest #test01XCanPutAToken stamp: 'IO 11/1/2020 20:21:13'!
PASSED!

!testRun: #TerniLapilliGameTest #test02puttingDoesNotAffectOtherPositions stamp: 'IO 11/1/2020 20:21:13'!
PASSED!

!testRun: #TerniLapilliGameTest #test03XCanPutInOtherPositions stamp: 'IO 11/1/2020 20:21:13'!
PASSED!

!testRun: #TerniLapilliGameTest #test04OCanPut stamp: 'IO 11/1/2020 20:21:13'!
PASSED!

!testRun: #TerniLapilliGameTest #test05XCanMove stamp: 'IO 11/1/2020 20:21:13'!
PASSED!

!testRun: #TerniLapilliGameTest #test06OCanMove stamp: 'IO 11/1/2020 20:21:13'!
PASSED!

!testRun: #TerniLapilliGameTest #test07XWinsWithTheFirstColumn stamp: 'IO 11/1/2020 20:21:13'!
PASSED!

!testRun: #TerniLapilliGameTest #test08XHasntWonYet stamp: 'IO 11/1/2020 20:21:13'!
PASSED!

!testRun: #TerniLapilliGameTest #test09XWinsWithTheSecondColumn stamp: 'IO 11/1/2020 20:21:13'!
PASSED!

!testRun: #TerniLapilliGameTest #test10XWinsWithTheThirdColumn stamp: 'IO 11/1/2020 20:21:13'!
PASSED!

!testRun: #TerniLapilliGameTest #test11XWinsWithTheFirstRow stamp: 'IO 11/1/2020 20:21:13'!
PASSED!

!testRun: #TerniLapilliGameTest #test12XWinsWithTheSecondRow stamp: 'IO 11/1/2020 20:21:13'!
PASSED!

!testRun: #TerniLapilliGameTest #test13XWinsWithTheThirdRow stamp: 'IO 11/1/2020 20:21:13'!
PASSED!

!testRun: #TerniLapilliGameTest #test14XWinsWithTheCrescentDiagonal stamp: 'IO 11/1/2020 20:21:13'!
PASSED!

!testRun: #TerniLapilliGameTest #test15XWinsWithTheDescendantDiagonal stamp: 'IO 11/1/2020 20:21:13'!
PASSED!

!testRun: #TerniLapilliGameTest #test16OWnis stamp: 'IO 11/1/2020 20:21:13'!
PASSED!

!testRun: #TerniLapilliGameTest #test17OCantStartPutting stamp: 'IO 11/1/2020 20:21:13'!
PASSED!

!testRun: #TerniLapilliGameTest #test18XCantPutTwiceInARow stamp: 'IO 11/1/2020 20:21:13'!
PASSED!

!testRun: #TerniLapilliGameTest #test19XCantMoveTwiceInARow stamp: 'IO 11/1/2020 20:21:13'!
PASSED!

!testRun: #TerniLapilliGameTest #test20OCantPutTwiceInARow stamp: 'IO 11/1/2020 20:21:13'!
PASSED!

!testRun: #TerniLapilliGameTest #test21OCantMoveTwiceInARow stamp: 'IO 11/1/2020 20:21:13'!
PASSED!

!testRun: #TerniLapilliGameTest #test22XCantMoveOnTheirFirstTurn stamp: 'IO 11/1/2020 20:21:13'!
PASSED!

!testRun: #TerniLapilliGameTest #test23XCantMoveOnTheirSecondTurn stamp: 'IO 11/1/2020 20:21:13'!
PASSED!

!testRun: #TerniLapilliGameTest #test24XCantMoveOnTheirThirdTurn stamp: 'IO 11/1/2020 20:21:13'!
PASSED!

!testRun: #TerniLapilliGameTest #test25OCantMoveOnTheirFirstTurn stamp: 'IO 11/1/2020 20:21:13'!
PASSED!

!testRun: #TerniLapilliGameTest #test26OCantMoveOnTheirSecondTurn stamp: 'IO 11/1/2020 20:21:13'!
PASSED!

!testRun: #TerniLapilliGameTest #test27OCantMoveOnTheirThirdTurn stamp: 'IO 11/1/2020 20:21:13'!
PASSED!

!testRun: #TerniLapilliGameTest #test28XCantPutAfterTheirThirdTurn stamp: 'IO 11/1/2020 20:21:13'!
PASSED!

!testRun: #TerniLapilliGameTest #test29OCantPutAfterTheirThirdTurn stamp: 'IO 11/1/2020 20:21:13'!
PASSED!

!testRun: #TerniLapilliGameTest #test30OCantPutAfterXWon stamp: 'IO 11/1/2020 20:21:13'!
PASSED!

!testRun: #TerniLapilliGameTest #test31OCantMoveAfterXWon stamp: 'IO 11/1/2020 20:21:13'!
PASSED!

!testRun: #TerniLapilliGameTest #test32XCantMoveAfterOWon stamp: 'IO 11/1/2020 20:21:13'!
PASSED!

!testRun: #TerniLapilliGameTest #test33XCantPutAfterOWon stamp: 'IO 11/1/2020 20:21:13'!
PASSED!

!testRun: #TerniLapilliGameTest #test34XCantPutInAnOccupiedSpace stamp: 'IO 11/1/2020 20:21:13'!
PASSED!

!testRun: #TerniLapilliGameTest #test35OCantPutInAnOccupiedSpace stamp: 'IO 11/1/2020 20:21:13'!
PASSED!

!testRun: #TerniLapilliGameTest #test36XCantMoveToAnOccupiedSpace stamp: 'IO 11/1/2020 20:21:13'!
PASSED!

!testRun: #TerniLapilliGameTest #test37OCantMoveToAnOccupiedSpace stamp: 'IO 11/1/2020 20:21:13'!
PASSED!

!testRun: #TerniLapilliGameTest #test38XCantPutOutsideTheBoardUnderXAxis stamp: 'IO 11/1/2020 20:21:13'!
PASSED!

!testRun: #TerniLapilliGameTest #test39XCantPutOutsideTheBoardAboveXAxis stamp: 'IO 11/1/2020 20:21:13'!
PASSED!

!testRun: #TerniLapilliGameTest #test40XCantPutOutsideTheBoardUnderNorAboveTheYAxis stamp: 'IO 11/1/2020 20:21:13'!
PASSED!

!testRun: #TerniLapilliGameTest #test41OCantPutOutsideTheBoard stamp: 'IO 11/1/2020 20:21:13'!
PASSED!

!testRun: #TerniLapilliGameTest #test42XCantMoveToOutsideTheBoard stamp: 'IO 11/1/2020 20:21:13'!
PASSED!

!testRun: #TerniLapilliGameTest #test43OCantMoveToOutsideTheBoard stamp: 'IO 11/1/2020 20:21:13'!
PASSED!

!testRun: #TerniLapilliGameTest #test44XCantMoveTokensThatDontBelongToThem stamp: 'IO 11/1/2020 20:21:13'!
PASSED!

!testRun: #TerniLapilliGameTest #test45OCantMoveTokensThatDontBelongToThem stamp: 'IO 11/1/2020 20:21:13'!
PASSED!

!testRun: #TerniLapilliGameTest #test46XCantMoveaTokenOutsideItsNeighbors stamp: 'IO 11/1/2020 20:21:13'!
PASSED!

!testRun: #TerniLapilliGameTest #test47OCantMoveATokenOutsideItsNeighbors stamp: 'IO 11/1/2020 20:21:13'!
PASSED!
!TerniLapilliPlayerTokens methodsFor: 'testing' stamp: 'IO 11/1/2020 20:23:18'!
has: aPosition

	"returns true if a token is placed in a given position"

	^self includes: aPosition.
! !
!TerniLapilliGameState methodsFor: 'testing' stamp: 'IO 11/1/2020 20:23:32' prior: 50895327!
hasOAt: aPosition

	"returns true if the current state has O's token placed at a given position"

	^oTokens has: aPosition.

! !

!testRun: #TerniLapilliGameTest #test01XCanPutAToken stamp: 'IO 11/1/2020 20:23:34'!
PASSED!

!testRun: #TerniLapilliGameTest #test02puttingDoesNotAffectOtherPositions stamp: 'IO 11/1/2020 20:23:34'!
PASSED!

!testRun: #TerniLapilliGameTest #test03XCanPutInOtherPositions stamp: 'IO 11/1/2020 20:23:34'!
PASSED!

!testRun: #TerniLapilliGameTest #test04OCanPut stamp: 'IO 11/1/2020 20:23:34'!
PASSED!

!testRun: #TerniLapilliGameTest #test05XCanMove stamp: 'IO 11/1/2020 20:23:34'!
PASSED!

!testRun: #TerniLapilliGameTest #test06OCanMove stamp: 'IO 11/1/2020 20:23:34'!
PASSED!

!testRun: #TerniLapilliGameTest #test07XWinsWithTheFirstColumn stamp: 'IO 11/1/2020 20:23:34'!
PASSED!

!testRun: #TerniLapilliGameTest #test08XHasntWonYet stamp: 'IO 11/1/2020 20:23:34'!
PASSED!

!testRun: #TerniLapilliGameTest #test09XWinsWithTheSecondColumn stamp: 'IO 11/1/2020 20:23:34'!
PASSED!

!testRun: #TerniLapilliGameTest #test10XWinsWithTheThirdColumn stamp: 'IO 11/1/2020 20:23:34'!
PASSED!

!testRun: #TerniLapilliGameTest #test11XWinsWithTheFirstRow stamp: 'IO 11/1/2020 20:23:34'!
PASSED!

!testRun: #TerniLapilliGameTest #test12XWinsWithTheSecondRow stamp: 'IO 11/1/2020 20:23:34'!
PASSED!

!testRun: #TerniLapilliGameTest #test13XWinsWithTheThirdRow stamp: 'IO 11/1/2020 20:23:34'!
PASSED!

!testRun: #TerniLapilliGameTest #test14XWinsWithTheCrescentDiagonal stamp: 'IO 11/1/2020 20:23:35'!
PASSED!

!testRun: #TerniLapilliGameTest #test15XWinsWithTheDescendantDiagonal stamp: 'IO 11/1/2020 20:23:35'!
PASSED!

!testRun: #TerniLapilliGameTest #test16OWnis stamp: 'IO 11/1/2020 20:23:35'!
PASSED!

!testRun: #TerniLapilliGameTest #test17OCantStartPutting stamp: 'IO 11/1/2020 20:23:35'!
PASSED!

!testRun: #TerniLapilliGameTest #test18XCantPutTwiceInARow stamp: 'IO 11/1/2020 20:23:35'!
PASSED!

!testRun: #TerniLapilliGameTest #test19XCantMoveTwiceInARow stamp: 'IO 11/1/2020 20:23:35'!
PASSED!

!testRun: #TerniLapilliGameTest #test20OCantPutTwiceInARow stamp: 'IO 11/1/2020 20:23:35'!
PASSED!

!testRun: #TerniLapilliGameTest #test21OCantMoveTwiceInARow stamp: 'IO 11/1/2020 20:23:35'!
PASSED!

!testRun: #TerniLapilliGameTest #test22XCantMoveOnTheirFirstTurn stamp: 'IO 11/1/2020 20:23:35'!
PASSED!

!testRun: #TerniLapilliGameTest #test23XCantMoveOnTheirSecondTurn stamp: 'IO 11/1/2020 20:23:35'!
PASSED!

!testRun: #TerniLapilliGameTest #test24XCantMoveOnTheirThirdTurn stamp: 'IO 11/1/2020 20:23:35'!
PASSED!

!testRun: #TerniLapilliGameTest #test25OCantMoveOnTheirFirstTurn stamp: 'IO 11/1/2020 20:23:35'!
PASSED!

!testRun: #TerniLapilliGameTest #test26OCantMoveOnTheirSecondTurn stamp: 'IO 11/1/2020 20:23:35'!
PASSED!

!testRun: #TerniLapilliGameTest #test27OCantMoveOnTheirThirdTurn stamp: 'IO 11/1/2020 20:23:35'!
PASSED!

!testRun: #TerniLapilliGameTest #test28XCantPutAfterTheirThirdTurn stamp: 'IO 11/1/2020 20:23:35'!
PASSED!

!testRun: #TerniLapilliGameTest #test29OCantPutAfterTheirThirdTurn stamp: 'IO 11/1/2020 20:23:35'!
PASSED!

!testRun: #TerniLapilliGameTest #test30OCantPutAfterXWon stamp: 'IO 11/1/2020 20:23:35'!
PASSED!

!testRun: #TerniLapilliGameTest #test31OCantMoveAfterXWon stamp: 'IO 11/1/2020 20:23:35'!
PASSED!

!testRun: #TerniLapilliGameTest #test32XCantMoveAfterOWon stamp: 'IO 11/1/2020 20:23:35'!
PASSED!

!testRun: #TerniLapilliGameTest #test33XCantPutAfterOWon stamp: 'IO 11/1/2020 20:23:35'!
PASSED!

!testRun: #TerniLapilliGameTest #test34XCantPutInAnOccupiedSpace stamp: 'IO 11/1/2020 20:23:35'!
PASSED!

!testRun: #TerniLapilliGameTest #test35OCantPutInAnOccupiedSpace stamp: 'IO 11/1/2020 20:23:35'!
PASSED!

!testRun: #TerniLapilliGameTest #test36XCantMoveToAnOccupiedSpace stamp: 'IO 11/1/2020 20:23:35'!
PASSED!

!testRun: #TerniLapilliGameTest #test37OCantMoveToAnOccupiedSpace stamp: 'IO 11/1/2020 20:23:35'!
PASSED!

!testRun: #TerniLapilliGameTest #test38XCantPutOutsideTheBoardUnderXAxis stamp: 'IO 11/1/2020 20:23:35'!
PASSED!

!testRun: #TerniLapilliGameTest #test39XCantPutOutsideTheBoardAboveXAxis stamp: 'IO 11/1/2020 20:23:35'!
PASSED!

!testRun: #TerniLapilliGameTest #test40XCantPutOutsideTheBoardUnderNorAboveTheYAxis stamp: 'IO 11/1/2020 20:23:35'!
PASSED!

!testRun: #TerniLapilliGameTest #test41OCantPutOutsideTheBoard stamp: 'IO 11/1/2020 20:23:35'!
PASSED!

!testRun: #TerniLapilliGameTest #test42XCantMoveToOutsideTheBoard stamp: 'IO 11/1/2020 20:23:35'!
PASSED!

!testRun: #TerniLapilliGameTest #test43OCantMoveToOutsideTheBoard stamp: 'IO 11/1/2020 20:23:35'!
PASSED!

!testRun: #TerniLapilliGameTest #test44XCantMoveTokensThatDontBelongToThem stamp: 'IO 11/1/2020 20:23:35'!
PASSED!

!testRun: #TerniLapilliGameTest #test45OCantMoveTokensThatDontBelongToThem stamp: 'IO 11/1/2020 20:23:35'!
PASSED!

!testRun: #TerniLapilliGameTest #test46XCantMoveaTokenOutsideItsNeighbors stamp: 'IO 11/1/2020 20:23:35'!
PASSED!

!testRun: #TerniLapilliGameTest #test47OCantMoveATokenOutsideItsNeighbors stamp: 'IO 11/1/2020 20:23:35'!
PASSED!
!TerniLapilliGameState methodsFor: 'testing' stamp: 'IO 11/1/2020 20:23:43' prior: 50895297!
hasXAt: aPosition

	"returns true if the current state has X's token placed at a given position"

	^xTokens has: aPosition.
! !

!testRun: #TerniLapilliGameTest #test01XCanPutAToken stamp: 'IO 11/1/2020 20:23:45'!
PASSED!

!testRun: #TerniLapilliGameTest #test02puttingDoesNotAffectOtherPositions stamp: 'IO 11/1/2020 20:23:45'!
PASSED!

!testRun: #TerniLapilliGameTest #test03XCanPutInOtherPositions stamp: 'IO 11/1/2020 20:23:45'!
PASSED!

!testRun: #TerniLapilliGameTest #test04OCanPut stamp: 'IO 11/1/2020 20:23:45'!
PASSED!

!testRun: #TerniLapilliGameTest #test05XCanMove stamp: 'IO 11/1/2020 20:23:45'!
PASSED!

!testRun: #TerniLapilliGameTest #test06OCanMove stamp: 'IO 11/1/2020 20:23:45'!
PASSED!

!testRun: #TerniLapilliGameTest #test07XWinsWithTheFirstColumn stamp: 'IO 11/1/2020 20:23:45'!
PASSED!

!testRun: #TerniLapilliGameTest #test08XHasntWonYet stamp: 'IO 11/1/2020 20:23:45'!
PASSED!

!testRun: #TerniLapilliGameTest #test09XWinsWithTheSecondColumn stamp: 'IO 11/1/2020 20:23:45'!
PASSED!

!testRun: #TerniLapilliGameTest #test10XWinsWithTheThirdColumn stamp: 'IO 11/1/2020 20:23:45'!
PASSED!

!testRun: #TerniLapilliGameTest #test11XWinsWithTheFirstRow stamp: 'IO 11/1/2020 20:23:45'!
PASSED!

!testRun: #TerniLapilliGameTest #test12XWinsWithTheSecondRow stamp: 'IO 11/1/2020 20:23:45'!
PASSED!

!testRun: #TerniLapilliGameTest #test13XWinsWithTheThirdRow stamp: 'IO 11/1/2020 20:23:45'!
PASSED!

!testRun: #TerniLapilliGameTest #test14XWinsWithTheCrescentDiagonal stamp: 'IO 11/1/2020 20:23:45'!
PASSED!

!testRun: #TerniLapilliGameTest #test15XWinsWithTheDescendantDiagonal stamp: 'IO 11/1/2020 20:23:45'!
PASSED!

!testRun: #TerniLapilliGameTest #test16OWnis stamp: 'IO 11/1/2020 20:23:45'!
PASSED!

!testRun: #TerniLapilliGameTest #test17OCantStartPutting stamp: 'IO 11/1/2020 20:23:45'!
PASSED!

!testRun: #TerniLapilliGameTest #test18XCantPutTwiceInARow stamp: 'IO 11/1/2020 20:23:45'!
PASSED!

!testRun: #TerniLapilliGameTest #test19XCantMoveTwiceInARow stamp: 'IO 11/1/2020 20:23:45'!
PASSED!

!testRun: #TerniLapilliGameTest #test20OCantPutTwiceInARow stamp: 'IO 11/1/2020 20:23:45'!
PASSED!

!testRun: #TerniLapilliGameTest #test21OCantMoveTwiceInARow stamp: 'IO 11/1/2020 20:23:45'!
PASSED!

!testRun: #TerniLapilliGameTest #test22XCantMoveOnTheirFirstTurn stamp: 'IO 11/1/2020 20:23:45'!
PASSED!

!testRun: #TerniLapilliGameTest #test23XCantMoveOnTheirSecondTurn stamp: 'IO 11/1/2020 20:23:45'!
PASSED!

!testRun: #TerniLapilliGameTest #test24XCantMoveOnTheirThirdTurn stamp: 'IO 11/1/2020 20:23:45'!
PASSED!

!testRun: #TerniLapilliGameTest #test25OCantMoveOnTheirFirstTurn stamp: 'IO 11/1/2020 20:23:45'!
PASSED!

!testRun: #TerniLapilliGameTest #test26OCantMoveOnTheirSecondTurn stamp: 'IO 11/1/2020 20:23:45'!
PASSED!

!testRun: #TerniLapilliGameTest #test27OCantMoveOnTheirThirdTurn stamp: 'IO 11/1/2020 20:23:45'!
PASSED!

!testRun: #TerniLapilliGameTest #test28XCantPutAfterTheirThirdTurn stamp: 'IO 11/1/2020 20:23:45'!
PASSED!

!testRun: #TerniLapilliGameTest #test29OCantPutAfterTheirThirdTurn stamp: 'IO 11/1/2020 20:23:45'!
PASSED!

!testRun: #TerniLapilliGameTest #test30OCantPutAfterXWon stamp: 'IO 11/1/2020 20:23:45'!
PASSED!

!testRun: #TerniLapilliGameTest #test31OCantMoveAfterXWon stamp: 'IO 11/1/2020 20:23:45'!
PASSED!

!testRun: #TerniLapilliGameTest #test32XCantMoveAfterOWon stamp: 'IO 11/1/2020 20:23:45'!
PASSED!

!testRun: #TerniLapilliGameTest #test33XCantPutAfterOWon stamp: 'IO 11/1/2020 20:23:45'!
PASSED!

!testRun: #TerniLapilliGameTest #test34XCantPutInAnOccupiedSpace stamp: 'IO 11/1/2020 20:23:45'!
PASSED!

!testRun: #TerniLapilliGameTest #test35OCantPutInAnOccupiedSpace stamp: 'IO 11/1/2020 20:23:45'!
PASSED!

!testRun: #TerniLapilliGameTest #test36XCantMoveToAnOccupiedSpace stamp: 'IO 11/1/2020 20:23:45'!
PASSED!

!testRun: #TerniLapilliGameTest #test37OCantMoveToAnOccupiedSpace stamp: 'IO 11/1/2020 20:23:45'!
PASSED!

!testRun: #TerniLapilliGameTest #test38XCantPutOutsideTheBoardUnderXAxis stamp: 'IO 11/1/2020 20:23:45'!
PASSED!

!testRun: #TerniLapilliGameTest #test39XCantPutOutsideTheBoardAboveXAxis stamp: 'IO 11/1/2020 20:23:45'!
PASSED!

!testRun: #TerniLapilliGameTest #test40XCantPutOutsideTheBoardUnderNorAboveTheYAxis stamp: 'IO 11/1/2020 20:23:45'!
PASSED!

!testRun: #TerniLapilliGameTest #test41OCantPutOutsideTheBoard stamp: 'IO 11/1/2020 20:23:45'!
PASSED!

!testRun: #TerniLapilliGameTest #test42XCantMoveToOutsideTheBoard stamp: 'IO 11/1/2020 20:23:45'!
PASSED!

!testRun: #TerniLapilliGameTest #test43OCantMoveToOutsideTheBoard stamp: 'IO 11/1/2020 20:23:45'!
PASSED!

!testRun: #TerniLapilliGameTest #test44XCantMoveTokensThatDontBelongToThem stamp: 'IO 11/1/2020 20:23:45'!
PASSED!

!testRun: #TerniLapilliGameTest #test45OCantMoveTokensThatDontBelongToThem stamp: 'IO 11/1/2020 20:23:45'!
PASSED!

!testRun: #TerniLapilliGameTest #test46XCantMoveaTokenOutsideItsNeighbors stamp: 'IO 11/1/2020 20:23:45'!
PASSED!

!testRun: #TerniLapilliGameTest #test47OCantMoveATokenOutsideItsNeighbors stamp: 'IO 11/1/2020 20:23:45'!
PASSED!
!TerniLapilliPlayerTokens methodsFor: 'validations' stamp: 'IO 11/1/2020 20:24:19' prior: 50900477!
validateMoveFrom: sourcePosition to: destinationPosition

	"signal when a token cannot be moved from a given position to another"

	(self has: sourcePosition) ifFalse: [
		^self error: TerniLapilliGame noTokenAtPositionErrorMessage].
	(sourcePosition eightNeighbors includes: destinationPosition) ifFalse: [
		^self error: TerniLapilliGame invalidDestinationErrorMessage].

	self validatePosition: destinationPosition.
! !

!testRun: #TerniLapilliGameTest #test01XCanPutAToken stamp: 'IO 11/1/2020 20:24:22'!
PASSED!

!testRun: #TerniLapilliGameTest #test02puttingDoesNotAffectOtherPositions stamp: 'IO 11/1/2020 20:24:22'!
PASSED!

!testRun: #TerniLapilliGameTest #test03XCanPutInOtherPositions stamp: 'IO 11/1/2020 20:24:22'!
PASSED!

!testRun: #TerniLapilliGameTest #test04OCanPut stamp: 'IO 11/1/2020 20:24:22'!
PASSED!

!testRun: #TerniLapilliGameTest #test05XCanMove stamp: 'IO 11/1/2020 20:24:22'!
PASSED!

!testRun: #TerniLapilliGameTest #test06OCanMove stamp: 'IO 11/1/2020 20:24:22'!
PASSED!

!testRun: #TerniLapilliGameTest #test07XWinsWithTheFirstColumn stamp: 'IO 11/1/2020 20:24:22'!
PASSED!

!testRun: #TerniLapilliGameTest #test08XHasntWonYet stamp: 'IO 11/1/2020 20:24:22'!
PASSED!

!testRun: #TerniLapilliGameTest #test09XWinsWithTheSecondColumn stamp: 'IO 11/1/2020 20:24:22'!
PASSED!

!testRun: #TerniLapilliGameTest #test10XWinsWithTheThirdColumn stamp: 'IO 11/1/2020 20:24:22'!
PASSED!

!testRun: #TerniLapilliGameTest #test11XWinsWithTheFirstRow stamp: 'IO 11/1/2020 20:24:22'!
PASSED!

!testRun: #TerniLapilliGameTest #test12XWinsWithTheSecondRow stamp: 'IO 11/1/2020 20:24:22'!
PASSED!

!testRun: #TerniLapilliGameTest #test13XWinsWithTheThirdRow stamp: 'IO 11/1/2020 20:24:22'!
PASSED!

!testRun: #TerniLapilliGameTest #test14XWinsWithTheCrescentDiagonal stamp: 'IO 11/1/2020 20:24:22'!
PASSED!

!testRun: #TerniLapilliGameTest #test15XWinsWithTheDescendantDiagonal stamp: 'IO 11/1/2020 20:24:22'!
PASSED!

!testRun: #TerniLapilliGameTest #test16OWnis stamp: 'IO 11/1/2020 20:24:22'!
PASSED!

!testRun: #TerniLapilliGameTest #test17OCantStartPutting stamp: 'IO 11/1/2020 20:24:22'!
PASSED!

!testRun: #TerniLapilliGameTest #test18XCantPutTwiceInARow stamp: 'IO 11/1/2020 20:24:22'!
PASSED!

!testRun: #TerniLapilliGameTest #test19XCantMoveTwiceInARow stamp: 'IO 11/1/2020 20:24:22'!
PASSED!

!testRun: #TerniLapilliGameTest #test20OCantPutTwiceInARow stamp: 'IO 11/1/2020 20:24:22'!
PASSED!

!testRun: #TerniLapilliGameTest #test21OCantMoveTwiceInARow stamp: 'IO 11/1/2020 20:24:22'!
PASSED!

!testRun: #TerniLapilliGameTest #test22XCantMoveOnTheirFirstTurn stamp: 'IO 11/1/2020 20:24:22'!
PASSED!

!testRun: #TerniLapilliGameTest #test23XCantMoveOnTheirSecondTurn stamp: 'IO 11/1/2020 20:24:22'!
PASSED!

!testRun: #TerniLapilliGameTest #test24XCantMoveOnTheirThirdTurn stamp: 'IO 11/1/2020 20:24:22'!
PASSED!

!testRun: #TerniLapilliGameTest #test25OCantMoveOnTheirFirstTurn stamp: 'IO 11/1/2020 20:24:22'!
PASSED!

!testRun: #TerniLapilliGameTest #test26OCantMoveOnTheirSecondTurn stamp: 'IO 11/1/2020 20:24:22'!
PASSED!

!testRun: #TerniLapilliGameTest #test27OCantMoveOnTheirThirdTurn stamp: 'IO 11/1/2020 20:24:22'!
PASSED!

!testRun: #TerniLapilliGameTest #test28XCantPutAfterTheirThirdTurn stamp: 'IO 11/1/2020 20:24:22'!
PASSED!

!testRun: #TerniLapilliGameTest #test29OCantPutAfterTheirThirdTurn stamp: 'IO 11/1/2020 20:24:22'!
PASSED!

!testRun: #TerniLapilliGameTest #test30OCantPutAfterXWon stamp: 'IO 11/1/2020 20:24:22'!
PASSED!

!testRun: #TerniLapilliGameTest #test31OCantMoveAfterXWon stamp: 'IO 11/1/2020 20:24:22'!
PASSED!

!testRun: #TerniLapilliGameTest #test32XCantMoveAfterOWon stamp: 'IO 11/1/2020 20:24:22'!
PASSED!

!testRun: #TerniLapilliGameTest #test33XCantPutAfterOWon stamp: 'IO 11/1/2020 20:24:22'!
PASSED!

!testRun: #TerniLapilliGameTest #test34XCantPutInAnOccupiedSpace stamp: 'IO 11/1/2020 20:24:22'!
PASSED!

!testRun: #TerniLapilliGameTest #test35OCantPutInAnOccupiedSpace stamp: 'IO 11/1/2020 20:24:22'!
PASSED!

!testRun: #TerniLapilliGameTest #test36XCantMoveToAnOccupiedSpace stamp: 'IO 11/1/2020 20:24:22'!
PASSED!

!testRun: #TerniLapilliGameTest #test37OCantMoveToAnOccupiedSpace stamp: 'IO 11/1/2020 20:24:22'!
PASSED!

!testRun: #TerniLapilliGameTest #test38XCantPutOutsideTheBoardUnderXAxis stamp: 'IO 11/1/2020 20:24:22'!
PASSED!

!testRun: #TerniLapilliGameTest #test39XCantPutOutsideTheBoardAboveXAxis stamp: 'IO 11/1/2020 20:24:22'!
PASSED!

!testRun: #TerniLapilliGameTest #test40XCantPutOutsideTheBoardUnderNorAboveTheYAxis stamp: 'IO 11/1/2020 20:24:22'!
PASSED!

!testRun: #TerniLapilliGameTest #test41OCantPutOutsideTheBoard stamp: 'IO 11/1/2020 20:24:22'!
PASSED!

!testRun: #TerniLapilliGameTest #test42XCantMoveToOutsideTheBoard stamp: 'IO 11/1/2020 20:24:22'!
PASSED!

!testRun: #TerniLapilliGameTest #test43OCantMoveToOutsideTheBoard stamp: 'IO 11/1/2020 20:24:22'!
PASSED!

!testRun: #TerniLapilliGameTest #test44XCantMoveTokensThatDontBelongToThem stamp: 'IO 11/1/2020 20:24:22'!
PASSED!

!testRun: #TerniLapilliGameTest #test45OCantMoveTokensThatDontBelongToThem stamp: 'IO 11/1/2020 20:24:22'!
PASSED!

!testRun: #TerniLapilliGameTest #test46XCantMoveaTokenOutsideItsNeighbors stamp: 'IO 11/1/2020 20:24:22'!
PASSED!

!testRun: #TerniLapilliGameTest #test47OCantMoveATokenOutsideItsNeighbors stamp: 'IO 11/1/2020 20:24:22'!
PASSED!
!TerniLapilliPlayerTokens methodsFor: 'testing' stamp: 'IO 11/1/2020 20:24:49' prior: 50901374!
has: aPosition

	"returns true if a token is placed in a given position"

	^tokens includes: aPosition.
! !

!methodRemoval: TerniLapilliPlayerTokens #includes: stamp: 'IO 11/1/2020 20:24:52'!
includes: aPosition

	"returns true if a token is placed in a given position"

	^tokens includes: aPosition.
!

!testRun: #TerniLapilliGameTest #test01XCanPutAToken stamp: 'IO 11/1/2020 20:24:55'!
PASSED!

!testRun: #TerniLapilliGameTest #test02puttingDoesNotAffectOtherPositions stamp: 'IO 11/1/2020 20:24:55'!
PASSED!

!testRun: #TerniLapilliGameTest #test03XCanPutInOtherPositions stamp: 'IO 11/1/2020 20:24:55'!
PASSED!

!testRun: #TerniLapilliGameTest #test04OCanPut stamp: 'IO 11/1/2020 20:24:55'!
PASSED!

!testRun: #TerniLapilliGameTest #test05XCanMove stamp: 'IO 11/1/2020 20:24:55'!
PASSED!

!testRun: #TerniLapilliGameTest #test06OCanMove stamp: 'IO 11/1/2020 20:24:55'!
PASSED!

!testRun: #TerniLapilliGameTest #test07XWinsWithTheFirstColumn stamp: 'IO 11/1/2020 20:24:55'!
PASSED!

!testRun: #TerniLapilliGameTest #test08XHasntWonYet stamp: 'IO 11/1/2020 20:24:55'!
PASSED!

!testRun: #TerniLapilliGameTest #test09XWinsWithTheSecondColumn stamp: 'IO 11/1/2020 20:24:55'!
PASSED!

!testRun: #TerniLapilliGameTest #test10XWinsWithTheThirdColumn stamp: 'IO 11/1/2020 20:24:55'!
PASSED!

!testRun: #TerniLapilliGameTest #test11XWinsWithTheFirstRow stamp: 'IO 11/1/2020 20:24:55'!
PASSED!

!testRun: #TerniLapilliGameTest #test12XWinsWithTheSecondRow stamp: 'IO 11/1/2020 20:24:55'!
PASSED!

!testRun: #TerniLapilliGameTest #test13XWinsWithTheThirdRow stamp: 'IO 11/1/2020 20:24:55'!
PASSED!

!testRun: #TerniLapilliGameTest #test14XWinsWithTheCrescentDiagonal stamp: 'IO 11/1/2020 20:24:55'!
PASSED!

!testRun: #TerniLapilliGameTest #test15XWinsWithTheDescendantDiagonal stamp: 'IO 11/1/2020 20:24:55'!
PASSED!

!testRun: #TerniLapilliGameTest #test16OWnis stamp: 'IO 11/1/2020 20:24:55'!
PASSED!

!testRun: #TerniLapilliGameTest #test17OCantStartPutting stamp: 'IO 11/1/2020 20:24:55'!
PASSED!

!testRun: #TerniLapilliGameTest #test18XCantPutTwiceInARow stamp: 'IO 11/1/2020 20:24:55'!
PASSED!

!testRun: #TerniLapilliGameTest #test19XCantMoveTwiceInARow stamp: 'IO 11/1/2020 20:24:55'!
PASSED!

!testRun: #TerniLapilliGameTest #test20OCantPutTwiceInARow stamp: 'IO 11/1/2020 20:24:55'!
PASSED!

!testRun: #TerniLapilliGameTest #test21OCantMoveTwiceInARow stamp: 'IO 11/1/2020 20:24:55'!
PASSED!

!testRun: #TerniLapilliGameTest #test22XCantMoveOnTheirFirstTurn stamp: 'IO 11/1/2020 20:24:55'!
PASSED!

!testRun: #TerniLapilliGameTest #test23XCantMoveOnTheirSecondTurn stamp: 'IO 11/1/2020 20:24:55'!
PASSED!

!testRun: #TerniLapilliGameTest #test24XCantMoveOnTheirThirdTurn stamp: 'IO 11/1/2020 20:24:55'!
PASSED!

!testRun: #TerniLapilliGameTest #test25OCantMoveOnTheirFirstTurn stamp: 'IO 11/1/2020 20:24:55'!
PASSED!

!testRun: #TerniLapilliGameTest #test26OCantMoveOnTheirSecondTurn stamp: 'IO 11/1/2020 20:24:55'!
PASSED!

!testRun: #TerniLapilliGameTest #test27OCantMoveOnTheirThirdTurn stamp: 'IO 11/1/2020 20:24:55'!
PASSED!

!testRun: #TerniLapilliGameTest #test28XCantPutAfterTheirThirdTurn stamp: 'IO 11/1/2020 20:24:55'!
PASSED!

!testRun: #TerniLapilliGameTest #test29OCantPutAfterTheirThirdTurn stamp: 'IO 11/1/2020 20:24:55'!
PASSED!

!testRun: #TerniLapilliGameTest #test30OCantPutAfterXWon stamp: 'IO 11/1/2020 20:24:55'!
PASSED!

!testRun: #TerniLapilliGameTest #test31OCantMoveAfterXWon stamp: 'IO 11/1/2020 20:24:55'!
PASSED!

!testRun: #TerniLapilliGameTest #test32XCantMoveAfterOWon stamp: 'IO 11/1/2020 20:24:55'!
PASSED!

!testRun: #TerniLapilliGameTest #test33XCantPutAfterOWon stamp: 'IO 11/1/2020 20:24:55'!
PASSED!

!testRun: #TerniLapilliGameTest #test34XCantPutInAnOccupiedSpace stamp: 'IO 11/1/2020 20:24:55'!
PASSED!

!testRun: #TerniLapilliGameTest #test35OCantPutInAnOccupiedSpace stamp: 'IO 11/1/2020 20:24:55'!
PASSED!

!testRun: #TerniLapilliGameTest #test36XCantMoveToAnOccupiedSpace stamp: 'IO 11/1/2020 20:24:55'!
PASSED!

!testRun: #TerniLapilliGameTest #test37OCantMoveToAnOccupiedSpace stamp: 'IO 11/1/2020 20:24:55'!
PASSED!

!testRun: #TerniLapilliGameTest #test38XCantPutOutsideTheBoardUnderXAxis stamp: 'IO 11/1/2020 20:24:55'!
PASSED!

!testRun: #TerniLapilliGameTest #test39XCantPutOutsideTheBoardAboveXAxis stamp: 'IO 11/1/2020 20:24:55'!
PASSED!

!testRun: #TerniLapilliGameTest #test40XCantPutOutsideTheBoardUnderNorAboveTheYAxis stamp: 'IO 11/1/2020 20:24:55'!
PASSED!

!testRun: #TerniLapilliGameTest #test41OCantPutOutsideTheBoard stamp: 'IO 11/1/2020 20:24:55'!
PASSED!

!testRun: #TerniLapilliGameTest #test42XCantMoveToOutsideTheBoard stamp: 'IO 11/1/2020 20:24:55'!
PASSED!

!testRun: #TerniLapilliGameTest #test43OCantMoveToOutsideTheBoard stamp: 'IO 11/1/2020 20:24:55'!
PASSED!

!testRun: #TerniLapilliGameTest #test44XCantMoveTokensThatDontBelongToThem stamp: 'IO 11/1/2020 20:24:55'!
PASSED!

!testRun: #TerniLapilliGameTest #test45OCantMoveTokensThatDontBelongToThem stamp: 'IO 11/1/2020 20:24:55'!
PASSED!

!testRun: #TerniLapilliGameTest #test46XCantMoveaTokenOutsideItsNeighbors stamp: 'IO 11/1/2020 20:24:55'!
PASSED!

!testRun: #TerniLapilliGameTest #test47OCantMoveATokenOutsideItsNeighbors stamp: 'IO 11/1/2020 20:24:55'!
PASSED!
!TerniLapilliPlayerTokens methodsFor: 'testing' stamp: 'IO 11/1/2020 20:26:27'!
tokensAlreadyPut

	"return the amount of tokens placed"

	^self size.
! !
!OTurn class methodsFor: 'instance creation' stamp: 'IO 11/1/2020 20:26:57' prior: 50892662 overrides: 50887156!
withXTokens: nextXTokens oTokens: nextOTokens

	"create the next state of O's turn"

	(nextXTokens areInWinningPosition) ifTrue: [^GameOver withXTokens: nextXTokens oTokens: nextOTokens].
	(nextOTokens tokensAlreadyPut < 3) ifTrue: [^OPuts withXTokens: nextXTokens oTokens: nextOTokens].
	^OMoves withXTokens: nextXTokens oTokens: nextOTokens
! !

!testRun: #TerniLapilliGameTest #test01XCanPutAToken stamp: 'IO 11/1/2020 20:26:59'!
PASSED!

!testRun: #TerniLapilliGameTest #test02puttingDoesNotAffectOtherPositions stamp: 'IO 11/1/2020 20:26:59'!
PASSED!

!testRun: #TerniLapilliGameTest #test03XCanPutInOtherPositions stamp: 'IO 11/1/2020 20:26:59'!
PASSED!

!testRun: #TerniLapilliGameTest #test04OCanPut stamp: 'IO 11/1/2020 20:26:59'!
PASSED!

!testRun: #TerniLapilliGameTest #test05XCanMove stamp: 'IO 11/1/2020 20:26:59'!
PASSED!

!testRun: #TerniLapilliGameTest #test06OCanMove stamp: 'IO 11/1/2020 20:26:59'!
PASSED!

!testRun: #TerniLapilliGameTest #test07XWinsWithTheFirstColumn stamp: 'IO 11/1/2020 20:26:59'!
PASSED!

!testRun: #TerniLapilliGameTest #test08XHasntWonYet stamp: 'IO 11/1/2020 20:26:59'!
PASSED!

!testRun: #TerniLapilliGameTest #test09XWinsWithTheSecondColumn stamp: 'IO 11/1/2020 20:26:59'!
PASSED!

!testRun: #TerniLapilliGameTest #test10XWinsWithTheThirdColumn stamp: 'IO 11/1/2020 20:26:59'!
PASSED!

!testRun: #TerniLapilliGameTest #test11XWinsWithTheFirstRow stamp: 'IO 11/1/2020 20:26:59'!
PASSED!

!testRun: #TerniLapilliGameTest #test12XWinsWithTheSecondRow stamp: 'IO 11/1/2020 20:26:59'!
PASSED!

!testRun: #TerniLapilliGameTest #test13XWinsWithTheThirdRow stamp: 'IO 11/1/2020 20:26:59'!
PASSED!

!testRun: #TerniLapilliGameTest #test14XWinsWithTheCrescentDiagonal stamp: 'IO 11/1/2020 20:26:59'!
PASSED!

!testRun: #TerniLapilliGameTest #test15XWinsWithTheDescendantDiagonal stamp: 'IO 11/1/2020 20:26:59'!
PASSED!

!testRun: #TerniLapilliGameTest #test16OWnis stamp: 'IO 11/1/2020 20:26:59'!
PASSED!

!testRun: #TerniLapilliGameTest #test17OCantStartPutting stamp: 'IO 11/1/2020 20:26:59'!
PASSED!

!testRun: #TerniLapilliGameTest #test18XCantPutTwiceInARow stamp: 'IO 11/1/2020 20:26:59'!
PASSED!

!testRun: #TerniLapilliGameTest #test19XCantMoveTwiceInARow stamp: 'IO 11/1/2020 20:26:59'!
PASSED!

!testRun: #TerniLapilliGameTest #test20OCantPutTwiceInARow stamp: 'IO 11/1/2020 20:26:59'!
PASSED!

!testRun: #TerniLapilliGameTest #test21OCantMoveTwiceInARow stamp: 'IO 11/1/2020 20:26:59'!
PASSED!

!testRun: #TerniLapilliGameTest #test22XCantMoveOnTheirFirstTurn stamp: 'IO 11/1/2020 20:26:59'!
PASSED!

!testRun: #TerniLapilliGameTest #test23XCantMoveOnTheirSecondTurn stamp: 'IO 11/1/2020 20:26:59'!
PASSED!

!testRun: #TerniLapilliGameTest #test24XCantMoveOnTheirThirdTurn stamp: 'IO 11/1/2020 20:26:59'!
PASSED!

!testRun: #TerniLapilliGameTest #test25OCantMoveOnTheirFirstTurn stamp: 'IO 11/1/2020 20:26:59'!
PASSED!

!testRun: #TerniLapilliGameTest #test26OCantMoveOnTheirSecondTurn stamp: 'IO 11/1/2020 20:26:59'!
PASSED!

!testRun: #TerniLapilliGameTest #test27OCantMoveOnTheirThirdTurn stamp: 'IO 11/1/2020 20:26:59'!
PASSED!

!testRun: #TerniLapilliGameTest #test28XCantPutAfterTheirThirdTurn stamp: 'IO 11/1/2020 20:26:59'!
PASSED!

!testRun: #TerniLapilliGameTest #test29OCantPutAfterTheirThirdTurn stamp: 'IO 11/1/2020 20:26:59'!
PASSED!

!testRun: #TerniLapilliGameTest #test30OCantPutAfterXWon stamp: 'IO 11/1/2020 20:26:59'!
PASSED!

!testRun: #TerniLapilliGameTest #test31OCantMoveAfterXWon stamp: 'IO 11/1/2020 20:26:59'!
PASSED!

!testRun: #TerniLapilliGameTest #test32XCantMoveAfterOWon stamp: 'IO 11/1/2020 20:26:59'!
PASSED!

!testRun: #TerniLapilliGameTest #test33XCantPutAfterOWon stamp: 'IO 11/1/2020 20:26:59'!
PASSED!

!testRun: #TerniLapilliGameTest #test34XCantPutInAnOccupiedSpace stamp: 'IO 11/1/2020 20:26:59'!
PASSED!

!testRun: #TerniLapilliGameTest #test35OCantPutInAnOccupiedSpace stamp: 'IO 11/1/2020 20:26:59'!
PASSED!

!testRun: #TerniLapilliGameTest #test36XCantMoveToAnOccupiedSpace stamp: 'IO 11/1/2020 20:26:59'!
PASSED!

!testRun: #TerniLapilliGameTest #test37OCantMoveToAnOccupiedSpace stamp: 'IO 11/1/2020 20:26:59'!
PASSED!

!testRun: #TerniLapilliGameTest #test38XCantPutOutsideTheBoardUnderXAxis stamp: 'IO 11/1/2020 20:26:59'!
PASSED!

!testRun: #TerniLapilliGameTest #test39XCantPutOutsideTheBoardAboveXAxis stamp: 'IO 11/1/2020 20:26:59'!
PASSED!

!testRun: #TerniLapilliGameTest #test40XCantPutOutsideTheBoardUnderNorAboveTheYAxis stamp: 'IO 11/1/2020 20:26:59'!
PASSED!

!testRun: #TerniLapilliGameTest #test41OCantPutOutsideTheBoard stamp: 'IO 11/1/2020 20:26:59'!
PASSED!

!testRun: #TerniLapilliGameTest #test42XCantMoveToOutsideTheBoard stamp: 'IO 11/1/2020 20:26:59'!
PASSED!

!testRun: #TerniLapilliGameTest #test43OCantMoveToOutsideTheBoard stamp: 'IO 11/1/2020 20:26:59'!
PASSED!

!testRun: #TerniLapilliGameTest #test44XCantMoveTokensThatDontBelongToThem stamp: 'IO 11/1/2020 20:26:59'!
PASSED!

!testRun: #TerniLapilliGameTest #test45OCantMoveTokensThatDontBelongToThem stamp: 'IO 11/1/2020 20:26:59'!
PASSED!

!testRun: #TerniLapilliGameTest #test46XCantMoveaTokenOutsideItsNeighbors stamp: 'IO 11/1/2020 20:26:59'!
PASSED!

!testRun: #TerniLapilliGameTest #test47OCantMoveATokenOutsideItsNeighbors stamp: 'IO 11/1/2020 20:26:59'!
PASSED!
!XTurn class methodsFor: 'instance creation' stamp: 'IO 11/1/2020 20:27:08' prior: 50892716 overrides: 50887156!
withXTokens: nextXTokens oTokens: nextOTokens

	"create the next state of X's turn"

	(nextOTokens areInWinningPosition) ifTrue: [^GameOver withXTokens: nextXTokens oTokens: nextOTokens].
	(nextXTokens tokensAlreadyPut < 3) ifTrue: [^XPuts withXTokens: nextXTokens oTokens: nextOTokens].
	^XMoves withXTokens: nextXTokens oTokens: nextOTokens.

	
! !

!testRun: #TerniLapilliGameTest #test01XCanPutAToken stamp: 'IO 11/1/2020 20:27:11'!
PASSED!

!testRun: #TerniLapilliGameTest #test02puttingDoesNotAffectOtherPositions stamp: 'IO 11/1/2020 20:27:11'!
PASSED!

!testRun: #TerniLapilliGameTest #test03XCanPutInOtherPositions stamp: 'IO 11/1/2020 20:27:11'!
PASSED!

!testRun: #TerniLapilliGameTest #test04OCanPut stamp: 'IO 11/1/2020 20:27:11'!
PASSED!

!testRun: #TerniLapilliGameTest #test05XCanMove stamp: 'IO 11/1/2020 20:27:11'!
PASSED!

!testRun: #TerniLapilliGameTest #test06OCanMove stamp: 'IO 11/1/2020 20:27:11'!
PASSED!

!testRun: #TerniLapilliGameTest #test07XWinsWithTheFirstColumn stamp: 'IO 11/1/2020 20:27:11'!
PASSED!

!testRun: #TerniLapilliGameTest #test08XHasntWonYet stamp: 'IO 11/1/2020 20:27:11'!
PASSED!

!testRun: #TerniLapilliGameTest #test09XWinsWithTheSecondColumn stamp: 'IO 11/1/2020 20:27:11'!
PASSED!

!testRun: #TerniLapilliGameTest #test10XWinsWithTheThirdColumn stamp: 'IO 11/1/2020 20:27:11'!
PASSED!

!testRun: #TerniLapilliGameTest #test11XWinsWithTheFirstRow stamp: 'IO 11/1/2020 20:27:11'!
PASSED!

!testRun: #TerniLapilliGameTest #test12XWinsWithTheSecondRow stamp: 'IO 11/1/2020 20:27:11'!
PASSED!

!testRun: #TerniLapilliGameTest #test13XWinsWithTheThirdRow stamp: 'IO 11/1/2020 20:27:11'!
PASSED!

!testRun: #TerniLapilliGameTest #test14XWinsWithTheCrescentDiagonal stamp: 'IO 11/1/2020 20:27:11'!
PASSED!

!testRun: #TerniLapilliGameTest #test15XWinsWithTheDescendantDiagonal stamp: 'IO 11/1/2020 20:27:11'!
PASSED!

!testRun: #TerniLapilliGameTest #test16OWnis stamp: 'IO 11/1/2020 20:27:11'!
PASSED!

!testRun: #TerniLapilliGameTest #test17OCantStartPutting stamp: 'IO 11/1/2020 20:27:11'!
PASSED!

!testRun: #TerniLapilliGameTest #test18XCantPutTwiceInARow stamp: 'IO 11/1/2020 20:27:11'!
PASSED!

!testRun: #TerniLapilliGameTest #test19XCantMoveTwiceInARow stamp: 'IO 11/1/2020 20:27:11'!
PASSED!

!testRun: #TerniLapilliGameTest #test20OCantPutTwiceInARow stamp: 'IO 11/1/2020 20:27:11'!
PASSED!

!testRun: #TerniLapilliGameTest #test21OCantMoveTwiceInARow stamp: 'IO 11/1/2020 20:27:11'!
PASSED!

!testRun: #TerniLapilliGameTest #test22XCantMoveOnTheirFirstTurn stamp: 'IO 11/1/2020 20:27:11'!
PASSED!

!testRun: #TerniLapilliGameTest #test23XCantMoveOnTheirSecondTurn stamp: 'IO 11/1/2020 20:27:11'!
PASSED!

!testRun: #TerniLapilliGameTest #test24XCantMoveOnTheirThirdTurn stamp: 'IO 11/1/2020 20:27:11'!
PASSED!

!testRun: #TerniLapilliGameTest #test25OCantMoveOnTheirFirstTurn stamp: 'IO 11/1/2020 20:27:11'!
PASSED!

!testRun: #TerniLapilliGameTest #test26OCantMoveOnTheirSecondTurn stamp: 'IO 11/1/2020 20:27:11'!
PASSED!

!testRun: #TerniLapilliGameTest #test27OCantMoveOnTheirThirdTurn stamp: 'IO 11/1/2020 20:27:11'!
PASSED!

!testRun: #TerniLapilliGameTest #test28XCantPutAfterTheirThirdTurn stamp: 'IO 11/1/2020 20:27:11'!
PASSED!

!testRun: #TerniLapilliGameTest #test29OCantPutAfterTheirThirdTurn stamp: 'IO 11/1/2020 20:27:11'!
PASSED!

!testRun: #TerniLapilliGameTest #test30OCantPutAfterXWon stamp: 'IO 11/1/2020 20:27:11'!
PASSED!

!testRun: #TerniLapilliGameTest #test31OCantMoveAfterXWon stamp: 'IO 11/1/2020 20:27:11'!
PASSED!

!testRun: #TerniLapilliGameTest #test32XCantMoveAfterOWon stamp: 'IO 11/1/2020 20:27:11'!
PASSED!

!testRun: #TerniLapilliGameTest #test33XCantPutAfterOWon stamp: 'IO 11/1/2020 20:27:11'!
PASSED!

!testRun: #TerniLapilliGameTest #test34XCantPutInAnOccupiedSpace stamp: 'IO 11/1/2020 20:27:11'!
PASSED!

!testRun: #TerniLapilliGameTest #test35OCantPutInAnOccupiedSpace stamp: 'IO 11/1/2020 20:27:11'!
PASSED!

!testRun: #TerniLapilliGameTest #test36XCantMoveToAnOccupiedSpace stamp: 'IO 11/1/2020 20:27:11'!
PASSED!

!testRun: #TerniLapilliGameTest #test37OCantMoveToAnOccupiedSpace stamp: 'IO 11/1/2020 20:27:11'!
PASSED!

!testRun: #TerniLapilliGameTest #test38XCantPutOutsideTheBoardUnderXAxis stamp: 'IO 11/1/2020 20:27:11'!
PASSED!

!testRun: #TerniLapilliGameTest #test39XCantPutOutsideTheBoardAboveXAxis stamp: 'IO 11/1/2020 20:27:11'!
PASSED!

!testRun: #TerniLapilliGameTest #test40XCantPutOutsideTheBoardUnderNorAboveTheYAxis stamp: 'IO 11/1/2020 20:27:11'!
PASSED!

!testRun: #TerniLapilliGameTest #test41OCantPutOutsideTheBoard stamp: 'IO 11/1/2020 20:27:11'!
PASSED!

!testRun: #TerniLapilliGameTest #test42XCantMoveToOutsideTheBoard stamp: 'IO 11/1/2020 20:27:11'!
PASSED!

!testRun: #TerniLapilliGameTest #test43OCantMoveToOutsideTheBoard stamp: 'IO 11/1/2020 20:27:11'!
PASSED!

!testRun: #TerniLapilliGameTest #test44XCantMoveTokensThatDontBelongToThem stamp: 'IO 11/1/2020 20:27:11'!
PASSED!

!testRun: #TerniLapilliGameTest #test45OCantMoveTokensThatDontBelongToThem stamp: 'IO 11/1/2020 20:27:11'!
PASSED!

!testRun: #TerniLapilliGameTest #test46XCantMoveaTokenOutsideItsNeighbors stamp: 'IO 11/1/2020 20:27:11'!
PASSED!

!testRun: #TerniLapilliGameTest #test47OCantMoveATokenOutsideItsNeighbors stamp: 'IO 11/1/2020 20:27:11'!
PASSED!
!TerniLapilliPlayerTokens methodsFor: 'testing' stamp: 'IO 11/1/2020 20:27:32' prior: 50902039!
tokensAlreadyPut

	"return the amount of tokens placed"

	^tokens size.
! !

!testRun: #TerniLapilliGameTest #test01XCanPutAToken stamp: 'IO 11/1/2020 20:27:35'!
PASSED!

!testRun: #TerniLapilliGameTest #test02puttingDoesNotAffectOtherPositions stamp: 'IO 11/1/2020 20:27:35'!
PASSED!

!testRun: #TerniLapilliGameTest #test03XCanPutInOtherPositions stamp: 'IO 11/1/2020 20:27:35'!
PASSED!

!testRun: #TerniLapilliGameTest #test04OCanPut stamp: 'IO 11/1/2020 20:27:35'!
PASSED!

!testRun: #TerniLapilliGameTest #test05XCanMove stamp: 'IO 11/1/2020 20:27:35'!
PASSED!

!testRun: #TerniLapilliGameTest #test06OCanMove stamp: 'IO 11/1/2020 20:27:35'!
PASSED!

!testRun: #TerniLapilliGameTest #test07XWinsWithTheFirstColumn stamp: 'IO 11/1/2020 20:27:35'!
PASSED!

!testRun: #TerniLapilliGameTest #test08XHasntWonYet stamp: 'IO 11/1/2020 20:27:35'!
PASSED!

!testRun: #TerniLapilliGameTest #test09XWinsWithTheSecondColumn stamp: 'IO 11/1/2020 20:27:35'!
PASSED!

!testRun: #TerniLapilliGameTest #test10XWinsWithTheThirdColumn stamp: 'IO 11/1/2020 20:27:35'!
PASSED!

!testRun: #TerniLapilliGameTest #test11XWinsWithTheFirstRow stamp: 'IO 11/1/2020 20:27:35'!
PASSED!

!testRun: #TerniLapilliGameTest #test12XWinsWithTheSecondRow stamp: 'IO 11/1/2020 20:27:35'!
PASSED!

!testRun: #TerniLapilliGameTest #test13XWinsWithTheThirdRow stamp: 'IO 11/1/2020 20:27:35'!
PASSED!

!testRun: #TerniLapilliGameTest #test14XWinsWithTheCrescentDiagonal stamp: 'IO 11/1/2020 20:27:35'!
PASSED!

!testRun: #TerniLapilliGameTest #test15XWinsWithTheDescendantDiagonal stamp: 'IO 11/1/2020 20:27:35'!
PASSED!

!testRun: #TerniLapilliGameTest #test16OWnis stamp: 'IO 11/1/2020 20:27:35'!
PASSED!

!testRun: #TerniLapilliGameTest #test17OCantStartPutting stamp: 'IO 11/1/2020 20:27:35'!
PASSED!

!testRun: #TerniLapilliGameTest #test18XCantPutTwiceInARow stamp: 'IO 11/1/2020 20:27:35'!
PASSED!

!testRun: #TerniLapilliGameTest #test19XCantMoveTwiceInARow stamp: 'IO 11/1/2020 20:27:35'!
PASSED!

!testRun: #TerniLapilliGameTest #test20OCantPutTwiceInARow stamp: 'IO 11/1/2020 20:27:35'!
PASSED!

!testRun: #TerniLapilliGameTest #test21OCantMoveTwiceInARow stamp: 'IO 11/1/2020 20:27:35'!
PASSED!

!testRun: #TerniLapilliGameTest #test22XCantMoveOnTheirFirstTurn stamp: 'IO 11/1/2020 20:27:35'!
PASSED!

!testRun: #TerniLapilliGameTest #test23XCantMoveOnTheirSecondTurn stamp: 'IO 11/1/2020 20:27:35'!
PASSED!

!testRun: #TerniLapilliGameTest #test24XCantMoveOnTheirThirdTurn stamp: 'IO 11/1/2020 20:27:35'!
PASSED!

!testRun: #TerniLapilliGameTest #test25OCantMoveOnTheirFirstTurn stamp: 'IO 11/1/2020 20:27:35'!
PASSED!

!testRun: #TerniLapilliGameTest #test26OCantMoveOnTheirSecondTurn stamp: 'IO 11/1/2020 20:27:35'!
PASSED!

!testRun: #TerniLapilliGameTest #test27OCantMoveOnTheirThirdTurn stamp: 'IO 11/1/2020 20:27:35'!
PASSED!

!testRun: #TerniLapilliGameTest #test28XCantPutAfterTheirThirdTurn stamp: 'IO 11/1/2020 20:27:35'!
PASSED!

!testRun: #TerniLapilliGameTest #test29OCantPutAfterTheirThirdTurn stamp: 'IO 11/1/2020 20:27:35'!
PASSED!

!testRun: #TerniLapilliGameTest #test30OCantPutAfterXWon stamp: 'IO 11/1/2020 20:27:35'!
PASSED!

!testRun: #TerniLapilliGameTest #test31OCantMoveAfterXWon stamp: 'IO 11/1/2020 20:27:35'!
PASSED!

!testRun: #TerniLapilliGameTest #test32XCantMoveAfterOWon stamp: 'IO 11/1/2020 20:27:35'!
PASSED!

!testRun: #TerniLapilliGameTest #test33XCantPutAfterOWon stamp: 'IO 11/1/2020 20:27:35'!
PASSED!

!testRun: #TerniLapilliGameTest #test34XCantPutInAnOccupiedSpace stamp: 'IO 11/1/2020 20:27:35'!
PASSED!

!testRun: #TerniLapilliGameTest #test35OCantPutInAnOccupiedSpace stamp: 'IO 11/1/2020 20:27:35'!
PASSED!

!testRun: #TerniLapilliGameTest #test36XCantMoveToAnOccupiedSpace stamp: 'IO 11/1/2020 20:27:35'!
PASSED!

!testRun: #TerniLapilliGameTest #test37OCantMoveToAnOccupiedSpace stamp: 'IO 11/1/2020 20:27:35'!
PASSED!

!testRun: #TerniLapilliGameTest #test38XCantPutOutsideTheBoardUnderXAxis stamp: 'IO 11/1/2020 20:27:35'!
PASSED!

!testRun: #TerniLapilliGameTest #test39XCantPutOutsideTheBoardAboveXAxis stamp: 'IO 11/1/2020 20:27:35'!
PASSED!

!testRun: #TerniLapilliGameTest #test40XCantPutOutsideTheBoardUnderNorAboveTheYAxis stamp: 'IO 11/1/2020 20:27:35'!
PASSED!

!testRun: #TerniLapilliGameTest #test41OCantPutOutsideTheBoard stamp: 'IO 11/1/2020 20:27:35'!
PASSED!

!testRun: #TerniLapilliGameTest #test42XCantMoveToOutsideTheBoard stamp: 'IO 11/1/2020 20:27:35'!
PASSED!

!testRun: #TerniLapilliGameTest #test43OCantMoveToOutsideTheBoard stamp: 'IO 11/1/2020 20:27:35'!
PASSED!

!testRun: #TerniLapilliGameTest #test44XCantMoveTokensThatDontBelongToThem stamp: 'IO 11/1/2020 20:27:35'!
PASSED!

!testRun: #TerniLapilliGameTest #test45OCantMoveTokensThatDontBelongToThem stamp: 'IO 11/1/2020 20:27:35'!
PASSED!

!testRun: #TerniLapilliGameTest #test46XCantMoveaTokenOutsideItsNeighbors stamp: 'IO 11/1/2020 20:27:35'!
PASSED!

!testRun: #TerniLapilliGameTest #test47OCantMoveATokenOutsideItsNeighbors stamp: 'IO 11/1/2020 20:27:35'!
PASSED!

!methodRemoval: TerniLapilliPlayerTokens #size stamp: 'IO 11/1/2020 20:27:45'!
size

	"return the amount of tokens placed"

	^tokens size.
!

!testRun: #TerniLapilliGameTest #test01XCanPutAToken stamp: 'IO 11/1/2020 20:27:48'!
PASSED!

!testRun: #TerniLapilliGameTest #test02puttingDoesNotAffectOtherPositions stamp: 'IO 11/1/2020 20:27:48'!
PASSED!

!testRun: #TerniLapilliGameTest #test03XCanPutInOtherPositions stamp: 'IO 11/1/2020 20:27:48'!
PASSED!

!testRun: #TerniLapilliGameTest #test04OCanPut stamp: 'IO 11/1/2020 20:27:48'!
PASSED!

!testRun: #TerniLapilliGameTest #test05XCanMove stamp: 'IO 11/1/2020 20:27:48'!
PASSED!

!testRun: #TerniLapilliGameTest #test06OCanMove stamp: 'IO 11/1/2020 20:27:48'!
PASSED!

!testRun: #TerniLapilliGameTest #test07XWinsWithTheFirstColumn stamp: 'IO 11/1/2020 20:27:48'!
PASSED!

!testRun: #TerniLapilliGameTest #test08XHasntWonYet stamp: 'IO 11/1/2020 20:27:48'!
PASSED!

!testRun: #TerniLapilliGameTest #test09XWinsWithTheSecondColumn stamp: 'IO 11/1/2020 20:27:48'!
PASSED!

!testRun: #TerniLapilliGameTest #test10XWinsWithTheThirdColumn stamp: 'IO 11/1/2020 20:27:48'!
PASSED!

!testRun: #TerniLapilliGameTest #test11XWinsWithTheFirstRow stamp: 'IO 11/1/2020 20:27:48'!
PASSED!

!testRun: #TerniLapilliGameTest #test12XWinsWithTheSecondRow stamp: 'IO 11/1/2020 20:27:48'!
PASSED!

!testRun: #TerniLapilliGameTest #test13XWinsWithTheThirdRow stamp: 'IO 11/1/2020 20:27:48'!
PASSED!

!testRun: #TerniLapilliGameTest #test14XWinsWithTheCrescentDiagonal stamp: 'IO 11/1/2020 20:27:48'!
PASSED!

!testRun: #TerniLapilliGameTest #test15XWinsWithTheDescendantDiagonal stamp: 'IO 11/1/2020 20:27:48'!
PASSED!

!testRun: #TerniLapilliGameTest #test16OWnis stamp: 'IO 11/1/2020 20:27:48'!
PASSED!

!testRun: #TerniLapilliGameTest #test17OCantStartPutting stamp: 'IO 11/1/2020 20:27:48'!
PASSED!

!testRun: #TerniLapilliGameTest #test18XCantPutTwiceInARow stamp: 'IO 11/1/2020 20:27:48'!
PASSED!

!testRun: #TerniLapilliGameTest #test19XCantMoveTwiceInARow stamp: 'IO 11/1/2020 20:27:48'!
PASSED!

!testRun: #TerniLapilliGameTest #test20OCantPutTwiceInARow stamp: 'IO 11/1/2020 20:27:48'!
PASSED!

!testRun: #TerniLapilliGameTest #test21OCantMoveTwiceInARow stamp: 'IO 11/1/2020 20:27:48'!
PASSED!

!testRun: #TerniLapilliGameTest #test22XCantMoveOnTheirFirstTurn stamp: 'IO 11/1/2020 20:27:48'!
PASSED!

!testRun: #TerniLapilliGameTest #test23XCantMoveOnTheirSecondTurn stamp: 'IO 11/1/2020 20:27:48'!
PASSED!

!testRun: #TerniLapilliGameTest #test24XCantMoveOnTheirThirdTurn stamp: 'IO 11/1/2020 20:27:48'!
PASSED!

!testRun: #TerniLapilliGameTest #test25OCantMoveOnTheirFirstTurn stamp: 'IO 11/1/2020 20:27:48'!
PASSED!

!testRun: #TerniLapilliGameTest #test26OCantMoveOnTheirSecondTurn stamp: 'IO 11/1/2020 20:27:48'!
PASSED!

!testRun: #TerniLapilliGameTest #test27OCantMoveOnTheirThirdTurn stamp: 'IO 11/1/2020 20:27:48'!
PASSED!

!testRun: #TerniLapilliGameTest #test28XCantPutAfterTheirThirdTurn stamp: 'IO 11/1/2020 20:27:48'!
PASSED!

!testRun: #TerniLapilliGameTest #test29OCantPutAfterTheirThirdTurn stamp: 'IO 11/1/2020 20:27:48'!
PASSED!

!testRun: #TerniLapilliGameTest #test30OCantPutAfterXWon stamp: 'IO 11/1/2020 20:27:48'!
PASSED!

!testRun: #TerniLapilliGameTest #test31OCantMoveAfterXWon stamp: 'IO 11/1/2020 20:27:48'!
PASSED!

!testRun: #TerniLapilliGameTest #test32XCantMoveAfterOWon stamp: 'IO 11/1/2020 20:27:48'!
PASSED!

!testRun: #TerniLapilliGameTest #test33XCantPutAfterOWon stamp: 'IO 11/1/2020 20:27:48'!
PASSED!

!testRun: #TerniLapilliGameTest #test34XCantPutInAnOccupiedSpace stamp: 'IO 11/1/2020 20:27:48'!
PASSED!

!testRun: #TerniLapilliGameTest #test35OCantPutInAnOccupiedSpace stamp: 'IO 11/1/2020 20:27:48'!
PASSED!

!testRun: #TerniLapilliGameTest #test36XCantMoveToAnOccupiedSpace stamp: 'IO 11/1/2020 20:27:48'!
PASSED!

!testRun: #TerniLapilliGameTest #test37OCantMoveToAnOccupiedSpace stamp: 'IO 11/1/2020 20:27:48'!
PASSED!

!testRun: #TerniLapilliGameTest #test38XCantPutOutsideTheBoardUnderXAxis stamp: 'IO 11/1/2020 20:27:48'!
PASSED!

!testRun: #TerniLapilliGameTest #test39XCantPutOutsideTheBoardAboveXAxis stamp: 'IO 11/1/2020 20:27:48'!
PASSED!

!testRun: #TerniLapilliGameTest #test40XCantPutOutsideTheBoardUnderNorAboveTheYAxis stamp: 'IO 11/1/2020 20:27:48'!
PASSED!

!testRun: #TerniLapilliGameTest #test41OCantPutOutsideTheBoard stamp: 'IO 11/1/2020 20:27:48'!
PASSED!

!testRun: #TerniLapilliGameTest #test42XCantMoveToOutsideTheBoard stamp: 'IO 11/1/2020 20:27:48'!
PASSED!

!testRun: #TerniLapilliGameTest #test43OCantMoveToOutsideTheBoard stamp: 'IO 11/1/2020 20:27:48'!
PASSED!

!testRun: #TerniLapilliGameTest #test44XCantMoveTokensThatDontBelongToThem stamp: 'IO 11/1/2020 20:27:48'!
PASSED!

!testRun: #TerniLapilliGameTest #test45OCantMoveTokensThatDontBelongToThem stamp: 'IO 11/1/2020 20:27:48'!
PASSED!

!testRun: #TerniLapilliGameTest #test46XCantMoveaTokenOutsideItsNeighbors stamp: 'IO 11/1/2020 20:27:48'!
PASSED!

!testRun: #TerniLapilliGameTest #test47OCantMoveATokenOutsideItsNeighbors stamp: 'IO 11/1/2020 20:27:48'!
PASSED!
!TerniLapilliGame class methodsFor: 'error messages' stamp: 'IO 11/1/2020 20:29:10'!
gameOverErrorMessage

	^'Game over!!'.
! !
!TerniLapilliGameTest methodsFor: 'as yet unclassified' stamp: 'IO 11/1/2020 20:29:10' prior: 50891448!
test33XCantPutAfterOWon
	"X no puede poner despues de que O gano"
	| aGame |
	aGame := TerniLapilliGame new.
	
	aGame putXAt: 0@0.
	aGame putOAt: 2@0.
	aGame putXAt: 1@1.
	aGame putOAt: 2@1.
	aGame putXAt: 0@2.
	aGame putOAt: 2@2.

	self should: [aGame putXAt: (0@1).] raise: Error withMessageText: TerniLapilliGame gameOverErrorMessage.
! !
!TerniLapilliGameTest methodsFor: 'as yet unclassified' stamp: 'IO 11/1/2020 20:29:10' prior: 50891475!
test32XCantMoveAfterOWon
	"X no puede mover despues de que O gano"
	| aGame |
	aGame := TerniLapilliGame new.
	
	aGame putXAt: 0@0.
	aGame putOAt: 2@0.
	aGame putXAt: 1@1.
	aGame putOAt: 2@1.
	aGame putXAt: 0@2.
	aGame putOAt: 2@2.

	self should: [aGame moveXFrom: (1@1) to: (0@1).] raise: Error withMessageText: TerniLapilliGame gameOverErrorMessage.
! !
!TerniLapilliGameTest methodsFor: 'as yet unclassified' stamp: 'IO 11/1/2020 20:29:10' prior: 50891188!
test31OCantMoveAfterXWon
	"O no puede mover despues de que X gano"
	| aGame |
	aGame := TerniLapilliGame new.
	
	aGame putXAt: 0@0.
	aGame putOAt: 1@0.
	aGame putXAt: 1@1.
	aGame putOAt: 2@1.
	aGame putXAt: 0@2.
	aGame putOAt: 2@2.
	
	aGame moveXFrom: (1@1) to: (0@1).
	
	self should: [aGame moveOFrom: (2@2) to: (1@2)] raise: Error withMessageText: TerniLapilliGame gameOverErrorMessage.
! !
!TerniLapilliGameTest methodsFor: 'as yet unclassified' stamp: 'IO 11/1/2020 20:29:10' prior: 50891374!
test30OCantPutAfterXWon
	"O no puede poner despues de que X gano"
	| aGame |
	aGame := TerniLapilliGame new.
	
	aGame putXAt: 0@1.
	aGame putOAt: 0@2.
	aGame putXAt: 1@1.
	aGame putOAt: 1@2.
	aGame putXAt: 2@1.
	
	self should: [aGame putOAt: (2@2).] raise: Error withMessageText: TerniLapilliGame gameOverErrorMessage.
! !
!TerniLapilliGameState methodsFor: 'as yet unclassified' stamp: 'IO 11/1/2020 20:29:10' prior: 50901179!
errorGameOver

	"signal when a player is trying to move or put after the game has ended"

	^self error: TerniLapilliGame gameOverErrorMessage.
! !

!methodRemoval: TerniLapilliGame class #gameEndedErrorMessage stamp: 'IO 11/1/2020 20:29:10'!
gameEndedErrorMessage

	^'Game over!!'.
!

!classDefinition: #TerniLapilliGameState category: 'Terni Lapilli' stamp: 'IO 11/1/2020 20:33:14'!
Object subclass: #TerniLapilliGameState
	instanceVariableNames: 'xPieces oTokens'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Terni Lapilli'!
!TerniLapilliGameState methodsFor: 'as yet unclassified' stamp: 'IO 11/1/2020 20:33:14' prior: 50882316!
intializeWithXTokens: nextXTokens oTokens: nextOTokens.

	"initialize the next state with the given tokens for X and O. this method is used by all the next state factories"

	xPieces := nextXTokens.
	oTokens := nextOTokens.
! !
!TerniLapilliGameState methodsFor: 'as yet unclassified' stamp: 'IO 11/1/2020 20:33:14' prior: 50901542!
hasXAt: aPosition

	"returns true if the current state has X's token placed at a given position"

	^xPieces has: aPosition.
! !
!TerniLapilliGameState methodsFor: 'as yet unclassified' stamp: 'IO 11/1/2020 20:33:14' prior: 50892808!
moveXFrom: aPositon to: aDestination

	"returns the next state when X moves a token"

	xPieces moveFrom: aPositon to: aDestination.
	^self passTurn.
! !
!TerniLapilliGameState methodsFor: 'as yet unclassified' stamp: 'IO 11/1/2020 20:33:14' prior: 50886491 overrides: 16896425!
initialize

	"intialize the first state"

	xPieces := TerniLapilliPlayerTokens new.
	oTokens := TerniLapilliPlayerTokens new.
! !
!TerniLapilliGameState methodsFor: 'as yet unclassified' stamp: 'IO 11/1/2020 20:33:14' prior: 50901005!
hasXPlayerWon

	"returns true if the current state is in a winning position for X. if true, the state is final"

	^xPieces areInWinningPosition.
! !
!TerniLapilliGameState methodsFor: 'as yet unclassified' stamp: 'IO 11/1/2020 20:33:14' prior: 50891565!
putXAt: aPosition

	"returns the next state when X puts a token"

	xPieces put: aPosition.
	^self passTurn.
! !
!OTurn methodsFor: 'as yet unclassified' stamp: 'IO 11/1/2020 20:33:14' prior: 50892680 overrides: 50882730!
passTurn

	"see superimplementor"

	^XTurn withXTokens: xPieces oTokens: oTokens.
! !
!XTurn methodsFor: 'as yet unclassified' stamp: 'IO 11/1/2020 20:33:14' prior: 50892632 overrides: 50882730!
passTurn

	"see superimplementor"

	^OTurn withXTokens: xPieces oTokens: oTokens.
! !

!classDefinition: #TerniLapilliGameState category: 'Terni Lapilli' stamp: 'IO 11/1/2020 20:33:20'!
Object subclass: #TerniLapilliGameState
	instanceVariableNames: 'xPieces oPieces'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Terni Lapilli'!
!TerniLapilliGameState methodsFor: 'as yet unclassified' stamp: 'IO 11/1/2020 20:33:20' prior: 50901381!
hasOAt: aPosition

	"returns true if the current state has O's token placed at a given position"

	^oPieces has: aPosition.

! !
!TerniLapilliGameState methodsFor: 'as yet unclassified' stamp: 'IO 11/1/2020 20:33:20' prior: 50902783!
intializeWithXTokens: nextXTokens oTokens: nextOTokens.

	"initialize the next state with the given tokens for X and O. this method is used by all the next state factories"

	xPieces := nextXTokens.
	oPieces := nextOTokens.
! !
!TerniLapilliGameState methodsFor: 'as yet unclassified' stamp: 'IO 11/1/2020 20:33:20' prior: 50892800!
moveOFrom: aPositon to: aDestination

	"returns the next state when O moves a token"

	oPieces moveFrom: aPositon to: aDestination.
	^self passTurn.
! !
!TerniLapilliGameState methodsFor: 'as yet unclassified' stamp: 'IO 11/1/2020 20:33:20' prior: 50902811 overrides: 16896425!
initialize

	"intialize the first state"

	xPieces := TerniLapilliPlayerTokens new.
	oPieces := TerniLapilliPlayerTokens new.
! !
!TerniLapilliGameState methodsFor: 'as yet unclassified' stamp: 'IO 11/1/2020 20:33:20' prior: 50891558!
putOAt: aPosition

	"returns the next state when O puts a token"

	oPieces put: aPosition.
	^self passTurn.

! !
!TerniLapilliGameState methodsFor: 'as yet unclassified' stamp: 'IO 11/1/2020 20:33:20' prior: 50900861!
hasOPlayerWon

	"returns true if the current state is in a winning position for O. if true, the state is final"

	^oPieces areInWinningPosition.
! !
!OTurn methodsFor: 'as yet unclassified' stamp: 'IO 11/1/2020 20:33:20' prior: 50902834 overrides: 50882730!
passTurn

	"see superimplementor"

	^XTurn withXTokens: xPieces oTokens: oPieces.
! !
!XTurn methodsFor: 'as yet unclassified' stamp: 'IO 11/1/2020 20:33:20' prior: 50902841 overrides: 50882730!
passTurn

	"see superimplementor"

	^OTurn withXTokens: xPieces oTokens: oPieces.
! !
!TerniLapilliGameState methodsFor: 'initializtion' stamp: 'IO 11/1/2020 20:35:07'!
intializeWithXPieces: nextXTokens oPieces: nextOTokens.

	"initialize the next state with the given tokens for X and O. this method is used by all the next state factories"

	xPieces := nextXTokens.
	oPieces := nextOTokens.
! !
!GameOver class methodsFor: 'as yet unclassified' stamp: 'IO 11/1/2020 20:35:07' prior: 50887164 overrides: 50887156!
withXTokens: nextXTokens oTokens: nextOTokens.

	"see superimplementor"

	^self basicNew intializeWithXPieces: nextXTokens oPieces: nextOTokens.
! !
!XMoves class methodsFor: 'as yet unclassified' stamp: 'IO 11/1/2020 20:35:07' prior: 50885421 overrides: 50902213!
withXTokens: nextXTokens oTokens: nextOTokens

	"create the next state of X's turn after they has put the 3 tokens"

	^self basicNew intializeWithXPieces: nextXTokens oPieces: nextOTokens.! !
!XPuts class methodsFor: 'as yet unclassified' stamp: 'IO 11/1/2020 20:35:07' prior: 50885431 overrides: 50902213!
withXTokens: nextXTokens oTokens: nextOTokens

	"create the next state of O's turn before they has put the 3 tokens"

	^self basicNew intializeWithXPieces: nextXTokens oPieces: nextOTokens.! !
!OPuts class methodsFor: 'as yet unclassified' stamp: 'IO 11/1/2020 20:35:07' prior: 50885374 overrides: 50902045!
withXTokens: nextXTokens oTokens: nextOTokens

	"create the next state of O's turn before they has put the 3 tokens"

	^self basicNew intializeWithXPieces: nextXTokens oPieces: nextOTokens.
! !
!OMoves class methodsFor: 'as yet unclassified' stamp: 'IO 11/1/2020 20:35:07' prior: 50885364 overrides: 50902045!
withXTokens: nextXTokens oTokens: nextOTokens

	"create the next state of O's turn after they has put the 3 tokens"

	^self basicNew intializeWithXPieces: nextXTokens oPieces: nextOTokens.
! !

!methodRemoval: TerniLapilliGameState #intializeWithXTokens:oTokens: stamp: 'IO 11/1/2020 20:35:07'!
intializeWithXTokens: nextXTokens oTokens: nextOTokens.

	"initialize the next state with the given tokens for X and O. this method is used by all the next state factories"

	xPieces := nextXTokens.
	oPieces := nextOTokens.
!

!testRun: #TerniLapilliGameTest #test01XCanPutAToken stamp: 'IO 11/1/2020 20:35:11'!
PASSED!

!testRun: #TerniLapilliGameTest #test02puttingDoesNotAffectOtherPositions stamp: 'IO 11/1/2020 20:35:11'!
PASSED!

!testRun: #TerniLapilliGameTest #test03XCanPutInOtherPositions stamp: 'IO 11/1/2020 20:35:11'!
PASSED!

!testRun: #TerniLapilliGameTest #test04OCanPut stamp: 'IO 11/1/2020 20:35:11'!
PASSED!

!testRun: #TerniLapilliGameTest #test05XCanMove stamp: 'IO 11/1/2020 20:35:11'!
PASSED!

!testRun: #TerniLapilliGameTest #test06OCanMove stamp: 'IO 11/1/2020 20:35:11'!
PASSED!

!testRun: #TerniLapilliGameTest #test07XWinsWithTheFirstColumn stamp: 'IO 11/1/2020 20:35:11'!
PASSED!

!testRun: #TerniLapilliGameTest #test08XHasntWonYet stamp: 'IO 11/1/2020 20:35:11'!
PASSED!

!testRun: #TerniLapilliGameTest #test09XWinsWithTheSecondColumn stamp: 'IO 11/1/2020 20:35:11'!
PASSED!

!testRun: #TerniLapilliGameTest #test10XWinsWithTheThirdColumn stamp: 'IO 11/1/2020 20:35:11'!
PASSED!

!testRun: #TerniLapilliGameTest #test11XWinsWithTheFirstRow stamp: 'IO 11/1/2020 20:35:11'!
PASSED!

!testRun: #TerniLapilliGameTest #test12XWinsWithTheSecondRow stamp: 'IO 11/1/2020 20:35:11'!
PASSED!

!testRun: #TerniLapilliGameTest #test13XWinsWithTheThirdRow stamp: 'IO 11/1/2020 20:35:11'!
PASSED!

!testRun: #TerniLapilliGameTest #test14XWinsWithTheCrescentDiagonal stamp: 'IO 11/1/2020 20:35:11'!
PASSED!

!testRun: #TerniLapilliGameTest #test15XWinsWithTheDescendantDiagonal stamp: 'IO 11/1/2020 20:35:11'!
PASSED!

!testRun: #TerniLapilliGameTest #test16OWnis stamp: 'IO 11/1/2020 20:35:11'!
PASSED!

!testRun: #TerniLapilliGameTest #test17OCantStartPutting stamp: 'IO 11/1/2020 20:35:11'!
PASSED!

!testRun: #TerniLapilliGameTest #test18XCantPutTwiceInARow stamp: 'IO 11/1/2020 20:35:11'!
PASSED!

!testRun: #TerniLapilliGameTest #test19XCantMoveTwiceInARow stamp: 'IO 11/1/2020 20:35:11'!
PASSED!

!testRun: #TerniLapilliGameTest #test20OCantPutTwiceInARow stamp: 'IO 11/1/2020 20:35:11'!
PASSED!

!testRun: #TerniLapilliGameTest #test21OCantMoveTwiceInARow stamp: 'IO 11/1/2020 20:35:11'!
PASSED!

!testRun: #TerniLapilliGameTest #test22XCantMoveOnTheirFirstTurn stamp: 'IO 11/1/2020 20:35:11'!
PASSED!

!testRun: #TerniLapilliGameTest #test23XCantMoveOnTheirSecondTurn stamp: 'IO 11/1/2020 20:35:11'!
PASSED!

!testRun: #TerniLapilliGameTest #test24XCantMoveOnTheirThirdTurn stamp: 'IO 11/1/2020 20:35:11'!
PASSED!

!testRun: #TerniLapilliGameTest #test25OCantMoveOnTheirFirstTurn stamp: 'IO 11/1/2020 20:35:11'!
PASSED!

!testRun: #TerniLapilliGameTest #test26OCantMoveOnTheirSecondTurn stamp: 'IO 11/1/2020 20:35:11'!
PASSED!

!testRun: #TerniLapilliGameTest #test27OCantMoveOnTheirThirdTurn stamp: 'IO 11/1/2020 20:35:11'!
PASSED!

!testRun: #TerniLapilliGameTest #test28XCantPutAfterTheirThirdTurn stamp: 'IO 11/1/2020 20:35:11'!
PASSED!

!testRun: #TerniLapilliGameTest #test29OCantPutAfterTheirThirdTurn stamp: 'IO 11/1/2020 20:35:11'!
PASSED!

!testRun: #TerniLapilliGameTest #test30OCantPutAfterXWon stamp: 'IO 11/1/2020 20:35:11'!
PASSED!

!testRun: #TerniLapilliGameTest #test31OCantMoveAfterXWon stamp: 'IO 11/1/2020 20:35:11'!
PASSED!

!testRun: #TerniLapilliGameTest #test32XCantMoveAfterOWon stamp: 'IO 11/1/2020 20:35:11'!
PASSED!

!testRun: #TerniLapilliGameTest #test33XCantPutAfterOWon stamp: 'IO 11/1/2020 20:35:11'!
PASSED!

!testRun: #TerniLapilliGameTest #test34XCantPutInAnOccupiedSpace stamp: 'IO 11/1/2020 20:35:11'!
PASSED!

!testRun: #TerniLapilliGameTest #test35OCantPutInAnOccupiedSpace stamp: 'IO 11/1/2020 20:35:11'!
PASSED!

!testRun: #TerniLapilliGameTest #test36XCantMoveToAnOccupiedSpace stamp: 'IO 11/1/2020 20:35:11'!
PASSED!

!testRun: #TerniLapilliGameTest #test37OCantMoveToAnOccupiedSpace stamp: 'IO 11/1/2020 20:35:11'!
PASSED!

!testRun: #TerniLapilliGameTest #test38XCantPutOutsideTheBoardUnderXAxis stamp: 'IO 11/1/2020 20:35:11'!
PASSED!

!testRun: #TerniLapilliGameTest #test39XCantPutOutsideTheBoardAboveXAxis stamp: 'IO 11/1/2020 20:35:11'!
PASSED!

!testRun: #TerniLapilliGameTest #test40XCantPutOutsideTheBoardUnderNorAboveTheYAxis stamp: 'IO 11/1/2020 20:35:11'!
PASSED!

!testRun: #TerniLapilliGameTest #test41OCantPutOutsideTheBoard stamp: 'IO 11/1/2020 20:35:11'!
PASSED!

!testRun: #TerniLapilliGameTest #test42XCantMoveToOutsideTheBoard stamp: 'IO 11/1/2020 20:35:11'!
PASSED!

!testRun: #TerniLapilliGameTest #test43OCantMoveToOutsideTheBoard stamp: 'IO 11/1/2020 20:35:11'!
PASSED!

!testRun: #TerniLapilliGameTest #test44XCantMoveTokensThatDontBelongToThem stamp: 'IO 11/1/2020 20:35:11'!
PASSED!

!testRun: #TerniLapilliGameTest #test45OCantMoveTokensThatDontBelongToThem stamp: 'IO 11/1/2020 20:35:11'!
PASSED!

!testRun: #TerniLapilliGameTest #test46XCantMoveaTokenOutsideItsNeighbors stamp: 'IO 11/1/2020 20:35:11'!
PASSED!

!testRun: #TerniLapilliGameTest #test47OCantMoveATokenOutsideItsNeighbors stamp: 'IO 11/1/2020 20:35:11'!
PASSED!
!TerniLapilliGame methodsFor: 'testing' stamp: 'IO 11/1/2020 20:35:27' prior: 50887730!
hasOAt: aPosition

	"returns true if a board position has a piece placed by O player or not"

	^state hasOAt: aPosition.
! !
!TerniLapilliGame methodsFor: 'testing' stamp: 'IO 11/1/2020 20:35:33' prior: 50888393!
hasXAt: aPosition

	"returns true if a board position has a piece placed by O player or not"

	^state hasXAt: aPosition.
! !
!TerniLapilliGame methodsFor: 'testing' stamp: 'IO 11/1/2020 20:35:50' prior: 50895209!
includes: aPosition

	"returns true if a board position has a piece placed or not"

	^(state hasOAt: aPosition) or: (state hasXAt: aPosition).
! !
!TerniLapilliGame methodsFor: 'moves' stamp: 'IO 11/1/2020 20:35:56' prior: 50900418!
moveOFrom: aPosition to: aDestination

	"move O's piece from a given position of the board to another given position"

	self validateTargetPosition: aDestination.
	state := state moveOFrom: aPosition to: aDestination.
! !
!TerniLapilliGame methodsFor: 'moves' stamp: 'IO 11/1/2020 20:35:58' prior: 50900408!
moveXFrom: aPosition to: aDestination

	"move O's piece from a given position of the board to another given position"

	self validateTargetPosition: aDestination.
	state := state moveXFrom: aPosition to: aDestination.
	
	
! !
!TerniLapilliGame methodsFor: 'moves' stamp: 'IO 11/1/2020 20:36:01' prior: 50900400!
putOAt: aPosition

	"put an O piece in a given position of the board"

	self validateTargetPosition: aPosition.
	state := state putOAt: aPosition.
! !
!TerniLapilliGame methodsFor: 'moves' stamp: 'IO 11/1/2020 20:36:04' prior: 50900239!
putXAt: aPosition

	"put an O piece in a given position of the board"

	self validateTargetPosition: aPosition.
	state := state putXAt: aPosition.
! !
!TerniLapilliGameState methodsFor: 'moves' stamp: 'IO 11/1/2020 20:36:11' prior: 50902874!
moveOFrom: aPositon to: aDestination

	"returns the next state when O moves a piece"

	oPieces moveFrom: aPositon to: aDestination.
	^self passTurn.
! !
!TerniLapilliGameState methodsFor: 'moves' stamp: 'IO 11/1/2020 20:36:14' prior: 50902802!
moveXFrom: aPositon to: aDestination

	"returns the next state when X moves a piece"

	xPieces moveFrom: aPositon to: aDestination.
	^self passTurn.
! !
!TerniLapilliGameState methodsFor: 'moves' stamp: 'IO 11/1/2020 20:36:22' prior: 50902891!
putOAt: aPosition

	"returns the next state when O puts a piece"

	oPieces put: aPosition.
	^self passTurn.

! !
!TerniLapilliGameState methodsFor: 'moves' stamp: 'IO 11/1/2020 20:36:26' prior: 50902827!
putXAt: aPosition

	"returns the next state when X puts a piece"

	xPieces put: aPosition.
	^self passTurn.
! !
!TerniLapilliGameState methodsFor: 'testing' stamp: 'IO 11/1/2020 20:36:32' prior: 50902855!
hasOAt: aPosition

	"returns true if the current state has O's piece placed at a given position"

	^oPieces has: aPosition.

! !
!TerniLapilliGameState methodsFor: 'testing' stamp: 'IO 11/1/2020 20:36:41' prior: 50902794!
hasXAt: aPosition

	"returns true if the current state has X's piece placed at a given position"

	^xPieces has: aPosition.
! !
!TerniLapilliGameState methodsFor: 'initializtion' stamp: 'IO 11/1/2020 20:36:57' prior: 50902920!
intializeWithXPieces: nextXTokens oPieces: nextOTokens.

	"initialize the next state with the given pieces for X and O. this method is used by all the next state factories"

	xPieces := nextXTokens.
	oPieces := nextOTokens.
! !
!TerniLapilliPlayerTokens methodsFor: 'moves' stamp: 'IO 11/1/2020 20:37:43' prior: 50900494!
moveFrom: aPosition to: aDestination

	"move a piece form a given position of the board to another position"

	self validateMoveFrom: aPosition to: aDestination.

	tokens remove: aPosition.
	tokens add: aDestination.
! !
!TerniLapilliPlayerTokens methodsFor: 'moves' stamp: 'IO 11/1/2020 20:37:45' prior: 50900674!
put: aPosition

	"add a piece in a given position of the board"

	self validatePosition: aPosition.

	tokens add: aPosition.
! !
!TerniLapilliPlayerTokens methodsFor: 'testing' stamp: 'IO 11/1/2020 20:37:50' prior: 50882911!
areInWinningPosition

	"return true if the pieces are in a winning position"

	^(
		(
			(self areInWinningPositionByColumn: 0) or:
			(self areInWinningPositionByColumn: 1) or:
			(self areInWinningPositionByColumn: 2)
		) or: (
			(self areInWinningPositionByRow: 0) or:
			(self areInWinningPositionByRow: 1) or:
			(self areInWinningPositionByRow: 2)
		) or: (
			self areInWinningPositionByDiagonal
		)
	).
! !
!TerniLapilliPlayerTokens methodsFor: 'testing' stamp: 'IO 11/1/2020 20:37:53' prior: 50895776!
areInWinningPositionByColumn: columnNumber

	"return true if the pieces are in a winning position over a given column"

	^(tokens includes: (0@columnNumber)) and: (tokens includes: (1@columnNumber)) and: (tokens includes: (2@columnNumber))! !
!TerniLapilliPlayerTokens methodsFor: 'testing' stamp: 'IO 11/1/2020 20:37:55' prior: 50895747!
areInWinningPositionByDiagonal

	"return true if the pieces are in a winning position over a diagonal"

	^(tokens includes: (1@1)) and: (
		((tokens includes: (0@0)) and: (tokens includes: (2@2))) or: (
		(tokens includes: (2@0)) and: (tokens includes: (0@2))
	)).
! !
!TerniLapilliPlayerTokens methodsFor: 'testing' stamp: 'IO 11/1/2020 20:37:58' prior: 50895787!
areInWinningPositionByRow: rowNumber

	"return true if the pieces are in a winning position over a given row"

	^(tokens includes: (rowNumber@0)) and: (tokens includes: (rowNumber@1)) and: (tokens includes: (rowNumber@2)).
! !
!TerniLapilliPlayerTokens methodsFor: 'testing' stamp: 'IO 11/1/2020 20:38:02' prior: 50901873!
has: aPosition

	"returns true if a piece is placed in a given position"

	^tokens includes: aPosition.
! !
!TerniLapilliPlayerTokens methodsFor: 'testing' stamp: 'IO 11/1/2020 20:38:05' prior: 50902381!
tokensAlreadyPut

	"return the amount of pieces placed"

	^tokens size.
! !
!TerniLapilliPlayerTokens methodsFor: 'initializtion' stamp: 'IO 11/1/2020 20:38:12' prior: 50882941 overrides: 16896425!
initialize

	"initialize the pieces for a player of the gam"

	tokens := Set new.
! !
!TerniLapilliPlayerTokens methodsFor: 'validations' stamp: 'IO 11/1/2020 20:38:17' prior: 50901703!
validateMoveFrom: sourcePosition to: destinationPosition

	"signal when a piece cannot be moved from a given position to another"

	(self has: sourcePosition) ifFalse: [
		^self error: TerniLapilliGame noTokenAtPositionErrorMessage].
	(sourcePosition eightNeighbors includes: destinationPosition) ifFalse: [
		^self error: TerniLapilliGame invalidDestinationErrorMessage].

	self validatePosition: destinationPosition.
! !
!TerniLapilliGameTest methodsFor: 'put tokens phase' stamp: 'IO 11/1/2020 20:38:32'!
test01XCanPutAPiece
	"x pone en 0@0"
	| aGame |
	aGame := TerniLapilliGame new.
	
	aGame putXAt: 0@0.

	self assert: (aGame hasXAt: (0@0)).
! !

!methodRemoval: TerniLapilliGameTest #test01XCanPutAToken stamp: 'IO 11/1/2020 20:38:32'!
test01XCanPutAToken
	"x pone en 0@0"
	| aGame |
	aGame := TerniLapilliGame new.
	
	aGame putXAt: 0@0.

	self assert: (aGame hasXAt: (0@0)).
!
!TerniLapilliGameTest methodsFor: 'ilegal positions' stamp: 'IO 11/1/2020 20:39:10'!
test44XCantMovePiecesThatDontBelongToThem
	"X no puede mover fichas que no sea suyas"
	

	| aGame |

	aGame := self createGameInMovePhase .
	
	self should: [	aGame moveXFrom: 0@2 to: 1@1.] raise: Error withMessageText: TerniLapilliGame noTokenAtPositionErrorMessage.
	self should: [	aGame moveXFrom: 3@2 to: 1@1.] raise: Error withMessageText: TerniLapilliGame noTokenAtPositionErrorMessage.! !

!methodRemoval: TerniLapilliGameTest #test44XCantMoveTokensThatDontBelongToThem stamp: 'IO 11/1/2020 20:39:10'!
test44XCantMoveTokensThatDontBelongToThem
	"X no puede mover fichas que no sea suyas"
	

	| aGame |

	aGame := self createGameInMovePhase .
	
	self should: [	aGame moveXFrom: 0@2 to: 1@1.] raise: Error withMessageText: TerniLapilliGame noTokenAtPositionErrorMessage.
	self should: [	aGame moveXFrom: 3@2 to: 1@1.] raise: Error withMessageText: TerniLapilliGame noTokenAtPositionErrorMessage.!
!TerniLapilliGameTest methodsFor: 'ilegal positions' stamp: 'IO 11/1/2020 20:39:15'!
test45OCantMovePiecesThatDontBelongToThem
	"O no puede mover fichas que no sea suyas"
	

	| aGame |

	aGame := self createGameInMovePhase .
	aGame moveXFrom: 0@1 to: 1@1.
	
	self should: [	aGame moveOFrom: 1@1 to: 0@1.] raise: Error withMessageText: TerniLapilliGame noTokenAtPositionErrorMessage.
	self should: [	aGame moveOFrom: 3@1 to: 0@1.] raise: Error withMessageText: TerniLapilliGame noTokenAtPositionErrorMessage.! !

!methodRemoval: TerniLapilliGameTest #test45OCantMoveTokensThatDontBelongToThem stamp: 'IO 11/1/2020 20:39:15'!
test45OCantMoveTokensThatDontBelongToThem
	"O no puede mover fichas que no sea suyas"
	

	| aGame |

	aGame := self createGameInMovePhase .
	aGame moveXFrom: 0@1 to: 1@1.
	
	self should: [	aGame moveOFrom: 1@1 to: 0@1.] raise: Error withMessageText: TerniLapilliGame noTokenAtPositionErrorMessage.
	self should: [	aGame moveOFrom: 3@1 to: 0@1.] raise: Error withMessageText: TerniLapilliGame noTokenAtPositionErrorMessage.!
!TerniLapilliGameTest methodsFor: 'ilegal positions' stamp: 'IO 11/1/2020 20:41:14'!
test46XCantMoveaPiecesOutsideItsNeighbors
	"X no puede mover fichas hacia m�s de 1 vecinidad"
	

	| aGame |

	aGame := self createGameInMovePhase .
	
	self should: [	aGame moveXFrom: 2@0 to: 0@0.] raise: Error withMessageText: TerniLapilliGame invalidDestinationErrorMessage.! !

!methodRemoval: TerniLapilliGameTest #test46XCantMoveaTokenOutsideItsNeighbors stamp: 'IO 11/1/2020 20:41:14'!
test46XCantMoveaTokenOutsideItsNeighbors
	"X no puede mover fichas hacia m�s de 1 vecinidad"
	

	| aGame |

	aGame := self createGameInMovePhase .
	
	self should: [	aGame moveXFrom: 2@0 to: 0@0.] raise: Error withMessageText: TerniLapilliGame invalidDestinationErrorMessage.!
!TerniLapilliGameTest methodsFor: 'ilegal positions' stamp: 'IO 11/1/2020 20:41:20'!
test47OCantMoveAPiecesOutsideItsNeighbors
	"O no puede mover fichas hacia m�s de 1 vecinidad"
	

	| aGame |

	aGame := self createGameInMovePhase .
	aGame moveXFrom: 0@1 to: 0@0.
	
	self should: [	aGame moveOFrom: 2@1 to: 0@1.] raise: Error withMessageText: TerniLapilliGame invalidDestinationErrorMessage.! !

!methodRemoval: TerniLapilliGameTest #test47OCantMoveATokenOutsideItsNeighbors stamp: 'IO 11/1/2020 20:41:20'!
test47OCantMoveATokenOutsideItsNeighbors
	"O no puede mover fichas hacia m�s de 1 vecinidad"
	

	| aGame |

	aGame := self createGameInMovePhase .
	aGame moveXFrom: 0@1 to: 0@0.
	
	self should: [	aGame moveOFrom: 2@1 to: 0@1.] raise: Error withMessageText: TerniLapilliGame invalidDestinationErrorMessage.!
!OPuts class methodsFor: 'instance creation' stamp: 'IO 11/1/2020 20:43:12'!
nextStateWithXPieces: nextXTokens andOPieces: nextOTokens

	"create the next state of O's turn before they has put the 3 tokens"

	^self basicNew intializeWithXPieces: nextXTokens oPieces: nextOTokens.
! !
!GameOver class methodsFor: 'instance creation' stamp: 'IO 11/1/2020 20:43:12'!
nextStateWithXPieces: nextXTokens andOPieces: nextOTokens.

	"see superimplementor"

	^self basicNew intializeWithXPieces: nextXTokens oPieces: nextOTokens.
! !
!OTurn class methodsFor: 'instance creation' stamp: 'IO 11/1/2020 20:43:12'!
nextStateWithXPieces: nextXTokens andOPieces: nextOTokens

	"create the next state of O's turn"

	(nextXTokens areInWinningPosition) ifTrue: [^GameOver withXTokens: nextXTokens oTokens: nextOTokens].
	(nextOTokens tokensAlreadyPut < 3) ifTrue: [^OPuts withXTokens: nextXTokens oTokens: nextOTokens].
	^OMoves withXTokens: nextXTokens oTokens: nextOTokens
! !
!OMoves class methodsFor: 'instance creation' stamp: 'IO 11/1/2020 20:43:12' overrides: 50903507!
nextStateWithXPieces: nextXTokens andOPieces: nextOTokens

	"create the next state of O's turn after they has put the 3 tokens"

	^self basicNew intializeWithXPieces: nextXTokens oPieces: nextOTokens.
! !
!XPuts class methodsFor: 'instance creation' stamp: 'IO 11/1/2020 20:43:12'!
nextStateWithXPieces: nextXTokens andOPieces: nextOTokens

	"create the next state of O's turn before they has put the 3 tokens"

	^self basicNew intializeWithXPieces: nextXTokens oPieces: nextOTokens.! !
!XTurn class methodsFor: 'instance creation' stamp: 'IO 11/1/2020 20:43:12'!
nextStateWithXPieces: nextXTokens andOPieces: nextOTokens

	"create the next state of X's turn"

	(nextOTokens areInWinningPosition) ifTrue: [^GameOver withXTokens: nextXTokens oTokens: nextOTokens].
	(nextXTokens tokensAlreadyPut < 3) ifTrue: [^XPuts withXTokens: nextXTokens oTokens: nextOTokens].
	^XMoves withXTokens: nextXTokens oTokens: nextOTokens.

	
! !
!TerniLapilliGameState class methodsFor: 'instance creation' stamp: 'IO 11/1/2020 20:43:12'!
nextStateWithXPieces: nextXTokens andOPieces: nextOTokens.

	"create the next state"

	^self subclassResponsibility.
! !
!XMoves class methodsFor: 'instance creation' stamp: 'IO 11/1/2020 20:43:12' overrides: 50903540!
nextStateWithXPieces: nextXTokens andOPieces: nextOTokens

	"create the next state of X's turn after they has put the 3 tokens"

	^self basicNew intializeWithXPieces: nextXTokens oPieces: nextOTokens.! !
!OTurn methodsFor: 'as yet unclassified' stamp: 'IO 11/1/2020 20:43:12' prior: 50902907 overrides: 50882730!
passTurn

	"see superimplementor"

	^XTurn nextStateWithXPieces: xPieces andOPieces: oPieces.
! !
!XTurn class methodsFor: 'as yet unclassified' stamp: 'IO 11/1/2020 20:43:12' prior: 50902213 overrides: 50887156!
withXTokens: nextXTokens oTokens: nextOTokens

	"create the next state of X's turn"

	(nextOTokens areInWinningPosition) ifTrue: [^GameOver nextStateWithXPieces: nextXTokens andOPieces: nextOTokens].
	(nextXTokens tokensAlreadyPut < 3) ifTrue: [^XPuts nextStateWithXPieces: nextXTokens andOPieces: nextOTokens].
	^XMoves nextStateWithXPieces: nextXTokens andOPieces: nextOTokens.

	
! !
!OTurn class methodsFor: 'as yet unclassified' stamp: 'IO 11/1/2020 20:43:12' prior: 50902045 overrides: 50887156!
withXTokens: nextXTokens oTokens: nextOTokens

	"create the next state of O's turn"

	(nextXTokens areInWinningPosition) ifTrue: [^GameOver nextStateWithXPieces: nextXTokens andOPieces: nextOTokens].
	(nextOTokens tokensAlreadyPut < 3) ifTrue: [^OPuts nextStateWithXPieces: nextXTokens andOPieces: nextOTokens].
	^OMoves nextStateWithXPieces: nextXTokens andOPieces: nextOTokens
! !
!XTurn methodsFor: 'as yet unclassified' stamp: 'IO 11/1/2020 20:43:12' prior: 50902914 overrides: 50882730!
passTurn

	"see superimplementor"

	^OTurn nextStateWithXPieces: xPieces andOPieces: oPieces.
! !
!OTurn class methodsFor: 'as yet unclassified' stamp: 'IO 11/1/2020 20:43:12' prior: 50903507 overrides: 50903555!
nextStateWithXPieces: nextXTokens andOPieces: nextOTokens

	"create the next state of O's turn"

	(nextXTokens areInWinningPosition) ifTrue: [^GameOver nextStateWithXPieces: nextXTokens andOPieces: nextOTokens].
	(nextOTokens tokensAlreadyPut < 3) ifTrue: [^OPuts nextStateWithXPieces: nextXTokens andOPieces: nextOTokens].
	^OMoves nextStateWithXPieces: nextXTokens andOPieces: nextOTokens
! !
!XTurn class methodsFor: 'as yet unclassified' stamp: 'IO 11/1/2020 20:43:12' prior: 50903540 overrides: 50903555!
nextStateWithXPieces: nextXTokens andOPieces: nextOTokens

	"create the next state of X's turn"

	(nextOTokens areInWinningPosition) ifTrue: [^GameOver nextStateWithXPieces: nextXTokens andOPieces: nextOTokens].
	(nextXTokens tokensAlreadyPut < 3) ifTrue: [^XPuts nextStateWithXPieces: nextXTokens andOPieces: nextOTokens].
	^XMoves nextStateWithXPieces: nextXTokens andOPieces: nextOTokens.

	
! !

!methodRemoval: OPuts class #withXTokens:oTokens: stamp: 'IO 11/1/2020 20:43:12'!
withXTokens: nextXTokens oTokens: nextOTokens

	"create the next state of O's turn before they has put the 3 tokens"

	^self basicNew intializeWithXPieces: nextXTokens oPieces: nextOTokens.
!

!methodRemoval: GameOver class #withXTokens:oTokens: stamp: 'IO 11/1/2020 20:43:12'!
withXTokens: nextXTokens oTokens: nextOTokens.

	"see superimplementor"

	^self basicNew intializeWithXPieces: nextXTokens oPieces: nextOTokens.
!

!methodRemoval: OTurn class #withXTokens:oTokens: stamp: 'IO 11/1/2020 20:43:12'!
withXTokens: nextXTokens oTokens: nextOTokens

	"create the next state of O's turn"

	(nextXTokens areInWinningPosition) ifTrue: [^GameOver nextStateWithXPieces: nextXTokens andOPieces: nextOTokens].
	(nextOTokens tokensAlreadyPut < 3) ifTrue: [^OPuts nextStateWithXPieces: nextXTokens andOPieces: nextOTokens].
	^OMoves nextStateWithXPieces: nextXTokens andOPieces: nextOTokens
!

!methodRemoval: OMoves class #withXTokens:oTokens: stamp: 'IO 11/1/2020 20:43:12'!
withXTokens: nextXTokens oTokens: nextOTokens

	"create the next state of O's turn after they has put the 3 tokens"

	^self basicNew intializeWithXPieces: nextXTokens oPieces: nextOTokens.
!

!methodRemoval: XPuts class #withXTokens:oTokens: stamp: 'IO 11/1/2020 20:43:12'!
withXTokens: nextXTokens oTokens: nextOTokens

	"create the next state of O's turn before they has put the 3 tokens"

	^self basicNew intializeWithXPieces: nextXTokens oPieces: nextOTokens.!

!methodRemoval: XTurn class #withXTokens:oTokens: stamp: 'IO 11/1/2020 20:43:12'!
withXTokens: nextXTokens oTokens: nextOTokens

	"create the next state of X's turn"

	(nextOTokens areInWinningPosition) ifTrue: [^GameOver nextStateWithXPieces: nextXTokens andOPieces: nextOTokens].
	(nextXTokens tokensAlreadyPut < 3) ifTrue: [^XPuts nextStateWithXPieces: nextXTokens andOPieces: nextOTokens].
	^XMoves nextStateWithXPieces: nextXTokens andOPieces: nextOTokens.

	
!

!methodRemoval: TerniLapilliGameState class #withXTokens:oTokens: stamp: 'IO 11/1/2020 20:43:12'!
withXTokens: nextXTokens oTokens: nextOTokens.

	"create the next state"

	^self subclassResponsibility.
!

!methodRemoval: XMoves class #withXTokens:oTokens: stamp: 'IO 11/1/2020 20:43:12'!
withXTokens: nextXTokens oTokens: nextOTokens

	"create the next state of X's turn after they has put the 3 tokens"

	^self basicNew intializeWithXPieces: nextXTokens oPieces: nextOTokens.!

!testRun: #TerniLapilliGameTest #test01XCanPutAPiece stamp: 'IO 11/1/2020 20:43:16'!
PASSED!

!testRun: #TerniLapilliGameTest #test02puttingDoesNotAffectOtherPositions stamp: 'IO 11/1/2020 20:43:16'!
PASSED!

!testRun: #TerniLapilliGameTest #test03XCanPutInOtherPositions stamp: 'IO 11/1/2020 20:43:16'!
PASSED!

!testRun: #TerniLapilliGameTest #test04OCanPut stamp: 'IO 11/1/2020 20:43:16'!
PASSED!

!testRun: #TerniLapilliGameTest #test05XCanMove stamp: 'IO 11/1/2020 20:43:16'!
PASSED!

!testRun: #TerniLapilliGameTest #test06OCanMove stamp: 'IO 11/1/2020 20:43:16'!
PASSED!

!testRun: #TerniLapilliGameTest #test07XWinsWithTheFirstColumn stamp: 'IO 11/1/2020 20:43:16'!
PASSED!

!testRun: #TerniLapilliGameTest #test08XHasntWonYet stamp: 'IO 11/1/2020 20:43:16'!
PASSED!

!testRun: #TerniLapilliGameTest #test09XWinsWithTheSecondColumn stamp: 'IO 11/1/2020 20:43:16'!
PASSED!

!testRun: #TerniLapilliGameTest #test10XWinsWithTheThirdColumn stamp: 'IO 11/1/2020 20:43:16'!
PASSED!

!testRun: #TerniLapilliGameTest #test11XWinsWithTheFirstRow stamp: 'IO 11/1/2020 20:43:16'!
PASSED!

!testRun: #TerniLapilliGameTest #test12XWinsWithTheSecondRow stamp: 'IO 11/1/2020 20:43:16'!
PASSED!

!testRun: #TerniLapilliGameTest #test13XWinsWithTheThirdRow stamp: 'IO 11/1/2020 20:43:16'!
PASSED!

!testRun: #TerniLapilliGameTest #test14XWinsWithTheCrescentDiagonal stamp: 'IO 11/1/2020 20:43:16'!
PASSED!

!testRun: #TerniLapilliGameTest #test15XWinsWithTheDescendantDiagonal stamp: 'IO 11/1/2020 20:43:16'!
PASSED!

!testRun: #TerniLapilliGameTest #test16OWnis stamp: 'IO 11/1/2020 20:43:16'!
PASSED!

!testRun: #TerniLapilliGameTest #test17OCantStartPutting stamp: 'IO 11/1/2020 20:43:16'!
PASSED!

!testRun: #TerniLapilliGameTest #test18XCantPutTwiceInARow stamp: 'IO 11/1/2020 20:43:16'!
PASSED!

!testRun: #TerniLapilliGameTest #test19XCantMoveTwiceInARow stamp: 'IO 11/1/2020 20:43:16'!
PASSED!

!testRun: #TerniLapilliGameTest #test20OCantPutTwiceInARow stamp: 'IO 11/1/2020 20:43:16'!
PASSED!

!testRun: #TerniLapilliGameTest #test21OCantMoveTwiceInARow stamp: 'IO 11/1/2020 20:43:16'!
PASSED!

!testRun: #TerniLapilliGameTest #test22XCantMoveOnTheirFirstTurn stamp: 'IO 11/1/2020 20:43:16'!
PASSED!

!testRun: #TerniLapilliGameTest #test23XCantMoveOnTheirSecondTurn stamp: 'IO 11/1/2020 20:43:16'!
PASSED!

!testRun: #TerniLapilliGameTest #test24XCantMoveOnTheirThirdTurn stamp: 'IO 11/1/2020 20:43:16'!
PASSED!

!testRun: #TerniLapilliGameTest #test25OCantMoveOnTheirFirstTurn stamp: 'IO 11/1/2020 20:43:16'!
PASSED!

!testRun: #TerniLapilliGameTest #test26OCantMoveOnTheirSecondTurn stamp: 'IO 11/1/2020 20:43:16'!
PASSED!

!testRun: #TerniLapilliGameTest #test27OCantMoveOnTheirThirdTurn stamp: 'IO 11/1/2020 20:43:16'!
PASSED!

!testRun: #TerniLapilliGameTest #test28XCantPutAfterTheirThirdTurn stamp: 'IO 11/1/2020 20:43:16'!
PASSED!

!testRun: #TerniLapilliGameTest #test29OCantPutAfterTheirThirdTurn stamp: 'IO 11/1/2020 20:43:16'!
PASSED!

!testRun: #TerniLapilliGameTest #test30OCantPutAfterXWon stamp: 'IO 11/1/2020 20:43:16'!
PASSED!

!testRun: #TerniLapilliGameTest #test31OCantMoveAfterXWon stamp: 'IO 11/1/2020 20:43:16'!
PASSED!

!testRun: #TerniLapilliGameTest #test32XCantMoveAfterOWon stamp: 'IO 11/1/2020 20:43:16'!
PASSED!

!testRun: #TerniLapilliGameTest #test33XCantPutAfterOWon stamp: 'IO 11/1/2020 20:43:16'!
PASSED!

!testRun: #TerniLapilliGameTest #test34XCantPutInAnOccupiedSpace stamp: 'IO 11/1/2020 20:43:16'!
PASSED!

!testRun: #TerniLapilliGameTest #test35OCantPutInAnOccupiedSpace stamp: 'IO 11/1/2020 20:43:16'!
PASSED!

!testRun: #TerniLapilliGameTest #test36XCantMoveToAnOccupiedSpace stamp: 'IO 11/1/2020 20:43:16'!
PASSED!

!testRun: #TerniLapilliGameTest #test37OCantMoveToAnOccupiedSpace stamp: 'IO 11/1/2020 20:43:16'!
PASSED!

!testRun: #TerniLapilliGameTest #test38XCantPutOutsideTheBoardUnderXAxis stamp: 'IO 11/1/2020 20:43:16'!
PASSED!

!testRun: #TerniLapilliGameTest #test39XCantPutOutsideTheBoardAboveXAxis stamp: 'IO 11/1/2020 20:43:16'!
PASSED!

!testRun: #TerniLapilliGameTest #test40XCantPutOutsideTheBoardUnderNorAboveTheYAxis stamp: 'IO 11/1/2020 20:43:16'!
PASSED!

!testRun: #TerniLapilliGameTest #test41OCantPutOutsideTheBoard stamp: 'IO 11/1/2020 20:43:16'!
PASSED!

!testRun: #TerniLapilliGameTest #test42XCantMoveToOutsideTheBoard stamp: 'IO 11/1/2020 20:43:16'!
PASSED!

!testRun: #TerniLapilliGameTest #test43OCantMoveToOutsideTheBoard stamp: 'IO 11/1/2020 20:43:16'!
PASSED!

!testRun: #TerniLapilliGameTest #test44XCantMovePiecesThatDontBelongToThem stamp: 'IO 11/1/2020 20:43:16'!
PASSED!

!testRun: #TerniLapilliGameTest #test45OCantMovePiecesThatDontBelongToThem stamp: 'IO 11/1/2020 20:43:16'!
PASSED!

!testRun: #TerniLapilliGameTest #test46XCantMoveaPiecesOutsideItsNeighbors stamp: 'IO 11/1/2020 20:43:16'!
PASSED!

!testRun: #TerniLapilliGameTest #test47OCantMoveAPiecesOutsideItsNeighbors stamp: 'IO 11/1/2020 20:43:16'!
PASSED!
!TerniLapilliGameState class methodsFor: 'instance creation' stamp: 'IO 11/1/2020 20:43:54' prior: 50903555!
nextStateWithXPieces: nextXPieces andOPieces: nextOPieces.

	"create the next state"

	^self subclassResponsibility.
! !
!GameOver class methodsFor: 'instance creation' stamp: 'IO 11/1/2020 20:44:32' prior: 50903499 overrides: 50903881!
nextStateWithXPieces: nextXPieces andOPieces: nextOPieces

	"see superimplementor"

	^self basicNew intializeWithXPieces: nextXPieces oPieces: nextOPieces.
! !
!OTurn class methodsFor: 'instance creation' stamp: 'IO 11/1/2020 20:44:41' prior: 50903618 overrides: 50903881!
nextStateWithXPieces: nextXPieces andOPieces: nextOTokens

	"create the next state of O's turn"

	(nextXPieces areInWinningPosition) ifTrue: [^GameOver nextStateWithXPieces: nextXPieces andOPieces: nextOTokens].
	(nextOTokens tokensAlreadyPut < 3) ifTrue: [^OPuts nextStateWithXPieces: nextXPieces andOPieces: nextOTokens].
	^OMoves nextStateWithXPieces: nextXPieces andOPieces: nextOTokens
! !
!OTurn class methodsFor: 'instance creation' stamp: 'IO 11/1/2020 20:44:48' prior: 50903898 overrides: 50903881!
nextStateWithXPieces: nextXPieces andOPieces: nextOPieces

	"create the next state of O's turn"

	(nextXPieces areInWinningPosition) ifTrue: [^GameOver nextStateWithXPieces: nextXPieces andOPieces: nextOPieces].
	(nextOPieces tokensAlreadyPut < 3) ifTrue: [^OPuts nextStateWithXPieces: nextXPieces andOPieces: nextOPieces].
	^OMoves nextStateWithXPieces: nextXPieces andOPieces: nextOPieces
! !
!OMoves class methodsFor: 'instance creation' stamp: 'IO 11/1/2020 20:44:57' prior: 50903522 overrides: 50903914!
nextStateWithXPieces: nextXPieces andOPieces: nextOTokens

	"create the next state of O's turn after they has put the 3 tokens"

	^self basicNew intializeWithXPieces: nextXPieces oPieces: nextOTokens.
! !
!OMoves class methodsFor: 'instance creation' stamp: 'IO 11/1/2020 20:45:02' prior: 50903930 overrides: 50903914!
nextStateWithXPieces: nextXPieces andOPieces: nextOPieces

	"create the next state of O's turn after they has put the 3 tokens"

	^self basicNew intializeWithXPieces: nextXPieces oPieces: nextOPieces.
! !
!OPuts class methodsFor: 'instance creation' stamp: 'IO 11/1/2020 20:45:12' prior: 50903490 overrides: 50903914!
nextStateWithXPieces: nextXPieces andOPieces: nextOTokens

	"create the next state of O's turn before they has put the 3 tokens"

	^self basicNew intializeWithXPieces: nextXPieces oPieces: nextOTokens.
! !
!OPuts class methodsFor: 'instance creation' stamp: 'IO 11/1/2020 20:45:19' prior: 50903950 overrides: 50903914!
nextStateWithXPieces: nextXPieces andOPieces: nextOPieces

	"create the next state of O's turn before they has put the 3 tokens"

	^self basicNew intializeWithXPieces: nextXPieces oPieces: nextOPieces.
! !
!XTurn class methodsFor: 'instance creation' stamp: 'IO 11/1/2020 20:45:31' prior: 50903634 overrides: 50903881!
nextStateWithXPieces: nextXPieces andOPieces: nextOTokens

	"create the next state of X's turn"

	(nextOTokens areInWinningPosition) ifTrue: [^GameOver nextStateWithXPieces: nextXPieces andOPieces: nextOTokens].
	(nextXPieces tokensAlreadyPut < 3) ifTrue: [^XPuts nextStateWithXPieces: nextXPieces andOPieces: nextOTokens].
	^XMoves nextStateWithXPieces: nextXPieces andOPieces: nextOTokens.

	
! !
!XTurn class methodsFor: 'instance creation' stamp: 'IO 11/1/2020 20:45:35' prior: 50903970 overrides: 50903881!
nextStateWithXPieces: nextXPieces andOPieces: nextOPieces

	"create the next state of X's turn"

	(nextOPieces areInWinningPosition) ifTrue: [^GameOver nextStateWithXPieces: nextXPieces andOPieces: nextOPieces].
	(nextXPieces tokensAlreadyPut < 3) ifTrue: [^XPuts nextStateWithXPieces: nextXPieces andOPieces: nextOPieces].
	^XMoves nextStateWithXPieces: nextXPieces andOPieces: nextOPieces.

	
! !
!XMoves class methodsFor: 'instance creation' stamp: 'IO 11/1/2020 20:45:49' prior: 50903562 overrides: 50903986!
nextStateWithXPieces: nextXPieces andOPieces: nextOTokens

	"create the next state of X's turn after they has put the 3 tokens"

	^self basicNew intializeWithXPieces: nextXPieces oPieces: nextOTokens.! !
!XMoves class methodsFor: 'instance creation' stamp: 'IO 11/1/2020 20:45:54' prior: 50904003 overrides: 50903986!
nextStateWithXPieces: nextXPieces andOPieces: nextOPieces

	"create the next state of X's turn after they has put the 3 tokens"

	^self basicNew intializeWithXPieces: nextXPieces oPieces: nextOPieces.! !
!XPuts class methodsFor: 'instance creation' stamp: 'IO 11/1/2020 20:46:01' prior: 50903531 overrides: 50903986!
nextStateWithXPieces: nextXPieces andOPieces: nextOTokens

	"create the next state of O's turn before they has put the 3 tokens"

	^self basicNew intializeWithXPieces: nextXPieces oPieces: nextOTokens.! !
!XPuts class methodsFor: 'instance creation' stamp: 'IO 11/1/2020 20:46:05' prior: 50904023 overrides: 50903986!
nextStateWithXPieces: nextXPieces andOPieces: nextOPieces

	"create the next state of O's turn before they has put the 3 tokens"

	^self basicNew intializeWithXPieces: nextXPieces oPieces: nextOPieces.! !
!TerniLapilliPlayerTokens class methodsFor: 'instance creation' stamp: 'IO 11/1/2020 20:46:20' prior: 50885456 overrides: 16783533!
new

	"create the pieces for player"

	^self basicNew initialize.
! !
!XPuts class methodsFor: 'instance creation' stamp: 'IO 11/1/2020 20:46:26' prior: 50904033 overrides: 50903986!
nextStateWithXPieces: nextXPieces andOPieces: nextOPieces

	"create the next state of O's turn before they has put the 3 pieces"

	^self basicNew intializeWithXPieces: nextXPieces oPieces: nextOPieces.! !
!XMoves class methodsFor: 'instance creation' stamp: 'IO 11/1/2020 20:46:33' prior: 50904013 overrides: 50903986!
nextStateWithXPieces: nextXPieces andOPieces: nextOPieces

	"create the next state of X's turn after they has put the 3 pieces"

	^self basicNew intializeWithXPieces: nextXPieces oPieces: nextOPieces.! !
!OPuts class methodsFor: 'instance creation' stamp: 'IO 11/1/2020 20:46:42' prior: 50903960 overrides: 50903914!
nextStateWithXPieces: nextXPieces andOPieces: nextOPieces

	"create the next state of O's turn before they has put the 3 pieces"

	^self basicNew intializeWithXPieces: nextXPieces oPieces: nextOPieces.
! !
!OMoves class methodsFor: 'instance creation' stamp: 'IO 11/1/2020 20:46:46' prior: 50903940 overrides: 50903914!
nextStateWithXPieces: nextXPieces andOPieces: nextOPieces

	"create the next state of O's turn after they has put the 3 pieces"

	^self basicNew intializeWithXPieces: nextXPieces oPieces: nextOPieces.
! !

!classRenamed: #TerniLapilliPlayerTokens as: #TerniLapilliPlayerPieces stamp: 'IO 11/1/2020 20:47:08'!
Smalltalk renameClassNamed: #TerniLapilliPlayerTokens as: #TerniLapilliPlayerPieces!
!TerniLapilliGameState methodsFor: 'as yet unclassified' stamp: 'IO 11/1/2020 20:47:08' prior: 50902883 overrides: 16896425!
initialize

	"intialize the first state"

	xPieces := TerniLapilliPlayerPieces new.
	oPieces := TerniLapilliPlayerPieces new.
! !

!testRun: #TerniLapilliGameTest #test01XCanPutAPiece stamp: 'IO 11/1/2020 20:47:28'!
PASSED!

!testRun: #TerniLapilliGameTest #test02puttingDoesNotAffectOtherPositions stamp: 'IO 11/1/2020 20:47:28'!
PASSED!

!testRun: #TerniLapilliGameTest #test03XCanPutInOtherPositions stamp: 'IO 11/1/2020 20:47:28'!
PASSED!

!testRun: #TerniLapilliGameTest #test04OCanPut stamp: 'IO 11/1/2020 20:47:28'!
PASSED!

!testRun: #TerniLapilliGameTest #test05XCanMove stamp: 'IO 11/1/2020 20:47:28'!
PASSED!

!testRun: #TerniLapilliGameTest #test06OCanMove stamp: 'IO 11/1/2020 20:47:28'!
PASSED!

!testRun: #TerniLapilliGameTest #test07XWinsWithTheFirstColumn stamp: 'IO 11/1/2020 20:47:28'!
PASSED!

!testRun: #TerniLapilliGameTest #test08XHasntWonYet stamp: 'IO 11/1/2020 20:47:28'!
PASSED!

!testRun: #TerniLapilliGameTest #test09XWinsWithTheSecondColumn stamp: 'IO 11/1/2020 20:47:28'!
PASSED!

!testRun: #TerniLapilliGameTest #test10XWinsWithTheThirdColumn stamp: 'IO 11/1/2020 20:47:28'!
PASSED!

!testRun: #TerniLapilliGameTest #test11XWinsWithTheFirstRow stamp: 'IO 11/1/2020 20:47:28'!
PASSED!

!testRun: #TerniLapilliGameTest #test12XWinsWithTheSecondRow stamp: 'IO 11/1/2020 20:47:28'!
PASSED!

!testRun: #TerniLapilliGameTest #test13XWinsWithTheThirdRow stamp: 'IO 11/1/2020 20:47:28'!
PASSED!

!testRun: #TerniLapilliGameTest #test14XWinsWithTheCrescentDiagonal stamp: 'IO 11/1/2020 20:47:28'!
PASSED!

!testRun: #TerniLapilliGameTest #test15XWinsWithTheDescendantDiagonal stamp: 'IO 11/1/2020 20:47:28'!
PASSED!

!testRun: #TerniLapilliGameTest #test16OWnis stamp: 'IO 11/1/2020 20:47:28'!
PASSED!

!testRun: #TerniLapilliGameTest #test17OCantStartPutting stamp: 'IO 11/1/2020 20:47:28'!
PASSED!

!testRun: #TerniLapilliGameTest #test18XCantPutTwiceInARow stamp: 'IO 11/1/2020 20:47:28'!
PASSED!

!testRun: #TerniLapilliGameTest #test19XCantMoveTwiceInARow stamp: 'IO 11/1/2020 20:47:28'!
PASSED!

!testRun: #TerniLapilliGameTest #test20OCantPutTwiceInARow stamp: 'IO 11/1/2020 20:47:28'!
PASSED!

!testRun: #TerniLapilliGameTest #test21OCantMoveTwiceInARow stamp: 'IO 11/1/2020 20:47:28'!
PASSED!

!testRun: #TerniLapilliGameTest #test22XCantMoveOnTheirFirstTurn stamp: 'IO 11/1/2020 20:47:28'!
PASSED!

!testRun: #TerniLapilliGameTest #test23XCantMoveOnTheirSecondTurn stamp: 'IO 11/1/2020 20:47:28'!
PASSED!

!testRun: #TerniLapilliGameTest #test24XCantMoveOnTheirThirdTurn stamp: 'IO 11/1/2020 20:47:28'!
PASSED!

!testRun: #TerniLapilliGameTest #test25OCantMoveOnTheirFirstTurn stamp: 'IO 11/1/2020 20:47:28'!
PASSED!

!testRun: #TerniLapilliGameTest #test26OCantMoveOnTheirSecondTurn stamp: 'IO 11/1/2020 20:47:28'!
PASSED!

!testRun: #TerniLapilliGameTest #test27OCantMoveOnTheirThirdTurn stamp: 'IO 11/1/2020 20:47:28'!
PASSED!

!testRun: #TerniLapilliGameTest #test28XCantPutAfterTheirThirdTurn stamp: 'IO 11/1/2020 20:47:28'!
PASSED!

!testRun: #TerniLapilliGameTest #test29OCantPutAfterTheirThirdTurn stamp: 'IO 11/1/2020 20:47:28'!
PASSED!

!testRun: #TerniLapilliGameTest #test30OCantPutAfterXWon stamp: 'IO 11/1/2020 20:47:28'!
PASSED!

!testRun: #TerniLapilliGameTest #test31OCantMoveAfterXWon stamp: 'IO 11/1/2020 20:47:28'!
PASSED!

!testRun: #TerniLapilliGameTest #test32XCantMoveAfterOWon stamp: 'IO 11/1/2020 20:47:28'!
PASSED!

!testRun: #TerniLapilliGameTest #test33XCantPutAfterOWon stamp: 'IO 11/1/2020 20:47:28'!
PASSED!

!testRun: #TerniLapilliGameTest #test34XCantPutInAnOccupiedSpace stamp: 'IO 11/1/2020 20:47:28'!
PASSED!

!testRun: #TerniLapilliGameTest #test35OCantPutInAnOccupiedSpace stamp: 'IO 11/1/2020 20:47:28'!
PASSED!

!testRun: #TerniLapilliGameTest #test36XCantMoveToAnOccupiedSpace stamp: 'IO 11/1/2020 20:47:28'!
PASSED!

!testRun: #TerniLapilliGameTest #test37OCantMoveToAnOccupiedSpace stamp: 'IO 11/1/2020 20:47:28'!
PASSED!

!testRun: #TerniLapilliGameTest #test38XCantPutOutsideTheBoardUnderXAxis stamp: 'IO 11/1/2020 20:47:28'!
PASSED!

!testRun: #TerniLapilliGameTest #test39XCantPutOutsideTheBoardAboveXAxis stamp: 'IO 11/1/2020 20:47:28'!
PASSED!

!testRun: #TerniLapilliGameTest #test40XCantPutOutsideTheBoardUnderNorAboveTheYAxis stamp: 'IO 11/1/2020 20:47:28'!
PASSED!

!testRun: #TerniLapilliGameTest #test41OCantPutOutsideTheBoard stamp: 'IO 11/1/2020 20:47:28'!
PASSED!

!testRun: #TerniLapilliGameTest #test42XCantMoveToOutsideTheBoard stamp: 'IO 11/1/2020 20:47:28'!
PASSED!

!testRun: #TerniLapilliGameTest #test43OCantMoveToOutsideTheBoard stamp: 'IO 11/1/2020 20:47:28'!
PASSED!

!testRun: #TerniLapilliGameTest #test44XCantMovePiecesThatDontBelongToThem stamp: 'IO 11/1/2020 20:47:28'!
PASSED!

!testRun: #TerniLapilliGameTest #test45OCantMovePiecesThatDontBelongToThem stamp: 'IO 11/1/2020 20:47:28'!
PASSED!

!testRun: #TerniLapilliGameTest #test46XCantMoveaPiecesOutsideItsNeighbors stamp: 'IO 11/1/2020 20:47:28'!
PASSED!

!testRun: #TerniLapilliGameTest #test47OCantMoveAPiecesOutsideItsNeighbors stamp: 'IO 11/1/2020 20:47:28'!
PASSED!
!TerniLapilliGameState class methodsFor: 'instance creation' stamp: 'IO 11/1/2020 20:51:23'!
nextStateForPlayerWithPieces: nextPieces andOponentWithPieces: nextOponentPieces toPutOn: putsClass toMoveOn: moveClass

	"create the next state of O's turn"

	(nextPieces areInWinningPosition) ifTrue: [^GameOver nextStateWithXPieces: nextPieces andOPieces: nextOponentPieces].
	(nextOponentPieces tokensAlreadyPut < 3) ifTrue: [^putsClass nextStateWithXPieces: nextPieces andOPieces: nextOponentPieces].
	^moveClass nextStateWithXPieces: nextPieces andOPieces: nextOponentPieces
! !
!OTurn class methodsFor: 'instance creation' stamp: 'IO 11/1/2020 20:52:15' prior: 50903914 overrides: 50903881!
nextStateWithXPieces: nextXPieces andOPieces: nextOPieces

	"create the next state of O's turn"
	
	^TerniLapilliGameState nextStateForPlayerWithPieces: nextXPieces andOponentWithPieces: nextOPieces toPutOn: OPuts toMoveOn: OMoves.
! !
!OTurn class methodsFor: 'instance creation' stamp: 'IO 11/1/2020 20:52:25' prior: 50904277 overrides: 50903881!
nextStateWithXPieces: nextXPieces andOPieces: nextOPieces

	"create the next state of O's turn"
	
	^TerniLapilliGameState nextStateForPlayerWithPieces: nextXPieces andOponentWithPieces: nextOPieces toPutOn: OPuts toMoveOn: OMoves.
! !

!testRun: #TerniLapilliGameTest #test01XCanPutAPiece stamp: 'IO 11/1/2020 20:52:30'!
PASSED!

!testRun: #TerniLapilliGameTest #test02puttingDoesNotAffectOtherPositions stamp: 'IO 11/1/2020 20:52:30'!
PASSED!

!testRun: #TerniLapilliGameTest #test03XCanPutInOtherPositions stamp: 'IO 11/1/2020 20:52:30'!
PASSED!

!testRun: #TerniLapilliGameTest #test04OCanPut stamp: 'IO 11/1/2020 20:52:30'!
PASSED!

!testRun: #TerniLapilliGameTest #test05XCanMove stamp: 'IO 11/1/2020 20:52:30'!
PASSED!

!testRun: #TerniLapilliGameTest #test06OCanMove stamp: 'IO 11/1/2020 20:52:30'!
PASSED!

!testRun: #TerniLapilliGameTest #test07XWinsWithTheFirstColumn stamp: 'IO 11/1/2020 20:52:30'!
PASSED!

!testRun: #TerniLapilliGameTest #test08XHasntWonYet stamp: 'IO 11/1/2020 20:52:30'!
PASSED!

!testRun: #TerniLapilliGameTest #test09XWinsWithTheSecondColumn stamp: 'IO 11/1/2020 20:52:30'!
PASSED!

!testRun: #TerniLapilliGameTest #test10XWinsWithTheThirdColumn stamp: 'IO 11/1/2020 20:52:30'!
PASSED!

!testRun: #TerniLapilliGameTest #test11XWinsWithTheFirstRow stamp: 'IO 11/1/2020 20:52:30'!
PASSED!

!testRun: #TerniLapilliGameTest #test12XWinsWithTheSecondRow stamp: 'IO 11/1/2020 20:52:30'!
PASSED!

!testRun: #TerniLapilliGameTest #test13XWinsWithTheThirdRow stamp: 'IO 11/1/2020 20:52:30'!
PASSED!

!testRun: #TerniLapilliGameTest #test14XWinsWithTheCrescentDiagonal stamp: 'IO 11/1/2020 20:52:30'!
PASSED!

!testRun: #TerniLapilliGameTest #test15XWinsWithTheDescendantDiagonal stamp: 'IO 11/1/2020 20:52:30'!
PASSED!

!testRun: #TerniLapilliGameTest #test16OWnis stamp: 'IO 11/1/2020 20:52:30'!
PASSED!

!testRun: #TerniLapilliGameTest #test17OCantStartPutting stamp: 'IO 11/1/2020 20:52:30'!
PASSED!

!testRun: #TerniLapilliGameTest #test18XCantPutTwiceInARow stamp: 'IO 11/1/2020 20:52:30'!
PASSED!

!testRun: #TerniLapilliGameTest #test19XCantMoveTwiceInARow stamp: 'IO 11/1/2020 20:52:30'!
PASSED!

!testRun: #TerniLapilliGameTest #test20OCantPutTwiceInARow stamp: 'IO 11/1/2020 20:52:30'!
PASSED!

!testRun: #TerniLapilliGameTest #test21OCantMoveTwiceInARow stamp: 'IO 11/1/2020 20:52:30'!
PASSED!

!testRun: #TerniLapilliGameTest #test22XCantMoveOnTheirFirstTurn stamp: 'IO 11/1/2020 20:52:30'!
PASSED!

!testRun: #TerniLapilliGameTest #test23XCantMoveOnTheirSecondTurn stamp: 'IO 11/1/2020 20:52:30'!
PASSED!

!testRun: #TerniLapilliGameTest #test24XCantMoveOnTheirThirdTurn stamp: 'IO 11/1/2020 20:52:30'!
PASSED!

!testRun: #TerniLapilliGameTest #test25OCantMoveOnTheirFirstTurn stamp: 'IO 11/1/2020 20:52:30'!
PASSED!

!testRun: #TerniLapilliGameTest #test26OCantMoveOnTheirSecondTurn stamp: 'IO 11/1/2020 20:52:30'!
PASSED!

!testRun: #TerniLapilliGameTest #test27OCantMoveOnTheirThirdTurn stamp: 'IO 11/1/2020 20:52:30'!
PASSED!

!testRun: #TerniLapilliGameTest #test28XCantPutAfterTheirThirdTurn stamp: 'IO 11/1/2020 20:52:30'!
PASSED!

!testRun: #TerniLapilliGameTest #test29OCantPutAfterTheirThirdTurn stamp: 'IO 11/1/2020 20:52:30'!
PASSED!

!testRun: #TerniLapilliGameTest #test30OCantPutAfterXWon stamp: 'IO 11/1/2020 20:52:30'!
PASSED!

!testRun: #TerniLapilliGameTest #test31OCantMoveAfterXWon stamp: 'IO 11/1/2020 20:52:30'!
PASSED!

!testRun: #TerniLapilliGameTest #test32XCantMoveAfterOWon stamp: 'IO 11/1/2020 20:52:30'!
PASSED!

!testRun: #TerniLapilliGameTest #test33XCantPutAfterOWon stamp: 'IO 11/1/2020 20:52:30'!
PASSED!

!testRun: #TerniLapilliGameTest #test34XCantPutInAnOccupiedSpace stamp: 'IO 11/1/2020 20:52:30'!
PASSED!

!testRun: #TerniLapilliGameTest #test35OCantPutInAnOccupiedSpace stamp: 'IO 11/1/2020 20:52:30'!
PASSED!

!testRun: #TerniLapilliGameTest #test36XCantMoveToAnOccupiedSpace stamp: 'IO 11/1/2020 20:52:30'!
PASSED!

!testRun: #TerniLapilliGameTest #test37OCantMoveToAnOccupiedSpace stamp: 'IO 11/1/2020 20:52:30'!
PASSED!

!testRun: #TerniLapilliGameTest #test38XCantPutOutsideTheBoardUnderXAxis stamp: 'IO 11/1/2020 20:52:30'!
PASSED!

!testRun: #TerniLapilliGameTest #test39XCantPutOutsideTheBoardAboveXAxis stamp: 'IO 11/1/2020 20:52:30'!
PASSED!

!testRun: #TerniLapilliGameTest #test40XCantPutOutsideTheBoardUnderNorAboveTheYAxis stamp: 'IO 11/1/2020 20:52:30'!
PASSED!

!testRun: #TerniLapilliGameTest #test41OCantPutOutsideTheBoard stamp: 'IO 11/1/2020 20:52:31'!
PASSED!

!testRun: #TerniLapilliGameTest #test42XCantMoveToOutsideTheBoard stamp: 'IO 11/1/2020 20:52:31'!
PASSED!

!testRun: #TerniLapilliGameTest #test43OCantMoveToOutsideTheBoard stamp: 'IO 11/1/2020 20:52:31'!
PASSED!

!testRun: #TerniLapilliGameTest #test44XCantMovePiecesThatDontBelongToThem stamp: 'IO 11/1/2020 20:52:31'!
PASSED!

!testRun: #TerniLapilliGameTest #test45OCantMovePiecesThatDontBelongToThem stamp: 'IO 11/1/2020 20:52:31'!
PASSED!

!testRun: #TerniLapilliGameTest #test46XCantMoveaPiecesOutsideItsNeighbors stamp: 'IO 11/1/2020 20:52:31'!
PASSED!

!testRun: #TerniLapilliGameTest #test47OCantMoveAPiecesOutsideItsNeighbors stamp: 'IO 11/1/2020 20:52:31'!
PASSED!
!XTurn class methodsFor: 'instance creation' stamp: 'IO 11/1/2020 20:52:56' prior: 50903986 overrides: 50903881!
nextStateWithXPieces: nextXPieces andOPieces: nextOPieces

	"create the next state of O's turn"
	
	^TerniLapilliGameState nextStateForPlayerWithPieces: nextXPieces andOponentWithPieces: nextOPieces toPutOn: OPuts toMoveOn: OMoves.
! !
!XTurn class methodsFor: 'instance creation' stamp: 'IO 11/1/2020 20:53:15' prior: 50904453 overrides: 50903881!
nextStateWithXPieces: nextXPieces andOPieces: nextOPieces

	"create the next state of O's turn"
	
	^TerniLapilliGameState nextStateForPlayerWithPieces: nextXPieces andOponentWithPieces: nextOPieces toPutOn: XPuts toMoveOn: XMoves.
! !
!XTurn class methodsFor: 'instance creation' stamp: 'IO 11/1/2020 20:53:24' prior: 50904464 overrides: 50903881!
nextStateWithXPieces: nextXPieces andOPieces: nextOPieces

	"create the next state of O's turn"
	
	^TerniLapilliGameState nextStateForPlayerWithPieces: nextOPieces andOponentWithPieces: nextXPieces toPutOn: XPuts toMoveOn: XMoves.
! !

!testRun: #TerniLapilliGameTest #test01XCanPutAPiece stamp: 'IO 11/1/2020 20:53:29'!
PASSED!

!testRun: #TerniLapilliGameTest #test02puttingDoesNotAffectOtherPositions stamp: 'IO 11/1/2020 20:53:29'!
PASSED!

!testRun: #TerniLapilliGameTest #test03XCanPutInOtherPositions stamp: 'IO 11/1/2020 20:53:29'!
PASSED!

!testRun: #TerniLapilliGameTest #test04OCanPut stamp: 'IO 11/1/2020 20:53:29'!
FAILURE!

!testRun: #TerniLapilliGameTest #test05XCanMove stamp: 'IO 11/1/2020 20:53:29'!
ERROR!

!testRun: #TerniLapilliGameTest #test06OCanMove stamp: 'IO 11/1/2020 20:53:29'!
ERROR!

!testRun: #TerniLapilliGameTest #test07XWinsWithTheFirstColumn stamp: 'IO 11/1/2020 20:53:29'!
FAILURE!

!testRun: #TerniLapilliGameTest #test08XHasntWonYet stamp: 'IO 11/1/2020 20:53:29'!
FAILURE!

!testRun: #TerniLapilliGameTest #test09XWinsWithTheSecondColumn stamp: 'IO 11/1/2020 20:53:29'!
FAILURE!

!testRun: #TerniLapilliGameTest #test10XWinsWithTheThirdColumn stamp: 'IO 11/1/2020 20:53:29'!
FAILURE!

!testRun: #TerniLapilliGameTest #test11XWinsWithTheFirstRow stamp: 'IO 11/1/2020 20:53:29'!
FAILURE!

!testRun: #TerniLapilliGameTest #test12XWinsWithTheSecondRow stamp: 'IO 11/1/2020 20:53:29'!
FAILURE!

!testRun: #TerniLapilliGameTest #test13XWinsWithTheThirdRow stamp: 'IO 11/1/2020 20:53:29'!
FAILURE!

!testRun: #TerniLapilliGameTest #test14XWinsWithTheCrescentDiagonal stamp: 'IO 11/1/2020 20:53:29'!
FAILURE!

!testRun: #TerniLapilliGameTest #test15XWinsWithTheDescendantDiagonal stamp: 'IO 11/1/2020 20:53:29'!
FAILURE!

!testRun: #TerniLapilliGameTest #test16OWnis stamp: 'IO 11/1/2020 20:53:29'!
ERROR!

!testRun: #TerniLapilliGameTest #test17OCantStartPutting stamp: 'IO 11/1/2020 20:53:29'!
PASSED!

!testRun: #TerniLapilliGameTest #test18XCantPutTwiceInARow stamp: 'IO 11/1/2020 20:53:29'!
PASSED!

!testRun: #TerniLapilliGameTest #test19XCantMoveTwiceInARow stamp: 'IO 11/1/2020 20:53:29'!
ERROR!

!testRun: #TerniLapilliGameTest #test20OCantPutTwiceInARow stamp: 'IO 11/1/2020 20:53:29'!
PASSED!

!testRun: #TerniLapilliGameTest #test21OCantMoveTwiceInARow stamp: 'IO 11/1/2020 20:53:29'!
ERROR!

!testRun: #TerniLapilliGameTest #test22XCantMoveOnTheirFirstTurn stamp: 'IO 11/1/2020 20:53:29'!
PASSED!

!testRun: #TerniLapilliGameTest #test23XCantMoveOnTheirSecondTurn stamp: 'IO 11/1/2020 20:53:29'!
PASSED!

!testRun: #TerniLapilliGameTest #test24XCantMoveOnTheirThirdTurn stamp: 'IO 11/1/2020 20:53:29'!
PASSED!

!testRun: #TerniLapilliGameTest #test25OCantMoveOnTheirFirstTurn stamp: 'IO 11/1/2020 20:53:29'!
PASSED!

!testRun: #TerniLapilliGameTest #test26OCantMoveOnTheirSecondTurn stamp: 'IO 11/1/2020 20:53:29'!
PASSED!

!testRun: #TerniLapilliGameTest #test27OCantMoveOnTheirThirdTurn stamp: 'IO 11/1/2020 20:53:29'!
PASSED!

!testRun: #TerniLapilliGameTest #test28XCantPutAfterTheirThirdTurn stamp: 'IO 11/1/2020 20:53:29'!
FAILURE!

!testRun: #TerniLapilliGameTest #test29OCantPutAfterTheirThirdTurn stamp: 'IO 11/1/2020 20:53:29'!
ERROR!

!testRun: #TerniLapilliGameTest #test30OCantPutAfterXWon stamp: 'IO 11/1/2020 20:53:29'!
FAILURE!

!testRun: #TerniLapilliGameTest #test31OCantMoveAfterXWon stamp: 'IO 11/1/2020 20:53:29'!
FAILURE!

!testRun: #TerniLapilliGameTest #test32XCantMoveAfterOWon stamp: 'IO 11/1/2020 20:53:29'!
FAILURE!

!testRun: #TerniLapilliGameTest #test33XCantPutAfterOWon stamp: 'IO 11/1/2020 20:53:29'!
FAILURE!

!testRun: #TerniLapilliGameTest #test34XCantPutInAnOccupiedSpace stamp: 'IO 11/1/2020 20:53:29'!
PASSED!

!testRun: #TerniLapilliGameTest #test35OCantPutInAnOccupiedSpace stamp: 'IO 11/1/2020 20:53:29'!
PASSED!

!testRun: #TerniLapilliGameTest #test36XCantMoveToAnOccupiedSpace stamp: 'IO 11/1/2020 20:53:29'!
PASSED!

!testRun: #TerniLapilliGameTest #test37OCantMoveToAnOccupiedSpace stamp: 'IO 11/1/2020 20:53:29'!
ERROR!

!testRun: #TerniLapilliGameTest #test38XCantPutOutsideTheBoardUnderXAxis stamp: 'IO 11/1/2020 20:53:29'!
PASSED!

!testRun: #TerniLapilliGameTest #test39XCantPutOutsideTheBoardAboveXAxis stamp: 'IO 11/1/2020 20:53:29'!
PASSED!

!testRun: #TerniLapilliGameTest #test40XCantPutOutsideTheBoardUnderNorAboveTheYAxis stamp: 'IO 11/1/2020 20:53:29'!
PASSED!

!testRun: #TerniLapilliGameTest #test41OCantPutOutsideTheBoard stamp: 'IO 11/1/2020 20:53:29'!
PASSED!

!testRun: #TerniLapilliGameTest #test42XCantMoveToOutsideTheBoard stamp: 'IO 11/1/2020 20:53:29'!
FAILURE!

!testRun: #TerniLapilliGameTest #test43OCantMoveToOutsideTheBoard stamp: 'IO 11/1/2020 20:53:29'!
FAILURE!

!testRun: #TerniLapilliGameTest #test44XCantMovePiecesThatDontBelongToThem stamp: 'IO 11/1/2020 20:53:29'!
FAILURE!

!testRun: #TerniLapilliGameTest #test45OCantMovePiecesThatDontBelongToThem stamp: 'IO 11/1/2020 20:53:29'!
ERROR!

!testRun: #TerniLapilliGameTest #test46XCantMoveaPiecesOutsideItsNeighbors stamp: 'IO 11/1/2020 20:53:29'!
FAILURE!

!testRun: #TerniLapilliGameTest #test47OCantMoveAPiecesOutsideItsNeighbors stamp: 'IO 11/1/2020 20:53:29'!
ERROR!
!XTurn class methodsFor: 'instance creation' stamp: 'IO 11/1/2020 20:55:09' prior: 50904475 overrides: 50903881!
nextStateWithXPieces: nextXPieces andOPieces: nextOPieces

	"create the next state of O's turn"
	
	(nextOPieces areInWinningPosition) ifTrue: [^GameOver nextStateWithXPieces: nextXPieces andOPieces: nextOPieces].
	(nextXPieces tokensAlreadyPut < 3) ifTrue: [^XPuts nextStateWithXPieces: nextXPieces andOPieces: nextOPieces].
	^XMoves nextStateWithXPieces: nextXPieces andOPieces: nextOPieces.
! !

!testRun: #TerniLapilliGameTest #test01XCanPutAPiece stamp: 'IO 11/1/2020 20:55:12'!
PASSED!

!testRun: #TerniLapilliGameTest #test02puttingDoesNotAffectOtherPositions stamp: 'IO 11/1/2020 20:55:12'!
PASSED!

!testRun: #TerniLapilliGameTest #test03XCanPutInOtherPositions stamp: 'IO 11/1/2020 20:55:12'!
PASSED!

!testRun: #TerniLapilliGameTest #test04OCanPut stamp: 'IO 11/1/2020 20:55:12'!
PASSED!

!testRun: #TerniLapilliGameTest #test05XCanMove stamp: 'IO 11/1/2020 20:55:12'!
PASSED!

!testRun: #TerniLapilliGameTest #test06OCanMove stamp: 'IO 11/1/2020 20:55:12'!
PASSED!

!testRun: #TerniLapilliGameTest #test07XWinsWithTheFirstColumn stamp: 'IO 11/1/2020 20:55:12'!
PASSED!

!testRun: #TerniLapilliGameTest #test08XHasntWonYet stamp: 'IO 11/1/2020 20:55:12'!
PASSED!

!testRun: #TerniLapilliGameTest #test09XWinsWithTheSecondColumn stamp: 'IO 11/1/2020 20:55:12'!
PASSED!

!testRun: #TerniLapilliGameTest #test10XWinsWithTheThirdColumn stamp: 'IO 11/1/2020 20:55:12'!
PASSED!

!testRun: #TerniLapilliGameTest #test11XWinsWithTheFirstRow stamp: 'IO 11/1/2020 20:55:12'!
PASSED!

!testRun: #TerniLapilliGameTest #test12XWinsWithTheSecondRow stamp: 'IO 11/1/2020 20:55:12'!
PASSED!

!testRun: #TerniLapilliGameTest #test13XWinsWithTheThirdRow stamp: 'IO 11/1/2020 20:55:12'!
PASSED!

!testRun: #TerniLapilliGameTest #test14XWinsWithTheCrescentDiagonal stamp: 'IO 11/1/2020 20:55:12'!
PASSED!

!testRun: #TerniLapilliGameTest #test15XWinsWithTheDescendantDiagonal stamp: 'IO 11/1/2020 20:55:12'!
PASSED!

!testRun: #TerniLapilliGameTest #test16OWnis stamp: 'IO 11/1/2020 20:55:12'!
PASSED!

!testRun: #TerniLapilliGameTest #test17OCantStartPutting stamp: 'IO 11/1/2020 20:55:12'!
PASSED!

!testRun: #TerniLapilliGameTest #test18XCantPutTwiceInARow stamp: 'IO 11/1/2020 20:55:12'!
PASSED!

!testRun: #TerniLapilliGameTest #test19XCantMoveTwiceInARow stamp: 'IO 11/1/2020 20:55:12'!
PASSED!

!testRun: #TerniLapilliGameTest #test20OCantPutTwiceInARow stamp: 'IO 11/1/2020 20:55:12'!
PASSED!

!testRun: #TerniLapilliGameTest #test21OCantMoveTwiceInARow stamp: 'IO 11/1/2020 20:55:12'!
PASSED!

!testRun: #TerniLapilliGameTest #test22XCantMoveOnTheirFirstTurn stamp: 'IO 11/1/2020 20:55:12'!
PASSED!

!testRun: #TerniLapilliGameTest #test23XCantMoveOnTheirSecondTurn stamp: 'IO 11/1/2020 20:55:12'!
PASSED!

!testRun: #TerniLapilliGameTest #test24XCantMoveOnTheirThirdTurn stamp: 'IO 11/1/2020 20:55:12'!
PASSED!

!testRun: #TerniLapilliGameTest #test25OCantMoveOnTheirFirstTurn stamp: 'IO 11/1/2020 20:55:12'!
PASSED!

!testRun: #TerniLapilliGameTest #test26OCantMoveOnTheirSecondTurn stamp: 'IO 11/1/2020 20:55:12'!
PASSED!

!testRun: #TerniLapilliGameTest #test27OCantMoveOnTheirThirdTurn stamp: 'IO 11/1/2020 20:55:12'!
PASSED!

!testRun: #TerniLapilliGameTest #test28XCantPutAfterTheirThirdTurn stamp: 'IO 11/1/2020 20:55:12'!
PASSED!

!testRun: #TerniLapilliGameTest #test29OCantPutAfterTheirThirdTurn stamp: 'IO 11/1/2020 20:55:12'!
PASSED!

!testRun: #TerniLapilliGameTest #test30OCantPutAfterXWon stamp: 'IO 11/1/2020 20:55:12'!
PASSED!

!testRun: #TerniLapilliGameTest #test31OCantMoveAfterXWon stamp: 'IO 11/1/2020 20:55:12'!
PASSED!

!testRun: #TerniLapilliGameTest #test32XCantMoveAfterOWon stamp: 'IO 11/1/2020 20:55:12'!
PASSED!

!testRun: #TerniLapilliGameTest #test33XCantPutAfterOWon stamp: 'IO 11/1/2020 20:55:12'!
PASSED!

!testRun: #TerniLapilliGameTest #test34XCantPutInAnOccupiedSpace stamp: 'IO 11/1/2020 20:55:12'!
PASSED!

!testRun: #TerniLapilliGameTest #test35OCantPutInAnOccupiedSpace stamp: 'IO 11/1/2020 20:55:12'!
PASSED!

!testRun: #TerniLapilliGameTest #test36XCantMoveToAnOccupiedSpace stamp: 'IO 11/1/2020 20:55:12'!
PASSED!

!testRun: #TerniLapilliGameTest #test37OCantMoveToAnOccupiedSpace stamp: 'IO 11/1/2020 20:55:12'!
PASSED!

!testRun: #TerniLapilliGameTest #test38XCantPutOutsideTheBoardUnderXAxis stamp: 'IO 11/1/2020 20:55:12'!
PASSED!

!testRun: #TerniLapilliGameTest #test39XCantPutOutsideTheBoardAboveXAxis stamp: 'IO 11/1/2020 20:55:12'!
PASSED!

!testRun: #TerniLapilliGameTest #test40XCantPutOutsideTheBoardUnderNorAboveTheYAxis stamp: 'IO 11/1/2020 20:55:12'!
PASSED!

!testRun: #TerniLapilliGameTest #test41OCantPutOutsideTheBoard stamp: 'IO 11/1/2020 20:55:12'!
PASSED!

!testRun: #TerniLapilliGameTest #test42XCantMoveToOutsideTheBoard stamp: 'IO 11/1/2020 20:55:12'!
PASSED!

!testRun: #TerniLapilliGameTest #test43OCantMoveToOutsideTheBoard stamp: 'IO 11/1/2020 20:55:12'!
PASSED!

!testRun: #TerniLapilliGameTest #test44XCantMovePiecesThatDontBelongToThem stamp: 'IO 11/1/2020 20:55:12'!
PASSED!

!testRun: #TerniLapilliGameTest #test45OCantMovePiecesThatDontBelongToThem stamp: 'IO 11/1/2020 20:55:12'!
PASSED!

!testRun: #TerniLapilliGameTest #test46XCantMoveaPiecesOutsideItsNeighbors stamp: 'IO 11/1/2020 20:55:12'!
PASSED!

!testRun: #TerniLapilliGameTest #test47OCantMoveAPiecesOutsideItsNeighbors stamp: 'IO 11/1/2020 20:55:12'!
PASSED!
!OTurn class methodsFor: 'instance creation' stamp: 'IO 11/1/2020 21:00:36' prior: 50904288 overrides: 50903881!
nextStateWithXPieces: nextXPieces andOPieces: nextOPieces

	"create the next state of O's turn"
	
	(nextXPieces areInWinningPosition) ifTrue: [^GameOver nextStateWithXPieces: nextXPieces andOPieces: nextOPieces].
	(nextOPieces tokensAlreadyPut < 3) ifTrue: [^OPuts nextStateWithXPieces: nextXPieces andOPieces: nextOPieces].
	^OMoves nextStateWithXPieces: nextXPieces andOPieces: nextOPieces.

! !

!testRun: #TerniLapilliGameTest #test01XCanPutAPiece stamp: 'IO 11/1/2020 21:00:41'!
PASSED!

!testRun: #TerniLapilliGameTest #test02puttingDoesNotAffectOtherPositions stamp: 'IO 11/1/2020 21:00:41'!
PASSED!

!testRun: #TerniLapilliGameTest #test03XCanPutInOtherPositions stamp: 'IO 11/1/2020 21:00:41'!
PASSED!

!testRun: #TerniLapilliGameTest #test04OCanPut stamp: 'IO 11/1/2020 21:00:41'!
PASSED!

!testRun: #TerniLapilliGameTest #test05XCanMove stamp: 'IO 11/1/2020 21:00:41'!
PASSED!

!testRun: #TerniLapilliGameTest #test06OCanMove stamp: 'IO 11/1/2020 21:00:41'!
PASSED!

!testRun: #TerniLapilliGameTest #test07XWinsWithTheFirstColumn stamp: 'IO 11/1/2020 21:00:41'!
PASSED!

!testRun: #TerniLapilliGameTest #test08XHasntWonYet stamp: 'IO 11/1/2020 21:00:41'!
PASSED!

!testRun: #TerniLapilliGameTest #test09XWinsWithTheSecondColumn stamp: 'IO 11/1/2020 21:00:41'!
PASSED!

!testRun: #TerniLapilliGameTest #test10XWinsWithTheThirdColumn stamp: 'IO 11/1/2020 21:00:41'!
PASSED!

!testRun: #TerniLapilliGameTest #test11XWinsWithTheFirstRow stamp: 'IO 11/1/2020 21:00:41'!
PASSED!

!testRun: #TerniLapilliGameTest #test12XWinsWithTheSecondRow stamp: 'IO 11/1/2020 21:00:41'!
PASSED!

!testRun: #TerniLapilliGameTest #test13XWinsWithTheThirdRow stamp: 'IO 11/1/2020 21:00:41'!
PASSED!

!testRun: #TerniLapilliGameTest #test14XWinsWithTheCrescentDiagonal stamp: 'IO 11/1/2020 21:00:41'!
PASSED!

!testRun: #TerniLapilliGameTest #test15XWinsWithTheDescendantDiagonal stamp: 'IO 11/1/2020 21:00:41'!
PASSED!

!testRun: #TerniLapilliGameTest #test16OWnis stamp: 'IO 11/1/2020 21:00:41'!
PASSED!

!testRun: #TerniLapilliGameTest #test17OCantStartPutting stamp: 'IO 11/1/2020 21:00:41'!
PASSED!

!testRun: #TerniLapilliGameTest #test18XCantPutTwiceInARow stamp: 'IO 11/1/2020 21:00:41'!
PASSED!

!testRun: #TerniLapilliGameTest #test19XCantMoveTwiceInARow stamp: 'IO 11/1/2020 21:00:41'!
PASSED!

!testRun: #TerniLapilliGameTest #test20OCantPutTwiceInARow stamp: 'IO 11/1/2020 21:00:41'!
PASSED!

!testRun: #TerniLapilliGameTest #test21OCantMoveTwiceInARow stamp: 'IO 11/1/2020 21:00:41'!
PASSED!

!testRun: #TerniLapilliGameTest #test22XCantMoveOnTheirFirstTurn stamp: 'IO 11/1/2020 21:00:41'!
PASSED!

!testRun: #TerniLapilliGameTest #test23XCantMoveOnTheirSecondTurn stamp: 'IO 11/1/2020 21:00:41'!
PASSED!

!testRun: #TerniLapilliGameTest #test24XCantMoveOnTheirThirdTurn stamp: 'IO 11/1/2020 21:00:41'!
PASSED!

!testRun: #TerniLapilliGameTest #test25OCantMoveOnTheirFirstTurn stamp: 'IO 11/1/2020 21:00:41'!
PASSED!

!testRun: #TerniLapilliGameTest #test26OCantMoveOnTheirSecondTurn stamp: 'IO 11/1/2020 21:00:41'!
PASSED!

!testRun: #TerniLapilliGameTest #test27OCantMoveOnTheirThirdTurn stamp: 'IO 11/1/2020 21:00:41'!
PASSED!

!testRun: #TerniLapilliGameTest #test28XCantPutAfterTheirThirdTurn stamp: 'IO 11/1/2020 21:00:41'!
PASSED!

!testRun: #TerniLapilliGameTest #test29OCantPutAfterTheirThirdTurn stamp: 'IO 11/1/2020 21:00:41'!
PASSED!

!testRun: #TerniLapilliGameTest #test30OCantPutAfterXWon stamp: 'IO 11/1/2020 21:00:41'!
PASSED!

!testRun: #TerniLapilliGameTest #test31OCantMoveAfterXWon stamp: 'IO 11/1/2020 21:00:41'!
PASSED!

!testRun: #TerniLapilliGameTest #test32XCantMoveAfterOWon stamp: 'IO 11/1/2020 21:00:41'!
PASSED!

!testRun: #TerniLapilliGameTest #test33XCantPutAfterOWon stamp: 'IO 11/1/2020 21:00:41'!
PASSED!

!testRun: #TerniLapilliGameTest #test34XCantPutInAnOccupiedSpace stamp: 'IO 11/1/2020 21:00:41'!
PASSED!

!testRun: #TerniLapilliGameTest #test35OCantPutInAnOccupiedSpace stamp: 'IO 11/1/2020 21:00:41'!
PASSED!

!testRun: #TerniLapilliGameTest #test36XCantMoveToAnOccupiedSpace stamp: 'IO 11/1/2020 21:00:41'!
PASSED!

!testRun: #TerniLapilliGameTest #test37OCantMoveToAnOccupiedSpace stamp: 'IO 11/1/2020 21:00:41'!
PASSED!

!testRun: #TerniLapilliGameTest #test38XCantPutOutsideTheBoardUnderXAxis stamp: 'IO 11/1/2020 21:00:41'!
PASSED!

!testRun: #TerniLapilliGameTest #test39XCantPutOutsideTheBoardAboveXAxis stamp: 'IO 11/1/2020 21:00:41'!
PASSED!

!testRun: #TerniLapilliGameTest #test40XCantPutOutsideTheBoardUnderNorAboveTheYAxis stamp: 'IO 11/1/2020 21:00:41'!
PASSED!

!testRun: #TerniLapilliGameTest #test41OCantPutOutsideTheBoard stamp: 'IO 11/1/2020 21:00:41'!
PASSED!

!testRun: #TerniLapilliGameTest #test42XCantMoveToOutsideTheBoard stamp: 'IO 11/1/2020 21:00:41'!
PASSED!

!testRun: #TerniLapilliGameTest #test43OCantMoveToOutsideTheBoard stamp: 'IO 11/1/2020 21:00:41'!
PASSED!

!testRun: #TerniLapilliGameTest #test44XCantMovePiecesThatDontBelongToThem stamp: 'IO 11/1/2020 21:00:41'!
PASSED!

!testRun: #TerniLapilliGameTest #test45OCantMovePiecesThatDontBelongToThem stamp: 'IO 11/1/2020 21:00:41'!
PASSED!

!testRun: #TerniLapilliGameTest #test46XCantMoveaPiecesOutsideItsNeighbors stamp: 'IO 11/1/2020 21:00:41'!
PASSED!

!testRun: #TerniLapilliGameTest #test47OCantMoveAPiecesOutsideItsNeighbors stamp: 'IO 11/1/2020 21:00:41'!
PASSED!

!methodRemoval: TerniLapilliGameState class #nextStateForPlayerWithPieces:andOponentWithPieces:toPutOn:toMoveOn: stamp: 'IO 11/1/2020 21:00:47'!
nextStateForPlayerWithPieces: nextPieces andOponentWithPieces: nextOponentPieces toPutOn: putsClass toMoveOn: moveClass

	"create the next state of O's turn"

	(nextPieces areInWinningPosition) ifTrue: [^GameOver nextStateWithXPieces: nextPieces andOPieces: nextOponentPieces].
	(nextOponentPieces tokensAlreadyPut < 3) ifTrue: [^putsClass nextStateWithXPieces: nextPieces andOPieces: nextOponentPieces].
	^moveClass nextStateWithXPieces: nextPieces andOPieces: nextOponentPieces
!

!testRun: #TerniLapilliGameTest #test01XCanPutAPiece stamp: 'IO 11/1/2020 21:00:49'!
PASSED!

!testRun: #TerniLapilliGameTest #test02puttingDoesNotAffectOtherPositions stamp: 'IO 11/1/2020 21:00:49'!
PASSED!

!testRun: #TerniLapilliGameTest #test03XCanPutInOtherPositions stamp: 'IO 11/1/2020 21:00:49'!
PASSED!

!testRun: #TerniLapilliGameTest #test04OCanPut stamp: 'IO 11/1/2020 21:00:49'!
PASSED!

!testRun: #TerniLapilliGameTest #test05XCanMove stamp: 'IO 11/1/2020 21:00:49'!
PASSED!

!testRun: #TerniLapilliGameTest #test06OCanMove stamp: 'IO 11/1/2020 21:00:49'!
PASSED!

!testRun: #TerniLapilliGameTest #test07XWinsWithTheFirstColumn stamp: 'IO 11/1/2020 21:00:49'!
PASSED!

!testRun: #TerniLapilliGameTest #test08XHasntWonYet stamp: 'IO 11/1/2020 21:00:49'!
PASSED!

!testRun: #TerniLapilliGameTest #test09XWinsWithTheSecondColumn stamp: 'IO 11/1/2020 21:00:49'!
PASSED!

!testRun: #TerniLapilliGameTest #test10XWinsWithTheThirdColumn stamp: 'IO 11/1/2020 21:00:49'!
PASSED!

!testRun: #TerniLapilliGameTest #test11XWinsWithTheFirstRow stamp: 'IO 11/1/2020 21:00:49'!
PASSED!

!testRun: #TerniLapilliGameTest #test12XWinsWithTheSecondRow stamp: 'IO 11/1/2020 21:00:49'!
PASSED!

!testRun: #TerniLapilliGameTest #test13XWinsWithTheThirdRow stamp: 'IO 11/1/2020 21:00:49'!
PASSED!

!testRun: #TerniLapilliGameTest #test14XWinsWithTheCrescentDiagonal stamp: 'IO 11/1/2020 21:00:49'!
PASSED!

!testRun: #TerniLapilliGameTest #test15XWinsWithTheDescendantDiagonal stamp: 'IO 11/1/2020 21:00:49'!
PASSED!

!testRun: #TerniLapilliGameTest #test16OWnis stamp: 'IO 11/1/2020 21:00:49'!
PASSED!

!testRun: #TerniLapilliGameTest #test17OCantStartPutting stamp: 'IO 11/1/2020 21:00:49'!
PASSED!

!testRun: #TerniLapilliGameTest #test18XCantPutTwiceInARow stamp: 'IO 11/1/2020 21:00:49'!
PASSED!

!testRun: #TerniLapilliGameTest #test19XCantMoveTwiceInARow stamp: 'IO 11/1/2020 21:00:49'!
PASSED!

!testRun: #TerniLapilliGameTest #test20OCantPutTwiceInARow stamp: 'IO 11/1/2020 21:00:49'!
PASSED!

!testRun: #TerniLapilliGameTest #test21OCantMoveTwiceInARow stamp: 'IO 11/1/2020 21:00:49'!
PASSED!

!testRun: #TerniLapilliGameTest #test22XCantMoveOnTheirFirstTurn stamp: 'IO 11/1/2020 21:00:49'!
PASSED!

!testRun: #TerniLapilliGameTest #test23XCantMoveOnTheirSecondTurn stamp: 'IO 11/1/2020 21:00:49'!
PASSED!

!testRun: #TerniLapilliGameTest #test24XCantMoveOnTheirThirdTurn stamp: 'IO 11/1/2020 21:00:49'!
PASSED!

!testRun: #TerniLapilliGameTest #test25OCantMoveOnTheirFirstTurn stamp: 'IO 11/1/2020 21:00:49'!
PASSED!

!testRun: #TerniLapilliGameTest #test26OCantMoveOnTheirSecondTurn stamp: 'IO 11/1/2020 21:00:49'!
PASSED!

!testRun: #TerniLapilliGameTest #test27OCantMoveOnTheirThirdTurn stamp: 'IO 11/1/2020 21:00:49'!
PASSED!

!testRun: #TerniLapilliGameTest #test28XCantPutAfterTheirThirdTurn stamp: 'IO 11/1/2020 21:00:49'!
PASSED!

!testRun: #TerniLapilliGameTest #test29OCantPutAfterTheirThirdTurn stamp: 'IO 11/1/2020 21:00:49'!
PASSED!

!testRun: #TerniLapilliGameTest #test30OCantPutAfterXWon stamp: 'IO 11/1/2020 21:00:49'!
PASSED!

!testRun: #TerniLapilliGameTest #test31OCantMoveAfterXWon stamp: 'IO 11/1/2020 21:00:49'!
PASSED!

!testRun: #TerniLapilliGameTest #test32XCantMoveAfterOWon stamp: 'IO 11/1/2020 21:00:49'!
PASSED!

!testRun: #TerniLapilliGameTest #test33XCantPutAfterOWon stamp: 'IO 11/1/2020 21:00:49'!
PASSED!

!testRun: #TerniLapilliGameTest #test34XCantPutInAnOccupiedSpace stamp: 'IO 11/1/2020 21:00:49'!
PASSED!

!testRun: #TerniLapilliGameTest #test35OCantPutInAnOccupiedSpace stamp: 'IO 11/1/2020 21:00:49'!
PASSED!

!testRun: #TerniLapilliGameTest #test36XCantMoveToAnOccupiedSpace stamp: 'IO 11/1/2020 21:00:49'!
PASSED!

!testRun: #TerniLapilliGameTest #test37OCantMoveToAnOccupiedSpace stamp: 'IO 11/1/2020 21:00:49'!
PASSED!

!testRun: #TerniLapilliGameTest #test38XCantPutOutsideTheBoardUnderXAxis stamp: 'IO 11/1/2020 21:00:49'!
PASSED!

!testRun: #TerniLapilliGameTest #test39XCantPutOutsideTheBoardAboveXAxis stamp: 'IO 11/1/2020 21:00:49'!
PASSED!

!testRun: #TerniLapilliGameTest #test40XCantPutOutsideTheBoardUnderNorAboveTheYAxis stamp: 'IO 11/1/2020 21:00:49'!
PASSED!

!testRun: #TerniLapilliGameTest #test41OCantPutOutsideTheBoard stamp: 'IO 11/1/2020 21:00:49'!
PASSED!

!testRun: #TerniLapilliGameTest #test42XCantMoveToOutsideTheBoard stamp: 'IO 11/1/2020 21:00:49'!
PASSED!

!testRun: #TerniLapilliGameTest #test43OCantMoveToOutsideTheBoard stamp: 'IO 11/1/2020 21:00:49'!
PASSED!

!testRun: #TerniLapilliGameTest #test44XCantMovePiecesThatDontBelongToThem stamp: 'IO 11/1/2020 21:00:49'!
PASSED!

!testRun: #TerniLapilliGameTest #test45OCantMovePiecesThatDontBelongToThem stamp: 'IO 11/1/2020 21:00:49'!
PASSED!

!testRun: #TerniLapilliGameTest #test46XCantMoveaPiecesOutsideItsNeighbors stamp: 'IO 11/1/2020 21:00:49'!
PASSED!

!testRun: #TerniLapilliGameTest #test47OCantMoveAPiecesOutsideItsNeighbors stamp: 'IO 11/1/2020 21:00:49'!
PASSED!

Object subclass: #TerniLapilliStateTransitor
	instanceVariableNames: 'state'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Terni Lapilli'!

!classDefinition: #TerniLapilliStateTransitor category: 'Terni Lapilli' stamp: 'IO 11/1/2020 21:02:46'!
Object subclass: #TerniLapilliStateTransitor
	instanceVariableNames: 'state'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Terni Lapilli'!

Object subclass: #TerniLapilliStateTransitor
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Terni Lapilli'!

!classDefinition: #TerniLapilliStateTransitor category: 'Terni Lapilli' stamp: 'IO 11/1/2020 21:03:00'!
Object subclass: #TerniLapilliStateTransitor
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Terni Lapilli'!

Object subclass: #TerniLapilliStateTransitor
	instanceVariableNames: 'xPieces oPieces nextPutStateClass nextMoveStateClass'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Terni Lapilli'!

!classDefinition: #TerniLapilliStateTransitor category: 'Terni Lapilli' stamp: 'IO 11/1/2020 21:04:41'!
Object subclass: #TerniLapilliStateTransitor
	instanceVariableNames: 'xPieces oPieces nextPutStateClass nextMoveStateClass'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Terni Lapilli'!

TerniLapilliStateTransitor subclass: #TerniLapilliStateTransitorX
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Terni Lapilli'!

!classDefinition: #TerniLapilliStateTransitorX category: 'Terni Lapilli' stamp: 'IO 11/1/2020 21:04:55'!
TerniLapilliStateTransitor subclass: #TerniLapilliStateTransitorX
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Terni Lapilli'!

TerniLapilliStateTransitor subclass: #TerniLapilliStateTransitorO
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Terni Lapilli'!

!classDefinition: #TerniLapilliStateTransitorO category: 'Terni Lapilli' stamp: 'IO 11/1/2020 21:04:57'!
TerniLapilliStateTransitor subclass: #TerniLapilliStateTransitorO
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Terni Lapilli'!
!TerniLapilliStateTransitor class methodsFor: 'no messages' stamp: 'IO 11/1/2020 21:06:13'!
newWithXPieces: nextXPieces oPieces: oPieces nextPutStateClass: nextPutStateClass nextMoveStateClass: nextMoveStateClass
"	xPieces := nextXPieces"
	! !
!TerniLapilliStateTransitor class methodsFor: 'as yet unclassified' stamp: 'IO 11/1/2020 21:06:20' prior: 50905220!
newWithXPieces: nextXPieces oPieces: oPieces nextPutStateClass: nextPutStateClass nextMoveStateClass: nextMoveStateClass
	
	! !
!TerniLapilliStateTransitor class methodsFor: 'as yet unclassified' stamp: 'IO 11/1/2020 21:06:46' prior: 50905229!
newWithXPieces: nextXPieces oPieces: nextOPieces nextPutStateClass: nextPutStateClass nextMoveStateClass: nextMoveStateClass
	^self basicNew initializeWithXPieces: nextXPieces oPieces: nextOPieces nextPutStateClass: nextPutStateClass nextMoveStateClass: nextMoveStateClass
	! !
!TerniLapilliStateTransitorO class methodsFor: 'no messages' stamp: 'IO 11/1/2020 21:07:04'!
initializeWithXPieces: nextXPieces oPieces: nextOPieces nextPutStateClass: nextPutStateClass nextMoveStateClass: nextMoveStateClass
	! !

!methodRemoval: TerniLapilliStateTransitorO class #initializeWithXPieces:oPieces:nextPutStateClass:nextMoveStateClass: stamp: 'IO 11/1/2020 21:07:16'!
initializeWithXPieces: nextXPieces oPieces: nextOPieces nextPutStateClass: nextPutStateClass nextMoveStateClass: nextMoveStateClass
	!

Object subclass: #TerniLapilliStateTransitor
	instanceVariableNames: 'xPieces oPieces nextPutStateClass nextMoveStateClass currentPlay nextPlayer'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Terni Lapilli'!

!classDefinition: #TerniLapilliStateTransitor category: 'Terni Lapilli' stamp: 'IO 11/1/2020 21:07:37'!
Object subclass: #TerniLapilliStateTransitor
	instanceVariableNames: 'xPieces oPieces nextPutStateClass nextMoveStateClass currentPlay nextPlayer'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Terni Lapilli'!
!TerniLapilliGameState class methodsFor: 'instance creation' stamp: 'IO 11/1/2020 21:09:46'!
nextStateWithXPieces: nextXPieces andOPieces: nextOPieces currentPlayerPieces: currentPlayerPieces nextPlayerPieces: nextPlayerPieces putsWith: putClass movesWith: moveClass

	"create the next state of O's turn"
	
	(nextXPieces areInWinningPosition) ifTrue: [^GameOver nextStateWithXPieces: nextXPieces andOPieces: nextOPieces].
	(nextOPieces tokensAlreadyPut < 3) ifTrue: [^OPuts nextStateWithXPieces: nextXPieces andOPieces: nextOPieces].
	^OMoves nextStateWithXPieces: nextXPieces andOPieces: nextOPieces.

! !
!TerniLapilliGameState class methodsFor: 'instance creation' stamp: 'IO 11/1/2020 21:10:49' prior: 50905283!
nextStateWithXPieces: nextXPieces andOPieces: nextOPieces currentPlayerPieces: currentPlayerPieces nextPlayerPieces: nextPlayerPieces putsWith: putClass movesWith: moveClass

	"create the next state of O's turn"
	
	(currentPlayerPieces areInWinningPosition) ifTrue: [^GameOver nextStateWithXPieces: nextXPieces andOPieces: nextOPieces].
	(nextPlayerPieces tokensAlreadyPut < 3) ifTrue: [^moveClass nextStateWithXPieces: nextXPieces andOPieces: nextOPieces].
	^putClass nextStateWithXPieces: nextXPieces andOPieces: nextOPieces.

! !
!OTurn class methodsFor: 'instance creation' stamp: 'IO 11/1/2020 21:13:21' prior: 50904810 overrides: 50903881!
nextStateWithXPieces: nextXPieces andOPieces: nextOPieces

	"create the next state of O's turn"
	
	^TerniLapilliGameState nextStateWithXPieces: nextXPieces andOPieces: nextOPieces currentPlayerPieces: nextOPieces nextPlayerPieces: nextXPieces putsWith: OPuts movesWith: OMoves.
	
	"(nextXPieces areInWinningPosition) ifTrue: [^GameOver nextStateWithXPieces: nextXPieces andOPieces: nextOPieces].
	(nextOPieces tokensAlreadyPut < 3) ifTrue: [^OPuts nextStateWithXPieces: nextXPieces andOPieces: nextOPieces].
	^OMoves nextStateWithXPieces: nextXPieces andOPieces: nextOPieces."

! !

!testRun: #TerniLapilliGameTest #test01XCanPutAPiece stamp: 'IO 11/1/2020 21:13:23'!
PASSED!

!testRun: #TerniLapilliGameTest #test02puttingDoesNotAffectOtherPositions stamp: 'IO 11/1/2020 21:13:23'!
PASSED!

!testRun: #TerniLapilliGameTest #test03XCanPutInOtherPositions stamp: 'IO 11/1/2020 21:13:23'!
PASSED!

!testRun: #TerniLapilliGameTest #test04OCanPut stamp: 'IO 11/1/2020 21:13:23'!
ERROR!

!testRun: #TerniLapilliGameTest #test05XCanMove stamp: 'IO 11/1/2020 21:13:23'!
ERROR!

!testRun: #TerniLapilliGameTest #test06OCanMove stamp: 'IO 11/1/2020 21:13:23'!
ERROR!

!testRun: #TerniLapilliGameTest #test07XWinsWithTheFirstColumn stamp: 'IO 11/1/2020 21:13:23'!
ERROR!

!testRun: #TerniLapilliGameTest #test08XHasntWonYet stamp: 'IO 11/1/2020 21:13:23'!
ERROR!

!testRun: #TerniLapilliGameTest #test09XWinsWithTheSecondColumn stamp: 'IO 11/1/2020 21:13:23'!
ERROR!

!testRun: #TerniLapilliGameTest #test10XWinsWithTheThirdColumn stamp: 'IO 11/1/2020 21:13:23'!
ERROR!

!testRun: #TerniLapilliGameTest #test11XWinsWithTheFirstRow stamp: 'IO 11/1/2020 21:13:23'!
ERROR!

!testRun: #TerniLapilliGameTest #test12XWinsWithTheSecondRow stamp: 'IO 11/1/2020 21:13:23'!
ERROR!

!testRun: #TerniLapilliGameTest #test13XWinsWithTheThirdRow stamp: 'IO 11/1/2020 21:13:23'!
ERROR!

!testRun: #TerniLapilliGameTest #test14XWinsWithTheCrescentDiagonal stamp: 'IO 11/1/2020 21:13:23'!
ERROR!

!testRun: #TerniLapilliGameTest #test15XWinsWithTheDescendantDiagonal stamp: 'IO 11/1/2020 21:13:23'!
ERROR!

!testRun: #TerniLapilliGameTest #test16OWnis stamp: 'IO 11/1/2020 21:13:23'!
ERROR!

!testRun: #TerniLapilliGameTest #test17OCantStartPutting stamp: 'IO 11/1/2020 21:13:23'!
PASSED!

!testRun: #TerniLapilliGameTest #test18XCantPutTwiceInARow stamp: 'IO 11/1/2020 21:13:23'!
PASSED!

!testRun: #TerniLapilliGameTest #test19XCantMoveTwiceInARow stamp: 'IO 11/1/2020 21:13:23'!
ERROR!

!testRun: #TerniLapilliGameTest #test20OCantPutTwiceInARow stamp: 'IO 11/1/2020 21:13:23'!
ERROR!

!testRun: #TerniLapilliGameTest #test21OCantMoveTwiceInARow stamp: 'IO 11/1/2020 21:13:23'!
ERROR!

!testRun: #TerniLapilliGameTest #test22XCantMoveOnTheirFirstTurn stamp: 'IO 11/1/2020 21:13:23'!
PASSED!

!testRun: #TerniLapilliGameTest #test23XCantMoveOnTheirSecondTurn stamp: 'IO 11/1/2020 21:13:23'!
ERROR!

!testRun: #TerniLapilliGameTest #test24XCantMoveOnTheirThirdTurn stamp: 'IO 11/1/2020 21:13:23'!
ERROR!

!testRun: #TerniLapilliGameTest #test25OCantMoveOnTheirFirstTurn stamp: 'IO 11/1/2020 21:13:23'!
FAILURE!

!testRun: #TerniLapilliGameTest #test26OCantMoveOnTheirSecondTurn stamp: 'IO 11/1/2020 21:13:23'!
ERROR!

!testRun: #TerniLapilliGameTest #test27OCantMoveOnTheirThirdTurn stamp: 'IO 11/1/2020 21:13:23'!
ERROR!

!testRun: #TerniLapilliGameTest #test28XCantPutAfterTheirThirdTurn stamp: 'IO 11/1/2020 21:13:23'!
ERROR!

!testRun: #TerniLapilliGameTest #test29OCantPutAfterTheirThirdTurn stamp: 'IO 11/1/2020 21:13:23'!
ERROR!

!testRun: #TerniLapilliGameTest #test30OCantPutAfterXWon stamp: 'IO 11/1/2020 21:13:23'!
ERROR!

!testRun: #TerniLapilliGameTest #test31OCantMoveAfterXWon stamp: 'IO 11/1/2020 21:13:23'!
ERROR!

!testRun: #TerniLapilliGameTest #test32XCantMoveAfterOWon stamp: 'IO 11/1/2020 21:13:23'!
ERROR!

!testRun: #TerniLapilliGameTest #test33XCantPutAfterOWon stamp: 'IO 11/1/2020 21:13:23'!
ERROR!

!testRun: #TerniLapilliGameTest #test34XCantPutInAnOccupiedSpace stamp: 'IO 11/1/2020 21:13:23'!
ERROR!

!testRun: #TerniLapilliGameTest #test35OCantPutInAnOccupiedSpace stamp: 'IO 11/1/2020 21:13:23'!
ERROR!

!testRun: #TerniLapilliGameTest #test36XCantMoveToAnOccupiedSpace stamp: 'IO 11/1/2020 21:13:23'!
ERROR!

!testRun: #TerniLapilliGameTest #test37OCantMoveToAnOccupiedSpace stamp: 'IO 11/1/2020 21:13:23'!
ERROR!

!testRun: #TerniLapilliGameTest #test38XCantPutOutsideTheBoardUnderXAxis stamp: 'IO 11/1/2020 21:13:23'!
PASSED!

!testRun: #TerniLapilliGameTest #test39XCantPutOutsideTheBoardAboveXAxis stamp: 'IO 11/1/2020 21:13:23'!
PASSED!

!testRun: #TerniLapilliGameTest #test40XCantPutOutsideTheBoardUnderNorAboveTheYAxis stamp: 'IO 11/1/2020 21:13:23'!
PASSED!

!testRun: #TerniLapilliGameTest #test41OCantPutOutsideTheBoard stamp: 'IO 11/1/2020 21:13:23'!
FAILURE!

!testRun: #TerniLapilliGameTest #test42XCantMoveToOutsideTheBoard stamp: 'IO 11/1/2020 21:13:23'!
ERROR!

!testRun: #TerniLapilliGameTest #test43OCantMoveToOutsideTheBoard stamp: 'IO 11/1/2020 21:13:23'!
ERROR!

!testRun: #TerniLapilliGameTest #test44XCantMovePiecesThatDontBelongToThem stamp: 'IO 11/1/2020 21:13:23'!
ERROR!

!testRun: #TerniLapilliGameTest #test45OCantMovePiecesThatDontBelongToThem stamp: 'IO 11/1/2020 21:13:23'!
ERROR!

!testRun: #TerniLapilliGameTest #test46XCantMoveaPiecesOutsideItsNeighbors stamp: 'IO 11/1/2020 21:13:23'!
ERROR!

!testRun: #TerniLapilliGameTest #test47OCantMoveAPiecesOutsideItsNeighbors stamp: 'IO 11/1/2020 21:13:23'!
ERROR!
!OTurn class methodsFor: 'instance creation' stamp: 'IO 11/1/2020 21:13:55' prior: 50905324 overrides: 50903881!
nextStateWithXPieces: nextXPieces andOPieces: nextOPieces

	"create the next state of O's turn"
	
	(nextXPieces areInWinningPosition) ifTrue: [^GameOver nextStateWithXPieces: nextXPieces andOPieces: nextOPieces].
	(nextOPieces tokensAlreadyPut < 3) ifTrue: [^OPuts nextStateWithXPieces: nextXPieces andOPieces: nextOPieces].
	^OMoves nextStateWithXPieces: nextXPieces andOPieces: nextOPieces.

! !

!methodRemoval: TerniLapilliGameState class #nextStateWithXPieces:andOPieces:currentPlayerPieces:nextPlayerPieces:putsWith:movesWith: stamp: 'IO 11/1/2020 21:13:59'!
nextStateWithXPieces: nextXPieces andOPieces: nextOPieces currentPlayerPieces: currentPlayerPieces nextPlayerPieces: nextPlayerPieces putsWith: putClass movesWith: moveClass

	"create the next state of O's turn"
	
	(currentPlayerPieces areInWinningPosition) ifTrue: [^GameOver nextStateWithXPieces: nextXPieces andOPieces: nextOPieces].
	(nextPlayerPieces tokensAlreadyPut < 3) ifTrue: [^moveClass nextStateWithXPieces: nextXPieces andOPieces: nextOPieces].
	^putClass nextStateWithXPieces: nextXPieces andOPieces: nextOPieces.

!

!testRun: #TerniLapilliGameTest #test01XCanPutAPiece stamp: 'IO 11/1/2020 21:14:08'!
PASSED!

!testRun: #TerniLapilliGameTest #test02puttingDoesNotAffectOtherPositions stamp: 'IO 11/1/2020 21:14:08'!
PASSED!

!testRun: #TerniLapilliGameTest #test03XCanPutInOtherPositions stamp: 'IO 11/1/2020 21:14:08'!
PASSED!

!testRun: #TerniLapilliGameTest #test04OCanPut stamp: 'IO 11/1/2020 21:14:08'!
PASSED!

!testRun: #TerniLapilliGameTest #test05XCanMove stamp: 'IO 11/1/2020 21:14:08'!
PASSED!

!testRun: #TerniLapilliGameTest #test06OCanMove stamp: 'IO 11/1/2020 21:14:08'!
PASSED!

!testRun: #TerniLapilliGameTest #test07XWinsWithTheFirstColumn stamp: 'IO 11/1/2020 21:14:08'!
PASSED!

!testRun: #TerniLapilliGameTest #test08XHasntWonYet stamp: 'IO 11/1/2020 21:14:08'!
PASSED!

!testRun: #TerniLapilliGameTest #test09XWinsWithTheSecondColumn stamp: 'IO 11/1/2020 21:14:08'!
PASSED!

!testRun: #TerniLapilliGameTest #test10XWinsWithTheThirdColumn stamp: 'IO 11/1/2020 21:14:08'!
PASSED!

!testRun: #TerniLapilliGameTest #test11XWinsWithTheFirstRow stamp: 'IO 11/1/2020 21:14:08'!
PASSED!

!testRun: #TerniLapilliGameTest #test12XWinsWithTheSecondRow stamp: 'IO 11/1/2020 21:14:08'!
PASSED!

!testRun: #TerniLapilliGameTest #test13XWinsWithTheThirdRow stamp: 'IO 11/1/2020 21:14:08'!
PASSED!

!testRun: #TerniLapilliGameTest #test14XWinsWithTheCrescentDiagonal stamp: 'IO 11/1/2020 21:14:08'!
PASSED!

!testRun: #TerniLapilliGameTest #test15XWinsWithTheDescendantDiagonal stamp: 'IO 11/1/2020 21:14:08'!
PASSED!

!testRun: #TerniLapilliGameTest #test16OWnis stamp: 'IO 11/1/2020 21:14:08'!
PASSED!

!testRun: #TerniLapilliGameTest #test17OCantStartPutting stamp: 'IO 11/1/2020 21:14:08'!
PASSED!

!testRun: #TerniLapilliGameTest #test18XCantPutTwiceInARow stamp: 'IO 11/1/2020 21:14:08'!
PASSED!

!testRun: #TerniLapilliGameTest #test19XCantMoveTwiceInARow stamp: 'IO 11/1/2020 21:14:08'!
PASSED!

!testRun: #TerniLapilliGameTest #test20OCantPutTwiceInARow stamp: 'IO 11/1/2020 21:14:08'!
PASSED!

!testRun: #TerniLapilliGameTest #test21OCantMoveTwiceInARow stamp: 'IO 11/1/2020 21:14:08'!
PASSED!

!testRun: #TerniLapilliGameTest #test22XCantMoveOnTheirFirstTurn stamp: 'IO 11/1/2020 21:14:08'!
PASSED!

!testRun: #TerniLapilliGameTest #test23XCantMoveOnTheirSecondTurn stamp: 'IO 11/1/2020 21:14:08'!
PASSED!

!testRun: #TerniLapilliGameTest #test24XCantMoveOnTheirThirdTurn stamp: 'IO 11/1/2020 21:14:08'!
PASSED!

!testRun: #TerniLapilliGameTest #test25OCantMoveOnTheirFirstTurn stamp: 'IO 11/1/2020 21:14:08'!
PASSED!

!testRun: #TerniLapilliGameTest #test26OCantMoveOnTheirSecondTurn stamp: 'IO 11/1/2020 21:14:08'!
PASSED!

!testRun: #TerniLapilliGameTest #test27OCantMoveOnTheirThirdTurn stamp: 'IO 11/1/2020 21:14:08'!
PASSED!

!testRun: #TerniLapilliGameTest #test28XCantPutAfterTheirThirdTurn stamp: 'IO 11/1/2020 21:14:08'!
PASSED!

!testRun: #TerniLapilliGameTest #test29OCantPutAfterTheirThirdTurn stamp: 'IO 11/1/2020 21:14:08'!
PASSED!

!testRun: #TerniLapilliGameTest #test30OCantPutAfterXWon stamp: 'IO 11/1/2020 21:14:08'!
PASSED!

!testRun: #TerniLapilliGameTest #test31OCantMoveAfterXWon stamp: 'IO 11/1/2020 21:14:08'!
PASSED!

!testRun: #TerniLapilliGameTest #test32XCantMoveAfterOWon stamp: 'IO 11/1/2020 21:14:08'!
PASSED!

!testRun: #TerniLapilliGameTest #test33XCantPutAfterOWon stamp: 'IO 11/1/2020 21:14:08'!
PASSED!

!testRun: #TerniLapilliGameTest #test34XCantPutInAnOccupiedSpace stamp: 'IO 11/1/2020 21:14:08'!
PASSED!

!testRun: #TerniLapilliGameTest #test35OCantPutInAnOccupiedSpace stamp: 'IO 11/1/2020 21:14:08'!
PASSED!

!testRun: #TerniLapilliGameTest #test36XCantMoveToAnOccupiedSpace stamp: 'IO 11/1/2020 21:14:08'!
PASSED!

!testRun: #TerniLapilliGameTest #test37OCantMoveToAnOccupiedSpace stamp: 'IO 11/1/2020 21:14:08'!
PASSED!

!testRun: #TerniLapilliGameTest #test38XCantPutOutsideTheBoardUnderXAxis stamp: 'IO 11/1/2020 21:14:08'!
PASSED!

!testRun: #TerniLapilliGameTest #test39XCantPutOutsideTheBoardAboveXAxis stamp: 'IO 11/1/2020 21:14:08'!
PASSED!

!testRun: #TerniLapilliGameTest #test40XCantPutOutsideTheBoardUnderNorAboveTheYAxis stamp: 'IO 11/1/2020 21:14:08'!
PASSED!

!testRun: #TerniLapilliGameTest #test41OCantPutOutsideTheBoard stamp: 'IO 11/1/2020 21:14:08'!
PASSED!

!testRun: #TerniLapilliGameTest #test42XCantMoveToOutsideTheBoard stamp: 'IO 11/1/2020 21:14:08'!
PASSED!

!testRun: #TerniLapilliGameTest #test43OCantMoveToOutsideTheBoard stamp: 'IO 11/1/2020 21:14:08'!
PASSED!

!testRun: #TerniLapilliGameTest #test44XCantMovePiecesThatDontBelongToThem stamp: 'IO 11/1/2020 21:14:08'!
PASSED!

!testRun: #TerniLapilliGameTest #test45OCantMovePiecesThatDontBelongToThem stamp: 'IO 11/1/2020 21:14:08'!
PASSED!

!testRun: #TerniLapilliGameTest #test46XCantMoveaPiecesOutsideItsNeighbors stamp: 'IO 11/1/2020 21:14:08'!
PASSED!

!testRun: #TerniLapilliGameTest #test47OCantMoveAPiecesOutsideItsNeighbors stamp: 'IO 11/1/2020 21:14:08'!
PASSED!

!classRemoval: #TerniLapilliStateTransitorX stamp: 'IO 11/1/2020 21:14:23'!
TerniLapilliStateTransitor subclass: #TerniLapilliStateTransitorX
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Terni Lapilli'!

!classRemoval: #TerniLapilliStateTransitorO stamp: 'IO 11/1/2020 21:14:23'!
TerniLapilliStateTransitor subclass: #TerniLapilliStateTransitorO
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Terni Lapilli'!

!classRemoval: #TerniLapilliStateTransitor stamp: 'IO 11/1/2020 21:14:24'!
Object subclass: #TerniLapilliStateTransitor
	instanceVariableNames: 'xPieces oPieces nextPutStateClass nextMoveStateClass currentPlay nextPlayer'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Terni Lapilli'!

!testRun: #TerniLapilliGameTest #test01XCanPutAPiece stamp: 'IO 11/1/2020 21:14:27'!
PASSED!

!testRun: #TerniLapilliGameTest #test02puttingDoesNotAffectOtherPositions stamp: 'IO 11/1/2020 21:14:27'!
PASSED!

!testRun: #TerniLapilliGameTest #test03XCanPutInOtherPositions stamp: 'IO 11/1/2020 21:14:27'!
PASSED!

!testRun: #TerniLapilliGameTest #test04OCanPut stamp: 'IO 11/1/2020 21:14:27'!
PASSED!

!testRun: #TerniLapilliGameTest #test05XCanMove stamp: 'IO 11/1/2020 21:14:27'!
PASSED!

!testRun: #TerniLapilliGameTest #test06OCanMove stamp: 'IO 11/1/2020 21:14:27'!
PASSED!

!testRun: #TerniLapilliGameTest #test07XWinsWithTheFirstColumn stamp: 'IO 11/1/2020 21:14:27'!
PASSED!

!testRun: #TerniLapilliGameTest #test08XHasntWonYet stamp: 'IO 11/1/2020 21:14:27'!
PASSED!

!testRun: #TerniLapilliGameTest #test09XWinsWithTheSecondColumn stamp: 'IO 11/1/2020 21:14:27'!
PASSED!

!testRun: #TerniLapilliGameTest #test10XWinsWithTheThirdColumn stamp: 'IO 11/1/2020 21:14:27'!
PASSED!

!testRun: #TerniLapilliGameTest #test11XWinsWithTheFirstRow stamp: 'IO 11/1/2020 21:14:27'!
PASSED!

!testRun: #TerniLapilliGameTest #test12XWinsWithTheSecondRow stamp: 'IO 11/1/2020 21:14:27'!
PASSED!

!testRun: #TerniLapilliGameTest #test13XWinsWithTheThirdRow stamp: 'IO 11/1/2020 21:14:27'!
PASSED!

!testRun: #TerniLapilliGameTest #test14XWinsWithTheCrescentDiagonal stamp: 'IO 11/1/2020 21:14:27'!
PASSED!

!testRun: #TerniLapilliGameTest #test15XWinsWithTheDescendantDiagonal stamp: 'IO 11/1/2020 21:14:27'!
PASSED!

!testRun: #TerniLapilliGameTest #test16OWnis stamp: 'IO 11/1/2020 21:14:27'!
PASSED!

!testRun: #TerniLapilliGameTest #test17OCantStartPutting stamp: 'IO 11/1/2020 21:14:27'!
PASSED!

!testRun: #TerniLapilliGameTest #test18XCantPutTwiceInARow stamp: 'IO 11/1/2020 21:14:27'!
PASSED!

!testRun: #TerniLapilliGameTest #test19XCantMoveTwiceInARow stamp: 'IO 11/1/2020 21:14:27'!
PASSED!

!testRun: #TerniLapilliGameTest #test20OCantPutTwiceInARow stamp: 'IO 11/1/2020 21:14:27'!
PASSED!

!testRun: #TerniLapilliGameTest #test21OCantMoveTwiceInARow stamp: 'IO 11/1/2020 21:14:27'!
PASSED!

!testRun: #TerniLapilliGameTest #test22XCantMoveOnTheirFirstTurn stamp: 'IO 11/1/2020 21:14:27'!
PASSED!

!testRun: #TerniLapilliGameTest #test23XCantMoveOnTheirSecondTurn stamp: 'IO 11/1/2020 21:14:27'!
PASSED!

!testRun: #TerniLapilliGameTest #test24XCantMoveOnTheirThirdTurn stamp: 'IO 11/1/2020 21:14:27'!
PASSED!

!testRun: #TerniLapilliGameTest #test25OCantMoveOnTheirFirstTurn stamp: 'IO 11/1/2020 21:14:27'!
PASSED!

!testRun: #TerniLapilliGameTest #test26OCantMoveOnTheirSecondTurn stamp: 'IO 11/1/2020 21:14:27'!
PASSED!

!testRun: #TerniLapilliGameTest #test27OCantMoveOnTheirThirdTurn stamp: 'IO 11/1/2020 21:14:27'!
PASSED!

!testRun: #TerniLapilliGameTest #test28XCantPutAfterTheirThirdTurn stamp: 'IO 11/1/2020 21:14:27'!
PASSED!

!testRun: #TerniLapilliGameTest #test29OCantPutAfterTheirThirdTurn stamp: 'IO 11/1/2020 21:14:27'!
PASSED!

!testRun: #TerniLapilliGameTest #test30OCantPutAfterXWon stamp: 'IO 11/1/2020 21:14:27'!
PASSED!

!testRun: #TerniLapilliGameTest #test31OCantMoveAfterXWon stamp: 'IO 11/1/2020 21:14:27'!
PASSED!

!testRun: #TerniLapilliGameTest #test32XCantMoveAfterOWon stamp: 'IO 11/1/2020 21:14:27'!
PASSED!

!testRun: #TerniLapilliGameTest #test33XCantPutAfterOWon stamp: 'IO 11/1/2020 21:14:27'!
PASSED!

!testRun: #TerniLapilliGameTest #test34XCantPutInAnOccupiedSpace stamp: 'IO 11/1/2020 21:14:27'!
PASSED!

!testRun: #TerniLapilliGameTest #test35OCantPutInAnOccupiedSpace stamp: 'IO 11/1/2020 21:14:27'!
PASSED!

!testRun: #TerniLapilliGameTest #test36XCantMoveToAnOccupiedSpace stamp: 'IO 11/1/2020 21:14:27'!
PASSED!

!testRun: #TerniLapilliGameTest #test37OCantMoveToAnOccupiedSpace stamp: 'IO 11/1/2020 21:14:27'!
PASSED!

!testRun: #TerniLapilliGameTest #test38XCantPutOutsideTheBoardUnderXAxis stamp: 'IO 11/1/2020 21:14:27'!
PASSED!

!testRun: #TerniLapilliGameTest #test39XCantPutOutsideTheBoardAboveXAxis stamp: 'IO 11/1/2020 21:14:27'!
PASSED!

!testRun: #TerniLapilliGameTest #test40XCantPutOutsideTheBoardUnderNorAboveTheYAxis stamp: 'IO 11/1/2020 21:14:27'!
PASSED!

!testRun: #TerniLapilliGameTest #test41OCantPutOutsideTheBoard stamp: 'IO 11/1/2020 21:14:27'!
PASSED!

!testRun: #TerniLapilliGameTest #test42XCantMoveToOutsideTheBoard stamp: 'IO 11/1/2020 21:14:27'!
PASSED!

!testRun: #TerniLapilliGameTest #test43OCantMoveToOutsideTheBoard stamp: 'IO 11/1/2020 21:14:27'!
PASSED!

!testRun: #TerniLapilliGameTest #test44XCantMovePiecesThatDontBelongToThem stamp: 'IO 11/1/2020 21:14:27'!
PASSED!

!testRun: #TerniLapilliGameTest #test45OCantMovePiecesThatDontBelongToThem stamp: 'IO 11/1/2020 21:14:27'!
PASSED!

!testRun: #TerniLapilliGameTest #test46XCantMoveaPiecesOutsideItsNeighbors stamp: 'IO 11/1/2020 21:14:27'!
PASSED!

!testRun: #TerniLapilliGameTest #test47OCantMoveAPiecesOutsideItsNeighbors stamp: 'IO 11/1/2020 21:14:27'!
PASSED!

----SNAPSHOT----(1 November 2020 21:14:35) CuisUniversity-4384.image priorSource: 17727201!