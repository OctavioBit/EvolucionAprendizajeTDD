

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'EMI 11/2/2020 19:17:03'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'EMI 11/2/2020 19:17:03'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'EMI 11/2/2020 19:17:03'!
FAILURE!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'EMI 11/2/2020 19:17:03'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'EMI 11/2/2020 19:17:03'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'EMI 11/2/2020 19:17:03'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'EMI 11/2/2020 19:17:03'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'EMI 11/2/2020 19:17:03'!
FAILURE!
!ReceptiveAccount methodsFor: 'balance' stamp: 'EMI 11/2/2020 19:24:42' prior: 50889508!
balance

	^transactions sum: [ :aTransaction | (aTransaction class = Deposit) ifTrue:[aTransaction value] ifFalse:[aTransaction value negated ] ] ifEmpty: [ 0 ]! !
!ReceptiveAccount methodsFor: 'balance' stamp: 'EMI 11/2/2020 19:24:52' prior: 50889551!
balance

	^transactions sum: [ :aTransaction | (aTransaction isKindOf: Deposit) ifTrue:[aTransaction value] ifFalse:[aTransaction value negated ] ] ifEmpty: [ 0 ]! !

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'EMI 11/2/2020 19:25:06'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'EMI 11/2/2020 19:25:06'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'EMI 11/2/2020 19:25:06'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'EMI 11/2/2020 19:25:06'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'EMI 11/2/2020 19:25:06'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'EMI 11/2/2020 19:25:06'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'EMI 11/2/2020 19:25:06'!
PASSED!
!ReceptiveAccount methodsFor: 'balance' stamp: 'EMI 11/2/2020 19:25:33' prior: 50889559!
balance

	^transactions sum: [ :aTransaction | 
		(aTransaction isKindOf: Deposit) 
		ifTrue:[aTransaction value] 
		ifFalse:[aTransaction value negated ] 
	] ifEmpty: [ 0 ]! !
!ReceptiveAccount methodsFor: 'balance' stamp: 'EMI 11/2/2020 19:44:08' prior: 50889594!
balance

	^transactions sum: [ :aTransaction | 
		(aTransaction isKindOf: Deposit) 
		ifTrue:[aTransaction value] 
		ifFalse:[aTransaction value negated ] 
	] ifEmpty: [ 0 ]! !
!ReceptiveAccount methodsFor: 'balance' stamp: 'EMI 11/2/2020 19:44:59' prior: 50889603!
balance

	^transactions sum: [ :aTransaction | 
		(aTransaction isKindOf: Deposit) 
		ifTrue:[aTransaction value] 
		ifFalse:[aTransaction value negated ] 
	] ifEmpty: [ 0 ]! !
!Withdraw methodsFor: 'value' stamp: 'EMI 11/2/2020 19:50:13'!
valueForBalance

	^ value negated.! !
!Deposit methodsFor: 'value' stamp: 'EMI 11/2/2020 19:50:22'!
valueForBalance

	^ value! !
!AccountTransaction methodsFor: 'value' stamp: 'EMI 11/2/2020 19:50:29'!
valueForBalance

	self subclassResponsibility ! !
!ReceptiveAccount methodsFor: 'balance' stamp: 'EMI 11/2/2020 19:51:20' prior: 50889612!
balance

	^transactions sum: [ :aTransaction | 
		aTransaction valueForBalance 
		"(aTransaction isKindOf: Deposit) 
		ifTrue:[aTransaction value] 
		ifFalse:[aTransaction value negated ] "
	] ifEmpty: [ 0 ]! !
!ReceptiveAccount methodsFor: 'balance' stamp: 'EMI 11/2/2020 19:53:42' prior: 50889633!
balance

	^transactions sum: [ :aTransaction | 
		aTransaction valueForBalance 
	] ifEmpty: [ 0 ]! !
!ReceptiveAccount methodsFor: 'balance' stamp: 'EMI 11/2/2020 19:53:53' prior: 50889643!
balance

	^transactions sum: [ :aTransaction | aTransaction valueForBalance	] ifEmpty: [ 0 ]! !

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'EMI 11/2/2020 19:54:08'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'EMI 11/2/2020 19:54:08'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'EMI 11/2/2020 19:54:08'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'EMI 11/2/2020 19:54:08'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'EMI 11/2/2020 19:54:08'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'EMI 11/2/2020 19:54:08'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'EMI 11/2/2020 19:54:08'!
PASSED!
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'EMI 11/2/2020 19:55:15' prior: 50889369!
test07AccountKnowsItsTransactions 

	| account1 deposit1 |
	
	account1 := ReceptiveAccount new.
	
	deposit1 := Deposit register: 50 on: account1.
		
	self assert: 1 equals: account1 transactions size.
	self assert: (account1 transactions includes: deposit1).
! !

Object subclass: #Portfolio
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classDefinition: #Portfolio category: 'Portfolio-Ejercicio' stamp: 'EMI 11/2/2020 19:55:29'!
Object subclass: #Portfolio
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

TestCase subclass: #PortfolioTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classDefinition: #PortfolioTest category: 'Portfolio-Ejercicio' stamp: 'EMI 11/2/2020 19:55:39'!
TestCase subclass: #PortfolioTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!
!PortfolioTest methodsFor: 'nil' stamp: 'EMI 11/2/2020 19:56:58'!
test01NewPortfolioHasNoAccountsAndNoPortfolios! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'EMI 11/2/2020 20:00:01' prior: 50889716!
test01NewPortfolioHasNoAccountsAndNoPortfolios
	| portfolio |
	portfolio _ Portfolio new.
	
	self assert: portfolio numberOfAccounts equals: 0.
	self assert: portfolio numberOfPortfolios equals: 0.! !

!testRun: #PortfolioTest #test01NewPortfolioHasNoAccountsAndNoPortfolios stamp: 'EMI 11/2/2020 20:00:18'!
ERROR!

!testRun: #PortfolioTest #test01NewPortfolioHasNoAccountsAndNoPortfolios stamp: 'EMI 11/2/2020 20:00:18'!
ERROR!
!Portfolio methodsFor: 'testing' stamp: 'EMI 11/2/2020 20:00:51'!
numberOfAccounts
	self shouldBeImplemented.! !
!Portfolio methodsFor: 'testing' stamp: 'EMI 11/2/2020 20:01:00' prior: 50889737!
numberOfAccounts
	^0.! !
!Portfolio methodsFor: 'testing' stamp: 'EMI 11/2/2020 20:01:19'!
numberOfPortfolios
	self shouldBeImplemented.! !
!Portfolio methodsFor: 'testing' stamp: 'EMI 11/2/2020 20:01:25' prior: 50889745!
numberOfPortfolios
	^0.! !

!testRun: #PortfolioTest #test01NewPortfolioHasNoAccountsAndNoPortfolios stamp: 'EMI 11/2/2020 20:01:30'!
PASSED!
!PortfolioTest methodsFor: 'tests' stamp: 'EMI 11/2/2020 20:02:32'!
test02PortfolioAddNewAccount
	| portfolio |
	portfolio _ Portfolio new.
	
	self assert: portfolio numberOfAccounts equals: 0.
	self assert: portfolio numberOfPortfolios equals: 0.! !
!PortfolioTest methodsFor: 'tests' stamp: 'EMI 11/2/2020 20:03:10' prior: 50889757!
test02PortfolioAddNewAccount
	| portfolio |
	portfolio _ Portfolio new.
	
	portfolio add: ReceptiveAccount new.
	
	self assert: portfolio numberOfAccounts equals: 0.
	self assert: portfolio numberOfPortfolios equals: 0.! !
!PortfolioTest methodsFor: 'tests' stamp: 'EMI 11/2/2020 20:03:20' prior: 50889766!
test02PortfolioAddNewAccount
	| portfolio |
	portfolio _ Portfolio new.
	
	portfolio addAccount: ReceptiveAccount new.
	
	self assert: portfolio numberOfAccounts equals: 0.
	self assert: portfolio numberOfPortfolios equals: 0.! !
!PortfolioTest methodsFor: 'tests' stamp: 'EMI 11/2/2020 20:03:30' prior: 50889776!
test02PortfolioAddNewAccount
	| portfolio |
	portfolio _ Portfolio new.
	
	portfolio addAccount: ReceptiveAccount new.
	
	self assert: portfolio numberOfAccounts equals: 1.
	self assert: portfolio numberOfPortfolios equals: 0.! !
!AccountTransaction methodsFor: 'value' stamp: 'EMI 11/2/2020 20:30:57'!
calculateBalance

	self subclassResponsibility ! !

!methodRemoval: AccountTransaction #valueForBalance stamp: 'EMI 11/2/2020 20:30:57'!
valueForBalance

	self subclassResponsibility !
!AccountTransaction methodsFor: 'value' stamp: 'EMI 11/2/2020 20:31:23'!
calculateBalance: aBalance

	self subclassResponsibility ! !

!methodRemoval: AccountTransaction #calculateBalance stamp: 'EMI 11/2/2020 20:31:23'!
calculateBalance

	self subclassResponsibility !

!methodRemoval: Deposit #valueForBalance stamp: 'EMI 11/2/2020 20:31:38'!
valueForBalance

	^ value!
!Deposit methodsFor: 'value' stamp: 'EMI 11/2/2020 20:32:03' overrides: 50889805!
calculateBalance: aBalance
	^aBalance + value.! !
!Withdraw methodsFor: 'nil' stamp: 'EMI 11/2/2020 20:32:14' overrides: 50889805!
calculateBalance: aBalance
	^aBalance - value.! !

!methodRemoval: Withdraw #valueForBalance stamp: 'EMI 11/2/2020 20:32:23'!
valueForBalance

	^ value negated.!
!ReceptiveAccount methodsFor: 'balance' stamp: 'EMI 11/2/2020 20:33:55' prior: 50889649!
balance
	| balance |
	balance _ 0.
	transactions do: [ :aTransaction | balance _ aTransaction calculateBalance: balance	].
	^balance! !

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'EMI 11/2/2020 20:34:10'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'EMI 11/2/2020 20:34:10'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'EMI 11/2/2020 20:34:10'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'EMI 11/2/2020 20:34:10'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'EMI 11/2/2020 20:34:10'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'EMI 11/2/2020 20:34:10'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'EMI 11/2/2020 20:34:10'!
PASSED!
!PortfolioTest methodsFor: 'tests' stamp: 'EMI 11/2/2020 20:34:28' prior: 50889721!
test01NewPortfolioHasNoAccountsAndNoPortfolios
	| portfolio |
	portfolio _ Portfolio new.
	
	self assert: portfolio balance equals: 0.! !

!methodRemoval: Portfolio #numberOfAccounts stamp: 'EMI 11/2/2020 20:34:39'!
numberOfAccounts
	^0.!

!methodRemoval: Portfolio #numberOfPortfolios stamp: 'EMI 11/2/2020 20:34:43'!
numberOfPortfolios
	^0.!
!Portfolio methodsFor: 'testing' stamp: 'EMI 11/2/2020 20:34:52'!
balance
	^0.! !
!PortfolioTest methodsFor: 'tests' stamp: 'EMI 11/2/2020 20:36:22' prior: 50889786!
test02PortfolioAddNewAccount
	| portfolio |
	portfolio _ Portfolio new.
	
	self assert: (portfolio addAccount: ReceptiveAccount new).
	self assert: portfolio balance equals: 0.! !
!Portfolio methodsFor: 'nil' stamp: 'EMI 11/2/2020 20:36:50'!
addAccount
	^true.! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'EMI 11/2/2020 20:37:19'!
addAccount: anAccount
	^true.! !

!methodRemoval: Portfolio #addAccount stamp: 'EMI 11/2/2020 20:37:19'!
addAccount
	^true.!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'EMI 11/2/2020 20:37:25' prior: 50889893!
addAccount: anReceptiveAccount
	^true.! !

!testRun: #PortfolioTest #test01NewPortfolioHasNoAccountsAndNoPortfolios stamp: 'EMI 11/2/2020 20:37:37'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioAddNewAccount stamp: 'EMI 11/2/2020 20:37:37'!
PASSED!
!PortfolioTest methodsFor: 'tests' stamp: 'EMI 11/2/2020 20:38:21'!
test03PortfolioAddEmptyPortfolio
	| portfolio |
	portfolio _ Portfolio new.
	
	self assert: (portfolio addAccount: ReceptiveAccount new).
	self assert: portfolio balance equals: 0.! !
!PortfolioTest methodsFor: 'tests' stamp: 'EMI 11/2/2020 20:38:38' prior: 50889911!
test03PortfolioAddEmptyPortfolio
	| portfolio |
	portfolio _ Portfolio new.
	
	self assert: (portfolio addPortfolio: Portfolio new).
	self assert: portfolio balance equals: 0.! !
!PortfolioTest methodsFor: 'tests' stamp: 'EMI 11/2/2020 20:38:51'!
test02PortfolioAddEmptyAccount
	| portfolio |
	portfolio _ Portfolio new.
	
	self assert: (portfolio addAccount: ReceptiveAccount new).
	self assert: portfolio balance equals: 0.! !

!methodRemoval: PortfolioTest #test02PortfolioAddNewAccount stamp: 'EMI 11/2/2020 20:38:51'!
test02PortfolioAddNewAccount
	| portfolio |
	portfolio _ Portfolio new.
	
	self assert: (portfolio addAccount: ReceptiveAccount new).
	self assert: portfolio balance equals: 0.!

!testRun: #PortfolioTest #test01NewPortfolioHasNoAccountsAndNoPortfolios stamp: 'EMI 11/2/2020 20:38:57'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioAddEmptyAccount stamp: 'EMI 11/2/2020 20:38:57'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioAddEmptyPortfolio stamp: 'EMI 11/2/2020 20:38:57'!
ERROR!

!testRun: #PortfolioTest #test03PortfolioAddEmptyPortfolio stamp: 'EMI 11/2/2020 20:38:57'!
ERROR!
!Portfolio methodsFor: 'adding' stamp: 'EMI 11/2/2020 20:39:26'!
addPortfolio: aPortfolio 
	self shouldBeImplemented.! !
!Portfolio methodsFor: 'adding' stamp: 'EMI 11/2/2020 20:39:34' prior: 50889958!
addPortfolio: aPortfolio 
	^true.! !

!testRun: #PortfolioTest #test01NewPortfolioHasNoAccountsAndNoPortfolios stamp: 'EMI 11/2/2020 20:39:38'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioAddEmptyAccount stamp: 'EMI 11/2/2020 20:39:38'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioAddEmptyPortfolio stamp: 'EMI 11/2/2020 20:39:38'!
PASSED!
!PortfolioTest methodsFor: 'tests' stamp: 'EMI 11/2/2020 20:41:30' prior: 50889928!
test02PortfolioAddEmptyAccount
	| portfolio |
	portfolio _ Portfolio new.
	
	self assert: (portfolio addAccount: ReceptiveAccount new).
	self assert: portfolio balance equals: 0.! !
!PortfolioTest methodsFor: 'tests' stamp: 'EMI 11/2/2020 20:45:16'!
test04PortfolioHasNoRegisteredTransactions
	| portfolio |
	portfolio _ Portfolio new.
	
	self assert: (portfolio addPortfolio: Portfolio new).
	self assert: portfolio balance equals: 0.! !
!PortfolioTest methodsFor: 'tests' stamp: 'EMI 11/2/2020 20:55:16' prior: 50889985!
test04PortfolioHasNoRegisteredTransactions
	| portfolio account|
	portfolio _ Portfolio new.
	account _ ReceptiveAccount new.
	
	self assert: (portfolio addAccount: account).
	self deny: (portfolio hasRegistered: Deposit).
	self deny: (portfolio hasRegistered: Withdraw).
	self assert: portfolio balance equals: 0.! !

!testRun: #PortfolioTest #test01NewPortfolioHasNoAccountsAndNoPortfolios stamp: 'EMI 11/2/2020 20:55:26'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioAddEmptyAccount stamp: 'EMI 11/2/2020 20:55:26'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioAddEmptyPortfolio stamp: 'EMI 11/2/2020 20:55:26'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioHasNoRegisteredTransactions stamp: 'EMI 11/2/2020 20:55:26'!
ERROR!

!testRun: #PortfolioTest #test04PortfolioHasNoRegisteredTransactions stamp: 'EMI 11/2/2020 20:55:26'!
ERROR!
!Portfolio methodsFor: 'testing' stamp: 'EMI 11/2/2020 20:55:39'!
hasRegistered: aClass 
	self shouldBeImplemented.! !
!Portfolio methodsFor: 'testing' stamp: 'EMI 11/2/2020 20:56:15' prior: 50890023!
hasRegistered: aTransaction
	^false.! !

!testRun: #PortfolioTest #test01NewPortfolioHasNoAccountsAndNoPortfolios stamp: 'EMI 11/2/2020 20:56:23'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioAddEmptyAccount stamp: 'EMI 11/2/2020 20:56:23'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioAddEmptyPortfolio stamp: 'EMI 11/2/2020 20:56:23'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioHasNoRegisteredTransactions stamp: 'EMI 11/2/2020 20:56:23'!
PASSED!
!PortfolioTest methodsFor: 'tests' stamp: 'EMI 11/2/2020 20:59:42'!
test05PortfolioHasOneRegisteredTransaction
	| portfolio account|
	portfolio _ Portfolio new.
	account _ ReceptiveAccount new.
	Deposit register: 100 on: account.
	
	self assert: (portfolio addAccount: account).
	self assert: (portfolio hasRegistered: Deposit).
	self deny: (portfolio hasRegistered: Withdraw).
	self assert: portfolio balance equals: 100.! !

!testRun: #PortfolioTest #test05PortfolioHasOneRegisteredTransaction stamp: 'EMI 11/2/2020 21:00:03'!
FAILURE!

!testRun: #PortfolioTest #test05PortfolioHasOneRegisteredTransaction stamp: 'EMI 11/2/2020 21:00:03'!
FAILURE!

| account |
	
	account := ReceptiveAccount new.!

| account |
	
	account := ReceptiveAccount new.

	self assert: 0 equals: account balance.!
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'EMI 11/2/2020 21:03:09' prior: 50889308!
test01ReceptiveAccountHaveZeroAsBalanceWhenCreated 

	| account |
	
	account := ReceptiveAccount new.
	self halt.
	self assert: 0 equals: account balance.
! !

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'EMI 11/2/2020 21:03:12'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'EMI 11/2/2020 21:03:12'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'EMI 11/2/2020 21:03:12'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'EMI 11/2/2020 21:03:12'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'EMI 11/2/2020 21:03:12'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'EMI 11/2/2020 21:03:12'!
PASSED!
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'EMI 11/2/2020 21:03:47' prior: 50890071!
test01ReceptiveAccountHaveZeroAsBalanceWhenCreated 

	| account |
	
	account := ReceptiveAccount new.
	self assert: 0 equals: account balance.
! !
!Portfolio methodsFor: 'nil' stamp: 'EMI 11/2/2020 21:04:06' overrides: 16896425!
initialize! !

Object subclass: #Portfolio
	instanceVariableNames: 'accounts'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classDefinition: #Portfolio category: 'Portfolio-Ejercicio' stamp: 'EMI 11/2/2020 21:04:16'!
Object subclass: #Portfolio
	instanceVariableNames: 'accounts'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!
!Portfolio methodsFor: 'initialization' stamp: 'EMI 11/2/2020 21:04:53' prior: 50890110 overrides: 16896425!
initialize
	accounts _ OrderedCollection new.! !
!Portfolio methodsFor: 'adding' stamp: 'EMI 11/2/2020 21:05:28' prior: 50889900!
addAccount: anReceptiveAccount
	accounts add: anReceptiveAccount.
	^true.! !
!Portfolio methodsFor: 'adding' stamp: 'EMI 11/2/2020 21:05:36' prior: 50890131!
addAccount: aReceptiveAccount
	accounts add: aReceptiveAccount.
	^true.! !
!Portfolio methodsFor: 'testing' stamp: 'EMI 11/2/2020 21:06:32' prior: 50889877!
balance
	^accounts sum: [:anAccount | anAccount balance].! !
!Portfolio methodsFor: 'testing' stamp: 'EMI 11/2/2020 21:07:48' prior: 50890028!
hasRegistered: aTransaction
	^accounts detect: [:anAccount | anAccount hasRegistered: aTransaction ].! !

!testRun: #PortfolioTest #test01NewPortfolioHasNoAccountsAndNoPortfolios stamp: 'EMI 11/2/2020 21:08:20'!
ERROR!

!testRun: #PortfolioTest #test02PortfolioAddEmptyAccount stamp: 'EMI 11/2/2020 21:08:20'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioAddEmptyPortfolio stamp: 'EMI 11/2/2020 21:08:20'!
ERROR!

!testRun: #PortfolioTest #test04PortfolioHasNoRegisteredTransactions stamp: 'EMI 11/2/2020 21:08:20'!
ERROR!

!testRun: #PortfolioTest #test05PortfolioHasOneRegisteredTransaction stamp: 'EMI 11/2/2020 21:08:20'!
ERROR!

!testRun: #PortfolioTest #test01NewPortfolioHasNoAccountsAndNoPortfolios stamp: 'EMI 11/2/2020 21:08:25'!
ERROR!
!Portfolio methodsFor: 'testing' stamp: 'EMI 11/2/2020 21:08:41' prior: 50890141!
balance
	^accounts sum: [:anAccount | anAccount balance] ifEmpty:[0].! !
!Portfolio methodsFor: 'testing' stamp: 'EMI 11/2/2020 21:11:16' prior: 50890146!
hasRegistered: aTransaction
	^accounts detect: [:anAccount | anAccount hasRegistered: aTransaction ] ifNone:[^false].! !
!Portfolio methodsFor: 'testing' stamp: 'EMI 11/2/2020 21:12:09' prior: 50890178!
hasRegistered: aTransaction
	accounts detect: [:anAccount | anAccount hasRegistered: aTransaction ] ifNone:[^false].
	^true.! !

!testRun: #PortfolioTest #test01NewPortfolioHasNoAccountsAndNoPortfolios stamp: 'EMI 11/2/2020 21:12:18'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioAddEmptyAccount stamp: 'EMI 11/2/2020 21:12:18'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioAddEmptyPortfolio stamp: 'EMI 11/2/2020 21:12:18'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioHasNoRegisteredTransactions stamp: 'EMI 11/2/2020 21:12:18'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasOneRegisteredTransaction stamp: 'EMI 11/2/2020 21:12:18'!
FAILURE!

!testRun: #PortfolioTest #test05PortfolioHasOneRegisteredTransaction stamp: 'EMI 11/2/2020 21:12:18'!
FAILURE!

!testRun: #PortfolioTest #test01NewPortfolioHasNoAccountsAndNoPortfolios stamp: 'EMI 11/2/2020 21:12:36'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioAddEmptyAccount stamp: 'EMI 11/2/2020 21:12:36'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioAddEmptyPortfolio stamp: 'EMI 11/2/2020 21:12:36'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioHasNoRegisteredTransactions stamp: 'EMI 11/2/2020 21:12:36'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasOneRegisteredTransaction stamp: 'EMI 11/2/2020 21:12:36'!
FAILURE!

!testRun: #PortfolioTest #test05PortfolioHasOneRegisteredTransaction stamp: 'EMI 11/2/2020 21:12:36'!
FAILURE!

!testRun: #PortfolioTest #test01NewPortfolioHasNoAccountsAndNoPortfolios stamp: 'EMI 11/2/2020 21:12:52'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioAddEmptyAccount stamp: 'EMI 11/2/2020 21:12:52'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioAddEmptyPortfolio stamp: 'EMI 11/2/2020 21:12:52'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioHasNoRegisteredTransactions stamp: 'EMI 11/2/2020 21:12:52'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasOneRegisteredTransaction stamp: 'EMI 11/2/2020 21:12:52'!
FAILURE!

!testRun: #PortfolioTest #test05PortfolioHasOneRegisteredTransaction stamp: 'EMI 11/2/2020 21:12:52'!
FAILURE!
!PortfolioTest methodsFor: 'tests' stamp: 'EMI 11/2/2020 21:16:07' prior: 50890045!
test05PortfolioHasOneRegisteredTransaction
	| portfolio account transaction|
	portfolio _ Portfolio new.
	account _ ReceptiveAccount new.
	transaction _ Deposit register: 100 on: account.
	
	self assert: (portfolio addAccount: account).
	self assert: (portfolio hasRegistered: transaction).
	self deny: (portfolio hasRegistered: Withdraw).
	self assert: portfolio balance equals: 100.! !

!testRun: #PortfolioTest #test01NewPortfolioHasNoAccountsAndNoPortfolios stamp: 'EMI 11/2/2020 21:16:16'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioAddEmptyAccount stamp: 'EMI 11/2/2020 21:16:16'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioAddEmptyPortfolio stamp: 'EMI 11/2/2020 21:16:16'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioHasNoRegisteredTransactions stamp: 'EMI 11/2/2020 21:16:16'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasOneRegisteredTransaction stamp: 'EMI 11/2/2020 21:16:16'!
PASSED!

----SNAPSHOT----(2 November 2020 21:16:37) CuisUniversity-4383.image priorSource: 17842575!

----QUIT----(2 November 2020 21:58:31) CuisUniversity-4383.image priorSource: 17876284!

----STARTUP---- (6 November 2020 18:05:17) as /home/doraserver/CuisUniversity/CuisUniversity-4383.image!

!PortfolioTest methodsFor: 'tests' stamp: 'EMI 11/6/2020 18:12:01' prior: 50889994!
test04PortfolioHasNoRegisteredTransactions
	| portfolio account|
	portfolio _ Portfolio new.
	account _ ReceptiveAccount new.
	
	self assert: (portfolio addAccount: account).
	self deny: (portfolio hasRegistered: Deposit).
	self deny: (portfolio hasRegistered: Withdraw).
	self assert: portfolio balance equals: 0.! !
!PortfolioTest methodsFor: 'tests' stamp: 'EMI 11/6/2020 18:12:35' prior: 50890294!
test04PortfolioHasNoRegisteredTransactions
	| portfolio account|
	portfolio _ Portfolio new.
	account _ ReceptiveAccount new.
	
	self assert: (portfolio addAccount: account).
	self deny: (portfolio hasRegistered: Deposit).
	self deny: (portfolio hasRegistered: Withdraw).
	self assert: portfolio balance equals: 0.! !
!PortfolioTest methodsFor: 'tests' stamp: 'EMI 11/6/2020 18:13:09' prior: 50890307!
test04PortfolioHasNoRegisteredTransactions
	| portfolio account|
	portfolio _ Portfolio new.
	account _ ReceptiveAccount new.
	
	self assert: (portfolio addAccount: account).
	self deny: (portfolio hasRegistered: (Deposit for: 100)).
	self deny: (portfolio hasRegistered: (Withdraw for: 100)).
	self assert: portfolio balance equals: 0.! !
!PortfolioTest methodsFor: 'tests' stamp: 'EMI 11/6/2020 18:13:46' prior: 50890253!
test05PortfolioHasOneRegisteredTransaction
	| portfolio account transaction|
	portfolio _ Portfolio new.
	account _ ReceptiveAccount new.
	transaction _ Deposit register: 100 on: account.
	
	self assert: (portfolio addAccount: account).
	self assert: (portfolio hasRegistered: transaction).
	self deny: (portfolio hasRegistered: (Withdraw for: 100)).
	self assert: portfolio balance equals: 100.! !
!PortfolioTest methodsFor: 'tests' stamp: 'EMI 11/6/2020 18:14:22' prior: 50890334!
test05PortfolioHasOneRegisteredTransaction
	| portfolio account transaction|
	portfolio _ Portfolio new.
	account _ ReceptiveAccount new.
	transaction _ Deposit register: 100 on: account.
	
	self assert: (portfolio addAccount: account).
	self assert: (portfolio hasRegistered: transaction).
	self assert: portfolio balance equals: 100.! !

!testRun: #PortfolioTest #test01NewPortfolioHasNoAccountsAndNoPortfolios stamp: 'EMI 11/6/2020 18:14:26'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioAddEmptyAccount stamp: 'EMI 11/6/2020 18:14:26'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioAddEmptyPortfolio stamp: 'EMI 11/6/2020 18:14:26'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioHasNoRegisteredTransactions stamp: 'EMI 11/6/2020 18:14:26'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasOneRegisteredTransaction stamp: 'EMI 11/6/2020 18:14:26'!
PASSED!
!PortfolioTest methodsFor: 'tests' stamp: 'EMI 11/6/2020 18:17:56' prior: 50890320!
test04PortfolioHasNoRegisteredTransactions
	| portfolio account|
	portfolio _ Portfolio new.
	"account _ ReceptiveAccount new.
	
	self assert: (portfolio addAccount: account)."
	self deny: (portfolio hasRegistered: (Deposit for: 100)).
	self deny: (portfolio hasRegistered: (Withdraw for: 100)).
	self assert: portfolio balance equals: 0.! !

!testRun: #PortfolioTest #test01NewPortfolioHasNoAccountsAndNoPortfolios stamp: 'EMI 11/6/2020 18:18:01'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioAddEmptyAccount stamp: 'EMI 11/6/2020 18:18:01'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioAddEmptyPortfolio stamp: 'EMI 11/6/2020 18:18:01'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioHasNoRegisteredTransactions stamp: 'EMI 11/6/2020 18:18:01'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasOneRegisteredTransaction stamp: 'EMI 11/6/2020 18:18:01'!
PASSED!
!PortfolioTest methodsFor: 'tests' stamp: 'EMI 11/6/2020 18:18:11' prior: 50890380!
test04PortfolioHasNoRegisteredTransactions
	| portfolio |
	portfolio _ Portfolio new.

	self deny: (portfolio hasRegistered: (Deposit for: 100)).
	self deny: (portfolio hasRegistered: (Withdraw for: 100)).
	self assert: portfolio balance equals: 0.! !
!PortfolioTest methodsFor: 'tests' stamp: 'EMI 11/6/2020 18:20:51'!
test05PortfolioHasOneAccountWithOneRegisteredTransaction
	| portfolio account transaction|
	portfolio _ Portfolio new.
	account _ ReceptiveAccount new.
	transaction _ Deposit register: 100 on: account.
	
	self assert: (portfolio addAccount: account).
	self assert: (portfolio hasRegistered: transaction).
	self assert: portfolio balance equals: 100.! !

!methodRemoval: PortfolioTest #test05PortfolioHasOneRegisteredTransaction stamp: 'EMI 11/6/2020 18:20:51'!
test05PortfolioHasOneRegisteredTransaction
	| portfolio account transaction|
	portfolio _ Portfolio new.
	account _ ReceptiveAccount new.
	transaction _ Deposit register: 100 on: account.
	
	self assert: (portfolio addAccount: account).
	self assert: (portfolio hasRegistered: transaction).
	self assert: portfolio balance equals: 100.!
!PortfolioTest methodsFor: 'tests' stamp: 'EMI 11/6/2020 18:22:54'!
test06PortfolioMoreThanOneAccountWithRegisteredTransactions
	| portfolio account transaction|
	portfolio _ Portfolio new.
	account _ ReceptiveAccount new.
	transaction _ Deposit register: 100 on: account.
	
	self assert: (portfolio addAccount: account).
	self assert: (portfolio hasRegistered: transaction).
	self assert: portfolio balance equals: 100.! !
!PortfolioTest methodsFor: 'tests' stamp: 'EMI 11/6/2020 18:24:19' prior: 50890449!
test06PortfolioMoreThanOneAccountWithRegisteredTransactions
	| portfolio account1 account2 transaction transaction2|
	portfolio _ Portfolio new.
	account1 _ ReceptiveAccount new.
	account2 _ ReceptiveAccount new.
	transaction _ Deposit register: 100 on: account1.
	transaction2 _ Deposit register: 50 on: account2.
	
	self assert: (portfolio addAccount: account1).
	self assert: (portfolio addAccount: account2).
	self assert: (portfolio hasRegistered: transaction).
	self assert: (portfolio hasRegistered: transaction2).
	self assert: portfolio balance equals: 150.! !

!testRun: #PortfolioTest #test01NewPortfolioHasNoAccountsAndNoPortfolios stamp: 'EMI 11/6/2020 18:24:38'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioAddEmptyAccount stamp: 'EMI 11/6/2020 18:24:38'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioAddEmptyPortfolio stamp: 'EMI 11/6/2020 18:24:38'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioHasNoRegisteredTransactions stamp: 'EMI 11/6/2020 18:24:38'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasOneAccountWithOneRegisteredTransaction stamp: 'EMI 11/6/2020 18:24:38'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioMoreThanOneAccountWithRegisteredTransactions stamp: 'EMI 11/6/2020 18:24:38'!
PASSED!
!PortfolioTest methodsFor: 'tests' stamp: 'EMI 11/6/2020 18:27:41'!
test07EmptyPortfolioHasNoTransactions
	| portfolio |
	portfolio _ Portfolio new.

	self assert: portfolio transactions isEmpty.
	self assert: portfolio balance equals: 0.! !

!testRun: #PortfolioTest #test01NewPortfolioHasNoAccountsAndNoPortfolios stamp: 'EMI 11/6/2020 18:27:58'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioAddEmptyAccount stamp: 'EMI 11/6/2020 18:27:58'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioAddEmptyPortfolio stamp: 'EMI 11/6/2020 18:27:58'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioHasNoRegisteredTransactions stamp: 'EMI 11/6/2020 18:27:58'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasOneAccountWithOneRegisteredTransaction stamp: 'EMI 11/6/2020 18:27:58'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioMoreThanOneAccountWithRegisteredTransactions stamp: 'EMI 11/6/2020 18:27:58'!
PASSED!

!testRun: #PortfolioTest #test07EmptyPortfolioHasNoTransactions stamp: 'EMI 11/6/2020 18:27:58'!
ERROR!

!testRun: #PortfolioTest #test07EmptyPortfolioHasNoTransactions stamp: 'EMI 11/6/2020 18:27:58'!
ERROR!
!Portfolio methodsFor: 'accessing' stamp: 'EMI 11/6/2020 18:28:10'!
transactions
	self shouldBeImplemented.! !
!Portfolio methodsFor: 'accessing' stamp: 'EMI 11/6/2020 18:28:29' prior: 50890541!
transactions
	^OrderedCollection new.! !

!testRun: #PortfolioTest #test07EmptyPortfolioHasNoTransactions stamp: 'EMI 11/6/2020 18:28:31'!
PASSED!

!testRun: #PortfolioTest #test01NewPortfolioHasNoAccountsAndNoPortfolios stamp: 'EMI 11/6/2020 18:28:34'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioAddEmptyAccount stamp: 'EMI 11/6/2020 18:28:34'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioAddEmptyPortfolio stamp: 'EMI 11/6/2020 18:28:34'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioHasNoRegisteredTransactions stamp: 'EMI 11/6/2020 18:28:34'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasOneAccountWithOneRegisteredTransaction stamp: 'EMI 11/6/2020 18:28:34'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioMoreThanOneAccountWithRegisteredTransactions stamp: 'EMI 11/6/2020 18:28:34'!
PASSED!

!testRun: #PortfolioTest #test07EmptyPortfolioHasNoTransactions stamp: 'EMI 11/6/2020 18:28:34'!
PASSED!
!PortfolioTest methodsFor: 'tests' stamp: 'EMI 11/6/2020 18:29:18'!
test08PortfolioWithOneEmptyAccountHasNoTransactions
	| portfolio |
	portfolio _ Portfolio new.

	self assert: portfolio transactions isEmpty.
	self assert: portfolio balance equals: 0.! !
!PortfolioTest methodsFor: 'tests' stamp: 'EMI 11/6/2020 18:30:04'!
test08PortfolioWithOneAccountHasOneTransaction
	| portfolio |
	portfolio _ Portfolio new.

	self assert: portfolio transactions isEmpty.
	self assert: portfolio balance equals: 0.! !

!methodRemoval: PortfolioTest #test08PortfolioWithOneEmptyAccountHasNoTransactions stamp: 'EMI 11/6/2020 18:30:05'!
test08PortfolioWithOneEmptyAccountHasNoTransactions
	| portfolio |
	portfolio _ Portfolio new.

	self assert: portfolio transactions isEmpty.
	self assert: portfolio balance equals: 0.!
!PortfolioTest methodsFor: 'tests' stamp: 'EMI 11/6/2020 18:32:00' prior: 50890585!
test08PortfolioWithOneAccountHasOneTransaction
	| portfolio account |
	portfolio _ Portfolio new.
	account _  ReceptiveAccount new.
	Deposit register: 100 on: account.
	
	self assert: (portfolio addAccount: account).
	self assert: portfolio size equals: 1.
	self assert: portfolio balance equals: 0.! !
!PortfolioTest methodsFor: 'tests' stamp: 'EMI 11/6/2020 18:32:08' prior: 50890603!
test08PortfolioWithOneAccountHasOneTransaction
	| portfolio account |
	portfolio _ Portfolio new.
	account _  ReceptiveAccount new.
	Deposit register: 100 on: account.
	
	self assert: (portfolio addAccount: account).
	self assert: portfolio size equals: 1.
	self assert: portfolio balance equals: 100.! !

!testRun: #PortfolioTest #test01NewPortfolioHasNoAccountsAndNoPortfolios stamp: 'EMI 11/6/2020 18:32:41'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioAddEmptyAccount stamp: 'EMI 11/6/2020 18:32:41'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioAddEmptyPortfolio stamp: 'EMI 11/6/2020 18:32:41'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioHasNoRegisteredTransactions stamp: 'EMI 11/6/2020 18:32:41'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasOneAccountWithOneRegisteredTransaction stamp: 'EMI 11/6/2020 18:32:41'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioMoreThanOneAccountWithRegisteredTransactions stamp: 'EMI 11/6/2020 18:32:41'!
PASSED!

!testRun: #PortfolioTest #test07EmptyPortfolioHasNoTransactions stamp: 'EMI 11/6/2020 18:32:41'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioWithOneAccountHasOneTransaction stamp: 'EMI 11/6/2020 18:32:41'!
ERROR!

!testRun: #PortfolioTest #test08PortfolioWithOneAccountHasOneTransaction stamp: 'EMI 11/6/2020 18:32:41'!
ERROR!
!PortfolioTest methodsFor: 'tests' stamp: 'EMI 11/6/2020 18:33:09' prior: 50890616!
test08PortfolioWithOneAccountHasOneTransaction
	| portfolio account |
	portfolio _ Portfolio new.
	account _  ReceptiveAccount new.
	Deposit register: 100 on: account.
	
	self assert: (portfolio addAccount: account).
	self assert: portfolio transactions size equals: 1.
	self assert: portfolio balance equals: 100.! !

!testRun: #PortfolioTest #test01NewPortfolioHasNoAccountsAndNoPortfolios stamp: 'EMI 11/6/2020 18:33:11'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioAddEmptyAccount stamp: 'EMI 11/6/2020 18:33:11'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioAddEmptyPortfolio stamp: 'EMI 11/6/2020 18:33:11'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioHasNoRegisteredTransactions stamp: 'EMI 11/6/2020 18:33:11'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasOneAccountWithOneRegisteredTransaction stamp: 'EMI 11/6/2020 18:33:11'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioMoreThanOneAccountWithRegisteredTransactions stamp: 'EMI 11/6/2020 18:33:11'!
PASSED!

!testRun: #PortfolioTest #test07EmptyPortfolioHasNoTransactions stamp: 'EMI 11/6/2020 18:33:11'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioWithOneAccountHasOneTransaction stamp: 'EMI 11/6/2020 18:33:11'!
FAILURE!

!testRun: #PortfolioTest #test08PortfolioWithOneAccountHasOneTransaction stamp: 'EMI 11/6/2020 18:33:11'!
FAILURE!
!PortfolioTest methodsFor: 'tests' stamp: 'EMI 11/6/2020 18:34:24' prior: 50890660!
test08PortfolioWithOneAccountHasOneTransaction
	| portfolio account deposit |
	portfolio _ Portfolio new.
	account _  ReceptiveAccount new.
	deposit _ Deposit register: 100 on: account.
	
	self assert: (portfolio addAccount: account).
	self assert: portfolio transactions size equals: 1.
	self assert: (portfolio transactions includes: deposit).
	self assert: portfolio balance equals: 100.! !

!testRun: #PortfolioTest #test01NewPortfolioHasNoAccountsAndNoPortfolios stamp: 'EMI 11/6/2020 18:34:34'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioAddEmptyAccount stamp: 'EMI 11/6/2020 18:34:34'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioAddEmptyPortfolio stamp: 'EMI 11/6/2020 18:34:34'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioHasNoRegisteredTransactions stamp: 'EMI 11/6/2020 18:34:34'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasOneAccountWithOneRegisteredTransaction stamp: 'EMI 11/6/2020 18:34:34'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioMoreThanOneAccountWithRegisteredTransactions stamp: 'EMI 11/6/2020 18:34:34'!
PASSED!

!testRun: #PortfolioTest #test07EmptyPortfolioHasNoTransactions stamp: 'EMI 11/6/2020 18:34:34'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioWithOneAccountHasOneTransaction stamp: 'EMI 11/6/2020 18:34:34'!
FAILURE!

!testRun: #PortfolioTest #test08PortfolioWithOneAccountHasOneTransaction stamp: 'EMI 11/6/2020 18:34:34'!
FAILURE!
!Portfolio methodsFor: 'accessing' stamp: 'EMI 11/6/2020 18:35:47' prior: 50890545!
transactions
	^OrderedCollection with: accounts first .! !
!Portfolio methodsFor: 'accessing' stamp: 'EMI 11/6/2020 18:36:44' prior: 50890752!
transactions
	^accounts first transactions.! !

!testRun: #PortfolioTest #test01NewPortfolioHasNoAccountsAndNoPortfolios stamp: 'EMI 11/6/2020 18:38:22'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioAddEmptyAccount stamp: 'EMI 11/6/2020 18:38:22'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioAddEmptyPortfolio stamp: 'EMI 11/6/2020 18:38:22'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioHasNoRegisteredTransactions stamp: 'EMI 11/6/2020 18:38:22'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasOneAccountWithOneRegisteredTransaction stamp: 'EMI 11/6/2020 18:38:22'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioMoreThanOneAccountWithRegisteredTransactions stamp: 'EMI 11/6/2020 18:38:22'!
PASSED!

!testRun: #PortfolioTest #test07EmptyPortfolioHasNoTransactions stamp: 'EMI 11/6/2020 18:38:22'!
ERROR!

!testRun: #PortfolioTest #test08PortfolioWithOneAccountHasOneTransaction stamp: 'EMI 11/6/2020 18:38:22'!
PASSED!

!testRun: #PortfolioTest #test07EmptyPortfolioHasNoTransactions stamp: 'EMI 11/6/2020 18:38:22'!
ERROR!

!testRun: #PortfolioTest #test01NewPortfolioHasNoAccountsAndNoPortfolios stamp: 'EMI 11/6/2020 18:39:43'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioAddEmptyAccount stamp: 'EMI 11/6/2020 18:39:43'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioAddEmptyPortfolio stamp: 'EMI 11/6/2020 18:39:43'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioHasNoRegisteredTransactions stamp: 'EMI 11/6/2020 18:39:43'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasOneAccountWithOneRegisteredTransaction stamp: 'EMI 11/6/2020 18:39:43'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioMoreThanOneAccountWithRegisteredTransactions stamp: 'EMI 11/6/2020 18:39:43'!
PASSED!

!testRun: #PortfolioTest #test07EmptyPortfolioHasNoTransactions stamp: 'EMI 11/6/2020 18:39:43'!
ERROR!

!testRun: #PortfolioTest #test08PortfolioWithOneAccountHasOneTransaction stamp: 'EMI 11/6/2020 18:39:43'!
PASSED!

!testRun: #PortfolioTest #test07EmptyPortfolioHasNoTransactions stamp: 'EMI 11/6/2020 18:39:43'!
ERROR!

!testRun: #PortfolioTest #test07EmptyPortfolioHasNoTransactions stamp: 'EMI 11/6/2020 18:39:54'!
ERROR!
!Portfolio methodsFor: 'accessing' stamp: 'EMI 11/6/2020 18:40:55' prior: 50890757!
transactions
	^accounts isEmpty 
	ifTrue:[accounts] 
	ifFalse:[accounts first transactions].! !

!testRun: #PortfolioTest #test01NewPortfolioHasNoAccountsAndNoPortfolios stamp: 'EMI 11/6/2020 18:41:02'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioAddEmptyAccount stamp: 'EMI 11/6/2020 18:41:02'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioAddEmptyPortfolio stamp: 'EMI 11/6/2020 18:41:02'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioHasNoRegisteredTransactions stamp: 'EMI 11/6/2020 18:41:02'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasOneAccountWithOneRegisteredTransaction stamp: 'EMI 11/6/2020 18:41:02'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioMoreThanOneAccountWithRegisteredTransactions stamp: 'EMI 11/6/2020 18:41:03'!
PASSED!

!testRun: #PortfolioTest #test07EmptyPortfolioHasNoTransactions stamp: 'EMI 11/6/2020 18:41:03'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioWithOneAccountHasOneTransaction stamp: 'EMI 11/6/2020 18:41:03'!
PASSED!
!PortfolioTest methodsFor: 'tests' stamp: 'EMI 11/6/2020 18:41:41'!
test09PortfolioWithMoreThanOneAccountMoreThanOneTransactions
	| portfolio account deposit |
	portfolio _ Portfolio new.
	account _  ReceptiveAccount new.
	deposit _ Deposit register: 100 on: account.
	
	self assert: (portfolio addAccount: account).
	self assert: portfolio transactions size equals: 1.
	self assert: (portfolio transactions includes: deposit).
	self assert: portfolio balance equals: 100.! !
!PortfolioTest methodsFor: 'tests' stamp: 'EMI 11/6/2020 18:42:03'!
test09PortfolioWithMoreThanOneAccountHasMoreThanOneTransactions
	| portfolio account deposit |
	portfolio _ Portfolio new.
	account _  ReceptiveAccount new.
	deposit _ Deposit register: 100 on: account.
	
	self assert: (portfolio addAccount: account).
	self assert: portfolio transactions size equals: 1.
	self assert: (portfolio transactions includes: deposit).
	self assert: portfolio balance equals: 100.! !

!methodRemoval: PortfolioTest #test09PortfolioWithMoreThanOneAccountMoreThanOneTransactions stamp: 'EMI 11/6/2020 18:42:03'!
test09PortfolioWithMoreThanOneAccountMoreThanOneTransactions
	| portfolio account deposit |
	portfolio _ Portfolio new.
	account _  ReceptiveAccount new.
	deposit _ Deposit register: 100 on: account.
	
	self assert: (portfolio addAccount: account).
	self assert: portfolio transactions size equals: 1.
	self assert: (portfolio transactions includes: deposit).
	self assert: portfolio balance equals: 100.!
!PortfolioTest methodsFor: 'tests' stamp: 'EMI 11/6/2020 18:42:13' prior: 50890877!
test09PortfolioWithMoreThanOneAccountHasMoreThanOneTransactions
	| portfolio account1 deposit |
	portfolio _ Portfolio new.
	account1 _  ReceptiveAccount new.
	deposit _ Deposit register: 100 on: account1.
	
	self assert: (portfolio addAccount: account1).
	self assert: portfolio transactions size equals: 1.
	self assert: (portfolio transactions includes: deposit).
	self assert: portfolio balance equals: 100.! !
!PortfolioTest methodsFor: 'tests' stamp: 'EMI 11/6/2020 18:43:24' prior: 50890910!
test09PortfolioWithMoreThanOneAccountHasMoreThanOneTransactions
	| portfolio account1 account2 deposit withdraw |
	portfolio _ Portfolio new.
	account1 _  ReceptiveAccount new.
	account2 _  ReceptiveAccount new.
	deposit _ Deposit register: 100 on: account1.
	withdraw _ Withdraw register: 50 on: account2.
	
	self assert: (portfolio addAccount: account1).
	self assert: (portfolio addAccount: account2).
	self assert: portfolio transactions size equals: 2.
	self assert: (portfolio transactions includes: deposit).
	self assert: (portfolio transactions includes: withdraw ).
	self assert: portfolio balance equals: 50.! !

!testRun: #PortfolioTest #test01NewPortfolioHasNoAccountsAndNoPortfolios stamp: 'EMI 11/6/2020 18:43:39'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioAddEmptyAccount stamp: 'EMI 11/6/2020 18:43:39'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioAddEmptyPortfolio stamp: 'EMI 11/6/2020 18:43:39'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioHasNoRegisteredTransactions stamp: 'EMI 11/6/2020 18:43:39'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasOneAccountWithOneRegisteredTransaction stamp: 'EMI 11/6/2020 18:43:39'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioMoreThanOneAccountWithRegisteredTransactions stamp: 'EMI 11/6/2020 18:43:39'!
PASSED!

!testRun: #PortfolioTest #test07EmptyPortfolioHasNoTransactions stamp: 'EMI 11/6/2020 18:43:39'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioWithOneAccountHasOneTransaction stamp: 'EMI 11/6/2020 18:43:39'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithMoreThanOneAccountHasMoreThanOneTransactions stamp: 'EMI 11/6/2020 18:43:39'!
FAILURE!

!testRun: #PortfolioTest #test09PortfolioWithMoreThanOneAccountHasMoreThanOneTransactions stamp: 'EMI 11/6/2020 18:43:39'!
FAILURE!
!Portfolio methodsFor: 'accessing' stamp: 'EMI 11/6/2020 18:46:08' prior: 50890828!
transactions
	| res |
	res _ OrderedCollection new.
	accounts do: [:anAccount | res add: anAccount transactions ].
	^res! !
!Portfolio methodsFor: 'accessing' stamp: 'EMI 11/6/2020 18:47:17' prior: 50890985!
transactions
	| res |
	res _ OrderedCollection new.
	accounts do: [:anAccount | anAccount transactions do: [:aTransaction | res add: aTransaction] ].
	^res! !

!testRun: #PortfolioTest #test01NewPortfolioHasNoAccountsAndNoPortfolios stamp: 'EMI 11/6/2020 18:47:24'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioAddEmptyAccount stamp: 'EMI 11/6/2020 18:47:24'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioAddEmptyPortfolio stamp: 'EMI 11/6/2020 18:47:24'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioHasNoRegisteredTransactions stamp: 'EMI 11/6/2020 18:47:24'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasOneAccountWithOneRegisteredTransaction stamp: 'EMI 11/6/2020 18:47:24'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioMoreThanOneAccountWithRegisteredTransactions stamp: 'EMI 11/6/2020 18:47:24'!
PASSED!

!testRun: #PortfolioTest #test07EmptyPortfolioHasNoTransactions stamp: 'EMI 11/6/2020 18:47:24'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioWithOneAccountHasOneTransaction stamp: 'EMI 11/6/2020 18:47:24'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithMoreThanOneAccountHasMoreThanOneTransactions stamp: 'EMI 11/6/2020 18:47:24'!
PASSED!
!Portfolio methodsFor: 'accessing' stamp: 'EMI 11/6/2020 18:48:39' prior: 50890992!
transactions
	| res |
	res _ OrderedCollection new.
	accounts do: [:anAccount | res addAll: anAccount transactions  ].
	^res! !

!testRun: #PortfolioTest #test01NewPortfolioHasNoAccountsAndNoPortfolios stamp: 'EMI 11/6/2020 18:48:54'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioAddEmptyAccount stamp: 'EMI 11/6/2020 18:48:54'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioAddEmptyPortfolio stamp: 'EMI 11/6/2020 18:48:54'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioHasNoRegisteredTransactions stamp: 'EMI 11/6/2020 18:48:54'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasOneAccountWithOneRegisteredTransaction stamp: 'EMI 11/6/2020 18:48:54'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioMoreThanOneAccountWithRegisteredTransactions stamp: 'EMI 11/6/2020 18:48:54'!
PASSED!

!testRun: #PortfolioTest #test07EmptyPortfolioHasNoTransactions stamp: 'EMI 11/6/2020 18:48:54'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioWithOneAccountHasOneTransaction stamp: 'EMI 11/6/2020 18:48:54'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithMoreThanOneAccountHasMoreThanOneTransactions stamp: 'EMI 11/6/2020 18:48:54'!
PASSED!
!PortfolioTest methodsFor: 'tests' stamp: 'EMI 11/6/2020 18:52:51'!
test10PortfolioHasOnePortfolioWithAnAccount
	| portfolio account1 account2 deposit withdraw |
	portfolio _ Portfolio new.
	account1 _  ReceptiveAccount new.
	account2 _  ReceptiveAccount new.
	deposit _ Deposit register: 100 on: account1.
	withdraw _ Withdraw register: 50 on: account2.
	
	self assert: (portfolio addAccount: account1).
	self assert: (portfolio addAccount: account2).
	self assert: portfolio transactions size equals: 2.
	self assert: (portfolio transactions includes: deposit).
	self assert: (portfolio transactions includes: withdraw ).
	self assert: portfolio balance equals: 50.! !
!PortfolioTest methodsFor: 'tests' stamp: 'EMI 11/6/2020 18:55:24' prior: 50891071!
test10PortfolioHasOnePortfolioWithAnAccount
	| portfolio portfolio_child account |
	portfolio _ Portfolio new.
	portfolio_child _ Portfolio new.
	account _  ReceptiveAccount new.
	
	self assert: (portfolio_child addAccount: account).
	self assert: (portfolio addPortfolio: portfolio_child).
	 
! !

Object subclass: #Portfolio
	instanceVariableNames: 'accounts portfolios'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classDefinition: #Portfolio category: 'Portfolio-Ejercicio' stamp: 'EMI 11/6/2020 18:55:53'!
Object subclass: #Portfolio
	instanceVariableNames: 'accounts portfolios'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!
!PortfolioTest methodsFor: 'tests' stamp: 'EMI 11/6/2020 18:58:49' prior: 50891093!
test10PortfolioHasOnePortfolioWithAnAccount
	| portfolio portfolio_child account |
	portfolio _ Portfolio new.
	portfolio_child _ Portfolio new.
	account _  ReceptiveAccount new.
	Deposit register: 100 on: account. 
	
	self assert: (portfolio_child addAccount: account).
	self assert: (portfolio addPortfolio: portfolio_child).
	self assert: portfolio_child balance equals: 100.
	self assert: portfolio balance equals: 100.
	 
! !

!testRun: #PortfolioTest #test01NewPortfolioHasNoAccountsAndNoPortfolios stamp: 'EMI 11/6/2020 18:59:24'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioAddEmptyAccount stamp: 'EMI 11/6/2020 18:59:24'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioAddEmptyPortfolio stamp: 'EMI 11/6/2020 18:59:24'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioHasNoRegisteredTransactions stamp: 'EMI 11/6/2020 18:59:24'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasOneAccountWithOneRegisteredTransaction stamp: 'EMI 11/6/2020 18:59:24'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioMoreThanOneAccountWithRegisteredTransactions stamp: 'EMI 11/6/2020 18:59:24'!
PASSED!

!testRun: #PortfolioTest #test07EmptyPortfolioHasNoTransactions stamp: 'EMI 11/6/2020 18:59:24'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioWithOneAccountHasOneTransaction stamp: 'EMI 11/6/2020 18:59:24'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithMoreThanOneAccountHasMoreThanOneTransactions stamp: 'EMI 11/6/2020 18:59:24'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioHasOnePortfolioWithAnAccount stamp: 'EMI 11/6/2020 18:59:24'!
FAILURE!

!testRun: #PortfolioTest #test10PortfolioHasOnePortfolioWithAnAccount stamp: 'EMI 11/6/2020 18:59:24'!
FAILURE!
!Portfolio methodsFor: 'adding' stamp: 'EMI 11/6/2020 18:59:58' prior: 50889963!
addPortfolio: aPortfolio 
	portfolios add: aPortfolio.
	^true.! !
!Portfolio methodsFor: 'testing' stamp: 'EMI 11/6/2020 19:00:28' prior: 50890173!
balance
	^accounts sum: [:anAccount | anAccount balance] ifEmpty:[0].! !

Object subclass: #Portfolio
	instanceVariableNames: 'accounts portfolio_child'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classDefinition: #Portfolio category: 'Portfolio-Ejercicio' stamp: 'EMI 11/6/2020 19:00:40'!
Object subclass: #Portfolio
	instanceVariableNames: 'accounts portfolio_child'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!
!Portfolio methodsFor: 'adding' stamp: 'EMI 11/6/2020 19:00:54' prior: 50891174!
addPortfolio: aPortfolio 
	portfolio_child _ aPortfolio .
	^true.! !
!Portfolio methodsFor: 'testing' stamp: 'EMI 11/6/2020 19:02:19' prior: 50891179!
balance
	^accounts sum: [:anAccount | anAccount balance] ifEmpty:[0] + (portfolio_child ifNil: [0] ifNotNil: [portfolio_child balance]).! !
!Portfolio methodsFor: 'initialization' stamp: 'EMI 11/6/2020 19:02:33' prior: 50890126 overrides: 16896425!
initialize
	accounts _ OrderedCollection new.
	portfolio_child _ nil.! !

!testRun: #PortfolioTest #test01NewPortfolioHasNoAccountsAndNoPortfolios stamp: 'EMI 11/6/2020 19:04:35'!
ERROR!

!testRun: #PortfolioTest #test02PortfolioAddEmptyAccount stamp: 'EMI 11/6/2020 19:04:35'!
ERROR!

!testRun: #PortfolioTest #test03PortfolioAddEmptyPortfolio stamp: 'EMI 11/6/2020 19:04:35'!
ERROR!

!testRun: #PortfolioTest #test04PortfolioHasNoRegisteredTransactions stamp: 'EMI 11/6/2020 19:04:35'!
ERROR!

!testRun: #PortfolioTest #test05PortfolioHasOneAccountWithOneRegisteredTransaction stamp: 'EMI 11/6/2020 19:04:35'!
ERROR!

!testRun: #PortfolioTest #test06PortfolioMoreThanOneAccountWithRegisteredTransactions stamp: 'EMI 11/6/2020 19:04:35'!
ERROR!

!testRun: #PortfolioTest #test07EmptyPortfolioHasNoTransactions stamp: 'EMI 11/6/2020 19:04:35'!
ERROR!

!testRun: #PortfolioTest #test08PortfolioWithOneAccountHasOneTransaction stamp: 'EMI 11/6/2020 19:04:35'!
ERROR!

!testRun: #PortfolioTest #test09PortfolioWithMoreThanOneAccountHasMoreThanOneTransactions stamp: 'EMI 11/6/2020 19:04:35'!
ERROR!

!testRun: #PortfolioTest #test10PortfolioHasOnePortfolioWithAnAccount stamp: 'EMI 11/6/2020 19:04:35'!
ERROR!

!testRun: #PortfolioTest #test01NewPortfolioHasNoAccountsAndNoPortfolios stamp: 'EMI 11/6/2020 19:04:45'!
ERROR!

!testRun: #PortfolioTest #test01NewPortfolioHasNoAccountsAndNoPortfolios stamp: 'EMI 11/6/2020 19:05:05'!
ERROR!
!Portfolio methodsFor: 'testing' stamp: 'EMI 11/6/2020 19:05:28' prior: 50891202!
balance
	^(accounts sum: [:anAccount | anAccount balance] ifEmpty:[0]) + (portfolio_child ifNil: [0] ifNotNil: [portfolio_child balance]).! !

!testRun: #PortfolioTest #test01NewPortfolioHasNoAccountsAndNoPortfolios stamp: 'EMI 11/6/2020 19:05:30'!
PASSED!

!testRun: #PortfolioTest #test01NewPortfolioHasNoAccountsAndNoPortfolios stamp: 'EMI 11/6/2020 19:05:33'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioAddEmptyAccount stamp: 'EMI 11/6/2020 19:05:33'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioAddEmptyPortfolio stamp: 'EMI 11/6/2020 19:05:33'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioHasNoRegisteredTransactions stamp: 'EMI 11/6/2020 19:05:33'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasOneAccountWithOneRegisteredTransaction stamp: 'EMI 11/6/2020 19:05:33'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioMoreThanOneAccountWithRegisteredTransactions stamp: 'EMI 11/6/2020 19:05:33'!
PASSED!

!testRun: #PortfolioTest #test07EmptyPortfolioHasNoTransactions stamp: 'EMI 11/6/2020 19:05:33'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioWithOneAccountHasOneTransaction stamp: 'EMI 11/6/2020 19:05:33'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithMoreThanOneAccountHasMoreThanOneTransactions stamp: 'EMI 11/6/2020 19:05:33'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioHasOnePortfolioWithAnAccount stamp: 'EMI 11/6/2020 19:05:33'!
PASSED!
!PortfolioTest methodsFor: 'tests' stamp: 'EMI 11/6/2020 19:06:25'!
test10PortfolioHasOneChildPortfolioWithAnAccountAndADeposit
	| portfolio portfolio_child account |
	portfolio _ Portfolio new.
	portfolio_child _ Portfolio new.
	account _  ReceptiveAccount new.
	Deposit register: 100 on: account. 
	
	self assert: (portfolio_child addAccount: account).
	self assert: (portfolio addPortfolio: portfolio_child).
	self assert: portfolio_child balance equals: 100.
	self assert: portfolio balance equals: 100.
	 
! !

!methodRemoval: PortfolioTest #test10PortfolioHasOnePortfolioWithAnAccount stamp: 'EMI 11/6/2020 19:06:25'!
test10PortfolioHasOnePortfolioWithAnAccount
	| portfolio portfolio_child account |
	portfolio _ Portfolio new.
	portfolio_child _ Portfolio new.
	account _  ReceptiveAccount new.
	Deposit register: 100 on: account. 
	
	self assert: (portfolio_child addAccount: account).
	self assert: (portfolio addPortfolio: portfolio_child).
	self assert: portfolio_child balance equals: 100.
	self assert: portfolio balance equals: 100.
	 
!
!PortfolioTest methodsFor: 'tests' stamp: 'EMI 11/6/2020 19:06:50'!
test11PortfolioHasMoreThanOneChildPortfolioWithAnAccountAndADeposit
	| portfolio portfolio_child account |
	portfolio _ Portfolio new.
	portfolio_child _ Portfolio new.
	account _  ReceptiveAccount new.
	Deposit register: 100 on: account. 
	
	self assert: (portfolio_child addAccount: account).
	self assert: (portfolio addPortfolio: portfolio_child).
	self assert: portfolio_child balance equals: 100.
	self assert: portfolio balance equals: 100.
	 
! !
!PortfolioTest methodsFor: 'tests' stamp: 'EMI 11/6/2020 19:07:14' prior: 50891337!
test11PortfolioHasMoreThanOneChildPortfolioWithAnAccountAndADeposit
	| portfolio portfolio_child  portfolio_child2 account |
	portfolio _ Portfolio new.
	portfolio_child _ Portfolio new.
	portfolio_child2 _ Portfolio new.
	account _  ReceptiveAccount new.
	Deposit register: 100 on: account. 
	
	self assert: (portfolio_child addAccount: account).
	self assert: (portfolio addPortfolio: portfolio_child).
	self assert: (portfolio addPortfolio: portfolio_child2).
	self assert: portfolio_child balance equals: 100.
	self assert: portfolio balance equals: 100.
	 
! !

!testRun: #PortfolioTest #test01NewPortfolioHasNoAccountsAndNoPortfolios stamp: 'EMI 11/6/2020 19:07:31'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioAddEmptyAccount stamp: 'EMI 11/6/2020 19:07:31'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioAddEmptyPortfolio stamp: 'EMI 11/6/2020 19:07:31'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioHasNoRegisteredTransactions stamp: 'EMI 11/6/2020 19:07:31'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasOneAccountWithOneRegisteredTransaction stamp: 'EMI 11/6/2020 19:07:31'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioMoreThanOneAccountWithRegisteredTransactions stamp: 'EMI 11/6/2020 19:07:31'!
PASSED!

!testRun: #PortfolioTest #test07EmptyPortfolioHasNoTransactions stamp: 'EMI 11/6/2020 19:07:31'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioWithOneAccountHasOneTransaction stamp: 'EMI 11/6/2020 19:07:31'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithMoreThanOneAccountHasMoreThanOneTransactions stamp: 'EMI 11/6/2020 19:07:31'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioHasOneChildPortfolioWithAnAccountAndADeposit stamp: 'EMI 11/6/2020 19:07:31'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioHasMoreThanOneChildPortfolioWithAnAccountAndADeposit stamp: 'EMI 11/6/2020 19:07:31'!
FAILURE!

!testRun: #PortfolioTest #test11PortfolioHasMoreThanOneChildPortfolioWithAnAccountAndADeposit stamp: 'EMI 11/6/2020 19:07:31'!
FAILURE!

Object subclass: #Portfolio
	instanceVariableNames: 'accounts portfolios'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classDefinition: #Portfolio category: 'Portfolio-Ejercicio' stamp: 'EMI 11/6/2020 19:07:50'!
Object subclass: #Portfolio
	instanceVariableNames: 'accounts portfolios'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!
!Portfolio methodsFor: 'adding' stamp: 'EMI 11/6/2020 19:08:01' prior: 50891197!
addPortfolio: aPortfolio 
	portfolios add: aPortfolio .
	^true.! !
!Portfolio methodsFor: 'testing' stamp: 'EMI 11/6/2020 19:08:42' prior: 50891258!
balance
	^(accounts sum: [:anAccount | anAccount balance] ifEmpty:[0]) + (portfolios sum: [:aPortfolio | aPortfolio balance]).! !
!Portfolio methodsFor: 'testing' stamp: 'EMI 11/6/2020 19:08:57' prior: 50891437!
balance
	^(accounts sum: [:anAccount | anAccount balance] ifEmpty:[0]) + (portfolios sum: [:aPortfolio | aPortfolio balance] ifEmpty: [0]).! !

!testRun: #PortfolioTest #test01NewPortfolioHasNoAccountsAndNoPortfolios stamp: 'EMI 11/6/2020 19:09:02'!
ERROR!

!testRun: #PortfolioTest #test02PortfolioAddEmptyAccount stamp: 'EMI 11/6/2020 19:09:02'!
ERROR!

!testRun: #PortfolioTest #test03PortfolioAddEmptyPortfolio stamp: 'EMI 11/6/2020 19:09:02'!
ERROR!

!testRun: #PortfolioTest #test04PortfolioHasNoRegisteredTransactions stamp: 'EMI 11/6/2020 19:09:02'!
ERROR!

!testRun: #PortfolioTest #test05PortfolioHasOneAccountWithOneRegisteredTransaction stamp: 'EMI 11/6/2020 19:09:02'!
ERROR!

!testRun: #PortfolioTest #test06PortfolioMoreThanOneAccountWithRegisteredTransactions stamp: 'EMI 11/6/2020 19:09:02'!
ERROR!

!testRun: #PortfolioTest #test07EmptyPortfolioHasNoTransactions stamp: 'EMI 11/6/2020 19:09:02'!
ERROR!

!testRun: #PortfolioTest #test08PortfolioWithOneAccountHasOneTransaction stamp: 'EMI 11/6/2020 19:09:02'!
ERROR!

!testRun: #PortfolioTest #test09PortfolioWithMoreThanOneAccountHasMoreThanOneTransactions stamp: 'EMI 11/6/2020 19:09:02'!
ERROR!

!testRun: #PortfolioTest #test10PortfolioHasOneChildPortfolioWithAnAccountAndADeposit stamp: 'EMI 11/6/2020 19:09:02'!
ERROR!

!testRun: #PortfolioTest #test11PortfolioHasMoreThanOneChildPortfolioWithAnAccountAndADeposit stamp: 'EMI 11/6/2020 19:09:02'!
ERROR!
!Portfolio methodsFor: 'initialization' stamp: 'EMI 11/6/2020 19:09:40' prior: 50891210 overrides: 16896425!
initialize
	accounts _ OrderedCollection new.
	portfolios _ OrderedCollection new.! !

!testRun: #PortfolioTest #test01NewPortfolioHasNoAccountsAndNoPortfolios stamp: 'EMI 11/6/2020 19:09:43'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioAddEmptyAccount stamp: 'EMI 11/6/2020 19:09:43'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioAddEmptyPortfolio stamp: 'EMI 11/6/2020 19:09:43'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioHasNoRegisteredTransactions stamp: 'EMI 11/6/2020 19:09:43'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasOneAccountWithOneRegisteredTransaction stamp: 'EMI 11/6/2020 19:09:43'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioMoreThanOneAccountWithRegisteredTransactions stamp: 'EMI 11/6/2020 19:09:43'!
PASSED!

!testRun: #PortfolioTest #test07EmptyPortfolioHasNoTransactions stamp: 'EMI 11/6/2020 19:09:43'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioWithOneAccountHasOneTransaction stamp: 'EMI 11/6/2020 19:09:43'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithMoreThanOneAccountHasMoreThanOneTransactions stamp: 'EMI 11/6/2020 19:09:43'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioHasOneChildPortfolioWithAnAccountAndADeposit stamp: 'EMI 11/6/2020 19:09:43'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioHasMoreThanOneChildPortfolioWithAnAccountAndADeposit stamp: 'EMI 11/6/2020 19:09:43'!
PASSED!
!PortfolioTest methodsFor: 'tests' stamp: 'EMI 11/6/2020 19:12:04' prior: 50891354!
test11PortfolioHasMoreThanOneChildPortfolioWithAnAccountAndADeposit
	| portfolio portfolio_child  portfolio_child2 account account2|
	portfolio _ Portfolio new.
	portfolio_child _ Portfolio new.
	portfolio_child2 _ Portfolio new.
	account _  ReceptiveAccount new.
	account2 _  ReceptiveAccount new.
	Deposit register: 100 on: account.
	Deposit register: 200 on: account2.
	
	self assert: (portfolio_child addAccount: account).
	self assert: (portfolio_child2 addAccount: account2).
	self assert: (portfolio addPortfolio: portfolio_child).
	self assert: (portfolio addPortfolio: portfolio_child2).
	self assert: portfolio_child balance equals: 200.
	self assert: portfolio balance equals: 200.
	 
! !
!PortfolioTest methodsFor: 'tests' stamp: 'EMI 11/6/2020 19:12:20' prior: 50891539!
test11PortfolioHasMoreThanOneChildPortfolioWithAnAccountAndADeposit
	| portfolio portfolio_child  portfolio_child2 account account2|
	portfolio _ Portfolio new.
	portfolio_child _ Portfolio new.
	portfolio_child2 _ Portfolio new.
	account _  ReceptiveAccount new.
	account2 _  ReceptiveAccount new.
	Deposit register: 100 on: account.
	Deposit register: 100 on: account2.
	
	self assert: (portfolio_child addAccount: account).
	self assert: (portfolio_child2 addAccount: account2).
	self assert: (portfolio addPortfolio: portfolio_child).
	self assert: (portfolio addPortfolio: portfolio_child2).
	self assert: portfolio_child balance equals: 200.
	self assert: portfolio balance equals: 200.
	 
! !

!testRun: #PortfolioTest #test01NewPortfolioHasNoAccountsAndNoPortfolios stamp: 'EMI 11/6/2020 19:12:23'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioAddEmptyAccount stamp: 'EMI 11/6/2020 19:12:23'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioAddEmptyPortfolio stamp: 'EMI 11/6/2020 19:12:23'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioHasNoRegisteredTransactions stamp: 'EMI 11/6/2020 19:12:23'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasOneAccountWithOneRegisteredTransaction stamp: 'EMI 11/6/2020 19:12:23'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioMoreThanOneAccountWithRegisteredTransactions stamp: 'EMI 11/6/2020 19:12:23'!
PASSED!

!testRun: #PortfolioTest #test07EmptyPortfolioHasNoTransactions stamp: 'EMI 11/6/2020 19:12:23'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioWithOneAccountHasOneTransaction stamp: 'EMI 11/6/2020 19:12:23'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithMoreThanOneAccountHasMoreThanOneTransactions stamp: 'EMI 11/6/2020 19:12:23'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioHasOneChildPortfolioWithAnAccountAndADeposit stamp: 'EMI 11/6/2020 19:12:23'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioHasMoreThanOneChildPortfolioWithAnAccountAndADeposit stamp: 'EMI 11/6/2020 19:12:23'!
FAILURE!

!testRun: #PortfolioTest #test11PortfolioHasMoreThanOneChildPortfolioWithAnAccountAndADeposit stamp: 'EMI 11/6/2020 19:12:23'!
FAILURE!
!PortfolioTest methodsFor: 'tests' stamp: 'EMI 11/6/2020 19:12:58' prior: 50891564!
test11PortfolioHasMoreThanOneChildPortfolioWithAnAccountAndADeposit
	| portfolio portfolio_child  portfolio_child2 account account2|
	portfolio _ Portfolio new.
	portfolio_child _ Portfolio new.
	portfolio_child2 _ Portfolio new.
	account _  ReceptiveAccount new.
	account2 _  ReceptiveAccount new.
	Deposit register: 100 on: account.
	Deposit register: 100 on: account2.
	
	self assert: (portfolio_child addAccount: account).
	self assert: (portfolio_child2 addAccount: account2).
	self assert: (portfolio addPortfolio: portfolio_child).
	self assert: (portfolio addPortfolio: portfolio_child2).
	self assert: portfolio_child balance equals: 100.
	self assert: portfolio_child2 balance equals: 100.
	self assert: portfolio balance equals: 200.
	 
! !

!testRun: #PortfolioTest #test01NewPortfolioHasNoAccountsAndNoPortfolios stamp: 'EMI 11/6/2020 19:13:03'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioAddEmptyAccount stamp: 'EMI 11/6/2020 19:13:03'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioAddEmptyPortfolio stamp: 'EMI 11/6/2020 19:13:03'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioHasNoRegisteredTransactions stamp: 'EMI 11/6/2020 19:13:03'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasOneAccountWithOneRegisteredTransaction stamp: 'EMI 11/6/2020 19:13:03'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioMoreThanOneAccountWithRegisteredTransactions stamp: 'EMI 11/6/2020 19:13:03'!
PASSED!

!testRun: #PortfolioTest #test07EmptyPortfolioHasNoTransactions stamp: 'EMI 11/6/2020 19:13:03'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioWithOneAccountHasOneTransaction stamp: 'EMI 11/6/2020 19:13:03'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithMoreThanOneAccountHasMoreThanOneTransactions stamp: 'EMI 11/6/2020 19:13:03'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioHasOneChildPortfolioWithAnAccountAndADeposit stamp: 'EMI 11/6/2020 19:13:03'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioHasMoreThanOneChildPortfolioWithAnAccountAndADeposit stamp: 'EMI 11/6/2020 19:13:03'!
PASSED!
!PortfolioTest methodsFor: 'tests' stamp: 'EMI 11/6/2020 19:26:56' prior: 50891304!
test10PortfolioHasOneChildPortfolioWithAnAccountAndADeposit
	| portfolio portfolio_child account d|
	portfolio _ Portfolio new.
	portfolio_child _ Portfolio new.
	account _  ReceptiveAccount new.
	d _ Deposit register: 100 on: account. 
	
	self assert: (portfolio_child addAccount: account).
	self assert: (portfolio addPortfolio: portfolio_child).
	self assert: portfolio_child balance equals: 100.
	self assert: portfolio balance equals: 100.
	self assert: (portfolio hasRegistered: d).
	self assert: (portfolio transactions size) equals: 1.
	self assert: (portfolio transactions includes: d).
	 
! !
!PortfolioTest methodsFor: 'tests' stamp: 'EMI 11/6/2020 19:27:44' prior: 50891701!
test10PortfolioHasOneChildPortfolioWithAnAccountAndADeposit
	| portfolio portfolio_child account|
	portfolio _ Portfolio new.
	portfolio_child _ Portfolio new.
	account _  ReceptiveAccount new.
	Deposit register: 100 on: account. 
	
	self assert: (portfolio_child addAccount: account).
	self assert: (portfolio addPortfolio: portfolio_child).
	self assert: portfolio_child balance equals: 100.
	self assert: portfolio balance equals: 100.

	 
! !
!PortfolioTest methodsFor: 'tests' stamp: 'EMI 11/6/2020 19:28:02'!
test12PortfolioHasOneChildPortfolioWithAnAccountAndADepositRegistered
	| portfolio portfolio_child account|
	portfolio _ Portfolio new.
	portfolio_child _ Portfolio new.
	account _  ReceptiveAccount new.
	Deposit register: 100 on: account. 
	
	self assert: (portfolio_child addAccount: account).
	self assert: (portfolio addPortfolio: portfolio_child).
	self assert: portfolio_child balance equals: 100.
	self assert: portfolio balance equals: 100.

	 
! !
!PortfolioTest methodsFor: 'tests' stamp: 'EMI 11/6/2020 19:28:48' prior: 50891740!
test12PortfolioHasOneChildPortfolioWithAnAccountAndADepositRegistered
	| portfolio portfolio_child account transaction |
	portfolio _ Portfolio new.
	portfolio_child _ Portfolio new.
	account _  ReceptiveAccount new.
	transaction _ Deposit register: 100 on: account. 
	
	self assert: (portfolio_child addAccount: account).
	self assert: (portfolio addPortfolio: portfolio_child).
	self assert: (portfolio hasRegistered: transaction).
	self assert: (portfolio transactions size) equals: 1.
	self assert: (portfolio transactions includes: transaction).

	 
! !

!testRun: #PortfolioTest #test01NewPortfolioHasNoAccountsAndNoPortfolios stamp: 'EMI 11/6/2020 19:29:02'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioAddEmptyAccount stamp: 'EMI 11/6/2020 19:29:02'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioAddEmptyPortfolio stamp: 'EMI 11/6/2020 19:29:02'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioHasNoRegisteredTransactions stamp: 'EMI 11/6/2020 19:29:02'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasOneAccountWithOneRegisteredTransaction stamp: 'EMI 11/6/2020 19:29:02'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioMoreThanOneAccountWithRegisteredTransactions stamp: 'EMI 11/6/2020 19:29:02'!
PASSED!

!testRun: #PortfolioTest #test07EmptyPortfolioHasNoTransactions stamp: 'EMI 11/6/2020 19:29:02'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioWithOneAccountHasOneTransaction stamp: 'EMI 11/6/2020 19:29:02'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithMoreThanOneAccountHasMoreThanOneTransactions stamp: 'EMI 11/6/2020 19:29:02'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioHasOneChildPortfolioWithAnAccountAndADeposit stamp: 'EMI 11/6/2020 19:29:02'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioHasMoreThanOneChildPortfolioWithAnAccountAndADeposit stamp: 'EMI 11/6/2020 19:29:02'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioHasOneChildPortfolioWithAnAccountAndADepositRegistered stamp: 'EMI 11/6/2020 19:29:02'!
FAILURE!

!testRun: #PortfolioTest #test12PortfolioHasOneChildPortfolioWithAnAccountAndADepositRegistered stamp: 'EMI 11/6/2020 19:29:02'!
FAILURE!
!Portfolio methodsFor: 'testing' stamp: 'EMI 11/6/2020 19:32:26' prior: 50890185!
hasRegistered: aTransaction
	accounts detect: [:anAccount | anAccount hasRegistered: aTransaction ] 
	ifNone:[
			portfolios detect: [:aPortfolio | aPortfolio hasRegistered: aTransaction ] ifNone: [^false].
			^true.
		].
	^true.! !
!Portfolio methodsFor: 'accessing' stamp: 'EMI 11/6/2020 19:34:55' prior: 50891032!
transactions
	| res |
	res _ OrderedCollection new.
	accounts do: [:anAccount | res addAll: anAccount transactions  ].
	portfolios do: [:aPorfolio | res addAll: aPorfolio transactions ].
	^res.! !

!testRun: #PortfolioTest #test01NewPortfolioHasNoAccountsAndNoPortfolios stamp: 'EMI 11/6/2020 19:35:05'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioAddEmptyAccount stamp: 'EMI 11/6/2020 19:35:05'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioAddEmptyPortfolio stamp: 'EMI 11/6/2020 19:35:05'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioHasNoRegisteredTransactions stamp: 'EMI 11/6/2020 19:35:05'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasOneAccountWithOneRegisteredTransaction stamp: 'EMI 11/6/2020 19:35:05'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioMoreThanOneAccountWithRegisteredTransactions stamp: 'EMI 11/6/2020 19:35:05'!
PASSED!

!testRun: #PortfolioTest #test07EmptyPortfolioHasNoTransactions stamp: 'EMI 11/6/2020 19:35:05'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioWithOneAccountHasOneTransaction stamp: 'EMI 11/6/2020 19:35:05'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithMoreThanOneAccountHasMoreThanOneTransactions stamp: 'EMI 11/6/2020 19:35:05'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioHasOneChildPortfolioWithAnAccountAndADeposit stamp: 'EMI 11/6/2020 19:35:05'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioHasMoreThanOneChildPortfolioWithAnAccountAndADeposit stamp: 'EMI 11/6/2020 19:35:05'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioHasOneChildPortfolioWithAnAccountAndADepositRegistered stamp: 'EMI 11/6/2020 19:35:05'!
PASSED!
!PortfolioTest methodsFor: 'tests' stamp: 'EMI 11/6/2020 19:37:18'!
test13PortfolioHasMoreThanOneChildPortfolioWithAnAccountAndADepositRegistered
	| portfolio portfolio_child  portfolio_child2 account account2|
	portfolio _ Portfolio new.
	portfolio_child _ Portfolio new.
	portfolio_child2 _ Portfolio new.
	account _  ReceptiveAccount new.
	account2 _  ReceptiveAccount new.
	Deposit register: 100 on: account.
	Deposit register: 100 on: account2.
	
	self assert: (portfolio_child addAccount: account).
	self assert: (portfolio_child2 addAccount: account2).
	self assert: (portfolio addPortfolio: portfolio_child).
	self assert: (portfolio addPortfolio: portfolio_child2).
	self assert: portfolio_child balance equals: 100.
	self assert: portfolio_child2 balance equals: 100.
	self assert: portfolio balance equals: 200.
	 
! !
!PortfolioTest methodsFor: 'tests' stamp: 'EMI 11/6/2020 19:38:22' prior: 50891891!
test13PortfolioHasMoreThanOneChildPortfolioWithAnAccountAndADepositRegistered
	| portfolio portfolio_child  portfolio_child2 account account2 transaction1 transaction2|
	portfolio _ Portfolio new.
	portfolio_child _ Portfolio new.
	portfolio_child2 _ Portfolio new.
	account _  ReceptiveAccount new.
	account2 _  ReceptiveAccount new.
	transaction1 _ Deposit register: 100 on: account.
	transaction2 _ Deposit register: 100 on: account2.
	
	self assert: (portfolio_child addAccount: account).
	self assert: (portfolio_child2 addAccount: account2).
	self assert: (portfolio addPortfolio: portfolio_child).
	self assert: (portfolio addPortfolio: portfolio_child2).
	self assert: (portfolio hasRegistered: transaction1).
	self assert: (portfolio hasRegistered: transaction2).
	self assert: (portfolio transactions size) equals: 2.
	self assert: (portfolio transactions includes: transaction1).
	self assert: (portfolio transactions includes: transaction2).
	 
! !

!testRun: #PortfolioTest #test01NewPortfolioHasNoAccountsAndNoPortfolios stamp: 'EMI 11/6/2020 19:38:25'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioAddEmptyAccount stamp: 'EMI 11/6/2020 19:38:25'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioAddEmptyPortfolio stamp: 'EMI 11/6/2020 19:38:25'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioHasNoRegisteredTransactions stamp: 'EMI 11/6/2020 19:38:25'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasOneAccountWithOneRegisteredTransaction stamp: 'EMI 11/6/2020 19:38:25'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioMoreThanOneAccountWithRegisteredTransactions stamp: 'EMI 11/6/2020 19:38:25'!
PASSED!

!testRun: #PortfolioTest #test07EmptyPortfolioHasNoTransactions stamp: 'EMI 11/6/2020 19:38:25'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioWithOneAccountHasOneTransaction stamp: 'EMI 11/6/2020 19:38:25'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithMoreThanOneAccountHasMoreThanOneTransactions stamp: 'EMI 11/6/2020 19:38:25'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioHasOneChildPortfolioWithAnAccountAndADeposit stamp: 'EMI 11/6/2020 19:38:25'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioHasMoreThanOneChildPortfolioWithAnAccountAndADeposit stamp: 'EMI 11/6/2020 19:38:25'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioHasOneChildPortfolioWithAnAccountAndADepositRegistered stamp: 'EMI 11/6/2020 19:38:25'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioHasMoreThanOneChildPortfolioWithAnAccountAndADepositRegistered stamp: 'EMI 11/6/2020 19:38:25'!
PASSED!

Object subclass: #Assets
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classDefinition: #Assets category: 'Portfolio-Ejercicio' stamp: 'EMI 11/6/2020 19:49:46'!
Object subclass: #Assets
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

Object subclass: #Asset
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classDefinition: #Asset category: 'Portfolio-Ejercicio' stamp: 'EMI 11/6/2020 19:49:59'!
Object subclass: #Asset
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classRemoval: #Assets stamp: 'EMI 11/6/2020 19:50:08'!
Object subclass: #Assets
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

Asset subclass: #Portfolio
	instanceVariableNames: 'accounts portfolios'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classDefinition: #Portfolio category: 'Portfolio-Ejercicio' stamp: 'EMI 11/6/2020 19:50:15'!
Asset subclass: #Portfolio
	instanceVariableNames: 'accounts portfolios'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

Asset subclass: #ReceptiveAccount
	instanceVariableNames: 'transactions'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classDefinition: #ReceptiveAccount category: 'Portfolio-Ejercicio' stamp: 'EMI 11/6/2020 19:50:21'!
Asset subclass: #ReceptiveAccount
	instanceVariableNames: 'transactions'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!
!Asset methodsFor: 'nil' stamp: 'EMI 11/6/2020 19:51:09'!
balance
	^self subclassResponsibility.! !
!Asset methodsFor: 'as yet unclassified' stamp: 'EMI 11/6/2020 19:51:27'!
hasRegistered: aTransaction
	^self subclassResponsibility.! !
!Asset methodsFor: 'as yet unclassified' stamp: 'EMI 11/6/2020 19:51:39'!
transactions
	^self subclassResponsibility.! !

Asset subclass: #Portfolio
	instanceVariableNames: 'assets'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classDefinition: #Portfolio category: 'Portfolio-Ejercicio' stamp: 'EMI 11/6/2020 19:53:43'!
Asset subclass: #Portfolio
	instanceVariableNames: 'assets'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!
!Portfolio methodsFor: 'adding' stamp: 'EMI 11/6/2020 19:54:04'!
add: anAsset
	assets add: anAsset.
	^true.! !
!Portfolio methodsFor: 'testing' stamp: 'EMI 11/6/2020 19:54:47' prior: 50891444 overrides: 50892053!
balance
	^(assets sum: [:anAsset | anAsset balance] ifEmpty:[0]).! !

----SNAPSHOT----(6 November 2020 19:54:50) CuisUniversity-4383.image priorSource: 17876377!
!Portfolio methodsFor: 'testing' stamp: 'EMI 11/6/2020 19:55:28' prior: 50891827 overrides: 50892057!
hasRegistered: aTransaction
	assets detect: [:anAsset | anAsset hasRegistered: aTransaction ] ifNone: [^false].
	^true.! !
!Portfolio methodsFor: 'accessing' stamp: 'EMI 11/6/2020 19:55:54' prior: 50891837 overrides: 50892062!
transactions
	| res |
	res _ OrderedCollection new.
	assets do: [:anAsset | res addAll: anAsset transactions  ].
	^res.! !
!PortfolioTest methodsFor: 'tests' stamp: 'EMI 11/6/2020 19:56:26' prior: 50889977!
test02PortfolioAddEmptyAccount
	| portfolio |
	portfolio _ Portfolio new.
	
	self assert: (portfolio add: ReceptiveAccount new).
	self assert: portfolio balance equals: 0.! !
!PortfolioTest methodsFor: 'tests' stamp: 'EMI 11/6/2020 19:56:34' prior: 50889920!
test03PortfolioAddEmptyPortfolio
	| portfolio |
	portfolio _ Portfolio new.
	
	self assert: (portfolio add: Portfolio new).
	self assert: portfolio balance equals: 0.! !
!PortfolioTest methodsFor: 'tests' stamp: 'EMI 11/6/2020 19:56:43' prior: 50890421!
test05PortfolioHasOneAccountWithOneRegisteredTransaction
	| portfolio account transaction|
	portfolio _ Portfolio new.
	account _ ReceptiveAccount new.
	transaction _ Deposit register: 100 on: account.
	
	self assert: (portfolio add: account).
	self assert: (portfolio hasRegistered: transaction).
	self assert: portfolio balance equals: 100.! !
!PortfolioTest methodsFor: 'tests' stamp: 'EMI 11/6/2020 19:56:51' prior: 50890463!
test06PortfolioMoreThanOneAccountWithRegisteredTransactions
	| portfolio account1 account2 transaction transaction2|
	portfolio _ Portfolio new.
	account1 _ ReceptiveAccount new.
	account2 _ ReceptiveAccount new.
	transaction _ Deposit register: 100 on: account1.
	transaction2 _ Deposit register: 50 on: account2.
	
	self assert: (portfolio add: account1).
	self assert: (portfolio add: account2).
	self assert: (portfolio hasRegistered: transaction).
	self assert: (portfolio hasRegistered: transaction2).
	self assert: portfolio balance equals: 150.! !
!PortfolioTest methodsFor: 'tests' stamp: 'EMI 11/6/2020 19:57:02' prior: 50890705!
test08PortfolioWithOneAccountHasOneTransaction
	| portfolio account deposit |
	portfolio _ Portfolio new.
	account _  ReceptiveAccount new.
	deposit _ Deposit register: 100 on: account.
	
	self assert: (portfolio add: account).
	self assert: portfolio transactions size equals: 1.
	self assert: (portfolio transactions includes: deposit).
	self assert: portfolio balance equals: 100.! !
!PortfolioTest methodsFor: 'tests' stamp: 'EMI 11/6/2020 19:57:18' prior: 50890926!
test09PortfolioWithMoreThanOneAccountHasMoreThanOneTransactions
	| portfolio account1 account2 deposit withdraw |
	portfolio _ Portfolio new.
	account1 _  ReceptiveAccount new.
	account2 _  ReceptiveAccount new.
	deposit _ Deposit register: 100 on: account1.
	withdraw _ Withdraw register: 50 on: account2.
	
	self assert: (portfolio add: account1).
	self assert: (portfolio add: account2).
	self assert: portfolio transactions size equals: 2.
	self assert: (portfolio transactions includes: deposit).
	self assert: (portfolio transactions includes: withdraw ).
	self assert: portfolio balance equals: 50.! !
!PortfolioTest methodsFor: 'tests' stamp: 'EMI 11/6/2020 19:57:46' prior: 50891723!
test10PortfolioHasOneChildPortfolioWithAnAccountAndADeposit
	| portfolio portfolio_child account|
	portfolio _ Portfolio new.
	portfolio_child _ Portfolio new.
	account _  ReceptiveAccount new.
	Deposit register: 100 on: account. 
	
	self assert: (portfolio_child add: account).
	self assert: (portfolio add: portfolio_child).
	self assert: portfolio_child balance equals: 100.
	self assert: portfolio balance equals: 100.

	 
! !
!PortfolioTest methodsFor: 'tests' stamp: 'EMI 11/6/2020 19:57:59' prior: 50891634!
test11PortfolioHasMoreThanOneChildPortfolioWithAnAccountAndADeposit
	| portfolio portfolio_child  portfolio_child2 account account2|
	portfolio _ Portfolio new.
	portfolio_child _ Portfolio new.
	portfolio_child2 _ Portfolio new.
	account _  ReceptiveAccount new.
	account2 _  ReceptiveAccount new.
	Deposit register: 100 on: account.
	Deposit register: 100 on: account2.
	
	self assert: (portfolio_child add: account).
	self assert: (portfolio_child2 add: account2).
	self assert: (portfolio addPortfolio: portfolio_child).
	self assert: (portfolio addPortfolio: portfolio_child2).
	self assert: portfolio_child balance equals: 100.
	self assert: portfolio_child2 balance equals: 100.
	self assert: portfolio balance equals: 200.
	 
! !
!PortfolioTest methodsFor: 'tests' stamp: 'EMI 11/6/2020 19:58:08' prior: 50892212!
test11PortfolioHasMoreThanOneChildPortfolioWithAnAccountAndADeposit
	| portfolio portfolio_child  portfolio_child2 account account2|
	portfolio _ Portfolio new.
	portfolio_child _ Portfolio new.
	portfolio_child2 _ Portfolio new.
	account _  ReceptiveAccount new.
	account2 _  ReceptiveAccount new.
	Deposit register: 100 on: account.
	Deposit register: 100 on: account2.
	
	self assert: (portfolio_child add: account).
	self assert: (portfolio_child2 add: account2).
	self assert: (portfolio add: portfolio_child).
	self assert: (portfolio add: portfolio_child2).
	self assert: portfolio_child balance equals: 100.
	self assert: portfolio_child2 balance equals: 100.
	self assert: portfolio balance equals: 200.
	 
! !
!PortfolioTest methodsFor: 'tests' stamp: 'EMI 11/6/2020 19:58:21' prior: 50891757!
test12PortfolioHasOneChildPortfolioWithAnAccountAndADepositRegistered
	| portfolio portfolio_child account transaction |
	portfolio _ Portfolio new.
	portfolio_child _ Portfolio new.
	account _  ReceptiveAccount new.
	transaction _ Deposit register: 100 on: account. 
	
	self assert: (portfolio_child add: account).
	self assert: (portfolio add: portfolio_child).
	self assert: (portfolio hasRegistered: transaction).
	self assert: (portfolio transactions size) equals: 1.
	self assert: (portfolio transactions includes: transaction).

	 
! !
!PortfolioTest methodsFor: 'tests' stamp: 'EMI 11/6/2020 19:58:37' prior: 50891918!
test13PortfolioHasMoreThanOneChildPortfolioWithAnAccountAndADepositRegistered
	| portfolio portfolio_child  portfolio_child2 account account2 transaction1 transaction2|
	portfolio _ Portfolio new.
	portfolio_child _ Portfolio new.
	portfolio_child2 _ Portfolio new.
	account _  ReceptiveAccount new.
	account2 _  ReceptiveAccount new.
	transaction1 _ Deposit register: 100 on: account.
	transaction2 _ Deposit register: 100 on: account2.
	
	self assert: (portfolio_child add: account).
	self assert: (portfolio_child2 add: account2).
	self assert: (portfolio add: portfolio_child).
	self assert: (portfolio add: portfolio_child2).
	self assert: (portfolio hasRegistered: transaction1).
	self assert: (portfolio hasRegistered: transaction2).
	self assert: (portfolio transactions size) equals: 2.
	self assert: (portfolio transactions includes: transaction1).
	self assert: (portfolio transactions includes: transaction2).
	 
! !

!methodRemoval: Portfolio #addAccount: stamp: 'EMI 11/6/2020 19:58:46'!
addAccount: aReceptiveAccount
	accounts add: aReceptiveAccount.
	^true.!

!methodRemoval: Portfolio #addPortfolio: stamp: 'EMI 11/6/2020 19:58:50'!
addPortfolio: aPortfolio 
	portfolios add: aPortfolio .
	^true.!

----SNAPSHOT----(6 November 2020 19:58:56) CuisUniversity-4383.image priorSource: 17933988!

!testRun: #PortfolioTest #test01NewPortfolioHasNoAccountsAndNoPortfolios stamp: 'EMI 11/6/2020 19:59:00'!
ERROR!

!testRun: #PortfolioTest #test02PortfolioAddEmptyAccount stamp: 'EMI 11/6/2020 19:59:00'!
ERROR!

!testRun: #PortfolioTest #test03PortfolioAddEmptyPortfolio stamp: 'EMI 11/6/2020 19:59:00'!
ERROR!

!testRun: #PortfolioTest #test04PortfolioHasNoRegisteredTransactions stamp: 'EMI 11/6/2020 19:59:00'!
ERROR!

!testRun: #PortfolioTest #test05PortfolioHasOneAccountWithOneRegisteredTransaction stamp: 'EMI 11/6/2020 19:59:00'!
ERROR!

!testRun: #PortfolioTest #test06PortfolioMoreThanOneAccountWithRegisteredTransactions stamp: 'EMI 11/6/2020 19:59:00'!
ERROR!

!testRun: #PortfolioTest #test07EmptyPortfolioHasNoTransactions stamp: 'EMI 11/6/2020 19:59:00'!
ERROR!

!testRun: #PortfolioTest #test08PortfolioWithOneAccountHasOneTransaction stamp: 'EMI 11/6/2020 19:59:00'!
ERROR!

!testRun: #PortfolioTest #test09PortfolioWithMoreThanOneAccountHasMoreThanOneTransactions stamp: 'EMI 11/6/2020 19:59:00'!
ERROR!

!testRun: #PortfolioTest #test10PortfolioHasOneChildPortfolioWithAnAccountAndADeposit stamp: 'EMI 11/6/2020 19:59:00'!
ERROR!

!testRun: #PortfolioTest #test11PortfolioHasMoreThanOneChildPortfolioWithAnAccountAndADeposit stamp: 'EMI 11/6/2020 19:59:00'!
ERROR!

!testRun: #PortfolioTest #test12PortfolioHasOneChildPortfolioWithAnAccountAndADepositRegistered stamp: 'EMI 11/6/2020 19:59:00'!
ERROR!

!testRun: #PortfolioTest #test13PortfolioHasMoreThanOneChildPortfolioWithAnAccountAndADepositRegistered stamp: 'EMI 11/6/2020 19:59:00'!
ERROR!

!testRun: #PortfolioTest #test01NewPortfolioHasNoAccountsAndNoPortfolios stamp: 'EMI 11/6/2020 19:59:05'!
ERROR!
!Portfolio methodsFor: 'initialization' stamp: 'EMI 11/6/2020 19:59:34' prior: 50891493 overrides: 16896425!
initialize
	assets _ OrderedCollection new.! !

!testRun: #PortfolioTest #test01NewPortfolioHasNoAccountsAndNoPortfolios stamp: 'EMI 11/6/2020 19:59:38'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioAddEmptyAccount stamp: 'EMI 11/6/2020 19:59:38'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioAddEmptyPortfolio stamp: 'EMI 11/6/2020 19:59:38'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioHasNoRegisteredTransactions stamp: 'EMI 11/6/2020 19:59:38'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasOneAccountWithOneRegisteredTransaction stamp: 'EMI 11/6/2020 19:59:38'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioMoreThanOneAccountWithRegisteredTransactions stamp: 'EMI 11/6/2020 19:59:38'!
PASSED!

!testRun: #PortfolioTest #test07EmptyPortfolioHasNoTransactions stamp: 'EMI 11/6/2020 19:59:38'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioWithOneAccountHasOneTransaction stamp: 'EMI 11/6/2020 19:59:38'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithMoreThanOneAccountHasMoreThanOneTransactions stamp: 'EMI 11/6/2020 19:59:38'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioHasOneChildPortfolioWithAnAccountAndADeposit stamp: 'EMI 11/6/2020 19:59:38'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioHasMoreThanOneChildPortfolioWithAnAccountAndADeposit stamp: 'EMI 11/6/2020 19:59:38'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioHasOneChildPortfolioWithAnAccountAndADepositRegistered stamp: 'EMI 11/6/2020 19:59:38'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioHasMoreThanOneChildPortfolioWithAnAccountAndADepositRegistered stamp: 'EMI 11/6/2020 19:59:38'!
PASSED!

----SNAPSHOT----(6 November 2020 20:01:15) CuisUniversity-4383.image priorSource: 17941566!
!PortfolioTest methodsFor: 'tests' stamp: 'EMI 11/6/2020 20:02:35'!
test14PortfolioCannotAddSameAccountTwice
	| portfolio portfolio_child  portfolio_child2 account account2 transaction1 transaction2|
	portfolio _ Portfolio new.
	portfolio_child _ Portfolio new.
	portfolio_child2 _ Portfolio new.
	account _  ReceptiveAccount new.
	account2 _  ReceptiveAccount new.
	transaction1 _ Deposit register: 100 on: account.
	transaction2 _ Deposit register: 100 on: account2.
	
	self assert: (portfolio_child add: account).
	self assert: (portfolio_child2 add: account2).
	self assert: (portfolio add: portfolio_child).
	self assert: (portfolio add: portfolio_child2).
	self assert: (portfolio hasRegistered: transaction1).
	self assert: (portfolio hasRegistered: transaction2).
	self assert: (portfolio transactions size) equals: 2.
	self assert: (portfolio transactions includes: transaction1).
	self assert: (portfolio transactions includes: transaction2).
	 
! !
!PortfolioTest methodsFor: 'tests' stamp: 'EMI 11/6/2020 20:02:58' prior: 50892437!
test14PortfolioCannotAddSameAccountTwice
	| portfolio account|
	portfolio _ Portfolio new.
	account _  ReceptiveAccount new.


	 
! !
!PortfolioTest methodsFor: 'tests' stamp: 'EMI 11/6/2020 20:04:35' prior: 50892468!
test14PortfolioCannotAddSameAccountTwice
	| portfolio account|
	portfolio _ Portfolio new.
	account _  ReceptiveAccount new.
	
	self assert: (portfolio add: account).
	self deny: (portfolio add: account).


	 
! !

!testRun: #PortfolioTest #test01NewPortfolioHasNoAccountsAndNoPortfolios stamp: 'EMI 11/6/2020 20:04:39'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioAddEmptyAccount stamp: 'EMI 11/6/2020 20:04:39'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioAddEmptyPortfolio stamp: 'EMI 11/6/2020 20:04:39'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioHasNoRegisteredTransactions stamp: 'EMI 11/6/2020 20:04:39'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasOneAccountWithOneRegisteredTransaction stamp: 'EMI 11/6/2020 20:04:39'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioMoreThanOneAccountWithRegisteredTransactions stamp: 'EMI 11/6/2020 20:04:39'!
PASSED!

!testRun: #PortfolioTest #test07EmptyPortfolioHasNoTransactions stamp: 'EMI 11/6/2020 20:04:39'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioWithOneAccountHasOneTransaction stamp: 'EMI 11/6/2020 20:04:39'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithMoreThanOneAccountHasMoreThanOneTransactions stamp: 'EMI 11/6/2020 20:04:39'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioHasOneChildPortfolioWithAnAccountAndADeposit stamp: 'EMI 11/6/2020 20:04:39'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioHasMoreThanOneChildPortfolioWithAnAccountAndADeposit stamp: 'EMI 11/6/2020 20:04:39'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioHasOneChildPortfolioWithAnAccountAndADepositRegistered stamp: 'EMI 11/6/2020 20:04:39'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioHasMoreThanOneChildPortfolioWithAnAccountAndADepositRegistered stamp: 'EMI 11/6/2020 20:04:39'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioCannotAddSameAccountTwice stamp: 'EMI 11/6/2020 20:04:39'!
FAILURE!

!testRun: #PortfolioTest #test14PortfolioCannotAddSameAccountTwice stamp: 'EMI 11/6/2020 20:04:39'!
FAILURE!
!Portfolio methodsFor: 'adding' stamp: 'EMI 11/6/2020 20:05:19' prior: 50892078!
add: anAsset
	(assets includes: anAsset) ifTrue:[^false].
	assets add: anAsset.
	^true.! !

!testRun: #PortfolioTest #test01NewPortfolioHasNoAccountsAndNoPortfolios stamp: 'EMI 11/6/2020 20:05:24'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioAddEmptyAccount stamp: 'EMI 11/6/2020 20:05:24'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioAddEmptyPortfolio stamp: 'EMI 11/6/2020 20:05:24'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioHasNoRegisteredTransactions stamp: 'EMI 11/6/2020 20:05:24'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasOneAccountWithOneRegisteredTransaction stamp: 'EMI 11/6/2020 20:05:24'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioMoreThanOneAccountWithRegisteredTransactions stamp: 'EMI 11/6/2020 20:05:24'!
PASSED!

!testRun: #PortfolioTest #test07EmptyPortfolioHasNoTransactions stamp: 'EMI 11/6/2020 20:05:24'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioWithOneAccountHasOneTransaction stamp: 'EMI 11/6/2020 20:05:24'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithMoreThanOneAccountHasMoreThanOneTransactions stamp: 'EMI 11/6/2020 20:05:24'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioHasOneChildPortfolioWithAnAccountAndADeposit stamp: 'EMI 11/6/2020 20:05:24'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioHasMoreThanOneChildPortfolioWithAnAccountAndADeposit stamp: 'EMI 11/6/2020 20:05:24'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioHasOneChildPortfolioWithAnAccountAndADepositRegistered stamp: 'EMI 11/6/2020 20:05:24'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioHasMoreThanOneChildPortfolioWithAnAccountAndADepositRegistered stamp: 'EMI 11/6/2020 20:05:24'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioCannotAddSameAccountTwice stamp: 'EMI 11/6/2020 20:05:24'!
PASSED!
!PortfolioTest methodsFor: 'tests' stamp: 'EMI 11/6/2020 20:06:57'!
test14PortfolioCannotAddSameAssetTwice
	| portfolio account|
	portfolio _ Portfolio new.
	account _  ReceptiveAccount new.
	
	self assert: (portfolio add: account).
	self deny: (portfolio add: account).


	 
! !

!methodRemoval: PortfolioTest #test14PortfolioCannotAddSameAccountTwice stamp: 'EMI 11/6/2020 20:06:57'!
test14PortfolioCannotAddSameAccountTwice
	| portfolio account|
	portfolio _ Portfolio new.
	account _  ReceptiveAccount new.
	
	self assert: (portfolio add: account).
	self deny: (portfolio add: account).


	 
!
!PortfolioTest methodsFor: 'tests' stamp: 'EMI 11/6/2020 20:09:22' prior: 50892599!
test14PortfolioCannotAddSameAssetTwice
	| portfolio portfolio2 account|
	portfolio _ Portfolio new.
	account _  ReceptiveAccount new.
	
	self assert: (portfolio add: account).
	self deny: (portfolio add: account).
	
	portfolio2 _ Portfolio new.
	
	self assert: (portfolio add: portfolio2).
	self deny: (portfolio add: portfolio2).


	 
! !

!testRun: #PortfolioTest #test01NewPortfolioHasNoAccountsAndNoPortfolios stamp: 'EMI 11/6/2020 20:09:26'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioAddEmptyAccount stamp: 'EMI 11/6/2020 20:09:26'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioAddEmptyPortfolio stamp: 'EMI 11/6/2020 20:09:26'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioHasNoRegisteredTransactions stamp: 'EMI 11/6/2020 20:09:26'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasOneAccountWithOneRegisteredTransaction stamp: 'EMI 11/6/2020 20:09:26'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioMoreThanOneAccountWithRegisteredTransactions stamp: 'EMI 11/6/2020 20:09:26'!
PASSED!

!testRun: #PortfolioTest #test07EmptyPortfolioHasNoTransactions stamp: 'EMI 11/6/2020 20:09:26'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioWithOneAccountHasOneTransaction stamp: 'EMI 11/6/2020 20:09:26'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithMoreThanOneAccountHasMoreThanOneTransactions stamp: 'EMI 11/6/2020 20:09:26'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioHasOneChildPortfolioWithAnAccountAndADeposit stamp: 'EMI 11/6/2020 20:09:26'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioHasMoreThanOneChildPortfolioWithAnAccountAndADeposit stamp: 'EMI 11/6/2020 20:09:26'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioHasOneChildPortfolioWithAnAccountAndADepositRegistered stamp: 'EMI 11/6/2020 20:09:26'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioHasMoreThanOneChildPortfolioWithAnAccountAndADepositRegistered stamp: 'EMI 11/6/2020 20:09:26'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioCannotAddSameAssetTwice stamp: 'EMI 11/6/2020 20:09:26'!
PASSED!
!PortfolioTest methodsFor: 'tests' stamp: 'EMI 11/6/2020 20:09:59'!
test14PortfolioCannotAddSameEmptyAssetTwice
	| portfolio portfolio2 account|
	portfolio _ Portfolio new.
	account _  ReceptiveAccount new.
	
	self assert: (portfolio add: account).
	self deny: (portfolio add: account).
	
	portfolio2 _ Portfolio new.
	
	self assert: (portfolio add: portfolio2).
	self deny: (portfolio add: portfolio2).


	 
! !

!methodRemoval: PortfolioTest #test14PortfolioCannotAddSameAssetTwice stamp: 'EMI 11/6/2020 20:09:59'!
test14PortfolioCannotAddSameAssetTwice
	| portfolio portfolio2 account|
	portfolio _ Portfolio new.
	account _  ReceptiveAccount new.
	
	self assert: (portfolio add: account).
	self deny: (portfolio add: account).
	
	portfolio2 _ Portfolio new.
	
	self assert: (portfolio add: portfolio2).
	self deny: (portfolio add: portfolio2).


	 
!
!PortfolioTest methodsFor: 'tests' stamp: 'EMI 11/6/2020 20:10:31'!
test15PortfolioCannotAddChildPortfolioWithSameAccount
	| portfolio portfolio2 account|
	portfolio _ Portfolio new.
	account _  ReceptiveAccount new.
	
	self assert: (portfolio add: account).
	self deny: (portfolio add: account).
	
	portfolio2 _ Portfolio new.
	
	self assert: (portfolio add: portfolio2).
	self deny: (portfolio add: portfolio2).


	 
! !
!PortfolioTest methodsFor: 'tests' stamp: 'EMI 11/6/2020 20:10:59' prior: 50892712!
test15PortfolioCannotAddChildPortfolioWithSameAccount
	| portfolio portfolio2 account|
	portfolio _ Portfolio new.
	account _  ReceptiveAccount new.
	self assert: (portfolio add: account).
	
	portfolio2 _ Portfolio new.
	self assert: (portfolio2 add: account).
	
	self deny: (portfolio add: portfolio2).


	 
! !

!testRun: #PortfolioTest #test01NewPortfolioHasNoAccountsAndNoPortfolios stamp: 'EMI 11/6/2020 20:11:29'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioAddEmptyAccount stamp: 'EMI 11/6/2020 20:11:29'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioAddEmptyPortfolio stamp: 'EMI 11/6/2020 20:11:29'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioHasNoRegisteredTransactions stamp: 'EMI 11/6/2020 20:11:29'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasOneAccountWithOneRegisteredTransaction stamp: 'EMI 11/6/2020 20:11:29'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioMoreThanOneAccountWithRegisteredTransactions stamp: 'EMI 11/6/2020 20:11:29'!
PASSED!

!testRun: #PortfolioTest #test07EmptyPortfolioHasNoTransactions stamp: 'EMI 11/6/2020 20:11:29'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioWithOneAccountHasOneTransaction stamp: 'EMI 11/6/2020 20:11:29'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithMoreThanOneAccountHasMoreThanOneTransactions stamp: 'EMI 11/6/2020 20:11:29'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioHasOneChildPortfolioWithAnAccountAndADeposit stamp: 'EMI 11/6/2020 20:11:29'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioHasMoreThanOneChildPortfolioWithAnAccountAndADeposit stamp: 'EMI 11/6/2020 20:11:29'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioHasOneChildPortfolioWithAnAccountAndADepositRegistered stamp: 'EMI 11/6/2020 20:11:29'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioHasMoreThanOneChildPortfolioWithAnAccountAndADepositRegistered stamp: 'EMI 11/6/2020 20:11:29'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioCannotAddSameEmptyAssetTwice stamp: 'EMI 11/6/2020 20:11:29'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCannotAddChildPortfolioWithSameAccount stamp: 'EMI 11/6/2020 20:11:29'!
FAILURE!

!testRun: #PortfolioTest #test15PortfolioCannotAddChildPortfolioWithSameAccount stamp: 'EMI 11/6/2020 20:11:29'!
FAILURE!
!Portfolio methodsFor: 'adding' stamp: 'EMI 11/6/2020 20:18:14' prior: 50892541!
add: anAsset
	(assets includes: anAsset) ifTrue:[^false].
	"| port1 | <-- a1
	| port2 | <-- a1
	port1 <-- port2"
	assets add: anAsset.
	^true.! !
!Portfolio methodsFor: 'adding' stamp: 'EMI 11/6/2020 20:24:11' prior: 50892799!
add: anAsset
	(assets includes: anAsset) ifTrue:[^false].
	(anAsset isKindOf: Portfolio) ifTrue: [
		assets detect: [:anAsset2 | ] ifNone:[assets add: anAsset. ^true.].
		^false
	].
	
	^true.! !
!Portfolio methodsFor: 'nil' stamp: 'EMI 11/6/2020 20:24:56'!
hasAsset: anAsset
	^assets includes: anAsset.! !
!Portfolio methodsFor: 'adding' stamp: 'EMI 11/6/2020 20:25:57' prior: 50892807!
add: anAsset
	(assets includes: anAsset) ifTrue:[^false].
	(anAsset isKindOf: Portfolio) ifTrue: [
		assets detect: [:anAsset2 | anAsset hasAsset: anAsset2] ifNone:[assets add: anAsset. ^true.].
		^false
	].
	assets add: anAsset.
	^true.! !

!testRun: #PortfolioTest #test01NewPortfolioHasNoAccountsAndNoPortfolios stamp: 'EMI 11/6/2020 20:26:23'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioAddEmptyAccount stamp: 'EMI 11/6/2020 20:26:23'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioAddEmptyPortfolio stamp: 'EMI 11/6/2020 20:26:23'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioHasNoRegisteredTransactions stamp: 'EMI 11/6/2020 20:26:23'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasOneAccountWithOneRegisteredTransaction stamp: 'EMI 11/6/2020 20:26:23'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioMoreThanOneAccountWithRegisteredTransactions stamp: 'EMI 11/6/2020 20:26:23'!
PASSED!

!testRun: #PortfolioTest #test07EmptyPortfolioHasNoTransactions stamp: 'EMI 11/6/2020 20:26:23'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioWithOneAccountHasOneTransaction stamp: 'EMI 11/6/2020 20:26:23'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithMoreThanOneAccountHasMoreThanOneTransactions stamp: 'EMI 11/6/2020 20:26:23'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioHasOneChildPortfolioWithAnAccountAndADeposit stamp: 'EMI 11/6/2020 20:26:23'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioHasMoreThanOneChildPortfolioWithAnAccountAndADeposit stamp: 'EMI 11/6/2020 20:26:23'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioHasOneChildPortfolioWithAnAccountAndADepositRegistered stamp: 'EMI 11/6/2020 20:26:23'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioHasMoreThanOneChildPortfolioWithAnAccountAndADepositRegistered stamp: 'EMI 11/6/2020 20:26:23'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioCannotAddSameEmptyAssetTwice stamp: 'EMI 11/6/2020 20:26:23'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCannotAddChildPortfolioWithSameAccount stamp: 'EMI 11/6/2020 20:26:23'!
PASSED!
!Asset methodsFor: 'nil' stamp: 'EMI 11/6/2020 20:27:10'!
hasAsset: anAsset
	^self subclassResponsibility.! !
!ReceptiveAccount methodsFor: 'nil' stamp: 'EMI 11/6/2020 20:27:30' overrides: 50892888!
hasAsset: anAsset
	^false.! !
!Portfolio methodsFor: 'adding' stamp: 'EMI 11/6/2020 20:28:38' prior: 50892821!
add: anAsset
	(assets includes: anAsset) ifTrue:[^false].
	(assets detect: [:anAsset2 | anAsset hasAsset: anAsset2] isEmpty not) ifTrue: [^false].
	assets add: anAsset.
	^true.! !

!testRun: #PortfolioTest #test01NewPortfolioHasNoAccountsAndNoPortfolios stamp: 'EMI 11/6/2020 20:28:47'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioAddEmptyAccount stamp: 'EMI 11/6/2020 20:28:47'!
ERROR!

!testRun: #PortfolioTest #test03PortfolioAddEmptyPortfolio stamp: 'EMI 11/6/2020 20:28:47'!
ERROR!

!testRun: #PortfolioTest #test04PortfolioHasNoRegisteredTransactions stamp: 'EMI 11/6/2020 20:28:47'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasOneAccountWithOneRegisteredTransaction stamp: 'EMI 11/6/2020 20:28:47'!
ERROR!

!testRun: #PortfolioTest #test06PortfolioMoreThanOneAccountWithRegisteredTransactions stamp: 'EMI 11/6/2020 20:28:47'!
ERROR!

!testRun: #PortfolioTest #test07EmptyPortfolioHasNoTransactions stamp: 'EMI 11/6/2020 20:28:47'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioWithOneAccountHasOneTransaction stamp: 'EMI 11/6/2020 20:28:47'!
ERROR!

!testRun: #PortfolioTest #test09PortfolioWithMoreThanOneAccountHasMoreThanOneTransactions stamp: 'EMI 11/6/2020 20:28:47'!
ERROR!

!testRun: #PortfolioTest #test10PortfolioHasOneChildPortfolioWithAnAccountAndADeposit stamp: 'EMI 11/6/2020 20:28:47'!
ERROR!

!testRun: #PortfolioTest #test11PortfolioHasMoreThanOneChildPortfolioWithAnAccountAndADeposit stamp: 'EMI 11/6/2020 20:28:47'!
ERROR!

!testRun: #PortfolioTest #test12PortfolioHasOneChildPortfolioWithAnAccountAndADepositRegistered stamp: 'EMI 11/6/2020 20:28:47'!
ERROR!

!testRun: #PortfolioTest #test13PortfolioHasMoreThanOneChildPortfolioWithAnAccountAndADepositRegistered stamp: 'EMI 11/6/2020 20:28:47'!
ERROR!

!testRun: #PortfolioTest #test14PortfolioCannotAddSameEmptyAssetTwice stamp: 'EMI 11/6/2020 20:28:47'!
ERROR!

!testRun: #PortfolioTest #test15PortfolioCannotAddChildPortfolioWithSameAccount stamp: 'EMI 11/6/2020 20:28:47'!
ERROR!

!testRun: #PortfolioTest #test01NewPortfolioHasNoAccountsAndNoPortfolios stamp: 'EMI 11/6/2020 20:29:05'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioAddEmptyAccount stamp: 'EMI 11/6/2020 20:29:05'!
ERROR!

!testRun: #PortfolioTest #test03PortfolioAddEmptyPortfolio stamp: 'EMI 11/6/2020 20:29:05'!
ERROR!

!testRun: #PortfolioTest #test04PortfolioHasNoRegisteredTransactions stamp: 'EMI 11/6/2020 20:29:05'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasOneAccountWithOneRegisteredTransaction stamp: 'EMI 11/6/2020 20:29:05'!
ERROR!

!testRun: #PortfolioTest #test06PortfolioMoreThanOneAccountWithRegisteredTransactions stamp: 'EMI 11/6/2020 20:29:05'!
ERROR!

!testRun: #PortfolioTest #test07EmptyPortfolioHasNoTransactions stamp: 'EMI 11/6/2020 20:29:05'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioWithOneAccountHasOneTransaction stamp: 'EMI 11/6/2020 20:29:05'!
ERROR!

!testRun: #PortfolioTest #test09PortfolioWithMoreThanOneAccountHasMoreThanOneTransactions stamp: 'EMI 11/6/2020 20:29:05'!
ERROR!

!testRun: #PortfolioTest #test10PortfolioHasOneChildPortfolioWithAnAccountAndADeposit stamp: 'EMI 11/6/2020 20:29:05'!
ERROR!

!testRun: #PortfolioTest #test11PortfolioHasMoreThanOneChildPortfolioWithAnAccountAndADeposit stamp: 'EMI 11/6/2020 20:29:05'!
ERROR!

!testRun: #PortfolioTest #test12PortfolioHasOneChildPortfolioWithAnAccountAndADepositRegistered stamp: 'EMI 11/6/2020 20:29:05'!
ERROR!

!testRun: #PortfolioTest #test13PortfolioHasMoreThanOneChildPortfolioWithAnAccountAndADepositRegistered stamp: 'EMI 11/6/2020 20:29:05'!
ERROR!

!testRun: #PortfolioTest #test14PortfolioCannotAddSameEmptyAssetTwice stamp: 'EMI 11/6/2020 20:29:05'!
ERROR!

!testRun: #PortfolioTest #test15PortfolioCannotAddChildPortfolioWithSameAccount stamp: 'EMI 11/6/2020 20:29:05'!
ERROR!

!testRun: #PortfolioTest #test02PortfolioAddEmptyAccount stamp: 'EMI 11/6/2020 20:29:07'!
ERROR!

!testRun: #PortfolioTest #test02PortfolioAddEmptyAccount stamp: 'EMI 11/6/2020 20:29:24'!
ERROR!
!Portfolio methodsFor: 'adding' stamp: 'EMI 11/6/2020 20:29:56' prior: 50892897!
add: anAsset
	(assets includes: anAsset) ifTrue:[^false].
	((assets detect: [:anAsset2 | anAsset hasAsset: anAsset2]) isEmpty not) ifTrue: [^false].
	assets add: anAsset.
	^true.! !

!testRun: #PortfolioTest #test01NewPortfolioHasNoAccountsAndNoPortfolios stamp: 'EMI 11/6/2020 20:29:58'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioAddEmptyAccount stamp: 'EMI 11/6/2020 20:29:58'!
ERROR!

!testRun: #PortfolioTest #test03PortfolioAddEmptyPortfolio stamp: 'EMI 11/6/2020 20:29:58'!
ERROR!

!testRun: #PortfolioTest #test04PortfolioHasNoRegisteredTransactions stamp: 'EMI 11/6/2020 20:29:58'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasOneAccountWithOneRegisteredTransaction stamp: 'EMI 11/6/2020 20:29:58'!
ERROR!

!testRun: #PortfolioTest #test06PortfolioMoreThanOneAccountWithRegisteredTransactions stamp: 'EMI 11/6/2020 20:29:58'!
ERROR!

!testRun: #PortfolioTest #test07EmptyPortfolioHasNoTransactions stamp: 'EMI 11/6/2020 20:29:58'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioWithOneAccountHasOneTransaction stamp: 'EMI 11/6/2020 20:29:58'!
ERROR!

!testRun: #PortfolioTest #test09PortfolioWithMoreThanOneAccountHasMoreThanOneTransactions stamp: 'EMI 11/6/2020 20:29:58'!
ERROR!

!testRun: #PortfolioTest #test10PortfolioHasOneChildPortfolioWithAnAccountAndADeposit stamp: 'EMI 11/6/2020 20:29:58'!
ERROR!

!testRun: #PortfolioTest #test11PortfolioHasMoreThanOneChildPortfolioWithAnAccountAndADeposit stamp: 'EMI 11/6/2020 20:29:58'!
ERROR!

!testRun: #PortfolioTest #test12PortfolioHasOneChildPortfolioWithAnAccountAndADepositRegistered stamp: 'EMI 11/6/2020 20:29:58'!
ERROR!

!testRun: #PortfolioTest #test13PortfolioHasMoreThanOneChildPortfolioWithAnAccountAndADepositRegistered stamp: 'EMI 11/6/2020 20:29:58'!
ERROR!

!testRun: #PortfolioTest #test14PortfolioCannotAddSameEmptyAssetTwice stamp: 'EMI 11/6/2020 20:29:58'!
ERROR!

!testRun: #PortfolioTest #test15PortfolioCannotAddChildPortfolioWithSameAccount stamp: 'EMI 11/6/2020 20:29:58'!
ERROR!
!Portfolio methodsFor: 'adding' stamp: 'EMI 11/6/2020 20:31:47' prior: 50893024!
add: anAsset
	(assets includes: anAsset) ifTrue:[^false].
	(assets allSatisfy: [:anAsset2 | (anAsset hasAsset: anAsset2) not]) ifFalse: [^false].
	assets add: anAsset.
	^true.! !

!testRun: #PortfolioTest #test01NewPortfolioHasNoAccountsAndNoPortfolios stamp: 'EMI 11/6/2020 20:32:12'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioAddEmptyAccount stamp: 'EMI 11/6/2020 20:32:12'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioAddEmptyPortfolio stamp: 'EMI 11/6/2020 20:32:12'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioHasNoRegisteredTransactions stamp: 'EMI 11/6/2020 20:32:12'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasOneAccountWithOneRegisteredTransaction stamp: 'EMI 11/6/2020 20:32:12'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioMoreThanOneAccountWithRegisteredTransactions stamp: 'EMI 11/6/2020 20:32:12'!
PASSED!

!testRun: #PortfolioTest #test07EmptyPortfolioHasNoTransactions stamp: 'EMI 11/6/2020 20:32:12'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioWithOneAccountHasOneTransaction stamp: 'EMI 11/6/2020 20:32:12'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithMoreThanOneAccountHasMoreThanOneTransactions stamp: 'EMI 11/6/2020 20:32:12'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioHasOneChildPortfolioWithAnAccountAndADeposit stamp: 'EMI 11/6/2020 20:32:12'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioHasMoreThanOneChildPortfolioWithAnAccountAndADeposit stamp: 'EMI 11/6/2020 20:32:12'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioHasOneChildPortfolioWithAnAccountAndADepositRegistered stamp: 'EMI 11/6/2020 20:32:12'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioHasMoreThanOneChildPortfolioWithAnAccountAndADepositRegistered stamp: 'EMI 11/6/2020 20:32:12'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioCannotAddSameEmptyAssetTwice stamp: 'EMI 11/6/2020 20:32:12'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCannotAddChildPortfolioWithSameAccount stamp: 'EMI 11/6/2020 20:32:12'!
PASSED!

!testRun: #PortfolioTest #test01NewPortfolioHasNoAccountsAndNoPortfolios stamp: 'EMI 11/6/2020 20:33:18'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioAddEmptyAccount stamp: 'EMI 11/6/2020 20:33:18'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioAddEmptyPortfolio stamp: 'EMI 11/6/2020 20:33:18'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioHasNoRegisteredTransactions stamp: 'EMI 11/6/2020 20:33:18'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasOneAccountWithOneRegisteredTransaction stamp: 'EMI 11/6/2020 20:33:18'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioMoreThanOneAccountWithRegisteredTransactions stamp: 'EMI 11/6/2020 20:33:18'!
PASSED!

!testRun: #PortfolioTest #test07EmptyPortfolioHasNoTransactions stamp: 'EMI 11/6/2020 20:33:18'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioWithOneAccountHasOneTransaction stamp: 'EMI 11/6/2020 20:33:18'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithMoreThanOneAccountHasMoreThanOneTransactions stamp: 'EMI 11/6/2020 20:33:18'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioHasOneChildPortfolioWithAnAccountAndADeposit stamp: 'EMI 11/6/2020 20:33:18'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioHasMoreThanOneChildPortfolioWithAnAccountAndADeposit stamp: 'EMI 11/6/2020 20:33:18'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioHasOneChildPortfolioWithAnAccountAndADepositRegistered stamp: 'EMI 11/6/2020 20:33:18'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioHasMoreThanOneChildPortfolioWithAnAccountAndADepositRegistered stamp: 'EMI 11/6/2020 20:33:18'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioCannotAddSameEmptyAssetTwice stamp: 'EMI 11/6/2020 20:33:18'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCannotAddChildPortfolioWithSameAccount stamp: 'EMI 11/6/2020 20:33:18'!
PASSED!
!PortfolioTest methodsFor: 'tests' stamp: 'EMI 11/6/2020 20:37:28'!
test16PortfolioCannotAddChildrenPortfoliosWithSameAccount
	| portfolio portfolio2 account|
	portfolio _ Portfolio new.
	account _  ReceptiveAccount new.
	self assert: (portfolio add: account).
	
	portfolio2 _ Portfolio new.
	self assert: (portfolio2 add: account).
	
	self deny: (portfolio add: portfolio2).


	 
! !
!PortfolioTest methodsFor: 'tests' stamp: 'EMI 11/6/2020 20:38:09' prior: 50893211!
test16PortfolioCannotAddChildrenPortfoliosWithSameAccount
	| portfolio portfolio2 portfolio3 account|
	portfolio _ Portfolio new.
	account _  ReceptiveAccount new.
	self assert: (portfolio add: account).
	
	portfolio2 _ Portfolio new.
	self assert: (portfolio2 add: account).
	
	portfolio3 _ Portfolio new.
	self assert: (portfolio3 add: account).
	
	self assert: (portfolio add: portfolio2).
	self deny: (portfolio add: portfolio3).


	 
! !
!PortfolioTest methodsFor: 'tests' stamp: 'EMI 11/6/2020 20:38:20'!
test16PortfolioCannotAddBothChildrenPortfoliosWithSameAccount
	| portfolio portfolio2 portfolio3 account|
	portfolio _ Portfolio new.
	account _  ReceptiveAccount new.
	self assert: (portfolio add: account).
	
	portfolio2 _ Portfolio new.
	self assert: (portfolio2 add: account).
	
	portfolio3 _ Portfolio new.
	self assert: (portfolio3 add: account).
	
	self assert: (portfolio add: portfolio2).
	self deny: (portfolio add: portfolio3).


	 
! !

!methodRemoval: PortfolioTest #test16PortfolioCannotAddChildrenPortfoliosWithSameAccount stamp: 'EMI 11/6/2020 20:38:20'!
test16PortfolioCannotAddChildrenPortfoliosWithSameAccount
	| portfolio portfolio2 portfolio3 account|
	portfolio _ Portfolio new.
	account _  ReceptiveAccount new.
	self assert: (portfolio add: account).
	
	portfolio2 _ Portfolio new.
	self assert: (portfolio2 add: account).
	
	portfolio3 _ Portfolio new.
	self assert: (portfolio3 add: account).
	
	self assert: (portfolio add: portfolio2).
	self deny: (portfolio add: portfolio3).


	 
!
!PortfolioTest methodsFor: 'tests' stamp: 'EMI 11/6/2020 20:40:05' prior: 50893240!
test16PortfolioCannotAddBothChildrenPortfoliosWithSameAccount
	| portfolio portfolio2 portfolio3 account|
	portfolio _ Portfolio new.
	account _  ReceptiveAccount new.
	
	portfolio2 _ Portfolio new.
	self assert: (portfolio2 add: account).
	
	portfolio3 _ Portfolio new.
	self assert: (portfolio3 add: account).
	
	self assert: (portfolio add: portfolio2).
	self deny: (portfolio add: portfolio3).


	 
! !

!testRun: #PortfolioTest #test01NewPortfolioHasNoAccountsAndNoPortfolios stamp: 'EMI 11/6/2020 20:40:08'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioAddEmptyAccount stamp: 'EMI 11/6/2020 20:40:08'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioAddEmptyPortfolio stamp: 'EMI 11/6/2020 20:40:08'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioHasNoRegisteredTransactions stamp: 'EMI 11/6/2020 20:40:08'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasOneAccountWithOneRegisteredTransaction stamp: 'EMI 11/6/2020 20:40:08'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioMoreThanOneAccountWithRegisteredTransactions stamp: 'EMI 11/6/2020 20:40:08'!
PASSED!

!testRun: #PortfolioTest #test07EmptyPortfolioHasNoTransactions stamp: 'EMI 11/6/2020 20:40:08'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioWithOneAccountHasOneTransaction stamp: 'EMI 11/6/2020 20:40:08'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithMoreThanOneAccountHasMoreThanOneTransactions stamp: 'EMI 11/6/2020 20:40:08'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioHasOneChildPortfolioWithAnAccountAndADeposit stamp: 'EMI 11/6/2020 20:40:08'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioHasMoreThanOneChildPortfolioWithAnAccountAndADeposit stamp: 'EMI 11/6/2020 20:40:08'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioHasOneChildPortfolioWithAnAccountAndADepositRegistered stamp: 'EMI 11/6/2020 20:40:08'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioHasMoreThanOneChildPortfolioWithAnAccountAndADepositRegistered stamp: 'EMI 11/6/2020 20:40:08'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioCannotAddSameEmptyAssetTwice stamp: 'EMI 11/6/2020 20:40:08'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCannotAddChildPortfolioWithSameAccount stamp: 'EMI 11/6/2020 20:40:08'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioCannotAddBothChildrenPortfoliosWithSameAccount stamp: 'EMI 11/6/2020 20:40:08'!
FAILURE!

!testRun: #PortfolioTest #test16PortfolioCannotAddBothChildrenPortfoliosWithSameAccount stamp: 'EMI 11/6/2020 20:40:08'!
FAILURE!
!Portfolio methodsFor: 'testing' stamp: 'EMI 11/6/2020 20:42:55' prior: 50892816 overrides: 50892888!
hasAsset: anAsset
	^(assets includes: anAsset) or: [
		
	].! !
!Portfolio methodsFor: 'testing' stamp: 'EMI 11/6/2020 20:45:48' prior: 50893356 overrides: 50892888!
hasAsset: anAsset
	^(assets includes: anAsset) or: [
		(assets allSatisfy: [:aChildAsset | (aChildAsset hasAsset: anAsset) not]) ifFalse: [^false].
		^true.
	].! !
!Portfolio methodsFor: 'testing' stamp: 'EMI 11/6/2020 20:50:07' prior: 50893362 overrides: 50892888!
hasAsset: anAsset
	| estaEnMisHijosDirectos estaEnElRestoDelArbol |
	estaEnMisHijosDirectos _ assets includes: anAsset.
	estaEnElRestoDelArbol _ assets detect: [:aChildAsset | aChildAsset hasAsset: anAsset] isEmpty not.
	^estaEnMisHijosDirectos or: [estaEnElRestoDelArbol].
	! !

----SNAPSHOT----(6 November 2020 20:52:05) CuisUniversity-4383.image priorSource: 17945082!

!testRun: #PortfolioTest #test01NewPortfolioHasNoAccountsAndNoPortfolios stamp: 'EMI 11/6/2020 20:52:10'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioAddEmptyAccount stamp: 'EMI 11/6/2020 20:52:10'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioAddEmptyPortfolio stamp: 'EMI 11/6/2020 20:52:10'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioHasNoRegisteredTransactions stamp: 'EMI 11/6/2020 20:52:10'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasOneAccountWithOneRegisteredTransaction stamp: 'EMI 11/6/2020 20:52:10'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioMoreThanOneAccountWithRegisteredTransactions stamp: 'EMI 11/6/2020 20:52:10'!
PASSED!

!testRun: #PortfolioTest #test07EmptyPortfolioHasNoTransactions stamp: 'EMI 11/6/2020 20:52:10'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioWithOneAccountHasOneTransaction stamp: 'EMI 11/6/2020 20:52:10'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithMoreThanOneAccountHasMoreThanOneTransactions stamp: 'EMI 11/6/2020 20:52:10'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioHasOneChildPortfolioWithAnAccountAndADeposit stamp: 'EMI 11/6/2020 20:52:10'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioHasMoreThanOneChildPortfolioWithAnAccountAndADeposit stamp: 'EMI 11/6/2020 20:52:10'!
ERROR!

!testRun: #PortfolioTest #test12PortfolioHasOneChildPortfolioWithAnAccountAndADepositRegistered stamp: 'EMI 11/6/2020 20:52:10'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioHasMoreThanOneChildPortfolioWithAnAccountAndADepositRegistered stamp: 'EMI 11/6/2020 20:52:10'!
ERROR!

!testRun: #PortfolioTest #test14PortfolioCannotAddSameEmptyAssetTwice stamp: 'EMI 11/6/2020 20:52:10'!
ERROR!

!testRun: #PortfolioTest #test15PortfolioCannotAddChildPortfolioWithSameAccount stamp: 'EMI 11/6/2020 20:52:10'!
ERROR!

!testRun: #PortfolioTest #test16PortfolioCannotAddBothChildrenPortfoliosWithSameAccount stamp: 'EMI 11/6/2020 20:52:10'!
ERROR!

!testRun: #PortfolioTest #test11PortfolioHasMoreThanOneChildPortfolioWithAnAccountAndADeposit stamp: 'EMI 11/6/2020 20:52:23'!
ERROR!
!Portfolio methodsFor: 'testing' stamp: 'EMI 11/6/2020 20:52:42' prior: 50893371 overrides: 50892888!
hasAsset: anAsset
	| estaEnMisHijosDirectos estaEnElRestoDelArbol |
	estaEnMisHijosDirectos _ assets includes: anAsset.
	estaEnElRestoDelArbol _ (assets detect: [:aChildAsset | aChildAsset hasAsset: anAsset]) isEmpty not.
	^estaEnMisHijosDirectos or: [estaEnElRestoDelArbol].
	! !

!testRun: #PortfolioTest #test01NewPortfolioHasNoAccountsAndNoPortfolios stamp: 'EMI 11/6/2020 20:52:45'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioAddEmptyAccount stamp: 'EMI 11/6/2020 20:52:45'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioAddEmptyPortfolio stamp: 'EMI 11/6/2020 20:52:45'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioHasNoRegisteredTransactions stamp: 'EMI 11/6/2020 20:52:45'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasOneAccountWithOneRegisteredTransaction stamp: 'EMI 11/6/2020 20:52:45'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioMoreThanOneAccountWithRegisteredTransactions stamp: 'EMI 11/6/2020 20:52:45'!
PASSED!

!testRun: #PortfolioTest #test07EmptyPortfolioHasNoTransactions stamp: 'EMI 11/6/2020 20:52:45'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioWithOneAccountHasOneTransaction stamp: 'EMI 11/6/2020 20:52:45'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithMoreThanOneAccountHasMoreThanOneTransactions stamp: 'EMI 11/6/2020 20:52:45'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioHasOneChildPortfolioWithAnAccountAndADeposit stamp: 'EMI 11/6/2020 20:52:45'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioHasMoreThanOneChildPortfolioWithAnAccountAndADeposit stamp: 'EMI 11/6/2020 20:52:45'!
ERROR!

!testRun: #PortfolioTest #test12PortfolioHasOneChildPortfolioWithAnAccountAndADepositRegistered stamp: 'EMI 11/6/2020 20:52:45'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioHasMoreThanOneChildPortfolioWithAnAccountAndADepositRegistered stamp: 'EMI 11/6/2020 20:52:45'!
ERROR!

!testRun: #PortfolioTest #test14PortfolioCannotAddSameEmptyAssetTwice stamp: 'EMI 11/6/2020 20:52:45'!
ERROR!

!testRun: #PortfolioTest #test15PortfolioCannotAddChildPortfolioWithSameAccount stamp: 'EMI 11/6/2020 20:52:45'!
ERROR!

!testRun: #PortfolioTest #test16PortfolioCannotAddBothChildrenPortfoliosWithSameAccount stamp: 'EMI 11/6/2020 20:52:45'!
ERROR!

!testRun: #PortfolioTest #test11PortfolioHasMoreThanOneChildPortfolioWithAnAccountAndADeposit stamp: 'EMI 11/6/2020 20:52:47'!
ERROR!
!Portfolio methodsFor: 'testing' stamp: 'EMI 11/6/2020 20:56:13' prior: 50893451 overrides: 50892888!
hasAsset: anAsset
	| estaEnMisHijosDirectos estaEnElRestoDelArbol |
	estaEnMisHijosDirectos _ assets includes: anAsset.
	estaEnElRestoDelArbol _ (assets select: [:aChildAsset | aChildAsset hasAsset: anAsset]) isEmpty not.
	^estaEnMisHijosDirectos or: [estaEnElRestoDelArbol].
	! !

!testRun: #PortfolioTest #test01NewPortfolioHasNoAccountsAndNoPortfolios stamp: 'EMI 11/6/2020 20:56:24'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioAddEmptyAccount stamp: 'EMI 11/6/2020 20:56:24'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioAddEmptyPortfolio stamp: 'EMI 11/6/2020 20:56:24'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioHasNoRegisteredTransactions stamp: 'EMI 11/6/2020 20:56:24'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasOneAccountWithOneRegisteredTransaction stamp: 'EMI 11/6/2020 20:56:24'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioMoreThanOneAccountWithRegisteredTransactions stamp: 'EMI 11/6/2020 20:56:24'!
PASSED!

!testRun: #PortfolioTest #test07EmptyPortfolioHasNoTransactions stamp: 'EMI 11/6/2020 20:56:24'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioWithOneAccountHasOneTransaction stamp: 'EMI 11/6/2020 20:56:24'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithMoreThanOneAccountHasMoreThanOneTransactions stamp: 'EMI 11/6/2020 20:56:24'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioHasOneChildPortfolioWithAnAccountAndADeposit stamp: 'EMI 11/6/2020 20:56:24'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioHasMoreThanOneChildPortfolioWithAnAccountAndADeposit stamp: 'EMI 11/6/2020 20:56:24'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioHasOneChildPortfolioWithAnAccountAndADepositRegistered stamp: 'EMI 11/6/2020 20:56:24'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioHasMoreThanOneChildPortfolioWithAnAccountAndADepositRegistered stamp: 'EMI 11/6/2020 20:56:24'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioCannotAddSameEmptyAssetTwice stamp: 'EMI 11/6/2020 20:56:24'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCannotAddChildPortfolioWithSameAccount stamp: 'EMI 11/6/2020 20:56:24'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioCannotAddBothChildrenPortfoliosWithSameAccount stamp: 'EMI 11/6/2020 20:56:24'!
FAILURE!

!testRun: #PortfolioTest #test16PortfolioCannotAddBothChildrenPortfoliosWithSameAccount stamp: 'EMI 11/6/2020 20:56:24'!
FAILURE!
!Portfolio methodsFor: 'adding' stamp: 'EMI 11/6/2020 21:00:25' prior: 50893089!
add: anAsset
	(assets includes: anAsset) ifTrue:[^false].
	((assets select: [:aChildAsset | anAsset hasAsset: aChildAsset]) isEmpty not) ifFalse: [^false].
	assets add: anAsset.
	^true.! !

----SNAPSHOT----(6 November 2020 21:01:51) CuisUniversity-4383.image priorSource: 17975414!

!testRun: #PortfolioTest #test01NewPortfolioHasNoAccountsAndNoPortfolios stamp: 'EMI 11/6/2020 21:01:54'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioAddEmptyAccount stamp: 'EMI 11/6/2020 21:01:54'!
FAILURE!

!testRun: #PortfolioTest #test03PortfolioAddEmptyPortfolio stamp: 'EMI 11/6/2020 21:01:54'!
FAILURE!

!testRun: #PortfolioTest #test04PortfolioHasNoRegisteredTransactions stamp: 'EMI 11/6/2020 21:01:54'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasOneAccountWithOneRegisteredTransaction stamp: 'EMI 11/6/2020 21:01:54'!
FAILURE!

!testRun: #PortfolioTest #test06PortfolioMoreThanOneAccountWithRegisteredTransactions stamp: 'EMI 11/6/2020 21:01:54'!
FAILURE!

!testRun: #PortfolioTest #test07EmptyPortfolioHasNoTransactions stamp: 'EMI 11/6/2020 21:01:54'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioWithOneAccountHasOneTransaction stamp: 'EMI 11/6/2020 21:01:54'!
FAILURE!

!testRun: #PortfolioTest #test09PortfolioWithMoreThanOneAccountHasMoreThanOneTransactions stamp: 'EMI 11/6/2020 21:01:54'!
FAILURE!

!testRun: #PortfolioTest #test10PortfolioHasOneChildPortfolioWithAnAccountAndADeposit stamp: 'EMI 11/6/2020 21:01:54'!
FAILURE!

!testRun: #PortfolioTest #test11PortfolioHasMoreThanOneChildPortfolioWithAnAccountAndADeposit stamp: 'EMI 11/6/2020 21:01:54'!
FAILURE!

!testRun: #PortfolioTest #test12PortfolioHasOneChildPortfolioWithAnAccountAndADepositRegistered stamp: 'EMI 11/6/2020 21:01:54'!
FAILURE!

!testRun: #PortfolioTest #test13PortfolioHasMoreThanOneChildPortfolioWithAnAccountAndADepositRegistered stamp: 'EMI 11/6/2020 21:01:54'!
FAILURE!

!testRun: #PortfolioTest #test14PortfolioCannotAddSameEmptyAssetTwice stamp: 'EMI 11/6/2020 21:01:54'!
FAILURE!

!testRun: #PortfolioTest #test15PortfolioCannotAddChildPortfolioWithSameAccount stamp: 'EMI 11/6/2020 21:01:54'!
FAILURE!

!testRun: #PortfolioTest #test16PortfolioCannotAddBothChildrenPortfoliosWithSameAccount stamp: 'EMI 11/6/2020 21:01:54'!
FAILURE!

!testRun: #PortfolioTest #test02PortfolioAddEmptyAccount stamp: 'EMI 11/6/2020 21:01:58'!
FAILURE!

!testRun: #PortfolioTest #test02PortfolioAddEmptyAccount stamp: 'EMI 11/6/2020 21:02:47'!
FAILURE!
!Portfolio methodsFor: 'adding' stamp: 'EMI 11/6/2020 21:03:28' prior: 50893605!
add: anAsset
	(assets includes: anAsset) ifTrue:[^false].
	((assets select: [:aChildAsset | anAsset hasAsset: aChildAsset]) isEmpty) ifFalse: [^false].
	assets add: anAsset.
	^true.! !

!testRun: #PortfolioTest #test01NewPortfolioHasNoAccountsAndNoPortfolios stamp: 'EMI 11/6/2020 21:03:32'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioAddEmptyAccount stamp: 'EMI 11/6/2020 21:03:32'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioAddEmptyPortfolio stamp: 'EMI 11/6/2020 21:03:32'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioHasNoRegisteredTransactions stamp: 'EMI 11/6/2020 21:03:32'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasOneAccountWithOneRegisteredTransaction stamp: 'EMI 11/6/2020 21:03:32'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioMoreThanOneAccountWithRegisteredTransactions stamp: 'EMI 11/6/2020 21:03:32'!
PASSED!

!testRun: #PortfolioTest #test07EmptyPortfolioHasNoTransactions stamp: 'EMI 11/6/2020 21:03:32'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioWithOneAccountHasOneTransaction stamp: 'EMI 11/6/2020 21:03:32'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithMoreThanOneAccountHasMoreThanOneTransactions stamp: 'EMI 11/6/2020 21:03:32'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioHasOneChildPortfolioWithAnAccountAndADeposit stamp: 'EMI 11/6/2020 21:03:32'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioHasMoreThanOneChildPortfolioWithAnAccountAndADeposit stamp: 'EMI 11/6/2020 21:03:32'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioHasOneChildPortfolioWithAnAccountAndADepositRegistered stamp: 'EMI 11/6/2020 21:03:32'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioHasMoreThanOneChildPortfolioWithAnAccountAndADepositRegistered stamp: 'EMI 11/6/2020 21:03:32'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioCannotAddSameEmptyAssetTwice stamp: 'EMI 11/6/2020 21:03:32'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCannotAddChildPortfolioWithSameAccount stamp: 'EMI 11/6/2020 21:03:32'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioCannotAddBothChildrenPortfoliosWithSameAccount stamp: 'EMI 11/6/2020 21:03:32'!
FAILURE!

!testRun: #PortfolioTest #test16PortfolioCannotAddBothChildrenPortfoliosWithSameAccount stamp: 'EMI 11/6/2020 21:03:32'!
FAILURE!

----SNAPSHOT----(6 November 2020 21:10:01) CuisUniversity-4383.image priorSource: 17982812!

----SNAPSHOT----(6 November 2020 21:10:11) CuisUniversity-4383.image priorSource: 17987412!

----QUIT----(6 November 2020 21:10:38) CuisUniversity-4383.image priorSource: 17987505!

----STARTUP---- (7 November 2020 15:02:13) as /home/doraserver/CuisUniversity/CuisUniversity-4383.image!

!Portfolio methodsFor: 'adding' stamp: 'EMI 11/7/2020 15:37:23' prior: 50893684!
add: anAsset
	(assets includes: anAsset) ifTrue:[^false].
	(assets first hasAsset: anAsset) ifTrue: [^false].
	(anAsset hasAsset: assets first) ifTrue: [^false].
	
	assets add: anAsset.
	^true.! !
!Portfolio methodsFor: 'testing' stamp: 'EMI 11/7/2020 15:39:55' prior: 50893528 overrides: 50892888!
hasAsset: anAsset
	| estaEnMisHijosDirectos estaEnElRestoDelArbol |
	estaEnMisHijosDirectos _ assets includes: anAsset.
	estaEnElRestoDelArbol _ (assets select: [:aChildAsset | (aChildAsset hasAsset: anAsset) or: [anAsset hasAsset: aChildAsset]]) isEmpty not.
	^estaEnMisHijosDirectos or: [estaEnElRestoDelArbol].
	! !

----SNAPSHOT----(7 November 2020 15:42:53) CuisUniversity-4383.image priorSource: 17987598!
!Portfolio methodsFor: 'testing' stamp: 'EMI 11/7/2020 15:43:07' prior: 50893780 overrides: 50892888!
hasAsset: anAsset
	| estaEnMisHijosDirectos |
	estaEnMisHijosDirectos _ assets includes: anAsset.
	^estaEnMisHijosDirectos or: [(assets select: [:aChildAsset | (aChildAsset hasAsset: anAsset) or: [anAsset hasAsset: aChildAsset]]) isEmpty not.].
	! !

----SNAPSHOT----(7 November 2020 15:43:34) CuisUniversity-4383.image priorSource: 17988542!

!testRun: #PortfolioTest #test01NewPortfolioHasNoAccountsAndNoPortfolios stamp: 'EMI 11/7/2020 15:43:38'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioAddEmptyAccount stamp: 'EMI 11/7/2020 15:43:38'!
ERROR!

!testRun: #PortfolioTest #test03PortfolioAddEmptyPortfolio stamp: 'EMI 11/7/2020 15:43:38'!
ERROR!

!testRun: #PortfolioTest #test04PortfolioHasNoRegisteredTransactions stamp: 'EMI 11/7/2020 15:43:38'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasOneAccountWithOneRegisteredTransaction stamp: 'EMI 11/7/2020 15:43:38'!
ERROR!

!testRun: #PortfolioTest #test06PortfolioMoreThanOneAccountWithRegisteredTransactions stamp: 'EMI 11/7/2020 15:43:38'!
ERROR!

!testRun: #PortfolioTest #test07EmptyPortfolioHasNoTransactions stamp: 'EMI 11/7/2020 15:43:38'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioWithOneAccountHasOneTransaction stamp: 'EMI 11/7/2020 15:43:38'!
ERROR!

!testRun: #PortfolioTest #test09PortfolioWithMoreThanOneAccountHasMoreThanOneTransactions stamp: 'EMI 11/7/2020 15:43:38'!
ERROR!

!testRun: #PortfolioTest #test10PortfolioHasOneChildPortfolioWithAnAccountAndADeposit stamp: 'EMI 11/7/2020 15:43:38'!
ERROR!

!testRun: #PortfolioTest #test11PortfolioHasMoreThanOneChildPortfolioWithAnAccountAndADeposit stamp: 'EMI 11/7/2020 15:43:38'!
ERROR!

!testRun: #PortfolioTest #test12PortfolioHasOneChildPortfolioWithAnAccountAndADepositRegistered stamp: 'EMI 11/7/2020 15:43:38'!
ERROR!

!testRun: #PortfolioTest #test13PortfolioHasMoreThanOneChildPortfolioWithAnAccountAndADepositRegistered stamp: 'EMI 11/7/2020 15:43:38'!
ERROR!

!testRun: #PortfolioTest #test14PortfolioCannotAddSameEmptyAssetTwice stamp: 'EMI 11/7/2020 15:43:38'!
ERROR!

!testRun: #PortfolioTest #test15PortfolioCannotAddChildPortfolioWithSameAccount stamp: 'EMI 11/7/2020 15:43:38'!
ERROR!

!testRun: #PortfolioTest #test16PortfolioCannotAddBothChildrenPortfoliosWithSameAccount stamp: 'EMI 11/7/2020 15:43:38'!
ERROR!

!testRun: #PortfolioTest #test02PortfolioAddEmptyAccount stamp: 'EMI 11/7/2020 15:43:42'!
ERROR!
!Portfolio methodsFor: 'adding' stamp: 'EMI 11/7/2020 15:44:36' prior: 50893770!
add: anAsset
	(assets includes: anAsset) ifTrue:[^false].
	anAsset isEmpty not ifTrue: [
		(assets first hasAsset: anAsset) ifTrue: [^false].
		(anAsset hasAsset: assets first) ifTrue: [^false].
	].
	assets add: anAsset.
	^true.! !
!Portfolio methodsFor: 'adding' stamp: 'EMI 11/7/2020 15:44:40' prior: 50893874!
add: anAsset
	(assets includes: anAsset) ifTrue:[^false].
	assets isEmpty not ifTrue: [
		(assets first hasAsset: anAsset) ifTrue: [^false].
		(anAsset hasAsset: assets first) ifTrue: [^false].
	].
	assets add: anAsset.
	^true.! !

!testRun: #PortfolioTest #test01NewPortfolioHasNoAccountsAndNoPortfolios stamp: 'EMI 11/7/2020 15:44:46'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioAddEmptyAccount stamp: 'EMI 11/7/2020 15:44:46'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioAddEmptyPortfolio stamp: 'EMI 11/7/2020 15:44:46'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioHasNoRegisteredTransactions stamp: 'EMI 11/7/2020 15:44:46'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasOneAccountWithOneRegisteredTransaction stamp: 'EMI 11/7/2020 15:44:46'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioMoreThanOneAccountWithRegisteredTransactions stamp: 'EMI 11/7/2020 15:44:46'!
PASSED!

!testRun: #PortfolioTest #test07EmptyPortfolioHasNoTransactions stamp: 'EMI 11/7/2020 15:44:46'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioWithOneAccountHasOneTransaction stamp: 'EMI 11/7/2020 15:44:46'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithMoreThanOneAccountHasMoreThanOneTransactions stamp: 'EMI 11/7/2020 15:44:46'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioHasOneChildPortfolioWithAnAccountAndADeposit stamp: 'EMI 11/7/2020 15:44:46'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioHasMoreThanOneChildPortfolioWithAnAccountAndADeposit stamp: 'EMI 11/7/2020 15:44:46'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioHasOneChildPortfolioWithAnAccountAndADepositRegistered stamp: 'EMI 11/7/2020 15:44:46'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioHasMoreThanOneChildPortfolioWithAnAccountAndADepositRegistered stamp: 'EMI 11/7/2020 15:44:46'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioCannotAddSameEmptyAssetTwice stamp: 'EMI 11/7/2020 15:44:46'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCannotAddChildPortfolioWithSameAccount stamp: 'EMI 11/7/2020 15:44:46'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioCannotAddBothChildrenPortfoliosWithSameAccount stamp: 'EMI 11/7/2020 15:44:46'!
PASSED!
!PortfolioTest methodsFor: 'tests' stamp: 'EMI 11/7/2020 15:46:20'!
test17PortfolioCannotAddBothGrandChildrenPortfoliosWithSameAccount
	| portfolio portfolio2 portfolio3 account|
	portfolio _ Portfolio new.
	account _  ReceptiveAccount new.
	
	portfolio2 _ Portfolio new.
	self assert: (portfolio2 add: account).
	
	portfolio3 _ Portfolio new.
	self assert: (portfolio3 add: account).
	
	self assert: (portfolio add: portfolio2).
	self deny: (portfolio add: portfolio3).


	 
! !
!PortfolioTest methodsFor: 'tests' stamp: 'EMI 11/7/2020 15:48:21' prior: 50893955!
test17PortfolioCannotAddBothGrandChildrenPortfoliosWithSameAccount
	| portfolio portfolio2 portfolio3 portfolio4 portfolio5 account|
	portfolio _ Portfolio new.
	account _  ReceptiveAccount new.
	
	portfolio2 _ Portfolio new.
	portfolio3 _ Portfolio new.
	
	portfolio4 _ Portfolio new.
	self assert: (portfolio4 add: account).
	
	portfolio5 _ Portfolio new.
	self assert: (portfolio5 add: account).
	
	self assert: (portfolio add: portfolio2).
	self assert: (portfolio add: portfolio3).
	self assert: (portfolio2 add: portfolio4).
	self deny: (portfolio3 add: portfolio5).


	 
! !

!testRun: #PortfolioTest #test01NewPortfolioHasNoAccountsAndNoPortfolios stamp: 'EMI 11/7/2020 15:48:25'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioAddEmptyAccount stamp: 'EMI 11/7/2020 15:48:25'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioAddEmptyPortfolio stamp: 'EMI 11/7/2020 15:48:25'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioHasNoRegisteredTransactions stamp: 'EMI 11/7/2020 15:48:25'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasOneAccountWithOneRegisteredTransaction stamp: 'EMI 11/7/2020 15:48:25'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioMoreThanOneAccountWithRegisteredTransactions stamp: 'EMI 11/7/2020 15:48:25'!
PASSED!

!testRun: #PortfolioTest #test07EmptyPortfolioHasNoTransactions stamp: 'EMI 11/7/2020 15:48:25'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioWithOneAccountHasOneTransaction stamp: 'EMI 11/7/2020 15:48:25'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithMoreThanOneAccountHasMoreThanOneTransactions stamp: 'EMI 11/7/2020 15:48:25'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioHasOneChildPortfolioWithAnAccountAndADeposit stamp: 'EMI 11/7/2020 15:48:25'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioHasMoreThanOneChildPortfolioWithAnAccountAndADeposit stamp: 'EMI 11/7/2020 15:48:25'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioHasOneChildPortfolioWithAnAccountAndADepositRegistered stamp: 'EMI 11/7/2020 15:48:25'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioHasMoreThanOneChildPortfolioWithAnAccountAndADepositRegistered stamp: 'EMI 11/7/2020 15:48:25'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioCannotAddSameEmptyAssetTwice stamp: 'EMI 11/7/2020 15:48:25'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCannotAddChildPortfolioWithSameAccount stamp: 'EMI 11/7/2020 15:48:25'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioCannotAddBothChildrenPortfoliosWithSameAccount stamp: 'EMI 11/7/2020 15:48:25'!
PASSED!

!testRun: #PortfolioTest #test17PortfolioCannotAddBothGrandChildrenPortfoliosWithSameAccount stamp: 'EMI 11/7/2020 15:48:25'!
FAILURE!

!testRun: #PortfolioTest #test17PortfolioCannotAddBothGrandChildrenPortfoliosWithSameAccount stamp: 'EMI 11/7/2020 15:48:25'!
FAILURE!

----SNAPSHOT----(7 November 2020 15:48:34) CuisUniversity-4383.image priorSource: 17989017!
!Asset methodsFor: 'as yet unclassified' stamp: 'EMI 11/7/2020 15:51:57'!
parent
	^self subclassResponsibility.! !
!Asset methodsFor: 'as yet unclassified' stamp: 'EMI 11/7/2020 15:54:32'!
addAsSubassetOf: aParentAsset
	^self subclassResponsibility.! !
!Asset methodsFor: 'as yet unclassified' stamp: 'EMI 11/7/2020 15:54:48'!
parentAsset
	^self subclassResponsibility.! !

!methodRemoval: Asset #parent stamp: 'EMI 11/7/2020 15:54:48'!
parent
	^self subclassResponsibility.!

Object subclass: #Asset
	instanceVariableNames: 'parent'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classDefinition: #Asset category: 'Portfolio-Ejercicio' stamp: 'EMI 11/7/2020 15:57:29'!
Object subclass: #Asset
	instanceVariableNames: 'parent'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!
!Portfolio methodsFor: 'nil' stamp: 'EMI 11/7/2020 15:57:58' overrides: 50894068!
addAsSubassetOf: aParentAsset
	parent _ aParentAsset.! !
!ReceptiveAccount methodsFor: 'nil' stamp: 'EMI 11/7/2020 15:58:06' overrides: 50894068!
addAsSubassetOf: aParentAsset
	parent _ aParentAsset.! !
!ReceptiveAccount methodsFor: 'nil' stamp: 'EMI 11/7/2020 15:58:26' overrides: 50894073!
parentAsset
	^parent.! !
!Portfolio methodsFor: 'nil' stamp: 'EMI 11/7/2020 15:58:43' overrides: 50894073!
parentAsset
	^parent! !
!Portfolio methodsFor: 'initialization' stamp: 'EMI 11/7/2020 16:00:40' prior: 50892381 overrides: 16896425!
initialize
	assets _ OrderedCollection new.
	parent _ nil.! !
!ReceptiveAccount methodsFor: 'initialization' stamp: 'EMI 11/7/2020 16:00:49' prior: 50889494 overrides: 16896425!
initialize

	transactions := OrderedCollection new.
	parent _ nil.! !
!Portfolio methodsFor: 'adding' stamp: 'EMI 11/7/2020 16:03:08' prior: 50893884!
add: anAsset
	| root |
	(assets includes: anAsset) ifTrue:[^false].
	root _ self parent.
	assets isEmpty not ifTrue: [
		(root isNil not) whileTrue: [root _ root parent].
		(root hasAsset: anAsset) ifTrue:[^false.].
		(assets first hasAsset: anAsset) ifTrue: [^false].
		(anAsset hasAsset: assets first) ifTrue: [^false].
	].
	assets add: anAsset.
	^true.! !
!Portfolio methodsFor: 'adding' stamp: 'EMI 11/7/2020 16:03:34' prior: 50894122!
add: anAsset
	| root |
	(assets includes: anAsset) ifTrue:[^false].
	root _ self parent.
	assets isEmpty not ifTrue: [
		(root isNil not) whileTrue: [root _ root parent].
		(root hasAsset: anAsset) ifTrue:[^false.].
		(assets first hasAsset: anAsset) ifTrue: [^false].
		(anAsset hasAsset: assets first) ifTrue: [^false].
	].
	assets add: anAsset.
	anAsset addAsSubassetOf: self.
	^true.! !

----SNAPSHOT----(7 November 2020 16:04:00) CuisUniversity-4383.image priorSource: 17997133!

!testRun: #PortfolioTest #test01NewPortfolioHasNoAccountsAndNoPortfolios stamp: 'EMI 11/7/2020 16:04:03'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioAddEmptyAccount stamp: 'EMI 11/7/2020 16:04:03'!
ERROR!

!testRun: #PortfolioTest #test03PortfolioAddEmptyPortfolio stamp: 'EMI 11/7/2020 16:04:03'!
ERROR!

!testRun: #PortfolioTest #test04PortfolioHasNoRegisteredTransactions stamp: 'EMI 11/7/2020 16:04:03'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasOneAccountWithOneRegisteredTransaction stamp: 'EMI 11/7/2020 16:04:03'!
ERROR!

!testRun: #PortfolioTest #test06PortfolioMoreThanOneAccountWithRegisteredTransactions stamp: 'EMI 11/7/2020 16:04:03'!
ERROR!

!testRun: #PortfolioTest #test07EmptyPortfolioHasNoTransactions stamp: 'EMI 11/7/2020 16:04:03'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioWithOneAccountHasOneTransaction stamp: 'EMI 11/7/2020 16:04:03'!
ERROR!

!testRun: #PortfolioTest #test09PortfolioWithMoreThanOneAccountHasMoreThanOneTransactions stamp: 'EMI 11/7/2020 16:04:03'!
ERROR!

!testRun: #PortfolioTest #test10PortfolioHasOneChildPortfolioWithAnAccountAndADeposit stamp: 'EMI 11/7/2020 16:04:03'!
ERROR!

!testRun: #PortfolioTest #test11PortfolioHasMoreThanOneChildPortfolioWithAnAccountAndADeposit stamp: 'EMI 11/7/2020 16:04:03'!
ERROR!

!testRun: #PortfolioTest #test12PortfolioHasOneChildPortfolioWithAnAccountAndADepositRegistered stamp: 'EMI 11/7/2020 16:04:03'!
ERROR!

!testRun: #PortfolioTest #test13PortfolioHasMoreThanOneChildPortfolioWithAnAccountAndADepositRegistered stamp: 'EMI 11/7/2020 16:04:03'!
ERROR!

!testRun: #PortfolioTest #test14PortfolioCannotAddSameEmptyAssetTwice stamp: 'EMI 11/7/2020 16:04:03'!
ERROR!

!testRun: #PortfolioTest #test15PortfolioCannotAddChildPortfolioWithSameAccount stamp: 'EMI 11/7/2020 16:04:03'!
ERROR!

!testRun: #PortfolioTest #test16PortfolioCannotAddBothChildrenPortfoliosWithSameAccount stamp: 'EMI 11/7/2020 16:04:03'!
ERROR!

!testRun: #PortfolioTest #test17PortfolioCannotAddBothGrandChildrenPortfoliosWithSameAccount stamp: 'EMI 11/7/2020 16:04:03'!
ERROR!

!testRun: #PortfolioTest #test02PortfolioAddEmptyAccount stamp: 'EMI 11/7/2020 16:04:07'!
ERROR!
!Portfolio methodsFor: 'adding' stamp: 'EMI 11/7/2020 16:04:34' prior: 50894136!
add: anAsset
	| root |
	(assets includes: anAsset) ifTrue:[^false].
	root _ self parentAsset .
	assets isEmpty not ifTrue: [
		(root isNil not) whileTrue: [root _ root parentAsset ].
		(root hasAsset: anAsset) ifTrue:[^false.].
		(assets first hasAsset: anAsset) ifTrue: [^false].
		(anAsset hasAsset: assets first) ifTrue: [^false].
	].
	assets add: anAsset.
	anAsset addAsSubassetOf: self.
	^true.! !

----SNAPSHOT----(7 November 2020 16:04:38) CuisUniversity-4383.image priorSource: 18000006!

!testRun: #PortfolioTest #test01NewPortfolioHasNoAccountsAndNoPortfolios stamp: 'EMI 11/7/2020 16:04:41'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioAddEmptyAccount stamp: 'EMI 11/7/2020 16:04:41'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioAddEmptyPortfolio stamp: 'EMI 11/7/2020 16:04:41'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioHasNoRegisteredTransactions stamp: 'EMI 11/7/2020 16:04:41'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasOneAccountWithOneRegisteredTransaction stamp: 'EMI 11/7/2020 16:04:41'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioMoreThanOneAccountWithRegisteredTransactions stamp: 'EMI 11/7/2020 16:04:41'!
ERROR!

!testRun: #PortfolioTest #test07EmptyPortfolioHasNoTransactions stamp: 'EMI 11/7/2020 16:04:41'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioWithOneAccountHasOneTransaction stamp: 'EMI 11/7/2020 16:04:41'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithMoreThanOneAccountHasMoreThanOneTransactions stamp: 'EMI 11/7/2020 16:04:41'!
ERROR!

!testRun: #PortfolioTest #test10PortfolioHasOneChildPortfolioWithAnAccountAndADeposit stamp: 'EMI 11/7/2020 16:04:41'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioHasMoreThanOneChildPortfolioWithAnAccountAndADeposit stamp: 'EMI 11/7/2020 16:04:41'!
ERROR!

!testRun: #PortfolioTest #test12PortfolioHasOneChildPortfolioWithAnAccountAndADepositRegistered stamp: 'EMI 11/7/2020 16:04:41'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioHasMoreThanOneChildPortfolioWithAnAccountAndADepositRegistered stamp: 'EMI 11/7/2020 16:04:41'!
ERROR!

!testRun: #PortfolioTest #test14PortfolioCannotAddSameEmptyAssetTwice stamp: 'EMI 11/7/2020 16:04:41'!
ERROR!

!testRun: #PortfolioTest #test15PortfolioCannotAddChildPortfolioWithSameAccount stamp: 'EMI 11/7/2020 16:04:41'!
ERROR!

!testRun: #PortfolioTest #test16PortfolioCannotAddBothChildrenPortfoliosWithSameAccount stamp: 'EMI 11/7/2020 16:04:41'!
ERROR!

!testRun: #PortfolioTest #test17PortfolioCannotAddBothGrandChildrenPortfoliosWithSameAccount stamp: 'EMI 11/7/2020 16:04:41'!
ERROR!

!testRun: #PortfolioTest #test06PortfolioMoreThanOneAccountWithRegisteredTransactions stamp: 'EMI 11/7/2020 16:04:45'!
ERROR!

!testRun: #PortfolioTest #test06PortfolioMoreThanOneAccountWithRegisteredTransactions stamp: 'EMI 11/7/2020 16:06:16'!
ERROR!
!Portfolio methodsFor: 'adding' stamp: 'EMI 11/7/2020 16:06:58' prior: 50894222!
add: anAsset
	| root |
	(assets includes: anAsset) ifTrue:[^false].
	root _ self parentAsset .
	assets isEmpty not ifTrue: [
		[root isNil not] whileTrue: [root _ root parentAsset ].
		(root hasAsset: anAsset) ifTrue:[^false.].
		(assets first hasAsset: anAsset) ifTrue: [^false].
		(anAsset hasAsset: assets first) ifTrue: [^false].
	].
	assets add: anAsset.
	anAsset addAsSubassetOf: self.
	^true.! !

----SNAPSHOT----(7 November 2020 16:07:03) CuisUniversity-4383.image priorSource: 18002770!

!testRun: #PortfolioTest #test01NewPortfolioHasNoAccountsAndNoPortfolios stamp: 'EMI 11/7/2020 16:07:07'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioAddEmptyAccount stamp: 'EMI 11/7/2020 16:07:07'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioAddEmptyPortfolio stamp: 'EMI 11/7/2020 16:07:07'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioHasNoRegisteredTransactions stamp: 'EMI 11/7/2020 16:07:07'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasOneAccountWithOneRegisteredTransaction stamp: 'EMI 11/7/2020 16:07:07'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioMoreThanOneAccountWithRegisteredTransactions stamp: 'EMI 11/7/2020 16:07:07'!
ERROR!

!testRun: #PortfolioTest #test07EmptyPortfolioHasNoTransactions stamp: 'EMI 11/7/2020 16:07:07'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioWithOneAccountHasOneTransaction stamp: 'EMI 11/7/2020 16:07:07'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithMoreThanOneAccountHasMoreThanOneTransactions stamp: 'EMI 11/7/2020 16:07:07'!
ERROR!

!testRun: #PortfolioTest #test10PortfolioHasOneChildPortfolioWithAnAccountAndADeposit stamp: 'EMI 11/7/2020 16:07:07'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioHasMoreThanOneChildPortfolioWithAnAccountAndADeposit stamp: 'EMI 11/7/2020 16:07:07'!
ERROR!

!testRun: #PortfolioTest #test12PortfolioHasOneChildPortfolioWithAnAccountAndADepositRegistered stamp: 'EMI 11/7/2020 16:07:07'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioHasMoreThanOneChildPortfolioWithAnAccountAndADepositRegistered stamp: 'EMI 11/7/2020 16:07:07'!
ERROR!

!testRun: #PortfolioTest #test14PortfolioCannotAddSameEmptyAssetTwice stamp: 'EMI 11/7/2020 16:07:07'!
ERROR!

!testRun: #PortfolioTest #test15PortfolioCannotAddChildPortfolioWithSameAccount stamp: 'EMI 11/7/2020 16:07:07'!
ERROR!

!testRun: #PortfolioTest #test16PortfolioCannotAddBothChildrenPortfoliosWithSameAccount stamp: 'EMI 11/7/2020 16:07:07'!
ERROR!

!testRun: #PortfolioTest #test17PortfolioCannotAddBothGrandChildrenPortfoliosWithSameAccount stamp: 'EMI 11/7/2020 16:07:07'!
ERROR!

!testRun: #PortfolioTest #test06PortfolioMoreThanOneAccountWithRegisteredTransactions stamp: 'EMI 11/7/2020 16:07:09'!
ERROR!
!Portfolio methodsFor: 'adding' stamp: 'EMI 11/7/2020 16:08:59' prior: 50894313!
add: anAsset
	| root rootParent |
	(assets includes: anAsset) ifTrue:[^false].
	root _ self parentAsset .
	assets isEmpty not ifTrue: [
		[root isNil not] whileTrue: [rootParent _ root. root _ root parentAsset.].
		(rootParent hasAsset: anAsset) ifTrue:[^false.].
		(assets first hasAsset: anAsset) ifTrue: [^false].
		(anAsset hasAsset: assets first) ifTrue: [^false].
	].
	assets add: anAsset.
	anAsset addAsSubassetOf: self.
	^true.! !

----SNAPSHOT----(7 November 2020 16:09:09) CuisUniversity-4383.image priorSource: 18005682!

!testRun: #PortfolioTest #test01NewPortfolioHasNoAccountsAndNoPortfolios stamp: 'EMI 11/7/2020 16:09:12'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioAddEmptyAccount stamp: 'EMI 11/7/2020 16:09:12'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioAddEmptyPortfolio stamp: 'EMI 11/7/2020 16:09:12'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioHasNoRegisteredTransactions stamp: 'EMI 11/7/2020 16:09:12'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasOneAccountWithOneRegisteredTransaction stamp: 'EMI 11/7/2020 16:09:12'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioMoreThanOneAccountWithRegisteredTransactions stamp: 'EMI 11/7/2020 16:09:12'!
ERROR!

!testRun: #PortfolioTest #test07EmptyPortfolioHasNoTransactions stamp: 'EMI 11/7/2020 16:09:12'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioWithOneAccountHasOneTransaction stamp: 'EMI 11/7/2020 16:09:12'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithMoreThanOneAccountHasMoreThanOneTransactions stamp: 'EMI 11/7/2020 16:09:12'!
ERROR!

!testRun: #PortfolioTest #test10PortfolioHasOneChildPortfolioWithAnAccountAndADeposit stamp: 'EMI 11/7/2020 16:09:12'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioHasMoreThanOneChildPortfolioWithAnAccountAndADeposit stamp: 'EMI 11/7/2020 16:09:12'!
ERROR!

!testRun: #PortfolioTest #test12PortfolioHasOneChildPortfolioWithAnAccountAndADepositRegistered stamp: 'EMI 11/7/2020 16:09:12'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioHasMoreThanOneChildPortfolioWithAnAccountAndADepositRegistered stamp: 'EMI 11/7/2020 16:09:12'!
ERROR!

!testRun: #PortfolioTest #test14PortfolioCannotAddSameEmptyAssetTwice stamp: 'EMI 11/7/2020 16:09:12'!
ERROR!

!testRun: #PortfolioTest #test15PortfolioCannotAddChildPortfolioWithSameAccount stamp: 'EMI 11/7/2020 16:09:12'!
ERROR!

!testRun: #PortfolioTest #test16PortfolioCannotAddBothChildrenPortfoliosWithSameAccount stamp: 'EMI 11/7/2020 16:09:12'!
ERROR!

!testRun: #PortfolioTest #test17PortfolioCannotAddBothGrandChildrenPortfoliosWithSameAccount stamp: 'EMI 11/7/2020 16:09:12'!
ERROR!

!testRun: #PortfolioTest #test06PortfolioMoreThanOneAccountWithRegisteredTransactions stamp: 'EMI 11/7/2020 16:09:14'!
ERROR!
!Portfolio methodsFor: 'adding' stamp: 'EMI 11/7/2020 16:10:15' prior: 50894400!
add: anAsset
	| root rootParent |
	(assets includes: anAsset) ifTrue:[^false].
	root _ parent.
	rootParent _ parent.
	assets isEmpty not ifTrue: [
		[root isNil not] whileTrue: [rootParent _ root. root _ root parentAsset.].
		(rootParent hasAsset: anAsset) ifTrue:[^false.].
		(assets first hasAsset: anAsset) ifTrue: [^false].
		(anAsset hasAsset: assets first) ifTrue: [^false].
	].
	assets add: anAsset.
	anAsset addAsSubassetOf: self.
	^true.! !
!Portfolio methodsFor: 'adding' stamp: 'EMI 11/7/2020 16:10:57' prior: 50894488!
add: anAsset
	| root rootParent |
	(assets includes: anAsset) ifTrue:[^false].
	root _ parent.
	rootParent _ parent.
	assets isEmpty not ifTrue: [
		(parent isNil not) ifTrue: [
			[root isNil not] whileTrue: [rootParent _ root. root _ root parentAsset.].
			(rootParent hasAsset: anAsset) ifTrue:[^false.].
		].
		(assets first hasAsset: anAsset) ifTrue: [^false].
		(anAsset hasAsset: assets first) ifTrue: [^false].
	].
	assets add: anAsset.
	anAsset addAsSubassetOf: self.
	^true.! !
!Portfolio methodsFor: 'adding' stamp: 'EMI 11/7/2020 16:11:22' prior: 50894505!
add: anAsset
	| root rootParent |
	(assets includes: anAsset) ifTrue:[^false].
	root _ parent.
	rootParent _ parent.
	(parent isNil not) ifTrue: [
		[root isNil not] whileTrue: [rootParent _ root. root _ root parentAsset.].
		(rootParent hasAsset: anAsset) ifTrue:[^false.].
	].
	assets isEmpty not ifTrue: [
		
		(assets first hasAsset: anAsset) ifTrue: [^false].
		(anAsset hasAsset: assets first) ifTrue: [^false].
	].
	assets add: anAsset.
	anAsset addAsSubassetOf: self.
	^true.! !
!Portfolio methodsFor: 'adding' stamp: 'EMI 11/7/2020 16:11:27' prior: 50894523!
add: anAsset
	| root rootParent |
	(assets includes: anAsset) ifTrue:[^false].
	root _ parent.
	rootParent _ parent.
	(parent isNil not) ifTrue: [
		[root isNil not] whileTrue: [rootParent _ root. root _ root parentAsset.].
		(rootParent hasAsset: anAsset) ifTrue:[^false.].
	].
	assets isEmpty not ifTrue: [
		(assets first hasAsset: anAsset) ifTrue: [^false].
		(anAsset hasAsset: assets first) ifTrue: [^false].
	].
	assets add: anAsset.
	anAsset addAsSubassetOf: self.
	^true.! !

----SNAPSHOT----(7 November 2020 16:11:49) CuisUniversity-4383.image priorSource: 18008502!

!testRun: #PortfolioTest #test01NewPortfolioHasNoAccountsAndNoPortfolios stamp: 'EMI 11/7/2020 16:11:52'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioAddEmptyAccount stamp: 'EMI 11/7/2020 16:11:52'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioAddEmptyPortfolio stamp: 'EMI 11/7/2020 16:11:52'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioHasNoRegisteredTransactions stamp: 'EMI 11/7/2020 16:11:52'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasOneAccountWithOneRegisteredTransaction stamp: 'EMI 11/7/2020 16:11:52'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioMoreThanOneAccountWithRegisteredTransactions stamp: 'EMI 11/7/2020 16:11:52'!
PASSED!

!testRun: #PortfolioTest #test07EmptyPortfolioHasNoTransactions stamp: 'EMI 11/7/2020 16:11:52'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioWithOneAccountHasOneTransaction stamp: 'EMI 11/7/2020 16:11:52'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithMoreThanOneAccountHasMoreThanOneTransactions stamp: 'EMI 11/7/2020 16:11:52'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioHasOneChildPortfolioWithAnAccountAndADeposit stamp: 'EMI 11/7/2020 16:11:52'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioHasMoreThanOneChildPortfolioWithAnAccountAndADeposit stamp: 'EMI 11/7/2020 16:11:52'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioHasOneChildPortfolioWithAnAccountAndADepositRegistered stamp: 'EMI 11/7/2020 16:11:52'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioHasMoreThanOneChildPortfolioWithAnAccountAndADepositRegistered stamp: 'EMI 11/7/2020 16:11:52'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioCannotAddSameEmptyAssetTwice stamp: 'EMI 11/7/2020 16:11:52'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCannotAddChildPortfolioWithSameAccount stamp: 'EMI 11/7/2020 16:11:52'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioCannotAddBothChildrenPortfoliosWithSameAccount stamp: 'EMI 11/7/2020 16:11:52'!
PASSED!

!testRun: #PortfolioTest #test17PortfolioCannotAddBothGrandChildrenPortfoliosWithSameAccount stamp: 'EMI 11/7/2020 16:11:52'!
PASSED!
!Portfolio methodsFor: 'adding' stamp: 'EMI 11/7/2020 16:14:18' prior: 50894541!
add: anAsset
	| root rootParent |
	(assets includes: anAsset) ifTrue:[^false].
	root _ parent.
	rootParent _ parent.
	(parent isNil not) ifTrue: [
		[root isNil not] whileTrue: [rootParent _ root. root _ root parentAsset.].
		(rootParent hasAsset: anAsset) ifTrue:[^false.].
	].
	"assets isEmpty not ifTrue: [
		(assets first hasAsset: anAsset) ifTrue: [^false].
		(anAsset hasAsset: assets first) ifTrue: [^false].
	]."
	(self hasAsset: anAsset) ifTrue:[^false].
	assets add: anAsset.
	anAsset addAsSubassetOf: self.
	^true.! !

!testRun: #PortfolioTest #test01NewPortfolioHasNoAccountsAndNoPortfolios stamp: 'EMI 11/7/2020 16:14:20'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioAddEmptyAccount stamp: 'EMI 11/7/2020 16:14:20'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioAddEmptyPortfolio stamp: 'EMI 11/7/2020 16:14:20'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioHasNoRegisteredTransactions stamp: 'EMI 11/7/2020 16:14:20'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasOneAccountWithOneRegisteredTransaction stamp: 'EMI 11/7/2020 16:14:20'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioMoreThanOneAccountWithRegisteredTransactions stamp: 'EMI 11/7/2020 16:14:20'!
PASSED!

!testRun: #PortfolioTest #test07EmptyPortfolioHasNoTransactions stamp: 'EMI 11/7/2020 16:14:20'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioWithOneAccountHasOneTransaction stamp: 'EMI 11/7/2020 16:14:20'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithMoreThanOneAccountHasMoreThanOneTransactions stamp: 'EMI 11/7/2020 16:14:20'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioHasOneChildPortfolioWithAnAccountAndADeposit stamp: 'EMI 11/7/2020 16:14:20'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioHasMoreThanOneChildPortfolioWithAnAccountAndADeposit stamp: 'EMI 11/7/2020 16:14:20'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioHasOneChildPortfolioWithAnAccountAndADepositRegistered stamp: 'EMI 11/7/2020 16:14:20'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioHasMoreThanOneChildPortfolioWithAnAccountAndADepositRegistered stamp: 'EMI 11/7/2020 16:14:20'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioCannotAddSameEmptyAssetTwice stamp: 'EMI 11/7/2020 16:14:20'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCannotAddChildPortfolioWithSameAccount stamp: 'EMI 11/7/2020 16:14:20'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioCannotAddBothChildrenPortfoliosWithSameAccount stamp: 'EMI 11/7/2020 16:14:20'!
PASSED!

!testRun: #PortfolioTest #test17PortfolioCannotAddBothGrandChildrenPortfoliosWithSameAccount stamp: 'EMI 11/7/2020 16:14:20'!
PASSED!
!Portfolio methodsFor: 'adding' stamp: 'EMI 11/7/2020 16:15:09' prior: 50894627!
add: anAsset
	| root rootParent |
	(assets includes: anAsset) ifTrue:[^false].
	root _ parent.
	rootParent _ parent.
	(parent isNil not) ifTrue: [
		[root isNil not] whileTrue: [rootParent _ root. root _ root parentAsset.].
		(rootParent hasAsset: anAsset) ifTrue:[^false.].
	].
	assets isEmpty not ifTrue: [
		(assets first hasAsset: anAsset) ifTrue: [^false].
		(anAsset hasAsset: assets first) ifTrue: [^false].
	].
	assets add: anAsset.
	anAsset addAsSubassetOf: self.
	^true.! !
!PortfolioTest methodsFor: 'tests' stamp: 'EMI 11/7/2020 16:18:07'!
test18PortfolioWith2ChildrenPortfoliosCannotAddAThirdWithSameAccount
	| portfolio portfolio2 portfolio3 portfolio4 account|
	portfolio _ Portfolio new.
	account _  ReceptiveAccount new.
	
	portfolio2 _ Portfolio new.
	self assert: (portfolio2 add: account).
	
	portfolio3 _ Portfolio new.
	self assert: (portfolio3 add: account).
	
	self assert: (portfolio add: portfolio2).
	self deny: (portfolio add: portfolio3).


	 
! !
!PortfolioTest methodsFor: 'tests' stamp: 'EMI 11/7/2020 16:18:31' prior: 50894730!
test18PortfolioWith2ChildrenPortfoliosCannotAddAThirdWithSameAccount
	| portfolioBase portfolio2 portfolio3 portfolio4 account|
	portfolioBase _ Portfolio new.
	account _  ReceptiveAccount new.
	
	portfolio2 _ Portfolio new.
	self assert: (portfolio2 add: account).
	
	portfolio3 _ Portfolio new.
	self assert: (portfolio3 add: account).
	
	self assert: (portfolioBase add: portfolio2).
	self deny: (portfolioBase add: portfolio3).


	 
! !
!PortfolioTest methodsFor: 'tests' stamp: 'EMI 11/7/2020 16:18:52' prior: 50894746!
test18PortfolioWith2ChildrenPortfoliosCannotAddAThirdWithSameAccount
	| portfolioRoot portfolio2 portfolio3 portfolio4 account|
	portfolioRoot _ Portfolio new.
	account _  ReceptiveAccount new.
	
	portfolio2 _ Portfolio new.
	self assert: (portfolio2 add: account).
	
	portfolio3 _ Portfolio new.
	self assert: (portfolio3 add: account).
	
	self assert: (portfolioRoot add: portfolio2).
	self deny: (portfolioRoot add: portfolio3).


	 
! !
!PortfolioTest methodsFor: 'tests' stamp: 'EMI 11/7/2020 16:19:19' prior: 50894763!
test18PortfolioWith2ChildrenPortfoliosCannotAddAThirdWithSameAccount
	| portfolioRoot portfolioChildWithAccount portfolio3 portfolio4 account|
	portfolioRoot _ Portfolio new.
	account _  ReceptiveAccount new.
	
	portfolioChildWithAccount _ Portfolio new.
	self assert: (portfolioChildWithAccount add: account).
	
	portfolio3 _ Portfolio new.
	self assert: (portfolio3 add: account).
	
	self assert: (portfolioRoot add: portfolioChildWithAccount).
	self deny: (portfolioRoot add: portfolio3).


	 
! !
!PortfolioTest methodsFor: 'tests' stamp: 'EMI 11/7/2020 16:19:33' prior: 50894780!
test18PortfolioWith2ChildrenPortfoliosCannotAddAThirdWithSameAccount
	| portfolioRoot portfolioChildWithAccount portfolioChildWithoutAccount portfolio4 account|
	portfolioRoot _ Portfolio new.
	account _  ReceptiveAccount new.
	
	portfolioChildWithAccount _ Portfolio new.
	self assert: (portfolioChildWithAccount add: account).
	
	portfolioChildWithoutAccount _ Portfolio new.
	self assert: (portfolioChildWithoutAccount add: account).
	
	self assert: (portfolioRoot add: portfolioChildWithAccount).
	self deny: (portfolioRoot add: portfolioChildWithoutAccount).


	 
! !
!PortfolioTest methodsFor: 'tests' stamp: 'EMI 11/7/2020 16:19:52' prior: 50894799!
test18PortfolioWith2ChildrenPortfoliosCannotAddAThirdWithSameAccount
	| portfolioRoot portfolioChildWithAccount portfolioChildWithoutAccount portfolioToAddWithSameAccount account|
	portfolioRoot _ Portfolio new.
	account _  ReceptiveAccount new.
	
	portfolioChildWithAccount _ Portfolio new.
	self assert: (portfolioChildWithAccount add: account).
	
	portfolioChildWithoutAccount _ Portfolio new.
	self assert: (portfolioChildWithoutAccount add: account).
	
	self assert: (portfolioRoot add: portfolioChildWithAccount).
	self deny: (portfolioRoot add: portfolioChildWithoutAccount).


	 
! !
!PortfolioTest methodsFor: 'tests' stamp: 'EMI 11/7/2020 16:20:54' prior: 50894820!
test18PortfolioWith2ChildrenPortfoliosCannotAddAThirdWithSameAccount
	| portfolioRoot portfolioChildWithAccount portfolioChildWithoutAccount portfolioToAddWithSameAccount account|
	portfolioRoot _ Portfolio new.
	account _  ReceptiveAccount new.
	
	portfolioChildWithAccount _ Portfolio new.
	self assert: (portfolioChildWithAccount add: account).
	
	portfolioChildWithoutAccount _ Portfolio new.
	
	portfolioToAddWithSameAccount _ Portfolio new.
	self assert: (portfolioToAddWithSameAccount add: account).
	
	self assert: (portfolioRoot add: portfolioChildWithAccount).
	self assert: (portfolioRoot add: portfolioChildWithoutAccount).
	self deny: (portfolioRoot add: portfolioToAddWithSameAccount).


	 
! !

----SNAPSHOT----(7 November 2020 16:21:17) CuisUniversity-4383.image priorSource: 18013059!

!testRun: #PortfolioTest #test01NewPortfolioHasNoAccountsAndNoPortfolios stamp: 'EMI 11/7/2020 16:21:30'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioAddEmptyAccount stamp: 'EMI 11/7/2020 16:21:30'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioAddEmptyPortfolio stamp: 'EMI 11/7/2020 16:21:30'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioHasNoRegisteredTransactions stamp: 'EMI 11/7/2020 16:21:30'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasOneAccountWithOneRegisteredTransaction stamp: 'EMI 11/7/2020 16:21:30'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioMoreThanOneAccountWithRegisteredTransactions stamp: 'EMI 11/7/2020 16:21:30'!
PASSED!

!testRun: #PortfolioTest #test07EmptyPortfolioHasNoTransactions stamp: 'EMI 11/7/2020 16:21:30'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioWithOneAccountHasOneTransaction stamp: 'EMI 11/7/2020 16:21:30'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithMoreThanOneAccountHasMoreThanOneTransactions stamp: 'EMI 11/7/2020 16:21:30'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioHasOneChildPortfolioWithAnAccountAndADeposit stamp: 'EMI 11/7/2020 16:21:30'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioHasMoreThanOneChildPortfolioWithAnAccountAndADeposit stamp: 'EMI 11/7/2020 16:21:30'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioHasOneChildPortfolioWithAnAccountAndADepositRegistered stamp: 'EMI 11/7/2020 16:21:30'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioHasMoreThanOneChildPortfolioWithAnAccountAndADepositRegistered stamp: 'EMI 11/7/2020 16:21:30'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioCannotAddSameEmptyAssetTwice stamp: 'EMI 11/7/2020 16:21:30'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCannotAddChildPortfolioWithSameAccount stamp: 'EMI 11/7/2020 16:21:30'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioCannotAddBothChildrenPortfoliosWithSameAccount stamp: 'EMI 11/7/2020 16:21:30'!
PASSED!

!testRun: #PortfolioTest #test17PortfolioCannotAddBothGrandChildrenPortfoliosWithSameAccount stamp: 'EMI 11/7/2020 16:21:30'!
PASSED!

!testRun: #PortfolioTest #test18PortfolioWith2ChildrenPortfoliosCannotAddAThirdWithSameAccount stamp: 'EMI 11/7/2020 16:21:30'!
PASSED!
!PortfolioTest methodsFor: 'tests' stamp: 'EMI 11/7/2020 16:22:26' prior: 50894842!
test18PortfolioWith2ChildrenPortfoliosCannotAddAThirdWithSameAccount
	| portfolioRoot portfolioChildWithAccount portfolioChildWithoutAccount portfolioToAddWithSameAccount account|
	portfolioRoot _ Portfolio new.
	account _  ReceptiveAccount new.
	
	portfolioChildWithoutAccount _ Portfolio new.
	
	portfolioChildWithAccount _ Portfolio new.
	self assert: (portfolioChildWithAccount add: account).
	
	portfolioToAddWithSameAccount _ Portfolio new.
	self assert: (portfolioToAddWithSameAccount add: account).
	
	self assert: (portfolioRoot add: portfolioChildWithAccount).
	self assert: (portfolioRoot add: portfolioChildWithoutAccount).
	self deny: (portfolioRoot add: portfolioToAddWithSameAccount).


	 
! !

!testRun: #PortfolioTest #test01NewPortfolioHasNoAccountsAndNoPortfolios stamp: 'EMI 11/7/2020 16:22:28'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioAddEmptyAccount stamp: 'EMI 11/7/2020 16:22:28'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioAddEmptyPortfolio stamp: 'EMI 11/7/2020 16:22:28'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioHasNoRegisteredTransactions stamp: 'EMI 11/7/2020 16:22:28'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasOneAccountWithOneRegisteredTransaction stamp: 'EMI 11/7/2020 16:22:28'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioMoreThanOneAccountWithRegisteredTransactions stamp: 'EMI 11/7/2020 16:22:28'!
PASSED!

!testRun: #PortfolioTest #test07EmptyPortfolioHasNoTransactions stamp: 'EMI 11/7/2020 16:22:28'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioWithOneAccountHasOneTransaction stamp: 'EMI 11/7/2020 16:22:28'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithMoreThanOneAccountHasMoreThanOneTransactions stamp: 'EMI 11/7/2020 16:22:28'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioHasOneChildPortfolioWithAnAccountAndADeposit stamp: 'EMI 11/7/2020 16:22:28'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioHasMoreThanOneChildPortfolioWithAnAccountAndADeposit stamp: 'EMI 11/7/2020 16:22:28'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioHasOneChildPortfolioWithAnAccountAndADepositRegistered stamp: 'EMI 11/7/2020 16:22:28'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioHasMoreThanOneChildPortfolioWithAnAccountAndADepositRegistered stamp: 'EMI 11/7/2020 16:22:28'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioCannotAddSameEmptyAssetTwice stamp: 'EMI 11/7/2020 16:22:28'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCannotAddChildPortfolioWithSameAccount stamp: 'EMI 11/7/2020 16:22:28'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioCannotAddBothChildrenPortfoliosWithSameAccount stamp: 'EMI 11/7/2020 16:22:28'!
PASSED!

!testRun: #PortfolioTest #test17PortfolioCannotAddBothGrandChildrenPortfoliosWithSameAccount stamp: 'EMI 11/7/2020 16:22:28'!
PASSED!

!testRun: #PortfolioTest #test18PortfolioWith2ChildrenPortfoliosCannotAddAThirdWithSameAccount stamp: 'EMI 11/7/2020 16:22:28'!
PASSED!
!PortfolioTest methodsFor: 'tests' stamp: 'EMI 11/7/2020 16:22:53' prior: 50894939!
test18PortfolioWith2ChildrenPortfoliosCannotAddAThirdWithSameAccount
	| portfolioRoot portfolioChildWithAccount portfolioChildWithoutAccount portfolioToAddWithSameAccount account|
	portfolioRoot _ Portfolio new.
	account _  ReceptiveAccount new.
	
	portfolioChildWithoutAccount _ Portfolio new.
	
	portfolioChildWithAccount _ Portfolio new.
	self assert: (portfolioChildWithAccount add: account).
	
	portfolioToAddWithSameAccount _ Portfolio new.
	self assert: (portfolioToAddWithSameAccount add: account).
	
	self assert: (portfolioRoot add: portfolioChildWithoutAccount).
	self assert: (portfolioRoot add: portfolioChildWithAccount).
	self deny: (portfolioRoot add: portfolioToAddWithSameAccount).


	 
! !

!testRun: #PortfolioTest #test01NewPortfolioHasNoAccountsAndNoPortfolios stamp: 'EMI 11/7/2020 16:22:56'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioAddEmptyAccount stamp: 'EMI 11/7/2020 16:22:56'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioAddEmptyPortfolio stamp: 'EMI 11/7/2020 16:22:56'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioHasNoRegisteredTransactions stamp: 'EMI 11/7/2020 16:22:56'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasOneAccountWithOneRegisteredTransaction stamp: 'EMI 11/7/2020 16:22:56'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioMoreThanOneAccountWithRegisteredTransactions stamp: 'EMI 11/7/2020 16:22:56'!
PASSED!

!testRun: #PortfolioTest #test07EmptyPortfolioHasNoTransactions stamp: 'EMI 11/7/2020 16:22:56'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioWithOneAccountHasOneTransaction stamp: 'EMI 11/7/2020 16:22:56'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithMoreThanOneAccountHasMoreThanOneTransactions stamp: 'EMI 11/7/2020 16:22:56'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioHasOneChildPortfolioWithAnAccountAndADeposit stamp: 'EMI 11/7/2020 16:22:56'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioHasMoreThanOneChildPortfolioWithAnAccountAndADeposit stamp: 'EMI 11/7/2020 16:22:56'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioHasOneChildPortfolioWithAnAccountAndADepositRegistered stamp: 'EMI 11/7/2020 16:22:56'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioHasMoreThanOneChildPortfolioWithAnAccountAndADepositRegistered stamp: 'EMI 11/7/2020 16:22:56'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioCannotAddSameEmptyAssetTwice stamp: 'EMI 11/7/2020 16:22:56'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCannotAddChildPortfolioWithSameAccount stamp: 'EMI 11/7/2020 16:22:56'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioCannotAddBothChildrenPortfoliosWithSameAccount stamp: 'EMI 11/7/2020 16:22:56'!
PASSED!

!testRun: #PortfolioTest #test17PortfolioCannotAddBothGrandChildrenPortfoliosWithSameAccount stamp: 'EMI 11/7/2020 16:22:56'!
PASSED!

!testRun: #PortfolioTest #test18PortfolioWith2ChildrenPortfoliosCannotAddAThirdWithSameAccount stamp: 'EMI 11/7/2020 16:22:56'!
FAILURE!

!testRun: #PortfolioTest #test18PortfolioWith2ChildrenPortfoliosCannotAddAThirdWithSameAccount stamp: 'EMI 11/7/2020 16:22:56'!
FAILURE!
!Portfolio methodsFor: 'adding' stamp: 'EMI 11/7/2020 16:23:34' prior: 50894712!
add: anAsset
	| root rootParent |
	(assets includes: anAsset) ifTrue:[^false].
	root _ parent.
	rootParent _ parent.
	(parent isNil not) ifTrue: [
		[root isNil not] whileTrue: [rootParent _ root. root _ root parentAsset.].
		(rootParent hasAsset: anAsset) ifTrue:[^false.].
	].
	(self hasAsset: anAsset) ifTrue:[^false].
	assets add: anAsset.
	anAsset addAsSubassetOf: self.
	^true.! !

----SNAPSHOT----(7 November 2020 16:23:40) CuisUniversity-4383.image priorSource: 18022916!

!testRun: #PortfolioTest #test01NewPortfolioHasNoAccountsAndNoPortfolios stamp: 'EMI 11/7/2020 16:23:45'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioAddEmptyAccount stamp: 'EMI 11/7/2020 16:23:45'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioAddEmptyPortfolio stamp: 'EMI 11/7/2020 16:23:45'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioHasNoRegisteredTransactions stamp: 'EMI 11/7/2020 16:23:45'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasOneAccountWithOneRegisteredTransaction stamp: 'EMI 11/7/2020 16:23:45'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioMoreThanOneAccountWithRegisteredTransactions stamp: 'EMI 11/7/2020 16:23:45'!
PASSED!

!testRun: #PortfolioTest #test07EmptyPortfolioHasNoTransactions stamp: 'EMI 11/7/2020 16:23:45'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioWithOneAccountHasOneTransaction stamp: 'EMI 11/7/2020 16:23:45'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithMoreThanOneAccountHasMoreThanOneTransactions stamp: 'EMI 11/7/2020 16:23:45'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioHasOneChildPortfolioWithAnAccountAndADeposit stamp: 'EMI 11/7/2020 16:23:45'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioHasMoreThanOneChildPortfolioWithAnAccountAndADeposit stamp: 'EMI 11/7/2020 16:23:45'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioHasOneChildPortfolioWithAnAccountAndADepositRegistered stamp: 'EMI 11/7/2020 16:23:45'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioHasMoreThanOneChildPortfolioWithAnAccountAndADepositRegistered stamp: 'EMI 11/7/2020 16:23:45'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioCannotAddSameEmptyAssetTwice stamp: 'EMI 11/7/2020 16:23:45'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCannotAddChildPortfolioWithSameAccount stamp: 'EMI 11/7/2020 16:23:45'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioCannotAddBothChildrenPortfoliosWithSameAccount stamp: 'EMI 11/7/2020 16:23:45'!
PASSED!

!testRun: #PortfolioTest #test17PortfolioCannotAddBothGrandChildrenPortfoliosWithSameAccount stamp: 'EMI 11/7/2020 16:23:45'!
PASSED!

!testRun: #PortfolioTest #test18PortfolioWith2ChildrenPortfoliosCannotAddAThirdWithSameAccount stamp: 'EMI 11/7/2020 16:23:45'!
PASSED!
!PortfolioTest methodsFor: 'tests' stamp: 'EMI 11/7/2020 16:28:49'!
test19PortfolioWith2ChildrenPortfoliosCannotAddAThirdWithAParentWithSameAccount
	| portfolioRoot portfolioChildWithAccount portfolioChildWithoutAccount portfolioToAdd portfolioWithSameAccount account|
	portfolioRoot _ Portfolio new.
	account _  ReceptiveAccount new.
	
	portfolioChildWithoutAccount _ Portfolio new.
	
	portfolioChildWithAccount _ Portfolio new.
	self assert: (portfolioChildWithAccount add: account).
	
	portfolioToAdd _ Portfolio new.
	portfolioWithSameAccount _ Portfolio new.
	self assert: (portfolioWithSameAccount add: account).
	self assert: (portfolioWithSameAccount add: portfolioToAdd).
	
	self assert: (portfolioRoot add: portfolioChildWithoutAccount).
	self assert: (portfolioRoot add: portfolioChildWithAccount).
	self deny: (portfolioRoot add: portfolioToAdd).


	 
! !
!PortfolioTest methodsFor: 'tests' stamp: 'EMI 11/7/2020 16:29:15' prior: 50895220!
test19PortfolioWith2ChildrenPortfoliosCannotAddAThirdWithAParentWithSameAccount
	| portfolioRoot portfolioChildWithAccount portfolioChildWithoutAccount 
	portfolioToAdd portfolioWithSameAccount account|
	
	portfolioRoot _ Portfolio new.
	account _  ReceptiveAccount new.
	
	portfolioChildWithoutAccount _ Portfolio new.
	
	portfolioChildWithAccount _ Portfolio new.
	self assert: (portfolioChildWithAccount add: account).
	
	portfolioToAdd _ Portfolio new.
	portfolioWithSameAccount _ Portfolio new.
	self assert: (portfolioWithSameAccount add: account).
	self assert: (portfolioWithSameAccount add: portfolioToAdd).
	
	self assert: (portfolioRoot add: portfolioChildWithoutAccount).
	self assert: (portfolioRoot add: portfolioChildWithAccount).
	self deny: (portfolioRoot add: portfolioToAdd).


	 
! !

----SNAPSHOT----(7 November 2020 16:29:21) CuisUniversity-4383.image priorSource: 18031906!

!testRun: #PortfolioTest #test01NewPortfolioHasNoAccountsAndNoPortfolios stamp: 'EMI 11/7/2020 16:29:24'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioAddEmptyAccount stamp: 'EMI 11/7/2020 16:29:24'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioAddEmptyPortfolio stamp: 'EMI 11/7/2020 16:29:24'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioHasNoRegisteredTransactions stamp: 'EMI 11/7/2020 16:29:24'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasOneAccountWithOneRegisteredTransaction stamp: 'EMI 11/7/2020 16:29:24'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioMoreThanOneAccountWithRegisteredTransactions stamp: 'EMI 11/7/2020 16:29:24'!
PASSED!

!testRun: #PortfolioTest #test07EmptyPortfolioHasNoTransactions stamp: 'EMI 11/7/2020 16:29:24'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioWithOneAccountHasOneTransaction stamp: 'EMI 11/7/2020 16:29:24'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithMoreThanOneAccountHasMoreThanOneTransactions stamp: 'EMI 11/7/2020 16:29:24'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioHasOneChildPortfolioWithAnAccountAndADeposit stamp: 'EMI 11/7/2020 16:29:24'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioHasMoreThanOneChildPortfolioWithAnAccountAndADeposit stamp: 'EMI 11/7/2020 16:29:24'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioHasOneChildPortfolioWithAnAccountAndADepositRegistered stamp: 'EMI 11/7/2020 16:29:24'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioHasMoreThanOneChildPortfolioWithAnAccountAndADepositRegistered stamp: 'EMI 11/7/2020 16:29:24'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioCannotAddSameEmptyAssetTwice stamp: 'EMI 11/7/2020 16:29:24'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCannotAddChildPortfolioWithSameAccount stamp: 'EMI 11/7/2020 16:29:24'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioCannotAddBothChildrenPortfoliosWithSameAccount stamp: 'EMI 11/7/2020 16:29:24'!
PASSED!

!testRun: #PortfolioTest #test17PortfolioCannotAddBothGrandChildrenPortfoliosWithSameAccount stamp: 'EMI 11/7/2020 16:29:24'!
PASSED!

!testRun: #PortfolioTest #test18PortfolioWith2ChildrenPortfoliosCannotAddAThirdWithSameAccount stamp: 'EMI 11/7/2020 16:29:24'!
PASSED!

!testRun: #PortfolioTest #test19PortfolioWith2ChildrenPortfoliosCannotAddAThirdWithAParentWithSameAccount stamp: 'EMI 11/7/2020 16:29:24'!
FAILURE!

!testRun: #PortfolioTest #test19PortfolioWith2ChildrenPortfoliosCannotAddAThirdWithAParentWithSameAccount stamp: 'EMI 11/7/2020 16:29:24'!
FAILURE!
!Portfolio methodsFor: 'adding' stamp: 'EMI 11/7/2020 16:32:53' prior: 50895133!
add: anAsset
	| root rootParent |
	(assets includes: anAsset) ifTrue:[^false].
	root _ parent.
	rootParent _ parent.
	(parent isNil not) ifTrue: [
		[root isNil not] whileTrue: [rootParent _ root. root _ root parentAsset.].
		(rootParent hasAsset: anAsset) ifTrue:[^false.].
	].
	(anAsset parentAsset hasAsset: self) ifTrue: [^false.].
	(self hasAsset: anAsset) ifTrue:[^false].
	assets add: anAsset.
	anAsset addAsSubassetOf: self.
	^true.! !

----SNAPSHOT----(7 November 2020 16:32:58) CuisUniversity-4383.image priorSource: 18036003!

!testRun: #PortfolioTest #test01NewPortfolioHasNoAccountsAndNoPortfolios stamp: 'EMI 11/7/2020 16:33:03'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioAddEmptyAccount stamp: 'EMI 11/7/2020 16:33:03'!
ERROR!

!testRun: #PortfolioTest #test03PortfolioAddEmptyPortfolio stamp: 'EMI 11/7/2020 16:33:03'!
ERROR!

!testRun: #PortfolioTest #test04PortfolioHasNoRegisteredTransactions stamp: 'EMI 11/7/2020 16:33:03'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasOneAccountWithOneRegisteredTransaction stamp: 'EMI 11/7/2020 16:33:03'!
ERROR!

!testRun: #PortfolioTest #test06PortfolioMoreThanOneAccountWithRegisteredTransactions stamp: 'EMI 11/7/2020 16:33:03'!
ERROR!

!testRun: #PortfolioTest #test07EmptyPortfolioHasNoTransactions stamp: 'EMI 11/7/2020 16:33:03'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioWithOneAccountHasOneTransaction stamp: 'EMI 11/7/2020 16:33:03'!
ERROR!

!testRun: #PortfolioTest #test09PortfolioWithMoreThanOneAccountHasMoreThanOneTransactions stamp: 'EMI 11/7/2020 16:33:03'!
ERROR!

!testRun: #PortfolioTest #test10PortfolioHasOneChildPortfolioWithAnAccountAndADeposit stamp: 'EMI 11/7/2020 16:33:03'!
ERROR!

!testRun: #PortfolioTest #test11PortfolioHasMoreThanOneChildPortfolioWithAnAccountAndADeposit stamp: 'EMI 11/7/2020 16:33:03'!
ERROR!

!testRun: #PortfolioTest #test12PortfolioHasOneChildPortfolioWithAnAccountAndADepositRegistered stamp: 'EMI 11/7/2020 16:33:03'!
ERROR!

!testRun: #PortfolioTest #test13PortfolioHasMoreThanOneChildPortfolioWithAnAccountAndADepositRegistered stamp: 'EMI 11/7/2020 16:33:03'!
ERROR!

!testRun: #PortfolioTest #test14PortfolioCannotAddSameEmptyAssetTwice stamp: 'EMI 11/7/2020 16:33:03'!
ERROR!

!testRun: #PortfolioTest #test15PortfolioCannotAddChildPortfolioWithSameAccount stamp: 'EMI 11/7/2020 16:33:03'!
ERROR!

!testRun: #PortfolioTest #test16PortfolioCannotAddBothChildrenPortfoliosWithSameAccount stamp: 'EMI 11/7/2020 16:33:03'!
ERROR!

!testRun: #PortfolioTest #test17PortfolioCannotAddBothGrandChildrenPortfoliosWithSameAccount stamp: 'EMI 11/7/2020 16:33:03'!
ERROR!

!testRun: #PortfolioTest #test18PortfolioWith2ChildrenPortfoliosCannotAddAThirdWithSameAccount stamp: 'EMI 11/7/2020 16:33:03'!
ERROR!

!testRun: #PortfolioTest #test19PortfolioWith2ChildrenPortfoliosCannotAddAThirdWithAParentWithSameAccount stamp: 'EMI 11/7/2020 16:33:03'!
ERROR!

!testRun: #PortfolioTest #test02PortfolioAddEmptyAccount stamp: 'EMI 11/7/2020 16:33:08'!
ERROR!
!Portfolio methodsFor: 'adding' stamp: 'EMI 11/7/2020 16:33:57' prior: 50895358!
add: anAsset
	| root rootParent |
	(assets includes: anAsset) ifTrue:[^false].
	root _ parent.
	rootParent _ parent.
	(parent isNil not) ifTrue: [
		[root isNil not] whileTrue: [rootParent _ root. root _ root parentAsset.].
		(rootParent hasAsset: anAsset) ifTrue:[^false.].
	].
	(anAsset parentAsset isNil) ifFalse: [
		(anAsset parentAsset hasAsset: self) ifTrue: [^false.].
	].
	(self hasAsset: anAsset) ifTrue:[^false].
	assets add: anAsset.
	anAsset addAsSubassetOf: self.
	^true.! !

----SNAPSHOT----(7 November 2020 16:34:09) CuisUniversity-4383.image priorSource: 18039163!

!testRun: #PortfolioTest #test01NewPortfolioHasNoAccountsAndNoPortfolios stamp: 'EMI 11/7/2020 16:34:13'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioAddEmptyAccount stamp: 'EMI 11/7/2020 16:34:13'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioAddEmptyPortfolio stamp: 'EMI 11/7/2020 16:34:13'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioHasNoRegisteredTransactions stamp: 'EMI 11/7/2020 16:34:13'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasOneAccountWithOneRegisteredTransaction stamp: 'EMI 11/7/2020 16:34:13'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioMoreThanOneAccountWithRegisteredTransactions stamp: 'EMI 11/7/2020 16:34:13'!
PASSED!

!testRun: #PortfolioTest #test07EmptyPortfolioHasNoTransactions stamp: 'EMI 11/7/2020 16:34:13'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioWithOneAccountHasOneTransaction stamp: 'EMI 11/7/2020 16:34:13'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithMoreThanOneAccountHasMoreThanOneTransactions stamp: 'EMI 11/7/2020 16:34:13'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioHasOneChildPortfolioWithAnAccountAndADeposit stamp: 'EMI 11/7/2020 16:34:13'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioHasMoreThanOneChildPortfolioWithAnAccountAndADeposit stamp: 'EMI 11/7/2020 16:34:13'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioHasOneChildPortfolioWithAnAccountAndADepositRegistered stamp: 'EMI 11/7/2020 16:34:13'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioHasMoreThanOneChildPortfolioWithAnAccountAndADepositRegistered stamp: 'EMI 11/7/2020 16:34:13'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioCannotAddSameEmptyAssetTwice stamp: 'EMI 11/7/2020 16:34:13'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCannotAddChildPortfolioWithSameAccount stamp: 'EMI 11/7/2020 16:34:13'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioCannotAddBothChildrenPortfoliosWithSameAccount stamp: 'EMI 11/7/2020 16:34:13'!
PASSED!

!testRun: #PortfolioTest #test17PortfolioCannotAddBothGrandChildrenPortfoliosWithSameAccount stamp: 'EMI 11/7/2020 16:34:13'!
PASSED!

!testRun: #PortfolioTest #test18PortfolioWith2ChildrenPortfoliosCannotAddAThirdWithSameAccount stamp: 'EMI 11/7/2020 16:34:13'!
PASSED!

!testRun: #PortfolioTest #test19PortfolioWith2ChildrenPortfoliosCannotAddAThirdWithAParentWithSameAccount stamp: 'EMI 11/7/2020 16:34:13'!
PASSED!
!PortfolioTest methodsFor: 'tests' stamp: 'EMI 11/7/2020 16:36:38'!
test20PortfolioWith2GrandChildrenPortfoliosCannotAddAThirdWithAGrandParentWithSameAccount
	| portfolioRoot portfolioChildWithAccount portfolioChildWithoutAccount 
	portfolioToAdd portfolioWithSameAccount account|
	
	portfolioRoot _ Portfolio new.
	account _  ReceptiveAccount new.
	
	portfolioChildWithoutAccount _ Portfolio new.
	
	portfolioChildWithAccount _ Portfolio new.
	self assert: (portfolioChildWithAccount add: account).
	
	portfolioToAdd _ Portfolio new.
	portfolioWithSameAccount _ Portfolio new.
	self assert: (portfolioWithSameAccount add: account).
	self assert: (portfolioWithSameAccount add: portfolioToAdd).
	
	self assert: (portfolioRoot add: portfolioChildWithoutAccount).
	self assert: (portfolioRoot add: portfolioChildWithAccount).
	self deny: (portfolioRoot add: portfolioToAdd).


	 
! !
!PortfolioTest methodsFor: 'tests' stamp: 'EMI 11/7/2020 16:41:51' prior: 50895549!
test20PortfolioWith2GrandChildrenPortfoliosCannotAddAThirdWithAGrandParentWithSameAccount
	| portfolioRoot portfolioChildLeft portfolioChildRight 
	portfolioGrandChildWithAccount portfolioGrandChildWithoutAccount 
	portfolioRootAnotherTree portfolioChildAnotherTree portfolioGrandChildAnotherTreeWithAccount account|
	
	portfolioRoot _ Portfolio new.
	portfolioRootAnotherTree  _ Portfolio new.
	account _  ReceptiveAccount new.
	


	 
! !
!PortfolioTest methodsFor: 'tests' stamp: 'EMI 11/7/2020 16:42:23' prior: 50895578!
test20PortfolioWith2GrandChildrenPortfoliosCannotAddAThirdWithAGrandParentWithSameAccount
	| portfolioRoot portfolioChildLeft portfolioChildRight 
	portfolioGrandChildWithAccount portfolioGrandChildWithoutAccount 
	portfolioRootAnotherTree portfolioChildAnotherTree portfolioGrandChildAnotherTreeWithAccount account|
	
	portfolioRoot _ Portfolio new.
	portfolioRootAnotherTree  _ Portfolio new.
	account _  ReceptiveAccount new.
	
	self assert: (portfolioRoot add: account).
	self assert: (portfolioRootAnotherTree add: account).
	


	 
! !
!PortfolioTest methodsFor: 'tests' stamp: 'EMI 11/7/2020 16:43:24' prior: 50895595!
test20PortfolioWith2GrandChildrenPortfoliosCannotAddAThirdWithAGrandParentWithSameAccount
	| portfolioRoot portfolioChildLeft portfolioChildRight 
	portfolioGrandChildWithAccount portfolioGrandChildWithoutAccount 
	portfolioRootAnotherTree portfolioChildAnotherTree portfolioGrandChildAnotherTreeWithAccount account|
	
	portfolioRoot _ Portfolio new.
	portfolioRootAnotherTree  _ Portfolio new.
	account _  ReceptiveAccount new.
	
	self assert: (portfolioRoot add: account).
	self assert: (portfolioRootAnotherTree add: account).
	
	portfolioChildLeft  _ Portfolio new.
	portfolioChildRight _ Portfolio new.
	self assert: (portfolioRoot add: portfolioChildLeft).
	self assert: (portfolioRoot add: portfolioChildRight).
	


	 
! !
!PortfolioTest methodsFor: 'tests' stamp: 'EMI 11/7/2020 16:46:14' prior: 50895615!
test20PortfolioWith2GrandChildrenPortfoliosCannotAddAThirdWithAGrandParentWithSameAccount
	| portfolioRoot portfolioChildLeft portfolioChildRight 
	portfolioGrandChildWithAccount portfolioGrandChildWithoutAccount 
	portfolioRootAnotherTree portfolioChildAnotherTree portfolioGrandChildAnotherTreeWithAccount account|
	
	portfolioRoot _ Portfolio new.
	portfolioRootAnotherTree  _ Portfolio new.
	account _  ReceptiveAccount new.
	
	self assert: (portfolioRoot add: account).
	self assert: (portfolioRootAnotherTree add: account).
	
	portfolioChildLeft  _ Portfolio new.
	portfolioChildRight _ Portfolio new.
	self assert: (portfolioRoot add: portfolioChildLeft).
	self assert: (portfolioRoot add: portfolioChildRight).
	
	portfolioGrandChildWithoutAccount _ Portfolio new.
	portfolioGrandChildWithAccount _ Portfolio new.
	self assert: (portfolioChildLeft add: portfolioGrandChildWithoutAccount ).
	self assert: (portfolioChildRight add: portfolioGrandChildWithAccount).
	
	portfolioChildAnotherTree _ Portfolio new.
	self assert: (portfolioRootAnotherTree add: portfolioChildAnotherTree).
	
	portfolioGrandChildAnotherTreeWithAccount _ Portfolio new.
	self assert: (portfolioChildAnotherTree add: portfolioGrandChildAnotherTreeWithAccount ).
	


	 
! !
!PortfolioTest methodsFor: 'tests' stamp: 'EMI 11/7/2020 16:46:23' prior: 50895641!
test20PortfolioWith2GrandChildrenPortfoliosCannotAddAThirdWithAGrandParentWithSameAccount
	| portfolioRoot portfolioChildLeft portfolioChildRight 
	portfolioGrandChildWithAccount portfolioGrandChildWithoutAccount 
	portfolioRootAnotherTree portfolioChildAnotherTree portfolioGrandChildAnotherTree account|
	
	portfolioRoot _ Portfolio new.
	portfolioRootAnotherTree  _ Portfolio new.
	account _  ReceptiveAccount new.
	
	self assert: (portfolioRoot add: account).
	self assert: (portfolioRootAnotherTree add: account).
	
	portfolioChildLeft  _ Portfolio new.
	portfolioChildRight _ Portfolio new.
	self assert: (portfolioRoot add: portfolioChildLeft).
	self assert: (portfolioRoot add: portfolioChildRight).
	
	portfolioGrandChildWithoutAccount _ Portfolio new.
	portfolioGrandChildWithAccount _ Portfolio new.
	self assert: (portfolioChildLeft add: portfolioGrandChildWithoutAccount ).
	self assert: (portfolioChildRight add: portfolioGrandChildWithAccount).
	
	portfolioChildAnotherTree _ Portfolio new.
	self assert: (portfolioRootAnotherTree add: portfolioChildAnotherTree).
	
	portfolioGrandChildAnotherTree _ Portfolio new.
	self assert: (portfolioChildAnotherTree add: portfolioGrandChildAnotherTree ).
	


	 
! !
!PortfolioTest methodsFor: 'tests' stamp: 'EMI 11/7/2020 16:47:26' prior: 50895683!
test20PortfolioWith2GrandChildrenPortfoliosCannotAddAThirdWithAGrandParentWithSameAccount
	| portfolioRoot portfolioChildLeft portfolioChildRight 
	portfolioGrandChildWithAccount portfolioGrandChildWithoutAccount 
	portfolioRootAnotherTree portfolioChildAnotherTree portfolioGrandChildAnotherTree account|
	
	portfolioRoot _ Portfolio new.
	portfolioRootAnotherTree  _ Portfolio new.
	account _  ReceptiveAccount new.
	
	self assert: (portfolioRoot add: account).
	self assert: (portfolioRootAnotherTree add: account).
	
	portfolioChildLeft  _ Portfolio new.
	portfolioChildRight _ Portfolio new.
	self assert: (portfolioRoot add: portfolioChildLeft).
	self assert: (portfolioRoot add: portfolioChildRight).
	
	portfolioGrandChildWithoutAccount _ Portfolio new.
	portfolioGrandChildWithAccount _ Portfolio new.
	self assert: (portfolioChildLeft add: portfolioGrandChildWithoutAccount ).
	self assert: (portfolioChildRight add: portfolioGrandChildWithAccount).
	
	portfolioChildAnotherTree _ Portfolio new.
	self assert: (portfolioRootAnotherTree add: portfolioChildAnotherTree).
	
	portfolioGrandChildAnotherTree _ Portfolio new.
	self assert: (portfolioChildAnotherTree add: portfolioGrandChildAnotherTree ).
	
	self deny: (portfolioGrandChildWithAccount add: portfolioGrandChildAnotherTree).
	


	 
! !
!PortfolioTest methodsFor: 'tests' stamp: 'EMI 11/7/2020 16:47:49' prior: 50895724!
test20PortfolioWith2GrandChildrenPortfoliosCannotAddAThirdWithAGrandParentWithSameAccount
	| portfolioRoot portfolioChildLeft portfolioChildRight 
	portfolioGrandChildRight portfolioGrandChildWithoutAccount 
	portfolioRootAnotherTree portfolioChildAnotherTree portfolioGrandChildAnotherTree account|
	
	portfolioRoot _ Portfolio new.
	portfolioRootAnotherTree  _ Portfolio new.
	account _  ReceptiveAccount new.
	
	self assert: (portfolioRoot add: account).
	self assert: (portfolioRootAnotherTree add: account).
	
	portfolioChildLeft  _ Portfolio new.
	portfolioChildRight _ Portfolio new.
	self assert: (portfolioRoot add: portfolioChildLeft).
	self assert: (portfolioRoot add: portfolioChildRight).
	
	portfolioGrandChildWithoutAccount _ Portfolio new.
	portfolioGrandChildRight _ Portfolio new.
	self assert: (portfolioChildLeft add: portfolioGrandChildWithoutAccount ).
	self assert: (portfolioChildRight add: portfolioGrandChildRight).
	
	portfolioChildAnotherTree _ Portfolio new.
	self assert: (portfolioRootAnotherTree add: portfolioChildAnotherTree).
	
	portfolioGrandChildAnotherTree _ Portfolio new.
	self assert: (portfolioChildAnotherTree add: portfolioGrandChildAnotherTree ).
	
	self deny: (portfolioGrandChildRight add: portfolioGrandChildAnotherTree).
	


	 
! !
!PortfolioTest methodsFor: 'tests' stamp: 'EMI 11/7/2020 16:47:58' prior: 50895768!
test20PortfolioWith2GrandChildrenPortfoliosCannotAddAThirdWithAGrandParentWithSameAccount
	| portfolioRoot portfolioChildLeft portfolioChildRight 
	portfolioGrandChildRight portfolioGrandChildLeft 
	portfolioRootAnotherTree portfolioChildAnotherTree portfolioGrandChildAnotherTree account|
	
	portfolioRoot _ Portfolio new.
	portfolioRootAnotherTree  _ Portfolio new.
	account _  ReceptiveAccount new.
	
	self assert: (portfolioRoot add: account).
	self assert: (portfolioRootAnotherTree add: account).
	
	portfolioChildLeft  _ Portfolio new.
	portfolioChildRight _ Portfolio new.
	self assert: (portfolioRoot add: portfolioChildLeft).
	self assert: (portfolioRoot add: portfolioChildRight).
	
	portfolioGrandChildLeft _ Portfolio new.
	portfolioGrandChildRight _ Portfolio new.
	self assert: (portfolioChildLeft add: portfolioGrandChildLeft ).
	self assert: (portfolioChildRight add: portfolioGrandChildRight).
	
	portfolioChildAnotherTree _ Portfolio new.
	self assert: (portfolioRootAnotherTree add: portfolioChildAnotherTree).
	
	portfolioGrandChildAnotherTree _ Portfolio new.
	self assert: (portfolioChildAnotherTree add: portfolioGrandChildAnotherTree ).
	
	self deny: (portfolioGrandChildRight add: portfolioGrandChildAnotherTree).
	


	 
! !

----SNAPSHOT----(7 November 2020 16:48:40) CuisUniversity-4383.image priorSource: 18042280!

!testRun: #PortfolioTest #test01NewPortfolioHasNoAccountsAndNoPortfolios stamp: 'EMI 11/7/2020 16:48:44'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioAddEmptyAccount stamp: 'EMI 11/7/2020 16:48:44'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioAddEmptyPortfolio stamp: 'EMI 11/7/2020 16:48:44'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioHasNoRegisteredTransactions stamp: 'EMI 11/7/2020 16:48:44'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasOneAccountWithOneRegisteredTransaction stamp: 'EMI 11/7/2020 16:48:44'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioMoreThanOneAccountWithRegisteredTransactions stamp: 'EMI 11/7/2020 16:48:44'!
PASSED!

!testRun: #PortfolioTest #test07EmptyPortfolioHasNoTransactions stamp: 'EMI 11/7/2020 16:48:44'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioWithOneAccountHasOneTransaction stamp: 'EMI 11/7/2020 16:48:44'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithMoreThanOneAccountHasMoreThanOneTransactions stamp: 'EMI 11/7/2020 16:48:44'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioHasOneChildPortfolioWithAnAccountAndADeposit stamp: 'EMI 11/7/2020 16:48:44'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioHasMoreThanOneChildPortfolioWithAnAccountAndADeposit stamp: 'EMI 11/7/2020 16:48:44'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioHasOneChildPortfolioWithAnAccountAndADepositRegistered stamp: 'EMI 11/7/2020 16:48:44'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioHasMoreThanOneChildPortfolioWithAnAccountAndADepositRegistered stamp: 'EMI 11/7/2020 16:48:44'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioCannotAddSameEmptyAssetTwice stamp: 'EMI 11/7/2020 16:48:44'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCannotAddChildPortfolioWithSameAccount stamp: 'EMI 11/7/2020 16:48:44'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioCannotAddBothChildrenPortfoliosWithSameAccount stamp: 'EMI 11/7/2020 16:48:44'!
PASSED!

!testRun: #PortfolioTest #test17PortfolioCannotAddBothGrandChildrenPortfoliosWithSameAccount stamp: 'EMI 11/7/2020 16:48:44'!
PASSED!

!testRun: #PortfolioTest #test18PortfolioWith2ChildrenPortfoliosCannotAddAThirdWithSameAccount stamp: 'EMI 11/7/2020 16:48:44'!
PASSED!

!testRun: #PortfolioTest #test19PortfolioWith2ChildrenPortfoliosCannotAddAThirdWithAParentWithSameAccount stamp: 'EMI 11/7/2020 16:48:44'!
PASSED!

!testRun: #PortfolioTest #test20PortfolioWith2GrandChildrenPortfoliosCannotAddAThirdWithAGrandParentWithSameAccount stamp: 'EMI 11/7/2020 16:48:44'!
FAILURE!

!testRun: #PortfolioTest #test20PortfolioWith2GrandChildrenPortfoliosCannotAddAThirdWithAGrandParentWithSameAccount stamp: 'EMI 11/7/2020 16:48:44'!
FAILURE!
!Portfolio methodsFor: 'adding' stamp: 'EMI 11/7/2020 16:56:19' prior: 50895454!
add: anAsset
	| root rootParent rootOther rootParentOther |
	(assets includes: anAsset) ifTrue:[^false].
	root _ parent.
	rootParent _ parent.
	(parent isNil not) ifTrue: [
		[root isNil not] whileTrue: [rootParent _ root. root _ root parentAsset.].
		
	].
	rootOther _ anAsset parentAsset .
	rootParentOther _ anAsset parentAsset .
	(rootParentOther isNil not) ifTrue: [
		[rootOther isNil not] whileTrue: [rootParentOther _ rootOther. rootOther _ rootOther parentAsset.].
	].
	(rootParent isNil or:[rootParentOther isNil]) ifFalse: [
		(rootParent hasAsset: rootParentOther) ifTrue:[^false.].
		(rootParentOther hasAsset: rootParent) ifTrue:[^false.].
	].
	(self hasAsset: anAsset) ifTrue:[^false].
	assets add: anAsset.
	anAsset addAsSubassetOf: self.
	^true.! !

----SNAPSHOT----(7 November 2020 16:56:24) CuisUniversity-4383.image priorSource: 18054466!

!testRun: #PortfolioTest #test01NewPortfolioHasNoAccountsAndNoPortfolios stamp: 'EMI 11/7/2020 16:56:29'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioAddEmptyAccount stamp: 'EMI 11/7/2020 16:56:29'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioAddEmptyPortfolio stamp: 'EMI 11/7/2020 16:56:29'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioHasNoRegisteredTransactions stamp: 'EMI 11/7/2020 16:56:29'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasOneAccountWithOneRegisteredTransaction stamp: 'EMI 11/7/2020 16:56:29'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioMoreThanOneAccountWithRegisteredTransactions stamp: 'EMI 11/7/2020 16:56:29'!
PASSED!

!testRun: #PortfolioTest #test07EmptyPortfolioHasNoTransactions stamp: 'EMI 11/7/2020 16:56:29'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioWithOneAccountHasOneTransaction stamp: 'EMI 11/7/2020 16:56:29'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithMoreThanOneAccountHasMoreThanOneTransactions stamp: 'EMI 11/7/2020 16:56:29'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioHasOneChildPortfolioWithAnAccountAndADeposit stamp: 'EMI 11/7/2020 16:56:29'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioHasMoreThanOneChildPortfolioWithAnAccountAndADeposit stamp: 'EMI 11/7/2020 16:56:29'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioHasOneChildPortfolioWithAnAccountAndADepositRegistered stamp: 'EMI 11/7/2020 16:56:29'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioHasMoreThanOneChildPortfolioWithAnAccountAndADepositRegistered stamp: 'EMI 11/7/2020 16:56:29'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioCannotAddSameEmptyAssetTwice stamp: 'EMI 11/7/2020 16:56:29'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCannotAddChildPortfolioWithSameAccount stamp: 'EMI 11/7/2020 16:56:29'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioCannotAddBothChildrenPortfoliosWithSameAccount stamp: 'EMI 11/7/2020 16:56:29'!
PASSED!

!testRun: #PortfolioTest #test17PortfolioCannotAddBothGrandChildrenPortfoliosWithSameAccount stamp: 'EMI 11/7/2020 16:56:29'!
FAILURE!

!testRun: #PortfolioTest #test18PortfolioWith2ChildrenPortfoliosCannotAddAThirdWithSameAccount stamp: 'EMI 11/7/2020 16:56:29'!
PASSED!

!testRun: #PortfolioTest #test19PortfolioWith2ChildrenPortfoliosCannotAddAThirdWithAParentWithSameAccount stamp: 'EMI 11/7/2020 16:56:29'!
FAILURE!

!testRun: #PortfolioTest #test20PortfolioWith2GrandChildrenPortfoliosCannotAddAThirdWithAGrandParentWithSameAccount stamp: 'EMI 11/7/2020 16:56:29'!
PASSED!

!testRun: #PortfolioTest #test17PortfolioCannotAddBothGrandChildrenPortfoliosWithSameAccount stamp: 'EMI 11/7/2020 16:56:33'!
FAILURE!
!Portfolio methodsFor: 'adding' stamp: 'EMI 11/7/2020 17:02:12' prior: 50895940!
add: anAsset
	| root rootParent rootOther rootParentOther |
	(assets includes: anAsset) ifTrue:[^false].
	root _ parent.
	rootParent _ self.
	(parent isNil not) ifTrue: [
		[root isNil not] whileTrue: [rootParent _ root. root _ root parentAsset.].
		
	].
	rootOther _ anAsset parentAsset .
	rootParentOther _ anAsset.
	(rootParentOther isNil not) ifTrue: [
		[rootOther isNil not] whileTrue: [rootParentOther _ rootOther. rootOther _ rootOther parentAsset.].
	].
	(rootParent isNil or:[rootParentOther isNil]) ifFalse: [
		(rootParent hasAsset: rootParentOther) ifTrue:[^false.].
		(rootParentOther hasAsset: rootParent) ifTrue:[^false.].
	].
	(self hasAsset: anAsset) ifTrue:[^false].
	assets add: anAsset.
	anAsset addAsSubassetOf: self.
	^true.! !
!Portfolio methodsFor: 'adding' stamp: 'EMI 11/7/2020 17:02:57' prior: 50896053!
add: anAsset
	| root rootParent rootOther rootParentOther |
	(assets includes: anAsset) ifTrue:[^false].
	root _ parent.
	rootParent _ self.
	(parent isNil not) ifTrue: [
		[root isNil not] whileTrue: [rootParent _ root. root _ root parentAsset.].
		
	].
	rootOther _ anAsset parentAsset .
	rootParentOther _ anAsset.
	(rootParentOther isNil not) ifTrue: [
		[rootOther isNil not] whileTrue: [rootParentOther _ rootOther. rootOther _ rootOther parentAsset.].
	].
	(rootParent hasAsset: rootParentOther) ifTrue:[^false.].
	(rootParentOther hasAsset: rootParent) ifTrue:[^false.].
	(self hasAsset: anAsset) ifTrue:[^false].
	assets add: anAsset.
	anAsset addAsSubassetOf: self.
	^true.! !

----SNAPSHOT----(7 November 2020 17:03:01) CuisUniversity-4383.image priorSource: 18058109!

!testRun: #PortfolioTest #test01NewPortfolioHasNoAccountsAndNoPortfolios stamp: 'EMI 11/7/2020 17:03:06'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioAddEmptyAccount stamp: 'EMI 11/7/2020 17:03:06'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioAddEmptyPortfolio stamp: 'EMI 11/7/2020 17:03:06'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioHasNoRegisteredTransactions stamp: 'EMI 11/7/2020 17:03:06'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasOneAccountWithOneRegisteredTransaction stamp: 'EMI 11/7/2020 17:03:06'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioMoreThanOneAccountWithRegisteredTransactions stamp: 'EMI 11/7/2020 17:03:06'!
PASSED!

!testRun: #PortfolioTest #test07EmptyPortfolioHasNoTransactions stamp: 'EMI 11/7/2020 17:03:06'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioWithOneAccountHasOneTransaction stamp: 'EMI 11/7/2020 17:03:06'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithMoreThanOneAccountHasMoreThanOneTransactions stamp: 'EMI 11/7/2020 17:03:06'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioHasOneChildPortfolioWithAnAccountAndADeposit stamp: 'EMI 11/7/2020 17:03:06'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioHasMoreThanOneChildPortfolioWithAnAccountAndADeposit stamp: 'EMI 11/7/2020 17:03:06'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioHasOneChildPortfolioWithAnAccountAndADepositRegistered stamp: 'EMI 11/7/2020 17:03:06'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioHasMoreThanOneChildPortfolioWithAnAccountAndADepositRegistered stamp: 'EMI 11/7/2020 17:03:06'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioCannotAddSameEmptyAssetTwice stamp: 'EMI 11/7/2020 17:03:06'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCannotAddChildPortfolioWithSameAccount stamp: 'EMI 11/7/2020 17:03:06'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioCannotAddBothChildrenPortfoliosWithSameAccount stamp: 'EMI 11/7/2020 17:03:06'!
PASSED!

!testRun: #PortfolioTest #test17PortfolioCannotAddBothGrandChildrenPortfoliosWithSameAccount stamp: 'EMI 11/7/2020 17:03:06'!
PASSED!

!testRun: #PortfolioTest #test18PortfolioWith2ChildrenPortfoliosCannotAddAThirdWithSameAccount stamp: 'EMI 11/7/2020 17:03:06'!
PASSED!

!testRun: #PortfolioTest #test19PortfolioWith2ChildrenPortfoliosCannotAddAThirdWithAParentWithSameAccount stamp: 'EMI 11/7/2020 17:03:06'!
PASSED!

!testRun: #PortfolioTest #test20PortfolioWith2GrandChildrenPortfoliosCannotAddAThirdWithAGrandParentWithSameAccount stamp: 'EMI 11/7/2020 17:03:06'!
PASSED!
!Portfolio methodsFor: 'adding' stamp: 'EMI 11/7/2020 17:06:47'!
xxx
	| root rootParent |
	root _ parent.
	rootParent _ self.
	(parent isNil not) ifTrue: [
		[root isNil not] whileTrue: [rootParent _ root. root _ root parentAsset.].
		
	].
	^true.! !
!Portfolio methodsFor: 'adding' stamp: 'EMI 11/7/2020 17:08:58' prior: 50896185!
xxx
	| root rootParent |
	root _ parent.
	rootParent _ self.
	(parent isNil not) ifTrue: [
		[root isNil not] whileTrue: [rootParent _ root. root _ root parentAsset.].
	].
	^rootParent.! !
!Portfolio methodsFor: 'adding' stamp: 'EMI 11/7/2020 17:10:30'!
assetTreeRoot
	| root rootParent |
	root _ parent.
	rootParent _ self.
	(parent isNil not) ifTrue: [
		[root isNil not] whileTrue: [rootParent _ root. root _ root parentAsset.].
	].
	^rootParent.! !

!methodRemoval: Portfolio #xxx stamp: 'EMI 11/7/2020 17:10:30'!
xxx
	| root rootParent |
	root _ parent.
	rootParent _ self.
	(parent isNil not) ifTrue: [
		[root isNil not] whileTrue: [rootParent _ root. root _ root parentAsset.].
	].
	^rootParent.!
!Portfolio methodsFor: 'adding' stamp: 'EMI 11/7/2020 17:11:22' prior: 50896079!
add: anAsset
	| rootParent rootParentOther |
	(assets includes: anAsset) ifTrue:[^false].
	rootParent _ self assetTreeRoot.
	rootParentOther _ anAsset assetTreeRoot.
	(rootParent hasAsset: rootParentOther) ifTrue:[^false.].
	(rootParentOther hasAsset: rootParent) ifTrue:[^false.].
	(self hasAsset: anAsset) ifTrue:[^false].
	assets add: anAsset.
	anAsset addAsSubassetOf: self.
	^true.! !
!Asset methodsFor: 'nil' stamp: 'EMI 11/7/2020 17:12:36'!
assetTreeRoot
	| root rootParent |
	root _ parent.
	rootParent _ self.
	(parent isNil not) ifTrue: [
		[root isNil not] whileTrue: [rootParent _ root. root _ root parentAsset.].
	].
	^rootParent.! !

!methodRemoval: Portfolio #assetTreeRoot stamp: 'EMI 11/7/2020 17:12:52'!
assetTreeRoot
	| root rootParent |
	root _ parent.
	rootParent _ self.
	(parent isNil not) ifTrue: [
		[root isNil not] whileTrue: [rootParent _ root. root _ root parentAsset.].
	].
	^rootParent.!

!testRun: #PortfolioTest #test01NewPortfolioHasNoAccountsAndNoPortfolios stamp: 'EMI 11/7/2020 17:13:04'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioAddEmptyAccount stamp: 'EMI 11/7/2020 17:13:04'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioAddEmptyPortfolio stamp: 'EMI 11/7/2020 17:13:04'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioHasNoRegisteredTransactions stamp: 'EMI 11/7/2020 17:13:04'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasOneAccountWithOneRegisteredTransaction stamp: 'EMI 11/7/2020 17:13:04'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioMoreThanOneAccountWithRegisteredTransactions stamp: 'EMI 11/7/2020 17:13:04'!
PASSED!

!testRun: #PortfolioTest #test07EmptyPortfolioHasNoTransactions stamp: 'EMI 11/7/2020 17:13:04'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioWithOneAccountHasOneTransaction stamp: 'EMI 11/7/2020 17:13:04'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithMoreThanOneAccountHasMoreThanOneTransactions stamp: 'EMI 11/7/2020 17:13:04'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioHasOneChildPortfolioWithAnAccountAndADeposit stamp: 'EMI 11/7/2020 17:13:04'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioHasMoreThanOneChildPortfolioWithAnAccountAndADeposit stamp: 'EMI 11/7/2020 17:13:04'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioHasOneChildPortfolioWithAnAccountAndADepositRegistered stamp: 'EMI 11/7/2020 17:13:04'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioHasMoreThanOneChildPortfolioWithAnAccountAndADepositRegistered stamp: 'EMI 11/7/2020 17:13:04'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioCannotAddSameEmptyAssetTwice stamp: 'EMI 11/7/2020 17:13:04'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCannotAddChildPortfolioWithSameAccount stamp: 'EMI 11/7/2020 17:13:04'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioCannotAddBothChildrenPortfoliosWithSameAccount stamp: 'EMI 11/7/2020 17:13:04'!
PASSED!

!testRun: #PortfolioTest #test17PortfolioCannotAddBothGrandChildrenPortfoliosWithSameAccount stamp: 'EMI 11/7/2020 17:13:04'!
PASSED!

!testRun: #PortfolioTest #test18PortfolioWith2ChildrenPortfoliosCannotAddAThirdWithSameAccount stamp: 'EMI 11/7/2020 17:13:04'!
PASSED!

!testRun: #PortfolioTest #test19PortfolioWith2ChildrenPortfoliosCannotAddAThirdWithAParentWithSameAccount stamp: 'EMI 11/7/2020 17:13:04'!
PASSED!

!testRun: #PortfolioTest #test20PortfolioWith2GrandChildrenPortfoliosCannotAddAThirdWithAGrandParentWithSameAccount stamp: 'EMI 11/7/2020 17:13:04'!
PASSED!
!Portfolio methodsFor: 'adding' stamp: 'EMI 11/7/2020 17:13:28' prior: 50896219!
add: anAsset
	| rootParent rootParentOther |
	(assets includes: anAsset) ifTrue:[^false].
	
	rootParent _ self assetTreeRoot.
	rootParentOther _ anAsset assetTreeRoot.
	
	(rootParent hasAsset: rootParentOther) ifTrue:[^false.].
	(rootParentOther hasAsset: rootParent) ifTrue:[^false.].
	
	(self hasAsset: anAsset) ifTrue:[^false].
	
	assets add: anAsset.
	anAsset addAsSubassetOf: self.
	^true.! !
!PortfolioTest methodsFor: 'tests' stamp: 'EMI 11/7/2020 17:26:07'!
test21
	| portfolioRoot portfolioChildLeft portfolioChildRight 
	portfolioGrandChildRight portfolioGrandChildLeft 
	portfolioRootAnotherTree portfolioChildAnotherTree portfolioGrandChildAnotherTree account|
	
	portfolioRoot _ Portfolio new.
	portfolioRootAnotherTree  _ Portfolio new.
	account _  ReceptiveAccount new.
	
	self assert: (portfolioRoot add: account).
	self assert: (portfolioRootAnotherTree add: account).
	
	portfolioChildLeft  _ Portfolio new.
	portfolioChildRight _ Portfolio new.
	self assert: (portfolioRoot add: portfolioChildLeft).
	self assert: (portfolioRoot add: portfolioChildRight).
	
	portfolioGrandChildLeft _ Portfolio new.
	portfolioGrandChildRight _ Portfolio new.
	self assert: (portfolioChildLeft add: portfolioGrandChildLeft ).
	self assert: (portfolioChildRight add: portfolioGrandChildRight).
	
	portfolioChildAnotherTree _ Portfolio new.
	self assert: (portfolioRootAnotherTree add: portfolioChildAnotherTree).
	
	portfolioGrandChildAnotherTree _ Portfolio new.
	self assert: (portfolioChildAnotherTree add: portfolioGrandChildAnotherTree ).
	
	self deny: (portfolioGrandChildRight add: portfolioGrandChildAnotherTree).
	


	 
! !
!PortfolioTest methodsFor: 'tests' stamp: 'EMI 11/7/2020 17:27:27' prior: 50896345!
test21
	| portfolio portfolio2 account|
	
	portfolio _ Portfolio new.
	portfolio2 _ Portfolio new.
	account _ ReceptiveAccount new.
	
	self assert: (portfolio add: account).
	self assert: (portfolio2 add: account).
	


	 
! !

!testRun: #PortfolioTest #test01NewPortfolioHasNoAccountsAndNoPortfolios stamp: 'EMI 11/7/2020 17:27:45'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioAddEmptyAccount stamp: 'EMI 11/7/2020 17:27:45'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioAddEmptyPortfolio stamp: 'EMI 11/7/2020 17:27:45'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioHasNoRegisteredTransactions stamp: 'EMI 11/7/2020 17:27:45'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasOneAccountWithOneRegisteredTransaction stamp: 'EMI 11/7/2020 17:27:45'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioMoreThanOneAccountWithRegisteredTransactions stamp: 'EMI 11/7/2020 17:27:45'!
PASSED!

!testRun: #PortfolioTest #test07EmptyPortfolioHasNoTransactions stamp: 'EMI 11/7/2020 17:27:45'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioWithOneAccountHasOneTransaction stamp: 'EMI 11/7/2020 17:27:45'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithMoreThanOneAccountHasMoreThanOneTransactions stamp: 'EMI 11/7/2020 17:27:45'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioHasOneChildPortfolioWithAnAccountAndADeposit stamp: 'EMI 11/7/2020 17:27:45'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioHasMoreThanOneChildPortfolioWithAnAccountAndADeposit stamp: 'EMI 11/7/2020 17:27:45'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioHasOneChildPortfolioWithAnAccountAndADepositRegistered stamp: 'EMI 11/7/2020 17:27:45'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioHasMoreThanOneChildPortfolioWithAnAccountAndADepositRegistered stamp: 'EMI 11/7/2020 17:27:45'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioCannotAddSameEmptyAssetTwice stamp: 'EMI 11/7/2020 17:27:45'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCannotAddChildPortfolioWithSameAccount stamp: 'EMI 11/7/2020 17:27:45'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioCannotAddBothChildrenPortfoliosWithSameAccount stamp: 'EMI 11/7/2020 17:27:45'!
PASSED!

!testRun: #PortfolioTest #test17PortfolioCannotAddBothGrandChildrenPortfoliosWithSameAccount stamp: 'EMI 11/7/2020 17:27:45'!
PASSED!

!testRun: #PortfolioTest #test18PortfolioWith2ChildrenPortfoliosCannotAddAThirdWithSameAccount stamp: 'EMI 11/7/2020 17:27:45'!
PASSED!

!testRun: #PortfolioTest #test19PortfolioWith2ChildrenPortfoliosCannotAddAThirdWithAParentWithSameAccount stamp: 'EMI 11/7/2020 17:27:45'!
PASSED!

!testRun: #PortfolioTest #test20PortfolioWith2GrandChildrenPortfoliosCannotAddAThirdWithAGrandParentWithSameAccount stamp: 'EMI 11/7/2020 17:27:45'!
PASSED!

!testRun: #PortfolioTest #test21 stamp: 'EMI 11/7/2020 17:27:45'!
PASSED!
!PortfolioTest methodsFor: 'tests' stamp: 'EMI 11/7/2020 17:29:13' prior: 50896385!
test21
	| portfolio portfolio2 account|
	
	portfolio _ Portfolio new.
	portfolio2 _ Portfolio new.
	account _ ReceptiveAccount new.
	
	self assert: (portfolio add: account).
	self assert: (portfolio2 add: account).
	self assert: account parent equals: portfolio.
	self assert: account parent equals: portfolio2.
	


	 
! !

!testRun: #PortfolioTest #test01NewPortfolioHasNoAccountsAndNoPortfolios stamp: 'EMI 11/7/2020 17:29:17'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioAddEmptyAccount stamp: 'EMI 11/7/2020 17:29:17'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioAddEmptyPortfolio stamp: 'EMI 11/7/2020 17:29:17'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioHasNoRegisteredTransactions stamp: 'EMI 11/7/2020 17:29:17'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasOneAccountWithOneRegisteredTransaction stamp: 'EMI 11/7/2020 17:29:17'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioMoreThanOneAccountWithRegisteredTransactions stamp: 'EMI 11/7/2020 17:29:18'!
PASSED!

!testRun: #PortfolioTest #test07EmptyPortfolioHasNoTransactions stamp: 'EMI 11/7/2020 17:29:18'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioWithOneAccountHasOneTransaction stamp: 'EMI 11/7/2020 17:29:18'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithMoreThanOneAccountHasMoreThanOneTransactions stamp: 'EMI 11/7/2020 17:29:18'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioHasOneChildPortfolioWithAnAccountAndADeposit stamp: 'EMI 11/7/2020 17:29:18'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioHasMoreThanOneChildPortfolioWithAnAccountAndADeposit stamp: 'EMI 11/7/2020 17:29:18'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioHasOneChildPortfolioWithAnAccountAndADepositRegistered stamp: 'EMI 11/7/2020 17:29:18'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioHasMoreThanOneChildPortfolioWithAnAccountAndADepositRegistered stamp: 'EMI 11/7/2020 17:29:18'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioCannotAddSameEmptyAssetTwice stamp: 'EMI 11/7/2020 17:29:18'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCannotAddChildPortfolioWithSameAccount stamp: 'EMI 11/7/2020 17:29:18'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioCannotAddBothChildrenPortfoliosWithSameAccount stamp: 'EMI 11/7/2020 17:29:18'!
PASSED!

!testRun: #PortfolioTest #test17PortfolioCannotAddBothGrandChildrenPortfoliosWithSameAccount stamp: 'EMI 11/7/2020 17:29:18'!
PASSED!

!testRun: #PortfolioTest #test18PortfolioWith2ChildrenPortfoliosCannotAddAThirdWithSameAccount stamp: 'EMI 11/7/2020 17:29:18'!
PASSED!

!testRun: #PortfolioTest #test19PortfolioWith2ChildrenPortfoliosCannotAddAThirdWithAParentWithSameAccount stamp: 'EMI 11/7/2020 17:29:18'!
PASSED!

!testRun: #PortfolioTest #test20PortfolioWith2GrandChildrenPortfoliosCannotAddAThirdWithAGrandParentWithSameAccount stamp: 'EMI 11/7/2020 17:29:18'!
PASSED!

!testRun: #PortfolioTest #test21 stamp: 'EMI 11/7/2020 17:29:18'!
ERROR!

!testRun: #PortfolioTest #test21 stamp: 'EMI 11/7/2020 17:29:18'!
ERROR!
!PortfolioTest methodsFor: 'tests' stamp: 'EMI 11/7/2020 17:29:37' prior: 50896476!
test21
	| portfolio portfolio2 account|
	
	portfolio _ Portfolio new.
	portfolio2 _ Portfolio new.
	account _ ReceptiveAccount new.
	
	self assert: (portfolio add: account).
	self assert: (portfolio2 add: account).
	self assert: account parentAsset equals: portfolio.
	self assert: account parentAsset equals: portfolio2.
	


	 
! !

!testRun: #PortfolioTest #test01NewPortfolioHasNoAccountsAndNoPortfolios stamp: 'EMI 11/7/2020 17:29:40'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioAddEmptyAccount stamp: 'EMI 11/7/2020 17:29:40'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioAddEmptyPortfolio stamp: 'EMI 11/7/2020 17:29:40'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioHasNoRegisteredTransactions stamp: 'EMI 11/7/2020 17:29:40'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasOneAccountWithOneRegisteredTransaction stamp: 'EMI 11/7/2020 17:29:40'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioMoreThanOneAccountWithRegisteredTransactions stamp: 'EMI 11/7/2020 17:29:40'!
PASSED!

!testRun: #PortfolioTest #test07EmptyPortfolioHasNoTransactions stamp: 'EMI 11/7/2020 17:29:40'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioWithOneAccountHasOneTransaction stamp: 'EMI 11/7/2020 17:29:40'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithMoreThanOneAccountHasMoreThanOneTransactions stamp: 'EMI 11/7/2020 17:29:40'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioHasOneChildPortfolioWithAnAccountAndADeposit stamp: 'EMI 11/7/2020 17:29:40'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioHasMoreThanOneChildPortfolioWithAnAccountAndADeposit stamp: 'EMI 11/7/2020 17:29:40'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioHasOneChildPortfolioWithAnAccountAndADepositRegistered stamp: 'EMI 11/7/2020 17:29:40'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioHasMoreThanOneChildPortfolioWithAnAccountAndADepositRegistered stamp: 'EMI 11/7/2020 17:29:40'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioCannotAddSameEmptyAssetTwice stamp: 'EMI 11/7/2020 17:29:40'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCannotAddChildPortfolioWithSameAccount stamp: 'EMI 11/7/2020 17:29:40'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioCannotAddBothChildrenPortfoliosWithSameAccount stamp: 'EMI 11/7/2020 17:29:40'!
PASSED!

!testRun: #PortfolioTest #test17PortfolioCannotAddBothGrandChildrenPortfoliosWithSameAccount stamp: 'EMI 11/7/2020 17:29:40'!
PASSED!

!testRun: #PortfolioTest #test18PortfolioWith2ChildrenPortfoliosCannotAddAThirdWithSameAccount stamp: 'EMI 11/7/2020 17:29:40'!
PASSED!

!testRun: #PortfolioTest #test19PortfolioWith2ChildrenPortfoliosCannotAddAThirdWithAParentWithSameAccount stamp: 'EMI 11/7/2020 17:29:40'!
PASSED!

!testRun: #PortfolioTest #test20PortfolioWith2GrandChildrenPortfoliosCannotAddAThirdWithAGrandParentWithSameAccount stamp: 'EMI 11/7/2020 17:29:40'!
PASSED!

!testRun: #PortfolioTest #test21 stamp: 'EMI 11/7/2020 17:29:40'!
FAILURE!

!testRun: #PortfolioTest #test21 stamp: 'EMI 11/7/2020 17:29:40'!
FAILURE!

Object subclass: #Asset
	instanceVariableNames: 'parents'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classDefinition: #Asset category: 'Portfolio-Ejercicio' stamp: 'EMI 11/7/2020 17:30:13'!
Object subclass: #Asset
	instanceVariableNames: 'parents'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'EMI 11/7/2020 17:30:31' prior: 50894092 overrides: 50894068!
addAsSubassetOf: aParentAsset
	parents add: aParentAsset.! !
!Asset methodsFor: 'as yet unclassified' stamp: 'EMI 11/7/2020 17:30:57' prior: 50894068!
addAsSubassetOf: aParentAsset
	parents add: aParentAsset.! !
!Asset methodsFor: 'as yet unclassified' stamp: 'EMI 11/7/2020 17:31:09' prior: 50894073!
parentAsset
	^parents! !

!methodRemoval: Portfolio #parentAsset stamp: 'EMI 11/7/2020 17:31:17'!
parentAsset
	^parent!

!methodRemoval: Portfolio #addAsSubassetOf: stamp: 'EMI 11/7/2020 17:31:22'!
addAsSubassetOf: aParentAsset
	parents add: aParentAsset.!

!methodRemoval: ReceptiveAccount #addAsSubassetOf: stamp: 'EMI 11/7/2020 17:31:29'!
addAsSubassetOf: aParentAsset
	parent _ aParentAsset.!

!methodRemoval: ReceptiveAccount #parentAsset stamp: 'EMI 11/7/2020 17:31:33'!
parentAsset
	^parent.!
!ReceptiveAccount methodsFor: 'initialization' stamp: 'EMI 11/7/2020 17:31:48' prior: 50894117 overrides: 16896425!
initialize

	transactions := OrderedCollection new.
	parents _ OrderedCollection new.! !
!Portfolio methodsFor: 'initialization' stamp: 'EMI 11/7/2020 17:31:59' prior: 50894111 overrides: 16896425!
initialize
	assets _ OrderedCollection new.
	parents _ OrderedCollection new.! !
!Asset methodsFor: 'as yet unclassified' stamp: 'EMI 11/7/2020 17:34:24' prior: 50896233!
assetTreeRoot
	| root rootParent rootParents|
	rootParents _ parents collect: [:aParent |
		root _ aParent.
		rootParent _ self.
		(aParent isNil not) ifTrue: [
			[root isNil not] whileTrue: [rootParent _ root. root _ root parentAsset.].
		].
		rootParent.
	].
	^rootParents.! !
!Portfolio methodsFor: 'adding' stamp: 'EMI 11/7/2020 17:38:42' prior: 50896330!
add: anAsset
	| rootParents rootParentsOther |
	(assets includes: anAsset) ifTrue:[^false].
	
	rootParents _ (self assetTreeRoot) add: self.
	rootParentsOther _ (anAsset assetTreeRoot) add: anAsset.
	
	rootParents do: [:aParent |
		rootParentsOther do: [:aParentOther |
			(aParent hasAsset: aParentOther) ifTrue:[^false.].
			(aParentOther hasAsset: aParent) ifTrue:[^false.].
		].
	].
	
	(self hasAsset: anAsset) ifTrue:[^false].
	
	assets add: anAsset.
	anAsset addAsSubassetOf: self.
	^true.! !
!Portfolio methodsFor: 'adding' stamp: 'EMI 11/7/2020 17:39:08' prior: 50896738!
add: anAsset
	| rootParents rootParentsOther |
	(assets includes: anAsset) ifTrue:[^false].
	
	rootParents _ (self assetTreeRoot) add: self.
	rootParentsOther _ (anAsset assetTreeRoot) add: anAsset.
	
	rootParents do: [:aParent |
		rootParentsOther do: [:aParentOther |
			(aParent hasAsset: aParentOther) ifTrue:[^false.].
			(aParentOther hasAsset: aParent) ifTrue:[^false.].
		].
	].
	
	assets add: anAsset.
	anAsset addAsSubassetOf: self.
	^true.! !

----SNAPSHOT----(7 November 2020 17:39:16) CuisUniversity-4383.image priorSource: 18062478!

----SNAPSHOT----(7 November 2020 17:39:45) CuisUniversity-4383.image priorSource: 18083941!

!testRun: #PortfolioTest #test01NewPortfolioHasNoAccountsAndNoPortfolios stamp: 'EMI 11/7/2020 17:39:48'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioAddEmptyAccount stamp: 'EMI 11/7/2020 17:39:48'!
ERROR!

!testRun: #PortfolioTest #test03PortfolioAddEmptyPortfolio stamp: 'EMI 11/7/2020 17:39:48'!
ERROR!

!testRun: #PortfolioTest #test04PortfolioHasNoRegisteredTransactions stamp: 'EMI 11/7/2020 17:39:48'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasOneAccountWithOneRegisteredTransaction stamp: 'EMI 11/7/2020 17:39:48'!
ERROR!

!testRun: #PortfolioTest #test06PortfolioMoreThanOneAccountWithRegisteredTransactions stamp: 'EMI 11/7/2020 17:39:48'!
ERROR!

!testRun: #PortfolioTest #test07EmptyPortfolioHasNoTransactions stamp: 'EMI 11/7/2020 17:39:48'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioWithOneAccountHasOneTransaction stamp: 'EMI 11/7/2020 17:39:48'!
ERROR!

!testRun: #PortfolioTest #test09PortfolioWithMoreThanOneAccountHasMoreThanOneTransactions stamp: 'EMI 11/7/2020 17:39:48'!
ERROR!

!testRun: #PortfolioTest #test10PortfolioHasOneChildPortfolioWithAnAccountAndADeposit stamp: 'EMI 11/7/2020 17:39:48'!
ERROR!

!testRun: #PortfolioTest #test11PortfolioHasMoreThanOneChildPortfolioWithAnAccountAndADeposit stamp: 'EMI 11/7/2020 17:39:48'!
ERROR!

!testRun: #PortfolioTest #test12PortfolioHasOneChildPortfolioWithAnAccountAndADepositRegistered stamp: 'EMI 11/7/2020 17:39:48'!
ERROR!

!testRun: #PortfolioTest #test13PortfolioHasMoreThanOneChildPortfolioWithAnAccountAndADepositRegistered stamp: 'EMI 11/7/2020 17:39:48'!
ERROR!

!testRun: #PortfolioTest #test14PortfolioCannotAddSameEmptyAssetTwice stamp: 'EMI 11/7/2020 17:39:48'!
ERROR!

!testRun: #PortfolioTest #test15PortfolioCannotAddChildPortfolioWithSameAccount stamp: 'EMI 11/7/2020 17:39:48'!
ERROR!

!testRun: #PortfolioTest #test16PortfolioCannotAddBothChildrenPortfoliosWithSameAccount stamp: 'EMI 11/7/2020 17:39:48'!
ERROR!

!testRun: #PortfolioTest #test17PortfolioCannotAddBothGrandChildrenPortfoliosWithSameAccount stamp: 'EMI 11/7/2020 17:39:48'!
ERROR!

!testRun: #PortfolioTest #test18PortfolioWith2ChildrenPortfoliosCannotAddAThirdWithSameAccount stamp: 'EMI 11/7/2020 17:39:48'!
ERROR!

!testRun: #PortfolioTest #test19PortfolioWith2ChildrenPortfoliosCannotAddAThirdWithAParentWithSameAccount stamp: 'EMI 11/7/2020 17:39:48'!
ERROR!

!testRun: #PortfolioTest #test20PortfolioWith2GrandChildrenPortfoliosCannotAddAThirdWithAGrandParentWithSameAccount stamp: 'EMI 11/7/2020 17:39:48'!
ERROR!

!testRun: #PortfolioTest #test21 stamp: 'EMI 11/7/2020 17:39:48'!
ERROR!

!testRun: #PortfolioTest #test02PortfolioAddEmptyAccount stamp: 'EMI 11/7/2020 17:39:52'!
ERROR!
!Portfolio methodsFor: 'adding' stamp: 'EMI 11/7/2020 17:40:25' prior: 50896757!
add: anAsset
	| rootParents rootParentsOther |
	(assets includes: anAsset) ifTrue:[^false].
	
	rootParents _ (self assetTreeRoot).
	rootParents add: self.
	rootParentsOther _ (anAsset assetTreeRoot).
	rootParentsOther add: anAsset.
	
	rootParents do: [:aParent |
		rootParentsOther do: [:aParentOther |
			(aParent hasAsset: aParentOther) ifTrue:[^false.].
			(aParentOther hasAsset: aParent) ifTrue:[^false.].
		].
	].
	
	assets add: anAsset.
	anAsset addAsSubassetOf: self.
	^true.! !

----SNAPSHOT----(7 November 2020 17:40:38) CuisUniversity-4383.image priorSource: 18084034!

!testRun: #PortfolioTest #test01NewPortfolioHasNoAccountsAndNoPortfolios stamp: 'EMI 11/7/2020 17:40:41'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioAddEmptyAccount stamp: 'EMI 11/7/2020 17:40:41'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioAddEmptyPortfolio stamp: 'EMI 11/7/2020 17:40:41'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioHasNoRegisteredTransactions stamp: 'EMI 11/7/2020 17:40:41'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasOneAccountWithOneRegisteredTransaction stamp: 'EMI 11/7/2020 17:40:41'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioMoreThanOneAccountWithRegisteredTransactions stamp: 'EMI 11/7/2020 17:40:41'!
PASSED!

!testRun: #PortfolioTest #test07EmptyPortfolioHasNoTransactions stamp: 'EMI 11/7/2020 17:40:41'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioWithOneAccountHasOneTransaction stamp: 'EMI 11/7/2020 17:40:41'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithMoreThanOneAccountHasMoreThanOneTransactions stamp: 'EMI 11/7/2020 17:40:41'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioHasOneChildPortfolioWithAnAccountAndADeposit stamp: 'EMI 11/7/2020 17:40:41'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioHasMoreThanOneChildPortfolioWithAnAccountAndADeposit stamp: 'EMI 11/7/2020 17:40:41'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioHasOneChildPortfolioWithAnAccountAndADepositRegistered stamp: 'EMI 11/7/2020 17:40:41'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioHasMoreThanOneChildPortfolioWithAnAccountAndADepositRegistered stamp: 'EMI 11/7/2020 17:40:41'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioCannotAddSameEmptyAssetTwice stamp: 'EMI 11/7/2020 17:40:41'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCannotAddChildPortfolioWithSameAccount stamp: 'EMI 11/7/2020 17:40:41'!
ERROR!

!testRun: #PortfolioTest #test16PortfolioCannotAddBothChildrenPortfoliosWithSameAccount stamp: 'EMI 11/7/2020 17:40:41'!
ERROR!

!testRun: #PortfolioTest #test17PortfolioCannotAddBothGrandChildrenPortfoliosWithSameAccount stamp: 'EMI 11/7/2020 17:40:41'!
ERROR!

!testRun: #PortfolioTest #test18PortfolioWith2ChildrenPortfoliosCannotAddAThirdWithSameAccount stamp: 'EMI 11/7/2020 17:40:41'!
ERROR!

!testRun: #PortfolioTest #test19PortfolioWith2ChildrenPortfoliosCannotAddAThirdWithAParentWithSameAccount stamp: 'EMI 11/7/2020 17:40:41'!
ERROR!

!testRun: #PortfolioTest #test20PortfolioWith2GrandChildrenPortfoliosCannotAddAThirdWithAGrandParentWithSameAccount stamp: 'EMI 11/7/2020 17:40:41'!
ERROR!

!testRun: #PortfolioTest #test21 stamp: 'EMI 11/7/2020 17:40:41'!
ERROR!

!testRun: #PortfolioTest #test15PortfolioCannotAddChildPortfolioWithSameAccount stamp: 'EMI 11/7/2020 17:40:44'!
ERROR!

!testRun: #PortfolioTest #test15PortfolioCannotAddChildPortfolioWithSameAccount stamp: 'EMI 11/7/2020 17:41:12'!
ERROR!

!testRun: #PortfolioTest #test15PortfolioCannotAddChildPortfolioWithSameAccount stamp: 'EMI 11/7/2020 17:42:01'!
ERROR!
!Asset methodsFor: 'as yet unclassified' stamp: 'EMI 11/7/2020 17:49:19' prior: 50896726!
assetTreeRoot
	| rootParents|
	rootParents _ OrderedCollection new.
	
	parents isEmpty ifTrue: [^self].
	parents do: [:aParent | 
		rootParents addAll: aParent assetTreeRoot.
	].

	^rootParents.! !
!Asset methodsFor: 'as yet unclassified' stamp: 'EMI 11/7/2020 17:50:54' prior: 50896978!
assetTreeRoot
	| rootParents|
	rootParents _ OrderedCollection new.
	
	parents isEmpty ifTrue: [rootParents add: self].
	parents do: [:aParent | 
		rootParents addAll: aParent assetTreeRoot.
	].

	^rootParents.! !
!Portfolio methodsFor: 'adding' stamp: 'EMI 11/7/2020 17:51:11' prior: 50896864!
add: anAsset
	| rootParents rootParentsOther |
	(assets includes: anAsset) ifTrue:[^false].
	
	rootParents _ (self assetTreeRoot).
	rootParentsOther _ (anAsset assetTreeRoot).
	
	rootParents do: [:aParent |
		rootParentsOther do: [:aParentOther |
			(aParent hasAsset: aParentOther) ifTrue:[^false.].
			(aParentOther hasAsset: aParent) ifTrue:[^false.].
		].
	].
	
	assets add: anAsset.
	anAsset addAsSubassetOf: self.
	^true.! !

----SNAPSHOT----(7 November 2020 17:51:26) CuisUniversity-4383.image priorSource: 18087398!

!testRun: #PortfolioTest #test01NewPortfolioHasNoAccountsAndNoPortfolios stamp: 'EMI 11/7/2020 17:51:40'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioAddEmptyAccount stamp: 'EMI 11/7/2020 17:51:40'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioAddEmptyPortfolio stamp: 'EMI 11/7/2020 17:51:40'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioHasNoRegisteredTransactions stamp: 'EMI 11/7/2020 17:51:40'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasOneAccountWithOneRegisteredTransaction stamp: 'EMI 11/7/2020 17:51:40'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioMoreThanOneAccountWithRegisteredTransactions stamp: 'EMI 11/7/2020 17:51:40'!
PASSED!

!testRun: #PortfolioTest #test07EmptyPortfolioHasNoTransactions stamp: 'EMI 11/7/2020 17:51:40'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioWithOneAccountHasOneTransaction stamp: 'EMI 11/7/2020 17:51:40'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithMoreThanOneAccountHasMoreThanOneTransactions stamp: 'EMI 11/7/2020 17:51:40'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioHasOneChildPortfolioWithAnAccountAndADeposit stamp: 'EMI 11/7/2020 17:51:40'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioHasMoreThanOneChildPortfolioWithAnAccountAndADeposit stamp: 'EMI 11/7/2020 17:51:40'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioHasOneChildPortfolioWithAnAccountAndADepositRegistered stamp: 'EMI 11/7/2020 17:51:40'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioHasMoreThanOneChildPortfolioWithAnAccountAndADepositRegistered stamp: 'EMI 11/7/2020 17:51:40'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioCannotAddSameEmptyAssetTwice stamp: 'EMI 11/7/2020 17:51:40'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCannotAddChildPortfolioWithSameAccount stamp: 'EMI 11/7/2020 17:51:40'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioCannotAddBothChildrenPortfoliosWithSameAccount stamp: 'EMI 11/7/2020 17:51:40'!
PASSED!

!testRun: #PortfolioTest #test17PortfolioCannotAddBothGrandChildrenPortfoliosWithSameAccount stamp: 'EMI 11/7/2020 17:51:40'!
PASSED!

!testRun: #PortfolioTest #test18PortfolioWith2ChildrenPortfoliosCannotAddAThirdWithSameAccount stamp: 'EMI 11/7/2020 17:51:40'!
PASSED!

!testRun: #PortfolioTest #test19PortfolioWith2ChildrenPortfoliosCannotAddAThirdWithAParentWithSameAccount stamp: 'EMI 11/7/2020 17:51:40'!
PASSED!

!testRun: #PortfolioTest #test20PortfolioWith2GrandChildrenPortfoliosCannotAddAThirdWithAGrandParentWithSameAccount stamp: 'EMI 11/7/2020 17:51:40'!
PASSED!

!testRun: #PortfolioTest #test21 stamp: 'EMI 11/7/2020 17:51:40'!
FAILURE!

!testRun: #PortfolioTest #test21 stamp: 'EMI 11/7/2020 17:51:40'!
FAILURE!
!PortfolioTest methodsFor: 'tests' stamp: 'EMI 11/7/2020 17:52:20' prior: 50896573!
test21
	| portfolio portfolio2 account|
	
	portfolio _ Portfolio new.
	portfolio2 _ Portfolio new.
	account _ ReceptiveAccount new.
	
	self assert: (portfolio add: account).
	self assert: (portfolio2 add: account).
	self assert: account parentAsset includes: portfolio.
	self assert: account parentAsset includes: portfolio2.
	


	 
! !

!testRun: #PortfolioTest #test01NewPortfolioHasNoAccountsAndNoPortfolios stamp: 'EMI 11/7/2020 17:52:23'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioAddEmptyAccount stamp: 'EMI 11/7/2020 17:52:23'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioAddEmptyPortfolio stamp: 'EMI 11/7/2020 17:52:23'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioHasNoRegisteredTransactions stamp: 'EMI 11/7/2020 17:52:23'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasOneAccountWithOneRegisteredTransaction stamp: 'EMI 11/7/2020 17:52:23'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioMoreThanOneAccountWithRegisteredTransactions stamp: 'EMI 11/7/2020 17:52:23'!
PASSED!

!testRun: #PortfolioTest #test07EmptyPortfolioHasNoTransactions stamp: 'EMI 11/7/2020 17:52:23'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioWithOneAccountHasOneTransaction stamp: 'EMI 11/7/2020 17:52:23'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithMoreThanOneAccountHasMoreThanOneTransactions stamp: 'EMI 11/7/2020 17:52:23'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioHasOneChildPortfolioWithAnAccountAndADeposit stamp: 'EMI 11/7/2020 17:52:23'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioHasMoreThanOneChildPortfolioWithAnAccountAndADeposit stamp: 'EMI 11/7/2020 17:52:23'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioHasOneChildPortfolioWithAnAccountAndADepositRegistered stamp: 'EMI 11/7/2020 17:52:23'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioHasMoreThanOneChildPortfolioWithAnAccountAndADepositRegistered stamp: 'EMI 11/7/2020 17:52:23'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioCannotAddSameEmptyAssetTwice stamp: 'EMI 11/7/2020 17:52:23'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCannotAddChildPortfolioWithSameAccount stamp: 'EMI 11/7/2020 17:52:23'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioCannotAddBothChildrenPortfoliosWithSameAccount stamp: 'EMI 11/7/2020 17:52:23'!
PASSED!

!testRun: #PortfolioTest #test17PortfolioCannotAddBothGrandChildrenPortfoliosWithSameAccount stamp: 'EMI 11/7/2020 17:52:23'!
PASSED!

!testRun: #PortfolioTest #test18PortfolioWith2ChildrenPortfoliosCannotAddAThirdWithSameAccount stamp: 'EMI 11/7/2020 17:52:23'!
PASSED!

!testRun: #PortfolioTest #test19PortfolioWith2ChildrenPortfoliosCannotAddAThirdWithAParentWithSameAccount stamp: 'EMI 11/7/2020 17:52:23'!
PASSED!

!testRun: #PortfolioTest #test20PortfolioWith2GrandChildrenPortfoliosCannotAddAThirdWithAGrandParentWithSameAccount stamp: 'EMI 11/7/2020 17:52:23'!
PASSED!

!testRun: #PortfolioTest #test21 stamp: 'EMI 11/7/2020 17:52:23'!
PASSED!
!Portfolio methodsFor: 'accessing' stamp: 'EMI 11/7/2020 17:57:47' prior: 50892100 overrides: 50892062!
transactions
	| res |
	res _ OrderedCollection new.
	assets do: [:anAsset | res addAll: anAsset transactions  ].
	^res.! !
!PortfolioTest methodsFor: 'tests' stamp: 'EMI 11/7/2020 17:58:50'!
test21TwoPortfoliosCanUseSameAccount
	| portfolio portfolio2 account|
	
	portfolio _ Portfolio new.
	portfolio2 _ Portfolio new.
	account _ ReceptiveAccount new.
	
	self assert: (portfolio add: account).
	self assert: (portfolio2 add: account).
	self assert: account parentAsset includes: portfolio.
	self assert: account parentAsset includes: portfolio2.
	


	 
! !

!methodRemoval: PortfolioTest #test21 stamp: 'EMI 11/7/2020 17:58:51'!
test21
	| portfolio portfolio2 account|
	
	portfolio _ Portfolio new.
	portfolio2 _ Portfolio new.
	account _ ReceptiveAccount new.
	
	self assert: (portfolio add: account).
	self assert: (portfolio2 add: account).
	self assert: account parentAsset includes: portfolio.
	self assert: account parentAsset includes: portfolio2.
	


	 
!
!PortfolioTest methodsFor: 'tests' stamp: 'EMI 11/7/2020 18:05:41'!
test22UniteTwoPortfoliosWithSameAccount
	| portfolio portfolio2 portfolioRoot account|
	
	portfolio _ Portfolio new.
	portfolio2 _ Portfolio new.
	portfolioRoot _ Portfolio new.
	account _ ReceptiveAccount new.
	
	self assert: (portfolio add: account).
	self assert: (portfolio2 add: account).
	self assert: (portfolioRoot add: portfolio).
	self deny: (portfolioRoot add: portfolio2).
	


	 
! !

!testRun: #PortfolioTest #test01NewPortfolioHasNoAccountsAndNoPortfolios stamp: 'EMI 11/7/2020 18:05:49'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioAddEmptyAccount stamp: 'EMI 11/7/2020 18:05:49'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioAddEmptyPortfolio stamp: 'EMI 11/7/2020 18:05:49'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioHasNoRegisteredTransactions stamp: 'EMI 11/7/2020 18:05:49'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasOneAccountWithOneRegisteredTransaction stamp: 'EMI 11/7/2020 18:05:49'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioMoreThanOneAccountWithRegisteredTransactions stamp: 'EMI 11/7/2020 18:05:49'!
PASSED!

!testRun: #PortfolioTest #test07EmptyPortfolioHasNoTransactions stamp: 'EMI 11/7/2020 18:05:49'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioWithOneAccountHasOneTransaction stamp: 'EMI 11/7/2020 18:05:49'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithMoreThanOneAccountHasMoreThanOneTransactions stamp: 'EMI 11/7/2020 18:05:49'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioHasOneChildPortfolioWithAnAccountAndADeposit stamp: 'EMI 11/7/2020 18:05:49'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioHasMoreThanOneChildPortfolioWithAnAccountAndADeposit stamp: 'EMI 11/7/2020 18:05:49'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioHasOneChildPortfolioWithAnAccountAndADepositRegistered stamp: 'EMI 11/7/2020 18:05:49'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioHasMoreThanOneChildPortfolioWithAnAccountAndADepositRegistered stamp: 'EMI 11/7/2020 18:05:49'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioCannotAddSameEmptyAssetTwice stamp: 'EMI 11/7/2020 18:05:49'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCannotAddChildPortfolioWithSameAccount stamp: 'EMI 11/7/2020 18:05:49'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioCannotAddBothChildrenPortfoliosWithSameAccount stamp: 'EMI 11/7/2020 18:05:49'!
PASSED!

!testRun: #PortfolioTest #test17PortfolioCannotAddBothGrandChildrenPortfoliosWithSameAccount stamp: 'EMI 11/7/2020 18:05:49'!
PASSED!

!testRun: #PortfolioTest #test18PortfolioWith2ChildrenPortfoliosCannotAddAThirdWithSameAccount stamp: 'EMI 11/7/2020 18:05:49'!
PASSED!

!testRun: #PortfolioTest #test19PortfolioWith2ChildrenPortfoliosCannotAddAThirdWithAParentWithSameAccount stamp: 'EMI 11/7/2020 18:05:49'!
PASSED!

!testRun: #PortfolioTest #test20PortfolioWith2GrandChildrenPortfoliosCannotAddAThirdWithAGrandParentWithSameAccount stamp: 'EMI 11/7/2020 18:05:49'!
PASSED!

!testRun: #PortfolioTest #test21TwoPortfoliosCanUseSameAccount stamp: 'EMI 11/7/2020 18:05:49'!
PASSED!

!testRun: #PortfolioTest #test22UniteTwoPortfoliosWithSameAccount stamp: 'EMI 11/7/2020 18:05:49'!
PASSED!
!PortfolioTest methodsFor: 'tests' stamp: 'EMI 11/7/2020 18:06:13'!
test22CannotUniteTwoPortfoliosWithSameAccount
	| portfolio portfolio2 portfolioRoot account|
	
	portfolio _ Portfolio new.
	portfolio2 _ Portfolio new.
	portfolioRoot _ Portfolio new.
	account _ ReceptiveAccount new.
	
	self assert: (portfolio add: account).
	self assert: (portfolio2 add: account).
	self assert: (portfolioRoot add: portfolio).
	self deny: (portfolioRoot add: portfolio2).
	


	 
! !

!methodRemoval: PortfolioTest #test22UniteTwoPortfoliosWithSameAccount stamp: 'EMI 11/7/2020 18:06:13'!
test22UniteTwoPortfoliosWithSameAccount
	| portfolio portfolio2 portfolioRoot account|
	
	portfolio _ Portfolio new.
	portfolio2 _ Portfolio new.
	portfolioRoot _ Portfolio new.
	account _ ReceptiveAccount new.
	
	self assert: (portfolio add: account).
	self assert: (portfolio2 add: account).
	self assert: (portfolioRoot add: portfolio).
	self deny: (portfolioRoot add: portfolio2).
	


	 
!
!PortfolioTest methodsFor: 'tests' stamp: 'EMI 11/7/2020 18:08:55' prior: 50889864!
test01NewPortfolioHasNoAccountsAndNoPortfolios
	| portfolio |
	portfolio _ Portfolio new.
	
	self assert: portfolio balance equals: 0.
	self assert: portfolio parentAsset isEmpty.! !

----SNAPSHOT----(7 November 2020 18:09:09) CuisUniversity-4383.image priorSource: 18091598!

!testRun: #PortfolioTest #test01NewPortfolioHasNoAccountsAndNoPortfolios stamp: 'EMI 11/7/2020 18:09:14'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioAddEmptyAccount stamp: 'EMI 11/7/2020 18:09:14'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioAddEmptyPortfolio stamp: 'EMI 11/7/2020 18:09:14'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioHasNoRegisteredTransactions stamp: 'EMI 11/7/2020 18:09:14'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasOneAccountWithOneRegisteredTransaction stamp: 'EMI 11/7/2020 18:09:14'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioMoreThanOneAccountWithRegisteredTransactions stamp: 'EMI 11/7/2020 18:09:14'!
PASSED!

!testRun: #PortfolioTest #test07EmptyPortfolioHasNoTransactions stamp: 'EMI 11/7/2020 18:09:14'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioWithOneAccountHasOneTransaction stamp: 'EMI 11/7/2020 18:09:14'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithMoreThanOneAccountHasMoreThanOneTransactions stamp: 'EMI 11/7/2020 18:09:14'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioHasOneChildPortfolioWithAnAccountAndADeposit stamp: 'EMI 11/7/2020 18:09:14'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioHasMoreThanOneChildPortfolioWithAnAccountAndADeposit stamp: 'EMI 11/7/2020 18:09:14'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioHasOneChildPortfolioWithAnAccountAndADepositRegistered stamp: 'EMI 11/7/2020 18:09:14'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioHasMoreThanOneChildPortfolioWithAnAccountAndADepositRegistered stamp: 'EMI 11/7/2020 18:09:14'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioCannotAddSameEmptyAssetTwice stamp: 'EMI 11/7/2020 18:09:14'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCannotAddChildPortfolioWithSameAccount stamp: 'EMI 11/7/2020 18:09:14'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioCannotAddBothChildrenPortfoliosWithSameAccount stamp: 'EMI 11/7/2020 18:09:14'!
PASSED!

!testRun: #PortfolioTest #test17PortfolioCannotAddBothGrandChildrenPortfoliosWithSameAccount stamp: 'EMI 11/7/2020 18:09:14'!
PASSED!

!testRun: #PortfolioTest #test18PortfolioWith2ChildrenPortfoliosCannotAddAThirdWithSameAccount stamp: 'EMI 11/7/2020 18:09:14'!
PASSED!

!testRun: #PortfolioTest #test19PortfolioWith2ChildrenPortfoliosCannotAddAThirdWithAParentWithSameAccount stamp: 'EMI 11/7/2020 18:09:14'!
PASSED!

!testRun: #PortfolioTest #test20PortfolioWith2GrandChildrenPortfoliosCannotAddAThirdWithAGrandParentWithSameAccount stamp: 'EMI 11/7/2020 18:09:14'!
PASSED!

!testRun: #PortfolioTest #test21TwoPortfoliosCanUseSameAccount stamp: 'EMI 11/7/2020 18:09:14'!
PASSED!

!testRun: #PortfolioTest #test22CannotUniteTwoPortfoliosWithSameAccount stamp: 'EMI 11/7/2020 18:09:14'!
PASSED!
!PortfolioTest methodsFor: 'tests' stamp: 'EMI 11/7/2020 18:10:58' prior: 50892107!
test02PortfolioAddEmptyAccount
	| portfolio account|
	portfolio _ Portfolio new.
	account _ ReceptiveAccount new.
	
	self assert: (portfolio add: account).
	self assert: portfolio balance equals: 0.
	self assert: portfolio parentAsset isEmpty.
	self assert: account parentAsset size equals: 1.
	self assert: account parentAsset includes: portfolio.! !

!testRun: #PortfolioTest #test02PortfolioAddEmptyAccount stamp: 'EMI 11/7/2020 18:11:15'!
PASSED!
!PortfolioTest methodsFor: 'tests' stamp: 'EMI 11/7/2020 18:12:10' prior: 50892116!
test03PortfolioAddEmptyPortfolio
	| portfolio portfolioChild |
	portfolio _ Portfolio new.
	portfolioChild _ Portfolio new.
	
	self assert: (portfolio add: portfolioChild ).
	self assert: portfolio balance equals: 0.
	self assert: portfolio parentAsset isEmpty.
	self assert: portfolioChild parentAsset size equals: 1.
	self assert: portfolioChild parentAsset includes: portfolio.! !

!testRun: #PortfolioTest #test03PortfolioAddEmptyPortfolio stamp: 'EMI 11/7/2020 18:12:15'!
PASSED!

!testRun: #PortfolioTest #test01NewPortfolioHasNoAccountsAndNoPortfolios stamp: 'EMI 11/7/2020 18:12:15'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioAddEmptyAccount stamp: 'EMI 11/7/2020 18:12:15'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioAddEmptyPortfolio stamp: 'EMI 11/7/2020 18:12:15'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioHasNoRegisteredTransactions stamp: 'EMI 11/7/2020 18:12:15'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasOneAccountWithOneRegisteredTransaction stamp: 'EMI 11/7/2020 18:12:15'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioMoreThanOneAccountWithRegisteredTransactions stamp: 'EMI 11/7/2020 18:12:15'!
PASSED!

!testRun: #PortfolioTest #test07EmptyPortfolioHasNoTransactions stamp: 'EMI 11/7/2020 18:12:15'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioWithOneAccountHasOneTransaction stamp: 'EMI 11/7/2020 18:12:15'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithMoreThanOneAccountHasMoreThanOneTransactions stamp: 'EMI 11/7/2020 18:12:15'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioHasOneChildPortfolioWithAnAccountAndADeposit stamp: 'EMI 11/7/2020 18:12:15'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioHasMoreThanOneChildPortfolioWithAnAccountAndADeposit stamp: 'EMI 11/7/2020 18:12:15'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioHasOneChildPortfolioWithAnAccountAndADepositRegistered stamp: 'EMI 11/7/2020 18:12:15'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioHasMoreThanOneChildPortfolioWithAnAccountAndADepositRegistered stamp: 'EMI 11/7/2020 18:12:15'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioCannotAddSameEmptyAssetTwice stamp: 'EMI 11/7/2020 18:12:15'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCannotAddChildPortfolioWithSameAccount stamp: 'EMI 11/7/2020 18:12:15'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioCannotAddBothChildrenPortfoliosWithSameAccount stamp: 'EMI 11/7/2020 18:12:15'!
PASSED!

!testRun: #PortfolioTest #test17PortfolioCannotAddBothGrandChildrenPortfoliosWithSameAccount stamp: 'EMI 11/7/2020 18:12:15'!
PASSED!

!testRun: #PortfolioTest #test18PortfolioWith2ChildrenPortfoliosCannotAddAThirdWithSameAccount stamp: 'EMI 11/7/2020 18:12:15'!
PASSED!

!testRun: #PortfolioTest #test19PortfolioWith2ChildrenPortfoliosCannotAddAThirdWithAParentWithSameAccount stamp: 'EMI 11/7/2020 18:12:15'!
PASSED!

!testRun: #PortfolioTest #test20PortfolioWith2GrandChildrenPortfoliosCannotAddAThirdWithAGrandParentWithSameAccount stamp: 'EMI 11/7/2020 18:12:15'!
PASSED!

!testRun: #PortfolioTest #test21TwoPortfoliosCanUseSameAccount stamp: 'EMI 11/7/2020 18:12:15'!
PASSED!

!testRun: #PortfolioTest #test22CannotUniteTwoPortfoliosWithSameAccount stamp: 'EMI 11/7/2020 18:12:15'!
PASSED!
!PortfolioTest methodsFor: 'tests' stamp: 'EMI 11/7/2020 18:13:25' prior: 50892138!
test06PortfolioMoreThanOneAccountWithRegisteredTransactions
	| portfolio account1 account2 transaction1 transaction2|
	portfolio _ Portfolio new.
	account1 _ ReceptiveAccount new.
	account2 _ ReceptiveAccount new.
	transaction1 _ Deposit register: 100 on: account1.
	transaction2 _ Deposit register: 50 on: account2.
	
	self assert: (portfolio add: account1).
	self assert: (portfolio add: account2).
	self assert: (portfolio hasRegistered: transaction1).
	self assert: (portfolio hasRegistered: transaction2).
	self assert: portfolio balance equals: 150.! !
!PortfolioTest methodsFor: 'tests' stamp: 'EMI 11/7/2020 18:14:49' prior: 50892195!
test10PortfolioHasOneChildPortfolioWithAnAccountAndADeposit
	| portfolio portfolioChild account|
	portfolio _ Portfolio new.
	portfolioChild _ Portfolio new.
	account _  ReceptiveAccount new.
	Deposit register: 100 on: account. 
	
	self assert: (portfolioChild add: account).
	self assert: (portfolio add: portfolioChild).
	self assert: portfolioChild balance equals: 100.
	self assert: portfolio balance equals: 100.

	 
! !
!PortfolioTest methodsFor: 'tests' stamp: 'EMI 11/7/2020 18:15:14' prior: 50892238!
test11PortfolioHasMoreThanOneChildPortfolioWithAnAccountAndADeposit
	| portfolio portfolioChild  portfolio_child2 account account2|
	portfolio _ Portfolio new.
	portfolioChild _ Portfolio new.
	portfolio_child2 _ Portfolio new.
	account _  ReceptiveAccount new.
	account2 _  ReceptiveAccount new.
	Deposit register: 100 on: account.
	Deposit register: 100 on: account2.
	
	self assert: (portfolioChild add: account).
	self assert: (portfolio_child2 add: account2).
	self assert: (portfolio add: portfolioChild).
	self assert: (portfolio add: portfolio_child2).
	self assert: portfolioChild balance equals: 100.
	self assert: portfolio_child2 balance equals: 100.
	self assert: portfolio balance equals: 200.
	 
! !
!PortfolioTest methodsFor: 'tests' stamp: 'EMI 11/7/2020 18:15:22' prior: 50897614!
test11PortfolioHasMoreThanOneChildPortfolioWithAnAccountAndADeposit
	| portfolio portfolioChild  portfolioChild2 account account2|
	portfolio _ Portfolio new.
	portfolioChild _ Portfolio new.
	portfolioChild2 _ Portfolio new.
	account _  ReceptiveAccount new.
	account2 _  ReceptiveAccount new.
	Deposit register: 100 on: account.
	Deposit register: 100 on: account2.
	
	self assert: (portfolioChild add: account).
	self assert: (portfolioChild2 add: account2).
	self assert: (portfolio add: portfolioChild).
	self assert: (portfolio add: portfolioChild2).
	self assert: portfolioChild balance equals: 100.
	self assert: portfolioChild2 balance equals: 100.
	self assert: portfolio balance equals: 200.
	 
! !
!PortfolioTest methodsFor: 'tests' stamp: 'EMI 11/7/2020 18:15:54' prior: 50897639!
test11PortfolioHasMoreThanOneChildPortfolioWithAnAccountAndADeposit
	| portfolio portfolioChildLeft  portfolioChild2 account account2|
	portfolio _ Portfolio new.
	portfolioChildLeft _ Portfolio new.
	portfolioChild2 _ Portfolio new.
	account _  ReceptiveAccount new.
	account2 _  ReceptiveAccount new.
	Deposit register: 100 on: account.
	Deposit register: 100 on: account2.
	
	self assert: (portfolioChildLeft add: account).
	self assert: (portfolioChild2 add: account2).
	self assert: (portfolio add: portfolioChildLeft).
	self assert: (portfolio add: portfolioChild2).
	self assert: portfolioChildLeft balance equals: 100.
	self assert: portfolioChild2 balance equals: 100.
	self assert: portfolio balance equals: 200.
	 
! !
!PortfolioTest methodsFor: 'tests' stamp: 'EMI 11/7/2020 18:16:03' prior: 50897664!
test11PortfolioHasMoreThanOneChildPortfolioWithAnAccountAndADeposit
	| portfolio portfolioChildLeft  portfolioChildRight account account2|
	portfolio _ Portfolio new.
	portfolioChildLeft _ Portfolio new.
	portfolioChildRight _ Portfolio new.
	account _  ReceptiveAccount new.
	account2 _  ReceptiveAccount new.
	Deposit register: 100 on: account.
	Deposit register: 100 on: account2.
	
	self assert: (portfolioChildLeft add: account).
	self assert: (portfolioChildRight add: account2).
	self assert: (portfolio add: portfolioChildLeft).
	self assert: (portfolio add: portfolioChildRight).
	self assert: portfolioChildLeft balance equals: 100.
	self assert: portfolioChildRight balance equals: 100.
	self assert: portfolio balance equals: 200.
	 
! !
!PortfolioTest methodsFor: 'tests' stamp: 'EMI 11/7/2020 18:16:44' prior: 50892264!
test12PortfolioHasOneChildPortfolioWithAnAccountAndADepositRegistered
	| portfolio portfolioChild account transaction |
	portfolio _ Portfolio new.
	portfolioChild _ Portfolio new.
	account _  ReceptiveAccount new.
	transaction _ Deposit register: 100 on: account. 
	
	self assert: (portfolioChild add: account).
	self assert: (portfolio add: portfolioChild).
	self assert: (portfolio hasRegistered: transaction).
	self assert: (portfolio transactions size) equals: 1.
	self assert: (portfolio transactions includes: transaction).

	 
! !
!PortfolioTest methodsFor: 'tests' stamp: 'EMI 11/7/2020 18:17:28' prior: 50892284!
test13PortfolioHasMoreThanOneChildPortfolioWithAnAccountAndADepositRegistered
	| portfolio portfolioChild  portfolio_child2 account account2 transaction1 transaction2|
	portfolio _ Portfolio new.
	portfolioChild _ Portfolio new.
	portfolio_child2 _ Portfolio new.
	account _  ReceptiveAccount new.
	account2 _  ReceptiveAccount new.
	transaction1 _ Deposit register: 100 on: account.
	transaction2 _ Deposit register: 100 on: account2.
	
	self assert: (portfolioChild add: account).
	self assert: (portfolio_child2 add: account2).
	self assert: (portfolio add: portfolioChild).
	self assert: (portfolio add: portfolio_child2).
	self assert: (portfolio hasRegistered: transaction1).
	self assert: (portfolio hasRegistered: transaction2).
	self assert: (portfolio transactions size) equals: 2.
	self assert: (portfolio transactions includes: transaction1).
	self assert: (portfolio transactions includes: transaction2).
	 
! !
!PortfolioTest methodsFor: 'tests' stamp: 'EMI 11/7/2020 18:17:34' prior: 50897737!
test13PortfolioHasMoreThanOneChildPortfolioWithAnAccountAndADepositRegistered
	| portfolio portfolioChildLeft  portfolio_child2 account account2 transaction1 transaction2|
	portfolio _ Portfolio new.
	portfolioChildLeft _ Portfolio new.
	portfolio_child2 _ Portfolio new.
	account _  ReceptiveAccount new.
	account2 _  ReceptiveAccount new.
	transaction1 _ Deposit register: 100 on: account.
	transaction2 _ Deposit register: 100 on: account2.
	
	self assert: (portfolioChildLeft add: account).
	self assert: (portfolio_child2 add: account2).
	self assert: (portfolio add: portfolioChildLeft).
	self assert: (portfolio add: portfolio_child2).
	self assert: (portfolio hasRegistered: transaction1).
	self assert: (portfolio hasRegistered: transaction2).
	self assert: (portfolio transactions size) equals: 2.
	self assert: (portfolio transactions includes: transaction1).
	self assert: (portfolio transactions includes: transaction2).
	 
! !
!PortfolioTest methodsFor: 'tests' stamp: 'EMI 11/7/2020 18:17:51' prior: 50897769!
test13PortfolioHasMoreThanOneChildPortfolioWithAnAccountAndADepositRegistered
	| portfolio portfolioChildLeft  portfolioChildRight account account2 transaction1 transaction2|
	portfolio _ Portfolio new.
	portfolioChildLeft _ Portfolio new.
	portfolioChildRight _ Portfolio new.
	account _  ReceptiveAccount new.
	account2 _  ReceptiveAccount new.
	transaction1 _ Deposit register: 100 on: account.
	transaction2 _ Deposit register: 100 on: account2.
	
	self assert: (portfolioChildLeft add: account).
	self assert: (portfolioChildRight add: account2).
	self assert: (portfolio add: portfolioChildLeft).
	self assert: (portfolio add: portfolioChildRight).
	self assert: (portfolio hasRegistered: transaction1).
	self assert: (portfolio hasRegistered: transaction2).
	self assert: (portfolio transactions size) equals: 2.
	self assert: (portfolio transactions includes: transaction1).
	self assert: (portfolio transactions includes: transaction2).
	 
! !
!PortfolioTest methodsFor: 'tests' stamp: 'EMI 11/7/2020 18:18:03' prior: 50897802!
test13PortfolioHasMoreThanOneChildPortfolioWithAnAccountAndADepositRegistered
	| portfolio portfolioChildLeft  portfolioChildRight account1 account2 transaction1 transaction2|
	portfolio _ Portfolio new.
	portfolioChildLeft _ Portfolio new.
	portfolioChildRight _ Portfolio new.
	account1 _  ReceptiveAccount new.
	account2 _  ReceptiveAccount new.
	transaction1 _ Deposit register: 100 on: account1.
	transaction2 _ Deposit register: 100 on: account2.
	
	self assert: (portfolioChildLeft add: account1).
	self assert: (portfolioChildRight add: account2).
	self assert: (portfolio add: portfolioChildLeft).
	self assert: (portfolio add: portfolioChildRight).
	self assert: (portfolio hasRegistered: transaction1).
	self assert: (portfolio hasRegistered: transaction2).
	self assert: (portfolio transactions size) equals: 2.
	self assert: (portfolio transactions includes: transaction1).
	self assert: (portfolio transactions includes: transaction2).
	 
! !

!testRun: #PortfolioTest #test01NewPortfolioHasNoAccountsAndNoPortfolios stamp: 'EMI 11/7/2020 18:18:13'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioAddEmptyAccount stamp: 'EMI 11/7/2020 18:18:13'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioAddEmptyPortfolio stamp: 'EMI 11/7/2020 18:18:13'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioHasNoRegisteredTransactions stamp: 'EMI 11/7/2020 18:18:13'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasOneAccountWithOneRegisteredTransaction stamp: 'EMI 11/7/2020 18:18:13'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioMoreThanOneAccountWithRegisteredTransactions stamp: 'EMI 11/7/2020 18:18:13'!
PASSED!

!testRun: #PortfolioTest #test07EmptyPortfolioHasNoTransactions stamp: 'EMI 11/7/2020 18:18:13'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioWithOneAccountHasOneTransaction stamp: 'EMI 11/7/2020 18:18:13'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithMoreThanOneAccountHasMoreThanOneTransactions stamp: 'EMI 11/7/2020 18:18:13'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioHasOneChildPortfolioWithAnAccountAndADeposit stamp: 'EMI 11/7/2020 18:18:13'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioHasMoreThanOneChildPortfolioWithAnAccountAndADeposit stamp: 'EMI 11/7/2020 18:18:13'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioHasOneChildPortfolioWithAnAccountAndADepositRegistered stamp: 'EMI 11/7/2020 18:18:13'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioHasMoreThanOneChildPortfolioWithAnAccountAndADepositRegistered stamp: 'EMI 11/7/2020 18:18:13'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioCannotAddSameEmptyAssetTwice stamp: 'EMI 11/7/2020 18:18:13'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCannotAddChildPortfolioWithSameAccount stamp: 'EMI 11/7/2020 18:18:13'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioCannotAddBothChildrenPortfoliosWithSameAccount stamp: 'EMI 11/7/2020 18:18:13'!
PASSED!

!testRun: #PortfolioTest #test17PortfolioCannotAddBothGrandChildrenPortfoliosWithSameAccount stamp: 'EMI 11/7/2020 18:18:13'!
PASSED!

!testRun: #PortfolioTest #test18PortfolioWith2ChildrenPortfoliosCannotAddAThirdWithSameAccount stamp: 'EMI 11/7/2020 18:18:13'!
PASSED!

!testRun: #PortfolioTest #test19PortfolioWith2ChildrenPortfoliosCannotAddAThirdWithAParentWithSameAccount stamp: 'EMI 11/7/2020 18:18:13'!
PASSED!

!testRun: #PortfolioTest #test20PortfolioWith2GrandChildrenPortfoliosCannotAddAThirdWithAGrandParentWithSameAccount stamp: 'EMI 11/7/2020 18:18:13'!
PASSED!

!testRun: #PortfolioTest #test21TwoPortfoliosCanUseSameAccount stamp: 'EMI 11/7/2020 18:18:13'!
PASSED!

!testRun: #PortfolioTest #test22CannotUniteTwoPortfoliosWithSameAccount stamp: 'EMI 11/7/2020 18:18:13'!
PASSED!
!PortfolioTest methodsFor: 'tests' stamp: 'EMI 11/7/2020 18:21:27' prior: 50893275!
test16PortfolioCannotAddBothChildrenPortfoliosWithSameAccount
	| portfolio portfolioLeft portfolio3 account|
	portfolio _ Portfolio new.
	account _  ReceptiveAccount new.
	
	portfolioLeft _ Portfolio new.
	self assert: (portfolioLeft add: account).
	
	portfolio3 _ Portfolio new.
	self assert: (portfolio3 add: account).
	
	self assert: (portfolio add: portfolioLeft).
	self deny: (portfolio add: portfolio3).


	 
! !
!PortfolioTest methodsFor: 'tests' stamp: 'EMI 11/7/2020 18:21:35' prior: 50897954!
test16PortfolioCannotAddBothChildrenPortfoliosWithSameAccount
	| portfolio portfolioLeft portfolioRight account|
	portfolio _ Portfolio new.
	account _  ReceptiveAccount new.
	
	portfolioLeft _ Portfolio new.
	self assert: (portfolioLeft add: account).
	
	portfolioRight _ Portfolio new.
	self assert: (portfolioRight add: account).
	
	self assert: (portfolio add: portfolioLeft).
	self deny: (portfolio add: portfolioRight).


	 
! !
!PortfolioTest methodsFor: 'tests' stamp: 'EMI 11/7/2020 18:21:50' prior: 50897970!
test16PortfolioCannotAddBothChildrenPortfoliosWithSameAccount
	| portfolio portfolioChildLeft portfolioRight account|
	portfolio _ Portfolio new.
	account _  ReceptiveAccount new.
	
	portfolioChildLeft _ Portfolio new.
	self assert: (portfolioChildLeft add: account).
	
	portfolioRight _ Portfolio new.
	self assert: (portfolioRight add: account).
	
	self assert: (portfolio add: portfolioChildLeft).
	self deny: (portfolio add: portfolioRight).


	 
! !
!PortfolioTest methodsFor: 'tests' stamp: 'EMI 11/7/2020 18:22:00' prior: 50897987!
test16PortfolioCannotAddBothChildrenPortfoliosWithSameAccount
	| portfolio portfolioChildLeft portfolioChildRight account|
	portfolio _ Portfolio new.
	account _  ReceptiveAccount new.
	
	portfolioChildLeft _ Portfolio new.
	self assert: (portfolioChildLeft add: account).
	
	portfolioChildRight _ Portfolio new.
	self assert: (portfolioChildRight add: account).
	
	self assert: (portfolio add: portfolioChildLeft).
	self deny: (portfolio add: portfolioChildRight).


	 
! !
!PortfolioTest methodsFor: 'tests' stamp: 'EMI 11/7/2020 18:23:26' prior: 50893971!
test17PortfolioCannotAddBothGrandChildrenPortfoliosWithSameAccount
	| portfolio portfolioChildLeft portfolio3 portfolio4 portfolio5 account|
	portfolio _ Portfolio new.
	account _  ReceptiveAccount new.
	
	portfolioChildLeft _ Portfolio new.
	portfolio3 _ Portfolio new.
	
	portfolio4 _ Portfolio new.
	self assert: (portfolio4 add: account).
	
	portfolio5 _ Portfolio new.
	self assert: (portfolio5 add: account).
	
	self assert: (portfolio add: portfolioChildLeft).
	self assert: (portfolio add: portfolio3).
	self assert: (portfolioChildLeft add: portfolio4).
	self deny: (portfolio3 add: portfolio5).


	 
! !
!PortfolioTest methodsFor: 'tests' stamp: 'EMI 11/7/2020 18:23:51' prior: 50898022!
test17PortfolioCannotAddBothGrandChildrenPortfoliosWithSameAccount
	| portfolio portfolioChildLeft portfolioChildRight portfolio4 portfolio5 account|
	portfolio _ Portfolio new.
	account _  ReceptiveAccount new.
	
	portfolioChildLeft _ Portfolio new.
	portfolioChildRight _ Portfolio new.
	
	portfolio4 _ Portfolio new.
	self assert: (portfolio4 add: account).
	
	portfolio5 _ Portfolio new.
	self assert: (portfolio5 add: account).
	
	self assert: (portfolio add: portfolioChildLeft).
	self assert: (portfolio add: portfolioChildRight).
	self assert: (portfolioChildLeft add: portfolio4).
	self deny: (portfolioChildRight add: portfolio5).


	 
! !
!PortfolioTest methodsFor: 'tests' stamp: 'EMI 11/7/2020 18:24:03' prior: 50898044!
test17PortfolioCannotAddBothGrandChildrenPortfoliosWithSameAccount
	| portfolio portfolioChildLeft portfolioChildRight portfolioGrandChildLeft portfolio5 account|
	portfolio _ Portfolio new.
	account _  ReceptiveAccount new.
	
	portfolioChildLeft _ Portfolio new.
	portfolioChildRight _ Portfolio new.
	
	portfolioGrandChildLeft _ Portfolio new.
	self assert: (portfolioGrandChildLeft add: account).
	
	portfolio5 _ Portfolio new.
	self assert: (portfolio5 add: account).
	
	self assert: (portfolio add: portfolioChildLeft).
	self assert: (portfolio add: portfolioChildRight).
	self assert: (portfolioChildLeft add: portfolioGrandChildLeft).
	self deny: (portfolioChildRight add: portfolio5).


	 
! !
!PortfolioTest methodsFor: 'tests' stamp: 'EMI 11/7/2020 18:24:21' prior: 50898067!
test17PortfolioCannotAddBothGrandChildrenPortfoliosWithSameAccount
	| portfolio portfolioChildLeft portfolioChildRight portfolioGrandChildLeft portfolioGrandChildRight account|
	portfolio _ Portfolio new.
	account _  ReceptiveAccount new.
	
	portfolioChildLeft _ Portfolio new.
	portfolioChildRight _ Portfolio new.
	
	portfolioGrandChildLeft _ Portfolio new.
	self assert: (portfolioGrandChildLeft add: account).
	
	portfolioGrandChildRight _ Portfolio new.
	self assert: (portfolioGrandChildRight add: account).
	
	self assert: (portfolio add: portfolioChildLeft).
	self assert: (portfolio add: portfolioChildRight).
	self assert: (portfolioChildLeft add: portfolioGrandChildLeft).
	self deny: (portfolioChildRight add: portfolioGrandChildRight).


	 
! !

!testRun: #PortfolioTest #test01NewPortfolioHasNoAccountsAndNoPortfolios stamp: 'EMI 11/7/2020 18:24:29'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioAddEmptyAccount stamp: 'EMI 11/7/2020 18:24:29'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioAddEmptyPortfolio stamp: 'EMI 11/7/2020 18:24:29'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioHasNoRegisteredTransactions stamp: 'EMI 11/7/2020 18:24:29'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasOneAccountWithOneRegisteredTransaction stamp: 'EMI 11/7/2020 18:24:29'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioMoreThanOneAccountWithRegisteredTransactions stamp: 'EMI 11/7/2020 18:24:29'!
PASSED!

!testRun: #PortfolioTest #test07EmptyPortfolioHasNoTransactions stamp: 'EMI 11/7/2020 18:24:29'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioWithOneAccountHasOneTransaction stamp: 'EMI 11/7/2020 18:24:29'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithMoreThanOneAccountHasMoreThanOneTransactions stamp: 'EMI 11/7/2020 18:24:29'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioHasOneChildPortfolioWithAnAccountAndADeposit stamp: 'EMI 11/7/2020 18:24:29'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioHasMoreThanOneChildPortfolioWithAnAccountAndADeposit stamp: 'EMI 11/7/2020 18:24:29'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioHasOneChildPortfolioWithAnAccountAndADepositRegistered stamp: 'EMI 11/7/2020 18:24:29'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioHasMoreThanOneChildPortfolioWithAnAccountAndADepositRegistered stamp: 'EMI 11/7/2020 18:24:29'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioCannotAddSameEmptyAssetTwice stamp: 'EMI 11/7/2020 18:24:29'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCannotAddChildPortfolioWithSameAccount stamp: 'EMI 11/7/2020 18:24:29'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioCannotAddBothChildrenPortfoliosWithSameAccount stamp: 'EMI 11/7/2020 18:24:29'!
PASSED!

!testRun: #PortfolioTest #test17PortfolioCannotAddBothGrandChildrenPortfoliosWithSameAccount stamp: 'EMI 11/7/2020 18:24:29'!
PASSED!

!testRun: #PortfolioTest #test18PortfolioWith2ChildrenPortfoliosCannotAddAThirdWithSameAccount stamp: 'EMI 11/7/2020 18:24:29'!
PASSED!

!testRun: #PortfolioTest #test19PortfolioWith2ChildrenPortfoliosCannotAddAThirdWithAParentWithSameAccount stamp: 'EMI 11/7/2020 18:24:29'!
PASSED!

!testRun: #PortfolioTest #test20PortfolioWith2GrandChildrenPortfoliosCannotAddAThirdWithAGrandParentWithSameAccount stamp: 'EMI 11/7/2020 18:24:29'!
PASSED!

!testRun: #PortfolioTest #test21TwoPortfoliosCanUseSameAccount stamp: 'EMI 11/7/2020 18:24:29'!
PASSED!

!testRun: #PortfolioTest #test22CannotUniteTwoPortfoliosWithSameAccount stamp: 'EMI 11/7/2020 18:24:29'!
PASSED!

----SNAPSHOT----(7 November 2020 18:24:56) CuisUniversity-4383.image priorSource: 18102934!

----SNAPSHOT----(7 November 2020 18:27:41) CuisUniversity-4383.image priorSource: 18129706!
!Portfolio methodsFor: 'adding' stamp: 'EMI 11/7/2020 18:33:39' prior: 50896997!
add: anAsset
	| rootParents rootParentsOther |
	rootParents _ (self assetTreeRoot).
	rootParentsOther _ (anAsset assetTreeRoot).
	
	rootParents do: [:aParent |
		rootParentsOther do: [:aParentOther |
			(aParent hasAsset: aParentOther) ifTrue:[^false.].
			(aParentOther hasAsset: aParent) ifTrue:[^false.].
		].
	].
	
	assets add: anAsset.
	anAsset addAsSubassetOf: self.
	^true.! !

!testRun: #PortfolioTest #test01NewPortfolioHasNoAccountsAndNoPortfolios stamp: 'EMI 11/7/2020 18:33:43'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioAddEmptyAccount stamp: 'EMI 11/7/2020 18:33:43'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioAddEmptyPortfolio stamp: 'EMI 11/7/2020 18:33:43'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioHasNoRegisteredTransactions stamp: 'EMI 11/7/2020 18:33:43'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasOneAccountWithOneRegisteredTransaction stamp: 'EMI 11/7/2020 18:33:43'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioMoreThanOneAccountWithRegisteredTransactions stamp: 'EMI 11/7/2020 18:33:43'!
PASSED!

!testRun: #PortfolioTest #test07EmptyPortfolioHasNoTransactions stamp: 'EMI 11/7/2020 18:33:43'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioWithOneAccountHasOneTransaction stamp: 'EMI 11/7/2020 18:33:43'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithMoreThanOneAccountHasMoreThanOneTransactions stamp: 'EMI 11/7/2020 18:33:43'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioHasOneChildPortfolioWithAnAccountAndADeposit stamp: 'EMI 11/7/2020 18:33:43'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioHasMoreThanOneChildPortfolioWithAnAccountAndADeposit stamp: 'EMI 11/7/2020 18:33:43'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioHasOneChildPortfolioWithAnAccountAndADepositRegistered stamp: 'EMI 11/7/2020 18:33:43'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioHasMoreThanOneChildPortfolioWithAnAccountAndADepositRegistered stamp: 'EMI 11/7/2020 18:33:43'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioCannotAddSameEmptyAssetTwice stamp: 'EMI 11/7/2020 18:33:43'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCannotAddChildPortfolioWithSameAccount stamp: 'EMI 11/7/2020 18:33:43'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioCannotAddBothChildrenPortfoliosWithSameAccount stamp: 'EMI 11/7/2020 18:33:43'!
PASSED!

!testRun: #PortfolioTest #test17PortfolioCannotAddBothGrandChildrenPortfoliosWithSameAccount stamp: 'EMI 11/7/2020 18:33:43'!
PASSED!

!testRun: #PortfolioTest #test18PortfolioWith2ChildrenPortfoliosCannotAddAThirdWithSameAccount stamp: 'EMI 11/7/2020 18:33:43'!
PASSED!

!testRun: #PortfolioTest #test19PortfolioWith2ChildrenPortfoliosCannotAddAThirdWithAParentWithSameAccount stamp: 'EMI 11/7/2020 18:33:43'!
PASSED!

!testRun: #PortfolioTest #test20PortfolioWith2GrandChildrenPortfoliosCannotAddAThirdWithAGrandParentWithSameAccount stamp: 'EMI 11/7/2020 18:33:43'!
PASSED!

!testRun: #PortfolioTest #test21TwoPortfoliosCanUseSameAccount stamp: 'EMI 11/7/2020 18:33:43'!
PASSED!

!testRun: #PortfolioTest #test22CannotUniteTwoPortfoliosWithSameAccount stamp: 'EMI 11/7/2020 18:33:43'!
PASSED!
!Asset methodsFor: 'tree operations' stamp: 'EMI 11/7/2020 18:38:38'!
assetTreeRoots
	| rootParents|
	rootParents _ OrderedCollection new.
	
	parents isEmpty ifTrue: [rootParents add: self].
	parents do: [:aParent | 
		rootParents addAll: aParent assetTreeRoot.
	].

	^rootParents.! !
!Asset methodsFor: 'as yet unclassified' stamp: 'EMI 11/7/2020 18:38:38' prior: 50896987!
assetTreeRoot
	| rootParents|
	rootParents _ OrderedCollection new.
	
	parents isEmpty ifTrue: [rootParents add: self].
	parents do: [:aParent | 
		rootParents addAll: aParent assetTreeRoots.
	].

	^rootParents.! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'EMI 11/7/2020 18:38:38' prior: 50898210!
add: anAsset
	| rootParents rootParentsOther |
	rootParents _ (self assetTreeRoots).
	rootParentsOther _ (anAsset assetTreeRoots).
	
	rootParents do: [:aParent |
		rootParentsOther do: [:aParentOther |
			(aParent hasAsset: aParentOther) ifTrue:[^false.].
			(aParentOther hasAsset: aParent) ifTrue:[^false.].
		].
	].
	
	assets add: anAsset.
	anAsset addAsSubassetOf: self.
	^true.! !
!Asset methodsFor: 'as yet unclassified' stamp: 'EMI 11/7/2020 18:38:38' prior: 50898310!
assetTreeRoots
	| rootParents|
	rootParents _ OrderedCollection new.
	
	parents isEmpty ifTrue: [rootParents add: self].
	parents do: [:aParent | 
		rootParents addAll: aParent assetTreeRoots.
	].

	^rootParents.! !

!methodRemoval: Asset #assetTreeRoot stamp: 'EMI 11/7/2020 18:38:38'!
assetTreeRoot
	| rootParents|
	rootParents _ OrderedCollection new.
	
	parents isEmpty ifTrue: [rootParents add: self].
	parents do: [:aParent | 
		rootParents addAll: aParent assetTreeRoots.
	].

	^rootParents.!
!Asset methodsFor: 'tree operations' stamp: 'EMI 11/7/2020 18:38:57'!
parentAssets
	^parents! !

!methodRemoval: Asset #parentAsset stamp: 'EMI 11/7/2020 18:38:57'!
parentAsset
	^parents!
!PortfolioTest methodsFor: 'tests' stamp: 'EMI 11/7/2020 18:39:19' prior: 50897201!
test21TwoPortfoliosCanUseSameAccount
	| portfolio portfolio2 account|
	
	portfolio _ Portfolio new.
	portfolio2 _ Portfolio new.
	account _ ReceptiveAccount new.
	
	self assert: (portfolio add: account).
	self assert: (portfolio2 add: account).
	self assert: account parentAssets includes: portfolio.
	self assert: account parentAssets includes: portfolio2.
	


	 
! !

----SNAPSHOT----(7 November 2020 18:39:21) CuisUniversity-4383.image priorSource: 18129799!

!testRun: #PortfolioTest #test01NewPortfolioHasNoAccountsAndNoPortfolios stamp: 'EMI 11/7/2020 18:39:36'!
ERROR!

!testRun: #PortfolioTest #test02PortfolioAddEmptyAccount stamp: 'EMI 11/7/2020 18:39:36'!
ERROR!

!testRun: #PortfolioTest #test03PortfolioAddEmptyPortfolio stamp: 'EMI 11/7/2020 18:39:36'!
ERROR!

!testRun: #PortfolioTest #test04PortfolioHasNoRegisteredTransactions stamp: 'EMI 11/7/2020 18:39:36'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasOneAccountWithOneRegisteredTransaction stamp: 'EMI 11/7/2020 18:39:36'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioMoreThanOneAccountWithRegisteredTransactions stamp: 'EMI 11/7/2020 18:39:36'!
PASSED!

!testRun: #PortfolioTest #test07EmptyPortfolioHasNoTransactions stamp: 'EMI 11/7/2020 18:39:36'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioWithOneAccountHasOneTransaction stamp: 'EMI 11/7/2020 18:39:36'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithMoreThanOneAccountHasMoreThanOneTransactions stamp: 'EMI 11/7/2020 18:39:36'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioHasOneChildPortfolioWithAnAccountAndADeposit stamp: 'EMI 11/7/2020 18:39:36'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioHasMoreThanOneChildPortfolioWithAnAccountAndADeposit stamp: 'EMI 11/7/2020 18:39:36'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioHasOneChildPortfolioWithAnAccountAndADepositRegistered stamp: 'EMI 11/7/2020 18:39:36'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioHasMoreThanOneChildPortfolioWithAnAccountAndADepositRegistered stamp: 'EMI 11/7/2020 18:39:36'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioCannotAddSameEmptyAssetTwice stamp: 'EMI 11/7/2020 18:39:36'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCannotAddChildPortfolioWithSameAccount stamp: 'EMI 11/7/2020 18:39:36'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioCannotAddBothChildrenPortfoliosWithSameAccount stamp: 'EMI 11/7/2020 18:39:36'!
PASSED!

!testRun: #PortfolioTest #test17PortfolioCannotAddBothGrandChildrenPortfoliosWithSameAccount stamp: 'EMI 11/7/2020 18:39:36'!
PASSED!

!testRun: #PortfolioTest #test18PortfolioWith2ChildrenPortfoliosCannotAddAThirdWithSameAccount stamp: 'EMI 11/7/2020 18:39:36'!
PASSED!

!testRun: #PortfolioTest #test19PortfolioWith2ChildrenPortfoliosCannotAddAThirdWithAParentWithSameAccount stamp: 'EMI 11/7/2020 18:39:36'!
PASSED!

!testRun: #PortfolioTest #test20PortfolioWith2GrandChildrenPortfoliosCannotAddAThirdWithAGrandParentWithSameAccount stamp: 'EMI 11/7/2020 18:39:36'!
PASSED!

!testRun: #PortfolioTest #test21TwoPortfoliosCanUseSameAccount stamp: 'EMI 11/7/2020 18:39:36'!
PASSED!

!testRun: #PortfolioTest #test22CannotUniteTwoPortfoliosWithSameAccount stamp: 'EMI 11/7/2020 18:39:36'!
PASSED!
!PortfolioTest methodsFor: 'tests' stamp: 'EMI 11/7/2020 18:39:42' prior: 50897359!
test01NewPortfolioHasNoAccountsAndNoPortfolios
	| portfolio |
	portfolio _ Portfolio new.
	
	self assert: portfolio balance equals: 0.
	self assert: portfolio parentAssets isEmpty.! !
!PortfolioTest methodsFor: 'tests' stamp: 'EMI 11/7/2020 18:39:52' prior: 50897456!
test02PortfolioAddEmptyAccount
	| portfolio account|
	portfolio _ Portfolio new.
	account _ ReceptiveAccount new.
	
	self assert: (portfolio add: account).
	self assert: portfolio balance equals: 0.
	self assert: portfolio parentAssets isEmpty.
	self assert: account parentAssets size equals: 1.
	self assert: account parentAssets includes: portfolio.! !
!PortfolioTest methodsFor: 'tests' stamp: 'EMI 11/7/2020 18:40:04' prior: 50897473!
test03PortfolioAddEmptyPortfolio
	| portfolio portfolioChild |
	portfolio _ Portfolio new.
	portfolioChild _ Portfolio new.
	
	self assert: (portfolio add: portfolioChild ).
	self assert: portfolio balance equals: 0.
	self assert: portfolio parentAssets isEmpty.
	self assert: portfolioChild parentAssets size equals: 1.
	self assert: portfolioChild parentAssets includes: portfolio.! !

----SNAPSHOT----(7 November 2020 18:40:09) CuisUniversity-4383.image priorSource: 18135472!

!testRun: #PortfolioTest #test01NewPortfolioHasNoAccountsAndNoPortfolios stamp: 'EMI 11/7/2020 18:40:10'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioAddEmptyAccount stamp: 'EMI 11/7/2020 18:40:10'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioAddEmptyPortfolio stamp: 'EMI 11/7/2020 18:40:11'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioHasNoRegisteredTransactions stamp: 'EMI 11/7/2020 18:40:11'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasOneAccountWithOneRegisteredTransaction stamp: 'EMI 11/7/2020 18:40:11'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioMoreThanOneAccountWithRegisteredTransactions stamp: 'EMI 11/7/2020 18:40:11'!
PASSED!

!testRun: #PortfolioTest #test07EmptyPortfolioHasNoTransactions stamp: 'EMI 11/7/2020 18:40:11'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioWithOneAccountHasOneTransaction stamp: 'EMI 11/7/2020 18:40:11'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithMoreThanOneAccountHasMoreThanOneTransactions stamp: 'EMI 11/7/2020 18:40:11'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioHasOneChildPortfolioWithAnAccountAndADeposit stamp: 'EMI 11/7/2020 18:40:11'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioHasMoreThanOneChildPortfolioWithAnAccountAndADeposit stamp: 'EMI 11/7/2020 18:40:11'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioHasOneChildPortfolioWithAnAccountAndADepositRegistered stamp: 'EMI 11/7/2020 18:40:11'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioHasMoreThanOneChildPortfolioWithAnAccountAndADepositRegistered stamp: 'EMI 11/7/2020 18:40:11'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioCannotAddSameEmptyAssetTwice stamp: 'EMI 11/7/2020 18:40:11'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCannotAddChildPortfolioWithSameAccount stamp: 'EMI 11/7/2020 18:40:11'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioCannotAddBothChildrenPortfoliosWithSameAccount stamp: 'EMI 11/7/2020 18:40:11'!
PASSED!

!testRun: #PortfolioTest #test17PortfolioCannotAddBothGrandChildrenPortfoliosWithSameAccount stamp: 'EMI 11/7/2020 18:40:11'!
PASSED!

!testRun: #PortfolioTest #test18PortfolioWith2ChildrenPortfoliosCannotAddAThirdWithSameAccount stamp: 'EMI 11/7/2020 18:40:11'!
PASSED!

!testRun: #PortfolioTest #test19PortfolioWith2ChildrenPortfoliosCannotAddAThirdWithAParentWithSameAccount stamp: 'EMI 11/7/2020 18:40:11'!
PASSED!

!testRun: #PortfolioTest #test20PortfolioWith2GrandChildrenPortfoliosCannotAddAThirdWithAGrandParentWithSameAccount stamp: 'EMI 11/7/2020 18:40:11'!
PASSED!

!testRun: #PortfolioTest #test21TwoPortfoliosCanUseSameAccount stamp: 'EMI 11/7/2020 18:40:11'!
PASSED!

!testRun: #PortfolioTest #test22CannotUniteTwoPortfoliosWithSameAccount stamp: 'EMI 11/7/2020 18:40:11'!
PASSED!

----SNAPSHOT----(7 November 2020 18:41:03) CuisUniversity-4383.image priorSource: 18139522!
!Portfolio methodsFor: 'testing' stamp: 'EMI 11/7/2020 18:47:30'!
hasAssetIntersectionWith: anAsset
	| estaEnMisHijosDirectos |
	estaEnMisHijosDirectos _ assets includes: anAsset.
	^estaEnMisHijosDirectos or: [(assets select: [:aChildAsset | (aChildAsset hasAsset: anAsset) or: [anAsset hasAsset: aChildAsset]]) isEmpty not.].
	! !
!Portfolio methodsFor: 'testing' stamp: 'EMI 11/7/2020 18:48:13' prior: 50898602!
hasAssetIntersectionWith: anAsset
	^(self hasAsset: anAsset) or: [anAsset hasAsset: self].
	! !
!Portfolio methodsFor: 'testing' stamp: 'EMI 11/7/2020 18:48:32' prior: 50893797 overrides: 50892888!
hasAsset: anAsset
	| estaEnMisHijosDirectos |
	estaEnMisHijosDirectos _ assets includes: anAsset.
	^estaEnMisHijosDirectos or: [(assets select: [:aChildAsset | aChildAsset hasAssetIntersectionWith: anAsset]) isEmpty not.].
	! !

----SNAPSHOT----(7 November 2020 18:50:20) CuisUniversity-4383.image priorSource: 18142356!

----SNAPSHOT----(7 November 2020 18:51:11) CuisUniversity-4383.image priorSource: 18143331!

----QUIT----(7 November 2020 18:51:15) CuisUniversity-4383.image priorSource: 18143424!

----STARTUP---- (7 November 2020 18:55:00) as /home/doraserver/CuisUniversity/CuisUniversity-4383.image!


!testRun: #PortfolioTest #test01NewPortfolioHasNoAccountsAndNoPortfolios stamp: 'EMI 11/7/2020 18:56:28'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioAddEmptyAccount stamp: 'EMI 11/7/2020 18:56:28'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioAddEmptyPortfolio stamp: 'EMI 11/7/2020 18:56:28'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioHasNoRegisteredTransactions stamp: 'EMI 11/7/2020 18:56:28'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasOneAccountWithOneRegisteredTransaction stamp: 'EMI 11/7/2020 18:56:28'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioMoreThanOneAccountWithRegisteredTransactions stamp: 'EMI 11/7/2020 18:56:28'!
ERROR!

!testRun: #PortfolioTest #test07EmptyPortfolioHasNoTransactions stamp: 'EMI 11/7/2020 18:56:28'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioWithOneAccountHasOneTransaction stamp: 'EMI 11/7/2020 18:56:28'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithMoreThanOneAccountHasMoreThanOneTransactions stamp: 'EMI 11/7/2020 18:56:28'!
ERROR!

!testRun: #PortfolioTest #test10PortfolioHasOneChildPortfolioWithAnAccountAndADeposit stamp: 'EMI 11/7/2020 18:56:28'!
ERROR!

!testRun: #PortfolioTest #test11PortfolioHasMoreThanOneChildPortfolioWithAnAccountAndADeposit stamp: 'EMI 11/7/2020 18:56:28'!
ERROR!

!testRun: #PortfolioTest #test12PortfolioHasOneChildPortfolioWithAnAccountAndADepositRegistered stamp: 'EMI 11/7/2020 18:56:28'!
ERROR!

!testRun: #PortfolioTest #test13PortfolioHasMoreThanOneChildPortfolioWithAnAccountAndADepositRegistered stamp: 'EMI 11/7/2020 18:56:28'!
ERROR!

!testRun: #PortfolioTest #test14PortfolioCannotAddSameEmptyAssetTwice stamp: 'EMI 11/7/2020 18:56:29'!
ERROR!

!testRun: #PortfolioTest #test15PortfolioCannotAddChildPortfolioWithSameAccount stamp: 'EMI 11/7/2020 18:56:29'!
ERROR!

!testRun: #PortfolioTest #test16PortfolioCannotAddBothChildrenPortfoliosWithSameAccount stamp: 'EMI 11/7/2020 18:56:29'!
ERROR!

!testRun: #PortfolioTest #test17PortfolioCannotAddBothGrandChildrenPortfoliosWithSameAccount stamp: 'EMI 11/7/2020 18:56:29'!
ERROR!

!testRun: #PortfolioTest #test18PortfolioWith2ChildrenPortfoliosCannotAddAThirdWithSameAccount stamp: 'EMI 11/7/2020 18:56:29'!
ERROR!

!testRun: #PortfolioTest #test19PortfolioWith2ChildrenPortfoliosCannotAddAThirdWithAParentWithSameAccount stamp: 'EMI 11/7/2020 18:56:29'!
ERROR!

!testRun: #PortfolioTest #test20PortfolioWith2GrandChildrenPortfoliosCannotAddAThirdWithAGrandParentWithSameAccount stamp: 'EMI 11/7/2020 18:56:29'!
ERROR!

!testRun: #PortfolioTest #test21TwoPortfoliosCanUseSameAccount stamp: 'EMI 11/7/2020 18:56:29'!
ERROR!

!testRun: #PortfolioTest #test22CannotUniteTwoPortfoliosWithSameAccount stamp: 'EMI 11/7/2020 18:56:29'!
ERROR!

!testRun: #PortfolioTest #test06PortfolioMoreThanOneAccountWithRegisteredTransactions stamp: 'EMI 11/7/2020 18:56:33'!
ERROR!

!testRun: #PortfolioTest #test06PortfolioMoreThanOneAccountWithRegisteredTransactions stamp: 'EMI 11/7/2020 18:57:36'!
ERROR!
!Asset methodsFor: 'nil' stamp: 'EMI 11/7/2020 18:58:04'!
hasAssetIntersectionWith: anAsset
	^(self hasAsset: anAsset) or: [anAsset hasAsset: self].! !

!methodRemoval: Portfolio #hasAssetIntersectionWith: stamp: 'EMI 11/7/2020 18:58:13'!
hasAssetIntersectionWith: anAsset
	^(self hasAsset: anAsset) or: [anAsset hasAsset: self].
	!

----SNAPSHOT----(7 November 2020 18:58:16) CuisUniversity-4383.image priorSource: 18143517!

!testRun: #PortfolioTest #test01NewPortfolioHasNoAccountsAndNoPortfolios stamp: 'EMI 11/7/2020 18:58:19'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioAddEmptyAccount stamp: 'EMI 11/7/2020 18:58:19'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioAddEmptyPortfolio stamp: 'EMI 11/7/2020 18:58:19'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioHasNoRegisteredTransactions stamp: 'EMI 11/7/2020 18:58:19'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasOneAccountWithOneRegisteredTransaction stamp: 'EMI 11/7/2020 18:58:19'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioMoreThanOneAccountWithRegisteredTransactions stamp: 'EMI 11/7/2020 18:58:19'!
PASSED!

!testRun: #PortfolioTest #test07EmptyPortfolioHasNoTransactions stamp: 'EMI 11/7/2020 18:58:19'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioWithOneAccountHasOneTransaction stamp: 'EMI 11/7/2020 18:58:19'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithMoreThanOneAccountHasMoreThanOneTransactions stamp: 'EMI 11/7/2020 18:58:19'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioHasOneChildPortfolioWithAnAccountAndADeposit stamp: 'EMI 11/7/2020 18:58:19'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioHasMoreThanOneChildPortfolioWithAnAccountAndADeposit stamp: 'EMI 11/7/2020 18:58:19'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioHasOneChildPortfolioWithAnAccountAndADepositRegistered stamp: 'EMI 11/7/2020 18:58:19'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioHasMoreThanOneChildPortfolioWithAnAccountAndADepositRegistered stamp: 'EMI 11/7/2020 18:58:19'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioCannotAddSameEmptyAssetTwice stamp: 'EMI 11/7/2020 18:58:19'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCannotAddChildPortfolioWithSameAccount stamp: 'EMI 11/7/2020 18:58:19'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioCannotAddBothChildrenPortfoliosWithSameAccount stamp: 'EMI 11/7/2020 18:58:19'!
PASSED!

!testRun: #PortfolioTest #test17PortfolioCannotAddBothGrandChildrenPortfoliosWithSameAccount stamp: 'EMI 11/7/2020 18:58:19'!
PASSED!

!testRun: #PortfolioTest #test18PortfolioWith2ChildrenPortfoliosCannotAddAThirdWithSameAccount stamp: 'EMI 11/7/2020 18:58:19'!
PASSED!

!testRun: #PortfolioTest #test19PortfolioWith2ChildrenPortfoliosCannotAddAThirdWithAParentWithSameAccount stamp: 'EMI 11/7/2020 18:58:19'!
PASSED!

!testRun: #PortfolioTest #test20PortfolioWith2GrandChildrenPortfoliosCannotAddAThirdWithAGrandParentWithSameAccount stamp: 'EMI 11/7/2020 18:58:19'!
PASSED!

!testRun: #PortfolioTest #test21TwoPortfoliosCanUseSameAccount stamp: 'EMI 11/7/2020 18:58:19'!
PASSED!

!testRun: #PortfolioTest #test22CannotUniteTwoPortfoliosWithSameAccount stamp: 'EMI 11/7/2020 18:58:19'!
PASSED!

----SNAPSHOT----(7 November 2020 18:58:22) CuisUniversity-4383.image priorSource: 18147026!

!testRun: #PortfolioTest #test01NewPortfolioHasNoAccountsAndNoPortfolios stamp: 'EMI 11/7/2020 18:58:32'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioAddEmptyAccount stamp: 'EMI 11/7/2020 18:58:32'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioAddEmptyPortfolio stamp: 'EMI 11/7/2020 18:58:32'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioHasNoRegisteredTransactions stamp: 'EMI 11/7/2020 18:58:32'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasOneAccountWithOneRegisteredTransaction stamp: 'EMI 11/7/2020 18:58:32'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioMoreThanOneAccountWithRegisteredTransactions stamp: 'EMI 11/7/2020 18:58:32'!
PASSED!

!testRun: #PortfolioTest #test07EmptyPortfolioHasNoTransactions stamp: 'EMI 11/7/2020 18:58:32'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioWithOneAccountHasOneTransaction stamp: 'EMI 11/7/2020 18:58:32'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithMoreThanOneAccountHasMoreThanOneTransactions stamp: 'EMI 11/7/2020 18:58:32'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioHasOneChildPortfolioWithAnAccountAndADeposit stamp: 'EMI 11/7/2020 18:58:32'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioHasMoreThanOneChildPortfolioWithAnAccountAndADeposit stamp: 'EMI 11/7/2020 18:58:32'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioHasOneChildPortfolioWithAnAccountAndADepositRegistered stamp: 'EMI 11/7/2020 18:58:32'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioHasMoreThanOneChildPortfolioWithAnAccountAndADepositRegistered stamp: 'EMI 11/7/2020 18:58:33'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioCannotAddSameEmptyAssetTwice stamp: 'EMI 11/7/2020 18:58:33'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCannotAddChildPortfolioWithSameAccount stamp: 'EMI 11/7/2020 18:58:33'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioCannotAddBothChildrenPortfoliosWithSameAccount stamp: 'EMI 11/7/2020 18:58:33'!
PASSED!

!testRun: #PortfolioTest #test17PortfolioCannotAddBothGrandChildrenPortfoliosWithSameAccount stamp: 'EMI 11/7/2020 18:58:33'!
PASSED!

!testRun: #PortfolioTest #test18PortfolioWith2ChildrenPortfoliosCannotAddAThirdWithSameAccount stamp: 'EMI 11/7/2020 18:58:33'!
PASSED!

!testRun: #PortfolioTest #test19PortfolioWith2ChildrenPortfoliosCannotAddAThirdWithAParentWithSameAccount stamp: 'EMI 11/7/2020 18:58:33'!
PASSED!

!testRun: #PortfolioTest #test20PortfolioWith2GrandChildrenPortfoliosCannotAddAThirdWithAGrandParentWithSameAccount stamp: 'EMI 11/7/2020 18:58:33'!
PASSED!

!testRun: #PortfolioTest #test21TwoPortfoliosCanUseSameAccount stamp: 'EMI 11/7/2020 18:58:33'!
PASSED!

!testRun: #PortfolioTest #test22CannotUniteTwoPortfoliosWithSameAccount stamp: 'EMI 11/7/2020 18:58:33'!
PASSED!

----QUIT----(7 November 2020 18:58:40) CuisUniversity-4383.image priorSource: 18149860!

----STARTUP---- (8 November 2020 16:58:09) as /home/doraserver/CuisUniversity/CuisUniversity-4383.image!

!PortfolioTest methodsFor: 'tests' stamp: 'EMI 11/8/2020 17:16:50'!
test17bisPortfolioCannotAddGrandChildPortfolioWithSameAccountAsChild
	| portfolio portfolioChildLeft portfolioChildRight portfolioGrandChildLeft portfolioGrandChildRight account|
	portfolio _ Portfolio new.
	account _  ReceptiveAccount new.
	
	portfolioChildLeft _ Portfolio new.
	portfolioChildRight _ Portfolio new.
	
	portfolioGrandChildLeft _ Portfolio new.
	self assert: (portfolioGrandChildLeft add: account).
	
	portfolioGrandChildRight _ Portfolio new.
	self assert: (portfolioGrandChildRight add: account).
	
	self assert: (portfolio add: portfolioChildLeft).
	self assert: (portfolio add: portfolioChildRight).
	self assert: (portfolioChildLeft add: portfolioGrandChildLeft).
	self deny: (portfolioChildRight add: portfolioGrandChildRight).


	 
! !
!PortfolioTest methodsFor: 'tests' stamp: 'EMI 11/8/2020 17:17:36' prior: 50898928!
test17bisPortfolioCannotAddGrandChildPortfolioWithSameAccountAsChild
	| portfolio portfolioChildLeft portfolioChildRight portfolioGrandChildRight account|
	portfolio _ Portfolio new.
	account _  ReceptiveAccount new.
	
	portfolioChildLeft _ Portfolio new.
	portfolioChildRight _ Portfolio new.
	
	self assert: (portfolioChildLeft add: account).
	
	portfolioGrandChildRight _ Portfolio new.
	self assert: (portfolioGrandChildRight add: account).
	
	self assert: (portfolio add: portfolioChildLeft).
	self assert: (portfolio add: portfolioChildRight).
	self deny: (portfolioChildRight add: portfolioGrandChildRight).


	 
! !

----SNAPSHOT----(8 November 2020 17:17:41) CuisUniversity-4383.image priorSource: 18152694!

!testRun: #PortfolioTest #test01NewPortfolioHasNoAccountsAndNoPortfolios stamp: 'EMI 11/8/2020 17:17:44'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioAddEmptyAccount stamp: 'EMI 11/8/2020 17:17:44'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioAddEmptyPortfolio stamp: 'EMI 11/8/2020 17:17:44'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioHasNoRegisteredTransactions stamp: 'EMI 11/8/2020 17:17:44'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasOneAccountWithOneRegisteredTransaction stamp: 'EMI 11/8/2020 17:17:44'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioMoreThanOneAccountWithRegisteredTransactions stamp: 'EMI 11/8/2020 17:17:44'!
PASSED!

!testRun: #PortfolioTest #test07EmptyPortfolioHasNoTransactions stamp: 'EMI 11/8/2020 17:17:44'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioWithOneAccountHasOneTransaction stamp: 'EMI 11/8/2020 17:17:44'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithMoreThanOneAccountHasMoreThanOneTransactions stamp: 'EMI 11/8/2020 17:17:44'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioHasOneChildPortfolioWithAnAccountAndADeposit stamp: 'EMI 11/8/2020 17:17:44'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioHasMoreThanOneChildPortfolioWithAnAccountAndADeposit stamp: 'EMI 11/8/2020 17:17:44'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioHasOneChildPortfolioWithAnAccountAndADepositRegistered stamp: 'EMI 11/8/2020 17:17:44'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioHasMoreThanOneChildPortfolioWithAnAccountAndADepositRegistered stamp: 'EMI 11/8/2020 17:17:44'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioCannotAddSameEmptyAssetTwice stamp: 'EMI 11/8/2020 17:17:44'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCannotAddChildPortfolioWithSameAccount stamp: 'EMI 11/8/2020 17:17:44'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioCannotAddBothChildrenPortfoliosWithSameAccount stamp: 'EMI 11/8/2020 17:17:44'!
PASSED!

!testRun: #PortfolioTest #test17PortfolioCannotAddBothGrandChildrenPortfoliosWithSameAccount stamp: 'EMI 11/8/2020 17:17:44'!
PASSED!

!testRun: #PortfolioTest #test17bisPortfolioCannotAddGrandChildPortfolioWithSameAccountAsChild stamp: 'EMI 11/8/2020 17:17:44'!
PASSED!

!testRun: #PortfolioTest #test18PortfolioWith2ChildrenPortfoliosCannotAddAThirdWithSameAccount stamp: 'EMI 11/8/2020 17:17:44'!
PASSED!

!testRun: #PortfolioTest #test19PortfolioWith2ChildrenPortfoliosCannotAddAThirdWithAParentWithSameAccount stamp: 'EMI 11/8/2020 17:17:44'!
PASSED!

!testRun: #PortfolioTest #test20PortfolioWith2GrandChildrenPortfoliosCannotAddAThirdWithAGrandParentWithSameAccount stamp: 'EMI 11/8/2020 17:17:44'!
PASSED!

!testRun: #PortfolioTest #test21TwoPortfoliosCanUseSameAccount stamp: 'EMI 11/8/2020 17:17:44'!
PASSED!

!testRun: #PortfolioTest #test22CannotUniteTwoPortfoliosWithSameAccount stamp: 'EMI 11/8/2020 17:17:44'!
PASSED!
!PortfolioTest methodsFor: 'tests' stamp: 'EMI 11/8/2020 17:19:22'!
test16bisPortfolioWith2ChildrenPortfoliosCannotAddAThirdWithSameAccount
	| portfolioRoot portfolioChildWithAccount portfolioChildWithoutAccount portfolioToAddWithSameAccount account|
	portfolioRoot _ Portfolio new.
	account _  ReceptiveAccount new.
	
	portfolioChildWithoutAccount _ Portfolio new.
	
	portfolioChildWithAccount _ Portfolio new.
	self assert: (portfolioChildWithAccount add: account).
	
	portfolioToAddWithSameAccount _ Portfolio new.
	self assert: (portfolioToAddWithSameAccount add: account).
	
	self assert: (portfolioRoot add: portfolioChildWithoutAccount).
	self assert: (portfolioRoot add: portfolioChildWithAccount).
	self deny: (portfolioRoot add: portfolioToAddWithSameAccount).


	 
! !

!methodRemoval: PortfolioTest #test18PortfolioWith2ChildrenPortfoliosCannotAddAThirdWithSameAccount stamp: 'EMI 11/8/2020 17:19:22'!
test18PortfolioWith2ChildrenPortfoliosCannotAddAThirdWithSameAccount
	| portfolioRoot portfolioChildWithAccount portfolioChildWithoutAccount portfolioToAddWithSameAccount account|
	portfolioRoot _ Portfolio new.
	account _  ReceptiveAccount new.
	
	portfolioChildWithoutAccount _ Portfolio new.
	
	portfolioChildWithAccount _ Portfolio new.
	self assert: (portfolioChildWithAccount add: account).
	
	portfolioToAddWithSameAccount _ Portfolio new.
	self assert: (portfolioToAddWithSameAccount add: account).
	
	self assert: (portfolioRoot add: portfolioChildWithoutAccount).
	self assert: (portfolioRoot add: portfolioChildWithAccount).
	self deny: (portfolioRoot add: portfolioToAddWithSameAccount).


	 
!
!PortfolioTest methodsFor: 'tests' stamp: 'EMI 11/8/2020 17:22:19'!
test21TwoDisjointPortfoliosCanUseSameAccount
	| portfolio portfolio2 account|
	
	portfolio _ Portfolio new.
	portfolio2 _ Portfolio new.
	account _ ReceptiveAccount new.
	
	self assert: (portfolio add: account).
	self assert: (portfolio2 add: account).
	self assert: account parentAssets includes: portfolio.
	self assert: account parentAssets includes: portfolio2.
	


	 
! !

!methodRemoval: PortfolioTest #test21TwoPortfoliosCanUseSameAccount stamp: 'EMI 11/8/2020 17:22:19'!
test21TwoPortfoliosCanUseSameAccount
	| portfolio portfolio2 account|
	
	portfolio _ Portfolio new.
	portfolio2 _ Portfolio new.
	account _ ReceptiveAccount new.
	
	self assert: (portfolio add: account).
	self assert: (portfolio2 add: account).
	self assert: account parentAssets includes: portfolio.
	self assert: account parentAssets includes: portfolio2.
	


	 
!
!PortfolioTest methodsFor: 'tests' stamp: 'EMI 11/8/2020 17:22:34'!
test22CannotUniteTwoDisjointPortfoliosWithSameAccount
	| portfolio portfolio2 portfolioRoot account|
	
	portfolio _ Portfolio new.
	portfolio2 _ Portfolio new.
	portfolioRoot _ Portfolio new.
	account _ ReceptiveAccount new.
	
	self assert: (portfolio add: account).
	self assert: (portfolio2 add: account).
	self assert: (portfolioRoot add: portfolio).
	self deny: (portfolioRoot add: portfolio2).
	


	 
! !

!methodRemoval: PortfolioTest #test22CannotUniteTwoPortfoliosWithSameAccount stamp: 'EMI 11/8/2020 17:22:34'!
test22CannotUniteTwoPortfoliosWithSameAccount
	| portfolio portfolio2 portfolioRoot account|
	
	portfolio _ Portfolio new.
	portfolio2 _ Portfolio new.
	portfolioRoot _ Portfolio new.
	account _ ReceptiveAccount new.
	
	self assert: (portfolio add: account).
	self assert: (portfolio2 add: account).
	self assert: (portfolioRoot add: portfolio).
	self deny: (portfolioRoot add: portfolio2).
	


	 
!
!PortfolioTest methodsFor: 'tests' stamp: 'EMI 11/8/2020 17:31:05'!
test23TwoDisjointPortfoliosCanHaveSameChildPortfolio
	| portfolio portfolio2 portfolioChild|
	
	portfolio _ Portfolio new.
	portfolio2 _ Portfolio new.
	portfolioChild _ Portfolio new.
	
	self assert: (portfolio add: portfolioChild).
	self assert: (portfolio2 add: portfolioChild).
	self assert: portfolioChild parentAssets includes: portfolio.
	self assert: portfolioChild parentAssets includes: portfolio2.
	


	 
! !

----SNAPSHOT----(8 November 2020 17:31:09) CuisUniversity-4383.image priorSource: 18154447!

!testRun: #PortfolioTest #test01NewPortfolioHasNoAccountsAndNoPortfolios stamp: 'EMI 11/8/2020 17:31:11'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioAddEmptyAccount stamp: 'EMI 11/8/2020 17:31:11'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioAddEmptyPortfolio stamp: 'EMI 11/8/2020 17:31:11'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioHasNoRegisteredTransactions stamp: 'EMI 11/8/2020 17:31:11'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasOneAccountWithOneRegisteredTransaction stamp: 'EMI 11/8/2020 17:31:11'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioMoreThanOneAccountWithRegisteredTransactions stamp: 'EMI 11/8/2020 17:31:11'!
PASSED!

!testRun: #PortfolioTest #test07EmptyPortfolioHasNoTransactions stamp: 'EMI 11/8/2020 17:31:11'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioWithOneAccountHasOneTransaction stamp: 'EMI 11/8/2020 17:31:11'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithMoreThanOneAccountHasMoreThanOneTransactions stamp: 'EMI 11/8/2020 17:31:11'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioHasOneChildPortfolioWithAnAccountAndADeposit stamp: 'EMI 11/8/2020 17:31:11'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioHasMoreThanOneChildPortfolioWithAnAccountAndADeposit stamp: 'EMI 11/8/2020 17:31:11'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioHasOneChildPortfolioWithAnAccountAndADepositRegistered stamp: 'EMI 11/8/2020 17:31:11'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioHasMoreThanOneChildPortfolioWithAnAccountAndADepositRegistered stamp: 'EMI 11/8/2020 17:31:11'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioCannotAddSameEmptyAssetTwice stamp: 'EMI 11/8/2020 17:31:11'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCannotAddChildPortfolioWithSameAccount stamp: 'EMI 11/8/2020 17:31:11'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioCannotAddBothChildrenPortfoliosWithSameAccount stamp: 'EMI 11/8/2020 17:31:11'!
PASSED!

!testRun: #PortfolioTest #test16bisPortfolioWith2ChildrenPortfoliosCannotAddAThirdWithSameAccount stamp: 'EMI 11/8/2020 17:31:11'!
PASSED!

!testRun: #PortfolioTest #test17PortfolioCannotAddBothGrandChildrenPortfoliosWithSameAccount stamp: 'EMI 11/8/2020 17:31:11'!
PASSED!

!testRun: #PortfolioTest #test17bisPortfolioCannotAddGrandChildPortfolioWithSameAccountAsChild stamp: 'EMI 11/8/2020 17:31:11'!
PASSED!

!testRun: #PortfolioTest #test19PortfolioWith2ChildrenPortfoliosCannotAddAThirdWithAParentWithSameAccount stamp: 'EMI 11/8/2020 17:31:11'!
PASSED!

!testRun: #PortfolioTest #test20PortfolioWith2GrandChildrenPortfoliosCannotAddAThirdWithAGrandParentWithSameAccount stamp: 'EMI 11/8/2020 17:31:11'!
PASSED!

!testRun: #PortfolioTest #test21TwoDisjointPortfoliosCanUseSameAccount stamp: 'EMI 11/8/2020 17:31:11'!
PASSED!

!testRun: #PortfolioTest #test22CannotUniteTwoDisjointPortfoliosWithSameAccount stamp: 'EMI 11/8/2020 17:31:11'!
PASSED!

!testRun: #PortfolioTest #test23TwoDisjointPortfoliosCanHaveSameChildPortfolio stamp: 'EMI 11/8/2020 17:31:11'!
PASSED!
!PortfolioTest methodsFor: 'tests' stamp: 'EMI 11/8/2020 17:32:41'!
test24CannotUniteTwoDisjointPortfoliosWithSameChildPortfolio
	| portfolio portfolio2 portfolioRoot portfolioChild |
	
	portfolio _ Portfolio new.
	portfolio2 _ Portfolio new.
	portfolioRoot _ Portfolio new.
	portfolioChild _ Portfolio new.
	
	self assert: (portfolio add: portfolioChild).
	self assert: (portfolio2 add: portfolioChild).
	self assert: (portfolioRoot add: portfolio).
	self deny: (portfolioRoot add: portfolio2).
	


	 
! !
!PortfolioTest methodsFor: 'tests' stamp: 'EMI 11/8/2020 17:33:51'!
test16bis2TwoDisjointPortfoliosCanUseSameAccount
	| portfolio portfolio2 account|
	
	portfolio _ Portfolio new.
	portfolio2 _ Portfolio new.
	account _ ReceptiveAccount new.
	
	self assert: (portfolio add: account).
	self assert: (portfolio2 add: account).
	self assert: account parentAssets includes: portfolio.
	self assert: account parentAssets includes: portfolio2.
	


	 
! !

!methodRemoval: PortfolioTest #test21TwoDisjointPortfoliosCanUseSameAccount stamp: 'EMI 11/8/2020 17:33:51'!
test21TwoDisjointPortfoliosCanUseSameAccount
	| portfolio portfolio2 account|
	
	portfolio _ Portfolio new.
	portfolio2 _ Portfolio new.
	account _ ReceptiveAccount new.
	
	self assert: (portfolio add: account).
	self assert: (portfolio2 add: account).
	self assert: account parentAssets includes: portfolio.
	self assert: account parentAssets includes: portfolio2.
	


	 
!
!PortfolioTest methodsFor: 'tests' stamp: 'EMI 11/8/2020 17:34:05'!
test16bis3CannotUniteTwoDisjointPortfoliosWithSameAccount
	| portfolio portfolio2 portfolioRoot account|
	
	portfolio _ Portfolio new.
	portfolio2 _ Portfolio new.
	portfolioRoot _ Portfolio new.
	account _ ReceptiveAccount new.
	
	self assert: (portfolio add: account).
	self assert: (portfolio2 add: account).
	self assert: (portfolioRoot add: portfolio).
	self deny: (portfolioRoot add: portfolio2).
	


	 
! !

!methodRemoval: PortfolioTest #test22CannotUniteTwoDisjointPortfoliosWithSameAccount stamp: 'EMI 11/8/2020 17:34:05'!
test22CannotUniteTwoDisjointPortfoliosWithSameAccount
	| portfolio portfolio2 portfolioRoot account|
	
	portfolio _ Portfolio new.
	portfolio2 _ Portfolio new.
	portfolioRoot _ Portfolio new.
	account _ ReceptiveAccount new.
	
	self assert: (portfolio add: account).
	self assert: (portfolio2 add: account).
	self assert: (portfolioRoot add: portfolio).
	self deny: (portfolioRoot add: portfolio2).
	


	 
!
!PortfolioTest methodsFor: 'tests' stamp: 'EMI 11/8/2020 17:34:20'!
test16bis4TwoDisjointPortfoliosCanHaveSameChildPortfolio
	| portfolio portfolio2 portfolioChild|
	
	portfolio _ Portfolio new.
	portfolio2 _ Portfolio new.
	portfolioChild _ Portfolio new.
	
	self assert: (portfolio add: portfolioChild).
	self assert: (portfolio2 add: portfolioChild).
	self assert: portfolioChild parentAssets includes: portfolio.
	self assert: portfolioChild parentAssets includes: portfolio2.
	


	 
! !

!methodRemoval: PortfolioTest #test23TwoDisjointPortfoliosCanHaveSameChildPortfolio stamp: 'EMI 11/8/2020 17:34:20'!
test23TwoDisjointPortfoliosCanHaveSameChildPortfolio
	| portfolio portfolio2 portfolioChild|
	
	portfolio _ Portfolio new.
	portfolio2 _ Portfolio new.
	portfolioChild _ Portfolio new.
	
	self assert: (portfolio add: portfolioChild).
	self assert: (portfolio2 add: portfolioChild).
	self assert: portfolioChild parentAssets includes: portfolio.
	self assert: portfolioChild parentAssets includes: portfolio2.
	


	 
!
!PortfolioTest methodsFor: 'tests' stamp: 'EMI 11/8/2020 17:34:33'!
test16bis5CannotUniteTwoDisjointPortfoliosWithSameChildPortfolio
	| portfolio portfolio2 portfolioRoot portfolioChild |
	
	portfolio _ Portfolio new.
	portfolio2 _ Portfolio new.
	portfolioRoot _ Portfolio new.
	portfolioChild _ Portfolio new.
	
	self assert: (portfolio add: portfolioChild).
	self assert: (portfolio2 add: portfolioChild).
	self assert: (portfolioRoot add: portfolio).
	self deny: (portfolioRoot add: portfolio2).
	


	 
! !

!methodRemoval: PortfolioTest #test24CannotUniteTwoDisjointPortfoliosWithSameChildPortfolio stamp: 'EMI 11/8/2020 17:34:33'!
test24CannotUniteTwoDisjointPortfoliosWithSameChildPortfolio
	| portfolio portfolio2 portfolioRoot portfolioChild |
	
	portfolio _ Portfolio new.
	portfolio2 _ Portfolio new.
	portfolioRoot _ Portfolio new.
	portfolioChild _ Portfolio new.
	
	self assert: (portfolio add: portfolioChild).
	self assert: (portfolio2 add: portfolioChild).
	self assert: (portfolioRoot add: portfolio).
	self deny: (portfolioRoot add: portfolio2).
	


	 
!
!PortfolioTest methodsFor: 'tests' stamp: 'EMI 11/8/2020 17:34:47'!
test16bis1PortfolioWith2ChildrenPortfoliosCannotAddAThirdWithSameAccount
	| portfolioRoot portfolioChildWithAccount portfolioChildWithoutAccount portfolioToAddWithSameAccount account|
	portfolioRoot _ Portfolio new.
	account _  ReceptiveAccount new.
	
	portfolioChildWithoutAccount _ Portfolio new.
	
	portfolioChildWithAccount _ Portfolio new.
	self assert: (portfolioChildWithAccount add: account).
	
	portfolioToAddWithSameAccount _ Portfolio new.
	self assert: (portfolioToAddWithSameAccount add: account).
	
	self assert: (portfolioRoot add: portfolioChildWithoutAccount).
	self assert: (portfolioRoot add: portfolioChildWithAccount).
	self deny: (portfolioRoot add: portfolioToAddWithSameAccount).


	 
! !

!methodRemoval: PortfolioTest #test16bisPortfolioWith2ChildrenPortfoliosCannotAddAThirdWithSameAccount stamp: 'EMI 11/8/2020 17:34:47'!
test16bisPortfolioWith2ChildrenPortfoliosCannotAddAThirdWithSameAccount
	| portfolioRoot portfolioChildWithAccount portfolioChildWithoutAccount portfolioToAddWithSameAccount account|
	portfolioRoot _ Portfolio new.
	account _  ReceptiveAccount new.
	
	portfolioChildWithoutAccount _ Portfolio new.
	
	portfolioChildWithAccount _ Portfolio new.
	self assert: (portfolioChildWithAccount add: account).
	
	portfolioToAddWithSameAccount _ Portfolio new.
	self assert: (portfolioToAddWithSameAccount add: account).
	
	self assert: (portfolioRoot add: portfolioChildWithoutAccount).
	self assert: (portfolioRoot add: portfolioChildWithAccount).
	self deny: (portfolioRoot add: portfolioToAddWithSameAccount).


	 
!
!PortfolioTest methodsFor: 'tests tree structure' stamp: 'EMI 11/8/2020 17:38:51'!
test23PortfolioCannotAddBothGrandChildrenPortfoliosWithSameAccount
	| portfolio portfolioChildLeft portfolioChildRight portfolioGrandChildLeft portfolioGrandChildRight account|
	portfolio _ Portfolio new.
	account _  ReceptiveAccount new.
	
	portfolioChildLeft _ Portfolio new.
	portfolioChildRight _ Portfolio new.
	
	portfolioGrandChildLeft _ Portfolio new.
	self assert: (portfolioGrandChildLeft add: account).
	
	portfolioGrandChildRight _ Portfolio new.
	self assert: (portfolioGrandChildRight add: account).
	
	self assert: (portfolio add: portfolioChildLeft).
	self assert: (portfolio add: portfolioChildRight).
	self assert: (portfolioChildLeft add: portfolioGrandChildLeft).
	self deny: (portfolioChildRight add: portfolioGrandChildRight).


	 
! !

!methodRemoval: PortfolioTest #test17PortfolioCannotAddBothGrandChildrenPortfoliosWithSameAccount stamp: 'EMI 11/8/2020 17:38:51'!
test17PortfolioCannotAddBothGrandChildrenPortfoliosWithSameAccount
	| portfolio portfolioChildLeft portfolioChildRight portfolioGrandChildLeft portfolioGrandChildRight account|
	portfolio _ Portfolio new.
	account _  ReceptiveAccount new.
	
	portfolioChildLeft _ Portfolio new.
	portfolioChildRight _ Portfolio new.
	
	portfolioGrandChildLeft _ Portfolio new.
	self assert: (portfolioGrandChildLeft add: account).
	
	portfolioGrandChildRight _ Portfolio new.
	self assert: (portfolioGrandChildRight add: account).
	
	self assert: (portfolio add: portfolioChildLeft).
	self assert: (portfolio add: portfolioChildRight).
	self assert: (portfolioChildLeft add: portfolioGrandChildLeft).
	self deny: (portfolioChildRight add: portfolioGrandChildRight).


	 
!
!PortfolioTest methodsFor: 'tests tree structure' stamp: 'EMI 11/8/2020 17:39:00'!
test24bisPortfolioCannotAddGrandChildPortfolioWithSameAccountAsChild
	| portfolio portfolioChildLeft portfolioChildRight portfolioGrandChildRight account|
	portfolio _ Portfolio new.
	account _  ReceptiveAccount new.
	
	portfolioChildLeft _ Portfolio new.
	portfolioChildRight _ Portfolio new.
	
	self assert: (portfolioChildLeft add: account).
	
	portfolioGrandChildRight _ Portfolio new.
	self assert: (portfolioGrandChildRight add: account).
	
	self assert: (portfolio add: portfolioChildLeft).
	self assert: (portfolio add: portfolioChildRight).
	self deny: (portfolioChildRight add: portfolioGrandChildRight).


	 
! !

!methodRemoval: PortfolioTest #test17bisPortfolioCannotAddGrandChildPortfolioWithSameAccountAsChild stamp: 'EMI 11/8/2020 17:39:00'!
test17bisPortfolioCannotAddGrandChildPortfolioWithSameAccountAsChild
	| portfolio portfolioChildLeft portfolioChildRight portfolioGrandChildRight account|
	portfolio _ Portfolio new.
	account _  ReceptiveAccount new.
	
	portfolioChildLeft _ Portfolio new.
	portfolioChildRight _ Portfolio new.
	
	self assert: (portfolioChildLeft add: account).
	
	portfolioGrandChildRight _ Portfolio new.
	self assert: (portfolioGrandChildRight add: account).
	
	self assert: (portfolio add: portfolioChildLeft).
	self assert: (portfolio add: portfolioChildRight).
	self deny: (portfolioChildRight add: portfolioGrandChildRight).


	 
!
!PortfolioTest methodsFor: 'tests tree structure' stamp: 'EMI 11/8/2020 17:39:10'!
test24PortfolioCannotAddGrandChildPortfolioWithSameAccountAsChild
	| portfolio portfolioChildLeft portfolioChildRight portfolioGrandChildRight account|
	portfolio _ Portfolio new.
	account _  ReceptiveAccount new.
	
	portfolioChildLeft _ Portfolio new.
	portfolioChildRight _ Portfolio new.
	
	self assert: (portfolioChildLeft add: account).
	
	portfolioGrandChildRight _ Portfolio new.
	self assert: (portfolioGrandChildRight add: account).
	
	self assert: (portfolio add: portfolioChildLeft).
	self assert: (portfolio add: portfolioChildRight).
	self deny: (portfolioChildRight add: portfolioGrandChildRight).


	 
! !

!methodRemoval: PortfolioTest #test24bisPortfolioCannotAddGrandChildPortfolioWithSameAccountAsChild stamp: 'EMI 11/8/2020 17:39:10'!
test24bisPortfolioCannotAddGrandChildPortfolioWithSameAccountAsChild
	| portfolio portfolioChildLeft portfolioChildRight portfolioGrandChildRight account|
	portfolio _ Portfolio new.
	account _  ReceptiveAccount new.
	
	portfolioChildLeft _ Portfolio new.
	portfolioChildRight _ Portfolio new.
	
	self assert: (portfolioChildLeft add: account).
	
	portfolioGrandChildRight _ Portfolio new.
	self assert: (portfolioGrandChildRight add: account).
	
	self assert: (portfolio add: portfolioChildLeft).
	self assert: (portfolio add: portfolioChildRight).
	self deny: (portfolioChildRight add: portfolioGrandChildRight).


	 
!
!PortfolioTest methodsFor: 'tests tree structure' stamp: 'EMI 11/8/2020 17:39:19'!
test25PortfolioWith2ChildrenPortfoliosCannotAddAThirdWithAParentWithSameAccount
	| portfolioRoot portfolioChildWithAccount portfolioChildWithoutAccount 
	portfolioToAdd portfolioWithSameAccount account|
	
	portfolioRoot _ Portfolio new.
	account _  ReceptiveAccount new.
	
	portfolioChildWithoutAccount _ Portfolio new.
	
	portfolioChildWithAccount _ Portfolio new.
	self assert: (portfolioChildWithAccount add: account).
	
	portfolioToAdd _ Portfolio new.
	portfolioWithSameAccount _ Portfolio new.
	self assert: (portfolioWithSameAccount add: account).
	self assert: (portfolioWithSameAccount add: portfolioToAdd).
	
	self assert: (portfolioRoot add: portfolioChildWithoutAccount).
	self assert: (portfolioRoot add: portfolioChildWithAccount).
	self deny: (portfolioRoot add: portfolioToAdd).


	 
! !

!methodRemoval: PortfolioTest #test19PortfolioWith2ChildrenPortfoliosCannotAddAThirdWithAParentWithSameAccount stamp: 'EMI 11/8/2020 17:39:19'!
test19PortfolioWith2ChildrenPortfoliosCannotAddAThirdWithAParentWithSameAccount
	| portfolioRoot portfolioChildWithAccount portfolioChildWithoutAccount 
	portfolioToAdd portfolioWithSameAccount account|
	
	portfolioRoot _ Portfolio new.
	account _  ReceptiveAccount new.
	
	portfolioChildWithoutAccount _ Portfolio new.
	
	portfolioChildWithAccount _ Portfolio new.
	self assert: (portfolioChildWithAccount add: account).
	
	portfolioToAdd _ Portfolio new.
	portfolioWithSameAccount _ Portfolio new.
	self assert: (portfolioWithSameAccount add: account).
	self assert: (portfolioWithSameAccount add: portfolioToAdd).
	
	self assert: (portfolioRoot add: portfolioChildWithoutAccount).
	self assert: (portfolioRoot add: portfolioChildWithAccount).
	self deny: (portfolioRoot add: portfolioToAdd).


	 
!
!PortfolioTest methodsFor: 'tests tree structure' stamp: 'EMI 11/8/2020 17:39:28'!
test26PortfolioWith2GrandChildrenPortfoliosCannotAddAThirdWithAGrandParentWithSameAccount
	| portfolioRoot portfolioChildLeft portfolioChildRight 
	portfolioGrandChildRight portfolioGrandChildLeft 
	portfolioRootAnotherTree portfolioChildAnotherTree portfolioGrandChildAnotherTree account|
	
	portfolioRoot _ Portfolio new.
	portfolioRootAnotherTree  _ Portfolio new.
	account _  ReceptiveAccount new.
	
	self assert: (portfolioRoot add: account).
	self assert: (portfolioRootAnotherTree add: account).
	
	portfolioChildLeft  _ Portfolio new.
	portfolioChildRight _ Portfolio new.
	self assert: (portfolioRoot add: portfolioChildLeft).
	self assert: (portfolioRoot add: portfolioChildRight).
	
	portfolioGrandChildLeft _ Portfolio new.
	portfolioGrandChildRight _ Portfolio new.
	self assert: (portfolioChildLeft add: portfolioGrandChildLeft ).
	self assert: (portfolioChildRight add: portfolioGrandChildRight).
	
	portfolioChildAnotherTree _ Portfolio new.
	self assert: (portfolioRootAnotherTree add: portfolioChildAnotherTree).
	
	portfolioGrandChildAnotherTree _ Portfolio new.
	self assert: (portfolioChildAnotherTree add: portfolioGrandChildAnotherTree ).
	
	self deny: (portfolioGrandChildRight add: portfolioGrandChildAnotherTree).
	


	 
! !

!methodRemoval: PortfolioTest #test20PortfolioWith2GrandChildrenPortfoliosCannotAddAThirdWithAGrandParentWithSameAccount stamp: 'EMI 11/8/2020 17:39:28'!
test20PortfolioWith2GrandChildrenPortfoliosCannotAddAThirdWithAGrandParentWithSameAccount
	| portfolioRoot portfolioChildLeft portfolioChildRight 
	portfolioGrandChildRight portfolioGrandChildLeft 
	portfolioRootAnotherTree portfolioChildAnotherTree portfolioGrandChildAnotherTree account|
	
	portfolioRoot _ Portfolio new.
	portfolioRootAnotherTree  _ Portfolio new.
	account _  ReceptiveAccount new.
	
	self assert: (portfolioRoot add: account).
	self assert: (portfolioRootAnotherTree add: account).
	
	portfolioChildLeft  _ Portfolio new.
	portfolioChildRight _ Portfolio new.
	self assert: (portfolioRoot add: portfolioChildLeft).
	self assert: (portfolioRoot add: portfolioChildRight).
	
	portfolioGrandChildLeft _ Portfolio new.
	portfolioGrandChildRight _ Portfolio new.
	self assert: (portfolioChildLeft add: portfolioGrandChildLeft ).
	self assert: (portfolioChildRight add: portfolioGrandChildRight).
	
	portfolioChildAnotherTree _ Portfolio new.
	self assert: (portfolioRootAnotherTree add: portfolioChildAnotherTree).
	
	portfolioGrandChildAnotherTree _ Portfolio new.
	self assert: (portfolioChildAnotherTree add: portfolioGrandChildAnotherTree ).
	
	self deny: (portfolioGrandChildRight add: portfolioGrandChildAnotherTree).
	


	 
!
!PortfolioTest methodsFor: 'tests tree structure' stamp: 'EMI 11/8/2020 17:40:13'!
test17PortfolioWith2ChildrenPortfoliosCannotAddAThirdWithSameAccount
	| portfolioRoot portfolioChildWithAccount portfolioChildWithoutAccount portfolioToAddWithSameAccount account|
	portfolioRoot _ Portfolio new.
	account _  ReceptiveAccount new.
	
	portfolioChildWithoutAccount _ Portfolio new.
	
	portfolioChildWithAccount _ Portfolio new.
	self assert: (portfolioChildWithAccount add: account).
	
	portfolioToAddWithSameAccount _ Portfolio new.
	self assert: (portfolioToAddWithSameAccount add: account).
	
	self assert: (portfolioRoot add: portfolioChildWithoutAccount).
	self assert: (portfolioRoot add: portfolioChildWithAccount).
	self deny: (portfolioRoot add: portfolioToAddWithSameAccount).


	 
! !

!methodRemoval: PortfolioTest #test16bis1PortfolioWith2ChildrenPortfoliosCannotAddAThirdWithSameAccount stamp: 'EMI 11/8/2020 17:40:13'!
test16bis1PortfolioWith2ChildrenPortfoliosCannotAddAThirdWithSameAccount
	| portfolioRoot portfolioChildWithAccount portfolioChildWithoutAccount portfolioToAddWithSameAccount account|
	portfolioRoot _ Portfolio new.
	account _  ReceptiveAccount new.
	
	portfolioChildWithoutAccount _ Portfolio new.
	
	portfolioChildWithAccount _ Portfolio new.
	self assert: (portfolioChildWithAccount add: account).
	
	portfolioToAddWithSameAccount _ Portfolio new.
	self assert: (portfolioToAddWithSameAccount add: account).
	
	self assert: (portfolioRoot add: portfolioChildWithoutAccount).
	self assert: (portfolioRoot add: portfolioChildWithAccount).
	self deny: (portfolioRoot add: portfolioToAddWithSameAccount).


	 
!
!PortfolioTest methodsFor: 'tests tree structure' stamp: 'EMI 11/8/2020 17:40:24'!
test18TwoDisjointPortfoliosCanUseSameAccount
	| portfolio portfolio2 account|
	
	portfolio _ Portfolio new.
	portfolio2 _ Portfolio new.
	account _ ReceptiveAccount new.
	
	self assert: (portfolio add: account).
	self assert: (portfolio2 add: account).
	self assert: account parentAssets includes: portfolio.
	self assert: account parentAssets includes: portfolio2.
	


	 
! !

!methodRemoval: PortfolioTest #test16bis2TwoDisjointPortfoliosCanUseSameAccount stamp: 'EMI 11/8/2020 17:40:24'!
test16bis2TwoDisjointPortfoliosCanUseSameAccount
	| portfolio portfolio2 account|
	
	portfolio _ Portfolio new.
	portfolio2 _ Portfolio new.
	account _ ReceptiveAccount new.
	
	self assert: (portfolio add: account).
	self assert: (portfolio2 add: account).
	self assert: account parentAssets includes: portfolio.
	self assert: account parentAssets includes: portfolio2.
	


	 
!
!PortfolioTest methodsFor: 'tests tree structure' stamp: 'EMI 11/8/2020 17:40:42'!
test19CannotUniteTwoDisjointPortfoliosWithSameAccount
	| portfolio portfolio2 portfolioRoot account|
	
	portfolio _ Portfolio new.
	portfolio2 _ Portfolio new.
	portfolioRoot _ Portfolio new.
	account _ ReceptiveAccount new.
	
	self assert: (portfolio add: account).
	self assert: (portfolio2 add: account).
	self assert: (portfolioRoot add: portfolio).
	self deny: (portfolioRoot add: portfolio2).
	


	 
! !

!methodRemoval: PortfolioTest #test16bis3CannotUniteTwoDisjointPortfoliosWithSameAccount stamp: 'EMI 11/8/2020 17:40:42'!
test16bis3CannotUniteTwoDisjointPortfoliosWithSameAccount
	| portfolio portfolio2 portfolioRoot account|
	
	portfolio _ Portfolio new.
	portfolio2 _ Portfolio new.
	portfolioRoot _ Portfolio new.
	account _ ReceptiveAccount new.
	
	self assert: (portfolio add: account).
	self assert: (portfolio2 add: account).
	self assert: (portfolioRoot add: portfolio).
	self deny: (portfolioRoot add: portfolio2).
	


	 
!
!PortfolioTest methodsFor: 'tests tree structure' stamp: 'EMI 11/8/2020 17:40:51'!
test20TwoDisjointPortfoliosCanHaveSameChildPortfolio
	| portfolio portfolio2 portfolioChild|
	
	portfolio _ Portfolio new.
	portfolio2 _ Portfolio new.
	portfolioChild _ Portfolio new.
	
	self assert: (portfolio add: portfolioChild).
	self assert: (portfolio2 add: portfolioChild).
	self assert: portfolioChild parentAssets includes: portfolio.
	self assert: portfolioChild parentAssets includes: portfolio2.
	


	 
! !

!methodRemoval: PortfolioTest #test16bis4TwoDisjointPortfoliosCanHaveSameChildPortfolio stamp: 'EMI 11/8/2020 17:40:51'!
test16bis4TwoDisjointPortfoliosCanHaveSameChildPortfolio
	| portfolio portfolio2 portfolioChild|
	
	portfolio _ Portfolio new.
	portfolio2 _ Portfolio new.
	portfolioChild _ Portfolio new.
	
	self assert: (portfolio add: portfolioChild).
	self assert: (portfolio2 add: portfolioChild).
	self assert: portfolioChild parentAssets includes: portfolio.
	self assert: portfolioChild parentAssets includes: portfolio2.
	


	 
!
!PortfolioTest methodsFor: 'tests tree structure' stamp: 'EMI 11/8/2020 17:41:01'!
test21CannotUniteTwoDisjointPortfoliosWithSameChildPortfolio
	| portfolio portfolio2 portfolioRoot portfolioChild |
	
	portfolio _ Portfolio new.
	portfolio2 _ Portfolio new.
	portfolioRoot _ Portfolio new.
	portfolioChild _ Portfolio new.
	
	self assert: (portfolio add: portfolioChild).
	self assert: (portfolio2 add: portfolioChild).
	self assert: (portfolioRoot add: portfolio).
	self deny: (portfolioRoot add: portfolio2).
	


	 
! !

!methodRemoval: PortfolioTest #test16bis5CannotUniteTwoDisjointPortfoliosWithSameChildPortfolio stamp: 'EMI 11/8/2020 17:41:01'!
test16bis5CannotUniteTwoDisjointPortfoliosWithSameChildPortfolio
	| portfolio portfolio2 portfolioRoot portfolioChild |
	
	portfolio _ Portfolio new.
	portfolio2 _ Portfolio new.
	portfolioRoot _ Portfolio new.
	portfolioChild _ Portfolio new.
	
	self assert: (portfolio add: portfolioChild).
	self assert: (portfolio2 add: portfolioChild).
	self assert: (portfolioRoot add: portfolio).
	self deny: (portfolioRoot add: portfolio2).
	


	 
!
!PortfolioTest methodsFor: 'tests tree structure' stamp: 'EMI 11/8/2020 17:41:32'!
test22PortfolioCannotAddBothGrandChildrenPortfoliosWithSameAccount
	| portfolio portfolioChildLeft portfolioChildRight portfolioGrandChildLeft portfolioGrandChildRight account|
	portfolio _ Portfolio new.
	account _  ReceptiveAccount new.
	
	portfolioChildLeft _ Portfolio new.
	portfolioChildRight _ Portfolio new.
	
	portfolioGrandChildLeft _ Portfolio new.
	self assert: (portfolioGrandChildLeft add: account).
	
	portfolioGrandChildRight _ Portfolio new.
	self assert: (portfolioGrandChildRight add: account).
	
	self assert: (portfolio add: portfolioChildLeft).
	self assert: (portfolio add: portfolioChildRight).
	self assert: (portfolioChildLeft add: portfolioGrandChildLeft).
	self deny: (portfolioChildRight add: portfolioGrandChildRight).


	 
! !

!methodRemoval: PortfolioTest #test23PortfolioCannotAddBothGrandChildrenPortfoliosWithSameAccount stamp: 'EMI 11/8/2020 17:41:32'!
test23PortfolioCannotAddBothGrandChildrenPortfoliosWithSameAccount
	| portfolio portfolioChildLeft portfolioChildRight portfolioGrandChildLeft portfolioGrandChildRight account|
	portfolio _ Portfolio new.
	account _  ReceptiveAccount new.
	
	portfolioChildLeft _ Portfolio new.
	portfolioChildRight _ Portfolio new.
	
	portfolioGrandChildLeft _ Portfolio new.
	self assert: (portfolioGrandChildLeft add: account).
	
	portfolioGrandChildRight _ Portfolio new.
	self assert: (portfolioGrandChildRight add: account).
	
	self assert: (portfolio add: portfolioChildLeft).
	self assert: (portfolio add: portfolioChildRight).
	self assert: (portfolioChildLeft add: portfolioGrandChildLeft).
	self deny: (portfolioChildRight add: portfolioGrandChildRight).


	 
!
!PortfolioTest methodsFor: 'tests tree structure' stamp: 'EMI 11/8/2020 17:41:39'!
test23PortfolioCannotAddGrandChildPortfolioWithSameAccountAsChild
	| portfolio portfolioChildLeft portfolioChildRight portfolioGrandChildRight account|
	portfolio _ Portfolio new.
	account _  ReceptiveAccount new.
	
	portfolioChildLeft _ Portfolio new.
	portfolioChildRight _ Portfolio new.
	
	self assert: (portfolioChildLeft add: account).
	
	portfolioGrandChildRight _ Portfolio new.
	self assert: (portfolioGrandChildRight add: account).
	
	self assert: (portfolio add: portfolioChildLeft).
	self assert: (portfolio add: portfolioChildRight).
	self deny: (portfolioChildRight add: portfolioGrandChildRight).


	 
! !

!methodRemoval: PortfolioTest #test24PortfolioCannotAddGrandChildPortfolioWithSameAccountAsChild stamp: 'EMI 11/8/2020 17:41:39'!
test24PortfolioCannotAddGrandChildPortfolioWithSameAccountAsChild
	| portfolio portfolioChildLeft portfolioChildRight portfolioGrandChildRight account|
	portfolio _ Portfolio new.
	account _  ReceptiveAccount new.
	
	portfolioChildLeft _ Portfolio new.
	portfolioChildRight _ Portfolio new.
	
	self assert: (portfolioChildLeft add: account).
	
	portfolioGrandChildRight _ Portfolio new.
	self assert: (portfolioGrandChildRight add: account).
	
	self assert: (portfolio add: portfolioChildLeft).
	self assert: (portfolio add: portfolioChildRight).
	self deny: (portfolioChildRight add: portfolioGrandChildRight).


	 
!
!PortfolioTest methodsFor: 'tests tree structure' stamp: 'EMI 11/8/2020 17:41:46'!
test24PortfolioWith2ChildrenPortfoliosCannotAddAThirdWithAParentWithSameAccount
	| portfolioRoot portfolioChildWithAccount portfolioChildWithoutAccount 
	portfolioToAdd portfolioWithSameAccount account|
	
	portfolioRoot _ Portfolio new.
	account _  ReceptiveAccount new.
	
	portfolioChildWithoutAccount _ Portfolio new.
	
	portfolioChildWithAccount _ Portfolio new.
	self assert: (portfolioChildWithAccount add: account).
	
	portfolioToAdd _ Portfolio new.
	portfolioWithSameAccount _ Portfolio new.
	self assert: (portfolioWithSameAccount add: account).
	self assert: (portfolioWithSameAccount add: portfolioToAdd).
	
	self assert: (portfolioRoot add: portfolioChildWithoutAccount).
	self assert: (portfolioRoot add: portfolioChildWithAccount).
	self deny: (portfolioRoot add: portfolioToAdd).


	 
! !

!methodRemoval: PortfolioTest #test25PortfolioWith2ChildrenPortfoliosCannotAddAThirdWithAParentWithSameAccount stamp: 'EMI 11/8/2020 17:41:46'!
test25PortfolioWith2ChildrenPortfoliosCannotAddAThirdWithAParentWithSameAccount
	| portfolioRoot portfolioChildWithAccount portfolioChildWithoutAccount 
	portfolioToAdd portfolioWithSameAccount account|
	
	portfolioRoot _ Portfolio new.
	account _  ReceptiveAccount new.
	
	portfolioChildWithoutAccount _ Portfolio new.
	
	portfolioChildWithAccount _ Portfolio new.
	self assert: (portfolioChildWithAccount add: account).
	
	portfolioToAdd _ Portfolio new.
	portfolioWithSameAccount _ Portfolio new.
	self assert: (portfolioWithSameAccount add: account).
	self assert: (portfolioWithSameAccount add: portfolioToAdd).
	
	self assert: (portfolioRoot add: portfolioChildWithoutAccount).
	self assert: (portfolioRoot add: portfolioChildWithAccount).
	self deny: (portfolioRoot add: portfolioToAdd).


	 
!
!PortfolioTest methodsFor: 'tests tree structure' stamp: 'EMI 11/8/2020 17:41:54'!
test25PortfolioWith2GrandChildrenPortfoliosCannotAddAThirdWithAGrandParentWithSameAccount
	| portfolioRoot portfolioChildLeft portfolioChildRight 
	portfolioGrandChildRight portfolioGrandChildLeft 
	portfolioRootAnotherTree portfolioChildAnotherTree portfolioGrandChildAnotherTree account|
	
	portfolioRoot _ Portfolio new.
	portfolioRootAnotherTree  _ Portfolio new.
	account _  ReceptiveAccount new.
	
	self assert: (portfolioRoot add: account).
	self assert: (portfolioRootAnotherTree add: account).
	
	portfolioChildLeft  _ Portfolio new.
	portfolioChildRight _ Portfolio new.
	self assert: (portfolioRoot add: portfolioChildLeft).
	self assert: (portfolioRoot add: portfolioChildRight).
	
	portfolioGrandChildLeft _ Portfolio new.
	portfolioGrandChildRight _ Portfolio new.
	self assert: (portfolioChildLeft add: portfolioGrandChildLeft ).
	self assert: (portfolioChildRight add: portfolioGrandChildRight).
	
	portfolioChildAnotherTree _ Portfolio new.
	self assert: (portfolioRootAnotherTree add: portfolioChildAnotherTree).
	
	portfolioGrandChildAnotherTree _ Portfolio new.
	self assert: (portfolioChildAnotherTree add: portfolioGrandChildAnotherTree ).
	
	self deny: (portfolioGrandChildRight add: portfolioGrandChildAnotherTree).
	


	 
! !

!methodRemoval: PortfolioTest #test26PortfolioWith2GrandChildrenPortfoliosCannotAddAThirdWithAGrandParentWithSameAccount stamp: 'EMI 11/8/2020 17:41:54'!
test26PortfolioWith2GrandChildrenPortfoliosCannotAddAThirdWithAGrandParentWithSameAccount
	| portfolioRoot portfolioChildLeft portfolioChildRight 
	portfolioGrandChildRight portfolioGrandChildLeft 
	portfolioRootAnotherTree portfolioChildAnotherTree portfolioGrandChildAnotherTree account|
	
	portfolioRoot _ Portfolio new.
	portfolioRootAnotherTree  _ Portfolio new.
	account _  ReceptiveAccount new.
	
	self assert: (portfolioRoot add: account).
	self assert: (portfolioRootAnotherTree add: account).
	
	portfolioChildLeft  _ Portfolio new.
	portfolioChildRight _ Portfolio new.
	self assert: (portfolioRoot add: portfolioChildLeft).
	self assert: (portfolioRoot add: portfolioChildRight).
	
	portfolioGrandChildLeft _ Portfolio new.
	portfolioGrandChildRight _ Portfolio new.
	self assert: (portfolioChildLeft add: portfolioGrandChildLeft ).
	self assert: (portfolioChildRight add: portfolioGrandChildRight).
	
	portfolioChildAnotherTree _ Portfolio new.
	self assert: (portfolioRootAnotherTree add: portfolioChildAnotherTree).
	
	portfolioGrandChildAnotherTree _ Portfolio new.
	self assert: (portfolioChildAnotherTree add: portfolioGrandChildAnotherTree ).
	
	self deny: (portfolioGrandChildRight add: portfolioGrandChildAnotherTree).
	


	 
!

----SNAPSHOT----(8 November 2020 17:41:57) CuisUniversity-4383.image priorSource: 18161475!
!PortfolioTest methodsFor: 'tests tree structure' stamp: 'EMI 11/8/2020 17:45:32'!
test12bisPortfolioHasOneGrandChildPortfolioWithAnAccountAndADepositRegistered
	| portfolio portfolioChild account transaction |
	portfolio _ Portfolio new.
	portfolioChild _ Portfolio new.
	account _  ReceptiveAccount new.
	transaction _ Deposit register: 100 on: account. 
	
	self assert: (portfolioChild add: account).
	self assert: (portfolio add: portfolioChild).
	self assert: (portfolio hasRegistered: transaction).
	self assert: (portfolio transactions size) equals: 1.
	self assert: (portfolio transactions includes: transaction).

	 
! !
!PortfolioTest methodsFor: 'tests tree structure' stamp: 'EMI 11/8/2020 17:46:29' prior: 50900213!
test12bisPortfolioHasOneGrandChildPortfolioWithAnAccountAndADepositRegistered
	| portfolio portfolioChild portfolioGrandChildLeft portfolioGrandChildRight account transaction |
	portfolio _ Portfolio new.
	portfolioChild _ Portfolio new.
	portfolioGrandChildLeft _ Portfolio new.
	portfolioGrandChildRight _ Portfolio new.
	account _  ReceptiveAccount new.
	transaction _ Deposit register: 100 on: account. 
	
	self assert: (portfolioChild add: account).
	self assert: (portfolio add: portfolioChild).
	self assert: (portfolio hasRegistered: transaction).
	self assert: (portfolio transactions size) equals: 1.
	self assert: (portfolio transactions includes: transaction).

	 
! !
!PortfolioTest methodsFor: 'tests tree structure' stamp: 'EMI 11/8/2020 17:47:55' prior: 50900234!
test12bisPortfolioHasOneGrandChildPortfolioWithAnAccountAndADepositRegistered
	| portfolio portfolioChild portfolioGrandChild account transaction |
	portfolio _ Portfolio new.
	portfolioChild _ Portfolio new.
	portfolioGrandChild _ Portfolio new.
	account _  ReceptiveAccount new.
	transaction _ Deposit register: 100 on: account. 
	
	self assert: (portfolioGrandChild add: account).
	self assert: (portfolioChild add: portfolioGrandChild).
	self assert: (portfolio add: portfolioChild).
	self assert: (portfolio hasRegistered: transaction).
	self assert: (portfolio transactions size) equals: 1.
	self assert: (portfolio transactions includes: transaction).

	 
! !
!PortfolioTest methodsFor: 'tests tree structure' stamp: 'EMI 11/8/2020 17:48:32' prior: 50900259!
test12bisPortfolioHasOneGrandChildPortfolioWithAnAccountAndADepositRegistered
	| portfolio portfolioChild portfolioGrandChild account transaction |
	portfolio _ Portfolio new.
	portfolioChild _ Portfolio new.
	portfolioGrandChild _ Portfolio new.
	account _  ReceptiveAccount new.
	transaction _ Deposit register: 100 on: account. 
	
	self assert: (portfolioGrandChild add: account).
	self assert: (portfolioChild add: portfolioGrandChild).
	self assert: (portfolio add: portfolioChild).
	self assert: (portfolio balance ) equals: 100.
	self assert: (portfolio hasRegistered: transaction).
	self assert: (portfolio transactions size) equals: 1.
	self assert: (portfolio transactions includes: transaction).

	 
! !
!PortfolioTest methodsFor: 'tests tree structure' stamp: 'EMI 11/8/2020 17:50:19'!
test13bisPortfolioHasMoreThanOneGrandChildPortfolioWithAnAccountAndADepositRegistered
	| portfolio portfolioChildLeft  portfolioChildRight account1 account2 transaction1 transaction2|
	portfolio _ Portfolio new.
	portfolioChildLeft _ Portfolio new.
	portfolioChildRight _ Portfolio new.
	account1 _  ReceptiveAccount new.
	account2 _  ReceptiveAccount new.
	transaction1 _ Deposit register: 100 on: account1.
	transaction2 _ Deposit register: 100 on: account2.
	
	self assert: (portfolioChildLeft add: account1).
	self assert: (portfolioChildRight add: account2).
	self assert: (portfolio add: portfolioChildLeft).
	self assert: (portfolio add: portfolioChildRight).
	self assert: (portfolio hasRegistered: transaction1).
	self assert: (portfolio hasRegistered: transaction2).
	self assert: (portfolio transactions size) equals: 2.
	self assert: (portfolio transactions includes: transaction1).
	self assert: (portfolio transactions includes: transaction2).
	 
! !

!methodRemoval: PortfolioTest #test13PortfolioHasMoreThanOneChildPortfolioWithAnAccountAndADepositRegistered stamp: 'EMI 11/8/2020 17:50:19'!
test13PortfolioHasMoreThanOneChildPortfolioWithAnAccountAndADepositRegistered
	| portfolio portfolioChildLeft  portfolioChildRight account1 account2 transaction1 transaction2|
	portfolio _ Portfolio new.
	portfolioChildLeft _ Portfolio new.
	portfolioChildRight _ Portfolio new.
	account1 _  ReceptiveAccount new.
	account2 _  ReceptiveAccount new.
	transaction1 _ Deposit register: 100 on: account1.
	transaction2 _ Deposit register: 100 on: account2.
	
	self assert: (portfolioChildLeft add: account1).
	self assert: (portfolioChildRight add: account2).
	self assert: (portfolio add: portfolioChildLeft).
	self assert: (portfolio add: portfolioChildRight).
	self assert: (portfolio hasRegistered: transaction1).
	self assert: (portfolio hasRegistered: transaction2).
	self assert: (portfolio transactions size) equals: 2.
	self assert: (portfolio transactions includes: transaction1).
	self assert: (portfolio transactions includes: transaction2).
	 
!
!PortfolioTest methodsFor: 'tests tree structure' stamp: 'EMI 11/8/2020 17:52:54' prior: 50900308!
test13bisPortfolioHasMoreThanOneGrandChildPortfolioWithAnAccountAndADepositRegistered
	| portfolio portfolioChild portfolioGrandChildLeft  portfolioGrandChildRight account1 account2 transaction1 transaction2|
	portfolio _ Portfolio new.
	portfolioChild _ Portfolio new.
	portfolioGrandChildLeft _ Portfolio new.
	portfolioGrandChildRight _ Portfolio new.
	account1 _  ReceptiveAccount new.
	account2 _  ReceptiveAccount new.
	transaction1 _ Deposit register: 100 on: account1.
	transaction2 _ Deposit register: 100 on: account2.
	
	self assert: (portfolioGrandChildLeft add: account1).
	self assert: (portfolioGrandChildRight add: account2).
	self assert: (portfolioChild add: portfolioGrandChildLeft ).
	self assert: (portfolioChild add: portfolioGrandChildRight ).
	self assert: (portfolio add: portfolioChild).
	self assert: (portfolio balance ) equals: 200.
	self assert: (portfolio hasRegistered: transaction1).
	self assert: (portfolio hasRegistered: transaction2).
	self assert: (portfolio transactions size) equals: 2.
	self assert: (portfolio transactions includes: transaction1).
	self assert: (portfolio transactions includes: transaction2).
	 
! !

----SNAPSHOT----(8 November 2020 17:53:04) CuisUniversity-4383.image priorSource: 18193886!

!testRun: #PortfolioTest #test01NewPortfolioHasNoAccountsAndNoPortfolios stamp: 'EMI 11/8/2020 17:53:08'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioAddEmptyAccount stamp: 'EMI 11/8/2020 17:53:08'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioAddEmptyPortfolio stamp: 'EMI 11/8/2020 17:53:08'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioHasNoRegisteredTransactions stamp: 'EMI 11/8/2020 17:53:08'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasOneAccountWithOneRegisteredTransaction stamp: 'EMI 11/8/2020 17:53:08'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioMoreThanOneAccountWithRegisteredTransactions stamp: 'EMI 11/8/2020 17:53:08'!
PASSED!

!testRun: #PortfolioTest #test07EmptyPortfolioHasNoTransactions stamp: 'EMI 11/8/2020 17:53:08'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioWithOneAccountHasOneTransaction stamp: 'EMI 11/8/2020 17:53:08'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithMoreThanOneAccountHasMoreThanOneTransactions stamp: 'EMI 11/8/2020 17:53:08'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioHasOneChildPortfolioWithAnAccountAndADeposit stamp: 'EMI 11/8/2020 17:53:08'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioHasMoreThanOneChildPortfolioWithAnAccountAndADeposit stamp: 'EMI 11/8/2020 17:53:08'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioHasOneChildPortfolioWithAnAccountAndADepositRegistered stamp: 'EMI 11/8/2020 17:53:08'!
PASSED!

!testRun: #PortfolioTest #test12bisPortfolioHasOneGrandChildPortfolioWithAnAccountAndADepositRegistered stamp: 'EMI 11/8/2020 17:53:08'!
PASSED!

!testRun: #PortfolioTest #test13bisPortfolioHasMoreThanOneGrandChildPortfolioWithAnAccountAndADepositRegistered stamp: 'EMI 11/8/2020 17:53:08'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioCannotAddSameEmptyAssetTwice stamp: 'EMI 11/8/2020 17:53:08'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCannotAddChildPortfolioWithSameAccount stamp: 'EMI 11/8/2020 17:53:08'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioCannotAddBothChildrenPortfoliosWithSameAccount stamp: 'EMI 11/8/2020 17:53:08'!
PASSED!

!testRun: #PortfolioTest #test17PortfolioWith2ChildrenPortfoliosCannotAddAThirdWithSameAccount stamp: 'EMI 11/8/2020 17:53:08'!
PASSED!

!testRun: #PortfolioTest #test18TwoDisjointPortfoliosCanUseSameAccount stamp: 'EMI 11/8/2020 17:53:08'!
PASSED!

!testRun: #PortfolioTest #test19CannotUniteTwoDisjointPortfoliosWithSameAccount stamp: 'EMI 11/8/2020 17:53:08'!
PASSED!

!testRun: #PortfolioTest #test20TwoDisjointPortfoliosCanHaveSameChildPortfolio stamp: 'EMI 11/8/2020 17:53:08'!
PASSED!

!testRun: #PortfolioTest #test21CannotUniteTwoDisjointPortfoliosWithSameChildPortfolio stamp: 'EMI 11/8/2020 17:53:08'!
PASSED!

!testRun: #PortfolioTest #test22PortfolioCannotAddBothGrandChildrenPortfoliosWithSameAccount stamp: 'EMI 11/8/2020 17:53:08'!
PASSED!

!testRun: #PortfolioTest #test23PortfolioCannotAddGrandChildPortfolioWithSameAccountAsChild stamp: 'EMI 11/8/2020 17:53:08'!
PASSED!

!testRun: #PortfolioTest #test24PortfolioWith2ChildrenPortfoliosCannotAddAThirdWithAParentWithSameAccount stamp: 'EMI 11/8/2020 17:53:08'!
PASSED!

!testRun: #PortfolioTest #test25PortfolioWith2GrandChildrenPortfoliosCannotAddAThirdWithAGrandParentWithSameAccount stamp: 'EMI 11/8/2020 17:53:08'!
PASSED!
!PortfolioTest methodsFor: 'private' stamp: 'EMI 11/8/2020 17:54:24'!
assertAdd: anAsset To: anotherAsset
	self assert: (anotherAsset add: anAsset).! !
!PortfolioTest methodsFor: 'private' stamp: 'EMI 11/8/2020 17:54:59'!
denyAdd: anAsset To: anotherAsset
	self deny: (anotherAsset add: anAsset).! !
!PortfolioTest methodsFor: 'test initialization' stamp: 'EMI 11/8/2020 17:55:24' prior: 50898482!
test02PortfolioAddEmptyAccount
	| portfolio account|
	portfolio _ Portfolio new.
	account _ ReceptiveAccount new.
	
	self assertAdd: account To: portfolio.
	self assert: portfolio balance equals: 0.
	self assert: portfolio parentAssets isEmpty.
	self assert: account parentAssets size equals: 1.
	self assert: account parentAssets includes: portfolio.! !

!testRun: #PortfolioTest #test02PortfolioAddEmptyAccount stamp: 'EMI 11/8/2020 17:55:26'!
PASSED!

!testRun: #PortfolioTest #test01NewPortfolioHasNoAccountsAndNoPortfolios stamp: 'EMI 11/8/2020 17:55:26'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioAddEmptyAccount stamp: 'EMI 11/8/2020 17:55:26'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioAddEmptyPortfolio stamp: 'EMI 11/8/2020 17:55:26'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioHasNoRegisteredTransactions stamp: 'EMI 11/8/2020 17:55:26'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasOneAccountWithOneRegisteredTransaction stamp: 'EMI 11/8/2020 17:55:26'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioMoreThanOneAccountWithRegisteredTransactions stamp: 'EMI 11/8/2020 17:55:26'!
PASSED!

!testRun: #PortfolioTest #test07EmptyPortfolioHasNoTransactions stamp: 'EMI 11/8/2020 17:55:26'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioWithOneAccountHasOneTransaction stamp: 'EMI 11/8/2020 17:55:26'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithMoreThanOneAccountHasMoreThanOneTransactions stamp: 'EMI 11/8/2020 17:55:26'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioHasOneChildPortfolioWithAnAccountAndADeposit stamp: 'EMI 11/8/2020 17:55:26'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioHasMoreThanOneChildPortfolioWithAnAccountAndADeposit stamp: 'EMI 11/8/2020 17:55:26'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioHasOneChildPortfolioWithAnAccountAndADepositRegistered stamp: 'EMI 11/8/2020 17:55:26'!
PASSED!

!testRun: #PortfolioTest #test12bisPortfolioHasOneGrandChildPortfolioWithAnAccountAndADepositRegistered stamp: 'EMI 11/8/2020 17:55:26'!
PASSED!

!testRun: #PortfolioTest #test13bisPortfolioHasMoreThanOneGrandChildPortfolioWithAnAccountAndADepositRegistered stamp: 'EMI 11/8/2020 17:55:26'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioCannotAddSameEmptyAssetTwice stamp: 'EMI 11/8/2020 17:55:26'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCannotAddChildPortfolioWithSameAccount stamp: 'EMI 11/8/2020 17:55:26'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioCannotAddBothChildrenPortfoliosWithSameAccount stamp: 'EMI 11/8/2020 17:55:26'!
PASSED!

!testRun: #PortfolioTest #test17PortfolioWith2ChildrenPortfoliosCannotAddAThirdWithSameAccount stamp: 'EMI 11/8/2020 17:55:26'!
PASSED!

!testRun: #PortfolioTest #test18TwoDisjointPortfoliosCanUseSameAccount stamp: 'EMI 11/8/2020 17:55:26'!
PASSED!

!testRun: #PortfolioTest #test19CannotUniteTwoDisjointPortfoliosWithSameAccount stamp: 'EMI 11/8/2020 17:55:26'!
PASSED!

!testRun: #PortfolioTest #test20TwoDisjointPortfoliosCanHaveSameChildPortfolio stamp: 'EMI 11/8/2020 17:55:26'!
PASSED!

!testRun: #PortfolioTest #test21CannotUniteTwoDisjointPortfoliosWithSameChildPortfolio stamp: 'EMI 11/8/2020 17:55:26'!
PASSED!

!testRun: #PortfolioTest #test22PortfolioCannotAddBothGrandChildrenPortfoliosWithSameAccount stamp: 'EMI 11/8/2020 17:55:26'!
PASSED!

!testRun: #PortfolioTest #test23PortfolioCannotAddGrandChildPortfolioWithSameAccountAsChild stamp: 'EMI 11/8/2020 17:55:26'!
PASSED!

!testRun: #PortfolioTest #test24PortfolioWith2ChildrenPortfoliosCannotAddAThirdWithAParentWithSameAccount stamp: 'EMI 11/8/2020 17:55:26'!
PASSED!

!testRun: #PortfolioTest #test25PortfolioWith2GrandChildrenPortfoliosCannotAddAThirdWithAGrandParentWithSameAccount stamp: 'EMI 11/8/2020 17:55:26'!
PASSED!
!PortfolioTest methodsFor: 'test initialization' stamp: 'EMI 11/8/2020 17:55:49' prior: 50898496!
test03PortfolioAddEmptyPortfolio
	| portfolio portfolioChild |
	portfolio _ Portfolio new.
	portfolioChild _ Portfolio new.
	
	self assertAdd: portfolioChild To: portfolio.
	self assert: portfolio balance equals: 0.
	self assert: portfolio parentAssets isEmpty.
	self assert: portfolioChild parentAssets size equals: 1.
	self assert: portfolioChild parentAssets includes: portfolio.! !

!testRun: #PortfolioTest #test03PortfolioAddEmptyPortfolio stamp: 'EMI 11/8/2020 17:55:50'!
PASSED!

!testRun: #PortfolioTest #test01NewPortfolioHasNoAccountsAndNoPortfolios stamp: 'EMI 11/8/2020 17:55:50'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioAddEmptyAccount stamp: 'EMI 11/8/2020 17:55:50'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioAddEmptyPortfolio stamp: 'EMI 11/8/2020 17:55:50'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioHasNoRegisteredTransactions stamp: 'EMI 11/8/2020 17:55:50'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasOneAccountWithOneRegisteredTransaction stamp: 'EMI 11/8/2020 17:55:50'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioMoreThanOneAccountWithRegisteredTransactions stamp: 'EMI 11/8/2020 17:55:50'!
PASSED!

!testRun: #PortfolioTest #test07EmptyPortfolioHasNoTransactions stamp: 'EMI 11/8/2020 17:55:50'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioWithOneAccountHasOneTransaction stamp: 'EMI 11/8/2020 17:55:50'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithMoreThanOneAccountHasMoreThanOneTransactions stamp: 'EMI 11/8/2020 17:55:50'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioHasOneChildPortfolioWithAnAccountAndADeposit stamp: 'EMI 11/8/2020 17:55:50'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioHasMoreThanOneChildPortfolioWithAnAccountAndADeposit stamp: 'EMI 11/8/2020 17:55:50'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioHasOneChildPortfolioWithAnAccountAndADepositRegistered stamp: 'EMI 11/8/2020 17:55:50'!
PASSED!

!testRun: #PortfolioTest #test12bisPortfolioHasOneGrandChildPortfolioWithAnAccountAndADepositRegistered stamp: 'EMI 11/8/2020 17:55:50'!
PASSED!

!testRun: #PortfolioTest #test13bisPortfolioHasMoreThanOneGrandChildPortfolioWithAnAccountAndADepositRegistered stamp: 'EMI 11/8/2020 17:55:50'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioCannotAddSameEmptyAssetTwice stamp: 'EMI 11/8/2020 17:55:50'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCannotAddChildPortfolioWithSameAccount stamp: 'EMI 11/8/2020 17:55:50'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioCannotAddBothChildrenPortfoliosWithSameAccount stamp: 'EMI 11/8/2020 17:55:50'!
PASSED!

!testRun: #PortfolioTest #test17PortfolioWith2ChildrenPortfoliosCannotAddAThirdWithSameAccount stamp: 'EMI 11/8/2020 17:55:50'!
PASSED!

!testRun: #PortfolioTest #test18TwoDisjointPortfoliosCanUseSameAccount stamp: 'EMI 11/8/2020 17:55:50'!
PASSED!

!testRun: #PortfolioTest #test19CannotUniteTwoDisjointPortfoliosWithSameAccount stamp: 'EMI 11/8/2020 17:55:50'!
PASSED!

!testRun: #PortfolioTest #test20TwoDisjointPortfoliosCanHaveSameChildPortfolio stamp: 'EMI 11/8/2020 17:55:50'!
PASSED!

!testRun: #PortfolioTest #test21CannotUniteTwoDisjointPortfoliosWithSameChildPortfolio stamp: 'EMI 11/8/2020 17:55:50'!
PASSED!

!testRun: #PortfolioTest #test22PortfolioCannotAddBothGrandChildrenPortfoliosWithSameAccount stamp: 'EMI 11/8/2020 17:55:50'!
PASSED!

!testRun: #PortfolioTest #test23PortfolioCannotAddGrandChildPortfolioWithSameAccountAsChild stamp: 'EMI 11/8/2020 17:55:50'!
PASSED!

!testRun: #PortfolioTest #test24PortfolioWith2ChildrenPortfoliosCannotAddAThirdWithAParentWithSameAccount stamp: 'EMI 11/8/2020 17:55:50'!
PASSED!

!testRun: #PortfolioTest #test25PortfolioWith2GrandChildrenPortfoliosCannotAddAThirdWithAGrandParentWithSameAccount stamp: 'EMI 11/8/2020 17:55:50'!
PASSED!
!PortfolioTest methodsFor: 'tests has registered' stamp: 'EMI 11/8/2020 17:56:42' prior: 50892124!
test05PortfolioHasOneAccountWithOneRegisteredTransaction
	| portfolio account transaction|
	portfolio _ Portfolio new.
	account _ ReceptiveAccount new.
	transaction _ Deposit register: 100 on: account.
	
	self assertAdd: account To: portfolio.
	self assert: (portfolio hasRegistered: transaction).
	self assert: portfolio balance equals: 100.! !

!testRun: #PortfolioTest #test05PortfolioHasOneAccountWithOneRegisteredTransaction stamp: 'EMI 11/8/2020 17:56:44'!
PASSED!

!testRun: #PortfolioTest #test01NewPortfolioHasNoAccountsAndNoPortfolios stamp: 'EMI 11/8/2020 17:56:44'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioAddEmptyAccount stamp: 'EMI 11/8/2020 17:56:44'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioAddEmptyPortfolio stamp: 'EMI 11/8/2020 17:56:44'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioHasNoRegisteredTransactions stamp: 'EMI 11/8/2020 17:56:44'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasOneAccountWithOneRegisteredTransaction stamp: 'EMI 11/8/2020 17:56:44'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioMoreThanOneAccountWithRegisteredTransactions stamp: 'EMI 11/8/2020 17:56:44'!
PASSED!

!testRun: #PortfolioTest #test07EmptyPortfolioHasNoTransactions stamp: 'EMI 11/8/2020 17:56:44'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioWithOneAccountHasOneTransaction stamp: 'EMI 11/8/2020 17:56:44'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithMoreThanOneAccountHasMoreThanOneTransactions stamp: 'EMI 11/8/2020 17:56:44'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioHasOneChildPortfolioWithAnAccountAndADeposit stamp: 'EMI 11/8/2020 17:56:44'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioHasMoreThanOneChildPortfolioWithAnAccountAndADeposit stamp: 'EMI 11/8/2020 17:56:44'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioHasOneChildPortfolioWithAnAccountAndADepositRegistered stamp: 'EMI 11/8/2020 17:56:44'!
PASSED!

!testRun: #PortfolioTest #test12bisPortfolioHasOneGrandChildPortfolioWithAnAccountAndADepositRegistered stamp: 'EMI 11/8/2020 17:56:44'!
PASSED!

!testRun: #PortfolioTest #test13bisPortfolioHasMoreThanOneGrandChildPortfolioWithAnAccountAndADepositRegistered stamp: 'EMI 11/8/2020 17:56:44'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioCannotAddSameEmptyAssetTwice stamp: 'EMI 11/8/2020 17:56:44'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCannotAddChildPortfolioWithSameAccount stamp: 'EMI 11/8/2020 17:56:44'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioCannotAddBothChildrenPortfoliosWithSameAccount stamp: 'EMI 11/8/2020 17:56:44'!
PASSED!

!testRun: #PortfolioTest #test17PortfolioWith2ChildrenPortfoliosCannotAddAThirdWithSameAccount stamp: 'EMI 11/8/2020 17:56:44'!
PASSED!

!testRun: #PortfolioTest #test18TwoDisjointPortfoliosCanUseSameAccount stamp: 'EMI 11/8/2020 17:56:44'!
PASSED!

!testRun: #PortfolioTest #test19CannotUniteTwoDisjointPortfoliosWithSameAccount stamp: 'EMI 11/8/2020 17:56:44'!
PASSED!

!testRun: #PortfolioTest #test20TwoDisjointPortfoliosCanHaveSameChildPortfolio stamp: 'EMI 11/8/2020 17:56:44'!
PASSED!

!testRun: #PortfolioTest #test21CannotUniteTwoDisjointPortfoliosWithSameChildPortfolio stamp: 'EMI 11/8/2020 17:56:44'!
PASSED!

!testRun: #PortfolioTest #test22PortfolioCannotAddBothGrandChildrenPortfoliosWithSameAccount stamp: 'EMI 11/8/2020 17:56:44'!
PASSED!

!testRun: #PortfolioTest #test23PortfolioCannotAddGrandChildPortfolioWithSameAccountAsChild stamp: 'EMI 11/8/2020 17:56:44'!
PASSED!

!testRun: #PortfolioTest #test24PortfolioWith2ChildrenPortfoliosCannotAddAThirdWithAParentWithSameAccount stamp: 'EMI 11/8/2020 17:56:44'!
PASSED!

!testRun: #PortfolioTest #test25PortfolioWith2GrandChildrenPortfoliosCannotAddAThirdWithAGrandParentWithSameAccount stamp: 'EMI 11/8/2020 17:56:44'!
PASSED!
!PortfolioTest methodsFor: 'tests has registered' stamp: 'EMI 11/8/2020 17:57:10' prior: 50897577!
test06PortfolioMoreThanOneAccountWithRegisteredTransactions
	| portfolio account1 account2 transaction1 transaction2|
	portfolio _ Portfolio new.
	account1 _ ReceptiveAccount new.
	account2 _ ReceptiveAccount new.
	transaction1 _ Deposit register: 100 on: account1.
	transaction2 _ Deposit register: 50 on: account2.
	
	self assertAdd: account1 To: portfolio.
	self assertAdd: account2 To: portfolio.
	self assert: (portfolio hasRegistered: transaction1).
	self assert: (portfolio hasRegistered: transaction2).
	self assert: portfolio balance equals: 150.! !
!PortfolioTest methodsFor: 'tests transactions' stamp: 'EMI 11/8/2020 17:57:31' prior: 50892158!
test08PortfolioWithOneAccountHasOneTransaction
	| portfolio account deposit |
	portfolio _ Portfolio new.
	account _  ReceptiveAccount new.
	deposit _ Deposit register: 100 on: account.
	
	self assertAdd: account To: portfolio.
	self assert: portfolio transactions size equals: 1.
	self assert: (portfolio transactions includes: deposit).
	self assert: portfolio balance equals: 100.! !
!PortfolioTest methodsFor: 'tests transactions' stamp: 'EMI 11/8/2020 17:57:54' prior: 50892173!
test09PortfolioWithMoreThanOneAccountHasMoreThanOneTransactions
	| portfolio account1 account2 deposit withdraw |
	portfolio _ Portfolio new.
	account1 _  ReceptiveAccount new.
	account2 _  ReceptiveAccount new.
	deposit _ Deposit register: 100 on: account1.
	withdraw _ Withdraw register: 50 on: account2.
	
	self assertAdd: account1 To: portfolio.
	self assertAdd: account2 To: portfolio.
	self assert: portfolio transactions size equals: 2.
	self assert: (portfolio transactions includes: deposit).
	self assert: (portfolio transactions includes: withdraw ).
	self assert: portfolio balance equals: 50.! !
!PortfolioTest methodsFor: 'tests tree structure' stamp: 'EMI 11/8/2020 17:59:05' prior: 50897598!
test10PortfolioHasOneChildPortfolioWithAnAccountAndADeposit
	| portfolio portfolioChild account|
	portfolio _ Portfolio new.
	portfolioChild _ Portfolio new.
	account _  ReceptiveAccount new.
	Deposit register: 100 on: account. 
	
	self assertAdd: account To: portfolioChild. 
	self assertAdd: portfolioChild To: portfolio.
	self assert: portfolioChild balance equals: 100.
	self assert: portfolio balance equals: 100.

	 
! !

!testRun: #PortfolioTest #test10PortfolioHasOneChildPortfolioWithAnAccountAndADeposit stamp: 'EMI 11/8/2020 17:59:05'!
PASSED!

!testRun: #PortfolioTest #test01NewPortfolioHasNoAccountsAndNoPortfolios stamp: 'EMI 11/8/2020 17:59:05'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioAddEmptyAccount stamp: 'EMI 11/8/2020 17:59:05'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioAddEmptyPortfolio stamp: 'EMI 11/8/2020 17:59:05'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioHasNoRegisteredTransactions stamp: 'EMI 11/8/2020 17:59:05'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasOneAccountWithOneRegisteredTransaction stamp: 'EMI 11/8/2020 17:59:05'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioMoreThanOneAccountWithRegisteredTransactions stamp: 'EMI 11/8/2020 17:59:05'!
PASSED!

!testRun: #PortfolioTest #test07EmptyPortfolioHasNoTransactions stamp: 'EMI 11/8/2020 17:59:05'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioWithOneAccountHasOneTransaction stamp: 'EMI 11/8/2020 17:59:05'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithMoreThanOneAccountHasMoreThanOneTransactions stamp: 'EMI 11/8/2020 17:59:05'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioHasOneChildPortfolioWithAnAccountAndADeposit stamp: 'EMI 11/8/2020 17:59:05'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioHasMoreThanOneChildPortfolioWithAnAccountAndADeposit stamp: 'EMI 11/8/2020 17:59:05'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioHasOneChildPortfolioWithAnAccountAndADepositRegistered stamp: 'EMI 11/8/2020 17:59:05'!
PASSED!

!testRun: #PortfolioTest #test12bisPortfolioHasOneGrandChildPortfolioWithAnAccountAndADepositRegistered stamp: 'EMI 11/8/2020 17:59:05'!
PASSED!

!testRun: #PortfolioTest #test13bisPortfolioHasMoreThanOneGrandChildPortfolioWithAnAccountAndADepositRegistered stamp: 'EMI 11/8/2020 17:59:05'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioCannotAddSameEmptyAssetTwice stamp: 'EMI 11/8/2020 17:59:05'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCannotAddChildPortfolioWithSameAccount stamp: 'EMI 11/8/2020 17:59:05'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioCannotAddBothChildrenPortfoliosWithSameAccount stamp: 'EMI 11/8/2020 17:59:05'!
PASSED!

!testRun: #PortfolioTest #test17PortfolioWith2ChildrenPortfoliosCannotAddAThirdWithSameAccount stamp: 'EMI 11/8/2020 17:59:05'!
PASSED!

!testRun: #PortfolioTest #test18TwoDisjointPortfoliosCanUseSameAccount stamp: 'EMI 11/8/2020 17:59:05'!
PASSED!

!testRun: #PortfolioTest #test19CannotUniteTwoDisjointPortfoliosWithSameAccount stamp: 'EMI 11/8/2020 17:59:05'!
PASSED!

!testRun: #PortfolioTest #test20TwoDisjointPortfoliosCanHaveSameChildPortfolio stamp: 'EMI 11/8/2020 17:59:05'!
PASSED!

!testRun: #PortfolioTest #test21CannotUniteTwoDisjointPortfoliosWithSameChildPortfolio stamp: 'EMI 11/8/2020 17:59:05'!
PASSED!

!testRun: #PortfolioTest #test22PortfolioCannotAddBothGrandChildrenPortfoliosWithSameAccount stamp: 'EMI 11/8/2020 17:59:05'!
PASSED!

!testRun: #PortfolioTest #test23PortfolioCannotAddGrandChildPortfolioWithSameAccountAsChild stamp: 'EMI 11/8/2020 17:59:05'!
PASSED!

!testRun: #PortfolioTest #test24PortfolioWith2ChildrenPortfoliosCannotAddAThirdWithAParentWithSameAccount stamp: 'EMI 11/8/2020 17:59:05'!
PASSED!

!testRun: #PortfolioTest #test25PortfolioWith2GrandChildrenPortfoliosCannotAddAThirdWithAGrandParentWithSameAccount stamp: 'EMI 11/8/2020 17:59:05'!
PASSED!
!PortfolioTest methodsFor: 'tests tree structure' stamp: 'EMI 11/8/2020 18:00:30' prior: 50897690!
test11PortfolioHasMoreThanOneChildPortfolioWithAnAccountAndADeposit
	| portfolio portfolioChildLeft  portfolioChildRight account account2|
	portfolio _ Portfolio new.
	portfolioChildLeft _ Portfolio new.
	portfolioChildRight _ Portfolio new.
	account _  ReceptiveAccount new.
	account2 _  ReceptiveAccount new.
	Deposit register: 100 on: account.
	Deposit register: 100 on: account2.
	
	self assertAdd: account To: portfolioChildLeft. 
	self assertAdd: account2 To: portfolioChildRight.
	self assertAdd: portfolioChildLeft To: portfolio.
	self assertAdd: portfolioChildRight To: portfolio.
	self assert: portfolioChildLeft balance equals: 100.
	self assert: portfolioChildRight balance equals: 100.
	self assert: portfolio balance equals: 200.
	 
! !

!testRun: #PortfolioTest #test11PortfolioHasMoreThanOneChildPortfolioWithAnAccountAndADeposit stamp: 'EMI 11/8/2020 18:00:31'!
PASSED!

!testRun: #PortfolioTest #test01NewPortfolioHasNoAccountsAndNoPortfolios stamp: 'EMI 11/8/2020 18:00:31'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioAddEmptyAccount stamp: 'EMI 11/8/2020 18:00:31'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioAddEmptyPortfolio stamp: 'EMI 11/8/2020 18:00:31'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioHasNoRegisteredTransactions stamp: 'EMI 11/8/2020 18:00:31'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasOneAccountWithOneRegisteredTransaction stamp: 'EMI 11/8/2020 18:00:31'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioMoreThanOneAccountWithRegisteredTransactions stamp: 'EMI 11/8/2020 18:00:31'!
PASSED!

!testRun: #PortfolioTest #test07EmptyPortfolioHasNoTransactions stamp: 'EMI 11/8/2020 18:00:31'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioWithOneAccountHasOneTransaction stamp: 'EMI 11/8/2020 18:00:31'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithMoreThanOneAccountHasMoreThanOneTransactions stamp: 'EMI 11/8/2020 18:00:31'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioHasOneChildPortfolioWithAnAccountAndADeposit stamp: 'EMI 11/8/2020 18:00:31'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioHasMoreThanOneChildPortfolioWithAnAccountAndADeposit stamp: 'EMI 11/8/2020 18:00:31'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioHasOneChildPortfolioWithAnAccountAndADepositRegistered stamp: 'EMI 11/8/2020 18:00:31'!
PASSED!

!testRun: #PortfolioTest #test12bisPortfolioHasOneGrandChildPortfolioWithAnAccountAndADepositRegistered stamp: 'EMI 11/8/2020 18:00:31'!
PASSED!

!testRun: #PortfolioTest #test13bisPortfolioHasMoreThanOneGrandChildPortfolioWithAnAccountAndADepositRegistered stamp: 'EMI 11/8/2020 18:00:31'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioCannotAddSameEmptyAssetTwice stamp: 'EMI 11/8/2020 18:00:31'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCannotAddChildPortfolioWithSameAccount stamp: 'EMI 11/8/2020 18:00:31'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioCannotAddBothChildrenPortfoliosWithSameAccount stamp: 'EMI 11/8/2020 18:00:31'!
PASSED!

!testRun: #PortfolioTest #test17PortfolioWith2ChildrenPortfoliosCannotAddAThirdWithSameAccount stamp: 'EMI 11/8/2020 18:00:31'!
PASSED!

!testRun: #PortfolioTest #test18TwoDisjointPortfoliosCanUseSameAccount stamp: 'EMI 11/8/2020 18:00:31'!
PASSED!

!testRun: #PortfolioTest #test19CannotUniteTwoDisjointPortfoliosWithSameAccount stamp: 'EMI 11/8/2020 18:00:31'!
PASSED!

!testRun: #PortfolioTest #test20TwoDisjointPortfoliosCanHaveSameChildPortfolio stamp: 'EMI 11/8/2020 18:00:31'!
PASSED!

!testRun: #PortfolioTest #test21CannotUniteTwoDisjointPortfoliosWithSameChildPortfolio stamp: 'EMI 11/8/2020 18:00:31'!
PASSED!

!testRun: #PortfolioTest #test22PortfolioCannotAddBothGrandChildrenPortfoliosWithSameAccount stamp: 'EMI 11/8/2020 18:00:31'!
PASSED!

!testRun: #PortfolioTest #test23PortfolioCannotAddGrandChildPortfolioWithSameAccountAsChild stamp: 'EMI 11/8/2020 18:00:31'!
PASSED!

!testRun: #PortfolioTest #test24PortfolioWith2ChildrenPortfoliosCannotAddAThirdWithAParentWithSameAccount stamp: 'EMI 11/8/2020 18:00:31'!
PASSED!

!testRun: #PortfolioTest #test25PortfolioWith2GrandChildrenPortfoliosCannotAddAThirdWithAGrandParentWithSameAccount stamp: 'EMI 11/8/2020 18:00:31'!
PASSED!
!PortfolioTest methodsFor: 'tests tree structure' stamp: 'EMI 11/8/2020 18:01:12' prior: 50897717!
test12PortfolioHasOneChildPortfolioWithAnAccountAndADepositRegistered
	| portfolio portfolioChild account transaction |
	portfolio _ Portfolio new.
	portfolioChild _ Portfolio new.
	account _  ReceptiveAccount new.
	transaction _ Deposit register: 100 on: account. 
	
	self assertAdd: account To: portfolioChild.
	self assertAdd: portfolioChild To: portfolio.
	self assert: (portfolio hasRegistered: transaction).
	self assert: (portfolio transactions size) equals: 1.
	self assert: (portfolio transactions includes: transaction).

	 
! !

!testRun: #PortfolioTest #test12PortfolioHasOneChildPortfolioWithAnAccountAndADepositRegistered stamp: 'EMI 11/8/2020 18:01:14'!
PASSED!

!testRun: #PortfolioTest #test01NewPortfolioHasNoAccountsAndNoPortfolios stamp: 'EMI 11/8/2020 18:01:14'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioAddEmptyAccount stamp: 'EMI 11/8/2020 18:01:14'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioAddEmptyPortfolio stamp: 'EMI 11/8/2020 18:01:14'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioHasNoRegisteredTransactions stamp: 'EMI 11/8/2020 18:01:14'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasOneAccountWithOneRegisteredTransaction stamp: 'EMI 11/8/2020 18:01:14'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioMoreThanOneAccountWithRegisteredTransactions stamp: 'EMI 11/8/2020 18:01:14'!
PASSED!

!testRun: #PortfolioTest #test07EmptyPortfolioHasNoTransactions stamp: 'EMI 11/8/2020 18:01:14'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioWithOneAccountHasOneTransaction stamp: 'EMI 11/8/2020 18:01:14'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithMoreThanOneAccountHasMoreThanOneTransactions stamp: 'EMI 11/8/2020 18:01:14'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioHasOneChildPortfolioWithAnAccountAndADeposit stamp: 'EMI 11/8/2020 18:01:14'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioHasMoreThanOneChildPortfolioWithAnAccountAndADeposit stamp: 'EMI 11/8/2020 18:01:14'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioHasOneChildPortfolioWithAnAccountAndADepositRegistered stamp: 'EMI 11/8/2020 18:01:14'!
PASSED!

!testRun: #PortfolioTest #test12bisPortfolioHasOneGrandChildPortfolioWithAnAccountAndADepositRegistered stamp: 'EMI 11/8/2020 18:01:14'!
PASSED!

!testRun: #PortfolioTest #test13bisPortfolioHasMoreThanOneGrandChildPortfolioWithAnAccountAndADepositRegistered stamp: 'EMI 11/8/2020 18:01:14'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioCannotAddSameEmptyAssetTwice stamp: 'EMI 11/8/2020 18:01:14'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCannotAddChildPortfolioWithSameAccount stamp: 'EMI 11/8/2020 18:01:14'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioCannotAddBothChildrenPortfoliosWithSameAccount stamp: 'EMI 11/8/2020 18:01:14'!
PASSED!

!testRun: #PortfolioTest #test17PortfolioWith2ChildrenPortfoliosCannotAddAThirdWithSameAccount stamp: 'EMI 11/8/2020 18:01:14'!
PASSED!

!testRun: #PortfolioTest #test18TwoDisjointPortfoliosCanUseSameAccount stamp: 'EMI 11/8/2020 18:01:14'!
PASSED!

!testRun: #PortfolioTest #test19CannotUniteTwoDisjointPortfoliosWithSameAccount stamp: 'EMI 11/8/2020 18:01:14'!
PASSED!

!testRun: #PortfolioTest #test20TwoDisjointPortfoliosCanHaveSameChildPortfolio stamp: 'EMI 11/8/2020 18:01:14'!
PASSED!

!testRun: #PortfolioTest #test21CannotUniteTwoDisjointPortfoliosWithSameChildPortfolio stamp: 'EMI 11/8/2020 18:01:14'!
PASSED!

!testRun: #PortfolioTest #test22PortfolioCannotAddBothGrandChildrenPortfoliosWithSameAccount stamp: 'EMI 11/8/2020 18:01:14'!
PASSED!

!testRun: #PortfolioTest #test23PortfolioCannotAddGrandChildPortfolioWithSameAccountAsChild stamp: 'EMI 11/8/2020 18:01:14'!
PASSED!

!testRun: #PortfolioTest #test24PortfolioWith2ChildrenPortfoliosCannotAddAThirdWithAParentWithSameAccount stamp: 'EMI 11/8/2020 18:01:14'!
PASSED!

!testRun: #PortfolioTest #test25PortfolioWith2GrandChildrenPortfoliosCannotAddAThirdWithAGrandParentWithSameAccount stamp: 'EMI 11/8/2020 18:01:14'!
PASSED!
!PortfolioTest methodsFor: 'tests tree structure' stamp: 'EMI 11/8/2020 18:01:33' prior: 50901214!
test12PortfolioHasOneChildPortfolioWithAnAccountAndADepositRegistered
	| portfolio portfolioChild account transaction |
	portfolio _ Portfolio new.
	portfolioChild _ Portfolio new.
	account _  ReceptiveAccount new.
	transaction _ Deposit register: 100 on: account. 
	
	self assertAdd: account To: portfolioChild.
	self assertAdd: portfolioChild To: portfolio.
	self assert: portfolio balance equals: 100.
	self assert: (portfolio hasRegistered: transaction).
	self assert: (portfolio transactions size) equals: 1.
	self assert: (portfolio transactions includes: transaction).

	 
! !
!PortfolioTest methodsFor: 'tests tree structure' stamp: 'EMI 11/8/2020 18:02:18' prior: 50900283!
test12bisPortfolioHasOneGrandChildPortfolioWithAnAccountAndADepositRegistered
	| portfolio portfolioChild portfolioGrandChild account transaction |
	portfolio _ Portfolio new.
	portfolioChild _ Portfolio new.
	portfolioGrandChild _ Portfolio new.
	account _  ReceptiveAccount new.
	transaction _ Deposit register: 100 on: account. 
	
	self assertAdd: account To: portfolioGrandChild.
	self assertAdd: portfolioGrandChild To: portfolioChild.
	self assertAdd: portfolioChild To: portfolio.
	self assert: (portfolio balance ) equals: 100.
	self assert: (portfolio hasRegistered: transaction).
	self assert: (portfolio transactions size) equals: 1.
	self assert: (portfolio transactions includes: transaction).

	 
! !

!testRun: #PortfolioTest #test12bisPortfolioHasOneGrandChildPortfolioWithAnAccountAndADepositRegistered stamp: 'EMI 11/8/2020 18:02:19'!
PASSED!

!testRun: #PortfolioTest #test01NewPortfolioHasNoAccountsAndNoPortfolios stamp: 'EMI 11/8/2020 18:02:19'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioAddEmptyAccount stamp: 'EMI 11/8/2020 18:02:19'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioAddEmptyPortfolio stamp: 'EMI 11/8/2020 18:02:19'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioHasNoRegisteredTransactions stamp: 'EMI 11/8/2020 18:02:19'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasOneAccountWithOneRegisteredTransaction stamp: 'EMI 11/8/2020 18:02:19'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioMoreThanOneAccountWithRegisteredTransactions stamp: 'EMI 11/8/2020 18:02:19'!
PASSED!

!testRun: #PortfolioTest #test07EmptyPortfolioHasNoTransactions stamp: 'EMI 11/8/2020 18:02:19'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioWithOneAccountHasOneTransaction stamp: 'EMI 11/8/2020 18:02:19'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithMoreThanOneAccountHasMoreThanOneTransactions stamp: 'EMI 11/8/2020 18:02:19'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioHasOneChildPortfolioWithAnAccountAndADeposit stamp: 'EMI 11/8/2020 18:02:19'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioHasMoreThanOneChildPortfolioWithAnAccountAndADeposit stamp: 'EMI 11/8/2020 18:02:19'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioHasOneChildPortfolioWithAnAccountAndADepositRegistered stamp: 'EMI 11/8/2020 18:02:19'!
PASSED!

!testRun: #PortfolioTest #test12bisPortfolioHasOneGrandChildPortfolioWithAnAccountAndADepositRegistered stamp: 'EMI 11/8/2020 18:02:19'!
PASSED!

!testRun: #PortfolioTest #test13bisPortfolioHasMoreThanOneGrandChildPortfolioWithAnAccountAndADepositRegistered stamp: 'EMI 11/8/2020 18:02:19'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioCannotAddSameEmptyAssetTwice stamp: 'EMI 11/8/2020 18:02:19'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCannotAddChildPortfolioWithSameAccount stamp: 'EMI 11/8/2020 18:02:19'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioCannotAddBothChildrenPortfoliosWithSameAccount stamp: 'EMI 11/8/2020 18:02:19'!
PASSED!

!testRun: #PortfolioTest #test17PortfolioWith2ChildrenPortfoliosCannotAddAThirdWithSameAccount stamp: 'EMI 11/8/2020 18:02:19'!
PASSED!

!testRun: #PortfolioTest #test18TwoDisjointPortfoliosCanUseSameAccount stamp: 'EMI 11/8/2020 18:02:19'!
PASSED!

!testRun: #PortfolioTest #test19CannotUniteTwoDisjointPortfoliosWithSameAccount stamp: 'EMI 11/8/2020 18:02:19'!
PASSED!

!testRun: #PortfolioTest #test20TwoDisjointPortfoliosCanHaveSameChildPortfolio stamp: 'EMI 11/8/2020 18:02:19'!
PASSED!

!testRun: #PortfolioTest #test21CannotUniteTwoDisjointPortfoliosWithSameChildPortfolio stamp: 'EMI 11/8/2020 18:02:19'!
PASSED!

!testRun: #PortfolioTest #test22PortfolioCannotAddBothGrandChildrenPortfoliosWithSameAccount stamp: 'EMI 11/8/2020 18:02:19'!
PASSED!

!testRun: #PortfolioTest #test23PortfolioCannotAddGrandChildPortfolioWithSameAccountAsChild stamp: 'EMI 11/8/2020 18:02:19'!
PASSED!

!testRun: #PortfolioTest #test24PortfolioWith2ChildrenPortfoliosCannotAddAThirdWithAParentWithSameAccount stamp: 'EMI 11/8/2020 18:02:19'!
PASSED!

!testRun: #PortfolioTest #test25PortfolioWith2GrandChildrenPortfoliosCannotAddAThirdWithAGrandParentWithSameAccount stamp: 'EMI 11/8/2020 18:02:19'!
PASSED!
!PortfolioTest methodsFor: 'tests tree structure' stamp: 'EMI 11/8/2020 18:03:54' prior: 50900376!
test13bisPortfolioHasMoreThanOneGrandChildPortfolioWithAnAccountAndADepositRegistered
	| portfolio portfolioChild portfolioGrandChildLeft  portfolioGrandChildRight account1 account2 transaction1 transaction2|
	portfolio _ Portfolio new.
	portfolioChild _ Portfolio new.
	portfolioGrandChildLeft _ Portfolio new.
	portfolioGrandChildRight _ Portfolio new.
	account1 _  ReceptiveAccount new.
	account2 _  ReceptiveAccount new.
	transaction1 _ Deposit register: 100 on: account1.
	transaction2 _ Deposit register: 100 on: account2.
	.
	self assertAdd: account1 To: portfolioGrandChildLeft.
	self assertAdd: account2 To: portfolioGrandChildRight.
	self assertAdd: portfolioGrandChildLeft To: portfolioChild.
	self assertAdd: portfolioGrandChildRight To: portfolioChild.
	self assertAdd: portfolioChild To: portfolio.
	self assert: (portfolio balance ) equals: 200.
	self assert: (portfolio hasRegistered: transaction1).
	self assert: (portfolio hasRegistered: transaction2).
	self assert: (portfolio transactions size) equals: 2.
	self assert: (portfolio transactions includes: transaction1).
	self assert: (portfolio transactions includes: transaction2).
	 
! !

!testRun: #PortfolioTest #test13bisPortfolioHasMoreThanOneGrandChildPortfolioWithAnAccountAndADepositRegistered stamp: 'EMI 11/8/2020 18:03:55'!
PASSED!

!testRun: #PortfolioTest #test01NewPortfolioHasNoAccountsAndNoPortfolios stamp: 'EMI 11/8/2020 18:03:55'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioAddEmptyAccount stamp: 'EMI 11/8/2020 18:03:55'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioAddEmptyPortfolio stamp: 'EMI 11/8/2020 18:03:55'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioHasNoRegisteredTransactions stamp: 'EMI 11/8/2020 18:03:55'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasOneAccountWithOneRegisteredTransaction stamp: 'EMI 11/8/2020 18:03:55'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioMoreThanOneAccountWithRegisteredTransactions stamp: 'EMI 11/8/2020 18:03:55'!
PASSED!

!testRun: #PortfolioTest #test07EmptyPortfolioHasNoTransactions stamp: 'EMI 11/8/2020 18:03:55'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioWithOneAccountHasOneTransaction stamp: 'EMI 11/8/2020 18:03:55'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithMoreThanOneAccountHasMoreThanOneTransactions stamp: 'EMI 11/8/2020 18:03:55'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioHasOneChildPortfolioWithAnAccountAndADeposit stamp: 'EMI 11/8/2020 18:03:55'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioHasMoreThanOneChildPortfolioWithAnAccountAndADeposit stamp: 'EMI 11/8/2020 18:03:55'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioHasOneChildPortfolioWithAnAccountAndADepositRegistered stamp: 'EMI 11/8/2020 18:03:55'!
PASSED!

!testRun: #PortfolioTest #test12bisPortfolioHasOneGrandChildPortfolioWithAnAccountAndADepositRegistered stamp: 'EMI 11/8/2020 18:03:55'!
PASSED!

!testRun: #PortfolioTest #test13bisPortfolioHasMoreThanOneGrandChildPortfolioWithAnAccountAndADepositRegistered stamp: 'EMI 11/8/2020 18:03:55'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioCannotAddSameEmptyAssetTwice stamp: 'EMI 11/8/2020 18:03:55'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCannotAddChildPortfolioWithSameAccount stamp: 'EMI 11/8/2020 18:03:55'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioCannotAddBothChildrenPortfoliosWithSameAccount stamp: 'EMI 11/8/2020 18:03:55'!
PASSED!

!testRun: #PortfolioTest #test17PortfolioWith2ChildrenPortfoliosCannotAddAThirdWithSameAccount stamp: 'EMI 11/8/2020 18:03:55'!
PASSED!

!testRun: #PortfolioTest #test18TwoDisjointPortfoliosCanUseSameAccount stamp: 'EMI 11/8/2020 18:03:55'!
PASSED!

!testRun: #PortfolioTest #test19CannotUniteTwoDisjointPortfoliosWithSameAccount stamp: 'EMI 11/8/2020 18:03:55'!
PASSED!

!testRun: #PortfolioTest #test20TwoDisjointPortfoliosCanHaveSameChildPortfolio stamp: 'EMI 11/8/2020 18:03:55'!
PASSED!

!testRun: #PortfolioTest #test21CannotUniteTwoDisjointPortfoliosWithSameChildPortfolio stamp: 'EMI 11/8/2020 18:03:55'!
PASSED!

!testRun: #PortfolioTest #test22PortfolioCannotAddBothGrandChildrenPortfoliosWithSameAccount stamp: 'EMI 11/8/2020 18:03:55'!
PASSED!

!testRun: #PortfolioTest #test23PortfolioCannotAddGrandChildPortfolioWithSameAccountAsChild stamp: 'EMI 11/8/2020 18:03:55'!
PASSED!

!testRun: #PortfolioTest #test24PortfolioWith2ChildrenPortfoliosCannotAddAThirdWithAParentWithSameAccount stamp: 'EMI 11/8/2020 18:03:55'!
PASSED!

!testRun: #PortfolioTest #test25PortfolioWith2GrandChildrenPortfoliosCannotAddAThirdWithAGrandParentWithSameAccount stamp: 'EMI 11/8/2020 18:03:55'!
PASSED!
!PortfolioTest methodsFor: 'tests tree structure' stamp: 'EMI 11/8/2020 18:05:01' prior: 50892685!
test14PortfolioCannotAddSameEmptyAssetTwice
	| portfolio portfolio2 account|
	portfolio _ Portfolio new.
	account _  ReceptiveAccount new.
	
	self assertAdd: account To: portfolio.
	self denyAdd: account To: portfolio.
	
	portfolio2 _ Portfolio new.
	
	self assertAdd: portfolio2 To: portfolio.
	self denyAdd: portfolio2 To: portfolio.


	 
! !

!testRun: #PortfolioTest #test14PortfolioCannotAddSameEmptyAssetTwice stamp: 'EMI 11/8/2020 18:05:02'!
PASSED!

!testRun: #PortfolioTest #test01NewPortfolioHasNoAccountsAndNoPortfolios stamp: 'EMI 11/8/2020 18:05:02'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioAddEmptyAccount stamp: 'EMI 11/8/2020 18:05:02'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioAddEmptyPortfolio stamp: 'EMI 11/8/2020 18:05:02'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioHasNoRegisteredTransactions stamp: 'EMI 11/8/2020 18:05:02'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasOneAccountWithOneRegisteredTransaction stamp: 'EMI 11/8/2020 18:05:02'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioMoreThanOneAccountWithRegisteredTransactions stamp: 'EMI 11/8/2020 18:05:02'!
PASSED!

!testRun: #PortfolioTest #test07EmptyPortfolioHasNoTransactions stamp: 'EMI 11/8/2020 18:05:02'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioWithOneAccountHasOneTransaction stamp: 'EMI 11/8/2020 18:05:02'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithMoreThanOneAccountHasMoreThanOneTransactions stamp: 'EMI 11/8/2020 18:05:02'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioHasOneChildPortfolioWithAnAccountAndADeposit stamp: 'EMI 11/8/2020 18:05:02'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioHasMoreThanOneChildPortfolioWithAnAccountAndADeposit stamp: 'EMI 11/8/2020 18:05:02'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioHasOneChildPortfolioWithAnAccountAndADepositRegistered stamp: 'EMI 11/8/2020 18:05:02'!
PASSED!

!testRun: #PortfolioTest #test12bisPortfolioHasOneGrandChildPortfolioWithAnAccountAndADepositRegistered stamp: 'EMI 11/8/2020 18:05:02'!
PASSED!

!testRun: #PortfolioTest #test13bisPortfolioHasMoreThanOneGrandChildPortfolioWithAnAccountAndADepositRegistered stamp: 'EMI 11/8/2020 18:05:02'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioCannotAddSameEmptyAssetTwice stamp: 'EMI 11/8/2020 18:05:02'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCannotAddChildPortfolioWithSameAccount stamp: 'EMI 11/8/2020 18:05:02'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioCannotAddBothChildrenPortfoliosWithSameAccount stamp: 'EMI 11/8/2020 18:05:02'!
PASSED!

!testRun: #PortfolioTest #test17PortfolioWith2ChildrenPortfoliosCannotAddAThirdWithSameAccount stamp: 'EMI 11/8/2020 18:05:02'!
PASSED!

!testRun: #PortfolioTest #test18TwoDisjointPortfoliosCanUseSameAccount stamp: 'EMI 11/8/2020 18:05:02'!
PASSED!

!testRun: #PortfolioTest #test19CannotUniteTwoDisjointPortfoliosWithSameAccount stamp: 'EMI 11/8/2020 18:05:02'!
PASSED!

!testRun: #PortfolioTest #test20TwoDisjointPortfoliosCanHaveSameChildPortfolio stamp: 'EMI 11/8/2020 18:05:02'!
PASSED!

!testRun: #PortfolioTest #test21CannotUniteTwoDisjointPortfoliosWithSameChildPortfolio stamp: 'EMI 11/8/2020 18:05:02'!
PASSED!

!testRun: #PortfolioTest #test22PortfolioCannotAddBothGrandChildrenPortfoliosWithSameAccount stamp: 'EMI 11/8/2020 18:05:02'!
PASSED!

!testRun: #PortfolioTest #test23PortfolioCannotAddGrandChildPortfolioWithSameAccountAsChild stamp: 'EMI 11/8/2020 18:05:02'!
PASSED!

!testRun: #PortfolioTest #test24PortfolioWith2ChildrenPortfoliosCannotAddAThirdWithAParentWithSameAccount stamp: 'EMI 11/8/2020 18:05:02'!
PASSED!

!testRun: #PortfolioTest #test25PortfolioWith2GrandChildrenPortfoliosCannotAddAThirdWithAGrandParentWithSameAccount stamp: 'EMI 11/8/2020 18:05:02'!
PASSED!
!PortfolioTest methodsFor: 'tests tree structure' stamp: 'EMI 11/8/2020 18:06:33' prior: 50892726!
test15PortfolioCannotAddChildPortfolioWithSameAccount
	| portfolio portfolio2 account|
	portfolio _ Portfolio new.
	account _  ReceptiveAccount new.
	self assertAdd: account To: portfolio.
	
	portfolio2 _ Portfolio new.
	self assertAdd: account To: portfolio2.
	
	self denyAdd: portfolio2 To: portfolio.


	 
! !
!PortfolioTest methodsFor: 'tests tree structure' stamp: 'EMI 11/8/2020 18:07:02' prior: 50898004!
test16PortfolioCannotAddBothChildrenPortfoliosWithSameAccount
	| portfolio portfolioChildLeft portfolioChildRight account|
	portfolio _ Portfolio new.
	account _  ReceptiveAccount new.
	
	portfolioChildLeft _ Portfolio new.
	self assertAdd: account To: portfolioChildLeft.
	
	portfolioChildRight _ Portfolio new.
	self assert: (portfolioChildRight add: account).
	
	self assert: (portfolio add: portfolioChildLeft).
	self deny: (portfolio add: portfolioChildRight).


	 
! !
!PortfolioTest methodsFor: 'tests tree structure' stamp: 'EMI 11/8/2020 18:07:40' prior: 50901779!
test16PortfolioCannotAddBothChildrenPortfoliosWithSameAccount
	| portfolio portfolioChildLeft portfolioChildRight account|
	portfolio _ Portfolio new.
	account _  ReceptiveAccount new.
	
	portfolioChildLeft _ Portfolio new.
	self assertAdd: account To: portfolioChildLeft.
	
	portfolioChildRight _ Portfolio new.
	self assertAdd: account To: portfolioChildRight.
	
	self assert: (portfolio add: portfolioChildLeft).
	self deny: (portfolio add: portfolioChildRight).


	 
! !
!PortfolioTest methodsFor: 'tests tree structure' stamp: 'EMI 11/8/2020 18:08:22' prior: 50901797!
test16PortfolioCannotAddBothChildrenPortfoliosWithSameAccount
	| portfolio portfolioChildLeft portfolioChildRight account|
	portfolio _ Portfolio new.
	account _  ReceptiveAccount new.
	
	portfolioChildLeft _ Portfolio new.
	self assertAdd: account To: portfolioChildLeft.
	
	portfolioChildRight _ Portfolio new.
	self assertAdd: account To: portfolioChildRight.
	
	self assertAdd: portfolioChildLeft To: portfolio.
	self denyAdd: portfolioChildRight To: portfolio.



	 
! !

!testRun: #PortfolioTest #test16PortfolioCannotAddBothChildrenPortfoliosWithSameAccount stamp: 'EMI 11/8/2020 18:08:22'!
PASSED!

!testRun: #PortfolioTest #test01NewPortfolioHasNoAccountsAndNoPortfolios stamp: 'EMI 11/8/2020 18:08:22'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioAddEmptyAccount stamp: 'EMI 11/8/2020 18:08:22'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioAddEmptyPortfolio stamp: 'EMI 11/8/2020 18:08:22'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioHasNoRegisteredTransactions stamp: 'EMI 11/8/2020 18:08:22'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasOneAccountWithOneRegisteredTransaction stamp: 'EMI 11/8/2020 18:08:22'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioMoreThanOneAccountWithRegisteredTransactions stamp: 'EMI 11/8/2020 18:08:22'!
PASSED!

!testRun: #PortfolioTest #test07EmptyPortfolioHasNoTransactions stamp: 'EMI 11/8/2020 18:08:22'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioWithOneAccountHasOneTransaction stamp: 'EMI 11/8/2020 18:08:22'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithMoreThanOneAccountHasMoreThanOneTransactions stamp: 'EMI 11/8/2020 18:08:22'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioHasOneChildPortfolioWithAnAccountAndADeposit stamp: 'EMI 11/8/2020 18:08:22'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioHasMoreThanOneChildPortfolioWithAnAccountAndADeposit stamp: 'EMI 11/8/2020 18:08:22'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioHasOneChildPortfolioWithAnAccountAndADepositRegistered stamp: 'EMI 11/8/2020 18:08:22'!
PASSED!

!testRun: #PortfolioTest #test12bisPortfolioHasOneGrandChildPortfolioWithAnAccountAndADepositRegistered stamp: 'EMI 11/8/2020 18:08:22'!
PASSED!

!testRun: #PortfolioTest #test13bisPortfolioHasMoreThanOneGrandChildPortfolioWithAnAccountAndADepositRegistered stamp: 'EMI 11/8/2020 18:08:22'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioCannotAddSameEmptyAssetTwice stamp: 'EMI 11/8/2020 18:08:22'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCannotAddChildPortfolioWithSameAccount stamp: 'EMI 11/8/2020 18:08:22'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioCannotAddBothChildrenPortfoliosWithSameAccount stamp: 'EMI 11/8/2020 18:08:22'!
PASSED!

!testRun: #PortfolioTest #test17PortfolioWith2ChildrenPortfoliosCannotAddAThirdWithSameAccount stamp: 'EMI 11/8/2020 18:08:22'!
PASSED!

!testRun: #PortfolioTest #test18TwoDisjointPortfoliosCanUseSameAccount stamp: 'EMI 11/8/2020 18:08:22'!
PASSED!

!testRun: #PortfolioTest #test19CannotUniteTwoDisjointPortfoliosWithSameAccount stamp: 'EMI 11/8/2020 18:08:22'!
PASSED!

!testRun: #PortfolioTest #test20TwoDisjointPortfoliosCanHaveSameChildPortfolio stamp: 'EMI 11/8/2020 18:08:22'!
PASSED!

!testRun: #PortfolioTest #test21CannotUniteTwoDisjointPortfoliosWithSameChildPortfolio stamp: 'EMI 11/8/2020 18:08:22'!
PASSED!

!testRun: #PortfolioTest #test22PortfolioCannotAddBothGrandChildrenPortfoliosWithSameAccount stamp: 'EMI 11/8/2020 18:08:22'!
PASSED!

!testRun: #PortfolioTest #test23PortfolioCannotAddGrandChildPortfolioWithSameAccountAsChild stamp: 'EMI 11/8/2020 18:08:22'!
PASSED!

!testRun: #PortfolioTest #test24PortfolioWith2ChildrenPortfoliosCannotAddAThirdWithAParentWithSameAccount stamp: 'EMI 11/8/2020 18:08:22'!
PASSED!

!testRun: #PortfolioTest #test25PortfolioWith2GrandChildrenPortfoliosCannotAddAThirdWithAGrandParentWithSameAccount stamp: 'EMI 11/8/2020 18:08:22'!
PASSED!
!PortfolioTest methodsFor: 'tests tree structure' stamp: 'EMI 11/8/2020 18:09:03' prior: 50899782!
test17PortfolioWith2ChildrenPortfoliosCannotAddAThirdWithSameAccount
	| portfolioRoot portfolioChildWithAccount portfolioChildWithoutAccount portfolioToAddWithSameAccount account|
	portfolioRoot _ Portfolio new.
	account _  ReceptiveAccount new.
	
	portfolioChildWithoutAccount _ Portfolio new.
	
	portfolioChildWithAccount _ Portfolio new.
	self assertAdd: account To: portfolioChildWithAccount.
	
	portfolioToAddWithSameAccount _ Portfolio new.
	self assertAdd: account To: portfolioToAddWithSameAccount.
	
	self assert: (portfolioRoot add: portfolioChildWithoutAccount).
	self assert: (portfolioRoot add: portfolioChildWithAccount).
	self deny: (portfolioRoot add: portfolioToAddWithSameAccount).


	 
! !
!PortfolioTest methodsFor: 'tests tree structure' stamp: 'EMI 11/8/2020 18:09:55' prior: 50901940!
test17PortfolioWith2ChildrenPortfoliosCannotAddAThirdWithSameAccount
	| portfolioRoot portfolioChildWithAccount portfolioChildWithoutAccount portfolioToAddWithSameAccount account|
	portfolioRoot _ Portfolio new.
	account _  ReceptiveAccount new.
	
	portfolioChildWithoutAccount _ Portfolio new.
	
	portfolioChildWithAccount _ Portfolio new.
	self assertAdd: account To: portfolioChildWithAccount.
	
	portfolioToAddWithSameAccount _ Portfolio new.
	self assertAdd: account To: portfolioToAddWithSameAccount.
	
	self assertAdd: portfolioChildWithoutAccount To: portfolioRoot.
	self assertAdd: portfolioChildWithAccount To: portfolioRoot.
	self denyAdd: portfolioToAddWithSameAccount To: portfolioRoot.



	 
! !

!testRun: #PortfolioTest #test17PortfolioWith2ChildrenPortfoliosCannotAddAThirdWithSameAccount stamp: 'EMI 11/8/2020 18:09:57'!
PASSED!

!testRun: #PortfolioTest #test01NewPortfolioHasNoAccountsAndNoPortfolios stamp: 'EMI 11/8/2020 18:09:57'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioAddEmptyAccount stamp: 'EMI 11/8/2020 18:09:57'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioAddEmptyPortfolio stamp: 'EMI 11/8/2020 18:09:57'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioHasNoRegisteredTransactions stamp: 'EMI 11/8/2020 18:09:57'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasOneAccountWithOneRegisteredTransaction stamp: 'EMI 11/8/2020 18:09:57'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioMoreThanOneAccountWithRegisteredTransactions stamp: 'EMI 11/8/2020 18:09:57'!
PASSED!

!testRun: #PortfolioTest #test07EmptyPortfolioHasNoTransactions stamp: 'EMI 11/8/2020 18:09:57'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioWithOneAccountHasOneTransaction stamp: 'EMI 11/8/2020 18:09:57'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithMoreThanOneAccountHasMoreThanOneTransactions stamp: 'EMI 11/8/2020 18:09:57'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioHasOneChildPortfolioWithAnAccountAndADeposit stamp: 'EMI 11/8/2020 18:09:57'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioHasMoreThanOneChildPortfolioWithAnAccountAndADeposit stamp: 'EMI 11/8/2020 18:09:57'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioHasOneChildPortfolioWithAnAccountAndADepositRegistered stamp: 'EMI 11/8/2020 18:09:57'!
PASSED!

!testRun: #PortfolioTest #test12bisPortfolioHasOneGrandChildPortfolioWithAnAccountAndADepositRegistered stamp: 'EMI 11/8/2020 18:09:57'!
PASSED!

!testRun: #PortfolioTest #test13bisPortfolioHasMoreThanOneGrandChildPortfolioWithAnAccountAndADepositRegistered stamp: 'EMI 11/8/2020 18:09:57'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioCannotAddSameEmptyAssetTwice stamp: 'EMI 11/8/2020 18:09:57'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCannotAddChildPortfolioWithSameAccount stamp: 'EMI 11/8/2020 18:09:57'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioCannotAddBothChildrenPortfoliosWithSameAccount stamp: 'EMI 11/8/2020 18:09:57'!
PASSED!

!testRun: #PortfolioTest #test17PortfolioWith2ChildrenPortfoliosCannotAddAThirdWithSameAccount stamp: 'EMI 11/8/2020 18:09:57'!
PASSED!

!testRun: #PortfolioTest #test18TwoDisjointPortfoliosCanUseSameAccount stamp: 'EMI 11/8/2020 18:09:57'!
PASSED!

!testRun: #PortfolioTest #test19CannotUniteTwoDisjointPortfoliosWithSameAccount stamp: 'EMI 11/8/2020 18:09:57'!
PASSED!

!testRun: #PortfolioTest #test20TwoDisjointPortfoliosCanHaveSameChildPortfolio stamp: 'EMI 11/8/2020 18:09:57'!
PASSED!

!testRun: #PortfolioTest #test21CannotUniteTwoDisjointPortfoliosWithSameChildPortfolio stamp: 'EMI 11/8/2020 18:09:57'!
PASSED!

!testRun: #PortfolioTest #test22PortfolioCannotAddBothGrandChildrenPortfoliosWithSameAccount stamp: 'EMI 11/8/2020 18:09:57'!
PASSED!

!testRun: #PortfolioTest #test23PortfolioCannotAddGrandChildPortfolioWithSameAccountAsChild stamp: 'EMI 11/8/2020 18:09:57'!
PASSED!

!testRun: #PortfolioTest #test24PortfolioWith2ChildrenPortfoliosCannotAddAThirdWithAParentWithSameAccount stamp: 'EMI 11/8/2020 18:09:57'!
PASSED!

!testRun: #PortfolioTest #test25PortfolioWith2GrandChildrenPortfoliosCannotAddAThirdWithAGrandParentWithSameAccount stamp: 'EMI 11/8/2020 18:09:57'!
PASSED!
!PortfolioTest methodsFor: 'tests tree structure' stamp: 'EMI 11/8/2020 18:10:29' prior: 50899834!
test18TwoDisjointPortfoliosCanUseSameAccount
	| portfolio portfolio2 account|
	
	portfolio _ Portfolio new.
	portfolio2 _ Portfolio new.
	account _ ReceptiveAccount new.
	
	self assertAdd: account To: portfolio.
	self assertAdd: account To: portfolio2.
	self assert: account parentAssets includes: portfolio.
	self assert: account parentAssets includes: portfolio2.
	


	 
! !
!PortfolioTest methodsFor: 'tests tree structure' stamp: 'EMI 11/8/2020 18:11:27' prior: 50899864!
test19CannotUniteTwoDisjointPortfoliosWithSameAccount
	| portfolio portfolio2 portfolioRoot account|
	
	portfolio _ Portfolio new.
	portfolio2 _ Portfolio new.
	portfolioRoot _ Portfolio new.
	account _ ReceptiveAccount new.
	
	self assertAdd: account To: portfolio.
	self assertAdd: account To: portfolio2.
	self assertAdd: portfolio To: portfolioRoot.
	self denyAdd: portfolio2 To: portfolioRoot.


	 
! !

!testRun: #PortfolioTest #test19CannotUniteTwoDisjointPortfoliosWithSameAccount stamp: 'EMI 11/8/2020 18:11:29'!
PASSED!

!testRun: #PortfolioTest #test01NewPortfolioHasNoAccountsAndNoPortfolios stamp: 'EMI 11/8/2020 18:11:29'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioAddEmptyAccount stamp: 'EMI 11/8/2020 18:11:29'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioAddEmptyPortfolio stamp: 'EMI 11/8/2020 18:11:29'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioHasNoRegisteredTransactions stamp: 'EMI 11/8/2020 18:11:29'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasOneAccountWithOneRegisteredTransaction stamp: 'EMI 11/8/2020 18:11:29'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioMoreThanOneAccountWithRegisteredTransactions stamp: 'EMI 11/8/2020 18:11:29'!
PASSED!

!testRun: #PortfolioTest #test07EmptyPortfolioHasNoTransactions stamp: 'EMI 11/8/2020 18:11:29'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioWithOneAccountHasOneTransaction stamp: 'EMI 11/8/2020 18:11:29'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithMoreThanOneAccountHasMoreThanOneTransactions stamp: 'EMI 11/8/2020 18:11:29'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioHasOneChildPortfolioWithAnAccountAndADeposit stamp: 'EMI 11/8/2020 18:11:29'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioHasMoreThanOneChildPortfolioWithAnAccountAndADeposit stamp: 'EMI 11/8/2020 18:11:29'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioHasOneChildPortfolioWithAnAccountAndADepositRegistered stamp: 'EMI 11/8/2020 18:11:29'!
PASSED!

!testRun: #PortfolioTest #test12bisPortfolioHasOneGrandChildPortfolioWithAnAccountAndADepositRegistered stamp: 'EMI 11/8/2020 18:11:29'!
PASSED!

!testRun: #PortfolioTest #test13bisPortfolioHasMoreThanOneGrandChildPortfolioWithAnAccountAndADepositRegistered stamp: 'EMI 11/8/2020 18:11:29'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioCannotAddSameEmptyAssetTwice stamp: 'EMI 11/8/2020 18:11:29'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCannotAddChildPortfolioWithSameAccount stamp: 'EMI 11/8/2020 18:11:29'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioCannotAddBothChildrenPortfoliosWithSameAccount stamp: 'EMI 11/8/2020 18:11:29'!
PASSED!

!testRun: #PortfolioTest #test17PortfolioWith2ChildrenPortfoliosCannotAddAThirdWithSameAccount stamp: 'EMI 11/8/2020 18:11:29'!
PASSED!

!testRun: #PortfolioTest #test18TwoDisjointPortfoliosCanUseSameAccount stamp: 'EMI 11/8/2020 18:11:29'!
PASSED!

!testRun: #PortfolioTest #test19CannotUniteTwoDisjointPortfoliosWithSameAccount stamp: 'EMI 11/8/2020 18:11:29'!
PASSED!

!testRun: #PortfolioTest #test20TwoDisjointPortfoliosCanHaveSameChildPortfolio stamp: 'EMI 11/8/2020 18:11:29'!
PASSED!

!testRun: #PortfolioTest #test21CannotUniteTwoDisjointPortfoliosWithSameChildPortfolio stamp: 'EMI 11/8/2020 18:11:29'!
PASSED!

!testRun: #PortfolioTest #test22PortfolioCannotAddBothGrandChildrenPortfoliosWithSameAccount stamp: 'EMI 11/8/2020 18:11:29'!
PASSED!

!testRun: #PortfolioTest #test23PortfolioCannotAddGrandChildPortfolioWithSameAccountAsChild stamp: 'EMI 11/8/2020 18:11:29'!
PASSED!

!testRun: #PortfolioTest #test24PortfolioWith2ChildrenPortfoliosCannotAddAThirdWithAParentWithSameAccount stamp: 'EMI 11/8/2020 18:11:29'!
PASSED!

!testRun: #PortfolioTest #test25PortfolioWith2GrandChildrenPortfoliosCannotAddAThirdWithAGrandParentWithSameAccount stamp: 'EMI 11/8/2020 18:11:29'!
PASSED!
!PortfolioTest methodsFor: 'tests tree structure' stamp: 'EMI 11/8/2020 18:11:58' prior: 50899897!
test20TwoDisjointPortfoliosCanHaveSameChildPortfolio
	| portfolio portfolio2 portfolioChild|
	
	portfolio _ Portfolio new.
	portfolio2 _ Portfolio new.
	portfolioChild _ Portfolio new.
	
	self assertAdd: portfolioChild To: portfolio.
	self assertAdd: portfolioChild To: portfolio2.
	self assert: portfolioChild parentAssets includes: portfolio.
	self assert: portfolioChild parentAssets includes: portfolio2.
	


	 
! !
!PortfolioTest methodsFor: 'tests tree structure' stamp: 'EMI 11/8/2020 18:13:09' prior: 50899930!
test21CannotUniteTwoDisjointPortfoliosWithSameChildPortfolio
	| portfolio portfolio2 portfolioRoot portfolioChild |
	
	portfolio _ Portfolio new.
	portfolio2 _ Portfolio new.
	portfolioRoot _ Portfolio new.
	portfolioChild _ Portfolio new.
	
	self assertAdd: portfolioChild To: portfolio.
	self assertAdd: portfolioChild To: portfolio2.
	self assertAdd:  portfolio To: portfolioRoot.
	self denyAdd: portfolio2 To: portfolioRoot.
	


	 
! !

!testRun: #PortfolioTest #test21CannotUniteTwoDisjointPortfoliosWithSameChildPortfolio stamp: 'EMI 11/8/2020 18:13:10'!
PASSED!

!testRun: #PortfolioTest #test01NewPortfolioHasNoAccountsAndNoPortfolios stamp: 'EMI 11/8/2020 18:13:10'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioAddEmptyAccount stamp: 'EMI 11/8/2020 18:13:10'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioAddEmptyPortfolio stamp: 'EMI 11/8/2020 18:13:10'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioHasNoRegisteredTransactions stamp: 'EMI 11/8/2020 18:13:10'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasOneAccountWithOneRegisteredTransaction stamp: 'EMI 11/8/2020 18:13:10'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioMoreThanOneAccountWithRegisteredTransactions stamp: 'EMI 11/8/2020 18:13:10'!
PASSED!

!testRun: #PortfolioTest #test07EmptyPortfolioHasNoTransactions stamp: 'EMI 11/8/2020 18:13:10'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioWithOneAccountHasOneTransaction stamp: 'EMI 11/8/2020 18:13:10'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithMoreThanOneAccountHasMoreThanOneTransactions stamp: 'EMI 11/8/2020 18:13:10'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioHasOneChildPortfolioWithAnAccountAndADeposit stamp: 'EMI 11/8/2020 18:13:10'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioHasMoreThanOneChildPortfolioWithAnAccountAndADeposit stamp: 'EMI 11/8/2020 18:13:10'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioHasOneChildPortfolioWithAnAccountAndADepositRegistered stamp: 'EMI 11/8/2020 18:13:10'!
PASSED!

!testRun: #PortfolioTest #test12bisPortfolioHasOneGrandChildPortfolioWithAnAccountAndADepositRegistered stamp: 'EMI 11/8/2020 18:13:10'!
PASSED!

!testRun: #PortfolioTest #test13bisPortfolioHasMoreThanOneGrandChildPortfolioWithAnAccountAndADepositRegistered stamp: 'EMI 11/8/2020 18:13:10'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioCannotAddSameEmptyAssetTwice stamp: 'EMI 11/8/2020 18:13:10'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCannotAddChildPortfolioWithSameAccount stamp: 'EMI 11/8/2020 18:13:10'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioCannotAddBothChildrenPortfoliosWithSameAccount stamp: 'EMI 11/8/2020 18:13:10'!
PASSED!

!testRun: #PortfolioTest #test17PortfolioWith2ChildrenPortfoliosCannotAddAThirdWithSameAccount stamp: 'EMI 11/8/2020 18:13:10'!
PASSED!

!testRun: #PortfolioTest #test18TwoDisjointPortfoliosCanUseSameAccount stamp: 'EMI 11/8/2020 18:13:10'!
PASSED!

!testRun: #PortfolioTest #test19CannotUniteTwoDisjointPortfoliosWithSameAccount stamp: 'EMI 11/8/2020 18:13:10'!
PASSED!

!testRun: #PortfolioTest #test20TwoDisjointPortfoliosCanHaveSameChildPortfolio stamp: 'EMI 11/8/2020 18:13:10'!
PASSED!

!testRun: #PortfolioTest #test21CannotUniteTwoDisjointPortfoliosWithSameChildPortfolio stamp: 'EMI 11/8/2020 18:13:10'!
PASSED!

!testRun: #PortfolioTest #test22PortfolioCannotAddBothGrandChildrenPortfoliosWithSameAccount stamp: 'EMI 11/8/2020 18:13:10'!
PASSED!

!testRun: #PortfolioTest #test23PortfolioCannotAddGrandChildPortfolioWithSameAccountAsChild stamp: 'EMI 11/8/2020 18:13:10'!
PASSED!

!testRun: #PortfolioTest #test24PortfolioWith2ChildrenPortfoliosCannotAddAThirdWithAParentWithSameAccount stamp: 'EMI 11/8/2020 18:13:10'!
PASSED!

!testRun: #PortfolioTest #test25PortfolioWith2GrandChildrenPortfoliosCannotAddAThirdWithAGrandParentWithSameAccount stamp: 'EMI 11/8/2020 18:13:10'!
PASSED!
!PortfolioTest methodsFor: 'tests tree structure' stamp: 'EMI 11/8/2020 18:14:05' prior: 50899965!
test22PortfolioCannotAddBothGrandChildrenPortfoliosWithSameAccount
	| portfolio portfolioChildLeft portfolioChildRight portfolioGrandChildLeft portfolioGrandChildRight account|
	portfolio _ Portfolio new.
	account _  ReceptiveAccount new.
	
	portfolioChildLeft _ Portfolio new.
	portfolioChildRight _ Portfolio new.
	
	portfolioGrandChildLeft _ Portfolio new.
	self assertAdd: account To: portfolioGrandChildLeft.
	
	portfolioGrandChildRight _ Portfolio new.
	self assertAdd: account To: portfolioGrandChildRight.
	
	self assert: (portfolio add: portfolioChildLeft).
	self assert: (portfolio add: portfolioChildRight).
	self assert: (portfolioChildLeft add: portfolioGrandChildLeft).
	self deny: (portfolioChildRight add: portfolioGrandChildRight).


	 
! !
!PortfolioTest methodsFor: 'tests tree structure' stamp: 'EMI 11/8/2020 18:15:30' prior: 50902378!
test22PortfolioCannotAddBothGrandChildrenPortfoliosWithSameAccount
	| portfolio portfolioChildLeft portfolioChildRight portfolioGrandChildLeft portfolioGrandChildRight account|
	portfolio _ Portfolio new.
	account _  ReceptiveAccount new.
	
	portfolioChildLeft _ Portfolio new.
	portfolioChildRight _ Portfolio new.
	
	portfolioGrandChildLeft _ Portfolio new.
	self assertAdd: account To: portfolioGrandChildLeft.
	
	portfolioGrandChildRight _ Portfolio new.
	self assertAdd: account To: portfolioGrandChildRight.
	
	self assertAdd: portfolioChildLeft To: portfolio.
	self assertAdd: portfolioChildRight To: portfolio.
	self assertAdd: portfolioGrandChildLeft To: portfolioChildLeft.
	self denyAdd: portfolioGrandChildRight To: portfolioChildRight.


	 
! !

!testRun: #PortfolioTest #test22PortfolioCannotAddBothGrandChildrenPortfoliosWithSameAccount stamp: 'EMI 11/8/2020 18:15:31'!
PASSED!

!testRun: #PortfolioTest #test01NewPortfolioHasNoAccountsAndNoPortfolios stamp: 'EMI 11/8/2020 18:15:31'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioAddEmptyAccount stamp: 'EMI 11/8/2020 18:15:31'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioAddEmptyPortfolio stamp: 'EMI 11/8/2020 18:15:31'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioHasNoRegisteredTransactions stamp: 'EMI 11/8/2020 18:15:31'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasOneAccountWithOneRegisteredTransaction stamp: 'EMI 11/8/2020 18:15:31'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioMoreThanOneAccountWithRegisteredTransactions stamp: 'EMI 11/8/2020 18:15:31'!
PASSED!

!testRun: #PortfolioTest #test07EmptyPortfolioHasNoTransactions stamp: 'EMI 11/8/2020 18:15:31'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioWithOneAccountHasOneTransaction stamp: 'EMI 11/8/2020 18:15:31'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithMoreThanOneAccountHasMoreThanOneTransactions stamp: 'EMI 11/8/2020 18:15:31'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioHasOneChildPortfolioWithAnAccountAndADeposit stamp: 'EMI 11/8/2020 18:15:32'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioHasMoreThanOneChildPortfolioWithAnAccountAndADeposit stamp: 'EMI 11/8/2020 18:15:32'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioHasOneChildPortfolioWithAnAccountAndADepositRegistered stamp: 'EMI 11/8/2020 18:15:32'!
PASSED!

!testRun: #PortfolioTest #test12bisPortfolioHasOneGrandChildPortfolioWithAnAccountAndADepositRegistered stamp: 'EMI 11/8/2020 18:15:32'!
PASSED!

!testRun: #PortfolioTest #test13bisPortfolioHasMoreThanOneGrandChildPortfolioWithAnAccountAndADepositRegistered stamp: 'EMI 11/8/2020 18:15:32'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioCannotAddSameEmptyAssetTwice stamp: 'EMI 11/8/2020 18:15:32'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCannotAddChildPortfolioWithSameAccount stamp: 'EMI 11/8/2020 18:15:32'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioCannotAddBothChildrenPortfoliosWithSameAccount stamp: 'EMI 11/8/2020 18:15:32'!
PASSED!

!testRun: #PortfolioTest #test17PortfolioWith2ChildrenPortfoliosCannotAddAThirdWithSameAccount stamp: 'EMI 11/8/2020 18:15:32'!
PASSED!

!testRun: #PortfolioTest #test18TwoDisjointPortfoliosCanUseSameAccount stamp: 'EMI 11/8/2020 18:15:32'!
PASSED!

!testRun: #PortfolioTest #test19CannotUniteTwoDisjointPortfoliosWithSameAccount stamp: 'EMI 11/8/2020 18:15:32'!
PASSED!

!testRun: #PortfolioTest #test20TwoDisjointPortfoliosCanHaveSameChildPortfolio stamp: 'EMI 11/8/2020 18:15:32'!
PASSED!

!testRun: #PortfolioTest #test21CannotUniteTwoDisjointPortfoliosWithSameChildPortfolio stamp: 'EMI 11/8/2020 18:15:32'!
PASSED!

!testRun: #PortfolioTest #test22PortfolioCannotAddBothGrandChildrenPortfoliosWithSameAccount stamp: 'EMI 11/8/2020 18:15:32'!
PASSED!

!testRun: #PortfolioTest #test23PortfolioCannotAddGrandChildPortfolioWithSameAccountAsChild stamp: 'EMI 11/8/2020 18:15:32'!
PASSED!

!testRun: #PortfolioTest #test24PortfolioWith2ChildrenPortfoliosCannotAddAThirdWithAParentWithSameAccount stamp: 'EMI 11/8/2020 18:15:32'!
PASSED!

!testRun: #PortfolioTest #test25PortfolioWith2GrandChildrenPortfoliosCannotAddAThirdWithAGrandParentWithSameAccount stamp: 'EMI 11/8/2020 18:15:32'!
PASSED!
!PortfolioTest methodsFor: 'tests tree structure' stamp: 'EMI 11/8/2020 18:15:56' prior: 50900020!
test23PortfolioCannotAddGrandChildPortfolioWithSameAccountAsChild
	| portfolio portfolioChildLeft portfolioChildRight portfolioGrandChildRight account|
	portfolio _ Portfolio new.
	account _  ReceptiveAccount new.
	
	portfolioChildLeft _ Portfolio new.
	portfolioChildRight _ Portfolio new.
	
	self assertAdd: account To: portfolioChildLeft.
	
	portfolioGrandChildRight _ Portfolio new.
	self assert: (portfolioGrandChildRight add: account).
	
	self assert: (portfolio add: portfolioChildLeft).
	self assert: (portfolio add: portfolioChildRight).
	self deny: (portfolioChildRight add: portfolioGrandChildRight).


	 
! !
!PortfolioTest methodsFor: 'tests tree structure' stamp: 'EMI 11/8/2020 18:16:49' prior: 50902539!
test23PortfolioCannotAddGrandChildPortfolioWithSameAccountAsChild
	| portfolio portfolioChildLeft portfolioChildRight portfolioGrandChildRight account|
	portfolio _ Portfolio new.
	account _  ReceptiveAccount new.
	
	portfolioChildLeft _ Portfolio new.
	portfolioChildRight _ Portfolio new.
	
	self assertAdd: account To: portfolioChildLeft.
	
	portfolioGrandChildRight _ Portfolio new.
	self assertAdd: account To: portfolioGrandChildRight.
	
	self assert: (portfolio add: portfolioChildLeft).
	self assert: (portfolio add: portfolioChildRight).
	self deny: (portfolioChildRight add: portfolioGrandChildRight).


	 
! !
!PortfolioTest methodsFor: 'tests tree structure' stamp: 'EMI 11/8/2020 18:17:38' prior: 50902562!
test23PortfolioCannotAddGrandChildPortfolioWithSameAccountAsChild
	| portfolio portfolioChildLeft portfolioChildRight portfolioGrandChildRight account|
	portfolio _ Portfolio new.
	account _  ReceptiveAccount new.
	
	portfolioChildLeft _ Portfolio new.
	portfolioChildRight _ Portfolio new.
	
	self assertAdd: account To: portfolioChildLeft.
	
	portfolioGrandChildRight _ Portfolio new.
	self assertAdd: account To: portfolioGrandChildRight.
	
	self assertAdd: portfolioChildLeft To: portfolio.
	self assertAdd: portfolioChildRight To: portfolio.
	self denyAdd: portfolioGrandChildRight To: portfolioChildRight.

	 
! !
!PortfolioTest methodsFor: 'tests tree structure' stamp: 'EMI 11/8/2020 18:19:41' prior: 50900066!
test24PortfolioWith2ChildrenPortfoliosCannotAddAThirdWithAParentWithSameAccount
	| portfolioRoot portfolioChildWithAccount portfolioChildWithoutAccount 
	portfolioToAdd portfolioWithSameAccount account|
	
	portfolioRoot _ Portfolio new.
	account _  ReceptiveAccount new.
	
	portfolioChildWithoutAccount _ Portfolio new.
	
	portfolioChildWithAccount _ Portfolio new.
	self assertAdd: account To: portfolioChildWithAccount.
	
	portfolioToAdd _ Portfolio new.
	portfolioWithSameAccount _ Portfolio new.
	self assertAdd: account To: portfolioWithSameAccount.
	self assertAdd: portfolioToAdd To: portfolioWithSameAccount.
	
	self assertAdd: portfolioChildWithoutAccount To: portfolioRoot.
	self assertAdd: portfolioChildWithAccount To: portfolioRoot.
	self denyAdd: portfolioToAdd To: portfolioRoot.


	 
! !

!testRun: #PortfolioTest #test24PortfolioWith2ChildrenPortfoliosCannotAddAThirdWithAParentWithSameAccount stamp: 'EMI 11/8/2020 18:19:42'!
PASSED!

!testRun: #PortfolioTest #test01NewPortfolioHasNoAccountsAndNoPortfolios stamp: 'EMI 11/8/2020 18:19:42'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioAddEmptyAccount stamp: 'EMI 11/8/2020 18:19:42'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioAddEmptyPortfolio stamp: 'EMI 11/8/2020 18:19:42'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioHasNoRegisteredTransactions stamp: 'EMI 11/8/2020 18:19:42'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasOneAccountWithOneRegisteredTransaction stamp: 'EMI 11/8/2020 18:19:42'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioMoreThanOneAccountWithRegisteredTransactions stamp: 'EMI 11/8/2020 18:19:42'!
PASSED!

!testRun: #PortfolioTest #test07EmptyPortfolioHasNoTransactions stamp: 'EMI 11/8/2020 18:19:42'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioWithOneAccountHasOneTransaction stamp: 'EMI 11/8/2020 18:19:42'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithMoreThanOneAccountHasMoreThanOneTransactions stamp: 'EMI 11/8/2020 18:19:42'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioHasOneChildPortfolioWithAnAccountAndADeposit stamp: 'EMI 11/8/2020 18:19:42'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioHasMoreThanOneChildPortfolioWithAnAccountAndADeposit stamp: 'EMI 11/8/2020 18:19:42'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioHasOneChildPortfolioWithAnAccountAndADepositRegistered stamp: 'EMI 11/8/2020 18:19:42'!
PASSED!

!testRun: #PortfolioTest #test12bisPortfolioHasOneGrandChildPortfolioWithAnAccountAndADepositRegistered stamp: 'EMI 11/8/2020 18:19:42'!
PASSED!

!testRun: #PortfolioTest #test13bisPortfolioHasMoreThanOneGrandChildPortfolioWithAnAccountAndADepositRegistered stamp: 'EMI 11/8/2020 18:19:42'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioCannotAddSameEmptyAssetTwice stamp: 'EMI 11/8/2020 18:19:42'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCannotAddChildPortfolioWithSameAccount stamp: 'EMI 11/8/2020 18:19:42'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioCannotAddBothChildrenPortfoliosWithSameAccount stamp: 'EMI 11/8/2020 18:19:42'!
PASSED!

!testRun: #PortfolioTest #test17PortfolioWith2ChildrenPortfoliosCannotAddAThirdWithSameAccount stamp: 'EMI 11/8/2020 18:19:42'!
PASSED!

!testRun: #PortfolioTest #test18TwoDisjointPortfoliosCanUseSameAccount stamp: 'EMI 11/8/2020 18:19:42'!
PASSED!

!testRun: #PortfolioTest #test19CannotUniteTwoDisjointPortfoliosWithSameAccount stamp: 'EMI 11/8/2020 18:19:42'!
PASSED!

!testRun: #PortfolioTest #test20TwoDisjointPortfoliosCanHaveSameChildPortfolio stamp: 'EMI 11/8/2020 18:19:42'!
PASSED!

!testRun: #PortfolioTest #test21CannotUniteTwoDisjointPortfoliosWithSameChildPortfolio stamp: 'EMI 11/8/2020 18:19:42'!
PASSED!

!testRun: #PortfolioTest #test22PortfolioCannotAddBothGrandChildrenPortfoliosWithSameAccount stamp: 'EMI 11/8/2020 18:19:42'!
PASSED!

!testRun: #PortfolioTest #test23PortfolioCannotAddGrandChildPortfolioWithSameAccountAsChild stamp: 'EMI 11/8/2020 18:19:42'!
PASSED!

!testRun: #PortfolioTest #test24PortfolioWith2ChildrenPortfoliosCannotAddAThirdWithAParentWithSameAccount stamp: 'EMI 11/8/2020 18:19:42'!
PASSED!

!testRun: #PortfolioTest #test25PortfolioWith2GrandChildrenPortfoliosCannotAddAThirdWithAGrandParentWithSameAccount stamp: 'EMI 11/8/2020 18:19:42'!
PASSED!
!PortfolioTest methodsFor: 'tests tree structure' stamp: 'EMI 11/8/2020 18:20:31' prior: 50900124!
test25PortfolioWith2GrandChildrenPortfoliosCannotAddAThirdWithAGrandParentWithSameAccount
	| portfolioRoot portfolioChildLeft portfolioChildRight 
	portfolioGrandChildRight portfolioGrandChildLeft 
	portfolioRootAnotherTree portfolioChildAnotherTree portfolioGrandChildAnotherTree account|
	
	portfolioRoot _ Portfolio new.
	portfolioRootAnotherTree  _ Portfolio new.
	account _  ReceptiveAccount new.
	
	self assertAdd: account To: portfolioRoot.
	self assertAdd: account To: portfolioRootAnotherTree.
	
	portfolioChildLeft  _ Portfolio new.
	portfolioChildRight _ Portfolio new.
	self assert: (portfolioRoot add: portfolioChildLeft).
	self assert: (portfolioRoot add: portfolioChildRight).
	
	portfolioGrandChildLeft _ Portfolio new.
	portfolioGrandChildRight _ Portfolio new.
	self assert: (portfolioChildLeft add: portfolioGrandChildLeft ).
	self assert: (portfolioChildRight add: portfolioGrandChildRight).
	
	portfolioChildAnotherTree _ Portfolio new.
	self assert: (portfolioRootAnotherTree add: portfolioChildAnotherTree).
	
	portfolioGrandChildAnotherTree _ Portfolio new.
	self assert: (portfolioChildAnotherTree add: portfolioGrandChildAnotherTree ).
	
	self deny: (portfolioGrandChildRight add: portfolioGrandChildAnotherTree).
	


	 
! !
!PortfolioTest methodsFor: 'tests tree structure' stamp: 'EMI 11/8/2020 18:21:02' prior: 50902744!
test25PortfolioWith2GrandChildrenPortfoliosCannotAddAThirdWithAGrandParentWithSameAccount
	| portfolioRoot portfolioChildLeft portfolioChildRight 
	portfolioGrandChildRight portfolioGrandChildLeft 
	portfolioRootAnotherTree portfolioChildAnotherTree portfolioGrandChildAnotherTree account|
	
	portfolioRoot _ Portfolio new.
	portfolioRootAnotherTree  _ Portfolio new.
	account _  ReceptiveAccount new.
	
	self assertAdd: account To: portfolioRoot.
	self assertAdd: account To: portfolioRootAnotherTree.
	
	portfolioChildLeft  _ Portfolio new.
	portfolioChildRight _ Portfolio new.
	self assertAdd: portfolioChildLeft To: portfolioRoot.
	self assertAdd: portfolioChildRight To: portfolioRoot.
	
	portfolioGrandChildLeft _ Portfolio new.
	portfolioGrandChildRight _ Portfolio new.
	self assert: (portfolioChildLeft add: portfolioGrandChildLeft ).
	self assert: (portfolioChildRight add: portfolioGrandChildRight).
	
	portfolioChildAnotherTree _ Portfolio new.
	self assert: (portfolioRootAnotherTree add: portfolioChildAnotherTree).
	
	portfolioGrandChildAnotherTree _ Portfolio new.
	self assert: (portfolioChildAnotherTree add: portfolioGrandChildAnotherTree ).
	
	self deny: (portfolioGrandChildRight add: portfolioGrandChildAnotherTree).
	


	 
! !
!PortfolioTest methodsFor: 'tests tree structure' stamp: 'EMI 11/8/2020 18:22:49' prior: 50902787!
test25PortfolioWith2GrandChildrenPortfoliosCannotAddAThirdWithAGrandParentWithSameAccount
	| portfolioRoot portfolioChildLeft portfolioChildRight 
	portfolioGrandChildRight portfolioGrandChildLeft 
	portfolioRootAnotherTree portfolioChildAnotherTree portfolioGrandChildAnotherTree account|
	
	portfolioRoot _ Portfolio new.
	portfolioRootAnotherTree  _ Portfolio new.
	account _  ReceptiveAccount new.
	
	self assertAdd: account To: portfolioRoot.
	self assertAdd: account To: portfolioRootAnotherTree.
	
	portfolioChildLeft  _ Portfolio new.
	portfolioChildRight _ Portfolio new.
	self assertAdd: portfolioChildLeft To: portfolioRoot.
	self assertAdd: portfolioChildRight To: portfolioRoot.
	
	portfolioGrandChildLeft _ Portfolio new.
	portfolioGrandChildRight _ Portfolio new.
	self assertAdd: portfolioGrandChildLeft To: portfolioChildLeft .
	self assertAdd: portfolioGrandChildRight To: portfolioChildRight.
	
	portfolioChildAnotherTree _ Portfolio new.
	self assertAdd: portfolioChildAnotherTree To: portfolioRootAnotherTree.
	
	portfolioGrandChildAnotherTree _ Portfolio new.
	self assertAdd: portfolioGrandChildAnotherTree To: portfolioChildAnotherTree.
	
	self denyAdd: portfolioGrandChildAnotherTree To: portfolioGrandChildRight 


	 
! !

!testRun: #PortfolioTest #test25PortfolioWith2GrandChildrenPortfoliosCannotAddAThirdWithAGrandParentWithSameAccount stamp: 'EMI 11/8/2020 18:22:51'!
PASSED!

!testRun: #PortfolioTest #test01NewPortfolioHasNoAccountsAndNoPortfolios stamp: 'EMI 11/8/2020 18:22:51'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioAddEmptyAccount stamp: 'EMI 11/8/2020 18:22:51'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioAddEmptyPortfolio stamp: 'EMI 11/8/2020 18:22:51'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioHasNoRegisteredTransactions stamp: 'EMI 11/8/2020 18:22:51'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasOneAccountWithOneRegisteredTransaction stamp: 'EMI 11/8/2020 18:22:51'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioMoreThanOneAccountWithRegisteredTransactions stamp: 'EMI 11/8/2020 18:22:51'!
PASSED!

!testRun: #PortfolioTest #test07EmptyPortfolioHasNoTransactions stamp: 'EMI 11/8/2020 18:22:51'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioWithOneAccountHasOneTransaction stamp: 'EMI 11/8/2020 18:22:51'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithMoreThanOneAccountHasMoreThanOneTransactions stamp: 'EMI 11/8/2020 18:22:51'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioHasOneChildPortfolioWithAnAccountAndADeposit stamp: 'EMI 11/8/2020 18:22:51'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioHasMoreThanOneChildPortfolioWithAnAccountAndADeposit stamp: 'EMI 11/8/2020 18:22:51'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioHasOneChildPortfolioWithAnAccountAndADepositRegistered stamp: 'EMI 11/8/2020 18:22:51'!
PASSED!

!testRun: #PortfolioTest #test12bisPortfolioHasOneGrandChildPortfolioWithAnAccountAndADepositRegistered stamp: 'EMI 11/8/2020 18:22:51'!
PASSED!

!testRun: #PortfolioTest #test13bisPortfolioHasMoreThanOneGrandChildPortfolioWithAnAccountAndADepositRegistered stamp: 'EMI 11/8/2020 18:22:51'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioCannotAddSameEmptyAssetTwice stamp: 'EMI 11/8/2020 18:22:51'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCannotAddChildPortfolioWithSameAccount stamp: 'EMI 11/8/2020 18:22:51'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioCannotAddBothChildrenPortfoliosWithSameAccount stamp: 'EMI 11/8/2020 18:22:51'!
PASSED!

!testRun: #PortfolioTest #test17PortfolioWith2ChildrenPortfoliosCannotAddAThirdWithSameAccount stamp: 'EMI 11/8/2020 18:22:51'!
PASSED!

!testRun: #PortfolioTest #test18TwoDisjointPortfoliosCanUseSameAccount stamp: 'EMI 11/8/2020 18:22:51'!
PASSED!

!testRun: #PortfolioTest #test19CannotUniteTwoDisjointPortfoliosWithSameAccount stamp: 'EMI 11/8/2020 18:22:51'!
PASSED!

!testRun: #PortfolioTest #test20TwoDisjointPortfoliosCanHaveSameChildPortfolio stamp: 'EMI 11/8/2020 18:22:51'!
PASSED!

!testRun: #PortfolioTest #test21CannotUniteTwoDisjointPortfoliosWithSameChildPortfolio stamp: 'EMI 11/8/2020 18:22:51'!
PASSED!

!testRun: #PortfolioTest #test22PortfolioCannotAddBothGrandChildrenPortfoliosWithSameAccount stamp: 'EMI 11/8/2020 18:22:51'!
PASSED!

!testRun: #PortfolioTest #test23PortfolioCannotAddGrandChildPortfolioWithSameAccountAsChild stamp: 'EMI 11/8/2020 18:22:51'!
PASSED!

!testRun: #PortfolioTest #test24PortfolioWith2ChildrenPortfoliosCannotAddAThirdWithAParentWithSameAccount stamp: 'EMI 11/8/2020 18:22:51'!
PASSED!

!testRun: #PortfolioTest #test25PortfolioWith2GrandChildrenPortfoliosCannotAddAThirdWithAGrandParentWithSameAccount stamp: 'EMI 11/8/2020 18:22:51'!
PASSED!
!Asset class methodsFor: 'errorMessages' stamp: 'EMI 11/8/2020 18:25:41'!
cannotAddAssetErrorMessage
	^'Cannot add asset already present in assets tree'.! !
!Portfolio methodsFor: 'adding' stamp: 'EMI 11/8/2020 18:27:49' prior: 50898330!
add: anAsset
	| rootParents rootParentsOther |
	rootParents _ (self assetTreeRoots).
	rootParentsOther _ (anAsset assetTreeRoots).
	
	rootParents do: [:aParent |
		rootParentsOther do: [:aParentOther |
			(aParent hasAsset: aParentOther) ifTrue:[^Error signal: self class cannotAddAssetErrorMessage.].
			(aParentOther hasAsset: aParent) ifTrue:[^Error signal: self class cannotAddAssetErrorMessage.]
		].
	].
	
	assets add: anAsset.
	anAsset addAsSubassetOf: self.
	^true.! !
!PortfolioTest methodsFor: 'private' stamp: 'EMI 11/8/2020 18:30:40' prior: 50900521!
assertAdd: anAsset To: anotherAsset
	self should: [anotherAsset add: anAsset ]
	raise: Error
	withExceptionDo:[:anError | self assert: anError messageText equals: Asset cannotAddAssetErrorMessage].! !
!PortfolioTest methodsFor: 'private' stamp: 'EMI 11/8/2020 18:32:04' prior: 50903004!
assertAdd: anAsset To: anotherAsset
	! !
!PortfolioTest methodsFor: 'private' stamp: 'EMI 11/8/2020 18:32:08' prior: 50900526!
denyAdd: anAsset To: anotherAsset
	self should: [anotherAsset add: anAsset ]
	raise: Error
	withExceptionDo:[:anError | self assert: anError messageText equals: Asset cannotAddAssetErrorMessage].! !
!PortfolioTest methodsFor: 'private' stamp: 'EMI 11/8/2020 18:32:41' prior: 50903013!
assertAdd: anAsset To: anotherAsset
	self assert: (anotherAsset add: anAsset).
	! !

----SNAPSHOT----(8 November 2020 18:32:46) CuisUniversity-4383.image priorSource: 18200455!

!testRun: #PortfolioTest #test01NewPortfolioHasNoAccountsAndNoPortfolios stamp: 'EMI 11/8/2020 18:32:52'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioAddEmptyAccount stamp: 'EMI 11/8/2020 18:32:52'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioAddEmptyPortfolio stamp: 'EMI 11/8/2020 18:32:52'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioHasNoRegisteredTransactions stamp: 'EMI 11/8/2020 18:32:52'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasOneAccountWithOneRegisteredTransaction stamp: 'EMI 11/8/2020 18:32:52'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioMoreThanOneAccountWithRegisteredTransactions stamp: 'EMI 11/8/2020 18:32:52'!
PASSED!

!testRun: #PortfolioTest #test07EmptyPortfolioHasNoTransactions stamp: 'EMI 11/8/2020 18:32:52'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioWithOneAccountHasOneTransaction stamp: 'EMI 11/8/2020 18:32:52'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithMoreThanOneAccountHasMoreThanOneTransactions stamp: 'EMI 11/8/2020 18:32:52'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioHasOneChildPortfolioWithAnAccountAndADeposit stamp: 'EMI 11/8/2020 18:32:52'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioHasMoreThanOneChildPortfolioWithAnAccountAndADeposit stamp: 'EMI 11/8/2020 18:32:52'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioHasOneChildPortfolioWithAnAccountAndADepositRegistered stamp: 'EMI 11/8/2020 18:32:52'!
PASSED!

!testRun: #PortfolioTest #test12bisPortfolioHasOneGrandChildPortfolioWithAnAccountAndADepositRegistered stamp: 'EMI 11/8/2020 18:32:52'!
PASSED!

!testRun: #PortfolioTest #test13bisPortfolioHasMoreThanOneGrandChildPortfolioWithAnAccountAndADepositRegistered stamp: 'EMI 11/8/2020 18:32:52'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioCannotAddSameEmptyAssetTwice stamp: 'EMI 11/8/2020 18:32:52'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCannotAddChildPortfolioWithSameAccount stamp: 'EMI 11/8/2020 18:32:52'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioCannotAddBothChildrenPortfoliosWithSameAccount stamp: 'EMI 11/8/2020 18:32:52'!
PASSED!

!testRun: #PortfolioTest #test17PortfolioWith2ChildrenPortfoliosCannotAddAThirdWithSameAccount stamp: 'EMI 11/8/2020 18:32:52'!
PASSED!

!testRun: #PortfolioTest #test18TwoDisjointPortfoliosCanUseSameAccount stamp: 'EMI 11/8/2020 18:32:52'!
PASSED!

!testRun: #PortfolioTest #test19CannotUniteTwoDisjointPortfoliosWithSameAccount stamp: 'EMI 11/8/2020 18:32:52'!
PASSED!

!testRun: #PortfolioTest #test20TwoDisjointPortfoliosCanHaveSameChildPortfolio stamp: 'EMI 11/8/2020 18:32:52'!
PASSED!

!testRun: #PortfolioTest #test21CannotUniteTwoDisjointPortfoliosWithSameChildPortfolio stamp: 'EMI 11/8/2020 18:32:52'!
PASSED!

!testRun: #PortfolioTest #test22PortfolioCannotAddBothGrandChildrenPortfoliosWithSameAccount stamp: 'EMI 11/8/2020 18:32:52'!
PASSED!

!testRun: #PortfolioTest #test23PortfolioCannotAddGrandChildPortfolioWithSameAccountAsChild stamp: 'EMI 11/8/2020 18:32:52'!
PASSED!

!testRun: #PortfolioTest #test24PortfolioWith2ChildrenPortfoliosCannotAddAThirdWithAParentWithSameAccount stamp: 'EMI 11/8/2020 18:32:52'!
PASSED!

!testRun: #PortfolioTest #test25PortfolioWith2GrandChildrenPortfoliosCannotAddAThirdWithAGrandParentWithSameAccount stamp: 'EMI 11/8/2020 18:32:52'!
PASSED!
!PortfolioTest methodsFor: 'tests - tree structure' stamp: 'EMI 11/8/2020 18:34:00'!
test13PortfolioHasMoreThanOneChildPortfolioWithAnAccountAndADepositRegistered
	| portfolio portfolioChild portfolioGrandChildLeft  portfolioGrandChildRight account1 account2 transaction1 transaction2|
	portfolio _ Portfolio new.
	portfolioChild _ Portfolio new.
	portfolioGrandChildLeft _ Portfolio new.
	portfolioGrandChildRight _ Portfolio new.
	account1 _  ReceptiveAccount new.
	account2 _  ReceptiveAccount new.
	transaction1 _ Deposit register: 100 on: account1.
	transaction2 _ Deposit register: 100 on: account2.
	.
	self assertAdd: account1 To: portfolioGrandChildLeft.
	self assertAdd: account2 To: portfolioGrandChildRight.
	self assertAdd: portfolioGrandChildLeft To: portfolioChild.
	self assertAdd: portfolioGrandChildRight To: portfolioChild.
	self assertAdd: portfolioChild To: portfolio.
	self assert: (portfolio balance ) equals: 200.
	self assert: (portfolio hasRegistered: transaction1).
	self assert: (portfolio hasRegistered: transaction2).
	self assert: (portfolio transactions size) equals: 2.
	self assert: (portfolio transactions includes: transaction1).
	self assert: (portfolio transactions includes: transaction2).
	 
! !
!PortfolioTest methodsFor: 'tests - tree structure' stamp: 'EMI 11/8/2020 18:34:42' prior: 50903138!
test13PortfolioHasMoreThanOneChildPortfolioWithAnAccountAndADepositRegistered
	| portfolio portfolioChildLeft  portfolioChildRight account1 account2 transaction1 transaction2|
	portfolio _ Portfolio new.
	portfolioChildLeft _ Portfolio new.
	portfolioChildRight _ Portfolio new.
	account1 _  ReceptiveAccount new.
	account2 _  ReceptiveAccount new.
	transaction1 _ Deposit register: 100 on: account1.
	transaction2 _ Deposit register: 100 on: account2.
	
	self assert: (portfolioChildLeft add: account1).
	self assert: (portfolioChildRight add: account2).
	self assert: (portfolio add: portfolioChildLeft).
	self assert: (portfolio add: portfolioChildRight).
	self assert: (portfolio hasRegistered: transaction1).
	self assert: (portfolio hasRegistered: transaction2).
	self assert: (portfolio transactions size) equals: 2.
	self assert: (portfolio transactions includes: transaction1).
	self assert: (portfolio transactions includes: transaction2).
	 
	 
! !
!PortfolioTest methodsFor: 'tests - tree structure' stamp: 'EMI 11/8/2020 18:35:49' prior: 50903178!
test13PortfolioHasMoreThanOneChildPortfolioWithAnAccountAndADepositRegistered
	| portfolio portfolioChildLeft  portfolioChildRight account1 account2 transaction1 transaction2|
	portfolio _ Portfolio new.
	portfolioChildLeft _ Portfolio new.
	portfolioChildRight _ Portfolio new.
	account1 _  ReceptiveAccount new.
	account2 _  ReceptiveAccount new.
	transaction1 _ Deposit register: 100 on: account1.
	transaction2 _ Deposit register: 100 on: account2.
	
	self assertAdd: account1 To: portfolioChildLeft.
	self assertAdd: account2 To: portfolioChildRight.
	self assertAdd: portfolioChildLeft To: portfolio.
	self assertAdd: portfolioChildRight To: portfolio.
	self assert: (portfolio hasRegistered: transaction1).
	self assert: (portfolio hasRegistered: transaction2).
	self assert: (portfolio transactions size) equals: 2.
	self assert: (portfolio transactions includes: transaction1).
	self assert: (portfolio transactions includes: transaction2).
	 
	 
! !

!testRun: #PortfolioTest #test01NewPortfolioHasNoAccountsAndNoPortfolios stamp: 'EMI 11/8/2020 18:35:53'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioAddEmptyAccount stamp: 'EMI 11/8/2020 18:35:53'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioAddEmptyPortfolio stamp: 'EMI 11/8/2020 18:35:53'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioHasNoRegisteredTransactions stamp: 'EMI 11/8/2020 18:35:53'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasOneAccountWithOneRegisteredTransaction stamp: 'EMI 11/8/2020 18:35:53'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioMoreThanOneAccountWithRegisteredTransactions stamp: 'EMI 11/8/2020 18:35:53'!
PASSED!

!testRun: #PortfolioTest #test07EmptyPortfolioHasNoTransactions stamp: 'EMI 11/8/2020 18:35:53'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioWithOneAccountHasOneTransaction stamp: 'EMI 11/8/2020 18:35:53'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithMoreThanOneAccountHasMoreThanOneTransactions stamp: 'EMI 11/8/2020 18:35:53'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioHasOneChildPortfolioWithAnAccountAndADeposit stamp: 'EMI 11/8/2020 18:35:53'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioHasMoreThanOneChildPortfolioWithAnAccountAndADeposit stamp: 'EMI 11/8/2020 18:35:53'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioHasOneChildPortfolioWithAnAccountAndADepositRegistered stamp: 'EMI 11/8/2020 18:35:53'!
PASSED!

!testRun: #PortfolioTest #test12bisPortfolioHasOneGrandChildPortfolioWithAnAccountAndADepositRegistered stamp: 'EMI 11/8/2020 18:35:53'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioHasMoreThanOneChildPortfolioWithAnAccountAndADepositRegistered stamp: 'EMI 11/8/2020 18:35:53'!
PASSED!

!testRun: #PortfolioTest #test13bisPortfolioHasMoreThanOneGrandChildPortfolioWithAnAccountAndADepositRegistered stamp: 'EMI 11/8/2020 18:35:53'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioCannotAddSameEmptyAssetTwice stamp: 'EMI 11/8/2020 18:35:53'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCannotAddChildPortfolioWithSameAccount stamp: 'EMI 11/8/2020 18:35:53'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioCannotAddBothChildrenPortfoliosWithSameAccount stamp: 'EMI 11/8/2020 18:35:53'!
PASSED!

!testRun: #PortfolioTest #test17PortfolioWith2ChildrenPortfoliosCannotAddAThirdWithSameAccount stamp: 'EMI 11/8/2020 18:35:53'!
PASSED!

!testRun: #PortfolioTest #test18TwoDisjointPortfoliosCanUseSameAccount stamp: 'EMI 11/8/2020 18:35:53'!
PASSED!

!testRun: #PortfolioTest #test19CannotUniteTwoDisjointPortfoliosWithSameAccount stamp: 'EMI 11/8/2020 18:35:53'!
PASSED!

!testRun: #PortfolioTest #test20TwoDisjointPortfoliosCanHaveSameChildPortfolio stamp: 'EMI 11/8/2020 18:35:53'!
PASSED!

!testRun: #PortfolioTest #test21CannotUniteTwoDisjointPortfoliosWithSameChildPortfolio stamp: 'EMI 11/8/2020 18:35:53'!
PASSED!

!testRun: #PortfolioTest #test22PortfolioCannotAddBothGrandChildrenPortfoliosWithSameAccount stamp: 'EMI 11/8/2020 18:35:53'!
PASSED!

!testRun: #PortfolioTest #test23PortfolioCannotAddGrandChildPortfolioWithSameAccountAsChild stamp: 'EMI 11/8/2020 18:35:53'!
PASSED!

!testRun: #PortfolioTest #test24PortfolioWith2ChildrenPortfoliosCannotAddAThirdWithAParentWithSameAccount stamp: 'EMI 11/8/2020 18:35:53'!
PASSED!

!testRun: #PortfolioTest #test25PortfolioWith2GrandChildrenPortfoliosCannotAddAThirdWithAGrandParentWithSameAccount stamp: 'EMI 11/8/2020 18:35:53'!
PASSED!
!PortfolioTest methodsFor: 'tests - tree structure' stamp: 'EMI 11/8/2020 18:36:34'!
test16PortfolioCannotAddSameEmptyAssetTwice
	| portfolio portfolio2 account|
	portfolio _ Portfolio new.
	account _  ReceptiveAccount new.
	
	self assertAdd: account To: portfolio.
	self denyAdd: account To: portfolio.
	
	portfolio2 _ Portfolio new.
	
	self assertAdd: portfolio2 To: portfolio.
	self denyAdd: portfolio2 To: portfolio.


	 
! !

!methodRemoval: PortfolioTest #test14PortfolioCannotAddSameEmptyAssetTwice stamp: 'EMI 11/8/2020 18:36:34'!
test14PortfolioCannotAddSameEmptyAssetTwice
	| portfolio portfolio2 account|
	portfolio _ Portfolio new.
	account _  ReceptiveAccount new.
	
	self assertAdd: account To: portfolio.
	self denyAdd: account To: portfolio.
	
	portfolio2 _ Portfolio new.
	
	self assertAdd: portfolio2 To: portfolio.
	self denyAdd: portfolio2 To: portfolio.


	 
!
!PortfolioTest methodsFor: 'tests - tree structure' stamp: 'EMI 11/8/2020 18:36:52'!
test14PortfolioCannotAddSameEmptyAssetTwice
	| portfolio portfolio2 account|
	portfolio _ Portfolio new.
	account _  ReceptiveAccount new.
	
	self assertAdd: account To: portfolio.
	self denyAdd: account To: portfolio.
	
	portfolio2 _ Portfolio new.
	
	self assertAdd: portfolio2 To: portfolio.
	self denyAdd: portfolio2 To: portfolio.


	 
! !

!methodRemoval: PortfolioTest #test16PortfolioCannotAddSameEmptyAssetTwice stamp: 'EMI 11/8/2020 18:36:52'!
test16PortfolioCannotAddSameEmptyAssetTwice
	| portfolio portfolio2 account|
	portfolio _ Portfolio new.
	account _  ReceptiveAccount new.
	
	self assertAdd: account To: portfolio.
	self denyAdd: account To: portfolio.
	
	portfolio2 _ Portfolio new.
	
	self assertAdd: portfolio2 To: portfolio.
	self denyAdd: portfolio2 To: portfolio.


	 
!
!PortfolioTest methodsFor: 'tests - tree structure' stamp: 'EMI 11/8/2020 18:37:05'!
test27PortfolioWith2GrandChildrenPortfoliosCannotAddAThirdWithAGrandParentWithSameAccount
	| portfolioRoot portfolioChildLeft portfolioChildRight 
	portfolioGrandChildRight portfolioGrandChildLeft 
	portfolioRootAnotherTree portfolioChildAnotherTree portfolioGrandChildAnotherTree account|
	
	portfolioRoot _ Portfolio new.
	portfolioRootAnotherTree  _ Portfolio new.
	account _  ReceptiveAccount new.
	
	self assertAdd: account To: portfolioRoot.
	self assertAdd: account To: portfolioRootAnotherTree.
	
	portfolioChildLeft  _ Portfolio new.
	portfolioChildRight _ Portfolio new.
	self assertAdd: portfolioChildLeft To: portfolioRoot.
	self assertAdd: portfolioChildRight To: portfolioRoot.
	
	portfolioGrandChildLeft _ Portfolio new.
	portfolioGrandChildRight _ Portfolio new.
	self assertAdd: portfolioGrandChildLeft To: portfolioChildLeft .
	self assertAdd: portfolioGrandChildRight To: portfolioChildRight.
	
	portfolioChildAnotherTree _ Portfolio new.
	self assertAdd: portfolioChildAnotherTree To: portfolioRootAnotherTree.
	
	portfolioGrandChildAnotherTree _ Portfolio new.
	self assertAdd: portfolioGrandChildAnotherTree To: portfolioChildAnotherTree.
	
	self denyAdd: portfolioGrandChildAnotherTree To: portfolioGrandChildRight 


	 
! !

!methodRemoval: PortfolioTest #test25PortfolioWith2GrandChildrenPortfoliosCannotAddAThirdWithAGrandParentWithSameAccount stamp: 'EMI 11/8/2020 18:37:05'!
test25PortfolioWith2GrandChildrenPortfoliosCannotAddAThirdWithAGrandParentWithSameAccount
	| portfolioRoot portfolioChildLeft portfolioChildRight 
	portfolioGrandChildRight portfolioGrandChildLeft 
	portfolioRootAnotherTree portfolioChildAnotherTree portfolioGrandChildAnotherTree account|
	
	portfolioRoot _ Portfolio new.
	portfolioRootAnotherTree  _ Portfolio new.
	account _  ReceptiveAccount new.
	
	self assertAdd: account To: portfolioRoot.
	self assertAdd: account To: portfolioRootAnotherTree.
	
	portfolioChildLeft  _ Portfolio new.
	portfolioChildRight _ Portfolio new.
	self assertAdd: portfolioChildLeft To: portfolioRoot.
	self assertAdd: portfolioChildRight To: portfolioRoot.
	
	portfolioGrandChildLeft _ Portfolio new.
	portfolioGrandChildRight _ Portfolio new.
	self assertAdd: portfolioGrandChildLeft To: portfolioChildLeft .
	self assertAdd: portfolioGrandChildRight To: portfolioChildRight.
	
	portfolioChildAnotherTree _ Portfolio new.
	self assertAdd: portfolioChildAnotherTree To: portfolioRootAnotherTree.
	
	portfolioGrandChildAnotherTree _ Portfolio new.
	self assertAdd: portfolioGrandChildAnotherTree To: portfolioChildAnotherTree.
	
	self denyAdd: portfolioGrandChildAnotherTree To: portfolioGrandChildRight 


	 
!
!PortfolioTest methodsFor: 'tests - tree structure' stamp: 'EMI 11/8/2020 18:37:16'!
test26PortfolioWith2ChildrenPortfoliosCannotAddAThirdWithAParentWithSameAccount
	| portfolioRoot portfolioChildWithAccount portfolioChildWithoutAccount 
	portfolioToAdd portfolioWithSameAccount account|
	
	portfolioRoot _ Portfolio new.
	account _  ReceptiveAccount new.
	
	portfolioChildWithoutAccount _ Portfolio new.
	
	portfolioChildWithAccount _ Portfolio new.
	self assertAdd: account To: portfolioChildWithAccount.
	
	portfolioToAdd _ Portfolio new.
	portfolioWithSameAccount _ Portfolio new.
	self assertAdd: account To: portfolioWithSameAccount.
	self assertAdd: portfolioToAdd To: portfolioWithSameAccount.
	
	self assertAdd: portfolioChildWithoutAccount To: portfolioRoot.
	self assertAdd: portfolioChildWithAccount To: portfolioRoot.
	self denyAdd: portfolioToAdd To: portfolioRoot.


	 
! !

!methodRemoval: PortfolioTest #test24PortfolioWith2ChildrenPortfoliosCannotAddAThirdWithAParentWithSameAccount stamp: 'EMI 11/8/2020 18:37:16'!
test24PortfolioWith2ChildrenPortfoliosCannotAddAThirdWithAParentWithSameAccount
	| portfolioRoot portfolioChildWithAccount portfolioChildWithoutAccount 
	portfolioToAdd portfolioWithSameAccount account|
	
	portfolioRoot _ Portfolio new.
	account _  ReceptiveAccount new.
	
	portfolioChildWithoutAccount _ Portfolio new.
	
	portfolioChildWithAccount _ Portfolio new.
	self assertAdd: account To: portfolioChildWithAccount.
	
	portfolioToAdd _ Portfolio new.
	portfolioWithSameAccount _ Portfolio new.
	self assertAdd: account To: portfolioWithSameAccount.
	self assertAdd: portfolioToAdd To: portfolioWithSameAccount.
	
	self assertAdd: portfolioChildWithoutAccount To: portfolioRoot.
	self assertAdd: portfolioChildWithAccount To: portfolioRoot.
	self denyAdd: portfolioToAdd To: portfolioRoot.


	 
!
!PortfolioTest methodsFor: 'tests - tree structure' stamp: 'EMI 11/8/2020 18:37:25'!
test25PortfolioCannotAddGrandChildPortfolioWithSameAccountAsChild
	| portfolio portfolioChildLeft portfolioChildRight portfolioGrandChildRight account|
	portfolio _ Portfolio new.
	account _  ReceptiveAccount new.
	
	portfolioChildLeft _ Portfolio new.
	portfolioChildRight _ Portfolio new.
	
	self assertAdd: account To: portfolioChildLeft.
	
	portfolioGrandChildRight _ Portfolio new.
	self assertAdd: account To: portfolioGrandChildRight.
	
	self assertAdd: portfolioChildLeft To: portfolio.
	self assertAdd: portfolioChildRight To: portfolio.
	self denyAdd: portfolioGrandChildRight To: portfolioChildRight.

	 
! !

!methodRemoval: PortfolioTest #test23PortfolioCannotAddGrandChildPortfolioWithSameAccountAsChild stamp: 'EMI 11/8/2020 18:37:25'!
test23PortfolioCannotAddGrandChildPortfolioWithSameAccountAsChild
	| portfolio portfolioChildLeft portfolioChildRight portfolioGrandChildRight account|
	portfolio _ Portfolio new.
	account _  ReceptiveAccount new.
	
	portfolioChildLeft _ Portfolio new.
	portfolioChildRight _ Portfolio new.
	
	self assertAdd: account To: portfolioChildLeft.
	
	portfolioGrandChildRight _ Portfolio new.
	self assertAdd: account To: portfolioGrandChildRight.
	
	self assertAdd: portfolioChildLeft To: portfolio.
	self assertAdd: portfolioChildRight To: portfolio.
	self denyAdd: portfolioGrandChildRight To: portfolioChildRight.

	 
!
!PortfolioTest methodsFor: 'tests - tree structure' stamp: 'EMI 11/8/2020 18:37:36'!
test24PortfolioCannotAddGrandChildPortfolioWithSameAccountAsChild
	| portfolio portfolioChildLeft portfolioChildRight portfolioGrandChildRight account|
	portfolio _ Portfolio new.
	account _  ReceptiveAccount new.
	
	portfolioChildLeft _ Portfolio new.
	portfolioChildRight _ Portfolio new.
	
	self assertAdd: account To: portfolioChildLeft.
	
	portfolioGrandChildRight _ Portfolio new.
	self assertAdd: account To: portfolioGrandChildRight.
	
	self assertAdd: portfolioChildLeft To: portfolio.
	self assertAdd: portfolioChildRight To: portfolio.
	self denyAdd: portfolioGrandChildRight To: portfolioChildRight.

	 
! !

!methodRemoval: PortfolioTest #test25PortfolioCannotAddGrandChildPortfolioWithSameAccountAsChild stamp: 'EMI 11/8/2020 18:37:36'!
test25PortfolioCannotAddGrandChildPortfolioWithSameAccountAsChild
	| portfolio portfolioChildLeft portfolioChildRight portfolioGrandChildRight account|
	portfolio _ Portfolio new.
	account _  ReceptiveAccount new.
	
	portfolioChildLeft _ Portfolio new.
	portfolioChildRight _ Portfolio new.
	
	self assertAdd: account To: portfolioChildLeft.
	
	portfolioGrandChildRight _ Portfolio new.
	self assertAdd: account To: portfolioGrandChildRight.
	
	self assertAdd: portfolioChildLeft To: portfolio.
	self assertAdd: portfolioChildRight To: portfolio.
	self denyAdd: portfolioGrandChildRight To: portfolioChildRight.

	 
!
!PortfolioTest methodsFor: 'tests - tree structure' stamp: 'EMI 11/8/2020 18:37:45'!
test25PortfolioCannotAddGrandChildPortfolioWithSameAccountAsChild
	| portfolio portfolioChildLeft portfolioChildRight portfolioGrandChildRight account|
	portfolio _ Portfolio new.
	account _  ReceptiveAccount new.
	
	portfolioChildLeft _ Portfolio new.
	portfolioChildRight _ Portfolio new.
	
	self assertAdd: account To: portfolioChildLeft.
	
	portfolioGrandChildRight _ Portfolio new.
	self assertAdd: account To: portfolioGrandChildRight.
	
	self assertAdd: portfolioChildLeft To: portfolio.
	self assertAdd: portfolioChildRight To: portfolio.
	self denyAdd: portfolioGrandChildRight To: portfolioChildRight.

	 
! !

!methodRemoval: PortfolioTest #test24PortfolioCannotAddGrandChildPortfolioWithSameAccountAsChild stamp: 'EMI 11/8/2020 18:37:45'!
test24PortfolioCannotAddGrandChildPortfolioWithSameAccountAsChild
	| portfolio portfolioChildLeft portfolioChildRight portfolioGrandChildRight account|
	portfolio _ Portfolio new.
	account _  ReceptiveAccount new.
	
	portfolioChildLeft _ Portfolio new.
	portfolioChildRight _ Portfolio new.
	
	self assertAdd: account To: portfolioChildLeft.
	
	portfolioGrandChildRight _ Portfolio new.
	self assertAdd: account To: portfolioGrandChildRight.
	
	self assertAdd: portfolioChildLeft To: portfolio.
	self assertAdd: portfolioChildRight To: portfolio.
	self denyAdd: portfolioGrandChildRight To: portfolioChildRight.

	 
!
!PortfolioTest methodsFor: 'tests - tree structure' stamp: 'EMI 11/8/2020 18:37:53'!
test24PortfolioCannotAddBothGrandChildrenPortfoliosWithSameAccount
	| portfolio portfolioChildLeft portfolioChildRight portfolioGrandChildLeft portfolioGrandChildRight account|
	portfolio _ Portfolio new.
	account _  ReceptiveAccount new.
	
	portfolioChildLeft _ Portfolio new.
	portfolioChildRight _ Portfolio new.
	
	portfolioGrandChildLeft _ Portfolio new.
	self assertAdd: account To: portfolioGrandChildLeft.
	
	portfolioGrandChildRight _ Portfolio new.
	self assertAdd: account To: portfolioGrandChildRight.
	
	self assertAdd: portfolioChildLeft To: portfolio.
	self assertAdd: portfolioChildRight To: portfolio.
	self assertAdd: portfolioGrandChildLeft To: portfolioChildLeft.
	self denyAdd: portfolioGrandChildRight To: portfolioChildRight.


	 
! !

!methodRemoval: PortfolioTest #test22PortfolioCannotAddBothGrandChildrenPortfoliosWithSameAccount stamp: 'EMI 11/8/2020 18:37:53'!
test22PortfolioCannotAddBothGrandChildrenPortfoliosWithSameAccount
	| portfolio portfolioChildLeft portfolioChildRight portfolioGrandChildLeft portfolioGrandChildRight account|
	portfolio _ Portfolio new.
	account _  ReceptiveAccount new.
	
	portfolioChildLeft _ Portfolio new.
	portfolioChildRight _ Portfolio new.
	
	portfolioGrandChildLeft _ Portfolio new.
	self assertAdd: account To: portfolioGrandChildLeft.
	
	portfolioGrandChildRight _ Portfolio new.
	self assertAdd: account To: portfolioGrandChildRight.
	
	self assertAdd: portfolioChildLeft To: portfolio.
	self assertAdd: portfolioChildRight To: portfolio.
	self assertAdd: portfolioGrandChildLeft To: portfolioChildLeft.
	self denyAdd: portfolioGrandChildRight To: portfolioChildRight.


	 
!
!PortfolioTest methodsFor: 'tests - tree structure' stamp: 'EMI 11/8/2020 18:38:00'!
test23CannotUniteTwoDisjointPortfoliosWithSameChildPortfolio
	| portfolio portfolio2 portfolioRoot portfolioChild |
	
	portfolio _ Portfolio new.
	portfolio2 _ Portfolio new.
	portfolioRoot _ Portfolio new.
	portfolioChild _ Portfolio new.
	
	self assertAdd: portfolioChild To: portfolio.
	self assertAdd: portfolioChild To: portfolio2.
	self assertAdd:  portfolio To: portfolioRoot.
	self denyAdd: portfolio2 To: portfolioRoot.
	


	 
! !

!methodRemoval: PortfolioTest #test21CannotUniteTwoDisjointPortfoliosWithSameChildPortfolio stamp: 'EMI 11/8/2020 18:38:00'!
test21CannotUniteTwoDisjointPortfoliosWithSameChildPortfolio
	| portfolio portfolio2 portfolioRoot portfolioChild |
	
	portfolio _ Portfolio new.
	portfolio2 _ Portfolio new.
	portfolioRoot _ Portfolio new.
	portfolioChild _ Portfolio new.
	
	self assertAdd: portfolioChild To: portfolio.
	self assertAdd: portfolioChild To: portfolio2.
	self assertAdd:  portfolio To: portfolioRoot.
	self denyAdd: portfolio2 To: portfolioRoot.
	


	 
!
!PortfolioTest methodsFor: 'tests - tree structure' stamp: 'EMI 11/8/2020 18:38:09'!
test22TwoDisjointPortfoliosCanHaveSameChildPortfolio
	| portfolio portfolio2 portfolioChild|
	
	portfolio _ Portfolio new.
	portfolio2 _ Portfolio new.
	portfolioChild _ Portfolio new.
	
	self assertAdd: portfolioChild To: portfolio.
	self assertAdd: portfolioChild To: portfolio2.
	self assert: portfolioChild parentAssets includes: portfolio.
	self assert: portfolioChild parentAssets includes: portfolio2.
	


	 
! !

!methodRemoval: PortfolioTest #test20TwoDisjointPortfoliosCanHaveSameChildPortfolio stamp: 'EMI 11/8/2020 18:38:09'!
test20TwoDisjointPortfoliosCanHaveSameChildPortfolio
	| portfolio portfolio2 portfolioChild|
	
	portfolio _ Portfolio new.
	portfolio2 _ Portfolio new.
	portfolioChild _ Portfolio new.
	
	self assertAdd: portfolioChild To: portfolio.
	self assertAdd: portfolioChild To: portfolio2.
	self assert: portfolioChild parentAssets includes: portfolio.
	self assert: portfolioChild parentAssets includes: portfolio2.
	


	 
!
!PortfolioTest methodsFor: 'tests - tree structure' stamp: 'EMI 11/8/2020 18:38:24'!
test21CannotUniteTwoDisjointPortfoliosWithSameAccount
	| portfolio portfolio2 portfolioRoot account|
	
	portfolio _ Portfolio new.
	portfolio2 _ Portfolio new.
	portfolioRoot _ Portfolio new.
	account _ ReceptiveAccount new.
	
	self assertAdd: account To: portfolio.
	self assertAdd: account To: portfolio2.
	self assertAdd: portfolio To: portfolioRoot.
	self denyAdd: portfolio2 To: portfolioRoot.


	 
! !

!methodRemoval: PortfolioTest #test19CannotUniteTwoDisjointPortfoliosWithSameAccount stamp: 'EMI 11/8/2020 18:38:24'!
test19CannotUniteTwoDisjointPortfoliosWithSameAccount
	| portfolio portfolio2 portfolioRoot account|
	
	portfolio _ Portfolio new.
	portfolio2 _ Portfolio new.
	portfolioRoot _ Portfolio new.
	account _ ReceptiveAccount new.
	
	self assertAdd: account To: portfolio.
	self assertAdd: account To: portfolio2.
	self assertAdd: portfolio To: portfolioRoot.
	self denyAdd: portfolio2 To: portfolioRoot.


	 
!
!PortfolioTest methodsFor: 'tests - tree structure' stamp: 'EMI 11/8/2020 18:38:37'!
test20TwoDisjointPortfoliosCanUseSameAccount
	| portfolio portfolio2 account|
	
	portfolio _ Portfolio new.
	portfolio2 _ Portfolio new.
	account _ ReceptiveAccount new.
	
	self assertAdd: account To: portfolio.
	self assertAdd: account To: portfolio2.
	self assert: account parentAssets includes: portfolio.
	self assert: account parentAssets includes: portfolio2.
	


	 
! !

!methodRemoval: PortfolioTest #test18TwoDisjointPortfoliosCanUseSameAccount stamp: 'EMI 11/8/2020 18:38:37'!
test18TwoDisjointPortfoliosCanUseSameAccount
	| portfolio portfolio2 account|
	
	portfolio _ Portfolio new.
	portfolio2 _ Portfolio new.
	account _ ReceptiveAccount new.
	
	self assertAdd: account To: portfolio.
	self assertAdd: account To: portfolio2.
	self assert: account parentAssets includes: portfolio.
	self assert: account parentAssets includes: portfolio2.
	


	 
!
!PortfolioTest methodsFor: 'tests - tree structure' stamp: 'EMI 11/8/2020 18:38:55'!
test19PortfolioWith2ChildrenPortfoliosCannotAddAThirdWithSameAccount
	| portfolioRoot portfolioChildWithAccount portfolioChildWithoutAccount portfolioToAddWithSameAccount account|
	portfolioRoot _ Portfolio new.
	account _  ReceptiveAccount new.
	
	portfolioChildWithoutAccount _ Portfolio new.
	
	portfolioChildWithAccount _ Portfolio new.
	self assertAdd: account To: portfolioChildWithAccount.
	
	portfolioToAddWithSameAccount _ Portfolio new.
	self assertAdd: account To: portfolioToAddWithSameAccount.
	
	self assertAdd: portfolioChildWithoutAccount To: portfolioRoot.
	self assertAdd: portfolioChildWithAccount To: portfolioRoot.
	self denyAdd: portfolioToAddWithSameAccount To: portfolioRoot.



	 
! !

!methodRemoval: PortfolioTest #test17PortfolioWith2ChildrenPortfoliosCannotAddAThirdWithSameAccount stamp: 'EMI 11/8/2020 18:38:55'!
test17PortfolioWith2ChildrenPortfoliosCannotAddAThirdWithSameAccount
	| portfolioRoot portfolioChildWithAccount portfolioChildWithoutAccount portfolioToAddWithSameAccount account|
	portfolioRoot _ Portfolio new.
	account _  ReceptiveAccount new.
	
	portfolioChildWithoutAccount _ Portfolio new.
	
	portfolioChildWithAccount _ Portfolio new.
	self assertAdd: account To: portfolioChildWithAccount.
	
	portfolioToAddWithSameAccount _ Portfolio new.
	self assertAdd: account To: portfolioToAddWithSameAccount.
	
	self assertAdd: portfolioChildWithoutAccount To: portfolioRoot.
	self assertAdd: portfolioChildWithAccount To: portfolioRoot.
	self denyAdd: portfolioToAddWithSameAccount To: portfolioRoot.



	 
!
!PortfolioTest methodsFor: 'tests - tree structure' stamp: 'EMI 11/8/2020 18:39:09'!
test18PortfolioCannotAddBothChildrenPortfoliosWithSameAccount
	| portfolio portfolioChildLeft portfolioChildRight account|
	portfolio _ Portfolio new.
	account _  ReceptiveAccount new.
	
	portfolioChildLeft _ Portfolio new.
	self assertAdd: account To: portfolioChildLeft.
	
	portfolioChildRight _ Portfolio new.
	self assertAdd: account To: portfolioChildRight.
	
	self assertAdd: portfolioChildLeft To: portfolio.
	self denyAdd: portfolioChildRight To: portfolio.



	 
! !

!methodRemoval: PortfolioTest #test16PortfolioCannotAddBothChildrenPortfoliosWithSameAccount stamp: 'EMI 11/8/2020 18:39:09'!
test16PortfolioCannotAddBothChildrenPortfoliosWithSameAccount
	| portfolio portfolioChildLeft portfolioChildRight account|
	portfolio _ Portfolio new.
	account _  ReceptiveAccount new.
	
	portfolioChildLeft _ Portfolio new.
	self assertAdd: account To: portfolioChildLeft.
	
	portfolioChildRight _ Portfolio new.
	self assertAdd: account To: portfolioChildRight.
	
	self assertAdd: portfolioChildLeft To: portfolio.
	self denyAdd: portfolioChildRight To: portfolio.



	 
!
!PortfolioTest methodsFor: 'tests - tree structure' stamp: 'EMI 11/8/2020 18:39:17'!
test17PortfolioCannotAddChildPortfolioWithSameAccount
	| portfolio portfolio2 account|
	portfolio _ Portfolio new.
	account _  ReceptiveAccount new.
	self assertAdd: account To: portfolio.
	
	portfolio2 _ Portfolio new.
	self assertAdd: account To: portfolio2.
	
	self denyAdd: portfolio2 To: portfolio.


	 
! !

!methodRemoval: PortfolioTest #test15PortfolioCannotAddChildPortfolioWithSameAccount stamp: 'EMI 11/8/2020 18:39:17'!
test15PortfolioCannotAddChildPortfolioWithSameAccount
	| portfolio portfolio2 account|
	portfolio _ Portfolio new.
	account _  ReceptiveAccount new.
	self assertAdd: account To: portfolio.
	
	portfolio2 _ Portfolio new.
	self assertAdd: account To: portfolio2.
	
	self denyAdd: portfolio2 To: portfolio.


	 
!
!PortfolioTest methodsFor: 'tests - tree structure' stamp: 'EMI 11/8/2020 18:39:23'!
test16PortfolioCannotAddSameEmptyAssetTwice
	| portfolio portfolio2 account|
	portfolio _ Portfolio new.
	account _  ReceptiveAccount new.
	
	self assertAdd: account To: portfolio.
	self denyAdd: account To: portfolio.
	
	portfolio2 _ Portfolio new.
	
	self assertAdd: portfolio2 To: portfolio.
	self denyAdd: portfolio2 To: portfolio.


	 
! !

!methodRemoval: PortfolioTest #test14PortfolioCannotAddSameEmptyAssetTwice stamp: 'EMI 11/8/2020 18:39:24'!
test14PortfolioCannotAddSameEmptyAssetTwice
	| portfolio portfolio2 account|
	portfolio _ Portfolio new.
	account _  ReceptiveAccount new.
	
	self assertAdd: account To: portfolio.
	self denyAdd: account To: portfolio.
	
	portfolio2 _ Portfolio new.
	
	self assertAdd: portfolio2 To: portfolio.
	self denyAdd: portfolio2 To: portfolio.


	 
!
!PortfolioTest methodsFor: 'tests - tree structure' stamp: 'EMI 11/8/2020 18:39:32'!
test15bisPortfolioHasMoreThanOneGrandChildPortfolioWithAnAccountAndADepositRegistered
	| portfolio portfolioChild portfolioGrandChildLeft  portfolioGrandChildRight account1 account2 transaction1 transaction2|
	portfolio _ Portfolio new.
	portfolioChild _ Portfolio new.
	portfolioGrandChildLeft _ Portfolio new.
	portfolioGrandChildRight _ Portfolio new.
	account1 _  ReceptiveAccount new.
	account2 _  ReceptiveAccount new.
	transaction1 _ Deposit register: 100 on: account1.
	transaction2 _ Deposit register: 100 on: account2.
	.
	self assertAdd: account1 To: portfolioGrandChildLeft.
	self assertAdd: account2 To: portfolioGrandChildRight.
	self assertAdd: portfolioGrandChildLeft To: portfolioChild.
	self assertAdd: portfolioGrandChildRight To: portfolioChild.
	self assertAdd: portfolioChild To: portfolio.
	self assert: (portfolio balance ) equals: 200.
	self assert: (portfolio hasRegistered: transaction1).
	self assert: (portfolio hasRegistered: transaction2).
	self assert: (portfolio transactions size) equals: 2.
	self assert: (portfolio transactions includes: transaction1).
	self assert: (portfolio transactions includes: transaction2).
	 
! !

!methodRemoval: PortfolioTest #test13bisPortfolioHasMoreThanOneGrandChildPortfolioWithAnAccountAndADepositRegistered stamp: 'EMI 11/8/2020 18:39:32'!
test13bisPortfolioHasMoreThanOneGrandChildPortfolioWithAnAccountAndADepositRegistered
	| portfolio portfolioChild portfolioGrandChildLeft  portfolioGrandChildRight account1 account2 transaction1 transaction2|
	portfolio _ Portfolio new.
	portfolioChild _ Portfolio new.
	portfolioGrandChildLeft _ Portfolio new.
	portfolioGrandChildRight _ Portfolio new.
	account1 _  ReceptiveAccount new.
	account2 _  ReceptiveAccount new.
	transaction1 _ Deposit register: 100 on: account1.
	transaction2 _ Deposit register: 100 on: account2.
	.
	self assertAdd: account1 To: portfolioGrandChildLeft.
	self assertAdd: account2 To: portfolioGrandChildRight.
	self assertAdd: portfolioGrandChildLeft To: portfolioChild.
	self assertAdd: portfolioGrandChildRight To: portfolioChild.
	self assertAdd: portfolioChild To: portfolio.
	self assert: (portfolio balance ) equals: 200.
	self assert: (portfolio hasRegistered: transaction1).
	self assert: (portfolio hasRegistered: transaction2).
	self assert: (portfolio transactions size) equals: 2.
	self assert: (portfolio transactions includes: transaction1).
	self assert: (portfolio transactions includes: transaction2).
	 
!
!PortfolioTest methodsFor: 'tests - tree structure' stamp: 'EMI 11/8/2020 18:39:38'!
test15PortfolioHasMoreThanOneGrandChildPortfolioWithAnAccountAndADepositRegistered
	| portfolio portfolioChild portfolioGrandChildLeft  portfolioGrandChildRight account1 account2 transaction1 transaction2|
	portfolio _ Portfolio new.
	portfolioChild _ Portfolio new.
	portfolioGrandChildLeft _ Portfolio new.
	portfolioGrandChildRight _ Portfolio new.
	account1 _  ReceptiveAccount new.
	account2 _  ReceptiveAccount new.
	transaction1 _ Deposit register: 100 on: account1.
	transaction2 _ Deposit register: 100 on: account2.
	.
	self assertAdd: account1 To: portfolioGrandChildLeft.
	self assertAdd: account2 To: portfolioGrandChildRight.
	self assertAdd: portfolioGrandChildLeft To: portfolioChild.
	self assertAdd: portfolioGrandChildRight To: portfolioChild.
	self assertAdd: portfolioChild To: portfolio.
	self assert: (portfolio balance ) equals: 200.
	self assert: (portfolio hasRegistered: transaction1).
	self assert: (portfolio hasRegistered: transaction2).
	self assert: (portfolio transactions size) equals: 2.
	self assert: (portfolio transactions includes: transaction1).
	self assert: (portfolio transactions includes: transaction2).
	 
! !

!methodRemoval: PortfolioTest #test15bisPortfolioHasMoreThanOneGrandChildPortfolioWithAnAccountAndADepositRegistered stamp: 'EMI 11/8/2020 18:39:38'!
test15bisPortfolioHasMoreThanOneGrandChildPortfolioWithAnAccountAndADepositRegistered
	| portfolio portfolioChild portfolioGrandChildLeft  portfolioGrandChildRight account1 account2 transaction1 transaction2|
	portfolio _ Portfolio new.
	portfolioChild _ Portfolio new.
	portfolioGrandChildLeft _ Portfolio new.
	portfolioGrandChildRight _ Portfolio new.
	account1 _  ReceptiveAccount new.
	account2 _  ReceptiveAccount new.
	transaction1 _ Deposit register: 100 on: account1.
	transaction2 _ Deposit register: 100 on: account2.
	.
	self assertAdd: account1 To: portfolioGrandChildLeft.
	self assertAdd: account2 To: portfolioGrandChildRight.
	self assertAdd: portfolioGrandChildLeft To: portfolioChild.
	self assertAdd: portfolioGrandChildRight To: portfolioChild.
	self assertAdd: portfolioChild To: portfolio.
	self assert: (portfolio balance ) equals: 200.
	self assert: (portfolio hasRegistered: transaction1).
	self assert: (portfolio hasRegistered: transaction2).
	self assert: (portfolio transactions size) equals: 2.
	self assert: (portfolio transactions includes: transaction1).
	self assert: (portfolio transactions includes: transaction2).
	 
!
!PortfolioTest methodsFor: 'tests - tree structure' stamp: 'EMI 11/8/2020 18:39:48'!
test14PortfolioHasMoreThanOneChildPortfolioWithAnAccountAndADepositRegistered
	| portfolio portfolioChildLeft  portfolioChildRight account1 account2 transaction1 transaction2|
	portfolio _ Portfolio new.
	portfolioChildLeft _ Portfolio new.
	portfolioChildRight _ Portfolio new.
	account1 _  ReceptiveAccount new.
	account2 _  ReceptiveAccount new.
	transaction1 _ Deposit register: 100 on: account1.
	transaction2 _ Deposit register: 100 on: account2.
	
	self assertAdd: account1 To: portfolioChildLeft.
	self assertAdd: account2 To: portfolioChildRight.
	self assertAdd: portfolioChildLeft To: portfolio.
	self assertAdd: portfolioChildRight To: portfolio.
	self assert: (portfolio hasRegistered: transaction1).
	self assert: (portfolio hasRegistered: transaction2).
	self assert: (portfolio transactions size) equals: 2.
	self assert: (portfolio transactions includes: transaction1).
	self assert: (portfolio transactions includes: transaction2).
	 
	 
! !

!methodRemoval: PortfolioTest #test13PortfolioHasMoreThanOneChildPortfolioWithAnAccountAndADepositRegistered stamp: 'EMI 11/8/2020 18:39:48'!
test13PortfolioHasMoreThanOneChildPortfolioWithAnAccountAndADepositRegistered
	| portfolio portfolioChildLeft  portfolioChildRight account1 account2 transaction1 transaction2|
	portfolio _ Portfolio new.
	portfolioChildLeft _ Portfolio new.
	portfolioChildRight _ Portfolio new.
	account1 _  ReceptiveAccount new.
	account2 _  ReceptiveAccount new.
	transaction1 _ Deposit register: 100 on: account1.
	transaction2 _ Deposit register: 100 on: account2.
	
	self assertAdd: account1 To: portfolioChildLeft.
	self assertAdd: account2 To: portfolioChildRight.
	self assertAdd: portfolioChildLeft To: portfolio.
	self assertAdd: portfolioChildRight To: portfolio.
	self assert: (portfolio hasRegistered: transaction1).
	self assert: (portfolio hasRegistered: transaction2).
	self assert: (portfolio transactions size) equals: 2.
	self assert: (portfolio transactions includes: transaction1).
	self assert: (portfolio transactions includes: transaction2).
	 
	 
!
!PortfolioTest methodsFor: 'tests - tree structure' stamp: 'EMI 11/8/2020 18:39:56'!
test13PortfolioHasOneGrandChildPortfolioWithAnAccountAndADepositRegistered
	| portfolio portfolioChild portfolioGrandChild account transaction |
	portfolio _ Portfolio new.
	portfolioChild _ Portfolio new.
	portfolioGrandChild _ Portfolio new.
	account _  ReceptiveAccount new.
	transaction _ Deposit register: 100 on: account. 
	
	self assertAdd: account To: portfolioGrandChild.
	self assertAdd: portfolioGrandChild To: portfolioChild.
	self assertAdd: portfolioChild To: portfolio.
	self assert: (portfolio balance ) equals: 100.
	self assert: (portfolio hasRegistered: transaction).
	self assert: (portfolio transactions size) equals: 1.
	self assert: (portfolio transactions includes: transaction).

	 
! !

!methodRemoval: PortfolioTest #test12bisPortfolioHasOneGrandChildPortfolioWithAnAccountAndADepositRegistered stamp: 'EMI 11/8/2020 18:39:56'!
test12bisPortfolioHasOneGrandChildPortfolioWithAnAccountAndADepositRegistered
	| portfolio portfolioChild portfolioGrandChild account transaction |
	portfolio _ Portfolio new.
	portfolioChild _ Portfolio new.
	portfolioGrandChild _ Portfolio new.
	account _  ReceptiveAccount new.
	transaction _ Deposit register: 100 on: account. 
	
	self assertAdd: account To: portfolioGrandChild.
	self assertAdd: portfolioGrandChild To: portfolioChild.
	self assertAdd: portfolioChild To: portfolio.
	self assert: (portfolio balance ) equals: 100.
	self assert: (portfolio hasRegistered: transaction).
	self assert: (portfolio transactions size) equals: 1.
	self assert: (portfolio transactions includes: transaction).

	 
!

----SNAPSHOT----(8 November 2020 18:40:09) CuisUniversity-4383.image priorSource: 18284179!
!ReceptiveAccount methodsFor: 'nil' stamp: 'EMI 11/8/2020 18:41:22'!
add: anAsset
	^self.! !
!Asset methodsFor: 'nil' stamp: 'EMI 11/8/2020 18:41:54'!
add: anAsset
	^self subclassResponsibility.! !

----SNAPSHOT----(8 November 2020 18:43:18) CuisUniversity-4383.image priorSource: 18324735!

----SNAPSHOT----(8 November 2020 18:47:40) CuisUniversity-4383.image priorSource: 18325070!

----QUIT----(8 November 2020 18:47:48) CuisUniversity-4383.image priorSource: 18325163!

----STARTUP---- (9 November 2020 19:15:48) as /home/doraserver/CuisUniversity/CuisUniversity-4383.image!


!classRemoval: #ReceptiveAccount stamp: 'EMI 11/9/2020 19:15:56'!
Asset subclass: #ReceptiveAccount
	instanceVariableNames: 'transactions'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classRemoval: #Portfolio stamp: 'EMI 11/9/2020 19:15:57'!
Asset subclass: #Portfolio
	instanceVariableNames: 'assets'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classRemoval: #Asset stamp: 'EMI 11/9/2020 19:15:58'!
Object subclass: #Asset
	instanceVariableNames: 'parents'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classRemoval: #Withdraw stamp: 'EMI 11/9/2020 19:15:59'!
AccountTransaction subclass: #Withdraw
	instanceVariableNames: 'value'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classRemoval: #Deposit stamp: 'EMI 11/9/2020 19:16:00'!
AccountTransaction subclass: #Deposit
	instanceVariableNames: 'value'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classRemoval: #AccountTransaction stamp: 'EMI 11/9/2020 19:16:01'!
Object subclass: #AccountTransaction
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classRemoval: #ReceptiveAccountTest stamp: 'EMI 11/9/2020 19:16:01'!
TestCase subclass: #ReceptiveAccountTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classRemoval: #PortfolioTest stamp: 'EMI 11/9/2020 19:16:02'!
TestCase subclass: #PortfolioTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

----End fileIn of /home/doraserver/CuisUniversity/Portfolio2 - Ejercicio.st----!
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'EMI 11/9/2020 19:26:15'!
test08AccountCanTransferToAnotherAccount

	| account deposit |
	
	account := ReceptiveAccount new.
	
	deposit := Deposit register: 100 on: account.
		
	self assert: 1 equals: account transactions size .
	self assert: (account transactions includes: deposit).
! !

!classDefinition: #Transfer category: 'Portfolio2-Ejercicio' stamp: 'EMI 11/9/2020 19:29:19'!
AccountTransaction subclass: #Transfer
	instanceVariableNames: 'origin destination amount'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio2-Ejercicio'!
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'EMI 11/9/2020 19:28:11' prior: 50905091!
test08AccountCanTransferToAnotherAccount

	| accountOrigin accountDestination |
	
	accountOrigin _ ReceptiveAccount new.
	accountDestination _ ReceptiveAccount new.
	
	Transfer from: accountOrigin to: accountDestination amount: 10.
! !
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'EMI 11/9/2020 19:33:14' prior: 50905111!
test08AccountCanTransferToAnotherAccount

	| accountOrigin accountDestination |
	
	accountOrigin _ ReceptiveAccount new.
	accountDestination _ ReceptiveAccount new.
	
	Deposit register: 10 on: accountOrigin.
	
	Transfer from: accountOrigin to: accountDestination amount: 10.
	
	self assert: accountOrigin transactions size equals: 1.
	self assert: accountDestination transactions size equals: 1.
	self assert: accountOrigin balance equals: 0.
	self assert: accountDestination balance equals: 10.
! !

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'EMI 11/9/2020 19:34:38'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'EMI 11/9/2020 19:34:38'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'EMI 11/9/2020 19:34:38'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'EMI 11/9/2020 19:34:38'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'EMI 11/9/2020 19:34:38'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'EMI 11/9/2020 19:34:38'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'EMI 11/9/2020 19:34:38'!
PASSED!

!testRun: #ReceptiveAccountTest #test08AccountCanTransferToAnotherAccount stamp: 'EMI 11/9/2020 19:34:38'!
ERROR!

!testRun: #ReceptiveAccountTest #test08AccountCanTransferToAnotherAccount stamp: 'EMI 11/9/2020 19:34:38'!
ERROR!
!Transfer class methodsFor: 'initialization' stamp: 'EMI 11/9/2020 19:35:08'!
from: aReceptiveAccount to: aReceptiveAccount2 amount: aSmallInteger 
	self shouldBeImplemented.! !
!Transfer class methodsFor: 'initialization' stamp: 'EMI 11/9/2020 19:39:12' prior: 50905174!
from: anOriginReceptiveAccount to: aDestinationReceptiveAccount amount: aPositiveNumber
	| instance |
	instance _ self new initializeFor: aPositiveNumber.
	anOriginReceptiveAccount register: instance.
	aDestinationReceptiveAccount register: instance.
	^instance.! !

!testRun: #ReceptiveAccountTest #test08AccountCanTransferToAnotherAccount stamp: 'EMI 11/9/2020 19:39:15'!
ERROR!

!classDefinition: #Transfer category: 'Portfolio2-Ejercicio' stamp: 'EMI 11/9/2020 19:39:36'!
AccountTransaction subclass: #Transfer
	instanceVariableNames: 'origin destination amount positiveNumber'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio2-Ejercicio'!
!Transfer methodsFor: 'initialization' stamp: 'EMI 11/9/2020 19:39:36'!
initializeFor: aPositiveNumber 
	self shouldBeImplemented.
	positiveNumber := aPositiveNumber.! !
!Transfer methodsFor: 'initialization' stamp: 'EMI 11/9/2020 19:40:07' prior: 50905204!
initializeFor: aPositiveNumber 
	amount _ aPositiveNumber.! !

!testRun: #ReceptiveAccountTest #test08AccountCanTransferToAnotherAccount stamp: 'EMI 11/9/2020 19:40:09'!
FAILURE!
!Transfer class methodsFor: 'initialization' stamp: 'EMI 11/9/2020 19:40:45' prior: 50905181!
from: anOriginReceptiveAccount to: aDestinationReceptiveAccount amount: aPositiveNumber
	| instance |
	instance _ self new initializeFor: aPositiveNumber withOrigin: anOriginReceptiveAccount withDestination: aDestinationReceptiveAccount .
	anOriginReceptiveAccount register: instance.
	aDestinationReceptiveAccount register: instance.
	^instance.! !
!Transfer class methodsFor: 'initialization' stamp: 'EMI 11/9/2020 19:40:51' prior: 50905219!
from: anOriginReceptiveAccount to: aDestinationReceptiveAccount amount: aPositiveNumber
	| instance |
	instance _ self new initializeFor: aPositiveNumber withOrigin: anOriginReceptiveAccount withDestination: aDestinationReceptiveAccount.
	anOriginReceptiveAccount register: instance.
	aDestinationReceptiveAccount register: instance.
	^instance.! !
!Transfer methodsFor: 'initialization' stamp: 'EMI 11/9/2020 19:41:19'!
initializeFor: aPositiveNumber withOrigin: anOriginReceptiveAccount withDestination: aDestinationReceptiveAccount
	amount _ aPositiveNumber.
	origin _ anOriginReceptiveAccount.
	destination _ aDestinationReceptiveAccount.! !

!methodRemoval: Transfer #initializeFor: stamp: 'EMI 11/9/2020 19:41:27'!
initializeFor: aPositiveNumber 
	amount _ aPositiveNumber.!
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'EMI 11/9/2020 19:42:03' prior: 50905122!
test08AccountCanTransferToAnotherAccount

	| accountOrigin accountDestination |
	
	accountOrigin _ ReceptiveAccount new.
	accountDestination _ ReceptiveAccount new.
	
	Deposit register: 10 on: accountOrigin.
	
	Transfer from: accountOrigin to: accountDestination amount: 10.
	
	self assert: accountOrigin transactions size equals: 2.
	self assert: accountDestination transactions size equals: 1.
	self assert: accountOrigin balance equals: 0.
	self assert: accountDestination balance equals: 10.
! !

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'EMI 11/9/2020 19:42:07'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'EMI 11/9/2020 19:42:07'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'EMI 11/9/2020 19:42:07'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'EMI 11/9/2020 19:42:07'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'EMI 11/9/2020 19:42:07'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'EMI 11/9/2020 19:42:07'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'EMI 11/9/2020 19:42:07'!
PASSED!

!testRun: #ReceptiveAccountTest #test08AccountCanTransferToAnotherAccount stamp: 'EMI 11/9/2020 19:42:07'!
ERROR!

!testRun: #ReceptiveAccountTest #test08AccountCanTransferToAnotherAccount stamp: 'EMI 11/9/2020 19:42:07'!
ERROR!
!Transfer methodsFor: 'as yet unclassified' stamp: 'EMI 11/9/2020 19:42:39' overrides: 50904992!
affectBalance: aSmallInteger 
	self shouldBeImplemented.! !
!Transfer methodsFor: 'as yet unclassified' stamp: 'EMI 11/9/2020 19:44:52' prior: 50905315 overrides: 50904992!
affectBalance: aBalance 
	self shouldBeImplemented.! !

AccountTransaction subclass: #Transfer
	instanceVariableNames: 'origin destination amount'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio2-Ejercicio'!

!classDefinition: #Transfer category: 'Portfolio2-Ejercicio' stamp: 'EMI 11/9/2020 19:46:46'!
AccountTransaction subclass: #Transfer
	instanceVariableNames: 'origin destination amount'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio2-Ejercicio'!
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'EMI 11/9/2020 19:50:34' prior: 50905262!
test08AccountCanTransferToAnotherAccount

	| accountOrigin accountDestination |
	
	accountOrigin _ ReceptiveAccount new.
	accountDestination _ ReceptiveAccount new.
	
	Deposit register: 10 on: accountOrigin.
	
	Transfer from: accountOrigin to: accountDestination amount: 0.
	
	self assert: accountOrigin transactions size equals: 2.
	self assert: accountDestination transactions size equals: 1.
	self assert: accountOrigin balance equals: 10.
	self assert: accountDestination balance equals: 0.
! !
!Transfer methodsFor: 'as yet unclassified' stamp: 'EMI 11/9/2020 19:50:43' prior: 50905321 overrides: 50904992!
affectBalance: aBalance 
	^0.! !

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'EMI 11/9/2020 19:50:45'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'EMI 11/9/2020 19:50:45'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'EMI 11/9/2020 19:50:45'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'EMI 11/9/2020 19:50:45'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'EMI 11/9/2020 19:50:45'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'EMI 11/9/2020 19:50:45'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'EMI 11/9/2020 19:50:45'!
PASSED!

!testRun: #ReceptiveAccountTest #test08AccountCanTransferToAnotherAccount stamp: 'EMI 11/9/2020 19:50:45'!
FAILURE!

!testRun: #ReceptiveAccountTest #test08AccountCanTransferToAnotherAccount stamp: 'EMI 11/9/2020 19:50:45'!
FAILURE!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'EMI 11/9/2020 19:51:03'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'EMI 11/9/2020 19:51:03'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'EMI 11/9/2020 19:51:03'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'EMI 11/9/2020 19:51:03'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'EMI 11/9/2020 19:51:03'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'EMI 11/9/2020 19:51:03'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'EMI 11/9/2020 19:51:03'!
PASSED!

!testRun: #ReceptiveAccountTest #test08AccountCanTransferToAnotherAccount stamp: 'EMI 11/9/2020 19:51:03'!
FAILURE!

!testRun: #ReceptiveAccountTest #test08AccountCanTransferToAnotherAccount stamp: 'EMI 11/9/2020 19:51:03'!
FAILURE!
!Transfer methodsFor: 'as yet unclassified' stamp: 'EMI 11/9/2020 19:52:03' prior: 50905360 overrides: 50904992!
affectBalance: aBalance 
	^aBalance.! !

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'EMI 11/9/2020 19:52:07'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'EMI 11/9/2020 19:52:07'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'EMI 11/9/2020 19:52:07'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'EMI 11/9/2020 19:52:07'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'EMI 11/9/2020 19:52:07'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'EMI 11/9/2020 19:52:07'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'EMI 11/9/2020 19:52:07'!
PASSED!

!testRun: #ReceptiveAccountTest #test08AccountCanTransferToAnotherAccount stamp: 'EMI 11/9/2020 19:52:07'!
PASSED!
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'EMI 11/9/2020 19:54:40'!
test08AccountCanTransferToAnotherAccountWithZeroAmount

	| accountOrigin accountDestination |
	
	accountOrigin _ ReceptiveAccount new.
	accountDestination _ ReceptiveAccount new.
	
	Deposit register: 10 on: accountOrigin.
	
	Transfer from: accountOrigin to: accountDestination amount: 0.
	
	self assert: accountOrigin transactions size equals: 2.
	self assert: accountDestination transactions size equals: 1.
	self assert: accountOrigin balance equals: 10.
	self assert: accountDestination balance equals: 0.
! !

!methodRemoval: ReceptiveAccountTest #test08AccountCanTransferToAnotherAccount stamp: 'EMI 11/9/2020 19:54:40'!
test08AccountCanTransferToAnotherAccount

	| accountOrigin accountDestination |
	
	accountOrigin _ ReceptiveAccount new.
	accountDestination _ ReceptiveAccount new.
	
	Deposit register: 10 on: accountOrigin.
	
	Transfer from: accountOrigin to: accountDestination amount: 0.
	
	self assert: accountOrigin transactions size equals: 2.
	self assert: accountDestination transactions size equals: 1.
	self assert: accountOrigin balance equals: 10.
	self assert: accountDestination balance equals: 0.
!
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'EMI 11/9/2020 19:54:51'!
test09AccountCanTransferToAnotherAccountWithPositiveAmount

	| accountOrigin accountDestination |
	
	accountOrigin _ ReceptiveAccount new.
	accountDestination _ ReceptiveAccount new.
	
	Deposit register: 10 on: accountOrigin.
	
	Transfer from: accountOrigin to: accountDestination amount: 0.
	
	self assert: accountOrigin transactions size equals: 2.
	self assert: accountDestination transactions size equals: 1.
	self assert: accountOrigin balance equals: 10.
	self assert: accountDestination balance equals: 0.
! !
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'EMI 11/9/2020 19:55:03' prior: 50905505!
test09AccountCanTransferToAnotherAccountWithPositiveAmount

	| accountOrigin accountDestination |
	
	accountOrigin _ ReceptiveAccount new.
	accountDestination _ ReceptiveAccount new.
	
	Deposit register: 10 on: accountOrigin.
	
	Transfer from: accountOrigin to: accountDestination amount: 10.
	
	self assert: accountOrigin transactions size equals: 2.
	self assert: accountDestination transactions size equals: 1.
	self assert: accountOrigin balance equals: 0.
	self assert: accountDestination balance equals: 0.
! !

AccountTransaction subclass: #ExtractionTransfer
	instanceVariableNames: 'transfer'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio2-Ejercicio'!

!classDefinition: #ExtractionTransfer category: 'Portfolio2-Ejercicio' stamp: 'EMI 11/9/2020 19:57:31'!
AccountTransaction subclass: #ExtractionTransfer
	instanceVariableNames: 'transfer'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio2-Ejercicio'!
!ExtractionTransfer class methodsFor: 'nil' stamp: 'EMI 11/9/2020 19:58:13'!
fromTransfer: aTransfer
	^self new initialize: aTransfer.! !
!ExtractionTransfer methodsFor: 'nil' stamp: 'EMI 11/9/2020 19:58:29'!
initialize: aTransfer
	! !
!ExtractionTransfer methodsFor: 'as yet unclassified' stamp: 'EMI 11/9/2020 19:58:36' prior: 50905562!
initialize: aTransfer
	transfer _ aTransfer.
	! !
!ExtractionTransfer methodsFor: 'nil' stamp: 'EMI 11/9/2020 19:59:44'!
afferBalance: aBalance
	^aBalance - transfer value.! !
!ExtractionTransfer methodsFor: 'nil' stamp: 'EMI 11/9/2020 20:00:16' overrides: 50904988!
value
	^transfer value.! !
!Transfer methodsFor: 'nil' stamp: 'EMI 11/9/2020 20:00:34' overrides: 50904988!
value
	^amount.! !
!Transfer class methodsFor: 'initialization' stamp: 'EMI 11/9/2020 20:01:04' prior: 50905233!
from: anOriginReceptiveAccount to: aDestinationReceptiveAccount amount: aPositiveNumber
	| instance |
	instance _ self new initializeFor: aPositiveNumber withOrigin: anOriginReceptiveAccount withDestination: aDestinationReceptiveAccount.
	anOriginReceptiveAccount register: (ExtractionTransfer from: instance).
	aDestinationReceptiveAccount register: instance.
	^instance.! !
!Transfer class methodsFor: 'initialization' stamp: 'EMI 11/9/2020 20:01:16' prior: 50905584!
from: anOriginReceptiveAccount to: aDestinationReceptiveAccount amount: aPositiveNumber
	| instance |
	instance _ self new initializeFor: aPositiveNumber withOrigin: anOriginReceptiveAccount withDestination: aDestinationReceptiveAccount.
	anOriginReceptiveAccount register: (ExtractionTransfer fromTransfer: instance).
	aDestinationReceptiveAccount register: instance.
	^instance.! !

AccountTransaction subclass: #DepositTransfer
	instanceVariableNames: 'transfer'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio2-Ejercicio'!

!classDefinition: #DepositTransfer category: 'Portfolio2-Ejercicio' stamp: 'EMI 11/9/2020 20:01:44'!
AccountTransaction subclass: #DepositTransfer
	instanceVariableNames: 'transfer'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio2-Ejercicio'!
!DepositTransfer methodsFor: 'nil' stamp: 'EMI 11/9/2020 20:02:17' overrides: 50904992!
affectBalance: aBalance
	^aBalance + transfer value.! !
!DepositTransfer methodsFor: 'as yet unclassified' stamp: 'EMI 11/9/2020 20:02:26' overrides: 50904988!
value 
	^transfer value.! !
!DepositTransfer class methodsFor: 'nil' stamp: 'EMI 11/9/2020 20:02:57'!
fromTransfer: aTransfer
	^self new initialization: aTransfer.! !
!DepositTransfer methodsFor: 'nil' stamp: 'EMI 11/9/2020 20:03:24'!
initialization: aTransfer
	transfer _ aTransfer.! !
!DepositTransfer methodsFor: 'as yet unclassified' stamp: 'EMI 11/9/2020 20:03:48'!
initialize: aTransfer
	transfer _ aTransfer.! !
!DepositTransfer class methodsFor: 'as yet unclassified' stamp: 'EMI 11/9/2020 20:03:48' prior: 50905637!
fromTransfer: aTransfer
	^self new initialize: aTransfer.! !

!methodRemoval: DepositTransfer #initialization: stamp: 'EMI 11/9/2020 20:03:48'!
initialization: aTransfer
	transfer _ aTransfer.!
!ExtractionTransfer methodsFor: 'as yet unclassified' stamp: 'EMI 11/9/2020 20:04:09' overrides: 50904992!
affectBalance: aBalance
	^aBalance - transfer value.! !

!methodRemoval: ExtractionTransfer #afferBalance: stamp: 'EMI 11/9/2020 20:04:09'!
afferBalance: aBalance
	^aBalance - transfer value.!
!Transfer class methodsFor: 'initialization' stamp: 'EMI 11/9/2020 20:04:33' prior: 50905599!
from: anOriginReceptiveAccount to: aDestinationReceptiveAccount amount: aPositiveNumber
	| instance |
	instance _ self new initializeFor: aPositiveNumber withOrigin: anOriginReceptiveAccount withDestination: aDestinationReceptiveAccount.
	anOriginReceptiveAccount register: (ExtractionTransfer fromTransfer: instance).
	aDestinationReceptiveAccount register: (DepositTransfer fromTransfer: instance).
	^instance.! !

----SNAPSHOT----(9 November 2020 20:04:56) CuisUniversity-4383.image priorSource: 18325256!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'EMI 11/9/2020 20:05:03'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'EMI 11/9/2020 20:05:03'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'EMI 11/9/2020 20:05:03'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'EMI 11/9/2020 20:05:03'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'EMI 11/9/2020 20:05:03'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'EMI 11/9/2020 20:05:03'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'EMI 11/9/2020 20:05:03'!
PASSED!

!testRun: #ReceptiveAccountTest #test08AccountCanTransferToAnotherAccountWithZeroAmount stamp: 'EMI 11/9/2020 20:05:03'!
PASSED!

!testRun: #ReceptiveAccountTest #test09AccountCanTransferToAnotherAccountWithPositiveAmount stamp: 'EMI 11/9/2020 20:05:03'!
FAILURE!

!testRun: #ReceptiveAccountTest #test09AccountCanTransferToAnotherAccountWithPositiveAmount stamp: 'EMI 11/9/2020 20:05:03'!
FAILURE!
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'EMI 11/9/2020 20:05:26' prior: 50905524!
test09AccountCanTransferToAnotherAccountWithPositiveAmount

	| accountOrigin accountDestination |
	
	accountOrigin _ ReceptiveAccount new.
	accountDestination _ ReceptiveAccount new.
	
	Deposit register: 10 on: accountOrigin.
	
	Transfer from: accountOrigin to: accountDestination amount: 10.
	
	self assert: accountOrigin transactions size equals: 2.
	self assert: accountDestination transactions size equals: 1.
	self assert: accountOrigin balance equals: 0.
	self assert: accountDestination balance equals: 10.
! !

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'EMI 11/9/2020 20:05:37'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'EMI 11/9/2020 20:05:37'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'EMI 11/9/2020 20:05:37'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'EMI 11/9/2020 20:05:37'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'EMI 11/9/2020 20:05:37'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'EMI 11/9/2020 20:05:37'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'EMI 11/9/2020 20:05:37'!
PASSED!

!testRun: #ReceptiveAccountTest #test08AccountCanTransferToAnotherAccountWithZeroAmount stamp: 'EMI 11/9/2020 20:05:37'!
PASSED!

!testRun: #ReceptiveAccountTest #test09AccountCanTransferToAnotherAccountWithPositiveAmount stamp: 'EMI 11/9/2020 20:05:37'!
PASSED!

Transfer subclass: #ExtractionTransfer
	instanceVariableNames: 'transfer'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio2-Ejercicio'!

!classDefinition: #ExtractionTransfer category: 'Portfolio2-Ejercicio' stamp: 'EMI 11/9/2020 20:09:48'!
Transfer subclass: #ExtractionTransfer
	instanceVariableNames: 'transfer'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio2-Ejercicio'!

Transfer subclass: #DepositTransfer
	instanceVariableNames: 'transfer'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio2-Ejercicio'!

!classDefinition: #DepositTransfer category: 'Portfolio2-Ejercicio' stamp: 'EMI 11/9/2020 20:09:58'!
Transfer subclass: #DepositTransfer
	instanceVariableNames: 'transfer'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio2-Ejercicio'!
!Transfer methodsFor: 'as yet unclassified' stamp: 'EMI 11/9/2020 20:10:06' prior: 50905433 overrides: 50904992!
affectBalance: aBalance 
	^self subclassResponsibility.! !

!methodRemoval: DepositTransfer #value stamp: 'EMI 11/9/2020 20:10:33'!
value 
	^transfer value.!

!methodRemoval: ExtractionTransfer #value stamp: 'EMI 11/9/2020 20:10:40'!
value
	^transfer value.!
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'EMI 11/9/2020 20:12:21'!
test10AccountsWithTransferKnowsOriginAndDestination

	| accountOrigin accountDestination |
	
	accountOrigin _ ReceptiveAccount new.
	accountDestination _ ReceptiveAccount new.
	
	Deposit register: 10 on: accountOrigin.
	
	Transfer from: accountOrigin to: accountDestination amount: 10.
	
	self assert: accountOrigin transactions size equals: 2.
	self assert: accountDestination transactions size equals: 1.
	self assert: accountOrigin balance equals: 0.
	self assert: accountDestination balance equals: 10.
! !
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'EMI 11/9/2020 20:14:10' prior: 50905821!
test10AccountsWithTransferKnowsOriginAndDestination

	| accountOrigin accountDestination |
	
	accountOrigin _ ReceptiveAccount new.
	accountDestination _ ReceptiveAccount new.
	
	Deposit register: 10 on: accountOrigin.
	Transfer from: accountOrigin to: accountDestination amount: 10.
	
	self assert: (accountOrigin transactions 	last) origin equals: accountOrigin.
	self assert: (accountDestination transactions 	last) origin equals: accountDestination.
! !
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'EMI 11/9/2020 20:14:38' prior: 50905840!
test10AccountsWithTransferKnowsOriginAndDestination

	| accountOrigin accountDestination |
	
	accountOrigin _ ReceptiveAccount new.
	accountDestination _ ReceptiveAccount new.
	
	Deposit register: 10 on: accountOrigin.
	Transfer from: accountOrigin to: accountDestination amount: 10.
	
	self assert: (accountOrigin transactions 	last) origin equals: accountOrigin.
	self assert: (accountDestination transactions 	last) destination equals: accountDestination.
! !

!testRun: #ReceptiveAccountTest #test10AccountsWithTransferKnowsOriginAndDestination stamp: 'EMI 11/9/2020 20:14:45'!
ERROR!
!Transfer methodsFor: 'nil' stamp: 'EMI 11/9/2020 20:15:06'!
origin
	^origin.! !
!Transfer methodsFor: 'as yet unclassified' stamp: 'EMI 11/9/2020 20:15:13'!
destination
	^destination .! !
!Transfer methodsFor: 'as yet unclassified' stamp: 'EMI 11/9/2020 20:15:15' prior: 50905883!
destination
	^destination.! !

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'EMI 11/9/2020 20:15:20'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'EMI 11/9/2020 20:15:20'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'EMI 11/9/2020 20:15:20'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'EMI 11/9/2020 20:15:20'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'EMI 11/9/2020 20:15:20'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'EMI 11/9/2020 20:15:20'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'EMI 11/9/2020 20:15:20'!
PASSED!

!testRun: #ReceptiveAccountTest #test08AccountCanTransferToAnotherAccountWithZeroAmount stamp: 'EMI 11/9/2020 20:15:20'!
PASSED!

!testRun: #ReceptiveAccountTest #test09AccountCanTransferToAnotherAccountWithPositiveAmount stamp: 'EMI 11/9/2020 20:15:20'!
PASSED!

!testRun: #ReceptiveAccountTest #test10AccountsWithTransferKnowsOriginAndDestination stamp: 'EMI 11/9/2020 20:15:20'!
FAILURE!

!testRun: #ReceptiveAccountTest #test10AccountsWithTransferKnowsOriginAndDestination stamp: 'EMI 11/9/2020 20:15:20'!
FAILURE!
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'EMI 11/9/2020 20:15:56' prior: 50905858!
test10AccountsWithTransferKnowsOriginAndDestination

	| accountOrigin accountDestination |
	
	accountOrigin _ ReceptiveAccount new.
	accountDestination _ ReceptiveAccount new.
	
	Deposit register: 10 on: accountOrigin.
	Transfer from: accountOrigin to: accountDestination amount: 10.
	
	self assert: (accountOrigin transactions 	at: 2) origin equals: accountOrigin.
	self assert: (accountDestination transactions 	last) destination equals: accountDestination.
! !

!testRun: #ReceptiveAccountTest #test10AccountsWithTransferKnowsOriginAndDestination stamp: 'EMI 11/9/2020 20:16:06'!
FAILURE!
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'EMI 11/9/2020 20:19:56' prior: 50905934!
test10AccountsWithTransferKnowsOriginAndDestination

	| accountOrigin accountDestination |
	
	accountOrigin _ ReceptiveAccount new.
	accountDestination _ ReceptiveAccount new.
	
	Deposit register: 10 on: accountOrigin.
	Transfer from: accountOrigin to: accountDestination amount: 10.
	
	self assert: (accountOrigin transactions 	detect: [:aTransaction | aTransaction isKindOf: Transfer]) origin equals: accountOrigin.
	self assert: (accountDestination transactions 	first) destination equals: accountDestination.
! !

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'EMI 11/9/2020 20:20:04'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'EMI 11/9/2020 20:20:04'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'EMI 11/9/2020 20:20:04'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'EMI 11/9/2020 20:20:04'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'EMI 11/9/2020 20:20:04'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'EMI 11/9/2020 20:20:04'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'EMI 11/9/2020 20:20:04'!
PASSED!

!testRun: #ReceptiveAccountTest #test08AccountCanTransferToAnotherAccountWithZeroAmount stamp: 'EMI 11/9/2020 20:20:04'!
PASSED!

!testRun: #ReceptiveAccountTest #test09AccountCanTransferToAnotherAccountWithPositiveAmount stamp: 'EMI 11/9/2020 20:20:04'!
PASSED!

!testRun: #ReceptiveAccountTest #test10AccountsWithTransferKnowsOriginAndDestination stamp: 'EMI 11/9/2020 20:20:04'!
FAILURE!

!testRun: #ReceptiveAccountTest #test10AccountsWithTransferKnowsOriginAndDestination stamp: 'EMI 11/9/2020 20:20:04'!
FAILURE!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'EMI 11/9/2020 20:20:24'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'EMI 11/9/2020 20:20:24'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'EMI 11/9/2020 20:20:24'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'EMI 11/9/2020 20:20:24'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'EMI 11/9/2020 20:20:24'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'EMI 11/9/2020 20:20:24'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'EMI 11/9/2020 20:20:24'!
PASSED!

!testRun: #ReceptiveAccountTest #test08AccountCanTransferToAnotherAccountWithZeroAmount stamp: 'EMI 11/9/2020 20:20:24'!
PASSED!

!testRun: #ReceptiveAccountTest #test09AccountCanTransferToAnotherAccountWithPositiveAmount stamp: 'EMI 11/9/2020 20:20:24'!
PASSED!

!testRun: #ReceptiveAccountTest #test10AccountsWithTransferKnowsOriginAndDestination stamp: 'EMI 11/9/2020 20:20:24'!
FAILURE!

!testRun: #ReceptiveAccountTest #test10AccountsWithTransferKnowsOriginAndDestination stamp: 'EMI 11/9/2020 20:20:24'!
FAILURE!

(accountOrigin transactions 	detect: [:aTransaction | aTransaction isKindOf: Transfer])!

!testRun: #ReceptiveAccountTest #test10AccountsWithTransferKnowsOriginAndDestination stamp: 'EMI 11/9/2020 20:23:30'!
FAILURE!
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'EMI 11/9/2020 20:24:35' prior: 50905956!
test10AccountsWithTransferKnowsOriginAndDestination

	| accountOrigin accountDestination t |
	
	accountOrigin _ ReceptiveAccount new.
	accountDestination _ ReceptiveAccount new.
	
	Deposit register: 10 on: accountOrigin.
	Transfer from: accountOrigin to: accountDestination amount: 10.
	t _ (accountOrigin transactions 	detect: [:aTransaction | aTransaction isKindOf: Transfer]).
	self assert: t origin equals: accountOrigin.
	self assert: (accountDestination transactions 	first) destination equals: accountDestination.
! !

!testRun: #ReceptiveAccountTest #test10AccountsWithTransferKnowsOriginAndDestination stamp: 'EMI 11/9/2020 20:24:38'!
FAILURE!

t origin!
!DepositTransfer methodsFor: 'nil' stamp: 'EMI 11/9/2020 20:25:40' overrides: 50905879!
origin
	^transfer origin.! !
!ExtractionTransfer methodsFor: 'nil' stamp: 'EMI 11/9/2020 20:25:54' overrides: 50905879!
origin
	^transfer origin! !
!DepositTransfer methodsFor: 'as yet unclassified' stamp: 'EMI 11/9/2020 20:26:17' overrides: 50905887!
destination
	^transfer destination.! !
!ExtractionTransfer methodsFor: 'as yet unclassified' stamp: 'EMI 11/9/2020 20:26:28' overrides: 50905887!
destination
	^transfer destination! !
!DepositTransfer methodsFor: 'nil' stamp: 'EMI 11/9/2020 20:27:00' overrides: 50905580!
value
	^transfer value.! !
!ExtractionTransfer methodsFor: 'nil' stamp: 'EMI 11/9/2020 20:27:15' overrides: 50905580!
value
	^transfer value.! !

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'EMI 11/9/2020 20:27:38'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'EMI 11/9/2020 20:27:38'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'EMI 11/9/2020 20:27:38'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'EMI 11/9/2020 20:27:38'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'EMI 11/9/2020 20:27:38'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'EMI 11/9/2020 20:27:38'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'EMI 11/9/2020 20:27:38'!
PASSED!

!testRun: #ReceptiveAccountTest #test08AccountCanTransferToAnotherAccountWithZeroAmount stamp: 'EMI 11/9/2020 20:27:38'!
PASSED!

!testRun: #ReceptiveAccountTest #test09AccountCanTransferToAnotherAccountWithPositiveAmount stamp: 'EMI 11/9/2020 20:27:38'!
PASSED!

!testRun: #ReceptiveAccountTest #test10AccountsWithTransferKnowsOriginAndDestination stamp: 'EMI 11/9/2020 20:27:38'!
PASSED!
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'EMI 11/9/2020 20:28:18' prior: 50906068!
test10AccountsWithTransferKnowsOriginAndDestination

	| accountOrigin accountDestination |
	
	accountOrigin _ ReceptiveAccount new.
	accountDestination _ ReceptiveAccount new.
	
	Deposit register: 10 on: accountOrigin.
	Transfer from: accountOrigin to: accountDestination amount: 10.

	self assert: (accountOrigin transactions 	detect: [:aTransaction | aTransaction isKindOf: Transfer]) origin equals: accountOrigin.
	self assert: (accountDestination transactions 	first) destination equals: accountDestination.
! !
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'EMI 11/9/2020 20:29:14' prior: 50906157!
test10AccountsWithTransferKnowsOriginAndDestination

	| accountOrigin accountDestination |
	
	accountOrigin _ ReceptiveAccount new.
	accountDestination _ ReceptiveAccount new.
	
	Deposit register: 10 on: accountOrigin.
	Transfer from: accountOrigin to: accountDestination amount: 10.

	self assert: (accountOrigin transactions 	detect: [:aTransaction | aTransaction isKindOf: Transfer]) origin equals: accountOrigin.
	self assert: (accountOrigin transactions 	detect: [:aTransaction | aTransaction isKindOf: Transfer]) destination equals: accountDestination.
	self assert: (accountDestination transactions 	first) origin equals: accountOrigin.
	self assert: (accountDestination transactions 	first) destination equals: accountDestination.
! !

!testRun: #ReceptiveAccountTest #test10AccountsWithTransferKnowsOriginAndDestination stamp: 'EMI 11/9/2020 20:29:23'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'EMI 11/9/2020 20:29:23'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'EMI 11/9/2020 20:29:23'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'EMI 11/9/2020 20:29:23'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'EMI 11/9/2020 20:29:23'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'EMI 11/9/2020 20:29:23'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'EMI 11/9/2020 20:29:23'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'EMI 11/9/2020 20:29:23'!
PASSED!

!testRun: #ReceptiveAccountTest #test08AccountCanTransferToAnotherAccountWithZeroAmount stamp: 'EMI 11/9/2020 20:29:23'!
PASSED!

!testRun: #ReceptiveAccountTest #test09AccountCanTransferToAnotherAccountWithPositiveAmount stamp: 'EMI 11/9/2020 20:29:23'!
PASSED!

!testRun: #ReceptiveAccountTest #test10AccountsWithTransferKnowsOriginAndDestination stamp: 'EMI 11/9/2020 20:29:23'!
PASSED!

AccountTransaction subclass: #Transfer
	instanceVariableNames: 'origin destination amount'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio2-Ejercicio'!

!classDefinition: #Transfer category: 'Portfolio2-Ejercicio' stamp: 'EMI 11/9/2020 20:56:42'!
AccountTransaction subclass: #Transfer
	instanceVariableNames: 'origin destination amount'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio2-Ejercicio'!

!classRenamed: #Transfer as: #TransferOperations stamp: 'EMI 11/9/2020 20:56:52'!
Smalltalk renameClassNamed: #Transfer as: #TransferOperations!
!ReceptiveAccountTest methodsFor: 'as yet unclassified' stamp: 'EMI 11/9/2020 20:56:53' prior: 50905729!
test09AccountCanTransferToAnotherAccountWithPositiveAmount

	| accountOrigin accountDestination |
	
	accountOrigin _ ReceptiveAccount new.
	accountDestination _ ReceptiveAccount new.
	
	Deposit register: 10 on: accountOrigin.
	
	TransferOperations from: accountOrigin to: accountDestination amount: 10.
	
	self assert: accountOrigin transactions size equals: 2.
	self assert: accountDestination transactions size equals: 1.
	self assert: accountOrigin balance equals: 0.
	self assert: accountDestination balance equals: 10.
! !
!ReceptiveAccountTest methodsFor: 'as yet unclassified' stamp: 'EMI 11/9/2020 20:56:53' prior: 50906176!
test10AccountsWithTransferKnowsOriginAndDestination

	| accountOrigin accountDestination |
	
	accountOrigin _ ReceptiveAccount new.
	accountDestination _ ReceptiveAccount new.
	
	Deposit register: 10 on: accountOrigin.
	TransferOperations from: accountOrigin to: accountDestination amount: 10.

	self assert: (accountOrigin transactions 	detect: [:aTransaction | aTransaction isKindOf: TransferOperations]) origin equals: accountOrigin.
	self assert: (accountOrigin transactions 	detect: [:aTransaction | aTransaction isKindOf: TransferOperations]) destination equals: accountDestination.
	self assert: (accountDestination transactions 	first) origin equals: accountOrigin.
	self assert: (accountDestination transactions 	first) destination equals: accountDestination.
! !
!ReceptiveAccountTest methodsFor: 'as yet unclassified' stamp: 'EMI 11/9/2020 20:56:53' prior: 50905467!
test08AccountCanTransferToAnotherAccountWithZeroAmount

	| accountOrigin accountDestination |
	
	accountOrigin _ ReceptiveAccount new.
	accountDestination _ ReceptiveAccount new.
	
	Deposit register: 10 on: accountOrigin.
	
	TransferOperations from: accountOrigin to: accountDestination amount: 0.
	
	self assert: accountOrigin transactions size equals: 2.
	self assert: accountDestination transactions size equals: 1.
	self assert: accountOrigin balance equals: 10.
	self assert: accountDestination balance equals: 0.
! !

Object subclass: #Transfer
	instanceVariableNames: 'origin destination amount'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio2-Ejercicio'!

!classDefinition: #Transfer category: 'Portfolio2-Ejercicio' stamp: 'EMI 11/9/2020 20:57:06'!
Object subclass: #Transfer
	instanceVariableNames: 'origin destination amount'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio2-Ejercicio'!
!Transfer methodsFor: 'nil' stamp: 'EMI 11/9/2020 20:57:22' overrides: 16881508!
value
	^amount! !
!Transfer methodsFor: 'as yet unclassified' stamp: 'EMI 11/9/2020 20:57:32'!
origin
	^origin! !
!Transfer methodsFor: 'as yet unclassified' stamp: 'EMI 11/9/2020 20:57:41'!
destination
	^destination! !
!TransferOperations methodsFor: 'as yet unclassified' stamp: 'EMI 11/9/2020 20:57:57' prior: 50905887!
destination
	^destination.! !

AccountTransaction subclass: #TransferOperations
	instanceVariableNames: 'transfer'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio2-Ejercicio'!

TransferOperations subclass: #DepositTransfer
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio2-Ejercicio'!

!classDefinition: #DepositTransfer category: 'Portfolio2-Ejercicio' stamp: 'EMI 11/9/2020 20:58:29'!
TransferOperations subclass: #DepositTransfer
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio2-Ejercicio'!

TransferOperations subclass: #ExtractionTransfer
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio2-Ejercicio'!

!classDefinition: #ExtractionTransfer category: 'Portfolio2-Ejercicio' stamp: 'EMI 11/9/2020 20:58:33'!
TransferOperations subclass: #ExtractionTransfer
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio2-Ejercicio'!

AccountTransaction subclass: #TransferOperations
	instanceVariableNames: 'transfer'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio2-Ejercicio'!

!classDefinition: #TransferOperations category: 'Portfolio2-Ejercicio' stamp: 'EMI 11/9/2020 20:58:42'!
AccountTransaction subclass: #TransferOperations
	instanceVariableNames: 'transfer'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio2-Ejercicio'!
!TransferOperations methodsFor: 'as yet unclassified' stamp: 'EMI 11/9/2020 20:59:17' prior: 50906355!
destination
	^transfer destination.! !
!TransferOperations methodsFor: 'as yet unclassified' stamp: 'EMI 11/9/2020 20:59:22' prior: 50905879!
origin
	^transfer origin.! !
!TransferOperations methodsFor: 'as yet unclassified' stamp: 'EMI 11/9/2020 20:59:30' prior: 50905580 overrides: 50904988!
value
	^transfer value.! !
!Transfer class methodsFor: 'nil' stamp: 'EMI 11/9/2020 20:59:52'!
from: anOriginReceptiveAccount to: aDestinationReceptiveAccount amount: aPositiveNumber
	| instance |
	instance _ self new initializeFor: aPositiveNumber withOrigin: anOriginReceptiveAccount withDestination: aDestinationReceptiveAccount.
	anOriginReceptiveAccount register: (ExtractionTransfer fromTransfer: instance).
	aDestinationReceptiveAccount register: (DepositTransfer fromTransfer: instance).
	^instance.! !
!Transfer methodsFor: 'nil' stamp: 'EMI 11/9/2020 21:00:12'!
initializeFor: aPositiveNumber withOrigin: anOriginReceptiveAccount withDestination: aDestinationReceptiveAccount
	amount _ aPositiveNumber.
	origin _ anOriginReceptiveAccount.
	destination _ aDestinationReceptiveAccount.! !
!TransferOperations class methodsFor: 'initialization' stamp: 'EMI 11/9/2020 21:01:28'!
fromTransfer: aTransfer
	^self new initializeFor: aTransfer.! !

!methodRemoval: TransferOperations class #from:to:amount: stamp: 'EMI 11/9/2020 21:01:33'!
from: anOriginReceptiveAccount to: aDestinationReceptiveAccount amount: aPositiveNumber
	| instance |
	instance _ self new initializeFor: aPositiveNumber withOrigin: anOriginReceptiveAccount withDestination: aDestinationReceptiveAccount.
	anOriginReceptiveAccount register: (ExtractionTransfer fromTransfer: instance).
	aDestinationReceptiveAccount register: (DepositTransfer fromTransfer: instance).
	^instance.!
!TransferOperations methodsFor: 'initialization' stamp: 'EMI 11/9/2020 21:01:56'!
initializeFor: aTransfer
	transfer _ aTransfer.! !

!methodRemoval: TransferOperations #initializeFor:withOrigin:withDestination: stamp: 'EMI 11/9/2020 21:02:00'!
initializeFor: aPositiveNumber withOrigin: anOriginReceptiveAccount withDestination: aDestinationReceptiveAccount
	amount _ aPositiveNumber.
	origin _ anOriginReceptiveAccount.
	destination _ aDestinationReceptiveAccount.!

!methodRemoval: DepositTransfer class #fromTransfer: stamp: 'EMI 11/9/2020 21:02:28'!
fromTransfer: aTransfer
	^self new initialize: aTransfer.!

!methodRemoval: ExtractionTransfer class #fromTransfer: stamp: 'EMI 11/9/2020 21:02:33'!
fromTransfer: aTransfer
	^self new initialize: aTransfer.!

!methodRemoval: ExtractionTransfer #initialize: stamp: 'EMI 11/9/2020 21:02:39'!
initialize: aTransfer
	transfer _ aTransfer.
	!

!methodRemoval: ExtractionTransfer #destination stamp: 'EMI 11/9/2020 21:02:44'!
destination
	^transfer destination!

!methodRemoval: ExtractionTransfer #origin stamp: 'EMI 11/9/2020 21:02:49'!
origin
	^transfer origin!

!methodRemoval: ExtractionTransfer #value stamp: 'EMI 11/9/2020 21:02:54'!
value
	^transfer value.!

!methodRemoval: DepositTransfer #destination stamp: 'EMI 11/9/2020 21:03:00'!
destination
	^transfer destination.!

!methodRemoval: DepositTransfer #initialize: stamp: 'EMI 11/9/2020 21:03:04'!
initialize: aTransfer
	transfer _ aTransfer.!

!methodRemoval: DepositTransfer #origin stamp: 'EMI 11/9/2020 21:03:09'!
origin
	^transfer origin.!

!methodRemoval: DepositTransfer #value stamp: 'EMI 11/9/2020 21:03:14'!
value
	^transfer value.!
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'EMI 11/9/2020 21:04:08' prior: 50906312!
test08AccountCanTransferToAnotherAccountWithZeroAmount

	| accountOrigin accountDestination |
	
	accountOrigin _ ReceptiveAccount new.
	accountDestination _ ReceptiveAccount new.
	
	Deposit register: 10 on: accountOrigin.
	
	Transfer from: accountOrigin to: accountDestination amount: 0.
	
	self assert: accountOrigin transactions size equals: 2.
	self assert: accountDestination transactions size equals: 1.
	self assert: accountOrigin balance equals: 10.
	self assert: accountDestination balance equals: 0.
! !
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'EMI 11/9/2020 21:04:13' prior: 50906264!
test09AccountCanTransferToAnotherAccountWithPositiveAmount

	| accountOrigin accountDestination |
	
	accountOrigin _ ReceptiveAccount new.
	accountDestination _ ReceptiveAccount new.
	
	Deposit register: 10 on: accountOrigin.
	
	Transfer from: accountOrigin to: accountDestination amount: 10.
	
	self assert: accountOrigin transactions size equals: 2.
	self assert: accountDestination transactions size equals: 1.
	self assert: accountOrigin balance equals: 0.
	self assert: accountDestination balance equals: 10.
! !
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'EMI 11/9/2020 21:04:22' prior: 50906284!
test10AccountsWithTransferKnowsOriginAndDestination

	| accountOrigin accountDestination |
	
	accountOrigin _ ReceptiveAccount new.
	accountDestination _ ReceptiveAccount new.
	
	Deposit register: 10 on: accountOrigin.
	Transfer from: accountOrigin to: accountDestination amount: 10.

	self assert: (accountOrigin transactions 	detect: [:aTransaction | aTransaction isKindOf: TransferOperations]) origin equals: accountOrigin.
	self assert: (accountOrigin transactions 	detect: [:aTransaction | aTransaction isKindOf: TransferOperations]) destination equals: accountDestination.
	self assert: (accountDestination transactions 	first) origin equals: accountOrigin.
	self assert: (accountDestination transactions 	first) destination equals: accountDestination.
! !

!methodRemoval: ReceptiveAccountTest #test08AccountCanTransferToAnotherAccountWithZeroAmount stamp: 'EMI 11/9/2020 21:04:32'!
test08AccountCanTransferToAnotherAccountWithZeroAmount

	| accountOrigin accountDestination |
	
	accountOrigin _ ReceptiveAccount new.
	accountDestination _ ReceptiveAccount new.
	
	Deposit register: 10 on: accountOrigin.
	
	Transfer from: accountOrigin to: accountDestination amount: 0.
	
	self assert: accountOrigin transactions size equals: 2.
	self assert: accountDestination transactions size equals: 1.
	self assert: accountOrigin balance equals: 10.
	self assert: accountDestination balance equals: 0.
!
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'EMI 11/9/2020 21:04:40'!
test08AccountCanTransferToAnotherAccountWithPositiveAmount

	| accountOrigin accountDestination |
	
	accountOrigin _ ReceptiveAccount new.
	accountDestination _ ReceptiveAccount new.
	
	Deposit register: 10 on: accountOrigin.
	
	Transfer from: accountOrigin to: accountDestination amount: 10.
	
	self assert: accountOrigin transactions size equals: 2.
	self assert: accountDestination transactions size equals: 1.
	self assert: accountOrigin balance equals: 0.
	self assert: accountDestination balance equals: 10.
! !

!methodRemoval: ReceptiveAccountTest #test09AccountCanTransferToAnotherAccountWithPositiveAmount stamp: 'EMI 11/9/2020 21:04:40'!
test09AccountCanTransferToAnotherAccountWithPositiveAmount

	| accountOrigin accountDestination |
	
	accountOrigin _ ReceptiveAccount new.
	accountDestination _ ReceptiveAccount new.
	
	Deposit register: 10 on: accountOrigin.
	
	Transfer from: accountOrigin to: accountDestination amount: 10.
	
	self assert: accountOrigin transactions size equals: 2.
	self assert: accountDestination transactions size equals: 1.
	self assert: accountOrigin balance equals: 0.
	self assert: accountDestination balance equals: 10.
!
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'EMI 11/9/2020 21:04:48'!
test09AccountsWithTransferKnowsOriginAndDestination

	| accountOrigin accountDestination |
	
	accountOrigin _ ReceptiveAccount new.
	accountDestination _ ReceptiveAccount new.
	
	Deposit register: 10 on: accountOrigin.
	Transfer from: accountOrigin to: accountDestination amount: 10.

	self assert: (accountOrigin transactions 	detect: [:aTransaction | aTransaction isKindOf: TransferOperations]) origin equals: accountOrigin.
	self assert: (accountOrigin transactions 	detect: [:aTransaction | aTransaction isKindOf: TransferOperations]) destination equals: accountDestination.
	self assert: (accountDestination transactions 	first) origin equals: accountOrigin.
	self assert: (accountDestination transactions 	first) destination equals: accountDestination.
! !

!methodRemoval: ReceptiveAccountTest #test10AccountsWithTransferKnowsOriginAndDestination stamp: 'EMI 11/9/2020 21:04:49'!
test10AccountsWithTransferKnowsOriginAndDestination

	| accountOrigin accountDestination |
	
	accountOrigin _ ReceptiveAccount new.
	accountDestination _ ReceptiveAccount new.
	
	Deposit register: 10 on: accountOrigin.
	Transfer from: accountOrigin to: accountDestination amount: 10.

	self assert: (accountOrigin transactions 	detect: [:aTransaction | aTransaction isKindOf: TransferOperations]) origin equals: accountOrigin.
	self assert: (accountOrigin transactions 	detect: [:aTransaction | aTransaction isKindOf: TransferOperations]) destination equals: accountDestination.
	self assert: (accountDestination transactions 	first) origin equals: accountOrigin.
	self assert: (accountDestination transactions 	first) destination equals: accountDestination.
!
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'EMI 11/9/2020 21:05:57' prior: 50906640!
test09AccountsWithTransferKnowsOriginAndDestination

	| accountOrigin accountDestination |
	
	accountOrigin _ ReceptiveAccount new.
	accountDestination _ ReceptiveAccount new.
	
	Deposit register: 10 on: accountOrigin.
	Transfer from: accountOrigin to: accountDestination amount: 10.

	self assert: (accountOrigin transactions 	detect: [:aTransaction | aTransaction isKindOf: TransferOperations]) origin equals: accountOrigin.
	self assert: (accountOrigin transactions 	detect: [:aTransaction | aTransaction isKindOf: TransferOperations]) destination equals: accountDestination.
	self assert: (accountDestination transactions 	first) origin equals: accountOrigin.
	self assert: (accountDestination transactions 	first) destination equals: accountDestination.
! !
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'EMI 11/9/2020 21:09:19' prior: 50906695!
test09AccountsWithTransferKnowsOriginAndDestination

	| accountOrigin accountDestination |
	
	accountOrigin _ ReceptiveAccount new.
	accountDestination _ ReceptiveAccount new.
	
	Transfer from: accountOrigin to: accountDestination amount: 10.
	Deposit register: 10 on: accountOrigin.

	self assert: (accountOrigin transactions 	first) origin equals: accountOrigin.
	self assert: (accountOrigin transactions 	first) destination equals: accountDestination.
	self assert: (accountDestination transactions 	first) origin equals: accountOrigin.
	self assert: (accountDestination transactions 	first) destination equals: accountDestination.
! !

!testRun: #ReceptiveAccountTest #test09AccountsWithTransferKnowsOriginAndDestination stamp: 'EMI 11/9/2020 21:09:39'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'EMI 11/9/2020 21:09:39'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'EMI 11/9/2020 21:09:39'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'EMI 11/9/2020 21:09:39'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'EMI 11/9/2020 21:09:39'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'EMI 11/9/2020 21:09:39'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'EMI 11/9/2020 21:09:39'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'EMI 11/9/2020 21:09:39'!
PASSED!

!testRun: #ReceptiveAccountTest #test08AccountCanTransferToAnotherAccountWithPositiveAmount stamp: 'EMI 11/9/2020 21:09:39'!
PASSED!

!testRun: #ReceptiveAccountTest #test09AccountsWithTransferKnowsOriginAndDestination stamp: 'EMI 11/9/2020 21:09:39'!
PASSED!
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'EMI 11/9/2020 21:11:22'!
test10AccountsCannotTransferInvalidAmounts

	| accountOrigin accountDestination |
	
	accountOrigin _ ReceptiveAccount new.
	accountDestination _ ReceptiveAccount new.
	
	Transfer from: accountOrigin to: accountDestination amount: 10.
	Deposit register: 10 on: accountOrigin.

	self assert: (accountOrigin transactions 	first) origin equals: accountOrigin.
	self assert: (accountOrigin transactions 	first) destination equals: accountDestination.
	self assert: (accountDestination transactions 	first) origin equals: accountOrigin.
	self assert: (accountDestination transactions 	first) destination equals: accountDestination.
! !
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'EMI 11/9/2020 21:14:07' prior: 50906783!
test10AccountsCannotTransferInvalidAmounts

	| accountOrigin accountDestination |
	
	accountOrigin _ ReceptiveAccount new.
	accountDestination _ ReceptiveAccount new.
	
	self should: [Transfer from: accountOrigin to: accountDestination amount: 0] 
	raise: Error 
	withExceptionDo: [:anError | 
		self assert: anError messageText equals: Transfer cannotTransferInvalidAmountMessage.
		self assert: accountOrigin transactions isEmpty.
		self assert: accountDestination transactions isEmpty.
		self assert: accountOrigin balance equals: 0.
		self assert: accountDestination balance equals: 0.
	].

	
! !
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'EMI 11/9/2020 21:14:34' prior: 50906806!
test10AccountsCannotTransferInvalidAmounts

	| accountOrigin accountDestination |
	
	accountOrigin _ ReceptiveAccount new.
	accountDestination _ ReceptiveAccount new.
	
	self should: [Transfer from: accountOrigin to: accountDestination amount: 0] 
	raise: Error 
	withExceptionDo: [:anError | 
		self assert: anError messageText equals: Transfer cannotTransferInvalidAmountMessage.
		self assert: accountOrigin transactions isEmpty.
		self assert: accountDestination transactions isEmpty.
		self assert: accountOrigin balance equals: 0.
		self assert: accountDestination balance equals: 0.
	].

	self should: [Transfer from: accountOrigin to: accountDestination amount: -10] 
	raise: Error 
	withExceptionDo: [:anError | 
		self assert: anError messageText equals: Transfer cannotTransferInvalidAmountMessage.
		self assert: accountOrigin transactions isEmpty.
		self assert: accountDestination transactions isEmpty.
		self assert: accountOrigin balance equals: 0.
		self assert: accountDestination balance equals: 0.
	].

	
! !

----SNAPSHOT----(9 November 2020 21:14:47) CuisUniversity-4383.image priorSource: 18369151!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'EMI 11/9/2020 21:14:54'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'EMI 11/9/2020 21:14:54'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'EMI 11/9/2020 21:14:54'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'EMI 11/9/2020 21:14:54'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'EMI 11/9/2020 21:14:54'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'EMI 11/9/2020 21:14:54'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'EMI 11/9/2020 21:14:54'!
PASSED!

!testRun: #ReceptiveAccountTest #test08AccountCanTransferToAnotherAccountWithPositiveAmount stamp: 'EMI 11/9/2020 21:14:54'!
PASSED!

!testRun: #ReceptiveAccountTest #test09AccountsWithTransferKnowsOriginAndDestination stamp: 'EMI 11/9/2020 21:14:54'!
PASSED!

!testRun: #ReceptiveAccountTest #test10AccountsCannotTransferInvalidAmounts stamp: 'EMI 11/9/2020 21:14:54'!
FAILURE!

!testRun: #ReceptiveAccountTest #test10AccountsCannotTransferInvalidAmounts stamp: 'EMI 11/9/2020 21:14:54'!
FAILURE!
!Transfer class methodsFor: 'nil' stamp: 'EMI 11/9/2020 21:15:45'!
cannotTransferInvalidAmountMessage
	^'Cannot transfer invalid amount.'.! !
!Transfer class methodsFor: 'as yet unclassified' stamp: 'EMI 11/9/2020 21:16:38' prior: 50906417!
from: anOriginReceptiveAccount to: aDestinationReceptiveAccount amount: aPositiveNumber
	| instance |
	
	aPositiveNumber > 0 ifFalse: [^Error signal: self cannotTransferInvalidAmountMessage].
	
	instance _ self new initializeFor: aPositiveNumber withOrigin: anOriginReceptiveAccount withDestination: aDestinationReceptiveAccount.
	anOriginReceptiveAccount register: (ExtractionTransfer fromTransfer: instance).
	aDestinationReceptiveAccount register: (DepositTransfer fromTransfer: instance).
	^instance.! !

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'EMI 11/9/2020 21:16:49'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'EMI 11/9/2020 21:16:49'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'EMI 11/9/2020 21:16:49'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'EMI 11/9/2020 21:16:49'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'EMI 11/9/2020 21:16:49'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'EMI 11/9/2020 21:16:49'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'EMI 11/9/2020 21:16:49'!
PASSED!

!testRun: #ReceptiveAccountTest #test08AccountCanTransferToAnotherAccountWithPositiveAmount stamp: 'EMI 11/9/2020 21:16:49'!
PASSED!

!testRun: #ReceptiveAccountTest #test09AccountsWithTransferKnowsOriginAndDestination stamp: 'EMI 11/9/2020 21:16:49'!
PASSED!

!testRun: #ReceptiveAccountTest #test10AccountsCannotTransferInvalidAmounts stamp: 'EMI 11/9/2020 21:16:49'!
PASSED!

----SNAPSHOT----(9 November 2020 21:16:57) CuisUniversity-4383.image priorSource: 18406788!
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'EMI 11/9/2020 21:17:21'!
test11AccountsCannotTransferToThemselves

	| accountOrigin accountDestination |
	
	accountOrigin _ ReceptiveAccount new.
	accountDestination _ ReceptiveAccount new.
	
	self should: [Transfer from: accountOrigin to: accountDestination amount: 0] 
	raise: Error 
	withExceptionDo: [:anError | 
		self assert: anError messageText equals: Transfer cannotTransferInvalidAmountMessage.
		self assert: accountOrigin transactions isEmpty.
		self assert: accountDestination transactions isEmpty.
		self assert: accountOrigin balance equals: 0.
		self assert: accountDestination balance equals: 0.
	].

	self should: [Transfer from: accountOrigin to: accountDestination amount: -10] 
	raise: Error 
	withExceptionDo: [:anError | 
		self assert: anError messageText equals: Transfer cannotTransferInvalidAmountMessage.
		self assert: accountOrigin transactions isEmpty.
		self assert: accountDestination transactions isEmpty.
		self assert: accountOrigin balance equals: 0.
		self assert: accountDestination balance equals: 0.
	].

	
! !
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'EMI 11/9/2020 21:20:14' prior: 50906974!
test11AccountsCannotTransferToThemselves

	| account |
	
	account _ ReceptiveAccount new.
	
	self should: [Transfer from: account to: account amount: 10] 
	raise: Error 
	withExceptionDo: [:anError | 
		self assert: anError messageText equals: Transfer cannotTransferWhenOriginAndDestinationAreSame.
		self assert: account transactions isEmpty.
		self assert: account balance equals: 0.
	].

	
! !
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'EMI 11/9/2020 21:20:24' prior: 50907009!
test11AccountsCannotTransferToThemselves

	| account |
	account _ ReceptiveAccount new.
	self should: [Transfer from: account to: account amount: 10] 
	raise: Error 
	withExceptionDo: [:anError | 
		self assert: anError messageText equals: Transfer cannotTransferWhenOriginAndDestinationAreSame.
		self assert: account transactions isEmpty.
		self assert: account balance equals: 0.
	].

	
! !

!testRun: #ReceptiveAccountTest #test11AccountsCannotTransferToThemselves stamp: 'EMI 11/9/2020 21:20:29'!
FAILURE!
!Transfer class methodsFor: 'as yet unclassified' stamp: 'EMI 11/9/2020 21:21:17' prior: 50906914!
from: anOriginReceptiveAccount to: aDestinationReceptiveAccount amount: aPositiveNumber
	| instance |
	
	anOriginReceptiveAccount = aDestinationReceptiveAccount ifTrue: [^Error signal: self ].
	aPositiveNumber > 0 ifFalse: [^Error signal: self cannotTransferInvalidAmountMessage].
	
	instance _ self new initializeFor: aPositiveNumber withOrigin: anOriginReceptiveAccount withDestination: aDestinationReceptiveAccount.
	anOriginReceptiveAccount register: (ExtractionTransfer fromTransfer: instance).
	aDestinationReceptiveAccount register: (DepositTransfer fromTransfer: instance).
	^instance.! !
!Transfer class methodsFor: 'nil' stamp: 'EMI 11/9/2020 21:21:56'!
cannotTransferWhenOriginAndDestinationAreSame
	^'Cannot transfer when origin and destination ase the same.'! !
!Transfer class methodsFor: 'as yet unclassified' stamp: 'EMI 11/9/2020 21:22:03' prior: 50907045!
from: anOriginReceptiveAccount to: aDestinationReceptiveAccount amount: aPositiveNumber
	| instance |
	
	anOriginReceptiveAccount = aDestinationReceptiveAccount ifTrue: [^Error signal: self cannotTransferWhenOriginAndDestinationAreSame ].
	aPositiveNumber > 0 ifFalse: [^Error signal: self cannotTransferInvalidAmountMessage].
	
	instance _ self new initializeFor: aPositiveNumber withOrigin: anOriginReceptiveAccount withDestination: aDestinationReceptiveAccount.
	anOriginReceptiveAccount register: (ExtractionTransfer fromTransfer: instance).
	aDestinationReceptiveAccount register: (DepositTransfer fromTransfer: instance).
	^instance.! !
!Transfer class methodsFor: 'as yet unclassified' stamp: 'EMI 11/9/2020 21:22:05' prior: 50907073!
from: anOriginReceptiveAccount to: aDestinationReceptiveAccount amount: aPositiveNumber
	| instance |
	
	anOriginReceptiveAccount = aDestinationReceptiveAccount ifTrue: [^Error signal: self cannotTransferWhenOriginAndDestinationAreSame].
	aPositiveNumber > 0 ifFalse: [^Error signal: self cannotTransferInvalidAmountMessage].
	
	instance _ self new initializeFor: aPositiveNumber withOrigin: anOriginReceptiveAccount withDestination: aDestinationReceptiveAccount.
	anOriginReceptiveAccount register: (ExtractionTransfer fromTransfer: instance).
	aDestinationReceptiveAccount register: (DepositTransfer fromTransfer: instance).
	^instance.! !

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'EMI 11/9/2020 21:22:08'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'EMI 11/9/2020 21:22:08'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'EMI 11/9/2020 21:22:08'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'EMI 11/9/2020 21:22:08'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'EMI 11/9/2020 21:22:08'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'EMI 11/9/2020 21:22:08'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'EMI 11/9/2020 21:22:08'!
PASSED!

!testRun: #ReceptiveAccountTest #test08AccountCanTransferToAnotherAccountWithPositiveAmount stamp: 'EMI 11/9/2020 21:22:08'!
PASSED!

!testRun: #ReceptiveAccountTest #test09AccountsWithTransferKnowsOriginAndDestination stamp: 'EMI 11/9/2020 21:22:08'!
PASSED!

!testRun: #ReceptiveAccountTest #test10AccountsCannotTransferInvalidAmounts stamp: 'EMI 11/9/2020 21:22:08'!
PASSED!

!testRun: #ReceptiveAccountTest #test11AccountsCannotTransferToThemselves stamp: 'EMI 11/9/2020 21:22:08'!
PASSED!
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'EMI 11/9/2020 21:22:18' prior: 50907025!
test11AccountsCannotTransferToThemselves
	| account |
	account _ ReceptiveAccount new.
	self should: [Transfer from: account to: account amount: 10] 
	raise: Error 
	withExceptionDo: [:anError | 
		self assert: anError messageText equals: Transfer cannotTransferWhenOriginAndDestinationAreSame.
		self assert: account transactions isEmpty.
		self assert: account balance equals: 0.
	].

	
! !
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'EMI 11/9/2020 21:22:22' prior: 50906828!
test10AccountsCannotTransferInvalidAmounts
	| accountOrigin accountDestination |
	
	accountOrigin _ ReceptiveAccount new.
	accountDestination _ ReceptiveAccount new.
	
	self should: [Transfer from: accountOrigin to: accountDestination amount: 0] 
	raise: Error 
	withExceptionDo: [:anError | 
		self assert: anError messageText equals: Transfer cannotTransferInvalidAmountMessage.
		self assert: accountOrigin transactions isEmpty.
		self assert: accountDestination transactions isEmpty.
		self assert: accountOrigin balance equals: 0.
		self assert: accountDestination balance equals: 0.
	].

	self should: [Transfer from: accountOrigin to: accountDestination amount: -10] 
	raise: Error 
	withExceptionDo: [:anError | 
		self assert: anError messageText equals: Transfer cannotTransferInvalidAmountMessage.
		self assert: accountOrigin transactions isEmpty.
		self assert: accountDestination transactions isEmpty.
		self assert: accountOrigin balance equals: 0.
		self assert: accountDestination balance equals: 0.
	].

	
! !
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'EMI 11/9/2020 21:22:25' prior: 50906722!
test09AccountsWithTransferKnowsOriginAndDestination
	| accountOrigin accountDestination |
	
	accountOrigin _ ReceptiveAccount new.
	accountDestination _ ReceptiveAccount new.
	
	Transfer from: accountOrigin to: accountDestination amount: 10.
	Deposit register: 10 on: accountOrigin.

	self assert: (accountOrigin transactions 	first) origin equals: accountOrigin.
	self assert: (accountOrigin transactions 	first) destination equals: accountDestination.
	self assert: (accountDestination transactions 	first) origin equals: accountOrigin.
	self assert: (accountDestination transactions 	first) destination equals: accountDestination.
! !
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'EMI 11/9/2020 21:22:31' prior: 50906601!
test08AccountCanTransferToAnotherAccountWithPositiveAmount
	| accountOrigin accountDestination |
	
	accountOrigin _ ReceptiveAccount new.
	accountDestination _ ReceptiveAccount new.
	
	Deposit register: 10 on: accountOrigin.
	
	Transfer from: accountOrigin to: accountDestination amount: 10.
	
	self assert: accountOrigin transactions size equals: 2.
	self assert: accountDestination transactions size equals: 1.
	self assert: accountOrigin balance equals: 0.
	self assert: accountDestination balance equals: 10.
! !

Object subclass: #AccountSummary
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio2-Ejercicio'!

!classDefinition: #AccountSummary category: 'Portfolio2-Ejercicio' stamp: 'EMI 11/9/2020 21:23:39'!
Object subclass: #AccountSummary
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio2-Ejercicio'!

TestCase subclass: #AccountSummaryTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio2-Ejercicio'!

!classDefinition: #AccountSummaryTest category: 'Portfolio2-Ejercicio' stamp: 'EMI 11/9/2020 21:24:12'!
TestCase subclass: #AccountSummaryTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio2-Ejercicio'!
!AccountSummaryTest methodsFor: 'nil' stamp: 'EMI 11/9/2020 21:24:20'!
test01! !
!AccountSummaryTest methodsFor: 'as yet unclassified' stamp: 'EMI 11/9/2020 21:25:55' prior: 50907279!
test01
	| report account |
	account _ ReceptiveAccount new.
	report _ AccountSummary of: account.! !
!AccountSummaryTest methodsFor: 'as yet unclassified' stamp: 'EMI 11/9/2020 21:26:28' prior: 50907283!
test01
	| report account |
	account _ ReceptiveAccount new.
	report _ AccountSummary of: account.
	 ! !
!AccountSummaryTest methodsFor: 'as yet unclassified' stamp: 'EMI 11/9/2020 21:26:50' prior: 50907290!
test01
	| accountSummary account |
	account _ ReceptiveAccount new.
	accountSummary _ AccountSummary of: account.
	 ! !
!AccountSummaryTest methodsFor: 'as yet unclassified' stamp: 'EMI 11/9/2020 21:27:08' prior: 50907297!
test01
	| accountSummary account |
	account _ ReceptiveAccount new.
	accountSummary _ AccountSummary of: account.
	 
	self assert: accountSummary report isEmpty.! !
!AccountSummaryTest methodsFor: 'as yet unclassified' stamp: 'EMI 11/9/2020 21:27:29'!
test01AccountSummaryOfEmptyAccountIsEmpty
	| accountSummary account |
	account _ ReceptiveAccount new.
	accountSummary _ AccountSummary of: account.
	 
	self assert: accountSummary report isEmpty.! !

!methodRemoval: AccountSummaryTest #test01 stamp: 'EMI 11/9/2020 21:27:29'!
test01
	| accountSummary account |
	account _ ReceptiveAccount new.
	accountSummary _ AccountSummary of: account.
	 
	self assert: accountSummary report isEmpty.!

!testRun: #AccountSummaryTest #test01AccountSummaryOfEmptyAccountIsEmpty stamp: 'EMI 11/9/2020 21:27:41'!
ERROR!
!AccountSummary class methodsFor: 'instance creation' stamp: 'EMI 11/9/2020 21:27:53'!
of: aReceptiveAccount 
	"DO NOT FORGET TO RENAME COLLABORATORS AND REMOVE THIS COMMENT!!!!"
	self shouldBeImplemented.
	^self new initializeOf: aReceptiveAccount ! !
!AccountSummary class methodsFor: 'instance creation' stamp: 'EMI 11/9/2020 21:28:07' prior: 50907333!
of: aReceptiveAccount 
	^self new initializeOf: aReceptiveAccount ! !

!classDefinition: #AccountSummary category: 'Portfolio2-Ejercicio' stamp: 'EMI 11/9/2020 21:28:31'!
Object subclass: #AccountSummary
	instanceVariableNames: 'account'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio2-Ejercicio'!
!AccountSummary methodsFor: 'nil' stamp: 'EMI 11/9/2020 21:28:29'!
initializeOf: aReceptiveAccount
	account _ aReceptiveAccount.! !
!AccountSummary methodsFor: 'nil' stamp: 'EMI 11/9/2020 21:28:52'!
report
	^OrderedCollection new.! !

!testRun: #AccountSummaryTest #test01AccountSummaryOfEmptyAccountIsEmpty stamp: 'EMI 11/9/2020 21:28:59'!
PASSED!
!AccountSummaryTest methodsFor: 'as yet unclassified' stamp: 'EMI 11/9/2020 21:30:37'!
test02AccountSummaryOfAccountWithADepositShowDepositInfo
	| accountSummary account |
	account _ ReceptiveAccount new.
	accountSummary _ AccountSummary of: account.
	 
	self assert: accountSummary report isEmpty.! !
!AccountSummaryTest methodsFor: 'as yet unclassified' stamp: 'EMI 11/9/2020 21:31:00'!
test01AccountSummaryOfEmptyAccountOnlyShowsBalance
	| accountSummary account |
	account _ ReceptiveAccount new.
	accountSummary _ AccountSummary of: account.
	 
	self assert: accountSummary report isEmpty.! !

!methodRemoval: AccountSummaryTest #test01AccountSummaryOfEmptyAccountIsEmpty stamp: 'EMI 11/9/2020 21:31:00'!
test01AccountSummaryOfEmptyAccountIsEmpty
	| accountSummary account |
	account _ ReceptiveAccount new.
	accountSummary _ AccountSummary of: account.
	 
	self assert: accountSummary report isEmpty.!
!AccountSummaryTest methodsFor: 'as yet unclassified' stamp: 'EMI 11/9/2020 21:31:44' prior: 50907378!
test01AccountSummaryOfEmptyAccountOnlyShowsBalance
	| accountSummary account |
	account _ ReceptiveAccount new.
	accountSummary _ AccountSummary of: account.
	 
	self deny: accountSummary report isEmpty.
	self assert: accountSummary report first equals: 'Balance = 0'.! !

!testRun: #AccountSummaryTest #test01AccountSummaryOfEmptyAccountOnlyShowsBalance stamp: 'EMI 11/9/2020 21:31:55'!
FAILURE!
!AccountSummary methodsFor: 'as yet unclassified' stamp: 'EMI 11/9/2020 21:32:09' prior: 50907360!
report
	^'Balance = 0'.! !
!AccountSummary methodsFor: 'as yet unclassified' stamp: 'EMI 11/9/2020 21:32:27' prior: 50907414!
report
	^OrderedCollection with:'Balance = 0'.! !

!testRun: #AccountSummaryTest #test01AccountSummaryOfEmptyAccountOnlyShowsBalance stamp: 'EMI 11/9/2020 21:32:32'!
PASSED!

!testRun: #AccountSummaryTest #test02AccountSummaryOfAccountWithADepositShowDepositInfo stamp: 'EMI 11/9/2020 21:32:32'!
FAILURE!

!testRun: #AccountSummaryTest #test02AccountSummaryOfAccountWithADepositShowDepositInfo stamp: 'EMI 11/9/2020 21:32:32'!
FAILURE!
!AccountSummaryTest methodsFor: 'as yet unclassified' stamp: 'EMI 11/9/2020 21:32:43' prior: 50907368!
test02AccountSummaryOfAccountWithADepositShowDepositInfo
	| accountSummary account |
	account _ ReceptiveAccount new.
	accountSummary _ AccountSummary of: account.
	 
	! !

!testRun: #AccountSummaryTest #test01AccountSummaryOfEmptyAccountOnlyShowsBalance stamp: 'EMI 11/9/2020 21:32:47'!
PASSED!

!testRun: #AccountSummaryTest #test02AccountSummaryOfAccountWithADepositShowDepositInfo stamp: 'EMI 11/9/2020 21:32:47'!
PASSED!
!AccountSummaryTest methodsFor: 'as yet unclassified' stamp: 'EMI 11/9/2020 21:33:10' prior: 50907435!
test02AccountSummaryOfAccountWithADepositShowDepositInfo
	| accountSummary account deposit |
	account _ ReceptiveAccount new.
	accountSummary _ AccountSummary of: account.
	
	deposit _ Deposit register: 10 on: account.
	 
	! !
!AccountSummaryTest methodsFor: 'as yet unclassified' stamp: 'EMI 11/9/2020 21:37:26' prior: 50907452!
test02AccountSummaryOfAccountWithADepositShowDepositInfo
	| accountSummary account deposit resultSummary |
	account _ ReceptiveAccount new.
	accountSummary _ AccountSummary of: account.
	
	deposit _ Deposit register: 10 on: account.
	
	resultSummary _ OrderedCollection with: 'Balance = 10' with: 'Dep�sito por 10'.
	! !
!AccountSummaryTest methodsFor: 'as yet unclassified' stamp: 'EMI 11/9/2020 21:37:49' prior: 50907463!
test02AccountSummaryOfAccountWithADepositShowDepositInfo
	| accountSummary account deposit resultSummary |
	account _ ReceptiveAccount new.
	accountSummary _ AccountSummary of: account.
	
	deposit _ Deposit register: 10 on: account.
	
	resultSummary _ OrderedCollection with: 'Balance = 10' with: 'Dep�sito por 10'.
	
	self assert: accountSummary report equals: resultSummary.
	! !
!AccountSummaryTest methodsFor: 'as yet unclassified' stamp: 'EMI 11/9/2020 21:37:56' prior: 50907477!
test02AccountSummaryOfAccountWithADepositShowDepositInfo
	| accountSummary account resultSummary |
	account _ ReceptiveAccount new.
	accountSummary _ AccountSummary of: account.
	
	Deposit register: 10 on: account.
	
	resultSummary _ OrderedCollection with: 'Balance = 10' with: 'Dep�sito por 10'.
	
	self assert: accountSummary report equals: resultSummary.
	! !

!testRun: #AccountSummaryTest #test02AccountSummaryOfAccountWithADepositShowDepositInfo stamp: 'EMI 11/9/2020 21:38:25'!
FAILURE!
!AccountSummary methodsFor: 'as yet unclassified' stamp: 'EMI 11/9/2020 21:38:58' prior: 50907418!
report
	^OrderedCollection with:'Balance = 0' with: 'Dep�sito por 10'.! !
!AccountSummary methodsFor: 'as yet unclassified' stamp: 'EMI 11/9/2020 21:39:07' prior: 50907512!
report
	^OrderedCollection with:'Balance = 0.' with: 'Dep�sito por 10.'.! !
!AccountSummaryTest methodsFor: 'as yet unclassified' stamp: 'EMI 11/9/2020 21:39:15' prior: 50907493!
test02AccountSummaryOfAccountWithADepositShowDepositInfo
	| accountSummary account resultSummary |
	account _ ReceptiveAccount new.
	accountSummary _ AccountSummary of: account.
	
	Deposit register: 10 on: account.
	
	resultSummary _ OrderedCollection with: 'Balance = 10.' with: 'Dep�sito por 10.'.
	
	self assert: accountSummary report equals: resultSummary.
	! !

!testRun: #AccountSummaryTest #test02AccountSummaryOfAccountWithADepositShowDepositInfo stamp: 'EMI 11/9/2020 21:39:22'!
FAILURE!
!AccountSummary methodsFor: 'as yet unclassified' stamp: 'EMI 11/9/2020 21:40:14' prior: 50907518!
report
	^OrderedCollection with:'Balance = 10.' with: 'Dep�sito por 10.'.! !

!testRun: #AccountSummaryTest #test01AccountSummaryOfEmptyAccountOnlyShowsBalance stamp: 'EMI 11/9/2020 21:40:15'!
FAILURE!

!testRun: #AccountSummaryTest #test02AccountSummaryOfAccountWithADepositShowDepositInfo stamp: 'EMI 11/9/2020 21:40:15'!
PASSED!

!testRun: #AccountSummaryTest #test01AccountSummaryOfEmptyAccountOnlyShowsBalance stamp: 'EMI 11/9/2020 21:40:15'!
FAILURE!
!AccountSummary methodsFor: 'as yet unclassified' stamp: 'EMI 11/9/2020 21:42:05' prior: 50907543!
report
	^account transactions collect: [:aTransaction | 
		(aTransaction isKindOf: Deposit) ifTrue:['Dep�sito por ' ].
		].! !
!AccountSummary methodsFor: 'as yet unclassified' stamp: 'EMI 11/9/2020 21:44:24' prior: 50907561!
report
	| result |
	result _ account transactions collect: [:aTransaction | 
		(aTransaction isKindOf: Deposit) ifTrue:['Dep�sito por ', aTransaction value, '.'].
		].
	result add: 'Balance = ', account balance, '.'.
	^result! !

!testRun: #AccountSummaryTest #test01AccountSummaryOfEmptyAccountOnlyShowsBalance stamp: 'EMI 11/9/2020 21:44:32'!
ERROR!

!testRun: #AccountSummaryTest #test02AccountSummaryOfAccountWithADepositShowDepositInfo stamp: 'EMI 11/9/2020 21:44:32'!
ERROR!

!testRun: #AccountSummaryTest #test01AccountSummaryOfEmptyAccountOnlyShowsBalance stamp: 'EMI 11/9/2020 21:44:34'!
ERROR!
!AccountSummary methodsFor: 'as yet unclassified' stamp: 'EMI 11/9/2020 21:44:59' prior: 50907569!
report
	| result |
	result _ account transactions collect: [:aTransaction | 
		(aTransaction isKindOf: Deposit) ifTrue:['Dep�sito por ', aTransaction value asString, '.'].
		].
	result add: 'Balance = ', account balance asString, '.'.
	^result! !

!testRun: #AccountSummaryTest #test01AccountSummaryOfEmptyAccountOnlyShowsBalance stamp: 'EMI 11/9/2020 21:45:02'!
FAILURE!

!testRun: #AccountSummaryTest #test02AccountSummaryOfAccountWithADepositShowDepositInfo stamp: 'EMI 11/9/2020 21:45:02'!
FAILURE!

!testRun: #AccountSummaryTest #test01AccountSummaryOfEmptyAccountOnlyShowsBalance stamp: 'EMI 11/9/2020 21:45:04'!
FAILURE!
!AccountSummaryTest methodsFor: 'as yet unclassified' stamp: 'EMI 11/9/2020 21:45:34' prior: 50907398!
test01AccountSummaryOfEmptyAccountOnlyShowsBalance
	| accountSummary account |
	account _ ReceptiveAccount new.
	accountSummary _ AccountSummary of: account.
	 
	self deny: accountSummary report isEmpty.
	self assert: accountSummary report first equals: 'Balance = 0.'.! !

!testRun: #AccountSummaryTest #test01AccountSummaryOfEmptyAccountOnlyShowsBalance stamp: 'EMI 11/9/2020 21:45:36'!
PASSED!

!testRun: #AccountSummaryTest #test02AccountSummaryOfAccountWithADepositShowDepositInfo stamp: 'EMI 11/9/2020 21:45:36'!
FAILURE!

!testRun: #AccountSummaryTest #test02AccountSummaryOfAccountWithADepositShowDepositInfo stamp: 'EMI 11/9/2020 21:45:36'!
FAILURE!
!AccountSummaryTest methodsFor: 'as yet unclassified' stamp: 'EMI 11/9/2020 21:45:58' prior: 50907524!
test02AccountSummaryOfAccountWithADepositShowDepositInfo
	| accountSummary account resultSummary |
	account _ ReceptiveAccount new.
	accountSummary _ AccountSummary of: account.
	
	Deposit register: 10 on: account.
	
	resultSummary _ OrderedCollection with: 'Dep�sito por 10.' with: 'Balance = 10.'.
	
	self assert: accountSummary report equals: resultSummary.
	! !

!testRun: #AccountSummaryTest #test01AccountSummaryOfEmptyAccountOnlyShowsBalance stamp: 'EMI 11/9/2020 21:46:10'!
PASSED!

!testRun: #AccountSummaryTest #test02AccountSummaryOfAccountWithADepositShowDepositInfo stamp: 'EMI 11/9/2020 21:46:10'!
PASSED!

----SNAPSHOT----(9 November 2020 21:46:22) CuisUniversity-4383.image priorSource: 18410246!

----SNAPSHOT----(9 November 2020 22:13:36) CuisUniversity-4383.image priorSource: 18432299!

----QUIT----(9 November 2020 22:13:39) CuisUniversity-4383.image priorSource: 18432392!

----STARTUP---- (11 November 2020 17:42:39) as /home/doraserver/CuisUniversity/CuisUniversity-4383.image!

!AccountSummaryTest methodsFor: 'as yet unclassified' stamp: 'EMI 11/11/2020 17:52:45'!
test03AccountSummaryOfAccountWithAWithdrawShowWithdrawInfo
	| accountSummary account resultSummary |
	account _ ReceptiveAccount new.
	accountSummary _ AccountSummary of: account.
	
	Deposit register: 10 on: account.
	
	resultSummary _ OrderedCollection with: 'Dep�sito por 10.' with: 'Balance = 10.'.
	
	self assert: accountSummary report equals: resultSummary.
	! !
!AccountSummaryTest methodsFor: 'as yet unclassified' stamp: 'EMI 11/11/2020 17:53:43' prior: 50907673!
test03AccountSummaryOfAccountWithAWithdrawShowWithdrawInfo
	| accountSummary account resultSummary |
	account _ ReceptiveAccount new.
	accountSummary _ AccountSummary of: account.
	
	Withdraw register: 10 on: account.
	
	resultSummary _ OrderedCollection with: 'Extracci�n por 10.' with: 'Balance = -10.'.
	
	self assert: accountSummary report equals: resultSummary.
	! !

!testRun: #AccountSummaryTest #test03AccountSummaryOfAccountWithAWithdrawShowWithdrawInfo stamp: 'EMI 11/11/2020 17:53:45'!
FAILURE!
!AccountSummary methodsFor: 'as yet unclassified' stamp: 'EMI 11/11/2020 17:54:56' prior: 50907591!
report
	| result |
	result _ account transactions collect: [:aTransaction | 
		(aTransaction isKindOf: Deposit) ifTrue:['Dep�sito por ', aTransaction value asString, '.'].
		(aTransaction isKindOf: Withdraw) ifTrue:['Extracci�n por ', aTransaction value asString, '.'].
		].
	result add: 'Balance = ', account balance asString, '.'.
	^result! !

!testRun: #AccountSummaryTest #test01AccountSummaryOfEmptyAccountOnlyShowsBalance stamp: 'EMI 11/11/2020 17:54:58'!
PASSED!

!testRun: #AccountSummaryTest #test02AccountSummaryOfAccountWithADepositShowDepositInfo stamp: 'EMI 11/11/2020 17:54:58'!
FAILURE!

!testRun: #AccountSummaryTest #test03AccountSummaryOfAccountWithAWithdrawShowWithdrawInfo stamp: 'EMI 11/11/2020 17:54:58'!
PASSED!

!testRun: #AccountSummaryTest #test02AccountSummaryOfAccountWithADepositShowDepositInfo stamp: 'EMI 11/11/2020 17:54:58'!
FAILURE!

!testRun: #AccountSummaryTest #test01AccountSummaryOfEmptyAccountOnlyShowsBalance stamp: 'EMI 11/11/2020 17:56:34'!
PASSED!

!testRun: #AccountSummaryTest #test02AccountSummaryOfAccountWithADepositShowDepositInfo stamp: 'EMI 11/11/2020 17:56:34'!
FAILURE!

!testRun: #AccountSummaryTest #test03AccountSummaryOfAccountWithAWithdrawShowWithdrawInfo stamp: 'EMI 11/11/2020 17:56:34'!
PASSED!

!testRun: #AccountSummaryTest #test02AccountSummaryOfAccountWithADepositShowDepositInfo stamp: 'EMI 11/11/2020 17:56:34'!
FAILURE!
!AccountSummary methodsFor: 'as yet unclassified' stamp: 'EMI 11/11/2020 17:58:19' prior: 50907707!
report
	| result |
	result _ OrderedCollection new.
	account transactions do: [:aTransaction | 
		(aTransaction isKindOf: Deposit) ifTrue:[result add: ('Dep�sito por ', aTransaction value asString, '.')].
		(aTransaction isKindOf: Withdraw) ifTrue:[result add: ('Extracci�n por ', aTransaction value asString, '.')].
		].
	result add: 'Balance = ', account balance asString, '.'.
	^result! !

!testRun: #AccountSummaryTest #test01AccountSummaryOfEmptyAccountOnlyShowsBalance stamp: 'EMI 11/11/2020 17:58:23'!
PASSED!

!testRun: #AccountSummaryTest #test02AccountSummaryOfAccountWithADepositShowDepositInfo stamp: 'EMI 11/11/2020 17:58:23'!
PASSED!

!testRun: #AccountSummaryTest #test03AccountSummaryOfAccountWithAWithdrawShowWithdrawInfo stamp: 'EMI 11/11/2020 17:58:23'!
PASSED!
!AccountSummaryTest methodsFor: 'as yet unclassified' stamp: 'EMI 11/11/2020 17:58:57'!
test04AccountSummaryOfAccountWithADepositTransferShowDepositTransferInfo
	| accountSummary account resultSummary |
	account _ ReceptiveAccount new.
	accountSummary _ AccountSummary of: account.
	
	Withdraw register: 10 on: account.
	
	resultSummary _ OrderedCollection with: 'Extracci�n por 10.' with: 'Balance = -10.'.
	
	self assert: accountSummary report equals: resultSummary.
	! !
!AccountSummaryTest methodsFor: 'as yet unclassified' stamp: 'EMI 11/11/2020 17:59:18' prior: 50907782!
test04AccountSummaryOfAccountWithADepositTransferShowDepositTransferInfo
	| accountSummary accountOrigin resultSummary |
	accountOrigin _ ReceptiveAccount new.
	accountSummary _ AccountSummary of: accountOrigin.
	
	Withdraw register: 10 on: accountOrigin.
	
	resultSummary _ OrderedCollection with: 'Extracci�n por 10.' with: 'Balance = -10.'.
	
	self assert: accountSummary report equals: resultSummary.
	! !
!AccountSummaryTest methodsFor: 'as yet unclassified' stamp: 'EMI 11/11/2020 18:00:38' prior: 50907798!
test04AccountSummaryOfAccountWithADepositTransferShowDepositTransferInfo
	| accountSummary accountOrigin accountDestination resultSummary |
	accountOrigin _ ReceptiveAccount new.
	accountDestination _ ReceptiveAccount new.
	accountSummary _ AccountSummary of: accountOrigin.
	
	Transfer from: accountOrigin to: accountDestination amount: 10.
	
	resultSummary _ OrderedCollection with: 'Salida por transferencia de 10.' with: 'Balance = -10.'.
	
	self assert: accountSummary report equals: resultSummary.
	! !

!testRun: #AccountSummaryTest #test04AccountSummaryOfAccountWithADepositTransferShowDepositTransferInfo stamp: 'EMI 11/11/2020 18:00:48'!
FAILURE!
!AccountSummary methodsFor: 'as yet unclassified' stamp: 'EMI 11/11/2020 18:02:19' prior: 50907754!
report
	| result |
	result _ OrderedCollection new.
	account transactions do: [:aTransaction | 
		(aTransaction isKindOf: Deposit) ifTrue:[result add: ('Dep�sito por ', aTransaction value asString, '.')].
		(aTransaction isKindOf: Withdraw) ifTrue:[result add: ('Extracci�n por ', aTransaction value asString, '.')].
		(aTransaction isKindOf: ExtractionTransfer) ifTrue:[result add: ('Salida por transferencia de  ', aTransaction value asString, '.')].
		].
	result add: 'Balance = ', account balance asString, '.'.
	^result! !
!AccountSummary methodsFor: 'as yet unclassified' stamp: 'EMI 11/11/2020 18:02:24' prior: 50907839!
report
	| result |
	result _ OrderedCollection new.
	account transactions do: [:aTransaction | 
		(aTransaction isKindOf: Deposit) ifTrue:[result add: ('Dep�sito por ', aTransaction value asString, '.')].
		(aTransaction isKindOf: Withdraw) ifTrue:[result add: ('Extracci�n por ', aTransaction value asString, '.')].
		(aTransaction isKindOf: ExtractionTransfer) ifTrue:[result add: ('Salida por transferencia de ', aTransaction value asString, '.')].
		].
	result add: 'Balance = ', account balance asString, '.'.
	^result! !

----SNAPSHOT----(11 November 2020 18:02:53) CuisUniversity-4383.image priorSource: 18432485!

!testRun: #AccountSummaryTest #test04AccountSummaryOfAccountWithADepositTransferShowDepositTransferInfo stamp: 'EMI 11/11/2020 18:03:18'!
PASSED!

!testRun: #AccountSummaryTest #test01AccountSummaryOfEmptyAccountOnlyShowsBalance stamp: 'EMI 11/11/2020 18:03:18'!
PASSED!

!testRun: #AccountSummaryTest #test02AccountSummaryOfAccountWithADepositShowDepositInfo stamp: 'EMI 11/11/2020 18:03:18'!
PASSED!

!testRun: #AccountSummaryTest #test03AccountSummaryOfAccountWithAWithdrawShowWithdrawInfo stamp: 'EMI 11/11/2020 18:03:18'!
PASSED!

!testRun: #AccountSummaryTest #test04AccountSummaryOfAccountWithADepositTransferShowDepositTransferInfo stamp: 'EMI 11/11/2020 18:03:18'!
PASSED!
!AccountSummaryTest methodsFor: 'as yet unclassified' stamp: 'EMI 11/11/2020 18:03:41' prior: 50907815!
test04AccountSummaryOfAccountWithADepositTransferShowDepositTransferInfo
	| accountSummary accountOrigin accountDestination resultSummary |
	accountOrigin _ ReceptiveAccount new.
	accountDestination _ ReceptiveAccount new.
	accountSummary _ AccountSummary of: accountOrigin.
	
	Transfer from: accountOrigin to: accountDestination amount: 10.
	
	resultSummary _ OrderedCollection with: 'Salida por transferencia de 10.' with: 'Balance = -10.'.
	
	self assert: accountSummary report equals: resultSummary.
	! !
!AccountSummaryTest methodsFor: 'as yet unclassified' stamp: 'EMI 11/11/2020 18:04:18'!
test04AccountSummaryOfAccountWithAExtractionTransferShowExtractionTransferInfo
	| accountSummary accountOrigin accountDestination resultSummary |
	accountOrigin _ ReceptiveAccount new.
	accountDestination _ ReceptiveAccount new.
	accountSummary _ AccountSummary of: accountOrigin.
	
	Transfer from: accountOrigin to: accountDestination amount: 10.
	
	resultSummary _ OrderedCollection with: 'Salida por transferencia de 10.' with: 'Balance = -10.'.
	
	self assert: accountSummary report equals: resultSummary.
	! !

!methodRemoval: AccountSummaryTest #test04AccountSummaryOfAccountWithADepositTransferShowDepositTransferInfo stamp: 'EMI 11/11/2020 18:04:18'!
test04AccountSummaryOfAccountWithADepositTransferShowDepositTransferInfo
	| accountSummary accountOrigin accountDestination resultSummary |
	accountOrigin _ ReceptiveAccount new.
	accountDestination _ ReceptiveAccount new.
	accountSummary _ AccountSummary of: accountOrigin.
	
	Transfer from: accountOrigin to: accountDestination amount: 10.
	
	resultSummary _ OrderedCollection with: 'Salida por transferencia de 10.' with: 'Balance = -10.'.
	
	self assert: accountSummary report equals: resultSummary.
	!
!AccountSummaryTest methodsFor: 'as yet unclassified' stamp: 'EMI 11/11/2020 18:04:51'!
test05AccountSummaryOfAccountWithADepositTransferShowDepositTransferInfo
	| accountSummary accountOrigin accountDestination resultSummary |
	accountOrigin _ ReceptiveAccount new.
	accountDestination _ ReceptiveAccount new.
	accountSummary _ AccountSummary of: accountOrigin.
	
	Transfer from: accountOrigin to: accountDestination amount: 10.
	
	resultSummary _ OrderedCollection with: 'Salida por transferencia de 10.' with: 'Balance = -10.'.
	
	self assert: accountSummary report equals: resultSummary.
	! !
!AccountSummaryTest methodsFor: 'as yet unclassified' stamp: 'EMI 11/11/2020 18:05:06' prior: 50907962!
test05AccountSummaryOfAccountWithADepositTransferShowDepositTransferInfo
	| accountSummary accountOrigin accountDestination resultSummary |
	accountOrigin _ ReceptiveAccount new.
	accountDestination _ ReceptiveAccount new.
	accountSummary _ AccountSummary of: accountOrigin.
	
	Transfer from: accountOrigin to: accountDestination amount: 10.
	
	resultSummary _ OrderedCollection with: 'Entrada por transferencia de 10.' with: 'Balance = -10.'.
	
	self assert: accountSummary report equals: resultSummary.
	! !
!AccountSummaryTest methodsFor: 'as yet unclassified' stamp: 'EMI 11/11/2020 18:05:51' prior: 50907982!
test05AccountSummaryOfAccountWithADepositTransferShowDepositTransferInfo
	| accountSummary accountOrigin accountDestination resultSummary |
	accountOrigin _ ReceptiveAccount new.
	accountDestination _ ReceptiveAccount new.
	accountSummary _ AccountSummary of: accountDestination.
	
	Transfer from: accountOrigin to: accountDestination amount: 10.
	
	resultSummary _ OrderedCollection with: 'Entrada por transferencia de 10.' with: 'Balance = 10.'.
	
	self assert: accountSummary report equals: resultSummary.
	! !

!testRun: #AccountSummaryTest #test05AccountSummaryOfAccountWithADepositTransferShowDepositTransferInfo stamp: 'EMI 11/11/2020 18:05:59'!
FAILURE!
!AccountSummary methodsFor: 'as yet unclassified' stamp: 'EMI 11/11/2020 18:06:40' prior: 50907859!
report
	| result |
	result _ OrderedCollection new.
	account transactions do: [:aTransaction | 
		(aTransaction isKindOf: Deposit) ifTrue:[result add: ('Dep�sito por ', aTransaction value asString, '.')].
		(aTransaction isKindOf: Withdraw) ifTrue:[result add: ('Extracci�n por ', aTransaction value asString, '.')].
		(aTransaction isKindOf: ExtractionTransfer) ifTrue:[result add: ('Salida por transferencia de ', aTransaction value asString, '.')].
		(aTransaction isKindOf: DepositTransfer) ifTrue:[result add: ('Entrada por transferencia de ', aTransaction value asString, '.')].
		].
	result add: 'Balance = ', account balance asString, '.'.
	^result! !

!testRun: #AccountSummaryTest #test05AccountSummaryOfAccountWithADepositTransferShowDepositTransferInfo stamp: 'EMI 11/11/2020 18:10:16'!
PASSED!

!testRun: #AccountSummaryTest #test01AccountSummaryOfEmptyAccountOnlyShowsBalance stamp: 'EMI 11/11/2020 18:10:20'!
PASSED!

!testRun: #AccountSummaryTest #test02AccountSummaryOfAccountWithADepositShowDepositInfo stamp: 'EMI 11/11/2020 18:10:20'!
PASSED!

!testRun: #AccountSummaryTest #test03AccountSummaryOfAccountWithAWithdrawShowWithdrawInfo stamp: 'EMI 11/11/2020 18:10:20'!
PASSED!

!testRun: #AccountSummaryTest #test04AccountSummaryOfAccountWithAExtractionTransferShowExtractionTransferInfo stamp: 'EMI 11/11/2020 18:10:20'!
PASSED!

!testRun: #AccountSummaryTest #test05AccountSummaryOfAccountWithADepositTransferShowDepositTransferInfo stamp: 'EMI 11/11/2020 18:10:20'!
PASSED!
!AccountSummaryTest methodsFor: 'as yet unclassified' stamp: 'EMI 11/11/2020 18:13:09'!
test06AccountSummaryOfAccountWithOneOfEachTransactionShowsCorrectInfo
	| accountSummary accountOrigin accountDestination resultSummary |
	accountOrigin _ ReceptiveAccount new.
	accountDestination _ ReceptiveAccount new.
	accountSummary _ AccountSummary of: accountDestination.
	
	Transfer from: accountOrigin to: accountDestination amount: 10.
	
	resultSummary _ OrderedCollection with: 'Entrada por transferencia de 10.' with: 'Balance = 10.'.
	
	self assert: accountSummary report equals: resultSummary.
	! !
!AccountSummaryTest methodsFor: 'as yet unclassified' stamp: 'EMI 11/11/2020 18:14:50' prior: 50908076!
test06AccountSummaryOfAccountWithOneOfEachTransactionShowsCorrectInfo
	| accountSummary accountOrigin accountDestination resultSummary |
	accountOrigin _ ReceptiveAccount new.
	accountDestination _ ReceptiveAccount new.
	accountSummary _ AccountSummary of: accountOrigin.
	
	Deposit register: 50  on: accountOrigin.
	Withdraw register: 10 on: accountOrigin.
	Transfer from: accountOrigin to: accountDestination amount: 20.
	Transfer from: accountDestination to: accountOrigin amount: 5.
	
	resultSummary _ OrderedCollection with: 'Entrada por transferencia de 10.' with: 'Balance = 25.'.
	
	self assert: accountSummary report equals: resultSummary.
	! !
!AccountSummaryTest methodsFor: 'as yet unclassified' stamp: 'EMI 11/11/2020 18:15:21' prior: 50908096!
test06AccountSummaryOfAccountWithOneOfEachTransactionShowsCorrectInfo
	| accountSummary accountOrigin accountDestination resultSummary |
	accountOrigin _ ReceptiveAccount new.
	accountDestination _ ReceptiveAccount new.
	accountSummary _ AccountSummary of: accountOrigin.
	
	Deposit register: 50  on: accountOrigin.
	Withdraw register: 10 on: accountOrigin.
	Transfer from: accountOrigin to: accountDestination amount: 20.
	Transfer from: accountDestination to: accountOrigin amount: 5.
	
	resultSummary _ OrderedCollection with: 'Salida por transferencia de 20.' with: 'Entrada por transferencia de 5.' with: 'Balance = 25.'.
	
	self assert: accountSummary report equals: resultSummary.
	! !
!AccountSummaryTest methodsFor: 'as yet unclassified' stamp: 'EMI 11/11/2020 18:15:39' prior: 50908120!
test06AccountSummaryOfAccountWithOneOfEachTransactionShowsCorrectInfo
	| accountSummary accountOrigin accountDestination resultSummary |
	accountOrigin _ ReceptiveAccount new.
	accountDestination _ ReceptiveAccount new.
	accountSummary _ AccountSummary of: accountOrigin.
	
	Deposit register: 50  on: accountOrigin.
	Withdraw register: 10 on: accountOrigin.
	Transfer from: accountOrigin to: accountDestination amount: 20.
	Transfer from: accountDestination to: accountOrigin amount: 5.
	
	resultSummary _ OrderedCollection with: 'Extracci�n por 10.' with: 'Salida por transferencia de 20.' with: 'Entrada por transferencia de 5.' with: 'Balance = 25.'.
	
	self assert: accountSummary report equals: resultSummary.
	! !
!AccountSummaryTest methodsFor: 'as yet unclassified' stamp: 'EMI 11/11/2020 18:16:01' prior: 50908145!
test06AccountSummaryOfAccountWithOneOfEachTransactionShowsCorrectInfo
	| accountSummary accountOrigin accountDestination resultSummary |
	accountOrigin _ ReceptiveAccount new.
	accountDestination _ ReceptiveAccount new.
	accountSummary _ AccountSummary of: accountOrigin.
	
	Deposit register: 50  on: accountOrigin.
	Withdraw register: 10 on: accountOrigin.
	Transfer from: accountOrigin to: accountDestination amount: 20.
	Transfer from: accountDestination to: accountOrigin amount: 5.
	
	resultSummary _ OrderedCollection with: 'Dep�sito por 50.' with: 'Extracci�n por 10.' with: 'Salida por transferencia de 20.' with: 'Entrada por transferencia de 5.' with: 'Balance = 25.'.
	
	self assert: accountSummary report equals: resultSummary.
	! !

!testRun: #AccountSummaryTest #test06AccountSummaryOfAccountWithOneOfEachTransactionShowsCorrectInfo stamp: 'EMI 11/11/2020 18:16:51'!
PASSED!

!testRun: #AccountSummaryTest #test01AccountSummaryOfEmptyAccountOnlyShowsBalance stamp: 'EMI 11/11/2020 18:16:56'!
PASSED!

!testRun: #AccountSummaryTest #test02AccountSummaryOfAccountWithADepositShowDepositInfo stamp: 'EMI 11/11/2020 18:16:56'!
PASSED!

!testRun: #AccountSummaryTest #test03AccountSummaryOfAccountWithAWithdrawShowWithdrawInfo stamp: 'EMI 11/11/2020 18:16:56'!
PASSED!

!testRun: #AccountSummaryTest #test04AccountSummaryOfAccountWithAExtractionTransferShowExtractionTransferInfo stamp: 'EMI 11/11/2020 18:16:56'!
PASSED!

!testRun: #AccountSummaryTest #test05AccountSummaryOfAccountWithADepositTransferShowDepositTransferInfo stamp: 'EMI 11/11/2020 18:16:56'!
PASSED!

!testRun: #AccountSummaryTest #test06AccountSummaryOfAccountWithOneOfEachTransactionShowsCorrectInfo stamp: 'EMI 11/11/2020 18:16:56'!
PASSED!

----SNAPSHOT----(11 November 2020 18:21:42) CuisUniversity-4383.image priorSource: 18439278!
!Deposit methodsFor: 'nil' stamp: 'EMI 11/11/2020 18:26:23'!
reportTo: aReportMaker
	aReportMaker reportDepositTransaction: self.! !
!AccountSummary methodsFor: 'nil' stamp: 'EMI 11/11/2020 18:26:50'!
reportDepositTransaction: aDepositTransaction
	^self! !
!AccountSummary methodsFor: 'as yet unclassified' stamp: 'EMI 11/11/2020 18:40:31' prior: 50908235!
reportDepositTransaction: aDepositTransaction
	^'Dep�sito por ', aDepositTransaction value asString, '.'! !
!AccountSummary methodsFor: 'as yet unclassified' stamp: 'EMI 11/11/2020 18:43:17' prior: 50908026!
report
	| result |
	result _ OrderedCollection new.
	account transactions do: [:aTransaction | 
		aTransaction reportTo: self.
		"(aTransaction isKindOf: Withdraw) ifTrue:[result add: ('Extracci�n por ', aTransaction value asString, '.')].
		(aTransaction isKindOf: ExtractionTransfer) ifTrue:[result add: ('Salida por transferencia de ', aTransaction value asString, '.')].
		(aTransaction isKindOf: DepositTransfer) ifTrue:[result add: ('Entrada por transferencia de ', aTransaction value asString, '.')]."
		].
	result add: 'Balance = ', account balance asString, '.'.
	^result! !

!testRun: #AccountSummaryTest #test02AccountSummaryOfAccountWithADepositShowDepositInfo stamp: 'EMI 11/11/2020 18:43:26'!
FAILURE!

!testRun: #AccountSummaryTest #test02AccountSummaryOfAccountWithADepositShowDepositInfo stamp: 'EMI 11/11/2020 18:43:26'!
FAILURE!
!AccountSummary methodsFor: 'as yet unclassified' stamp: 'EMI 11/11/2020 18:43:50' prior: 50908247!
report
	| result |
	result _ OrderedCollection new.
	account transactions do: [:aTransaction | 
		result add: (aTransaction reportTo: self).
		"(aTransaction isKindOf: Withdraw) ifTrue:[result add: ('Extracci�n por ', aTransaction value asString, '.')].
		(aTransaction isKindOf: ExtractionTransfer) ifTrue:[result add: ('Salida por transferencia de ', aTransaction value asString, '.')].
		(aTransaction isKindOf: DepositTransfer) ifTrue:[result add: ('Entrada por transferencia de ', aTransaction value asString, '.')]."
		].
	result add: 'Balance = ', account balance asString, '.'.
	^result! !

!testRun: #AccountSummaryTest #test02AccountSummaryOfAccountWithADepositShowDepositInfo stamp: 'EMI 11/11/2020 18:43:53'!
FAILURE!

!testRun: #AccountSummaryTest #test02AccountSummaryOfAccountWithADepositShowDepositInfo stamp: 'EMI 11/11/2020 18:43:53'!
FAILURE!
!Deposit methodsFor: 'as yet unclassified' stamp: 'EMI 11/11/2020 18:44:23' prior: 50908230!
reportTo: aReportMaker
	^aReportMaker reportDepositTransaction: self.! !

!testRun: #AccountSummaryTest #test02AccountSummaryOfAccountWithADepositShowDepositInfo stamp: 'EMI 11/11/2020 18:44:31'!
PASSED!
!AccountSummary methodsFor: 'as yet unclassified' stamp: 'EMI 11/11/2020 18:46:38' prior: 50908277!
report
	| result |
	result _ OrderedCollection new.
	account transactions do: [:aTransaction | 
		result add: (aTransaction reportTo: self).
		"(aTransaction isKindOf: Deposit) ifTrue:[result add: ('Dep�sito por ', aTransaction value asString, '.')].
		(aTransaction isKindOf: Withdraw) ifTrue:[result add: ('Extracci�n por ', aTransaction value asString, '.')].
		(aTransaction isKindOf: ExtractionTransfer) ifTrue:[result add: ('Salida por transferencia de ', aTransaction value asString, '.')].
		(aTransaction isKindOf: DepositTransfer) ifTrue:[result add: ('Entrada por transferencia de ', aTransaction value asString, '.')]."
		].
	result add: 'Balance = ', account balance asString, '.'.
	^result! !

----SNAPSHOT----(11 November 2020 18:50:42) CuisUniversity-4383.image priorSource: 18450457!

----SNAPSHOT----(11 November 2020 18:50:59) CuisUniversity-4383.image priorSource: 18454114!

----SNAPSHOT----(11 November 2020 18:51:51) CuisUniversity-4383.image priorSource: 18454208!

----QUIT----(11 November 2020 18:52:06) CuisUniversity-4383.image priorSource: 18454302!

----STARTUP---- (12 November 2020 19:50:43) as /home/doraserver/CuisUniversity/CuisUniversity-4383.image!

!AccountSummary methodsFor: 'as yet unclassified' stamp: 'EMI 11/12/2020 21:12:16' prior: 50908317!
report
	| result |
	result _ OrderedCollection new.
	account transactions do: [:aTransaction | 
		result add: (aTransaction reportTo: self).
	].
	result add: 'Balance = ', account balance asString, '.'.
	^result! !
!Account methodsFor: 'nil' stamp: 'EMI 11/12/2020 21:12:42'!
reportTo: aReport
	! !
!Account methodsFor: 'as yet unclassified' stamp: 'EMI 11/12/2020 21:12:58' prior: 50908367!
reportTo: aReport
	^self subclassResponsibility.! !
!ReceptiveAccount methodsFor: 'nil' stamp: 'EMI 11/12/2020 21:13:11' overrides: 50908371!
reportTo: aReport! !
!ReceptiveAccount methodsFor: 'as yet unclassified' stamp: 'EMI 11/12/2020 21:13:23' prior: 50908376 overrides: 50908371!
reportTo: aReport
! !
!ReceptiveAccount methodsFor: 'as yet unclassified' stamp: 'EMI 11/12/2020 21:14:10' prior: 50908381 overrides: 50908371!
reportTo: aReport
	transactions do:[:aTransaction | aTransaction reportTo: aReport].! !
!AccountSummary methodsFor: 'as yet unclassified' stamp: 'EMI 11/12/2020 21:15:09' prior: 50908358!
report
	| result |
	result _ OrderedCollection new.
	account reportTo: self.
	result add: 'Balance = ', account balance asString, '.'.
	^result! !
!AccountSummary methodsFor: 'as yet unclassified' stamp: 'EMI 11/12/2020 21:15:43' prior: 50908392!
report
	| result |
	result _ account reportTo: self.
	result add: 'Balance = ', account balance asString, '.'.
	^result! !
!ReceptiveAccount methodsFor: 'as yet unclassified' stamp: 'EMI 11/12/2020 21:16:32' prior: 50908386 overrides: 50908371!
reportTo: aReport
	| result |
	result _ OrderedCollection new.
	transactions do:[:aTransaction | result add: (aTransaction reportTo: aReport)].! !
!ReceptiveAccount methodsFor: 'as yet unclassified' stamp: 'EMI 11/12/2020 21:17:02' prior: 50908408 overrides: 50908371!
reportTo: aReport
	| result |
	result _ OrderedCollection new.
	transactions do:[:aTransaction | result add: (aTransaction reportTo: aReport)].
	^ result.! !
!AccountTransaction methodsFor: 'nil' stamp: 'EMI 11/12/2020 21:17:53'!
reportTo: aReport
	^self subclassResponsibility.! !
!Deposit methodsFor: 'as yet unclassified' stamp: 'EMI 11/12/2020 21:18:03' prior: 50908307 overrides: 50908425!
reportTo: aReport
	^aReport reportDepositTransaction: self.! !
!DepositTransfer methodsFor: 'nil' stamp: 'EMI 11/12/2020 21:18:25' overrides: 50908425!
reportTo: aReport
	aReport ! !
!DepositTransfer methodsFor: 'as yet unclassified' stamp: 'EMI 11/12/2020 21:18:46' prior: 50908436 overrides: 50908425!
reportTo: aReport
	^aReport reportDepositTransferTransaction: self.! !
!ExtractionTransfer methodsFor: 'nil' stamp: 'EMI 11/12/2020 21:19:03' overrides: 50908425!
reportTo: aReport
	^aReport reportExtractionTransferTransaction: self.! !
!Withdraw methodsFor: 'nil' stamp: 'EMI 11/12/2020 21:19:24' overrides: 50908425!
reportTo: aReport
	^aReport reportWithdrawTransaction self.! !
!AccountSummary methodsFor: 'as yet unclassified' stamp: 'EMI 11/12/2020 21:20:00'!
reportWithdrawTransaction: aWithdrawTransaction
	^'Extracci�n por ', aWithdrawTransaction value asString, '.'! !
!AccountSummary methodsFor: 'as yet unclassified' stamp: 'EMI 11/12/2020 21:20:24'!
reportDepositTransferTransaction: aDepositTransferTransaction
	^'Extracci�n por ', aDepositTransferTransaction value asString, '.'! !
!AccountSummary methodsFor: 'as yet unclassified' stamp: 'EMI 11/12/2020 21:20:50' prior: 50908464!
reportDepositTransferTransaction: aDepositTransferTransaction
	^'Salida por transferencia de', aDepositTransferTransaction value asString, '.'! !
!AccountSummary methodsFor: 'as yet unclassified' stamp: 'EMI 11/12/2020 21:21:12'!
reportExtractionTransferTransaction: aExtractionTransferTransaction
	^'Entrada por transferencia de', aExtractionTransferTransaction value asString, '.'! !

----SNAPSHOT----(12 November 2020 21:21:38) CuisUniversity-4383.image priorSource: 18454396!

!testRun: #AccountSummaryTest #test01AccountSummaryOfEmptyAccountOnlyShowsBalance stamp: 'EMI 11/12/2020 21:21:44'!
PASSED!

!testRun: #AccountSummaryTest #test02AccountSummaryOfAccountWithADepositShowDepositInfo stamp: 'EMI 11/12/2020 21:21:44'!
PASSED!

!testRun: #AccountSummaryTest #test03AccountSummaryOfAccountWithAWithdrawShowWithdrawInfo stamp: 'EMI 11/12/2020 21:21:44'!
ERROR!

!testRun: #AccountSummaryTest #test04AccountSummaryOfAccountWithAExtractionTransferShowExtractionTransferInfo stamp: 'EMI 11/12/2020 21:21:44'!
FAILURE!

!testRun: #AccountSummaryTest #test05AccountSummaryOfAccountWithADepositTransferShowDepositTransferInfo stamp: 'EMI 11/12/2020 21:21:44'!
FAILURE!

!testRun: #AccountSummaryTest #test06AccountSummaryOfAccountWithOneOfEachTransactionShowsCorrectInfo stamp: 'EMI 11/12/2020 21:21:44'!
ERROR!

!testRun: #AccountSummaryTest #test03AccountSummaryOfAccountWithAWithdrawShowWithdrawInfo stamp: 'EMI 11/12/2020 21:21:47'!
ERROR!
!Withdraw methodsFor: 'as yet unclassified' stamp: 'EMI 11/12/2020 21:22:21' prior: 50908452 overrides: 50908425!
reportTo: aReport
	^aReport reportWithdrawTransaction: self.! !

!testRun: #AccountSummaryTest #test01AccountSummaryOfEmptyAccountOnlyShowsBalance stamp: 'EMI 11/12/2020 21:22:27'!
PASSED!

!testRun: #AccountSummaryTest #test02AccountSummaryOfAccountWithADepositShowDepositInfo stamp: 'EMI 11/12/2020 21:22:27'!
PASSED!

!testRun: #AccountSummaryTest #test03AccountSummaryOfAccountWithAWithdrawShowWithdrawInfo stamp: 'EMI 11/12/2020 21:22:27'!
PASSED!

!testRun: #AccountSummaryTest #test04AccountSummaryOfAccountWithAExtractionTransferShowExtractionTransferInfo stamp: 'EMI 11/12/2020 21:22:27'!
FAILURE!

!testRun: #AccountSummaryTest #test05AccountSummaryOfAccountWithADepositTransferShowDepositTransferInfo stamp: 'EMI 11/12/2020 21:22:27'!
FAILURE!

!testRun: #AccountSummaryTest #test06AccountSummaryOfAccountWithOneOfEachTransactionShowsCorrectInfo stamp: 'EMI 11/12/2020 21:22:27'!
FAILURE!

!testRun: #AccountSummaryTest #test04AccountSummaryOfAccountWithAExtractionTransferShowExtractionTransferInfo stamp: 'EMI 11/12/2020 21:22:31'!
FAILURE!
!AccountSummary methodsFor: 'as yet unclassified' stamp: 'EMI 11/12/2020 21:23:10' prior: 50908480!
reportExtractionTransferTransaction: aExtractionTransferTransaction
	^'Salida por transferencia de', aExtractionTransferTransaction value asString, '.'! !
!AccountSummary methodsFor: 'as yet unclassified' stamp: 'EMI 11/12/2020 21:23:17' prior: 50908472!
reportDepositTransferTransaction: aDepositTransferTransaction
	^'Entrada por transferencia de', aDepositTransferTransaction value asString, '.'! !

!testRun: #AccountSummaryTest #test01AccountSummaryOfEmptyAccountOnlyShowsBalance stamp: 'EMI 11/12/2020 21:23:20'!
PASSED!

!testRun: #AccountSummaryTest #test02AccountSummaryOfAccountWithADepositShowDepositInfo stamp: 'EMI 11/12/2020 21:23:20'!
PASSED!

!testRun: #AccountSummaryTest #test03AccountSummaryOfAccountWithAWithdrawShowWithdrawInfo stamp: 'EMI 11/12/2020 21:23:20'!
PASSED!

!testRun: #AccountSummaryTest #test04AccountSummaryOfAccountWithAExtractionTransferShowExtractionTransferInfo stamp: 'EMI 11/12/2020 21:23:20'!
FAILURE!

!testRun: #AccountSummaryTest #test05AccountSummaryOfAccountWithADepositTransferShowDepositTransferInfo stamp: 'EMI 11/12/2020 21:23:20'!
FAILURE!

!testRun: #AccountSummaryTest #test06AccountSummaryOfAccountWithOneOfEachTransactionShowsCorrectInfo stamp: 'EMI 11/12/2020 21:23:20'!
FAILURE!

!testRun: #AccountSummaryTest #test04AccountSummaryOfAccountWithAExtractionTransferShowExtractionTransferInfo stamp: 'EMI 11/12/2020 21:23:23'!
FAILURE!
!AccountSummary methodsFor: 'as yet unclassified' stamp: 'EMI 11/12/2020 21:23:42' prior: 50908567!
reportDepositTransferTransaction: aDepositTransferTransaction
	^'Entrada por transferencia de ', aDepositTransferTransaction value asString, '.'! !
!AccountSummary methodsFor: 'as yet unclassified' stamp: 'EMI 11/12/2020 21:23:47' prior: 50908559!
reportExtractionTransferTransaction: aExtractionTransferTransaction
	^'Salida por transferencia de ', aExtractionTransferTransaction value asString, '.'! !

----SNAPSHOT----(12 November 2020 21:23:56) CuisUniversity-4383.image priorSource: 18458779!

!testRun: #AccountSummaryTest #test01AccountSummaryOfEmptyAccountOnlyShowsBalance stamp: 'EMI 11/12/2020 21:25:06'!
PASSED!

!testRun: #AccountSummaryTest #test02AccountSummaryOfAccountWithADepositShowDepositInfo stamp: 'EMI 11/12/2020 21:25:06'!
PASSED!

!testRun: #AccountSummaryTest #test03AccountSummaryOfAccountWithAWithdrawShowWithdrawInfo stamp: 'EMI 11/12/2020 21:25:06'!
PASSED!

!testRun: #AccountSummaryTest #test04AccountSummaryOfAccountWithAExtractionTransferShowExtractionTransferInfo stamp: 'EMI 11/12/2020 21:25:06'!
PASSED!

!testRun: #AccountSummaryTest #test05AccountSummaryOfAccountWithADepositTransferShowDepositTransferInfo stamp: 'EMI 11/12/2020 21:25:06'!
PASSED!

!testRun: #AccountSummaryTest #test06AccountSummaryOfAccountWithOneOfEachTransactionShowsCorrectInfo stamp: 'EMI 11/12/2020 21:25:06'!
PASSED!
!AccountSummaryTest methodsFor: 'as yet unclassified' stamp: 'EMI 11/12/2020 21:26:18'!
test07AccountSummaryOfEmptyPortfolioOnlyShowsBalance
	| accountSummary account |
	account _ ReceptiveAccount new.
	accountSummary _ AccountSummary of: account.
	 
	self deny: accountSummary report isEmpty.
	self assert: accountSummary report first equals: 'Balance = 0.'.! !
!AccountSummaryTest methodsFor: 'as yet unclassified' stamp: 'EMI 11/12/2020 21:26:29' prior: 50908651!
test07AccountSummaryOfEmptyPortfolioOnlyShowsBalance
	| accountSummary portfolio |
	portfolio _ ReceptiveAccount new.
	accountSummary _ AccountSummary of: portfolio.
	 
	self deny: accountSummary report isEmpty.
	self assert: accountSummary report first equals: 'Balance = 0.'.! !
!AccountSummaryTest methodsFor: 'as yet unclassified' stamp: 'EMI 11/12/2020 21:26:39' prior: 50908663!
test07AccountSummaryOfEmptyPortfolioOnlyShowsBalance
	| accountSummary portfolio |
	portfolio _ Portfolio new.
	accountSummary _ AccountSummary of: portfolio.
	 
	self deny: accountSummary report isEmpty.
	self assert: accountSummary report first equals: 'Balance = 0.'.! !

!testRun: #AccountSummaryTest #test07AccountSummaryOfEmptyPortfolioOnlyShowsBalance stamp: 'EMI 11/12/2020 21:26:53'!
ERROR!
!Portfolio methodsFor: 'nil' stamp: 'EMI 11/12/2020 21:27:26' overrides: 50908371!
reportTo: aReport
	^OrderedCollection new.! !
!ReceptiveAccount methodsFor: 'as yet unclassified' stamp: 'EMI 11/12/2020 21:28:15' prior: 50908417 overrides: 50908371!
reportTo: aReport
	| result |
	result _ OrderedCollection new.
	transactions do:[:aTransaction | result add: (aTransaction reportTo: aReport)].
	result add: ('Balance = ',self balance asString,'.').
	^ result.! !
!AccountSummary methodsFor: 'as yet unclassified' stamp: 'EMI 11/12/2020 21:28:37' prior: 50908400!
report
	^account reportTo: self.! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'EMI 11/12/2020 21:29:05' prior: 50908692 overrides: 50908371!
reportTo: aReport
	^OrderedCollection with: 'Balance = 0.'.! !

!testRun: #AccountSummaryTest #test01AccountSummaryOfEmptyAccountOnlyShowsBalance stamp: 'EMI 11/12/2020 21:29:09'!
PASSED!

!testRun: #AccountSummaryTest #test02AccountSummaryOfAccountWithADepositShowDepositInfo stamp: 'EMI 11/12/2020 21:29:09'!
PASSED!

!testRun: #AccountSummaryTest #test03AccountSummaryOfAccountWithAWithdrawShowWithdrawInfo stamp: 'EMI 11/12/2020 21:29:09'!
PASSED!

!testRun: #AccountSummaryTest #test04AccountSummaryOfAccountWithAExtractionTransferShowExtractionTransferInfo stamp: 'EMI 11/12/2020 21:29:09'!
PASSED!

!testRun: #AccountSummaryTest #test05AccountSummaryOfAccountWithADepositTransferShowDepositTransferInfo stamp: 'EMI 11/12/2020 21:29:09'!
PASSED!

!testRun: #AccountSummaryTest #test06AccountSummaryOfAccountWithOneOfEachTransactionShowsCorrectInfo stamp: 'EMI 11/12/2020 21:29:09'!
PASSED!

!testRun: #AccountSummaryTest #test07AccountSummaryOfEmptyPortfolioOnlyShowsBalance stamp: 'EMI 11/12/2020 21:29:09'!
PASSED!
!AccountSummaryTest methodsFor: 'as yet unclassified' stamp: 'EMI 11/12/2020 21:29:51'!
test08AccountSummaryOfPortfolioWithADepositOnlyShowsBalance
	| accountSummary portfolio |
	portfolio _ Portfolio new.
	accountSummary _ AccountSummary of: portfolio.
	 
	self deny: accountSummary report isEmpty.
	self assert: accountSummary report first equals: 'Balance = 0.'.! !
!AccountSummaryTest methodsFor: 'as yet unclassified' stamp: 'EMI 11/12/2020 21:30:07' prior: 50908748!
test08AccountSummaryOfPortfolioWithADepositOnlyShowsBalance
	| accountSummary portfolio account |
	portfolio _ Portfolio new.
	account _ ReceptiveAccount new.
	accountSummary _ AccountSummary of: portfolio.
	 
	self deny: accountSummary report isEmpty.
	self assert: accountSummary report first equals: 'Balance = 0.'.! !
!AccountSummaryTest methodsFor: 'as yet unclassified' stamp: 'EMI 11/12/2020 21:30:26' prior: 50908761!
test08AccountSummaryOfPortfolioWithADepositOnlyShowsBalance
	| accountSummary portfolio account |
	portfolio _ Portfolio new.
	account _ ReceptiveAccount new.
	accountSummary _ AccountSummary of: portfolio.
	Deposit register: 10 on: account.
	 
	self deny: accountSummary report isEmpty.
	self assert: accountSummary report first equals: 'Balance = 0.'.! !
!AccountSummaryTest methodsFor: 'as yet unclassified' stamp: 'EMI 11/12/2020 21:31:02' prior: 50908775!
test08AccountSummaryOfPortfolioWithADepositOnlyShowsBalance
	| accountSummary portfolio account expectedResult |
	portfolio _ Portfolio new.
	account _ ReceptiveAccount new.
	accountSummary _ AccountSummary of: portfolio.
	Deposit register: 10 on: account.
	 
	expectedResult _ OrderedCollection with: 'Balance = 10.'.
	
	self deny: accountSummary report isEmpty.
	self assert: accountSummary report equals: expectedResult.! !
!AccountSummaryTest methodsFor: 'as yet unclassified' stamp: 'EMI 11/12/2020 21:31:16' prior: 50908790!
test08AccountSummaryOfPortfolioWithADepositOnlyShowsBalance
	| accountSummary portfolio account expectedResult |
	portfolio _ Portfolio new.
	account _ ReceptiveAccount new.
	accountSummary _ AccountSummary of: portfolio.
	Deposit register: 10 on: account.
	 
	expectedResult _ OrderedCollection with: 'Dep�sito por 10.' with: 'Balance = 10.'.
	
	self deny: accountSummary report isEmpty.
	self assert: accountSummary report equals: expectedResult.! !

!testRun: #AccountSummaryTest #test08AccountSummaryOfPortfolioWithADepositOnlyShowsBalance stamp: 'EMI 11/12/2020 21:31:33'!
FAILURE!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'EMI 11/12/2020 21:37:10' prior: 50908713 overrides: 50908371!
reportTo: aReport
	| result |
	result _ OrderedCollection new.
	accounts do:[:anAccount || accountReport |
			accountReport _ anAccount reportTo: aReport.
			accountReport removeLast.
			result addAll: accountReport.
		].
	result add: ('Balance = ',self balance,'.').
	^result.
	! !

!testRun: #AccountSummaryTest #test08AccountSummaryOfPortfolioWithADepositOnlyShowsBalance stamp: 'EMI 11/12/2020 21:37:28'!
ERROR!

!testRun: #AccountSummaryTest #test08AccountSummaryOfPortfolioWithADepositOnlyShowsBalance stamp: 'EMI 11/12/2020 21:37:28'!
ERROR!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'EMI 11/12/2020 21:37:46' prior: 50908829 overrides: 50908371!
reportTo: aReport
	| result |
	result _ OrderedCollection new.
	accounts do:[:anAccount || accountReport |
			accountReport _ anAccount reportTo: aReport.
			accountReport removeLast.
			result addAll: accountReport.
		].
	result add: ('Balance = ',self balance asString,'.').
	^result.
	! !

!testRun: #AccountSummaryTest #test01AccountSummaryOfEmptyAccountOnlyShowsBalance stamp: 'EMI 11/12/2020 21:37:49'!
PASSED!

!testRun: #AccountSummaryTest #test02AccountSummaryOfAccountWithADepositShowDepositInfo stamp: 'EMI 11/12/2020 21:37:49'!
PASSED!

!testRun: #AccountSummaryTest #test03AccountSummaryOfAccountWithAWithdrawShowWithdrawInfo stamp: 'EMI 11/12/2020 21:37:49'!
PASSED!

!testRun: #AccountSummaryTest #test04AccountSummaryOfAccountWithAExtractionTransferShowExtractionTransferInfo stamp: 'EMI 11/12/2020 21:37:49'!
PASSED!

!testRun: #AccountSummaryTest #test05AccountSummaryOfAccountWithADepositTransferShowDepositTransferInfo stamp: 'EMI 11/12/2020 21:37:49'!
PASSED!

!testRun: #AccountSummaryTest #test06AccountSummaryOfAccountWithOneOfEachTransactionShowsCorrectInfo stamp: 'EMI 11/12/2020 21:37:49'!
PASSED!

!testRun: #AccountSummaryTest #test07AccountSummaryOfEmptyPortfolioOnlyShowsBalance stamp: 'EMI 11/12/2020 21:37:49'!
PASSED!

!testRun: #AccountSummaryTest #test08AccountSummaryOfPortfolioWithADepositOnlyShowsBalance stamp: 'EMI 11/12/2020 21:37:49'!
FAILURE!

!testRun: #AccountSummaryTest #test08AccountSummaryOfPortfolioWithADepositOnlyShowsBalance stamp: 'EMI 11/12/2020 21:37:49'!
FAILURE!
!AccountSummaryTest methodsFor: 'as yet unclassified' stamp: 'EMI 11/12/2020 21:38:32' prior: 50908807!
test08AccountSummaryOfPortfolioWithADepositOnlyShowsBalance
	| accountSummary portfolio account expectedResult |
	portfolio _ Portfolio new.
	account _ ReceptiveAccount new.
	accountSummary _ AccountSummary of: portfolio.
	Deposit register: 10 on: account.
	portfolio add: account.
	 
	expectedResult _ OrderedCollection with: 'Dep�sito por 10.' with: 'Balance = 10.'.
	
	self deny: accountSummary report isEmpty.
	self assert: accountSummary report equals: expectedResult.! !

!testRun: #AccountSummaryTest #test01AccountSummaryOfEmptyAccountOnlyShowsBalance stamp: 'EMI 11/12/2020 21:38:35'!
PASSED!

!testRun: #AccountSummaryTest #test02AccountSummaryOfAccountWithADepositShowDepositInfo stamp: 'EMI 11/12/2020 21:38:35'!
PASSED!

!testRun: #AccountSummaryTest #test03AccountSummaryOfAccountWithAWithdrawShowWithdrawInfo stamp: 'EMI 11/12/2020 21:38:35'!
PASSED!

!testRun: #AccountSummaryTest #test04AccountSummaryOfAccountWithAExtractionTransferShowExtractionTransferInfo stamp: 'EMI 11/12/2020 21:38:35'!
PASSED!

!testRun: #AccountSummaryTest #test05AccountSummaryOfAccountWithADepositTransferShowDepositTransferInfo stamp: 'EMI 11/12/2020 21:38:35'!
PASSED!

!testRun: #AccountSummaryTest #test06AccountSummaryOfAccountWithOneOfEachTransactionShowsCorrectInfo stamp: 'EMI 11/12/2020 21:38:35'!
PASSED!

!testRun: #AccountSummaryTest #test07AccountSummaryOfEmptyPortfolioOnlyShowsBalance stamp: 'EMI 11/12/2020 21:38:35'!
PASSED!

!testRun: #AccountSummaryTest #test08AccountSummaryOfPortfolioWithADepositOnlyShowsBalance stamp: 'EMI 11/12/2020 21:38:35'!
PASSED!

----SNAPSHOT----(12 November 2020 21:38:38) CuisUniversity-4383.image priorSource: 18463067!
!AccountSummaryTest methodsFor: 'as yet unclassified' stamp: 'EMI 11/12/2020 21:39:10'!
test09AccountSummaryOfPortfolioWithAWithdrawOnlyShowsBalance
	| accountSummary portfolio account expectedResult |
	portfolio _ Portfolio new.
	account _ ReceptiveAccount new.
	accountSummary _ AccountSummary of: portfolio.
	Deposit register: 10 on: account.
	portfolio add: account.
	 
	expectedResult _ OrderedCollection with: 'Dep�sito por 10.' with: 'Balance = 10.'.
	
	self deny: accountSummary report isEmpty.
	self assert: accountSummary report equals: expectedResult.! !
!AccountSummaryTest methodsFor: 'as yet unclassified' stamp: 'EMI 11/12/2020 21:39:34' prior: 50908956!
test09AccountSummaryOfPortfolioWithAWithdrawOnlyShowsBalance
	| accountSummary portfolio account expectedResult |
	portfolio _ Portfolio new.
	account _ ReceptiveAccount new.
	accountSummary _ AccountSummary of: portfolio.
	Withdraw register: 10 on: account.
	portfolio add: account.
	 
	expectedResult _ OrderedCollection with: 'Extracci�n por 10.' with: 'Balance = -10.'.
	
	self deny: accountSummary report isEmpty.
	self assert: accountSummary report equals: expectedResult.! !

!testRun: #AccountSummaryTest #test09AccountSummaryOfPortfolioWithAWithdrawOnlyShowsBalance stamp: 'EMI 11/12/2020 21:39:40'!
PASSED!

!testRun: #AccountSummaryTest #test01AccountSummaryOfEmptyAccountOnlyShowsBalance stamp: 'EMI 11/12/2020 21:39:40'!
PASSED!

!testRun: #AccountSummaryTest #test02AccountSummaryOfAccountWithADepositShowDepositInfo stamp: 'EMI 11/12/2020 21:39:40'!
PASSED!

!testRun: #AccountSummaryTest #test03AccountSummaryOfAccountWithAWithdrawShowWithdrawInfo stamp: 'EMI 11/12/2020 21:39:40'!
PASSED!

!testRun: #AccountSummaryTest #test04AccountSummaryOfAccountWithAExtractionTransferShowExtractionTransferInfo stamp: 'EMI 11/12/2020 21:39:40'!
PASSED!

!testRun: #AccountSummaryTest #test05AccountSummaryOfAccountWithADepositTransferShowDepositTransferInfo stamp: 'EMI 11/12/2020 21:39:40'!
PASSED!

!testRun: #AccountSummaryTest #test06AccountSummaryOfAccountWithOneOfEachTransactionShowsCorrectInfo stamp: 'EMI 11/12/2020 21:39:40'!
PASSED!

!testRun: #AccountSummaryTest #test07AccountSummaryOfEmptyPortfolioOnlyShowsBalance stamp: 'EMI 11/12/2020 21:39:40'!
PASSED!

!testRun: #AccountSummaryTest #test08AccountSummaryOfPortfolioWithADepositOnlyShowsBalance stamp: 'EMI 11/12/2020 21:39:40'!
PASSED!

!testRun: #AccountSummaryTest #test09AccountSummaryOfPortfolioWithAWithdrawOnlyShowsBalance stamp: 'EMI 11/12/2020 21:39:40'!
PASSED!
!AccountSummaryTest methodsFor: 'as yet unclassified' stamp: 'EMI 11/12/2020 21:40:08'!
test10AccountSummaryOfPortfolioWithADepositTransfer
	| accountSummary portfolio account expectedResult |
	portfolio _ Portfolio new.
	account _ ReceptiveAccount new.
	accountSummary _ AccountSummary of: portfolio.
	Withdraw register: 10 on: account.
	portfolio add: account.
	 
	expectedResult _ OrderedCollection with: 'Extracci�n por 10.' with: 'Balance = -10.'.
	
	self deny: accountSummary report isEmpty.
	self assert: accountSummary report equals: expectedResult.! !
!AccountSummaryTest methodsFor: 'as yet unclassified' stamp: 'EMI 11/12/2020 21:40:21'!
test09AccountSummaryOfPortfolioWithAWithdraw
	| accountSummary portfolio account expectedResult |
	portfolio _ Portfolio new.
	account _ ReceptiveAccount new.
	accountSummary _ AccountSummary of: portfolio.
	Withdraw register: 10 on: account.
	portfolio add: account.
	 
	expectedResult _ OrderedCollection with: 'Extracci�n por 10.' with: 'Balance = -10.'.
	
	self deny: accountSummary report isEmpty.
	self assert: accountSummary report equals: expectedResult.! !

!methodRemoval: AccountSummaryTest #test09AccountSummaryOfPortfolioWithAWithdrawOnlyShowsBalance stamp: 'EMI 11/12/2020 21:40:21'!
test09AccountSummaryOfPortfolioWithAWithdrawOnlyShowsBalance
	| accountSummary portfolio account expectedResult |
	portfolio _ Portfolio new.
	account _ ReceptiveAccount new.
	accountSummary _ AccountSummary of: portfolio.
	Withdraw register: 10 on: account.
	portfolio add: account.
	 
	expectedResult _ OrderedCollection with: 'Extracci�n por 10.' with: 'Balance = -10.'.
	
	self deny: accountSummary report isEmpty.
	self assert: accountSummary report equals: expectedResult.!
!AccountSummaryTest methodsFor: 'as yet unclassified' stamp: 'EMI 11/12/2020 21:40:31'!
test08AccountSummaryOfPortfolioWithADeposit
	| accountSummary portfolio account expectedResult |
	portfolio _ Portfolio new.
	account _ ReceptiveAccount new.
	accountSummary _ AccountSummary of: portfolio.
	Deposit register: 10 on: account.
	portfolio add: account.
	 
	expectedResult _ OrderedCollection with: 'Dep�sito por 10.' with: 'Balance = 10.'.
	
	self deny: accountSummary report isEmpty.
	self assert: accountSummary report equals: expectedResult.! !

!methodRemoval: AccountSummaryTest #test08AccountSummaryOfPortfolioWithADepositOnlyShowsBalance stamp: 'EMI 11/12/2020 21:40:31'!
test08AccountSummaryOfPortfolioWithADepositOnlyShowsBalance
	| accountSummary portfolio account expectedResult |
	portfolio _ Portfolio new.
	account _ ReceptiveAccount new.
	accountSummary _ AccountSummary of: portfolio.
	Deposit register: 10 on: account.
	portfolio add: account.
	 
	expectedResult _ OrderedCollection with: 'Dep�sito por 10.' with: 'Balance = 10.'.
	
	self deny: accountSummary report isEmpty.
	self assert: accountSummary report equals: expectedResult.!
!AccountSummaryTest methodsFor: 'as yet unclassified' stamp: 'EMI 11/12/2020 21:40:52' prior: 50909036!
test10AccountSummaryOfPortfolioWithADepositTransfer
	| accountSummary portfolio accountOrigin expectedResult |
	portfolio _ Portfolio new.
	accountOrigin _ ReceptiveAccount new.
	accountSummary _ AccountSummary of: portfolio.
	Withdraw register: 10 on: accountOrigin.
	portfolio add: accountOrigin.
	 
	expectedResult _ OrderedCollection with: 'Extracci�n por 10.' with: 'Balance = -10.'.
	
	self deny: accountSummary report isEmpty.
	self assert: accountSummary report equals: expectedResult.! !
!AccountSummaryTest methodsFor: 'as yet unclassified' stamp: 'EMI 11/12/2020 21:41:00' prior: 50909128!
test10AccountSummaryOfPortfolioWithADepositTransfer
	| accountSummary portfolio accountOrigin accountDestination expectedResult |
	portfolio _ Portfolio new.
	accountOrigin _ ReceptiveAccount new.
	accountSummary _ AccountSummary of: portfolio.
	Withdraw register: 10 on: accountOrigin.
	portfolio add: accountOrigin.
	 
	expectedResult _ OrderedCollection with: 'Extracci�n por 10.' with: 'Balance = -10.'.
	
	self deny: accountSummary report isEmpty.
	self assert: accountSummary report equals: expectedResult.! !
!AccountSummaryTest methodsFor: 'as yet unclassified' stamp: 'EMI 11/12/2020 21:41:10' prior: 50909147!
test10AccountSummaryOfPortfolioWithADepositTransfer
	| accountSummary portfolio accountOrigin accountDestination expectedResult |
	portfolio _ Portfolio new.
	accountOrigin _ ReceptiveAccount new.
	accountDestination _ ReceptiveAccount new.
	accountSummary _ AccountSummary of: portfolio.
	Withdraw register: 10 on: accountOrigin.
	portfolio add: accountOrigin.
	 
	expectedResult _ OrderedCollection with: 'Extracci�n por 10.' with: 'Balance = -10.'.
	
	self deny: accountSummary report isEmpty.
	self assert: accountSummary report equals: expectedResult.! !
!AccountSummaryTest methodsFor: 'as yet unclassified' stamp: 'EMI 11/12/2020 21:41:58' prior: 50909167!
test10AccountSummaryOfPortfolioWithADepositTransfer
	| accountSummary portfolio accountOrigin accountDestination expectedResult |
	portfolio _ Portfolio new.
	accountOrigin _ ReceptiveAccount new.
	accountDestination _ ReceptiveAccount new.
	accountSummary _ AccountSummary of: portfolio.
	
	portfolio add: accountOrigin.
	
	Transfer from: accountOrigin to: accountDestination amount: 10.
	 
	expectedResult _ OrderedCollection with: 'Extracci�n por 10.' with: 'Balance = -10.'.
	
	self deny: accountSummary report isEmpty.
	self assert: accountSummary report equals: expectedResult.! !
!AccountSummaryTest methodsFor: 'as yet unclassified' stamp: 'EMI 11/12/2020 21:42:18' prior: 50909188!
test10AccountSummaryOfPortfolioWithADepositTransfer
	| accountSummary portfolio accountOrigin accountDestination expectedResult |
	portfolio _ Portfolio new.
	accountOrigin _ ReceptiveAccount new.
	accountDestination _ ReceptiveAccount new.
	accountSummary _ AccountSummary of: portfolio.
	
	portfolio add: accountOrigin.
	
	Transfer from: accountOrigin to: accountDestination amount: 10.
	 
	expectedResult _ OrderedCollection with: 'Salida por transferencia de 10.' with: 'Balance = -10.'.
	
	self deny: accountSummary report isEmpty.
	self assert: accountSummary report equals: expectedResult.! !

!testRun: #AccountSummaryTest #test10AccountSummaryOfPortfolioWithADepositTransfer stamp: 'EMI 11/12/2020 21:42:29'!
PASSED!

!testRun: #AccountSummaryTest #test01AccountSummaryOfEmptyAccountOnlyShowsBalance stamp: 'EMI 11/12/2020 21:42:29'!
PASSED!

!testRun: #AccountSummaryTest #test02AccountSummaryOfAccountWithADepositShowDepositInfo stamp: 'EMI 11/12/2020 21:42:29'!
PASSED!

!testRun: #AccountSummaryTest #test03AccountSummaryOfAccountWithAWithdrawShowWithdrawInfo stamp: 'EMI 11/12/2020 21:42:29'!
PASSED!

!testRun: #AccountSummaryTest #test04AccountSummaryOfAccountWithAExtractionTransferShowExtractionTransferInfo stamp: 'EMI 11/12/2020 21:42:29'!
PASSED!

!testRun: #AccountSummaryTest #test05AccountSummaryOfAccountWithADepositTransferShowDepositTransferInfo stamp: 'EMI 11/12/2020 21:42:29'!
PASSED!

!testRun: #AccountSummaryTest #test06AccountSummaryOfAccountWithOneOfEachTransactionShowsCorrectInfo stamp: 'EMI 11/12/2020 21:42:29'!
PASSED!

!testRun: #AccountSummaryTest #test07AccountSummaryOfEmptyPortfolioOnlyShowsBalance stamp: 'EMI 11/12/2020 21:42:29'!
PASSED!

!testRun: #AccountSummaryTest #test08AccountSummaryOfPortfolioWithADeposit stamp: 'EMI 11/12/2020 21:42:29'!
PASSED!

!testRun: #AccountSummaryTest #test09AccountSummaryOfPortfolioWithAWithdraw stamp: 'EMI 11/12/2020 21:42:29'!
PASSED!

!testRun: #AccountSummaryTest #test10AccountSummaryOfPortfolioWithADepositTransfer stamp: 'EMI 11/12/2020 21:42:29'!
PASSED!
!AccountSummaryTest methodsFor: 'as yet unclassified' stamp: 'EMI 11/12/2020 21:42:46'!
test11AccountSummaryOfPortfolioWithAExtractionTransfer
	| accountSummary portfolio accountOrigin accountDestination expectedResult |
	portfolio _ Portfolio new.
	accountOrigin _ ReceptiveAccount new.
	accountDestination _ ReceptiveAccount new.
	accountSummary _ AccountSummary of: portfolio.
	
	portfolio add: accountOrigin.
	
	Transfer from: accountOrigin to: accountDestination amount: 10.
	 
	expectedResult _ OrderedCollection with: 'Salida por transferencia de 10.' with: 'Balance = -10.'.
	
	self deny: accountSummary report isEmpty.
	self assert: accountSummary report equals: expectedResult.! !
!AccountSummaryTest methodsFor: 'as yet unclassified' stamp: 'EMI 11/12/2020 21:43:03' prior: 50909277!
test11AccountSummaryOfPortfolioWithAExtractionTransfer
	| accountSummary portfolio accountOrigin accountDestination expectedResult |
	portfolio _ Portfolio new.
	accountOrigin _ ReceptiveAccount new.
	accountDestination _ ReceptiveAccount new.
	accountSummary _ AccountSummary of: portfolio.
	
	portfolio add: accountDestination.
	
	Transfer from: accountOrigin to: accountDestination amount: 10.
	 
	expectedResult _ OrderedCollection with: 'Entrada por transferencia de 10.' with: 'Balance = -10.'.
	
	self deny: accountSummary report isEmpty.
	self assert: accountSummary report equals: expectedResult.! !
!AccountSummaryTest methodsFor: 'as yet unclassified' stamp: 'EMI 11/12/2020 21:43:06' prior: 50909300!
test11AccountSummaryOfPortfolioWithAExtractionTransfer
	| accountSummary portfolio accountOrigin accountDestination expectedResult |
	portfolio _ Portfolio new.
	accountOrigin _ ReceptiveAccount new.
	accountDestination _ ReceptiveAccount new.
	accountSummary _ AccountSummary of: portfolio.
	
	portfolio add: accountDestination.
	
	Transfer from: accountOrigin to: accountDestination amount: 10.
	 
	expectedResult _ OrderedCollection with: 'Entrada por transferencia de 10.' with: 'Balance = 10.'.
	
	self deny: accountSummary report isEmpty.
	self assert: accountSummary report equals: expectedResult.! !

!testRun: #AccountSummaryTest #test11AccountSummaryOfPortfolioWithAExtractionTransfer stamp: 'EMI 11/12/2020 21:43:39'!
PASSED!

!testRun: #AccountSummaryTest #test01AccountSummaryOfEmptyAccountOnlyShowsBalance stamp: 'EMI 11/12/2020 21:43:39'!
PASSED!

!testRun: #AccountSummaryTest #test02AccountSummaryOfAccountWithADepositShowDepositInfo stamp: 'EMI 11/12/2020 21:43:39'!
PASSED!

!testRun: #AccountSummaryTest #test03AccountSummaryOfAccountWithAWithdrawShowWithdrawInfo stamp: 'EMI 11/12/2020 21:43:39'!
PASSED!

!testRun: #AccountSummaryTest #test04AccountSummaryOfAccountWithAExtractionTransferShowExtractionTransferInfo stamp: 'EMI 11/12/2020 21:43:39'!
PASSED!

!testRun: #AccountSummaryTest #test05AccountSummaryOfAccountWithADepositTransferShowDepositTransferInfo stamp: 'EMI 11/12/2020 21:43:39'!
PASSED!

!testRun: #AccountSummaryTest #test06AccountSummaryOfAccountWithOneOfEachTransactionShowsCorrectInfo stamp: 'EMI 11/12/2020 21:43:39'!
PASSED!

!testRun: #AccountSummaryTest #test07AccountSummaryOfEmptyPortfolioOnlyShowsBalance stamp: 'EMI 11/12/2020 21:43:39'!
PASSED!

!testRun: #AccountSummaryTest #test08AccountSummaryOfPortfolioWithADeposit stamp: 'EMI 11/12/2020 21:43:40'!
PASSED!

!testRun: #AccountSummaryTest #test09AccountSummaryOfPortfolioWithAWithdraw stamp: 'EMI 11/12/2020 21:43:40'!
PASSED!

!testRun: #AccountSummaryTest #test10AccountSummaryOfPortfolioWithADepositTransfer stamp: 'EMI 11/12/2020 21:43:40'!
PASSED!

!testRun: #AccountSummaryTest #test11AccountSummaryOfPortfolioWithAExtractionTransfer stamp: 'EMI 11/12/2020 21:43:40'!
PASSED!
!AccountSummary methodsFor: 'as yet unclassified' stamp: 'EMI 11/12/2020 21:15:43' prior: 50908708!
report
	| result |
	result _ account reportTo: self.
	result add: 'Balance = ', account balance asString, '.'.
	^result! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'EMI 11/12/2020 21:49:15' prior: 50908850 overrides: 50908371!
reportTo: aReport
	| result |
	result _ OrderedCollection new.
	accounts do:[:anAccount |result addAll: (anAccount reportTo: aReport).].
	^result.
	! !
!ReceptiveAccount methodsFor: 'as yet unclassified' stamp: 'EMI 11/12/2020 21:49:33' prior: 50908698 overrides: 50908371!
reportTo: aReport
	| result |
	result _ OrderedCollection new.
	transactions do:[:aTransaction | result add: (aTransaction reportTo: aReport)].
	^ result.! !

!testRun: #AccountSummaryTest #test01AccountSummaryOfEmptyAccountOnlyShowsBalance stamp: 'EMI 11/12/2020 21:49:42'!
PASSED!

!testRun: #AccountSummaryTest #test02AccountSummaryOfAccountWithADepositShowDepositInfo stamp: 'EMI 11/12/2020 21:49:42'!
PASSED!

!testRun: #AccountSummaryTest #test03AccountSummaryOfAccountWithAWithdrawShowWithdrawInfo stamp: 'EMI 11/12/2020 21:49:42'!
PASSED!

!testRun: #AccountSummaryTest #test04AccountSummaryOfAccountWithAExtractionTransferShowExtractionTransferInfo stamp: 'EMI 11/12/2020 21:49:42'!
PASSED!

!testRun: #AccountSummaryTest #test05AccountSummaryOfAccountWithADepositTransferShowDepositTransferInfo stamp: 'EMI 11/12/2020 21:49:42'!
PASSED!

!testRun: #AccountSummaryTest #test06AccountSummaryOfAccountWithOneOfEachTransactionShowsCorrectInfo stamp: 'EMI 11/12/2020 21:49:42'!
PASSED!

!testRun: #AccountSummaryTest #test07AccountSummaryOfEmptyPortfolioOnlyShowsBalance stamp: 'EMI 11/12/2020 21:49:42'!
PASSED!

!testRun: #AccountSummaryTest #test08AccountSummaryOfPortfolioWithADeposit stamp: 'EMI 11/12/2020 21:49:42'!
PASSED!

!testRun: #AccountSummaryTest #test09AccountSummaryOfPortfolioWithAWithdraw stamp: 'EMI 11/12/2020 21:49:42'!
PASSED!

!testRun: #AccountSummaryTest #test10AccountSummaryOfPortfolioWithADepositTransfer stamp: 'EMI 11/12/2020 21:49:42'!
PASSED!

!testRun: #AccountSummaryTest #test11AccountSummaryOfPortfolioWithAExtractionTransfer stamp: 'EMI 11/12/2020 21:49:42'!
PASSED!

----SNAPSHOT----(12 November 2020 21:50:23) CuisUniversity-4383.image priorSource: 18473666!

Object subclass: #NetTranfersReport
	instanceVariableNames: 'account'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio2-Ejercicio'!

!classDefinition: #NetTranfersReport category: 'Portfolio2-Ejercicio' stamp: 'EMI 11/12/2020 21:50:49'!
Object subclass: #NetTranfersReport
	instanceVariableNames: 'account'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio2-Ejercicio'!

Object subclass: #Report
	instanceVariableNames: 'account'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio2-Ejercicio'!

!classDefinition: #Report category: 'Portfolio2-Ejercicio' stamp: 'EMI 11/12/2020 21:51:27'!
Object subclass: #Report
	instanceVariableNames: 'account'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio2-Ejercicio'!

Report subclass: #AccountSummary
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio2-Ejercicio'!

!classDefinition: #AccountSummary category: 'Portfolio2-Ejercicio' stamp: 'EMI 11/12/2020 21:51:41'!
Report subclass: #AccountSummary
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio2-Ejercicio'!

Report subclass: #NetTranfersReport
	instanceVariableNames: 'account'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio2-Ejercicio'!

Report subclass: #NetTranfersReport
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio2-Ejercicio'!

!classDefinition: #NetTranfersReport category: 'Portfolio2-Ejercicio' stamp: 'EMI 11/12/2020 21:51:59'!
Report subclass: #NetTranfersReport
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio2-Ejercicio'!

!testRun: #AccountSummaryTest #test01AccountSummaryOfEmptyAccountOnlyShowsBalance stamp: 'EMI 11/12/2020 21:52:09'!
PASSED!

!testRun: #AccountSummaryTest #test02AccountSummaryOfAccountWithADepositShowDepositInfo stamp: 'EMI 11/12/2020 21:52:09'!
PASSED!

!testRun: #AccountSummaryTest #test03AccountSummaryOfAccountWithAWithdrawShowWithdrawInfo stamp: 'EMI 11/12/2020 21:52:09'!
PASSED!

!testRun: #AccountSummaryTest #test04AccountSummaryOfAccountWithAExtractionTransferShowExtractionTransferInfo stamp: 'EMI 11/12/2020 21:52:09'!
PASSED!

!testRun: #AccountSummaryTest #test05AccountSummaryOfAccountWithADepositTransferShowDepositTransferInfo stamp: 'EMI 11/12/2020 21:52:09'!
PASSED!

!testRun: #AccountSummaryTest #test06AccountSummaryOfAccountWithOneOfEachTransactionShowsCorrectInfo stamp: 'EMI 11/12/2020 21:52:09'!
PASSED!

!testRun: #AccountSummaryTest #test07AccountSummaryOfEmptyPortfolioOnlyShowsBalance stamp: 'EMI 11/12/2020 21:52:09'!
PASSED!

!testRun: #AccountSummaryTest #test08AccountSummaryOfPortfolioWithADeposit stamp: 'EMI 11/12/2020 21:52:09'!
PASSED!

!testRun: #AccountSummaryTest #test09AccountSummaryOfPortfolioWithAWithdraw stamp: 'EMI 11/12/2020 21:52:09'!
PASSED!

!testRun: #AccountSummaryTest #test10AccountSummaryOfPortfolioWithADepositTransfer stamp: 'EMI 11/12/2020 21:52:09'!
PASSED!

!testRun: #AccountSummaryTest #test11AccountSummaryOfPortfolioWithAExtractionTransfer stamp: 'EMI 11/12/2020 21:52:09'!
PASSED!
!Report methodsFor: 'nil' stamp: 'EMI 11/12/2020 21:52:41'!
report
	^self subclassResponsibility.! !
!Report methodsFor: 'as yet unclassified' stamp: 'EMI 11/12/2020 21:53:04'!
reportDespositTransaction: aDepositTransaction
	^self subclassResponsibility.! !
!Report methodsFor: 'as yet unclassified' stamp: 'EMI 11/12/2020 21:53:17'!
reportWithdrawTransaction: aWithdrawTransaction
	^self subclassResponsibility.! !
!Report methodsFor: 'as yet unclassified' stamp: 'EMI 11/12/2020 21:54:07'!
reportDepositTransferTransaction: aDepositTransferTransaction
	^self subclassResponsibility.! !
!Report methodsFor: 'as yet unclassified' stamp: 'EMI 11/12/2020 21:54:20'!
reportExtractionTransferTransaction: aExtractionTransferTransaction
	^self subclassResponsibility.! !
!AccountSummary class methodsFor: 'instance creation' stamp: 'EMI 11/12/2020 21:54:40' prior: 50907342!
of: aAccount 
	^self new initializeOf: aAccount ! !
!Report class methodsFor: 'nil' stamp: 'EMI 11/12/2020 21:55:36'!
of: aAccount 
	^self new initializeOf: aAccount ! !

!methodRemoval: AccountSummary class #of: stamp: 'EMI 11/12/2020 21:55:49'!
of: aAccount 
	^self new initializeOf: aAccount !

----SNAPSHOT----(12 November 2020 21:55:56) CuisUniversity-4383.image priorSource: 18490057!

!testRun: #AccountSummaryTest #test01AccountSummaryOfEmptyAccountOnlyShowsBalance stamp: 'EMI 11/12/2020 21:56:07'!
PASSED!

!testRun: #AccountSummaryTest #test02AccountSummaryOfAccountWithADepositShowDepositInfo stamp: 'EMI 11/12/2020 21:56:07'!
PASSED!

!testRun: #AccountSummaryTest #test03AccountSummaryOfAccountWithAWithdrawShowWithdrawInfo stamp: 'EMI 11/12/2020 21:56:07'!
PASSED!

!testRun: #AccountSummaryTest #test04AccountSummaryOfAccountWithAExtractionTransferShowExtractionTransferInfo stamp: 'EMI 11/12/2020 21:56:07'!
PASSED!

!testRun: #AccountSummaryTest #test05AccountSummaryOfAccountWithADepositTransferShowDepositTransferInfo stamp: 'EMI 11/12/2020 21:56:07'!
PASSED!

!testRun: #AccountSummaryTest #test06AccountSummaryOfAccountWithOneOfEachTransactionShowsCorrectInfo stamp: 'EMI 11/12/2020 21:56:07'!
PASSED!

!testRun: #AccountSummaryTest #test07AccountSummaryOfEmptyPortfolioOnlyShowsBalance stamp: 'EMI 11/12/2020 21:56:07'!
PASSED!

!testRun: #AccountSummaryTest #test08AccountSummaryOfPortfolioWithADeposit stamp: 'EMI 11/12/2020 21:56:07'!
PASSED!

!testRun: #AccountSummaryTest #test09AccountSummaryOfPortfolioWithAWithdraw stamp: 'EMI 11/12/2020 21:56:07'!
PASSED!

!testRun: #AccountSummaryTest #test10AccountSummaryOfPortfolioWithADepositTransfer stamp: 'EMI 11/12/2020 21:56:07'!
PASSED!

!testRun: #AccountSummaryTest #test11AccountSummaryOfPortfolioWithAExtractionTransfer stamp: 'EMI 11/12/2020 21:56:07'!
PASSED!

----SNAPSHOT----(12 November 2020 21:56:35) CuisUniversity-4383.image priorSource: 18494578!

----SNAPSHOT----(12 November 2020 21:57:06) CuisUniversity-4383.image priorSource: 18496124!

----SNAPSHOT----(12 November 2020 21:59:00) CuisUniversity-4383.image priorSource: 18496218!

----QUIT----(12 November 2020 21:59:48) CuisUniversity-4383.image priorSource: 18496312!

----STARTUP---- (13 November 2020 19:36:41) as /home/doraserver/CuisUniversity/CuisUniversity-4383.image!


TestCase subclass: #NetTransfersReportTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio2-Ejercicio'!

!classDefinition: #NetTransfersReportTest category: 'Portfolio2-Ejercicio' stamp: 'EMI 11/13/2020 19:48:31'!
TestCase subclass: #NetTransfersReportTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio2-Ejercicio'!

!classRenamed: #NetTranfersReport as: #NetTransfersReport stamp: 'EMI 11/13/2020 19:48:42'!
Smalltalk renameClassNamed: #NetTranfersReport as: #NetTransfersReport!
!NetTransfersReportTest methodsFor: 'nil' stamp: 'EMI 11/13/2020 19:51:32'!
test01
	| account report |
	account _ ReceptiveAccount new.
	report  _ NetTransfersReport of: account.

	self assert: report report equals: 0.! !
!NetTransfersReportTest methodsFor: 'as yet unclassified' stamp: 'EMI 11/13/2020 19:52:06' prior: 50909688!
test01
	| account netTransfer |
	account _ ReceptiveAccount new.
	netTransfer  _ NetTransfersReport of: account.

	self assert: netTransfer report equals: 0.! !

!testRun: #NetTransfersReportTest #test01 stamp: 'EMI 11/13/2020 19:52:40'!
ERROR!

!testRun: #NetTransfersReportTest #test01 stamp: 'EMI 11/13/2020 19:52:40'!
ERROR!
!NetTransfersReport methodsFor: 'initialization' stamp: 'EMI 11/13/2020 19:52:57'!
initializeOf: aAccount 
	self shouldBeImplemented.
	account := aAccount.! !
!NetTransfersReport methodsFor: 'initialization' stamp: 'EMI 11/13/2020 19:53:03' prior: 50909709!
initializeOf: aAccount 
	account := aAccount.! !

!testRun: #NetTransfersReportTest #test01 stamp: 'EMI 11/13/2020 19:53:04'!
ERROR!
!NetTransfersReport methodsFor: 'reporting' stamp: 'EMI 11/13/2020 19:53:21' overrides: 50909567!
report
	self shouldBeImplemented.! !
!NetTransfersReport methodsFor: 'reporting' stamp: 'EMI 11/13/2020 19:53:35' prior: 50909723 overrides: 50909567!
report
	^account reportTo: self.! !
!NetTransfersReport methodsFor: 'reporting' stamp: 'EMI 11/13/2020 19:53:48' prior: 50909728 overrides: 50909567!
report
	^0.! !

!testRun: #NetTransfersReportTest #test01 stamp: 'EMI 11/13/2020 19:53:50'!
PASSED!

!testRun: #NetTransfersReportTest #test01 stamp: 'EMI 11/13/2020 19:53:52'!
PASSED!

!testRun: #NetTransfersReportTest #test01 stamp: 'EMI 11/13/2020 19:53:52'!
PASSED!
!NetTransfersReportTest methodsFor: 'as yet unclassified' stamp: 'EMI 11/13/2020 19:54:43'!
test01NetTransferReportOfEmotyAccountReturnsZero
	| account netTransfer |
	account _ ReceptiveAccount new.
	netTransfer  _ NetTransfersReport of: account.

	self assert: netTransfer report equals: 0.! !

!methodRemoval: NetTransfersReportTest #test01 stamp: 'EMI 11/13/2020 19:54:43'!
test01
	| account netTransfer |
	account _ ReceptiveAccount new.
	netTransfer  _ NetTransfersReport of: account.

	self assert: netTransfer report equals: 0.!
!NetTransfersReportTest methodsFor: 'as yet unclassified' stamp: 'EMI 11/13/2020 19:54:55'!
test01NetTransferReportOfEmptyAccountReturnsZero
	| account netTransfer |
	account _ ReceptiveAccount new.
	netTransfer  _ NetTransfersReport of: account.

	self assert: netTransfer report equals: 0.! !

!methodRemoval: NetTransfersReportTest #test01NetTransferReportOfEmotyAccountReturnsZero stamp: 'EMI 11/13/2020 19:54:55'!
test01NetTransferReportOfEmotyAccountReturnsZero
	| account netTransfer |
	account _ ReceptiveAccount new.
	netTransfer  _ NetTransfersReport of: account.

	self assert: netTransfer report equals: 0.!
!NetTransfersReportTest methodsFor: 'as yet unclassified' stamp: 'EMI 11/13/2020 19:55:42'!
test02NetTransferReportOfAccountWithADepositReturnsZero
	| account netTransfer |
	account _ ReceptiveAccount new.
	netTransfer  _ NetTransfersReport of: account.

	self assert: netTransfer report equals: 0.! !
!NetTransfersReportTest methodsFor: 'as yet unclassified' stamp: 'EMI 11/13/2020 19:55:53' prior: 50909782!
test02NetTransferReportOfAccountWithADepositReturnsZero
	| account netTransfer |
	account _ ReceptiveAccount new.
	netTransfer  _ NetTransfersReport of: account.
	Deposit register: 10 on: account.

	self assert: netTransfer report equals: 0.! !

!testRun: #NetTransfersReportTest #test02NetTransferReportOfAccountWithADepositReturnsZero stamp: 'EMI 11/13/2020 19:55:56'!
PASSED!

!testRun: #NetTransfersReportTest #test01NetTransferReportOfEmptyAccountReturnsZero stamp: 'EMI 11/13/2020 19:55:56'!
PASSED!

!testRun: #NetTransfersReportTest #test02NetTransferReportOfAccountWithADepositReturnsZero stamp: 'EMI 11/13/2020 19:55:56'!
PASSED!
!NetTransfersReportTest methodsFor: 'as yet unclassified' stamp: 'EMI 11/13/2020 19:57:18'!
test04NetTransferReportOfAccountWithADepositReturnsZero
	| account netTransfer |
	account _ ReceptiveAccount new.
	netTransfer  _ NetTransfersReport of: account.
	Deposit register: 10 on: account.

	self assert: netTransfer report equals: 0.! !

!methodRemoval: NetTransfersReportTest #test02NetTransferReportOfAccountWithADepositReturnsZero stamp: 'EMI 11/13/2020 19:57:19'!
test02NetTransferReportOfAccountWithADepositReturnsZero
	| account netTransfer |
	account _ ReceptiveAccount new.
	netTransfer  _ NetTransfersReport of: account.
	Deposit register: 10 on: account.

	self assert: netTransfer report equals: 0.!
!NetTransfersReportTest methodsFor: 'as yet unclassified' stamp: 'EMI 11/13/2020 19:58:04'!
test02NetTransferReportOfAccountWithADepositTransferReturnsCorrectly
	| accountOrigin accountDestination netTransfer |
	accountOrigin _ ReceptiveAccount new.
	netTransfer  _ NetTransfersReport of: accountOrigin.
	Deposit register: 10 on: accountOrigin.

	self assert: netTransfer report equals: 0.! !
!NetTransfersReportTest methodsFor: 'as yet unclassified' stamp: 'EMI 11/13/2020 19:59:23' prior: 50909838!
test02NetTransferReportOfAccountWithADepositTransferReturnsCorrectly
	| accountOrigin accountDestination netTransfer |
	accountOrigin _ ReceptiveAccount new.
	accountDestination _ ReceptiveAccount new.
	netTransfer  _ NetTransfersReport of: accountDestination.
	Transfer from: accountOrigin to: accountDestination amount: 10.

	self assert: netTransfer report equals: 0.! !
!NetTransfersReportTest methodsFor: 'as yet unclassified' stamp: 'EMI 11/13/2020 19:59:29' prior: 50909851!
test02NetTransferReportOfAccountWithADepositTransferReturnsCorrectly
	| accountOrigin accountDestination netTransfer |
	accountOrigin _ ReceptiveAccount new.
	accountDestination _ ReceptiveAccount new.
	netTransfer  _ NetTransfersReport of: accountDestination.
	Transfer from: accountOrigin to: accountDestination amount: 10.

	self assert: netTransfer report equals: 10.! !

!testRun: #NetTransfersReportTest #test02NetTransferReportOfAccountWithADepositTransferReturnsCorrectly stamp: 'EMI 11/13/2020 19:59:39'!
FAILURE!
!NetTransfersReport methodsFor: 'reporting' stamp: 'EMI 11/13/2020 20:02:06' prior: 50909733 overrides: 50909567!
report
	^account transactions sum: [:aTransaction |
		(aTransaction isKindOf: DepositTransfer) ifTrue: [aTransaction value].
		].! !

!testRun: #NetTransfersReportTest #test02NetTransferReportOfAccountWithADepositTransferReturnsCorrectly stamp: 'EMI 11/13/2020 20:02:34'!
PASSED!

!testRun: #NetTransfersReportTest #test04NetTransferReportOfAccountWithADepositReturnsZero stamp: 'EMI 11/13/2020 20:02:38'!
FAILURE!

!testRun: #NetTransfersReportTest #test04NetTransferReportOfAccountWithADepositReturnsZero stamp: 'EMI 11/13/2020 20:02:38'!
FAILURE!

!testRun: #NetTransfersReportTest #test01NetTransferReportOfEmptyAccountReturnsZero stamp: 'EMI 11/13/2020 20:02:48'!
ERROR!

!testRun: #NetTransfersReportTest #test01NetTransferReportOfEmptyAccountReturnsZero stamp: 'EMI 11/13/2020 20:02:48'!
ERROR!
!NetTransfersReport methodsFor: 'reporting' stamp: 'EMI 11/13/2020 20:03:44' prior: 50909887 overrides: 50909567!
report
	account isEmpty ifTrue:[^0].
	^account transactions sum: [:aTransaction |
		(aTransaction isKindOf: Deposit) ifTrue: [0].
		(aTransaction isKindOf: DepositTransfer) ifTrue: [aTransaction value].
		].! !

!testRun: #NetTransfersReportTest #test01NetTransferReportOfEmptyAccountReturnsZero stamp: 'EMI 11/13/2020 20:03:50'!
ERROR!

!testRun: #NetTransfersReportTest #test02NetTransferReportOfAccountWithADepositTransferReturnsCorrectly stamp: 'EMI 11/13/2020 20:03:50'!
ERROR!

!testRun: #NetTransfersReportTest #test04NetTransferReportOfAccountWithADepositReturnsZero stamp: 'EMI 11/13/2020 20:03:50'!
ERROR!

!testRun: #NetTransfersReportTest #test01NetTransferReportOfEmptyAccountReturnsZero stamp: 'EMI 11/13/2020 20:03:53'!
ERROR!
!NetTransfersReport methodsFor: 'reporting' stamp: 'EMI 11/13/2020 20:04:20' prior: 50909916 overrides: 50909567!
report
	account transactions isEmpty ifTrue:[^0].
	^account transactions sum: [:aTransaction |
		(aTransaction isKindOf: Deposit) ifTrue: [0].
		(aTransaction isKindOf: DepositTransfer) ifTrue: [aTransaction value].
		].! !

!testRun: #NetTransfersReportTest #test01NetTransferReportOfEmptyAccountReturnsZero stamp: 'EMI 11/13/2020 20:04:24'!
PASSED!

!testRun: #NetTransfersReportTest #test02NetTransferReportOfAccountWithADepositTransferReturnsCorrectly stamp: 'EMI 11/13/2020 20:04:24'!
PASSED!

!testRun: #NetTransfersReportTest #test04NetTransferReportOfAccountWithADepositReturnsZero stamp: 'EMI 11/13/2020 20:04:24'!
FAILURE!

!testRun: #NetTransfersReportTest #test04NetTransferReportOfAccountWithADepositReturnsZero stamp: 'EMI 11/13/2020 20:04:24'!
FAILURE!

!testRun: #NetTransfersReportTest #test01NetTransferReportOfEmptyAccountReturnsZero stamp: 'EMI 11/13/2020 20:05:16'!
PASSED!

!testRun: #NetTransfersReportTest #test02NetTransferReportOfAccountWithADepositTransferReturnsCorrectly stamp: 'EMI 11/13/2020 20:05:16'!
PASSED!

!testRun: #NetTransfersReportTest #test04NetTransferReportOfAccountWithADepositReturnsZero stamp: 'EMI 11/13/2020 20:05:16'!
FAILURE!

!testRun: #NetTransfersReportTest #test04NetTransferReportOfAccountWithADepositReturnsZero stamp: 'EMI 11/13/2020 20:05:16'!
FAILURE!

!testRun: #NetTransfersReportTest #test01NetTransferReportOfEmptyAccountReturnsZero stamp: 'EMI 11/13/2020 20:05:47'!
PASSED!

!testRun: #NetTransfersReportTest #test02NetTransferReportOfAccountWithADepositTransferReturnsCorrectly stamp: 'EMI 11/13/2020 20:05:47'!
PASSED!

!testRun: #NetTransfersReportTest #test04NetTransferReportOfAccountWithADepositReturnsZero stamp: 'EMI 11/13/2020 20:05:47'!
FAILURE!

!testRun: #NetTransfersReportTest #test04NetTransferReportOfAccountWithADepositReturnsZero stamp: 'EMI 11/13/2020 20:05:47'!
FAILURE!

a _ OrderedCollection with:1 with: 2 with: 3.!

a sum!

a sum: [:a | a].!

a sum: [:a | a+1].!
!NetTransfersReport methodsFor: 'reporting' stamp: 'EMI 11/13/2020 20:09:43' prior: 50909943 overrides: 50909567!
report
	| res |
	account transactions isEmpty ifTrue:[^0].
	res _ account transactions sum: [:aTransaction |
		(aTransaction isKindOf: Deposit) ifTrue: [0].
		(aTransaction isKindOf: DepositTransfer) ifTrue: [aTransaction value].
		].
	^res.! !

!testRun: #NetTransfersReportTest #test01NetTransferReportOfEmptyAccountReturnsZero stamp: 'EMI 11/13/2020 20:09:47'!
PASSED!

!testRun: #NetTransfersReportTest #test02NetTransferReportOfAccountWithADepositTransferReturnsCorrectly stamp: 'EMI 11/13/2020 20:09:47'!
PASSED!

!testRun: #NetTransfersReportTest #test04NetTransferReportOfAccountWithADepositReturnsZero stamp: 'EMI 11/13/2020 20:09:47'!
FAILURE!

!testRun: #NetTransfersReportTest #test04NetTransferReportOfAccountWithADepositReturnsZero stamp: 'EMI 11/13/2020 20:09:47'!
FAILURE!

!testRun: #NetTransfersReportTest #test01NetTransferReportOfEmptyAccountReturnsZero stamp: 'EMI 11/13/2020 20:12:38'!
PASSED!

!testRun: #NetTransfersReportTest #test02NetTransferReportOfAccountWithADepositTransferReturnsCorrectly stamp: 'EMI 11/13/2020 20:12:38'!
PASSED!

!testRun: #NetTransfersReportTest #test04NetTransferReportOfAccountWithADepositReturnsZero stamp: 'EMI 11/13/2020 20:12:38'!
FAILURE!

!testRun: #NetTransfersReportTest #test04NetTransferReportOfAccountWithADepositReturnsZero stamp: 'EMI 11/13/2020 20:12:38'!
FAILURE!
!NetTransfersReport methodsFor: 'reporting' stamp: 'EMI 11/13/2020 20:15:32' prior: 50910008 overrides: 50909567!
report
	| res |
	account transactions isEmpty ifTrue:[^0].
	res _ account transactions sum: [:aTransaction |
		(aTransaction isKindOf: Deposit) ifTrue: [aTransaction halt.0.].
		(aTransaction isKindOf: DepositTransfer) ifTrue: [aTransaction value].
		].
	^res.! !

!testRun: #NetTransfersReportTest #test01NetTransferReportOfEmptyAccountReturnsZero stamp: 'EMI 11/13/2020 20:15:39'!
PASSED!

!testRun: #NetTransfersReportTest #test02NetTransferReportOfAccountWithADepositTransferReturnsCorrectly stamp: 'EMI 11/13/2020 20:15:39'!
PASSED!
!NetTransfersReport methodsFor: 'reporting' stamp: 'EMI 11/13/2020 20:16:19' prior: 50910054 overrides: 50909567!
report
	| res |
	account transactions isEmpty ifTrue:[^0].
	res _ account transactions sum: [:aTransaction |
		(aTransaction isKindOf: Deposit) ifTrue: [^0.].
		(aTransaction isKindOf: DepositTransfer) ifTrue: [aTransaction value].
		].
	^res.! !

!testRun: #NetTransfersReportTest #test01NetTransferReportOfEmptyAccountReturnsZero stamp: 'EMI 11/13/2020 20:16:29'!
PASSED!

!testRun: #NetTransfersReportTest #test02NetTransferReportOfAccountWithADepositTransferReturnsCorrectly stamp: 'EMI 11/13/2020 20:16:29'!
PASSED!

!testRun: #NetTransfersReportTest #test04NetTransferReportOfAccountWithADepositReturnsZero stamp: 'EMI 11/13/2020 20:16:29'!
PASSED!
!NetTransfersReportTest methodsFor: 'as yet unclassified' stamp: 'EMI 11/13/2020 20:17:46' prior: 50909867!
test02NetTransferReportOfAccountWithADepositTransferReturnsCorrectly
	| accountOrigin accountDestination netTransfer |
	accountOrigin _ ReceptiveAccount new.
	accountDestination _ ReceptiveAccount new.
	netTransfer  _ NetTransfersReport of: accountDestination.
	Deposit register: accountDestination on: 10.
	Transfer from: accountOrigin to: accountDestination amount: 10.

	self assert: netTransfer report equals: 10.! !

!testRun: #NetTransfersReportTest #test02NetTransferReportOfAccountWithADepositTransferReturnsCorrectly stamp: 'EMI 11/13/2020 20:17:49'!
ERROR!
!NetTransfersReportTest methodsFor: 'as yet unclassified' stamp: 'EMI 11/13/2020 20:18:08' prior: 50910099!
test02NetTransferReportOfAccountWithADepositTransferReturnsCorrectly
	| accountOrigin accountDestination netTransfer |
	accountOrigin _ ReceptiveAccount new.
	accountDestination _ ReceptiveAccount new.
	netTransfer  _ NetTransfersReport of: accountDestination.
	Deposit register: 10 on: accountDestination .
	Transfer from: accountOrigin to: accountDestination amount: 10.

	self assert: netTransfer report equals: 10.! !

!testRun: #NetTransfersReportTest #test02NetTransferReportOfAccountWithADepositTransferReturnsCorrectly stamp: 'EMI 11/13/2020 20:18:10'!
FAILURE!
!NetTransfersReport methodsFor: 'reporting' stamp: 'EMI 11/13/2020 20:18:31' prior: 50910075 overrides: 50909567!
report
	| res |
	account transactions isEmpty ifTrue:[^0].
	res _ account transactions sum: [:aTransaction |
		(aTransaction isKindOf: Deposit) ifTrue: [0.].
		(aTransaction isKindOf: DepositTransfer) ifTrue: [aTransaction value].
		].
	^res.! !

!testRun: #NetTransfersReportTest #test01NetTransferReportOfEmptyAccountReturnsZero stamp: 'EMI 11/13/2020 20:18:36'!
PASSED!

!testRun: #NetTransfersReportTest #test02NetTransferReportOfAccountWithADepositTransferReturnsCorrectly stamp: 'EMI 11/13/2020 20:18:36'!
ERROR!

!testRun: #NetTransfersReportTest #test04NetTransferReportOfAccountWithADepositReturnsZero stamp: 'EMI 11/13/2020 20:18:36'!
FAILURE!

!testRun: #NetTransfersReportTest #test02NetTransferReportOfAccountWithADepositTransferReturnsCorrectly stamp: 'EMI 11/13/2020 20:18:39'!
ERROR!

!testRun: #NetTransfersReportTest #test01NetTransferReportOfEmptyAccountReturnsZero stamp: 'EMI 11/13/2020 20:19:42'!
PASSED!

!testRun: #NetTransfersReportTest #test02NetTransferReportOfAccountWithADepositTransferReturnsCorrectly stamp: 'EMI 11/13/2020 20:19:42'!
ERROR!

!testRun: #NetTransfersReportTest #test04NetTransferReportOfAccountWithADepositReturnsZero stamp: 'EMI 11/13/2020 20:19:42'!
FAILURE!

!testRun: #NetTransfersReportTest #test02NetTransferReportOfAccountWithADepositTransferReturnsCorrectly stamp: 'EMI 11/13/2020 20:19:44'!
ERROR!
!NetTransfersReport methodsFor: 'reporting' stamp: 'EMI 11/13/2020 20:22:35' prior: 50910143 overrides: 50909567!
report
	| res |
	account transactions isEmpty ifTrue:[^0].
	res _ account transactions inject: 0 into: [:aSum :aTransaction|
		(aTransaction isKindOf: Deposit) ifTrue: [0].
		(aTransaction isKindOf: DepositTransfer) ifTrue: [aTransaction value].
		].
	^res.! !
!NetTransfersReport methodsFor: 'reporting' stamp: 'EMI 11/13/2020 20:22:56' prior: 50910189 overrides: 50909567!
report
	| res |
	account transactions isEmpty ifTrue:[^0].
	res _ account transactions inject: 0 into: [:aSum :aTransaction|
		(aTransaction isKindOf: Deposit) ifTrue: [aSum].
		(aTransaction isKindOf: DepositTransfer) ifTrue: [aSum + aTransaction value].
		].
	^res.! !

!testRun: #NetTransfersReportTest #test01NetTransferReportOfEmptyAccountReturnsZero stamp: 'EMI 11/13/2020 20:23:00'!
PASSED!

!testRun: #NetTransfersReportTest #test02NetTransferReportOfAccountWithADepositTransferReturnsCorrectly stamp: 'EMI 11/13/2020 20:23:00'!
ERROR!

!testRun: #NetTransfersReportTest #test04NetTransferReportOfAccountWithADepositReturnsZero stamp: 'EMI 11/13/2020 20:23:00'!
FAILURE!

!testRun: #NetTransfersReportTest #test02NetTransferReportOfAccountWithADepositTransferReturnsCorrectly stamp: 'EMI 11/13/2020 20:23:02'!
ERROR!
!NetTransfersReport methodsFor: 'reporting' stamp: 'EMI 11/13/2020 20:26:42' prior: 50910201 overrides: 50909567!
report
	| res |
	account transactions isEmpty ifTrue:[^0].
	res _ 0.
	account transactions do: [:aTransaction|
		(aTransaction isKindOf: Deposit) ifTrue: [res _ res].
		(aTransaction isKindOf: DepositTransfer) ifTrue: [res _ res + aTransaction value].
		].
	^res.! !
!NetTransfersReportTest methodsFor: 'as yet unclassified' stamp: 'EMI 11/13/2020 20:26:57' prior: 50910121!
test02NetTransferReportOfAccountWithADepositTransferReturnsCorrectly
	| accountOrigin accountDestination netTransfer |
	accountOrigin _ ReceptiveAccount new.
	accountDestination _ ReceptiveAccount new.
	netTransfer  _ NetTransfersReport of: accountDestination.

	Transfer from: accountOrigin to: accountDestination amount: 10.

	self assert: netTransfer report equals: 10.! !

!testRun: #NetTransfersReportTest #test01NetTransferReportOfEmptyAccountReturnsZero stamp: 'EMI 11/13/2020 20:26:59'!
PASSED!

!testRun: #NetTransfersReportTest #test02NetTransferReportOfAccountWithADepositTransferReturnsCorrectly stamp: 'EMI 11/13/2020 20:26:59'!
PASSED!

!testRun: #NetTransfersReportTest #test04NetTransferReportOfAccountWithADepositReturnsZero stamp: 'EMI 11/13/2020 20:26:59'!
PASSED!
!NetTransfersReportTest methodsFor: 'as yet unclassified' stamp: 'EMI 11/13/2020 20:27:35'!
test03NetTransferReportOfAccountWithAExtractionTransferReturnsCorrectly
	| accountOrigin accountDestination netTransfer |
	accountOrigin _ ReceptiveAccount new.
	accountDestination _ ReceptiveAccount new.
	netTransfer  _ NetTransfersReport of: accountOrigin.

	Transfer from: accountOrigin to: accountDestination amount: 10.

	self assert: netTransfer report equals: -10.! !

!testRun: #NetTransfersReportTest #test03NetTransferReportOfAccountWithAExtractionTransferReturnsCorrectly stamp: 'EMI 11/13/2020 20:27:37'!
FAILURE!
!NetTransfersReport methodsFor: 'reporting' stamp: 'EMI 11/13/2020 20:27:55' prior: 50910231 overrides: 50909567!
report
	| res |
	account transactions isEmpty ifTrue:[^0].
	res _ 0.
	account transactions do: [:aTransaction|
		(aTransaction isKindOf: Deposit) ifTrue: [res _ res].
		(aTransaction isKindOf: DepositTransfer) ifTrue: [res _ res + aTransaction value].
		(aTransaction isKindOf: ExtractionTransfer) ifTrue: [res _ res + aTransaction value].
		].
	^res.! !

!testRun: #NetTransfersReportTest #test01NetTransferReportOfEmptyAccountReturnsZero stamp: 'EMI 11/13/2020 20:28:06'!
PASSED!

!testRun: #NetTransfersReportTest #test02NetTransferReportOfAccountWithADepositTransferReturnsCorrectly stamp: 'EMI 11/13/2020 20:28:06'!
PASSED!

!testRun: #NetTransfersReportTest #test03NetTransferReportOfAccountWithAExtractionTransferReturnsCorrectly stamp: 'EMI 11/13/2020 20:28:06'!
FAILURE!

!testRun: #NetTransfersReportTest #test04NetTransferReportOfAccountWithADepositReturnsZero stamp: 'EMI 11/13/2020 20:28:06'!
PASSED!

!testRun: #NetTransfersReportTest #test03NetTransferReportOfAccountWithAExtractionTransferReturnsCorrectly stamp: 'EMI 11/13/2020 20:28:06'!
FAILURE!
!NetTransfersReport methodsFor: 'reporting' stamp: 'EMI 11/13/2020 20:28:37' prior: 50910291 overrides: 50909567!
report
	| res |
	account transactions isEmpty ifTrue:[^0].
	res _ 0.
	account transactions do: [:aTransaction|
		(aTransaction isKindOf: Deposit) ifTrue: [res _ res].
		(aTransaction isKindOf: DepositTransfer) ifTrue: [res _ res + aTransaction value].
		(aTransaction isKindOf: ExtractionTransfer) ifTrue: [res _ res - aTransaction value].
		].
	^res.! !

!testRun: #NetTransfersReportTest #test01NetTransferReportOfEmptyAccountReturnsZero stamp: 'EMI 11/13/2020 20:28:41'!
PASSED!

!testRun: #NetTransfersReportTest #test02NetTransferReportOfAccountWithADepositTransferReturnsCorrectly stamp: 'EMI 11/13/2020 20:28:41'!
PASSED!

!testRun: #NetTransfersReportTest #test03NetTransferReportOfAccountWithAExtractionTransferReturnsCorrectly stamp: 'EMI 11/13/2020 20:28:41'!
PASSED!

!testRun: #NetTransfersReportTest #test04NetTransferReportOfAccountWithADepositReturnsZero stamp: 'EMI 11/13/2020 20:28:41'!
PASSED!

----SNAPSHOT----(13 November 2020 20:28:48) CuisUniversity-4383.image priorSource: 18496406!

!testRun: #NetTransfersReportTest #test01NetTransferReportOfEmptyAccountReturnsZero stamp: 'EMI 11/13/2020 20:28:52'!
PASSED!

!testRun: #NetTransfersReportTest #test02NetTransferReportOfAccountWithADepositTransferReturnsCorrectly stamp: 'EMI 11/13/2020 20:28:52'!
PASSED!

!testRun: #NetTransfersReportTest #test03NetTransferReportOfAccountWithAExtractionTransferReturnsCorrectly stamp: 'EMI 11/13/2020 20:28:52'!
PASSED!

!testRun: #NetTransfersReportTest #test04NetTransferReportOfAccountWithADepositReturnsZero stamp: 'EMI 11/13/2020 20:28:52'!
PASSED!
!NetTransfersReport methodsFor: 'reporting' stamp: 'EMI 11/13/2020 20:29:33' prior: 50910328 overrides: 50909567!
report
	| res |
	account transactions isEmpty ifTrue:[^0].
	res _ 0.
	account transactions do: [:aTransaction|
		(aTransaction isKindOf: DepositTransfer) ifTrue: [res _ res + aTransaction value].
		(aTransaction isKindOf: ExtractionTransfer) ifTrue: [res _ res - aTransaction value].
		].
	^res.! !
!NetTransfersReport methodsFor: 'reporting' stamp: 'EMI 11/13/2020 20:29:44' prior: 50910381 overrides: 50909567!
report
	| res |
	res _ 0.
	account transactions do: [:aTransaction|
		(aTransaction isKindOf: DepositTransfer) ifTrue: [res _ res + aTransaction value].
		(aTransaction isKindOf: ExtractionTransfer) ifTrue: [res _ res - aTransaction value].
		].
	^res.! !
!NetTransfersReport methodsFor: 'reporting' stamp: 'EMI 11/13/2020 20:32:04' prior: 50910394 overrides: 50909567!
report
	| res |
	res _ 0.
	^account transactions sum: [:aTransaction |
		aTransaction ifNil: [0].
		(aTransaction isKindOf: DepositTransfer) ifTrue: [res _ res + aTransaction value].
		(aTransaction isKindOf: ExtractionTransfer) ifTrue: [res _ res - aTransaction value].
		].! !
!NetTransfersReport methodsFor: 'reporting' stamp: 'EMI 11/13/2020 20:32:19' prior: 50910406 overrides: 50909567!
report
	| res |
	res _ 0.
	^account transactions sum: [:aTransaction |
		aTransaction ifNil: [0].
		(aTransaction isKindOf: DepositTransfer) ifTrue: [aTransaction value].
		(aTransaction isKindOf: ExtractionTransfer) ifTrue: [aTransaction value negated].
		].! !
!NetTransfersReport methodsFor: 'reporting' stamp: 'EMI 11/13/2020 20:32:54' prior: 50910419 overrides: 50909567!
report
	| res |
	res _ 0.
	^account transactions sum: [:aTransaction |
		aTransaction ifNil: [0].
		(aTransaction isKindOf: Deposit) ifTrue: [0].
		(aTransaction isKindOf: DepositTransfer) ifTrue: [aTransaction value].
		(aTransaction isKindOf: ExtractionTransfer) ifTrue: [aTransaction value negated].
		].! !

!testRun: #NetTransfersReportTest #test01NetTransferReportOfEmptyAccountReturnsZero stamp: 'EMI 11/13/2020 20:32:59'!
ERROR!

!testRun: #NetTransfersReportTest #test02NetTransferReportOfAccountWithADepositTransferReturnsCorrectly stamp: 'EMI 11/13/2020 20:32:59'!
FAILURE!

!testRun: #NetTransfersReportTest #test03NetTransferReportOfAccountWithAExtractionTransferReturnsCorrectly stamp: 'EMI 11/13/2020 20:32:59'!
PASSED!

!testRun: #NetTransfersReportTest #test04NetTransferReportOfAccountWithADepositReturnsZero stamp: 'EMI 11/13/2020 20:32:59'!
FAILURE!

!testRun: #NetTransfersReportTest #test01NetTransferReportOfEmptyAccountReturnsZero stamp: 'EMI 11/13/2020 20:33:03'!
ERROR!
!NetTransfersReport methodsFor: 'reporting' stamp: 'EMI 11/13/2020 20:33:24' prior: 50910431 overrides: 50909567!
report
	| res |
	res _ 0.
	^account transactions sum: [:aTransaction |
		aTransaction ifNil: [0].
		(aTransaction isKindOf: Deposit) ifTrue: [0].
		(aTransaction isKindOf: DepositTransfer) ifTrue: [aTransaction value].
		(aTransaction isKindOf: ExtractionTransfer) ifTrue: [aTransaction value negated].
		] ifEmpty: [0].! !

!testRun: #NetTransfersReportTest #test01NetTransferReportOfEmptyAccountReturnsZero stamp: 'EMI 11/13/2020 20:33:35'!
PASSED!

!testRun: #NetTransfersReportTest #test02NetTransferReportOfAccountWithADepositTransferReturnsCorrectly stamp: 'EMI 11/13/2020 20:33:35'!
FAILURE!

!testRun: #NetTransfersReportTest #test03NetTransferReportOfAccountWithAExtractionTransferReturnsCorrectly stamp: 'EMI 11/13/2020 20:33:35'!
PASSED!

!testRun: #NetTransfersReportTest #test04NetTransferReportOfAccountWithADepositReturnsZero stamp: 'EMI 11/13/2020 20:33:35'!
FAILURE!

!testRun: #NetTransfersReportTest #test02NetTransferReportOfAccountWithADepositTransferReturnsCorrectly stamp: 'EMI 11/13/2020 20:33:38'!
FAILURE!
!NetTransfersReport methodsFor: 'reporting' stamp: 'EMI 11/13/2020 20:29:44' prior: 50910466 overrides: 50909567!
report
	| res |
	res _ 0.
	account transactions do: [:aTransaction|
		(aTransaction isKindOf: DepositTransfer) ifTrue: [res _ res + aTransaction value].
		(aTransaction isKindOf: ExtractionTransfer) ifTrue: [res _ res - aTransaction value].
		].
	^res.! !

!testRun: #NetTransfersReportTest #test01NetTransferReportOfEmptyAccountReturnsZero stamp: 'EMI 11/13/2020 20:35:29'!
PASSED!

!testRun: #NetTransfersReportTest #test02NetTransferReportOfAccountWithADepositTransferReturnsCorrectly stamp: 'EMI 11/13/2020 20:35:29'!
PASSED!

!testRun: #NetTransfersReportTest #test03NetTransferReportOfAccountWithAExtractionTransferReturnsCorrectly stamp: 'EMI 11/13/2020 20:35:29'!
PASSED!

!testRun: #NetTransfersReportTest #test04NetTransferReportOfAccountWithADepositReturnsZero stamp: 'EMI 11/13/2020 20:35:29'!
PASSED!
!NetTransfersReport methodsFor: 'reporting' stamp: 'EMI 11/13/2020 20:36:44' prior: 50910502 overrides: 50909567!
report
	account reportTo: self.! !
!NetTransfersReport methodsFor: 'nil' stamp: 'EMI 11/13/2020 20:37:35'!
reportDepositTransaction: aDepositTransaction
	^0! !
!NetTransfersReport methodsFor: 'as yet unclassified' stamp: 'EMI 11/13/2020 20:37:49' overrides: 50909576!
reportWithdrawTransaction: aWithdrawTransaction
	^0! !
!NetTransfersReport methodsFor: 'nil' stamp: 'EMI 11/13/2020 20:38:12' overrides: 50909581!
reportDepositTransferTransaction: aDepositTransferTransaction
	^aDepositTransferTransaction value.! !
!NetTransfersReport methodsFor: 'as yet unclassified' stamp: 'EMI 11/13/2020 20:38:31' overrides: 50909587!
reportExtractionTransferTransaction: aExtractionTransferTransaction
	^aExtractionTransferTransaction value negated.! !

!testRun: #NetTransfersReportTest #test01NetTransferReportOfEmptyAccountReturnsZero stamp: 'EMI 11/13/2020 20:38:43'!
FAILURE!

!testRun: #NetTransfersReportTest #test02NetTransferReportOfAccountWithADepositTransferReturnsCorrectly stamp: 'EMI 11/13/2020 20:38:43'!
FAILURE!

!testRun: #NetTransfersReportTest #test03NetTransferReportOfAccountWithAExtractionTransferReturnsCorrectly stamp: 'EMI 11/13/2020 20:38:43'!
FAILURE!

!testRun: #NetTransfersReportTest #test04NetTransferReportOfAccountWithADepositReturnsZero stamp: 'EMI 11/13/2020 20:38:43'!
FAILURE!

!testRun: #NetTransfersReportTest #test01NetTransferReportOfEmptyAccountReturnsZero stamp: 'EMI 11/13/2020 20:38:46'!
FAILURE!
!NetTransfersReport methodsFor: 'reporting' stamp: 'EMI 11/13/2020 20:39:56' prior: 50910531 overrides: 50909567!
report
	^(account reportTo: self) sum.! !

!testRun: #NetTransfersReportTest #test01NetTransferReportOfEmptyAccountReturnsZero stamp: 'EMI 11/13/2020 20:40:04'!
ERROR!

!testRun: #NetTransfersReportTest #test02NetTransferReportOfAccountWithADepositTransferReturnsCorrectly stamp: 'EMI 11/13/2020 20:40:04'!
PASSED!

!testRun: #NetTransfersReportTest #test03NetTransferReportOfAccountWithAExtractionTransferReturnsCorrectly stamp: 'EMI 11/13/2020 20:40:04'!
PASSED!

!testRun: #NetTransfersReportTest #test04NetTransferReportOfAccountWithADepositReturnsZero stamp: 'EMI 11/13/2020 20:40:04'!
PASSED!

!testRun: #NetTransfersReportTest #test01NetTransferReportOfEmptyAccountReturnsZero stamp: 'EMI 11/13/2020 20:40:04'!
ERROR!
!NetTransfersReport methodsFor: 'reporting' stamp: 'EMI 11/13/2020 20:40:28' prior: 50910582 overrides: 50909567!
report
	^(account reportTo: self) sum ifEmpty: [0].! !

!testRun: #NetTransfersReportTest #test01NetTransferReportOfEmptyAccountReturnsZero stamp: 'EMI 11/13/2020 20:40:37'!
ERROR!

!testRun: #NetTransfersReportTest #test02NetTransferReportOfAccountWithADepositTransferReturnsCorrectly stamp: 'EMI 11/13/2020 20:40:37'!
ERROR!

!testRun: #NetTransfersReportTest #test03NetTransferReportOfAccountWithAExtractionTransferReturnsCorrectly stamp: 'EMI 11/13/2020 20:40:37'!
ERROR!

!testRun: #NetTransfersReportTest #test04NetTransferReportOfAccountWithADepositReturnsZero stamp: 'EMI 11/13/2020 20:40:37'!
ERROR!

!testRun: #NetTransfersReportTest #test01NetTransferReportOfEmptyAccountReturnsZero stamp: 'EMI 11/13/2020 20:40:39'!
ERROR!
!NetTransfersReport methodsFor: 'reporting' stamp: 'EMI 11/13/2020 20:42:20' prior: 50910609 overrides: 50909567!
report
	| res |
	res _ account reportTo: self.
	res isEmpty ifTrue: [^0].
	^res sum.! !

!testRun: #NetTransfersReportTest #test01NetTransferReportOfEmptyAccountReturnsZero stamp: 'EMI 11/13/2020 20:42:29'!
PASSED!

!testRun: #NetTransfersReportTest #test02NetTransferReportOfAccountWithADepositTransferReturnsCorrectly stamp: 'EMI 11/13/2020 20:42:29'!
PASSED!

!testRun: #NetTransfersReportTest #test03NetTransferReportOfAccountWithAExtractionTransferReturnsCorrectly stamp: 'EMI 11/13/2020 20:42:29'!
PASSED!

!testRun: #NetTransfersReportTest #test04NetTransferReportOfAccountWithADepositReturnsZero stamp: 'EMI 11/13/2020 20:42:29'!
PASSED!
!NetTransfersReport methodsFor: 'reporting' stamp: 'EMI 11/13/2020 20:43:38' prior: 50910636 overrides: 50909567!
report
	| res |
	res _ account reportTo: self.
	^res sum: [:a :b | a + b] ifEmpty: [0].! !

!testRun: #NetTransfersReportTest #test01NetTransferReportOfEmptyAccountReturnsZero stamp: 'EMI 11/13/2020 20:43:43'!
PASSED!

!testRun: #NetTransfersReportTest #test02NetTransferReportOfAccountWithADepositTransferReturnsCorrectly stamp: 'EMI 11/13/2020 20:43:43'!
ERROR!

!testRun: #NetTransfersReportTest #test03NetTransferReportOfAccountWithAExtractionTransferReturnsCorrectly stamp: 'EMI 11/13/2020 20:43:43'!
ERROR!

!testRun: #NetTransfersReportTest #test04NetTransferReportOfAccountWithADepositReturnsZero stamp: 'EMI 11/13/2020 20:43:43'!
ERROR!

!testRun: #NetTransfersReportTest #test02NetTransferReportOfAccountWithADepositTransferReturnsCorrectly stamp: 'EMI 11/13/2020 20:43:46'!
ERROR!
!NetTransfersReport methodsFor: 'reporting' stamp: 'EMI 11/13/2020 20:45:26' prior: 50910660 overrides: 50909567!
report
	| res |
	res _ account reportTo: self.
	^res sum: [:a | a] ifEmpty: [0].! !

!testRun: #NetTransfersReportTest #test01NetTransferReportOfEmptyAccountReturnsZero stamp: 'EMI 11/13/2020 20:45:30'!
PASSED!

!testRun: #NetTransfersReportTest #test02NetTransferReportOfAccountWithADepositTransferReturnsCorrectly stamp: 'EMI 11/13/2020 20:45:30'!
PASSED!

!testRun: #NetTransfersReportTest #test03NetTransferReportOfAccountWithAExtractionTransferReturnsCorrectly stamp: 'EMI 11/13/2020 20:45:30'!
PASSED!

!testRun: #NetTransfersReportTest #test04NetTransferReportOfAccountWithADepositReturnsZero stamp: 'EMI 11/13/2020 20:45:30'!
PASSED!
!NetTransfersReport methodsFor: 'reporting' stamp: 'EMI 11/13/2020 20:46:01' prior: 50910689 overrides: 50909567!
report
	| res |
	res _ account reportTo: self.
	^res sum: [:aTransferAmount | aTransferAmount] ifEmpty: [0].! !
!NetTransfersReport methodsFor: 'reporting' stamp: 'EMI 11/13/2020 20:46:16' prior: 50910713 overrides: 50909567!
report
	^(account reportTo: self) sum: [:aTransferAmount | aTransferAmount] ifEmpty: [0].! !

!testRun: #NetTransfersReportTest #test01NetTransferReportOfEmptyAccountReturnsZero stamp: 'EMI 11/13/2020 20:46:26'!
PASSED!

!testRun: #NetTransfersReportTest #test02NetTransferReportOfAccountWithADepositTransferReturnsCorrectly stamp: 'EMI 11/13/2020 20:46:26'!
PASSED!

!testRun: #NetTransfersReportTest #test03NetTransferReportOfAccountWithAExtractionTransferReturnsCorrectly stamp: 'EMI 11/13/2020 20:46:26'!
PASSED!

!testRun: #NetTransfersReportTest #test04NetTransferReportOfAccountWithADepositReturnsZero stamp: 'EMI 11/13/2020 20:46:26'!
PASSED!
!NetTransfersReportTest methodsFor: 'as yet unclassified' stamp: 'EMI 11/13/2020 20:47:19'!
test05NetTransferReportOfEmptyPortfolioReturnsZero
	| account netTransfer |
	account _ ReceptiveAccount new.
	netTransfer  _ NetTransfersReport of: account.
	Deposit register: 10 on: account.

	self assert: netTransfer report equals: 0.! !
!NetTransfersReportTest methodsFor: 'as yet unclassified' stamp: 'EMI 11/13/2020 20:47:36' prior: 50910745!
test05NetTransferReportOfEmptyPortfolioReturnsZero
	| portfolio netTransfer |
	portfolio _ ReceptiveAccount new.
	netTransfer  _ NetTransfersReport of: portfolio.
	Deposit register: 10 on: portfolio.

	self assert: netTransfer report equals: 0.! !
!NetTransfersReportTest methodsFor: 'as yet unclassified' stamp: 'EMI 11/13/2020 20:47:43' prior: 50910756!
test05NetTransferReportOfEmptyPortfolioReturnsZero
	| portfolio netTransfer |
	portfolio _ Portfolio new.
	netTransfer  _ NetTransfersReport of: portfolio.

	self assert: netTransfer report equals: 0.! !

!testRun: #NetTransfersReportTest #test05NetTransferReportOfEmptyPortfolioReturnsZero stamp: 'EMI 11/13/2020 20:47:47'!
PASSED!

!testRun: #NetTransfersReportTest #test01NetTransferReportOfEmptyAccountReturnsZero stamp: 'EMI 11/13/2020 20:47:47'!
PASSED!

!testRun: #NetTransfersReportTest #test02NetTransferReportOfAccountWithADepositTransferReturnsCorrectly stamp: 'EMI 11/13/2020 20:47:47'!
PASSED!

!testRun: #NetTransfersReportTest #test03NetTransferReportOfAccountWithAExtractionTransferReturnsCorrectly stamp: 'EMI 11/13/2020 20:47:47'!
PASSED!

!testRun: #NetTransfersReportTest #test04NetTransferReportOfAccountWithADepositReturnsZero stamp: 'EMI 11/13/2020 20:47:47'!
PASSED!

!testRun: #NetTransfersReportTest #test05NetTransferReportOfEmptyPortfolioReturnsZero stamp: 'EMI 11/13/2020 20:47:47'!
PASSED!
!NetTransfersReportTest methodsFor: 'as yet unclassified' stamp: 'EMI 11/13/2020 20:49:23'!
test06NetTransferReportOfPortfolioWithAccountAndATransferReturnsCorrectly
	| portfolio netTransfer |
	portfolio _ Portfolio new.
	netTransfer  _ NetTransfersReport of: portfolio.

	self assert: netTransfer report equals: 0.! !
!NetTransfersReportTest methodsFor: 'as yet unclassified' stamp: 'EMI 11/13/2020 20:50:47' prior: 50910803!
test06NetTransferReportOfPortfolioWithAccountAndATransferReturnsCorrectly
	| portfolio netTransfer accountOrigin accountDestination|
	portfolio _ Portfolio new.
	netTransfer  _ NetTransfersReport of: portfolio.
	
	accountOrigin _ ReceptiveAccount new.
	accountDestination _ ReceptiveAccount new.
	Transfer from: accountOrigin to: accountDestination amount: 10.
	portfolio add: accountOrigin .

	self assert: netTransfer report equals: -10.! !

!testRun: #NetTransfersReportTest #test06NetTransferReportOfPortfolioWithAccountAndATransferReturnsCorrectly stamp: 'EMI 11/13/2020 20:50:49'!
PASSED!

!testRun: #NetTransfersReportTest #test01NetTransferReportOfEmptyAccountReturnsZero stamp: 'EMI 11/13/2020 20:50:49'!
PASSED!

!testRun: #NetTransfersReportTest #test02NetTransferReportOfAccountWithADepositTransferReturnsCorrectly stamp: 'EMI 11/13/2020 20:50:49'!
PASSED!

!testRun: #NetTransfersReportTest #test03NetTransferReportOfAccountWithAExtractionTransferReturnsCorrectly stamp: 'EMI 11/13/2020 20:50:49'!
PASSED!

!testRun: #NetTransfersReportTest #test04NetTransferReportOfAccountWithADepositReturnsZero stamp: 'EMI 11/13/2020 20:50:49'!
PASSED!

!testRun: #NetTransfersReportTest #test05NetTransferReportOfEmptyPortfolioReturnsZero stamp: 'EMI 11/13/2020 20:50:49'!
PASSED!

!testRun: #NetTransfersReportTest #test06NetTransferReportOfPortfolioWithAccountAndATransferReturnsCorrectly stamp: 'EMI 11/13/2020 20:50:49'!
PASSED!
!NetTransfersReportTest methodsFor: 'as yet unclassified' stamp: 'EMI 11/13/2020 20:51:29'!
test07NetTransferReportOfPortfoliosWithAccountAndATransferReturnsCorrectly
	| portfolio netTransfer accountOrigin accountDestination|
	portfolio _ Portfolio new.
	netTransfer  _ NetTransfersReport of: portfolio.
	
	accountOrigin _ ReceptiveAccount new.
	accountDestination _ ReceptiveAccount new.
	Transfer from: accountOrigin to: accountDestination amount: 10.
	portfolio add: accountOrigin .

	self assert: netTransfer report equals: -10.! !
!NetTransfersReportTest methodsFor: 'as yet unclassified' stamp: 'EMI 11/13/2020 20:51:39' prior: 50910862!
test07NetTransferReportOfPortfoliosWithAccountAndATransferReturnsCorrectly
	| portfolioRoot netTransfer accountOrigin accountDestination|
	portfolioRoot _ Portfolio new.
	netTransfer  _ NetTransfersReport of: portfolioRoot.
	
	accountOrigin _ ReceptiveAccount new.
	accountDestination _ ReceptiveAccount new.
	Transfer from: accountOrigin to: accountDestination amount: 10.
	portfolioRoot add: accountOrigin .

	self assert: netTransfer report equals: -10.! !
!NetTransfersReportTest methodsFor: 'as yet unclassified' stamp: 'EMI 11/13/2020 20:51:53' prior: 50910880!
test07NetTransferReportOfPortfoliosWithAccountAndATransferReturnsCorrectly
	| portfolioRoot portfolioChild netTransfer accountOrigin accountDestination|
	portfolioRoot _ Portfolio new.
	netTransfer  _ NetTransfersReport of: portfolioRoot.
	
	accountOrigin _ ReceptiveAccount new.
	accountDestination _ ReceptiveAccount new.
	Transfer from: accountOrigin to: accountDestination amount: 10.
	portfolioRoot add: accountOrigin .

	self assert: netTransfer report equals: -10.! !
!NetTransfersReportTest methodsFor: 'as yet unclassified' stamp: 'EMI 11/13/2020 20:52:22' prior: 50910898!
test07NetTransferReportOfPortfoliosWithAccountAndATransferReturnsCorrectly
	| portfolioRoot portfolioChild netTransfer accountOrigin accountDestination|
	portfolioRoot _ Portfolio new.
	portfolioChild _ Portfolio new.
	netTransfer  _ NetTransfersReport of: portfolioRoot.
	
	accountOrigin _ ReceptiveAccount new.
	accountDestination _ ReceptiveAccount new.
	Transfer from: accountOrigin to: accountDestination amount: 10.
	portfolioChild add: accountOrigin .
	portfolioRoot add: portfolioChild.

	self assert: netTransfer report equals: -10.! !
!NetTransfersReportTest methodsFor: 'as yet unclassified' stamp: 'EMI 11/13/2020 20:52:34' prior: 50910917!
test07NetTransferReportOfPortfoliosWithAccountAndATransferReturnsCorrectly
	| portfolioRoot portfolioChild netTransfer accountOrigin accountDestination|
	portfolioRoot _ Portfolio new.
	portfolioChild _ Portfolio new.
	netTransfer  _ NetTransfersReport of: portfolioRoot.
	
	accountOrigin _ ReceptiveAccount new.
	accountDestination _ ReceptiveAccount new.
	Transfer from: accountOrigin to: accountDestination amount: 10.
	portfolioChild add: accountDestination .
	portfolioRoot add: portfolioChild.

	self assert: netTransfer report equals: 10.! !

!testRun: #NetTransfersReportTest #test07NetTransferReportOfPortfoliosWithAccountAndATransferReturnsCorrectly stamp: 'EMI 11/13/2020 20:52:36'!
PASSED!

!testRun: #NetTransfersReportTest #test01NetTransferReportOfEmptyAccountReturnsZero stamp: 'EMI 11/13/2020 20:52:36'!
PASSED!

!testRun: #NetTransfersReportTest #test02NetTransferReportOfAccountWithADepositTransferReturnsCorrectly stamp: 'EMI 11/13/2020 20:52:36'!
PASSED!

!testRun: #NetTransfersReportTest #test03NetTransferReportOfAccountWithAExtractionTransferReturnsCorrectly stamp: 'EMI 11/13/2020 20:52:36'!
PASSED!

!testRun: #NetTransfersReportTest #test04NetTransferReportOfAccountWithADepositReturnsZero stamp: 'EMI 11/13/2020 20:52:36'!
PASSED!

!testRun: #NetTransfersReportTest #test05NetTransferReportOfEmptyPortfolioReturnsZero stamp: 'EMI 11/13/2020 20:52:36'!
PASSED!

!testRun: #NetTransfersReportTest #test06NetTransferReportOfPortfolioWithAccountAndATransferReturnsCorrectly stamp: 'EMI 11/13/2020 20:52:36'!
PASSED!

!testRun: #NetTransfersReportTest #test07NetTransferReportOfPortfoliosWithAccountAndATransferReturnsCorrectly stamp: 'EMI 11/13/2020 20:52:36'!
PASSED!

----SNAPSHOT----(13 November 2020 20:55:02) CuisUniversity-4383.image priorSource: 18518672!
!Report methodsFor: 'reporting - private' stamp: 'EMI 11/13/2020 20:56:22'!
reportDepositTransaction: aDepositTransaction
	^self subclassResponsibility.! !

!methodRemoval: Report #reportDespositTransaction: stamp: 'EMI 11/13/2020 20:56:22'!
reportDespositTransaction: aDepositTransaction
	^self subclassResponsibility.!

!classRenamed: #AccountSummary as: #AccountSummaryReport stamp: 'EMI 11/13/2020 20:57:08'!
Smalltalk renameClassNamed: #AccountSummary as: #AccountSummaryReport!
!AccountSummaryTest methodsFor: 'as yet unclassified' stamp: 'EMI 11/13/2020 20:57:08' prior: 50907614!
test01AccountSummaryOfEmptyAccountOnlyShowsBalance
	| accountSummary account |
	account _ ReceptiveAccount new.
	accountSummary _ AccountSummaryReport of: account.
	 
	self deny: accountSummary report isEmpty.
	self assert: accountSummary report first equals: 'Balance = 0.'.! !
!AccountSummaryTest methodsFor: 'as yet unclassified' stamp: 'EMI 11/13/2020 20:57:08' prior: 50909210!
test10AccountSummaryOfPortfolioWithADepositTransfer
	| accountSummary portfolio accountOrigin accountDestination expectedResult |
	portfolio _ Portfolio new.
	accountOrigin _ ReceptiveAccount new.
	accountDestination _ ReceptiveAccount new.
	accountSummary _ AccountSummaryReport of: portfolio.
	
	portfolio add: accountOrigin.
	
	Transfer from: accountOrigin to: accountDestination amount: 10.
	 
	expectedResult _ OrderedCollection with: 'Salida por transferencia de 10.' with: 'Balance = -10.'.
	
	self deny: accountSummary report isEmpty.
	self assert: accountSummary report equals: expectedResult.! !
!AccountSummaryTest methodsFor: 'as yet unclassified' stamp: 'EMI 11/13/2020 20:57:08' prior: 50907688!
test03AccountSummaryOfAccountWithAWithdrawShowWithdrawInfo
	| accountSummary account resultSummary |
	account _ ReceptiveAccount new.
	accountSummary _ AccountSummaryReport of: account.
	
	Withdraw register: 10 on: account.
	
	resultSummary _ OrderedCollection with: 'Extracci�n por 10.' with: 'Balance = -10.'.
	
	self assert: accountSummary report equals: resultSummary.
	! !
!AccountSummaryTest methodsFor: 'as yet unclassified' stamp: 'EMI 11/13/2020 20:57:08' prior: 50909054!
test09AccountSummaryOfPortfolioWithAWithdraw
	| accountSummary portfolio account expectedResult |
	portfolio _ Portfolio new.
	account _ ReceptiveAccount new.
	accountSummary _ AccountSummaryReport of: portfolio.
	Withdraw register: 10 on: account.
	portfolio add: account.
	 
	expectedResult _ OrderedCollection with: 'Extracci�n por 10.' with: 'Balance = -10.'.
	
	self deny: accountSummary report isEmpty.
	self assert: accountSummary report equals: expectedResult.! !
!AccountSummaryTest methodsFor: 'as yet unclassified' stamp: 'EMI 11/13/2020 20:57:08' prior: 50908676!
test07AccountSummaryOfEmptyPortfolioOnlyShowsBalance
	| accountSummary portfolio |
	portfolio _ Portfolio new.
	accountSummary _ AccountSummaryReport of: portfolio.
	 
	self deny: accountSummary report isEmpty.
	self assert: accountSummary report first equals: 'Balance = 0.'.! !
!AccountSummaryTest methodsFor: 'as yet unclassified' stamp: 'EMI 11/13/2020 20:57:08' prior: 50908171!
test06AccountSummaryOfAccountWithOneOfEachTransactionShowsCorrectInfo
	| accountSummary accountOrigin accountDestination resultSummary |
	accountOrigin _ ReceptiveAccount new.
	accountDestination _ ReceptiveAccount new.
	accountSummary _ AccountSummaryReport of: accountOrigin.
	
	Deposit register: 50  on: accountOrigin.
	Withdraw register: 10 on: accountOrigin.
	Transfer from: accountOrigin to: accountDestination amount: 20.
	Transfer from: accountDestination to: accountOrigin amount: 5.
	
	resultSummary _ OrderedCollection with: 'Dep�sito por 50.' with: 'Extracci�n por 10.' with: 'Salida por transferencia de 20.' with: 'Entrada por transferencia de 5.' with: 'Balance = 25.'.
	
	self assert: accountSummary report equals: resultSummary.
	! !
!AccountSummaryTest methodsFor: 'as yet unclassified' stamp: 'EMI 11/13/2020 20:57:09' prior: 50908002!
test05AccountSummaryOfAccountWithADepositTransferShowDepositTransferInfo
	| accountSummary accountOrigin accountDestination resultSummary |
	accountOrigin _ ReceptiveAccount new.
	accountDestination _ ReceptiveAccount new.
	accountSummary _ AccountSummaryReport of: accountDestination.
	
	Transfer from: accountOrigin to: accountDestination amount: 10.
	
	resultSummary _ OrderedCollection with: 'Entrada por transferencia de 10.' with: 'Balance = 10.'.
	
	self assert: accountSummary report equals: resultSummary.
	! !
!AccountSummaryTest methodsFor: 'as yet unclassified' stamp: 'EMI 11/13/2020 20:57:09' prior: 50907638!
test02AccountSummaryOfAccountWithADepositShowDepositInfo
	| accountSummary account resultSummary |
	account _ ReceptiveAccount new.
	accountSummary _ AccountSummaryReport of: account.
	
	Deposit register: 10 on: account.
	
	resultSummary _ OrderedCollection with: 'Dep�sito por 10.' with: 'Balance = 10.'.
	
	self assert: accountSummary report equals: resultSummary.
	! !
!AccountSummaryTest methodsFor: 'as yet unclassified' stamp: 'EMI 11/13/2020 20:57:09' prior: 50909323!
test11AccountSummaryOfPortfolioWithAExtractionTransfer
	| accountSummary portfolio accountOrigin accountDestination expectedResult |
	portfolio _ Portfolio new.
	accountOrigin _ ReceptiveAccount new.
	accountDestination _ ReceptiveAccount new.
	accountSummary _ AccountSummaryReport of: portfolio.
	
	portfolio add: accountDestination.
	
	Transfer from: accountOrigin to: accountDestination amount: 10.
	 
	expectedResult _ OrderedCollection with: 'Entrada por transferencia de 10.' with: 'Balance = 10.'.
	
	self deny: accountSummary report isEmpty.
	self assert: accountSummary report equals: expectedResult.! !
!AccountSummaryTest methodsFor: 'as yet unclassified' stamp: 'EMI 11/13/2020 20:57:09' prior: 50907922!
test04AccountSummaryOfAccountWithAExtractionTransferShowExtractionTransferInfo
	| accountSummary accountOrigin accountDestination resultSummary |
	accountOrigin _ ReceptiveAccount new.
	accountDestination _ ReceptiveAccount new.
	accountSummary _ AccountSummaryReport of: accountOrigin.
	
	Transfer from: accountOrigin to: accountDestination amount: 10.
	
	resultSummary _ OrderedCollection with: 'Salida por transferencia de 10.' with: 'Balance = -10.'.
	
	self assert: accountSummary report equals: resultSummary.
	! !
!AccountSummaryTest methodsFor: 'as yet unclassified' stamp: 'EMI 11/13/2020 20:57:09' prior: 50909091!
test08AccountSummaryOfPortfolioWithADeposit
	| accountSummary portfolio account expectedResult |
	portfolio _ Portfolio new.
	account _ ReceptiveAccount new.
	accountSummary _ AccountSummaryReport of: portfolio.
	Deposit register: 10 on: account.
	portfolio add: account.
	 
	expectedResult _ OrderedCollection with: 'Dep�sito por 10.' with: 'Balance = 10.'.
	
	self deny: accountSummary report isEmpty.
	self assert: accountSummary report equals: expectedResult.! !
!NetTransfersReportTest methodsFor: 'tests' stamp: 'EMI 11/13/2020 20:58:19'!
test08NetTransferReportOfCompletePortfolioOfHeightThreeReturnsCorrectly
	| portfolioRoot portfolioChild netTransfer accountOrigin accountDestination|
	portfolioRoot _ Portfolio new.
	portfolioChild _ Portfolio new.
	netTransfer  _ NetTransfersReport of: portfolioRoot.
	
	accountOrigin _ ReceptiveAccount new.
	accountDestination _ ReceptiveAccount new.
	Transfer from: accountOrigin to: accountDestination amount: 10.
	portfolioChild add: accountDestination .
	portfolioRoot add: portfolioChild.

	self assert: netTransfer report equals: 10.! !
!NetTransfersReportTest methodsFor: 'tests' stamp: 'EMI 11/13/2020 20:58:49' prior: 50911217!
test08NetTransferReportOfCompletePortfolioOfHeightThreeReturnsCorrectly
	| portfolioRoot portfolioChildLeft netTransfer accountOrigin accountDestination|
	portfolioRoot _ Portfolio new.
	portfolioChildLeft _ Portfolio new.
	netTransfer  _ NetTransfersReport of: portfolioRoot.
	
	accountOrigin _ ReceptiveAccount new.
	accountDestination _ ReceptiveAccount new.
	Transfer from: accountOrigin to: accountDestination amount: 10.
	portfolioChildLeft add: accountDestination .
	portfolioRoot add: portfolioChildLeft.

	self assert: netTransfer report equals: 10.! !
!NetTransfersReportTest methodsFor: 'tests' stamp: 'EMI 11/13/2020 20:58:57' prior: 50911237!
test08NetTransferReportOfCompletePortfolioOfHeightThreeReturnsCorrectly
	| portfolioRoot portfolioChildLeft portfolioChildRight netTransfer accountOrigin accountDestination|
	portfolioRoot _ Portfolio new.
	portfolioChildLeft _ Portfolio new.
	netTransfer  _ NetTransfersReport of: portfolioRoot.
	
	accountOrigin _ ReceptiveAccount new.
	accountDestination _ ReceptiveAccount new.
	Transfer from: accountOrigin to: accountDestination amount: 10.
	portfolioChildLeft add: accountDestination .
	portfolioRoot add: portfolioChildLeft.

	self assert: netTransfer report equals: 10.! !
!NetTransfersReportTest methodsFor: 'tests' stamp: 'EMI 11/13/2020 21:01:24' prior: 50911258!
test08NetTransferReportOfCompletePortfolioOfHeightThreeReturnsCorrectly
	| portfolioRoot portfolioChildLeft portfolioChildRight portfolioGrandChildLeft portfolioGrandChildRight netTransfer accountOrigin accountDestination |
	portfolioRoot _ Portfolio new.
	portfolioChildLeft _ Portfolio new.
	netTransfer  _ NetTransfersReport of: portfolioRoot.
	
	accountOrigin _ ReceptiveAccount new.
	accountDestination _ ReceptiveAccount new.
	Transfer from: accountOrigin to: accountDestination amount: 10.
	portfolioChildLeft add: accountDestination .
	portfolioRoot add: portfolioChildLeft.

	self assert: netTransfer report equals: 10.! !
!NetTransfersReportTest methodsFor: 'tests' stamp: 'EMI 11/13/2020 21:03:02' prior: 50911280!
test08NetTransferReportOfCompletePortfolioOfHeightThreeReturnsCorrectly
	| portfolioRoot portfolioChildLeft portfolioChildRight portfolioGrandChildLeft portfolioGrandChildRight netTransfer accountOrigin accountDestination |
	portfolioRoot _ Portfolio new.
	portfolioChildLeft _ Portfolio new.
	portfolioGrandChildLeft _ Portfolio new.
	portfolioChildRight _ Portfolio new.
	portfolioGrandChildRight _ Portfolio new.
	netTransfer  _ NetTransfersReport of: portfolioRoot.
	
	accountOrigin _ ReceptiveAccount new.
	accountDestination _ ReceptiveAccount new.
	Transfer from: accountOrigin to: accountDestination amount: 10.
	portfolioGrandChildLeft add: accountDestination .
	portfolioGrandChildRight add: accountOrigin.
	portfolioChildLeft add: portfolioGrandChildLeft.
	portfolioChildRight add: portfolioGrandChildRight.
	portfolioRoot add: portfolioChildLeft.
	portfolioRoot add: portfolioChildRight.

	self assert: netTransfer report equals: 10.! !
!NetTransfersReportTest methodsFor: 'tests' stamp: 'EMI 11/13/2020 21:03:29' prior: 50911303!
test08NetTransferReportOfCompletePortfolioOfHeightThreeReturnsCorrectly
	| portfolioRoot portfolioChildLeft portfolioChildRight portfolioGrandChildLeft portfolioGrandChildRight netTransfer accountOrigin accountDestination |
	portfolioRoot _ Portfolio new.
	portfolioChildLeft _ Portfolio new.
	portfolioGrandChildLeft _ Portfolio new.
	portfolioChildRight _ Portfolio new.
	portfolioGrandChildRight _ Portfolio new.
	netTransfer  _ NetTransfersReport of: portfolioRoot.
	
	accountOrigin _ ReceptiveAccount new.
	accountDestination _ ReceptiveAccount new.
	Transfer from: accountOrigin to: accountDestination amount: 10.
	portfolioGrandChildLeft add: accountDestination .
	portfolioGrandChildRight add: accountOrigin.
	portfolioChildLeft add: portfolioGrandChildLeft.
	portfolioChildRight add: portfolioGrandChildRight.
	portfolioRoot add: portfolioChildLeft.
	portfolioRoot add: portfolioChildRight.

	self assert: netTransfer report equals: 0.! !

!testRun: #NetTransfersReportTest #test08NetTransferReportOfCompletePortfolioOfHeightThreeReturnsCorrectly stamp: 'EMI 11/13/2020 21:03:31'!
PASSED!

!testRun: #NetTransfersReportTest #test01NetTransferReportOfEmptyAccountReturnsZero stamp: 'EMI 11/13/2020 21:03:31'!
PASSED!

!testRun: #NetTransfersReportTest #test02NetTransferReportOfAccountWithADepositTransferReturnsCorrectly stamp: 'EMI 11/13/2020 21:03:31'!
PASSED!

!testRun: #NetTransfersReportTest #test03NetTransferReportOfAccountWithAExtractionTransferReturnsCorrectly stamp: 'EMI 11/13/2020 21:03:31'!
PASSED!

!testRun: #NetTransfersReportTest #test04NetTransferReportOfAccountWithADepositReturnsZero stamp: 'EMI 11/13/2020 21:03:31'!
PASSED!

!testRun: #NetTransfersReportTest #test05NetTransferReportOfEmptyPortfolioReturnsZero stamp: 'EMI 11/13/2020 21:03:31'!
PASSED!

!testRun: #NetTransfersReportTest #test06NetTransferReportOfPortfolioWithAccountAndATransferReturnsCorrectly stamp: 'EMI 11/13/2020 21:03:31'!
PASSED!

!testRun: #NetTransfersReportTest #test07NetTransferReportOfPortfoliosWithAccountAndATransferReturnsCorrectly stamp: 'EMI 11/13/2020 21:03:31'!
PASSED!

!testRun: #NetTransfersReportTest #test08NetTransferReportOfCompletePortfolioOfHeightThreeReturnsCorrectly stamp: 'EMI 11/13/2020 21:03:31'!
PASSED!
!NetTransfersReportTest methodsFor: 'tests' stamp: 'EMI 11/13/2020 21:04:09'!
test08NetTransferReportOfPortfolioTreeOfHeightThreeReturnsCorrectly
	| portfolioRoot portfolioChildLeft portfolioChildRight portfolioGrandChildLeft portfolioGrandChildRight netTransfer accountOrigin accountDestination |
	portfolioRoot _ Portfolio new.
	portfolioChildLeft _ Portfolio new.
	portfolioGrandChildLeft _ Portfolio new.
	portfolioChildRight _ Portfolio new.
	portfolioGrandChildRight _ Portfolio new.
	netTransfer  _ NetTransfersReport of: portfolioRoot.
	
	accountOrigin _ ReceptiveAccount new.
	accountDestination _ ReceptiveAccount new.
	Transfer from: accountOrigin to: accountDestination amount: 10.
	portfolioGrandChildLeft add: accountDestination .
	portfolioGrandChildRight add: accountOrigin.
	portfolioChildLeft add: portfolioGrandChildLeft.
	portfolioChildRight add: portfolioGrandChildRight.
	portfolioRoot add: portfolioChildLeft.
	portfolioRoot add: portfolioChildRight.

	self assert: netTransfer report equals: 0.! !

!methodRemoval: NetTransfersReportTest #test08NetTransferReportOfCompletePortfolioOfHeightThreeReturnsCorrectly stamp: 'EMI 11/13/2020 21:04:09'!
test08NetTransferReportOfCompletePortfolioOfHeightThreeReturnsCorrectly
	| portfolioRoot portfolioChildLeft portfolioChildRight portfolioGrandChildLeft portfolioGrandChildRight netTransfer accountOrigin accountDestination |
	portfolioRoot _ Portfolio new.
	portfolioChildLeft _ Portfolio new.
	portfolioGrandChildLeft _ Portfolio new.
	portfolioChildRight _ Portfolio new.
	portfolioGrandChildRight _ Portfolio new.
	netTransfer  _ NetTransfersReport of: portfolioRoot.
	
	accountOrigin _ ReceptiveAccount new.
	accountDestination _ ReceptiveAccount new.
	Transfer from: accountOrigin to: accountDestination amount: 10.
	portfolioGrandChildLeft add: accountDestination .
	portfolioGrandChildRight add: accountOrigin.
	portfolioChildLeft add: portfolioGrandChildLeft.
	portfolioChildRight add: portfolioGrandChildRight.
	portfolioRoot add: portfolioChildLeft.
	portfolioRoot add: portfolioChildRight.

	self assert: netTransfer report equals: 0.!

----SNAPSHOT----(13 November 2020 21:07:27) CuisUniversity-4383.image priorSource: 18538973!

----SNAPSHOT----(13 November 2020 21:08:44) CuisUniversity-4383.image priorSource: 18554388!

----SNAPSHOT----(13 November 2020 21:10:06) CuisUniversity-4383.image priorSource: 18554482!

----QUIT----(13 November 2020 21:14:07) CuisUniversity-4383.image priorSource: 18554576!

----STARTUP---- (15 November 2020 18:09:14) as /home/doraserver/CuisUniversity/CuisUniversity-4383.image!

!ReceptiveAccountTest methodsFor: 'nil' stamp: 'EMI 11/15/2020 18:15:59'!
test12CanNameAccount! !
!ReceptiveAccountTest methodsFor: 'tests - account' stamp: 'EMI 11/15/2020 18:16:36' prior: 50911490!
test12CanNameAccount
	| account |! !
!ReceptiveAccountTest methodsFor: 'tests - account' stamp: 'EMI 11/15/2020 18:17:43' prior: 50911494!
test12CanNameAccount
	| account |
	account _ ReceptiveAccount new.
	
	self assert: account name equals: 'Unnamed account.'.! !

!testRun: #ReceptiveAccountTest #test12CanNameAccount stamp: 'EMI 11/15/2020 18:17:48'!
FAILURE!
!ReceptiveAccountTest methodsFor: 'tests - account' stamp: 'EMI 11/15/2020 18:18:11' prior: 50911499!
test12CanNameAccount
	| account |
	account _ ReceptiveAccount new.
	
	self assert: account named equals: 'Unnamed account.'.! !

!testRun: #ReceptiveAccountTest #test12CanNameAccount stamp: 'EMI 11/15/2020 18:18:14'!
ERROR!
!ReceptiveAccount methodsFor: 'names' stamp: 'EMI 11/15/2020 18:18:30'!
named
	self shouldBeImplemented.! !
!ReceptiveAccount methodsFor: 'names' stamp: 'EMI 11/15/2020 18:18:44' prior: 50911520!
named
	^'Unnamed account'.! !

!testRun: #ReceptiveAccountTest #test12CanNameAccount stamp: 'EMI 11/15/2020 18:18:45'!
FAILURE!
!ReceptiveAccountTest methodsFor: 'tests - account' stamp: 'EMI 11/15/2020 18:18:55' prior: 50911510!
test12CanNameAccount
	| account |
	account _ ReceptiveAccount new.
	
	self assert: account named equals: 'Unnamed account'.! !

!testRun: #ReceptiveAccountTest #test12CanNameAccount stamp: 'EMI 11/15/2020 18:18:56'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'EMI 11/15/2020 18:18:56'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'EMI 11/15/2020 18:18:56'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'EMI 11/15/2020 18:18:56'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'EMI 11/15/2020 18:18:56'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'EMI 11/15/2020 18:18:56'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'EMI 11/15/2020 18:18:56'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'EMI 11/15/2020 18:18:56'!
PASSED!

!testRun: #ReceptiveAccountTest #test08AccountCanTransferToAnotherAccountWithPositiveAmount stamp: 'EMI 11/15/2020 18:18:56'!
PASSED!

!testRun: #ReceptiveAccountTest #test09AccountsWithTransferKnowsOriginAndDestination stamp: 'EMI 11/15/2020 18:18:56'!
PASSED!

!testRun: #ReceptiveAccountTest #test10AccountsCannotTransferInvalidAmounts stamp: 'EMI 11/15/2020 18:18:56'!
PASSED!

!testRun: #ReceptiveAccountTest #test11AccountsCannotTransferToThemselves stamp: 'EMI 11/15/2020 18:18:56'!
PASSED!

!testRun: #ReceptiveAccountTest #test12CanNameAccount stamp: 'EMI 11/15/2020 18:18:56'!
PASSED!
!ReceptiveAccountTest methodsFor: 'tests - account' stamp: 'EMI 11/15/2020 18:19:20'!
test12AccountHasDefaultName
	| account |
	account _ ReceptiveAccount new.
	
	self assert: account named equals: 'Unnamed account'.! !

!methodRemoval: ReceptiveAccountTest #test12CanNameAccount stamp: 'EMI 11/15/2020 18:19:20'!
test12CanNameAccount
	| account |
	account _ ReceptiveAccount new.
	
	self assert: account named equals: 'Unnamed account'.!
!ReceptiveAccountTest methodsFor: 'tests - account' stamp: 'EMI 11/15/2020 18:19:36'!
test13CanNameAccount
	| account |
	account _ ReceptiveAccount new.
	
	self assert: account named equals: 'Unnamed account'.! !
!ReceptiveAccountTest methodsFor: 'tests - account' stamp: 'EMI 11/15/2020 18:19:57'!
test13CanCreateAccountWithName
	| account |
	account _ ReceptiveAccount new.
	
	self assert: account named equals: 'Unnamed account'.! !

!methodRemoval: ReceptiveAccountTest #test13CanNameAccount stamp: 'EMI 11/15/2020 18:19:57'!
test13CanNameAccount
	| account |
	account _ ReceptiveAccount new.
	
	self assert: account named equals: 'Unnamed account'.!
!ReceptiveAccountTest methodsFor: 'tests - account' stamp: 'EMI 11/15/2020 18:20:17' prior: 50911609!
test13CanCreateAccountWithName
	| account |
	account _ ReceptiveAccount named: 'Test account'.
	
	self assert: account named equals: 'Test account'.! !

!testRun: #ReceptiveAccountTest #test13CanCreateAccountWithName stamp: 'EMI 11/15/2020 18:20:19'!
ERROR!
!ReceptiveAccountTest methodsFor: 'tests - account' stamp: 'EMI 11/15/2020 18:20:59' prior: 50911624!
test13CanCreateAccountWithName
	| account |
	account _ ReceptiveAccount withName: 'Test account'.
	
	self assert: account named equals: 'Test account'.! !

!testRun: #ReceptiveAccountTest #test13CanCreateAccountWithName stamp: 'EMI 11/15/2020 18:21:02'!
ERROR!
!ReceptiveAccount class methodsFor: 'instance creation' stamp: 'EMI 11/15/2020 18:21:16'!
withName: aString 
	"DO NOT FORGET TO RENAME COLLABORATORS AND REMOVE THIS COMMENT!!!!"
	self shouldBeImplemented.
	^self new initializeWithName: aString ! !
!ReceptiveAccount class methodsFor: 'instance creation' stamp: 'EMI 11/15/2020 18:21:23' prior: 50911647!
withName: aString 
	^self new initializeWithName: aString ! !

!testRun: #ReceptiveAccountTest #test13CanCreateAccountWithName stamp: 'EMI 11/15/2020 18:21:32'!
ERROR!

!classDefinition: #ReceptiveAccount category: 'Portfolio2-Ejercicio' stamp: 'EMI 11/15/2020 18:21:46'!
Account subclass: #ReceptiveAccount
	instanceVariableNames: 'transactions string'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio2-Ejercicio'!
!ReceptiveAccount methodsFor: 'initialization' stamp: 'EMI 11/15/2020 18:21:46'!
initializeWithName: aString 
	self shouldBeImplemented.
	string := aString.! !
!ReceptiveAccount methodsFor: 'initialization' stamp: 'EMI 11/15/2020 18:21:51' prior: 50911673!
initializeWithName: aString 
	string := aString.! !

!classDefinition: #ReceptiveAccount category: 'Portfolio2-Ejercicio' stamp: 'EMI 11/15/2020 18:21:59'!
Account subclass: #ReceptiveAccount
	instanceVariableNames: 'transactions accountName'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio2-Ejercicio'!
!ReceptiveAccount methodsFor: 'as yet unclassified' stamp: 'EMI 11/15/2020 18:21:59' prior: 50911679!
initializeWithName: aString 
	accountName := aString.! !

!testRun: #ReceptiveAccountTest #test13CanCreateAccountWithName stamp: 'EMI 11/15/2020 18:22:09'!
FAILURE!
!ReceptiveAccount methodsFor: 'names' stamp: 'EMI 11/15/2020 18:22:43' prior: 50911524!
named
	^accountName.! !
!ReceptiveAccount methodsFor: 'initialization' stamp: 'EMI 11/15/2020 18:23:06' prior: 50911693!
initializeWithName: aString 
	self initialize.
	accountName := aString.! !
!ReceptiveAccount methodsFor: 'initialization' stamp: 'EMI 11/15/2020 18:23:11' prior: 50904930 overrides: 16896425!
initialize
	super initialize.
	transactions := OrderedCollection new.! !
!ReceptiveAccount methodsFor: 'initialization' stamp: 'EMI 11/15/2020 18:23:28' prior: 50911711 overrides: 16896425!
initialize
	super initialize.
	transactions := OrderedCollection new.
	accountName _ 'Unnamed account'.! !
!ReceptiveAccount methodsFor: 'initialization' stamp: 'EMI 11/15/2020 18:23:38' prior: 50911705!
initializeWithName: aString 
	self initialize.
	accountName _ aString.! !

!testRun: #ReceptiveAccountTest #test13CanCreateAccountWithName stamp: 'EMI 11/15/2020 18:23:56'!
PASSED!

!testRun: #ReceptiveAccountTest #test12AccountHasDefaultName stamp: 'EMI 11/15/2020 18:23:59'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'EMI 11/15/2020 18:24:01'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'EMI 11/15/2020 18:24:01'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'EMI 11/15/2020 18:24:01'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'EMI 11/15/2020 18:24:01'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'EMI 11/15/2020 18:24:01'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'EMI 11/15/2020 18:24:01'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'EMI 11/15/2020 18:24:01'!
PASSED!

!testRun: #ReceptiveAccountTest #test08AccountCanTransferToAnotherAccountWithPositiveAmount stamp: 'EMI 11/15/2020 18:24:01'!
PASSED!

!testRun: #ReceptiveAccountTest #test09AccountsWithTransferKnowsOriginAndDestination stamp: 'EMI 11/15/2020 18:24:01'!
PASSED!

!testRun: #ReceptiveAccountTest #test10AccountsCannotTransferInvalidAmounts stamp: 'EMI 11/15/2020 18:24:01'!
PASSED!

!testRun: #ReceptiveAccountTest #test11AccountsCannotTransferToThemselves stamp: 'EMI 11/15/2020 18:24:01'!
PASSED!

!testRun: #ReceptiveAccountTest #test12AccountHasDefaultName stamp: 'EMI 11/15/2020 18:24:01'!
PASSED!

!testRun: #ReceptiveAccountTest #test13CanCreateAccountWithName stamp: 'EMI 11/15/2020 18:24:01'!
PASSED!
!PortfolioTest methodsFor: 'tests' stamp: 'EMI 11/15/2020 18:24:51'!
test16PortfolioHasDefaultName
	| portfolio |
	
! !
!PortfolioTest methodsFor: 'tests' stamp: 'EMI 11/15/2020 18:25:31' prior: 50911784!
test16PortfolioHasDefaultName
	| portfolio |
	
	portfolio _ Portfolio new.
	
	self assert: portfolio named equals: 'Unnamed portfolio'.! !

!testRun: #PortfolioTest #test16PortfolioHasDefaultName stamp: 'EMI 11/15/2020 18:25:37'!
ERROR!

!testRun: #PortfolioTest #test16PortfolioHasDefaultName stamp: 'EMI 11/15/2020 18:25:37'!
ERROR!
!Portfolio methodsFor: 'names' stamp: 'EMI 11/15/2020 18:25:47'!
named
	self shouldBeImplemented.! !
!Portfolio methodsFor: 'names' stamp: 'EMI 11/15/2020 18:25:59' prior: 50911802!
named
	^'Unnamed portfolio'.! !

!testRun: #PortfolioTest #test16PortfolioHasDefaultName stamp: 'EMI 11/15/2020 18:26:01'!
PASSED!
!PortfolioTest methodsFor: 'tests' stamp: 'EMI 11/15/2020 18:26:43'!
test17CanCreatePortfolioWithName
	| portfolio |
	
	portfolio _ Portfolio withName: 'Test Portfolio'.
	
	self assert: portfolio named equals: 'Test Portfolio'.! !

!testRun: #PortfolioTest #test17CanCreatePortfolioWithName stamp: 'EMI 11/15/2020 18:27:10'!
ERROR!
!Portfolio class methodsFor: 'instance creation' stamp: 'EMI 11/15/2020 18:27:17'!
withName: aString 
	"DO NOT FORGET TO RENAME COLLABORATORS AND REMOVE THIS COMMENT!!!!"
	self shouldBeImplemented.
	^self new initializeWithName: aString ! !
!Portfolio class methodsFor: 'instance creation' stamp: 'EMI 11/15/2020 18:27:21' prior: 50911824!
withName: aString 
	^self new initializeWithName: aString ! !

!testRun: #PortfolioTest #test17CanCreatePortfolioWithName stamp: 'EMI 11/15/2020 18:27:23'!
ERROR!

!classDefinition: #Portfolio category: 'Portfolio2-Ejercicio' stamp: 'EMI 11/15/2020 18:27:34'!
Account subclass: #Portfolio
	instanceVariableNames: 'accounts parents string'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio2-Ejercicio'!
!Portfolio methodsFor: 'initialization' stamp: 'EMI 11/15/2020 18:27:34'!
initializeWithName: aString 
	self shouldBeImplemented.
	string := aString.! !
!Portfolio methodsFor: 'initialization' stamp: 'EMI 11/15/2020 18:27:47' prior: 50911849!
initializeWithName: aString 
	self initialize.
	string := aString.! !

!classDefinition: #Portfolio category: 'Portfolio2-Ejercicio' stamp: 'EMI 11/15/2020 18:27:55'!
Account subclass: #Portfolio
	instanceVariableNames: 'accounts parents portfolioName'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio2-Ejercicio'!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'EMI 11/15/2020 18:27:55' prior: 50911855!
initializeWithName: aString 
	self initialize.
	portfolioName := aString.! !

!testRun: #PortfolioTest #test17CanCreatePortfolioWithName stamp: 'EMI 11/15/2020 18:28:24'!
FAILURE!
!Portfolio methodsFor: 'names' stamp: 'EMI 11/15/2020 18:28:42' prior: 50911806!
named
	^portfolioName.! !

!testRun: #PortfolioTest #test01BalanceOfPortfolioWithoutAccountsIsZero stamp: 'EMI 11/15/2020 18:28:49'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithOneAccountIsAccountBalance stamp: 'EMI 11/15/2020 18:28:49'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioIsCalculatedRecursivelyOnPortfolios stamp: 'EMI 11/15/2020 18:28:49'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithoutAccountsHasNoRegisteredTransaction stamp: 'EMI 11/15/2020 18:28:49'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredItsAccountsTransactions stamp: 'EMI 11/15/2020 18:28:49'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioLooksForRegisteredTransactionsRecursively stamp: 'EMI 11/15/2020 18:28:49'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioHasNoTransactionWhenHasNoAccounts stamp: 'EMI 11/15/2020 18:28:49'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTransactionsIncludesAllItsAccountsTransactions stamp: 'EMI 11/15/2020 18:28:49'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioTransactionsAreCalculatedRecursively stamp: 'EMI 11/15/2020 18:28:49'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCanNotIncludeTheSameAccountMoreThanOnce stamp: 'EMI 11/15/2020 18:28:49'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCanNotIncludeAccountOfItsPortfolios stamp: 'EMI 11/15/2020 18:28:49'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioCanNotIncludeItself stamp: 'EMI 11/15/2020 18:28:49'!
PASSED!

!testRun: #PortfolioTest #test13ComposedPortfolioCanNotHaveParentPortfolioAccount stamp: 'EMI 11/15/2020 18:28:49'!
PASSED!

!testRun: #PortfolioTest #test14ComposedPortfolioCanNotHaveAccountOfAnyRootParentRecursively stamp: 'EMI 11/15/2020 18:28:49'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotIncludeAnyOfTheComposedAccountOfPortfolioToAdd stamp: 'EMI 11/15/2020 18:28:49'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioHasDefaultName stamp: 'EMI 11/15/2020 18:28:49'!
FAILURE!

!testRun: #PortfolioTest #test17CanCreatePortfolioWithName stamp: 'EMI 11/15/2020 18:28:49'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioHasDefaultName stamp: 'EMI 11/15/2020 18:28:49'!
FAILURE!
!Portfolio methodsFor: 'initialization' stamp: 'EMI 11/15/2020 18:29:24' prior: 50904815 overrides: 16896425!
initialize
	portfolioName _ 'Unnamed portfolio'.
	accounts := OrderedCollection new.
	parents := OrderedCollection new.! !

!testRun: #PortfolioTest #test01BalanceOfPortfolioWithoutAccountsIsZero stamp: 'EMI 11/15/2020 18:29:33'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithOneAccountIsAccountBalance stamp: 'EMI 11/15/2020 18:29:33'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioIsCalculatedRecursivelyOnPortfolios stamp: 'EMI 11/15/2020 18:29:33'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithoutAccountsHasNoRegisteredTransaction stamp: 'EMI 11/15/2020 18:29:33'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredItsAccountsTransactions stamp: 'EMI 11/15/2020 18:29:33'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioLooksForRegisteredTransactionsRecursively stamp: 'EMI 11/15/2020 18:29:33'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioHasNoTransactionWhenHasNoAccounts stamp: 'EMI 11/15/2020 18:29:33'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTransactionsIncludesAllItsAccountsTransactions stamp: 'EMI 11/15/2020 18:29:33'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioTransactionsAreCalculatedRecursively stamp: 'EMI 11/15/2020 18:29:33'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCanNotIncludeTheSameAccountMoreThanOnce stamp: 'EMI 11/15/2020 18:29:33'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCanNotIncludeAccountOfItsPortfolios stamp: 'EMI 11/15/2020 18:29:33'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioCanNotIncludeItself stamp: 'EMI 11/15/2020 18:29:33'!
PASSED!

!testRun: #PortfolioTest #test13ComposedPortfolioCanNotHaveParentPortfolioAccount stamp: 'EMI 11/15/2020 18:29:33'!
PASSED!

!testRun: #PortfolioTest #test14ComposedPortfolioCanNotHaveAccountOfAnyRootParentRecursively stamp: 'EMI 11/15/2020 18:29:33'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotIncludeAnyOfTheComposedAccountOfPortfolioToAdd stamp: 'EMI 11/15/2020 18:29:33'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioHasDefaultName stamp: 'EMI 11/15/2020 18:29:33'!
PASSED!

!testRun: #PortfolioTest #test17CanCreatePortfolioWithName stamp: 'EMI 11/15/2020 18:29:33'!
PASSED!
!Account methodsFor: 'names' stamp: 'EMI 11/15/2020 18:30:11'!
named
	^self subclassResponsibility.! !

Report subclass: #PortfolioStructureReport
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio2-Ejercicio'!

!classDefinition: #PortfolioStructureReport category: 'Portfolio2-Ejercicio' stamp: 'EMI 11/15/2020 18:36:18'!
Report subclass: #PortfolioStructureReport
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio2-Ejercicio'!
!PortfolioStructureReport methodsFor: 'nil' stamp: 'EMI 11/15/2020 18:36:32' overrides: 50909567!
report! !
!PortfolioStructureReport methodsFor: 'nil' stamp: 'EMI 11/15/2020 18:37:17'!
initializeOf: anAccount
	account _ anAccount.! !
!PortfolioStructureReport methodsFor: 'as yet unclassified' stamp: 'EMI 11/15/2020 18:37:42' prior: 50912039 overrides: 50909567!
report
	^account reportTo: self.! !

TestCase subclass: #PortfolioStructureReportTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio2-Ejercicio'!

!classDefinition: #PortfolioStructureReportTest category: 'Portfolio2-Ejercicio' stamp: 'EMI 11/15/2020 18:38:05'!
TestCase subclass: #PortfolioStructureReportTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio2-Ejercicio'!
!PortfolioStructureReportTest methodsFor: 'nil' stamp: 'EMI 11/15/2020 18:38:38'!
test01ReportOfASimplePortfolioStructureHasCorrectIdentation! !
!PortfolioStructureReportTest methodsFor: 'as yet unclassified' stamp: 'EMI 11/15/2020 18:39:41' prior: 50912066!
test01ReportOfASimplePortfolioStructureHasCorrectIdentation
	| portfolio report |
! !
!PortfolioStructureReportTest methodsFor: 'as yet unclassified' stamp: 'EMI 11/15/2020 18:40:10'!
test01ReportOfAnEmptyPortfolioStructureHasCorrectName
	| portfolio report |
! !

!methodRemoval: PortfolioStructureReportTest #test01ReportOfASimplePortfolioStructureHasCorrectIdentation stamp: 'EMI 11/15/2020 18:40:10'!
test01ReportOfASimplePortfolioStructureHasCorrectIdentation
	| portfolio report |
!
!PortfolioStructureReportTest methodsFor: 'as yet unclassified' stamp: 'EMI 11/15/2020 18:42:28' prior: 50912078!
test01ReportOfAnEmptyPortfolioStructureHasCorrectName
	| portfolio report expectedResult |
	portfolio _ Portfolio new.
	report _ PortfolioStructureReport of: portfolio.
	
	
	expectedResult _ OrderedCollection with: 'Portfolio de Unnamed Portfolio'.
	self assert: report report equals: expectedResult.! !
!PortfolioStructureReportTest methodsFor: 'as yet unclassified' stamp: 'EMI 11/15/2020 18:42:31' prior: 50912092!
test01ReportOfAnEmptyPortfolioStructureHasCorrectName
	| portfolio report expectedResult |
	portfolio _ Portfolio new.
	report _ PortfolioStructureReport of: portfolio.
	
	expectedResult _ OrderedCollection with: 'Portfolio de Unnamed Portfolio'.
	self assert: report report equals: expectedResult.! !
!PortfolioStructureReport methodsFor: 'as yet unclassified' stamp: 'EMI 11/15/2020 18:43:00' prior: 50912048 overrides: 50909567!
report
	^self.! !

!testRun: #PortfolioStructureReportTest #test01ReportOfAnEmptyPortfolioStructureHasCorrectName stamp: 'EMI 11/15/2020 18:43:10'!
FAILURE!

!testRun: #PortfolioStructureReportTest #test01ReportOfAnEmptyPortfolioStructureHasCorrectName stamp: 'EMI 11/15/2020 18:43:10'!
FAILURE!
!PortfolioStructureReport methodsFor: 'as yet unclassified' stamp: 'EMI 11/15/2020 18:43:32' prior: 50912120 overrides: 50909567!
report
	^'Portfolio de Unnamed Portfolio'.! !

!testRun: #PortfolioStructureReportTest #test01ReportOfAnEmptyPortfolioStructureHasCorrectName stamp: 'EMI 11/15/2020 18:43:40'!
FAILURE!

!testRun: #PortfolioStructureReportTest #test01ReportOfAnEmptyPortfolioStructureHasCorrectName stamp: 'EMI 11/15/2020 18:43:40'!
FAILURE!
!PortfolioStructureReport methodsFor: 'as yet unclassified' stamp: 'EMI 11/15/2020 18:43:56' prior: 50912134 overrides: 50909567!
report
	^OrderedCollection with:'Portfolio de Unnamed Portfolio'.! !

!testRun: #PortfolioStructureReportTest #test01ReportOfAnEmptyPortfolioStructureHasCorrectName stamp: 'EMI 11/15/2020 18:44:02'!
PASSED!
!PortfolioStructureReportTest methodsFor: 'as yet unclassified' stamp: 'EMI 11/15/2020 18:44:43'!
test02ReportOfASimplePortfolioStructureHasCorrectNamesAndIdentation
	| portfolio account report expectedResult |
	portfolio _ Portfolio new.
	report _ PortfolioStructureReport of: portfolio.
	
	expectedResult _ OrderedCollection with: 'Portfolio de Unnamed Portfolio'.
	self assert: report report equals: expectedResult.! !
!PortfolioStructureReportTest methodsFor: 'as yet unclassified' stamp: 'EMI 11/15/2020 18:45:30' prior: 50912159!
test02ReportOfASimplePortfolioStructureHasCorrectNamesAndIdentation
	| portfolio account report expectedResult |
	portfolio _ Portfolio new.
	account _ ReceptiveAccount new.
	report _ PortfolioStructureReport of: portfolio.
	
	expectedResult _ OrderedCollection with: 'Portfolio de Unnamed Portfolio' with: ' Cuenta de Unnamed account'.
	self assert: report report equals: expectedResult.! !
!PortfolioStructureReportTest methodsFor: 'as yet unclassified' stamp: 'EMI 11/15/2020 18:45:39' prior: 50912173!
test02ReportOfASimplePortfolioStructureHasCorrectNamesAndIdentation
	| portfolio account report expectedResult |
	portfolio _ Portfolio new.
	account _ ReceptiveAccount new.
	portfolio add: account.
	report _ PortfolioStructureReport of: portfolio.
	
	expectedResult _ OrderedCollection with: 'Portfolio de Unnamed Portfolio' with: ' Cuenta de Unnamed account'.
	self assert: report report equals: expectedResult.! !
!PortfolioStructureReportTest methodsFor: 'as yet unclassified' stamp: 'EMI 11/15/2020 18:45:52' prior: 50912189!
test02ReportOfASimplePortfolioStructureHasCorrectNamesAndIdentation
	| portfolio account report expectedResult |
	portfolio _ Portfolio new.
	account _ ReceptiveAccount new.
	portfolio add: account.
	report _ PortfolioStructureReport of: portfolio.
	
	expectedResult _ OrderedCollection with: 'Portfolio de Unnamed Portfolio' with: '   Cuenta de Unnamed account'.
	self assert: report report equals: expectedResult.! !

!testRun: #PortfolioStructureReportTest #test01ReportOfAnEmptyPortfolioStructureHasCorrectName stamp: 'EMI 11/15/2020 18:46:03'!
PASSED!

!testRun: #PortfolioStructureReportTest #test02ReportOfASimplePortfolioStructureHasCorrectNamesAndIdentation stamp: 'EMI 11/15/2020 18:46:03'!
FAILURE!

!testRun: #PortfolioStructureReportTest #test02ReportOfASimplePortfolioStructureHasCorrectNamesAndIdentation stamp: 'EMI 11/15/2020 18:46:03'!
FAILURE!
!PortfolioStructureReport methodsFor: 'as yet unclassified' stamp: 'EMI 11/15/2020 18:49:18'!
reportAccount: anAccount
	! !
!PortfolioStructureReport methodsFor: 'as yet unclassified' stamp: 'EMI 11/15/2020 18:49:52' prior: 50912236!
reportAccount: anAccount
	^'Cuenta de ', anAccount named.! !
!PortfolioStructureReport methodsFor: 'as yet unclassified' stamp: 'EMI 11/15/2020 18:50:14' prior: 50912241!
reportAccount: anAccount
	^'Cuenta de ', anAccount named.! !
!PortfolioStructureReport methodsFor: 'as yet unclassified' stamp: 'EMI 11/15/2020 18:51:33'!
reportPortfolio: aPortfolio
	| res |
	res _ OrderedCollection new.
	res add: 'Portfolio de ', aPortfolio named.
	^ res.! !
!Portfolio methodsFor: 'reports' stamp: 'EMI 11/15/2020 18:52:02' prior: 50909403 overrides: 50908371!
reportTo: aReport
	| result |
	result _ OrderedCollection new.
	aReport reportPortfolio: self.
	accounts do:[:anAccount |result addAll: (anAccount reportTo: aReport).].
	^result.
	! !
!ReceptiveAccount methodsFor: 'reports' stamp: 'EMI 11/15/2020 18:52:17' prior: 50909412 overrides: 50908371!
reportTo: aReport
	| result |
	aReport reportAccount: self.
	result _ OrderedCollection new.
	transactions do:[:aTransaction | result add: (aTransaction reportTo: aReport)].
	^ result.! !
!ReceptiveAccount methodsFor: 'reports' stamp: 'EMI 11/15/2020 18:54:23' prior: 50912270 overrides: 50908371!
reportTo: aReport
	| result |
	result _ aReport reportAccount: self.
	transactions do:[:aTransaction | result add: (aTransaction reportTo: aReport)].
	^ result.! !
!Portfolio methodsFor: 'reports' stamp: 'EMI 11/15/2020 18:54:33' prior: 50912260 overrides: 50908371!
reportTo: aReport
	| result |
	result _ aReport reportPortfolio: self.
	accounts do:[:anAccount |result addAll: (anAccount reportTo: aReport).].
	^result.
	! !
!PortfolioStructureReport methodsFor: 'as yet unclassified' stamp: 'EMI 11/15/2020 18:55:06' prior: 50912252!
reportPortfolio: aPortfolio
	^ OrderedCollection with: ('Portfolio de ', aPortfolio named).! !
!PortfolioStructureReport methodsFor: 'as yet unclassified' stamp: 'EMI 11/15/2020 18:55:34' prior: 50912247!
reportAccount: anAccount
	^ OrderedCollection with: ('Cuenta de ', anAccount named).! !
!ReceptiveAccount methodsFor: 'reports' stamp: 'EMI 11/15/2020 18:58:42' prior: 50912280 overrides: 50908371!
reportTo: aReport
	| result |
	result _ aReport reportAccount: self.
	transactions do:[:aTransaction | result add: (aTransaction reportTo: aReport)].
	^ result.! !

----SNAPSHOT----(15 November 2020 19:00:53) CuisUniversity-4383.image priorSource: 18554670!

----QUIT----(15 November 2020 19:01:03) CuisUniversity-4383.image priorSource: 18581411!

----STARTUP---- (15 November 2020 22:10:32) as /home/doraserver/CuisUniversity/CuisUniversity-4383.image!

!PortfolioStructureReport methodsFor: 'as yet unclassified' stamp: 'EMI 11/15/2020 22:13:36' prior: 50912149 overrides: 50909567!
report
	^account reportTo: self.! !
!PortfolioStructureReport methodsFor: 'nil' stamp: 'EMI 11/15/2020 22:25:50' overrides: 50910997!
reportDepositTransaction: aDepositTransaction! !
!PortfolioStructureReport methodsFor: 'as yet unclassified' stamp: 'EMI 11/15/2020 22:26:10' prior: 50912331 overrides: 50909567!
report
	account reportTo: self.! !

Report subclass: #PortfolioStructureReport
	instanceVariableNames: 'reportCollection'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio2-Ejercicio'!

!classDefinition: #PortfolioStructureReport category: 'Portfolio2-Ejercicio' stamp: 'EMI 11/15/2020 22:26:20'!
Report subclass: #PortfolioStructureReport
	instanceVariableNames: 'reportCollection'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio2-Ejercicio'!
!PortfolioStructureReport methodsFor: 'as yet unclassified' stamp: 'EMI 11/15/2020 22:26:33' prior: 50912342 overrides: 50909567!
report
	reportCollection _ OrderedCollection new.
	account reportTo: self.! !
!PortfolioStructureReport methodsFor: 'as yet unclassified' stamp: 'EMI 11/15/2020 22:26:41' prior: 50912362 overrides: 50909567!
report
	reportCollection _ OrderedCollection new.
	account reportTo: self.
	^reportCollection.! !
!PortfolioStructureReport methodsFor: 'as yet unclassified' stamp: 'EMI 11/15/2020 22:29:01' prior: 50912305!
reportAccount: anAccount
	reportCollection add: ('Cuenta de ', anAccount named).
	^ OrderedCollection with: ('Cuenta de ', anAccount named).! !

!classDefinition: #PortfolioStructureReport category: 'Portfolio2-Ejercicio' stamp: 'EMI 11/15/2020 22:30:29'!
Report subclass: #PortfolioStructureReport
	instanceVariableNames: 'reportCollection currentIdent'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio2-Ejercicio'!
!PortfolioStructureReport methodsFor: 'as yet unclassified' stamp: 'EMI 11/15/2020 22:30:27' prior: 50912298!
reportPortfolio: aPortfolio
	reportCollection add: ('Portfolio de ', aPortfolio named).
	currentIdent _ currentIdent + 1.
	^ OrderedCollection with: ('Portfolio de ', aPortfolio named).! !
!PortfolioStructureReport methodsFor: 'as yet unclassified' stamp: 'EMI 11/15/2020 22:35:48' prior: 50912394!
reportPortfolio: aPortfolio
	reportCollection add: ('' padded: #left to: currentIdent with: ' ', 'Portfolio de ', aPortfolio named).
	currentIdent _ currentIdent + 1.
	^ OrderedCollection with: ('Portfolio de ', aPortfolio named).! !

'' padded: #left to: 3 with: ' '.!

'' padded: #left to: 3 with: $A.!

'B' padded: #left to: 3 with: $A.!

' B' padded: #left to: 3 with: $A.!

String new: (3*1) withAll: $A.!

String new: (3*1) withAll: $.!

String new: (3*1) withAll: $!

String new: (3*1) withAll: $\n. !

String tab.!

String tab, 'a'.!

String tab, 'aaaaa'.!

'aaaaa', String tab.!

String tab.!

String tab, String tab, 'aaa'!

String tab, String tab, String tab, String tab, 'aaa'.!

String new: (3*1) withAll: Character  space, 'aaa'.!

(String new: (3*1) withAll: Character space), 'aaa'.!
!PortfolioStructureReport methodsFor: 'as yet unclassified' stamp: 'EMI 11/15/2020 22:44:23' prior: 50912376!
reportAccount: anAccount
	reportCollection add: ('Cuenta de ', anAccount named).
	^ OrderedCollection with: ('Cuenta de ', anAccount named).! !
!PortfolioStructureReport methodsFor: 'as yet unclassified' stamp: 'EMI 11/15/2020 22:46:35'!
identString: aString
	^(String new: (3*currentIdent) withAll: Character space), aString.! !
!PortfolioStructureReport methodsFor: 'as yet unclassified' stamp: 'EMI 11/15/2020 22:46:50' prior: 50912433!
reportAccount: anAccount
	reportCollection add: (self identString: ('Cuenta de ', anAccount named)).
	^ OrderedCollection with: ('Cuenta de ', anAccount named).! !
!PortfolioStructureReport methodsFor: 'as yet unclassified' stamp: 'EMI 11/15/2020 22:47:12' prior: 50912404!
reportPortfolio: aPortfolio
	reportCollection add: (self identString: ('Portfolio de ', aPortfolio named)).
	currentIdent _ currentIdent + 1.
	^ OrderedCollection with: ('Portfolio de ', aPortfolio named).! !
!PortfolioStructureReport methodsFor: 'as yet unclassified' stamp: 'EMI 11/15/2020 22:47:28' prior: 50912369 overrides: 50909567!
report
	reportCollection _ OrderedCollection new.
	currentIdent _ 0.
	account reportTo: self.
	^reportCollection.! !
!PortfolioStructureReport methodsFor: 'as yet unclassified' stamp: 'EMI 11/15/2020 22:47:47' prior: 50912448!
reportAccount: anAccount
	reportCollection add: (self identString: ('Cuenta de ', anAccount named)).! !
!PortfolioStructureReport methodsFor: 'as yet unclassified' stamp: 'EMI 11/15/2020 22:47:52' prior: 50912457!
reportPortfolio: aPortfolio
	reportCollection add: (self identString: ('Portfolio de ', aPortfolio named)).
	currentIdent _ currentIdent + 1.! !
!PortfolioStructureReport methodsFor: 'nil' stamp: 'EMI 11/15/2020 22:49:28' overrides: 50909581!
reportDepositTransferTransaction: aDepositTransferTransactions! !
!PortfolioStructureReport methodsFor: 'nil' stamp: 'EMI 11/15/2020 22:49:42' overrides: 50909587!
reportExtractionTransferTransaction: aExtractionTransferTransaction! !
!PortfolioStructureReport methodsFor: 'nil' stamp: 'EMI 11/15/2020 22:49:54' overrides: 50909576!
reportWithdrawTransaction: aWithdrawTransaction! !

Report subclass: #AccountSummaryReport
	instanceVariableNames: 'summaryCollection'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio2-Ejercicio'!

!classDefinition: #AccountSummaryReport category: 'Portfolio2-Ejercicio' stamp: 'EMI 11/15/2020 22:53:47'!
Report subclass: #AccountSummaryReport
	instanceVariableNames: 'summaryCollection'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio2-Ejercicio'!
!AccountSummaryReport methodsFor: 'reporting' stamp: 'EMI 11/15/2020 22:54:53' prior: 50909395 overrides: 50909567!
report
	summaryCollection _ OrderedCollection new.
	account reportTo: self.
	summaryCollection add: 'Balance = ', account balance asString, '.'.
	^summaryCollection.! !
!AccountSummaryReport methodsFor: 'reporting - private' stamp: 'EMI 11/15/2020 22:55:13' prior: 50908240 overrides: 50910997!
reportDepositTransaction: aDepositTransaction
	summaryCollection add: ('Dep�sito por ', aDepositTransaction value asString, '.').! !
!AccountSummaryReport methodsFor: 'reporting - private' stamp: 'EMI 11/15/2020 22:55:24' prior: 50908606 overrides: 50909581!
reportDepositTransferTransaction: aDepositTransferTransaction
	summaryCollection  add: ('Entrada por transferencia de ', aDepositTransferTransaction value asString, '.')! !
!AccountSummaryReport methodsFor: 'reporting - private' stamp: 'EMI 11/15/2020 22:55:35' prior: 50908614 overrides: 50909587!
reportExtractionTransferTransaction: aExtractionTransferTransaction
	summaryCollection add: ('Salida por transferencia de ', aExtractionTransferTransaction value asString, '.')! !
!AccountSummaryReport methodsFor: 'reporting - private' stamp: 'EMI 11/15/2020 22:55:46' prior: 50908457 overrides: 50909576!
reportWithdrawTransaction: aWithdrawTransaction
	summaryCollection add: ('Extracci�n por ', aWithdrawTransaction value asString, '.')! !
!AccountSummaryReport methodsFor: 'reporting - private' stamp: 'EMI 11/15/2020 22:55:54' prior: 50912541 overrides: 50909581!
reportDepositTransferTransaction: aDepositTransferTransaction
	summaryCollection add: ('Entrada por transferencia de ', aDepositTransferTransaction value asString, '.')! !
!ReceptiveAccount methodsFor: 'reports' stamp: 'EMI 11/15/2020 22:56:18' prior: 50912312 overrides: 50908371!
reportTo: aReport
	aReport reportAccount: self.
	transactions do:[:aTransaction |aTransaction reportTo: aReport].! !
!Portfolio methodsFor: 'reports' stamp: 'EMI 11/15/2020 22:56:55' prior: 50912289 overrides: 50908371!
reportTo: aReport
	aReport reportPortfolio: self.
	accounts do:[:anAccount | anAccount reportTo: aReport].
	! !

----SNAPSHOT----(15 November 2020 22:57:15) CuisUniversity-4383.image priorSource: 18581505!

!testRun: #AccountSummaryTest #test01AccountSummaryOfEmptyAccountOnlyShowsBalance stamp: 'EMI 11/15/2020 22:57:21'!
ERROR!

!testRun: #AccountSummaryTest #test02AccountSummaryOfAccountWithADepositShowDepositInfo stamp: 'EMI 11/15/2020 22:57:21'!
ERROR!

!testRun: #AccountSummaryTest #test03AccountSummaryOfAccountWithAWithdrawShowWithdrawInfo stamp: 'EMI 11/15/2020 22:57:21'!
ERROR!

!testRun: #AccountSummaryTest #test04AccountSummaryOfAccountWithAExtractionTransferShowExtractionTransferInfo stamp: 'EMI 11/15/2020 22:57:21'!
ERROR!

!testRun: #AccountSummaryTest #test05AccountSummaryOfAccountWithADepositTransferShowDepositTransferInfo stamp: 'EMI 11/15/2020 22:57:21'!
ERROR!

!testRun: #AccountSummaryTest #test06AccountSummaryOfAccountWithOneOfEachTransactionShowsCorrectInfo stamp: 'EMI 11/15/2020 22:57:21'!
ERROR!

!testRun: #AccountSummaryTest #test07AccountSummaryOfEmptyPortfolioOnlyShowsBalance stamp: 'EMI 11/15/2020 22:57:21'!
ERROR!

!testRun: #AccountSummaryTest #test08AccountSummaryOfPortfolioWithADeposit stamp: 'EMI 11/15/2020 22:57:21'!
ERROR!

!testRun: #AccountSummaryTest #test09AccountSummaryOfPortfolioWithAWithdraw stamp: 'EMI 11/15/2020 22:57:21'!
ERROR!

!testRun: #AccountSummaryTest #test10AccountSummaryOfPortfolioWithADepositTransfer stamp: 'EMI 11/15/2020 22:57:21'!
ERROR!

!testRun: #AccountSummaryTest #test11AccountSummaryOfPortfolioWithAExtractionTransfer stamp: 'EMI 11/15/2020 22:57:21'!
ERROR!

!testRun: #AccountSummaryTest #test01AccountSummaryOfEmptyAccountOnlyShowsBalance stamp: 'EMI 11/15/2020 22:57:23'!
ERROR!

!testRun: #AccountSummaryTest #test01AccountSummaryOfEmptyAccountOnlyShowsBalance stamp: 'EMI 11/15/2020 22:57:47'!
ERROR!

!testRun: #AccountSummaryTest #test02AccountSummaryOfAccountWithADepositShowDepositInfo stamp: 'EMI 11/15/2020 22:57:47'!
ERROR!

!testRun: #AccountSummaryTest #test03AccountSummaryOfAccountWithAWithdrawShowWithdrawInfo stamp: 'EMI 11/15/2020 22:57:47'!
ERROR!

!testRun: #AccountSummaryTest #test04AccountSummaryOfAccountWithAExtractionTransferShowExtractionTransferInfo stamp: 'EMI 11/15/2020 22:57:47'!
ERROR!

!testRun: #AccountSummaryTest #test05AccountSummaryOfAccountWithADepositTransferShowDepositTransferInfo stamp: 'EMI 11/15/2020 22:57:47'!
ERROR!

!testRun: #AccountSummaryTest #test06AccountSummaryOfAccountWithOneOfEachTransactionShowsCorrectInfo stamp: 'EMI 11/15/2020 22:57:47'!
ERROR!

!testRun: #AccountSummaryTest #test07AccountSummaryOfEmptyPortfolioOnlyShowsBalance stamp: 'EMI 11/15/2020 22:57:47'!
ERROR!

!testRun: #AccountSummaryTest #test08AccountSummaryOfPortfolioWithADeposit stamp: 'EMI 11/15/2020 22:57:47'!
ERROR!

!testRun: #AccountSummaryTest #test09AccountSummaryOfPortfolioWithAWithdraw stamp: 'EMI 11/15/2020 22:57:47'!
ERROR!

!testRun: #AccountSummaryTest #test10AccountSummaryOfPortfolioWithADepositTransfer stamp: 'EMI 11/15/2020 22:57:47'!
ERROR!

!testRun: #AccountSummaryTest #test11AccountSummaryOfPortfolioWithAExtractionTransfer stamp: 'EMI 11/15/2020 22:57:47'!
ERROR!

!testRun: #AccountSummaryTest #test01AccountSummaryOfEmptyAccountOnlyShowsBalance stamp: 'EMI 11/15/2020 22:57:48'!
ERROR!
!AccountSummaryReport methodsFor: 'reporting' stamp: 'EMI 11/15/2020 22:58:06'!
reportAccount: aReceptiveAccount 
	self shouldBeImplemented.! !
!AccountSummaryReport methodsFor: 'reporting' stamp: 'EMI 11/15/2020 22:58:13' prior: 50912693!
reportAccount: aReceptiveAccount! !

!testRun: #AccountSummaryTest #test01AccountSummaryOfEmptyAccountOnlyShowsBalance stamp: 'EMI 11/15/2020 22:58:18'!
PASSED!

!testRun: #AccountSummaryTest #test02AccountSummaryOfAccountWithADepositShowDepositInfo stamp: 'EMI 11/15/2020 22:58:20'!
PASSED!

!testRun: #AccountSummaryTest #test03AccountSummaryOfAccountWithAWithdrawShowWithdrawInfo stamp: 'EMI 11/15/2020 22:58:22'!
PASSED!

!testRun: #AccountSummaryTest #test04AccountSummaryOfAccountWithAExtractionTransferShowExtractionTransferInfo stamp: 'EMI 11/15/2020 22:58:23'!
PASSED!

!testRun: #AccountSummaryTest #test05AccountSummaryOfAccountWithADepositTransferShowDepositTransferInfo stamp: 'EMI 11/15/2020 22:58:24'!
PASSED!

!testRun: #AccountSummaryTest #test06AccountSummaryOfAccountWithOneOfEachTransactionShowsCorrectInfo stamp: 'EMI 11/15/2020 22:58:24'!
PASSED!

!testRun: #AccountSummaryTest #test07AccountSummaryOfEmptyPortfolioOnlyShowsBalance stamp: 'EMI 11/15/2020 22:58:25'!
ERROR!
!AccountSummaryReport methodsFor: 'reporting' stamp: 'EMI 11/15/2020 22:58:36'!
reportPortfolio: aPortfolio 
	self shouldBeImplemented.! !
!AccountSummaryReport methodsFor: 'reporting' stamp: 'EMI 11/15/2020 22:58:40' prior: 50912732!
reportPortfolio: aPortfolio ! !

!testRun: #AccountSummaryTest #test07AccountSummaryOfEmptyPortfolioOnlyShowsBalance stamp: 'EMI 11/15/2020 22:58:41'!
PASSED!

!testRun: #AccountSummaryTest #test08AccountSummaryOfPortfolioWithADeposit stamp: 'EMI 11/15/2020 22:58:43'!
PASSED!

!testRun: #AccountSummaryTest #test09AccountSummaryOfPortfolioWithAWithdraw stamp: 'EMI 11/15/2020 22:58:43'!
PASSED!

!testRun: #AccountSummaryTest #test10AccountSummaryOfPortfolioWithADepositTransfer stamp: 'EMI 11/15/2020 22:58:44'!
PASSED!

!testRun: #AccountSummaryTest #test11AccountSummaryOfPortfolioWithAExtractionTransfer stamp: 'EMI 11/15/2020 22:58:44'!
PASSED!

!testRun: #AccountSummaryTest #test01AccountSummaryOfEmptyAccountOnlyShowsBalance stamp: 'EMI 11/15/2020 22:58:47'!
PASSED!

!testRun: #AccountSummaryTest #test02AccountSummaryOfAccountWithADepositShowDepositInfo stamp: 'EMI 11/15/2020 22:58:47'!
PASSED!

!testRun: #AccountSummaryTest #test03AccountSummaryOfAccountWithAWithdrawShowWithdrawInfo stamp: 'EMI 11/15/2020 22:58:47'!
PASSED!

!testRun: #AccountSummaryTest #test04AccountSummaryOfAccountWithAExtractionTransferShowExtractionTransferInfo stamp: 'EMI 11/15/2020 22:58:47'!
PASSED!

!testRun: #AccountSummaryTest #test05AccountSummaryOfAccountWithADepositTransferShowDepositTransferInfo stamp: 'EMI 11/15/2020 22:58:47'!
PASSED!

!testRun: #AccountSummaryTest #test06AccountSummaryOfAccountWithOneOfEachTransactionShowsCorrectInfo stamp: 'EMI 11/15/2020 22:58:47'!
PASSED!

!testRun: #AccountSummaryTest #test07AccountSummaryOfEmptyPortfolioOnlyShowsBalance stamp: 'EMI 11/15/2020 22:58:47'!
PASSED!

!testRun: #AccountSummaryTest #test08AccountSummaryOfPortfolioWithADeposit stamp: 'EMI 11/15/2020 22:58:47'!
PASSED!

!testRun: #AccountSummaryTest #test09AccountSummaryOfPortfolioWithAWithdraw stamp: 'EMI 11/15/2020 22:58:47'!
PASSED!

!testRun: #AccountSummaryTest #test10AccountSummaryOfPortfolioWithADepositTransfer stamp: 'EMI 11/15/2020 22:58:47'!
PASSED!

!testRun: #AccountSummaryTest #test11AccountSummaryOfPortfolioWithAExtractionTransfer stamp: 'EMI 11/15/2020 22:58:47'!
PASSED!

Report subclass: #NetTransfersReport
	instanceVariableNames: 'transfersCollection'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio2-Ejercicio'!

!classDefinition: #NetTransfersReport category: 'Portfolio2-Ejercicio' stamp: 'EMI 11/15/2020 22:59:58'!
Report subclass: #NetTransfersReport
	instanceVariableNames: 'transfersCollection'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio2-Ejercicio'!
!NetTransfersReport methodsFor: 'reporting' stamp: 'EMI 11/15/2020 23:01:06' prior: 50910721 overrides: 50909567!
report
	transfersCollection _ OrderedCollection new.
	account reportTo: self.
	^transfersCollection sum: [:aTransferAmount | aTransferAmount] ifEmpty: [0].
	! !
!NetTransfersReport methodsFor: 'reporting - private' stamp: 'EMI 11/15/2020 23:01:30' prior: 50910535 overrides: 50910997!
reportDepositTransaction: aDepositTransaction
	transfersCollection add: 0.! !
!NetTransfersReport methodsFor: 'reporting - private' stamp: 'EMI 11/15/2020 23:01:53' prior: 50910546 overrides: 50909581!
reportDepositTransferTransaction: aDepositTransferTransaction
	transfersCollection add: aDepositTransferTransaction value.! !
!NetTransfersReport methodsFor: 'reporting - private' stamp: 'EMI 11/15/2020 23:01:57' prior: 50910553 overrides: 50909587!
reportExtractionTransferTransaction: aExtractionTransferTransaction
	transfersCollection add: aExtractionTransferTransaction value negated.! !
!NetTransfersReport methodsFor: 'reporting - private' stamp: 'EMI 11/15/2020 23:02:06' prior: 50910541 overrides: 50909576!
reportWithdrawTransaction: aWithdrawTransaction
	transfersCollection add: 0! !

----SNAPSHOT----(15 November 2020 23:02:26) CuisUniversity-4383.image priorSource: 18590127!

!testRun: #NetTransfersReportTest #test01NetTransferReportOfEmptyAccountReturnsZero stamp: 'EMI 11/15/2020 23:02:29'!
ERROR!

!testRun: #NetTransfersReportTest #test02NetTransferReportOfAccountWithADepositTransferReturnsCorrectly stamp: 'EMI 11/15/2020 23:02:29'!
ERROR!

!testRun: #NetTransfersReportTest #test03NetTransferReportOfAccountWithAExtractionTransferReturnsCorrectly stamp: 'EMI 11/15/2020 23:02:29'!
ERROR!

!testRun: #NetTransfersReportTest #test04NetTransferReportOfAccountWithADepositReturnsZero stamp: 'EMI 11/15/2020 23:02:29'!
ERROR!

!testRun: #NetTransfersReportTest #test05NetTransferReportOfEmptyPortfolioReturnsZero stamp: 'EMI 11/15/2020 23:02:29'!
ERROR!

!testRun: #NetTransfersReportTest #test06NetTransferReportOfPortfolioWithAccountAndATransferReturnsCorrectly stamp: 'EMI 11/15/2020 23:02:29'!
ERROR!

!testRun: #NetTransfersReportTest #test07NetTransferReportOfPortfoliosWithAccountAndATransferReturnsCorrectly stamp: 'EMI 11/15/2020 23:02:29'!
ERROR!

!testRun: #NetTransfersReportTest #test08NetTransferReportOfPortfolioTreeOfHeightThreeReturnsCorrectly stamp: 'EMI 11/15/2020 23:02:29'!
ERROR!

!testRun: #NetTransfersReportTest #test01NetTransferReportOfEmptyAccountReturnsZero stamp: 'EMI 11/15/2020 23:02:30'!
ERROR!
!NetTransfersReport methodsFor: 'reporting' stamp: 'EMI 11/15/2020 23:02:40'!
reportAccount: aReceptiveAccount 
	self shouldBeImplemented.! !
!NetTransfersReport methodsFor: 'reporting' stamp: 'EMI 11/15/2020 23:02:44' prior: 50912901!
reportAccount: aReceptiveAccount ! !

!testRun: #NetTransfersReportTest #test01NetTransferReportOfEmptyAccountReturnsZero stamp: 'EMI 11/15/2020 23:02:46'!
PASSED!

!testRun: #NetTransfersReportTest #test02NetTransferReportOfAccountWithADepositTransferReturnsCorrectly stamp: 'EMI 11/15/2020 23:02:47'!
PASSED!

!testRun: #NetTransfersReportTest #test03NetTransferReportOfAccountWithAExtractionTransferReturnsCorrectly stamp: 'EMI 11/15/2020 23:02:48'!
PASSED!

!testRun: #NetTransfersReportTest #test04NetTransferReportOfAccountWithADepositReturnsZero stamp: 'EMI 11/15/2020 23:02:49'!
PASSED!

!testRun: #NetTransfersReportTest #test05NetTransferReportOfEmptyPortfolioReturnsZero stamp: 'EMI 11/15/2020 23:02:49'!
ERROR!
!NetTransfersReport methodsFor: 'reporting' stamp: 'EMI 11/15/2020 23:02:58'!
reportPortfolio: aPortfolio 
	self shouldBeImplemented.! !
!NetTransfersReport methodsFor: 'reporting' stamp: 'EMI 11/15/2020 23:03:03' prior: 50912932!
reportPortfolio: aPortfolio! !

!testRun: #NetTransfersReportTest #test05NetTransferReportOfEmptyPortfolioReturnsZero stamp: 'EMI 11/15/2020 23:03:04'!
PASSED!

!testRun: #NetTransfersReportTest #test06NetTransferReportOfPortfolioWithAccountAndATransferReturnsCorrectly stamp: 'EMI 11/15/2020 23:03:06'!
PASSED!

!testRun: #NetTransfersReportTest #test07NetTransferReportOfPortfoliosWithAccountAndATransferReturnsCorrectly stamp: 'EMI 11/15/2020 23:03:07'!
PASSED!

!testRun: #NetTransfersReportTest #test08NetTransferReportOfPortfolioTreeOfHeightThreeReturnsCorrectly stamp: 'EMI 11/15/2020 23:03:07'!
PASSED!

!testRun: #NetTransfersReportTest #test01NetTransferReportOfEmptyAccountReturnsZero stamp: 'EMI 11/15/2020 23:03:10'!
PASSED!

!testRun: #NetTransfersReportTest #test02NetTransferReportOfAccountWithADepositTransferReturnsCorrectly stamp: 'EMI 11/15/2020 23:03:10'!
PASSED!

!testRun: #NetTransfersReportTest #test03NetTransferReportOfAccountWithAExtractionTransferReturnsCorrectly stamp: 'EMI 11/15/2020 23:03:10'!
PASSED!

!testRun: #NetTransfersReportTest #test04NetTransferReportOfAccountWithADepositReturnsZero stamp: 'EMI 11/15/2020 23:03:10'!
PASSED!

!testRun: #NetTransfersReportTest #test05NetTransferReportOfEmptyPortfolioReturnsZero stamp: 'EMI 11/15/2020 23:03:10'!
PASSED!

!testRun: #NetTransfersReportTest #test06NetTransferReportOfPortfolioWithAccountAndATransferReturnsCorrectly stamp: 'EMI 11/15/2020 23:03:10'!
PASSED!

!testRun: #NetTransfersReportTest #test07NetTransferReportOfPortfoliosWithAccountAndATransferReturnsCorrectly stamp: 'EMI 11/15/2020 23:03:10'!
PASSED!

!testRun: #NetTransfersReportTest #test08NetTransferReportOfPortfolioTreeOfHeightThreeReturnsCorrectly stamp: 'EMI 11/15/2020 23:03:10'!
PASSED!
!Report methodsFor: 'reporting - private' stamp: 'EMI 11/15/2020 23:04:15'!
reportAccount: anAccount.
	self subclassResponsibility.! !
!Report methodsFor: 'reporting - private' stamp: 'EMI 11/15/2020 23:04:28'!
reportPortfolio: aPortfolio.
	self subclassResponsibility.! !

----SNAPSHOT----(15 November 2020 23:05:33) CuisUniversity-4383.image priorSource: 18598638!

!testRun: #PortfolioStructureReportTest #test02ReportOfASimplePortfolioStructureHasCorrectNamesAndIdentation stamp: 'EMI 11/15/2020 23:05:49'!
FAILURE!

!testRun: #PortfolioStructureReportTest #test02ReportOfASimplePortfolioStructureHasCorrectNamesAndIdentation stamp: 'EMI 11/15/2020 23:05:49'!
FAILURE!

!testRun: #PortfolioStructureReportTest #test01ReportOfAnEmptyPortfolioStructureHasCorrectName stamp: 'EMI 11/15/2020 23:06:19'!
FAILURE!

!testRun: #PortfolioStructureReportTest #test02ReportOfASimplePortfolioStructureHasCorrectNamesAndIdentation stamp: 'EMI 11/15/2020 23:06:19'!
FAILURE!

!testRun: #PortfolioStructureReportTest #test01ReportOfAnEmptyPortfolioStructureHasCorrectName stamp: 'EMI 11/15/2020 23:06:57'!
FAILURE!

!testRun: #PortfolioStructureReportTest #test02ReportOfASimplePortfolioStructureHasCorrectNamesAndIdentation stamp: 'EMI 11/15/2020 23:06:57'!
FAILURE!

!testRun: #PortfolioStructureReportTest #test01ReportOfAnEmptyPortfolioStructureHasCorrectName stamp: 'EMI 11/15/2020 23:07:00'!
FAILURE!
!Portfolio methodsFor: 'initialization' stamp: 'EMI 11/15/2020 23:07:56' prior: 50911950 overrides: 16896425!
initialize
	portfolioName _ 'Unnamed Portfolio'.
	accounts := OrderedCollection new.
	parents := OrderedCollection new.! !
!ReceptiveAccount methodsFor: 'initialization' stamp: 'EMI 11/15/2020 23:08:02' prior: 50911717 overrides: 16896425!
initialize
	super initialize.
	transactions := OrderedCollection new.
	accountName _ 'Unnamed Account'.! !
!PortfolioStructureReportTest methodsFor: 'as yet unclassified' stamp: 'EMI 11/15/2020 23:08:15' prior: 50912206!
test02ReportOfASimplePortfolioStructureHasCorrectNamesAndIdentation
	| portfolio account report expectedResult |
	portfolio _ Portfolio new.
	account _ ReceptiveAccount new.
	portfolio add: account.
	report _ PortfolioStructureReport of: portfolio.
	
	expectedResult _ OrderedCollection with: 'Portfolio de Unnamed Portfolio' with: '   Cuenta de Unnamed Account'.
	self assert: report report equals: expectedResult.! !

!testRun: #PortfolioStructureReportTest #test01ReportOfAnEmptyPortfolioStructureHasCorrectName stamp: 'EMI 11/15/2020 23:08:18'!
PASSED!

!testRun: #PortfolioStructureReportTest #test02ReportOfASimplePortfolioStructureHasCorrectNamesAndIdentation stamp: 'EMI 11/15/2020 23:08:18'!
PASSED!
!PortfolioStructureReportTest methodsFor: 'as yet unclassified' stamp: 'EMI 11/15/2020 23:08:52'!
test03ReportOfAListPortfolioStructureHasCorrectNamesAndIdentation
	| portfolio account report expectedResult |
	portfolio _ Portfolio new.
	account _ ReceptiveAccount new.
	portfolio add: account.
	report _ PortfolioStructureReport of: portfolio.
	
	expectedResult _ OrderedCollection with: 'Portfolio de Unnamed Portfolio' with: '   Cuenta de Unnamed Account'.
	self assert: report report equals: expectedResult.! !
!PortfolioStructureReportTest methodsFor: 'as yet unclassified' stamp: 'EMI 11/15/2020 23:10:44' prior: 50913082!
test03ReportOfAListPortfolioStructureHasCorrectNamesAndIdentation
	| portfolio portfolioChild account report expectedResult |
	portfolio _ Portfolio new.
	portfolioChild _ Portfolio new.
	account _ ReceptiveAccount new.
	portfolioChild add: account.
	report _ PortfolioStructureReport of: portfolio.
	
	expectedResult _ OrderedCollection with: 'Portfolio de Unnamed Portfolio' with: '   Portfolio de Unnamed Portfolio' with: '      Cuenta de Unnamed Account'.
	self assert: report report equals: expectedResult.! !

!testRun: #PortfolioStructureReportTest #test03ReportOfAListPortfolioStructureHasCorrectNamesAndIdentation stamp: 'EMI 11/15/2020 23:10:51'!
FAILURE!
!PortfolioStructureReportTest methodsFor: 'as yet unclassified' stamp: 'EMI 11/15/2020 23:11:38' prior: 50913099!
test03ReportOfAListPortfolioStructureHasCorrectNamesAndIdentation
	| portfolio portfolioChild account report expectedResult |
	portfolio _ Portfolio new.
	portfolioChild _ Portfolio new.
	account _ ReceptiveAccount new.
	portfolioChild add: account.
	portfolio add: portfolioChild.
	report _ PortfolioStructureReport of: portfolio.
	
	expectedResult _ OrderedCollection with: 'Portfolio de Unnamed Portfolio' with: '   Portfolio de Unnamed Portfolio' with: '      Cuenta de Unnamed Account'.
	self assert: report report equals: expectedResult.! !

!testRun: #PortfolioStructureReportTest #test03ReportOfAListPortfolioStructureHasCorrectNamesAndIdentation stamp: 'EMI 11/15/2020 23:11:39'!
PASSED!

!testRun: #PortfolioStructureReportTest #test01ReportOfAnEmptyPortfolioStructureHasCorrectName stamp: 'EMI 11/15/2020 23:11:39'!
PASSED!

!testRun: #PortfolioStructureReportTest #test02ReportOfASimplePortfolioStructureHasCorrectNamesAndIdentation stamp: 'EMI 11/15/2020 23:11:39'!
PASSED!

!testRun: #PortfolioStructureReportTest #test03ReportOfAListPortfolioStructureHasCorrectNamesAndIdentation stamp: 'EMI 11/15/2020 23:11:39'!
PASSED!
!PortfolioStructureReportTest methodsFor: 'as yet unclassified' stamp: 'EMI 11/15/2020 23:12:07'!
test04ReportOfAListOfNamedPortfolioStructureHasCorrectNamesAndIdentation
	| portfolio portfolioChild account report expectedResult |
	portfolio _ Portfolio new.
	portfolioChild _ Portfolio new.
	account _ ReceptiveAccount new.
	portfolioChild add: account.
	portfolio add: portfolioChild.
	report _ PortfolioStructureReport of: portfolio.
	
	expectedResult _ OrderedCollection with: 'Portfolio de Unnamed Portfolio' with: '   Portfolio de Unnamed Portfolio' with: '      Cuenta de Unnamed Account'.
	self assert: report report equals: expectedResult.! !
!PortfolioStructureReportTest methodsFor: 'as yet unclassified' stamp: 'EMI 11/15/2020 23:13:33' prior: 50913163!
test04ReportOfAListOfNamedPortfolioStructureHasCorrectNamesAndIdentation
	| portfolio portfolioChild account report expectedResult |
	portfolio _ Portfolio withName: 'Compania 1'.
	portfolioChild _ Portfolio withName: 'Pepe'.
	account _ ReceptiveAccount withName: 'Lavado de dinero'.
	portfolioChild add: account.
	portfolio add: portfolioChild.
	report _ PortfolioStructureReport of: portfolio.
	
	expectedResult _ OrderedCollection with: 'Portfolio de Compania 1' with: '   Portfolio de Pepe' with: '      Cuenta de Lavado de dinero'.
	self assert: report report equals: expectedResult.! !

!testRun: #PortfolioStructureReportTest #test04ReportOfAListOfNamedPortfolioStructureHasCorrectNamesAndIdentation stamp: 'EMI 11/15/2020 23:13:37'!
PASSED!

!testRun: #PortfolioStructureReportTest #test01ReportOfAnEmptyPortfolioStructureHasCorrectName stamp: 'EMI 11/15/2020 23:13:37'!
PASSED!

!testRun: #PortfolioStructureReportTest #test02ReportOfASimplePortfolioStructureHasCorrectNamesAndIdentation stamp: 'EMI 11/15/2020 23:13:37'!
PASSED!

!testRun: #PortfolioStructureReportTest #test03ReportOfAListPortfolioStructureHasCorrectNamesAndIdentation stamp: 'EMI 11/15/2020 23:13:37'!
PASSED!

!testRun: #PortfolioStructureReportTest #test04ReportOfAListOfNamedPortfolioStructureHasCorrectNamesAndIdentation stamp: 'EMI 11/15/2020 23:13:37'!
PASSED!

TestCase subclass: #AccountSpecialReportTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio2-Ejercicio'!

!classDefinition: #AccountSpecialReportTest category: 'Portfolio2-Ejercicio' stamp: 'EMI 11/15/2020 23:16:44'!
TestCase subclass: #AccountSpecialReportTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio2-Ejercicio'!

!classDefinition: #AccountSpecialReport category: 'Portfolio2-Ejercicio' stamp: 'EMI 11/15/2020 23:19:32'!
Report subclass: #AccountSpecialReport
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio2-Ejercicio'!
!AccountSpecialReportTest methodsFor: 'nil' stamp: 'EMI 11/15/2020 23:18:54'!
test01EmptyPortfolioOnlyShowsName
	| portfolio report expectedResult |
	portfolio _ Portfolio new.
	report _ AccountSpecialReport of: portfolio.
	expectedResult _ OrderedCollection with: 'Portfolio de Unnamed Portfolio'.
	self assert: report report equals: expectedResult.! !
!AccountSpecialReport methodsFor: 'nil' stamp: 'EMI 11/15/2020 23:19:54'!
initializeOf: anAccount
	account _ anAccount.! !
!AccountSpecialReport methodsFor: 'nil' stamp: 'EMI 11/15/2020 23:20:13' overrides: 50909567!
report
	^'Unnamed Portfolio'.! !

!testRun: #AccountSpecialReportTest #test01EmptyPortfolioOnlyShowsName stamp: 'EMI 11/15/2020 23:20:20'!
FAILURE!

!testRun: #AccountSpecialReportTest #test01EmptyPortfolioOnlyShowsName stamp: 'EMI 11/15/2020 23:20:20'!
FAILURE!
!AccountSpecialReport methodsFor: 'as yet unclassified' stamp: 'EMI 11/15/2020 23:20:38' prior: 50913266 overrides: 50909567!
report
	^OrderedCollection with: 'Unnamed Portfolio'.! !

!testRun: #AccountSpecialReportTest #test01EmptyPortfolioOnlyShowsName stamp: 'EMI 11/15/2020 23:20:43'!
FAILURE!

!testRun: #AccountSpecialReportTest #test01EmptyPortfolioOnlyShowsName stamp: 'EMI 11/15/2020 23:20:43'!
FAILURE!
!AccountSpecialReport methodsFor: 'as yet unclassified' stamp: 'EMI 11/15/2020 23:21:00' prior: 50913279 overrides: 50909567!
report
	^OrderedCollection with: 'Portfolio de Unnamed Portfolio'.! !

!testRun: #AccountSpecialReportTest #test01EmptyPortfolioOnlyShowsName stamp: 'EMI 11/15/2020 23:21:04'!
PASSED!
!AccountSpecialReportTest methodsFor: 'as yet unclassified' stamp: 'EMI 11/15/2020 23:21:54'!
test02PortfolioWithAnAccountWithADepositShowsNamesAndIdentation
	| portfolio report expectedResult |
	portfolio _ Portfolio new.
	report _ AccountSpecialReport of: portfolio.
	expectedResult _ OrderedCollection with: 'Portfolio de Unnamed Portfolio'.
	self assert: report report equals: expectedResult.! !
!AccountSpecialReportTest methodsFor: 'as yet unclassified' stamp: 'EMI 11/15/2020 23:23:51' prior: 50913301!
test02PortfolioWithAnAccountWithADepositShowsNamesAndIdentation
	| portfolio account report expectedResult |
	portfolio _ Portfolio withName: 'Compania de Pepe'.
	account _ ReceptiveAccount withName: 'Suiza'.
	report _ AccountSpecialReport of: portfolio.
	expectedResult _ OrderedCollection with: 'Portfolio de Compania de Pepe' with: 'Cuenta de Suiza'.
	self assert: report report equals: expectedResult.! !
!AccountSpecialReportTest methodsFor: 'as yet unclassified' stamp: 'EMI 11/15/2020 23:24:02' prior: 50913314!
test02PortfolioWithAnAccountWithADepositShowsNamesAndIdentation
	| portfolio account report expectedResult |
	portfolio _ Portfolio withName: 'Compania de Pepe'.
	account _ ReceptiveAccount withName: 'Suiza'.
	portfolio add: account.
	report _ AccountSpecialReport of: portfolio.
	expectedResult _ OrderedCollection with: 'Portfolio de Compania de Pepe' with: 'Cuenta de Suiza'.
	self assert: report report equals: expectedResult.! !

!testRun: #AccountSpecialReportTest #test02PortfolioWithAnAccountWithADepositShowsNamesAndIdentation stamp: 'EMI 11/15/2020 23:24:03'!
FAILURE!
!AccountSpecialReportTest methodsFor: 'as yet unclassified' stamp: 'EMI 11/15/2020 23:24:11' prior: 50913331!
test02PortfolioWithAnAccountWithADepositShowsNamesAndIdentation
	| portfolio account report expectedResult |
	portfolio _ Portfolio withName: 'Compania de Pepe'.
	account _ ReceptiveAccount withName: 'Suiza'.
	portfolio add: account.
	report _ AccountSpecialReport of: portfolio.
	expectedResult _ OrderedCollection with: 'Portfolio de Compania de Pepe' with: '   Cuenta de Suiza'.
	self assert: report report equals: expectedResult.! !

!testRun: #AccountSpecialReportTest #test02PortfolioWithAnAccountWithADepositShowsNamesAndIdentation stamp: 'EMI 11/15/2020 23:24:21'!
FAILURE!
!AccountSpecialReportTest methodsFor: 'as yet unclassified' stamp: 'EMI 11/15/2020 23:25:51' prior: 50913353!
test02PortfolioWithAnAccountWithADepositShowsNamesAndIdentation
	| portfolio account report expectedResult |
	portfolio _ Portfolio withName: 'Compania de Pepe'.
	account _ ReceptiveAccount withName: 'Suiza'.
	Deposit register: 10 on: account.
	portfolio add: account.
	report _ AccountSpecialReport of: portfolio.
	expectedResult _ OrderedCollection with: 'Portfolio de Compania de Pepe' with: '   Cuenta de Suiza' with: '      Dep�sito por 10' with: '      Balance = 10'.
	self assert: report report equals: expectedResult.! !
!PortfolioStructureReportTest class methodsFor: 'nil' stamp: 'EMI 11/15/2020 23:26:51'!
identString: aString amount: anAmount
	^(String new: (3*anAmount) withAll: Character space), aString.! !
!NetTransfersReportTest class methodsFor: 'nil' stamp: 'EMI 11/15/2020 23:27:15'!
identString: aString amount: anAmount
	^(String new: (3*anAmount) withAll: Character space), aString.! !
!AccountSpecialReportTest class methodsFor: 'nil' stamp: 'EMI 11/15/2020 23:27:38'!
identString: aString amount: anAmount
	^(String new: (3*anAmount) withAll: Character space), aString.! !

!methodRemoval: NetTransfersReportTest class #identString:amount: stamp: 'EMI 11/15/2020 23:27:45'!
identString: aString amount: anAmount
	^(String new: (3*anAmount) withAll: Character space), aString.!
!AccountSpecialReportTest methodsFor: 'as yet unclassified' stamp: 'EMI 11/15/2020 23:28:41' prior: 50913375!
test02PortfolioWithAnAccountWithADepositShowsNamesAndIdentation
	| portfolio account report expectedResult |
	portfolio _ Portfolio withName: 'Compania de Pepe'.
	account _ ReceptiveAccount withName: 'Suiza'.
	Deposit register: 10 on: account.
	portfolio add: account.
	report _ AccountSpecialReport of: portfolio.
	expectedResult _ OrderedCollection with: 'Portfolio de Compania de Pepe' with: (self class identString: 'Cuenta de Suiza' amount: 1) with: '      Dep�sito por 10' with: '      Balance = 10'.
	self assert: report report equals: expectedResult.! !
!AccountSpecialReportTest methodsFor: 'as yet unclassified' stamp: 'EMI 11/15/2020 23:29:48' prior: 50913421!
test02PortfolioWithAnAccountWithADepositShowsNamesAndIdentation
	| portfolio account report expectedResult |
	portfolio _ Portfolio withName: 'Compania de Pepe'.
	account _ ReceptiveAccount withName: 'Suiza'.
	Deposit register: 10 on: account.
	portfolio add: account.
	report _ AccountSpecialReport of: portfolio.
	expectedResult _ OrderedCollection with: 'Portfolio de Compania de Pepe' 
		with: (self class identString: 'Cuenta de Suiza' amount: 1) 
		with: (self class identString: 'Dep�sito por 10' amount: 2) 
		with: (self class identString: 'Balance = 10' amount: 2).
	self assert: report report equals: expectedResult.! !
!AccountSpecialReportTest methodsFor: 'as yet unclassified' stamp: 'EMI 11/15/2020 23:30:05' prior: 50913442!
test02PortfolioWithAnAccountWithADepositShowsNamesAndIdentation
	| portfolio account report expectedResult |
	portfolio _ Portfolio withName: 'Compania de Pepe'.
	account _ ReceptiveAccount withName: 'Suiza'.
	Deposit register: 10 on: account.
	portfolio add: account.
	report _ AccountSpecialReport of: portfolio.
	expectedResult _ OrderedCollection with: 'Portfolio de Compania de Pepe' 
								    with: (self class identString: 'Cuenta de Suiza' amount: 1) 
								    with: (self class identString: 'Dep�sito por 10' amount: 2) 
								    with: (self class identString: 'Balance = 10' amount: 2).
	self assert: report report equals: expectedResult.! !

!testRun: #AccountSpecialReportTest #test02PortfolioWithAnAccountWithADepositShowsNamesAndIdentation stamp: 'EMI 11/15/2020 23:30:20'!
FAILURE!

!classDefinition: #AccountSpecialReport category: 'Portfolio2-Ejercicio' stamp: 'EMI 11/15/2020 23:31:18'!
Report subclass: #AccountSpecialReport
	instanceVariableNames: 'summaryCollection'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio2-Ejercicio'!
!AccountSpecialReport methodsFor: 'as yet unclassified' stamp: 'EMI 11/15/2020 23:31:16' prior: 50913292 overrides: 50909567!
report
       summaryCollection _ OrderedCollection new.
	account reportTo: self.
	^summaryCollection.! !

!testRun: #AccountSpecialReportTest #test01EmptyPortfolioOnlyShowsName stamp: 'EMI 11/15/2020 23:31:48'!
ERROR!

!testRun: #AccountSpecialReportTest #test02PortfolioWithAnAccountWithADepositShowsNamesAndIdentation stamp: 'EMI 11/15/2020 23:31:48'!
ERROR!

!testRun: #AccountSpecialReportTest #test01EmptyPortfolioOnlyShowsName stamp: 'EMI 11/15/2020 23:31:52'!
ERROR!
!AccountSpecialReport methodsFor: 'reporting - private' stamp: 'EMI 11/15/2020 23:32:07' overrides: 50913000!
reportPortfolio: aPortfolio 
	self shouldBeImplemented.! !
!AccountSpecialReportTest methodsFor: 'as yet unclassified' stamp: 'EMI 11/15/2020 23:34:23' prior: 50913250!
test01EmptyPortfolioOnlyShowsName
	| portfolio report expectedResult |
	portfolio _ Portfolio new.
	report _ AccountSpecialReport of: portfolio.
	expectedResult _ OrderedCollection with: 'Portfolio de Unnamed Portfolio' 
								    with: (self class identString: 'Balance = 0' amount: 1).
	self assert: report report equals: expectedResult.! !
!AccountSpecialReportTest methodsFor: 'as yet unclassified' stamp: 'EMI 11/15/2020 23:34:45' prior: 50913466!
test02PortfolioWithAnAccountWithADepositShowsNamesAndIdentation
	| portfolio account report expectedResult |
	portfolio _ Portfolio withName: 'Compania de Pepe'.
	account _ ReceptiveAccount withName: 'Suiza'.
	Deposit register: 10 on: account.
	portfolio add: account.
	report _ AccountSpecialReport of: portfolio.
	expectedResult _ OrderedCollection with: 'Portfolio de Compania de Pepe' 
								    with: (self class identString: 'Cuenta de Suiza' amount: 1) 
								    with: (self class identString: 'Dep�sito por 10' amount: 2) 
								    with: (self class identString: 'Balance = 10' amount: 2)
								    with: (self class identString: 'Balance = 10' amount: 1).
	self assert: report report equals: expectedResult.! !

!classDefinition: #AccountSpecialReport category: 'Portfolio2-Ejercicio' stamp: 'EMI 11/15/2020 23:35:46'!
Report subclass: #AccountSpecialReport
	instanceVariableNames: 'summaryCollection currentIdent'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio2-Ejercicio'!
!AccountSpecialReport methodsFor: 'reporting - private' stamp: 'EMI 11/15/2020 23:35:44' prior: 50913523 overrides: 50913000!
reportPortfolio: aPortfolio 
	summaryCollection add: (self identString: ('Portfolio de ', aPortfolio named)).
	currentIdent _ currentIdent + 1.! !
!Portfolio methodsFor: 'reports' stamp: 'EMI 11/15/2020 23:39:11' prior: 50912586 overrides: 50908371!
reportTo: aReport
	aReport reportPortfolio: self.
	accounts do:[:anAccount | anAccount reportTo: aReport].! !
!AccountSpecialReport methodsFor: 'as yet unclassified' stamp: 'EMI 11/15/2020 23:39:30' prior: 50913504 overrides: 50909567!
report
       summaryCollection _ OrderedCollection new.
	currentIdent _ 0.
	account reportTo: self.
	^summaryCollection.! !

!testRun: #AccountSpecialReportTest #test01EmptyPortfolioOnlyShowsName stamp: 'EMI 11/15/2020 23:40:08'!
ERROR!

!testRun: #AccountSpecialReportTest #test01EmptyPortfolioOnlyShowsName stamp: 'EMI 11/15/2020 23:40:27'!
ERROR!

!testRun: #AccountSpecialReportTest #test02PortfolioWithAnAccountWithADepositShowsNamesAndIdentation stamp: 'EMI 11/15/2020 23:40:27'!
ERROR!

!testRun: #AccountSpecialReportTest #test01EmptyPortfolioOnlyShowsName stamp: 'EMI 11/15/2020 23:40:29'!
ERROR!
!AccountSpecialReport methodsFor: 'nil' stamp: 'EMI 11/15/2020 23:41:11'!
identString: aString
	^(String new: (3*currentIdent) withAll: Character space), aString.! !

!testRun: #AccountSpecialReportTest #test01EmptyPortfolioOnlyShowsName stamp: 'EMI 11/15/2020 23:41:17'!
FAILURE!

!testRun: #AccountSpecialReportTest #test02PortfolioWithAnAccountWithADepositShowsNamesAndIdentation stamp: 'EMI 11/15/2020 23:41:17'!
ERROR!

!testRun: #AccountSpecialReportTest #test02PortfolioWithAnAccountWithADepositShowsNamesAndIdentation stamp: 'EMI 11/15/2020 23:41:19'!
ERROR!
!AccountSpecialReport methodsFor: 'reporting - private' stamp: 'EMI 11/15/2020 23:41:40' overrides: 50912995!
reportAccount: aReceptiveAccount 
	self shouldBeImplemented.! !
!AccountSpecialReport methodsFor: 'reporting - private' stamp: 'EMI 11/15/2020 23:43:45' prior: 50913637 overrides: 50912995!
reportAccount: aReceptiveAccount 
	| summary summaryReport|
	summaryCollection add: (self identString: ('Cuenta de ', aReceptiveAccount named)).
	
	summary _ AccountSummaryReport of: aReceptiveAccount.
	summaryReport _ summary report.! !
!AccountSpecialReport methodsFor: 'as yet unclassified' stamp: 'EMI 11/15/2020 23:46:12'!
identString: aString withAmount: anAmount
	^(String new: (3*anAmount) withAll: Character space), aString.! !
!AccountSpecialReport methodsFor: 'reporting - private' stamp: 'EMI 11/15/2020 23:48:32' prior: 50913643 overrides: 50912995!
reportAccount: aReceptiveAccount 
	| summary summaryReport|
	summaryCollection add: (self identString: ('Cuenta de ', aReceptiveAccount named)).
	
	summary _ AccountSummaryReport of: aReceptiveAccount.
	summaryReport _ summary report.
	summaryReport do: [:aSummaryLine | summaryCollection add: (self identString: aSummaryLine withAmount: (currentIdent + 1))].! !
!AccountSpecialReport methodsFor: 'nil' stamp: 'EMI 11/15/2020 23:49:45' overrides: 50910997!
reportDepositTransaction: aDepositTransaction! !
!AccountSpecialReport methodsFor: 'nil' stamp: 'EMI 11/15/2020 23:49:56' overrides: 50909581!
reportDepositTransferTransaction: aDepositTransferTransaction! !
!AccountSpecialReport methodsFor: 'nil' stamp: 'EMI 11/15/2020 23:50:07' overrides: 50909587!
reportExtractionTransferTransaction: aExtractionTransferTransaction! !
!AccountSpecialReport methodsFor: 'nil' stamp: 'EMI 11/15/2020 23:50:18' overrides: 50909576!
reportWithdrawTransaction: aWithdrawTransaction! !
!AccountSpecialReportTest methodsFor: 'as yet unclassified' stamp: 'EMI 11/15/2020 23:51:45' prior: 50913544!
test02PortfolioWithAnAccountWithADepositShowsNamesAndIdentation
	| portfolio account report expectedResult |
	portfolio _ Portfolio withName: 'Compania de Pepe'.
	account _ ReceptiveAccount withName: 'Suiza'.
	Deposit register: 10 on: account.
	portfolio add: account.
	report _ AccountSpecialReport of: portfolio.
	expectedResult _ OrderedCollection with: 'Portfolio de Compania de Pepe' 
								    with: (self class identString: 'Cuenta de Suiza' amount: 1) 
								    with: (self class identString: 'Dep�sito por 10' amount: 2) 
								    with: (self class identString: 'Balance = 10' amount: 2).
								    "with: (self class identString: 'Balance = 10' amount: 1)."
	self assert: report report equals: expectedResult.! !

!testRun: #AccountSpecialReportTest #test01EmptyPortfolioOnlyShowsName stamp: 'EMI 11/15/2020 23:52:04'!
FAILURE!

!testRun: #AccountSpecialReportTest #test02PortfolioWithAnAccountWithADepositShowsNamesAndIdentation stamp: 'EMI 11/15/2020 23:52:04'!
FAILURE!

!testRun: #AccountSpecialReportTest #test01EmptyPortfolioOnlyShowsName stamp: 'EMI 11/15/2020 23:52:06'!
FAILURE!
!AccountSpecialReportTest methodsFor: 'as yet unclassified' stamp: 'EMI 11/15/2020 23:54:03' prior: 50913529!
test01EmptyPortfolioOnlyShowsName
	| portfolio report expectedResult |
	portfolio _ Portfolio new.
	report _ AccountSpecialReport of: portfolio.
	expectedResult _ OrderedCollection with: 'Portfolio de Unnamed Portfolio'. 
								    "with: (self class identString: 'Balance = 0' amount: 1)."
	self assert: report report equals: expectedResult.! !

!testRun: #AccountSpecialReportTest #test01EmptyPortfolioOnlyShowsName stamp: 'EMI 11/15/2020 23:54:05'!
PASSED!

!testRun: #AccountSpecialReportTest #test02PortfolioWithAnAccountWithADepositShowsNamesAndIdentation stamp: 'EMI 11/15/2020 23:54:05'!
FAILURE!

!testRun: #AccountSpecialReportTest #test02PortfolioWithAnAccountWithADepositShowsNamesAndIdentation stamp: 'EMI 11/15/2020 23:54:05'!
FAILURE!
!AccountSpecialReportTest methodsFor: 'as yet unclassified' stamp: 'EMI 11/15/2020 23:55:21' prior: 50913699!
test02PortfolioWithAnAccountWithADepositShowsNamesAndIdentation
	| portfolio account report expectedResult |
	portfolio _ Portfolio withName: 'Compania de Pepe'.
	account _ ReceptiveAccount withName: 'Suiza'.
	Deposit register: 10 on: account.
	portfolio add: account.
	report _ AccountSpecialReport of: portfolio.
	expectedResult _ OrderedCollection with: 'Portfolio de Compania de Pepe' 
								    with: (self class identString: 'Cuenta de Suiza' amount: 1) 
								    with: (self class identString: 'Dep�sito por 10.' amount: 2) 
								    with: (self class identString: 'Balance = 10.' amount: 2).
								    "with: (self class identString: 'Balance = 10' amount: 1)."
	self assert: report report equals: expectedResult.! !

!testRun: #AccountSpecialReportTest #test01EmptyPortfolioOnlyShowsName stamp: 'EMI 11/15/2020 23:55:27'!
PASSED!

!testRun: #AccountSpecialReportTest #test02PortfolioWithAnAccountWithADepositShowsNamesAndIdentation stamp: 'EMI 11/15/2020 23:55:27'!
PASSED!
!PortfolioStructureReportTest methodsFor: 'as yet unclassified' stamp: 'EMI 11/15/2020 23:57:16'!
test05ReportOfAListOfNamedPortfolioStructureHasCorrectNamesAndIdentation
	| portfolio portfolioChild  report expectedResult |
	portfolio _ Portfolio withName: 'Compania 1'.
	portfolioChild _ Portfolio withName: 'Pepe'.
	portfolio add: portfolioChild.
	report _ PortfolioStructureReport of: portfolio.
	
	expectedResult _ OrderedCollection with: 'Portfolio de Compania 1' with: '   Portfolio de Pepe' with: '      Cuenta de Lavado de dinero'.
	self assert: report report equals: expectedResult.! !
!PortfolioStructureReportTest methodsFor: 'as yet unclassified' stamp: 'EMI 11/15/2020 23:57:27' prior: 50913800!
test05ReportOfAListOfNamedPortfolioStructureHasCorrectNamesAndIdentation
	| portfolio portfolioChildLeft  report expectedResult |
	portfolio _ Portfolio withName: 'Compania 1'.
	portfolioChildLeft _ Portfolio withName: 'Pepe'.
	portfolio add: portfolioChildLeft.
	report _ PortfolioStructureReport of: portfolio.
	
	expectedResult _ OrderedCollection with: 'Portfolio de Compania 1' with: '   Portfolio de Pepe' with: '      Cuenta de Lavado de dinero'.
	self assert: report report equals: expectedResult.! !
!PortfolioStructureReportTest methodsFor: 'as yet unclassified' stamp: 'EMI 11/15/2020 23:57:40' prior: 50913820!
test05ReportOfAListOfNamedPortfolioStructureHasCorrectNamesAndIdentation
	| portfolio portfolioChildLeft portfolioChildRight report expectedResult |
	portfolio _ Portfolio withName: 'Compania 1'.
	portfolioChildLeft _ Portfolio withName: 'Pepe'.
	portfolio add: portfolioChildLeft.
	report _ PortfolioStructureReport of: portfolio.
	
	expectedResult _ OrderedCollection with: 'Portfolio de Compania 1' with: '   Portfolio de Pepe' with: '      Cuenta de Lavado de dinero'.
	self assert: report report equals: expectedResult.! !
!PortfolioStructureReportTest methodsFor: 'as yet unclassified' stamp: 'EMI 11/15/2020 23:58:38' prior: 50913840!
test05ReportOfAListOfNamedPortfolioStructureHasCorrectNamesAndIdentation
	| portfolio portfolioChildLeft portfolioChildRight report expectedResult |
	portfolio _ Portfolio withName: 'Compania 1'.
	portfolioChildLeft _ Portfolio withName: 'Pepe'.
	portfolioChildRight _ Portfolio withName: 'Jose'.
	portfolio add: portfolioChildLeft.
	portfolio add: portfolioChildRight.
	report _ PortfolioStructureReport of: portfolio.
	
	expectedResult _ OrderedCollection with: 'Portfolio de Compania 1' with: '   Portfolio de Pepe' with: '   Portfolio de Jose'.
	self assert: report report equals: expectedResult.! !

!testRun: #PortfolioStructureReportTest #test05ReportOfAListOfNamedPortfolioStructureHasCorrectNamesAndIdentation stamp: 'EMI 11/15/2020 23:58:45'!
FAILURE!

!testRun: #PortfolioStructureReportTest #test05ReportOfAListOfNamedPortfolioStructureHasCorrectNamesAndIdentation stamp: 'EMI 11/15/2020 23:58:45'!
FAILURE!
!AccountSpecialReport methodsFor: 'reporting - private' stamp: 'EMI 11/16/2020 00:00:43'!
beginReportPortfolio: aPortfolio 
	summaryCollection add: (self identString: ('Portfolio de ', aPortfolio named)).
	currentIdent _ currentIdent + 1.! !
!PortfolioStructureReport methodsFor: 'reporting - private' stamp: 'EMI 11/16/2020 00:00:43'!
beginReportPortfolio: aPortfolio
	reportCollection add: (self identString: ('Portfolio de ', aPortfolio named)).
	currentIdent _ currentIdent + 1.! !
!NetTransfersReport methodsFor: 'reporting - private' stamp: 'EMI 11/16/2020 00:00:43'!
beginReportPortfolio: aPortfolio! !
!Report methodsFor: 'reporting - private' stamp: 'EMI 11/16/2020 00:00:43'!
beginReportPortfolio: aPortfolio.
	self subclassResponsibility.! !
!AccountSummaryReport methodsFor: 'reporting - private' stamp: 'EMI 11/16/2020 00:00:43' overrides: 50913913!
beginReportPortfolio: aPortfolio ! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'EMI 11/16/2020 00:00:43' prior: 50913588 overrides: 50908371!
reportTo: aReport
	aReport beginReportPortfolio: self.
	accounts do:[:anAccount | anAccount reportTo: aReport].! !

!methodRemoval: AccountSpecialReport #reportPortfolio: stamp: 'EMI 11/16/2020 00:00:43'!
reportPortfolio: aPortfolio 
	summaryCollection add: (self identString: ('Portfolio de ', aPortfolio named)).
	currentIdent _ currentIdent + 1.!

!methodRemoval: PortfolioStructureReport #reportPortfolio: stamp: 'EMI 11/16/2020 00:00:43'!
reportPortfolio: aPortfolio
	reportCollection add: (self identString: ('Portfolio de ', aPortfolio named)).
	currentIdent _ currentIdent + 1.!

!methodRemoval: NetTransfersReport #reportPortfolio: stamp: 'EMI 11/16/2020 00:00:43'!
reportPortfolio: aPortfolio!

!methodRemoval: Report #reportPortfolio: stamp: 'EMI 11/16/2020 00:00:44'!
reportPortfolio: aPortfolio.
	self subclassResponsibility.!

!methodRemoval: AccountSummaryReport #reportPortfolio: stamp: 'EMI 11/16/2020 00:00:44'!
reportPortfolio: aPortfolio !
!Report methodsFor: 'reporting - private' stamp: 'EMI 11/16/2020 00:00:50'!
endReportPortfolio: aPortfolio.
	self subclassResponsibility.! !
!AccountSummaryReport methodsFor: 'reporting - private' stamp: 'EMI 11/16/2020 00:01:00' overrides: 50913957!
endReportPortfolio: aPortfolio.! !
!NetTransfersReport methodsFor: 'nil' stamp: 'EMI 11/16/2020 00:01:05' overrides: 50913957!
endReportPortfolio: aPortfolio.! !
!PortfolioStructureReport methodsFor: 'reporting - private' stamp: 'EMI 11/16/2020 00:01:24' overrides: 50913957!
endReportPortfolio: aPortfolio.
	currentIdent _ currentIdent - 1.! !
!AccountSpecialReport methodsFor: 'reporting - private' stamp: 'EMI 11/16/2020 00:01:58' overrides: 50913957!
endReportPortfolio: aPortfolio.
	currentIdent _ currentIdent - 1.
	summaryCollection add: (self identString: ('Balance = ', aPortfolio balance)).! !
!AccountSpecialReport methodsFor: 'reporting - private' stamp: 'EMI 11/16/2020 00:02:13' prior: 50913978 overrides: 50913957!
endReportPortfolio: aPortfolio.
	summaryCollection add: (self identString: ('Balance = ', aPortfolio balance)).
	currentIdent _ currentIdent - 1.! !

----SNAPSHOT----(16 November 2020 00:02:24) CuisUniversity-4383.image priorSource: 18603325!

!testRun: #PortfolioStructureReportTest #test01ReportOfAnEmptyPortfolioStructureHasCorrectName stamp: 'EMI 11/16/2020 00:02:32'!
PASSED!

!testRun: #PortfolioStructureReportTest #test02ReportOfASimplePortfolioStructureHasCorrectNamesAndIdentation stamp: 'EMI 11/16/2020 00:02:32'!
PASSED!

!testRun: #PortfolioStructureReportTest #test03ReportOfAListPortfolioStructureHasCorrectNamesAndIdentation stamp: 'EMI 11/16/2020 00:02:32'!
PASSED!

!testRun: #PortfolioStructureReportTest #test04ReportOfAListOfNamedPortfolioStructureHasCorrectNamesAndIdentation stamp: 'EMI 11/16/2020 00:02:32'!
PASSED!

!testRun: #PortfolioStructureReportTest #test05ReportOfAListOfNamedPortfolioStructureHasCorrectNamesAndIdentation stamp: 'EMI 11/16/2020 00:02:32'!
FAILURE!

!testRun: #PortfolioStructureReportTest #test05ReportOfAListOfNamedPortfolioStructureHasCorrectNamesAndIdentation stamp: 'EMI 11/16/2020 00:02:32'!
FAILURE!
!Portfolio methodsFor: 'reports' stamp: 'EMI 11/16/2020 00:04:10' prior: 50913924 overrides: 50908371!
reportTo: aReport
	aReport beginReportPortfolio: self.
	accounts do:[:anAccount | anAccount reportTo: aReport].
	aReport endReportPortfolio: self.! !

----SNAPSHOT----(16 November 2020 00:05:05) CuisUniversity-4383.image priorSource: 18634996!

!testRun: #PortfolioStructureReportTest #test01ReportOfAnEmptyPortfolioStructureHasCorrectName stamp: 'EMI 11/16/2020 00:05:07'!
PASSED!

!testRun: #PortfolioStructureReportTest #test02ReportOfASimplePortfolioStructureHasCorrectNamesAndIdentation stamp: 'EMI 11/16/2020 00:05:07'!
PASSED!

!testRun: #PortfolioStructureReportTest #test03ReportOfAListPortfolioStructureHasCorrectNamesAndIdentation stamp: 'EMI 11/16/2020 00:05:07'!
PASSED!

!testRun: #PortfolioStructureReportTest #test04ReportOfAListOfNamedPortfolioStructureHasCorrectNamesAndIdentation stamp: 'EMI 11/16/2020 00:05:07'!
PASSED!

!testRun: #PortfolioStructureReportTest #test05ReportOfAListOfNamedPortfolioStructureHasCorrectNamesAndIdentation stamp: 'EMI 11/16/2020 00:05:07'!
PASSED!

!testRun: #AccountSpecialReportTest #test01EmptyPortfolioOnlyShowsName stamp: 'EMI 11/16/2020 00:05:12'!
ERROR!

!testRun: #AccountSpecialReportTest #test02PortfolioWithAnAccountWithADepositShowsNamesAndIdentation stamp: 'EMI 11/16/2020 00:05:12'!
ERROR!

!testRun: #AccountSpecialReportTest #test01EmptyPortfolioOnlyShowsName stamp: 'EMI 11/16/2020 00:05:16'!
ERROR!
!AccountSpecialReportTest methodsFor: 'as yet unclassified' stamp: 'EMI 11/16/2020 00:05:28' prior: 50913738!
test01EmptyPortfolioOnlyShowsName
	| portfolio report expectedResult |
	portfolio _ Portfolio new.
	report _ AccountSpecialReport of: portfolio.
	expectedResult _ OrderedCollection with: 'Portfolio de Unnamed Portfolio'
								    with: (self class identString: 'Balance = 0' amount: 1).
	self assert: report report equals: expectedResult.! !
!AccountSpecialReportTest methodsFor: 'as yet unclassified' stamp: 'EMI 11/16/2020 00:05:37' prior: 50913765!
test02PortfolioWithAnAccountWithADepositShowsNamesAndIdentation
	| portfolio account report expectedResult |
	portfolio _ Portfolio withName: 'Compania de Pepe'.
	account _ ReceptiveAccount withName: 'Suiza'.
	Deposit register: 10 on: account.
	portfolio add: account.
	report _ AccountSpecialReport of: portfolio.
	expectedResult _ OrderedCollection with: 'Portfolio de Compania de Pepe' 
								    with: (self class identString: 'Cuenta de Suiza' amount: 1) 
								    with: (self class identString: 'Dep�sito por 10.' amount: 2) 
								    with: (self class identString: 'Balance = 10.' amount: 2)
								    with: (self class identString: 'Balance = 10' amount: 1).
	self assert: report report equals: expectedResult.! !

!testRun: #AccountSpecialReportTest #test01EmptyPortfolioOnlyShowsName stamp: 'EMI 11/16/2020 00:05:41'!
ERROR!

!testRun: #AccountSpecialReportTest #test02PortfolioWithAnAccountWithADepositShowsNamesAndIdentation stamp: 'EMI 11/16/2020 00:05:41'!
ERROR!

!testRun: #AccountSpecialReportTest #test01EmptyPortfolioOnlyShowsName stamp: 'EMI 11/16/2020 00:05:43'!
ERROR!
!AccountSpecialReport methodsFor: 'reporting - private' stamp: 'EMI 11/16/2020 00:05:56' prior: 50913987 overrides: 50913957!
endReportPortfolio: aPortfolio.
	summaryCollection add: (self identString: ('Balance = ', aPortfolio balance asString)).
	currentIdent _ currentIdent - 1.! !

!testRun: #AccountSpecialReportTest #test01EmptyPortfolioOnlyShowsName stamp: 'EMI 11/16/2020 00:05:58'!
PASSED!

!testRun: #AccountSpecialReportTest #test02PortfolioWithAnAccountWithADepositShowsNamesAndIdentation stamp: 'EMI 11/16/2020 00:06:00'!
PASSED!

!testRun: #AccountSpecialReportTest #test01EmptyPortfolioOnlyShowsName stamp: 'EMI 11/16/2020 00:06:06'!
PASSED!

!testRun: #AccountSpecialReportTest #test02PortfolioWithAnAccountWithADepositShowsNamesAndIdentation stamp: 'EMI 11/16/2020 00:06:06'!
PASSED!

----SNAPSHOT----(16 November 2020 00:06:25) CuisUniversity-4383.image priorSource: 18636277!

----SNAPSHOT----(16 November 2020 00:06:30) CuisUniversity-4383.image priorSource: 18640033!

----QUIT----(16 November 2020 00:06:49) CuisUniversity-4383.image priorSource: 18640127!

----STARTUP---- (16 November 2020 15:51:09) as /home/doraserver/CuisUniversity/CuisUniversity-4383.image!


p name!

p _ Portfolio new.
p name!

Object subclass: #Account
	instanceVariableNames: 'accountName'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio2-Ejercicio'!

Account subclass: #Portfolio
	instanceVariableNames: 'accounts parents'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio2-Ejercicio'!

!classDefinition: #Portfolio category: 'Portfolio2-Ejercicio' stamp: 'EMI 11/16/2020 15:53:23'!
Account subclass: #Portfolio
	instanceVariableNames: 'accounts parents'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio2-Ejercicio'!

Account subclass: #ReceptiveAccount
	instanceVariableNames: 'transactions'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio2-Ejercicio'!

!classDefinition: #ReceptiveAccount category: 'Portfolio2-Ejercicio' stamp: 'EMI 11/16/2020 15:53:27'!
Account subclass: #ReceptiveAccount
	instanceVariableNames: 'transactions'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio2-Ejercicio'!

Object subclass: #Account
	instanceVariableNames: 'accountName'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio2-Ejercicio'!

!classDefinition: #Account category: 'Portfolio2-Ejercicio' stamp: 'EMI 11/16/2020 15:53:33'!
Object subclass: #Account
	instanceVariableNames: 'accountName'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio2-Ejercicio'!
!Portfolio methodsFor: 'names' stamp: 'EMI 11/16/2020 15:53:55' prior: 50911878 overrides: 50912021!
named
	^accountName .! !
!Portfolio methodsFor: 'initialization' stamp: 'EMI 11/16/2020 15:54:03' prior: 50911869!
initializeWithName: aString 
	self initialize.
	accountName := aString.! !

!testRun: #PortfolioTest #test01BalanceOfPortfolioWithoutAccountsIsZero stamp: 'EMI 11/16/2020 15:54:17'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithOneAccountIsAccountBalance stamp: 'EMI 11/16/2020 15:54:17'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioIsCalculatedRecursivelyOnPortfolios stamp: 'EMI 11/16/2020 15:54:17'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithoutAccountsHasNoRegisteredTransaction stamp: 'EMI 11/16/2020 15:54:17'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredItsAccountsTransactions stamp: 'EMI 11/16/2020 15:54:17'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioLooksForRegisteredTransactionsRecursively stamp: 'EMI 11/16/2020 15:54:17'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioHasNoTransactionWhenHasNoAccounts stamp: 'EMI 11/16/2020 15:54:17'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTransactionsIncludesAllItsAccountsTransactions stamp: 'EMI 11/16/2020 15:54:17'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioTransactionsAreCalculatedRecursively stamp: 'EMI 11/16/2020 15:54:17'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCanNotIncludeTheSameAccountMoreThanOnce stamp: 'EMI 11/16/2020 15:54:17'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCanNotIncludeAccountOfItsPortfolios stamp: 'EMI 11/16/2020 15:54:17'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioCanNotIncludeItself stamp: 'EMI 11/16/2020 15:54:17'!
PASSED!

!testRun: #PortfolioTest #test13ComposedPortfolioCanNotHaveParentPortfolioAccount stamp: 'EMI 11/16/2020 15:54:17'!
PASSED!

!testRun: #PortfolioTest #test14ComposedPortfolioCanNotHaveAccountOfAnyRootParentRecursively stamp: 'EMI 11/16/2020 15:54:17'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotIncludeAnyOfTheComposedAccountOfPortfolioToAdd stamp: 'EMI 11/16/2020 15:54:17'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioHasDefaultName stamp: 'EMI 11/16/2020 15:54:17'!
FAILURE!

!testRun: #PortfolioTest #test17CanCreatePortfolioWithName stamp: 'EMI 11/16/2020 15:54:17'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioHasDefaultName stamp: 'EMI 11/16/2020 15:54:17'!
FAILURE!
!Portfolio methodsFor: 'initialization' stamp: 'EMI 11/16/2020 15:54:31' prior: 50913041 overrides: 16896425!
initialize
	accountName _ 'Unnamed Portfolio'.
	accounts := OrderedCollection new.
	parents := OrderedCollection new.! !

!testRun: #PortfolioTest #test01BalanceOfPortfolioWithoutAccountsIsZero stamp: 'EMI 11/16/2020 15:54:39'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithOneAccountIsAccountBalance stamp: 'EMI 11/16/2020 15:54:39'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioIsCalculatedRecursivelyOnPortfolios stamp: 'EMI 11/16/2020 15:54:39'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithoutAccountsHasNoRegisteredTransaction stamp: 'EMI 11/16/2020 15:54:39'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredItsAccountsTransactions stamp: 'EMI 11/16/2020 15:54:39'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioLooksForRegisteredTransactionsRecursively stamp: 'EMI 11/16/2020 15:54:39'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioHasNoTransactionWhenHasNoAccounts stamp: 'EMI 11/16/2020 15:54:39'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTransactionsIncludesAllItsAccountsTransactions stamp: 'EMI 11/16/2020 15:54:39'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioTransactionsAreCalculatedRecursively stamp: 'EMI 11/16/2020 15:54:39'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCanNotIncludeTheSameAccountMoreThanOnce stamp: 'EMI 11/16/2020 15:54:39'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCanNotIncludeAccountOfItsPortfolios stamp: 'EMI 11/16/2020 15:54:39'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioCanNotIncludeItself stamp: 'EMI 11/16/2020 15:54:39'!
PASSED!

!testRun: #PortfolioTest #test13ComposedPortfolioCanNotHaveParentPortfolioAccount stamp: 'EMI 11/16/2020 15:54:39'!
PASSED!

!testRun: #PortfolioTest #test14ComposedPortfolioCanNotHaveAccountOfAnyRootParentRecursively stamp: 'EMI 11/16/2020 15:54:39'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotIncludeAnyOfTheComposedAccountOfPortfolioToAdd stamp: 'EMI 11/16/2020 15:54:39'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioHasDefaultName stamp: 'EMI 11/16/2020 15:54:39'!
FAILURE!

!testRun: #PortfolioTest #test17CanCreatePortfolioWithName stamp: 'EMI 11/16/2020 15:54:39'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioHasDefaultName stamp: 'EMI 11/16/2020 15:54:39'!
FAILURE!

!classDefinition: #Account category: 'Portfolio2-Ejercicio' stamp: 'EMI 11/16/2020 15:55:34'!
Object subclass: #Account
	instanceVariableNames: 'name'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio2-Ejercicio'!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'EMI 11/16/2020 15:55:34' prior: 50914208 overrides: 50912021!
named
	^name .! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'EMI 11/16/2020 15:55:34' prior: 50914286 overrides: 16896425!
initialize
	name _ 'Unnamed Portfolio'.
	accounts := OrderedCollection new.
	parents := OrderedCollection new.! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'EMI 11/16/2020 15:55:34' prior: 50914212!
initializeWithName: aString 
	self initialize.
	name := aString.! !
!ReceptiveAccount methodsFor: 'as yet unclassified' stamp: 'EMI 11/16/2020 15:55:34' prior: 50911701 overrides: 50912021!
named
	^name.! !
!ReceptiveAccount methodsFor: 'as yet unclassified' stamp: 'EMI 11/16/2020 15:55:34' prior: 50913049 overrides: 16896425!
initialize
	super initialize.
	transactions := OrderedCollection new.
	name _ 'Unnamed Account'.! !
!ReceptiveAccount methodsFor: 'as yet unclassified' stamp: 'EMI 11/16/2020 15:55:34' prior: 50911724!
initializeWithName: aString 
	self initialize.
	name _ aString.! !
!Portfolio methodsFor: 'names' stamp: 'EMI 11/16/2020 15:56:15'!
accountName
	^name .! !

!methodRemoval: Portfolio #named stamp: 'EMI 11/16/2020 15:56:15'!
named
	^name .!
!ReceptiveAccount methodsFor: 'names' stamp: 'EMI 11/16/2020 15:56:30'!
accountName
	^name.! !

!methodRemoval: ReceptiveAccount #named stamp: 'EMI 11/16/2020 15:56:30'!
named
	^name.!
!Account methodsFor: 'names' stamp: 'EMI 11/16/2020 15:57:06'!
accountName
	^self subclassResponsibility.! !

!methodRemoval: Account #named stamp: 'EMI 11/16/2020 15:57:06'!
named
	^self subclassResponsibility.!
!PortfolioTest methodsFor: 'tests' stamp: 'EMI 11/16/2020 15:57:24' prior: 50911813!
test17CanCreatePortfolioWithName
	| portfolio |
	
	portfolio _ Portfolio withName: 'Test Portfolio'.
	
	self assert: portfolio accountName equals: 'Test Portfolio'.! !
!PortfolioTest methodsFor: 'tests' stamp: 'EMI 11/16/2020 15:57:32' prior: 50911789!
test16PortfolioHasDefaultName
	| portfolio |
	
	portfolio _ Portfolio new.
	
	self assert: portfolio accountName equals: 'Unnamed portfolio'.! !
!ReceptiveAccountTest methodsFor: 'tests - account' stamp: 'EMI 11/16/2020 15:57:44' prior: 50911588!
test12AccountHasDefaultName
	| account |
	account _ ReceptiveAccount new.
	
	self assert: account accountName equals: 'Unnamed account'.! !
!ReceptiveAccountTest methodsFor: 'tests - account' stamp: 'EMI 11/16/2020 15:57:52' prior: 50911636!
test13CanCreateAccountWithName
	| account |
	account _ ReceptiveAccount withName: 'Test account'.
	
	self assert: account accountName equals: 'Test account'.! !

!testRun: #PortfolioTest #test01BalanceOfPortfolioWithoutAccountsIsZero stamp: 'EMI 11/16/2020 15:57:57'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithOneAccountIsAccountBalance stamp: 'EMI 11/16/2020 15:57:57'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioIsCalculatedRecursivelyOnPortfolios stamp: 'EMI 11/16/2020 15:57:57'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithoutAccountsHasNoRegisteredTransaction stamp: 'EMI 11/16/2020 15:57:57'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredItsAccountsTransactions stamp: 'EMI 11/16/2020 15:57:57'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioLooksForRegisteredTransactionsRecursively stamp: 'EMI 11/16/2020 15:57:57'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioHasNoTransactionWhenHasNoAccounts stamp: 'EMI 11/16/2020 15:57:57'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTransactionsIncludesAllItsAccountsTransactions stamp: 'EMI 11/16/2020 15:57:57'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioTransactionsAreCalculatedRecursively stamp: 'EMI 11/16/2020 15:57:57'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCanNotIncludeTheSameAccountMoreThanOnce stamp: 'EMI 11/16/2020 15:57:57'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCanNotIncludeAccountOfItsPortfolios stamp: 'EMI 11/16/2020 15:57:57'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioCanNotIncludeItself stamp: 'EMI 11/16/2020 15:57:57'!
PASSED!

!testRun: #PortfolioTest #test13ComposedPortfolioCanNotHaveParentPortfolioAccount stamp: 'EMI 11/16/2020 15:57:57'!
PASSED!

!testRun: #PortfolioTest #test14ComposedPortfolioCanNotHaveAccountOfAnyRootParentRecursively stamp: 'EMI 11/16/2020 15:57:57'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotIncludeAnyOfTheComposedAccountOfPortfolioToAdd stamp: 'EMI 11/16/2020 15:57:57'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioHasDefaultName stamp: 'EMI 11/16/2020 15:57:57'!
FAILURE!

!testRun: #PortfolioTest #test17CanCreatePortfolioWithName stamp: 'EMI 11/16/2020 15:57:57'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioHasDefaultName stamp: 'EMI 11/16/2020 15:57:57'!
FAILURE!
!PortfolioTest methodsFor: 'tests' stamp: 'EMI 11/16/2020 15:58:05' prior: 50914432!
test16PortfolioHasDefaultName
	| portfolio |
	
	portfolio _ Portfolio new.
	
	self assert: portfolio accountName equals: 'Unnamed Portfolio'.! !

!testRun: #PortfolioTest #test16PortfolioHasDefaultName stamp: 'EMI 11/16/2020 15:58:06'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'EMI 11/16/2020 15:58:09'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'EMI 11/16/2020 15:58:09'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'EMI 11/16/2020 15:58:09'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'EMI 11/16/2020 15:58:09'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'EMI 11/16/2020 15:58:09'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'EMI 11/16/2020 15:58:09'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'EMI 11/16/2020 15:58:09'!
PASSED!

!testRun: #ReceptiveAccountTest #test08AccountCanTransferToAnotherAccountWithPositiveAmount stamp: 'EMI 11/16/2020 15:58:09'!
PASSED!

!testRun: #ReceptiveAccountTest #test09AccountsWithTransferKnowsOriginAndDestination stamp: 'EMI 11/16/2020 15:58:09'!
PASSED!

!testRun: #ReceptiveAccountTest #test10AccountsCannotTransferInvalidAmounts stamp: 'EMI 11/16/2020 15:58:09'!
PASSED!

!testRun: #ReceptiveAccountTest #test11AccountsCannotTransferToThemselves stamp: 'EMI 11/16/2020 15:58:09'!
PASSED!

!testRun: #ReceptiveAccountTest #test12AccountHasDefaultName stamp: 'EMI 11/16/2020 15:58:09'!
FAILURE!

!testRun: #ReceptiveAccountTest #test13CanCreateAccountWithName stamp: 'EMI 11/16/2020 15:58:09'!
PASSED!

!testRun: #ReceptiveAccountTest #test12AccountHasDefaultName stamp: 'EMI 11/16/2020 15:58:09'!
FAILURE!
!ReceptiveAccountTest methodsFor: 'tests - account' stamp: 'EMI 11/16/2020 15:58:17' prior: 50914440!
test12AccountHasDefaultName
	| account |
	account _ ReceptiveAccount new.
	
	self assert: account accountName equals: 'Unnamed Account'.! !

!testRun: #ReceptiveAccountTest #test12AccountHasDefaultName stamp: 'EMI 11/16/2020 15:58:18'!
PASSED!
!Account methodsFor: 'names' stamp: 'EMI 11/16/2020 15:58:50' prior: 50914416!
accountName
	^name.! !

!methodRemoval: Portfolio #accountName stamp: 'EMI 11/16/2020 15:58:58'!
accountName
	^name .!

!methodRemoval: ReceptiveAccount #accountName stamp: 'EMI 11/16/2020 15:59:09'!
accountName
	^name.!

!testRun: #PortfolioTest #test01BalanceOfPortfolioWithoutAccountsIsZero stamp: 'EMI 11/16/2020 15:59:27'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithOneAccountIsAccountBalance stamp: 'EMI 11/16/2020 15:59:27'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioIsCalculatedRecursivelyOnPortfolios stamp: 'EMI 11/16/2020 15:59:27'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithoutAccountsHasNoRegisteredTransaction stamp: 'EMI 11/16/2020 15:59:27'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredItsAccountsTransactions stamp: 'EMI 11/16/2020 15:59:27'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioLooksForRegisteredTransactionsRecursively stamp: 'EMI 11/16/2020 15:59:27'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioHasNoTransactionWhenHasNoAccounts stamp: 'EMI 11/16/2020 15:59:27'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTransactionsIncludesAllItsAccountsTransactions stamp: 'EMI 11/16/2020 15:59:27'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioTransactionsAreCalculatedRecursively stamp: 'EMI 11/16/2020 15:59:27'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCanNotIncludeTheSameAccountMoreThanOnce stamp: 'EMI 11/16/2020 15:59:27'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCanNotIncludeAccountOfItsPortfolios stamp: 'EMI 11/16/2020 15:59:27'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioCanNotIncludeItself stamp: 'EMI 11/16/2020 15:59:27'!
PASSED!

!testRun: #PortfolioTest #test13ComposedPortfolioCanNotHaveParentPortfolioAccount stamp: 'EMI 11/16/2020 15:59:27'!
PASSED!

!testRun: #PortfolioTest #test14ComposedPortfolioCanNotHaveAccountOfAnyRootParentRecursively stamp: 'EMI 11/16/2020 15:59:27'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotIncludeAnyOfTheComposedAccountOfPortfolioToAdd stamp: 'EMI 11/16/2020 15:59:27'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioHasDefaultName stamp: 'EMI 11/16/2020 15:59:27'!
PASSED!

!testRun: #PortfolioTest #test17CanCreatePortfolioWithName stamp: 'EMI 11/16/2020 15:59:27'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'EMI 11/16/2020 15:59:29'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'EMI 11/16/2020 15:59:29'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'EMI 11/16/2020 15:59:29'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'EMI 11/16/2020 15:59:29'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'EMI 11/16/2020 15:59:29'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'EMI 11/16/2020 15:59:29'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'EMI 11/16/2020 15:59:29'!
PASSED!

!testRun: #ReceptiveAccountTest #test08AccountCanTransferToAnotherAccountWithPositiveAmount stamp: 'EMI 11/16/2020 15:59:29'!
PASSED!

!testRun: #ReceptiveAccountTest #test09AccountsWithTransferKnowsOriginAndDestination stamp: 'EMI 11/16/2020 15:59:29'!
PASSED!

!testRun: #ReceptiveAccountTest #test10AccountsCannotTransferInvalidAmounts stamp: 'EMI 11/16/2020 15:59:29'!
PASSED!

!testRun: #ReceptiveAccountTest #test11AccountsCannotTransferToThemselves stamp: 'EMI 11/16/2020 15:59:29'!
PASSED!

!testRun: #ReceptiveAccountTest #test12AccountHasDefaultName stamp: 'EMI 11/16/2020 15:59:29'!
PASSED!

!testRun: #ReceptiveAccountTest #test13CanCreateAccountWithName stamp: 'EMI 11/16/2020 15:59:29'!
PASSED!
!PortfolioStructureReport methodsFor: 'reporting - private' stamp: 'EMI 11/16/2020 16:01:05' prior: 50913901 overrides: 50913913!
beginReportPortfolio: aPortfolio
	reportCollection add: (self identString: ('Portfolio de ', aPortfolio accountName)).
	currentIdent _ currentIdent + 1.! !
!PortfolioStructureReport methodsFor: 'reporting - private' stamp: 'EMI 11/16/2020 16:01:13' prior: 50912476 overrides: 50912995!
reportAccount: anAccount
	reportCollection add: (self identString: ('Cuenta de ', anAccount accountName)).! !
!AccountSummaryReport methodsFor: 'reporting - private' stamp: 'EMI 11/16/2020 16:02:00'!
reportReceptiveAccount: aReceptiveAccount! !
!NetTransfersReport methodsFor: 'reporting - private' stamp: 'EMI 11/16/2020 16:02:00'!
reportReceptiveAccount: aReceptiveAccount ! !
!Report methodsFor: 'reporting - private' stamp: 'EMI 11/16/2020 16:02:00'!
reportReceptiveAccount: anAccount.
	self subclassResponsibility.! !
!PortfolioStructureReport methodsFor: 'reporting - private' stamp: 'EMI 11/16/2020 16:02:00' overrides: 50914749!
reportReceptiveAccount: anAccount
	reportCollection add: (self identString: ('Cuenta de ', anAccount accountName)).! !
!AccountSpecialReport methodsFor: 'reporting - private' stamp: 'EMI 11/16/2020 16:02:00' overrides: 50914749!
reportReceptiveAccount: aReceptiveAccount 
	| summary summaryReport|
	summaryCollection add: (self identString: ('Cuenta de ', aReceptiveAccount named)).
	
	summary _ AccountSummaryReport of: aReceptiveAccount.
	summaryReport _ summary report.
	summaryReport do: [:aSummaryLine | summaryCollection add: (self identString: aSummaryLine withAmount: (currentIdent + 1))].! !
!ReceptiveAccount methodsFor: 'as yet unclassified' stamp: 'EMI 11/16/2020 16:02:00' prior: 50912579 overrides: 50908371!
reportTo: aReport
	aReport reportReceptiveAccount: self.
	transactions do:[:aTransaction |aTransaction reportTo: aReport].! !

!methodRemoval: AccountSummaryReport #reportAccount: stamp: 'EMI 11/16/2020 16:02:00'!
reportAccount: aReceptiveAccount!

!methodRemoval: NetTransfersReport #reportAccount: stamp: 'EMI 11/16/2020 16:02:00'!
reportAccount: aReceptiveAccount !

!methodRemoval: Report #reportAccount: stamp: 'EMI 11/16/2020 16:02:00'!
reportAccount: anAccount.
	self subclassResponsibility.!

!methodRemoval: PortfolioStructureReport #reportAccount: stamp: 'EMI 11/16/2020 16:02:00'!
reportAccount: anAccount
	reportCollection add: (self identString: ('Cuenta de ', anAccount accountName)).!

!methodRemoval: AccountSpecialReport #reportAccount: stamp: 'EMI 11/16/2020 16:02:00'!
reportAccount: aReceptiveAccount 
	| summary summaryReport|
	summaryCollection add: (self identString: ('Cuenta de ', aReceptiveAccount named)).
	
	summary _ AccountSummaryReport of: aReceptiveAccount.
	summaryReport _ summary report.
	summaryReport do: [:aSummaryLine | summaryCollection add: (self identString: aSummaryLine withAmount: (currentIdent + 1))].!
!AccountSpecialReport methodsFor: 'reporting - private' stamp: 'EMI 11/16/2020 16:02:17' prior: 50914763 overrides: 50914749!
reportReceptiveAccount: aReceptiveAccount 
	| summary summaryReport|
	summaryCollection add: (self identString: ('Cuenta de ', aReceptiveAccount accountName)).
	
	summary _ AccountSummaryReport of: aReceptiveAccount.
	summaryReport _ summary report.
	summaryReport do: [:aSummaryLine | summaryCollection add: (self identString: aSummaryLine withAmount: (currentIdent + 1))].! !
!AccountSpecialReport methodsFor: 'reporting - private' stamp: 'EMI 11/16/2020 16:02:34' prior: 50913893 overrides: 50913913!
beginReportPortfolio: aPortfolio 
	summaryCollection add: (self identString: ('Portfolio de ', aPortfolio accountName)).
	currentIdent _ currentIdent + 1.! !
!PortfolioStructureReport methodsFor: 'reporting - private' stamp: 'EMI 11/16/2020 16:03:11' prior: 50914755 overrides: 50914749!
reportReceptiveAccount: aReceptiveAccount
	reportCollection add: (self identString: ('Cuenta de ', aReceptiveAccount accountName)).! !

----SNAPSHOT----(16 November 2020 16:03:14) CuisUniversity-4383.image priorSource: 18640221!

!classDefinition: #PortfolioStructureReport category: 'Portfolio2-Ejercicio' stamp: 'EMI 11/16/2020 16:05:55'!
Report subclass: #PortfolioStructureReport
	instanceVariableNames: 'reportCollection currentIdentationLevel'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio2-Ejercicio'!
!PortfolioStructureReport methodsFor: 'as yet unclassified' stamp: 'EMI 11/16/2020 16:05:55' prior: 50913972 overrides: 50913957!
endReportPortfolio: aPortfolio.
	currentIdentationLevel _ currentIdentationLevel - 1.! !
!PortfolioStructureReport methodsFor: 'as yet unclassified' stamp: 'EMI 11/16/2020 16:05:55' prior: 50914724 overrides: 50913913!
beginReportPortfolio: aPortfolio
	reportCollection add: (self identString: ('Portfolio de ', aPortfolio accountName)).
	currentIdentationLevel _ currentIdentationLevel + 1.! !
!PortfolioStructureReport methodsFor: 'as yet unclassified' stamp: 'EMI 11/16/2020 16:05:55' prior: 50912441!
identString: aString
	^(String new: (3*currentIdentationLevel) withAll: Character space), aString.! !
!PortfolioStructureReport methodsFor: 'as yet unclassified' stamp: 'EMI 11/16/2020 16:05:55' prior: 50912468 overrides: 50909567!
report
	reportCollection _ OrderedCollection new.
	currentIdentationLevel _ 0.
	account reportTo: self.
	^reportCollection.! !

!classDefinition: #AccountSpecialReport category: 'Portfolio2-Ejercicio' stamp: 'EMI 11/16/2020 16:06:07'!
Report subclass: #AccountSpecialReport
	instanceVariableNames: 'summaryCollection currentIdentationLevel'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio2-Ejercicio'!
!AccountSpecialReport methodsFor: 'as yet unclassified' stamp: 'EMI 11/16/2020 16:06:07' prior: 50913596 overrides: 50909567!
report
       summaryCollection _ OrderedCollection new.
	currentIdentationLevel _ 0.
	account reportTo: self.
	^summaryCollection.! !
!AccountSpecialReport methodsFor: 'as yet unclassified' stamp: 'EMI 11/16/2020 16:06:07' prior: 50914819 overrides: 50914749!
reportReceptiveAccount: aReceptiveAccount 
	| summary summaryReport|
	summaryCollection add: (self identString: ('Cuenta de ', aReceptiveAccount accountName)).
	
	summary _ AccountSummaryReport of: aReceptiveAccount.
	summaryReport _ summary report.
	summaryReport do: [:aSummaryLine | summaryCollection add: (self identString: aSummaryLine withAmount: (currentIdentationLevel + 1))].! !
!AccountSpecialReport methodsFor: 'as yet unclassified' stamp: 'EMI 11/16/2020 16:06:07' prior: 50914835 overrides: 50913913!
beginReportPortfolio: aPortfolio 
	summaryCollection add: (self identString: ('Portfolio de ', aPortfolio accountName)).
	currentIdentationLevel _ currentIdentationLevel + 1.! !
!AccountSpecialReport methodsFor: 'as yet unclassified' stamp: 'EMI 11/16/2020 16:06:07' prior: 50913618!
identString: aString
	^(String new: (3*currentIdentationLevel) withAll: Character space), aString.! !
!AccountSpecialReport methodsFor: 'as yet unclassified' stamp: 'EMI 11/16/2020 16:06:07' prior: 50914128 overrides: 50913957!
endReportPortfolio: aPortfolio.
	summaryCollection add: (self identString: ('Balance = ', aPortfolio balance asString)).
	currentIdentationLevel _ currentIdentationLevel - 1.! !

----SNAPSHOT----(16 November 2020 16:07:46) CuisUniversity-4383.image priorSource: 18662406!

----SNAPSHOT----(16 November 2020 16:10:08) CuisUniversity-4383.image priorSource: 18665841!

----SNAPSHOT----(16 November 2020 16:10:53) CuisUniversity-4383.image priorSource: 18665935!
!String methodsFor: '*Portfolio2' stamp: 'EMI 11/16/2020 16:14:56'!
identString: aString byAmount: anAmount
	^(String new: anAmount withAll: Character space), aString.! !
!AccountSpecialReport methodsFor: 'reporting - private' stamp: 'EMI 11/16/2020 16:15:52' prior: 50914933 overrides: 50913913!
beginReportPortfolio: aPortfolio 
	summaryCollection add: (self identString: ('Portfolio de ', aPortfolio accountName)).
	summaryCollection add: ('Portfolio de ', aPortfolio accountName).
	currentIdentationLevel _ currentIdentationLevel + 1.! !
!AccountSpecialReport methodsFor: 'reporting - private' stamp: 'EMI 11/16/2020 16:15:55' prior: 50914975 overrides: 50913913!
beginReportPortfolio: aPortfolio 
	summaryCollection add: (self identString: ('Portfolio de ', aPortfolio accountName)).
	currentIdentationLevel _ currentIdentationLevel + 1.! !
!String methodsFor: '*Portfolio2' stamp: 'EMI 11/16/2020 16:17:37'!
identbyAmount: anAmount
	^(String new: anAmount withAll: Character space), self.! !

!methodRemoval: String #identString:byAmount: stamp: 'EMI 11/16/2020 16:17:42'!
identString: aString byAmount: anAmount
	^(String new: anAmount withAll: Character space), aString.!
!String methodsFor: '*Portfolio2' stamp: 'EMI 11/16/2020 16:17:50'!
identByAmount: anAmount
	^(String new: anAmount withAll: Character space), self.! !

!methodRemoval: String #identbyAmount: stamp: 'EMI 11/16/2020 16:17:50'!
identbyAmount: anAmount
	^(String new: anAmount withAll: Character space), self.!
!AccountSpecialReport methodsFor: 'reporting - private' stamp: 'EMI 11/16/2020 16:18:51' prior: 50914987 overrides: 50913913!
beginReportPortfolio: aPortfolio 
	summaryCollection add: (('Portfolio de ', aPortfolio accountName) identByAmount: currentIdentationLevel).
	currentIdentationLevel _ currentIdentationLevel + 1.! !
!AccountSpecialReport methodsFor: 'reporting - private' stamp: 'EMI 11/16/2020 16:18:56' prior: 50915018 overrides: 50913913!
beginReportPortfolio: aPortfolio 
	summaryCollection add: (('Portfolio de ', aPortfolio accountName) identByAmount: (3*currentIdentationLevel)).
	currentIdentationLevel _ currentIdentationLevel + 1.! !

----SNAPSHOT----(16 November 2020 16:19:01) CuisUniversity-4383.image priorSource: 18666029!

!testRun: #AccountSpecialReportTest #test01EmptyPortfolioOnlyShowsName stamp: 'EMI 11/16/2020 16:19:08'!
PASSED!

!testRun: #AccountSpecialReportTest #test02PortfolioWithAnAccountWithADepositShowsNamesAndIdentation stamp: 'EMI 11/16/2020 16:19:08'!
PASSED!
!AccountSpecialReport methodsFor: 'reporting - private' stamp: 'EMI 11/16/2020 16:19:30' prior: 50915029 overrides: 50913913!
beginReportPortfolio: aPortfolio 
	summaryCollection add: (('Portfolio de ', aPortfolio accountName) identByAmount: currentIdentationLevel).
	currentIdentationLevel _ currentIdentationLevel + 3.! !
!AccountSpecialReport methodsFor: 'reporting - private' stamp: 'EMI 11/16/2020 16:19:50' prior: 50914950 overrides: 50913957!
endReportPortfolio: aPortfolio.
	summaryCollection add: (('Balance = ', aPortfolio balance asString) identByAmount: currentIdentationLevel).
	currentIdentationLevel _ currentIdentationLevel - 3.! !
!AccountSpecialReport methodsFor: 'reporting - private' stamp: 'EMI 11/16/2020 16:21:13' prior: 50914916 overrides: 50914749!
reportReceptiveAccount: aReceptiveAccount 
	| summary summaryReport|
	summaryCollection add: (('Cuenta de ', aReceptiveAccount accountName) identByAmount: currentIdentationLevel).
	
	summary _ AccountSummaryReport of: aReceptiveAccount.
	summaryReport _ summary report.
	summaryReport do: [:aSummaryLine | summaryCollection add: (aSummaryLine identByAmount: (currentIdentationLevel + 3))].! !

!testRun: #AccountSpecialReportTest #test01EmptyPortfolioOnlyShowsName stamp: 'EMI 11/16/2020 16:21:23'!
PASSED!

!testRun: #AccountSpecialReportTest #test02PortfolioWithAnAccountWithADepositShowsNamesAndIdentation stamp: 'EMI 11/16/2020 16:21:23'!
PASSED!
!PortfolioStructureReport methodsFor: 'reporting - private' stamp: 'EMI 11/16/2020 16:22:05' prior: 50914844 overrides: 50914749!
reportReceptiveAccount: aReceptiveAccount
	reportCollection add: (('Cuenta de ', aReceptiveAccount accountName) identByAmount: currentIdentationLevel).! !
!PortfolioStructureReport methodsFor: 'reporting - private' stamp: 'EMI 11/16/2020 16:22:27' prior: 50914872 overrides: 50913913!
beginReportPortfolio: aPortfolio
	reportCollection add: (('Portfolio de ', aPortfolio accountName) identByAmount: currentIdentationLevel).
	currentIdentationLevel _ currentIdentationLevel + 3.! !
!PortfolioStructureReport methodsFor: 'reporting - private' stamp: 'EMI 11/16/2020 16:22:35' prior: 50914865 overrides: 50913957!
endReportPortfolio: aPortfolio.
	currentIdentationLevel _ currentIdentationLevel - 3.! !

----SNAPSHOT----(16 November 2020 16:22:57) CuisUniversity-4383.image priorSource: 18668393!

!testRun: #PortfolioStructureReportTest #test01ReportOfAnEmptyPortfolioStructureHasCorrectName stamp: 'EMI 11/16/2020 16:23:01'!
PASSED!

!testRun: #PortfolioStructureReportTest #test02ReportOfASimplePortfolioStructureHasCorrectNamesAndIdentation stamp: 'EMI 11/16/2020 16:23:01'!
PASSED!

!testRun: #PortfolioStructureReportTest #test03ReportOfAListPortfolioStructureHasCorrectNamesAndIdentation stamp: 'EMI 11/16/2020 16:23:01'!
PASSED!

!testRun: #PortfolioStructureReportTest #test04ReportOfAListOfNamedPortfolioStructureHasCorrectNamesAndIdentation stamp: 'EMI 11/16/2020 16:23:01'!
PASSED!

!testRun: #PortfolioStructureReportTest #test05ReportOfAListOfNamedPortfolioStructureHasCorrectNamesAndIdentation stamp: 'EMI 11/16/2020 16:23:01'!
PASSED!

!methodRemoval: AccountSpecialReport #identString: stamp: 'EMI 11/16/2020 16:23:13'!
identString: aString
	^(String new: (3*currentIdentationLevel) withAll: Character space), aString.!

!methodRemoval: AccountSpecialReport #identString:withAmount: stamp: 'EMI 11/16/2020 16:23:17'!
identString: aString withAmount: anAmount
	^(String new: (3*anAmount) withAll: Character space), aString.!

!methodRemoval: PortfolioStructureReport #identString: stamp: 'EMI 11/16/2020 16:23:29'!
identString: aString
	^(String new: (3*currentIdentationLevel) withAll: Character space), aString.!
!Report class methodsFor: 'nil' stamp: 'EMI 11/16/2020 16:24:30'!
identationSpacesPerLevel
	^3.! !
!AccountSpecialReport methodsFor: 'reporting - private' stamp: 'EMI 11/16/2020 16:24:47' prior: 50915051 overrides: 50913913!
beginReportPortfolio: aPortfolio 
	summaryCollection add: (('Portfolio de ', aPortfolio accountName) identByAmount: currentIdentationLevel).
	currentIdentationLevel _ currentIdentationLevel + self class identationSpacesPerLevel.! !
!AccountSpecialReport methodsFor: 'reporting - private' stamp: 'EMI 11/16/2020 16:24:54' prior: 50915062 overrides: 50913957!
endReportPortfolio: aPortfolio.
	summaryCollection add: (('Balance = ', aPortfolio balance asString) identByAmount: currentIdentationLevel).
	currentIdentationLevel _ currentIdentationLevel - self class identationSpacesPerLevel.! !
!PortfolioStructureReport methodsFor: 'reporting - private' stamp: 'EMI 11/16/2020 16:25:01' prior: 50915107 overrides: 50913913!
beginReportPortfolio: aPortfolio
	reportCollection add: (('Portfolio de ', aPortfolio accountName) identByAmount: currentIdentationLevel).
	currentIdentationLevel _ currentIdentationLevel + self class identationSpacesPerLevel.! !
!PortfolioStructureReport methodsFor: 'reporting - private' stamp: 'EMI 11/16/2020 16:25:05' prior: 50915118 overrides: 50913957!
endReportPortfolio: aPortfolio.
	currentIdentationLevel _ currentIdentationLevel - self class identationSpacesPerLevel.! !
!AccountSpecialReport methodsFor: 'reporting - private' stamp: 'EMI 11/16/2020 16:25:15' prior: 50915073 overrides: 50914749!
reportReceptiveAccount: aReceptiveAccount 
	| summary summaryReport|
	summaryCollection add: (('Cuenta de ', aReceptiveAccount accountName) identByAmount: currentIdentationLevel).
	
	summary _ AccountSummaryReport of: aReceptiveAccount.
	summaryReport _ summary report.
	summaryReport do: [:aSummaryLine | summaryCollection add: (aSummaryLine identByAmount: (currentIdentationLevel + self class identationSpacesPerLevel))].! !

!testRun: #PortfolioStructureReportTest #test01ReportOfAnEmptyPortfolioStructureHasCorrectName stamp: 'EMI 11/16/2020 16:25:28'!
PASSED!

!testRun: #PortfolioStructureReportTest #test02ReportOfASimplePortfolioStructureHasCorrectNamesAndIdentation stamp: 'EMI 11/16/2020 16:25:28'!
PASSED!

!testRun: #PortfolioStructureReportTest #test03ReportOfAListPortfolioStructureHasCorrectNamesAndIdentation stamp: 'EMI 11/16/2020 16:25:28'!
PASSED!

!testRun: #PortfolioStructureReportTest #test04ReportOfAListOfNamedPortfolioStructureHasCorrectNamesAndIdentation stamp: 'EMI 11/16/2020 16:25:28'!
PASSED!

!testRun: #PortfolioStructureReportTest #test05ReportOfAListOfNamedPortfolioStructureHasCorrectNamesAndIdentation stamp: 'EMI 11/16/2020 16:25:28'!
PASSED!

!testRun: #AccountSpecialReportTest #test01EmptyPortfolioOnlyShowsName stamp: 'EMI 11/16/2020 16:25:33'!
PASSED!

!testRun: #AccountSpecialReportTest #test02PortfolioWithAnAccountWithADepositShowsNamesAndIdentation stamp: 'EMI 11/16/2020 16:25:33'!
PASSED!

----SNAPSHOT----(16 November 2020 16:26:21) CuisUniversity-4383.image priorSource: 18671128!
!AccountSpecialReportTest methodsFor: 'as yet unclassified' stamp: 'EMI 11/16/2020 16:26:57' prior: 50914074!
test01EmptyPortfolioOnlyShowsName
	| portfolio report expectedResult |
	portfolio _ Portfolio new.
	report _ AccountSpecialReport of: portfolio.
	expectedResult _ OrderedCollection with: 'Portfolio de Unnamed Portfolio'
								    with: ('Balance = 0' identByAmount: Report identationSpacesPerLevel * 1).
	self assert: report report equals: expectedResult.! !

!testRun: #AccountSpecialReportTest #test01EmptyPortfolioOnlyShowsName stamp: 'EMI 11/16/2020 16:26:59'!
PASSED!
!AccountSpecialReportTest methodsFor: 'as yet unclassified' stamp: 'EMI 11/16/2020 16:27:11' prior: 50915269!
test01EmptyPortfolioOnlyShowsName
	| portfolio report expectedResult |
	portfolio _ Portfolio new.
	report _ AccountSpecialReport of: portfolio.
	expectedResult _ OrderedCollection with: 'Portfolio de Unnamed Portfolio'
								    with: ('Balance = 0' identByAmount: Report identationSpacesPerLevel * 1).
	self assert: report report equals: expectedResult.! !
!AccountSpecialReportTest methodsFor: 'as yet unclassified' stamp: 'EMI 11/16/2020 16:28:27' prior: 50914089!
test02PortfolioWithAnAccountWithADepositShowsNamesAndIdentation
	| portfolio account report expectedResult |
	portfolio _ Portfolio withName: 'Compania de Pepe'.
	account _ ReceptiveAccount withName: 'Suiza'.
	Deposit register: 10 on: account.
	portfolio add: account.
	report _ AccountSpecialReport of: portfolio.
	expectedResult _ OrderedCollection with: 'Portfolio de Compania de Pepe' 
								    with: ('Cuenta de Suiza' identByAmount: Report identationSpacesPerLevel *1) 
								    with: ('Dep�sito por 10.' identByAmount: Report identationSpacesPerLevel * 2) 
								    with: ('Balance = 10.' identByAmount: Report identationSpacesPerLevel * 2)
								    with: ('Balance = 10' identByAmount: Report identationSpacesPerLevel * 1).
	self assert: report report equals: expectedResult.! !

!testRun: #AccountSpecialReportTest #test02PortfolioWithAnAccountWithADepositShowsNamesAndIdentation stamp: 'EMI 11/16/2020 16:28:29'!
PASSED!

!methodRemoval: AccountSpecialReportTest class #identString:amount: stamp: 'EMI 11/16/2020 16:30:04'!
identString: aString amount: anAmount
	^(String new: (3*anAmount) withAll: Character space), aString.!
!PortfolioStructureReportTest methodsFor: 'tests' stamp: 'EMI 11/16/2020 16:31:22' prior: 50913056!
test02ReportOfASimplePortfolioStructureHasCorrectNamesAndIdentation
	| portfolio account report expectedResult |
	portfolio _ Portfolio new.
	account _ ReceptiveAccount new.
	portfolio add: account.
	report _ PortfolioStructureReport of: portfolio.
	
	expectedResult _ OrderedCollection with: 'Portfolio de Unnamed Portfolio' 
								    with: ('Cuenta de Unnamed Account' identByAmount: Report  identationSpacesPerLevel * 1).
	self assert: report report equals: expectedResult.! !

!testRun: #PortfolioStructureReportTest #test02ReportOfASimplePortfolioStructureHasCorrectNamesAndIdentation stamp: 'EMI 11/16/2020 16:31:23'!
PASSED!

!testRun: #PortfolioStructureReportTest #test01ReportOfAnEmptyPortfolioStructureHasCorrectName stamp: 'EMI 11/16/2020 16:31:23'!
PASSED!

!testRun: #PortfolioStructureReportTest #test02ReportOfASimplePortfolioStructureHasCorrectNamesAndIdentation stamp: 'EMI 11/16/2020 16:31:23'!
PASSED!

!testRun: #PortfolioStructureReportTest #test03ReportOfAListPortfolioStructureHasCorrectNamesAndIdentation stamp: 'EMI 11/16/2020 16:31:23'!
PASSED!

!testRun: #PortfolioStructureReportTest #test04ReportOfAListOfNamedPortfolioStructureHasCorrectNamesAndIdentation stamp: 'EMI 11/16/2020 16:31:23'!
PASSED!

!testRun: #PortfolioStructureReportTest #test05ReportOfAListOfNamedPortfolioStructureHasCorrectNamesAndIdentation stamp: 'EMI 11/16/2020 16:31:23'!
PASSED!
!PortfolioStructureReportTest methodsFor: 'tests' stamp: 'EMI 11/16/2020 16:32:27' prior: 50913124!
test03ReportOfAListPortfolioStructureHasCorrectNamesAndIdentation
	| portfolio portfolioChild account report expectedResult |
	portfolio _ Portfolio new.
	portfolioChild _ Portfolio new.
	account _ ReceptiveAccount new.
	portfolioChild add: account.
	portfolio add: portfolioChild.
	report _ PortfolioStructureReport of: portfolio.
	
	expectedResult _ OrderedCollection with: 'Portfolio de Unnamed Portfolio' 
	                                             							    with: ('Portfolio de Unnamed Portfolio' identByAmount: Report identationSpacesPerLevel * 1) 
								    with: ('Cuenta de Unnamed Account' identByAmount: Report identationSpacesPerLevel * 2).
	self assert: report report equals: expectedResult.! !

!testRun: #PortfolioStructureReportTest #test03ReportOfAListPortfolioStructureHasCorrectNamesAndIdentation stamp: 'EMI 11/16/2020 16:32:29'!
PASSED!

!testRun: #PortfolioStructureReportTest #test01ReportOfAnEmptyPortfolioStructureHasCorrectName stamp: 'EMI 11/16/2020 16:32:29'!
PASSED!

!testRun: #PortfolioStructureReportTest #test02ReportOfASimplePortfolioStructureHasCorrectNamesAndIdentation stamp: 'EMI 11/16/2020 16:32:29'!
PASSED!

!testRun: #PortfolioStructureReportTest #test03ReportOfAListPortfolioStructureHasCorrectNamesAndIdentation stamp: 'EMI 11/16/2020 16:32:29'!
PASSED!

!testRun: #PortfolioStructureReportTest #test04ReportOfAListOfNamedPortfolioStructureHasCorrectNamesAndIdentation stamp: 'EMI 11/16/2020 16:32:29'!
PASSED!

!testRun: #PortfolioStructureReportTest #test05ReportOfAListOfNamedPortfolioStructureHasCorrectNamesAndIdentation stamp: 'EMI 11/16/2020 16:32:29'!
PASSED!
!PortfolioStructureReportTest class methodsFor: 'as yet unclassified' stamp: 'EMI 11/16/2020 16:34:00'!
identString: aString byLevel: anIdentationLevel
	^aString identByAmount: Report identationSpacesPerLevel * anIdentationLevel.! !

!methodRemoval: PortfolioStructureReportTest class #identString:amount: stamp: 'EMI 11/16/2020 16:34:03'!
identString: aString amount: anAmount
	^(String new: (3*anAmount) withAll: Character space), aString.!
!PortfolioStructureReportTest methodsFor: 'tests' stamp: 'EMI 11/16/2020 16:34:27' prior: 50915343!
test02ReportOfASimplePortfolioStructureHasCorrectNamesAndIdentation
	| portfolio account report expectedResult |
	portfolio _ Portfolio new.
	account _ ReceptiveAccount new.
	portfolio add: account.
	report _ PortfolioStructureReport of: portfolio.
	
	expectedResult _ OrderedCollection with: 'Portfolio de Unnamed Portfolio' 
								    with: (self class identString:  'Cuenta de Unnamed Account' byLevel: 1).
	self assert: report report equals: expectedResult.! !
!PortfolioStructureReportTest methodsFor: 'tests' stamp: 'EMI 11/16/2020 16:35:09' prior: 50915390!
test03ReportOfAListPortfolioStructureHasCorrectNamesAndIdentation
	| portfolio portfolioChild account report expectedResult |
	portfolio _ Portfolio new.
	portfolioChild _ Portfolio new.
	account _ ReceptiveAccount new.
	portfolioChild add: account.
	portfolio add: portfolioChild.
	report _ PortfolioStructureReport of: portfolio.
	
	expectedResult _ OrderedCollection with: 'Portfolio de Unnamed Portfolio' 
	                                             							    with: (self class identString: 'Portfolio de Unnamed Portfolio'  byLevel: 1) 
								    with: (self class identString: 'Cuenta de Unnamed Account' byLevel: 2).
	self assert: report report equals: expectedResult.! !
!PortfolioStructureReportTest methodsFor: 'tests' stamp: 'EMI 11/16/2020 16:36:16' prior: 50913184!
test04ReportOfAListOfNamedPortfolioStructureHasCorrectNamesAndIdentation
	| portfolio portfolioChild account report expectedResult |
	portfolio _ Portfolio withName: 'Compania 1'.
	portfolioChild _ Portfolio withName: 'Pepe'.
	account _ ReceptiveAccount withName: 'Lavado de dinero'.
	portfolioChild add: account.
	portfolio add: portfolioChild.
	report _ PortfolioStructureReport of: portfolio.
	
	expectedResult _ OrderedCollection with: 'Portfolio de Compania 1' 
								    with: (self class identString: 'Portfolio de Pepe' byLevel: 1)
								    with: (self class identString: 'Cuenta de Lavado de dinero' byLevel: 2).
	self assert: report report equals: expectedResult.! !
!PortfolioStructureReportTest methodsFor: 'tests' stamp: 'EMI 11/16/2020 16:37:10' prior: 50913861!
test05ReportOfAListOfNamedPortfolioStructureHasCorrectNamesAndIdentation
	| portfolio portfolioChildLeft portfolioChildRight report expectedResult |
	portfolio _ Portfolio withName: 'Compania 1'.
	portfolioChildLeft _ Portfolio withName: 'Pepe'.
	portfolioChildRight _ Portfolio withName: 'Jose'.
	portfolio add: portfolioChildLeft.
	portfolio add: portfolioChildRight.
	report _ PortfolioStructureReport of: portfolio.
	
	expectedResult _ OrderedCollection with: 'Portfolio de Compania 1' 
								    with: (self class identString: 'Portfolio de Pepe' byLevel: 1) 
								    with: (self class identString: 'Portfolio de Jose' byLevel: 1) .
	self assert: report report equals: expectedResult.! !

!testRun: #PortfolioStructureReportTest #test05ReportOfAListOfNamedPortfolioStructureHasCorrectNamesAndIdentation stamp: 'EMI 11/16/2020 16:37:11'!
PASSED!

!testRun: #PortfolioStructureReportTest #test01ReportOfAnEmptyPortfolioStructureHasCorrectName stamp: 'EMI 11/16/2020 16:37:11'!
PASSED!

!testRun: #PortfolioStructureReportTest #test02ReportOfASimplePortfolioStructureHasCorrectNamesAndIdentation stamp: 'EMI 11/16/2020 16:37:11'!
PASSED!

!testRun: #PortfolioStructureReportTest #test03ReportOfAListPortfolioStructureHasCorrectNamesAndIdentation stamp: 'EMI 11/16/2020 16:37:11'!
PASSED!

!testRun: #PortfolioStructureReportTest #test04ReportOfAListOfNamedPortfolioStructureHasCorrectNamesAndIdentation stamp: 'EMI 11/16/2020 16:37:11'!
PASSED!

!testRun: #PortfolioStructureReportTest #test05ReportOfAListOfNamedPortfolioStructureHasCorrectNamesAndIdentation stamp: 'EMI 11/16/2020 16:37:11'!
PASSED!
!AccountSpecialReportTest class methodsFor: 'nil' stamp: 'EMI 11/16/2020 16:37:32'!
identString: aString byLevel: anIdentationLevel
	^aString identByAmount: Report identationSpacesPerLevel * anIdentationLevel! !
!AccountSpecialReportTest methodsFor: 'tests' stamp: 'EMI 11/16/2020 16:38:04' prior: 50915288!
test01EmptyPortfolioOnlyShowsName
	| portfolio report expectedResult |
	portfolio _ Portfolio new.
	report _ AccountSpecialReport of: portfolio.
	expectedResult _ OrderedCollection with: 'Portfolio de Unnamed Portfolio'
								    with: (self class identString: 'Balance = 0' byLevel: 1).
	self assert: report report equals: expectedResult.! !

!testRun: #AccountSpecialReportTest #test01EmptyPortfolioOnlyShowsName stamp: 'EMI 11/16/2020 16:38:07'!
PASSED!
!AccountSpecialReportTest methodsFor: 'tests' stamp: 'EMI 11/16/2020 16:39:30' prior: 50915303!
test02PortfolioWithAnAccountWithADepositShowsNamesAndIdentation
	| portfolio account report expectedResult |
	portfolio _ Portfolio withName: 'Compania de Pepe'.
	account _ ReceptiveAccount withName: 'Suiza'.
	Deposit register: 10 on: account.
	portfolio add: account.
	report _ AccountSpecialReport of: portfolio.
	expectedResult _ OrderedCollection with: 'Portfolio de Compania de Pepe' 
								    with: (self class indentString: 'Cuenta de Suiza' byLevel:1) 
								    with: ('Dep�sito por 10.' identByAmount: Report identationSpacesPerLevel * 2) 
								    with: ('Balance = 10.' identByAmount: Report identationSpacesPerLevel * 2)
								    with: ('Balance = 10' identByAmount: Report identationSpacesPerLevel * 1).
	self assert: report report equals: expectedResult.! !
!AccountSpecialReportTest methodsFor: 'tests' stamp: 'EMI 11/16/2020 16:40:15' prior: 50915604!
test02PortfolioWithAnAccountWithADepositShowsNamesAndIdentation
	| portfolio account report expectedResult |
	portfolio _ Portfolio withName: 'Compania de Pepe'.
	account _ ReceptiveAccount withName: 'Suiza'.
	Deposit register: 10 on: account.
	portfolio add: account.
	report _ AccountSpecialReport of: portfolio.
	expectedResult _ OrderedCollection with: 'Portfolio de Compania de Pepe' 
								    with: (self class identString: 'Cuenta de Suiza' byLevel:1) 
								    with: (self class identString: 'Dep�sito por 10.' byLevel: 2) 
								    with: (self class identString: 'Balance = 10.'  byLevel: 2)
								    with: ('Balance = 10' identByAmount: Report identationSpacesPerLevel * 1).
	self assert: report report equals: expectedResult.! !
!AccountSpecialReportTest methodsFor: 'tests' stamp: 'EMI 11/16/2020 16:40:38' prior: 50915632!
test02PortfolioWithAnAccountWithADepositShowsNamesAndIdentation
	| portfolio account report expectedResult |
	portfolio _ Portfolio withName: 'Compania de Pepe'.
	account _ ReceptiveAccount withName: 'Suiza'.
	Deposit register: 10 on: account.
	portfolio add: account.
	report _ AccountSpecialReport of: portfolio.
	expectedResult _ OrderedCollection with: 'Portfolio de Compania de Pepe' 
								    with: (self class identString: 'Cuenta de Suiza' byLevel:1) 
								    with: (self class identString: 'Dep�sito por 10.' byLevel: 2) 
								    with: (self class identString: 'Balance = 10.' byLevel: 2)
								    with: (self class identString: 'Balance = 10' byLevel: 1).
	self assert: report report equals: expectedResult.! !

!testRun: #AccountSpecialReportTest #test02PortfolioWithAnAccountWithADepositShowsNamesAndIdentation stamp: 'EMI 11/16/2020 16:40:39'!
PASSED!

!testRun: #AccountSpecialReportTest #test01EmptyPortfolioOnlyShowsName stamp: 'EMI 11/16/2020 16:40:39'!
PASSED!

!testRun: #AccountSpecialReportTest #test02PortfolioWithAnAccountWithADepositShowsNamesAndIdentation stamp: 'EMI 11/16/2020 16:40:39'!
PASSED!
!AccountSpecialReportTest methodsFor: 'tests' stamp: 'EMI 11/16/2020 16:41:34'!
test03PortfolioWithAnEmptyPortfolioAndAnAccountWithADepositShowsNamesAndIdentation
	| portfolio account report expectedResult |
	portfolio _ Portfolio withName: 'Compania de Pepe'.
	account _ ReceptiveAccount withName: 'Suiza'.
	Deposit register: 10 on: account.
	portfolio add: account.
	report _ AccountSpecialReport of: portfolio.
	expectedResult _ OrderedCollection with: 'Portfolio de Compania de Pepe' 
								    with: (self class identString: 'Cuenta de Suiza' byLevel:1) 
								    with: (self class identString: 'Dep�sito por 10.' byLevel: 2) 
								    with: (self class identString: 'Balance = 10.' byLevel: 2)
								    with: (self class identString: 'Balance = 10' byLevel: 1).
	self assert: report report equals: expectedResult.! !
!AccountSpecialReportTest methodsFor: 'tests' stamp: 'EMI 11/16/2020 16:41:54' prior: 50915698!
test03PortfolioWithAnEmptyPortfolioAndAnAccountWithADepositShowsNamesAndIdentation
	| portfolio portfolioChild account report expectedResult |
	portfolio _ Portfolio withName: 'Compania de Pepe'.
	account _ ReceptiveAccount withName: 'Suiza'.
	Deposit register: 10 on: account.
	portfolio add: account.
	report _ AccountSpecialReport of: portfolio.
	expectedResult _ OrderedCollection with: 'Portfolio de Compania de Pepe' 
								    with: (self class identString: 'Cuenta de Suiza' byLevel:1) 
								    with: (self class identString: 'Dep�sito por 10.' byLevel: 2) 
								    with: (self class identString: 'Balance = 10.' byLevel: 2)
								    with: (self class identString: 'Balance = 10' byLevel: 1).
	self assert: report report equals: expectedResult.! !
!AccountSpecialReportTest methodsFor: 'tests' stamp: 'EMI 11/16/2020 16:42:40' prior: 50915725!
test03PortfolioWithAnEmptyPortfolioAndAnAccountWithADepositShowsNamesAndIdentation
	| portfolio portfolioChild account report expectedResult |
	portfolio _ Portfolio withName: 'Compania de Pepe'.
	portfolioChild _ Portfolio withName: 'Testaferro de Pepe'.
	portfolio add: portfolioChild.
	account _ ReceptiveAccount withName: 'Suiza'.
	Deposit register: 10 on: account.
	portfolio add: account.
	report _ AccountSpecialReport of: portfolio.
	expectedResult _ OrderedCollection with: 'Portfolio de Compania de Pepe' 
								    with: (self class identString: 'Cuenta de Suiza' byLevel:1) 
								    with: (self class identString: 'Dep�sito por 10.' byLevel: 2) 
								    with: (self class identString: 'Balance = 10.' byLevel: 2)
								    with: (self class identString: 'Balance = 10' byLevel: 1).
	self assert: report report equals: expectedResult.! !
!AccountSpecialReportTest methodsFor: 'tests' stamp: 'EMI 11/16/2020 16:44:24' prior: 50915753!
test03PortfolioWithAnEmptyPortfolioAndAnAccountWithADepositShowsNamesAndIdentation
	| portfolio portfolioChild account report expectedResult |
	portfolio _ Portfolio withName: 'Compania de Pepe'.
	portfolioChild _ Portfolio withName: 'Testaferro de Pepe'.
	portfolio add: portfolioChild.
	account _ ReceptiveAccount withName: 'Suiza'.
	Deposit register: 10 on: account.
	portfolio add: account.
	report _ AccountSpecialReport of: portfolio.
	expectedResult _ OrderedCollection with: 'Portfolio de Compania de Pepe'
								    with: (self class identString: 'Portfolio de Testaferro de Pepe' byLevel:1) 
								    with: (self class identString: 'Balance = 0' byLevel:2)
								    with: (self class identString: 'Cuenta de Suiza' byLevel:1) 
								    with: (self class identString: 'Dep�sito por 10.' byLevel: 2) 
								    with: (self class identString: 'Balance = 10.' byLevel: 2).
	expectedResult add: (self class identString: 'Balance = 10' byLevel: 1).
	self assert: report report equals: expectedResult.! !

!testRun: #AccountSpecialReportTest #test03PortfolioWithAnEmptyPortfolioAndAnAccountWithADepositShowsNamesAndIdentation stamp: 'EMI 11/16/2020 16:44:38'!
PASSED!
!AccountSpecialReportTest methodsFor: 'tests' stamp: 'EMI 11/16/2020 16:45:01'!
test04PortfolioWithAPortfolioAndAnAccountWithADepositShowsNamesAndIdentation
	| portfolio portfolioChild account report expectedResult |
	portfolio _ Portfolio withName: 'Compania de Pepe'.
	portfolioChild _ Portfolio withName: 'Testaferro de Pepe'.
	portfolio add: portfolioChild.
	account _ ReceptiveAccount withName: 'Suiza'.
	Deposit register: 10 on: account.
	portfolio add: account.
	report _ AccountSpecialReport of: portfolio.
	expectedResult _ OrderedCollection with: 'Portfolio de Compania de Pepe'
								    with: (self class identString: 'Portfolio de Testaferro de Pepe' byLevel:1) 
								    with: (self class identString: 'Balance = 0' byLevel:2)
								    with: (self class identString: 'Cuenta de Suiza' byLevel:1) 
								    with: (self class identString: 'Dep�sito por 10.' byLevel: 2) 
								    with: (self class identString: 'Balance = 10.' byLevel: 2).
	expectedResult add: (self class identString: 'Balance = 10' byLevel: 1).
	self assert: report report equals: expectedResult.! !
!AccountSpecialReportTest methodsFor: 'tests' stamp: 'EMI 11/16/2020 16:45:14' prior: 50915823!
test04PortfolioWithAPortfolioAndAnAccountWithADepositShowsNamesAndIdentation
	| portfolio portfolioChild account report expectedResult |
	portfolio _ Portfolio withName: 'Compania de Pepe'.
	portfolioChild _ Portfolio withName: 'Testaferro de Pepe'.
	portfolio add: portfolioChild.
	account _ ReceptiveAccount withName: 'Suiza'.
	Deposit register: 10 on: account.
	portfolioChild add: account.
	report _ AccountSpecialReport of: portfolio.
	expectedResult _ OrderedCollection with: 'Portfolio de Compania de Pepe'
								    with: (self class identString: 'Portfolio de Testaferro de Pepe' byLevel:1) 
								    with: (self class identString: 'Balance = 0' byLevel:2)
								    with: (self class identString: 'Cuenta de Suiza' byLevel:1) 
								    with: (self class identString: 'Dep�sito por 10.' byLevel: 2) 
								    with: (self class identString: 'Balance = 10.' byLevel: 2).
	expectedResult add: (self class identString: 'Balance = 10' byLevel: 1).
	self assert: report report equals: expectedResult.! !
!AccountSpecialReportTest methodsFor: 'tests' stamp: 'EMI 11/16/2020 16:45:46' prior: 50915858!
test04PortfolioWithAPortfolioAndAnAccountWithADepositShowsNamesAndIdentation
	| portfolio portfolioChild account report expectedResult |
	portfolio _ Portfolio withName: 'Compania de Pepe'.
	portfolioChild _ Portfolio withName: 'Testaferro de Pepe'.
	portfolio add: portfolioChild.
	account _ ReceptiveAccount withName: 'Suiza'.
	Deposit register: 10 on: account.
	portfolioChild add: account.
	report _ AccountSpecialReport of: portfolio.
	expectedResult _ OrderedCollection with: 'Portfolio de Compania de Pepe'
								    with: (self class identString: 'Portfolio de Testaferro de Pepe' byLevel:1) 
								    with: (self class identString: 'Cuenta de Suiza' byLevel:1) 
								    with: (self class identString: 'Dep�sito por 10.' byLevel: 2)
								    with: (self class identString: 'Balance = 10.' byLevel: 2)
								    with: (self class identString: 'Balance = 0' byLevel:2).
	expectedResult add: (self class identString: 'Balance = 10' byLevel: 1).
	self assert: report report equals: expectedResult.! !
!AccountSpecialReportTest methodsFor: 'tests' stamp: 'EMI 11/16/2020 16:46:08' prior: 50915893!
test04PortfolioWithAPortfolioAndAnAccountWithADepositShowsNamesAndIdentation
	| portfolio portfolioChild account report expectedResult |
	portfolio _ Portfolio withName: 'Compania de Pepe'.
	portfolioChild _ Portfolio withName: 'Testaferro de Pepe'.
	portfolio add: portfolioChild.
	account _ ReceptiveAccount withName: 'Suiza'.
	Deposit register: 10 on: account.
	portfolioChild add: account.
	report _ AccountSpecialReport of: portfolio.
	expectedResult _ OrderedCollection with: 'Portfolio de Compania de Pepe'
								    with: (self class identString: 'Portfolio de Testaferro de Pepe' byLevel:1) 
								    with: (self class identString: 'Cuenta de Suiza' byLevel:2) 
								    with: (self class identString: 'Dep�sito por 10.' byLevel:3)
								    with: (self class identString: 'Balance = 10.' byLevel: 3)
								    with: (self class identString: 'Balance = 10' byLevel:2).
	expectedResult add: (self class identString: 'Balance = 10' byLevel: 1).
	self assert: report report equals: expectedResult.! !

!testRun: #AccountSpecialReportTest #test04PortfolioWithAPortfolioAndAnAccountWithADepositShowsNamesAndIdentation stamp: 'EMI 11/16/2020 16:46:11'!
PASSED!

!testRun: #AccountSpecialReportTest #test01EmptyPortfolioOnlyShowsName stamp: 'EMI 11/16/2020 16:46:13'!
PASSED!

!testRun: #AccountSpecialReportTest #test02PortfolioWithAnAccountWithADepositShowsNamesAndIdentation stamp: 'EMI 11/16/2020 16:46:13'!
PASSED!

!testRun: #AccountSpecialReportTest #test03PortfolioWithAnEmptyPortfolioAndAnAccountWithADepositShowsNamesAndIdentation stamp: 'EMI 11/16/2020 16:46:13'!
PASSED!

!testRun: #AccountSpecialReportTest #test04PortfolioWithAPortfolioAndAnAccountWithADepositShowsNamesAndIdentation stamp: 'EMI 11/16/2020 16:46:13'!
PASSED!

!testRun: #PortfolioStructureReportTest #test01ReportOfAnEmptyPortfolioStructureHasCorrectName stamp: 'EMI 11/16/2020 16:46:24'!
PASSED!

!testRun: #PortfolioStructureReportTest #test02ReportOfASimplePortfolioStructureHasCorrectNamesAndIdentation stamp: 'EMI 11/16/2020 16:46:24'!
PASSED!

!testRun: #PortfolioStructureReportTest #test03ReportOfAListPortfolioStructureHasCorrectNamesAndIdentation stamp: 'EMI 11/16/2020 16:46:24'!
PASSED!

!testRun: #PortfolioStructureReportTest #test04ReportOfAListOfNamedPortfolioStructureHasCorrectNamesAndIdentation stamp: 'EMI 11/16/2020 16:46:24'!
PASSED!

!testRun: #PortfolioStructureReportTest #test05ReportOfAListOfNamedPortfolioStructureHasCorrectNamesAndIdentation stamp: 'EMI 11/16/2020 16:46:24'!
PASSED!

!testRun: #NetTransfersReportTest #test01NetTransferReportOfEmptyAccountReturnsZero stamp: 'EMI 11/16/2020 16:46:27'!
PASSED!

!testRun: #NetTransfersReportTest #test02NetTransferReportOfAccountWithADepositTransferReturnsCorrectly stamp: 'EMI 11/16/2020 16:46:27'!
PASSED!

!testRun: #NetTransfersReportTest #test03NetTransferReportOfAccountWithAExtractionTransferReturnsCorrectly stamp: 'EMI 11/16/2020 16:46:27'!
PASSED!

!testRun: #NetTransfersReportTest #test04NetTransferReportOfAccountWithADepositReturnsZero stamp: 'EMI 11/16/2020 16:46:27'!
PASSED!

!testRun: #NetTransfersReportTest #test05NetTransferReportOfEmptyPortfolioReturnsZero stamp: 'EMI 11/16/2020 16:46:27'!
PASSED!

!testRun: #NetTransfersReportTest #test06NetTransferReportOfPortfolioWithAccountAndATransferReturnsCorrectly stamp: 'EMI 11/16/2020 16:46:27'!
PASSED!

!testRun: #NetTransfersReportTest #test07NetTransferReportOfPortfoliosWithAccountAndATransferReturnsCorrectly stamp: 'EMI 11/16/2020 16:46:27'!
PASSED!

!testRun: #NetTransfersReportTest #test08NetTransferReportOfPortfolioTreeOfHeightThreeReturnsCorrectly stamp: 'EMI 11/16/2020 16:46:27'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'EMI 11/16/2020 16:46:31'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'EMI 11/16/2020 16:46:31'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'EMI 11/16/2020 16:46:31'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'EMI 11/16/2020 16:46:31'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'EMI 11/16/2020 16:46:31'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'EMI 11/16/2020 16:46:31'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'EMI 11/16/2020 16:46:31'!
PASSED!

!testRun: #ReceptiveAccountTest #test08AccountCanTransferToAnotherAccountWithPositiveAmount stamp: 'EMI 11/16/2020 16:46:31'!
PASSED!

!testRun: #ReceptiveAccountTest #test09AccountsWithTransferKnowsOriginAndDestination stamp: 'EMI 11/16/2020 16:46:31'!
PASSED!

!testRun: #ReceptiveAccountTest #test10AccountsCannotTransferInvalidAmounts stamp: 'EMI 11/16/2020 16:46:31'!
PASSED!

!testRun: #ReceptiveAccountTest #test11AccountsCannotTransferToThemselves stamp: 'EMI 11/16/2020 16:46:31'!
PASSED!

!testRun: #ReceptiveAccountTest #test12AccountHasDefaultName stamp: 'EMI 11/16/2020 16:46:31'!
PASSED!

!testRun: #ReceptiveAccountTest #test13CanCreateAccountWithName stamp: 'EMI 11/16/2020 16:46:31'!
PASSED!

!testRun: #AccountSummaryTest #test01AccountSummaryOfEmptyAccountOnlyShowsBalance stamp: 'EMI 11/16/2020 16:46:36'!
PASSED!

!testRun: #AccountSummaryTest #test02AccountSummaryOfAccountWithADepositShowDepositInfo stamp: 'EMI 11/16/2020 16:46:36'!
PASSED!

!testRun: #AccountSummaryTest #test03AccountSummaryOfAccountWithAWithdrawShowWithdrawInfo stamp: 'EMI 11/16/2020 16:46:36'!
PASSED!

!testRun: #AccountSummaryTest #test04AccountSummaryOfAccountWithAExtractionTransferShowExtractionTransferInfo stamp: 'EMI 11/16/2020 16:46:36'!
PASSED!

!testRun: #AccountSummaryTest #test05AccountSummaryOfAccountWithADepositTransferShowDepositTransferInfo stamp: 'EMI 11/16/2020 16:46:36'!
PASSED!

!testRun: #AccountSummaryTest #test06AccountSummaryOfAccountWithOneOfEachTransactionShowsCorrectInfo stamp: 'EMI 11/16/2020 16:46:36'!
PASSED!

!testRun: #AccountSummaryTest #test07AccountSummaryOfEmptyPortfolioOnlyShowsBalance stamp: 'EMI 11/16/2020 16:46:36'!
PASSED!

!testRun: #AccountSummaryTest #test08AccountSummaryOfPortfolioWithADeposit stamp: 'EMI 11/16/2020 16:46:36'!
PASSED!

!testRun: #AccountSummaryTest #test09AccountSummaryOfPortfolioWithAWithdraw stamp: 'EMI 11/16/2020 16:46:36'!
PASSED!

!testRun: #AccountSummaryTest #test10AccountSummaryOfPortfolioWithADepositTransfer stamp: 'EMI 11/16/2020 16:46:36'!
PASSED!

!testRun: #AccountSummaryTest #test11AccountSummaryOfPortfolioWithAExtractionTransfer stamp: 'EMI 11/16/2020 16:46:36'!
PASSED!

----SNAPSHOT----(16 November 2020 16:46:39) CuisUniversity-4383.image priorSource: 18675646!

----QUIT----(16 November 2020 16:46:41) CuisUniversity-4383.image priorSource: 18703622!

----STARTUP---- (16 November 2020 16:47:28) as /home/doraserver/CuisUniversity/CuisUniversity-4383.image!


----QUIT----(16 November 2020 16:47:32) CuisUniversity-4383.image priorSource: 18703716!

----STARTUP---- (16 November 2020 16:46:47) as /home/doraserver/CuisUniversity/CuisUniversity-4383.image!


----QUIT----(16 November 2020 16:47:36) CuisUniversity-4383.image priorSource: 18703716!

----STARTUP---- (16 November 2020 16:47:47) as /home/doraserver/CuisUniversity/CuisUniversity-4383.image!


----SNAPSHOT----(16 November 2020 16:47:50) CuisUniversity-4383.image priorSource: 18704112!