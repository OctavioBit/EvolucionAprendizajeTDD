----STARTUP---- (9 November 2020 19:15:48) as /home/doraserver/CuisUniversity/CuisUniversity-4383.image!


!classRemoval: #ReceptiveAccount stamp: 'EMI 11/9/2020 19:15:56'!
Asset subclass: #ReceptiveAccount
	instanceVariableNames: 'transactions'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classRemoval: #Portfolio stamp: 'EMI 11/9/2020 19:15:57'!
Asset subclass: #Portfolio
	instanceVariableNames: 'assets'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classRemoval: #Asset stamp: 'EMI 11/9/2020 19:15:58'!
Object subclass: #Asset
	instanceVariableNames: 'parents'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classRemoval: #Withdraw stamp: 'EMI 11/9/2020 19:15:59'!
AccountTransaction subclass: #Withdraw
	instanceVariableNames: 'value'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classRemoval: #Deposit stamp: 'EMI 11/9/2020 19:16:00'!
AccountTransaction subclass: #Deposit
	instanceVariableNames: 'value'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classRemoval: #AccountTransaction stamp: 'EMI 11/9/2020 19:16:01'!
Object subclass: #AccountTransaction
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classRemoval: #ReceptiveAccountTest stamp: 'EMI 11/9/2020 19:16:01'!
TestCase subclass: #ReceptiveAccountTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classRemoval: #PortfolioTest stamp: 'EMI 11/9/2020 19:16:02'!
TestCase subclass: #PortfolioTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

----End fileIn of /home/doraserver/CuisUniversity/Portfolio2 - Ejercicio.st----!
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'EMI 11/9/2020 19:26:15'!
test08AccountCanTransferToAnotherAccount

	| account deposit |
	
	account := ReceptiveAccount new.
	
	deposit := Deposit register: 100 on: account.
		
	self assert: 1 equals: account transactions size .
	self assert: (account transactions includes: deposit).
! !

!classDefinition: #Transfer category: 'Portfolio2-Ejercicio' stamp: 'EMI 11/9/2020 19:29:19'!
AccountTransaction subclass: #Transfer
	instanceVariableNames: 'origin destination amount'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio2-Ejercicio'!
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'EMI 11/9/2020 19:28:11' prior: 50905091!
test08AccountCanTransferToAnotherAccount

	| accountOrigin accountDestination |
	
	accountOrigin _ ReceptiveAccount new.
	accountDestination _ ReceptiveAccount new.
	
	Transfer from: accountOrigin to: accountDestination amount: 10.
! !
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'EMI 11/9/2020 19:33:14' prior: 50905111!
test08AccountCanTransferToAnotherAccount

	| accountOrigin accountDestination |
	
	accountOrigin _ ReceptiveAccount new.
	accountDestination _ ReceptiveAccount new.
	
	Deposit register: 10 on: accountOrigin.
	
	Transfer from: accountOrigin to: accountDestination amount: 10.
	
	self assert: accountOrigin transactions size equals: 1.
	self assert: accountDestination transactions size equals: 1.
	self assert: accountOrigin balance equals: 0.
	self assert: accountDestination balance equals: 10.
! !

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'EMI 11/9/2020 19:34:38'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'EMI 11/9/2020 19:34:38'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'EMI 11/9/2020 19:34:38'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'EMI 11/9/2020 19:34:38'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'EMI 11/9/2020 19:34:38'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'EMI 11/9/2020 19:34:38'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'EMI 11/9/2020 19:34:38'!
PASSED!

!testRun: #ReceptiveAccountTest #test08AccountCanTransferToAnotherAccount stamp: 'EMI 11/9/2020 19:34:38'!
ERROR!

!testRun: #ReceptiveAccountTest #test08AccountCanTransferToAnotherAccount stamp: 'EMI 11/9/2020 19:34:38'!
ERROR!
!Transfer class methodsFor: 'initialization' stamp: 'EMI 11/9/2020 19:35:08'!
from: aReceptiveAccount to: aReceptiveAccount2 amount: aSmallInteger 
	self shouldBeImplemented.! !
!Transfer class methodsFor: 'initialization' stamp: 'EMI 11/9/2020 19:39:12' prior: 50905174!
from: anOriginReceptiveAccount to: aDestinationReceptiveAccount amount: aPositiveNumber
	| instance |
	instance _ self new initializeFor: aPositiveNumber.
	anOriginReceptiveAccount register: instance.
	aDestinationReceptiveAccount register: instance.
	^instance.! !

!testRun: #ReceptiveAccountTest #test08AccountCanTransferToAnotherAccount stamp: 'EMI 11/9/2020 19:39:15'!
ERROR!

!classDefinition: #Transfer category: 'Portfolio2-Ejercicio' stamp: 'EMI 11/9/2020 19:39:36'!
AccountTransaction subclass: #Transfer
	instanceVariableNames: 'origin destination amount positiveNumber'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio2-Ejercicio'!
!Transfer methodsFor: 'initialization' stamp: 'EMI 11/9/2020 19:39:36'!
initializeFor: aPositiveNumber 
	self shouldBeImplemented.
	positiveNumber := aPositiveNumber.! !
!Transfer methodsFor: 'initialization' stamp: 'EMI 11/9/2020 19:40:07' prior: 50905204!
initializeFor: aPositiveNumber 
	amount _ aPositiveNumber.! !

!testRun: #ReceptiveAccountTest #test08AccountCanTransferToAnotherAccount stamp: 'EMI 11/9/2020 19:40:09'!
FAILURE!
!Transfer class methodsFor: 'initialization' stamp: 'EMI 11/9/2020 19:40:45' prior: 50905181!
from: anOriginReceptiveAccount to: aDestinationReceptiveAccount amount: aPositiveNumber
	| instance |
	instance _ self new initializeFor: aPositiveNumber withOrigin: anOriginReceptiveAccount withDestination: aDestinationReceptiveAccount .
	anOriginReceptiveAccount register: instance.
	aDestinationReceptiveAccount register: instance.
	^instance.! !
!Transfer class methodsFor: 'initialization' stamp: 'EMI 11/9/2020 19:40:51' prior: 50905219!
from: anOriginReceptiveAccount to: aDestinationReceptiveAccount amount: aPositiveNumber
	| instance |
	instance _ self new initializeFor: aPositiveNumber withOrigin: anOriginReceptiveAccount withDestination: aDestinationReceptiveAccount.
	anOriginReceptiveAccount register: instance.
	aDestinationReceptiveAccount register: instance.
	^instance.! !
!Transfer methodsFor: 'initialization' stamp: 'EMI 11/9/2020 19:41:19'!
initializeFor: aPositiveNumber withOrigin: anOriginReceptiveAccount withDestination: aDestinationReceptiveAccount
	amount _ aPositiveNumber.
	origin _ anOriginReceptiveAccount.
	destination _ aDestinationReceptiveAccount.! !

!methodRemoval: Transfer #initializeFor: stamp: 'EMI 11/9/2020 19:41:27'!
initializeFor: aPositiveNumber 
	amount _ aPositiveNumber.!
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'EMI 11/9/2020 19:42:03' prior: 50905122!
test08AccountCanTransferToAnotherAccount

	| accountOrigin accountDestination |
	
	accountOrigin _ ReceptiveAccount new.
	accountDestination _ ReceptiveAccount new.
	
	Deposit register: 10 on: accountOrigin.
	
	Transfer from: accountOrigin to: accountDestination amount: 10.
	
	self assert: accountOrigin transactions size equals: 2.
	self assert: accountDestination transactions size equals: 1.
	self assert: accountOrigin balance equals: 0.
	self assert: accountDestination balance equals: 10.
! !

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'EMI 11/9/2020 19:42:07'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'EMI 11/9/2020 19:42:07'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'EMI 11/9/2020 19:42:07'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'EMI 11/9/2020 19:42:07'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'EMI 11/9/2020 19:42:07'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'EMI 11/9/2020 19:42:07'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'EMI 11/9/2020 19:42:07'!
PASSED!

!testRun: #ReceptiveAccountTest #test08AccountCanTransferToAnotherAccount stamp: 'EMI 11/9/2020 19:42:07'!
ERROR!

!testRun: #ReceptiveAccountTest #test08AccountCanTransferToAnotherAccount stamp: 'EMI 11/9/2020 19:42:07'!
ERROR!
!Transfer methodsFor: 'as yet unclassified' stamp: 'EMI 11/9/2020 19:42:39' overrides: 50904992!
affectBalance: aSmallInteger 
	self shouldBeImplemented.! !
!Transfer methodsFor: 'as yet unclassified' stamp: 'EMI 11/9/2020 19:44:52' prior: 50905315 overrides: 50904992!
affectBalance: aBalance 
	self shouldBeImplemented.! !

AccountTransaction subclass: #Transfer
	instanceVariableNames: 'origin destination amount'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio2-Ejercicio'!

!classDefinition: #Transfer category: 'Portfolio2-Ejercicio' stamp: 'EMI 11/9/2020 19:46:46'!
AccountTransaction subclass: #Transfer
	instanceVariableNames: 'origin destination amount'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio2-Ejercicio'!
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'EMI 11/9/2020 19:50:34' prior: 50905262!
test08AccountCanTransferToAnotherAccount

	| accountOrigin accountDestination |
	
	accountOrigin _ ReceptiveAccount new.
	accountDestination _ ReceptiveAccount new.
	
	Deposit register: 10 on: accountOrigin.
	
	Transfer from: accountOrigin to: accountDestination amount: 0.
	
	self assert: accountOrigin transactions size equals: 2.
	self assert: accountDestination transactions size equals: 1.
	self assert: accountOrigin balance equals: 10.
	self assert: accountDestination balance equals: 0.
! !
!Transfer methodsFor: 'as yet unclassified' stamp: 'EMI 11/9/2020 19:50:43' prior: 50905321 overrides: 50904992!
affectBalance: aBalance 
	^0.! !

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'EMI 11/9/2020 19:50:45'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'EMI 11/9/2020 19:50:45'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'EMI 11/9/2020 19:50:45'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'EMI 11/9/2020 19:50:45'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'EMI 11/9/2020 19:50:45'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'EMI 11/9/2020 19:50:45'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'EMI 11/9/2020 19:50:45'!
PASSED!

!testRun: #ReceptiveAccountTest #test08AccountCanTransferToAnotherAccount stamp: 'EMI 11/9/2020 19:50:45'!
FAILURE!

!testRun: #ReceptiveAccountTest #test08AccountCanTransferToAnotherAccount stamp: 'EMI 11/9/2020 19:50:45'!
FAILURE!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'EMI 11/9/2020 19:51:03'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'EMI 11/9/2020 19:51:03'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'EMI 11/9/2020 19:51:03'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'EMI 11/9/2020 19:51:03'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'EMI 11/9/2020 19:51:03'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'EMI 11/9/2020 19:51:03'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'EMI 11/9/2020 19:51:03'!
PASSED!

!testRun: #ReceptiveAccountTest #test08AccountCanTransferToAnotherAccount stamp: 'EMI 11/9/2020 19:51:03'!
FAILURE!

!testRun: #ReceptiveAccountTest #test08AccountCanTransferToAnotherAccount stamp: 'EMI 11/9/2020 19:51:03'!
FAILURE!
!Transfer methodsFor: 'as yet unclassified' stamp: 'EMI 11/9/2020 19:52:03' prior: 50905360 overrides: 50904992!
affectBalance: aBalance 
	^aBalance.! !

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'EMI 11/9/2020 19:52:07'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'EMI 11/9/2020 19:52:07'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'EMI 11/9/2020 19:52:07'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'EMI 11/9/2020 19:52:07'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'EMI 11/9/2020 19:52:07'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'EMI 11/9/2020 19:52:07'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'EMI 11/9/2020 19:52:07'!
PASSED!

!testRun: #ReceptiveAccountTest #test08AccountCanTransferToAnotherAccount stamp: 'EMI 11/9/2020 19:52:07'!
PASSED!
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'EMI 11/9/2020 19:54:40'!
test08AccountCanTransferToAnotherAccountWithZeroAmount

	| accountOrigin accountDestination |
	
	accountOrigin _ ReceptiveAccount new.
	accountDestination _ ReceptiveAccount new.
	
	Deposit register: 10 on: accountOrigin.
	
	Transfer from: accountOrigin to: accountDestination amount: 0.
	
	self assert: accountOrigin transactions size equals: 2.
	self assert: accountDestination transactions size equals: 1.
	self assert: accountOrigin balance equals: 10.
	self assert: accountDestination balance equals: 0.
! !

!methodRemoval: ReceptiveAccountTest #test08AccountCanTransferToAnotherAccount stamp: 'EMI 11/9/2020 19:54:40'!
test08AccountCanTransferToAnotherAccount

	| accountOrigin accountDestination |
	
	accountOrigin _ ReceptiveAccount new.
	accountDestination _ ReceptiveAccount new.
	
	Deposit register: 10 on: accountOrigin.
	
	Transfer from: accountOrigin to: accountDestination amount: 0.
	
	self assert: accountOrigin transactions size equals: 2.
	self assert: accountDestination transactions size equals: 1.
	self assert: accountOrigin balance equals: 10.
	self assert: accountDestination balance equals: 0.
!
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'EMI 11/9/2020 19:54:51'!
test09AccountCanTransferToAnotherAccountWithPositiveAmount

	| accountOrigin accountDestination |
	
	accountOrigin _ ReceptiveAccount new.
	accountDestination _ ReceptiveAccount new.
	
	Deposit register: 10 on: accountOrigin.
	
	Transfer from: accountOrigin to: accountDestination amount: 0.
	
	self assert: accountOrigin transactions size equals: 2.
	self assert: accountDestination transactions size equals: 1.
	self assert: accountOrigin balance equals: 10.
	self assert: accountDestination balance equals: 0.
! !
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'EMI 11/9/2020 19:55:03' prior: 50905505!
test09AccountCanTransferToAnotherAccountWithPositiveAmount

	| accountOrigin accountDestination |
	
	accountOrigin _ ReceptiveAccount new.
	accountDestination _ ReceptiveAccount new.
	
	Deposit register: 10 on: accountOrigin.
	
	Transfer from: accountOrigin to: accountDestination amount: 10.
	
	self assert: accountOrigin transactions size equals: 2.
	self assert: accountDestination transactions size equals: 1.
	self assert: accountOrigin balance equals: 0.
	self assert: accountDestination balance equals: 0.
! !

AccountTransaction subclass: #ExtractionTransfer
	instanceVariableNames: 'transfer'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio2-Ejercicio'!

!classDefinition: #ExtractionTransfer category: 'Portfolio2-Ejercicio' stamp: 'EMI 11/9/2020 19:57:31'!
AccountTransaction subclass: #ExtractionTransfer
	instanceVariableNames: 'transfer'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio2-Ejercicio'!
!ExtractionTransfer class methodsFor: 'nil' stamp: 'EMI 11/9/2020 19:58:13'!
fromTransfer: aTransfer
	^self new initialize: aTransfer.! !
!ExtractionTransfer methodsFor: 'nil' stamp: 'EMI 11/9/2020 19:58:29'!
initialize: aTransfer
	! !
!ExtractionTransfer methodsFor: 'as yet unclassified' stamp: 'EMI 11/9/2020 19:58:36' prior: 50905562!
initialize: aTransfer
	transfer _ aTransfer.
	! !
!ExtractionTransfer methodsFor: 'nil' stamp: 'EMI 11/9/2020 19:59:44'!
afferBalance: aBalance
	^aBalance - transfer value.! !
!ExtractionTransfer methodsFor: 'nil' stamp: 'EMI 11/9/2020 20:00:16' overrides: 50904988!
value
	^transfer value.! !
!Transfer methodsFor: 'nil' stamp: 'EMI 11/9/2020 20:00:34' overrides: 50904988!
value
	^amount.! !
!Transfer class methodsFor: 'initialization' stamp: 'EMI 11/9/2020 20:01:04' prior: 50905233!
from: anOriginReceptiveAccount to: aDestinationReceptiveAccount amount: aPositiveNumber
	| instance |
	instance _ self new initializeFor: aPositiveNumber withOrigin: anOriginReceptiveAccount withDestination: aDestinationReceptiveAccount.
	anOriginReceptiveAccount register: (ExtractionTransfer from: instance).
	aDestinationReceptiveAccount register: instance.
	^instance.! !
!Transfer class methodsFor: 'initialization' stamp: 'EMI 11/9/2020 20:01:16' prior: 50905584!
from: anOriginReceptiveAccount to: aDestinationReceptiveAccount amount: aPositiveNumber
	| instance |
	instance _ self new initializeFor: aPositiveNumber withOrigin: anOriginReceptiveAccount withDestination: aDestinationReceptiveAccount.
	anOriginReceptiveAccount register: (ExtractionTransfer fromTransfer: instance).
	aDestinationReceptiveAccount register: instance.
	^instance.! !

AccountTransaction subclass: #DepositTransfer
	instanceVariableNames: 'transfer'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio2-Ejercicio'!

!classDefinition: #DepositTransfer category: 'Portfolio2-Ejercicio' stamp: 'EMI 11/9/2020 20:01:44'!
AccountTransaction subclass: #DepositTransfer
	instanceVariableNames: 'transfer'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio2-Ejercicio'!
!DepositTransfer methodsFor: 'nil' stamp: 'EMI 11/9/2020 20:02:17' overrides: 50904992!
affectBalance: aBalance
	^aBalance + transfer value.! !
!DepositTransfer methodsFor: 'as yet unclassified' stamp: 'EMI 11/9/2020 20:02:26' overrides: 50904988!
value 
	^transfer value.! !
!DepositTransfer class methodsFor: 'nil' stamp: 'EMI 11/9/2020 20:02:57'!
fromTransfer: aTransfer
	^self new initialization: aTransfer.! !
!DepositTransfer methodsFor: 'nil' stamp: 'EMI 11/9/2020 20:03:24'!
initialization: aTransfer
	transfer _ aTransfer.! !
!DepositTransfer methodsFor: 'as yet unclassified' stamp: 'EMI 11/9/2020 20:03:48'!
initialize: aTransfer
	transfer _ aTransfer.! !
!DepositTransfer class methodsFor: 'as yet unclassified' stamp: 'EMI 11/9/2020 20:03:48' prior: 50905637!
fromTransfer: aTransfer
	^self new initialize: aTransfer.! !

!methodRemoval: DepositTransfer #initialization: stamp: 'EMI 11/9/2020 20:03:48'!
initialization: aTransfer
	transfer _ aTransfer.!
!ExtractionTransfer methodsFor: 'as yet unclassified' stamp: 'EMI 11/9/2020 20:04:09' overrides: 50904992!
affectBalance: aBalance
	^aBalance - transfer value.! !

!methodRemoval: ExtractionTransfer #afferBalance: stamp: 'EMI 11/9/2020 20:04:09'!
afferBalance: aBalance
	^aBalance - transfer value.!
!Transfer class methodsFor: 'initialization' stamp: 'EMI 11/9/2020 20:04:33' prior: 50905599!
from: anOriginReceptiveAccount to: aDestinationReceptiveAccount amount: aPositiveNumber
	| instance |
	instance _ self new initializeFor: aPositiveNumber withOrigin: anOriginReceptiveAccount withDestination: aDestinationReceptiveAccount.
	anOriginReceptiveAccount register: (ExtractionTransfer fromTransfer: instance).
	aDestinationReceptiveAccount register: (DepositTransfer fromTransfer: instance).
	^instance.! !

----SNAPSHOT----(9 November 2020 20:04:56) CuisUniversity-4383.image priorSource: 18325256!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'EMI 11/9/2020 20:05:03'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'EMI 11/9/2020 20:05:03'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'EMI 11/9/2020 20:05:03'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'EMI 11/9/2020 20:05:03'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'EMI 11/9/2020 20:05:03'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'EMI 11/9/2020 20:05:03'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'EMI 11/9/2020 20:05:03'!
PASSED!

!testRun: #ReceptiveAccountTest #test08AccountCanTransferToAnotherAccountWithZeroAmount stamp: 'EMI 11/9/2020 20:05:03'!
PASSED!

!testRun: #ReceptiveAccountTest #test09AccountCanTransferToAnotherAccountWithPositiveAmount stamp: 'EMI 11/9/2020 20:05:03'!
FAILURE!

!testRun: #ReceptiveAccountTest #test09AccountCanTransferToAnotherAccountWithPositiveAmount stamp: 'EMI 11/9/2020 20:05:03'!
FAILURE!
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'EMI 11/9/2020 20:05:26' prior: 50905524!
test09AccountCanTransferToAnotherAccountWithPositiveAmount

	| accountOrigin accountDestination |
	
	accountOrigin _ ReceptiveAccount new.
	accountDestination _ ReceptiveAccount new.
	
	Deposit register: 10 on: accountOrigin.
	
	Transfer from: accountOrigin to: accountDestination amount: 10.
	
	self assert: accountOrigin transactions size equals: 2.
	self assert: accountDestination transactions size equals: 1.
	self assert: accountOrigin balance equals: 0.
	self assert: accountDestination balance equals: 10.
! !

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'EMI 11/9/2020 20:05:37'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'EMI 11/9/2020 20:05:37'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'EMI 11/9/2020 20:05:37'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'EMI 11/9/2020 20:05:37'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'EMI 11/9/2020 20:05:37'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'EMI 11/9/2020 20:05:37'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'EMI 11/9/2020 20:05:37'!
PASSED!

!testRun: #ReceptiveAccountTest #test08AccountCanTransferToAnotherAccountWithZeroAmount stamp: 'EMI 11/9/2020 20:05:37'!
PASSED!

!testRun: #ReceptiveAccountTest #test09AccountCanTransferToAnotherAccountWithPositiveAmount stamp: 'EMI 11/9/2020 20:05:37'!
PASSED!

Transfer subclass: #ExtractionTransfer
	instanceVariableNames: 'transfer'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio2-Ejercicio'!

!classDefinition: #ExtractionTransfer category: 'Portfolio2-Ejercicio' stamp: 'EMI 11/9/2020 20:09:48'!
Transfer subclass: #ExtractionTransfer
	instanceVariableNames: 'transfer'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio2-Ejercicio'!

Transfer subclass: #DepositTransfer
	instanceVariableNames: 'transfer'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio2-Ejercicio'!

!classDefinition: #DepositTransfer category: 'Portfolio2-Ejercicio' stamp: 'EMI 11/9/2020 20:09:58'!
Transfer subclass: #DepositTransfer
	instanceVariableNames: 'transfer'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio2-Ejercicio'!
!Transfer methodsFor: 'as yet unclassified' stamp: 'EMI 11/9/2020 20:10:06' prior: 50905433 overrides: 50904992!
affectBalance: aBalance 
	^self subclassResponsibility.! !

!methodRemoval: DepositTransfer #value stamp: 'EMI 11/9/2020 20:10:33'!
value 
	^transfer value.!

!methodRemoval: ExtractionTransfer #value stamp: 'EMI 11/9/2020 20:10:40'!
value
	^transfer value.!
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'EMI 11/9/2020 20:12:21'!
test10AccountsWithTransferKnowsOriginAndDestination

	| accountOrigin accountDestination |
	
	accountOrigin _ ReceptiveAccount new.
	accountDestination _ ReceptiveAccount new.
	
	Deposit register: 10 on: accountOrigin.
	
	Transfer from: accountOrigin to: accountDestination amount: 10.
	
	self assert: accountOrigin transactions size equals: 2.
	self assert: accountDestination transactions size equals: 1.
	self assert: accountOrigin balance equals: 0.
	self assert: accountDestination balance equals: 10.
! !
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'EMI 11/9/2020 20:14:10' prior: 50905821!
test10AccountsWithTransferKnowsOriginAndDestination

	| accountOrigin accountDestination |
	
	accountOrigin _ ReceptiveAccount new.
	accountDestination _ ReceptiveAccount new.
	
	Deposit register: 10 on: accountOrigin.
	Transfer from: accountOrigin to: accountDestination amount: 10.
	
	self assert: (accountOrigin transactions 	last) origin equals: accountOrigin.
	self assert: (accountDestination transactions 	last) origin equals: accountDestination.
! !
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'EMI 11/9/2020 20:14:38' prior: 50905840!
test10AccountsWithTransferKnowsOriginAndDestination

	| accountOrigin accountDestination |
	
	accountOrigin _ ReceptiveAccount new.
	accountDestination _ ReceptiveAccount new.
	
	Deposit register: 10 on: accountOrigin.
	Transfer from: accountOrigin to: accountDestination amount: 10.
	
	self assert: (accountOrigin transactions 	last) origin equals: accountOrigin.
	self assert: (accountDestination transactions 	last) destination equals: accountDestination.
! !

!testRun: #ReceptiveAccountTest #test10AccountsWithTransferKnowsOriginAndDestination stamp: 'EMI 11/9/2020 20:14:45'!
ERROR!
!Transfer methodsFor: 'nil' stamp: 'EMI 11/9/2020 20:15:06'!
origin
	^origin.! !
!Transfer methodsFor: 'as yet unclassified' stamp: 'EMI 11/9/2020 20:15:13'!
destination
	^destination .! !
!Transfer methodsFor: 'as yet unclassified' stamp: 'EMI 11/9/2020 20:15:15' prior: 50905883!
destination
	^destination.! !

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'EMI 11/9/2020 20:15:20'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'EMI 11/9/2020 20:15:20'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'EMI 11/9/2020 20:15:20'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'EMI 11/9/2020 20:15:20'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'EMI 11/9/2020 20:15:20'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'EMI 11/9/2020 20:15:20'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'EMI 11/9/2020 20:15:20'!
PASSED!

!testRun: #ReceptiveAccountTest #test08AccountCanTransferToAnotherAccountWithZeroAmount stamp: 'EMI 11/9/2020 20:15:20'!
PASSED!

!testRun: #ReceptiveAccountTest #test09AccountCanTransferToAnotherAccountWithPositiveAmount stamp: 'EMI 11/9/2020 20:15:20'!
PASSED!

!testRun: #ReceptiveAccountTest #test10AccountsWithTransferKnowsOriginAndDestination stamp: 'EMI 11/9/2020 20:15:20'!
FAILURE!

!testRun: #ReceptiveAccountTest #test10AccountsWithTransferKnowsOriginAndDestination stamp: 'EMI 11/9/2020 20:15:20'!
FAILURE!
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'EMI 11/9/2020 20:15:56' prior: 50905858!
test10AccountsWithTransferKnowsOriginAndDestination

	| accountOrigin accountDestination |
	
	accountOrigin _ ReceptiveAccount new.
	accountDestination _ ReceptiveAccount new.
	
	Deposit register: 10 on: accountOrigin.
	Transfer from: accountOrigin to: accountDestination amount: 10.
	
	self assert: (accountOrigin transactions 	at: 2) origin equals: accountOrigin.
	self assert: (accountDestination transactions 	last) destination equals: accountDestination.
! !

!testRun: #ReceptiveAccountTest #test10AccountsWithTransferKnowsOriginAndDestination stamp: 'EMI 11/9/2020 20:16:06'!
FAILURE!
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'EMI 11/9/2020 20:19:56' prior: 50905934!
test10AccountsWithTransferKnowsOriginAndDestination

	| accountOrigin accountDestination |
	
	accountOrigin _ ReceptiveAccount new.
	accountDestination _ ReceptiveAccount new.
	
	Deposit register: 10 on: accountOrigin.
	Transfer from: accountOrigin to: accountDestination amount: 10.
	
	self assert: (accountOrigin transactions 	detect: [:aTransaction | aTransaction isKindOf: Transfer]) origin equals: accountOrigin.
	self assert: (accountDestination transactions 	first) destination equals: accountDestination.
! !

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'EMI 11/9/2020 20:20:04'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'EMI 11/9/2020 20:20:04'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'EMI 11/9/2020 20:20:04'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'EMI 11/9/2020 20:20:04'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'EMI 11/9/2020 20:20:04'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'EMI 11/9/2020 20:20:04'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'EMI 11/9/2020 20:20:04'!
PASSED!

!testRun: #ReceptiveAccountTest #test08AccountCanTransferToAnotherAccountWithZeroAmount stamp: 'EMI 11/9/2020 20:20:04'!
PASSED!

!testRun: #ReceptiveAccountTest #test09AccountCanTransferToAnotherAccountWithPositiveAmount stamp: 'EMI 11/9/2020 20:20:04'!
PASSED!

!testRun: #ReceptiveAccountTest #test10AccountsWithTransferKnowsOriginAndDestination stamp: 'EMI 11/9/2020 20:20:04'!
FAILURE!

!testRun: #ReceptiveAccountTest #test10AccountsWithTransferKnowsOriginAndDestination stamp: 'EMI 11/9/2020 20:20:04'!
FAILURE!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'EMI 11/9/2020 20:20:24'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'EMI 11/9/2020 20:20:24'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'EMI 11/9/2020 20:20:24'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'EMI 11/9/2020 20:20:24'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'EMI 11/9/2020 20:20:24'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'EMI 11/9/2020 20:20:24'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'EMI 11/9/2020 20:20:24'!
PASSED!

!testRun: #ReceptiveAccountTest #test08AccountCanTransferToAnotherAccountWithZeroAmount stamp: 'EMI 11/9/2020 20:20:24'!
PASSED!

!testRun: #ReceptiveAccountTest #test09AccountCanTransferToAnotherAccountWithPositiveAmount stamp: 'EMI 11/9/2020 20:20:24'!
PASSED!

!testRun: #ReceptiveAccountTest #test10AccountsWithTransferKnowsOriginAndDestination stamp: 'EMI 11/9/2020 20:20:24'!
FAILURE!

!testRun: #ReceptiveAccountTest #test10AccountsWithTransferKnowsOriginAndDestination stamp: 'EMI 11/9/2020 20:20:24'!
FAILURE!

(accountOrigin transactions 	detect: [:aTransaction | aTransaction isKindOf: Transfer])!

!testRun: #ReceptiveAccountTest #test10AccountsWithTransferKnowsOriginAndDestination stamp: 'EMI 11/9/2020 20:23:30'!
FAILURE!
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'EMI 11/9/2020 20:24:35' prior: 50905956!
test10AccountsWithTransferKnowsOriginAndDestination

	| accountOrigin accountDestination t |
	
	accountOrigin _ ReceptiveAccount new.
	accountDestination _ ReceptiveAccount new.
	
	Deposit register: 10 on: accountOrigin.
	Transfer from: accountOrigin to: accountDestination amount: 10.
	t _ (accountOrigin transactions 	detect: [:aTransaction | aTransaction isKindOf: Transfer]).
	self assert: t origin equals: accountOrigin.
	self assert: (accountDestination transactions 	first) destination equals: accountDestination.
! !

!testRun: #ReceptiveAccountTest #test10AccountsWithTransferKnowsOriginAndDestination stamp: 'EMI 11/9/2020 20:24:38'!
FAILURE!

t origin!
!DepositTransfer methodsFor: 'nil' stamp: 'EMI 11/9/2020 20:25:40' overrides: 50905879!
origin
	^transfer origin.! !
!ExtractionTransfer methodsFor: 'nil' stamp: 'EMI 11/9/2020 20:25:54' overrides: 50905879!
origin
	^transfer origin! !
!DepositTransfer methodsFor: 'as yet unclassified' stamp: 'EMI 11/9/2020 20:26:17' overrides: 50905887!
destination
	^transfer destination.! !
!ExtractionTransfer methodsFor: 'as yet unclassified' stamp: 'EMI 11/9/2020 20:26:28' overrides: 50905887!
destination
	^transfer destination! !
!DepositTransfer methodsFor: 'nil' stamp: 'EMI 11/9/2020 20:27:00' overrides: 50905580!
value
	^transfer value.! !
!ExtractionTransfer methodsFor: 'nil' stamp: 'EMI 11/9/2020 20:27:15' overrides: 50905580!
value
	^transfer value.! !

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'EMI 11/9/2020 20:27:38'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'EMI 11/9/2020 20:27:38'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'EMI 11/9/2020 20:27:38'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'EMI 11/9/2020 20:27:38'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'EMI 11/9/2020 20:27:38'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'EMI 11/9/2020 20:27:38'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'EMI 11/9/2020 20:27:38'!
PASSED!

!testRun: #ReceptiveAccountTest #test08AccountCanTransferToAnotherAccountWithZeroAmount stamp: 'EMI 11/9/2020 20:27:38'!
PASSED!

!testRun: #ReceptiveAccountTest #test09AccountCanTransferToAnotherAccountWithPositiveAmount stamp: 'EMI 11/9/2020 20:27:38'!
PASSED!

!testRun: #ReceptiveAccountTest #test10AccountsWithTransferKnowsOriginAndDestination stamp: 'EMI 11/9/2020 20:27:38'!
PASSED!
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'EMI 11/9/2020 20:28:18' prior: 50906068!
test10AccountsWithTransferKnowsOriginAndDestination

	| accountOrigin accountDestination |
	
	accountOrigin _ ReceptiveAccount new.
	accountDestination _ ReceptiveAccount new.
	
	Deposit register: 10 on: accountOrigin.
	Transfer from: accountOrigin to: accountDestination amount: 10.

	self assert: (accountOrigin transactions 	detect: [:aTransaction | aTransaction isKindOf: Transfer]) origin equals: accountOrigin.
	self assert: (accountDestination transactions 	first) destination equals: accountDestination.
! !
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'EMI 11/9/2020 20:29:14' prior: 50906157!
test10AccountsWithTransferKnowsOriginAndDestination

	| accountOrigin accountDestination |
	
	accountOrigin _ ReceptiveAccount new.
	accountDestination _ ReceptiveAccount new.
	
	Deposit register: 10 on: accountOrigin.
	Transfer from: accountOrigin to: accountDestination amount: 10.

	self assert: (accountOrigin transactions 	detect: [:aTransaction | aTransaction isKindOf: Transfer]) origin equals: accountOrigin.
	self assert: (accountOrigin transactions 	detect: [:aTransaction | aTransaction isKindOf: Transfer]) destination equals: accountDestination.
	self assert: (accountDestination transactions 	first) origin equals: accountOrigin.
	self assert: (accountDestination transactions 	first) destination equals: accountDestination.
! !

!testRun: #ReceptiveAccountTest #test10AccountsWithTransferKnowsOriginAndDestination stamp: 'EMI 11/9/2020 20:29:23'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'EMI 11/9/2020 20:29:23'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'EMI 11/9/2020 20:29:23'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'EMI 11/9/2020 20:29:23'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'EMI 11/9/2020 20:29:23'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'EMI 11/9/2020 20:29:23'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'EMI 11/9/2020 20:29:23'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'EMI 11/9/2020 20:29:23'!
PASSED!

!testRun: #ReceptiveAccountTest #test08AccountCanTransferToAnotherAccountWithZeroAmount stamp: 'EMI 11/9/2020 20:29:23'!
PASSED!

!testRun: #ReceptiveAccountTest #test09AccountCanTransferToAnotherAccountWithPositiveAmount stamp: 'EMI 11/9/2020 20:29:23'!
PASSED!

!testRun: #ReceptiveAccountTest #test10AccountsWithTransferKnowsOriginAndDestination stamp: 'EMI 11/9/2020 20:29:23'!
PASSED!

AccountTransaction subclass: #Transfer
	instanceVariableNames: 'origin destination amount'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio2-Ejercicio'!

!classDefinition: #Transfer category: 'Portfolio2-Ejercicio' stamp: 'EMI 11/9/2020 20:56:42'!
AccountTransaction subclass: #Transfer
	instanceVariableNames: 'origin destination amount'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio2-Ejercicio'!

!classRenamed: #Transfer as: #TransferOperations stamp: 'EMI 11/9/2020 20:56:52'!
Smalltalk renameClassNamed: #Transfer as: #TransferOperations!
!ReceptiveAccountTest methodsFor: 'as yet unclassified' stamp: 'EMI 11/9/2020 20:56:53' prior: 50905729!
test09AccountCanTransferToAnotherAccountWithPositiveAmount

	| accountOrigin accountDestination |
	
	accountOrigin _ ReceptiveAccount new.
	accountDestination _ ReceptiveAccount new.
	
	Deposit register: 10 on: accountOrigin.
	
	TransferOperations from: accountOrigin to: accountDestination amount: 10.
	
	self assert: accountOrigin transactions size equals: 2.
	self assert: accountDestination transactions size equals: 1.
	self assert: accountOrigin balance equals: 0.
	self assert: accountDestination balance equals: 10.
! !
!ReceptiveAccountTest methodsFor: 'as yet unclassified' stamp: 'EMI 11/9/2020 20:56:53' prior: 50906176!
test10AccountsWithTransferKnowsOriginAndDestination

	| accountOrigin accountDestination |
	
	accountOrigin _ ReceptiveAccount new.
	accountDestination _ ReceptiveAccount new.
	
	Deposit register: 10 on: accountOrigin.
	TransferOperations from: accountOrigin to: accountDestination amount: 10.

	self assert: (accountOrigin transactions 	detect: [:aTransaction | aTransaction isKindOf: TransferOperations]) origin equals: accountOrigin.
	self assert: (accountOrigin transactions 	detect: [:aTransaction | aTransaction isKindOf: TransferOperations]) destination equals: accountDestination.
	self assert: (accountDestination transactions 	first) origin equals: accountOrigin.
	self assert: (accountDestination transactions 	first) destination equals: accountDestination.
! !
!ReceptiveAccountTest methodsFor: 'as yet unclassified' stamp: 'EMI 11/9/2020 20:56:53' prior: 50905467!
test08AccountCanTransferToAnotherAccountWithZeroAmount

	| accountOrigin accountDestination |
	
	accountOrigin _ ReceptiveAccount new.
	accountDestination _ ReceptiveAccount new.
	
	Deposit register: 10 on: accountOrigin.
	
	TransferOperations from: accountOrigin to: accountDestination amount: 0.
	
	self assert: accountOrigin transactions size equals: 2.
	self assert: accountDestination transactions size equals: 1.
	self assert: accountOrigin balance equals: 10.
	self assert: accountDestination balance equals: 0.
! !

Object subclass: #Transfer
	instanceVariableNames: 'origin destination amount'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio2-Ejercicio'!

!classDefinition: #Transfer category: 'Portfolio2-Ejercicio' stamp: 'EMI 11/9/2020 20:57:06'!
Object subclass: #Transfer
	instanceVariableNames: 'origin destination amount'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio2-Ejercicio'!
!Transfer methodsFor: 'nil' stamp: 'EMI 11/9/2020 20:57:22' overrides: 16881508!
value
	^amount! !
!Transfer methodsFor: 'as yet unclassified' stamp: 'EMI 11/9/2020 20:57:32'!
origin
	^origin! !
!Transfer methodsFor: 'as yet unclassified' stamp: 'EMI 11/9/2020 20:57:41'!
destination
	^destination! !
!TransferOperations methodsFor: 'as yet unclassified' stamp: 'EMI 11/9/2020 20:57:57' prior: 50905887!
destination
	^destination.! !

AccountTransaction subclass: #TransferOperations
	instanceVariableNames: 'transfer'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio2-Ejercicio'!

TransferOperations subclass: #DepositTransfer
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio2-Ejercicio'!

!classDefinition: #DepositTransfer category: 'Portfolio2-Ejercicio' stamp: 'EMI 11/9/2020 20:58:29'!
TransferOperations subclass: #DepositTransfer
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio2-Ejercicio'!

TransferOperations subclass: #ExtractionTransfer
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio2-Ejercicio'!

!classDefinition: #ExtractionTransfer category: 'Portfolio2-Ejercicio' stamp: 'EMI 11/9/2020 20:58:33'!
TransferOperations subclass: #ExtractionTransfer
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio2-Ejercicio'!

AccountTransaction subclass: #TransferOperations
	instanceVariableNames: 'transfer'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio2-Ejercicio'!

!classDefinition: #TransferOperations category: 'Portfolio2-Ejercicio' stamp: 'EMI 11/9/2020 20:58:42'!
AccountTransaction subclass: #TransferOperations
	instanceVariableNames: 'transfer'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio2-Ejercicio'!
!TransferOperations methodsFor: 'as yet unclassified' stamp: 'EMI 11/9/2020 20:59:17' prior: 50906355!
destination
	^transfer destination.! !
!TransferOperations methodsFor: 'as yet unclassified' stamp: 'EMI 11/9/2020 20:59:22' prior: 50905879!
origin
	^transfer origin.! !
!TransferOperations methodsFor: 'as yet unclassified' stamp: 'EMI 11/9/2020 20:59:30' prior: 50905580 overrides: 50904988!
value
	^transfer value.! !
!Transfer class methodsFor: 'nil' stamp: 'EMI 11/9/2020 20:59:52'!
from: anOriginReceptiveAccount to: aDestinationReceptiveAccount amount: aPositiveNumber
	| instance |
	instance _ self new initializeFor: aPositiveNumber withOrigin: anOriginReceptiveAccount withDestination: aDestinationReceptiveAccount.
	anOriginReceptiveAccount register: (ExtractionTransfer fromTransfer: instance).
	aDestinationReceptiveAccount register: (DepositTransfer fromTransfer: instance).
	^instance.! !
!Transfer methodsFor: 'nil' stamp: 'EMI 11/9/2020 21:00:12'!
initializeFor: aPositiveNumber withOrigin: anOriginReceptiveAccount withDestination: aDestinationReceptiveAccount
	amount _ aPositiveNumber.
	origin _ anOriginReceptiveAccount.
	destination _ aDestinationReceptiveAccount.! !
!TransferOperations class methodsFor: 'initialization' stamp: 'EMI 11/9/2020 21:01:28'!
fromTransfer: aTransfer
	^self new initializeFor: aTransfer.! !

!methodRemoval: TransferOperations class #from:to:amount: stamp: 'EMI 11/9/2020 21:01:33'!
from: anOriginReceptiveAccount to: aDestinationReceptiveAccount amount: aPositiveNumber
	| instance |
	instance _ self new initializeFor: aPositiveNumber withOrigin: anOriginReceptiveAccount withDestination: aDestinationReceptiveAccount.
	anOriginReceptiveAccount register: (ExtractionTransfer fromTransfer: instance).
	aDestinationReceptiveAccount register: (DepositTransfer fromTransfer: instance).
	^instance.!
!TransferOperations methodsFor: 'initialization' stamp: 'EMI 11/9/2020 21:01:56'!
initializeFor: aTransfer
	transfer _ aTransfer.! !

!methodRemoval: TransferOperations #initializeFor:withOrigin:withDestination: stamp: 'EMI 11/9/2020 21:02:00'!
initializeFor: aPositiveNumber withOrigin: anOriginReceptiveAccount withDestination: aDestinationReceptiveAccount
	amount _ aPositiveNumber.
	origin _ anOriginReceptiveAccount.
	destination _ aDestinationReceptiveAccount.!

!methodRemoval: DepositTransfer class #fromTransfer: stamp: 'EMI 11/9/2020 21:02:28'!
fromTransfer: aTransfer
	^self new initialize: aTransfer.!

!methodRemoval: ExtractionTransfer class #fromTransfer: stamp: 'EMI 11/9/2020 21:02:33'!
fromTransfer: aTransfer
	^self new initialize: aTransfer.!

!methodRemoval: ExtractionTransfer #initialize: stamp: 'EMI 11/9/2020 21:02:39'!
initialize: aTransfer
	transfer _ aTransfer.
	!

!methodRemoval: ExtractionTransfer #destination stamp: 'EMI 11/9/2020 21:02:44'!
destination
	^transfer destination!

!methodRemoval: ExtractionTransfer #origin stamp: 'EMI 11/9/2020 21:02:49'!
origin
	^transfer origin!

!methodRemoval: ExtractionTransfer #value stamp: 'EMI 11/9/2020 21:02:54'!
value
	^transfer value.!

!methodRemoval: DepositTransfer #destination stamp: 'EMI 11/9/2020 21:03:00'!
destination
	^transfer destination.!

!methodRemoval: DepositTransfer #initialize: stamp: 'EMI 11/9/2020 21:03:04'!
initialize: aTransfer
	transfer _ aTransfer.!

!methodRemoval: DepositTransfer #origin stamp: 'EMI 11/9/2020 21:03:09'!
origin
	^transfer origin.!

!methodRemoval: DepositTransfer #value stamp: 'EMI 11/9/2020 21:03:14'!
value
	^transfer value.!
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'EMI 11/9/2020 21:04:08' prior: 50906312!
test08AccountCanTransferToAnotherAccountWithZeroAmount

	| accountOrigin accountDestination |
	
	accountOrigin _ ReceptiveAccount new.
	accountDestination _ ReceptiveAccount new.
	
	Deposit register: 10 on: accountOrigin.
	
	Transfer from: accountOrigin to: accountDestination amount: 0.
	
	self assert: accountOrigin transactions size equals: 2.
	self assert: accountDestination transactions size equals: 1.
	self assert: accountOrigin balance equals: 10.
	self assert: accountDestination balance equals: 0.
! !
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'EMI 11/9/2020 21:04:13' prior: 50906264!
test09AccountCanTransferToAnotherAccountWithPositiveAmount

	| accountOrigin accountDestination |
	
	accountOrigin _ ReceptiveAccount new.
	accountDestination _ ReceptiveAccount new.
	
	Deposit register: 10 on: accountOrigin.
	
	Transfer from: accountOrigin to: accountDestination amount: 10.
	
	self assert: accountOrigin transactions size equals: 2.
	self assert: accountDestination transactions size equals: 1.
	self assert: accountOrigin balance equals: 0.
	self assert: accountDestination balance equals: 10.
! !
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'EMI 11/9/2020 21:04:22' prior: 50906284!
test10AccountsWithTransferKnowsOriginAndDestination

	| accountOrigin accountDestination |
	
	accountOrigin _ ReceptiveAccount new.
	accountDestination _ ReceptiveAccount new.
	
	Deposit register: 10 on: accountOrigin.
	Transfer from: accountOrigin to: accountDestination amount: 10.

	self assert: (accountOrigin transactions 	detect: [:aTransaction | aTransaction isKindOf: TransferOperations]) origin equals: accountOrigin.
	self assert: (accountOrigin transactions 	detect: [:aTransaction | aTransaction isKindOf: TransferOperations]) destination equals: accountDestination.
	self assert: (accountDestination transactions 	first) origin equals: accountOrigin.
	self assert: (accountDestination transactions 	first) destination equals: accountDestination.
! !

!methodRemoval: ReceptiveAccountTest #test08AccountCanTransferToAnotherAccountWithZeroAmount stamp: 'EMI 11/9/2020 21:04:32'!
test08AccountCanTransferToAnotherAccountWithZeroAmount

	| accountOrigin accountDestination |
	
	accountOrigin _ ReceptiveAccount new.
	accountDestination _ ReceptiveAccount new.
	
	Deposit register: 10 on: accountOrigin.
	
	Transfer from: accountOrigin to: accountDestination amount: 0.
	
	self assert: accountOrigin transactions size equals: 2.
	self assert: accountDestination transactions size equals: 1.
	self assert: accountOrigin balance equals: 10.
	self assert: accountDestination balance equals: 0.
!
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'EMI 11/9/2020 21:04:40'!
test08AccountCanTransferToAnotherAccountWithPositiveAmount

	| accountOrigin accountDestination |
	
	accountOrigin _ ReceptiveAccount new.
	accountDestination _ ReceptiveAccount new.
	
	Deposit register: 10 on: accountOrigin.
	
	Transfer from: accountOrigin to: accountDestination amount: 10.
	
	self assert: accountOrigin transactions size equals: 2.
	self assert: accountDestination transactions size equals: 1.
	self assert: accountOrigin balance equals: 0.
	self assert: accountDestination balance equals: 10.
! !

!methodRemoval: ReceptiveAccountTest #test09AccountCanTransferToAnotherAccountWithPositiveAmount stamp: 'EMI 11/9/2020 21:04:40'!
test09AccountCanTransferToAnotherAccountWithPositiveAmount

	| accountOrigin accountDestination |
	
	accountOrigin _ ReceptiveAccount new.
	accountDestination _ ReceptiveAccount new.
	
	Deposit register: 10 on: accountOrigin.
	
	Transfer from: accountOrigin to: accountDestination amount: 10.
	
	self assert: accountOrigin transactions size equals: 2.
	self assert: accountDestination transactions size equals: 1.
	self assert: accountOrigin balance equals: 0.
	self assert: accountDestination balance equals: 10.
!
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'EMI 11/9/2020 21:04:48'!
test09AccountsWithTransferKnowsOriginAndDestination

	| accountOrigin accountDestination |
	
	accountOrigin _ ReceptiveAccount new.
	accountDestination _ ReceptiveAccount new.
	
	Deposit register: 10 on: accountOrigin.
	Transfer from: accountOrigin to: accountDestination amount: 10.

	self assert: (accountOrigin transactions 	detect: [:aTransaction | aTransaction isKindOf: TransferOperations]) origin equals: accountOrigin.
	self assert: (accountOrigin transactions 	detect: [:aTransaction | aTransaction isKindOf: TransferOperations]) destination equals: accountDestination.
	self assert: (accountDestination transactions 	first) origin equals: accountOrigin.
	self assert: (accountDestination transactions 	first) destination equals: accountDestination.
! !

!methodRemoval: ReceptiveAccountTest #test10AccountsWithTransferKnowsOriginAndDestination stamp: 'EMI 11/9/2020 21:04:49'!
test10AccountsWithTransferKnowsOriginAndDestination

	| accountOrigin accountDestination |
	
	accountOrigin _ ReceptiveAccount new.
	accountDestination _ ReceptiveAccount new.
	
	Deposit register: 10 on: accountOrigin.
	Transfer from: accountOrigin to: accountDestination amount: 10.

	self assert: (accountOrigin transactions 	detect: [:aTransaction | aTransaction isKindOf: TransferOperations]) origin equals: accountOrigin.
	self assert: (accountOrigin transactions 	detect: [:aTransaction | aTransaction isKindOf: TransferOperations]) destination equals: accountDestination.
	self assert: (accountDestination transactions 	first) origin equals: accountOrigin.
	self assert: (accountDestination transactions 	first) destination equals: accountDestination.
!
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'EMI 11/9/2020 21:05:57' prior: 50906640!
test09AccountsWithTransferKnowsOriginAndDestination

	| accountOrigin accountDestination |
	
	accountOrigin _ ReceptiveAccount new.
	accountDestination _ ReceptiveAccount new.
	
	Deposit register: 10 on: accountOrigin.
	Transfer from: accountOrigin to: accountDestination amount: 10.

	self assert: (accountOrigin transactions 	detect: [:aTransaction | aTransaction isKindOf: TransferOperations]) origin equals: accountOrigin.
	self assert: (accountOrigin transactions 	detect: [:aTransaction | aTransaction isKindOf: TransferOperations]) destination equals: accountDestination.
	self assert: (accountDestination transactions 	first) origin equals: accountOrigin.
	self assert: (accountDestination transactions 	first) destination equals: accountDestination.
! !
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'EMI 11/9/2020 21:09:19' prior: 50906695!
test09AccountsWithTransferKnowsOriginAndDestination

	| accountOrigin accountDestination |
	
	accountOrigin _ ReceptiveAccount new.
	accountDestination _ ReceptiveAccount new.
	
	Transfer from: accountOrigin to: accountDestination amount: 10.
	Deposit register: 10 on: accountOrigin.

	self assert: (accountOrigin transactions 	first) origin equals: accountOrigin.
	self assert: (accountOrigin transactions 	first) destination equals: accountDestination.
	self assert: (accountDestination transactions 	first) origin equals: accountOrigin.
	self assert: (accountDestination transactions 	first) destination equals: accountDestination.
! !

!testRun: #ReceptiveAccountTest #test09AccountsWithTransferKnowsOriginAndDestination stamp: 'EMI 11/9/2020 21:09:39'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'EMI 11/9/2020 21:09:39'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'EMI 11/9/2020 21:09:39'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'EMI 11/9/2020 21:09:39'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'EMI 11/9/2020 21:09:39'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'EMI 11/9/2020 21:09:39'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'EMI 11/9/2020 21:09:39'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'EMI 11/9/2020 21:09:39'!
PASSED!

!testRun: #ReceptiveAccountTest #test08AccountCanTransferToAnotherAccountWithPositiveAmount stamp: 'EMI 11/9/2020 21:09:39'!
PASSED!

!testRun: #ReceptiveAccountTest #test09AccountsWithTransferKnowsOriginAndDestination stamp: 'EMI 11/9/2020 21:09:39'!
PASSED!
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'EMI 11/9/2020 21:11:22'!
test10AccountsCannotTransferInvalidAmounts

	| accountOrigin accountDestination |
	
	accountOrigin _ ReceptiveAccount new.
	accountDestination _ ReceptiveAccount new.
	
	Transfer from: accountOrigin to: accountDestination amount: 10.
	Deposit register: 10 on: accountOrigin.

	self assert: (accountOrigin transactions 	first) origin equals: accountOrigin.
	self assert: (accountOrigin transactions 	first) destination equals: accountDestination.
	self assert: (accountDestination transactions 	first) origin equals: accountOrigin.
	self assert: (accountDestination transactions 	first) destination equals: accountDestination.
! !
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'EMI 11/9/2020 21:14:07' prior: 50906783!
test10AccountsCannotTransferInvalidAmounts

	| accountOrigin accountDestination |
	
	accountOrigin _ ReceptiveAccount new.
	accountDestination _ ReceptiveAccount new.
	
	self should: [Transfer from: accountOrigin to: accountDestination amount: 0] 
	raise: Error 
	withExceptionDo: [:anError | 
		self assert: anError messageText equals: Transfer cannotTransferInvalidAmountMessage.
		self assert: accountOrigin transactions isEmpty.
		self assert: accountDestination transactions isEmpty.
		self assert: accountOrigin balance equals: 0.
		self assert: accountDestination balance equals: 0.
	].

	
! !
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'EMI 11/9/2020 21:14:34' prior: 50906806!
test10AccountsCannotTransferInvalidAmounts

	| accountOrigin accountDestination |
	
	accountOrigin _ ReceptiveAccount new.
	accountDestination _ ReceptiveAccount new.
	
	self should: [Transfer from: accountOrigin to: accountDestination amount: 0] 
	raise: Error 
	withExceptionDo: [:anError | 
		self assert: anError messageText equals: Transfer cannotTransferInvalidAmountMessage.
		self assert: accountOrigin transactions isEmpty.
		self assert: accountDestination transactions isEmpty.
		self assert: accountOrigin balance equals: 0.
		self assert: accountDestination balance equals: 0.
	].

	self should: [Transfer from: accountOrigin to: accountDestination amount: -10] 
	raise: Error 
	withExceptionDo: [:anError | 
		self assert: anError messageText equals: Transfer cannotTransferInvalidAmountMessage.
		self assert: accountOrigin transactions isEmpty.
		self assert: accountDestination transactions isEmpty.
		self assert: accountOrigin balance equals: 0.
		self assert: accountDestination balance equals: 0.
	].

	
! !

----SNAPSHOT----(9 November 2020 21:14:47) CuisUniversity-4383.image priorSource: 18369151!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'EMI 11/9/2020 21:14:54'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'EMI 11/9/2020 21:14:54'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'EMI 11/9/2020 21:14:54'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'EMI 11/9/2020 21:14:54'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'EMI 11/9/2020 21:14:54'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'EMI 11/9/2020 21:14:54'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'EMI 11/9/2020 21:14:54'!
PASSED!

!testRun: #ReceptiveAccountTest #test08AccountCanTransferToAnotherAccountWithPositiveAmount stamp: 'EMI 11/9/2020 21:14:54'!
PASSED!

!testRun: #ReceptiveAccountTest #test09AccountsWithTransferKnowsOriginAndDestination stamp: 'EMI 11/9/2020 21:14:54'!
PASSED!

!testRun: #ReceptiveAccountTest #test10AccountsCannotTransferInvalidAmounts stamp: 'EMI 11/9/2020 21:14:54'!
FAILURE!

!testRun: #ReceptiveAccountTest #test10AccountsCannotTransferInvalidAmounts stamp: 'EMI 11/9/2020 21:14:54'!
FAILURE!
!Transfer class methodsFor: 'nil' stamp: 'EMI 11/9/2020 21:15:45'!
cannotTransferInvalidAmountMessage
	^'Cannot transfer invalid amount.'.! !
!Transfer class methodsFor: 'as yet unclassified' stamp: 'EMI 11/9/2020 21:16:38' prior: 50906417!
from: anOriginReceptiveAccount to: aDestinationReceptiveAccount amount: aPositiveNumber
	| instance |
	
	aPositiveNumber > 0 ifFalse: [^Error signal: self cannotTransferInvalidAmountMessage].
	
	instance _ self new initializeFor: aPositiveNumber withOrigin: anOriginReceptiveAccount withDestination: aDestinationReceptiveAccount.
	anOriginReceptiveAccount register: (ExtractionTransfer fromTransfer: instance).
	aDestinationReceptiveAccount register: (DepositTransfer fromTransfer: instance).
	^instance.! !

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'EMI 11/9/2020 21:16:49'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'EMI 11/9/2020 21:16:49'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'EMI 11/9/2020 21:16:49'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'EMI 11/9/2020 21:16:49'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'EMI 11/9/2020 21:16:49'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'EMI 11/9/2020 21:16:49'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'EMI 11/9/2020 21:16:49'!
PASSED!

!testRun: #ReceptiveAccountTest #test08AccountCanTransferToAnotherAccountWithPositiveAmount stamp: 'EMI 11/9/2020 21:16:49'!
PASSED!

!testRun: #ReceptiveAccountTest #test09AccountsWithTransferKnowsOriginAndDestination stamp: 'EMI 11/9/2020 21:16:49'!
PASSED!

!testRun: #ReceptiveAccountTest #test10AccountsCannotTransferInvalidAmounts stamp: 'EMI 11/9/2020 21:16:49'!
PASSED!

----SNAPSHOT----(9 November 2020 21:16:57) CuisUniversity-4383.image priorSource: 18406788!
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'EMI 11/9/2020 21:17:21'!
test11AccountsCannotTransferToThemselves

	| accountOrigin accountDestination |
	
	accountOrigin _ ReceptiveAccount new.
	accountDestination _ ReceptiveAccount new.
	
	self should: [Transfer from: accountOrigin to: accountDestination amount: 0] 
	raise: Error 
	withExceptionDo: [:anError | 
		self assert: anError messageText equals: Transfer cannotTransferInvalidAmountMessage.
		self assert: accountOrigin transactions isEmpty.
		self assert: accountDestination transactions isEmpty.
		self assert: accountOrigin balance equals: 0.
		self assert: accountDestination balance equals: 0.
	].

	self should: [Transfer from: accountOrigin to: accountDestination amount: -10] 
	raise: Error 
	withExceptionDo: [:anError | 
		self assert: anError messageText equals: Transfer cannotTransferInvalidAmountMessage.
		self assert: accountOrigin transactions isEmpty.
		self assert: accountDestination transactions isEmpty.
		self assert: accountOrigin balance equals: 0.
		self assert: accountDestination balance equals: 0.
	].

	
! !
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'EMI 11/9/2020 21:20:14' prior: 50906974!
test11AccountsCannotTransferToThemselves

	| account |
	
	account _ ReceptiveAccount new.
	
	self should: [Transfer from: account to: account amount: 10] 
	raise: Error 
	withExceptionDo: [:anError | 
		self assert: anError messageText equals: Transfer cannotTransferWhenOriginAndDestinationAreSame.
		self assert: account transactions isEmpty.
		self assert: account balance equals: 0.
	].

	
! !
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'EMI 11/9/2020 21:20:24' prior: 50907009!
test11AccountsCannotTransferToThemselves

	| account |
	account _ ReceptiveAccount new.
	self should: [Transfer from: account to: account amount: 10] 
	raise: Error 
	withExceptionDo: [:anError | 
		self assert: anError messageText equals: Transfer cannotTransferWhenOriginAndDestinationAreSame.
		self assert: account transactions isEmpty.
		self assert: account balance equals: 0.
	].

	
! !

!testRun: #ReceptiveAccountTest #test11AccountsCannotTransferToThemselves stamp: 'EMI 11/9/2020 21:20:29'!
FAILURE!
!Transfer class methodsFor: 'as yet unclassified' stamp: 'EMI 11/9/2020 21:21:17' prior: 50906914!
from: anOriginReceptiveAccount to: aDestinationReceptiveAccount amount: aPositiveNumber
	| instance |
	
	anOriginReceptiveAccount = aDestinationReceptiveAccount ifTrue: [^Error signal: self ].
	aPositiveNumber > 0 ifFalse: [^Error signal: self cannotTransferInvalidAmountMessage].
	
	instance _ self new initializeFor: aPositiveNumber withOrigin: anOriginReceptiveAccount withDestination: aDestinationReceptiveAccount.
	anOriginReceptiveAccount register: (ExtractionTransfer fromTransfer: instance).
	aDestinationReceptiveAccount register: (DepositTransfer fromTransfer: instance).
	^instance.! !
!Transfer class methodsFor: 'nil' stamp: 'EMI 11/9/2020 21:21:56'!
cannotTransferWhenOriginAndDestinationAreSame
	^'Cannot transfer when origin and destination ase the same.'! !
!Transfer class methodsFor: 'as yet unclassified' stamp: 'EMI 11/9/2020 21:22:03' prior: 50907045!
from: anOriginReceptiveAccount to: aDestinationReceptiveAccount amount: aPositiveNumber
	| instance |
	
	anOriginReceptiveAccount = aDestinationReceptiveAccount ifTrue: [^Error signal: self cannotTransferWhenOriginAndDestinationAreSame ].
	aPositiveNumber > 0 ifFalse: [^Error signal: self cannotTransferInvalidAmountMessage].
	
	instance _ self new initializeFor: aPositiveNumber withOrigin: anOriginReceptiveAccount withDestination: aDestinationReceptiveAccount.
	anOriginReceptiveAccount register: (ExtractionTransfer fromTransfer: instance).
	aDestinationReceptiveAccount register: (DepositTransfer fromTransfer: instance).
	^instance.! !
!Transfer class methodsFor: 'as yet unclassified' stamp: 'EMI 11/9/2020 21:22:05' prior: 50907073!
from: anOriginReceptiveAccount to: aDestinationReceptiveAccount amount: aPositiveNumber
	| instance |
	
	anOriginReceptiveAccount = aDestinationReceptiveAccount ifTrue: [^Error signal: self cannotTransferWhenOriginAndDestinationAreSame].
	aPositiveNumber > 0 ifFalse: [^Error signal: self cannotTransferInvalidAmountMessage].
	
	instance _ self new initializeFor: aPositiveNumber withOrigin: anOriginReceptiveAccount withDestination: aDestinationReceptiveAccount.
	anOriginReceptiveAccount register: (ExtractionTransfer fromTransfer: instance).
	aDestinationReceptiveAccount register: (DepositTransfer fromTransfer: instance).
	^instance.! !

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'EMI 11/9/2020 21:22:08'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'EMI 11/9/2020 21:22:08'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'EMI 11/9/2020 21:22:08'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'EMI 11/9/2020 21:22:08'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'EMI 11/9/2020 21:22:08'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'EMI 11/9/2020 21:22:08'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'EMI 11/9/2020 21:22:08'!
PASSED!

!testRun: #ReceptiveAccountTest #test08AccountCanTransferToAnotherAccountWithPositiveAmount stamp: 'EMI 11/9/2020 21:22:08'!
PASSED!

!testRun: #ReceptiveAccountTest #test09AccountsWithTransferKnowsOriginAndDestination stamp: 'EMI 11/9/2020 21:22:08'!
PASSED!

!testRun: #ReceptiveAccountTest #test10AccountsCannotTransferInvalidAmounts stamp: 'EMI 11/9/2020 21:22:08'!
PASSED!

!testRun: #ReceptiveAccountTest #test11AccountsCannotTransferToThemselves stamp: 'EMI 11/9/2020 21:22:08'!
PASSED!
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'EMI 11/9/2020 21:22:18' prior: 50907025!
test11AccountsCannotTransferToThemselves
	| account |
	account _ ReceptiveAccount new.
	self should: [Transfer from: account to: account amount: 10] 
	raise: Error 
	withExceptionDo: [:anError | 
		self assert: anError messageText equals: Transfer cannotTransferWhenOriginAndDestinationAreSame.
		self assert: account transactions isEmpty.
		self assert: account balance equals: 0.
	].

	
! !
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'EMI 11/9/2020 21:22:22' prior: 50906828!
test10AccountsCannotTransferInvalidAmounts
	| accountOrigin accountDestination |
	
	accountOrigin _ ReceptiveAccount new.
	accountDestination _ ReceptiveAccount new.
	
	self should: [Transfer from: accountOrigin to: accountDestination amount: 0] 
	raise: Error 
	withExceptionDo: [:anError | 
		self assert: anError messageText equals: Transfer cannotTransferInvalidAmountMessage.
		self assert: accountOrigin transactions isEmpty.
		self assert: accountDestination transactions isEmpty.
		self assert: accountOrigin balance equals: 0.
		self assert: accountDestination balance equals: 0.
	].

	self should: [Transfer from: accountOrigin to: accountDestination amount: -10] 
	raise: Error 
	withExceptionDo: [:anError | 
		self assert: anError messageText equals: Transfer cannotTransferInvalidAmountMessage.
		self assert: accountOrigin transactions isEmpty.
		self assert: accountDestination transactions isEmpty.
		self assert: accountOrigin balance equals: 0.
		self assert: accountDestination balance equals: 0.
	].

	
! !
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'EMI 11/9/2020 21:22:25' prior: 50906722!
test09AccountsWithTransferKnowsOriginAndDestination
	| accountOrigin accountDestination |
	
	accountOrigin _ ReceptiveAccount new.
	accountDestination _ ReceptiveAccount new.
	
	Transfer from: accountOrigin to: accountDestination amount: 10.
	Deposit register: 10 on: accountOrigin.

	self assert: (accountOrigin transactions 	first) origin equals: accountOrigin.
	self assert: (accountOrigin transactions 	first) destination equals: accountDestination.
	self assert: (accountDestination transactions 	first) origin equals: accountOrigin.
	self assert: (accountDestination transactions 	first) destination equals: accountDestination.
! !
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'EMI 11/9/2020 21:22:31' prior: 50906601!
test08AccountCanTransferToAnotherAccountWithPositiveAmount
	| accountOrigin accountDestination |
	
	accountOrigin _ ReceptiveAccount new.
	accountDestination _ ReceptiveAccount new.
	
	Deposit register: 10 on: accountOrigin.
	
	Transfer from: accountOrigin to: accountDestination amount: 10.
	
	self assert: accountOrigin transactions size equals: 2.
	self assert: accountDestination transactions size equals: 1.
	self assert: accountOrigin balance equals: 0.
	self assert: accountDestination balance equals: 10.
! !

Object subclass: #AccountSummary
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio2-Ejercicio'!

!classDefinition: #AccountSummary category: 'Portfolio2-Ejercicio' stamp: 'EMI 11/9/2020 21:23:39'!
Object subclass: #AccountSummary
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio2-Ejercicio'!

TestCase subclass: #AccountSummaryTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio2-Ejercicio'!

!classDefinition: #AccountSummaryTest category: 'Portfolio2-Ejercicio' stamp: 'EMI 11/9/2020 21:24:12'!
TestCase subclass: #AccountSummaryTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio2-Ejercicio'!
!AccountSummaryTest methodsFor: 'nil' stamp: 'EMI 11/9/2020 21:24:20'!
test01! !
!AccountSummaryTest methodsFor: 'as yet unclassified' stamp: 'EMI 11/9/2020 21:25:55' prior: 50907279!
test01
	| report account |
	account _ ReceptiveAccount new.
	report _ AccountSummary of: account.! !
!AccountSummaryTest methodsFor: 'as yet unclassified' stamp: 'EMI 11/9/2020 21:26:28' prior: 50907283!
test01
	| report account |
	account _ ReceptiveAccount new.
	report _ AccountSummary of: account.
	 ! !
!AccountSummaryTest methodsFor: 'as yet unclassified' stamp: 'EMI 11/9/2020 21:26:50' prior: 50907290!
test01
	| accountSummary account |
	account _ ReceptiveAccount new.
	accountSummary _ AccountSummary of: account.
	 ! !
!AccountSummaryTest methodsFor: 'as yet unclassified' stamp: 'EMI 11/9/2020 21:27:08' prior: 50907297!
test01
	| accountSummary account |
	account _ ReceptiveAccount new.
	accountSummary _ AccountSummary of: account.
	 
	self assert: accountSummary report isEmpty.! !
!AccountSummaryTest methodsFor: 'as yet unclassified' stamp: 'EMI 11/9/2020 21:27:29'!
test01AccountSummaryOfEmptyAccountIsEmpty
	| accountSummary account |
	account _ ReceptiveAccount new.
	accountSummary _ AccountSummary of: account.
	 
	self assert: accountSummary report isEmpty.! !

!methodRemoval: AccountSummaryTest #test01 stamp: 'EMI 11/9/2020 21:27:29'!
test01
	| accountSummary account |
	account _ ReceptiveAccount new.
	accountSummary _ AccountSummary of: account.
	 
	self assert: accountSummary report isEmpty.!

!testRun: #AccountSummaryTest #test01AccountSummaryOfEmptyAccountIsEmpty stamp: 'EMI 11/9/2020 21:27:41'!
ERROR!
!AccountSummary class methodsFor: 'instance creation' stamp: 'EMI 11/9/2020 21:27:53'!
of: aReceptiveAccount 
	"DO NOT FORGET TO RENAME COLLABORATORS AND REMOVE THIS COMMENT!!!!"
	self shouldBeImplemented.
	^self new initializeOf: aReceptiveAccount ! !
!AccountSummary class methodsFor: 'instance creation' stamp: 'EMI 11/9/2020 21:28:07' prior: 50907333!
of: aReceptiveAccount 
	^self new initializeOf: aReceptiveAccount ! !

!classDefinition: #AccountSummary category: 'Portfolio2-Ejercicio' stamp: 'EMI 11/9/2020 21:28:31'!
Object subclass: #AccountSummary
	instanceVariableNames: 'account'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio2-Ejercicio'!
!AccountSummary methodsFor: 'nil' stamp: 'EMI 11/9/2020 21:28:29'!
initializeOf: aReceptiveAccount
	account _ aReceptiveAccount.! !
!AccountSummary methodsFor: 'nil' stamp: 'EMI 11/9/2020 21:28:52'!
report
	^OrderedCollection new.! !

!testRun: #AccountSummaryTest #test01AccountSummaryOfEmptyAccountIsEmpty stamp: 'EMI 11/9/2020 21:28:59'!
PASSED!
!AccountSummaryTest methodsFor: 'as yet unclassified' stamp: 'EMI 11/9/2020 21:30:37'!
test02AccountSummaryOfAccountWithADepositShowDepositInfo
	| accountSummary account |
	account _ ReceptiveAccount new.
	accountSummary _ AccountSummary of: account.
	 
	self assert: accountSummary report isEmpty.! !
!AccountSummaryTest methodsFor: 'as yet unclassified' stamp: 'EMI 11/9/2020 21:31:00'!
test01AccountSummaryOfEmptyAccountOnlyShowsBalance
	| accountSummary account |
	account _ ReceptiveAccount new.
	accountSummary _ AccountSummary of: account.
	 
	self assert: accountSummary report isEmpty.! !

!methodRemoval: AccountSummaryTest #test01AccountSummaryOfEmptyAccountIsEmpty stamp: 'EMI 11/9/2020 21:31:00'!
test01AccountSummaryOfEmptyAccountIsEmpty
	| accountSummary account |
	account _ ReceptiveAccount new.
	accountSummary _ AccountSummary of: account.
	 
	self assert: accountSummary report isEmpty.!
!AccountSummaryTest methodsFor: 'as yet unclassified' stamp: 'EMI 11/9/2020 21:31:44' prior: 50907378!
test01AccountSummaryOfEmptyAccountOnlyShowsBalance
	| accountSummary account |
	account _ ReceptiveAccount new.
	accountSummary _ AccountSummary of: account.
	 
	self deny: accountSummary report isEmpty.
	self assert: accountSummary report first equals: 'Balance = 0'.! !

!testRun: #AccountSummaryTest #test01AccountSummaryOfEmptyAccountOnlyShowsBalance stamp: 'EMI 11/9/2020 21:31:55'!
FAILURE!
!AccountSummary methodsFor: 'as yet unclassified' stamp: 'EMI 11/9/2020 21:32:09' prior: 50907360!
report
	^'Balance = 0'.! !
!AccountSummary methodsFor: 'as yet unclassified' stamp: 'EMI 11/9/2020 21:32:27' prior: 50907414!
report
	^OrderedCollection with:'Balance = 0'.! !

!testRun: #AccountSummaryTest #test01AccountSummaryOfEmptyAccountOnlyShowsBalance stamp: 'EMI 11/9/2020 21:32:32'!
PASSED!

!testRun: #AccountSummaryTest #test02AccountSummaryOfAccountWithADepositShowDepositInfo stamp: 'EMI 11/9/2020 21:32:32'!
FAILURE!

!testRun: #AccountSummaryTest #test02AccountSummaryOfAccountWithADepositShowDepositInfo stamp: 'EMI 11/9/2020 21:32:32'!
FAILURE!
!AccountSummaryTest methodsFor: 'as yet unclassified' stamp: 'EMI 11/9/2020 21:32:43' prior: 50907368!
test02AccountSummaryOfAccountWithADepositShowDepositInfo
	| accountSummary account |
	account _ ReceptiveAccount new.
	accountSummary _ AccountSummary of: account.
	 
	! !

!testRun: #AccountSummaryTest #test01AccountSummaryOfEmptyAccountOnlyShowsBalance stamp: 'EMI 11/9/2020 21:32:47'!
PASSED!

!testRun: #AccountSummaryTest #test02AccountSummaryOfAccountWithADepositShowDepositInfo stamp: 'EMI 11/9/2020 21:32:47'!
PASSED!
!AccountSummaryTest methodsFor: 'as yet unclassified' stamp: 'EMI 11/9/2020 21:33:10' prior: 50907435!
test02AccountSummaryOfAccountWithADepositShowDepositInfo
	| accountSummary account deposit |
	account _ ReceptiveAccount new.
	accountSummary _ AccountSummary of: account.
	
	deposit _ Deposit register: 10 on: account.
	 
	! !
!AccountSummaryTest methodsFor: 'as yet unclassified' stamp: 'EMI 11/9/2020 21:37:26' prior: 50907452!
test02AccountSummaryOfAccountWithADepositShowDepositInfo
	| accountSummary account deposit resultSummary |
	account _ ReceptiveAccount new.
	accountSummary _ AccountSummary of: account.
	
	deposit _ Deposit register: 10 on: account.
	
	resultSummary _ OrderedCollection with: 'Balance = 10' with: 'Dep�sito por 10'.
	! !
!AccountSummaryTest methodsFor: 'as yet unclassified' stamp: 'EMI 11/9/2020 21:37:49' prior: 50907463!
test02AccountSummaryOfAccountWithADepositShowDepositInfo
	| accountSummary account deposit resultSummary |
	account _ ReceptiveAccount new.
	accountSummary _ AccountSummary of: account.
	
	deposit _ Deposit register: 10 on: account.
	
	resultSummary _ OrderedCollection with: 'Balance = 10' with: 'Dep�sito por 10'.
	
	self assert: accountSummary report equals: resultSummary.
	! !
!AccountSummaryTest methodsFor: 'as yet unclassified' stamp: 'EMI 11/9/2020 21:37:56' prior: 50907477!
test02AccountSummaryOfAccountWithADepositShowDepositInfo
	| accountSummary account resultSummary |
	account _ ReceptiveAccount new.
	accountSummary _ AccountSummary of: account.
	
	Deposit register: 10 on: account.
	
	resultSummary _ OrderedCollection with: 'Balance = 10' with: 'Dep�sito por 10'.
	
	self assert: accountSummary report equals: resultSummary.
	! !

!testRun: #AccountSummaryTest #test02AccountSummaryOfAccountWithADepositShowDepositInfo stamp: 'EMI 11/9/2020 21:38:25'!
FAILURE!
!AccountSummary methodsFor: 'as yet unclassified' stamp: 'EMI 11/9/2020 21:38:58' prior: 50907418!
report
	^OrderedCollection with:'Balance = 0' with: 'Dep�sito por 10'.! !
!AccountSummary methodsFor: 'as yet unclassified' stamp: 'EMI 11/9/2020 21:39:07' prior: 50907512!
report
	^OrderedCollection with:'Balance = 0.' with: 'Dep�sito por 10.'.! !
!AccountSummaryTest methodsFor: 'as yet unclassified' stamp: 'EMI 11/9/2020 21:39:15' prior: 50907493!
test02AccountSummaryOfAccountWithADepositShowDepositInfo
	| accountSummary account resultSummary |
	account _ ReceptiveAccount new.
	accountSummary _ AccountSummary of: account.
	
	Deposit register: 10 on: account.
	
	resultSummary _ OrderedCollection with: 'Balance = 10.' with: 'Dep�sito por 10.'.
	
	self assert: accountSummary report equals: resultSummary.
	! !

!testRun: #AccountSummaryTest #test02AccountSummaryOfAccountWithADepositShowDepositInfo stamp: 'EMI 11/9/2020 21:39:22'!
FAILURE!
!AccountSummary methodsFor: 'as yet unclassified' stamp: 'EMI 11/9/2020 21:40:14' prior: 50907518!
report
	^OrderedCollection with:'Balance = 10.' with: 'Dep�sito por 10.'.! !

!testRun: #AccountSummaryTest #test01AccountSummaryOfEmptyAccountOnlyShowsBalance stamp: 'EMI 11/9/2020 21:40:15'!
FAILURE!

!testRun: #AccountSummaryTest #test02AccountSummaryOfAccountWithADepositShowDepositInfo stamp: 'EMI 11/9/2020 21:40:15'!
PASSED!

!testRun: #AccountSummaryTest #test01AccountSummaryOfEmptyAccountOnlyShowsBalance stamp: 'EMI 11/9/2020 21:40:15'!
FAILURE!
!AccountSummary methodsFor: 'as yet unclassified' stamp: 'EMI 11/9/2020 21:42:05' prior: 50907543!
report
	^account transactions collect: [:aTransaction | 
		(aTransaction isKindOf: Deposit) ifTrue:['Dep�sito por ' ].
		].! !
!AccountSummary methodsFor: 'as yet unclassified' stamp: 'EMI 11/9/2020 21:44:24' prior: 50907561!
report
	| result |
	result _ account transactions collect: [:aTransaction | 
		(aTransaction isKindOf: Deposit) ifTrue:['Dep�sito por ', aTransaction value, '.'].
		].
	result add: 'Balance = ', account balance, '.'.
	^result! !

!testRun: #AccountSummaryTest #test01AccountSummaryOfEmptyAccountOnlyShowsBalance stamp: 'EMI 11/9/2020 21:44:32'!
ERROR!

!testRun: #AccountSummaryTest #test02AccountSummaryOfAccountWithADepositShowDepositInfo stamp: 'EMI 11/9/2020 21:44:32'!
ERROR!

!testRun: #AccountSummaryTest #test01AccountSummaryOfEmptyAccountOnlyShowsBalance stamp: 'EMI 11/9/2020 21:44:34'!
ERROR!
!AccountSummary methodsFor: 'as yet unclassified' stamp: 'EMI 11/9/2020 21:44:59' prior: 50907569!
report
	| result |
	result _ account transactions collect: [:aTransaction | 
		(aTransaction isKindOf: Deposit) ifTrue:['Dep�sito por ', aTransaction value asString, '.'].
		].
	result add: 'Balance = ', account balance asString, '.'.
	^result! !

!testRun: #AccountSummaryTest #test01AccountSummaryOfEmptyAccountOnlyShowsBalance stamp: 'EMI 11/9/2020 21:45:02'!
FAILURE!

!testRun: #AccountSummaryTest #test02AccountSummaryOfAccountWithADepositShowDepositInfo stamp: 'EMI 11/9/2020 21:45:02'!
FAILURE!

!testRun: #AccountSummaryTest #test01AccountSummaryOfEmptyAccountOnlyShowsBalance stamp: 'EMI 11/9/2020 21:45:04'!
FAILURE!
!AccountSummaryTest methodsFor: 'as yet unclassified' stamp: 'EMI 11/9/2020 21:45:34' prior: 50907398!
test01AccountSummaryOfEmptyAccountOnlyShowsBalance
	| accountSummary account |
	account _ ReceptiveAccount new.
	accountSummary _ AccountSummary of: account.
	 
	self deny: accountSummary report isEmpty.
	self assert: accountSummary report first equals: 'Balance = 0.'.! !

!testRun: #AccountSummaryTest #test01AccountSummaryOfEmptyAccountOnlyShowsBalance stamp: 'EMI 11/9/2020 21:45:36'!
PASSED!

!testRun: #AccountSummaryTest #test02AccountSummaryOfAccountWithADepositShowDepositInfo stamp: 'EMI 11/9/2020 21:45:36'!
FAILURE!

!testRun: #AccountSummaryTest #test02AccountSummaryOfAccountWithADepositShowDepositInfo stamp: 'EMI 11/9/2020 21:45:36'!
FAILURE!
!AccountSummaryTest methodsFor: 'as yet unclassified' stamp: 'EMI 11/9/2020 21:45:58' prior: 50907524!
test02AccountSummaryOfAccountWithADepositShowDepositInfo
	| accountSummary account resultSummary |
	account _ ReceptiveAccount new.
	accountSummary _ AccountSummary of: account.
	
	Deposit register: 10 on: account.
	
	resultSummary _ OrderedCollection with: 'Dep�sito por 10.' with: 'Balance = 10.'.
	
	self assert: accountSummary report equals: resultSummary.
	! !

!testRun: #AccountSummaryTest #test01AccountSummaryOfEmptyAccountOnlyShowsBalance stamp: 'EMI 11/9/2020 21:46:10'!
PASSED!

!testRun: #AccountSummaryTest #test02AccountSummaryOfAccountWithADepositShowDepositInfo stamp: 'EMI 11/9/2020 21:46:10'!
PASSED!

----SNAPSHOT----(9 November 2020 21:46:22) CuisUniversity-4383.image priorSource: 18410246!

----SNAPSHOT----(9 November 2020 22:13:36) CuisUniversity-4383.image priorSource: 18432299!

----QUIT----(9 November 2020 22:13:39) CuisUniversity-4383.image priorSource: 18432392!

----STARTUP---- (11 November 2020 17:42:39) as /home/doraserver/CuisUniversity/CuisUniversity-4383.image!

!AccountSummaryTest methodsFor: 'as yet unclassified' stamp: 'EMI 11/11/2020 17:52:45'!
test03AccountSummaryOfAccountWithAWithdrawShowWithdrawInfo
	| accountSummary account resultSummary |
	account _ ReceptiveAccount new.
	accountSummary _ AccountSummary of: account.
	
	Deposit register: 10 on: account.
	
	resultSummary _ OrderedCollection with: 'Dep�sito por 10.' with: 'Balance = 10.'.
	
	self assert: accountSummary report equals: resultSummary.
	! !
!AccountSummaryTest methodsFor: 'as yet unclassified' stamp: 'EMI 11/11/2020 17:53:43' prior: 50907673!
test03AccountSummaryOfAccountWithAWithdrawShowWithdrawInfo
	| accountSummary account resultSummary |
	account _ ReceptiveAccount new.
	accountSummary _ AccountSummary of: account.
	
	Withdraw register: 10 on: account.
	
	resultSummary _ OrderedCollection with: 'Extracci�n por 10.' with: 'Balance = -10.'.
	
	self assert: accountSummary report equals: resultSummary.
	! !

!testRun: #AccountSummaryTest #test03AccountSummaryOfAccountWithAWithdrawShowWithdrawInfo stamp: 'EMI 11/11/2020 17:53:45'!
FAILURE!
!AccountSummary methodsFor: 'as yet unclassified' stamp: 'EMI 11/11/2020 17:54:56' prior: 50907591!
report
	| result |
	result _ account transactions collect: [:aTransaction | 
		(aTransaction isKindOf: Deposit) ifTrue:['Dep�sito por ', aTransaction value asString, '.'].
		(aTransaction isKindOf: Withdraw) ifTrue:['Extracci�n por ', aTransaction value asString, '.'].
		].
	result add: 'Balance = ', account balance asString, '.'.
	^result! !

!testRun: #AccountSummaryTest #test01AccountSummaryOfEmptyAccountOnlyShowsBalance stamp: 'EMI 11/11/2020 17:54:58'!
PASSED!

!testRun: #AccountSummaryTest #test02AccountSummaryOfAccountWithADepositShowDepositInfo stamp: 'EMI 11/11/2020 17:54:58'!
FAILURE!

!testRun: #AccountSummaryTest #test03AccountSummaryOfAccountWithAWithdrawShowWithdrawInfo stamp: 'EMI 11/11/2020 17:54:58'!
PASSED!

!testRun: #AccountSummaryTest #test02AccountSummaryOfAccountWithADepositShowDepositInfo stamp: 'EMI 11/11/2020 17:54:58'!
FAILURE!

!testRun: #AccountSummaryTest #test01AccountSummaryOfEmptyAccountOnlyShowsBalance stamp: 'EMI 11/11/2020 17:56:34'!
PASSED!

!testRun: #AccountSummaryTest #test02AccountSummaryOfAccountWithADepositShowDepositInfo stamp: 'EMI 11/11/2020 17:56:34'!
FAILURE!

!testRun: #AccountSummaryTest #test03AccountSummaryOfAccountWithAWithdrawShowWithdrawInfo stamp: 'EMI 11/11/2020 17:56:34'!
PASSED!

!testRun: #AccountSummaryTest #test02AccountSummaryOfAccountWithADepositShowDepositInfo stamp: 'EMI 11/11/2020 17:56:34'!
FAILURE!
!AccountSummary methodsFor: 'as yet unclassified' stamp: 'EMI 11/11/2020 17:58:19' prior: 50907707!
report
	| result |
	result _ OrderedCollection new.
	account transactions do: [:aTransaction | 
		(aTransaction isKindOf: Deposit) ifTrue:[result add: ('Dep�sito por ', aTransaction value asString, '.')].
		(aTransaction isKindOf: Withdraw) ifTrue:[result add: ('Extracci�n por ', aTransaction value asString, '.')].
		].
	result add: 'Balance = ', account balance asString, '.'.
	^result! !

!testRun: #AccountSummaryTest #test01AccountSummaryOfEmptyAccountOnlyShowsBalance stamp: 'EMI 11/11/2020 17:58:23'!
PASSED!

!testRun: #AccountSummaryTest #test02AccountSummaryOfAccountWithADepositShowDepositInfo stamp: 'EMI 11/11/2020 17:58:23'!
PASSED!

!testRun: #AccountSummaryTest #test03AccountSummaryOfAccountWithAWithdrawShowWithdrawInfo stamp: 'EMI 11/11/2020 17:58:23'!
PASSED!
!AccountSummaryTest methodsFor: 'as yet unclassified' stamp: 'EMI 11/11/2020 17:58:57'!
test04AccountSummaryOfAccountWithADepositTransferShowDepositTransferInfo
	| accountSummary account resultSummary |
	account _ ReceptiveAccount new.
	accountSummary _ AccountSummary of: account.
	
	Withdraw register: 10 on: account.
	
	resultSummary _ OrderedCollection with: 'Extracci�n por 10.' with: 'Balance = -10.'.
	
	self assert: accountSummary report equals: resultSummary.
	! !
!AccountSummaryTest methodsFor: 'as yet unclassified' stamp: 'EMI 11/11/2020 17:59:18' prior: 50907782!
test04AccountSummaryOfAccountWithADepositTransferShowDepositTransferInfo
	| accountSummary accountOrigin resultSummary |
	accountOrigin _ ReceptiveAccount new.
	accountSummary _ AccountSummary of: accountOrigin.
	
	Withdraw register: 10 on: accountOrigin.
	
	resultSummary _ OrderedCollection with: 'Extracci�n por 10.' with: 'Balance = -10.'.
	
	self assert: accountSummary report equals: resultSummary.
	! !
!AccountSummaryTest methodsFor: 'as yet unclassified' stamp: 'EMI 11/11/2020 18:00:38' prior: 50907798!
test04AccountSummaryOfAccountWithADepositTransferShowDepositTransferInfo
	| accountSummary accountOrigin accountDestination resultSummary |
	accountOrigin _ ReceptiveAccount new.
	accountDestination _ ReceptiveAccount new.
	accountSummary _ AccountSummary of: accountOrigin.
	
	Transfer from: accountOrigin to: accountDestination amount: 10.
	
	resultSummary _ OrderedCollection with: 'Salida por transferencia de 10.' with: 'Balance = -10.'.
	
	self assert: accountSummary report equals: resultSummary.
	! !

!testRun: #AccountSummaryTest #test04AccountSummaryOfAccountWithADepositTransferShowDepositTransferInfo stamp: 'EMI 11/11/2020 18:00:48'!
FAILURE!
!AccountSummary methodsFor: 'as yet unclassified' stamp: 'EMI 11/11/2020 18:02:19' prior: 50907754!
report
	| result |
	result _ OrderedCollection new.
	account transactions do: [:aTransaction | 
		(aTransaction isKindOf: Deposit) ifTrue:[result add: ('Dep�sito por ', aTransaction value asString, '.')].
		(aTransaction isKindOf: Withdraw) ifTrue:[result add: ('Extracci�n por ', aTransaction value asString, '.')].
		(aTransaction isKindOf: ExtractionTransfer) ifTrue:[result add: ('Salida por transferencia de  ', aTransaction value asString, '.')].
		].
	result add: 'Balance = ', account balance asString, '.'.
	^result! !
!AccountSummary methodsFor: 'as yet unclassified' stamp: 'EMI 11/11/2020 18:02:24' prior: 50907839!
report
	| result |
	result _ OrderedCollection new.
	account transactions do: [:aTransaction | 
		(aTransaction isKindOf: Deposit) ifTrue:[result add: ('Dep�sito por ', aTransaction value asString, '.')].
		(aTransaction isKindOf: Withdraw) ifTrue:[result add: ('Extracci�n por ', aTransaction value asString, '.')].
		(aTransaction isKindOf: ExtractionTransfer) ifTrue:[result add: ('Salida por transferencia de ', aTransaction value asString, '.')].
		].
	result add: 'Balance = ', account balance asString, '.'.
	^result! !

----SNAPSHOT----(11 November 2020 18:02:53) CuisUniversity-4383.image priorSource: 18432485!

!testRun: #AccountSummaryTest #test04AccountSummaryOfAccountWithADepositTransferShowDepositTransferInfo stamp: 'EMI 11/11/2020 18:03:18'!
PASSED!

!testRun: #AccountSummaryTest #test01AccountSummaryOfEmptyAccountOnlyShowsBalance stamp: 'EMI 11/11/2020 18:03:18'!
PASSED!

!testRun: #AccountSummaryTest #test02AccountSummaryOfAccountWithADepositShowDepositInfo stamp: 'EMI 11/11/2020 18:03:18'!
PASSED!

!testRun: #AccountSummaryTest #test03AccountSummaryOfAccountWithAWithdrawShowWithdrawInfo stamp: 'EMI 11/11/2020 18:03:18'!
PASSED!

!testRun: #AccountSummaryTest #test04AccountSummaryOfAccountWithADepositTransferShowDepositTransferInfo stamp: 'EMI 11/11/2020 18:03:18'!
PASSED!
!AccountSummaryTest methodsFor: 'as yet unclassified' stamp: 'EMI 11/11/2020 18:03:41' prior: 50907815!
test04AccountSummaryOfAccountWithADepositTransferShowDepositTransferInfo
	| accountSummary accountOrigin accountDestination resultSummary |
	accountOrigin _ ReceptiveAccount new.
	accountDestination _ ReceptiveAccount new.
	accountSummary _ AccountSummary of: accountOrigin.
	
	Transfer from: accountOrigin to: accountDestination amount: 10.
	
	resultSummary _ OrderedCollection with: 'Salida por transferencia de 10.' with: 'Balance = -10.'.
	
	self assert: accountSummary report equals: resultSummary.
	! !
!AccountSummaryTest methodsFor: 'as yet unclassified' stamp: 'EMI 11/11/2020 18:04:18'!
test04AccountSummaryOfAccountWithAExtractionTransferShowExtractionTransferInfo
	| accountSummary accountOrigin accountDestination resultSummary |
	accountOrigin _ ReceptiveAccount new.
	accountDestination _ ReceptiveAccount new.
	accountSummary _ AccountSummary of: accountOrigin.
	
	Transfer from: accountOrigin to: accountDestination amount: 10.
	
	resultSummary _ OrderedCollection with: 'Salida por transferencia de 10.' with: 'Balance = -10.'.
	
	self assert: accountSummary report equals: resultSummary.
	! !

!methodRemoval: AccountSummaryTest #test04AccountSummaryOfAccountWithADepositTransferShowDepositTransferInfo stamp: 'EMI 11/11/2020 18:04:18'!
test04AccountSummaryOfAccountWithADepositTransferShowDepositTransferInfo
	| accountSummary accountOrigin accountDestination resultSummary |
	accountOrigin _ ReceptiveAccount new.
	accountDestination _ ReceptiveAccount new.
	accountSummary _ AccountSummary of: accountOrigin.
	
	Transfer from: accountOrigin to: accountDestination amount: 10.
	
	resultSummary _ OrderedCollection with: 'Salida por transferencia de 10.' with: 'Balance = -10.'.
	
	self assert: accountSummary report equals: resultSummary.
	!
!AccountSummaryTest methodsFor: 'as yet unclassified' stamp: 'EMI 11/11/2020 18:04:51'!
test05AccountSummaryOfAccountWithADepositTransferShowDepositTransferInfo
	| accountSummary accountOrigin accountDestination resultSummary |
	accountOrigin _ ReceptiveAccount new.
	accountDestination _ ReceptiveAccount new.
	accountSummary _ AccountSummary of: accountOrigin.
	
	Transfer from: accountOrigin to: accountDestination amount: 10.
	
	resultSummary _ OrderedCollection with: 'Salida por transferencia de 10.' with: 'Balance = -10.'.
	
	self assert: accountSummary report equals: resultSummary.
	! !
!AccountSummaryTest methodsFor: 'as yet unclassified' stamp: 'EMI 11/11/2020 18:05:06' prior: 50907962!
test05AccountSummaryOfAccountWithADepositTransferShowDepositTransferInfo
	| accountSummary accountOrigin accountDestination resultSummary |
	accountOrigin _ ReceptiveAccount new.
	accountDestination _ ReceptiveAccount new.
	accountSummary _ AccountSummary of: accountOrigin.
	
	Transfer from: accountOrigin to: accountDestination amount: 10.
	
	resultSummary _ OrderedCollection with: 'Entrada por transferencia de 10.' with: 'Balance = -10.'.
	
	self assert: accountSummary report equals: resultSummary.
	! !
!AccountSummaryTest methodsFor: 'as yet unclassified' stamp: 'EMI 11/11/2020 18:05:51' prior: 50907982!
test05AccountSummaryOfAccountWithADepositTransferShowDepositTransferInfo
	| accountSummary accountOrigin accountDestination resultSummary |
	accountOrigin _ ReceptiveAccount new.
	accountDestination _ ReceptiveAccount new.
	accountSummary _ AccountSummary of: accountDestination.
	
	Transfer from: accountOrigin to: accountDestination amount: 10.
	
	resultSummary _ OrderedCollection with: 'Entrada por transferencia de 10.' with: 'Balance = 10.'.
	
	self assert: accountSummary report equals: resultSummary.
	! !

!testRun: #AccountSummaryTest #test05AccountSummaryOfAccountWithADepositTransferShowDepositTransferInfo stamp: 'EMI 11/11/2020 18:05:59'!
FAILURE!
!AccountSummary methodsFor: 'as yet unclassified' stamp: 'EMI 11/11/2020 18:06:40' prior: 50907859!
report
	| result |
	result _ OrderedCollection new.
	account transactions do: [:aTransaction | 
		(aTransaction isKindOf: Deposit) ifTrue:[result add: ('Dep�sito por ', aTransaction value asString, '.')].
		(aTransaction isKindOf: Withdraw) ifTrue:[result add: ('Extracci�n por ', aTransaction value asString, '.')].
		(aTransaction isKindOf: ExtractionTransfer) ifTrue:[result add: ('Salida por transferencia de ', aTransaction value asString, '.')].
		(aTransaction isKindOf: DepositTransfer) ifTrue:[result add: ('Entrada por transferencia de ', aTransaction value asString, '.')].
		].
	result add: 'Balance = ', account balance asString, '.'.
	^result! !

!testRun: #AccountSummaryTest #test05AccountSummaryOfAccountWithADepositTransferShowDepositTransferInfo stamp: 'EMI 11/11/2020 18:10:16'!
PASSED!

!testRun: #AccountSummaryTest #test01AccountSummaryOfEmptyAccountOnlyShowsBalance stamp: 'EMI 11/11/2020 18:10:20'!
PASSED!

!testRun: #AccountSummaryTest #test02AccountSummaryOfAccountWithADepositShowDepositInfo stamp: 'EMI 11/11/2020 18:10:20'!
PASSED!

!testRun: #AccountSummaryTest #test03AccountSummaryOfAccountWithAWithdrawShowWithdrawInfo stamp: 'EMI 11/11/2020 18:10:20'!
PASSED!

!testRun: #AccountSummaryTest #test04AccountSummaryOfAccountWithAExtractionTransferShowExtractionTransferInfo stamp: 'EMI 11/11/2020 18:10:20'!
PASSED!

!testRun: #AccountSummaryTest #test05AccountSummaryOfAccountWithADepositTransferShowDepositTransferInfo stamp: 'EMI 11/11/2020 18:10:20'!
PASSED!
!AccountSummaryTest methodsFor: 'as yet unclassified' stamp: 'EMI 11/11/2020 18:13:09'!
test06AccountSummaryOfAccountWithOneOfEachTransactionShowsCorrectInfo
	| accountSummary accountOrigin accountDestination resultSummary |
	accountOrigin _ ReceptiveAccount new.
	accountDestination _ ReceptiveAccount new.
	accountSummary _ AccountSummary of: accountDestination.
	
	Transfer from: accountOrigin to: accountDestination amount: 10.
	
	resultSummary _ OrderedCollection with: 'Entrada por transferencia de 10.' with: 'Balance = 10.'.
	
	self assert: accountSummary report equals: resultSummary.
	! !
!AccountSummaryTest methodsFor: 'as yet unclassified' stamp: 'EMI 11/11/2020 18:14:50' prior: 50908076!
test06AccountSummaryOfAccountWithOneOfEachTransactionShowsCorrectInfo
	| accountSummary accountOrigin accountDestination resultSummary |
	accountOrigin _ ReceptiveAccount new.
	accountDestination _ ReceptiveAccount new.
	accountSummary _ AccountSummary of: accountOrigin.
	
	Deposit register: 50  on: accountOrigin.
	Withdraw register: 10 on: accountOrigin.
	Transfer from: accountOrigin to: accountDestination amount: 20.
	Transfer from: accountDestination to: accountOrigin amount: 5.
	
	resultSummary _ OrderedCollection with: 'Entrada por transferencia de 10.' with: 'Balance = 25.'.
	
	self assert: accountSummary report equals: resultSummary.
	! !
!AccountSummaryTest methodsFor: 'as yet unclassified' stamp: 'EMI 11/11/2020 18:15:21' prior: 50908096!
test06AccountSummaryOfAccountWithOneOfEachTransactionShowsCorrectInfo
	| accountSummary accountOrigin accountDestination resultSummary |
	accountOrigin _ ReceptiveAccount new.
	accountDestination _ ReceptiveAccount new.
	accountSummary _ AccountSummary of: accountOrigin.
	
	Deposit register: 50  on: accountOrigin.
	Withdraw register: 10 on: accountOrigin.
	Transfer from: accountOrigin to: accountDestination amount: 20.
	Transfer from: accountDestination to: accountOrigin amount: 5.
	
	resultSummary _ OrderedCollection with: 'Salida por transferencia de 20.' with: 'Entrada por transferencia de 5.' with: 'Balance = 25.'.
	
	self assert: accountSummary report equals: resultSummary.
	! !
!AccountSummaryTest methodsFor: 'as yet unclassified' stamp: 'EMI 11/11/2020 18:15:39' prior: 50908120!
test06AccountSummaryOfAccountWithOneOfEachTransactionShowsCorrectInfo
	| accountSummary accountOrigin accountDestination resultSummary |
	accountOrigin _ ReceptiveAccount new.
	accountDestination _ ReceptiveAccount new.
	accountSummary _ AccountSummary of: accountOrigin.
	
	Deposit register: 50  on: accountOrigin.
	Withdraw register: 10 on: accountOrigin.
	Transfer from: accountOrigin to: accountDestination amount: 20.
	Transfer from: accountDestination to: accountOrigin amount: 5.
	
	resultSummary _ OrderedCollection with: 'Extracci�n por 10.' with: 'Salida por transferencia de 20.' with: 'Entrada por transferencia de 5.' with: 'Balance = 25.'.
	
	self assert: accountSummary report equals: resultSummary.
	! !
!AccountSummaryTest methodsFor: 'as yet unclassified' stamp: 'EMI 11/11/2020 18:16:01' prior: 50908145!
test06AccountSummaryOfAccountWithOneOfEachTransactionShowsCorrectInfo
	| accountSummary accountOrigin accountDestination resultSummary |
	accountOrigin _ ReceptiveAccount new.
	accountDestination _ ReceptiveAccount new.
	accountSummary _ AccountSummary of: accountOrigin.
	
	Deposit register: 50  on: accountOrigin.
	Withdraw register: 10 on: accountOrigin.
	Transfer from: accountOrigin to: accountDestination amount: 20.
	Transfer from: accountDestination to: accountOrigin amount: 5.
	
	resultSummary _ OrderedCollection with: 'Dep�sito por 50.' with: 'Extracci�n por 10.' with: 'Salida por transferencia de 20.' with: 'Entrada por transferencia de 5.' with: 'Balance = 25.'.
	
	self assert: accountSummary report equals: resultSummary.
	! !

!testRun: #AccountSummaryTest #test06AccountSummaryOfAccountWithOneOfEachTransactionShowsCorrectInfo stamp: 'EMI 11/11/2020 18:16:51'!
PASSED!

!testRun: #AccountSummaryTest #test01AccountSummaryOfEmptyAccountOnlyShowsBalance stamp: 'EMI 11/11/2020 18:16:56'!
PASSED!

!testRun: #AccountSummaryTest #test02AccountSummaryOfAccountWithADepositShowDepositInfo stamp: 'EMI 11/11/2020 18:16:56'!
PASSED!

!testRun: #AccountSummaryTest #test03AccountSummaryOfAccountWithAWithdrawShowWithdrawInfo stamp: 'EMI 11/11/2020 18:16:56'!
PASSED!

!testRun: #AccountSummaryTest #test04AccountSummaryOfAccountWithAExtractionTransferShowExtractionTransferInfo stamp: 'EMI 11/11/2020 18:16:56'!
PASSED!

!testRun: #AccountSummaryTest #test05AccountSummaryOfAccountWithADepositTransferShowDepositTransferInfo stamp: 'EMI 11/11/2020 18:16:56'!
PASSED!

!testRun: #AccountSummaryTest #test06AccountSummaryOfAccountWithOneOfEachTransactionShowsCorrectInfo stamp: 'EMI 11/11/2020 18:16:56'!
PASSED!

----SNAPSHOT----(11 November 2020 18:21:42) CuisUniversity-4383.image priorSource: 18439278!
!Deposit methodsFor: 'nil' stamp: 'EMI 11/11/2020 18:26:23'!
reportTo: aReportMaker
	aReportMaker reportDepositTransaction: self.! !
!AccountSummary methodsFor: 'nil' stamp: 'EMI 11/11/2020 18:26:50'!
reportDepositTransaction: aDepositTransaction
	^self! !
!AccountSummary methodsFor: 'as yet unclassified' stamp: 'EMI 11/11/2020 18:40:31' prior: 50908235!
reportDepositTransaction: aDepositTransaction
	^'Dep�sito por ', aDepositTransaction value asString, '.'! !
!AccountSummary methodsFor: 'as yet unclassified' stamp: 'EMI 11/11/2020 18:43:17' prior: 50908026!
report
	| result |
	result _ OrderedCollection new.
	account transactions do: [:aTransaction | 
		aTransaction reportTo: self.
		"(aTransaction isKindOf: Withdraw) ifTrue:[result add: ('Extracci�n por ', aTransaction value asString, '.')].
		(aTransaction isKindOf: ExtractionTransfer) ifTrue:[result add: ('Salida por transferencia de ', aTransaction value asString, '.')].
		(aTransaction isKindOf: DepositTransfer) ifTrue:[result add: ('Entrada por transferencia de ', aTransaction value asString, '.')]."
		].
	result add: 'Balance = ', account balance asString, '.'.
	^result! !

!testRun: #AccountSummaryTest #test02AccountSummaryOfAccountWithADepositShowDepositInfo stamp: 'EMI 11/11/2020 18:43:26'!
FAILURE!

!testRun: #AccountSummaryTest #test02AccountSummaryOfAccountWithADepositShowDepositInfo stamp: 'EMI 11/11/2020 18:43:26'!
FAILURE!
!AccountSummary methodsFor: 'as yet unclassified' stamp: 'EMI 11/11/2020 18:43:50' prior: 50908247!
report
	| result |
	result _ OrderedCollection new.
	account transactions do: [:aTransaction | 
		result add: (aTransaction reportTo: self).
		"(aTransaction isKindOf: Withdraw) ifTrue:[result add: ('Extracci�n por ', aTransaction value asString, '.')].
		(aTransaction isKindOf: ExtractionTransfer) ifTrue:[result add: ('Salida por transferencia de ', aTransaction value asString, '.')].
		(aTransaction isKindOf: DepositTransfer) ifTrue:[result add: ('Entrada por transferencia de ', aTransaction value asString, '.')]."
		].
	result add: 'Balance = ', account balance asString, '.'.
	^result! !

!testRun: #AccountSummaryTest #test02AccountSummaryOfAccountWithADepositShowDepositInfo stamp: 'EMI 11/11/2020 18:43:53'!
FAILURE!

!testRun: #AccountSummaryTest #test02AccountSummaryOfAccountWithADepositShowDepositInfo stamp: 'EMI 11/11/2020 18:43:53'!
FAILURE!
!Deposit methodsFor: 'as yet unclassified' stamp: 'EMI 11/11/2020 18:44:23' prior: 50908230!
reportTo: aReportMaker
	^aReportMaker reportDepositTransaction: self.! !

!testRun: #AccountSummaryTest #test02AccountSummaryOfAccountWithADepositShowDepositInfo stamp: 'EMI 11/11/2020 18:44:31'!
PASSED!
!AccountSummary methodsFor: 'as yet unclassified' stamp: 'EMI 11/11/2020 18:46:38' prior: 50908277!
report
	| result |
	result _ OrderedCollection new.
	account transactions do: [:aTransaction | 
		result add: (aTransaction reportTo: self).
		"(aTransaction isKindOf: Deposit) ifTrue:[result add: ('Dep�sito por ', aTransaction value asString, '.')].
		(aTransaction isKindOf: Withdraw) ifTrue:[result add: ('Extracci�n por ', aTransaction value asString, '.')].
		(aTransaction isKindOf: ExtractionTransfer) ifTrue:[result add: ('Salida por transferencia de ', aTransaction value asString, '.')].
		(aTransaction isKindOf: DepositTransfer) ifTrue:[result add: ('Entrada por transferencia de ', aTransaction value asString, '.')]."
		].
	result add: 'Balance = ', account balance asString, '.'.
	^result! !

----SNAPSHOT----(11 November 2020 18:50:42) CuisUniversity-4383.image priorSource: 18450457!

----SNAPSHOT----(11 November 2020 18:50:59) CuisUniversity-4383.image priorSource: 18454114!

----SNAPSHOT----(11 November 2020 18:51:51) CuisUniversity-4383.image priorSource: 18454208!

----QUIT----(11 November 2020 18:52:06) CuisUniversity-4383.image priorSource: 18454302!

----STARTUP---- (12 November 2020 19:50:43) as /home/doraserver/CuisUniversity/CuisUniversity-4383.image!

!AccountSummary methodsFor: 'as yet unclassified' stamp: 'EMI 11/12/2020 21:12:16' prior: 50908317!
report
	| result |
	result _ OrderedCollection new.
	account transactions do: [:aTransaction | 
		result add: (aTransaction reportTo: self).
	].
	result add: 'Balance = ', account balance asString, '.'.
	^result! !
!Account methodsFor: 'nil' stamp: 'EMI 11/12/2020 21:12:42'!
reportTo: aReport
	! !
!Account methodsFor: 'as yet unclassified' stamp: 'EMI 11/12/2020 21:12:58' prior: 50908367!
reportTo: aReport
	^self subclassResponsibility.! !
!ReceptiveAccount methodsFor: 'nil' stamp: 'EMI 11/12/2020 21:13:11' overrides: 50908371!
reportTo: aReport! !
!ReceptiveAccount methodsFor: 'as yet unclassified' stamp: 'EMI 11/12/2020 21:13:23' prior: 50908376 overrides: 50908371!
reportTo: aReport
! !
!ReceptiveAccount methodsFor: 'as yet unclassified' stamp: 'EMI 11/12/2020 21:14:10' prior: 50908381 overrides: 50908371!
reportTo: aReport
	transactions do:[:aTransaction | aTransaction reportTo: aReport].! !
!AccountSummary methodsFor: 'as yet unclassified' stamp: 'EMI 11/12/2020 21:15:09' prior: 50908358!
report
	| result |
	result _ OrderedCollection new.
	account reportTo: self.
	result add: 'Balance = ', account balance asString, '.'.
	^result! !
!AccountSummary methodsFor: 'as yet unclassified' stamp: 'EMI 11/12/2020 21:15:43' prior: 50908392!
report
	| result |
	result _ account reportTo: self.
	result add: 'Balance = ', account balance asString, '.'.
	^result! !
!ReceptiveAccount methodsFor: 'as yet unclassified' stamp: 'EMI 11/12/2020 21:16:32' prior: 50908386 overrides: 50908371!
reportTo: aReport
	| result |
	result _ OrderedCollection new.
	transactions do:[:aTransaction | result add: (aTransaction reportTo: aReport)].! !
!ReceptiveAccount methodsFor: 'as yet unclassified' stamp: 'EMI 11/12/2020 21:17:02' prior: 50908408 overrides: 50908371!
reportTo: aReport
	| result |
	result _ OrderedCollection new.
	transactions do:[:aTransaction | result add: (aTransaction reportTo: aReport)].
	^ result.! !
!AccountTransaction methodsFor: 'nil' stamp: 'EMI 11/12/2020 21:17:53'!
reportTo: aReport
	^self subclassResponsibility.! !
!Deposit methodsFor: 'as yet unclassified' stamp: 'EMI 11/12/2020 21:18:03' prior: 50908307 overrides: 50908425!
reportTo: aReport
	^aReport reportDepositTransaction: self.! !
!DepositTransfer methodsFor: 'nil' stamp: 'EMI 11/12/2020 21:18:25' overrides: 50908425!
reportTo: aReport
	aReport ! !
!DepositTransfer methodsFor: 'as yet unclassified' stamp: 'EMI 11/12/2020 21:18:46' prior: 50908436 overrides: 50908425!
reportTo: aReport
	^aReport reportDepositTransferTransaction: self.! !
!ExtractionTransfer methodsFor: 'nil' stamp: 'EMI 11/12/2020 21:19:03' overrides: 50908425!
reportTo: aReport
	^aReport reportExtractionTransferTransaction: self.! !
!Withdraw methodsFor: 'nil' stamp: 'EMI 11/12/2020 21:19:24' overrides: 50908425!
reportTo: aReport
	^aReport reportWithdrawTransaction self.! !
!AccountSummary methodsFor: 'as yet unclassified' stamp: 'EMI 11/12/2020 21:20:00'!
reportWithdrawTransaction: aWithdrawTransaction
	^'Extracci�n por ', aWithdrawTransaction value asString, '.'! !
!AccountSummary methodsFor: 'as yet unclassified' stamp: 'EMI 11/12/2020 21:20:24'!
reportDepositTransferTransaction: aDepositTransferTransaction
	^'Extracci�n por ', aDepositTransferTransaction value asString, '.'! !
!AccountSummary methodsFor: 'as yet unclassified' stamp: 'EMI 11/12/2020 21:20:50' prior: 50908464!
reportDepositTransferTransaction: aDepositTransferTransaction
	^'Salida por transferencia de', aDepositTransferTransaction value asString, '.'! !
!AccountSummary methodsFor: 'as yet unclassified' stamp: 'EMI 11/12/2020 21:21:12'!
reportExtractionTransferTransaction: aExtractionTransferTransaction
	^'Entrada por transferencia de', aExtractionTransferTransaction value asString, '.'! !

----SNAPSHOT----(12 November 2020 21:21:38) CuisUniversity-4383.image priorSource: 18454396!

!testRun: #AccountSummaryTest #test01AccountSummaryOfEmptyAccountOnlyShowsBalance stamp: 'EMI 11/12/2020 21:21:44'!
PASSED!

!testRun: #AccountSummaryTest #test02AccountSummaryOfAccountWithADepositShowDepositInfo stamp: 'EMI 11/12/2020 21:21:44'!
PASSED!

!testRun: #AccountSummaryTest #test03AccountSummaryOfAccountWithAWithdrawShowWithdrawInfo stamp: 'EMI 11/12/2020 21:21:44'!
ERROR!

!testRun: #AccountSummaryTest #test04AccountSummaryOfAccountWithAExtractionTransferShowExtractionTransferInfo stamp: 'EMI 11/12/2020 21:21:44'!
FAILURE!

!testRun: #AccountSummaryTest #test05AccountSummaryOfAccountWithADepositTransferShowDepositTransferInfo stamp: 'EMI 11/12/2020 21:21:44'!
FAILURE!

!testRun: #AccountSummaryTest #test06AccountSummaryOfAccountWithOneOfEachTransactionShowsCorrectInfo stamp: 'EMI 11/12/2020 21:21:44'!
ERROR!

!testRun: #AccountSummaryTest #test03AccountSummaryOfAccountWithAWithdrawShowWithdrawInfo stamp: 'EMI 11/12/2020 21:21:47'!
ERROR!
!Withdraw methodsFor: 'as yet unclassified' stamp: 'EMI 11/12/2020 21:22:21' prior: 50908452 overrides: 50908425!
reportTo: aReport
	^aReport reportWithdrawTransaction: self.! !

!testRun: #AccountSummaryTest #test01AccountSummaryOfEmptyAccountOnlyShowsBalance stamp: 'EMI 11/12/2020 21:22:27'!
PASSED!

!testRun: #AccountSummaryTest #test02AccountSummaryOfAccountWithADepositShowDepositInfo stamp: 'EMI 11/12/2020 21:22:27'!
PASSED!

!testRun: #AccountSummaryTest #test03AccountSummaryOfAccountWithAWithdrawShowWithdrawInfo stamp: 'EMI 11/12/2020 21:22:27'!
PASSED!

!testRun: #AccountSummaryTest #test04AccountSummaryOfAccountWithAExtractionTransferShowExtractionTransferInfo stamp: 'EMI 11/12/2020 21:22:27'!
FAILURE!

!testRun: #AccountSummaryTest #test05AccountSummaryOfAccountWithADepositTransferShowDepositTransferInfo stamp: 'EMI 11/12/2020 21:22:27'!
FAILURE!

!testRun: #AccountSummaryTest #test06AccountSummaryOfAccountWithOneOfEachTransactionShowsCorrectInfo stamp: 'EMI 11/12/2020 21:22:27'!
FAILURE!

!testRun: #AccountSummaryTest #test04AccountSummaryOfAccountWithAExtractionTransferShowExtractionTransferInfo stamp: 'EMI 11/12/2020 21:22:31'!
FAILURE!
!AccountSummary methodsFor: 'as yet unclassified' stamp: 'EMI 11/12/2020 21:23:10' prior: 50908480!
reportExtractionTransferTransaction: aExtractionTransferTransaction
	^'Salida por transferencia de', aExtractionTransferTransaction value asString, '.'! !
!AccountSummary methodsFor: 'as yet unclassified' stamp: 'EMI 11/12/2020 21:23:17' prior: 50908472!
reportDepositTransferTransaction: aDepositTransferTransaction
	^'Entrada por transferencia de', aDepositTransferTransaction value asString, '.'! !

!testRun: #AccountSummaryTest #test01AccountSummaryOfEmptyAccountOnlyShowsBalance stamp: 'EMI 11/12/2020 21:23:20'!
PASSED!

!testRun: #AccountSummaryTest #test02AccountSummaryOfAccountWithADepositShowDepositInfo stamp: 'EMI 11/12/2020 21:23:20'!
PASSED!

!testRun: #AccountSummaryTest #test03AccountSummaryOfAccountWithAWithdrawShowWithdrawInfo stamp: 'EMI 11/12/2020 21:23:20'!
PASSED!

!testRun: #AccountSummaryTest #test04AccountSummaryOfAccountWithAExtractionTransferShowExtractionTransferInfo stamp: 'EMI 11/12/2020 21:23:20'!
FAILURE!

!testRun: #AccountSummaryTest #test05AccountSummaryOfAccountWithADepositTransferShowDepositTransferInfo stamp: 'EMI 11/12/2020 21:23:20'!
FAILURE!

!testRun: #AccountSummaryTest #test06AccountSummaryOfAccountWithOneOfEachTransactionShowsCorrectInfo stamp: 'EMI 11/12/2020 21:23:20'!
FAILURE!

!testRun: #AccountSummaryTest #test04AccountSummaryOfAccountWithAExtractionTransferShowExtractionTransferInfo stamp: 'EMI 11/12/2020 21:23:23'!
FAILURE!
!AccountSummary methodsFor: 'as yet unclassified' stamp: 'EMI 11/12/2020 21:23:42' prior: 50908567!
reportDepositTransferTransaction: aDepositTransferTransaction
	^'Entrada por transferencia de ', aDepositTransferTransaction value asString, '.'! !
!AccountSummary methodsFor: 'as yet unclassified' stamp: 'EMI 11/12/2020 21:23:47' prior: 50908559!
reportExtractionTransferTransaction: aExtractionTransferTransaction
	^'Salida por transferencia de ', aExtractionTransferTransaction value asString, '.'! !

----SNAPSHOT----(12 November 2020 21:23:56) CuisUniversity-4383.image priorSource: 18458779!

!testRun: #AccountSummaryTest #test01AccountSummaryOfEmptyAccountOnlyShowsBalance stamp: 'EMI 11/12/2020 21:25:06'!
PASSED!

!testRun: #AccountSummaryTest #test02AccountSummaryOfAccountWithADepositShowDepositInfo stamp: 'EMI 11/12/2020 21:25:06'!
PASSED!

!testRun: #AccountSummaryTest #test03AccountSummaryOfAccountWithAWithdrawShowWithdrawInfo stamp: 'EMI 11/12/2020 21:25:06'!
PASSED!

!testRun: #AccountSummaryTest #test04AccountSummaryOfAccountWithAExtractionTransferShowExtractionTransferInfo stamp: 'EMI 11/12/2020 21:25:06'!
PASSED!

!testRun: #AccountSummaryTest #test05AccountSummaryOfAccountWithADepositTransferShowDepositTransferInfo stamp: 'EMI 11/12/2020 21:25:06'!
PASSED!

!testRun: #AccountSummaryTest #test06AccountSummaryOfAccountWithOneOfEachTransactionShowsCorrectInfo stamp: 'EMI 11/12/2020 21:25:06'!
PASSED!
!AccountSummaryTest methodsFor: 'as yet unclassified' stamp: 'EMI 11/12/2020 21:26:18'!
test07AccountSummaryOfEmptyPortfolioOnlyShowsBalance
	| accountSummary account |
	account _ ReceptiveAccount new.
	accountSummary _ AccountSummary of: account.
	 
	self deny: accountSummary report isEmpty.
	self assert: accountSummary report first equals: 'Balance = 0.'.! !
!AccountSummaryTest methodsFor: 'as yet unclassified' stamp: 'EMI 11/12/2020 21:26:29' prior: 50908651!
test07AccountSummaryOfEmptyPortfolioOnlyShowsBalance
	| accountSummary portfolio |
	portfolio _ ReceptiveAccount new.
	accountSummary _ AccountSummary of: portfolio.
	 
	self deny: accountSummary report isEmpty.
	self assert: accountSummary report first equals: 'Balance = 0.'.! !
!AccountSummaryTest methodsFor: 'as yet unclassified' stamp: 'EMI 11/12/2020 21:26:39' prior: 50908663!
test07AccountSummaryOfEmptyPortfolioOnlyShowsBalance
	| accountSummary portfolio |
	portfolio _ Portfolio new.
	accountSummary _ AccountSummary of: portfolio.
	 
	self deny: accountSummary report isEmpty.
	self assert: accountSummary report first equals: 'Balance = 0.'.! !

!testRun: #AccountSummaryTest #test07AccountSummaryOfEmptyPortfolioOnlyShowsBalance stamp: 'EMI 11/12/2020 21:26:53'!
ERROR!
!Portfolio methodsFor: 'nil' stamp: 'EMI 11/12/2020 21:27:26' overrides: 50908371!
reportTo: aReport
	^OrderedCollection new.! !
!ReceptiveAccount methodsFor: 'as yet unclassified' stamp: 'EMI 11/12/2020 21:28:15' prior: 50908417 overrides: 50908371!
reportTo: aReport
	| result |
	result _ OrderedCollection new.
	transactions do:[:aTransaction | result add: (aTransaction reportTo: aReport)].
	result add: ('Balance = ',self balance asString,'.').
	^ result.! !
!AccountSummary methodsFor: 'as yet unclassified' stamp: 'EMI 11/12/2020 21:28:37' prior: 50908400!
report
	^account reportTo: self.! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'EMI 11/12/2020 21:29:05' prior: 50908692 overrides: 50908371!
reportTo: aReport
	^OrderedCollection with: 'Balance = 0.'.! !

!testRun: #AccountSummaryTest #test01AccountSummaryOfEmptyAccountOnlyShowsBalance stamp: 'EMI 11/12/2020 21:29:09'!
PASSED!

!testRun: #AccountSummaryTest #test02AccountSummaryOfAccountWithADepositShowDepositInfo stamp: 'EMI 11/12/2020 21:29:09'!
PASSED!

!testRun: #AccountSummaryTest #test03AccountSummaryOfAccountWithAWithdrawShowWithdrawInfo stamp: 'EMI 11/12/2020 21:29:09'!
PASSED!

!testRun: #AccountSummaryTest #test04AccountSummaryOfAccountWithAExtractionTransferShowExtractionTransferInfo stamp: 'EMI 11/12/2020 21:29:09'!
PASSED!

!testRun: #AccountSummaryTest #test05AccountSummaryOfAccountWithADepositTransferShowDepositTransferInfo stamp: 'EMI 11/12/2020 21:29:09'!
PASSED!

!testRun: #AccountSummaryTest #test06AccountSummaryOfAccountWithOneOfEachTransactionShowsCorrectInfo stamp: 'EMI 11/12/2020 21:29:09'!
PASSED!

!testRun: #AccountSummaryTest #test07AccountSummaryOfEmptyPortfolioOnlyShowsBalance stamp: 'EMI 11/12/2020 21:29:09'!
PASSED!
!AccountSummaryTest methodsFor: 'as yet unclassified' stamp: 'EMI 11/12/2020 21:29:51'!
test08AccountSummaryOfPortfolioWithADepositOnlyShowsBalance
	| accountSummary portfolio |
	portfolio _ Portfolio new.
	accountSummary _ AccountSummary of: portfolio.
	 
	self deny: accountSummary report isEmpty.
	self assert: accountSummary report first equals: 'Balance = 0.'.! !
!AccountSummaryTest methodsFor: 'as yet unclassified' stamp: 'EMI 11/12/2020 21:30:07' prior: 50908748!
test08AccountSummaryOfPortfolioWithADepositOnlyShowsBalance
	| accountSummary portfolio account |
	portfolio _ Portfolio new.
	account _ ReceptiveAccount new.
	accountSummary _ AccountSummary of: portfolio.
	 
	self deny: accountSummary report isEmpty.
	self assert: accountSummary report first equals: 'Balance = 0.'.! !
!AccountSummaryTest methodsFor: 'as yet unclassified' stamp: 'EMI 11/12/2020 21:30:26' prior: 50908761!
test08AccountSummaryOfPortfolioWithADepositOnlyShowsBalance
	| accountSummary portfolio account |
	portfolio _ Portfolio new.
	account _ ReceptiveAccount new.
	accountSummary _ AccountSummary of: portfolio.
	Deposit register: 10 on: account.
	 
	self deny: accountSummary report isEmpty.
	self assert: accountSummary report first equals: 'Balance = 0.'.! !
!AccountSummaryTest methodsFor: 'as yet unclassified' stamp: 'EMI 11/12/2020 21:31:02' prior: 50908775!
test08AccountSummaryOfPortfolioWithADepositOnlyShowsBalance
	| accountSummary portfolio account expectedResult |
	portfolio _ Portfolio new.
	account _ ReceptiveAccount new.
	accountSummary _ AccountSummary of: portfolio.
	Deposit register: 10 on: account.
	 
	expectedResult _ OrderedCollection with: 'Balance = 10.'.
	
	self deny: accountSummary report isEmpty.
	self assert: accountSummary report equals: expectedResult.! !
!AccountSummaryTest methodsFor: 'as yet unclassified' stamp: 'EMI 11/12/2020 21:31:16' prior: 50908790!
test08AccountSummaryOfPortfolioWithADepositOnlyShowsBalance
	| accountSummary portfolio account expectedResult |
	portfolio _ Portfolio new.
	account _ ReceptiveAccount new.
	accountSummary _ AccountSummary of: portfolio.
	Deposit register: 10 on: account.
	 
	expectedResult _ OrderedCollection with: 'Dep�sito por 10.' with: 'Balance = 10.'.
	
	self deny: accountSummary report isEmpty.
	self assert: accountSummary report equals: expectedResult.! !

!testRun: #AccountSummaryTest #test08AccountSummaryOfPortfolioWithADepositOnlyShowsBalance stamp: 'EMI 11/12/2020 21:31:33'!
FAILURE!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'EMI 11/12/2020 21:37:10' prior: 50908713 overrides: 50908371!
reportTo: aReport
	| result |
	result _ OrderedCollection new.
	accounts do:[:anAccount || accountReport |
			accountReport _ anAccount reportTo: aReport.
			accountReport removeLast.
			result addAll: accountReport.
		].
	result add: ('Balance = ',self balance,'.').
	^result.
	! !

!testRun: #AccountSummaryTest #test08AccountSummaryOfPortfolioWithADepositOnlyShowsBalance stamp: 'EMI 11/12/2020 21:37:28'!
ERROR!

!testRun: #AccountSummaryTest #test08AccountSummaryOfPortfolioWithADepositOnlyShowsBalance stamp: 'EMI 11/12/2020 21:37:28'!
ERROR!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'EMI 11/12/2020 21:37:46' prior: 50908829 overrides: 50908371!
reportTo: aReport
	| result |
	result _ OrderedCollection new.
	accounts do:[:anAccount || accountReport |
			accountReport _ anAccount reportTo: aReport.
			accountReport removeLast.
			result addAll: accountReport.
		].
	result add: ('Balance = ',self balance asString,'.').
	^result.
	! !

!testRun: #AccountSummaryTest #test01AccountSummaryOfEmptyAccountOnlyShowsBalance stamp: 'EMI 11/12/2020 21:37:49'!
PASSED!

!testRun: #AccountSummaryTest #test02AccountSummaryOfAccountWithADepositShowDepositInfo stamp: 'EMI 11/12/2020 21:37:49'!
PASSED!

!testRun: #AccountSummaryTest #test03AccountSummaryOfAccountWithAWithdrawShowWithdrawInfo stamp: 'EMI 11/12/2020 21:37:49'!
PASSED!

!testRun: #AccountSummaryTest #test04AccountSummaryOfAccountWithAExtractionTransferShowExtractionTransferInfo stamp: 'EMI 11/12/2020 21:37:49'!
PASSED!

!testRun: #AccountSummaryTest #test05AccountSummaryOfAccountWithADepositTransferShowDepositTransferInfo stamp: 'EMI 11/12/2020 21:37:49'!
PASSED!

!testRun: #AccountSummaryTest #test06AccountSummaryOfAccountWithOneOfEachTransactionShowsCorrectInfo stamp: 'EMI 11/12/2020 21:37:49'!
PASSED!

!testRun: #AccountSummaryTest #test07AccountSummaryOfEmptyPortfolioOnlyShowsBalance stamp: 'EMI 11/12/2020 21:37:49'!
PASSED!

!testRun: #AccountSummaryTest #test08AccountSummaryOfPortfolioWithADepositOnlyShowsBalance stamp: 'EMI 11/12/2020 21:37:49'!
FAILURE!

!testRun: #AccountSummaryTest #test08AccountSummaryOfPortfolioWithADepositOnlyShowsBalance stamp: 'EMI 11/12/2020 21:37:49'!
FAILURE!
!AccountSummaryTest methodsFor: 'as yet unclassified' stamp: 'EMI 11/12/2020 21:38:32' prior: 50908807!
test08AccountSummaryOfPortfolioWithADepositOnlyShowsBalance
	| accountSummary portfolio account expectedResult |
	portfolio _ Portfolio new.
	account _ ReceptiveAccount new.
	accountSummary _ AccountSummary of: portfolio.
	Deposit register: 10 on: account.
	portfolio add: account.
	 
	expectedResult _ OrderedCollection with: 'Dep�sito por 10.' with: 'Balance = 10.'.
	
	self deny: accountSummary report isEmpty.
	self assert: accountSummary report equals: expectedResult.! !

!testRun: #AccountSummaryTest #test01AccountSummaryOfEmptyAccountOnlyShowsBalance stamp: 'EMI 11/12/2020 21:38:35'!
PASSED!

!testRun: #AccountSummaryTest #test02AccountSummaryOfAccountWithADepositShowDepositInfo stamp: 'EMI 11/12/2020 21:38:35'!
PASSED!

!testRun: #AccountSummaryTest #test03AccountSummaryOfAccountWithAWithdrawShowWithdrawInfo stamp: 'EMI 11/12/2020 21:38:35'!
PASSED!

!testRun: #AccountSummaryTest #test04AccountSummaryOfAccountWithAExtractionTransferShowExtractionTransferInfo stamp: 'EMI 11/12/2020 21:38:35'!
PASSED!

!testRun: #AccountSummaryTest #test05AccountSummaryOfAccountWithADepositTransferShowDepositTransferInfo stamp: 'EMI 11/12/2020 21:38:35'!
PASSED!

!testRun: #AccountSummaryTest #test06AccountSummaryOfAccountWithOneOfEachTransactionShowsCorrectInfo stamp: 'EMI 11/12/2020 21:38:35'!
PASSED!

!testRun: #AccountSummaryTest #test07AccountSummaryOfEmptyPortfolioOnlyShowsBalance stamp: 'EMI 11/12/2020 21:38:35'!
PASSED!

!testRun: #AccountSummaryTest #test08AccountSummaryOfPortfolioWithADepositOnlyShowsBalance stamp: 'EMI 11/12/2020 21:38:35'!
PASSED!

----SNAPSHOT----(12 November 2020 21:38:38) CuisUniversity-4383.image priorSource: 18463067!
!AccountSummaryTest methodsFor: 'as yet unclassified' stamp: 'EMI 11/12/2020 21:39:10'!
test09AccountSummaryOfPortfolioWithAWithdrawOnlyShowsBalance
	| accountSummary portfolio account expectedResult |
	portfolio _ Portfolio new.
	account _ ReceptiveAccount new.
	accountSummary _ AccountSummary of: portfolio.
	Deposit register: 10 on: account.
	portfolio add: account.
	 
	expectedResult _ OrderedCollection with: 'Dep�sito por 10.' with: 'Balance = 10.'.
	
	self deny: accountSummary report isEmpty.
	self assert: accountSummary report equals: expectedResult.! !
!AccountSummaryTest methodsFor: 'as yet unclassified' stamp: 'EMI 11/12/2020 21:39:34' prior: 50908956!
test09AccountSummaryOfPortfolioWithAWithdrawOnlyShowsBalance
	| accountSummary portfolio account expectedResult |
	portfolio _ Portfolio new.
	account _ ReceptiveAccount new.
	accountSummary _ AccountSummary of: portfolio.
	Withdraw register: 10 on: account.
	portfolio add: account.
	 
	expectedResult _ OrderedCollection with: 'Extracci�n por 10.' with: 'Balance = -10.'.
	
	self deny: accountSummary report isEmpty.
	self assert: accountSummary report equals: expectedResult.! !

!testRun: #AccountSummaryTest #test09AccountSummaryOfPortfolioWithAWithdrawOnlyShowsBalance stamp: 'EMI 11/12/2020 21:39:40'!
PASSED!

!testRun: #AccountSummaryTest #test01AccountSummaryOfEmptyAccountOnlyShowsBalance stamp: 'EMI 11/12/2020 21:39:40'!
PASSED!

!testRun: #AccountSummaryTest #test02AccountSummaryOfAccountWithADepositShowDepositInfo stamp: 'EMI 11/12/2020 21:39:40'!
PASSED!

!testRun: #AccountSummaryTest #test03AccountSummaryOfAccountWithAWithdrawShowWithdrawInfo stamp: 'EMI 11/12/2020 21:39:40'!
PASSED!

!testRun: #AccountSummaryTest #test04AccountSummaryOfAccountWithAExtractionTransferShowExtractionTransferInfo stamp: 'EMI 11/12/2020 21:39:40'!
PASSED!

!testRun: #AccountSummaryTest #test05AccountSummaryOfAccountWithADepositTransferShowDepositTransferInfo stamp: 'EMI 11/12/2020 21:39:40'!
PASSED!

!testRun: #AccountSummaryTest #test06AccountSummaryOfAccountWithOneOfEachTransactionShowsCorrectInfo stamp: 'EMI 11/12/2020 21:39:40'!
PASSED!

!testRun: #AccountSummaryTest #test07AccountSummaryOfEmptyPortfolioOnlyShowsBalance stamp: 'EMI 11/12/2020 21:39:40'!
PASSED!

!testRun: #AccountSummaryTest #test08AccountSummaryOfPortfolioWithADepositOnlyShowsBalance stamp: 'EMI 11/12/2020 21:39:40'!
PASSED!

!testRun: #AccountSummaryTest #test09AccountSummaryOfPortfolioWithAWithdrawOnlyShowsBalance stamp: 'EMI 11/12/2020 21:39:40'!
PASSED!
!AccountSummaryTest methodsFor: 'as yet unclassified' stamp: 'EMI 11/12/2020 21:40:08'!
test10AccountSummaryOfPortfolioWithADepositTransfer
	| accountSummary portfolio account expectedResult |
	portfolio _ Portfolio new.
	account _ ReceptiveAccount new.
	accountSummary _ AccountSummary of: portfolio.
	Withdraw register: 10 on: account.
	portfolio add: account.
	 
	expectedResult _ OrderedCollection with: 'Extracci�n por 10.' with: 'Balance = -10.'.
	
	self deny: accountSummary report isEmpty.
	self assert: accountSummary report equals: expectedResult.! !
!AccountSummaryTest methodsFor: 'as yet unclassified' stamp: 'EMI 11/12/2020 21:40:21'!
test09AccountSummaryOfPortfolioWithAWithdraw
	| accountSummary portfolio account expectedResult |
	portfolio _ Portfolio new.
	account _ ReceptiveAccount new.
	accountSummary _ AccountSummary of: portfolio.
	Withdraw register: 10 on: account.
	portfolio add: account.
	 
	expectedResult _ OrderedCollection with: 'Extracci�n por 10.' with: 'Balance = -10.'.
	
	self deny: accountSummary report isEmpty.
	self assert: accountSummary report equals: expectedResult.! !

!methodRemoval: AccountSummaryTest #test09AccountSummaryOfPortfolioWithAWithdrawOnlyShowsBalance stamp: 'EMI 11/12/2020 21:40:21'!
test09AccountSummaryOfPortfolioWithAWithdrawOnlyShowsBalance
	| accountSummary portfolio account expectedResult |
	portfolio _ Portfolio new.
	account _ ReceptiveAccount new.
	accountSummary _ AccountSummary of: portfolio.
	Withdraw register: 10 on: account.
	portfolio add: account.
	 
	expectedResult _ OrderedCollection with: 'Extracci�n por 10.' with: 'Balance = -10.'.
	
	self deny: accountSummary report isEmpty.
	self assert: accountSummary report equals: expectedResult.!
!AccountSummaryTest methodsFor: 'as yet unclassified' stamp: 'EMI 11/12/2020 21:40:31'!
test08AccountSummaryOfPortfolioWithADeposit
	| accountSummary portfolio account expectedResult |
	portfolio _ Portfolio new.
	account _ ReceptiveAccount new.
	accountSummary _ AccountSummary of: portfolio.
	Deposit register: 10 on: account.
	portfolio add: account.
	 
	expectedResult _ OrderedCollection with: 'Dep�sito por 10.' with: 'Balance = 10.'.
	
	self deny: accountSummary report isEmpty.
	self assert: accountSummary report equals: expectedResult.! !

!methodRemoval: AccountSummaryTest #test08AccountSummaryOfPortfolioWithADepositOnlyShowsBalance stamp: 'EMI 11/12/2020 21:40:31'!
test08AccountSummaryOfPortfolioWithADepositOnlyShowsBalance
	| accountSummary portfolio account expectedResult |
	portfolio _ Portfolio new.
	account _ ReceptiveAccount new.
	accountSummary _ AccountSummary of: portfolio.
	Deposit register: 10 on: account.
	portfolio add: account.
	 
	expectedResult _ OrderedCollection with: 'Dep�sito por 10.' with: 'Balance = 10.'.
	
	self deny: accountSummary report isEmpty.
	self assert: accountSummary report equals: expectedResult.!
!AccountSummaryTest methodsFor: 'as yet unclassified' stamp: 'EMI 11/12/2020 21:40:52' prior: 50909036!
test10AccountSummaryOfPortfolioWithADepositTransfer
	| accountSummary portfolio accountOrigin expectedResult |
	portfolio _ Portfolio new.
	accountOrigin _ ReceptiveAccount new.
	accountSummary _ AccountSummary of: portfolio.
	Withdraw register: 10 on: accountOrigin.
	portfolio add: accountOrigin.
	 
	expectedResult _ OrderedCollection with: 'Extracci�n por 10.' with: 'Balance = -10.'.
	
	self deny: accountSummary report isEmpty.
	self assert: accountSummary report equals: expectedResult.! !
!AccountSummaryTest methodsFor: 'as yet unclassified' stamp: 'EMI 11/12/2020 21:41:00' prior: 50909128!
test10AccountSummaryOfPortfolioWithADepositTransfer
	| accountSummary portfolio accountOrigin accountDestination expectedResult |
	portfolio _ Portfolio new.
	accountOrigin _ ReceptiveAccount new.
	accountSummary _ AccountSummary of: portfolio.
	Withdraw register: 10 on: accountOrigin.
	portfolio add: accountOrigin.
	 
	expectedResult _ OrderedCollection with: 'Extracci�n por 10.' with: 'Balance = -10.'.
	
	self deny: accountSummary report isEmpty.
	self assert: accountSummary report equals: expectedResult.! !
!AccountSummaryTest methodsFor: 'as yet unclassified' stamp: 'EMI 11/12/2020 21:41:10' prior: 50909147!
test10AccountSummaryOfPortfolioWithADepositTransfer
	| accountSummary portfolio accountOrigin accountDestination expectedResult |
	portfolio _ Portfolio new.
	accountOrigin _ ReceptiveAccount new.
	accountDestination _ ReceptiveAccount new.
	accountSummary _ AccountSummary of: portfolio.
	Withdraw register: 10 on: accountOrigin.
	portfolio add: accountOrigin.
	 
	expectedResult _ OrderedCollection with: 'Extracci�n por 10.' with: 'Balance = -10.'.
	
	self deny: accountSummary report isEmpty.
	self assert: accountSummary report equals: expectedResult.! !
!AccountSummaryTest methodsFor: 'as yet unclassified' stamp: 'EMI 11/12/2020 21:41:58' prior: 50909167!
test10AccountSummaryOfPortfolioWithADepositTransfer
	| accountSummary portfolio accountOrigin accountDestination expectedResult |
	portfolio _ Portfolio new.
	accountOrigin _ ReceptiveAccount new.
	accountDestination _ ReceptiveAccount new.
	accountSummary _ AccountSummary of: portfolio.
	
	portfolio add: accountOrigin.
	
	Transfer from: accountOrigin to: accountDestination amount: 10.
	 
	expectedResult _ OrderedCollection with: 'Extracci�n por 10.' with: 'Balance = -10.'.
	
	self deny: accountSummary report isEmpty.
	self assert: accountSummary report equals: expectedResult.! !
!AccountSummaryTest methodsFor: 'as yet unclassified' stamp: 'EMI 11/12/2020 21:42:18' prior: 50909188!
test10AccountSummaryOfPortfolioWithADepositTransfer
	| accountSummary portfolio accountOrigin accountDestination expectedResult |
	portfolio _ Portfolio new.
	accountOrigin _ ReceptiveAccount new.
	accountDestination _ ReceptiveAccount new.
	accountSummary _ AccountSummary of: portfolio.
	
	portfolio add: accountOrigin.
	
	Transfer from: accountOrigin to: accountDestination amount: 10.
	 
	expectedResult _ OrderedCollection with: 'Salida por transferencia de 10.' with: 'Balance = -10.'.
	
	self deny: accountSummary report isEmpty.
	self assert: accountSummary report equals: expectedResult.! !

!testRun: #AccountSummaryTest #test10AccountSummaryOfPortfolioWithADepositTransfer stamp: 'EMI 11/12/2020 21:42:29'!
PASSED!

!testRun: #AccountSummaryTest #test01AccountSummaryOfEmptyAccountOnlyShowsBalance stamp: 'EMI 11/12/2020 21:42:29'!
PASSED!

!testRun: #AccountSummaryTest #test02AccountSummaryOfAccountWithADepositShowDepositInfo stamp: 'EMI 11/12/2020 21:42:29'!
PASSED!

!testRun: #AccountSummaryTest #test03AccountSummaryOfAccountWithAWithdrawShowWithdrawInfo stamp: 'EMI 11/12/2020 21:42:29'!
PASSED!

!testRun: #AccountSummaryTest #test04AccountSummaryOfAccountWithAExtractionTransferShowExtractionTransferInfo stamp: 'EMI 11/12/2020 21:42:29'!
PASSED!

!testRun: #AccountSummaryTest #test05AccountSummaryOfAccountWithADepositTransferShowDepositTransferInfo stamp: 'EMI 11/12/2020 21:42:29'!
PASSED!

!testRun: #AccountSummaryTest #test06AccountSummaryOfAccountWithOneOfEachTransactionShowsCorrectInfo stamp: 'EMI 11/12/2020 21:42:29'!
PASSED!

!testRun: #AccountSummaryTest #test07AccountSummaryOfEmptyPortfolioOnlyShowsBalance stamp: 'EMI 11/12/2020 21:42:29'!
PASSED!

!testRun: #AccountSummaryTest #test08AccountSummaryOfPortfolioWithADeposit stamp: 'EMI 11/12/2020 21:42:29'!
PASSED!

!testRun: #AccountSummaryTest #test09AccountSummaryOfPortfolioWithAWithdraw stamp: 'EMI 11/12/2020 21:42:29'!
PASSED!

!testRun: #AccountSummaryTest #test10AccountSummaryOfPortfolioWithADepositTransfer stamp: 'EMI 11/12/2020 21:42:29'!
PASSED!
!AccountSummaryTest methodsFor: 'as yet unclassified' stamp: 'EMI 11/12/2020 21:42:46'!
test11AccountSummaryOfPortfolioWithAExtractionTransfer
	| accountSummary portfolio accountOrigin accountDestination expectedResult |
	portfolio _ Portfolio new.
	accountOrigin _ ReceptiveAccount new.
	accountDestination _ ReceptiveAccount new.
	accountSummary _ AccountSummary of: portfolio.
	
	portfolio add: accountOrigin.
	
	Transfer from: accountOrigin to: accountDestination amount: 10.
	 
	expectedResult _ OrderedCollection with: 'Salida por transferencia de 10.' with: 'Balance = -10.'.
	
	self deny: accountSummary report isEmpty.
	self assert: accountSummary report equals: expectedResult.! !
!AccountSummaryTest methodsFor: 'as yet unclassified' stamp: 'EMI 11/12/2020 21:43:03' prior: 50909277!
test11AccountSummaryOfPortfolioWithAExtractionTransfer
	| accountSummary portfolio accountOrigin accountDestination expectedResult |
	portfolio _ Portfolio new.
	accountOrigin _ ReceptiveAccount new.
	accountDestination _ ReceptiveAccount new.
	accountSummary _ AccountSummary of: portfolio.
	
	portfolio add: accountDestination.
	
	Transfer from: accountOrigin to: accountDestination amount: 10.
	 
	expectedResult _ OrderedCollection with: 'Entrada por transferencia de 10.' with: 'Balance = -10.'.
	
	self deny: accountSummary report isEmpty.
	self assert: accountSummary report equals: expectedResult.! !
!AccountSummaryTest methodsFor: 'as yet unclassified' stamp: 'EMI 11/12/2020 21:43:06' prior: 50909300!
test11AccountSummaryOfPortfolioWithAExtractionTransfer
	| accountSummary portfolio accountOrigin accountDestination expectedResult |
	portfolio _ Portfolio new.
	accountOrigin _ ReceptiveAccount new.
	accountDestination _ ReceptiveAccount new.
	accountSummary _ AccountSummary of: portfolio.
	
	portfolio add: accountDestination.
	
	Transfer from: accountOrigin to: accountDestination amount: 10.
	 
	expectedResult _ OrderedCollection with: 'Entrada por transferencia de 10.' with: 'Balance = 10.'.
	
	self deny: accountSummary report isEmpty.
	self assert: accountSummary report equals: expectedResult.! !

!testRun: #AccountSummaryTest #test11AccountSummaryOfPortfolioWithAExtractionTransfer stamp: 'EMI 11/12/2020 21:43:39'!
PASSED!

!testRun: #AccountSummaryTest #test01AccountSummaryOfEmptyAccountOnlyShowsBalance stamp: 'EMI 11/12/2020 21:43:39'!
PASSED!

!testRun: #AccountSummaryTest #test02AccountSummaryOfAccountWithADepositShowDepositInfo stamp: 'EMI 11/12/2020 21:43:39'!
PASSED!

!testRun: #AccountSummaryTest #test03AccountSummaryOfAccountWithAWithdrawShowWithdrawInfo stamp: 'EMI 11/12/2020 21:43:39'!
PASSED!

!testRun: #AccountSummaryTest #test04AccountSummaryOfAccountWithAExtractionTransferShowExtractionTransferInfo stamp: 'EMI 11/12/2020 21:43:39'!
PASSED!

!testRun: #AccountSummaryTest #test05AccountSummaryOfAccountWithADepositTransferShowDepositTransferInfo stamp: 'EMI 11/12/2020 21:43:39'!
PASSED!

!testRun: #AccountSummaryTest #test06AccountSummaryOfAccountWithOneOfEachTransactionShowsCorrectInfo stamp: 'EMI 11/12/2020 21:43:39'!
PASSED!

!testRun: #AccountSummaryTest #test07AccountSummaryOfEmptyPortfolioOnlyShowsBalance stamp: 'EMI 11/12/2020 21:43:39'!
PASSED!

!testRun: #AccountSummaryTest #test08AccountSummaryOfPortfolioWithADeposit stamp: 'EMI 11/12/2020 21:43:40'!
PASSED!

!testRun: #AccountSummaryTest #test09AccountSummaryOfPortfolioWithAWithdraw stamp: 'EMI 11/12/2020 21:43:40'!
PASSED!

!testRun: #AccountSummaryTest #test10AccountSummaryOfPortfolioWithADepositTransfer stamp: 'EMI 11/12/2020 21:43:40'!
PASSED!

!testRun: #AccountSummaryTest #test11AccountSummaryOfPortfolioWithAExtractionTransfer stamp: 'EMI 11/12/2020 21:43:40'!
PASSED!
!AccountSummary methodsFor: 'as yet unclassified' stamp: 'EMI 11/12/2020 21:15:43' prior: 50908708!
report
	| result |
	result _ account reportTo: self.
	result add: 'Balance = ', account balance asString, '.'.
	^result! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'EMI 11/12/2020 21:49:15' prior: 50908850 overrides: 50908371!
reportTo: aReport
	| result |
	result _ OrderedCollection new.
	accounts do:[:anAccount |result addAll: (anAccount reportTo: aReport).].
	^result.
	! !
!ReceptiveAccount methodsFor: 'as yet unclassified' stamp: 'EMI 11/12/2020 21:49:33' prior: 50908698 overrides: 50908371!
reportTo: aReport
	| result |
	result _ OrderedCollection new.
	transactions do:[:aTransaction | result add: (aTransaction reportTo: aReport)].
	^ result.! !

!testRun: #AccountSummaryTest #test01AccountSummaryOfEmptyAccountOnlyShowsBalance stamp: 'EMI 11/12/2020 21:49:42'!
PASSED!

!testRun: #AccountSummaryTest #test02AccountSummaryOfAccountWithADepositShowDepositInfo stamp: 'EMI 11/12/2020 21:49:42'!
PASSED!

!testRun: #AccountSummaryTest #test03AccountSummaryOfAccountWithAWithdrawShowWithdrawInfo stamp: 'EMI 11/12/2020 21:49:42'!
PASSED!

!testRun: #AccountSummaryTest #test04AccountSummaryOfAccountWithAExtractionTransferShowExtractionTransferInfo stamp: 'EMI 11/12/2020 21:49:42'!
PASSED!

!testRun: #AccountSummaryTest #test05AccountSummaryOfAccountWithADepositTransferShowDepositTransferInfo stamp: 'EMI 11/12/2020 21:49:42'!
PASSED!

!testRun: #AccountSummaryTest #test06AccountSummaryOfAccountWithOneOfEachTransactionShowsCorrectInfo stamp: 'EMI 11/12/2020 21:49:42'!
PASSED!

!testRun: #AccountSummaryTest #test07AccountSummaryOfEmptyPortfolioOnlyShowsBalance stamp: 'EMI 11/12/2020 21:49:42'!
PASSED!

!testRun: #AccountSummaryTest #test08AccountSummaryOfPortfolioWithADeposit stamp: 'EMI 11/12/2020 21:49:42'!
PASSED!

!testRun: #AccountSummaryTest #test09AccountSummaryOfPortfolioWithAWithdraw stamp: 'EMI 11/12/2020 21:49:42'!
PASSED!

!testRun: #AccountSummaryTest #test10AccountSummaryOfPortfolioWithADepositTransfer stamp: 'EMI 11/12/2020 21:49:42'!
PASSED!

!testRun: #AccountSummaryTest #test11AccountSummaryOfPortfolioWithAExtractionTransfer stamp: 'EMI 11/12/2020 21:49:42'!
PASSED!

----SNAPSHOT----(12 November 2020 21:50:23) CuisUniversity-4383.image priorSource: 18473666!

Object subclass: #NetTranfersReport
	instanceVariableNames: 'account'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio2-Ejercicio'!

!classDefinition: #NetTranfersReport category: 'Portfolio2-Ejercicio' stamp: 'EMI 11/12/2020 21:50:49'!
Object subclass: #NetTranfersReport
	instanceVariableNames: 'account'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio2-Ejercicio'!

Object subclass: #Report
	instanceVariableNames: 'account'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio2-Ejercicio'!

!classDefinition: #Report category: 'Portfolio2-Ejercicio' stamp: 'EMI 11/12/2020 21:51:27'!
Object subclass: #Report
	instanceVariableNames: 'account'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio2-Ejercicio'!

Report subclass: #AccountSummary
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio2-Ejercicio'!

!classDefinition: #AccountSummary category: 'Portfolio2-Ejercicio' stamp: 'EMI 11/12/2020 21:51:41'!
Report subclass: #AccountSummary
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio2-Ejercicio'!

Report subclass: #NetTranfersReport
	instanceVariableNames: 'account'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio2-Ejercicio'!

Report subclass: #NetTranfersReport
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio2-Ejercicio'!

!classDefinition: #NetTranfersReport category: 'Portfolio2-Ejercicio' stamp: 'EMI 11/12/2020 21:51:59'!
Report subclass: #NetTranfersReport
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio2-Ejercicio'!

!testRun: #AccountSummaryTest #test01AccountSummaryOfEmptyAccountOnlyShowsBalance stamp: 'EMI 11/12/2020 21:52:09'!
PASSED!

!testRun: #AccountSummaryTest #test02AccountSummaryOfAccountWithADepositShowDepositInfo stamp: 'EMI 11/12/2020 21:52:09'!
PASSED!

!testRun: #AccountSummaryTest #test03AccountSummaryOfAccountWithAWithdrawShowWithdrawInfo stamp: 'EMI 11/12/2020 21:52:09'!
PASSED!

!testRun: #AccountSummaryTest #test04AccountSummaryOfAccountWithAExtractionTransferShowExtractionTransferInfo stamp: 'EMI 11/12/2020 21:52:09'!
PASSED!

!testRun: #AccountSummaryTest #test05AccountSummaryOfAccountWithADepositTransferShowDepositTransferInfo stamp: 'EMI 11/12/2020 21:52:09'!
PASSED!

!testRun: #AccountSummaryTest #test06AccountSummaryOfAccountWithOneOfEachTransactionShowsCorrectInfo stamp: 'EMI 11/12/2020 21:52:09'!
PASSED!

!testRun: #AccountSummaryTest #test07AccountSummaryOfEmptyPortfolioOnlyShowsBalance stamp: 'EMI 11/12/2020 21:52:09'!
PASSED!

!testRun: #AccountSummaryTest #test08AccountSummaryOfPortfolioWithADeposit stamp: 'EMI 11/12/2020 21:52:09'!
PASSED!

!testRun: #AccountSummaryTest #test09AccountSummaryOfPortfolioWithAWithdraw stamp: 'EMI 11/12/2020 21:52:09'!
PASSED!

!testRun: #AccountSummaryTest #test10AccountSummaryOfPortfolioWithADepositTransfer stamp: 'EMI 11/12/2020 21:52:09'!
PASSED!

!testRun: #AccountSummaryTest #test11AccountSummaryOfPortfolioWithAExtractionTransfer stamp: 'EMI 11/12/2020 21:52:09'!
PASSED!
!Report methodsFor: 'nil' stamp: 'EMI 11/12/2020 21:52:41'!
report
	^self subclassResponsibility.! !
!Report methodsFor: 'as yet unclassified' stamp: 'EMI 11/12/2020 21:53:04'!
reportDespositTransaction: aDepositTransaction
	^self subclassResponsibility.! !
!Report methodsFor: 'as yet unclassified' stamp: 'EMI 11/12/2020 21:53:17'!
reportWithdrawTransaction: aWithdrawTransaction
	^self subclassResponsibility.! !
!Report methodsFor: 'as yet unclassified' stamp: 'EMI 11/12/2020 21:54:07'!
reportDepositTransferTransaction: aDepositTransferTransaction
	^self subclassResponsibility.! !
!Report methodsFor: 'as yet unclassified' stamp: 'EMI 11/12/2020 21:54:20'!
reportExtractionTransferTransaction: aExtractionTransferTransaction
	^self subclassResponsibility.! !
!AccountSummary class methodsFor: 'instance creation' stamp: 'EMI 11/12/2020 21:54:40' prior: 50907342!
of: aAccount 
	^self new initializeOf: aAccount ! !
!Report class methodsFor: 'nil' stamp: 'EMI 11/12/2020 21:55:36'!
of: aAccount 
	^self new initializeOf: aAccount ! !

!methodRemoval: AccountSummary class #of: stamp: 'EMI 11/12/2020 21:55:49'!
of: aAccount 
	^self new initializeOf: aAccount !

----SNAPSHOT----(12 November 2020 21:55:56) CuisUniversity-4383.image priorSource: 18490057!

!testRun: #AccountSummaryTest #test01AccountSummaryOfEmptyAccountOnlyShowsBalance stamp: 'EMI 11/12/2020 21:56:07'!
PASSED!

!testRun: #AccountSummaryTest #test02AccountSummaryOfAccountWithADepositShowDepositInfo stamp: 'EMI 11/12/2020 21:56:07'!
PASSED!

!testRun: #AccountSummaryTest #test03AccountSummaryOfAccountWithAWithdrawShowWithdrawInfo stamp: 'EMI 11/12/2020 21:56:07'!
PASSED!

!testRun: #AccountSummaryTest #test04AccountSummaryOfAccountWithAExtractionTransferShowExtractionTransferInfo stamp: 'EMI 11/12/2020 21:56:07'!
PASSED!

!testRun: #AccountSummaryTest #test05AccountSummaryOfAccountWithADepositTransferShowDepositTransferInfo stamp: 'EMI 11/12/2020 21:56:07'!
PASSED!

!testRun: #AccountSummaryTest #test06AccountSummaryOfAccountWithOneOfEachTransactionShowsCorrectInfo stamp: 'EMI 11/12/2020 21:56:07'!
PASSED!

!testRun: #AccountSummaryTest #test07AccountSummaryOfEmptyPortfolioOnlyShowsBalance stamp: 'EMI 11/12/2020 21:56:07'!
PASSED!

!testRun: #AccountSummaryTest #test08AccountSummaryOfPortfolioWithADeposit stamp: 'EMI 11/12/2020 21:56:07'!
PASSED!

!testRun: #AccountSummaryTest #test09AccountSummaryOfPortfolioWithAWithdraw stamp: 'EMI 11/12/2020 21:56:07'!
PASSED!

!testRun: #AccountSummaryTest #test10AccountSummaryOfPortfolioWithADepositTransfer stamp: 'EMI 11/12/2020 21:56:07'!
PASSED!

!testRun: #AccountSummaryTest #test11AccountSummaryOfPortfolioWithAExtractionTransfer stamp: 'EMI 11/12/2020 21:56:07'!
PASSED!

----SNAPSHOT----(12 November 2020 21:56:35) CuisUniversity-4383.image priorSource: 18494578!

----SNAPSHOT----(12 November 2020 21:57:06) CuisUniversity-4383.image priorSource: 18496124!

----SNAPSHOT----(12 November 2020 21:59:00) CuisUniversity-4383.image priorSource: 18496218!

----QUIT----(12 November 2020 21:59:48) CuisUniversity-4383.image priorSource: 18496312!

----STARTUP---- (13 November 2020 19:36:41) as /home/doraserver/CuisUniversity/CuisUniversity-4383.image!


TestCase subclass: #NetTransfersReportTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio2-Ejercicio'!

!classDefinition: #NetTransfersReportTest category: 'Portfolio2-Ejercicio' stamp: 'EMI 11/13/2020 19:48:31'!
TestCase subclass: #NetTransfersReportTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio2-Ejercicio'!

!classRenamed: #NetTranfersReport as: #NetTransfersReport stamp: 'EMI 11/13/2020 19:48:42'!
Smalltalk renameClassNamed: #NetTranfersReport as: #NetTransfersReport!
!NetTransfersReportTest methodsFor: 'nil' stamp: 'EMI 11/13/2020 19:51:32'!
test01
	| account report |
	account _ ReceptiveAccount new.
	report  _ NetTransfersReport of: account.

	self assert: report report equals: 0.! !
!NetTransfersReportTest methodsFor: 'as yet unclassified' stamp: 'EMI 11/13/2020 19:52:06' prior: 50909688!
test01
	| account netTransfer |
	account _ ReceptiveAccount new.
	netTransfer  _ NetTransfersReport of: account.

	self assert: netTransfer report equals: 0.! !

!testRun: #NetTransfersReportTest #test01 stamp: 'EMI 11/13/2020 19:52:40'!
ERROR!

!testRun: #NetTransfersReportTest #test01 stamp: 'EMI 11/13/2020 19:52:40'!
ERROR!
!NetTransfersReport methodsFor: 'initialization' stamp: 'EMI 11/13/2020 19:52:57'!
initializeOf: aAccount 
	self shouldBeImplemented.
	account := aAccount.! !
!NetTransfersReport methodsFor: 'initialization' stamp: 'EMI 11/13/2020 19:53:03' prior: 50909709!
initializeOf: aAccount 
	account := aAccount.! !

!testRun: #NetTransfersReportTest #test01 stamp: 'EMI 11/13/2020 19:53:04'!
ERROR!
!NetTransfersReport methodsFor: 'reporting' stamp: 'EMI 11/13/2020 19:53:21' overrides: 50909567!
report
	self shouldBeImplemented.! !
!NetTransfersReport methodsFor: 'reporting' stamp: 'EMI 11/13/2020 19:53:35' prior: 50909723 overrides: 50909567!
report
	^account reportTo: self.! !
!NetTransfersReport methodsFor: 'reporting' stamp: 'EMI 11/13/2020 19:53:48' prior: 50909728 overrides: 50909567!
report
	^0.! !

!testRun: #NetTransfersReportTest #test01 stamp: 'EMI 11/13/2020 19:53:50'!
PASSED!

!testRun: #NetTransfersReportTest #test01 stamp: 'EMI 11/13/2020 19:53:52'!
PASSED!

!testRun: #NetTransfersReportTest #test01 stamp: 'EMI 11/13/2020 19:53:52'!
PASSED!
!NetTransfersReportTest methodsFor: 'as yet unclassified' stamp: 'EMI 11/13/2020 19:54:43'!
test01NetTransferReportOfEmotyAccountReturnsZero
	| account netTransfer |
	account _ ReceptiveAccount new.
	netTransfer  _ NetTransfersReport of: account.

	self assert: netTransfer report equals: 0.! !

!methodRemoval: NetTransfersReportTest #test01 stamp: 'EMI 11/13/2020 19:54:43'!
test01
	| account netTransfer |
	account _ ReceptiveAccount new.
	netTransfer  _ NetTransfersReport of: account.

	self assert: netTransfer report equals: 0.!
!NetTransfersReportTest methodsFor: 'as yet unclassified' stamp: 'EMI 11/13/2020 19:54:55'!
test01NetTransferReportOfEmptyAccountReturnsZero
	| account netTransfer |
	account _ ReceptiveAccount new.
	netTransfer  _ NetTransfersReport of: account.

	self assert: netTransfer report equals: 0.! !

!methodRemoval: NetTransfersReportTest #test01NetTransferReportOfEmotyAccountReturnsZero stamp: 'EMI 11/13/2020 19:54:55'!
test01NetTransferReportOfEmotyAccountReturnsZero
	| account netTransfer |
	account _ ReceptiveAccount new.
	netTransfer  _ NetTransfersReport of: account.

	self assert: netTransfer report equals: 0.!
!NetTransfersReportTest methodsFor: 'as yet unclassified' stamp: 'EMI 11/13/2020 19:55:42'!
test02NetTransferReportOfAccountWithADepositReturnsZero
	| account netTransfer |
	account _ ReceptiveAccount new.
	netTransfer  _ NetTransfersReport of: account.

	self assert: netTransfer report equals: 0.! !
!NetTransfersReportTest methodsFor: 'as yet unclassified' stamp: 'EMI 11/13/2020 19:55:53' prior: 50909782!
test02NetTransferReportOfAccountWithADepositReturnsZero
	| account netTransfer |
	account _ ReceptiveAccount new.
	netTransfer  _ NetTransfersReport of: account.
	Deposit register: 10 on: account.

	self assert: netTransfer report equals: 0.! !

!testRun: #NetTransfersReportTest #test02NetTransferReportOfAccountWithADepositReturnsZero stamp: 'EMI 11/13/2020 19:55:56'!
PASSED!

!testRun: #NetTransfersReportTest #test01NetTransferReportOfEmptyAccountReturnsZero stamp: 'EMI 11/13/2020 19:55:56'!
PASSED!

!testRun: #NetTransfersReportTest #test02NetTransferReportOfAccountWithADepositReturnsZero stamp: 'EMI 11/13/2020 19:55:56'!
PASSED!
!NetTransfersReportTest methodsFor: 'as yet unclassified' stamp: 'EMI 11/13/2020 19:57:18'!
test04NetTransferReportOfAccountWithADepositReturnsZero
	| account netTransfer |
	account _ ReceptiveAccount new.
	netTransfer  _ NetTransfersReport of: account.
	Deposit register: 10 on: account.

	self assert: netTransfer report equals: 0.! !

!methodRemoval: NetTransfersReportTest #test02NetTransferReportOfAccountWithADepositReturnsZero stamp: 'EMI 11/13/2020 19:57:19'!
test02NetTransferReportOfAccountWithADepositReturnsZero
	| account netTransfer |
	account _ ReceptiveAccount new.
	netTransfer  _ NetTransfersReport of: account.
	Deposit register: 10 on: account.

	self assert: netTransfer report equals: 0.!
!NetTransfersReportTest methodsFor: 'as yet unclassified' stamp: 'EMI 11/13/2020 19:58:04'!
test02NetTransferReportOfAccountWithADepositTransferReturnsCorrectly
	| accountOrigin accountDestination netTransfer |
	accountOrigin _ ReceptiveAccount new.
	netTransfer  _ NetTransfersReport of: accountOrigin.
	Deposit register: 10 on: accountOrigin.

	self assert: netTransfer report equals: 0.! !
!NetTransfersReportTest methodsFor: 'as yet unclassified' stamp: 'EMI 11/13/2020 19:59:23' prior: 50909838!
test02NetTransferReportOfAccountWithADepositTransferReturnsCorrectly
	| accountOrigin accountDestination netTransfer |
	accountOrigin _ ReceptiveAccount new.
	accountDestination _ ReceptiveAccount new.
	netTransfer  _ NetTransfersReport of: accountDestination.
	Transfer from: accountOrigin to: accountDestination amount: 10.

	self assert: netTransfer report equals: 0.! !
!NetTransfersReportTest methodsFor: 'as yet unclassified' stamp: 'EMI 11/13/2020 19:59:29' prior: 50909851!
test02NetTransferReportOfAccountWithADepositTransferReturnsCorrectly
	| accountOrigin accountDestination netTransfer |
	accountOrigin _ ReceptiveAccount new.
	accountDestination _ ReceptiveAccount new.
	netTransfer  _ NetTransfersReport of: accountDestination.
	Transfer from: accountOrigin to: accountDestination amount: 10.

	self assert: netTransfer report equals: 10.! !

!testRun: #NetTransfersReportTest #test02NetTransferReportOfAccountWithADepositTransferReturnsCorrectly stamp: 'EMI 11/13/2020 19:59:39'!
FAILURE!
!NetTransfersReport methodsFor: 'reporting' stamp: 'EMI 11/13/2020 20:02:06' prior: 50909733 overrides: 50909567!
report
	^account transactions sum: [:aTransaction |
		(aTransaction isKindOf: DepositTransfer) ifTrue: [aTransaction value].
		].! !

!testRun: #NetTransfersReportTest #test02NetTransferReportOfAccountWithADepositTransferReturnsCorrectly stamp: 'EMI 11/13/2020 20:02:34'!
PASSED!

!testRun: #NetTransfersReportTest #test04NetTransferReportOfAccountWithADepositReturnsZero stamp: 'EMI 11/13/2020 20:02:38'!
FAILURE!

!testRun: #NetTransfersReportTest #test04NetTransferReportOfAccountWithADepositReturnsZero stamp: 'EMI 11/13/2020 20:02:38'!
FAILURE!

!testRun: #NetTransfersReportTest #test01NetTransferReportOfEmptyAccountReturnsZero stamp: 'EMI 11/13/2020 20:02:48'!
ERROR!

!testRun: #NetTransfersReportTest #test01NetTransferReportOfEmptyAccountReturnsZero stamp: 'EMI 11/13/2020 20:02:48'!
ERROR!
!NetTransfersReport methodsFor: 'reporting' stamp: 'EMI 11/13/2020 20:03:44' prior: 50909887 overrides: 50909567!
report
	account isEmpty ifTrue:[^0].
	^account transactions sum: [:aTransaction |
		(aTransaction isKindOf: Deposit) ifTrue: [0].
		(aTransaction isKindOf: DepositTransfer) ifTrue: [aTransaction value].
		].! !

!testRun: #NetTransfersReportTest #test01NetTransferReportOfEmptyAccountReturnsZero stamp: 'EMI 11/13/2020 20:03:50'!
ERROR!

!testRun: #NetTransfersReportTest #test02NetTransferReportOfAccountWithADepositTransferReturnsCorrectly stamp: 'EMI 11/13/2020 20:03:50'!
ERROR!

!testRun: #NetTransfersReportTest #test04NetTransferReportOfAccountWithADepositReturnsZero stamp: 'EMI 11/13/2020 20:03:50'!
ERROR!

!testRun: #NetTransfersReportTest #test01NetTransferReportOfEmptyAccountReturnsZero stamp: 'EMI 11/13/2020 20:03:53'!
ERROR!
!NetTransfersReport methodsFor: 'reporting' stamp: 'EMI 11/13/2020 20:04:20' prior: 50909916 overrides: 50909567!
report
	account transactions isEmpty ifTrue:[^0].
	^account transactions sum: [:aTransaction |
		(aTransaction isKindOf: Deposit) ifTrue: [0].
		(aTransaction isKindOf: DepositTransfer) ifTrue: [aTransaction value].
		].! !

!testRun: #NetTransfersReportTest #test01NetTransferReportOfEmptyAccountReturnsZero stamp: 'EMI 11/13/2020 20:04:24'!
PASSED!

!testRun: #NetTransfersReportTest #test02NetTransferReportOfAccountWithADepositTransferReturnsCorrectly stamp: 'EMI 11/13/2020 20:04:24'!
PASSED!

!testRun: #NetTransfersReportTest #test04NetTransferReportOfAccountWithADepositReturnsZero stamp: 'EMI 11/13/2020 20:04:24'!
FAILURE!

!testRun: #NetTransfersReportTest #test04NetTransferReportOfAccountWithADepositReturnsZero stamp: 'EMI 11/13/2020 20:04:24'!
FAILURE!

!testRun: #NetTransfersReportTest #test01NetTransferReportOfEmptyAccountReturnsZero stamp: 'EMI 11/13/2020 20:05:16'!
PASSED!

!testRun: #NetTransfersReportTest #test02NetTransferReportOfAccountWithADepositTransferReturnsCorrectly stamp: 'EMI 11/13/2020 20:05:16'!
PASSED!

!testRun: #NetTransfersReportTest #test04NetTransferReportOfAccountWithADepositReturnsZero stamp: 'EMI 11/13/2020 20:05:16'!
FAILURE!

!testRun: #NetTransfersReportTest #test04NetTransferReportOfAccountWithADepositReturnsZero stamp: 'EMI 11/13/2020 20:05:16'!
FAILURE!

!testRun: #NetTransfersReportTest #test01NetTransferReportOfEmptyAccountReturnsZero stamp: 'EMI 11/13/2020 20:05:47'!
PASSED!

!testRun: #NetTransfersReportTest #test02NetTransferReportOfAccountWithADepositTransferReturnsCorrectly stamp: 'EMI 11/13/2020 20:05:47'!
PASSED!

!testRun: #NetTransfersReportTest #test04NetTransferReportOfAccountWithADepositReturnsZero stamp: 'EMI 11/13/2020 20:05:47'!
FAILURE!

!testRun: #NetTransfersReportTest #test04NetTransferReportOfAccountWithADepositReturnsZero stamp: 'EMI 11/13/2020 20:05:47'!
FAILURE!

a _ OrderedCollection with:1 with: 2 with: 3.!

a sum!

a sum: [:a | a].!

a sum: [:a | a+1].!
!NetTransfersReport methodsFor: 'reporting' stamp: 'EMI 11/13/2020 20:09:43' prior: 50909943 overrides: 50909567!
report
	| res |
	account transactions isEmpty ifTrue:[^0].
	res _ account transactions sum: [:aTransaction |
		(aTransaction isKindOf: Deposit) ifTrue: [0].
		(aTransaction isKindOf: DepositTransfer) ifTrue: [aTransaction value].
		].
	^res.! !

!testRun: #NetTransfersReportTest #test01NetTransferReportOfEmptyAccountReturnsZero stamp: 'EMI 11/13/2020 20:09:47'!
PASSED!

!testRun: #NetTransfersReportTest #test02NetTransferReportOfAccountWithADepositTransferReturnsCorrectly stamp: 'EMI 11/13/2020 20:09:47'!
PASSED!

!testRun: #NetTransfersReportTest #test04NetTransferReportOfAccountWithADepositReturnsZero stamp: 'EMI 11/13/2020 20:09:47'!
FAILURE!

!testRun: #NetTransfersReportTest #test04NetTransferReportOfAccountWithADepositReturnsZero stamp: 'EMI 11/13/2020 20:09:47'!
FAILURE!

!testRun: #NetTransfersReportTest #test01NetTransferReportOfEmptyAccountReturnsZero stamp: 'EMI 11/13/2020 20:12:38'!
PASSED!

!testRun: #NetTransfersReportTest #test02NetTransferReportOfAccountWithADepositTransferReturnsCorrectly stamp: 'EMI 11/13/2020 20:12:38'!
PASSED!

!testRun: #NetTransfersReportTest #test04NetTransferReportOfAccountWithADepositReturnsZero stamp: 'EMI 11/13/2020 20:12:38'!
FAILURE!

!testRun: #NetTransfersReportTest #test04NetTransferReportOfAccountWithADepositReturnsZero stamp: 'EMI 11/13/2020 20:12:38'!
FAILURE!
!NetTransfersReport methodsFor: 'reporting' stamp: 'EMI 11/13/2020 20:15:32' prior: 50910008 overrides: 50909567!
report
	| res |
	account transactions isEmpty ifTrue:[^0].
	res _ account transactions sum: [:aTransaction |
		(aTransaction isKindOf: Deposit) ifTrue: [aTransaction halt.0.].
		(aTransaction isKindOf: DepositTransfer) ifTrue: [aTransaction value].
		].
	^res.! !

!testRun: #NetTransfersReportTest #test01NetTransferReportOfEmptyAccountReturnsZero stamp: 'EMI 11/13/2020 20:15:39'!
PASSED!

!testRun: #NetTransfersReportTest #test02NetTransferReportOfAccountWithADepositTransferReturnsCorrectly stamp: 'EMI 11/13/2020 20:15:39'!
PASSED!
!NetTransfersReport methodsFor: 'reporting' stamp: 'EMI 11/13/2020 20:16:19' prior: 50910054 overrides: 50909567!
report
	| res |
	account transactions isEmpty ifTrue:[^0].
	res _ account transactions sum: [:aTransaction |
		(aTransaction isKindOf: Deposit) ifTrue: [^0.].
		(aTransaction isKindOf: DepositTransfer) ifTrue: [aTransaction value].
		].
	^res.! !

!testRun: #NetTransfersReportTest #test01NetTransferReportOfEmptyAccountReturnsZero stamp: 'EMI 11/13/2020 20:16:29'!
PASSED!

!testRun: #NetTransfersReportTest #test02NetTransferReportOfAccountWithADepositTransferReturnsCorrectly stamp: 'EMI 11/13/2020 20:16:29'!
PASSED!

!testRun: #NetTransfersReportTest #test04NetTransferReportOfAccountWithADepositReturnsZero stamp: 'EMI 11/13/2020 20:16:29'!
PASSED!
!NetTransfersReportTest methodsFor: 'as yet unclassified' stamp: 'EMI 11/13/2020 20:17:46' prior: 50909867!
test02NetTransferReportOfAccountWithADepositTransferReturnsCorrectly
	| accountOrigin accountDestination netTransfer |
	accountOrigin _ ReceptiveAccount new.
	accountDestination _ ReceptiveAccount new.
	netTransfer  _ NetTransfersReport of: accountDestination.
	Deposit register: accountDestination on: 10.
	Transfer from: accountOrigin to: accountDestination amount: 10.

	self assert: netTransfer report equals: 10.! !

!testRun: #NetTransfersReportTest #test02NetTransferReportOfAccountWithADepositTransferReturnsCorrectly stamp: 'EMI 11/13/2020 20:17:49'!
ERROR!
!NetTransfersReportTest methodsFor: 'as yet unclassified' stamp: 'EMI 11/13/2020 20:18:08' prior: 50910099!
test02NetTransferReportOfAccountWithADepositTransferReturnsCorrectly
	| accountOrigin accountDestination netTransfer |
	accountOrigin _ ReceptiveAccount new.
	accountDestination _ ReceptiveAccount new.
	netTransfer  _ NetTransfersReport of: accountDestination.
	Deposit register: 10 on: accountDestination .
	Transfer from: accountOrigin to: accountDestination amount: 10.

	self assert: netTransfer report equals: 10.! !

!testRun: #NetTransfersReportTest #test02NetTransferReportOfAccountWithADepositTransferReturnsCorrectly stamp: 'EMI 11/13/2020 20:18:10'!
FAILURE!
!NetTransfersReport methodsFor: 'reporting' stamp: 'EMI 11/13/2020 20:18:31' prior: 50910075 overrides: 50909567!
report
	| res |
	account transactions isEmpty ifTrue:[^0].
	res _ account transactions sum: [:aTransaction |
		(aTransaction isKindOf: Deposit) ifTrue: [0.].
		(aTransaction isKindOf: DepositTransfer) ifTrue: [aTransaction value].
		].
	^res.! !

!testRun: #NetTransfersReportTest #test01NetTransferReportOfEmptyAccountReturnsZero stamp: 'EMI 11/13/2020 20:18:36'!
PASSED!

!testRun: #NetTransfersReportTest #test02NetTransferReportOfAccountWithADepositTransferReturnsCorrectly stamp: 'EMI 11/13/2020 20:18:36'!
ERROR!

!testRun: #NetTransfersReportTest #test04NetTransferReportOfAccountWithADepositReturnsZero stamp: 'EMI 11/13/2020 20:18:36'!
FAILURE!

!testRun: #NetTransfersReportTest #test02NetTransferReportOfAccountWithADepositTransferReturnsCorrectly stamp: 'EMI 11/13/2020 20:18:39'!
ERROR!

!testRun: #NetTransfersReportTest #test01NetTransferReportOfEmptyAccountReturnsZero stamp: 'EMI 11/13/2020 20:19:42'!
PASSED!

!testRun: #NetTransfersReportTest #test02NetTransferReportOfAccountWithADepositTransferReturnsCorrectly stamp: 'EMI 11/13/2020 20:19:42'!
ERROR!

!testRun: #NetTransfersReportTest #test04NetTransferReportOfAccountWithADepositReturnsZero stamp: 'EMI 11/13/2020 20:19:42'!
FAILURE!

!testRun: #NetTransfersReportTest #test02NetTransferReportOfAccountWithADepositTransferReturnsCorrectly stamp: 'EMI 11/13/2020 20:19:44'!
ERROR!
!NetTransfersReport methodsFor: 'reporting' stamp: 'EMI 11/13/2020 20:22:35' prior: 50910143 overrides: 50909567!
report
	| res |
	account transactions isEmpty ifTrue:[^0].
	res _ account transactions inject: 0 into: [:aSum :aTransaction|
		(aTransaction isKindOf: Deposit) ifTrue: [0].
		(aTransaction isKindOf: DepositTransfer) ifTrue: [aTransaction value].
		].
	^res.! !
!NetTransfersReport methodsFor: 'reporting' stamp: 'EMI 11/13/2020 20:22:56' prior: 50910189 overrides: 50909567!
report
	| res |
	account transactions isEmpty ifTrue:[^0].
	res _ account transactions inject: 0 into: [:aSum :aTransaction|
		(aTransaction isKindOf: Deposit) ifTrue: [aSum].
		(aTransaction isKindOf: DepositTransfer) ifTrue: [aSum + aTransaction value].
		].
	^res.! !

!testRun: #NetTransfersReportTest #test01NetTransferReportOfEmptyAccountReturnsZero stamp: 'EMI 11/13/2020 20:23:00'!
PASSED!

!testRun: #NetTransfersReportTest #test02NetTransferReportOfAccountWithADepositTransferReturnsCorrectly stamp: 'EMI 11/13/2020 20:23:00'!
ERROR!

!testRun: #NetTransfersReportTest #test04NetTransferReportOfAccountWithADepositReturnsZero stamp: 'EMI 11/13/2020 20:23:00'!
FAILURE!

!testRun: #NetTransfersReportTest #test02NetTransferReportOfAccountWithADepositTransferReturnsCorrectly stamp: 'EMI 11/13/2020 20:23:02'!
ERROR!
!NetTransfersReport methodsFor: 'reporting' stamp: 'EMI 11/13/2020 20:26:42' prior: 50910201 overrides: 50909567!
report
	| res |
	account transactions isEmpty ifTrue:[^0].
	res _ 0.
	account transactions do: [:aTransaction|
		(aTransaction isKindOf: Deposit) ifTrue: [res _ res].
		(aTransaction isKindOf: DepositTransfer) ifTrue: [res _ res + aTransaction value].
		].
	^res.! !
!NetTransfersReportTest methodsFor: 'as yet unclassified' stamp: 'EMI 11/13/2020 20:26:57' prior: 50910121!
test02NetTransferReportOfAccountWithADepositTransferReturnsCorrectly
	| accountOrigin accountDestination netTransfer |
	accountOrigin _ ReceptiveAccount new.
	accountDestination _ ReceptiveAccount new.
	netTransfer  _ NetTransfersReport of: accountDestination.

	Transfer from: accountOrigin to: accountDestination amount: 10.

	self assert: netTransfer report equals: 10.! !

!testRun: #NetTransfersReportTest #test01NetTransferReportOfEmptyAccountReturnsZero stamp: 'EMI 11/13/2020 20:26:59'!
PASSED!

!testRun: #NetTransfersReportTest #test02NetTransferReportOfAccountWithADepositTransferReturnsCorrectly stamp: 'EMI 11/13/2020 20:26:59'!
PASSED!

!testRun: #NetTransfersReportTest #test04NetTransferReportOfAccountWithADepositReturnsZero stamp: 'EMI 11/13/2020 20:26:59'!
PASSED!
!NetTransfersReportTest methodsFor: 'as yet unclassified' stamp: 'EMI 11/13/2020 20:27:35'!
test03NetTransferReportOfAccountWithAExtractionTransferReturnsCorrectly
	| accountOrigin accountDestination netTransfer |
	accountOrigin _ ReceptiveAccount new.
	accountDestination _ ReceptiveAccount new.
	netTransfer  _ NetTransfersReport of: accountOrigin.

	Transfer from: accountOrigin to: accountDestination amount: 10.

	self assert: netTransfer report equals: -10.! !

!testRun: #NetTransfersReportTest #test03NetTransferReportOfAccountWithAExtractionTransferReturnsCorrectly stamp: 'EMI 11/13/2020 20:27:37'!
FAILURE!
!NetTransfersReport methodsFor: 'reporting' stamp: 'EMI 11/13/2020 20:27:55' prior: 50910231 overrides: 50909567!
report
	| res |
	account transactions isEmpty ifTrue:[^0].
	res _ 0.
	account transactions do: [:aTransaction|
		(aTransaction isKindOf: Deposit) ifTrue: [res _ res].
		(aTransaction isKindOf: DepositTransfer) ifTrue: [res _ res + aTransaction value].
		(aTransaction isKindOf: ExtractionTransfer) ifTrue: [res _ res + aTransaction value].
		].
	^res.! !

!testRun: #NetTransfersReportTest #test01NetTransferReportOfEmptyAccountReturnsZero stamp: 'EMI 11/13/2020 20:28:06'!
PASSED!

!testRun: #NetTransfersReportTest #test02NetTransferReportOfAccountWithADepositTransferReturnsCorrectly stamp: 'EMI 11/13/2020 20:28:06'!
PASSED!

!testRun: #NetTransfersReportTest #test03NetTransferReportOfAccountWithAExtractionTransferReturnsCorrectly stamp: 'EMI 11/13/2020 20:28:06'!
FAILURE!

!testRun: #NetTransfersReportTest #test04NetTransferReportOfAccountWithADepositReturnsZero stamp: 'EMI 11/13/2020 20:28:06'!
PASSED!

!testRun: #NetTransfersReportTest #test03NetTransferReportOfAccountWithAExtractionTransferReturnsCorrectly stamp: 'EMI 11/13/2020 20:28:06'!
FAILURE!
!NetTransfersReport methodsFor: 'reporting' stamp: 'EMI 11/13/2020 20:28:37' prior: 50910291 overrides: 50909567!
report
	| res |
	account transactions isEmpty ifTrue:[^0].
	res _ 0.
	account transactions do: [:aTransaction|
		(aTransaction isKindOf: Deposit) ifTrue: [res _ res].
		(aTransaction isKindOf: DepositTransfer) ifTrue: [res _ res + aTransaction value].
		(aTransaction isKindOf: ExtractionTransfer) ifTrue: [res _ res - aTransaction value].
		].
	^res.! !

!testRun: #NetTransfersReportTest #test01NetTransferReportOfEmptyAccountReturnsZero stamp: 'EMI 11/13/2020 20:28:41'!
PASSED!

!testRun: #NetTransfersReportTest #test02NetTransferReportOfAccountWithADepositTransferReturnsCorrectly stamp: 'EMI 11/13/2020 20:28:41'!
PASSED!

!testRun: #NetTransfersReportTest #test03NetTransferReportOfAccountWithAExtractionTransferReturnsCorrectly stamp: 'EMI 11/13/2020 20:28:41'!
PASSED!

!testRun: #NetTransfersReportTest #test04NetTransferReportOfAccountWithADepositReturnsZero stamp: 'EMI 11/13/2020 20:28:41'!
PASSED!

----SNAPSHOT----(13 November 2020 20:28:48) CuisUniversity-4383.image priorSource: 18496406!

!testRun: #NetTransfersReportTest #test01NetTransferReportOfEmptyAccountReturnsZero stamp: 'EMI 11/13/2020 20:28:52'!
PASSED!

!testRun: #NetTransfersReportTest #test02NetTransferReportOfAccountWithADepositTransferReturnsCorrectly stamp: 'EMI 11/13/2020 20:28:52'!
PASSED!

!testRun: #NetTransfersReportTest #test03NetTransferReportOfAccountWithAExtractionTransferReturnsCorrectly stamp: 'EMI 11/13/2020 20:28:52'!
PASSED!

!testRun: #NetTransfersReportTest #test04NetTransferReportOfAccountWithADepositReturnsZero stamp: 'EMI 11/13/2020 20:28:52'!
PASSED!
!NetTransfersReport methodsFor: 'reporting' stamp: 'EMI 11/13/2020 20:29:33' prior: 50910328 overrides: 50909567!
report
	| res |
	account transactions isEmpty ifTrue:[^0].
	res _ 0.
	account transactions do: [:aTransaction|
		(aTransaction isKindOf: DepositTransfer) ifTrue: [res _ res + aTransaction value].
		(aTransaction isKindOf: ExtractionTransfer) ifTrue: [res _ res - aTransaction value].
		].
	^res.! !
!NetTransfersReport methodsFor: 'reporting' stamp: 'EMI 11/13/2020 20:29:44' prior: 50910381 overrides: 50909567!
report
	| res |
	res _ 0.
	account transactions do: [:aTransaction|
		(aTransaction isKindOf: DepositTransfer) ifTrue: [res _ res + aTransaction value].
		(aTransaction isKindOf: ExtractionTransfer) ifTrue: [res _ res - aTransaction value].
		].
	^res.! !
!NetTransfersReport methodsFor: 'reporting' stamp: 'EMI 11/13/2020 20:32:04' prior: 50910394 overrides: 50909567!
report
	| res |
	res _ 0.
	^account transactions sum: [:aTransaction |
		aTransaction ifNil: [0].
		(aTransaction isKindOf: DepositTransfer) ifTrue: [res _ res + aTransaction value].
		(aTransaction isKindOf: ExtractionTransfer) ifTrue: [res _ res - aTransaction value].
		].! !
!NetTransfersReport methodsFor: 'reporting' stamp: 'EMI 11/13/2020 20:32:19' prior: 50910406 overrides: 50909567!
report
	| res |
	res _ 0.
	^account transactions sum: [:aTransaction |
		aTransaction ifNil: [0].
		(aTransaction isKindOf: DepositTransfer) ifTrue: [aTransaction value].
		(aTransaction isKindOf: ExtractionTransfer) ifTrue: [aTransaction value negated].
		].! !
!NetTransfersReport methodsFor: 'reporting' stamp: 'EMI 11/13/2020 20:32:54' prior: 50910419 overrides: 50909567!
report
	| res |
	res _ 0.
	^account transactions sum: [:aTransaction |
		aTransaction ifNil: [0].
		(aTransaction isKindOf: Deposit) ifTrue: [0].
		(aTransaction isKindOf: DepositTransfer) ifTrue: [aTransaction value].
		(aTransaction isKindOf: ExtractionTransfer) ifTrue: [aTransaction value negated].
		].! !

!testRun: #NetTransfersReportTest #test01NetTransferReportOfEmptyAccountReturnsZero stamp: 'EMI 11/13/2020 20:32:59'!
ERROR!

!testRun: #NetTransfersReportTest #test02NetTransferReportOfAccountWithADepositTransferReturnsCorrectly stamp: 'EMI 11/13/2020 20:32:59'!
FAILURE!

!testRun: #NetTransfersReportTest #test03NetTransferReportOfAccountWithAExtractionTransferReturnsCorrectly stamp: 'EMI 11/13/2020 20:32:59'!
PASSED!

!testRun: #NetTransfersReportTest #test04NetTransferReportOfAccountWithADepositReturnsZero stamp: 'EMI 11/13/2020 20:32:59'!
FAILURE!

!testRun: #NetTransfersReportTest #test01NetTransferReportOfEmptyAccountReturnsZero stamp: 'EMI 11/13/2020 20:33:03'!
ERROR!
!NetTransfersReport methodsFor: 'reporting' stamp: 'EMI 11/13/2020 20:33:24' prior: 50910431 overrides: 50909567!
report
	| res |
	res _ 0.
	^account transactions sum: [:aTransaction |
		aTransaction ifNil: [0].
		(aTransaction isKindOf: Deposit) ifTrue: [0].
		(aTransaction isKindOf: DepositTransfer) ifTrue: [aTransaction value].
		(aTransaction isKindOf: ExtractionTransfer) ifTrue: [aTransaction value negated].
		] ifEmpty: [0].! !

!testRun: #NetTransfersReportTest #test01NetTransferReportOfEmptyAccountReturnsZero stamp: 'EMI 11/13/2020 20:33:35'!
PASSED!

!testRun: #NetTransfersReportTest #test02NetTransferReportOfAccountWithADepositTransferReturnsCorrectly stamp: 'EMI 11/13/2020 20:33:35'!
FAILURE!

!testRun: #NetTransfersReportTest #test03NetTransferReportOfAccountWithAExtractionTransferReturnsCorrectly stamp: 'EMI 11/13/2020 20:33:35'!
PASSED!

!testRun: #NetTransfersReportTest #test04NetTransferReportOfAccountWithADepositReturnsZero stamp: 'EMI 11/13/2020 20:33:35'!
FAILURE!

!testRun: #NetTransfersReportTest #test02NetTransferReportOfAccountWithADepositTransferReturnsCorrectly stamp: 'EMI 11/13/2020 20:33:38'!
FAILURE!
!NetTransfersReport methodsFor: 'reporting' stamp: 'EMI 11/13/2020 20:29:44' prior: 50910466 overrides: 50909567!
report
	| res |
	res _ 0.
	account transactions do: [:aTransaction|
		(aTransaction isKindOf: DepositTransfer) ifTrue: [res _ res + aTransaction value].
		(aTransaction isKindOf: ExtractionTransfer) ifTrue: [res _ res - aTransaction value].
		].
	^res.! !

!testRun: #NetTransfersReportTest #test01NetTransferReportOfEmptyAccountReturnsZero stamp: 'EMI 11/13/2020 20:35:29'!
PASSED!

!testRun: #NetTransfersReportTest #test02NetTransferReportOfAccountWithADepositTransferReturnsCorrectly stamp: 'EMI 11/13/2020 20:35:29'!
PASSED!

!testRun: #NetTransfersReportTest #test03NetTransferReportOfAccountWithAExtractionTransferReturnsCorrectly stamp: 'EMI 11/13/2020 20:35:29'!
PASSED!

!testRun: #NetTransfersReportTest #test04NetTransferReportOfAccountWithADepositReturnsZero stamp: 'EMI 11/13/2020 20:35:29'!
PASSED!
!NetTransfersReport methodsFor: 'reporting' stamp: 'EMI 11/13/2020 20:36:44' prior: 50910502 overrides: 50909567!
report
	account reportTo: self.! !
!NetTransfersReport methodsFor: 'nil' stamp: 'EMI 11/13/2020 20:37:35'!
reportDepositTransaction: aDepositTransaction
	^0! !
!NetTransfersReport methodsFor: 'as yet unclassified' stamp: 'EMI 11/13/2020 20:37:49' overrides: 50909576!
reportWithdrawTransaction: aWithdrawTransaction
	^0! !
!NetTransfersReport methodsFor: 'nil' stamp: 'EMI 11/13/2020 20:38:12' overrides: 50909581!
reportDepositTransferTransaction: aDepositTransferTransaction
	^aDepositTransferTransaction value.! !
!NetTransfersReport methodsFor: 'as yet unclassified' stamp: 'EMI 11/13/2020 20:38:31' overrides: 50909587!
reportExtractionTransferTransaction: aExtractionTransferTransaction
	^aExtractionTransferTransaction value negated.! !

!testRun: #NetTransfersReportTest #test01NetTransferReportOfEmptyAccountReturnsZero stamp: 'EMI 11/13/2020 20:38:43'!
FAILURE!

!testRun: #NetTransfersReportTest #test02NetTransferReportOfAccountWithADepositTransferReturnsCorrectly stamp: 'EMI 11/13/2020 20:38:43'!
FAILURE!

!testRun: #NetTransfersReportTest #test03NetTransferReportOfAccountWithAExtractionTransferReturnsCorrectly stamp: 'EMI 11/13/2020 20:38:43'!
FAILURE!

!testRun: #NetTransfersReportTest #test04NetTransferReportOfAccountWithADepositReturnsZero stamp: 'EMI 11/13/2020 20:38:43'!
FAILURE!

!testRun: #NetTransfersReportTest #test01NetTransferReportOfEmptyAccountReturnsZero stamp: 'EMI 11/13/2020 20:38:46'!
FAILURE!
!NetTransfersReport methodsFor: 'reporting' stamp: 'EMI 11/13/2020 20:39:56' prior: 50910531 overrides: 50909567!
report
	^(account reportTo: self) sum.! !

!testRun: #NetTransfersReportTest #test01NetTransferReportOfEmptyAccountReturnsZero stamp: 'EMI 11/13/2020 20:40:04'!
ERROR!

!testRun: #NetTransfersReportTest #test02NetTransferReportOfAccountWithADepositTransferReturnsCorrectly stamp: 'EMI 11/13/2020 20:40:04'!
PASSED!

!testRun: #NetTransfersReportTest #test03NetTransferReportOfAccountWithAExtractionTransferReturnsCorrectly stamp: 'EMI 11/13/2020 20:40:04'!
PASSED!

!testRun: #NetTransfersReportTest #test04NetTransferReportOfAccountWithADepositReturnsZero stamp: 'EMI 11/13/2020 20:40:04'!
PASSED!

!testRun: #NetTransfersReportTest #test01NetTransferReportOfEmptyAccountReturnsZero stamp: 'EMI 11/13/2020 20:40:04'!
ERROR!
!NetTransfersReport methodsFor: 'reporting' stamp: 'EMI 11/13/2020 20:40:28' prior: 50910582 overrides: 50909567!
report
	^(account reportTo: self) sum ifEmpty: [0].! !

!testRun: #NetTransfersReportTest #test01NetTransferReportOfEmptyAccountReturnsZero stamp: 'EMI 11/13/2020 20:40:37'!
ERROR!

!testRun: #NetTransfersReportTest #test02NetTransferReportOfAccountWithADepositTransferReturnsCorrectly stamp: 'EMI 11/13/2020 20:40:37'!
ERROR!

!testRun: #NetTransfersReportTest #test03NetTransferReportOfAccountWithAExtractionTransferReturnsCorrectly stamp: 'EMI 11/13/2020 20:40:37'!
ERROR!

!testRun: #NetTransfersReportTest #test04NetTransferReportOfAccountWithADepositReturnsZero stamp: 'EMI 11/13/2020 20:40:37'!
ERROR!

!testRun: #NetTransfersReportTest #test01NetTransferReportOfEmptyAccountReturnsZero stamp: 'EMI 11/13/2020 20:40:39'!
ERROR!
!NetTransfersReport methodsFor: 'reporting' stamp: 'EMI 11/13/2020 20:42:20' prior: 50910609 overrides: 50909567!
report
	| res |
	res _ account reportTo: self.
	res isEmpty ifTrue: [^0].
	^res sum.! !

!testRun: #NetTransfersReportTest #test01NetTransferReportOfEmptyAccountReturnsZero stamp: 'EMI 11/13/2020 20:42:29'!
PASSED!

!testRun: #NetTransfersReportTest #test02NetTransferReportOfAccountWithADepositTransferReturnsCorrectly stamp: 'EMI 11/13/2020 20:42:29'!
PASSED!

!testRun: #NetTransfersReportTest #test03NetTransferReportOfAccountWithAExtractionTransferReturnsCorrectly stamp: 'EMI 11/13/2020 20:42:29'!
PASSED!

!testRun: #NetTransfersReportTest #test04NetTransferReportOfAccountWithADepositReturnsZero stamp: 'EMI 11/13/2020 20:42:29'!
PASSED!
!NetTransfersReport methodsFor: 'reporting' stamp: 'EMI 11/13/2020 20:43:38' prior: 50910636 overrides: 50909567!
report
	| res |
	res _ account reportTo: self.
	^res sum: [:a :b | a + b] ifEmpty: [0].! !

!testRun: #NetTransfersReportTest #test01NetTransferReportOfEmptyAccountReturnsZero stamp: 'EMI 11/13/2020 20:43:43'!
PASSED!

!testRun: #NetTransfersReportTest #test02NetTransferReportOfAccountWithADepositTransferReturnsCorrectly stamp: 'EMI 11/13/2020 20:43:43'!
ERROR!

!testRun: #NetTransfersReportTest #test03NetTransferReportOfAccountWithAExtractionTransferReturnsCorrectly stamp: 'EMI 11/13/2020 20:43:43'!
ERROR!

!testRun: #NetTransfersReportTest #test04NetTransferReportOfAccountWithADepositReturnsZero stamp: 'EMI 11/13/2020 20:43:43'!
ERROR!

!testRun: #NetTransfersReportTest #test02NetTransferReportOfAccountWithADepositTransferReturnsCorrectly stamp: 'EMI 11/13/2020 20:43:46'!
ERROR!
!NetTransfersReport methodsFor: 'reporting' stamp: 'EMI 11/13/2020 20:45:26' prior: 50910660 overrides: 50909567!
report
	| res |
	res _ account reportTo: self.
	^res sum: [:a | a] ifEmpty: [0].! !

!testRun: #NetTransfersReportTest #test01NetTransferReportOfEmptyAccountReturnsZero stamp: 'EMI 11/13/2020 20:45:30'!
PASSED!

!testRun: #NetTransfersReportTest #test02NetTransferReportOfAccountWithADepositTransferReturnsCorrectly stamp: 'EMI 11/13/2020 20:45:30'!
PASSED!

!testRun: #NetTransfersReportTest #test03NetTransferReportOfAccountWithAExtractionTransferReturnsCorrectly stamp: 'EMI 11/13/2020 20:45:30'!
PASSED!

!testRun: #NetTransfersReportTest #test04NetTransferReportOfAccountWithADepositReturnsZero stamp: 'EMI 11/13/2020 20:45:30'!
PASSED!
!NetTransfersReport methodsFor: 'reporting' stamp: 'EMI 11/13/2020 20:46:01' prior: 50910689 overrides: 50909567!
report
	| res |
	res _ account reportTo: self.
	^res sum: [:aTransferAmount | aTransferAmount] ifEmpty: [0].! !
!NetTransfersReport methodsFor: 'reporting' stamp: 'EMI 11/13/2020 20:46:16' prior: 50910713 overrides: 50909567!
report
	^(account reportTo: self) sum: [:aTransferAmount | aTransferAmount] ifEmpty: [0].! !

!testRun: #NetTransfersReportTest #test01NetTransferReportOfEmptyAccountReturnsZero stamp: 'EMI 11/13/2020 20:46:26'!
PASSED!

!testRun: #NetTransfersReportTest #test02NetTransferReportOfAccountWithADepositTransferReturnsCorrectly stamp: 'EMI 11/13/2020 20:46:26'!
PASSED!

!testRun: #NetTransfersReportTest #test03NetTransferReportOfAccountWithAExtractionTransferReturnsCorrectly stamp: 'EMI 11/13/2020 20:46:26'!
PASSED!

!testRun: #NetTransfersReportTest #test04NetTransferReportOfAccountWithADepositReturnsZero stamp: 'EMI 11/13/2020 20:46:26'!
PASSED!
!NetTransfersReportTest methodsFor: 'as yet unclassified' stamp: 'EMI 11/13/2020 20:47:19'!
test05NetTransferReportOfEmptyPortfolioReturnsZero
	| account netTransfer |
	account _ ReceptiveAccount new.
	netTransfer  _ NetTransfersReport of: account.
	Deposit register: 10 on: account.

	self assert: netTransfer report equals: 0.! !
!NetTransfersReportTest methodsFor: 'as yet unclassified' stamp: 'EMI 11/13/2020 20:47:36' prior: 50910745!
test05NetTransferReportOfEmptyPortfolioReturnsZero
	| portfolio netTransfer |
	portfolio _ ReceptiveAccount new.
	netTransfer  _ NetTransfersReport of: portfolio.
	Deposit register: 10 on: portfolio.

	self assert: netTransfer report equals: 0.! !
!NetTransfersReportTest methodsFor: 'as yet unclassified' stamp: 'EMI 11/13/2020 20:47:43' prior: 50910756!
test05NetTransferReportOfEmptyPortfolioReturnsZero
	| portfolio netTransfer |
	portfolio _ Portfolio new.
	netTransfer  _ NetTransfersReport of: portfolio.

	self assert: netTransfer report equals: 0.! !

!testRun: #NetTransfersReportTest #test05NetTransferReportOfEmptyPortfolioReturnsZero stamp: 'EMI 11/13/2020 20:47:47'!
PASSED!

!testRun: #NetTransfersReportTest #test01NetTransferReportOfEmptyAccountReturnsZero stamp: 'EMI 11/13/2020 20:47:47'!
PASSED!

!testRun: #NetTransfersReportTest #test02NetTransferReportOfAccountWithADepositTransferReturnsCorrectly stamp: 'EMI 11/13/2020 20:47:47'!
PASSED!

!testRun: #NetTransfersReportTest #test03NetTransferReportOfAccountWithAExtractionTransferReturnsCorrectly stamp: 'EMI 11/13/2020 20:47:47'!
PASSED!

!testRun: #NetTransfersReportTest #test04NetTransferReportOfAccountWithADepositReturnsZero stamp: 'EMI 11/13/2020 20:47:47'!
PASSED!

!testRun: #NetTransfersReportTest #test05NetTransferReportOfEmptyPortfolioReturnsZero stamp: 'EMI 11/13/2020 20:47:47'!
PASSED!
!NetTransfersReportTest methodsFor: 'as yet unclassified' stamp: 'EMI 11/13/2020 20:49:23'!
test06NetTransferReportOfPortfolioWithAccountAndATransferReturnsCorrectly
	| portfolio netTransfer |
	portfolio _ Portfolio new.
	netTransfer  _ NetTransfersReport of: portfolio.

	self assert: netTransfer report equals: 0.! !
!NetTransfersReportTest methodsFor: 'as yet unclassified' stamp: 'EMI 11/13/2020 20:50:47' prior: 50910803!
test06NetTransferReportOfPortfolioWithAccountAndATransferReturnsCorrectly
	| portfolio netTransfer accountOrigin accountDestination|
	portfolio _ Portfolio new.
	netTransfer  _ NetTransfersReport of: portfolio.
	
	accountOrigin _ ReceptiveAccount new.
	accountDestination _ ReceptiveAccount new.
	Transfer from: accountOrigin to: accountDestination amount: 10.
	portfolio add: accountOrigin .

	self assert: netTransfer report equals: -10.! !

!testRun: #NetTransfersReportTest #test06NetTransferReportOfPortfolioWithAccountAndATransferReturnsCorrectly stamp: 'EMI 11/13/2020 20:50:49'!
PASSED!

!testRun: #NetTransfersReportTest #test01NetTransferReportOfEmptyAccountReturnsZero stamp: 'EMI 11/13/2020 20:50:49'!
PASSED!

!testRun: #NetTransfersReportTest #test02NetTransferReportOfAccountWithADepositTransferReturnsCorrectly stamp: 'EMI 11/13/2020 20:50:49'!
PASSED!

!testRun: #NetTransfersReportTest #test03NetTransferReportOfAccountWithAExtractionTransferReturnsCorrectly stamp: 'EMI 11/13/2020 20:50:49'!
PASSED!

!testRun: #NetTransfersReportTest #test04NetTransferReportOfAccountWithADepositReturnsZero stamp: 'EMI 11/13/2020 20:50:49'!
PASSED!

!testRun: #NetTransfersReportTest #test05NetTransferReportOfEmptyPortfolioReturnsZero stamp: 'EMI 11/13/2020 20:50:49'!
PASSED!

!testRun: #NetTransfersReportTest #test06NetTransferReportOfPortfolioWithAccountAndATransferReturnsCorrectly stamp: 'EMI 11/13/2020 20:50:49'!
PASSED!
!NetTransfersReportTest methodsFor: 'as yet unclassified' stamp: 'EMI 11/13/2020 20:51:29'!
test07NetTransferReportOfPortfoliosWithAccountAndATransferReturnsCorrectly
	| portfolio netTransfer accountOrigin accountDestination|
	portfolio _ Portfolio new.
	netTransfer  _ NetTransfersReport of: portfolio.
	
	accountOrigin _ ReceptiveAccount new.
	accountDestination _ ReceptiveAccount new.
	Transfer from: accountOrigin to: accountDestination amount: 10.
	portfolio add: accountOrigin .

	self assert: netTransfer report equals: -10.! !
!NetTransfersReportTest methodsFor: 'as yet unclassified' stamp: 'EMI 11/13/2020 20:51:39' prior: 50910862!
test07NetTransferReportOfPortfoliosWithAccountAndATransferReturnsCorrectly
	| portfolioRoot netTransfer accountOrigin accountDestination|
	portfolioRoot _ Portfolio new.
	netTransfer  _ NetTransfersReport of: portfolioRoot.
	
	accountOrigin _ ReceptiveAccount new.
	accountDestination _ ReceptiveAccount new.
	Transfer from: accountOrigin to: accountDestination amount: 10.
	portfolioRoot add: accountOrigin .

	self assert: netTransfer report equals: -10.! !
!NetTransfersReportTest methodsFor: 'as yet unclassified' stamp: 'EMI 11/13/2020 20:51:53' prior: 50910880!
test07NetTransferReportOfPortfoliosWithAccountAndATransferReturnsCorrectly
	| portfolioRoot portfolioChild netTransfer accountOrigin accountDestination|
	portfolioRoot _ Portfolio new.
	netTransfer  _ NetTransfersReport of: portfolioRoot.
	
	accountOrigin _ ReceptiveAccount new.
	accountDestination _ ReceptiveAccount new.
	Transfer from: accountOrigin to: accountDestination amount: 10.
	portfolioRoot add: accountOrigin .

	self assert: netTransfer report equals: -10.! !
!NetTransfersReportTest methodsFor: 'as yet unclassified' stamp: 'EMI 11/13/2020 20:52:22' prior: 50910898!
test07NetTransferReportOfPortfoliosWithAccountAndATransferReturnsCorrectly
	| portfolioRoot portfolioChild netTransfer accountOrigin accountDestination|
	portfolioRoot _ Portfolio new.
	portfolioChild _ Portfolio new.
	netTransfer  _ NetTransfersReport of: portfolioRoot.
	
	accountOrigin _ ReceptiveAccount new.
	accountDestination _ ReceptiveAccount new.
	Transfer from: accountOrigin to: accountDestination amount: 10.
	portfolioChild add: accountOrigin .
	portfolioRoot add: portfolioChild.

	self assert: netTransfer report equals: -10.! !
!NetTransfersReportTest methodsFor: 'as yet unclassified' stamp: 'EMI 11/13/2020 20:52:34' prior: 50910917!
test07NetTransferReportOfPortfoliosWithAccountAndATransferReturnsCorrectly
	| portfolioRoot portfolioChild netTransfer accountOrigin accountDestination|
	portfolioRoot _ Portfolio new.
	portfolioChild _ Portfolio new.
	netTransfer  _ NetTransfersReport of: portfolioRoot.
	
	accountOrigin _ ReceptiveAccount new.
	accountDestination _ ReceptiveAccount new.
	Transfer from: accountOrigin to: accountDestination amount: 10.
	portfolioChild add: accountDestination .
	portfolioRoot add: portfolioChild.

	self assert: netTransfer report equals: 10.! !

!testRun: #NetTransfersReportTest #test07NetTransferReportOfPortfoliosWithAccountAndATransferReturnsCorrectly stamp: 'EMI 11/13/2020 20:52:36'!
PASSED!

!testRun: #NetTransfersReportTest #test01NetTransferReportOfEmptyAccountReturnsZero stamp: 'EMI 11/13/2020 20:52:36'!
PASSED!

!testRun: #NetTransfersReportTest #test02NetTransferReportOfAccountWithADepositTransferReturnsCorrectly stamp: 'EMI 11/13/2020 20:52:36'!
PASSED!

!testRun: #NetTransfersReportTest #test03NetTransferReportOfAccountWithAExtractionTransferReturnsCorrectly stamp: 'EMI 11/13/2020 20:52:36'!
PASSED!

!testRun: #NetTransfersReportTest #test04NetTransferReportOfAccountWithADepositReturnsZero stamp: 'EMI 11/13/2020 20:52:36'!
PASSED!

!testRun: #NetTransfersReportTest #test05NetTransferReportOfEmptyPortfolioReturnsZero stamp: 'EMI 11/13/2020 20:52:36'!
PASSED!

!testRun: #NetTransfersReportTest #test06NetTransferReportOfPortfolioWithAccountAndATransferReturnsCorrectly stamp: 'EMI 11/13/2020 20:52:36'!
PASSED!

!testRun: #NetTransfersReportTest #test07NetTransferReportOfPortfoliosWithAccountAndATransferReturnsCorrectly stamp: 'EMI 11/13/2020 20:52:36'!
PASSED!

----SNAPSHOT----(13 November 2020 20:55:02) CuisUniversity-4383.image priorSource: 18518672!
!Report methodsFor: 'reporting - private' stamp: 'EMI 11/13/2020 20:56:22'!
reportDepositTransaction: aDepositTransaction
	^self subclassResponsibility.! !

!methodRemoval: Report #reportDespositTransaction: stamp: 'EMI 11/13/2020 20:56:22'!
reportDespositTransaction: aDepositTransaction
	^self subclassResponsibility.!

!classRenamed: #AccountSummary as: #AccountSummaryReport stamp: 'EMI 11/13/2020 20:57:08'!
Smalltalk renameClassNamed: #AccountSummary as: #AccountSummaryReport!
!AccountSummaryTest methodsFor: 'as yet unclassified' stamp: 'EMI 11/13/2020 20:57:08' prior: 50907614!
test01AccountSummaryOfEmptyAccountOnlyShowsBalance
	| accountSummary account |
	account _ ReceptiveAccount new.
	accountSummary _ AccountSummaryReport of: account.
	 
	self deny: accountSummary report isEmpty.
	self assert: accountSummary report first equals: 'Balance = 0.'.! !
!AccountSummaryTest methodsFor: 'as yet unclassified' stamp: 'EMI 11/13/2020 20:57:08' prior: 50909210!
test10AccountSummaryOfPortfolioWithADepositTransfer
	| accountSummary portfolio accountOrigin accountDestination expectedResult |
	portfolio _ Portfolio new.
	accountOrigin _ ReceptiveAccount new.
	accountDestination _ ReceptiveAccount new.
	accountSummary _ AccountSummaryReport of: portfolio.
	
	portfolio add: accountOrigin.
	
	Transfer from: accountOrigin to: accountDestination amount: 10.
	 
	expectedResult _ OrderedCollection with: 'Salida por transferencia de 10.' with: 'Balance = -10.'.
	
	self deny: accountSummary report isEmpty.
	self assert: accountSummary report equals: expectedResult.! !
!AccountSummaryTest methodsFor: 'as yet unclassified' stamp: 'EMI 11/13/2020 20:57:08' prior: 50907688!
test03AccountSummaryOfAccountWithAWithdrawShowWithdrawInfo
	| accountSummary account resultSummary |
	account _ ReceptiveAccount new.
	accountSummary _ AccountSummaryReport of: account.
	
	Withdraw register: 10 on: account.
	
	resultSummary _ OrderedCollection with: 'Extracci�n por 10.' with: 'Balance = -10.'.
	
	self assert: accountSummary report equals: resultSummary.
	! !
!AccountSummaryTest methodsFor: 'as yet unclassified' stamp: 'EMI 11/13/2020 20:57:08' prior: 50909054!
test09AccountSummaryOfPortfolioWithAWithdraw
	| accountSummary portfolio account expectedResult |
	portfolio _ Portfolio new.
	account _ ReceptiveAccount new.
	accountSummary _ AccountSummaryReport of: portfolio.
	Withdraw register: 10 on: account.
	portfolio add: account.
	 
	expectedResult _ OrderedCollection with: 'Extracci�n por 10.' with: 'Balance = -10.'.
	
	self deny: accountSummary report isEmpty.
	self assert: accountSummary report equals: expectedResult.! !
!AccountSummaryTest methodsFor: 'as yet unclassified' stamp: 'EMI 11/13/2020 20:57:08' prior: 50908676!
test07AccountSummaryOfEmptyPortfolioOnlyShowsBalance
	| accountSummary portfolio |
	portfolio _ Portfolio new.
	accountSummary _ AccountSummaryReport of: portfolio.
	 
	self deny: accountSummary report isEmpty.
	self assert: accountSummary report first equals: 'Balance = 0.'.! !
!AccountSummaryTest methodsFor: 'as yet unclassified' stamp: 'EMI 11/13/2020 20:57:08' prior: 50908171!
test06AccountSummaryOfAccountWithOneOfEachTransactionShowsCorrectInfo
	| accountSummary accountOrigin accountDestination resultSummary |
	accountOrigin _ ReceptiveAccount new.
	accountDestination _ ReceptiveAccount new.
	accountSummary _ AccountSummaryReport of: accountOrigin.
	
	Deposit register: 50  on: accountOrigin.
	Withdraw register: 10 on: accountOrigin.
	Transfer from: accountOrigin to: accountDestination amount: 20.
	Transfer from: accountDestination to: accountOrigin amount: 5.
	
	resultSummary _ OrderedCollection with: 'Dep�sito por 50.' with: 'Extracci�n por 10.' with: 'Salida por transferencia de 20.' with: 'Entrada por transferencia de 5.' with: 'Balance = 25.'.
	
	self assert: accountSummary report equals: resultSummary.
	! !
!AccountSummaryTest methodsFor: 'as yet unclassified' stamp: 'EMI 11/13/2020 20:57:09' prior: 50908002!
test05AccountSummaryOfAccountWithADepositTransferShowDepositTransferInfo
	| accountSummary accountOrigin accountDestination resultSummary |
	accountOrigin _ ReceptiveAccount new.
	accountDestination _ ReceptiveAccount new.
	accountSummary _ AccountSummaryReport of: accountDestination.
	
	Transfer from: accountOrigin to: accountDestination amount: 10.
	
	resultSummary _ OrderedCollection with: 'Entrada por transferencia de 10.' with: 'Balance = 10.'.
	
	self assert: accountSummary report equals: resultSummary.
	! !
!AccountSummaryTest methodsFor: 'as yet unclassified' stamp: 'EMI 11/13/2020 20:57:09' prior: 50907638!
test02AccountSummaryOfAccountWithADepositShowDepositInfo
	| accountSummary account resultSummary |
	account _ ReceptiveAccount new.
	accountSummary _ AccountSummaryReport of: account.
	
	Deposit register: 10 on: account.
	
	resultSummary _ OrderedCollection with: 'Dep�sito por 10.' with: 'Balance = 10.'.
	
	self assert: accountSummary report equals: resultSummary.
	! !
!AccountSummaryTest methodsFor: 'as yet unclassified' stamp: 'EMI 11/13/2020 20:57:09' prior: 50909323!
test11AccountSummaryOfPortfolioWithAExtractionTransfer
	| accountSummary portfolio accountOrigin accountDestination expectedResult |
	portfolio _ Portfolio new.
	accountOrigin _ ReceptiveAccount new.
	accountDestination _ ReceptiveAccount new.
	accountSummary _ AccountSummaryReport of: portfolio.
	
	portfolio add: accountDestination.
	
	Transfer from: accountOrigin to: accountDestination amount: 10.
	 
	expectedResult _ OrderedCollection with: 'Entrada por transferencia de 10.' with: 'Balance = 10.'.
	
	self deny: accountSummary report isEmpty.
	self assert: accountSummary report equals: expectedResult.! !
!AccountSummaryTest methodsFor: 'as yet unclassified' stamp: 'EMI 11/13/2020 20:57:09' prior: 50907922!
test04AccountSummaryOfAccountWithAExtractionTransferShowExtractionTransferInfo
	| accountSummary accountOrigin accountDestination resultSummary |
	accountOrigin _ ReceptiveAccount new.
	accountDestination _ ReceptiveAccount new.
	accountSummary _ AccountSummaryReport of: accountOrigin.
	
	Transfer from: accountOrigin to: accountDestination amount: 10.
	
	resultSummary _ OrderedCollection with: 'Salida por transferencia de 10.' with: 'Balance = -10.'.
	
	self assert: accountSummary report equals: resultSummary.
	! !
!AccountSummaryTest methodsFor: 'as yet unclassified' stamp: 'EMI 11/13/2020 20:57:09' prior: 50909091!
test08AccountSummaryOfPortfolioWithADeposit
	| accountSummary portfolio account expectedResult |
	portfolio _ Portfolio new.
	account _ ReceptiveAccount new.
	accountSummary _ AccountSummaryReport of: portfolio.
	Deposit register: 10 on: account.
	portfolio add: account.
	 
	expectedResult _ OrderedCollection with: 'Dep�sito por 10.' with: 'Balance = 10.'.
	
	self deny: accountSummary report isEmpty.
	self assert: accountSummary report equals: expectedResult.! !
!NetTransfersReportTest methodsFor: 'tests' stamp: 'EMI 11/13/2020 20:58:19'!
test08NetTransferReportOfCompletePortfolioOfHeightThreeReturnsCorrectly
	| portfolioRoot portfolioChild netTransfer accountOrigin accountDestination|
	portfolioRoot _ Portfolio new.
	portfolioChild _ Portfolio new.
	netTransfer  _ NetTransfersReport of: portfolioRoot.
	
	accountOrigin _ ReceptiveAccount new.
	accountDestination _ ReceptiveAccount new.
	Transfer from: accountOrigin to: accountDestination amount: 10.
	portfolioChild add: accountDestination .
	portfolioRoot add: portfolioChild.

	self assert: netTransfer report equals: 10.! !
!NetTransfersReportTest methodsFor: 'tests' stamp: 'EMI 11/13/2020 20:58:49' prior: 50911217!
test08NetTransferReportOfCompletePortfolioOfHeightThreeReturnsCorrectly
	| portfolioRoot portfolioChildLeft netTransfer accountOrigin accountDestination|
	portfolioRoot _ Portfolio new.
	portfolioChildLeft _ Portfolio new.
	netTransfer  _ NetTransfersReport of: portfolioRoot.
	
	accountOrigin _ ReceptiveAccount new.
	accountDestination _ ReceptiveAccount new.
	Transfer from: accountOrigin to: accountDestination amount: 10.
	portfolioChildLeft add: accountDestination .
	portfolioRoot add: portfolioChildLeft.

	self assert: netTransfer report equals: 10.! !
!NetTransfersReportTest methodsFor: 'tests' stamp: 'EMI 11/13/2020 20:58:57' prior: 50911237!
test08NetTransferReportOfCompletePortfolioOfHeightThreeReturnsCorrectly
	| portfolioRoot portfolioChildLeft portfolioChildRight netTransfer accountOrigin accountDestination|
	portfolioRoot _ Portfolio new.
	portfolioChildLeft _ Portfolio new.
	netTransfer  _ NetTransfersReport of: portfolioRoot.
	
	accountOrigin _ ReceptiveAccount new.
	accountDestination _ ReceptiveAccount new.
	Transfer from: accountOrigin to: accountDestination amount: 10.
	portfolioChildLeft add: accountDestination .
	portfolioRoot add: portfolioChildLeft.

	self assert: netTransfer report equals: 10.! !
!NetTransfersReportTest methodsFor: 'tests' stamp: 'EMI 11/13/2020 21:01:24' prior: 50911258!
test08NetTransferReportOfCompletePortfolioOfHeightThreeReturnsCorrectly
	| portfolioRoot portfolioChildLeft portfolioChildRight portfolioGrandChildLeft portfolioGrandChildRight netTransfer accountOrigin accountDestination |
	portfolioRoot _ Portfolio new.
	portfolioChildLeft _ Portfolio new.
	netTransfer  _ NetTransfersReport of: portfolioRoot.
	
	accountOrigin _ ReceptiveAccount new.
	accountDestination _ ReceptiveAccount new.
	Transfer from: accountOrigin to: accountDestination amount: 10.
	portfolioChildLeft add: accountDestination .
	portfolioRoot add: portfolioChildLeft.

	self assert: netTransfer report equals: 10.! !
!NetTransfersReportTest methodsFor: 'tests' stamp: 'EMI 11/13/2020 21:03:02' prior: 50911280!
test08NetTransferReportOfCompletePortfolioOfHeightThreeReturnsCorrectly
	| portfolioRoot portfolioChildLeft portfolioChildRight portfolioGrandChildLeft portfolioGrandChildRight netTransfer accountOrigin accountDestination |
	portfolioRoot _ Portfolio new.
	portfolioChildLeft _ Portfolio new.
	portfolioGrandChildLeft _ Portfolio new.
	portfolioChildRight _ Portfolio new.
	portfolioGrandChildRight _ Portfolio new.
	netTransfer  _ NetTransfersReport of: portfolioRoot.
	
	accountOrigin _ ReceptiveAccount new.
	accountDestination _ ReceptiveAccount new.
	Transfer from: accountOrigin to: accountDestination amount: 10.
	portfolioGrandChildLeft add: accountDestination .
	portfolioGrandChildRight add: accountOrigin.
	portfolioChildLeft add: portfolioGrandChildLeft.
	portfolioChildRight add: portfolioGrandChildRight.
	portfolioRoot add: portfolioChildLeft.
	portfolioRoot add: portfolioChildRight.

	self assert: netTransfer report equals: 10.! !
!NetTransfersReportTest methodsFor: 'tests' stamp: 'EMI 11/13/2020 21:03:29' prior: 50911303!
test08NetTransferReportOfCompletePortfolioOfHeightThreeReturnsCorrectly
	| portfolioRoot portfolioChildLeft portfolioChildRight portfolioGrandChildLeft portfolioGrandChildRight netTransfer accountOrigin accountDestination |
	portfolioRoot _ Portfolio new.
	portfolioChildLeft _ Portfolio new.
	portfolioGrandChildLeft _ Portfolio new.
	portfolioChildRight _ Portfolio new.
	portfolioGrandChildRight _ Portfolio new.
	netTransfer  _ NetTransfersReport of: portfolioRoot.
	
	accountOrigin _ ReceptiveAccount new.
	accountDestination _ ReceptiveAccount new.
	Transfer from: accountOrigin to: accountDestination amount: 10.
	portfolioGrandChildLeft add: accountDestination .
	portfolioGrandChildRight add: accountOrigin.
	portfolioChildLeft add: portfolioGrandChildLeft.
	portfolioChildRight add: portfolioGrandChildRight.
	portfolioRoot add: portfolioChildLeft.
	portfolioRoot add: portfolioChildRight.

	self assert: netTransfer report equals: 0.! !

!testRun: #NetTransfersReportTest #test08NetTransferReportOfCompletePortfolioOfHeightThreeReturnsCorrectly stamp: 'EMI 11/13/2020 21:03:31'!
PASSED!

!testRun: #NetTransfersReportTest #test01NetTransferReportOfEmptyAccountReturnsZero stamp: 'EMI 11/13/2020 21:03:31'!
PASSED!

!testRun: #NetTransfersReportTest #test02NetTransferReportOfAccountWithADepositTransferReturnsCorrectly stamp: 'EMI 11/13/2020 21:03:31'!
PASSED!

!testRun: #NetTransfersReportTest #test03NetTransferReportOfAccountWithAExtractionTransferReturnsCorrectly stamp: 'EMI 11/13/2020 21:03:31'!
PASSED!

!testRun: #NetTransfersReportTest #test04NetTransferReportOfAccountWithADepositReturnsZero stamp: 'EMI 11/13/2020 21:03:31'!
PASSED!

!testRun: #NetTransfersReportTest #test05NetTransferReportOfEmptyPortfolioReturnsZero stamp: 'EMI 11/13/2020 21:03:31'!
PASSED!

!testRun: #NetTransfersReportTest #test06NetTransferReportOfPortfolioWithAccountAndATransferReturnsCorrectly stamp: 'EMI 11/13/2020 21:03:31'!
PASSED!

!testRun: #NetTransfersReportTest #test07NetTransferReportOfPortfoliosWithAccountAndATransferReturnsCorrectly stamp: 'EMI 11/13/2020 21:03:31'!
PASSED!

!testRun: #NetTransfersReportTest #test08NetTransferReportOfCompletePortfolioOfHeightThreeReturnsCorrectly stamp: 'EMI 11/13/2020 21:03:31'!
PASSED!
!NetTransfersReportTest methodsFor: 'tests' stamp: 'EMI 11/13/2020 21:04:09'!
test08NetTransferReportOfPortfolioTreeOfHeightThreeReturnsCorrectly
	| portfolioRoot portfolioChildLeft portfolioChildRight portfolioGrandChildLeft portfolioGrandChildRight netTransfer accountOrigin accountDestination |
	portfolioRoot _ Portfolio new.
	portfolioChildLeft _ Portfolio new.
	portfolioGrandChildLeft _ Portfolio new.
	portfolioChildRight _ Portfolio new.
	portfolioGrandChildRight _ Portfolio new.
	netTransfer  _ NetTransfersReport of: portfolioRoot.
	
	accountOrigin _ ReceptiveAccount new.
	accountDestination _ ReceptiveAccount new.
	Transfer from: accountOrigin to: accountDestination amount: 10.
	portfolioGrandChildLeft add: accountDestination .
	portfolioGrandChildRight add: accountOrigin.
	portfolioChildLeft add: portfolioGrandChildLeft.
	portfolioChildRight add: portfolioGrandChildRight.
	portfolioRoot add: portfolioChildLeft.
	portfolioRoot add: portfolioChildRight.

	self assert: netTransfer report equals: 0.! !

!methodRemoval: NetTransfersReportTest #test08NetTransferReportOfCompletePortfolioOfHeightThreeReturnsCorrectly stamp: 'EMI 11/13/2020 21:04:09'!
test08NetTransferReportOfCompletePortfolioOfHeightThreeReturnsCorrectly
	| portfolioRoot portfolioChildLeft portfolioChildRight portfolioGrandChildLeft portfolioGrandChildRight netTransfer accountOrigin accountDestination |
	portfolioRoot _ Portfolio new.
	portfolioChildLeft _ Portfolio new.
	portfolioGrandChildLeft _ Portfolio new.
	portfolioChildRight _ Portfolio new.
	portfolioGrandChildRight _ Portfolio new.
	netTransfer  _ NetTransfersReport of: portfolioRoot.
	
	accountOrigin _ ReceptiveAccount new.
	accountDestination _ ReceptiveAccount new.
	Transfer from: accountOrigin to: accountDestination amount: 10.
	portfolioGrandChildLeft add: accountDestination .
	portfolioGrandChildRight add: accountOrigin.
	portfolioChildLeft add: portfolioGrandChildLeft.
	portfolioChildRight add: portfolioGrandChildRight.
	portfolioRoot add: portfolioChildLeft.
	portfolioRoot add: portfolioChildRight.

	self assert: netTransfer report equals: 0.!

----SNAPSHOT----(13 November 2020 21:07:27) CuisUniversity-4383.image priorSource: 18538973!

----SNAPSHOT----(13 November 2020 21:08:44) CuisUniversity-4383.image priorSource: 18554388!

----SNAPSHOT----(13 November 2020 21:10:06) CuisUniversity-4383.image priorSource: 18554482!

----QUIT----(13 November 2020 21:14:07) CuisUniversity-4383.image priorSource: 18554576!

----STARTUP---- (15 November 2020 18:09:14) as /home/doraserver/CuisUniversity/CuisUniversity-4383.image!

!ReceptiveAccountTest methodsFor: 'nil' stamp: 'EMI 11/15/2020 18:15:59'!
test12CanNameAccount! !
!ReceptiveAccountTest methodsFor: 'tests - account' stamp: 'EMI 11/15/2020 18:16:36' prior: 50911490!
test12CanNameAccount
	| account |! !
!ReceptiveAccountTest methodsFor: 'tests - account' stamp: 'EMI 11/15/2020 18:17:43' prior: 50911494!
test12CanNameAccount
	| account |
	account _ ReceptiveAccount new.
	
	self assert: account name equals: 'Unnamed account.'.! !

!testRun: #ReceptiveAccountTest #test12CanNameAccount stamp: 'EMI 11/15/2020 18:17:48'!
FAILURE!
!ReceptiveAccountTest methodsFor: 'tests - account' stamp: 'EMI 11/15/2020 18:18:11' prior: 50911499!
test12CanNameAccount
	| account |
	account _ ReceptiveAccount new.
	
	self assert: account named equals: 'Unnamed account.'.! !

!testRun: #ReceptiveAccountTest #test12CanNameAccount stamp: 'EMI 11/15/2020 18:18:14'!
ERROR!
!ReceptiveAccount methodsFor: 'names' stamp: 'EMI 11/15/2020 18:18:30'!
named
	self shouldBeImplemented.! !
!ReceptiveAccount methodsFor: 'names' stamp: 'EMI 11/15/2020 18:18:44' prior: 50911520!
named
	^'Unnamed account'.! !

!testRun: #ReceptiveAccountTest #test12CanNameAccount stamp: 'EMI 11/15/2020 18:18:45'!
FAILURE!
!ReceptiveAccountTest methodsFor: 'tests - account' stamp: 'EMI 11/15/2020 18:18:55' prior: 50911510!
test12CanNameAccount
	| account |
	account _ ReceptiveAccount new.
	
	self assert: account named equals: 'Unnamed account'.! !

!testRun: #ReceptiveAccountTest #test12CanNameAccount stamp: 'EMI 11/15/2020 18:18:56'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'EMI 11/15/2020 18:18:56'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'EMI 11/15/2020 18:18:56'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'EMI 11/15/2020 18:18:56'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'EMI 11/15/2020 18:18:56'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'EMI 11/15/2020 18:18:56'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'EMI 11/15/2020 18:18:56'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'EMI 11/15/2020 18:18:56'!
PASSED!

!testRun: #ReceptiveAccountTest #test08AccountCanTransferToAnotherAccountWithPositiveAmount stamp: 'EMI 11/15/2020 18:18:56'!
PASSED!

!testRun: #ReceptiveAccountTest #test09AccountsWithTransferKnowsOriginAndDestination stamp: 'EMI 11/15/2020 18:18:56'!
PASSED!

!testRun: #ReceptiveAccountTest #test10AccountsCannotTransferInvalidAmounts stamp: 'EMI 11/15/2020 18:18:56'!
PASSED!

!testRun: #ReceptiveAccountTest #test11AccountsCannotTransferToThemselves stamp: 'EMI 11/15/2020 18:18:56'!
PASSED!

!testRun: #ReceptiveAccountTest #test12CanNameAccount stamp: 'EMI 11/15/2020 18:18:56'!
PASSED!
!ReceptiveAccountTest methodsFor: 'tests - account' stamp: 'EMI 11/15/2020 18:19:20'!
test12AccountHasDefaultName
	| account |
	account _ ReceptiveAccount new.
	
	self assert: account named equals: 'Unnamed account'.! !

!methodRemoval: ReceptiveAccountTest #test12CanNameAccount stamp: 'EMI 11/15/2020 18:19:20'!
test12CanNameAccount
	| account |
	account _ ReceptiveAccount new.
	
	self assert: account named equals: 'Unnamed account'.!
!ReceptiveAccountTest methodsFor: 'tests - account' stamp: 'EMI 11/15/2020 18:19:36'!
test13CanNameAccount
	| account |
	account _ ReceptiveAccount new.
	
	self assert: account named equals: 'Unnamed account'.! !
!ReceptiveAccountTest methodsFor: 'tests - account' stamp: 'EMI 11/15/2020 18:19:57'!
test13CanCreateAccountWithName
	| account |
	account _ ReceptiveAccount new.
	
	self assert: account named equals: 'Unnamed account'.! !

!methodRemoval: ReceptiveAccountTest #test13CanNameAccount stamp: 'EMI 11/15/2020 18:19:57'!
test13CanNameAccount
	| account |
	account _ ReceptiveAccount new.
	
	self assert: account named equals: 'Unnamed account'.!
!ReceptiveAccountTest methodsFor: 'tests - account' stamp: 'EMI 11/15/2020 18:20:17' prior: 50911609!
test13CanCreateAccountWithName
	| account |
	account _ ReceptiveAccount named: 'Test account'.
	
	self assert: account named equals: 'Test account'.! !

!testRun: #ReceptiveAccountTest #test13CanCreateAccountWithName stamp: 'EMI 11/15/2020 18:20:19'!
ERROR!
!ReceptiveAccountTest methodsFor: 'tests - account' stamp: 'EMI 11/15/2020 18:20:59' prior: 50911624!
test13CanCreateAccountWithName
	| account |
	account _ ReceptiveAccount withName: 'Test account'.
	
	self assert: account named equals: 'Test account'.! !

!testRun: #ReceptiveAccountTest #test13CanCreateAccountWithName stamp: 'EMI 11/15/2020 18:21:02'!
ERROR!
!ReceptiveAccount class methodsFor: 'instance creation' stamp: 'EMI 11/15/2020 18:21:16'!
withName: aString 
	"DO NOT FORGET TO RENAME COLLABORATORS AND REMOVE THIS COMMENT!!!!"
	self shouldBeImplemented.
	^self new initializeWithName: aString ! !
!ReceptiveAccount class methodsFor: 'instance creation' stamp: 'EMI 11/15/2020 18:21:23' prior: 50911647!
withName: aString 
	^self new initializeWithName: aString ! !

!testRun: #ReceptiveAccountTest #test13CanCreateAccountWithName stamp: 'EMI 11/15/2020 18:21:32'!
ERROR!

!classDefinition: #ReceptiveAccount category: 'Portfolio2-Ejercicio' stamp: 'EMI 11/15/2020 18:21:46'!
Account subclass: #ReceptiveAccount
	instanceVariableNames: 'transactions string'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio2-Ejercicio'!
!ReceptiveAccount methodsFor: 'initialization' stamp: 'EMI 11/15/2020 18:21:46'!
initializeWithName: aString 
	self shouldBeImplemented.
	string := aString.! !
!ReceptiveAccount methodsFor: 'initialization' stamp: 'EMI 11/15/2020 18:21:51' prior: 50911673!
initializeWithName: aString 
	string := aString.! !

!classDefinition: #ReceptiveAccount category: 'Portfolio2-Ejercicio' stamp: 'EMI 11/15/2020 18:21:59'!
Account subclass: #ReceptiveAccount
	instanceVariableNames: 'transactions accountName'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio2-Ejercicio'!
!ReceptiveAccount methodsFor: 'as yet unclassified' stamp: 'EMI 11/15/2020 18:21:59' prior: 50911679!
initializeWithName: aString 
	accountName := aString.! !

!testRun: #ReceptiveAccountTest #test13CanCreateAccountWithName stamp: 'EMI 11/15/2020 18:22:09'!
FAILURE!
!ReceptiveAccount methodsFor: 'names' stamp: 'EMI 11/15/2020 18:22:43' prior: 50911524!
named
	^accountName.! !
!ReceptiveAccount methodsFor: 'initialization' stamp: 'EMI 11/15/2020 18:23:06' prior: 50911693!
initializeWithName: aString 
	self initialize.
	accountName := aString.! !
!ReceptiveAccount methodsFor: 'initialization' stamp: 'EMI 11/15/2020 18:23:11' prior: 50904930 overrides: 16896425!
initialize
	super initialize.
	transactions := OrderedCollection new.! !
!ReceptiveAccount methodsFor: 'initialization' stamp: 'EMI 11/15/2020 18:23:28' prior: 50911711 overrides: 16896425!
initialize
	super initialize.
	transactions := OrderedCollection new.
	accountName _ 'Unnamed account'.! !
!ReceptiveAccount methodsFor: 'initialization' stamp: 'EMI 11/15/2020 18:23:38' prior: 50911705!
initializeWithName: aString 
	self initialize.
	accountName _ aString.! !

!testRun: #ReceptiveAccountTest #test13CanCreateAccountWithName stamp: 'EMI 11/15/2020 18:23:56'!
PASSED!

!testRun: #ReceptiveAccountTest #test12AccountHasDefaultName stamp: 'EMI 11/15/2020 18:23:59'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'EMI 11/15/2020 18:24:01'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'EMI 11/15/2020 18:24:01'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'EMI 11/15/2020 18:24:01'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'EMI 11/15/2020 18:24:01'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'EMI 11/15/2020 18:24:01'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'EMI 11/15/2020 18:24:01'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'EMI 11/15/2020 18:24:01'!
PASSED!

!testRun: #ReceptiveAccountTest #test08AccountCanTransferToAnotherAccountWithPositiveAmount stamp: 'EMI 11/15/2020 18:24:01'!
PASSED!

!testRun: #ReceptiveAccountTest #test09AccountsWithTransferKnowsOriginAndDestination stamp: 'EMI 11/15/2020 18:24:01'!
PASSED!

!testRun: #ReceptiveAccountTest #test10AccountsCannotTransferInvalidAmounts stamp: 'EMI 11/15/2020 18:24:01'!
PASSED!

!testRun: #ReceptiveAccountTest #test11AccountsCannotTransferToThemselves stamp: 'EMI 11/15/2020 18:24:01'!
PASSED!

!testRun: #ReceptiveAccountTest #test12AccountHasDefaultName stamp: 'EMI 11/15/2020 18:24:01'!
PASSED!

!testRun: #ReceptiveAccountTest #test13CanCreateAccountWithName stamp: 'EMI 11/15/2020 18:24:01'!
PASSED!
!PortfolioTest methodsFor: 'tests' stamp: 'EMI 11/15/2020 18:24:51'!
test16PortfolioHasDefaultName
	| portfolio |
	
! !
!PortfolioTest methodsFor: 'tests' stamp: 'EMI 11/15/2020 18:25:31' prior: 50911784!
test16PortfolioHasDefaultName
	| portfolio |
	
	portfolio _ Portfolio new.
	
	self assert: portfolio named equals: 'Unnamed portfolio'.! !

!testRun: #PortfolioTest #test16PortfolioHasDefaultName stamp: 'EMI 11/15/2020 18:25:37'!
ERROR!

!testRun: #PortfolioTest #test16PortfolioHasDefaultName stamp: 'EMI 11/15/2020 18:25:37'!
ERROR!
!Portfolio methodsFor: 'names' stamp: 'EMI 11/15/2020 18:25:47'!
named
	self shouldBeImplemented.! !
!Portfolio methodsFor: 'names' stamp: 'EMI 11/15/2020 18:25:59' prior: 50911802!
named
	^'Unnamed portfolio'.! !

!testRun: #PortfolioTest #test16PortfolioHasDefaultName stamp: 'EMI 11/15/2020 18:26:01'!
PASSED!
!PortfolioTest methodsFor: 'tests' stamp: 'EMI 11/15/2020 18:26:43'!
test17CanCreatePortfolioWithName
	| portfolio |
	
	portfolio _ Portfolio withName: 'Test Portfolio'.
	
	self assert: portfolio named equals: 'Test Portfolio'.! !

!testRun: #PortfolioTest #test17CanCreatePortfolioWithName stamp: 'EMI 11/15/2020 18:27:10'!
ERROR!
!Portfolio class methodsFor: 'instance creation' stamp: 'EMI 11/15/2020 18:27:17'!
withName: aString 
	"DO NOT FORGET TO RENAME COLLABORATORS AND REMOVE THIS COMMENT!!!!"
	self shouldBeImplemented.
	^self new initializeWithName: aString ! !
!Portfolio class methodsFor: 'instance creation' stamp: 'EMI 11/15/2020 18:27:21' prior: 50911824!
withName: aString 
	^self new initializeWithName: aString ! !

!testRun: #PortfolioTest #test17CanCreatePortfolioWithName stamp: 'EMI 11/15/2020 18:27:23'!
ERROR!

!classDefinition: #Portfolio category: 'Portfolio2-Ejercicio' stamp: 'EMI 11/15/2020 18:27:34'!
Account subclass: #Portfolio
	instanceVariableNames: 'accounts parents string'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio2-Ejercicio'!
!Portfolio methodsFor: 'initialization' stamp: 'EMI 11/15/2020 18:27:34'!
initializeWithName: aString 
	self shouldBeImplemented.
	string := aString.! !
!Portfolio methodsFor: 'initialization' stamp: 'EMI 11/15/2020 18:27:47' prior: 50911849!
initializeWithName: aString 
	self initialize.
	string := aString.! !

!classDefinition: #Portfolio category: 'Portfolio2-Ejercicio' stamp: 'EMI 11/15/2020 18:27:55'!
Account subclass: #Portfolio
	instanceVariableNames: 'accounts parents portfolioName'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio2-Ejercicio'!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'EMI 11/15/2020 18:27:55' prior: 50911855!
initializeWithName: aString 
	self initialize.
	portfolioName := aString.! !

!testRun: #PortfolioTest #test17CanCreatePortfolioWithName stamp: 'EMI 11/15/2020 18:28:24'!
FAILURE!
!Portfolio methodsFor: 'names' stamp: 'EMI 11/15/2020 18:28:42' prior: 50911806!
named
	^portfolioName.! !

!testRun: #PortfolioTest #test01BalanceOfPortfolioWithoutAccountsIsZero stamp: 'EMI 11/15/2020 18:28:49'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithOneAccountIsAccountBalance stamp: 'EMI 11/15/2020 18:28:49'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioIsCalculatedRecursivelyOnPortfolios stamp: 'EMI 11/15/2020 18:28:49'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithoutAccountsHasNoRegisteredTransaction stamp: 'EMI 11/15/2020 18:28:49'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredItsAccountsTransactions stamp: 'EMI 11/15/2020 18:28:49'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioLooksForRegisteredTransactionsRecursively stamp: 'EMI 11/15/2020 18:28:49'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioHasNoTransactionWhenHasNoAccounts stamp: 'EMI 11/15/2020 18:28:49'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTransactionsIncludesAllItsAccountsTransactions stamp: 'EMI 11/15/2020 18:28:49'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioTransactionsAreCalculatedRecursively stamp: 'EMI 11/15/2020 18:28:49'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCanNotIncludeTheSameAccountMoreThanOnce stamp: 'EMI 11/15/2020 18:28:49'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCanNotIncludeAccountOfItsPortfolios stamp: 'EMI 11/15/2020 18:28:49'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioCanNotIncludeItself stamp: 'EMI 11/15/2020 18:28:49'!
PASSED!

!testRun: #PortfolioTest #test13ComposedPortfolioCanNotHaveParentPortfolioAccount stamp: 'EMI 11/15/2020 18:28:49'!
PASSED!

!testRun: #PortfolioTest #test14ComposedPortfolioCanNotHaveAccountOfAnyRootParentRecursively stamp: 'EMI 11/15/2020 18:28:49'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotIncludeAnyOfTheComposedAccountOfPortfolioToAdd stamp: 'EMI 11/15/2020 18:28:49'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioHasDefaultName stamp: 'EMI 11/15/2020 18:28:49'!
FAILURE!

!testRun: #PortfolioTest #test17CanCreatePortfolioWithName stamp: 'EMI 11/15/2020 18:28:49'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioHasDefaultName stamp: 'EMI 11/15/2020 18:28:49'!
FAILURE!
!Portfolio methodsFor: 'initialization' stamp: 'EMI 11/15/2020 18:29:24' prior: 50904815 overrides: 16896425!
initialize
	portfolioName _ 'Unnamed portfolio'.
	accounts := OrderedCollection new.
	parents := OrderedCollection new.! !

!testRun: #PortfolioTest #test01BalanceOfPortfolioWithoutAccountsIsZero stamp: 'EMI 11/15/2020 18:29:33'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithOneAccountIsAccountBalance stamp: 'EMI 11/15/2020 18:29:33'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioIsCalculatedRecursivelyOnPortfolios stamp: 'EMI 11/15/2020 18:29:33'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithoutAccountsHasNoRegisteredTransaction stamp: 'EMI 11/15/2020 18:29:33'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredItsAccountsTransactions stamp: 'EMI 11/15/2020 18:29:33'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioLooksForRegisteredTransactionsRecursively stamp: 'EMI 11/15/2020 18:29:33'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioHasNoTransactionWhenHasNoAccounts stamp: 'EMI 11/15/2020 18:29:33'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTransactionsIncludesAllItsAccountsTransactions stamp: 'EMI 11/15/2020 18:29:33'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioTransactionsAreCalculatedRecursively stamp: 'EMI 11/15/2020 18:29:33'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCanNotIncludeTheSameAccountMoreThanOnce stamp: 'EMI 11/15/2020 18:29:33'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCanNotIncludeAccountOfItsPortfolios stamp: 'EMI 11/15/2020 18:29:33'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioCanNotIncludeItself stamp: 'EMI 11/15/2020 18:29:33'!
PASSED!

!testRun: #PortfolioTest #test13ComposedPortfolioCanNotHaveParentPortfolioAccount stamp: 'EMI 11/15/2020 18:29:33'!
PASSED!

!testRun: #PortfolioTest #test14ComposedPortfolioCanNotHaveAccountOfAnyRootParentRecursively stamp: 'EMI 11/15/2020 18:29:33'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotIncludeAnyOfTheComposedAccountOfPortfolioToAdd stamp: 'EMI 11/15/2020 18:29:33'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioHasDefaultName stamp: 'EMI 11/15/2020 18:29:33'!
PASSED!

!testRun: #PortfolioTest #test17CanCreatePortfolioWithName stamp: 'EMI 11/15/2020 18:29:33'!
PASSED!
!Account methodsFor: 'names' stamp: 'EMI 11/15/2020 18:30:11'!
named
	^self subclassResponsibility.! !

Report subclass: #PortfolioStructureReport
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio2-Ejercicio'!

!classDefinition: #PortfolioStructureReport category: 'Portfolio2-Ejercicio' stamp: 'EMI 11/15/2020 18:36:18'!
Report subclass: #PortfolioStructureReport
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio2-Ejercicio'!
!PortfolioStructureReport methodsFor: 'nil' stamp: 'EMI 11/15/2020 18:36:32' overrides: 50909567!
report! !
!PortfolioStructureReport methodsFor: 'nil' stamp: 'EMI 11/15/2020 18:37:17'!
initializeOf: anAccount
	account _ anAccount.! !
!PortfolioStructureReport methodsFor: 'as yet unclassified' stamp: 'EMI 11/15/2020 18:37:42' prior: 50912039 overrides: 50909567!
report
	^account reportTo: self.! !

TestCase subclass: #PortfolioStructureReportTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio2-Ejercicio'!

!classDefinition: #PortfolioStructureReportTest category: 'Portfolio2-Ejercicio' stamp: 'EMI 11/15/2020 18:38:05'!
TestCase subclass: #PortfolioStructureReportTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio2-Ejercicio'!
!PortfolioStructureReportTest methodsFor: 'nil' stamp: 'EMI 11/15/2020 18:38:38'!
test01ReportOfASimplePortfolioStructureHasCorrectIdentation! !
!PortfolioStructureReportTest methodsFor: 'as yet unclassified' stamp: 'EMI 11/15/2020 18:39:41' prior: 50912066!
test01ReportOfASimplePortfolioStructureHasCorrectIdentation
	| portfolio report |
! !
!PortfolioStructureReportTest methodsFor: 'as yet unclassified' stamp: 'EMI 11/15/2020 18:40:10'!
test01ReportOfAnEmptyPortfolioStructureHasCorrectName
	| portfolio report |
! !

!methodRemoval: PortfolioStructureReportTest #test01ReportOfASimplePortfolioStructureHasCorrectIdentation stamp: 'EMI 11/15/2020 18:40:10'!
test01ReportOfASimplePortfolioStructureHasCorrectIdentation
	| portfolio report |
!
!PortfolioStructureReportTest methodsFor: 'as yet unclassified' stamp: 'EMI 11/15/2020 18:42:28' prior: 50912078!
test01ReportOfAnEmptyPortfolioStructureHasCorrectName
	| portfolio report expectedResult |
	portfolio _ Portfolio new.
	report _ PortfolioStructureReport of: portfolio.
	
	
	expectedResult _ OrderedCollection with: 'Portfolio de Unnamed Portfolio'.
	self assert: report report equals: expectedResult.! !
!PortfolioStructureReportTest methodsFor: 'as yet unclassified' stamp: 'EMI 11/15/2020 18:42:31' prior: 50912092!
test01ReportOfAnEmptyPortfolioStructureHasCorrectName
	| portfolio report expectedResult |
	portfolio _ Portfolio new.
	report _ PortfolioStructureReport of: portfolio.
	
	expectedResult _ OrderedCollection with: 'Portfolio de Unnamed Portfolio'.
	self assert: report report equals: expectedResult.! !
!PortfolioStructureReport methodsFor: 'as yet unclassified' stamp: 'EMI 11/15/2020 18:43:00' prior: 50912048 overrides: 50909567!
report
	^self.! !

!testRun: #PortfolioStructureReportTest #test01ReportOfAnEmptyPortfolioStructureHasCorrectName stamp: 'EMI 11/15/2020 18:43:10'!
FAILURE!

!testRun: #PortfolioStructureReportTest #test01ReportOfAnEmptyPortfolioStructureHasCorrectName stamp: 'EMI 11/15/2020 18:43:10'!
FAILURE!
!PortfolioStructureReport methodsFor: 'as yet unclassified' stamp: 'EMI 11/15/2020 18:43:32' prior: 50912120 overrides: 50909567!
report
	^'Portfolio de Unnamed Portfolio'.! !

!testRun: #PortfolioStructureReportTest #test01ReportOfAnEmptyPortfolioStructureHasCorrectName stamp: 'EMI 11/15/2020 18:43:40'!
FAILURE!

!testRun: #PortfolioStructureReportTest #test01ReportOfAnEmptyPortfolioStructureHasCorrectName stamp: 'EMI 11/15/2020 18:43:40'!
FAILURE!
!PortfolioStructureReport methodsFor: 'as yet unclassified' stamp: 'EMI 11/15/2020 18:43:56' prior: 50912134 overrides: 50909567!
report
	^OrderedCollection with:'Portfolio de Unnamed Portfolio'.! !

!testRun: #PortfolioStructureReportTest #test01ReportOfAnEmptyPortfolioStructureHasCorrectName stamp: 'EMI 11/15/2020 18:44:02'!
PASSED!
!PortfolioStructureReportTest methodsFor: 'as yet unclassified' stamp: 'EMI 11/15/2020 18:44:43'!
test02ReportOfASimplePortfolioStructureHasCorrectNamesAndIdentation
	| portfolio account report expectedResult |
	portfolio _ Portfolio new.
	report _ PortfolioStructureReport of: portfolio.
	
	expectedResult _ OrderedCollection with: 'Portfolio de Unnamed Portfolio'.
	self assert: report report equals: expectedResult.! !
!PortfolioStructureReportTest methodsFor: 'as yet unclassified' stamp: 'EMI 11/15/2020 18:45:30' prior: 50912159!
test02ReportOfASimplePortfolioStructureHasCorrectNamesAndIdentation
	| portfolio account report expectedResult |
	portfolio _ Portfolio new.
	account _ ReceptiveAccount new.
	report _ PortfolioStructureReport of: portfolio.
	
	expectedResult _ OrderedCollection with: 'Portfolio de Unnamed Portfolio' with: ' Cuenta de Unnamed account'.
	self assert: report report equals: expectedResult.! !
!PortfolioStructureReportTest methodsFor: 'as yet unclassified' stamp: 'EMI 11/15/2020 18:45:39' prior: 50912173!
test02ReportOfASimplePortfolioStructureHasCorrectNamesAndIdentation
	| portfolio account report expectedResult |
	portfolio _ Portfolio new.
	account _ ReceptiveAccount new.
	portfolio add: account.
	report _ PortfolioStructureReport of: portfolio.
	
	expectedResult _ OrderedCollection with: 'Portfolio de Unnamed Portfolio' with: ' Cuenta de Unnamed account'.
	self assert: report report equals: expectedResult.! !
!PortfolioStructureReportTest methodsFor: 'as yet unclassified' stamp: 'EMI 11/15/2020 18:45:52' prior: 50912189!
test02ReportOfASimplePortfolioStructureHasCorrectNamesAndIdentation
	| portfolio account report expectedResult |
	portfolio _ Portfolio new.
	account _ ReceptiveAccount new.
	portfolio add: account.
	report _ PortfolioStructureReport of: portfolio.
	
	expectedResult _ OrderedCollection with: 'Portfolio de Unnamed Portfolio' with: '   Cuenta de Unnamed account'.
	self assert: report report equals: expectedResult.! !

!testRun: #PortfolioStructureReportTest #test01ReportOfAnEmptyPortfolioStructureHasCorrectName stamp: 'EMI 11/15/2020 18:46:03'!
PASSED!

!testRun: #PortfolioStructureReportTest #test02ReportOfASimplePortfolioStructureHasCorrectNamesAndIdentation stamp: 'EMI 11/15/2020 18:46:03'!
FAILURE!

!testRun: #PortfolioStructureReportTest #test02ReportOfASimplePortfolioStructureHasCorrectNamesAndIdentation stamp: 'EMI 11/15/2020 18:46:03'!
FAILURE!
!PortfolioStructureReport methodsFor: 'as yet unclassified' stamp: 'EMI 11/15/2020 18:49:18'!
reportAccount: anAccount
	! !
!PortfolioStructureReport methodsFor: 'as yet unclassified' stamp: 'EMI 11/15/2020 18:49:52' prior: 50912236!
reportAccount: anAccount
	^'Cuenta de ', anAccount named.! !
!PortfolioStructureReport methodsFor: 'as yet unclassified' stamp: 'EMI 11/15/2020 18:50:14' prior: 50912241!
reportAccount: anAccount
	^'Cuenta de ', anAccount named.! !
!PortfolioStructureReport methodsFor: 'as yet unclassified' stamp: 'EMI 11/15/2020 18:51:33'!
reportPortfolio: aPortfolio
	| res |
	res _ OrderedCollection new.
	res add: 'Portfolio de ', aPortfolio named.
	^ res.! !
!Portfolio methodsFor: 'reports' stamp: 'EMI 11/15/2020 18:52:02' prior: 50909403 overrides: 50908371!
reportTo: aReport
	| result |
	result _ OrderedCollection new.
	aReport reportPortfolio: self.
	accounts do:[:anAccount |result addAll: (anAccount reportTo: aReport).].
	^result.
	! !
!ReceptiveAccount methodsFor: 'reports' stamp: 'EMI 11/15/2020 18:52:17' prior: 50909412 overrides: 50908371!
reportTo: aReport
	| result |
	aReport reportAccount: self.
	result _ OrderedCollection new.
	transactions do:[:aTransaction | result add: (aTransaction reportTo: aReport)].
	^ result.! !
!ReceptiveAccount methodsFor: 'reports' stamp: 'EMI 11/15/2020 18:54:23' prior: 50912270 overrides: 50908371!
reportTo: aReport
	| result |
	result _ aReport reportAccount: self.
	transactions do:[:aTransaction | result add: (aTransaction reportTo: aReport)].
	^ result.! !
!Portfolio methodsFor: 'reports' stamp: 'EMI 11/15/2020 18:54:33' prior: 50912260 overrides: 50908371!
reportTo: aReport
	| result |
	result _ aReport reportPortfolio: self.
	accounts do:[:anAccount |result addAll: (anAccount reportTo: aReport).].
	^result.
	! !
!PortfolioStructureReport methodsFor: 'as yet unclassified' stamp: 'EMI 11/15/2020 18:55:06' prior: 50912252!
reportPortfolio: aPortfolio
	^ OrderedCollection with: ('Portfolio de ', aPortfolio named).! !
!PortfolioStructureReport methodsFor: 'as yet unclassified' stamp: 'EMI 11/15/2020 18:55:34' prior: 50912247!
reportAccount: anAccount
	^ OrderedCollection with: ('Cuenta de ', anAccount named).! !
!ReceptiveAccount methodsFor: 'reports' stamp: 'EMI 11/15/2020 18:58:42' prior: 50912280 overrides: 50908371!
reportTo: aReport
	| result |
	result _ aReport reportAccount: self.
	transactions do:[:aTransaction | result add: (aTransaction reportTo: aReport)].
	^ result.! !

----SNAPSHOT----(15 November 2020 19:00:53) CuisUniversity-4383.image priorSource: 18554670!

----QUIT----(15 November 2020 19:01:03) CuisUniversity-4383.image priorSource: 18581411!

----STARTUP---- (15 November 2020 22:10:32) as /home/doraserver/CuisUniversity/CuisUniversity-4383.image!

!PortfolioStructureReport methodsFor: 'as yet unclassified' stamp: 'EMI 11/15/2020 22:13:36' prior: 50912149 overrides: 50909567!
report
	^account reportTo: self.! !
!PortfolioStructureReport methodsFor: 'nil' stamp: 'EMI 11/15/2020 22:25:50' overrides: 50910997!
reportDepositTransaction: aDepositTransaction! !
!PortfolioStructureReport methodsFor: 'as yet unclassified' stamp: 'EMI 11/15/2020 22:26:10' prior: 50912331 overrides: 50909567!
report
	account reportTo: self.! !

Report subclass: #PortfolioStructureReport
	instanceVariableNames: 'reportCollection'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio2-Ejercicio'!

!classDefinition: #PortfolioStructureReport category: 'Portfolio2-Ejercicio' stamp: 'EMI 11/15/2020 22:26:20'!
Report subclass: #PortfolioStructureReport
	instanceVariableNames: 'reportCollection'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio2-Ejercicio'!
!PortfolioStructureReport methodsFor: 'as yet unclassified' stamp: 'EMI 11/15/2020 22:26:33' prior: 50912342 overrides: 50909567!
report
	reportCollection _ OrderedCollection new.
	account reportTo: self.! !
!PortfolioStructureReport methodsFor: 'as yet unclassified' stamp: 'EMI 11/15/2020 22:26:41' prior: 50912362 overrides: 50909567!
report
	reportCollection _ OrderedCollection new.
	account reportTo: self.
	^reportCollection.! !
!PortfolioStructureReport methodsFor: 'as yet unclassified' stamp: 'EMI 11/15/2020 22:29:01' prior: 50912305!
reportAccount: anAccount
	reportCollection add: ('Cuenta de ', anAccount named).
	^ OrderedCollection with: ('Cuenta de ', anAccount named).! !

!classDefinition: #PortfolioStructureReport category: 'Portfolio2-Ejercicio' stamp: 'EMI 11/15/2020 22:30:29'!
Report subclass: #PortfolioStructureReport
	instanceVariableNames: 'reportCollection currentIdent'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio2-Ejercicio'!
!PortfolioStructureReport methodsFor: 'as yet unclassified' stamp: 'EMI 11/15/2020 22:30:27' prior: 50912298!
reportPortfolio: aPortfolio
	reportCollection add: ('Portfolio de ', aPortfolio named).
	currentIdent _ currentIdent + 1.
	^ OrderedCollection with: ('Portfolio de ', aPortfolio named).! !
!PortfolioStructureReport methodsFor: 'as yet unclassified' stamp: 'EMI 11/15/2020 22:35:48' prior: 50912394!
reportPortfolio: aPortfolio
	reportCollection add: ('' padded: #left to: currentIdent with: ' ', 'Portfolio de ', aPortfolio named).
	currentIdent _ currentIdent + 1.
	^ OrderedCollection with: ('Portfolio de ', aPortfolio named).! !

'' padded: #left to: 3 with: ' '.!

'' padded: #left to: 3 with: $A.!

'B' padded: #left to: 3 with: $A.!

' B' padded: #left to: 3 with: $A.!

String new: (3*1) withAll: $A.!

String new: (3*1) withAll: $.!

String new: (3*1) withAll: $!

String new: (3*1) withAll: $\n. !

String tab.!

String tab, 'a'.!

String tab, 'aaaaa'.!

'aaaaa', String tab.!

String tab.!

String tab, String tab, 'aaa'!

String tab, String tab, String tab, String tab, 'aaa'.!

String new: (3*1) withAll: Character  space, 'aaa'.!

(String new: (3*1) withAll: Character space), 'aaa'.!
!PortfolioStructureReport methodsFor: 'as yet unclassified' stamp: 'EMI 11/15/2020 22:44:23' prior: 50912376!
reportAccount: anAccount
	reportCollection add: ('Cuenta de ', anAccount named).
	^ OrderedCollection with: ('Cuenta de ', anAccount named).! !
!PortfolioStructureReport methodsFor: 'as yet unclassified' stamp: 'EMI 11/15/2020 22:46:35'!
identString: aString
	^(String new: (3*currentIdent) withAll: Character space), aString.! !
!PortfolioStructureReport methodsFor: 'as yet unclassified' stamp: 'EMI 11/15/2020 22:46:50' prior: 50912433!
reportAccount: anAccount
	reportCollection add: (self identString: ('Cuenta de ', anAccount named)).
	^ OrderedCollection with: ('Cuenta de ', anAccount named).! !
!PortfolioStructureReport methodsFor: 'as yet unclassified' stamp: 'EMI 11/15/2020 22:47:12' prior: 50912404!
reportPortfolio: aPortfolio
	reportCollection add: (self identString: ('Portfolio de ', aPortfolio named)).
	currentIdent _ currentIdent + 1.
	^ OrderedCollection with: ('Portfolio de ', aPortfolio named).! !
!PortfolioStructureReport methodsFor: 'as yet unclassified' stamp: 'EMI 11/15/2020 22:47:28' prior: 50912369 overrides: 50909567!
report
	reportCollection _ OrderedCollection new.
	currentIdent _ 0.
	account reportTo: self.
	^reportCollection.! !
!PortfolioStructureReport methodsFor: 'as yet unclassified' stamp: 'EMI 11/15/2020 22:47:47' prior: 50912448!
reportAccount: anAccount
	reportCollection add: (self identString: ('Cuenta de ', anAccount named)).! !
!PortfolioStructureReport methodsFor: 'as yet unclassified' stamp: 'EMI 11/15/2020 22:47:52' prior: 50912457!
reportPortfolio: aPortfolio
	reportCollection add: (self identString: ('Portfolio de ', aPortfolio named)).
	currentIdent _ currentIdent + 1.! !
!PortfolioStructureReport methodsFor: 'nil' stamp: 'EMI 11/15/2020 22:49:28' overrides: 50909581!
reportDepositTransferTransaction: aDepositTransferTransactions! !
!PortfolioStructureReport methodsFor: 'nil' stamp: 'EMI 11/15/2020 22:49:42' overrides: 50909587!
reportExtractionTransferTransaction: aExtractionTransferTransaction! !
!PortfolioStructureReport methodsFor: 'nil' stamp: 'EMI 11/15/2020 22:49:54' overrides: 50909576!
reportWithdrawTransaction: aWithdrawTransaction! !

Report subclass: #AccountSummaryReport
	instanceVariableNames: 'summaryCollection'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio2-Ejercicio'!

!classDefinition: #AccountSummaryReport category: 'Portfolio2-Ejercicio' stamp: 'EMI 11/15/2020 22:53:47'!
Report subclass: #AccountSummaryReport
	instanceVariableNames: 'summaryCollection'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio2-Ejercicio'!
!AccountSummaryReport methodsFor: 'reporting' stamp: 'EMI 11/15/2020 22:54:53' prior: 50909395 overrides: 50909567!
report
	summaryCollection _ OrderedCollection new.
	account reportTo: self.
	summaryCollection add: 'Balance = ', account balance asString, '.'.
	^summaryCollection.! !
!AccountSummaryReport methodsFor: 'reporting - private' stamp: 'EMI 11/15/2020 22:55:13' prior: 50908240 overrides: 50910997!
reportDepositTransaction: aDepositTransaction
	summaryCollection add: ('Dep�sito por ', aDepositTransaction value asString, '.').! !
!AccountSummaryReport methodsFor: 'reporting - private' stamp: 'EMI 11/15/2020 22:55:24' prior: 50908606 overrides: 50909581!
reportDepositTransferTransaction: aDepositTransferTransaction
	summaryCollection  add: ('Entrada por transferencia de ', aDepositTransferTransaction value asString, '.')! !
!AccountSummaryReport methodsFor: 'reporting - private' stamp: 'EMI 11/15/2020 22:55:35' prior: 50908614 overrides: 50909587!
reportExtractionTransferTransaction: aExtractionTransferTransaction
	summaryCollection add: ('Salida por transferencia de ', aExtractionTransferTransaction value asString, '.')! !
!AccountSummaryReport methodsFor: 'reporting - private' stamp: 'EMI 11/15/2020 22:55:46' prior: 50908457 overrides: 50909576!
reportWithdrawTransaction: aWithdrawTransaction
	summaryCollection add: ('Extracci�n por ', aWithdrawTransaction value asString, '.')! !
!AccountSummaryReport methodsFor: 'reporting - private' stamp: 'EMI 11/15/2020 22:55:54' prior: 50912541 overrides: 50909581!
reportDepositTransferTransaction: aDepositTransferTransaction
	summaryCollection add: ('Entrada por transferencia de ', aDepositTransferTransaction value asString, '.')! !
!ReceptiveAccount methodsFor: 'reports' stamp: 'EMI 11/15/2020 22:56:18' prior: 50912312 overrides: 50908371!
reportTo: aReport
	aReport reportAccount: self.
	transactions do:[:aTransaction |aTransaction reportTo: aReport].! !
!Portfolio methodsFor: 'reports' stamp: 'EMI 11/15/2020 22:56:55' prior: 50912289 overrides: 50908371!
reportTo: aReport
	aReport reportPortfolio: self.
	accounts do:[:anAccount | anAccount reportTo: aReport].
	! !

----SNAPSHOT----(15 November 2020 22:57:15) CuisUniversity-4383.image priorSource: 18581505!

!testRun: #AccountSummaryTest #test01AccountSummaryOfEmptyAccountOnlyShowsBalance stamp: 'EMI 11/15/2020 22:57:21'!
ERROR!

!testRun: #AccountSummaryTest #test02AccountSummaryOfAccountWithADepositShowDepositInfo stamp: 'EMI 11/15/2020 22:57:21'!
ERROR!

!testRun: #AccountSummaryTest #test03AccountSummaryOfAccountWithAWithdrawShowWithdrawInfo stamp: 'EMI 11/15/2020 22:57:21'!
ERROR!

!testRun: #AccountSummaryTest #test04AccountSummaryOfAccountWithAExtractionTransferShowExtractionTransferInfo stamp: 'EMI 11/15/2020 22:57:21'!
ERROR!

!testRun: #AccountSummaryTest #test05AccountSummaryOfAccountWithADepositTransferShowDepositTransferInfo stamp: 'EMI 11/15/2020 22:57:21'!
ERROR!

!testRun: #AccountSummaryTest #test06AccountSummaryOfAccountWithOneOfEachTransactionShowsCorrectInfo stamp: 'EMI 11/15/2020 22:57:21'!
ERROR!

!testRun: #AccountSummaryTest #test07AccountSummaryOfEmptyPortfolioOnlyShowsBalance stamp: 'EMI 11/15/2020 22:57:21'!
ERROR!

!testRun: #AccountSummaryTest #test08AccountSummaryOfPortfolioWithADeposit stamp: 'EMI 11/15/2020 22:57:21'!
ERROR!

!testRun: #AccountSummaryTest #test09AccountSummaryOfPortfolioWithAWithdraw stamp: 'EMI 11/15/2020 22:57:21'!
ERROR!

!testRun: #AccountSummaryTest #test10AccountSummaryOfPortfolioWithADepositTransfer stamp: 'EMI 11/15/2020 22:57:21'!
ERROR!

!testRun: #AccountSummaryTest #test11AccountSummaryOfPortfolioWithAExtractionTransfer stamp: 'EMI 11/15/2020 22:57:21'!
ERROR!

!testRun: #AccountSummaryTest #test01AccountSummaryOfEmptyAccountOnlyShowsBalance stamp: 'EMI 11/15/2020 22:57:23'!
ERROR!

!testRun: #AccountSummaryTest #test01AccountSummaryOfEmptyAccountOnlyShowsBalance stamp: 'EMI 11/15/2020 22:57:47'!
ERROR!

!testRun: #AccountSummaryTest #test02AccountSummaryOfAccountWithADepositShowDepositInfo stamp: 'EMI 11/15/2020 22:57:47'!
ERROR!

!testRun: #AccountSummaryTest #test03AccountSummaryOfAccountWithAWithdrawShowWithdrawInfo stamp: 'EMI 11/15/2020 22:57:47'!
ERROR!

!testRun: #AccountSummaryTest #test04AccountSummaryOfAccountWithAExtractionTransferShowExtractionTransferInfo stamp: 'EMI 11/15/2020 22:57:47'!
ERROR!

!testRun: #AccountSummaryTest #test05AccountSummaryOfAccountWithADepositTransferShowDepositTransferInfo stamp: 'EMI 11/15/2020 22:57:47'!
ERROR!

!testRun: #AccountSummaryTest #test06AccountSummaryOfAccountWithOneOfEachTransactionShowsCorrectInfo stamp: 'EMI 11/15/2020 22:57:47'!
ERROR!

!testRun: #AccountSummaryTest #test07AccountSummaryOfEmptyPortfolioOnlyShowsBalance stamp: 'EMI 11/15/2020 22:57:47'!
ERROR!

!testRun: #AccountSummaryTest #test08AccountSummaryOfPortfolioWithADeposit stamp: 'EMI 11/15/2020 22:57:47'!
ERROR!

!testRun: #AccountSummaryTest #test09AccountSummaryOfPortfolioWithAWithdraw stamp: 'EMI 11/15/2020 22:57:47'!
ERROR!

!testRun: #AccountSummaryTest #test10AccountSummaryOfPortfolioWithADepositTransfer stamp: 'EMI 11/15/2020 22:57:47'!
ERROR!

!testRun: #AccountSummaryTest #test11AccountSummaryOfPortfolioWithAExtractionTransfer stamp: 'EMI 11/15/2020 22:57:47'!
ERROR!

!testRun: #AccountSummaryTest #test01AccountSummaryOfEmptyAccountOnlyShowsBalance stamp: 'EMI 11/15/2020 22:57:48'!
ERROR!
!AccountSummaryReport methodsFor: 'reporting' stamp: 'EMI 11/15/2020 22:58:06'!
reportAccount: aReceptiveAccount 
	self shouldBeImplemented.! !
!AccountSummaryReport methodsFor: 'reporting' stamp: 'EMI 11/15/2020 22:58:13' prior: 50912693!
reportAccount: aReceptiveAccount! !

!testRun: #AccountSummaryTest #test01AccountSummaryOfEmptyAccountOnlyShowsBalance stamp: 'EMI 11/15/2020 22:58:18'!
PASSED!

!testRun: #AccountSummaryTest #test02AccountSummaryOfAccountWithADepositShowDepositInfo stamp: 'EMI 11/15/2020 22:58:20'!
PASSED!

!testRun: #AccountSummaryTest #test03AccountSummaryOfAccountWithAWithdrawShowWithdrawInfo stamp: 'EMI 11/15/2020 22:58:22'!
PASSED!

!testRun: #AccountSummaryTest #test04AccountSummaryOfAccountWithAExtractionTransferShowExtractionTransferInfo stamp: 'EMI 11/15/2020 22:58:23'!
PASSED!

!testRun: #AccountSummaryTest #test05AccountSummaryOfAccountWithADepositTransferShowDepositTransferInfo stamp: 'EMI 11/15/2020 22:58:24'!
PASSED!

!testRun: #AccountSummaryTest #test06AccountSummaryOfAccountWithOneOfEachTransactionShowsCorrectInfo stamp: 'EMI 11/15/2020 22:58:24'!
PASSED!

!testRun: #AccountSummaryTest #test07AccountSummaryOfEmptyPortfolioOnlyShowsBalance stamp: 'EMI 11/15/2020 22:58:25'!
ERROR!
!AccountSummaryReport methodsFor: 'reporting' stamp: 'EMI 11/15/2020 22:58:36'!
reportPortfolio: aPortfolio 
	self shouldBeImplemented.! !
!AccountSummaryReport methodsFor: 'reporting' stamp: 'EMI 11/15/2020 22:58:40' prior: 50912732!
reportPortfolio: aPortfolio ! !

!testRun: #AccountSummaryTest #test07AccountSummaryOfEmptyPortfolioOnlyShowsBalance stamp: 'EMI 11/15/2020 22:58:41'!
PASSED!

!testRun: #AccountSummaryTest #test08AccountSummaryOfPortfolioWithADeposit stamp: 'EMI 11/15/2020 22:58:43'!
PASSED!

!testRun: #AccountSummaryTest #test09AccountSummaryOfPortfolioWithAWithdraw stamp: 'EMI 11/15/2020 22:58:43'!
PASSED!

!testRun: #AccountSummaryTest #test10AccountSummaryOfPortfolioWithADepositTransfer stamp: 'EMI 11/15/2020 22:58:44'!
PASSED!

!testRun: #AccountSummaryTest #test11AccountSummaryOfPortfolioWithAExtractionTransfer stamp: 'EMI 11/15/2020 22:58:44'!
PASSED!

!testRun: #AccountSummaryTest #test01AccountSummaryOfEmptyAccountOnlyShowsBalance stamp: 'EMI 11/15/2020 22:58:47'!
PASSED!

!testRun: #AccountSummaryTest #test02AccountSummaryOfAccountWithADepositShowDepositInfo stamp: 'EMI 11/15/2020 22:58:47'!
PASSED!

!testRun: #AccountSummaryTest #test03AccountSummaryOfAccountWithAWithdrawShowWithdrawInfo stamp: 'EMI 11/15/2020 22:58:47'!
PASSED!

!testRun: #AccountSummaryTest #test04AccountSummaryOfAccountWithAExtractionTransferShowExtractionTransferInfo stamp: 'EMI 11/15/2020 22:58:47'!
PASSED!

!testRun: #AccountSummaryTest #test05AccountSummaryOfAccountWithADepositTransferShowDepositTransferInfo stamp: 'EMI 11/15/2020 22:58:47'!
PASSED!

!testRun: #AccountSummaryTest #test06AccountSummaryOfAccountWithOneOfEachTransactionShowsCorrectInfo stamp: 'EMI 11/15/2020 22:58:47'!
PASSED!

!testRun: #AccountSummaryTest #test07AccountSummaryOfEmptyPortfolioOnlyShowsBalance stamp: 'EMI 11/15/2020 22:58:47'!
PASSED!

!testRun: #AccountSummaryTest #test08AccountSummaryOfPortfolioWithADeposit stamp: 'EMI 11/15/2020 22:58:47'!
PASSED!

!testRun: #AccountSummaryTest #test09AccountSummaryOfPortfolioWithAWithdraw stamp: 'EMI 11/15/2020 22:58:47'!
PASSED!

!testRun: #AccountSummaryTest #test10AccountSummaryOfPortfolioWithADepositTransfer stamp: 'EMI 11/15/2020 22:58:47'!
PASSED!

!testRun: #AccountSummaryTest #test11AccountSummaryOfPortfolioWithAExtractionTransfer stamp: 'EMI 11/15/2020 22:58:47'!
PASSED!

Report subclass: #NetTransfersReport
	instanceVariableNames: 'transfersCollection'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio2-Ejercicio'!

!classDefinition: #NetTransfersReport category: 'Portfolio2-Ejercicio' stamp: 'EMI 11/15/2020 22:59:58'!
Report subclass: #NetTransfersReport
	instanceVariableNames: 'transfersCollection'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio2-Ejercicio'!
!NetTransfersReport methodsFor: 'reporting' stamp: 'EMI 11/15/2020 23:01:06' prior: 50910721 overrides: 50909567!
report
	transfersCollection _ OrderedCollection new.
	account reportTo: self.
	^transfersCollection sum: [:aTransferAmount | aTransferAmount] ifEmpty: [0].
	! !
!NetTransfersReport methodsFor: 'reporting - private' stamp: 'EMI 11/15/2020 23:01:30' prior: 50910535 overrides: 50910997!
reportDepositTransaction: aDepositTransaction
	transfersCollection add: 0.! !
!NetTransfersReport methodsFor: 'reporting - private' stamp: 'EMI 11/15/2020 23:01:53' prior: 50910546 overrides: 50909581!
reportDepositTransferTransaction: aDepositTransferTransaction
	transfersCollection add: aDepositTransferTransaction value.! !
!NetTransfersReport methodsFor: 'reporting - private' stamp: 'EMI 11/15/2020 23:01:57' prior: 50910553 overrides: 50909587!
reportExtractionTransferTransaction: aExtractionTransferTransaction
	transfersCollection add: aExtractionTransferTransaction value negated.! !
!NetTransfersReport methodsFor: 'reporting - private' stamp: 'EMI 11/15/2020 23:02:06' prior: 50910541 overrides: 50909576!
reportWithdrawTransaction: aWithdrawTransaction
	transfersCollection add: 0! !

----SNAPSHOT----(15 November 2020 23:02:26) CuisUniversity-4383.image priorSource: 18590127!

!testRun: #NetTransfersReportTest #test01NetTransferReportOfEmptyAccountReturnsZero stamp: 'EMI 11/15/2020 23:02:29'!
ERROR!

!testRun: #NetTransfersReportTest #test02NetTransferReportOfAccountWithADepositTransferReturnsCorrectly stamp: 'EMI 11/15/2020 23:02:29'!
ERROR!

!testRun: #NetTransfersReportTest #test03NetTransferReportOfAccountWithAExtractionTransferReturnsCorrectly stamp: 'EMI 11/15/2020 23:02:29'!
ERROR!

!testRun: #NetTransfersReportTest #test04NetTransferReportOfAccountWithADepositReturnsZero stamp: 'EMI 11/15/2020 23:02:29'!
ERROR!

!testRun: #NetTransfersReportTest #test05NetTransferReportOfEmptyPortfolioReturnsZero stamp: 'EMI 11/15/2020 23:02:29'!
ERROR!

!testRun: #NetTransfersReportTest #test06NetTransferReportOfPortfolioWithAccountAndATransferReturnsCorrectly stamp: 'EMI 11/15/2020 23:02:29'!
ERROR!

!testRun: #NetTransfersReportTest #test07NetTransferReportOfPortfoliosWithAccountAndATransferReturnsCorrectly stamp: 'EMI 11/15/2020 23:02:29'!
ERROR!

!testRun: #NetTransfersReportTest #test08NetTransferReportOfPortfolioTreeOfHeightThreeReturnsCorrectly stamp: 'EMI 11/15/2020 23:02:29'!
ERROR!

!testRun: #NetTransfersReportTest #test01NetTransferReportOfEmptyAccountReturnsZero stamp: 'EMI 11/15/2020 23:02:30'!
ERROR!
!NetTransfersReport methodsFor: 'reporting' stamp: 'EMI 11/15/2020 23:02:40'!
reportAccount: aReceptiveAccount 
	self shouldBeImplemented.! !
!NetTransfersReport methodsFor: 'reporting' stamp: 'EMI 11/15/2020 23:02:44' prior: 50912901!
reportAccount: aReceptiveAccount ! !

!testRun: #NetTransfersReportTest #test01NetTransferReportOfEmptyAccountReturnsZero stamp: 'EMI 11/15/2020 23:02:46'!
PASSED!

!testRun: #NetTransfersReportTest #test02NetTransferReportOfAccountWithADepositTransferReturnsCorrectly stamp: 'EMI 11/15/2020 23:02:47'!
PASSED!

!testRun: #NetTransfersReportTest #test03NetTransferReportOfAccountWithAExtractionTransferReturnsCorrectly stamp: 'EMI 11/15/2020 23:02:48'!
PASSED!

!testRun: #NetTransfersReportTest #test04NetTransferReportOfAccountWithADepositReturnsZero stamp: 'EMI 11/15/2020 23:02:49'!
PASSED!

!testRun: #NetTransfersReportTest #test05NetTransferReportOfEmptyPortfolioReturnsZero stamp: 'EMI 11/15/2020 23:02:49'!
ERROR!
!NetTransfersReport methodsFor: 'reporting' stamp: 'EMI 11/15/2020 23:02:58'!
reportPortfolio: aPortfolio 
	self shouldBeImplemented.! !
!NetTransfersReport methodsFor: 'reporting' stamp: 'EMI 11/15/2020 23:03:03' prior: 50912932!
reportPortfolio: aPortfolio! !

!testRun: #NetTransfersReportTest #test05NetTransferReportOfEmptyPortfolioReturnsZero stamp: 'EMI 11/15/2020 23:03:04'!
PASSED!

!testRun: #NetTransfersReportTest #test06NetTransferReportOfPortfolioWithAccountAndATransferReturnsCorrectly stamp: 'EMI 11/15/2020 23:03:06'!
PASSED!

!testRun: #NetTransfersReportTest #test07NetTransferReportOfPortfoliosWithAccountAndATransferReturnsCorrectly stamp: 'EMI 11/15/2020 23:03:07'!
PASSED!

!testRun: #NetTransfersReportTest #test08NetTransferReportOfPortfolioTreeOfHeightThreeReturnsCorrectly stamp: 'EMI 11/15/2020 23:03:07'!
PASSED!

!testRun: #NetTransfersReportTest #test01NetTransferReportOfEmptyAccountReturnsZero stamp: 'EMI 11/15/2020 23:03:10'!
PASSED!

!testRun: #NetTransfersReportTest #test02NetTransferReportOfAccountWithADepositTransferReturnsCorrectly stamp: 'EMI 11/15/2020 23:03:10'!
PASSED!

!testRun: #NetTransfersReportTest #test03NetTransferReportOfAccountWithAExtractionTransferReturnsCorrectly stamp: 'EMI 11/15/2020 23:03:10'!
PASSED!

!testRun: #NetTransfersReportTest #test04NetTransferReportOfAccountWithADepositReturnsZero stamp: 'EMI 11/15/2020 23:03:10'!
PASSED!

!testRun: #NetTransfersReportTest #test05NetTransferReportOfEmptyPortfolioReturnsZero stamp: 'EMI 11/15/2020 23:03:10'!
PASSED!

!testRun: #NetTransfersReportTest #test06NetTransferReportOfPortfolioWithAccountAndATransferReturnsCorrectly stamp: 'EMI 11/15/2020 23:03:10'!
PASSED!

!testRun: #NetTransfersReportTest #test07NetTransferReportOfPortfoliosWithAccountAndATransferReturnsCorrectly stamp: 'EMI 11/15/2020 23:03:10'!
PASSED!

!testRun: #NetTransfersReportTest #test08NetTransferReportOfPortfolioTreeOfHeightThreeReturnsCorrectly stamp: 'EMI 11/15/2020 23:03:10'!
PASSED!
!Report methodsFor: 'reporting - private' stamp: 'EMI 11/15/2020 23:04:15'!
reportAccount: anAccount.
	self subclassResponsibility.! !
!Report methodsFor: 'reporting - private' stamp: 'EMI 11/15/2020 23:04:28'!
reportPortfolio: aPortfolio.
	self subclassResponsibility.! !

----SNAPSHOT----(15 November 2020 23:05:33) CuisUniversity-4383.image priorSource: 18598638!

!testRun: #PortfolioStructureReportTest #test02ReportOfASimplePortfolioStructureHasCorrectNamesAndIdentation stamp: 'EMI 11/15/2020 23:05:49'!
FAILURE!

!testRun: #PortfolioStructureReportTest #test02ReportOfASimplePortfolioStructureHasCorrectNamesAndIdentation stamp: 'EMI 11/15/2020 23:05:49'!
FAILURE!

!testRun: #PortfolioStructureReportTest #test01ReportOfAnEmptyPortfolioStructureHasCorrectName stamp: 'EMI 11/15/2020 23:06:19'!
FAILURE!

!testRun: #PortfolioStructureReportTest #test02ReportOfASimplePortfolioStructureHasCorrectNamesAndIdentation stamp: 'EMI 11/15/2020 23:06:19'!
FAILURE!

!testRun: #PortfolioStructureReportTest #test01ReportOfAnEmptyPortfolioStructureHasCorrectName stamp: 'EMI 11/15/2020 23:06:57'!
FAILURE!

!testRun: #PortfolioStructureReportTest #test02ReportOfASimplePortfolioStructureHasCorrectNamesAndIdentation stamp: 'EMI 11/15/2020 23:06:57'!
FAILURE!

!testRun: #PortfolioStructureReportTest #test01ReportOfAnEmptyPortfolioStructureHasCorrectName stamp: 'EMI 11/15/2020 23:07:00'!
FAILURE!
!Portfolio methodsFor: 'initialization' stamp: 'EMI 11/15/2020 23:07:56' prior: 50911950 overrides: 16896425!
initialize
	portfolioName _ 'Unnamed Portfolio'.
	accounts := OrderedCollection new.
	parents := OrderedCollection new.! !
!ReceptiveAccount methodsFor: 'initialization' stamp: 'EMI 11/15/2020 23:08:02' prior: 50911717 overrides: 16896425!
initialize
	super initialize.
	transactions := OrderedCollection new.
	accountName _ 'Unnamed Account'.! !
!PortfolioStructureReportTest methodsFor: 'as yet unclassified' stamp: 'EMI 11/15/2020 23:08:15' prior: 50912206!
test02ReportOfASimplePortfolioStructureHasCorrectNamesAndIdentation
	| portfolio account report expectedResult |
	portfolio _ Portfolio new.
	account _ ReceptiveAccount new.
	portfolio add: account.
	report _ PortfolioStructureReport of: portfolio.
	
	expectedResult _ OrderedCollection with: 'Portfolio de Unnamed Portfolio' with: '   Cuenta de Unnamed Account'.
	self assert: report report equals: expectedResult.! !

!testRun: #PortfolioStructureReportTest #test01ReportOfAnEmptyPortfolioStructureHasCorrectName stamp: 'EMI 11/15/2020 23:08:18'!
PASSED!

!testRun: #PortfolioStructureReportTest #test02ReportOfASimplePortfolioStructureHasCorrectNamesAndIdentation stamp: 'EMI 11/15/2020 23:08:18'!
PASSED!
!PortfolioStructureReportTest methodsFor: 'as yet unclassified' stamp: 'EMI 11/15/2020 23:08:52'!
test03ReportOfAListPortfolioStructureHasCorrectNamesAndIdentation
	| portfolio account report expectedResult |
	portfolio _ Portfolio new.
	account _ ReceptiveAccount new.
	portfolio add: account.
	report _ PortfolioStructureReport of: portfolio.
	
	expectedResult _ OrderedCollection with: 'Portfolio de Unnamed Portfolio' with: '   Cuenta de Unnamed Account'.
	self assert: report report equals: expectedResult.! !
!PortfolioStructureReportTest methodsFor: 'as yet unclassified' stamp: 'EMI 11/15/2020 23:10:44' prior: 50913082!
test03ReportOfAListPortfolioStructureHasCorrectNamesAndIdentation
	| portfolio portfolioChild account report expectedResult |
	portfolio _ Portfolio new.
	portfolioChild _ Portfolio new.
	account _ ReceptiveAccount new.
	portfolioChild add: account.
	report _ PortfolioStructureReport of: portfolio.
	
	expectedResult _ OrderedCollection with: 'Portfolio de Unnamed Portfolio' with: '   Portfolio de Unnamed Portfolio' with: '      Cuenta de Unnamed Account'.
	self assert: report report equals: expectedResult.! !

!testRun: #PortfolioStructureReportTest #test03ReportOfAListPortfolioStructureHasCorrectNamesAndIdentation stamp: 'EMI 11/15/2020 23:10:51'!
FAILURE!
!PortfolioStructureReportTest methodsFor: 'as yet unclassified' stamp: 'EMI 11/15/2020 23:11:38' prior: 50913099!
test03ReportOfAListPortfolioStructureHasCorrectNamesAndIdentation
	| portfolio portfolioChild account report expectedResult |
	portfolio _ Portfolio new.
	portfolioChild _ Portfolio new.
	account _ ReceptiveAccount new.
	portfolioChild add: account.
	portfolio add: portfolioChild.
	report _ PortfolioStructureReport of: portfolio.
	
	expectedResult _ OrderedCollection with: 'Portfolio de Unnamed Portfolio' with: '   Portfolio de Unnamed Portfolio' with: '      Cuenta de Unnamed Account'.
	self assert: report report equals: expectedResult.! !

!testRun: #PortfolioStructureReportTest #test03ReportOfAListPortfolioStructureHasCorrectNamesAndIdentation stamp: 'EMI 11/15/2020 23:11:39'!
PASSED!

!testRun: #PortfolioStructureReportTest #test01ReportOfAnEmptyPortfolioStructureHasCorrectName stamp: 'EMI 11/15/2020 23:11:39'!
PASSED!

!testRun: #PortfolioStructureReportTest #test02ReportOfASimplePortfolioStructureHasCorrectNamesAndIdentation stamp: 'EMI 11/15/2020 23:11:39'!
PASSED!

!testRun: #PortfolioStructureReportTest #test03ReportOfAListPortfolioStructureHasCorrectNamesAndIdentation stamp: 'EMI 11/15/2020 23:11:39'!
PASSED!
!PortfolioStructureReportTest methodsFor: 'as yet unclassified' stamp: 'EMI 11/15/2020 23:12:07'!
test04ReportOfAListOfNamedPortfolioStructureHasCorrectNamesAndIdentation
	| portfolio portfolioChild account report expectedResult |
	portfolio _ Portfolio new.
	portfolioChild _ Portfolio new.
	account _ ReceptiveAccount new.
	portfolioChild add: account.
	portfolio add: portfolioChild.
	report _ PortfolioStructureReport of: portfolio.
	
	expectedResult _ OrderedCollection with: 'Portfolio de Unnamed Portfolio' with: '   Portfolio de Unnamed Portfolio' with: '      Cuenta de Unnamed Account'.
	self assert: report report equals: expectedResult.! !
!PortfolioStructureReportTest methodsFor: 'as yet unclassified' stamp: 'EMI 11/15/2020 23:13:33' prior: 50913163!
test04ReportOfAListOfNamedPortfolioStructureHasCorrectNamesAndIdentation
	| portfolio portfolioChild account report expectedResult |
	portfolio _ Portfolio withName: 'Compania 1'.
	portfolioChild _ Portfolio withName: 'Pepe'.
	account _ ReceptiveAccount withName: 'Lavado de dinero'.
	portfolioChild add: account.
	portfolio add: portfolioChild.
	report _ PortfolioStructureReport of: portfolio.
	
	expectedResult _ OrderedCollection with: 'Portfolio de Compania 1' with: '   Portfolio de Pepe' with: '      Cuenta de Lavado de dinero'.
	self assert: report report equals: expectedResult.! !

!testRun: #PortfolioStructureReportTest #test04ReportOfAListOfNamedPortfolioStructureHasCorrectNamesAndIdentation stamp: 'EMI 11/15/2020 23:13:37'!
PASSED!

!testRun: #PortfolioStructureReportTest #test01ReportOfAnEmptyPortfolioStructureHasCorrectName stamp: 'EMI 11/15/2020 23:13:37'!
PASSED!

!testRun: #PortfolioStructureReportTest #test02ReportOfASimplePortfolioStructureHasCorrectNamesAndIdentation stamp: 'EMI 11/15/2020 23:13:37'!
PASSED!

!testRun: #PortfolioStructureReportTest #test03ReportOfAListPortfolioStructureHasCorrectNamesAndIdentation stamp: 'EMI 11/15/2020 23:13:37'!
PASSED!

!testRun: #PortfolioStructureReportTest #test04ReportOfAListOfNamedPortfolioStructureHasCorrectNamesAndIdentation stamp: 'EMI 11/15/2020 23:13:37'!
PASSED!

TestCase subclass: #AccountSpecialReportTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio2-Ejercicio'!

!classDefinition: #AccountSpecialReportTest category: 'Portfolio2-Ejercicio' stamp: 'EMI 11/15/2020 23:16:44'!
TestCase subclass: #AccountSpecialReportTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio2-Ejercicio'!

!classDefinition: #AccountSpecialReport category: 'Portfolio2-Ejercicio' stamp: 'EMI 11/15/2020 23:19:32'!
Report subclass: #AccountSpecialReport
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio2-Ejercicio'!
!AccountSpecialReportTest methodsFor: 'nil' stamp: 'EMI 11/15/2020 23:18:54'!
test01EmptyPortfolioOnlyShowsName
	| portfolio report expectedResult |
	portfolio _ Portfolio new.
	report _ AccountSpecialReport of: portfolio.
	expectedResult _ OrderedCollection with: 'Portfolio de Unnamed Portfolio'.
	self assert: report report equals: expectedResult.! !
!AccountSpecialReport methodsFor: 'nil' stamp: 'EMI 11/15/2020 23:19:54'!
initializeOf: anAccount
	account _ anAccount.! !
!AccountSpecialReport methodsFor: 'nil' stamp: 'EMI 11/15/2020 23:20:13' overrides: 50909567!
report
	^'Unnamed Portfolio'.! !

!testRun: #AccountSpecialReportTest #test01EmptyPortfolioOnlyShowsName stamp: 'EMI 11/15/2020 23:20:20'!
FAILURE!

!testRun: #AccountSpecialReportTest #test01EmptyPortfolioOnlyShowsName stamp: 'EMI 11/15/2020 23:20:20'!
FAILURE!
!AccountSpecialReport methodsFor: 'as yet unclassified' stamp: 'EMI 11/15/2020 23:20:38' prior: 50913266 overrides: 50909567!
report
	^OrderedCollection with: 'Unnamed Portfolio'.! !

!testRun: #AccountSpecialReportTest #test01EmptyPortfolioOnlyShowsName stamp: 'EMI 11/15/2020 23:20:43'!
FAILURE!

!testRun: #AccountSpecialReportTest #test01EmptyPortfolioOnlyShowsName stamp: 'EMI 11/15/2020 23:20:43'!
FAILURE!
!AccountSpecialReport methodsFor: 'as yet unclassified' stamp: 'EMI 11/15/2020 23:21:00' prior: 50913279 overrides: 50909567!
report
	^OrderedCollection with: 'Portfolio de Unnamed Portfolio'.! !

!testRun: #AccountSpecialReportTest #test01EmptyPortfolioOnlyShowsName stamp: 'EMI 11/15/2020 23:21:04'!
PASSED!
!AccountSpecialReportTest methodsFor: 'as yet unclassified' stamp: 'EMI 11/15/2020 23:21:54'!
test02PortfolioWithAnAccountWithADepositShowsNamesAndIdentation
	| portfolio report expectedResult |
	portfolio _ Portfolio new.
	report _ AccountSpecialReport of: portfolio.
	expectedResult _ OrderedCollection with: 'Portfolio de Unnamed Portfolio'.
	self assert: report report equals: expectedResult.! !
!AccountSpecialReportTest methodsFor: 'as yet unclassified' stamp: 'EMI 11/15/2020 23:23:51' prior: 50913301!
test02PortfolioWithAnAccountWithADepositShowsNamesAndIdentation
	| portfolio account report expectedResult |
	portfolio _ Portfolio withName: 'Compania de Pepe'.
	account _ ReceptiveAccount withName: 'Suiza'.
	report _ AccountSpecialReport of: portfolio.
	expectedResult _ OrderedCollection with: 'Portfolio de Compania de Pepe' with: 'Cuenta de Suiza'.
	self assert: report report equals: expectedResult.! !
!AccountSpecialReportTest methodsFor: 'as yet unclassified' stamp: 'EMI 11/15/2020 23:24:02' prior: 50913314!
test02PortfolioWithAnAccountWithADepositShowsNamesAndIdentation
	| portfolio account report expectedResult |
	portfolio _ Portfolio withName: 'Compania de Pepe'.
	account _ ReceptiveAccount withName: 'Suiza'.
	portfolio add: account.
	report _ AccountSpecialReport of: portfolio.
	expectedResult _ OrderedCollection with: 'Portfolio de Compania de Pepe' with: 'Cuenta de Suiza'.
	self assert: report report equals: expectedResult.! !

!testRun: #AccountSpecialReportTest #test02PortfolioWithAnAccountWithADepositShowsNamesAndIdentation stamp: 'EMI 11/15/2020 23:24:03'!
FAILURE!
!AccountSpecialReportTest methodsFor: 'as yet unclassified' stamp: 'EMI 11/15/2020 23:24:11' prior: 50913331!
test02PortfolioWithAnAccountWithADepositShowsNamesAndIdentation
	| portfolio account report expectedResult |
	portfolio _ Portfolio withName: 'Compania de Pepe'.
	account _ ReceptiveAccount withName: 'Suiza'.
	portfolio add: account.
	report _ AccountSpecialReport of: portfolio.
	expectedResult _ OrderedCollection with: 'Portfolio de Compania de Pepe' with: '   Cuenta de Suiza'.
	self assert: report report equals: expectedResult.! !

!testRun: #AccountSpecialReportTest #test02PortfolioWithAnAccountWithADepositShowsNamesAndIdentation stamp: 'EMI 11/15/2020 23:24:21'!
FAILURE!
!AccountSpecialReportTest methodsFor: 'as yet unclassified' stamp: 'EMI 11/15/2020 23:25:51' prior: 50913353!
test02PortfolioWithAnAccountWithADepositShowsNamesAndIdentation
	| portfolio account report expectedResult |
	portfolio _ Portfolio withName: 'Compania de Pepe'.
	account _ ReceptiveAccount withName: 'Suiza'.
	Deposit register: 10 on: account.
	portfolio add: account.
	report _ AccountSpecialReport of: portfolio.
	expectedResult _ OrderedCollection with: 'Portfolio de Compania de Pepe' with: '   Cuenta de Suiza' with: '      Dep�sito por 10' with: '      Balance = 10'.
	self assert: report report equals: expectedResult.! !
!PortfolioStructureReportTest class methodsFor: 'nil' stamp: 'EMI 11/15/2020 23:26:51'!
identString: aString amount: anAmount
	^(String new: (3*anAmount) withAll: Character space), aString.! !
!NetTransfersReportTest class methodsFor: 'nil' stamp: 'EMI 11/15/2020 23:27:15'!
identString: aString amount: anAmount
	^(String new: (3*anAmount) withAll: Character space), aString.! !
!AccountSpecialReportTest class methodsFor: 'nil' stamp: 'EMI 11/15/2020 23:27:38'!
identString: aString amount: anAmount
	^(String new: (3*anAmount) withAll: Character space), aString.! !

!methodRemoval: NetTransfersReportTest class #identString:amount: stamp: 'EMI 11/15/2020 23:27:45'!
identString: aString amount: anAmount
	^(String new: (3*anAmount) withAll: Character space), aString.!
!AccountSpecialReportTest methodsFor: 'as yet unclassified' stamp: 'EMI 11/15/2020 23:28:41' prior: 50913375!
test02PortfolioWithAnAccountWithADepositShowsNamesAndIdentation
	| portfolio account report expectedResult |
	portfolio _ Portfolio withName: 'Compania de Pepe'.
	account _ ReceptiveAccount withName: 'Suiza'.
	Deposit register: 10 on: account.
	portfolio add: account.
	report _ AccountSpecialReport of: portfolio.
	expectedResult _ OrderedCollection with: 'Portfolio de Compania de Pepe' with: (self class identString: 'Cuenta de Suiza' amount: 1) with: '      Dep�sito por 10' with: '      Balance = 10'.
	self assert: report report equals: expectedResult.! !
!AccountSpecialReportTest methodsFor: 'as yet unclassified' stamp: 'EMI 11/15/2020 23:29:48' prior: 50913421!
test02PortfolioWithAnAccountWithADepositShowsNamesAndIdentation
	| portfolio account report expectedResult |
	portfolio _ Portfolio withName: 'Compania de Pepe'.
	account _ ReceptiveAccount withName: 'Suiza'.
	Deposit register: 10 on: account.
	portfolio add: account.
	report _ AccountSpecialReport of: portfolio.
	expectedResult _ OrderedCollection with: 'Portfolio de Compania de Pepe' 
		with: (self class identString: 'Cuenta de Suiza' amount: 1) 
		with: (self class identString: 'Dep�sito por 10' amount: 2) 
		with: (self class identString: 'Balance = 10' amount: 2).
	self assert: report report equals: expectedResult.! !
!AccountSpecialReportTest methodsFor: 'as yet unclassified' stamp: 'EMI 11/15/2020 23:30:05' prior: 50913442!
test02PortfolioWithAnAccountWithADepositShowsNamesAndIdentation
	| portfolio account report expectedResult |
	portfolio _ Portfolio withName: 'Compania de Pepe'.
	account _ ReceptiveAccount withName: 'Suiza'.
	Deposit register: 10 on: account.
	portfolio add: account.
	report _ AccountSpecialReport of: portfolio.
	expectedResult _ OrderedCollection with: 'Portfolio de Compania de Pepe' 
								    with: (self class identString: 'Cuenta de Suiza' amount: 1) 
								    with: (self class identString: 'Dep�sito por 10' amount: 2) 
								    with: (self class identString: 'Balance = 10' amount: 2).
	self assert: report report equals: expectedResult.! !

!testRun: #AccountSpecialReportTest #test02PortfolioWithAnAccountWithADepositShowsNamesAndIdentation stamp: 'EMI 11/15/2020 23:30:20'!
FAILURE!

!classDefinition: #AccountSpecialReport category: 'Portfolio2-Ejercicio' stamp: 'EMI 11/15/2020 23:31:18'!
Report subclass: #AccountSpecialReport
	instanceVariableNames: 'summaryCollection'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio2-Ejercicio'!
!AccountSpecialReport methodsFor: 'as yet unclassified' stamp: 'EMI 11/15/2020 23:31:16' prior: 50913292 overrides: 50909567!
report
       summaryCollection _ OrderedCollection new.
	account reportTo: self.
	^summaryCollection.! !

!testRun: #AccountSpecialReportTest #test01EmptyPortfolioOnlyShowsName stamp: 'EMI 11/15/2020 23:31:48'!
ERROR!

!testRun: #AccountSpecialReportTest #test02PortfolioWithAnAccountWithADepositShowsNamesAndIdentation stamp: 'EMI 11/15/2020 23:31:48'!
ERROR!

!testRun: #AccountSpecialReportTest #test01EmptyPortfolioOnlyShowsName stamp: 'EMI 11/15/2020 23:31:52'!
ERROR!
!AccountSpecialReport methodsFor: 'reporting - private' stamp: 'EMI 11/15/2020 23:32:07' overrides: 50913000!
reportPortfolio: aPortfolio 
	self shouldBeImplemented.! !
!AccountSpecialReportTest methodsFor: 'as yet unclassified' stamp: 'EMI 11/15/2020 23:34:23' prior: 50913250!
test01EmptyPortfolioOnlyShowsName
	| portfolio report expectedResult |
	portfolio _ Portfolio new.
	report _ AccountSpecialReport of: portfolio.
	expectedResult _ OrderedCollection with: 'Portfolio de Unnamed Portfolio' 
								    with: (self class identString: 'Balance = 0' amount: 1).
	self assert: report report equals: expectedResult.! !
!AccountSpecialReportTest methodsFor: 'as yet unclassified' stamp: 'EMI 11/15/2020 23:34:45' prior: 50913466!
test02PortfolioWithAnAccountWithADepositShowsNamesAndIdentation
	| portfolio account report expectedResult |
	portfolio _ Portfolio withName: 'Compania de Pepe'.
	account _ ReceptiveAccount withName: 'Suiza'.
	Deposit register: 10 on: account.
	portfolio add: account.
	report _ AccountSpecialReport of: portfolio.
	expectedResult _ OrderedCollection with: 'Portfolio de Compania de Pepe' 
								    with: (self class identString: 'Cuenta de Suiza' amount: 1) 
								    with: (self class identString: 'Dep�sito por 10' amount: 2) 
								    with: (self class identString: 'Balance = 10' amount: 2)
								    with: (self class identString: 'Balance = 10' amount: 1).
	self assert: report report equals: expectedResult.! !

!classDefinition: #AccountSpecialReport category: 'Portfolio2-Ejercicio' stamp: 'EMI 11/15/2020 23:35:46'!
Report subclass: #AccountSpecialReport
	instanceVariableNames: 'summaryCollection currentIdent'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio2-Ejercicio'!
!AccountSpecialReport methodsFor: 'reporting - private' stamp: 'EMI 11/15/2020 23:35:44' prior: 50913523 overrides: 50913000!
reportPortfolio: aPortfolio 
	summaryCollection add: (self identString: ('Portfolio de ', aPortfolio named)).
	currentIdent _ currentIdent + 1.! !
!Portfolio methodsFor: 'reports' stamp: 'EMI 11/15/2020 23:39:11' prior: 50912586 overrides: 50908371!
reportTo: aReport
	aReport reportPortfolio: self.
	accounts do:[:anAccount | anAccount reportTo: aReport].! !
!AccountSpecialReport methodsFor: 'as yet unclassified' stamp: 'EMI 11/15/2020 23:39:30' prior: 50913504 overrides: 50909567!
report
       summaryCollection _ OrderedCollection new.
	currentIdent _ 0.
	account reportTo: self.
	^summaryCollection.! !

!testRun: #AccountSpecialReportTest #test01EmptyPortfolioOnlyShowsName stamp: 'EMI 11/15/2020 23:40:08'!
ERROR!

!testRun: #AccountSpecialReportTest #test01EmptyPortfolioOnlyShowsName stamp: 'EMI 11/15/2020 23:40:27'!
ERROR!

!testRun: #AccountSpecialReportTest #test02PortfolioWithAnAccountWithADepositShowsNamesAndIdentation stamp: 'EMI 11/15/2020 23:40:27'!
ERROR!

!testRun: #AccountSpecialReportTest #test01EmptyPortfolioOnlyShowsName stamp: 'EMI 11/15/2020 23:40:29'!
ERROR!
!AccountSpecialReport methodsFor: 'nil' stamp: 'EMI 11/15/2020 23:41:11'!
identString: aString
	^(String new: (3*currentIdent) withAll: Character space), aString.! !

!testRun: #AccountSpecialReportTest #test01EmptyPortfolioOnlyShowsName stamp: 'EMI 11/15/2020 23:41:17'!
FAILURE!

!testRun: #AccountSpecialReportTest #test02PortfolioWithAnAccountWithADepositShowsNamesAndIdentation stamp: 'EMI 11/15/2020 23:41:17'!
ERROR!

!testRun: #AccountSpecialReportTest #test02PortfolioWithAnAccountWithADepositShowsNamesAndIdentation stamp: 'EMI 11/15/2020 23:41:19'!
ERROR!
!AccountSpecialReport methodsFor: 'reporting - private' stamp: 'EMI 11/15/2020 23:41:40' overrides: 50912995!
reportAccount: aReceptiveAccount 
	self shouldBeImplemented.! !
!AccountSpecialReport methodsFor: 'reporting - private' stamp: 'EMI 11/15/2020 23:43:45' prior: 50913637 overrides: 50912995!
reportAccount: aReceptiveAccount 
	| summary summaryReport|
	summaryCollection add: (self identString: ('Cuenta de ', aReceptiveAccount named)).
	
	summary _ AccountSummaryReport of: aReceptiveAccount.
	summaryReport _ summary report.! !
!AccountSpecialReport methodsFor: 'as yet unclassified' stamp: 'EMI 11/15/2020 23:46:12'!
identString: aString withAmount: anAmount
	^(String new: (3*anAmount) withAll: Character space), aString.! !
!AccountSpecialReport methodsFor: 'reporting - private' stamp: 'EMI 11/15/2020 23:48:32' prior: 50913643 overrides: 50912995!
reportAccount: aReceptiveAccount 
	| summary summaryReport|
	summaryCollection add: (self identString: ('Cuenta de ', aReceptiveAccount named)).
	
	summary _ AccountSummaryReport of: aReceptiveAccount.
	summaryReport _ summary report.
	summaryReport do: [:aSummaryLine | summaryCollection add: (self identString: aSummaryLine withAmount: (currentIdent + 1))].! !
!AccountSpecialReport methodsFor: 'nil' stamp: 'EMI 11/15/2020 23:49:45' overrides: 50910997!
reportDepositTransaction: aDepositTransaction! !
!AccountSpecialReport methodsFor: 'nil' stamp: 'EMI 11/15/2020 23:49:56' overrides: 50909581!
reportDepositTransferTransaction: aDepositTransferTransaction! !
!AccountSpecialReport methodsFor: 'nil' stamp: 'EMI 11/15/2020 23:50:07' overrides: 50909587!
reportExtractionTransferTransaction: aExtractionTransferTransaction! !
!AccountSpecialReport methodsFor: 'nil' stamp: 'EMI 11/15/2020 23:50:18' overrides: 50909576!
reportWithdrawTransaction: aWithdrawTransaction! !
!AccountSpecialReportTest methodsFor: 'as yet unclassified' stamp: 'EMI 11/15/2020 23:51:45' prior: 50913544!
test02PortfolioWithAnAccountWithADepositShowsNamesAndIdentation
	| portfolio account report expectedResult |
	portfolio _ Portfolio withName: 'Compania de Pepe'.
	account _ ReceptiveAccount withName: 'Suiza'.
	Deposit register: 10 on: account.
	portfolio add: account.
	report _ AccountSpecialReport of: portfolio.
	expectedResult _ OrderedCollection with: 'Portfolio de Compania de Pepe' 
								    with: (self class identString: 'Cuenta de Suiza' amount: 1) 
								    with: (self class identString: 'Dep�sito por 10' amount: 2) 
								    with: (self class identString: 'Balance = 10' amount: 2).
								    "with: (self class identString: 'Balance = 10' amount: 1)."
	self assert: report report equals: expectedResult.! !

!testRun: #AccountSpecialReportTest #test01EmptyPortfolioOnlyShowsName stamp: 'EMI 11/15/2020 23:52:04'!
FAILURE!

!testRun: #AccountSpecialReportTest #test02PortfolioWithAnAccountWithADepositShowsNamesAndIdentation stamp: 'EMI 11/15/2020 23:52:04'!
FAILURE!

!testRun: #AccountSpecialReportTest #test01EmptyPortfolioOnlyShowsName stamp: 'EMI 11/15/2020 23:52:06'!
FAILURE!
!AccountSpecialReportTest methodsFor: 'as yet unclassified' stamp: 'EMI 11/15/2020 23:54:03' prior: 50913529!
test01EmptyPortfolioOnlyShowsName
	| portfolio report expectedResult |
	portfolio _ Portfolio new.
	report _ AccountSpecialReport of: portfolio.
	expectedResult _ OrderedCollection with: 'Portfolio de Unnamed Portfolio'. 
								    "with: (self class identString: 'Balance = 0' amount: 1)."
	self assert: report report equals: expectedResult.! !

!testRun: #AccountSpecialReportTest #test01EmptyPortfolioOnlyShowsName stamp: 'EMI 11/15/2020 23:54:05'!
PASSED!

!testRun: #AccountSpecialReportTest #test02PortfolioWithAnAccountWithADepositShowsNamesAndIdentation stamp: 'EMI 11/15/2020 23:54:05'!
FAILURE!

!testRun: #AccountSpecialReportTest #test02PortfolioWithAnAccountWithADepositShowsNamesAndIdentation stamp: 'EMI 11/15/2020 23:54:05'!
FAILURE!
!AccountSpecialReportTest methodsFor: 'as yet unclassified' stamp: 'EMI 11/15/2020 23:55:21' prior: 50913699!
test02PortfolioWithAnAccountWithADepositShowsNamesAndIdentation
	| portfolio account report expectedResult |
	portfolio _ Portfolio withName: 'Compania de Pepe'.
	account _ ReceptiveAccount withName: 'Suiza'.
	Deposit register: 10 on: account.
	portfolio add: account.
	report _ AccountSpecialReport of: portfolio.
	expectedResult _ OrderedCollection with: 'Portfolio de Compania de Pepe' 
								    with: (self class identString: 'Cuenta de Suiza' amount: 1) 
								    with: (self class identString: 'Dep�sito por 10.' amount: 2) 
								    with: (self class identString: 'Balance = 10.' amount: 2).
								    "with: (self class identString: 'Balance = 10' amount: 1)."
	self assert: report report equals: expectedResult.! !

!testRun: #AccountSpecialReportTest #test01EmptyPortfolioOnlyShowsName stamp: 'EMI 11/15/2020 23:55:27'!
PASSED!

!testRun: #AccountSpecialReportTest #test02PortfolioWithAnAccountWithADepositShowsNamesAndIdentation stamp: 'EMI 11/15/2020 23:55:27'!
PASSED!
!PortfolioStructureReportTest methodsFor: 'as yet unclassified' stamp: 'EMI 11/15/2020 23:57:16'!
test05ReportOfAListOfNamedPortfolioStructureHasCorrectNamesAndIdentation
	| portfolio portfolioChild  report expectedResult |
	portfolio _ Portfolio withName: 'Compania 1'.
	portfolioChild _ Portfolio withName: 'Pepe'.
	portfolio add: portfolioChild.
	report _ PortfolioStructureReport of: portfolio.
	
	expectedResult _ OrderedCollection with: 'Portfolio de Compania 1' with: '   Portfolio de Pepe' with: '      Cuenta de Lavado de dinero'.
	self assert: report report equals: expectedResult.! !
!PortfolioStructureReportTest methodsFor: 'as yet unclassified' stamp: 'EMI 11/15/2020 23:57:27' prior: 50913800!
test05ReportOfAListOfNamedPortfolioStructureHasCorrectNamesAndIdentation
	| portfolio portfolioChildLeft  report expectedResult |
	portfolio _ Portfolio withName: 'Compania 1'.
	portfolioChildLeft _ Portfolio withName: 'Pepe'.
	portfolio add: portfolioChildLeft.
	report _ PortfolioStructureReport of: portfolio.
	
	expectedResult _ OrderedCollection with: 'Portfolio de Compania 1' with: '   Portfolio de Pepe' with: '      Cuenta de Lavado de dinero'.
	self assert: report report equals: expectedResult.! !
!PortfolioStructureReportTest methodsFor: 'as yet unclassified' stamp: 'EMI 11/15/2020 23:57:40' prior: 50913820!
test05ReportOfAListOfNamedPortfolioStructureHasCorrectNamesAndIdentation
	| portfolio portfolioChildLeft portfolioChildRight report expectedResult |
	portfolio _ Portfolio withName: 'Compania 1'.
	portfolioChildLeft _ Portfolio withName: 'Pepe'.
	portfolio add: portfolioChildLeft.
	report _ PortfolioStructureReport of: portfolio.
	
	expectedResult _ OrderedCollection with: 'Portfolio de Compania 1' with: '   Portfolio de Pepe' with: '      Cuenta de Lavado de dinero'.
	self assert: report report equals: expectedResult.! !
!PortfolioStructureReportTest methodsFor: 'as yet unclassified' stamp: 'EMI 11/15/2020 23:58:38' prior: 50913840!
test05ReportOfAListOfNamedPortfolioStructureHasCorrectNamesAndIdentation
	| portfolio portfolioChildLeft portfolioChildRight report expectedResult |
	portfolio _ Portfolio withName: 'Compania 1'.
	portfolioChildLeft _ Portfolio withName: 'Pepe'.
	portfolioChildRight _ Portfolio withName: 'Jose'.
	portfolio add: portfolioChildLeft.
	portfolio add: portfolioChildRight.
	report _ PortfolioStructureReport of: portfolio.
	
	expectedResult _ OrderedCollection with: 'Portfolio de Compania 1' with: '   Portfolio de Pepe' with: '   Portfolio de Jose'.
	self assert: report report equals: expectedResult.! !

!testRun: #PortfolioStructureReportTest #test05ReportOfAListOfNamedPortfolioStructureHasCorrectNamesAndIdentation stamp: 'EMI 11/15/2020 23:58:45'!
FAILURE!

!testRun: #PortfolioStructureReportTest #test05ReportOfAListOfNamedPortfolioStructureHasCorrectNamesAndIdentation stamp: 'EMI 11/15/2020 23:58:45'!
FAILURE!
!AccountSpecialReport methodsFor: 'reporting - private' stamp: 'EMI 11/16/2020 00:00:43'!
beginReportPortfolio: aPortfolio 
	summaryCollection add: (self identString: ('Portfolio de ', aPortfolio named)).
	currentIdent _ currentIdent + 1.! !
!PortfolioStructureReport methodsFor: 'reporting - private' stamp: 'EMI 11/16/2020 00:00:43'!
beginReportPortfolio: aPortfolio
	reportCollection add: (self identString: ('Portfolio de ', aPortfolio named)).
	currentIdent _ currentIdent + 1.! !
!NetTransfersReport methodsFor: 'reporting - private' stamp: 'EMI 11/16/2020 00:00:43'!
beginReportPortfolio: aPortfolio! !
!Report methodsFor: 'reporting - private' stamp: 'EMI 11/16/2020 00:00:43'!
beginReportPortfolio: aPortfolio.
	self subclassResponsibility.! !
!AccountSummaryReport methodsFor: 'reporting - private' stamp: 'EMI 11/16/2020 00:00:43' overrides: 50913913!
beginReportPortfolio: aPortfolio ! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'EMI 11/16/2020 00:00:43' prior: 50913588 overrides: 50908371!
reportTo: aReport
	aReport beginReportPortfolio: self.
	accounts do:[:anAccount | anAccount reportTo: aReport].! !

!methodRemoval: AccountSpecialReport #reportPortfolio: stamp: 'EMI 11/16/2020 00:00:43'!
reportPortfolio: aPortfolio 
	summaryCollection add: (self identString: ('Portfolio de ', aPortfolio named)).
	currentIdent _ currentIdent + 1.!

!methodRemoval: PortfolioStructureReport #reportPortfolio: stamp: 'EMI 11/16/2020 00:00:43'!
reportPortfolio: aPortfolio
	reportCollection add: (self identString: ('Portfolio de ', aPortfolio named)).
	currentIdent _ currentIdent + 1.!

!methodRemoval: NetTransfersReport #reportPortfolio: stamp: 'EMI 11/16/2020 00:00:43'!
reportPortfolio: aPortfolio!

!methodRemoval: Report #reportPortfolio: stamp: 'EMI 11/16/2020 00:00:44'!
reportPortfolio: aPortfolio.
	self subclassResponsibility.!

!methodRemoval: AccountSummaryReport #reportPortfolio: stamp: 'EMI 11/16/2020 00:00:44'!
reportPortfolio: aPortfolio !
!Report methodsFor: 'reporting - private' stamp: 'EMI 11/16/2020 00:00:50'!
endReportPortfolio: aPortfolio.
	self subclassResponsibility.! !
!AccountSummaryReport methodsFor: 'reporting - private' stamp: 'EMI 11/16/2020 00:01:00' overrides: 50913957!
endReportPortfolio: aPortfolio.! !
!NetTransfersReport methodsFor: 'nil' stamp: 'EMI 11/16/2020 00:01:05' overrides: 50913957!
endReportPortfolio: aPortfolio.! !
!PortfolioStructureReport methodsFor: 'reporting - private' stamp: 'EMI 11/16/2020 00:01:24' overrides: 50913957!
endReportPortfolio: aPortfolio.
	currentIdent _ currentIdent - 1.! !
!AccountSpecialReport methodsFor: 'reporting - private' stamp: 'EMI 11/16/2020 00:01:58' overrides: 50913957!
endReportPortfolio: aPortfolio.
	currentIdent _ currentIdent - 1.
	summaryCollection add: (self identString: ('Balance = ', aPortfolio balance)).! !
!AccountSpecialReport methodsFor: 'reporting - private' stamp: 'EMI 11/16/2020 00:02:13' prior: 50913978 overrides: 50913957!
endReportPortfolio: aPortfolio.
	summaryCollection add: (self identString: ('Balance = ', aPortfolio balance)).
	currentIdent _ currentIdent - 1.! !

----SNAPSHOT----(16 November 2020 00:02:24) CuisUniversity-4383.image priorSource: 18603325!

!testRun: #PortfolioStructureReportTest #test01ReportOfAnEmptyPortfolioStructureHasCorrectName stamp: 'EMI 11/16/2020 00:02:32'!
PASSED!

!testRun: #PortfolioStructureReportTest #test02ReportOfASimplePortfolioStructureHasCorrectNamesAndIdentation stamp: 'EMI 11/16/2020 00:02:32'!
PASSED!

!testRun: #PortfolioStructureReportTest #test03ReportOfAListPortfolioStructureHasCorrectNamesAndIdentation stamp: 'EMI 11/16/2020 00:02:32'!
PASSED!

!testRun: #PortfolioStructureReportTest #test04ReportOfAListOfNamedPortfolioStructureHasCorrectNamesAndIdentation stamp: 'EMI 11/16/2020 00:02:32'!
PASSED!

!testRun: #PortfolioStructureReportTest #test05ReportOfAListOfNamedPortfolioStructureHasCorrectNamesAndIdentation stamp: 'EMI 11/16/2020 00:02:32'!
FAILURE!

!testRun: #PortfolioStructureReportTest #test05ReportOfAListOfNamedPortfolioStructureHasCorrectNamesAndIdentation stamp: 'EMI 11/16/2020 00:02:32'!
FAILURE!
!Portfolio methodsFor: 'reports' stamp: 'EMI 11/16/2020 00:04:10' prior: 50913924 overrides: 50908371!
reportTo: aReport
	aReport beginReportPortfolio: self.
	accounts do:[:anAccount | anAccount reportTo: aReport].
	aReport endReportPortfolio: self.! !

----SNAPSHOT----(16 November 2020 00:05:05) CuisUniversity-4383.image priorSource: 18634996!

!testRun: #PortfolioStructureReportTest #test01ReportOfAnEmptyPortfolioStructureHasCorrectName stamp: 'EMI 11/16/2020 00:05:07'!
PASSED!

!testRun: #PortfolioStructureReportTest #test02ReportOfASimplePortfolioStructureHasCorrectNamesAndIdentation stamp: 'EMI 11/16/2020 00:05:07'!
PASSED!

!testRun: #PortfolioStructureReportTest #test03ReportOfAListPortfolioStructureHasCorrectNamesAndIdentation stamp: 'EMI 11/16/2020 00:05:07'!
PASSED!

!testRun: #PortfolioStructureReportTest #test04ReportOfAListOfNamedPortfolioStructureHasCorrectNamesAndIdentation stamp: 'EMI 11/16/2020 00:05:07'!
PASSED!

!testRun: #PortfolioStructureReportTest #test05ReportOfAListOfNamedPortfolioStructureHasCorrectNamesAndIdentation stamp: 'EMI 11/16/2020 00:05:07'!
PASSED!

!testRun: #AccountSpecialReportTest #test01EmptyPortfolioOnlyShowsName stamp: 'EMI 11/16/2020 00:05:12'!
ERROR!

!testRun: #AccountSpecialReportTest #test02PortfolioWithAnAccountWithADepositShowsNamesAndIdentation stamp: 'EMI 11/16/2020 00:05:12'!
ERROR!

!testRun: #AccountSpecialReportTest #test01EmptyPortfolioOnlyShowsName stamp: 'EMI 11/16/2020 00:05:16'!
ERROR!
!AccountSpecialReportTest methodsFor: 'as yet unclassified' stamp: 'EMI 11/16/2020 00:05:28' prior: 50913738!
test01EmptyPortfolioOnlyShowsName
	| portfolio report expectedResult |
	portfolio _ Portfolio new.
	report _ AccountSpecialReport of: portfolio.
	expectedResult _ OrderedCollection with: 'Portfolio de Unnamed Portfolio'
								    with: (self class identString: 'Balance = 0' amount: 1).
	self assert: report report equals: expectedResult.! !
!AccountSpecialReportTest methodsFor: 'as yet unclassified' stamp: 'EMI 11/16/2020 00:05:37' prior: 50913765!
test02PortfolioWithAnAccountWithADepositShowsNamesAndIdentation
	| portfolio account report expectedResult |
	portfolio _ Portfolio withName: 'Compania de Pepe'.
	account _ ReceptiveAccount withName: 'Suiza'.
	Deposit register: 10 on: account.
	portfolio add: account.
	report _ AccountSpecialReport of: portfolio.
	expectedResult _ OrderedCollection with: 'Portfolio de Compania de Pepe' 
								    with: (self class identString: 'Cuenta de Suiza' amount: 1) 
								    with: (self class identString: 'Dep�sito por 10.' amount: 2) 
								    with: (self class identString: 'Balance = 10.' amount: 2)
								    with: (self class identString: 'Balance = 10' amount: 1).
	self assert: report report equals: expectedResult.! !

!testRun: #AccountSpecialReportTest #test01EmptyPortfolioOnlyShowsName stamp: 'EMI 11/16/2020 00:05:41'!
ERROR!

!testRun: #AccountSpecialReportTest #test02PortfolioWithAnAccountWithADepositShowsNamesAndIdentation stamp: 'EMI 11/16/2020 00:05:41'!
ERROR!

!testRun: #AccountSpecialReportTest #test01EmptyPortfolioOnlyShowsName stamp: 'EMI 11/16/2020 00:05:43'!
ERROR!
!AccountSpecialReport methodsFor: 'reporting - private' stamp: 'EMI 11/16/2020 00:05:56' prior: 50913987 overrides: 50913957!
endReportPortfolio: aPortfolio.
	summaryCollection add: (self identString: ('Balance = ', aPortfolio balance asString)).
	currentIdent _ currentIdent - 1.! !

!testRun: #AccountSpecialReportTest #test01EmptyPortfolioOnlyShowsName stamp: 'EMI 11/16/2020 00:05:58'!
PASSED!

!testRun: #AccountSpecialReportTest #test02PortfolioWithAnAccountWithADepositShowsNamesAndIdentation stamp: 'EMI 11/16/2020 00:06:00'!
PASSED!

!testRun: #AccountSpecialReportTest #test01EmptyPortfolioOnlyShowsName stamp: 'EMI 11/16/2020 00:06:06'!
PASSED!

!testRun: #AccountSpecialReportTest #test02PortfolioWithAnAccountWithADepositShowsNamesAndIdentation stamp: 'EMI 11/16/2020 00:06:06'!
PASSED!

----SNAPSHOT----(16 November 2020 00:06:25) CuisUniversity-4383.image priorSource: 18636277!

----SNAPSHOT----(16 November 2020 00:06:30) CuisUniversity-4383.image priorSource: 18640033!

----QUIT----(16 November 2020 00:06:49) CuisUniversity-4383.image priorSource: 18640127!

----STARTUP---- (16 November 2020 15:51:09) as /home/doraserver/CuisUniversity/CuisUniversity-4383.image!


p name!

p _ Portfolio new.
p name!

Object subclass: #Account
	instanceVariableNames: 'accountName'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio2-Ejercicio'!

Account subclass: #Portfolio
	instanceVariableNames: 'accounts parents'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio2-Ejercicio'!

!classDefinition: #Portfolio category: 'Portfolio2-Ejercicio' stamp: 'EMI 11/16/2020 15:53:23'!
Account subclass: #Portfolio
	instanceVariableNames: 'accounts parents'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio2-Ejercicio'!

Account subclass: #ReceptiveAccount
	instanceVariableNames: 'transactions'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio2-Ejercicio'!

!classDefinition: #ReceptiveAccount category: 'Portfolio2-Ejercicio' stamp: 'EMI 11/16/2020 15:53:27'!
Account subclass: #ReceptiveAccount
	instanceVariableNames: 'transactions'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio2-Ejercicio'!

Object subclass: #Account
	instanceVariableNames: 'accountName'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio2-Ejercicio'!

!classDefinition: #Account category: 'Portfolio2-Ejercicio' stamp: 'EMI 11/16/2020 15:53:33'!
Object subclass: #Account
	instanceVariableNames: 'accountName'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio2-Ejercicio'!
!Portfolio methodsFor: 'names' stamp: 'EMI 11/16/2020 15:53:55' prior: 50911878 overrides: 50912021!
named
	^accountName .! !
!Portfolio methodsFor: 'initialization' stamp: 'EMI 11/16/2020 15:54:03' prior: 50911869!
initializeWithName: aString 
	self initialize.
	accountName := aString.! !

!testRun: #PortfolioTest #test01BalanceOfPortfolioWithoutAccountsIsZero stamp: 'EMI 11/16/2020 15:54:17'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithOneAccountIsAccountBalance stamp: 'EMI 11/16/2020 15:54:17'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioIsCalculatedRecursivelyOnPortfolios stamp: 'EMI 11/16/2020 15:54:17'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithoutAccountsHasNoRegisteredTransaction stamp: 'EMI 11/16/2020 15:54:17'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredItsAccountsTransactions stamp: 'EMI 11/16/2020 15:54:17'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioLooksForRegisteredTransactionsRecursively stamp: 'EMI 11/16/2020 15:54:17'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioHasNoTransactionWhenHasNoAccounts stamp: 'EMI 11/16/2020 15:54:17'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTransactionsIncludesAllItsAccountsTransactions stamp: 'EMI 11/16/2020 15:54:17'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioTransactionsAreCalculatedRecursively stamp: 'EMI 11/16/2020 15:54:17'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCanNotIncludeTheSameAccountMoreThanOnce stamp: 'EMI 11/16/2020 15:54:17'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCanNotIncludeAccountOfItsPortfolios stamp: 'EMI 11/16/2020 15:54:17'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioCanNotIncludeItself stamp: 'EMI 11/16/2020 15:54:17'!
PASSED!

!testRun: #PortfolioTest #test13ComposedPortfolioCanNotHaveParentPortfolioAccount stamp: 'EMI 11/16/2020 15:54:17'!
PASSED!

!testRun: #PortfolioTest #test14ComposedPortfolioCanNotHaveAccountOfAnyRootParentRecursively stamp: 'EMI 11/16/2020 15:54:17'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotIncludeAnyOfTheComposedAccountOfPortfolioToAdd stamp: 'EMI 11/16/2020 15:54:17'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioHasDefaultName stamp: 'EMI 11/16/2020 15:54:17'!
FAILURE!

!testRun: #PortfolioTest #test17CanCreatePortfolioWithName stamp: 'EMI 11/16/2020 15:54:17'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioHasDefaultName stamp: 'EMI 11/16/2020 15:54:17'!
FAILURE!
!Portfolio methodsFor: 'initialization' stamp: 'EMI 11/16/2020 15:54:31' prior: 50913041 overrides: 16896425!
initialize
	accountName _ 'Unnamed Portfolio'.
	accounts := OrderedCollection new.
	parents := OrderedCollection new.! !

!testRun: #PortfolioTest #test01BalanceOfPortfolioWithoutAccountsIsZero stamp: 'EMI 11/16/2020 15:54:39'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithOneAccountIsAccountBalance stamp: 'EMI 11/16/2020 15:54:39'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioIsCalculatedRecursivelyOnPortfolios stamp: 'EMI 11/16/2020 15:54:39'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithoutAccountsHasNoRegisteredTransaction stamp: 'EMI 11/16/2020 15:54:39'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredItsAccountsTransactions stamp: 'EMI 11/16/2020 15:54:39'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioLooksForRegisteredTransactionsRecursively stamp: 'EMI 11/16/2020 15:54:39'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioHasNoTransactionWhenHasNoAccounts stamp: 'EMI 11/16/2020 15:54:39'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTransactionsIncludesAllItsAccountsTransactions stamp: 'EMI 11/16/2020 15:54:39'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioTransactionsAreCalculatedRecursively stamp: 'EMI 11/16/2020 15:54:39'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCanNotIncludeTheSameAccountMoreThanOnce stamp: 'EMI 11/16/2020 15:54:39'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCanNotIncludeAccountOfItsPortfolios stamp: 'EMI 11/16/2020 15:54:39'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioCanNotIncludeItself stamp: 'EMI 11/16/2020 15:54:39'!
PASSED!

!testRun: #PortfolioTest #test13ComposedPortfolioCanNotHaveParentPortfolioAccount stamp: 'EMI 11/16/2020 15:54:39'!
PASSED!

!testRun: #PortfolioTest #test14ComposedPortfolioCanNotHaveAccountOfAnyRootParentRecursively stamp: 'EMI 11/16/2020 15:54:39'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotIncludeAnyOfTheComposedAccountOfPortfolioToAdd stamp: 'EMI 11/16/2020 15:54:39'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioHasDefaultName stamp: 'EMI 11/16/2020 15:54:39'!
FAILURE!

!testRun: #PortfolioTest #test17CanCreatePortfolioWithName stamp: 'EMI 11/16/2020 15:54:39'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioHasDefaultName stamp: 'EMI 11/16/2020 15:54:39'!
FAILURE!

!classDefinition: #Account category: 'Portfolio2-Ejercicio' stamp: 'EMI 11/16/2020 15:55:34'!
Object subclass: #Account
	instanceVariableNames: 'name'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio2-Ejercicio'!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'EMI 11/16/2020 15:55:34' prior: 50914208 overrides: 50912021!
named
	^name .! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'EMI 11/16/2020 15:55:34' prior: 50914286 overrides: 16896425!
initialize
	name _ 'Unnamed Portfolio'.
	accounts := OrderedCollection new.
	parents := OrderedCollection new.! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'EMI 11/16/2020 15:55:34' prior: 50914212!
initializeWithName: aString 
	self initialize.
	name := aString.! !
!ReceptiveAccount methodsFor: 'as yet unclassified' stamp: 'EMI 11/16/2020 15:55:34' prior: 50911701 overrides: 50912021!
named
	^name.! !
!ReceptiveAccount methodsFor: 'as yet unclassified' stamp: 'EMI 11/16/2020 15:55:34' prior: 50913049 overrides: 16896425!
initialize
	super initialize.
	transactions := OrderedCollection new.
	name _ 'Unnamed Account'.! !
!ReceptiveAccount methodsFor: 'as yet unclassified' stamp: 'EMI 11/16/2020 15:55:34' prior: 50911724!
initializeWithName: aString 
	self initialize.
	name _ aString.! !
!Portfolio methodsFor: 'names' stamp: 'EMI 11/16/2020 15:56:15'!
accountName
	^name .! !

!methodRemoval: Portfolio #named stamp: 'EMI 11/16/2020 15:56:15'!
named
	^name .!
!ReceptiveAccount methodsFor: 'names' stamp: 'EMI 11/16/2020 15:56:30'!
accountName
	^name.! !

!methodRemoval: ReceptiveAccount #named stamp: 'EMI 11/16/2020 15:56:30'!
named
	^name.!
!Account methodsFor: 'names' stamp: 'EMI 11/16/2020 15:57:06'!
accountName
	^self subclassResponsibility.! !

!methodRemoval: Account #named stamp: 'EMI 11/16/2020 15:57:06'!
named
	^self subclassResponsibility.!
!PortfolioTest methodsFor: 'tests' stamp: 'EMI 11/16/2020 15:57:24' prior: 50911813!
test17CanCreatePortfolioWithName
	| portfolio |
	
	portfolio _ Portfolio withName: 'Test Portfolio'.
	
	self assert: portfolio accountName equals: 'Test Portfolio'.! !
!PortfolioTest methodsFor: 'tests' stamp: 'EMI 11/16/2020 15:57:32' prior: 50911789!
test16PortfolioHasDefaultName
	| portfolio |
	
	portfolio _ Portfolio new.
	
	self assert: portfolio accountName equals: 'Unnamed portfolio'.! !
!ReceptiveAccountTest methodsFor: 'tests - account' stamp: 'EMI 11/16/2020 15:57:44' prior: 50911588!
test12AccountHasDefaultName
	| account |
	account _ ReceptiveAccount new.
	
	self assert: account accountName equals: 'Unnamed account'.! !
!ReceptiveAccountTest methodsFor: 'tests - account' stamp: 'EMI 11/16/2020 15:57:52' prior: 50911636!
test13CanCreateAccountWithName
	| account |
	account _ ReceptiveAccount withName: 'Test account'.
	
	self assert: account accountName equals: 'Test account'.! !

!testRun: #PortfolioTest #test01BalanceOfPortfolioWithoutAccountsIsZero stamp: 'EMI 11/16/2020 15:57:57'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithOneAccountIsAccountBalance stamp: 'EMI 11/16/2020 15:57:57'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioIsCalculatedRecursivelyOnPortfolios stamp: 'EMI 11/16/2020 15:57:57'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithoutAccountsHasNoRegisteredTransaction stamp: 'EMI 11/16/2020 15:57:57'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredItsAccountsTransactions stamp: 'EMI 11/16/2020 15:57:57'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioLooksForRegisteredTransactionsRecursively stamp: 'EMI 11/16/2020 15:57:57'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioHasNoTransactionWhenHasNoAccounts stamp: 'EMI 11/16/2020 15:57:57'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTransactionsIncludesAllItsAccountsTransactions stamp: 'EMI 11/16/2020 15:57:57'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioTransactionsAreCalculatedRecursively stamp: 'EMI 11/16/2020 15:57:57'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCanNotIncludeTheSameAccountMoreThanOnce stamp: 'EMI 11/16/2020 15:57:57'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCanNotIncludeAccountOfItsPortfolios stamp: 'EMI 11/16/2020 15:57:57'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioCanNotIncludeItself stamp: 'EMI 11/16/2020 15:57:57'!
PASSED!

!testRun: #PortfolioTest #test13ComposedPortfolioCanNotHaveParentPortfolioAccount stamp: 'EMI 11/16/2020 15:57:57'!
PASSED!

!testRun: #PortfolioTest #test14ComposedPortfolioCanNotHaveAccountOfAnyRootParentRecursively stamp: 'EMI 11/16/2020 15:57:57'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotIncludeAnyOfTheComposedAccountOfPortfolioToAdd stamp: 'EMI 11/16/2020 15:57:57'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioHasDefaultName stamp: 'EMI 11/16/2020 15:57:57'!
FAILURE!

!testRun: #PortfolioTest #test17CanCreatePortfolioWithName stamp: 'EMI 11/16/2020 15:57:57'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioHasDefaultName stamp: 'EMI 11/16/2020 15:57:57'!
FAILURE!
!PortfolioTest methodsFor: 'tests' stamp: 'EMI 11/16/2020 15:58:05' prior: 50914432!
test16PortfolioHasDefaultName
	| portfolio |
	
	portfolio _ Portfolio new.
	
	self assert: portfolio accountName equals: 'Unnamed Portfolio'.! !

!testRun: #PortfolioTest #test16PortfolioHasDefaultName stamp: 'EMI 11/16/2020 15:58:06'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'EMI 11/16/2020 15:58:09'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'EMI 11/16/2020 15:58:09'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'EMI 11/16/2020 15:58:09'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'EMI 11/16/2020 15:58:09'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'EMI 11/16/2020 15:58:09'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'EMI 11/16/2020 15:58:09'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'EMI 11/16/2020 15:58:09'!
PASSED!

!testRun: #ReceptiveAccountTest #test08AccountCanTransferToAnotherAccountWithPositiveAmount stamp: 'EMI 11/16/2020 15:58:09'!
PASSED!

!testRun: #ReceptiveAccountTest #test09AccountsWithTransferKnowsOriginAndDestination stamp: 'EMI 11/16/2020 15:58:09'!
PASSED!

!testRun: #ReceptiveAccountTest #test10AccountsCannotTransferInvalidAmounts stamp: 'EMI 11/16/2020 15:58:09'!
PASSED!

!testRun: #ReceptiveAccountTest #test11AccountsCannotTransferToThemselves stamp: 'EMI 11/16/2020 15:58:09'!
PASSED!

!testRun: #ReceptiveAccountTest #test12AccountHasDefaultName stamp: 'EMI 11/16/2020 15:58:09'!
FAILURE!

!testRun: #ReceptiveAccountTest #test13CanCreateAccountWithName stamp: 'EMI 11/16/2020 15:58:09'!
PASSED!

!testRun: #ReceptiveAccountTest #test12AccountHasDefaultName stamp: 'EMI 11/16/2020 15:58:09'!
FAILURE!
!ReceptiveAccountTest methodsFor: 'tests - account' stamp: 'EMI 11/16/2020 15:58:17' prior: 50914440!
test12AccountHasDefaultName
	| account |
	account _ ReceptiveAccount new.
	
	self assert: account accountName equals: 'Unnamed Account'.! !

!testRun: #ReceptiveAccountTest #test12AccountHasDefaultName stamp: 'EMI 11/16/2020 15:58:18'!
PASSED!
!Account methodsFor: 'names' stamp: 'EMI 11/16/2020 15:58:50' prior: 50914416!
accountName
	^name.! !

!methodRemoval: Portfolio #accountName stamp: 'EMI 11/16/2020 15:58:58'!
accountName
	^name .!

!methodRemoval: ReceptiveAccount #accountName stamp: 'EMI 11/16/2020 15:59:09'!
accountName
	^name.!

!testRun: #PortfolioTest #test01BalanceOfPortfolioWithoutAccountsIsZero stamp: 'EMI 11/16/2020 15:59:27'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithOneAccountIsAccountBalance stamp: 'EMI 11/16/2020 15:59:27'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioIsCalculatedRecursivelyOnPortfolios stamp: 'EMI 11/16/2020 15:59:27'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithoutAccountsHasNoRegisteredTransaction stamp: 'EMI 11/16/2020 15:59:27'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredItsAccountsTransactions stamp: 'EMI 11/16/2020 15:59:27'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioLooksForRegisteredTransactionsRecursively stamp: 'EMI 11/16/2020 15:59:27'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioHasNoTransactionWhenHasNoAccounts stamp: 'EMI 11/16/2020 15:59:27'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTransactionsIncludesAllItsAccountsTransactions stamp: 'EMI 11/16/2020 15:59:27'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioTransactionsAreCalculatedRecursively stamp: 'EMI 11/16/2020 15:59:27'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCanNotIncludeTheSameAccountMoreThanOnce stamp: 'EMI 11/16/2020 15:59:27'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCanNotIncludeAccountOfItsPortfolios stamp: 'EMI 11/16/2020 15:59:27'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioCanNotIncludeItself stamp: 'EMI 11/16/2020 15:59:27'!
PASSED!

!testRun: #PortfolioTest #test13ComposedPortfolioCanNotHaveParentPortfolioAccount stamp: 'EMI 11/16/2020 15:59:27'!
PASSED!

!testRun: #PortfolioTest #test14ComposedPortfolioCanNotHaveAccountOfAnyRootParentRecursively stamp: 'EMI 11/16/2020 15:59:27'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotIncludeAnyOfTheComposedAccountOfPortfolioToAdd stamp: 'EMI 11/16/2020 15:59:27'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioHasDefaultName stamp: 'EMI 11/16/2020 15:59:27'!
PASSED!

!testRun: #PortfolioTest #test17CanCreatePortfolioWithName stamp: 'EMI 11/16/2020 15:59:27'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'EMI 11/16/2020 15:59:29'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'EMI 11/16/2020 15:59:29'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'EMI 11/16/2020 15:59:29'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'EMI 11/16/2020 15:59:29'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'EMI 11/16/2020 15:59:29'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'EMI 11/16/2020 15:59:29'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'EMI 11/16/2020 15:59:29'!
PASSED!

!testRun: #ReceptiveAccountTest #test08AccountCanTransferToAnotherAccountWithPositiveAmount stamp: 'EMI 11/16/2020 15:59:29'!
PASSED!

!testRun: #ReceptiveAccountTest #test09AccountsWithTransferKnowsOriginAndDestination stamp: 'EMI 11/16/2020 15:59:29'!
PASSED!

!testRun: #ReceptiveAccountTest #test10AccountsCannotTransferInvalidAmounts stamp: 'EMI 11/16/2020 15:59:29'!
PASSED!

!testRun: #ReceptiveAccountTest #test11AccountsCannotTransferToThemselves stamp: 'EMI 11/16/2020 15:59:29'!
PASSED!

!testRun: #ReceptiveAccountTest #test12AccountHasDefaultName stamp: 'EMI 11/16/2020 15:59:29'!
PASSED!

!testRun: #ReceptiveAccountTest #test13CanCreateAccountWithName stamp: 'EMI 11/16/2020 15:59:29'!
PASSED!
!PortfolioStructureReport methodsFor: 'reporting - private' stamp: 'EMI 11/16/2020 16:01:05' prior: 50913901 overrides: 50913913!
beginReportPortfolio: aPortfolio
	reportCollection add: (self identString: ('Portfolio de ', aPortfolio accountName)).
	currentIdent _ currentIdent + 1.! !
!PortfolioStructureReport methodsFor: 'reporting - private' stamp: 'EMI 11/16/2020 16:01:13' prior: 50912476 overrides: 50912995!
reportAccount: anAccount
	reportCollection add: (self identString: ('Cuenta de ', anAccount accountName)).! !
!AccountSummaryReport methodsFor: 'reporting - private' stamp: 'EMI 11/16/2020 16:02:00'!
reportReceptiveAccount: aReceptiveAccount! !
!NetTransfersReport methodsFor: 'reporting - private' stamp: 'EMI 11/16/2020 16:02:00'!
reportReceptiveAccount: aReceptiveAccount ! !
!Report methodsFor: 'reporting - private' stamp: 'EMI 11/16/2020 16:02:00'!
reportReceptiveAccount: anAccount.
	self subclassResponsibility.! !
!PortfolioStructureReport methodsFor: 'reporting - private' stamp: 'EMI 11/16/2020 16:02:00' overrides: 50914749!
reportReceptiveAccount: anAccount
	reportCollection add: (self identString: ('Cuenta de ', anAccount accountName)).! !
!AccountSpecialReport methodsFor: 'reporting - private' stamp: 'EMI 11/16/2020 16:02:00' overrides: 50914749!
reportReceptiveAccount: aReceptiveAccount 
	| summary summaryReport|
	summaryCollection add: (self identString: ('Cuenta de ', aReceptiveAccount named)).
	
	summary _ AccountSummaryReport of: aReceptiveAccount.
	summaryReport _ summary report.
	summaryReport do: [:aSummaryLine | summaryCollection add: (self identString: aSummaryLine withAmount: (currentIdent + 1))].! !
!ReceptiveAccount methodsFor: 'as yet unclassified' stamp: 'EMI 11/16/2020 16:02:00' prior: 50912579 overrides: 50908371!
reportTo: aReport
	aReport reportReceptiveAccount: self.
	transactions do:[:aTransaction |aTransaction reportTo: aReport].! !

!methodRemoval: AccountSummaryReport #reportAccount: stamp: 'EMI 11/16/2020 16:02:00'!
reportAccount: aReceptiveAccount!

!methodRemoval: NetTransfersReport #reportAccount: stamp: 'EMI 11/16/2020 16:02:00'!
reportAccount: aReceptiveAccount !

!methodRemoval: Report #reportAccount: stamp: 'EMI 11/16/2020 16:02:00'!
reportAccount: anAccount.
	self subclassResponsibility.!

!methodRemoval: PortfolioStructureReport #reportAccount: stamp: 'EMI 11/16/2020 16:02:00'!
reportAccount: anAccount
	reportCollection add: (self identString: ('Cuenta de ', anAccount accountName)).!

!methodRemoval: AccountSpecialReport #reportAccount: stamp: 'EMI 11/16/2020 16:02:00'!
reportAccount: aReceptiveAccount 
	| summary summaryReport|
	summaryCollection add: (self identString: ('Cuenta de ', aReceptiveAccount named)).
	
	summary _ AccountSummaryReport of: aReceptiveAccount.
	summaryReport _ summary report.
	summaryReport do: [:aSummaryLine | summaryCollection add: (self identString: aSummaryLine withAmount: (currentIdent + 1))].!
!AccountSpecialReport methodsFor: 'reporting - private' stamp: 'EMI 11/16/2020 16:02:17' prior: 50914763 overrides: 50914749!
reportReceptiveAccount: aReceptiveAccount 
	| summary summaryReport|
	summaryCollection add: (self identString: ('Cuenta de ', aReceptiveAccount accountName)).
	
	summary _ AccountSummaryReport of: aReceptiveAccount.
	summaryReport _ summary report.
	summaryReport do: [:aSummaryLine | summaryCollection add: (self identString: aSummaryLine withAmount: (currentIdent + 1))].! !
!AccountSpecialReport methodsFor: 'reporting - private' stamp: 'EMI 11/16/2020 16:02:34' prior: 50913893 overrides: 50913913!
beginReportPortfolio: aPortfolio 
	summaryCollection add: (self identString: ('Portfolio de ', aPortfolio accountName)).
	currentIdent _ currentIdent + 1.! !
!PortfolioStructureReport methodsFor: 'reporting - private' stamp: 'EMI 11/16/2020 16:03:11' prior: 50914755 overrides: 50914749!
reportReceptiveAccount: aReceptiveAccount
	reportCollection add: (self identString: ('Cuenta de ', aReceptiveAccount accountName)).! !

----SNAPSHOT----(16 November 2020 16:03:14) CuisUniversity-4383.image priorSource: 18640221!

!classDefinition: #PortfolioStructureReport category: 'Portfolio2-Ejercicio' stamp: 'EMI 11/16/2020 16:05:55'!
Report subclass: #PortfolioStructureReport
	instanceVariableNames: 'reportCollection currentIdentationLevel'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio2-Ejercicio'!
!PortfolioStructureReport methodsFor: 'as yet unclassified' stamp: 'EMI 11/16/2020 16:05:55' prior: 50913972 overrides: 50913957!
endReportPortfolio: aPortfolio.
	currentIdentationLevel _ currentIdentationLevel - 1.! !
!PortfolioStructureReport methodsFor: 'as yet unclassified' stamp: 'EMI 11/16/2020 16:05:55' prior: 50914724 overrides: 50913913!
beginReportPortfolio: aPortfolio
	reportCollection add: (self identString: ('Portfolio de ', aPortfolio accountName)).
	currentIdentationLevel _ currentIdentationLevel + 1.! !
!PortfolioStructureReport methodsFor: 'as yet unclassified' stamp: 'EMI 11/16/2020 16:05:55' prior: 50912441!
identString: aString
	^(String new: (3*currentIdentationLevel) withAll: Character space), aString.! !
!PortfolioStructureReport methodsFor: 'as yet unclassified' stamp: 'EMI 11/16/2020 16:05:55' prior: 50912468 overrides: 50909567!
report
	reportCollection _ OrderedCollection new.
	currentIdentationLevel _ 0.
	account reportTo: self.
	^reportCollection.! !

!classDefinition: #AccountSpecialReport category: 'Portfolio2-Ejercicio' stamp: 'EMI 11/16/2020 16:06:07'!
Report subclass: #AccountSpecialReport
	instanceVariableNames: 'summaryCollection currentIdentationLevel'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio2-Ejercicio'!
!AccountSpecialReport methodsFor: 'as yet unclassified' stamp: 'EMI 11/16/2020 16:06:07' prior: 50913596 overrides: 50909567!
report
       summaryCollection _ OrderedCollection new.
	currentIdentationLevel _ 0.
	account reportTo: self.
	^summaryCollection.! !
!AccountSpecialReport methodsFor: 'as yet unclassified' stamp: 'EMI 11/16/2020 16:06:07' prior: 50914819 overrides: 50914749!
reportReceptiveAccount: aReceptiveAccount 
	| summary summaryReport|
	summaryCollection add: (self identString: ('Cuenta de ', aReceptiveAccount accountName)).
	
	summary _ AccountSummaryReport of: aReceptiveAccount.
	summaryReport _ summary report.
	summaryReport do: [:aSummaryLine | summaryCollection add: (self identString: aSummaryLine withAmount: (currentIdentationLevel + 1))].! !
!AccountSpecialReport methodsFor: 'as yet unclassified' stamp: 'EMI 11/16/2020 16:06:07' prior: 50914835 overrides: 50913913!
beginReportPortfolio: aPortfolio 
	summaryCollection add: (self identString: ('Portfolio de ', aPortfolio accountName)).
	currentIdentationLevel _ currentIdentationLevel + 1.! !
!AccountSpecialReport methodsFor: 'as yet unclassified' stamp: 'EMI 11/16/2020 16:06:07' prior: 50913618!
identString: aString
	^(String new: (3*currentIdentationLevel) withAll: Character space), aString.! !
!AccountSpecialReport methodsFor: 'as yet unclassified' stamp: 'EMI 11/16/2020 16:06:07' prior: 50914128 overrides: 50913957!
endReportPortfolio: aPortfolio.
	summaryCollection add: (self identString: ('Balance = ', aPortfolio balance asString)).
	currentIdentationLevel _ currentIdentationLevel - 1.! !

----SNAPSHOT----(16 November 2020 16:07:46) CuisUniversity-4383.image priorSource: 18662406!

----SNAPSHOT----(16 November 2020 16:10:08) CuisUniversity-4383.image priorSource: 18665841!

----SNAPSHOT----(16 November 2020 16:10:53) CuisUniversity-4383.image priorSource: 18665935!
!String methodsFor: '*Portfolio2' stamp: 'EMI 11/16/2020 16:14:56'!
identString: aString byAmount: anAmount
	^(String new: anAmount withAll: Character space), aString.! !
!AccountSpecialReport methodsFor: 'reporting - private' stamp: 'EMI 11/16/2020 16:15:52' prior: 50914933 overrides: 50913913!
beginReportPortfolio: aPortfolio 
	summaryCollection add: (self identString: ('Portfolio de ', aPortfolio accountName)).
	summaryCollection add: ('Portfolio de ', aPortfolio accountName).
	currentIdentationLevel _ currentIdentationLevel + 1.! !
!AccountSpecialReport methodsFor: 'reporting - private' stamp: 'EMI 11/16/2020 16:15:55' prior: 50914975 overrides: 50913913!
beginReportPortfolio: aPortfolio 
	summaryCollection add: (self identString: ('Portfolio de ', aPortfolio accountName)).
	currentIdentationLevel _ currentIdentationLevel + 1.! !
!String methodsFor: '*Portfolio2' stamp: 'EMI 11/16/2020 16:17:37'!
identbyAmount: anAmount
	^(String new: anAmount withAll: Character space), self.! !

!methodRemoval: String #identString:byAmount: stamp: 'EMI 11/16/2020 16:17:42'!
identString: aString byAmount: anAmount
	^(String new: anAmount withAll: Character space), aString.!
!String methodsFor: '*Portfolio2' stamp: 'EMI 11/16/2020 16:17:50'!
identByAmount: anAmount
	^(String new: anAmount withAll: Character space), self.! !

!methodRemoval: String #identbyAmount: stamp: 'EMI 11/16/2020 16:17:50'!
identbyAmount: anAmount
	^(String new: anAmount withAll: Character space), self.!
!AccountSpecialReport methodsFor: 'reporting - private' stamp: 'EMI 11/16/2020 16:18:51' prior: 50914987 overrides: 50913913!
beginReportPortfolio: aPortfolio 
	summaryCollection add: (('Portfolio de ', aPortfolio accountName) identByAmount: currentIdentationLevel).
	currentIdentationLevel _ currentIdentationLevel + 1.! !
!AccountSpecialReport methodsFor: 'reporting - private' stamp: 'EMI 11/16/2020 16:18:56' prior: 50915018 overrides: 50913913!
beginReportPortfolio: aPortfolio 
	summaryCollection add: (('Portfolio de ', aPortfolio accountName) identByAmount: (3*currentIdentationLevel)).
	currentIdentationLevel _ currentIdentationLevel + 1.! !

----SNAPSHOT----(16 November 2020 16:19:01) CuisUniversity-4383.image priorSource: 18666029!

!testRun: #AccountSpecialReportTest #test01EmptyPortfolioOnlyShowsName stamp: 'EMI 11/16/2020 16:19:08'!
PASSED!

!testRun: #AccountSpecialReportTest #test02PortfolioWithAnAccountWithADepositShowsNamesAndIdentation stamp: 'EMI 11/16/2020 16:19:08'!
PASSED!
!AccountSpecialReport methodsFor: 'reporting - private' stamp: 'EMI 11/16/2020 16:19:30' prior: 50915029 overrides: 50913913!
beginReportPortfolio: aPortfolio 
	summaryCollection add: (('Portfolio de ', aPortfolio accountName) identByAmount: currentIdentationLevel).
	currentIdentationLevel _ currentIdentationLevel + 3.! !
!AccountSpecialReport methodsFor: 'reporting - private' stamp: 'EMI 11/16/2020 16:19:50' prior: 50914950 overrides: 50913957!
endReportPortfolio: aPortfolio.
	summaryCollection add: (('Balance = ', aPortfolio balance asString) identByAmount: currentIdentationLevel).
	currentIdentationLevel _ currentIdentationLevel - 3.! !
!AccountSpecialReport methodsFor: 'reporting - private' stamp: 'EMI 11/16/2020 16:21:13' prior: 50914916 overrides: 50914749!
reportReceptiveAccount: aReceptiveAccount 
	| summary summaryReport|
	summaryCollection add: (('Cuenta de ', aReceptiveAccount accountName) identByAmount: currentIdentationLevel).
	
	summary _ AccountSummaryReport of: aReceptiveAccount.
	summaryReport _ summary report.
	summaryReport do: [:aSummaryLine | summaryCollection add: (aSummaryLine identByAmount: (currentIdentationLevel + 3))].! !

!testRun: #AccountSpecialReportTest #test01EmptyPortfolioOnlyShowsName stamp: 'EMI 11/16/2020 16:21:23'!
PASSED!

!testRun: #AccountSpecialReportTest #test02PortfolioWithAnAccountWithADepositShowsNamesAndIdentation stamp: 'EMI 11/16/2020 16:21:23'!
PASSED!
!PortfolioStructureReport methodsFor: 'reporting - private' stamp: 'EMI 11/16/2020 16:22:05' prior: 50914844 overrides: 50914749!
reportReceptiveAccount: aReceptiveAccount
	reportCollection add: (('Cuenta de ', aReceptiveAccount accountName) identByAmount: currentIdentationLevel).! !
!PortfolioStructureReport methodsFor: 'reporting - private' stamp: 'EMI 11/16/2020 16:22:27' prior: 50914872 overrides: 50913913!
beginReportPortfolio: aPortfolio
	reportCollection add: (('Portfolio de ', aPortfolio accountName) identByAmount: currentIdentationLevel).
	currentIdentationLevel _ currentIdentationLevel + 3.! !
!PortfolioStructureReport methodsFor: 'reporting - private' stamp: 'EMI 11/16/2020 16:22:35' prior: 50914865 overrides: 50913957!
endReportPortfolio: aPortfolio.
	currentIdentationLevel _ currentIdentationLevel - 3.! !

----SNAPSHOT----(16 November 2020 16:22:57) CuisUniversity-4383.image priorSource: 18668393!

!testRun: #PortfolioStructureReportTest #test01ReportOfAnEmptyPortfolioStructureHasCorrectName stamp: 'EMI 11/16/2020 16:23:01'!
PASSED!

!testRun: #PortfolioStructureReportTest #test02ReportOfASimplePortfolioStructureHasCorrectNamesAndIdentation stamp: 'EMI 11/16/2020 16:23:01'!
PASSED!

!testRun: #PortfolioStructureReportTest #test03ReportOfAListPortfolioStructureHasCorrectNamesAndIdentation stamp: 'EMI 11/16/2020 16:23:01'!
PASSED!

!testRun: #PortfolioStructureReportTest #test04ReportOfAListOfNamedPortfolioStructureHasCorrectNamesAndIdentation stamp: 'EMI 11/16/2020 16:23:01'!
PASSED!

!testRun: #PortfolioStructureReportTest #test05ReportOfAListOfNamedPortfolioStructureHasCorrectNamesAndIdentation stamp: 'EMI 11/16/2020 16:23:01'!
PASSED!

!methodRemoval: AccountSpecialReport #identString: stamp: 'EMI 11/16/2020 16:23:13'!
identString: aString
	^(String new: (3*currentIdentationLevel) withAll: Character space), aString.!

!methodRemoval: AccountSpecialReport #identString:withAmount: stamp: 'EMI 11/16/2020 16:23:17'!
identString: aString withAmount: anAmount
	^(String new: (3*anAmount) withAll: Character space), aString.!

!methodRemoval: PortfolioStructureReport #identString: stamp: 'EMI 11/16/2020 16:23:29'!
identString: aString
	^(String new: (3*currentIdentationLevel) withAll: Character space), aString.!
!Report class methodsFor: 'nil' stamp: 'EMI 11/16/2020 16:24:30'!
identationSpacesPerLevel
	^3.! !
!AccountSpecialReport methodsFor: 'reporting - private' stamp: 'EMI 11/16/2020 16:24:47' prior: 50915051 overrides: 50913913!
beginReportPortfolio: aPortfolio 
	summaryCollection add: (('Portfolio de ', aPortfolio accountName) identByAmount: currentIdentationLevel).
	currentIdentationLevel _ currentIdentationLevel + self class identationSpacesPerLevel.! !
!AccountSpecialReport methodsFor: 'reporting - private' stamp: 'EMI 11/16/2020 16:24:54' prior: 50915062 overrides: 50913957!
endReportPortfolio: aPortfolio.
	summaryCollection add: (('Balance = ', aPortfolio balance asString) identByAmount: currentIdentationLevel).
	currentIdentationLevel _ currentIdentationLevel - self class identationSpacesPerLevel.! !
!PortfolioStructureReport methodsFor: 'reporting - private' stamp: 'EMI 11/16/2020 16:25:01' prior: 50915107 overrides: 50913913!
beginReportPortfolio: aPortfolio
	reportCollection add: (('Portfolio de ', aPortfolio accountName) identByAmount: currentIdentationLevel).
	currentIdentationLevel _ currentIdentationLevel + self class identationSpacesPerLevel.! !
!PortfolioStructureReport methodsFor: 'reporting - private' stamp: 'EMI 11/16/2020 16:25:05' prior: 50915118 overrides: 50913957!
endReportPortfolio: aPortfolio.
	currentIdentationLevel _ currentIdentationLevel - self class identationSpacesPerLevel.! !
!AccountSpecialReport methodsFor: 'reporting - private' stamp: 'EMI 11/16/2020 16:25:15' prior: 50915073 overrides: 50914749!
reportReceptiveAccount: aReceptiveAccount 
	| summary summaryReport|
	summaryCollection add: (('Cuenta de ', aReceptiveAccount accountName) identByAmount: currentIdentationLevel).
	
	summary _ AccountSummaryReport of: aReceptiveAccount.
	summaryReport _ summary report.
	summaryReport do: [:aSummaryLine | summaryCollection add: (aSummaryLine identByAmount: (currentIdentationLevel + self class identationSpacesPerLevel))].! !

!testRun: #PortfolioStructureReportTest #test01ReportOfAnEmptyPortfolioStructureHasCorrectName stamp: 'EMI 11/16/2020 16:25:28'!
PASSED!

!testRun: #PortfolioStructureReportTest #test02ReportOfASimplePortfolioStructureHasCorrectNamesAndIdentation stamp: 'EMI 11/16/2020 16:25:28'!
PASSED!

!testRun: #PortfolioStructureReportTest #test03ReportOfAListPortfolioStructureHasCorrectNamesAndIdentation stamp: 'EMI 11/16/2020 16:25:28'!
PASSED!

!testRun: #PortfolioStructureReportTest #test04ReportOfAListOfNamedPortfolioStructureHasCorrectNamesAndIdentation stamp: 'EMI 11/16/2020 16:25:28'!
PASSED!

!testRun: #PortfolioStructureReportTest #test05ReportOfAListOfNamedPortfolioStructureHasCorrectNamesAndIdentation stamp: 'EMI 11/16/2020 16:25:28'!
PASSED!

!testRun: #AccountSpecialReportTest #test01EmptyPortfolioOnlyShowsName stamp: 'EMI 11/16/2020 16:25:33'!
PASSED!

!testRun: #AccountSpecialReportTest #test02PortfolioWithAnAccountWithADepositShowsNamesAndIdentation stamp: 'EMI 11/16/2020 16:25:33'!
PASSED!

----SNAPSHOT----(16 November 2020 16:26:21) CuisUniversity-4383.image priorSource: 18671128!
!AccountSpecialReportTest methodsFor: 'as yet unclassified' stamp: 'EMI 11/16/2020 16:26:57' prior: 50914074!
test01EmptyPortfolioOnlyShowsName
	| portfolio report expectedResult |
	portfolio _ Portfolio new.
	report _ AccountSpecialReport of: portfolio.
	expectedResult _ OrderedCollection with: 'Portfolio de Unnamed Portfolio'
								    with: ('Balance = 0' identByAmount: Report identationSpacesPerLevel * 1).
	self assert: report report equals: expectedResult.! !

!testRun: #AccountSpecialReportTest #test01EmptyPortfolioOnlyShowsName stamp: 'EMI 11/16/2020 16:26:59'!
PASSED!
!AccountSpecialReportTest methodsFor: 'as yet unclassified' stamp: 'EMI 11/16/2020 16:27:11' prior: 50915269!
test01EmptyPortfolioOnlyShowsName
	| portfolio report expectedResult |
	portfolio _ Portfolio new.
	report _ AccountSpecialReport of: portfolio.
	expectedResult _ OrderedCollection with: 'Portfolio de Unnamed Portfolio'
								    with: ('Balance = 0' identByAmount: Report identationSpacesPerLevel * 1).
	self assert: report report equals: expectedResult.! !
!AccountSpecialReportTest methodsFor: 'as yet unclassified' stamp: 'EMI 11/16/2020 16:28:27' prior: 50914089!
test02PortfolioWithAnAccountWithADepositShowsNamesAndIdentation
	| portfolio account report expectedResult |
	portfolio _ Portfolio withName: 'Compania de Pepe'.
	account _ ReceptiveAccount withName: 'Suiza'.
	Deposit register: 10 on: account.
	portfolio add: account.
	report _ AccountSpecialReport of: portfolio.
	expectedResult _ OrderedCollection with: 'Portfolio de Compania de Pepe' 
								    with: ('Cuenta de Suiza' identByAmount: Report identationSpacesPerLevel *1) 
								    with: ('Dep�sito por 10.' identByAmount: Report identationSpacesPerLevel * 2) 
								    with: ('Balance = 10.' identByAmount: Report identationSpacesPerLevel * 2)
								    with: ('Balance = 10' identByAmount: Report identationSpacesPerLevel * 1).
	self assert: report report equals: expectedResult.! !

!testRun: #AccountSpecialReportTest #test02PortfolioWithAnAccountWithADepositShowsNamesAndIdentation stamp: 'EMI 11/16/2020 16:28:29'!
PASSED!

!methodRemoval: AccountSpecialReportTest class #identString:amount: stamp: 'EMI 11/16/2020 16:30:04'!
identString: aString amount: anAmount
	^(String new: (3*anAmount) withAll: Character space), aString.!
!PortfolioStructureReportTest methodsFor: 'tests' stamp: 'EMI 11/16/2020 16:31:22' prior: 50913056!
test02ReportOfASimplePortfolioStructureHasCorrectNamesAndIdentation
	| portfolio account report expectedResult |
	portfolio _ Portfolio new.
	account _ ReceptiveAccount new.
	portfolio add: account.
	report _ PortfolioStructureReport of: portfolio.
	
	expectedResult _ OrderedCollection with: 'Portfolio de Unnamed Portfolio' 
								    with: ('Cuenta de Unnamed Account' identByAmount: Report  identationSpacesPerLevel * 1).
	self assert: report report equals: expectedResult.! !

!testRun: #PortfolioStructureReportTest #test02ReportOfASimplePortfolioStructureHasCorrectNamesAndIdentation stamp: 'EMI 11/16/2020 16:31:23'!
PASSED!

!testRun: #PortfolioStructureReportTest #test01ReportOfAnEmptyPortfolioStructureHasCorrectName stamp: 'EMI 11/16/2020 16:31:23'!
PASSED!

!testRun: #PortfolioStructureReportTest #test02ReportOfASimplePortfolioStructureHasCorrectNamesAndIdentation stamp: 'EMI 11/16/2020 16:31:23'!
PASSED!

!testRun: #PortfolioStructureReportTest #test03ReportOfAListPortfolioStructureHasCorrectNamesAndIdentation stamp: 'EMI 11/16/2020 16:31:23'!
PASSED!

!testRun: #PortfolioStructureReportTest #test04ReportOfAListOfNamedPortfolioStructureHasCorrectNamesAndIdentation stamp: 'EMI 11/16/2020 16:31:23'!
PASSED!

!testRun: #PortfolioStructureReportTest #test05ReportOfAListOfNamedPortfolioStructureHasCorrectNamesAndIdentation stamp: 'EMI 11/16/2020 16:31:23'!
PASSED!
!PortfolioStructureReportTest methodsFor: 'tests' stamp: 'EMI 11/16/2020 16:32:27' prior: 50913124!
test03ReportOfAListPortfolioStructureHasCorrectNamesAndIdentation
	| portfolio portfolioChild account report expectedResult |
	portfolio _ Portfolio new.
	portfolioChild _ Portfolio new.
	account _ ReceptiveAccount new.
	portfolioChild add: account.
	portfolio add: portfolioChild.
	report _ PortfolioStructureReport of: portfolio.
	
	expectedResult _ OrderedCollection with: 'Portfolio de Unnamed Portfolio' 
	                                             							    with: ('Portfolio de Unnamed Portfolio' identByAmount: Report identationSpacesPerLevel * 1) 
								    with: ('Cuenta de Unnamed Account' identByAmount: Report identationSpacesPerLevel * 2).
	self assert: report report equals: expectedResult.! !

!testRun: #PortfolioStructureReportTest #test03ReportOfAListPortfolioStructureHasCorrectNamesAndIdentation stamp: 'EMI 11/16/2020 16:32:29'!
PASSED!

!testRun: #PortfolioStructureReportTest #test01ReportOfAnEmptyPortfolioStructureHasCorrectName stamp: 'EMI 11/16/2020 16:32:29'!
PASSED!

!testRun: #PortfolioStructureReportTest #test02ReportOfASimplePortfolioStructureHasCorrectNamesAndIdentation stamp: 'EMI 11/16/2020 16:32:29'!
PASSED!

!testRun: #PortfolioStructureReportTest #test03ReportOfAListPortfolioStructureHasCorrectNamesAndIdentation stamp: 'EMI 11/16/2020 16:32:29'!
PASSED!

!testRun: #PortfolioStructureReportTest #test04ReportOfAListOfNamedPortfolioStructureHasCorrectNamesAndIdentation stamp: 'EMI 11/16/2020 16:32:29'!
PASSED!

!testRun: #PortfolioStructureReportTest #test05ReportOfAListOfNamedPortfolioStructureHasCorrectNamesAndIdentation stamp: 'EMI 11/16/2020 16:32:29'!
PASSED!
!PortfolioStructureReportTest class methodsFor: 'as yet unclassified' stamp: 'EMI 11/16/2020 16:34:00'!
identString: aString byLevel: anIdentationLevel
	^aString identByAmount: Report identationSpacesPerLevel * anIdentationLevel.! !

!methodRemoval: PortfolioStructureReportTest class #identString:amount: stamp: 'EMI 11/16/2020 16:34:03'!
identString: aString amount: anAmount
	^(String new: (3*anAmount) withAll: Character space), aString.!
!PortfolioStructureReportTest methodsFor: 'tests' stamp: 'EMI 11/16/2020 16:34:27' prior: 50915343!
test02ReportOfASimplePortfolioStructureHasCorrectNamesAndIdentation
	| portfolio account report expectedResult |
	portfolio _ Portfolio new.
	account _ ReceptiveAccount new.
	portfolio add: account.
	report _ PortfolioStructureReport of: portfolio.
	
	expectedResult _ OrderedCollection with: 'Portfolio de Unnamed Portfolio' 
								    with: (self class identString:  'Cuenta de Unnamed Account' byLevel: 1).
	self assert: report report equals: expectedResult.! !
!PortfolioStructureReportTest methodsFor: 'tests' stamp: 'EMI 11/16/2020 16:35:09' prior: 50915390!
test03ReportOfAListPortfolioStructureHasCorrectNamesAndIdentation
	| portfolio portfolioChild account report expectedResult |
	portfolio _ Portfolio new.
	portfolioChild _ Portfolio new.
	account _ ReceptiveAccount new.
	portfolioChild add: account.
	portfolio add: portfolioChild.
	report _ PortfolioStructureReport of: portfolio.
	
	expectedResult _ OrderedCollection with: 'Portfolio de Unnamed Portfolio' 
	                                             							    with: (self class identString: 'Portfolio de Unnamed Portfolio'  byLevel: 1) 
								    with: (self class identString: 'Cuenta de Unnamed Account' byLevel: 2).
	self assert: report report equals: expectedResult.! !
!PortfolioStructureReportTest methodsFor: 'tests' stamp: 'EMI 11/16/2020 16:36:16' prior: 50913184!
test04ReportOfAListOfNamedPortfolioStructureHasCorrectNamesAndIdentation
	| portfolio portfolioChild account report expectedResult |
	portfolio _ Portfolio withName: 'Compania 1'.
	portfolioChild _ Portfolio withName: 'Pepe'.
	account _ ReceptiveAccount withName: 'Lavado de dinero'.
	portfolioChild add: account.
	portfolio add: portfolioChild.
	report _ PortfolioStructureReport of: portfolio.
	
	expectedResult _ OrderedCollection with: 'Portfolio de Compania 1' 
								    with: (self class identString: 'Portfolio de Pepe' byLevel: 1)
								    with: (self class identString: 'Cuenta de Lavado de dinero' byLevel: 2).
	self assert: report report equals: expectedResult.! !
!PortfolioStructureReportTest methodsFor: 'tests' stamp: 'EMI 11/16/2020 16:37:10' prior: 50913861!
test05ReportOfAListOfNamedPortfolioStructureHasCorrectNamesAndIdentation
	| portfolio portfolioChildLeft portfolioChildRight report expectedResult |
	portfolio _ Portfolio withName: 'Compania 1'.
	portfolioChildLeft _ Portfolio withName: 'Pepe'.
	portfolioChildRight _ Portfolio withName: 'Jose'.
	portfolio add: portfolioChildLeft.
	portfolio add: portfolioChildRight.
	report _ PortfolioStructureReport of: portfolio.
	
	expectedResult _ OrderedCollection with: 'Portfolio de Compania 1' 
								    with: (self class identString: 'Portfolio de Pepe' byLevel: 1) 
								    with: (self class identString: 'Portfolio de Jose' byLevel: 1) .
	self assert: report report equals: expectedResult.! !

!testRun: #PortfolioStructureReportTest #test05ReportOfAListOfNamedPortfolioStructureHasCorrectNamesAndIdentation stamp: 'EMI 11/16/2020 16:37:11'!
PASSED!

!testRun: #PortfolioStructureReportTest #test01ReportOfAnEmptyPortfolioStructureHasCorrectName stamp: 'EMI 11/16/2020 16:37:11'!
PASSED!

!testRun: #PortfolioStructureReportTest #test02ReportOfASimplePortfolioStructureHasCorrectNamesAndIdentation stamp: 'EMI 11/16/2020 16:37:11'!
PASSED!

!testRun: #PortfolioStructureReportTest #test03ReportOfAListPortfolioStructureHasCorrectNamesAndIdentation stamp: 'EMI 11/16/2020 16:37:11'!
PASSED!

!testRun: #PortfolioStructureReportTest #test04ReportOfAListOfNamedPortfolioStructureHasCorrectNamesAndIdentation stamp: 'EMI 11/16/2020 16:37:11'!
PASSED!

!testRun: #PortfolioStructureReportTest #test05ReportOfAListOfNamedPortfolioStructureHasCorrectNamesAndIdentation stamp: 'EMI 11/16/2020 16:37:11'!
PASSED!
!AccountSpecialReportTest class methodsFor: 'nil' stamp: 'EMI 11/16/2020 16:37:32'!
identString: aString byLevel: anIdentationLevel
	^aString identByAmount: Report identationSpacesPerLevel * anIdentationLevel! !
!AccountSpecialReportTest methodsFor: 'tests' stamp: 'EMI 11/16/2020 16:38:04' prior: 50915288!
test01EmptyPortfolioOnlyShowsName
	| portfolio report expectedResult |
	portfolio _ Portfolio new.
	report _ AccountSpecialReport of: portfolio.
	expectedResult _ OrderedCollection with: 'Portfolio de Unnamed Portfolio'
								    with: (self class identString: 'Balance = 0' byLevel: 1).
	self assert: report report equals: expectedResult.! !

!testRun: #AccountSpecialReportTest #test01EmptyPortfolioOnlyShowsName stamp: 'EMI 11/16/2020 16:38:07'!
PASSED!
!AccountSpecialReportTest methodsFor: 'tests' stamp: 'EMI 11/16/2020 16:39:30' prior: 50915303!
test02PortfolioWithAnAccountWithADepositShowsNamesAndIdentation
	| portfolio account report expectedResult |
	portfolio _ Portfolio withName: 'Compania de Pepe'.
	account _ ReceptiveAccount withName: 'Suiza'.
	Deposit register: 10 on: account.
	portfolio add: account.
	report _ AccountSpecialReport of: portfolio.
	expectedResult _ OrderedCollection with: 'Portfolio de Compania de Pepe' 
								    with: (self class indentString: 'Cuenta de Suiza' byLevel:1) 
								    with: ('Dep�sito por 10.' identByAmount: Report identationSpacesPerLevel * 2) 
								    with: ('Balance = 10.' identByAmount: Report identationSpacesPerLevel * 2)
								    with: ('Balance = 10' identByAmount: Report identationSpacesPerLevel * 1).
	self assert: report report equals: expectedResult.! !
!AccountSpecialReportTest methodsFor: 'tests' stamp: 'EMI 11/16/2020 16:40:15' prior: 50915604!
test02PortfolioWithAnAccountWithADepositShowsNamesAndIdentation
	| portfolio account report expectedResult |
	portfolio _ Portfolio withName: 'Compania de Pepe'.
	account _ ReceptiveAccount withName: 'Suiza'.
	Deposit register: 10 on: account.
	portfolio add: account.
	report _ AccountSpecialReport of: portfolio.
	expectedResult _ OrderedCollection with: 'Portfolio de Compania de Pepe' 
								    with: (self class identString: 'Cuenta de Suiza' byLevel:1) 
								    with: (self class identString: 'Dep�sito por 10.' byLevel: 2) 
								    with: (self class identString: 'Balance = 10.'  byLevel: 2)
								    with: ('Balance = 10' identByAmount: Report identationSpacesPerLevel * 1).
	self assert: report report equals: expectedResult.! !
!AccountSpecialReportTest methodsFor: 'tests' stamp: 'EMI 11/16/2020 16:40:38' prior: 50915632!
test02PortfolioWithAnAccountWithADepositShowsNamesAndIdentation
	| portfolio account report expectedResult |
	portfolio _ Portfolio withName: 'Compania de Pepe'.
	account _ ReceptiveAccount withName: 'Suiza'.
	Deposit register: 10 on: account.
	portfolio add: account.
	report _ AccountSpecialReport of: portfolio.
	expectedResult _ OrderedCollection with: 'Portfolio de Compania de Pepe' 
								    with: (self class identString: 'Cuenta de Suiza' byLevel:1) 
								    with: (self class identString: 'Dep�sito por 10.' byLevel: 2) 
								    with: (self class identString: 'Balance = 10.' byLevel: 2)
								    with: (self class identString: 'Balance = 10' byLevel: 1).
	self assert: report report equals: expectedResult.! !

!testRun: #AccountSpecialReportTest #test02PortfolioWithAnAccountWithADepositShowsNamesAndIdentation stamp: 'EMI 11/16/2020 16:40:39'!
PASSED!

!testRun: #AccountSpecialReportTest #test01EmptyPortfolioOnlyShowsName stamp: 'EMI 11/16/2020 16:40:39'!
PASSED!

!testRun: #AccountSpecialReportTest #test02PortfolioWithAnAccountWithADepositShowsNamesAndIdentation stamp: 'EMI 11/16/2020 16:40:39'!
PASSED!
!AccountSpecialReportTest methodsFor: 'tests' stamp: 'EMI 11/16/2020 16:41:34'!
test03PortfolioWithAnEmptyPortfolioAndAnAccountWithADepositShowsNamesAndIdentation
	| portfolio account report expectedResult |
	portfolio _ Portfolio withName: 'Compania de Pepe'.
	account _ ReceptiveAccount withName: 'Suiza'.
	Deposit register: 10 on: account.
	portfolio add: account.
	report _ AccountSpecialReport of: portfolio.
	expectedResult _ OrderedCollection with: 'Portfolio de Compania de Pepe' 
								    with: (self class identString: 'Cuenta de Suiza' byLevel:1) 
								    with: (self class identString: 'Dep�sito por 10.' byLevel: 2) 
								    with: (self class identString: 'Balance = 10.' byLevel: 2)
								    with: (self class identString: 'Balance = 10' byLevel: 1).
	self assert: report report equals: expectedResult.! !
!AccountSpecialReportTest methodsFor: 'tests' stamp: 'EMI 11/16/2020 16:41:54' prior: 50915698!
test03PortfolioWithAnEmptyPortfolioAndAnAccountWithADepositShowsNamesAndIdentation
	| portfolio portfolioChild account report expectedResult |
	portfolio _ Portfolio withName: 'Compania de Pepe'.
	account _ ReceptiveAccount withName: 'Suiza'.
	Deposit register: 10 on: account.
	portfolio add: account.
	report _ AccountSpecialReport of: portfolio.
	expectedResult _ OrderedCollection with: 'Portfolio de Compania de Pepe' 
								    with: (self class identString: 'Cuenta de Suiza' byLevel:1) 
								    with: (self class identString: 'Dep�sito por 10.' byLevel: 2) 
								    with: (self class identString: 'Balance = 10.' byLevel: 2)
								    with: (self class identString: 'Balance = 10' byLevel: 1).
	self assert: report report equals: expectedResult.! !
!AccountSpecialReportTest methodsFor: 'tests' stamp: 'EMI 11/16/2020 16:42:40' prior: 50915725!
test03PortfolioWithAnEmptyPortfolioAndAnAccountWithADepositShowsNamesAndIdentation
	| portfolio portfolioChild account report expectedResult |
	portfolio _ Portfolio withName: 'Compania de Pepe'.
	portfolioChild _ Portfolio withName: 'Testaferro de Pepe'.
	portfolio add: portfolioChild.
	account _ ReceptiveAccount withName: 'Suiza'.
	Deposit register: 10 on: account.
	portfolio add: account.
	report _ AccountSpecialReport of: portfolio.
	expectedResult _ OrderedCollection with: 'Portfolio de Compania de Pepe' 
								    with: (self class identString: 'Cuenta de Suiza' byLevel:1) 
								    with: (self class identString: 'Dep�sito por 10.' byLevel: 2) 
								    with: (self class identString: 'Balance = 10.' byLevel: 2)
								    with: (self class identString: 'Balance = 10' byLevel: 1).
	self assert: report report equals: expectedResult.! !
!AccountSpecialReportTest methodsFor: 'tests' stamp: 'EMI 11/16/2020 16:44:24' prior: 50915753!
test03PortfolioWithAnEmptyPortfolioAndAnAccountWithADepositShowsNamesAndIdentation
	| portfolio portfolioChild account report expectedResult |
	portfolio _ Portfolio withName: 'Compania de Pepe'.
	portfolioChild _ Portfolio withName: 'Testaferro de Pepe'.
	portfolio add: portfolioChild.
	account _ ReceptiveAccount withName: 'Suiza'.
	Deposit register: 10 on: account.
	portfolio add: account.
	report _ AccountSpecialReport of: portfolio.
	expectedResult _ OrderedCollection with: 'Portfolio de Compania de Pepe'
								    with: (self class identString: 'Portfolio de Testaferro de Pepe' byLevel:1) 
								    with: (self class identString: 'Balance = 0' byLevel:2)
								    with: (self class identString: 'Cuenta de Suiza' byLevel:1) 
								    with: (self class identString: 'Dep�sito por 10.' byLevel: 2) 
								    with: (self class identString: 'Balance = 10.' byLevel: 2).
	expectedResult add: (self class identString: 'Balance = 10' byLevel: 1).
	self assert: report report equals: expectedResult.! !

!testRun: #AccountSpecialReportTest #test03PortfolioWithAnEmptyPortfolioAndAnAccountWithADepositShowsNamesAndIdentation stamp: 'EMI 11/16/2020 16:44:38'!
PASSED!
!AccountSpecialReportTest methodsFor: 'tests' stamp: 'EMI 11/16/2020 16:45:01'!
test04PortfolioWithAPortfolioAndAnAccountWithADepositShowsNamesAndIdentation
	| portfolio portfolioChild account report expectedResult |
	portfolio _ Portfolio withName: 'Compania de Pepe'.
	portfolioChild _ Portfolio withName: 'Testaferro de Pepe'.
	portfolio add: portfolioChild.
	account _ ReceptiveAccount withName: 'Suiza'.
	Deposit register: 10 on: account.
	portfolio add: account.
	report _ AccountSpecialReport of: portfolio.
	expectedResult _ OrderedCollection with: 'Portfolio de Compania de Pepe'
								    with: (self class identString: 'Portfolio de Testaferro de Pepe' byLevel:1) 
								    with: (self class identString: 'Balance = 0' byLevel:2)
								    with: (self class identString: 'Cuenta de Suiza' byLevel:1) 
								    with: (self class identString: 'Dep�sito por 10.' byLevel: 2) 
								    with: (self class identString: 'Balance = 10.' byLevel: 2).
	expectedResult add: (self class identString: 'Balance = 10' byLevel: 1).
	self assert: report report equals: expectedResult.! !
!AccountSpecialReportTest methodsFor: 'tests' stamp: 'EMI 11/16/2020 16:45:14' prior: 50915823!
test04PortfolioWithAPortfolioAndAnAccountWithADepositShowsNamesAndIdentation
	| portfolio portfolioChild account report expectedResult |
	portfolio _ Portfolio withName: 'Compania de Pepe'.
	portfolioChild _ Portfolio withName: 'Testaferro de Pepe'.
	portfolio add: portfolioChild.
	account _ ReceptiveAccount withName: 'Suiza'.
	Deposit register: 10 on: account.
	portfolioChild add: account.
	report _ AccountSpecialReport of: portfolio.
	expectedResult _ OrderedCollection with: 'Portfolio de Compania de Pepe'
								    with: (self class identString: 'Portfolio de Testaferro de Pepe' byLevel:1) 
								    with: (self class identString: 'Balance = 0' byLevel:2)
								    with: (self class identString: 'Cuenta de Suiza' byLevel:1) 
								    with: (self class identString: 'Dep�sito por 10.' byLevel: 2) 
								    with: (self class identString: 'Balance = 10.' byLevel: 2).
	expectedResult add: (self class identString: 'Balance = 10' byLevel: 1).
	self assert: report report equals: expectedResult.! !
!AccountSpecialReportTest methodsFor: 'tests' stamp: 'EMI 11/16/2020 16:45:46' prior: 50915858!
test04PortfolioWithAPortfolioAndAnAccountWithADepositShowsNamesAndIdentation
	| portfolio portfolioChild account report expectedResult |
	portfolio _ Portfolio withName: 'Compania de Pepe'.
	portfolioChild _ Portfolio withName: 'Testaferro de Pepe'.
	portfolio add: portfolioChild.
	account _ ReceptiveAccount withName: 'Suiza'.
	Deposit register: 10 on: account.
	portfolioChild add: account.
	report _ AccountSpecialReport of: portfolio.
	expectedResult _ OrderedCollection with: 'Portfolio de Compania de Pepe'
								    with: (self class identString: 'Portfolio de Testaferro de Pepe' byLevel:1) 
								    with: (self class identString: 'Cuenta de Suiza' byLevel:1) 
								    with: (self class identString: 'Dep�sito por 10.' byLevel: 2)
								    with: (self class identString: 'Balance = 10.' byLevel: 2)
								    with: (self class identString: 'Balance = 0' byLevel:2).
	expectedResult add: (self class identString: 'Balance = 10' byLevel: 1).
	self assert: report report equals: expectedResult.! !
!AccountSpecialReportTest methodsFor: 'tests' stamp: 'EMI 11/16/2020 16:46:08' prior: 50915893!
test04PortfolioWithAPortfolioAndAnAccountWithADepositShowsNamesAndIdentation
	| portfolio portfolioChild account report expectedResult |
	portfolio _ Portfolio withName: 'Compania de Pepe'.
	portfolioChild _ Portfolio withName: 'Testaferro de Pepe'.
	portfolio add: portfolioChild.
	account _ ReceptiveAccount withName: 'Suiza'.
	Deposit register: 10 on: account.
	portfolioChild add: account.
	report _ AccountSpecialReport of: portfolio.
	expectedResult _ OrderedCollection with: 'Portfolio de Compania de Pepe'
								    with: (self class identString: 'Portfolio de Testaferro de Pepe' byLevel:1) 
								    with: (self class identString: 'Cuenta de Suiza' byLevel:2) 
								    with: (self class identString: 'Dep�sito por 10.' byLevel:3)
								    with: (self class identString: 'Balance = 10.' byLevel: 3)
								    with: (self class identString: 'Balance = 10' byLevel:2).
	expectedResult add: (self class identString: 'Balance = 10' byLevel: 1).
	self assert: report report equals: expectedResult.! !

!testRun: #AccountSpecialReportTest #test04PortfolioWithAPortfolioAndAnAccountWithADepositShowsNamesAndIdentation stamp: 'EMI 11/16/2020 16:46:11'!
PASSED!

!testRun: #AccountSpecialReportTest #test01EmptyPortfolioOnlyShowsName stamp: 'EMI 11/16/2020 16:46:13'!
PASSED!

!testRun: #AccountSpecialReportTest #test02PortfolioWithAnAccountWithADepositShowsNamesAndIdentation stamp: 'EMI 11/16/2020 16:46:13'!
PASSED!

!testRun: #AccountSpecialReportTest #test03PortfolioWithAnEmptyPortfolioAndAnAccountWithADepositShowsNamesAndIdentation stamp: 'EMI 11/16/2020 16:46:13'!
PASSED!

!testRun: #AccountSpecialReportTest #test04PortfolioWithAPortfolioAndAnAccountWithADepositShowsNamesAndIdentation stamp: 'EMI 11/16/2020 16:46:13'!
PASSED!

!testRun: #PortfolioStructureReportTest #test01ReportOfAnEmptyPortfolioStructureHasCorrectName stamp: 'EMI 11/16/2020 16:46:24'!
PASSED!

!testRun: #PortfolioStructureReportTest #test02ReportOfASimplePortfolioStructureHasCorrectNamesAndIdentation stamp: 'EMI 11/16/2020 16:46:24'!
PASSED!

!testRun: #PortfolioStructureReportTest #test03ReportOfAListPortfolioStructureHasCorrectNamesAndIdentation stamp: 'EMI 11/16/2020 16:46:24'!
PASSED!

!testRun: #PortfolioStructureReportTest #test04ReportOfAListOfNamedPortfolioStructureHasCorrectNamesAndIdentation stamp: 'EMI 11/16/2020 16:46:24'!
PASSED!

!testRun: #PortfolioStructureReportTest #test05ReportOfAListOfNamedPortfolioStructureHasCorrectNamesAndIdentation stamp: 'EMI 11/16/2020 16:46:24'!
PASSED!

!testRun: #NetTransfersReportTest #test01NetTransferReportOfEmptyAccountReturnsZero stamp: 'EMI 11/16/2020 16:46:27'!
PASSED!

!testRun: #NetTransfersReportTest #test02NetTransferReportOfAccountWithADepositTransferReturnsCorrectly stamp: 'EMI 11/16/2020 16:46:27'!
PASSED!

!testRun: #NetTransfersReportTest #test03NetTransferReportOfAccountWithAExtractionTransferReturnsCorrectly stamp: 'EMI 11/16/2020 16:46:27'!
PASSED!

!testRun: #NetTransfersReportTest #test04NetTransferReportOfAccountWithADepositReturnsZero stamp: 'EMI 11/16/2020 16:46:27'!
PASSED!

!testRun: #NetTransfersReportTest #test05NetTransferReportOfEmptyPortfolioReturnsZero stamp: 'EMI 11/16/2020 16:46:27'!
PASSED!

!testRun: #NetTransfersReportTest #test06NetTransferReportOfPortfolioWithAccountAndATransferReturnsCorrectly stamp: 'EMI 11/16/2020 16:46:27'!
PASSED!

!testRun: #NetTransfersReportTest #test07NetTransferReportOfPortfoliosWithAccountAndATransferReturnsCorrectly stamp: 'EMI 11/16/2020 16:46:27'!
PASSED!

!testRun: #NetTransfersReportTest #test08NetTransferReportOfPortfolioTreeOfHeightThreeReturnsCorrectly stamp: 'EMI 11/16/2020 16:46:27'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'EMI 11/16/2020 16:46:31'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'EMI 11/16/2020 16:46:31'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'EMI 11/16/2020 16:46:31'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'EMI 11/16/2020 16:46:31'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'EMI 11/16/2020 16:46:31'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'EMI 11/16/2020 16:46:31'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'EMI 11/16/2020 16:46:31'!
PASSED!

!testRun: #ReceptiveAccountTest #test08AccountCanTransferToAnotherAccountWithPositiveAmount stamp: 'EMI 11/16/2020 16:46:31'!
PASSED!

!testRun: #ReceptiveAccountTest #test09AccountsWithTransferKnowsOriginAndDestination stamp: 'EMI 11/16/2020 16:46:31'!
PASSED!

!testRun: #ReceptiveAccountTest #test10AccountsCannotTransferInvalidAmounts stamp: 'EMI 11/16/2020 16:46:31'!
PASSED!

!testRun: #ReceptiveAccountTest #test11AccountsCannotTransferToThemselves stamp: 'EMI 11/16/2020 16:46:31'!
PASSED!

!testRun: #ReceptiveAccountTest #test12AccountHasDefaultName stamp: 'EMI 11/16/2020 16:46:31'!
PASSED!

!testRun: #ReceptiveAccountTest #test13CanCreateAccountWithName stamp: 'EMI 11/16/2020 16:46:31'!
PASSED!

!testRun: #AccountSummaryTest #test01AccountSummaryOfEmptyAccountOnlyShowsBalance stamp: 'EMI 11/16/2020 16:46:36'!
PASSED!

!testRun: #AccountSummaryTest #test02AccountSummaryOfAccountWithADepositShowDepositInfo stamp: 'EMI 11/16/2020 16:46:36'!
PASSED!

!testRun: #AccountSummaryTest #test03AccountSummaryOfAccountWithAWithdrawShowWithdrawInfo stamp: 'EMI 11/16/2020 16:46:36'!
PASSED!

!testRun: #AccountSummaryTest #test04AccountSummaryOfAccountWithAExtractionTransferShowExtractionTransferInfo stamp: 'EMI 11/16/2020 16:46:36'!
PASSED!

!testRun: #AccountSummaryTest #test05AccountSummaryOfAccountWithADepositTransferShowDepositTransferInfo stamp: 'EMI 11/16/2020 16:46:36'!
PASSED!

!testRun: #AccountSummaryTest #test06AccountSummaryOfAccountWithOneOfEachTransactionShowsCorrectInfo stamp: 'EMI 11/16/2020 16:46:36'!
PASSED!

!testRun: #AccountSummaryTest #test07AccountSummaryOfEmptyPortfolioOnlyShowsBalance stamp: 'EMI 11/16/2020 16:46:36'!
PASSED!

!testRun: #AccountSummaryTest #test08AccountSummaryOfPortfolioWithADeposit stamp: 'EMI 11/16/2020 16:46:36'!
PASSED!

!testRun: #AccountSummaryTest #test09AccountSummaryOfPortfolioWithAWithdraw stamp: 'EMI 11/16/2020 16:46:36'!
PASSED!

!testRun: #AccountSummaryTest #test10AccountSummaryOfPortfolioWithADepositTransfer stamp: 'EMI 11/16/2020 16:46:36'!
PASSED!

!testRun: #AccountSummaryTest #test11AccountSummaryOfPortfolioWithAExtractionTransfer stamp: 'EMI 11/16/2020 16:46:36'!
PASSED!

----SNAPSHOT----(16 November 2020 16:46:39) CuisUniversity-4383.image priorSource: 18675646!

----QUIT----(16 November 2020 16:46:41) CuisUniversity-4383.image priorSource: 18703622!

----STARTUP---- (16 November 2020 16:47:28) as /home/doraserver/CuisUniversity/CuisUniversity-4383.image!


----QUIT----(16 November 2020 16:47:32) CuisUniversity-4383.image priorSource: 18703716!

----STARTUP---- (16 November 2020 16:46:47) as /home/doraserver/CuisUniversity/CuisUniversity-4383.image!


----QUIT----(16 November 2020 16:47:36) CuisUniversity-4383.image priorSource: 18703716!

----STARTUP---- (16 November 2020 16:47:47) as /home/doraserver/CuisUniversity/CuisUniversity-4383.image!


----SNAPSHOT----(16 November 2020 16:47:50) CuisUniversity-4383.image priorSource: 18704112!